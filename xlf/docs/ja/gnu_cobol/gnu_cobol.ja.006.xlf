<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="gnu_cobol">
    <body>
      <group id="gnu_cobol">
        <trans-unit id="f547dc12438ab22b5b500d3ffc787450b4c04c18" translate="yes" xml:space="preserve">
          <source>Multiple-item search strings can be specified using the &lt;code&gt;==&lt;var&gt;pseudo-text-1&lt;/var&gt;==&lt;/code&gt; option. For example, to replace all occurrences of &lt;code&gt;UPON PRINTER&lt;/code&gt;, you would specify &lt;code&gt;==UPON PRINTER==&lt;/code&gt;.</source>
          <target state="translated">複数項目の検索文字列は、 &lt;code&gt;==&lt;var&gt;pseudo-text-1&lt;/var&gt;==&lt;/code&gt; オプションを使用して指定できます。たとえば、 &lt;code&gt;UPON PRINTER&lt;/code&gt; のすべてのオカレンスを置き換えるには、 &lt;code&gt;==UPON PRINTER==&lt;/code&gt; 指定します。</target>
        </trans-unit>
        <trans-unit id="0c9327341de5e837b95068cae1399d3901498283" translate="yes" xml:space="preserve">
          <source>Multiple-item search strings can be specified using the&lt;code&gt;==&amp;lt;&lt;i&gt;pseudo-text-1&lt;/i&gt;&amp;gt;==&lt;/code&gt;option. For example, to replace all occurrences of&lt;code&gt;UPON PRINTER&lt;/code&gt; you would specify&lt;code&gt;==UPON PRINTER==&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;==&amp;lt;&lt;i&gt;pseudo-text-1&lt;/i&gt;&amp;gt;==&lt;/code&gt; オプションを使用して、複数項目の検索文字列を指定できます。たとえば、 &lt;code&gt;UPON PRINTER&lt;/code&gt; のすべての出現を置き換えるには、 &lt;code&gt;==UPON PRINTER==&lt;/code&gt; 指定します。</target>
        </trans-unit>
        <trans-unit id="512c7a9b64ee7852d8007b60e8e382406285cb64" translate="yes" xml:space="preserve">
          <source>Multiple&lt;code&gt;/&lt;/code&gt;symbols may be coded.</source>
          <target state="translated">複数の &lt;code&gt;/&lt;/code&gt; 記号をコーディングできます。</target>
        </trans-unit>
        <trans-unit id="1bb573db89249b4de6d85f0d6303b423ef55f890" translate="yes" xml:space="preserve">
          <source>Multiple&lt;code&gt;0&lt;/code&gt;symbols may be coded.</source>
          <target state="translated">複数の &lt;code&gt;0&lt;/code&gt; シンボルをコーディングできます。</target>
        </trans-unit>
        <trans-unit id="4e4e78bcc251379bcccaef2662ec5c92b786e53d" translate="yes" xml:space="preserve">
          <source>Multiple&lt;code&gt;B&lt;/code&gt;symbols may be coded.</source>
          <target state="translated">複数の &lt;code&gt;B&lt;/code&gt; シンボルをコーディングできます。</target>
        </trans-unit>
        <trans-unit id="4272ab5411f12b91ef6d0e34934e3b2c6d362159" translate="yes" xml:space="preserve">
          <source>Multiply the result of this function times the desired principal amount to determine the amount of each period&amp;rsquo;s payment.</source>
          <target state="translated">この関数の結果に希望する元本を掛けて、各期間の支払い額を決定します。</target>
        </trans-unit>
        <trans-unit id="ebfd18b697456992a7cea5cfb0d97d2bdb52017d" translate="yes" xml:space="preserve">
          <source>Murach&amp;rsquo;s Structured COBOL</source>
          <target state="translated">Murachの構造化COBOL</target>
        </trans-unit>
        <trans-unit id="4afe19d4a7d70ea4349c430b39697da2f281257d" translate="yes" xml:space="preserve">
          <source>My familiarity with COBOL may be prejudicing my opinion, but it doesn&amp;rsquo;t appear to me that the Java code is any simpler than the COBOL code. In case you&amp;rsquo;re interested in character counts, the Java code comes in at 278 (not counting indentation characters). The COBOL code is 298 (274 without the &lt;code&gt;IDENTIFICATION DIVISION.&lt;/code&gt; header).</source>
          <target state="translated">私がCOBOLに精通していることは私の意見を損なうかもしれませんが、JavaコードがCOBOLコードよりも単純であるようには思えません。文字数に関心がある場合、Javaコードは278で入力されます（インデント文字はカウントされません）。COBOLコードは298（ &lt;code&gt;IDENTIFICATION DIVISION.&lt;/code&gt; ヘッダーなしの274 ）です。</target>
        </trans-unit>
        <trans-unit id="257327ddfd98406ae03a0f3e1b7b410f8b01fe5e" translate="yes" xml:space="preserve">
          <source>My familiarity with COBOL may be prejudicing my opinion, but it doesn&amp;rsquo;t appear to me that the Java code is any simpler than the COBOL code. In case you&amp;rsquo;re interested in character counts, the Java code comes in at 278 (not counting indentation characters). The COBOL code is 298 (274 without the&lt;code&gt;IDENTIFICATION DIVISION.&lt;/code&gt;header).</source>
          <target state="translated">COBOLに精通していることが私の意見を害するかもしれませんが、JavaコードがCOBOLコードよりも単純であるようには思えません。文字カウントに関心がある場合は、Javaコードは278にあります（インデント文字はカウントしません）。COBOLコードは298（ &lt;code&gt;IDENTIFICATION DIVISION.&lt;/code&gt; ヘッダーなしの274 ）です。</target>
        </trans-unit>
        <trans-unit id="b51a60734da64be0e618bacbea2865a8a7dcd669" translate="yes" xml:space="preserve">
          <source>N</source>
          <target state="translated">N</target>
        </trans-unit>
        <trans-unit id="4813c2e244b49602a6107537b9c8810d6cb7377f" translate="yes" xml:space="preserve">
          <source>N/2</source>
          <target state="translated">N/2</target>
        </trans-unit>
        <trans-unit id="8841ca9cf4a3d6697ad899f49ceee826a96da464" translate="yes" xml:space="preserve">
          <source>N/A (no GnuCOBOL equivalent)</source>
          <target state="translated">N/A (GnuCOBOL と同等のものはありません)</target>
        </trans-unit>
        <trans-unit id="456048850e9d09e5cbfde5c2a6be5799c526a49a" translate="yes" xml:space="preserve">
          <source>NAME, NATIONAL, NATIONAL-EDITED, NATIONAL-OF, NATIVE, NEAREST-AWAY-FROM-ZERO, NEAREST-EVEN, NEAREST-TOWARD-ZERO, NEGATIVE, NESTED, NEXT, NO, NO-ECHO, NONE, NORMAL, NOT, NOTHING, NULL, NULLS, NUMBER, NUMBER-OF-CALL-PARAMETERS, NUMBERS, NUMERIC, NUMERIC-DECIMAL-POINT, NUMERIC-EDITED, NUMERIC-THOUSANDS-SEPARATOR, NUMVAL, NUMVAL-C, NUMVAL-F</source>
          <target state="translated">名前、NATIONAL、NATIONAL-EDITED、NATIONAL-OF、NATIVE、NEAREST-AWAY-from-ZERO、NEAREST-EVEN、NEAREST-TOWARD-ZERO、NEGATIVE、NESTED、NEXT、NO、NO-ECHO、NONE、NORMAL、NOT、NOT、NOTHING、NULL、NULLS、NUMBER、NUMBER-OF-CALL-PARAMETERS、NUMBERS、NUMERIC、NUMERIC-DECIMAL-POINT、NUMERIC-EDITED、NUMERIC-THOUSANDS-SEPARATOR、NUMVAL、NUMVAL-C、NUMVAL-F</target>
        </trans-unit>
        <trans-unit id="12a4ea36a49cd885f134496f6c7b205e0d1b8c27" translate="yes" xml:space="preserve">
          <source>NAME, NATIONAL-EDITED, NATIONAL-OF, NATIONAL, NATIVE, NAVIGATE-URL, NEAREST-AWAY-FROM-ZERO, NEAREST-EVEN, NEAREST-TOWARD-ZERO, NEGATIVE, NESTED, NEW, NEXT-ITEM, NEXT, NO-AUTO-DEFAULT, NO-AUTOSEL, NO-BOX, NO-DIVIDERS, NO-ECHO, NO-F4, NO-FOCUS, NO-GROUP-TAB, NO-KEY-LETTER, NONE, NORMAL, NO-SEARCH, NOTAB, NOTHING, NOTIFY-CHANGE, NOTIFY-DBLCLICK, NOTIFY-SELCHANGE, NOTIFY, NOT, NO-UPDOWN, NO, NULLS, NULL, NUMBER-OF-CALL-PARAMETERS, NUMBERS, NUMBER, NUM-COL-HEADINGS, NUMERIC-DECIMAL-POINT, NUMERIC-EDITED, NUMERIC-THOUSANDS-SEPARATOR, NUMERIC, NUM-ROWS, NUMVAL-C, NUMVAL-F, NUMVAL</source>
          <target state="translated">名前、NATIONAL-EDITED、NATIONAL-OF、NATIONAL、NATIVE、NAVIGATE-URL、NEAREST-AWAY-FROM-ZERO、NEAREST-EVEN、NEAREST-TOWARD-ZERO、NEGATIVE、NESTED、NEW、NEXT-ITEM、NEXT、NO-AUTO-DEFAULT、NO-AUTOSEL、NO-BOX、NO-DIVIDERS、NO-ECHO、NO-F4、NO-FOCUS、NO-GROUP-TAB、NO-KEY-LETTER、NONE、NORMAL。NO-SEARCH,NOTAB,NOTHING,NOTIFY-CHANGE,NOTIFY-DBLCLICK,NOTIFY-SELCHANGE,NOTIFY,NOT,NOT,NO-UPDOWN,NO,NULLS,NULL,NUMBER-OF-CALL-PARAMETERS,NUMBERS,NUMBER,NUM-COL-HEADINGS,NUMERIC-DECIMAL-POINT,NUMERIC-EDITED,NUMERIC-HOUSANDS-SEPARATOR,NUMERIC,NUM-ROWS,NUMVAL-C,NUMVAL-F,NUMVAL</target>
        </trans-unit>
        <trans-unit id="f949d8c36379cf9fe5e5fb919bc3184c4b16697b" translate="yes" xml:space="preserve">
          <source>NATIONAL</source>
          <target state="translated">NATIONAL</target>
        </trans-unit>
        <trans-unit id="fae23f1189e3d3029fc3bbc84fee5a14e571aa43" translate="yes" xml:space="preserve">
          <source>NATIONAL-EDITED</source>
          <target state="translated">NATIONAL-EDITED</target>
        </trans-unit>
        <trans-unit id="2ded80afcde5b3617fd0cdaa426a25c2c07b25aa" translate="yes" xml:space="preserve">
          <source>NATIONAL-OF Function Syntax</source>
          <target state="translated">NATIONAL-OF 関数構文</target>
        </trans-unit>
        <trans-unit id="9f621eb5fd3bcb2fa5c7bd228c9b1ad42edc46c8" translate="yes" xml:space="preserve">
          <source>NEWS</source>
          <target state="translated">NEWS</target>
        </trans-unit>
        <trans-unit id="23579a7244afbe343b0ef7777f40fe65dd6d391f" translate="yes" xml:space="preserve">
          <source>NEXT-GROUP Clause Syntax</source>
          <target state="translated">NEXT-GROUP節構文</target>
        </trans-unit>
        <trans-unit id="26eb9f7afcd3204c7dddc57725c1467cf0c79148" translate="yes" xml:space="preserve">
          <source>NO Field</source>
          <target state="translated">NOフィールド</target>
        </trans-unit>
        <trans-unit id="4fd04833b3755cfdf59219f364a4c19cf95dcc36" translate="yes" xml:space="preserve">
          <source>NO-ECHO Attribute Syntax</source>
          <target state="translated">NO-ECHO 属性構文</target>
        </trans-unit>
        <trans-unit id="969e7d8dee132181523a501a068fec75bded3005" translate="yes" xml:space="preserve">
          <source>NOT</source>
          <target state="translated">NOT</target>
        </trans-unit>
        <trans-unit id="a9ea4f7a4f03a9c52a7aa0d54a54e0ee6d21feed" translate="yes" xml:space="preserve">
          <source>NOTE that CBL_GC_PRINTABLE replaces this although it is currently still supported for legacy reasons.</source>
          <target state="translated">注:CBL_GC_PRINTABLEはこれに取って代わるものですが、レガシーな理由で現在もサポートされています。</target>
        </trans-unit>
        <trans-unit id="58ad270de77802cc63222e273fa800c4b248cdd7" translate="yes" xml:space="preserve">
          <source>NUMERIC</source>
          <target state="translated">NUMERIC</target>
        </trans-unit>
        <trans-unit id="1c7a5d29d866f9947d87ce89b623e7dcee44fb1b" translate="yes" xml:space="preserve">
          <source>NUMERIC-DECIMAL-POINT Function Syntax</source>
          <target state="translated">目標値-小数点 関数構文</target>
        </trans-unit>
        <trans-unit id="6517b42cd023209f5cc4861083a3c58f87384484" translate="yes" xml:space="preserve">
          <source>NUMERIC-EDITED</source>
          <target state="translated">NUMERIC-EDITED</target>
        </trans-unit>
        <trans-unit id="0f7032d6214932877eaeb90684d8b5e91b84fe2d" translate="yes" xml:space="preserve">
          <source>NUMERIC-THOUSANDS-SEPARATOR Function Syntax</source>
          <target state="translated">目標数-千人-セパレータ 関数構文</target>
        </trans-unit>
        <trans-unit id="24a2cb0031362dfda9217165484fefd16498a931" translate="yes" xml:space="preserve">
          <source>NUMVAL Function Syntax</source>
          <target state="translated">NUMVAL 関数構文</target>
        </trans-unit>
        <trans-unit id="31988bddc5cc6a4166042e84de6cbd874cb74a99" translate="yes" xml:space="preserve">
          <source>NUMVAL-C Function Syntax</source>
          <target state="translated">NUMVAL-C 関数構文</target>
        </trans-unit>
        <trans-unit id="ae21c526020f5a22401b17f7aa4bfb1762439159" translate="yes" xml:space="preserve">
          <source>NUMVAL-F Function Syntax</source>
          <target state="translated">NUMVAL-F 関数構文</target>
        </trans-unit>
        <trans-unit id="057d3c3f4e6e8dc1ec58c53e9789c01dd0b62e89" translate="yes" xml:space="preserve">
          <source>National Character set</source>
          <target state="translated">国民性セット</target>
        </trans-unit>
        <trans-unit id="d7d37c587c780599f710ed6affbe68a1bcf357e7" translate="yes" xml:space="preserve">
          <source>National Literals (Hexadecimal) &lt;code&gt;NX&quot;&lt;var&gt; character &lt;/var&gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">National Literals（Hexadecimal） &lt;code&gt;NX&quot;&lt;var&gt; character &lt;/var&gt;&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6c447eed62bdd87000db9fc4992f2863a32144f5" translate="yes" xml:space="preserve">
          <source>National Literals (Standard) &lt;code&gt;N&quot;&lt;var&gt; character &lt;/var&gt;&quot;&lt;/code&gt; or &lt;code&gt;NC&quot;&lt;var&gt; character &lt;/var&gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">National Literals（Standard） &lt;code&gt;N&quot;&lt;var&gt; character &lt;/var&gt;&quot;&lt;/code&gt; または &lt;code&gt;NC&quot;&lt;var&gt; character &lt;/var&gt;&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4245f0ee71bd17093500ac16c41a1dd1b33008e5" translate="yes" xml:space="preserve">
          <source>Native Binary Integer</source>
          <target state="translated">ネイティブ2進整数</target>
        </trans-unit>
        <trans-unit id="3f00afda761d5e13a699220ac15df2aa008259c3" translate="yes" xml:space="preserve">
          <source>Native IEEE 754 Binary32</source>
          <target state="translated">ネイティブ IEEE 754 Binary32</target>
        </trans-unit>
        <trans-unit id="38d71bfaf2af5e86c02dd007bae5cd22e8350547" translate="yes" xml:space="preserve">
          <source>Native IEEE 754 Binary64 Floating-point</source>
          <target state="translated">ネイティブ IEEE 754 Binary64 浮動小数点</target>
        </trans-unit>
        <trans-unit id="4775cd57bf8ad48397acf03e156ee31bbc505817" translate="yes" xml:space="preserve">
          <source>Native IEEE 754 Decimal128 Floating-point</source>
          <target state="translated">ネイティブ IEEE 754 Decimal128 浮動小数点</target>
        </trans-unit>
        <trans-unit id="1579bca067a63e4a82df0092b6bb19e611a1879b" translate="yes" xml:space="preserve">
          <source>Native IEEE 754 Decimal64 Floating-point</source>
          <target state="translated">ネイティブ IEEE 754 Decimal64 浮動小数点</target>
        </trans-unit>
        <trans-unit id="663645109bc4810ff83f3fcb9242af60d6271f15" translate="yes" xml:space="preserve">
          <source>Native unsigned (X) or signed (9) Binary</source>
          <target state="translated">ネイティブ符号なし(X)または符号付き(9)バイナリ</target>
        </trans-unit>
        <trans-unit id="0bb1805002fe928c11731e2fe434c6710e0546aa" translate="yes" xml:space="preserve">
          <source>Negated Condition Syntax</source>
          <target state="translated">否定条件構文</target>
        </trans-unit>
        <trans-unit id="b258f825a32604b32cf66b5f27af5bbeed3d0dbd" translate="yes" xml:space="preserve">
          <source>Negative Values Allowed?:</source>
          <target state="translated">負の値は許可されていますか?</target>
        </trans-unit>
        <trans-unit id="569eabdf4b8f2757a51f46ddb9444a185ebc7cb4" translate="yes" xml:space="preserve">
          <source>Negative values are returned for system dependand error codes and -1 if the function is not available on the current system.</source>
          <target state="translated">システムに依存するエラーコードには負の値が返され、現在のシステムでこの関数が利用できない場合は -1 が返されます。</target>
        </trans-unit>
        <trans-unit id="e749bae177f75d382ea705f34562fdde16594e75" translate="yes" xml:space="preserve">
          <source>Negative values are returned for system dependant error codes and -1 if the function is not available on the current system.</source>
          <target state="translated">システムに依存するエラーコードの場合は負の値が返され、現在のシステムでこの関数が利用できない場合は -1 が返されます。</target>
        </trans-unit>
        <trans-unit id="fac968968fa4c7a06b3ca207e37616b4cf010c7c" translate="yes" xml:space="preserve">
          <source>Neither &amp;lt;</source>
          <target state="translated">どちらでもない</target>
        </trans-unit>
        <trans-unit id="498053453b61f2ca863574cf728e4c26d5207770" translate="yes" xml:space="preserve">
          <source>Neither &lt;code&gt;EXIT PROGRAM&lt;/code&gt; nor &lt;code&gt;EXIT FUNCTION&lt;/code&gt; may be used within a &lt;code&gt;USE GLOBAL&lt;/code&gt; routine in &lt;code&gt;DECLARATIVES&lt;/code&gt; (see &lt;a href=&quot;#DECLARATIVES&quot;&gt;DECLARATIVES&lt;/a&gt;).</source>
          <target state="translated">どちら &lt;code&gt;EXIT PROGRAM&lt;/code&gt; も &lt;code&gt;EXIT FUNCTION&lt;/code&gt; 内で使用することができる &lt;code&gt;USE GLOBAL&lt;/code&gt; にルーチン &lt;code&gt;DECLARATIVES&lt;/code&gt; （参照&lt;a href=&quot;#DECLARATIVES&quot;&gt;DECLARATIVESを&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="a648c3eef2063a295935657ca99ab8899d91bea3" translate="yes" xml:space="preserve">
          <source>Neither &lt;var&gt;argument-1&lt;/var&gt; nor &lt;var&gt;argument-2&lt;/var&gt; shall be a zero-length literal.</source>
          <target state="translated">&lt;var&gt;argument-1&lt;/var&gt; も &lt;var&gt;argument-2&lt;/var&gt; も、長さがゼロのリテラルであってはなりません。</target>
        </trans-unit>
        <trans-unit id="eecfe7e804c7ffe3b279ae24497f834970036015" translate="yes" xml:space="preserve">
          <source>Neither &lt;var&gt;data-item-1&lt;/var&gt; nor &lt;var&gt;data-item-2&lt;/var&gt; may be a &lt;code&gt;REDEFINES&lt;/code&gt; (see &lt;a href=&quot;#REDEFINES&quot;&gt;REDEFINES&lt;/a&gt;) or &lt;code&gt;RENAMES&lt;/code&gt; (see &lt;a href=&quot;#RENAMES&quot;&gt;RENAMES&lt;/a&gt;) of another data item.</source>
          <target state="translated">どちらの &lt;var&gt;data-item-1&lt;/var&gt; も &lt;var&gt;data-item-2&lt;/var&gt; であってもよい &lt;code&gt;REDEFINES&lt;/code&gt; （参照&lt;a href=&quot;#REDEFINES&quot;&gt;REDEFINESを&lt;/a&gt;）または &lt;code&gt;RENAMES&lt;/code&gt; （参照&lt;a href=&quot;#RENAMES&quot;&gt;RENAMESを&lt;/a&gt;別のデータ項目の）。</target>
        </trans-unit>
        <trans-unit id="c3f3857d67ae94f8d7cddd5329535889cff6638b" translate="yes" xml:space="preserve">
          <source>Neither &lt;var&gt;data-item-1&lt;/var&gt; nor &lt;var&gt;data-item-2&lt;/var&gt; may have an &lt;code&gt;OCCURS&lt;/code&gt; (see &lt;a href=&quot;#OCCURS&quot;&gt;OCCURS&lt;/a&gt;) clause, although either may contain subordinate data items that</source>
          <target state="translated">どちらの &lt;var&gt;data-item-1&lt;/var&gt; も &lt;var&gt;data-item-2&lt;/var&gt; 有していてもよい &lt;code&gt;OCCURS&lt;/code&gt; （SEEは&lt;a href=&quot;#OCCURS&quot;&gt;OCCURS&lt;/a&gt;その配下のデータ項目を含むことができるいずれかが、句）を</target>
        </trans-unit>
        <trans-unit id="929c909c77bbcdec7cb09699977c322ae8085237" translate="yes" xml:space="preserve">
          <source>Neither a another file-based &lt;code&gt;SORT&lt;/code&gt; statement nor a &lt;code&gt;MERGE&lt;/code&gt; statement may be executed within the input procedure unless those statements utilize a different sort or merge work file.</source>
          <target state="translated">別のファイルベースの &lt;code&gt;SORT&lt;/code&gt; ステートメントも &lt;code&gt;MERGE&lt;/code&gt; ステートメントも、それらのステートメントが別のソートまたはマージ作業ファイルを使用しない限り、入力プロシージャー内で実行することはできません。</target>
        </trans-unit>
        <trans-unit id="0fa3e63c5ae8e3d45d610e9d28aaa33d956a0776" translate="yes" xml:space="preserve">
          <source>Neither a another file-based &lt;code&gt;SORT&lt;/code&gt; statement nor a &lt;code&gt;MERGE&lt;/code&gt; statement may be executed within the output procedure unless those statements utilize a different sort or merge work file.</source>
          <target state="translated">別のファイルベースの &lt;code&gt;SORT&lt;/code&gt; ステートメントも &lt;code&gt;MERGE&lt;/code&gt; ステートメントも、それらのステートメントが別のソートまたはマージ作業ファイルを使用しない限り、出力プロシージャー内で実行することはできません。</target>
        </trans-unit>
        <trans-unit id="dcdcf73a59a8f2ad5bc285a8314df00761fcb686" translate="yes" xml:space="preserve">
          <source>Neither a another file-based&lt;code&gt;SORT&lt;/code&gt;statement nor a&lt;code&gt;MERGE&lt;/code&gt;statement may be executed within the input procedure unless those statements utilize a different sort or merge work file.</source>
          <target state="translated">別のファイルベースの &lt;code&gt;SORT&lt;/code&gt; ステートメントも &lt;code&gt;MERGE&lt;/code&gt; ステートメントも、別のソートまたはマージ作業ファイルを使用しない限り、入力プロシージャ内で実行できません。</target>
        </trans-unit>
        <trans-unit id="24fe46648b02cf0f40c1f64b86fe9a8a1b238380" translate="yes" xml:space="preserve">
          <source>Neither a another file-based&lt;code&gt;SORT&lt;/code&gt;statement nor a&lt;code&gt;MERGE&lt;/code&gt;statement may be executed within the output procedure unless those statements utilize a different sort or merge work file.</source>
          <target state="translated">別のファイルベースの &lt;code&gt;SORT&lt;/code&gt; ステートメントも &lt;code&gt;MERGE&lt;/code&gt; ステートメントも、それらが別のソートまたはマージ作業ファイルを使用しない限り、出力プロシージャ内で実行できません。</target>
        </trans-unit>
        <trans-unit id="084a96e3a60e16d19485d2d34359397510465247" translate="yes" xml:space="preserve">
          <source>Neither a file-based &lt;code&gt;SORT&lt;/code&gt; statement (see &lt;a href=&quot;#File_002dBased-SORT&quot;&gt;File-Based SORT&lt;/a&gt;) nor another &lt;code&gt;MERGE&lt;/code&gt; statement may be executed within the scope of the procedures comprising the output procedure unless those statements utilize a different sort or merge work file.</source>
          <target state="translated">ファイルベースの &lt;code&gt;SORT&lt;/code&gt; ステートメント（&lt;a href=&quot;#File_002dBased-SORT&quot;&gt;ファイルベースのSORTを&lt;/a&gt;参照）も別の &lt;code&gt;MERGE&lt;/code&gt; ステートメントも、それらのステートメントが別のソートまたはマージ作業ファイルを使用しない限り、出力プロシージャを構成するプロシージャのスコープ内で実行することはできません。</target>
        </trans-unit>
        <trans-unit id="1a3ec78fb2431caff148e7bb1cf8ea0ff18e700c" translate="yes" xml:space="preserve">
          <source>Neither a file-based&lt;code&gt;SORT&lt;/code&gt;statement (see &lt;a href=&quot;#File_002dBased-SORT&quot;&gt;File-Based SORT&lt;/a&gt;) nor another&lt;code&gt;MERGE&lt;/code&gt;statement may be executed within the scope of the procedures comprising the output procedure unless those statements utilize a different sort or merge work file.</source>
          <target state="translated">ファイルベースの &lt;code&gt;SORT&lt;/code&gt; ステートメント（&lt;a href=&quot;#File_002dBased-SORT&quot;&gt;ファイルベースのSORTを&lt;/a&gt;参照）または別の &lt;code&gt;MERGE&lt;/code&gt; ステートメントは、それらのステートメントが異なるソートまたはマージ作業ファイルを使用しない限り、出力プロシージャを構成するプロシージャのスコープ内で実行できません。</target>
        </trans-unit>
        <trans-unit id="09d241bd244c403aca378ac0d0df2d3a90b6406f" translate="yes" xml:space="preserve">
          <source>Neither the presence of an encoded digit (see above) nor an actual &amp;lsquo;</source>
          <target state="translated">エンコードされた数字（上記を参照）の存在も実際の 'もありません</target>
        </trans-unit>
        <trans-unit id="cc989bf49db06aa48ebb1422a2de0e6c00423d9d" translate="yes" xml:space="preserve">
          <source>Neither the presence of an encoded digit (see above) nor an actual&lt;code&gt;+&lt;/code&gt;or&lt;code&gt;-&lt;/code&gt;character embedded within the data item&amp;rsquo;s storage prevents the data item from being used as a source field in arithmetic operations.</source>
          <target state="translated">エンコードされた数字（上記を参照）の存在も、データ項目のストレージ内に埋め込まれた実際の &lt;code&gt;+&lt;/code&gt; または &lt;code&gt;-&lt;/code&gt; 文字も、データ項目が算術演算のソースフィールドとして使用されることを妨げません。</target>
        </trans-unit>
        <trans-unit id="f5e391e55efc04c3c0f99e29e799c743a6b88a5c" translate="yes" xml:space="preserve">
          <source>Neither the value of &amp;lt;</source>
          <target state="translated">&amp;lt;の値も</target>
        </trans-unit>
        <trans-unit id="8ba6eef8eac3b809b7c7d9d4c566295fcd67b555" translate="yes" xml:space="preserve">
          <source>Neither the value of &lt;var&gt;identifier-1&lt;/var&gt; nor &lt;var&gt;identifier-2&lt;/var&gt; will be altered, unless either appears as an &lt;var&gt;identifier-3&lt;/var&gt;.</source>
          <target state="translated">どちらかが &lt;var&gt;identifier-3&lt;/var&gt; として表示されない限り、 &lt;var&gt;identifier-2&lt;/var&gt; &lt;var&gt;identifier-1&lt;/var&gt; と識別子-2のどちらの値も変更されません。</target>
        </trans-unit>
        <trans-unit id="a8d23bd6a6b56505c754a0566832b43e6c7deddd" translate="yes" xml:space="preserve">
          <source>Neither&lt;code&gt;EXIT PROGRAM&lt;/code&gt;nor&lt;code&gt;EXIT FUNCTION&lt;/code&gt;may be used within a&lt;code&gt;USE GLOBAL&lt;/code&gt;routine in&lt;code&gt;DECLARATIVES&lt;/code&gt;(see &lt;a href=&quot;#DECLARATIVES&quot;&gt;DECLARATIVES&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;EXIT PROGRAM&lt;/code&gt; も &lt;code&gt;EXIT FUNCTION&lt;/code&gt; も、 &lt;code&gt;DECLARATIVES&lt;/code&gt; の &lt;code&gt;USE GLOBAL&lt;/code&gt; ルーチン内では使用できません（&lt;a href=&quot;#DECLARATIVES&quot;&gt;DECLARATIVESを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="2ef44da87cf7da408056f5b8df3aee8b08f3e63d" translate="yes" xml:space="preserve">
          <source>Nested Subprograms</source>
          <target state="translated">入れ子になったサブプログラム</target>
        </trans-unit>
        <trans-unit id="02345bc4e59618249ddd33b89a552e74eefc9cca" translate="yes" xml:space="preserve">
          <source>New programs requiring a stand-alone elementary item should be coded to use a level number of 01 rather than 77.</source>
          <target state="translated">単体の初級項目を必要とする新しいプログラムは、77ではなく01のレベル番号を使用するようにコード化されるべきである。</target>
        </trans-unit>
        <trans-unit id="2cb277bcf0e845a7751a4837a56f660c664aab62" translate="yes" xml:space="preserve">
          <source>Next, the &lt;code&gt;CONTROL HEADING&lt;/code&gt; for each &lt;var&gt;identifier-2&lt;/var&gt; having a control break (if any such report group is defined) will be presented.</source>
          <target state="translated">次に、コントロールブレークを持つ各 &lt;var&gt;identifier-2&lt;/var&gt; の &lt;code&gt;CONTROL HEADING&lt;/code&gt; （そのようなレポートグループが定義されている場合）が表示されます。</target>
        </trans-unit>
        <trans-unit id="cb2f4a912a9c59ceb0b74adc342b766667a643e7" translate="yes" xml:space="preserve">
          <source>Next, the&lt;code&gt;CONTROL HEADING&lt;/code&gt;for each &amp;lt;</source>
          <target state="translated">次に、各&amp;lt;の &lt;code&gt;CONTROL HEADING&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="816c52fd2bdd94a63cd0944823a6c0aa9384c103" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="translated">No</target>
        </trans-unit>
        <trans-unit id="25ca8cc06f258fc623523fef33154141cdf7a832" translate="yes" xml:space="preserve">
          <source>No &lt;code&gt;INVALID KEY&lt;/code&gt; or &lt;code&gt;NOT INVALID KEY&lt;/code&gt; clause may be specified for a file who&amp;rsquo;s &lt;code&gt;ACCESS MODE IS SEQUENTIAL&lt;/code&gt;.</source>
          <target state="translated">ノー &lt;code&gt;INVALID KEY&lt;/code&gt; または &lt;code&gt;NOT INVALID KEY&lt;/code&gt; の句だファイルに指定することができる &lt;code&gt;ACCESS MODE IS SEQUENTIAL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="139b832f1804c5099e18b43d42448f0f0b6e7c9b" translate="yes" xml:space="preserve">
          <source>No &lt;code&gt;OCCURS&lt;/code&gt; (see &lt;a href=&quot;#OCCURS&quot;&gt;OCCURS&lt;/a&gt;) clause may be part of the definition of either the subject or object data items. Either or both, however, may be group items that</source>
          <target state="translated">全く &lt;code&gt;OCCURS&lt;/code&gt; （参照が&lt;a href=&quot;#OCCURS&quot;&gt;OCCURS&lt;/a&gt;）句は、対象又は対象データ項目のいずれかの定義の一部であってもよいです。ただし、いずれかまたは両方がグループアイテムである可能性があります。</target>
        </trans-unit>
        <trans-unit id="acf76423a3c2a77929eaada12f5c72ae1776e93a" translate="yes" xml:space="preserve">
          <source>No &lt;code&gt;VALUE&lt;/code&gt; (see &lt;a href=&quot;#VALUE&quot;&gt;VALUE&lt;/a&gt;) clause may be defined on the object data item, and no data items subordinate to the object data item may have &lt;code&gt;VALUE&lt;/code&gt; clauses, with the exception of level-88 condition names.</source>
          <target state="translated">いいえ &lt;code&gt;VALUE&lt;/code&gt; （参照&lt;a href=&quot;#VALUE&quot;&gt;値&lt;/a&gt;）句は、オブジェクトデータ項目に定義されてもよいし、オブジェクトデータ項目に従属ないデータ項目が有していなくてもよい &lt;code&gt;VALUE&lt;/code&gt; のレベル88条件名を除いて、句。</target>
        </trans-unit>
        <trans-unit id="1a6b2761c5a03cb41776cc1a48760cf197b63fc7" translate="yes" xml:space="preserve">
          <source>No data is available on screen ACCEPT</source>
          <target state="translated">画面上にデータがありません ACCEPT</target>
        </trans-unit>
        <trans-unit id="4062206b6830d356f4eb1c6e0802aad55b74b161" translate="yes" xml:space="preserve">
          <source>No more than 251 arguments may be passed to a subroutine, unless the GnuCOBOL compiler was built with a specifically different argument limit specified for it. If you have access to the GnuCOBOL source code, you may adjust this limit by changing the value of the &lt;code&gt;COB_MAX_FIELD_PARAMS&lt;/code&gt; in the</source>
          <target state="translated">GnuCOBOLコンパイラが特に異なる引数制限を指定して構築されていない限り、251個を超える引数をサブルーチンに渡すことはできません。あなたはGnuCOBOLのソースコードへのアクセス権を持っている場合は、値の変更により、この制限を調整することができる &lt;code&gt;COB_MAX_FIELD_PARAMS&lt;/code&gt; を中</target>
        </trans-unit>
        <trans-unit id="22f4fdea4baac33f85e6d27a113ce40e1b051a05" translate="yes" xml:space="preserve">
          <source>No more than 36 arguments may be passed to a subroutine, unless the GnuCOBOL compiler was built with a specifically different argument limit specified for it. If you have access to the GnuCOBOL source code, you may adjust this limit by changing the value of the&lt;code&gt;COB_MAX_FIELD_PARAMS&lt;/code&gt;in the&lt;code&gt;common.h&lt;/code&gt;file (found in the&lt;code&gt;libcob&lt;/code&gt;folder) before you run&lt;code&gt;make&lt;/code&gt;to build the compiler and run-time library.</source>
          <target state="translated">特に異なる引数の制限が指定されてGnuCOBOLコンパイラーがビルドされた場合を除き、36個を超える引数をサブルーチンに渡すことはできません。GnuCOBOLソースコードにアクセスできる場合は、 &lt;code&gt;COB_MAX_FIELD_PARAMS&lt;/code&gt; を実行してコンパイラとランタイムライブラリをビルド &lt;code&gt;make&lt;/code&gt; 前に、 &lt;code&gt;common.h&lt;/code&gt; ファイル（ &lt;code&gt;libcob&lt;/code&gt; フォルダーにあります）のCOB_MAX_FIELD_PARAMSの値を変更することで、この制限を調整できます。</target>
        </trans-unit>
        <trans-unit id="a0b56017138fce867253042d601fa10f962235f8" translate="yes" xml:space="preserve">
          <source>No report content will actually presented to the report file as a result of a successful &lt;code&gt;INITIATE&lt;/code&gt; statement &amp;mdash; that will not occur until the first &lt;code&gt;GENERATE&lt;/code&gt; statement (see &lt;a href=&quot;#GENERATE&quot;&gt;GENERATE&lt;/a&gt;) is executed.</source>
          <target state="translated">いいえレポートの内容は、実際に成功の結果として、レポートファイルに提示されません &lt;code&gt;INITIATE&lt;/code&gt; 最初まで発生しません-ステートメントの &lt;code&gt;GENERATE&lt;/code&gt; （参照文を&lt;a href=&quot;#GENERATE&quot;&gt;GENERATEが&lt;/a&gt;）が実行されます。</target>
        </trans-unit>
        <trans-unit id="9d5b904086ff2a2ac1ab9032a0b17994d3c8146f" translate="yes" xml:space="preserve">
          <source>No report content will actually presented to the report file as a result of a successful&lt;code&gt;INITIATE&lt;/code&gt;statement &amp;mdash; that will not occur until the first&lt;code&gt;GENERATE&lt;/code&gt;statement (see &lt;a href=&quot;#GENERATE&quot;&gt;GENERATE&lt;/a&gt;) is executed.</source>
          <target state="translated">いいえレポートの内容は、実際に成功の結果として、レポートファイルに提示されません &lt;code&gt;INITIATE&lt;/code&gt; 最初まで発生しません-ステートメントの &lt;code&gt;GENERATE&lt;/code&gt; （参照文を&lt;a href=&quot;#GENERATE&quot;&gt;GENERATEが&lt;/a&gt;）が実行されます。</target>
        </trans-unit>
        <trans-unit id="11eee78dfa316d6cb7ec5797854112dec4eef327" translate="yes" xml:space="preserve">
          <source>No rounding is performed. If the value cannot be represented exactly in the desired format, the &lt;code&gt;EC-SIZE-TRUNCATION&lt;/code&gt; condition (exception code 1005) is set (and may be retrieved via the &lt;code&gt;ACCEPT&lt;/code&gt; (see &lt;a href=&quot;#ACCEPT-FROM-Runtime_002dInfo&quot;&gt;ACCEPT FROM Runtime-Info&lt;/a&gt;) statement) and the results of the operation are undefined.</source>
          <target state="translated">丸めは実行されません。値を目的の形式で正確に表すことができない場合は、 &lt;code&gt;EC-SIZE-TRUNCATION&lt;/code&gt; 条件（例外コード1005）が設定され（ &lt;code&gt;ACCEPT&lt;/code&gt; （&lt;a href=&quot;#ACCEPT-FROM-Runtime_002dInfo&quot;&gt;ACCEPT FROM Runtime-Infoを&lt;/a&gt;参照）ステートメントを介して取得できます）、操作の結果が設定されます。未定義です。</target>
        </trans-unit>
        <trans-unit id="841e2fb51fda0ae1893e020320984500822af311" translate="yes" xml:space="preserve">
          <source>No rounding is performed. If the value cannot be represented exactly in the desired format, the EC-SIZE-TRUNCATION condition (exception code 1005) is set (and may be retrieved via the&lt;code&gt;ACCEPT&lt;/code&gt;(see &lt;a href=&quot;#ACCEPT-FROM-Runtime_002dInfo&quot;&gt;ACCEPT FROM Runtime-Info&lt;/a&gt;) statement) and the results of the operation are undefined.</source>
          <target state="translated">丸めは実行されません。値を希望の形式で正確に表現できない場合、EC-SIZE-TRUNCATION条件（例外コード1005）が設定され（ &lt;code&gt;ACCEPT&lt;/code&gt; （&lt;a href=&quot;#ACCEPT-FROM-Runtime_002dInfo&quot;&gt;ACCEPT FROM Runtime-Infoを&lt;/a&gt;参照）ステートメントを介して取得できます）、操作の結果未定義です。</target>
        </trans-unit>
        <trans-unit id="eae4ac248869b9a9f5a910afc02caead622a3640" translate="yes" xml:space="preserve">
          <source>No special meaning &amp;mdash; this is the normal character that will appear in this area.</source>
          <target state="translated">特別な意味はありません。これは、この領域に表示される通常の文字です。</target>
        </trans-unit>
        <trans-unit id="0cfdaae490927c423f2c8197638d2a8e5c4b9c06" translate="yes" xml:space="preserve">
          <source>No storage is allocated for data defined in the linkage section; the data descriptions there are merely defining storage areas that will be passed to the subprogram by a calling program. Therefore, any discussion of the default initialization of such data is irrelevant. It</source>
          <target state="translated">リンクセクションで定義されたデータにはストレージは割り当てられていません;そこでのデータ記述は、呼び出しプログラムによってサブプログラムに渡されるストレージ領域を定義しているに過ぎません。したがって、そのようなデータのデフォルトの初期化についてのいかなる議論も無関係である。それは</target>
        </trans-unit>
        <trans-unit id="af210c88dc8772797ecc0e53167af870f6831d21" translate="yes" xml:space="preserve">
          <source>No two of those files may be referenced on a &lt;code&gt;SAME RECORD AREA&lt;/code&gt; (see &lt;a href=&quot;#SAME-RECORD-AREA&quot;&gt;SAME RECORD AREA&lt;/a&gt;), &lt;code&gt;SAME SORT AREA&lt;/code&gt; or &lt;code&gt;SAME SORT-MERGE AREA&lt;/code&gt; statement.</source>
          <target state="translated">これらのファイルのうち、 &lt;code&gt;SAME RECORD AREA&lt;/code&gt; （&lt;a href=&quot;#SAME-RECORD-AREA&quot;&gt;SAME RECORD AREAを&lt;/a&gt;参照）、 &lt;code&gt;SAME SORT AREA&lt;/code&gt; 、または &lt;code&gt;SAME SORT-MERGE AREA&lt;/code&gt; ステートメントで参照することはできません。</target>
        </trans-unit>
        <trans-unit id="7438d13425aae9891e97195f6fa784ef1702eda9" translate="yes" xml:space="preserve">
          <source>No two of those files may be referenced on a&lt;code&gt;SAME RECORD AREA&lt;/code&gt;(see &lt;a href=&quot;#SAME-RECORD-AREA&quot;&gt;SAME RECORD AREA&lt;/a&gt;),&lt;code&gt;SAME SORT AREA&lt;/code&gt;or&lt;code&gt;SAME SORT-MERGE AREA&lt;/code&gt;statement.</source>
          <target state="translated">&lt;code&gt;SAME RECORD AREA&lt;/code&gt; （&lt;a href=&quot;#SAME-RECORD-AREA&quot;&gt;SAME RECORD AREAを&lt;/a&gt;参照）、 &lt;code&gt;SAME SORT AREA&lt;/code&gt; または &lt;code&gt;SAME SORT-MERGE AREA&lt;/code&gt; ステートメントでこれらのファイルを2つ参照することはできません。</target>
        </trans-unit>
        <trans-unit id="9cc4f2a8b6d28ab1185c94f1a5e2a64143702d50" translate="yes" xml:space="preserve">
          <source>No two records in the table may have the same &lt;code&gt;KEY&lt;/code&gt; field values. If the table has multiple &lt;code&gt;KEY&lt;/code&gt; definitions, then no two records in the table may have the same</source>
          <target state="translated">テーブル内の2つのレコードが同じ &lt;code&gt;KEY&lt;/code&gt; フィールド値を持つことはできません。テーブルに複数の &lt;code&gt;KEY&lt;/code&gt; 定義がある場合、テーブル内の2つのレコードが同じである可能性はありません</target>
        </trans-unit>
        <trans-unit id="de44dc71aad924a999900997ea794d8dd652830f" translate="yes" xml:space="preserve">
          <source>No two records in the table may have the same&lt;code&gt;KEY&lt;/code&gt;field values. If the table has multiple&lt;code&gt;KEY&lt;/code&gt;definitions, then no two records in the table may have the same</source>
          <target state="translated">テーブル内の2つのレコードが同じ &lt;code&gt;KEY&lt;/code&gt; フィールド値を持つことはできません。テーブルに複数の &lt;code&gt;KEY&lt;/code&gt; 定義がある場合、テーブル内の2つのレコードが同じであってはなりません。</target>
        </trans-unit>
        <trans-unit id="701e46d71db3ef717300ef28e2186a627c3a8343" translate="yes" xml:space="preserve">
          <source>No two report groups in the same report (&lt;code&gt;RD&lt;/code&gt;) may named with the same &lt;var&gt;identifier-1&lt;/var&gt;. There may, however, be multiple &lt;var&gt;identifier-1&lt;/var&gt; definitions in different reports. In such instances, references to &lt;var&gt;identifier-1&lt;/var&gt; must be qualified by the report name.</source>
          <target state="translated">同じレポート（ &lt;code&gt;RD&lt;/code&gt; ）内の2つのレポートグループに同じ &lt;var&gt;identifier-1&lt;/var&gt; 付けて名前を付けることはできません。ただし、異なるレポートには複数の &lt;var&gt;identifier-1&lt;/var&gt; 定義が存在する場合があります。このような場合、 &lt;var&gt;identifier-1&lt;/var&gt; への参照はレポート名で修飾する必要があります。</target>
        </trans-unit>
        <trans-unit id="a81a89d7fe3f234fdfe59b26feaf85b577259ebb" translate="yes" xml:space="preserve">
          <source>No two report groups in the same report &lt;code&gt;RD&lt;/code&gt; may named with the same &amp;lt;</source>
          <target state="translated">同じレポート &lt;code&gt;RD&lt;/code&gt; 内の2つのレポートグループに同じ&amp;lt;</target>
        </trans-unit>
        <trans-unit id="d7e5774021597c332a13e1b5235f812224be797b" translate="yes" xml:space="preserve">
          <source>No&lt;code&gt;INVALID KEY&lt;/code&gt;or&lt;code&gt;NOT INVALID KEY&lt;/code&gt;clause may be specified for a file who&amp;rsquo;s&lt;code&gt;ACCESS MODE IS SEQUENTIAL&lt;/code&gt;</source>
          <target state="translated">ノー &lt;code&gt;INVALID KEY&lt;/code&gt; または &lt;code&gt;NOT INVALID KEY&lt;/code&gt; の句だファイルに指定することができる &lt;code&gt;ACCESS MODE IS SEQUENTIAL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cf0db7b3bb9f408f9b74f8f298755ddc3e66b9b8" translate="yes" xml:space="preserve">
          <source>No&lt;code&gt;OCCURS&lt;/code&gt;(see &lt;a href=&quot;#OCCURS&quot;&gt;OCCURS&lt;/a&gt;) clause may be part of the definition of either the subject or object data items. Either or both, however, may be group items that</source>
          <target state="translated">全く &lt;code&gt;OCCURS&lt;/code&gt; （参照が&lt;a href=&quot;#OCCURS&quot;&gt;OCCURS&lt;/a&gt;）句は、対象又は対象データ項目のいずれかの定義の一部であってもよいです。ただし、どちらかまたは両方が、</target>
        </trans-unit>
        <trans-unit id="ca1b683a95bedaa03b1b7fa72858ee0c6ecd486e" translate="yes" xml:space="preserve">
          <source>No&lt;code&gt;VALUE&lt;/code&gt;(see &lt;a href=&quot;#VALUE&quot;&gt;VALUE&lt;/a&gt;) clause may be defined on the object data item, and no data items subordinate to the object data item may have&lt;code&gt;VALUE&lt;/code&gt;clauses, with the exception of level-88 condition names.</source>
          <target state="translated">いいえ &lt;code&gt;VALUE&lt;/code&gt; （参照&lt;a href=&quot;#VALUE&quot;&gt;値&lt;/a&gt;）句は、オブジェクトデータ項目に定義されてもよいし、オブジェクトデータ項目に従属ないデータ項目が有していなくてもよい &lt;code&gt;VALUE&lt;/code&gt; のレベル88条件名を除いて、句。</target>
        </trans-unit>
        <trans-unit id="25fc4526232d80ffb715ab31181b4409345c2f9b" translate="yes" xml:space="preserve">
          <source>Non-integer fixed point values such as 1.317 or -2.95.</source>
          <target state="translated">1.317や-2.95のような非整数の定点値。</target>
        </trans-unit>
        <trans-unit id="e2c9b438099e818e760bdec714a929f4ed0713ad" translate="yes" xml:space="preserve">
          <source>None of &amp;lt;</source>
          <target state="translated">&amp;lt;なし</target>
        </trans-unit>
        <trans-unit id="a9941a75e96821f165129b0e4f2d6a9c3077350a" translate="yes" xml:space="preserve">
          <source>None of &lt;var&gt;identifier-4&lt;/var&gt;, &lt;var&gt;identifier-5&lt;/var&gt;, &lt;var&gt;identifier-6&lt;/var&gt;, &lt;var&gt;identifier-7&lt;/var&gt; or &lt;var&gt;identifier-8&lt;/var&gt; are initialized by the &lt;code&gt;UNSTRING&lt;/code&gt; statement. You need to do that yourself via a &lt;code&gt;MOVE&lt;/code&gt; (see &lt;a href=&quot;#MOVE&quot;&gt;MOVE&lt;/a&gt;) or &lt;code&gt;INITIALIZE&lt;/code&gt; statement (see &lt;a href=&quot;#INITIALIZE&quot;&gt;INITIALIZE&lt;/a&gt;).</source>
          <target state="translated">いずれ &lt;var&gt;identifier-4&lt;/var&gt; 、 &lt;var&gt;identifier-5&lt;/var&gt; 、 &lt;var&gt;identifier-6&lt;/var&gt; 、 &lt;var&gt;identifier-7&lt;/var&gt; または &lt;var&gt;identifier-8&lt;/var&gt; によって初期化されていない &lt;code&gt;UNSTRING&lt;/code&gt; ステートメント。あなたは自分を経由していることを実行する必要があり &lt;code&gt;MOVE&lt;/code&gt; （参照&lt;a href=&quot;#MOVE&quot;&gt;MOVEを&lt;/a&gt;）または &lt;code&gt;INITIALIZE&lt;/code&gt; の声明（参照&lt;a href=&quot;#INITIALIZE&quot;&gt;INITIALIZEを&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="3847348edd31651119c38766dbc8b99b0e838aa9" translate="yes" xml:space="preserve">
          <source>None of them may be open at the time the &lt;code&gt;MERGE&lt;/code&gt; is executed.</source>
          <target state="translated">&lt;code&gt;MERGE&lt;/code&gt; の実行時には、これらのいずれも開いていない可能性があります。</target>
        </trans-unit>
        <trans-unit id="b822fcd670cee5b981bb06fc3472b35bc909a687" translate="yes" xml:space="preserve">
          <source>None of them may be open at the time the&lt;code&gt;MERGE&lt;/code&gt;is executed.</source>
          <target state="translated">&lt;code&gt;MERGE&lt;/code&gt; の実行時に、それらのいずれも開いていない可能性があります。</target>
        </trans-unit>
        <trans-unit id="e27f545e660688ab7b2fa768237fd2139f657e72" translate="yes" xml:space="preserve">
          <source>Not all GnuCOBOL implementations support file sharing and record-locking options. Whether they do or not depends upon the operating system they were built for and the build options that were used when the specific GnuCOBOL implementation was generated.</source>
          <target state="translated">すべての GnuCOBOL 実装がファイル共有とレコードロックオプションをサポートしているわけではありません。対応しているかどうかは、対応しているオペレーティングシステムと、特定の GnuCOBOL 実装が生成されたときに使用されたビルドオプションに依存します。</target>
        </trans-unit>
        <trans-unit id="306e41cc992ba155fc93cf3121e83571aae63d84" translate="yes" xml:space="preserve">
          <source>Not all GnuCOBOL implementations support locking. Whether they do or not depends upon the operating system they were built for and the build options that were used when GnuCOBOL was generated. When a program using one of those GnuCOBOL implementations issues an UNLOCK, it will ignored. There will be no compiler message issued. Buffer syncing, if needed, will still occur.</source>
          <target state="translated">すべての GnuCOBOL 実装がロックをサポートしているわけではありません。対応しているかどうかは、対応しているオペレーティングシステムや GnuCOBOL の生成時に使用されたビルドオプションに依存します。これらの GnuCOBOL 実装を使用しているプログラムが UNLOCK を発行した場合、それは無視されます。コンパイラメッセージも発行されません。バッファ同期が必要な場合でも、バッファ同期は行われます。</target>
        </trans-unit>
        <trans-unit id="e9c1ce73c055e69ee3402cf0e4efbc368e26f9fc" translate="yes" xml:space="preserve">
          <source>Not all divisions are needed in every program, but they must be specified in the order shown when they</source>
          <target state="translated">すべてのプログラムですべての部門が必要なわけではありませんが、それらの部門は、それらが</target>
        </trans-unit>
        <trans-unit id="70ba7f89a0cdff0df48d89a63760a916d2a3530e" translate="yes" xml:space="preserve">
          <source>Not specifying an &amp;lt;</source>
          <target state="translated">&amp;lt;を指定しない</target>
        </trans-unit>
        <trans-unit id="d448fa80cc92991751f9e490867790af5b7ca5b7" translate="yes" xml:space="preserve">
          <source>Not specifying an &lt;var&gt;identifier-1&lt;/var&gt; or &lt;code&gt;FILLER&lt;/code&gt; immediately after the level number has the same effect as if &lt;code&gt;FILLER&lt;/code&gt; were specified. A data item named &lt;code&gt;FILLER&lt;/code&gt; cannot be referenced directly; these items are generally used to specify an unused portion of the total storage allocated to a group item or to describe a group item whose contents which will only be referenced using the names of those items that belong to it.</source>
          <target state="translated">指定しない &lt;var&gt;identifier-1&lt;/var&gt; 又は &lt;code&gt;FILLER&lt;/code&gt; かのように、レベル番号は、同じ効果を持つ直後 &lt;code&gt;FILLER&lt;/code&gt; を指定しました。 &lt;code&gt;FILLER&lt;/code&gt; という名前のデータ項目を直接参照することはできません。これらのアイテムは通常、グループアイテムに割り当てられた合計ストレージの未使用部分を指定するため、またはグループアイテムに属するアイテムの名前を使用してのみ参照されるコンテンツを記述するために使用されます。</target>
        </trans-unit>
        <trans-unit id="eca1720b4cd982b67332a8c431041a425436b516" translate="yes" xml:space="preserve">
          <source>Not specifying an &lt;var&gt;identifier-1&lt;/var&gt; or &lt;code&gt;FILLER&lt;/code&gt; immediately after the level number has the same effect as if &lt;code&gt;FILLER&lt;/code&gt; were specified. A data item named &lt;code&gt;FILLER&lt;/code&gt; cannot be referenced directly; these items are generally used to specify an unused portion of the total storage allocated to a group item or to describe a group item whose contents which will only be referenced using the names of those items that belong to it. In the linkage section, 01-level data items cannot be named &lt;code&gt;FILLER&lt;/code&gt;.</source>
          <target state="translated">指定しない &lt;var&gt;identifier-1&lt;/var&gt; 又は &lt;code&gt;FILLER&lt;/code&gt; かのように、レベル番号は、同じ効果を持つ直後 &lt;code&gt;FILLER&lt;/code&gt; を指定しました。 &lt;code&gt;FILLER&lt;/code&gt; という名前のデータ項目を直接参照することはできません。これらのアイテムは通常、グループアイテムに割り当てられた合計ストレージの未使用部分を指定するため、またはグループアイテムに属するアイテムの名前を使用してのみ参照されるコンテンツを記述するために使用されます。リンケージセクションでは、01レベルのデータ項目に &lt;code&gt;FILLER&lt;/code&gt; という名前を付けることはできません。</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="acb32811a10aeb5cdd9fd5772253064a242b86bc" translate="yes" xml:space="preserve">
          <source>Note how the &lt;code&gt;cobcrun&lt;/code&gt; command does not allow a path to be specified with the program name &amp;mdash; the directory in which the programs dynamically loadable module exists must either be the current directory or must be defined in the current &lt;code&gt;PATH&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cobcrun&lt;/code&gt; コマンドでは、プログラム名でパスを指定できないことに注意してください。プログラムの動的ロード可能モジュールが存在するディレクトリは、現在のディレクトリであるか、現在の &lt;code&gt;PATH&lt;/code&gt; で定義されている必要があります。</target>
        </trans-unit>
        <trans-unit id="dc309739aae3a8f2ebf82a717d61d549c5be4bac" translate="yes" xml:space="preserve">
          <source>Note how the COBOL program ensures that a null end-of-string terminator is present on both string arguments.</source>
          <target state="translated">COBOLプログラムが、両方の文字列引数にヌル文字の文字列終端終端が存在することを保証する方法に注目してください。</target>
        </trans-unit>
        <trans-unit id="183fb1decb6efb7828d7f6dd44fcbd653f28888b" translate="yes" xml:space="preserve">
          <source>Note how the word &lt;code&gt;FUNCTION&lt;/code&gt; is part of the syntax when you use an intrinsic function. You can use intrinsic functions without having to include the reserved word &lt;code&gt;FUNCTION&lt;/code&gt; via settings in the &lt;code&gt;REPOSITORY&lt;/code&gt; (see &lt;a href=&quot;#REPOSITORY&quot;&gt;REPOSITORY&lt;/a&gt;) paragraph. You may accomplish the same thing by specifying the</source>
          <target state="translated">組み込み関数を使用する場合、 &lt;code&gt;FUNCTION&lt;/code&gt; という単語が構文の一部であることに注意してください。 &lt;code&gt;REPOSITORY&lt;/code&gt; （&lt;a href=&quot;#REPOSITORY&quot;&gt;REPOSITORYを&lt;/a&gt;参照）段落の設定を介して予約語 &lt;code&gt;FUNCTION&lt;/code&gt; を含めることなく、組み込み関数を使用できます。あなたは指定することによって同じことを達成するかもしれません</target>
        </trans-unit>
        <trans-unit id="9c109c67ad2b3a941d3d17742fa522392c11f75b" translate="yes" xml:space="preserve">
          <source>Note how the word&lt;code&gt;FUNCTION&lt;/code&gt;is part of the syntax when you use an intrinsic function. You can use intrinsic functions without having to include the reserved word&lt;code&gt;FUNCTION&lt;/code&gt;via settings in the&lt;code&gt;REPOSITORY&lt;/code&gt;(see &lt;a href=&quot;#REPOSITORY&quot;&gt;REPOSITORY&lt;/a&gt;) paragraph. You may accomplish the same thing by specifying the&lt;code&gt;-fintrinsics&lt;/code&gt;switch</source>
          <target state="translated">組み込み関数を使用する場合、 &lt;code&gt;FUNCTION&lt;/code&gt; という単語が構文の一部であることに注意してください。 &lt;code&gt;REPOSITORY&lt;/code&gt; （&lt;a href=&quot;#REPOSITORY&quot;&gt;REPOSITORYを&lt;/a&gt;参照）段落の設定を介して予約語 &lt;code&gt;FUNCTION&lt;/code&gt; を含めることなく、組み込み関数を使用できます。 &lt;code&gt;-fintrinsics&lt;/code&gt; スイッチを指定して、同じことを行うことができます</target>
        </trans-unit>
        <trans-unit id="d04e9fec76c5812c7a9b640cbfeccc8e41ebd984" translate="yes" xml:space="preserve">
          <source>Note how the&lt;code&gt;cobcrun&lt;/code&gt;command does not allow a path to be specified with the program name &amp;mdash; the directory in which the programs dynamically loadable module exists must either be the current directory or must be defined in the current PATH.</source>
          <target state="translated">&lt;code&gt;cobcrun&lt;/code&gt; コマンドでは、プログラム名でパスを指定できないことに注意してください。プログラムの動的にロード可能なモジュールが存在するディレクトリは、現在のディレクトリであるか、現在のPATHで定義されている必要があります。</target>
        </trans-unit>
        <trans-unit id="22d0d2f4c5b59717940c0e72d1a8b9cca0d01d10" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;ABSOLUTE-VALUE&lt;/code&gt; has an alias for this function.</source>
          <target state="translated">&lt;code&gt;ABSOLUTE-VALUE&lt;/code&gt; にはこの関数のエイリアスがあることに注意してください。</target>
        </trans-unit>
        <trans-unit id="ec332543bc6a4b8ecabc6857c2e09711a937c08d" translate="yes" xml:space="preserve">
          <source>Note that bit 0 is the right-most bit in the binary value.</source>
          <target state="translated">ビット 0 はバイナリ値の右端のビットであることに注意してください。</target>
        </trans-unit>
        <trans-unit id="e2138fe3e1e1ef1f0f6b05f72e9f9e338fde700f" translate="yes" xml:space="preserve">
          <source>Note that even though we told GnuCOBOL that the 1st argument was to be &lt;code&gt;BY VALUE&lt;/code&gt;, it was treated as if it were &lt;code&gt;BY REFERENCE&lt;/code&gt; anyway. String (char array) arguments passed from C callers to GnuCOBOL subprograms will be modifiable by the subprogram. It&amp;rsquo;s best to pass a copy of such data if you want to ensure that the subprogram doesn&amp;rsquo;t change it.</source>
          <target state="translated">私たちは第一引数があることだったというGnuCOBOLを告げたにもかかわらずことを注意 &lt;code&gt;BY VALUE&lt;/code&gt; それはあたかも、それが処理した &lt;code&gt;BY REFERENCE&lt;/code&gt; とにかく。C呼び出し元からGnuCOBOLサブプログラムに渡される文字列（char配列）引数は、サブプログラムによって変更可能になります。サブプログラムがデータを変更しないようにする場合は、そのようなデータのコピーを渡すのが最善です。</target>
        </trans-unit>
        <trans-unit id="2539952aecc19d7b3a92ef3357fabc279c56a247" translate="yes" xml:space="preserve">
          <source>Note that even though we told GnuCOBOL that the 1st argument was to be&lt;code&gt;BY VALUE&lt;/code&gt; it was treated as if it were&lt;code&gt;BY REFERENCE&lt;/code&gt;anyway. String (char array) arguments passed from C callers to GnuCOBOL subprograms will be modifiable by the subprogram. It&amp;rsquo;s best to pass a copy of such data if you want to ensure that the subprogram doesn&amp;rsquo;t change it.</source>
          <target state="translated">GnuCOBOLに第1引数を &lt;code&gt;BY VALUE&lt;/code&gt; とするように指示したにもかかわらず、それはとにかく &lt;code&gt;BY REFERENCE&lt;/code&gt; であるかのように扱われたことに注意してください。Cの呼び出し元からGnuCOBOLサブプログラムに渡される文字列（char配列）の引数は、サブプログラムによって変更可能です。サブプログラムがデータを変更しないようにする場合は、そのようなデータのコピーを渡すことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="092d66dd347f9d0f0198d3a5cda5558a8906cb01" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;OUTPUT&lt;/code&gt; phrase changes the way in which the default field size is computed. See that heading above for details. Also note that the &lt;code&gt;OUTPUT&lt;/code&gt; phrase affects only the way items are displayed on the screen; the internal format of accepted data is not affected.</source>
          <target state="translated">&lt;code&gt;OUTPUT&lt;/code&gt; 句は、デフォルトのフィールドサイズの計算方法を変更することに注意してください。詳細については、上記の見出しを参照してください。また、 &lt;code&gt;OUTPUT&lt;/code&gt; 句は、アイテムが画面に表示される方法にのみ影響することに注意してください。受け入れられたデータの内部形式は影響を受けません。</target>
        </trans-unit>
        <trans-unit id="871c018f1f8ef5bab7bedbfc57441be80385c284" translate="yes" xml:space="preserve">
          <source>Note that the OUTPUT phrase changes the way in which the default field size is computed. See that heading above for details. Also note that the OUTPUT phrase affects only the way items are displayed on the screen; the internal format of accepted data is not affected.</source>
          <target state="translated">OUTPUT句は、デフォルトのフィールドサイズの計算方法を変更することに注意してください。詳細は上の見出しを参照してください。また、OUTPUT句は、画面上での項目の表示方法にのみ影響を与え、受理されたデータの内部フォーマットは影響を受けないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="73ca23565a924502144491bc13719f661401068e" translate="yes" xml:space="preserve">
          <source>Note that the legacy name of this routine starts with &amp;ldquo;CBL_OC&amp;rdquo; is deprecated, as is &lt;code&gt;HOSTED&lt;/code&gt;, but will still work. It is recommended that all library routines names starting with &amp;ldquo;CBL_OC&amp;rdquo; are replaced with &amp;ldquo;CBL_GC&amp;rdquo; to minimise issues.</source>
          <target state="translated">このルーチンのレガシー名が「CBL_OC」で始まることは、 &lt;code&gt;HOSTED&lt;/code&gt; と同様に非推奨ですが、引き続き機能することに注意してください。問題を最小限に抑えるために、「CBL_OC」で始まるすべてのライブラリルーチン名を「CBL_GC」に置き換えることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="1fbd4eeb5f6972ceb99cdf3aac9f4be0886c77cb" translate="yes" xml:space="preserve">
          <source>Note that the legacy name of this routine starts with CBL_OC is deprecated, as is HOSTED but will still work. It is recommended that all libary routines names starting with CBL_OC are replaced with CBL_GC to minimise issues.</source>
          <target state="translated">CBL_OC で始まるこのルーチンのレガシー名は、HOSTED と同様に非推奨ですが、まだ動作することに注意してください。問題を最小限に抑えるために、CBL_OC で始まるすべての libary ルーチン名を CBL_GC に置き換えることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="51fa3c32776b59476d40090b9247a2fa13f21bb0" translate="yes" xml:space="preserve">
          <source>Note that the legacy name of this routine that starts with &lt;code&gt;CBL_OC&lt;/code&gt; is deprecated, as is &lt;code&gt;NANOSLEEP&lt;/code&gt; but will still work. It is recommended that all library routines names starting with &lt;code&gt;CBL_OC&lt;/code&gt; are replaced with &lt;code&gt;CBL_GC&lt;/code&gt; to minimise issues.</source>
          <target state="translated">なお、で始まっていること、このルーチンのレガシー名 &lt;code&gt;CBL_OC&lt;/code&gt; があるとして、推奨されません &lt;code&gt;NANOSLEEP&lt;/code&gt; が、まだ動作します。問題を最小限に抑えるために、 &lt;code&gt;CBL_GC&lt;/code&gt; 始まるすべてのライブラリルーチン名を &lt;code&gt;CBL_OC&lt;/code&gt; に置き換えることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="7a40b40bf40810b907f7cf0d8aaaa83843011c4d" translate="yes" xml:space="preserve">
          <source>Note that the legacy name of this routine that starts with CBL_OC is deprecated, as is NANOSLEEP but will still work. It is recommended that all libary routines names starting with CBL_OC are replaced with CBL_GC to minimise issues.</source>
          <target state="translated">CBL_OC で始まるこのルーチンのレガシー名は、NANOSLEEP と同様に非推奨ですが、まだ動作することに注意してください。問題を最小限に抑えるために、CBL_OC で始まるすべての libary ルーチン名を CBL_GC に置き換えることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="efe51ebdd06327d81c22d954a952f012e8b5debd" translate="yes" xml:space="preserve">
          <source>Note that the value returned by this function is not the number of</source>
          <target state="translated">この関数が返す値は</target>
        </trans-unit>
        <trans-unit id="6e8cfcde44ca037484ab7aea2c239bb66679ec70" translate="yes" xml:space="preserve">
          <source>Note that these errors include but are not limited to: argument (&lt;var&gt;string&lt;/var&gt;) is zero length, contains only spaces or contains valid characters but is incomplete, such as the string &amp;lsquo;</source>
          <target state="translated">これらのエラーには次のものが含まれますが、これらに限定されないことに注意してください。引数（ &lt;var&gt;string&lt;/var&gt; ）の長さがゼロ、スペースのみを含む、または有効な文字を含むが、文字列 'などの不完全な</target>
        </trans-unit>
        <trans-unit id="f3452b747551a3e31882fb7b479a113ecf58accb" translate="yes" xml:space="preserve">
          <source>Note that these errors include but are not limited to: argument (string) is zero length, contains only spaces or contains valid characters but is incomplete, such as the string &quot;+.&quot;.</source>
          <target state="translated">これらのエラーには、以下のものが含まれますが、これらに限定されないことに注意してください:引数(文字列)の長さがゼロであったり、スペースしか含まれていなかったり、有効な文字が含まれているが文字列 &quot;+&quot;のように不完全であったりします。</target>
        </trans-unit>
        <trans-unit id="5a0f3696fb05aebf6890ba93476c007aded86f55" translate="yes" xml:space="preserve">
          <source>Note that these errors include but are not limited to: argument (string) is zero length, contains only spaces or contains valid characters but is incomplete, such as the string &amp;lsquo;</source>
          <target state="translated">これらのエラーには次のものが含まれますが、これらに限定されないことに注意してください。引数（文字列）の長さがゼロ、スペースのみを含む、または有効な文字を含むが、文字列のように不完全である '</target>
        </trans-unit>
        <trans-unit id="cc0412d45415b86da0a43a8c1ca6e6dc158f2456" translate="yes" xml:space="preserve">
          <source>Note that what constitutes a &quot;letter&quot; (or upper/lower case too, for that manner) may be influenced through the use of&lt;code&gt;CHARACTER CLASSIFICATION&lt;/code&gt;specifications in the&lt;code&gt;OBJECT-COMPUTER&lt;/code&gt;(see &lt;a href=&quot;#OBJECT_002dCOMPUTER&quot;&gt;OBJECT-COMPUTER&lt;/a&gt;) paragraph.</source>
          <target state="translated">「文字」を構成するもの（またはその方法では大文字と小文字も）は、 &lt;code&gt;OBJECT-COMPUTER&lt;/code&gt; （&lt;a href=&quot;#OBJECT_002dCOMPUTER&quot;&gt;OBJECT-COMPUTERを&lt;/a&gt;参照）段落の &lt;code&gt;CHARACTER CLASSIFICATION&lt;/code&gt; 仕様の使用によって影響を受ける可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="62ddaee439780c7798fa13166b25f5c860f4ff2d" translate="yes" xml:space="preserve">
          <source>Note that what constitutes a &amp;ldquo;letter&amp;rdquo; (or upper/lower case too, for that manner) may be influenced through the use of &lt;code&gt;CHARACTER CLASSIFICATION&lt;/code&gt; specifications in the &lt;code&gt;OBJECT-COMPUTER&lt;/code&gt; (see &lt;a href=&quot;#OBJECT_002dCOMPUTER&quot;&gt;OBJECT-COMPUTER&lt;/a&gt;) paragraph.</source>
          <target state="translated">「文字」（またはそのように大文字/小文字）を構成するものは、 &lt;code&gt;OBJECT-COMPUTER&lt;/code&gt; （&lt;a href=&quot;#OBJECT_002dCOMPUTER&quot;&gt;OBJECT-COMPUTERを&lt;/a&gt;参照）段落の &lt;code&gt;CHARACTER CLASSIFICATION&lt;/code&gt; 仕様の使用によって影響を受ける可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="91d9c5ae964daaf24d6471c5047859c42f3c1e8e" translate="yes" xml:space="preserve">
          <source>Note that you cannot supply the &lt;code&gt;CONVERT&lt;/code&gt; phrase in the Screen Section. Thus the size of a Screen Section field is always the size of its screen entry unless the &lt;code&gt;SIZE&lt;/code&gt; phrase is specified.</source>
          <target state="translated">画面セクションでは &lt;code&gt;CONVERT&lt;/code&gt; フレーズを指定できないことに注意してください。したがって、[画面セクション]フィールドのサイズは、 &lt;code&gt;SIZE&lt;/code&gt; 句が指定されていない限り、常にその画面エントリのサイズになります。</target>
        </trans-unit>
        <trans-unit id="5d3c2b08b61d1a38bbeee29bc320c48df653d057" translate="yes" xml:space="preserve">
          <source>Note that you cannot supply the CONVERT phrase in the Screen Section. Thus the size of a Screen Section field is always the size of its screen entry unless the SIZE phrase is specified.</source>
          <target state="translated">画面セクションで CONVERT フレーズを指定することはできないことに注意してください。したがって、SIZE フレーズが指定されていない限り、スクリーンセクションフィールドのサイズは常にそのスクリーンエントリのサイズになります。</target>
        </trans-unit>
        <trans-unit id="b71c125eb5c206746bd62c2d42dec3309f4fd188" translate="yes" xml:space="preserve">
          <source>Note: The offset value 1439 represents 23 hours 59 minutes which is one minutes less than a day.</source>
          <target state="translated">注:オフセット値1439は、1日より1分少ない23時間59分を表しています。</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="13a24e6195c1e1b94c4dd056c0d5fd8a03948d3d" translate="yes" xml:space="preserve">
          <source>Now observe the following code, which will execute the &lt;code&gt;150-Process-Hex-Value&lt;/code&gt; procedure if &lt;code&gt;Entered-Value&lt;/code&gt; contains nothing but valid hexadecimal digits:</source>
          <target state="translated">次に、 &lt;code&gt;Entered-Value&lt;/code&gt; に有効な16進数しか含まれていない場合に、 &lt;code&gt;150-Process-Hex-Value&lt;/code&gt; プロシージャを実行する次のコードを確認します。</target>
        </trans-unit>
        <trans-unit id="28b8e9bdefe3979b0685c44999ad9084995ed4c9" translate="yes" xml:space="preserve">
          <source>Now observe the following code, which will execute the&lt;code&gt;150-Process-Hex-Value&lt;/code&gt;procedure if&lt;code&gt;Entered-Value&lt;/code&gt;contains nothing but valid hexadecimal digits:</source>
          <target state="translated">&lt;code&gt;Entered-Value&lt;/code&gt; に有効な16進数字のみが含まれている場合、 &lt;code&gt;150-Process-Hex-Value&lt;/code&gt; プロシージャを実行する次のコードを確認します。</target>
        </trans-unit>
        <trans-unit id="d9e0e91f86531814b287253e68ce747a1135f32c" translate="yes" xml:space="preserve">
          <source>Now that you know</source>
          <target state="translated">あなたが知っている今</target>
        </trans-unit>
        <trans-unit id="51d733cbc7afeb6829e46e54cb89522a4021ffd6" translate="yes" xml:space="preserve">
          <source>Now there can be no confusion as to which &lt;code&gt;CITY&lt;/code&gt; is being changed. Fortunately, you don&amp;rsquo;t need to be quite so specific; COBOL allows intermediate and unnecessary qualification levels to be omitted. This allows &lt;code&gt;MOVE 'Philadelphia' TO CITY OF EMPLOYEE&lt;/code&gt; to do the job nicely.</source>
          <target state="translated">これで、どの &lt;code&gt;CITY&lt;/code&gt; が変更されているかについて混乱することはありません。幸いなことに、それほど具体的にする必要はありません。COBOLでは、中間および不要な資格レベルを省略できます。これにより、 &lt;code&gt;MOVE 'Philadelphia' TO CITY OF EMPLOYEE&lt;/code&gt; がうまく仕事をすることができます。</target>
        </trans-unit>
        <trans-unit id="d0861e2e052b3dc839be9fe7e44875aa59ec9523" translate="yes" xml:space="preserve">
          <source>Now there can be no confusion as to which CITY is being changed. Fortunately, you don&amp;rsquo;t need to be quite so specific; COBOL allows intermediate and unnecessary qualification levels to be omitted. This allows&lt;code&gt;MOVE 'Philadelphia' TO CITY OF EMPLOYEE&lt;/code&gt;to do the job nicely.</source>
          <target state="translated">これで、どのCITYが変更されるかについて混乱することはありません。幸い、それほど具体的である必要はありません。COBOLでは、中間の不要な修飾レベルを省略できます。これにより、 &lt;code&gt;MOVE 'Philadelphia' TO CITY OF EMPLOYEE&lt;/code&gt; することができます。</target>
        </trans-unit>
        <trans-unit id="4cca0ffe80614cff58f27f48f8e3a36d4fe4b2df" translate="yes" xml:space="preserve">
          <source>Now we have the tools to run &lt;code&gt;CBL_GC_GETOPT&lt;/code&gt; within the procedure division.</source>
          <target state="translated">これで、プロシージャ部門内で &lt;code&gt;CBL_GC_GETOPT&lt;/code&gt; を実行するためのツールができました。</target>
        </trans-unit>
        <trans-unit id="219877a3941189d29da78605ffc816ab5f2a7b89" translate="yes" xml:space="preserve">
          <source>Now, assume that another program reads this file, but describes 10-character records rather than 6. Here are the records</source>
          <target state="translated">さて、別のプログラムがこのファイルを読み、6文字ではなく10文字のレコードを記述しているとします。 以下にレコードを示します。</target>
        </trans-unit>
        <trans-unit id="90dbab146724f39b3e9bc621d7639950a26f4b2d" translate="yes" xml:space="preserve">
          <source>Now, let&amp;rsquo;s deal with the problem of setting the &lt;code&gt;CITY&lt;/code&gt; portion of an &lt;code&gt;EMPLOYEE&lt;/code&gt;s &lt;code&gt;MAILING-ADDRESS&lt;/code&gt; to &amp;lsquo;</source>
          <target state="translated">さて、設定の問題との契約をしましょう &lt;code&gt;CITY&lt;/code&gt; の部分 &lt;code&gt;EMPLOYEE&lt;/code&gt; の &lt;code&gt;MAILING-ADDRESS&lt;/code&gt; 'に</target>
        </trans-unit>
        <trans-unit id="9b0d34c0dc28860109b36ba3a6f8a912103ad454" translate="yes" xml:space="preserve">
          <source>Now, let&amp;rsquo;s deal with the problem of setting the CITY portion of an EMPLOYEEs MAILING-ADDRESS to &quot;Philadelphia&quot;. Clearly,&lt;code&gt;MOVE 'Philadelphia' TO CITY&lt;/code&gt;cannot work because the compiler will be unable to determine which of the two CITY fields you are referring to.</source>
          <target state="translated">ここで、従業員のMAILING-ADDRESSのCITY部分を「フィラデルフィア」に設定する問題に対処しましょう。明らかに、 &lt;code&gt;MOVE 'Philadelphia' TO CITY&lt;/code&gt; は機能しません。コンパイラーが参照している2つのCITYフィールドのどちらかを判別できないためです。</target>
        </trans-unit>
        <trans-unit id="ce50db412280505597bf9414695fbcc5fc0e3f7b" translate="yes" xml:space="preserve">
          <source>Now, the roles of the two languages in the previous section will be reversed, having a C main program execute a GnuCOBOL subprogram.</source>
          <target state="translated">ここで、前節の2つの言語の役割を逆にして、CのメインプログラムにGnuCOBOLのサブプログラムを実行させることにします。</target>
        </trans-unit>
        <trans-unit id="b9a0cb2a79aa6bb54fefd7df31d703c9a5f82f4f" translate="yes" xml:space="preserve">
          <source>Null terminated literals</source>
          <target state="translated">ヌル終了リテラル</target>
        </trans-unit>
        <trans-unit id="5d6820962ed41a3c8df147927428ecba6ad7b8f2" translate="yes" xml:space="preserve">
          <source>Number of unused (</source>
          <target state="translated">未使用数(</target>
        </trans-unit>
        <trans-unit id="f60c8b64229a047f941675b68f85587ecce4b520" translate="yes" xml:space="preserve">
          <source>Numeric Data Item</source>
          <target state="translated">数値データ項目</target>
        </trans-unit>
        <trans-unit id="c9fbc7f3c5ecccd87db3e696a9c121879251fe81" translate="yes" xml:space="preserve">
          <source>Numeric Edited</source>
          <target state="translated">数値編集</target>
        </trans-unit>
        <trans-unit id="63ddf527a277f4c347e2246f00b1c4f8cda03669" translate="yes" xml:space="preserve">
          <source>Numeric Edited Data Item</source>
          <target state="translated">数値編集データ項目</target>
        </trans-unit>
        <trans-unit id="a24a22f9b40fcfe4d2691a6016ec524613059e17" translate="yes" xml:space="preserve">
          <source>Numeric Literal</source>
          <target state="translated">数値リテラル</target>
        </trans-unit>
        <trans-unit id="8eefce14ad64237aed9590a466c38dd080fec5d1" translate="yes" xml:space="preserve">
          <source>Numeric data items are truncated according to their &lt;code&gt;PICTURE&lt;/code&gt; clauses.</source>
          <target state="translated">数値データ項目は、 &lt;code&gt;PICTURE&lt;/code&gt; 句に従って切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="ce2aa4191d1438aef80784c8e9228ab5733e4ef8" translate="yes" xml:space="preserve">
          <source>Numeric data items are truncated according to their internal representation.</source>
          <target state="translated">数値データ項目は、その内部表現に従って切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="7e59ff5a1d75e3b7324d0a79c5cf95e1845a8a70" translate="yes" xml:space="preserve">
          <source>Numeric data items will be initialized to a value of &lt;code&gt;ZERO&lt;/code&gt;.</source>
          <target state="translated">数値データ項目は &lt;code&gt;ZERO&lt;/code&gt; 値に初期化されます。</target>
        </trans-unit>
        <trans-unit id="be2d608e3fa3ed6ad269186745305eb23ec33b56" translate="yes" xml:space="preserve">
          <source>Numeric data items will be initialized to a value of&lt;code&gt;ZERO&lt;/code&gt;</source>
          <target state="translated">数値データ項目は &lt;code&gt;ZERO&lt;/code&gt; 値に初期化されます</target>
        </trans-unit>
        <trans-unit id="289405511920b64e6183e96801f299b0a1170932" translate="yes" xml:space="preserve">
          <source>Numeric keypad keys are not recognizable on Windows MinGW/PDCurses builds of GnuCOBOL, regardless of the number lock settings. Windows Cygwin/NCurses builds recognize numeric keypad inputs properly. Although not tested during the preparation of this documentation, I would expect native Windows builds using PDCurses to behave as MinGW builds do and native Unix builds using NCurses to behave as do Cygwin builds.</source>
          <target state="translated">GnuCOBOLのWindows MinGW/PDCursesビルドでは、数字のロック設定に関わらず、テンキーが認識できません。Windows の Cygwin/NCurses ビルドでは、テンキー入力を正しく認識します。この文書の準備中にテストしたわけではありませんが、PDCurses を使用したネイティブの Windows ビルドは MinGW ビルドと同じように動作し、NCurses を使用したネイティブの Unix ビルドは Cygwin ビルドと同じように動作することを期待しています。</target>
        </trans-unit>
        <trans-unit id="8eeea7541c21f9801d7c1875ed5f9c434348ce35" translate="yes" xml:space="preserve">
          <source>Numeric literals may be split across lines just as alphanumeric literals are, using either of the above techniques and both reserved and user-defined words can be split across lines too (using the first technique). The continuation of numeric literals and user-defined/reserved words is provided merely to provide compatibility with older COBOL versions and programs, but should not be used with new programs &amp;mdash; it just makes for ugly-looking programs.</source>
          <target state="translated">数値リテラルは、上記の手法のいずれかを使用して、英数字リテラルと同じように行に分割できます。予約語とユーザー定義語の両方を行に分割することもできます（最初の手法を使用）。数値リテラルおよびユーザー定義/予約語の継続は、以前のCOBOLバージョンおよびプログラムとの互換性を提供するためだけに提供されており、新しいプログラムでは使用しないでください。見た目が醜いプログラムになるだけです。</target>
        </trans-unit>
        <trans-unit id="08a914cde05039694ef0194d9ee79ff9a79dde33" translate="yes" xml:space="preserve">
          <source>O</source>
          <target state="translated">O</target>
        </trans-unit>
        <trans-unit id="6f2932e8faff18c0314f3a04f9aec75edec07a2f" translate="yes" xml:space="preserve">
          <source>OBJECT, OBJECT-COMPUTER, OBJECT-REFERENCE, OCCURS, OF, OFF, OMITTED, ON, ONLY, OPEN, OPTIONAL, OPTIONS, OR, ORD, ORDER, ORD-MAX, ORD-MIN, ORGANISATION, ORGANIZATION, OTHER, OUTPUT, OVERFLOW, OVERLINE, OVERRIDE</source>
          <target state="translated">OBJECT、OBJECT-COMPUTER、OBJECT-REFERENCE、OCCURS、OF、OFF、OMITTED、ONLY、OPEN、OPTIONAL、OPTIONS、OR、ORDER、ORDER、ORD-MAX、ORD-MIN、ORGANISATION、ORGANIZATION、OTHER、OUTPUT、OVERFLOW、OVERLINE、OVERRIDE</target>
        </trans-unit>
        <trans-unit id="2e78bec2d3800e6a21f1a284d7a3afd18c2fcd63" translate="yes" xml:space="preserve">
          <source>OBJECT-COMPUTER Syntax</source>
          <target state="translated">OBJECT-COMPUTER 構文</target>
        </trans-unit>
        <trans-unit id="98d4fe9c9ba7eedf87784e4d6e824cac62353113" translate="yes" xml:space="preserve">
          <source>OBJECT-COMPUTER, OBJECT-REFERENCE, OBJECT, OCCURS, OFF, OF, OK-BUTTON, OMITTED, ONLY, ON, OPEN, OPTIONAL, OPTIONS, ORDER, ORD-MAX, ORD-MIN, ORD, ORGANISATION, ORGANIZATION, OR, OTHER, OUTPUT, OVERFLOW, OVERLAP-LEFT, OVERLAP-TOP, OVERLINE, OVERRIDE</source>
          <target state="translated">OBJECT-COMPUTER,OBJECT-REFERENCE,OBJECT,OCCURS,OFF,OF,OK-BUTTON,OMITTED,ONLY,ON,OPEN,OPTIONAL,OPTIONS,ORDER,ORD-MAX,ORD-MIN,ORD,ORGANISATION,ORGANIZATION,OR,OTHER,OUTPUT,OVERFLOW,OVERLAP-LEFT,OVERLAP-TOP,OVERLINE,OVERRIDE,OUTPUT,OVERFLOW,OVERLAP-LEFT,OVERLAP-TOP,OVERLINE,OVERRIDE</target>
        </trans-unit>
        <trans-unit id="cec1574213ff5c57fb26687d05dd766be420fc2b" translate="yes" xml:space="preserve">
          <source>OCCURS &amp;hellip; DEPENDING ON data item out of bounds</source>
          <target state="translated">OCCURS&amp;hellip;DEPENDING ONデータ項目が範囲外</target>
        </trans-unit>
        <trans-unit id="b800486653c7a1c77e853e0c004749a0fd2748a9" translate="yes" xml:space="preserve">
          <source>OCCURS (All Other Sections Clause Syntax</source>
          <target state="translated">OCCURS (他のすべてのセクションの節の構文)</target>
        </trans-unit>
        <trans-unit id="dd0b3221d40b5306dd784b27996de5c44ec57b1a" translate="yes" xml:space="preserve">
          <source>OCCURS (REPORT SECTION) Clause Syntax</source>
          <target state="translated">OCCURS (REPORT SECTION)節構文</target>
        </trans-unit>
        <trans-unit id="6b31ee2b7fdf9b827a81f695d24c794e1825c9ac" translate="yes" xml:space="preserve">
          <source>OCCURS (SCREEN SECTION) Clause Syntax</source>
          <target state="translated">OCCURS(SCREEN SECTION)節構文</target>
        </trans-unit>
        <trans-unit id="12163d548f84d0d3a65be49f9405b588882fb830" translate="yes" xml:space="preserve">
          <source>ON EXCEPTION Syntax</source>
          <target state="translated">ON EXCEPTION 構文</target>
        </trans-unit>
        <trans-unit id="fae727086e90c1747900d70ffd7f8b15f8dbda95" translate="yes" xml:space="preserve">
          <source>ON OVERFLOW Syntax</source>
          <target state="translated">ON OVERFLOW 構文</target>
        </trans-unit>
        <trans-unit id="66bebaca5aeeed104d7154b3d0f92463c9dd8dd1" translate="yes" xml:space="preserve">
          <source>ON SIZE ERROR Syntax</source>
          <target state="translated">ON SIZE ERROR 構文</target>
        </trans-unit>
        <trans-unit id="36dfa4bed24bebe94e869396499f245644973c4a" translate="yes" xml:space="preserve">
          <source>OPEN Syntax</source>
          <target state="translated">OPEN 構文</target>
        </trans-unit>
        <trans-unit id="cf0fe9af8bea7d1e731289cfef0c8038f4bc83dd" translate="yes" xml:space="preserve">
          <source>ORD Function Syntax</source>
          <target state="translated">ORD 関数構文</target>
        </trans-unit>
        <trans-unit id="9ad6006b98ba7b9576a4512aa283c527f6a05c6a" translate="yes" xml:space="preserve">
          <source>ORD-MAX Function Syntax</source>
          <target state="translated">ORD-MAX 関数構文</target>
        </trans-unit>
        <trans-unit id="09ee84df5eb17ff7d1f3553b1cbd5d58418d7791" translate="yes" xml:space="preserve">
          <source>ORD-MIN Function Syntax</source>
          <target state="translated">ORD-MIN 関数構文</target>
        </trans-unit>
        <trans-unit id="08b26f9634d2a732e998aa2218316415ad38194c" translate="yes" xml:space="preserve">
          <source>ORGANIZATION INDEXED Clause Syntax</source>
          <target state="translated">ORGANIZATION INDEX 句構文</target>
        </trans-unit>
        <trans-unit id="2df4622dcdea677d5d9a83663b8cbf91c2189a6b" translate="yes" xml:space="preserve">
          <source>ORGANIZATION LINE SEQUENTIAL Clause Syntax</source>
          <target state="translated">ORGANIZATION LINE SEQUENTIAL 節構文</target>
        </trans-unit>
        <trans-unit id="86ee1da50c2e8a0ec7111d29363f3c837bd97118" translate="yes" xml:space="preserve">
          <source>ORGANIZATION RELATIVE Clause Syntax</source>
          <target state="translated">ORGANIZATION RELATIVE 節構文</target>
        </trans-unit>
        <trans-unit id="750186647b33c3656503302d8eccc530bc37f0af" translate="yes" xml:space="preserve">
          <source>ORGANIZATION SEQUENTIAL Clause Syntax</source>
          <target state="translated">ORGANIZATION SEQUENTIAL 節構文</target>
        </trans-unit>
        <trans-unit id="578fbcff15d7037e9429c12a53b4d74f6a1577f1" translate="yes" xml:space="preserve">
          <source>OS/2 &quot;OPTLINK&quot; conventions will be used to CALL the subprogram.</source>
          <target state="translated">OS/2 &quot;OPTLINK &quot;の規約は、サブプログラムをCALLするために使用されます。</target>
        </trans-unit>
        <trans-unit id="c666501d06dc9305a9b7b68de3b3d3562fd28b49" translate="yes" xml:space="preserve">
          <source>OS/2 &quot;OPTLINK&quot; conventions will not be used to CALL the subprogram.</source>
          <target state="translated">OS/2 &quot;OPTLINK &quot;の規約は、サブプログラムをCALLするために使用されません。</target>
        </trans-unit>
        <trans-unit id="1f27666d6409fb25219ce16339fb1c8bef9d03f0" translate="yes" xml:space="preserve">
          <source>OS/2 &amp;ldquo;OPTLINK&amp;rdquo; conventions will be used to CALL the subprogram.</source>
          <target state="translated">OS / 2の「OPTLINK」規則は、サブプログラムを呼び出すために使用されます。</target>
        </trans-unit>
        <trans-unit id="1d08cd083ab2d61b0c0ec3a69e3aaf002cac1bfb" translate="yes" xml:space="preserve">
          <source>OS/2 &amp;ldquo;OPTLINK&amp;rdquo; conventions will not be used to CALL the subprogram.</source>
          <target state="translated">OS / 2の「OPTLINK」規則は、サブプログラムの呼び出しには使用されません。</target>
        </trans-unit>
        <trans-unit id="c8e1209593b1149f5f3f8ee76008515520f2193a" translate="yes" xml:space="preserve">
          <source>OVERLINE Attribute Syntax</source>
          <target state="translated">OVERLINE 属性構文</target>
        </trans-unit>
        <trans-unit id="4924a4d3bf56aa4a828e65f5066f009ce7e62b7d" translate="yes" xml:space="preserve">
          <source>Observe the definitions of data items &quot;Q&quot; and &quot;Y&quot;&amp;hellip;</source>
          <target state="translated">データ項目「Q」と「Y」の定義を確認してください&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="2602780ef6522b52c7725288d8a3e8285ac74790" translate="yes" xml:space="preserve">
          <source>Observe the definitions of data items &amp;lsquo;</source>
          <target state="translated">データ項目の定義を観察する '</target>
        </trans-unit>
        <trans-unit id="46c20583dd7802c40938fc2ba6c6048df2b3e1e9" translate="yes" xml:space="preserve">
          <source>Observe the following example, which illustrates a fourth manner in which tables may be initialized in GnuCOBOL:</source>
          <target state="translated">以下の例は、GnuCOBOLでテーブルを初期化する4つ目の方法を示しています。</target>
        </trans-unit>
        <trans-unit id="34853f9fd3af3261ae1d13b30a481dda5e6e6ffb" translate="yes" xml:space="preserve">
          <source>Octal using O#0 - 7. (That is the letter &amp;lsquo;</source>
          <target state="translated">O＃0-7を使用した8進数（これは文字です '</target>
        </trans-unit>
        <trans-unit id="cec634d4f1c842c1c34e5d70b1e1bba15a325f09" translate="yes" xml:space="preserve">
          <source>Of course, arithmetic expression operands may be numeric data items (any USAGE except POINTER or PROGRAM POINTER) as well as numeric literals.</source>
          <target state="translated">もちろん、算術式オペランドは、数値リテラルだけでなく、数値データ項目(POINTERまたはPROGRAM POINTER以外の任意のUSAGE)であってもよい。</target>
        </trans-unit>
        <trans-unit id="8c771f9f082c2303d9a9bbc0ebb8ba28e8d3b77c" translate="yes" xml:space="preserve">
          <source>Of course, in keeping with the long-standing COBOL tradition of maintaining backwards compatibility with older standards, programmers (and, of course, compliant COBOL compilers) are capable of working in either mode. It is even possible to switch back and forth in the same program. The terms  &lt;em&gt;Fixed Format Mode&lt;/em&gt;  and  &lt;em&gt;Free Format Mode&lt;/em&gt;  are used to refer to these two modes of source code formatting.</source>
          <target state="translated">もちろん、古い標準との下位互換性を維持するという長年のCOBOLの伝統に従い、プログラマー（およびもちろん準拠したCOBOLコンパイラー）はどちらのモードでも作業できます。同じプログラムで前後に切り替えることも可能です。&lt;em&gt;固定フォーマットモード&lt;/em&gt; と &lt;em&gt;自由フォーマットモード&lt;/em&gt;という用語 は、ソースコードフォーマットのこれら2つのモードを指すために使用されます。</target>
        </trans-unit>
        <trans-unit id="78a794760583154700dfa158ef52ff59305ad6d4" translate="yes" xml:space="preserve">
          <source>Of course, in keeping with the long-standing COBOL tradition of maintaining backwards compatibility with older standards, programmers (and, of course, compliant COBOL compilers) are capable of working in either mode. It is even possible to switch back and forth in the same program. The terms &amp;rsquo;</source>
          <target state="translated">もちろん、古い標準との後方互換性を維持するという長年にわたるCOBOLの伝統に沿って、プログラマー（そしてもちろん、準拠するCOBOLコンパイラー）はどちらのモードでも作業できます。同じプログラムで前後に切り替えることも可能です。用語 '</target>
        </trans-unit>
        <trans-unit id="c2e2ad12fe5d5be1ef373c4a92ce471d2c101183" translate="yes" xml:space="preserve">
          <source>Of course, whatever software you are using to deliver the printed document to the printer with must allow the ASCII form-feed character to pass through to the printer.</source>
          <target state="translated">もちろん、印刷された文書をプリンタに配信するために使用しているどのようなソフトウェアであっても、ASCIIフォームフィード文字がプリンタに通過できるようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="6347601d7b82e1f8887fbeb6b2289e39be3948bd" translate="yes" xml:space="preserve">
          <source>Of course, whatever software you are using to deliver the printed document to the printer with, must allow the &lt;small&gt;ASCII&lt;/small&gt; form-feed character to pass through to the printer.</source>
          <target state="translated">もちろん、印刷されたドキュメントをプリンタに配信するために使用しているソフトウェアが何であれ、&lt;small&gt;ASCII&lt;/small&gt;フォームフィード文字がプリンタに渡されることを許可する必要があります。</target>
        </trans-unit>
        <trans-unit id="7ba8188f943f6bdc2d9048e32dcd7fb33cff506b" translate="yes" xml:space="preserve">
          <source>Of those &amp;lsquo;</source>
          <target state="translated">それらの '</target>
        </trans-unit>
        <trans-unit id="debcb349f44f33085c8c31a98daa95f7f75004d5" translate="yes" xml:space="preserve">
          <source>Of those currency symbols that correspond to character positions in which leading zeros reside, the right-most will have its &quot;0&quot; value replaced by the currency symbol in-effect for the program (see &lt;a href=&quot;#SPECIAL_002dNAMES&quot;&gt;SPECIAL-NAMES&lt;/a&gt;). Any remaining leading zero values occupying positions described by this symbol will be replaced by spaces.</source>
          <target state="translated">先行ゼロが存在する文字位置に対応する通貨記号のうち、最も右側の「0」の値は、プログラムで有効な通貨記号に置き換えられます（&lt;a href=&quot;#SPECIAL_002dNAMES&quot;&gt;SPECIAL-NAMESを&lt;/a&gt;参照）。この記号で示される位置を占める残りの先行ゼロ値は、スペースで置き換えられます。</target>
        </trans-unit>
        <trans-unit id="e456ff407b5ecd1b59e82896448ea6f0e2deb80d" translate="yes" xml:space="preserve">
          <source>Of those currency symbols that correspond to character positions in which leading zeros reside, the right-most will have its &amp;lsquo;</source>
          <target state="translated">先頭のゼロが存在する文字位置に対応する通貨記号のうち、右端には 'があります。</target>
        </trans-unit>
        <trans-unit id="6b4cb7a0fee3f3079461060f2f2b75e5bfc06ee6" translate="yes" xml:space="preserve">
          <source>Of those&lt;code&gt;+&lt;/code&gt;symbols that correspond to character positions in which leading zeros reside, the right-most will have its &quot;0&quot; value replaced by a &quot;+&quot; if the value in the data item is zero or greater or a &quot;-&quot; otherwise. Any remaining leading zero values occupying positions described by this symbol will be replaced by spaces. You cannot use both&lt;code&gt;+&lt;/code&gt;and&lt;code&gt;-&lt;/code&gt;in the same &amp;lt;</source>
          <target state="translated">先行ゼロが存在する文字位置に対応するこれらの &lt;code&gt;+&lt;/code&gt; 記号のうち、最も右側のデータ項目の値がゼロ以上の場合は「0」の値が「+」に、そうでない場合は「-」に置き換えられます。この記号で説明されている位置を占める残りの先行ゼロ値は、スペースで置き換えられます。同じ&amp;lt;で &lt;code&gt;+&lt;/code&gt; と &lt;code&gt;-&lt;/code&gt; の両方を使用することはできません</target>
        </trans-unit>
        <trans-unit id="bbf75e8475f5c8168cfdefa614e07198b0695e55" translate="yes" xml:space="preserve">
          <source>Of those&lt;code&gt;-&lt;/code&gt;symbols that correspond to character positions in which leading zeros reside, the right-most will have its &quot;0&quot; value replaced by a space if the value in the data item is zero or greater or a &quot;-&quot; otherwise. Any remaining leading zero values occupying positions described by this symbol will be replaced by spaces. You cannot use both&lt;code&gt;+&lt;/code&gt;and&lt;code&gt;-&lt;/code&gt;in the same &amp;lt;</source>
          <target state="translated">それらのうち &lt;code&gt;-&lt;/code&gt; 先行ゼロが存在する文字位置に対応する記号では、データ項目の値がゼロ以上の場合、右端の「0」値がスペースに置き換えられ、それ以外の場合は「-」になります。この記号で示される位置を占める残りの先行ゼロ値は、スペースで置き換えられます。同じ&amp;lt;で &lt;code&gt;+&lt;/code&gt; と &lt;code&gt;-&lt;/code&gt; の両方を使用することはできません</target>
        </trans-unit>
        <trans-unit id="ef88e18e5314e5accac7e1424be9abc4cbdad69c" translate="yes" xml:space="preserve">
          <source>Offers support for MF Compiler Directives.</source>
          <target state="translated">MF Compiler Directives のサポートを提供します。</target>
        </trans-unit>
        <trans-unit id="8b1fab1aa655192e46dd089ef5dc5c15017129e0" translate="yes" xml:space="preserve">
          <source>On UNIX (including OSX, Windows/Cygwin and Windows/MinGW) systems, your locale is established via the</source>
          <target state="translated">UNIX (OSX,Windows/Cygwin,Windows/MinGW を含む)システムでは、ロケールは</target>
        </trans-unit>
        <trans-unit id="4371dbb58ffcbfdae973e7019abb0ab41757b09a" translate="yes" xml:space="preserve">
          <source>On UNIX (including OSX, Windows/Cygwin and Windows/MinGW) systems, your locale is established via the   &lt;code&gt;LANG&lt;/code&gt; run-time environment variable (see &lt;a href=&quot;#Run-Time-Environment-Variables&quot;&gt;Run Time Environment Variables&lt;/a&gt;) environment variable. On Windows, the Control Panel&amp;rsquo;s Regional and Language Options define the locale.</source>
          <target state="translated">UNIX（OSX、Windows / Cygwin、およびWindows / MinGWを含む）システムでは、ロケールは &lt;code&gt;LANG&lt;/code&gt; ランタイム環境変数（&lt;a href=&quot;#Run-Time-Environment-Variables&quot;&gt;ランタイム&lt;/a&gt;環境変数を参照）環境変数を介して確立され ます。Windowsでは、コントロールパネルの地域オプションと言語オプションでロケールが定義されます。</target>
        </trans-unit>
        <trans-unit id="02e632569f509af03efa7964cb1fa55564bdf21c" translate="yes" xml:space="preserve">
          <source>On Unix, OSX, or Windows/Cygwin builds, the</source>
          <target state="translated">Unix,OSX,Windows/Cygwin ビルドでは</target>
        </trans-unit>
        <trans-unit id="7a4815ab2f080a81cd2be95835f85ca49905ca48" translate="yes" xml:space="preserve">
          <source>On Unix, OSX, or Windows/Cygwin builds, the&lt;code&gt;-x&lt;/code&gt;switch switch will generate an executable binary file, usually with no particular extension unless one is explicitly requested of the compiler via the&lt;code&gt;-o&lt;/code&gt;switch</source>
          <target state="translated">Unix、OSX、またはWindows / Cygwinビルドでは、 &lt;code&gt;-x&lt;/code&gt; スイッチスイッチは実行可能なバイナリファイルを生成します。通常、 &lt;code&gt;-o&lt;/code&gt; スイッチを介してコンパイラに明示的に要求されない限り、特定の拡張子はありません。</target>
        </trans-unit>
        <trans-unit id="baa101f65e9944384124638ea3189587789c566a" translate="yes" xml:space="preserve">
          <source>On Windows systems, single-quote, or apostrophe characters (&amp;rsquo;) will be treated just like any other data character and will NOT delineate argument strings.</source>
          <target state="translated">Windowsシステムでは、単一引用符またはアポストロフィ文字（ '）は、他のデータ文字と同じように扱われ、引数文字列を記述しません。</target>
        </trans-unit>
        <trans-unit id="7e22591213060e776766253051d21caed9cc1a81" translate="yes" xml:space="preserve">
          <source>On Windows systems, single-quote, or apostrophe, characters (&amp;lsquo;</source>
          <target state="translated">Windowsシステムでは、一重引用符またはアポストロフィ文字（ '</target>
        </trans-unit>
        <trans-unit id="4161aa6155f2b3b50bafe2e0ddddef206267705b" translate="yes" xml:space="preserve">
          <source>On a UNIX system this means the programs may be executed from a command shell such as bash, csh, ksh and so forth. When a GnuCOBOL program runs on a Windows system, it runs within a console window (i.e.</source>
          <target state="translated">UNIXシステムでは、これはプログラムがbash、csh、kshなどのコマンドシェルから実行されることを意味します。Windowsシステム上でGnuCOBOLプログラムを実行する場合、コンソールウィンドウ内で実行されます。</target>
        </trans-unit>
        <trans-unit id="4540801fc126e86f0e453dd121110c00baa3a3f3" translate="yes" xml:space="preserve">
          <source>On a UNIX system this means the programs may be executed from a command shell such as bash, csh, ksh and so forth. When a GnuCOBOL program runs on a Windows system, it runs within a console window (i.e. &quot;cmd.exe&quot;). OSX versions of GnuCOBOL programs run within a &quot;terminal.app&quot; window.</source>
          <target state="translated">UNIXシステムでは、これはプログラムがbash、csh、kshなどのコマンドシェルから実行されることを意味します。Windowsシステム上でGnuCOBOLプログラムを実行する場合、コンソールウィンドウ(例:&quot;cmd.exe&quot;)内で実行されます。OSX版のGnuCOBOLプログラムは「terminal.app」ウィンドウ内で動作します。</target>
        </trans-unit>
        <trans-unit id="29e07a8440be1b45abe631d62a1c13d7f8e27480" translate="yes" xml:space="preserve">
          <source>On a Unix system, the shell environment will be established using the default shell program. This is also true when using a GnuCOBOL build created with and for OSX or the Cygwin Unix emulator.</source>
          <target state="translated">Unix システムでは、シェル環境はデフォルトのシェルプログラムを使用して確立されます。これは、OSXやCygwin Unixエミュレータで作成されたGnuCOBOLビルドを使用している場合にも当てはまります。</target>
        </trans-unit>
        <trans-unit id="af55e7b1cbcd2989727c3429230b16527d3721da" translate="yes" xml:space="preserve">
          <source>On a Windows system, the &lt;code&gt;TMP&lt;/code&gt; environment variable is normally set for you when you logon. If you wish to use a different temporary folder, you may set &lt;code&gt;TMPDIR&lt;/code&gt; yourself and have no fear of disrupting other Windows software that relies on TMP.</source>
          <target state="translated">Windowsシステムでは、通常、ログオン時に &lt;code&gt;TMP&lt;/code&gt; 環境変数が設定されます。別の一時フォルダーを使用する場合は、 &lt;code&gt;TMPDIR&lt;/code&gt; を自分で設定すれば、TMPに依存する他のWindowsソフトウェアを中断する心配はありません。</target>
        </trans-unit>
        <trans-unit id="09cea21f0e62fb9defc06b78067faf5ba65df913" translate="yes" xml:space="preserve">
          <source>On a Windows system, the&lt;code&gt;TMP&lt;/code&gt;environment variable is normally set for you when you logon. If you wish to use a different temporary folder, you may set&lt;code&gt;TMPDIR&lt;/code&gt;yourself and have no fear of disrupting other Windows software that relies on TMP.</source>
          <target state="translated">Windowsシステムでは、 &lt;code&gt;TMP&lt;/code&gt; 環境変数は通常、ログオン時に設定されます。別の一時フォルダを使用したい場合は、 &lt;code&gt;TMPDIR&lt;/code&gt; を自分で設定でき、TMPに依存する他のWindowsソフトウェアを妨害する恐れはありません。</target>
        </trans-unit>
        <trans-unit id="0f6d26b550b1ee3dcc3a84507d1eb437199ba578" translate="yes" xml:space="preserve">
          <source>On a system supporting only one format of binary storage (generally, that would be big-endian), the terms</source>
          <target state="translated">1つの形式のバイナリストレージのみをサポートするシステムでは(一般的にはビッグエンディアン)、用語</target>
        </trans-unit>
        <trans-unit id="49c811f291ecda0c24fa5479b92e28877266432a" translate="yes" xml:space="preserve">
          <source>On a system supporting only one format of binary storage (generally, that would be big-endian), the terms &amp;rsquo;most-efficient&amp;rsquo; and &amp;rsquo;native format&amp;rsquo; are synonymous.</source>
          <target state="translated">バイナリストレージの1つの形式のみをサポートするシステム（通常、これはビッグエンディアンになります）では、「最も効率的な」および「ネイティブ形式」という用語は同義です。</target>
        </trans-unit>
        <trans-unit id="8cf55637bf6e9946a839f557065a9756657be924" translate="yes" xml:space="preserve">
          <source>On the first presentation of the detail group after any control break occurs.</source>
          <target state="translated">任意の制御ブレークが発生した後の詳細グループの最初のプレゼンテーションで。</target>
        </trans-unit>
        <trans-unit id="e5bea69f1d184e8b4396de7835faab7aa40b288f" translate="yes" xml:space="preserve">
          <source>On the first presentation of the detail group after every new page is started.</source>
          <target state="translated">新しいページが始まるたびに詳細グループの最初のプレゼンテーションで</target>
        </trans-unit>
        <trans-unit id="610e218a02d7bb1f016c3ef41783ef19dcf52059" translate="yes" xml:space="preserve">
          <source>On the first presentation of the detail group following the &lt;code&gt;INITIATE&lt;/code&gt; (see &lt;a href=&quot;#INITIATE&quot;&gt;INITIATE&lt;/a&gt;) of the report.</source>
          <target state="translated">レポートの &lt;code&gt;INITIATE&lt;/code&gt; （&lt;a href=&quot;#INITIATE&quot;&gt;INITIATEを&lt;/a&gt;参照）に続く詳細グループの最初のプレゼンテーション。</target>
        </trans-unit>
        <trans-unit id="17545f79b06e402b5aa4758aadea0e8d4f7b4497" translate="yes" xml:space="preserve">
          <source>On the first presentation of the detail group following the&lt;code&gt;INITIATE&lt;/code&gt;(see &lt;a href=&quot;#INITIATE&quot;&gt;INITIATE&lt;/a&gt;) of the report.</source>
          <target state="translated">レポートの &lt;code&gt;INITIATE&lt;/code&gt; （&lt;a href=&quot;#INITIATE&quot;&gt;INITIATEを&lt;/a&gt;参照）に続く詳細グループの最初のプレゼンテーション。</target>
        </trans-unit>
        <trans-unit id="9525ae88a058bce1077fdfcee161a09188f2755b" translate="yes" xml:space="preserve">
          <source>Once GnuCOBOL programs have been compiled into either directly-executable programs (created via the</source>
          <target state="translated">GnuCOBOLプログラムが直接実行可能なプログラム(</target>
        </trans-unit>
        <trans-unit id="621bb9957748f1c9660b66609e36e16b3f8976de" translate="yes" xml:space="preserve">
          <source>Once GnuCOBOL programs have been compiled into either directly-executable programs (created via the&lt;code&gt;-x&lt;/code&gt;switch) or dynamically-loadable libraries (created via the&lt;code&gt;-m&lt;/code&gt;switch), those programs may be executed from any shell environment. The exact manner in which the two are executed will differ, as described in the upcoming sections.</source>
          <target state="translated">GnuCOBOLプログラムが直接実行可能なプログラム（ &lt;code&gt;-x&lt;/code&gt; スイッチを介して作成）または動的にロード可能なライブラリ（ &lt;code&gt;-m&lt;/code&gt; スイッチを介して作成）にコンパイルされると、それらのプログラムは任意のシェル環境から実行できます。次のセクションで説明するように、2つが実行される正確な方法は異なります。</target>
        </trans-unit>
        <trans-unit id="1ef03c1edf38bb7749581fc6cd2e170dfcec7965" translate="yes" xml:space="preserve">
          <source>Once a Format 1 &lt;code&gt;REPLACE&lt;/code&gt; statement is encountered in the currently-compiling source file, Replace Mode becomes active, and the change(s) specified by that statement will be automatically made on all subsequent source statements the compiler reads from the file.</source>
          <target state="translated">現在コンパイル中のソースファイルでフォーマット &lt;code&gt;REPLACE&lt;/code&gt; ステートメントが検出されると、置換モードがアクティブになり、そのステートメントで指定された変更は、コンパイラがファイルから読み取る後続のすべてのソースステートメントで自動的に行われます。</target>
        </trans-unit>
        <trans-unit id="77004179f0b5866728a6a173ab6e2cd8c6678cae" translate="yes" xml:space="preserve">
          <source>Once a Format 1&lt;code&gt;REPLACE&lt;/code&gt;statement is encountered in the currently-compiling source file, Replace Mode becomes active, and the change(s) specified by that statement will be automatically made on all subsequent source statements the compiler reads from the file.</source>
          <target state="translated">現在コンパイル中のソースファイルでFormat 1 &lt;code&gt;REPLACE&lt;/code&gt; ステートメントが検出されると、Replace Modeがアクティブになり、そのステートメントで指定された変更が、コンパイラーがファイルから読み取る後続のすべてのソースステートメントで自動的に行われます。</target>
        </trans-unit>
        <trans-unit id="6d2c64519a47a1491ded5e591752c517d14bf328" translate="yes" xml:space="preserve">
          <source>Once a dynamically-loadable module is actually loaded into memory, even if it is subsequently unloaded (via the &lt;code&gt;CANCEL&lt;/code&gt; statement), its list of entry-points remain available to the GnuCOBOL run-time library and subsequent re-executions of any of those entry points will be able to bypass the search (rule #4) as well as the</source>
          <target state="translated">動的にロード可能なモジュールが実際にメモリにロードされると、後で（ &lt;code&gt;CANCEL&lt;/code&gt; ステートメントを介して）アンロードされた場合でも、そのエントリポイントのリストは、GnuCOBOLランタイムライブラリとその後のそれらのエントリの再実行で引き続き使用できます。ポイントは検索（ルール＃4）と同様にバイパスすることができます</target>
        </trans-unit>
        <trans-unit id="dc16e338caa3250507aeb7e1c7c59077ca7fc160" translate="yes" xml:space="preserve">
          <source>Once a dynamically-loadable module is actually loaded into memory, even if it is subsequently unloaded (via the&lt;code&gt;CANCEL&lt;/code&gt;statement), it&amp;rsquo;s list of entry-points remain available to the GnuCOBOL run-time library and subsequent re-executions of any of those entry points will be able to bypass the search (rule #4) as well as the &quot;first-execution rule&quot; (rule #3).</source>
          <target state="translated">動的にロード可能なモジュールが実際にメモリにロードされると、その後（ &lt;code&gt;CANCEL&lt;/code&gt; ステートメントを介して）アンロードされた場合でも、そのエントリポイントのリストは、GnuCOBOLランタイムライブラリで引き続き利用でき、その後、これらのエントリのいずれかを再実行できます。ポイントは、検索（ルール＃4）と「初回実行ルール」（ルール＃3）をバイパスすることができます。</target>
        </trans-unit>
        <trans-unit id="5f4ebf79a6128ffb4296f6d51960e2abeced39da" translate="yes" xml:space="preserve">
          <source>Once a field list has been determined, each item in that field list will be initialized as if an individual &lt;code&gt;MOVE&lt;/code&gt; (see &lt;a href=&quot;#MOVE&quot;&gt;MOVE&lt;/a&gt;) statement to that effect had been coded. The rules for initialization are as follows:</source>
          <target state="translated">フィールドリストが決定されると、そのフィールドリスト内の各項目は、その効果に対する個々の &lt;code&gt;MOVE&lt;/code&gt; （&lt;a href=&quot;#MOVE&quot;&gt;MOVEを&lt;/a&gt;参照）ステートメントがコーディングされているかのように初期化されます。初期化のルールは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="59e918dab4bdf59a27422aa9bebbbdf5591d8385" translate="yes" xml:space="preserve">
          <source>Once a field list has been determined, each item in that field list will be initialized as if an individual&lt;code&gt;MOVE&lt;/code&gt;(see &lt;a href=&quot;#MOVE&quot;&gt;MOVE&lt;/a&gt;) statement to that effect had been coded. The rules for initialization are as follows:</source>
          <target state="translated">フィールドリストが決定されると、そのフィールドリストの各項目は、その効果に対する個々の &lt;code&gt;MOVE&lt;/code&gt; （&lt;a href=&quot;#MOVE&quot;&gt;MOVEを&lt;/a&gt;参照）ステートメントがコーディングされているかのように初期化されます。初期化のルールは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="286757838794003214e83168a9d3c53442e79df6" translate="yes" xml:space="preserve">
          <source>Once an environment variable name base (let&amp;rsquo;s refer to it as &quot;bbbb&quot;) has been determined, the runtime system will look for the first one of the following environment variables that exists, in this sequence:</source>
          <target state="translated">環境変数名のベース（ &quot;bbbb&quot;と呼ぶことにします）が決定されると、ランタイムシステムは、この順序で存在する次の環境変数の最初の1つを探します。</target>
        </trans-unit>
        <trans-unit id="fb26d1ca93153363fd5fbfd4cc09a22ab21757f3" translate="yes" xml:space="preserve">
          <source>Once an environment variable name base (let&amp;rsquo;s refer to it as &lt;code&gt;&lt;var&gt;bbbb&lt;/var&gt;&lt;/code&gt;) has been determined, the runtime system will look for the first one of the following environment variables that exists, in this sequence:</source>
          <target state="translated">環境変数名ベース（ &lt;code&gt;&lt;var&gt;bbbb&lt;/var&gt;&lt;/code&gt; と呼びます）が決定されると、ランタイムシステムは、次の順序で、存在する次の環境変数の最初の1つを検索します。</target>
        </trans-unit>
        <trans-unit id="e625244fde391b91510dca176749dade404d9a46" translate="yes" xml:space="preserve">
          <source>Once class &quot;Hexadecimal&quot; has been defined, program code could then use a statement such as&lt;code&gt;IF input-item IS Hexadecimal&lt;/code&gt;to determine if the value of characters in a data item are valid according to that class.</source>
          <target state="translated">クラス「16進数」が定義されると、プログラムコードは &lt;code&gt;IF input-item IS Hexadecimal&lt;/code&gt; などのステートメントを使用して、データクラスの文字の値がそのクラスに従って有効かどうかを判断できます。</target>
        </trans-unit>
        <trans-unit id="6fd0689c6061a45691138c95fa71cdc6f29d354f" translate="yes" xml:space="preserve">
          <source>Once class &lt;code&gt;Hexadecimal&lt;/code&gt; has been defined, program code could then use a statement such as &lt;code&gt;IF input-item IS Hexadecimal&lt;/code&gt; to determine if the value of characters in a data item are valid according to that class.</source>
          <target state="translated">クラス &lt;code&gt;Hexadecimal&lt;/code&gt; が定義されると、プログラムコードは、 &lt;code&gt;IF input-item IS Hexadecimal&lt;/code&gt; などのステートメントを使用して、データ項目の文字の値がそのクラスに従って有効かどうかを判断できます。</target>
        </trans-unit>
        <trans-unit id="3a7607f575f1fa9fa2920755a20a174fae035147" translate="yes" xml:space="preserve">
          <source>Once in that form, mathematical operations may be performed against the internal date before it is transformed back into a date using the &lt;code&gt;DATE-OF-INTEGER&lt;/code&gt; (see &lt;a href=&quot;#DATE_002dOF_002dINTEGER&quot;&gt;DATE-OF-INTEGER&lt;/a&gt;) or &lt;code&gt;DAY-OF-INTEGER&lt;/code&gt; (see &lt;a href=&quot;#DAY_002dOF_002dINTEGER&quot;&gt;DAY-OF-INTEGER&lt;/a&gt;) function.</source>
          <target state="translated">その形式になると、 &lt;code&gt;DATE-OF-INTEGER&lt;/code&gt; （&lt;a href=&quot;#DATE_002dOF_002dINTEGER&quot;&gt;DATE-OF-INTEGERを&lt;/a&gt;参照）または &lt;code&gt;DAY-OF-INTEGER&lt;/code&gt; （&lt;a href=&quot;#DAY_002dOF_002dINTEGER&quot;&gt;DAY-OF-INTEGERを&lt;/a&gt;参照）を使用して日付に変換される前に、内部日付に対して数学演算を実行できます。） 関数。</target>
        </trans-unit>
        <trans-unit id="0585d2910d0c3575c9ce966ec284963466eee0b8" translate="yes" xml:space="preserve">
          <source>Once in that form, mathematical operations may be performed against the internal date before it is transformed back into a date using the&lt;code&gt;DATE-OF-INTEGER&lt;/code&gt;(see &lt;a href=&quot;#DATE_002dOF_002dINTEGER&quot;&gt;DATE-OF-INTEGER&lt;/a&gt;) or&lt;code&gt;DAY-OF-INTEGER&lt;/code&gt;(see &lt;a href=&quot;#DAY_002dOF_002dINTEGER&quot;&gt;DAY-OF-INTEGER&lt;/a&gt;) function.</source>
          <target state="translated">いったんその形式になったら、 &lt;code&gt;DATE-OF-INTEGER&lt;/code&gt; （&lt;a href=&quot;#DATE_002dOF_002dINTEGER&quot;&gt;DATE-OF-INTEGERを&lt;/a&gt;参照）または &lt;code&gt;DAY-OF-INTEGER&lt;/code&gt; （&lt;a href=&quot;#DAY_002dOF_002dINTEGER&quot;&gt;DAY-OF-INTEGERを&lt;/a&gt;参照）を使用して日付に変換される前に、内部日付に対して数学演算を実行できます。） 関数。</target>
        </trans-unit>
        <trans-unit id="27a460e37f19959ffeef81697854eed6253ff720" translate="yes" xml:space="preserve">
          <source>Once read from the file, the newly-retrieved record data will be saved into the 01-level record structure(s) that immediately follow the file&amp;rsquo;s &lt;code&gt;FD&lt;/code&gt;. If the optional  &lt;code&gt;INTO&lt;/code&gt; clause is present, a copy of the just-retrieved record will be automatically moved to &lt;var&gt;identifier-1&lt;/var&gt;.</source>
          <target state="translated">ファイルから読み取られると、新しく取得されたレコードデータは、ファイルの &lt;code&gt;FD&lt;/code&gt; の直後に続く01レベルのレコード構造に保存されます。オプションの &lt;code&gt;INTO&lt;/code&gt; 句が存在する場合、 取得されたばかりのレコードのコピーが自動的に &lt;var&gt;identifier-1&lt;/var&gt; 移動されます。</target>
        </trans-unit>
        <trans-unit id="3d181d18b6a5fa0a6fa8cff3acb56941d7cd3053" translate="yes" xml:space="preserve">
          <source>Once read from the file, the newly-retrieved record data will be saved into the 01-level record structure(s) that immediately follow the file&amp;rsquo;s&lt;code&gt;FD&lt;/code&gt; If the optional&lt;code&gt;INTO&lt;/code&gt;</source>
          <target state="translated">ファイルから読み取られると、新しく取得されたレコードデータは、ファイルの &lt;code&gt;FD&lt;/code&gt; の直後に続く01レベルのレコード構造に保存されます。オプションの &lt;code&gt;INTO&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f9b7144965544259e3f97d35c9ae743160170dca" translate="yes" xml:space="preserve">
          <source>Once that has been done, every (extended) ACCEPT, will return a value in COB_CRT_STATUS reflecting mouse activity, when such activity occurs. The applicable values are shown in screenio.cpy under ?Exception keys for mouse handling?. If you define a variable in SPECIAL NAMES as follows:</source>
          <target state="translated">これが行われると、(拡張された)ACCEPTの度に、マウスの活動が発生した場合、マウスの活動を反映したCOB_CRT_STATUSの値が返される。適用可能な値は、screenio.cpyの「マウス処理のための例外キー」に示されている。以下のようにSPECIAL NAMESで変数を定義すると、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="ed7991d9259d5488ffed54f05830f63330c16c88" translate="yes" xml:space="preserve">
          <source>Once the &amp;lt;</source>
          <target state="translated">一度</target>
        </trans-unit>
        <trans-unit id="099be0ad066e470c8f7df22253bba59177591c86" translate="yes" xml:space="preserve">
          <source>Once the &lt;var&gt;imperative-statement-1&lt;/var&gt; has been executed, or no &lt;var&gt;imperative-statement-1&lt;/var&gt; was found anywhere after the &amp;rsquo;</source>
          <target state="translated">Once the &lt;var&gt;imperative-statement-1&lt;/var&gt; has been executed, or no &lt;var&gt;imperative-statement-1&lt;/var&gt; was found anywhere after the &amp;rsquo;</target>
        </trans-unit>
        <trans-unit id="264435854347c75ecb5af8a5bf18fc2e6979a2d1" translate="yes" xml:space="preserve">
          <source>Once the address of a procedure division code area has been acquired in this way, the address could be passed to a subroutine (usually written in C) for whatever use it needs it for. For examples of &lt;code&gt;PROGRAM-POINTER&lt;/code&gt;s at work, see the discussions of the &lt;code&gt;CBL_ERROR_PROC&lt;/code&gt; built-in system subroutine (see &lt;a href=&quot;#CBL_005fERROR_005fPROC&quot;&gt;CBL_ERROR_PROC&lt;/a&gt;) and &lt;code&gt;CBL_EXIT_PROC&lt;/code&gt; built-in system subroutine (see &lt;a href=&quot;#CBL_005fEXIT_005fPROC&quot;&gt;CBL_EXIT_PROC&lt;/a&gt;).</source>
          <target state="translated">Once the address of a procedure division code area has been acquired in this way, the address could be passed to a subroutine (usually written in C) for whatever use it needs it for. For examples of &lt;code&gt;PROGRAM-POINTER&lt;/code&gt; s at work, see the discussions of the &lt;code&gt;CBL_ERROR_PROC&lt;/code&gt; built-in system subroutine (see &lt;a href=&quot;#CBL_005fERROR_005fPROC&quot;&gt;CBL_ERROR_PROC&lt;/a&gt;) and &lt;code&gt;CBL_EXIT_PROC&lt;/code&gt; built-in system subroutine (see &lt;a href=&quot;#CBL_005fEXIT_005fPROC&quot;&gt;CBL_EXIT_PROC&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="76eaa092cafda97efbcf2f6303d6984802250d02" translate="yes" xml:space="preserve">
          <source>Once the address of a procedure division code area has been acquired in this way, the address could be passed to a subroutine (usually written in C) for whatever use it needs it for. For examples of&lt;code&gt;PROGRAM-POINTER&lt;/code&gt; at work, see the discussions of the&lt;code&gt;CBL_ERROR_PROC&lt;/code&gt;built-in system subroutine (see &lt;a href=&quot;#CBL_005fERROR_005fPROC&quot;&gt;CBL_ERROR_PROC&lt;/a&gt;) and&lt;code&gt;CBL_EXIT_PROC&lt;/code&gt;built-in system subroutine (see &lt;a href=&quot;#CBL_005fEXIT_005fPROC&quot;&gt;CBL_EXIT_PROC&lt;/a&gt;).</source>
          <target state="translated">このようにして手続き部コード領域のアドレスを取得すると、そのアドレスを必要な用途に応じてサブルーチン（通常はCで記述）に渡すことができます。作業中の &lt;code&gt;PROGRAM-POINTER&lt;/code&gt; の例については、 &lt;code&gt;CBL_ERROR_PROC&lt;/code&gt; 組み込みシステムサブルーチン（&lt;a href=&quot;#CBL_005fERROR_005fPROC&quot;&gt;CBL_ERROR_PROCを&lt;/a&gt;参照）および &lt;code&gt;CBL_EXIT_PROC&lt;/code&gt; 組み込みシステムサブルーチン（&lt;a href=&quot;#CBL_005fEXIT_005fPROC&quot;&gt;CBL_EXIT_PROCを&lt;/a&gt;参照）の説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="e7b3e993beace23677f33388c1750dc84928bf9a" translate="yes" xml:space="preserve">
          <source>Once the dynamically-loadable module has been successfully loaded, any of the entry-points contained within it are now available for reference.</source>
          <target state="translated">動的にロード可能なモジュールが正常にロードされると、その中に含まれるエントリポイントが参照可能になります。</target>
        </trans-unit>
        <trans-unit id="bf655804b96355c58d780ad7c184b2358e70ed87" translate="yes" xml:space="preserve">
          <source>Once the input procedure terminates, the input phase is complete.</source>
          <target state="translated">入力手順が終了すると、入力フェーズが終了します。</target>
        </trans-unit>
        <trans-unit id="c3c67cac00280fcb367535119a29438c7a49b6c1" translate="yes" xml:space="preserve">
          <source>Once the list of control breaks has been determined, the &lt;code&gt;CONTROL FOOTING&lt;/code&gt; for each &lt;var&gt;identifier-2&lt;/var&gt; having a control break (if any such report group is defined) will be presented.</source>
          <target state="translated">Once the list of control breaks has been determined, the &lt;code&gt;CONTROL FOOTING&lt;/code&gt; for each &lt;var&gt;identifier-2&lt;/var&gt; having a control break (if any such report group is defined) will be presented.</target>
        </trans-unit>
        <trans-unit id="3fd5f8ce1885cd5e6704d4107925ee0fa79ae370" translate="yes" xml:space="preserve">
          <source>Once the list of control breaks has been determined, the&lt;code&gt;CONTROL FOOTING&lt;/code&gt;for each &amp;lt;</source>
          <target state="translated">コントロール・ブレークのリストは、決定された後 &lt;code&gt;CONTROL FOOTING&lt;/code&gt; それぞれについての&amp;lt;</target>
        </trans-unit>
        <trans-unit id="da82fa2addff5a8b53971b5198ac5b3f2dbaf44c" translate="yes" xml:space="preserve">
          <source>Once the module has been located (if location was needed), it will be loaded into memory (if not already loaded).</source>
          <target state="translated">モジュールが配置されると(配置が必要な場合)、それはメモリにロードされます(まだロードされていない場合)。</target>
        </trans-unit>
        <trans-unit id="4ea7f4222f4e79b517953879f7a0910e37dccbb7" translate="yes" xml:space="preserve">
          <source>Once the output procedure terminates, or the last &amp;lt;</source>
          <target state="translated">出力プロシージャが終了すると、または最後の&amp;lt;</target>
        </trans-unit>
        <trans-unit id="aaa0833d3db41ac1347c6b5bf79fb0df2decfc42" translate="yes" xml:space="preserve">
          <source>Once the output procedure terminates, or the last &lt;var&gt;file-name-3&lt;/var&gt; file has been populated with merged data, the output phase &amp;mdash; and the &lt;code&gt;MERGE&lt;/code&gt; statement itself &amp;mdash; is complete.</source>
          <target state="translated">Once the output procedure terminates, or the last &lt;var&gt;file-name-3&lt;/var&gt; file has been populated with merged data, the output phase &amp;mdash; and the &lt;code&gt;MERGE&lt;/code&gt; statement itself &amp;mdash; is complete.</target>
        </trans-unit>
        <trans-unit id="ff0f3a202fb5e56e9e5055a0c22a464e320087b3" translate="yes" xml:space="preserve">
          <source>Once the output procedure terminates, the sort is complete.</source>
          <target state="translated">出力手続きが終了すると、ソートが完了します。</target>
        </trans-unit>
        <trans-unit id="aa2d27ad2b6a5bb2d485b2b3cf531800fdf57d2a" translate="yes" xml:space="preserve">
          <source>Once the sort stage is complete, a copy of the sorted data will be written to each &amp;lt;</source>
          <target state="translated">並べ替えステージが完了すると、並べ替えられたデータのコピーが各&amp;lt;</target>
        </trans-unit>
        <trans-unit id="c2b31d50fc738d0b1586f3c6b1ed68f5906665b4" translate="yes" xml:space="preserve">
          <source>Once the sort stage is complete, a copy of the sorted data will be written to each &lt;var&gt;file-name-2&lt;/var&gt; if the  &lt;code&gt;GIVING&lt;/code&gt; clause was specified. None of the &lt;var&gt;file-name-2&lt;/var&gt; files can be open at the time the sort is executed.</source>
          <target state="translated">Once the sort stage is complete, a copy of the sorted data will be written to each &lt;var&gt;file-name-2&lt;/var&gt; if the &lt;code&gt;GIVING&lt;/code&gt; clause was specified. None of the &lt;var&gt;file-name-2&lt;/var&gt; files can be open at the time the sort is executed.</target>
        </trans-unit>
        <trans-unit id="a952da0c3633e235f52bb16ddddf1c8394a97156" translate="yes" xml:space="preserve">
          <source>Once tokens have been identified, the first (the command) will be discarded; the rest will be stored into the &quot;CHAINING&quot; arguments when the program begins execution, with the 2nd token going to the 1st argument, the 3rd token going to the 2nd argument and so forth.</source>
          <target state="translated">トークンが識別されると、最初の(コマンド)は破棄され、残りはプログラムの実行開始時に &quot;CHAINING &quot;引数に格納され、2番目のトークンは第1引数に、3番目のトークンは第2引数に、などとなります。</target>
        </trans-unit>
        <trans-unit id="e96bd4b7d9454c7ae8c13f2d3cc74a634a9784b0" translate="yes" xml:space="preserve">
          <source>Once tokens have been identified, the first one (the command) will be discarded; the rest will be stored into the &lt;code&gt;CHAINING&lt;/code&gt; arguments when the program begins execution, with the 2nd token going to the 1&lt;sup&gt;st&lt;/sup&gt; argument, the 3rd token going to the 2nd argument and so forth.</source>
          <target state="translated">Once tokens have been identified, the first one (the command) will be discarded; the rest will be stored into the &lt;code&gt;CHAINING&lt;/code&gt; arguments when the program begins execution, with the 2nd token going to the 1&lt;sup&gt;st&lt;/sup&gt; argument, the 3rd token going to the 2nd argument and so forth.</target>
        </trans-unit>
        <trans-unit id="15cdd4ea42611c8aef9419d97cee120ed7df8109" translate="yes" xml:space="preserve">
          <source>Once you have defined an alphabet name, that alphabet name may be used on specifications in &lt;code&gt;CODE-SET&lt;/code&gt;, &lt;code&gt;COLLATING SEQUENCE&lt;/code&gt;, or &lt;code&gt;SYMBOLIC CHARACTERS&lt;/code&gt; clauses elsewhere in the program.</source>
          <target state="translated">Once you have defined an alphabet name, that alphabet name may be used on specifications in &lt;code&gt;CODE-SET&lt;/code&gt; , &lt;code&gt;COLLATING SEQUENCE&lt;/code&gt; , or &lt;code&gt;SYMBOLIC CHARACTERS&lt;/code&gt; clauses elsewhere in the program.</target>
        </trans-unit>
        <trans-unit id="fc842de35b43065fcc2486b3f9cd1a54afa40e68" translate="yes" xml:space="preserve">
          <source>Once you have defined an alphabet name, that alphabet name may be used on specifications in&lt;code&gt;CODE-SET&lt;/code&gt;&lt;code&gt;COLLATING SEQUENCE&lt;/code&gt; or&lt;code&gt;SYMBOLIC CHARACTERS&lt;/code&gt;clauses elsewhere in the program.</source>
          <target state="translated">アルファベット名を定義すると、そのアルファベット名は、プログラムの他の場所にある &lt;code&gt;CODE-SET&lt;/code&gt; &lt;code&gt;COLLATING SEQUENCE&lt;/code&gt; または &lt;code&gt;SYMBOLIC CHARACTERS&lt;/code&gt; 句の仕様で使用できます。</target>
        </trans-unit>
        <trans-unit id="1db8d869f5e31c2a114146e31c6c3bb19304efe6" translate="yes" xml:space="preserve">
          <source>Once you know the answer to questions 1-4, you may easily determine the answers to the remaining questions as follows:</source>
          <target state="translated">問1~4の答えがわかれば、以下のように残りの問題の答えを簡単に決めることができます。</target>
        </trans-unit>
        <trans-unit id="d64e944e7805a2994fd1366f274fdd6a314f0fc1" translate="yes" xml:space="preserve">
          <source>Once your program has been thoroughly tested, you&amp;rsquo;ll want different sequences to be generated each time the program runs. One possible way to accomplish this is to use a &amp;lt;</source>
          <target state="translated">プログラムを徹底的にテストしたら、プログラムを実行するたびに異なるシーケンスを生成する必要があります。これを実現する1つの可能な方法は、&amp;lt;</target>
        </trans-unit>
        <trans-unit id="bf37040bfaedfe2d348e9a0d2741f73ecc8dc3be" translate="yes" xml:space="preserve">
          <source>Once your program has been thoroughly tested, you&amp;rsquo;ll want different sequences to be generated each time the program runs. One possible way to accomplish this is to use a &lt;var&gt;seed&lt;/var&gt; that is likely to be different every time the program is executed, as is likely to be the case if the first &lt;code&gt;MOVE&lt;/code&gt; statement in the previous example were replaced by this:</source>
          <target state="translated">Once your program has been thoroughly tested, you&amp;rsquo;ll want different sequences to be generated each time the program runs. One possible way to accomplish this is to use a &lt;var&gt;seed&lt;/var&gt; that is likely to be different every time the program is executed, as is likely to be the case if the first &lt;code&gt;MOVE&lt;/code&gt; statement in the previous example were replaced by this:</target>
        </trans-unit>
        <trans-unit id="1007c41e5b30e5bc282ba8e877ad350a95367078" translate="yes" xml:space="preserve">
          <source>One of COBOL&amp;rsquo;s strengths is the wide variety of data files it is capable of accessing. GnuCOBOL programs, like those created with other COBOL implementations, need to have the structure of any files they will be reading and/or writing described to them. The highest-level characteristic of a file&amp;rsquo;s structure is defined by specifying the organization of the file, as follows:</source>
          <target state="translated">One of COBOL&amp;rsquo;s strengths is the wide variety of data files it is capable of accessing. GnuCOBOL programs, like those created with other COBOL implementations, need to have the structure of any files they will be reading and/or writing described to them. The highest-level characteristic of a file&amp;rsquo;s structure is defined by specifying the organization of the file, as follows:</target>
        </trans-unit>
        <trans-unit id="1b78c56a06d1111a84b2f488c993f432b739bce9" translate="yes" xml:space="preserve">
          <source>One of these environment variables must be set to a directory/folder appropriate to create temporary files in. They will be checked in the order shown. This will be used by the &lt;code&gt;SORT&lt;/code&gt; statement (see &lt;a href=&quot;#SORT&quot;&gt;SORT&lt;/a&gt;) and &lt;code&gt;MERGE&lt;/code&gt; statement (see &lt;a href=&quot;#MERGE&quot;&gt;MERGE&lt;/a&gt;) to create temporary work files. You may also use this folder for any temporary files your application may require.</source>
          <target state="translated">One of these environment variables must be set to a directory/folder appropriate to create temporary files in. They will be checked in the order shown. This will be used by the &lt;code&gt;SORT&lt;/code&gt; statement (see &lt;a href=&quot;#SORT&quot;&gt;SORT&lt;/a&gt;) and &lt;code&gt;MERGE&lt;/code&gt; statement (see &lt;a href=&quot;#MERGE&quot;&gt;MERGE&lt;/a&gt;) to create temporary work files. You may also use this folder for any temporary files your application may require.</target>
        </trans-unit>
        <trans-unit id="54f89a5962f679ffd2d3e844b0b1ce85b6df3297" translate="yes" xml:space="preserve">
          <source>One of these environment variables must be set to a directory/folder appropriate to create temporary files in. They will be checked in the order shown. This will be used by the&lt;code&gt;SORT&lt;/code&gt;statement (see &lt;a href=&quot;#SORT&quot;&gt;SORT&lt;/a&gt;) and&lt;code&gt;MERGE&lt;/code&gt;statement (see &lt;a href=&quot;#MERGE&quot;&gt;MERGE&lt;/a&gt;) to create temporary work files. You may also use this folder for any temporary files your application may require.</source>
          <target state="translated">これらの環境変数の1つは、一時ファイルを作成するのに適切なディレクトリ/フォルダーに設定する必要があります。これらは、示されている順序でチェックされます。これはで使用される &lt;code&gt;SORT&lt;/code&gt; の声明（参照&lt;a href=&quot;#SORT&quot;&gt;SORT&lt;/a&gt;）と &lt;code&gt;MERGE&lt;/code&gt; 文は（参照&lt;a href=&quot;#MERGE&quot;&gt;MERGEを&lt;/a&gt;）一時作業ファイルを作成します。このフォルダは、アプリケーションで必要になる可能性のある一時ファイルにも使用できます。</target>
        </trans-unit>
        <trans-unit id="f6463f11b8fdf738c63c7b961b5112c2ffeb1404" translate="yes" xml:space="preserve">
          <source>One or more consecutive lines on a report that serve a common informational purpose or function. For example, lines of text that are displayed at the top or bottom of every printed page of a report.</source>
          <target state="translated">報告書上の1行以上の連続した行で、共通の情報提供の目的または機能を果たすもの。例えば、レポートの各印刷ページの上部または下部に表示されるテキストの行。</target>
        </trans-unit>
        <trans-unit id="3c39ac374029c24f83bf8591d48eb3909021e14c" translate="yes" xml:space="preserve">
          <source>Only after this processing has occurred will the detail report group specified on the &lt;code&gt;GENERATE&lt;/code&gt; be presented.</source>
          <target state="translated">Only after this processing has occurred will the detail report group specified on the &lt;code&gt;GENERATE&lt;/code&gt; be presented.</target>
        </trans-unit>
        <trans-unit id="6c681ed8f13156a1b9ed27937daab32b1e788722" translate="yes" xml:space="preserve">
          <source>Only after this processing has occurred will the detail report group specified on the&lt;code&gt;GENERATE&lt;/code&gt;be presented.</source>
          <target state="translated">この処理が行われた後にのみ、 &lt;code&gt;GENERATE&lt;/code&gt; で指定された詳細レポートグループが表示されます。</target>
        </trans-unit>
        <trans-unit id="0878acfc97c4bcb73f941a94c4ad372a7d6b027a" translate="yes" xml:space="preserve">
          <source>Only data items whose &lt;code&gt;USAGE&lt;/code&gt; (see &lt;a href=&quot;#USAGE&quot;&gt;USAGE&lt;/a&gt;) is either explicitly or implicitly defined as &lt;code&gt;DISPLAY&lt;/code&gt; may be used in &lt;code&gt;NUMERIC&lt;/code&gt; or any of the &lt;code&gt;ALPHABETIC&lt;/code&gt; class conditions.</source>
          <target state="translated">Only data items whose &lt;code&gt;USAGE&lt;/code&gt; (see &lt;a href=&quot;#USAGE&quot;&gt;USAGE&lt;/a&gt;) is either explicitly or implicitly defined as &lt;code&gt;DISPLAY&lt;/code&gt; may be used in &lt;code&gt;NUMERIC&lt;/code&gt; or any of the &lt;code&gt;ALPHABETIC&lt;/code&gt; class conditions.</target>
        </trans-unit>
        <trans-unit id="003eead4533ce41b48b2d118ad6982ea6215902b" translate="yes" xml:space="preserve">
          <source>Only data items whose&lt;code&gt;USAGE&lt;/code&gt;(see &lt;a href=&quot;#USAGE&quot;&gt;USAGE&lt;/a&gt;) is either explicitly or implicitly defined as&lt;code&gt;DISPLAY&lt;/code&gt;may be used in&lt;code&gt;NUMERIC&lt;/code&gt;or any of the&lt;code&gt;ALPHABETIC&lt;/code&gt;class conditions.</source>
          <target state="translated">その唯一のデータ項目 &lt;code&gt;USAGE&lt;/code&gt; （参照&lt;a href=&quot;#USAGE&quot;&gt;USAGEに&lt;/a&gt;）明示的または暗黙的として定義されている &lt;code&gt;DISPLAY&lt;/code&gt; で使用することができる &lt;code&gt;NUMERIC&lt;/code&gt; または任意の &lt;code&gt;ALPHABETIC&lt;/code&gt; クラス条件。</target>
        </trans-unit>
        <trans-unit id="aaecd5a9bfef1b6b18b34a342db9bff51d9af2d8" translate="yes" xml:space="preserve">
          <source>Only files intended for use as work files for either the &lt;code&gt;SORT&lt;/code&gt; (see &lt;a href=&quot;#SORT&quot;&gt;SORT&lt;/a&gt;) or &lt;code&gt;MERGE&lt;/code&gt; (see &lt;a href=&quot;#MERGE&quot;&gt;MERGE&lt;/a&gt;) statements should be coded with an SD &amp;mdash; all others should be defined with a FD.</source>
          <target state="translated">Only files intended for use as work files for either the &lt;code&gt;SORT&lt;/code&gt; (see &lt;a href=&quot;#SORT&quot;&gt;SORT&lt;/a&gt;) or &lt;code&gt;MERGE&lt;/code&gt; (see &lt;a href=&quot;#MERGE&quot;&gt;MERGE&lt;/a&gt;) statements should be coded with an SD &amp;mdash; all others should be defined with a FD.</target>
        </trans-unit>
        <trans-unit id="d711ce7b6238bc52f8a6bcb50fdf5f00798177b9" translate="yes" xml:space="preserve">
          <source>Only files intended for use as work files for either the&lt;code&gt;SORT&lt;/code&gt;(see &lt;a href=&quot;#SORT&quot;&gt;SORT&lt;/a&gt;) or&lt;code&gt;MERGE&lt;/code&gt;(see &lt;a href=&quot;#MERGE&quot;&gt;MERGE&lt;/a&gt;) statements should be coded with an SD &amp;mdash; all others should be defined with a FD.</source>
          <target state="translated">いずれか一方のみのための作業ファイルとして使用することを意図したファイル &lt;code&gt;SORT&lt;/code&gt; （参照&lt;a href=&quot;#SORT&quot;&gt;SORT&lt;/a&gt;）または &lt;code&gt;MERGE&lt;/code&gt; （参照&lt;a href=&quot;#MERGE&quot;&gt;MERGEを&lt;/a&gt;）文がSDでコーディングする必要があります-他のすべては、FDを使用して定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="5e7f05d01153592a3701f9579ca1ebed0c7e36f8" translate="yes" xml:space="preserve">
          <source>Only numeric data can be moved to a numeric or numeric-edited &amp;lt;</source>
          <target state="translated">数値または数値編集された&amp;lt;に移動できるのは数値データのみです。</target>
        </trans-unit>
        <trans-unit id="1d3c31f94bcd1e842b319e54618163a1e309e182" translate="yes" xml:space="preserve">
          <source>Only numeric data can be moved to a numeric or numeric-edited &lt;var&gt;identifier-2&lt;/var&gt;. A &lt;code&gt;MOVE&lt;/code&gt; involving numeric data will perform any necessary format conversions that might be necessary due to differing &lt;code&gt;USAGE&lt;/code&gt; (see &lt;a href=&quot;#USAGE&quot;&gt;USAGE&lt;/a&gt;) specifications.</source>
          <target state="translated">Only numeric data can be moved to a numeric or numeric-edited &lt;var&gt;identifier-2&lt;/var&gt; . A &lt;code&gt;MOVE&lt;/code&gt; involving numeric data will perform any necessary format conversions that might be necessary due to differing &lt;code&gt;USAGE&lt;/code&gt; (see &lt;a href=&quot;#USAGE&quot;&gt;USAGE&lt;/a&gt;) specifications.</target>
        </trans-unit>
        <trans-unit id="1a023314ae52d9ab2ebf57a5486f828683de142e" translate="yes" xml:space="preserve">
          <source>Only one of the &amp;lt;&amp;lt;</source>
          <target state="translated">&amp;lt;&amp;lt;の1つだけ</target>
        </trans-unit>
        <trans-unit id="2fa60291551a07d9e20f8e8f7b56d377829a2b75" translate="yes" xml:space="preserve">
          <source>Only one of the &lt;var&gt;Program-Source-Lines-n&lt;/var&gt; block of statements that lie within the scope of the &lt;code&gt;&amp;gt;&amp;gt;IF&lt;/code&gt; &amp;hellip; &lt;code&gt;&amp;gt;&amp;gt;END-IF&lt;/code&gt; may be processed by the compiler. Which one (if any) that gets processed will be decided as follows:</source>
          <target state="translated">Only one of the &lt;var&gt;Program-Source-Lines-n&lt;/var&gt; block of statements that lie within the scope of the &lt;code&gt;&amp;gt;&amp;gt;IF&lt;/code&gt; &amp;hellip; &lt;code&gt;&amp;gt;&amp;gt;END-IF&lt;/code&gt; may be processed by the compiler. Which one (if any) that gets processed will be decided as follows:</target>
        </trans-unit>
        <trans-unit id="6e90f6903d2acd5d4289ceddbb76ae736395dc5d" translate="yes" xml:space="preserve">
          <source>Only one user-defined error procedure may be in effect at any time.</source>
          <target state="translated">ユーザー定義のエラープロシージャは、いつでも1つだけ有効にすることができます。</target>
        </trans-unit>
        <trans-unit id="27fae19fb8fcab28fe3712f2fe8be9894d412e8a" translate="yes" xml:space="preserve">
          <source>Only one user-defined exit procedure may be in effect at any time.</source>
          <target state="translated">ユーザー定義の終了手順は、いつでも1つだけ有効にすることができます。</target>
        </trans-unit>
        <trans-unit id="8276bb34bd3b8954c5e1d44b6e4b6663af21c5d2" translate="yes" xml:space="preserve">
          <source>Only the final clause specified within this paragraph should be terminated with a period.</source>
          <target state="translated">この段落内で指定された最終節のみ、期間をもって終了させること。</target>
        </trans-unit>
        <trans-unit id="a38ff83076ee4107d134eef3c32fe0b34a146d76" translate="yes" xml:space="preserve">
          <source>Only the lowest-level directory (last) in the specified path can be created &amp;mdash; all others must already exist. This subroutine will</source>
          <target state="translated">Only the lowest-level directory (last) in the specified path can be created &amp;mdash; all others must already exist. This subroutine will</target>
        </trans-unit>
        <trans-unit id="19093a1f09bb5bb1f9ea7e1e012a0f82b409bbd3" translate="yes" xml:space="preserve">
          <source>Only the lowest-level directory (last) in the specified path can be created &amp;mdash; all others must already exist. This subroutine will NOT behave as a&lt;code&gt;mkdir -p&lt;/code&gt;(Unix) or&lt;code&gt;mkdir /p&lt;/code&gt;(Windows).</source>
          <target state="translated">指定したパスの最下位レベルのディレクトリ（最後）のみを作成できます。その他のディレクトリはすべて存在している必要があります。このサブルーチンは、 &lt;code&gt;mkdir -p&lt;/code&gt; （UNIX）または &lt;code&gt;mkdir /p&lt;/code&gt; （Windows）としては動作しません。</target>
        </trans-unit>
        <trans-unit id="18a2770fd2028b8848e5939f9beca76f8630c1c6" translate="yes" xml:space="preserve">
          <source>Only the lowest-level directory (last) in the specified path will be deleted, and that directory must be empty to be deleted.</source>
          <target state="translated">指定したパス内の最下位のディレクトリ(最後の)のみが削除され、そのディレクトリは空でなければ削除されません。</target>
        </trans-unit>
        <trans-unit id="1aec312e1ee36a7183965a81eb1e3cb89dc201e9" translate="yes" xml:space="preserve">
          <source>Only those as-yet uninitialized list members meeting the criteria set forth for the specified &amp;lt;</source>
          <target state="translated">指定された&amp;lt;に対して設定された基準を満たす、まだ初期化されていないリストメンバーのみ</target>
        </trans-unit>
        <trans-unit id="74b9edb1f81581f0e6ce322d29834df2b52c72fb" translate="yes" xml:space="preserve">
          <source>Only those as-yet uninitialized list members meeting the criteria set forth for the specified &lt;var&gt;category-name-2&lt;/var&gt; will qualify for this initialization.</source>
          <target state="translated">Only those as-yet uninitialized list members meeting the criteria set forth for the specified &lt;var&gt;category-name-2&lt;/var&gt; will qualify for this initialization.</target>
        </trans-unit>
        <trans-unit id="166d658006e30be1b3535cc3c406eb98b0534317" translate="yes" xml:space="preserve">
          <source>Opening a file with this sharing option indicates you are willing to allow other programs to &lt;code&gt;OPEN&lt;/code&gt; the file for input while you have it open. If they attempt any other &lt;code&gt;OPEN&lt;/code&gt;, theirs will fail with a file status of 37. Of course, your program may fail if someone else got to the file first and opened it with a sharing option that imposed file-sharing limitations.</source>
          <target state="translated">Opening a file with this sharing option indicates you are willing to allow other programs to &lt;code&gt;OPEN&lt;/code&gt; the file for input while you have it open. If they attempt any other &lt;code&gt;OPEN&lt;/code&gt; , theirs will fail with a file status of 37. Of course, your program may fail if someone else got to the file first and opened it with a sharing option that imposed file-sharing limitations.</target>
        </trans-unit>
        <trans-unit id="e4d4f39f5c6f13114530b1c856be188e28a33feb" translate="yes" xml:space="preserve">
          <source>Opening a file with this sharing option indicates you are willing to allow other programs to&lt;code&gt;OPEN&lt;/code&gt;the file for input while you have it open. If they attempt any other&lt;code&gt;OPEN&lt;/code&gt; theirs will fail with a file status of 37. Of course, your program may fail if someone else got to the file first and opened it with a sharing option that imposed file-sharing limitations.</source>
          <target state="translated">この共有オプションでファイルを開くと、他のプログラムができるようにするために喜んであることを示し &lt;code&gt;OPEN&lt;/code&gt; あなたがそれを開いている間、入力用のファイルを。他の &lt;code&gt;OPEN&lt;/code&gt; を試行すると、ファイルステータス37で失敗します。もちろん、他の誰かが最初にファイルにアクセスし、共有オプションを使用してファイル共有制限を課してファイルを開いた場合、プログラムは失敗する可能性があります。</target>
        </trans-unit>
        <trans-unit id="29cc34f8ed315d18fb371f87372eec6af99da9e0" translate="yes" xml:space="preserve">
          <source>Optionally, the</source>
          <target state="translated">オプションで</target>
        </trans-unit>
        <trans-unit id="b290988bf20769fb3be0ec9ad35e8ff883c8e032" translate="yes" xml:space="preserve">
          <source>Optionally, the&lt;code&gt;-o&lt;/code&gt;switch</source>
          <target state="translated">オプションで、 &lt;code&gt;-o&lt;/code&gt; スイッチ</target>
        </trans-unit>
        <trans-unit id="447171bcea279a3f9260c4de4e227c2d6dd68c76" translate="yes" xml:space="preserve">
          <source>Or it could simply utilize the condition name XL as follows:</source>
          <target state="translated">あるいは、以下のように単に条件名のXLを利用することもできます。</target>
        </trans-unit>
        <trans-unit id="370e4c255f90d246d5721bdc9fd05e213464a25e" translate="yes" xml:space="preserve">
          <source>Or, on a Native Windows or Windows/MinGW system:</source>
          <target state="translated">または、ネイティブWindowsやWindows/MinGWのシステムで。</target>
        </trans-unit>
        <trans-unit id="64a91b697330d7da4ef4061456bbad4813428829" translate="yes" xml:space="preserve">
          <source>Other documents that should be read is the</source>
          <target state="translated">他にも読むべき書類としては</target>
        </trans-unit>
        <trans-unit id="be5deb42fb6fd7ce67cd61c124e6e3a2f67bb605" translate="yes" xml:space="preserve">
          <source>Other errors</source>
          <target state="translated">その他のエラー</target>
        </trans-unit>
        <trans-unit id="ba479d2e9dd775cad43c293e560fad3af36bde42" translate="yes" xml:space="preserve">
          <source>Other programming language provide the programmer with a similar capability of creating their own words (names) for parts of a program; COBOL is somewhat unusual when compared to other languages in that user-defined words may</source>
          <target state="translated">他のプログラミング言語は、プログラマがプログラムの一部に対して独自の単語(名前)を作成する機能を提供しているが、COBOLは、他の言語と比較すると、ユーザ定義の単語を作成できるという点でやや特殊である。</target>
        </trans-unit>
        <trans-unit id="cecc7ec953206f23410eda50f5ad47b03ef500c3" translate="yes" xml:space="preserve">
          <source>Other programming languages have arrays; COBOL has tables. They&amp;rsquo;re basically the same thing. There are two special statements that exist in the COBOL language &amp;mdash; &lt;code&gt;SEARCH&lt;/code&gt; and &lt;code&gt;SEARCH ALL&lt;/code&gt; &amp;mdash; that make finding data in a table easy.</source>
          <target state="translated">Other programming languages have arrays; COBOL has tables. They&amp;rsquo;re basically the same thing. There are two special statements that exist in the COBOL language &amp;mdash; &lt;code&gt;SEARCH&lt;/code&gt; and &lt;code&gt;SEARCH ALL&lt;/code&gt; &amp;mdash; that make finding data in a table easy.</target>
        </trans-unit>
        <trans-unit id="6ee0c13160980824559efa0eadcf83a58beccb23" translate="yes" xml:space="preserve">
          <source>Other programming languages provide the programmer with a similar capability of creating their own words (names) for parts of a program; COBOL is somewhat unusual when compared to other languages in that user-defined words may</source>
          <target state="translated">他のプログラミング言語は、プログラマがプログラムの一部に対して独自の単語(名前)を作成する機能を提供しているが、COBOLは他の言語と比較すると、ユーザ定義の単語を作成できるという点でやや特殊である。</target>
        </trans-unit>
        <trans-unit id="8f68708fb0db08268086a998b55604ec95563cd0" translate="yes" xml:space="preserve">
          <source>Otherwise the returned value is a character string that is as long as is needed to contain the I-O status value and the filename. The first two characters are the I-O status value in national characters. The succeeding characters contain the file-name exactly as specified in the &lt;code&gt;SELECT&lt;/code&gt; clause converted at runtime to the runtime national character set.</source>
          <target state="translated">Otherwise the returned value is a character string that is as long as is needed to contain the I-O status value and the filename. The first two characters are the I-O status value in national characters. The succeeding characters contain the file-name exactly as specified in the &lt;code&gt;SELECT&lt;/code&gt; clause converted at runtime to the runtime national character set.</target>
        </trans-unit>
        <trans-unit id="8bbcce1456c742787b1580fde33b8148c8987df5" translate="yes" xml:space="preserve">
          <source>Out of key range</source>
          <target state="translated">キーレンジ外</target>
        </trans-unit>
        <trans-unit id="a553d2153badfb1db45ee73715be9107f08adc68" translate="yes" xml:space="preserve">
          <source>Output from the command (if any) will appear in the command window in which the GnuCOBOL program was executed.</source>
          <target state="translated">コマンドからの出力は(もしあれば)、GnuCOBOLプログラムが実行されたコマンドウィンドウに表示されます。</target>
        </trans-unit>
        <trans-unit id="43dc44dc387ec0ff8f1bb71fc10e88f483dab533" translate="yes" xml:space="preserve">
          <source>Over the years, there has been much debate over the efficiency and arithmetic accuracy of using the &lt;code&gt;COMPUTE&lt;/code&gt; statement (see &lt;a href=&quot;#COMPUTE&quot;&gt;COMPUTE&lt;/a&gt;) rather than the four basic arithmetic operation statements.</source>
          <target state="translated">Over the years, there has been much debate over the efficiency and arithmetic accuracy of using the &lt;code&gt;COMPUTE&lt;/code&gt; statement (see &lt;a href=&quot;#COMPUTE&quot;&gt;COMPUTE&lt;/a&gt;) rather than the four basic arithmetic operation statements.</target>
        </trans-unit>
        <trans-unit id="bf18ec4bed8c30a9b19eac1b32547e33a663188d" translate="yes" xml:space="preserve">
          <source>Over the years, there has been much debate over the efficiency and arithmetic accuracy of using the&lt;code&gt;COMPUTE&lt;/code&gt;statement (see &lt;a href=&quot;#COMPUTE&quot;&gt;COMPUTE&lt;/a&gt;) rather than the four basic arithmetic operation statements.</source>
          <target state="translated">長年にわたり、効率性と使用の算術精度を超える多くの議論があった &lt;code&gt;COMPUTE&lt;/code&gt; 文を（参照&lt;a href=&quot;#COMPUTE&quot;&gt;COMPUTEを&lt;/a&gt;）4つのつではなく、基本的な算術演算ステートメント。</target>
        </trans-unit>
        <trans-unit id="0e6ac5f3f6d5399374fefa09919d1c279a782632" translate="yes" xml:space="preserve">
          <source>Overflow condition</source>
          <target state="translated">オーバーフロー条件</target>
        </trans-unit>
        <trans-unit id="511993d3c99719e38a6779073019dacd7178ddb9" translate="yes" xml:space="preserve">
          <source>P</source>
          <target state="translated">P</target>
        </trans-unit>
        <trans-unit id="9caea4b058bdda37551cfd4b0757e6365f49b9e6" translate="yes" xml:space="preserve">
          <source>PACKED-DECIMAL, PADDING, PAGE, PAGE-COUNTER, PARAGRAPH, PERFORM, PF, PH, PI, PIC, PICTURE, PLUS, POINTER, POSITION, POSITIVE, PREFIXED, PRESENT, PRESENT-VALUE, PREVIOUS, PRINT, PRINTER, PRINTER-1, PRINTING, PROCEDURE, PROCEDURE-POINTER, PROCEDURES, PROCEED, PROGRAM, PROGRAM-ID, PROGRAM-POINTER, PROHIBITED, PROMPT, PROPERTY, PROTECTED, PROTOTYPE, PURGE</source>
          <target state="translated">PACKED-DECIMAL、PADDING、PAGE、PAGE-COUNTER、PARAGRAPH、PERFORM、PF、PH、PI、PIC、PICTURE、PLUS、POINTER、POSITION、POSITIVE、PREFIXED、PRESENT、PRESENT-VALUE、PREVIOUS、PRINT、PRINTER、PRINTER-1、PRINTING、PROCEDURE、PROCEDURE-POINTER、PROCEDURES、PROCEED、PROGRAM、PROGRAM-ID、PROGRAM-POINTER、PROHIBITED、PROMPT、PROPERTY、PROTECTED、PROTOTOTYPE、PURGE。</target>
        </trans-unit>
        <trans-unit id="73318b246c3196cef01ce769fd4d71ba5d8a5e0c" translate="yes" xml:space="preserve">
          <source>PACKED-DECIMAL, PADDING, PAGE-COUNTER, PAGED, PAGE-SETUP, PAGE, PARAGRAPH, PARENT, PASSWORD, PERFORM, PERMANENT, PF, PH, PHYSICAL, PICTURE, PIC, PIXELS, PIXEL, PI, PLACEMENT, PLUS, POINTER, POP-UP, POSITION-SHIFT, POSITION, POSITIVE, PREFIXED, PRESENT-VALUE, PRESENT, PREVIOUS, PRINT, PRINTER-1, PRINTER, PRINTING, PRINT-NO-PROMPT, PRINT-PREVIEW, PRINT, PRIORITY, PROCEDURE-POINTER, PROCEDURES, PROCEDURE, PROCEED, PROGRAM-ID, PROGRAM-POINTER, PROGRAM, PROGRESS, PROHIBITED, PROMPT, PROPERTIES, PROPERTY, PROTECTED, PROTOTYPE, PURGE, PUSH-BUTTON</source>
          <target state="translated">PACKED-DECIMAL、PADDING、PAGE-COUNTER、PAGED、PAGE-SETUP、PAGE、PARAGRAPH、PARENT、PASSWORD、PERFORM、PERMANENT、PF、PH、PHYSICAL、PICTURE、PIC、PIXELS、PIXEL、PI、PLACEMENT、PLUS、POINTER、POP-UP、POSITION-SHIFT、POSITION、POSITIVE、PREFIXED、PRESENT-VALUE、PRESENT。PREVIOUS、PRINT、PRINTER-1、PRINTER、PRINTING、PRINT-NO-PROMPT、PRINT-PRVIEW、PRINT、PRIORITY、PROCEDURE-POINTER、PROCEDURES、PROCEDURE、PROCEED、PROGRAM-ID、PROGRAM-POINTER、PROGRAM、PROGRESS、PROHIBITED、PROMPT、PROPERTIES、PROPERTY、PROTECTED、PROTOTOTYPE、PURGE、PUSH-BUTTON</target>
        </trans-unit>
        <trans-unit id="d48971351ade6fc5f890bc67a75e3fa21b22ca7e" translate="yes" xml:space="preserve">
          <source>PAGE FOOTING [1]</source>
          <target state="translated">PAGE FOOTING [1]</target>
        </trans-unit>
        <trans-unit id="74d126652169159b5d6e6ea5e735209263036ae6" translate="yes" xml:space="preserve">
          <source>PAGE HEADING [1]</source>
          <target state="translated">ページヘッダー [1]</target>
        </trans-unit>
        <trans-unit id="fa7ff6fb00a7ace8d98cf880a492dc6c5ffc8ca7" translate="yes" xml:space="preserve">
          <source>PI</source>
          <target state="translated">PI</target>
        </trans-unit>
        <trans-unit id="a7aa2c13f70d4d267a113972d52fc8706a2f0e22" translate="yes" xml:space="preserve">
          <source>PI Function Syntax</source>
          <target state="translated">PI関数の構文</target>
        </trans-unit>
        <trans-unit id="6b16b3819a2ed2799c010b6832ba9348628bf93b" translate="yes" xml:space="preserve">
          <source>PIC 9(4) &amp;mdash; This is the default data item allocated for use by the &lt;code&gt;ACCEPT &lt;var&gt;screen-data-item&lt;/var&gt;&lt;/code&gt; statement (see &lt;a href=&quot;#ACCEPT-screen_002ddata_002ditem&quot;&gt;ACCEPT screen-data-item&lt;/a&gt;), if no &lt;code&gt;CRT STATUS&lt;/code&gt; (see &lt;a href=&quot;#SPECIAL_002dNAMES&quot;&gt;SPECIAL-NAMES&lt;/a&gt;) clause was specified..</source>
          <target state="translated">PIC 9(4) &amp;mdash; This is the default data item allocated for use by the &lt;code&gt;ACCEPT &lt;var&gt;screen-data-item&lt;/var&gt;&lt;/code&gt; statement (see &lt;a href=&quot;#ACCEPT-screen_002ddata_002ditem&quot;&gt;ACCEPT screen-data-item&lt;/a&gt;), if no &lt;code&gt;CRT STATUS&lt;/code&gt; (see &lt;a href=&quot;#SPECIAL_002dNAMES&quot;&gt;SPECIAL-NAMES&lt;/a&gt;) clause was specified..</target>
        </trans-unit>
        <trans-unit id="b3194ebbb74c1fdb2502a50c00eae2deeb0fe962" translate="yes" xml:space="preserve">
          <source>PIC 9(4) &amp;mdash; This is the default data item allocated for use by the&lt;code&gt;ACCEPT &amp;lt;&lt;i&gt;screen-data-item&lt;/i&gt;&amp;gt;&lt;/code&gt;statement (see &lt;a href=&quot;#ACCEPT-screen_002ddata_002ditem&quot;&gt;ACCEPT screen-data-item&lt;/a&gt;), if no&lt;code&gt;CRT STATUS&lt;/code&gt;(see &lt;a href=&quot;#SPECIAL_002dNAMES&quot;&gt;SPECIAL-NAMES&lt;/a&gt;) clause was specified..</source>
          <target state="translated">PIC 9（4）&amp;mdash;これは、 &lt;code&gt;CRT STATUS&lt;/code&gt; （&lt;a href=&quot;#SPECIAL_002dNAMES&quot;&gt;SPECIAL-NAMESを&lt;/a&gt;参照）句が指定されていない場合、 &lt;code&gt;ACCEPT &amp;lt;&lt;i&gt;screen-data-item&lt;/i&gt;&amp;gt;&lt;/code&gt; ステートメント（&lt;a href=&quot;#ACCEPT-screen_002ddata_002ditem&quot;&gt;ACCEPT screen-data-itemを&lt;/a&gt;参照）で使用するために割り当てられたデフォルトのデータ項目です。 。</target>
        </trans-unit>
        <trans-unit id="c4d58ce0b1bb54c0f561e8907e04ffe9d89e88c5" translate="yes" xml:space="preserve">
          <source>PIC X(16) &amp;mdash; This register contains the date and time the program was compiled in the format &quot;mm/dd/yyhh.mm.ss&quot;. Note that only a two-digit year is provided.</source>
          <target state="translated">PIC X（16）&amp;mdash;このレジスタには、プログラムが「mm / dd / yyhh.mm.ss」の形式でコンパイルされた日時が含まれています。2桁の年しか指定されていないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="6faab1a3c4ec203b389c6383f2fd9a0b1b5967bf" translate="yes" xml:space="preserve">
          <source>PICTURE Clause Syntax</source>
          <target state="translated">PICTURE 節構文</target>
        </trans-unit>
        <trans-unit id="5c6a530b5ee01a71031bbf926dd0d04d7d729821" translate="yes" xml:space="preserve">
          <source>PRESENT-VALUE Function Syntax</source>
          <target state="translated">PRESENT-VALUE 関数構文</target>
        </trans-unit>
        <trans-unit id="4de6def8d27ffaffd715bb05a0f1de913d677f1f" translate="yes" xml:space="preserve">
          <source>PRESENT-WHEN Clause Syntax</source>
          <target state="translated">PRESENT-WHEN 節構文</target>
        </trans-unit>
        <trans-unit id="3d3a31c9fb0612106236d826f985656c27fa00fe" translate="yes" xml:space="preserve">
          <source>PROCEDURE DIVISION Main-Program-Argument Syntax</source>
          <target state="translated">PROCEDURE DIVISION プログラムの主な引数の構文</target>
        </trans-unit>
        <trans-unit id="b12c49de171e8ff45e7691afead86a30c33cf2b7" translate="yes" xml:space="preserve">
          <source>PROCEDURE DIVISION RETURNING Syntax</source>
          <target state="translated">Syntax für die Rückgabe von PROCEDURE DIVISION RETURNING</target>
        </trans-unit>
        <trans-unit id="4c47e678129694787452f711b5ce9e476e0339d7" translate="yes" xml:space="preserve">
          <source>PROCEDURE DIVISION Subprogram-Argument Syntax</source>
          <target state="translated">VERFAHRENSABTEILUNG Unterprogramm-Argument-Syntax</target>
        </trans-unit>
        <trans-unit id="f4a478a1ada18c25f1d672cd086d9b5594b16518" translate="yes" xml:space="preserve">
          <source>PROCEDURE DIVISION Syntax</source>
          <target state="translated">VERFAHRENSABTEILUNG Syntax</target>
        </trans-unit>
        <trans-unit id="25ca8d091026e55d615f2ebed52ad90192bd4666" translate="yes" xml:space="preserve">
          <source>PROGRAM-ID Type Clause Syntax</source>
          <target state="translated">PROGRAM-ID Typklausel-Syntax</target>
        </trans-unit>
        <trans-unit id="a05a7ddbe232076f4b718b4f0b93a1bf867fd986" translate="yes" xml:space="preserve">
          <source>PROMPT Clause Syntax</source>
          <target state="translated">PROMPT 節構文</target>
        </trans-unit>
        <trans-unit id="af5435be0c54489a569b0a291b3f067fd4481460" translate="yes" xml:space="preserve">
          <source>PROTECTED Attribute Syntax</source>
          <target state="translated">PROTECTED 属性構文</target>
        </trans-unit>
        <trans-unit id="b5c3d75a6f451c0f7cb543f448c19539a4c23235" translate="yes" xml:space="preserve">
          <source>Packed-decimal (</source>
          <target state="translated">パックされた10進数 (</target>
        </trans-unit>
        <trans-unit id="ee8b3ce3e38db02acd8124f259036255874b20ab" translate="yes" xml:space="preserve">
          <source>Packed-decimal (i.e.&lt;code&gt;USAGE PACKED-DECIMAL&lt;/code&gt;&lt;code&gt;USAGE COMP-3&lt;/code&gt;or&lt;code&gt;USAGE COMP-6&lt;/code&gt; data is stored as a series of bytes such that each byte contains two 4-bit fields, referred to as &amp;rsquo;nibbles&amp;rsquo; (since they comprise half a &quot;byte&quot;, they&amp;rsquo;re just &quot;nibbles&quot; &amp;mdash; don&amp;rsquo;t groan, I don&amp;rsquo;t just make this stuff up!). Each nibble represents a&lt;code&gt;9&lt;/code&gt;in the&lt;code&gt;PICTURE&lt;/code&gt;and each holds a single decimal digit encoded as its binary value (0 = 0000, 1 = 0001, &amp;hellip; , 9 = 1001).</source>
          <target state="translated">パック10進数（つまり、 &lt;code&gt;USAGE PACKED-DECIMAL&lt;/code&gt; &lt;code&gt;USAGE COMP-3&lt;/code&gt; または &lt;code&gt;USAGE COMP-6&lt;/code&gt; のデータは、各バイトが「ニブル」と呼ばれる2つの4ビットフィールドを含むように一連のバイトとして格納されます（それらは半分の「バイト」、それらは単に「ニブル」です&amp;mdash;うめき声を出さないでください、私はこれを詰めるだけではありません！）各ニブルは &lt;code&gt;PICTURE&lt;/code&gt; の &lt;code&gt;9&lt;/code&gt; を表し、それぞれがそのバイナリ値としてエンコードされた1つの10進数を保持します（0 = 0000、1 = 0001、&amp;hellip;、9 = 1001）。</target>
        </trans-unit>
        <trans-unit id="7df4debd8c25c3d331c6d6f74d9c512ed615340b" translate="yes" xml:space="preserve">
          <source>Page Footing</source>
          <target state="translated">ページフーチング</target>
        </trans-unit>
        <trans-unit id="baddf38bfa7e551158f6ec6ea53979d031e77c1c" translate="yes" xml:space="preserve">
          <source>Page Heading</source>
          <target state="translated">ページの見出し</target>
        </trans-unit>
        <trans-unit id="9d70ad3341da999410066a37aeaecbfb647f7ed0" translate="yes" xml:space="preserve">
          <source>Parameters: char &lt;code&gt;PIC X&lt;/code&gt;. Receives the character that was typed, in &lt;small&gt;ASCII&lt;/small&gt;.</source>
          <target state="translated">Parameters: char &lt;code&gt;PIC X&lt;/code&gt; . Receives the character that was typed, in &lt;small&gt;ASCII&lt;/small&gt;.</target>
        </trans-unit>
        <trans-unit id="aca113b5c5ca35ce64ecec07ec135aa642081332" translate="yes" xml:space="preserve">
          <source>Parameters: none</source>
          <target state="translated">パラメータ:なし</target>
        </trans-unit>
        <trans-unit id="2cc422d197f885cd73bbf6cb19ad07f143f64cc5" translate="yes" xml:space="preserve">
          <source>Parameters: none Returns: PID (the child process gets &amp;acirc;0&amp;acirc; returned, the calling process gets the PID of the created children).</source>
          <target state="translated">パラメータ：なし戻り値：PID（子プロセスは「0」が返され、呼び出しプロセスは作成された子のPIDを取得します）。</target>
        </trans-unit>
        <trans-unit id="d8c0b8614e902d865b389a981de864968906fe3a" translate="yes" xml:space="preserve">
          <source>Parenthesis must be used to explicitly signify the sequence in which conditions are evaluated and processed if the default precedence isn&amp;rsquo;t desired. For example:</source>
          <target state="translated">括弧は、デフォルトの優先順位が望ましくない場合に条件が評価および処理される順序を明示的に示すために使用する必要があります。例えば：</target>
        </trans-unit>
        <trans-unit id="1727880630dd1fbf9ecb1fb3a261512a196787cf" translate="yes" xml:space="preserve">
          <source>Parenthesis provide for a recursive application of the arithmetic expression rules, effectively allowing you to alter the precedence of operations. 4 times 2 is 8 (the use of parenthesis &quot;trumps&quot; the exponentiation operator, so the multiplication happens first); 8 ^ 3 is 512, minus 10 is 502.</source>
          <target state="translated">括弧は算術式のルールを再帰的に適用するためのもので、効果的に演算の優先順位を変更することができます。4 倍 2 は 8 です (括弧を使用すると指数演算子が「優先される」ので、乗算が最初に行われます);8 ^ 3 は 512、マイナス 10 は 502 です。</target>
        </trans-unit>
        <trans-unit id="0be66a6051dddc648eb15d341d62e40bbb1f2b64" translate="yes" xml:space="preserve">
          <source>Parenthesis provide for a recursive application of the arithmetic expression rules, effectively allowing you to alter the precedence of operations. 4 times 2 is 8 (the use of parenthesis &amp;ldquo;trumps&amp;rdquo; the exponentiation operator, so the multiplication happens first); 8 ^ 3 is 512, minus 10 is 502.</source>
          <target state="translated">Parenthesis provide for a recursive application of the arithmetic expression rules, effectively allowing you to alter the precedence of operations. 4 times 2 is 8 (the use of parenthesis &amp;ldquo;trumps&amp;rdquo; the exponentiation operator, so the multiplication happens first); 8 ^ 3 is 512, minus 10 is 502.</target>
        </trans-unit>
        <trans-unit id="43ed3f6df842ef59a8b5928f5ce11ffdc6bea6d4" translate="yes" xml:space="preserve">
          <source>Parse a string, breaking it up into sub strings based upon one or more delimiting character sequences&lt;a href=&quot;#FOOT1&quot; name=&quot;DOCF1&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;</source>
          <target state="translated">Parse a string, breaking it up into sub strings based upon one or more delimiting character sequences&lt;a href=&quot;#FOOT1&quot; name=&quot;DOCF1&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e8f38b7046bb542d678cb81a4130cdce52f1dff7" translate="yes" xml:space="preserve">
          <source>Partial-line comments</source>
          <target state="translated">部分行コメント</target>
        </trans-unit>
        <trans-unit id="88b82cec95a870091303c03d7f7893e2ae462521" translate="yes" xml:space="preserve">
          <source>Pass a quoted literal string from GnuCOBOL to C as a zero-delimited string literal (&lt;code&gt;Z'&lt;var&gt;string&lt;/var&gt;'&lt;/code&gt;).</source>
          <target state="translated">Pass a quoted literal string from GnuCOBOL to C as a zero-delimited string literal ( &lt;code&gt;Z'&lt;var&gt;string&lt;/var&gt;'&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="c91b4eacd5a0ee6e28cebb6a8883adce2fae1f00" translate="yes" xml:space="preserve">
          <source>Pass a quoted literal string from GnuCOBOL to C as a zero-delimited string literal (Z&amp;rsquo;&amp;lt;</source>
          <target state="translated">引用符で囲まれたリテラル文字列をゼロ区切りの文字列リテラル（Z '&amp;lt;</target>
        </trans-unit>
        <trans-unit id="cd7fdf9b3c5c06f7dbbaa56150d4d37dbafb9737" translate="yes" xml:space="preserve">
          <source>Pass alphanumeric (&lt;code&gt;PIC X&lt;/code&gt;) or alphabetic (&lt;code&gt;PIC A&lt;/code&gt;) data items to C subroutines by appending an &lt;small&gt;ASCII&lt;/small&gt;&lt;code&gt;NUL&lt;/code&gt; character (&lt;code&gt;X'00'&lt;/code&gt;) to them. For example, to pass the 15-character &lt;code&gt;LastName&lt;/code&gt; data item described above to a C subroutine:</source>
          <target state="translated">Pass alphanumeric ( &lt;code&gt;PIC X&lt;/code&gt; ) or alphabetic ( &lt;code&gt;PIC A&lt;/code&gt; ) data items to C subroutines by appending an &lt;small&gt;ASCII&lt;/small&gt; &lt;code&gt;NUL&lt;/code&gt; character ( &lt;code&gt;X'00'&lt;/code&gt; ) to them. For example, to pass the 15-character &lt;code&gt;LastName&lt;/code&gt; data item described above to a C subroutine:</target>
        </trans-unit>
        <trans-unit id="1f223212e3bb2ae17ffe15b3b3a10416a5c4b36f" translate="yes" xml:space="preserve">
          <source>Pass alphanumeric (PIC X) or alphabetic (PIC A) data items to C subroutines by appending an ASCII NULL character (X&amp;rsquo;00&amp;rsquo;) to them. For example, to pass the 15-character LastName data item described above to a C subroutine:</source>
          <target state="translated">英数字（PIC X）またはアルファベット（PIC A）のデータ項目に、ASCII NULL文字（X'00 '）を追加してCサブルーチンに渡します。たとえば、上記の15文字のLastNameデータ項目をCサブルーチンに渡すには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="71cc8e7cdf775711e91e1777543be56d51f3ccd7" translate="yes" xml:space="preserve">
          <source>Passing a subroutine argument  &lt;code&gt;BY VALUE&lt;/code&gt; passes the</source>
          <target state="translated">Passing a subroutine argument &lt;code&gt;BY VALUE&lt;/code&gt; passes the</target>
        </trans-unit>
        <trans-unit id="681583e47a37f7049858cf1cb42196b9023932d0" translate="yes" xml:space="preserve">
          <source>Passing a subroutine argument&lt;code&gt;BY VALUE&lt;/code&gt;</source>
          <target state="translated">サブルーチンの引数を渡す &lt;code&gt;BY VALUE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dfabccc5c1f363a790178f029432c7d782d4b70a" translate="yes" xml:space="preserve">
          <source>Paths and file names may be specified on an absolute (&lt;code&gt;C:\\Data\\datafile.dat&lt;/code&gt;, &lt;code&gt;/Data/datafile.dat&lt;/code&gt;, &amp;hellip;) or relative to the current directory (&lt;code&gt;Data\\datafile.dat&lt;/code&gt;, &lt;code&gt;Data/datafile.dat&lt;/code&gt;, &amp;hellip;) basis. If no directory name is included (&lt;code&gt;datafile.dat&lt;/code&gt;), the file must be in the current directory.</source>
          <target state="translated">Paths and file names may be specified on an absolute ( &lt;code&gt;C:\\Data\\datafile.dat&lt;/code&gt; , &lt;code&gt;/Data/datafile.dat&lt;/code&gt; , &amp;hellip;) or relative to the current directory ( &lt;code&gt;Data\\datafile.dat&lt;/code&gt; , &lt;code&gt;Data/datafile.dat&lt;/code&gt; , &amp;hellip;) basis. If no directory name is included ( &lt;code&gt;datafile.dat&lt;/code&gt; ), the file must be in the current directory.</target>
        </trans-unit>
        <trans-unit id="ad7c6f196285b117ee69f8c6840027349a6f0c75" translate="yes" xml:space="preserve">
          <source>Paths and file names may be specified on an absolute &lt;code&gt;C:\Data\datafile.dat&lt;/code&gt;&lt;code&gt;/Data/datafile.dat&lt;/code&gt; &amp;hellip;) or relative-to-the-current-directory &lt;code&gt;Data\datafile.dat&lt;/code&gt;&lt;code&gt;Data/datafile.dat&lt;/code&gt; &amp;hellip;) basis.</source>
          <target state="translated">パスとファイル名は、絶対 &lt;code&gt;C:\Data\datafile.dat&lt;/code&gt; &lt;code&gt;/Data/datafile.dat&lt;/code&gt; &amp;hellip;）または現在のディレクトリへの相対 &lt;code&gt;Data\datafile.dat&lt;/code&gt; &lt;code&gt;Data/datafile.dat&lt;/code&gt; &amp;hellip;）ベースで指定できます。</target>
        </trans-unit>
        <trans-unit id="de86c41a1c8cd24f4c25886876f4c3423363b963" translate="yes" xml:space="preserve">
          <source>Perform data summarise, as follows:</source>
          <target state="translated">以下のようにデータの要約を行います。</target>
        </trans-unit>
        <trans-unit id="b065be49e80915c4f1ecfba0a26c906331c34747" translate="yes" xml:space="preserve">
          <source>Performing special reporting actions based upon the fact that the data being used to generate the report has been sorted according to one or more key fields:</source>
          <target state="translated">レポートの生成に使用されるデータが、1つ以上のキーフィールドに従ってソートされているという事実に基づいて、特別なレポートアクションを実行します。</target>
        </trans-unit>
        <trans-unit id="b3e0f1c8caa9a9f011e54f531c5d051a6f3b8c55" translate="yes" xml:space="preserve">
          <source>Permanent I/O error</source>
          <target state="translated">恒久的なI/Oエラー</target>
        </trans-unit>
        <trans-unit id="d016004473e0e58d7682856755147e33256bb813" translate="yes" xml:space="preserve">
          <source>Permission denied</source>
          <target state="translated">許可拒否</target>
        </trans-unit>
        <trans-unit id="1431c6f1cea824d656da841b10c8f47251e336a0" translate="yes" xml:space="preserve">
          <source>PgDn,was pressed</source>
          <target state="translated">PgDnが押された</target>
        </trans-unit>
        <trans-unit id="0d92a8344a4dcd6944aa8972c0546d576535b292" translate="yes" xml:space="preserve">
          <source>PgUp was pressed</source>
          <target state="translated">PgUpが押された</target>
        </trans-unit>
        <trans-unit id="70ad097f49cd2f413ac1aa6541b4dca5e3119e9f" translate="yes" xml:space="preserve">
          <source>Philadelphia</source>
          <target state="translated">Philadelphia</target>
        </trans-unit>
        <trans-unit id="08414b3fc797a48153d27b836c711e9af07d13e1" translate="yes" xml:space="preserve">
          <source>Phrase-Clause</source>
          <target state="translated">Phrase-Clause</target>
        </trans-unit>
        <trans-unit id="98f3f7d386a961bb37f5f1c2d7a434319267544b" translate="yes" xml:space="preserve">
          <source>Please see &lt;a href=&quot;#Report-Writer-Features&quot;&gt;Report Writer Features&lt;/a&gt;, if you have not read it already. It will familiarize you with the Report Writer terminology that follows.</source>
          <target state="translated">Please see &lt;a href=&quot;#Report-Writer-Features&quot;&gt;Report Writer Features&lt;/a&gt;, if you have not read it already. It will familiarize you with the Report Writer terminology that follows.</target>
        </trans-unit>
        <trans-unit id="9cac84948702f6e6a49575f66c4e4043ce1e90b9" translate="yes" xml:space="preserve">
          <source>Please see &lt;a href=&quot;#Report-Writer-Features&quot;&gt;Report Writer Features&lt;/a&gt;, if you have not read it already. This will familiarize you with the Report Writer terminology that will follow.</source>
          <target state="translated">まだ読んでいない場合は、&lt;a href=&quot;#Report-Writer-Features&quot;&gt;レポートライターの機能を&lt;/a&gt;参照してください。これにより、レポートライターの用語について理解しやすくなります。</target>
        </trans-unit>
        <trans-unit id="2602ffae44e122955827b0cd473f9039072f75d0" translate="yes" xml:space="preserve">
          <source>Please see availability notes on this at 1.3.13. There are a number of terms that describe various aspects of the operation of the Report Writer Control System (RWCS). Understanding the meanings of these terms is vital to developing an understanding of the subject.</source>
          <target state="translated">1.3.13のアベイラビリティノートを参照してください。レポートライタコントロールシステム(RWCS)の動作の様々な側面を説明する用語がいくつかあります。これらの用語の意味を理解することは、このテーマの理解を深めるために不可欠である。</target>
        </trans-unit>
        <trans-unit id="bf6b24e032f4e1ad65513a3850fae7476408780b" translate="yes" xml:space="preserve">
          <source>Pointers are greater than 32 bits long</source>
          <target state="translated">ポインタの長さが32ビット以上</target>
        </trans-unit>
        <trans-unit id="c7a7e210419a91cff89bb15bdcfbe9b2c2038ee7" translate="yes" xml:space="preserve">
          <source>Pointers are greater than 32 bits.</source>
          <target state="translated">ポインタは32ビットより大きい。</target>
        </trans-unit>
        <trans-unit id="80d96d4390ded548a6d8f7dd2ff845de9c18a78e" translate="yes" xml:space="preserve">
          <source>Pre-compiled object-code subprograms may be automatically located by the GnuCOBOL compiler and the loader by using the &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; compilation-time environment variable   (see &lt;a href=&quot;#Compilation-Time-Environment-Variables&quot;&gt;Compilation Time Environment Variables&lt;/a&gt;). If they are locatable through that environment variable, they need not be named on the &lt;code&gt;cobc&lt;/code&gt; command.</source>
          <target state="translated">Pre-compiled object-code subprograms may be automatically located by the GnuCOBOL compiler and the loader by using the &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; compilation-time environment variable (see &lt;a href=&quot;#Compilation-Time-Environment-Variables&quot;&gt;Compilation Time Environment Variables&lt;/a&gt;). If they are locatable through that environment variable, they need not be named on the &lt;code&gt;cobc&lt;/code&gt; command.</target>
        </trans-unit>
        <trans-unit id="254c646ba844fb66c2b9d7c96eff3e33b0023b0b" translate="yes" xml:space="preserve">
          <source>Pre-compiled object-code subprograms may be automatically located by the GnuCOBOL compiler and the loader by using the&lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt;compilation-time environment variable  The collection of compilation units supplied on a</source>
          <target state="translated">事前コンパイルされたオブジェクトコードサブプログラムは、 &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; コンパイル時環境変数を使用することにより、GnuCOBOLコンパイラーとローダーによって自動的に配置される場合があります。</target>
        </trans-unit>
        <trans-unit id="ef50aa1e1a6709b3ff59bdd7a22c8030dbae86df" translate="yes" xml:space="preserve">
          <source>Prefix explanation:</source>
          <target state="translated">接頭語の説明。</target>
        </trans-unit>
        <trans-unit id="e77a63faa85f582ba8a7492d259837cef6f72e0c" translate="yes" xml:space="preserve">
          <source>Prepare a text file containing 100 or so records, each consisting of a numeric scale (&lt;code&gt;123456789012345678901234&lt;/code&gt;&amp;hellip;).</source>
          <target state="translated">Prepare a text file containing 100 or so records, each consisting of a numeric scale ( &lt;code&gt;123456789012345678901234&lt;/code&gt; &amp;hellip;).</target>
        </trans-unit>
        <trans-unit id="2c7b5fccdbb449ec2c551649d5898d352077f7f4" translate="yes" xml:space="preserve">
          <source>Prepare a text file containing 100 or so records, each consisting of a numeric scale &lt;code&gt;123456789012345678901234&lt;/code&gt;).</source>
          <target state="translated">それぞれが数値スケール &lt;code&gt;123456789012345678901234&lt;/code&gt; で構成される100個程度のレコードを含むテキストファイルを準備します。</target>
        </trans-unit>
        <trans-unit id="2e4d59948adf7751277e60ef5b8dcba523662f1d" translate="yes" xml:space="preserve">
          <source>Presented throughout the report, as needed</source>
          <target state="translated">必要に応じて報告書に記載</target>
        </trans-unit>
        <trans-unit id="df23f2f29cdba6cde69b3fa2a8d89b0fced491b1" translate="yes" xml:space="preserve">
          <source>Primary Entry-Point</source>
          <target state="translated">第一次エントリーポイント</target>
        </trans-unit>
        <trans-unit id="a8f9ce32d08588f834c56376d9dc94ccfe00e53b" translate="yes" xml:space="preserve">
          <source>Print the file in a manner consistent with your answers to questions 1-4.</source>
          <target state="translated">質問1~4の回答に沿った方法で印刷してください。</target>
        </trans-unit>
        <trans-unit id="2e5a507a8fc83697bf613f4d29c4c2f58980754a" translate="yes" xml:space="preserve">
          <source>Printers supporting channel positioning are generally mainframe-type line printers. When writing to printers that do not support channel positioning, a formfeed will be issued to the printer.</source>
          <target state="translated">チャネル位置決めをサポートするプリンタは、一般的にメインフレームタイプのラインプリンタである。チャネルポジショニングに対応していないプリンタに書き込みを行うと、そのプリンタにフォームフィードが発行されます。</target>
        </trans-unit>
        <trans-unit id="9207cd3a020fc03ca0dd40e02158d966e4f5f2b7" translate="yes" xml:space="preserve">
          <source>Prior to the 1985 COBOL standard, using a period character was the only way to signal the end of a statement&amp;rsquo;s scope.</source>
          <target state="translated">Prior to the 1985 COBOL standard, using a period character was the only way to signal the end of a statement&amp;rsquo;s scope.</target>
        </trans-unit>
        <trans-unit id="cc7e3b1f52737a6533432f632305c4e6ee7083da" translate="yes" xml:space="preserve">
          <source>Prior to the COBOL2002 standard, source statements in COBOL programs were structured around 80-column punched cards. This means that each source line in a COBOL program consisted of five different &amp;ldquo;areas&amp;rdquo;, defined by their column number(s).</source>
          <target state="translated">Prior to the COBOL2002 standard, source statements in COBOL programs were structured around 80-column punched cards. This means that each source line in a COBOL program consisted of five different &amp;ldquo;areas&amp;rdquo;, defined by their column number(s).</target>
        </trans-unit>
        <trans-unit id="657d6289c4aca78075281817dcd5c1921c50a61e" translate="yes" xml:space="preserve">
          <source>Procedural PERFORM Syntax</source>
          <target state="translated">手続き型PERFORM構文</target>
        </trans-unit>
        <trans-unit id="a4ea781ed99930cb2040f2b3d1f7277fa799d5c7" translate="yes" xml:space="preserve">
          <source>Procedure</source>
          <target state="translated">Procedure</target>
        </trans-unit>
        <trans-unit id="6e1ab28e843a99805bbdb57ed1c711c419e1aa51" translate="yes" xml:space="preserve">
          <source>Procedure name</source>
          <target state="translated">手続き名</target>
        </trans-unit>
        <trans-unit id="5896c1082bcafe544f5bd83e214a0b689583a766" translate="yes" xml:space="preserve">
          <source>Procedure names are optional in the procedure division and &amp;mdash; when used &amp;mdash; are named entirely according to the needs and whims of the programmer.</source>
          <target state="translated">Procedure names are optional in the procedure division and &amp;mdash; when used &amp;mdash; are named entirely according to the needs and whims of the programmer.</target>
        </trans-unit>
        <trans-unit id="cf750f590b69f555680ec0c206ab17337eb50a20" translate="yes" xml:space="preserve">
          <source>Procedure names may be up to thirty one (31) characters long and may consist of letters, numbers, dashes and underscores. A procedure name may neither begin nor end with a dash (&amp;lsquo;</source>
          <target state="translated">Procedure names may be up to thirty one (31) characters long and may consist of letters, numbers, dashes and underscores. A procedure name may neither begin nor end with a dash (&amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="92f87251fcb83be18c4fa1e9400471f023bee612" translate="yes" xml:space="preserve">
          <source>Procedure names may be up to thirty one (31) characters long and may consist of letters, numbers, dashes and underscores. A procedure name may neither begin nor end with a dash (-) or underscore (_) character. This means that &quot;Main&quot;, &quot;0100-Read-Transaction&quot; and &quot;17&quot; are all perfectly valid procedure names.</source>
          <target state="translated">手続き名は最大31文字までとし、文字、数字、ダッシュ、アンダースコアで構成することができます。プロシージャ名は、ダッシュ(-)やアンダースコア(_)で始まったり、終わったりすることはできません。つまり、「Main」、「0100-Read-Transaction」、「17」はすべて完全に有効なプロシージャ名です。</target>
        </trans-unit>
        <trans-unit id="d682fc9dab69c1d2daf94fe72d9c9c2027249415" translate="yes" xml:space="preserve">
          <source>Procedures</source>
          <target state="translated">Procedures</target>
        </trans-unit>
        <trans-unit id="ba7d706676c81486ef93d5625a7041a2c3fee61e" translate="yes" xml:space="preserve">
          <source>Processing of any &lt;code&gt;LINE&lt;/code&gt; (see &lt;a href=&quot;#LINE&quot;&gt;LINE&lt;/a&gt;) clauses within the report group in question.</source>
          <target state="translated">Processing of any &lt;code&gt;LINE&lt;/code&gt; (see &lt;a href=&quot;#LINE&quot;&gt;LINE&lt;/a&gt;) clauses within the report group in question.</target>
        </trans-unit>
        <trans-unit id="f726a7d843f5607354d5fb12395564570f1b96b0" translate="yes" xml:space="preserve">
          <source>Processing of any&lt;code&gt;LINE&lt;/code&gt;(see &lt;a href=&quot;#LINE&quot;&gt;LINE&lt;/a&gt;) clauses within the report group in question.</source>
          <target state="translated">任意の処理 &lt;code&gt;LINE&lt;/code&gt; （参照&lt;a href=&quot;#LINE&quot;&gt;LINE&lt;/a&gt;問題のレポートグループ内の句を）。</target>
        </trans-unit>
        <trans-unit id="dcf248c6f1a0cfb83cdc45e92e9f8cdbce3f15b2" translate="yes" xml:space="preserve">
          <source>Processing of the &lt;code&gt;NEXT GROUP&lt;/code&gt; (see &lt;a href=&quot;#NEXT-GROUP&quot;&gt;NEXT GROUP&lt;/a&gt;) clause (if any) within the report group in question.</source>
          <target state="translated">Processing of the &lt;code&gt;NEXT GROUP&lt;/code&gt; (see &lt;a href=&quot;#NEXT-GROUP&quot;&gt;NEXT GROUP&lt;/a&gt;) clause (if any) within the report group in question.</target>
        </trans-unit>
        <trans-unit id="7ca535fcf65ddac45b10bbd190bd912efb8febc8" translate="yes" xml:space="preserve">
          <source>Processing of the&lt;code&gt;NEXT GROUP&lt;/code&gt;(see &lt;a href=&quot;#NEXT-GROUP&quot;&gt;NEXT GROUP&lt;/a&gt;) clause (if any) within the report group in question.</source>
          <target state="translated">処理 &lt;code&gt;NEXT GROUP&lt;/code&gt; （参照&lt;a href=&quot;#NEXT-GROUP&quot;&gt;NEXT GROUP&lt;/a&gt;問題のレポートグループ内句を（もしあれば））。</target>
        </trans-unit>
        <trans-unit id="9bf95463f80efe59bac0a5ec88028c32e9047c22" translate="yes" xml:space="preserve">
          <source>Producing a footer, known as a control footing after the detail lines that shared the same old value for the control field.</source>
          <target state="translated">コントロールフィールドのために同じ古い値を共有した詳細行の後に、コントロールフッターとして知られているフッターを生成します。</target>
        </trans-unit>
        <trans-unit id="6a031b41f38921ea04f5486bed7bf8b3dd63fc44" translate="yes" xml:space="preserve">
          <source>Producing a header, known as a control heading before the detail lines that share the same new value for the control field.</source>
          <target state="translated">制御フィールドのために同じ新しい値を共有する詳細行の前に、制御見出しとして知られるヘッダを生成します。</target>
        </trans-unit>
        <trans-unit id="9d68007b0763cb230f9034ec96f52b39d03ad630" translate="yes" xml:space="preserve">
          <source>Program</source>
          <target state="translated">Program</target>
        </trans-unit>
        <trans-unit id="b4657dd9e3173cfc213f4a1e9f3f07a786bade77" translate="yes" xml:space="preserve">
          <source>Program Name Area</source>
          <target state="translated">プログラム名 エリア</target>
        </trans-unit>
        <trans-unit id="14c6030c8dbaa7f9e4d8f3c9a3c5b96b4c4eab45" translate="yes" xml:space="preserve">
          <source>Program file names should match exactly the specification of &lt;code&gt;PROGRAM-ID&lt;/code&gt; (including case).</source>
          <target state="translated">Program file names should match exactly the specification of &lt;code&gt;PROGRAM-ID&lt;/code&gt; (including case).</target>
        </trans-unit>
        <trans-unit id="54e7e8e624bf02687707da11dd8ce3501a9e30d0" translate="yes" xml:space="preserve">
          <source>Program file names should match exactly the specification of PROGRAM-ID (including case).</source>
          <target state="translated">プログラムファイル名は PROGRAM-ID の指定と完全に一致している必要があります(大文字・小文字を含む)。</target>
        </trans-unit>
        <trans-unit id="b7bab0bdff2214a8c292d4902e5d23d8d128b6f9" translate="yes" xml:space="preserve">
          <source>Program source code may be concatenated as shown here, provided an &lt;code&gt;END PROGRAM&lt;/code&gt; marker naming the &lt;code&gt;PROGRAM-ID&lt;/code&gt; of the just-completed program is used to separate one program from another.</source>
          <target state="translated">Program source code may be concatenated as shown here, provided an &lt;code&gt;END PROGRAM&lt;/code&gt; marker naming the &lt;code&gt;PROGRAM-ID&lt;/code&gt; of the just-completed program is used to separate one program from another.</target>
        </trans-unit>
        <trans-unit id="cc1d5bfc26224f1a15ab4aea7046cdbbdc25cd1b" translate="yes" xml:space="preserve">
          <source>Program source code may be concatenated as shown here, provided an&lt;code&gt;END PROGRAM&lt;/code&gt;marker naming the&lt;code&gt;PROGRAM-ID&lt;/code&gt;of the just-completed program is used to separate one program from another.</source>
          <target state="translated">完成したばかりの &lt;code&gt;PROGRAM-ID&lt;/code&gt; を指定する &lt;code&gt;END PROGRAM&lt;/code&gt; マーカーを使用して、あるプログラムを別のプログラムから分離する場合、プログラムのソースコードをここに示すように連結できます。</target>
        </trans-unit>
        <trans-unit id="72ee618acc7bf1d94f59546b9cb03d3c49ab8ed5" translate="yes" xml:space="preserve">
          <source>Program source files should have extensions of</source>
          <target state="translated">プログラムのソースファイルの拡張子は</target>
        </trans-unit>
        <trans-unit id="de21741dc59a32e0e7c8ba7a44dd3af330fe83fa" translate="yes" xml:space="preserve">
          <source>Program source files should have extensions of &quot;.cob&quot; or &quot;.cbl&quot;.</source>
          <target state="translated">プログラムのソースファイルの拡張子は「.cob」または「.cbl」でなければなりません。</target>
        </trans-unit>
        <trans-unit id="275b5a83064b03891d014483794645ab21eadb7b" translate="yes" xml:space="preserve">
          <source>Program-Source-Lines-3</source>
          <target state="translated">Program-Source-Lines-3</target>
        </trans-unit>
        <trans-unit id="2a9e3057057dc7e2c578bf3e6184686cd6169420" translate="yes" xml:space="preserve">
          <source>Program-Source-Lines-n</source>
          <target state="translated">Program-Source-Lines-n</target>
        </trans-unit>
        <trans-unit id="1d4c600a3763078367c5deb7f0b0d27eb6b96fce" translate="yes" xml:space="preserve">
          <source>Programmers may create their own figurative constants via the &lt;code&gt;SYMBOLIC CHARACTERS&lt;/code&gt; (see &lt;a href=&quot;#Symbolic_002dCharacters_002dClause&quot;&gt;Symbolic-Characters-Clause&lt;/a&gt;) clause of the &lt;code&gt;SPECIAL-NAMES&lt;/code&gt; (see &lt;a href=&quot;#SPECIAL_002dNAMES&quot;&gt;SPECIAL-NAMES&lt;/a&gt;) paragraph.</source>
          <target state="translated">Programmers may create their own figurative constants via the &lt;code&gt;SYMBOLIC CHARACTERS&lt;/code&gt; (see &lt;a href=&quot;#Symbolic_002dCharacters_002dClause&quot;&gt;Symbolic-Characters-Clause&lt;/a&gt;) clause of the &lt;code&gt;SPECIAL-NAMES&lt;/code&gt; (see &lt;a href=&quot;#SPECIAL_002dNAMES&quot;&gt;SPECIAL-NAMES&lt;/a&gt;) paragraph.</target>
        </trans-unit>
        <trans-unit id="5488eb52d0b2069f39abbb1920ab8b988889fe47" translate="yes" xml:space="preserve">
          <source>Programmers may create their own figurative constants via the&lt;code&gt;SYMBOLIC CHARACTERS&lt;/code&gt;(see &lt;a href=&quot;#Symbolic_002dCharacters_002dClause&quot;&gt;Symbolic-Characters-Clause&lt;/a&gt;) clause of the&lt;code&gt;SPECIAL-NAMES&lt;/code&gt;(see &lt;a href=&quot;#SPECIAL_002dNAMES&quot;&gt;SPECIAL-NAMES&lt;/a&gt;) paragraph.</source>
          <target state="translated">プログラマは、 &lt;code&gt;SPECIAL-NAMES&lt;/code&gt; （&lt;a href=&quot;#SPECIAL_002dNAMES&quot;&gt;SPECIAL-NAMESを&lt;/a&gt;参照）段落の &lt;code&gt;SYMBOLIC CHARACTERS&lt;/code&gt; （&lt;a href=&quot;#Symbolic_002dCharacters_002dClause&quot;&gt;Symbolic-Characters-Clauseを&lt;/a&gt;参照）句を使用して、独自の形象定数を作成できます。</target>
        </trans-unit>
        <trans-unit id="f1df5ce010ae9a6c18dff20bf206a26ce5f2a2c5" translate="yes" xml:space="preserve">
          <source>Programmers may use a reserved word as</source>
          <target state="translated">プログラマは予約語を</target>
        </trans-unit>
        <trans-unit id="d08c487baefef0c053fe408dfb3951ad1242be3f" translate="yes" xml:space="preserve">
          <source>Programs coded for 1985 (and beyond) standards don&amp;rsquo;t need it, instead using the explicit scope-terminator &lt;code&gt;END-IF&lt;/code&gt; to inform the compiler where &lt;var&gt;imperative-statement-2&lt;/var&gt; (or &lt;var&gt;imperative-statement-1&lt;/var&gt; if there is no &lt;code&gt;ELSE&lt;/code&gt; clause coded) ends. New GnuCOBOL programs should be coded to use the &lt;code&gt;END-IF&lt;/code&gt; scope terminator for &lt;code&gt;IF&lt;/code&gt; statements. See &lt;a href=&quot;#Use-of-VERB_002fEND_002dVERB-Constructs&quot;&gt;Use of VERB/END-VERB Constructs&lt;/a&gt;, for additional information.</source>
          <target state="translated">Programs coded for 1985 (and beyond) standards don&amp;rsquo;t need it, instead using the explicit scope-terminator &lt;code&gt;END-IF&lt;/code&gt; to inform the compiler where &lt;var&gt;imperative-statement-2&lt;/var&gt; (or &lt;var&gt;imperative-statement-1&lt;/var&gt; if there is no &lt;code&gt;ELSE&lt;/code&gt; clause coded) ends. New GnuCOBOL programs should be coded to use the &lt;code&gt;END-IF&lt;/code&gt; scope terminator for &lt;code&gt;IF&lt;/code&gt; statements. See &lt;a href=&quot;#Use-of-VERB_002fEND_002dVERB-Constructs&quot;&gt;Use of VERB/END-VERB Constructs&lt;/a&gt;, for additional information.</target>
        </trans-unit>
        <trans-unit id="3f49b39beacf3661dbc95559f2addb85dc7b9aee" translate="yes" xml:space="preserve">
          <source>Programs coded for 1985 (and beyond) standards don&amp;rsquo;t need it, instead using the explicit scope-terminator&lt;code&gt;END-IF&lt;/code&gt;to inform the compiler where &amp;lt;</source>
          <target state="translated">1985（およびそれ以降）標準向けにコード化されたプログラムは、それを必要としません。代わりに、明示的なスコープターミネーター &lt;code&gt;END-IF&lt;/code&gt; を使用して、コンパイラに&amp;lt;</target>
        </trans-unit>
        <trans-unit id="55d080ddb65112a4fbc1c1e54f907db42a9976aa" translate="yes" xml:space="preserve">
          <source>Prompt Character</source>
          <target state="translated">プロンプト文字</target>
        </trans-unit>
        <trans-unit id="4a220b87a7be509dbece00789d4b3d878c3a60b1" translate="yes" xml:space="preserve">
          <source>Prompt characters will be automatically transformed into spaces upon input.</source>
          <target state="translated">プロンプト文字は入力時に自動的にスペースに変換されます。</target>
        </trans-unit>
        <trans-unit id="adf45316af5e41facda6d4ce2eb62cdd65e8a987" translate="yes" xml:space="preserve">
          <source>PrtSc (Print Screen) was pressed</source>
          <target state="translated">PrtSc(印刷画面)が押された</target>
        </trans-unit>
        <trans-unit id="cdf277873b64970f78a3708b4990064e7dfff4db" translate="yes" xml:space="preserve">
          <source>Putting the program &amp;ldquo;to sleep&amp;rdquo;, specifying the sleep time in nanoseconds;</source>
          <target state="translated">Putting the program &amp;ldquo;to sleep&amp;rdquo;, specifying the sleep time in nanoseconds;</target>
        </trans-unit>
        <trans-unit id="56d834e7db309d21f505c6ba2385c35396a93865" translate="yes" xml:space="preserve">
          <source>Putting the program &amp;ldquo;to sleep&amp;rdquo;, specifying the sleep time in seconds</source>
          <target state="translated">Putting the program &amp;ldquo;to sleep&amp;rdquo;, specifying the sleep time in seconds</target>
        </trans-unit>
        <trans-unit id="96f9ef15986bae3ffde2ed5089694e852bf420de" translate="yes" xml:space="preserve">
          <source>Putting the program &amp;rsquo;to sleep&amp;rsquo;, specifying the sleep time in nanoseconds; CAVEAT: although you&amp;rsquo;ll express the time in nanoseconds, Windows systems will only be able to sleep at a millisecond granularity</source>
          <target state="translated">プログラムを「スリープ」にして、スリープ時間をナノ秒で指定します。警告：時間はナノ秒単位で表しますが、Windowsシステムはミリ秒単位でのみスリープできます。</target>
        </trans-unit>
        <trans-unit id="08d07e7e49c86dad93291362c0dab33a6083e56e" translate="yes" xml:space="preserve">
          <source>Putting the program &amp;rsquo;to sleep&amp;rsquo;, specifying the sleep time in seconds</source>
          <target state="translated">プログラムを「スリープ」にして、スリープ時間を秒単位で指定する</target>
        </trans-unit>
        <trans-unit id="c3156e00d3c2588c639e0d3cf6821258b05761c7" translate="yes" xml:space="preserve">
          <source>Q</source>
          <target state="translated">Q</target>
        </trans-unit>
        <trans-unit id="1c09e5740de9035fcd0c1fa8a63516480c1e5022" translate="yes" xml:space="preserve">
          <source>QUERY-INDEX, QUEUE, QUOTES, QUOTE</source>
          <target state="translated">QUERY-INDEX,TAIL,QUOTES,QUOTE</target>
        </trans-unit>
        <trans-unit id="10dfe59bf8fd63e613158ecf86f77c108701c252" translate="yes" xml:space="preserve">
          <source>QUEUE, QUOTE, QUOTES</source>
          <target state="translated">キュー、クオーツ、クオーツ</target>
        </trans-unit>
        <trans-unit id="2ffe44e547583bf61e0c2b02d0288df152e1e76d" translate="yes" xml:space="preserve">
          <source>Qualification</source>
          <target state="translated">Qualification</target>
        </trans-unit>
        <trans-unit id="06576556d1ad802f247cad11ae748be47b70cd9c" translate="yes" xml:space="preserve">
          <source>R</source>
          <target state="translated">R</target>
        </trans-unit>
        <trans-unit id="666bfb3506071d041bc953a3b96327c975564f94" translate="yes" xml:space="preserve">
          <source>RADIO-BUTTON, RAISED, RAISE, RAISING, RANDOM, RANGE, RD, READ-ONLY, READ, RECEIVE, RECORD-DATA, RECORDING, RECORDS, RECORD-TO-ADD, RECORD-TO-DELETE, RECORD, RECURSIVE, REDEFINES, REEL, REFERENCE, REFERENCES, REFRESH, REGION-COLOR, RELATION, RELATIVE, RELEASE, REMAINDER, REMARKS, REMOVAL, REM, RENAMES, REPLACE, REPLACING, REPORTING, REPORTS, REPORT, REPOSITORY, REQUIRED, RESERVE, RESET-GRID, RESET-LIST, RESET-TABS, RESET, RESUME, RETRY, RETURN-CODE, RETURNING, RETURN, REVERSED, REVERSE-VIDEO, REVERSE, REWIND, REWRITE, RF, RH, RIGHT-ALIGN, RIGHT-JUSTIFY, RIGHT, RIMMED, ROLLBACK, ROUNDED, ROUNDING, ROW-COLOR-PATTERN, ROW-COLOR, ROW-DIVIDERS, ROW-FONT, ROW-HEADINGS, ROW-PROTECTION, RUN</source>
          <target state="translated">RADIO-BUTTON、RAISED、RAISE、RAISING、RANDOM、RANGE、RD、READ-ONLY、READ、RECEIVE、RECORD-DATA、RECORDING、RECORDS、RECORD-TO-ADD、RECORD-TO-DELETE、RECORD、RECURSIVE、REDEFINES、REEL、REFERENCE、REFERENCES、REFRESH、REGION-COLOROR、RELATION、RELATIVE、RELEASE、REMAINDER、REMARKS、REMOVAL、REM、RENAMES、REPLACE、REPLACING、REPLACING、REPORTING。REPORT,REPOSITORY,REQUIRED,RESERVE,RESET-GRID,RESET-LIST,RESET-ABS,RESET,RESUME,RETRY,RETURN-CODE,RETURNING,RETURN,REVERSED,REVERSE-VIDEO,REVERSE,REWIND,REWRITE,RF,RH,RIGHT-ALIGN,RIGHT-JUSTIFY,RIGHT,RIMMED,ROLLBACK,ROUNDED,ROUNDING,ROW-COLOR-PATTERN,ROW-COLOR,ROW-DIVIDERS,ROW-FONT,ROW-HEADINGS,ROW-PROOTECTION,RUN</target>
        </trans-unit>
        <trans-unit id="f08a1db7e6b2f2c1d6778ded5854c67530551d51" translate="yes" xml:space="preserve">
          <source>RAISE, RAISING, RANDOM, RANGE, RD, READ, RECEIVE, RECORD, RECORDING, RECORDS, RECURSIVE, REDEFINES, REEL, REFERENCE, REFERENCES, RELATION, RELATIVE, RELEASE, REM, REMAINDER, REMARKS, REMOVAL, RENAMES, REPLACE, REPLACING, REPORT, REPORTING, REPORTS, REPOSITORY, REQUIRED, RESERVE, RESET, RESUME, RETRY, RETURN, RETURN-CODE, RETURNING, REVERSE, REVERSED, REVERSE-VIDEO, REWIND, REWRITE, RF, RH, RIGHT, RIGHT-JUSTIFY, ROLLBACK, ROUNDED, ROUNDING, RUN</source>
          <target state="translated">RAISE,RAISING,RANDOM,RANGE,RD,READ,RECEIVE,RECORD,RECORDS,RECURSIVE,REDEFINES,REEL,REFERENCE,REFERENCES,RELATION,RELATIVE,RELEASE,REM,REMAINDER,REMARKS,REMOVAL,RENAMES,REPLACE,REPLACING,REPORT,REPORTING,REPORTS,REPOSITORY,REQUIRED,RESERVE,RESET,RESUME,RETRY,RETURN,RETURN-CODE,RETURNING,REVERSE,REVERSED,REVERSE-VIDEO,REWIND,REWRITE,RF,RH,RIGHT,RIGHT-JUSTIFY,ROLLBACK,ROUNDED,ROUNDED,RUN,RUN</target>
        </trans-unit>
        <trans-unit id="aa2ad98025c5ccedb9a8062b45fc81b9a85a1f9b" translate="yes" xml:space="preserve">
          <source>RANDOM Function Syntax</source>
          <target state="translated">RANDOM 関数構文</target>
        </trans-unit>
        <trans-unit id="dbba2fb2211acfc6f7e82c9b2672b38909b3350b" translate="yes" xml:space="preserve">
          <source>RANGE Function Syntax</source>
          <target state="translated">RANGE 関数構文</target>
        </trans-unit>
        <trans-unit id="6cc93d25cff28225305221453ea4729b237fbf4f" translate="yes" xml:space="preserve">
          <source>READ formats. For that reason, when &lt;code&gt;ACCESS MODE DYNAMIC&lt;/code&gt; has been specified and you want to tell the GnuCOBOL compiler that this minimal statement should be treated as a</source>
          <target state="translated">READ formats. For that reason, when &lt;code&gt;ACCESS MODE DYNAMIC&lt;/code&gt; has been specified and you want to tell the GnuCOBOL compiler that this minimal statement should be treated as a</target>
        </trans-unit>
        <trans-unit id="db466c67d7c924cf8154e41dc48967a59e9f1388" translate="yes" xml:space="preserve">
          <source>READ formats. For that reason, when&lt;code&gt;ACCESS MODE DYNAMIC&lt;/code&gt;has been specified and you want to tell the GnuCOBOL compiler that this minimal statement should be treated as a</source>
          <target state="translated">READフォーマット。そのため、 &lt;code&gt;ACCESS MODE DYNAMIC&lt;/code&gt; が指定されていて、GnuCOBOLコンパイラーに、この最小限のステートメントは</target>
        </trans-unit>
        <trans-unit id="297a219959d7e33eb60f63d58ef1707009c5589b" translate="yes" xml:space="preserve">
          <source>READY TRACE Syntax</source>
          <target state="translated">READY TRACE 構文</target>
        </trans-unit>
        <trans-unit id="f2443315e578a83c109e2573005e5d586a47e1f1" translate="yes" xml:space="preserve">
          <source>REDEFINES Clause Syntax</source>
          <target state="translated">REDEFINES 節構文</target>
        </trans-unit>
        <trans-unit id="6e0eda3b4da0e9ceb260e9bdb8e5e7288b128d72" translate="yes" xml:space="preserve">
          <source>RELEASE Syntax</source>
          <target state="translated">リリース構文</target>
        </trans-unit>
        <trans-unit id="1452eb67d984473ae14ca789abb0dd5e6572d980" translate="yes" xml:space="preserve">
          <source>REM Function Syntax</source>
          <target state="translated">REM 関数構文</target>
        </trans-unit>
        <trans-unit id="860c8f47d893f4be74f855bc3ab2e7755e06e9f8" translate="yes" xml:space="preserve">
          <source>RENAMES Clause Syntax</source>
          <target state="translated">RENAMES 節構文</target>
        </trans-unit>
        <trans-unit id="0ee104cf480ad829d0d18846195f1ae3e42608d2" translate="yes" xml:space="preserve">
          <source>REPORT FOOTING</source>
          <target state="translated">REPORT FOOTING</target>
        </trans-unit>
        <trans-unit id="45db7be4ee99a037495a1b32a06d59c28c970b98" translate="yes" xml:space="preserve">
          <source>REPORT HEADING</source>
          <target state="translated">報告書の見出し</target>
        </trans-unit>
        <trans-unit id="06102dd7b6d8bbeea07ca6248d2d0491f36ca514" translate="yes" xml:space="preserve">
          <source>REPORT SECTION Syntax</source>
          <target state="translated">REPORT SECTION 構文</target>
        </trans-unit>
        <trans-unit id="56bae7109eaffc652415c08257a2232ce3d6d355" translate="yes" xml:space="preserve">
          <source>REPORT-SECTION-Data-Item</source>
          <target state="translated">REPORT-SECTION-Data-Item</target>
        </trans-unit>
        <trans-unit id="bbf4d4bf6e7c7b88c13cb244b20c9db60fea7fe8" translate="yes" xml:space="preserve">
          <source>REPORT-SECTION-Data-Item Syntax</source>
          <target state="translated">REPORT-SECTION-データ項目構文</target>
        </trans-unit>
        <trans-unit id="76b842cd5554e5443ec37175b86f0a7439277eaa" translate="yes" xml:space="preserve">
          <source>REPOSITORY Syntax</source>
          <target state="translated">REPOSITORY 構文</target>
        </trans-unit>
        <trans-unit id="3e46f46f9ea86a2a9553486ee7aa2c96ae58ba11" translate="yes" xml:space="preserve">
          <source>REQUIRED Attribute Syntax</source>
          <target state="translated">REQUIRED 属性構文</target>
        </trans-unit>
        <trans-unit id="cda8fbff28f8810780b1a56c33efc20d1dde8b3d" translate="yes" xml:space="preserve">
          <source>RESET TRACE Syntax</source>
          <target state="translated">RESET TRACE 構文</target>
        </trans-unit>
        <trans-unit id="4ed24f6619445e8cfbe948cba81942311748cd46" translate="yes" xml:space="preserve">
          <source>RETURN Syntax</source>
          <target state="translated">RETURN 構文</target>
        </trans-unit>
        <trans-unit id="d3589e955cfc0488a73e50210ba64c73c4db3d5b" translate="yes" xml:space="preserve">
          <source>REVERSE Function Syntax</source>
          <target state="translated">REVERSE 関数構文</target>
        </trans-unit>
        <trans-unit id="62008f8b8cc34e29b2ffb97c051904c56144fb42" translate="yes" xml:space="preserve">
          <source>REVERSE-VIDEO Attribute Syntax</source>
          <target state="translated">REVERSE-VIDEO 属性構文</target>
        </trans-unit>
        <trans-unit id="9c8603e175aadbb76620be9e78e2b5af2c6f0031" translate="yes" xml:space="preserve">
          <source>REWRITE Syntax</source>
          <target state="translated">REWRITE 構文</target>
        </trans-unit>
        <trans-unit id="8278d68f89bd316de6fc950777060e28082a6774" translate="yes" xml:space="preserve">
          <source>ROLLBACK Syntax</source>
          <target state="translated">ROLLBACK 構文</target>
        </trans-unit>
        <trans-unit id="013737bd37ee61fd6988b27b61f124f3f09c2c5b" translate="yes" xml:space="preserve">
          <source>ROUNDED Syntax</source>
          <target state="translated">丸められた構文</target>
        </trans-unit>
        <trans-unit id="7086af21cea218894d38b86c0f36ebe5431a8978" translate="yes" xml:space="preserve">
          <source>RWCS will still be counting lines to decide when to close off one page and start a new one, but when a new page is started it&amp;rsquo;s page heading will</source>
          <target state="translated">RWCSは、1つのページを閉じて新しいページを開始するタイミングを決定するために行をカウントしますが、新しいページが開始されると、ページの見出しは</target>
        </trans-unit>
        <trans-unit id="f79da70bedb27f6d17326c84593c5acb2650ffc4" translate="yes" xml:space="preserve">
          <source>RWCS will still be counting lines to decide when to close off one page and start a new one, but when a new page is started its page heading will</source>
          <target state="translated">RWCSは、ページを閉じるタイミングと新しいページを開始するタイミングを決定するために行数をカウントしますが、新しいページが開始されると、そのページの見出しは以下のようになります。</target>
        </trans-unit>
        <trans-unit id="b743a7c1306a4852bcc4d9446e41b820e314cfb0" translate="yes" xml:space="preserve">
          <source>Random READ Syntax</source>
          <target state="translated">ランダムリード構文</target>
        </trans-unit>
        <trans-unit id="2fe6d420b581df57a36800ee0b4e6d48b9222c04" translate="yes" xml:space="preserve">
          <source>Range of Values:</source>
          <target state="translated">値の範囲。</target>
        </trans-unit>
        <trans-unit id="5d65b6aaa07a1c4a008e947c5b301e902e455c7f" translate="yes" xml:space="preserve">
          <source>Raw C string using &lt;code&gt;L&quot;&lt;var&gt;characters&lt;/var&gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">Raw C string using &lt;code&gt;L&quot;&lt;var&gt;characters&lt;/var&gt;&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a8fb69456149034e0c74e43230f8241bc8a15df6" translate="yes" xml:space="preserve">
          <source>Read error</source>
          <target state="translated">読み取りエラー</target>
        </trans-unit>
        <trans-unit id="c96936a418561c4f0cf4ce37907f034b2ce74117" translate="yes" xml:space="preserve">
          <source>Read not done</source>
          <target state="translated">読んではいけない</target>
        </trans-unit>
        <trans-unit id="dafb118dad5716d1f4c57baa3f0db8b651fa4447" translate="yes" xml:space="preserve">
          <source>Reads all eight of the COBOL switches (&lt;code&gt;SWITCH-1&lt;/code&gt; through &lt;code&gt;SWITCH-8&lt;/code&gt;)</source>
          <target state="translated">Reads all eight of the COBOL switches ( &lt;code&gt;SWITCH-1&lt;/code&gt; through &lt;code&gt;SWITCH-8&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="a32211bbc813e496d9a82dc784c0086ff3f040eb" translate="yes" xml:space="preserve">
          <source>Reads all eight of the COBOL switches (SWITCH-1 through SWITCH-8)</source>
          <target state="translated">COBOLスイッチ(SWITCH-1~SWITCH-8)の8つのスイッチをすべて読み取る。</target>
        </trans-unit>
        <trans-unit id="004bb4a29efe64beb34a61c3267da0fc0dfeb392" translate="yes" xml:space="preserve">
          <source>Recognizing when control fields on the report &amp;mdash; fields tied to those that were used as &lt;code&gt;SORT&lt;/code&gt; statement (see &lt;a href=&quot;#SORT&quot;&gt;SORT&lt;/a&gt;) keys &amp;mdash; have changed. This is known as a control break. The RWCS can automatically perform the following reporting actions when a control break occurs:</source>
          <target state="translated">Recognizing when control fields on the report &amp;mdash; fields tied to those that were used as &lt;code&gt;SORT&lt;/code&gt; statement (see &lt;a href=&quot;#SORT&quot;&gt;SORT&lt;/a&gt;) keys &amp;mdash; have changed. This is known as a control break. The RWCS can automatically perform the following reporting actions when a control break occurs:</target>
        </trans-unit>
        <trans-unit id="09acbc68ca2f9bb219e307419a9388579ddd5613" translate="yes" xml:space="preserve">
          <source>Recognizing when control fields on the report &amp;mdash; fields tied to those that were used as&lt;code&gt;SORT&lt;/code&gt;statement (see &lt;a href=&quot;#SORT&quot;&gt;SORT&lt;/a&gt;) keys &amp;mdash; have changed. This is known as a control break. The RWCS can automatically perform the following reporting actions when a control break occurs:</source>
          <target state="translated">使用されたものに縛らフィールド-レポート上のコントロールフィールド時に認識し &lt;code&gt;SORT&lt;/code&gt; の声明（参照&lt;a href=&quot;#SORT&quot;&gt;SORTを&lt;/a&gt;）キーは-変更されました。これはコントロールブレークと呼ばれます。RWCSは、コントロールブレークが発生したときに、次のレポートアクションを自動的に実行できます。</target>
        </trans-unit>
        <trans-unit id="1c54132b8e5a9fa44a9a1a7d30b1be36ab3c4247" translate="yes" xml:space="preserve">
          <source>Record</source>
          <target state="translated">Record</target>
        </trans-unit>
        <trans-unit id="ce416265562e75e05fc8d34feb2de4e9ae68719c" translate="yes" xml:space="preserve">
          <source>Record locked</source>
          <target state="translated">レコードロック</target>
        </trans-unit>
        <trans-unit id="aafe95bf83724804fd5d5b773a1aceb42c757e0f" translate="yes" xml:space="preserve">
          <source>Record overflow</source>
          <target state="translated">レコードオーバーフロー</target>
        </trans-unit>
        <trans-unit id="cab727edd7e859fb6449e9df6dfd703893e3d3ba" translate="yes" xml:space="preserve">
          <source>Record-locking is supported by advanced file-management software built-in to the GnuCOBOL implementation you are using. This software provides a single point-of-control for access to files &amp;mdash; usually &lt;code&gt;ORGANIZATION INDEXED&lt;/code&gt; files. One such runtime package capable of doing this is the Berkeley Database (BDB) package &amp;mdash; a package frequently used in GnuCOBOL builds to support indexed files.</source>
          <target state="translated">Record-locking is supported by advanced file-management software built-in to the GnuCOBOL implementation you are using. This software provides a single point-of-control for access to files &amp;mdash; usually &lt;code&gt;ORGANIZATION INDEXED&lt;/code&gt; files. One such runtime package capable of doing this is the Berkeley Database (BDB) package &amp;mdash; a package frequently used in GnuCOBOL builds to support indexed files.</target>
        </trans-unit>
        <trans-unit id="683f2af03fd2b451e73dee88eff2a425d1ecd97a" translate="yes" xml:space="preserve">
          <source>Records in this type of file are all the same physical length, except possibly for the very last record in the file, which may be shorter than the others. If variable-length logical records are defined to the program, the space occupied by each physical record in the file will occupy the space described by the longest record description in the program.</source>
          <target state="translated">このタイプのファイル内のレコードは、ファイル内の最後のレコードを除いて、すべて同じ物理的長さです。可変長の論理レコードがプログラムに定義されている場合、ファイル内の各物理レコードによって占有される空間は、プログラム内の最も長いレコード記述によって記述された空間を占有します。</target>
        </trans-unit>
        <trans-unit id="ff8bfa364f950637050d748a4e18c3576f1bf748" translate="yes" xml:space="preserve">
          <source>Records in this type of file are all the same physical length. If variable-length logical records are defined to the program, the space occupied by each physical record in the file will occupy the maximum possible space, and the logical record length field will contain the number of bytes of data in the record that are actually in use.</source>
          <target state="translated">このタイプのファイル内のレコードは、すべて同じ物理長である。可変長の論理レコードがプログラムに定義されている場合、ファイル内の各物理レコードが占有するスペースは最大可能なスペースを占有し、論理レコード長フィールドには、実際に使用されているレコード内のデータのバイト数が含まれます。</target>
        </trans-unit>
        <trans-unit id="0cc533c96861929cfb20ffe2f1ccaa0c199fe22c" translate="yes" xml:space="preserve">
          <source>Records must be read from or written to these files in a purely sequential manner. The only way to read (or write) record number 100 would be to have read (or written) records number 1 through 99 first.</source>
          <target state="translated">レコードは、これらのファイルから純粋に順番に読み込んだり、書き込んだりしなければなりません。レコード番号 100 を読み込む (または書き込む)唯一の方法は、最初にレコード番号 1 から 99 までのレコードを読み込む (または書き込む)ことです。</target>
        </trans-unit>
        <trans-unit id="dbbeae30df9c604bb1a30ed80ec60f1cebdc2b9f" translate="yes" xml:space="preserve">
          <source>Recursive Subprogram</source>
          <target state="translated">再帰的副プログラム</target>
        </trans-unit>
        <trans-unit id="da484c501d81e3eb5897020437a8f807f382208e" translate="yes" xml:space="preserve">
          <source>Red: COB-COLOR-RED</source>
          <target state="translated">レッドです。COB-COLOR-RED</target>
        </trans-unit>
        <trans-unit id="111f6b94230823d5f9d9b5c8661cde1fc214b6f9" translate="yes" xml:space="preserve">
          <source>Reference Modifier (Format 1) Syntax</source>
          <target state="translated">参照修飾子(フォーマット 1)構文</target>
        </trans-unit>
        <trans-unit id="01e36307df79002e130ab3dd97ca6835f5f295a6" translate="yes" xml:space="preserve">
          <source>Reference Modifier (Format 2) Syntax</source>
          <target state="translated">参照修飾子(フォーマット 2)構文</target>
        </trans-unit>
        <trans-unit id="358264423a41d0a625c503e421abf6a22e8eac8f" translate="yes" xml:space="preserve">
          <source>Reference modification may be used anywhere an identifier is legal, including serving as the receiving field of statements like &lt;code&gt;MOVE&lt;/code&gt; (see &lt;a href=&quot;#MOVE&quot;&gt;MOVE&lt;/a&gt;), &lt;code&gt;STRING&lt;/code&gt; (see &lt;a href=&quot;#STRING&quot;&gt;STRING&lt;/a&gt;) and &lt;code&gt;ACCEPT&lt;/code&gt; (see &lt;a href=&quot;#ACCEPT&quot;&gt;ACCEPT&lt;/a&gt;), to name a few.</source>
          <target state="translated">Reference modification may be used anywhere an identifier is legal, including serving as the receiving field of statements like &lt;code&gt;MOVE&lt;/code&gt; (see &lt;a href=&quot;#MOVE&quot;&gt;MOVE&lt;/a&gt;), &lt;code&gt;STRING&lt;/code&gt; (see &lt;a href=&quot;#STRING&quot;&gt;STRING&lt;/a&gt;) and &lt;code&gt;ACCEPT&lt;/code&gt; (see &lt;a href=&quot;#ACCEPT&quot;&gt;ACCEPT&lt;/a&gt;), to name a few.</target>
        </trans-unit>
        <trans-unit id="30329903751ce4ff8417bb80e18251dd7c760418" translate="yes" xml:space="preserve">
          <source>Reference modification may be used anywhere an identifier is legal, including serving as the receiving field of statements like&lt;code&gt;MOVE&lt;/code&gt;(see &lt;a href=&quot;#MOVE&quot;&gt;MOVE&lt;/a&gt;),&lt;code&gt;STRING&lt;/code&gt;(see &lt;a href=&quot;#STRING&quot;&gt;STRING&lt;/a&gt;) and&lt;code&gt;ACCEPT&lt;/code&gt;(see &lt;a href=&quot;#ACCEPT&quot;&gt;ACCEPT&lt;/a&gt;), to name a few.</source>
          <target state="translated">基準変更は識別子のようなステートメントの受け取りフィールドとして含む、合法であるどこでも使用することができる &lt;code&gt;MOVE&lt;/code&gt; （参照&lt;a href=&quot;#MOVE&quot;&gt;MOVEを&lt;/a&gt;）、 &lt;code&gt;STRING&lt;/code&gt; （参照&lt;a href=&quot;#STRING&quot;&gt;文字列を&lt;/a&gt;）および &lt;code&gt;ACCEPT&lt;/code&gt; （参照&lt;a href=&quot;#ACCEPT&quot;&gt;ACCEPT&lt;/a&gt;）、少数を示すために。</target>
        </trans-unit>
        <trans-unit id="2b929dfaa30d9c57fc875dc3ae211dcda30183e2" translate="yes" xml:space="preserve">
          <source>Reference modifier out of bounds</source>
          <target state="translated">参照修飾子の範囲外</target>
        </trans-unit>
        <trans-unit id="cde7218d52e9084aa68259dd46a019dfe15e1db2" translate="yes" xml:space="preserve">
          <source>References all character positions of &lt;code&gt;CUSTOMER-LAST-NAME&lt;/code&gt; from the fourth onward.</source>
          <target state="translated">References all character positions of &lt;code&gt;CUSTOMER-LAST-NAME&lt;/code&gt; from the fourth onward.</target>
        </trans-unit>
        <trans-unit id="292bc0cf7eadba7bffbf9a17d47d5c140de33bd9" translate="yes" xml:space="preserve">
          <source>References all character positions of CUSTOMER-LAST-NAME from the fourth onward.</source>
          <target state="translated">4番目以降のCUSTOMER-LAST-NAMEの全文字位置を参照します。</target>
        </trans-unit>
        <trans-unit id="5b2358ec73c08c61f19384f30ea6b4e2a0fbbd83" translate="yes" xml:space="preserve">
          <source>References characters 7 through 11 (5 characters in total) in the 6th occurrence of Table-Entry.</source>
          <target state="translated">Table-Entryの6回目の出現時の文字7~11(計5文字)を参照しています。</target>
        </trans-unit>
        <trans-unit id="767a4b3e7cf181198eb8a779db4f399f44e6d264" translate="yes" xml:space="preserve">
          <source>References the current month as a 2-digit number in character form. See &lt;a href=&quot;#CURRENT_002dDATE&quot;&gt;CURRENT-DATE&lt;/a&gt;, for more information.</source>
          <target state="translated">現在の月を文字形式の2桁の数値として参照します。詳細については、&lt;a href=&quot;#CURRENT_002dDATE&quot;&gt;CURRENT-DATEを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="0879d30101a7fc6e6032761f5f3ad2d49b7d7628" translate="yes" xml:space="preserve">
          <source>References the first three characters of &lt;code&gt;CUSTOMER-LAST-NAME&lt;/code&gt;.</source>
          <target state="translated">References the first three characters of &lt;code&gt;CUSTOMER-LAST-NAME&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="038d770e8d89d23f07610fa1be0137c66a6fea57" translate="yes" xml:space="preserve">
          <source>References the first three characters of CUSTOMER-LAST-NAME.</source>
          <target state="translated">CUSTOMER-LAST-NAMEの最初の3文字を参照します。</target>
        </trans-unit>
        <trans-unit id="99250bddd4a310831b5538663928ec44d0c3d3c6" translate="yes" xml:space="preserve">
          <source>References to &lt;code&gt;PAGE-COUNTER&lt;/code&gt; in the procedure division must be qualified with the appropriate report name if there are multiple &lt;code&gt;RD&lt;/code&gt;s defined.</source>
          <target state="translated">References to &lt;code&gt;PAGE-COUNTER&lt;/code&gt; in the procedure division must be qualified with the appropriate report name if there are multiple &lt;code&gt;RD&lt;/code&gt; s defined.</target>
        </trans-unit>
        <trans-unit id="6587b76409337fab0cfb6dfaf62a1e1bb0b7642d" translate="yes" xml:space="preserve">
          <source>References to &lt;code&gt;PAGE-COUNTER&lt;/code&gt; within the report section will be implicitly qualified with the name of the report to which the report group referencing the register belongs.</source>
          <target state="translated">References to &lt;code&gt;PAGE-COUNTER&lt;/code&gt; within the report section will be implicitly qualified with the name of the report to which the report group referencing the register belongs.</target>
        </trans-unit>
        <trans-unit id="53c0c22f11cdf98888eb8e2651eb44a37d101835" translate="yes" xml:space="preserve">
          <source>References to&lt;code&gt;PAGE-COUNTER&lt;/code&gt;in the procedure division must be qualified with the appropriate report name if there are multiple&lt;code&gt;RD&lt;/code&gt; defined.</source>
          <target state="translated">複数の &lt;code&gt;RD&lt;/code&gt; が定義されている場合、手続き部の &lt;code&gt;PAGE-COUNTER&lt;/code&gt; への参照は、適切なレポート名で修飾する必要があります。</target>
        </trans-unit>
        <trans-unit id="bdc6721faab5f2802ecdc12b1549bca72e8dd5a2" translate="yes" xml:space="preserve">
          <source>References to&lt;code&gt;PAGE-COUNTER&lt;/code&gt;within the report section will be implicitly qualified with the name of the report to which the report group referencing the register belongs.</source>
          <target state="translated">参照 &lt;code&gt;PAGE-COUNTER&lt;/code&gt; レポートセクション内では、レジスタを参照するレポート・グループが属するレポートの名前で暗黙的に修飾されます。</target>
        </trans-unit>
        <trans-unit id="05682635f6134950786dd1ccfb1517045fea0f7e" translate="yes" xml:space="preserve">
          <source>Referencing a &lt;code&gt;BASED&lt;/code&gt; data item either before its storage has been allocated or after its storage has been released (via the &lt;code&gt;FREE&lt;/code&gt; statement) will lead to &amp;ldquo;unpredictable results&amp;rdquo;. That&amp;rsquo;s how reference manuals and standards specifications talk about this situation. In the author&amp;rsquo;s experience, the results are all too predictable: the program aborts from an attempt to reference an unallocated area of memory.</source>
          <target state="translated">Referencing a &lt;code&gt;BASED&lt;/code&gt; data item either before its storage has been allocated or after its storage has been released (via the &lt;code&gt;FREE&lt;/code&gt; statement) will lead to &amp;ldquo;unpredictable results&amp;rdquo;. That&amp;rsquo;s how reference manuals and standards specifications talk about this situation. In the author&amp;rsquo;s experience, the results are all too predictable: the program aborts from an attempt to reference an unallocated area of memory.</target>
        </trans-unit>
        <trans-unit id="71b4727d522cc8fd132f13dbc1bd77418c2f5fa2" translate="yes" xml:space="preserve">
          <source>Referencing a&lt;code&gt;BASED&lt;/code&gt;data item either before its storage has been allocated or after its storage has been released (via the&lt;code&gt;FREE&lt;/code&gt;statement) will lead to &quot;unpredictable results&quot;. That&amp;rsquo;s how reference manuals and standards specifications talk about this situation. In the author&amp;rsquo;s experience, the results are all too predictable &amp;mdash; the program aborts from an attempt to reference an unallocated area of memory.</source>
          <target state="translated">ストレージが割り当てられる前、または（ &lt;code&gt;FREE&lt;/code&gt; ステートメントを介して）ストレージが解放された後に &lt;code&gt;BASED&lt;/code&gt; データ項目を参照すると、「予期しない結果」が発生します。それがリファレンスマニュアルと標準仕様がこの状況について語る方法です。著者の経験では、結果はすべて予測可能です。プログラムは、メモリの割り当てられていない領域を参照しようとして中止されます。</target>
        </trans-unit>
        <trans-unit id="409fda81216da86f4b719672a1c841c502a8a320" translate="yes" xml:space="preserve">
          <source>Regardless of how many programs comprise a single GnuCOBOL source file, only a single output executable program will be generated from that source file when the file is compiled.</source>
          <target state="translated">1つのGnuCOBOLソースファイルを構成するプログラムの数にかかわらず、ファイルがコンパイルされたときには、そのソースファイルから1つの実行可能プログラムのみが生成されます。</target>
        </trans-unit>
        <trans-unit id="3c3a31a17ba82d290e221d49e19bfdc636896d10" translate="yes" xml:space="preserve">
          <source>Regardless of the manner in which a main program is executed (i.e. directly or via &lt;code&gt;cobcrun&lt;/code&gt;), any arguments specified to the program may be retrieved via any of the following:</source>
          <target state="translated">Regardless of the manner in which a main program is executed (i.e. directly or via &lt;code&gt;cobcrun&lt;/code&gt; ), any arguments specified to the program may be retrieved via any of the following:</target>
        </trans-unit>
        <trans-unit id="ff7478f48888d55ca4c1a34fa362ca62073e45fb" translate="yes" xml:space="preserve">
          <source>Regardless of the manner in which a main program is executed (i.e. directly or via&lt;code&gt;cobcrun&lt;/code&gt;, any arguments specified to the program may be retrieved via any of the following:</source>
          <target state="translated">メインプログラムの実行方法に関係なく（つまり、直接または &lt;code&gt;cobcrun&lt;/code&gt; を介して）、プログラムに指定された引数は、次のいずれかを介して取得できます。</target>
        </trans-unit>
        <trans-unit id="754b50352cbeb073b05a92d3dc3dd894a1fd30c8" translate="yes" xml:space="preserve">
          <source>Regardless of the value moved into the field, this symbol will insert the currency symbol into the data item&amp;rsquo;s value in the position where it occurs in the &amp;lt;</source>
          <target state="translated">フィールドに移動した値に関係なく、この記号は、通貨記号をデータ項目の値の&amp;lt;内に出現する位置に挿入します</target>
        </trans-unit>
        <trans-unit id="e8fb933566bf5e71bc3a22aa4c051fc982235b82" translate="yes" xml:space="preserve">
          <source>Regardless of the value moved into the field, this symbol will insert the currency symbol into the data item&amp;rsquo;s value in the position where it occurs in the &lt;var&gt;picture-string&lt;/var&gt; (see &lt;a href=&quot;#SPECIAL_002dNAMES&quot;&gt;SPECIAL-NAMES&lt;/a&gt;).</source>
          <target state="translated">Regardless of the value moved into the field, this symbol will insert the currency symbol into the data item&amp;rsquo;s value in the position where it occurs in the &lt;var&gt;picture-string&lt;/var&gt; (see &lt;a href=&quot;#SPECIAL_002dNAMES&quot;&gt;SPECIAL-NAMES&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="f8d10a49661c56094a589b50b21f808472559b68" translate="yes" xml:space="preserve">
          <source>Regardless of whether the compiler is operating in Fixed or Free Format Mode, GnuCOBOL allows alphanumeric literals to be broken up into separate fragments. These fragments have their own beginning and ending quote/apostrophe characters and are &quot;glued together&quot; at compilation time using &quot;&amp;amp;&quot;</source>
          <target state="translated">コンパイラーが固定形式モードで動作しているかフリー形式モードで動作しているかに関係なく、GnuCOBOLでは英数字リテラルを個別のフラグメントに分割できます。これらのフラグメントには、独自の開始および終了の引用符/アポストロフィ文字があり、コンパイル時に「＆」を使用して「結合」されます。</target>
        </trans-unit>
        <trans-unit id="1446e57d9bea1f44cc2f86d540b982072bdd6344" translate="yes" xml:space="preserve">
          <source>Regardless of whether the compiler is operating in Fixed or Free Format Mode, GnuCOBOL allows alphanumeric literals to be broken up into separate fragments. These fragments have their own beginning and ending quote/apostrophe characters and are &amp;ldquo;glued together&amp;rdquo; at compilation time using &amp;lsquo;</source>
          <target state="translated">Regardless of whether the compiler is operating in Fixed or Free Format Mode, GnuCOBOL allows alphanumeric literals to be broken up into separate fragments. These fragments have their own beginning and ending quote/apostrophe characters and are &amp;ldquo;glued together&amp;rdquo; at compilation time using &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="06b5e0b9af6147c0242db84e0c4a13e171c5553f" translate="yes" xml:space="preserve">
          <source>RelOp Syntax</source>
          <target state="translated">RelOp 構文</target>
        </trans-unit>
        <trans-unit id="22b451c449833edcae74df44c9b1e2774aa11aba" translate="yes" xml:space="preserve">
          <source>Relation-Condition Syntax</source>
          <target state="translated">関係条件構文</target>
        </trans-unit>
        <trans-unit id="ae2bbee2af3f24cebcd54dfe968efd8b4dc84da8" translate="yes" xml:space="preserve">
          <source>Relative files are processed using the following statements:</source>
          <target state="translated">相対ファイルは、以下のステートメントを使用して処理されます。</target>
        </trans-unit>
        <trans-unit id="a8074a49fb497726af6af68fe038ef3c63f14d75" translate="yes" xml:space="preserve">
          <source>Remember that the null characters are actually in the GnuCOBOL &quot;Arg1&quot; and &quot;Arg2&quot; data items. They don&amp;rsquo;t appear in the output, but they ARE there.</source>
          <target state="translated">null文字は実際にはGnuCOBOLの「Arg1」および「Arg2」データ項目にあることに注意してください。それらは出力には表示されませんが、そこにはあります。</target>
        </trans-unit>
        <trans-unit id="80d0caf3bcad222d6d3b975298a7c44c77f7baff" translate="yes" xml:space="preserve">
          <source>Remember that the null characters are actually in the GnuCOBOL &lt;code&gt;Arg1&lt;/code&gt; and &lt;code&gt;Arg2&lt;/code&gt; data items. They don&amp;rsquo;t appear in the output, but they</source>
          <target state="translated">Remember that the null characters are actually in the GnuCOBOL &lt;code&gt;Arg1&lt;/code&gt; and &lt;code&gt;Arg2&lt;/code&gt; data items. They don&amp;rsquo;t appear in the output, but they</target>
        </trans-unit>
        <trans-unit id="9b41aeb9a8ef66492ba2168a625b9aeb689e33ca" translate="yes" xml:space="preserve">
          <source>Remember that the points described here are intended to make things easier for you, the programmer. No COBOL compiler cares one way or another whether any of these suggestions are followed.</source>
          <target state="translated">ここに記載されている点は、プログラマであるあなたが物事をより簡単にすることを目的としていることを忘れないでください。COBOLコンパイラは、これらの提案のどれかが守られているかどうかを気にしない。</target>
        </trans-unit>
        <trans-unit id="ecf0a1884749f073e1a9ac912f6365cffd7995e2" translate="yes" xml:space="preserve">
          <source>Removal of leading or trailing spaces from a string</source>
          <target state="translated">文字列からの先頭または末尾のスペースの除去</target>
        </trans-unit>
        <trans-unit id="cf3c352d613abe4e31f868838e58187f552464af" translate="yes" xml:space="preserve">
          <source>Repeated, as needed</source>
          <target state="translated">必要に応じて繰り返し</target>
        </trans-unit>
        <trans-unit id="0a7b86bde619fdcaeb2f1a1f61e591e3c33e5b57" translate="yes" xml:space="preserve">
          <source>Replace Mode remains in-effect &amp;mdash; continuing to make source code changes &amp;mdash; until another Format 1 &lt;code&gt;REPLACE&lt;/code&gt; is encountered, the end of currently compiling program source file is reached or a Format 2 &lt;code&gt;REPLACE&lt;/code&gt; statement is encountered.</source>
          <target state="translated">Replace Mode remains in-effect &amp;mdash; continuing to make source code changes &amp;mdash; until another Format 1 &lt;code&gt;REPLACE&lt;/code&gt; is encountered, the end of currently compiling program source file is reached or a Format 2 &lt;code&gt;REPLACE&lt;/code&gt; statement is encountered.</target>
        </trans-unit>
        <trans-unit id="086db9ae73624a8fd462fa0d1f01022947edee6c" translate="yes" xml:space="preserve">
          <source>Replace Mode remains in-effect &amp;mdash; continuing to make source code changes &amp;mdash; until another Format 1&lt;code&gt;REPLACE&lt;/code&gt;is encountered, the end of currently compiling program source file is reached or a Format 2&lt;code&gt;REPLACE&lt;/code&gt;statement is encountered.</source>
          <target state="translated">置換モードは、別のフォーマット1の &lt;code&gt;REPLACE&lt;/code&gt; が検出されるか、現在コンパイルされているプログラムソースファイルの最後に到達するか、フォーマット2の &lt;code&gt;REPLACE&lt;/code&gt; ステートメントが検出されるまで、有効です。</target>
        </trans-unit>
        <trans-unit id="87b67c018726c13647c572f1447f0e2a6fa2576e" translate="yes" xml:space="preserve">
          <source>Replace one or more complete reserved words, user-defined identifiers or literals; the following points apply to this option:</source>
          <target state="translated">1 個ない し 複数の完全予約語、 ユーザー定義の識別子またはリテラルを置き換えます。</target>
        </trans-unit>
        <trans-unit id="10c1a853f5318fa583f60512501f1e7bbab158ad" translate="yes" xml:space="preserve">
          <source>Replacement of one or more complete reserved words, user-defined identifiers or literals; the following points apply to this option:</source>
          <target state="translated">1 つまたは複数の完全予約語、 ユーザー定義の識別子またはリテラルを置き換えます。</target>
        </trans-unit>
        <trans-unit id="b3584f020632f05d39728f2ebe9927cf604a1725" translate="yes" xml:space="preserve">
          <source>Report Footing</source>
          <target state="translated">報告書の足元</target>
        </trans-unit>
        <trans-unit id="5b52f1abe3ac29f70381d19510c3cba0043a6bbd" translate="yes" xml:space="preserve">
          <source>Report Group</source>
          <target state="translated">報告書グループ</target>
        </trans-unit>
        <trans-unit id="ac7f2e7a7c1eab0ca6e6f5f80c57a1506edbb36d" translate="yes" xml:space="preserve">
          <source>Report Heading</source>
          <target state="translated">レポートの見出し</target>
        </trans-unit>
        <trans-unit id="ae0e8276f3c85c4332b49cc15cda40edfc99748e" translate="yes" xml:space="preserve">
          <source>Report group declarations must be followed by at least one &amp;lt;&amp;lt;</source>
          <target state="translated">レポートグループの宣言には、少なくとも1つの&amp;lt;&amp;lt;が続く必要があります。</target>
        </trans-unit>
        <trans-unit id="2ee39b3bd3491ab1319d9a2ee65ef04d56a83748" translate="yes" xml:space="preserve">
          <source>Report group declarations must be followed by at least one &lt;code&gt;&lt;var&gt;REPORT-SECTION-Data-Item&lt;/var&gt;&lt;/code&gt; with a level number in the range 02-49.</source>
          <target state="translated">Report group declarations must be followed by at least one &lt;code&gt;&lt;var&gt;REPORT-SECTION-Data-Item&lt;/var&gt;&lt;/code&gt; with a level number in the range 02-49.</target>
        </trans-unit>
        <trans-unit id="c3c0ff29655342b1619cb8511d8231760ec3468c" translate="yes" xml:space="preserve">
          <source>Report-Description (RD) Syntax</source>
          <target state="translated">レポート記述(RD)構文</target>
        </trans-unit>
        <trans-unit id="21d8d840181db86a81475c4ecbc7c1aebafea842" translate="yes" xml:space="preserve">
          <source>Report-Group-Definition Syntax</source>
          <target state="translated">レポートグループ定義構文</target>
        </trans-unit>
        <trans-unit id="7fc78c4dd35e76513ea8698d9cdd17d8aadc720d" translate="yes" xml:space="preserve">
          <source>Reserved Word</source>
          <target state="translated">予約語</target>
        </trans-unit>
        <trans-unit id="7f80623ffda4637ef16987aa5f47e5c605a09b42" translate="yes" xml:space="preserve">
          <source>Reserved Words</source>
          <target state="translated">予約語</target>
        </trans-unit>
        <trans-unit id="4f811c8adb8a6b1e9b9b9faaf6f3806186fa7fe0" translate="yes" xml:space="preserve">
          <source>Reserved words of the COBOL language will appear in UPPER-CASE. When they appear underlined, as this one is, they are required reserved words.</source>
          <target state="translated">COBOL言語の予約語は、UPPER-CASEで表示される。これがそうであるように下線が引かれている場合、それは必須の予約語である。</target>
        </trans-unit>
        <trans-unit id="87aabf77f1614bb799bcfe523cf223008537a766" translate="yes" xml:space="preserve">
          <source>Respectively</source>
          <target state="translated">Respectively</target>
        </trans-unit>
        <trans-unit id="5faa59d4bc3756040b8ce9e673c09f929e6ee9ba" translate="yes" xml:space="preserve">
          <source>Result</source>
          <target state="translated">Result</target>
        </trans-unit>
        <trans-unit id="61a3a6e39b507fd50579c74b81260ece96d65764" translate="yes" xml:space="preserve">
          <source>Result is &amp;rsquo;</source>
          <target state="translated">結果は '</target>
        </trans-unit>
        <trans-unit id="635841ecd7e49d52016a2baa42fe40227b28508e" translate="yes" xml:space="preserve">
          <source>Result is &amp;rsquo;ABC</source>
          <target state="translated">結果は「ABC</target>
        </trans-unit>
        <trans-unit id="34e077fbe236df277dc5c01298886daa0417a3d9" translate="yes" xml:space="preserve">
          <source>Result is &amp;rsquo;ABCDEF&amp;rsquo;</source>
          <target state="translated">結果は「ABCDEF」です</target>
        </trans-unit>
        <trans-unit id="8d662f46412276c6c8a8d7c81378948cbde22381" translate="yes" xml:space="preserve">
          <source>Result is &amp;rsquo;DEFGHI&amp;rsquo;</source>
          <target state="translated">結果は「DEFGHI」です</target>
        </trans-unit>
        <trans-unit id="a774bbc895c3d7efe635d1d11a8e005f7ec809a6" translate="yes" xml:space="preserve">
          <source>Retrieves the number of arguments passed to the program executing the &lt;code&gt;CALL X&quot;91&quot;&lt;/code&gt;, saving that number into the &lt;var&gt;variable-arg&lt;/var&gt; argument. That should be a binary numeric data item (&lt;code&gt;USAGE BINARY-CHAR&lt;/code&gt; is recommended).</source>
          <target state="translated">Retrieves the number of arguments passed to the program executing the &lt;code&gt;CALL X&quot;91&quot;&lt;/code&gt; , saving that number into the &lt;var&gt;variable-arg&lt;/var&gt; argument. That should be a binary numeric data item ( &lt;code&gt;USAGE BINARY-CHAR&lt;/code&gt; is recommended).</target>
        </trans-unit>
        <trans-unit id="e3b027c7cc37d7818b9336c7ca74e14d71d4fdfb" translate="yes" xml:space="preserve">
          <source>Retrieves the number of arguments passed to the program executing the CALL X&quot;91&quot;, saving that number into the &amp;lt;</source>
          <target state="translated">CALL X &quot;91&quot;を実行するプログラムに渡された引数の数を取得し、その数を&amp;lt;</target>
        </trans-unit>
        <trans-unit id="c590f5f3ec023804208a621501668d27e0e77ec1" translate="yes" xml:space="preserve">
          <source>Retrieving information about the currently-executing program</source>
          <target state="translated">現在実行中のプログラムに関する情報の取得</target>
        </trans-unit>
        <trans-unit id="5c570687be468812fdc35b94e1681fcc239fc3dc" translate="yes" xml:space="preserve">
          <source>Retrieving the number of arguments passed to a subroutine.</source>
          <target state="translated">サブルーチンに渡された引数の数を取得します。</target>
        </trans-unit>
        <trans-unit id="a3f4c7dc209de44ce48630dcaecde0952de812d1" translate="yes" xml:space="preserve">
          <source>Return to step (C).</source>
          <target state="translated">ステップ(C)に戻ります。</target>
        </trans-unit>
        <trans-unit id="30bd1c21c7f5eddeea30b3001d4922cad418e533" translate="yes" xml:space="preserve">
          <source>Return to step C.</source>
          <target state="translated">ステップCに戻ります。</target>
        </trans-unit>
        <trans-unit id="45d42eebc7bd462db3ca38bad351e98a9c609584" translate="yes" xml:space="preserve">
          <source>Returned value :</source>
          <target state="translated">返された値 .</target>
        </trans-unit>
        <trans-unit id="6eeccf995350c7e94d285c22880aca8342c12b6b" translate="yes" xml:space="preserve">
          <source>Returned value as &lt;var&gt;argument-1&lt;/var&gt; is assigned to a temporary boolean data item of usage bit described with the same number of boolean positions.</source>
          <target state="translated">Returned value as &lt;var&gt;argument-1&lt;/var&gt; is assigned to a temporary boolean data item of usage bit described with the same number of boolean positions.</target>
        </trans-unit>
        <trans-unit id="6d144a31fe86038c563e9bbc5f345bedc3ab922c" translate="yes" xml:space="preserve">
          <source>Returned value is a boolean item of usage bit that has the same bit configuration as the binary representation of the value of &lt;var&gt;argument-1&lt;/var&gt;, where the rightmost boolean position is the low-order binary digit. The boolean value is zero-filled or truncated on the left, if necessary, in order to return a boolean item whose length is specified by &lt;var&gt;argument-2&lt;/var&gt; in therms of boolean positions.</source>
          <target state="translated">Returned value is a boolean item of usage bit that has the same bit configuration as the binary representation of the value of &lt;var&gt;argument-1&lt;/var&gt; , where the rightmost boolean position is the low-order binary digit. The boolean value is zero-filled or truncated on the left, if necessary, in order to return a boolean item whose length is specified by &lt;var&gt;argument-2&lt;/var&gt; in therms of boolean positions.</target>
        </trans-unit>
        <trans-unit id="0aafbc84ad48b25e722faf43d4d775e825b941f6" translate="yes" xml:space="preserve">
          <source>Returned value:</source>
          <target state="translated">返された値。</target>
        </trans-unit>
        <trans-unit id="7f5b5da823f7ed043d3fb1765c31b042e9e35e69" translate="yes" xml:space="preserve">
          <source>Returned values:</source>
          <target state="translated">返された値。</target>
        </trans-unit>
        <trans-unit id="1b904b7d61d345cf912ebd8551ae193e4f81ce5d" translate="yes" xml:space="preserve">
          <source>Returns the current date and time as the following 21-character structure:</source>
          <target state="translated">現在の日時を以下の21文字構造で返します。</target>
        </trans-unit>
        <trans-unit id="9ffa99b3d192b809de2c7d7bb177af363c246c9e" translate="yes" xml:space="preserve">
          <source>Returns the integer portion of &lt;var&gt;number&lt;/var&gt; (a numeric literal or data item).</source>
          <target state="translated">Returns the integer portion of &lt;var&gt;number&lt;/var&gt; (a numeric literal or data item).</target>
        </trans-unit>
        <trans-unit id="07d3e376e01f826657a12379dbe397b459617441" translate="yes" xml:space="preserve">
          <source>Returns the length &amp;mdash; in bytes &amp;mdash; of the specified &lt;code&gt;string&lt;/code&gt; (a group item, &lt;code&gt;USAGE DISPLAY&lt;/code&gt; elementary item or alphanumeric literal), minus the total number of trailing spaces, if any.</source>
          <target state="translated">Returns the length &amp;mdash; in bytes &amp;mdash; of the specified &lt;code&gt;string&lt;/code&gt; (a group item, &lt;code&gt;USAGE DISPLAY&lt;/code&gt; elementary item or alphanumeric literal), minus the total number of trailing spaces, if any.</target>
        </trans-unit>
        <trans-unit id="917c83ee070b45e610515185e0fdc0e5fd689b8b" translate="yes" xml:space="preserve">
          <source>Returns the length &amp;mdash; in characters &amp;mdash; of &lt;var&gt;string&lt;/var&gt; (a group item, &lt;code&gt;USAGE DISPLAY&lt;/code&gt; elementary item or alphanumeric literal).</source>
          <target state="translated">Returns the length &amp;mdash; in characters &amp;mdash; of &lt;var&gt;string&lt;/var&gt; (a group item, &lt;code&gt;USAGE DISPLAY&lt;/code&gt; elementary item or alphanumeric literal).</target>
        </trans-unit>
        <trans-unit id="c2462429170c0887f438d676ccffaf475ae55d44" translate="yes" xml:space="preserve">
          <source>Returns: &lt;code&gt;pid&lt;/code&gt; (the child process gets &amp;rsquo;0&amp;rsquo; returned, the calling process gets the &lt;code&gt;pid&lt;/code&gt; of the created child).</source>
          <target state="translated">Returns: &lt;code&gt;pid&lt;/code&gt; (the child process gets &amp;rsquo;0&amp;rsquo; returned, the calling process gets the &lt;code&gt;pid&lt;/code&gt; of the created child).</target>
        </trans-unit>
        <trans-unit id="ffbf13702e0fe12404a30857b9a96e25550e1f88" translate="yes" xml:space="preserve">
          <source>Returns: function-status / child-status</source>
          <target state="translated">戻り値:function-status/child-status</target>
        </trans-unit>
        <trans-unit id="7d71ad8c451fa23368b22f5954a4b59a775302a6" translate="yes" xml:space="preserve">
          <source>Reverse Video</source>
          <target state="translated">リバースビデオ</target>
        </trans-unit>
        <trans-unit id="7932a24fec98a881494794877d2b4c4562d08867" translate="yes" xml:space="preserve">
          <source>Rewriting a record does not cause the contents of the file to be physically updated until the next block of the file is read, a &lt;code&gt;COMMIT&lt;/code&gt; (see &lt;a href=&quot;#COMMIT&quot;&gt;COMMIT&lt;/a&gt;) or &lt;code&gt;UNLOCK&lt;/code&gt; statement (see &lt;a href=&quot;#UNLOCK&quot;&gt;UNLOCK&lt;/a&gt;) is issued or that file is closed.</source>
          <target state="translated">Rewriting a record does not cause the contents of the file to be physically updated until the next block of the file is read, a &lt;code&gt;COMMIT&lt;/code&gt; (see &lt;a href=&quot;#COMMIT&quot;&gt;COMMIT&lt;/a&gt;) or &lt;code&gt;UNLOCK&lt;/code&gt; statement (see &lt;a href=&quot;#UNLOCK&quot;&gt;UNLOCK&lt;/a&gt;) is issued or that file is closed.</target>
        </trans-unit>
        <trans-unit id="8fcf181cd4a0a23c939d756ac0bf62d450c9e879" translate="yes" xml:space="preserve">
          <source>Rewriting a record does not cause the contents of the file to be physically updated until the next block of the file is read, a&lt;code&gt;COMMIT&lt;/code&gt;(see &lt;a href=&quot;#COMMIT&quot;&gt;COMMIT&lt;/a&gt;) or&lt;code&gt;UNLOCK&lt;/code&gt;statement (see &lt;a href=&quot;#UNLOCK&quot;&gt;UNLOCK&lt;/a&gt;) is issued or that file is closed.</source>
          <target state="translated">レコードの書き換えが、ファイルの次のブロックが読み込まれるまで、ファイルの内容が物理的に更新されることはありません &lt;code&gt;COMMIT&lt;/code&gt; （参照&lt;a href=&quot;#COMMIT&quot;&gt;COMMIT&lt;/a&gt;）または &lt;code&gt;UNLOCK&lt;/code&gt; の文が（参照&lt;a href=&quot;#UNLOCK&quot;&gt;UNLOCKを&lt;/a&gt;）発行されたか、そのファイルが閉じられています。</target>
        </trans-unit>
        <trans-unit id="f898038d7cf3b2de5c8551462e42607f9fd8e4bd" translate="yes" xml:space="preserve">
          <source>Right Dbl Click</source>
          <target state="translated">右Dblクリック</target>
        </trans-unit>
        <trans-unit id="e8e04ebc95805899a3ec808267304f20ad412899" translate="yes" xml:space="preserve">
          <source>Right Pressed</source>
          <target state="translated">右押し</target>
        </trans-unit>
        <trans-unit id="8c90924664dcb63bc826e9606b0c0768f41090df" translate="yes" xml:space="preserve">
          <source>Right Released</source>
          <target state="translated">右リリース</target>
        </trans-unit>
        <trans-unit id="895b1d11588a96b44e2ed96b65592ce6a4f7de4b" translate="yes" xml:space="preserve">
          <source>Rounding is to the nearest value (larger or smaller). If two values are equally near, the value whose rightmost digit is</source>
          <target state="translated">四捨五入は、最も近い値(大きい値または小さい値)になります。2つの値が等しく近い場合は、右端の桁が</target>
        </trans-unit>
        <trans-unit id="cad6706b3cf4bc7ae1c6f29e19ebf628256c5d56" translate="yes" xml:space="preserve">
          <source>Rounding is to the nearest value (larger or smaller). If two values are equally near, the value with the larger absolute value is selected.</source>
          <target state="translated">丸めは、最も近い値(大きい値または小さい値)になります。2つの値が等しく近い場合は、絶対値が大きい方の値が選択されます。</target>
        </trans-unit>
        <trans-unit id="7615ee1054e581dcc3a8de4ea377f1d1dc3d34fc" translate="yes" xml:space="preserve">
          <source>Rounding is to the nearest value (larger or smaller). If two values are equally near, the value with the smaller absolute value is selected.</source>
          <target state="translated">丸めは、最も近い値(大きい値または小さい値)になります。2つの値が等しく近い場合は、絶対値が小さい方の値が選択されます。</target>
        </trans-unit>
        <trans-unit id="cef9cebf7a4f3fc0f3641120885da85acae7fab9" translate="yes" xml:space="preserve">
          <source>Rounding is to the nearest value of larger magnitude.</source>
          <target state="translated">四捨五入は大きい方の値を四捨五入しています。</target>
        </trans-unit>
        <trans-unit id="c473e95e70ef4113c7e4d23d6d9d39d929f8ba56" translate="yes" xml:space="preserve">
          <source>Rounding is to the nearest value whose magnitude is smaller.</source>
          <target state="translated">四捨五入は、四捨五入の大きさが小さい方の値になります。</target>
        </trans-unit>
        <trans-unit id="749f6595f010ab3ccab08d1309aeff0232369c6b" translate="yes" xml:space="preserve">
          <source>Rounding is toward the nearest value whose algebraic value is larger.</source>
          <target state="translated">四捨五入は、代数値が大きい方の最も近い値に向かって行います。</target>
        </trans-unit>
        <trans-unit id="789a21df2c0ea997aa47256c6917e1c2bd59b330" translate="yes" xml:space="preserve">
          <source>Rounding is toward the nearest value whose algebraic value is smaller.</source>
          <target state="translated">四捨五入は、代数値が小さい方の最も近い値に向かって行います。</target>
        </trans-unit>
        <trans-unit id="f9308ec227504e571d5cfd515e9af3d94153b539" translate="yes" xml:space="preserve">
          <source>Rounding only applies when the result being saved to a receiving field with a &lt;code&gt;ROUNDED&lt;/code&gt; clause is a non-integer value.</source>
          <target state="translated">Rounding only applies when the result being saved to a receiving field with a &lt;code&gt;ROUNDED&lt;/code&gt; clause is a non-integer value.</target>
        </trans-unit>
        <trans-unit id="90e4915dc94f8f7ed08953e738a14007e25b02c6" translate="yes" xml:space="preserve">
          <source>Rounding only applies when the result being saved to a receiving field with a&lt;code&gt;ROUNDED&lt;/code&gt;clause is a non-integer value.</source>
          <target state="translated">丸めは、 &lt;code&gt;ROUNDED&lt;/code&gt; 句を使用して受信フィールドに保存される結果が非整数値の場合にのみ適用されます。</target>
        </trans-unit>
        <trans-unit id="02aa629c8b16cd17a44f3a0efec2feed43937642" translate="yes" xml:space="preserve">
          <source>S</source>
          <target state="translated">S</target>
        </trans-unit>
        <trans-unit id="be9e9a1d0c4922b7c1901ab24cea6e46ad881df0" translate="yes" xml:space="preserve">
          <source>S, SAME, SAVE-AS-NO-PROMPT, SAVE-AS, SCREEN, SCROLL-BAR, SCROLL, SD, SEARCH-OPTIONS, SEARCH-TEXT, SEARCH, SECONDS-FROM-FORMATTED-TIME, SECONDS-PAST-MIDNIGHT, SECONDS, SECTION, SECURE, SECURITY, SEGMENT-LIMIT, SEGMENT, SELECT-ALL, SELECTION-INDEX, SELECTION-TEXT, SELECT, SELF-ACT, SELF, SEND, SENTENCE, SEPARATE, SEPARATION, SEQUENCE, SEQUENTIAL, SET, SHADING, SHADOW, SHARING, SHORT-DATE, SHOW-LINES, SHOW-NONE, SHOW-SEL-ALWAYS, SIGNED-INT, SIGNED-LONG, SIGNED-SHORT, SIGNED, SIGN, SIN, SIZE, SMALL-FONT, SORT-MERGE, SORT-ORDER, SORT-RETURN, SORT, SOURCE-COMPUTER, SOURCES, SOURCE, SPACE-FILL, SPACES, SPACE, SPECIAL-NAMES, SPINNER, SQRT, SQUARE, STANDARD-1, STANDARD-2, STANDARD-BINARY, STANDARD-COMPARE, STANDARD-DECIMAL, STANDARD-DEVIATION, STANDARD, START-X, START, START-Y, STATEMENT, STATIC-LIST, STATIC, STATUS-BAR, STATUS-TEXT, STATUS, STDCALL, STDERR, STDIN, STDOUT, STEP, STOP, STORED-CHAR-LENGTH, STRING, STRONG, STYLE, SUB-QUEUE-1, SUB-QUEUE-2, SUB-QUEUE-3, SUBSTITUTE-CASE, SUBSTITUTE, SUBTRACT, SUBWINDOW, SUM, SUM, SUPER, SUPPRESS, SWITCH-0, SWITCH-10, SWITCH-11, SWITCH-12, SWITCH-13, SWITCH-14, SWITCH-15, SWITCH-16, SWITCH-17, SWITCH-18, SWITCH-19, SWITCH-1, SWITCH-20, SWITCH-21, SWITCH-22, SWITCH-23, SWITCH-24, SWITCH-25, SWITCH-26, SWITCH-27, SWITCH-28, SWITCH-29, SWITCH-2, SWITCH-30, SWITCH-31, SWITCH-32, SWITCH-33, SWITCH-34, SWITCH-35, SWITCH-36, SWITCH-3, SWITCH-4, SWITCH-5, SWITCH-6, SWITCH-7, SWITCH-8, SWITCH-9, SYMBOLIC, SYMBOL, SYNCHRONISED, SYNCHRONIZED, SYNC, SYSERR, SYSIN, SYSIPT, SYSLIST, SYSLST, SYSOUT, SYSTEM, SYSTEM-DEFAULT, SYSTEM-OFFSET</source>
          <target state="translated">S、SAME、SAVE-AS-NO-PROMPT、SAVE-AS、SCREEN、SCROLL-BAR、SCROLL、SD、SEARCH-OPTIONS、SEARCH-TEXT、SEARCH、SECONDS-FROM-FORMATTED-TIME、SECONDS-PAST-MIDNIGHT、SECONDS、SECTION、SECURE、SECURITY、SEGMENT-LIMIT、SEGMENT、SELECT-ALL、SELECTION-INDEX、SELECTION-TEXT、SELECT、SELF-ACT、SELF、SEND、SENTENCE、SEPARATE、SEPARATE、SEPARATION、SEQUENCE、SEQUENTIAL、SET、SHADING、SHADOW、SHARING、SHORT-DATE。SHOW-LINE、SHOW-NONE、SHOW-SEL-ALWAYS、SIGNED-INT、SIGNED-LONG、SIGNED-SHORT、SIGNED、SIN、SIZE、SMALL-FONT、SORT-MERGE、SORT-ORDER、SORT-RETURN、SORT、SOURCE-COMPUTER、SOURCES、SOURCE、SPACE-FILL。SPACES、SPACE、SPECIAL-NAMES、SPINNER、SQRT、SQUARE、STANDARD-1、STANDARD-2、STANDARD-BINARY、STANDARD-COMPARE、STANDARD-DECIMAL、STANDARD-DEVIATION、STANDARD、START-X、START、START-Y、STATEMENT。STATIC-LIST、STATIC、STATIC、STATUS-BAR、STATUS-TEXT、STATUS、STDCALL、STDERR、STDIN、STDOUT、STEP、STOP、STORED-CHAR-LENGTH、STRING、STRONG、STYLE、SUB-QUEUE-1、SUB-QUEUE-2、SUB-QUEUE-3、SUBSTITUTE-CASE。SUBSTITUTE、SUBTRACT、SUBWINDOW、SUM、SUM、SUPER、SUPPRESS、SWITCH-0、SWITCH-10、SWITCH-11、SWITCH-12、SWITCH-13、SWITCH-14、SWITCH-15、SWITCH-16、SWITCH-17、SWITCH-18、SWITCH-19、SWITCH-1、SWITCH-20。SWITCH-21、SWITCH-22、SWITCH-23、SWITCH-24、SWITCH-25、SWITCH-26、SWITCH-27、SWITCH-28、SWITCH-29、SWITCH-2、SWITCH-30、SWITCH-31、SWITCH-32、SWITCH-33、SWITCH-34、SWITCH-35、SWITCH-36、SWITCH-3。SWITCH-4、SWITCH-5、SWITCH-6、SWITCH-7、SWITCH-8、SWITCH-9、SYMBOLIC、SYMBOL、SYNCHRONISED、SYNCHRONIZED、SYNC、SYSERR、SYSIN、SYSIPT、SYSLIST、SYSST、SYSOUT、SYSTEM、SYSTEM、SYSTEM-DEFAULT、SYSTEM-OFFSET</target>
        </trans-unit>
        <trans-unit id="e0e9028a32cf8efdb6c7f70c0a91cdae3cb6e291" translate="yes" xml:space="preserve">
          <source>S, SAME, SCREEN, SCROLL, SD, SEARCH, SECONDS, SECONDS-FROM-FORMATTED-TIME, SECONDS-PAST-MIDNIGHT, SECTION, SECURE, SECURITY, SEGMENT, SEGMENT-LIMIT, SELECT, SELF, SEND, SENTENCE, SEPARATE, SEQUENCE, SEQUENTIAL, SET, SHARING, SIGN, SIGNED, SIGNED-INT, SIGNED-LONG, SIGNED-SHORT, SIN, SIZE, SORT, SORT-MERGE, SORT-RETURN, SOURCE, SOURCE-COMPUTER, SOURCES, SPACE, SPACE-FILL, SPACES, SPECIAL-NAMES, SQRT, STANDARD, STANDARD-1, STANDARD-2, STANDARD-BINARY, STANDARD-COMPARE, STANDARD-DECIMAL, STANDARD-DEVIATION, START, STATEMENT, STATIC, STATUS, STDCALL, STDERR, STDIN, STDOUT, STEP, STOP, STORED-CHAR-LENGTH, STRING, STRONG, SUB-QUEUE-1, SUB-QUEUE-2, SUB-QUEUE-3, SUBSTITUTE, SUBSTITUTE-CASE, SUBTRACT, SUM, SUPER, SUPPRESS, SW0, SW1, SW10, SW11, SW12, SW13, SW14, SW15, SW2, SW3, SW4, SW5, SW6, SW7, SW8, SW9, SWITCH 0, SWITCH-0, SWITCH 1, SWITCH-1, SWITCH 10, SWITCH-10, SWITCH 11, SWITCH-11, SWITCH 12, SWITCH-12, SWITCH 13, SWITCH-13, SWITCH 14, SWITCH-14, SWITCH 15, SWITCH-15, SWITCH 16, SWITCH-16, SWITCH 17, SWITCH-17, SWITCH 18, SWITCH-18, SWITCH 19, SWITCH-19, SWITCH 2, SWITCH-2, SWITCH 20, SWITCH-20, SWITCH 21, SWITCH-21, SWITCH 22, SWITCH-22, SWITCH 23, SWITCH-23, SWITCH 24, SWITCH-24, SWITCH 25, SWITCH-25, SWITCH 26, SWITCH-26, SWITCH-27, SWITCH-28, SWITCH-29, SWITCH 3, SWITCH-3, SWITCH-30, SWITCH-31, SWITCH-32, SWITCH-33, SWITCH-34, SWITCH-35, SWITCH-36, SWITCH 4, SWITCH-4, SWITCH 5, SWITCH-5, SWITCH 6, SWITCH-6, SWITCH 7, SWITCH-7, SWITCH 8, SWITCH-8, SWITCH 9, SWITCH-9, SWITCH A, SWITCH B, SWITCH C, SWITCH D, SWITCH E, SWITCH F, SWITCH G, SWITCH H, SWITCH I, SWITCH J, SWITCH K, SWITCH L, SWITCH M, SWITCH N, SWITCH O, SWITCH P, SWITCH Q, SWITCH R, SWITCH S, SWITCH T, SWITCH U, SWITCH V, SWITCH W, SWITCH X, SWITCH Y, SWITCH Z, SYMBOL, SYMBOLIC, SYNC, SYNCHRONISED, SYNCHRONIZED, SYSERR, SYSIN, SYSIPT, SYSLIST, SYSLST, SYSOUT, SYSTEM, SYSTEM-DEFAULT, SYSTEM-OFFSET</source>
          <target state="translated">S、SAME、SCREEN、SCROLL、SD、SEARCH、SECONDS、SECONDS-FROM-FORMATTED-TIME、SECONDS-PAST-MIDNIGHT、SECTION、SECURE、SECURITY、SEGMENT、SEGMENT-LIMIT、SELECT、SELF、SEND、SENTENCE、SEPARATE、SEQUENCE、SEQUENTIAL、SET、SHARING、SIGN、SIGNED.SIGNED.SAME、SCREEN、SCROLL、SD、SEARCH、SECONDS、SECONDS-FROM-FORMATTED-TIME、SECONDS-PAST-MIDNIGHT、SECTION、SECURE、SECURITY、SEGMENT、SEGMENT-LIMIT、SELF、SEND、SENTENCE、SEPARATE、SEQUENCE、SEQUENTIAL、SET、SHARING、SIGN、SIGNED.SIGNED.SIGNED.SIGNED.SIGNED.SIGNED-INT、SIGNED-LONG、SIGNED-SHORT、SIN、SIZE、SORT、SORT-MERGE、SORT-RETURN、SOURCE、SOURCE-COMPUTER、SOURCES、SPACE、SPACE-FILL、SPACES、SPECIAL-NAMEES、SQRT、STANDARD、STANDARD-1、STANDARD-2、STANDARD-BINARY、STANDARD-COMPARE。STANDARD-DECIMAL、STANDARD-DEVIATION、START、STATEMENT、STATIC、STATUS、STDCALL、STDERR、STDIN、STDOUT、STEP、STOP、STORED-CHAR-LENGTH、STRING、STRONG、SUB-QUEUE-1、SUB-QUEUE-2、SUB-QUEUE-3、SUBSTITUTE、SUBSTITUTE-CASE、SUBTRACT、SUM、SUPER.SUB-QUE-1、SUB-QUEUE-2、SUB-QUEUE-3、SUBSTITUTE、SUBSTITUTE-CASE、SUBTRACT、SUM、SUPER.SUB-QUE-1、SUB-QUE-2、SUB-QUE-3、SUBSTITUTE、SUBSTITUTE-CASE、SUBTRACT、SUM、SUM、SUPER.SUPPRESS、SW0、SW1、SW10、SW11、SW12、SW13、SW14、SW15、SW2、SW3、SW4、SW5、SW6、SW7、SW8、SW9、SWITCH0、SWITCH0、SWITCH1、SWITCH1、SWITCH10、SWITCH11、SWITCH12、SWITCH12、SWITCH13、SWITCH13、SWITCH14。switch14、switch15、switch16、switch17、switch18、switch18、switch19、switch2、switch20、switch20、switch21、switch21、switch22、switch22、switch23、switch23、switch24。switch24、switch25、switch25、switch26、switch26、switch27、switch28、switch29、switch3、switch30、switch31、switch32、switch33、switch34、switch35、switch36、switch4、switch4、switch5、switch5、switch6。SWITCH-6、SWITCH-7、SWITCH-7、SWITCH-8、SWITCH-8、SWITCH-9、SWITCH-9、SWITCH-A、SWITCH-B、SWITCH-C、SWITCH-D、SWITCH-E、SWITCH-F、SWITCH-G、SWITCH-H、SWITCH-I、SWITCH-J、SWITCH-K、SWITCH-L、SWITCH-M、SWITCH-N、SWITCH-O、SWITCH-P。SWITCH Q、SWITCH R、SWITCH S、SWITCH T、SWITCH U、SWITCH V、SWITCH W、SWITCH X、SWITCH Y、SWITCH Z、SYMBOL、SYMBOLIC、SYNC、SYNCHRONISED、SYNCHRONIZED、SYSERR、SYSIN、SYSIPT、SYSLIST、SYSLST、SYSOUT、SYSTEM、SYSTEM-DEFAULT、SYSTEM-OFFSET</target>
        </trans-unit>
        <trans-unit id="363f373bfcd4d4ccbf275f3c0f160a1af75ccf07" translate="yes" xml:space="preserve">
          <source>SCREEN-SECTION-Data-Item Syntax</source>
          <target state="translated">SCREEN-SECTION-データ項目の構文</target>
        </trans-unit>
        <trans-unit id="a09a03255901a0557a4c216efea055996652af0e" translate="yes" xml:space="preserve">
          <source>SEARCH ALL Syntax</source>
          <target state="translated">すべての構文を検索</target>
        </trans-unit>
        <trans-unit id="fe39b36b8b7acffcfcbc17625fbf54678d5ee131" translate="yes" xml:space="preserve">
          <source>SEARCH Syntax</source>
          <target state="translated">検索構文</target>
        </trans-unit>
        <trans-unit id="c4a8f26d4a02b40195ab4a41bc77f226df838e64" translate="yes" xml:space="preserve">
          <source>SECONDS-FROM-FORMATTED-TIME Function Syntax</source>
          <target state="translated">SECONDS-FROM-FORMATTED-TIME 関数構文</target>
        </trans-unit>
        <trans-unit id="c9aab22ee485d02b4bbb39677a796867aeb41d0e" translate="yes" xml:space="preserve">
          <source>SECONDS-PAST-MIDNIGHT Function Syntax</source>
          <target state="translated">SECONDS-PAST-MIDNIGHT 関数構文</target>
        </trans-unit>
        <trans-unit id="c7c90a5cbf1a7f1839010593040298c9ab3b34b8" translate="yes" xml:space="preserve">
          <source>SECURE Attribute Syntax</source>
          <target state="translated">SECURE 属性構文</target>
        </trans-unit>
        <trans-unit id="e326685f4538da2210aeadc79af06dbf194c59d9" translate="yes" xml:space="preserve">
          <source>SELECT Statement Syntax</source>
          <target state="translated">SELECT ステートメント構文</target>
        </trans-unit>
        <trans-unit id="7d32fc8e8ff19d8791ede4bf59ac75915e6b38cd" translate="yes" xml:space="preserve">
          <source>SET ADDRESS Syntax</source>
          <target state="translated">SET ADDRESS 構文</target>
        </trans-unit>
        <trans-unit id="93d4d9a313dba20aac9d8d7ddd4d383a4a9d3598" translate="yes" xml:space="preserve">
          <source>SET ATTRIBUTE Syntax</source>
          <target state="translated">SET ATTRIBUTE 構文</target>
        </trans-unit>
        <trans-unit id="5a2d0741307e9153e4830db935a4421d66c8e424" translate="yes" xml:space="preserve">
          <source>SET Condition Name Syntax</source>
          <target state="translated">SET 条件名 構文</target>
        </trans-unit>
        <trans-unit id="07e13fb57e6cdb5df1f70992f5cb3ebc302f9040" translate="yes" xml:space="preserve">
          <source>SET ENVIRONMENT Syntax</source>
          <target state="translated">SET ENVIRONMENT 構文</target>
        </trans-unit>
        <trans-unit id="14fd5faabb7ac0b2fde2d5cc29abd3105f8d0c3b" translate="yes" xml:space="preserve">
          <source>SET Index Syntax</source>
          <target state="translated">SET インデックス構文</target>
        </trans-unit>
        <trans-unit id="cc56c1e0ac9b84b165916822141c813590e6c08f" translate="yes" xml:space="preserve">
          <source>SET Program-Pointer Syntax</source>
          <target state="translated">SET プログラム・ポインタ構文</target>
        </trans-unit>
        <trans-unit id="43a664d01bd559812f3d03a6aabd6f96c15cdf91" translate="yes" xml:space="preserve">
          <source>SET Switch Syntax</source>
          <target state="translated">SET スイッチ構文</target>
        </trans-unit>
        <trans-unit id="5d73a61b9e17a56f006be99946149090b878499f" translate="yes" xml:space="preserve">
          <source>SET UP/DOWN Syntax</source>
          <target state="translated">SET UP/DOWN 構文</target>
        </trans-unit>
        <trans-unit id="5bd9270b5f3cde6595a4438ab2187803ce42d925" translate="yes" xml:space="preserve">
          <source>SIGN Function Syntax</source>
          <target state="translated">SIGN 関数構文</target>
        </trans-unit>
        <trans-unit id="8a83dac46af2e8cb72a955b050e5cc8eaefd4e2a" translate="yes" xml:space="preserve">
          <source>SIGN-IS Clause Syntax</source>
          <target state="translated">SIGN-IS 節構文</target>
        </trans-unit>
        <trans-unit id="5015ee6d44e7a4080b421d17c2335eceeae1e10f" translate="yes" xml:space="preserve">
          <source>SIN Function Syntax</source>
          <target state="translated">SIN 関数構文</target>
        </trans-unit>
        <trans-unit id="0af17e6b0426030851200e5ff8767dfd96a2cb12" translate="yes" xml:space="preserve">
          <source>SOURCE Clause Syntax</source>
          <target state="translated">SOURCE 節構文</target>
        </trans-unit>
        <trans-unit id="12d74693606d01495ff55af3e47c91d7ec6bef52" translate="yes" xml:space="preserve">
          <source>SOURCE-COMPUTER Syntax</source>
          <target state="translated">SOURCE-COMPUTER 構文</target>
        </trans-unit>
        <trans-unit id="b57836c206edabe132d738320da3ab285c5dfe13" translate="yes" xml:space="preserve">
          <source>SPECIAL-NAMES ALPHABET Literal-Clause Syntax</source>
          <target state="translated">特命名アルファーベット リテラル句構文</target>
        </trans-unit>
        <trans-unit id="fa23f2f84269c3dd438fcab08787b633b64d7642" translate="yes" xml:space="preserve">
          <source>SPECIAL-NAMES Alphabet-Clause Syntax</source>
          <target state="translated">特殊名称 アルファベット句構文</target>
        </trans-unit>
        <trans-unit id="602bd9218579d2b3939ad13100ea8a12a4534df3" translate="yes" xml:space="preserve">
          <source>SPECIAL-NAMES Class-Definition-Clause Syntax</source>
          <target state="translated">SPECIAL-NAMES クラス定義節構文</target>
        </trans-unit>
        <trans-unit id="e97458739dc8559d7da877dee902df118a77f419" translate="yes" xml:space="preserve">
          <source>SPECIAL-NAMES Switch-Definition-Clause Syntax</source>
          <target state="translated">SPECIAL-NAMES スイッチ-定義-句構文</target>
        </trans-unit>
        <trans-unit id="bc81091dcec56a8dd5e4bff7530560b6a90ab3fe" translate="yes" xml:space="preserve">
          <source>SPECIAL-NAMES Syntax</source>
          <target state="translated">SPECIAL-NAMES Syntax</target>
        </trans-unit>
        <trans-unit id="8cd12df6e50de8878ab5fac21624129b15878369" translate="yes" xml:space="preserve">
          <source>SPECIAL-NAMES-Symbolic-Characters-Clause Syntax</source>
          <target state="translated">SPECIAL-NAMES-Symbolic-Characters-Clause 構文</target>
        </trans-unit>
        <trans-unit id="209b015447e2b6acc94d8ac0319e13f9c5a4130f" translate="yes" xml:space="preserve">
          <source>SQRT Function Syntax</source>
          <target state="translated">SQRT 関数構文</target>
        </trans-unit>
        <trans-unit id="c46cbdf7f8b8b3499bc817d81bd658aa302e075b" translate="yes" xml:space="preserve">
          <source>STANDARD-COMPARE Function Syntax</source>
          <target state="translated">STANDARD-COMPARE 関数構文</target>
        </trans-unit>
        <trans-unit id="dac339bd3f97676e1542e0534ed5895fed5588dd" translate="yes" xml:space="preserve">
          <source>STANDARD-DEVIATION Function Syntax</source>
          <target state="translated">STANDARD-DEVIATION 関数構文</target>
        </trans-unit>
        <trans-unit id="324703735b466c4ab95c0f7c2fb52f9b248bfcf7" translate="yes" xml:space="preserve">
          <source>START Syntax</source>
          <target state="translated">START 構文</target>
        </trans-unit>
        <trans-unit id="154247a34e87fedbcd87e0036c7ef9c150466631" translate="yes" xml:space="preserve">
          <source>STATIC the program name is called as a included element and not dynamically which is the normal default.</source>
          <target state="translated">STATIC プログラム名はインクルード要素として呼び出され、通常のデフォルトである動的には呼び出されません。</target>
        </trans-unit>
        <trans-unit id="4d8b1214e6877778710445249f6455d61e23558b" translate="yes" xml:space="preserve">
          <source>STDCALL. &amp;lt; more info needed &amp;gt;</source>
          <target state="translated">STDCALL。&amp;lt;詳細情報が必要&amp;gt;</target>
        </trans-unit>
        <trans-unit id="043f458614daa43f0a3ab72aa35d366b88a5502c" translate="yes" xml:space="preserve">
          <source>STOP Syntax</source>
          <target state="translated">STOP 構文</target>
        </trans-unit>
        <trans-unit id="b73adc9f6477b49121c2d68f1d5964e7524cfd34" translate="yes" xml:space="preserve">
          <source>STORED-CHAR-LENGTH Function Syntax</source>
          <target state="translated">STORED-CHAR-LENGTH 関数構文</target>
        </trans-unit>
        <trans-unit id="b37eaf43b32bdd6e65b4016cc10646aea2f72ef2" translate="yes" xml:space="preserve">
          <source>STRING Syntax</source>
          <target state="translated">STRING構文</target>
        </trans-unit>
        <trans-unit id="ff55ce740d5c2c585b9bbceb393487ac9e4807b2" translate="yes" xml:space="preserve">
          <source>STRING overflow condition</source>
          <target state="translated">ストリングオーバーフロー条件</target>
        </trans-unit>
        <trans-unit id="2587e8ac8e0d653df815007d01377f32dc9f7e55" translate="yes" xml:space="preserve">
          <source>SUBSTITUTE Function Syntax</source>
          <target state="translated">SUBSTITUTE 関数構文</target>
        </trans-unit>
        <trans-unit id="b32d41f6b43771bab0f678b538fa382f91459d5a" translate="yes" xml:space="preserve">
          <source>SUBSTITUTE-CASE Function Syntax</source>
          <target state="translated">SUBSTITUTE-Case 関数構文</target>
        </trans-unit>
        <trans-unit id="f2dc00ca1e6859602e36de8cc97a942f3af747aa" translate="yes" xml:space="preserve">
          <source>SUBTRACT CORRESPONDING Syntax</source>
          <target state="translated">SUBTRACT CORRESPONDING 構文</target>
        </trans-unit>
        <trans-unit id="c7e6dfbce21db0afec1fefa289a119b9142fd152" translate="yes" xml:space="preserve">
          <source>SUBTRACT FROM Syntax</source>
          <target state="translated">構文からの SUBTRACT</target>
        </trans-unit>
        <trans-unit id="2b64cdce88721394e621b40d4588fd111017952c" translate="yes" xml:space="preserve">
          <source>SUBTRACT GIVING Syntax</source>
          <target state="translated">SUBTRACT GIVING 構文</target>
        </trans-unit>
        <trans-unit id="d110e717f81cc113ec939395eba1cd94bd8dddda" translate="yes" xml:space="preserve">
          <source>SUM Function Syntax</source>
          <target state="translated">SUM 関数構文</target>
        </trans-unit>
        <trans-unit id="f665dc4d3c0ab4d0010b2ef1482cc5557d7677bb" translate="yes" xml:space="preserve">
          <source>SUM-OF Clause Syntax</source>
          <target state="translated">SUM-OF節構文</target>
        </trans-unit>
        <trans-unit id="2faa7be059c987f7fbbdb165d29cb72d83c29f61" translate="yes" xml:space="preserve">
          <source>SUPPRESS Syntax</source>
          <target state="translated">SUPPRESS構文</target>
        </trans-unit>
        <trans-unit id="23f93c80ea5570a868c2cf2d9c0763d3ee2d040e" translate="yes" xml:space="preserve">
          <source>SYNCRONIZED Syntax</source>
          <target state="translated">SYNCRONIZED 構文</target>
        </trans-unit>
        <trans-unit id="12e6d18bb77ec762badd07ecc62e3f71ce9ac1ba" translate="yes" xml:space="preserve">
          <source>SYSLIB</source>
          <target state="translated">SYSLIB</target>
        </trans-unit>
        <trans-unit id="386ea13c23fc6b30b837120168afda6138fdba11" translate="yes" xml:space="preserve">
          <source>SYSTEM Built-In Subroutine Syntax</source>
          <target state="translated">システム組み込みサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="aa7bdbb7a883e6fcdf3c6acd236c188aea8c5433" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;BINARY-DOUBLE SIGNED&lt;/code&gt;</source>
          <target state="translated">Same as &lt;code&gt;BINARY-DOUBLE SIGNED&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="24f220423674a5332c7164883c812c6b65335261" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;BINARY-DOUBLE UNSIGNED&lt;/code&gt;</source>
          <target state="translated">Same as &lt;code&gt;BINARY-DOUBLE UNSIGNED&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="da2f4d9bf9b464c09d4bb658345dbf8d9a006212" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;BINARY-LONG SIGNED&lt;/code&gt;</source>
          <target state="translated">Same as &lt;code&gt;BINARY-LONG SIGNED&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1f31f78a9e782858cae830a954fc2875e0573f1b" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;BINARY-LONG UNSIGNED&lt;/code&gt;</source>
          <target state="translated">Same as &lt;code&gt;BINARY-LONG UNSIGNED&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0359ac09e4ca19ccee103e4ea4d51b7e5eb4d024" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;BINARY-SHORT SIGNED&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BINARY-SHORT SIGNED&lt;/code&gt; 同じ</target>
        </trans-unit>
        <trans-unit id="1db2e8e2a096e94f5301e97d6304b34c32fdb981" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;BINARY-SHORT UNSIGNED&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BINARY-SHORT UNSIGNED&lt;/code&gt; 同じ</target>
        </trans-unit>
        <trans-unit id="f627a96ecba475a6c2ceeea5bf429da7429db7ad" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;BINARY&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BINARY&lt;/code&gt; と同じ</target>
        </trans-unit>
        <trans-unit id="3a193b16880f00e9b4c7255f799bc67a0e2d41a3" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;FLOAT-LONG&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;FLOAT-LONG&lt;/code&gt; と同じ</target>
        </trans-unit>
        <trans-unit id="71df2f4a489b2292d83d9e7354b8412715342818" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;FLOAT-SHORT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;FLOAT-SHORT&lt;/code&gt; と同じ</target>
        </trans-unit>
        <trans-unit id="13cd1d2814ccd2849bf26be6ddd14394caa63970" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;PACKED-DECIMAL&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;PACKED-DECIMAL&lt;/code&gt; と同じ</target>
        </trans-unit>
        <trans-unit id="c8ce7bd90aa526952ecd7155788a5fcd999dbe59" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;PROGRAM-POINTER&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;PROGRAM-POINTER&lt;/code&gt; と同じ</target>
        </trans-unit>
        <trans-unit id="5106a38fa95381ab7467e5d99851adc23ee8ca87" translate="yes" xml:space="preserve">
          <source>Same as&lt;code&gt;BINARY-DOUBLE SIGNED&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BINARY-DOUBLE SIGNED&lt;/code&gt; と同じ</target>
        </trans-unit>
        <trans-unit id="ef15899c334707599da1bec824ea706414edbf1c" translate="yes" xml:space="preserve">
          <source>Same as&lt;code&gt;BINARY-DOUBLE UNSIGNED&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BINARY-DOUBLE UNSIGNED&lt;/code&gt; と同じ</target>
        </trans-unit>
        <trans-unit id="99b0dcb23774b5d593e582959996eb9b385b6198" translate="yes" xml:space="preserve">
          <source>Same as&lt;code&gt;BINARY-LONG SIGNED&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BINARY-LONG SIGNED&lt;/code&gt; と同じ</target>
        </trans-unit>
        <trans-unit id="e5dc348776c8fdd2d0b3c1ef214828b69dda40cd" translate="yes" xml:space="preserve">
          <source>Same as&lt;code&gt;BINARY-LONG UNSIGNED&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BINARY-LONG UNSIGNED&lt;/code&gt; と同じ</target>
        </trans-unit>
        <trans-unit id="555c6e1ae2e0b06dc311892979bc8b84fd9e27c3" translate="yes" xml:space="preserve">
          <source>Same as&lt;code&gt;BINARY-SHORT SIGNED&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BINARY-SHORT SIGNED&lt;/code&gt; と同じ</target>
        </trans-unit>
        <trans-unit id="0f034bddabbf417bf47e6a9e1c793ff1212ed946" translate="yes" xml:space="preserve">
          <source>Same as&lt;code&gt;BINARY-SHORT UNSIGNED&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BINARY-SHORT UNSIGNED&lt;/code&gt; と同じ</target>
        </trans-unit>
        <trans-unit id="bd30040d8d743dbc60082e2570938677e309c3fd" translate="yes" xml:space="preserve">
          <source>Same as&lt;code&gt;BINARY&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BINARY&lt;/code&gt; と同じ</target>
        </trans-unit>
        <trans-unit id="afedf7e3c06d1546cd6ac3d2c0204feaa662feff" translate="yes" xml:space="preserve">
          <source>Same as&lt;code&gt;FLOAT-LONG&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;FLOAT-LONG&lt;/code&gt; と同じ</target>
        </trans-unit>
        <trans-unit id="2c6bec079b1c594d6d87e98f77e3e81304dc4baa" translate="yes" xml:space="preserve">
          <source>Same as&lt;code&gt;FLOAT-SHORT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;FLOAT-SHORT&lt;/code&gt; と同じ</target>
        </trans-unit>
        <trans-unit id="eb2bfc2f19760e379604c6320e46f148858e0419" translate="yes" xml:space="preserve">
          <source>Same as&lt;code&gt;PACKED-DECIMAL&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;PACKED-DECIMAL&lt;/code&gt; と同じ</target>
        </trans-unit>
        <trans-unit id="c11fcd905fd88a8614e24b2c200c07274a2134a9" translate="yes" xml:space="preserve">
          <source>Same as&lt;code&gt;PROGRAM-POINTER&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;PROGRAM-POINTER&lt;/code&gt; と同じ</target>
        </trans-unit>
        <trans-unit id="7a6da08e551938fa2b87009535cb436c43d0471f" translate="yes" xml:space="preserve">
          <source>Sample Programs</source>
          <target state="translated">サンプルプログラム</target>
        </trans-unit>
        <trans-unit id="0e89b3033248a068fcc7db3e7b076e9cf271dd61" translate="yes" xml:space="preserve">
          <source>Screens are defined in the screen section of the data division. Once defined, screens are used at run-time via the &lt;code&gt;ACCEPT&lt;/code&gt; and &lt;code&gt;DISPLAY&lt;/code&gt; statements.</source>
          <target state="translated">画面は、データ分割の画面セクションで定義されます。定義されると、画面は実行時に &lt;code&gt;ACCEPT&lt;/code&gt; および &lt;code&gt;DISPLAY&lt;/code&gt; ステートメントを介して使用されます。</target>
        </trans-unit>
        <trans-unit id="f6c05d4340d834aacc1d450cda307aadf3195eab" translate="yes" xml:space="preserve">
          <source>Screens are defined in the screen section of the data division. Once defined, screens are used at run-time via the&lt;code&gt;ACCEPT&lt;/code&gt;and&lt;code&gt;DISPLAY&lt;/code&gt;statements.</source>
          <target state="translated">画面は、データ部の画面セクションで定義されます。定義されると、画面は &lt;code&gt;ACCEPT&lt;/code&gt; および &lt;code&gt;DISPLAY&lt;/code&gt; ステートメントを介して実行時に使用されます。</target>
        </trans-unit>
        <trans-unit id="79ba7d1f8387f740be70a48afccd300b20cc8bb6" translate="yes" xml:space="preserve">
          <source>Search Index</source>
          <target state="translated">検索インデックス</target>
        </trans-unit>
        <trans-unit id="7e44e05457b67b59985531f48d09fceb1a8a6112" translate="yes" xml:space="preserve">
          <source>Search strings on &lt;code&gt;REPLACE&lt;/code&gt; are always specified using the &lt;code&gt;==&lt;var&gt;pseudo-text-1&lt;/var&gt;==&lt;/code&gt; option. For example, to replace all occurrences of &lt;code&gt;UPON PRINTER&lt;/code&gt;, you would specify &lt;code&gt;==UPON PRINTER==&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;REPLACE&lt;/code&gt; の検索文字列は、常に &lt;code&gt;==&lt;var&gt;pseudo-text-1&lt;/var&gt;==&lt;/code&gt; オプションを使用して指定されます。たとえば、 &lt;code&gt;UPON PRINTER&lt;/code&gt; のすべてのオカレンスを置き換えるには、 &lt;code&gt;==UPON PRINTER==&lt;/code&gt; 指定します。</target>
        </trans-unit>
        <trans-unit id="40601b4434e43631bc325b4da992f8cb48c0b8d8" translate="yes" xml:space="preserve">
          <source>Search strings on&lt;code&gt;REPLACE&lt;/code&gt;are always specified using the&lt;code&gt;==&amp;lt;&lt;i&gt;pseudo-text-1&lt;/i&gt;&amp;gt;==&lt;/code&gt;option. For example, to replace all occurrences of&lt;code&gt;UPON PRINTER&lt;/code&gt; you would specify&lt;code&gt;==UPON PRINTER==&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;REPLACE&lt;/code&gt; の検索文字列は常に &lt;code&gt;==&amp;lt;&lt;i&gt;pseudo-text-1&lt;/i&gt;&amp;gt;==&lt;/code&gt; オプションを使用して指定されます。たとえば、 &lt;code&gt;UPON PRINTER&lt;/code&gt; のすべての出現を置き換えるには、 &lt;code&gt;==UPON PRINTER==&lt;/code&gt; 指定します。</target>
        </trans-unit>
        <trans-unit id="bff9d0095b351752582d903743ceaaa221d4b1a8" translate="yes" xml:space="preserve">
          <source>Secure Input</source>
          <target state="translated">セキュア入力</target>
        </trans-unit>
        <trans-unit id="f9c8195e938be36b1e04d3391bce11db62fd2094" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#ACCEPT-screen_002ddata_002ditem&quot;&gt;ACCEPT screen-data-item&lt;/a&gt;, for additional information on the other &lt;code&gt;WITH&lt;/code&gt; clause options.</source>
          <target state="translated">他の &lt;code&gt;WITH&lt;/code&gt; 句オプションの詳細については、&lt;a href=&quot;#ACCEPT-screen_002ddata_002ditem&quot;&gt;ACCEPTscreen-data-itemを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c6a37acd3f90ce06fc1f2074663a39689f43fb23" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#ACCEPT-screen_002ddata_002ditem&quot;&gt;ACCEPT screen-data-item&lt;/a&gt;, for additional information on the other&lt;code&gt;WITH&lt;/code&gt;clause options.</source>
          <target state="translated">他の &lt;code&gt;WITH&lt;/code&gt; 句オプションの詳細については、&lt;a href=&quot;#ACCEPT-screen_002ddata_002ditem&quot;&gt;ACCEPT screen-data-itemを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="eb2ade3e4ab5020431033f4e83efe1738a632bf8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Appendix-B-_002d-Reserved-Word-List&quot;&gt;Appendix B - Reserved Word List&lt;/a&gt;, for a complete list of GnuCOBOL reserved words .</source>
          <target state="translated">GnuCOBOLの予約語の完全なリストについては、&lt;a href=&quot;#Appendix-B-_002d-Reserved-Word-List&quot;&gt;付録B-予約語リストを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1ccc9b201c947e1e014cf775eff33dbb02a79b3d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Appendix-B-_002d-Reserved-Word-List&quot;&gt;Appendix B - Reserved Word List&lt;/a&gt;, for a complete list of GnuCOBOL reserved words for the current release.</source>
          <target state="translated">現在のリリースのGnuCOBOL予約語の完全なリストについては、&lt;a href=&quot;#Appendix-B-_002d-Reserved-Word-List&quot;&gt;付録B-予約語リストを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="61ea85685c5ddd17d8579147c4356dac31b42b17" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Arithmetic-Expressions&quot;&gt;Arithmetic Expressions&lt;/a&gt;, for more information on arithmetic expressions.</source>
          <target state="translated">&lt;a href=&quot;#Arithmetic-Expressions&quot;&gt;算術式の&lt;/a&gt;詳細については、算術式を参照してください。</target>
        </trans-unit>
        <trans-unit id="e8866370949273481f1934447dd6937e1e8a3d98" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#CORRESPONDING&quot;&gt;CORRESPONDING&lt;/a&gt;, for a discussion of how corresponding matches between two group items are established.</source>
          <target state="translated">2つのグループアイテム間で対応する一致がどのように確立されるかについては、&lt;a href=&quot;#CORRESPONDING&quot;&gt;CORRESPONDINGを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8c4a948663718e8e3965f21bc5143e1baa895ca4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#CORRESPONDING&quot;&gt;CORRESPONDING&lt;/a&gt;, for information on how corresponding matches will be found between &amp;lt;</source>
          <target state="translated">&amp;lt;の間で対応する一致がどのように見つかるかについては、&lt;a href=&quot;#CORRESPONDING&quot;&gt;CORRESPONDINGを&lt;/a&gt;参照してください</target>
        </trans-unit>
        <trans-unit id="6c3a5f7a0123d24b994fcc78557244cf88d15769" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#CORRESPONDING&quot;&gt;CORRESPONDING&lt;/a&gt;, for information on how corresponding matches will be found between &lt;var&gt;identifier-1&lt;/var&gt; and &lt;var&gt;identifier-2&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;identifier-1&lt;/var&gt; と &lt;var&gt;identifier-2&lt;/var&gt; 間で対応する一致がどのように見つかるかについては、&lt;a href=&quot;#CORRESPONDING&quot;&gt;CORRESPONDINGを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8a012a8c47df41cb8d01f62880e8787f65affbc5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Color-Palette-and-Video-Attributes&quot;&gt;Color Palette and Video Attributes&lt;/a&gt;, for more information on screen colors and video attributes.</source>
          <target state="translated">画面の色とビデオ属性の詳細については、&lt;a href=&quot;#Color-Palette-and-Video-Attributes&quot;&gt;カラーパレットとビデオ属性を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="6e1480fd1d08ee87eedcf11c4ba7778d9dcdd724" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Condition-Names&quot;&gt;Condition Names&lt;/a&gt;, for a discussion of how condition names are used.</source>
          <target state="translated">条件名の使用方法については、&lt;a href=&quot;#Condition-Names&quot;&gt;条件名を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4e9f4738b5b7a58141efe1f0c74e6f5b4fccc9ae" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Condition-Names&quot;&gt;Condition Names&lt;/a&gt;, for more information.</source>
          <target state="translated">詳細については、「&lt;a href=&quot;#Condition-Names&quot;&gt;条件名&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="3fa30d3946970284544ff15439bda6f9c59db64b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Data-Description-Clauses&quot;&gt;Data Description Clauses&lt;/a&gt;, for information on the &lt;code&gt;EXTERNAL&lt;/code&gt; and &lt;code&gt;GLOBAL&lt;/code&gt; options.</source>
          <target state="translated">参照&lt;a href=&quot;#Data-Description-Clauses&quot;&gt;データ記述句を&lt;/a&gt;の詳細については、 &lt;code&gt;EXTERNAL&lt;/code&gt; と &lt;code&gt;GLOBAL&lt;/code&gt; オプション。</target>
        </trans-unit>
        <trans-unit id="ffe237ef6114ed30bab01f7d6d321b66227fff97" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Data-Description-Clauses&quot;&gt;Data Description Clauses&lt;/a&gt;, for information on the usage of the various data description clauses.</source>
          <target state="translated">参照&lt;a href=&quot;#Data-Description-Clauses&quot;&gt;データ記述句を&lt;/a&gt;さまざまなデータ記述句の使用方法の詳細については、。</target>
        </trans-unit>
        <trans-unit id="e22c51f2e35f61813b65110710ced3e5ff98a7d3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Data-Description-Clauses&quot;&gt;Data Description Clauses&lt;/a&gt;, for information on the&lt;code&gt;EXTERNAL&lt;/code&gt;and&lt;code&gt;GLOBAL&lt;/code&gt;options.</source>
          <target state="translated">参照&lt;a href=&quot;#Data-Description-Clauses&quot;&gt;データ記述句を&lt;/a&gt;の詳細については、 &lt;code&gt;EXTERNAL&lt;/code&gt; と &lt;code&gt;GLOBAL&lt;/code&gt; オプション。</target>
        </trans-unit>
        <trans-unit id="ec3c7cd1032e7441ffb83dbf23e1e704c0704b51" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Error-Exception-Codes&quot;&gt;Error Exception Codes&lt;/a&gt;, for a complete list of the exception codes and their meanings.</source>
          <target state="translated">例外コードとその意味の完全なリストについては、&lt;a href=&quot;#Error-Exception-Codes&quot;&gt;エラー例外コードを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1ad6ddb0f5497d5a05d071a86ce6326e7163bbbc" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#GLOBAL&quot;&gt;GLOBAL&lt;/a&gt;, for information on the &lt;code&gt;GLOBAL&lt;/code&gt; option.</source>
          <target state="translated">参照&lt;a href=&quot;#GLOBAL&quot;&gt;GLOBALの&lt;/a&gt;の詳細については、 &lt;code&gt;GLOBAL&lt;/code&gt; オプション。</target>
        </trans-unit>
        <trans-unit id="0314bef84f31293f922a9a59460c263f0d332ee8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#GLOBAL&quot;&gt;GLOBAL&lt;/a&gt;, for information on the&lt;code&gt;GLOBAL&lt;/code&gt;option.</source>
          <target state="translated">参照&lt;a href=&quot;#GLOBAL&quot;&gt;GLOBALの&lt;/a&gt;の詳細については、 &lt;code&gt;GLOBAL&lt;/code&gt; オプション。</target>
        </trans-unit>
        <trans-unit id="f50f456669b7cf3e0ba57085c4d5b594dc2c00af" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#LOCALE-Names&quot;&gt;LOCALE Names&lt;/a&gt;, for a list of typically-available locale names.</source>
          <target state="translated">参照&lt;a href=&quot;#LOCALE-Names&quot;&gt;LOCALEの名前を&lt;/a&gt;一般的に利用可能なロケール名のリストについては、。</target>
        </trans-unit>
        <trans-unit id="43cfed89ec2c088c8977784439f946e77d59b0dc" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Locating-Copybooks&quot;&gt;Locating Copybooks&lt;/a&gt;, for the specific rules on how copybooks are located by the compiler.</source>
          <target state="translated">コンパイラーによる&lt;a href=&quot;#Locating-Copybooks&quot;&gt;コピーブックの検索&lt;/a&gt;方法に関する特定の規則については、「コピーブックの検索」を参照してください。</target>
        </trans-unit>
        <trans-unit id="e4b67d5bc7c5941961d0f9dac13632cd266def73" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Marking-Changes-in-Programs&quot;&gt;Marking Changes in Programs&lt;/a&gt;, for discussion of a valuable use to which the program name area may be put today.</source>
          <target state="translated">プログラム名領域を今日使用できる価値のある使用法については、「&lt;a href=&quot;#Marking-Changes-in-Programs&quot;&gt;プログラムの変更&lt;/a&gt;をマークする」を参照してください。</target>
        </trans-unit>
        <trans-unit id="35290b00862a216af9784d021af6d0aea693e158" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Marking-Changes-in-Programs&quot;&gt;Marking Changes in Programs&lt;/a&gt;, for discussion of a valuable use to which the sequence number area may be put today.</source>
          <target state="translated">シーケンス番号領域を今日使用できる貴重な用途については、「&lt;a href=&quot;#Marking-Changes-in-Programs&quot;&gt;プログラムの変更&lt;/a&gt;をマークする」を参照してください。</target>
        </trans-unit>
        <trans-unit id="9a0fb183f0445e0492e5e5f3c0c2ccb051bc33e1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#RWCS-Lexicon&quot;&gt;RWCS Lexicon&lt;/a&gt;, for a description of the seven different types of report groups.</source>
          <target state="translated">7種類のレポートグループの説明については、&lt;a href=&quot;#RWCS-Lexicon&quot;&gt;RWCSレキシコンを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="92b243f9c7300442e9e15584d6d67d1fd0d6687d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Record-Locking&quot;&gt;Record Locking&lt;/a&gt;, for additional information on record locking.</source>
          <target state="translated">&lt;a href=&quot;#Record-Locking&quot;&gt;レコードロックの&lt;/a&gt;詳細については、「レコードロック」を参照してください。</target>
        </trans-unit>
        <trans-unit id="d6c61dbdf796fbc7816c83984e2f7f701aab05cb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Record-Locking&quot;&gt;Record Locking&lt;/a&gt;, to review the various record locking behaviours.</source>
          <target state="translated">さまざまなレコードロック動作を確認するには、「&lt;a href=&quot;#Record-Locking&quot;&gt;レコードロック&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="46dacf046ac16c5ec82c7d16a35e13747f33184d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Sub_002dProgramming&quot;&gt;Sub-Programming&lt;/a&gt;, for a complete discussion of sub-programming.</source>
          <target state="translated">&lt;a href=&quot;#Sub_002dProgramming&quot;&gt;サブプログラミングの&lt;/a&gt;詳細については、サブプログラミングを参照してください。</target>
        </trans-unit>
        <trans-unit id="4744e3c317efad88cd3f30d57284098ab648ae69" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#g_t01_002dLevel-Constants&quot;&gt;01-Level Constants&lt;/a&gt;, for additional information.</source>
          <target state="translated">追加情報については、&lt;a href=&quot;#g_t01_002dLevel-Constants&quot;&gt;01レベルの定数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="600fbdfa8e8cca09bf6de6c33182c4d09772a19d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#g_t66_002dLevel-Data-Items&quot;&gt;66-Level Data Items&lt;/a&gt;, for additional information on the &lt;code&gt;RENAMES&lt;/code&gt; clause.</source>
          <target state="translated">参照してください&lt;a href=&quot;#g_t66_002dLevel-Data-Items&quot;&gt;66レベルのデータ項目&lt;/a&gt;の追加情報については、 &lt;code&gt;RENAMES&lt;/code&gt; の句を。</target>
        </trans-unit>
        <trans-unit id="e29463cf63812e1b76d8c63e9fb349f445d0401c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#g_t66_002dLevel-Data-Items&quot;&gt;66-Level Data Items&lt;/a&gt;, for additional information on the RENAMES clause.</source>
          <target state="translated">RENAMES句の詳細については、&lt;a href=&quot;#g_t66_002dLevel-Data-Items&quot;&gt;66レベルのデータ項目を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="0fd371b3be8e39e77f7a6ba721f03ce4c01500dd" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#g_t88_002dLevel-Data-Items&quot;&gt;88-Level Data Items&lt;/a&gt;, for a discussion of how this format of &lt;code&gt;VALUE&lt;/code&gt; is used to create condition names.</source>
          <target state="translated">この形式の &lt;code&gt;VALUE&lt;/code&gt; を使用して条件名を作成する方法については、&lt;a href=&quot;#g_t88_002dLevel-Data-Items&quot;&gt;88レベルのデータ項目を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="2fd431c22a0e7c6eecc05c2248dc4896286df057" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#g_t88_002dLevel-Data-Items&quot;&gt;88-Level Data Items&lt;/a&gt;, for a discussion of how this format of&lt;code&gt;VALUE&lt;/code&gt;is used to create condition names.</source>
          <target state="translated">このフォーマットの &lt;code&gt;VALUE&lt;/code&gt; を使用して条件名を作成する方法については、&lt;a href=&quot;#g_t88_002dLevel-Data-Items&quot;&gt;88レベルのデータ項目を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="294e8e066a44f1dcccc715bdb14fa18d882d4136" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#g_t88_002dLevel-Data-Items&quot;&gt;88-Level Data Items&lt;/a&gt;, or See &lt;a href=&quot;#Condition-Names&quot;&gt;Condition Names&lt;/a&gt;, for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#g_t88_002dLevel-Data-Items&quot;&gt;88レベルのデータ項目&lt;/a&gt;または&lt;a href=&quot;#Condition-Names&quot;&gt;条件名を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="178a59fd5932b18f2ddd26c707a26a5d24743a32" translate="yes" xml:space="preserve">
          <source>See entry-point.</source>
          <target state="translated">エントリーポイントを参照してください。</target>
        </trans-unit>
        <trans-unit id="e083de973c136f91bac4d56cb40dbb24375cbb3a" translate="yes" xml:space="preserve">
          <source>See the documentation of the &lt;code&gt;SEARCH&lt;/code&gt; (see &lt;a href=&quot;#SEARCH&quot;&gt;SEARCH&lt;/a&gt;), &lt;code&gt;SEARCH ALL&lt;/code&gt; (see &lt;a href=&quot;#SEARCH-ALL&quot;&gt;SEARCH ALL&lt;/a&gt;) and &lt;code&gt;SORT&lt;/code&gt; (see &lt;a href=&quot;#SORT&quot;&gt;SORT&lt;/a&gt;) statements for explanations of the  &lt;code&gt;KEY&lt;/code&gt; and  &lt;code&gt;INDEXED BY&lt;/code&gt; clauses.</source>
          <target state="translated">ドキュメントを参照してください &lt;code&gt;SEARCH&lt;/code&gt; （参照&lt;a href=&quot;#SEARCH&quot;&gt;の検索&lt;/a&gt;）、 &lt;code&gt;SEARCH ALL&lt;/code&gt; を（参照&lt;a href=&quot;#SEARCH-ALL&quot;&gt;SEARCH ALLを&lt;/a&gt;）および &lt;code&gt;SORT&lt;/code&gt; （参照&lt;a href=&quot;#SORT&quot;&gt;SORT&lt;/a&gt;の説明のための書類） &lt;code&gt;KEY&lt;/code&gt; と &lt;code&gt;INDEXED BY&lt;/code&gt; の句を。</target>
        </trans-unit>
        <trans-unit id="16737e1bcd19306dcb16f4adbd4bc1ee0ad6b7f5" translate="yes" xml:space="preserve">
          <source>See the documentation of the&lt;code&gt;SEARCH&lt;/code&gt;(see &lt;a href=&quot;#SEARCH&quot;&gt;SEARCH&lt;/a&gt;),&lt;code&gt;SEARCH ALL&lt;/code&gt;(see &lt;a href=&quot;#SEARCH-ALL&quot;&gt;SEARCH ALL&lt;/a&gt;) and&lt;code&gt;SORT&lt;/code&gt;(see &lt;a href=&quot;#SORT&quot;&gt;SORT&lt;/a&gt;) statements for explanations of the&lt;code&gt;KEY&lt;/code&gt;</source>
          <target state="translated">ドキュメントを参照してください &lt;code&gt;SEARCH&lt;/code&gt; （参照&lt;a href=&quot;#SEARCH&quot;&gt;の検索&lt;/a&gt;）、 &lt;code&gt;SEARCH ALL&lt;/code&gt; （参照&lt;a href=&quot;#SEARCH-ALL&quot;&gt;SEARCH ALL&lt;/a&gt;）および &lt;code&gt;SORT&lt;/code&gt; を（参照&lt;a href=&quot;#SORT&quot;&gt;SORT&lt;/a&gt;の説明のための書類） &lt;code&gt;KEY&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="4559f13dbc4b51652298930a9859a11ddfa1e684" translate="yes" xml:space="preserve">
          <source>See the documentation on the &lt;code&gt;CBL_GET_SCR_SIZE&lt;/code&gt; built-in system subroutine (see &lt;a href=&quot;#CBL_005fGET_005fSCR_005fSIZE&quot;&gt;CBL_GET_SCR_SIZE&lt;/a&gt;) for another way to retrieve this information.</source>
          <target state="translated">上のドキュメントを参照してください &lt;code&gt;CBL_GET_SCR_SIZE&lt;/code&gt; （参照ビルトインシステムサブルーチンを&lt;a href=&quot;#CBL_005fGET_005fSCR_005fSIZE&quot;&gt;CBL_GET_SCR_SIZEを&lt;/a&gt;、この情報を取得するための別の方法について）。</target>
        </trans-unit>
        <trans-unit id="b99d16c50e28774b9367c6efdc9ae504f33ee4f7" translate="yes" xml:space="preserve">
          <source>See the documentation on the&lt;code&gt;CBL_GET_SCR_SIZE&lt;/code&gt;built-in system subroutine (see &lt;a href=&quot;#CBL_005fGET_005fSCR_005fSIZE&quot;&gt;CBL_GET_SCR_SIZE&lt;/a&gt;) for another way to retrieve this information.</source>
          <target state="translated">この情報を取得する別の方法については、 &lt;code&gt;CBL_GET_SCR_SIZE&lt;/code&gt; 組み込みシステムサブルーチンに関するドキュメント（&lt;a href=&quot;#CBL_005fGET_005fSCR_005fSIZE&quot;&gt;CBL_GET_SCR_SIZEを&lt;/a&gt;参照）を参照してください。</target>
        </trans-unit>
        <trans-unit id="4fe00b90c464b7b4f61b43d70bc3ad28367a1e9d" translate="yes" xml:space="preserve">
          <source>See the period at the end of the second &lt;code&gt;MULTIPLY&lt;/code&gt; (see &lt;a href=&quot;#MULTIPLY&quot;&gt;MULTIPLY&lt;/a&gt;)? That is what terminates the scope of the &lt;code&gt;IF&lt;/code&gt;, thus making the &lt;code&gt;DISPLAY&lt;/code&gt; statement&amp;rsquo;s execution completely independent of the &lt;code&gt;TRUE&lt;/code&gt;/&lt;code&gt;FALSE&lt;/code&gt; status of the &lt;code&gt;IF&lt;/code&gt;.</source>
          <target state="translated">2番目の &lt;code&gt;MULTIPLY&lt;/code&gt; の終わりの期間を参照してください（&lt;a href=&quot;#MULTIPLY&quot;&gt;MULTIPLYを&lt;/a&gt;参照）？これにより、 &lt;code&gt;IF&lt;/code&gt; のスコープが終了し、 &lt;code&gt;DISPLAY&lt;/code&gt; ステートメントの実行が &lt;code&gt;IF&lt;/code&gt; の &lt;code&gt;TRUE&lt;/code&gt; / &lt;code&gt;FALSE&lt;/code&gt; ステータスから完全に独立します。</target>
        </trans-unit>
        <trans-unit id="a3e9c6422faf2d00e499d2d38fa0bb509b141b92" translate="yes" xml:space="preserve">
          <source>See the period at the end of the second&lt;code&gt;MULTIPLY&lt;/code&gt;(see &lt;a href=&quot;#MULTIPLY&quot;&gt;MULTIPLY&lt;/a&gt;)? That is what terminates the scope of the&lt;code&gt;IF&lt;/code&gt; thus making the&lt;code&gt;DISPLAY&lt;/code&gt;statement&amp;rsquo;s execution completely independent of the TRUE/FALSE status of the&lt;code&gt;IF&lt;/code&gt;</source>
          <target state="translated">2番目の &lt;code&gt;MULTIPLY&lt;/code&gt; の終わりのピリオドを確認しますか（&lt;a href=&quot;#MULTIPLY&quot;&gt;MULTIPLYを&lt;/a&gt;参照）？これにより、 &lt;code&gt;IF&lt;/code&gt; のスコープが終了し、 &lt;code&gt;DISPLAY&lt;/code&gt; ステートメントの実行が &lt;code&gt;IF&lt;/code&gt; の TRUE / FALSEステータスから完全に独立します。</target>
        </trans-unit>
        <trans-unit id="909ff939ec981953f61ffe1fe6213ae8d9c03027" translate="yes" xml:space="preserve">
          <source>See the&lt;code&gt;UNLOCK&lt;/code&gt;statement (see &lt;a href=&quot;#UNLOCK&quot;&gt;UNLOCK&lt;/a&gt;) for additional details.</source>
          <target state="translated">参照してください &lt;code&gt;UNLOCK&lt;/code&gt; の（参照文を&lt;a href=&quot;#UNLOCK&quot;&gt;UNLOCKの&lt;/a&gt;詳細については）。</target>
        </trans-unit>
        <trans-unit id="367bca9f464537df5c942a3ab8170b21d106dd3d" translate="yes" xml:space="preserve">
          <source>Selected WHEN Clause</source>
          <target state="translated">選択されたWHEN句</target>
        </trans-unit>
        <trans-unit id="90426e9620111fd78abcc549ff6e519a422fa8ce" translate="yes" xml:space="preserve">
          <source>Selected WHEN clause</source>
          <target state="translated">選択されたWHEN句</target>
        </trans-unit>
        <trans-unit id="12cc059fea3b82fb7364f83d2b0d3f838e439dd4" translate="yes" xml:space="preserve">
          <source>Selection-Object</source>
          <target state="translated">Selection-Object</target>
        </trans-unit>
        <trans-unit id="c12c9c50c093ba4e7bfc61ba93c5785b24d1edc4" translate="yes" xml:space="preserve">
          <source>Selection-Subject</source>
          <target state="translated">Selection-Subject</target>
        </trans-unit>
        <trans-unit id="1bb1f30ec48f10e1a7e3a2acbd5f28a35dc4644c" translate="yes" xml:space="preserve">
          <source>Sentence</source>
          <target state="translated">Sentence</target>
        </trans-unit>
        <trans-unit id="71addf3a3d48680e130dc33780d38b63a187464c" translate="yes" xml:space="preserve">
          <source>Sequence Number Area</source>
          <target state="translated">シーケンス番号領域</target>
        </trans-unit>
        <trans-unit id="d9786d8821a96e23e9013330d6148c6bcf5afb8e" translate="yes" xml:space="preserve">
          <source>Sequential READ Syntax</source>
          <target state="translated">シーケンシャル READ 構文</target>
        </trans-unit>
        <trans-unit id="a91120e27157f99e4885921bd23d39f5ce9bfed7" translate="yes" xml:space="preserve">
          <source>Sequential files are processed using the following statements:</source>
          <target state="translated">シーケンシャルファイルは、以下のステートメントを使用して処理されます。</target>
        </trans-unit>
        <trans-unit id="c5805f3ca1e9f0f1ef7a6eafb6b5c84cb549e66e" translate="yes" xml:space="preserve">
          <source>Set current position on terminal.</source>
          <target state="translated">端子の現在位置を設定します。</target>
        </trans-unit>
        <trans-unit id="069ee1877b1845d947f09c9a0e31f74c8dff31df" translate="yes" xml:space="preserve">
          <source>Set to a directory/folder appropriate to create temporary files in. The intermediate working files created by the compiler will be created here (and deleted once they&amp;rsquo;re no longer needed).</source>
          <target state="translated">一時ファイルを作成するのに適切なディレクトリ/フォルダーに設定します。コンパイラーによって作成された中間作業ファイルはここで作成されます（不要になると削除されます）。</target>
        </trans-unit>
        <trans-unit id="7d744e087d8ed8b103ef95cee6571f760db36bab" translate="yes" xml:space="preserve">
          <source>Set to any additional linker switches (&lt;code&gt;ld&lt;/code&gt;) that can specify where standard libraries that must be linked with the program can be found. The default is &quot;&quot; (empty).</source>
          <target state="translated">プログラムとリンクする必要のある標準ライブラリを見つけることができる場所を指定できる追加のリンカスイッチ（ &lt;code&gt;ld&lt;/code&gt; ）に設定します。デフォルトは「」（空）です。</target>
        </trans-unit>
        <trans-unit id="b0afa4233d7741ab8d407d6b11f7222a52c49858" translate="yes" xml:space="preserve">
          <source>Set to any additional linker switches (ld) that can specify where standard libraries that must be linked with the program can be found. The default is &quot;&quot; (null).</source>
          <target state="translated">プログラムとリンクする必要がある標準ライブラリがどこにあるかを指定できる追加のリンカースイッチ (ld)を設定します。デフォルトは &quot;&quot; (null)です。</target>
        </trans-unit>
        <trans-unit id="65cbff5002667b4ba0099770aafd5734619eaab5" translate="yes" xml:space="preserve">
          <source>Set to any linker (&lt;code&gt;ld&lt;/code&gt;) switches that you&amp;rsquo;d like to pass on to the C compiler from the &lt;code&gt;cobc&lt;/code&gt; compiler (in addition to any that cobc will specify).</source>
          <target state="translated">&lt;code&gt;cobc&lt;/code&gt; コンパイラからCコンパイラに渡すリンカー（ &lt;code&gt;ld&lt;/code&gt; ）スイッチに設定します（cobcが指定するものに加えて）。</target>
        </trans-unit>
        <trans-unit id="e7729ec720d5cb121e904e6421f098453e46e844" translate="yes" xml:space="preserve">
          <source>Set to any linker switches (&lt;code&gt;ld&lt;/code&gt;) that specify where standard libraries that must be linked with the program can be found.</source>
          <target state="translated">プログラムとリンクする必要のある標準ライブラリを見つけることができる場所を指定するリンカースイッチ（ &lt;code&gt;ld&lt;/code&gt; ）に設定します。</target>
        </trans-unit>
        <trans-unit id="3d6f31a473a4c76473967ddbb7c7996f26a3a672" translate="yes" xml:space="preserve">
          <source>Set to any linker switches (ld) that specify where standard libraries that must be linked with the program can be found.</source>
          <target state="translated">プログラムとリンクする必要がある標準ライブラリがどこにあるかを指定する任意のリンカースイッチ(ld)に設定します。</target>
        </trans-unit>
        <trans-unit id="5faf23e3b89e0820f532679031bd15696dc10e40" translate="yes" xml:space="preserve">
          <source>Set to any linker/loader (ld) switches that you&amp;rsquo;d like to pass on to the C compiler from the&lt;code&gt;cobc&lt;/code&gt;compiler (in addition to any that cobc will specify).</source>
          <target state="translated">（cobcが指定するものに加えて） &lt;code&gt;cobc&lt;/code&gt; コンパイラーからCコンパイラーに渡すリンカー/ローダー（ld）スイッチに設定します。</target>
        </trans-unit>
        <trans-unit id="b175fd9e637c5d0df66a2243d76a4bb5a06987b9" translate="yes" xml:space="preserve">
          <source>Set to any switches that you&amp;rsquo;d like to pass on to the C compiler from the &lt;code&gt;cobc&lt;/code&gt; compiler (in addition to any that &lt;code&gt;cobc&lt;/code&gt; will specify).</source>
          <target state="translated">&lt;code&gt;cobc&lt;/code&gt; コンパイラからCコンパイラに渡すスイッチに設定します（ &lt;code&gt;cobc&lt;/code&gt; が指定するスイッチに加えて）。</target>
        </trans-unit>
        <trans-unit id="b75fcfa6f7d79959cd815db6ecb29300e5f8f829" translate="yes" xml:space="preserve">
          <source>Set to any switches that you&amp;rsquo;d like to pass on to the C compiler from the&lt;code&gt;cobc&lt;/code&gt;compiler (in addition to any that&lt;code&gt;cobc&lt;/code&gt;will specify).</source>
          <target state="translated">（ &lt;code&gt;cobc&lt;/code&gt; が指定するものに加えて） &lt;code&gt;cobc&lt;/code&gt; コンパイラーからCコンパイラーに渡すスイッチに設定します。</target>
        </trans-unit>
        <trans-unit id="54f3d4af00ad5fd089a0cd86a7c91daab5b6f150" translate="yes" xml:space="preserve">
          <source>Set to the name of the C compiler you wish GnuCOBOL to use.</source>
          <target state="translated">GnuCOBOLに使用させたいCコンパイラの名前を設定します。</target>
        </trans-unit>
        <trans-unit id="931403a28a6f9c0d541a7dbdff91b8106c493eaa" translate="yes" xml:space="preserve">
          <source>Set to the path to the folder where GnuCOBOL</source>
          <target state="translated">GnuCOBOLがインストールされているフォルダのパスを設定します。</target>
        </trans-unit>
        <trans-unit id="e48e1c6eb499ac6dacdaa2e499873107fe37034b" translate="yes" xml:space="preserve">
          <source>Set to the path to the folder where GnuCOBOL &quot;config&quot; files are kept.</source>
          <target state="translated">GnuCOBOLの &quot;config &quot;ファイルが保存されているフォルダのパスを設定します。</target>
        </trans-unit>
        <trans-unit id="e081a67177f9edfda31cc637258bc9a10c5a748a" translate="yes" xml:space="preserve">
          <source>Sets and/or clears all eight of the COBOL switches (&lt;code&gt;SWITCH-1&lt;/code&gt; through &lt;code&gt;SWITCH-8&lt;/code&gt;). See &lt;a href=&quot;#SPECIAL_002dNAMES&quot;&gt;SPECIAL-NAMES&lt;/a&gt;, for an explanation of those switches.</source>
          <target state="translated">8つのCOBOLスイッチ（ &lt;code&gt;SWITCH-1&lt;/code&gt; から &lt;code&gt;SWITCH-8&lt;/code&gt; ）すべてを設定および/またはクリアします。これらのスイッチの説明については、&lt;a href=&quot;#SPECIAL_002dNAMES&quot;&gt;SPECIAL-NAMESを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="551db50d808968c66636de937ee33fd8893766c2" translate="yes" xml:space="preserve">
          <source>Sets and/or clears all eight of the COBOL switches (SWITCH-1 through SWITCH-8). See &lt;a href=&quot;#SPECIAL_002dNAMES&quot;&gt;SPECIAL-NAMES&lt;/a&gt;, for an explanation of those switches.</source>
          <target state="translated">8つのCOBOLスイッチ（SWITCH-1からSWITCH-8）をすべて設定またはクリアします。これらのスイッチの説明については、&lt;a href=&quot;#SPECIAL_002dNAMES&quot;&gt;SPECIAL-NAMESを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f5f9337e9bd07361f3b7cf24b8d68d1f8b4798dc" translate="yes" xml:space="preserve">
          <source>Setting this variable to any non-blank value will allow the &lt;code&gt;ACCEPT screen-data-item&lt;/code&gt; statement (see &lt;a href=&quot;#ACCEPT-screen_002ddata_002ditem&quot;&gt;ACCEPT screen-data-item&lt;/a&gt;) to detect the pressing of the &lt;code&gt;Esc&lt;/code&gt;, &lt;code&gt;PgUp&lt;/code&gt; and &lt;code&gt;PgDn&lt;/code&gt; keys.</source>
          <target state="translated">この変数を空白以外の値に設定すると、 &lt;code&gt;ACCEPT screen-data-item&lt;/code&gt; ステートメント（&lt;a href=&quot;#ACCEPT-screen_002ddata_002ditem&quot;&gt;ACCEPT screen-data-itemを&lt;/a&gt;参照）が &lt;code&gt;Esc&lt;/code&gt; 、 &lt;code&gt;PgUp&lt;/code&gt; 、および &lt;code&gt;PgDn&lt;/code&gt; キーの押下を検出できるようになります。</target>
        </trans-unit>
        <trans-unit id="af8f36edddce014edfb752b86686adfa96f5118b" translate="yes" xml:space="preserve">
          <source>Setting this variable to any non-blank value will allow the&lt;code&gt;ACCEPT screen-data-item&lt;/code&gt;statement (see &lt;a href=&quot;#ACCEPT-screen_002ddata_002ditem&quot;&gt;ACCEPT screen-data-item&lt;/a&gt;) to detect the pressing of the &quot;Esc&quot;, &quot;PgUp&quot; and &quot;PgDn&quot; keys.</source>
          <target state="translated">この変数を空白以外の値に設定すると、 &lt;code&gt;ACCEPT screen-data-item&lt;/code&gt; ステートメント（&lt;a href=&quot;#ACCEPT-screen_002ddata_002ditem&quot;&gt;ACCEPT screen-data-itemを&lt;/a&gt;参照）が「Esc」、「PgUp」、「PgDn」キーの押下を検出できるようになります。</target>
        </trans-unit>
        <trans-unit id="b851981ce8958c032d4eb43bd5b82975c990ba8a" translate="yes" xml:space="preserve">
          <source>Shift Left Dbl Click</source>
          <target state="translated">シフト左 Dbl クリック</target>
        </trans-unit>
        <trans-unit id="13d05b6f9c5bbfff9a3a837baa699f4bf6b1b3cb" translate="yes" xml:space="preserve">
          <source>Shift Left Pressed</source>
          <target state="translated">シフト左押し</target>
        </trans-unit>
        <trans-unit id="e75c5668b5dd8510512c8ea61cea2be6138d9761" translate="yes" xml:space="preserve">
          <source>Shift Left Released</source>
          <target state="translated">シフト左リリース</target>
        </trans-unit>
        <trans-unit id="1cf194eda76a9212ae2a99b2669edc12bdc03163" translate="yes" xml:space="preserve">
          <source>Shift Mid Dbl Click</source>
          <target state="translated">シフトミッド Dbl クリック</target>
        </trans-unit>
        <trans-unit id="bb4451caa3d8fe307b2e41d0e1f3f33499a5c5ab" translate="yes" xml:space="preserve">
          <source>Shift Mid Pressed</source>
          <target state="translated">シフトミッドプレス</target>
        </trans-unit>
        <trans-unit id="d8d4249ef22c9ac7aee850fe44a9746efad7e16a" translate="yes" xml:space="preserve">
          <source>Shift Mid Released</source>
          <target state="translated">シフトミッド発売</target>
        </trans-unit>
        <trans-unit id="8b05e277bfdbfbf71132c633d55279b295bc4242" translate="yes" xml:space="preserve">
          <source>Shift Move</source>
          <target state="translated">シフト移動</target>
        </trans-unit>
        <trans-unit id="ab590d025a08ae006e748422a357058cbebea15b" translate="yes" xml:space="preserve">
          <source>Shift Right Dbl Click</source>
          <target state="translated">シフト右クリック</target>
        </trans-unit>
        <trans-unit id="5b9d4f227bdb1c529af7cc4f2492bcf762be16a9" translate="yes" xml:space="preserve">
          <source>Shift Right Pressed</source>
          <target state="translated">シフト右押し</target>
        </trans-unit>
        <trans-unit id="85896c96693466c5b85ee2abe16bc0a466dc8963" translate="yes" xml:space="preserve">
          <source>Shift Right Released</source>
          <target state="translated">右シフト解除</target>
        </trans-unit>
        <trans-unit id="360afd7990b83b6b6dc7e087ab3bc00df1f1b8a0" translate="yes" xml:space="preserve">
          <source>Shift Wheel Down</source>
          <target state="translated">シフトホイールダウン</target>
        </trans-unit>
        <trans-unit id="1bcc42ec7602adba1b05470c584e3aa3e2eb6a11" translate="yes" xml:space="preserve">
          <source>Shift Wheel Left</source>
          <target state="translated">シフトホイール左</target>
        </trans-unit>
        <trans-unit id="a8c0e4d273489bc9dc1e37a5fdd5e8b2d50f29d0" translate="yes" xml:space="preserve">
          <source>Shift Wheel Right</source>
          <target state="translated">シフトホイール右</target>
        </trans-unit>
        <trans-unit id="e6ecbbfca6d3b7e77b9b8ef6ed3e8a6c9be1883a" translate="yes" xml:space="preserve">
          <source>Shift Wheel Up</source>
          <target state="translated">シフトホイールアップ</target>
        </trans-unit>
        <trans-unit id="d6f26a09f01e5b0e60f0a4d452cb6b1b4d899ccd" translate="yes" xml:space="preserve">
          <source>Should actual disk work files be necessary due to the amount of data being sorted or merged, they will be automatically allocated to disk in a folder defined by:</source>
          <target state="translated">データの量が多いために実際のディスク作業ファイルが必要な場合は、そのファイルは自動的に定義されたフォルダ内のディスクに割り当てられます。</target>
        </trans-unit>
        <trans-unit id="37c789e6192501860e398e9f024664d486d3044d" translate="yes" xml:space="preserve">
          <source>Should any &amp;lt;</source>
          <target state="translated">&amp;lt;</target>
        </trans-unit>
        <trans-unit id="d0a3bf517b40b25f01d15475c6f20a6c57fc3276" translate="yes" xml:space="preserve">
          <source>Should any &lt;var&gt;identifier-2&lt;/var&gt; be an integer numeric data item, the result computed when that &lt;var&gt;identifier-2&lt;/var&gt; is divided by &lt;var&gt;literal-1&lt;/var&gt; or &lt;var&gt;identifier-1&lt;/var&gt; will also be an integer &amp;mdash; any remainder from that division will be discarded.</source>
          <target state="translated">任意べき &lt;var&gt;identifier-2&lt;/var&gt; 整数数字データ項目で、そのときに結果が計算 &lt;var&gt;identifier-2&lt;/var&gt; で除算される &lt;var&gt;literal-1&lt;/var&gt; 又は &lt;var&gt;identifier-1&lt;/var&gt; また、整数になり-その部門からの任意の残りは破棄されます。</target>
        </trans-unit>
        <trans-unit id="4fb64eda71bd9c5e3bea41b0953821a085fb4af5" translate="yes" xml:space="preserve">
          <source>Should disk work files be necessary due to the amount of data being sorted, they will be automatically allocated to disk in a folder defined by the</source>
          <target state="translated">ソートされるデータの量が多いためにディスクワークファイルが必要な場合、それらは自動的に</target>
        </trans-unit>
        <trans-unit id="f32cbd33dc25c2538d052559e20cfa0910f90a5c" translate="yes" xml:space="preserve">
          <source>Should disk work files be necessary due to the amount of data being sorted, they will be automatically allocated to disk in a folder defined by the   &lt;code&gt;TMPDIR&lt;/code&gt; run-time environment variable,   &lt;code&gt;TMP&lt;/code&gt; run-time environment variable or   &lt;code&gt;TEMP&lt;/code&gt; run-time environment variable run-time environment variables (see &lt;a href=&quot;#Run-Time-Environment-Variables&quot;&gt;Run Time Environment Variables&lt;/a&gt;) (checked for existence in that sequence). These disk files will be automatically purged upon &lt;code&gt;SORT&lt;/code&gt; termination or program execution termination (normal or otherwise).</source>
          <target state="translated">ソートされるデータの量のためにディスク作業ファイルが必要な場合、それらは &lt;code&gt;TMPDIR&lt;/code&gt; ランタイム環境変数、 &lt;code&gt;TMP&lt;/code&gt; ランタイム環境変数、 または &lt;code&gt;TEMP&lt;/code&gt; ランタイム環境変数run-によって定義されたフォルダー内のディスクに自動的に割り当てられます。 時間環境変数（&lt;a href=&quot;#Run-Time-Environment-Variables&quot;&gt;ランタイム&lt;/a&gt;環境変数を参照）（そのシーケンスに存在するかどうかを確認します）。これらのディスクファイルは、 &lt;code&gt;SORT&lt;/code&gt; の終了またはプログラムの実行の終了（通常またはその他）時に自動的にパージされます。</target>
        </trans-unit>
        <trans-unit id="09e8970c2fc09b6b3703058238f05e0f78a7a2ae" translate="yes" xml:space="preserve">
          <source>Sign conditions evaluate the numeric state of a data item defined with a &lt;code&gt;PICTURE&lt;/code&gt; (see &lt;a href=&quot;#PICTURE&quot;&gt;PICTURE&lt;/a&gt;) and/or &lt;code&gt;USAGE&lt;/code&gt; (see &lt;a href=&quot;#USAGE&quot;&gt;USAGE&lt;/a&gt;) that supports numeric values.</source>
          <target state="translated">符号条件は、数値をサポートする &lt;code&gt;PICTURE&lt;/code&gt; （&lt;a href=&quot;#PICTURE&quot;&gt;PICTUREを&lt;/a&gt;参照）および/または &lt;code&gt;USAGE&lt;/code&gt; （&lt;a href=&quot;#USAGE&quot;&gt;USAGEを&lt;/a&gt;参照）で定義されたデータ項目の数値状態を評価します。</target>
        </trans-unit>
        <trans-unit id="6e9ee72471e723c65e456d4172eb51dd544d91e6" translate="yes" xml:space="preserve">
          <source>Sign-Condition Syntax</source>
          <target state="translated">符号条件構文</target>
        </trans-unit>
        <trans-unit id="ca4dc5601dadd4ed4dae70b7491398f13c8a8df3" translate="yes" xml:space="preserve">
          <source>Signed Packed Decimal</source>
          <target state="translated">符号付きパック十進数</target>
        </trans-unit>
        <trans-unit id="05f9dde621a30a6f3fe9457983ad3598eee536c5" translate="yes" xml:space="preserve">
          <source>Significant digits truncated in store</source>
          <target state="translated">ストアでの有効数字の切り捨て</target>
        </trans-unit>
        <trans-unit id="7c430f8c906b473ab7e1d7e211ca65e38236d898" translate="yes" xml:space="preserve">
          <source>Similarly, since there is no &lt;code&gt;END PROGRAM&lt;/code&gt; marker separating &lt;code&gt;PROG3&lt;/code&gt; from &lt;code&gt;PROG2&lt;/code&gt;, it is possible for &lt;code&gt;PROG3&lt;/code&gt; to access &lt;code&gt;GLOBAL&lt;/code&gt; files and data items defined within &lt;code&gt;PROG2&lt;/code&gt;. Since &lt;code&gt;PROG2&lt;/code&gt; is nested within &lt;code&gt;PROG1&lt;/code&gt;, any &lt;code&gt;GLOBAL&lt;/code&gt; resources defined within &lt;code&gt;PROG1&lt;/code&gt; will be available to &lt;code&gt;PROG3&lt;/code&gt; as well.</source>
          <target state="translated">何もありませんので、同様に、 &lt;code&gt;END PROGRAM&lt;/code&gt; 分離マーカー &lt;code&gt;PROG3&lt;/code&gt; をから &lt;code&gt;PROG2&lt;/code&gt; が、それは可能です &lt;code&gt;PROG3&lt;/code&gt; アクセスに &lt;code&gt;GLOBAL&lt;/code&gt; の内で定義されたファイルやデータ項目 &lt;code&gt;PROG2&lt;/code&gt; 。以来 &lt;code&gt;PROG2&lt;/code&gt; が内にネストされ &lt;code&gt;PROG1&lt;/code&gt; 、任意 &lt;code&gt;GLOBAL&lt;/code&gt; 内に定義されたリソース &lt;code&gt;PROG1&lt;/code&gt; はに利用できるようになり &lt;code&gt;PROG3&lt;/code&gt; 同様。</target>
        </trans-unit>
        <trans-unit id="b4dbebd9bce34e14cf01b533ea8828acf5b44171" translate="yes" xml:space="preserve">
          <source>Similarly, since there is no&lt;code&gt;END PROGRAM&lt;/code&gt;marker separating PROG3 from PROG2, it is possible for PROG3 to access&lt;code&gt;GLOBAL&lt;/code&gt;files and data items defined within PROG2. Since PROG2 is nested within PROG1, any&lt;code&gt;GLOBAL&lt;/code&gt;resources defined within PROG1 will be available to PROG3 as well.</source>
          <target state="translated">同様に、PROG3をPROG2から分離する &lt;code&gt;END PROGRAM&lt;/code&gt; マーカーがないため、PROG3は、PROG2 内で定義された &lt;code&gt;GLOBAL&lt;/code&gt; ファイルおよびデータ項目にアクセスできます。PROG2はPROG1内にネストされているため、PROG1内で定義されたすべての &lt;code&gt;GLOBAL&lt;/code&gt; リソースはPROG3でも使用できます。</target>
        </trans-unit>
        <trans-unit id="6a2b5c21b86c9349b865faca01a3f8367ffa7f8b" translate="yes" xml:space="preserve">
          <source>Simple GO TO Syntax</source>
          <target state="translated">シンプルな GO TO 構文</target>
        </trans-unit>
        <trans-unit id="be95c7b05b0ed152ce1e8a1f2c5cd796b53caee4" translate="yes" xml:space="preserve">
          <source>Simple MOVE Syntax</source>
          <target state="translated">シンプルなMOVE構文</target>
        </trans-unit>
        <trans-unit id="18126350d3d34e0a9b8ebe73e963984d0c26fd2d" translate="yes" xml:space="preserve">
          <source>Simply Change This&amp;hellip;</source>
          <target state="translated">単にこれを変更して&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="f761d3cfd1db760e9c0cd6e97ac77721c3b66b92" translate="yes" xml:space="preserve">
          <source>Simply stated, a  &lt;em&gt;Subprogram&lt;/em&gt; is a program that is invoked by another program; the subprogram performs whatever its designed operations are and &amp;mdash; when complete &amp;mdash; typically returns control back to the program that invoked it. There are two different types of subprograms supported by GnuCOBOL, subroutines and user-defined functions. The distinction between these two subprogram types lies in the manner in which they are executed.</source>
          <target state="translated">簡単に言うと、 &lt;em&gt;サブプログラム&lt;/em&gt;は別のプログラムによって呼び出されるプログラムです。サブプログラムは、設計された操作が何であれ実行し、完了すると、通常、サブプログラムを呼び出したプログラムに制御を戻します。GnuCOBOLでサポートされるサブプログラムには、サブルーチンとユーザー定義関数の2種類があります。これらの2つのサブプログラムタイプの違いは、それらが実行される方法にあります。</target>
        </trans-unit>
        <trans-unit id="a80baeb12e86a81876a8a769b70e07531ec125d0" translate="yes" xml:space="preserve">
          <source>Simply stated, a &amp;rsquo;</source>
          <target state="translated">簡単に言えば、 '</target>
        </trans-unit>
        <trans-unit id="f6287acd20987f4dc314ce910f933c4d6f67c20e" translate="yes" xml:space="preserve">
          <source>Since it is difficult to write any non-trivial COBOL program that uses none of the above, lets assume you will be including at least one section or paragraph in your GnuCOBOL programs.</source>
          <target state="translated">上記のどれも使わないCOBOLプログラムを書くのは難しいので、GnuCOBOLプログラムの中に少なくとも1つのセクションや段落を含むと仮定してみましょう。</target>
        </trans-unit>
        <trans-unit id="c0ccb1f309576bb1671901c92cf01054b24aa9c4" translate="yes" xml:space="preserve">
          <source>Since the C program is planning on making changes to all three arguments, it declares all three as pointers in the function header and references the third argument as a pointer in the function body. It actually had no choice for the two string (char array) arguments &amp;mdash; they must be defined as pointers in the function even though the function code references them without the leading &amp;lsquo;</source>
          <target state="translated">Cプログラムは、3つの引数すべてに変更を加えることを計画しているため、3つすべてを関数ヘッダーのポインターとして宣言し、3番目の引数を関数本体のポインターとして参照します。実際には、2つの文字列（char配列）引数を選択することはできませんでした。関数コードが先頭なしでそれらを参照している場合でも、関数内のポインターとして定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="508ea858fa9e3c52de9eb67315c2deb6679294f1" translate="yes" xml:space="preserve">
          <source>Since the C program is planning on making changes to all three arguments, it declares all three as pointers in the function header and references the third argument as a pointer in the function body. It actually had no choice for the two string (char array) arguments &amp;ndash; they must be defined as pointers in the function even though the function code references them without the leading * that normally signifies pointers.</source>
          <target state="translated">Cプログラムは3つの引数すべてに変更を加える予定なので、3つすべてを関数ヘッダーのポインターとして宣言し、3番目の引数を関数本体のポインターとして参照します。実際には、2つの文字列（char配列）引数は選択できませんでした。&amp;ndash;通常、ポインターを表す先頭の「*」なしで関数コードがそれらを参照している場合でも、それらは関数内のポインターとして定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="6dcfa8549e408829c8ef205384c0464a133ff588" translate="yes" xml:space="preserve">
          <source>Since the C program is the one that will execute first, before the GnuCOBOL subroutine, the burden of initializing the GnuCOBOL run-time environment lies with that C program; it will have to invoke the &quot;cob_init&quot; function, which is part of the &quot;libcob&quot; library. The two required C statements are shown highlighted.</source>
          <target state="translated">C プログラムは GnuCOBOL サブルーチンの前に最初に実行されるものなので、GnuCOBOL ランタイム環境を初期化する負担はその C プログラムにあります;それは &quot;libcob&quot; ライブラリの一部である &quot;cob_init&quot; 関数を呼び出す必要があります。2つの必要なC文はハイライト表示されています。</target>
        </trans-unit>
        <trans-unit id="311962b15a98e7a97c1bb5ab1df42856bcf02b3b" translate="yes" xml:space="preserve">
          <source>Since the C program is the one that will execute first, before the GnuCOBOL subroutine, the burden of initializing the GnuCOBOL run-time environment lies with that C program; it will have to invoke the &lt;code&gt;cob_init&lt;/code&gt; function, which is part of the &lt;code&gt;libcob&lt;/code&gt; library. The two required C statements are shown highlighted.</source>
          <target state="translated">Cプログラムは、GnuCOBOLサブルーチンの前に最初に実行されるプログラムであるため、GnuCOBOLランタイム環境を初期化する負担はそのCプログラムにあります。 &lt;code&gt;libcob&lt;/code&gt; ライブラリの一部である &lt;code&gt;cob_init&lt;/code&gt; 関数を呼び出す必要があります。必要な2つのCステートメントが強調表示されています。</target>
        </trans-unit>
        <trans-unit id="50ed98a3b42bc3e899d745b6442e6b282aa14998" translate="yes" xml:space="preserve">
          <source>Since the C program wants to allow &quot;arg3&quot; to be changed by the subprogram, it prefixes it with a &quot;&amp;amp;&quot; to force a CALL BY REFERENCE for that argument. Since &quot;arg1&quot; and &quot;arg2&quot; are strings (char arrays), they are automatically passed by reference.</source>
          <target state="translated">Cプログラムは、サブプログラムによる「arg3」の変更を許可する必要があるため、「＆」をプレフィックスとして付加して、その引数に対してCALL BY REFERENCEを強制します。「arg1」と「arg2」は文字列（char配列）であるため、参照によって自動的に渡されます。</target>
        </trans-unit>
        <trans-unit id="8ff936fe7e92cd4258af10a24b4da74f4d408467" translate="yes" xml:space="preserve">
          <source>Since the C program wants to allow &lt;code&gt;arg3&lt;/code&gt; to be changed by the subprogram, it prefixes it with a &amp;lsquo;</source>
          <target state="translated">Cプログラムは、サブプログラムによる &lt;code&gt;arg3&lt;/code&gt; の変更を許可する必要があるため、接頭辞として 'を付けます。</target>
        </trans-unit>
        <trans-unit id="d5e41c0dac5490469dc23a6e8d0593afb7f53584" translate="yes" xml:space="preserve">
          <source>Since the intent of a copybook is to introduce COBOL code into a particular spot in a program via the &lt;code&gt;COPY&lt;/code&gt; statement (see &lt;a href=&quot;#COPY&quot;&gt;COPY&lt;/a&gt;), it is always a good idea to prefix copybook names with a character sequence that identifies where in a program its contents are intended to be &lt;code&gt;COPY&lt;/code&gt;ed.</source>
          <target state="translated">コピーブックの意図が経由して、プログラム内の特定のスポットにCOBOLコードを導入することであるので、 &lt;code&gt;COPY&lt;/code&gt; の声明（参照&lt;a href=&quot;#COPY&quot;&gt;COPYを&lt;/a&gt;、それは常に識別プログラムで、その内容であることを文字列とプレフィックスコピーブック名には良いアイデアです） &lt;code&gt;COPY&lt;/code&gt; されることを目的としています。</target>
        </trans-unit>
        <trans-unit id="2f7bab4fc5d71cb794895a09e1ed73766c2e54c7" translate="yes" xml:space="preserve">
          <source>Since the intent of a copybook is to introduce COBOL code into a particular spot in a program via the&lt;code&gt;COPY&lt;/code&gt;statement (see &lt;a href=&quot;#COPY&quot;&gt;COPY&lt;/a&gt;), it is always a good idea to prefix copybook names with a character sequence that identifies where in a program it&amp;rsquo;s contents are intended to be copyed.</source>
          <target state="translated">コピーブックの意図が経由して、プログラム内の特定のスポットにCOBOLコードを導入することであるので、 &lt;code&gt;COPY&lt;/code&gt; の声明（参照&lt;a href=&quot;#COPY&quot;&gt;COPYを&lt;/a&gt;、それは常に識別プログラムで、それの内容があることを文字列とプレフィックスコピーブック名には良いアイデアです）コピーすることを目的としています。</target>
        </trans-unit>
        <trans-unit id="01687eba61aa14fc82f0d3d3c96fabe9d23f4a49" translate="yes" xml:space="preserve">
          <source>Since this function has no arguments, no parenthesis should be specified.</source>
          <target state="translated">この関数は引数を持たないので、括弧は指定しないでください。</target>
        </trans-unit>
        <trans-unit id="555334f6e5b9883111c4b52b66ec442e517593e5" translate="yes" xml:space="preserve">
          <source>Single-item search strings can be specified by coding the &lt;code&gt;&lt;var&gt;identifier-1&lt;/var&gt;&lt;/code&gt;, &lt;code&gt;&lt;var&gt;literal-1&lt;/var&gt;&lt;/code&gt; or &lt;code&gt;&lt;var&gt;word-1&lt;/var&gt;&lt;/code&gt; being replaced.</source>
          <target state="translated">単一項目の検索文字列は、置き換えられる &lt;code&gt;&lt;var&gt;identifier-1&lt;/var&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;var&gt;literal-1&lt;/var&gt;&lt;/code&gt; -1、または &lt;code&gt;&lt;var&gt;word-1&lt;/var&gt;&lt;/code&gt; -1をコーディングすることで指定できます。</target>
        </trans-unit>
        <trans-unit id="909cdd47d871721cc7fa46227c59ad8caaa71e90" translate="yes" xml:space="preserve">
          <source>Single-item search strings can be specified by coding the&lt;code&gt;&amp;lt;&lt;i&gt;identifier-1&lt;/i&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;lt;&lt;i&gt;literal-1&lt;/i&gt;&amp;gt;&lt;/code&gt;or&lt;code&gt;&amp;lt;&lt;i&gt;word-1&lt;/i&gt;&amp;gt;&lt;/code&gt;being replaced.</source>
          <target state="translated">単一アイテムの検索文字列は、置き換えられる &lt;code&gt;&amp;lt;&lt;i&gt;identifier-1&lt;/i&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;&lt;i&gt;literal-1&lt;/i&gt;&amp;gt;&lt;/code&gt; または &lt;code&gt;&amp;lt;&lt;i&gt;word-1&lt;/i&gt;&amp;gt;&lt;/code&gt; コーディングすることによって指定できます。</target>
        </trans-unit>
        <trans-unit id="4295e77fa1a8eaec34e91836edb92bba39265cd0" translate="yes" xml:space="preserve">
          <source>Size error exception</source>
          <target state="translated">サイズエラーの例外</target>
        </trans-unit>
        <trans-unit id="55ff7b830260495b0240f0046e9e9268b1fb21ad" translate="yes" xml:space="preserve">
          <source>Size of replace item in inspect differs</source>
          <target state="translated">検査時の交換項目のサイズが異なります。</target>
        </trans-unit>
        <trans-unit id="a4041acbfe1a65f58b7575a3cf0e385ecb143ef3" translate="yes" xml:space="preserve">
          <source>Sleep times less than 1 will be interpreted as 0, which immediately returns control to the calling program without any sleep delay.</source>
          <target state="translated">1未満のスリープ時間は0と解釈され、スリープ遅延なしで直ちに呼び出しプログラムに制御を返します。</target>
        </trans-unit>
        <trans-unit id="39e6206ac873378c94c8c4690558fd8e350a7737" translate="yes" xml:space="preserve">
          <source>So how then do we inform the compiler that the&lt;code&gt;DISPLAY&lt;/code&gt;statement is outside the scope of the&lt;code&gt;IF&lt;/code&gt;</source>
          <target state="translated">それでは、 &lt;code&gt;DISPLAY&lt;/code&gt; ステートメントが &lt;code&gt;IF&lt;/code&gt; のスコープ外であることをコンパイラにどのように通知するのでしょうか。</target>
        </trans-unit>
        <trans-unit id="c39b0db998bb52a914adf20287d42556dbfec542" translate="yes" xml:space="preserve">
          <source>So, GnuCOBOL programmers expecting to pass strings to or receive strings from C programs had best be prepared to deal with the null-termination issue, as follows:</source>
          <target state="translated">そのため、Cプログラムに文字列を渡したり、Cプログラムから文字列を受け取ったりすることを想定しているGnuCOBOLプログラマーは、以下のようにヌル終了の問題に対処できるように準備しておくのが最善の方法でした。</target>
        </trans-unit>
        <trans-unit id="4c02e57130c8f0ffde209d228a9499b7d42235d8" translate="yes" xml:space="preserve">
          <source>So, assuming a sort file has been defined and it&amp;rsquo;s record layout (essentially a mirror of the raw data file) is defined as follows:</source>
          <target state="translated">したがって、ソートファイルが定義されていて、そのレコードレイアウト（基本的には生データファイルのミラー）が次のように定義されていると仮定します。</target>
        </trans-unit>
        <trans-unit id="f8709b5425243b80ec96d59bf8ff19078d815e1c" translate="yes" xml:space="preserve">
          <source>So, assuming a sort file has been defined and its record layout (essentially a mirror of the raw data file) is defined as follows:</source>
          <target state="translated">そこで、ソートファイルが定義され、そのレコードレイアウト(基本的には生データファイルのミラー)が以下のように定義されていると仮定します。</target>
        </trans-unit>
        <trans-unit id="7a46fafc141a2555ad25145a52a1e94cf613e5cf" translate="yes" xml:space="preserve">
          <source>So, if a file contains 1275 characters of data, and a program defines the structure of that file as containing 100-character records, then the file contents will consist of twelve (12) 100-character records with a final record containing only 75 characters.</source>
          <target state="translated">したがって、あるファイルに1275文字のデータが含まれており、プログラムがそのファイルの構造を100文字のレコードを含むものとして定義した場合、ファイルの内容は12個の100文字のレコードで構成され、最終的なレコードは75文字しか含まれないことになります。</target>
        </trans-unit>
        <trans-unit id="18d5fdae2f1b64cdbabb3e4ace710843106e2c78" translate="yes" xml:space="preserve">
          <source>So, the definition of these data items in a GnuCOBOL program would go something like this:</source>
          <target state="translated">つまり、GnuCOBOLプログラムにおけるこれらのデータ項目の定義は以下のようになります。</target>
        </trans-unit>
        <trans-unit id="8aef6726a7909be993cbbbb1b3eb0d562e7ce887" translate="yes" xml:space="preserve">
          <source>Some COBOL implementations disallow the use of group items or &lt;code&gt;PIC A&lt;/code&gt; items with &lt;code&gt;NUMERIC&lt;/code&gt; class conditions and the use of &lt;code&gt;PIC 9&lt;/code&gt; items with &lt;code&gt;ALPHABETIC&lt;/code&gt; class conditions. GnuCOBOL has no such restrictions.</source>
          <target state="translated">いくつかのCOBOLの実装では、グループアイテムまたは使用禁止 &lt;code&gt;PIC A&lt;/code&gt; を持つアイテム &lt;code&gt;NUMERIC&lt;/code&gt; クラス条件の使用 &lt;code&gt;PIC 9&lt;/code&gt; と商品 &lt;code&gt;ALPHABETIC&lt;/code&gt; クラス条件。GnuCOBOLにはそのような制限はありません。</target>
        </trans-unit>
        <trans-unit id="ea50cf6b9b69104f7a42a089305b29d51c4c5501" translate="yes" xml:space="preserve">
          <source>Some COBOL implementations disallow the use of group items or&lt;code&gt;PIC A&lt;/code&gt;items with&lt;code&gt;NUMERIC&lt;/code&gt;class conditions and the use of&lt;code&gt;PIC 9&lt;/code&gt;items with&lt;code&gt;ALPHABETIC&lt;/code&gt;class conditions. GnuCOBOL has no such restrictions.</source>
          <target state="translated">一部のCOBOL実装では、 &lt;code&gt;NUMERIC&lt;/code&gt; クラス条件でのグループ項目または &lt;code&gt;PIC A&lt;/code&gt; 項目の使用、および &lt;code&gt;ALPHABETIC&lt;/code&gt; クラス条件での &lt;code&gt;PIC 9&lt;/code&gt; 項目の使用を禁止しています。GnuCOBOLにはそのような制限はありません。</target>
        </trans-unit>
        <trans-unit id="e4225172aabb92fa6a43677763853e5011b635e6" translate="yes" xml:space="preserve">
          <source>Some COBOL implementations provide this optional clause to force their sort and merge facilities to retain duplicate key-value records in their original input sequence, relative to one another.</source>
          <target state="translated">いくつかのCOBOL実装では、ソートおよびマージ機能が、重複したキー値レコードを元の入力シーケンス内に、互いに相対的に保持するように強制するために、このオプションの句を提供する。</target>
        </trans-unit>
        <trans-unit id="3bd0bbd233792c7dfd9e82425698ec005de32876" translate="yes" xml:space="preserve">
          <source>Some COBOL shops prefer to use the eight-character Program Name Area (columns 73-80) as a change code area.</source>
          <target state="translated">一部のCOBOLショップでは、8文字のプログラム名エリア(73~80列)を変更コードエリアとして使用することを好んでいる。</target>
        </trans-unit>
        <trans-unit id="ea090b365fe10df2f74f8fb7841c2b481451fba0" translate="yes" xml:space="preserve">
          <source>Some COBOL statements (&lt;code&gt;SEARCH&lt;/code&gt; (see &lt;a href=&quot;#SEARCH&quot;&gt;SEARCH&lt;/a&gt;), &lt;code&gt;SEARCH ALL&lt;/code&gt; (see &lt;a href=&quot;#SEARCH-ALL&quot;&gt;SEARCH ALL&lt;/a&gt;) and the table-based &lt;code&gt;SORT&lt;/code&gt; (see &lt;a href=&quot;#Table-SORT&quot;&gt;Table SORT&lt;/a&gt;)) require you to index the affected table and to utilize that index with those statements. With any other references to tables, the choice is left to the programmer as to which approach should be used. In general, follow these rules:</source>
          <target state="translated">いくつかのCOBOL文（ &lt;code&gt;SEARCH&lt;/code&gt; （参照&lt;a href=&quot;#SEARCH&quot;&gt;の検索&lt;/a&gt;）、 &lt;code&gt;SEARCH ALL&lt;/code&gt; （参照&lt;a href=&quot;#SEARCH-ALL&quot;&gt;SEARCH ALL&lt;/a&gt;）とテーブルベースの &lt;code&gt;SORT&lt;/code&gt; （参照&lt;a href=&quot;#Table-SORT&quot;&gt;表をSORTが&lt;/a&gt;インデックスに影響を受けた表を、あなたを必要とし、それらの書類とそのインデックスを利用します））。テーブルへの他の参照がある場合、どちらのアプローチを使用するかはプログラマーに任されています。一般に、次のルールに従います。</target>
        </trans-unit>
        <trans-unit id="fd3ce505aa8be30003a54074dddef831cb8ca66c" translate="yes" xml:space="preserve">
          <source>Some COBOL statements &lt;code&gt;SEARCH&lt;/code&gt;(see &lt;a href=&quot;#SEARCH&quot;&gt;SEARCH&lt;/a&gt;),&lt;code&gt;SEARCH ALL&lt;/code&gt;(see &lt;a href=&quot;#SEARCH-ALL&quot;&gt;SEARCH ALL&lt;/a&gt;) and the table-based&lt;code&gt;SORT&lt;/code&gt;(see &lt;a href=&quot;#Table-SORT&quot;&gt;Table SORT&lt;/a&gt;)) require you to index the affected table and to utilize that index with those statements. With any other references to tables, the choice is left to the programmer as to which approach should be used. In general, follow these rules:</source>
          <target state="translated">いくつかのCOBOL文 &lt;code&gt;SEARCH&lt;/code&gt; （参照&lt;a href=&quot;#SEARCH&quot;&gt;の検索&lt;/a&gt;）、 &lt;code&gt;SEARCH ALL&lt;/code&gt; （参照&lt;a href=&quot;#SEARCH-ALL&quot;&gt;SEARCH ALLを&lt;/a&gt;）とテーブルベースの &lt;code&gt;SORT&lt;/code&gt; （参照&lt;a href=&quot;#Table-SORT&quot;&gt;表SORTを&lt;/a&gt;））インデックスに影響を受けた表を、あなたを必要とし、それらのステートメントでそのインデックスを利用します。テーブルへのその他の参照については、どのアプローチを使用するかはプログラマーに任されています。一般に、次のルールに従います。</target>
        </trans-unit>
        <trans-unit id="5b22dce4738b4f157ef592f9314c98adc75d5f43" translate="yes" xml:space="preserve">
          <source>Some COBOL statements have a</source>
          <target state="translated">いくつかのCOBOL文には</target>
        </trans-unit>
        <trans-unit id="fb0c0f69dc4186cb9681a9a690539b79e8d8f41b" translate="yes" xml:space="preserve">
          <source>Some COBOL statements have a &quot;scope of applicability&quot; associated with them where one or more other statements can be considered to be part of or related to the statement in question. An example of such a situation might be the following, where the interest on a loan is being calculated and displayed &amp;mdash; 4% interest if the loan balance is under $10000 and 4.5% otherwise (WARNING &amp;ndash; the following code has an error!):</source>
          <target state="translated">一部のCOBOLステートメントには「適用範囲」が関連付けられており、1つ以上の他のステートメントが問題のステートメントの一部であるか、関連していると見なすことができます。このような状況の例は次のようになります。ここで、ローンの利息が計算されて表示されます。ローン残高が$ 10000未満の場合は4％、それ以外の場合は4.5％（警告&amp;ndash;次のコードにエラーがあります！）</target>
        </trans-unit>
        <trans-unit id="3073aa8624bbdd57793c5724e51d18d4e3c40b8b" translate="yes" xml:space="preserve">
          <source>Some CPUs &amp;mdash; such as the Intel/AMD i386/x64 architecture processors used in most Windows PCs &amp;mdash; prefer to process binary data stored in a little-endian format. Since that format is more efficient on those systems, it is referred to as the</source>
          <target state="translated">一部のCPU（ほとんどのWindowsPCで使用されているIntel / AMD i386 / x64アーキテクチャプロセッサなど）は、リトルエンディアン形式で格納されたバイナリデータを処理することを好みます。そのフォーマットはそれらのシステムでより効率的であるため、それは</target>
        </trans-unit>
        <trans-unit id="9df4c4d5334a475fece7d66e11d3c3ddac824f97" translate="yes" xml:space="preserve">
          <source>Some CPUs  such as the Intel/AMD i386/x64 architecture processors used in most Windows PCs  prefer to process binary data stored in a little-endian format. Since that format is more efficient on those systems, it is referred to as the&lt;code&gt;native&lt;/code&gt;binary format.</source>
          <target state="translated">ほとんどのWindows PCで使用されているIntel / AMD i386 / x64アーキテクチャプロセッサなどの一部のCPUは、リトルエンディアン形式で格納されたバイナリデータの処理を好みます。これらのシステムではその形式がより効率的であるため、 &lt;code&gt;native&lt;/code&gt; バイナリ形式と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="38550f9056e86e4d797738185be0b86af3597727" translate="yes" xml:space="preserve">
          <source>Some may prefer to compile their GnuCOBOL main programs into these dynamically-loadable modules in the interests of using the same general compilation command for all programs without having to think &quot;Is it a main program or a subprogram?&quot;.</source>
          <target state="translated">メインプログラムなのかサブプログラムなのか」を考えることなく、すべてのプログラムに同じ一般的なコンパイルコマンドを使うことができるように、GnuCOBOLのメインプログラムをこれらの動的にロード可能なモジュールにコンパイルすることを好む人もいるかもしれません。</target>
        </trans-unit>
        <trans-unit id="f096c98e643d6f5d47f6aa7bcecb17cc7792ce37" translate="yes" xml:space="preserve">
          <source>Some may prefer to compile their GnuCOBOL main programs into these dynamically-loadable modules in the interests of using the same general compilation command for all programs without having to think &amp;ldquo;Is it a main program or a subprogram?&amp;rdquo;.</source>
          <target state="translated">「メインプログラムなのかサブプログラムなのか」を考えずに、すべてのプログラムに同じ一般的なコンパイルコマンドを使用するために、GnuCOBOLメインプログラムをこれらの動的にロード可能なモジュールにコンパイルすることを好む人もいます。</target>
        </trans-unit>
        <trans-unit id="5a1fb85663d128d59abcf9635115d32fc5c135b3" translate="yes" xml:space="preserve">
          <source>Some of the original call-by-number routines never evolved call-by-name equivalents; GnuCOBOL supports some of these routines.</source>
          <target state="translated">元々の call-by-number ルーチンの中には、name-by-name ルーチンと同等のものが進化していないものもあります。</target>
        </trans-unit>
        <trans-unit id="d9a38b51a9ed8d9aa72530a6f73c2e911f49b3d5" translate="yes" xml:space="preserve">
          <source>Sometimes the quest for improved programmer productivity (and therefore reduced programming</source>
          <target state="translated">プログラマーの生産性を向上させるために(つまり、プログラミングを減らすために)追求することがあります。</target>
        </trans-unit>
        <trans-unit id="5b72a236d81d3118037bf4abca92414a93e598e5" translate="yes" xml:space="preserve">
          <source>Sort/merge work files should be assigned to &lt;code&gt;DISK&lt;/code&gt; (or &lt;code&gt;DISC&lt;/code&gt;) on their &lt;code&gt;SELECT&lt;/code&gt; statements.</source>
          <target state="translated">ソート/マージ作業ファイルは、 &lt;code&gt;SELECT&lt;/code&gt; ステートメントで &lt;code&gt;DISK&lt;/code&gt; （または &lt;code&gt;DISC&lt;/code&gt; ）に割り当てる必要があります。</target>
        </trans-unit>
        <trans-unit id="3ce8ecca6ac372b2671a4b175cfc95f43e37cda4" translate="yes" xml:space="preserve">
          <source>Sort/merge work files should be assigned to&lt;code&gt;DISK&lt;/code&gt;(or&lt;code&gt;DISC&lt;/code&gt; on their&lt;code&gt;SELECT&lt;/code&gt;statements.</source>
          <target state="translated">ソート/マージ作業ファイルは、 &lt;code&gt;SELECT&lt;/code&gt; ステートメントの &lt;code&gt;DISK&lt;/code&gt; （または &lt;code&gt;DISC&lt;/code&gt; )に割り当てる必要があります。</target>
        </trans-unit>
        <trans-unit id="181cdd056b8d00c3943fec61de5bb0e8654421f5" translate="yes" xml:space="preserve">
          <source>Sorts and merges will be performed in memory, if the amount of data being sorted allows.</source>
          <target state="translated">ソートとマージは、ソートされるデータの量が許す限り、メモリ内で実行されます。</target>
        </trans-unit>
        <trans-unit id="489383c4ee164ec5ed5cea2619852156b1d2a469" translate="yes" xml:space="preserve">
          <source>Source Mode &amp;mdash; Description</source>
          <target state="translated">ソースモード&amp;mdash;説明</target>
        </trans-unit>
        <trans-unit id="9e13332d21eba49e8089bdc8abaea2f5ea8ebf3d" translate="yes" xml:space="preserve">
          <source>Spaces cannot be included in primary entry-point names and therefore should not be included in program file names.</source>
          <target state="translated">スペースはプライマリエントリポイント名に含めることができないため、プログラムファイル名に含めるべきではありません。</target>
        </trans-unit>
        <trans-unit id="ed55e29dafc932b11e4821a2bb2579422ef1545b" translate="yes" xml:space="preserve">
          <source>Special Registers</source>
          <target state="translated">特殊レジスタ</target>
        </trans-unit>
        <trans-unit id="b475069bb5d03f66e3620c012d1dc9b060e18337" translate="yes" xml:space="preserve">
          <source>Special data items that are automatically defined for your use by the GnuCOBOL compiler. See &lt;a href=&quot;#Special-Registers&quot;&gt;Special Registers&lt;/a&gt;, for a complete list.</source>
          <target state="translated">GnuCOBOLコンパイラーが使用するために自動的に定義される特別なデータ項目。完全なリストについては、&lt;a href=&quot;#Special-Registers&quot;&gt;特殊レジスターを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="92f4028fdf3721f3d46dcb7d44bdba4b099e1ade" translate="yes" xml:space="preserve">
          <source>Specification of an &lt;code&gt;INVALID KEY&lt;/code&gt; clause will allow your program to trap an I/O failure condition (with an I/O error code in the file&amp;rsquo;s &lt;code&gt;FILE-STATUS&lt;/code&gt; (see &lt;a href=&quot;#SELECT&quot;&gt;SELECT&lt;/a&gt;) field) that has occurred due to a record-not-found condition and handle it gracefully by executing &lt;var&gt;imperative-statement-1&lt;/var&gt; (see &lt;a href=&quot;#Imperative-Statement&quot;&gt;Imperative Statement&lt;/a&gt;).</source>
          <target state="translated">仕様 &lt;code&gt;INVALID KEY&lt;/code&gt; の句は、トラップに（ファイルの中にI / Oエラーコードを使用してI / O障害状態にプログラムできるようになります &lt;code&gt;FILE-STATUS&lt;/code&gt; （参照&lt;a href=&quot;#SELECT&quot;&gt;SELECTを&lt;/a&gt;伴う記録-見つからない状態に発生した）フィールド）そして、 &lt;var&gt;imperative-statement-1&lt;/var&gt; を実行することによってそれを適切に処理します（&lt;a href=&quot;#Imperative-Statement&quot;&gt;Imperative Statementを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="951ca5a73616e8583d8c3f86ed17472460bfdc27" translate="yes" xml:space="preserve">
          <source>Specification of an exception clause will allow your program to trap a failure condition that has occurred and handle it gracefully by executing &amp;lt;</source>
          <target state="translated">例外句を指定すると、プログラムは発生した障害状態をトラップし、&amp;lt;を実行して正常に処理できます。</target>
        </trans-unit>
        <trans-unit id="177449fe06bee4a9812ed9f138b15c62b238ba3c" translate="yes" xml:space="preserve">
          <source>Specification of an exception clause will allow your program to trap a failure condition that has occurred and handle it gracefully by executing &lt;var&gt;imperative-statement-1&lt;/var&gt; (see &lt;a href=&quot;#Imperative-Statement&quot;&gt;Imperative Statement&lt;/a&gt;). If such a condition occurs at runtime without having one of these clauses specified, an error message will be generated (by the GnuCOBOL runtime library) to the &lt;code&gt;SYSERR&lt;/code&gt; device (pipe 2). The program may also be terminated, depending upon the type and severity of the error.</source>
          <target state="translated">例外句を指定すると、プログラムは発生した障害状態をトラップし、 &lt;var&gt;imperative-statement-1&lt;/var&gt; を実行することで適切に処理できます（&lt;a href=&quot;#Imperative-Statement&quot;&gt;Imperative Statementを&lt;/a&gt;参照）。これらの句のいずれかを指定せずに実行時にこのような状態が発生した場合、エラーメッセージが（GnuCOBOLランタイムライブラリによって） &lt;code&gt;SYSERR&lt;/code&gt; デバイス（パイプ2）に生成されます。エラーの種類と重大度によっては、プログラムが終了する場合もあります。</target>
        </trans-unit>
        <trans-unit id="2ff4b0f98e4425a1d9af2c678aab3288763e69ca" translate="yes" xml:space="preserve">
          <source>Specification of an&lt;code&gt;INVALID KEY&lt;/code&gt;clause will allow your program to trap an I/O failure condition (with an I/O error code in the file&amp;rsquo;s&lt;code&gt;FILE-STATUS&lt;/code&gt;(see &lt;a href=&quot;#SELECT&quot;&gt;SELECT&lt;/a&gt;) field) that has occurred due to a record-not-found condition and handle it gracefully by executing &amp;lt;</source>
          <target state="translated">仕様 &lt;code&gt;INVALID KEY&lt;/code&gt; の句は、トラップに（ファイルの中にI / Oエラーコードを使用してI / O障害状態にプログラムできるようになります &lt;code&gt;FILE-STATUS&lt;/code&gt; （参照&lt;a href=&quot;#SELECT&quot;&gt;SELECTを&lt;/a&gt;伴う記録-見つからない状態に発生した）フィールド）そして&amp;lt;を実行することでそれを優雅に扱います</target>
        </trans-unit>
        <trans-unit id="8bd45cf9f886c436a484da6198a1bc68ce48be1e" translate="yes" xml:space="preserve">
          <source>Specifying a &lt;code&gt;LINAGE&lt;/code&gt; clause in an &lt;code&gt;FD&lt;/code&gt; will cause the   &lt;code&gt;LINAGE-COUNTER&lt;/code&gt; special register to be created for the file. This automatically-created data item will always contain the current relative line number on the page being prepared which will serve as the starting point for a &lt;code&gt;WRITE&lt;/code&gt; statement.</source>
          <target state="translated">指定 &lt;code&gt;LINAGE&lt;/code&gt; の中句 &lt;code&gt;FD&lt;/code&gt; は発生します &lt;code&gt;LINAGE-COUNTER&lt;/code&gt; ファイルを作成する特殊レジスタを。この自動的に作成されたデータ項目には、準備中のページの現在の相対行番号が常に含まれ、 &lt;code&gt;WRITE&lt;/code&gt; ステートメントの開始点として機能します。</target>
        </trans-unit>
        <trans-unit id="e3c9191817281588c815a068ade17b41d296154b" translate="yes" xml:space="preserve">
          <source>Specifying a&lt;code&gt;LINAGE&lt;/code&gt;clause in an&lt;code&gt;FD&lt;/code&gt;will cause the&lt;code&gt;LINAGE-COUNTER&lt;/code&gt;special register to be created for the file. This automatically-created data item will always contain the current relative line number on the page being prepared which will serve as the starting point for a&lt;code&gt;WRITE&lt;/code&gt;statement.</source>
          <target state="translated">指定 &lt;code&gt;LINAGE&lt;/code&gt; の中句 &lt;code&gt;FD&lt;/code&gt; は発生します &lt;code&gt;LINAGE-COUNTER&lt;/code&gt; ファイルを作成する特殊レジスタを。この自動的に作成されたデータ項目には、常に、準備中のページの現在の相対行番号が含まれ、 &lt;code&gt;WRITE&lt;/code&gt; ステートメントの開始点として機能します。</target>
        </trans-unit>
        <trans-unit id="3fb12382997025a330688fcc8fa6bba9e89dc5fb" translate="yes" xml:space="preserve">
          <source>Square bracket meta characters on syntax diagrams document language syntax that is optional. The [] characters themselves should not be coded. If a syntax diagram contains &quot;a [b] c&quot;, the &quot;a&quot; and &quot;c&quot; syntax elements are mandatory but the &quot;b&quot; element is optional.</source>
          <target state="translated">構文図上の四角括弧メタ文字は、オプションである言語構文を文書化します。文字自体はコード化されるべきではありません。構文図に &quot;a [b]c &quot;が含まれている場合、&quot;a &quot;と &quot;c &quot;の構文要素は必須ですが、&quot;b &quot;要素はオプションです。</target>
        </trans-unit>
        <trans-unit id="1760705430d27e319ba6ad1b31fabee6130ae944" translate="yes" xml:space="preserve">
          <source>Square bracket meta characters on syntax diagrams document language syntax that is optional. The [] characters themselves should not be coded. If a syntax diagram contains &amp;lsquo;</source>
          <target state="translated">シンタックスダイアグラムの角括弧メタ文字は、オプションの言語構文を文書化します。[]文字自体はコーディングしないでください。シンタックスダイアグラムに 'が含まれている場合</target>
        </trans-unit>
        <trans-unit id="89ccdc56e323f98c63656e35f5fbaa819e99b2e2" translate="yes" xml:space="preserve">
          <source>Start everything defined in local-storage with &quot;LS-&quot;</source>
          <target state="translated">ローカルストレージに定義されているすべてのものを &quot;LS-&quot;で起動します。</target>
        </trans-unit>
        <trans-unit id="eb2bb9b0f5e185045973928cc73818887e8ed610" translate="yes" xml:space="preserve">
          <source>Start everything defined in local-storage with &amp;ldquo;LS-&amp;rdquo;</source>
          <target state="translated">ローカルストレージで定義されているすべてのものを「LS-」で開始します</target>
        </trans-unit>
        <trans-unit id="e1a334460a50c63866143c2bcb289cda69f1521d" translate="yes" xml:space="preserve">
          <source>Start everything defined in the file section with &quot;F-&quot;</source>
          <target state="translated">ファイルセクションで定義されているすべてのものを &quot;F-&quot;で起動します。</target>
        </trans-unit>
        <trans-unit id="f89ba21e5b311d4563e58bd6b3089cd1f7f18c91" translate="yes" xml:space="preserve">
          <source>Start everything defined in the file section with &amp;ldquo;F-&amp;rdquo;</source>
          <target state="translated">ファイルセクションで定義されているすべてを「F-」で開始します</target>
        </trans-unit>
        <trans-unit id="9cec1a7d3c5f2c2947b6d1e7fa5c83fd8313a211" translate="yes" xml:space="preserve">
          <source>Start everything defined in the linkage section with &quot;L-&quot;</source>
          <target state="translated">リンクセクションで定義されているすべてのものを &quot;L-&quot;で開始します。</target>
        </trans-unit>
        <trans-unit id="a7a282b75e5f1cfaee41900afa26fe67aa4721b6" translate="yes" xml:space="preserve">
          <source>Start everything defined in the linkage section with &amp;ldquo;L-&amp;rdquo;</source>
          <target state="translated">リンケージセクションで定義されているすべてを「L-」で開始します</target>
        </trans-unit>
        <trans-unit id="edfb566db3b78c59979e9964596bd66f65e73213" translate="yes" xml:space="preserve">
          <source>Start everything defined in the report section with &quot;R-&quot;</source>
          <target state="translated">レポートセクションで定義されているすべてのものを &quot;R-&quot;で開始します。</target>
        </trans-unit>
        <trans-unit id="23a2552238b65ee12efa041994dbcd6d117578aa" translate="yes" xml:space="preserve">
          <source>Start everything defined in the report section with &amp;ldquo;R-&amp;rdquo;</source>
          <target state="translated">レポートセクションで定義されているすべてを「R-」で開始します</target>
        </trans-unit>
        <trans-unit id="7d6cae6dd514bccc9d72546b58cffd5203aaf53d" translate="yes" xml:space="preserve">
          <source>Start everything defined in the screen section with &quot;S-&quot;</source>
          <target state="translated">画面セクションで定義されているすべてのものを &quot;S-&quot;で起動します。</target>
        </trans-unit>
        <trans-unit id="c5e38a75b0fe059989ef5fa2a558e5988f260f95" translate="yes" xml:space="preserve">
          <source>Start everything defined in the screen section with &amp;ldquo;S-&amp;rdquo;</source>
          <target state="translated">画面セクションで定義されているすべてを「S-」で開始します</target>
        </trans-unit>
        <trans-unit id="d794a0ab7bd5ca758c77608d1a7e4499d174230f" translate="yes" xml:space="preserve">
          <source>Start everything defined in working-storage with &quot;WS-&quot;</source>
          <target state="translated">WS-&quot;でワーキングストレージに定義されているすべてのものを起動します。</target>
        </trans-unit>
        <trans-unit id="e07339729515c7e21f635c496a81b068f686f3f8" translate="yes" xml:space="preserve">
          <source>Start everything defined in working-storage with &amp;ldquo;WS-&amp;rdquo;</source>
          <target state="translated">作業用ストレージで定義されているすべてのものを「WS-」で開始します</target>
        </trans-unit>
        <trans-unit id="a72ca256dc49e55a1a57b9a727fbde9834c9a3f7" translate="yes" xml:space="preserve">
          <source>Statement</source>
          <target state="translated">Statement</target>
        </trans-unit>
        <trans-unit id="c39d2034c8d11d82a7a2a3f44c3ed8b06f3647b5" translate="yes" xml:space="preserve">
          <source>Static Subprogram</source>
          <target state="translated">静的副プログラム</target>
        </trans-unit>
        <trans-unit id="a9ae3455ed4d77cffa9454ba5d34b0442c69f348" translate="yes" xml:space="preserve">
          <source>Static-linkable form</source>
          <target state="translated">静的リンク可能なフォーム</target>
        </trans-unit>
        <trans-unit id="3eefe19a6db5e7e71ce7dfa1947d7ac7029d849b" translate="yes" xml:space="preserve">
          <source>Sticky linkage (linkage section items remaining allocated between invocations) is</source>
          <target state="translated">ベタベタリンク(呼び出しの間にリンク部の項目が割り当てられたままになっている)は</target>
        </trans-unit>
        <trans-unit id="2a77d3a28d7db638022aca2fc47d8d3cc7cd350f" translate="yes" xml:space="preserve">
          <source>Sticky linkage (linkage section items remaining allocated between invocations) is active.</source>
          <target state="translated">ベタベタ連動(呼び出し間に連動部の項目が割り当てられたままになっている)が有効になっています。</target>
        </trans-unit>
        <trans-unit id="97674125b37eaddcf0087ccb755f7533a5c89a44" translate="yes" xml:space="preserve">
          <source>Sticky-linkage (linkage-section items remaining allocated between invocations) is enabled.</source>
          <target state="translated">付箋連結(呼び出し間に連結区間の項目が残っている)を有効にしました。</target>
        </trans-unit>
        <trans-unit id="ff062f96dc1df91e5c796406182c7ddc394a5e00" translate="yes" xml:space="preserve">
          <source>Sticky-linkage (linkage-section items remaining allocated between invocations) is not enabled.</source>
          <target state="translated">スティッキーリンク(呼び出しの間に割り当てられたリンク区間の項目が残っている)が有効になっていません。</target>
        </trans-unit>
        <trans-unit id="dfcef9f75eb7dd61beea9259f4e7c9e8945c543c" translate="yes" xml:space="preserve">
          <source>Storage Format:</source>
          <target state="translated">ストレージ形式。</target>
        </trans-unit>
        <trans-unit id="42f036f0002bc8f4898250e0d9f2151320e13a16" translate="yes" xml:space="preserve">
          <source>String-Clause</source>
          <target state="translated">String-Clause</target>
        </trans-unit>
        <trans-unit id="610e80bb94900da3f5e97068e213f2ca2b1715df" translate="yes" xml:space="preserve">
          <source>Strings enclosed in double-quote characters (&quot;) will be treated as a single argument, regardless of how many spaces or tab characters (if any) might be embedded within those quotation characters.</source>
          <target state="translated">ダブルクォーテーション文字(&quot;)で囲まれた文字列は、それらのクォーテーション文字の中にスペースやタブ文字(もしあれば)が何個埋め込まれていようとも、単一の引数として扱われます。</target>
        </trans-unit>
        <trans-unit id="fa14d8f1591eda6c75bbb98390478141cd78f1ac" translate="yes" xml:space="preserve">
          <source>Strings enclosed in double-quote characters (&amp;lsquo;</source>
          <target state="translated">二重引用符で囲まれた文字列（ '</target>
        </trans-unit>
        <trans-unit id="8ea2553a31b788157b73395943c919cc222d5603" translate="yes" xml:space="preserve">
          <source>Submitting a command to the shell environment appropriate for the version of GnuCOBOL you are using for execution</source>
          <target state="translated">実行に使用しているGnuCOBOLのバージョンに応じたシェル環境へのコマンドの提出</target>
        </trans-unit>
        <trans-unit id="202a02ec26bf87caf0fe72d9cf37185be4172ca5" translate="yes" xml:space="preserve">
          <source>Subprogram</source>
          <target state="translated">Subprogram</target>
        </trans-unit>
        <trans-unit id="52ebf9910454677c51e370d3c50ad494b952c8c3" translate="yes" xml:space="preserve">
          <source>Subprogram &quot;B&quot; may be nested inside program &quot;A&quot; by including program B&amp;rsquo;s source code at the end of program A&amp;rsquo;s procedure division without an intervening&lt;code&gt;END PROGRAM A.&lt;/code&gt;or&lt;code&gt;END FUNCTION A.&lt;/code&gt;statement. For now, that&amp;rsquo;s all that will be said about nesting. See &lt;a href=&quot;#Independent-vs-Contained-vs-Nested-Subprograms&quot;&gt;Independent vs Contained vs Nested Subprograms&lt;/a&gt;, for more information.</source>
          <target state="translated">&lt;code&gt;END PROGRAM A.&lt;/code&gt; または &lt;code&gt;END FUNCTION A.&lt;/code&gt; ステートメントを介在させずに、プログラムAの手続き部の最後にプログラムBのソースコードを含めることにより、サブプログラム &quot;B&quot;をプログラム &quot;A&quot;内にネストできます。とりあえず、ネストについては以上です。詳細については、&lt;a href=&quot;#Independent-vs-Contained-vs-Nested-Subprograms&quot;&gt;独立型と包含型のサブプログラム&lt;/a&gt;とネストされたサブプログラムを参照してください。</target>
        </trans-unit>
        <trans-unit id="58799dc91346da4c88256bfcfeab27e814162185" translate="yes" xml:space="preserve">
          <source>Subprogram &amp;lsquo;</source>
          <target state="translated">サブプログラム '</target>
        </trans-unit>
        <trans-unit id="5f041b3b26073b44aaedd78af7207b2cb692fa21" translate="yes" xml:space="preserve">
          <source>Subprograms (either subroutines or user-defined functions) can be implemented in three different ways.</source>
          <target state="translated">サブプログラム(サブルーチンまたはユーザー定義関数)は、3つの異なる方法で実装することができます。</target>
        </trans-unit>
        <trans-unit id="d1889bba143969c108d68eb72184e742c5e04cfb" translate="yes" xml:space="preserve">
          <source>Subroutine</source>
          <target state="translated">Subroutine</target>
        </trans-unit>
        <trans-unit id="58802942db0b555fec26b47d260b0bbf15c56086" translate="yes" xml:space="preserve">
          <source>Subscript out of bounds</source>
          <target state="translated">境界線外のサブスクリプト</target>
        </trans-unit>
        <trans-unit id="76b0f8f5e3eafb5efd52e8814f9a8a2f7acebe13" translate="yes" xml:space="preserve">
          <source>Subscripting</source>
          <target state="translated">Subscripting</target>
        </trans-unit>
        <trans-unit id="3523493d2845761109c102ef91fdabfa8f15f8f9" translate="yes" xml:space="preserve">
          <source>Subscripting is the process of referencing an element of a table utilizing either a numeric constant or an unedited numeric data item to select the desired occurrence.</source>
          <target state="translated">添え字とは、数値定数または編集されていない数値データ項目を使用して表の要素を参照し、目的のオカレンスを選択するプロセスです。</target>
        </trans-unit>
        <trans-unit id="2e620482345468100545d7d9e9b05c0300a4d844" translate="yes" xml:space="preserve">
          <source>Subscripts may be specified as numeric (integer) literals, numeric (integer) data items, data items created with any of the picture-less integer &lt;code&gt;USAGE&lt;/code&gt; (see &lt;a href=&quot;#USAGE&quot;&gt;USAGE&lt;/a&gt;) specifications, &lt;code&gt;USAGE INDEX&lt;/code&gt; data items or arithmetic expressions resulting in a non-zero integer value.</source>
          <target state="translated">添え字は、数値（整数）リテラル、数値（整数）データ項目、画像のない整数 &lt;code&gt;USAGE&lt;/code&gt; （&lt;a href=&quot;#USAGE&quot;&gt;USAGEを&lt;/a&gt;参照）仕様のいずれかで作成されたデータ項目、 &lt;code&gt;USAGE INDEX&lt;/code&gt; データ項目、またはゼロ以外の整数になる算術式として指定できます。値。</target>
        </trans-unit>
        <trans-unit id="58cafd262f4d9e094951b7c057b4cad08ca57a0d" translate="yes" xml:space="preserve">
          <source>Subscripts may be specified as numeric (integer) literals, numeric (integer) data items, data items created with any of the picture-less integer&lt;code&gt;USAGE&lt;/code&gt;(see &lt;a href=&quot;#USAGE&quot;&gt;USAGE&lt;/a&gt;) specifications,&lt;code&gt;USAGE INDEX&lt;/code&gt;data items or arithmetic expressions resulting in a non-zero integer value.</source>
          <target state="translated">添え字は、数値（整数）リテラル、数値（整数）データ項目、ピクチャのない整数 &lt;code&gt;USAGE&lt;/code&gt; （&lt;a href=&quot;#USAGE&quot;&gt;USAGEを&lt;/a&gt;参照）仕様で作成されたデータ項目、 &lt;code&gt;USAGE INDEX&lt;/code&gt; データ項目、またはゼロ以外の整数となる算術式として指定できます。値。</target>
        </trans-unit>
        <trans-unit id="994fca5573aaaa88d93ab58a580aceb006b894f4" translate="yes" xml:space="preserve">
          <source>Substitution of a single sub string with another of the same length, based upon the sub strings starting character position and length</source>
          <target state="translated">単一のサブ文字列を、サブ文字列の開始文字位置と長さに基づいて、同じ長さの別のサブ文字列に置換します。</target>
        </trans-unit>
        <trans-unit id="f19bc61f20fe57f3b1d4460524593042ed8c7b0e" translate="yes" xml:space="preserve">
          <source>Substitution of one or more sub strings in a string with replacement sub strings of a potentially different length, regardless of where they occur</source>
          <target state="translated">文字列の中の1つ以上の部分文字列を、どこで発生したかに関わらず、長さが異なる可能性のある置換部分文字列で置換します。</target>
        </trans-unit>
        <trans-unit id="16bec54817327721d3632d9305434a023b13b1c9" translate="yes" xml:space="preserve">
          <source>Substitution of one or more sub strings in a string with replacement sub strings of the same length, regardless of where they occur</source>
          <target state="translated">文字列の中の1つ以上の副文字列を、同じ長さの副文字列で置換します。</target>
        </trans-unit>
        <trans-unit id="42a8f651d79fd005eeac0612df6442b983a01184" translate="yes" xml:space="preserve">
          <source>Success</source>
          <target state="translated">Success</target>
        </trans-unit>
        <trans-unit id="95c1cefa2242449ff0c6e9b76518e25b94853944" translate="yes" xml:space="preserve">
          <source>Success (Duplicate Record Key Written)</source>
          <target state="translated">成功(レコードキーの複製が書き込まれた</target>
        </trans-unit>
        <trans-unit id="2bae8593493faa95fc274d56fb0f56d1074f19a4" translate="yes" xml:space="preserve">
          <source>Success (Incomplete)</source>
          <target state="translated">成功(不完全</target>
        </trans-unit>
        <trans-unit id="66c27e800ef6815ddb5314c0883d6b619fc07bfb" translate="yes" xml:space="preserve">
          <source>Success (No Unit)</source>
          <target state="translated">成功(単位なし</target>
        </trans-unit>
        <trans-unit id="7843628755fdcace8f2c62d0842df66017b6258a" translate="yes" xml:space="preserve">
          <source>Success (Optional File Not Found)</source>
          <target state="translated">成功(オプションのファイルが見つかりません</target>
        </trans-unit>
        <trans-unit id="33153a6b2063a39aab251bbc86628e7422e22418" translate="yes" xml:space="preserve">
          <source>Suggestion: use a copybook to describe the record layouts of any file; this guarantees that multiple programs accessing that file will &quot;see&quot; the same record sizes and layouts by coding a&lt;code&gt;COPY&lt;/code&gt;statement (see &lt;a href=&quot;#COPY&quot;&gt;COPY&lt;/a&gt;) to import the record layout(s) rather than hand-coding them.</source>
          <target state="translated">提案：コピーブックを使用して、ファイルのレコードレイアウトを説明します。複数のプログラムがそのファイルにアクセスすることは、この保証は、符号化することにより、同じレコードのサイズとレイアウト「を参照してください」になる &lt;code&gt;COPY&lt;/code&gt; （参照文を&lt;a href=&quot;#COPY&quot;&gt;COPYを&lt;/a&gt;記録レイアウト（複数可）のではなく、手コーディングインポートします）。</target>
        </trans-unit>
        <trans-unit id="6c580018a28048b5bfdeb3575d788d77d34a29d1" translate="yes" xml:space="preserve">
          <source>Suggestion: use a copybook to describe the record layouts of any file; this guarantees that multiple programs accessing that file will &amp;ldquo;see&amp;rdquo; the same record sizes and layouts by coding a &lt;code&gt;COPY&lt;/code&gt; statement (see &lt;a href=&quot;#COPY&quot;&gt;COPY&lt;/a&gt;) to import the record layout(s) rather than hand-coding them.</source>
          <target state="translated">提案：コピーブックを使用して、任意のファイルのレコードレイアウトを記述します。複数のプログラムがそのファイルにアクセスすることは、この保証は、符号化することにより、同じレコードのサイズとレイアウト「を参照してください」になる &lt;code&gt;COPY&lt;/code&gt; （参照文を&lt;a href=&quot;#COPY&quot;&gt;COPYを&lt;/a&gt;記録レイアウト（複数可）のではなく、手コーディングインポートします）。</target>
        </trans-unit>
        <trans-unit id="a38af8d3e6886e6fbc84a1a535b9ce13c8e0c4f5" translate="yes" xml:space="preserve">
          <source>Summary Report</source>
          <target state="translated">サマリーレポート</target>
        </trans-unit>
        <trans-unit id="b87ab47a9a2763a975c8e97c613f198c02e4f487" translate="yes" xml:space="preserve">
          <source>Support for national character sets in GnuCOBOL is currently only partially implemented, and the compile- and run-time effect of using the &lt;code&gt;N&lt;/code&gt; symbol in a &lt;code&gt;PICTURE&lt;/code&gt; (see &lt;a href=&quot;#PICTURE&quot;&gt;PICTURE&lt;/a&gt;) clause to define a field as containing national characters is the same as if &lt;code&gt;X(2)&lt;/code&gt; had been coded, with the additional effect that such a field will qualify as a &lt;code&gt;NATIONAL&lt;/code&gt; or &lt;code&gt;NATIONAL-EDITED&lt;/code&gt; field on an &lt;code&gt;INITIALIZE&lt;/code&gt; (see &lt;a href=&quot;#INITIALIZE&quot;&gt;INITIALIZE&lt;/a&gt;) statement.</source>
          <target state="translated">GnuCOBOLでの各国文字セットのサポートは現在部分的にのみ実装されており、 &lt;code&gt;PICTURE&lt;/code&gt; （&lt;a href=&quot;#PICTURE&quot;&gt;PICTUREを&lt;/a&gt;参照）句で &lt;code&gt;N&lt;/code&gt; 記号を使用してフィールドを各国文字を含むものとして定義するコンパイル時および実行時の効果は、 &lt;code&gt;X(2)&lt;/code&gt; コーディングされていましたが、そのようなフィールドは &lt;code&gt;INITIALIZE&lt;/code&gt; （&lt;a href=&quot;#INITIALIZE&quot;&gt;INITIALIZEを&lt;/a&gt;参照）ステートメントで &lt;code&gt;NATIONAL&lt;/code&gt; または &lt;code&gt;NATIONAL-EDITED&lt;/code&gt; フィールドとして修飾されるという追加の効果があります。</target>
        </trans-unit>
        <trans-unit id="18cbddbe89e9462ebd808e11380e474f148057f8" translate="yes" xml:space="preserve">
          <source>Support for national character sets in GnuCOBOL is currently only partially implemented, and the compile- and run-time effect of using the&lt;code&gt;N&lt;/code&gt;symbol in a&lt;code&gt;PICTURE&lt;/code&gt;(see &lt;a href=&quot;#PICTURE&quot;&gt;PICTURE&lt;/a&gt;) clause to define a field as containing national characters is the same as if&lt;code&gt;X(2)&lt;/code&gt;had been coded, with the additional effect that such a field will qualify as a&lt;code&gt;NATIONAL&lt;/code&gt;or&lt;code&gt;NATIONAL-EDITED&lt;/code&gt;field on an&lt;code&gt;INITIALIZE&lt;/code&gt;(see &lt;a href=&quot;#INITIALIZE&quot;&gt;INITIALIZE&lt;/a&gt;) statement.</source>
          <target state="translated">GnuCOBOLでの国別文字セットのサポートは現在部分的にのみ実装されており、 &lt;code&gt;PICTURE&lt;/code&gt; （&lt;a href=&quot;#PICTURE&quot;&gt;PICTUREを&lt;/a&gt;参照）節で &lt;code&gt;N&lt;/code&gt; 記号を使用して国別文字を含むフィールドを定義することによるコンパイル時および実行時の効果は、 &lt;code&gt;X(2)&lt;/code&gt; そのようなフィールドが &lt;code&gt;INITIALIZE&lt;/code&gt; （&lt;a href=&quot;#INITIALIZE&quot;&gt;INITIALIZEを&lt;/a&gt;参照）ステートメントの &lt;code&gt;NATIONAL&lt;/code&gt; または &lt;code&gt;NATIONAL-EDITED&lt;/code&gt; フィールドとして修飾されるという追加の効果により、コード化されていました。</target>
        </trans-unit>
        <trans-unit id="1f40ed62723a237ce40e508931a7aff3fdec1b3c" translate="yes" xml:space="preserve">
          <source>Support for the &lt;code&gt;ALTER&lt;/code&gt; verb has been added to GnuCOBOL for the purpose of enabling GnuCOBOL to pass those National Institute of Standards and Technology (NIST) tests for the COBOL programming language that require support for &lt;code&gt;ALTER&lt;/code&gt;.</source>
          <target state="translated">GnuCOBOLが &lt;code&gt;ALTER&lt;/code&gt; のサポートを必要とするCOBOLプログラミング言語の米国国立標準技術研究所（NIST）のテストに合格できるようにするために、 &lt;code&gt;ALTER&lt;/code&gt; 動詞のサポートがGnuCOBOLに追加されました。</target>
        </trans-unit>
        <trans-unit id="be2eb5fd8af440754ec9d55b0cf8113c3bdec568" translate="yes" xml:space="preserve">
          <source>Support for the&lt;code&gt;ALTER&lt;/code&gt;verb has been added to GnuCOBOL for the purpose of enabling GnuCOBOL to pass those National Institute of Standards and Technology (NIST) tests for the COBOL programming language that require support for&lt;code&gt;ALTER&lt;/code&gt;</source>
          <target state="translated">サポート &lt;code&gt;ALTER&lt;/code&gt; の動詞には、次のサポートが必要ですCOBOLプログラミング言語のためにそれらの国立標準技術研究所（NIST）のテストに合格するGnuCOBOLを可能にする目的のためにGnuCOBOLに追加された &lt;code&gt;ALTER&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="0bf8509ba5ecde4589d8872597ed2ff4969a9a4c" translate="yes" xml:space="preserve">
          <source>Supported</source>
          <target state="translated">Supported</target>
        </trans-unit>
        <trans-unit id="2242dd7b179605b4edfaf01f88f0870d969f667a" translate="yes" xml:space="preserve">
          <source>Switch-Definition-Clause</source>
          <target state="translated">Switch-Definition-Clause</target>
        </trans-unit>
        <trans-unit id="e90e43c18d147807fbe11825c858f376c6a54022" translate="yes" xml:space="preserve">
          <source>Switches are defined using the &lt;code&gt;SPECIAL-NAMES&lt;/code&gt; (see &lt;a href=&quot;#SPECIAL_002dNAMES&quot;&gt;SPECIAL-NAMES&lt;/a&gt;) paragraph.</source>
          <target state="translated">スイッチは、 &lt;code&gt;SPECIAL-NAMES&lt;/code&gt; （&lt;a href=&quot;#SPECIAL_002dNAMES&quot;&gt;SPECIAL-NAMESを&lt;/a&gt;参照）段落を使用して定義されます。</target>
        </trans-unit>
        <trans-unit id="f37335dd0060f12a67182342cc341f3362f6a715" translate="yes" xml:space="preserve">
          <source>Switches are defined using the&lt;code&gt;SPECIAL-NAMES&lt;/code&gt;(see &lt;a href=&quot;#SPECIAL_002dNAMES&quot;&gt;SPECIAL-NAMES&lt;/a&gt;) paragraph.</source>
          <target state="translated">スイッチは &lt;code&gt;SPECIAL-NAMES&lt;/code&gt; （&lt;a href=&quot;#SPECIAL_002dNAMES&quot;&gt;SPECIAL-NAMESを&lt;/a&gt;参照）段落を使用して定義されます。</target>
        </trans-unit>
        <trans-unit id="9330e94681f74696cb8450b77f5a231020bb6ba8" translate="yes" xml:space="preserve">
          <source>Switches may be tested via the &lt;code&gt;IF&lt;/code&gt; statement (see &lt;a href=&quot;#IF&quot;&gt;IF&lt;/a&gt;) and a Switch-Status Condition. See &lt;a href=&quot;#Switch_002dStatus-Conditions&quot;&gt;Switch-Status Conditions&lt;/a&gt;, for more information.</source>
          <target state="translated">スイッチが経由して試験することができる &lt;code&gt;IF&lt;/code&gt; 文の（参照&lt;a href=&quot;#IF&quot;&gt;IFを&lt;/a&gt;）し、スイッチ・ステータス条件。詳細については、&lt;a href=&quot;#Switch_002dStatus-Conditions&quot;&gt;スイッチステータス条件を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1894e80c232a43f8f22c0f6ce7a3d4717a7ae254" translate="yes" xml:space="preserve">
          <source>Switches may be tested via the&lt;code&gt;IF&lt;/code&gt;statement (see &lt;a href=&quot;#IF&quot;&gt;IF&lt;/a&gt;) and a Switch-Status Condition. See &lt;a href=&quot;#Switch_002dStatus-Conditions&quot;&gt;Switch-Status Conditions&lt;/a&gt;, for more information.</source>
          <target state="translated">スイッチが経由して試験することができる &lt;code&gt;IF&lt;/code&gt; 文の（参照&lt;a href=&quot;#IF&quot;&gt;IFを&lt;/a&gt;）し、スイッチ・ステータス条件。詳細については、&lt;a href=&quot;#Switch_002dStatus-Conditions&quot;&gt;Switch-Status Conditionsを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="700222fb1270f971142bcd5fad7e680c99e01f31" translate="yes" xml:space="preserve">
          <source>Symbolic-Characters-Clause</source>
          <target state="translated">Symbolic-Characters-Clause</target>
        </trans-unit>
        <trans-unit id="fddcab9dffe6d8830ccb45a7c8db9b5343c5a3e4" translate="yes" xml:space="preserve">
          <source>Synchronization is performed (by the compiler) as follows:</source>
          <target state="translated">同期は(コンパイラによって)以下のように行われます。</target>
        </trans-unit>
        <trans-unit id="17c7ba7676ad1ad6dd1c4e6b997adcae910262c9" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">Syntax</target>
        </trans-unit>
        <trans-unit id="d96570d426e390b2f9ec7d5ff875227815dd6d57" translate="yes" xml:space="preserve">
          <source>Syntax of the GnuCOBOL language will be described in special</source>
          <target state="translated">GnuCOBOL言語の構文は、特別に</target>
        </trans-unit>
        <trans-unit id="d2b0128b209edde67e3b85be66f7f3f76958a747" translate="yes" xml:space="preserve">
          <source>TABLE, TAB-TO-ADD, TAB-TO-DELETE, TAB, TALLYING, TALLY, TAN, TAPE, TEMPORARY, TERMINATE, TERMINATION-VALUE, TEST-DATE-YYYYMMDD, TEST-DAY-YYYYDDD, TEST-FORMATTED-DATETIME, TEST-NUMVAL-C, TEST-NUMVAL-F, TEST-NUMVAL, TEXT, THAN, THEN, THREADS, THREAD, THROUGH, THRU, THUMB-POSITION, TILED-HEADINGS, TIMEOUT, TIME-OUT, TIMES, TIME, TITLE-POSITION, TITLE, TOP, TOWARD-GREATER, TOWARD-LESSER, TO, TRADITIONAL-FONT, TRAILING-SHIFT, TRAILING-SIGN, TRAILING, TRANSFORM, TRANSPARENT, TREE-VIEW, TRIM, TRUE, TRUNCATION, TYPEDEF, TYPE</source>
          <target state="translated">TABLE、TAB-TO-ADD、TAB-TO-DELETE、TAB、TALLY、TAN、TAPE、TEMPORARY、TERMINATE、TERMINATION-VALUE、TEST-DATE-YYYYMMDD、TEST-DAY-YYYYDDD、TEST-FORMATTED-DATETIME、TEST-NUMVAL-C、TEST-NUMVAL-F、TEST-NUMVAL、TEXT、THAN、THEN、THREADS、THREAD、THROUGH、THRU。サム位置,タイル付き見出し,タイムアウト,タイムアウト,タイム,タイム,タイトル位置,タイトル,トップ,より大きく,より小さく,より小さく,TO,伝統的なフォント,トレーリングシフト,トレーリングサイン,トレーリング,トランスフォーム,トランスパレント,ツリービュー,トリム,TRUE,TRUNCATION,TYPEDEF,タイプ</target>
        </trans-unit>
        <trans-unit id="2e83c6fd9eb7ff73d298792db8b25150926bf35d" translate="yes" xml:space="preserve">
          <source>TABLE, TALLYING, TAN, TAPE, TERMINAL, TERMINATE, TEST, TEST-DATE-YYYYMMDD, TEST-DAY-YYYYDDD, TEST-FORMATTED-DATETIME, TEST-NUMVAL, TEST-NUMVAL-C, TEST-NUMVAL-F, TEXT, THAN, THEN, THROUGH, THRU, TIME, TIME-OUT, TIMEOUT, TIMES, TO, TOP, TOWARD-GREATER, TOWARD-LESSER, TRAILING, TRAILING-SIGN, TRANSFORM, TRIM, TRUE, TRUNCATION, TYPE, TYPEDEF</source>
          <target state="translated">TABLE,TALLYING,TAN,TAPE,TERMINAL,TERMINATE,TEST,TEST-DATE-YYYYMMDD,TEST-DAY-YYYYDDD,TEST-FORMATTED-DATETIME,TEST-NUMVAL,TEST-NUMVAL-C,TEST-NUMVAL-F,TEXT,THAN,THEN,THROUGH,THRU,TIME,TIME-OUT,TIMEOUT,TIMES,TO,TOP,TOWARD-GRATER,TOWARD-LESSER,TRAILING,TRAILING-SIGN,TRANSFORM,TRIM,TRIM,TRUE,TRUNCATION,TYPE,TYPEDEF</target>
        </trans-unit>
        <trans-unit id="60faada67896a97f2ea96cd90b95c7d678d79697" translate="yes" xml:space="preserve">
          <source>TAN Function Syntax</source>
          <target state="translated">TAN関数構文</target>
        </trans-unit>
        <trans-unit id="dfc6eff5e2fd66b59b00c7f06962e5dbe779902e" translate="yes" xml:space="preserve">
          <source>TERMINATE Syntax</source>
          <target state="translated">TERMINATE 構文</target>
        </trans-unit>
        <trans-unit id="984816fd329622876e14907634264e6f332e9fb3" translate="yes" xml:space="preserve">
          <source>TEST</source>
          <target state="translated">TEST</target>
        </trans-unit>
        <trans-unit id="5cee4330239724251591ef17a82ec4b7dab1d2af" translate="yes" xml:space="preserve">
          <source>TEST-DATE-YYYYMMDD Function Syntax</source>
          <target state="translated">TEST-DATE-YYYYMMDD 関数構文</target>
        </trans-unit>
        <trans-unit id="1dbac88ce14883739f91aa7c7b9e26b1a8da1217" translate="yes" xml:space="preserve">
          <source>TEST-DAY-YYYYDDD Function Syntax</source>
          <target state="translated">テストデイ-YYYYDDD 関数構文</target>
        </trans-unit>
        <trans-unit id="d420f5fb068b5cfbe93a3c8b13b78d3c7c8c83d3" translate="yes" xml:space="preserve">
          <source>TEST-FORMATTED-DATETIME Function Syntax</source>
          <target state="translated">TEST-FORMATURED-DATETIME 関数構文</target>
        </trans-unit>
        <trans-unit id="2e5cef966d37067d1842521d6b6c1bf755d5a9aa" translate="yes" xml:space="preserve">
          <source>TEST-NUMVAL Function Syntax</source>
          <target state="translated">TEST-NUMVAL 関数構文</target>
        </trans-unit>
        <trans-unit id="883c9f5d50b2fdb3f38db682764e475839396f64" translate="yes" xml:space="preserve">
          <source>TEST-NUMVAL-C Function Syntax</source>
          <target state="translated">TEST-NUMVAL-C 関数構文</target>
        </trans-unit>
        <trans-unit id="cb253979d4d5e749205bc4953cd6b602e7d76cf2" translate="yes" xml:space="preserve">
          <source>TEST-NUMVAL-F Function Syntax</source>
          <target state="translated">TEST-NUMVAL-F 関数構文</target>
        </trans-unit>
        <trans-unit id="b8d962f5bb90637331652bdd7361911bfa4f11ec" translate="yes" xml:space="preserve">
          <source>THIS</source>
          <target state="translated">THIS</target>
        </trans-unit>
        <trans-unit id="3f3171bcfa41b19b85d240ca0d841f761573f0cd" translate="yes" xml:space="preserve">
          <source>THIS IS A</source>
          <target state="translated">これは</target>
        </trans-unit>
        <trans-unit id="04b2a20a8cc0ccd88af0dc68dadd361fd70529b2" translate="yes" xml:space="preserve">
          <source>TO Clause Syntax</source>
          <target state="translated">TO句構文</target>
        </trans-unit>
        <trans-unit id="2ad446ff3497e3afc345808baff49525fdcb6f06" translate="yes" xml:space="preserve">
          <source>TRANSFORM Syntax</source>
          <target state="translated">トランスフォーム構文</target>
        </trans-unit>
        <trans-unit id="894be5481118c02f19f200a477242c84de1f3bb0" translate="yes" xml:space="preserve">
          <source>TRIM Function Syntax</source>
          <target state="translated">TRIM 関数構文</target>
        </trans-unit>
        <trans-unit id="ecbe476c93ca7878b56e6d7cd5b65ffa34ae1f1e" translate="yes" xml:space="preserve">
          <source>TYPE Clause Syntax</source>
          <target state="translated">TYPE 句構文</target>
        </trans-unit>
        <trans-unit id="aff806d8afcbebfaea8b61c37d9832b5131e8778" translate="yes" xml:space="preserve">
          <source>Table SORT Syntax</source>
          <target state="translated">テーブルSORT構文</target>
        </trans-unit>
        <trans-unit id="c559d775715fd2f56d9888245572042914adbc7f" translate="yes" xml:space="preserve">
          <source>Table references such as example #3 (table indexing) generate object code that falls in the middle of the other two but is far closer in efficiency to example #1 than #2.</source>
          <target state="translated">例3(テーブルのインデックス作成)のようなテーブル参照は、他の2つの中間に位置するオブジェクトコードを生成しますが、効率性では例1の方が例2よりもはるかに近いです。</target>
        </trans-unit>
        <trans-unit id="f66af24f4127cc42adf617d025d6cd37ff689156" translate="yes" xml:space="preserve">
          <source>Take, for example, the following sample program:</source>
          <target state="translated">例えば、次のようなサンプルプログラムを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="c129ddcc17bbf3036fea845103495c3a3e4103de" translate="yes" xml:space="preserve">
          <source>Technically, GnuCOBOL does not require ANY procedure names be defined unless:</source>
          <target state="translated">技術的には、GnuCOBOLでは、プロシージャ名を定義する必要はありません。</target>
        </trans-unit>
        <trans-unit id="2710741cc1f93fcc3e1018f638485351a7a33490" translate="yes" xml:space="preserve">
          <source>Text Brightness</source>
          <target state="translated">テキストの明るさ</target>
        </trans-unit>
        <trans-unit id="dd4d9c084e367f9986faa13df954584c43707262" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s where sentences come in.</source>
          <target state="translated">そこで文が入ります。</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">The</target>
        </trans-unit>
        <trans-unit id="e4783d8ae7b9afc0facc612bb2a6d6ffae08fdb6" translate="yes" xml:space="preserve">
          <source>The   &lt;code&gt;COB_SET_TRACE&lt;/code&gt; run-time environment variable (see &lt;a href=&quot;#Run-Time-Environment-Variables&quot;&gt;Run Time Environment Variables&lt;/a&gt;) provides another way to control tracing. If this environment variable is set to a value of &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;COB_SET_TRACE&lt;/code&gt; ランタイム環境変数が（参照&lt;a href=&quot;#Run-Time-Environment-Variables&quot;&gt;ランタイム環境変数の&lt;/a&gt;）トレースを制御する別の方法を提供します。この環境変数が 'の値に設定されている場合</target>
        </trans-unit>
        <trans-unit id="cd736f3f3986486b086d057b8c3445d517c2d0d1" translate="yes" xml:space="preserve">
          <source>The   &lt;code&gt;LINE-COUNTER&lt;/code&gt; special register, which will contain the current line number on the current page.</source>
          <target state="translated">&lt;code&gt;LINE-COUNTER&lt;/code&gt; 現在のページの現在の行番号が含まれています特殊レジスタ、。</target>
        </trans-unit>
        <trans-unit id="7e0ec258377f735b26cb88e06e5d4b1afea37e3d" translate="yes" xml:space="preserve">
          <source>The   &lt;code&gt;PAGE-COUNTER&lt;/code&gt; special register (see &lt;a href=&quot;#Special-Registers&quot;&gt;Special Registers&lt;/a&gt;), which will contain the current report page number.</source>
          <target state="translated">&lt;code&gt;PAGE-COUNTER&lt;/code&gt; 特殊レジスタ（参照&lt;a href=&quot;#Special-Registers&quot;&gt;特殊レジスタを&lt;/a&gt;現在のレポートのページ番号が含まれます）。</target>
        </trans-unit>
        <trans-unit id="c4b2aa6d0f1dac7e8719c7a24b4c2ab9dbf72309" translate="yes" xml:space="preserve">
          <source>The   &lt;code&gt;RETURN-CODE&lt;/code&gt; special register (see &lt;a href=&quot;#Special-Registers&quot;&gt;Special Registers&lt;/a&gt;) will be set to one of the following values:</source>
          <target state="translated">&lt;code&gt;RETURN-CODE&lt;/code&gt; 特殊レジスタは、（参照&lt;a href=&quot;#Special-Registers&quot;&gt;特殊レジスタを&lt;/a&gt;）次のいずれかの値に設定されます。</target>
        </trans-unit>
        <trans-unit id="604bd9c4e1e18259b179afe1f61d0db674abcf2c" translate="yes" xml:space="preserve">
          <source>The   &lt;code&gt;RETURN-CODE&lt;/code&gt; special register (see &lt;a href=&quot;#Special-Registers&quot;&gt;Special Registers&lt;/a&gt;) will be set to the return code of the operation; the value will be either 0=Success or 128=failure.</source>
          <target state="translated">&lt;code&gt;RETURN-CODE&lt;/code&gt; 特殊レジスタは、（参照&lt;a href=&quot;#Special-Registers&quot;&gt;特殊レジスタを&lt;/a&gt;）操作の戻りコードに設定されます。値は、0 =成功または128 =失敗のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="c06e32dd5ab0d4a5d0f40e0553b2a6c04a358450" translate="yes" xml:space="preserve">
          <source>The   &lt;code&gt;RETURN-CODE&lt;/code&gt; special register (see &lt;a href=&quot;#Special-Registers&quot;&gt;Special Registers&lt;/a&gt;) will be updated in addition to any &lt;code&gt;RETURNING&lt;/code&gt; or &lt;code&gt;GIVING&lt;/code&gt; data item.</source>
          <target state="translated">&lt;code&gt;RETURN-CODE&lt;/code&gt; 特殊レジスタは、（参照&lt;a href=&quot;#Special-Registers&quot;&gt;特殊レジスタを&lt;/a&gt;）いずれかのに加えて、更新されます &lt;code&gt;RETURNING&lt;/code&gt; または &lt;code&gt;GIVING&lt;/code&gt; データ項目。</target>
        </trans-unit>
        <trans-unit id="3ad36e2c6bf1f6003ba43f058cfa27dde8976cb0" translate="yes" xml:space="preserve">
          <source>The   &lt;code&gt;TEMP&lt;/code&gt; run-time environment variable</source>
          <target state="translated">&lt;code&gt;TEMP&lt;/code&gt; ランタイム環境変数</target>
        </trans-unit>
        <trans-unit id="5a2c66b1041998a88f1b156a645ce29a19586ed9" translate="yes" xml:space="preserve">
          <source>The   &lt;code&gt;TMP&lt;/code&gt; run-time environment variable</source>
          <target state="translated">&lt;code&gt;TMP&lt;/code&gt; ランタイム環境変数</target>
        </trans-unit>
        <trans-unit id="784f580e52d43819030e1dc584f7df5d5c5bcf4c" translate="yes" xml:space="preserve">
          <source>The   &lt;code&gt;TMPDIR&lt;/code&gt; run-time environment variable (see &lt;a href=&quot;#Run-Time-Environment-Variables&quot;&gt;Run Time Environment Variables&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;TMPDIR&lt;/code&gt; ランタイム環境変数（参照&lt;a href=&quot;#Run-Time-Environment-Variables&quot;&gt;ランタイム環境変数を&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="b9906a84b46792a3cd8c6f78ca64985556ee0194" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;ACCESS MODE SEQUENTIAL&lt;/code&gt; clause is optional because, if absent, it will be assumed anyway for this type of file. The internal structure of these files is such that the data can only be processed in a sequential manner; in order to read the 100th record in such a file, for example, you first must read records 1 through 99.</source>
          <target state="translated">&lt;code&gt;ACCESS MODE SEQUENTIAL&lt;/code&gt; の不在であれば、それは、このタイプのファイルにとにかく想定されます、ため句はオプションです。これらのファイルの内部構造は、データを順次処理することしかできないようになっています。たとえば、このようなファイルの100番目のレコードを読み取るには、最初にレコード1から99を読み取る必要があります。</target>
        </trans-unit>
        <trans-unit id="70203de983908f32a36013af21384e4a86322ce5" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;ACCESS MODE SEQUENTIAL&lt;/code&gt; clause is optional because, if absent, it will be assumed anyway for this type of file. The internal structure of these files is such that they can only be processed in a sequential manner; in order to read the 100th record in such a file, for example, you first must read records 1 through 99.</source>
          <target state="translated">&lt;code&gt;ACCESS MODE SEQUENTIAL&lt;/code&gt; の不在であれば、それは、このタイプのファイルにとにかく想定されます、ため句はオプションです。これらのファイルの内部構造は、シーケンシャルな方法でのみ処理できるようになっています。たとえば、このようなファイルの100番目のレコードを読み取るには、最初にレコード1から99を読み取る必要があります。</target>
        </trans-unit>
        <trans-unit id="d09ed138e897234705b34da07454dc8f44eccbe3" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;ADVANCING PAGE&lt;/code&gt; clause will introduce an ASCII formfeed character into the file either before the written record (&lt;code&gt;AFTER PAGE&lt;/code&gt;) or after the written record (&lt;code&gt;BEFORE PAGE&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;ADVANCING PAGE&lt;/code&gt; の句は、（書かれたレコードの前のファイルに文字を改ページASCIIをご紹介します &lt;code&gt;AFTER PAGE&lt;/code&gt; ）または（書かれたレコードの後に &lt;code&gt;BEFORE PAGE&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="9a4f04242a2dc283f032b014745b087d80cf14e1" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;AFTER EXCEPTION CONDITION&lt;/code&gt; and &lt;code&gt;AFTER EC&lt;/code&gt; clauses are syntactically recognized but are otherwise non-functional.</source>
          <target state="translated">&lt;code&gt;AFTER EXCEPTION CONDITION&lt;/code&gt; と &lt;code&gt;AFTER EC&lt;/code&gt; 句構文的に認識し、それ以外の非機能ですされています。</target>
        </trans-unit>
        <trans-unit id="9e09700f40468b5e15b9e201e119c997cf0d95af" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;ALPHABET&lt;/code&gt; clause relates &lt;var&gt;alphabet-name-1&lt;/var&gt; to a specified character code set or collating sequence, including one you define yourself using the &lt;var&gt;literal-1&lt;/var&gt; option.</source>
          <target state="translated">&lt;code&gt;ALPHABET&lt;/code&gt; の句は、関連する &lt;var&gt;alphabet-name-1&lt;/var&gt; 使用して自分で定義する1つを含む、指定された文字コードセットまたは照合シーケンスに &lt;var&gt;literal-1&lt;/var&gt; オプションを選択します。</target>
        </trans-unit>
        <trans-unit id="6bcd69d66d5ffca693136c0fc4f125efaa64aa57" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;ALTERNATE RECORD KEY&lt;/code&gt; clause, if used, defines an additional field within the record that provides an alternate means of directly accessing records or an additional field by which the file&amp;rsquo;s contents may be processed sequentially. You have the choice of allowing records to have duplicate alternate key values, if necessary.</source>
          <target state="translated">&lt;code&gt;ALTERNATE RECORD KEY&lt;/code&gt; の句は、使用される場合、直接レコードまたはファイルの内容を順次処理することができることによって、追加フィールドにアクセスするための代替手段を提供するレコード内の追加フィールドを定義します。必要に応じて、レコードに重複する代替キー値を許可することを選択できます。</target>
        </trans-unit>
        <trans-unit id="84664b4fb9cb6e1ae82e72c1ae9e3889dcc4009d" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;AUTHOR&lt;/code&gt;,  &lt;code&gt;DATE-COMPILED&lt;/code&gt;,  &lt;code&gt;DATE-MODIFIED&lt;/code&gt;,  &lt;code&gt;DATE-WRITTEN&lt;/code&gt;,  &lt;code&gt;INSTALLATION&lt;/code&gt;,  &lt;code&gt;REMARKS&lt;/code&gt; and  &lt;code&gt;SECURITY&lt;/code&gt; paragraphs are supported by GnuCOBOL only to provide compatibility with programs written for the ANS1974 (or earlier) standards. As of the ANS1985 standard, these clauses have become obsolete and should not be used in new programs.</source>
          <target state="translated">&lt;code&gt;AUTHOR&lt;/code&gt; 、 &lt;code&gt;DATE-COMPILED&lt;/code&gt; 、 &lt;code&gt;DATE-MODIFIED&lt;/code&gt; 、 &lt;code&gt;DATE-WRITTEN&lt;/code&gt; 、 &lt;code&gt;INSTALLATION&lt;/code&gt; 、 &lt;code&gt;REMARKS&lt;/code&gt; 及び &lt;code&gt;SECURITY&lt;/code&gt; 段落のみANS1974（またはそれ以前）標準用に書かれたプログラムとの互換性を提供するためにGnuCOBOLによって支持されています。ANS1985標準の時点で、これらの句は廃止されており、新しいプログラムで使用しないでください。</target>
        </trans-unit>
        <trans-unit id="e00ac45fc69d379bf2082e8d733c0d49eeec4f68" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;BLOCK CONTAINS&lt;/code&gt;,  &lt;code&gt;DATA RECORD&lt;/code&gt;,  &lt;code&gt;LABEL RECORD&lt;/code&gt;,  &lt;code&gt;RECORDING MODE&lt;/code&gt; and  &lt;code&gt;VALUE OF&lt;/code&gt; clauses are syntactically recognized but are obsolete and non-functional. These clauses should not be coded in new programs.</source>
          <target state="translated">&lt;code&gt;BLOCK CONTAINS&lt;/code&gt; 、 &lt;code&gt;DATA RECORD&lt;/code&gt; 、 &lt;code&gt;LABEL RECORD&lt;/code&gt; 、 &lt;code&gt;RECORDING MODE&lt;/code&gt; と &lt;code&gt;VALUE OF&lt;/code&gt; 句は、構文的に認識されなく時代遅れと非機能されています。これらの句は、新しいプログラムでコーディングしないでください。</target>
        </trans-unit>
        <trans-unit id="19c161b455f1b798008f5e5ddb5498982200913c" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;CALL-CONVENTION&lt;/code&gt; clause allows a decimal integer, representing a series of ON/OFF switch settings, to be associated with a mnemonic name which may then be coded on a &lt;code&gt;CALL&lt;/code&gt; statement (see &lt;a href=&quot;#CALL&quot;&gt;CALL&lt;/a&gt;). The switch settings defined by this mnemonic will then control how the linkage to a subroutine invoked by the &lt;code&gt;CALL&lt;/code&gt; statement that references &lt;var&gt;mnemonic-name-1&lt;/var&gt; will be handled.</source>
          <target state="translated">&lt;code&gt;CALL-CONVENTION&lt;/code&gt; の句は、その後に符号化されるニーモニック名と関連することが、ON / OFFスイッチの設定の一連を表す10進数を可能にする &lt;code&gt;CALL&lt;/code&gt; のステートメント（参照&lt;a href=&quot;#CALL&quot;&gt;CALLします&lt;/a&gt;）。このニーモニックによって定義されたスイッチ設定は、 &lt;var&gt;mnemonic-name-1&lt;/var&gt; を参照する &lt;code&gt;CALL&lt;/code&gt; ステートメントによって呼び出されたサブルーチンへのリンクがどのように処理されるかを制御します。</target>
        </trans-unit>
        <trans-unit id="1cc3106e2c9e94876c7445161186ea0935e77233" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;CODE-SET&lt;/code&gt; clause allows a custom alphabet, defined in the &lt;code&gt;SPECIAL-NAMES&lt;/code&gt; (see &lt;a href=&quot;#SPECIAL_002dNAMES&quot;&gt;SPECIAL-NAMES&lt;/a&gt;) paragraph, to be associated with a file. This clause is valid only when used with sequential or line sequential files.</source>
          <target state="translated">&lt;code&gt;CODE-SET&lt;/code&gt; の句はで定義されたカスタムアルファベット、可能に &lt;code&gt;SPECIAL-NAMES&lt;/code&gt; が（参照&lt;a href=&quot;#SPECIAL_002dNAMES&quot;&gt;SPECIAL-NAMESを&lt;/a&gt;ファイルに関連付けされる、パラグラフを）。この句は、シーケンシャルファイルまたはラインシーケンシャルファイルで使用する場合にのみ有効です。</target>
        </trans-unit>
        <trans-unit id="63b77ecaefdc19c13c8b0110b7f11a2ea2cc8f6d" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;COLLATING SEQUENCE&lt;/code&gt; clause allows you to specify a customized character collating sequence to be used when alphanumeric values are compared to one another. Data will still be stored in the character set native to the computer, but the logical sequence in which characters are ordered for comparison purposes can be altered from that defined by the computer&amp;rsquo;s native character set. The &lt;var&gt;alphabet-name-1&lt;/var&gt; you specify needs to be defined in the &lt;code&gt;SPECIAL-NAMES&lt;/code&gt; (see &lt;a href=&quot;#SPECIAL_002dNAMES&quot;&gt;SPECIAL-NAMES&lt;/a&gt;) paragraph.</source>
          <target state="translated">&lt;code&gt;COLLATING SEQUENCE&lt;/code&gt; 句は、英数字の値が互いに比較されているときに使用されるようにカスタマイズされた文字の照合順序を指定することができます。データは引き続きコンピューターのネイティブ文字セットに格納されますが、比較のために文字が並べ替えられる論理的な順序は、コンピューターのネイティブの文字セットで定義されている順序から変更できます。 &lt;var&gt;alphabet-name-1&lt;/var&gt; あなたはで定義する必要性を指定する &lt;code&gt;SPECIAL-NAMES&lt;/code&gt; （参照&lt;a href=&quot;#SPECIAL_002dNAMES&quot;&gt;SPECIAL-NAMESを&lt;/a&gt;段落）。</target>
        </trans-unit>
        <trans-unit id="add3c152066bb7544063ee6548556380f7409ea7" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;COLLATING SEQUENCE&lt;/code&gt;,  &lt;code&gt;RECORD DELIMITER&lt;/code&gt;,  &lt;code&gt;RESERVE&lt;/code&gt; and  &lt;code&gt;ALL OTHER&lt;/code&gt; clauses are syntactically recognized but are otherwise non-functional.</source>
          <target state="translated">&lt;code&gt;COLLATING SEQUENCE&lt;/code&gt; 、 &lt;code&gt;RECORD DELIMITER&lt;/code&gt; 、 &lt;code&gt;RESERVE&lt;/code&gt; および &lt;code&gt;ALL OTHER&lt;/code&gt; 条項は、構文的に認識し、それ以外の非機能ですされています。</target>
        </trans-unit>
        <trans-unit id="5a926368a4c880d35eba25a192f91f86efa8e952" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;CONSOLE IS CRT&lt;/code&gt; clause, if specified, will cause a &lt;code&gt;DISPLAY&lt;/code&gt; statement lacking an explicit &lt;code&gt;UPON&lt;/code&gt; clause to be treated as a &lt;code&gt;DISPLAY screen-data-item&lt;/code&gt; statement (see &lt;a href=&quot;#DISPLAY-screen_002ddata_002ditem&quot;&gt;DISPLAY screen-data-item&lt;/a&gt;), and any &lt;code&gt;ACCEPT&lt;/code&gt; statement lacking a &lt;code&gt;FROM&lt;/code&gt; clause to be treated as a &lt;code&gt;ACCEPT screen-data-item&lt;/code&gt; statement (see &lt;a href=&quot;#ACCEPT-screen_002ddata_002ditem&quot;&gt;ACCEPT screen-data-item&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;CONSOLE IS CRT&lt;/code&gt; の句は、指定された場合、発生します &lt;code&gt;DISPLAY&lt;/code&gt; を明示的に欠けている文の &lt;code&gt;UPON&lt;/code&gt; として処理されるべき句 &lt;code&gt;DISPLAY screen-data-item&lt;/code&gt; （参照文を&lt;a href=&quot;#DISPLAY-screen_002ddata_002ditem&quot;&gt;表示画面データ項目を&lt;/a&gt;）、および任意の &lt;code&gt;ACCEPT&lt;/code&gt; 不足の文 &lt;code&gt;FROM&lt;/code&gt; に句扱われる &lt;code&gt;ACCEPT screen-data-item&lt;/code&gt; （参照文&lt;a href=&quot;#ACCEPT-screen_002ddata_002ditem&quot;&gt;画面データ項目をACCEPT&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="8d1132fd4faa7fd2022d9f29f050c9b8596ceb53" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;CURRENCY SIGN&lt;/code&gt; clause may be used to redefine the character to be used as a currency sign in a &lt;code&gt;PICTURE&lt;/code&gt; (see &lt;a href=&quot;#PICTURE&quot;&gt;PICTURE&lt;/a&gt;) clause. The default currency sign is a dollar-sign (&amp;lsquo;</source>
          <target state="translated">&lt;code&gt;CURRENCY SIGN&lt;/code&gt; 句は、通貨記号として使用する文字を再定義するために使用することができる &lt;code&gt;PICTURE&lt;/code&gt; （参照&lt;a href=&quot;#PICTURE&quot;&gt;PICTURE&lt;/a&gt;句）。デフォルトの通貨記号はドル記号（ '</target>
        </trans-unit>
        <trans-unit id="44c990ac72f8e1b55d3f949a65f595444cf533c4" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;CURSOR IS&lt;/code&gt; clause allows you to specify a 4- or 6-character data item into which the cursor screen location at the time a screen &lt;code&gt;ACCEPT&lt;/code&gt; is satisfied. The value will be returned as</source>
          <target state="translated">&lt;code&gt;CURSOR IS&lt;/code&gt; 句を使用すると、画面は、一度にカーソル画面位置そこに4-または6文字のデータ項目を指定することができ &lt;code&gt;ACCEPT&lt;/code&gt; 満足されます。値は次のように返されます</target>
        </trans-unit>
        <trans-unit id="e8d948783f422a15b8db65701c8d8ae6c2f8e097" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;DEBUGGING MODE&lt;/code&gt; clause, if present, will inform the compiler that debugging lines (those with a &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;DEBUGGING MODE&lt;/code&gt; 句は、存在する場合、コンパイラに通知すること、デバッグ行（を持つもの&quot;</target>
        </trans-unit>
        <trans-unit id="840f6a9579f0e761823e46dac0591287fe40ae23" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;DECIMAL POINT IS COMMA&lt;/code&gt; clause reverses the definition of the &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;DECIMAL POINT IS COMMA&lt;/code&gt; の句は」の定義を反転させます</target>
        </trans-unit>
        <trans-unit id="4e96cb97ea8a66bf0fb6146144be8d2e84aeb7c2" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;DEFINED&lt;/code&gt; option tests for whether &lt;var&gt;cdf-variable-1&lt;/var&gt; has been defined, but not yet assigned a value (&lt;code&gt;&amp;gt;&amp;gt;DEFINE &amp;hellip; OFF&lt;/code&gt;); use the &lt;code&gt;NOT&lt;/code&gt; option to test for the variable not being defined.</source>
          <target state="translated">&lt;code&gt;DEFINED&lt;/code&gt; かどうかのオプション試験 &lt;var&gt;cdf-variable-1&lt;/var&gt; 定義され、まだ値が割り当てられていないされているが（ &lt;code&gt;&amp;gt;&amp;gt;DEFINE &amp;hellip; OFF&lt;/code&gt; ）。 &lt;code&gt;NOT&lt;/code&gt; オプションを使用して、定義されていない変数をテストします。</target>
        </trans-unit>
        <trans-unit id="f282a135dfdc142c064d1b75d3c0efcf801c21e4" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;DELIMITED BY&lt;/code&gt; clause specifies how much of each source item will be copied into &lt;var&gt;identifier-3&lt;/var&gt;. &lt;code&gt;DELIMITED BY SIZE&lt;/code&gt; (the default if no &lt;code&gt;DELIMITED BY&lt;/code&gt; clause is specified) causes the</source>
          <target state="translated">&lt;code&gt;DELIMITED BY&lt;/code&gt; の各ソースアイテムのどのくらいの句を指定しにコピーされる &lt;var&gt;identifier-3&lt;/var&gt; 。 &lt;code&gt;DELIMITED BY SIZE&lt;/code&gt; （ &lt;code&gt;DELIMITED BY&lt;/code&gt; 句が指定されていない場合のデフォルト）により、</target>
        </trans-unit>
        <trans-unit id="57c01d00d52c2469a821bd2e86e0b7eddcde9cb8" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;DUPLICATES&lt;/code&gt; clause is syntactically recognized but is otherwise non-functional.</source>
          <target state="translated">&lt;code&gt;DUPLICATES&lt;/code&gt; 句は、構文的に認識し、それ以外の非機能です。</target>
        </trans-unit>
        <trans-unit id="0b55ddfd66ffea3103eb8f553cac04a971762fdf" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;ESCAPE KEY&lt;/code&gt; option may be used after the &lt;code&gt;ACCEPT FROM Screen-Info&lt;/code&gt; statement (see &lt;a href=&quot;#ACCEPT-FROM-Screen_002dInfo&quot;&gt;ACCEPT FROM Screen-Info&lt;/a&gt;) has executed. The result returned will be the four-digit &lt;code&gt;CRT STATUS&lt;/code&gt; (see &lt;a href=&quot;#SPECIAL_002dNAMES&quot;&gt;SPECIAL-NAMES&lt;/a&gt;) identifier value. See &lt;a href=&quot;#CRT-STATUS-Codes&quot;&gt;CRT STATUS Codes&lt;/a&gt;, for the specific code values.</source>
          <target state="translated">&lt;code&gt;ESCAPE KEY&lt;/code&gt; 後にオプションを使用することができる &lt;code&gt;ACCEPT FROM Screen-Info&lt;/code&gt; 文の（参照&lt;a href=&quot;#ACCEPT-FROM-Screen_002dInfo&quot;&gt;画面-情報、ACCEPT FROM&lt;/a&gt;）を実行しています。返される結果は、4桁の &lt;code&gt;CRT STATUS&lt;/code&gt; （&lt;a href=&quot;#SPECIAL_002dNAMES&quot;&gt;SPECIAL-NAMESを&lt;/a&gt;参照）ID値になります。特定のコード値については、&lt;a href=&quot;#CRT-STATUS-Codes&quot;&gt;CRTSTATUSコードを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="fc2db71b648b8f1f445fb5645c9f658114b9045a" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;EVENT STATUS&lt;/code&gt; and  &lt;code&gt;SCREEN CONTROL&lt;/code&gt; clauses are syntactically recognized but are otherwise non-functional.</source>
          <target state="translated">&lt;code&gt;EVENT STATUS&lt;/code&gt; と &lt;code&gt;SCREEN CONTROL&lt;/code&gt; 句は構文的に認められているが、それ以外は非機能です。</target>
        </trans-unit>
        <trans-unit id="25b83300936d9ed6f517a07a850d311601652bea" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;FILE STATUS&lt;/code&gt; or  &lt;code&gt;SORT STATUS&lt;/code&gt; clause (they are both equivalent and only one or the other, if any, should be specified) is used to specify the name of a two-digit numeric data item into which an I/O status code will be saved after every I/O verb that is executed against the file. This does not actually allocate the data item &amp;mdash; you must define the item yourself somewhere in the data division. Note that the following list is not definitive: more can be added and any tests should include one for non zeros as a catch all.  Possible status codes that can be returned to a &lt;code&gt;FILE STATUS&lt;/code&gt; data item are as follows:</source>
          <target state="translated">&lt;code&gt;FILE STATUS&lt;/code&gt; または &lt;code&gt;SORT STATUS&lt;/code&gt; 句は、（指定されるべきであれば、彼らは、両方の等価のみどちらか一方である）I / Oステータスコードがされるに2桁の数字データ項目の名前を指定するために使用されファイルに対して実行されるすべてのI / O動詞の後に保存されます。これは実際にはデータ項目を割り当てません&amp;mdash;データ分割のどこかで項目を自分で定義する必要があります。次のリストは決定的なものではないことに注意してください。さらに追加することができ、すべてのテストでゼロ以外のテストをすべてキャッチする必要があります。 &lt;code&gt;FILE STATUS&lt;/code&gt; データ項目に返すことができる可能なステータスコードは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="2eee895c8932b578c63bdc13cbbaff584828f312" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;FIRST DETAIL&lt;/code&gt; clause defines the first line at which a detail group may be presented.</source>
          <target state="translated">&lt;code&gt;FIRST DETAIL&lt;/code&gt; 句は、詳細グループを提示することができるで最初の行を定義します。</target>
        </trans-unit>
        <trans-unit id="4d8c5daa685f43897fa1a1f3053eec8276233eff" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;FOLDCOPYNAME&lt;/code&gt; option provides the equivalent of specifying the compiler</source>
          <target state="translated">&lt;code&gt;FOLDCOPYNAME&lt;/code&gt; のオプションは、コンパイラを指定するのと同じを提供します</target>
        </trans-unit>
        <trans-unit id="531d02d896a82d63192fd3a6d85144d4d72e030e" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;FOOTING&lt;/code&gt; clause defines the last line at which any line of a control footing group may be presented.</source>
          <target state="translated">&lt;code&gt;FOOTING&lt;/code&gt; の句は、制御後書きグループの任意の行が提示されてもよいれる最後の行を定義します。</target>
        </trans-unit>
        <trans-unit id="39ec71cfb54298cde0706492dba0b7145cd47158" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;FROM CRT&lt;/code&gt;,  &lt;code&gt;MODE IS BLOCK&lt;/code&gt; and  &lt;code&gt;CONVERSION&lt;/code&gt; clauses are syntactically recognized but are otherwise non-functional.</source>
          <target state="translated">&lt;code&gt;FROM CRT&lt;/code&gt; 、 &lt;code&gt;MODE IS BLOCK&lt;/code&gt; と &lt;code&gt;CONVERSION&lt;/code&gt; 句は、構文的に認識し、それ以外の非機能ですされています。</target>
        </trans-unit>
        <trans-unit id="ff7263b8f3650812257bfa58eb08945ebd3d8bd6" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;HEADING&lt;/code&gt; clause defines the first line number at which a report heading or page heading may be presented.</source>
          <target state="translated">&lt;code&gt;HEADING&lt;/code&gt; 句は、レポート見出しまたはページの見出しを提示することができるれる最初の行の数を定義します。</target>
        </trans-unit>
        <trans-unit id="89e8af69c206ce1d49fa449c0994f217f18fad77" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;INITIAL&lt;/code&gt; clause, if specified, guarantees the subprogram will be in its initial (i.e. compiled) state each and every time it is executed, not just the first time.</source>
          <target state="translated">&lt;code&gt;INITIAL&lt;/code&gt; 句は、指定された場合、サブプログラムはその初期（つまり、コンパイル済みの）状態で、それが実行され、毎回、だけでなく、初めてとなる保証します。</target>
        </trans-unit>
        <trans-unit id="9ff9268e15d513e0143ec1c497696ac92591affb" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;INPUT&lt;/code&gt;,  &lt;code&gt;OUTPUT&lt;/code&gt;,  &lt;code&gt;I-O&lt;/code&gt; and  &lt;code&gt;EXTEND&lt;/code&gt; open modes inform GnuCOBOL of the manner in which you wish to use the file, as follows:</source>
          <target state="translated">&lt;code&gt;INPUT&lt;/code&gt; 、 &lt;code&gt;OUTPUT&lt;/code&gt; 、 &lt;code&gt;I-O&lt;/code&gt; 及び &lt;code&gt;EXTEND&lt;/code&gt; オープンモードを次のように、あなたがファイルを使用したい方法のGnuCOBOLを知らせます：</target>
        </trans-unit>
        <trans-unit id="d136db3640cc5ee6440a8c90b164ff1ba27a939f" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;INTRINSIC&lt;/code&gt; clause allows you to flag one or more (or  &lt;code&gt;ALL&lt;/code&gt;) built-in intrinsic functions as being usable without the need to code the keyword  &lt;code&gt;FUNCTION&lt;/code&gt; in front of the function names.</source>
          <target state="translated">&lt;code&gt;INTRINSIC&lt;/code&gt; 句を使用するには、フラグの1以上（またはすることができます &lt;code&gt;ALL&lt;/code&gt; 内蔵の組み込み関数キーワードコーディングすることなく使用可能であるとして） &lt;code&gt;FUNCTION&lt;/code&gt; 関数名の前にを。</target>
        </trans-unit>
        <trans-unit id="432694b0fdf19129db6245e5e605221a318067fc" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;LAST CONTROL&lt;/code&gt;&lt;code&gt;HEADING&lt;/code&gt; clause defines the last line at which any line of a control heading may be presented.</source>
          <target state="translated">&lt;code&gt;LAST CONTROL&lt;/code&gt; &lt;code&gt;HEADING&lt;/code&gt; 句は、制御見出しの任意の行が提示されてもよいれる最後の行を定義します。</target>
        </trans-unit>
        <trans-unit id="386a38d0bd399732f717d6fdb89c03a2541fd183" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;LAST DETAIL&lt;/code&gt; clause defines the last line at which any line of a detail group may be presented.</source>
          <target state="translated">&lt;code&gt;LAST DETAIL&lt;/code&gt; 句は、詳細グループのいずれかの行が提示されてもよいれる最後の行を定義します。</target>
        </trans-unit>
        <trans-unit id="39bc9e6c98d396627c62ab1626e413787d28da53" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;LINES&lt;/code&gt; and  &lt;code&gt;COLUMNS&lt;/code&gt; options will retrieve the respective components of the size of the console display.</source>
          <target state="translated">&lt;code&gt;LINES&lt;/code&gt; と &lt;code&gt;COLUMNS&lt;/code&gt; オプションは、コンソールディスプレイのサイズの各構成要素を取得します。</target>
        </trans-unit>
        <trans-unit id="53623b9d54f9bc8f2c0bb9355b774e92f80a4f28" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;LOCALE&lt;/code&gt; clause may be used to associate external OS-defined locale names (&lt;var&gt;literal-2&lt;/var&gt;) with an internal name (&lt;var&gt;locale-name-1&lt;/var&gt;) that may then be referenced within the program. Locale names are defined by the Operating System and/or C compiler GnuCOBOL will be utilizing on your computer.</source>
          <target state="translated">&lt;code&gt;LOCALE&lt;/code&gt; の句は、会合外部OS定義のロケール名（に使用することができる &lt;var&gt;literal-2&lt;/var&gt; 内部名（と） &lt;var&gt;locale-name-1&lt;/var&gt; 、プログラム内で参照されてもよいです）。ロケール名は、GnuCOBOLがコンピューターで使用するオペレーティングシステムまたはCコンパイラーによって定義されます。</target>
        </trans-unit>
        <trans-unit id="8acc773243e773127af454560c0b7ecd2ef15eb6" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;LOCK&lt;/code&gt; clause defines how concurrent access to the file will be managed on a record-by-record basis. See &lt;a href=&quot;#Record-Locking&quot;&gt;Record Locking&lt;/a&gt;, for the details.</source>
          <target state="translated">&lt;code&gt;LOCK&lt;/code&gt; の句は、ファイルへの同時アクセスは、レコード単位で管理される方法を定義します。詳細については、&lt;a href=&quot;#Record-Locking&quot;&gt;レコードロックを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3b7c37fafdff8d069de528a8fe9e50aeb0a01acc" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;MEMORY SIZE&lt;/code&gt; and  &lt;code&gt;SEGMENT-LIMIT&lt;/code&gt; clauses are syntactically recognized but are otherwise non-functional.</source>
          <target state="translated">&lt;code&gt;MEMORY SIZE&lt;/code&gt; と &lt;code&gt;SEGMENT-LIMIT&lt;/code&gt; 句は、構文的に認められているが、それ以外は非機能です。</target>
        </trans-unit>
        <trans-unit id="16d8b3bd092772db7db071aa240b498929e2023e" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;NO ADVANCING&lt;/code&gt; clause, if used, will suppress the carriage-return / line-feed sequence that is normally added to the end of any console display.</source>
          <target state="translated">&lt;code&gt;NO ADVANCING&lt;/code&gt; 句は、使用される場合、通常、任意のコンソールディスプレイの最後に追加され、キャリッジリターン/改行シーケンスを抑制する。</target>
        </trans-unit>
        <trans-unit id="d35d3ee1131ce0094bcbbcb97bb88b3cd8e42c74" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;NO REWIND&lt;/code&gt;, and  &lt;code&gt;REVERSED&lt;/code&gt; clauses are syntactically recognized but are otherwise non-functional.</source>
          <target state="translated">&lt;code&gt;NO REWIND&lt;/code&gt; 、および &lt;code&gt;REVERSED&lt;/code&gt; 節は構文的に認識し、それ以外の非機能ですされています。</target>
        </trans-unit>
        <trans-unit id="ab7e60586318e878f39e37ab0269948184c45b54" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;NOFOLDCOPYNAME&lt;/code&gt; option turns off the effect of either the &lt;code&gt;&amp;gt;&amp;gt;SET FOLDCOPYNAME&lt;/code&gt; statement or the compiler</source>
          <target state="translated">&lt;code&gt;NOFOLDCOPYNAME&lt;/code&gt; のいずれかの効果オフオプションターン &lt;code&gt;&amp;gt;&amp;gt;SET FOLDCOPYNAME&lt;/code&gt; 文またはコンパイラ</target>
        </trans-unit>
        <trans-unit id="c8bdfdddeacaff63c3ab640aacfadd64639c9f3d" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;NUMERIC SIGN TRAILING SEPARATE&lt;/code&gt; specification causes all signed numeric &lt;code&gt;USAGE DISPLAY&lt;/code&gt; data items to be created as if the &lt;code&gt;SIGN IS TRAILING SEPARATE CHARACTER&lt;/code&gt; clause was included in their definitions.</source>
          <target state="translated">&lt;code&gt;NUMERIC SIGN TRAILING SEPARATE&lt;/code&gt; 仕様は、すべての符号付き数値原因 &lt;code&gt;USAGE DISPLAY&lt;/code&gt; の場合と同様にデータ項目を作成することが &lt;code&gt;SIGN IS TRAILING SEPARATE CHARACTER&lt;/code&gt; 句は、その定義に含まれていました。</target>
        </trans-unit>
        <trans-unit id="259c5a22ac22d346e60a6c514da9ff6bf21ff6cd" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;ON STATUS&lt;/code&gt; and  &lt;code&gt;OFF STATUS&lt;/code&gt; syntax provides a way of associating a condition-name with either the on or off status of the switch, so that status may be tested at execution time via the &lt;code&gt;IF&lt;/code&gt; statement (see &lt;a href=&quot;#IF&quot;&gt;IF&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;ON STATUS&lt;/code&gt; と &lt;code&gt;OFF STATUS&lt;/code&gt; 構文は、ステータスを介して実行時にテストすることができるように、オン又はスイッチの状態オフのいずれかで条件名を関連付ける方法を提供 &lt;code&gt;IF&lt;/code&gt; （参照文&lt;a href=&quot;#IF&quot;&gt;IFを&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="afbd8f2805222ded38e4c85de432fdb02d823251" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;OPTIONAL&lt;/code&gt; clause, to be used only for files that will be used to provide input data to the program, indicates the file may or may not actually be available at run-time. Attempts to &lt;code&gt;OPEN&lt;/code&gt; an &lt;code&gt;OPTIONAL&lt;/code&gt; file when the file does not exist will receive a special non-fatal file status value (see status 05 in the list of file status values below) indicating the file is not available; a subsequent attempt to &lt;code&gt;READ&lt;/code&gt; that file will return an &lt;code&gt;AT END&lt;/code&gt; (end-of-file) condition. Optionally, files may be designated as &lt;code&gt;NOT OPTIONAL&lt;/code&gt;, if desired. This is useful when specifying the compiler&amp;rsquo;s</source>
          <target state="translated">&lt;code&gt;OPTIONAL&lt;/code&gt; 句は、唯一のプログラムへの入力データを提供するために使用されるファイルに使用されるように、ファイルがまたは実際に実行時に使用できない可能性がありますを示しています。試み &lt;code&gt;OPEN&lt;/code&gt; &lt;code&gt;OPTIONAL&lt;/code&gt; ファイルを示すファイルのファイルが存在しない特殊な非致命的なファイル状態値を受信する（以下ファイルのステータス値のリストにステータス05を参照）を使用できません。以降の試行 &lt;code&gt;READ&lt;/code&gt; ファイルが返されることを &lt;code&gt;AT END&lt;/code&gt; （エンドオブファイル）の条件を。オプションで、必要に応じて、ファイルを &lt;code&gt;NOT OPTIONAL&lt;/code&gt; として指定できます。これは、コンパイラを指定するときに役立ちます</target>
        </trans-unit>
        <trans-unit id="4c8a0ec68108c5a2bc3944e89ec7d36fb212ca49" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;OPTIONAL&lt;/code&gt; keyword, legal only on &lt;code&gt;BY REFERENCE&lt;/code&gt; arguments, allows calling programs to code  &lt;code&gt;OMITTED&lt;/code&gt; for that corresponding argument when they call this subprogram. See &lt;a href=&quot;#CALL&quot;&gt;CALL&lt;/a&gt;. for additional information on this feature.</source>
          <target state="translated">&lt;code&gt;OPTIONAL&lt;/code&gt; のみの法的キーワード、 &lt;code&gt;BY REFERENCE&lt;/code&gt; の引数は、コードにプログラムを呼び出すことができます &lt;code&gt;OMITTED&lt;/code&gt; 彼らはこのサブプログラムを呼び出すときに、対応する引数の。&lt;a href=&quot;#CALL&quot;&gt;CALLを&lt;/a&gt;参照してください。この機能の詳細については。</target>
        </trans-unit>
        <trans-unit id="4f0216ebe492af8c5e88cfd78c8f2469259c5885" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;PARAMETER&lt;/code&gt; option is used to create a variable whose value is that of the environment variable of the same name. Note that this value assignment occurs at compilation time, not program execution time.</source>
          <target state="translated">&lt;code&gt;PARAMETER&lt;/code&gt; のオプションは、その値が、同じ名前の環境変数のことである変数を作成するために使用されます。この値の割り当ては、プログラムの実行時ではなく、コンパイル時に行われることに注意してください。</target>
        </trans-unit>
        <trans-unit id="e36e19c3508e4603172a71f192924842da943604" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;POINTER&lt;/code&gt; data item &amp;mdash; &lt;var&gt;identifier-4&lt;/var&gt; &amp;mdash; must be a non-edited elementary integer numeric data item with a value greater than zero.</source>
          <target state="translated">&lt;code&gt;POINTER&lt;/code&gt; のデータ項目- &lt;var&gt;identifier-4&lt;/var&gt; -ゼロよりも大きい値を有する非編集基本整数数字データ項目でなければなりません。</target>
        </trans-unit>
        <trans-unit id="4728ae272c664ed20828690e7ed70d836ea8fbdb" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;RECORD CONTAINS&lt;/code&gt; and  &lt;code&gt;RECORD IS VARYING&lt;/code&gt; clauses are ignored (with a warning message issued) when used with line sequential files. With other file organizations, these mutually-exclusive clauses define the length of data records within the file. The data item specified as &lt;var&gt;identifier-6&lt;/var&gt; must be defined within one of the record descriptions of &lt;var&gt;file-name-1&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;RECORD CONTAINS&lt;/code&gt; と &lt;code&gt;RECORD IS VARYING&lt;/code&gt; の句は、ラインシーケンシャルファイルで使用（発行され、警告メッセージを）無視されます。他のファイル編成では、これらの相互に排他的な句は、ファイル内のデータレコードの長さを定義します。 &lt;var&gt;identifier-6&lt;/var&gt; として指定されたデータ項目は、 &lt;var&gt;file-name-1&lt;/var&gt; のレコード記述の1つ内で定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="98b682ff7c15a5fa9875ee1916c0776475d73fe8" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;RECORD KEY&lt;/code&gt; clause defines the field within the record used to provide the primary access to records within the file. No two records in the file will be allowed to have the same &lt;code&gt;PRIMARY KEY&lt;/code&gt; field value. The  &lt;code&gt;SOURCE IS&lt;/code&gt; clause is for use with  &lt;code&gt;Split Keys&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RECORD KEY&lt;/code&gt; の句は、ファイル内のレコードへの主要なアクセスを提供するために使用されるレコード内のフィールドを定義します。ファイル内の2つのレコードが同じ &lt;code&gt;PRIMARY KEY&lt;/code&gt; フィールド値を持つことは許可されません。 &lt;code&gt;SOURCE IS&lt;/code&gt; の句はで使用するためである &lt;code&gt;Split Keys&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fc82a369523305af04cf4f9f915efcf16b0a1d62" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;RECURSIVE&lt;/code&gt; clause, if any, will cause the compiler to generate different object code for the subprogram that will enable it to invoke itself and to properly return back to the program that invoked it.</source>
          <target state="translated">&lt;code&gt;RECURSIVE&lt;/code&gt; 句は、もしあれば、コンパイラは自分自身を呼び出すためにそれを可能にし、それを適切に呼び出されたプログラムに戻って戻るために、サブプログラムのためのさまざまなオブジェクトコードを生成します。</target>
        </trans-unit>
        <trans-unit id="4b20c5f00fa64627d49ea757ec56df0e913987ea" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;REEL&lt;/code&gt;,  &lt;code&gt;LOCK&lt;/code&gt; and  &lt;code&gt;NO REWIND&lt;/code&gt; clauses are syntactically recognized but are otherwise non-functional, except for the &lt;code&gt;CLOSE&amp;hellip;NO REWIND&lt;/code&gt; statement, which will generate a file status of 07 rather than the usual 00 (but take no other action).</source>
          <target state="translated">&lt;code&gt;REEL&lt;/code&gt; 、 &lt;code&gt;LOCK&lt;/code&gt; と &lt;code&gt;NO REWIND&lt;/code&gt; 句は、構文的に認められたがを除き、それ以外の非機能ですされている &lt;code&gt;CLOSE&amp;hellip;NO REWIND&lt;/code&gt; ではなく、通常00より07のファイルの状態を生成する（何も処置を行わない）だろう声明、。</target>
        </trans-unit>
        <trans-unit id="474c3f6d1bbfdeb67e797add930cfab064415ffc" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;RELATIVE KEY&lt;/code&gt; clause is optional only if &lt;code&gt;ACCESS MODE SEQUENTIAL&lt;/code&gt; is specified.</source>
          <target state="translated">&lt;code&gt;RELATIVE KEY&lt;/code&gt; の句は、場合にのみ、オプションで &lt;code&gt;ACCESS MODE SEQUENTIAL&lt;/code&gt; 指定されています。</target>
        </trans-unit>
        <trans-unit id="569d6df6b7554cffe0fe1b791648e4ef14242ded" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;RELATIVE KEY&lt;/code&gt; data item is a numeric data item that cannot be defined as a field within records of this file. Its purpose is to return the current relative record number of a relative file that is being processed in &lt;code&gt;SEQUENTIAL&lt;/code&gt; access mode and to serve as a key that specifies the relative record number to be read or written when processing a relative file in &lt;code&gt;RANDOM&lt;/code&gt; access mode.</source>
          <target state="translated">&lt;code&gt;RELATIVE KEY&lt;/code&gt; のデータ項目は、このファイルのレコードの中にフィールドとして定義することができない数字データ項目です。その目的は、 &lt;code&gt;SEQUENTIAL&lt;/code&gt; アクセスモードで処理されている相対ファイルの現在の相対レコード番号を返し、 &lt;code&gt;RANDOM&lt;/code&gt; アクセスモードで相対ファイルを処理するときに読み取りまたは書き込みを行う相対レコード番号を指定するキーとして機能することです。</target>
        </trans-unit>
        <trans-unit id="8d756ebfeaa290d5e7585ffe1c832f5da562434c" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;REPORT IS&lt;/code&gt; clause announces to the compiler that the file will be dedicated to the Report Writer Control System (RWCS); the clause names one or more reports, each to be described in the report section. The following special rules apply when the &lt;code&gt;REPORT&lt;/code&gt; clause is used:</source>
          <target state="translated">&lt;code&gt;REPORT IS&lt;/code&gt; 句は、ファイルがレポートライタ制御システム（RWCS）に専念されることをコンパイラに発表します。この句は、それぞれがレポートセクションで説明される1つ以上のレポートを指定します。 &lt;code&gt;REPORT&lt;/code&gt; 句を使用する場合は、次の特別な規則が適用されます。</target>
        </trans-unit>
        <trans-unit id="6071dd56abfbe62c4a206269645c668dd3cb9dc2" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;RETURNING&lt;/code&gt; clause allows you to specify a numeric data item into which the subroutine should return a numeric value. If you use this clause on the &lt;code&gt;CALL&lt;/code&gt;, the subroutine should include a &lt;code&gt;RETURNING&lt;/code&gt; (see &lt;a href=&quot;#PROCEDURE-DIVISION-RETURNING&quot;&gt;PROCEDURE DIVISION RETURNING&lt;/a&gt;) clause on its procedure division header. Of course, a subroutine may pass a value of any kind back in any argument passed &lt;code&gt;BY REFERENCE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RETURNING&lt;/code&gt; 句を使用すると、サブルーチンが数値を返す必要がありその中に数字データ項目を指定することができます。 &lt;code&gt;CALL&lt;/code&gt; でこの句を使用する場合、サブルーチンのプロシージャ分割ヘッダーに &lt;code&gt;RETURNING&lt;/code&gt; （&lt;a href=&quot;#PROCEDURE-DIVISION-RETURNING&quot;&gt;PROCEDURE DIVISION RETURNINGを&lt;/a&gt;参照）句を含める必要があります。もちろん、サブルーチンは、渡された引数のいずれかの種類のバックの値渡すこと &lt;code&gt;BY REFERENCE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a476b169b0e6a976c3d6bd5bd2d33226481c2e8b" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;RUN&lt;/code&gt; clause halts the program without displaying any special message to that effect.</source>
          <target state="translated">&lt;code&gt;RUN&lt;/code&gt; の句は、その効果に特別なメッセージを表示せずにプログラムを停止します。</target>
        </trans-unit>
        <trans-unit id="6419f821b45f6fbf498400509a1f2a2ec261cef8" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;SAME SORT-MERGE&lt;/code&gt; and  &lt;code&gt;SAME SORT&lt;/code&gt; clauses are syntactically recognized but are otherwise non-functional.</source>
          <target state="translated">&lt;code&gt;SAME SORT-MERGE&lt;/code&gt; と &lt;code&gt;SAME SORT&lt;/code&gt; 句は構文的に認められているが、それ以外は非機能です。</target>
        </trans-unit>
        <trans-unit id="dab2b898c85f7c018afb0ed20e45b72fb0748073" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;SCROLL&lt;/code&gt; option will cause the entire contents of the screen to be scrolled &lt;code&gt;UP&lt;/code&gt; or &lt;code&gt;DOWN&lt;/code&gt; by the specified number of lines before any value is displayed on the screen. It is syntactically allowable to specify a &lt;code&gt;SCROLL UP&lt;/code&gt; clause as well as a &lt;code&gt;SCROLL DOWN&lt;/code&gt; clause. In such an instance, it is the last one specified that will be honoured. If no &lt;code&gt;LINES&lt;/code&gt; specification is made, &lt;code&gt;1 LINE&lt;/code&gt; will be assumed.</source>
          <target state="translated">&lt;code&gt;SCROLL&lt;/code&gt; のオプションは、画面の内容全体をスクロールさせることになる &lt;code&gt;UP&lt;/code&gt; または &lt;code&gt;DOWN&lt;/code&gt; を任意の値が画面に表示される前に、指定した行数による。指定する構文的に許容される &lt;code&gt;SCROLL UP&lt;/code&gt; の句と同様に &lt;code&gt;SCROLL DOWN&lt;/code&gt; の句を。そのような場合、それは名誉を与えられる最後に指定されたものです。いいえの場合 &lt;code&gt;LINES&lt;/code&gt; の仕様が行われていない、 &lt;code&gt;1 LINE&lt;/code&gt; が想定されます。</target>
        </trans-unit>
        <trans-unit id="ad964b5874985a5043e00dc5a5244901edcbac46" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;SET&lt;/code&gt; option tests for whether &lt;var&gt;cdf-variable-1&lt;/var&gt; has been given a value, either via a &lt;code&gt;&amp;gt;&amp;gt;SET&lt;/code&gt; statement or via a &lt;code&gt;&amp;gt;&amp;gt;DEFINE&lt;/code&gt; without the &lt;code&gt;OFF&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;SET&lt;/code&gt; のかどうかのオプション試験 &lt;var&gt;cdf-variable-1&lt;/var&gt; のいずれかを介して、値を与えられている &lt;code&gt;&amp;gt;&amp;gt;SET&lt;/code&gt; 文または介し &lt;code&gt;&amp;gt;&amp;gt;DEFINE&lt;/code&gt; なし &lt;code&gt;OFF&lt;/code&gt; オプション。</target>
        </trans-unit>
        <trans-unit id="76ef9d3c020803c6ebc868e2c0e24029462d058c" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;SHARING&lt;/code&gt; clause defines the conditions under which the program will be willing (or not) to allow other programs executing at the same time to access the file. See &lt;a href=&quot;#File-Sharing&quot;&gt;File Sharing&lt;/a&gt;, for the details.</source>
          <target state="translated">&lt;code&gt;SHARING&lt;/code&gt; 句は、プログラムが同時に実行される他のプログラムがファイルにアクセスできるように喜んで（またはしない）される条件を定義します。詳細については、&lt;a href=&quot;#File-Sharing&quot;&gt;ファイル共有を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8d3f78c51293bae86a85347517ae96b938a534b0" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;SHARING&lt;/code&gt; clause informs the GnuCOBOL file runtime modules how you are willing to co-exist with any other GnuCOBOL programs that may attempt to open the same file after your program does. See &lt;a href=&quot;#File-Sharing&quot;&gt;File Sharing&lt;/a&gt;, for an explanation of the &lt;code&gt;SHARING&lt;/code&gt; clause.</source>
          <target state="translated">&lt;code&gt;SHARING&lt;/code&gt; 句は、あなたのプログラムがありません後に同じファイルを開こうとする可能性があり、他のGnuCOBOLプログラムと共存に喜んでどのようにGnuCOBOLファイルのランタイムモジュールを知らせます。 &lt;code&gt;SHARING&lt;/code&gt; 句の説明については、&lt;a href=&quot;#File-Sharing&quot;&gt;ファイル共有を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="10e3d80fd5c4390d09d30ea3a32d8df6b0ad5003" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;STATUS&lt;/code&gt; clause provides another means of returning an exit status. Using the &lt;code&gt;STATUS&lt;/code&gt; clause is functionally equivalent to using the &lt;code&gt;RETURNING&lt;/code&gt; clause.</source>
          <target state="translated">&lt;code&gt;STATUS&lt;/code&gt; の句は、終了状態を返すの別の手段を提供します。使用 &lt;code&gt;STATUS&lt;/code&gt; の句は使用して機能的に同等である &lt;code&gt;RETURNING&lt;/code&gt; 句を。</target>
        </trans-unit>
        <trans-unit id="ba4af926283d50a17ca44a126a27f1ccc6c10de3" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;TIMEOUT&lt;/code&gt; option will cause the &lt;code&gt;ACCEPT&lt;/code&gt; to wait no more than the specified number of seconds for input. The wait count may be specified as a positive integer or a numeric data item with a positive value.</source>
          <target state="translated">&lt;code&gt;TIMEOUT&lt;/code&gt; のオプションが発生します &lt;code&gt;ACCEPT&lt;/code&gt; ない入力のためにこれ以上の指定した秒数よりも待機すること。待機カウントは、正の整数または正の値を持つ数値データ項目として指定できます。</target>
        </trans-unit>
        <trans-unit id="8ed72fab74c0a97dc6f830da6eb1a40b7d670193" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;UPDATE&lt;/code&gt; option will enable the supplied data field to be updated having been displayed on screen prior to data being entered by overwriting, if needed. When this option is</source>
          <target state="translated">&lt;code&gt;UPDATE&lt;/code&gt; のオプションは、前に、必要に応じて、上書きすることにより、入力されたデータを画面上に表示されていた更新されることに供給されるデータフィールドが有効になります。このオプションが</target>
        </trans-unit>
        <trans-unit id="8f814ee572105020480b2d5c109781818f79475e" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;UPON CRT&lt;/code&gt;,  &lt;code&gt;UPON CRT-UNDER&lt;/code&gt; and  &lt;code&gt;CONVERSION&lt;/code&gt; clauses are syntactically recognized but are otherwise non-functional. They are supported to provide compatibility with COBOL source written for other COBOL implementations.</source>
          <target state="translated">&lt;code&gt;UPON CRT&lt;/code&gt; 、 &lt;code&gt;UPON CRT-UNDER&lt;/code&gt; と &lt;code&gt;CONVERSION&lt;/code&gt; 句は、構文的に認識されたが、それ以外は非機能されています。これらは、他のCOBOL実装用に作成されたCOBOLソースとの互換性を提供するためにサポートされています。</target>
        </trans-unit>
        <trans-unit id="1e9048cbff31d7d051f4f29327c832e57d33478c" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;USE AFTER STANDARD ERROR PROCEDURE&lt;/code&gt; clause defines a declarative procedure invoked any time a failure is encountered with the specified I/O type (or against the specified file(s)).</source>
          <target state="translated">&lt;code&gt;USE AFTER STANDARD ERROR PROCEDURE&lt;/code&gt; 句は、宣言プロシージャは障害がI / Oのタイプ（もしくは指定されたファイル（複数可）に対して）指定で遭遇されるたびに呼び出さ定義します。</target>
        </trans-unit>
        <trans-unit id="78e8346fd40b55d3f2bd972af7ae0f67898d464a" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;USING&lt;/code&gt; clause defines a list of arguments that may be passed from the calling program to the subprogram. The manner in which any given argument is passed to the subroutine depends upon the &lt;code&gt;BY&lt;/code&gt; clause (if any) coded (or implied) for that argument, as follows:</source>
          <target state="translated">&lt;code&gt;USING&lt;/code&gt; 句は、サブプログラムに呼び出し元のプログラムから渡される引数のリストを定義します。特定の引数がサブルーチンに渡される方法は、次のように、その引数に対してコーディング（または暗黙）された &lt;code&gt;BY&lt;/code&gt; 句（存在する場合）によって異なります。</target>
        </trans-unit>
        <trans-unit id="4d7c539d6785f77f4c0576ee8354e4759a3c153f" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;USING&lt;/code&gt; clause defines the arguments the subroutine entry-point supports. This list of arguments must match up against the &lt;code&gt;USING&lt;/code&gt; clause of any &lt;code&gt;CALL&lt;/code&gt; statement that will be invoking the subroutine using this entry-point.</source>
          <target state="translated">&lt;code&gt;USING&lt;/code&gt; 句には、引数のサブルーチンのエントリ・ポイントのサポートを定義します。この引数のリストは、このエントリポイントを使用してサブルーチンを呼び出す &lt;code&gt;CALL&lt;/code&gt; ステートメントの &lt;code&gt;USING&lt;/code&gt; 句と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="6c2fe3193a0de8661d51ad83d70795993295d713" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;USING&lt;/code&gt; clause should only be used on the procedure division header of subprograms (subroutines or user-defined functions).</source>
          <target state="translated">&lt;code&gt;USING&lt;/code&gt; 句は、サブプログラムの手順分割ヘッダ（サブルーチンまたはユーザ定義関数）に使用されるべきです。</target>
        </trans-unit>
        <trans-unit id="d5c83eab589342444dc063907ec418700cab1bd0" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;WITH LOCK&lt;/code&gt; option will be functional only if your GnuCOBOL build can support it. GnuCOBOL built for MinGW or native Windows will not, because the Unix &lt;code&gt;fcntl&lt;/code&gt; primitive doesn&amp;rsquo;t exist in those environments. GnuCOBOL built for Cygwin or Unix will.</source>
          <target state="translated">&lt;code&gt;WITH LOCK&lt;/code&gt; のオプションは、あなたのGnuCOBOLビルドがそれをサポートできる場合にのみ機能するようになります。Unix &lt;code&gt;fcntl&lt;/code&gt; プリミティブはこれらの環境に存在しないため、MinGWまたはネイティブWindows用に構築されたGnuCOBOLはそうではありません。CygwinまたはUnix用に構築されたGnuCOBOLはそうします。</target>
        </trans-unit>
        <trans-unit id="715c7586c26634bd644f6277bf072c6aad3fa9d8" translate="yes" xml:space="preserve">
          <source>The  &lt;em&gt;perform scope&lt;/em&gt; is defined as being the statements within &lt;var&gt;procedure-name-1&lt;/var&gt;, the statements within &lt;var&gt;procedure-name-2&lt;/var&gt; and all statements in all procedures defined between them.</source>
          <target state="translated">&lt;em&gt;範囲は、実行&lt;/em&gt;中の文であると定義される &lt;var&gt;procedure-name-1&lt;/var&gt; 、内のステートメント &lt;var&gt;procedure-name-2&lt;/var&gt; 及びそれらの間に定義されたすべての手順ですべての文。</target>
        </trans-unit>
        <trans-unit id="b5f7198f8fb40448c22faa814a712229edde5a67" translate="yes" xml:space="preserve">
          <source>The &quot;-FSM-&quot; acronyms make it easier to locate the description of the 01-item the status code and message text items belong to.</source>
          <target state="translated">FSM-」の頭文字をとることで、ステータスコードとメッセージテキストの項目が属する01項目の説明を簡単に見つけることができます。</target>
        </trans-unit>
        <trans-unit id="529b6992580424a3a1799c8f12f4aa404043a076" translate="yes" xml:space="preserve">
          <source>The &quot;modern&quot; languages, like Java, also have their own &quot;boilerplate&quot; infrastructure overhead that must be coded in order to write the logic that is necessary in the program. Take for example the&lt;code&gt;public static void main(String[] arg)&lt;/code&gt;and&lt;code&gt;import java.util.Scanner;&lt;/code&gt;statements. The critics tend to forget about this when they criticize COBOL for it&amp;rsquo;s structural &quot;overhead&quot;.</source>
          <target state="translated">Javaのような「モダン」言語にも独自の「ボイラープレート」インフラストラクチャオーバーヘッドがあり、プログラムで必要なロジックを記述するためにコーディングする必要があります。たとえば、 &lt;code&gt;public static void main(String[] arg)&lt;/code&gt; を取り、 &lt;code&gt;import java.util.Scanner;&lt;/code&gt; をインポートします。ステートメント。批評家は、COBOLの構造的な「オーバーヘッド」についてCOBOLを批判するときに、このことを忘れがちです。</target>
        </trans-unit>
        <trans-unit id="e1f244259e8e2fa0f6c459ed1bffa3b9a3a03280" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;-FSM-&amp;rdquo; acronyms make it easier to locate the description of the 01-item the status code and message text items belong to.</source>
          <target state="translated">「-FSM-」の頭字語を使用すると、ステータスコードとメッセージテキストアイテムが属する01アイテムの説明を簡単に見つけることができます。</target>
        </trans-unit>
        <trans-unit id="36925241e1190d3fa411748cd3ce02cc95a9c793" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;modern&amp;rdquo; languages, like Java, also have their own &amp;ldquo;boilerplate&amp;rdquo; infrastructure overhead that must be coded in order to write the logic that is necessary in the program. Take for example the &lt;code&gt;public static void main(String[] arg)&lt;/code&gt; and &lt;code&gt;import java.util.Scanner;&lt;/code&gt; statements. The critics tend to forget about this when they criticize COBOL for its structural &amp;ldquo;overhead&amp;rdquo;.</source>
          <target state="translated">Javaのような「現代」言語にも、プログラムで必要なロジックを記述するためにコーディングする必要のある独自の「定型」インフラストラクチャオーバーヘッドがあります。たとえば、 &lt;code&gt;public static void main(String[] arg)&lt;/code&gt; を取り、 &lt;code&gt;import java.util.Scanner;&lt;/code&gt; をインポートします。ステートメント。批評家は、COBOLの構造的な「オーバーヘッド」を批判するときに、これを忘れがちです。</target>
        </trans-unit>
        <trans-unit id="0ed4c9f9933dd9e4b8da3ca824145866c18f6a63" translate="yes" xml:space="preserve">
          <source>The &amp;lsquo;</source>
          <target state="translated">「</target>
        </trans-unit>
        <trans-unit id="79e19534bd0a509db696aed2669a9388d6786761" translate="yes" xml:space="preserve">
          <source>The &amp;lt;</source>
          <target state="translated">&amp;lt;</target>
        </trans-unit>
        <trans-unit id="4dd012025b215fb64723048dc5378511513993c3" translate="yes" xml:space="preserve">
          <source>The &amp;rsquo;</source>
          <target state="translated">「</target>
        </trans-unit>
        <trans-unit id="291eec57baddb509fdea3caa503c86c1ddaed1da" translate="yes" xml:space="preserve">
          <source>The -d debug flag is specified.</source>
          <target state="translated">d デバッグフラグを指定します。</target>
        </trans-unit>
        <trans-unit id="1362295b273781807d4dd883163bd8b930256da8" translate="yes" xml:space="preserve">
          <source>The ... meta character sequence signifies that the syntax element immediately preceding it may be repeated. The ... sequence itself should not be coded. If a syntax diagram contains &lt;code&gt;a b... c&lt;/code&gt;, syntax element &amp;lsquo;</source>
          <target state="translated">...メタ文字シーケンスは、その直前の構文要素が繰り返される可能性があることを示します。...シーケンス自体はコーディングしないでください。シンタックスダイアグラムに &lt;code&gt;a b... c&lt;/code&gt; が含まれている場合、シンタックス要素 '</target>
        </trans-unit>
        <trans-unit id="db50be534d16628548e2d2960f4c7bcdd0ff8e2e" translate="yes" xml:space="preserve">
          <source>The ... meta character sequence signifies that the syntax element immediately preceding it may be repeated. The ... sequence itself should not be coded. If a syntax diagram contains&lt;code&gt;a b... c&lt;/code&gt; syntax element &quot;a&quot; must be followed by at least one &quot;b&quot; element (possibly more) and the entire sequence must be terminated by a &quot;c&quot; syntax element.</source>
          <target state="translated">...メタ文字シーケンスは、その直前の構文要素を繰り返すことができることを示します。...シーケンス自体はコーディングしないでください。構文図に &lt;code&gt;a b... c&lt;/code&gt; 構文要素が含まれている場合、「a」の後に少なくとも1つの「b」要素（おそらくそれ以上）が続き、シーケンス全体が「c」構文要素で終了する必要があります。</target>
        </trans-unit>
        <trans-unit id="5096c4858ca56d38873ba4dd6117bcda2b86c7f6" translate="yes" xml:space="preserve">
          <source>The 01-level constant is one of four types of compilation-time constants that can be declared within a program. The other three types are &lt;code&gt;&amp;gt;&amp;gt;DEFINE&lt;/code&gt; CDF directive (see &lt;a href=&quot;#g_t_003e_003eDEFINE&quot;&gt;&amp;gt;&amp;gt;DEFINE&lt;/a&gt;) constants, &lt;code&gt;&amp;gt;&amp;gt;SET&lt;/code&gt; CDF directive (see &lt;a href=&quot;#g_t_003e_003eSET&quot;&gt;&amp;gt;&amp;gt;SET&lt;/a&gt;) constants and 78-level constants (see &lt;a href=&quot;#g_t78_002dLevel-Data-Items&quot;&gt;78-Level Data Items&lt;/a&gt;).</source>
          <target state="translated">01レベルの定数は、プログラム内で宣言できる4種類のコンパイル時定数の1つです。他の3つのタイプは、 &lt;code&gt;&amp;gt;&amp;gt;DEFINE&lt;/code&gt; CDFディレクティブ（&lt;a href=&quot;#g_t_003e_003eDEFINE&quot;&gt;&amp;gt;&amp;gt; DEFINEを&lt;/a&gt;参照）定数、 &lt;code&gt;&amp;gt;&amp;gt;SET&lt;/code&gt; CDFディレクティブ（&lt;a href=&quot;#g_t_003e_003eSET&quot;&gt;&amp;gt;&amp;gt; SETを&lt;/a&gt;参照）定数、および78レベル定数（&lt;a href=&quot;#g_t78_002dLevel-Data-Items&quot;&gt;78レベルデータ項目を参照&lt;/a&gt;）です。</target>
        </trans-unit>
        <trans-unit id="02dde9a86042eaa0a1d7d271ae63ee3e64e957db" translate="yes" xml:space="preserve">
          <source>The 01-level constant is one of four types of compilation-time constants that can be declared within a program. The other three types are&lt;code&gt;&amp;gt;&amp;gt;DEFINE&lt;/code&gt;CDF directive (see &lt;a href=&quot;#g_t_003e_003eDEFINE&quot;&gt;&amp;gt;&amp;gt;DEFINE&lt;/a&gt;) constants,&lt;code&gt;&amp;gt;&amp;gt;SET&lt;/code&gt;CDF directive (see &lt;a href=&quot;#g_t_003e_003eSET&quot;&gt;&amp;gt;&amp;gt;SET&lt;/a&gt;) constants and 78-level constants (see &lt;a href=&quot;#g_t78_002dLevel-Data-Items&quot;&gt;78-Level Data Items&lt;/a&gt;).</source>
          <target state="translated">01レベルの定数は、プログラム内で宣言できる4つのタイプのコンパイル時定数の1つです。他の3つのタイプは、 &lt;code&gt;&amp;gt;&amp;gt;DEFINE&lt;/code&gt; CDFディレクティブ（&lt;a href=&quot;#g_t_003e_003eDEFINE&quot;&gt;&amp;gt;&amp;gt; DEFINEを&lt;/a&gt;参照）定数、 &lt;code&gt;&amp;gt;&amp;gt;SET&lt;/code&gt; CDFディレクティブ（&lt;a href=&quot;#g_t_003e_003eSET&quot;&gt;&amp;gt;&amp;gt; SETを&lt;/a&gt;参照）定数、および78レベルの定数（&lt;a href=&quot;#g_t78_002dLevel-Data-Items&quot;&gt;78レベルのデータ項目を参照&lt;/a&gt;）です。</target>
        </trans-unit>
        <trans-unit id="17fc061dd6b1c9a35a4c53fa4d1701e3f82a4956" translate="yes" xml:space="preserve">
          <source>The 1st and 2nd examples are referred to as  &lt;em&gt;Subscripting&lt;/em&gt; while the 3rd is known as  &lt;em&gt;Indexing&lt;/em&gt;. The distinction is fairly simple.</source>
          <target state="translated">第1及び第2実施例のように呼ばれる &lt;em&gt;添字&lt;/em&gt;3がとして知られているが &lt;em&gt;インデックス&lt;/em&gt;。区別はかなり簡単です。</target>
        </trans-unit>
        <trans-unit id="2203aaa05e683d198781f9270706d87c15e5a5f0" translate="yes" xml:space="preserve">
          <source>The 1st and 2nd examples are referred to as &amp;rsquo;</source>
          <target state="translated">1番目と2番目の例は「</target>
        </trans-unit>
        <trans-unit id="adb0c408adad7c2963d9683e7d26945d511c90c3" translate="yes" xml:space="preserve">
          <source>The 7-character family of CPU products the CPU falls into. This will have values such as &quot;A4&quot;, &quot;A10&quot;, &quot;Core i5&quot;, &quot;Core i7&quot;, etc.</source>
          <target state="translated">CPUが該当するCPU製品の7文字のファミリー。これは「A4」「A10」「Core i5」「Core i7」などの値を持ちます。</target>
        </trans-unit>
        <trans-unit id="6697057c3b941cef1c028241eee3cd95f178d68f" translate="yes" xml:space="preserve">
          <source>The 7-character family of CPU products the CPU falls into. This will have values such as &amp;ldquo;A4&amp;rdquo;, &amp;ldquo;A10&amp;rdquo;, &amp;ldquo;Core i5&amp;rdquo;, &amp;ldquo;Core i7&amp;rdquo;, etc.</source>
          <target state="translated">CPUが分類される7文字のCPU製品ファミリ。これには、「A4」、「A10」、「Core i5」、「Corei7」などの値が含まれます。</target>
        </trans-unit>
        <trans-unit id="c2c194b745f4fe03509d3547dbaf88ba2a05d42b" translate="yes" xml:space="preserve">
          <source>The 78-level constant is one of four types of compilation-time constants that can be declared within a program. The other three types are &lt;code&gt;&amp;gt;&amp;gt;DEFINE&lt;/code&gt; CDF directive (see &lt;a href=&quot;#g_t_003e_003eDEFINE&quot;&gt;&amp;gt;&amp;gt;DEFINE&lt;/a&gt;) constants, &lt;code&gt;&amp;gt;&amp;gt;SET&lt;/code&gt; CDF directive (see &lt;a href=&quot;#g_t_003e_003eSET&quot;&gt;&amp;gt;&amp;gt;SET&lt;/a&gt;) constants and 01-level constants (see &lt;a href=&quot;#g_t01_002dLevel-Constants&quot;&gt;01-Level Constants&lt;/a&gt;).</source>
          <target state="translated">78レベルの定数は、プログラム内で宣言できる4種類のコンパイル時定数の1つです。他の3つのタイプは、 &lt;code&gt;&amp;gt;&amp;gt;DEFINE&lt;/code&gt; CDFディレクティブ（&lt;a href=&quot;#g_t_003e_003eDEFINE&quot;&gt;&amp;gt;&amp;gt; DEFINEを&lt;/a&gt;参照）定数、 &lt;code&gt;&amp;gt;&amp;gt;SET&lt;/code&gt; CDFディレクティブ（&lt;a href=&quot;#g_t_003e_003eSET&quot;&gt;&amp;gt;&amp;gt; SETを&lt;/a&gt;参照）定数、および01レベル定数（&lt;a href=&quot;#g_t01_002dLevel-Constants&quot;&gt;01&lt;/a&gt;レベル定数を参照）です。</target>
        </trans-unit>
        <trans-unit id="0029539fb2f900dfff21f3e206abf0f50473e6e3" translate="yes" xml:space="preserve">
          <source>The 78-level constant is one of four types of compilation-time constants that can be declared within a program. The other three types are&lt;code&gt;&amp;gt;&amp;gt;DEFINE&lt;/code&gt;CDF directive (see &lt;a href=&quot;#g_t_003e_003eDEFINE&quot;&gt;&amp;gt;&amp;gt;DEFINE&lt;/a&gt;) constants,&lt;code&gt;&amp;gt;&amp;gt;SET&lt;/code&gt;CDF directive (see &lt;a href=&quot;#g_t_003e_003eSET&quot;&gt;&amp;gt;&amp;gt;SET&lt;/a&gt;) constants and 01-level constants (see &lt;a href=&quot;#g_t01_002dLevel-Constants&quot;&gt;01-Level Constants&lt;/a&gt;).</source>
          <target state="translated">78レベルの定数は、プログラム内で宣言できる4種類のコンパイル時定数の1つです。他の3つのタイプは、 &lt;code&gt;&amp;gt;&amp;gt;DEFINE&lt;/code&gt; CDFディレクティブ（&lt;a href=&quot;#g_t_003e_003eDEFINE&quot;&gt;&amp;gt;&amp;gt; DEFINEを&lt;/a&gt;参照）定数、 &lt;code&gt;&amp;gt;&amp;gt;SET&lt;/code&gt; CDFディレクティブ（&lt;a href=&quot;#g_t_003e_003eSET&quot;&gt;&amp;gt;&amp;gt; SETを&lt;/a&gt;参照）定数、および01レベルの定数（&lt;a href=&quot;#g_t01_002dLevel-Constants&quot;&gt;01&lt;/a&gt;レベルの定数を参照）です。</target>
        </trans-unit>
        <trans-unit id="667d912751614d4776c960330a2ebb17711b8f5a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;gt;&amp;gt;DEFINE&lt;/code&gt; CDF directive is one way to create CDF variables that may be processed by other CDF statements such as &lt;code&gt;&amp;gt;&amp;gt;IF&lt;/code&gt; (see &lt;a href=&quot;#g_t_003e_003eIF&quot;&gt;&amp;gt;&amp;gt;IF&lt;/a&gt;). The &lt;code&gt;&amp;gt;&amp;gt;SET&lt;/code&gt; CDF directive (see &lt;a href=&quot;#g_t_003e_003eSET&quot;&gt;&amp;gt;&amp;gt;SET&lt;/a&gt;) provides another way to create them.</source>
          <target state="translated">&lt;code&gt;&amp;gt;&amp;gt;DEFINE&lt;/code&gt; CDFディレクティブをのような他のCDF文によって処理することができるCDF変数を作成する一つの方法です &lt;code&gt;&amp;gt;&amp;gt;IF&lt;/code&gt; （参照&lt;a href=&quot;#g_t_003e_003eIF&quot;&gt;&amp;gt;&amp;gt; IFを&lt;/a&gt;）。 &lt;code&gt;&amp;gt;&amp;gt;SET&lt;/code&gt; CDFディレクティブ（参照&lt;a href=&quot;#g_t_003e_003eSET&quot;&gt;&amp;gt;&amp;gt; SETは&lt;/a&gt;）それらを作成する別の方法を提供します。</target>
        </trans-unit>
        <trans-unit id="83b519c68907255a9fc3a2ef201d2dd27a00de51" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;gt;&amp;gt;IF&lt;/code&gt; CDF directive causes the GnuCOBOL compiler to process or ignore COBOL source statements, CDF text-manipulation statements and/or CDF directives depending upon the value of one or more conditional expressions based upon CDF variables.</source>
          <target state="translated">&lt;code&gt;&amp;gt;&amp;gt;IF&lt;/code&gt; CDFディレクティブは、プロセスにGnuCOBOLコンパイラを起こしたりCDF変数に基づいて1つのまたは複数の条件式の値に応じて、COBOLソース・ステートメント、CDFテキスト操作ステートメントおよび/またはCDFディレクティブを無視します。</target>
        </trans-unit>
        <trans-unit id="00aed29f8022c6c47d5a4dd1142f5c5cef31951d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;gt;&amp;gt;LEAP-SECONDS&lt;/code&gt; CDF directive is syntactically recognized but is otherwise non-functional.</source>
          <target state="translated">&lt;code&gt;&amp;gt;&amp;gt;LEAP-SECONDS&lt;/code&gt; CDFディレクティブは構文的に認識し、それ以外の非機能です。</target>
        </trans-unit>
        <trans-unit id="e699081e755c9b543fa3b269c8dce98f25a97a21" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;gt;&amp;gt;SET&lt;/code&gt; CDF directive provides an alternate means of performing the actions of the &lt;code&gt;&amp;gt;&amp;gt;DEFINE&lt;/code&gt; and &lt;code&gt;&amp;gt;&amp;gt;SOURCE&lt;/code&gt; directives, as well as a means of controlling the compiler&amp;rsquo;s</source>
          <target state="translated">&lt;code&gt;&amp;gt;&amp;gt;SET&lt;/code&gt; CDFディレクティブは、アクションの実行の代替手段を提供 &lt;code&gt;&amp;gt;&amp;gt;DEFINE&lt;/code&gt; と &lt;code&gt;&amp;gt;&amp;gt;SOURCE&lt;/code&gt; のディレクティブと同様に、コンパイラのを制御する手段を</target>
        </trans-unit>
        <trans-unit id="4982995ac0285e486ce499055a22e8656112db46" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;gt;&amp;gt;SOURCE&lt;/code&gt; CDF directive puts the compiler into &lt;code&gt;FIXED&lt;/code&gt; or &lt;code&gt;FREE&lt;/code&gt; source-code format mode. This, in effect, provides yet another mechanism for controlling the compiler&amp;rsquo;s</source>
          <target state="translated">&lt;code&gt;&amp;gt;&amp;gt;SOURCE&lt;/code&gt; CDFディレクティブプットコンパイラに &lt;code&gt;FIXED&lt;/code&gt; または &lt;code&gt;FREE&lt;/code&gt; ソース・コード形式モード。これは、事実上、コンパイラを制御するためのさらに別のメカニズムを提供します。</target>
        </trans-unit>
        <trans-unit id="cc81608c8051cf8280ff12a2614143396e12f488" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; symbol stands for &lt;code&gt;NOT EQUAL TO&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; 記号の略 &lt;code&gt;NOT EQUAL TO&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6a3a08899017ca5612956ffd22b62e62720f8b83" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;*&lt;/code&gt; operator computes the product of the left and right arguments while the &lt;code&gt;/&lt;/code&gt; operator computes the value of the left argument divided by the value of the right argument. If the right argument has a value of zero, expression evaluation will be prematurely terminated before a value is generated. This may cause program failure at run-time.</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; 一方、オペレータは、左と右の引数の積を計算 &lt;code&gt;/&lt;/code&gt; のオペレータが右の引数の値で割った左引数の値を計算します。右の引数の値がゼロの場合、値が生成される前に式の評価が途中で終了します。これにより、実行時にプログラムが失敗する可能性があります。</target>
        </trans-unit>
        <trans-unit id="b8c88f621f4aabf6aa7554389ed288aa11694300" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;+&lt;/code&gt; operator calculates the sum of the left and right arguments while the &lt;code&gt;-&lt;/code&gt; operator computes the value of the right argument subtracted from that of the left argument.</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt; のながら、オペレータは、左右引数の和を算出する &lt;code&gt;-&lt;/code&gt; 操作者が左引数のものから減算右引数の値を計算します。</target>
        </trans-unit>
        <trans-unit id="e275afa7a9c71be2b25fb354aafa0649363305ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;var&gt;device-name-1&lt;/var&gt; IS &lt;var&gt;mnemonic-name-2&lt;/var&gt;&lt;/code&gt; clause allows you to specify an alternate name (&lt;var&gt;device-name-1&lt;/var&gt;) for one of the built-in GnuCOBOL device name &lt;var&gt;mnemonic-name-2&lt;/var&gt;. The list of device names built-into GnuCOBOL, and the physical device associated with that name, are as follows:</source>
          <target state="translated">&lt;code&gt;&lt;var&gt;device-name-1&lt;/var&gt; IS &lt;var&gt;mnemonic-name-2&lt;/var&gt;&lt;/code&gt; 句を使用すると、代替名（指定することができます &lt;var&gt;device-name-1&lt;/var&gt; 内蔵のGnuCOBOLデバイス名のいずれかの） &lt;var&gt;mnemonic-name-2&lt;/var&gt; 。GnuCOBOLに組み込まれているデバイス名のリスト、およびその名前に関連付けられている物理デバイスは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="c7533ca680b65e0a271d0a4a2a45ca7de180ddcf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;var&gt;feature-name-1&lt;/var&gt; IS &lt;var&gt;mnemonic-name-3&lt;/var&gt;&lt;/code&gt; clause allow for mnemonic names to be assigned to up to the 13 printer channel (i.e. vertical page positioning) position feature names &lt;code&gt;C&lt;var&gt;nn&lt;/var&gt;&lt;/code&gt; (&lt;code&gt;&lt;var&gt;nn&lt;/var&gt;=01-12&lt;/code&gt;) and &lt;code&gt;CSP&lt;/code&gt;. Once a channel position has been assigned a mnemonic name, statements of the form &lt;code&gt;WRITE &lt;var&gt;record-name&lt;/var&gt; AFTER ADVANCING &lt;var&gt;mnemonic-name-3&lt;/var&gt;&lt;/code&gt; may be coded to write the specified print record at the channel position assigned to &lt;var&gt;mnemonic-name-3&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;var&gt;feature-name-1&lt;/var&gt; IS &lt;var&gt;mnemonic-name-3&lt;/var&gt;&lt;/code&gt; 句は13プリンタチャネル（すなわち、垂直ページ位置決め）位置機能名までに割り当てられるニーモニック名を許容 &lt;code&gt;C&lt;var&gt;nn&lt;/var&gt;&lt;/code&gt; （ &lt;code&gt;&lt;var&gt;nn&lt;/var&gt;=01-12&lt;/code&gt; ）および &lt;code&gt;CSP&lt;/code&gt; 。チャネル位置にニーモニック名が割り当てられると、 &lt;code&gt;WRITE &lt;var&gt;record-name&lt;/var&gt; AFTER ADVANCING &lt;var&gt;mnemonic-name-3&lt;/var&gt;&lt;/code&gt; の形式のステートメントをコーディングして、指定された印刷レコードを &lt;var&gt;mnemonic-name-3&lt;/var&gt; 割り当てられたチャネル位置に書き込むことができます。</target>
        </trans-unit>
        <trans-unit id="c8ba518194bcac50caa65451b706c871e1b2621a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ACCEPT screen-data-item&lt;/code&gt; statement (see &lt;a href=&quot;#ACCEPT-screen_002ddata_002ditem&quot;&gt;ACCEPT screen-data-item&lt;/a&gt;) will ignore the Enter key and any other cursor-moving keystrokes that would cause the cursor to move to another screen item</source>
          <target state="translated">&lt;code&gt;ACCEPT screen-data-item&lt;/code&gt; 文を（参照&lt;a href=&quot;#ACCEPT-screen_002ddata_002ditem&quot;&gt;画面データ項目をACCEPT&lt;/a&gt;キー入力し、カーソルを引き起こす他のカーソル移動キーストロークは別の画面項目に移動するには無視されます）</target>
        </trans-unit>
        <trans-unit id="1db3487139fee46dec9ae6874a2230fce380ea4a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ACCEPT screen-data-item&lt;/code&gt; statement (see &lt;a href=&quot;#ACCEPT-screen_002ddata_002ditem&quot;&gt;ACCEPT screen-data-item&lt;/a&gt;) will ignore the Enter key and any other cursor-moving keystrokes that would cause the cursor to move to another screen item unless the proper amount of data has been entered into the field. Function keys will still be allowed to terminate the &lt;code&gt;ACCEPT&lt;/code&gt;, however.</source>
          <target state="translated">&lt;code&gt;ACCEPT screen-data-item&lt;/code&gt; 文を（参照&lt;a href=&quot;#ACCEPT-screen_002ddata_002ditem&quot;&gt;画面データ項目をACCEPT&lt;/a&gt;）キーを入力して、データの適切な量をに入力された場合を除き、カーソルが別の画面項目に移動させるような、他のカーソル移動キーストロークを無視しますフィールド。ただし、ファンクションキーは引き続き &lt;code&gt;ACCEPT&lt;/code&gt; を終了できます。</target>
        </trans-unit>
        <trans-unit id="ea84da2cf956e64f3be3a531f5ccefb6c554ec8a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ACOS&lt;/code&gt; function determines and returns the trigonometric arc-cosine, or inverse cosine, of &lt;var&gt;cosine&lt;/var&gt; value (a numeric literal or data item) supplied as an argument.</source>
          <target state="translated">&lt;code&gt;ACOS&lt;/code&gt; の機能を決定し、三角のアークコサイン変換、または逆余弦、戻り &lt;var&gt;cosine&lt;/var&gt; 引数として指定された値（数値リテラルまたはデータ項目）。</target>
        </trans-unit>
        <trans-unit id="62f3a3698b5d743231cd43773657f8bd689658cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ADDRESS OF&lt;/code&gt; clause is optional and may be omitted. The presence or absence of this clause has no effect upon the program.</source>
          <target state="translated">&lt;code&gt;ADDRESS OF&lt;/code&gt; 句はオプションであり、省略してもよいです。この条項の有無は、プログラムに影響を与えません。</target>
        </trans-unit>
        <trans-unit id="0223d143baca6e14f106743f7c0475ac95763cda" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ADVANCING PAGE&lt;/code&gt; clause will introduce the appropriate number of line-terminator character sequences into the file either before the written record (&lt;code&gt;AFTER ADVANCING&lt;/code&gt;) or after the written record (&lt;code&gt;BEFORE ADVANCING&lt;/code&gt;) so as to force the printer to automatically advance to a new sheet of paper when the file prints. No formfeed characters will be generated when &lt;code&gt;LINAGE&lt;/code&gt; is specified &amp;mdash; instead, it is assumed that the printer to which the report will be printed will be loaded with special forms that conform to the specifications defined by the &lt;code&gt;LINAGE&lt;/code&gt; clause.</source>
          <target state="translated">&lt;code&gt;ADVANCING PAGE&lt;/code&gt; 句は、書き込まれたレコードの前（ &lt;code&gt;AFTER ADVANCING&lt;/code&gt; ）または書き込まれたレコードの後（ &lt;code&gt;BEFORE ADVANCING&lt;/code&gt; ）のいずれかに、適切な数の行末記号文字シーケンスをファイルに導入して、プリンタを強制的に新しいシートに進めます。ファイルが印刷されるときの紙。 &lt;code&gt;LINAGE&lt;/code&gt; が指定されている場合、フォームフィード文字は生成されません。代わりに、レポートが印刷されるプリンターには、 &lt;code&gt;LINAGE&lt;/code&gt; 句で定義された仕様に準拠する特別なフォームがロードされると想定されます。</target>
        </trans-unit>
        <trans-unit id="6e2ee1b7d44a7b016faeacc1f2219109e6bfa46f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ADVANCING n LINES&lt;/code&gt; clause will introduce the specified number of line-terminator character sequences into the file either before the written record (&lt;code&gt;AFTER ADVANCING&lt;/code&gt;) or after the written record (&lt;code&gt;BEFORE ADVANCING&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;ADVANCING n LINES&lt;/code&gt; 節は（書かれたレコードの前のいずれかのファイルに行終了文字列の指定された数をご紹介します &lt;code&gt;AFTER ADVANCING&lt;/code&gt; ）または（書かれたレコードの後に &lt;code&gt;BEFORE ADVANCING&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="bdbdd9b23ae4a3adf0fa9b95f0b6d5f2c5bc7ff6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ALLOCATE&lt;/code&gt; statement is used to dynamically allocate memory at run-time.</source>
          <target state="translated">&lt;code&gt;ALLOCATE&lt;/code&gt; 文が実行時に動的にメモリを割り当てるために使用されます。</target>
        </trans-unit>
        <trans-unit id="0ea0d4fd04f352980dabe3a16bc787198b92b939" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ALPHABETIC-LOWER&lt;/code&gt; and &lt;code&gt;ALPHABETIC-UPPER&lt;/code&gt; class conditions consider only spaces and the respective type of letters to be acceptable in order to pass such a class test.</source>
          <target state="translated">&lt;code&gt;ALPHABETIC-LOWER&lt;/code&gt; と &lt;code&gt;ALPHABETIC-UPPER&lt;/code&gt; のクラス条件は、スペースや文字のそれぞれのタイプは、クラス試験に合格するために許容可能であると考えます。</target>
        </trans-unit>
        <trans-unit id="02edb573a71fffd6e4240034051d305b603c3a9b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ALPHABETIC&lt;/code&gt; class test considers only upper-case letters, lower-case letters and spaces to be alphabetic in nature.</source>
          <target state="translated">&lt;code&gt;ALPHABETIC&lt;/code&gt; クラスのテストは、大文字、小文字とスペースは、本質的にアルファベットとみなします。</target>
        </trans-unit>
        <trans-unit id="1782e4c418c6c26c0f5b1875e3afefc2e734ea6f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ALTER&lt;/code&gt; statement was used in the early years of the COBOL language to edit the object code of a program &lt;strong&gt;at execution time&lt;/strong&gt;, changing a &lt;code&gt;GO TO&lt;/code&gt; (see &lt;a href=&quot;#Simple-GO-TO&quot;&gt;Simple GO TO&lt;/a&gt;) statement to branch to a spot in the program different than where the &lt;code&gt;GO TO&lt;/code&gt; statement was originally compiled for.</source>
          <target state="translated">&lt;code&gt;ALTER&lt;/code&gt; の文は、プログラムのオブジェクトコードを編集するCOBOL言語の早い時期に使用された&lt;strong&gt;実行時に&lt;/strong&gt;変更し、 &lt;code&gt;GO TO&lt;/code&gt; （参照&lt;a href=&quot;#Simple-GO-TO&quot;&gt;単純GO TOを&lt;/a&gt;どこよりもプログラム異なるのスポットへの分岐まで）の文 &lt;code&gt;GO TO&lt;/code&gt; をステートメントは元々のためにコンパイルされました。</target>
        </trans-unit>
        <trans-unit id="a4ae323b80c5fc9272db92d8494a26bf38f4d163" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ANY LENGTH&lt;/code&gt; and &lt;code&gt;BASED&lt;/code&gt; (see &lt;a href=&quot;#BASED&quot;&gt;BASED&lt;/a&gt;) clauses cannot be used together in the same data item description.</source>
          <target state="translated">&lt;code&gt;ANY LENGTH&lt;/code&gt; と &lt;code&gt;BASED&lt;/code&gt; （参照&lt;a href=&quot;#BASED&quot;&gt;BASED&lt;/a&gt;）句は、同じデータ項目の説明において一緒に使用することができません。</target>
        </trans-unit>
        <trans-unit id="278da24b3371049b38bb3202716000550db237ea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ASIN&lt;/code&gt; function determines and returns the trigonometric arc-sine, or inverse sine, of &lt;var&gt;sine&lt;/var&gt; value (a numeric literal or data item) supplied as an argument.</source>
          <target state="translated">&lt;code&gt;ASIN&lt;/code&gt; の機能は決定との三角アークサイン、または逆サイン、戻り &lt;var&gt;sine&lt;/var&gt; 引数として指定された値（数値リテラルまたはデータ項目）。</target>
        </trans-unit>
        <trans-unit id="de6da974266ec004c3611f0d717c4f1432277c43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AT END-OF-PAGE&lt;/code&gt; clause will be triggered, thus executing &lt;var&gt;imperative-statement-1&lt;/var&gt; (see &lt;a href=&quot;#Imperative-Statement&quot;&gt;Imperative Statement&lt;/a&gt;), if the &lt;code&gt;WRITE&lt;/code&gt; statement introduces a data line or line-feed character into the file at a line position within the Page Footer area defined by the &lt;code&gt;LINAGE&lt;/code&gt; clause. The &lt;code&gt;NOT AT END-OF-PAGE&lt;/code&gt; clause will be triggered (thus executing &lt;var&gt;imperative-statement-2&lt;/var&gt;) if no end-of-page condition occurred during the &lt;code&gt;WRITE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;AT END-OF-PAGE&lt;/code&gt; 句はこのように実行し、トリガされます &lt;var&gt;imperative-statement-1&lt;/var&gt; （参照&lt;a href=&quot;#Imperative-Statement&quot;&gt;無条件文を&lt;/a&gt;すれば、） &lt;code&gt;WRITE&lt;/code&gt; 文はページフッター領域内の行の位置でファイルにデータラインまたは改行文字を紹介します &lt;code&gt;LINAGE&lt;/code&gt; 句で定義されます。 &lt;code&gt;NOT AT END-OF-PAGE&lt;/code&gt; 句は（したがって実行トリガされる &lt;var&gt;imperative-statement-2&lt;/var&gt; 何ページ終了条件が中に発生していない場合） &lt;code&gt;WRITE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="24e095f163a3d494ac71a894abbd8cc836812521" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AT END&lt;/code&gt; clause will &amp;mdash; if present &amp;mdash; cause &lt;var&gt;imperative-statement-1&lt;/var&gt; (see &lt;a href=&quot;#Imperative-Statement&quot;&gt;Imperative Statement&lt;/a&gt;) to be executed if the statement fails due to a file status of 10 (end-of-file). See &lt;a href=&quot;#File-Status-Codes&quot;&gt;File Status Codes&lt;/a&gt;, for a list of possible File Status codes.</source>
          <target state="translated">&lt;code&gt;AT END&lt;/code&gt; の原因-存在する場合-句は、意志 &lt;var&gt;imperative-statement-1&lt;/var&gt; （参照&lt;a href=&quot;#Imperative-Statement&quot;&gt;無条件文を&lt;/a&gt;文は10（エンド・オブ・ファイル）のファイルの状態に起因する障害が発生した場合に実行されるように）。可能なファイルステータスコードのリストについては、&lt;a href=&quot;#File-Status-Codes&quot;&gt;ファイルステータスコードを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f9828f2fae8dd75150905123492762f993d97b63" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AUTO&lt;/code&gt; (see &lt;a href=&quot;#AUTO&quot;&gt;AUTO&lt;/a&gt;), &lt;code&gt;AUTO-SKIP&lt;/code&gt; (see &lt;a href=&quot;#AUTO_002dSKIP&quot;&gt;AUTO-SKIP&lt;/a&gt;) and &lt;code&gt;AUTOTERMINATE&lt;/code&gt; clauses are interchangeable, and may not be used together in the same data item description.</source>
          <target state="translated">&lt;code&gt;AUTO&lt;/code&gt; （参照&lt;a href=&quot;#AUTO&quot;&gt;オート&lt;/a&gt;）、 &lt;code&gt;AUTO-SKIP&lt;/code&gt; （参照&lt;a href=&quot;#AUTO_002dSKIP&quot;&gt;AUTO-SKIPを&lt;/a&gt;）と &lt;code&gt;AUTOTERMINATE&lt;/code&gt; の句は交換可能であり、かつ同一のデータ項目の説明に一緒に使用されなくてもよいです。</target>
        </trans-unit>
        <trans-unit id="140488a17d51e3187792b0a8a8b691f376badd43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AUTO&lt;/code&gt; (see &lt;a href=&quot;#AUTO&quot;&gt;AUTO&lt;/a&gt;), &lt;code&gt;AUTO-SKIP&lt;/code&gt; and &lt;code&gt;AUTOTERMINATE&lt;/code&gt; (see &lt;a href=&quot;#AUTOTERMINATE&quot;&gt;AUTOTERMINATE&lt;/a&gt;) clauses are interchangeable, and may not be used together in the same data item description.</source>
          <target state="translated">&lt;code&gt;AUTO&lt;/code&gt; （参照&lt;a href=&quot;#AUTO&quot;&gt;オート&lt;/a&gt;）、 &lt;code&gt;AUTO-SKIP&lt;/code&gt; 及び &lt;code&gt;AUTOTERMINATE&lt;/code&gt; （参照&lt;a href=&quot;#AUTOTERMINATE&quot;&gt;AUTOTERMINATEを&lt;/a&gt;）句は交換可能であり、かつ同一のデータ項目の説明に一緒に使用されなくてもよいです。</target>
        </trans-unit>
        <trans-unit id="c42098ebc26a0f038705a75a6561674b05407042" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AUTO&lt;/code&gt;, &lt;code&gt;AUTO-SKIP&lt;/code&gt; (see &lt;a href=&quot;#AUTO_002dSKIP&quot;&gt;AUTO-SKIP&lt;/a&gt;) and &lt;code&gt;AUTOTERMINATE&lt;/code&gt; (see &lt;a href=&quot;#AUTOTERMINATE&quot;&gt;AUTOTERMINATE&lt;/a&gt;) clauses are interchangeable, and may not be used together in the same data item description.</source>
          <target state="translated">&lt;code&gt;AUTO&lt;/code&gt; 、 &lt;code&gt;AUTO-SKIP&lt;/code&gt; （参照&lt;a href=&quot;#AUTO_002dSKIP&quot;&gt;AUTO-SKIPを&lt;/a&gt;）および &lt;code&gt;AUTOTERMINATE&lt;/code&gt; （参照&lt;a href=&quot;#AUTOTERMINATE&quot;&gt;AUTOTERMINATEを&lt;/a&gt;）句は交換可能であり、かつ同一のデータ項目の説明に一緒に使用されなくてもよいです。</target>
        </trans-unit>
        <trans-unit id="2494acc2e7a8ace9860bd76a94afef97aa96655d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BASED&lt;/code&gt; and &lt;code&gt;ANY LENGTH&lt;/code&gt; (see &lt;a href=&quot;#ANY-LENGTH&quot;&gt;ANY LENGTH&lt;/a&gt;) clauses cannot be used together in the same data item description.</source>
          <target state="translated">&lt;code&gt;BASED&lt;/code&gt; 及び &lt;code&gt;ANY LENGTH&lt;/code&gt; （参照&lt;a href=&quot;#ANY-LENGTH&quot;&gt;任意の長さ&lt;/a&gt;）句は、同じデータ項目の説明において一緒に使用することができません。</target>
        </trans-unit>
        <trans-unit id="d5f91e7da50c21be8c75ebaba2c51b7eed1b301b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BASED&lt;/code&gt; clause may only be used on level 01 and level 77 data items.</source>
          <target state="translated">&lt;code&gt;BASED&lt;/code&gt; 句は、レベル01とレベル77のデータ項目上で使用することができます。</target>
        </trans-unit>
        <trans-unit id="0b29fd13b0c160aa683c1a8ec07166d728ecaf61" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BEEP&lt;/code&gt; (see &lt;a href=&quot;#BEEP&quot;&gt;BEEP&lt;/a&gt;) and &lt;code&gt;BELL&lt;/code&gt; clauses are interchangeable, and may not be used together in the same data item description.</source>
          <target state="translated">&lt;code&gt;BEEP&lt;/code&gt; （参照&lt;a href=&quot;#BEEP&quot;&gt;ビープ音&lt;/a&gt;）と &lt;code&gt;BELL&lt;/code&gt; の句は交換可能であり、かつ同一のデータ項目の説明に一緒に使用されなくてもよいです。</target>
        </trans-unit>
        <trans-unit id="d8699b815ff4a77819cab01c59b87c6c828d48fd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BEEP&lt;/code&gt; and &lt;code&gt;BELL&lt;/code&gt; (see &lt;a href=&quot;#BELL&quot;&gt;BELL&lt;/a&gt;) clauses are interchangeable, and may not be used together in the same data item description.</source>
          <target state="translated">&lt;code&gt;BEEP&lt;/code&gt; と &lt;code&gt;BELL&lt;/code&gt; （参照&lt;a href=&quot;#BELL&quot;&gt;ベル&lt;/a&gt;）句は交換可能であり、かつ同一のデータ項目の説明に一緒に使用されなくてもよいです。</target>
        </trans-unit>
        <trans-unit id="503eaf118811ae9a6e8d3f7322bc3c4e5b0b82ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BLINK&lt;/code&gt; clause modifies the visual appearance of the displayed field by making the field contents blink.</source>
          <target state="translated">&lt;code&gt;BLINK&lt;/code&gt; の句は、フィールドの内容が点滅することにより表示されたフィールドの外観を変更します。</target>
        </trans-unit>
        <trans-unit id="e1a48a32d471c68f0219df0ea8b892ea0120eff4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BY&lt;/code&gt; value, if any, will be added to &lt;var&gt;identifier-2&lt;/var&gt;. If no &lt;code&gt;BY&lt;/code&gt; is specified, it will be treated as if &lt;code&gt;BY 1&lt;/code&gt; had been specified.</source>
          <target state="translated">&lt;code&gt;BY&lt;/code&gt; の値は、もしあれば、に追加される &lt;var&gt;identifier-2&lt;/var&gt; 。何場合 &lt;code&gt;BY&lt;/code&gt; が指定されていないかのように、それが扱われます &lt;code&gt;BY 1&lt;/code&gt; が指定されていました。</target>
        </trans-unit>
        <trans-unit id="59ba5f8b6b4ce3708bf504e5071d8a575ae607c3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BYTE-LENGTH&lt;/code&gt; clause will produce a numeric value for &lt;var&gt;constant-name-1&lt;/var&gt; identical to that which would be returned by the &lt;code&gt;BYTE-LENGTH&lt;/code&gt; intrinsic function executed against &lt;var&gt;identifier-1&lt;/var&gt; or a data item declared with a &lt;code&gt;USAGE&lt;/code&gt; of &lt;var&gt;usage-name&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;BYTE-LENGTH&lt;/code&gt; 句はの数値生成する &lt;var&gt;constant-name-1&lt;/var&gt; によって返されるものと同じ &lt;code&gt;BYTE-LENGTH&lt;/code&gt; に対して実行組み込み関数 &lt;var&gt;identifier-1&lt;/var&gt; 又はで宣言されたデータ項目 &lt;code&gt;USAGE&lt;/code&gt; の &lt;var&gt;usage-name&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="79791b31ba9a211cf40a3a1e2d1af33669e5570f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;C$PRINTABLE&lt;/code&gt; subroutine converts the contents of the data-item specified as the first argument to printable characters. Those characters that are deemed printable (as defined by the character set used by &lt;var&gt;data-item&lt;/var&gt;) will remain unchanged, while those that are NOT printable will be converted to the character specified as the second argument.</source>
          <target state="translated">&lt;code&gt;C$PRINTABLE&lt;/code&gt; サブルーチンは、印刷可能文字の最初の引数として指定されたデータ項目の内容を変換します。印刷可能と見なされる文字（ &lt;var&gt;data-item&lt;/var&gt; 使用される文字セットによって定義される）は変更されませんが、印刷可能ではない文字は2番目の引数として指定された文字に変換されます。</target>
        </trans-unit>
        <trans-unit id="a8f587f45de443d3566df2a972e994675c4ee80f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CALL&lt;/code&gt; statement is used to transfer control to a subroutine. See &lt;a href=&quot;#Sub_002dProgramming&quot;&gt;Sub-Programming&lt;/a&gt;, for the specifics of using subprograms with GnuCOBOL programs.</source>
          <target state="translated">&lt;code&gt;CALL&lt;/code&gt; の文がサブルーチンに制御を転送するために使用されます。GnuCOBOLプログラムでのサブプログラムの使用の詳細については、&lt;a href=&quot;#Sub_002dProgramming&quot;&gt;サブプログラミングを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="5f85323d661b47ac5a1616445fc3fa60c7f64ab1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CANCEL&lt;/code&gt; statement unloads the dynamically-loadable subprogram module containing the entry-point specified as &lt;var&gt;literal-1&lt;/var&gt; or &lt;var&gt;identifier-1&lt;/var&gt; from memory.</source>
          <target state="translated">&lt;code&gt;CANCEL&lt;/code&gt; 文アンロードとして指定されたエントリ・ポイントを含む、動的にロード可能なサブプログラムモジュール &lt;var&gt;literal-1&lt;/var&gt; または &lt;var&gt;identifier-1&lt;/var&gt; メモリからの。</target>
        </trans-unit>
        <trans-unit id="f4a27cdb3507d2e93bd220bdae742793f50323b8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CBL_CLOSE_FILE&lt;/code&gt; subroutine closes a byte stream file previously opened by either the &lt;code&gt;CBL_OPEN_FILE&lt;/code&gt; built-in system subroutine (see &lt;a href=&quot;#CBL_005fOPEN_005fFILE&quot;&gt;CBL_OPEN_FILE&lt;/a&gt;) or &lt;code&gt;CBL_CREATE_FILE&lt;/code&gt; built-in system subroutine (see &lt;a href=&quot;#CBL_005fCREATE_005fFILE&quot;&gt;CBL_CREATE_FILE&lt;/a&gt;) subroutines.</source>
          <target state="translated">&lt;code&gt;CBL_CLOSE_FILE&lt;/code&gt; のサブルーチンは、以前のいずれかで開かれたバイトストリームファイルクローズ &lt;code&gt;CBL_OPEN_FILE&lt;/code&gt; は内蔵のシステムサブルーチン（参照&lt;a href=&quot;#CBL_005fOPEN_005fFILE&quot;&gt;CBL_OPEN_FILEを&lt;/a&gt;）または &lt;code&gt;CBL_CREATE_FILE&lt;/code&gt; を内蔵のシステムサブルーチン（参照&lt;a href=&quot;#CBL_005fCREATE_005fFILE&quot;&gt;CBL_CREATE_FILEを&lt;/a&gt;）サブルーチンを。</target>
        </trans-unit>
        <trans-unit id="847d9241b5798002d520f534a1379d6672fbdb90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CBL_CREATE_FILE&lt;/code&gt; subroutine creates the new file specified using the file-path argument and opens it for output as a byte-stream file usable by &lt;code&gt;CBL_WRITE_FILE&lt;/code&gt; built-in system subroutine (see &lt;a href=&quot;#CBL_005fWRITE_005fFILE&quot;&gt;CBL_WRITE_FILE&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;CBL_CREATE_FILE&lt;/code&gt; のサブルーチンは、新しいファイルは、ファイル・パス引数を使用して、指定されたとすることにより、バイトストリームファイルの使用可能なように出力のためにそれを開いて作成し &lt;code&gt;CBL_WRITE_FILE&lt;/code&gt; 内蔵のシステムサブルーチン（参照&lt;a href=&quot;#CBL_005fWRITE_005fFILE&quot;&gt;CBL_WRITE_FILEを&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="bde592ae38c0817da21ce8c41a6ce70708349c04" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CBL_GC_PRINTABLE&lt;/code&gt; subroutine converts the contents of the data-item specified as the first argument to printable characters.</source>
          <target state="translated">&lt;code&gt;CBL_GC_PRINTABLE&lt;/code&gt; のサブルーチンは、印刷可能文字の最初の引数として指定されたデータ項目の内容を変換します。</target>
        </trans-unit>
        <trans-unit id="1477a9878a93563051a2d45e0bdd3de13732025d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CHAINING&lt;/code&gt; clause defines arguments that will be passed to a main program from the operating system. The argument identifiers specified on the &lt;code&gt;CHAINING&lt;/code&gt; clause will be populated by character strings comprised of the parameters specified to the program on the command line that executed it, as follows:</source>
          <target state="translated">&lt;code&gt;CHAINING&lt;/code&gt; 句は、オペレーティング・システムからメインプログラムに渡される引数を定義します。 &lt;code&gt;CHAINING&lt;/code&gt; 句で指定された引数識別子には、次のように、プログラムを実行したコマンドラインでプログラムに指定されたパラメータで構成される文字列が入力されます。</target>
        </trans-unit>
        <trans-unit id="86b8c23771e3988e02de155674cbcf72eadf9e27" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CHAINING&lt;/code&gt; term provides one mechanism a programmer may use to retrieve command-line arguments passed to a program at execution time.</source>
          <target state="translated">&lt;code&gt;CHAINING&lt;/code&gt; 用語は、プログラマは、実行時にプログラムに渡されるコマンドライン引数を取得するために使用し得る1つのメカニズムを提供します。</target>
        </trans-unit>
        <trans-unit id="20cfe967fb2635fdf2797dedd2ab6586b2e1c39f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CHARACTERS&lt;/code&gt; option will match any one single character, regardless of what that character is.</source>
          <target state="translated">&lt;code&gt;CHARACTERS&lt;/code&gt; のオプションにかかわらず、その文字が何であるかの、いずれかの単一文字に一致します。</target>
        </trans-unit>
        <trans-unit id="dfc8a606234c39b4ecbb4c441c7fa6a0b953cdd5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CHARACTERS&lt;/code&gt; option will match any one single character. When you use this option, the replacement sub string (see the next item) must be exactly one character in length.</source>
          <target state="translated">&lt;code&gt;CHARACTERS&lt;/code&gt; のオプションは、任意の1つの文字に一致します。このオプションを使用する場合、置換部分文字列（次の項目を参照）は正確に1文字の長さである必要があります。</target>
        </trans-unit>
        <trans-unit id="a40c909c34d3609f4e9fbebb3ed0ef9a73055873" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CLOSE&lt;/code&gt; statement may only be executed against files that have been successfully opened.</source>
          <target state="translated">&lt;code&gt;CLOSE&lt;/code&gt; のステートメントは、正常に開かれているファイルに対して実行することができます。</target>
        </trans-unit>
        <trans-unit id="fea898d5d53e6d0013bc24a7a38cf4ceb302db11" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CLOSE&lt;/code&gt; statement terminates the program&amp;rsquo;s access to the specified file(s).</source>
          <target state="translated">&lt;code&gt;CLOSE&lt;/code&gt; 文は、指定したファイル（複数可）へのプログラムのアクセスを終了します。</target>
        </trans-unit>
        <trans-unit id="2f2632e8258a7ef5b16d86f0edf489015afe1614" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COLUMN&lt;/code&gt; clause provides the means of stating in which column a field should be presented on the console window (screen section) or a report (report section).</source>
          <target state="translated">&lt;code&gt;COLUMN&lt;/code&gt; の句は、フィールドは、コンソールウィンドウ（画面部）またはレポート（レポートセクション）上に提示されるべき列に知らせる手段を提供します。</target>
        </trans-unit>
        <trans-unit id="8bdd07ecb8c78d7f9cacae7e24c6888f86e7e942" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COMMIT&lt;/code&gt; statement performs an &lt;code&gt;UNLOCK&lt;/code&gt; against every currently-open file, but does not close any of the files. See the &lt;code&gt;UNLOCK&lt;/code&gt; statement (see &lt;a href=&quot;#UNLOCK&quot;&gt;UNLOCK&lt;/a&gt;) for additional details.</source>
          <target state="translated">&lt;code&gt;COMMIT&lt;/code&gt; 文が実行 &lt;code&gt;UNLOCK&lt;/code&gt; すべての現在開いているファイルに対しては、しかしんではない近くの任意のファイル。参照してください &lt;code&gt;UNLOCK&lt;/code&gt; の（参照文を&lt;a href=&quot;#UNLOCK&quot;&gt;UNLOCKの&lt;/a&gt;詳細については）。</target>
        </trans-unit>
        <trans-unit id="17b51041adf332170c36522d8e047cc07b67c5e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COMPUTE&lt;/code&gt; (see &lt;a href=&quot;#COMPUTE&quot;&gt;COMPUTE&lt;/a&gt;) statement will evaluate the arithmetic expression &lt;code&gt;C-D+1&lt;/code&gt; and then save that result in &lt;code&gt;I&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;COMPUTE&lt;/code&gt; （参照&lt;a href=&quot;#COMPUTE&quot;&gt;COMPUTEを&lt;/a&gt;）文は、算術式の評価します &lt;code&gt;C-D+1&lt;/code&gt; を、その後のその結果の保存 &lt;code&gt;I&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="843ddb17793efa77fe8263932c8452a3b8831a25" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COMPUTE&lt;/code&gt; statement provides a means of easily performing complex arithmetic operations with a single statement, instead of using cumbersome and possibly confusing sequences of &lt;code&gt;ADD&lt;/code&gt;, &lt;code&gt;SUBTRACT&lt;/code&gt;, &lt;code&gt;MULTIPLY&lt;/code&gt; and &lt;code&gt;DIVIDE&lt;/code&gt; statements. &lt;code&gt;COMPUTE&lt;/code&gt; also allows the use of exponentiation &amp;mdash; an arithmetic operation for which no other statement exists in COBOL.</source>
          <target state="translated">&lt;code&gt;COMPUTE&lt;/code&gt; の文ではなく面倒を使用して、おそらくの配列混乱のため、容易に1つのステートメントで複雑な算術演算を実行する手段を提供する &lt;code&gt;ADD&lt;/code&gt; 、 &lt;code&gt;SUBTRACT&lt;/code&gt; 、 &lt;code&gt;MULTIPLY&lt;/code&gt; と &lt;code&gt;DIVIDE&lt;/code&gt; のステートメントを。 &lt;code&gt;COMPUTE&lt;/code&gt; では、べき乗（COBOLに他のステートメントが存在しない算術演算）を使用することもできます。</target>
        </trans-unit>
        <trans-unit id="50ace4f54b8816c2e9f15b750a89b0704b879aa6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COMPUTE&lt;/code&gt; statement supports exponentiation (via the &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;COMPUTE&lt;/code&gt; のステートメントは、 'を介して（累乗をサポートしています</target>
        </trans-unit>
        <trans-unit id="d1a21fc38b8fa90b3fabd77ec373eafe00e0e42a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CONSTANT&lt;/code&gt; option is valid only in conjunction with &lt;var&gt;literal-1&lt;/var&gt;. When &lt;code&gt;CONSTANT&lt;/code&gt; is specified, the CDF variable that is created may be used within your regular COBOL code as if it were a literal value. Without this option, the CDF variable may only be referenced on other CDF statements. The  &lt;code&gt;OFF&lt;/code&gt; option is used to create a variable without assigning it any value.</source>
          <target state="translated">&lt;code&gt;CONSTANT&lt;/code&gt; のオプションは以下の組み合わせのみで有効です &lt;var&gt;literal-1&lt;/var&gt; 。とき &lt;code&gt;CONSTANT&lt;/code&gt; が指定されている、それはリテラル値であるかのように、作成されたCDF変数は、定期的なCOBOLコード内で使用することができます。このオプションがないと、CDF変数は他のCDFステートメントでのみ参照できます。 &lt;code&gt;OFF&lt;/code&gt; オプションは、それを任意の値を割り当てずに変数を作成するために使用されます。</target>
        </trans-unit>
        <trans-unit id="e7c9bc682ecc14f62dfbbd040956307b2f99bc4a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CONTINUE&lt;/code&gt; statement has no effect on the execution of the program.</source>
          <target state="translated">&lt;code&gt;CONTINUE&lt;/code&gt; 文は、プログラムの実行には影響を与えません。</target>
        </trans-unit>
        <trans-unit id="448695e618593e72224ee21a490ad502e6ab7358" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CONTINUE&lt;/code&gt; statement is a no-operation statement that may be coded anywhere an imperative statement (see &lt;a href=&quot;#Imperative-Statement&quot;&gt;Imperative Statement&lt;/a&gt;) may be coded.</source>
          <target state="translated">&lt;code&gt;CONTINUE&lt;/code&gt; （参照文はどこでも無条件文を符号化することができる無操作ステートメントで&lt;a href=&quot;#Imperative-Statement&quot;&gt;無条件文は&lt;/a&gt;）符号化されてもよいです。</target>
        </trans-unit>
        <trans-unit id="5d9cfab401430c6439344c49cc913b370f212f94" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CONTROL FOOTING&lt;/code&gt; and &lt;code&gt;CONTROL HEADING&lt;/code&gt; report groups will be presented in the sequence in which they are listed on the &lt;code&gt;CONTROL&lt;/code&gt; clause.</source>
          <target state="translated">&lt;code&gt;CONTROL FOOTING&lt;/code&gt; と &lt;code&gt;CONTROL HEADING&lt;/code&gt; のレポートグループは、それらが上でリストされている順序で提示される &lt;code&gt;CONTROL&lt;/code&gt; の句。</target>
        </trans-unit>
        <trans-unit id="b94ff2f4a66703e0e8c77422e690bd9d6426ba57" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CONVERTING&lt;/code&gt; clause replaces one or more individual characters found in the inspect subject with a different character in much the same manner as is possible with the &lt;code&gt;TRANSFORM&lt;/code&gt; statement (see &lt;a href=&quot;#TRANSFORM&quot;&gt;TRANSFORM&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;CONVERTING&lt;/code&gt; 句の置き換え1つ以上の個々の文字がで可能であるとほとんど同じ方法で、別の文字を対象に検査で見つかった &lt;code&gt;TRANSFORM&lt;/code&gt; ステートメント（参照&lt;a href=&quot;#TRANSFORM&quot;&gt;TRANSFORM&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="5d00c36f35e8b0c6f76fa9952986756f6326002a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COPY&lt;/code&gt; statement is case-sensitive on UNIX systems; &lt;code&gt;COPY copybookname&lt;/code&gt; and &lt;code&gt;COPY COPYBOOKNAME&lt;/code&gt; will both fail to locate the &lt;code&gt;CopyBookName&lt;/code&gt; copybook on a UNIX system.</source>
          <target state="translated">UNIXシステムでは、 &lt;code&gt;COPY&lt;/code&gt; ステートメントでは大文字と小文字が区別されます。 &lt;code&gt;COPY copybookname&lt;/code&gt; と &lt;code&gt;COPY COPYBOOKNAME&lt;/code&gt; は、両方の検索に失敗します &lt;code&gt;CopyBookName&lt;/code&gt; のUNIXシステム上でコピーブックを。</target>
        </trans-unit>
        <trans-unit id="116074a32b13ac9c731aa6d4eb84199a532732ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COS&lt;/code&gt; function determines and returns the trigonometric cosine of &lt;var&gt;angle&lt;/var&gt; (a numeric literal or data item) supplied as an argument.</source>
          <target state="translated">&lt;code&gt;COS&lt;/code&gt; の機能を決定し、三角の余弦戻り &lt;var&gt;angle&lt;/var&gt; 引数として指定（数値リテラルまたはデータ項目）。</target>
        </trans-unit>
        <trans-unit id="07215873656ed599105ab9ba77c5f61ccc1afb93" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CR&lt;/code&gt; symbol is not allowed in conjunction with &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;CR&lt;/code&gt; のシンボルは、 'に関連して許可されていません</target>
        </trans-unit>
        <trans-unit id="344f7bca2e2f356501b667a3ebf2b6d3d76b889a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSP&lt;/code&gt; positioning option stands for &amp;ldquo;No Spacing&amp;rdquo;. Testing on a MinGW build of GnuCOBOL shows that this too results in a formfeed being issued.</source>
          <target state="translated">&lt;code&gt;CSP&lt;/code&gt; の位置決めオプションは、「いいえ間隔」の略です。GnuCOBOLのMinGWビルドでテストすると、これもフォームフィードが発行されることがわかります。</target>
        </trans-unit>
        <trans-unit id="00773fc8c12b09e960d5f9034f12578d1bef1acf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CURRENCY-SYMBOL&lt;/code&gt; function returns the currency symbol character currently in effect for the locale under which your program is running. On UNIX systems, your locale is established via the   &lt;code&gt;LANG&lt;/code&gt; run-time environment variable (see &lt;a href=&quot;#Run-Time-Environment-Variables&quot;&gt;Run Time Environment Variables&lt;/a&gt;) environment variable. On Windows, the Control Panel&amp;rsquo;s &quot;Regional and Language Options&quot; define the locale.</source>
          <target state="translated">&lt;code&gt;CURRENCY-SYMBOL&lt;/code&gt; の機能は、プログラムが実行されているロケールの現在有効な通貨記号文字を返します。UNIXシステムでは、ロケールは &lt;code&gt;LANG&lt;/code&gt; ランタイム環境変数（&lt;a href=&quot;#Run-Time-Environment-Variables&quot;&gt;ランタイム&lt;/a&gt;環境変数を参照）環境変数を介して確立され ます。Windowsでは、コントロールパネルの[地域と言語のオプション]でロケールが定義されます。</target>
        </trans-unit>
        <trans-unit id="5adf3036fbe52e179c9d8cde5ad7fa269fefb944" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Char-Value&lt;/code&gt; item now has the corresponding &lt;small&gt;ASCII&lt;/small&gt; character value.</source>
          <target state="translated">&lt;code&gt;Char-Value&lt;/code&gt; 項目は現在対応している&lt;small&gt;ASCIIの&lt;/small&gt;文字値を。</target>
        </trans-unit>
        <trans-unit id="113934966ded725a5b4c41b438ffff84e60cc8c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DB&lt;/code&gt; symbol is not allowed in conjunction with &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;DB&lt;/code&gt; のシンボルは&quot;と一緒に許可されていません</target>
        </trans-unit>
        <trans-unit id="f1aa2cdb677a8cdcb1e4c127c7cd4fec21218510" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DECLARATIVES&lt;/code&gt; area of the procedure division allows the programmer to define a series of &amp;ldquo;trap&amp;rdquo; procedures (referred to as declarative procedures) capable of intercepting certain events that may occur at program execution time. The syntax diagram above shows the format of a single such procedure.</source>
          <target state="translated">プロシージャー部の &lt;code&gt;DECLARATIVES&lt;/code&gt; 領域により、プログラマーは、プログラム実行時に発生する可能性のある特定のイベントをインターセプトできる一連の「トラップ」プロシージャー（宣言プロシージャーと呼ばれる）を定義できます。上記のシンタックスダイアグラムは、そのような単一のプロシージャの形式を示しています。</target>
        </trans-unit>
        <trans-unit id="559e755d8e524c3dcff57f45bd32b6d481c721e4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DELETE&lt;/code&gt; statement logically deletes a record from a COBOL file.</source>
          <target state="translated">&lt;code&gt;DELETE&lt;/code&gt; ステートメントは、論理的にCOBOLファイルからレコードを削除します。</target>
        </trans-unit>
        <trans-unit id="078ec23e503850f3753cf6cd29c503c78ab1f560" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DETAIL&lt;/code&gt; group which is defined for &lt;var&gt;report-name-1&lt;/var&gt;</source>
          <target state="translated">&lt;code&gt;DETAIL&lt;/code&gt; に定義されているグループ &lt;var&gt;report-name-1&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="f27792c67476ba1ce5ad00f630718411370f76af" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EMPTY-CHECK&lt;/code&gt; (see &lt;a href=&quot;#EMPTY_002dCHECK&quot;&gt;EMPTY-CHECK&lt;/a&gt;) and &lt;code&gt;REQUIRED&lt;/code&gt; clauses are interchangeable, and may not be used together in the same data item description.</source>
          <target state="translated">&lt;code&gt;EMPTY-CHECK&lt;/code&gt; （参照&lt;a href=&quot;#EMPTY_002dCHECK&quot;&gt;EMPTY-CHECKを&lt;/a&gt;）と &lt;code&gt;REQUIRED&lt;/code&gt; 句は交換可能であり、かつ同一のデータ項目の説明に一緒に使用されなくてもよいです。</target>
        </trans-unit>
        <trans-unit id="d13c785fccd2226fc565ab43cda81aac1789b229" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EMPTY-CHECK&lt;/code&gt; and &lt;code&gt;REQUIRED&lt;/code&gt; (see &lt;a href=&quot;#REQUIRED&quot;&gt;REQUIRED&lt;/a&gt;) clauses are interchangeable, and may not be used together in the same data item description.</source>
          <target state="translated">&lt;code&gt;EMPTY-CHECK&lt;/code&gt; と &lt;code&gt;REQUIRED&lt;/code&gt; （参照&lt;a href=&quot;#REQUIRED&quot;&gt;必須&lt;/a&gt;）句は交換可能であり、かつ同一のデータ項目の説明に一緒に使用されなくてもよいです。</target>
        </trans-unit>
        <trans-unit id="35311847ee16219acad06e2afb3828d75715e3b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;END PROGRAM PROG1.&lt;/code&gt; marker, since it is the last line in the source file, is entirely optional.</source>
          <target state="translated">終了 &lt;code&gt;END PROGRAM PROG1.&lt;/code&gt; マーカーはソースファイルの最後の行であるため、完全にオプションです。</target>
        </trans-unit>
        <trans-unit id="dd4e1e5e40a638ff4896a1da44881c84087d1602" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ENTRY&lt;/code&gt; statement is used to define an alternate entry-point into a subroutine, along with the arguments that subroutine will be expecting.</source>
          <target state="translated">&lt;code&gt;ENTRY&lt;/code&gt; のステートメントは、サブルーチンが期待されることを引数と共に、サブルーチンへの代替エントリポイントを定義するために使用されます。</target>
        </trans-unit>
        <trans-unit id="b6844c80464e46e35aa24a739ff34f2d4ab17b6d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EVALUATE&lt;/code&gt; statement provides a means of defining processing that should take place under any number of mutually-exclusive conditions.</source>
          <target state="translated">&lt;code&gt;EVALUATE&lt;/code&gt; 文は、相互に排他的な条件の任意の数の下で行われるべき処理を定義する手段を提供します。</target>
        </trans-unit>
        <trans-unit id="c456e33ad7c4e40bdfb78ec0330feb764ee8ba44" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EXIT FUNCTION&lt;/code&gt; statement cannot be used anywhere within a subroutine.</source>
          <target state="translated">&lt;code&gt;EXIT FUNCTION&lt;/code&gt; ステートメントは、どこでも、サブルーチン内で使用することはできません。</target>
        </trans-unit>
        <trans-unit id="c78f6599b1799a78ab626c23edb833932eaba97f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EXIT PERFORM&lt;/code&gt; and &lt;code&gt;EXIT PERFORM CYCLE&lt;/code&gt; statements are intended to be used in conjunction with an in-line &lt;code&gt;PERFORM&lt;/code&gt; statement (see &lt;a href=&quot;#Inline-PERFORM&quot;&gt;Inline PERFORM&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;EXIT PERFORM&lt;/code&gt; と &lt;code&gt;EXIT PERFORM CYCLE&lt;/code&gt; 文は、インラインと組み合わせて使用することが意図されている &lt;code&gt;PERFORM&lt;/code&gt; （参照文を&lt;a href=&quot;#Inline-PERFORM&quot;&gt;インラインで実行&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="960acf38c58317c72a302b55e98f09ea411b139b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EXIT PROGRAM&lt;/code&gt; and &lt;code&gt;EXIT FUNCTION&lt;/code&gt; statements terminate the execution of a subroutine (i.e. a program that has been CALLed by another) or user-defined function, respectively, returning control back to the calling program.</source>
          <target state="translated">&lt;code&gt;EXIT PROGRAM&lt;/code&gt; と &lt;code&gt;EXIT FUNCTION&lt;/code&gt; 文は呼び出しプログラムにコントロールバックを返すサブルーチンそれぞれ（すなわち、別によって呼び出されたプログラム）、またはユーザ定義関数の実行を終了します。</target>
        </trans-unit>
        <trans-unit id="19f245c8589a4f593c50c0753aa8faaa0cdfca62" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EXIT PROGRAM&lt;/code&gt; statement is not legal anywhere within a user-defined function.</source>
          <target state="translated">&lt;code&gt;EXIT PROGRAM&lt;/code&gt; ステートメントは、ユーザー定義関数内で法的どこにもありません。</target>
        </trans-unit>
        <trans-unit id="21231f38823b421421e38f968141251ef55af48b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EXIT&lt;/code&gt; statement is a multi-purpose statement; it may provide a common end point for a series of procedures, exit an in-line &lt;code&gt;PERFORM&lt;/code&gt;, paragraph or section or it may mark the logical end of a subprogram, returning control back to the calling program.</source>
          <target state="translated">&lt;code&gt;EXIT&lt;/code&gt; の文では、多目的文です。一連のプロシージャに共通のエンドポイントを提供したり、インライン &lt;code&gt;PERFORM&lt;/code&gt; 、段落、またはセクションを終了したり、サブプログラムの論理的な終了をマークして、呼び出し元のプログラムに制御を戻したりする場合があります。</target>
        </trans-unit>
        <trans-unit id="d44f79e5aefdc9ae90bbab54ae45c9d346776933" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EXTERNAL&lt;/code&gt; clause may only be specified at the 77 or 01 level.</source>
          <target state="translated">&lt;code&gt;EXTERNAL&lt;/code&gt; 句のみ77または01レベルで指定することができます。</target>
        </trans-unit>
        <trans-unit id="c744859047c315ba78949a6175f62b1c6eb1c67c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Employee&lt;/code&gt; data item consists of two subordinate data items &amp;mdash; an &lt;code&gt;Employee-Name&lt;/code&gt; and an &lt;code&gt;Employment-Dates&lt;/code&gt; data item (presumably there would be a lot of others too, but we don&amp;rsquo;t care about them right now). As the diagram shows, each of those data items are, in turn, broken down into subordinate data items. This hierarchy of data items can get rather &lt;code&gt;deep&lt;/code&gt;, and GnuCOBOL, like other COBOL implementations, can handle up to 49 levels of such hierarchical structures.</source>
          <target state="translated">&lt;code&gt;Employee&lt;/code&gt; のデータ項目が2つの下位のデータ項目から構成- &lt;code&gt;Employee-Name&lt;/code&gt; と &lt;code&gt;Employment-Dates&lt;/code&gt; データ項目（おそらくあまりにも他の人の多くがあるだろうが、我々は今、それらを気にしないでください）。図に示すように、これらの各データ項目は、下位のデータ項目に分類されます。このデータ項目の階層はかなり &lt;code&gt;deep&lt;/code&gt; 可能性があり、GnuCOBOLは、他のCOBOL実装と同様に、このような階層構造の最大49レベルを処理できます。</target>
        </trans-unit>
        <trans-unit id="6bdeadfd13f17dab03ce0fccfdad57270887124c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FD&lt;/code&gt; cannot be followed by record descriptions. Detailed descriptions of data to be printed to the file will be defined in the &lt;code&gt;REPORT SECTION&lt;/code&gt; (see &lt;a href=&quot;#REPORT-SECTION&quot;&gt;REPORT SECTION&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;FD&lt;/code&gt; は、レコードの記述を続けることはできません。ファイルに出力されるデータの詳細な説明は、 &lt;code&gt;REPORT SECTION&lt;/code&gt; 定義されます（&lt;a href=&quot;#REPORT-SECTION&quot;&gt;レポートセクションを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="cf726b5510b698f5290bd18f85f01877d6131c4b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FOREVER&lt;/code&gt; option will repeatedly execute the code within the perform scope with no conditions defined for termination of the repetition &amp;mdash; it will be up to the programmer to include an &lt;code&gt;EXIT SECTION&lt;/code&gt; statement (see &lt;a href=&quot;#EXIT&quot;&gt;EXIT&lt;/a&gt;) or &lt;code&gt;EXIT PARAGRAPH&lt;/code&gt; statement within the procedure(s) being performed that will break out of the loop.</source>
          <target state="translated">&lt;code&gt;FOREVER&lt;/code&gt; 繰り返しの終了を定義されていない条件でスコープを実行内のオプションは、繰り返しのコードを実行します-それが含まれるようにプログラマにまでなり &lt;code&gt;EXIT SECTION&lt;/code&gt; （参照文を&lt;a href=&quot;#EXIT&quot;&gt;EXIT&lt;/a&gt;）または &lt;code&gt;EXIT PARAGRAPH&lt;/code&gt; 手順（複数可）内のステートメントビーイングループから抜け出すために実行されます。</target>
        </trans-unit>
        <trans-unit id="47c39d3d04385d636465ebe8e0e91946c2be8777" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FREE&lt;/code&gt; statement releases memory previously allocated to the program by the &lt;code&gt;ALLOCATE&lt;/code&gt; statement (see &lt;a href=&quot;#ALLOCATE&quot;&gt;ALLOCATE&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;FREE&lt;/code&gt; 文のリリースメモリは以前にして、プログラムに割り当てられた &lt;code&gt;ALLOCATE&lt;/code&gt; （参照文の&lt;a href=&quot;#ALLOCATE&quot;&gt;ALLOCATE&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="1541ddaebcbddad875fd1498691786377e268bf6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FROM&lt;/code&gt; (see &lt;a href=&quot;#FROM&quot;&gt;FROM&lt;/a&gt;), &lt;code&gt;TO&lt;/code&gt; (see &lt;a href=&quot;#TO&quot;&gt;TO&lt;/a&gt;), &lt;code&gt;USING&lt;/code&gt; (see &lt;a href=&quot;#USING&quot;&gt;USING&lt;/a&gt;) and &lt;code&gt;VALUE&lt;/code&gt; clauses are mutually-exclusive in any screen section data item&amp;rsquo;s definition.</source>
          <target state="translated">&lt;code&gt;FROM&lt;/code&gt; （参照&lt;a href=&quot;#FROM&quot;&gt;FROM&lt;/a&gt;） &lt;code&gt;TO&lt;/code&gt; （参照&lt;a href=&quot;#TO&quot;&gt;TOを&lt;/a&gt;）、 &lt;code&gt;USING&lt;/code&gt; （参照&lt;a href=&quot;#USING&quot;&gt;USING&lt;/a&gt;）と &lt;code&gt;VALUE&lt;/code&gt; の句は、任意の画面部のデータ項目の定義に相互に排他的です。</target>
        </trans-unit>
        <trans-unit id="fe67a35c0e735780beb22a331c716cb25d2a3d32" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FROM&lt;/code&gt; (see &lt;a href=&quot;#FROM&quot;&gt;FROM&lt;/a&gt;), &lt;code&gt;TO&lt;/code&gt; (see &lt;a href=&quot;#TO&quot;&gt;TO&lt;/a&gt;), &lt;code&gt;USING&lt;/code&gt; and &lt;code&gt;VALUE&lt;/code&gt; (see &lt;a href=&quot;#VALUE&quot;&gt;VALUE&lt;/a&gt;) clauses are mutually-exclusive in any screen section data item&amp;rsquo;s definition.</source>
          <target state="translated">&lt;code&gt;FROM&lt;/code&gt; （参照&lt;a href=&quot;#FROM&quot;&gt;FROM&lt;/a&gt;） &lt;code&gt;TO&lt;/code&gt; （参照&lt;a href=&quot;#TO&quot;&gt;TOを&lt;/a&gt;）、 &lt;code&gt;USING&lt;/code&gt; および &lt;code&gt;VALUE&lt;/code&gt; （参照&lt;a href=&quot;#VALUE&quot;&gt;値&lt;/a&gt;）句は、任意の画面部のデータ項目の定義に相互に排他的です。</target>
        </trans-unit>
        <trans-unit id="1bdb7fc2d4087c0153928e1f25c57ecf947f613c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FROM&lt;/code&gt; (see &lt;a href=&quot;#FROM&quot;&gt;FROM&lt;/a&gt;), &lt;code&gt;TO&lt;/code&gt;, &lt;code&gt;USING&lt;/code&gt; (see &lt;a href=&quot;#USING&quot;&gt;USING&lt;/a&gt;) and &lt;code&gt;VALUE&lt;/code&gt; (see &lt;a href=&quot;#VALUE&quot;&gt;VALUE&lt;/a&gt;) clauses are mutually-exclusive in any screen section data item&amp;rsquo;s definition.</source>
          <target state="translated">&lt;code&gt;FROM&lt;/code&gt; （参照&lt;a href=&quot;#FROM&quot;&gt;FROM&lt;/a&gt;） &lt;code&gt;TO&lt;/code&gt; 、 &lt;code&gt;USING&lt;/code&gt; （参照&lt;a href=&quot;#USING&quot;&gt;USING&lt;/a&gt;）および &lt;code&gt;VALUE&lt;/code&gt; （参照&lt;a href=&quot;#VALUE&quot;&gt;値&lt;/a&gt;句は、任意の画面部のデータ項目の定義に相互に排他的です）。</target>
        </trans-unit>
        <trans-unit id="01345daee18c648a4469ad749e752fbe90a7cba4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FROM&lt;/code&gt;, &lt;code&gt;TO&lt;/code&gt; (see &lt;a href=&quot;#TO&quot;&gt;TO&lt;/a&gt;), &lt;code&gt;USING&lt;/code&gt; (see &lt;a href=&quot;#USING&quot;&gt;USING&lt;/a&gt;) and &lt;code&gt;VALUE&lt;/code&gt; (see &lt;a href=&quot;#VALUE&quot;&gt;VALUE&lt;/a&gt;) clauses are mutually-exclusive in any screen section data item&amp;rsquo;s definition.</source>
          <target state="translated">&lt;code&gt;FROM&lt;/code&gt; 、 &lt;code&gt;TO&lt;/code&gt; （参照&lt;a href=&quot;#TO&quot;&gt;TOを&lt;/a&gt;）、 &lt;code&gt;USING&lt;/code&gt; （参照&lt;a href=&quot;#USING&quot;&gt;USING&lt;/a&gt;）および &lt;code&gt;VALUE&lt;/code&gt; （参照&lt;a href=&quot;#VALUE&quot;&gt;値&lt;/a&gt;）句は、任意の画面部のデータ項目の定義に相互に排他的です。</target>
        </trans-unit>
        <trans-unit id="54bdd3075e39b0c9cabecb7f0863948dd651bfbb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FULL&lt;/code&gt; (see &lt;a href=&quot;#FULL&quot;&gt;FULL&lt;/a&gt;) and &lt;code&gt;LENGTH-CHECK&lt;/code&gt; clauses are interchangeable, and may not be used together in the same data item description.</source>
          <target state="translated">&lt;code&gt;FULL&lt;/code&gt; （参照&lt;a href=&quot;#FULL&quot;&gt;FULLを&lt;/a&gt;）および &lt;code&gt;LENGTH-CHECK&lt;/code&gt; 句は交換可能であり、かつ同一のデータ項目の説明に一緒に使用されなくてもよいです。</target>
        </trans-unit>
        <trans-unit id="ba4313ebb23bc375cc6dee1f45360970199cc357" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FULL&lt;/code&gt; and &lt;code&gt;LENGTH-CHECK&lt;/code&gt; (see &lt;a href=&quot;#LENGTH_002dCHECK&quot;&gt;LENGTH-CHECK&lt;/a&gt;) clauses are interchangeable, and may not be used together in the same data item description.</source>
          <target state="translated">&lt;code&gt;FULL&lt;/code&gt; と &lt;code&gt;LENGTH-CHECK&lt;/code&gt; （参照&lt;a href=&quot;#LENGTH_002dCHECK&quot;&gt;LENGTH-CHECKを&lt;/a&gt;）句は交換可能であり、かつ同一のデータ項目の説明に一緒に使用されなくてもよいです。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
