<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="gnu_cobol">
    <body>
      <group id="gnu_cobol">
        <trans-unit id="d8ca2a7fe9d20757fa054958e759ddbc31c70e89" translate="yes" xml:space="preserve">
          <source>All data used by any COBOL program must be defined in one of the six sections of the data division, depending upon the purpose of the data.</source>
          <target state="translated">どのCOBOLプログラムでも使用されるデータは、データの目的に応じて、データ分割の6つのセクションのいずれかで定義されなければならない。</target>
        </trans-unit>
        <trans-unit id="bced720d4dd924cd3c9818ae2d0dff46ad4205ec" translate="yes" xml:space="preserve">
          <source>All destination fields have been fully processed</source>
          <target state="translated">すべての宛先フィールドが完全に処理されました</target>
        </trans-unit>
        <trans-unit id="b2ffb55c8790be0003f9850d39658d38ffc06f1a" translate="yes" xml:space="preserve">
          <source>All executable code statements within a single procedure division paragraph or section.</source>
          <target state="translated">1つのプロシージャー分割段落またはセクション内のすべての実行可能なコード文。</target>
        </trans-unit>
        <trans-unit id="5dde62fedc386ac283832f33a7a15a32d3d3c6f8" translate="yes" xml:space="preserve">
          <source>All files are initially described to a GnuCOBOL program using a &lt;code&gt;SELECT&lt;/code&gt; statement (see &lt;a href=&quot;#SELECT&quot;&gt;SELECT&lt;/a&gt;). In addition to defining a name by which the file will be referenced within the program, the &lt;code&gt;SELECT&lt;/code&gt; statement will specify the name and path by which the file will be known to the operating system along with its organization, locking and sharing attributes.</source>
          <target state="translated">すべてのファイルが最初に使用してGnuCOBOLプログラムに記述されている &lt;code&gt;SELECT&lt;/code&gt; 文を（参照&lt;a href=&quot;#SELECT&quot;&gt;SELECTを&lt;/a&gt;）。 &lt;code&gt;SELECT&lt;/code&gt; ステートメントは、プログラム内でファイルが参照される名前を定義することに加えて、ファイルがオペレーティングシステムに認識される名前とパス、およびその編成、ロック、共有属性を指定します。</target>
        </trans-unit>
        <trans-unit id="4a828d776f56b3fa47fbbd3025d63ab153cd3d17" translate="yes" xml:space="preserve">
          <source>All files are initially described to a GnuCOBOL program using a&lt;code&gt;SELECT&lt;/code&gt;statement (see &lt;a href=&quot;#SELECT&quot;&gt;SELECT&lt;/a&gt;). In addition to defining a name by which the file will be referenced within the program, the&lt;code&gt;SELECT&lt;/code&gt;statement will specify the name and path by which the file will be known to the operating system along with its organization, locking and sharing attributes.</source>
          <target state="translated">すべてのファイルが最初に使用してGnuCOBOLプログラムに記述されている &lt;code&gt;SELECT&lt;/code&gt; 文を（参照&lt;a href=&quot;#SELECT&quot;&gt;SELECTを&lt;/a&gt;）。 &lt;code&gt;SELECT&lt;/code&gt; ステートメントでは、プログラム内でファイルを参照するための名前を定義するほか、オペレーティングシステムがファイルを認識するための名前とパス、およびその編成、ロック、共有の属性を指定します。</target>
        </trans-unit>
        <trans-unit id="1e328143b72f71fac6248afd324e96319510a5d4" translate="yes" xml:space="preserve">
          <source>All identifiers (&amp;lt;</source>
          <target state="translated">すべての識別子（&amp;lt;</target>
        </trans-unit>
        <trans-unit id="5ca0e53b0e350d94a5fa89ee5885f52984faf289" translate="yes" xml:space="preserve">
          <source>All identifiers (&lt;var&gt;identifier-2&lt;/var&gt; through &lt;var&gt;identifier-8&lt;/var&gt;) must be numeric, unedited with non-zero positive integer values.</source>
          <target state="translated">すべての識別子（ &lt;var&gt;identifier-2&lt;/var&gt; から &lt;var&gt;identifier-8&lt;/var&gt; ）は数値であり、ゼロ以外の正の整数値で編集されていない必要があります。</target>
        </trans-unit>
        <trans-unit id="e70fad951ae8947075621f33a325f3471cd1fadb" translate="yes" xml:space="preserve">
          <source>All identifiers specified on the &lt;code&gt;CHAINING&lt;/code&gt; clause should be defined as &lt;code&gt;PIC X, PIC A&lt;/code&gt;, group items (which are treated implicitly as &lt;code&gt;PIC X&lt;/code&gt;) or as &lt;code&gt;PIC 9 USAGE DISPLAY&lt;/code&gt;. The use of &lt;code&gt;USAGE BINARY&lt;/code&gt; (or the like) data items as &lt;code&gt;CHAINING&lt;/code&gt; arguments is not recommended as all command-line tokens will be retained in their original character form as they are moved into the argument data items.</source>
          <target state="translated">&lt;code&gt;CHAINING&lt;/code&gt; 句で指定されたすべての識別子は、 &lt;code&gt;PIC X, PIC A&lt;/code&gt; 、グループ項目（ &lt;code&gt;PIC X&lt;/code&gt; として暗黙的に扱われる）または &lt;code&gt;PIC 9 USAGE DISPLAY&lt;/code&gt; として定義する必要があります。 &lt;code&gt;USAGE BINARY&lt;/code&gt; （または同様の）データ項目を &lt;code&gt;CHAINING&lt;/code&gt; 引数として使用することは、すべてのコマンドライントークンが引数データ項目に移動されるときに元の文字形式で保持されるため、お勧めしません。</target>
        </trans-unit>
        <trans-unit id="3f4100a417e93168d069e03cbc8382833c07eca3" translate="yes" xml:space="preserve">
          <source>All identifiers specified on the CHAINING clause should be defined as PIC X, PIC A, group items (which are treated implicitly as PIC X) or as PIC 9 USAGE DISPLAY. The use of USAGE BINARY (or the like) data items as CHAINING arguments is not recommended as all command-line tokens will be retained in their original character form as they are moved into the argument data items.</source>
          <target state="translated">CHAINING句で指定されたすべての識別子は、PIC X、PIC A、グループ項目(暗黙のうちにPIC Xとして扱われる)、またはPIC 9 USAGE DISPLAYとして定義されるべきである。CHAINING引数としてUSAGE BINARY(またはそのような)データ項目を使用することは、すべてのコマンドライントークンが引数データ項目に移動されたときに元の文字形式で保持されるため、推奨されません。</target>
        </trans-unit>
        <trans-unit id="1fbafbdaeebb2cfe3180fbaae9955985546e7b97" translate="yes" xml:space="preserve">
          <source>All identifiers used in a &amp;lt;</source>
          <target state="translated">&amp;lt;で使用されるすべての識別子</target>
        </trans-unit>
        <trans-unit id="a4c9bb54380885ba739ed3f2a35f0ddd52bd9497" translate="yes" xml:space="preserve">
          <source>All identifiers used in a &lt;var&gt;VARYING-Clause&lt;/var&gt; must be elementary, un-edited numeric data items. All literals must be numeric literals.</source>
          <target state="translated">&lt;var&gt;VARYING-Clause&lt;/var&gt; で使用されるすべての識別子は、基本的な編集されていない数値データ項目である必要があります。すべてのリテラルは数値リテラルでなければなりません。</target>
        </trans-unit>
        <trans-unit id="1d59b3a685a1300faafde8cf819bd33531c1c427" translate="yes" xml:space="preserve">
          <source>All literals (&amp;lt;</source>
          <target state="translated">すべてのリテラル（&amp;lt;</target>
        </trans-unit>
        <trans-unit id="7f2da221d7db26e17531c97e327a09645e86cf24" translate="yes" xml:space="preserve">
          <source>All literals (&lt;var&gt;literal-2&lt;/var&gt; through &lt;var&gt;literal-8&lt;/var&gt;) must be numeric with non-zero positive integer values.</source>
          <target state="translated">すべてのリテラル（ &lt;var&gt;literal-2&lt;/var&gt; から &lt;var&gt;literal-8&lt;/var&gt; ）は、ゼロ以外の正の整数値を持つ数値でなければなりません。</target>
        </trans-unit>
        <trans-unit id="bba7f01f5e187ec9ff4d29b64023e35a6dc2346a" translate="yes" xml:space="preserve">
          <source>All literals and identifiers (except for &amp;lt;</source>
          <target state="translated">すべてのリテラルと識別子（&amp;lt;を除く</target>
        </trans-unit>
        <trans-unit id="5cd98d07379eee8fe90e5d0b696ec5349e890e94" translate="yes" xml:space="preserve">
          <source>All literals and identifiers (except for &lt;var&gt;identifier-4&lt;/var&gt;) must be explicitly or implicitly defined with a &lt;code&gt;USAGE&lt;/code&gt; (see &lt;a href=&quot;#USAGE&quot;&gt;USAGE&lt;/a&gt;) of &lt;code&gt;DISPLAY&lt;/code&gt;. Any of the identifiers may be group items.</source>
          <target state="translated">すべてのリテラルと識別子（ &lt;var&gt;identifier-4&lt;/var&gt; を除く）は、 &lt;code&gt;DISPLAY&lt;/code&gt; の &lt;code&gt;USAGE&lt;/code&gt; （&lt;a href=&quot;#USAGE&quot;&gt;USAGEを&lt;/a&gt;参照）を使用して明示的または暗黙的に定義する必要があります。識別子はいずれもグループアイテムにすることができます。</target>
        </trans-unit>
        <trans-unit id="905d5a04e7360c55ec09cb9c601163d00091808f" translate="yes" xml:space="preserve">
          <source>All literals and identifiers must be explicitly or implicitly defined as alphanumeric or alphabetic.</source>
          <target state="translated">すべてのリテラルおよび識別子は、明示的または暗黙的に英数字またはアルファベットで定義されなければなりません。</target>
        </trans-unit>
        <trans-unit id="ae39d2fdf62dacec472bde2da872c41a110af7cf" translate="yes" xml:space="preserve">
          <source>All locks currently being held for all open files will be released.</source>
          <target state="translated">開いているすべてのファイルに対して現在保持されているすべてのロックが解放されます。</target>
        </trans-unit>
        <trans-unit id="9adaa3e2a38e11cde9aefb1762bf988d9293f6d7" translate="yes" xml:space="preserve">
          <source>All of &amp;lt;</source>
          <target state="translated">&amp;lt;のすべて</target>
        </trans-unit>
        <trans-unit id="baf4be88c819899ce7f8a0c327cc7e91512a034a" translate="yes" xml:space="preserve">
          <source>All of &lt;var&gt;identifier-1&lt;/var&gt;, &lt;var&gt;identifier-2&lt;/var&gt; and &lt;var&gt;identifier-3&lt;/var&gt; must either be group items or alphanumeric data items. Numeric data items with a &lt;code&gt;USAGE&lt;/code&gt; (see &lt;a href=&quot;#USAGE&quot;&gt;USAGE&lt;/a&gt;) of &lt;code&gt;DISPLAY&lt;/code&gt; are accepted, but will generate warning messages from the compiler.</source>
          <target state="translated">&lt;var&gt;identifier-1&lt;/var&gt; 、 &lt;var&gt;identifier-2&lt;/var&gt; 、および &lt;var&gt;identifier-3&lt;/var&gt; はすべて、グループ項目または英数字のデータ項目である必要があります。数値データ項目 &lt;code&gt;USAGE&lt;/code&gt; （参照&lt;a href=&quot;#USAGE&quot;&gt;USAGEを&lt;/a&gt;する） &lt;code&gt;DISPLAY&lt;/code&gt; は受け入れられますが、コンパイラから警告メッセージを生成します。</target>
        </trans-unit>
        <trans-unit id="ff299c8c3c7d7154628eb1636c0c2f8a75cf5266" translate="yes" xml:space="preserve">
          <source>All or a portion of a person&amp;rsquo;s name. These could be extended to include business names, product names, etc.</source>
          <target state="translated">人の名前の全部または一部。これらは、ビジネス名、製品名などを含めるように拡張できます。</target>
        </trans-unit>
        <trans-unit id="83cf0d2d610bbb95f243ddbb03987c0d1c0e4052" translate="yes" xml:space="preserve">
          <source>All or part of a telephone number</source>
          <target state="translated">電話番号の全部または一部</target>
        </trans-unit>
        <trans-unit id="d5a601bb2f1d0dfe5966165aa4b93c596039eaaa" translate="yes" xml:space="preserve">
          <source>All other COBOL programming language components are coded in these columns.</source>
          <target state="translated">他のすべてのCOBOLプログラミング言語コンポーネントは、これらの列でコード化されている。</target>
        </trans-unit>
        <trans-unit id="7f15414d483c68f5de0651e9729c6b20245d32ca" translate="yes" xml:space="preserve">
          <source>All sending items have been fully processed</source>
          <target state="translated">すべての送信アイテムは完全に処理されています</target>
        </trans-unit>
        <trans-unit id="ab6e70e48eee690cdb828113592dd509d85b6471" translate="yes" xml:space="preserve">
          <source>All subroutine arguments are mandatory except where explicitly noted to the contrary</source>
          <target state="translated">サブルーチンの引数は、明示的に指定されている場合を除き、すべて必須です。</target>
        </trans-unit>
        <trans-unit id="f330e70f20a7bf09b5555bc91b884dfc772bd9ac" translate="yes" xml:space="preserve">
          <source>All sum counters, if any, will be set to 0</source>
          <target state="translated">すべての合計カウンタは、もしあれば0に設定されます。</target>
        </trans-unit>
        <trans-unit id="ef64daeb21d9797a9d72059f47e97e21999e7009" translate="yes" xml:space="preserve">
          <source>All tests above carried out under Linux with a AMD FX8350 under very low loading prior to the test. I would have also tried on a i7-7700 but that is under Windows 10 and I do not have a GC version on it - Vince.</source>
          <target state="translated">上記のすべてのテストは、テストの前に非常に低い負荷の下でAMD FX8350とLinuxの下で実施しました。私はまた、i7-7700で試しただろうが、それはWindows 10の下にあり、私はそれにGCのバージョンを持っていない-ヴィンス。</target>
        </trans-unit>
        <trans-unit id="0ff18c97d087b17a90257f4e255ffcacf0dd0ebc" translate="yes" xml:space="preserve">
          <source>All&lt;code&gt;COPY&lt;/code&gt;statements are located and the contents of the corresponding copybooks inserted into the program source code before the actual compilation process begins. If a copybook contains a&lt;code&gt;COPY&lt;/code&gt;statement, the copybook insertion process will be repeated to resolve the embedded&lt;code&gt;COPY&lt;/code&gt; This will continue until no unresolved&lt;code&gt;COPY&lt;/code&gt;statements remain. At that point, actual program compilation will begin.</source>
          <target state="translated">すべての &lt;code&gt;COPY&lt;/code&gt; ステートメントが見つかり、対応するコピーブックの内容が実際のコンパイルプロセスが始まる前にプログラムのソースコードに挿入されます。コピーブックに &lt;code&gt;COPY&lt;/code&gt; ステートメントが含まれている場合、埋め込まれた &lt;code&gt;COPY&lt;/code&gt; を解決するためにコピーブック挿入プロセスが繰り返されます。これは、未解決の &lt;code&gt;COPY&lt;/code&gt; ステートメントがなくなるまで続行されます。その時点で、実際のプログラムのコンパイルが始まります。</target>
        </trans-unit>
        <trans-unit id="a101efb30081b9a7d745fc8788273f95f6c81dae" translate="yes" xml:space="preserve">
          <source>All&lt;code&gt;RENAMES&lt;/code&gt;entries associated with one logical record must immediately follow that record&amp;rsquo;s last data description entry.</source>
          <target state="translated">1つの論理レコードに関連付けられているすべての &lt;code&gt;RENAMES&lt;/code&gt; エントリは、そのレコードの最後のデータ記述エントリの直後に続く必要があります。</target>
        </trans-unit>
        <trans-unit id="94b3fcb864d14fdf63072b5e953169893a577e01" translate="yes" xml:space="preserve">
          <source>All&lt;code&gt;Z&lt;/code&gt;symbols that correspond to character positions in which leading zeros reside will have their &quot;0&quot; values replaced by spaces.</source>
          <target state="translated">先頭のゼロが存在する文字位置に対応するすべての &lt;code&gt;Z&lt;/code&gt; シンボルは、「0」の値がスペースに置き換えられます。</target>
        </trans-unit>
        <trans-unit id="e2fe4917dbe0460e482c064e582fd68e6b45be7d" translate="yes" xml:space="preserve">
          <source>Allocate level-01 data items in alphabetical sequence in the program source wherever practical. This will make it vastly easier to locate the definitions of 01-level items in the program source without having to resort to a compilation cross-reference listing and/or text editor &quot;find&quot; command to locate them.</source>
          <target state="translated">実用的な場合は、プログラム・ソースの中でアルファベット順にレベル01のデータ項目を配置してください。これにより、コンパイル時の相互参照リストやテキスト・エディタの &quot;find &quot;コマンドに頼ることなく、プログラム・ソース内の01レベル項目の定義を見つけることが非常に容易になります。</target>
        </trans-unit>
        <trans-unit id="b08b97dc30d40ccb411f2a1cedd80cbe9585bd8a" translate="yes" xml:space="preserve">
          <source>Allocate level-01 data items in alphabetical sequence in the program source wherever practical. This will make it vastly easier to locate the definitions of 01-level items in the program source without having to resort to a compilation cross-reference listing and/or text editor &amp;ldquo;find&amp;rdquo; command to locate them.</source>
          <target state="translated">可能な限り、プログラムソースにレベル01のデータ項目をアルファベット順に割り当てます。これにより、コンパイル相互参照リストやテキストエディタの「検索」コマンドを使用せずに、プログラムソース内の01レベルの項目の定義を簡単に見つけることができます。</target>
        </trans-unit>
        <trans-unit id="a4e9d8e92f8014702ae38e8fb371d00e48028645" translate="yes" xml:space="preserve">
          <source>Allows for more than 60 seconds per minute.</source>
          <target state="translated">1分間に60秒以上の時間を確保することができます。</target>
        </trans-unit>
        <trans-unit id="a3284dfe19d8cc7737c4e9fb3be014c89e85ac4c" translate="yes" xml:space="preserve">
          <source>Along with every release of the compiler sources is the file</source>
          <target state="translated">コンパイラのソースがリリースされるたびに、ファイル</target>
        </trans-unit>
        <trans-unit id="cb73fa20d3b5514b729e8ce7057d939085a58147" translate="yes" xml:space="preserve">
          <source>Alphabet-Name-Clause</source>
          <target state="translated">Alphabet-Name-Clause</target>
        </trans-unit>
        <trans-unit id="e0a4e02665e66436669ab6e50f0a87c76707ccf2" translate="yes" xml:space="preserve">
          <source>Alphabetic Data Item</source>
          <target state="translated">アルファベットデータ項目</target>
        </trans-unit>
        <trans-unit id="716942537b1060189a24d41ebb942ff8aff4ce29" translate="yes" xml:space="preserve">
          <source>Alphabetic Data Items</source>
          <target state="translated">アルファベットデータ項目</target>
        </trans-unit>
        <trans-unit id="a5b153bb4fc31ab35c94e5870d9113346b96bcd9" translate="yes" xml:space="preserve">
          <source>Alphanumeric Data Item</source>
          <target state="translated">英数字データ項目</target>
        </trans-unit>
        <trans-unit id="649c5b48ff612f6a435f23f0c0255844f9731001" translate="yes" xml:space="preserve">
          <source>Alphanumeric Literal</source>
          <target state="translated">英数字リテラル</target>
        </trans-unit>
        <trans-unit id="6f84b4cf9ca4589773fa74426cdcf6f9325a9329" translate="yes" xml:space="preserve">
          <source>Alphanumeric and alphabetic (i.e. text) data items will be initialized to &lt;code&gt;SPACES&lt;/code&gt;.</source>
          <target state="translated">英数字およびアルファベット（つまりテキスト）のデータ項目は、 &lt;code&gt;SPACES&lt;/code&gt; に初期化されます。</target>
        </trans-unit>
        <trans-unit id="2656ba75be192380d08900217cad46480544bd9b" translate="yes" xml:space="preserve">
          <source>Alphanumeric and alphabetic (i.e. text) data items will be initialized to&lt;code&gt;SPACES&lt;/code&gt;</source>
          <target state="translated">英数字およびテキスト（つまりテキスト）データ項目は &lt;code&gt;SPACES&lt;/code&gt; に初期化されます</target>
        </trans-unit>
        <trans-unit id="f920b7d21b8ecbd8b4695faddc87f556ea58d423" translate="yes" xml:space="preserve">
          <source>Alphanumeric data entered into &amp;lt;</source>
          <target state="translated">&amp;lt;に入力された英数字データ</target>
        </trans-unit>
        <trans-unit id="7920cfaa5a189515cb03758a7a4cd6ac6a82f208" translate="yes" xml:space="preserve">
          <source>Alphanumeric data entered into &lt;var&gt;identifier-1&lt;/var&gt;</source>
          <target state="translated">&lt;var&gt;identifier-1&lt;/var&gt; 入力された英数字データ</target>
        </trans-unit>
        <trans-unit id="ecaf51d3f7562c9e885bdab2ea79483cc95d31b4" translate="yes" xml:space="preserve">
          <source>Alphanumeric data entered into &lt;var&gt;identifier-1&lt;/var&gt; or any screen data item subordinate to it</source>
          <target state="translated">&lt;var&gt;identifier-1&lt;/var&gt; またはそれに従属する画面データ項目に入力された英数字データ</target>
        </trans-unit>
        <trans-unit id="e9e95358f5f3f1bc5ae1f73309e7cfb3a66ff451" translate="yes" xml:space="preserve">
          <source>Alphanumeric literals and identifiers may optionally be prefixed with the &lt;code&gt;LENGTH OF&lt;/code&gt; clause. The compile-time value generated by this clause will be the number of bytes in the alphanumeric literal or the defined size (in bytes) of the identifier.</source>
          <target state="translated">オプションで、英数字のリテラルと識別子の前に &lt;code&gt;LENGTH OF&lt;/code&gt; 句を付けることができます。この句によって生成されるコンパイル時の値は、英数字リテラルのバイト数、または識別子の定義されたサイズ（バイト単位）になります。</target>
        </trans-unit>
        <trans-unit id="fb511e236aa6e2cfaebe56e01a86eadcd6899ea5" translate="yes" xml:space="preserve">
          <source>Alphanumeric literals and identifiers may optionally be prefixed with the&lt;code&gt;LENGTH OF&lt;/code&gt;clause. The compile-time value generated by this clause will be the number of bytes in the alphanumeric literal or the defined size (in bytes) of the identifier.</source>
          <target state="translated">オプションで、英数字リテラルと識別子の前に &lt;code&gt;LENGTH OF&lt;/code&gt; 句を付けることができます。この句によって生成されるコンパイル時の値は、英数字リテラルのバイト数または識別子の定義されたサイズ（バイト単位）になります。</target>
        </trans-unit>
        <trans-unit id="9f735a4ce4da16e0e774362931934a03e2abe2c0" translate="yes" xml:space="preserve">
          <source>Alphanumeric literals may take any of the following forms:</source>
          <target state="translated">英数字リテラルは、以下のいずれかの形式をとることができます。</target>
        </trans-unit>
        <trans-unit id="67ccdee962dd6744e2e7fb3550a928e20903bb57" translate="yes" xml:space="preserve">
          <source>Alphanumeric literals too long to fit on a single line may be continued to the next line in one of two ways:</source>
          <target state="translated">長すぎて 1 行に収まらない英数字リテラルは、次の 2 つの方法のいずれかの方法で次の行に続けることができます。</target>
        </trans-unit>
        <trans-unit id="b89101858aabaab9443207e67caf73e13007c5dc" translate="yes" xml:space="preserve">
          <source>Also used during execution of programs is runtime.cfg also found in /usr/local/share/gnucobol/config for *nix and this file can also be changed to match your environment if needed.</source>
          <target state="translated">また、プログラムの実行中に使用される runtime.cfg も *nix 用の /usr/local/share/gnucobol/config にあり、このファイルは必要に応じて環境に合わせて変更することができます。</target>
        </trans-unit>
        <trans-unit id="a61842311a9392e53ec3cc675f32c50be30ff2e1" translate="yes" xml:space="preserve">
          <source>Also used during execution of programs is runtime.cfg also found in &lt;code&gt;/usr/local/share/gnucobol/config&lt;/code&gt; for *nix and this file can also be changed to match your environment if needed. When viewing, note the Default settings.</source>
          <target state="translated">プログラムの実行中にも使用されるruntime.cfgは、* nixの &lt;code&gt;/usr/local/share/gnucobol/config&lt;/code&gt; にもあります。このファイルは、必要に応じて環境に合わせて変更することもできます。表示するときは、デフォルト設定に注意してください。</target>
        </trans-unit>
        <trans-unit id="526fc9f4c2139717bde59d2a98ad02937aa1a3ce" translate="yes" xml:space="preserve">
          <source>Alt Left Dbl Click</source>
          <target state="translated">Alt 左 Dbl クリック</target>
        </trans-unit>
        <trans-unit id="22f2ed163633e373ea00b56f5abe83ae04910267" translate="yes" xml:space="preserve">
          <source>Alt Left Pressed</source>
          <target state="translated">Alt 左押し</target>
        </trans-unit>
        <trans-unit id="23b7055795b4ddbb9432dd781445cc8961a2c5c3" translate="yes" xml:space="preserve">
          <source>Alt Left Released</source>
          <target state="translated">アルトレフト リリース</target>
        </trans-unit>
        <trans-unit id="eafa33409c743d0d73d6589d93dcc5ea18ec6518" translate="yes" xml:space="preserve">
          <source>Alt Mid Dbl Click</source>
          <target state="translated">Alt Mid Dbl クリック</target>
        </trans-unit>
        <trans-unit id="7bc7b17b6c4a3f74474ff662378c4935e82eb3ef" translate="yes" xml:space="preserve">
          <source>Alt Mid Pressed</source>
          <target state="translated">アルトミッドプレス</target>
        </trans-unit>
        <trans-unit id="e18466205ba607cd0851d9019dc68ee96fd8bbbf" translate="yes" xml:space="preserve">
          <source>Alt Mid Released</source>
          <target state="translated">アルトミッド発売</target>
        </trans-unit>
        <trans-unit id="05ac294d73d26a948209654b49db3de76aa8d598" translate="yes" xml:space="preserve">
          <source>Alt Move</source>
          <target state="translated">Alt 移動</target>
        </trans-unit>
        <trans-unit id="f5a1d9f511598e87bc604c8788bf20997c6db376" translate="yes" xml:space="preserve">
          <source>Alt Right Dbl Click</source>
          <target state="translated">Alt 右ダブルクリック</target>
        </trans-unit>
        <trans-unit id="b8fb283036059c447ae2e2c8efc6ef5c8b4933f8" translate="yes" xml:space="preserve">
          <source>Alt Right Pressed</source>
          <target state="translated">Alt 右押し</target>
        </trans-unit>
        <trans-unit id="3d7e567bef8355b18615a5879060d8feec71b52f" translate="yes" xml:space="preserve">
          <source>Alt Right Released</source>
          <target state="translated">Alt Rightがリリースされました。</target>
        </trans-unit>
        <trans-unit id="2562b5fdaae27ec8dfe4a6ab5ca589661b26ff1c" translate="yes" xml:space="preserve">
          <source>Alt Wheel Down</source>
          <target state="translated">Alt ホイールダウン</target>
        </trans-unit>
        <trans-unit id="c1991e30f00c87f23e04146021bcaf0007cfbf58" translate="yes" xml:space="preserve">
          <source>Alt Wheel Left</source>
          <target state="translated">アルトホイール左</target>
        </trans-unit>
        <trans-unit id="3a83edf52490a23f0d5faad03b5de7feaac187ab" translate="yes" xml:space="preserve">
          <source>Alt Wheel Right</source>
          <target state="translated">アルトホイール右</target>
        </trans-unit>
        <trans-unit id="20cba8b910fc191a0d81deb3aed0ad5ffd982a33" translate="yes" xml:space="preserve">
          <source>Alt Wheel Up</source>
          <target state="translated">Alt ホイールアップ</target>
        </trans-unit>
        <trans-unit id="fb3eb3b3b9b95cd33cfd1a58706dcdc7e32750ea" translate="yes" xml:space="preserve">
          <source>Alternate entry-points provide multiple ways in which the same subroutine may be called; presumably, each entry-point will provide some different functionality to the calling program. For example, if you wished to write a subroutine that manipulates &quot;student&quot; records in a database, you might have the primary entry-point name retrieve a student record from the database, while the alternate entry points &lt;code&gt;Add-Student&lt;/code&gt;, &lt;code&gt;Update-Student&lt;/code&gt; and &lt;code&gt;Delete-Student&lt;/code&gt; could provide the alternate functions implied by their entry-point names.</source>
          <target state="translated">代替エントリポイントは、同じサブルーチンを呼び出すことができる複数の方法を提供します。おそらく、各エントリポイントは呼び出し側プログラムにいくつかの異なる機能を提供します。たとえば、データベース内の「学生」レコードを操作するサブルーチンを作成する場合は、プライマリエントリポイント名でデータベースから学生レコードを取得し、代替エントリポイントである &lt;code&gt;Add-Student&lt;/code&gt; 、 &lt;code&gt;Update-Student&lt;/code&gt; 、および &lt;code&gt;Delete-Student&lt;/code&gt; は、エントリポイント名によって示される代替機能を提供できます。</target>
        </trans-unit>
        <trans-unit id="2d1d2c575fbd8e943786dc808790ede9a6872afe" translate="yes" xml:space="preserve">
          <source>Alternate entry-points provide multiple ways in which the same subroutine may be called; presumably, each entry-point will provide some different functionality to the calling program. For example, if you wished to write a subroutine that manipulates &quot;student&quot; records in a database, you might have the primary entry-point name retrieve a student record from the database, while the alternate entry points&lt;code&gt;Add-Student&lt;/code&gt;&lt;code&gt;Update-Student&lt;/code&gt;and&lt;code&gt;Delete-Student&lt;/code&gt;could provide the alternate functions implied by their entry-point names.</source>
          <target state="translated">代替エントリポイントは、同じサブルーチンを呼び出すことができる複数の方法を提供します。おそらく、各エントリポイントは、呼び出し元のプログラムにいくつかの異なる機能を提供します。たとえば、データベース内の「学生」レコードを操作するサブルーチンを記述したい場合、プライマリエントリポイント名でデータベースから学生レコードを取得し、代替エントリポイントで &lt;code&gt;Add-Student&lt;/code&gt; &lt;code&gt;Update-Student&lt;/code&gt; および &lt;code&gt;Delete-Student&lt;/code&gt; 取得することができます。-学生は、エントリポイント名が示す代替機能を提供できます。</target>
        </trans-unit>
        <trans-unit id="c58305ee66637fd737c8d0f42036a41ce89d248f" translate="yes" xml:space="preserve">
          <source>Although the specification of one or more &lt;code&gt;KEY&lt;/code&gt; clauses is optional, currently, a table sort with no &lt;code&gt;KEY&lt;/code&gt; specification(s) made on the &lt;code&gt;SORT&lt;/code&gt; statement is unsupported by GnuCOBOL and will be rejected by the compiler.</source>
          <target state="translated">1つ以上の &lt;code&gt;KEY&lt;/code&gt; 句の指定はオプションですが、現在、 &lt;code&gt;SORT&lt;/code&gt; ステートメントで &lt;code&gt;KEY&lt;/code&gt; 指定が行われていないテーブルソートはGnuCOBOLでサポートされておらず、コンパイラによって拒否されます。</target>
        </trans-unit>
        <trans-unit id="b8a86b49c25dd29cdaf3912801cf640a6f60db10" translate="yes" xml:space="preserve">
          <source>Although the specification of one or more KEY clauses is optional, currently, a table sort with no&lt;code&gt;KEY&lt;/code&gt;specification(s) made on the&lt;code&gt;SORT&lt;/code&gt;statement is unsupported by GnuCOBOL and will be rejected by the compiler.</source>
          <target state="translated">1つ以上のKEY句の指定はオプションですが、現在、 &lt;code&gt;SORT&lt;/code&gt; ステートメントで作成された &lt;code&gt;KEY&lt;/code&gt; 指定のないテーブルソートはGnuCOBOLではサポートされておらず、コンパイラーによって拒否されます。</target>
        </trans-unit>
        <trans-unit id="99690d58d4abd10cd0938a7adcb56ded08ef66ad" translate="yes" xml:space="preserve">
          <source>An</source>
          <target state="translated">An</target>
        </trans-unit>
        <trans-unit id="456e68703dc0c5e8bb765efa3c274f10d6f546d3" translate="yes" xml:space="preserve">
          <source>An  &lt;code&gt;ASCENDING KEY&lt;/code&gt; or  &lt;code&gt;DESCENDING KEY&lt;/code&gt; clause to specify the field within the table by which all entries in the table are sorted.</source>
          <target state="translated">&lt;code&gt;ASCENDING KEY&lt;/code&gt; または &lt;code&gt;DESCENDING KEY&lt;/code&gt; 句は、テーブル内のすべてのエントリがソートされることにより、テーブル内のフィールドを指定します。</target>
        </trans-unit>
        <trans-unit id="64101a316bca0c8d3d1fc8ac802882312683533a" translate="yes" xml:space="preserve">
          <source>An  &lt;code&gt;INDEXED BY&lt;/code&gt; entry to define an implicit search index data item with a &lt;code&gt;USAGE&lt;/code&gt; (see &lt;a href=&quot;#USAGE&quot;&gt;USAGE&lt;/a&gt;) of &lt;code&gt;INDEX&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;INDEX&lt;/code&gt; の &lt;code&gt;USAGE&lt;/code&gt; （&lt;a href=&quot;#USAGE&quot;&gt;USAGEを&lt;/a&gt;参照）を使用して暗黙的な検索インデックスデータ項目を定義するための &lt;code&gt;INDEXED BY&lt;/code&gt; エントリ。</target>
        </trans-unit>
        <trans-unit id="b54adf1624256b2e5fe75c56f0f3d55b3b88fa10" translate="yes" xml:space="preserve">
          <source>An &amp;lt;</source>
          <target state="translated">&amp;lt;</target>
        </trans-unit>
        <trans-unit id="8ade6575e1d358c15c8e894aa3e622aaf4f135b4" translate="yes" xml:space="preserve">
          <source>An &amp;rsquo;</source>
          <target state="translated">'</target>
        </trans-unit>
        <trans-unit id="0318ae2e728e1d13b787a427c73a7312c196cae3" translate="yes" xml:space="preserve">
          <source>An 01-level item defined in the &lt;code&gt;FILE SECTION&lt;/code&gt; (constituting the layout of a record within a file). Note that these items would probably also have a &amp;ldquo;F-&amp;rdquo; prefix.</source>
          <target state="translated">&lt;code&gt;FILE SECTION&lt;/code&gt; で定義された01レベルのアイテム（ファイル内のレコードのレイアウトを構成します）。これらのアイテムには、おそらく「F-」プレフィックスも付いていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="4e4d3e8918ff2a9cc69187b0c51202b0db70a3b9" translate="yes" xml:space="preserve">
          <source>An 01-level item defined in the FILE SECTION (constituting the layout of a record within a file). Note that these items would probably also have a &quot;F-&quot; prefix.</source>
          <target state="translated">FILE SECTIONで定義された01レベルの項目(ファイル内のレコードのレイアウトを構成する)。これらの項目には、おそらく &quot;F-&quot;という接頭辞が付いていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="1e2dde7681cab94da1757efd1ada4a5968a92876" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;AT END&lt;/code&gt; clause</source>
          <target state="translated">&lt;code&gt;AT END&lt;/code&gt; の句</target>
        </trans-unit>
        <trans-unit id="91de7b1bd5b95988a39f01c5efb5b8cfb6f67aab" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;AT END&lt;/code&gt; clause detects and handles the case where either form of table search has failed to locate an entry that satisfies the search conditions being used.</source>
          <target state="translated">AN &lt;code&gt;AT END&lt;/code&gt; 句の検出とハンドルテーブルの検索のいずれかの形が満足検索条件を使用してそのエントリを見つけるために失敗した場合。</target>
        </trans-unit>
        <trans-unit id="1bd8a8bae23a635faa67354ffd6b573a24bf1cd5" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;EXIT PERFORM CYCLE&lt;/code&gt; statement will terminate the current iteration of the in-line &lt;code&gt;PERFORM&lt;/code&gt;, giving control to any &lt;code&gt;TIMES&lt;/code&gt;, &lt;code&gt;VARYING&lt;/code&gt; and/or &lt;code&gt;UNTIL&lt;/code&gt; clauses for them to determine if another cycle needs to be performed.</source>
          <target state="translated">&lt;code&gt;EXIT PERFORM CYCLE&lt;/code&gt; 文は、インラインの現在の反復は終了する &lt;code&gt;PERFORM&lt;/code&gt; 任意に制御を与え、 &lt;code&gt;TIMES&lt;/code&gt; 、 &lt;code&gt;VARYING&lt;/code&gt; を、および/または &lt;code&gt;UNTIL&lt;/code&gt; 別のサイクルを実行する必要があるかどうかを決定するためにそれらのための句。</target>
        </trans-unit>
        <trans-unit id="54c0515cd69204b6cf4c60a1b0db47680b486de8" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;EXIT PERFORM&lt;/code&gt; statement will terminate the in-line PERFORM outright, transferring control to the first statement following the &lt;code&gt;END-PERFORM&lt;/code&gt; (if there is one) or to the next sentence following the &lt;code&gt;PERFORM&lt;/code&gt; if there is no &lt;code&gt;END-PERFORM&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;EXIT PERFORM&lt;/code&gt; 文は、行の次の最初の文に制御を渡す、完全PERFORM終了する &lt;code&gt;END-PERFORM&lt;/code&gt; 又は続く次の文に（存在する場合） &lt;code&gt;PERFORM&lt;/code&gt; を全く存在しない場合 &lt;code&gt;END-PERFORM&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8f1c3c41fc7be6cbd11929114365ff22159636e8" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;EXIT PROGRAM&lt;/code&gt; statement returns control back to the statement following the &lt;code&gt;CALL&lt;/code&gt; (see &lt;a href=&quot;#CALL&quot;&gt;CALL&lt;/a&gt;) of the subprogram. An &lt;code&gt;EXIT FUNCTION&lt;/code&gt; statement returns control back to the processing of the statement in the calling program that invoked the user-defined function.</source>
          <target state="translated">&lt;code&gt;EXIT PROGRAM&lt;/code&gt; の次の文への文戻っ制御バック &lt;code&gt;CALL&lt;/code&gt; （参照&lt;a href=&quot;#CALL&quot;&gt;CALL&lt;/a&gt;サブプログラムの）。 &lt;code&gt;EXIT FUNCTION&lt;/code&gt; 、ユーザー定義関数を呼び出し呼び出しプログラム中の文の処理に声明戻っ制御バック。</target>
        </trans-unit>
        <trans-unit id="c5148b03942c9ac22286dc2fb7c34de7a5bda2bc" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;EXTERNAL&lt;/code&gt; item must have a data name and that name cannot be &lt;code&gt;FILLER&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;EXTERNAL&lt;/code&gt; 項目は、データ名を持つ必要がありますし、その名前にすることはできません &lt;code&gt;FILLER&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="977eb625a0b59267c72123ca0b4a295a2e50428f" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ON OVERFLOW&lt;/code&gt; clause will allow your program to trap a failure condition that has occurred and handle it gracefully by executing &lt;var&gt;imperative-statement-1&lt;/var&gt; (see &lt;a href=&quot;#Imperative-Statement&quot;&gt;Imperative Statement&lt;/a&gt;). If such a condition occurs at runtime without having one of these clauses specified, an error message will be generated (by the GnuCOBOL runtime library) to the &lt;code&gt;SYSERR&lt;/code&gt; device (pipe 2). The program may also be terminated, depending upon the type and severity of the error.</source>
          <target state="translated">&lt;code&gt;ON OVERFLOW&lt;/code&gt; 句は、トラップに発生した障害の症状をあなたのプログラムを許可し、実行することにより、正常にそれを処理する &lt;var&gt;imperative-statement-1&lt;/var&gt; （参照&lt;a href=&quot;#Imperative-Statement&quot;&gt;無条件文を&lt;/a&gt;）。これらの句のいずれかを指定せずに実行時にこのような状態が発生した場合、エラーメッセージが（GnuCOBOLランタイムライブラリによって） &lt;code&gt;SYSERR&lt;/code&gt; デバイス（パイプ2）に生成されます。エラーの種類と重大度によっては、プログラムが終了する場合もあります。</target>
        </trans-unit>
        <trans-unit id="a26609a6de764b5b9857faecf386444ab8f79386" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;UNLOCK&lt;/code&gt; statement (see &lt;a href=&quot;#UNLOCK&quot;&gt;UNLOCK&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;UNLOCK&lt;/code&gt; の声明（参照&lt;a href=&quot;#UNLOCK&quot;&gt;UNLOCKを&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="dacec864c98ba47321e339d5b81be46373dc0f91" translate="yes" xml:space="preserve">
          <source>An &lt;var&gt;identifier-1&lt;/var&gt; data item may also be coded as an &lt;var&gt;identifier-2&lt;/var&gt;. Note, however, that the value of such a data item will therefore be included</source>
          <target state="translated">&lt;var&gt;identifier-1&lt;/var&gt; のデータ項目はまた、符号化され得る &lt;var&gt;identifier-2&lt;/var&gt; 。ただし、そのようなデータ項目の値は含まれることに注意してください</target>
        </trans-unit>
        <trans-unit id="ba87600b329e78baf0e3ac38dbc7f7d88b46a454" translate="yes" xml:space="preserve">
          <source>An &lt;var&gt;identifier-1&lt;/var&gt; or &lt;var&gt;identifier-2&lt;/var&gt; data item may be used as an &lt;var&gt;identifier-3&lt;/var&gt;, if desired.</source>
          <target state="translated">&lt;var&gt;identifier-1&lt;/var&gt; 又は &lt;var&gt;identifier-2&lt;/var&gt; のデータ項目は、以下のように使用することができる &lt;var&gt;identifier-3&lt;/var&gt; 、所望であれば、。</target>
        </trans-unit>
        <trans-unit id="4725accf032580bb79aab44f026bcbafad236be5" translate="yes" xml:space="preserve">
          <source>An RWCS-generated report to which at least one type of detail group is presented.</source>
          <target state="translated">少なくとも1種類の詳細グループが提示されているRWCS生成レポート。</target>
        </trans-unit>
        <trans-unit id="52bba8c30c7337908a19fe6d2ad7e2626759f68b" translate="yes" xml:space="preserve">
          <source>An RWCS-generated report to which no detail groups are presented.</source>
          <target state="translated">詳細グループが提示されていないRWCSが生成したレポート。</target>
        </trans-unit>
        <trans-unit id="021c274afc42ea781466b7160620421502e62c32" translate="yes" xml:space="preserve">
          <source>An alphanumeric literal</source>
          <target state="translated">英数字リテラル</target>
        </trans-unit>
        <trans-unit id="13f94cf8b1227e7450d59a3736c6204064a6a6b2" translate="yes" xml:space="preserve">
          <source>An alphanumeric literal is not valid for use in arithmetic expressions unless it is first converted to it&amp;rsquo;s numeric computational equivalent; there are three numeric conversion intrinsic functions built into GnuCOBOL that can perform this conversion &amp;mdash;&lt;code&gt;NUMVAL&lt;/code&gt;(see &lt;a href=&quot;#NUMVAL&quot;&gt;NUMVAL&lt;/a&gt;),&lt;code&gt;NUMVAL-C&lt;/code&gt;(see &lt;a href=&quot;#NUMVAL_002dC&quot;&gt;NUMVAL-C&lt;/a&gt;) and&lt;code&gt;NUMVAL-F&lt;/code&gt;(see &lt;a href=&quot;#NUMVAL_002dF&quot;&gt;NUMVAL-F&lt;/a&gt;).</source>
          <target state="translated">英数字リテラルは、最初にそれと同等の数値計算に変換されない限り、算術式での使用には無効です。GnuCOBOLには、この変換を実行できる3つの数値変換組み込み関数があります &lt;code&gt;NUMVAL&lt;/code&gt; （&lt;a href=&quot;#NUMVAL&quot;&gt;NUMVALを&lt;/a&gt;参照）、 &lt;code&gt;NUMVAL-C&lt;/code&gt; （&lt;a href=&quot;#NUMVAL_002dC&quot;&gt;NUMVAL-Cを&lt;/a&gt;参照）、および &lt;code&gt;NUMVAL-F&lt;/code&gt; （&lt;a href=&quot;#NUMVAL_002dF&quot;&gt;NUMVAL-Fを&lt;/a&gt;参照）です。</target>
        </trans-unit>
        <trans-unit id="e97e1a0984593e7e736a0ef561b835c32666ba34" translate="yes" xml:space="preserve">
          <source>An alphanumeric literal is not valid for use in arithmetic expressions unless it is first converted to its numeric computational equivalent; there are three numeric conversion intrinsic functions built into GnuCOBOL that can perform this conversion &amp;mdash; &lt;code&gt;NUMVAL&lt;/code&gt; (see &lt;a href=&quot;#NUMVAL&quot;&gt;NUMVAL&lt;/a&gt;), &lt;code&gt;NUMVAL-C&lt;/code&gt; (see &lt;a href=&quot;#NUMVAL_002dC&quot;&gt;NUMVAL-C&lt;/a&gt;) and &lt;code&gt;NUMVAL-F&lt;/code&gt; (see &lt;a href=&quot;#NUMVAL_002dF&quot;&gt;NUMVAL-F&lt;/a&gt;).</source>
          <target state="translated">英数字リテラルは、最初に同等の数値に変換されない限り、算術式での使用には無効です。この変換を実行できるGnuCOBOLには、 &lt;code&gt;NUMVAL&lt;/code&gt; （&lt;a href=&quot;#NUMVAL&quot;&gt;NUMVALを&lt;/a&gt;参照）、 &lt;code&gt;NUMVAL-C&lt;/code&gt; （&lt;a href=&quot;#NUMVAL_002dC&quot;&gt;NUMVAL-Cを&lt;/a&gt;参照）、および &lt;code&gt;NUMVAL-F&lt;/code&gt; （&lt;a href=&quot;#NUMVAL_002dF&quot;&gt;NUMVAL-Fを&lt;/a&gt;参照）の3つの数値変換組み込み関数が組み込まれています。</target>
        </trans-unit>
        <trans-unit id="58be08d7e828764fa15bd43c0a6d1d0a57c144cb" translate="yes" xml:space="preserve">
          <source>An alphanumeric literal prefixed with an upper- or lower-case &quot;Z&quot; character &amp;mdash; for example,&lt;code&gt;Z'ABC'&lt;/code&gt; These literals are one character longer than the value within apostrophes or quotes would make them appear. The extra character (the last character) will be a null character (comprised entirely of zero bits). These literals are ideal when defining or assigning values to alphanumeric data items that will be passed as arguments to a C subroutine. See &lt;a href=&quot;#Alphanumeric-Literals&quot;&gt;Alphanumeric Literals&lt;/a&gt;.</source>
          <target state="translated">大文字または小文字の「Z」文字が前に付いた英数字リテラル&amp;mdash;たとえば、 &lt;code&gt;Z'ABC'&lt;/code&gt; これらのリテラルは、アポストロフィまたは引用符で囲まれた値よりも1文字長く表示されます。余分な文字（最後の文字）はnull文字（完全にゼロビットで構成される）になります。これらのリテラルは、Cサブルーチンに引数として渡される英数字データ項目に値を定義または割り当てるときに理想的です。&lt;a href=&quot;#Alphanumeric-Literals&quot;&gt;Alphanumeric Literalsを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="730c18a8d3a40f54a1446c977a8f89ce279fd28b" translate="yes" xml:space="preserve">
          <source>An alphanumeric literal prefixed with an upper- or lower-case &amp;lsquo;</source>
          <target state="translated">大文字または小文字の接頭辞が付いた英数字リテラル '</target>
        </trans-unit>
        <trans-unit id="e740fb08f67fedac7db1b4b5acaaf62b474c0393" translate="yes" xml:space="preserve">
          <source>An alternate entry point is added to a subroutine using the &lt;code&gt;ENTRY&lt;/code&gt; statement (see &lt;a href=&quot;#ENTRY&quot;&gt;ENTRY&lt;/a&gt;).</source>
          <target state="translated">別のエントリ・ポイントを使用して、サブルーチンに追加さ &lt;code&gt;ENTRY&lt;/code&gt; のステートメント（参照&lt;a href=&quot;#ENTRY&quot;&gt;エントリ&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="d1c1f98c112351956e6e6801dc71b9249112dee1" translate="yes" xml:space="preserve">
          <source>An alternate entry point is added to a subroutine using the&lt;code&gt;ENTRY&lt;/code&gt;statement (see &lt;a href=&quot;#ENTRY&quot;&gt;ENTRY&lt;/a&gt;).</source>
          <target state="translated">別のエントリ・ポイントを使用して、サブルーチンに追加さ &lt;code&gt;ENTRY&lt;/code&gt; のステートメント（参照&lt;a href=&quot;#ENTRY&quot;&gt;エントリ&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="8b57102fb1abfe157781294a52b9a4e32346538b" translate="yes" xml:space="preserve">
          <source>An alternative to the use of &lt;code&gt;ACCEPT FROM Runtime-Info&lt;/code&gt; is to use the &lt;code&gt;EXCEPTION-STATUS&lt;/code&gt; intrinsic function (see &lt;a href=&quot;#EXCEPTION_002dSTATUS&quot;&gt;EXCEPTION-STATUS&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;ACCEPT FROM Runtime-Info&lt;/code&gt; を使用する代わりに、 &lt;code&gt;EXCEPTION-STATUS&lt;/code&gt; 組み込み関数を使用することもできます（&lt;a href=&quot;#EXCEPTION_002dSTATUS&quot;&gt;EXCEPTION-STATUSを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="4e9cd9613bc2af541405ec4b5b278597d8b559dc" translate="yes" xml:space="preserve">
          <source>An alternative to the use of&lt;code&gt;ACCEPT FROM Runtime-Info&lt;/code&gt;is to use the&lt;code&gt;EXCEPTION-STATUS&lt;/code&gt;intrinsic function (see &lt;a href=&quot;#EXCEPTION_002dSTATUS&quot;&gt;EXCEPTION-STATUS&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;ACCEPT FROM Runtime-Info&lt;/code&gt; を使用する代わりに、 &lt;code&gt;EXCEPTION-STATUS&lt;/code&gt; 組み込み関数を使用することもできます（&lt;a href=&quot;#EXCEPTION_002dSTATUS&quot;&gt;EXCEPTION-STATUSを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="4dd7e177c7f3d9154d5422184b9ed91071f9ad9c" translate="yes" xml:space="preserve">
          <source>An arbitrarily long sequence of statements terminated by a period.</source>
          <target state="translated">ピリオドで終わる任意の長いステートメントのシーケンス。</target>
        </trans-unit>
        <trans-unit id="3a8796c35255f963f524410b42571f347eb41e04" translate="yes" xml:space="preserve">
          <source>An end of page condition occurred</source>
          <target state="translated">ページの終了条件が発生しました</target>
        </trans-unit>
        <trans-unit id="5a1e30b56ad12127305ae43936a433a928875a61" translate="yes" xml:space="preserve">
          <source>An error occurred. The &amp;lt;</source>
          <target state="translated">エラーが発生しました。&amp;lt;</target>
        </trans-unit>
        <trans-unit id="5cfe3f046c003d5e096bb03b74e4832260d7c325" translate="yes" xml:space="preserve">
          <source>An error occurred. The &lt;var&gt;prog-name-area&lt;/var&gt; contents will be unchanged.</source>
          <target state="translated">エラーが発生しました。 &lt;var&gt;prog-name-area&lt;/var&gt; 内容は変更されません。</target>
        </trans-unit>
        <trans-unit id="7112bc0e61d39be7c53ae09aa4ddfb197467ba5d" translate="yes" xml:space="preserve">
          <source>An error procedure may be used to take whatever actions might be warranted to display additional information or to gracefully close down work in progress, but it cannot</source>
          <target state="translated">エラープロシージャは、追加情報を表示したり、進行中の作業を優雅に終了させたりするために必要なアクションを取るために使用することができますが、以下のことはできません。</target>
        </trans-unit>
        <trans-unit id="21a91ab87db3695a69babb64f71c3724f9bf5b86" translate="yes" xml:space="preserve">
          <source>An event that is triggered when a control field on an RWCS-generated report changes value. It is these events that trigger the generation of control heading and control footing groups.</source>
          <target state="translated">RWCSで生成されたレポートのコントロールフィールドの値が変更されたときに発生するイベント。これらのイベントにより、コントロール見出しグループとコントロールフーチンググループが生成される。</target>
        </trans-unit>
        <trans-unit id="0275e9802ec04bd7a2de35caf31f7d1e3f17fac0" translate="yes" xml:space="preserve">
          <source>An example should really help you see this at work. Observe the following code which defines a two-dimensional (3 row by 4 column) table and a pair of numeric data items to be used to subscript references to each element of the table:</source>
          <target state="translated">例は、これが実際に動作しているかどうかを確認するのに役立つはずです。2 次元 (3 行 x 4 列)の表と、表の各要素への参照の添え字に使用される数値データ項目のペアを定義している以下のコードを見てください。</target>
        </trans-unit>
        <trans-unit id="c560e4e3334f91095f8e4965e6db0a28094e61df" translate="yes" xml:space="preserve">
          <source>An example will probably help:</source>
          <target state="translated">例があると助かるかもしれません。</target>
        </trans-unit>
        <trans-unit id="a7e3d12a8215552574605949d37f508e8a513a03" translate="yes" xml:space="preserve">
          <source>An exit procedure, once registered, will trigger whenever a &lt;code&gt;STOP RUN&lt;/code&gt; statement (see &lt;a href=&quot;#STOP&quot;&gt;STOP&lt;/a&gt;) or a &lt;code&gt;GOBACK&lt;/code&gt; statement (see &lt;a href=&quot;#GOBACK&quot;&gt;GOBACK&lt;/a&gt;) is executed anywhere in the program. The exit procedure may execute whatever code is desired to undertake an orderly shut down of the program. Once the exit procedure terminates by executing an &lt;code&gt;EXIT PROGRAM&lt;/code&gt; statement (see &lt;a href=&quot;#EXIT&quot;&gt;EXIT&lt;/a&gt;) or a &lt;code&gt;GOBACK&lt;/code&gt; statement, the system-standard program termination routine will be executed.</source>
          <target state="translated">終了手続きは、登録された後は、いつでもトリガする &lt;code&gt;STOP RUN&lt;/code&gt; の声明（参照&lt;a href=&quot;#STOP&quot;&gt;STOPを&lt;/a&gt;）または &lt;code&gt;GOBACK&lt;/code&gt; の文を（参照&lt;a href=&quot;#GOBACK&quot;&gt;GOBACKを&lt;/a&gt;）プログラムのどこに実行されます。終了プロシージャは、プログラムの正常なシャットダウンを実行するために必要なコードを実行できます。 &lt;code&gt;EXIT PROGRAM&lt;/code&gt; ステートメント（&lt;a href=&quot;#EXIT&quot;&gt;EXITを&lt;/a&gt;参照）または &lt;code&gt;GOBACK&lt;/code&gt; ステートメントを実行して終了プロシージャーを終了すると、システム標準のプログラム終了ルーチンが実行されます。</target>
        </trans-unit>
        <trans-unit id="fb9a16fb6f75fe3deeba61d6a7faad0124812994" translate="yes" xml:space="preserve">
          <source>An exit procedure, once registered, will trigger whenever a&lt;code&gt;STOP RUN&lt;/code&gt;statement (see &lt;a href=&quot;#STOP&quot;&gt;STOP&lt;/a&gt;) or a&lt;code&gt;GOBACK&lt;/code&gt;statement (see &lt;a href=&quot;#GOBACK&quot;&gt;GOBACK&lt;/a&gt;) is executed anywhere in the program. The exit procedure may execute whatever code is desired to undertake an orderly shut down of the program. Once the exit procedure terminates by executing an&lt;code&gt;EXIT PROGRAM&lt;/code&gt;statement (see &lt;a href=&quot;#EXIT&quot;&gt;EXIT&lt;/a&gt;) or a&lt;code&gt;GOBACK&lt;/code&gt;statement, the system-standard program termination routine will be executed.</source>
          <target state="translated">終了手続きは、登録された後は、いつでもトリガする &lt;code&gt;STOP RUN&lt;/code&gt; の声明（参照&lt;a href=&quot;#STOP&quot;&gt;STOPを&lt;/a&gt;）または &lt;code&gt;GOBACK&lt;/code&gt; の文を（参照&lt;a href=&quot;#GOBACK&quot;&gt;GOBACKを&lt;/a&gt;）プログラムのどこに実行されます。終了プロシージャは、プログラムを正常にシャットダウンするために必要なコードを実行できます。 &lt;code&gt;EXIT PROGRAM&lt;/code&gt; ステートメント（&lt;a href=&quot;#EXIT&quot;&gt;EXITを&lt;/a&gt;参照）または &lt;code&gt;GOBACK&lt;/code&gt; ステートメントを実行して終了プロシージャが終了すると、システム標準のプログラム終了ルーチンが実行されます。</target>
        </trans-unit>
        <trans-unit id="5e3be0abf77b781e1efcc2df3d201cccfd34f3dc" translate="yes" xml:space="preserve">
          <source>An extension of &lt;code&gt;CALL&lt;/code&gt; allows a call to a &lt;var&gt;Program-Pointer-1&lt;/var&gt; which is preset using &lt;code&gt;SET &lt;var&gt;program-pointer-1&lt;/var&gt; TO ENTRY &lt;var&gt;x&lt;/var&gt;&lt;/code&gt;. Additional the &lt;code&gt;RETURNING&lt;/code&gt; clause may return a data pointer or a &lt;code&gt;PROGRAM-POINTER&lt;/code&gt;</source>
          <target state="translated">拡張 &lt;code&gt;CALL&lt;/code&gt; はへの呼び出し可能 &lt;var&gt;Program-Pointer-1&lt;/var&gt; プリセット使用される &lt;code&gt;SET &lt;var&gt;program-pointer-1&lt;/var&gt; TO ENTRY &lt;var&gt;x&lt;/var&gt;&lt;/code&gt; 。追加の &lt;code&gt;RETURNING&lt;/code&gt; 句は、データポインタまたは &lt;code&gt;PROGRAM-POINTER&lt;/code&gt; を返す場合があります</target>
        </trans-unit>
        <trans-unit id="c14e976d4de1adc1800e6eceea55c8ee523630af" translate="yes" xml:space="preserve">
          <source>An input procedure should be terminated in the same way a procedural &lt;code&gt;PERFORM&lt;/code&gt; statement would be.</source>
          <target state="translated">入力プロシージャは、プロシージャの &lt;code&gt;PERFORM&lt;/code&gt; ステートメントと同じ方法で終了する必要があります。</target>
        </trans-unit>
        <trans-unit id="aae7294fe3bc4c3ec605f5a18822cf8153c72352" translate="yes" xml:space="preserve">
          <source>An input procedure should be terminated in the same way a procedural&lt;code&gt;PERFORM&lt;/code&gt;statement would be.</source>
          <target state="translated">入力プロシージャは、手続き型 &lt;code&gt;PERFORM&lt;/code&gt; ステートメントと同じように終了する必要があります。</target>
        </trans-unit>
        <trans-unit id="1f1e7d2ce85fb76385f43efe9e1ec5272608971a" translate="yes" xml:space="preserve">
          <source>An optional  &lt;code&gt;NOT INVALID KEY&lt;/code&gt; clause will cause &lt;var&gt;imperative-statement-2&lt;/var&gt; to be executed if the statement&amp;rsquo;s execution was successful.</source>
          <target state="translated">オプションの &lt;code&gt;NOT INVALID KEY&lt;/code&gt; 句を使用すると、ステートメントの実行が成功した場合に、 &lt;var&gt;imperative-statement-2&lt;/var&gt; が実行されます。</target>
        </trans-unit>
        <trans-unit id="72f7042516527f7d9425a0b86b8e54bffd9c8187" translate="yes" xml:space="preserve">
          <source>An optional  &lt;code&gt;NOT ON EXCEPTION&lt;/code&gt; clause will cause &lt;var&gt;imperative-statement-2&lt;/var&gt; to be executed if the statement&amp;rsquo;s execution was successful.</source>
          <target state="translated">オプションの &lt;code&gt;NOT ON EXCEPTION&lt;/code&gt; 句を使用すると、ステートメントの実行が成功した場合に、 &lt;var&gt;imperative-statement-2&lt;/var&gt; が実行されます。</target>
        </trans-unit>
        <trans-unit id="bcad9a99b7b4455e064dd67d054659b3cbe680ff" translate="yes" xml:space="preserve">
          <source>An optional  &lt;code&gt;NOT ON OVERFLOW&lt;/code&gt; clause will cause &lt;var&gt;imperative-statement-2&lt;/var&gt; to be executed if the statement&amp;rsquo;s execution was successful.</source>
          <target state="translated">オプションの &lt;code&gt;NOT ON OVERFLOW&lt;/code&gt; 句を使用すると、ステートメントの実行が成功した場合に、 &lt;var&gt;imperative-statement-2&lt;/var&gt; が実行されます。</target>
        </trans-unit>
        <trans-unit id="5602bfc4c8e7b5764f2758c493dfd16698970061" translate="yes" xml:space="preserve">
          <source>An optional  &lt;code&gt;NOT ON SIZE ERROR&lt;/code&gt; clause will cause &lt;var&gt;imperative-statement-2&lt;/var&gt; to be executed if the arithmetic statement&amp;rsquo;s execution was successful.</source>
          <target state="translated">オプションの &lt;code&gt;NOT ON SIZE ERROR&lt;/code&gt; 句を使用すると、算術ステートメントの実行が成功した場合に、 &lt;var&gt;imperative-statement-2&lt;/var&gt; が実行されます。</target>
        </trans-unit>
        <trans-unit id="5229c512e61b0d727d9911bde06163ee5ecfc0e1" translate="yes" xml:space="preserve">
          <source>An optional&lt;code&gt;NOT INVALID KEY&lt;/code&gt;</source>
          <target state="translated">オプションの &lt;code&gt;NOT INVALID KEY&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8b5cb62f1f63fe844a97bd26c7f5233c9b0ae60a" translate="yes" xml:space="preserve">
          <source>An optional&lt;code&gt;NOT ON EXCEPTION&lt;/code&gt;</source>
          <target state="translated">オプションの &lt;code&gt;NOT ON EXCEPTION&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9aa73b992453b6eae92e838025cd2f18049b366a" translate="yes" xml:space="preserve">
          <source>An optional&lt;code&gt;NOT ON OVERFLOW&lt;/code&gt;</source>
          <target state="translated">オプションの &lt;code&gt;NOT ON OVERFLOW&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="52b717f180698740ad6d13f32e0cf960140d50af" translate="yes" xml:space="preserve">
          <source>An optional&lt;code&gt;NOT ON SIZE ERROR&lt;/code&gt;</source>
          <target state="translated">オプションの &lt;code&gt;NOT ON SIZE ERROR&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af24938e4c0e59510f17268d047d6da0c2218adc" translate="yes" xml:space="preserve">
          <source>An otherwise numeric data item whose &lt;code&gt;PICTURE&lt;/code&gt; (see &lt;a href=&quot;#PICTURE&quot;&gt;PICTURE&lt;/a&gt;) clause also contains any of the editing symbols &amp;lsquo;</source>
          <target state="translated">そのそれ以外の場合は、数字データ項目 &lt;code&gt;PICTURE&lt;/code&gt; （参照&lt;a href=&quot;#PICTURE&quot;&gt;PICTUREを&lt;/a&gt;）句はまた、編集記号&quot;のいずれかが含まれています</target>
        </trans-unit>
        <trans-unit id="7ad9ca471559f5b0c3dd250bee53f0867b2ea95c" translate="yes" xml:space="preserve">
          <source>An otherwise numeric data item whose&lt;code&gt;PICTURE&lt;/code&gt;(see &lt;a href=&quot;#PICTURE&quot;&gt;PICTURE&lt;/a&gt;) clause also contains any of the editing symbols&lt;code&gt;$&lt;/code&gt;&lt;code&gt;*&lt;/code&gt;&lt;code&gt;+&lt;/code&gt;&lt;code&gt;,&lt;/code&gt;&lt;code&gt;-&lt;/code&gt;&lt;code&gt;.&lt;/code&gt;&lt;code&gt;/&lt;/code&gt;&lt;code&gt;0&lt;/code&gt;(zero),&lt;code&gt;B&lt;/code&gt;&lt;code&gt;CR&lt;/code&gt;&lt;code&gt;DB&lt;/code&gt;or&lt;code&gt;Z&lt;/code&gt; Numeric edited data items are not eligible to serve as table subscripts or source arguments on arithmetic statements.</source>
          <target state="translated">そのそれ以外の場合は、数字データ項目 &lt;code&gt;PICTURE&lt;/code&gt; （参照&lt;a href=&quot;#PICTURE&quot;&gt;PICTUREを&lt;/a&gt;）句も編集記号のいずれかが含まれています &lt;code&gt;$&lt;/code&gt; &lt;code&gt;*&lt;/code&gt; &lt;code&gt;+&lt;/code&gt; &lt;code&gt;,&lt;/code&gt; &lt;code&gt;-&lt;/code&gt; &lt;code&gt;.&lt;/code&gt; &lt;code&gt;/&lt;/code&gt; &lt;code&gt;0&lt;/code&gt; （ゼロ）、 &lt;code&gt;B&lt;/code&gt; &lt;code&gt;CR&lt;/code&gt; &lt;code&gt;DB&lt;/code&gt; または &lt;code&gt;Z&lt;/code&gt; 数値編集データ項目は、算術ステートメントのテーブル添え字またはソース引数として機能するのに適していません。</target>
        </trans-unit>
        <trans-unit id="436ca0d621b5c92dd61689d745fef4435d0efcf9" translate="yes" xml:space="preserve">
          <source>An output procedure should be terminated in the same way a procedural &lt;code&gt;PERFORM&lt;/code&gt; statement would be.</source>
          <target state="translated">出力プロシージャは、プロシージャの &lt;code&gt;PERFORM&lt;/code&gt; ステートメントと同じ方法で終了する必要があります。</target>
        </trans-unit>
        <trans-unit id="0a1a19a2a0c7790b3edb9dde7b386a0e161f21cf" translate="yes" xml:space="preserve">
          <source>An output procedure should be terminated in the same way a procedural &lt;code&gt;PERFORM&lt;/code&gt; statement would be. Usually, this action will be taken once the &lt;code&gt;RETURN&lt;/code&gt; statement indicates that all records in the merge work file have been processed, but termination could occur at</source>
          <target state="translated">出力プロシージャは、プロシージャの &lt;code&gt;PERFORM&lt;/code&gt; ステートメントと同じ方法で終了する必要があります。通常、このアクションは、 &lt;code&gt;RETURN&lt;/code&gt; ステートメントがマージ作業ファイル内のすべてのレコードが処理されたことを示したときに実行されますが、終了は次の場所で発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="90d90822998a8c58f9ffe74634b5f07c27637510" translate="yes" xml:space="preserve">
          <source>An output procedure should be terminated in the same way a procedural&lt;code&gt;PERFORM&lt;/code&gt;statement would be.</source>
          <target state="translated">出力プロシージャは、手続き型 &lt;code&gt;PERFORM&lt;/code&gt; ステートメントと同じ方法で終了する必要があります。</target>
        </trans-unit>
        <trans-unit id="be9710b378e25551b79a38b49fb569b6027836cb" translate="yes" xml:space="preserve">
          <source>An output procedure should be terminated in the same way a procedural&lt;code&gt;PERFORM&lt;/code&gt;statement would be. Usually, this action will be taken once the&lt;code&gt;RETURN&lt;/code&gt;statement indicates that all records in the merge work file have been processed, but termination could occur at</source>
          <target state="translated">出力プロシージャは、手続き型 &lt;code&gt;PERFORM&lt;/code&gt; ステートメントと同じ方法で終了する必要があります。通常、このアクションは、 &lt;code&gt;RETURN&lt;/code&gt; ステートメントがマージ作業ファイル内のすべてのレコードが処理されたことを示した後で実行されますが、</target>
        </trans-unit>
        <trans-unit id="840d1885430c345e3368202fe5d10d0ccd03e6b4" translate="yes" xml:space="preserve">
          <source>An&lt;code&gt;ASCENDING KEY&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ASCENDING KEY&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fa7385a0eb8f460df8fd378a7433597df0140d47" translate="yes" xml:space="preserve">
          <source>An&lt;code&gt;AT END&lt;/code&gt;clause</source>
          <target state="translated">&lt;code&gt;AT END&lt;/code&gt; の句</target>
        </trans-unit>
        <trans-unit id="e18c1c4bc70b6f7e71f3b7dedee4cf0a608296f2" translate="yes" xml:space="preserve">
          <source>An&lt;code&gt;AT END&lt;/code&gt;clause detects and handles the case where either form of table search has failed to locate an entry that satisfies the search conditions being used.</source>
          <target state="translated">AN &lt;code&gt;AT END&lt;/code&gt; 句の検出とハンドルテーブルの検索のいずれかの形が満足検索条件を使用してそのエントリを見つけるために失敗した場合。</target>
        </trans-unit>
        <trans-unit id="cedc455b517c6a18d97fd38d04af7e70791575e7" translate="yes" xml:space="preserve">
          <source>An&lt;code&gt;EXIT PERFORM CYCLE&lt;/code&gt;statement will terminate the current iteration of the in-line&lt;code&gt;PERFORM&lt;/code&gt; giving control to any&lt;code&gt;TIMES&lt;/code&gt;&lt;code&gt;VARYING&lt;/code&gt;and/or&lt;code&gt;UNTIL&lt;/code&gt;clauses for them to determine if another cycle needs to be performed.</source>
          <target state="translated">&lt;code&gt;EXIT PERFORM CYCLE&lt;/code&gt; 文では、インラインの現在の反復を終了します &lt;code&gt;PERFORM&lt;/code&gt; いずれかに制御を与え &lt;code&gt;TIMES&lt;/code&gt; &lt;code&gt;VARYING&lt;/code&gt; および/または &lt;code&gt;UNTIL&lt;/code&gt; 別のサイクルを実行する必要があるかどうかを判断するためにそれらのための条項。</target>
        </trans-unit>
        <trans-unit id="107d6552838783c1a6f10f091c9371724d474b64" translate="yes" xml:space="preserve">
          <source>An&lt;code&gt;EXIT PERFORM&lt;/code&gt;statement will terminate the in-line PERFORM outright, transferring control to the first statement following the&lt;code&gt;END-PERFORM&lt;/code&gt;(if there is one) or to the next sentence following the&lt;code&gt;PERFORM&lt;/code&gt;if there is no&lt;code&gt;END-PERFORM&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;EXIT PERFORM&lt;/code&gt; 文は、インライン次の最初の文に制御を渡す、完全PERFORM終了する &lt;code&gt;END-PERFORM&lt;/code&gt; （存在する場合）又は次の文に次の &lt;code&gt;PERFORM&lt;/code&gt; 全く存在しない場合 &lt;code&gt;END-PERFORM&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0558b101714720a3ff3ca9607a6354d79525306b" translate="yes" xml:space="preserve">
          <source>An&lt;code&gt;EXIT PROGRAM&lt;/code&gt;statement returns control back to the statement following the&lt;code&gt;CALL&lt;/code&gt;(see &lt;a href=&quot;#CALL&quot;&gt;CALL&lt;/a&gt;) of the subprogram. An&lt;code&gt;EXIT FUNCTION&lt;/code&gt;statement returns control back to the processing of the statement in the calling program that invoked the user-defined function.</source>
          <target state="translated">&lt;code&gt;EXIT PROGRAM&lt;/code&gt; の次の文への文戻っ制御バック &lt;code&gt;CALL&lt;/code&gt; （参照&lt;a href=&quot;#CALL&quot;&gt;CALL&lt;/a&gt;サブプログラムの）。 &lt;code&gt;EXIT FUNCTION&lt;/code&gt; 、ユーザー定義関数を呼び出し呼び出しプログラム中の文の処理に声明戻っ制御バック。</target>
        </trans-unit>
        <trans-unit id="4a6b6ab4109d112285f069fb07818114e4bebc69" translate="yes" xml:space="preserve">
          <source>An&lt;code&gt;EXTERNAL&lt;/code&gt;item must have a data name and that name cannot be&lt;code&gt;FILLER&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;EXTERNAL&lt;/code&gt; 項目は、データ名を持つ必要がありますし、その名前にすることはできません &lt;code&gt;FILLER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dc2fd6712885b1b3703e12505f7749bdef1bfdf0" translate="yes" xml:space="preserve">
          <source>An&lt;code&gt;INDEXED BY&lt;/code&gt;</source>
          <target state="translated">アン &lt;code&gt;INDEXED BY&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ac745675a8a2742bc9ba41f7b7314ee4e3881723" translate="yes" xml:space="preserve">
          <source>An&lt;code&gt;ON OVERFLOW&lt;/code&gt;clause will allow your program to trap a failure condition that has occurred and handle it gracefully by executing &amp;lt;</source>
          <target state="translated">&lt;code&gt;ON OVERFLOW&lt;/code&gt; 句は、トラップに発生した障害の症状をあなたのプログラムを許可して実行することにより、それを優雅に処理します&amp;lt;</target>
        </trans-unit>
        <trans-unit id="b474394379bfff80d947b78c9f32acbcbf70832a" translate="yes" xml:space="preserve">
          <source>An&lt;code&gt;UNLOCK&lt;/code&gt;statement (see &lt;a href=&quot;#UNLOCK&quot;&gt;UNLOCK&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;UNLOCK&lt;/code&gt; の声明（参照&lt;a href=&quot;#UNLOCK&quot;&gt;UNLOCKを&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="03d303d2014295d3c641cff39f40b3ea41a785dd" translate="yes" xml:space="preserve">
          <source>And here is the same program, written in GnuCOBOL:</source>
          <target state="translated">そして、これはGnuCOBOLで書かれた同じプログラムです。</target>
        </trans-unit>
        <trans-unit id="908c7702d4b49075c887e8c2a07a4d2cb8791611" translate="yes" xml:space="preserve">
          <source>And now for the COBOL version:</source>
          <target state="translated">そして、今度はCOBOL版です。</target>
        </trans-unit>
        <trans-unit id="68e6e7bf7b4e4c60445c87b347dbafdaaba69943" translate="yes" xml:space="preserve">
          <source>And then pass &lt;code&gt;LastName-Arg-to-C&lt;/code&gt; to the C subprogram!</source>
          <target state="translated">そして、 &lt;code&gt;LastName-Arg-to-C&lt;/code&gt; をCサブプログラムに渡します！</target>
        </trans-unit>
        <trans-unit id="9fb9c91cbf19f123ad108025f0e19d0e384ea8f6" translate="yes" xml:space="preserve">
          <source>And then pass LastName-Arg-to-C to the C subprogram!</source>
          <target state="translated">そして、LastName-Arg-to-CをCサブプログラムに渡します!</target>
        </trans-unit>
        <trans-unit id="09bf44abda227aefc2699ef6191b50430d22275e" translate="yes" xml:space="preserve">
          <source>And then ran the report again. Here are the first two pages of that new report. See what happened to the control breaks?</source>
          <target state="translated">そして、再びレポートを実行しました。これが新しいレポートの最初の2ページです コントロールブレークに何が起こったか見てください。</target>
        </trans-unit>
        <trans-unit id="94750e19b7dc978321e961bcdced7940324abc44" translate="yes" xml:space="preserve">
          <source>And then using &lt;code&gt;STEP&lt;/code&gt; and &lt;code&gt;VARYING&lt;/code&gt;:</source>
          <target state="translated">そして、 &lt;code&gt;STEP&lt;/code&gt; と &lt;code&gt;VARYING&lt;/code&gt; を使用します：</target>
        </trans-unit>
        <trans-unit id="ff1ef9c30f1fe7eb72699782dca2ee2c8d7a9635" translate="yes" xml:space="preserve">
          <source>And then using&lt;code&gt;STEP&lt;/code&gt;and&lt;code&gt;VARYING&lt;/code&gt;</source>
          <target state="translated">そして、 &lt;code&gt;STEP&lt;/code&gt; と &lt;code&gt;VARYING&lt;/code&gt; を使用します</target>
        </trans-unit>
        <trans-unit id="689cc005d9a5b470f694666be003b117d2e9da92" translate="yes" xml:space="preserve">
          <source>Another 01-level item is found</source>
          <target state="translated">もう一つの01レベルのアイテムを発見</target>
        </trans-unit>
        <trans-unit id="0505ee5f4fbcd8cfad246d5a081bebd17da40318" translate="yes" xml:space="preserve">
          <source>Another 01-level item is found &amp;mdash; this signifies the end of the definition of one record and the start of a another.</source>
          <target state="translated">別の01レベルのアイテムが見つかりました&amp;mdash;これは、あるレコードの定義の終わりと別のレコードの始まりを示します。</target>
        </trans-unit>
        <trans-unit id="382abb431c292b8295311889484d3fd9c8bddf7d" translate="yes" xml:space="preserve">
          <source>Another 01-level item is found &amp;mdash; this signifies the start of another record layout for the file.</source>
          <target state="translated">別の01レベルのアイテムが見つかりました&amp;mdash;これは、ファイルの別のレコードレイアウトの開始を示します。</target>
        </trans-unit>
        <trans-unit id="518375cf7ffdd1acde09571425ecc57715b23a9f" translate="yes" xml:space="preserve">
          <source>Another &lt;code&gt;FD&lt;/code&gt; or &lt;code&gt;SD&lt;/code&gt; is found</source>
          <target state="translated">別の &lt;code&gt;FD&lt;/code&gt; または &lt;code&gt;SD&lt;/code&gt; が見つかりました</target>
        </trans-unit>
        <trans-unit id="6889b74b31ee2802d979c9e890a817570f57515b" translate="yes" xml:space="preserve">
          <source>Another way in which a data item may be shared between a calling program (</source>
          <target state="translated">呼び出し側のプログラム間でデータ項目を共有する別の方法 (</target>
        </trans-unit>
        <trans-unit id="96b85ec2ac9e747684a4b8344cf7bb3a37649976" translate="yes" xml:space="preserve">
          <source>Another way in which a data item may be shared between a calling program (&quot;A&quot;) and a called program (&quot;B&quot;) is by defining the data item in the calling program and attaching the&lt;code&gt;GLOBAL&lt;/code&gt;(see &lt;a href=&quot;#GLOBAL&quot;&gt;GLOBAL&lt;/a&gt;) clause to it so that it may be used within the called program. In order for this to work, program &quot;B&quot; (the one called by program &quot;A&quot;) must be a nested subprogram within program &quot;A&quot;.</source>
          <target state="translated">呼び出しプログラム（ &quot;A&quot;）と呼び出されたプログラム（ &quot;B&quot;）の間でデータ項目を共有するもう1つの方法は、呼び出しプログラムでデータ項目を定義し、それに &lt;code&gt;GLOBAL&lt;/code&gt; （&lt;a href=&quot;#GLOBAL&quot;&gt;GLOBALを&lt;/a&gt;参照）句を付加することです。呼び出されたプログラム内で使用できること。これが機能するには、プログラム &quot;B&quot;（プログラム &quot;A&quot;によって呼び出されるプログラム）がプログラム &quot;A&quot;内のネストされたサブプログラムである必要があります。</target>
        </trans-unit>
        <trans-unit id="12d7b76f82a19dd4ed02f3d565d4b238371f7e19" translate="yes" xml:space="preserve">
          <source>Another way to refer to a subprogram. Note that a called program may also be a calling program.</source>
          <target state="translated">サブプログラムを参照する別の方法。呼び出されたプログラムは、呼び出されたプログラムである場合もあることに注意してください。</target>
        </trans-unit>
        <trans-unit id="2fd77fff888553d016fc399fbb94325e518c5453" translate="yes" xml:space="preserve">
          <source>Another&lt;code&gt;FD&lt;/code&gt;or&lt;code&gt;SD&lt;/code&gt;is found &amp;mdash; this marks the completion of the detailed description of the file and begins another.</source>
          <target state="translated">別の &lt;code&gt;FD&lt;/code&gt; または &lt;code&gt;SD&lt;/code&gt; が見つかりました&amp;mdash;これは、ファイルの詳細な説明の完了をマークし、別のFDを開始します。</target>
        </trans-unit>
        <trans-unit id="56531e8c469cb52104e3f624f006f91587199181" translate="yes" xml:space="preserve">
          <source>Any &amp;lsquo;</source>
          <target state="translated">どれか '</target>
        </trans-unit>
        <trans-unit id="ece376507b4b04f63bc6355db795ce553f81c7c9" translate="yes" xml:space="preserve">
          <source>Any &amp;lt;</source>
          <target state="translated">すべて&amp;lt;</target>
        </trans-unit>
        <trans-unit id="8382f83cb65159ee448d6e722ffbeba60f501ebf" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;FROM&lt;/code&gt; (see &lt;a href=&quot;#FROM&quot;&gt;FROM&lt;/a&gt;), &lt;code&gt;TO&lt;/code&gt; (see &lt;a href=&quot;#TO&quot;&gt;TO&lt;/a&gt;) or &lt;code&gt;USING&lt;/code&gt; (see &lt;a href=&quot;#USING&quot;&gt;USING&lt;/a&gt;) clause in the same data item&amp;rsquo;s definition will be ignored.</source>
          <target state="translated">どれ &lt;code&gt;FROM&lt;/code&gt; （参照&lt;a href=&quot;#FROM&quot;&gt;FROM&lt;/a&gt;）、 &lt;code&gt;TO&lt;/code&gt; （参照&lt;a href=&quot;#TO&quot;&gt;TOを&lt;/a&gt;）、または &lt;code&gt;USING&lt;/code&gt; （参照&lt;a href=&quot;#USING&quot;&gt;使用した&lt;/a&gt;）同じデータ項目の定義における句は無視されます。</target>
        </trans-unit>
        <trans-unit id="75194f9557bbcfd5e3aef8eca0b4aa4c0049cfc5" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;USE FOR DEBUGGING&lt;/code&gt; declarative procedures will be ignored at</source>
          <target state="translated">宣言型プロシージャを &lt;code&gt;USE FOR DEBUGGING&lt;/code&gt; するための使用は、次の場所では無視されます。</target>
        </trans-unit>
        <trans-unit id="af5b5035dbbb96fe4a1b0dbcd10ad06b141d69d7" translate="yes" xml:space="preserve">
          <source>Any &lt;var&gt;identifier-7&lt;/var&gt; data items that are sum counters must either be defined in the same report group as the data item in which this &lt;code&gt;SUM&lt;/code&gt; clause appears or they must be defined in a report data item that exists at a lower level in this report&amp;rsquo;s control hierarchy. See &lt;a href=&quot;#Control-Hierarchy&quot;&gt;Control Hierarchy&lt;/a&gt;, for additional information.</source>
          <target state="translated">任意の &lt;var&gt;identifier-7&lt;/var&gt; 合計カウンタがどちらかでこのデータ項目と同じレポートグループに定義する必要がありますされているデータ項目 &lt;code&gt;SUM&lt;/code&gt; の句が現れるか、彼らはこのレポートのコントロール階層の下位レベルで存在しているレポートデータ項目に定義する必要があります。詳細については、「&lt;a href=&quot;#Control-Hierarchy&quot;&gt;制御階層&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="6da82a484e63fbc21beaad685f8113d1089aa9bb" translate="yes" xml:space="preserve">
          <source>Any &lt;var&gt;identifier-9&lt;/var&gt; specifications included on the &lt;code&gt;CONTROL&lt;/code&gt; clause are referencing data names defined in any data division section except for the report section.</source>
          <target state="translated">任意の &lt;var&gt;identifier-9&lt;/var&gt; に含まれる仕様 &lt;code&gt;CONTROL&lt;/code&gt; の句は、レポートセクションを除くすべてのデータ分割部で定義されたデータ名を参照しています。</target>
        </trans-unit>
        <trans-unit id="a2f898c0f518503bf1220b9309e8ef39f93e3196" translate="yes" xml:space="preserve">
          <source>Any GnuCOBOL subroutine can be recursively invoked only if it is defined to the GnuCOBOL compiler as</source>
          <target state="translated">GnuCOBOLのサブルーチンは、GnuCOBOLコンパイラに次のように定義されている場合に限り、再帰的に呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="faaae76b7dfe57cbf67adc9423099599c8487ed1" translate="yes" xml:space="preserve">
          <source>Any attempt to open a file that is already open will fail with a file status of 41 (see &lt;a href=&quot;#File-Status-Codes&quot;&gt;File Status Codes&lt;/a&gt;).</source>
          <target state="translated">すでに開いているファイルを開こうとすると、ファイルステータスが41で失敗します（&lt;a href=&quot;#File-Status-Codes&quot;&gt;ファイルステータスコードを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="100ab34d30a1d379ee442e2d204a31b6b3ed3860" translate="yes" xml:space="preserve">
          <source>Any attempt to open a file that is already open will fail with a file status of 41 (see &lt;a href=&quot;#File-Status-Codes&quot;&gt;File Status Codes&lt;/a&gt;). This is a fatal error that will terminate the program.</source>
          <target state="translated">既に開いているファイルを開こうとすると、ファイルステータス41で失敗します（&lt;a href=&quot;#File-Status-Codes&quot;&gt;ファイルステータスコードを&lt;/a&gt;参照）。これは、プログラムを終了する致命的なエラーです。</target>
        </trans-unit>
        <trans-unit id="7c8fd1559498131c77671bcd2a7a57fb07ffbbb9" translate="yes" xml:space="preserve">
          <source>Any bits in &amp;lt;</source>
          <target state="translated">&amp;lt;内の任意のビット</target>
        </trans-unit>
        <trans-unit id="b879aec54c54230a3e5a05cbdf585e6800355869" translate="yes" xml:space="preserve">
          <source>Any bits in &lt;var&gt;item-1&lt;/var&gt; after the 8*&lt;var&gt;byte-length&lt;/var&gt; point will be unaffected.</source>
          <target state="translated">8 * &lt;var&gt;byte-length&lt;/var&gt; ポイントの後の &lt;var&gt;item-1&lt;/var&gt; のビットは影響を受けません。</target>
        </trans-unit>
        <trans-unit id="73149d45a834754a9af23f002d5bbd2572fd133a" translate="yes" xml:space="preserve">
          <source>Any bits in &lt;var&gt;item-2&lt;/var&gt; after the 8*&lt;var&gt;byte-length&lt;/var&gt; point will be unaffected.</source>
          <target state="translated">8 * &lt;var&gt;byte-length&lt;/var&gt; ポイントの後の &lt;var&gt;item-2&lt;/var&gt; ビットは影響を受けません。</target>
        </trans-unit>
        <trans-unit id="67ae9e1e98355da4134d72c69849170da98a4cb1" translate="yes" xml:space="preserve">
          <source>Any check-suppression symbol coded to the right of a &amp;lsquo;</source>
          <target state="translated">'の右側にコード化されたチェック抑制記号</target>
        </trans-unit>
        <trans-unit id="6bef0fbd343651d26482d90e9696df8dad5bf7e0" translate="yes" xml:space="preserve">
          <source>Any check-suppression symbol coded to the right of a&lt;code&gt;.&lt;/code&gt;will be treated exactly like a&lt;code&gt;9&lt;/code&gt;</source>
          <target state="translated">の右側にコーディングされたチェック抑制シンボル &lt;code&gt;.&lt;/code&gt; &lt;code&gt;9&lt;/code&gt; のように扱われます</target>
        </trans-unit>
        <trans-unit id="e61a49ae749b49ee902ff4b2ae633ca15b31b510" translate="yes" xml:space="preserve">
          <source>Any currency symbol coded to the right of a &amp;lsquo;</source>
          <target state="translated">'の右側にコード化された通貨記号</target>
        </trans-unit>
        <trans-unit id="e3bcf58cd2fc67e0354e8ffc50841f9ea3131ccf" translate="yes" xml:space="preserve">
          <source>Any currency symbol coded to the right of a&lt;code&gt;.&lt;/code&gt;will be treated exactly like a&lt;code&gt;9&lt;/code&gt;</source>
          <target state="translated">の右側にコード化された通貨記号 &lt;code&gt;.&lt;/code&gt; &lt;code&gt;9&lt;/code&gt; のように扱われます</target>
        </trans-unit>
        <trans-unit id="a320db675bf5a15ad72e91a96c50735a520e849b" translate="yes" xml:space="preserve">
          <source>Any editing symbols introduced past this point will, if coded in the picture clause of an otherwise numeric data item, transform that data item from a numeric to a  &lt;em&gt;Numeric Edited&lt;/em&gt; data item. Numeric edited data items are treated as alphanumeric and may not serve either as table subscripts or as source arguments on an arithmetic statement.</source>
          <target state="translated">この時点を過ぎて導入された編集記号は、それ以外の場合は数値データ項目の画像句にコーディングされている場合、そのデータ項目を数値から &lt;em&gt;数値編集&lt;/em&gt;データ項目に変換します。数値で編集されたデータ項目は英数字として扱われ、テーブルの添え字としても、算術ステートメントのソース引数としても機能しない場合があります。</target>
        </trans-unit>
        <trans-unit id="f77cfa80a154156b5bd42b458486005f66fbb774" translate="yes" xml:space="preserve">
          <source>Any editing symbols introduced past this point will, if coded in the picture clause of an otherwise numeric data item, transform that data item from a numeric to a &amp;rsquo;</source>
          <target state="translated">この時点以降に導入された編集記号は、それ以外の場合は数値データ項目のピクチャー句でコーディングされている場合、そのデータ項目を数値から 'に変換します。</target>
        </trans-unit>
        <trans-unit id="90b9ccb1ecab8f99534dc262df737d5f05bd8262" translate="yes" xml:space="preserve">
          <source>Any file defined in a GnuCOBOL program must be successfully opened before it or any of it&amp;rsquo;s record descriptions may be referenced on:</source>
          <target state="translated">GnuCOBOLプログラムで定義されたファイルは、その前に正常に開いておく必要があります。そうしないと、そのファイルのレコード記述を以下で参照できます。</target>
        </trans-unit>
        <trans-unit id="5b7a1af2dd2779e01dc7df92b9f2e58e6577d3a9" translate="yes" xml:space="preserve">
          <source>Any file defined in a GnuCOBOL program must be successfully opened before it or any of its record descriptions may be referenced on:</source>
          <target state="translated">GnuCOBOLプログラムで定義されているファイルは、そのファイルやそのレコードの説明を参照する前に正常に開かれていなければなりません。</target>
        </trans-unit>
        <trans-unit id="ff02ac007f44656c52eb4d60b56ba46ef78440ef" translate="yes" xml:space="preserve">
          <source>Any limitations imposed on a successful &lt;code&gt;OPEN&lt;/code&gt; (see &lt;a href=&quot;#OPEN&quot;&gt;OPEN&lt;/a&gt;) will remain in place until your program either issues a &lt;code&gt;CLOSE&lt;/code&gt; (see &lt;a href=&quot;#CLOSE&quot;&gt;CLOSE&lt;/a&gt;) against the file or the program terminates.</source>
          <target state="translated">成功に課せられた制限事項 &lt;code&gt;OPEN&lt;/code&gt; は、（参照&lt;a href=&quot;#OPEN&quot;&gt;OPENを&lt;/a&gt;）あなたのプログラムのいずれかを発行するまで所定の位置にとどまる &lt;code&gt;CLOSE&lt;/code&gt; （参照&lt;a href=&quot;#CLOSE&quot;&gt;CLOSEを&lt;/a&gt;ファイルやプログラムの終了に対して）。</target>
        </trans-unit>
        <trans-unit id="cf723a992e40cd4aba4d8614163d705ffa6fcf27" translate="yes" xml:space="preserve">
          <source>Any limitations imposed on a successful&lt;code&gt;OPEN&lt;/code&gt;(see &lt;a href=&quot;#OPEN&quot;&gt;OPEN&lt;/a&gt;) will remain in place until your program either issues a&lt;code&gt;CLOSE&lt;/code&gt;(see &lt;a href=&quot;#CLOSE&quot;&gt;CLOSE&lt;/a&gt;) against the file or the program terminates.</source>
          <target state="translated">成功に課せられた制限事項 &lt;code&gt;OPEN&lt;/code&gt; は、（参照&lt;a href=&quot;#OPEN&quot;&gt;OPENを&lt;/a&gt;）あなたのプログラムのいずれかを発行するまで所定の位置にとどまる &lt;code&gt;CLOSE&lt;/code&gt; （参照&lt;a href=&quot;#CLOSE&quot;&gt;CLOSEを&lt;/a&gt;ファイルやプログラムの終了に対して）。</target>
        </trans-unit>
        <trans-unit id="7d682e132d7c3c4806d88ca80c81f84fc3da5985" translate="yes" xml:space="preserve">
          <source>Any modification to the   &lt;code&gt;LINE-COUNTER&lt;/code&gt; special register (see &lt;a href=&quot;#Special-Registers&quot;&gt;Special Registers&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;LINE-COUNTER&lt;/code&gt; 特殊レジスターへの変更 （&lt;a href=&quot;#Special-Registers&quot;&gt;特殊レジスターを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="9ecdbd73028de3eeb96ef22283a5db8c8860831a" translate="yes" xml:space="preserve">
          <source>Any modification to the   &lt;code&gt;PAGE-COUNTER&lt;/code&gt; special register.</source>
          <target state="translated">&lt;code&gt;PAGE-COUNTER&lt;/code&gt; 特殊レジスターへの変更 。</target>
        </trans-unit>
        <trans-unit id="07309495035024e00199d745b0565e378e8a4c37" translate="yes" xml:space="preserve">
          <source>Any modification to the&lt;code&gt;LINE-COUNTER&lt;/code&gt;special register (see &lt;a href=&quot;#Special-Registers&quot;&gt;Special Registers&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;LINE-COUNTER&lt;/code&gt; 特殊レジスターへの変更（&lt;a href=&quot;#Special-Registers&quot;&gt;特殊レジスターを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="7e9510ca3b2e3093c2eaea38b5cb662ac9023afa" translate="yes" xml:space="preserve">
          <source>Any modification to the&lt;code&gt;PAGE-COUNTER&lt;/code&gt;special register .</source>
          <target state="translated">&lt;code&gt;PAGE-COUNTER&lt;/code&gt; 特殊レジスターへの変更。</target>
        </trans-unit>
        <trans-unit id="5596e2fb14f2973ae87df25ad559a88f3670b77e" translate="yes" xml:space="preserve">
          <source>Any of these characters appearing within a syntax diagram are to be interpreted literally, and are characters that must be coded &amp;mdash; where allowed &amp;mdash; in the statement whose format is being described. Note that a &quot;.&quot; character is a literal character that must be coded on a statement whereas a &quot;...&quot; symbol is the meta character sequence described above.</source>
          <target state="translated">構文図に表示されるこれらの文字はすべて、文字どおりに解釈され、フォーマットが記述されているステートメントで、許可されている場合はコーディングする必要がある文字です。「。」に注意してください。文字は、ステートメントでコーディングする必要のあるリテラル文字ですが、「...」記号は上記のメタ文字シーケンスです。</target>
        </trans-unit>
        <trans-unit id="748c5fc489bb4f19b33361d0bb343fd95e3536f9" translate="yes" xml:space="preserve">
          <source>Any of these characters appearing within a syntax diagram are to be interpreted literally, and are characters that must be coded &amp;mdash; where allowed &amp;mdash; in the statement whose format is being described. Note that a &amp;lsquo;</source>
          <target state="translated">シンタックスダイアグラム内に表示されるこれらの文字はすべて文字通りに解釈され、フォーマットが記述されているステートメントで（許可されている場合は）コーディングする必要がある文字です。'に注意してください</target>
        </trans-unit>
        <trans-unit id="0573f3a3b482095180533ec3deab3815b4c66248" translate="yes" xml:space="preserve">
          <source>Any open failure (including status 41) may be trapped using &lt;code&gt;DECLARATIVES&lt;/code&gt; (see &lt;a href=&quot;#DECLARATIVES&quot;&gt;DECLARATIVES&lt;/a&gt;) or an error procedure established using the &lt;code&gt;CBL_ERROR_PROC&lt;/code&gt; built-in system subroutine (see &lt;a href=&quot;#CBL_005fERROR_005fPROC&quot;&gt;CBL_ERROR_PROC&lt;/a&gt;) built-in subroutine or even just checking the status field defined. It is up to the programmer to check for bad statuses and respond accordingly such as issue a CLOSE before dealing with the problem.</source>
          <target state="translated">任意のオープン故障（ステータス41を含む）を使用して捕捉されてもよい &lt;code&gt;DECLARATIVES&lt;/code&gt; （参照&lt;a href=&quot;#DECLARATIVES&quot;&gt;DECLARATIVESを&lt;/a&gt;）、または使用して確立されたエラー処理 &lt;code&gt;CBL_ERROR_PROC&lt;/code&gt; （参照ビルトインシステムサブルーチン&lt;a href=&quot;#CBL_005fERROR_005fPROC&quot;&gt;CBL_ERROR_PROCを&lt;/a&gt;内蔵サブルーチンあるいは単にステータス・フィールドが定義されてチェック）。問題に対処する前に、不良ステータスをチェックし、それに応じてCLOSEを発行するなどの対応を行うのは、プログラマーの責任です。</target>
        </trans-unit>
        <trans-unit id="05c8005e639ef075bb5c029fa3f90090c950c54b" translate="yes" xml:space="preserve">
          <source>Any open failure (including status 41) may be trapped using&lt;code&gt;DECLARATIVES&lt;/code&gt;(see &lt;a href=&quot;#DECLARATIVES&quot;&gt;DECLARATIVES&lt;/a&gt;) or an error procedure established using the&lt;code&gt;CBL_ERROR_PROC&lt;/code&gt;built-in system subroutine (see &lt;a href=&quot;#CBL_005fERROR_005fPROC&quot;&gt;CBL_ERROR_PROC&lt;/a&gt;) built-in subroutine. When either of these trap routines</source>
          <target state="translated">任意のオープン故障（ステータス41を含む）を使用して捕捉されてもよい &lt;code&gt;DECLARATIVES&lt;/code&gt; （参照&lt;a href=&quot;#DECLARATIVES&quot;&gt;DECLARATIVESを&lt;/a&gt;）、または使用して確立されたエラー処理 &lt;code&gt;CBL_ERROR_PROC&lt;/code&gt; ビルトインシステムサブルーチン（参照&lt;a href=&quot;#CBL_005fERROR_005fPROC&quot;&gt;CBL_ERROR_PROCに&lt;/a&gt;）内蔵サブルーチン。これらのトラップルーチンのいずれかが</target>
        </trans-unit>
        <trans-unit id="38d177c6ad83b9ea06dad59b249b92bfd4368ac5" translate="yes" xml:space="preserve">
          <source>Any procedures referenced by &lt;code&gt;GO TO&lt;/code&gt; statements will be defined as paragraphs, and those paragraphs will be defined in the same section as the &lt;code&gt;GO TO&lt;/code&gt; statements that reference them. In other words, &lt;code&gt;GO TO&lt;/code&gt; statements may not be used to transfer control to a point in a different section. This is</source>
          <target state="translated">&lt;code&gt;GO TO&lt;/code&gt; ステートメントによって参照されるすべてのプロシージャーは段落として定義され、それらの段落は、それらを参照する &lt;code&gt;GO TO&lt;/code&gt; ステートメントと同じセクションで定義されます。つまり、 &lt;code&gt;GO TO&lt;/code&gt; ステートメントを使用して、別のセクションのポイントに制御を移すことはできません。これは</target>
        </trans-unit>
        <trans-unit id="ccc8bf26333530994b18d4d03564a0070a7d4a75" translate="yes" xml:space="preserve">
          <source>Any procedures referenced by &lt;code&gt;MERGE&lt;/code&gt;, &lt;code&gt;PERFORM&lt;/code&gt;, or &lt;code&gt;SORT&lt;/code&gt; statements will be defined as sections.</source>
          <target state="translated">&lt;code&gt;MERGE&lt;/code&gt; 、 &lt;code&gt;PERFORM&lt;/code&gt; 、または &lt;code&gt;SORT&lt;/code&gt; ステートメントによって参照されるすべてのプロシージャーは、セクションとして定義されます。</target>
        </trans-unit>
        <trans-unit id="5781772e084e444be68b9e695c83552d1ee473fb" translate="yes" xml:space="preserve">
          <source>Any procedures referenced by&lt;code&gt;GO TO&lt;/code&gt;statements will be defined as paragraphs, and those paragraphs will be defined in the same section as the&lt;code&gt;GO TO&lt;/code&gt;statements that reference them. In other words,&lt;code&gt;GO TO&lt;/code&gt;statements may not be used to transfer control to a point in a different section. This is</source>
          <target state="translated">参照される任意の手順 &lt;code&gt;GO TO&lt;/code&gt; のステートメントは、段落のように定義され、それらの段落は、同じセクションで定義される &lt;code&gt;GO TO&lt;/code&gt; のそれらを参照文。つまり、 &lt;code&gt;GO TO&lt;/code&gt; ステートメントを使用して、別のセクションのポイントに制御を移すことはできません。これは</target>
        </trans-unit>
        <trans-unit id="eecd6d60d2d9d5868c3f314cdb3b483e10e23de4" translate="yes" xml:space="preserve">
          <source>Any procedures referenced by&lt;code&gt;MERGE&lt;/code&gt;&lt;code&gt;PERFORM&lt;/code&gt; or&lt;code&gt;SORT&lt;/code&gt;statements will be defined as sections.</source>
          <target state="translated">&lt;code&gt;MERGE&lt;/code&gt; &lt;code&gt;PERFORM&lt;/code&gt; または &lt;code&gt;SORT&lt;/code&gt; ステートメントによって参照されるプロシージャは、セクションとして定義されます。</target>
        </trans-unit>
        <trans-unit id="ed1c3fc20474dca4e5afa8fac8ef4eb1715e6ead" translate="yes" xml:space="preserve">
          <source>Any programmer-defined exit procedure (established via the &lt;code&gt;CBL_EXIT_PROC&lt;/code&gt; built-in system subroutine (see &lt;a href=&quot;#CBL_005fEXIT_005fPROC&quot;&gt;CBL_EXIT_PROC&lt;/a&gt;)) will be executed by &lt;code&gt;STOP RUN&lt;/code&gt;, but not by &lt;code&gt;STOP &lt;var&gt;literal-3&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">プログラマー定義の終了プロシージャー（ &lt;code&gt;CBL_EXIT_PROC&lt;/code&gt; 組み込みシステムサブルーチン（&lt;a href=&quot;#CBL_005fEXIT_005fPROC&quot;&gt;CBL_EXIT_PROCを&lt;/a&gt;参照）を介して確立される）は、 &lt;code&gt;STOP RUN&lt;/code&gt; によって実行されますが、 &lt;code&gt;STOP &lt;var&gt;literal-3&lt;/var&gt;&lt;/code&gt; によっては実行されません。</target>
        </trans-unit>
        <trans-unit id="184906523a150d69bc1a9c1f23192c4de8a46740" translate="yes" xml:space="preserve">
          <source>Any programmer-defined exit procedure (established via the&lt;code&gt;CBL_EXIT_PROC&lt;/code&gt;built-in system subroutine (see &lt;a href=&quot;#CBL_005fEXIT_005fPROC&quot;&gt;CBL_EXIT_PROC&lt;/a&gt;)) will be executed by&lt;code&gt;STOP RUN&lt;/code&gt; but not by&lt;code&gt;STOP &amp;lt;&lt;i&gt;literal-3&lt;/i&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">プログラマー定義の出口プロシージャー（ &lt;code&gt;CBL_EXIT_PROC&lt;/code&gt; 組み込みシステムサブルーチン（&lt;a href=&quot;#CBL_005fEXIT_005fPROC&quot;&gt;CBL_EXIT_PROCを&lt;/a&gt;参照）を介して確立）は、 &lt;code&gt;STOP &amp;lt;&lt;i&gt;literal-3&lt;/i&gt;&amp;gt;&lt;/code&gt; &lt;i&gt;リテラル-3&lt;/i&gt; &amp;gt;ではなく &lt;code&gt;STOP RUN&lt;/code&gt; によって実行されます。&lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="c0b666e80a44d1fa49194ffd3d323d6df8a7fee4" translate="yes" xml:space="preserve">
          <source>Any subprogram may be either statically or dynamically loaded into memory.</source>
          <target state="translated">任意のサブプログラムは、静的または動的にメモリにロードすることができます。</target>
        </trans-unit>
        <trans-unit id="662f40cfd453ce96cd358bffc9a69da378cd8403" translate="yes" xml:space="preserve">
          <source>Any subroutine may have multiple entry-points defined within it. This means the subroutine could be called either via a &lt;code&gt;CALL '&lt;var&gt;program-id&lt;/var&gt;'&lt;/code&gt; or a &lt;code&gt;CALL '&lt;var&gt;entry-point&lt;/var&gt;'&lt;/code&gt; statement. There may be any number of alternate entry-points defined within a subroutine.</source>
          <target state="translated">どのサブルーチンにも、複数のエントリポイントを定義できます。これは、サブルーチンが &lt;code&gt;CALL '&lt;var&gt;program-id&lt;/var&gt;'&lt;/code&gt; または &lt;code&gt;CALL '&lt;var&gt;entry-point&lt;/var&gt;'&lt;/code&gt; ステートメントのいずれかを介して呼び出される可能性があることを意味します。サブルーチン内には、任意の数の代替エントリポイントが定義されている場合があります。</target>
        </trans-unit>
        <trans-unit id="504d18753df605f9f9ca9cb22a61c5d08a964b9a" translate="yes" xml:space="preserve">
          <source>Any subroutine may have multiple entry-points defined within it. This means the subroutine could be called either via a&lt;code&gt;CALL '&amp;lt;&lt;i&gt;program-id&lt;/i&gt;&amp;gt;'&lt;/code&gt;or a&lt;code&gt;CALL '&amp;lt;&lt;i&gt;entry-point&lt;/i&gt;&amp;gt;'&lt;/code&gt;statement. There may be any number of alternate entry-points defined within a subroutine.</source>
          <target state="translated">サブルーチンには、複数のエントリポイントが定義されている場合があります。つまり、 &lt;code&gt;CALL '&amp;lt;&lt;i&gt;program-id&lt;/i&gt;&amp;gt;'&lt;/code&gt; または &lt;code&gt;CALL '&amp;lt;&lt;i&gt;entry-point&lt;/i&gt;&amp;gt;'&lt;/code&gt; ステートメントを介してサブルーチンを呼び出すことができます。サブルーチン内で定義された任意の数の代替エントリポイントが存在する場合があります。</target>
        </trans-unit>
        <trans-unit id="d1fc58b4f56f6457f4484e3ee645ab7d9e6dec47" translate="yes" xml:space="preserve">
          <source>Any subroutines or user-defined functions that weren&amp;rsquo;t included in any of the source files comprising the compilation group will be treated as dynamically loadable subprograms (see &lt;a href=&quot;#Dynamic-vs-Static-Subprograms&quot;&gt;Dynamic vs Static Subprograms&lt;/a&gt;).</source>
          <target state="translated">コンパイルグループを構成するどのソースファイルにも含まれていなかったサブルーチンまたはユーザー定義関数は、動的にロード可能なサブプログラムとして扱われます（&lt;a href=&quot;#Dynamic-vs-Static-Subprograms&quot;&gt;動的サブプログラムと静的サブプログラムを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="6c1d8bfb396f82cd0be3e1b2f29c9dd40ad412c9" translate="yes" xml:space="preserve">
          <source>Any value specified for &amp;lt;</source>
          <target state="translated">&amp;lt;に指定された任意の値</target>
        </trans-unit>
        <trans-unit id="b9af064dd24805ee9769a86502dc8552c2aef723" translate="yes" xml:space="preserve">
          <source>Any value specified for &lt;var&gt;literal-2&lt;/var&gt; or &lt;var&gt;identifier-2&lt;/var&gt; will define the total number of available lines on any report page, not counting any unused margins at the top and/or bottom of the page (defined by the &lt;code&gt;LINES AT TOP&lt;/code&gt; and &lt;code&gt;LINES AT BOTTOM&lt;/code&gt; values specified on the &lt;code&gt;LINAGE&lt;/code&gt; clause of the &lt;code&gt;FD&lt;/code&gt; this &lt;code&gt;RD&lt;/code&gt; is linked to &amp;mdash; see &lt;a href=&quot;#File_002fSort_002dDescription&quot;&gt;File/Sort-Description&lt;/a&gt;).</source>
          <target state="translated">&lt;var&gt;literal-2&lt;/var&gt; または &lt;var&gt;identifier-2&lt;/var&gt; -2に指定された値は、レポートページで使用可能な行の総数を定義します。ページの上部または下部、あるいはその両方の未使用のマージンはカウントされません（ &lt;code&gt;LINES AT TOP&lt;/code&gt; および &lt;code&gt;LINES AT BOTTOM&lt;/code&gt; 定義されます）。この &lt;code&gt;RD&lt;/code&gt; がリンクされている &lt;code&gt;FD&lt;/code&gt; の &lt;code&gt;LINAGE&lt;/code&gt; 句で指定された値&amp;mdash;「&lt;a href=&quot;#File_002fSort_002dDescription&quot;&gt;ファイル/ソート-説明&lt;/a&gt;」を参照）。</target>
        </trans-unit>
        <trans-unit id="2ad93c2c0de21d31ea47a77039dee19dd24a2301" translate="yes" xml:space="preserve">
          <source>Any value specified for &lt;var&gt;literal-3&lt;/var&gt; or &lt;var&gt;identifier-3&lt;/var&gt; will be ignored.</source>
          <target state="translated">&lt;var&gt;literal-3&lt;/var&gt; または &lt;var&gt;identifier-3&lt;/var&gt; -3に指定された値はすべて無視されます。</target>
        </trans-unit>
        <trans-unit id="8de75ab99f8def55ad9727e64b7c126160cab956" translate="yes" xml:space="preserve">
          <source>Any zero-suppression symbol coded to the right of a &amp;lsquo;</source>
          <target state="translated">'の右側にコード化されたゼロ抑制記号</target>
        </trans-unit>
        <trans-unit id="8ae8b2f4162d32085d93a05bffe959d3dc6c2c99" translate="yes" xml:space="preserve">
          <source>Any zero-suppression symbol coded to the right of a&lt;code&gt;.&lt;/code&gt;will be treated exactly like a&lt;code&gt;9&lt;/code&gt;</source>
          <target state="translated">の右側にコーディングされたゼロ抑制シンボル &lt;code&gt;.&lt;/code&gt; &lt;code&gt;9&lt;/code&gt; のように扱われます</target>
        </trans-unit>
        <trans-unit id="609550b887a3665c33285cf377eeab02fdad2f81" translate="yes" xml:space="preserve">
          <source>Any&lt;code&gt;+&lt;/code&gt;symbol coded to the right of a&lt;code&gt;.&lt;/code&gt;will be treated exactly like a&lt;code&gt;9&lt;/code&gt;</source>
          <target state="translated">任意 &lt;code&gt;+&lt;/code&gt; の記号は、右に符号化されました &lt;code&gt;.&lt;/code&gt; &lt;code&gt;9&lt;/code&gt; のように扱われます</target>
        </trans-unit>
        <trans-unit id="90d69db88d33f5d818bfe45bab965b5cb19e7247" translate="yes" xml:space="preserve">
          <source>Any&lt;code&gt;-&lt;/code&gt;symbol coded to the right of a&lt;code&gt;.&lt;/code&gt;will be treated exactly like a&lt;code&gt;9&lt;/code&gt;</source>
          <target state="translated">任意の &lt;code&gt;-&lt;/code&gt; 記号はの右側にコード化されました &lt;code&gt;.&lt;/code&gt; &lt;code&gt;9&lt;/code&gt; のように扱われます</target>
        </trans-unit>
        <trans-unit id="3317b9bd439ca7b44560972fca6ecc8f24de4ec7" translate="yes" xml:space="preserve">
          <source>Any&lt;code&gt;FROM&lt;/code&gt;(see &lt;a href=&quot;#FROM&quot;&gt;FROM&lt;/a&gt;),&lt;code&gt;TO&lt;/code&gt;(see &lt;a href=&quot;#TO&quot;&gt;TO&lt;/a&gt;) or&lt;code&gt;USING&lt;/code&gt;(see &lt;a href=&quot;#USING&quot;&gt;USING&lt;/a&gt;) clause in the same data item&amp;rsquo;s definition will be ignored.</source>
          <target state="translated">どれ &lt;code&gt;FROM&lt;/code&gt; （参照&lt;a href=&quot;#FROM&quot;&gt;FROM&lt;/a&gt;）、 &lt;code&gt;TO&lt;/code&gt; （参照&lt;a href=&quot;#TO&quot;&gt;TOを&lt;/a&gt;）、または &lt;code&gt;USING&lt;/code&gt; （参照&lt;a href=&quot;#USING&quot;&gt;使用した&lt;/a&gt;）同じデータ項目の定義における句は無視されます。</target>
        </trans-unit>
        <trans-unit id="0d67012185f3b5a9a5acefa8efe44be45ccd9181" translate="yes" xml:space="preserve">
          <source>Any&lt;code&gt;USE FOR DEBUGGING&lt;/code&gt;declarative procedures will be ignored at</source>
          <target state="translated">&lt;code&gt;USE FOR DEBUGGING&lt;/code&gt; 宣言型プロシージャの使用はすべて無視されます</target>
        </trans-unit>
        <trans-unit id="73973cfd168d40bb8277e2f6044ecdb605409c4e" translate="yes" xml:space="preserve">
          <source>Appendices</source>
          <target state="translated">Appendices</target>
        </trans-unit>
        <trans-unit id="48bf7afa8d3cf106e9d055154eefcbf6a6d17e88" translate="yes" xml:space="preserve">
          <source>Appendix A - Glossary of Terms</source>
          <target state="translated">付録A-用語集</target>
        </trans-unit>
        <trans-unit id="b3caa5ecaad1a99ce9408f043c78a5025c7f21c7" translate="yes" xml:space="preserve">
          <source>Appendix B - Reserved Word List</source>
          <target state="translated">付録B 予約ワード一覧</target>
        </trans-unit>
        <trans-unit id="072be2b86e2e9778cc6f6ac1a62af09a26ea8764" translate="yes" xml:space="preserve">
          <source>Approximately -1.797693134862316 * 10&lt;sup&gt;308&lt;/sup&gt; &amp;ndash; 1.797693134862316 * 10&lt;sup&gt;308&lt;/sup&gt;</source>
          <target state="translated">約-1.797693134862316 * 10 &lt;sup&gt;308&lt;/sup&gt; &amp;ndash; 1.797693134862316 * 10 &lt;sup&gt;308&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="4f8efb9dd8dc8979930f5cce4db0b4ac9f57e430" translate="yes" xml:space="preserve">
          <source>Approximately -1.797693134862316&amp;times;10^308 to 1.797693134862316&amp;times;10^308</source>
          <target state="translated">約-1.797693134862316&amp;times;10 ^ 308〜1.797693134862316&amp;times;10 ^ 308</target>
        </trans-unit>
        <trans-unit id="554a24e23c3198fff8657009a0bf71949a8faebb" translate="yes" xml:space="preserve">
          <source>Approximately -3.4028235 * 10&lt;sup&gt;38&lt;/sup&gt; &amp;ndash; 3.4028235 * 10&lt;sup&gt;38&lt;/sup&gt;</source>
          <target state="translated">約-3.4028235 * 10 &lt;sup&gt;38&lt;/sup&gt; &amp;ndash; 3.4028235 * 10 &lt;sup&gt;38&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="ec0a8efc23f1cd8a47ecd61a1a44af541b83ab89" translate="yes" xml:space="preserve">
          <source>Approximately -3.4028235&amp;times;10^38 to 3.4028235&amp;times;10^38</source>
          <target state="translated">約-3.4028235&amp;times;10 ^ 38〜3.4028235&amp;times;10 ^ 38</target>
        </trans-unit>
        <trans-unit id="ef76957fbf0cf421a9e00a02ecd10f44eb914d5b" translate="yes" xml:space="preserve">
          <source>Area A</source>
          <target state="translated">エリアA</target>
        </trans-unit>
        <trans-unit id="a0f1cdfbee6014b784e8cd0453a50f77e3bee1f8" translate="yes" xml:space="preserve">
          <source>Area B</source>
          <target state="translated">エリアB</target>
        </trans-unit>
        <trans-unit id="37353e5c3760cc4ebefcf993ed8fb20f61cefbe6" translate="yes" xml:space="preserve">
          <source>Arguments 2, 3 and 4 should be coded as the constant values shown. &lt;code&gt;CBL_CREATE_FILE&lt;/code&gt; is actually a special-case of the &lt;code&gt;CBL_OPEN_FILE&lt;/code&gt; built-in system subroutine (see &lt;a href=&quot;#CBL_005fOPEN_005fFILE&quot;&gt;CBL_OPEN_FILE&lt;/a&gt;) routine &amp;mdash; see that routine for a description of the meanings of arguments 2, 3 and 4.</source>
          <target state="translated">引数2、3、および4は、示されている定数値としてコーディングする必要があります。 &lt;code&gt;CBL_CREATE_FILE&lt;/code&gt; は、実際には &lt;code&gt;CBL_OPEN_FILE&lt;/code&gt; 組み込みシステムサブルーチン（&lt;a href=&quot;#CBL_005fOPEN_005fFILE&quot;&gt;CBL_OPEN_FILEを&lt;/a&gt;参照）ルーチンの特殊なケースです。引数2、3、および4の意味の説明については、そのルーチンを参照してください。</target>
        </trans-unit>
        <trans-unit id="dacce68e3bbdcbcc2b9399d8af85171c0f0c35c0" translate="yes" xml:space="preserve">
          <source>Arguments 2, 3 and 4 should be coded as the constant values shown.&lt;code&gt;CBL_CREATE_FILE&lt;/code&gt;is actually a special-case of the&lt;code&gt;CBL_OPEN_FILE&lt;/code&gt;built-in system subroutine (see &lt;a href=&quot;#CBL_005fOPEN_005fFILE&quot;&gt;CBL_OPEN_FILE&lt;/a&gt;) routine &amp;mdash; see that routine for a description of the meanings of arguments 2, 3 and 4.</source>
          <target state="translated">引数2、3、および4は、示されている定数値としてコーディングする必要があります。 &lt;code&gt;CBL_CREATE_FILE&lt;/code&gt; は、実際には &lt;code&gt;CBL_OPEN_FILE&lt;/code&gt; 組み込みシステムサブルーチン（&lt;a href=&quot;#CBL_005fOPEN_005fFILE&quot;&gt;CBL_OPEN_FILEを&lt;/a&gt;参照）ルーチンの特殊なケースです-引数2、3、および4の意味の説明については、そのルーチンを参照してください。</target>
        </trans-unit>
        <trans-unit id="2f3b277fc84585ddc67f049324e34e0258469da4" translate="yes" xml:space="preserve">
          <source>Arguments must be described in both the calling and called programs, and while they don&amp;rsquo;t need to have the same names in both programs, they should be described in an identical manner with regard to the following characteristics:</source>
          <target state="translated">引数は、呼び出し元プログラムと呼び出し先プログラムの両方で記述する必要があります。また、両方のプログラムで同じ名前である必要はありませんが、以下の特性に関して同じ方法で記述する必要があります。</target>
        </trans-unit>
        <trans-unit id="3afc598b571906c0776a2f06b23501e757b48d2a" translate="yes" xml:space="preserve">
          <source>Arguments to a user-defined function are always to be specified as &lt;code&gt;BY REFERENCE&lt;/code&gt; (either explicitly or by not using any &lt;code&gt;BY&lt;/code&gt;).</source>
          <target state="translated">ユーザー定義関数への引数は、常に &lt;code&gt;BY REFERENCE&lt;/code&gt; として指定する必要があります（明示的に、または &lt;code&gt;BY&lt;/code&gt; を使用しないことによって）。</target>
        </trans-unit>
        <trans-unit id="07c268e7dc75ae19cfce107f9220c59392c5162c" translate="yes" xml:space="preserve">
          <source>Arguments to a user-defined function are always to be specified as&lt;code&gt;BY REFERENCE&lt;/code&gt;(either explicitly or by not using any&lt;code&gt;BY&lt;/code&gt;.</source>
          <target state="translated">ユーザー定義関数への引数は、常に &lt;code&gt;BY REFERENCE&lt;/code&gt; として指定する必要があります（明示的に、または &lt;code&gt;BY&lt;/code&gt; を使用しないことによって）。</target>
        </trans-unit>
        <trans-unit id="fbc24241a0054f7cba259986d000337d4452d4aa" translate="yes" xml:space="preserve">
          <source>Arguments to user-defined functions are always passed &lt;code&gt;BY REFERENCE&lt;/code&gt;.</source>
          <target state="translated">ユーザー定義関数への引数は、常に &lt;code&gt;BY REFERENCE&lt;/code&gt; 渡されます。</target>
        </trans-unit>
        <trans-unit id="5a520bd4d4137463c9fa4f4db1926ad17ae4aeec" translate="yes" xml:space="preserve">
          <source>Arguments to user-defined functions are always passed&lt;code&gt;BY REFERENCE&lt;/code&gt;</source>
          <target state="translated">ユーザー定義関数への引数は常に &lt;code&gt;BY REFERENCE&lt;/code&gt; 渡されます</target>
        </trans-unit>
        <trans-unit id="73d03321e72215121bde5deab4f021ad90feeeaf" translate="yes" xml:space="preserve">
          <source>Arguments will be passed in left-to-right sequence.</source>
          <target state="translated">引数は左から右の順に渡されます。</target>
        </trans-unit>
        <trans-unit id="6553652d52b882b2fa85e1ddeed243f74a2a8cfe" translate="yes" xml:space="preserve">
          <source>Arguments will be passed in right-to-left sequence</source>
          <target state="translated">引数は右から左の順番で渡されます。</target>
        </trans-unit>
        <trans-unit id="13f8cae111c9429795ca36d0d8ea0de0ed73fa2e" translate="yes" xml:space="preserve">
          <source>Arguments will be separated by treating spaces and/or tab characters as the delimiters between arguments. The number of such delimiters separating two non-blank argument values is irrelevant.</source>
          <target state="translated">引数は、スペースやタブ文字を引数間の区切り文字として扱うことで分離されます。ブランクのない2つの引数値を区切るこのような区切り文字の数は関係ありません。</target>
        </trans-unit>
        <trans-unit id="7916a12fca1750cc9ed24af496c281048c649162" translate="yes" xml:space="preserve">
          <source>Arithmetic expressions are formed using four categories of operations &amp;mdash; exponentiation, multiplication &amp;amp; division, addition &amp;amp; subtraction, and sign specification.</source>
          <target state="translated">算術式は、べき乗、乗算と除算、加算と減算、および符号指定の4つのカテゴリの演算を使用して形成されます。</target>
        </trans-unit>
        <trans-unit id="88b8b7be3d74c23d3dcc83074799de5e5c536973" translate="yes" xml:space="preserve">
          <source>Arithmetic overflow in calculation</source>
          <target state="translated">計算での算術オーバーフロー</target>
        </trans-unit>
        <trans-unit id="80db2ce40cc9814703d58bd80f29165f71702f70" translate="yes" xml:space="preserve">
          <source>Arithmetic-Expression Syntax</source>
          <target state="translated">算術式構文</target>
        </trans-unit>
        <trans-unit id="ca11394a0b053ab0f486150df6563b365bcc4080" translate="yes" xml:space="preserve">
          <source>As a general rule of thumb, Windows implementations support two levels while Unix ones support all three.</source>
          <target state="translated">一般的な経験則として、Windows の実装は 2 つのレベルをサポートしていますが、Unix の実装は 3 つのレベルをすべてサポートしています。</target>
        </trans-unit>
        <trans-unit id="23e3795d0ffdc85df6595641a282fec4cee1b019" translate="yes" xml:space="preserve">
          <source>As a result of the sort, our program might expect to see data somewhat like this (date, time and sales totals are shown as &quot;&amp;hellip;&quot;):</source>
          <target state="translated">並べ替えの結果、プログラムでは次のようなデータが表示されることが予想される場合があります（日付、時刻、売上の合計は &quot;&amp;hellip;&quot;として表示されます）。</target>
        </trans-unit>
        <trans-unit id="07b7464425cc13f1b75723867012405ff31ea80d" translate="yes" xml:space="preserve">
          <source>As a result of the sort, our program might expect to see data somewhat like this (date, time and sales totals are shown as &amp;ldquo;&amp;hellip;&amp;rdquo;):</source>
          <target state="translated">並べ替えの結果、プログラムは次のようなデータを期待する場合があります（日付、時刻、および売上の合計は「&amp;hellip;」として表示されます）。</target>
        </trans-unit>
        <trans-unit id="79e97cb7b9075f47df3433b5132aca0b002264de" translate="yes" xml:space="preserve">
          <source>As an alternative to using the  &lt;code&gt;ALL INTRINSIC&lt;/code&gt; clause, you may instead compile your GnuCOBOL programs using the</source>
          <target state="translated">&lt;code&gt;ALL INTRINSIC&lt;/code&gt; 句を使用する代わりに、代わりに GnuCOBOLプログラムをコンパイルすることもできます。</target>
        </trans-unit>
        <trans-unit id="4940f97a91d71dcdb635d4a2e00daa08b2606846" translate="yes" xml:space="preserve">
          <source>As an alternative to using the&lt;code&gt;ALL INTRINSIC&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ALL INTRINSIC&lt;/code&gt; を使用する代わりに</target>
        </trans-unit>
        <trans-unit id="ed3cb936dd4f7b90bf8660668779f10b38d855da" translate="yes" xml:space="preserve">
          <source>As an example, the following statement passes three arguments to a subroutine &amp;mdash; each argument is passed differently.</source>
          <target state="translated">例として、次のステートメントは3つの引数をサブルーチンに渡します&amp;mdash;各引数は別々に渡されます。</target>
        </trans-unit>
        <trans-unit id="d08c9e1d43bf3266b629d31500d42492d8c881ed" translate="yes" xml:space="preserve">
          <source>As compared to:</source>
          <target state="translated">比べてみると</target>
        </trans-unit>
        <trans-unit id="db6506b02535815ce8b9ce2ba0ca60872f2c269c" translate="yes" xml:space="preserve">
          <source>As data is loaded into the sort work file, it is actually being buffered in dynamically-allocated memory. Only if the amount of data to be sorted exceeds the amount of available sort memory (128 MB) will actual disk files be allocated and utilized. There is a</source>
          <target state="translated">データがソート作業ファイルにロードされると、実際には動的に割り当てられたメモリにバッファリングされます。ソートされるデータの量が利用可能なソートメモリの量 (128 MB)を超えた場合にのみ、実際のディスクファイルが割り当てられ、利用されます。このような場合には、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="17e862ea09e7ebaab3a489d170c1217d3f510897" translate="yes" xml:space="preserve">
          <source>As data is loaded into the sort work file, it is actually being buffered in dynamically-allocated memory. Only if the amount of data to be sorted exceeds the amount of available sort memory (128 MB) will actual disk files be allocated and utilized. There is a   &lt;code&gt;COB_SORT_MEMORY&lt;/code&gt; run-time environment variable (see &lt;a href=&quot;#Run-Time-Environment-Variables&quot;&gt;Run Time Environment Variables&lt;/a&gt;) that you may use to allocate more or less memory to the sorting process.</source>
          <target state="translated">データがソート作業ファイルにロードされると、実際には動的に割り当てられたメモリにバッファリングされます。ソートされるデータの量が使用可能なソートメモリの量（128 MB）を超える場合にのみ、実際のディスクファイルが割り当てられて使用されます。あり &lt;code&gt;COB_SORT_MEMORY&lt;/code&gt; ランタイム環境変数が（参照&lt;a href=&quot;#Run-Time-Environment-Variables&quot;&gt;ランタイム環境変数を&lt;/a&gt;使用すると、ソート処理に多かれ少なかれメモリを割り当てるために使用できること）。</target>
        </trans-unit>
        <trans-unit id="357b7b0ad5ecd29f746fa2dde581cd8aa0e2a352" translate="yes" xml:space="preserve">
          <source>As discussed previously, dynamically-loadable libraries are created via the compiler&amp;rsquo;s</source>
          <target state="translated">前に説明したように、動的にロード可能なライブラリは、コンパイラの</target>
        </trans-unit>
        <trans-unit id="130f906685b8ffff68b8730ad2a15f8e8f5583c4" translate="yes" xml:space="preserve">
          <source>As discussed previously, dynamically-loadable libraries are created via the compiler&amp;rsquo;s&lt;code&gt;-m&lt;/code&gt;switch. Once so created, the program(s) in these libraries are executed from the command line (via the GnuCOBOL&lt;code&gt;cobcrun&lt;/code&gt;utility), or as dynamically-loadable subprograms.</source>
          <target state="translated">前述のように、動的にロード可能なライブラリは、コンパイラの &lt;code&gt;-m&lt;/code&gt; スイッチを介して作成されます。いったん作成されると、これらのライブラリー内のプログラムは、コマンド行から（GnuCOBOL &lt;code&gt;cobcrun&lt;/code&gt; ユーティリティーを介して）、または動的にロード可能なサブプログラムとして実行されます。</target>
        </trans-unit>
        <trans-unit id="bf294a7904a387f4b244a94b210d1b2d9c1c54ba" translate="yes" xml:space="preserve">
          <source>As each of the above folders is searched for a copybook &amp;mdash; &lt;code&gt;COPY &lt;var&gt;XXXXXXXX&lt;/var&gt;.&lt;/code&gt;, for example &amp;mdash; the GnuCOBOL compiler will attempt to locate the copybook file by any of the following names, in the sequence shown:</source>
          <target state="translated">-上記の各フォルダは、コピーブックで検索されたよう &lt;code&gt;COPY &lt;var&gt;XXXXXXXX&lt;/var&gt;.&lt;/code&gt; たとえば、GnuCOBOLコンパイラは、次のいずれかの名前で、示されている順序でコピーブックファイルを見つけようとします。</target>
        </trans-unit>
        <trans-unit id="e399bfe42d083f8487e6c9d998df2c372852b952" translate="yes" xml:space="preserve">
          <source>As each of the above folders is searched for a copybook &amp;mdash;&lt;code&gt;COPY XXXXXXXX.&lt;/code&gt; for example &amp;mdash; the GnuCOBOL compiler will attempt to locate the copybook file by any of the following names, in the sequence shown:</source>
          <target state="translated">上記の各フォルダーでコピーブックが検索されるため、 &lt;code&gt;COPY XXXXXXXX.&lt;/code&gt; たとえば、GnuCOBOLコンパイラーは、以下の名前のいずれかで、示されている順序でコピーブックファイルを見つけようとします。</target>
        </trans-unit>
        <trans-unit id="b4b9c9f14350cbf32c6e16e0f3ab9c89980eaa43" translate="yes" xml:space="preserve">
          <source>As far as enforcement goes, however, both alphabetic and numeric picture strings do provide for both compile-time and run-time enforcement capabilities. In the case of compilation enforcement, the compiler can issue warning messages if you attempt to specify a non-numeric value for a numeric data item or if you attempt to &lt;code&gt;MOVE&lt;/code&gt; (see &lt;a href=&quot;#MOVE&quot;&gt;MOVE&lt;/a&gt;) a non-numeric data item to one that is numeric. Similar capabilities exist for alphabetic data items. At run-time, you may use a special class test (see &lt;a href=&quot;#Class-Conditions&quot;&gt;Class Conditions&lt;/a&gt;) to determine if the contents of a data item are entirely numeric or entirely alphabetic.</source>
          <target state="translated">ただし、施行に関しては、アルファベットと数字の両方の画像文字列が、コンパイル時と実行時の両方の施行機能を提供します。コンパイルの実施の場合、数値データ項目に非数値を指定しようとした場合、または非数値データ項目を数値のデータ項目に &lt;code&gt;MOVE&lt;/code&gt; （&lt;a href=&quot;#MOVE&quot;&gt;MOVEを&lt;/a&gt;参照）しようとした場合、コンパイラーは警告メッセージを発行できます。アルファベットのデータ項目にも同様の機能があります。実行時に、特別なクラステスト（&lt;a href=&quot;#Class-Conditions&quot;&gt;クラス条件を&lt;/a&gt;参照）を使用して、データ項目の内容が完全に数値であるか完全にアルファベットであるかを判断できます。</target>
        </trans-unit>
        <trans-unit id="2b9ef072c68e60e92d584a7454cb8966303b7996" translate="yes" xml:space="preserve">
          <source>As far as enforcement goes, however, both alphabetic and numeric picture strings do provide for both compile-time and run-time enforcement capabilities. In the case of compilation enforcement, the compiler can issue warning messages if you attempt to specify a non-numeric value for a numeric data item or if you attempt to&lt;code&gt;MOVE&lt;/code&gt;(see &lt;a href=&quot;#MOVE&quot;&gt;MOVE&lt;/a&gt;) a non-numeric data item to one that is numeric. Similar capabilities exist for alphabetic data items. At run-time, you may use a special class test (see &lt;a href=&quot;#Class-Conditions&quot;&gt;Class Conditions&lt;/a&gt;) to determine if the contents of a data item are entirely numeric or entirely alphabetic.</source>
          <target state="translated">ただし、施行に関しては、アルファベットと数字の両方のピクチャー文字列が、コンパイル時と実行時の両方の施行機能を提供します。コンパイル強制の場合、数値データ項目に非数値値を指定しようとした場合、または非数値データ項目を数値であるものに &lt;code&gt;MOVE&lt;/code&gt; （&lt;a href=&quot;#MOVE&quot;&gt;MOVEを&lt;/a&gt;参照）しようとした場合、コンパイラーは警告メッセージを発行できます。アルファベット順のデータ項目にも同様の機能があります。実行時に、特別なクラステスト（「&lt;a href=&quot;#Class-Conditions&quot;&gt;クラス条件」を&lt;/a&gt;参照）を使用して、データ項目の内容が完全に数値であるか完全にアルファベットであるかを判断できます。</target>
        </trans-unit>
        <trans-unit id="8ad40a909df10f422708e91b6cbf3a539c3e0185" translate="yes" xml:space="preserve">
          <source>As is the case in almost any other programming language, the programmer is always free to use pairs of parenthesis to enclose sub-expressions of complex expressions that are to be evaluated before other sub-expressions rather than let operator precedence dictate the sequence of evaluation.</source>
          <target state="translated">他のほとんどのプログラミング言語でそうであるように、プログラマーは、演算子の優先順位が評価の順序を決定するのではなく、複雑な式の部分式を他の部分式の前に評価するために括弧のペアを常に自由に使用することができます。</target>
        </trans-unit>
        <trans-unit id="4554dd5b047e612be263380b9463354fcc00ea7b" translate="yes" xml:space="preserve">
          <source>As of the COBOL2002 standard, a second mode now exists for COBOL source code statements &amp;mdash; in this mode of operation, COBOL statements may each be up to 255 characters long, with no specific requirements as to what should appear in which columns.</source>
          <target state="translated">COBOL2002標準の時点で、COBOLソースコードステートメントに2番目のモードが存在します。この操作モードでは、COBOLステートメントはそれぞれ最大255文字であり、どの列に何を表示するかについて特定の要件はありません。</target>
        </trans-unit>
        <trans-unit id="bbf4ec3fd027ea442265a55111b5061b935e2373" translate="yes" xml:space="preserve">
          <source>As part of the &lt;code&gt;FROM&lt;/code&gt; clause of a &lt;code&gt;WRITE&lt;/code&gt; (see &lt;a href=&quot;#WRITE&quot;&gt;WRITE&lt;/a&gt;) or &lt;code&gt;RELEASE&lt;/code&gt; statement (see &lt;a href=&quot;#RELEASE&quot;&gt;RELEASE&lt;/a&gt;).</source>
          <target state="translated">一環として、 &lt;code&gt;FROM&lt;/code&gt; の句 &lt;code&gt;WRITE&lt;/code&gt; （参照&lt;a href=&quot;#WRITE&quot;&gt;WRITE&lt;/a&gt;）または &lt;code&gt;RELEASE&lt;/code&gt; の声明（参照&lt;a href=&quot;#RELEASE&quot;&gt;RELEASEを&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="fb58d585f15052eb908472a7a363374cbf8ad1b6" translate="yes" xml:space="preserve">
          <source>As part of the &lt;code&gt;TIMES&lt;/code&gt; clause of a &lt;code&gt;PERFORM&lt;/code&gt; statement (see &lt;a href=&quot;#PERFORM&quot;&gt;PERFORM&lt;/a&gt;).</source>
          <target state="translated">一環として &lt;code&gt;TIMES&lt;/code&gt; のの句 &lt;code&gt;PERFORM&lt;/code&gt; 文の（参照&lt;a href=&quot;#PERFORM&quot;&gt;PERFORM&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="1c8a528c8a5db43a4c93339f852a40ec0f50d952" translate="yes" xml:space="preserve">
          <source>As part of the&lt;code&gt;FROM&lt;/code&gt;clause of a&lt;code&gt;WRITE&lt;/code&gt;(see &lt;a href=&quot;#WRITE&quot;&gt;WRITE&lt;/a&gt;) or&lt;code&gt;RELEASE&lt;/code&gt;statement (see &lt;a href=&quot;#RELEASE&quot;&gt;RELEASE&lt;/a&gt;).</source>
          <target state="translated">一環として、 &lt;code&gt;FROM&lt;/code&gt; の句 &lt;code&gt;WRITE&lt;/code&gt; （参照&lt;a href=&quot;#WRITE&quot;&gt;WRITE&lt;/a&gt;）または &lt;code&gt;RELEASE&lt;/code&gt; の声明（参照&lt;a href=&quot;#RELEASE&quot;&gt;RELEASEを&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="a73a4ca502e493378755eafa2beace7b47077369" translate="yes" xml:space="preserve">
          <source>As part of the&lt;code&gt;TIMES&lt;/code&gt;clause of a&lt;code&gt;PERFORM&lt;/code&gt;statement (see &lt;a href=&quot;#PERFORM&quot;&gt;PERFORM&lt;/a&gt;).</source>
          <target state="translated">一環として &lt;code&gt;TIMES&lt;/code&gt; のの句 &lt;code&gt;PERFORM&lt;/code&gt; 文の（参照&lt;a href=&quot;#PERFORM&quot;&gt;PERFORM&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="cc65d45b9011ac878d2498dcd83d119719e2ba99" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;MERGE&lt;/code&gt; statement begins execution, the first record in each of the  &lt;code&gt;USING&lt;/code&gt; files is read automatically.</source>
          <target state="translated">&lt;code&gt;MERGE&lt;/code&gt; 文が実行を開始、のそれぞれの最初のレコード &lt;code&gt;USING&lt;/code&gt; ファイルが自動的に読み込まれます。</target>
        </trans-unit>
        <trans-unit id="63f3ab7d286ce0ad479b4c3595ba167d791cfbef" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;MERGE&lt;/code&gt; statement executes, the current record from each of the &lt;code&gt;USING&lt;/code&gt; files is examined and compared to each other according to the rules set forth by the &lt;code&gt;KEY&lt;/code&gt; clause and the alphabet (see &lt;a href=&quot;#Alphabet_002dName_002dClause&quot;&gt;Alphabet-Name-Clause&lt;/a&gt;) specified on the  &lt;code&gt;COLLATING SEQUENCE&lt;/code&gt; clause. The record that should be next in sequence will be written to the merge work file and the &lt;code&gt;USING&lt;/code&gt; file from which that record came will be read so that its next record is available. As end-of-file conditions are reached on &lt;code&gt;USING&lt;/code&gt; files, those files will be excluded from further processing &amp;mdash; processing continues with the remaining files until all the contents of all of them have been exhausted.</source>
          <target state="translated">&lt;code&gt;MERGE&lt;/code&gt; のステートメントの実行、のそれぞれから現在のレコード &lt;code&gt;USING&lt;/code&gt; ファイルで定めた規則に従って検査し、互いに比較される &lt;code&gt;KEY&lt;/code&gt; の句とアルファベット（参照&lt;a href=&quot;#Alphabet_002dName_002dClause&quot;&gt;符号系名句&lt;/a&gt;）に指定された &lt;code&gt;COLLATING SEQUENCE&lt;/code&gt; 句。次の順番になっているはずのレコードがマージ作業ファイルに書き込まれ、そのレコードの元となった &lt;code&gt;USING&lt;/code&gt; ファイルが読み取られて、次のレコードが使用可能になります。 &lt;code&gt;USING&lt;/code&gt; ファイルでファイルの終わり条件に達すると、それらのファイルは以降の処理から除外されます。残りのファイルは、すべての内容がすべてなくなるまで処理が続行されます。</target>
        </trans-unit>
        <trans-unit id="61bc43269493911cc16b9d89987b310d7a490a16" translate="yes" xml:space="preserve">
          <source>As the diagram shows, there are three types of statements that may occur in the two paragraphs of this section. If none of the statements are coded in a particular paragraph, the paragraph itself may be omitted, otherwise it is required.</source>
          <target state="translated">図に示すように、本節の2つの段落には、3つのタイプのステートメントが存在する。いずれの記述も特定の段落にコード化されていない場合は、その段落自体を省略してもよいが、そうでない場合は必須である。</target>
        </trans-unit>
        <trans-unit id="3ffa23f73df55fe9017e41640911e5d5e7d20faf" translate="yes" xml:space="preserve">
          <source>As the syntax diagram shows, the definition of a &amp;lt;&amp;lt;</source>
          <target state="translated">構文図が示すように、&amp;lt;&amp;lt;</target>
        </trans-unit>
        <trans-unit id="cff12ad98a0c9de372e14dcdf790c28b35280735" translate="yes" xml:space="preserve">
          <source>As the syntax diagram shows, the definition of a &lt;code&gt;&lt;var&gt;LINKAGE-SECTION-Data-Item&lt;/var&gt;&lt;/code&gt; is a recursive one in that there may be any number of such specifications coded following one another. The first such specification must have a level number of 01. Specifications that follow that one may have level numbers greater than 01, in which case they are defining a hierarchical breakdown of a record. The definition of a record is terminated when one of the following occurs:</source>
          <target state="translated">シンタックスダイアグラムが示すように、 &lt;code&gt;&lt;var&gt;LINKAGE-SECTION-Data-Item&lt;/var&gt;&lt;/code&gt; の定義は再帰的なものであり、そのような仕様は次々にコード化されます。最初のそのような仕様のレベル番号は01である必要があります。それに続く仕様では、レベル番号が01より大きい場合があります。その場合、レコードの階層内訳を定義します。レコードの定義は、次のいずれかが発生したときに終了します。</target>
        </trans-unit>
        <trans-unit id="5f0b1b1f6f2944c9421f6744a0907d40a8a65c25" translate="yes" xml:space="preserve">
          <source>As the syntax diagram shows, the definition of a &lt;code&gt;&lt;var&gt;LOCAL-STORAGE-SECTION-Data-Item&lt;/var&gt;&lt;/code&gt; is a recursive one in that there may be any number of such specifications coded following one another. The first such specification must have a level number of 01. Specifications that follow that one may have level numbers greater than 01, in which case they are defining a hierarchical breakdown of a record. The definition of a record is terminated when one of the following occurs:</source>
          <target state="translated">シンタックスダイアグラムが示すように、 &lt;code&gt;&lt;var&gt;LOCAL-STORAGE-SECTION-Data-Item&lt;/var&gt;&lt;/code&gt; の定義は再帰的なものであり、そのような仕様はいくつでも次々にコード化される可能性があります。最初のそのような仕様のレベル番号は01である必要があります。それに続く仕様では、レベル番号が01より大きい場合があります。その場合、レコードの階層内訳を定義します。レコードの定義は、次のいずれかが発生したときに終了します。</target>
        </trans-unit>
        <trans-unit id="39dc2498a30b5d566019356c890469467bf54380" translate="yes" xml:space="preserve">
          <source>As the syntax diagram shows, the definition of a &lt;code&gt;&lt;var&gt;WORKING-STORAGE-SECTION-Data-Item&lt;/var&gt;&lt;/code&gt; is a recursive one in that there may be any number of such specifications coded following one another. The first such specification must have a level number of 01. Specifications that follow that one may have level numbers greater than 01, in which case they are defining a hierarchical breakdown of a record. The definition of a record is terminated when one of the following occurs:</source>
          <target state="translated">シンタックスダイアグラムが示すように、 &lt;code&gt;&lt;var&gt;WORKING-STORAGE-SECTION-Data-Item&lt;/var&gt;&lt;/code&gt; の定義は再帰的なものであり、そのような仕様は次々とコード化されます。最初のそのような仕様のレベル番号は01である必要があります。それに続く仕様では、レベル番号が01より大きい場合があります。その場合、レコードの階層内訳を定義します。レコードの定義は、次のいずれかが発生したときに終了します。</target>
        </trans-unit>
        <trans-unit id="ec580ad87a6ea88762c54a0d31bab4da9e4fdef7" translate="yes" xml:space="preserve">
          <source>As the syntax diagram shows, the definition of a &lt;var&gt;FILE-SECTION-Data-Item&lt;/var&gt; is a recursive one in that there may be any number of such specifications coded following a FD or SD. The first such specification must have a level number of 01, and will describe a specific format of data record within the file. Specifications that follow that one may have level numbers greater than 01, in which case they are defining a hierarchical breakdown of the record. The definition of a record is terminated when one of the following occurs:</source>
          <target state="translated">シンタックスダイアグラムが示すように、 &lt;var&gt;FILE-SECTION-Data-Item&lt;/var&gt; の定義は、FDまたはSDの後にコード化されたそのような仕様がいくつでも存在する可能性があるという点で再帰的なものです。最初のそのような仕様はレベル番号01でなければならず、ファイル内のデータレコードの特定のフォーマットを記述します。それに続く仕様では、レベル番号が01より大きい場合があります。その場合、レコードの階層的な内訳が定義されます。レコードの定義は、次のいずれかが発生したときに終了します。</target>
        </trans-unit>
        <trans-unit id="296b852b8448d93942a077ab3a1b94c0c3fed6cf" translate="yes" xml:space="preserve">
          <source>As the&lt;code&gt;MERGE&lt;/code&gt;statement begins execution, the first record in each of the&lt;code&gt;USING&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;MERGE&lt;/code&gt; 文は実行、のそれぞれの最初のレコードから始まる &lt;code&gt;USING&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="46e9f2414adf575e04776803bd34d80ab6b46c0b" translate="yes" xml:space="preserve">
          <source>As the&lt;code&gt;MERGE&lt;/code&gt;statement executes, the current record from each of the&lt;code&gt;USING&lt;/code&gt;files is examined and compared to each other according to the rules set forth by the&lt;code&gt;KEY&lt;/code&gt;clause and the alphabet (see &lt;a href=&quot;#Alphabet_002dName_002dClause&quot;&gt;Alphabet-Name-Clause&lt;/a&gt;) specified on the&lt;code&gt;COLLATING SEQUENCE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;MERGE&lt;/code&gt; のステートメントの実行、のそれぞれから現在のレコード &lt;code&gt;USING&lt;/code&gt; ファイルで定めた規則に従って検査し、互いに比較される &lt;code&gt;KEY&lt;/code&gt; の句とアルファベット（参照&lt;a href=&quot;#Alphabet_002dName_002dClause&quot;&gt;符号系名句&lt;/a&gt;）に指定された &lt;code&gt;COLLATING SEQUENCE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3223505cf0f385fb48234e866679fed3fe9b7f4e" translate="yes" xml:space="preserve">
          <source>As was presented earlier (see &lt;a href=&quot;#Structured-Data&quot;&gt;Structured Data&lt;/a&gt;), a data item that is broken down into other data items is referred to as a group item, while one that isn&amp;rsquo;t broken down is called an elementary item.</source>
          <target state="translated">前に説明したように（&lt;a href=&quot;#Structured-Data&quot;&gt;構造化データを&lt;/a&gt;参照）、他のデータ項目に分解されるデータ項目はグループ項目と呼ばれ、分解されないものは基本項目と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="981d288884a6c738196484a0a06ae81b95b8662d" translate="yes" xml:space="preserve">
          <source>As with the other divisions, the procedure division may consist of sections and those sections may &amp;mdash; in turn &amp;mdash; consist of paragraphs. Unlike the other divisions, however, section and paragraph names are defined by the programmer, and there may not be any defined at all if the programmer so wishes.</source>
          <target state="translated">他の部門と同様に、手続き部門はセクションで構成され、これらのセクションは段落で構成されます。ただし、他の部門とは異なり、セクションと段落の名前はプログラマーによって定義され、プログラマーが希望する場合はまったく定義されない場合があります。</target>
        </trans-unit>
        <trans-unit id="ca7e2fab21e4edc6af668af55edb54e9ffaad2a0" translate="yes" xml:space="preserve">
          <source>As you can see, there was a huge drop in &lt;code&gt;USAGE COMP&lt;/code&gt; timings by turning off truncation. As a result, I see absolutely no reason whatsoever why the</source>
          <target state="translated">ご覧のとおり、切り捨てをオフにすると、 &lt;code&gt;USAGE COMP&lt;/code&gt; タイミングが大幅に低下しました。結果として、私は理由がまったくわかりません。</target>
        </trans-unit>
        <trans-unit id="9ae745acf0a462b1dd7c6cde5493e5c68ae7843d" translate="yes" xml:space="preserve">
          <source>As you can see, there was a huge drop in&lt;code&gt;USAGE COMP&lt;/code&gt;timings by turning off truncation. As a result, I see absolutely no reason whatsoever why the&lt;code&gt;-fnotrunc&lt;/code&gt;switch option shouldn&amp;rsquo;t be used on all GnuCOBOL compilations.</source>
          <target state="translated">ご覧のとおり、切り捨てをオフにすると、 &lt;code&gt;USAGE COMP&lt;/code&gt; のタイミングが大幅に低下しました。結果として、すべてのGnuCOBOLコンパイルで &lt;code&gt;-fnotrunc&lt;/code&gt; スイッチオプションを使用してはならない理由はまったくわかりません。</target>
        </trans-unit>
        <trans-unit id="45127190d833b850823da0c28cb0b1bc991d2347" translate="yes" xml:space="preserve">
          <source>Ascending sequence of store number</source>
          <target state="translated">店舗番号の昇順</target>
        </trans-unit>
        <trans-unit id="4b58cd30268fe2ebaba2141e1041c33967620f38" translate="yes" xml:space="preserve">
          <source>Assuming that &quot;Nibble&quot; is a numeric data item with a value in the range 0-15, and Hex-Digits is a&lt;code&gt;PIC X(16)&lt;/code&gt;item with a value of &quot;0123456789ABCDEF&quot;, this converts that numeric value to a hexadecimal digit.</source>
          <target state="translated">「ニブル」が0〜15の範囲の値を持つ数値データ項目であり、16進数が「0123456789ABCDEF」の値を持つ &lt;code&gt;PIC X(16)&lt;/code&gt; 項目であるとすると、その数値は16進数に変換されます。</target>
        </trans-unit>
        <trans-unit id="66bbdec3cd4a241123166427097f1442a7b63dab" translate="yes" xml:space="preserve">
          <source>Assuming that &lt;code&gt;Nibble&lt;/code&gt; is a numeric data item with a value in the range 0-15, and Hex-Digits is a &lt;code&gt;PIC X(16)&lt;/code&gt; item with a value of &lt;code&gt;0123456789ABCDEF&lt;/code&gt;, this converts that numeric value to a hexadecimal digit.</source>
          <target state="translated">仮定すると、 &lt;code&gt;Nibble&lt;/code&gt; 0〜15の値を持つ数値データ項目であり、六角桁である &lt;code&gt;PIC X(16)&lt;/code&gt; の値を持つ項目 &lt;code&gt;0123456789ABCDEF&lt;/code&gt; この変換は、16進数字の数値こと、。</target>
        </trans-unit>
        <trans-unit id="32f2c23c8e677b039e091ee427f68717b15f7c3d" translate="yes" xml:space="preserve">
          <source>At any point in time, there may well be multipl&lt;code&gt;REPLACING&lt;/code&gt;and/or&lt;code&gt;TALLYING&lt;/code&gt;operational instructions active. Only one of the&lt;code&gt;TALLYING&lt;/code&gt;and one of the&lt;code&gt;REPLACING&lt;/code&gt;instructions (if any) can be executed for any one character pointer position. In each case, it will be the first of the instructions in each category that produces a match with it&amp;rsquo;s target string specification.</source>
          <target state="translated">どの時点でも、複数の &lt;code&gt;REPLACING&lt;/code&gt; および/または &lt;code&gt;TALLYING&lt;/code&gt; 操作命令がアクティブになっている可能性があります。のみの1 &lt;code&gt;TALLYING&lt;/code&gt; との1 &lt;code&gt;REPLACING&lt;/code&gt; 命令（もしあれば）任意の1つの文字ポインタの位置のために実行することができます。どちらの場合も、ターゲット文字列仕様との一致を生成するのは、各カテゴリの最初の命令です。</target>
        </trans-unit>
        <trans-unit id="d4407aff9b6ef34f7a22c45895bf6189a2b5ab4c" translate="yes" xml:space="preserve">
          <source>At any point in time, there may well be multiple&lt;code&gt;REPLACING&lt;/code&gt; and/or &lt;code&gt;TALLYING&lt;/code&gt; operational instructions active. Only one of the &lt;code&gt;TALLYING&lt;/code&gt; and one of the &lt;code&gt;REPLACING&lt;/code&gt; instructions (if any) can be executed for any one character pointer position. In each case, it will be the first of the instructions in each category that produces a match with its target string specification.</source>
          <target state="translated">いつでも、複数の &lt;code&gt;REPLACING&lt;/code&gt; および/または &lt;code&gt;TALLYING&lt;/code&gt; 操作命令がアクティブになっている可能性があります。のみの1 &lt;code&gt;TALLYING&lt;/code&gt; との1 &lt;code&gt;REPLACING&lt;/code&gt; 命令（もしあれば）任意の1つの文字ポインタの位置のために実行することができます。いずれの場合も、ターゲット文字列仕様との一致を生成するのは、各カテゴリの最初の命令になります。</target>
        </trans-unit>
        <trans-unit id="58024c82e77f41a36e760c889c0d9e393020d8c4" translate="yes" xml:space="preserve">
          <source>At execution time, each &amp;lt;</source>
          <target state="translated">実行時に、各&amp;lt;</target>
        </trans-unit>
        <trans-unit id="dee76242c11145e778baf4ac5644916e93897119" translate="yes" xml:space="preserve">
          <source>At execution time, each &lt;var&gt;Selection-Subject&lt;/var&gt; on the &lt;code&gt;EVALUATE&lt;/code&gt; statement will have its value matched against that of the corresponding &lt;var&gt;Selection-Object&lt;/var&gt; on a &lt;code&gt;WHEN&lt;/code&gt; clause, in turn, until:</source>
          <target state="translated">実行時に、 &lt;code&gt;EVALUATE&lt;/code&gt; ステートメントの各 &lt;var&gt;Selection-Subject&lt;/var&gt; の値は、 &lt;code&gt;WHEN&lt;/code&gt; 句の対応する &lt;var&gt;Selection-Object&lt;/var&gt; の値と次のように一致します。</target>
        </trans-unit>
        <trans-unit id="25a6ce82acdc6bc612fd3d2cffdae1b97075c917" translate="yes" xml:space="preserve">
          <source>At execution time, each switch will be associated with a</source>
          <target state="translated">実行時には、各スイッチは</target>
        </trans-unit>
        <trans-unit id="0feed9ce50537151cf27bd118346051a85bdbb57" translate="yes" xml:space="preserve">
          <source>At execution time, each switch will be associated with a   &lt;code&gt;COB_SWITCH_n&lt;/code&gt; run-time environment variable, where &lt;code&gt;&lt;var&gt;n&lt;/var&gt;&lt;/code&gt; will have the value &amp;lsquo;</source>
          <target state="translated">実行時に、各スイッチは &lt;code&gt;COB_SWITCH_n&lt;/code&gt; ランタイム環境変数に関連付けられ ます &lt;code&gt;&lt;var&gt;n&lt;/var&gt;&lt;/code&gt; の値は 'です。</target>
        </trans-unit>
        <trans-unit id="f11e7555a3db0fbb052544056af2d1e237d33472" translate="yes" xml:space="preserve">
          <source>At execution time:</source>
          <target state="translated">実行時。</target>
        </trans-unit>
        <trans-unit id="647179385f65989bb1991c21428c0fb0057583a7" translate="yes" xml:space="preserve">
          <source>At run-time, the declaratives procedure will be executed prior to the processing of the specified report group&amp;rsquo;s presentation; within the procedure you may take either of the following actions:</source>
          <target state="translated">実行時に、宣言型プロシージャは、指定されたレポートグループのプレゼンテーションの処理の前に実行されます。手順内では、次のいずれかのアクションを実行できます。</target>
        </trans-unit>
        <trans-unit id="01310ca02d6126e684ea6f952a4183e369fb93b9" translate="yes" xml:space="preserve">
          <source>At runtime, GnuCOBOL will attempt to locate and load any application dynamically-loadable libraries using from the directory in which the program executable was found or, if it wasn&amp;rsquo;t found there, using the &lt;code&gt;PATH&lt;/code&gt; environment variable. If these library files could be somewhere else, specify the directory path using this variable.</source>
          <target state="translated">実行時に、GnuCOBOLは、プログラム実行可能ファイルが見つかったディレクトリから、または見つからなかった場合は &lt;code&gt;PATH&lt;/code&gt; 環境変数を使用して、動的にロード可能なアプリケーションのライブラリを見つけてロードしようとします。これらのライブラリファイルが別の場所にある可能性がある場合は、この変数を使用してディレクトリパスを指定します。</target>
        </trans-unit>
        <trans-unit id="5f8a283974d95356738167d0faee952966ac8cf5" translate="yes" xml:space="preserve">
          <source>At runtime, GnuCOBOL will attempt to locate and load any application dynamically-loadable libraries using from the directory in which the program executable was found or, if it wasn&amp;rsquo;t found there, using the&lt;code&gt;PATH&lt;/code&gt;environment variable. If these library files could be somewhere else, specify the directory path using this variable.</source>
          <target state="translated">実行時に、GnuCOBOLは、プログラム実行可能ファイルが見つかったディレクトリから、またはそこに見つからなかった場合は &lt;code&gt;PATH&lt;/code&gt; 環境変数を使用して、アプリケーションの動的にロード可能なライブラリを見つけてロードしようとします。これらのライブラリファイルが別の場所にある可能性がある場合は、この変数を使用してディレクトリパスを指定します。</target>
        </trans-unit>
        <trans-unit id="69680062a5d35f9afe3998d8e2b8f54fac45f3f0" translate="yes" xml:space="preserve">
          <source>At the time the &lt;code&gt;SEARCH&lt;/code&gt; statement is executed, the current value of the search index data item will define the starting position in the table where the searching process will begin. Typically, one initializes that index to a value of 1 before starting the &lt;code&gt;SEARCH&lt;/code&gt; via &lt;code&gt;SET &lt;var&gt;search-index&lt;/var&gt; TO 1&lt;/code&gt;.</source>
          <target state="translated">当時 &lt;code&gt;SEARCH&lt;/code&gt; 文が実行され、検索インデックスのデータ項目の現在の値は、検索プロセスが開始されますテーブル内の開始位置を定義します。通常、 &lt;code&gt;SET &lt;var&gt;search-index&lt;/var&gt; TO 1&lt;/code&gt; &lt;var&gt;search-index&lt;/var&gt; TO 1を使用して &lt;code&gt;SEARCH&lt;/code&gt; を開始する前に、そのインデックスを値1に初期化します。</target>
        </trans-unit>
        <trans-unit id="37e1eae840e0c2a638d59f8b7735b08d5540b3e4" translate="yes" xml:space="preserve">
          <source>At the time the &lt;code&gt;UNSTRING&lt;/code&gt; statement begins execution, &lt;var&gt;identifier-7&lt;/var&gt; must have a value greater than 0.</source>
          <target state="translated">&lt;code&gt;UNSTRING&lt;/code&gt; ステートメントが実行を開始するとき、 &lt;var&gt;identifier-7&lt;/var&gt; は0より大きい値でなければなりません。</target>
        </trans-unit>
        <trans-unit id="35d00c7319a69497c5e9e19b0ab3f8ae51f105d6" translate="yes" xml:space="preserve">
          <source>At the time the&lt;code&gt;SEARCH&lt;/code&gt;statement is executed, the current value of the search index data item will define the starting position in the table where the searching process will begin. Typically, one initializes that index to a value of 1 before starting the&lt;code&gt;SEARCH&lt;/code&gt;via&lt;code&gt;SET &amp;lt;&lt;i&gt;search-index&lt;/i&gt;&amp;gt; TO 1&lt;/code&gt;</source>
          <target state="translated">当時 &lt;code&gt;SEARCH&lt;/code&gt; 文が実行され、検索インデックスのデータ項目の現在の値は、検索プロセスが開始されますテーブル内の開始位置を定義します。通常、 &lt;code&gt;SET &amp;lt;&lt;i&gt;search-index&lt;/i&gt;&amp;gt; TO 1&lt;/code&gt; &lt;i&gt;search-index&lt;/i&gt; &amp;gt; TO 1で &lt;code&gt;SEARCH&lt;/code&gt; を開始する前に、そのインデックスを値1に初期化します。&lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="ed45c44186dd9ae465a476d4332ba30e71a68719" translate="yes" xml:space="preserve">
          <source>At the time the&lt;code&gt;UNSTRING&lt;/code&gt;statement begins execution, &amp;lt;</source>
          <target state="translated">&lt;code&gt;UNSTRING&lt;/code&gt; ステートメントが実行を開始する時点で、&amp;lt;</target>
        </trans-unit>
        <trans-unit id="9d1f58c02dd35fe4d5f7ac2161db8990ad89caff" translate="yes" xml:space="preserve">
          <source>At the time this statement is executed, &amp;lt;</source>
          <target state="translated">このステートメントが実行されるとき、&amp;lt;</target>
        </trans-unit>
        <trans-unit id="55c475b22c4b316290db34999f18d64f0bacae09" translate="yes" xml:space="preserve">
          <source>At the time this statement is executed, &lt;var&gt;file-name-1&lt;/var&gt; must be open in either &lt;code&gt;INPUT&lt;/code&gt; or &lt;code&gt;I-O&lt;/code&gt; (see &lt;a href=&quot;#File-OPEN-Modes&quot;&gt;File OPEN Modes&lt;/a&gt;) mode.</source>
          <target state="translated">このステートメントが実行されるとき、 &lt;var&gt;file-name-1&lt;/var&gt; は &lt;code&gt;INPUT&lt;/code&gt; または &lt;code&gt;I-O&lt;/code&gt; （&lt;a href=&quot;#File-OPEN-Modes&quot;&gt;ファイルOPENモードを&lt;/a&gt;参照）モードで開かれている必要があります。</target>
        </trans-unit>
        <trans-unit id="606af63484a4ca0821092a5d382caa79df9a9798" translate="yes" xml:space="preserve">
          <source>Attempt to duplicate key value</source>
          <target state="translated">キー値の重複を試みる</target>
        </trans-unit>
        <trans-unit id="0f2be3e5f21db8b67415235941f1f245af15e343" translate="yes" xml:space="preserve">
          <source>Attribute-Specification</source>
          <target state="translated">Attribute-Specification</target>
        </trans-unit>
        <trans-unit id="ea2809bc9bb1b5b06bf996a1198fef6b345d333c" translate="yes" xml:space="preserve">
          <source>Attribute-Specifications</source>
          <target state="translated">Attribute-Specifications</target>
        </trans-unit>
        <trans-unit id="678a0be9e390f7d62bca8435a3ee764c8865eaed" translate="yes" xml:space="preserve">
          <source>Automatically causing suppressed detail group-indicate fields to re-appear should a detail group be printed on a new page.</source>
          <target state="translated">新しいページで詳細グループが印刷された場合に、抑制されていた詳細グループを示すフィールドが自動的に再表示されるようになりました。</target>
        </trans-unit>
        <trans-unit id="f2a17b9929690e89a26864251426fe169ae08b7e" translate="yes" xml:space="preserve">
          <source>Automatically generating crossfoot totals in detail groups. These would be sums of two or more values presented in the detail group.</source>
          <target state="translated">詳細グループ内のクロスフットの合計を自動的に生成します。これらは、詳細グループに表示されている2つ以上の値の合計になります。</target>
        </trans-unit>
        <trans-unit id="bb8ed6d8eda696a34ea023ee1af0984ead161cd5" translate="yes" xml:space="preserve">
          <source>Automatically generating subtotals in control and/or report footings, summarizing values of any fields in the detail group.</source>
          <target state="translated">制御および/またはレポートのフッテイングで小計を自動的に生成し、詳細グループ内の任意のフィールドの値を要約します。</target>
        </trans-unit>
        <trans-unit id="60128589a15735e233953a12911eaaf135fa1bba" translate="yes" xml:space="preserve">
          <source>Automatically suppressing the presentation of one or more fields of data from the detail group when the value(s) of the field(s) duplicate those of the previously generated detail group. Fields such as these are referred to as group-indicate fields.</source>
          <target state="translated">フィールドの値が以前に生成された詳細グループの値と重複している場合に、詳細グループからのデータの1つ以上のフィールドの表示を自動的に抑制します。このようなフィールドは、グループを示すフィールドと呼ばれています。</target>
        </trans-unit>
        <trans-unit id="15e6d5aff64c44c6c09e58d6ca500c39b31497c6" translate="yes" xml:space="preserve">
          <source>Avoid the use of level 77 data items in new programs. Once (1968 and before) there were valid reasons for creating level-77 data items, but since the 1974 ANSI standard of COBOL there really hasn&amp;rsquo;t been any reason why an elementary level-01 data item couldn&amp;rsquo;t have been used instead of a level-77 item.</source>
          <target state="translated">新しいプログラムでレベル77のデータ項目を使用しないでください。かつて（1968年以前）レベル77データ項目を作成する正当な理由がありましたが、1974年のCOBOLのANSI標準以来、基本レベル01データ項目を代わりに使用できなかった理由は実際にはありませんでしたレベル77のアイテム。</target>
        </trans-unit>
        <trans-unit id="ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec" translate="yes" xml:space="preserve">
          <source>B</source>
          <target state="translated">B</target>
        </trans-unit>
        <trans-unit id="1c1352f1426459c3d08f8eff48d2f3c2579dd8a8" translate="yes" xml:space="preserve">
          <source>B.cbl</source>
          <target state="translated">B.cbl</target>
        </trans-unit>
        <trans-unit id="3da6b74c184d77268e852ed014f324e193e614bb" translate="yes" xml:space="preserve">
          <source>BACKGROUND-COLOR Attribute Syntax</source>
          <target state="translated">BACKGROUND-COLOR 属性構文</target>
        </trans-unit>
        <trans-unit id="f411ede3baea24605588cbb252fe62af571daa22" translate="yes" xml:space="preserve">
          <source>BACKGROUND-COLOR, BACKGROUND-COLOUR, B-AND, BASED, BEEP, BEFORE, BELL, BINARY, BINARY-CHAR, BINARY-C-LONG, BINARY-DOUBLE, BINARY-INT, BINARY-LONG, BINARY-LONG-LONG, BINARY-SHORT, BIT, BLANK, BLINK, BLOCK, B-NOT, BOOLEAN, BOOLEAN-OF-INTEGER, B-OR, BOTTOM, B-XOR, BY, BYTE-LENGTH</source>
          <target state="translated">BACKGROUND-COLOR、BACKGROUND-COLOUR、B-AND、BASED、BEEP、BEFORE、BELL、BINARY、BINARY-CHAR、BINARY-C-LONG、BINARY-DOUBLE、BINARY-INT、BINARY-LONG、BINARY-LONG-LONG、BINARY-SHORT、BIT、BLANK、BLINK、BLOCK、B-NOT、BOOLEAN、BOOLEAN-OF-INTEGER、B-OR、BOTTOM、B-XOR、BY、BY、BYTE-LENGTH</target>
        </trans-unit>
        <trans-unit id="7223a83910d26a564feef68e00ad2df02de25d01" translate="yes" xml:space="preserve">
          <source>BACKGROUND-COLOR, BACKGROUND-COLOUR, BACKGROUND-HIGH, BACKGROUND-LOW, BACKGROUND-STANDARD, B-AND, BAR, BASED, BEEP, BEFORE, BELL, BINARY-CHAR, BINARY-C-LONG, BINARY-DOUBLE, BINARY-INT, BINARY-LONG-LONG, BINARY-LONG, BINARY-SEQUENTIAL, BINARY-SHORT, BINARY, BITMAP-END, BITMAP-HANDLE, BITMAP-NUMBER, BITMAP-START, BITMAP-TIMER, BITMAP-TRAILING, BITMAP-TRANSPARENT-COLOR, BITMAP-WIDTH, BITMAP, BIT, BLANK, BLINK, BLOCK, B-NOT, BOOLEAN, BOOLEAN-OF-INTEGER, B-OR, BOTTOM, BOXED, BOX, BUSY, BUTTONS, B-XOR, BYTE-LENGTH, BY</source>
          <target state="translated">BACKGROUND-COLOR、BACKGROUND-COLOUR、BACKGROUND-HIGH、BACKGROUND-LOW、BACKGROUND-STANDARD、B-ANDARD、BAR、BAR、BASED、BEEP、BEFORE、BELL、BINARY-CHAR、BINARY-C-LONG、BINARY-DOUBLE、BINARY-INT、BINARY-LONG、BINARY-LONG、BINARY-SEQUENTIAL、BINARY-SHORT、BINARY。BITMAP-END、BITMAP-HANDLE、BITMAP-NUMBER、BITMAP-START、BITMAP-TIMER、BITMAP-TRAILING、BITMAP-TRANSPARENT-COLOR、BITMAP-WIDTH、BITMAP、BIT、BLANK、BLINK、BLOCK、B-NOT、BOOLEAN、BOOLEAN-OF-INTEGER、B-OR、BOTTOM、BOXED、BOX、BUSY、BUTTONS、B-XOR、BYTE-LENGTH、BY</target>
        </trans-unit>
        <trans-unit id="246940a5ee7e2cc2179d2d28728ee99881870940" translate="yes" xml:space="preserve">
          <source>BASED Attribute Syntax</source>
          <target state="translated">BASED属性の構文</target>
        </trans-unit>
        <trans-unit id="25363e98eb50cc813f0d3eff743f34908419b557" translate="yes" xml:space="preserve">
          <source>BBBBBB</source>
          <target state="translated">BBBBBB</target>
        </trans-unit>
        <trans-unit id="8ea177ae44348802ce4e93e2c7d006f279b4d490" translate="yes" xml:space="preserve">
          <source>BBCCCCCCDD</source>
          <target state="translated">BBCCCCCCDD</target>
        </trans-unit>
        <trans-unit id="3e18c13faa05badb60aaead205679019d4320361" translate="yes" xml:space="preserve">
          <source>BCDE</source>
          <target state="translated">BCDE</target>
        </trans-unit>
        <trans-unit id="70ba3961bcb1e582a85eb1b34470c7230cbc539c" translate="yes" xml:space="preserve">
          <source>BEEP Attribute Syntax</source>
          <target state="translated">BEEP属性の構文</target>
        </trans-unit>
        <trans-unit id="d558960d76fe706c5df114072aeb815b11efb49a" translate="yes" xml:space="preserve">
          <source>BELL Attribute Syntax</source>
          <target state="translated">BELL 属性構文</target>
        </trans-unit>
        <trans-unit id="57c09c231f43d038a40874ee57c32eb4b4d4358e" translate="yes" xml:space="preserve">
          <source>BINARY-C-LONG SIGNED</source>
          <target state="translated">バイナリーCロング サイン入り</target>
        </trans-unit>
        <trans-unit id="dfad4a92eb32368ec9cfca9b772e8872465ce772" translate="yes" xml:space="preserve">
          <source>BINARY-C-LONG [ SIGNED ]</source>
          <target state="translated">BINARY-C-LONG[サイン入り ]</target>
        </trans-unit>
        <trans-unit id="c532cb84fc65eabdea9215c7926d16c9453a0660" translate="yes" xml:space="preserve">
          <source>BINARY-CHAR SIGNED</source>
          <target state="translated">バイナリーチャー サイン入り</target>
        </trans-unit>
        <trans-unit id="145ed4577cd51da9f6c530926d8034460db40ec1" translate="yes" xml:space="preserve">
          <source>BINARY-CHAR UNSIGNED</source>
          <target state="translated">バイナリ文字未設定</target>
        </trans-unit>
        <trans-unit id="ac9795d79f19daad12eea06df82b53717e890134" translate="yes" xml:space="preserve">
          <source>BINARY-CHAR [ SIGNED ]</source>
          <target state="translated">BINARY-CHAR[サイン入り ]</target>
        </trans-unit>
        <trans-unit id="934c091fd7ba5885d6ae1783ee5da221368bbd09" translate="yes" xml:space="preserve">
          <source>BINARY-CHAR [ UNSIGNED ]</source>
          <target state="translated">BINARY-CHAR[UNSIGNED]</target>
        </trans-unit>
        <trans-unit id="aafe074f1cc1d847beb11978954e0ba87923a323" translate="yes" xml:space="preserve">
          <source>BINARY-DOUBLE SIGNED  BINARY-LONG-LONG</source>
          <target state="translated">バイナリーダブルサインバイナリーロングロング</target>
        </trans-unit>
        <trans-unit id="84372cccccc31245e954c74c8262dc88bbd76c44" translate="yes" xml:space="preserve">
          <source>BINARY-DOUBLE UNSIGNED</source>
          <target state="translated">バイナリーダブル無署名</target>
        </trans-unit>
        <trans-unit id="c9bdcca4ee8cbb493a3622ef00a2e4eeba9baa54" translate="yes" xml:space="preserve">
          <source>BINARY-DOUBLE [ SIGNED ]  BINARY-LONG-LONG</source>
          <target state="translated">BINARY-DOUBLE[サイン入り]BINARY-LONG-LONG-LONG</target>
        </trans-unit>
        <trans-unit id="075818c3573fccee0500d38f830276c42183e050" translate="yes" xml:space="preserve">
          <source>BINARY-DOUBLE [ UNSIGNED ]</source>
          <target state="translated">バイナリーダブル[UNSIGNED]</target>
        </trans-unit>
        <trans-unit id="64ca5c23f684a3e2bf961756a5622b8f8b0fd166" translate="yes" xml:space="preserve">
          <source>BINARY-LONG SIGNED  BINARY-INT</source>
          <target state="translated">バイナリーロングサインバイナリーイント</target>
        </trans-unit>
        <trans-unit id="a2d5664e7380adc57231aa0207eda3f7890cf78b" translate="yes" xml:space="preserve">
          <source>BINARY-LONG SIGNED &amp;mdash; An occurrence of this register exists for each report defined in the program (via an&lt;code&gt;RD&lt;/code&gt;(see &lt;a href=&quot;#REPORT-SECTION&quot;&gt;REPORT SECTION&lt;/a&gt;)). If there are multiple reports, any explicit references to this register not made in the report section will require qualification &lt;code&gt;OF report-name&lt;/code&gt;. The value of this register will be the current logical line number on the current page. The value of this register cannot be modified.</source>
          <target state="translated">BINARY-LONG SIGNED &amp;mdash;このレジスタの出現は、プログラムで定義された各レポートに対して存在します（ &lt;code&gt;RD&lt;/code&gt; を介して（&lt;a href=&quot;#REPORT-SECTION&quot;&gt;レポートセクションを&lt;/a&gt;参照））。複数のレポートがある場合、レポートセクションで行われていないこのレジスタへの明示的な参照には、 &lt;code&gt;OF report-name&lt;/code&gt; の修飾が必要です。このレジスタの値は、現在のページの現在の論理行番号になります。このレジスタの値は変更できません。</target>
        </trans-unit>
        <trans-unit id="96d54aa9c6bdc14a259e2115e9bbbc98d0ec7b76" translate="yes" xml:space="preserve">
          <source>BINARY-LONG SIGNED &amp;mdash; An occurrence of this register exists for each report having an&lt;code&gt;RD&lt;/code&gt;(see &lt;a href=&quot;#REPORT-SECTION&quot;&gt;REPORT SECTION&lt;/a&gt;). If there are multiple such reports, any explicit references to this register not made in the report section will require qualification (&lt;code&gt;OF report-name&lt;/code&gt;. The value of this register will be the current report page number. The value of this register cannot be modified.</source>
          <target state="translated">BINARY-LONG SIGNED &amp;mdash;このレジスタは、 &lt;code&gt;RD&lt;/code&gt; を持つレポートごとに存在します（&lt;a href=&quot;#REPORT-SECTION&quot;&gt;REPORT SECTIONを&lt;/a&gt;参照）。そのようなレポートが複数ある場合、レポートセクションで行われていないこのレジスタへの明示的な参照には、修飾（ &lt;code&gt;OF report-name&lt;/code&gt; )が必要です。このレジスタの値は、現在のレポートページ番号になります。このレジスタの値は変更できません。</target>
        </trans-unit>
        <trans-unit id="301ddb41243ae8a1bb0469ad0facce57428c71d1" translate="yes" xml:space="preserve">
          <source>BINARY-LONG SIGNED &amp;mdash; An occurrence of this register exists for each selected file having a&lt;code&gt;LINAGE&lt;/code&gt;(see &lt;a href=&quot;#File_002fSort_002dDescription&quot;&gt;File/Sort-Description&lt;/a&gt;) clause. If there are multiple files whose file descriptions have&lt;code&gt;LINAGE&lt;/code&gt;clauses, any explicit references to this register will require qualification (using&lt;code&gt;OF file-name&lt;/code&gt;. The value of this register will be the current logical line number within the page body. The value of this register cannot be modified.</source>
          <target state="translated">BINARY-LONG SIGNED &amp;mdash;このレジスタは、 &lt;code&gt;LINAGE&lt;/code&gt; （&lt;a href=&quot;#File_002fSort_002dDescription&quot;&gt;File / Sort-Descriptionを&lt;/a&gt;参照）句を持つ選択されたファイルごとに存在します。ファイルの説明に &lt;code&gt;LINAGE&lt;/code&gt; 句が含まれるファイルが複数ある場合、このレジスターへの明示的な参照には修飾が必要になります（ &lt;code&gt;OF file-name&lt;/code&gt; を使用）。このレジスターの値は、ページ本体内の現在の論理行番号になります。このレジスターの値変更できません。</target>
        </trans-unit>
        <trans-unit id="fa4246a0836a99373296efaa9aeb30a14c387022" translate="yes" xml:space="preserve">
          <source>BINARY-LONG SIGNED &amp;mdash; This register contains the number of arguments passed to a subroutine &amp;mdash; the same value that would be returned by the&lt;code&gt;C$NARG&lt;/code&gt;built-in system subroutine (see &lt;a href=&quot;#C_0024NARG&quot;&gt;C$NARG&lt;/a&gt;). Its value will be zero when referenced in a main program. This register, when referenced from within a user-defined function, returns a value of one (1) if the function has any number of arguments and a zero if it has no arguments.</source>
          <target state="translated">BINARY-LONG SIGNED &amp;mdash;このレジスタには、サブルーチンに渡される引数の数（ &lt;code&gt;C$NARG&lt;/code&gt; 組み込みシステムサブルーチンによって返されるのと同じ値）が含まれます（&lt;a href=&quot;#C_0024NARG&quot;&gt;C $ NARGを&lt;/a&gt;参照）。メインプログラムで参照されると、その値はゼロになります。このレジスターは、ユーザー定義関数内から参照されると、関数に任意の数の引数がある場合は1の値を返し、引数がない場合は0を返します。</target>
        </trans-unit>
        <trans-unit id="6b365a3917f2c77fadaebe0e884f83432c6fa091" translate="yes" xml:space="preserve">
          <source>BINARY-LONG SIGNED &amp;mdash; This register is used to report the success/fail status of a&lt;code&gt;RELEASE&lt;/code&gt;(see &lt;a href=&quot;#RELEASE&quot;&gt;RELEASE&lt;/a&gt;) or&lt;code&gt;RETURN&lt;/code&gt;(see &lt;a href=&quot;#RETURN&quot;&gt;RETURN&lt;/a&gt;) statement. A value of 0 is reported on success. A value of 16 denotes failure. An&lt;code&gt;AT END&lt;/code&gt;(see &lt;a href=&quot;#AT-END-_002b-NOT-AT-END&quot;&gt;AT END + NOT AT END&lt;/a&gt;) condition on a&lt;code&gt;RETURN&lt;/code&gt;is not considered a failure.</source>
          <target state="translated">BINARY-LONG SIGNED &amp;mdash;このレジスタは、 &lt;code&gt;RELEASE&lt;/code&gt; （&lt;a href=&quot;#RELEASE&quot;&gt;RELEASEを&lt;/a&gt;参照）または &lt;code&gt;RETURN&lt;/code&gt; （&lt;a href=&quot;#RETURN&quot;&gt;RETURNを&lt;/a&gt;参照）ステートメントの成功/失敗ステータスを報告するために使用されます。成功すると、値0が報告されます。値16は失敗を示します。 &lt;code&gt;RETURN&lt;/code&gt; の &lt;code&gt;AT END&lt;/code&gt; （&lt;a href=&quot;#AT-END-_002b-NOT-AT-END&quot;&gt;AT END + NOT AT ENDを&lt;/a&gt;参照）条件は、失敗とは見なされません。</target>
        </trans-unit>
        <trans-unit id="281502201847865cdea73cf4e5a9e802f6a160de" translate="yes" xml:space="preserve">
          <source>BINARY-LONG SIGNED &amp;mdash; This register provides a numeric data item into which a subroutine may&lt;code&gt;MOVE&lt;/code&gt;(see &lt;a href=&quot;#MOVE&quot;&gt;MOVE&lt;/a&gt;) a value (which will then be available to the calling program) prior to transferring control back to the program that called it, or into which a main program may&lt;code&gt;MOVE&lt;/code&gt;a value before returning control to the operating system. Many built-in subroutines will return a value using this register. These values are &amp;mdash; by convention &amp;mdash; used to signify success (usually with a value of 0) or failure (usually with a non-zero value) of the process the program was attempting to perform. This register may also be modified by a subprogram as a result of that subprogram&amp;rsquo;s use of the&lt;code&gt;RETURNING&lt;/code&gt;(see &lt;a href=&quot;#PROCEDURE-DIVISION-RETURNING&quot;&gt;PROCEDURE DIVISION RETURNING&lt;/a&gt;) clause.</source>
          <target state="translated">BINARY-LONG SIGNED -このレジスタは、サブルーチンができるその中に数値データ項目提供 &lt;code&gt;MOVE&lt;/code&gt; （参照&lt;a href=&quot;#MOVE&quot;&gt;MOVEを&lt;/a&gt;前にそれを呼び出しプログラムにコントロールバックを転送する、またはその中に（その後、呼び出しプログラムに利用可能になる））の値をメインプログラムはあり &lt;code&gt;MOVE&lt;/code&gt; オペレーティングシステムに制御を戻す前に値を。多くの組み込みサブルーチンは、このレジスタを使用して値を返します。これらの値は、慣例により、プログラムが実行しようとしたプロセスの成功（通常は値0）または失敗（通常はゼロ以外の値）を示すために使用されます。このレジスタは、サブプログラムが &lt;code&gt;RETURNING&lt;/code&gt; を使用した結果として、サブプログラムによって変更される場合もあります（「&lt;a href=&quot;#PROCEDURE-DIVISION-RETURNING&quot;&gt;手続き部RETURNING&lt;/a&gt;」を参照）。）句。</target>
        </trans-unit>
        <trans-unit id="0b2d35057ea047bd48609def2f5e53596b49b447" translate="yes" xml:space="preserve">
          <source>BINARY-LONG UNSIGNED</source>
          <target state="translated">バイナリロング無署名</target>
        </trans-unit>
        <trans-unit id="380ef2588f745d7b38fd6ca660ff0d01e64689d1" translate="yes" xml:space="preserve">
          <source>BINARY-LONG [ SIGNED ]  BINARY-INT</source>
          <target state="translated">BINARY-LONG[SIGNED]BINARY-INT</target>
        </trans-unit>
        <trans-unit id="f2d6edbc89733d33e22775d6d14c2d8e488258bc" translate="yes" xml:space="preserve">
          <source>BINARY-LONG [ UNSIGNED ]</source>
          <target state="translated">BINARY-LONG[UNSIGNED][バイナリロング</target>
        </trans-unit>
        <trans-unit id="ec492d0da770779cdab338b865b0f56c65f643c6" translate="yes" xml:space="preserve">
          <source>BINARY-SHORT SIGNED</source>
          <target state="translated">バイナリーショート サイン入り</target>
        </trans-unit>
        <trans-unit id="1a247fc8db1d6a85ae62f8d62c68a2ff2ea54bc0" translate="yes" xml:space="preserve">
          <source>BINARY-SHORT UNSIGNED</source>
          <target state="translated">バイナリーショート無署名</target>
        </trans-unit>
        <trans-unit id="27072ddddb8609d2e7b2aea71b8b6039698008f3" translate="yes" xml:space="preserve">
          <source>BINARY-SHORT [ SIGNED ]</source>
          <target state="translated">BINARY-SHORT[サイン入り]</target>
        </trans-unit>
        <trans-unit id="7cac1a19a032ecff3d83d34ca1abdccac4a7484b" translate="yes" xml:space="preserve">
          <source>BINARY-SHORT [ UNSIGNED ]</source>
          <target state="translated">BINARY-SHORT[UNSIGNED][バイナリショート</target>
        </trans-unit>
        <trans-unit id="4d7c905147ff436c20b8a277191d3099e9cef7d7" translate="yes" xml:space="preserve">
          <source>BLANK Attribute Syntax</source>
          <target state="translated">BLANK 属性の構文</target>
        </trans-unit>
        <trans-unit id="1c83616118343aeebed8244f237c3eef48c560f0" translate="yes" xml:space="preserve">
          <source>BLANK-WHEN-ZERO Attribute Syntax</source>
          <target state="translated">BLANK-WHEN-ZERO 属性構文</target>
        </trans-unit>
        <trans-unit id="11a676bbdca1e916c6978cc077c4ce3b75f26a38" translate="yes" xml:space="preserve">
          <source>BLINK Attribute Syntax</source>
          <target state="translated">BLINK属性の構文</target>
        </trans-unit>
        <trans-unit id="5c58545de8dfcbd18c96c78f3334701ae9756b53" translate="yes" xml:space="preserve">
          <source>BOOLEAN-OF-INTEGER Function Syntax</source>
          <target state="translated">BOOLEAN-OF-INTEGER 関数構文</target>
        </trans-unit>
        <trans-unit id="f98551917c7b41c079bdb715caa142efe39bc871" translate="yes" xml:space="preserve">
          <source>BYTE-LENGTH Function Syntax</source>
          <target state="translated">BYTE-LENGTH 関数構文</target>
        </trans-unit>
        <trans-unit id="f71c397089e295a1cd92071728264fe12797554c" translate="yes" xml:space="preserve">
          <source>Bad character</source>
          <target state="translated">性格の悪さ</target>
        </trans-unit>
        <trans-unit id="732d1a64c87c763a8928b8d0c8ae7ef0e320e26f" translate="yes" xml:space="preserve">
          <source>Be defined in the procedure division in non-decreasing sequence of that numeric component.</source>
          <target state="translated">手続きの分割では、その数値成分の非減順に定義されていること。</target>
        </trans-unit>
        <trans-unit id="7140cf29652f35a7197985b5d583b99204a8072c" translate="yes" xml:space="preserve">
          <source>Because of its inherent readability, I would MUCH rather be handed an assignment to make significant changes to a COBOL program about which I know nothing than to be asked to do the same with a C, C++, C# or Java program.</source>
          <target state="translated">その本質的な可読性のため、C、C++、C#、Javaプログラムで同じことをするように求められるよりも、何も知らないCOBOLプログラムを大幅に変更するような課題を与えられた方がはるかにマシだ。</target>
        </trans-unit>
        <trans-unit id="8a2664777f8936ef9bf539016f7515d4c9a875f1" translate="yes" xml:space="preserve">
          <source>Because of the catastrophic effect this statement has on program readability and therefore the programmer&amp;rsquo;s ability to debug problems with program logic, the use of &lt;code&gt;ALTER&lt;/code&gt; in new programs is &lt;strong&gt;STRONGLY&lt;/strong&gt; discouraged.</source>
          <target state="translated">このステートメントはプログラムの可読性に壊滅的な影響を及ぼし、したがってプログラマーがプログラムロジックの問題をデバッグする能力に影響を与えるため、新しいプログラムで &lt;code&gt;ALTER&lt;/code&gt; を使用することは&lt;strong&gt;強く&lt;/strong&gt;お勧めしません。</target>
        </trans-unit>
        <trans-unit id="d13e0ce15866e81127740db57e67454e615e094a" translate="yes" xml:space="preserve">
          <source>Because of the catastrophic effect this statement has on program readability and therefore the programmer&amp;rsquo;s ability to debug problems with program logic, the use of&lt;code&gt;ALTER&lt;/code&gt;in new programs is &lt;strong&gt;STRONGLY&lt;/strong&gt; discouraged.</source>
          <target state="translated">このステートメントはプログラムの可読性に悪影響を与えるため、プログラマーがプログラムロジックの問題をデバッグする能力に悪影響を与えるため、新しいプログラムでの &lt;code&gt;ALTER&lt;/code&gt; の使用は&lt;strong&gt;強く&lt;/strong&gt;お勧めしません。</target>
        </trans-unit>
        <trans-unit id="7c133602d991f626c8a6f0020426ea2978169f18" translate="yes" xml:space="preserve">
          <source>Because of the sort, the most-frequently changing value of the three sort keys will be that of &lt;code&gt;Sorted-Register-Number&lt;/code&gt;. This essentially defines the &amp;ldquo;detail&amp;rdquo; level of the report.</source>
          <target state="translated">ソートのため、3つのソートキーの最も頻繁に変更される値は、 &lt;code&gt;Sorted-Register-Number&lt;/code&gt; の値になります。これは基本的に、レポートの「詳細」レベルを定義します。</target>
        </trans-unit>
        <trans-unit id="3897568192e57c70d682a4284b7e70387e8fd192" translate="yes" xml:space="preserve">
          <source>Because of the sort, the most-frequently changing value of the three sort keys will be that of Sorted-Register-Number. This essentially defines the &quot;detail&quot; level of the report.</source>
          <target state="translated">ソートのため、3つのソート・キーのうち最も頻繁に変更される値は、Sorted-Register-Numberの値になります。これは基本的にレポートの「詳細」レベルを定義します。</target>
        </trans-unit>
        <trans-unit id="8eae3d3b27b7db953038339724b71016c328c79e" translate="yes" xml:space="preserve">
          <source>Because this is the way the GnuCOBOL RWCS works, in order to design an RWCS-generated report you&amp;rsquo;ll need to know answers to the following questions:</source>
          <target state="translated">これはGnuCOBOL RWCSが機能する方法であるため、RWCSで生成されたレポートを設計するには、次の質問に対する答えを知る必要があります。</target>
        </trans-unit>
        <trans-unit id="d34df28c2dd055914810b70b828e5babc98622f8" translate="yes" xml:space="preserve">
          <source>Before continuing, it&amp;rsquo;s worth making the point that we&amp;rsquo;re</source>
          <target state="translated">続行する前に、私たちが</target>
        </trans-unit>
        <trans-unit id="1f29deec2a6a03120562a08602ed9bb23f78df63" translate="yes" xml:space="preserve">
          <source>Before continuing, it&amp;rsquo;s worth making the point that we&amp;rsquo;re NOT talking about astronomical performance degradations here. Today&amp;rsquo;s computers are FAST, and a user sitting at the keyboard, running a GnuCOBOL program is unlikely to notice. BUT &amp;hellip; if you have a GnuCOBOL program that has to process large amounts of data, performing some significant &quot;number crunching&quot; against that data as it goes, the impact of truncation could become noticeable.</source>
          <target state="translated">先に進む前に、ここでは天文学的なパフォーマンスの低下について話していないことを指摘しておく価値があります。今日のコンピューターは高速で、キーボードに座ってGnuCOBOLプログラムを実行しているユーザーは気付かないでしょう。BUT&amp;hellip;大量のデータを処理する必要があるGnuCOBOLプログラムがあり、そのデータに対していくらかの重要な「数値計算」を実行している場合、切り捨ての影響が顕著になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="cd82bd1afe40ba0df821eea5f523d006f0a112ee" translate="yes" xml:space="preserve">
          <source>Big-Endian</source>
          <target state="translated">Big-Endian</target>
        </trans-unit>
        <trans-unit id="df920c2aca56c9814330d567bccea8b54d2026db" translate="yes" xml:space="preserve">
          <source>Big-endian data allocation calls for the bytes that comprise a binary item to be allocated such that the least-significant byte is the right-most byte. For example, a four-byte binary item having a value of decimal 20 would be big-endian allocated as 00000014 (shown in hexadecimal notation).</source>
          <target state="translated">ビッグエンディアンデータの割り当てでは、バイナリ項目を構成するバイトを、最も重要度の低いバイトが右端のバイトになるように割り当てます。例えば、10 進数 20 の値を持つ 4 バイトのバイナリ項目は、ビッグエンディアンで 00000014 として割り当てられます(16 進数表記)。</target>
        </trans-unit>
        <trans-unit id="ef0811bb71c6ad0b2245ae48055cbd19d7fb2a0a" translate="yes" xml:space="preserve">
          <source>Binary data (integer or floating-point) can be stored in either a</source>
          <target state="translated">バイナリデータ(整数または浮動小数点)は、次のいずれかに格納することができます。</target>
        </trans-unit>
        <trans-unit id="5c401fb3e0d3ef267f587c1bea177bd29f39c4c6" translate="yes" xml:space="preserve">
          <source>Binary using B#0 or 1.</source>
          <target state="translated">B#0または1を使用したバイナリ。</target>
        </trans-unit>
        <trans-unit id="53bda16204ff0e069875d05371a4c9bab05ffb42" translate="yes" xml:space="preserve">
          <source>Binary32</source>
          <target state="translated">Binary32</target>
        </trans-unit>
        <trans-unit id="3269560b6b91452a03dc3c6642eeab4852843818" translate="yes" xml:space="preserve">
          <source>Binary64</source>
          <target state="translated">Binary64</target>
        </trans-unit>
        <trans-unit id="e8835c712451999e0a892ac12f5715c4350423b1" translate="yes" xml:space="preserve">
          <source>Bit</source>
          <target state="translated">Bit</target>
        </trans-unit>
        <trans-unit id="dc1854a1d1a2eca13a52186e1806592639416b71" translate="yes" xml:space="preserve">
          <source>Black: COB-COLOR-BLACK</source>
          <target state="translated">ブラックです。COB-COLOR-BLACK</target>
        </trans-unit>
        <trans-unit id="79a404b912bfc8636e47c79e8ce78b322899dc9c" translate="yes" xml:space="preserve">
          <source>Blank Lines</source>
          <target state="translated">空白線</target>
        </trans-unit>
        <trans-unit id="9f92663ab15aab9702f05ad8437e93e242427aeb" translate="yes" xml:space="preserve">
          <source>Blanked-out areas will have their foreground and background colors set to the attributes of the field containing the &lt;code&gt;BLANK&lt;/code&gt; clause.</source>
          <target state="translated">空白の領域では、前景色と背景色が &lt;code&gt;BLANK&lt;/code&gt; 句を含むフィールドの属性に設定されます。</target>
        </trans-unit>
        <trans-unit id="8b3247dd5ed6f1b06af04402591e168b57875808" translate="yes" xml:space="preserve">
          <source>Blanked-out areas will have their foreground and background colors set to the attributes of the field containing the&lt;code&gt;BLANK&lt;/code&gt;clause.</source>
          <target state="translated">空白の領域では、前景色と背景色が &lt;code&gt;BLANK&lt;/code&gt; 句を含むフィールドの属性に設定されます。</target>
        </trans-unit>
        <trans-unit id="db50375354d4d4be17c08fff5dc056bcdd3e73ba" translate="yes" xml:space="preserve">
          <source>Blinking</source>
          <target state="translated">Blinking</target>
        </trans-unit>
        <trans-unit id="d3c04e9819f277a93d8553958c2e891397695a43" translate="yes" xml:space="preserve">
          <source>Blue: COB-COLOR-BLUE</source>
          <target state="translated">ブルーです。COB-COLOR-BLUE</target>
        </trans-unit>
        <trans-unit id="4d776735c23da73cf905876ea92e8afe69363017" translate="yes" xml:space="preserve">
          <source>Body Area, but no line of a control footing report group is allowed past the line number specified by &lt;code&gt;FOOTING&lt;/code&gt;</source>
          <target state="translated">ボディエリア。ただし、コントロールフーチングレポートグループの行は、 &lt;code&gt;FOOTING&lt;/code&gt; で指定された行番号を超えることはできません。</target>
        </trans-unit>
        <trans-unit id="94345820b53050a7872628cb3026d65358a65609" translate="yes" xml:space="preserve">
          <source>Body Area, but no line of a control footing report group is allowed past the line number specified by&lt;code&gt;FOOTING&lt;/code&gt;</source>
          <target state="translated">本体領域。ただし、 &lt;code&gt;FOOTING&lt;/code&gt; で指定された行番号を超えると、制御脚書き報告集団の行は許可されません。</target>
        </trans-unit>
        <trans-unit id="561d7ca0d5693d0aa781a91d0b89c690be9c5ed9" translate="yes" xml:space="preserve">
          <source>Body Area, but no line of a control heading is allowed past the line number specified by &lt;code&gt;LAST CONTROL HEADING&lt;/code&gt;</source>
          <target state="translated">本体領域。ただし、制御見出しの行は、 &lt;code&gt;LAST CONTROL HEADING&lt;/code&gt; 指定された行番号を超えることはできません。</target>
        </trans-unit>
        <trans-unit id="23009096f02f5db9c5d67dfbf5d7e0d034a25a39" translate="yes" xml:space="preserve">
          <source>Body Area, but no line of a control heading is allowed past the line number specified by&lt;code&gt;LAST CONTROL HEADING&lt;/code&gt;</source>
          <target state="translated">本文領域。ただし、 &lt;code&gt;LAST CONTROL HEADING&lt;/code&gt; で指定された行番号を超えて、コントロール見出しの行は許可されません。</target>
        </trans-unit>
        <trans-unit id="1a89ece30412ad43312c514ddfcd5b68224c32ff" translate="yes" xml:space="preserve">
          <source>Body Area, but no line of a detail report group is allowed past the line number specified by &lt;code&gt;LAST DETAIL&lt;/code&gt;</source>
          <target state="translated">本文領域。ただし、詳細レポートグループの行は、 &lt;code&gt;LAST DETAIL&lt;/code&gt; 指定された行番号を超えることはできません。</target>
        </trans-unit>
        <trans-unit id="a6710b289a308e35e20a48dde80be658f2115922" translate="yes" xml:space="preserve">
          <source>Body Area, but no line of a detail report group is allowed past the line number specified by&lt;code&gt;LAST DETAIL&lt;/code&gt;</source>
          <target state="translated">ボディエリア。ただし、詳細レポートグループの行は、 &lt;code&gt;LAST DETAIL&lt;/code&gt; で指定された行番号を超えることはできません。</target>
        </trans-unit>
        <trans-unit id="864a0764d48c2f2a55e0ef38685a75b5ca64fc8b" translate="yes" xml:space="preserve">
          <source>Boolean Literals (Hexadecimal) &lt;code&gt;BX&quot;&lt;var&gt; hex character &lt;/var&gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">ブールリテラル（16進数） &lt;code&gt;BX&quot;&lt;var&gt; hex character &lt;/var&gt;&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2652dcbd781b3a10581922ac9138972dd667fabf" translate="yes" xml:space="preserve">
          <source>Boolean Literals (Standard) &lt;code&gt;B&quot;&lt;var&gt; character &lt;/var&gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">ブールリテラル（標準） &lt;code&gt;B&quot;&lt;var&gt; character &lt;/var&gt;&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8bc1dc3e246465501e090e39547e5b3b3bf59d05" translate="yes" xml:space="preserve">
          <source>Both &amp;lt;</source>
          <target state="translated">両方&amp;lt;</target>
        </trans-unit>
        <trans-unit id="61d6dc5ef4ae4ba16e643582933f104baa1739f1" translate="yes" xml:space="preserve">
          <source>Both &lt;var&gt;data-item-1&lt;/var&gt; and &lt;var&gt;data-item-2&lt;/var&gt; must have the same name, and that name may not explicitly or implicitly be &lt;code&gt;FILLER&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;data-item-1&lt;/var&gt; と &lt;var&gt;data-item-2&lt;/var&gt; の両方に同じ名前を付ける必要があり、その名前を明示的または暗黙的に &lt;code&gt;FILLER&lt;/code&gt; にすることはできません。</target>
        </trans-unit>
        <trans-unit id="c5fc73c8e6f18c6192115fb1accd1c0c4438252f" translate="yes" xml:space="preserve">
          <source>Both &lt;var&gt;data-item-1&lt;/var&gt; and &lt;var&gt;data-item-2&lt;/var&gt;&amp;hellip;</source>
          <target state="translated">&lt;var&gt;data-item-1&lt;/var&gt; と &lt;var&gt;data-item-2&lt;/var&gt; の両方&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="96aed45aa4c498c8d05c7b5df5cf1a2f12fe7269" translate="yes" xml:space="preserve">
          <source>Both &lt;var&gt;identifier-1&lt;/var&gt; and &lt;code&gt;RETURNING &lt;var&gt;identifier-2&lt;/var&gt;&lt;/code&gt; may not be specified in the same statement.</source>
          <target state="translated">&lt;var&gt;identifier-1&lt;/var&gt; と &lt;code&gt;RETURNING &lt;var&gt;identifier-2&lt;/var&gt;&lt;/code&gt; 両方を同じステートメントで指定することはできません。</target>
        </trans-unit>
        <trans-unit id="e0e70bef40da9edaed087bb71dfc62edba798612" translate="yes" xml:space="preserve">
          <source>Both &lt;var&gt;identifier-1&lt;/var&gt; and &lt;var&gt;identifier-2&lt;/var&gt; must be group items.</source>
          <target state="translated">&lt;var&gt;identifier-1&lt;/var&gt; と &lt;var&gt;identifier-2&lt;/var&gt; 両方がグループアイテムである必要があります。</target>
        </trans-unit>
        <trans-unit id="9d037690755c251ab65ce5d0f3f2ac78afe842ed" translate="yes" xml:space="preserve">
          <source>Both &lt;var&gt;identifier-1&lt;/var&gt; and &lt;var&gt;identifier-2&lt;/var&gt; must be numeric un-edited data items; &lt;var&gt;literal-1&lt;/var&gt; and &lt;var&gt;literal-2&lt;/var&gt; must be numeric literals.</source>
          <target state="translated">&lt;var&gt;identifier-1&lt;/var&gt; と &lt;var&gt;identifier-2&lt;/var&gt; はどちらも、編集されていない数値のデータ項目である必要があります。 &lt;var&gt;literal-1&lt;/var&gt; および &lt;var&gt;literal-2&lt;/var&gt; は数値リテラルでなければなりません。</target>
        </trans-unit>
        <trans-unit id="5527254b9716326dad7a4050169cee5aaef1d21a" translate="yes" xml:space="preserve">
          <source>Both &lt;var&gt;identifier-1&lt;/var&gt; and &lt;var&gt;identifier-2&lt;/var&gt; must be numeric un-edited data items; &lt;var&gt;literal-1&lt;/var&gt; must be a numeric literal.</source>
          <target state="translated">&lt;var&gt;identifier-1&lt;/var&gt; と &lt;var&gt;identifier-2&lt;/var&gt; はどちらも、編集されていない数値のデータ項目である必要があります。 &lt;var&gt;literal-1&lt;/var&gt; は数値リテラルでなければなりません。</target>
        </trans-unit>
        <trans-unit id="53e7d59b02c1c10f4cb4c8f8c877060580eff170" translate="yes" xml:space="preserve">
          <source>Both &lt;var&gt;identifier-1&lt;/var&gt; and &lt;var&gt;identifier-2&lt;/var&gt; must be numeric unedited data items and &lt;var&gt;literal-1&lt;/var&gt; must be a numeric literal.</source>
          <target state="translated">&lt;var&gt;identifier-1&lt;/var&gt; と &lt;var&gt;identifier-2&lt;/var&gt; は両方とも数値の編集されていないデータ項目である必要があり、 &lt;var&gt;literal-1&lt;/var&gt; は数値リテラルである必要があります。</target>
        </trans-unit>
        <trans-unit id="661639b34cfcce33ae8886fda5ae9f5c2080f8a9" translate="yes" xml:space="preserve">
          <source>Both &lt;var&gt;identifier-1&lt;/var&gt; and &lt;var&gt;identifier-2&lt;/var&gt; must be numeric unedited data items while &lt;var&gt;literal-1&lt;/var&gt; must be a numeric literal.</source>
          <target state="translated">&lt;var&gt;identifier-1&lt;/var&gt; と &lt;var&gt;identifier-2&lt;/var&gt; はどちらも未編集の数値データ項目である必要があり、 &lt;var&gt;literal-1&lt;/var&gt; は数値リテラルである必要があります。</target>
        </trans-unit>
        <trans-unit id="b696fea5bff93c873f79e83f0109310080c8e047" translate="yes" xml:space="preserve">
          <source>Both &lt;var&gt;identifier-1&lt;/var&gt; and &lt;var&gt;identifier-2&lt;/var&gt; must be numeric unedited data items while &lt;var&gt;literal-1&lt;/var&gt; must be a numeric literal; &lt;var&gt;identifier-3&lt;/var&gt; may be either a numeric or numeric edited data item.</source>
          <target state="translated">&lt;var&gt;identifier-1&lt;/var&gt; と &lt;var&gt;identifier-2&lt;/var&gt; はどちらも未編集の数値データ項目である必要があり、 &lt;var&gt;literal-1&lt;/var&gt; は数値リテラルである必要があります。 &lt;var&gt;identifier-3&lt;/var&gt; は、数値または数値で編集されたデータ項目のいずれかです。</target>
        </trans-unit>
        <trans-unit id="b05cc00e41563a51e737e1b4e756e583b2ff421f" translate="yes" xml:space="preserve">
          <source>Both &lt;var&gt;identifier-1&lt;/var&gt; and &lt;var&gt;identifier-2&lt;/var&gt; must be numeric unedited data items while both &lt;var&gt;identifier-3&lt;/var&gt; and &lt;var&gt;identifier-4&lt;/var&gt; must be numeric (edited or unedited) data items.</source>
          <target state="translated">両方の &lt;var&gt;identifier-1&lt;/var&gt; 及び &lt;var&gt;identifier-2&lt;/var&gt; 両方ながら数値未編集のデータ項目でなければならない &lt;var&gt;identifier-3&lt;/var&gt; 及び &lt;var&gt;identifier-4&lt;/var&gt; のデータ項目（編集または未編集）数値でなければなりません。</target>
        </trans-unit>
        <trans-unit id="5e7394f0e88e2ffcbfa98a2214864c9e37eaa337" translate="yes" xml:space="preserve">
          <source>Both &lt;var&gt;identifier-1&lt;/var&gt; and &lt;var&gt;identifier-2&lt;/var&gt; must be numeric unedited data items.</source>
          <target state="translated">&lt;var&gt;identifier-1&lt;/var&gt; と &lt;var&gt;identifier-2&lt;/var&gt; はどちらも、編集されていない数値のデータ項目である必要があります。</target>
        </trans-unit>
        <trans-unit id="17b16918fa83f6f2f33d5adf230c7ca8a30a311a" translate="yes" xml:space="preserve">
          <source>Both &lt;var&gt;literal-1&lt;/var&gt; and &lt;var&gt;literal-2&lt;/var&gt; must be alphanumeric literals of length 1.</source>
          <target state="translated">&lt;var&gt;literal-1&lt;/var&gt; と &lt;var&gt;literal-2&lt;/var&gt; はどちらも、長さが1の英数字リテラルである必要があります。</target>
        </trans-unit>
        <trans-unit id="a1cb8e572bfa8b4dfab4af59bbc2475fa95369fe" translate="yes" xml:space="preserve">
          <source>Both &lt;var&gt;literal-1&lt;/var&gt; and &lt;var&gt;literal-2&lt;/var&gt; must be alphanumeric literals.</source>
          <target state="translated">&lt;var&gt;literal-1&lt;/var&gt; と &lt;var&gt;literal-2&lt;/var&gt; はどちらも英数字リテラルである必要があります。</target>
        </trans-unit>
        <trans-unit id="4a8ed391ca1ee02aab25fa6f714c60f630b97efd" translate="yes" xml:space="preserve">
          <source>Both &lt;var&gt;literal-1&lt;/var&gt; and &lt;var&gt;literal-2&lt;/var&gt; must be numeric literals.</source>
          <target state="translated">&lt;var&gt;literal-1&lt;/var&gt; と &lt;var&gt;literal-2&lt;/var&gt; は両方とも数値リテラルでなければなりません。</target>
        </trans-unit>
        <trans-unit id="00132b3bf070f438722a9e409c38a89dfa386b83" translate="yes" xml:space="preserve">
          <source>Both &lt;var&gt;literal-1&lt;/var&gt; and/or &lt;var&gt;literal-2&lt;/var&gt; must be alphanumeric literals.</source>
          <target state="translated">&lt;var&gt;literal-1&lt;/var&gt; および/または &lt;var&gt;literal-2&lt;/var&gt; は両方とも英数字リテラルでなければなりません。</target>
        </trans-unit>
        <trans-unit id="d8d79fa624956cf0d3105a3fa4b544211ecaf6b1" translate="yes" xml:space="preserve">
          <source>Both &lt;var&gt;procedure-name-1&lt;/var&gt; and &lt;var&gt;procedure-name-2&lt;/var&gt; must be procedure division sections or paragraphs defined in the same program as the &lt;code&gt;PERFORM&lt;/code&gt; statement. If &lt;var&gt;procedure-name-2&lt;/var&gt; is specified, it must follow &lt;var&gt;procedure-name-1&lt;/var&gt; in the program&amp;rsquo;s source code.</source>
          <target state="translated">&lt;var&gt;procedure-name-1&lt;/var&gt; と &lt;var&gt;procedure-name-2&lt;/var&gt; はどちらも、 &lt;code&gt;PERFORM&lt;/code&gt; ステートメントと同じプログラムで定義されたプロシージャ分割セクションまたは段落である必要があります。場合は &lt;var&gt;procedure-name-2&lt;/var&gt; 指定され、それが従わなければならない &lt;var&gt;procedure-name-1&lt;/var&gt; プログラムのソースコードで。</target>
        </trans-unit>
        <trans-unit id="3e27aaa3aa3cdb1d7e1ed322a7d2b4e74ecb9752" translate="yes" xml:space="preserve">
          <source>Both &lt;var&gt;pseudo-text-2&lt;/var&gt; and &lt;var&gt;partial-word-2&lt;/var&gt; may be null.</source>
          <target state="translated">&lt;var&gt;pseudo-text-2&lt;/var&gt; と &lt;var&gt;partial-word-2&lt;/var&gt; の両方がnullになる可能性があります。</target>
        </trans-unit>
        <trans-unit id="fba7d23be2c6f83c27c037875c5cb67f69d0e321" translate="yes" xml:space="preserve">
          <source>Both &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;length&lt;/var&gt; may be specified as integer numeric literals, integer numeric data items or arithmetic expressions with an integer value.</source>
          <target state="translated">&lt;var&gt;start&lt;/var&gt; と &lt;var&gt;length&lt;/var&gt; はどちらも、整数のリテラル、整数のデータ項目、または整数値の算術式として指定できます。</target>
        </trans-unit>
        <trans-unit id="62f5b6e735a653497e081fcece40998738d3757f" translate="yes" xml:space="preserve">
          <source>Both arguments may be alphanumeric literals or identifiers.</source>
          <target state="translated">どちらの引数も英数字リテラルか識別子になります。</target>
        </trans-unit>
        <trans-unit id="0dd361aa66175415490584d2dbc5c638993ce9fe" translate="yes" xml:space="preserve">
          <source>Both arguments must be numeric data items or numeric literals.</source>
          <target state="translated">両方の引数は、数値データ項目または数値リテラルでなければなりません。</target>
        </trans-unit>
        <trans-unit id="1cbec7c2bbe5a9b7ed97689a43559007445ebd07" translate="yes" xml:space="preserve">
          <source>Both data item definitions</source>
          <target state="translated">両方のデータ項目の定義</target>
        </trans-unit>
        <trans-unit id="73ffee561a0c87ad6ed5de89dbabcd25997adf00" translate="yes" xml:space="preserve">
          <source>Both file path arguments may be alphanumeric literals or identifiers.</source>
          <target state="translated">ファイルパスの引数はどちらも英数字リテラルか識別子になります。</target>
        </trans-unit>
        <trans-unit id="86bdf7d72ba8a02ed06721e3541f52baf0f1b609" translate="yes" xml:space="preserve">
          <source>Both fixed- and variable-length record formats are supported.</source>
          <target state="translated">固定長と可変長の両方のレコード形式がサポートされています。</target>
        </trans-unit>
        <trans-unit id="8d753f35c20a41f09891e686786ce1dede9c1f4b" translate="yes" xml:space="preserve">
          <source>Both languages store strings as a fixed-length continuous sequence of characters.</source>
          <target state="translated">どちらの言語も文字列を固定長の連続した文字列として格納します。</target>
        </trans-unit>
        <trans-unit id="d9212305982a9b34c5e63c55b74cd4446fc9bda7" translate="yes" xml:space="preserve">
          <source>Both of the above programs could have been written on a single line, if desired, and both languages allow a programmer to use (or not use) indentation as they see fit to improve program readability. Sounds like a tie so far.</source>
          <target state="translated">また、どちらの言語でもプログラマはプログラムの可読性を向上させるためにインデントを使う(または使わない)ことができます。今のところ同点のようです。</target>
        </trans-unit>
        <trans-unit id="53d76fca241c7762a48afcac98b1fff53bc39fec" translate="yes" xml:space="preserve">
          <source>Both subroutines and user-defined functions may return a value. The value they return must be an integer in the range -2147483648 to +2147483647. This value will be available in the   &lt;code&gt;RETURN-CODE&lt;/code&gt; special register (see &lt;a href=&quot;#Special-Registers&quot;&gt;Special Registers&lt;/a&gt;) and also as the value of the data item specified on the &lt;code&gt;RETURNING&lt;/code&gt; (see &lt;a href=&quot;#CALL&quot;&gt;CALL&lt;/a&gt;) clause of a subroutine&amp;rsquo;s &lt;code&gt;CALL&lt;/code&gt;.</source>
          <target state="translated">サブルーチンとユーザー定義関数の両方が値を返す場合があります。それらが返す値は、-2147483648から+2147483647の範囲の整数でなければなりません。この値は、で利用できるようになります &lt;code&gt;RETURN-CODE&lt;/code&gt; 特殊レジスタ（参照&lt;a href=&quot;#Special-Registers&quot;&gt;特殊レジスタを&lt;/a&gt;）しても、データ項目の値として指定した上で &lt;code&gt;RETURNING&lt;/code&gt; （参照&lt;a href=&quot;#CALL&quot;&gt;CALL&lt;/a&gt;サブルーチンのの句） &lt;code&gt;CALL&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="de7033bf1a9de7c2244f45f9f7594167e640b181" translate="yes" xml:space="preserve">
          <source>Both subroutines and user-defined functions may return a value. The value they return must be an integer in the range -2147483648 to +2147483647. This value will be available in the&lt;code&gt;RETURN-CODE&lt;/code&gt;special register (see &lt;a href=&quot;#Special-Registers&quot;&gt;Special Registers&lt;/a&gt;) and also as the value of the data item specified on the&lt;code&gt;RETURNING&lt;/code&gt;(see &lt;a href=&quot;#CALL&quot;&gt;CALL&lt;/a&gt;) clause of a subroutine&amp;rsquo;s CALL.</source>
          <target state="translated">サブルーチンとユーザー定義関数の両方が値を返す場合があります。それらが返す値は、-2147483648〜+2147483647の範囲の整数である必要があります。この値は、で利用できるようになります &lt;code&gt;RETURN-CODE&lt;/code&gt; 特殊レジスタ（参照&lt;a href=&quot;#Special-Registers&quot;&gt;特殊レジスタを&lt;/a&gt;）しても、データ項目の値として指定した上で &lt;code&gt;RETURNING&lt;/code&gt; （参照&lt;a href=&quot;#CALL&quot;&gt;CALL&lt;/a&gt;サブルーチンのCALLの句を）。</target>
        </trans-unit>
        <trans-unit id="ce2e02c4f2f64e08494079e611275f7b1133ff07" translate="yes" xml:space="preserve">
          <source>Boundary violation</source>
          <target state="translated">境界違反</target>
        </trans-unit>
        <trans-unit id="86d9d5d62f61d46204402182103e9fb5796ca9ab" translate="yes" xml:space="preserve">
          <source>Businesses are addressing the COBOL challenge in different ways:</source>
          <target state="translated">企業は様々な方法でCOBOLの課題に取り組んでいます。</target>
        </trans-unit>
        <trans-unit id="3d71f7e1b353d405d0ac11988a391e51c106c8d8" translate="yes" xml:space="preserve">
          <source>But this is not:</source>
          <target state="translated">しかし、これは違います。</target>
        </trans-unit>
        <trans-unit id="d6034baf101109a548d80a79196fa3960e95d84d" translate="yes" xml:space="preserve">
          <source>But, if the&lt;code&gt;KEY&lt;/code&gt;clause</source>
          <target state="translated">ただし、 &lt;code&gt;KEY&lt;/code&gt; 句</target>
        </trans-unit>
        <trans-unit id="3827f58de560d114c532e14e2971bb55664b1f8a" translate="yes" xml:space="preserve">
          <source>By accepting from  &lt;code&gt;ARGUMENT-NUMBER&lt;/code&gt;, you will be asking the GnuCOBOL run-time system to parse the arguments from the command line and return the number of arguments found. Parsing will be conducted according to the following rules:</source>
          <target state="translated">&lt;code&gt;ARGUMENT-NUMBER&lt;/code&gt; から受け入れることにより 、GnuCOBOLランタイムシステムにコマンドラインから引数を解析し、見つかった引数の数を返すように要求します。解析は、次のルールに従って実行されます。</target>
        </trans-unit>
        <trans-unit id="7b9d42a0e05506cfc4d0210e727009413dc9ee82" translate="yes" xml:space="preserve">
          <source>By accepting from  &lt;code&gt;ARGUMENT-VALUE&lt;/code&gt;, you will be asking the GnuCOBOL run-time system to parse the arguments from the command line and return the &amp;ldquo;current&amp;rdquo; argument. You specify which argument number is &amp;ldquo;current&amp;rdquo; via the &lt;code&gt;ARGUMENT-NUMBER&lt;/code&gt; option on the &lt;code&gt;DISPLAY&lt;/code&gt; statement (see &lt;a href=&quot;#DISPLAY-UPON-COMMAND_002dLINE&quot;&gt;DISPLAY UPON COMMAND-LINE&lt;/a&gt;). Parsing of arguments will be conducted according to the rules set forth above.</source>
          <target state="translated">&lt;code&gt;ARGUMENT-VALUE&lt;/code&gt; から受け入れることにより 、GnuCOBOLランタイムシステムにコマンドラインから引数を解析して「現在の」引数を返すように要求することになります。 &lt;code&gt;DISPLAY&lt;/code&gt; ステートメントの &lt;code&gt;ARGUMENT-NUMBER&lt;/code&gt; オプションを使用して、どの引数番号が「現在」であるかを指定します（&lt;a href=&quot;#DISPLAY-UPON-COMMAND_002dLINE&quot;&gt;DISPLAY UPON COMMAND-LINEを&lt;/a&gt;参照）。引数の解析は、上記のルールに従って実行されます。</target>
        </trans-unit>
        <trans-unit id="764d4abcb617d05c9427e382d8de2791cac7127c" translate="yes" xml:space="preserve">
          <source>By accepting from  &lt;code&gt;ENVIRONMENT-VALUE&lt;/code&gt;, you will be asking the GnuCOBOL run-time system to retrieve the value of the environment variable whose name is currently in the  &lt;code&gt;ENVIRONMENT-NAME&lt;/code&gt; register. A value may be placed into the &lt;code&gt;ENVIRONMENT-NAME&lt;/code&gt; register using the &lt;code&gt;ENVIRONMENT-NAME&lt;/code&gt; option of the &lt;code&gt;DISPLAY&lt;/code&gt; statement (see &lt;a href=&quot;#DISPLAY-UPON-ENVIRONMENT_002dNAME&quot;&gt;DISPLAY UPON ENVIRONMENT-NAME&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;ENVIRONMENT-VALUE&lt;/code&gt; から受け入れることにより 、GnuCOBOLランタイムシステムに、名前が現在 &lt;code&gt;ENVIRONMENT-NAME&lt;/code&gt; レジスタにある環境変数の値を取得するように要求します 。値は、 &lt;code&gt;DISPLAY&lt;/code&gt; ステートメントの &lt;code&gt;ENVIRONMENT-NAME&lt;/code&gt; オプションを使用して &lt;code&gt;ENVIRONMENT-NAME&lt;/code&gt; レジスターに入れることができます（&lt;a href=&quot;#DISPLAY-UPON-ENVIRONMENT_002dNAME&quot;&gt;DISPLAY UPON ENVIRONMENT-NAMEを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="bd77697a4182cd3b13a40705bd5e627399d95bd3" translate="yes" xml:space="preserve">
          <source>By accepting from&lt;code&gt;ARGUMENT-NUMBER&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ARGUMENT-NUMBER&lt;/code&gt; から受け入れる</target>
        </trans-unit>
        <trans-unit id="32783d23a2b57069dfd27bf6ebf2f729ab1d9e9d" translate="yes" xml:space="preserve">
          <source>By accepting from&lt;code&gt;ARGUMENT-VALUE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ARGUMENT-VALUE&lt;/code&gt; から受け入れる</target>
        </trans-unit>
        <trans-unit id="0823bd188f4cd132b1f5cf0d0527264a44cb4dc1" translate="yes" xml:space="preserve">
          <source>By accepting from&lt;code&gt;ENVIRONMENT-VALUE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ENVIRONMENT-VALUE&lt;/code&gt; から受け入れる</target>
        </trans-unit>
        <trans-unit id="6ab3ff67e4479fcd1100f7d6a19475c06970f317" translate="yes" xml:space="preserve">
          <source>By convention throughout this document, COBOL reserved words will be shown entirely in &lt;code&gt;UPPER-CASE&lt;/code&gt; while those words that were created by a programmer will be represented by tokens in mixed or lower case.</source>
          <target state="translated">このドキュメント全体の慣例により、COBOLの予約語は完全に &lt;code&gt;UPPER-CASE&lt;/code&gt; で表示され、プログラマーによって作成された語は大文字と小文字が混在または小文字で表されます。</target>
        </trans-unit>
        <trans-unit id="850d2ea9cacd64b27c9ce36e8d2804cf274ec6a0" translate="yes" xml:space="preserve">
          <source>By convention throughout this document, COBOL reserved words will be shown entirely in UPPER-CASE while those words that were created by a programmer will be represented by tokens in mixed or lower case.</source>
          <target state="translated">この文書全体の慣習により、COBOL予約語は全てUPPER-CASEで表示されるが、プログラマーによって作成された語は、混合または小文字のトークンで表現される。</target>
        </trans-unit>
        <trans-unit id="e3f96ce9962fb36a0c92a812a3b5398a552a2522" translate="yes" xml:space="preserve">
          <source>By default, all arguments are assumed to be &lt;code&gt;BY REFERENCE&lt;/code&gt; unless explicitly stated otherwise on the procedure division header.</source>
          <target state="translated">デフォルトでは、すべての引数があると仮定される &lt;code&gt;BY REFERENCE&lt;/code&gt; を明示的手順分割ヘッダに特に明記しない限り。</target>
        </trans-unit>
        <trans-unit id="fbc942875d4f00039bda2626332f5ea98c184c4d" translate="yes" xml:space="preserve">
          <source>By default, all arguments are assumed to be&lt;code&gt;BY REFERENCE&lt;/code&gt;unless explicitly stated otherwise on the procedure division header.</source>
          <target state="translated">デフォルトでは、手続き部のヘッダーで特に明記されていない限り、すべての引数は &lt;code&gt;BY REFERENCE&lt;/code&gt; であると見なされます。</target>
        </trans-unit>
        <trans-unit id="d6654a8d0cb47663f16ffe6979976c5e330b6df0" translate="yes" xml:space="preserve">
          <source>By default, procedure and procedure-and-statement tracing is off as programs begin execution. The &lt;code&gt;READY TRACE&lt;/code&gt; statement (see &lt;a href=&quot;#READY-TRACE&quot;&gt;READY TRACE&lt;/a&gt;) can be used to turn tracing on.</source>
          <target state="translated">デフォルトでは、プログラムが実行を開始すると、プロシージャおよびプロシージャとステートメントのトレースはオフになります。 &lt;code&gt;READY TRACE&lt;/code&gt; のステートメントは、（参照&lt;a href=&quot;#READY-TRACE&quot;&gt;READY TRACEを&lt;/a&gt;）トレースをオンに使用することができます。</target>
        </trans-unit>
        <trans-unit id="7ce3af4b0bcbc6101e3c26191d093e765d0d0837" translate="yes" xml:space="preserve">
          <source>By default, procedure and procedure-and-statement tracing is off as programs begin execution. The&lt;code&gt;READY TRACE&lt;/code&gt;statement (see &lt;a href=&quot;#READY-TRACE&quot;&gt;READY TRACE&lt;/a&gt;) can be used to turn tracing on.</source>
          <target state="translated">デフォルトでは、プログラムが実行を開始すると、プロシージャとプロシージャとステートメントのトレースはオフになります。 &lt;code&gt;READY TRACE&lt;/code&gt; のステートメントは、（参照&lt;a href=&quot;#READY-TRACE&quot;&gt;READY TRACEを&lt;/a&gt;）トレースをオンに使用することができます。</target>
        </trans-unit>
        <trans-unit id="89e2d8e02187ae096f81ccddd37120c7d11f6684" translate="yes" xml:space="preserve">
          <source>By default, the GnuCOBOL compiler will truncate binary data items to the precision indicated by their &lt;code&gt;PICTURE&lt;/code&gt; (see &lt;a href=&quot;#PICTURE&quot;&gt;PICTURE&lt;/a&gt;) clause, if they have one. This applies to COMP, BINARY and COMP-4 items Only.  The fact is, however, that binary truncation has a significant effect on the performance of GnuCOBOL programs. When binary truncation is in effect, arithmetic operations performed against all types of numeric data items (even &lt;code&gt;USAGE DISPLAY&lt;/code&gt;) are slowed down.</source>
          <target state="translated">デフォルトでは、GnuCOBOLコンパイラは、バイナリデータ項目があれば、 &lt;code&gt;PICTURE&lt;/code&gt; （&lt;a href=&quot;#PICTURE&quot;&gt;PICTUREを&lt;/a&gt;参照）句で示される精度に切り捨てられます。これは、COMP、BINARY、およびCOMP-4アイテムにのみ適用されます。ただし、実際には、バイナリの切り捨てはGnuCOBOLプログラムのパフォーマンスに大きな影響を及ぼします。バイナリ切り捨てが有効な場合、すべてのタイプの数値データ項目（ &lt;code&gt;USAGE DISPLAY&lt;/code&gt; を含む）に対して実行される算術演算の速度が低下します。</target>
        </trans-unit>
        <trans-unit id="df2f48f030c1739505d2c566e27aeb7e52d9aed1" translate="yes" xml:space="preserve">
          <source>By default, the GnuCOBOL compiler will truncate binary data items to the precision indicated by their&lt;code&gt;PICTURE&lt;/code&gt;(see &lt;a href=&quot;#PICTURE&quot;&gt;PICTURE&lt;/a&gt;) clause, if they have one. This applies to COMP, BINARY and COMP-4 items Only.  The fact is, however, that binary truncation has a significant effect on the performance of GnuCOBOL programs. When binary truncation is in effect, arithmetic operations performed against all types of numeric data items (even&lt;code&gt;USAGE DISPLAY&lt;/code&gt; are slowed down.</source>
          <target state="translated">デフォルトでは、GnuCOBOLコンパイラーは、 &lt;code&gt;PICTURE&lt;/code&gt; （&lt;a href=&quot;#PICTURE&quot;&gt;PICTUREを&lt;/a&gt;参照）節で示されている精度にバイナリー・データ項目がある場合、それを切り捨てます。これはCOMP、BINARY、およびCOMP-4アイテムにのみ適用されます。ただし、バイナリ切り捨てはGnuCOBOLプログラムのパフォーマンスに大きな影響を与えるというのが事実です。バイナリ切り捨てが有効な場合、すべてのタイプの数値データ項目に対して実行される算術演算（ &lt;code&gt;USAGE DISPLAY&lt;/code&gt; でさえも）速度が低下します。</target>
        </trans-unit>
        <trans-unit id="1425dbde0837cbea5550b48390a0792d0dca675a" translate="yes" xml:space="preserve">
          <source>By default, the program&amp;rsquo;s &lt;code&gt;COLLATING SEQUENCE&lt;/code&gt; will, however, be based entirely on the bit-pattern values of the various characters.</source>
          <target state="translated">ただし、デフォルトでは、プログラムの &lt;code&gt;COLLATING SEQUENCE&lt;/code&gt; は、さまざまな文字のビットパターン値に完全に基づいています。</target>
        </trans-unit>
        <trans-unit id="bdf1723b13aa92389c3cfc21f4d3b09a741ea127" translate="yes" xml:space="preserve">
          <source>By default, the program&amp;rsquo;s&lt;code&gt;COLLATING SEQUENCE&lt;/code&gt;will, however, be based entirely on the bit-pattern values of the various characters.</source>
          <target state="translated">ただし、デフォルトでは、プログラムの &lt;code&gt;COLLATING SEQUENCE&lt;/code&gt; は、さまざまな文字のビットパターン値に完全に基づいています。</target>
        </trans-unit>
        <trans-unit id="ae85549fea19dfa02375c3b11313c4613a392d2d" translate="yes" xml:space="preserve">
          <source>By displaying a numeric integer value &lt;code&gt;UPON&lt;/code&gt;&lt;code&gt;ARGUMENT-NUMBER&lt;/code&gt;, you will specify which argument (by its relative number) will be retrieved by a subsequent &lt;code&gt;ACCEPT FROM ARGUMENT-VALUE&lt;/code&gt; statement.</source>
          <target state="translated">数値の整数値 &lt;code&gt;UPON&lt;/code&gt; ARGUMENT &lt;code&gt;ARGUMENT-NUMBER&lt;/code&gt; 表示することにより、後続の &lt;code&gt;ACCEPT FROM ARGUMENT-VALUE&lt;/code&gt; ステートメントによって取得される引数（相対番号による）を指定します。</target>
        </trans-unit>
        <trans-unit id="60f9a6197452d933f11649c97e71150a45c0731f" translate="yes" xml:space="preserve">
          <source>By displaying a numeric integer value UPON&lt;code&gt;ARGUMENT-NUMBER&lt;/code&gt;</source>
          <target state="translated">UPON &lt;code&gt;ARGUMENT-NUMBER&lt;/code&gt; の整数値を表示する</target>
        </trans-unit>
        <trans-unit id="bd9a7a0b8d662fbdea6b17bbd14fcf8889798841" translate="yes" xml:space="preserve">
          <source>By moving the user-interface onto the desktop; such efforts involve running modern-language front-end clients on user desktops (or laptops or smart phones, etc.) with COBOL programs providing server functionality on mainframe or midframe platforms, providing all the database and file &quot;heavy lifting&quot; on the back-end. Solutions like this provide users with the user-interfaces they want/need while still leveraging Cobol&amp;rsquo;s strengths on (possibly) downsized legacy mainframe or midframe systems.</source>
          <target state="translated">ユーザーインターフェイスをデスクトップに移動する。このような取り組みには、メインフレームまたはミッドフレームプラットフォームでサーバー機能を提供するCOBOLプログラムを使用して、ユーザーデスクトップ（またはラップトップやスマートフォンなど）で最新の言語のフロントエンドクライアントを実行し、すべてのデータベースとファイルの「ヘビーリフト」をバックグラウンドで提供することが含まれます。終わり。このようなソリューションは、（おそらく）ダウンサイジングされたレガシーメインフレームまたはミッドフレームシステムでのCobolの強みを活用しながら、ユーザーが望む/必要とするユーザーインターフェイスを提供します。</target>
        </trans-unit>
        <trans-unit id="3492279344ec6653b90e27d3459eec3cc103df71" translate="yes" xml:space="preserve">
          <source>By moving the user-interface onto the desktop; such efforts involve running modern-language front-end clients on user desktops (or laptops or smart phones, etc.) with COBOL programs providing server functionality on mainframe or midframe platforms, providing all the database and file &amp;ldquo;heavy lifting&amp;rdquo; on the back-end. Solutions like this provide users with the user-interfaces they want/need while still leveraging COBOL&amp;rsquo;s strengths on (possibly) downsized legacy mainframe or midframe systems.</source>
          <target state="translated">ユーザーインターフェイスをデスクトップに移動する。このような取り組みには、メインフレームまたはミッドフレームプラットフォームでサーバー機能を提供するCOBOLプログラムを使用して、ユーザーデスクトップ（またはラップトップやスマートフォンなど）で最新言語のフロントエンドクライアントを実行し、すべてのデータベースとファイルを背面で「重労働」にすることが含まれます。終わり。このようなソリューションは、（おそらく）小型化されたレガシーメインフレームまたはミッドフレームシステムでのCOBOLの長所を活用しながら、ユーザーが必要とする/必要なユーザーインターフェイスをユーザーに提供します。</target>
        </trans-unit>
        <trans-unit id="d797eb055af75b05fab2b686613a1d26d36425e5" translate="yes" xml:space="preserve">
          <source>By removing the &lt;code&gt;WITH TEST&lt;/code&gt; clause, the statement is now assuming &lt;code&gt;WITH TEST BEFORE&lt;/code&gt;. Since testing now happens</source>
          <target state="translated">&lt;code&gt;WITH TEST&lt;/code&gt; 句を削除することにより、ステートメントは &lt;code&gt;WITH TEST BEFORE&lt;/code&gt; 想定しています。テストが行​​われるようになったので</target>
        </trans-unit>
        <trans-unit id="9a4ec6e85cf4b3b0c4d0278afe7e57d35f30ed23" translate="yes" xml:space="preserve">
          <source>By removing the&lt;code&gt;WITH TEST&lt;/code&gt;clause, the statement is now assuming&lt;code&gt;WITH TEST BEFORE&lt;/code&gt; Since testing now happens</source>
          <target state="translated">&lt;code&gt;WITH TEST&lt;/code&gt; 句を削除することにより、ステートメントは &lt;code&gt;WITH TEST BEFORE&lt;/code&gt; を前提としています。</target>
        </trans-unit>
        <trans-unit id="38b42a07bf6c6911ca5675f23376cbefcd1c2058" translate="yes" xml:space="preserve">
          <source>By running on almost as many different computing platforms as Java can. You can&amp;rsquo;t run COBOL programs in your smart phone, but desktops, workstations, midframes/servers, mainframes and supercomputers are all fair game.</source>
          <target state="translated">Javaと同じくらい多くの異なるコンピューティングプラットフォームで実行することによって。スマートフォンでCOBOLプログラムを実行することはできませんが、デスクトップ、ワークステーション、ミッドフレーム/サーバー、メインフレーム、スーパーコンピューターはすべて公平なゲームです。</target>
        </trans-unit>
        <trans-unit id="e99b3ecfc2c73284a8dbbf42ccb65c863f33ef43" translate="yes" xml:space="preserve">
          <source>By setting the specified &amp;lt;</source>
          <target state="translated">指定した&amp;lt;</target>
        </trans-unit>
        <trans-unit id="1b719d7bd5bf5722c16ac646e34705599ad56563" translate="yes" xml:space="preserve">
          <source>By setting the specified &lt;var&gt;condition-name-1&lt;/var&gt;(s) to a &lt;code&gt;TRUE&lt;/code&gt; or &lt;code&gt;FALSE&lt;/code&gt; value, you will actually be assigning a value to the parent data item(s) to which the condition name data item(s) is(are) subordinate to.</source>
          <target state="translated">指定された &lt;var&gt;condition-name-1&lt;/var&gt; （s）を &lt;code&gt;TRUE&lt;/code&gt; または &lt;code&gt;FALSE&lt;/code&gt; の値に設定することにより、実際には、条件名データ項目が従属する親データ項目に値を割り当てることになります。 。</target>
        </trans-unit>
        <trans-unit id="3edb9729db17e6eb4e2ac61bd38fe867fb37e3d2" translate="yes" xml:space="preserve">
          <source>By specifying the &lt;code&gt;EXTERNAL&lt;/code&gt; clause on either an &lt;code&gt;FD&lt;/code&gt; or an &lt;code&gt;SD&lt;/code&gt;, the file description is capable of being shared between all programs executed from the same execution thread, provided an &lt;code&gt;EXTERNAL&lt;/code&gt; clause is coded with the file&amp;rsquo;s description in</source>
          <target state="translated">&lt;code&gt;FD&lt;/code&gt; または &lt;code&gt;SD&lt;/code&gt; のいずれかで &lt;code&gt;EXTERNAL&lt;/code&gt; 句を指定することにより、 &lt;code&gt;EXTERNAL&lt;/code&gt; 句がファイルの説明でコーディングされている場合、ファイルの説明を同じ実行スレッドから実行されるすべてのプログラム間で共有できます。</target>
        </trans-unit>
        <trans-unit id="e07f56e6253b8fcd96907af082363e71c51ce5b1" translate="yes" xml:space="preserve">
          <source>By specifying the &lt;code&gt;EXTERNAL&lt;/code&gt; clause on the description of a data item, the data item is capable of being shared between all programs executed from the same execution thread, provided the data item is coded (with an &lt;code&gt;EXTERNAL&lt;/code&gt; clause) in each program requiring it.</source>
          <target state="translated">データ項目の説明に &lt;code&gt;EXTERNAL&lt;/code&gt; 句を指定することにより、データ項目が必要な各プログラムで（ &lt;code&gt;EXTERNAL&lt;/code&gt; 句を使用して）コーディングされていれば、同じ実行スレッドから実行されるすべてのプログラム間でデータ項目を共有できます。</target>
        </trans-unit>
        <trans-unit id="81f0f06242cb565847a975f3777ee7138f378ca4" translate="yes" xml:space="preserve">
          <source>By specifying the &lt;code&gt;GLOBAL&lt;/code&gt; clause on the description of a data item, the data item is capable of being shared between a program and any nested subprograms within it, provided the data item is coded (with a &lt;code&gt;GLOBAL&lt;/code&gt; clause) in each program requiring it.</source>
          <target state="translated">データ項目の説明に &lt;code&gt;GLOBAL&lt;/code&gt; 句を指定することにより、データ項目が必要な各プログラムで（ &lt;code&gt;GLOBAL&lt;/code&gt; 句を使用して）コーディングされている場合、データ項目はプログラムとその中のネストされたサブプログラム間で共有できます。</target>
        </trans-unit>
        <trans-unit id="95cf418423e1bfef3102fa0f5175b33155f77d60" translate="yes" xml:space="preserve">
          <source>By specifying the &lt;code&gt;GLOBAL&lt;/code&gt; clause on the description of a file or a report, that description is capable of being shared between a program and any nested subprograms within it, provided the &lt;code&gt;FD&lt;/code&gt;, &lt;code&gt;SD&lt;/code&gt; or &lt;code&gt;RD&lt;/code&gt; is coded (with a &lt;code&gt;GLOBAL&lt;/code&gt; clause) in each nested subprogram requiring it. This sharing allows the file to be opened, read and/or written and closed or the report to be initiated or terminated in those programs. Separately compiled programs may not share a &lt;code&gt;GLOBAL&lt;/code&gt; file description, but they may share an &lt;code&gt;EXTERNAL&lt;/code&gt; (see &lt;a href=&quot;#EXTERNAL&quot;&gt;EXTERNAL&lt;/a&gt;) file description. This sharing applies to the record descriptions subordinate to the file description and the report groups subordinate to the &lt;code&gt;RD&lt;/code&gt; also.</source>
          <target state="translated">ファイルまたはレポートの説明に &lt;code&gt;GLOBAL&lt;/code&gt; 句を指定することにより、 &lt;code&gt;FD&lt;/code&gt; 、 &lt;code&gt;SD&lt;/code&gt; 、または &lt;code&gt;RD&lt;/code&gt; がネストされた各サブプログラムで（ &lt;code&gt;GLOBAL&lt;/code&gt; 句を使用して）コーディングされている場合、その説明をプログラムとその中のネストされたサブプログラム間で共有できます。それを必要とするサブプログラム。この共有により、これらのプログラムでファイルを開いたり、読み取ったり、書き込んだり閉じたり、レポートを開始または終了したりできます。個別にコンパイルされたプログラムは、 &lt;code&gt;GLOBAL&lt;/code&gt; ファイルの説明を共有しない場合がありますが、 &lt;code&gt;EXTERNAL&lt;/code&gt; を共有する場合があります（&lt;a href=&quot;#EXTERNAL&quot;&gt;EXTERNALを&lt;/a&gt;参照）。） ファイル説明。この共有は、ファイル記述に従属するレコード記述と、 &lt;code&gt;RD&lt;/code&gt; に従属するレポートグループにも適用されます。</target>
        </trans-unit>
        <trans-unit id="f9265844e717179a7b2a438d467adc0a85b8d0a1" translate="yes" xml:space="preserve">
          <source>By specifying the&lt;code&gt;EXTERNAL&lt;/code&gt;clause on either an FD or an SD, the file description is capable of being shared between all programs executed from the same execution thread, provided an&lt;code&gt;EXTERNAL&lt;/code&gt;clause is coded with the file&amp;rsquo;s description in</source>
          <target state="translated">FDまたはSDで &lt;code&gt;EXTERNAL&lt;/code&gt; 句を指定することにより、 &lt;code&gt;EXTERNAL&lt;/code&gt; 句が以下のファイルの説明でコーディングされている場合、ファイル記述は同じ実行スレッドから実行されるすべてのプログラム間で共有できます。</target>
        </trans-unit>
        <trans-unit id="8fb5f1e57497d646258a731c81a2122674f9f57e" translate="yes" xml:space="preserve">
          <source>By specifying the&lt;code&gt;EXTERNAL&lt;/code&gt;clause on the description of a data item, the data item is capable of being shared between all programs executed from the same execution thread, provided the data item is coded (with an&lt;code&gt;EXTERNAL&lt;/code&gt;clause) in each program requiring it.</source>
          <target state="translated">データ項目の説明に &lt;code&gt;EXTERNAL&lt;/code&gt; 句を指定することにより、データ項目は、それを必要とする各プログラムでデータ項目が（ &lt;code&gt;EXTERNAL&lt;/code&gt; 句を使用して）コード化されていれば、同じ実行スレッドから実行されるすべてのプログラム間で共有できます。</target>
        </trans-unit>
        <trans-unit id="78a771ee6fb1e15eb97cd1a3294a78c644eba223" translate="yes" xml:space="preserve">
          <source>By specifying the&lt;code&gt;GLOBAL&lt;/code&gt;clause on the description of a data item, the data item is capable of being shared between a program and any nested subprograms within it, provided the data item is coded (with a&lt;code&gt;GLOBAL&lt;/code&gt;clause) in each program requiring it.</source>
          <target state="translated">データ項目の説明に &lt;code&gt;GLOBAL&lt;/code&gt; 句を指定することにより、データ項目は、データ項目がそれを必要とする各プログラムで（ &lt;code&gt;GLOBAL&lt;/code&gt; 句を使用して）コード化されていれば、プログラムとその中のネストされたサブプログラムの間で共有できます。</target>
        </trans-unit>
        <trans-unit id="5e2416e940bd79bf4912ad6547f50c2bfe220b82" translate="yes" xml:space="preserve">
          <source>By specifying the&lt;code&gt;GLOBAL&lt;/code&gt;clause on the description of a file or a report, that description is capable of being shared between a program and any nested subprograms within it, provided the&lt;code&gt;FD&lt;/code&gt;&lt;code&gt;SD&lt;/code&gt;or&lt;code&gt;RD&lt;/code&gt;is coded (with a&lt;code&gt;GLOBAL&lt;/code&gt;clause) in each nested subprogram requiring it. This sharing allows the file to be opened, read and/or written and closed or the report to be initiated or terminated in those programs. Separately compiled programs may not share a&lt;code&gt;GLOBAL&lt;/code&gt;file description, but they may share an&lt;code&gt;EXTERNAL&lt;/code&gt;(see &lt;a href=&quot;#EXTERNAL&quot;&gt;EXTERNAL&lt;/a&gt;) file description. This sharing applies to the record descriptions subordinate to the file description and the report groups subordinate to the&lt;code&gt;RD&lt;/code&gt;also.</source>
          <target state="translated">ファイルまたはレポートの説明に &lt;code&gt;GLOBAL&lt;/code&gt; 句を指定することにより、 &lt;code&gt;FD&lt;/code&gt; &lt;code&gt;SD&lt;/code&gt; または &lt;code&gt;RD&lt;/code&gt; が（ &lt;code&gt;GLOBAL&lt;/code&gt; 句を使用して）ネストされた各サブプログラムでコーディングされている場合、その説明をプログラムとその中にあるネストされたサブプログラムの間で共有できます。それを要求します。この共有により、これらのプログラムでファイルを開いたり、読み取ったり、書き込んだり、閉じたり、レポートを開始または終了したりできます。別々にコンパイルされたプログラムは、 &lt;code&gt;GLOBAL&lt;/code&gt; ファイルの説明を共有しない場合がありますが、 &lt;code&gt;EXTERNAL&lt;/code&gt; を共有する場合があります（&lt;a href=&quot;#EXTERNAL&quot;&gt;EXTERNALを&lt;/a&gt;参照）） ファイル説明。この共有は、ファイル記述に従属するレコード記述と、 &lt;code&gt;RD&lt;/code&gt; に従属するレポートグループにも適用されます。</target>
        </trans-unit>
        <trans-unit id="efcc05f648154d08ba04ed3ff4bfc640d7cca8bc" translate="yes" xml:space="preserve">
          <source>By undertaking so-called &quot;modernization projects&quot;, where existing applications are either rewritten in &quot;modern&quot; languages or replaced outright with purchased packages. Most of these businesses are using such activities as an excuse to abandon &quot;expensive&quot; mainframes in favour of (presumably) less-expensive &quot;open systems&quot; (mid frame/server) solutions.</source>
          <target state="translated">いわゆる「近代化プロジェクト」を行うことで、既存のアプリケーションを「近代的な」言語で書き換えたり、購入したパッケージで完全に置き換えたりしています。これらのビジネスのほとんどは、(おそらく)安価ではない「オープンシステム」(ミッドフレーム/サーバー)ソリューションを支持して「高価な」メインフレームを放棄するための口実として、このような活動を利用しています。</target>
        </trans-unit>
        <trans-unit id="715706274ddfcea7206514ce3a930e958b4c22bd" translate="yes" xml:space="preserve">
          <source>By undertaking so-called &amp;ldquo;modernization projects&amp;rdquo;, where existing applications are either rewritten in &amp;ldquo;modern&amp;rdquo; languages or replaced outright with purchased packages. Most of these businesses are using such activities as an excuse to abandon &amp;ldquo;expensive&amp;rdquo; mainframes in favour of (presumably) less-expensive &amp;ldquo;open systems&amp;rdquo; (mid frame/server) solutions.</source>
          <target state="translated">いわゆる「近代化プロジェクト」を実施することにより、既存のアプリケーションを「近代的な」言語で書き直すか、購入したパッケージに完全に置き換えます。これらの企業のほとんどは、（おそらく）より安価な「オープンシステム」（ミッドフレーム/サーバー）ソリューションを支持して、「高価な」メインフレームを放棄する言い訳などの活動を使用しています。</target>
        </trans-unit>
        <trans-unit id="32096c2e0eff33d844ee6d675407ace18289357d" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="translated">C</target>
        </trans-unit>
        <trans-unit id="308360143dd8d05e93d993a5a7724f3c1a3f223d" translate="yes" xml:space="preserve">
          <source>C &lt;code&gt;int&lt;/code&gt;, will be 1 during daylight savings</source>
          <target state="translated">C &lt;code&gt;int&lt;/code&gt; 、夏時間中は1になります</target>
        </trans-unit>
        <trans-unit id="c940e0c9cf2752e3e857b27f386c7312b6be944d" translate="yes" xml:space="preserve">
          <source>C &lt;code&gt;long&lt;/code&gt;, will be seconds west of UTC</source>
          <target state="translated">C &lt;code&gt;long&lt;/code&gt; 、UTCの西の秒になります</target>
        </trans-unit>
        <trans-unit id="b2d330f2fca96f1b05b308c57b06bfbb0866d3dd" translate="yes" xml:space="preserve">
          <source>C actually has no &quot;string&quot; data type; it stores strings as an array of&lt;code&gt;char&lt;/code&gt;data type items where each element of the array is a single character. Being an array, there is an upper limit to how many characters may be stored in a given &quot;string&quot;. For example:</source>
          <target state="translated">Cには実際には「文字列」データ型はありません。文字列は、配列の各要素が単一の文字である &lt;code&gt;char&lt;/code&gt; データ型項目の配列として格納されます。配列であるため、特定の「文字列」に格納できる文字数には上限があります。例えば：</target>
        </trans-unit>
        <trans-unit id="b3e8cb4ade20352dd5f21d47ecde75214d80992f" translate="yes" xml:space="preserve">
          <source>C actually has no &amp;ldquo;string&amp;rdquo; data type; it stores strings as an array of &lt;code&gt;char&lt;/code&gt; data type items where each element of the array is a single character. Being an array, there is an upper limit to how many characters may be stored in a given &amp;ldquo;string&amp;rdquo;. For example:</source>
          <target state="translated">Cには実際には「文字列」データ型はありません。文字列を &lt;code&gt;char&lt;/code&gt; データ型アイテムの配列として格納します。配列の各要素は1文字です。配列であるため、特定の「文字列」に格納できる文字数には上限があります。例えば：</target>
        </trans-unit>
        <trans-unit id="23c3efab3e8f592b22e96b29b33ad31e771e23df" translate="yes" xml:space="preserve">
          <source>C provides a robust set of string-manipulation functions to copy strings from one char array to another, search strings for certain characters, compare one char array to another, concatenate char arrays and so forth. To make these functions possible, it was necessary to be able to define the logical end of a string. C accomplishes this via the expectation that all strings (char arrays) will be terminated by a NULL character (&lt;code&gt;x'00'&lt;/code&gt;). Of course, no one forces a programmer to do this, but if [s]he ever expects to use any of the C standard functions to manipulate that string they had</source>
          <target state="translated">Cは、文字列をあるchar配列から別の文字配列にコピーしたり、文字列で特定の文字を検索したり、あるchar配列を別の文字配列と比較したり、char配列を連結したりするための堅牢な文字列操作関数のセットを提供します。これらの機能を可能にするには、文字列の論理的な終わりを定義できる必要がありました。Cは、すべての文字列（char配列）がNULL文字（ &lt;code&gt;x'00'&lt;/code&gt; ）で終了することを期待してこれを実現します。もちろん、プログラマーにこれを強制する人は誰もいませんが、C標準関数のいずれかを使用して、持っていた文字列を操作することを期待している場合は、</target>
        </trans-unit>
        <trans-unit id="e9e27a8aa29a84e7706c6e8607e195451cdbd1f4" translate="yes" xml:space="preserve">
          <source>C provides a robust set of string-manipulation functions to copy strings from one char array to another, search strings for certain characters, compare one char array to another, concatenate char arrays and so forth. To make these functions possible, it was necessary to be able to define the logical end of a string. C accomplishes this via the expectation that all strings (char arrays) will be terminated by a NULL character (x&amp;rsquo;00&amp;rsquo;). Of course, no one forces a programmer to do this, but if [s]he ever expects to use any of the C standard functions to manipulate that string they had</source>
          <target state="translated">Cは、あるchar配列から別のchar配列に文字列をコピーし、特定の文字を文字列で検索し、あるchar配列を別のchar配列と比較し、char配列を連結するなど、一連の堅牢な文字列操作関数を提供します。これらの機能を可能にするには、文字列の論理的な終わりを定義できる必要がありました。 Cは、すべての文字列（char配列）がNULL文字（x'00 '）で終了することを期待してこれを実現します。もちろん、これをプログラマに強制する人は誰もいませんが、C標準関数のいずれかを使用して、その文字列を操作することを彼が期待する場合</target>
        </trans-unit>
        <trans-unit id="8dcda46f8c65a9976fb21d248ed465647b6bde4c" translate="yes" xml:space="preserve">
          <source>C$CALLEDBY Built-In Subroutine Syntax</source>
          <target state="translated">C$CALLEDBY ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="25aa760761479301e30e8a8c445c9432dd492410" translate="yes" xml:space="preserve">
          <source>C$CHDIR Built-In Subroutine Syntax</source>
          <target state="translated">C$CHDIR ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="a6c60be72b5b88f58236cf8fb94ebaf0eefca5d7" translate="yes" xml:space="preserve">
          <source>C$COPY Built-In Subroutine Syntax</source>
          <target state="translated">C$COPY ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="63fb329eb6628c3bd515a3892d5ea9aacf0522a8" translate="yes" xml:space="preserve">
          <source>C$DELETE Built-In Subroutine Syntax</source>
          <target state="translated">C$DELETE ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="275df22fd79b6fa47dd5b523f6ebac52e1fdb8f6" translate="yes" xml:space="preserve">
          <source>C$FILEINFO Built-In Subroutine Syntax</source>
          <target state="translated">C$FILEINFO ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="af04ab8b5e8f7046d43c002178e5c722059d13c1" translate="yes" xml:space="preserve">
          <source>C$GETPID Built-In Subroutine Syntax</source>
          <target state="translated">C$GETPID ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="fb7ded84339e057daf0184a49ef164c65bc6b32a" translate="yes" xml:space="preserve">
          <source>C$JUSTIFY Built-In Subroutine Syntax</source>
          <target state="translated">C$JUSTIFY ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="0b15c319201eb0d4f86b0cc53c98fc7d9d42c234" translate="yes" xml:space="preserve">
          <source>C$MAKEDIR Built-In Subroutine Syntax</source>
          <target state="translated">C$MAKEDIR ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="60a0d45d44d016ceeda857f92ebe2f939551c1f9" translate="yes" xml:space="preserve">
          <source>C$NARG Built-In Subroutine Syntax</source>
          <target state="translated">C$NARG ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="a4301ab99f38a6a937974d4fe3bd89d3d6e681f4" translate="yes" xml:space="preserve">
          <source>C$PARAMSIZE Built-In Subroutine Syntax</source>
          <target state="translated">C$PARAMSIZE ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="ba12494eafa0188cb40b98d9c876a7425631a690" translate="yes" xml:space="preserve">
          <source>C$PRINTABLE Built-In Subroutine Syntax</source>
          <target state="translated">C$PRINTABLE組み込みサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="70c2b1326b1c714146c0ce2aba499e0b8e206680" translate="yes" xml:space="preserve">
          <source>C$SLEEP Built-In Subroutine Syntax</source>
          <target state="translated">C$SLEEP ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="0dbf00546e6a8778875a41b5b9d93ca091c5f5d9" translate="yes" xml:space="preserve">
          <source>C$TOLOWER Built-In Subroutine Syntax</source>
          <target state="translated">C$TOLOWER ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="235bb9fb32c0abea6f7b04592732444d58218db6" translate="yes" xml:space="preserve">
          <source>C$TOUPPER Built-In Subroutine Syntax</source>
          <target state="translated">C$TOUPPER ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="3663d9b51164847bc0a69f15726b5e044bb31706" translate="yes" xml:space="preserve">
          <source>C.cbl</source>
          <target state="translated">C.cbl</target>
        </trans-unit>
        <trans-unit id="6299f033afbfeafa65936acdd57ea1a7d2f87a08" translate="yes" xml:space="preserve">
          <source>C01, C02, C03, C04, C05, C06, C07, C08, C09, C10, C11, C12, CALENDAR-FONT, CALL-CONVENTION, CALL, CANCEL-BUTTON, CANCEL, CAPACITY, CARD-PUNCH, CARD-READER, CASSETTE, CBL_AND, CBL_CHANGE_DIR, CBL_CHECK_FILE_EXIST, CBL_CLOSE_FILE, CBL_COPY_FILE, CBL_CREATE_DIR, CBL_CREATE_FILE, CBL_DELETE_DIR, CBL_DELETE_FILE, CBL_EQ, CBL_ERROR_PROC, CBL_EXIT_PROC, CBL_FLUSH_FILE, CBL_GC_FORK, CBL_GC_GETOPT, CBL_GC_HOSTED, CBL_GC_NANOSLEEP, CBL_GC_PRINTABLE, CBL_GC_WAITPID, CBL_GET_CSR_POS, CBL_GET_CURRENT_DIR, CBL_GET_SCR_SIZE, CBL_IMP, CBL_NIMP, CBL_NOR, CBL_NOT, CBL_OC_GETOPT, CBL_OC_HOSTED, CBL_OC_NANOSLEEP, CBL_OPEN_FILE, CBL_OR, CBL_READ_FILE, CBL_READ_KBD_CHAR, CBL_RENAME_FILE, CBL_SET_CSR_POS, CBL_TOLOWER, CBL_TOUPPER, CBL_WRITE_FILE, CBL_XOR, C$CALLEDBY, C$CHDIR, CCOL, C$COPY, C$DELETE, CD, CELL-COLOR, CELL-DATA, CELL-FONT, CELL-PROTECTION, CELLS, CELL, CENTERED-HEADINGS, CENTER, CENTURY-DATE, C$FILEINFO, CF, C$GETPID, CHAINING, CHAIN, CHARACTERS, CHARACTER, CHAR-NATIONAL, CHAR, CHECK-BOX, CH, C$JUSTIFY, CLASS-ID, CLASSIFICATION, CLASS, CLEAR-SELECTION, CLINES, CLINE, CLOSE, C$MAKEDIR, C$NARG, COB-CRT-STATUS, COBOL, CODE-SET, CODE, COLLATING, COLORS, COLOR, COLOURS, COLS, COLUMN-COLOR, COLUMN-DIVIDERS, COLUMN-FONT, COLUMN-HEADINGS, COLUMN-PROTECTION, COLUMNS, COLUMN, COL, COMBINED-DATETIME, COMBO-BOX, COMMAND-LINE, COMMA, COMMIT, COMMON, COMMUNICATION, COMP-1, COMP-2, COMP-3, COMP-4, COMP-5, COMP-6, COMPUTATIONAL-1, COMPUTATIONAL-2, COMPUTATIONAL-3, COMPUTATIONAL-4, COMPUTATIONAL-5, COMPUTATIONAL-6, COMPUTATIONAL-X, COMPUTATIONAL, COMPUTE, COMP-X, COMP, CONCATENATE, CONDITION, CONFIGURATION, CONSOLE, CONSTANT, CONTAINS, CONTENT, CONTINUE, CONTROLS, CONTROL, CONVERSION, CONVERTING, COPY-SELECTION, COPY, CORRESPONDING, CORR, COS, COUNT, C$PARAMSIZE, C$PRINTABLE, CRT-UNDER, CRT, CSIZE, C$SLEEP, CSP, C$TOLOWER, C$TOUPPER, CURRENCY-SYMBOL, CURRENCY, CURRENT-DATE, CURSOR-COLOR, CURSOR-COL, CURSOR-FRAME-WIDTH, CURSOR-ROW, CURSOR-X, CURSOR, CURSOR-Y, CUSTOM-PRINT-TEMPLATE, CYCLE</source>
          <target state="translated">C01、C02、C03、C04、C05、C06、C07、C08、C09、C10、C11、C12、CALENDAR-FONT、CALL-CONVENTION、CALL、CANCEL-BUTTON、CANCEL、CAPACITY、CARD-PUNCH、CARD-READER、CASSETTE、CBL_AND、CBL_CHANGE_DIR、CBL_CHECK_FILE_EXIST、CBL_CLOSE_FILE、CBL_FILE。CBL_CREATE_DIR、CBL_CREATE_FILE、CBL_DELETE_DIR、CBL_DELETE_FILE、CBL_EQ、CBL_ERROR_PROC、CBL_EXIT_PROC、CBL_FLUSH_FILE。CBL_GC_FORK、CBL_GC_GETOPT、CBL_GC_HOSTED、CBL_GC_NANOSLEEP、CBL_GC_PRINTABLE、CBL_GC_WAITPID、CBL_GET_CSR_POS、CBL_GET_CURRENT_DIR。CBL_GET_SCR_SIZE,CBL_IMP,CBL_NIMP,CBL_NOR,CBL_NOT,CBL_OC_GETOPT,CBL_OC_HOSTED,CBL_OC_NANOSLEEP,CBL_OPEN_FILE,CBL_OR.CBL_READ_FILE、CBL_READ_KBD_CHAR、CBL_RENAME_FILE、CBL_SET_CSR_POS、CBL_TOLOWER、CBL_TOUPPER、CBL_WRITE_FILE、CBL_XOR。C$CALLEDBY、C$CHDIR、CCOL、C$COPY、C$DELETE、CD、CELL-COLOR、CELL-DATA、CELL-FONT、CELL-PROTECTION、CELLS、CELL、CENTERED-HEADINGS、CENTER、CENTURY-DATE、C$FILEINFO、CF、C$GETPID、CHAINING、CHAIN、CHARACTERS、CHARACTER、CHAR-NATIONAL、CHAR、CHAR、CHECK-BOX、CH。C$JUSTIFY、CLASS-ID、CLASSIFICATION、CLASS、CLEAR-SELECTION、CLINES、CLINE、CLOSE、C$MAKEDIR、C$NARG、COB-CRT-STATUS、COBOL、CODE-SET、CODE、COLLATING、COLORS、COLOURS、COLS、COLUMN-COLOR、COLUMN-DIVIDERS、COLUMN-FONT、COLUMN-HEADINGS。COLUMN-PROTECTION、COLUMNS、COLUMN、COL、COMBINED-DATETIME、COMBO-BOX、COMMAND-LINE、COMMA、COMMIT、COMMON、COMMUNICATION、COMP-1、COMP-2、COMP-3、COMP-4、COMP-5、COMP-6、COMPUTATIONAL-1、COMPUTATIONAL-2、COMPUTATIONAL-3、COMPUTATIONAL-4、COMPUTATIONAL-5、COMPUTATIONAL-5、COMPUTATIONAL-6、COMPUTATIONAL-1、COMPUTATIONAL-2、COMPUTATIONAL-3、COMPUTATIONAL-4、COMPUTATIONAL-5 COMPUTATIONAL-6、COMPUTATIONAL-X、COMPUTUTE、COMP-X、COMP、CONCATENATE、CONDITION、CONFIGURATION、 CONSOLE、CONSTANT、CONTAINS、CONTENT、CONTINUE、CONTROLS、CONTROLS、CONVERSION、CONVERTING、COPY-SELECTION、COPY、CORRESPONDING、CORR、COS。COUNT、C$PARAMSIZE、C$PRINTABLE、CRT-UNDER、CRT、CSIZE、C$SLEEP、CSP、C$TOLOWER、C$TOUPPER、CURRENCY-SYMBOL、CURRENCY、CURRENT-DATE、CURSOR-COLOR、CURSOR-COL、CURSOR-FRAME-WIDTH、CURSOR-ROW、CURSOR-X、CURSOR、CURSOR-Y、CUSTOM-PRINT-TEMPLATE、CYCLE</target>
        </trans-unit>
        <trans-unit id="b586454872ec65496b80499102380369642ddd7c" translate="yes" xml:space="preserve">
          <source>C01, C02, C03, C04, C05, C06, C07, C08, C09, C10, C11, C12, CALL, CALL-CONVENTION, CANCEL, CAPACITY, CD, CENTER, CF, CH, CHAIN, CHAINING, CHAR, CHAR-NATIONAL, CHARACTER, CHARACTERS, CLASS, CLASS-ID, CLASSIFICATION, CLOSE, COB-CRT-STATUS, CODE, CODE-SET, COL, COLLATING, COLS, COLUMN, COLUMNS, COMBINED-DATETIME, COMMA, COMMAND-LINE, COMMIT, COMMON, COMMUNICATION, COMP, COMP-1, COMP-2, COMP-3, COMP-4, COMP-5, COMP-6, COMP-X, COMPUTATIONAL, COMPUTATIONAL-1, COMPUTATIONAL-2, COMPUTATIONAL-3, COMPUTATIONAL-4, COMPUTATIONAL-5, COMPUTATIONAL-X, COMPUTE, CONCATENATE, CONDITION, CONFIGURATION, CONSOLE, CONSTANT, CONTAINS, CONTENT, CONTINUE, CONTROL, CONTROLS, CONVERSION, CONVERTING, COPY, CORR, CORRESPONDING, COS, COUNT, CRT, CRT-UNDER, CSP, CURRENCY, CURRENCY-SYMBOL, CURRENT-DATE, CURSOR, CYCLE</source>
          <target state="translated">C01、C02、C03、C04、C05、C06、C07、C08、C09、C10、C11、C12、CALL、CALL-CONVENTION、CANCEL、CAPACITY、CD、CENTER、CF、CH、CHAIN、CHAINING、CHAR、CHAR-NATIONAL、CHARACTER、CHARACTERS、CLASS、CLASS-ID。CLASSIFICATION、CLOSE、COB-CRT-STATUS、CODE、CODE-SET、COL、COLLATING、COLS、COLUMN、COLUMNS、COMBINED-DATETIME、COMMA、COMMAND-LINE、COMMIT、COMMON、COMMUNICATION、COMP、COMP-1、COMP-2、COMP-3、COMP-4。COMP-5、COMP-6、COMP-X、COMPUTATIONAL、COMPUTATIONAL-1、COMPUTATIONAL-2、COMPUTATIONAL-3、COMPUTATIONAL-4、COMPUTATIONAL-5、COMPUTATIONAL-X、COMPUTUTE、CONCATENATE、CONDITION、CONFIGURATION、 CONSOLE、CONSTANT、CONTAINS、CONTENT、CONTINUE、CONTROL、CONTROLS、CONVERSION、CONVERTING、COPY、CORR、CORRESPONDING、COS、COUNT、CRT、CRT-UNDER、CSP、CURRENCY、CURRENCY-SYMBOL、CURRENT-DATE、CURSOR、CYCLE</target>
        </trans-unit>
        <trans-unit id="d7112487f9b801b5ed48a8fe0185ff002f67d359" translate="yes" xml:space="preserve">
          <source>C:\Pgms\myprog.exe</source>
          <target state="translated">C:\Pgms\myprog.exe</target>
        </trans-unit>
        <trans-unit id="de6043bc6c403ff9d2b6046c2362a636bfea53d8" translate="yes" xml:space="preserve">
          <source>CALL Argument Syntax</source>
          <target state="translated">CALL 引数構文</target>
        </trans-unit>
        <trans-unit id="2671d70df7d4a08926d8332357381e9f61c8e58b" translate="yes" xml:space="preserve">
          <source>CALL Syntax</source>
          <target state="translated">CALL構文</target>
        </trans-unit>
        <trans-unit id="526726fc890dc36e6dd8ae3a02580ed875790716" translate="yes" xml:space="preserve">
          <source>CANCEL Syntax</source>
          <target state="translated">CANCEL 構文</target>
        </trans-unit>
        <trans-unit id="010c33a3c5669abc0d4c3e13b16ca99cd56d0d3d" translate="yes" xml:space="preserve">
          <source>CBL_AND Built-In Subroutine Syntax</source>
          <target state="translated">CBL_AND ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="c4b7fee42c3a84585978282604e00a5fb93a05ec" translate="yes" xml:space="preserve">
          <source>CBL_CHANGE_DIR Built-In Subroutine Syntax</source>
          <target state="translated">CBL_CHANGE_DIR ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="ffbc78325958ee05b70bb94019a16479e308ea2a" translate="yes" xml:space="preserve">
          <source>CBL_CHECK_FILE_EXIST Built-In Subroutine Syntax</source>
          <target state="translated">CBL_CHECK_FILE_EXIST ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="0d018ed830260089d76bfd38d1e7919cdcbdc024" translate="yes" xml:space="preserve">
          <source>CBL_CLOSE_FILE Built-In Subroutine Syntax</source>
          <target state="translated">CBL_CLOSE_FILE ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="b855b91a0b8fa8059790047a5423baec5643c25e" translate="yes" xml:space="preserve">
          <source>CBL_COPY_FILE Built-In Subroutine Syntax</source>
          <target state="translated">CBLFILE ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="32251cdaf8beff67a4b3e7d1d106d86e40a1b100" translate="yes" xml:space="preserve">
          <source>CBL_CREATE_DIR Built-In Subroutine Syntax</source>
          <target state="translated">CBL_CREATE_DIR ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="f67e278d9381e059f5d21ba70a0ed735d91d5ee2" translate="yes" xml:space="preserve">
          <source>CBL_CREATE_FILE Built-In Subroutine Syntax</source>
          <target state="translated">CBL_CREATE_FILE ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="2aac303e78bc6ea49b38f3aaffb8696802f08b21" translate="yes" xml:space="preserve">
          <source>CBL_DELETE_DIR Built-In Subroutine Syntax</source>
          <target state="translated">CBL_DELETE_DIR ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="a9a2b66b1511e8c70416c9fb446dfa9d760f4409" translate="yes" xml:space="preserve">
          <source>CBL_DELETE_FILE Built-In Subroutine Syntax</source>
          <target state="translated">CBL_DELETE_FILE ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="9ae015083f02e9d041e26ed70b9a6fffc894949a" translate="yes" xml:space="preserve">
          <source>CBL_EQ Built-In Subroutine Syntax</source>
          <target state="translated">CBL_EQ ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="15f5e8eac7a336edda31e136c3f10dcb76eae126" translate="yes" xml:space="preserve">
          <source>CBL_ERROR_PROC Built-In Subroutine Syntax</source>
          <target state="translated">CBL_ERROR_PROC ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="3ae4f40d8c9a5da6bc0002c9319000e30916e9a3" translate="yes" xml:space="preserve">
          <source>CBL_EXIT_PROC Built-In Subroutine Syntax</source>
          <target state="translated">CBL_EXIT_PROC ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="2c8fd1e852b667bcff38aa9a4b3dace1a9c43521" translate="yes" xml:space="preserve">
          <source>CBL_FLUSH_FILE Built-In Subroutine Syntax</source>
          <target state="translated">CBL_FLUSH_FILE ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="e0bc84b9285576d6734e6beec514af63569e077c" translate="yes" xml:space="preserve">
          <source>CBL_GC_FORK Built-In Subroute Syntax</source>
          <target state="translated">CBL_GC_FORK 組み込みサブルート構文</target>
        </trans-unit>
        <trans-unit id="444a554fdd59dc086037d0b015b21d8b23a1d476" translate="yes" xml:space="preserve">
          <source>CBL_GC_FORK allows you to fork the current COBOL process to a new one.</source>
          <target state="translated">CBL_GC_FORKは、現在のCOBOLプロセスを新しいものにフォークすることを可能にする。</target>
        </trans-unit>
        <trans-unit id="b1d3c0a940a8711fd973e8fc803b857b7de36bd4" translate="yes" xml:space="preserve">
          <source>CBL_GC_GETOPT Built-In Subroutine Syntax</source>
          <target state="translated">CBL_GC_GETOPT ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="474dd94a99e0f4504a3911e4ce0454b97922c3c1" translate="yes" xml:space="preserve">
          <source>CBL_GC_GETOPT realises the quite well-known option parser, getopt, for GnuCOBOL.</source>
          <target state="translated">CBL_GC_GETOPTは、GnuCOBOL用のよく知られたオプションパーサであるgetoptを実現しています。</target>
        </trans-unit>
        <trans-unit id="a9a7fc3ba8bdc0eb16662e3346c6fffcf9382b20" translate="yes" xml:space="preserve">
          <source>CBL_GC_HOSTED Built-In Subroutine Syntax</source>
          <target state="translated">CBL_GC_HOSTED ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="1bfeab54a31d8553275c0736120372f4fd5e50c9" translate="yes" xml:space="preserve">
          <source>CBL_GC_NANOSLEEP Built-In Subroutine Syntax</source>
          <target state="translated">CBL_GC_NANOSLEEP ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="c3c7acc9905049c52db82c8c37dcdfbb6f5c396a" translate="yes" xml:space="preserve">
          <source>CBL_GC_PRINTABLE Built-In Subroutine Syntax</source>
          <target state="translated">CBL_GC_PRINTABLE ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="002a375b4e5e465227461332d42e7dfc4592f8d3" translate="yes" xml:space="preserve">
          <source>CBL_GC_WAITPID Built-In Subroutine Syntax</source>
          <target state="translated">CBL_GC_WAITPID ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="ac766867276b2aabf42d5cdfd47fb121f6240105" translate="yes" xml:space="preserve">
          <source>CBL_GET_CSR_POS Built-In Subroutine Syntax</source>
          <target state="translated">CBL_GET_CSR_POS ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="a9e5239f190652a889d9f29f10075e094c5d1f81" translate="yes" xml:space="preserve">
          <source>CBL_GET_CURRENT_DIR Built-In Subroutine Syntax</source>
          <target state="translated">CBL_GET_CURRENT_DIR ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="0bdeda2be1413a3e0154004ce2a6b0f698702b2c" translate="yes" xml:space="preserve">
          <source>CBL_GET_SCR_SIZE Built-In Subroutine Syntax</source>
          <target state="translated">CBL_GET_SCR_SIZE 内蔵サブルーチン構文</target>
        </trans-unit>
        <trans-unit id="ea53b33fa0fb048875430a66dede00fd79b11ae1" translate="yes" xml:space="preserve">
          <source>CBL_IMP Built-In Subroutine Syntax</source>
          <target state="translated">CBL_IMP 組み込みサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="304410d70b67551eb4b5124bf58781cbe676608e" translate="yes" xml:space="preserve">
          <source>CBL_NIMP Built-In Subroutine Syntax</source>
          <target state="translated">CBL_NIMP 組み込みサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="01330765ee05a71a49eb8a8266774fd9df168a0e" translate="yes" xml:space="preserve">
          <source>CBL_NOR Built-In Subroutine Syntax</source>
          <target state="translated">CBL_NOR Built-In サブルーチン構文</target>
        </trans-unit>
        <trans-unit id="ae325b0b46a6629e90042a3330b4d6576832abee" translate="yes" xml:space="preserve">
          <source>CBL_NOT Built-In Subroutine Syntax</source>
          <target state="translated">CBL_NOT ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="72f3a1214c7ce4e4db541490264fce718bdb0b99" translate="yes" xml:space="preserve">
          <source>CBL_OPEN_FILE Built-In Subroutine Syntax</source>
          <target state="translated">CBL_OPEN_FILE ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="ea0d4c798253d7a104de0e6e336cb822d128317a" translate="yes" xml:space="preserve">
          <source>CBL_OR Built-In Subroutine Syntax</source>
          <target state="translated">CBL_OR ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="eaded8b3b2cce2d257ac7d4c3e1db62dd816b37d" translate="yes" xml:space="preserve">
          <source>CBL_READ_FILE Built-In Subroutine Syntax</source>
          <target state="translated">CBL_READ_FILE ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="d5869a0e4389714112ce1f0e3c52f1456938ee15" translate="yes" xml:space="preserve">
          <source>CBL_READ_KBD_CHAR Build-In Subroutine Syntax</source>
          <target state="translated">CBL_READ_KBD_CHAR ビルドインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="4cc6a542ee9584d1722e8a0254c05146e7a4bb23" translate="yes" xml:space="preserve">
          <source>CBL_RENAME_FILE Built-In Subroutine Syntax</source>
          <target state="translated">CBL_RENAME_FILE ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="4d25c38941724fdda5d272585e7c2c8b292abb8c" translate="yes" xml:space="preserve">
          <source>CBL_SET_CSR_POS Build-In Subroutine Syntax</source>
          <target state="translated">CBL_SET_CSR_POS ビルドインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="f083aaeb9579fac0486dd9732f32e424a58b291b" translate="yes" xml:space="preserve">
          <source>CBL_TOLOWER Built-In Subroutine Syntax</source>
          <target state="translated">CBL_TOLOWER ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="1d1313f5ae06b6506dffc0469a5b748ccadecaca" translate="yes" xml:space="preserve">
          <source>CBL_TOUPPER Built-In Subroutine Syntax</source>
          <target state="translated">CBL_TOUPPER ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="7b336aa7e9d6788405e2364f4cafc6c27b8fbf20" translate="yes" xml:space="preserve">
          <source>CBL_WRITE_FILE Built-In Subroutine Syntax</source>
          <target state="translated">CBL_WRITE_FILE ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="4838a4b796a648ad42c85059b4eb0c62946608f2" translate="yes" xml:space="preserve">
          <source>CBL_XOR Built-In Subroutine Syntax</source>
          <target state="translated">CBL_XOR ビルトインサブルーチン構文</target>
        </trans-unit>
        <trans-unit id="d88f27a7c7715ba85c6756380d4a86888335e802" translate="yes" xml:space="preserve">
          <source>CCCCCC</source>
          <target state="translated">CCCCCC</target>
        </trans-unit>
        <trans-unit id="ffe65e3de5a121cbb1a34ecf4bc260c413d9fa38" translate="yes" xml:space="preserve">
          <source>CDF $ Directive Syntax</source>
          <target state="translated">CDF $ ディレクティブの構文</target>
        </trans-unit>
        <trans-unit id="591b8a7ec66f16bf4faa0ec3a4deb122c5ea5b1d" translate="yes" xml:space="preserve">
          <source>CDF &amp;gt;&amp;gt;CALL-CONVENTION Syntax</source>
          <target state="translated">CDF &amp;gt;&amp;gt; CALL-CONVENTION構文</target>
        </trans-unit>
        <trans-unit id="869c317303145158af9e6e90164e7cd2f813dbb8" translate="yes" xml:space="preserve">
          <source>CDF &amp;gt;&amp;gt;D Directive Syntax</source>
          <target state="translated">CDF &amp;gt;&amp;gt; Dディレクティブ構文</target>
        </trans-unit>
        <trans-unit id="f050ae59c3cda50e2ce97a4e292c4f6b54cbd82f" translate="yes" xml:space="preserve">
          <source>CDF &amp;gt;&amp;gt;DEFINE Directive Syntax</source>
          <target state="translated">CDF &amp;gt;&amp;gt; DEFINEディレクティブ構文</target>
        </trans-unit>
        <trans-unit id="a4dcdac96ffe39d449482c58407ae247c86d80c7" translate="yes" xml:space="preserve">
          <source>CDF &amp;gt;&amp;gt;DISPLAY Directive Syntax</source>
          <target state="translated">CDF &amp;gt;&amp;gt; DISPLAYディレクティブ構文</target>
        </trans-unit>
        <trans-unit id="df4fd934a8558901c019c5c42be0fc334c6c6eb7" translate="yes" xml:space="preserve">
          <source>CDF &amp;gt;&amp;gt;IF Directive Syntax</source>
          <target state="translated">CDF &amp;gt;&amp;gt; IFディレクティブ構文</target>
        </trans-unit>
        <trans-unit id="824fbca66d4ddb25c3dea88c697a1b3036fdd461" translate="yes" xml:space="preserve">
          <source>CDF &amp;gt;&amp;gt;LEAP-SECONDS Directive Syntax</source>
          <target state="translated">CDF &amp;gt;&amp;gt; LEAP-SECONDSディレクティブの構文</target>
        </trans-unit>
        <trans-unit id="64ccb1c1d9bf1268318c29a01115271ec9043888" translate="yes" xml:space="preserve">
          <source>CDF &amp;gt;&amp;gt;LISTING Directive Syntax</source>
          <target state="translated">CDF &amp;gt;&amp;gt; LISTINGディレクティブ構文</target>
        </trans-unit>
        <trans-unit id="609992c93b4c3ac2672f59a190856a6003ae6098" translate="yes" xml:space="preserve">
          <source>CDF &amp;gt;&amp;gt;PAGE Directive Syntax</source>
          <target state="translated">CDF &amp;gt;&amp;gt; PAGEディレクティブの構文</target>
        </trans-unit>
        <trans-unit id="2873759e8f982b49f15e9310726ffc1e448d2044" translate="yes" xml:space="preserve">
          <source>CDF &amp;gt;&amp;gt;SET Directive Syntax</source>
          <target state="translated">CDF &amp;gt;&amp;gt; SETディレクティブ構文</target>
        </trans-unit>
        <trans-unit id="63ae47c2f2858a6c8094141c6269f6f02a37d0bb" translate="yes" xml:space="preserve">
          <source>CDF &amp;gt;&amp;gt;SOURCE Directive Syntax</source>
          <target state="translated">CDF &amp;gt;&amp;gt; SOURCEディレクティブ構文</target>
        </trans-unit>
        <trans-unit id="0caac43c2a77c2d325c3effddadbdcdbb3a10132" translate="yes" xml:space="preserve">
          <source>CDF &amp;gt;&amp;gt;TURN Directive Syntax</source>
          <target state="translated">CDF &amp;gt;&amp;gt; TURNディレクティブ構文</target>
        </trans-unit>
        <trans-unit id="3ea76d0141389cb93e5bd48077697b5d0cc98c38" translate="yes" xml:space="preserve">
          <source>CDF * Directive Syntax</source>
          <target state="translated">CDF*ディレクティブ構文</target>
        </trans-unit>
        <trans-unit id="c79f56e26f38fafdd62c99b49082274f30e09bbc" translate="yes" xml:space="preserve">
          <source>CDF COPY Phrase-Clause Syntax</source>
          <target state="translated">CDF COPY句節構文</target>
        </trans-unit>
        <trans-unit id="ecd0c28c6783f66ff7fe78daee799faae6ea01dd" translate="yes" xml:space="preserve">
          <source>CDF COPY Statement Syntax</source>
          <target state="translated">CDF COPY ステートメント構文</target>
        </trans-unit>
        <trans-unit id="3bf0d1248eeeb581bbdb0cc930febc01a8f681aa" translate="yes" xml:space="preserve">
          <source>CDF COPY String-Clause Syntax</source>
          <target state="translated">CDF COPY 文字列句構文</target>
        </trans-unit>
        <trans-unit id="045ab09524dc5447cd0cf03aa5eb3501bdffb25b" translate="yes" xml:space="preserve">
          <source>CDF REPLACE Phrase-Clause Syntax</source>
          <target state="translated">CDF REPLACE句節構文</target>
        </trans-unit>
        <trans-unit id="375676f99be00b04e212eb20bff17e5558f0a46d" translate="yes" xml:space="preserve">
          <source>CDF REPLACE Statement (Format 1) Syntax</source>
          <target state="translated">CDF REPLACE ステートメント(フォーマット 1)構文</target>
        </trans-unit>
        <trans-unit id="2383d7055a0b1410fa38fa42aa494bc482941c7d" translate="yes" xml:space="preserve">
          <source>CDF REPLACE Statement (Format 2) Syntax</source>
          <target state="translated">CDF REPLACE ステートメント(フォーマット 2)構文</target>
        </trans-unit>
        <trans-unit id="3735b9293b76c2de3ece344ec6d5b55d226a7092" translate="yes" xml:space="preserve">
          <source>CDF REPLACE String-Clause Syntax</source>
          <target state="translated">CDF REPLACE 文字列句構文</target>
        </trans-unit>
        <trans-unit id="f780a869f81377accdf06e9dfedadc683bf0692e" translate="yes" xml:space="preserve">
          <source>CDF directives, denoted by the presence of a &quot;&amp;gt;&amp;gt;&quot; character sequence as part of the statement name itself, are used to influence the process of program compilation.</source>
          <target state="translated">ステートメント名自体の一部として「&amp;gt;&amp;gt;」文字シーケンスが存在することで示されるCDFディレクティブは、プログラムのコンパイルプロセスに影響を与えるために使用されます。</target>
        </trans-unit>
        <trans-unit id="5b882991aad746d8c7ab8e254bde1658902d0333" translate="yes" xml:space="preserve">
          <source>CDF directives, denoted by the presence of a &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; character sequence as part of the statement name itself, influence the process of program compilation.</source>
          <target state="translated">ステートメント名自体の一部として &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; 文字シーケンスが存在することで示されるCDFディレクティブは、プログラムのコンパイルプロセスに影響を与えます。</target>
        </trans-unit>
        <trans-unit id="fecc3546fcec8d553d001b55777257b1ac13ddcb" translate="yes" xml:space="preserve">
          <source>CDF variable names follow the rules for standard GnuCOBOL user-defined names, and may not duplicate any CDF reserved word. CDF variable names may duplicate COBOL reserved words, provided the  &lt;code&gt;CONSTANT&lt;/code&gt; option is not specified, but such names are not recommended.</source>
          <target state="translated">CDF変数名は、標準のGnuCOBOLユーザー定義名の規則に従い、CDF予約語を複製することはできません。 &lt;code&gt;CONSTANT&lt;/code&gt; オプションが指定されていない場合、CDF変数名はCOBOL予約語と重複する可能性 がありますが、そのような名前は推奨されません。</target>
        </trans-unit>
        <trans-unit id="cc9770a9ad7daa753f5b06243cae55af53abb717" translate="yes" xml:space="preserve">
          <source>CDF variable names follow the rules for standard GnuCOBOL user-defined names, and may not duplicate any CDF reserved word. CDF variable names may duplicate COBOL reserved words, provided the&lt;code&gt;CONSTANT&lt;/code&gt;</source>
          <target state="translated">CDF変数名は、標準のGnuCOBOLユーザー定義名の規則に従っており、CDF予約語を複製することはできません。CDF変数名は、 &lt;code&gt;CONSTANT&lt;/code&gt; 指定されている場合、COBOLの予約語と重複する場合があります</target>
        </trans-unit>
        <trans-unit id="c1c88610b8d7bdc380f8f72e92ae0e9921bd36e0" translate="yes" xml:space="preserve">
          <source>CDF variables defined in this way become undefined once an &lt;code&gt;END PROGRAM&lt;/code&gt; or &lt;code&gt;END FUNCTION&lt;/code&gt; directive is encountered in the input source.</source>
          <target state="translated">この方法で定義されたCDF変数は、入力ソースで &lt;code&gt;END PROGRAM&lt;/code&gt; または &lt;code&gt;END FUNCTION&lt;/code&gt; ディレクティブが検出されると未定義になります。</target>
        </trans-unit>
        <trans-unit id="3087363482395db318308c5f193a16c28c675dc0" translate="yes" xml:space="preserve">
          <source>CDF variables defined in this way become undefined once an&lt;code&gt;END PROGRAM&lt;/code&gt;or&lt;code&gt;END FUNCTION&lt;/code&gt;directive is encountered in the input source.</source>
          <target state="translated">この方法で定義されたCDF変数は、 &lt;code&gt;END PROGRAM&lt;/code&gt; または &lt;code&gt;END FUNCTION&lt;/code&gt; ディレクティブが入力ソースで検出されると、未定義になります。</target>
        </trans-unit>
        <trans-unit id="40c106188bad3afd1ea3ef1e235247ac585ffea3" translate="yes" xml:space="preserve">
          <source>CDF-Conditional-Expression</source>
          <target state="translated">CDF-Conditional-Expression</target>
        </trans-unit>
        <trans-unit id="860fddb177df40e4e9448d281b9d62e5d7dbf445" translate="yes" xml:space="preserve">
          <source>CDF-Conditional-Expression Syntax</source>
          <target state="translated">CDF条件式構文</target>
        </trans-unit>
        <trans-unit id="c8f787b98efc8a28519cd79611110f3f03f0701e" translate="yes" xml:space="preserve">
          <source>CDF-Conditional-Expression-n</source>
          <target state="translated">CDF-Conditional-Expression-n</target>
        </trans-unit>
        <trans-unit id="486a9febb65e04c40f48a599b8b975e230efd5dd" translate="yes" xml:space="preserve">
          <source>CDF-RelOp Syntax</source>
          <target state="translated">CDF-RelOp構文</target>
        </trans-unit>
        <trans-unit id="2e70fa0781b6f4e906d33d795a5ed0279c57c5f9" translate="yes" xml:space="preserve">
          <source>CHAR Function Syntax</source>
          <target state="translated">CHAR 関数構文</target>
        </trans-unit>
        <trans-unit id="0e538d3a75bbca0165f32d7d1c053a8929a8b130" translate="yes" xml:space="preserve">
          <source>CHAR-NATIONAL Function Syntax</source>
          <target state="translated">CHAR-NATIONAL 関数構文</target>
        </trans-unit>
        <trans-unit id="5d2b785d4279a4a46339f75de21da44960c6322a" translate="yes" xml:space="preserve">
          <source>CLOSE Syntax</source>
          <target state="translated">CLOSE 構文</target>
        </trans-unit>
        <trans-unit id="b56db732d567166c7442e0554b48fca84550e947" translate="yes" xml:space="preserve">
          <source>COB-COLOR-BLACK</source>
          <target state="translated">COB-COLOR-BLACK</target>
        </trans-unit>
        <trans-unit id="cb4619cb37e6b5b8697c08e8c5e336b3e5fd7583" translate="yes" xml:space="preserve">
          <source>COB-COLOR-BLUE</source>
          <target state="translated">COB-COLOR-BLUE</target>
        </trans-unit>
        <trans-unit id="29b9973c67fa35f969e562c44aae035e1e245789" translate="yes" xml:space="preserve">
          <source>COB-COLOR-CYAN</source>
          <target state="translated">COB-COLOR-CYAN</target>
        </trans-unit>
        <trans-unit id="44cd3fd995eaf807cbb1d3b23c3ffba2af92ad08" translate="yes" xml:space="preserve">
          <source>COB-COLOR-GREEN</source>
          <target state="translated">COB-COLOR-GREEN</target>
        </trans-unit>
        <trans-unit id="6f0f3cf54c45e3b0610a2f32418cea17b3098113" translate="yes" xml:space="preserve">
          <source>COB-COLOR-MAGENTA</source>
          <target state="translated">COB-COLOR-MAGENTA</target>
        </trans-unit>
        <trans-unit id="31045d6b5fdabc7b4fd64345701940291c3fbf3f" translate="yes" xml:space="preserve">
          <source>COB-COLOR-RED</source>
          <target state="translated">COB-COLOR-RED</target>
        </trans-unit>
        <trans-unit id="bd43a22c0eb6b187d0325e3088ace819b7929aa0" translate="yes" xml:space="preserve">
          <source>COB-COLOR-WHITE</source>
          <target state="translated">COB-COLOR-WHITE</target>
        </trans-unit>
        <trans-unit id="e2030988a7874109279c5ae4e2014012495610c6" translate="yes" xml:space="preserve">
          <source>COB-COLOR-YELLOW</source>
          <target state="translated">COB-COLOR-YELLOW</target>
        </trans-unit>
        <trans-unit id="90a2fc9d8928d812fbfa67cc8815fa975746d710" translate="yes" xml:space="preserve">
          <source>COBOL</source>
          <target state="translated">COBOL</target>
        </trans-unit>
        <trans-unit id="eadfe5afbc4bdc9323ff76aabd892e614a42f98a" translate="yes" xml:space="preserve">
          <source>COBOL (GnuCOBOL included) still requires that each procedure division paragraph contain at least one sentence if there is any executable code in that paragraph, but a popular coding style is now to simply code a single period right before the end of each paragraph.</source>
          <target state="translated">COBOL (GnuCOBOLを含む)では、各プロシージャー分割段落に実行可能なコードがある場合、各段落に少なくとも1つの文が含まれていることが要求されていますが、現在では、各段落の最後の直前にピリオドを1つだけコード化するのが一般的なコーディングスタイルとなっています。</target>
        </trans-unit>
        <trans-unit id="3f259b701df0ffea124e9e9d93fa38f5515d1dc6" translate="yes" xml:space="preserve">
          <source>COBOL (the default) the program name is treated as a COBOL word that maps to the externalised name program to be called, cancelled or referenced in the program-address-identifier, applying the same mapping rules as for a program name for which no AS phrase is specified.</source>
          <target state="translated">COBOL(デフォルト)のプログラム名は、AS句が指定されていないプログラム名と同じマッピング規則を適用して、プログラム-アドレス-識別子の中で呼び出される、キャンセルされる、または参照される外部化された名前のプログラムにマッピングするCOBOL単語として扱われる。</target>
        </trans-unit>
        <trans-unit id="48fb8f2f43202777e485002999e4bff39f18277a" translate="yes" xml:space="preserve">
          <source>COBOL allows data names to be duplicated within a program, provided references to those data names may be made in such a manner as to make those references unique through a process known as qualification.</source>
          <target state="translated">COBOLでは、データ名をプログラム内で複製することができるが、それらのデータ名への参照は、資格と呼ばれるプロセスを通じて、それらの参照が一意になるような方法で行われてもよい。</target>
        </trans-unit>
        <trans-unit id="2a497059411f21246aa0ed246a4c62fff7c4a465" translate="yes" xml:space="preserve">
          <source>COBOL introduced the concept of structured data. The principle of structured data in COBOL is based on the idea of being able to group related and contiguously-allocated data items together into a single aggregate data item, called a  &lt;em&gt;Group Item&lt;/em&gt;. For example, a 35-character &amp;rsquo;Employee-Name&amp;rsquo; group item might consist of a 20-character &amp;rsquo;Last-Name&amp;rsquo; followed by a 14-character &amp;rsquo;First-Name&amp;rsquo; and a 1-character &amp;rsquo;Middle-Initial&amp;rsquo;.</source>
          <target state="translated">COBOLは、構造化データの概念を導入しました。COBOLの構造化データの原則は、関連する連続して割り当てられたデータ項目を、&lt;em&gt;グループ項目&lt;/em&gt;と呼ばれる単一の集計データ項目にグループ化できるという考えに基づいてい ます。たとえば、35文字の「Employee-Name」グループアイテムは、20文字の「Last-Name」の後に14文字の「First-Name」と1文字の「Middle-Initial」が続く場合があります。</target>
        </trans-unit>
        <trans-unit id="bad4eaa4bb2e0dd2937ccfeadd29c67245044240" translate="yes" xml:space="preserve">
          <source>COBOL introduced the concept of structured data. The principle of structured data in COBOL is based on the idea of being able to group related and contiguously-allocated data items together into a single aggregate data item, called a &amp;rsquo;</source>
          <target state="translated">COBOLは構造化データの概念を導入しました。COBOLの構造化データの原則は、関連して隣接して割り当てられたデータ項目を、「</target>
        </trans-unit>
        <trans-unit id="88f7e793363c359f805338e8ab3bfc1ba1b12ce9" translate="yes" xml:space="preserve">
          <source>COBOL is no exception, although it does include some very powerful string manipulation capabilities; GnuCOBOL actually has even more string-manipulation capabilities than many other COBOL implementations. The following summarizes GnuCOBOL&amp;rsquo;s string-processing capabilities:</source>
          <target state="translated">COBOLも例外ではありませんが、非常に強力な文字列操作機能がいくつか含まれています。GnuCOBOLは実際には他の多くのCOBOL実装よりもさらに多くの文字列操作機能を備えています。以下は、GnuCOBOLの文字列処理機能を要約したものです。</target>
        </trans-unit>
        <trans-unit id="dde8c6334c994b5347cfada0a05a26b03a15ab9b" translate="yes" xml:space="preserve">
          <source>COBOL programming standards used by many organizations that use the language generally call for procedure names to:</source>
          <target state="translated">この言語を使用する多くの組織で使用されているCOBOLプログラミング標準では、一般的にプロシージャ名にはプロシージャ名を使用することを求めています。</target>
        </trans-unit>
        <trans-unit id="237c5dec647d58128f7e92bd3621d1dca2820712" translate="yes" xml:space="preserve">
          <source>COBOL programs are structured into four major areas of coding, each with its own purpose. These four areas are known as divisions.</source>
          <target state="translated">COBOLプログラムは、コーディングの4つの主要な領域で構成されており、それぞれが目的を持っています。これらの4つの領域は、部門として知られている。</target>
        </trans-unit>
        <trans-unit id="40d677d08c7bd935e12b6567e3a0a71e438d7f4e" translate="yes" xml:space="preserve">
          <source>COBOL stores these character sequences up to a specific quantity limit imposed by the &lt;code&gt;PICTURE&lt;/code&gt; (see &lt;a href=&quot;#PICTURE&quot;&gt;PICTURE&lt;/a&gt;) clause of the data item. For example: &lt;code&gt;01  LastName   PIC X(15).&lt;/code&gt;.</source>
          <target state="translated">COBOLは、データ項目の &lt;code&gt;PICTURE&lt;/code&gt; （&lt;a href=&quot;#PICTURE&quot;&gt;PICTUREを&lt;/a&gt;参照）句によって課される特定の数量制限まで、これらの文字シーケンスを格納します。例： &lt;code&gt;01 LastName PIC X(15).&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dac3fc3307f5261c119816a3d0eb8a309a74395c" translate="yes" xml:space="preserve">
          <source>COBOL stores these character sequences up to a specific quantity limit imposed by the&lt;code&gt;PICTURE&lt;/code&gt;(see &lt;a href=&quot;#PICTURE&quot;&gt;PICTURE&lt;/a&gt;) clause of the data item. For example:&lt;code&gt;01 LastName PIC X(15).&lt;/code&gt;</source>
          <target state="translated">COBOL は、データ項目の &lt;code&gt;PICTURE&lt;/code&gt; （&lt;a href=&quot;#PICTURE&quot;&gt;PICTUREを&lt;/a&gt;参照）節によって課される特定の数量制限までこれらの文字シーケンスを保管します。例： &lt;code&gt;01 LastName PIC X(15).&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="909b919ed1edcb2747079bf5361924010f7d94b1" translate="yes" xml:space="preserve">
          <source>COBOL uses parenthesis to specify the subscripts used to reference table entries (tables in COBOL are what other programming languages refer to as arrays).</source>
          <target state="translated">COBOLでは、テーブル・エントリを参照するために使用される添え字を指定するために括弧を使用する(COBOLのテーブルは、他のプログラミング言語では配列と呼ばれているものである)。</target>
        </trans-unit>
        <trans-unit id="8f31338688ef4d62ce570b667480bdfbfbfe6872" translate="yes" xml:space="preserve">
          <source>COBOL uses the concept of a</source>
          <target state="translated">COBOLでは</target>
        </trans-unit>
        <trans-unit id="ce9ef7dc01343b612f6c4d064720d1b0787f7476" translate="yes" xml:space="preserve">
          <source>COBOL uses the concept of a &quot;level number&quot; to indicate the level at which a data item occurs in a data structure such as the example shown above. When these data items are defined, they are all defined together with a number in the range 1-49 specified in front of their names. Over the years, a convention has come to exist among COBOL programmers that level numbers are always coded as two-digit numbers &amp;mdash; they don&amp;rsquo;t</source>
          <target state="translated">COBOLは、「レベル番号」の概念を使用して、上記の例のようなデータ構造でデータ項目が発生するレベルを示します。これらのデータ項目が定義されると、それらはすべて、名前の前に指定された1から49の範囲の番号とともに定義されます。長年にわたって、レベル番号は常に2桁の数字としてコーディングされるという取り決めがCOBOLプログラマーの間で存在するようになりました。</target>
        </trans-unit>
        <trans-unit id="e6ef4657869782222ae93ff64fc2b30b55f64086" translate="yes" xml:space="preserve">
          <source>COBOL, first introduced to the programming public in 1959, was the very first programming language to become standardized (in 1960). This meant that a standard-compliant COBOL program written on computer &quot;A&quot; made by company &quot;B&quot; would be able to be compiled and executed on computer &quot;X&quot; made by company &quot;Y&quot; with very few, if any, changes. This may not seem like such a big deal today, but it was a radical departure from all programming languages that came before it and even many that came after it.</source>
          <target state="translated">COBOLは、1959年に初めてプログラミング言語として一般に紹介され、標準化された最初のプログラミング言語である(1960年)。これは、「B」社製のコンピュータ「A」で書かれた標準準拠のCOBOLプログラムを、「Y」社製のコンピュータ「X」でコンパイルして実行することができることを意味していました。これは、今日ではそれほど大きなことではないように思えるかもしれないが、それ以前に登場したすべてのプログラミング言語、さらにはそれ以降に登場した多くのプログラミング言語からの根本的な出発であった。</target>
        </trans-unit>
        <trans-unit id="19613655dc62ee256d5471ff556e9dc1fb626bc0" translate="yes" xml:space="preserve">
          <source>COBOL, first introduced to the programming public in 1959, was the very first programming language to become standardized (in 1960). This meant that a standard-compliant COBOL program written on computer &amp;ldquo;A&amp;rdquo; made by company &amp;ldquo;B&amp;rdquo; would be able to be compiled and executed on computer &amp;ldquo;X&amp;rdquo; made by company &amp;ldquo;Y&amp;rdquo; with very few, if any, changes. This may not seem like such a big deal today, but it was a radical departure from all programming languages that came before it and even many that came after it.</source>
          <target state="translated">1959年にプログラミングの一般に最初に導入されたCOBOLは、（1960年に）標準化された最初のプログラミング言語でした。これは、会社「B」によって作成されたコンピューター「A」で作成された標準準拠のCOBOLプログラムが、変更があったとしてもごくわずかで、会社「Y」によって作成されたコンピューター「X」でコンパイルおよび実行できることを意味します。これは今日ではそれほど大したことではないように思われるかもしれませんが、それ以前のすべてのプログラミング言語、さらにはその後の多くのプログラミング言語からの根本的な逸脱でした。</target>
        </trans-unit>
        <trans-unit id="c7feed455a4b79b075fdccc23d9b50c81b9be30b" translate="yes" xml:space="preserve">
          <source>COLUMN (REPORT SECTION) Clause Syntax</source>
          <target state="translated">COLUMN (REPORT SECTION)節構文</target>
        </trans-unit>
        <trans-unit id="67926b14557077295e873f6eb0943e04447ace62" translate="yes" xml:space="preserve">
          <source>COLUMN (SCREEN SECTION) Clause Syntax</source>
          <target state="translated">COLUMN(SCREEN SECTION)節構文</target>
        </trans-unit>
        <trans-unit id="e947ac3b421a25bfd653c90f78152c95ca1753e4" translate="yes" xml:space="preserve">
          <source>COMBINED-DATETIME Function Syntax</source>
          <target state="translated">COMBINED-DATETIME 関数構文</target>
        </trans-unit>
        <trans-unit id="10223130153973998a9c9edb1ab0e28808779d2b" translate="yes" xml:space="preserve">
          <source>COMMIT Syntax</source>
          <target state="translated">COMMIT 構文</target>
        </trans-unit>
        <trans-unit id="9023f069fa53953217be7784a46e321ea47b5e6c" translate="yes" xml:space="preserve">
          <source>COMPUTATIONAL-1</source>
          <target state="translated">COMPUTATIONAL-1</target>
        </trans-unit>
        <trans-unit id="77d504bbedfdd326fb91883e0396fb0c0711c5e2" translate="yes" xml:space="preserve">
          <source>COMPUTATIONAL-2</source>
          <target state="translated">COMPUTATIONAL-2</target>
        </trans-unit>
        <trans-unit id="42f2cf4efe24a37906cd89833c42647573a1a66e" translate="yes" xml:space="preserve">
          <source>COMPUTE Syntax</source>
          <target state="translated">COMPUTE 構文</target>
        </trans-unit>
        <trans-unit id="ce9a1104da0ef136acfdecfada86cc49b918885e" translate="yes" xml:space="preserve">
          <source>CONCATENATE Function Syntax</source>
          <target state="translated">CONCATENATE 関数構文</target>
        </trans-unit>
        <trans-unit id="e9543acb0a3b6ae140b676bdd75a9f04b94c736b" translate="yes" xml:space="preserve">
          <source>CONFIGURATION SECTION Syntax</source>
          <target state="translated">CONFIGURATION SECTION 構文</target>
        </trans-unit>
        <trans-unit id="fd14e0768d8e03137017ff03d76cc74754b47cbb" translate="yes" xml:space="preserve">
          <source>CONSTANT Attribute Syntax</source>
          <target state="translated">CONSTANT属性構文</target>
        </trans-unit>
        <trans-unit id="45f863a18c883ddde1c38a1609e1083371a910f8" translate="yes" xml:space="preserve">
          <source>CONTINUE Syntax</source>
          <target state="translated">CONTINUE 構文</target>
        </trans-unit>
        <trans-unit id="57c118d0153aad86aee87fdaf7399dce402a08bd" translate="yes" xml:space="preserve">
          <source>CONTROL FOOTING(S) [2]</source>
          <target state="translated">コントロールフット[2</target>
        </trans-unit>
        <trans-unit id="a0b77db4412f953dc79ec3e8dadb8c3312edb9f0" translate="yes" xml:space="preserve">
          <source>CONTROL HEADING(S) [2]</source>
          <target state="translated">コントロールヘディング [2</target>
        </trans-unit>
        <trans-unit id="a0fe3388635d6d014a065ee11d0aee898e490bea" translate="yes" xml:space="preserve">
          <source>COS Function Syntax</source>
          <target state="translated">COS関数構文</target>
        </trans-unit>
        <trans-unit id="e2bf90245c3eae70b50309837f6647c1f83fdf58" translate="yes" xml:space="preserve">
          <source>COUNT</source>
          <target state="translated">COUNT</target>
        </trans-unit>
        <trans-unit id="762cf7076b068d306d32ea79b0d0e2277121f2b5" translate="yes" xml:space="preserve">
          <source>CR</source>
          <target state="translated">CR</target>
        </trans-unit>
        <trans-unit id="46a355610c958a2df7dbd1b4d7bf89438582b10c" translate="yes" xml:space="preserve">
          <source>CURRENCY-SYMBOL Function Syntax</source>
          <target state="translated">CURRENCY-SYMBOL 関数構文</target>
        </trans-unit>
        <trans-unit id="7ab87c3b533221867b4462ee901838685c51bd46" translate="yes" xml:space="preserve">
          <source>CURRENT-DATE Function Syntax</source>
          <target state="translated">CURRENT-DATE 関数構文</target>
        </trans-unit>
        <trans-unit id="8980ae6fd73bcc82840b7888df9223d5cb16f6b5" translate="yes" xml:space="preserve">
          <source>Call Folding</source>
          <target state="translated">コールフォールディング</target>
        </trans-unit>
        <trans-unit id="7f55d49edf888f806f705f970cf3931b2d28dc46" translate="yes" xml:space="preserve">
          <source>Call also supports using an entry point stored in a &lt;code&gt;PROGRAM-POINTER&lt;/code&gt;, avoiding the dynamic runtime lookup. GnuCOBOL keeps a cache of lookups during a program run. Repeated use of a named function does not suffer much penalty, but &lt;code&gt;PROGRAM-POINTER&lt;/code&gt; will be just that little bit faster. To set a &lt;code&gt;PROGRAM-POINTER&lt;/code&gt; use &lt;code&gt;SET &lt;var&gt;program-reference&lt;/var&gt; TO ENTRY &quot;&lt;var&gt;name&lt;/var&gt;&quot;&lt;/code&gt; (or get the address from an API, and take part in callback programming).</source>
          <target state="translated">Callは、 &lt;code&gt;PROGRAM-POINTER&lt;/code&gt; に格納されているエントリポイントの使用もサポートし、動的なランタイムルックアップを回避します。 GnuCOBOLは、プログラムの実行中にルックアップのキャッシュを保持します。名前付き関数を繰り返し使用してもそれほどペナルティはありませんが、 &lt;code&gt;PROGRAM-POINTER&lt;/code&gt; の方が少し速くなります。設定するには &lt;code&gt;PROGRAM-POINTER&lt;/code&gt; の使用 &lt;code&gt;SET &lt;var&gt;program-reference&lt;/var&gt; TO ENTRY &quot;&lt;var&gt;name&lt;/var&gt;&quot;&lt;/code&gt; （またはAPIからアドレスを取得し、コールバックプログラミングに参加しています）。</target>
        </trans-unit>
        <trans-unit id="a2b6abc7961dcf84b76adf0da7d0e3cb7258497a" translate="yes" xml:space="preserve">
          <source>Called Program</source>
          <target state="translated">呼び出されたプログラム</target>
        </trans-unit>
        <trans-unit id="08e86dd2cb3e588792e5a1445c80be0d6ca86b4d" translate="yes" xml:space="preserve">
          <source>Called program not found</source>
          <target state="translated">呼び出されたプログラムが見つかりません</target>
        </trans-unit>
        <trans-unit id="79de0a0be26f9fe0196ab734446be6015cb155b5" translate="yes" xml:space="preserve">
          <source>Calling Program</source>
          <target state="translated">コーリングプログラム</target>
        </trans-unit>
        <trans-unit id="4aa75fa92437b6df595f9667af7d64254448be0b" translate="yes" xml:space="preserve">
          <source>Care must be taken that &amp;lt;</source>
          <target state="translated">注意が必要です&amp;lt;</target>
        </trans-unit>
        <trans-unit id="44f46fc57da5c8811a3fdc2e20a7f14a4f5fcca4" translate="yes" xml:space="preserve">
          <source>Care must be taken that &lt;var&gt;constant-name-1&lt;/var&gt; does not duplicate any other data item name that has been defined in the program as references to that data item name will refer to the constant and not the data item. The GnuCOBOL compiler will not issue a warning about this condition.</source>
          <target state="translated">&lt;var&gt;constant-name-1&lt;/var&gt; は、プログラムで定義されている他のデータ項目名と重複しないように注意する必要があります。そのデータ項目名への参照は、データ項目ではなく定数を参照するためです。GnuCOBOLコンパイラは、この状態に関する警告を発行しません。</target>
        </trans-unit>
        <trans-unit id="0fdf8af8472823c51043780169333ae53b188ec1" translate="yes" xml:space="preserve">
          <source>Care must be taken that programs reading such a file describe records whose length is exactly the same as that used by the program that created the file. For example, the following shows the contents of a &lt;code&gt;SEQUENTIAL&lt;/code&gt; file created by a program that wrote five 6-character records to it. The &amp;lsquo;</source>
          <target state="translated">このようなファイルを読み取るプログラムは、ファイルを作成したプログラムで使用される長さとまったく同じ長さのレコードを記述することに注意する必要があります。たとえば、以下は、5つの6文字のレコードを書き込んだプログラムによって作成された &lt;code&gt;SEQUENTIAL&lt;/code&gt; ファイルの内容を示しています。'</target>
        </trans-unit>
        <trans-unit id="232276f2c2caa7b4c6621023fcbe761e2f25eb06" translate="yes" xml:space="preserve">
          <source>Care must be taken that programs reading such a file describe records whose length is exactly the same as that used by the program that created the file. For example, the following shows the contents of a&lt;code&gt;SEQUENTIAL&lt;/code&gt;file created by a program that wrote five 6-character records to it. The &quot;A&quot;, &quot;B&quot;, &amp;hellip; values reflect the records that were written to the file:</source>
          <target state="translated">このようなファイルを読み取るプログラムは、ファイルを作成したプログラムが使用した長さとまったく同じ長さのレコードを記述することに注意する必要があります。たとえば、次の例は、5文字の6文字のレコードを書き込んだプログラムによって作成された &lt;code&gt;SEQUENTIAL&lt;/code&gt; ファイルの内容を示しています。「A」、「B」、&amp;hellip;の値は、ファイルに書き込まれたレコードを反映しています。</target>
        </trans-unit>
        <trans-unit id="0d6ab5c40892951a44701a3cbbc3363615028003" translate="yes" xml:space="preserve">
          <source>Care must be taken that programs reading such a file describe records whose length is exactly the same as that used by the programs that created the file. It won&amp;rsquo;t end well if the GnuCOBOL runtime library interprets a four-byte ASCII character string as a record length when it transfers data from the file into the program!</source>
          <target state="translated">このようなファイルを読み取るプログラムは、ファイルを作成したプログラムで使用されたものと正確に同じ長さのレコードを記述することに注意する必要があります。ファイルからプログラムにデータを転送するときに、GnuCOBOLランタイムライブラリが4バイトのASCII文字列をレコード長として解釈する場合、これは正常に終了しません。</target>
        </trans-unit>
        <trans-unit id="7c6c97c84f8056669f430c4736312352ec00b4b7" translate="yes" xml:space="preserve">
          <source>Case-folding may also be turned on and off within the program source code using the CDF &lt;code&gt;&amp;gt;&amp;gt;SET&lt;/code&gt; statement (see &lt;a href=&quot;#g_t_003e_003eSET&quot;&gt;&amp;gt;&amp;gt;SET&lt;/a&gt;).</source>
          <target state="translated">ケース・折りたたみもCDF使用してプログラムのソースコードの中にオン・オフすることができる &lt;code&gt;&amp;gt;&amp;gt;SET&lt;/code&gt; （参照文を&lt;a href=&quot;#g_t_003e_003eSET&quot;&gt;&amp;gt;&amp;gt; SETを&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="008af863881dc7149313286a97c8945b993a34fe" translate="yes" xml:space="preserve">
          <source>Case-folding may also be turned on and off within the program source code using the CDF&lt;code&gt;&amp;gt;&amp;gt;SET&lt;/code&gt;statement (see &lt;a href=&quot;#g_t_003e_003eSET&quot;&gt;&amp;gt;&amp;gt;SET&lt;/a&gt;).</source>
          <target state="translated">ケース・折りたたみもCDF使用してプログラムのソースコードの中にオン・オフすることができる &lt;code&gt;&amp;gt;&amp;gt;SET&lt;/code&gt; （参照文を&lt;a href=&quot;#g_t_003e_003eSET&quot;&gt;&amp;gt;&amp;gt; SETを&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="98accb26910de4948b37b8fbb0b408fbd1a965e0" translate="yes" xml:space="preserve">
          <source>Caution. Although this document is for version 2.2 of the compiler, it also includes a description of the functions of the RWCS (Report Writer module) which is not included in the compiler version 2.2. Please see availability notes on this at 1.3.13.</source>
          <target state="translated">注意事項 このドキュメントはコンパイラのバージョン2.2用ですが、コンパイラのバージョン2.2には含まれていないRWCS(Report Writerモジュール)の機能の説明も含まれています。これについては1.3.13を参照してください。</target>
        </trans-unit>
        <trans-unit id="09dbd187de708ee21b01806ae5b0ca883102654a" translate="yes" xml:space="preserve">
          <source>Caveat</source>
          <target state="translated">Caveat</target>
        </trans-unit>
        <trans-unit id="c31bd54462bc43518a54ac972e844efe356173ba" translate="yes" xml:space="preserve">
          <source>Changes made by a subprogram to the value of an argument specified on the &lt;code&gt;USING&lt;/code&gt; clause will &amp;ldquo;be visible&amp;rdquo; to the calling program only if &lt;code&gt;BY REFERENCE&lt;/code&gt; was explicitly specified or implicitly assumed for the argument on the subprogram&amp;rsquo;s procedure division header</source>
          <target state="translated">サブプログラムによって &lt;code&gt;USING&lt;/code&gt; 句で指定された引数の値に加えられた変更は、サブプログラムのプロシージャ分割ヘッダーの引数に &lt;code&gt;BY REFERENCE&lt;/code&gt; が明示的に指定されているか、暗黙的に想定されている場合にのみ、呼び出し側プログラムに「表示」されます。</target>
        </trans-unit>
        <trans-unit id="fb48ed86295c01e223491405da96e0725331ba29" translate="yes" xml:space="preserve">
          <source>Changes made by a subprogram to the value of an argument specified on the&lt;code&gt;USING&lt;/code&gt;clause will &quot;be visible&quot; to the calling program only if&lt;code&gt;BY REFERENCE&lt;/code&gt;was explicitly specified or implicitly assumed for the argument on the subprogram&amp;rsquo;s procedure division header</source>
          <target state="translated">サブプログラムによって &lt;code&gt;USING&lt;/code&gt; 句で指定された引数の値に加えられた変更は、 &lt;code&gt;BY REFERENCE&lt;/code&gt; が明示的に指定された場合、またはサブプログラムの手続き部ヘッダーの引数に暗黙的に想定された場合にのみ、呼び出し元プログラムに「表示」されます。</target>
        </trans-unit>
        <trans-unit id="f61e9aefa37a7365181d1fa0b629667eb50199ce" translate="yes" xml:space="preserve">
          <source>Changing the currency symbol via the &lt;code&gt;SPECIAL-NAMES&lt;/code&gt; (see &lt;a href=&quot;#SPECIAL_002dNAMES&quot;&gt;SPECIAL-NAMES&lt;/a&gt;) paragraph&amp;rsquo;s &lt;code&gt;CURRENCY SYMBOL&lt;/code&gt; setting will</source>
          <target state="translated">&lt;code&gt;SPECIAL-NAMES&lt;/code&gt; （&lt;a href=&quot;#SPECIAL_002dNAMES&quot;&gt;SPECIAL-NAMESを&lt;/a&gt;参照）段落の &lt;code&gt;CURRENCY SYMBOL&lt;/code&gt; 設定を使用して通貨記号を変更すると、</target>
        </trans-unit>
        <trans-unit id="678f855b53417fc91a2994a62e401b38bf2f483b" translate="yes" xml:space="preserve">
          <source>Changing the currency symbol via the &lt;code&gt;SPECIAL-NAMES&lt;/code&gt; paragraph&amp;rsquo;s &lt;code&gt;CURRENCY SYMBOL&lt;/code&gt; setting will not affect the value returned by this function.</source>
          <target state="translated">&lt;code&gt;SPECIAL-NAMES&lt;/code&gt; 段落の &lt;code&gt;CURRENCY SYMBOL&lt;/code&gt; 設定を介して通貨記号を変更しても、この関数によって返される値には影響しません。</target>
        </trans-unit>
        <trans-unit id="1cf367703f62db4730492b29e986ff87aabe8968" translate="yes" xml:space="preserve">
          <source>Changing the currency symbol via the&lt;code&gt;SPECIAL-NAMES&lt;/code&gt;(see &lt;a href=&quot;#SPECIAL_002dNAMES&quot;&gt;SPECIAL-NAMES&lt;/a&gt;) paragraph&amp;rsquo;s&lt;code&gt;CURRENCY SYMBOL&lt;/code&gt;setting will</source>
          <target state="translated">&lt;code&gt;SPECIAL-NAMES&lt;/code&gt; （&lt;a href=&quot;#SPECIAL_002dNAMES&quot;&gt;SPECIAL-NAMESを&lt;/a&gt;参照）段落の &lt;code&gt;CURRENCY SYMBOL&lt;/code&gt; 設定で通貨記号を変更すると、</target>
        </trans-unit>
        <trans-unit id="3290313e1574c3d689ba9eb70ce2b545abfe41ec" translate="yes" xml:space="preserve">
          <source>Changing the current directory</source>
          <target state="translated">カレントディレクトリの変更</target>
        </trans-unit>
        <trans-unit id="6dd47dabb9df79c85d4c9bbf8e536ca75ef3576e" translate="yes" xml:space="preserve">
          <source>Character positions in this list do not affect the actual binary storage values used for the characters &amp;mdash; binary values will still be those of the&lt;code&gt;NATIVE&lt;/code&gt;character set.</source>
          <target state="translated">このリストの文字位置は、文字に使用される実際のバイナリストレージ値には影響しません。バイナリ値は、 &lt;code&gt;NATIVE&lt;/code&gt; 文字セットの値のままです。</target>
        </trans-unit>
        <trans-unit id="c97e2e5b4b78422a55a87f515002b13b1f68e3fd" translate="yes" xml:space="preserve">
          <source>Character positions in this list do not affect the actual binary storage values used for the characters. Binary values will still be those of the &lt;code&gt;NATIVE&lt;/code&gt; character set.</source>
          <target state="translated">このリストの文字位置は、文字に使用される実際のバイナリストレージ値には影響しません。バイナリ値は、引き続き &lt;code&gt;NATIVE&lt;/code&gt; 文字セットの値になります。</target>
        </trans-unit>
        <trans-unit id="b6f59f08fd6d58c6725e21a9ec24e068148ec586" translate="yes" xml:space="preserve">
          <source>Characters</source>
          <target state="translated">Characters</target>
        </trans-unit>
        <trans-unit id="e9a243cc115ca2c9d82457002477fb2c95c7cc98" translate="yes" xml:space="preserve">
          <source>Class conditions evaluate the type of data that is currently stored in a data item.</source>
          <target state="translated">クラス条件は、現在データ項目に格納されているデータの種類を評価します。</target>
        </trans-unit>
        <trans-unit id="06ba9f8b51464a92c09ba8adb0428ae07c0698c2" translate="yes" xml:space="preserve">
          <source>Class-Condition Syntax</source>
          <target state="translated">クラス条件の構文</target>
        </trans-unit>
        <trans-unit id="6dcfeb045a3fd680afc99e0a6405f85f4b06bc0e" translate="yes" xml:space="preserve">
          <source>Class-Definition-Clause</source>
          <target state="translated">Class-Definition-Clause</target>
        </trans-unit>
        <trans-unit id="88225646933261b2af20b61cd0a15701c0f8d989" translate="yes" xml:space="preserve">
          <source>Clearly, even a non-programmer could at least conceptually understand what was going on! Over time, languages like FORTRAN evolved more robust variable names, and COBOL introduced a more formula-based syntactical capability for arithmetic operations, but FORTRAN was never as readable as COBOL.</source>
          <target state="translated">明らかに、ノンプログラマーであっても、少なくとも何が起こっているのかを概念的に理解することができました。時が経つにつれて、FORTRANのような言語はより堅牢な変数名を進化させ、COBOLは算術演算のためのより公式ベースの構文機能を導入しましたが、FORTRANはCOBOLほど可読性が高いものではありませんでした。</target>
        </trans-unit>
        <trans-unit id="732a5387092d26a94fef7e2ce8d5d9519c238b19" translate="yes" xml:space="preserve">
          <source>Closed with lock</source>
          <target state="translated">ロック付きクローズ</target>
        </trans-unit>
        <trans-unit id="3e7b28f577b1b916299b12ea5b8e92a3ed9e96c3" translate="yes" xml:space="preserve">
          <source>Cobol programs consist of a sequence of words and symbols. Words, which consist of sequences of letters (upper- and/or lower-case), digits, dashes (&amp;lsquo;</source>
          <target state="translated">COBOLプログラムは、一連の単語と記号で構成されています。文字（大文字および/または小文字）、数字、ダッシュ（ '）のシーケンスで構成される単語</target>
        </trans-unit>
        <trans-unit id="adac69379a626c2436948a4ef1792c7d719ef929" translate="yes" xml:space="preserve">
          <source>Code</source>
          <target state="translated">Code</target>
        </trans-unit>
        <trans-unit id="594422a8373a45016503112a0d76d479ebc2de36" translate="yes" xml:space="preserve">
          <source>Collating Sequence</source>
          <target state="translated">シーケンスの照合</target>
        </trans-unit>
        <trans-unit id="1d0c8304baedcf8e3a78982c2e7c0b04622bf2a0" translate="yes" xml:space="preserve">
          <source>Color</source>
          <target state="translated">Color</target>
        </trans-unit>
        <trans-unit id="5ff247b294c4c4680923f6b83955ad2dd9bcc50b" translate="yes" xml:space="preserve">
          <source>Colors may also be specified using a numeric non-edited identifier whose value is in the range 0-7.</source>
          <target state="translated">色は、値が0~7の範囲にある非編集の数値識別子を使用して指定することもできます。</target>
        </trans-unit>
        <trans-unit id="a03f9752614a149f260012e412a1b73ed0200eb0" translate="yes" xml:space="preserve">
          <source>Column 7 serves as an indicator in which one of five possible values will appear &amp;mdash; space, &lt;code&gt;D&lt;/code&gt; (or &lt;code&gt;d&lt;/code&gt;), &lt;code&gt;-&lt;/code&gt; (dash), &lt;code&gt;/&lt;/code&gt; or &lt;code&gt;*&lt;/code&gt;. The meanings of these characters are as follows:</source>
          <target state="translated">列7は、スペース、 &lt;code&gt;D&lt;/code&gt; （または &lt;code&gt;d&lt;/code&gt; ）、 &lt;code&gt;-&lt;/code&gt; （ダッシュ）、 &lt;code&gt;/&lt;/code&gt; または &lt;code&gt;*&lt;/code&gt; の5つの​​可能な値のいずれかが表示されるインジケーターとして機能します。これらの文字の意味は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="3da9b0a1bd95ee2ff92f0876a9bc1660e1b7f92d" translate="yes" xml:space="preserve">
          <source>Column 7 serves as an indicator in which one of five possible values will appear &amp;mdash; space,&lt;code&gt;D&lt;/code&gt;(or&lt;code&gt;d&lt;/code&gt;,&lt;code&gt;-&lt;/code&gt;(dash),&lt;code&gt;/&lt;/code&gt;or&lt;code&gt;*&lt;/code&gt; The meanings of these characters are as follows:</source>
          <target state="translated">列7は、スペース、 &lt;code&gt;D&lt;/code&gt; （または &lt;code&gt;d&lt;/code&gt; 、 &lt;code&gt;-&lt;/code&gt; （ダッシュ）、 &lt;code&gt;/&lt;/code&gt; または &lt;code&gt;*&lt;/code&gt; ）の5つの​​可能な値のいずれかが表示されるインジケーターとして機能します。これらの文字の意味は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="f92afaa3e8bfcd3ea4fa0e30b81b8a7e79d9e878" translate="yes" xml:space="preserve">
          <source>Column headings describing the fields within the detail group(s)</source>
          <target state="translated">詳細グループ内のフィールドを記述する列の見出し</target>
        </trans-unit>
        <trans-unit id="ef3b24c82e2e70a56915cb2e013177a3e224de2a" translate="yes" xml:space="preserve">
          <source>Combined Condition Syntax</source>
          <target state="translated">複合条件構文</target>
        </trans-unit>
        <trans-unit id="11bac06e449288d8a0080c4c6a977a78a032bea7" translate="yes" xml:space="preserve">
          <source>Comment Type</source>
          <target state="translated">タイプ</target>
        </trans-unit>
        <trans-unit id="94ef186c06d95cc1077474be4d410b632a210905" translate="yes" xml:space="preserve">
          <source>Comments that may be treated as code, typically for debugging purposes</source>
          <target state="translated">コードとして扱われる可能性のあるコメント、通常はデバッグ目的で使用されます。</target>
        </trans-unit>
        <trans-unit id="2fd8ee31128a27c3741cf64157f9abf402269ba4" translate="yes" xml:space="preserve">
          <source>Compatible Binary Integer</source>
          <target state="translated">互換性のある二進整数</target>
        </trans-unit>
        <trans-unit id="da8cf05ee405cd9a986668c8c46c9a8e120fd720" translate="yes" xml:space="preserve">
          <source>Compilation Group</source>
          <target state="translated">コンパイルグループ</target>
        </trans-unit>
        <trans-unit id="96cd345d12b5b7ca5ae139bb77e1a9c53007e491" translate="yes" xml:space="preserve">
          <source>Compilation Unit</source>
          <target state="translated">コンパイルユニット</target>
        </trans-unit>
        <trans-unit id="ee44cd6d5372fc490db806331bcc272c21b33e64" translate="yes" xml:space="preserve">
          <source>Compilations may be performed to generate dynamically-loadable modules (or dynamically-loadable libraries, as they are frequently called). These compilations are performed by using the</source>
          <target state="translated">コンパイルは、動的にロード可能なモジュール(または動的にロード可能なライブラリと呼ばれることもあります)を生成するために実行されることがあります。これらのコンパイルは</target>
        </trans-unit>
        <trans-unit id="e859ddacb886ecaac3920b7f115299577527697c" translate="yes" xml:space="preserve">
          <source>Compilations may be performed to generate dynamically-loadable modules (or dynamically-loadable libraries, as they are frequently called). These compilations are performed by using the&lt;code&gt;-m&lt;/code&gt;switch</source>
          <target state="translated">コンパイルは、動的にロード可能なモジュール（または頻繁に呼び出されるため、動的にロード可能なライブラリ）を生成するために実行できます。これらのコンパイルは、 &lt;code&gt;-m&lt;/code&gt; スイッチを使用して実行されます</target>
        </trans-unit>
        <trans-unit id="c27883a2a29651bc6269791ecb4e4a6de53939f0" translate="yes" xml:space="preserve">
          <source>Compile this program as follows (the assumption is made that you are executing the &lt;code&gt;cobc&lt;/code&gt; command from the directory in which the above program source code (subvsindex.cbl) exists.</source>
          <target state="translated">このプログラムを次のようにコンパイルします（上記のプログラムソースコード（subvsindex.cbl）が存在するディレクトリから &lt;code&gt;cobc&lt;/code&gt; コマンドを実行していることを前提としています。</target>
        </trans-unit>
        <trans-unit id="6218c92ed166d6dee1c3823d57775cd989a17afa" translate="yes" xml:space="preserve">
          <source>Compile this program as follows (the assumption is made that you are executing the&lt;code&gt;cobc&lt;/code&gt;command from the directory in which the above program source code (subvsindex.cbl) exists.</source>
          <target state="translated">このプログラムを次のようにコンパイルします（上記のプログラムソースコード（subvsindex.cbl）が存在するディレクトリから &lt;code&gt;cobc&lt;/code&gt; コマンドを実行していることを前提としています）。</target>
        </trans-unit>
        <trans-unit id="c4e180aae5f5ffed0f5284c8c7daee050f8017a2" translate="yes" xml:space="preserve">
          <source>Compiler directives are</source>
          <target state="translated">コンパイラのディレクティブは</target>
        </trans-unit>
        <trans-unit id="746fe304b6da04f2948db99dc5a6735e74cebf7a" translate="yes" xml:space="preserve">
          <source>Complete GnuCOBOL Program Syntax</source>
          <target state="translated">完全なGnuCOBOLプログラム構文</target>
        </trans-unit>
        <trans-unit id="e0f7f8b906be02847bd6c0bc57ead1c617c67102" translate="yes" xml:space="preserve">
          <source>Complex-Syntax-Clause</source>
          <target state="translated">Complex-Syntax-Clause</target>
        </trans-unit>
        <trans-unit id="7b6d3f0a4b7700d70eab7d3bfc0cf5ce99830923" translate="yes" xml:space="preserve">
          <source>Computer scientists will compare the two techniques implemented by the &lt;code&gt;SEARCH&lt;/code&gt; and &lt;code&gt;SEARCH ALL&lt;/code&gt; statements as follows:</source>
          <target state="translated">コンピュータ科学者がで実装二つの技術と比較します &lt;code&gt;SEARCH&lt;/code&gt; して &lt;code&gt;SEARCH ALL&lt;/code&gt; 、次のように文を：</target>
        </trans-unit>
        <trans-unit id="8e66b8e5477316fe83d734c891de408f9f788241" translate="yes" xml:space="preserve">
          <source>Computer scientists will compare the two techniques implemented by the&lt;code&gt;SEARCH&lt;/code&gt;and&lt;code&gt;SEARCH ALL&lt;/code&gt;statements as follows:</source>
          <target state="translated">コンピュータサイエンティストは、 &lt;code&gt;SEARCH&lt;/code&gt; ステートメントと &lt;code&gt;SEARCH ALL&lt;/code&gt; ステートメントによって実装された2つの手法を次のように比較します。</target>
        </trans-unit>
        <trans-unit id="f91f22436d30f1bdac4eaf08c14dfe256b5c5193" translate="yes" xml:space="preserve">
          <source>Computes and returns the base 10 logarithm of &lt;var&gt;number&lt;/var&gt; (a numeric literal or data item).</source>
          <target state="translated">計算戻るの10を底とする対数 &lt;var&gt;number&lt;/var&gt; （数値リテラルまたはデータ項目）。</target>
        </trans-unit>
        <trans-unit id="4691047b3448d97e560b5338ee30e62c3fe3b018" translate="yes" xml:space="preserve">
          <source>Computes and returns the natural logarithm (base</source>
          <target state="translated">自然対数を計算して返します。</target>
        </trans-unit>
        <trans-unit id="aa04e46eb1b113b087b3851e223aedd60a2a55a5" translate="yes" xml:space="preserve">
          <source>Computes and returns the value of 10 raised to the power specified by &lt;var&gt;number&lt;/var&gt; (a numeric literal or data item).</source>
          <target state="translated">計算戻る乗10の値によって指定された &lt;var&gt;number&lt;/var&gt; （数値リテラルまたはデータ項目）。</target>
        </trans-unit>
        <trans-unit id="cd64c6c2aa2b7724043a20f3696e0128eff17642" translate="yes" xml:space="preserve">
          <source>Computes and returns the value of the mathematical constant</source>
          <target state="translated">数学定数の値を計算して返します。</target>
        </trans-unit>
        <trans-unit id="1af62c2b68c3eb29ff07e6773d513d394791b6d1" translate="yes" xml:space="preserve">
          <source>Concatenate two or more strings</source>
          <target state="translated">2つ以上の文字列を連結する</target>
        </trans-unit>
        <trans-unit id="615d6ac378b703a386d796090691259a39659479" translate="yes" xml:space="preserve">
          <source>Condition names are Boolean (</source>
          <target state="translated">条件名はブール値(</target>
        </trans-unit>
        <trans-unit id="333d34a78170ebdea1656c8398a11eab37b54584" translate="yes" xml:space="preserve">
          <source>Condition names are Boolean (i.e. TRUE / FALSE) data items that receive their TRUE and FALSE values based upon the values of the non 88-level data item whose definition they immediately follow.</source>
          <target state="translated">条件名は、定義の直後に続く非88レベルのデータ項目の値に基づいてTRUEとFALSEの値を受け取るブール値(すなわちTRUE/FALSE)データ項目です。</target>
        </trans-unit>
        <trans-unit id="89151d00261c073f9243c411408f27c262aac1b5" translate="yes" xml:space="preserve">
          <source>Condition names are always defined subordinate to another (non 88-level) data item. That data item must be an elementary item. Whenever the parent data item assumes one of the values specified on the 88-level item&amp;rsquo;s &lt;code&gt;VALUE&lt;/code&gt; (see &lt;a href=&quot;#VALUE&quot;&gt;VALUE&lt;/a&gt;) clause, &lt;var&gt;condition-name-1&lt;/var&gt; will take on the value of &lt;code&gt;TRUE&lt;/code&gt;.</source>
          <target state="translated">条件名は常に別の（88レベル以外の）データ項目に従属して定義されます。そのデータ項目は基本項目である必要があります。親データ項目が88レベル項目の &lt;code&gt;VALUE&lt;/code&gt; （&lt;a href=&quot;#VALUE&quot;&gt;VALUEを&lt;/a&gt;参照）句で指定された値の1つを想定する場合は常に、 &lt;var&gt;condition-name-1&lt;/var&gt; は &lt;code&gt;TRUE&lt;/code&gt; の値を取ります。</target>
        </trans-unit>
        <trans-unit id="c87464dfce9a9aff3851d0944fefb1558383352f" translate="yes" xml:space="preserve">
          <source>Condition names are always defined subordinate to another (non 88-level) data item. That data item must be an elementary item. Whenever the parent data item assumes one of the values specified on the 88-level item&amp;rsquo;s&lt;code&gt;VALUE&lt;/code&gt;(see &lt;a href=&quot;#VALUE&quot;&gt;VALUE&lt;/a&gt;) clause, &amp;lt;</source>
          <target state="translated">条件名は常に、別の（88レベル以外の）データ項目に従属して定義されます。そのデータ項目は基本項目でなければなりません。親データアイテムが88レベルのアイテムの &lt;code&gt;VALUE&lt;/code&gt; （&lt;a href=&quot;#VALUE&quot;&gt;VALUEを&lt;/a&gt;参照）句で指定された値の1つを想定する場合は常に、&amp;lt;</target>
        </trans-unit>
        <trans-unit id="027a11b37533ca20669bb17281d210c5767e61eb" translate="yes" xml:space="preserve">
          <source>Condition names do not occupy any storage.</source>
          <target state="translated">条件名はストレージを占有しません。</target>
        </trans-unit>
        <trans-unit id="87c70d1eb416499e14f1ef27cbb2bafdd783e379" translate="yes" xml:space="preserve">
          <source>Conditional expressions are expressions which identify the circumstances under which a program may take an action or cease taking an action. As such, conditional expressions produce a value of &lt;code&gt;TRUE&lt;/code&gt; or &lt;code&gt;FALSE&lt;/code&gt;.</source>
          <target state="translated">条件式は、プログラムがアクションを実行したり、アクションを停止したりする可能性のある状況を識別する式です。そのため、条件式は &lt;code&gt;TRUE&lt;/code&gt; または &lt;code&gt;FALSE&lt;/code&gt; の値を生成します。</target>
        </trans-unit>
        <trans-unit id="300654fa157f6c6e091010b7777c8e3f6af9ccc2" translate="yes" xml:space="preserve">
          <source>Conflicting attribute</source>
          <target state="translated">競合属性</target>
        </trans-unit>
        <trans-unit id="bd243da61bc83e255c691b0eeb1676f5cf315d17" translate="yes" xml:space="preserve">
          <source>Consider</source>
          <target state="translated">Consider</target>
        </trans-unit>
        <trans-unit id="fdb2d9eaefe67e778b752e4f472db4c9da926388" translate="yes" xml:space="preserve">
          <source>Consider including a trailing descriptor of the nature of all data items in their names. The following chart presents a variety of such descriptors the author has encountered and used through the years.</source>
          <target state="translated">すべてのデータ項目の名前には、その性質を表す末尾の記述子を含めることを検討してください。次の図は、筆者が長年にわたって遭遇し、使用してきたさまざまな記述子を示しています。</target>
        </trans-unit>
        <trans-unit id="49ad35a272291924fe1567effd78bef2707d1787" translate="yes" xml:space="preserve">
          <source>Consider including an acronym to be inserted into the name of any data item defined directly or indirectly subordinate to an 01-level item, typically to be specified after any section-level tag, if you&amp;rsquo;re using them. For example, consider the names used in the following structure:</source>
          <target state="translated">01レベルのアイテムに直接または間接的に従属して定義されているデータアイテムの名前に挿入する頭字語を含めることを検討してください。通常、セクションレベルのタグの後に指定します。たとえば、次の構造で使用されている名前を考えてみます。</target>
        </trans-unit>
        <trans-unit id="3111a113fb90bb672247e425589adaeae2d968a2" translate="yes" xml:space="preserve">
          <source>Consider using &lt;code&gt;SET ENVIRONMENT&lt;/code&gt; (see &lt;a href=&quot;#SET-ENVIRONMENT&quot;&gt;SET ENVIRONMENT&lt;/a&gt;) in lieu of &lt;code&gt;DISPLAY&lt;/code&gt; to set environment variables as it is much simpler.</source>
          <target state="translated">使用を検討して &lt;code&gt;SET ENVIRONMENT&lt;/code&gt; を（参照&lt;a href=&quot;#SET-ENVIRONMENT&quot;&gt;SET ENVIRONMENTを&lt;/a&gt;する代わりに） &lt;code&gt;DISPLAY&lt;/code&gt; それがはるかに簡単であるように環境変数を設定します。</target>
        </trans-unit>
        <trans-unit id="474092c4530711a5712f2088d0c7006e1c6ea236" translate="yes" xml:space="preserve">
          <source>Consider using&lt;code&gt;SET ENVIRONMENT&lt;/code&gt;(see &lt;a href=&quot;#SET-ENVIRONMENT&quot;&gt;SET ENVIRONMENT&lt;/a&gt;) in lieu of&lt;code&gt;DISPLAY&lt;/code&gt;to set environment variables as it is much simpler.</source>
          <target state="translated">使用を検討して &lt;code&gt;SET ENVIRONMENT&lt;/code&gt; を（参照&lt;a href=&quot;#SET-ENVIRONMENT&quot;&gt;SET ENVIRONMENTを&lt;/a&gt;する代わりに） &lt;code&gt;DISPLAY&lt;/code&gt; それがはるかに簡単であるように環境変数を設定します。</target>
        </trans-unit>
        <trans-unit id="cd60aa178f4b05c8b4e18662c70566d29b29c05b" translate="yes" xml:space="preserve">
          <source>Console output when run (user input follows the colons on the prompts for input):</source>
          <target state="translated">実行時のコンソール出力(ユーザー入力は入力プロンプトのコロンに続く)。</target>
        </trans-unit>
        <trans-unit id="96c096a812a6aebfa49142bbdbe0db4a5434e650" translate="yes" xml:space="preserve">
          <source>Constants defined in this way become undefined once an &lt;code&gt;END PROGRAM&lt;/code&gt; or &lt;code&gt;END FUNCTION&lt;/code&gt; is encountered in the input source.</source>
          <target state="translated">この方法で定義された定数は、入力ソースで &lt;code&gt;END PROGRAM&lt;/code&gt; または &lt;code&gt;END FUNCTION&lt;/code&gt; が検出されると未定義になります。</target>
        </trans-unit>
        <trans-unit id="482dcfb6a26e7cc8dbfee8b9c6882a08cb82b778" translate="yes" xml:space="preserve">
          <source>Constants defined in this way become undefined once an&lt;code&gt;END PROGRAM&lt;/code&gt;or&lt;code&gt;END FUNCTION&lt;/code&gt;is encountered in the input source.</source>
          <target state="translated">この方法で定義された定数は、 &lt;code&gt;END PROGRAM&lt;/code&gt; または &lt;code&gt;END FUNCTION&lt;/code&gt; が入力ソースで検出されると未定義になります。</target>
        </trans-unit>
        <trans-unit id="97f677ffe8002bb978e6196b88b1b9221d3315cd" translate="yes" xml:space="preserve">
          <source>Consult the documentation on the</source>
          <target state="translated">のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="f3ab4e8e93cadb02c8891ed067637bcc601d5d17" translate="yes" xml:space="preserve">
          <source>Consult the documentation on the   &lt;code&gt;COB_PRE_LOAD&lt;/code&gt; run-time environment variable,   &lt;code&gt;COB_PHYSICAL_CANCEL&lt;/code&gt; run-time environment variable and   &lt;code&gt;COB_LOAD_CASE&lt;/code&gt; run-time environment variable run-time environment variables (see &lt;a href=&quot;#Run-Time-Environment-Variables&quot;&gt;Run Time Environment Variables&lt;/a&gt;) for additional options when using dynamically-loadable modules.</source>
          <target state="translated">上のドキュメントを参照してください &lt;code&gt;COB_PRE_LOAD&lt;/code&gt; ランタイム環境変数を、 &lt;code&gt;COB_PHYSICAL_CANCEL&lt;/code&gt; 実行時の環境変数と &lt;code&gt;COB_LOAD_CASE&lt;/code&gt; の実行時の環境変数のランタイム環境変数（参照&lt;a href=&quot;#Run-Time-Environment-Variables&quot;&gt;ランタイム環境変数の&lt;/a&gt;追加オプション用）動的にロード可能なモジュールを使用しました。</target>
        </trans-unit>
        <trans-unit id="aece2a78e16b7c77ba476b001a3e284cd35e2b2c" translate="yes" xml:space="preserve">
          <source>Contain a leading numeric component (for example: &lt;code&gt;2000-Update-Customer&lt;/code&gt;), AND&amp;hellip;</source>
          <target state="translated">主要な数値コンポーネント（例： &lt;code&gt;2000-Update-Customer&lt;/code&gt; ）、および&amp;hellip;を含む</target>
        </trans-unit>
        <trans-unit id="ee9d7834b4e03028e401f780d9d177af07cb943c" translate="yes" xml:space="preserve">
          <source>Contain a leading numeric component (for example:&lt;code&gt;2000-Update-Customer&lt;/code&gt;, AND&amp;hellip;</source>
          <target state="translated">先頭の数値コンポーネントを含む（例： &lt;code&gt;2000-Update-Customer&lt;/code&gt; 、AND&amp;hellip;）</target>
        </trans-unit>
        <trans-unit id="d504f89e29051ac2c61a4e1307b823272b01fbfa" translate="yes" xml:space="preserve">
          <source>Contained Subprograms</source>
          <target state="translated">含まれているサブプログラム</target>
        </trans-unit>
        <trans-unit id="bfd6778fd4ac82c10d85f3d0a68e06cc492e0593" translate="yes" xml:space="preserve">
          <source>Contrast this function with the &lt;code&gt;BYTE-LENGTH&lt;/code&gt; (see &lt;a href=&quot;#BYTE_002dLENGTH&quot;&gt;BYTE-LENGTH&lt;/a&gt;) and &lt;code&gt;LENGTH-AN&lt;/code&gt; (see &lt;a href=&quot;#LENGTH_002dAN&quot;&gt;LENGTH-AN&lt;/a&gt;) functions.</source>
          <target state="translated">で、この機能を対比 &lt;code&gt;BYTE-LENGTH&lt;/code&gt; （参照&lt;a href=&quot;#BYTE_002dLENGTH&quot;&gt;バイト長の&lt;/a&gt;）と &lt;code&gt;LENGTH-AN&lt;/code&gt; （参照&lt;a href=&quot;#LENGTH_002dAN&quot;&gt;LENGTH-AN&lt;/a&gt;関数）。</target>
        </trans-unit>
        <trans-unit id="32b3d87c6ceda12546f190f2210a22df0cdf6e15" translate="yes" xml:space="preserve">
          <source>Contrast this function with the&lt;code&gt;BYTE-LENGTH&lt;/code&gt;(see &lt;a href=&quot;#BYTE_002dLENGTH&quot;&gt;BYTE-LENGTH&lt;/a&gt;) and&lt;code&gt;LENGTH-AN&lt;/code&gt;(see &lt;a href=&quot;#LENGTH_002dAN&quot;&gt;LENGTH-AN&lt;/a&gt;) functions.</source>
          <target state="translated">で、この機能を対比 &lt;code&gt;BYTE-LENGTH&lt;/code&gt; （参照&lt;a href=&quot;#BYTE_002dLENGTH&quot;&gt;バイト長の&lt;/a&gt;）と &lt;code&gt;LENGTH-AN&lt;/code&gt; （参照&lt;a href=&quot;#LENGTH_002dAN&quot;&gt;LENGTH-AN&lt;/a&gt;関数）。</target>
        </trans-unit>
        <trans-unit id="a7e40a5d58b3551418cee9da955b4b9a215b32d2" translate="yes" xml:space="preserve">
          <source>Contrast this with the &lt;code&gt;LENGTH&lt;/code&gt; (see &lt;a href=&quot;#LENGTH&quot;&gt;LENGTH&lt;/a&gt;) function.</source>
          <target state="translated">これを &lt;code&gt;LENGTH&lt;/code&gt; （&lt;a href=&quot;#LENGTH&quot;&gt;LENGTHを&lt;/a&gt;参照）関数と比較してください。</target>
        </trans-unit>
        <trans-unit id="c13b5b85342bf60c0e7b3cad62d98a00d84bed25" translate="yes" xml:space="preserve">
          <source>Contrast this with the&lt;code&gt;LENGTH&lt;/code&gt;(see &lt;a href=&quot;#LENGTH&quot;&gt;LENGTH&lt;/a&gt;) function.</source>
          <target state="translated">これを &lt;code&gt;LENGTH&lt;/code&gt; （&lt;a href=&quot;#LENGTH&quot;&gt;LENGTHを&lt;/a&gt;参照）関数と比較してください。</target>
        </trans-unit>
        <trans-unit id="d864d1d594bb58da63124b3e532077a2280da211" translate="yes" xml:space="preserve">
          <source>Control Break</source>
          <target state="translated">制御ブレーク</target>
        </trans-unit>
        <trans-unit id="e707dbac72bfee188a71125817eb3d24f8da1780" translate="yes" xml:space="preserve">
          <source>Control Field</source>
          <target state="translated">コントロールフィールド</target>
        </trans-unit>
        <trans-unit id="960257afeb12f77fa6f8f055108e92a370b0072a" translate="yes" xml:space="preserve">
          <source>Control Footing</source>
          <target state="translated">コントロールフーチング</target>
        </trans-unit>
        <trans-unit id="b37055601ddd24b634819c08af5e0ee3aec0c2f5" translate="yes" xml:space="preserve">
          <source>Control Heading</source>
          <target state="translated">制御見出し</target>
        </trans-unit>
        <trans-unit id="3089ab53c60beb89e389be8470443c8bae92e074" translate="yes" xml:space="preserve">
          <source>Control Hierarchy</source>
          <target state="translated">制御階層</target>
        </trans-unit>
        <trans-unit id="1bef2ffd2d898c95784379f9d8d159b85d5b9c39" translate="yes" xml:space="preserve">
          <source>Control will return back to the&lt;code&gt;PERFORM&lt;/code&gt; where &amp;mdash; if&lt;code&gt;WITH TEST AFTER&lt;/code&gt;was specified &amp;mdash; &amp;lt;</source>
          <target state="translated">コントロールは &lt;code&gt;PERFORM&lt;/code&gt; に戻ります &lt;code&gt;WITH TEST AFTER&lt;/code&gt; が指定されている場合、&amp;lt;</target>
        </trans-unit>
        <trans-unit id="2f813658dc69bc55b7f2ce4bbc17a2a51345df0a" translate="yes" xml:space="preserve">
          <source>Control will then proceed to the statement following the &lt;code&gt;END-EVALUATE&lt;/code&gt; or the first statement that follows the next period if there is no &lt;code&gt;END-EVALUATE&lt;/code&gt;. If,however, the &lt;var&gt;imperative-statement-other&lt;/var&gt; included a &lt;code&gt;GO TO&lt;/code&gt; statement, and that &lt;code&gt;GO TO&lt;/code&gt; was executed, then control will transfer to the procedure named on the &lt;code&gt;GO TO&lt;/code&gt; instead.</source>
          <target state="translated">その後、制御は次の文に進みます &lt;code&gt;END-EVALUATE&lt;/code&gt; または全く存在しない場合、次の期間の後に続く最初の文 &lt;code&gt;END-EVALUATE&lt;/code&gt; が。ただし、 &lt;var&gt;imperative-statement-other&lt;/var&gt; &lt;code&gt;GO TO&lt;/code&gt; ステートメントが含まれていて、その &lt;code&gt;GO TO&lt;/code&gt; が実行された場合、制御は代わりに &lt;code&gt;GO TO&lt;/code&gt; 指定されたプロシージャに移ります。</target>
        </trans-unit>
        <trans-unit id="6b631a4ffc81ee3a9a3caa199af3dfcb4b9eebb2" translate="yes" xml:space="preserve">
          <source>Control will then proceed to the statement following the&lt;code&gt;END-EVALUATE&lt;/code&gt;or the first statement that follows the next period if there is no&lt;code&gt;END-EVALUATE&lt;/code&gt; If,however, the &amp;lt;</source>
          <target state="translated">その後、制御は次の文に進みます &lt;code&gt;END-EVALUATE&lt;/code&gt; または全く存在しない場合、次の期間の後に続く最初の文 &lt;code&gt;END-EVALUATE&lt;/code&gt; 、しかし、場合には&amp;lt;</target>
        </trans-unit>
        <trans-unit id="6821ab076fc8e4c97eea6b8244b17e70476d24ee" translate="yes" xml:space="preserve">
          <source>Controlling the pagination of reports, including:</source>
          <target state="translated">レポートのページ分割を制御します。</target>
        </trans-unit>
        <trans-unit id="b08eadae7bddf7f7dd80e9f64aceb10ba5a6628d" translate="yes" xml:space="preserve">
          <source>Conversion of a numeric time or date to a formatted character string</source>
          <target state="translated">数値の時刻または日付をフォーマットされた文字列に変換します。</target>
        </trans-unit>
        <trans-unit id="19d9d5fc5f00a5f0448d53b676ac0c4328ba347f" translate="yes" xml:space="preserve">
          <source>Convert a binary value to its corresponding character in the program&amp;rsquo;s character set</source>
          <target state="translated">バイナリ値をプログラムの文字セット内の対応する文字に変換します</target>
        </trans-unit>
        <trans-unit id="75a17a1758817b5ddc7dcf74881e440650a52c7c" translate="yes" xml:space="preserve">
          <source>Convert a character string to lower-case</source>
          <target state="translated">文字列を小文字に変換する</target>
        </trans-unit>
        <trans-unit id="160bf37902105bc7898b5c3f6d51408ab2a10135" translate="yes" xml:space="preserve">
          <source>Convert a character string to only printable characters</source>
          <target state="translated">文字列を印刷可能な文字のみに変換</target>
        </trans-unit>
        <trans-unit id="1da23cf598b2a0f519db492fae32d913e3bdb127" translate="yes" xml:space="preserve">
          <source>Convert a character string to upper-case</source>
          <target state="translated">文字列を大文字に変換する</target>
        </trans-unit>
        <trans-unit id="61e41cbc63c504ad81ab6c2bd36aa274a7b3167d" translate="yes" xml:space="preserve">
          <source>Convert a character to its numeric value in the program&amp;rsquo;s character set</source>
          <target state="translated">プログラムの文字セットで文字を数値に変換します</target>
        </trans-unit>
        <trans-unit id="1dba2ae50d005d2e3eb8ef0eaeba495d4e1d4209" translate="yes" xml:space="preserve">
          <source>Converts the eight-digit Gregorian &lt;var&gt;date&lt;/var&gt; (a numeric integer data item or literal) from yyyymmdd format to the format appropriate to the current locale. On a Windows system, this will be the &amp;ldquo;short date&amp;rdquo; format as set using Control Panel.</source>
          <target state="translated">8桁のグレゴリオ暦の &lt;var&gt;date&lt;/var&gt; （数値の整数データ項目またはリテラル）をyyyymmdd形式から現在のロケールに適した形式に変換します。Windowsシステムでは、これはコントロールパネルを使用して設定された「短い日付」形式になります。</target>
        </trans-unit>
        <trans-unit id="a3a0ab9e2ac8dad5ac8957d3acd06f7b1400fe00" translate="yes" xml:space="preserve">
          <source>Converts the four- (hhmm) or six-digit (hhmmss) &lt;var&gt;time&lt;/var&gt; (a numeric integer data item or literal) to a format appropriate to the current locale. On a Windows system, this will be the &amp;ldquo;time&amp;rdquo; format as set using Control Panel.</source>
          <target state="translated">4桁（hhmm）または6桁（hhmmss）の &lt;var&gt;time&lt;/var&gt; （数値の整数データ項目またはリテラル）を現在のロケールに適した形式に変換します。Windowsシステムでは、これはコントロールパネルを使用して設定された「時間」形式になります。</target>
        </trans-unit>
        <trans-unit id="f548344bd9aadae14bab2f0dba4aebd5f4bcb825" translate="yes" xml:space="preserve">
          <source>Converts the number of &lt;var&gt;seconds&lt;/var&gt; since midnight (a numeric integer data item or literal) to a format appropriate to the current locale. On a Windows system, this will be the &amp;ldquo;time&amp;rdquo; format as set using Control Panel.</source>
          <target state="translated">真夜中からの &lt;var&gt;seconds&lt;/var&gt; 数（数値整数データ項目またはリテラル）を現在のロケールに適した形式に変換します。Windowsシステムでは、これはコントロールパネルを使用して設定された「時間」形式になります。</target>
        </trans-unit>
        <trans-unit id="7dd804bb2edf5c6b71e08057b1fe7806375aa80d" translate="yes" xml:space="preserve">
          <source>Copybook</source>
          <target state="translated">Copybook</target>
        </trans-unit>
        <trans-unit id="e2aa0e7c3bd507e669da6cc819890494774937c3" translate="yes" xml:space="preserve">
          <source>Copybooks containing code intended for the identification division. These will be rare as you almost never encounter copied code in the identification division.</source>
          <target state="translated">識別部門のために意図されたコードを含むコピーブック。識別部門でコピーされたコードに遭遇することはほとんどないので、これらは稀でしょう。</target>
        </trans-unit>
        <trans-unit id="b6cb73f8aab879264878f9d5268c50dc15b63de2" translate="yes" xml:space="preserve">
          <source>Copybooks containing code intended for use in the environment division. These copybooks are generally used for predefined &lt;code&gt;SPECIAL-NAMES&lt;/code&gt; (see &lt;a href=&quot;#SPECIAL_002dNAMES&quot;&gt;SPECIAL-NAMES&lt;/a&gt;) or &lt;code&gt;FILE-CONTROL&lt;/code&gt; (see &lt;a href=&quot;#INPUT_002dOUTPUT-SECTION&quot;&gt;INPUT-OUTPUT SECTION&lt;/a&gt;) syntax,</source>
          <target state="translated">環境部門での使用を目的としたコードを含むコピーブック。これらのコピーブックは、一般的に事前に定義するために使用される &lt;code&gt;SPECIAL-NAMES&lt;/code&gt; （参照&lt;a href=&quot;#SPECIAL_002dNAMES&quot;&gt;SPECIAL-NAMESの&lt;/a&gt;）または &lt;code&gt;FILE-CONTROL&lt;/code&gt; （参照&lt;a href=&quot;#INPUT_002dOUTPUT-SECTION&quot;&gt;入出力セクション&lt;/a&gt;）構文</target>
        </trans-unit>
        <trans-unit id="ae4bb1674f81c29f3e27ad4dcb083e8655d69118" translate="yes" xml:space="preserve">
          <source>Copybooks containing code intended for use in the environment division. These copybooks are generally used for predefined&lt;code&gt;SPECIAL-NAMES&lt;/code&gt;(see &lt;a href=&quot;#SPECIAL_002dNAMES&quot;&gt;SPECIAL-NAMES&lt;/a&gt;) or&lt;code&gt;FILE-CONTROL&lt;/code&gt;(see &lt;a href=&quot;#INPUT_002dOUTPUT-SECTION&quot;&gt;INPUT-OUTPUT SECTION&lt;/a&gt;) syntax,</source>
          <target state="translated">環境部門での使用を目的としたコードを含むコピーブック。これらのコピーブックは、一般的に事前に定義するために使用される &lt;code&gt;SPECIAL-NAMES&lt;/code&gt; （参照&lt;a href=&quot;#SPECIAL_002dNAMES&quot;&gt;SPECIAL-NAMESの&lt;/a&gt;）または &lt;code&gt;FILE-CONTROL&lt;/code&gt; （参照&lt;a href=&quot;#INPUT_002dOUTPUT-SECTION&quot;&gt;入出力セクション&lt;/a&gt;）構文</target>
        </trans-unit>
        <trans-unit id="2518777d2abfc517966e28f0596ae3116363bcc5" translate="yes" xml:space="preserve">
          <source>Copybooks that contain data definitions.</source>
          <target state="translated">データ定義を含むコピーブック。</target>
        </trans-unit>
        <trans-unit id="752aff643f4fc290408c7437031076a71eebc79b" translate="yes" xml:space="preserve">
          <source>Copybooks that contain executable instructions.</source>
          <target state="translated">実行可能な命令が含まれているコピーブック</target>
        </trans-unit>
        <trans-unit id="b6a8b5660c828f3b2c93bf54e7099762c731d4dd" translate="yes" xml:space="preserve">
          <source>Copying files</source>
          <target state="translated">ファイルのコピー</target>
        </trans-unit>
        <trans-unit id="154784820baffd42626a2bcde20aa0381aaae095" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 2000, 2001, 2002, 2007, 2008 Free Software Foundation, Inc.</source>
          <target state="translated">Copyright&amp;copy;2000、2001、2002、2007、2008 Free Software Foundation、Inc.</target>
        </trans-unit>
        <trans-unit id="cb54a4d008dbbbce9c32d6cda871fb64051a8eba" translate="yes" xml:space="preserve">
          <source>Could be abbreviated as:</source>
          <target state="translated">略すこともできます。</target>
        </trans-unit>
        <trans-unit id="89ea001ccab46e56818743fe353b4dbd4f087131" translate="yes" xml:space="preserve">
          <source>Count occurrences of sub strings in a larger string</source>
          <target state="translated">より大きな文字列の中のサブ文字列の出現回数をカウントします。</target>
        </trans-unit>
        <trans-unit id="8e7fb87ed35f3e95693d0d85ac2e5bb078a3fccb" translate="yes" xml:space="preserve">
          <source>Creating a directory</source>
          <target state="translated">ディレクトリの作成</target>
        </trans-unit>
        <trans-unit id="364920436a8c309c1b52c0fc8087c58a7ed12784" translate="yes" xml:space="preserve">
          <source>Creating, Opening, Closing, Reading and Writing byte-stream files</source>
          <target state="translated">バイトストリームファイルの作成、オープン、クロージング、読み込み、書き込み</target>
        </trans-unit>
        <trans-unit id="4aa8c2406ca6f6f050ab445a1eded2c5fd854c40" translate="yes" xml:space="preserve">
          <source>Critics of COBOL frequently focus on the wordiness of the language, often citing the case of a so-called &amp;ldquo;Hello World&amp;rdquo; program as the &amp;ldquo;proof&amp;rdquo; that COBOL is so much more tedious to program in than more &amp;ldquo;modern&amp;rdquo; languages. This tedium is cited as such a significant impact to programmer productivity that, in their opinions, COBOL can&amp;rsquo;t go away quickly enough.</source>
          <target state="translated">COBOLの批評家は、言語の冗長性に焦点を当てることが多く、いわゆる「Hello World」プログラムの事例を、COBOLがより「現代」の言語よりもはるかに面倒であるという「証拠」としてしばしば引用します。この退屈さは、プログラマーの生産性に大きな影響を与えるため、彼らの意見では、COBOLを十分に迅速になくすことはできないと言われています。</target>
        </trans-unit>
        <trans-unit id="46ee87eda2a116ad83be4c0a9225f45f1d31eac4" translate="yes" xml:space="preserve">
          <source>Ctrl Left Dbl Click</source>
          <target state="translated">Ctrl 左 Dbl クリック</target>
        </trans-unit>
        <trans-unit id="aa900b51dcf306bc11c11bbb590b88d6477fb971" translate="yes" xml:space="preserve">
          <source>Ctrl Left Pressed</source>
          <target state="translated">Ctrl 左押し</target>
        </trans-unit>
        <trans-unit id="fb1f4ce8a945df3e7f7abdda97756f9dee831347" translate="yes" xml:space="preserve">
          <source>Ctrl Left Released</source>
          <target state="translated">Ctrl 左リリース</target>
        </trans-unit>
        <trans-unit id="774ee7df0195fc8c3e29e8e19d923b3ab51104d9" translate="yes" xml:space="preserve">
          <source>Ctrl Mid Dbl Click</source>
          <target state="translated">Ctrl ミッド Dbl クリック</target>
        </trans-unit>
        <trans-unit id="4e09dc1495d32dac4a4ad06eeb06e60f63dbb599" translate="yes" xml:space="preserve">
          <source>Ctrl Mid Pressed</source>
          <target state="translated">Ctrl 中押し</target>
        </trans-unit>
        <trans-unit id="a373db519179ada9bd63ffa3f7fb3ff7454a6597" translate="yes" xml:space="preserve">
          <source>Ctrl Mid Released</source>
          <target state="translated">Ctrl Mid リリース</target>
        </trans-unit>
        <trans-unit id="738257e354f70cc1f4633fc440e0728c88b50ac2" translate="yes" xml:space="preserve">
          <source>Ctrl Move</source>
          <target state="translated">Ctrl移動</target>
        </trans-unit>
        <trans-unit id="1ccc1603025edcdc2ab540566f0b8e7ff97b67ad" translate="yes" xml:space="preserve">
          <source>Ctrl Right Dbl Click</source>
          <target state="translated">Ctrl 右クリック</target>
        </trans-unit>
        <trans-unit id="9837de0b42bed3caf88ac2868a015a7e8a8d1cba" translate="yes" xml:space="preserve">
          <source>Ctrl Right Pressed</source>
          <target state="translated">Ctrl 右押し</target>
        </trans-unit>
        <trans-unit id="c1a31f8f6f885d1fa7cfa25566546698c941e142" translate="yes" xml:space="preserve">
          <source>Ctrl Right Released</source>
          <target state="translated">Ctrl 右リリース</target>
        </trans-unit>
        <trans-unit id="0aea7faf497d7c8e758faaf304920bbbcf84206f" translate="yes" xml:space="preserve">
          <source>Ctrl Wheel Down</source>
          <target state="translated">Ctrlホイールダウン</target>
        </trans-unit>
        <trans-unit id="1e802315f8a72bb3f510a9aaf4d04cb5a2a8413c" translate="yes" xml:space="preserve">
          <source>Ctrl Wheel Left</source>
          <target state="translated">Ctrl ホイール 左</target>
        </trans-unit>
        <trans-unit id="c2b77c0637aefb35b4640b9ddfcbffd48ca4fccd" translate="yes" xml:space="preserve">
          <source>Ctrl Wheel Right</source>
          <target state="translated">Ctrl ホイール 右</target>
        </trans-unit>
        <trans-unit id="c34fd28d165ab003ebba59bc89f0f84d110021ba" translate="yes" xml:space="preserve">
          <source>Ctrl Wheel Up</source>
          <target state="translated">Ctrl ホイールアップ</target>
        </trans-unit>
        <trans-unit id="03cc92b2de6a93842702049006d74479339df02c" translate="yes" xml:space="preserve">
          <source>Current date in Gregorian form</source>
          <target state="translated">グレゴリオ暦での現在の日付</target>
        </trans-unit>
        <trans-unit id="1ff8e9efb80c4e62bf5d39a66f9af66f72010f2d" translate="yes" xml:space="preserve">
          <source>Current date in Julian form</source>
          <target state="translated">ユリウス形式の現在の日付</target>
        </trans-unit>
        <trans-unit id="cb8c3f41764642d74e599b187ee3571c5fb3c0dd" translate="yes" xml:space="preserve">
          <source>Current programming philosophy would prefer the use of the &lt;code&gt;EVALUATE&lt;/code&gt; statement to that of this form of the &lt;code&gt;GO TO&lt;/code&gt; statement.</source>
          <target state="translated">現在のプログラミング哲学は使用を好むだろう &lt;code&gt;EVALUATE&lt;/code&gt; のこの形式のものに声明を &lt;code&gt;GO TO&lt;/code&gt; の声明。</target>
        </trans-unit>
        <trans-unit id="38570a962a72c984faa65f99b9fe8bbed297680c" translate="yes" xml:space="preserve">
          <source>Current programming philosophy would prefer the use of the&lt;code&gt;EVALUATE&lt;/code&gt;statement to that of this form of the&lt;code&gt;GO TO&lt;/code&gt;statement.</source>
          <target state="translated">現在のプログラミング哲学では、この形式の &lt;code&gt;GO TO&lt;/code&gt; ステートメントよりも &lt;code&gt;EVALUATE&lt;/code&gt; ステートメントの使用を好むでしょう。</target>
        </trans-unit>
        <trans-unit id="51e91e511c6d01b417d01b7b04a3c2d45ae116c0" translate="yes" xml:space="preserve">
          <source>Currently, the only allowable value for the flags argument is 0. This argument may be specified either as a numeric literal or as a &lt;code&gt;PIC X(1) USAGE COMP-X&lt;/code&gt; data item.</source>
          <target state="translated">現在、flags引数の唯一の許容値は0です。この引数は、数値リテラルまたは &lt;code&gt;PIC X(1) USAGE COMP-X&lt;/code&gt; データ項目として指定できます。</target>
        </trans-unit>
        <trans-unit id="176c3c5df0bbd0c7ccd68b1562b9f4c3348a64ae" translate="yes" xml:space="preserve">
          <source>Currently, the only allowable value for the flags argument is 0. This argument may be specified either as a numeric literal or as a&lt;code&gt;PIC X(1) USAGE COMP-X&lt;/code&gt;data item.</source>
          <target state="translated">現在、flags引数の唯一の許容値は0です。この引数は、数値リテラルまたは &lt;code&gt;PIC X(1) USAGE COMP-X&lt;/code&gt; データ項目として指定できます。</target>
        </trans-unit>
        <trans-unit id="93fe007c4c23a7d4870c091f49c3529c51d38ef8" translate="yes" xml:space="preserve">
          <source>Cyan (Turquoise): COB-COLOR-CYAN</source>
          <target state="translated">シアン(ターコイズ)。コブカラーシアン</target>
        </trans-unit>
        <trans-unit id="50c9e8d5fc98727b4bbc93cf5d64a68db647f04f" translate="yes" xml:space="preserve">
          <source>D</source>
          <target state="translated">D</target>
        </trans-unit>
        <trans-unit id="d2b0ee310620d9febc825ce9071e2fb5b6a37cd7" translate="yes" xml:space="preserve">
          <source>D/d</source>
          <target state="translated">D/d</target>
        </trans-unit>
        <trans-unit id="1c70179c39c919a483e3990fcff0e11a83f76d8d" translate="yes" xml:space="preserve">
          <source>DASHED, DATA-COLUMNS, DATA-POINTER, DATA-TYPES, DATA, DATE-COMPILED, DATE-ENTRY, DATE-MODIFIED, DATE-OF-INTEGER, DATE-TO-YYYYMMDD, DATE-WRITTEN, DATE, DAY-OF-INTEGER, DAY-OF-WEEK, DAY-TO-YYYYDDD, DAY, DEBUGGING, DEBUG-ITEM, DECIMAL-POINT, DECLARATIVES, DEFAULT-BUTTON, DEFAULT-FONT, DEFAULT, DELETE, DELIMITED, DELIMITER, DEPENDING, DESCENDING, DESTINATION, DESTROY, DETAIL, DE, DISABLE, DISC, DISK, DISPLAY-COLUMNS, DISPLAY-FORMAT, DISPLAY-OF, DISPLAY, DIVIDER-COLOR, DIVIDERS, DIVIDE, DIVISION, DOTDASH, DOTTED, DOUBLE, DOWN, DRAG-COLOR, DROP-DOWN, DROP-LIST, DUPLICATES, DYNAMIC</source>
          <target state="translated">DASHED、DATA-COLUMNS、DATA-POINTER、DATA-TYPE、DATA、DATE-COMPILED、DATE-ENTRY、DATE-MODIFIED、DATE-OF-INTEGER、DATE-TO-YYYYMMDD、DATE-WRITTEN、DATE、DATE、DAY-OF-INTEGER、DAY-OF-WEEK、DAY-TO-YYYYDDD、DAY、DEBUGGING、DEBUGUG-ITEM、DECIMAL-POINT、DECLARATIVES、DEFAULT-BUTTON、DEFAULT-FONT、DEFAULT。DELETE,DELIMITED,DELIMITER,DEPENDING,DESCENDING,DESTINATION,DESTROY,DETAIL,DE,DISABLE,DISC,DISK,DISPLAY-COLUMNS,DISPLAY-FORMAT,DISPLAY-OF,DISPLAY,DIVIDER-COLOR,DIVIDERS,DIVIDE,DIVISION,DOTDASH,DOTTED,DOUBLE,DOWN,DRAG-COLOR,DROP-DOWN,DROP-LIST,DUPLICATES,DYNAMIC</target>
        </trans-unit>
        <trans-unit id="cacf54f34dffa98ab8fe95ec01049b87cf34a8a2" translate="yes" xml:space="preserve">
          <source>DATA DIVISION Syntax</source>
          <target state="translated">データ分割構文</target>
        </trans-unit>
        <trans-unit id="ef1ab2c530e1e7a4a273bb9ed22fe35098c7702a" translate="yes" xml:space="preserve">
          <source>DATA, DATA-POINTER, DATE, DATE-COMPILED, DATE-MODIFIED, DATE-OF-INTEGER, DATE-TO-YYYYMMDD, DATE-WRITTEN, DAY, DAY-OF-INTEGER, DAY-OF-WEEK, DAY-TO-YYYYDDD, DE, DEBUGGING, DECIMAL-POINT, DECLARATIVES, DEFAULT, DELETE, DELIMITED, DELIMITER, DEPENDING, DESCENDING, DESTINATION, DETAIL, DISABLE, DISC, DISK, DISPLAY, DISPLAY-OF, DIVIDE, DIVISION, DOWN, DUPLICATES, DYNAMIC</source>
          <target state="translated">DATA、DATA-POINTER、DATE、DATE、DATE-COMPILED、DATE-MODIFIED、DATE-OF-INTEGER、DATE-TO-YYYYMMDD、DATE-WRITTEN、DAY、DAY、DAY-OF-INTEGER、DAY-OF-WEEK、DAY-TO-YYYYDDD、DE、DEBUGGING、DECIMAL-POINT、DECLARATIVES、DEFAULT、DELETE、DELIMITED、DELIMITER、DEPENDING、DESCENDING、DESTINATION、DETAIL、DISABLE、DISC、DISC、DISK、DISPLAY-PLAY-OF、DIVIDE、DIVISION、DOWN、DUPLICATES、DYNAMIC</target>
        </trans-unit>
        <trans-unit id="9a7769dbf47324c33f9163090c128fdce266a34c" translate="yes" xml:space="preserve">
          <source>DATE-OF-INTEGER Function Syntax</source>
          <target state="translated">DATE-OF-INTEGER 関数構文</target>
        </trans-unit>
        <trans-unit id="de2d56241f31b520010f3bce0b98db0bbbf5b2cb" translate="yes" xml:space="preserve">
          <source>DATE-TO-YYYYMMDD Function Syntax</source>
          <target state="translated">DATE-TO-YYYYMMDD 関数構文</target>
        </trans-unit>
        <trans-unit id="39bcedb8c2b80fd139b489090f66d6091874fd22" translate="yes" xml:space="preserve">
          <source>DAY-OF-INTEGER Function Syntax</source>
          <target state="translated">DAY-OF-INTEGER 関数構文</target>
        </trans-unit>
        <trans-unit id="2bf1dfe2e631bd8b0d7dad6f48c0cacb9a884526" translate="yes" xml:space="preserve">
          <source>DAY-TO-YYYYDDD Function Syntax</source>
          <target state="translated">DAY-TO-YYYYDDD 関数構文</target>
        </trans-unit>
        <trans-unit id="c12b32a0cc17b3f8909c76d7b1bfe6c328500bd4" translate="yes" xml:space="preserve">
          <source>DB</source>
          <target state="translated">DB</target>
        </trans-unit>
        <trans-unit id="ce60ccc4df9eb3a38c2616d86365e0c0f43df13c" translate="yes" xml:space="preserve">
          <source>DDDDDD</source>
          <target state="translated">DDDDDD</target>
        </trans-unit>
        <trans-unit id="025121e8c60ec006f18d8b8d88589c258c15c1d7" translate="yes" xml:space="preserve">
          <source>DDDDEEEEEE</source>
          <target state="translated">DDDDEEEEEE</target>
        </trans-unit>
        <trans-unit id="86bb1aaff76c60b46fc6063e792d77c4344339b1" translate="yes" xml:space="preserve">
          <source>DECLARATIVES Syntax</source>
          <target state="translated">DECLARATIVES 構文</target>
        </trans-unit>
        <trans-unit id="d6f5636098cd458ce9d22939f8e3e8deab0e9bd0" translate="yes" xml:space="preserve">
          <source>DELETE</source>
          <target state="translated">DELETE</target>
        </trans-unit>
        <trans-unit id="143eef2ea0db77ce833000c49d3c0b7fd423279e" translate="yes" xml:space="preserve">
          <source>DELETE Syntax</source>
          <target state="translated">DELETE 構文</target>
        </trans-unit>
        <trans-unit id="3a15730e7f841dfe68e53a32b12047839a2d3fb6" translate="yes" xml:space="preserve">
          <source>DETAIL GROUP(S) [2]</source>
          <target state="translated">ディテールグループ [2</target>
        </trans-unit>
        <trans-unit id="4f10c1a7a81f590cb0c5833f5f9e81467169d145" translate="yes" xml:space="preserve">
          <source>DISPLAY UPON COMMAND-LINE Syntax</source>
          <target state="translated">コマンドラインで表示する構文</target>
        </trans-unit>
        <trans-unit id="adda0092f73a761f60d98ab42f5c7b4bba54e2d5" translate="yes" xml:space="preserve">
          <source>DISPLAY UPON ENVIRONMENT-NAME Syntax</source>
          <target state="translated">環境名を表示する構文</target>
        </trans-unit>
        <trans-unit id="dc0e227d85b3e8e67592171973f030e41c7ab926" translate="yes" xml:space="preserve">
          <source>DISPLAY UPON device Syntax</source>
          <target state="translated">DISPLAY UPON デバイスの構文</target>
        </trans-unit>
        <trans-unit id="6145b9122a8e41c787d9431bd205fd12fd53c5a1" translate="yes" xml:space="preserve">
          <source>DISPLAY screen-data-item Syntax</source>
          <target state="translated">DISPLAY screen-data-item 構文</target>
        </trans-unit>
        <trans-unit id="1da0cf7c02605adccb99101c92fe38279b3c663a" translate="yes" xml:space="preserve">
          <source>DISPLAY-OF Function Syntax</source>
          <target state="translated">DISPLAY-OF 関数構文</target>
        </trans-unit>
        <trans-unit id="c274523a24ad6574ea39bdfb176f7732c4c4c3d8" translate="yes" xml:space="preserve">
          <source>DIVIDE BY GIVING Syntax</source>
          <target state="translated">DIVIDE BY GIVING 構文</target>
        </trans-unit>
        <trans-unit id="1719d6e667413941c4bdcd1de4638431f43816ff" translate="yes" xml:space="preserve">
          <source>DIVIDE INTO GIVING Syntax</source>
          <target state="translated">DIVIDE INTO GIVING構文</target>
        </trans-unit>
        <trans-unit id="b020f4b6ba07306586627a0af3f4509d6885ff83" translate="yes" xml:space="preserve">
          <source>DIVIDE INTO Syntax</source>
          <target state="translated">構文を分割します。</target>
        </trans-unit>
        <trans-unit id="542d08c7255dff568bdff9294205546046c0a7c5" translate="yes" xml:space="preserve">
          <source>Data Item</source>
          <target state="translated">データ項目</target>
        </trans-unit>
        <trans-unit id="b5ab5631945fc781f3a554ec97b7ea5c28882fb6" translate="yes" xml:space="preserve">
          <source>Data Retrieved</source>
          <target state="translated">データを取得しました。</target>
        </trans-unit>
        <trans-unit id="86ce25bf2c845338976617d76d9424c933ce8444" translate="yes" xml:space="preserve">
          <source>Data descriptions of this form do not actually allocate any storage &amp;mdash; they merely define a name (&amp;lt;</source>
          <target state="translated">このフォームのデータ記述は、実際にはストレージを割り当てません。名前を定義するだけです（&amp;lt;</target>
        </trans-unit>
        <trans-unit id="250ae0a93401c939f1d3a2717ed0f5768d942319" translate="yes" xml:space="preserve">
          <source>Data descriptions of this form do not actually allocate any storage &amp;mdash; they merely define a name (&lt;var&gt;constant-name-1&lt;/var&gt;) that may be used anywhere a literal of the same type as &lt;var&gt;literal-1&lt;/var&gt; may be used.</source>
          <target state="translated">この形式のデータ記述は、実際にはストレージを割り当てません。 &lt;var&gt;literal-1&lt;/var&gt; と同じタイプのリテラルを使用できる場所であればどこでも使用できる名前（ &lt;var&gt;constant-name-1&lt;/var&gt; ）を定義するだけです。</target>
        </trans-unit>
        <trans-unit id="5410af708233513539ff4e59c9db8de861bdca7c" translate="yes" xml:space="preserve">
          <source>Data descriptions of this form do not actually allocate any storage &amp;mdash; they merely define a name (&lt;var&gt;constant-name-1&lt;/var&gt;) that may be used anywhere a numeric literal (see  &lt;code&gt;BYTE-LENGTH&lt;/code&gt; or  &lt;code&gt;LENGTH&lt;/code&gt; options) or a literal of the same type as &lt;var&gt;literal-1&lt;/var&gt; may be used.</source>
          <target state="translated">この形式のデータ記述は、実際に任意のストレージを割り当てていない-彼らは単に名前を定義します（ &lt;var&gt;constant-name-1&lt;/var&gt; ）数値リテラル（参照どこでも使用することができる &lt;code&gt;BYTE-LENGTH&lt;/code&gt; または &lt;code&gt;LENGTH&lt;/code&gt; オプションを）、または同じタイプのリテラル &lt;var&gt;literal-1&lt;/var&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="245c46ca18c5d37e5c002598ea788d447f91aba3" translate="yes" xml:space="preserve">
          <source>Data item descriptions describing the report lines and fields that make up the substance of a report group immediately follow the definition of that group.</source>
          <target state="translated">レポートグループの実体を構成するレポートラインとフィールドを記述したデータ項目の記述は、そのグループの定義の直後に続きます。</target>
        </trans-unit>
        <trans-unit id="ff44c584ca6ca8d400c2d505853458c01d44ef9c" translate="yes" xml:space="preserve">
          <source>Data items declared with &lt;code&gt;BASED&lt;/code&gt; are allocated no storage at compilation time. At run-time, the &lt;code&gt;ALLOCATE&lt;/code&gt; (see &lt;a href=&quot;#ALLOCATE&quot;&gt;ALLOCATE&lt;/a&gt;) or &lt;code&gt;SET ADDRESS&lt;/code&gt; (see &lt;a href=&quot;#SET-ADDRESS&quot;&gt;SET ADDRESS&lt;/a&gt;) statements are used to allocate space for and (optionally) initialize such items.</source>
          <target state="translated">&lt;code&gt;BASED&lt;/code&gt; で宣言されたデータ項目には、コンパイル時にストレージが割り当てられません。実行時に、 &lt;code&gt;ALLOCATE&lt;/code&gt; （参照&lt;a href=&quot;#ALLOCATE&quot;&gt;ALLOCATE&lt;/a&gt;）または &lt;code&gt;SET ADDRESS&lt;/code&gt; （参照&lt;a href=&quot;#SET-ADDRESS&quot;&gt;設定したアドレスを&lt;/a&gt;、そのようなアイテムを初期化ステートメントはのためのスペースを割り当て、（任意に）するために使用されます）。</target>
        </trans-unit>
        <trans-unit id="613feb51ddc5e794502cb0ea894587a8556331a3" translate="yes" xml:space="preserve">
          <source>Data items declared with the &lt;code&gt;ANY LENGTH&lt;/code&gt; attribute have no fixed compile-time length. Such items may only be defined in the linkage section of a subprogram as they may only serve as subroutine argument descriptions. These items must have a &lt;code&gt;PICTURE&lt;/code&gt; (see &lt;a href=&quot;#PICTURE&quot;&gt;PICTURE&lt;/a&gt;) clause that specifies exactly one A, X or 9 symbol.</source>
          <target state="translated">&lt;code&gt;ANY LENGTH&lt;/code&gt; 属性で宣言されたデータ項目には、固定のコンパイル時の長さはありません。このような項目は、サブルーチン引数の説明としてのみ機能する可能性があるため、サブプログラムのリンケージセクションでのみ定義できます。これらの項目は、持っている必要があり &lt;code&gt;PICTURE&lt;/code&gt; を（参照&lt;a href=&quot;#PICTURE&quot;&gt;PICTUREを&lt;/a&gt;）句を指定正確に一つのA、Xまたは9シンボルという。</target>
        </trans-unit>
        <trans-unit id="e82b1d0242f8c91a364756e74c764b6e3af9b59f" translate="yes" xml:space="preserve">
          <source>Data items declared with the&lt;code&gt;ANY LENGTH&lt;/code&gt;attribute have no fixed compile-time length. Such items may only be defined in the linkage section of a subprogram as they may only serve as subroutine argument descriptions. These items must have a&lt;code&gt;PICTURE&lt;/code&gt;(see &lt;a href=&quot;#PICTURE&quot;&gt;PICTURE&lt;/a&gt;) clause that specifies exactly one A, X or 9 symbol.</source>
          <target state="translated">&lt;code&gt;ANY LENGTH&lt;/code&gt; 属性を使用して宣言されたデータ項目には、コンパイル時の長さが固定されていません。これらの項目は、サブルーチンの引数の説明としてのみ機能するため、サブプログラムのリンケージセクションでのみ定義できます。これらの項目は、持っている必要があり &lt;code&gt;PICTURE&lt;/code&gt; を（参照&lt;a href=&quot;#PICTURE&quot;&gt;PICTUREを&lt;/a&gt;）句を指定正確に一つのA、Xまたは9シンボルという。</target>
        </trans-unit>
        <trans-unit id="8ff9e95bc3e45b129ac52c4861ceb28707b8b1d0" translate="yes" xml:space="preserve">
          <source>Data items declared with&lt;code&gt;BASED&lt;/code&gt;are allocated no storage at compilation time. At run-time, the&lt;code&gt;ALLOCATE&lt;/code&gt;(see &lt;a href=&quot;#ALLOCATE&quot;&gt;ALLOCATE&lt;/a&gt;) or&lt;code&gt;SET ADDRESS&lt;/code&gt;(see &lt;a href=&quot;#SET-ADDRESS&quot;&gt;SET ADDRESS&lt;/a&gt;) statements are used to allocate space for and (optionally) initialize such items.</source>
          <target state="translated">&lt;code&gt;BASED&lt;/code&gt; で宣言されたデータ項目には、コンパイル時にストレージが割り当てられません。実行時に、 &lt;code&gt;ALLOCATE&lt;/code&gt; （参照&lt;a href=&quot;#ALLOCATE&quot;&gt;ALLOCATE&lt;/a&gt;）または &lt;code&gt;SET ADDRESS&lt;/code&gt; （参照&lt;a href=&quot;#SET-ADDRESS&quot;&gt;設定したアドレスを&lt;/a&gt;、そのようなアイテムを初期化ステートメントはのためのスペースを割り当て、（任意に）するために使用されます）。</target>
        </trans-unit>
        <trans-unit id="3884223bd8738175ccb76e30292953182185f26d" translate="yes" xml:space="preserve">
          <source>Data items defined in a calling program may be passed to either type of called program (subroutine or user-defined function) as arguments.</source>
          <target state="translated">呼び出し元のプログラムで定義されたデータ項目は、呼び出し元のプログラムの種類(サブルーチンまたはユーザー定義関数)のいずれかに引数として渡すことができます。</target>
        </trans-unit>
        <trans-unit id="a7bc20da44b7c1e9a2ba243b517c81177d7d55e7" translate="yes" xml:space="preserve">
          <source>Data items defined in the screen section describe input, output or combination screen layouts to be used with &lt;code&gt;ACCEPT screen-data-item&lt;/code&gt; statement (see &lt;a href=&quot;#ACCEPT-screen_002ddata_002ditem&quot;&gt;ACCEPT screen-data-item&lt;/a&gt;) or &lt;code&gt;DISPLAY screen-data-item&lt;/code&gt; statement (see &lt;a href=&quot;#DISPLAY-screen_002ddata_002ditem&quot;&gt;DISPLAY screen-data-item&lt;/a&gt;) statements. These screen layouts may define the entire available screen area or any subset of it.</source>
          <target state="translated">画面セクションで定義されたデータ項目は、 &lt;code&gt;ACCEPT screen-data-item&lt;/code&gt; ステートメント（&lt;a href=&quot;#ACCEPT-screen_002ddata_002ditem&quot;&gt;ACCEPT screen-data-itemを&lt;/a&gt;参照）または &lt;code&gt;DISPLAY screen-data-item&lt;/code&gt; ステートメント（&lt;a href=&quot;#DISPLAY-screen_002ddata_002ditem&quot;&gt;DISPLAY screen-data-を&lt;/a&gt;参照）で使用される入力、出力、または組み合わせの画面レイアウトを記述します。 item）ステートメント。これらの画面レイアウトは、使用可能な画面領域全体またはそのサブセットを定義する場合があります。</target>
        </trans-unit>
        <trans-unit id="8b6be4a0a08f89796b4ca060304e3df78e6642bf" translate="yes" xml:space="preserve">
          <source>Data items defined in the screen section describe input, output or combination screen layouts to be used with&lt;code&gt;ACCEPT screen-data-item&lt;/code&gt;statement (see &lt;a href=&quot;#ACCEPT-screen_002ddata_002ditem&quot;&gt;ACCEPT screen-data-item&lt;/a&gt;) or&lt;code&gt;DISPLAY screen-data-item&lt;/code&gt;statement (see &lt;a href=&quot;#DISPLAY-screen_002ddata_002ditem&quot;&gt;DISPLAY screen-data-item&lt;/a&gt;) statements. These screen layouts may define the entire available screen area or any subset of it.</source>
          <target state="translated">画面セクションで定義されたデータ項目は、 &lt;code&gt;ACCEPT screen-data-item&lt;/code&gt; ステートメント（&lt;a href=&quot;#ACCEPT-screen_002ddata_002ditem&quot;&gt;ACCEPT screen-data-itemを&lt;/a&gt;参照）または &lt;code&gt;DISPLAY screen-data-item&lt;/code&gt; ステートメント（&lt;a href=&quot;#DISPLAY-screen_002ddata_002ditem&quot;&gt;DISPLAY screen-data- item&lt;/a&gt;）ステートメント。これらの画面レイアウトは、使用可能な画面領域全体またはその一部を定義できます。</target>
        </trans-unit>
        <trans-unit id="b0bc4de49a1c2e9ebf03ef7562dcdfc26ef5e0a8" translate="yes" xml:space="preserve">
          <source>Data items defined within the working-storage section are automatically initialized once &amp;mdash; as the program in which the data is defined is loaded into memory. Subprograms may be loaded into memory more than once (see the &lt;code&gt;CANCEL&lt;/code&gt; statement (see &lt;a href=&quot;#CANCEL&quot;&gt;CANCEL&lt;/a&gt;)), in which case initialization will happen each time they are loaded. See &lt;a href=&quot;#Data-Initialization&quot;&gt;Data Initialization&lt;/a&gt;, for a discussion of the initialization rules.</source>
          <target state="translated">作業用ストレージセクション内で定義されたデータ項目は、データが定義されたプログラムがメモリにロードされるときに、一度自動的に初期化されます。サブプログラムは、複数回のメモリにロードすることができる（参照 &lt;code&gt;CANCEL&lt;/code&gt; （参照文を&lt;a href=&quot;#CANCEL&quot;&gt;キャンセル&lt;/a&gt;する場合の初期化は、彼らがロードされるたびに起こるのだろう、））。初期化ルールの説明については、&lt;a href=&quot;#Data-Initialization&quot;&gt;データの初期化を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="5b209ac3623f15088290faf41d529558938a6bd3" translate="yes" xml:space="preserve">
          <source>Data items defined within the working-storage section are automatically initialized once &amp;mdash; as the program in which the data is defined is loaded into memory. Subprograms may be loaded into memory more than once (see the&lt;code&gt;CANCEL&lt;/code&gt;statement (see &lt;a href=&quot;#CANCEL&quot;&gt;CANCEL&lt;/a&gt;)), in which case initialization will happen each time they are loaded. See &lt;a href=&quot;#Data-Initialization&quot;&gt;Data Initialization&lt;/a&gt;, for a discussion of the initialization rules.</source>
          <target state="translated">作業用ストレージセクション内で定義されたデータ項目は、データが定義されているプログラムがメモリに読み込まれると、自動的に1回初期化されます。サブプログラムは、複数回のメモリにロードすることができる（参照 &lt;code&gt;CANCEL&lt;/code&gt; （参照文を&lt;a href=&quot;#CANCEL&quot;&gt;キャンセル&lt;/a&gt;する場合の初期化は、彼らがロードされるたびに起こるのだろう、））。初期化規則の説明については、&lt;a href=&quot;#Data-Initialization&quot;&gt;データの初期化を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="98c51b886c0b0f7a16a64e545b62eaaf62c1cf1c" translate="yes" xml:space="preserve">
          <source>Data items that have the  &lt;code&gt;UNSIGNED&lt;/code&gt; attribute explicitly coded, or &lt;code&gt;DISPLAY&lt;/code&gt;, &lt;code&gt;PACKED-DECIMAL&lt;/code&gt;, &lt;code&gt;COMP-5&lt;/code&gt;, &lt;code&gt;COMP-X&lt;/code&gt; items that do not have an &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;UNSIGNED&lt;/code&gt; 属性が明示的にコーディングされているデータ項目 、または &lt;code&gt;DISPLAY&lt;/code&gt; 、 &lt;code&gt;PACKED-DECIMAL&lt;/code&gt; 、 &lt;code&gt;COMP-5&lt;/code&gt; 、 &lt;code&gt;COMP-X&lt;/code&gt; 項目に 'がない</target>
        </trans-unit>
        <trans-unit id="4eb8574d2d5270d2d786dec0a24f5040d14d6919" translate="yes" xml:space="preserve">
          <source>Data items that have the&lt;code&gt;UNSIGNED&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;UNSIGNED&lt;/code&gt; を持つデータ項目</target>
        </trans-unit>
        <trans-unit id="d521e914965525b65ae268fff463a172021c77bd" translate="yes" xml:space="preserve">
          <source>Data items with an explicit &lt;code&gt;VALUE&lt;/code&gt; (see &lt;a href=&quot;#VALUE&quot;&gt;VALUE&lt;/a&gt;) clause in their definition will be initialized to that specific value.</source>
          <target state="translated">明示的に持つデータ項目 &lt;code&gt;VALUE&lt;/code&gt; （参照&lt;a href=&quot;#VALUE&quot;&gt;値を&lt;/a&gt;その定義で）句は、その特定の値に初期化されます。</target>
        </trans-unit>
        <trans-unit id="b9af005425ba8ce8de1a932e2c2f2ab684e4ed8c" translate="yes" xml:space="preserve">
          <source>Data items with an explicit&lt;code&gt;VALUE&lt;/code&gt;(see &lt;a href=&quot;#VALUE&quot;&gt;VALUE&lt;/a&gt;) clause in their definition will be initialized to that specific value.</source>
          <target state="translated">明示的に持つデータ項目 &lt;code&gt;VALUE&lt;/code&gt; （参照&lt;a href=&quot;#VALUE&quot;&gt;値を&lt;/a&gt;その定義で）句は、その特定の値に初期化されます。</target>
        </trans-unit>
        <trans-unit id="25d47c3faf24644ac0e22641a7e663390a36c7aa" translate="yes" xml:space="preserve">
          <source>Data items with level numbers 01 (Constants), 66, 78 and 88 may be used in the screen section; they have the same syntax, rules and usage as they do in the other data division sections.</source>
          <target state="translated">レベル番号01(定数)、66、78、88のデータ項目は、画面セクションで使用することができます。</target>
        </trans-unit>
        <trans-unit id="3f037b50f5ed4565ce4707a24021f4f6ad083ed5" translate="yes" xml:space="preserve">
          <source>Data-pointer contains an address that is out of bounds</source>
          <target state="translated">データポインタに範囲外のアドレスが含まれています。</target>
        </trans-unit>
        <trans-unit id="4198fda882a12627596a5f4028ac7cc6184f889d" translate="yes" xml:space="preserve">
          <source>Debugging statements may be compiled either by specifying the</source>
          <target state="translated">デバッグステートメントは</target>
        </trans-unit>
        <trans-unit id="67c1e236faf50d37cb37da121db5222de83e8a41" translate="yes" xml:space="preserve">
          <source>Decimal128</source>
          <target state="translated">Decimal128</target>
        </trans-unit>
        <trans-unit id="c0b4c8cca49b3c9805bb35c6e300bcfd3896e32a" translate="yes" xml:space="preserve">
          <source>Decimal64</source>
          <target state="translated">Decimal64</target>
        </trans-unit>
        <trans-unit id="874809dfddadcc0363d1a9a37ac20f4611145b1a" translate="yes" xml:space="preserve">
          <source>Declarative procedures may not reference any other procedures defined outside the scope of DECLARATIVES.</source>
          <target state="translated">宣言的手続きは、DECLARATIVESの範囲外で定義された他の手続きを参照してはならない。</target>
        </trans-unit>
        <trans-unit id="1926bf7b1e26ebe7de6d0ebb9ef5c4439fb50dbf" translate="yes" xml:space="preserve">
          <source>Decode a formatted numeric string back to a numeric value</source>
          <target state="translated">フォーマットされた数値文字列を数値に戻すデコード</target>
        </trans-unit>
        <trans-unit id="77160803e82d16c8b1910db09f1f8206f3b07c54" translate="yes" xml:space="preserve">
          <source>Defined by the quantity of &amp;lsquo;</source>
          <target state="translated">Defined by the quantity of &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="d14e2f78a3303228220a36dc985b5fd5e385137b" translate="yes" xml:space="preserve">
          <source>Defined by the quantity of&lt;code&gt;9&lt;/code&gt; and the presence or absence of an&lt;code&gt;S&lt;/code&gt;in the PICTURE</source>
          <target state="translated">数量 &lt;code&gt;9&lt;/code&gt; および画像内の &lt;code&gt;S&lt;/code&gt; の有無によって定義</target>
        </trans-unit>
        <trans-unit id="1e681574ae7448c8ae4c05d776be5265b2dc953d" translate="yes" xml:space="preserve">
          <source>Defined by the quantity of&lt;code&gt;9&lt;/code&gt; and the presence or absence of an&lt;code&gt;S&lt;/code&gt;in the&lt;code&gt;PICTURE&lt;/code&gt;</source>
          <target state="translated">量によって定義される &lt;code&gt;9&lt;/code&gt; との存在下または非存在下 &lt;code&gt;S&lt;/code&gt; で &lt;code&gt;PICTURE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c4f902095fbdd9a51f64589a0c9cbb5ca0476412" translate="yes" xml:space="preserve">
          <source>Defines an implied digit position that will be considered to be a zero when the data item is referenced at run-time. This symbol is used to allow data items that will contain very large values to be allocated using less storage by assuming a certain number of trailing zeros (one per &amp;lsquo;</source>
          <target state="translated">Defines an implied digit position that will be considered to be a zero when the data item is referenced at run-time. This symbol is used to allow data items that will contain very large values to be allocated using less storage by assuming a certain number of trailing zeros (one per &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="3721726af464447c08ddb23c2de0ce50d614e3dd" translate="yes" xml:space="preserve">
          <source>Defines an implied digit position that will be considered to be a zero when the data item is referenced at run-time. This symbol is used to allow data items that will contain very large values to be allocated using less storage by assuming a certain number of trailing zeros (one per&lt;code&gt;P&lt;/code&gt; to exist at the end of values.</source>
          <target state="translated">実行時にデータ項目が参照されるときにゼロと見なされる暗黙の桁位置を定義します。この記号を使用すると、非常に大きな値を含むデータ項目を、特定の数の後続ゼロ（ &lt;code&gt;P&lt;/code&gt; ごとに1つが値の終わりに存在すると想定）を想定して、少ないストレージを使用して割り当てることができます。</target>
        </trans-unit>
        <trans-unit id="4d3e8e9bbc748923af33b49ac640f19a5a564427" translate="yes" xml:space="preserve">
          <source>Defines storage reserved for a single alphabetic character (&amp;lsquo;</source>
          <target state="translated">Defines storage reserved for a single alphabetic character (&amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="d2dadb60fe73f669fa3a07340c506372af50e9c1" translate="yes" xml:space="preserve">
          <source>Defines storage reserved for a single alphabetic character &lt;code&gt;A&lt;/code&gt;&lt;code&gt;Z&lt;/code&gt;&lt;code&gt;a&lt;/code&gt;&lt;code&gt;z&lt;/code&gt;.</source>
          <target state="translated">1つの英字 &lt;code&gt;A&lt;/code&gt; &lt;code&gt;Z&lt;/code&gt; &lt;code&gt;a&lt;/code&gt; &lt;code&gt;z&lt;/code&gt; のために予約されているストレージを定義します。</target>
        </trans-unit>
        <trans-unit id="cc276340305e669eb0c75e2233fed96937f0eb10" translate="yes" xml:space="preserve">
          <source>Defines storage reserved for a single alphanumeric character (any character).</source>
          <target state="translated">英数字1文字(任意の文字)用に予約されたストレージを定義します。</target>
        </trans-unit>
        <trans-unit id="fafaf60ab65fe56f4f0a976cd819bff8a10abfe2" translate="yes" xml:space="preserve">
          <source>Defines storage reserved for a single character in the computer&amp;rsquo;s  &lt;em&gt;National Character set&lt;/em&gt;. Support for national character sets in GnuCOBOL is currently only partially implemented, and the compile- and run-time effect of using the &amp;lsquo;</source>
          <target state="translated">Defines storage reserved for a single character in the computer&amp;rsquo;s &lt;em&gt;National Character set&lt;/em&gt;. Support for national character sets in GnuCOBOL is currently only partially implemented, and the compile- and run-time effect of using the &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="9157b25b7fe6ae0f7d0e3ba566a50c8e263af1e0" translate="yes" xml:space="preserve">
          <source>Defines storage reserved for a single character in the computer&amp;rsquo;s &amp;rsquo;</source>
          <target state="translated">コンピュータの 'の単一の文字用に予約されたストレージを定義します</target>
        </trans-unit>
        <trans-unit id="d0349172c083c195705d6e928b07b013780e23ed" translate="yes" xml:space="preserve">
          <source>Defines storage reserved for a single numeric digit character (&amp;lsquo;</source>
          <target state="translated">Defines storage reserved for a single numeric digit character (&amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="94ae1e544866ccd53a2d46a1a530f0a06f98b727" translate="yes" xml:space="preserve">
          <source>Defines storage reserved for a single numeric digit character &lt;code&gt;0&lt;/code&gt;&lt;code&gt;9&lt;/code&gt;.</source>
          <target state="translated">1桁の数字 &lt;code&gt;0&lt;/code&gt; &lt;code&gt;9&lt;/code&gt; のために予約されているストレージを定義します。</target>
        </trans-unit>
        <trans-unit id="a67088220472afe80c47135eab1f636a9b0734f0" translate="yes" xml:space="preserve">
          <source>Defining a control hierarchy (via &lt;code&gt;CONTROLS ARE&lt;/code&gt;) that does not match the actual sequence in which data will be processed is a great way to guarantee a &amp;ldquo;broken&amp;rdquo; report. I&amp;rsquo;ll show you an example in a later section.</source>
          <target state="translated">Defining a control hierarchy (via &lt;code&gt;CONTROLS ARE&lt;/code&gt; ) that does not match the actual sequence in which data will be processed is a great way to guarantee a &amp;ldquo;broken&amp;rdquo; report. I&amp;rsquo;ll show you an example in a later section.</target>
        </trans-unit>
        <trans-unit id="4c35955c5a43713921be58f39b4f9f08b952ef23" translate="yes" xml:space="preserve">
          <source>Defining a control hierarchy (via&lt;code&gt;CONTROLS ARE&lt;/code&gt; that does not match the actual sequence in which data will be processed is a great way to guarantee a &quot;broken&quot; report. I&amp;rsquo;ll show you an example in a later section.</source>
          <target state="translated">（データが処理される実際のシーケンスと一致しない &lt;code&gt;CONTROLS ARE&lt;/code&gt; を介して）制御階層を定義することは、「壊れた」レポートを保証する優れた方法です。後のセクションで例を示します。</target>
        </trans-unit>
        <trans-unit id="86f4d7d5ec62e8d3cd6d42936730cd899552e6b1" translate="yes" xml:space="preserve">
          <source>Deleting directories (folders)</source>
          <target state="translated">ディレクトリ(フォルダ)の削除</target>
        </trans-unit>
        <trans-unit id="184170aedafad0bad24b165d0963d2623119dff1" translate="yes" xml:space="preserve">
          <source>Deleting files</source>
          <target state="translated">ファイルの削除</target>
        </trans-unit>
        <trans-unit id="a00d1ea1d07a37d00d4674304143c5da9d08c63e" translate="yes" xml:space="preserve">
          <source>Demonstration Value</source>
          <target state="translated">実証値</target>
        </trans-unit>
        <trans-unit id="a300dcf45b8bb3ac35bf8bf6fa05fb9627dec545" translate="yes" xml:space="preserve">
          <source>Depending upon which source format mode the compiler is in, you will need to follow various rules for the format mode currently in effect. These rules are presented in the upcoming paragraphs.</source>
          <target state="translated">コンパイラがどのソース・フォーマット・モードにあるかによって、現在有効なフォーマット・モードのさまざまなルールに従う必要があります。これらのルールは次の段落で説明します。</target>
        </trans-unit>
        <trans-unit id="aab0bae82793f3236a9c2ba797e070b6fb3aec3f" translate="yes" xml:space="preserve">
          <source>Depends on &lt;code&gt;PICTURE&lt;/code&gt; &amp;mdash; One character per X, A, 9, period, $, Z, 0, *, S (if &lt;code&gt;SEPARATE CHARACTER&lt;/code&gt; specified), +, - or B symbol in &lt;code&gt;PICTURE&lt;/code&gt;; Add 2 more bytes if the &lt;code&gt;DB&lt;/code&gt; or &lt;code&gt;CR&lt;/code&gt; editing symbol is used</source>
          <target state="translated">Depends on &lt;code&gt;PICTURE&lt;/code&gt; &amp;mdash; One character per X, A, 9, period, $, Z, 0, *, S (if &lt;code&gt;SEPARATE CHARACTER&lt;/code&gt; specified), +, - or B symbol in &lt;code&gt;PICTURE&lt;/code&gt; ; Add 2 more bytes if the &lt;code&gt;DB&lt;/code&gt; or &lt;code&gt;CR&lt;/code&gt; editing symbol is used</target>
        </trans-unit>
        <trans-unit id="d53a15407d4f8da31632dd569ad849cee11f6f27" translate="yes" xml:space="preserve">
          <source>Depends on number of &amp;lsquo;</source>
          <target state="translated">Depends on number of &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="e1d3403c95ff976211a614c7aff47a8b06f0d474" translate="yes" xml:space="preserve">
          <source>Depends on number of&lt;code&gt;9&lt;/code&gt; in the&lt;code&gt;PICTURE&lt;/code&gt;and the&lt;code&gt;binary-size&lt;/code&gt;setting of the configuration file used to compile the program</source>
          <target state="translated">数に依存 &lt;code&gt;9&lt;/code&gt; に &lt;code&gt;PICTURE&lt;/code&gt; と &lt;code&gt;binary-size&lt;/code&gt; 設定ファイルの設定は、プログラムをコンパイルするために使用しました</target>
        </trans-unit>
        <trans-unit id="8f554af0cabf84f3acc6bcb170a806e225d3ade1" translate="yes" xml:space="preserve">
          <source>Depends on&lt;code&gt;PICTURE&lt;/code&gt; One character per X, A, 9, period, $, Z, 0, *, S (if&lt;code&gt;SEPARATE CHARACTER&lt;/code&gt;specified), +, - or B symbol in&lt;code&gt;PICTURE&lt;/code&gt; Add 2 more bytes if the&lt;code&gt;DB&lt;/code&gt;or&lt;code&gt;CR&lt;/code&gt;editing symbol is used</source>
          <target state="translated">&lt;code&gt;PICTURE&lt;/code&gt; に依存&amp;ndash; X、A、9、ピリオド、$、Z、0、*、Sごとに1文字（ &lt;code&gt;SEPARATE CHARACTER&lt;/code&gt; が指定されている場合）、 &lt;code&gt;PICTURE&lt;/code&gt; に+、-、またはB記号 &lt;code&gt;DB&lt;/code&gt; または &lt;code&gt;CR&lt;/code&gt; 編集記号の場合、さらに2バイト追加使用されている</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="b0e8e1b165f149c1a596ac6c3f9a6aa8dac95a1b" translate="yes" xml:space="preserve">
          <source>Despite statements from industry &amp;ldquo;insiders&amp;rdquo;, the COBOL programming language is not dead, even though newer and so-called &amp;ldquo;modern&amp;rdquo; languages like Java, C#, .NET, Ruby on Rails and so on appear to have become the languages of choice in the Information Technology world. These languages have become popular because they address the following desired requirements for &amp;ldquo;modern&amp;rdquo; programming:</source>
          <target state="translated">Despite statements from industry &amp;ldquo;insiders&amp;rdquo;, the COBOL programming language is not dead, even though newer and so-called &amp;ldquo;modern&amp;rdquo; languages like Java, C#, .NET, Ruby on Rails and so on appear to have become the languages of choice in the Information Technology world. These languages have become popular because they address the following desired requirements for &amp;ldquo;modern&amp;rdquo; programming:</target>
        </trans-unit>
        <trans-unit id="a7bc7ee00f8b51dc232f39ec929df41c6a0ebda7" translate="yes" xml:space="preserve">
          <source>Despite what the name of this routine might make you believe, this routine is more than just a simple &quot;rename&quot; &amp;mdash; it will actually move the file supplied as the 1st argument to the file specified as the 2nd argument. Think of it as a two-step sequence, first copying the &amp;lt;</source>
          <target state="translated">このルーチンの名前があなたに信じさせるかもしれませんが、このルーチンは単なる &quot;名前の変更&quot;だけではありません&amp;mdash; 1番目の引数として指定されたファイルを2番目の引数として指定されたファイルに実際に移動します。 2ステップのシーケンスと考えてください。最初に&amp;lt;</target>
        </trans-unit>
        <trans-unit id="40922ec31558cbab9fe9b910abfa2f103d20a0f2" translate="yes" xml:space="preserve">
          <source>Despite what the name of this routine might make you believe, this routine is more than just a simple &amp;ldquo;rename&amp;rdquo; &amp;mdash; it will actually move the file supplied as the 1&lt;sup&gt;st&lt;/sup&gt; argument to the file specified as the 2nd argument. Think of it as a two-step sequence, first copying the &lt;var&gt;old-file-path&lt;/var&gt; file to the &lt;var&gt;new-file-path&lt;/var&gt; file and then a second step where the &lt;var&gt;old-file-path&lt;/var&gt; is deleted.</source>
          <target state="translated">Despite what the name of this routine might make you believe, this routine is more than just a simple &amp;ldquo;rename&amp;rdquo; &amp;mdash; it will actually move the file supplied as the 1&lt;sup&gt;st&lt;/sup&gt; argument to the file specified as the 2nd argument. Think of it as a two-step sequence, first copying the &lt;var&gt;old-file-path&lt;/var&gt; file to the &lt;var&gt;new-file-path&lt;/var&gt; file and then a second step where the &lt;var&gt;old-file-path&lt;/var&gt; is deleted.</target>
        </trans-unit>
        <trans-unit id="6dc01a0b93964e7ed3110112972c2448074cd5a5" translate="yes" xml:space="preserve">
          <source>Despite what you&amp;rsquo;ve seen here, the more complex the programming logic being implemented, the more concise the Java code will appear to be, even compared to 2002-standard COBOL. That conciseness comes with a price though &amp;mdash; program code readability. Java (or C or C++ or C#) programs are generally intelligible only to trained programmers. COBOL programs can, however, be quite understandable by non-programmers. This is actually a side-effect of the &quot;wordiness&quot; of the language, where COBOL statements use natural English words to describe their actions. This inherent readability has come in handy many times throughout my career when I&amp;rsquo;ve had to learn obscure business (or legal) processes by reading the COBOL program code that supports them.</source>
          <target state="translated">ここで見てきたことにかかわらず、実装されているプログラミングロジックが複雑になるほど、2002標準のCOBOLと比較しても、Javaコードは簡潔になります。ただし、その簡潔さには代償が伴います。プログラムコードの読みやすさです。 Java（またはC、C ++、またはC＃）プログラムは、通常、訓練を受けたプログラマーだけが理解できます。ただし、COBOLプログラムは、プログラマー以外の人にも理解できる場合があります。これは、実際には言語の「ワードネス」の副作用であり、COBOLステートメントは自然な英語の単語を使用してそのアクションを記述します。この固有の読みやすさは、ビジネスをサポートするCOBOLプログラムコードを読み取ることにより、あいまいなビジネス（または法的）プロセスを学ぶ必要があったときに、私のキャリアを通じて何度も役立ちます。</target>
        </trans-unit>
        <trans-unit id="86d6174d999fceda80f111d5777fe68fade2ca97" translate="yes" xml:space="preserve">
          <source>Despite what you&amp;rsquo;ve seen here, the more complex the programming logic being implemented, the more concise the Java code will appear to be, even compared to 2002-standard COBOL. That conciseness comes with a price though &amp;mdash; program code readability. Java (or C or C++ or C#) programs are generally intelligible only to trained programmers. COBOL programs can, however, be quite understandable by non-programmers. This is actually a side-effect of the &amp;ldquo;wordiness&amp;rdquo; of the language, where COBOL statements use natural English words to describe their actions. This inherent readability has come in handy many times throughout my career when I&amp;rsquo;ve had to learn obscure business (or legal) processes by reading the COBOL program code that supports them.</source>
          <target state="translated">Despite what you&amp;rsquo;ve seen here, the more complex the programming logic being implemented, the more concise the Java code will appear to be, even compared to 2002-standard COBOL. That conciseness comes with a price though &amp;mdash; program code readability. Java (or C or C++ or C#) programs are generally intelligible only to trained programmers. COBOL programs can, however, be quite understandable by non-programmers. This is actually a side-effect of the &amp;ldquo;wordiness&amp;rdquo; of the language, where COBOL statements use natural English words to describe their actions. This inherent readability has come in handy many times throughout my career when I&amp;rsquo;ve had to learn obscure business (or legal) processes by reading the COBOL program code that supports them.</target>
        </trans-unit>
        <trans-unit id="7d18a0bca02af71f36038a10035b4fe89b253e6e" translate="yes" xml:space="preserve">
          <source>Detail Group</source>
          <target state="translated">詳細グループ</target>
        </trans-unit>
        <trans-unit id="fc513aa1c1486f07867ac9c63a186583402ee0ec" translate="yes" xml:space="preserve">
          <source>Detail Report</source>
          <target state="translated">詳細レポート</target>
        </trans-unit>
        <trans-unit id="e7c7a57e94f04db7f9ae6062a2b43e934856df05" translate="yes" xml:space="preserve">
          <source>Determine the length of a string or data-item capable of storing strings</source>
          <target state="translated">文字列または文字列を格納できるデータアイテムの長さを決定します。</target>
        </trans-unit>
        <trans-unit id="c352d575e112605537ad32d24ea8d1abed42a987" translate="yes" xml:space="preserve">
          <source>Determining how many arguments were passed to a subroutine</source>
          <target state="translated">サブルーチンに渡された引数の数を決定する</target>
        </trans-unit>
        <trans-unit id="a5a74a6df09278b88cb6ea23b7d7f2570c33babf" translate="yes" xml:space="preserve">
          <source>Device</source>
          <target state="translated">Device</target>
        </trans-unit>
        <trans-unit id="3bb1ab7b7ef406080993faa1bf1afc98ee63fdb6" translate="yes" xml:space="preserve">
          <source>Did you notice that there are two each of &lt;code&gt;Year&lt;/code&gt;, &lt;code&gt;Month&lt;/code&gt; and &lt;code&gt;Day&lt;/code&gt; data names defined? That&amp;rsquo;s perfectly legal, provided that each can be uniquely &lt;code&gt;qualified&lt;/code&gt; so as to be distinct from the other. Take for example the &lt;code&gt;Year&lt;/code&gt; items. One is defined as part of the &lt;code&gt;From-Date&lt;/code&gt; data item while the other is defined as part of the &lt;code&gt;To-Date&lt;/code&gt; data item. In COBOL, we would actually code references to these two data items as either &lt;code&gt;Year OF From-Date&lt;/code&gt; and &lt;code&gt;Year OF To-Date&lt;/code&gt; or &lt;code&gt;Year IN From-Date&lt;/code&gt; and &lt;code&gt;Year IN To-Date&lt;/code&gt; (COBOL allows either &lt;code&gt;IN&lt;/code&gt; or &lt;code&gt;OF&lt;/code&gt; to be used). Since these references would clarify any confusion to us as to which &lt;code&gt;Year&lt;/code&gt; might be referenced, the GnuCOBOL compiler won&amp;rsquo;t be confused either.</source>
          <target state="translated">Did you notice that there are two each of &lt;code&gt;Year&lt;/code&gt; , &lt;code&gt;Month&lt;/code&gt; and &lt;code&gt;Day&lt;/code&gt; data names defined? That&amp;rsquo;s perfectly legal, provided that each can be uniquely &lt;code&gt;qualified&lt;/code&gt; so as to be distinct from the other. Take for example the &lt;code&gt;Year&lt;/code&gt; items. One is defined as part of the &lt;code&gt;From-Date&lt;/code&gt; data item while the other is defined as part of the &lt;code&gt;To-Date&lt;/code&gt; data item. In COBOL, we would actually code references to these two data items as either &lt;code&gt;Year OF From-Date&lt;/code&gt; and &lt;code&gt;Year OF To-Date&lt;/code&gt; or &lt;code&gt;Year IN From-Date&lt;/code&gt; and &lt;code&gt;Year IN To-Date&lt;/code&gt; (COBOL allows either &lt;code&gt;IN&lt;/code&gt; or &lt;code&gt;OF&lt;/code&gt; to be used). Since these references would clarify any confusion to us as to which &lt;code&gt;Year&lt;/code&gt; might be referenced, the GnuCOBOL compiler won&amp;rsquo;t be confused either.</target>
        </trans-unit>
        <trans-unit id="b4bdf8d06c8ee9447b53a8835fd50fd6f2691a97" translate="yes" xml:space="preserve">
          <source>Did you notice that there are two each of&lt;code&gt;Year&lt;/code&gt;&lt;code&gt;Month&lt;/code&gt;and&lt;code&gt;Day&lt;/code&gt;data names defined? That&amp;rsquo;s perfectly legal, provided that each can be uniquely&lt;code&gt;qualified&lt;/code&gt;so as to be distinct from the other. Take for example the&lt;code&gt;Year&lt;/code&gt;items. One is defined as part of the&lt;code&gt;From-Date&lt;/code&gt;data item while the other is defined as part of the &quot;To-Date&quot; data item. In COBOL, we would actually code references to these two data items as either&lt;code&gt;Year OF From-Date&lt;/code&gt;and&lt;code&gt;Year OF To-Date&lt;/code&gt;or&lt;code&gt;Year IN From-Date&lt;/code&gt;and&lt;code&gt;Year IN To-Date&lt;/code&gt;(COBOL allows either&lt;code&gt;IN&lt;/code&gt;or&lt;code&gt;OF&lt;/code&gt;to be used). Since these references would clarify any confusion to us as to which&lt;code&gt;Year&lt;/code&gt;might be referenced, the GnuCOBOL compiler won&amp;rsquo;t be confused either.</source>
          <target state="translated">あなたは、それぞれの2があることに気づきました &lt;code&gt;Year&lt;/code&gt; &lt;code&gt;Month&lt;/code&gt; と &lt;code&gt;Day&lt;/code&gt; データ名定義されましたか？それぞれが他と区別されるように一意に &lt;code&gt;qualified&lt;/code&gt; できる場合、それは完全に合法です。たとえば、 &lt;code&gt;Year&lt;/code&gt; アイテムを見てみましょう。 1つは &lt;code&gt;From-Date&lt;/code&gt; データ項目の一部として定義され、もう1つは「To-Date」データ項目の一部として定義されます。 COBOLでは、これら2つのデータ項目への参照を実際には &lt;code&gt;Year OF From-Date&lt;/code&gt; と &lt;code&gt;Year OF To-Date&lt;/code&gt; または &lt;code&gt;Year IN From-Date&lt;/code&gt; と &lt;code&gt;Year IN To-Date&lt;/code&gt; 日としてコーディングします（COBOLでは &lt;code&gt;IN&lt;/code&gt; または &lt;code&gt;OF&lt;/code&gt; 使用される）。これらの参照は、どの &lt;code&gt;Year&lt;/code&gt; が参照されるかについての混乱を明確にするので、GnuCOBOLコンパイラーも混乱しないでしょう。</target>
        </trans-unit>
        <trans-unit id="3dae4df8e307eadc33cccfbf09afcf7803b28a27" translate="yes" xml:space="preserve">
          <source>Did you notice the output showing the contents of &quot;Arg1&quot; after the subroutine was called? Those contents were unchanged! The subroutine</source>
          <target state="translated">サブルーチンが呼ばれた後のArg1の内容が出力されているのに気付きましたか?内容は変わっていませんでした。サブルーチン</target>
        </trans-unit>
        <trans-unit id="27a0e6db152d459ea9ca2c04bec5a9f10e8422a8" translate="yes" xml:space="preserve">
          <source>Did you notice the output showing the contents of &lt;code&gt;Arg1&lt;/code&gt; after the subroutine was called? Those contents were unchanged! The subroutine</source>
          <target state="translated">Did you notice the output showing the contents of &lt;code&gt;Arg1&lt;/code&gt; after the subroutine was called? Those contents were unchanged! The subroutine</target>
        </trans-unit>
        <trans-unit id="b715cee1c1b9be48a112ee6f3d85a10725180731" translate="yes" xml:space="preserve">
          <source>Direct access and conditional access to the following variables:</source>
          <target state="translated">以下の変数への直接アクセスと条件付きアクセス。</target>
        </trans-unit>
        <trans-unit id="6e1b2f2be5fd4ec430320157951e3b9625d998af" translate="yes" xml:space="preserve">
          <source>Direct program execution syntax is &lt;code&gt;[&lt;var&gt;path&lt;/var&gt;]&lt;var&gt;program&lt;/var&gt; [&lt;var&gt;arguments&lt;/var&gt;]&lt;/code&gt;.</source>
          <target state="translated">Direct program execution syntax is &lt;code&gt;[&lt;var&gt;path&lt;/var&gt;]&lt;var&gt;program&lt;/var&gt; [&lt;var&gt;arguments&lt;/var&gt;]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6db57f7358d87d80d9ffe675eab1fa80c2597c75" translate="yes" xml:space="preserve">
          <source>Direct program execution syntax is as follows:</source>
          <target state="translated">プログラムの直接実行構文は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="f3a08a300c1fa7c7b7c3869e07803b1ee488a676" translate="yes" xml:space="preserve">
          <source>Directly executable form</source>
          <target state="translated">直接実行可能な形式</target>
        </trans-unit>
        <trans-unit id="bbbec44416269797757a1579d0b1247911acd066" translate="yes" xml:space="preserve">
          <source>Division</source>
          <target state="translated">Division</target>
        </trans-unit>
        <trans-unit id="50a314209c54751015d5ea87733dbccc98864d31" translate="yes" xml:space="preserve">
          <source>Division by zero</source>
          <target state="translated">ゼロによる除算</target>
        </trans-unit>
        <trans-unit id="3c91054f46891fec1cae6331f29fdbccb03d6a39" translate="yes" xml:space="preserve">
          <source>Divisions</source>
          <target state="translated">Divisions</target>
        </trans-unit>
        <trans-unit id="bfed8a27b8007686a54c60cbb2b8f522bfc8a067" translate="yes" xml:space="preserve">
          <source>Do not specify the</source>
          <target state="translated">を指定しないでください。</target>
        </trans-unit>
        <trans-unit id="768a18bcfd50a4cdbad454ea5c1997d92ec2f9ed" translate="yes" xml:space="preserve">
          <source>Do not specify the &quot;.so&quot; or &quot;.dll&quot; extension on the program name. The</source>
          <target state="translated">プログラム名に「.so」や「.dll」の拡張子を指定しないでください。プログラム名に</target>
        </trans-unit>
        <trans-unit id="d518fbdcc1583627074bd0312ac84a7ed352847b" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t bother worrying about it at compile-time. Use the &lt;code&gt;INITIALIZE&lt;/code&gt; (see &lt;a href=&quot;#INITIALIZE&quot;&gt;INITIALIZE&lt;/a&gt;) to initialize all data item occurrences in a table (at run-time) to their data-type-specific default values (numerics: 0, alphabetic and alphanumerics: spaces).</source>
          <target state="translated">Don&amp;rsquo;t bother worrying about it at compile-time. Use the &lt;code&gt;INITIALIZE&lt;/code&gt; (see &lt;a href=&quot;#INITIALIZE&quot;&gt;INITIALIZE&lt;/a&gt;) to initialize all data item occurrences in a table (at run-time) to their data-type-specific default values (numerics: 0, alphabetic and alphanumerics: spaces).</target>
        </trans-unit>
        <trans-unit id="fa34cf297b7f3240b7cd6005ab3bf76a3b53feb2" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t bother worrying about it at compile-time. Use the&lt;code&gt;INITIALIZE&lt;/code&gt;(see &lt;a href=&quot;#INITIALIZE&quot;&gt;INITIALIZE&lt;/a&gt;) to initialize all data item occurrences in a table (at run-time) to their data-type-specific default values (numerics: 0, alphabetic and alphanumerics: spaces).</source>
          <target state="translated">コンパイル時に気にする必要はありません。使用 &lt;code&gt;INITIALIZE&lt;/code&gt; を（参照&lt;a href=&quot;#INITIALIZE&quot;&gt;INITIALIZEを&lt;/a&gt;そのデータ型固有のデフォルト値（0、アルファベットと英数字：スペース数値）に（実行時に）テーブル内のすべてのデータ項目の発生を初期化します）。</target>
        </trans-unit>
        <trans-unit id="a1aca23a3aa1e9e5ee434e5c251ba724ccb58be9" translate="yes" xml:space="preserve">
          <source>Down-Arrow was pressed</source>
          <target state="translated">ダウンアローが押された</target>
        </trans-unit>
        <trans-unit id="30c07ce5caf5deecde3deef6ab423e4aec558db0" translate="yes" xml:space="preserve">
          <source>During the presentation of the &lt;code&gt;CONTROL FOOTING&lt;/code&gt; groups, any necessary &lt;code&gt;PAGE FOOTING&lt;/code&gt; and &lt;code&gt;PAGE HEADING&lt;/code&gt; groups will be presented as well.</source>
          <target state="translated">During the presentation of the &lt;code&gt;CONTROL FOOTING&lt;/code&gt; groups, any necessary &lt;code&gt;PAGE FOOTING&lt;/code&gt; and &lt;code&gt;PAGE HEADING&lt;/code&gt; groups will be presented as well.</target>
        </trans-unit>
        <trans-unit id="c121671e83c83f33db959abee0785d1ae6b8351f" translate="yes" xml:space="preserve">
          <source>During the presentation of the&lt;code&gt;CONTROL FOOTING&lt;/code&gt;groups, any necessary&lt;code&gt;PAGE FOOTING&lt;/code&gt;and&lt;code&gt;PAGE HEADING&lt;/code&gt;groups will be presented as well.</source>
          <target state="translated">&lt;code&gt;CONTROL FOOTING&lt;/code&gt; グループのプレゼンテーション中に、必要な &lt;code&gt;PAGE FOOTING&lt;/code&gt; および &lt;code&gt;PAGE HEADING&lt;/code&gt; グループも同様に表示されます。</target>
        </trans-unit>
        <trans-unit id="a70150b4c0486379b53b2bc61cc3b9e1cb791978" translate="yes" xml:space="preserve">
          <source>Dynamic Subprogram</source>
          <target state="translated">動的副プログラム</target>
        </trans-unit>
        <trans-unit id="6eb0f764570bb14c352993b6d496277e64157960" translate="yes" xml:space="preserve">
          <source>Dynamically-loadable</source>
          <target state="translated">Dynamically-loadable</target>
        </trans-unit>
        <trans-unit id="1348d390510adbb26537a28adfa74ec9b8165ca8" translate="yes" xml:space="preserve">
          <source>Dynamically-loadable executable form</source>
          <target state="translated">動的にロード可能な実行形式</target>
        </trans-unit>
        <trans-unit id="7e3705199d92a31df87165c76c1558b1ecf9d250" translate="yes" xml:space="preserve">
          <source>Dynamically-loadable modules may be removed from memory via the &lt;code&gt;CANCEL&lt;/code&gt; statement (see &lt;a href=&quot;#CANCEL&quot;&gt;CANCEL&lt;/a&gt;).</source>
          <target state="translated">Dynamically-loadable modules may be removed from memory via the &lt;code&gt;CANCEL&lt;/code&gt; statement (see &lt;a href=&quot;#CANCEL&quot;&gt;CANCEL&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="eb8d20220991838c8009592b6e63139e1b78c3ba" translate="yes" xml:space="preserve">
          <source>Dynamically-loadable modules may be removed from memory via the&lt;code&gt;CANCEL&lt;/code&gt;statement (see &lt;a href=&quot;#CANCEL&quot;&gt;CANCEL&lt;/a&gt;).</source>
          <target state="translated">動的にロード可能なモジュールを介してメモリから除去することができる &lt;code&gt;CANCEL&lt;/code&gt; （参照文&lt;a href=&quot;#CANCEL&quot;&gt;CANCEL&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="0fa10c416b610a8f4e61e630e86571f7fc9a58d6" translate="yes" xml:space="preserve">
          <source>Dynamically-loadable modules will be named</source>
          <target state="translated">動的にロード可能なモジュールは</target>
        </trans-unit>
        <trans-unit id="901bdca5f99ca3f0f8c3c45d17df5cd4768b3649" translate="yes" xml:space="preserve">
          <source>Dynamically-loadable modules will be named &quot;xxxxxxxx.dll&quot; on a Windows system, &quot;xxxxxxxx.so&quot; on a Unix system or &quot;xxxxxxxx.dylib&quot; on an OSX system, where &quot;xxxxxxxx&quot; exactly matches, including the usage of upper- and lower-case letters, the primary entry-point name &lt;code&gt;PROGRAM-ID&lt;/code&gt;or&lt;code&gt;FUNCTION-ID&lt;/code&gt; or an alternate entry point name defined via the&lt;code&gt;ENTRY&lt;/code&gt;statement (see &lt;a href=&quot;#ENTRY&quot;&gt;ENTRY&lt;/a&gt;) of any one of the GnuCOBOL programs included in that module.</source>
          <target state="translated">動的にロード可能なモジュールは、Windowsシステムでは「xxxxxxxx.dll」、Unixシステムでは「xxxxxxxx.so」、OSXシステムでは「xxxxxxxx.dylib」という名前になります。「xxxxxxxx」は、upper-そして、小文字を、プライマリエントリポイント名 &lt;code&gt;PROGRAM-ID&lt;/code&gt; や &lt;code&gt;FUNCTION-ID&lt;/code&gt; または介して定義された別のエントリ・ポイント名 &lt;code&gt;ENTRY&lt;/code&gt; の文は、（参照&lt;a href=&quot;#ENTRY&quot;&gt;ENTRY&lt;/a&gt;そのモジュールに含まれるGnuCOBOLプログラムのいずれかの）を。</target>
        </trans-unit>
        <trans-unit id="1ba95e0268763043cd1e34a29d8c36e35ba2d644" translate="yes" xml:space="preserve">
          <source>Dynamically-loaded subprograms are executed (from a COBOL syntax point of view) just like any other subprograms. What makes them unique, however, is that they are loaded into memory only when they are actually used the first time during the execution of a program.</source>
          <target state="translated">動的にロードされたサブプログラムは、他のサブプログラムと同様に(COBOL構文の観点から)実行される。しかし、それらをユニークなものにしているのは、プログラムの実行中に初めて実際に使用されたときにのみメモリにロードされるということである。</target>
        </trans-unit>
        <trans-unit id="e0184adedf913b076626646d3f52c3b49c39ad6d" translate="yes" xml:space="preserve">
          <source>E</source>
          <target state="translated">E</target>
        </trans-unit>
        <trans-unit id="030dcb4209a1709b74f2d59ef6da0355f006e9c6" translate="yes" xml:space="preserve">
          <source>E Function Syntax</source>
          <target state="translated">E 関数構文</target>
        </trans-unit>
        <trans-unit id="765a70eecffa68061065b3955fd85a92329d8392" translate="yes" xml:space="preserve">
          <source>E, EBCDIC, EC, ECHO, EGI, ELSE, EMI, EMPTY-CHECK, ENABLE, END, END-ACCEPT, END-ADD, END-CALL, END-CHAIN, END-COMPUTE, END-DELETE, END-DISPLAY, END-DIVIDE, END-EVALUATE, END-IF, END-MULTIPLY, END-OF-PAGE, END-PERFORM, END-READ, END-RECEIVE, END-RETURN, END-REWRITE, END-SEARCH, END-START, END-STRING, END-SUBTRACT, END-UNSTRING, END-WRITE, ENTRY, ENTRY-CONVENTION, ENVIRONMENT, ENVIRONMENT-NAME, ENVIRONMENT-VALUE, EO, EOL, EOP, EOS, EQUAL, EQUALS, ERASE, ERROR, ESCAPE, ESI, EVALUATE, EXCEPTION, EXCEPTION-FILE, EXCEPTION-FILE-N, EXCEPTION-LOCATION, EXCEPTION-LOCATION-N, EXCEPTION-OBJECT, EXCEPTION-STATEMENT, EXCEPTION-STATUS, EXCLUSIVE, EXIT, EXP, EXP10, EXPANDS, EXTEND, EXTERN, EXTERNAL</source>
          <target state="translated">E、EBCDIC、EC、ECHO、EGI、ELSE、EMI、EMPTY-CHECK、ENABLE、END、END-ACCEPT、END-ADD、END-CALL、END-CHAIN、END-COMPUTE、END-DELETE、END-DISPLAY、END-DIVIDE、END-EVALUATE、END-IF、END-MULTIPLY、END-OF-PAGE、END-PERFORM、END-READ、END-RECEIVE、END-RETURN、END-REWRITE、END-SEARCH、END-START、END-STRING、END-SUBTRACT、END-UNSTRING、END-WRITE、ENTRY。ENTRY-CONVENTION、ENVIRONMENT、ENVIRONMENT-NAME、ENVIRONMENT-VALUE、EO、EOL、EOP、EOS、EQUAL、EQUALS、ERASE、ERROR、ESCAPE、ESI、EVALUATE、EXCEPTION、EXCEPTION-FILE、EXCEPTION-FILE-N、EXCEPTION-LOCATION、EXCEPTION-LOCATION-N、EXCEPTION-OBJECT、EXCEPTION-STATEMENT、EXCEPTION-STATUS、EXCLUSIVE、EXIT、EXP、EXP10、EXPANDS、EXTEND、EXTERN、EXTERNAL</target>
        </trans-unit>
        <trans-unit id="ff4355cb9ec2c88cbc132299d98f12e6aa6beedd" translate="yes" xml:space="preserve">
          <source>E, EBCDIC, ECHO, EC, EGI, ELSE, EMI, EMPTY-CHECK, ENABLE, END-ACCEPT, END-ADD, END-CALL, END-CHAIN, END-COLOR, END-COMPUTE, END-DELETE, END-DISPLAY, END-DIVIDE, END-EVALUATE, END-IF, END-MODIFY, END-MULTIPLY, END-OF-PAGE, END-PERFORM, END-READ, END-RECEIVE, END-RETURN, END-REWRITE, END-SEARCH, END-START, END-STRING, END-SUBTRACT, END-UNSTRING, END-WRITE, END, ENGRAVED, ENSURE-VISIBLE, ENTRY-CONVENTION, ENTRY-FIELD, ENTRY-REASON, ENTRY, ENVIRONMENT-NAME, ENVIRONMENT-VALUE, ENVIRONMENT, EOL, EO, EOP, EOS, EQUALS, EQUAL, ERASE, ERROR, ESCAPE-BUTTON, ESCAPE, ESI, EVALUATE, EVENT-LIST, EVENT, EXCEPTION-FILE-N, EXCEPTION-FILE, EXCEPTION-LOCATION-N, EXCEPTION-LOCATION, EXCEPTION-OBJECT, EXCEPTION-STATEMENT, EXCEPTION-STATUS, EXCEPTION-VALUE, EXCEPTION, EXCLUSIVE, EXIT, EXP10, EXPANDS, EXPAND, EXP, EXTEND, EXTERNAL-FORM, EXTERNAL, EXTERN</source>
          <target state="translated">E、EBCDIC、ECHO、EC、EGI、ELSE、EMI、EMPTY-CHECK、ENABLE、END-ACCEPT、END-ADD、END-CALL、END-CHAIN、END-COLOR、END-COMPUTE、END-DELETE、END-DISPLAY、END-DIVIDE、END-EVALUATE、END-IF、END-MODIFY、END-MULTIPLY。END-OF-PAGE、END-PERFORM、END-READ、END-RECEIVE、END-RETURN、END-REWRITE、END-SEARCH、END-START、END-STRING、END-SUBTRACT、END-UNSTRING、END-WRITE、END、ENGRAVED、ENSURE-VISIBLE、ENTRY-CONVENTION、ENTRY-FIELD。ENTRY-REASON、ENTRY、ENVIRONMENT-NAME、ENVIRONMENT-VALUE、ENVIRONMENT、EOL、EO、EOOP、EOS、EQUALS、EQUAL、ERASE、ERROR、ESCAPE-BUTTON、ESCAPE、ESI、EVALUATE、EVENT-LIST、EVENT、EXCEPTION-FILE-N、EXCEPTION-FILE、EXCEPTION-LOCATION-N、EXCEPTION-LOCATION、EXCEPTION-OBJECT、EXCEPTION-STATEMENT、EXCEPTION-STATUS、EXCEPTION-VALUE、EXCEPTION、EXCLUSIVE、EXIT、EXP10、EXPANDS、EXPAND、EXP、EXTEND、EXTERNAL-FORM、EXTERNAL、EXTERNAL、EXTERNAL</target>
        </trans-unit>
        <trans-unit id="df984a0fcaacf728b4e9bc549b441c13997eb83a" translate="yes" xml:space="preserve">
          <source>E&lt;var&gt;nn&lt;/var&gt;</source>
          <target state="translated">E&lt;var&gt;nn&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="5effca06a41a1d22ea816cb82b7101e0e5ef5985" translate="yes" xml:space="preserve">
          <source>EC-ARGUMENT-FUNCTION</source>
          <target state="translated">EC-ARGUMENT-FUNCTION</target>
        </trans-unit>
        <trans-unit id="6f64130193ed68a9cf43ad043a1db86b51b7732f" translate="yes" xml:space="preserve">
          <source>EC-BOUND-ODO</source>
          <target state="translated">EC-BOUND-ODO</target>
        </trans-unit>
        <trans-unit id="7758bece637db0db2aa2eaf68b0a5ca23becb2f7" translate="yes" xml:space="preserve">
          <source>EC-BOUND-PTR</source>
          <target state="translated">EC-BOUND-PTR</target>
        </trans-unit>
        <trans-unit id="35ce6218474a39cc348cc1b04f5cfeb6a7093fba" translate="yes" xml:space="preserve">
          <source>EC-BOUND-REF-MOD</source>
          <target state="translated">EC-BOUND-REF-MOD</target>
        </trans-unit>
        <trans-unit id="b180672a32ac9f504a398165500845e145ddac86" translate="yes" xml:space="preserve">
          <source>EC-BOUND-SUBSCRIPT</source>
          <target state="translated">EC-BOUND-SUBSCRIPT</target>
        </trans-unit>
        <trans-unit id="47bd90096a9329462194bb3efc2ec0777c1cc384" translate="yes" xml:space="preserve">
          <source>EC-DATA-INCOMPATIBLE</source>
          <target state="translated">EC-DATA-INCOMPATIBLE</target>
        </trans-unit>
        <trans-unit id="599ae453fdf489e4c5507f42fe19ed6e9f07ec45" translate="yes" xml:space="preserve">
          <source>EC-I-O</source>
          <target state="translated">EC-I-O</target>
        </trans-unit>
        <trans-unit id="37a26c3979aa50c34cd4c0ac08b0ca77f51e47c2" translate="yes" xml:space="preserve">
          <source>EC-I-O-AT-END</source>
          <target state="translated">EC-I-O-AT-END</target>
        </trans-unit>
        <trans-unit id="7695dbca75bfb201f44d69c5f1d6236c16575ead" translate="yes" xml:space="preserve">
          <source>EC-I-O-EOP</source>
          <target state="translated">EC-I-O-EOP</target>
        </trans-unit>
        <trans-unit id="f5e8f83ff584e8d475c4cd5b0545216bba034cd9" translate="yes" xml:space="preserve">
          <source>EC-I-O-FILE-SHARING</source>
          <target state="translated">EC-I-O-FILE-SHARING</target>
        </trans-unit>
        <trans-unit id="6f67df493e29d40d1c466d3532abcf2151feb116" translate="yes" xml:space="preserve">
          <source>EC-I-O-IMP</source>
          <target state="translated">EC-I-O-IMP</target>
        </trans-unit>
        <trans-unit id="2bedcca397988fdafc22d2b1db2fe596c55b7abc" translate="yes" xml:space="preserve">
          <source>EC-I-O-INVALID-KEY</source>
          <target state="translated">EC-I-O-INVALID-KEY</target>
        </trans-unit>
        <trans-unit id="d37a719c5ec9cc280a3423d35c359f53361556cf" translate="yes" xml:space="preserve">
          <source>EC-I-O-LOGIC-ERROR</source>
          <target state="translated">EC-I-O-LOGIC-ERROR</target>
        </trans-unit>
        <trans-unit id="22c38171abcae25c72623446be7e409f53d9f1cb" translate="yes" xml:space="preserve">
          <source>EC-I-O-PERMANENT-ERROR</source>
          <target state="translated">EC-I-O-PERMANENT-ERROR</target>
        </trans-unit>
        <trans-unit id="e57f56d25192a637896e66e92bcae79d33a72575" translate="yes" xml:space="preserve">
          <source>EC-I-O-RECORD-OPERATION</source>
          <target state="translated">EC-I-O-RECORD-OPERATION</target>
        </trans-unit>
        <trans-unit id="f232808a3899bdcf8d909765f6e715db467fc08e" translate="yes" xml:space="preserve">
          <source>EC-IMP-ACCEPT</source>
          <target state="translated">EC-IMP-ACCEPT</target>
        </trans-unit>
        <trans-unit id="5b7c6f8d33dccc651230c71c804f70a23dfd3fb3" translate="yes" xml:space="preserve">
          <source>EC-IMP-DISPLAY</source>
          <target state="translated">EC-IMP-DISPLAY</target>
        </trans-unit>
        <trans-unit id="0348c4c249e24b62ec6318d07a0918b290c97136" translate="yes" xml:space="preserve">
          <source>EC-OVERFLOW</source>
          <target state="translated">EC-OVERFLOW</target>
        </trans-unit>
        <trans-unit id="39873e8196f86a467a7a5394f6dae0df7cb7ec49" translate="yes" xml:space="preserve">
          <source>EC-OVERFLOW-STRING</source>
          <target state="translated">EC-OVERFLOW-STRING</target>
        </trans-unit>
        <trans-unit id="a912b54889e1360e1822bf001ecc4bcce0057de1" translate="yes" xml:space="preserve">
          <source>EC-OVERFLOW-UNSTRING</source>
          <target state="translated">EC-OVERFLOW-UNSTRING</target>
        </trans-unit>
        <trans-unit id="642796743342819c46389d927083877ea07d115a" translate="yes" xml:space="preserve">
          <source>EC-PROGRAM-NOT-FOUND</source>
          <target state="translated">EC-PROGRAM-NOT-FOUND</target>
        </trans-unit>
        <trans-unit id="fbeac2b7df577454ec16676f61d4d1c2dd9e4b66" translate="yes" xml:space="preserve">
          <source>EC-RANGE-INSPECT-SIZE</source>
          <target state="translated">EC-RANGE-INSPECT-SIZE</target>
        </trans-unit>
        <trans-unit id="44603209bfd2fe1e4c13a73d2183c6926c88fa44" translate="yes" xml:space="preserve">
          <source>EC-SIZE</source>
          <target state="translated">EC-SIZE</target>
        </trans-unit>
        <trans-unit id="d4c83319eed34736080dc026b83369dc0ab0f9e0" translate="yes" xml:space="preserve">
          <source>EC-SIZE-OVERFLOW</source>
          <target state="translated">EC-SIZE-OVERFLOW</target>
        </trans-unit>
        <trans-unit id="995fc7c1e9f2389fb223769d4efff5b6078bcd23" translate="yes" xml:space="preserve">
          <source>EC-SIZE-TRUNCATION</source>
          <target state="translated">EC-SIZE-TRUNCATION</target>
        </trans-unit>
        <trans-unit id="2b0855452a33f27ee0e3591f258c880264670a28" translate="yes" xml:space="preserve">
          <source>EC-SIZE-ZERO-DIVIDE</source>
          <target state="translated">EC-SIZE-ZERO-DIVIDE</target>
        </trans-unit>
        <trans-unit id="74425f6db6d6bbce95e0144ef83b5f7377196c52" translate="yes" xml:space="preserve">
          <source>EC-STORAGE-NOT-ALLOC</source>
          <target state="translated">EC-STORAGE-NOT-ALLOC</target>
        </trans-unit>
        <trans-unit id="2bcce8379324db20847e97d1dbdd7613e1e978ce" translate="yes" xml:space="preserve">
          <source>EC-STORAGE-NOT-AVAIL</source>
          <target state="translated">EC-STORAGE-NOT-AVAIL</target>
        </trans-unit>
        <trans-unit id="8a1d9b464a3fd8c9e5f06af5b43005029d7c16b1" translate="yes" xml:space="preserve">
          <source>EEEEEE</source>
          <target state="translated">EEEEEE</target>
        </trans-unit>
        <trans-unit id="af80c9b4c454f7d961a11331ae6fb9445df82b42" translate="yes" xml:space="preserve">
          <source>EMPTY-CHECK Attribute Syntax</source>
          <target state="translated">EMPTY-CHECK 属性構文</target>
        </trans-unit>
        <trans-unit id="f84802327b6f04b6ca9f5ad265dd6839e26a2682" translate="yes" xml:space="preserve">
          <source>ENTER key pressed</source>
          <target state="translated">ENTERキーを押す</target>
        </trans-unit>
        <trans-unit id="1737c25f7adeb7b4b0cf8beddc7007f6c44cee3c" translate="yes" xml:space="preserve">
          <source>ENTRY Syntax</source>
          <target state="translated">ENTRY 構文</target>
        </trans-unit>
        <trans-unit id="c8d3810b7c62cddd57ba48b6b05b3d7aaeb1d1c3" translate="yes" xml:space="preserve">
          <source>ENTRY-Argument</source>
          <target state="translated">ENTRY-Argument</target>
        </trans-unit>
        <trans-unit id="56bc597bd92048db144c774480c4ac8ebc388d8a" translate="yes" xml:space="preserve">
          <source>ENTRY-Argument Syntax</source>
          <target state="translated">エントリ引数構文</target>
        </trans-unit>
        <trans-unit id="aeefff7bdd0630e9dbc6edcccf44b29d8e1b5f66" translate="yes" xml:space="preserve">
          <source>ENVIRONMENT DIVISION Syntax</source>
          <target state="translated">環境部門の構文</target>
        </trans-unit>
        <trans-unit id="10be88097f9b48fa4b8f5918ab59b09ba828e0cf" translate="yes" xml:space="preserve">
          <source>ERASE Clause Syntax</source>
          <target state="translated">ERASE 節構文</target>
        </trans-unit>
        <trans-unit id="ac9203c958d901638098a3a27f18842d1485d81c" translate="yes" xml:space="preserve">
          <source>EVALUATE</source>
          <target state="translated">EVALUATE</target>
        </trans-unit>
        <trans-unit id="5dad113e5d1b8f3e62a36027129de407d3e20ed5" translate="yes" xml:space="preserve">
          <source>EVALUATE Selection Object Syntax</source>
          <target state="translated">EVALUATE 選択オブジェクト構文</target>
        </trans-unit>
        <trans-unit id="5a83d6a3d7ae8bc96fedf1c772fbc996a4a470be" translate="yes" xml:space="preserve">
          <source>EVALUATE Selection Subject Syntax</source>
          <target state="translated">EVALUATE 選択科目構文</target>
        </trans-unit>
        <trans-unit id="692ff2f950c444cebee2d4c4c60df5cc939b8fd9" translate="yes" xml:space="preserve">
          <source>EVALUATE Syntax</source>
          <target state="translated">EVALUATE 構文</target>
        </trans-unit>
        <trans-unit id="469cc380359b81f762280d15538dfac8966996c9" translate="yes" xml:space="preserve">
          <source>EXCEPTION-FILE Function Syntax</source>
          <target state="translated">EXCEPTION-FILE 関数構文</target>
        </trans-unit>
        <trans-unit id="75bfe6f4536ac0ec1c07de964364a292e1b9db96" translate="yes" xml:space="preserve">
          <source>EXCEPTION-FILE-N Function Syntax</source>
          <target state="translated">EXCEPTION-FILE-N 関数構文</target>
        </trans-unit>
        <trans-unit id="479aad1c99b2dd0808d2f3ab8cbcb8f9343aaefd" translate="yes" xml:space="preserve">
          <source>EXCEPTION-LOCATION Function Syntax</source>
          <target state="translated">EXCEPTION-LOCATION 関数構文</target>
        </trans-unit>
        <trans-unit id="422a126495bc1b3fee7deb7aca538449bf5eb05e" translate="yes" xml:space="preserve">
          <source>EXCEPTION-LOCATION-N Function Syntax</source>
          <target state="translated">EXCEPTION-LOCATION-N 関数構文</target>
        </trans-unit>
        <trans-unit id="33912bed8a51a3f75c3314cf3a0622c55f3ea0f0" translate="yes" xml:space="preserve">
          <source>EXCEPTION-STATEMENT Function Syntax</source>
          <target state="translated">EXCEPTION-STATEMENT 関数構文</target>
        </trans-unit>
        <trans-unit id="e953091eafe979edb67d0cb82e5a7cfb2279431b" translate="yes" xml:space="preserve">
          <source>EXCEPTION-STATUS Function Syntax</source>
          <target state="translated">EXCEPTION-STATUS 関数構文</target>
        </trans-unit>
        <trans-unit id="2d0d9c09a42e3d4ca8de4f760e2a0e18040ed305" translate="yes" xml:space="preserve">
          <source>EXIT Syntax</source>
          <target state="translated">EXIT 構文</target>
        </trans-unit>
        <trans-unit id="d686d0c0c789b999f85984848eb8e9e113877d1c" translate="yes" xml:space="preserve">
          <source>EXP Function Syntax</source>
          <target state="translated">EXP 関数構文</target>
        </trans-unit>
        <trans-unit id="82ec30d94a7c621453c959d12251cec86e515836" translate="yes" xml:space="preserve">
          <source>EXP10 Function Syntax</source>
          <target state="translated">EXP10 関数構文</target>
        </trans-unit>
        <trans-unit id="f6c4ca6abf37447285ca9c9057e5a05661c09827" translate="yes" xml:space="preserve">
          <source>EXTERN the program name is treated as an external reference.</source>
          <target state="translated">EXTERN プログラム名は外部参照として扱われます。</target>
        </trans-unit>
        <trans-unit id="03fa72b305c4462fb55710bd2cd41b8ac8239e43" translate="yes" xml:space="preserve">
          <source>EXTERNAL Attribute Syntax</source>
          <target state="translated">EXTERNAL 属性構文</target>
        </trans-unit>
        <trans-unit id="76da433919c17ebd8d966fabcaa51186d16cbb3c" translate="yes" xml:space="preserve">
          <source>Each &amp;lt;</source>
          <target state="translated">各&amp;lt;</target>
        </trans-unit>
        <trans-unit id="ab7a12a52c6f9b3787b7205827450dfa5e210ea2" translate="yes" xml:space="preserve">
          <source>Each &amp;lt;&amp;lt;</source>
          <target state="translated">各&amp;lt;&amp;lt;</target>
        </trans-unit>
        <trans-unit id="900ec32090cdb9a3320e1a78085e5fe28837f0e3" translate="yes" xml:space="preserve">
          <source>Each 01-level data item described within a subprogram&amp;rsquo;s linkage section should correspond to an argument passed on a &lt;code&gt;CALL&lt;/code&gt; statement (see &lt;a href=&quot;#CALL&quot;&gt;CALL&lt;/a&gt;) or an argument on a function call to the subprogram.</source>
          <target state="translated">Each 01-level data item described within a subprogram&amp;rsquo;s linkage section should correspond to an argument passed on a &lt;code&gt;CALL&lt;/code&gt; statement (see &lt;a href=&quot;#CALL&quot;&gt;CALL&lt;/a&gt;) or an argument on a function call to the subprogram.</target>
        </trans-unit>
        <trans-unit id="212df151f4df6b415b0184ea3c628ccc78c3a454" translate="yes" xml:space="preserve">
          <source>Each 01-level data item described within a subprogram&amp;rsquo;s linkage section should correspond to an argument passed on a&lt;code&gt;CALL&lt;/code&gt;statement (see &lt;a href=&quot;#CALL&quot;&gt;CALL&lt;/a&gt;) or an argument on a function call to the subprogram.</source>
          <target state="translated">渡された引数に対応する必要があり、それぞれ01レベルのデータ項目は、サブプログラムの連結部内記載 &lt;code&gt;CALL&lt;/code&gt; ステートメント（参照&lt;a href=&quot;#CALL&quot;&gt;CALLを&lt;/a&gt;）またはサブプログラムの関数呼び出しに引数。</target>
        </trans-unit>
        <trans-unit id="115717c65e80cd5824c32661a8d77c36da7fcfdf" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;&amp;gt;&amp;gt;IF&lt;/code&gt; directive must be terminated by an  &lt;code&gt;&amp;gt;&amp;gt;END-IF&lt;/code&gt; directive.</source>
          <target state="translated">Each &lt;code&gt;&amp;gt;&amp;gt;IF&lt;/code&gt; directive must be terminated by an &lt;code&gt;&amp;gt;&amp;gt;END-IF&lt;/code&gt; directive.</target>
        </trans-unit>
        <trans-unit id="38832343fe1ed825a2cbac8e9d80c0f342cb4a1d" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;RD&lt;/code&gt; will have the following allocated for it:</source>
          <target state="translated">Each &lt;code&gt;RD&lt;/code&gt; will have the following allocated for it:</target>
        </trans-unit>
        <trans-unit id="921f886ae3ffaa77e00f545e0c06dbb1d94e2029" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;WHEN&lt;/code&gt; clause (other than the  &lt;code&gt;WHEN OTHER&lt;/code&gt; clause, if any) must have the same number of &lt;var&gt;Selection-Object&lt;/var&gt; clauses as there are &lt;var&gt;Selection-Subject&lt;/var&gt; clauses.</source>
          <target state="translated">Each &lt;code&gt;WHEN&lt;/code&gt; clause (other than the &lt;code&gt;WHEN OTHER&lt;/code&gt; clause, if any) must have the same number of &lt;var&gt;Selection-Object&lt;/var&gt; clauses as there are &lt;var&gt;Selection-Subject&lt;/var&gt; clauses.</target>
        </trans-unit>
        <trans-unit id="443bc8f743c2aa71daaad9dc46ec5b0f598a0590" translate="yes" xml:space="preserve">
          <source>Each &lt;var&gt;CDF-Conditional-Expression-n&lt;/var&gt; will be evaluated, in turn, in the sequence in which they are coded in the &amp;gt;&amp;gt;IF statement and any &lt;code&gt;&amp;gt;&amp;gt;ELIF&lt;/code&gt; clauses that may be present until one evaluates to &lt;code&gt;TRUE&lt;/code&gt;. Once one of them evaluates to &lt;code&gt;TRUE&lt;/code&gt;, the &lt;var&gt;Program-Source-Lines-n&lt;/var&gt; block of code that corresponds to the &lt;code&gt;TRUE&lt;/code&gt;&lt;var&gt;CDF-Conditional-Expression-n&lt;/var&gt; will be one that is processed. All others within the &lt;code&gt;&amp;gt;&amp;gt;IF&lt;/code&gt;-&lt;code&gt;&amp;gt;&amp;gt;END-IF&lt;/code&gt; scope will be ignored.</source>
          <target state="translated">Each &lt;var&gt;CDF-Conditional-Expression-n&lt;/var&gt; will be evaluated, in turn, in the sequence in which they are coded in the &amp;gt;&amp;gt;IF statement and any &lt;code&gt;&amp;gt;&amp;gt;ELIF&lt;/code&gt; clauses that may be present until one evaluates to &lt;code&gt;TRUE&lt;/code&gt; . Once one of them evaluates to &lt;code&gt;TRUE&lt;/code&gt; , the &lt;var&gt;Program-Source-Lines-n&lt;/var&gt; block of code that corresponds to the &lt;code&gt;TRUE&lt;/code&gt; &lt;var&gt;CDF-Conditional-Expression-n&lt;/var&gt; will be one that is processed. All others within the &lt;code&gt;&amp;gt;&amp;gt;IF&lt;/code&gt; - &lt;code&gt;&amp;gt;&amp;gt;END-IF&lt;/code&gt; scope will be ignored.</target>
        </trans-unit>
        <trans-unit id="3f6587562c16624da235296e266b71749a07a083" translate="yes" xml:space="preserve">
          <source>Each &lt;var&gt;ENTRY-Argument&lt;/var&gt; specified on the &lt;code&gt;ENTRY&lt;/code&gt; statement must be defined in the linkage section of the subroutine in which the &lt;code&gt;ENTRY&lt;/code&gt; statement exists.</source>
          <target state="translated">Each &lt;var&gt;ENTRY-Argument&lt;/var&gt; specified on the &lt;code&gt;ENTRY&lt;/code&gt; statement must be defined in the linkage section of the subroutine in which the &lt;code&gt;ENTRY&lt;/code&gt; statement exists.</target>
        </trans-unit>
        <trans-unit id="fb7d1f9fd639efe6754262d5ceb8ea7ae40bbd28" translate="yes" xml:space="preserve">
          <source>Each &lt;var&gt;conditional-expression-n&lt;/var&gt; will be evaluated, in turn, until either one evaluates to a value of &lt;code&gt;TRUE&lt;/code&gt; or all have evaluated to &lt;code&gt;FALSE&lt;/code&gt;.</source>
          <target state="translated">Each &lt;var&gt;conditional-expression-n&lt;/var&gt; will be evaluated, in turn, until either one evaluates to a value of &lt;code&gt;TRUE&lt;/code&gt; or all have evaluated to &lt;code&gt;FALSE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b6878e47bf6df2f2a91e53ac73fdcc30c966fa21" translate="yes" xml:space="preserve">
          <source>Each &lt;var&gt;file-name-1&lt;/var&gt;, &lt;var&gt;file-name-2&lt;/var&gt; and &lt;var&gt;file-name-3&lt;/var&gt; (if specified) must reference &lt;code&gt;ORGANIZATION LINE SEQUENTIAL&lt;/code&gt; (see &lt;a href=&quot;#ORGANIZATION-LINE-SEQUENTIAL&quot;&gt;ORGANIZATION LINE SEQUENTIAL&lt;/a&gt;) or &lt;code&gt;ORGANIZATION SEQUENTIAL&lt;/code&gt; (see &lt;a href=&quot;#ORGANIZATION-SEQUENTIAL&quot;&gt;ORGANIZATION SEQUENTIAL&lt;/a&gt;) files. These files must be defined using a file description (&lt;code&gt;FD&lt;/code&gt; (see &lt;a href=&quot;#File_002fSort_002dDescription&quot;&gt;File/Sort-Description&lt;/a&gt;)).</source>
          <target state="translated">Each &lt;var&gt;file-name-1&lt;/var&gt; , &lt;var&gt;file-name-2&lt;/var&gt; and &lt;var&gt;file-name-3&lt;/var&gt; (if specified) must reference &lt;code&gt;ORGANIZATION LINE SEQUENTIAL&lt;/code&gt; (see &lt;a href=&quot;#ORGANIZATION-LINE-SEQUENTIAL&quot;&gt;ORGANIZATION LINE SEQUENTIAL&lt;/a&gt;) or &lt;code&gt;ORGANIZATION SEQUENTIAL&lt;/code&gt; (see &lt;a href=&quot;#ORGANIZATION-SEQUENTIAL&quot;&gt;ORGANIZATION SEQUENTIAL&lt;/a&gt;) files. These files must be defined using a file description ( &lt;code&gt;FD&lt;/code&gt; (see &lt;a href=&quot;#File_002fSort_002dDescription&quot;&gt;File/Sort-Description&lt;/a&gt;)).</target>
        </trans-unit>
        <trans-unit id="cd44d0a6a48e3cb5454dd2527bb158d843786124" translate="yes" xml:space="preserve">
          <source>Each &lt;var&gt;identifier-1&lt;/var&gt; must be a numeric or numeric-edited data item.</source>
          <target state="translated">Each &lt;var&gt;identifier-1&lt;/var&gt; must be a numeric or numeric-edited data item.</target>
        </trans-unit>
        <trans-unit id="a5d2215490bd5d8ccbcb8ce83e4d44e626cc69d6" translate="yes" xml:space="preserve">
          <source>Each &lt;var&gt;literal-1&lt;/var&gt; / &lt;var&gt;identifier-1&lt;/var&gt; will be referred to as a source item. The receiving data item is &lt;var&gt;identifier-3&lt;/var&gt;.</source>
          <target state="translated">Each &lt;var&gt;literal-1&lt;/var&gt; / &lt;var&gt;identifier-1&lt;/var&gt; will be referred to as a source item. The receiving data item is &lt;var&gt;identifier-3&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="7d37e9deb20c6f9a95e03d94a50fd89c54c2786d" translate="yes" xml:space="preserve">
          <source>Each &lt;var&gt;report-name-1&lt;/var&gt; must be the name of a report having an &lt;code&gt;RD&lt;/code&gt; (see &lt;a href=&quot;#REPORT-SECTION&quot;&gt;REPORT SECTION&lt;/a&gt;) defined for it.</source>
          <target state="translated">Each &lt;var&gt;report-name-1&lt;/var&gt; must be the name of a report having an &lt;code&gt;RD&lt;/code&gt; (see &lt;a href=&quot;#REPORT-SECTION&quot;&gt;REPORT SECTION&lt;/a&gt;) defined for it.</target>
        </trans-unit>
        <trans-unit id="e05312e63008629d1548d37cc3382fa2fdc5457d" translate="yes" xml:space="preserve">
          <source>Each Event-Handler-Routine will be a separate section devoted to trapping a particular run-time event. If there are no such sections coded, the &lt;code&gt;DECLARATIVES.&lt;/code&gt; and &lt;code&gt;END DECLARATIVES.&lt;/code&gt; lines may be omitted.</source>
          <target state="translated">Each Event-Handler-Routine will be a separate section devoted to trapping a particular run-time event. If there are no such sections coded, the &lt;code&gt;DECLARATIVES.&lt;/code&gt; and &lt;code&gt;END DECLARATIVES.&lt;/code&gt; lines may be omitted.</target>
        </trans-unit>
        <trans-unit id="50184d6f70a255b3866145aa336ae939da7ab9ab" translate="yes" xml:space="preserve">
          <source>Each Event-Handler-Routine will be a separate section devoted to trapping a particular run-time event. If there are no such sections coded, the&lt;code&gt;DECLARATIVES.&lt;/code&gt;and&lt;code&gt;END DECLARATIVES.&lt;/code&gt;lines may be omitted.</source>
          <target state="translated">各Event-Handler-Routineは、特定のランタイムイベントをトラップするための個別のセクションになります。そのようなセクションがコーディングされていない場合は、 &lt;code&gt;DECLARATIVES.&lt;/code&gt; と &lt;code&gt;END DECLARATIVES.&lt;/code&gt; 行は省略できます。</target>
        </trans-unit>
        <trans-unit id="0b25dfd77ca9db15d2164fe35f200c91c7b2bda7" translate="yes" xml:space="preserve">
          <source>Each character, in turn, within the &quot;from&quot; string will be searched for in the target range of the inspect subject. Each located occurrence will be replaced by the corresponding character of the &quot;to&quot; string.</source>
          <target state="translated">from」文字列内の各文字が、検査対象の対象範囲内で順番に検索される。検出された各出現は、「to」文字列の対応する文字に置き換えられる。</target>
        </trans-unit>
        <trans-unit id="b543ee1616a4bbe14b82d846d38eb42687fc36f4" translate="yes" xml:space="preserve">
          <source>Each character, in turn, within the &amp;ldquo;from&amp;rdquo; string will be searched for in the target range of the inspect subject. Each located occurrence will be replaced by the corresponding character of the &amp;ldquo;to&amp;rdquo; string.</source>
          <target state="translated">Each character, in turn, within the &amp;ldquo;from&amp;rdquo; string will be searched for in the target range of the inspect subject. Each located occurrence will be replaced by the corresponding character of the &amp;ldquo;to&amp;rdquo; string.</target>
        </trans-unit>
        <trans-unit id="97de2fc8d281d19be767cf651c3cbc1b7509f469" translate="yes" xml:space="preserve">
          <source>Each data item has 7 added to it ten</source>
          <target state="translated">各データ項目には7が追加されています。</target>
        </trans-unit>
        <trans-unit id="ab9334c293ad692df1c39f41752b9038645373a6" translate="yes" xml:space="preserve">
          <source>Each destination field may have an optional  &lt;code&gt;COUNT&lt;/code&gt; clause. If a &lt;code&gt;COUNT&lt;/code&gt; clause is specified, &lt;var&gt;identifier-6&lt;/var&gt; will have the size of the sub string (in characters) for the destination field moved into it. If a destination field was not altered (because an insufficient number of sub strings were identified), &lt;var&gt;identifier-6&lt;/var&gt; for that destination field will also be unchanged.</source>
          <target state="translated">Each destination field may have an optional &lt;code&gt;COUNT&lt;/code&gt; clause. If a &lt;code&gt;COUNT&lt;/code&gt; clause is specified, &lt;var&gt;identifier-6&lt;/var&gt; will have the size of the sub string (in characters) for the destination field moved into it. If a destination field was not altered (because an insufficient number of sub strings were identified), &lt;var&gt;identifier-6&lt;/var&gt; for that destination field will also be unchanged.</target>
        </trans-unit>
        <trans-unit id="9c73df2fc0d418efb070a92e84af9f4f1dd43625" translate="yes" xml:space="preserve">
          <source>Each destination field may have an optional  &lt;code&gt;DELIMITER&lt;/code&gt; clause. If a &lt;code&gt;DELIMITER&lt;/code&gt; clause is specified, &lt;var&gt;identifier-5&lt;/var&gt; will have the delimiter character string used to identify the sub string for the destination field moved into it. If a destination field was not altered (because an insufficient number of sub strings were identified), &lt;var&gt;identifier-5&lt;/var&gt; for that destination field will also be unchanged.</source>
          <target state="translated">Each destination field may have an optional &lt;code&gt;DELIMITER&lt;/code&gt; clause. If a &lt;code&gt;DELIMITER&lt;/code&gt; clause is specified, &lt;var&gt;identifier-5&lt;/var&gt; will have the delimiter character string used to identify the sub string for the destination field moved into it. If a destination field was not altered (because an insufficient number of sub strings were identified), &lt;var&gt;identifier-5&lt;/var&gt; for that destination field will also be unchanged.</target>
        </trans-unit>
        <trans-unit id="83ca16f4859e7d91cc156f672d81b61c4963b390" translate="yes" xml:space="preserve">
          <source>Each destination field may have an optional&lt;code&gt;COUNT&lt;/code&gt;</source>
          <target state="translated">各宛先フィールドにはオプションの &lt;code&gt;COUNT&lt;/code&gt; を含めることができます</target>
        </trans-unit>
        <trans-unit id="ce3fcdc8c9dc594c99b3c39bb2ebb465ca20a452" translate="yes" xml:space="preserve">
          <source>Each destination field may have an optional&lt;code&gt;DELIMITER&lt;/code&gt;</source>
          <target state="translated">各宛先フィールドには、オプションの &lt;code&gt;DELIMITER&lt;/code&gt; を含めることができます</target>
        </trans-unit>
        <trans-unit id="824ef1a5b203c9da09868c95374d778cb8131338" translate="yes" xml:space="preserve">
          <source>Each division may consist of a variety of sections and each section consists of one or more paragraphs. A paragraph consists of sentences, each of which consists of one or more statements.</source>
          <target state="translated">各分割は、様々なセクションから構成されていてもよく、各セクションは、1つ以上の段落から構成されている。段落は文で構成され、各段落は1つまたは複数の文で構成される。</target>
        </trans-unit>
        <trans-unit id="3e510dab54525f1b1c6a22ae1d10e5768762c025" translate="yes" xml:space="preserve">
          <source>Each file specified on the &lt;code&gt;cobc&lt;/code&gt; command constitutes a  &lt;em&gt;Compilation Unit&lt;/em&gt;. A compilation unit may be a single GnuCOBOL program &amp;mdash; with or without nested subprograms(see &lt;a href=&quot;#Independent-vs-Contained-vs-Nested-Subprograms&quot;&gt;Independent vs Contained vs Nested Subprograms&lt;/a&gt;) &amp;mdash; or multiple GnuCOBOL programs, separated by &lt;code&gt;END PROGRAM&lt;/code&gt; or &lt;code&gt;END FUNCTION&lt;/code&gt; marker lines, as appropriate. See &lt;a href=&quot;#Independent-vs-Contained-vs-Nested-Subprograms&quot;&gt;Independent vs Contained vs Nested Subprograms&lt;/a&gt;, for some examples of these marker lines.</source>
          <target state="translated">Each file specified on the &lt;code&gt;cobc&lt;/code&gt; command constitutes a &lt;em&gt;Compilation Unit&lt;/em&gt;. A compilation unit may be a single GnuCOBOL program &amp;mdash; with or without nested subprograms(see &lt;a href=&quot;#Independent-vs-Contained-vs-Nested-Subprograms&quot;&gt;Independent vs Contained vs Nested Subprograms&lt;/a&gt;) &amp;mdash; or multiple GnuCOBOL programs, separated by &lt;code&gt;END PROGRAM&lt;/code&gt; or &lt;code&gt;END FUNCTION&lt;/code&gt; marker lines, as appropriate. See &lt;a href=&quot;#Independent-vs-Contained-vs-Nested-Subprograms&quot;&gt;Independent vs Contained vs Nested Subprograms&lt;/a&gt;, for some examples of these marker lines.</target>
        </trans-unit>
        <trans-unit id="e2bd01ccaa12000bd7c8aa2fcbf0347999187549" translate="yes" xml:space="preserve">
          <source>Each file specified on the&lt;code&gt;cobc&lt;/code&gt;command constitutes a &amp;rsquo;</source>
          <target state="translated">&lt;code&gt;cobc&lt;/code&gt; コマンドで指定された各ファイルは、 '</target>
        </trans-unit>
        <trans-unit id="00f5259fa9f0d932f10e8397b1eec6feeb68f182" translate="yes" xml:space="preserve">
          <source>Each occurrence is referenced using the subscript syntax (a numeric literal, arithmetic expression or numeric identifier enclosed within parenthesis) shown above.</source>
          <target state="translated">各オカレンスは、上記の添え字構文(括弧内に囲まれた数値リテラル、算術式または数値識別子)を用いて参照されます。</target>
        </trans-unit>
        <trans-unit id="0bfdf714118b0517a29efa6c64d0dfc4da15a1be" translate="yes" xml:space="preserve">
          <source>Each occurrence that is set to a value of zero prior to the &lt;code&gt;CALL X&quot;91&quot;&lt;/code&gt; will cause the corresponding switch to be cleared. Each occurrence set to 1 prior to the &lt;code&gt;CALL X&quot;91&quot;&lt;/code&gt; will cause the corresponding switch to be set.</source>
          <target state="translated">Each occurrence that is set to a value of zero prior to the &lt;code&gt;CALL X&quot;91&quot;&lt;/code&gt; will cause the corresponding switch to be cleared. Each occurrence set to 1 prior to the &lt;code&gt;CALL X&quot;91&quot;&lt;/code&gt; will cause the corresponding switch to be set.</target>
        </trans-unit>
        <trans-unit id="2246e9f359281d69c5119e3504fc16ed25bac66e" translate="yes" xml:space="preserve">
          <source>Each occurrence that is set to a value of zero prior to the&lt;code&gt;CALL X&quot;91&quot;&lt;/code&gt;will cause the corresponding switch to be cleared. Each occurrence set to 1 prior to the&lt;code&gt;CALL X&quot;91&quot;&lt;/code&gt;will cause the corresponding switch to be set.</source>
          <target state="translated">&lt;code&gt;CALL X&quot;91&quot;&lt;/code&gt; 前にゼロの値に設定される各オカレンスは、対応するスイッチをクリアします。 &lt;code&gt;CALL X&quot;91&quot;&lt;/code&gt; 前に各オカレンスを1に設定すると、対応するスイッチが設定されます。</target>
        </trans-unit>
        <trans-unit id="47a2c92912290d0b93c63c77a2120c44882c45e8" translate="yes" xml:space="preserve">
          <source>Each of &amp;lt;</source>
          <target state="translated">各&amp;lt;</target>
        </trans-unit>
        <trans-unit id="86fdfce12b8a18bd22af0360afc91496fd89cc05" translate="yes" xml:space="preserve">
          <source>Each of &lt;var&gt;identifier-6&lt;/var&gt;, &lt;var&gt;identifier-7&lt;/var&gt; and &lt;var&gt;identifier-8&lt;/var&gt; must be elementary non-edited integer numeric items.</source>
          <target state="translated">Each of &lt;var&gt;identifier-6&lt;/var&gt; , &lt;var&gt;identifier-7&lt;/var&gt; and &lt;var&gt;identifier-8&lt;/var&gt; must be elementary non-edited integer numeric items.</target>
        </trans-unit>
        <trans-unit id="a97f6698ca0ef433fb7ac939df954fa715d8f25a" translate="yes" xml:space="preserve">
          <source>Each of the &amp;lt;</source>
          <target state="translated">各&amp;lt;</target>
        </trans-unit>
        <trans-unit id="2d26415007053c16356543a3cca49abac4eedd03" translate="yes" xml:space="preserve">
          <source>Each of the 1&lt;sup&gt;st&lt;/sup&gt; eight occurrences of the array will be set to either 0 or 1 &amp;mdash; 1 if the corresponding switch is set, 0 otherwise.</source>
          <target state="translated">Each of the 1&lt;sup&gt;st&lt;/sup&gt; eight occurrences of the array will be set to either 0 or 1 &amp;mdash; 1 if the corresponding switch is set, 0 otherwise.</target>
        </trans-unit>
        <trans-unit id="7287503eaa543018b27e0323b8db19263aedff48" translate="yes" xml:space="preserve">
          <source>Each of the 1st eight occurrences of the array will be set to either 0 or 1 &amp;mdash; 1 if the corresponding switch is set, 0 otherwise.</source>
          <target state="translated">配列の最初の8つのオカレンスはそれぞれ、対応するスイッチが設定されている場合は0または1 &amp;mdash; 1に設定され、それ以外の場合は0に設定されます。</target>
        </trans-unit>
        <trans-unit id="11ebabd5c143f745aa346130644dcd37fd1138df" translate="yes" xml:space="preserve">
          <source>Each of the &lt;var&gt;conditional-expression-n&lt;/var&gt;s on the &lt;code&gt;WHEN&lt;/code&gt; clause(s) should involve a data element within the table, subscripted using the search index.</source>
          <target state="translated">Each of the &lt;var&gt;conditional-expression-n&lt;/var&gt; s on the &lt;code&gt;WHEN&lt;/code&gt; clause(s) should involve a data element within the table, subscripted using the search index.</target>
        </trans-unit>
        <trans-unit id="1ef84c99be243270ff93ad6c09027b70f5557750" translate="yes" xml:space="preserve">
          <source>Each of the folders named on the &lt;code&gt;COBCPY&lt;/code&gt; compilation-time environment variable   (see &lt;a href=&quot;#Compilation-Time-Environment-Variables&quot;&gt;Compilation Time Environment Variables&lt;/a&gt;).</source>
          <target state="translated">Each of the folders named on the &lt;code&gt;COBCPY&lt;/code&gt; compilation-time environment variable (see &lt;a href=&quot;#Compilation-Time-Environment-Variables&quot;&gt;Compilation Time Environment Variables&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="c09592cadb2ed51d0f1c709d0f7fdfe9b96c7560" translate="yes" xml:space="preserve">
          <source>Each of the folders named on the&lt;code&gt;COBCPY&lt;/code&gt;compilation-time environment variable</source>
          <target state="translated">&lt;code&gt;COBCPY&lt;/code&gt; コンパイル時環境変数で指定された各フォルダー</target>
        </trans-unit>
        <trans-unit id="3f7beaa4ee55fb71c23eb50c89657f496dec6493" translate="yes" xml:space="preserve">
          <source>Each of the following symbols behave like a &amp;lsquo;</source>
          <target state="translated">Each of the following symbols behave like a &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="324c91e30099fbc60529755c27c3efdd05d14a69" translate="yes" xml:space="preserve">
          <source>Each of the following symbols behave like a&lt;code&gt;9&lt;/code&gt; until such point as all digits in the numeric value are exhausted and leading zeros are about to be inserted. In effect, these editing symbols define what should happen to those leading zero.</source>
          <target state="translated">以下の各記号は、数値のすべての桁がなくなり、先行ゼロが挿入されるまで、 &lt;code&gt;9&lt;/code&gt; のように動作します。実際、これらの編集記号は、先行ゼロがどうなるかを定義します。</target>
        </trans-unit>
        <trans-unit id="88ebb4e5a49ceef8e46efb8e8acf86bf9a88eaf3" translate="yes" xml:space="preserve">
          <source>Each of these sections consists of a series of specific paragraphs (&lt;code&gt;SOURCE-COMPUTER&lt;/code&gt; and &lt;code&gt;OBJECT-COMPUTER&lt;/code&gt;, for example). Each of these paragraphs serves a specific purpose. If no code is required for the purpose one of the paragraphs serves, the entire paragraph may be omitted.</source>
          <target state="translated">Each of these sections consists of a series of specific paragraphs ( &lt;code&gt;SOURCE-COMPUTER&lt;/code&gt; and &lt;code&gt;OBJECT-COMPUTER&lt;/code&gt; , for example). Each of these paragraphs serves a specific purpose. If no code is required for the purpose one of the paragraphs serves, the entire paragraph may be omitted.</target>
        </trans-unit>
        <trans-unit id="d9d2be1b968bb484ea3bd99238ffa88f1a9b097c" translate="yes" xml:space="preserve">
          <source>Each of these sections consists of a series of specific paragraphs &lt;code&gt;SOURCE-COMPUTER&lt;/code&gt;and&lt;code&gt;OBJECT-COMPUTER&lt;/code&gt; for example). Each of these paragraphs serves a specific purpose. If no code is required for the purpose one of the paragraphs serves, the entire paragraph may be omitted.</source>
          <target state="translated">これらの各セクションは、一連の特定の段落 &lt;code&gt;SOURCE-COMPUTER&lt;/code&gt; および &lt;code&gt;OBJECT-COMPUTER&lt;/code&gt; などで構成されます）。これらの各段落は特定の目的を果たします。いずれかの段落が機能するためにコードが不要な場合は、段落全体を省略できます。</target>
        </trans-unit>
        <trans-unit id="49fb2845c3cf679efe7de1449e9eb5da506280b3" translate="yes" xml:space="preserve">
          <source>Each of these sections consists of code which serves a specific purpose. If no code is required for the purpose one of those sections serves, the entire section, including it&amp;rsquo;s header, may be omitted.</source>
          <target state="translated">これらの各セクションは、特定の目的を果たすコードで構成されています。これらのセクションの1つが機能する目的でコードが必要ない場合は、ヘッダーを含むセクション全体を省略できます。</target>
        </trans-unit>
        <trans-unit id="dbbe01c13c07c2a319c02b3a7fdf365a1c55a3a5" translate="yes" xml:space="preserve">
          <source>Each of these sections consists of code which serves a specific purpose. If no code is required for the purpose one of those sections serves, the entire section, including its header, may be omitted.</source>
          <target state="translated">これらの各セクションは、特定の目的を果たすコードで構成されている。これらのセクションのいずれかが果たす目的にコードが必要ない場合は、そのヘッダを含むセクション全体を省略してもよい。</target>
        </trans-unit>
        <trans-unit id="d0ca9aaf89bca4498a4af9a6a7c47fe0fd680355" translate="yes" xml:space="preserve">
          <source>Each of those files is assumed to be already sorted according to the specifications set forth on the &lt;code&gt;MERGE&lt;/code&gt; statement&amp;rsquo;s  &lt;code&gt;KEY&lt;/code&gt; clause.</source>
          <target state="translated">Each of those files is assumed to be already sorted according to the specifications set forth on the &lt;code&gt;MERGE&lt;/code&gt; statement&amp;rsquo;s &lt;code&gt;KEY&lt;/code&gt; clause.</target>
        </trans-unit>
        <trans-unit id="e5476f035d3a01cedf662032e9a562423f2c27af" translate="yes" xml:space="preserve">
          <source>Each of those files is assumed to be already sorted according to the specifications set forth on the&lt;code&gt;MERGE&lt;/code&gt;statement&amp;rsquo;s&lt;code&gt;KEY&lt;/code&gt;</source>
          <target state="translated">これらの各ファイルは、 &lt;code&gt;MERGE&lt;/code&gt; ステートメントの &lt;code&gt;KEY&lt;/code&gt; に記載されている仕様に従ってすでにソートされていると想定されています</target>
        </trans-unit>
        <trans-unit id="39b6b7cca90aab953adf3ec432fdd03b2921cced" translate="yes" xml:space="preserve">
          <source>Each page of a report is divided into as many as five (5) areas, as shown in the following diagram.</source>
          <target state="translated">報告書の各ページは、次の図のように5つの領域に分かれています。</target>
        </trans-unit>
        <trans-unit id="dbc5af6ba1192408c07303d49748541aefc7c891" translate="yes" xml:space="preserve">
          <source>Each program consists of up to four  &lt;em&gt;Divisions&lt;/em&gt; (major groupings of sections, paragraphs and descriptive or procedural coding that all relate to a common purpose), named Identification, Environment, Data and Procedure.</source>
          <target state="translated">Each program consists of up to four &lt;em&gt;Divisions&lt;/em&gt; (major groupings of sections, paragraphs and descriptive or procedural coding that all relate to a common purpose), named Identification, Environment, Data and Procedure.</target>
        </trans-unit>
        <trans-unit id="e972c979eeb51709c3026fa1585338428e0bcde2" translate="yes" xml:space="preserve">
          <source>Each program consists of up to four &amp;rsquo;</source>
          <target state="translated">各プログラムは最大4つで構成されています '</target>
        </trans-unit>
        <trans-unit id="0c16a7519f43118f3f20773610b8efc8daa8c7f8" translate="yes" xml:space="preserve">
          <source>Each report referenced on a &lt;code&gt;REPORT IS&lt;/code&gt; clause (see &lt;a href=&quot;#File_002fSort_002dDescription&quot;&gt;File/Sort-Description&lt;/a&gt;) must be described with a report description (&lt;code&gt;RD&lt;/code&gt;).</source>
          <target state="translated">Each report referenced on a &lt;code&gt;REPORT IS&lt;/code&gt; clause (see &lt;a href=&quot;#File_002fSort_002dDescription&quot;&gt;File/Sort-Description&lt;/a&gt;) must be described with a report description ( &lt;code&gt;RD&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="41ad41c5b7c7e05b20b0cee772dbf1deebed0213" translate="yes" xml:space="preserve">
          <source>Each report referenced on a&lt;code&gt;REPORT IS&lt;/code&gt;clause (see &lt;a href=&quot;#File_002fSort_002dDescription&quot;&gt;File/Sort-Description&lt;/a&gt;) must be described with a report description &lt;code&gt;RD&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;REPORT IS&lt;/code&gt; 句（&lt;a href=&quot;#File_002fSort_002dDescription&quot;&gt;File / Sort-Descriptionを&lt;/a&gt;参照）で参照される各レポートは、レポートの説明 &lt;code&gt;RD&lt;/code&gt; で説明する必要があります。</target>
        </trans-unit>
        <trans-unit id="c43f0748874dff6862d449d932e3f73e50432ff7" translate="yes" xml:space="preserve">
          <source>Each set of counting instructions contains the following information:</source>
          <target state="translated">各カウント指示のセットには、以下の情報が含まれています。</target>
        </trans-unit>
        <trans-unit id="1713797d1fd5be38aa62ec74f40cb5e4ea9a66cb" translate="yes" xml:space="preserve">
          <source>Each set of replacement instructions contains the following information:</source>
          <target state="translated">各交換手順書のセットには、以下の情報が含まれています。</target>
        </trans-unit>
        <trans-unit id="94096305d3992a99e3c2729f0f875135ae22be5f" translate="yes" xml:space="preserve">
          <source>Each specified switch must have at least one of a &lt;code&gt;IS &lt;var&gt;mnemonic-name-1&lt;/var&gt;&lt;/code&gt;, &lt;code&gt;ON STATUS&lt;/code&gt; or an &lt;code&gt;OFF STATUS&lt;/code&gt; option defined for it, otherwise there will be no way to reference the switch from within a GnuCOBOL program.</source>
          <target state="translated">Each specified switch must have at least one of a &lt;code&gt;IS &lt;var&gt;mnemonic-name-1&lt;/var&gt;&lt;/code&gt; , &lt;code&gt;ON STATUS&lt;/code&gt; or an &lt;code&gt;OFF STATUS&lt;/code&gt; option defined for it, otherwise there will be no way to reference the switch from within a GnuCOBOL program.</target>
        </trans-unit>
        <trans-unit id="ec64521d31f73aadd610d57e3314c5c0cb07d6c8" translate="yes" xml:space="preserve">
          <source>Each specified switch must have at least one of a&lt;code&gt;IS &amp;lt;&lt;i&gt;mnemonic-name-1&lt;/i&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;ON STATUS&lt;/code&gt;or an&lt;code&gt;OFF STATUS&lt;/code&gt;option defined for it, otherwise there will be no way to reference the switch from within a GnuCOBOL program.</source>
          <target state="translated">指定された各スイッチには、 &lt;code&gt;IS &amp;lt;&lt;i&gt;mnemonic-name-1&lt;/i&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;ON STATUS&lt;/code&gt; または &lt;code&gt;OFF STATUS&lt;/code&gt; オプションの少なくとも1つが定義されている必要があります。そうでない場合、GnuCOBOLプログラム内からスイッチを参照する方法はありません。</target>
        </trans-unit>
        <trans-unit id="e559cbff67ac689ef745772d42537a3b513d5011" translate="yes" xml:space="preserve">
          <source>Each symbolic character name will be associated with the corresponding &amp;lt;</source>
          <target state="translated">各シンボリックキャラクター名は、対応する&amp;lt;</target>
        </trans-unit>
        <trans-unit id="2ee8b1f21d9474c60fbbb9caaacb2b2612673deb" translate="yes" xml:space="preserve">
          <source>Each symbolic character name will be associated with the corresponding &lt;var&gt;integer-1&lt;/var&gt;&lt;sup&gt;th&lt;/sup&gt; character in the alphabet named in the &lt;code&gt;IN&lt;/code&gt; clause. The integer values are selecting characters from the alphabet by their ordinal position and not by their numeric value; thus, an integer of 15 will select the 15&lt;sup&gt;th&lt;/sup&gt; character in the specified alphabet, regardless of the actual numeric value of the bit pattern that constitutes that character.</source>
          <target state="translated">Each symbolic character name will be associated with the corresponding &lt;var&gt;integer-1&lt;/var&gt; &lt;sup&gt;th&lt;/sup&gt; character in the alphabet named in the &lt;code&gt;IN&lt;/code&gt; clause. The integer values are selecting characters from the alphabet by their ordinal position and not by their numeric value; thus, an integer of 15 will select the 15&lt;sup&gt;th&lt;/sup&gt; character in the specified alphabet, regardless of the actual numeric value of the bit pattern that constitutes that character.</target>
        </trans-unit>
        <trans-unit id="98b45c1a48ea0c8af797bfc20035b54a3dfc2e12" translate="yes" xml:space="preserve">
          <source>Each time a &lt;code&gt;GENERATE&lt;/code&gt; statement (see &lt;a href=&quot;#GENERATE&quot;&gt;GENERATE&lt;/a&gt;) is executed against a detail report group defined for this &lt;code&gt;RD&lt;/code&gt;, the RWCS will check the contents of each &lt;var&gt;identifier-2&lt;/var&gt; data item; whenever an &lt;var&gt;identifier-9&lt;/var&gt;&amp;rsquo;s value has changed since the previous &lt;code&gt;GENERATE&lt;/code&gt;, a control break condition will be in effect for that &lt;var&gt;identifier-2&lt;/var&gt;.</source>
          <target state="translated">Each time a &lt;code&gt;GENERATE&lt;/code&gt; statement (see &lt;a href=&quot;#GENERATE&quot;&gt;GENERATE&lt;/a&gt;) is executed against a detail report group defined for this &lt;code&gt;RD&lt;/code&gt; , the RWCS will check the contents of each &lt;var&gt;identifier-2&lt;/var&gt; data item; whenever an &lt;var&gt;identifier-9&lt;/var&gt; &amp;rsquo;s value has changed since the previous &lt;code&gt;GENERATE&lt;/code&gt; , a control break condition will be in effect for that &lt;var&gt;identifier-2&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="4c00430742f8eba1eaf3bd142512606b4b7f5494" translate="yes" xml:space="preserve">
          <source>Each time a&lt;code&gt;GENERATE&lt;/code&gt;statement (see &lt;a href=&quot;#GENERATE&quot;&gt;GENERATE&lt;/a&gt;) is executed against a detail report group defined for this&lt;code&gt;RD&lt;/code&gt; the RWCS will check the contents of each &amp;lt;</source>
          <target state="translated">たび &lt;code&gt;GENERATE&lt;/code&gt; 文は（参照&lt;a href=&quot;#GENERATE&quot;&gt;GENERATE&lt;/a&gt;）このために定義された詳細レポートグループに対して実行される &lt;code&gt;RD&lt;/code&gt; RWCSがそれぞれの内容を確認します&amp;lt;</target>
        </trans-unit>
        <trans-unit id="48545f108d6d890063854ad082ddb7636b0f7c42" translate="yes" xml:space="preserve">
          <source>Each&lt;code&gt;&amp;gt;&amp;gt;IF&lt;/code&gt;directive must be terminated by an&lt;code&gt;&amp;gt;&amp;gt;END-IF&lt;/code&gt;</source>
          <target state="translated">各 &lt;code&gt;&amp;gt;&amp;gt;IF&lt;/code&gt; ディレクティブは &lt;code&gt;&amp;gt;&amp;gt;END-IF&lt;/code&gt; で終了する必要があります</target>
        </trans-unit>
        <trans-unit id="3fecee34669e35b4e24782aec546eab94e861c5a" translate="yes" xml:space="preserve">
          <source>Each&lt;code&gt;RD&lt;/code&gt;will have the following allocated for it:</source>
          <target state="translated">各 &lt;code&gt;RD&lt;/code&gt; には以下が割り当てられます。</target>
        </trans-unit>
        <trans-unit id="558bbf35a31701a51f5e603c87d6e37860e5bac5" translate="yes" xml:space="preserve">
          <source>Each&lt;code&gt;WHEN&lt;/code&gt;clause (other than the&lt;code&gt;WHEN OTHER&lt;/code&gt;</source>
          <target state="translated">各 &lt;code&gt;WHEN&lt;/code&gt; 句（ &lt;code&gt;WHEN OTHER&lt;/code&gt; 以外）</target>
        </trans-unit>
        <trans-unit id="db708aa4613d2d89fc52c61a7a68b8e5310b35b1" translate="yes" xml:space="preserve">
          <source>Early versions of Micro Focus COBOL allowed programmers to access various runtime library routines by using a single two-digit hexadecimal number as the entry-point name. These were known as call-by-number routines. Over time, Micro Focus COBOL evolved, replacing most of the call-by-number routines with ones accessible using a more conventional call-by-name technique.</source>
          <target state="translated">Micro Focus COBOLの初期バージョンでは、プログラマーは、2桁の16進数の1つの数字をエントリーポイント名として使用することで、様々なランタイムライブラリルーチンにアクセスすることができた。これらは、コール・バイ・ナンバー・ルーチンとして知られていました。時が経つにつれ、Micro Focus COBOLは進化し、ほとんどのコールバイナンバー・ルーチンを、より伝統的なコールバイネーム技術を使ってアクセスできるものに置き換えた。</target>
        </trans-unit>
        <trans-unit id="60914652372d8aacfba426f94ef0a27b6bd64788" translate="yes" xml:space="preserve">
          <source>Effortlessly providing arithmetic accuracy to 31 digits, with performance approaching that of well-written assembly-language programs. Don&amp;rsquo;t think this isn&amp;rsquo;t critically important to banks, investment houses and any business interested in tracking revenues, expenses and profits (duh - like ALL of them).</source>
          <target state="translated">計算精度を31桁まで簡単に提供し、パフォーマンスがよく書かれたアセンブリ言語プログラムのパフォーマンスに近づきます。これは、銀行、投資会社、および収益、費用、利益の追跡に関心のあるすべてのビジネスにとって、それほど重要ではないと考えてはいけません。</target>
        </trans-unit>
        <trans-unit id="a59fca542ae29ccf842788b4f2074620547d58d1" translate="yes" xml:space="preserve">
          <source>Eight (8) different colors may be specified for both the background (screen) and foreground (text) color of any row/column position on the screen. Colors are specified by number, although a copybook supplied with all GnuCOBOL distributions (</source>
          <target state="translated">画面上の任意の行/列の位置の背景色 (画面)と前景色 (テキスト)の両方に 8 色を指定することができます。色は番号で指定されますが、すべての GnuCOBOL ディストリビューションに付属のコピーブック (</target>
        </trans-unit>
        <trans-unit id="eb8c33f1bd7b54199aabb312bdff6ad20c4a00e4" translate="yes" xml:space="preserve">
          <source>Eight (8) different colors may be specified for both the background (screen) and foreground (text) color of any row/column position on the screen. Colors are specified by number, although a copybook supplied with all GnuCOBOL distributions (&quot;screenio.cpy&quot;) defines COB-COLOR-xxxxxx names for the various colors so they may be specified as a more meaningful name rather than a number. The eight colors, by number, with the constant names defined in screenio.cpy, are as follows:</source>
          <target state="translated">画面上の任意の行/列の位置の背景色(スクリーン)と前景色(テキスト)の両方に、8つの異なる色を指定することができる。色は数字で指定されるが、すべてのGnuCOBOL配布物に付属のコピーブック(「screenio.cpy」)には、様々な色のためのCOB-COLOR-xxxxxx名が定義されているので、数字ではなく、より意味のある名前として指定することができる。screenio.cpyで定義された定数名を持つ8色は、以下の通りである。</target>
        </trans-unit>
        <trans-unit id="258a8dd8616decea722b746b080a919f0bae0599" translate="yes" xml:space="preserve">
          <source>Either a &lt;code&gt;BEFORE&lt;/code&gt; phrase, an &lt;code&gt;AFTER&lt;/code&gt; phrase or both may be specified. They may be specified in any order.</source>
          <target state="translated">Either a &lt;code&gt;BEFORE&lt;/code&gt; phrase, an &lt;code&gt;AFTER&lt;/code&gt; phrase or both may be specified. They may be specified in any order.</target>
        </trans-unit>
        <trans-unit id="bd7c38f335668ca14fd913489d9d498092b7eb94" translate="yes" xml:space="preserve">
          <source>Either a statement that begins with a non decision-making verb and specifies an unconditional action to be taken or a conditional verb such as &lt;code&gt;IF&lt;/code&gt; or &lt;code&gt;EVALUATE&lt;/code&gt;, delimited by its explicit scope terminator (such as &lt;code&gt;END-IF&lt;/code&gt; or &lt;code&gt;END-EVALUATE&lt;/code&gt;). An imperative statement can consist of a sequence of imperative statements.</source>
          <target state="translated">Either a statement that begins with a non decision-making verb and specifies an unconditional action to be taken or a conditional verb such as &lt;code&gt;IF&lt;/code&gt; or &lt;code&gt;EVALUATE&lt;/code&gt; , delimited by its explicit scope terminator (such as &lt;code&gt;END-IF&lt;/code&gt; or &lt;code&gt;END-EVALUATE&lt;/code&gt; ). An imperative statement can consist of a sequence of imperative statements.</target>
        </trans-unit>
        <trans-unit id="0de188972590d50f27e84d7799cae74d5422d21a" translate="yes" xml:space="preserve">
          <source>Either a statement that begins with a non decision-making verb and specifies an unconditional action to be taken or a conditional verb such as&lt;code&gt;IF&lt;/code&gt;or&lt;code&gt;EVALUATE&lt;/code&gt; delimited by its explicit scope terminator (such as&lt;code&gt;END-IF&lt;/code&gt;or&lt;code&gt;END-EVALUATE&lt;/code&gt;. An imperative statement can consist of a sequence of imperative statements.</source>
          <target state="translated">非意思決定動詞で始まり、実行する無条件のアクションを指定するステートメント、または明示的なスコープ終了文字（ &lt;code&gt;END-IF&lt;/code&gt; や &lt;code&gt;END-EVALUATE&lt;/code&gt; など）で区切られた &lt;code&gt;IF&lt;/code&gt; や &lt;code&gt;EVALUATE&lt;/code&gt; などの条件付き動詞。命令型ステートメントは、一連の命令文で構成されます。</target>
        </trans-unit>
        <trans-unit id="30ea0da285c9a0b0bf611b3900abc0d992ef03bb" translate="yes" xml:space="preserve">
          <source>Either a&lt;code&gt;BEFORE&lt;/code&gt;phrase, an&lt;code&gt;AFTER&lt;/code&gt;phrase or both may be specified. They may be specified in any order.</source>
          <target state="translated">どちらの &lt;code&gt;BEFORE&lt;/code&gt; 句、 &lt;code&gt;AFTER&lt;/code&gt; の句またはその両方を指定することができます。それらは任意の順序で指定できます。</target>
        </trans-unit>
        <trans-unit id="571742073ce654e60b2c5b7dd0ecea8054f8056e" translate="yes" xml:space="preserve">
          <source>Either or both of the 1&lt;sup&gt;st&lt;/sup&gt; two arguments may be an alphanumeric literal, a group item or an elementary item appropriate to storing alphabetic or alphanumeric data. If the lengths of the two arguments are unequal, the shorter will be assumed to be padded to the right with spaces.</source>
          <target state="translated">Either or both of the 1&lt;sup&gt;st&lt;/sup&gt; two arguments may be an alphanumeric literal, a group item or an elementary item appropriate to storing alphabetic or alphanumeric data. If the lengths of the two arguments are unequal, the shorter will be assumed to be padded to the right with spaces.</target>
        </trans-unit>
        <trans-unit id="0caa91b8f1f5f36fcf7fbe55099f1de176c8fde9" translate="yes" xml:space="preserve">
          <source>Either or both of the 1st two arguments may be an alphanumeric literal, a group item or an elementary item appropriate to storing alphabetic or alphanumeric data. If the lengths of the two arguments are unequal, the shorter will be assumed to be padded to the right with spaces.</source>
          <target state="translated">最初の2つの引数のどちらか、または両方は、英数字リテラル、グループ項目、またはアルファベットまたは英数字データを格納するのに適した要素項目です。2つの引数の長さが不平等な場合、短い方の引数はスペースで右にパディングされているとみなされます。</target>
        </trans-unit>
        <trans-unit id="2604514e99668b5fe356a2a35b37a6d80cc13bca" translate="yes" xml:space="preserve">
          <source>Either the &lt;code&gt;USAGE&lt;/code&gt; (see &lt;a href=&quot;#USAGE&quot;&gt;USAGE&lt;/a&gt;) of &lt;var&gt;index-name-1&lt;/var&gt; should be &lt;code&gt;INDEX&lt;/code&gt;, or &lt;var&gt;index-name-1&lt;/var&gt; must be identified in a table &lt;code&gt;INDEXED BY&lt;/code&gt; clause.</source>
          <target state="translated">Either the &lt;code&gt;USAGE&lt;/code&gt; (see &lt;a href=&quot;#USAGE&quot;&gt;USAGE&lt;/a&gt;) of &lt;var&gt;index-name-1&lt;/var&gt; should be &lt;code&gt;INDEX&lt;/code&gt; , or &lt;var&gt;index-name-1&lt;/var&gt; must be identified in a table &lt;code&gt;INDEXED BY&lt;/code&gt; clause.</target>
        </trans-unit>
        <trans-unit id="858e7defec8698672940f8ce436c406862616ecb" translate="yes" xml:space="preserve">
          <source>Either the name of an identifier or a procedure in the program. GnuCOBOL limits user-defined names to a maximum of 31 characters taken from the set of numeric digits, upper- and lower-case letters, hyphens and underscores. A user-defined name may neither begin nor end with a hyphen or underscore. User-defined names used as file names may additionally not begin with a digit although - unlike many other programming languages - user-defined names used as identifiers or procedure names may.</source>
          <target state="translated">プログラム内の識別子またはプロシージャの名前。GnuCOBOLでは、ユーザー定義名は、数字、大文字と小文字、ハイフン、アンダースコアのセットから最大31文字までに制限されています。ユーザ定義名は、ハイフンやアンダースコアで始まったり、終わったりすることはできません。フ ァ イ ル名 と し て用い る ユーザー定義名は、 他の多くのプ ロ グ ラ ミ ン グ言語 と は異な り 、 識別子や手 順名 と し て用い る ユーザー定義名は桁で始ま る こ と があ り ますが、 フ ァ イ ル名 と し て用い る ユーザー定義名は桁で始ま る こ と はあ り ません。</target>
        </trans-unit>
        <trans-unit id="7567d0d8aa3c2f98c0119f54054a4094bbdf6b09" translate="yes" xml:space="preserve">
          <source>Either the&lt;code&gt;USAGE&lt;/code&gt;(see &lt;a href=&quot;#USAGE&quot;&gt;USAGE&lt;/a&gt;) of &amp;lt;</source>
          <target state="translated">どちらの &lt;code&gt;USAGE&lt;/code&gt; （参照&lt;a href=&quot;#USAGE&quot;&gt;USAGEを&lt;/a&gt;）の&amp;lt;</target>
        </trans-unit>
        <trans-unit id="12419b0638b06653e626b1a31d9f95a7e8c75d0a" translate="yes" xml:space="preserve">
          <source>Elementary Item</source>
          <target state="translated">初級項目</target>
        </trans-unit>
        <trans-unit id="f61c9f064c3d39237a20a4d7d3d38cc92ed48b49" translate="yes" xml:space="preserve">
          <source>End of file reached if reading forward or beginning-of-file reached if reading backward</source>
          <target state="translated">前方読みの場合はファイルの終端に、後方読みの場合はファイルの先頭に達しています。</target>
        </trans-unit>
        <trans-unit id="eb4a1c1bc69354df732a1fb660f7766fbc1365bb" translate="yes" xml:space="preserve">
          <source>End of page</source>
          <target state="translated">ページの終わり</target>
        </trans-unit>
        <trans-unit id="1f90eed9e128990aa3916d4821f0afedd06fce42" translate="yes" xml:space="preserve">
          <source>Entry-point</source>
          <target state="translated">Entry-point</target>
        </trans-unit>
        <trans-unit id="318f6eeac5e0a5f73cec3c1a7fec998a2d2b42bf" translate="yes" xml:space="preserve">
          <source>Entry-point Name</source>
          <target state="translated">エントリーポイント名</target>
        </trans-unit>
        <trans-unit id="9b06bb34e16d4cae97cdcb9f7c6429d9591ae99a" translate="yes" xml:space="preserve">
          <source>Environment variables created or changed from within GnuCOBOL programs will be available to any sub-shell processes spawned by that program (i.e. &lt;code&gt;CALL &quot;SYSTEM&quot;&lt;/code&gt;) but will not be known to the shell or console window that started the GnuCOBOL program.</source>
          <target state="translated">Environment variables created or changed from within GnuCOBOL programs will be available to any sub-shell processes spawned by that program (i.e. &lt;code&gt;CALL &quot;SYSTEM&quot;&lt;/code&gt; ) but will not be known to the shell or console window that started the GnuCOBOL program.</target>
        </trans-unit>
        <trans-unit id="24148f77bd77c65e8eb0f7d637191b454de38585" translate="yes" xml:space="preserve">
          <source>Environment variables created or changed from within GnuCOBOL programs will be available to any sub-shell processes spawned by that program (i.e. &lt;code&gt;CALL 'SYSTEM'&lt;/code&gt; (see &lt;a href=&quot;#SYSTEM&quot;&gt;SYSTEM&lt;/a&gt;)) but will not be known to the shell or console window that started the GnuCOBOL program.</source>
          <target state="translated">Environment variables created or changed from within GnuCOBOL programs will be available to any sub-shell processes spawned by that program (i.e. &lt;code&gt;CALL 'SYSTEM'&lt;/code&gt; (see &lt;a href=&quot;#SYSTEM&quot;&gt;SYSTEM&lt;/a&gt;)) but will not be known to the shell or console window that started the GnuCOBOL program.</target>
        </trans-unit>
        <trans-unit id="f15859f3eeefa48c8447da8cc8be18ae2f96c167" translate="yes" xml:space="preserve">
          <source>Environment variables created or changed from within GnuCOBOL programs will be available to any sub-shell processes spawned by that program (i.e. CALL &quot;SYSTEM&quot;) but will not be known to the shell or console window that started the GnuCOBOL program.</source>
          <target state="translated">GnuCOBOL プログラム内で作成または変更された環境変数は、そのプログラムによって生成されたサブシェルプロセス (すなわち CALL &quot;SYSTEM&quot;)で利用できますが、GnuCOBOL プログラムを起動したシェルやコンソールウィンドウではわかりません。</target>
        </trans-unit>
        <trans-unit id="d9b239553d90073cbc48e1842b57308d0f503d32" translate="yes" xml:space="preserve">
          <source>Environment variables created or changed from within GnuCOBOL programs will be available to any sub-shell processes spawned by that program (i.e.&lt;code&gt;CALL 'SYSTEM'&lt;/code&gt;(see &lt;a href=&quot;#SYSTEM&quot;&gt;SYSTEM&lt;/a&gt;)) but will not be known to the shell or console window that started the GnuCOBOL program.</source>
          <target state="translated">GnuCOBOLプログラム内から作成または変更された環境変数は、そのプログラムによって生成されたすべてのサブシェルプロセス（つまり、 &lt;code&gt;CALL 'SYSTEM'&lt;/code&gt; （&lt;a href=&quot;#SYSTEM&quot;&gt;SYSTEMを&lt;/a&gt;参照））で使用できますが、GnuCOBOLプログラムを開始したシェルまたはコンソールウィンドウでは認識されません。</target>
        </trans-unit>
        <trans-unit id="88fb9054570505b3fb04b9e1c9ce73dc5464f51a" translate="yes" xml:space="preserve">
          <source>Erased areas will have their foreground and background colors set to the attributes of the field containing the &lt;code&gt;ERASE&lt;/code&gt; clause.</source>
          <target state="translated">Erased areas will have their foreground and background colors set to the attributes of the field containing the &lt;code&gt;ERASE&lt;/code&gt; clause.</target>
        </trans-unit>
        <trans-unit id="a831ca77884d7fa1627dca65d5bcf5b32460e5b1" translate="yes" xml:space="preserve">
          <source>Erased areas will have their foreground and background colors set to the attributes of the field containing the&lt;code&gt;ERASE&lt;/code&gt;clause.</source>
          <target state="translated">消去された領域の前景色と背景色は、 &lt;code&gt;ERASE&lt;/code&gt; 句を含むフィールドの属性に設定されます。</target>
        </trans-unit>
        <trans-unit id="5da25ad570031cfc548ccf057713182fe2696bf6" translate="yes" xml:space="preserve">
          <source>Error Type</source>
          <target state="translated">エラーの種類</target>
        </trans-unit>
        <trans-unit id="091e812df524f11e726f776aeeac24e5d0a26bc7" translate="yes" xml:space="preserve">
          <source>Esc was pressed</source>
          <target state="translated">Escが押された</target>
        </trans-unit>
        <trans-unit id="c93b64e7bfc8fc13fce94a765a7f9b654e0636be" translate="yes" xml:space="preserve">
          <source>Evaluates to &lt;code&gt;FALSE AND (FALSE AND TRUE)&lt;/code&gt; which evaluates to &lt;code&gt;FALSE&lt;/code&gt;</source>
          <target state="translated">Evaluates to &lt;code&gt;FALSE AND (FALSE AND TRUE)&lt;/code&gt; which evaluates to &lt;code&gt;FALSE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9cba3e6319f42486d6d5910abc790586fcc04bda" translate="yes" xml:space="preserve">
          <source>Evaluates to &lt;code&gt;FALSE AND FALSE AND TRUE&lt;/code&gt; which evaluates to &lt;code&gt;FALSE&lt;/code&gt;</source>
          <target state="translated">Evaluates to &lt;code&gt;FALSE AND FALSE AND TRUE&lt;/code&gt; which evaluates to &lt;code&gt;FALSE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="14c647d0b2997b2ea9d48fe5d26d0314573fe89e" translate="yes" xml:space="preserve">
          <source>Evaluates to &lt;code&gt;FALSE&lt;/code&gt;</source>
          <target state="translated">Evaluates to &lt;code&gt;FALSE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c1d8ae6bdb5e5a0d55449c470c9109ca98750a63" translate="yes" xml:space="preserve">
          <source>Evaluates to &lt;code&gt;NOT (FALSE)&lt;/code&gt; which evaluates to &lt;code&gt;TRUE&lt;/code&gt;</source>
          <target state="translated">Evaluates to &lt;code&gt;NOT (FALSE)&lt;/code&gt; which evaluates to &lt;code&gt;TRUE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1f5ca6838b73d15a7c870d8245c1cd9c977900f9" translate="yes" xml:space="preserve">
          <source>Evaluates to &lt;code&gt;TRUE&lt;/code&gt;</source>
          <target state="translated">Evaluates to &lt;code&gt;TRUE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="51f59465310b441b085b95d0d05314201ace6421" translate="yes" xml:space="preserve">
          <source>Evaluates to &lt;code&gt;TRUE&lt;/code&gt; (since AND has precedence over OR) - this is identical to the previous example</source>
          <target state="translated">Evaluates to &lt;code&gt;TRUE&lt;/code&gt; (since AND has precedence over OR) - this is identical to the previous example</target>
        </trans-unit>
        <trans-unit id="1d5c1c82e60d938ff99b4032766d8759f53965f9" translate="yes" xml:space="preserve">
          <source>Evaluates to FALSE</source>
          <target state="translated">FALSEに評価します。</target>
        </trans-unit>
        <trans-unit id="7718b010814db3432233ea3bdf4b33cc8999b495" translate="yes" xml:space="preserve">
          <source>Evaluates to FALSE AND (FALSE AND TRUE) which evaluates to FALSE</source>
          <target state="translated">FALSE AND (FALSE AND TRUE)に評価され、FALSE に評価されます。</target>
        </trans-unit>
        <trans-unit id="e61648f7d13955bbfcf9bc100110e4859aa8fce4" translate="yes" xml:space="preserve">
          <source>Evaluates to FALSE AND FALSE AND TRUE which evaluates to FALSE</source>
          <target state="translated">FALSE と評価される AND FALSE と評価される TRUE を評価します。</target>
        </trans-unit>
        <trans-unit id="dcd13fd025cd8853636d96d1e4febe9db19f5d33" translate="yes" xml:space="preserve">
          <source>Evaluates to NOT (FALSE) which evaluates to TRUE</source>
          <target state="translated">TRUE を評価する NOT (FALSE)に評価します。</target>
        </trans-unit>
        <trans-unit id="382d1cb13ed9d55b2c9159d78c596a71f0163e66" translate="yes" xml:space="preserve">
          <source>Evaluates to TRUE</source>
          <target state="translated">真に評価します。</target>
        </trans-unit>
        <trans-unit id="f75486ff1410d50667eeed0386b80ad55880746c" translate="yes" xml:space="preserve">
          <source>Evaluates to TRUE (since AND has precedence over OR) - this is identical to the previous example</source>
          <target state="translated">TRUE を評価します(AND は OR よりも優先されるので)-これは先ほどの例と同じです。</target>
        </trans-unit>
        <trans-unit id="4e4ce6d4a34f8cbbb84a2b7c3ed5ad0ae2e0447d" translate="yes" xml:space="preserve">
          <source>Even without the &lt;code&gt;DEBUGGING MODE&lt;/code&gt; clause, it is still possible to compile debugging lines. Debugging lines may also be compiled by specifying the</source>
          <target state="translated">Even without the &lt;code&gt;DEBUGGING MODE&lt;/code&gt; clause, it is still possible to compile debugging lines. Debugging lines may also be compiled by specifying the</target>
        </trans-unit>
        <trans-unit id="4d6d770c334405188a688baa0a731edb1fd48f77" translate="yes" xml:space="preserve">
          <source>Even without the&lt;code&gt;DEBUGGING MODE&lt;/code&gt;clause, it is still possible to compile debugging lines. Debugging lines may also be compiled by specifying the&lt;code&gt;-fdebugging-line&lt;/code&gt;switch</source>
          <target state="translated">&lt;code&gt;DEBUGGING MODE&lt;/code&gt; 句がなくても、デバッグ行をコンパイルすることは可能です。 &lt;code&gt;-fdebugging-line&lt;/code&gt; スイッチを指定して、デバッグ行をコンパイルすることもできます</target>
        </trans-unit>
        <trans-unit id="91552a3314a03734e404c7b97ca06f17613df4cd" translate="yes" xml:space="preserve">
          <source>Every &amp;lt;</source>
          <target state="translated">毎</target>
        </trans-unit>
        <trans-unit id="9f42753b88c31f07e6bcdfda34cbd05a816f1808" translate="yes" xml:space="preserve">
          <source>Every &amp;lt;&amp;lt;</source>
          <target state="translated">&amp;lt;&amp;lt;</target>
        </trans-unit>
        <trans-unit id="6ee5857b25477c47a887c2e413ca2373812abe76" translate="yes" xml:space="preserve">
          <source>Every &lt;code&gt;&lt;var&gt;LINKAGE-SECTION-Data-Item&lt;/var&gt;&lt;/code&gt; description must be terminated with a period.</source>
          <target state="translated">Every &lt;code&gt;&lt;var&gt;LINKAGE-SECTION-Data-Item&lt;/var&gt;&lt;/code&gt; description must be terminated with a period.</target>
        </trans-unit>
        <trans-unit id="661a1653e521852d600069b1bce07e2242a45008" translate="yes" xml:space="preserve">
          <source>Every &lt;code&gt;&lt;var&gt;LOCAL-STORAGE-SECTION-Data-Item&lt;/var&gt;&lt;/code&gt; description must be terminated with a period.</source>
          <target state="translated">Every &lt;code&gt;&lt;var&gt;LOCAL-STORAGE-SECTION-Data-Item&lt;/var&gt;&lt;/code&gt; description must be terminated with a period.</target>
        </trans-unit>
        <trans-unit id="cc642e5e9c10ed9f4fc2738c3c61201a96c951f8" translate="yes" xml:space="preserve">
          <source>Every &lt;code&gt;&lt;var&gt;WORKING-STORAGE-SECTION-Data-Item&lt;/var&gt;&lt;/code&gt; description must be terminated with a period.</source>
          <target state="translated">Every &lt;code&gt;&lt;var&gt;WORKING-STORAGE-SECTION-Data-Item&lt;/var&gt;&lt;/code&gt; description must be terminated with a period.</target>
        </trans-unit>
        <trans-unit id="75667c93ed71278715590e61f407a8a458223a72" translate="yes" xml:space="preserve">
          <source>Every &lt;var&gt;identifier-1&lt;/var&gt; that is an elementary item, including any that may have the &lt;code&gt;REDEFINES&lt;/code&gt; (see &lt;a href=&quot;#REDEFINES&quot;&gt;REDEFINES&lt;/a&gt;) clause in their descriptions.</source>
          <target state="translated">Every &lt;var&gt;identifier-1&lt;/var&gt; that is an elementary item, including any that may have the &lt;code&gt;REDEFINES&lt;/code&gt; (see &lt;a href=&quot;#REDEFINES&quot;&gt;REDEFINES&lt;/a&gt;) clause in their descriptions.</target>
        </trans-unit>
        <trans-unit id="57578c16661a3b7007d515ef52633af152da60d2" translate="yes" xml:space="preserve">
          <source>Every FILE-SECTION-Data-Item description must be terminated with a period.</source>
          <target state="translated">すべてのFILE-SECTION-Data-Itemの記述は、ピリオドで終わらせなければならない。</target>
        </trans-unit>
        <trans-unit id="129d4af6fc8b739cc6b3cfc1e621b10bd80e7b97" translate="yes" xml:space="preserve">
          <source>Every data item at the same</source>
          <target state="translated">すべてのデータ項目が同じ</target>
        </trans-unit>
        <trans-unit id="77e9bb85e78385998b2213a27bb8d8376a21fddb" translate="yes" xml:space="preserve">
          <source>Every data item at the same&lt;code&gt;level&lt;/code&gt;of a hierarchy diagram such as the one you see here (if you were to make one, which you rarely &amp;mdash; if ever &amp;mdash; will, once you get used to this concept) must have the same level number.</source>
          <target state="translated">ここに表示されているような階層図の同じ &lt;code&gt;level&lt;/code&gt; にあるすべてのデータアイテム（作成する場合、この概念に慣れたら、めったに&amp;mdash;作成することはありません）は、同じレベル番号を持つ必要があります。</target>
        </trans-unit>
        <trans-unit id="1874ad544d526d13a9380a9d6b8d4c67a66afb9c" translate="yes" xml:space="preserve">
          <source>Every entry-point has a name. That name must be unique for all programs that comprise an executable program. Entry-point names are defined using a subroutine&amp;rsquo;s &lt;code&gt;PROGRAM-ID&lt;/code&gt; paragraph, a user-defined function&amp;rsquo;s &lt;code&gt;FUNCTION-ID&lt;/code&gt; paragraph or via &lt;code&gt;ENTRY&lt;/code&gt; (see &lt;a href=&quot;#ENTRY&quot;&gt;ENTRY&lt;/a&gt;) statements coded in a subprogram&amp;rsquo;s procedure division.</source>
          <target state="translated">Every entry-point has a name. That name must be unique for all programs that comprise an executable program. Entry-point names are defined using a subroutine&amp;rsquo;s &lt;code&gt;PROGRAM-ID&lt;/code&gt; paragraph, a user-defined function&amp;rsquo;s &lt;code&gt;FUNCTION-ID&lt;/code&gt; paragraph or via &lt;code&gt;ENTRY&lt;/code&gt; (see &lt;a href=&quot;#ENTRY&quot;&gt;ENTRY&lt;/a&gt;) statements coded in a subprogram&amp;rsquo;s procedure division.</target>
        </trans-unit>
        <trans-unit id="464315bf9feceba501caec897c0b6079a97e791c" translate="yes" xml:space="preserve">
          <source>Every entry-point has a name. That name must be unique for all programs that comprise an executable program. Entry-point names are defined using a subroutine&amp;rsquo;s&lt;code&gt;PROGRAM-ID&lt;/code&gt;paragraph, a user-defined function&amp;rsquo;s&lt;code&gt;FUNCTION-ID&lt;/code&gt;paragraph or via&lt;code&gt;ENTRY&lt;/code&gt;(see &lt;a href=&quot;#ENTRY&quot;&gt;ENTRY&lt;/a&gt;) statements coded in a subprogram&amp;rsquo;s procedure division.</source>
          <target state="translated">すべてのエントリポイントには名前があります。この名前は、実行可能プログラムを構成するすべてのプログラムで一意である必要があります。エントリポイント名は、サブルーチンの &lt;code&gt;PROGRAM-ID&lt;/code&gt; 段落、ユーザー定義関数の &lt;code&gt;FUNCTION-ID&lt;/code&gt; 段落を使用して、またはサブプログラムの手続き部にコーディングされた &lt;code&gt;ENTRY&lt;/code&gt; （&lt;a href=&quot;#ENTRY&quot;&gt;ENTRYを&lt;/a&gt;参照）ステートメントを介して定義されます。</target>
        </trans-unit>
        <trans-unit id="6476d7be3c02b1b1ec9726d3ca1b4cc2a1d3dd85" translate="yes" xml:space="preserve">
          <source>Every file that has been referenced by a &lt;code&gt;SELECT&lt;/code&gt; statement (see &lt;a href=&quot;#SELECT&quot;&gt;SELECT&lt;/a&gt;) must also be described in the file section of the data division.</source>
          <target state="translated">Every file that has been referenced by a &lt;code&gt;SELECT&lt;/code&gt; statement (see &lt;a href=&quot;#SELECT&quot;&gt;SELECT&lt;/a&gt;) must also be described in the file section of the data division.</target>
        </trans-unit>
        <trans-unit id="22c250c80a48d66257ba552ab395682e38c843f2" translate="yes" xml:space="preserve">
          <source>Every new level uses a level number that is strictly greater than the one used in the parent (next higher) level.</source>
          <target state="translated">すべての新しいレベルでは、親レベル (次の上位レベル)で使用されるレベル番号よりも厳密に大きいレベル番号が使用されます。</target>
        </trans-unit>
        <trans-unit id="50ca2cb95219666f9e5eca4a7c8de7e87d51cb54" translate="yes" xml:space="preserve">
          <source>Every non-&lt;code&gt;FILLER&lt;/code&gt; 3elementary item subordinate to &lt;var&gt;identifier-1&lt;/var&gt;, provided that elementary item neither contains a &lt;code&gt;REDEFINES&lt;/code&gt; clause in its definition nor belongs to a group item</source>
          <target state="translated">Every non- &lt;code&gt;FILLER&lt;/code&gt; 3elementary item subordinate to &lt;var&gt;identifier-1&lt;/var&gt; , provided that elementary item neither contains a &lt;code&gt;REDEFINES&lt;/code&gt; clause in its definition nor belongs to a group item</target>
        </trans-unit>
        <trans-unit id="e22c344c08f0a674fec53d0ccadbf31f6f3afb87" translate="yes" xml:space="preserve">
          <source>Every non-FILLER elementary item subordinate to &amp;lt;</source>
          <target state="translated">&amp;lt;に従属するFILLER以外のすべての基本項目</target>
        </trans-unit>
        <trans-unit id="004439041e706926e609b461ee10ab7fd206e801" translate="yes" xml:space="preserve">
          <source>Every program has at least one entry-point &amp;mdash; known as the primary entry-point &amp;mdash; which corresponds to the first executable statement in the procedure division following the declaratives area, if any.</source>
          <target state="translated">すべてのプログラムには、少なくとも1つのエントリポイント（プライマリエントリポイントと呼ばれる）があり、宣言領域に続く手続き部の最初の実行可能ステートメントに対応します。</target>
        </trans-unit>
        <trans-unit id="1601a99f6446d942e939a06dabeb60be03814480" translate="yes" xml:space="preserve">
          <source>Every report has the same basic structure, as shown here, even though not all reports will have all of the groups shown. In fact, it is a very unusual report indeed that actually has every one of these groups:</source>
          <target state="translated">すべてのレポートは、ここに示されているように基本的な構造は同じですが、すべてのレポートに示されているすべてのグループがあるわけではありません。実際には、これらのグループがすべて表示されているレポートは非常に珍しいものです。</target>
        </trans-unit>
        <trans-unit id="cec461b13ba9e76a1b658d70ba02bcb163ba81a4" translate="yes" xml:space="preserve">
          <source>Every report that employs control breaks has a natural hierarchy of those control breaks based upon the manner in which the data the report is being generated from is sorted. This concept is best understood using an example which assumes a COBOL program to process sales data collected from every computerized cash register across a chain of stores having multiple departments is being developed.</source>
          <target state="translated">コントロール・ブレークを使用するすべてのレポートは、レポートが生成されるデータのソート方法に基づいて、それらのコントロール・ブレークの自然な階層構造を持っている。この概念は、複数の部門を持つ店舗のチェーンにまたがるすべてのコンピュータ化されたレジから収集された売上データを処理するCOBOLプログラムが開発されていると仮定した例を用いて最もよく理解される。</target>
        </trans-unit>
        <trans-unit id="429f5cb5b0f6e9260689b1e32055299a292139c7" translate="yes" xml:space="preserve">
          <source>Every sort file description (&lt;code&gt;SD&lt;/code&gt; or &lt;code&gt;FD&lt;/code&gt;) must be followed by at least one 01-level data item, except for file descriptions containing the &lt;code&gt;REPORT IS&lt;/code&gt; clause. These 01-level data items, in turn, may be broken down into subordinate group and elementary items. An 01-level data item defined here in the file section is also known as a  &lt;em&gt;Record&lt;/em&gt;, even if it is an elementary item, provided that elementary item lacks the  &lt;code&gt;CONSTANT&lt;/code&gt; attribute.</source>
          <target state="translated">Every sort file description ( &lt;code&gt;SD&lt;/code&gt; or &lt;code&gt;FD&lt;/code&gt; ) must be followed by at least one 01-level data item, except for file descriptions containing the &lt;code&gt;REPORT IS&lt;/code&gt; clause. These 01-level data items, in turn, may be broken down into subordinate group and elementary items. An 01-level data item defined here in the file section is also known as a &lt;em&gt;Record&lt;/em&gt;, even if it is an elementary item, provided that elementary item lacks the &lt;code&gt;CONSTANT&lt;/code&gt; attribute.</target>
        </trans-unit>
        <trans-unit id="b56d93d247b7135e025b8bb06d8e4f1f8158cab1" translate="yes" xml:space="preserve">
          <source>Every time this program is executed, it will produce the same output, because the same sequence of pseudo-random numbers will be generated:</source>
          <target state="translated">このプログラムが実行されるたびに、同じ擬似乱数列が生成されるので、同じ出力が得られます。</target>
        </trans-unit>
        <trans-unit id="631a83a57af68e8b556c535abcfba9d122280242" translate="yes" xml:space="preserve">
          <source>Executable File</source>
          <target state="translated">実行可能ファイル</target>
        </trans-unit>
        <trans-unit id="266766cb6674200866270efab0f914b9e8169b52" translate="yes" xml:space="preserve">
          <source>Executing a &lt;code&gt;DISPLAY UPON COMMAND-LINE&lt;/code&gt; will influence subsequent &lt;code&gt;ACCEPT FROM COMMAND-LINE&lt;/code&gt; statements (which will then return the value you displayed), but will not influence subsequent &lt;code&gt;ACCEPT FROM ARGUMENT-VALUE&lt;/code&gt; statements &amp;mdash; these will continue to return the original program execution parameters.</source>
          <target state="translated">Executing a &lt;code&gt;DISPLAY UPON COMMAND-LINE&lt;/code&gt; will influence subsequent &lt;code&gt;ACCEPT FROM COMMAND-LINE&lt;/code&gt; statements (which will then return the value you displayed), but will not influence subsequent &lt;code&gt;ACCEPT FROM ARGUMENT-VALUE&lt;/code&gt; statements &amp;mdash; these will continue to return the original program execution parameters.</target>
        </trans-unit>
        <trans-unit id="c4aff9d44d0a696a912102a8ff52dc1f8917cec9" translate="yes" xml:space="preserve">
          <source>Executing a&lt;code&gt;DISPLAY UPON COMMAND-LINE&lt;/code&gt;will influence subsequent&lt;code&gt;ACCEPT FROM COMMAND-LINE&lt;/code&gt;statements (which will then return the value you displayed), but will not influence subsequent&lt;code&gt;ACCEPT FROM ARGUMENT-VALUE&lt;/code&gt;statements &amp;mdash; these will continue to return the original program execution parameters.</source>
          <target state="translated">&lt;code&gt;DISPLAY UPON COMMAND-LINE&lt;/code&gt; を実行すると、後続の &lt;code&gt;ACCEPT FROM COMMAND-LINE&lt;/code&gt; ステートメントに影響します（これにより、表示された値が返されます）。ただし、後続の &lt;code&gt;ACCEPT FROM ARGUMENT-VALUE&lt;/code&gt; ステートメントには影響しません。これらは引き続き元のプログラム実行パラメーターを返します。</target>
        </trans-unit>
        <trans-unit id="294fd01fabe581df682eb4ea4d26a6143a102430" translate="yes" xml:space="preserve">
          <source>Executing the statement &lt;code&gt;SET &lt;var&gt;condition-name-1&lt;/var&gt; TO FALSE&lt;/code&gt; will cause &lt;var&gt;condition-name-1&lt;/var&gt;&amp;rsquo;s parent data item to take on the value specified on &lt;var&gt;condition-name-1&lt;/var&gt;&amp;rsquo;s &lt;code&gt;FALSE&lt;/code&gt; clause. If &lt;var&gt;condition-name-1&lt;/var&gt; does not have a &lt;code&gt;FALSE&lt;/code&gt; clause, the &lt;code&gt;SET&lt;/code&gt; (see &lt;a href=&quot;#SET&quot;&gt;SET&lt;/a&gt;) statement will generate an error message at compilation time.</source>
          <target state="translated">Executing the statement &lt;code&gt;SET &lt;var&gt;condition-name-1&lt;/var&gt; TO FALSE&lt;/code&gt; will cause &lt;var&gt;condition-name-1&lt;/var&gt; &amp;rsquo;s parent data item to take on the value specified on &lt;var&gt;condition-name-1&lt;/var&gt; &amp;rsquo;s &lt;code&gt;FALSE&lt;/code&gt; clause. If &lt;var&gt;condition-name-1&lt;/var&gt; does not have a &lt;code&gt;FALSE&lt;/code&gt; clause, the &lt;code&gt;SET&lt;/code&gt; (see &lt;a href=&quot;#SET&quot;&gt;SET&lt;/a&gt;) statement will generate an error message at compilation time.</target>
        </trans-unit>
        <trans-unit id="47c73b41c17cd8d24bf63c33fb66c4d970e348d0" translate="yes" xml:space="preserve">
          <source>Executing the statement &lt;code&gt;SET &lt;var&gt;condition-name-1&lt;/var&gt; TO TRUE&lt;/code&gt; will cause &lt;var&gt;condition-name-1&lt;/var&gt;&amp;rsquo;s parent data item to take on the first value specified on &lt;var&gt;condition-name-1&lt;/var&gt;&amp;rsquo;s &lt;code&gt;VALUE&lt;/code&gt; clause.</source>
          <target state="translated">Executing the statement &lt;code&gt;SET &lt;var&gt;condition-name-1&lt;/var&gt; TO TRUE&lt;/code&gt; will cause &lt;var&gt;condition-name-1&lt;/var&gt; &amp;rsquo;s parent data item to take on the first value specified on &lt;var&gt;condition-name-1&lt;/var&gt; &amp;rsquo;s &lt;code&gt;VALUE&lt;/code&gt; clause.</target>
        </trans-unit>
        <trans-unit id="b5eccd53038d68d6fe98e6c74bbc70fbdda0f1d8" translate="yes" xml:space="preserve">
          <source>Executing the statement&lt;code&gt;SET &amp;lt;&lt;i&gt;condition-name-1&lt;/i&gt;&amp;gt; TO FALSE&lt;/code&gt;will cause &amp;lt;</source>
          <target state="translated">ステートメント &lt;code&gt;SET &amp;lt;&lt;i&gt;condition-name-1&lt;/i&gt;&amp;gt; TO FALSE&lt;/code&gt; すると、&amp;lt;</target>
        </trans-unit>
        <trans-unit id="d3202330dc255528350ed15988600d69cebe769e" translate="yes" xml:space="preserve">
          <source>Executing the statement&lt;code&gt;SET &amp;lt;&lt;i&gt;condition-name-1&lt;/i&gt;&amp;gt; TO TRUE&lt;/code&gt;will cause &amp;lt;</source>
          <target state="translated">ステートメント &lt;code&gt;SET &amp;lt;&lt;i&gt;condition-name-1&lt;/i&gt;&amp;gt; TO TRUE&lt;/code&gt; すると、&amp;lt;</target>
        </trans-unit>
        <trans-unit id="699332aeb03074ecdaa898353c6db354128e04e0" translate="yes" xml:space="preserve">
          <source>Execution Thread</source>
          <target state="translated">実行スレッド</target>
        </trans-unit>
        <trans-unit id="f7b699c1f1fca94c3574d70d8a9956ade47096d2" translate="yes" xml:space="preserve">
          <source>Execution of the calling program is suspended and control will transfer to the called program, as follows:</source>
          <target state="translated">呼び出し元のプログラムの実行が中断され、以下のように呼び出し元のプログラムに制御が移る。</target>
        </trans-unit>
        <trans-unit id="6fcf2812229dbe6eb074b9cb1f987a70fd54bb63" translate="yes" xml:space="preserve">
          <source>Execution will begin at the first executable statement following the subprograms entry-point. The entry point will be either the first executable statement following any &lt;code&gt;DECLARATIVES&lt;/code&gt; (see &lt;a href=&quot;#DECLARATIVES&quot;&gt;DECLARATIVES&lt;/a&gt;) that might be present (if the subprogram was invoked using its primary entry-point name) or the first executable statement following the &lt;code&gt;ENTRY&lt;/code&gt; statement (see &lt;a href=&quot;#ENTRY&quot;&gt;ENTRY&lt;/a&gt;) naming the entry-point specified on the &lt;code&gt;CALL&lt;/code&gt; if the subprogram was invoked using an alternate entry point.</source>
          <target state="translated">Execution will begin at the first executable statement following the subprograms entry-point. The entry point will be either the first executable statement following any &lt;code&gt;DECLARATIVES&lt;/code&gt; (see &lt;a href=&quot;#DECLARATIVES&quot;&gt;DECLARATIVES&lt;/a&gt;) that might be present (if the subprogram was invoked using its primary entry-point name) or the first executable statement following the &lt;code&gt;ENTRY&lt;/code&gt; statement (see &lt;a href=&quot;#ENTRY&quot;&gt;ENTRY&lt;/a&gt;) naming the entry-point specified on the &lt;code&gt;CALL&lt;/code&gt; if the subprogram was invoked using an alternate entry point.</target>
        </trans-unit>
        <trans-unit id="c1fdde2e7a98a43a8969fd6782e1df3e5e50ec04" translate="yes" xml:space="preserve">
          <source>Execution will begin at the first executable statement following the subprograms entry-point. The entry point will be either the first executable statement following any&lt;code&gt;DECLARATIVES&lt;/code&gt;(see &lt;a href=&quot;#DECLARATIVES&quot;&gt;DECLARATIVES&lt;/a&gt;) that might be present (if the subprogram was invoked using its primary entry-point name) or the first executable statement following the&lt;code&gt;ENTRY&lt;/code&gt;statement (see &lt;a href=&quot;#ENTRY&quot;&gt;ENTRY&lt;/a&gt;) naming the entry-point specified on the&lt;code&gt;CALL&lt;/code&gt;if the subprogram was invoked using an alternate entry point.</source>
          <target state="translated">実行は、サブプログラムのエントリポイントに続く最初の実行可能なステートメントから始まります。エントリポイントは、任意の後の最初の実行文のいずれかになります &lt;code&gt;DECLARATIVES&lt;/code&gt; を（参照&lt;a href=&quot;#DECLARATIVES&quot;&gt;DECLARATIVESを&lt;/a&gt;（サブプログラムが呼び出された場合、その主エントリポイント名を使用して）以下または最初の実行文を存在するかもしれない） &lt;code&gt;ENTRY&lt;/code&gt; 文は、（参照&lt;a href=&quot;#ENTRY&quot;&gt;ENTRYを&lt;/a&gt;）命名しますサブプログラムが代替エントリポイントを使用して呼び出された場合、 &lt;code&gt;CALL&lt;/code&gt; で指定されたエントリポイント。</target>
        </trans-unit>
        <trans-unit id="0c5a12fd2639f1c26778b5454e9680eb5ac97944" translate="yes" xml:space="preserve">
          <source>Execution will begin with the first executable statement in the procedure division following any &lt;code&gt;DECLARATIVES&lt;/code&gt; (see &lt;a href=&quot;#DECLARATIVES&quot;&gt;DECLARATIVES&lt;/a&gt;) that might be present.</source>
          <target state="translated">Execution will begin with the first executable statement in the procedure division following any &lt;code&gt;DECLARATIVES&lt;/code&gt; (see &lt;a href=&quot;#DECLARATIVES&quot;&gt;DECLARATIVES&lt;/a&gt;) that might be present.</target>
        </trans-unit>
        <trans-unit id="df928d8218fa60aea80b123d18575cb29a66dc2a" translate="yes" xml:space="preserve">
          <source>Execution will begin with the first executable statement in the procedure division following any&lt;code&gt;DECLARATIVES&lt;/code&gt;(see &lt;a href=&quot;#DECLARATIVES&quot;&gt;DECLARATIVES&lt;/a&gt;) that might be present.</source>
          <target state="translated">実行は、存在する可能性のある &lt;code&gt;DECLARATIVES&lt;/code&gt; （&lt;a href=&quot;#DECLARATIVES&quot;&gt;DECLARATIVESを&lt;/a&gt;参照）に続く手続き部の最初の実行可能ステートメントから始まります。</target>
        </trans-unit>
        <trans-unit id="20886865e3b391a3ff09bedaa7cd18a43cf4535f" translate="yes" xml:space="preserve">
          <source>Execution will resume back in the calling program at the point where the returned value of the function is needed. At that point, the value in the   &lt;code&gt;RETURN-CODE&lt;/code&gt; special register will be used for the function&amp;rsquo;s value.</source>
          <target state="translated">Execution will resume back in the calling program at the point where the returned value of the function is needed. At that point, the value in the &lt;code&gt;RETURN-CODE&lt;/code&gt; special register will be used for the function&amp;rsquo;s value.</target>
        </trans-unit>
        <trans-unit id="813d8ff4c4f053c1fe5a4302c6f9c49604c7c000" translate="yes" xml:space="preserve">
          <source>Execution will resume back in the calling program at the point where the returned value of the function is needed. At that point, the value in the&lt;code&gt;RETURN-CODE&lt;/code&gt;special register will be used for the function&amp;rsquo;s value.</source>
          <target state="translated">関数の戻り値が必要な時点で、呼び出し元のプログラムの実行が再開されます。その時点で、 &lt;code&gt;RETURN-CODE&lt;/code&gt; 特殊レジスターの値が関数の値に使用されます。</target>
        </trans-unit>
        <trans-unit id="66682ceffb06707a7edbe7536c201062e61176b8" translate="yes" xml:space="preserve">
          <source>Execution will resume back in the calling program with the first executable statement following the &lt;code&gt;CALL&lt;/code&gt; that invoked the subprogram.</source>
          <target state="translated">Execution will resume back in the calling program with the first executable statement following the &lt;code&gt;CALL&lt;/code&gt; that invoked the subprogram.</target>
        </trans-unit>
        <trans-unit id="6604bac134b018c911ef4c369060da53971d99cd" translate="yes" xml:space="preserve">
          <source>Execution will resume back in the calling program with the first executable statement following the&lt;code&gt;CALL&lt;/code&gt;that invoked the subprogram.</source>
          <target state="translated">実行は、サブプログラムを呼び出した &lt;code&gt;CALL&lt;/code&gt; に続く最初の実行可能ステートメントを使用して、呼び出し側プログラムで再開されます。</target>
        </trans-unit>
        <trans-unit id="48fe8e9ca52a156853178d24b60a81903ae92574" translate="yes" xml:space="preserve">
          <source>Expiration of the &lt;code&gt;TIMEOUT&lt;/code&gt; timer &amp;mdash; this will be treated as if the &lt;code&gt;Enter&lt;/code&gt; key had been pressed with no data being entered.</source>
          <target state="translated">Expiration of the &lt;code&gt;TIMEOUT&lt;/code&gt; timer &amp;mdash; this will be treated as if the &lt;code&gt;Enter&lt;/code&gt; key had been pressed with no data being entered.</target>
        </trans-unit>
        <trans-unit id="1c4f897e49f43d61c8c285a5f8b529c6df7d4952" translate="yes" xml:space="preserve">
          <source>Expiration of the&lt;code&gt;TIMEOUT&lt;/code&gt;timer &amp;mdash; this will be treated as if the Enter key had been pressed with no data being entered.</source>
          <target state="translated">&lt;code&gt;TIMEOUT&lt;/code&gt; タイマーの期限切れ&amp;mdash;これは、データが入力されていない状態でEnterキーが押されたかのように扱われます。</target>
        </trans-unit>
        <trans-unit id="b32ef340ea4702fd5f41dbe4001671d76174ef71" translate="yes" xml:space="preserve">
          <source>Explanation</source>
          <target state="translated">Explanation</target>
        </trans-unit>
        <trans-unit id="97b695b9b9cfde3612c21b3add972cc0f21f4e26" translate="yes" xml:space="preserve">
          <source>Expression</source>
          <target state="translated">Expression</target>
        </trans-unit>
        <trans-unit id="d4f3d8cfa4bb2c410b3eceec3e30341ae311b92d" translate="yes" xml:space="preserve">
          <source>Extract a sub string from a string based on its starting character position and length</source>
          <target state="translated">文字列の開始位置と長さに基づいて文字列からサブ文字列を抽出する</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
