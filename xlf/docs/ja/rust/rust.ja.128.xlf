<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="rust">
    <body>
      <group id="rust">
        <trans-unit id="7435f7a9d59991879d9067b260f4ffee74232e4b" translate="yes" xml:space="preserve">
          <source>Cloned::flatten</source>
          <target state="translated">Cloned::flatten</target>
        </trans-unit>
        <trans-unit id="1fff1031297fee2d8829e47503335f3f119d955a" translate="yes" xml:space="preserve">
          <source>Cloned::fmt</source>
          <target state="translated">Cloned::fmt</target>
        </trans-unit>
        <trans-unit id="43580d5af8ac0727cf694ba7e1274b2cb6d085a0" translate="yes" xml:space="preserve">
          <source>Cloned::fold</source>
          <target state="translated">Cloned::fold</target>
        </trans-unit>
        <trans-unit id="9a2a92f2f1e4dd62fbfb66375781b1d151d73df4" translate="yes" xml:space="preserve">
          <source>Cloned::for_each</source>
          <target state="translated">Cloned::for_each</target>
        </trans-unit>
        <trans-unit id="945e2fd4c7b0ad952b26e2b9a97f40760412c2eb" translate="yes" xml:space="preserve">
          <source>Cloned::from</source>
          <target state="translated">Cloned::from</target>
        </trans-unit>
        <trans-unit id="bacf51e3db3c3cb7869ed99dfc42781efc266db2" translate="yes" xml:space="preserve">
          <source>Cloned::fuse</source>
          <target state="translated">Cloned::fuse</target>
        </trans-unit>
        <trans-unit id="ff26d7f16d2c720213d94a6e14ed288526c153e2" translate="yes" xml:space="preserve">
          <source>Cloned::ge</source>
          <target state="translated">Cloned::ge</target>
        </trans-unit>
        <trans-unit id="31173522b65a2330ba2a26eed24777e239109b3d" translate="yes" xml:space="preserve">
          <source>Cloned::gt</source>
          <target state="translated">Cloned::gt</target>
        </trans-unit>
        <trans-unit id="608076be33c402dc86731f129702f0e3914b475d" translate="yes" xml:space="preserve">
          <source>Cloned::inspect</source>
          <target state="translated">Cloned::inspect</target>
        </trans-unit>
        <trans-unit id="29673b6aebcaaf3668d967ce5ef003cbeb465d9d" translate="yes" xml:space="preserve">
          <source>Cloned::into</source>
          <target state="translated">Cloned::into</target>
        </trans-unit>
        <trans-unit id="d1f532509edcc9da4f69f47bc736f850b827ebdb" translate="yes" xml:space="preserve">
          <source>Cloned::into_iter</source>
          <target state="translated">Cloned::into_iter</target>
        </trans-unit>
        <trans-unit id="33d2f09875bd196c6466a6afa074de6238eef3dc" translate="yes" xml:space="preserve">
          <source>Cloned::is_empty</source>
          <target state="translated">Cloned::is_empty</target>
        </trans-unit>
        <trans-unit id="b335ad783c412e20cb34ad376ef5f12dd7399e61" translate="yes" xml:space="preserve">
          <source>Cloned::is_sorted</source>
          <target state="translated">Cloned::is_sorted</target>
        </trans-unit>
        <trans-unit id="fe845597ef69600b79d32c983dc2dcd55e849260" translate="yes" xml:space="preserve">
          <source>Cloned::is_sorted_by</source>
          <target state="translated">Cloned::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="e52b489f74dc9368bc3c99b764f14a4eff82bf6c" translate="yes" xml:space="preserve">
          <source>Cloned::is_sorted_by_key</source>
          <target state="translated">Cloned::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="4dfa95a020e694c2b7488ad3c3dd1ffd29c0c64f" translate="yes" xml:space="preserve">
          <source>Cloned::last</source>
          <target state="translated">Cloned::last</target>
        </trans-unit>
        <trans-unit id="84971f8e06bd02cd74111e9f61b3057b9a311e56" translate="yes" xml:space="preserve">
          <source>Cloned::le</source>
          <target state="translated">Cloned::le</target>
        </trans-unit>
        <trans-unit id="ffc6b75882070b1b5ea297e1fab1b53ee680c2f2" translate="yes" xml:space="preserve">
          <source>Cloned::len</source>
          <target state="translated">Cloned::len</target>
        </trans-unit>
        <trans-unit id="fdff0498963d21d82a90eef6225e3b5e2e7e6c80" translate="yes" xml:space="preserve">
          <source>Cloned::lt</source>
          <target state="translated">Cloned::lt</target>
        </trans-unit>
        <trans-unit id="b62ad33f17a83961ed71119f89aea7ebbca61b90" translate="yes" xml:space="preserve">
          <source>Cloned::map</source>
          <target state="translated">Cloned::map</target>
        </trans-unit>
        <trans-unit id="988ebc29cd8f88d2b0d81385f68123ba2e1f93a6" translate="yes" xml:space="preserve">
          <source>Cloned::max</source>
          <target state="translated">Cloned::max</target>
        </trans-unit>
        <trans-unit id="5e7959295ce74dca616e26bb9839916c744bf13f" translate="yes" xml:space="preserve">
          <source>Cloned::max_by</source>
          <target state="translated">Cloned::max_by</target>
        </trans-unit>
        <trans-unit id="916e133b137d8df2e03bc8a2fbda4db3d26ceaac" translate="yes" xml:space="preserve">
          <source>Cloned::max_by_key</source>
          <target state="translated">Cloned::max_by_key</target>
        </trans-unit>
        <trans-unit id="3c1fb82f62d2c2e3f76ffe4450c4e6a77664ec1c" translate="yes" xml:space="preserve">
          <source>Cloned::min</source>
          <target state="translated">Cloned::min</target>
        </trans-unit>
        <trans-unit id="64f0501c9bc88c25b180020e9de1917bc41fb55d" translate="yes" xml:space="preserve">
          <source>Cloned::min_by</source>
          <target state="translated">Cloned::min_by</target>
        </trans-unit>
        <trans-unit id="91984283fe08f4e02dad11c8919cf5703229970e" translate="yes" xml:space="preserve">
          <source>Cloned::min_by_key</source>
          <target state="translated">Cloned::min_by_key</target>
        </trans-unit>
        <trans-unit id="d879913f2c6e34cbda2110fdd631e556673ef16e" translate="yes" xml:space="preserve">
          <source>Cloned::ne</source>
          <target state="translated">Cloned::ne</target>
        </trans-unit>
        <trans-unit id="616c33c5bf520723644cda68f339ecc080475ac4" translate="yes" xml:space="preserve">
          <source>Cloned::next</source>
          <target state="translated">Cloned::next</target>
        </trans-unit>
        <trans-unit id="ee5361aa9e8588b02144bd7f8e914c080006c6a7" translate="yes" xml:space="preserve">
          <source>Cloned::next_back</source>
          <target state="translated">Cloned::next_back</target>
        </trans-unit>
        <trans-unit id="2ede3e0d2687e0b40f63b77b33a76908ee47c42d" translate="yes" xml:space="preserve">
          <source>Cloned::nth</source>
          <target state="translated">Cloned::nth</target>
        </trans-unit>
        <trans-unit id="858995d63f2cd10f231a77347b7f63e95974e0f0" translate="yes" xml:space="preserve">
          <source>Cloned::nth_back</source>
          <target state="translated">Cloned::nth_back</target>
        </trans-unit>
        <trans-unit id="e30a893590f7207611e590de9bdce88f134832f9" translate="yes" xml:space="preserve">
          <source>Cloned::partial_cmp</source>
          <target state="translated">Cloned::partial_cmp</target>
        </trans-unit>
        <trans-unit id="43981c618a8490464ed9fc8d943ec22312da3418" translate="yes" xml:space="preserve">
          <source>Cloned::partition</source>
          <target state="translated">Cloned::partition</target>
        </trans-unit>
        <trans-unit id="6755d914d40e2310a01b9cb99c1af8727b3fbb8d" translate="yes" xml:space="preserve">
          <source>Cloned::peekable</source>
          <target state="translated">Cloned::peekable</target>
        </trans-unit>
        <trans-unit id="3cab6105311d910f9ecf8eeecbfe768e97f62731" translate="yes" xml:space="preserve">
          <source>Cloned::position</source>
          <target state="translated">Cloned::position</target>
        </trans-unit>
        <trans-unit id="49adcea8ff5317c961907e7d4580e76dd0e359ed" translate="yes" xml:space="preserve">
          <source>Cloned::product</source>
          <target state="translated">Cloned::product</target>
        </trans-unit>
        <trans-unit id="009e3e9d8127d4e18e28a6a15078b60dfc7f270b" translate="yes" xml:space="preserve">
          <source>Cloned::rev</source>
          <target state="translated">Cloned::rev</target>
        </trans-unit>
        <trans-unit id="9d1f5ddc498d95ce5323801f2e3eb8cd7ad51ec0" translate="yes" xml:space="preserve">
          <source>Cloned::rfind</source>
          <target state="translated">Cloned::rfind</target>
        </trans-unit>
        <trans-unit id="ab7ff53a22811775ad45f3bf897818663809bb0c" translate="yes" xml:space="preserve">
          <source>Cloned::rfold</source>
          <target state="translated">Cloned::rfold</target>
        </trans-unit>
        <trans-unit id="99ba66b3542f2c123a433ee37308311614213bca" translate="yes" xml:space="preserve">
          <source>Cloned::rposition</source>
          <target state="translated">Cloned::rposition</target>
        </trans-unit>
        <trans-unit id="0ace8ac832238dc8a207d55bf7f84100c3c4bfb8" translate="yes" xml:space="preserve">
          <source>Cloned::scan</source>
          <target state="translated">Cloned::scan</target>
        </trans-unit>
        <trans-unit id="128671a994e2e05b4b7c7254e578a311ac3834ee" translate="yes" xml:space="preserve">
          <source>Cloned::size_hint</source>
          <target state="translated">Cloned::size_hint</target>
        </trans-unit>
        <trans-unit id="5b95c374be56bc6d2780314610dbb41eb5f5ea40" translate="yes" xml:space="preserve">
          <source>Cloned::skip</source>
          <target state="translated">Cloned::skip</target>
        </trans-unit>
        <trans-unit id="b619a99742fddcd6526aba56e53fcf9e55146d49" translate="yes" xml:space="preserve">
          <source>Cloned::skip_while</source>
          <target state="translated">Cloned::skip_while</target>
        </trans-unit>
        <trans-unit id="9b7840a11cdb4c519414d4375d5de6b8d36a31bc" translate="yes" xml:space="preserve">
          <source>Cloned::step_by</source>
          <target state="translated">Cloned::step_by</target>
        </trans-unit>
        <trans-unit id="f967f1af721c7f737257bba7e1a342324e4f4120" translate="yes" xml:space="preserve">
          <source>Cloned::sum</source>
          <target state="translated">Cloned::sum</target>
        </trans-unit>
        <trans-unit id="5a7554bb2ba3c0e304e4cfe51b869de9596202c6" translate="yes" xml:space="preserve">
          <source>Cloned::take</source>
          <target state="translated">Cloned::take</target>
        </trans-unit>
        <trans-unit id="8e8a1dc556b1a95e53be6c8272332659282b0ca9" translate="yes" xml:space="preserve">
          <source>Cloned::take_while</source>
          <target state="translated">Cloned::take_while</target>
        </trans-unit>
        <trans-unit id="1bd6c3258b733f9a9e5436dcf35e81064f80c55a" translate="yes" xml:space="preserve">
          <source>Cloned::to_owned</source>
          <target state="translated">Cloned::to_owned</target>
        </trans-unit>
        <trans-unit id="5388937913750834802649f6f9f35548b10f9dba" translate="yes" xml:space="preserve">
          <source>Cloned::try_fold</source>
          <target state="translated">Cloned::try_fold</target>
        </trans-unit>
        <trans-unit id="c8633f7919db52cce279f97bcf971207a78a6d14" translate="yes" xml:space="preserve">
          <source>Cloned::try_for_each</source>
          <target state="translated">Cloned::try_for_each</target>
        </trans-unit>
        <trans-unit id="108240b1bbb213a8e032a1def6da0151562c96d9" translate="yes" xml:space="preserve">
          <source>Cloned::try_from</source>
          <target state="translated">Cloned::try_from</target>
        </trans-unit>
        <trans-unit id="890680c128a999e8bb30200cac0370bebfefa639" translate="yes" xml:space="preserve">
          <source>Cloned::try_into</source>
          <target state="translated">Cloned::try_into</target>
        </trans-unit>
        <trans-unit id="f3de550c94f3e81aff71027b929a3e47ff13a9ed" translate="yes" xml:space="preserve">
          <source>Cloned::try_rfold</source>
          <target state="translated">Cloned::try_rfold</target>
        </trans-unit>
        <trans-unit id="cba861350975033727d77b991c59ef51a6d9e06e" translate="yes" xml:space="preserve">
          <source>Cloned::type_id</source>
          <target state="translated">Cloned::type_id</target>
        </trans-unit>
        <trans-unit id="191b508c87c1cee3e5acf36279786669c2e2fdbc" translate="yes" xml:space="preserve">
          <source>Cloned::unzip</source>
          <target state="translated">Cloned::unzip</target>
        </trans-unit>
        <trans-unit id="f323df2d404840683ecc4d66d7c89fba3af76616" translate="yes" xml:space="preserve">
          <source>Cloned::zip</source>
          <target state="translated">Cloned::zip</target>
        </trans-unit>
        <trans-unit id="45dfd5aefa0548c749a1c89566c97d1c617cc7f2" translate="yes" xml:space="preserve">
          <source>Clones and appends all elements in a slice to the &lt;code&gt;Vec&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Vec&lt;/code&gt; にスライス内のすべての要素を複製して追加します。</target>
        </trans-unit>
        <trans-unit id="d8e0beee626166a98ce9444a7350d098cee06fe3" translate="yes" xml:space="preserve">
          <source>Clones the data if it is not already owned.</source>
          <target state="translated">データがまだ所有されていない場合にクローンを作成します。</target>
        </trans-unit>
        <trans-unit id="bf0e9da721087c082820dd411e69631b7e347955" translate="yes" xml:space="preserve">
          <source>Clones the elements from &lt;code&gt;src&lt;/code&gt; to &lt;code&gt;this&lt;/code&gt;, returning a mutable reference to the now initalized contents of &lt;code&gt;this&lt;/code&gt;. Any already initalized elements will not be dropped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71d2f3baf4a77f261eaeec54057b8468fcbffc4f" translate="yes" xml:space="preserve">
          <source>Cloning an &lt;code id=&quot;cloning-an-rct-increases-the-reference-count&quot;&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; Increases the Reference Count</source>
          <target state="translated">クローニング &lt;code id=&quot;cloning-an-rct-increases-the-reference-count&quot;&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; 参照カウントを増加</target>
        </trans-unit>
        <trans-unit id="8becdd16e64ddd8bb818579b92f62fa4d0d05cc1" translate="yes" xml:space="preserve">
          <source>Cloning is an explicit action, &lt;code&gt;x.clone()&lt;/code&gt;. The implementation of &lt;a href=&quot;../clone/trait.clone&quot;&gt;&lt;code&gt;Clone&lt;/code&gt;&lt;/a&gt; can provide any type-specific behavior necessary to duplicate values safely. For example, the implementation of &lt;a href=&quot;../clone/trait.clone&quot;&gt;&lt;code&gt;Clone&lt;/code&gt;&lt;/a&gt; for &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; needs to copy the pointed-to string buffer in the heap. A simple bitwise copy of &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; values would merely copy the pointer, leading to a double free down the line. For this reason, &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; is &lt;a href=&quot;../clone/trait.clone&quot;&gt;&lt;code&gt;Clone&lt;/code&gt;&lt;/a&gt; but not &lt;code&gt;Copy&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x.clone()&lt;/code&gt; は明示的なアクションx.clone（）です。&lt;a href=&quot;../clone/trait.clone&quot;&gt; &lt;code&gt;Clone&lt;/code&gt; &lt;/a&gt;の実装は、値を安全に複製するために必要なタイプ固有の動作を提供できます。たとえば、&lt;a href=&quot;../clone/trait.clone&quot;&gt; &lt;code&gt;Clone&lt;/code&gt; &lt;/a&gt; for &lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; の&lt;/a&gt;実装では、ポイントされた文字列バッファーをヒープにコピーする必要があります。&lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;値の単純なビット単位のコピーは、ポインタをコピーするだけで、行が2重に解放されます。このため、&lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;../clone/trait.clone&quot;&gt; &lt;code&gt;Clone&lt;/code&gt; です&lt;/a&gt;が、 &lt;code&gt;Copy&lt;/code&gt; ではありません。</target>
        </trans-unit>
        <trans-unit id="79a7356eabee499898091e1d46265821ecae1a82" translate="yes" xml:space="preserve">
          <source>Cloning references</source>
          <target state="translated">クローニングの参考文献</target>
        </trans-unit>
        <trans-unit id="11c60bf7f8ffe7bcf7a33e058b4b2be4becbebb6" translate="yes" xml:space="preserve">
          <source>Cloning two elements from a slice into another:</source>
          <target state="translated">スライスから別のものに2つの要素をクローニングする。</target>
        </trans-unit>
        <trans-unit id="84e77ec95c5a92eb909c6ac217e1a65e9bf9d350" translate="yes" xml:space="preserve">
          <source>Closure</source>
          <target state="translated">Closure</target>
        </trans-unit>
        <trans-unit id="9feee2622d7f49c5b9261f86e9424a0c8dc08956" translate="yes" xml:space="preserve">
          <source>Closure **</source>
          <target state="translated">閉鎖</target>
        </trans-unit>
        <trans-unit id="f42d833357091a34eb96c731278856292514e8cc" translate="yes" xml:space="preserve">
          <source>Closure Layout</source>
          <target state="translated">クロージャーレイアウト</target>
        </trans-unit>
        <trans-unit id="d72b9899859fdb97e635eb49d8dea080929e9c89" translate="yes" xml:space="preserve">
          <source>Closure Type Inference and Annotation</source>
          <target state="translated">クロージャー型の推論とアノテーション</target>
        </trans-unit>
        <trans-unit id="31c574844a0c08f229e7e8df463b3ee29c565b36" translate="yes" xml:space="preserve">
          <source>Closure definitions will have one concrete type inferred for each of their parameters and for their return value. For instance, Listing 13-8 shows the definition of a short closure that just returns the value it receives as a parameter. This closure isn&amp;rsquo;t very useful except for the purposes of this example. Note that we haven&amp;rsquo;t added any type annotations to the definition: if we then try to call the closure twice, using a &lt;code&gt;String&lt;/code&gt; as an argument the first time and a &lt;code&gt;u32&lt;/code&gt; the second time, we&amp;rsquo;ll get an error.</source>
          <target state="translated">クロージャーの定義には、それぞれのパラメーターと戻り値に対して推論される1つの具象型があります。たとえば、リスト13-8はパラメーターとして受け取った値を返すだけの短いクロージャーの定義を示しています。この例の目的を除いて、このクロージャーはあまり役に立ちません。定義に型注釈を追加していないことに注意してください。最初に &lt;code&gt;String&lt;/code&gt; を引数として、2回目に &lt;code&gt;u32&lt;/code&gt; を使用してクロージャーを2回呼び出そうとすると、エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="3e241866c8532bf967dacb10fe6632d7bbd74c40" translate="yes" xml:space="preserve">
          <source>Closure expressions</source>
          <target state="translated">クロージャー表現</target>
        </trans-unit>
        <trans-unit id="9c04cc09947efe55f07960f3417f8c9d6d3c7f22" translate="yes" xml:space="preserve">
          <source>Closure expressions are most useful when passing functions as arguments to other functions, as an abbreviation for defining and capturing a separate function.</source>
          <target state="translated">クロージャ式は、関数を他の関数の引数として渡すときに、別の関数を定義して捕捉するための略語として最も便利です。</target>
        </trans-unit>
        <trans-unit id="34c935c6a81c1d09237a9d00819ab9ea5caf9e07" translate="yes" xml:space="preserve">
          <source>Closure to function pointer cast</source>
          <target state="translated">関数ポインタキャストへのクロージャ</target>
        </trans-unit>
        <trans-unit id="dcb9cfb9bc2d42be8c930b29b7747e1986ef17a1" translate="yes" xml:space="preserve">
          <source>Closure types</source>
          <target state="translated">クロージャーの種類</target>
        </trans-unit>
        <trans-unit id="54f5da835f87bc5bb6cbf20e2e9fb7a7297708cf" translate="yes" xml:space="preserve">
          <source>Closure types all implement &lt;a href=&quot;../../std/ops/trait.fnonce&quot;&gt;&lt;code&gt;FnOnce&lt;/code&gt;&lt;/a&gt;, indicating that they can be called once by consuming ownership of the closure. Additionally, some closures implement more specific call traits:</source>
          <target state="translated">クロージャーのタイプはすべて&lt;a href=&quot;../../std/ops/trait.fnonce&quot;&gt; &lt;code&gt;FnOnce&lt;/code&gt; を&lt;/a&gt;実装しており、クロージャーの所有権を消費することで一度に呼び出すことができることを示しています。さらに、一部のクロージャーは、より具体的な呼び出し特性を実装しています。</target>
        </trans-unit>
        <trans-unit id="f68d7178c2feba61ded3e82e106dcc7e1194120a" translate="yes" xml:space="preserve">
          <source>Closure types, if they capture no value from the environment or if all such captured values implement &lt;code&gt;Clone&lt;/code&gt; themselves. Note that variables captured by shared reference always implement &lt;code&gt;Clone&lt;/code&gt; (even if the referent doesn't), while variables captured by mutable reference never implement &lt;code&gt;Clone&lt;/code&gt;.</source>
          <target state="translated">クロージャタイプ（環境から値を取得しない場合、または取得したすべての値が &lt;code&gt;Clone&lt;/code&gt; を実装する場合）。共有参照によってキャプチャされた変数は常に &lt;code&gt;Clone&lt;/code&gt; を実装しますが（リファレントが実装していなくても）、可変参照によってキャプチャされた変数は &lt;code&gt;Clone&lt;/code&gt; を実装しません。</target>
        </trans-unit>
        <trans-unit id="0958f4398f6c9b19cab0e7202aa10b1d585db7c3" translate="yes" xml:space="preserve">
          <source>Closure types, if they capture no value from the environment or if all such captured values implement &lt;code&gt;Copy&lt;/code&gt; themselves. Note that variables captured by shared reference always implement &lt;code&gt;Copy&lt;/code&gt; (even if the referent doesn't), while variables captured by mutable reference never implement &lt;code&gt;Copy&lt;/code&gt;.</source>
          <target state="translated">クロージャタイプ（環境から値をキャプチャしない場合、またはキャプチャした値すべてが &lt;code&gt;Copy&lt;/code&gt; 自体を実装する場合）。共有参照によって捕獲変数は常に実装することを注意 &lt;code&gt;Copy&lt;/code&gt; 変更可能な参照によって捕獲変数は実装したことがない一方で、（参照先がない場合であっても） &lt;code&gt;Copy&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="16b1546bfaf51b2730baa3cec8823ad69c6d520a" translate="yes" xml:space="preserve">
          <source>Closures</source>
          <target state="translated">Closures</target>
        </trans-unit>
        <trans-unit id="598c0cd1414c2ba5523575823e5bd66fb8475925" translate="yes" xml:space="preserve">
          <source>Closures and iterators are Rust features inspired by functional programming language ideas. They contribute to Rust&amp;rsquo;s capability to clearly express high-level ideas at low-level performance. The implementations of closures and iterators are such that runtime performance is not affected. This is part of Rust&amp;rsquo;s goal to strive to provide zero-cost abstractions.</source>
          <target state="translated">クロージャーとイテレーターは、関数型プログラミング言語のアイデアに触発されたRustの機能です。それらは、低レベルのパフォーマンスで高レベルのアイデアを明確に表現するRustの機能に貢献します。クロージャーとイテレーターの実装は、ランタイムのパフォーマンスに影響を与えないようになっています。これは、ゼロコストの抽象化を提供するために努力するというRustの目標の一部です。</target>
        </trans-unit>
        <trans-unit id="e5e3cf7fd96b4d3c9ac342634a29d68e832e56ce" translate="yes" xml:space="preserve">
          <source>Closures are represented by traits, which means you can&amp;rsquo;t return closures directly. In most cases where you might want to return a trait, you can instead use the concrete type that implements the trait as the return value of the function. But you can&amp;rsquo;t do that with closures because they don&amp;rsquo;t have a concrete type that is returnable; you&amp;rsquo;re not allowed to use the function pointer &lt;code&gt;fn&lt;/code&gt; as a return type, for example.</source>
          <target state="translated">クロージャーはトレイトによって表されます。つまり、クロージャーを直接返すことはできません。特性を返す必要があるほとんどの場合、代わりに、特性を実装する具象型を関数の戻り値として使用できます。ただし、クロージャーを使用してこれを行うことはできません。クロージャーには、戻り可能な具体的な型がないためです。たとえば、関数ポインタ &lt;code&gt;fn&lt;/code&gt; を戻り値の型として使用することはできません。</target>
        </trans-unit>
        <trans-unit id="43b3e1c55779f31caf1ba7f33a5bc9f5185db14d" translate="yes" xml:space="preserve">
          <source>Closures are usually short and relevant only within a narrow context rather than in any arbitrary scenario. Within these limited contexts, the compiler is reliably able to infer the types of the parameters and the return type, similar to how it&amp;rsquo;s able to infer the types of most variables.</source>
          <target state="translated">通常、クロージャは短く、関連するのは任意のシナリオではなく、狭いコンテキスト内のみです。これらの限られたコンテキスト内では、コンパイラーは、ほとんどの変数の型を推測できるのと同様に、パラメーターの型と戻り値の型を確実に推測できます。</target>
        </trans-unit>
        <trans-unit id="ed90ee06a522a218ad852740a58fe4fd6d56c5fb" translate="yes" xml:space="preserve">
          <source>Closures can capture values from their environment in three ways, which directly map to the three ways a function can take a parameter: taking ownership, borrowing mutably, and borrowing immutably. These are encoded in the three &lt;code&gt;Fn&lt;/code&gt; traits as follows:</source>
          <target state="translated">クロージャーは、3つの方法で環境から値をキャプチャできます。これは、関数がパラメーターをとる3つの方法（所有権の取得、可変借用、および不変借用）に直接マッピングされます。これらは、次の3つの &lt;code&gt;Fn&lt;/code&gt; トレイトでエンコードされます。</target>
        </trans-unit>
        <trans-unit id="81e4ae797c45666ce7526b004ecdc8a3d8ba8c7d" translate="yes" xml:space="preserve">
          <source>Closures cannot be used as &lt;code&gt;static&lt;/code&gt;. They &quot;save&quot; the environment, and as such a static closure would save only a static environment which would consist only of variables with a static lifetime. Given this it would be better to use a proper function. The easiest fix is to remove the &lt;code&gt;static&lt;/code&gt; keyword.</source>
          <target state="translated">Closures cannot be used as &lt;code&gt;static&lt;/code&gt; . They &quot;save&quot; the environment, and as such a static closure would save only a static environment which would consist only of variables with a static lifetime. Given this it would be better to use a proper function. The easiest fix is to remove the &lt;code&gt;static&lt;/code&gt; keyword.</target>
        </trans-unit>
        <trans-unit id="7103e38b7016adfe88b2da7a027a5c6914b7593c" translate="yes" xml:space="preserve">
          <source>Closures cannot mutate immutable captured variables.</source>
          <target state="translated">クロージャは、不変的に捕捉された変数を突然変異させることはできません。</target>
        </trans-unit>
        <trans-unit id="657f780bba4a8350bcf00d167bdade02333d63f2" translate="yes" xml:space="preserve">
          <source>Closures don&amp;rsquo;t require you to annotate the types of the parameters or the return value like &lt;code&gt;fn&lt;/code&gt; functions do. Type annotations are required on functions because they&amp;rsquo;re part of an explicit interface exposed to your users. Defining this interface rigidly is important for ensuring that everyone agrees on what types of values a function uses and returns. But closures aren&amp;rsquo;t used in an exposed interface like this: they&amp;rsquo;re stored in variables and used without naming them and exposing them to users of our library.</source>
          <target state="translated">クロージャーでは、 &lt;code&gt;fn&lt;/code&gt; 関数のようにパラメーターのタイプや戻り値に注釈を付ける必要はありません。タイプアノテーションは、ユーザーに公開される明示的なインターフェースの一部であるため、関数に必要です。このインターフェイスを厳密に定義することは、関数が使用して返す値のタイプについて全員が同意するようにするために重要です。ただし、クロージャーは次のような公開されたインターフェースでは使用されません。クロージャーは変数に格納され、名前を付けたり、ライブラリのユーザーに公開したりせずに使用されます。</target>
        </trans-unit>
        <trans-unit id="623bd2137965dca1753c2219b78e9d2df3af2dd1" translate="yes" xml:space="preserve">
          <source>Closures have no layout guarantees.</source>
          <target state="translated">クロージャーにはレイアウトの保証はありません。</target>
        </trans-unit>
        <trans-unit id="a124062ff883bcba2ea07a4fffa17c5c51f15a9b" translate="yes" xml:space="preserve">
          <source>Closures implement the trait if the types of all of their captures do. A closure that captures a &lt;code&gt;T&lt;/code&gt; by shared reference and a &lt;code&gt;U&lt;/code&gt; by value implements any auto traits that both &lt;code&gt;&amp;amp;T&lt;/code&gt; and &lt;code&gt;U&lt;/code&gt; do.</source>
          <target state="translated">クロージャーは、すべてのキャプチャーのタイプがそうである場合、その特性を実装します。共有参照による &lt;code&gt;T&lt;/code&gt; と値による &lt;code&gt;U&lt;/code&gt; をキャプチャするクロージャーは、 &lt;code&gt;&amp;amp;T&lt;/code&gt; と &lt;code&gt;U&lt;/code&gt; の両方が行う自動特性を実装します。</target>
        </trans-unit>
        <trans-unit id="59140ed1607bee7950afa74497fed12e3a387711" translate="yes" xml:space="preserve">
          <source>Closures: Anonymous Functions that Can Capture Their Environment</source>
          <target state="translated">クロージャ。環境をとらえることができる匿名関数</target>
        </trans-unit>
        <trans-unit id="4ac1164f33ce22f2d2e3593bc2d12bf618f8eb45" translate="yes" xml:space="preserve">
          <source>CloudABI</source>
          <target state="translated">CloudABI</target>
        </trans-unit>
        <trans-unit id="ff21ecba8e33861a5e46dc3ad0a65c907b5f9e39" translate="yes" xml:space="preserve">
          <source>Code Structure If We Could Spawn a Thread for Each Request</source>
          <target state="translated">コード構造 リクエストごとにスレッドを生成できるとしたら</target>
        </trans-unit>
        <trans-unit id="5aef28f388cc2b6d39bbacf158f6b9e94711ece9" translate="yes" xml:space="preserve">
          <source>Code generation</source>
          <target state="translated">コード生成</target>
        </trans-unit>
        <trans-unit id="2c4676446a30017eac0da937a2b7dc8e2830d682" translate="yes" xml:space="preserve">
          <source>Code generation attributes</source>
          <target state="translated">コード生成属性</target>
        </trans-unit>
        <trans-unit id="a2257b9b2fc77034b665bcb7903998412e47b678" translate="yes" xml:space="preserve">
          <source>Code or interfaces whose &lt;a href=&quot;../book/ch19-01-unsafe-rust&quot;&gt;memory safety&lt;/a&gt; cannot be verified by the type system.</source>
          <target state="translated">タイプシステムで&lt;a href=&quot;../book/ch19-01-unsafe-rust&quot;&gt;メモリの安全性&lt;/a&gt;を確認できないコードまたはインターフェイス。</target>
        </trans-unit>
        <trans-unit id="f39d5b92d2f4737da89bbfabe266946c1d2b6871" translate="yes" xml:space="preserve">
          <source>Code snippets inline in the text are inside &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; tags.</source>
          <target state="translated">テキスト内のインラインコードスニペットは &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; タグ内にあります。</target>
        </trans-unit>
        <trans-unit id="e304c8a4c72e1e1501bae4b13feb1db3f0bcad04" translate="yes" xml:space="preserve">
          <source>Code that interacts via FFI will almost certainly be using the base types provided by C, which aren't nearly as nicely defined as Rust's primitive types. This module provides types which will match those defined by C, so that code that interacts with C will refer to the correct types.</source>
          <target state="translated">FFI を介して対話するコードは、ほとんどの場合、C で提供される基本型を使用します。このモジュールは C で定義された型と一致する型を提供し、C と対話するコードが正しい型を参照するようにします。</target>
        </trans-unit>
        <trans-unit id="f93c4177e7a4412ed6936a97f27d80ad49467b82" translate="yes" xml:space="preserve">
          <source>CoerceUnsized</source>
          <target state="translated">CoerceUnsized</target>
        </trans-unit>
        <trans-unit id="b65d26f3e10b2b521518d2c6f0190950d2a3b071" translate="yes" xml:space="preserve">
          <source>Coerces into an &lt;code&gt;OsStr&lt;/code&gt; slice.</source>
          <target state="translated">OsStr スライスに &lt;code&gt;OsStr&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="8ff006925e7481a31aaf8f50abdead3966b384c1" translate="yes" xml:space="preserve">
          <source>Coerces the &lt;a href=&quot;enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt; variant of the original &lt;a href=&quot;enum.result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt; via &lt;a href=&quot;../ops/trait.deref&quot;&gt;&lt;code&gt;Deref&lt;/code&gt;&lt;/a&gt; and returns the new &lt;a href=&quot;enum.result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Coerces the &lt;a href=&quot;enum.result#variant.Ok&quot;&gt; &lt;code&gt;Ok&lt;/code&gt; &lt;/a&gt; variant of the original &lt;a href=&quot;enum.result&quot;&gt; &lt;code&gt;Result&lt;/code&gt; &lt;/a&gt; via &lt;a href=&quot;../ops/trait.deref&quot;&gt; &lt;code&gt;Deref&lt;/code&gt; &lt;/a&gt; and returns the new &lt;a href=&quot;enum.result&quot;&gt; &lt;code&gt;Result&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="b7de93a2a2eebb9272e5c795b067c8bbffa643ce" translate="yes" xml:space="preserve">
          <source>Coerces the &lt;a href=&quot;enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt; variant of the original &lt;a href=&quot;enum.result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt; via &lt;a href=&quot;../ops/trait.derefmut&quot;&gt;&lt;code&gt;DerefMut&lt;/code&gt;&lt;/a&gt; and returns the new &lt;a href=&quot;enum.result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Coerces the &lt;a href=&quot;enum.result#variant.Ok&quot;&gt; &lt;code&gt;Ok&lt;/code&gt; &lt;/a&gt; variant of the original &lt;a href=&quot;enum.result&quot;&gt; &lt;code&gt;Result&lt;/code&gt; &lt;/a&gt; via &lt;a href=&quot;../ops/trait.derefmut&quot;&gt; &lt;code&gt;DerefMut&lt;/code&gt; &lt;/a&gt; and returns the new &lt;a href=&quot;enum.result&quot;&gt; &lt;code&gt;Result&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="1c76edfa52f1471fc645f286d3c4fdb9a931ceb1" translate="yes" xml:space="preserve">
          <source>Coerces to a &lt;a href=&quot;struct.path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; slice.</source>
          <target state="translated">&lt;a href=&quot;struct.path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;スライスに強制変換します。</target>
        </trans-unit>
        <trans-unit id="ce87ed978f44fda982531d1c855220c43da03308" translate="yes" xml:space="preserve">
          <source>Coercion is allowed between the following types:</source>
          <target state="translated">強制は以下のタイプの間で許可されています。</target>
        </trans-unit>
        <trans-unit id="8cb1b3e97139ab42d4cc71694e2d8c8eeb5decfe" translate="yes" xml:space="preserve">
          <source>Coercion sites</source>
          <target state="translated">強制サイト</target>
        </trans-unit>
        <trans-unit id="b30adc73652d5d031dd020c2db8e5e996b258c86" translate="yes" xml:space="preserve">
          <source>Coercion types</source>
          <target state="translated">強要タイプ</target>
        </trans-unit>
        <trans-unit id="09d0b3c17921f367b13b61310d8395124cd70e33" translate="yes" xml:space="preserve">
          <source>Coercions are defined in &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/0401-coercions.md&quot;&gt;RFC 401&lt;/a&gt;. &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/1558-closure-to-fn-coercion.md&quot;&gt;RFC 1558&lt;/a&gt; then expanded on that. A coercion is implicit and has no syntax.</source>
          <target state="translated">強制は&lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/0401-coercions.md&quot;&gt;RFC 401で&lt;/a&gt;定義されています。その後、&lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/1558-closure-to-fn-coercion.md&quot;&gt;RFC 1558&lt;/a&gt;はその上で拡張されました。強制は暗黙的であり、構文はありません。</target>
        </trans-unit>
        <trans-unit id="f3027d735ef480fe4ad91e75cb222127ae80a190" translate="yes" xml:space="preserve">
          <source>Coercions are originally defined in &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/0401-coercions.md&quot;&gt;RFC 401&lt;/a&gt; and expanded upon in &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/1558-closure-to-fn-coercion.md&quot;&gt;RFC 1558&lt;/a&gt;.</source>
          <target state="translated">Coercions are originally defined in &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/0401-coercions.md&quot;&gt;RFC 401&lt;/a&gt; and expanded upon in &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/1558-closure-to-fn-coercion.md&quot;&gt;RFC 1558&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="ea3e79d92e92ce8adfad134684c2c0da9019b2a6" translate="yes" xml:space="preserve">
          <source>Collapses all unit items from an iterator into one.</source>
          <target state="translated">イテレータの単位項目をすべて1つに折りたたみます。</target>
        </trans-unit>
        <trans-unit id="d17c52ab2668df1fd31eef037605fce3253b9638" translate="yes" xml:space="preserve">
          <source>Collection indexing pretending to be collection slicing, using &lt;code&gt;Range&lt;/code&gt;, &lt;code&gt;RangeFrom&lt;/code&gt;, &lt;code&gt;RangeTo&lt;/code&gt;, or &lt;code&gt;RangeFull&lt;/code&gt; as the &amp;ldquo;index&amp;rdquo;</source>
          <target state="translated">「インデックス」として &lt;code&gt;Range&lt;/code&gt; 、 &lt;code&gt;RangeFrom&lt;/code&gt; 、 &lt;code&gt;RangeTo&lt;/code&gt; 、または &lt;code&gt;RangeFull&lt;/code&gt; を使用して、コレクションのスライスを装ったコレクションのインデックス作成</target>
        </trans-unit>
        <trans-unit id="09f48ef0b05649a93b45f3e3906a968b131f40c7" translate="yes" xml:space="preserve">
          <source>Collection indexing. Overloadable (&lt;code&gt;Index&lt;/code&gt;, &lt;code&gt;IndexMut&lt;/code&gt;)</source>
          <target state="translated">コレクションのインデックス作成。オーバーロード可能（ &lt;code&gt;Index&lt;/code&gt; 、 &lt;code&gt;IndexMut&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="c7c44db824cc37c393a2e485fbfd2d0c5604f8b6" translate="yes" xml:space="preserve">
          <source>Collection types.</source>
          <target state="translated">コレクションの種類。</target>
        </trans-unit>
        <trans-unit id="e61653513f460e7b26b8899956c0e10a2ca44682" translate="yes" xml:space="preserve">
          <source>CollectionAllocErr</source>
          <target state="translated">CollectionAllocErr</target>
        </trans-unit>
        <trans-unit id="3f8e6263bfae9e060cf1f8d54088aabc201e28bc" translate="yes" xml:space="preserve">
          <source>CollectionAllocErr::borrow</source>
          <target state="translated">CollectionAllocErr::borrow</target>
        </trans-unit>
        <trans-unit id="cdff49430e59264243180a5aa5104ecae6ef9dca" translate="yes" xml:space="preserve">
          <source>CollectionAllocErr::borrow_mut</source>
          <target state="translated">CollectionAllocErr::borrow_mut</target>
        </trans-unit>
        <trans-unit id="26d9e5043581d338cc56a84ea348d39ae0d6c550" translate="yes" xml:space="preserve">
          <source>CollectionAllocErr::clone</source>
          <target state="translated">CollectionAllocErr::clone</target>
        </trans-unit>
        <trans-unit id="63ce52f57435bbc080b472593fdf1ded03aa3687" translate="yes" xml:space="preserve">
          <source>CollectionAllocErr::clone_from</source>
          <target state="translated">CollectionAllocErr::clone_from</target>
        </trans-unit>
        <trans-unit id="4287afb3e099310accc7a9a0c965068789ed2d96" translate="yes" xml:space="preserve">
          <source>CollectionAllocErr::clone_into</source>
          <target state="translated">CollectionAllocErr::clone_into</target>
        </trans-unit>
        <trans-unit id="99f5817c2100bf8ce77ecab5630e782a5399fea9" translate="yes" xml:space="preserve">
          <source>CollectionAllocErr::eq</source>
          <target state="translated">CollectionAllocErr::eq</target>
        </trans-unit>
        <trans-unit id="196da8a75b2ae0aad9f3afba12b46db3f4150ae7" translate="yes" xml:space="preserve">
          <source>CollectionAllocErr::fmt</source>
          <target state="translated">CollectionAllocErr::fmt</target>
        </trans-unit>
        <trans-unit id="82f54d1505587a95ba19c858fdde7d7dc76f870a" translate="yes" xml:space="preserve">
          <source>CollectionAllocErr::from</source>
          <target state="translated">CollectionAllocErr::from</target>
        </trans-unit>
        <trans-unit id="7e5159dc0efb349d170d10e6dc63f777d45ab73a" translate="yes" xml:space="preserve">
          <source>CollectionAllocErr::into</source>
          <target state="translated">CollectionAllocErr::into</target>
        </trans-unit>
        <trans-unit id="fc2973fa1f03fb17e62f9f20fa58e1755fd2b3f2" translate="yes" xml:space="preserve">
          <source>CollectionAllocErr::ne</source>
          <target state="translated">CollectionAllocErr::ne</target>
        </trans-unit>
        <trans-unit id="ac9bd6fbfc7b6ca6af7cefd29048afa08610ebb6" translate="yes" xml:space="preserve">
          <source>CollectionAllocErr::to_owned</source>
          <target state="translated">CollectionAllocErr::to_owned</target>
        </trans-unit>
        <trans-unit id="ced3c3732dde84eaf74a81d6f3336cee071314fe" translate="yes" xml:space="preserve">
          <source>CollectionAllocErr::try_from</source>
          <target state="translated">CollectionAllocErr::try_from</target>
        </trans-unit>
        <trans-unit id="777d9cfc0187b0be41fc68e2b51a1e23a0cad5c1" translate="yes" xml:space="preserve">
          <source>CollectionAllocErr::try_into</source>
          <target state="translated">CollectionAllocErr::try_into</target>
        </trans-unit>
        <trans-unit id="5508cb0e66bbd93b2ab551cb646b10a63a755fdf" translate="yes" xml:space="preserve">
          <source>CollectionAllocErr::type_id</source>
          <target state="translated">CollectionAllocErr::type_id</target>
        </trans-unit>
        <trans-unit id="ac30df75efbedb8442edcd22700caca733d79868" translate="yes" xml:space="preserve">
          <source>Colon</source>
          <target state="translated">Colon</target>
        </trans-unit>
        <trans-unit id="861e45a035a2bbe92874441ede754f41760f03f1" translate="yes" xml:space="preserve">
          <source>Combinator</source>
          <target state="translated">Combinator</target>
        </trans-unit>
        <trans-unit id="0defc92b9a895b013a6d5fe009d7da94e31953b1" translate="yes" xml:space="preserve">
          <source>Combinators are higher-order functions that apply only functions and earlier defined combinators to provide a result from its arguments. They can be used to manage control flow in a modular fashion.</source>
          <target state="translated">コンビネータは、関数と以前に定義されたコンビネータのみを適用して、その引数から結果を提供する高次の関数です。これらは、モジュール方式で制御フローを管理するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="f48836ade48cdc6ef909ff99c3c063fe628a7db5" translate="yes" xml:space="preserve">
          <source>Combining &lt;code id=&quot;combining-async-and-unsafe&quot;&gt;async&lt;/code&gt; and &lt;code&gt;unsafe&lt;/code&gt;</source>
          <target state="translated">Combining &lt;code id=&quot;combining-async-and-unsafe&quot;&gt;async&lt;/code&gt; and &lt;code&gt;unsafe&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3fedff241111dff3ba93e2b390d7f244ac002bc7" translate="yes" xml:space="preserve">
          <source>Combining &lt;code&gt;match&lt;/code&gt; and enums is useful in many situations. You&amp;rsquo;ll see this pattern a lot in Rust code: &lt;code&gt;match&lt;/code&gt; against an enum, bind a variable to the data inside, and then execute code based on it. It&amp;rsquo;s a bit tricky at first, but once you get used to it, you&amp;rsquo;ll wish you had it in all languages. It&amp;rsquo;s consistently a user favorite.</source>
          <target state="translated">&lt;code&gt;match&lt;/code&gt; とenum を組み合わせると、多くの状況で役立ちます。このパターンは、Rustコードでよく見られます。列挙型と &lt;code&gt;match&lt;/code&gt; し、変数を内部のデータにバインドして、それに基づいてコードを実行します。最初は少しトリッキーですが、慣れればすべての言語で使えるようになります。それは一貫してユーザーのお気に入りです。</target>
        </trans-unit>
        <trans-unit id="0b156b38281f2e8af5fc8cb14a2e1961648e63d5" translate="yes" xml:space="preserve">
          <source>Combining primitive representations of enums with fields and #[repr(C)]</source>
          <target state="translated">フィールドと#[repr(C)]を用いた列挙型のプリミティブ表現の組み合わせ</target>
        </trans-unit>
        <trans-unit id="cfb1036b2e32e852374488376becd211ef514261" translate="yes" xml:space="preserve">
          <source>Combining primitive representations of enums with fields and &lt;code id=&quot;combining-primitive-representations-of-enums-with-fields-and-reprc&quot;&gt;#[repr(C)]&lt;/code&gt;</source>
          <target state="translated">列挙型のプリミティブ表現をフィールドおよび &lt;code id=&quot;combining-primitive-representations-of-enums-with-fields-and-reprc&quot;&gt;#[repr(C)]&lt;/code&gt; と組み合わせる</target>
        </trans-unit>
        <trans-unit id="b9ee3deaae2695cf53cbcebec20aed5fb9b594e3" translate="yes" xml:space="preserve">
          <source>Comma</source>
          <target state="translated">Comma</target>
        </trans-unit>
        <trans-unit id="8901895fb1b1d4c4ea2fec368c25176bf73e2f7e" translate="yes" xml:space="preserve">
          <source>Command</source>
          <target state="translated">Command</target>
        </trans-unit>
        <trans-unit id="6d023543d3487329729b323208d0d030cb4b9f0e" translate="yes" xml:space="preserve">
          <source>Command Line Notation</source>
          <target state="translated">コマンドライン表記法</target>
        </trans-unit>
        <trans-unit id="67db4f3f881d95256899232ddde85c96e489b9b6" translate="yes" xml:space="preserve">
          <source>Command line programs are expected to send error messages to the standard error stream so we can still see error messages on the screen even if we redirect the standard output stream to a file. Our program is not currently well-behaved: we&amp;rsquo;re about to see that it saves the error message output to a file instead!</source>
          <target state="translated">コマンドラインプログラムは、エラーメッセージを標準エラーストリームに送信することが期待されているため、標準出力ストリームをファイルにリダイレクトしても、画面にエラーメッセージが表示されます。現在、プログラムは正常に動作していません。代わりに、エラーメッセージの出力をファイルに保存します。</target>
        </trans-unit>
        <trans-unit id="abe85282779d49a7e43b20f447542a4a3d921640" translate="yes" xml:space="preserve">
          <source>Command::arg</source>
          <target state="translated">Command::arg</target>
        </trans-unit>
        <trans-unit id="460335dcd8cbe3e3e8ee6f8de8eeee41dd6eb38d" translate="yes" xml:space="preserve">
          <source>Command::args</source>
          <target state="translated">Command::args</target>
        </trans-unit>
        <trans-unit id="c04edd9acab45a2658a678f99ee8f941a3930b35" translate="yes" xml:space="preserve">
          <source>Command::before_exec</source>
          <target state="translated">Command::before_exec</target>
        </trans-unit>
        <trans-unit id="486591bb65cd2c84a9b49f1a6e403152c9af51bc" translate="yes" xml:space="preserve">
          <source>Command::borrow</source>
          <target state="translated">Command::borrow</target>
        </trans-unit>
        <trans-unit id="b0f90e8f0ad553853270136dd8c5673ab9bc13e2" translate="yes" xml:space="preserve">
          <source>Command::borrow_mut</source>
          <target state="translated">Command::borrow_mut</target>
        </trans-unit>
        <trans-unit id="7563077a48f9ad2a2fd86450f1e036b782b3a1bf" translate="yes" xml:space="preserve">
          <source>Command::creation_flags</source>
          <target state="translated">Command::creation_flags</target>
        </trans-unit>
        <trans-unit id="4e6cc00941013a3536f6a27f4db3142db1edfcc5" translate="yes" xml:space="preserve">
          <source>Command::current_dir</source>
          <target state="translated">Command::current_dir</target>
        </trans-unit>
        <trans-unit id="c2d63b462889145148295dc1768f3696071fd500" translate="yes" xml:space="preserve">
          <source>Command::env</source>
          <target state="translated">Command::env</target>
        </trans-unit>
        <trans-unit id="ef8942d6bab5b65c68547795b7575b70d158e3f2" translate="yes" xml:space="preserve">
          <source>Command::env_clear</source>
          <target state="translated">Command::env_clear</target>
        </trans-unit>
        <trans-unit id="465929aa138557a97b012623c66ecb435a3f67e6" translate="yes" xml:space="preserve">
          <source>Command::env_remove</source>
          <target state="translated">Command::env_remove</target>
        </trans-unit>
        <trans-unit id="37426c6e2f63c6d89208d4d58eb392ccadbc83bc" translate="yes" xml:space="preserve">
          <source>Command::envs</source>
          <target state="translated">Command::envs</target>
        </trans-unit>
        <trans-unit id="b390cb02e03048fb97ae4f24234e6f6e2f6a079f" translate="yes" xml:space="preserve">
          <source>Command::exec</source>
          <target state="translated">Command::exec</target>
        </trans-unit>
        <trans-unit id="1cda1352c774baa5513f0f212a17d8a445efb486" translate="yes" xml:space="preserve">
          <source>Command::fmt</source>
          <target state="translated">Command::fmt</target>
        </trans-unit>
        <trans-unit id="11715874d50916f3401911197c302a923dd00525" translate="yes" xml:space="preserve">
          <source>Command::from</source>
          <target state="translated">Command::from</target>
        </trans-unit>
        <trans-unit id="66f84dcf47b2f7c6e0b14c41c5a3a13fcae4ccd3" translate="yes" xml:space="preserve">
          <source>Command::gid</source>
          <target state="translated">Command::gid</target>
        </trans-unit>
        <trans-unit id="c2d67c3f198ec7b2d2fb3330dc5065ebb5e478bf" translate="yes" xml:space="preserve">
          <source>Command::into</source>
          <target state="translated">Command::into</target>
        </trans-unit>
        <trans-unit id="aabaaedab6e3a871072ec002f4a2f88e5331d7bd" translate="yes" xml:space="preserve">
          <source>Command::new</source>
          <target state="translated">Command::new</target>
        </trans-unit>
        <trans-unit id="a6dedeb5d843074bb205722ffa23ccc98bb53c00" translate="yes" xml:space="preserve">
          <source>Command::output</source>
          <target state="translated">Command::output</target>
        </trans-unit>
        <trans-unit id="868548186d23a3c0c7e50937ce1ae506792a5b09" translate="yes" xml:space="preserve">
          <source>Command::pre_exec</source>
          <target state="translated">Command::pre_exec</target>
        </trans-unit>
        <trans-unit id="d7eddce219e3ae000f0f5641ea7c4a4d8c8179c6" translate="yes" xml:space="preserve">
          <source>Command::spawn</source>
          <target state="translated">Command::spawn</target>
        </trans-unit>
        <trans-unit id="a00f01ddc4a40d00713ce8ff271c9918d15a3fbf" translate="yes" xml:space="preserve">
          <source>Command::status</source>
          <target state="translated">Command::status</target>
        </trans-unit>
        <trans-unit id="ece5cfcaf7132d9ecc42b16bd482226dcf9c3b2d" translate="yes" xml:space="preserve">
          <source>Command::stderr</source>
          <target state="translated">Command::stderr</target>
        </trans-unit>
        <trans-unit id="1175330d19b78add762ffe7f3d935801281c0db5" translate="yes" xml:space="preserve">
          <source>Command::stdin</source>
          <target state="translated">Command::stdin</target>
        </trans-unit>
        <trans-unit id="b7d36ae03a519586b058ab6a79d62e9a154d540e" translate="yes" xml:space="preserve">
          <source>Command::stdout</source>
          <target state="translated">Command::stdout</target>
        </trans-unit>
        <trans-unit id="6e6fae439ff4e016b21a1a853f75ea9e8b242406" translate="yes" xml:space="preserve">
          <source>Command::try_from</source>
          <target state="translated">Command::try_from</target>
        </trans-unit>
        <trans-unit id="62f62249534c47d7e6ec14052652585640a91531" translate="yes" xml:space="preserve">
          <source>Command::try_into</source>
          <target state="translated">Command::try_into</target>
        </trans-unit>
        <trans-unit id="b28b786cd92f0579cad1a03fa35cefd8a2d3bbb4" translate="yes" xml:space="preserve">
          <source>Command::type_id</source>
          <target state="translated">Command::type_id</target>
        </trans-unit>
        <trans-unit id="181cf324ce388615e22c2fd9126b437bafc882ad" translate="yes" xml:space="preserve">
          <source>Command::uid</source>
          <target state="translated">Command::uid</target>
        </trans-unit>
        <trans-unit id="945876aef3d46a538f9f0cfeb26f72a97a05d72a" translate="yes" xml:space="preserve">
          <source>CommandArgs</source>
          <target state="translated">CommandArgs</target>
        </trans-unit>
        <trans-unit id="f7bf0c950970a08b35a109b9cf16de7e16fcd440" translate="yes" xml:space="preserve">
          <source>CommandEnvs</source>
          <target state="translated">CommandEnvs</target>
        </trans-unit>
        <trans-unit id="b2e9512f9d8bce057394a252427a1985517fec21" translate="yes" xml:space="preserve">
          <source>CommandExt</source>
          <target state="translated">CommandExt</target>
        </trans-unit>
        <trans-unit id="fb760be1af3110573c792339746c86cad105ecc0" translate="yes" xml:space="preserve">
          <source>Commenting Contained Items</source>
          <target state="translated">内容物のコメント</target>
        </trans-unit>
        <trans-unit id="fce06e20e5f7f74aacccab40b59b75a56c8f7305" translate="yes" xml:space="preserve">
          <source>Comments</source>
          <target state="translated">Comments</target>
        </trans-unit>
        <trans-unit id="131bd825c5b4e5d83c2001aeb6aa0151c4ed4f89" translate="yes" xml:space="preserve">
          <source>Comments can also be placed at the end of lines containing code:</source>
          <target state="translated">コメントは、コードを含む行の最後に配置することもできます。</target>
        </trans-unit>
        <trans-unit id="f73aad90d101b23c48f44293be06e60510eb0872" translate="yes" xml:space="preserve">
          <source>Comments in Rust code follow the general C++ style of line (&lt;code&gt;//&lt;/code&gt;) and block (&lt;code&gt;/* ... */&lt;/code&gt;) comment forms. Nested block comments are supported.</source>
          <target state="translated">Rustコードのコメントは、一般的なC ++スタイルの行（ &lt;code&gt;//&lt;/code&gt; ）およびブロック（ &lt;code&gt;/* ... */&lt;/code&gt; ）コメント形式に従います。ネストされたブロックコメントがサポートされています。</target>
        </trans-unit>
        <trans-unit id="0cd5b0c18ac8d15acfaab4d0ddfb90a6e0406cea" translate="yes" xml:space="preserve">
          <source>Common Collections</source>
          <target state="translated">共通コレクション</target>
        </trans-unit>
        <trans-unit id="eac0847a981bd66bfba2e9d98388a2500508001e" translate="yes" xml:space="preserve">
          <source>Common Programming Concepts</source>
          <target state="translated">一般的なプログラミングの概念</target>
        </trans-unit>
        <trans-unit id="bcaa39d6e0fcf5f052d38b34eebc055c0ccd67f1" translate="yes" xml:space="preserve">
          <source>Common iterator adapters include &lt;a href=&quot;trait.iterator#method.map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;trait.iterator#method.take&quot;&gt;&lt;code&gt;take&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;trait.iterator#method.filter&quot;&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/a&gt;. For more, see their documentation.</source>
          <target state="translated">一般的なイテレーターアダプターには、&lt;a href=&quot;trait.iterator#method.map&quot;&gt; &lt;code&gt;map&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;trait.iterator#method.take&quot;&gt; &lt;code&gt;take&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;trait.iterator#method.filter&quot;&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/a&gt;などがあります。詳細については、ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="ac0c83f6d884114a498a2f885549ee0bc484436b" translate="yes" xml:space="preserve">
          <source>Common types of I/O, including &lt;a href=&quot;fs/struct.file&quot;&gt;files&lt;/a&gt;, &lt;a href=&quot;net/struct.tcpstream&quot;&gt;TCP&lt;/a&gt;, &lt;a href=&quot;net/struct.udpsocket&quot;&gt;UDP&lt;/a&gt;, are defined in the &lt;a href=&quot;io/index&quot;&gt;&lt;code&gt;io&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;fs/index&quot;&gt;&lt;code&gt;fs&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;net/index&quot;&gt;&lt;code&gt;net&lt;/code&gt;&lt;/a&gt; modules.</source>
          <target state="translated">&lt;a href=&quot;fs/struct.file&quot;&gt;ファイル&lt;/a&gt;、&lt;a href=&quot;net/struct.tcpstream&quot;&gt;TCP&lt;/a&gt;、&lt;a href=&quot;net/struct.udpsocket&quot;&gt;UDP&lt;/a&gt;を含む一般的なタイプのI / O は、&lt;a href=&quot;io/index&quot;&gt; &lt;code&gt;io&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;fs/index&quot;&gt; &lt;code&gt;fs&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;net/index&quot;&gt; &lt;code&gt;net&lt;/code&gt; &lt;/a&gt;モジュールで定義されています。</target>
        </trans-unit>
        <trans-unit id="c7682c812ff2b4a16541f58fee5eb73b12e6436c" translate="yes" xml:space="preserve">
          <source>Common ways to create raw pointers</source>
          <target state="translated">生のポインタを作成する一般的な方法</target>
        </trans-unit>
        <trans-unit id="479886035b1019d413ed5854e23e1465c3c5bd11" translate="yes" xml:space="preserve">
          <source>Commonly Used Sections</source>
          <target state="translated">よく使われるセクション</target>
        </trans-unit>
        <trans-unit id="c7132a1070f76d957febcc1e7fb6a35d3e926d89" translate="yes" xml:space="preserve">
          <source>Commonly, code using unions will provide safe wrappers around unsafe union field accesses.</source>
          <target state="translated">一般的に、ユニオンを使用したコードは、安全ではないユニオンフィールドアクセスの安全なラッパーを提供します。</target>
        </trans-unit>
        <trans-unit id="5c2b0e4fdb04b3ebc03b60752de692634aad8910" translate="yes" xml:space="preserve">
          <source>Communication between threads can be done through &lt;a href=&quot;../sync/mpsc/index&quot;&gt;channels&lt;/a&gt;, Rust's message-passing types, along with &lt;a href=&quot;../sync/index&quot;&gt;other forms of thread synchronization&lt;/a&gt; and shared-memory data structures. In particular, types that are guaranteed to be threadsafe are easily shared between threads using the atomically-reference-counted container, &lt;a href=&quot;../sync/struct.arc&quot;&gt;&lt;code&gt;Arc&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">スレッド間の通信は、&lt;a href=&quot;../sync/mpsc/index&quot;&gt;チャネル&lt;/a&gt;、Rustのメッセージパッシングタイプ、および&lt;a href=&quot;../sync/index&quot;&gt;他の形式のスレッド同期&lt;/a&gt;と共有メモリデータ構造を介して行うことができます。特に、スレッドセーフであることが保証されている型は、原子的に参照カウントされるコンテナー&lt;a href=&quot;../sync/struct.arc&quot;&gt; &lt;code&gt;Arc&lt;/code&gt; &lt;/a&gt;を使用して、スレッド間で簡単に共有できます。</target>
        </trans-unit>
        <trans-unit id="9dba7ad7c5bdb2aa80495855ae01b2cbb94d11c9" translate="yes" xml:space="preserve">
          <source>Companies</source>
          <target state="translated">Companies</target>
        </trans-unit>
        <trans-unit id="706666d53a33717782f5c1ccb4d3bc53f4fa7a82" translate="yes" xml:space="preserve">
          <source>Compared to &lt;a href=&quot;#method.add&quot;&gt;&lt;code&gt;add&lt;/code&gt;&lt;/a&gt;, this method basically delays the requirement of staying within the same allocated object: &lt;a href=&quot;#method.add&quot;&gt;&lt;code&gt;add&lt;/code&gt;&lt;/a&gt; is immediate Undefined Behavior when crossing object boundaries; &lt;code&gt;wrapping_add&lt;/code&gt; produces a pointer but still leads to Undefined Behavior if that pointer is dereferenced. &lt;a href=&quot;#method.add&quot;&gt;&lt;code&gt;add&lt;/code&gt;&lt;/a&gt; can be optimized better and is thus preferable in performance-sensitive code.</source>
          <target state="translated">Compared to &lt;a href=&quot;#method.add&quot;&gt; &lt;code&gt;add&lt;/code&gt; &lt;/a&gt;, this method basically delays the requirement of staying within the same allocated object: &lt;a href=&quot;#method.add&quot;&gt; &lt;code&gt;add&lt;/code&gt; &lt;/a&gt; is immediate Undefined Behavior when crossing object boundaries; &lt;code&gt;wrapping_add&lt;/code&gt; produces a pointer but still leads to Undefined Behavior if that pointer is dereferenced. &lt;a href=&quot;#method.add&quot;&gt; &lt;code&gt;add&lt;/code&gt; &lt;/a&gt; can be optimized better and is thus preferable in performance-sensitive code.</target>
        </trans-unit>
        <trans-unit id="91c13ae52e0c9a713443d4fd500039fc22b66740" translate="yes" xml:space="preserve">
          <source>Compared to &lt;a href=&quot;#method.is_numeric&quot;&gt;&lt;code&gt;is_numeric()&lt;/code&gt;&lt;/a&gt;, this function only recognizes the characters &lt;code&gt;0-9&lt;/code&gt;, &lt;code&gt;a-z&lt;/code&gt; and &lt;code&gt;A-Z&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7123e003b56b6f11d5d77affe747976026ffe890" translate="yes" xml:space="preserve">
          <source>Compared to &lt;a href=&quot;#method.offset&quot;&gt;&lt;code&gt;offset&lt;/code&gt;&lt;/a&gt;, this method basically delays the requirement of staying within the same allocated object: &lt;a href=&quot;#method.offset&quot;&gt;&lt;code&gt;offset&lt;/code&gt;&lt;/a&gt; is immediate Undefined Behavior when crossing object boundaries; &lt;code&gt;wrapping_offset&lt;/code&gt; produces a pointer but still leads to Undefined Behavior if that pointer is dereferenced. &lt;a href=&quot;#method.offset&quot;&gt;&lt;code&gt;offset&lt;/code&gt;&lt;/a&gt; can be optimized better and is thus preferable in performance-sensitive code.</source>
          <target state="translated">Compared to &lt;a href=&quot;#method.offset&quot;&gt; &lt;code&gt;offset&lt;/code&gt; &lt;/a&gt;, this method basically delays the requirement of staying within the same allocated object: &lt;a href=&quot;#method.offset&quot;&gt; &lt;code&gt;offset&lt;/code&gt; &lt;/a&gt; is immediate Undefined Behavior when crossing object boundaries; &lt;code&gt;wrapping_offset&lt;/code&gt; produces a pointer but still leads to Undefined Behavior if that pointer is dereferenced. &lt;a href=&quot;#method.offset&quot;&gt; &lt;code&gt;offset&lt;/code&gt; &lt;/a&gt; can be optimized better and is thus preferable in performance-sensitive code.</target>
        </trans-unit>
        <trans-unit id="c8bdc3eed08ac4ee0ed977164f9dcb87fa82826b" translate="yes" xml:space="preserve">
          <source>Compared to &lt;a href=&quot;#method.sub&quot;&gt;&lt;code&gt;sub&lt;/code&gt;&lt;/a&gt;, this method basically delays the requirement of staying within the same allocated object: &lt;a href=&quot;#method.sub&quot;&gt;&lt;code&gt;sub&lt;/code&gt;&lt;/a&gt; is immediate Undefined Behavior when crossing object boundaries; &lt;code&gt;wrapping_sub&lt;/code&gt; produces a pointer but still leads to Undefined Behavior if that pointer is dereferenced. &lt;a href=&quot;#method.sub&quot;&gt;&lt;code&gt;sub&lt;/code&gt;&lt;/a&gt; can be optimized better and is thus preferable in performance-sensitive code.</source>
          <target state="translated">Compared to &lt;a href=&quot;#method.sub&quot;&gt; &lt;code&gt;sub&lt;/code&gt; &lt;/a&gt;, this method basically delays the requirement of staying within the same allocated object: &lt;a href=&quot;#method.sub&quot;&gt; &lt;code&gt;sub&lt;/code&gt; &lt;/a&gt; is immediate Undefined Behavior when crossing object boundaries; &lt;code&gt;wrapping_sub&lt;/code&gt; produces a pointer but still leads to Undefined Behavior if that pointer is dereferenced. &lt;a href=&quot;#method.sub&quot;&gt; &lt;code&gt;sub&lt;/code&gt; &lt;/a&gt; can be optimized better and is thus preferable in performance-sensitive code.</target>
        </trans-unit>
        <trans-unit id="a1f35e60986410bf3cb3d655304edfd39b72a3ca" translate="yes" xml:space="preserve">
          <source>Compared to &lt;code&gt;is_numeric()&lt;/code&gt;, this function only recognizes the characters &lt;code&gt;0-9&lt;/code&gt;, &lt;code&gt;a-z&lt;/code&gt; and &lt;code&gt;A-Z&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;is_numeric()&lt;/code&gt; と比較して、この関数は &lt;code&gt;0-9&lt;/code&gt; 、 &lt;code&gt;a-z&lt;/code&gt; 、および &lt;code&gt;A-Z&lt;/code&gt; 文字のみを認識します。</target>
        </trans-unit>
        <trans-unit id="d777817ea0901a1236c396ffc729ff29f49ed3d1" translate="yes" xml:space="preserve">
          <source>Compared with &lt;a href=&quot;struct.receiver#method.recv&quot;&gt;&lt;code&gt;recv&lt;/code&gt;&lt;/a&gt;, this function has two failure cases instead of one (one for disconnection, one for an empty buffer).</source>
          <target state="translated">&lt;a href=&quot;struct.receiver#method.recv&quot;&gt; &lt;code&gt;recv&lt;/code&gt; &lt;/a&gt;と比較すると、この関数には1つではなく2つの失敗ケースがあります（1つは切断、もう1つは空のバッファー）。</target>
        </trans-unit>
        <trans-unit id="dea71b43753773347bff9ab6a0389174407032be" translate="yes" xml:space="preserve">
          <source>Compares and returns the maximum of two values.</source>
          <target state="translated">2つの値の最大値を比較して返します。</target>
        </trans-unit>
        <trans-unit id="d24b62c376874d460f83bd99a73fc3917e6f42d8" translate="yes" xml:space="preserve">
          <source>Compares and returns the maximum of two values. &lt;a href=&quot;../../cmp/trait.ord#method.max&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">2つの値の最大値を比較して返します。&lt;a href=&quot;../../cmp/trait.ord#method.max&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="36e1e0a2aac848f2f05bda57a02b8c49cbd0f3e4" translate="yes" xml:space="preserve">
          <source>Compares and returns the maximum of two values. &lt;a href=&quot;../cmp/trait.ord#method.max&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">2つの値の最大値を比較して返します。&lt;a href=&quot;../cmp/trait.ord#method.max&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ca158bd95a13f9888983d32f899153f3575ef905" translate="yes" xml:space="preserve">
          <source>Compares and returns the maximum of two values. &lt;a href=&quot;cmp/trait.ord#method.max&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">2つの値の最大値を比較して返します。&lt;a href=&quot;cmp/trait.ord#method.max&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="41c9c9d6e705fa48883f964669e9639c00d9388f" translate="yes" xml:space="preserve">
          <source>Compares and returns the maximum of two values. &lt;a href=&quot;trait.ord#method.max&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">2つの値の最大値を比較して返します。&lt;a href=&quot;trait.ord#method.max&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1b65140bb64038a25f4ce4d8ab74ac4c11ca1cc1" translate="yes" xml:space="preserve">
          <source>Compares and returns the minimum of two values.</source>
          <target state="translated">2つの値の最小値を比較して返します。</target>
        </trans-unit>
        <trans-unit id="3e747588c89a0c4375642f912dea92e2bb7cfd1d" translate="yes" xml:space="preserve">
          <source>Compares and returns the minimum of two values. &lt;a href=&quot;../../cmp/trait.ord#method.min&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">2つの値の最小値を比較して返します。&lt;a href=&quot;../../cmp/trait.ord#method.min&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="026e9d9c8b08dceb96e0bb1a954b4dd2941ea5dd" translate="yes" xml:space="preserve">
          <source>Compares and returns the minimum of two values. &lt;a href=&quot;../cmp/trait.ord#method.min&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">2つの値の最小値を比較して返します。&lt;a href=&quot;../cmp/trait.ord#method.min&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f5a7bee501ad06e46389368e7d3f5bae62b1235c" translate="yes" xml:space="preserve">
          <source>Compares and returns the minimum of two values. &lt;a href=&quot;cmp/trait.ord#method.min&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">2つの値の最小値を比較して返します。&lt;a href=&quot;cmp/trait.ord#method.min&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5028f0c586d481a7ae90fcb3719e4f938987db26" translate="yes" xml:space="preserve">
          <source>Compares and returns the minimum of two values. &lt;a href=&quot;trait.ord#method.min&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">2つの値の最小値を比較して返します。&lt;a href=&quot;trait.ord#method.min&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cdac957e78c387a385ce1cfcdcb495cee6a2e6e6" translate="yes" xml:space="preserve">
          <source>Compares raw pointers for equality.</source>
          <target state="translated">生のポインタを比較して平等性を確認します。</target>
        </trans-unit>
        <trans-unit id="ddb4bd5266a5b428186c04648c8e4a60dbd5374b" translate="yes" xml:space="preserve">
          <source>Comparing &lt;code&gt;Weak::new&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Weak::new&lt;/code&gt; 比較。</target>
        </trans-unit>
        <trans-unit id="32d5014299dc1fa48ff366ad0c339eaea737e846" translate="yes" xml:space="preserve">
          <source>Comparing Performance: Loops vs. Iterators</source>
          <target state="translated">パフォーマンスの比較。ループとイテレータ</target>
        </trans-unit>
        <trans-unit id="724dff84af2b27e44528f9ed0d23ec67f41af3e5" translate="yes" xml:space="preserve">
          <source>Comparing a number and a reference to a number isn&amp;rsquo;t allowed because they&amp;rsquo;re different types. We must use the dereference operator to follow the reference to the value it&amp;rsquo;s pointing to.</source>
          <target state="translated">数値と数値への参照を比較することは、型が異なるため許可されません。参照解除演算子を使用して、参照先の値への参照を追跡する必要があります。</target>
        </trans-unit>
        <trans-unit id="37b10730e5c4aad86cdfef330f2d7a2ff0902a0c" translate="yes" xml:space="preserve">
          <source>Comparing the Guess to the Secret Number</source>
          <target state="translated">推測と秘密の数字の比較</target>
        </trans-unit>
        <trans-unit id="25acda77b0bc6b058bd349dd6f4a271e2a967bfe" translate="yes" xml:space="preserve">
          <source>Comparison Operators</source>
          <target state="translated">比較演算子</target>
        </trans-unit>
        <trans-unit id="4c45737f00be1bcd0228d0da1354076a918ef2af" translate="yes" xml:space="preserve">
          <source>Comparison for two &lt;code&gt;Arc&lt;/code&gt;s.</source>
          <target state="translated">2つの &lt;code&gt;Arc&lt;/code&gt; の比較。</target>
        </trans-unit>
        <trans-unit id="0dfc0af5ed6ce1ccc5f10f5b56d918246c502311" translate="yes" xml:space="preserve">
          <source>Comparison for two &lt;code&gt;Rc&lt;/code&gt;s.</source>
          <target state="translated">2つの &lt;code&gt;Rc&lt;/code&gt; の比較。</target>
        </trans-unit>
        <trans-unit id="87bb37af0777932b61f261e6867c659c305dcd58" translate="yes" xml:space="preserve">
          <source>Comparison operators are also defined both for primitive types and many type in the standard library. Parentheses are required when chaining comparison operators. For example, the expression &lt;code&gt;a == b == c&lt;/code&gt; is invalid and may be written as &lt;code&gt;(a == b) == c&lt;/code&gt;.</source>
          <target state="translated">比較演算子は、プリミティブ型と標準ライブラリの多くの型の両方に対しても定義されています。比較演算子をチェーンする場合は、括弧が必要です。たとえば、式 &lt;code&gt;a == b == c&lt;/code&gt; は無効であり、 &lt;code&gt;(a == b) == c&lt;/code&gt; ように記述できます。</target>
        </trans-unit>
        <trans-unit id="e46ee00fde40e955c86abe019a61121e06d653c9" translate="yes" xml:space="preserve">
          <source>Comparisons</source>
          <target state="translated">Comparisons</target>
        </trans-unit>
        <trans-unit id="e584a0642e80df80337ee8e05defcd350e0e3258" translate="yes" xml:space="preserve">
          <source>Comparisons for equality and ordering are made in file, line, then column priority. Files are compared as strings, not &lt;code&gt;Path&lt;/code&gt;, which could be unexpected. See &lt;a href=&quot;struct.location#method.file&quot;&gt;&lt;code&gt;Location::file&lt;/code&gt;&lt;/a&gt;'s documentation for more discussion.</source>
          <target state="translated">Comparisons for equality and ordering are made in file, line, then column priority. Files are compared as strings, not &lt;code&gt;Path&lt;/code&gt; , which could be unexpected. See &lt;a href=&quot;struct.location#method.file&quot;&gt; &lt;code&gt;Location::file&lt;/code&gt; &lt;/a&gt;'s documentation for more discussion.</target>
        </trans-unit>
        <trans-unit id="4aa91e9a2ab4b917658be3a3bfda0a2806df0b0d" translate="yes" xml:space="preserve">
          <source>Compile the code with this change. Drat! We still get an error:</source>
          <target state="translated">この変更でコードをコンパイルしてください。畜生!まだエラーが出ます</target>
        </trans-unit>
        <trans-unit id="d5df5558740afcbebe65b6a1eaf18cceaebfbf21" translate="yes" xml:space="preserve">
          <source>Compile-time constants</source>
          <target state="translated">コンパイル時定数</target>
        </trans-unit>
        <trans-unit id="fafead10cc95e56679b412c1bb34ac51d75b0bcd" translate="yes" xml:space="preserve">
          <source>Compile-time constants and compile-time evaluable functions.</source>
          <target state="translated">コンパイル時定数とコンパイル時評価可能な関数。</target>
        </trans-unit>
        <trans-unit id="99bc1ae1631a18672875283b58a9ced8959aacb2" translate="yes" xml:space="preserve">
          <source>Compile-time constants and deterministic functions.</source>
          <target state="translated">コンパイル時定数と決定論的関数。</target>
        </trans-unit>
        <trans-unit id="ab389bff64ccbbfeaaca32dcf5d96cd9e80b9e23" translate="yes" xml:space="preserve">
          <source>Compile-time evaluable functions</source>
          <target state="translated">コンパイル時に評価可能な関数</target>
        </trans-unit>
        <trans-unit id="c5622f2ccb82060ab7291755529e734525ec5dc2" translate="yes" xml:space="preserve">
          <source>Compile-time or run-time behavior that is not specified. This may result in, but is not limited to: process termination or corruption; improper, incorrect, or unintended computation; or platform-specific results. &lt;a href=&quot;behavior-considered-undefined&quot;&gt;More&lt;/a&gt;.</source>
          <target state="translated">指定されていないコンパイル時または実行時の動作。ただし、これらの内容に限定されているわけではありません。プロセスの終了または破損。不適切、不正確、または意図しない計算。またはプラットフォーム固有の結果。&lt;a href=&quot;behavior-considered-undefined&quot;&gt;もっと&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="03a28ca8c3d9613144507cbc2e784d7d08f72e10" translate="yes" xml:space="preserve">
          <source>Compiler Errors</source>
          <target state="translated">コンパイラエラー</target>
        </trans-unit>
        <trans-unit id="1cc7aed0505a020bbe67bdc752cf4e6415437eba" translate="yes" xml:space="preserve">
          <source>Compiler intrinsics.</source>
          <target state="translated">コンパイラの本質。</target>
        </trans-unit>
        <trans-unit id="712bea51e174ede18c926a54662bfb59ad019819" translate="yes" xml:space="preserve">
          <source>Compiler-internal trait used to indicate the type of enum discriminants.</source>
          <target state="translated">enum 判別要素のタイプを示すために使用されるコンパイラ内部形質。</target>
        </trans-unit>
        <trans-unit id="e72256e79253a4114ab0592fa1ea8d5b50fac69e" translate="yes" xml:space="preserve">
          <source>Compiling 'main.rs' and running the resulting binary will print &quot;adi&amp;oacute;s&quot;.</source>
          <target state="translated">「main.rs」をコンパイルし、結果のバイナリを実行すると、「adi&amp;oacute;s」が出力されます。</target>
        </trans-unit>
        <trans-unit id="f3e914e36c0e1a9eacd76efbc377a57d6e37082c" translate="yes" xml:space="preserve">
          <source>Compiling 'main.rs' and running the resulting binary will print &quot;🙈🙊🙉🙈🙊🙉&quot;.</source>
          <target state="translated">main.rs'をコンパイルして、出来上がったバイナリを実行すると、「🙈🙊🙉🙈🙊🙉」と表示されます。</target>
        </trans-unit>
        <trans-unit id="d796993777719314e39212e52795da69124718ae" translate="yes" xml:space="preserve">
          <source>Compiling and Running Are Separate Steps</source>
          <target state="translated">コンパイルと実行は別のステップ</target>
        </trans-unit>
        <trans-unit id="54a2e5d2cc6ad38a1d4271bd33db9eb352f9e532" translate="yes" xml:space="preserve">
          <source>Compiling this code produces an error, as follows:</source>
          <target state="translated">このコードをコンパイルすると、以下のようなエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="3c506c34bb370edec4253cda82104e080ca32d82" translate="yes" xml:space="preserve">
          <source>Compiling this code will result in this error:</source>
          <target state="translated">このコードをコンパイルすると、このエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="f564777ac40c723997c5eed12787c64f393c6531" translate="yes" xml:space="preserve">
          <source>Complexity</source>
          <target state="translated">Complexity</target>
        </trans-unit>
        <trans-unit id="c92c529e0731c57efd7550480196484040b33c3e" translate="yes" xml:space="preserve">
          <source>Component</source>
          <target state="translated">Component</target>
        </trans-unit>
        <trans-unit id="70c7ff923026f67555d1abc4c5c50bc0d45c5d39" translate="yes" xml:space="preserve">
          <source>Component::as_os_str</source>
          <target state="translated">Component::as_os_str</target>
        </trans-unit>
        <trans-unit id="bf87ec715cd2188be92e40d4818f8edd12321775" translate="yes" xml:space="preserve">
          <source>Component::as_ref</source>
          <target state="translated">Component::as_ref</target>
        </trans-unit>
        <trans-unit id="ba2a2d3ec5c5db3a82d897da257669091f272255" translate="yes" xml:space="preserve">
          <source>Component::borrow</source>
          <target state="translated">Component::borrow</target>
        </trans-unit>
        <trans-unit id="ee71d0a29e1de2965d46895ce515b5f37ff4da02" translate="yes" xml:space="preserve">
          <source>Component::borrow_mut</source>
          <target state="translated">Component::borrow_mut</target>
        </trans-unit>
        <trans-unit id="c6529ac3ab5a8811c5162185150cfc140a2ef566" translate="yes" xml:space="preserve">
          <source>Component::clamp</source>
          <target state="translated">Component::clamp</target>
        </trans-unit>
        <trans-unit id="4964bcf3249cccfcb615a20272974c5fad5681ce" translate="yes" xml:space="preserve">
          <source>Component::clone</source>
          <target state="translated">Component::clone</target>
        </trans-unit>
        <trans-unit id="0cf15a2f852ff93f5dca8ca8e8978ba202563b4b" translate="yes" xml:space="preserve">
          <source>Component::clone_from</source>
          <target state="translated">Component::clone_from</target>
        </trans-unit>
        <trans-unit id="6c38928abcf1a61b98aa246065d0fe04d05475fc" translate="yes" xml:space="preserve">
          <source>Component::clone_into</source>
          <target state="translated">Component::clone_into</target>
        </trans-unit>
        <trans-unit id="47f4e11d0bdaf111b93d4fedb5a8c0fa6c27d86d" translate="yes" xml:space="preserve">
          <source>Component::cmp</source>
          <target state="translated">Component::cmp</target>
        </trans-unit>
        <trans-unit id="d530b4e1a3c628d3589375e5fc75f76b7298c9c8" translate="yes" xml:space="preserve">
          <source>Component::eq</source>
          <target state="translated">Component::eq</target>
        </trans-unit>
        <trans-unit id="b299714b7b9699933745b609f2358c31d3bcc7dc" translate="yes" xml:space="preserve">
          <source>Component::fmt</source>
          <target state="translated">Component::fmt</target>
        </trans-unit>
        <trans-unit id="780b5d2a7900897410e031f9293ccbb80bd6b121" translate="yes" xml:space="preserve">
          <source>Component::from</source>
          <target state="translated">Component::from</target>
        </trans-unit>
        <trans-unit id="5c4f5de5ee5fe168cab8f551748246f13126f3c4" translate="yes" xml:space="preserve">
          <source>Component::ge</source>
          <target state="translated">Component::ge</target>
        </trans-unit>
        <trans-unit id="cabdf84dac131789504879f174b82a2bba553be4" translate="yes" xml:space="preserve">
          <source>Component::gt</source>
          <target state="translated">Component::gt</target>
        </trans-unit>
        <trans-unit id="08db52d5a5c2228ccb7f223b1ce870b1fb371fe3" translate="yes" xml:space="preserve">
          <source>Component::hash</source>
          <target state="translated">Component::hash</target>
        </trans-unit>
        <trans-unit id="c3a5e81a9ccffadde3191fdabe87a1faef6a271e" translate="yes" xml:space="preserve">
          <source>Component::hash_slice</source>
          <target state="translated">Component::hash_slice</target>
        </trans-unit>
        <trans-unit id="6bd197762df3122b4998458f467819b1465d923c" translate="yes" xml:space="preserve">
          <source>Component::into</source>
          <target state="translated">Component::into</target>
        </trans-unit>
        <trans-unit id="0cea6c1db3810768c5fc93ac46c4bf4491149495" translate="yes" xml:space="preserve">
          <source>Component::le</source>
          <target state="translated">Component::le</target>
        </trans-unit>
        <trans-unit id="c674a98092cc9da7311063389894d1db47f47e03" translate="yes" xml:space="preserve">
          <source>Component::lt</source>
          <target state="translated">Component::lt</target>
        </trans-unit>
        <trans-unit id="9a5b09ab3d772e30d4804a4e243e44cd8fe57340" translate="yes" xml:space="preserve">
          <source>Component::max</source>
          <target state="translated">Component::max</target>
        </trans-unit>
        <trans-unit id="bb517c9322ae82c1d50acff9a4cac714f0a77aa8" translate="yes" xml:space="preserve">
          <source>Component::min</source>
          <target state="translated">Component::min</target>
        </trans-unit>
        <trans-unit id="ee0de9e98b9408148432617e7f7e7d663e64f556" translate="yes" xml:space="preserve">
          <source>Component::ne</source>
          <target state="translated">Component::ne</target>
        </trans-unit>
        <trans-unit id="54982863744c1ed4cdaf4b1a3f59bf912eaf0ec8" translate="yes" xml:space="preserve">
          <source>Component::partial_cmp</source>
          <target state="translated">Component::partial_cmp</target>
        </trans-unit>
        <trans-unit id="303d63c09bca81276cd837c699b2e9342505218d" translate="yes" xml:space="preserve">
          <source>Component::to_owned</source>
          <target state="translated">Component::to_owned</target>
        </trans-unit>
        <trans-unit id="46953d0c6d460ea5aba669627582ddc37f64d7a6" translate="yes" xml:space="preserve">
          <source>Component::try_from</source>
          <target state="translated">Component::try_from</target>
        </trans-unit>
        <trans-unit id="8a12246326645dffb413bfe27b332b8445b06b9f" translate="yes" xml:space="preserve">
          <source>Component::try_into</source>
          <target state="translated">Component::try_into</target>
        </trans-unit>
        <trans-unit id="96a857cc213190faa4f9f927d005ded5fd887b79" translate="yes" xml:space="preserve">
          <source>Component::type_id</source>
          <target state="translated">Component::type_id</target>
        </trans-unit>
        <trans-unit id="9289473eeedaee09d76c8cf1b6994d8550debf46" translate="yes" xml:space="preserve">
          <source>Components</source>
          <target state="translated">Components</target>
        </trans-unit>
        <trans-unit id="4067de75332952e6144348763d2d6cebe6cbb5cf" translate="yes" xml:space="preserve">
          <source>Components::all</source>
          <target state="translated">Components::all</target>
        </trans-unit>
        <trans-unit id="f5879c33609f49eb0c70b5e64bb77b4df5115360" translate="yes" xml:space="preserve">
          <source>Components::any</source>
          <target state="translated">Components::any</target>
        </trans-unit>
        <trans-unit id="e65676d6940a1c393d212da1229abc5bdf76258a" translate="yes" xml:space="preserve">
          <source>Components::as_path</source>
          <target state="translated">Components::as_path</target>
        </trans-unit>
        <trans-unit id="5debf0bc7a69f62fd0178e7f22b43add3a6ecfb9" translate="yes" xml:space="preserve">
          <source>Components::as_ref</source>
          <target state="translated">Components::as_ref</target>
        </trans-unit>
        <trans-unit id="7923d94a2a28c5f0971a429cf8ac4ab8364d7d77" translate="yes" xml:space="preserve">
          <source>Components::borrow</source>
          <target state="translated">Components::borrow</target>
        </trans-unit>
        <trans-unit id="6e1146760f437b3aebf6becf7839d91d6757cac2" translate="yes" xml:space="preserve">
          <source>Components::borrow_mut</source>
          <target state="translated">Components::borrow_mut</target>
        </trans-unit>
        <trans-unit id="efa90a0098b1e0b718f65fee436585f183c9c3eb" translate="yes" xml:space="preserve">
          <source>Components::by_ref</source>
          <target state="translated">Components::by_ref</target>
        </trans-unit>
        <trans-unit id="8dcbbdd86cd877017bdf8b54238d2a8af6338280" translate="yes" xml:space="preserve">
          <source>Components::chain</source>
          <target state="translated">Components::chain</target>
        </trans-unit>
        <trans-unit id="257fac141738e7cd30fe4cdf53b234ac9bb0e0b3" translate="yes" xml:space="preserve">
          <source>Components::clamp</source>
          <target state="translated">Components::clamp</target>
        </trans-unit>
        <trans-unit id="46c9c08d84250d087e6419855001f2eeaf1a5b39" translate="yes" xml:space="preserve">
          <source>Components::clone</source>
          <target state="translated">Components::clone</target>
        </trans-unit>
        <trans-unit id="8fa590181b52f58586cea826e26fa92bb6638d87" translate="yes" xml:space="preserve">
          <source>Components::clone_from</source>
          <target state="translated">Components::clone_from</target>
        </trans-unit>
        <trans-unit id="5bcda3aa4272c3d490df14cbc1036e95b8a32670" translate="yes" xml:space="preserve">
          <source>Components::clone_into</source>
          <target state="translated">Components::clone_into</target>
        </trans-unit>
        <trans-unit id="6a31b24bbbd3fc2b28f174597b7318d5735badf9" translate="yes" xml:space="preserve">
          <source>Components::cloned</source>
          <target state="translated">Components::cloned</target>
        </trans-unit>
        <trans-unit id="bb83b23522f09f76a0c402333a6d9a15cf26e6a0" translate="yes" xml:space="preserve">
          <source>Components::cmp</source>
          <target state="translated">Components::cmp</target>
        </trans-unit>
        <trans-unit id="1ae7bb440107ecf93b6ff7eb57b9638f2940c017" translate="yes" xml:space="preserve">
          <source>Components::collect</source>
          <target state="translated">Components::collect</target>
        </trans-unit>
        <trans-unit id="3f45c5102061c930863096a462bcf2e03a94dda5" translate="yes" xml:space="preserve">
          <source>Components::copied</source>
          <target state="translated">Components::copied</target>
        </trans-unit>
        <trans-unit id="78e30a386b03605ecc012a1f1f502260e3cdeec5" translate="yes" xml:space="preserve">
          <source>Components::count</source>
          <target state="translated">Components::count</target>
        </trans-unit>
        <trans-unit id="c9c06a76d0a387a64395932bd3d3067be30d642f" translate="yes" xml:space="preserve">
          <source>Components::cycle</source>
          <target state="translated">Components::cycle</target>
        </trans-unit>
        <trans-unit id="c74b0547168b6ced76196c9e6516996c9b500e4d" translate="yes" xml:space="preserve">
          <source>Components::enumerate</source>
          <target state="translated">Components::enumerate</target>
        </trans-unit>
        <trans-unit id="db8aae65356ded534db64a059c1bb900b00900cd" translate="yes" xml:space="preserve">
          <source>Components::eq</source>
          <target state="translated">Components::eq</target>
        </trans-unit>
        <trans-unit id="98c2c57b44a1e4ddba5ccae9622297b1277ffcc2" translate="yes" xml:space="preserve">
          <source>Components::filter</source>
          <target state="translated">Components::filter</target>
        </trans-unit>
        <trans-unit id="a35e5ee23517acf5b76c686ecf093b16dfa38d5a" translate="yes" xml:space="preserve">
          <source>Components::filter_map</source>
          <target state="translated">Components::filter_map</target>
        </trans-unit>
        <trans-unit id="84aa92389c4c3cf8b123bec254f6d45f417a1d79" translate="yes" xml:space="preserve">
          <source>Components::find</source>
          <target state="translated">Components::find</target>
        </trans-unit>
        <trans-unit id="71051b0af8f41eda8b323de566d528c6078febad" translate="yes" xml:space="preserve">
          <source>Components::find_map</source>
          <target state="translated">Components::find_map</target>
        </trans-unit>
        <trans-unit id="d9b04b14f1339301cea456cbc69f99e0994849c6" translate="yes" xml:space="preserve">
          <source>Components::flat_map</source>
          <target state="translated">Components::flat_map</target>
        </trans-unit>
        <trans-unit id="40e35fd458fa6715b22407d2b6b89bf9cf878a29" translate="yes" xml:space="preserve">
          <source>Components::flatten</source>
          <target state="translated">Components::flatten</target>
        </trans-unit>
        <trans-unit id="2ee72b87b75d53b7a840b6aa18f610edf4a98f78" translate="yes" xml:space="preserve">
          <source>Components::fmt</source>
          <target state="translated">Components::fmt</target>
        </trans-unit>
        <trans-unit id="183fa82f06c4776da1c08c680b0ab9d0db8926fa" translate="yes" xml:space="preserve">
          <source>Components::fold</source>
          <target state="translated">Components::fold</target>
        </trans-unit>
        <trans-unit id="c68705fbd435d36f053a6ba44de350e826272137" translate="yes" xml:space="preserve">
          <source>Components::for_each</source>
          <target state="translated">Components::for_each</target>
        </trans-unit>
        <trans-unit id="6ee30ae61d4afaa816db95807e80f70fdc7ed3a7" translate="yes" xml:space="preserve">
          <source>Components::from</source>
          <target state="translated">Components::from</target>
        </trans-unit>
        <trans-unit id="41aead4b9bbdf91c2e81ed1b6c84a8b7f7df5b85" translate="yes" xml:space="preserve">
          <source>Components::fuse</source>
          <target state="translated">Components::fuse</target>
        </trans-unit>
        <trans-unit id="2c8fbdff2c312913f4b7c3a77c06f4d17bbfac96" translate="yes" xml:space="preserve">
          <source>Components::ge</source>
          <target state="translated">Components::ge</target>
        </trans-unit>
        <trans-unit id="6b334a43dd1fb5268b9fa735d167c95980c2da21" translate="yes" xml:space="preserve">
          <source>Components::gt</source>
          <target state="translated">Components::gt</target>
        </trans-unit>
        <trans-unit id="288075248f9fb8b489e4e9317fbee596131a6d47" translate="yes" xml:space="preserve">
          <source>Components::inspect</source>
          <target state="translated">Components::inspect</target>
        </trans-unit>
        <trans-unit id="8a29750923e6dea4d7c1be32082d530cc1710815" translate="yes" xml:space="preserve">
          <source>Components::into</source>
          <target state="translated">Components::into</target>
        </trans-unit>
        <trans-unit id="a9da7f36adc129c3e90b3c2411fa2d5309d138fc" translate="yes" xml:space="preserve">
          <source>Components::into_iter</source>
          <target state="translated">Components::into_iter</target>
        </trans-unit>
        <trans-unit id="73c8435b0a2bd3141c143e33d40da935aff8e204" translate="yes" xml:space="preserve">
          <source>Components::is_sorted</source>
          <target state="translated">Components::is_sorted</target>
        </trans-unit>
        <trans-unit id="43ae216a3c414e6bf27454a9ef91ce481cde6d50" translate="yes" xml:space="preserve">
          <source>Components::is_sorted_by</source>
          <target state="translated">Components::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="65e106defb059aaae875c608336d403f638a47af" translate="yes" xml:space="preserve">
          <source>Components::is_sorted_by_key</source>
          <target state="translated">Components::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="03f2eceeae95c803b727bb3dfbf28d04c8f703c6" translate="yes" xml:space="preserve">
          <source>Components::last</source>
          <target state="translated">Components::last</target>
        </trans-unit>
        <trans-unit id="70729ba03a37d77833f61e05a7eaef54627bbef5" translate="yes" xml:space="preserve">
          <source>Components::le</source>
          <target state="translated">Components::le</target>
        </trans-unit>
        <trans-unit id="244f4578a8cef7a2b13f0d31e676c4d348fada77" translate="yes" xml:space="preserve">
          <source>Components::lt</source>
          <target state="translated">Components::lt</target>
        </trans-unit>
        <trans-unit id="a1c2cde83c159378772d0e1fa9ef03f7ac8a01d9" translate="yes" xml:space="preserve">
          <source>Components::map</source>
          <target state="translated">Components::map</target>
        </trans-unit>
        <trans-unit id="87dd67a79aa3b1cb2133c419b65227ad31914008" translate="yes" xml:space="preserve">
          <source>Components::max</source>
          <target state="translated">Components::max</target>
        </trans-unit>
        <trans-unit id="9c620f3dfffcf24523d9509a79cecc5a669bb284" translate="yes" xml:space="preserve">
          <source>Components::max_by</source>
          <target state="translated">Components::max_by</target>
        </trans-unit>
        <trans-unit id="291995e4cc7395a4d39358acbaac95d5e8b97444" translate="yes" xml:space="preserve">
          <source>Components::max_by_key</source>
          <target state="translated">Components::max_by_key</target>
        </trans-unit>
        <trans-unit id="c032506035cf409c36b233786ddd73184f8458c6" translate="yes" xml:space="preserve">
          <source>Components::min</source>
          <target state="translated">Components::min</target>
        </trans-unit>
        <trans-unit id="a45db68b1a9b55ba702a2021f182e1f775d51370" translate="yes" xml:space="preserve">
          <source>Components::min_by</source>
          <target state="translated">Components::min_by</target>
        </trans-unit>
        <trans-unit id="8861978cd508669e0ea0c9834496b319421ba499" translate="yes" xml:space="preserve">
          <source>Components::min_by_key</source>
          <target state="translated">Components::min_by_key</target>
        </trans-unit>
        <trans-unit id="abc5df1ebf986d7f26306e52deaa2c8f0b56e3b4" translate="yes" xml:space="preserve">
          <source>Components::ne</source>
          <target state="translated">Components::ne</target>
        </trans-unit>
        <trans-unit id="6454630a509433e34cca1adde54649c018a299a3" translate="yes" xml:space="preserve">
          <source>Components::next</source>
          <target state="translated">Components::next</target>
        </trans-unit>
        <trans-unit id="1ba6654b6c4348c17f1edd1079046d0b8c2078f6" translate="yes" xml:space="preserve">
          <source>Components::next_back</source>
          <target state="translated">Components::next_back</target>
        </trans-unit>
        <trans-unit id="561402de6035d3f8ce68a7204363be96eaa810db" translate="yes" xml:space="preserve">
          <source>Components::nth</source>
          <target state="translated">Components::nth</target>
        </trans-unit>
        <trans-unit id="8f860e9935110a8c98c22a0b71b06524a62dc42e" translate="yes" xml:space="preserve">
          <source>Components::nth_back</source>
          <target state="translated">Components::nth_back</target>
        </trans-unit>
        <trans-unit id="ee4126813ee633cebb2489fdf55535d664a87896" translate="yes" xml:space="preserve">
          <source>Components::partial_cmp</source>
          <target state="translated">Components::partial_cmp</target>
        </trans-unit>
        <trans-unit id="50dbf91a2c7f3d4dba3e2e9585a857b173080bed" translate="yes" xml:space="preserve">
          <source>Components::partition</source>
          <target state="translated">Components::partition</target>
        </trans-unit>
        <trans-unit id="ca764b6fdc048464d40b6b31a860c922e09d040c" translate="yes" xml:space="preserve">
          <source>Components::peekable</source>
          <target state="translated">Components::peekable</target>
        </trans-unit>
        <trans-unit id="f92522334e6aa1303bd7fa4265153c32d6af3ef2" translate="yes" xml:space="preserve">
          <source>Components::position</source>
          <target state="translated">Components::position</target>
        </trans-unit>
        <trans-unit id="531d7e2142b3291fcb2c969088d59c04ff645a07" translate="yes" xml:space="preserve">
          <source>Components::product</source>
          <target state="translated">Components::product</target>
        </trans-unit>
        <trans-unit id="89bfade78313c7c765eb215025b5fd7898b79440" translate="yes" xml:space="preserve">
          <source>Components::rev</source>
          <target state="translated">Components::rev</target>
        </trans-unit>
        <trans-unit id="c294efb216e55a5bc8540ba57543ed471f87498f" translate="yes" xml:space="preserve">
          <source>Components::rfind</source>
          <target state="translated">Components::rfind</target>
        </trans-unit>
        <trans-unit id="7bfe036c3c33d7a71550066e3858e32c43388ae7" translate="yes" xml:space="preserve">
          <source>Components::rfold</source>
          <target state="translated">Components::rfold</target>
        </trans-unit>
        <trans-unit id="fc97b61d6351ccc55464673947d8577cc28f2319" translate="yes" xml:space="preserve">
          <source>Components::rposition</source>
          <target state="translated">Components::rposition</target>
        </trans-unit>
        <trans-unit id="dccd91e2f3761950f1c6b68e7761cd09bf338a6f" translate="yes" xml:space="preserve">
          <source>Components::scan</source>
          <target state="translated">Components::scan</target>
        </trans-unit>
        <trans-unit id="b8e80e3f5aeb862d0fde85667b27f7f2fa53fdfb" translate="yes" xml:space="preserve">
          <source>Components::size_hint</source>
          <target state="translated">Components::size_hint</target>
        </trans-unit>
        <trans-unit id="bbcaf4c7bd9a4e8cffbcbc382fc8b94e05b08c82" translate="yes" xml:space="preserve">
          <source>Components::skip</source>
          <target state="translated">Components::skip</target>
        </trans-unit>
        <trans-unit id="a1056224c4ed73cabc0aaabf26cab9d9137fcb3b" translate="yes" xml:space="preserve">
          <source>Components::skip_while</source>
          <target state="translated">Components::skip_while</target>
        </trans-unit>
        <trans-unit id="6550292dae99155c54b0a805e838eee5d9f45c78" translate="yes" xml:space="preserve">
          <source>Components::step_by</source>
          <target state="translated">Components::step_by</target>
        </trans-unit>
        <trans-unit id="d923fc728f65bdbf19cd71a3db35c4d2b446f6ae" translate="yes" xml:space="preserve">
          <source>Components::sum</source>
          <target state="translated">Components::sum</target>
        </trans-unit>
        <trans-unit id="8303d2faeeae977e414959991827ec17bf80a2eb" translate="yes" xml:space="preserve">
          <source>Components::take</source>
          <target state="translated">Components::take</target>
        </trans-unit>
        <trans-unit id="fb0d4dfa9171b0c354128f2d5a4a0eef98f2b3ea" translate="yes" xml:space="preserve">
          <source>Components::take_while</source>
          <target state="translated">Components::take_while</target>
        </trans-unit>
        <trans-unit id="c4a4ffc4bab0ce7cc1300857f81afa1310ca6e11" translate="yes" xml:space="preserve">
          <source>Components::to_owned</source>
          <target state="translated">Components::to_owned</target>
        </trans-unit>
        <trans-unit id="958f7b5f41a5b8fb70a2a7b18c0c77c679f8cdd5" translate="yes" xml:space="preserve">
          <source>Components::try_fold</source>
          <target state="translated">Components::try_fold</target>
        </trans-unit>
        <trans-unit id="8b0633c2232d80674aa408db1dfa9ffd8cb44d9f" translate="yes" xml:space="preserve">
          <source>Components::try_for_each</source>
          <target state="translated">Components::try_for_each</target>
        </trans-unit>
        <trans-unit id="734c5c20a3114ff7b2fa13d5feacc2e641b1e320" translate="yes" xml:space="preserve">
          <source>Components::try_from</source>
          <target state="translated">Components::try_from</target>
        </trans-unit>
        <trans-unit id="cb93d004d6b0ff4c95869e3d3ac6d97fcd7e34e5" translate="yes" xml:space="preserve">
          <source>Components::try_into</source>
          <target state="translated">Components::try_into</target>
        </trans-unit>
        <trans-unit id="975a65326a501021d11a477a73c4f3afdb1ccc59" translate="yes" xml:space="preserve">
          <source>Components::try_rfold</source>
          <target state="translated">Components::try_rfold</target>
        </trans-unit>
        <trans-unit id="4a683a8ec294352e5920ea9fe73a0fcbb3dce58f" translate="yes" xml:space="preserve">
          <source>Components::type_id</source>
          <target state="translated">Components::type_id</target>
        </trans-unit>
        <trans-unit id="883ae0755e62cecdf96bd0a56754e24f154b15a1" translate="yes" xml:space="preserve">
          <source>Components::unzip</source>
          <target state="translated">Components::unzip</target>
        </trans-unit>
        <trans-unit id="38e289512ace04c5571a5542e02eca98b9f76332" translate="yes" xml:space="preserve">
          <source>Components::zip</source>
          <target state="translated">Components::zip</target>
        </trans-unit>
        <trans-unit id="4fffae92d600527207939238377e29371e53da6d" translate="yes" xml:space="preserve">
          <source>Composable external iteration.</source>
          <target state="translated">コンポーザブルな外部イテレーション。</target>
        </trans-unit>
        <trans-unit id="07e6a575b1b3870f33a4043326d35d3e9b81a988" translate="yes" xml:space="preserve">
          <source>Composite types such as structs, tuples, and enums are always captured entirely, not by individual fields. It may be necessary to borrow into a local variable in order to capture a single field:</source>
          <target state="translated">構造体、タプル、列挙型などの複合型は、個々のフィールドではなく、常に完全に捕捉されます。単一のフィールドをキャプチャするためには、ローカル変数に借用する必要があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="3774c28fb4b70ee739e6dad1f27327d7eab39916" translate="yes" xml:space="preserve">
          <source>Compound Types</source>
          <target state="translated">化合物の種類</target>
        </trans-unit>
        <trans-unit id="b6e73fad72711acc69173eb9cbc623d9741488e0" translate="yes" xml:space="preserve">
          <source>Compound assignment expressions</source>
          <target state="translated">複合代入式</target>
        </trans-unit>
        <trans-unit id="af98dc8844d1f4fdfe38eb121d3ae7eda47e4c17" translate="yes" xml:space="preserve">
          <source>Compound type constraint</source>
          <target state="translated">複合型制約</target>
        </trans-unit>
        <trans-unit id="94f80e1139e1fe9e58872119654a11766d332ddd" translate="yes" xml:space="preserve">
          <source>Computes &lt;code&gt;a + b&lt;/code&gt;, while saturating at numeric bounds.</source>
          <target state="translated">Computes &lt;code&gt;a + b&lt;/code&gt; , while saturating at numeric bounds.</target>
        </trans-unit>
        <trans-unit id="a89f6b65379277c261a0746dd03fd88b5c1e1177" translate="yes" xml:space="preserve">
          <source>Computes &lt;code&gt;a + b&lt;/code&gt;, while saturating at numeric bounds. The stabilized versions of this intrinsic are available on the integer primitives via the &lt;code&gt;saturating_add&lt;/code&gt; method. For example, &lt;a href=&quot;../primitive.u32#method.saturating_add&quot;&gt;&lt;code&gt;std::u32::saturating_add&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">数値範囲で飽和しながら &lt;code&gt;a + b&lt;/code&gt; 計算します。この組み込み関数の安定化バージョンは、 &lt;code&gt;saturating_add&lt;/code&gt; メソッドを介して整数プリミティブで使用できます。たとえば、&lt;a href=&quot;../primitive.u32#method.saturating_add&quot;&gt; &lt;code&gt;std::u32::saturating_add&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="82659e1822b619ab0d36509f8e484e24695b0a8e" translate="yes" xml:space="preserve">
          <source>Computes &lt;code&gt;a - b&lt;/code&gt;, while saturating at numeric bounds.</source>
          <target state="translated">Computes &lt;code&gt;a - b&lt;/code&gt; , while saturating at numeric bounds.</target>
        </trans-unit>
        <trans-unit id="7f7e58bb4e4b9a6d6669049d57c673b7288e3a7c" translate="yes" xml:space="preserve">
          <source>Computes &lt;code&gt;a - b&lt;/code&gt;, while saturating at numeric bounds. The stabilized versions of this intrinsic are available on the integer primitives via the &lt;code&gt;saturating_sub&lt;/code&gt; method. For example, &lt;a href=&quot;../primitive.u32#method.saturating_sub&quot;&gt;&lt;code&gt;std::u32::saturating_sub&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">数値範囲で飽和しながら &lt;code&gt;a - b&lt;/code&gt; 計算します。この組み込み関数の安定化バージョンは、 &lt;code&gt;saturating_sub&lt;/code&gt; メソッドを介して整数プリミティブで使用できます。たとえば、&lt;a href=&quot;../primitive.u32#method.saturating_sub&quot;&gt; &lt;code&gt;std::u32::saturating_sub&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9461d0d85aab3ff2d09c6560c106a701e47d5d3a" translate="yes" xml:space="preserve">
          <source>Computes the absolute value of &lt;code&gt;self&lt;/code&gt; without any wrapping or panicking.</source>
          <target state="translated">Computes the absolute value of &lt;code&gt;self&lt;/code&gt; without any wrapping or panicking.</target>
        </trans-unit>
        <trans-unit id="acf8746d5d3b54a607c808d5bb06730fc15f2c38" translate="yes" xml:space="preserve">
          <source>Computes the absolute value of &lt;code&gt;self&lt;/code&gt;, wrapping around at the boundary of the type.</source>
          <target state="translated">型の境界で折り返して、 &lt;code&gt;self&lt;/code&gt; の絶対値を計算します。</target>
        </trans-unit>
        <trans-unit id="0251b44995e4fdb60c40b4e2aa22557a3c6647c0" translate="yes" xml:space="preserve">
          <source>Computes the absolute value of &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; の絶対値を計算します。</target>
        </trans-unit>
        <trans-unit id="66ccba335025930fce37357b73fa66c6f09e6772" translate="yes" xml:space="preserve">
          <source>Computes the absolute value of &lt;code&gt;self&lt;/code&gt;. Returns &lt;code&gt;NAN&lt;/code&gt; if the number is &lt;code&gt;NAN&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; の絶対値を計算します。返し &lt;code&gt;NAN&lt;/code&gt; は番号がある場合 &lt;code&gt;NAN&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f5a408f0a1a4574b7ba2c7bd932818b96182eb53" translate="yes" xml:space="preserve">
          <source>Computes the arccosine of a number. Return value is in radians in the range [0, pi] or NaN if the number is outside the range [-1, 1].</source>
          <target state="translated">数値のアルコサインを計算します。返り値は、範囲 [0,pi]のラジアン単位で、数値が範囲 [-1,1]以外の場合は NaN となります。</target>
        </trans-unit>
        <trans-unit id="91c2bf2af626555a95ebc33ffe39f3f0583767ab" translate="yes" xml:space="preserve">
          <source>Computes the arcsine of a number. Return value is in radians in the range [-pi/2, pi/2] or NaN if the number is outside the range [-1, 1].</source>
          <target state="translated">数値のアークサインを計算します。返り値は、範囲[-pi/2,pi/2]のラジアン単位で、数値が範囲[-1,1]以外の場合はNaNとなります。</target>
        </trans-unit>
        <trans-unit id="ed3858932e655106d0cfec2829b7bdb1a4888823" translate="yes" xml:space="preserve">
          <source>Computes the arctangent of a number. Return value is in radians in the range [-pi/2, pi/2];</source>
          <target state="translated">数値の八角を計算します。返り値は、[-pi/2,pi/2]の範囲内のラジアン単位です。</target>
        </trans-unit>
        <trans-unit id="0a1e1f503ab054085036ed9ab1dc062b32aa2224" translate="yes" xml:space="preserve">
          <source>Computes the cosine of a number (in radians).</source>
          <target state="translated">数値の余弦を計算します(ラジアン単位)。</target>
        </trans-unit>
        <trans-unit id="7f4b16fdd7e0a2c96b7a9652b79710d973ba0f3f" translate="yes" xml:space="preserve">
          <source>Computes the four quadrant arctangent of &lt;code&gt;self&lt;/code&gt; (&lt;code&gt;y&lt;/code&gt;) and &lt;code&gt;other&lt;/code&gt; (&lt;code&gt;x&lt;/code&gt;) in radians.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; （ &lt;code&gt;y&lt;/code&gt; ）および &lt;code&gt;other&lt;/code&gt; （ &lt;code&gt;x&lt;/code&gt; ）の4象限逆正接をラジアンで計算します。</target>
        </trans-unit>
        <trans-unit id="f16ccd1d838da1ae131f5d048e68d0c329c1a8e8" translate="yes" xml:space="preserve">
          <source>Computes the offset that needs to be applied to the pointer in order to make it aligned to &lt;code&gt;align&lt;/code&gt;.</source>
          <target state="translated">ポインターを &lt;code&gt;align&lt;/code&gt; に合わせるためにポインターに適用する必要があるオフセットを計算します。</target>
        </trans-unit>
        <trans-unit id="4ec6eaf8725ddeacf9bde02cc59415f9aedf573e" translate="yes" xml:space="preserve">
          <source>Computes the sine of a number (in radians).</source>
          <target state="translated">数値の正弦を計算します(ラジアン単位)。</target>
        </trans-unit>
        <trans-unit id="96dae7eed87d81794c13e2adaf893f175e57d3c7" translate="yes" xml:space="preserve">
          <source>Computes the tangent of a number (in radians).</source>
          <target state="translated">数値の正接(ラジアン単位)を計算します。</target>
        </trans-unit>
        <trans-unit id="4ad4932f3b600ba631f62ff0d86b9d96c6d80cd0" translate="yes" xml:space="preserve">
          <source>Computing the Size of a Non-Recursive Type</source>
          <target state="translated">非再帰型のサイズの計算</target>
        </trans-unit>
        <trans-unit id="6ad79ab6353b1eee8ebbc085e10d17c4fcfb024f" translate="yes" xml:space="preserve">
          <source>Concat</source>
          <target state="translated">Concat</target>
        </trans-unit>
        <trans-unit id="902f3e36965da1871fe5613c691a65ec7f6ea6a6" translate="yes" xml:space="preserve">
          <source>Concatenates identifiers into one identifier.</source>
          <target state="translated">識別子を一つの識別子に連結します。</target>
        </trans-unit>
        <trans-unit id="ac6d68bbf370c6092da7947e8a0dd6b3e372788b" translate="yes" xml:space="preserve">
          <source>Concatenates literals into a static string slice.</source>
          <target state="translated">リテラルを静的な文字列スライスに連結します。</target>
        </trans-unit>
        <trans-unit id="ca12a73c10061839abe2e19743effa24a414d39d" translate="yes" xml:space="preserve">
          <source>Concatenating &lt;code&gt;&amp;amp;str&lt;/code&gt; slices can be done by converting the first to a &lt;code&gt;String&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&amp;amp;str&lt;/code&gt; スライスを連結するには、最初のスライスを &lt;code&gt;String&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="7aaf0fb77c9eeb7820bdd221bce9b77b7606f0be" translate="yes" xml:space="preserve">
          <source>Concatenating two &lt;code&gt;String&lt;/code&gt;s takes the first by value and borrows the second:</source>
          <target state="translated">2つの &lt;code&gt;String&lt;/code&gt; を連結すると、最初の値で値を取得し、2番目の値を借用します。</target>
        </trans-unit>
        <trans-unit id="b62f1b9d3f8608475ca23903c647ec5966f12867" translate="yes" xml:space="preserve">
          <source>Concatenation with the &lt;code id=&quot;concatenation-with-the--operator-or-the-format-macro&quot;&gt;+&lt;/code&gt; Operator or the &lt;code&gt;format!&lt;/code&gt; Macro</source>
          <target state="translated">&lt;code id=&quot;concatenation-with-the--operator-or-the-format-macro&quot;&gt;+&lt;/code&gt; 演算子または &lt;code&gt;format!&lt;/code&gt; との連結！大きい</target>
        </trans-unit>
        <trans-unit id="64e8b901f8f990689db05be78a1fa78d80f7d2af" translate="yes" xml:space="preserve">
          <source>Conceptually, a Rust program is a series of operations which will be executed on a computer. The timeline of events happening in the program is consistent with the order of the operations in the code.</source>
          <target state="translated">概念的には、Rust プログラムはコンピュータ上で実行される一連の操作です。プログラム内で発生するイベントのタイムラインは、コード内の操作の順序と一致しています。</target>
        </trans-unit>
        <trans-unit id="1b7a26821bd821da287ecf654ce0b7aabe46c528" translate="yes" xml:space="preserve">
          <source>Conceptually, each &lt;a href=&quot;struct.thread&quot;&gt;&lt;code&gt;Thread&lt;/code&gt;&lt;/a&gt; handle has an associated token, which is initially not present:</source>
          <target state="translated">概念的には、各&lt;a href=&quot;struct.thread&quot;&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;/a&gt;ハンドルには関連付けられたトークンがあり、最初は存在しません。</target>
        </trans-unit>
        <trans-unit id="355198cc92f28d6060ca624e1d25e65d8a0f6a22" translate="yes" xml:space="preserve">
          <source>Concise Control Flow with &lt;code id=&quot;concise-control-flow-with-if-let&quot;&gt;if let&lt;/code&gt;</source>
          <target state="translated">&lt;code id=&quot;concise-control-flow-with-if-let&quot;&gt;if let&lt;/code&gt; を使用した簡潔な制御フロー</target>
        </trans-unit>
        <trans-unit id="f42607cf7925a575da4b1297e9d062feb4ad7af5" translate="yes" xml:space="preserve">
          <source>Condition variables represent the ability to block a thread such that it consumes no CPU time while waiting for an event to occur. Condition variables are typically associated with a boolean predicate (a condition) and a mutex. The predicate is always verified inside of the mutex before determining that a thread must block.</source>
          <target state="translated">条件変数は、イベントの発生を待つ間、CPU 時間を消費しないようにスレッドをブロックする能力を表します。条件変数は通常、ブーリアン述語(条件)とミューテックスに関連付けられています。述語は、スレッドがブロックしなければならないことを決定する前に、常にミューテックスの内部で検証されます。</target>
        </trans-unit>
        <trans-unit id="eadeab74abb49f9fb0cfa5aa2df8fc5cc7b20ee9" translate="yes" xml:space="preserve">
          <source>Conditional &lt;code id=&quot;conditional-if-let-expressions&quot;&gt;if let&lt;/code&gt; Expressions</source>
          <target state="translated">条件付きの &lt;code id=&quot;conditional-if-let-expressions&quot;&gt;if let&lt;/code&gt; 式</target>
        </trans-unit>
        <trans-unit id="f7c70e19b2af6576ce0c4fbf2e247289b6c60c57" translate="yes" xml:space="preserve">
          <source>Conditional Loops with &lt;code id=&quot;conditional-loops-with-while&quot;&gt;while&lt;/code&gt;</source>
          <target state="translated">&lt;code id=&quot;conditional-loops-with-while&quot;&gt;while&lt;/code&gt; を使用した条件付きループ</target>
        </trans-unit>
        <trans-unit id="61fb1fb5259174d8968cdd64b4b930f65a905d82" translate="yes" xml:space="preserve">
          <source>Conditional compilation</source>
          <target state="translated">条件付きコンパイル</target>
        </trans-unit>
        <trans-unit id="4bc2d7d876ad8d8778734f398982e7dac72f351b" translate="yes" xml:space="preserve">
          <source>Condvar</source>
          <target state="translated">Condvar</target>
        </trans-unit>
        <trans-unit id="ebb596330efb463bbc904201dc24699ce2058014" translate="yes" xml:space="preserve">
          <source>Condvar::borrow</source>
          <target state="translated">Condvar::borrow</target>
        </trans-unit>
        <trans-unit id="3456e2133a8de400a0050482ac00739f1177aa75" translate="yes" xml:space="preserve">
          <source>Condvar::borrow_mut</source>
          <target state="translated">Condvar::borrow_mut</target>
        </trans-unit>
        <trans-unit id="703db73d89f21c70babdff3f26643ad53c091474" translate="yes" xml:space="preserve">
          <source>Condvar::default</source>
          <target state="translated">Condvar::default</target>
        </trans-unit>
        <trans-unit id="4b82e85a3c4c3712ec8e3c99133b70e7757f7e76" translate="yes" xml:space="preserve">
          <source>Condvar::drop</source>
          <target state="translated">Condvar::drop</target>
        </trans-unit>
        <trans-unit id="b02419edd97934b72dffb3d621a24390a3c8aba0" translate="yes" xml:space="preserve">
          <source>Condvar::fmt</source>
          <target state="translated">Condvar::fmt</target>
        </trans-unit>
        <trans-unit id="79de189314563b6814aad8ae5781ca6ef2098563" translate="yes" xml:space="preserve">
          <source>Condvar::from</source>
          <target state="translated">Condvar::from</target>
        </trans-unit>
        <trans-unit id="5cdca6f78aa38de5fb8c7115117f304cb6fdbe8b" translate="yes" xml:space="preserve">
          <source>Condvar::into</source>
          <target state="translated">Condvar::into</target>
        </trans-unit>
        <trans-unit id="531734c68a43d0c81412f371f0f07c73b987d636" translate="yes" xml:space="preserve">
          <source>Condvar::new</source>
          <target state="translated">Condvar::new</target>
        </trans-unit>
        <trans-unit id="3ce653eda554426c6614557b5a9a1ed1c6c72193" translate="yes" xml:space="preserve">
          <source>Condvar::notify_all</source>
          <target state="translated">Condvar::notify_all</target>
        </trans-unit>
        <trans-unit id="300f227f80eb1261365c266a07ae5b2be80699bd" translate="yes" xml:space="preserve">
          <source>Condvar::notify_one</source>
          <target state="translated">Condvar::notify_one</target>
        </trans-unit>
        <trans-unit id="81909a066610e6114b86056f08b247482e6dec97" translate="yes" xml:space="preserve">
          <source>Condvar::try_from</source>
          <target state="translated">Condvar::try_from</target>
        </trans-unit>
        <trans-unit id="2d2a37324b4ae07f19455627d310073cf9d48d1b" translate="yes" xml:space="preserve">
          <source>Condvar::try_into</source>
          <target state="translated">Condvar::try_into</target>
        </trans-unit>
        <trans-unit id="b57e5a653e2b857da25a79190593d39ab7d7b927" translate="yes" xml:space="preserve">
          <source>Condvar::type_id</source>
          <target state="translated">Condvar::type_id</target>
        </trans-unit>
        <trans-unit id="67cebc4ad7542883ba92953b6079f20a8e69ff90" translate="yes" xml:space="preserve">
          <source>Condvar::wait</source>
          <target state="translated">Condvar::wait</target>
        </trans-unit>
        <trans-unit id="333f8325b23c28be481615c1a7cd5f718ea0e0be" translate="yes" xml:space="preserve">
          <source>Condvar::wait_timeout</source>
          <target state="translated">Condvar::wait_timeout</target>
        </trans-unit>
        <trans-unit id="b220a07b2b1695f2ae2503ed8df050c2691d2c13" translate="yes" xml:space="preserve">
          <source>Condvar::wait_timeout_ms</source>
          <target state="translated">Condvar::wait_timeout_ms</target>
        </trans-unit>
        <trans-unit id="795dbf84408700fee7d74a33c2c1f8a348d9a556" translate="yes" xml:space="preserve">
          <source>Condvar::wait_timeout_until</source>
          <target state="translated">Condvar::wait_timeout_until</target>
        </trans-unit>
        <trans-unit id="7d192f36b14cf14c1d125e13961f6009b2f8f09c" translate="yes" xml:space="preserve">
          <source>Condvar::wait_until</source>
          <target state="translated">Condvar::wait_until</target>
        </trans-unit>
        <trans-unit id="a971272e04cff57df167e0610ae5ee18bdb672a1" translate="yes" xml:space="preserve">
          <source>Configuration for formatting.</source>
          <target state="translated">フォーマットの設定。</target>
        </trans-unit>
        <trans-unit id="464982369c3b593d05aae07167d81a809e7302fb" translate="yes" xml:space="preserve">
          <source>Configuration for the child process's standard error (stderr) handle.</source>
          <target state="translated">子プロセスの標準エラー(標準エラー)ハンドルの設定。</target>
        </trans-unit>
        <trans-unit id="02a6ce7e3589917b47002cdb4906433818d3ceb1" translate="yes" xml:space="preserve">
          <source>Configuration for the child process's standard input (stdin) handle.</source>
          <target state="translated">子プロセスの標準入力(標準入力)ハンドルの設定。</target>
        </trans-unit>
        <trans-unit id="f3238adef1c9732acd14a4b56e8ad086c548e7be" translate="yes" xml:space="preserve">
          <source>Configuration for the child process's standard output (stdout) handle.</source>
          <target state="translated">子プロセスの標準出力(stdout)ハンドルの設定。</target>
        </trans-unit>
        <trans-unit id="435a4df2eac9a9f626373817357ced600a83be3d" translate="yes" xml:space="preserve">
          <source>Configuring threads</source>
          <target state="translated">スレッドの設定</target>
        </trans-unit>
        <trans-unit id="d99391de7d68b75152ec5cbcd49a3d60bd59e50b" translate="yes" xml:space="preserve">
          <source>Conflicting representation hints have been used on a same item.</source>
          <target state="translated">同一項目に矛盾する表現のヒントが使用されています。</target>
        </trans-unit>
        <trans-unit id="597d4cd93e4607ee5500d2a81b41715192bb7cc5" translate="yes" xml:space="preserve">
          <source>Congrats! We&amp;rsquo;ve now completed our project; we have a basic web server that uses a thread pool to respond asynchronously. We&amp;rsquo;re able to perform a graceful shutdown of the server, which cleans up all the threads in the pool.</source>
          <target state="translated">おめでとうございます！これでプロジェクトが完了しました。スレッドプールを使用して非同期に応答する基本的なWebサーバーがあります。サーバーの正常なシャットダウンを実行して、プール内のすべてのスレッドをクリーンアップすることができます。</target>
        </trans-unit>
        <trans-unit id="4e93301a9ac3f7b47be69585fee1cd3c97d92dd0" translate="yes" xml:space="preserve">
          <source>Congratulations! You&amp;rsquo;ve now shared your code with the Rust community, and anyone can easily add your crate as a dependency of their project.</source>
          <target state="translated">おめでとう！これでコードがRustコミュニティと共有されました。誰でも簡単にプロジェクトの依存関係としてクレートを追加できます。</target>
        </trans-unit>
        <trans-unit id="e7b69083eabd917958b49b5d5bfe1605994d186b" translate="yes" xml:space="preserve">
          <source>Connects the socket to the specified address.</source>
          <target state="translated">指定したアドレスにソケットを接続します。</target>
        </trans-unit>
        <trans-unit id="262dd9c2e86aaefcc64387c27a337bba63325b19" translate="yes" xml:space="preserve">
          <source>Connects this UDP socket to a remote address, allowing the &lt;code&gt;send&lt;/code&gt; and &lt;code&gt;recv&lt;/code&gt; syscalls to be used to send data and also applies filters to only receive data from the specified address.</source>
          <target state="translated">このUDPソケットをリモートアドレスに接続し、 &lt;code&gt;send&lt;/code&gt; と &lt;code&gt;recv&lt;/code&gt; 許可します syscallsを使用してデータを送信できるようにします。また、フィルターを適用して、指定したアドレスからのデータのみを受信します。</target>
        </trans-unit>
        <trans-unit id="187080a053da577132e2b2225b71372f297cbead" translate="yes" xml:space="preserve">
          <source>Connects to the socket named by &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; で指定されたソケットに接続します。</target>
        </trans-unit>
        <trans-unit id="eb482955ea4bf15b12baba0b341098b8457dc575" translate="yes" xml:space="preserve">
          <source>Consequently, all reads of union fields have to be placed in &lt;code&gt;unsafe&lt;/code&gt; blocks:</source>
          <target state="translated">したがって、共用体フィールドのすべての読み取りは、 &lt;code&gt;unsafe&lt;/code&gt; でないブロックに配置する必要があります。</target>
        </trans-unit>
        <trans-unit id="0a5c326911f613fb2189df503096b1c1b064ac75" translate="yes" xml:space="preserve">
          <source>Consequently, comparing two &lt;code&gt;SystemTime&lt;/code&gt; instances to learn about the duration between them returns a &lt;a href=&quot;../result/enum.result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt; instead of an infallible &lt;a href=&quot;struct.duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt; to indicate that this sort of time drift may happen and needs to be handled.</source>
          <target state="translated">その結果、2つの &lt;code&gt;SystemTime&lt;/code&gt; インスタンスを比較して、それらの間の期間について学習すると、この種の時間ドリフトが発生する可能性があり、処理する必要があることを示すために、完全な&lt;a href=&quot;struct.duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; &lt;/a&gt;ではなく&lt;a href=&quot;../result/enum.result&quot;&gt; &lt;code&gt;Result&lt;/code&gt; &lt;/a&gt;が返されます。</target>
        </trans-unit>
        <trans-unit id="4420996d4f779166674b6502738ccdcd4191a6d4" translate="yes" xml:space="preserve">
          <source>Consider a scenario where a set of &lt;code&gt;Gadget&lt;/code&gt;s are owned by a given &lt;code&gt;Owner&lt;/code&gt;. We want to have our &lt;code&gt;Gadget&lt;/code&gt;s point to their &lt;code&gt;Owner&lt;/code&gt;. We can't do this with unique ownership, because more than one gadget may belong to the same &lt;code&gt;Owner&lt;/code&gt;. &lt;a href=&quot;struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt; allows us to share an &lt;code&gt;Owner&lt;/code&gt; between multiple &lt;code&gt;Gadget&lt;/code&gt;s, and have the &lt;code&gt;Owner&lt;/code&gt; remain allocated as long as any &lt;code&gt;Gadget&lt;/code&gt; points at it.</source>
          <target state="translated">&lt;code&gt;Gadget&lt;/code&gt; のセットが特定の &lt;code&gt;Owner&lt;/code&gt; によって所有されているシナリオを考えます。 &lt;code&gt;Gadget&lt;/code&gt; の &lt;code&gt;Owner&lt;/code&gt; 指すようにしたい。複数のガジェットが同じ &lt;code&gt;Owner&lt;/code&gt; 属している可能性があるため、これを一意の所有権で行うことはできません。&lt;a href=&quot;struct.rc&quot;&gt; &lt;code&gt;Rc&lt;/code&gt; を&lt;/a&gt;使用すると、複数の &lt;code&gt;Gadget&lt;/code&gt; 間で &lt;code&gt;Owner&lt;/code&gt; を共有し、 &lt;code&gt;Gadget&lt;/code&gt; ポイントしている限り、 &lt;code&gt;Owner&lt;/code&gt; 割り当てたままにすることができます。</target>
        </trans-unit>
        <trans-unit id="b37bc9ff921a5ebfec71ee75629752ce66bba2e7" translate="yes" xml:space="preserve">
          <source>Consider a short program that finds the largest number in a list, as shown in Listing 10-1.</source>
          <target state="translated">リスト10-1で示されるように、リストの中で最大の数字を見つける短いプログラムを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="5502e044698c893fadbf6c12f793bc6e7f1785f1" translate="yes" xml:space="preserve">
          <source>Consider a situation where we want to log out a value passed to a function. We know the value we're working on implements Debug, but we don't know its concrete type. We want to give special treatment to certain types: in this case printing out the length of String values prior to their value. We don't know the concrete type of our value at compile time, so we need to use runtime reflection instead.</source>
          <target state="translated">関数に渡された値をログアウトしたい場合を考えてみましょう。処理している値が Debug を実装していることはわかっていますが、その具体的な型がわかりません。この場合、String の値の長さを値の前に出力するなど、特定の型を特別に扱いたいと考えています。コンパイル時に値の具体的な型がわからないので、代わりにランタイムリフレクションを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="9aa350752c34f8b663fd904a3fee5fefd0cc3107" translate="yes" xml:space="preserve">
          <source>Consider borrowing the element instead of moving it:</source>
          <target state="translated">要素を動かすのではなく、借りることを検討してみてください。</target>
        </trans-unit>
        <trans-unit id="1556b176e902dc18eaa1d190d6da4b26b7821e31" translate="yes" xml:space="preserve">
          <source>Consider changing your trait bounds so that they're less self-referential.</source>
          <target state="translated">自己言及が少なくなるように形質の境界線を変えることを考えてみてください。</target>
        </trans-unit>
        <trans-unit id="7f04ee31ec109088ed4c3eb772c01df71bd4003f" translate="yes" xml:space="preserve">
          <source>Consider one more example:</source>
          <target state="translated">もう一つ例を考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="e956fe9306fc493f3e4c34d99df95cbf01639351" translate="yes" xml:space="preserve">
          <source>Consider removing the bound from the method or adding the bound to the original method definition in the trait.</source>
          <target state="translated">メソッドからバウンドを削除するか、形質の元のメソッド定義にバウンドを追加することを検討してください。</target>
        </trans-unit>
        <trans-unit id="95d7f452fb8481b74e2599720c552293f3fa7b94" translate="yes" xml:space="preserve">
          <source>Consider removing the over-aligned zero-sized field:</source>
          <target state="translated">オーバーアラインメントされたゼロサイズのフィールドを削除することを検討してください。</target>
        </trans-unit>
        <trans-unit id="6ebeba6b1fc29902cbf5fdc76023ed4663763d6c" translate="yes" xml:space="preserve">
          <source>Consider returning an owned value instead:</source>
          <target state="translated">代わりに所有する値を返すことを検討してください。</target>
        </trans-unit>
        <trans-unit id="16ce9a330f1cc6053c52b1127a81762cec676caa" translate="yes" xml:space="preserve">
          <source>Consider the &lt;a href=&quot;../io/trait.write#method.write_all&quot;&gt;&lt;code&gt;write_all&lt;/code&gt;&lt;/a&gt; method defined for I/O types by the &lt;a href=&quot;../io/trait.write&quot;&gt;&lt;code&gt;Write&lt;/code&gt;&lt;/a&gt; trait:</source>
          <target state="translated">&lt;a href=&quot;../io/trait.write&quot;&gt; &lt;code&gt;Write&lt;/code&gt; &lt;/a&gt;トレイトによってI / Oタイプ用に定義された&lt;a href=&quot;../io/trait.write#method.write_all&quot;&gt; &lt;code&gt;write_all&lt;/code&gt; &lt;/a&gt;メソッドを考えます。</target>
        </trans-unit>
        <trans-unit id="32353c947ac1e42af0d025539a315feba778df10" translate="yes" xml:space="preserve">
          <source>Consider the code in Listing 7-8 that models the situation in which a chef fixes an incorrect order and personally brings it out to the customer. The function &lt;code&gt;fix_incorrect_order&lt;/code&gt; calls the function &lt;code&gt;serve_order&lt;/code&gt; by specifying the path to &lt;code&gt;serve_order&lt;/code&gt; starting with &lt;code&gt;super&lt;/code&gt;:</source>
          <target state="translated">シェフが誤った注文を修正し、個人的にそれを顧客に提供する状況をモデル化したリスト7-8のコードを検討してください。関数 &lt;code&gt;fix_incorrect_order&lt;/code&gt; は、関数呼び出し &lt;code&gt;serve_order&lt;/code&gt; をへのパスを指定することによって &lt;code&gt;serve_order&lt;/code&gt; で始まる &lt;code&gt;super&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c59b0b97c5709e22874678874d0c91be3c53dbe0" translate="yes" xml:space="preserve">
          <source>Consider the following code, operating on some global static variables:</source>
          <target state="translated">いくつかのグローバルな静的変数を操作する次のコードを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="22b5cb83bd072c321e13f6fdd6379ee541a2e00a" translate="yes" xml:space="preserve">
          <source>Consider the following erroneous definition of a type for a list of bytes:</source>
          <target state="translated">バイトのリストに対する型の以下の誤った定義を考えてみてください。</target>
        </trans-unit>
        <trans-unit id="b8a97f7a98cb75fd7d334b13776628f2bc8a7c3d" translate="yes" xml:space="preserve">
          <source>Consider the following example of a &lt;code&gt;Container&lt;/code&gt; trait. Notice that the type is available for use in the method signatures:</source>
          <target state="translated">次の &lt;code&gt;Container&lt;/code&gt; トレイトの例を考えてみましょう。タイプはメソッドシグネチャで使用できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="10581a7e2d33e396762022aa6feee69fa03ade4c" translate="yes" xml:space="preserve">
          <source>Consider the following example: string literals always have &lt;code&gt;'static&lt;/code&gt; lifetime. Nevertheless, we can assign &lt;code&gt;s&lt;/code&gt; to &lt;code&gt;t&lt;/code&gt;:</source>
          <target state="translated">次の例を考えてみます。文字列リテラルには常に &lt;code&gt;'static&lt;/code&gt; 存続期間」があります。それでも、 &lt;code&gt;s&lt;/code&gt; を &lt;code&gt;t&lt;/code&gt; に割り当てることができます。</target>
        </trans-unit>
        <trans-unit id="af65275062494807392113d1b35086b1f423bc7c" translate="yes" xml:space="preserve">
          <source>Consider this hypothetical situation: we work at a startup that&amp;rsquo;s making an app to generate custom exercise workout plans. The backend is written in Rust, and the algorithm that generates the workout plan takes into account many factors, such as the app user&amp;rsquo;s age, body mass index, exercise preferences, recent workouts, and an intensity number they specify. The actual algorithm used isn&amp;rsquo;t important in this example; what&amp;rsquo;s important is that this calculation takes a few seconds. We want to call this algorithm only when we need to and only call it once so we don&amp;rsquo;t make the user wait more than necessary.</source>
          <target state="translated">この架空の状況を考えてみましょう。私たちは、カスタムのエクササイズトレーニングプランを生成するアプリを作成しているスタートアップで働いています。バックエンドはRustで記述されており、ワークアウトプランを生成するアルゴリズムは、アプリユーザーの年齢、ボディマスインデックス、運動の好み、最近のワークアウト、それらが指定する強度の数値など、多くの要因を考慮に入れます。この例では、実際に使用されるアルゴリズムは重要ではありません。重要なのは、この計算に数秒かかることです。このアルゴリズムは、必要なときにだけ呼び出し、1回だけ呼び出して、ユーザーが必要以上に待機しないようにします。</target>
        </trans-unit>
        <trans-unit id="eb2a9f0a36f77f94b8da8c570d432d3c27e56af4" translate="yes" xml:space="preserve">
          <source>Consider using &lt;a href=&quot;#method.wrapping_add&quot;&gt;&lt;code&gt;wrapping_add&lt;/code&gt;&lt;/a&gt; instead if these constraints are difficult to satisfy. The only advantage of this method is that it enables more aggressive compiler optimizations.</source>
          <target state="translated">Consider using &lt;a href=&quot;#method.wrapping_add&quot;&gt; &lt;code&gt;wrapping_add&lt;/code&gt; &lt;/a&gt; instead if these constraints are difficult to satisfy. The only advantage of this method is that it enables more aggressive compiler optimizations.</target>
        </trans-unit>
        <trans-unit id="3ed5a3c1f84515de3a5dc404773a7ed09f853eaf" translate="yes" xml:space="preserve">
          <source>Consider using &lt;a href=&quot;#method.wrapping_offset&quot;&gt;&lt;code&gt;wrapping_offset&lt;/code&gt;&lt;/a&gt; instead if these constraints are difficult to satisfy. The only advantage of this method is that it enables more aggressive compiler optimizations.</source>
          <target state="translated">Consider using &lt;a href=&quot;#method.wrapping_offset&quot;&gt; &lt;code&gt;wrapping_offset&lt;/code&gt; &lt;/a&gt; instead if these constraints are difficult to satisfy. The only advantage of this method is that it enables more aggressive compiler optimizations.</target>
        </trans-unit>
        <trans-unit id="aef37cd983a7a1e16ef6144edf7d6d4be389c202" translate="yes" xml:space="preserve">
          <source>Consider using &lt;a href=&quot;#method.wrapping_offset_from&quot;&gt;&lt;code&gt;wrapping_offset_from&lt;/code&gt;&lt;/a&gt; instead if these constraints are difficult to satisfy. The only advantage of this method is that it enables more aggressive compiler optimizations.</source>
          <target state="translated">&lt;a href=&quot;#method.wrapping_offset_from&quot;&gt; &lt;code&gt;wrapping_offset_from&lt;/code&gt; の&lt;/a&gt;使用を検討してくださいこれらの制約を満たすのが難しい場合は、代わりに。この方法の唯一の利点は、より積極的なコンパイラの最適化を可能にすることです。</target>
        </trans-unit>
        <trans-unit id="a08d2f909e3471cb46b8a263e7a79e40988f96a3" translate="yes" xml:space="preserve">
          <source>Consider using &lt;a href=&quot;#method.wrapping_offset_from-1&quot;&gt;&lt;code&gt;wrapping_offset_from&lt;/code&gt;&lt;/a&gt; instead if these constraints are difficult to satisfy. The only advantage of this method is that it enables more aggressive compiler optimizations.</source>
          <target state="translated">&lt;a href=&quot;#method.wrapping_offset_from-1&quot;&gt; &lt;code&gt;wrapping_offset_from&lt;/code&gt; の&lt;/a&gt;使用を検討してくださいこれらの制約を満たすのが難しい場合は、代わりに。この方法の唯一の利点は、より積極的なコンパイラの最適化を可能にすることです。</target>
        </trans-unit>
        <trans-unit id="65d198018283c93c0267e587cca86d0d7357db30" translate="yes" xml:space="preserve">
          <source>Consider using &lt;a href=&quot;#method.wrapping_sub&quot;&gt;&lt;code&gt;wrapping_sub&lt;/code&gt;&lt;/a&gt; instead if these constraints are difficult to satisfy. The only advantage of this method is that it enables more aggressive compiler optimizations.</source>
          <target state="translated">Consider using &lt;a href=&quot;#method.wrapping_sub&quot;&gt; &lt;code&gt;wrapping_sub&lt;/code&gt; &lt;/a&gt; instead if these constraints are difficult to satisfy. The only advantage of this method is that it enables more aggressive compiler optimizations.</target>
        </trans-unit>
        <trans-unit id="160a4dc0a74bf8bcda53cd9d5abf7dfc33222544" translate="yes" xml:space="preserve">
          <source>Consider using &lt;a href=&quot;../panic/struct.location#method.caller&quot;&gt;&lt;code&gt;core::panic::Location::caller&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">代わりに&lt;a href=&quot;../panic/struct.location#method.caller&quot;&gt; &lt;code&gt;core::panic::Location::caller&lt;/code&gt; &lt;/a&gt;使用を検討してください。</target>
        </trans-unit>
        <trans-unit id="9b58c27d06e5f1986ad262fff1b7389d609781af" translate="yes" xml:space="preserve">
          <source>Consider using &lt;code&gt;wrapping_offset&lt;/code&gt; instead if these constraints are difficult to satisfy. The only advantage of this method is that it enables more aggressive compiler optimizations.</source>
          <target state="translated">&lt;code&gt;wrapping_offset&lt;/code&gt; の使用を検討してくださいこれらの制約を満たすのが難しい場合は、代わりに。この方法の唯一の利点は、より積極的なコンパイラの最適化を可能にすることです。</target>
        </trans-unit>
        <trans-unit id="660c7402d5b39240c9ee5b94d156a17dab59cd5a" translate="yes" xml:space="preserve">
          <source>Consider using the &lt;a href=&quot;#method.reserve&quot;&gt;&lt;code&gt;reserve&lt;/code&gt;&lt;/a&gt; method unless you absolutely know better than the allocator.</source>
          <target state="translated">アロケータよりも完全に理解しているのでない限り、&lt;a href=&quot;#method.reserve&quot;&gt; &lt;code&gt;reserve&lt;/code&gt; &lt;/a&gt;メソッドの使用を検討してください。</target>
        </trans-unit>
        <trans-unit id="fe8273b7e7cc7bc905bf73cc0b6d0980b0367132" translate="yes" xml:space="preserve">
          <source>Consider using the &lt;a href=&quot;struct.string#method.reserve&quot;&gt;&lt;code&gt;reserve&lt;/code&gt;&lt;/a&gt; method unless you absolutely know better than the allocator.</source>
          <target state="translated">Consider using the &lt;a href=&quot;struct.string#method.reserve&quot;&gt; &lt;code&gt;reserve&lt;/code&gt; &lt;/a&gt; method unless you absolutely know better than the allocator.</target>
        </trans-unit>
        <trans-unit id="233e097389613b78d12bf53df64bf865c5c33932" translate="yes" xml:space="preserve">
          <source>Considering that this would be a long explanation, we instead recommend you take a look at the &lt;a href=&quot;https://doc.rust-lang.org/stable/unstable-book/library-features/llvm-asm.html&quot;&gt;&lt;code&gt;llvm_asm&lt;/code&gt;&lt;/a&gt; chapter of the Unstable book:</source>
          <target state="translated">これは長い説明になることを考慮して、代わりにUnstable本の&lt;a href=&quot;https://doc.rust-lang.org/stable/unstable-book/library-features/llvm-asm.html&quot;&gt; &lt;code&gt;llvm_asm&lt;/code&gt; の&lt;/a&gt;章を参照することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="d37f53c75fe6e4ec1ab1b84dc3a54c790b0951e8" translate="yes" xml:space="preserve">
          <source>Considering that this would be a long explanation, we instead recommend you take a look at the [&lt;code&gt;llvm_asm&lt;/code&gt;] chapter of the Unstable book:</source>
          <target state="translated">Considering that this would be a long explanation, we instead recommend you take a look at the [ &lt;code&gt;llvm_asm&lt;/code&gt; ] chapter of the Unstable book:</target>
        </trans-unit>
        <trans-unit id="d838b82b17961bfee7f71761e1fd256b67208735" translate="yes" xml:space="preserve">
          <source>Const Functions</source>
          <target state="translated">コンスクト関数</target>
        </trans-unit>
        <trans-unit id="ed5f0c3cd562db1b4fd164b24577eb8734b5fffb" translate="yes" xml:space="preserve">
          <source>Const context</source>
          <target state="translated">コンスクトコンテキスト</target>
        </trans-unit>
        <trans-unit id="fe5251cbe2e5db401d2fb8f972d0d353e63508e2" translate="yes" xml:space="preserve">
          <source>Const functions</source>
          <target state="translated">コンスクト関数</target>
        </trans-unit>
        <trans-unit id="cd6d1befcab0193321d9a8f3edb9f3035f40a481" translate="yes" xml:space="preserve">
          <source>Const functions have various restrictions to make sure that they can be evaluated at compile-time. It is, for example, not possible to write a random number generator as a const function. Calling a const function at compile-time will always yield the same result as calling it at runtime, even when called multiple times. There's one exception to this rule: if you are doing complex floating point operations in extreme situations, then you might get (very slightly) different results. It is advisable to not make array lengths and enum discriminants depend on floating point computations.</source>
          <target state="translated">const関数には、コンパイル時に評価できるようにするための様々な制約があります。例えば、乱数発生器をconst関数として書くことはできません。コンパイル時にconst関数を呼び出すと、複数回呼び出された場合でも、実行時に呼び出すのと同じ結果が常に得られます。この規則には1つの例外があります:極端な状況で複雑な浮動小数点演算を行っている場合、(非常にわずかに)異なる結果が得られるかもしれません。配列の長さや列挙型判別器を浮動小数点演算に依存させないようにすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="0f200028183cbf172a5fb978b74ba682ab57b271" translate="yes" xml:space="preserve">
          <source>Const intrinsics</source>
          <target state="translated">コンストの本質</target>
        </trans-unit>
        <trans-unit id="4f010fe7613d402114b33648d674fa1ee1f8ed10" translate="yes" xml:space="preserve">
          <source>Const parameters cannot depend on type parameters. The following is therefore invalid:</source>
          <target state="translated">Constパラメータは型パラメータに依存することはできません。そのため、以下は無効です。</target>
        </trans-unit>
        <trans-unit id="e58d8b6f4812bf1c50839e8e7a477e7a94ce8524" translate="yes" xml:space="preserve">
          <source>Constant evaluation</source>
          <target state="translated">一定の評価</target>
        </trans-unit>
        <trans-unit id="d481b6bf166fb8c1f9b0f6eb1e60d3a487522ae3" translate="yes" xml:space="preserve">
          <source>Constant evaluation is the process of computing the result of &lt;a href=&quot;expressions&quot;&gt;expressions&lt;/a&gt; during compilation. Only a subset of all expressions can be evaluated at compile-time.</source>
          <target state="translated">定数評価は、コンパイル中に&lt;a href=&quot;expressions&quot;&gt;式&lt;/a&gt;の結果を計算するプロセスです。コンパイル時に評価できるのは、すべての式のサブセットのみです。</target>
        </trans-unit>
        <trans-unit id="01f3d0f48081336b622122d8a98fa589e08cae6c" translate="yes" xml:space="preserve">
          <source>Constant expressions</source>
          <target state="translated">定数式</target>
        </trans-unit>
        <trans-unit id="8acb60e86187bcf5db1b2debeee7ee1064c11ce1" translate="yes" xml:space="preserve">
          <source>Constant items</source>
          <target state="translated">定数項目</target>
        </trans-unit>
        <trans-unit id="97bc31a9a5e21a9ae0468be81bf3783159ae84ec" translate="yes" xml:space="preserve">
          <source>Constant promotion</source>
          <target state="translated">恒常的なプロモーション</target>
        </trans-unit>
        <trans-unit id="1e50a126ace8eddbc45729ad5924fe44c40085dd" translate="yes" xml:space="preserve">
          <source>Constant std::char::MAX</source>
          <target state="translated">定数 std::char::MAX</target>
        </trans-unit>
        <trans-unit id="007ca025a968277252799218ac2455c8b750153a" translate="yes" xml:space="preserve">
          <source>Constant std::char::REPLACEMENT_CHARACTER</source>
          <target state="translated">定数 std::char::REPLACEMENT_CHARACTER</target>
        </trans-unit>
        <trans-unit id="9b95e97f0785ad804f15f770186f949d067ca368" translate="yes" xml:space="preserve">
          <source>Constant std::char::UNICODE_VERSION</source>
          <target state="translated">定数 std::char::UNICODE_VERSION</target>
        </trans-unit>
        <trans-unit id="c0e725499fb94aa02784739c35063180ed9136a5" translate="yes" xml:space="preserve">
          <source>Constant std::env::consts::ARCH</source>
          <target state="translated">定数 std::env::consts::ARCH</target>
        </trans-unit>
        <trans-unit id="d139716e78c552889eb5b55b825dc149778179f6" translate="yes" xml:space="preserve">
          <source>Constant std::env::consts::DLL_EXTENSION</source>
          <target state="translated">定数 std::env::consts::DLL_EXTENSION</target>
        </trans-unit>
        <trans-unit id="c6a55937345cfab1b3b6ea054770f95cbf526879" translate="yes" xml:space="preserve">
          <source>Constant std::env::consts::DLL_PREFIX</source>
          <target state="translated">定数 std::env::consts::DLL_PREFIX</target>
        </trans-unit>
        <trans-unit id="3015dc2e17a3e8dd2a835e301dfb946d034e682e" translate="yes" xml:space="preserve">
          <source>Constant std::env::consts::DLL_SUFFIX</source>
          <target state="translated">定数 std::env::consts::DLL_SUFFIX</target>
        </trans-unit>
        <trans-unit id="df78b1d313faea234e10c9a7250a63fc6f62c4b2" translate="yes" xml:space="preserve">
          <source>Constant std::env::consts::EXE_EXTENSION</source>
          <target state="translated">定数 std::env::consts::EXE_EXTENSION</target>
        </trans-unit>
        <trans-unit id="277462e5742c2761111a19e463369307c6796c64" translate="yes" xml:space="preserve">
          <source>Constant std::env::consts::EXE_SUFFIX</source>
          <target state="translated">定数 std::env::consts::EXE_SUFFIX</target>
        </trans-unit>
        <trans-unit id="1b4794bfd538a2f073a5010660cf3d1c405c4347" translate="yes" xml:space="preserve">
          <source>Constant std::env::consts::FAMILY</source>
          <target state="translated">定数 std::env::consts::FAMILY</target>
        </trans-unit>
        <trans-unit id="7de7334275f48d3c50010becbb818925177a3ea9" translate="yes" xml:space="preserve">
          <source>Constant std::env::consts::OS</source>
          <target state="translated">定数 std::env::consts::OS</target>
        </trans-unit>
        <trans-unit id="99645f0b3b11ce4f96e16b3edce290f31955eab9" translate="yes" xml:space="preserve">
          <source>Constant std::f32::DIGITS</source>
          <target state="translated">定数 std::f32::DIGITS</target>
        </trans-unit>
        <trans-unit id="c0db867a66e07455025232c700d249a4cec65b69" translate="yes" xml:space="preserve">
          <source>Constant std::f32::EPSILON</source>
          <target state="translated">定数 std::f32::EPSILON</target>
        </trans-unit>
        <trans-unit id="9f9819354017bdba868f791ed792c4a20bf1b088" translate="yes" xml:space="preserve">
          <source>Constant std::f32::INFINITY</source>
          <target state="translated">定数 std::f32::INFINITY</target>
        </trans-unit>
        <trans-unit id="8efb766c071e9e43f6fbf374665e0c37d47eac0f" translate="yes" xml:space="preserve">
          <source>Constant std::f32::MANTISSA_DIGITS</source>
          <target state="translated">定数 std::f32::MANTISSA_DIGITS</target>
        </trans-unit>
        <trans-unit id="38fed7e2da2a001d94df205818f1e6c8164bbb37" translate="yes" xml:space="preserve">
          <source>Constant std::f32::MAX</source>
          <target state="translated">定数 std::f32::MAX</target>
        </trans-unit>
        <trans-unit id="c308d4f06079dadb21f0b31f4304cd7e9a2ab912" translate="yes" xml:space="preserve">
          <source>Constant std::f32::MAX_10_EXP</source>
          <target state="translated">定数 std::f32::MAX_10_EXP</target>
        </trans-unit>
        <trans-unit id="f0d909971db166372d6419197c849dbde3e6a342" translate="yes" xml:space="preserve">
          <source>Constant std::f32::MAX_EXP</source>
          <target state="translated">定数 std::f32::MAX_EXP</target>
        </trans-unit>
        <trans-unit id="8cef46f94fb043277f777fdb0c396836f1066f8d" translate="yes" xml:space="preserve">
          <source>Constant std::f32::MIN</source>
          <target state="translated">定数 std::f32::MIN</target>
        </trans-unit>
        <trans-unit id="1da87a8c8d52c00db57a59c30c397721231d1398" translate="yes" xml:space="preserve">
          <source>Constant std::f32::MIN_10_EXP</source>
          <target state="translated">定数 std::f32::MIN_10_EXP</target>
        </trans-unit>
        <trans-unit id="2ba496ec77981eef08a2d6362e980c6ccdcf72b4" translate="yes" xml:space="preserve">
          <source>Constant std::f32::MIN_EXP</source>
          <target state="translated">定数 std::f32::MIN_EXP</target>
        </trans-unit>
        <trans-unit id="493df668eafd9ccd4fb0b75e01531ae811d252ce" translate="yes" xml:space="preserve">
          <source>Constant std::f32::MIN_POSITIVE</source>
          <target state="translated">定数 std::f32::MIN_POSITIVE</target>
        </trans-unit>
        <trans-unit id="39affa81157864d20786617d730536186a0f1442" translate="yes" xml:space="preserve">
          <source>Constant std::f32::NAN</source>
          <target state="translated">定数 std::f32::NAN</target>
        </trans-unit>
        <trans-unit id="dab2aed8deb57c0da7b1d07c2cb30c88bc795140" translate="yes" xml:space="preserve">
          <source>Constant std::f32::NEG_INFINITY</source>
          <target state="translated">定数 std::f32::NEG_INFINITY</target>
        </trans-unit>
        <trans-unit id="2ed61c5307e3e3d9f33aefc98d8b0e2e9501ad87" translate="yes" xml:space="preserve">
          <source>Constant std::f32::RADIX</source>
          <target state="translated">定数 std::f32::RADIX</target>
        </trans-unit>
        <trans-unit id="8281d34f3bc25934d728e91edb05aef1b24af8a4" translate="yes" xml:space="preserve">
          <source>Constant std::f32::consts::E</source>
          <target state="translated">定数 std::f32::consts::E</target>
        </trans-unit>
        <trans-unit id="173d921fd5e0d8dcfb45b3638bc3ae177c4c6915" translate="yes" xml:space="preserve">
          <source>Constant std::f32::consts::FRAC_1_PI</source>
          <target state="translated">定数 std::f32::consts::FRAC_1_PI</target>
        </trans-unit>
        <trans-unit id="9ae5c6129baf3787e97f464c3aee5522a0b57b36" translate="yes" xml:space="preserve">
          <source>Constant std::f32::consts::FRAC_1_SQRT_2</source>
          <target state="translated">定数 std::f32::consts::FRAC_1_SQRT_2</target>
        </trans-unit>
        <trans-unit id="5f36bf0366127c3e4989b5e2276c8fb48352bd91" translate="yes" xml:space="preserve">
          <source>Constant std::f32::consts::FRAC_2_PI</source>
          <target state="translated">定数 std::f32::consts::FRAC_2_PI</target>
        </trans-unit>
        <trans-unit id="54d429d79fc6a7f81e7a91b9494e54a0871efe2c" translate="yes" xml:space="preserve">
          <source>Constant std::f32::consts::FRAC_2_SQRT_PI</source>
          <target state="translated">定数 std::f32::consts::FRAC_2_SQRT_PI</target>
        </trans-unit>
        <trans-unit id="c2ef3e6ebd230f70e6c36d3bfd9d6c8d74b116ad" translate="yes" xml:space="preserve">
          <source>Constant std::f32::consts::FRAC_PI_2</source>
          <target state="translated">定数 std::f32::consts::FRAC_PI_2</target>
        </trans-unit>
        <trans-unit id="608f2df0928254ac3a17043c63aad1986468a7e2" translate="yes" xml:space="preserve">
          <source>Constant std::f32::consts::FRAC_PI_3</source>
          <target state="translated">定数 std::f32::consts::FRAC_PI_3</target>
        </trans-unit>
        <trans-unit id="a13c88d5d98b7c04fd4c60c9a655da11db4e0c36" translate="yes" xml:space="preserve">
          <source>Constant std::f32::consts::FRAC_PI_4</source>
          <target state="translated">定数 std::f32::consts::FRAC_PI_4</target>
        </trans-unit>
        <trans-unit id="f4e7ed08df1870f6dddc8143eabe4faf65cf2069" translate="yes" xml:space="preserve">
          <source>Constant std::f32::consts::FRAC_PI_6</source>
          <target state="translated">定数 std::f32::consts::FRAC_PI_6</target>
        </trans-unit>
        <trans-unit id="928c7891c26b829f56b58b9164edaa74486fb550" translate="yes" xml:space="preserve">
          <source>Constant std::f32::consts::FRAC_PI_8</source>
          <target state="translated">定数 std::f32::consts::FRAC_PI_8</target>
        </trans-unit>
        <trans-unit id="00f74c0d0ca5a180e17767df1f6eee30bd305ea2" translate="yes" xml:space="preserve">
          <source>Constant std::f32::consts::LN_10</source>
          <target state="translated">定数 std::f32::consts::LN_10</target>
        </trans-unit>
        <trans-unit id="4c99cb86f3f68320f7abe388a7dc4e7f111ea9fe" translate="yes" xml:space="preserve">
          <source>Constant std::f32::consts::LN_2</source>
          <target state="translated">定数 std::f32::consts::LN_2</target>
        </trans-unit>
        <trans-unit id="9603421e7f8e7ea58346016741b1063ffe3db8cb" translate="yes" xml:space="preserve">
          <source>Constant std::f32::consts::LOG10_2</source>
          <target state="translated">定数 std::f32::consts::LOG10_2_2</target>
        </trans-unit>
        <trans-unit id="3a84cfea549fd7c4ce4e5896d19d4b1c7f6e7526" translate="yes" xml:space="preserve">
          <source>Constant std::f32::consts::LOG10_E</source>
          <target state="translated">定数 std::f32::consts::LOG10_E</target>
        </trans-unit>
        <trans-unit id="5cee39948a35cdbd4ac289de2aabfd99a89aa0d1" translate="yes" xml:space="preserve">
          <source>Constant std::f32::consts::LOG2_10</source>
          <target state="translated">定数 std::f32::consts::LOG2_10</target>
        </trans-unit>
        <trans-unit id="9c9073a69193fe4d4879a66ef3b1b446bf93d4db" translate="yes" xml:space="preserve">
          <source>Constant std::f32::consts::LOG2_E</source>
          <target state="translated">定数 std::f32::consts::LOG2_E</target>
        </trans-unit>
        <trans-unit id="d6b3e621590d46dcb08b535799b24bba03666e30" translate="yes" xml:space="preserve">
          <source>Constant std::f32::consts::PI</source>
          <target state="translated">定数 std::f32::consts::PI</target>
        </trans-unit>
        <trans-unit id="d29028b92ab3261e610480fa4cdd7859dcf230f6" translate="yes" xml:space="preserve">
          <source>Constant std::f32::consts::SQRT_2</source>
          <target state="translated">定数 std::f32::consts::SQRT_2</target>
        </trans-unit>
        <trans-unit id="46d80a7caf76a07e3742da60711778eb37414f49" translate="yes" xml:space="preserve">
          <source>Constant std::f32::consts::TAU</source>
          <target state="translated">定数 std::f32::consts::TAU</target>
        </trans-unit>
        <trans-unit id="991a7522cc9e96d217b7fd2d614c6a7b52687f0b" translate="yes" xml:space="preserve">
          <source>Constant std::f64::DIGITS</source>
          <target state="translated">定数 std::f64::DIGITS</target>
        </trans-unit>
        <trans-unit id="6d0f7b631c6f3a7a7f9c0f1b34b47d4128f03ee2" translate="yes" xml:space="preserve">
          <source>Constant std::f64::EPSILON</source>
          <target state="translated">定数 std::f64::EPSILON</target>
        </trans-unit>
        <trans-unit id="2d15e3787404a88bf37c936aa13f65e547359626" translate="yes" xml:space="preserve">
          <source>Constant std::f64::INFINITY</source>
          <target state="translated">定数 std::f64::INFINITY</target>
        </trans-unit>
        <trans-unit id="c9274539051c92d6c851fd164bc9eeabb28f04c9" translate="yes" xml:space="preserve">
          <source>Constant std::f64::MANTISSA_DIGITS</source>
          <target state="translated">定数 std::f64::MANTISSA_DIGITS</target>
        </trans-unit>
        <trans-unit id="a42a6b009f4a5e0fec49978b9fce72ebe1745c3d" translate="yes" xml:space="preserve">
          <source>Constant std::f64::MAX</source>
          <target state="translated">定数 std::f64::MAX</target>
        </trans-unit>
        <trans-unit id="1dd83a4500474d6790decd97aa52dc3684344d6d" translate="yes" xml:space="preserve">
          <source>Constant std::f64::MAX_10_EXP</source>
          <target state="translated">定数 std::f64::MAX_10_EXP</target>
        </trans-unit>
        <trans-unit id="d8d1677fa6f41eb6f83c4141d1f2401385366595" translate="yes" xml:space="preserve">
          <source>Constant std::f64::MAX_EXP</source>
          <target state="translated">定数 std::f64::MAX_EXP</target>
        </trans-unit>
        <trans-unit id="f50cd4f49988d14c076a605457b52cff007c4971" translate="yes" xml:space="preserve">
          <source>Constant std::f64::MIN</source>
          <target state="translated">定数 std::f64::MIN</target>
        </trans-unit>
        <trans-unit id="baa285d22bb3493c83396c7ed0a328830f297c03" translate="yes" xml:space="preserve">
          <source>Constant std::f64::MIN_10_EXP</source>
          <target state="translated">定数 std::f64::MIN_10_EXP</target>
        </trans-unit>
        <trans-unit id="cf5f7e123d639e53544e1b80a92f314281a1860d" translate="yes" xml:space="preserve">
          <source>Constant std::f64::MIN_EXP</source>
          <target state="translated">定数 std::f64::MIN_EXP</target>
        </trans-unit>
        <trans-unit id="5a79de3dea87b86db581ad61d5299ccdd6f91846" translate="yes" xml:space="preserve">
          <source>Constant std::f64::MIN_POSITIVE</source>
          <target state="translated">定数 std::f64::MIN_POSITIVE</target>
        </trans-unit>
        <trans-unit id="730afd108830ede47a9899934ee7b80b5db76c8b" translate="yes" xml:space="preserve">
          <source>Constant std::f64::NAN</source>
          <target state="translated">定数 std::f64::NAN</target>
        </trans-unit>
        <trans-unit id="ec4fb2112702d9cde3817100f0585576ec4ea2e1" translate="yes" xml:space="preserve">
          <source>Constant std::f64::NEG_INFINITY</source>
          <target state="translated">定数 std::f64::NEG_INFINITY</target>
        </trans-unit>
        <trans-unit id="3bdb8cb93019b274c61c2cebd9184dee0ac0433d" translate="yes" xml:space="preserve">
          <source>Constant std::f64::RADIX</source>
          <target state="translated">定数 std::f64::RADIX</target>
        </trans-unit>
        <trans-unit id="aea8dacf24fafa066223a147bbd1ce3be52db6a0" translate="yes" xml:space="preserve">
          <source>Constant std::f64::consts::E</source>
          <target state="translated">定数 std::f64::consts::E</target>
        </trans-unit>
        <trans-unit id="642d0ccc2a4018fe222545fce8f2a1d818d0656a" translate="yes" xml:space="preserve">
          <source>Constant std::f64::consts::FRAC_1_PI</source>
          <target state="translated">定数 std::f64::consts::FRAC_1_PI</target>
        </trans-unit>
        <trans-unit id="1cad566ae384c77d0ffb995d7ae0cb37bc3fe4ca" translate="yes" xml:space="preserve">
          <source>Constant std::f64::consts::FRAC_1_SQRT_2</source>
          <target state="translated">定数 std::f64::consts::FRAC_1_SQRT_2</target>
        </trans-unit>
        <trans-unit id="e849df00306dcbd9e3fafc8fd8b784c77c00797e" translate="yes" xml:space="preserve">
          <source>Constant std::f64::consts::FRAC_2_PI</source>
          <target state="translated">定数 std::f64::consts::FRAC_2_PI</target>
        </trans-unit>
        <trans-unit id="edabf6b9d354e56e6fb6a436a56f54afa4739f10" translate="yes" xml:space="preserve">
          <source>Constant std::f64::consts::FRAC_2_SQRT_PI</source>
          <target state="translated">定数 std::f64::consts::FRAC_2_SQRT_PI</target>
        </trans-unit>
        <trans-unit id="6ea2788198ec0a41b52279e4223f492bbce9075a" translate="yes" xml:space="preserve">
          <source>Constant std::f64::consts::FRAC_PI_2</source>
          <target state="translated">定数 std::f64::consts::FRAC_PI_2</target>
        </trans-unit>
        <trans-unit id="f7886ccb5ce1f87569131716ea7209f917873907" translate="yes" xml:space="preserve">
          <source>Constant std::f64::consts::FRAC_PI_3</source>
          <target state="translated">定数 std::f64::consts::FRAC_PI_3</target>
        </trans-unit>
        <trans-unit id="3afcb8beb52cd27b1c95cf53b6c560708a858e41" translate="yes" xml:space="preserve">
          <source>Constant std::f64::consts::FRAC_PI_4</source>
          <target state="translated">定数 std::f64::consts::FRAC_PI_4</target>
        </trans-unit>
        <trans-unit id="0010fdfa823498637c1644ffc436bc287954e33d" translate="yes" xml:space="preserve">
          <source>Constant std::f64::consts::FRAC_PI_6</source>
          <target state="translated">定数 std::f64::consts::FRAC_PI_6</target>
        </trans-unit>
        <trans-unit id="07869f26acf9798bda6c11b46374efebbd900cb8" translate="yes" xml:space="preserve">
          <source>Constant std::f64::consts::FRAC_PI_8</source>
          <target state="translated">定数 std::f64::consts::FRAC_PI_8</target>
        </trans-unit>
        <trans-unit id="1d19eb06f8430ac58561840f346c1da1282bdb12" translate="yes" xml:space="preserve">
          <source>Constant std::f64::consts::LN_10</source>
          <target state="translated">定数 std::f64::consts::LN_10</target>
        </trans-unit>
        <trans-unit id="11859e6229960cd516898c9ad8a8de7cd29da32e" translate="yes" xml:space="preserve">
          <source>Constant std::f64::consts::LN_2</source>
          <target state="translated">定数 std::f64::consts::LN_2</target>
        </trans-unit>
        <trans-unit id="ea45c103121afecc11071a2bef7cb6755ac279df" translate="yes" xml:space="preserve">
          <source>Constant std::f64::consts::LOG10_2</source>
          <target state="translated">定数 std::f64::consts::LOG10_2</target>
        </trans-unit>
        <trans-unit id="96ac41d0b7df9ea60d36c643d8ca3ff0e364715b" translate="yes" xml:space="preserve">
          <source>Constant std::f64::consts::LOG10_E</source>
          <target state="translated">定数 std::f64::consts::LOG10_E</target>
        </trans-unit>
        <trans-unit id="6628f7ccc2b24399a5dfdafbc7c2cc47a8938b94" translate="yes" xml:space="preserve">
          <source>Constant std::f64::consts::LOG2_10</source>
          <target state="translated">定数 std::f64::consts::LOG2_10</target>
        </trans-unit>
        <trans-unit id="6ff43849e16e94bc042d71b9ef5fbbfcc69662c5" translate="yes" xml:space="preserve">
          <source>Constant std::f64::consts::LOG2_E</source>
          <target state="translated">定数 std::f64::consts::LOG2_E</target>
        </trans-unit>
        <trans-unit id="6c39e8ab6e3fdc4b67bc398183903360a66e5fc0" translate="yes" xml:space="preserve">
          <source>Constant std::f64::consts::PI</source>
          <target state="translated">定数 std::f64::consts::PI</target>
        </trans-unit>
        <trans-unit id="7466a15d186ef849d05b552b419e5e6e0d15cbbc" translate="yes" xml:space="preserve">
          <source>Constant std::f64::consts::SQRT_2</source>
          <target state="translated">定数 std::f64::consts::SQRT_2</target>
        </trans-unit>
        <trans-unit id="60d40a9897ae9761002eff8865de4768c1e04488" translate="yes" xml:space="preserve">
          <source>Constant std::f64::consts::TAU</source>
          <target state="translated">定数 std::f64::consts::TAU</target>
        </trans-unit>
        <trans-unit id="8ccbc4fae07cc31d2691d3b08a27938fa7a16726" translate="yes" xml:space="preserve">
          <source>Constant std::i128::MAX</source>
          <target state="translated">定数 std::i128::MAX</target>
        </trans-unit>
        <trans-unit id="22b029bd4d1eeb2ffaf4504b9236b07176ebd36e" translate="yes" xml:space="preserve">
          <source>Constant std::i128::MIN</source>
          <target state="translated">定数 std::i128::MIN</target>
        </trans-unit>
        <trans-unit id="1311f14bce10ce309335f74d10064edb920c7c23" translate="yes" xml:space="preserve">
          <source>Constant std::i16::MAX</source>
          <target state="translated">定数 std::i16::MAX</target>
        </trans-unit>
        <trans-unit id="53cb2f83ab29500fde11be73358a2d717bff3196" translate="yes" xml:space="preserve">
          <source>Constant std::i16::MIN</source>
          <target state="translated">定数 std::i16::MIN</target>
        </trans-unit>
        <trans-unit id="5d8b42f874e26af83d12d8ee10546133ed1dca9a" translate="yes" xml:space="preserve">
          <source>Constant std::i32::MAX</source>
          <target state="translated">定数 std::i32::MAX</target>
        </trans-unit>
        <trans-unit id="fed7189ccd1d3c2cfcd2087250e2ae0a5a803d49" translate="yes" xml:space="preserve">
          <source>Constant std::i32::MIN</source>
          <target state="translated">定数 std::i32::MIN</target>
        </trans-unit>
        <trans-unit id="9321fb9fd7e7c51fc4141e610fbb09611a4f31aa" translate="yes" xml:space="preserve">
          <source>Constant std::i64::MAX</source>
          <target state="translated">定数 std::i64::MAX</target>
        </trans-unit>
        <trans-unit id="8b26f8c31906b7a416701eba53cd5d93f73e481a" translate="yes" xml:space="preserve">
          <source>Constant std::i64::MIN</source>
          <target state="translated">定数 std::i64::MIN</target>
        </trans-unit>
        <trans-unit id="79b29ab5bebbf944c7fc8dee02322333b728d7d0" translate="yes" xml:space="preserve">
          <source>Constant std::i8::MAX</source>
          <target state="translated">定数 std::i8::MAX</target>
        </trans-unit>
        <trans-unit id="dc7438f9881ae6a0e0ac4cdfddaa5a73e4a56620" translate="yes" xml:space="preserve">
          <source>Constant std::i8::MIN</source>
          <target state="translated">定数 std::i8::MIN</target>
        </trans-unit>
        <trans-unit id="cf1f299a77b726e348eeac023b3755e8827dd103" translate="yes" xml:space="preserve">
          <source>Constant std::isize::MAX</source>
          <target state="translated">定数 std::isize::MAX</target>
        </trans-unit>
        <trans-unit id="639cde0e9a485d14f49f511fd65b8d00edaf7a2a" translate="yes" xml:space="preserve">
          <source>Constant std::isize::MIN</source>
          <target state="translated">定数 std::isize::MIN</target>
        </trans-unit>
        <trans-unit id="11d88ec99aa7745d1ebc4226f720008baac2965a" translate="yes" xml:space="preserve">
          <source>Constant std::path::MAIN_SEPARATOR</source>
          <target state="translated">定数 std::path::MAIN_SEPARATOR</target>
        </trans-unit>
        <trans-unit id="8e6f77f0a8e44dd26b92e97a27250d446f7256b0" translate="yes" xml:space="preserve">
          <source>Constant std::sync::ONCE_INIT</source>
          <target state="translated">定数 std::sync::ONCE_INIT</target>
        </trans-unit>
        <trans-unit id="b2f7093ed51aed319e66fd75cb54af792d2c0778" translate="yes" xml:space="preserve">
          <source>Constant std::sync::atomic::ATOMIC_BOOL_INIT</source>
          <target state="translated">定数 std::sync::atomic::ATOMIC_BOOL_INIT</target>
        </trans-unit>
        <trans-unit id="43d2ad4706e87af8b4b92224008a650d70f15a93" translate="yes" xml:space="preserve">
          <source>Constant std::sync::atomic::ATOMIC_I16_INIT</source>
          <target state="translated">定数 std::sync::atomic::ATOMIC_I16_INIT</target>
        </trans-unit>
        <trans-unit id="113e96c777b4aeba61709d5cba1dcc4453322bd3" translate="yes" xml:space="preserve">
          <source>Constant std::sync::atomic::ATOMIC_I32_INIT</source>
          <target state="translated">定数 std::sync::atomic::ATOMIC_I32_INIT</target>
        </trans-unit>
        <trans-unit id="d7768eb86ce0a349cd26ab4499c6bddee5ef2373" translate="yes" xml:space="preserve">
          <source>Constant std::sync::atomic::ATOMIC_I64_INIT</source>
          <target state="translated">定数 std::sync::atomic::ATOMIC_I64_INIT</target>
        </trans-unit>
        <trans-unit id="db342bac6e6ac70780bd4f23c83fdb3c06769b18" translate="yes" xml:space="preserve">
          <source>Constant std::sync::atomic::ATOMIC_I8_INIT</source>
          <target state="translated">定数 std::sync::atomic::ATOMIC_I8_INIT</target>
        </trans-unit>
        <trans-unit id="7de57cf0bad1bde78e18b1cb037387d0d7de4e44" translate="yes" xml:space="preserve">
          <source>Constant std::sync::atomic::ATOMIC_ISIZE_INIT</source>
          <target state="translated">定数 std::sync::atomic::ATOMIC_ISIZE_INIT</target>
        </trans-unit>
        <trans-unit id="550556f5c0c938b012649692d8c3d1dd034b2de3" translate="yes" xml:space="preserve">
          <source>Constant std::sync::atomic::ATOMIC_U16_INIT</source>
          <target state="translated">定数 std::sync::atomic::ATOMIC_U16_INIT</target>
        </trans-unit>
        <trans-unit id="3b030fca447510c493bfc654c0b51237c1fed24a" translate="yes" xml:space="preserve">
          <source>Constant std::sync::atomic::ATOMIC_U32_INIT</source>
          <target state="translated">定数 std::sync::atomic::ATOMIC_U32_INIT</target>
        </trans-unit>
        <trans-unit id="a542bee7f468c965196c763a1afcf2cd86d3ae27" translate="yes" xml:space="preserve">
          <source>Constant std::sync::atomic::ATOMIC_U64_INIT</source>
          <target state="translated">定数 std::sync::atomic::ATOMIC_U64_INIT</target>
        </trans-unit>
        <trans-unit id="90a7ff937826cf01df966094051b6236a0bfba1b" translate="yes" xml:space="preserve">
          <source>Constant std::sync::atomic::ATOMIC_U8_INIT</source>
          <target state="translated">定数 std::sync::atomic::ATOMIC_U8_INIT</target>
        </trans-unit>
        <trans-unit id="0d4414db526187bac1f56ed65c7d6827a1339005" translate="yes" xml:space="preserve">
          <source>Constant std::sync::atomic::ATOMIC_USIZE_INIT</source>
          <target state="translated">定数 std::sync::atomic::ATOMIC_USIZE_INIT</target>
        </trans-unit>
        <trans-unit id="933aad854de788f9758648f2599083a99e392bc1" translate="yes" xml:space="preserve">
          <source>Constant std::time::UNIX_EPOCH</source>
          <target state="translated">定数 std::time::UNIX_EPOCH</target>
        </trans-unit>
        <trans-unit id="b47251ae180bc30d48421f3f292e8ee0d59a7a5f" translate="yes" xml:space="preserve">
          <source>Constant std::u128::MAX</source>
          <target state="translated">定数 std::u128::MAX</target>
        </trans-unit>
        <trans-unit id="9a7223245085fe93f36305a52686c906b13331ea" translate="yes" xml:space="preserve">
          <source>Constant std::u128::MIN</source>
          <target state="translated">定数 std::u128::MIN</target>
        </trans-unit>
        <trans-unit id="129e201426045fa6a5dcb26c1576ccbf5e933a4c" translate="yes" xml:space="preserve">
          <source>Constant std::u16::MAX</source>
          <target state="translated">定数 std::u16::MAX</target>
        </trans-unit>
        <trans-unit id="28d789f5108cac22088595091ccf63497b7230ec" translate="yes" xml:space="preserve">
          <source>Constant std::u16::MIN</source>
          <target state="translated">定数 std::u16::MIN</target>
        </trans-unit>
        <trans-unit id="975f4304d742154f7845f02be594da0638bf04c3" translate="yes" xml:space="preserve">
          <source>Constant std::u32::MAX</source>
          <target state="translated">定数 std::u32::MAX</target>
        </trans-unit>
        <trans-unit id="6b45e7454943d2738e1d7c1dab1006724b3cd74a" translate="yes" xml:space="preserve">
          <source>Constant std::u32::MIN</source>
          <target state="translated">定数 std::u32::MIN</target>
        </trans-unit>
        <trans-unit id="e6e90f64f44011cfff425a388e626600c1b96176" translate="yes" xml:space="preserve">
          <source>Constant std::u64::MAX</source>
          <target state="translated">定数 std::u64::MAX</target>
        </trans-unit>
        <trans-unit id="35edefcbc5fbf1bd6a58ccab755b4faa2d6f1f6b" translate="yes" xml:space="preserve">
          <source>Constant std::u64::MIN</source>
          <target state="translated">定数 std::u64::MIN</target>
        </trans-unit>
        <trans-unit id="c0733810d38ec1128d29488725c474c3c5a7b3f2" translate="yes" xml:space="preserve">
          <source>Constant std::u8::MAX</source>
          <target state="translated">定数 std::u8::MAX</target>
        </trans-unit>
        <trans-unit id="85205c26a2920a23bbd66b0a85d5657945943431" translate="yes" xml:space="preserve">
          <source>Constant std::u8::MIN</source>
          <target state="translated">定数 std::u8::MIN</target>
        </trans-unit>
        <trans-unit id="aec2abb6e2e00d5700b4088b94e6290b6cc69fc9" translate="yes" xml:space="preserve">
          <source>Constant std::usize::MAX</source>
          <target state="translated">定数 std::usize::MAX</target>
        </trans-unit>
        <trans-unit id="7f1e88fc64b878bfae09443130cb4f7ca20a679f" translate="yes" xml:space="preserve">
          <source>Constant std::usize::MIN</source>
          <target state="translated">定数 std::usize::MIN</target>
        </trans-unit>
        <trans-unit id="0f386d7e7881b32fa39cb7b62bdb15c0f3a4c0e1" translate="yes" xml:space="preserve">
          <source>Constants</source>
          <target state="translated">Constants</target>
        </trans-unit>
        <trans-unit id="69a56883c12e8c0b802793e07a32255ef6ee2ce0" translate="yes" xml:space="preserve">
          <source>Constants and immutable static variables might seem similar, but a subtle difference is that values in a static variable have a fixed address in memory. Using the value will always access the same data. Constants, on the other hand, are allowed to duplicate their data whenever they&amp;rsquo;re used.</source>
          <target state="translated">定数と不変の静的変数は似ているように見えるかもしれませんが、わずかな違いは、静的変数の値がメモリ内の固定アドレスを持っていることです。値を使用すると、常に同じデータにアクセスします。一方、定数は、使用されるたびにデータを複製できます。</target>
        </trans-unit>
        <trans-unit id="b46fa34783c68a1612db2baebea375ce88b46c0e" translate="yes" xml:space="preserve">
          <source>Constants are valid for the entire time a program runs, within the scope they were declared in, making them a useful choice for values in your application domain that multiple parts of the program might need to know about, such as the maximum number of points any player of a game is allowed to earn or the speed of light.</source>
          <target state="translated">定数は、宣言された範囲内でプログラムが実行されている間ずっと有効なので、ゲームのプレイヤーが獲得できる最大ポイント数や光速など、プログラムの複数の部分が知る必要があるアプリケーションドメインの値に便利な選択肢となります。</target>
        </trans-unit>
        <trans-unit id="98ef931bb12e523822107e6476d82e9084ce709b" translate="yes" xml:space="preserve">
          <source>Constants associated with the current target</source>
          <target state="translated">現在のターゲットに関連する定数</target>
        </trans-unit>
        <trans-unit id="cfd0dc3e347eaa177a9226b1a616bb3c984b71a6" translate="yes" xml:space="preserve">
          <source>Constants can be declared in any scope, including the global scope, which makes them useful for values that many parts of code need to know about.</source>
          <target state="translated">定数は、グローバルスコープを含めた任意のスコープで宣言できるので、コードの多くの部分で知る必要がある値に便利です。</target>
        </trans-unit>
        <trans-unit id="66f6052ea185d8c8fc2aa5a8204b5eeaf49aa2fb" translate="yes" xml:space="preserve">
          <source>Constants can contain destructors. Destructors are run when the value goes out of scope.</source>
          <target state="translated">定数にはデストラクタを含めることができます。デストラクタは、値がスコープ外になると実行されます。</target>
        </trans-unit>
        <trans-unit id="44b1148a6fbbab601b6b4b2ec174e7ee7f841dbb" translate="yes" xml:space="preserve">
          <source>Constants can only be initialized by a constant value or, in a future version of Rust, a call to a const function. This error indicates the use of a path (like a::b, or x) denoting something other than one of these allowed items.</source>
          <target state="translated">定数は、定数値か、将来のバージョンの Rust では const 関数の呼び出しによってのみ初期化することができます。このエラーは、これらの許可された項目以外のパス (a::b や x など)を使用していることを示します。</target>
        </trans-unit>
        <trans-unit id="0c866bbd815e69717aac5b587194312357c6b6e9" translate="yes" xml:space="preserve">
          <source>Constants cannot be a union type. Struct and enum constants must have &lt;code&gt;#[derive(PartialEq, Eq)]&lt;/code&gt; (not merely implemented).</source>
          <target state="translated">定数を共用体型にすることはできません。構造体および列挙定数には &lt;code&gt;#[derive(PartialEq, Eq)]&lt;/code&gt; （単に実装されているだけではありません）。</target>
        </trans-unit>
        <trans-unit id="3180a4feb81dccf82eab3d2e743e454007a9ea9a" translate="yes" xml:space="preserve">
          <source>Constants cannot refer to statics.</source>
          <target state="translated">定数は静的なものを参照することはできません。</target>
        </trans-unit>
        <trans-unit id="f2016d6b09f2350ea12f6c6bd7612a849559e9ec" translate="yes" xml:space="preserve">
          <source>Constants may refer to the address of other constants, in which case the address will have elided lifetimes where applicable, otherwise &amp;ndash; in most cases &amp;ndash; defaulting to the &lt;code&gt;static&lt;/code&gt; lifetime. (See &lt;a href=&quot;../lifetime-elision#static-lifetime-elision&quot;&gt;static lifetime elision&lt;/a&gt;.) The compiler is, however, still at liberty to translate the constant many times, so the address referred to may not be stable.</source>
          <target state="translated">定数は他の定数のアドレスを参照する場合があります。その場合、該当する場合、アドレスはライフタイムを省略します。それ以外の場合-ほとんどの場合、デフォルトで &lt;code&gt;static&lt;/code&gt; ライフタイムになります。（&lt;a href=&quot;../lifetime-elision#static-lifetime-elision&quot;&gt;静的存続期間省略を&lt;/a&gt;参照してください。）ただし、コンパイラーは定数を何度も変換する自由があるため、参照されるアドレスは安定しない可能性があります。</target>
        </trans-unit>
        <trans-unit id="56f8c97db5f4593649509c95a80f110567e700fd" translate="yes" xml:space="preserve">
          <source>Constants must be explicitly typed, unlike with &lt;code&gt;let&lt;/code&gt; you can't ignore its type and let the compiler figure it out. Any constant value can be defined in a const, which in practice happens to be most things that would be reasonable to have a constant (barring &lt;code&gt;const fn&lt;/code&gt;s). For example, you can't have a File as a &lt;code&gt;const&lt;/code&gt;.</source>
          <target state="translated">定数は明示的とは異なり、入力する必要があり &lt;code&gt;let&lt;/code&gt; あなたは、そのタイプを無視して、コンパイラのフィギュアにそれを任せることはできません。任意の定数値をconstで定義できますが、実際にはほとんどの場合、定数を持つことが妥当です（ &lt;code&gt;const fn&lt;/code&gt; s を除く）。たとえば、ファイルを &lt;code&gt;const&lt;/code&gt; にすることはできません。</target>
        </trans-unit>
        <trans-unit id="92f0780bc1ddff5c0a5178eec755ed6aeb2690d7" translate="yes" xml:space="preserve">
          <source>Constants must be explicitly typed. The type must have a &lt;code&gt;'static&lt;/code&gt; lifetime: any references in the initializer must have &lt;code&gt;'static&lt;/code&gt; lifetimes.</source>
          <target state="translated">Constants must be explicitly typed. The type must have a &lt;code&gt;'static&lt;/code&gt; lifetime: any references in the initializer must have &lt;code&gt;'static&lt;/code&gt; lifetimes.</target>
        </trans-unit>
        <trans-unit id="f44be7a956c22e723f8c33dd89f6deff607db54d" translate="yes" xml:space="preserve">
          <source>Constants must be explicitly typed. The type must have a &lt;code&gt;'static&lt;/code&gt; lifetime: any references it contains must have &lt;code&gt;'static&lt;/code&gt; lifetimes.</source>
          <target state="translated">定数は明示的に入力する必要があります。タイプは持っている必要があります &lt;code&gt;'static&lt;/code&gt; ：それは持っている必要があります含まれているすべての参照寿命 &lt;code&gt;'static&lt;/code&gt; 寿命を。</target>
        </trans-unit>
        <trans-unit id="46312bcd5a59fb2e1e169c762b692ec10cdff414" translate="yes" xml:space="preserve">
          <source>Constants must be explicitly typed; unlike with &lt;code&gt;let&lt;/code&gt;, you can't ignore their type and let the compiler figure it out. Any constant value can be defined in a &lt;code&gt;const&lt;/code&gt;, which in practice happens to be most things that would be reasonable to have in a constant (barring &lt;code&gt;const fn&lt;/code&gt;s). For example, you can't have a &lt;a href=&quot;fs/struct.file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; as a &lt;code&gt;const&lt;/code&gt;.</source>
          <target state="translated">Constants must be explicitly typed; unlike with &lt;code&gt;let&lt;/code&gt; , you can't ignore their type and let the compiler figure it out. Any constant value can be defined in a &lt;code&gt;const&lt;/code&gt; , which in practice happens to be most things that would be reasonable to have in a constant (barring &lt;code&gt;const fn&lt;/code&gt; s). For example, you can't have a &lt;a href=&quot;fs/struct.file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; as a &lt;code&gt;const&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bedad8959cc32c5ec574766684406ac166879909" translate="yes" xml:space="preserve">
          <source>Constants with Destructors</source>
          <target state="translated">デストラクタを持つ定数</target>
        </trans-unit>
        <trans-unit id="1e59d1d93463327298ef52937fbc233d58005e16" translate="yes" xml:space="preserve">
          <source>Constants, as with statics, should always be in SCREAMING_SNAKE_CASE.</source>
          <target state="translated">定数は、静的なものと同様に、常にSCREAMING_SNAKE_CASEにあるべきです。</target>
        </trans-unit>
        <trans-unit id="ffef07212e6fe65a786f61f9eee051cbc2efeb29" translate="yes" xml:space="preserve">
          <source>Constants, like statics, should always be in &lt;code&gt;SCREAMING_SNAKE_CASE&lt;/code&gt;.</source>
          <target state="translated">Constants, like statics, should always be in &lt;code&gt;SCREAMING_SNAKE_CASE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="52e68a873a2be3470675b9ee933b98d781ae7fef" translate="yes" xml:space="preserve">
          <source>Constraints</source>
          <target state="translated">Constraints</target>
        </trans-unit>
        <trans-unit id="8232adc4277033a5d8e517fe29e38c6f41dc7f53" translate="yes" xml:space="preserve">
          <source>Construct I/O objects from raw handles.</source>
          <target state="translated">生のハンドルからI/Oオブジェクトを構築します。</target>
        </trans-unit>
        <trans-unit id="f078ee4173b019e9a16fe3fa080e82ad18d0c589" translate="yes" xml:space="preserve">
          <source>Construct a new &lt;code&gt;Pin&amp;lt;P&amp;gt;&lt;/code&gt; around a pointer to some data of a type that implements &lt;a href=&quot;../marker/trait.unpin&quot;&gt;&lt;code&gt;Unpin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../marker/trait.unpin&quot;&gt; &lt;code&gt;Unpin&lt;/code&gt; &lt;/a&gt;を実装する型のいくつかのデータへのポインターの周りに新しい &lt;code&gt;Pin&amp;lt;P&amp;gt;&lt;/code&gt; 構築します。</target>
        </trans-unit>
        <trans-unit id="458f756a19df9b463a457c79d2f613aa006705b7" translate="yes" xml:space="preserve">
          <source>Construct a new &lt;code&gt;Pin&amp;lt;P&amp;gt;&lt;/code&gt; around a reference to some data of a type that may or may not implement &lt;code&gt;Unpin&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Unpin&lt;/code&gt; を実装する場合と実装しない場合がある型の一部のデータへの参照の周りに新しい &lt;code&gt;Pin&amp;lt;P&amp;gt;&lt;/code&gt; 構築します。</target>
        </trans-unit>
        <trans-unit id="3967b36bcebd4326066136b538620deb228d3faa" translate="yes" xml:space="preserve">
          <source>Construct a new pin by mapping the interior value.</source>
          <target state="translated">内部の値をマッピングして新しいピンを構築します。</target>
        </trans-unit>
        <trans-unit id="04eecfb7df0c24c6e2880d7045b0d634dafa8cad" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;Layout&lt;/code&gt; from a given &lt;code&gt;size&lt;/code&gt; and &lt;code&gt;align&lt;/code&gt;, or returns &lt;code&gt;LayoutErr&lt;/code&gt; if any of the following conditions are not met:</source>
          <target state="translated">Constructs a &lt;code&gt;Layout&lt;/code&gt; from a given &lt;code&gt;size&lt;/code&gt; and &lt;code&gt;align&lt;/code&gt; , or returns &lt;code&gt;LayoutErr&lt;/code&gt; if any of the following conditions are not met:</target>
        </trans-unit>
        <trans-unit id="b42c2a4fefbb924c8cf055d2c7b9a94103738729" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;Layout&lt;/code&gt; from a given &lt;code&gt;size&lt;/code&gt; and &lt;code&gt;align&lt;/code&gt;, or returns &lt;code&gt;LayoutErr&lt;/code&gt; if either of the following conditions are not met:</source>
          <target state="translated">指定 &lt;code&gt;size&lt;/code&gt; れたサイズと &lt;code&gt;align&lt;/code&gt; から &lt;code&gt;Layout&lt;/code&gt; を構築するか、次のいずれかの条件が満たされない場合に &lt;code&gt;LayoutErr&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="662b82cfdc2ca590ba24d2ff890aa2807d96dfad" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;Layout&lt;/code&gt; from a given &lt;code&gt;size&lt;/code&gt; and &lt;code&gt;align&lt;/code&gt;, or returns &lt;code&gt;LayoutError&lt;/code&gt; if any of the following conditions are not met:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f103af7dbea14aa0864d39396e14a6ebcb2d6631" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;Layout&lt;/code&gt; suitable for holding a value of type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 型の値を保持するのに適した &lt;code&gt;Layout&lt;/code&gt; 構築します。</target>
        </trans-unit>
        <trans-unit id="cd2dabbbbba491f11bc24d28063a2937b99cf398" translate="yes" xml:space="preserve">
          <source>Constructs a box from a raw pointer in the given allocator.</source>
          <target state="translated">与えられたアロケータの生ポインタからボックスを作成します。</target>
        </trans-unit>
        <trans-unit id="c46040f0a72395a435c25d2ec7941bb980f8d880" translate="yes" xml:space="preserve">
          <source>Constructs a box from a raw pointer.</source>
          <target state="translated">生のポインタからボックスを作成します。</target>
        </trans-unit>
        <trans-unit id="37f1dc6a040b08982291af52abf5a0bf60fa3704" translate="yes" xml:space="preserve">
          <source>Constructs a double-ended iterator over a sub-range of elements in the map. The simplest way is to use the range syntax &lt;code&gt;min..max&lt;/code&gt;, thus &lt;code&gt;range(min..max)&lt;/code&gt; will yield elements from min (inclusive) to max (exclusive). The range may also be entered as &lt;code&gt;(Bound&amp;lt;T&amp;gt;, Bound&amp;lt;T&amp;gt;)&lt;/code&gt;, so for example &lt;code&gt;range((Excluded(4), Included(10)))&lt;/code&gt; will yield a left-exclusive, right-inclusive range from 4 to 10.</source>
          <target state="translated">マップ内の要素のサブ範囲に対して両端反復子を構築します。最も簡単な方法は、範囲構文 &lt;code&gt;min..max&lt;/code&gt; を使用することです。したがって、 &lt;code&gt;range(min..max)&lt;/code&gt; は、min（包括的）からmax（排他的）までの要素を生成します。範囲は &lt;code&gt;(Bound&amp;lt;T&amp;gt;, Bound&amp;lt;T&amp;gt;)&lt;/code&gt; として入力することもできるので、たとえば &lt;code&gt;range((Excluded(4), Included(10)))&lt;/code&gt; は、4から10。</target>
        </trans-unit>
        <trans-unit id="8ed545efd7d90d0249d6ed7678970540d88a2e79" translate="yes" xml:space="preserve">
          <source>Constructs a double-ended iterator over a sub-range of elements in the set. The simplest way is to use the range syntax &lt;code&gt;min..max&lt;/code&gt;, thus &lt;code&gt;range(min..max)&lt;/code&gt; will yield elements from min (inclusive) to max (exclusive). The range may also be entered as &lt;code&gt;(Bound&amp;lt;T&amp;gt;, Bound&amp;lt;T&amp;gt;)&lt;/code&gt;, so for example &lt;code&gt;range((Excluded(4), Included(10)))&lt;/code&gt; will yield a left-exclusive, right-inclusive range from 4 to 10.</source>
          <target state="translated">セット内の要素のサブ範囲に対して両端反復子を構築します。最も簡単な方法は、範囲構文 &lt;code&gt;min..max&lt;/code&gt; を使用することです。したがって、 &lt;code&gt;range(min..max)&lt;/code&gt; は、min（包括的）からmax（排他的）までの要素を生成します。範囲は &lt;code&gt;(Bound&amp;lt;T&amp;gt;, Bound&amp;lt;T&amp;gt;)&lt;/code&gt; として入力することもできるので、たとえば &lt;code&gt;range((Excluded(4), Included(10)))&lt;/code&gt; は、4から10。</target>
        </trans-unit>
        <trans-unit id="192e83322938744836e7b9b4c93a08248769c9d0" translate="yes" xml:space="preserve">
          <source>Constructs a mutable double-ended iterator over a sub-range of elements in the map. The simplest way is to use the range syntax &lt;code&gt;min..max&lt;/code&gt;, thus &lt;code&gt;range(min..max)&lt;/code&gt; will yield elements from min (inclusive) to max (exclusive). The range may also be entered as &lt;code&gt;(Bound&amp;lt;T&amp;gt;, Bound&amp;lt;T&amp;gt;)&lt;/code&gt;, so for example &lt;code&gt;range((Excluded(4), Included(10)))&lt;/code&gt; will yield a left-exclusive, right-inclusive range from 4 to 10.</source>
          <target state="translated">マップ内の要素のサブ範囲に対して可変の両端反復子を構築します。最も簡単な方法は、範囲構文 &lt;code&gt;min..max&lt;/code&gt; を使用することです。したがって、 &lt;code&gt;range(min..max)&lt;/code&gt; は、min（包括的）からmax（排他的）までの要素を生成します。範囲は &lt;code&gt;(Bound&amp;lt;T&amp;gt;, Bound&amp;lt;T&amp;gt;)&lt;/code&gt; として入力することもできるので、たとえば &lt;code&gt;range((Excluded(4), Included(10)))&lt;/code&gt; は、4から10。</target>
        </trans-unit>
        <trans-unit id="c7a0c840c4ea7ef08d90fe8df26e5fe5c91abf7f" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; using a weak reference to itself. Attempting to upgrade the weak reference before this function returns will result in a &lt;code&gt;None&lt;/code&gt; value. However, the weak reference may be cloned freely and stored for use at a later time.</source>
          <target state="translated">Constructs a new &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; using a weak reference to itself. Attempting to upgrade the weak reference before this function returns will result in a &lt;code&gt;None&lt;/code&gt; value. However, the weak reference may be cloned freely and stored for use at a later time.</target>
        </trans-unit>
        <trans-unit id="2b5ee07d8a53a04501289d2d6ec137ad074fee56" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">新しい &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; 構築します。</target>
        </trans-unit>
        <trans-unit id="c88298f0487047ea1d3b1e23a64d138c3770a2e1" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;Arc&lt;/code&gt; with uninitialized contents, with the memory being filled with &lt;code&gt;0&lt;/code&gt; bytes.</source>
          <target state="translated">Constructs a new &lt;code&gt;Arc&lt;/code&gt; with uninitialized contents, with the memory being filled with &lt;code&gt;0&lt;/code&gt; bytes.</target>
        </trans-unit>
        <trans-unit id="7d102bc18138ea987f3bda4b128d3c0cca3ef892" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;Arc&lt;/code&gt; with uninitialized contents.</source>
          <target state="translated">Constructs a new &lt;code&gt;Arc&lt;/code&gt; with uninitialized contents.</target>
        </trans-unit>
        <trans-unit id="e50583fa67c0c469c63f42eb95f2f2a23be5342d" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;Box&lt;/code&gt; with uninitialized contents, with the memory being filled with &lt;code&gt;0&lt;/code&gt; bytes in the provided allocator.</source>
          <target state="translated">提供されたアロケータでメモリが &lt;code&gt;0&lt;/code&gt; バイトで満たされている、初期化されていない内容の新しい &lt;code&gt;Box&lt;/code&gt; を構築します。</target>
        </trans-unit>
        <trans-unit id="df52ed326fe1e1fe65231aea4b694bd8f2117fe0" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;Box&lt;/code&gt; with uninitialized contents, with the memory being filled with &lt;code&gt;0&lt;/code&gt; bytes.</source>
          <target state="translated">Constructs a new &lt;code&gt;Box&lt;/code&gt; with uninitialized contents, with the memory being filled with &lt;code&gt;0&lt;/code&gt; bytes.</target>
        </trans-unit>
        <trans-unit id="649bfb0939e9db8b8976681d027864024cfa1478" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;Command&lt;/code&gt; for launching the program at path &lt;code&gt;program&lt;/code&gt;, with the following default configuration:</source>
          <target state="translated">次のデフォルト設定で、プログラムをパス &lt;code&gt;program&lt;/code&gt; で起動するための新しい &lt;code&gt;Command&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="43826142799b2999b4dc4a806f8dd1fe399fc671" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;Pin&amp;lt;Arc&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;. If &lt;code&gt;T&lt;/code&gt; does not implement &lt;code&gt;Unpin&lt;/code&gt;, then &lt;code&gt;data&lt;/code&gt; will be pinned in memory and unable to be moved.</source>
          <target state="translated">新しい &lt;code&gt;Pin&amp;lt;Arc&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; 構築します。 &lt;code&gt;T&lt;/code&gt; が &lt;code&gt;Unpin&lt;/code&gt; を実装しない場合、 &lt;code&gt;data&lt;/code&gt; はメモリに固定され、移動できなくなります。</target>
        </trans-unit>
        <trans-unit id="ae427ad6bb072d10189a3e2d84050f0f140561cc" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;Pin&amp;lt;Box&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;. If &lt;code&gt;T&lt;/code&gt; does not implement &lt;code&gt;Unpin&lt;/code&gt;, then &lt;code&gt;x&lt;/code&gt; will be pinned in memory and unable to be moved.</source>
          <target state="translated">新しい &lt;code&gt;Pin&amp;lt;Box&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; 構築します。 &lt;code&gt;T&lt;/code&gt; が &lt;code&gt;Unpin&lt;/code&gt; を実装しない場合、 &lt;code&gt;x&lt;/code&gt; はメモリに固定され、移動できなくなります。</target>
        </trans-unit>
        <trans-unit id="64b8a166601e7004574b6bbbd8ed3d0c86d5d60b" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;Pin&amp;lt;Box&amp;lt;T, A&amp;gt;&amp;gt;&lt;/code&gt;. If &lt;code&gt;T&lt;/code&gt; does not implement &lt;code&gt;Unpin&lt;/code&gt;, then &lt;code&gt;x&lt;/code&gt; will be pinned in memory and unable to be moved.</source>
          <target state="translated">新しい &lt;code&gt;Pin&amp;lt;Box&amp;lt;T, A&amp;gt;&amp;gt;&lt;/code&gt; ます。 &lt;code&gt;T&lt;/code&gt; が &lt;code&gt;Unpin&lt;/code&gt; を実装していない場合、 &lt;code&gt;x&lt;/code&gt; はメモリに固定され、移動できなくなります。</target>
        </trans-unit>
        <trans-unit id="a399cf74c0003f482d072c406bfaa06d0858df11" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;Pin&amp;lt;Rc&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;. If &lt;code&gt;T&lt;/code&gt; does not implement &lt;code&gt;Unpin&lt;/code&gt;, then &lt;code&gt;value&lt;/code&gt; will be pinned in memory and unable to be moved.</source>
          <target state="translated">新しい &lt;code&gt;Pin&amp;lt;Rc&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; 構築します。 &lt;code&gt;T&lt;/code&gt; が &lt;code&gt;Unpin&lt;/code&gt; を実装しない場合、 &lt;code&gt;value&lt;/code&gt; はメモリに固定され、移動できなくなります。</target>
        </trans-unit>
        <trans-unit id="215abb63e46a71a3b3af6cf534181da957a5b6b1" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;RandomState&lt;/code&gt; that is initialized with random keys.</source>
          <target state="translated">ランダムなキーで初期化される新しい &lt;code&gt;RandomState&lt;/code&gt; を構築します。</target>
        </trans-unit>
        <trans-unit id="990966799ffab96bdb51fee33a4b0a380c6924bf" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;RandomState&lt;/code&gt;.</source>
          <target state="translated">新しい &lt;code&gt;RandomState&lt;/code&gt; を構築します。</target>
        </trans-unit>
        <trans-unit id="fe1b4a150fec681af363353b665e9d20e4b38054" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; using a weak reference to itself. Attempting to upgrade the weak reference before this function returns will result in a &lt;code&gt;None&lt;/code&gt; value. However, the weak reference may be cloned freely and stored for use at a later time.</source>
          <target state="translated">Constructs a new &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; using a weak reference to itself. Attempting to upgrade the weak reference before this function returns will result in a &lt;code&gt;None&lt;/code&gt; value. However, the weak reference may be cloned freely and stored for use at a later time.</target>
        </trans-unit>
        <trans-unit id="29c159dd2b62a424ed3d56cf3633b65ceb2506a2" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">新しい &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; 構築します。</target>
        </trans-unit>
        <trans-unit id="22fd3fb3d0a39cabe1183235985b3de87d115369" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;Rc&lt;/code&gt; with uninitialized contents, with the memory being filled with &lt;code&gt;0&lt;/code&gt; bytes.</source>
          <target state="translated">Constructs a new &lt;code&gt;Rc&lt;/code&gt; with uninitialized contents, with the memory being filled with &lt;code&gt;0&lt;/code&gt; bytes.</target>
        </trans-unit>
        <trans-unit id="576804b3ee3156ebe8dcf88fab60835feeed0321" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;Rc&lt;/code&gt; with uninitialized contents.</source>
          <target state="translated">Constructs a new &lt;code&gt;Rc&lt;/code&gt; with uninitialized contents.</target>
        </trans-unit>
        <trans-unit id="d35c712814a156cfce1cf5769068ee860f7dd9ed" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt;, allocating memory for &lt;code&gt;T&lt;/code&gt; without initializing it. Calling &lt;a href=&quot;../rc/struct.weak#method.upgrade&quot;&gt;&lt;code&gt;upgrade&lt;/code&gt;&lt;/a&gt; on the return value always gives &lt;a href=&quot;../option/enum.option&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">新しい &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt; 構築し、初期化せずに &lt;code&gt;T&lt;/code&gt; にメモリを割り当てます。戻り値で&lt;a href=&quot;../rc/struct.weak#method.upgrade&quot;&gt; &lt;code&gt;upgrade&lt;/code&gt; &lt;/a&gt;を呼び出すと、常に&lt;a href=&quot;../option/enum.option&quot;&gt; &lt;code&gt;None&lt;/code&gt; が&lt;/a&gt;返されます。</target>
        </trans-unit>
        <trans-unit id="d62aa3d7fbe44f6f235db78cd78d519c5b8e5aa7" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt;, allocating memory for &lt;code&gt;T&lt;/code&gt; without initializing it. Calling &lt;a href=&quot;struct.weak#method.upgrade&quot;&gt;&lt;code&gt;upgrade&lt;/code&gt;&lt;/a&gt; on the return value always gives &lt;a href=&quot;../option/enum.option&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">新しい &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt; 構築し、初期化せずに &lt;code&gt;T&lt;/code&gt; にメモリを割り当てます。戻り値で&lt;a href=&quot;struct.weak#method.upgrade&quot;&gt; &lt;code&gt;upgrade&lt;/code&gt; &lt;/a&gt;を呼び出すと、常に&lt;a href=&quot;../option/enum.option&quot;&gt; &lt;code&gt;None&lt;/code&gt; が&lt;/a&gt;返されます。</target>
        </trans-unit>
        <trans-unit id="4dffbc58ed3de5d551c97a8d7722980dcaf10e59" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt;, without allocating any memory. Calling &lt;a href=&quot;#method.upgrade&quot;&gt;&lt;code&gt;upgrade&lt;/code&gt;&lt;/a&gt; on the return value always gives &lt;a href=&quot;../option/enum.option&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">メモリを割り当てずに、新しい &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt; 構築します。戻り値で&lt;a href=&quot;#method.upgrade&quot;&gt; &lt;code&gt;upgrade&lt;/code&gt; &lt;/a&gt;を呼び出すと、常に&lt;a href=&quot;../option/enum.option&quot;&gt; &lt;code&gt;None&lt;/code&gt; が&lt;/a&gt;返されます。</target>
        </trans-unit>
        <trans-unit id="37675f48642a627d4001158a31a99e23445b1859" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt;, without allocating any memory. Calling &lt;a href=&quot;struct.weak#method.upgrade&quot;&gt;&lt;code&gt;upgrade&lt;/code&gt;&lt;/a&gt; on the return value always gives &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">メモリを割り当てずに、新しい &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt; 構築します。戻り値で&lt;a href=&quot;struct.weak#method.upgrade&quot;&gt; &lt;code&gt;upgrade&lt;/code&gt; &lt;/a&gt;を呼び出すと、常に&lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; が&lt;/a&gt;返されます。</target>
        </trans-unit>
        <trans-unit id="9747ec04ca2c6d973b07ff35cc198234eb4483f5" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt;, without allocating memory. Calling &lt;a href=&quot;../sync/struct.weak#method.upgrade&quot;&gt;&lt;code&gt;upgrade&lt;/code&gt;&lt;/a&gt; on the return value always gives &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">メモリを割り当てずに、新しい &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt; 構築します。戻り値で&lt;a href=&quot;../sync/struct.weak#method.upgrade&quot;&gt; &lt;code&gt;upgrade&lt;/code&gt; &lt;/a&gt;を呼び出すと、常に&lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; が&lt;/a&gt;返されます。</target>
        </trans-unit>
        <trans-unit id="972500561761a1c7caaad085a7d96b8402a9a8d2" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt;, without allocating memory. Calling &lt;a href=&quot;struct.weak#method.upgrade&quot;&gt;&lt;code&gt;upgrade&lt;/code&gt;&lt;/a&gt; on the return value always gives &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">メモリを割り当てずに、新しい &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt; 構築します。戻り値で&lt;a href=&quot;struct.weak#method.upgrade&quot;&gt; &lt;code&gt;upgrade&lt;/code&gt; &lt;/a&gt;を呼び出すと、常に&lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; が&lt;/a&gt;返されます。</target>
        </trans-unit>
        <trans-unit id="4496cc6d5d5745f6e13649d89706ecf389ae66e3" translate="yes" xml:space="preserve">
          <source>Constructs a new I/O object from the specified raw handle.</source>
          <target state="translated">指定された生のハンドルから新しいI/Oオブジェクトを構築します。</target>
        </trans-unit>
        <trans-unit id="891fa8466fd55fe7d4ddedfb308499932510af07" translate="yes" xml:space="preserve">
          <source>Constructs a new I/O object from the specified raw handle. &lt;a href=&quot;../os/windows/io/trait.fromrawhandle#tymethod.from_raw_handle&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">指定されたrawハンドルから新しいI / Oオブジェクトを構築します。&lt;a href=&quot;../os/windows/io/trait.fromrawhandle#tymethod.from_raw_handle&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="613eed9ea3fdf48d54478112c74673a636810b9c" translate="yes" xml:space="preserve">
          <source>Constructs a new atomically reference-counted slice with uninitialized contents, with the memory being filled with &lt;code&gt;0&lt;/code&gt; bytes.</source>
          <target state="translated">Constructs a new atomically reference-counted slice with uninitialized contents, with the memory being filled with &lt;code&gt;0&lt;/code&gt; bytes.</target>
        </trans-unit>
        <trans-unit id="aac50188186d37638f6847cc875268b1dd9775a6" translate="yes" xml:space="preserve">
          <source>Constructs a new atomically reference-counted slice with uninitialized contents.</source>
          <target state="translated">初期化されていない内容を持つ、原子的に参照カウントされた新しいスライスを作成します。</target>
        </trans-unit>
        <trans-unit id="5047c141f7a3e5402f2baa739f1857375f3b7486" translate="yes" xml:space="preserve">
          <source>Constructs a new box with uninitialized contents in the provided allocator.</source>
          <target state="translated">指定されたアロケータに初期化されていない内容の新しいボックスを作成します。</target>
        </trans-unit>
        <trans-unit id="475b93712d93e1f5941fff4b6beaa6a60da0b3df" translate="yes" xml:space="preserve">
          <source>Constructs a new box with uninitialized contents.</source>
          <target state="translated">初期化されていない内容の新しいボックスを作成します。</target>
        </trans-unit>
        <trans-unit id="b10b58214eb80aef6b35ccced0027474565148c7" translate="yes" xml:space="preserve">
          <source>Constructs a new boxed slice with uninitialized contents in the provided allocator, with the memory being filled with &lt;code&gt;0&lt;/code&gt; bytes.</source>
          <target state="translated">提供されたアロケータに初期化されていない内容で新しいボックス化されたスライスを構築し、メモリは &lt;code&gt;0&lt;/code&gt; バイトで満たされます。</target>
        </trans-unit>
        <trans-unit id="f384a68de9a17dcdc8148b48d343381acd84a96c" translate="yes" xml:space="preserve">
          <source>Constructs a new boxed slice with uninitialized contents in the provided allocator.</source>
          <target state="translated">指定されたアロケータ内の初期化されていないコンテンツを持つ新しい箱型スライスを作成します。</target>
        </trans-unit>
        <trans-unit id="6cb9760283dc789d7479d33e3be61915965ca26e" translate="yes" xml:space="preserve">
          <source>Constructs a new boxed slice with uninitialized contents, with the memory being filled with &lt;code&gt;0&lt;/code&gt; bytes.</source>
          <target state="translated">Constructs a new boxed slice with uninitialized contents, with the memory being filled with &lt;code&gt;0&lt;/code&gt; bytes.</target>
        </trans-unit>
        <trans-unit id="811e1721217879db3e069afe508778238f833646" translate="yes" xml:space="preserve">
          <source>Constructs a new boxed slice with uninitialized contents.</source>
          <target state="translated">初期化されていない内容の新しい箱入りスライスを作成します。</target>
        </trans-unit>
        <trans-unit id="0b9c3b3ca4291ed6fcd5ea6cf2d68b2a60a896b0" translate="yes" xml:space="preserve">
          <source>Constructs a new empty &lt;code&gt;OsString&lt;/code&gt;.</source>
          <target state="translated">新しい空の &lt;code&gt;OsString&lt;/code&gt; を構築します。</target>
        </trans-unit>
        <trans-unit id="116c6c6d0d202935ba424bddf04e7be3584f242c" translate="yes" xml:space="preserve">
          <source>Constructs a new handle to an empty reader.</source>
          <target state="translated">空のリーダに対して新しいハンドルを作成します。</target>
        </trans-unit>
        <trans-unit id="f05995d5c0d63623f4e2f49a06500cf9a30d18e1" translate="yes" xml:space="preserve">
          <source>Constructs a new handle to the standard error of the current process.</source>
          <target state="translated">現在のプロセスの標準エラーに対する新しいハンドルを構築します。</target>
        </trans-unit>
        <trans-unit id="aa3e3bdc4cd18bdadba2a89e241df3ea035b45e1" translate="yes" xml:space="preserve">
          <source>Constructs a new handle to the standard input of the current process.</source>
          <target state="translated">現在のプロセスの標準入力に新しいハンドルを作成します。</target>
        </trans-unit>
        <trans-unit id="5e1ca399f6f2acfa795d1198650cfad744ff098c" translate="yes" xml:space="preserve">
          <source>Constructs a new handle to the standard output of the current process.</source>
          <target state="translated">現在のプロセスの標準出力への新しいハンドルを作成します。</target>
        </trans-unit>
        <trans-unit id="8068787f0a385d84fcc2339e6a02bb7b6185dca6" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of &lt;code&gt;Self&lt;/code&gt; from the given raw file descriptor.</source>
          <target state="translated">指定された生ファイル記述子から &lt;code&gt;Self&lt;/code&gt; の新しいインスタンスを構築します。</target>
        </trans-unit>
        <trans-unit id="888a632746173833b62421f6d1eb4ed033b33886" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of &lt;code&gt;Self&lt;/code&gt; from the given raw file descriptor. &lt;a href=&quot;../io/trait.fromrawfd#tymethod.from_raw_fd&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">指定された生ファイル記述子から &lt;code&gt;Self&lt;/code&gt; の新しいインスタンスを構築します。&lt;a href=&quot;../io/trait.fromrawfd#tymethod.from_raw_fd&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="257b5d25f69c7d79d480f9e3b2d10cdf0fe04dbc" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of &lt;code&gt;Self&lt;/code&gt; from the given raw file descriptor. &lt;a href=&quot;../os/unix/io/trait.fromrawfd#tymethod.from_raw_fd&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">指定された生ファイル記述子から &lt;code&gt;Self&lt;/code&gt; の新しいインスタンスを構築します。&lt;a href=&quot;../os/unix/io/trait.fromrawfd#tymethod.from_raw_fd&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9b2978cc576a95afa988eb0b80e27846b2728aaa" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of &lt;code&gt;Self&lt;/code&gt; from the given raw file descriptor. &lt;a href=&quot;trait.fromrawfd#tymethod.from_raw_fd&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Constructs a new instance of &lt;code&gt;Self&lt;/code&gt; from the given raw file descriptor. &lt;a href=&quot;trait.fromrawfd#tymethod.from_raw_fd&quot;&gt;Read more&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="798e09ea7e6d21d1a7a290870721ce593181a669" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of &lt;code&gt;UnsafeCell&lt;/code&gt; which will wrap the specified value.</source>
          <target state="translated">指定された値をラップする &lt;code&gt;UnsafeCell&lt;/code&gt; の新しいインスタンスを構築します。</target>
        </trans-unit>
        <trans-unit id="6d790e16a3f6885c0e9298b961c21581f0de2364" translate="yes" xml:space="preserve">
          <source>Constructs a new pin by mapping the interior value.</source>
          <target state="translated">内部の値をマッピングして新しいピンを作成します。</target>
        </trans-unit>
        <trans-unit id="d2a619eede861b59500487f88ec782d7506e77d0" translate="yes" xml:space="preserve">
          <source>Constructs a new reference-counted slice with uninitialized contents, with the memory being filled with &lt;code&gt;0&lt;/code&gt; bytes.</source>
          <target state="translated">Constructs a new reference-counted slice with uninitialized contents, with the memory being filled with &lt;code&gt;0&lt;/code&gt; bytes.</target>
        </trans-unit>
        <trans-unit id="17fcb8d41c58515295663f6e5d0c9cc860a7dd66" translate="yes" xml:space="preserve">
          <source>Constructs a new reference-counted slice with uninitialized contents.</source>
          <target state="translated">初期化されていない内容の新しい参照カウント付きスライスを作成します。</target>
        </trans-unit>
        <trans-unit id="6245a960f2e8e31321d445308a392077c13592d3" translate="yes" xml:space="preserve">
          <source>Constructs a new, empty &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; with the specified capacity.</source>
          <target state="translated">指定された容量で新しい空の &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; を構築します。</target>
        </trans-unit>
        <trans-unit id="e517bb17135772eb56399ec87ae5af65fb2c2277" translate="yes" xml:space="preserve">
          <source>Constructs a new, empty &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">新しい空の &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; 構築します。</target>
        </trans-unit>
        <trans-unit id="c483b932fe0ac037c48e1f8f941878a817dcd349" translate="yes" xml:space="preserve">
          <source>Constructs a new, empty &lt;code&gt;Vec&amp;lt;T, A&amp;gt;&lt;/code&gt; with the specified capacity with the provided allocator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3f1bc0125aab87325ffdb8527632044a7162a8c" translate="yes" xml:space="preserve">
          <source>Constructs a new, empty &lt;code&gt;Vec&amp;lt;T, A&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5888c903b26dbdee946f0d3a7f47c6c4e116bc5d" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; from a raw pointer.</source>
          <target state="translated">Constructs an &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; from a raw pointer.</target>
        </trans-unit>
        <trans-unit id="40a5e764cd81a0a84cd27bce3deb18f469f7f256" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;Arc&lt;/code&gt; from a raw pointer.</source>
          <target state="translated">構築 &lt;code&gt;Arc&lt;/code&gt; 生のポインタから。</target>
        </trans-unit>
        <trans-unit id="b13fbfaf79edff641750b81be4d68684bd7165d5" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; from a raw pointer.</source>
          <target state="translated">Constructs an &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; from a raw pointer.</target>
        </trans-unit>
        <trans-unit id="8a6aebd0d964532473b10d41481ee3f5cfcc2c32" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;Rc&lt;/code&gt; from a raw pointer.</source>
          <target state="translated">生のポインタから &lt;code&gt;Rc&lt;/code&gt; を構築します。</target>
        </trans-unit>
        <trans-unit id="d631447123e0cc99a6667992c531ed32bf02a6c4" translate="yes" xml:space="preserve">
          <source>Constructs an empty &lt;code&gt;OsString&lt;/code&gt;.</source>
          <target state="translated">空の &lt;code&gt;OsString&lt;/code&gt; を構築します。</target>
        </trans-unit>
        <trans-unit id="271e62a3037c0958e8dca74d136cd3800cb7f175" translate="yes" xml:space="preserve">
          <source>Constructs parameters for the other string-formatting macros.</source>
          <target state="translated">他の文字列整形マクロのパラメータを作成します。</target>
        </trans-unit>
        <trans-unit id="89a179e9a409c4115e9a115ce27b5971f932af08" translate="yes" xml:space="preserve">
          <source>Constructs the associated searcher from &lt;code&gt;self&lt;/code&gt; and the &lt;code&gt;haystack&lt;/code&gt; to search in.</source>
          <target state="translated">関連するサーチャーを &lt;code&gt;self&lt;/code&gt; と &lt;code&gt;haystack&lt;/code&gt; から検索して構築します。</target>
        </trans-unit>
        <trans-unit id="7309e2aff6564a87fe9a9b85b80909228512a2c4" translate="yes" xml:space="preserve">
          <source>Constructs the associated searcher from &lt;code&gt;self&lt;/code&gt; and the &lt;code&gt;haystack&lt;/code&gt; to search in. &lt;a href=&quot;../str/pattern/trait.pattern#tymethod.into_searcher&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; と &lt;code&gt;haystack&lt;/code&gt; から関連するサーチャーを構築して検索します。&lt;a href=&quot;../str/pattern/trait.pattern#tymethod.into_searcher&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ccb2d5fc12ec8726bc284cc4242715d42e88a2b3" translate="yes" xml:space="preserve">
          <source>Constructs the associated searcher from &lt;code&gt;self&lt;/code&gt; and the &lt;code&gt;haystack&lt;/code&gt; to search in. &lt;a href=&quot;str/pattern/trait.pattern#tymethod.into_searcher&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; と &lt;code&gt;haystack&lt;/code&gt; から関連するサーチャーを構築して検索します。&lt;a href=&quot;str/pattern/trait.pattern#tymethod.into_searcher&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="22d81e15ebd96f4416112e3bf52a00326dd5f3df" translate="yes" xml:space="preserve">
          <source>Consume a number if it's equal to 0.</source>
          <target state="translated">0に等しい場合は数字を消費します。</target>
        </trans-unit>
        <trans-unit id="370a9376e2986b168c89afaaaa3068a4df77bb5b" translate="yes" xml:space="preserve">
          <source>Consume and return the next item if it is equal to &lt;code&gt;expected&lt;/code&gt;.</source>
          <target state="translated">Consume and return the next item if it is equal to &lt;code&gt;expected&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="00bf468542f9fe4f2a71921c00ab77f926485798" translate="yes" xml:space="preserve">
          <source>Consume and return the next value of this iterator if a condition is true.</source>
          <target state="translated">条件が真であれば、このイテレータの次の値を消費して返します。</target>
        </trans-unit>
        <trans-unit id="e0c72bbf89fe0c2fb08073ad1eaaa085ec0a05a5" translate="yes" xml:space="preserve">
          <source>Consume any number less than 10.</source>
          <target state="translated">10以下の数字を消費する。</target>
        </trans-unit>
        <trans-unit id="f9376a17162f5057921041fab272b966366e79b4" translate="yes" xml:space="preserve">
          <source>Consumes &lt;code&gt;self&lt;/code&gt; while expecting &lt;a href=&quot;enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; and returning nothing.</source>
          <target state="translated">&lt;a href=&quot;enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;を期待し、何も返さない間に &lt;code&gt;self&lt;/code&gt; を消費します。</target>
        </trans-unit>
        <trans-unit id="bedcb0457115ca890514e48dd2337e07cf23fd4a" translate="yes" xml:space="preserve">
          <source>Consumes an iterator, creating two collections from it.</source>
          <target state="translated">イテレータを消費し、そこから2つのコレクションを作成します。</target>
        </trans-unit>
        <trans-unit id="2b3b9a04bd76d2da72bfeeec2a4468dc867ab8fd" translate="yes" xml:space="preserve">
          <source>Consumes an iterator, creating two collections from it. &lt;a href=&quot;../../../iter/trait.iterator#method.partition&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">イテレータを使用して、そこから2つのコレクションを作成します。&lt;a href=&quot;../../../iter/trait.iterator#method.partition&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="88586247e3556ec2c7f344e071d5ec652c0131da" translate="yes" xml:space="preserve">
          <source>Consumes an iterator, creating two collections from it. &lt;a href=&quot;../../iter/trait.iterator#method.partition&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">イテレータを使用して、そこから2つのコレクションを作成します。&lt;a href=&quot;../../iter/trait.iterator#method.partition&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="201aac3748d0121d4b7ad2c464d8509e6d163f83" translate="yes" xml:space="preserve">
          <source>Consumes an iterator, creating two collections from it. &lt;a href=&quot;../iter/trait.iterator#method.partition&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">イテレータを使用して、そこから2つのコレクションを作成します。&lt;a href=&quot;../iter/trait.iterator#method.partition&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="40e555111daf3d9eda14463aba865f2b701cb0a7" translate="yes" xml:space="preserve">
          <source>Consumes an iterator, creating two collections from it. &lt;a href=&quot;iter/trait.iterator#method.partition&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">イテレータを使用して、そこから2つのコレクションを作成します。&lt;a href=&quot;iter/trait.iterator#method.partition&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="924d8f9d1a6fafc5d85b222fe6e13af00fb63dc0" translate="yes" xml:space="preserve">
          <source>Consumes an iterator, creating two collections from it. &lt;a href=&quot;trait.iterator#method.partition&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">イテレータを使用して、そこから2つのコレクションを作成します。&lt;a href=&quot;trait.iterator#method.partition&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="89e5c19b5f19640841a9721b2bb77de22f860284" translate="yes" xml:space="preserve">
          <source>Consumes and leaks the &lt;code&gt;Box&lt;/code&gt;, returning a mutable reference, &lt;code&gt;&amp;amp;'a mut T&lt;/code&gt;. Note that the type &lt;code&gt;T&lt;/code&gt; must outlive the chosen lifetime &lt;code&gt;'a&lt;/code&gt;. If the type has only static references, or none at all, then this may be chosen to be &lt;code&gt;'static&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Box&lt;/code&gt; を消費してリークし、可変参照 &lt;code&gt;&amp;amp;'a mut T&lt;/code&gt; 返します。タイプ &lt;code&gt;T&lt;/code&gt; は、選択したライフタイム &lt;code&gt;'a&lt;/code&gt; よりも長く存続する必要があることに注意してください。タイプに静的参照のみがあるか、まったくない場合は、これを &lt;code&gt;'static&lt;/code&gt; 選択できます。</target>
        </trans-unit>
        <trans-unit id="98751f731e6bdb707774989fb229533649e140b4" translate="yes" xml:space="preserve">
          <source>Consumes and leaks the &lt;code&gt;Vec&lt;/code&gt;, returning a mutable reference to the contents, &lt;code&gt;&amp;amp;'a mut [T]&lt;/code&gt;. Note that the type &lt;code&gt;T&lt;/code&gt; must outlive the chosen lifetime &lt;code&gt;'a&lt;/code&gt;. If the type has only static references, or none at all, then this may be chosen to be &lt;code&gt;'static&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Vec&lt;/code&gt; を消費してリークし、コンテンツへの可変参照を返します。 &lt;code&gt;&amp;amp;'a mut [T]&lt;/code&gt; 。タイプ &lt;code&gt;T&lt;/code&gt; は、選択したライフタイム &lt;code&gt;'a&lt;/code&gt; よりも長持ちする必要があることに注意してください。タイプに静的参照しかない場合、またはまったくない場合は、 &lt;code&gt;'static&lt;/code&gt; として選択できます。</target>
        </trans-unit>
        <trans-unit id="d715de9a79a7715766f499d54dad8a4e24b3c04e" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;a href=&quot;struct.intoinnererror&quot;&gt;&lt;code&gt;IntoInnerError&lt;/code&gt;&lt;/a&gt; and returns the error which caused the call to &lt;a href=&quot;struct.bufwriter#method.into_inner&quot;&gt;&lt;code&gt;BufWriter::into_inner()&lt;/code&gt;&lt;/a&gt; to fail, and the underlying writer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="706b0e8ce05d99a02eaac142103540c5053567da" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;a href=&quot;struct.intoinnererror&quot;&gt;&lt;code&gt;IntoInnerError&lt;/code&gt;&lt;/a&gt; and returns the error which caused the call to &lt;a href=&quot;struct.bufwriter#method.into_inner&quot;&gt;&lt;code&gt;BufWriter::into_inner()&lt;/code&gt;&lt;/a&gt; to fail. Unlike &lt;code&gt;error&lt;/code&gt;, this can be used to obtain ownership of the underlying error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8af1057c474d4e5b60fe3f6bb451a66ce504cdf9" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;Arc&lt;/code&gt;, returning the wrapped pointer as &lt;code&gt;NonNull&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Arc&lt;/code&gt; を消費し、ラップされたポインターを &lt;code&gt;NonNull&amp;lt;T&amp;gt;&lt;/code&gt; として返します。</target>
        </trans-unit>
        <trans-unit id="e6bd0845b9e221ba4597bbc9758cc02d103f3270" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;Arc&lt;/code&gt;, returning the wrapped pointer.</source>
          <target state="translated">&lt;code&gt;Arc&lt;/code&gt; を消費し、ラップされたポインターを返します。</target>
        </trans-unit>
        <trans-unit id="dbfefcefd972c3d0ed938c94fd910b3064d3075b" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;BinaryHeap&lt;/code&gt; and returns a vector in sorted (ascending) order.</source>
          <target state="translated">&lt;code&gt;BinaryHeap&lt;/code&gt; を消費し、並べ替えられた（昇順の）ベクトルを返します。</target>
        </trans-unit>
        <trans-unit id="342ce6d3fd37b857cfa38575d20c7716c49a55ad" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;BinaryHeap&lt;/code&gt; and returns the underlying vector in arbitrary order.</source>
          <target state="translated">&lt;code&gt;BinaryHeap&lt;/code&gt; を消費し、基になるベクトルを任意の順序で返します。</target>
        </trans-unit>
        <trans-unit id="62813ad521b43197f5da6c8bde9bff71fe925b06" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;Box&lt;/code&gt;, returning a wrapped raw pointer and the allocator.</source>
          <target state="translated">&lt;code&gt;Box&lt;/code&gt; を消費し、ラップされた生のポインタとアロケータを返します。</target>
        </trans-unit>
        <trans-unit id="92e7ae7c67396f041082c3cc7372b3affda1ee33" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;Box&lt;/code&gt;, returning a wrapped raw pointer.</source>
          <target state="translated">&lt;code&gt;Box&lt;/code&gt; を消費し、ラップされた生のポインタを返します。</target>
        </trans-unit>
        <trans-unit id="bb330e9a211208681b31ba3a9b728930bc8f1ac1" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;Box&lt;/code&gt;, returning the wrapped pointer as &lt;code&gt;NonNull&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Box&lt;/code&gt; を消費し、ラップされたポインターを &lt;code&gt;NonNull&amp;lt;T&amp;gt;&lt;/code&gt; として返します。</target>
        </trans-unit>
        <trans-unit id="d65deb87cbead640f5a8e7cbca5d350987dc2adf" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;CString&lt;/code&gt; and returns the underlying byte buffer.</source>
          <target state="translated">&lt;code&gt;CString&lt;/code&gt; を消費し、基になるバイトバッファーを返します。</target>
        </trans-unit>
        <trans-unit id="6a1ca546e57f882d5b6895023def69c2697ef0d1" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;CString&lt;/code&gt; and transfers ownership of the string to a C caller.</source>
          <target state="translated">&lt;code&gt;CString&lt;/code&gt; を消費し、文字列の所有権をCの呼び出し元に転送します。</target>
        </trans-unit>
        <trans-unit id="69e4d5bd9aa8f33d274d633ff376dd3db7d70f60" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;Chain&lt;/code&gt;, returning the wrapped readers.</source>
          <target state="translated">&lt;code&gt;Chain&lt;/code&gt; 消費し、ラップされたリーダーを返します。</target>
        </trans-unit>
        <trans-unit id="8a04c5d6a932090e711897e776ba8d8350303049" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;Error&lt;/code&gt;, returning its inner error (if any).</source>
          <target state="translated">&lt;code&gt;Error&lt;/code&gt; を消費し、内部エラー（存在する場合）を返します。</target>
        </trans-unit>
        <trans-unit id="e56ff82d9a44becca8536c3779b602bb282b38b6" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;PathBuf&lt;/code&gt;, yielding its internal &lt;a href=&quot;../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt; storage.</source>
          <target state="translated">消費 &lt;code&gt;PathBuf&lt;/code&gt; をその内部得&lt;a href=&quot;../ffi/struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; の&lt;/a&gt;ストレージ。</target>
        </trans-unit>
        <trans-unit id="fcae5d3c6431bd470bfc52ba96771acd8c041846" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;Rc&lt;/code&gt;, returning the wrapped pointer as &lt;code&gt;NonNull&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Rc&lt;/code&gt; を消費し、ラップされたポインターを &lt;code&gt;NonNull&amp;lt;T&amp;gt;&lt;/code&gt; として返します。</target>
        </trans-unit>
        <trans-unit id="d4a2e2345591515540d5dc5605c65797209f4156" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;Rc&lt;/code&gt;, returning the wrapped pointer.</source>
          <target state="translated">&lt;code&gt;Rc&lt;/code&gt; を消費し、ラップされたポインターを返します。</target>
        </trans-unit>
        <trans-unit id="1b11918ce5d9a31884715321a9dfca45f209a871" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;RefCell&lt;/code&gt;, returning the wrapped value.</source>
          <target state="translated">&lt;code&gt;RefCell&lt;/code&gt; を消費し、ラップされた値を返します。</target>
        </trans-unit>
        <trans-unit id="fcaf433c0e03084528a27b73b71de0bb47aecf28" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;SyncOnceCell&lt;/code&gt;, returning the wrapped value. Returns &lt;code&gt;None&lt;/code&gt; if the cell was empty.</source>
          <target state="translated">&lt;code&gt;SyncOnceCell&lt;/code&gt; を消費し、ラップされた値を返します。セルが空の場合は &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="e62148b7382db0e8e3123660c439b6412df80776" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;Take&lt;/code&gt;, returning the wrapped reader.</source>
          <target state="translated">&lt;code&gt;Take&lt;/code&gt; を消費し、ラップされたリーダーを返します。</target>
        </trans-unit>
        <trans-unit id="e1bc60e97d53971da14a3c560acf7dc4df8a80ba" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;VecDeque&lt;/code&gt; into a front-to-back iterator yielding elements by value.</source>
          <target state="translated">消費 &lt;code&gt;VecDeque&lt;/code&gt; は前後の値での要素を返すイテレータに。</target>
        </trans-unit>
        <trans-unit id="c48ddb001736220abc7376d88718761306f4da9e" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt; and turns it into a raw pointer.</source>
          <target state="translated">&lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt; を消費し、それを生のポインターに変換します。</target>
        </trans-unit>
        <trans-unit id="ceb40caadc1f67b465ff185739de319d6f6c574d" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;self&lt;/code&gt; argument then, if &lt;a href=&quot;#variant.Some&quot;&gt;&lt;code&gt;Some&lt;/code&gt;&lt;/a&gt;, returns the contained value, otherwise if &lt;a href=&quot;#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, returns the &lt;a href=&quot;../default/trait.default#tymethod.default&quot;&gt;default value&lt;/a&gt; for that type.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 引数を消費し、&lt;a href=&quot;#variant.Some&quot;&gt; &lt;code&gt;Some&lt;/code&gt; の&lt;/a&gt;場合は含まれている値を返し、それ以外の場合は&lt;a href=&quot;#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; の&lt;/a&gt;&lt;a href=&quot;../default/trait.default#tymethod.default&quot;&gt;場合&lt;/a&gt;はその型のデフォルト値を返します。</target>
        </trans-unit>
        <trans-unit id="41d4facf8b6e6856a14545bcb1d2163523116304" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;self&lt;/code&gt; argument then, if &lt;a href=&quot;enum.option#variant.Some&quot;&gt;&lt;code&gt;Some&lt;/code&gt;&lt;/a&gt;, returns the contained value, otherwise if &lt;a href=&quot;enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, returns the &lt;a href=&quot;../default/trait.default#tymethod.default&quot;&gt;default value&lt;/a&gt; for that type.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 引数を消費し、&lt;a href=&quot;enum.option#variant.Some&quot;&gt; &lt;code&gt;Some&lt;/code&gt; の&lt;/a&gt;場合は含まれている値を返し、&lt;a href=&quot;enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; の&lt;/a&gt;&lt;a href=&quot;../default/trait.default#tymethod.default&quot;&gt;場合&lt;/a&gt;はその型のデフォルト値を返します。</target>
        </trans-unit>
        <trans-unit id="4b2c07656d35369d8e7938fb2e395e3c35affd45" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;self&lt;/code&gt; argument then, if &lt;a href=&quot;enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt;, returns the contained value, otherwise if &lt;a href=&quot;enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt;, returns the default value for that type.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 引数を消費し、&lt;a href=&quot;enum.result#variant.Ok&quot;&gt; &lt;code&gt;Ok&lt;/code&gt; の&lt;/a&gt;場合は含まれている値を返し、そうでない場合は&lt;a href=&quot;enum.result#variant.Err&quot;&gt; &lt;code&gt;Err&lt;/code&gt; の&lt;/a&gt;場合はその型のデフォルト値を返します。</target>
        </trans-unit>
        <trans-unit id="34fe0b52af65d33efb642000c8f316d35ad2cb7e" translate="yes" xml:space="preserve">
          <source>Consumes the atomic and returns the contained value.</source>
          <target state="translated">アトミックを消費し、含まれる値を返します。</target>
        </trans-unit>
        <trans-unit id="a0126c64ff4d13dd9a59d6e8f8b3da8e706aab72" translate="yes" xml:space="preserve">
          <source>Consumes the cell, returning the wrapped value.</source>
          <target state="translated">セルを消費し、ラップされた値を返します。</target>
        </trans-unit>
        <trans-unit id="731705c3859358317ba8e4addd045638b77ca497" translate="yes" xml:space="preserve">
          <source>Consumes the iterator, counting the number of iterations and returning it.</source>
          <target state="translated">イテレータを消費し、反復回数をカウントして返します。</target>
        </trans-unit>
        <trans-unit id="d49b1b99e5b43b4fea4a7448df0310a64a42a109" translate="yes" xml:space="preserve">
          <source>Consumes the iterator, counting the number of iterations and returning it. &lt;a href=&quot;../../../iter/trait.iterator#method.count&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">イテレータを消費し、反復回数をカウントしてそれを返します。&lt;a href=&quot;../../../iter/trait.iterator#method.count&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6a9e8a15576c6c45f19e491e1a0f6c9927669da9" translate="yes" xml:space="preserve">
          <source>Consumes the iterator, counting the number of iterations and returning it. &lt;a href=&quot;../../iter/trait.iterator#method.count&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">イテレータを消費し、反復回数をカウントしてそれを返します。&lt;a href=&quot;../../iter/trait.iterator#method.count&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="81265307b5b1725ae223692ec4449b623287e1ad" translate="yes" xml:space="preserve">
          <source>Consumes the iterator, counting the number of iterations and returning it. &lt;a href=&quot;../iter/trait.iterator#method.count&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">イテレータを消費し、反復回数をカウントしてそれを返します。&lt;a href=&quot;../iter/trait.iterator#method.count&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="86b467568f412dd2180154cf1628f8f8bbc91ace" translate="yes" xml:space="preserve">
          <source>Consumes the iterator, counting the number of iterations and returning it. &lt;a href=&quot;iter/trait.iterator#method.count&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">イテレータを消費し、反復回数をカウントしてそれを返します。&lt;a href=&quot;iter/trait.iterator#method.count&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e572ef4dfc4cf712fa35beddaab475a085a83534" translate="yes" xml:space="preserve">
          <source>Consumes the iterator, counting the number of iterations and returning it. &lt;a href=&quot;trait.iterator#method.count&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">イテレータを消費し、反復回数をカウントしてそれを返します。&lt;a href=&quot;trait.iterator#method.count&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e6be631c95fe8526ab43f34ee017c12cc0b57798" translate="yes" xml:space="preserve">
          <source>Consumes the iterator, returning the last element.</source>
          <target state="translated">イテレータを消費し、最後の要素を返します。</target>
        </trans-unit>
        <trans-unit id="320abeeba81eb3ba2ea0154eda792924469672eb" translate="yes" xml:space="preserve">
          <source>Consumes the iterator, returning the last element. &lt;a href=&quot;../../../iter/trait.iterator#method.last&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">イテレータを消費し、最後の要素を返します。&lt;a href=&quot;../../../iter/trait.iterator#method.last&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="11860f915e3e26bb4e0192fdfec253cd9f8eef9d" translate="yes" xml:space="preserve">
          <source>Consumes the iterator, returning the last element. &lt;a href=&quot;../../iter/trait.iterator#method.last&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">イテレータを消費し、最後の要素を返します。&lt;a href=&quot;../../iter/trait.iterator#method.last&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9b3b22900c5c10af1cd34efdd994d3cd9dc22fd4" translate="yes" xml:space="preserve">
          <source>Consumes the iterator, returning the last element. &lt;a href=&quot;../iter/trait.iterator#method.last&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">イテレータを消費し、最後の要素を返します。&lt;a href=&quot;../iter/trait.iterator#method.last&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2647f7d658be65626b4f9c09b98eada3baa9fddf" translate="yes" xml:space="preserve">
          <source>Consumes the iterator, returning the last element. &lt;a href=&quot;iter/trait.iterator#method.last&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">イテレータを消費し、最後の要素を返します。&lt;a href=&quot;iter/trait.iterator#method.last&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="39c3470339646bcd8941cb0a89249b8875387a4d" translate="yes" xml:space="preserve">
          <source>Consumes the iterator, returning the last element. &lt;a href=&quot;trait.iterator#method.last&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">イテレータを消費し、最後の要素を返します。&lt;a href=&quot;trait.iterator#method.last&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dff142fca06d91036831ead4f39c74323e28cd83" translate="yes" xml:space="preserve">
          <source>Consumes the list into an iterator yielding elements by value.</source>
          <target state="translated">リストを消費して、値ごとに要素を生成するイテレータにします。</target>
        </trans-unit>
        <trans-unit id="85722a3e6e43496f5586f71b89639cdbd07b242b" translate="yes" xml:space="preserve">
          <source>Consumes the thread, returning the raw pthread_t</source>
          <target state="translated">スレッドを消費し、生の pthread_t を返します。</target>
        </trans-unit>
        <trans-unit id="f016f360b0b7afde44df65dd499678daaf642fe9" translate="yes" xml:space="preserve">
          <source>Consumes the thread, returning the raw pthread_t &lt;a href=&quot;../os/unix/thread/trait.joinhandleext#tymethod.into_pthread_t&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">スレッドを消費し、生のpthread_t &lt;a href=&quot;../os/unix/thread/trait.joinhandleext#tymethod.into_pthread_t&quot;&gt;を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="a360cb81d6b6b9f7df7a732ad34b0519b5fce95e" translate="yes" xml:space="preserve">
          <source>Consumes this &lt;code&gt;RwLock&lt;/code&gt;, returning the underlying data.</source>
          <target state="translated">この &lt;code&gt;RwLock&lt;/code&gt; を使用して、基になるデータを返します。</target>
        </trans-unit>
        <trans-unit id="2b7be8c73bec0659f5fe075043f079bf58af79aa" translate="yes" xml:space="preserve">
          <source>Consumes this cursor, returning the underlying value.</source>
          <target state="translated">このカーソルを消費し、基礎となる値を返します。</target>
        </trans-unit>
        <trans-unit id="f476188742ab01fc54a3051d770d35dfff2e6785" translate="yes" xml:space="preserve">
          <source>Consumes this error indicating that a lock is poisoned, returning the underlying guard to allow access regardless.</source>
          <target state="translated">ロックがポイズンされていることを示すこのエラーを消費し、関係なくアクセスを許可するために基礎となるガードを返します。</target>
        </trans-unit>
        <trans-unit id="5db78ef3b9badfb4f68a1ad2e89810d00faffba9" translate="yes" xml:space="preserve">
          <source>Consumes this error, returning original &lt;a href=&quot;struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; which generated the error.</source>
          <target state="translated">このエラーを消費し、エラーを生成した元の&lt;a href=&quot;struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="664126a0996a4735a77003a413752311bba7d6ec" translate="yes" xml:space="preserve">
          <source>Consumes this error, returning the underlying vector of bytes which generated the error in the first place.</source>
          <target state="translated">このエラーを消費し、最初にエラーを発生させたバイト数のベクトルを返します。</target>
        </trans-unit>
        <trans-unit id="52fedaa69eb5406b41213f56b5187c8bc2c88b5e" translate="yes" xml:space="preserve">
          <source>Consumes this mutex, returning the underlying data.</source>
          <target state="translated">このミューテックスを消費し、基礎となるデータを返します。</target>
        </trans-unit>
        <trans-unit id="899d67ae36ad60786b3ddce582e9aa4951486a4b" translate="yes" xml:space="preserve">
          <source>Consumes this object, returning the raw underlying file descriptor.</source>
          <target state="translated">このオブジェクトを消費し、基礎となる生のファイル記述子を返します。</target>
        </trans-unit>
        <trans-unit id="e1bb204224526999e19051645e0ceaa4debbe856" translate="yes" xml:space="preserve">
          <source>Consumes this object, returning the raw underlying file descriptor. &lt;a href=&quot;../io/trait.intorawfd#tymethod.into_raw_fd&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">このオブジェクトを消費し、基になる生のファイル記述子を返します。&lt;a href=&quot;../io/trait.intorawfd#tymethod.into_raw_fd&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e54cc261c94f5e4acec4ce3bd36ab7ec6bf1f85d" translate="yes" xml:space="preserve">
          <source>Consumes this object, returning the raw underlying file descriptor. &lt;a href=&quot;../os/unix/io/trait.intorawfd#tymethod.into_raw_fd&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">このオブジェクトを消費し、基になる生のファイル記述子を返します。&lt;a href=&quot;../os/unix/io/trait.intorawfd#tymethod.into_raw_fd&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="da9b21ad229a7c988cb3b9101ec518098b8c4c0c" translate="yes" xml:space="preserve">
          <source>Consumes this object, returning the raw underlying file descriptor. &lt;a href=&quot;trait.intorawfd#tymethod.into_raw_fd&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">このオブジェクトを消費し、基になる生のファイル記述子を返します。&lt;a href=&quot;trait.intorawfd#tymethod.into_raw_fd&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2634374739c97a25ec43d6ea3421adb65f1a223b" translate="yes" xml:space="preserve">
          <source>Consumes this object, returning the raw underlying handle.</source>
          <target state="translated">このオブジェクトを消費し、基礎となる生のハンドルを返します。</target>
        </trans-unit>
        <trans-unit id="63ec81086c0de5a467b87fb931278a37b366986b" translate="yes" xml:space="preserve">
          <source>Consumes this object, returning the raw underlying handle. &lt;a href=&quot;../os/windows/io/trait.intorawhandle#tymethod.into_raw_handle&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">このオブジェクトを消費し、基になる生のハンドルを返します。&lt;a href=&quot;../os/windows/io/trait.intorawhandle#tymethod.into_raw_handle&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="69d0867df0e1c5bcfda60e3fcf190e5d7e48e63f" translate="yes" xml:space="preserve">
          <source>Consumes this object, returning the raw underlying socket.</source>
          <target state="translated">このオブジェクトを消費し、基礎となるソケットを返します。</target>
        </trans-unit>
        <trans-unit id="74553b31856fd1f0d72dbd05aba42306c197a100" translate="yes" xml:space="preserve">
          <source>Consumes this object, returning the raw underlying socket. &lt;a href=&quot;../os/windows/io/trait.intorawsocket#tymethod.into_raw_socket&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">このオブジェクトを消費して、基になるソケットをそのまま返します。&lt;a href=&quot;../os/windows/io/trait.intorawsocket#tymethod.into_raw_socket&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7c8f443a92f7ec0a563b52d3aa6d1843e77a4215" translate="yes" xml:space="preserve">
          <source>Container type for copied ASCII characters.</source>
          <target state="translated">コピーしたASCII文字のコンテナ型。</target>
        </trans-unit>
        <trans-unit id="23f055fdbeb2a0535242202ac13c7332f92fce3d" translate="yes" xml:space="preserve">
          <source>Containers and collections</source>
          <target state="translated">コンテナとコレクション</target>
        </trans-unit>
        <trans-unit id="fa12d8b7cef98dcf93c78f6b7968b7c09f1096e9" translate="yes" xml:space="preserve">
          <source>Contains an invalid digit in its context.</source>
          <target state="translated">コンテキストに無効な桁が含まれています。</target>
        </trans-unit>
        <trans-unit id="9f86c9f36bdb5e7e1c5348479bc33b752a16aca0" translate="yes" xml:space="preserve">
          <source>Contains an invalid digit.</source>
          <target state="translated">無効な桁が含まれています。</target>
        </trans-unit>
        <trans-unit id="59d7d83d9af2d32994ca60fb2bb445f72f6e7e69" translate="yes" xml:space="preserve">
          <source>Contains struct definitions for the layout of compiler built-in types.</source>
          <target state="translated">コンパイラの組み込み型をレイアウトするための構造体の定義が含まれています。</target>
        </trans-unit>
        <trans-unit id="c76f50ac6b72d1021fa529d20d4e56e874207013" translate="yes" xml:space="preserve">
          <source>Contains the error value</source>
          <target state="translated">エラー値を含む</target>
        </trans-unit>
        <trans-unit id="cd7b95fda18d884a88e2263e885b30a6e407fff6" translate="yes" xml:space="preserve">
          <source>Contains the success value</source>
          <target state="translated">成功値を含む</target>
        </trans-unit>
        <trans-unit id="cc11b3a28fa30ae6d3d3ad1438824cbd5224ba5c" translate="yes" xml:space="preserve">
          <source>Context</source>
          <target state="translated">Context</target>
        </trans-unit>
        <trans-unit id="1565dbaa93d969753a40a9d70f61c1696b03118c" translate="yes" xml:space="preserve">
          <source>Context::borrow</source>
          <target state="translated">Context::borrow</target>
        </trans-unit>
        <trans-unit id="e3d1c02435c6a2d687138f66ddcc40e73641cd1c" translate="yes" xml:space="preserve">
          <source>Context::borrow_mut</source>
          <target state="translated">Context::borrow_mut</target>
        </trans-unit>
        <trans-unit id="0898d65dcfba5e48fda111a778d370a9d715471e" translate="yes" xml:space="preserve">
          <source>Context::fmt</source>
          <target state="translated">Context::fmt</target>
        </trans-unit>
        <trans-unit id="af6cd1441831eb65dca04e60a71500ab552676b9" translate="yes" xml:space="preserve">
          <source>Context::from</source>
          <target state="translated">Context::from</target>
        </trans-unit>
        <trans-unit id="a86162adeb4ffc5c250e312791ae927f3ecee520" translate="yes" xml:space="preserve">
          <source>Context::from_waker</source>
          <target state="translated">Context::from_waker</target>
        </trans-unit>
        <trans-unit id="daf36cab311b5d83aa9bb216e4788de0bcb535b1" translate="yes" xml:space="preserve">
          <source>Context::into</source>
          <target state="translated">Context::into</target>
        </trans-unit>
        <trans-unit id="72cbb026ee7607dd2f80a005f1d24e823c98983a" translate="yes" xml:space="preserve">
          <source>Context::try_from</source>
          <target state="translated">Context::try_from</target>
        </trans-unit>
        <trans-unit id="d326198662d3ba935aff00ee2fe110321826c543" translate="yes" xml:space="preserve">
          <source>Context::try_into</source>
          <target state="translated">Context::try_into</target>
        </trans-unit>
        <trans-unit id="ff59099d57a0af6f3c5e5b3332a9f0bbe81ac0f1" translate="yes" xml:space="preserve">
          <source>Context::type_id</source>
          <target state="translated">Context::type_id</target>
        </trans-unit>
        <trans-unit id="636dd081a114b46f92a5a1e315289fa9428bd440" translate="yes" xml:space="preserve">
          <source>Context::waker</source>
          <target state="translated">Context::waker</target>
        </trans-unit>
        <trans-unit id="f634493483ecf86e1ff52ab45c423371f04d0515" translate="yes" xml:space="preserve">
          <source>Contiguous separators are separated by the empty string.</source>
          <target state="translated">連続するセパレータは空文字列で区切られています。</target>
        </trans-unit>
        <trans-unit id="2afa282886d5b8c1adbe117bcd3172ed85da4fb5" translate="yes" xml:space="preserve">
          <source>Contiguous separators can lead to possibly surprising behavior when whitespace is used as the separator. This code is correct:</source>
          <target state="translated">連続した区切り文字は、空白を区切り文字として使用すると、驚くような動作をする可能性があります。このコードは正しいです。</target>
        </trans-unit>
        <trans-unit id="8e153bbe19d0bfa290ac532229d2b6ef91082e4a" translate="yes" xml:space="preserve">
          <source>Continue in the loop, using the given value for the next iteration</source>
          <target state="translated">次の反復に与えられた値を使用して、ループ内で継続します。</target>
        </trans-unit>
        <trans-unit id="adf4707abbd4ad3ebbf9b0b75ce5e002baa96df2" translate="yes" xml:space="preserve">
          <source>Continuing with our &lt;code&gt;largest&lt;/code&gt; function, Listing 10-4 shows two functions that both find the largest value in a slice.</source>
          <target state="translated">&lt;code&gt;largest&lt;/code&gt; 関数を続けて、リスト10-4は2つの関数を示し、どちらもスライス内の最大値を見つけます。</target>
        </trans-unit>
        <trans-unit id="1b7c7a0261ae178e3c9059e91b3b86057d1530f2" translate="yes" xml:space="preserve">
          <source>Contrast this with what happens when Rust tries to determine how much space a recursive type like the &lt;code&gt;List&lt;/code&gt; enum in Listing 15-2 needs. The compiler starts by looking at the &lt;code&gt;Cons&lt;/code&gt; variant, which holds a value of type &lt;code&gt;i32&lt;/code&gt; and a value of type &lt;code&gt;List&lt;/code&gt;. Therefore, &lt;code&gt;Cons&lt;/code&gt; needs an amount of space equal to the size of an &lt;code&gt;i32&lt;/code&gt; plus the size of a &lt;code&gt;List&lt;/code&gt;. To figure out how much memory the &lt;code&gt;List&lt;/code&gt; type needs, the compiler looks at the variants, starting with the &lt;code&gt;Cons&lt;/code&gt; variant. The &lt;code&gt;Cons&lt;/code&gt; variant holds a value of type &lt;code&gt;i32&lt;/code&gt; and a value of type &lt;code&gt;List&lt;/code&gt;, and this process continues infinitely, as shown in Figure 15-1.</source>
          <target state="translated">これを、Rust がリスト15-2の &lt;code&gt;List&lt;/code&gt; enumのような再帰型が必要とするスペースの量を決定しようとしたときに何が起こるかと比較してください。コンパイラは、まず、型 &lt;code&gt;i32&lt;/code&gt; の値と型 &lt;code&gt;List&lt;/code&gt; の値を保持する &lt;code&gt;Cons&lt;/code&gt; バリアントを調べます。したがって、 &lt;code&gt;Cons&lt;/code&gt; には、 &lt;code&gt;i32&lt;/code&gt; のサイズに &lt;code&gt;List&lt;/code&gt; のサイズを加えたサイズに等しい量のスペースが必要です。 &lt;code&gt;List&lt;/code&gt; 型が必要とするメモリの量を把握するために、コンパイラは &lt;code&gt;Cons&lt;/code&gt; バリアントからバリアントを調べます。 &lt;code&gt;Cons&lt;/code&gt; バリアントは、型の値を保持 &lt;code&gt;i32&lt;/code&gt; と型の値 &lt;code&gt;List&lt;/code&gt; 、そして図15-1に示すように、このプロセスは無限に続きます。</target>
        </trans-unit>
        <trans-unit id="2d82a4b27a4b305690d5ac612046a955778a9fa5" translate="yes" xml:space="preserve">
          <source>Contributing</source>
          <target state="translated">Contributing</target>
        </trans-unit>
        <trans-unit id="daf672e0c147a0e9bab677b209616585123c8834" translate="yes" xml:space="preserve">
          <source>Contributing changes to the documentation</source>
          <target state="translated">ドキュメントの変更に貢献する</target>
        </trans-unit>
        <trans-unit id="e9e6acf5a539717a2a1c11bdab18154d5f44486b" translate="yes" xml:space="preserve">
          <source>Contributions are appreciated! If you see a part of the docs that can be improved, submit a PR, or chat with us first on &lt;a href=&quot;https://discord.gg/rust-lang&quot;&gt;Discord&lt;/a&gt; #docs.</source>
          <target state="translated">貢献は大歓迎です！改善できるドキュメントの一部を見つけた場合は、PRを送信するか、&lt;a href=&quot;https://discord.gg/rust-lang&quot;&gt;Discord&lt;/a&gt;＃docsで最初にチャットしてください。</target>
        </trans-unit>
        <trans-unit id="32d5e73cc786c925f3da2cd069f7e326999234ed" translate="yes" xml:space="preserve">
          <source>Contributions are appreciated! If you see a part of the docs that can be improved, submit a PR, or chat with us first on irc.mozilla.org #rust-docs.</source>
          <target state="translated">貢献を歓迎します! ドキュメントの一部で改善できる部分があれば、PR を提出したり、irc.mozilla.org #rust-docs でチャットをしたりしてください。</target>
        </trans-unit>
        <trans-unit id="4722c5ea64f5bf604117b9b25da5ac1ab2753262" translate="yes" xml:space="preserve">
          <source>Control Flow</source>
          <target state="translated">制御フロー</target>
        </trans-unit>
        <trans-unit id="c7df0db6bad4e8585308b8102850117602eb62d1" translate="yes" xml:space="preserve">
          <source>Control codes (code points with the general category of &lt;code&gt;Cc&lt;/code&gt;) are described in Chapter 4 (Character Properties) of the &lt;a href=&quot;https://www.unicode.org/versions/latest/&quot;&gt;Unicode Standard&lt;/a&gt; and specified in the &lt;a href=&quot;https://www.unicode.org/reports/tr44/&quot;&gt;Unicode Character Database&lt;/a&gt;&lt;a href=&quot;https://www.unicode.org/Public/UCD/latest/ucd/UnicodeData.txt&quot;&gt;&lt;code&gt;UnicodeData.txt&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">制御コード（ &lt;code&gt;Cc&lt;/code&gt; の一般的なカテゴリのコードポイント）は、&lt;a href=&quot;https://www.unicode.org/versions/latest/&quot;&gt;Unicode標準の&lt;/a&gt;第4章（文字プロパティ）で説明されており、&lt;a href=&quot;https://www.unicode.org/reports/tr44/&quot;&gt;Unicode文字データベース&lt;/a&gt;&lt;a href=&quot;https://www.unicode.org/Public/UCD/latest/ucd/UnicodeData.txt&quot;&gt; &lt;code&gt;UnicodeData.txt&lt;/code&gt; で&lt;/a&gt;指定されています。</target>
        </trans-unit>
        <trans-unit id="45095d8dc69b4648143056c214455a4d7009a8c4" translate="yes" xml:space="preserve">
          <source>Control flow based on pattern matching.</source>
          <target state="translated">パターンマッチングに基づく制御フロー</target>
        </trans-unit>
        <trans-unit id="1b952765486271a66399576ae71e520e40ee4783" translate="yes" xml:space="preserve">
          <source>Control structures that check for &lt;strong&gt;true&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;真&lt;/strong&gt;をチェックする制御構造&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0e0572ae17a43a2df2638497d94908f8eb5a0503" translate="yes" xml:space="preserve">
          <source>Control-flow operators</source>
          <target state="translated">制御フロー演算子</target>
        </trans-unit>
        <trans-unit id="2c65773824f6929ec26bae8f353f6ed64c7f3286" translate="yes" xml:space="preserve">
          <source>ControlFlow</source>
          <target state="translated">ControlFlow</target>
        </trans-unit>
        <trans-unit id="36cf6a85afb3fd9109379f61591bea9c201dd973" translate="yes" xml:space="preserve">
          <source>Controlling How Tests Are Run</source>
          <target state="translated">テストの実行方法の制御</target>
        </trans-unit>
        <trans-unit id="5707c60aebea83cbd7837ffbf8e431127141e410" translate="yes" xml:space="preserve">
          <source>Controls whether this socket sees the multicast packets it sends itself. Note that this may not have any affect on IPv4 sockets.</source>
          <target state="translated">このソケットが自分自身に送信するマルチキャストパケットを見るかどうかを制御します。これはIPv4ソケットには影響しない可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="61856b8c17a4ff32006fe4b7dcc6f96f253b2120" translate="yes" xml:space="preserve">
          <source>Conventions</source>
          <target state="translated">Conventions</target>
        </trans-unit>
        <trans-unit id="092aa89502826a1ba0604d4eb73039978fa5a111" translate="yes" xml:space="preserve">
          <source>Conversely, the following are possible in a const function, but not in a const context:</source>
          <target state="translated">逆に、const関数では次のようなことができますが、constコンテキストではできません。</target>
        </trans-unit>
        <trans-unit id="55a8297e0b79d52dcaa5d700da77e6ccf4c643bf" translate="yes" xml:space="preserve">
          <source>Conversion from an &lt;a href=&quot;trait.iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;trait.iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt;からの変換。</target>
        </trans-unit>
        <trans-unit id="b0728f8954771f0cf2a6d90b9336f6216e4de343" translate="yes" xml:space="preserve">
          <source>Conversion from an &lt;code&gt;Iterator&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Iterator&lt;/code&gt; からの変換。</target>
        </trans-unit>
        <trans-unit id="e2f1c886d4402d3452f7af4ab3d78e0cd036e8ff" translate="yes" xml:space="preserve">
          <source>Conversion into a &lt;code&gt;Future&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Future&lt;/code&gt; への転換。</target>
        </trans-unit>
        <trans-unit id="4685ebfc2fe93695d3a598db9f24aa00087f46ee" translate="yes" xml:space="preserve">
          <source>Conversion into an &lt;a href=&quot;trait.iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;trait.iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt;への変換。</target>
        </trans-unit>
        <trans-unit id="f4c6e0e2914a6a9cc436ac2207e563d7c9c7895d" translate="yes" xml:space="preserve">
          <source>Conversion into an &lt;code&gt;Iterator&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Iterator&lt;/code&gt; への変換。</target>
        </trans-unit>
        <trans-unit id="b08eaadf77cfdba7944ddcaf69eee5a983b74af3" translate="yes" xml:space="preserve">
          <source>Conversions</source>
          <target state="translated">Conversions</target>
        </trans-unit>
        <trans-unit id="5d31439fc6750efd0c015cdee35dbb31d8a6ffc0" translate="yes" xml:space="preserve">
          <source>Convert a &lt;code&gt;ControlFlow&lt;/code&gt; into any type implementing &lt;code&gt;Try&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;ControlFlow&lt;/code&gt; を &lt;code&gt;Try&lt;/code&gt; を実装する任意のタイプに変換します。</target>
        </trans-unit>
        <trans-unit id="632a3eb38bb1301cca465e65b2f77c8549ef23ba" translate="yes" xml:space="preserve">
          <source>Convert a &lt;code&gt;VaListImpl&lt;/code&gt; into a &lt;code&gt;VaList&lt;/code&gt; that is binary-compatible with C's &lt;code&gt;va_list&lt;/code&gt;.</source>
          <target state="translated">変換 &lt;code&gt;VaListImpl&lt;/code&gt; をに &lt;code&gt;VaList&lt;/code&gt; Cさんとのバイナリ互換性があり &lt;code&gt;va_list&lt;/code&gt; の。</target>
        </trans-unit>
        <trans-unit id="2ae80f882753c1d4ea0594d1744a65e014dba83a" translate="yes" xml:space="preserve">
          <source>Convert a host byte order &lt;code&gt;u128&lt;/code&gt; into an &lt;code&gt;Ipv6Addr&lt;/code&gt;.</source>
          <target state="translated">ホストバイトオーダーに変換 &lt;code&gt;u128&lt;/code&gt; をに &lt;code&gt;Ipv6Addr&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9cd775641215a015813ce4baccc628dea1e3ea7c" translate="yes" xml:space="preserve">
          <source>Convert an &lt;code&gt;Ipv6Addr&lt;/code&gt; into a host byte order &lt;code&gt;u128&lt;/code&gt;.</source>
          <target state="translated">変換 &lt;code&gt;Ipv6Addr&lt;/code&gt; をホストバイトオーダーに &lt;code&gt;u128&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="29b4c962da0060360ea45bbdd0dec66bf9f4f5b1" translate="yes" xml:space="preserve">
          <source>Convert into a mutable reference to the underlying data.</source>
          <target state="translated">基礎となるデータへのミューティアブルな参照に変換します。</target>
        </trans-unit>
        <trans-unit id="b4a1aab35574f79c29675d3bd0d69092c5c5fa08" translate="yes" xml:space="preserve">
          <source>Convert into a reference to the underlying data.</source>
          <target state="translated">基礎となるデータへの参照に変換します。</target>
        </trans-unit>
        <trans-unit id="2663f76b761b8d4f0ad5db78669e3169ecb9e4e4" translate="yes" xml:space="preserve">
          <source>Convert strings to pig latin. The first consonant of each word is moved to the end of the word and &amp;ldquo;ay&amp;rdquo; is added, so &amp;ldquo;first&amp;rdquo; becomes &amp;ldquo;irst-fay.&amp;rdquo; Words that start with a vowel have &amp;ldquo;hay&amp;rdquo; added to the end instead (&amp;ldquo;apple&amp;rdquo; becomes &amp;ldquo;apple-hay&amp;rdquo;). Keep in mind the details about UTF-8 encoding!</source>
          <target state="translated">文字列をブタのラテン語に変換します。各単語の最初の子音が単語の末尾に移動し、「ay」が追加されるため、「first」は「irst-fay」になります。母音で始まる単語の最後には「hay」が追加されます（「apple」は「apple-hay」になります）。UTF-8エンコーディングの詳細に注意してください！</target>
        </trans-unit>
        <trans-unit id="21df0ccb0f8ffc845f6196c0e1cbfa95c3c51820" translate="yes" xml:space="preserve">
          <source>Convert temperatures between Fahrenheit and Celsius.</source>
          <target state="translated">華氏と摂氏の間で温度を変換します。</target>
        </trans-unit>
        <trans-unit id="091349b6ffaa4917f7277a7641371ef8df385330" translate="yes" xml:space="preserve">
          <source>Convert to a &lt;code&gt;Ready&lt;/code&gt; variant.</source>
          <target state="translated">&lt;code&gt;Ready&lt;/code&gt; バリアントに変換します。</target>
        </trans-unit>
        <trans-unit id="7ffcd5ffc0efc925f8263fdb1438fe188212c8c1" translate="yes" xml:space="preserve">
          <source>Convert with LLVM&amp;rsquo;s fptoui/fptosi, which may return undef for values out of range (&lt;a href=&quot;https://github.com/rust-lang/rust/issues/10184&quot;&gt;https://github.com/rust-lang/rust/issues/10184&lt;/a&gt;)</source>
          <target state="translated">LLVMのfptoui / fptosiで変換します。これにより、範囲外の値に対してundefが返される場合があります（&lt;a href=&quot;https://github.com/rust-lang/rust/issues/10184&quot;&gt;https://github.com/rust-lang/rust/issues/10184&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="8928dc4a5e7c5f22246fed4bcd01ddfc89bdf7a8" translate="yes" xml:space="preserve">
          <source>Converting a foreign C string into a Rust &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">外部のC文字列をRust &lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;列に変換する：</target>
        </trans-unit>
        <trans-unit id="f8157f41cdecccc67a582dcd96bfffe31b49aebf" translate="yes" xml:space="preserve">
          <source>Converting the raw pointer back into a &lt;code&gt;Box&lt;/code&gt; with &lt;a href=&quot;struct.box#method.from_raw&quot;&gt;&lt;code&gt;Box::from_raw&lt;/code&gt;&lt;/a&gt; for automatic cleanup:</source>
          <target state="translated">生のポインタの背中を変換 &lt;code&gt;Box&lt;/code&gt; と&lt;a href=&quot;struct.box#method.from_raw&quot;&gt; &lt;code&gt;Box::from_raw&lt;/code&gt; &lt;/a&gt;自動クリーンアップのために：</target>
        </trans-unit>
        <trans-unit id="ce78f3d13c6bc8c92e1af183cd696a2d6af85e40" translate="yes" xml:space="preserve">
          <source>Converting the raw pointer back into a &lt;code&gt;Box&lt;/code&gt; with &lt;a href=&quot;struct.box#method.from_raw_in&quot;&gt;&lt;code&gt;Box::from_raw_in&lt;/code&gt;&lt;/a&gt; for automatic cleanup:</source>
          <target state="translated">生のポインタの背中を変換 &lt;code&gt;Box&lt;/code&gt; と&lt;a href=&quot;struct.box#method.from_raw_in&quot;&gt; &lt;code&gt;Box::from_raw_in&lt;/code&gt; &lt;/a&gt;自動クリーンアップのために：</target>
        </trans-unit>
        <trans-unit id="baa923dfbcebb6ad2daa98e4440769d475172a5e" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroI16&lt;/code&gt; to &lt;code&gt;NonZeroI128&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroI16&lt;/code&gt; を &lt;code&gt;NonZeroI128&lt;/code&gt; にロスレスで変換します。</target>
        </trans-unit>
        <trans-unit id="c641a7f3a20a073809c26b096c770917ca1b8fa0" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroI16&lt;/code&gt; to &lt;code&gt;NonZeroI32&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroI16&lt;/code&gt; を &lt;code&gt;NonZeroI32&lt;/code&gt; にロスレスで変換します。</target>
        </trans-unit>
        <trans-unit id="07161e6f6cf7705592f9f7dd773233dec37c2ea8" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroI16&lt;/code&gt; to &lt;code&gt;NonZeroI64&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroI16&lt;/code&gt; を &lt;code&gt;NonZeroI64&lt;/code&gt; にロスレスで変換します。</target>
        </trans-unit>
        <trans-unit id="68be8506a5e190f2af40f2aa50bc8a996987104d" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroI16&lt;/code&gt; to &lt;code&gt;NonZeroIsize&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroI16&lt;/code&gt; を &lt;code&gt;NonZeroIsize&lt;/code&gt; にロスレスで変換します。</target>
        </trans-unit>
        <trans-unit id="86f4f3eebcfe7667a750f187d74dd7e19d2956ef" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroI32&lt;/code&gt; to &lt;code&gt;NonZeroI128&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroI32&lt;/code&gt; を &lt;code&gt;NonZeroI128&lt;/code&gt; にロスレスで変換します。</target>
        </trans-unit>
        <trans-unit id="4ed53b1c748d637092780b67cfac6af1f6ea4224" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroI32&lt;/code&gt; to &lt;code&gt;NonZeroI64&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroI32&lt;/code&gt; を &lt;code&gt;NonZeroI64&lt;/code&gt; にロスレスで変換します。</target>
        </trans-unit>
        <trans-unit id="096b1ae0c601d984fa5cf2109f8b801db8814a56" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroI64&lt;/code&gt; to &lt;code&gt;NonZeroI128&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroI64&lt;/code&gt; を &lt;code&gt;NonZeroI128&lt;/code&gt; にロスレスで変換します。</target>
        </trans-unit>
        <trans-unit id="402e3fc64c15ba260be1dd62281c85260a8b4b09" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroI8&lt;/code&gt; to &lt;code&gt;NonZeroI128&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroI8&lt;/code&gt; を &lt;code&gt;NonZeroI128&lt;/code&gt; にロスレスで変換します。</target>
        </trans-unit>
        <trans-unit id="04a0f5b1983660d7798dc7c24010f1245af209c0" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroI8&lt;/code&gt; to &lt;code&gt;NonZeroI16&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroI8&lt;/code&gt; を &lt;code&gt;NonZeroI16&lt;/code&gt; にロスレスで変換します。</target>
        </trans-unit>
        <trans-unit id="42479bae0d89974c52409a05d9c2a2e02e1a0dc1" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroI8&lt;/code&gt; to &lt;code&gt;NonZeroI32&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroI8&lt;/code&gt; を &lt;code&gt;NonZeroI32&lt;/code&gt; にロスレスで変換します。</target>
        </trans-unit>
        <trans-unit id="1a20fe546183aee90a1f2aa9023dceb208e00315" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroI8&lt;/code&gt; to &lt;code&gt;NonZeroI64&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroI8&lt;/code&gt; を &lt;code&gt;NonZeroI64&lt;/code&gt; にロスレスで変換します。</target>
        </trans-unit>
        <trans-unit id="3adcfa785da92847e310d780d1f6d90896ab77a5" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroI8&lt;/code&gt; to &lt;code&gt;NonZeroIsize&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroI8&lt;/code&gt; を &lt;code&gt;NonZeroIsize&lt;/code&gt; にロスレスで変換します。</target>
        </trans-unit>
        <trans-unit id="b8799f3d2fb779c683c0c6e080f0cc43c45ec798" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU16&lt;/code&gt; to &lt;code&gt;NonZeroI128&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU16&lt;/code&gt; を &lt;code&gt;NonZeroI128&lt;/code&gt; にロスレスで変換します。</target>
        </trans-unit>
        <trans-unit id="26a8b8a7a76d61bacc74bbd1749a0f5ec1337234" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU16&lt;/code&gt; to &lt;code&gt;NonZeroI32&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU16&lt;/code&gt; を &lt;code&gt;NonZeroI32&lt;/code&gt; にロスレスで変換します。</target>
        </trans-unit>
        <trans-unit id="c0a917356876a1e4098603fd869a05c1fb9f3cb6" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU16&lt;/code&gt; to &lt;code&gt;NonZeroI64&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU16&lt;/code&gt; を &lt;code&gt;NonZeroI64&lt;/code&gt; にロスレスで変換します。</target>
        </trans-unit>
        <trans-unit id="b6712a025f1e9fe97991e46a7fc7d8da6d415eed" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU16&lt;/code&gt; to &lt;code&gt;NonZeroU128&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU16&lt;/code&gt; を &lt;code&gt;NonZeroU128&lt;/code&gt; にロスレスで変換します。</target>
        </trans-unit>
        <trans-unit id="df6f803b29fefe841cb4b0f76dae27cbe0082c53" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU16&lt;/code&gt; to &lt;code&gt;NonZeroU32&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU16&lt;/code&gt; を &lt;code&gt;NonZeroU32&lt;/code&gt; にロスレスで変換します。</target>
        </trans-unit>
        <trans-unit id="161b3795d904e939acb559f3d492aba114edceb5" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU16&lt;/code&gt; to &lt;code&gt;NonZeroU64&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU16&lt;/code&gt; を &lt;code&gt;NonZeroU64&lt;/code&gt; にロスレスで変換します。</target>
        </trans-unit>
        <trans-unit id="52e2f95cb54e5fa30831be959f06b54bf242304a" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU16&lt;/code&gt; to &lt;code&gt;NonZeroUsize&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU16&lt;/code&gt; を &lt;code&gt;NonZeroUsize&lt;/code&gt; にロスレスで変換します。</target>
        </trans-unit>
        <trans-unit id="030d4154ecbd05fc294c23ac91bf96067ca7c99b" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU32&lt;/code&gt; to &lt;code&gt;NonZeroI128&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU32&lt;/code&gt; を &lt;code&gt;NonZeroI128&lt;/code&gt; にロスレスで変換します。</target>
        </trans-unit>
        <trans-unit id="b9dd12a38aa037b11f08bca202811cb483b0b5c6" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU32&lt;/code&gt; to &lt;code&gt;NonZeroI64&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU32&lt;/code&gt; を &lt;code&gt;NonZeroI64&lt;/code&gt; にロスレスで変換します。</target>
        </trans-unit>
        <trans-unit id="3edb1b5d801ea71ac0204fce566c0afb2ac2ae86" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU32&lt;/code&gt; to &lt;code&gt;NonZeroU128&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU32&lt;/code&gt; を &lt;code&gt;NonZeroU128&lt;/code&gt; にロスレスで変換します。</target>
        </trans-unit>
        <trans-unit id="0526c2a9f7d4d502d47677da7ddea38ee66ba9c7" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU32&lt;/code&gt; to &lt;code&gt;NonZeroU64&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU32&lt;/code&gt; を &lt;code&gt;NonZeroU64&lt;/code&gt; にロスレスで変換します。</target>
        </trans-unit>
        <trans-unit id="89bfe679eafeb135d27b5ad1be5b49e79e05bc35" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU64&lt;/code&gt; to &lt;code&gt;NonZeroI128&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU64&lt;/code&gt; を &lt;code&gt;NonZeroI128&lt;/code&gt; にロスレスで変換します。</target>
        </trans-unit>
        <trans-unit id="a97d7a1a48ea6f685cae0769468794bd754f71ce" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU64&lt;/code&gt; to &lt;code&gt;NonZeroU128&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU64&lt;/code&gt; を &lt;code&gt;NonZeroU128&lt;/code&gt; にロスレスで変換します。</target>
        </trans-unit>
        <trans-unit id="cd66e8967a6c34a2d23ecd1e32520a4759311f80" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU8&lt;/code&gt; to &lt;code&gt;NonZeroI128&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU8&lt;/code&gt; を &lt;code&gt;NonZeroI128&lt;/code&gt; にロスレスで変換します。</target>
        </trans-unit>
        <trans-unit id="10ec73c2a19ae41861e9c9367eb1ee460f057d8c" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU8&lt;/code&gt; to &lt;code&gt;NonZeroI16&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU8&lt;/code&gt; を &lt;code&gt;NonZeroI16&lt;/code&gt; にロスレスで変換します。</target>
        </trans-unit>
        <trans-unit id="7d5a3eb7d4674db0116e2e5f4bbeb50caa813887" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU8&lt;/code&gt; to &lt;code&gt;NonZeroI32&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU8&lt;/code&gt; を &lt;code&gt;NonZeroI32&lt;/code&gt; にロスレスで変換します。</target>
        </trans-unit>
        <trans-unit id="6e33e4c5a98525259124815c740bed9bac9b5517" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU8&lt;/code&gt; to &lt;code&gt;NonZeroI64&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU8&lt;/code&gt; を &lt;code&gt;NonZeroI64&lt;/code&gt; にロスレスで変換します。</target>
        </trans-unit>
        <trans-unit id="6a7a0a687cc1aeebe638e7655a540267bf3cf01a" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU8&lt;/code&gt; to &lt;code&gt;NonZeroIsize&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU8&lt;/code&gt; を &lt;code&gt;NonZeroIsize&lt;/code&gt; にロスレスで変換します。</target>
        </trans-unit>
        <trans-unit id="793b46c318e6436f640baf3ce73690517a94fa4e" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU8&lt;/code&gt; to &lt;code&gt;NonZeroU128&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU8&lt;/code&gt; を &lt;code&gt;NonZeroU128&lt;/code&gt; にロスレスで変換します。</target>
        </trans-unit>
        <trans-unit id="419691bf7a1cb1f462addc416718e59ae2b78b7e" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU8&lt;/code&gt; to &lt;code&gt;NonZeroU16&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU8&lt;/code&gt; を &lt;code&gt;NonZeroU16&lt;/code&gt; にロスレスで変換します。</target>
        </trans-unit>
        <trans-unit id="bdcdd7d6eabf746f3164fdb20956afc145aced4c" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU8&lt;/code&gt; to &lt;code&gt;NonZeroU32&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU8&lt;/code&gt; を &lt;code&gt;NonZeroU32&lt;/code&gt; にロスレスで変換します。</target>
        </trans-unit>
        <trans-unit id="89921efa1a13ccedd0b9cd6ee90c40ce39fa30a3" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU8&lt;/code&gt; to &lt;code&gt;NonZeroU64&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU8&lt;/code&gt; を &lt;code&gt;NonZeroU64&lt;/code&gt; にロスレスで変換します。</target>
        </trans-unit>
        <trans-unit id="762de145b915490ca488401d08b4fe84a7bc2887" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU8&lt;/code&gt; to &lt;code&gt;NonZeroUsize&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU8&lt;/code&gt; を &lt;code&gt;NonZeroUsize&lt;/code&gt; にロスレスで変換します。</target>
        </trans-unit>
        <trans-unit id="9e885056ac185138dc78092d4ea54041a37dc5d3" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;f32&lt;/code&gt; to &lt;code&gt;f64&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;f32&lt;/code&gt; を &lt;code&gt;f64&lt;/code&gt; に可逆的に変換します。</target>
        </trans-unit>
        <trans-unit id="9450ee8901fa8fec9b4dc5593c1f65b5fca3afa4" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;i16&lt;/code&gt; to &lt;code&gt;f32&lt;/code&gt; losslessly.</source>
          <target state="translated">ロスレスで &lt;code&gt;i16&lt;/code&gt; を &lt;code&gt;f32&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="c13ea6f475d9ab6e5c07e35d4696724453401fac" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;i16&lt;/code&gt; to &lt;code&gt;f64&lt;/code&gt; losslessly.</source>
          <target state="translated">ロスレスで &lt;code&gt;i16&lt;/code&gt; を &lt;code&gt;f64&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="7df4ea64c8885220b9a2fe713491b60ba3c56972" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;i16&lt;/code&gt; to &lt;code&gt;i128&lt;/code&gt; losslessly.</source>
          <target state="translated">ロスレスで &lt;code&gt;i16&lt;/code&gt; を &lt;code&gt;i128&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="066b12c2023635591803a7de8873d9f2185e673c" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;i16&lt;/code&gt; to &lt;code&gt;i32&lt;/code&gt; losslessly.</source>
          <target state="translated">ロスレスで &lt;code&gt;i16&lt;/code&gt; を &lt;code&gt;i32&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="32b66b3b21b63cd882a59815269257e778e4e766" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;i16&lt;/code&gt; to &lt;code&gt;i64&lt;/code&gt; losslessly.</source>
          <target state="translated">ロスレスで &lt;code&gt;i16&lt;/code&gt; を &lt;code&gt;i64&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="176169519451b78ef7d9454c6c09e44d6e6348aa" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;i16&lt;/code&gt; to &lt;code&gt;isize&lt;/code&gt; losslessly.</source>
          <target state="translated">ロスレスで &lt;code&gt;i16&lt;/code&gt; を &lt;code&gt;isize&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="325b6dac0fadc7819edc16d662042406351bb7b5" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;i32&lt;/code&gt; to &lt;code&gt;f64&lt;/code&gt; losslessly.</source>
          <target state="translated">ロスレスで &lt;code&gt;i32&lt;/code&gt; を &lt;code&gt;f64&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="6039d806ea44fcbfa5aafe10e76cf46494541e6e" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;i32&lt;/code&gt; to &lt;code&gt;i128&lt;/code&gt; losslessly.</source>
          <target state="translated">ロスレスで &lt;code&gt;i32&lt;/code&gt; を &lt;code&gt;i128&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="3cda6e447827fd770aac022a77a94052f07c2f9a" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;i32&lt;/code&gt; to &lt;code&gt;i64&lt;/code&gt; losslessly.</source>
          <target state="translated">ロスレスで &lt;code&gt;i32&lt;/code&gt; を &lt;code&gt;i64&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="bcffb3b4c2bf59f7885d95bb4d5f9b107a68e919" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;i64&lt;/code&gt; to &lt;code&gt;i128&lt;/code&gt; losslessly.</source>
          <target state="translated">ロスレスで &lt;code&gt;i64&lt;/code&gt; を &lt;code&gt;i128&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="f806826bb95cc560d9e8854c897990e2b5b540f7" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;i8&lt;/code&gt; to &lt;code&gt;f32&lt;/code&gt; losslessly.</source>
          <target state="translated">ロスレスで &lt;code&gt;i8&lt;/code&gt; を &lt;code&gt;f32&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="991359588e15175c8e81cc7a9174c1857f1132ac" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;i8&lt;/code&gt; to &lt;code&gt;f64&lt;/code&gt; losslessly.</source>
          <target state="translated">ロスレスで &lt;code&gt;i8&lt;/code&gt; を &lt;code&gt;f64&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="4b1ef1b13e16d41ca33dc5b12ba030e96eac47d9" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;i8&lt;/code&gt; to &lt;code&gt;i128&lt;/code&gt; losslessly.</source>
          <target state="translated">ロスレスで &lt;code&gt;i8&lt;/code&gt; を &lt;code&gt;i128&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="50826e19009afe19f35fcfd608dc46c40e21ef12" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;i8&lt;/code&gt; to &lt;code&gt;i16&lt;/code&gt; losslessly.</source>
          <target state="translated">ロスレスで &lt;code&gt;i8&lt;/code&gt; を &lt;code&gt;i16&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="e269283f07eea8b0123d5a6c4933c030d3bb2289" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;i8&lt;/code&gt; to &lt;code&gt;i32&lt;/code&gt; losslessly.</source>
          <target state="translated">ロスレスで &lt;code&gt;i8&lt;/code&gt; を &lt;code&gt;i32&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="750d95f279cf7437e6254205c1b12f19fccb7484" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;i8&lt;/code&gt; to &lt;code&gt;i64&lt;/code&gt; losslessly.</source>
          <target state="translated">ロスレスで &lt;code&gt;i8&lt;/code&gt; を &lt;code&gt;i64&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="f80b1a937ec301729c021d700aed300da903ba7f" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;i8&lt;/code&gt; to &lt;code&gt;isize&lt;/code&gt; losslessly.</source>
          <target state="translated">ロスレスで &lt;code&gt;i8&lt;/code&gt; を &lt;code&gt;isize&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="b3118d157bebbe145c80cae4a3ba4473fe7e2baa" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;self&lt;/code&gt; into a vector without clones or allocation.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; をクローンや割り当てなしでベクターに変換します。</target>
        </trans-unit>
        <trans-unit id="3e1847a1d36577d583430e2b6aaa855126511bf5" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;self&lt;/code&gt; into an &lt;a href=&quot;../option/enum.option&quot;&gt;&lt;code&gt;Option&amp;lt;E&amp;gt;&lt;/code&gt;&lt;/a&gt;, consuming &lt;code&gt;self&lt;/code&gt;, and discarding the success value, if any.</source>
          <target state="translated">変換し &lt;code&gt;self&lt;/code&gt; への&lt;a href=&quot;../option/enum.option&quot;&gt; &lt;code&gt;Option&amp;lt;E&amp;gt;&lt;/code&gt; &lt;/a&gt;、かかる &lt;code&gt;self&lt;/code&gt; 、もしあれば、成功値を破棄する。</target>
        </trans-unit>
        <trans-unit id="380e92b4601a9003a61c30a1c01ca2d45214a21d" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;self&lt;/code&gt; into an &lt;a href=&quot;../option/enum.option&quot;&gt;&lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;, consuming &lt;code&gt;self&lt;/code&gt;, and discarding the error, if any.</source>
          <target state="translated">変換し &lt;code&gt;self&lt;/code&gt; への&lt;a href=&quot;../option/enum.option&quot;&gt; &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt;、かかる &lt;code&gt;self&lt;/code&gt; 、もしあれば、エラーを破棄する。</target>
        </trans-unit>
        <trans-unit id="0d2d146dfe027d061d306c284b59eef1cbacf690" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;self&lt;/code&gt; to big endian from the target's endianness.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; をターゲットのエンディアンからビッグエンディアンに変換します。</target>
        </trans-unit>
        <trans-unit id="48b2205b108536ac02137ea0238a9a7baa385e81" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;self&lt;/code&gt; to little endian from the target's endianness.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; をターゲットのエンディアンからリトルエンディアンに変換します。</target>
        </trans-unit>
        <trans-unit id="be0f27a68f5769d87c8f6b469342edf755ece094" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u16&lt;/code&gt; to &lt;code&gt;f32&lt;/code&gt; losslessly.</source>
          <target state="translated">ロスレスで &lt;code&gt;u16&lt;/code&gt; を &lt;code&gt;f32&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="6b12c7976b1f010430fa97687761afc5a486919a" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u16&lt;/code&gt; to &lt;code&gt;f64&lt;/code&gt; losslessly.</source>
          <target state="translated">ロスレスで &lt;code&gt;u16&lt;/code&gt; を &lt;code&gt;f64&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="2ca1abfa7b7e1ab1ca12c49bc58a94a4fca1814f" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u16&lt;/code&gt; to &lt;code&gt;i128&lt;/code&gt; losslessly.</source>
          <target state="translated">ロスレスで &lt;code&gt;u16&lt;/code&gt; を &lt;code&gt;i128&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="662b7cf51a074addb9b063d75e6b3d736f46b9cb" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u16&lt;/code&gt; to &lt;code&gt;i32&lt;/code&gt; losslessly.</source>
          <target state="translated">ロスレスで &lt;code&gt;u16&lt;/code&gt; を &lt;code&gt;i32&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="a6fd4c43ee772f1a7deaeb8da687490cfe2c4b14" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u16&lt;/code&gt; to &lt;code&gt;i64&lt;/code&gt; losslessly.</source>
          <target state="translated">ロスレスで &lt;code&gt;u16&lt;/code&gt; を &lt;code&gt;i64&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="bcaf1501de01e0391536824e521f0df7222df02e" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u16&lt;/code&gt; to &lt;code&gt;u128&lt;/code&gt; losslessly.</source>
          <target state="translated">ロスレスで &lt;code&gt;u16&lt;/code&gt; を &lt;code&gt;u128&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="f00f0433f6828b8350a805670e92a0f59ef871b8" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u16&lt;/code&gt; to &lt;code&gt;u32&lt;/code&gt; losslessly.</source>
          <target state="translated">ロスレスで &lt;code&gt;u16&lt;/code&gt; を &lt;code&gt;u32&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="1cd184d23668186c5a7962d548c84e3b2039ab4b" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u16&lt;/code&gt; to &lt;code&gt;u64&lt;/code&gt; losslessly.</source>
          <target state="translated">ロスレスで &lt;code&gt;u16&lt;/code&gt; を &lt;code&gt;u64&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="ebd639b560738a148d7b6fa18b6ebd3272d9e04c" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u16&lt;/code&gt; to &lt;code&gt;usize&lt;/code&gt; losslessly.</source>
          <target state="translated">ロスレスで使用 &lt;code&gt;u16&lt;/code&gt; ように &lt;code&gt;usize&lt;/code&gt; 変換します。</target>
        </trans-unit>
        <trans-unit id="fc2695359ec0ec35a15bba23386e90b3e58768bf" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u32&lt;/code&gt; to &lt;code&gt;f64&lt;/code&gt; losslessly.</source>
          <target state="translated">ロスレスで &lt;code&gt;u32&lt;/code&gt; を &lt;code&gt;f64&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="0f6e366dca089b959ebd4359026f9f012f0c6d09" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u32&lt;/code&gt; to &lt;code&gt;i128&lt;/code&gt; losslessly.</source>
          <target state="translated">ロスレスで &lt;code&gt;u32&lt;/code&gt; を &lt;code&gt;i128&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="68a1a10087e7fb2093cade49bb8a90e301ae2830" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u32&lt;/code&gt; to &lt;code&gt;i64&lt;/code&gt; losslessly.</source>
          <target state="translated">ロスレスで &lt;code&gt;u32&lt;/code&gt; を &lt;code&gt;i64&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="98d09bc8923763636fae8c1543635d01aa5ef84c" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u32&lt;/code&gt; to &lt;code&gt;u128&lt;/code&gt; losslessly.</source>
          <target state="translated">ロスレスで &lt;code&gt;u32&lt;/code&gt; を &lt;code&gt;u128&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="6d168d327a65dad66209ce6d7b009cd85f05f838" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u32&lt;/code&gt; to &lt;code&gt;u64&lt;/code&gt; losslessly.</source>
          <target state="translated">ロスレスで &lt;code&gt;u32&lt;/code&gt; を &lt;code&gt;u64&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="f1df8b31f36d6ab5d17e2e3ada90c9b955cbda58" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u64&lt;/code&gt; to &lt;code&gt;i128&lt;/code&gt; losslessly.</source>
          <target state="translated">ロスレスで &lt;code&gt;u64&lt;/code&gt; を &lt;code&gt;i128&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="51e4288ae7b143e29bef2cd6a08ed1ce9981f99e" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u64&lt;/code&gt; to &lt;code&gt;u128&lt;/code&gt; losslessly.</source>
          <target state="translated">ロスレスで &lt;code&gt;u64&lt;/code&gt; を &lt;code&gt;u128&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="69075374550a9bd756bf2b8536a8adea67408dd6" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u8&lt;/code&gt; to &lt;code&gt;f32&lt;/code&gt; losslessly.</source>
          <target state="translated">ロスレスで &lt;code&gt;u8&lt;/code&gt; を &lt;code&gt;f32&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="8ed7d95e8c4ff5bcbb4951fc64ac876e6638ba8c" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u8&lt;/code&gt; to &lt;code&gt;f64&lt;/code&gt; losslessly.</source>
          <target state="translated">ロスレスで &lt;code&gt;u8&lt;/code&gt; を &lt;code&gt;f64&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="1898b4d40bb99c10044cb16946cda4ed3cee72a5" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u8&lt;/code&gt; to &lt;code&gt;i128&lt;/code&gt; losslessly.</source>
          <target state="translated">ロスレスで &lt;code&gt;u8&lt;/code&gt; を &lt;code&gt;i128&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="8466fd73320ea471b03f856e4d5a2ffa2198a076" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u8&lt;/code&gt; to &lt;code&gt;i16&lt;/code&gt; losslessly.</source>
          <target state="translated">ロスレスで &lt;code&gt;u8&lt;/code&gt; を &lt;code&gt;i16&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="5d28c5d2be13dcf9aee4cedc21552b340b2a0051" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u8&lt;/code&gt; to &lt;code&gt;i32&lt;/code&gt; losslessly.</source>
          <target state="translated">ロスレスで &lt;code&gt;u8&lt;/code&gt; を &lt;code&gt;i32&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="8562da8513d804122b58558a773734a9cc71b463" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u8&lt;/code&gt; to &lt;code&gt;i64&lt;/code&gt; losslessly.</source>
          <target state="translated">変換する &lt;code&gt;u8&lt;/code&gt; ロスレスでu8を &lt;code&gt;i64&lt;/code&gt; にます。</target>
        </trans-unit>
        <trans-unit id="608b7967f1987a832ce728b21dfd6966e3111f08" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u8&lt;/code&gt; to &lt;code&gt;isize&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;u8&lt;/code&gt; を変換しますロスレスでを &lt;code&gt;isize&lt;/code&gt; にます。</target>
        </trans-unit>
        <trans-unit id="3baa2112f8d58e246513a70b1e2768fd90ce79a6" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u8&lt;/code&gt; to &lt;code&gt;u128&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;u8&lt;/code&gt; を変換しますロスレスでを &lt;code&gt;u128&lt;/code&gt; にます。</target>
        </trans-unit>
        <trans-unit id="906f605028953532df33d1cfe91a7d5970f2e81b" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u8&lt;/code&gt; to &lt;code&gt;u16&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;u8&lt;/code&gt; を変換しますロスレスでを &lt;code&gt;u16&lt;/code&gt; にます。</target>
        </trans-unit>
        <trans-unit id="fad924d9a87ad0b4589a9adb2c124e7954501e85" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u8&lt;/code&gt; to &lt;code&gt;u32&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;u8&lt;/code&gt; を変換しますロスレスでを &lt;code&gt;u32&lt;/code&gt; にます。</target>
        </trans-unit>
        <trans-unit id="875a85e71de252953090d2635940f205519e68ad" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u8&lt;/code&gt; to &lt;code&gt;u64&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;u8&lt;/code&gt; を変換しますロスレスでを &lt;code&gt;u64&lt;/code&gt; にます。</target>
        </trans-unit>
        <trans-unit id="9f5b71d089a8a39a75736d6263ad69d78eaf550e" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u8&lt;/code&gt; to &lt;code&gt;usize&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;u8&lt;/code&gt; を変換しますロスレスで使用ように &lt;code&gt;usize&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="7f0e2a992aecd7ee5e678dfcb5c0e25f64dff6d1" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../borrow/enum.cow&quot;&gt;&lt;code&gt;Cow&lt;/code&gt;&lt;/a&gt; into a box of dyn &lt;a href=&quot;../error/trait.error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt;&lt;code&gt;Send&lt;/code&gt;&lt;/a&gt; + &lt;a href=&quot;../marker/trait.sync&quot;&gt;&lt;code&gt;Sync&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../borrow/enum.cow&quot;&gt; &lt;code&gt;Cow&lt;/code&gt; &lt;/a&gt;をdyn &lt;a href=&quot;../error/trait.error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt; &lt;code&gt;Send&lt;/code&gt; &lt;/a&gt; +のボックスに変換します&lt;a href=&quot;../marker/trait.sync&quot;&gt; &lt;code&gt;Sync&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2d519ff6564f97e18beb3b962000b0a1153ea56b" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../borrow/enum.cow&quot;&gt;&lt;code&gt;Cow&lt;/code&gt;&lt;/a&gt; into a box of dyn &lt;a href=&quot;../error/trait.error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../borrow/enum.cow&quot;&gt; &lt;code&gt;Cow&lt;/code&gt; &lt;/a&gt;をダインの箱に変換します&lt;a href=&quot;../error/trait.error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bd185ddf40bf4f4282976fbb642305b57972bce6" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&amp;lt;Path&amp;gt;&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;struct.pathbuf&quot;&gt;&lt;code&gt;PathBuf&lt;/code&gt;&lt;/a&gt; without copying or allocating.</source>
          <target state="translated">&lt;a href=&quot;../boxed/struct.box&quot;&gt; &lt;code&gt;Box&amp;lt;Path&amp;gt;&lt;/code&gt; &lt;/a&gt;をaに変換します&lt;a href=&quot;struct.pathbuf&quot;&gt; &lt;code&gt;PathBuf&lt;/code&gt; &lt;/a&gt;コピーまたは割り当てせずに PathBufにます。</target>
        </trans-unit>
        <trans-unit id="ec8381ac260e9466000646de46b6785b7aa780bc" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;../ffi/struct.osstr&quot;&gt;&lt;code&gt;OsStr&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; into a &lt;code&gt;OsString&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">変換&lt;a href=&quot;../boxed/struct.box&quot;&gt; &lt;code&gt;Box&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;../ffi/struct.osstr&quot;&gt; &lt;code&gt;OsStr&lt;/code&gt; は&lt;/a&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; に &lt;code&gt;OsString&lt;/code&gt; コピーまたは割り当てずに。</target>
        </trans-unit>
        <trans-unit id="7eeb0a53f8be8ea4d2d64f620f250ccbd144c43e" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;struct.osstr&quot;&gt;&lt;code&gt;OsStr&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; into a &lt;code&gt;OsString&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">変換&lt;a href=&quot;../boxed/struct.box&quot;&gt; &lt;code&gt;Box&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;struct.osstr&quot;&gt; &lt;code&gt;OsStr&lt;/code&gt; は&lt;/a&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; に &lt;code&gt;OsString&lt;/code&gt; コピーまたは割り当てずに。</target>
        </trans-unit>
        <trans-unit id="70cdf963ecfb37f31fd639a71e5420130c2e0202" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; into a &lt;a href=&quot;../ffi/struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; without copying or allocating.</source>
          <target state="translated">&lt;a href=&quot;../boxed/struct.box&quot;&gt; &lt;code&gt;Box&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; をaに変換します&lt;a href=&quot;../ffi/struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt;コピーまたは割り当てを行わずに CStringにます。</target>
        </trans-unit>
        <trans-unit id="20579263f5ef79ca2f2af596c8fed5b7f14851a5" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; into a &lt;a href=&quot;struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; without copying or allocating.</source>
          <target state="translated">&lt;a href=&quot;../boxed/struct.box&quot;&gt; &lt;code&gt;Box&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; をaに変換します&lt;a href=&quot;struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt;コピーまたは割り当てを行わずに CStringにます。</target>
        </trans-unit>
        <trans-unit id="8775043aa7e2b057314e82610119f1102d226265" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;OsStr&amp;gt;&lt;/code&gt; into an &lt;a href=&quot;struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt; without copying or allocating.</source>
          <target state="translated">変換&lt;a href=&quot;../boxed/struct.box&quot;&gt; &lt;code&gt;Box&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;OsStr&amp;gt;&lt;/code&gt; ANへ&lt;a href=&quot;struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt;コピーまたは割り当てずに。</target>
        </trans-unit>
        <trans-unit id="6bd06e97341fb5f3a39329e8841d5444bc3ecb15" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../char/index&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../u32/index&quot;&gt;&lt;code&gt;u32&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../char/index&quot;&gt; &lt;code&gt;char&lt;/code&gt; &lt;/a&gt;をaに変換します&lt;a href=&quot;../u32/index&quot;&gt; &lt;code&gt;u32&lt;/code&gt; に&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="caeca028cb8bdf36baa402f0be0932511cc2d199" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../ffi/struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">&lt;a href=&quot;../ffi/struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;../boxed/struct.box&quot;&gt; &lt;code&gt;Box&lt;/code&gt; &lt;/a&gt;変換します &lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; コピーまたは割り当てを行わずに &amp;lt;CStr&amp;gt;にます。</target>
        </trans-unit>
        <trans-unit id="b49c06567b4e64b9ba7f29be594606979fe04301" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../ffi/struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../rc/struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">&lt;a href=&quot;../ffi/struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;../rc/struct.rc&quot;&gt; &lt;code&gt;Rc&lt;/code&gt; に&lt;/a&gt;変換します &lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; コピーまたは割り当てを行わずに &amp;lt;CStr&amp;gt;にます。</target>
        </trans-unit>
        <trans-unit id="2b14ff55708fcc77b1efd87454be75ae2389c9f1" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../ffi/struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../sync/struct.arc&quot;&gt;&lt;code&gt;Arc&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">&lt;a href=&quot;../ffi/struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;../sync/struct.arc&quot;&gt; &lt;code&gt;Arc&lt;/code&gt; に&lt;/a&gt;変換します &lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; コピーまたは割り当てを行わずに &amp;lt;CStr&amp;gt;にます。</target>
        </trans-unit>
        <trans-unit id="fc96e0065e77ad2d7688149694cde1edd17eda20" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../ffi/struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;u8&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../ffi/struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;../vec/struct.vec&quot;&gt; &lt;code&gt;Vec&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;u8&amp;gt;&lt;/code&gt; に変換しますます。</target>
        </trans-unit>
        <trans-unit id="b25fdf18361b662e363cd40d0a4ed84a7a3357bc" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../ffi/struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;struct.arc&quot;&gt;&lt;code&gt;Arc&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">コピーまたは割り当てを行わずに、&lt;a href=&quot;../ffi/struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;struct.arc&quot;&gt; &lt;code&gt;Arc&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="e18c978ef917b0bedb37b4f77206394ea3f28a89" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../ffi/struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">コピーまたは割り当てを行わずに、&lt;a href=&quot;../ffi/struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;struct.box&quot;&gt; &lt;code&gt;Box&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="d85cca2f429b11ef84561caf22bf3b584b9f1b3d" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../ffi/struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">コピーまたは割り当てを行わずに、&lt;a href=&quot;../ffi/struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;struct.rc&quot;&gt; &lt;code&gt;Rc&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="8ca318758961d8db693744bff574fe9b43d28452" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../ffi/struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;u8&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../ffi/struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;struct.vec&quot;&gt; &lt;code&gt;Vec&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;u8&amp;gt;&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="d2333fd0158fcde3e483aa8e7aab586bedc4c311" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../ffi/struct.nulerror&quot;&gt;&lt;code&gt;NulError&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../io/struct.error&quot;&gt;&lt;code&gt;io::Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../ffi/struct.nulerror&quot;&gt; &lt;code&gt;NulError&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;../io/struct.error&quot;&gt; &lt;code&gt;io::Error&lt;/code&gt; &lt;/a&gt;変換します。</target>
        </trans-unit>
        <trans-unit id="a29a23680dabf90f4d4c26e879f3e167aea1235c" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../ffi/struct.nulerror&quot;&gt;&lt;code&gt;NulError&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;struct.error&quot;&gt;&lt;code&gt;io::Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../ffi/struct.nulerror&quot;&gt; &lt;code&gt;NulError&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;struct.error&quot;&gt; &lt;code&gt;io::Error&lt;/code&gt; &lt;/a&gt;変換します。</target>
        </trans-unit>
        <trans-unit id="da9d7c0c49bdd8d72ca9287a23e58771984fa53e" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;OsStr&amp;gt;&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">コピーまたは割り当てを行わずに、&lt;a href=&quot;../ffi/struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;../boxed/struct.box&quot;&gt; &lt;code&gt;Box&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;OsStr&amp;gt;&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="a4b70caa48603bcd2e89580ae7a0d82f619e80d3" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../rc/struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;OsStr&amp;gt;&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">&lt;a href=&quot;../ffi/struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;../rc/struct.rc&quot;&gt; &lt;code&gt;Rc&lt;/code&gt; に&lt;/a&gt;変換します &lt;code&gt;&amp;lt;OsStr&amp;gt;&lt;/code&gt; コピーまたは割り当てず。</target>
        </trans-unit>
        <trans-unit id="b5594c80207ef1e4cb5832cdc1e9ddfd4d593df9" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../sync/struct.arc&quot;&gt;&lt;code&gt;Arc&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;OsStr&amp;gt;&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">&lt;a href=&quot;../ffi/struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;../sync/struct.arc&quot;&gt; &lt;code&gt;Arc&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;OsStr&amp;gt;&lt;/code&gt; に変換しますコピーまたは割り当てせずにます。</target>
        </trans-unit>
        <trans-unit id="ee53b6823c7c846b33c2a0849d1522605a8722d2" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;struct.arc&quot;&gt;&lt;code&gt;Arc&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;OsStr&amp;gt;&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">&lt;a href=&quot;../ffi/struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;struct.arc&quot;&gt; &lt;code&gt;Arc&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;OsStr&amp;gt;&lt;/code&gt; に変換しますコピーまたは割り当てせずにます。</target>
        </trans-unit>
        <trans-unit id="8c0c7a2ce85d03ccb3daa32f44b5bd06143a88fc" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;OsStr&amp;gt;&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">&lt;a href=&quot;../ffi/struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;struct.box&quot;&gt; &lt;code&gt;Box&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;OsStr&amp;gt;&lt;/code&gt; に変換しますコピーまたは割り当てを行わずにます。</target>
        </trans-unit>
        <trans-unit id="fb6461e9e6c7f6b165c2e70e235f38ebe4c8a713" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;OsStr&amp;gt;&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">&lt;a href=&quot;../ffi/struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;struct.rc&quot;&gt; &lt;code&gt;Rc&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;OsStr&amp;gt;&lt;/code&gt; に変換しますコピーまたは割り当てず。</target>
        </trans-unit>
        <trans-unit id="11a9355dc43fec6a7c5b71c761aa152d644f92bf" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../net/struct.socketaddrv4&quot;&gt;&lt;code&gt;SocketAddrV4&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../net/enum.socketaddr#variant.V4&quot;&gt;&lt;code&gt;SocketAddr::V4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../net/struct.socketaddrv4&quot;&gt; &lt;code&gt;SocketAddrV4&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;../net/enum.socketaddr#variant.V4&quot;&gt; &lt;code&gt;SocketAddr::V4&lt;/code&gt; &lt;/a&gt;変換します。</target>
        </trans-unit>
        <trans-unit id="4efa0ae4d69c1233e946aed107c60db9fb2f1d4b" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../net/struct.socketaddrv6&quot;&gt;&lt;code&gt;SocketAddrV6&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../net/enum.socketaddr#variant.V6&quot;&gt;&lt;code&gt;SocketAddr::V6&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../net/struct.socketaddrv6&quot;&gt; &lt;code&gt;SocketAddrV6&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;../net/enum.socketaddr#variant.V6&quot;&gt; &lt;code&gt;SocketAddr::V6&lt;/code&gt; &lt;/a&gt;変換します。</target>
        </trans-unit>
        <trans-unit id="d6f46c51fd9611f09703a25383e821089f84503d" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../primitive.u32&quot;&gt;&lt;code&gt;u32&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../primitive.char&quot;&gt; &lt;code&gt;char&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;../primitive.u32&quot;&gt; &lt;code&gt;u32&lt;/code&gt; に&lt;/a&gt;変換します。</target>
        </trans-unit>
        <trans-unit id="9c8deffaefbdf9717e199753e8534879e32512fb" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../primitive.u8&quot;&gt;&lt;code&gt;u8&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../primitive.u8&quot;&gt; &lt;code&gt;u8&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;../primitive.char&quot;&gt; &lt;code&gt;char&lt;/code&gt; に&lt;/a&gt;変換します。</target>
        </trans-unit>
        <trans-unit id="5037bcde3664654156237fa47e62e10fb006bcc5" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../str/index&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; into a box of dyn &lt;a href=&quot;../error/trait.error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt;&lt;code&gt;Send&lt;/code&gt;&lt;/a&gt; + &lt;a href=&quot;../marker/trait.sync&quot;&gt;&lt;code&gt;Sync&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../str/index&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;をdyn &lt;a href=&quot;../error/trait.error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt; &lt;code&gt;Send&lt;/code&gt; &lt;/a&gt; + &lt;a href=&quot;../marker/trait.sync&quot;&gt; &lt;code&gt;Sync&lt;/code&gt; &lt;/a&gt;ボックスに変換します。</target>
        </trans-unit>
        <trans-unit id="f7ae439d8afade5ece83a25e03e960c976840c2e" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../str/index&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; into a box of dyn &lt;a href=&quot;../error/trait.error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../str/index&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;をdynのボックスに変換します&lt;a href=&quot;../error/trait.error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; の&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4ac066010049d764978e46278abaf206f09c11fa" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;../ffi/struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; に&lt;/a&gt;変換しますます。</target>
        </trans-unit>
        <trans-unit id="01a32ba02d89d0a559fe07ee796372a68705229b" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; に&lt;/a&gt;変換しますます。</target>
        </trans-unit>
        <trans-unit id="03dcc77cc842e488e17b4eb5e62a5b7fb6eb6517" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; into a box of dyn &lt;a href=&quot;../error/trait.error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt;&lt;code&gt;Send&lt;/code&gt;&lt;/a&gt; + &lt;a href=&quot;../marker/trait.sync&quot;&gt;&lt;code&gt;Sync&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;をdyn &lt;a href=&quot;../error/trait.error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt; &lt;code&gt;Send&lt;/code&gt; &lt;/a&gt; + &lt;a href=&quot;../marker/trait.sync&quot;&gt; &lt;code&gt;Sync&lt;/code&gt; &lt;/a&gt;ボックスに変換します。</target>
        </trans-unit>
        <trans-unit id="97e93e77e494acf6b5243f3ee481a41a13934cde" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; into a box of dyn &lt;a href=&quot;../error/trait.error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;をdyn &lt;a href=&quot;../error/trait.error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;ボックスに変換します。</target>
        </trans-unit>
        <trans-unit id="05446e89773cc0816f8f0130cbf7cc5366cadd6f" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../u8/index&quot;&gt;&lt;code&gt;u8&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../char/index&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../u8/index&quot;&gt; &lt;code&gt;u8&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;../char/index&quot;&gt; &lt;code&gt;char&lt;/code&gt; に&lt;/a&gt;変換しますます。</target>
        </trans-unit>
        <trans-unit id="3d7f9771ef94cfd7e18dbeaaba137246e3750f83" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;../num/struct.nonzerou8&quot;&gt;&lt;code&gt;NonZeroU8&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; into a &lt;a href=&quot;../ffi/struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; without copying nor checking for inner null bytes.</source>
          <target state="translated">&lt;a href=&quot;../num/struct.nonzerou8&quot;&gt; &lt;code&gt;NonZeroU8&lt;/code&gt; &lt;/a&gt;をコピーしたりチェックしたりせずに、&lt;a href=&quot;../vec/struct.vec&quot;&gt; &lt;code&gt;Vec&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; NonZeroU8 &lt;code&gt;&amp;gt;&lt;/code&gt; を&lt;a href=&quot;../ffi/struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; に&lt;/a&gt;変換します。</target>
        </trans-unit>
        <trans-unit id="302deb1f4d6c01df2ae43d855622787ce55fb74c" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;../num/struct.nonzerou8&quot;&gt;&lt;code&gt;NonZeroU8&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; into a &lt;a href=&quot;struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; without copying nor checking for inner null bytes.</source>
          <target state="translated">&lt;a href=&quot;../num/struct.nonzerou8&quot;&gt; &lt;code&gt;NonZeroU8&lt;/code&gt; &lt;/a&gt;をコピーしたりチェックしたりせずに、&lt;a href=&quot;../vec/struct.vec&quot;&gt; &lt;code&gt;Vec&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; NonZeroU8 &lt;code&gt;&amp;gt;&lt;/code&gt; を&lt;a href=&quot;struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; に&lt;/a&gt;変換します。</target>
        </trans-unit>
        <trans-unit id="f6ae4c959e7b50cfd14a15fd97054883b4b9d2fb" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;u8&amp;gt;&lt;/code&gt; to a &lt;a href=&quot;struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; without checking the invariants on the given &lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指定された&lt;a href=&quot;../vec/struct.vec&quot;&gt; &lt;code&gt;Vec&lt;/code&gt; の&lt;/a&gt;不変条件をチェックせずに、&lt;a href=&quot;../vec/struct.vec&quot;&gt; &lt;code&gt;Vec&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;u8&amp;gt;&lt;/code&gt; を&lt;a href=&quot;struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; に&lt;/a&gt;変換します。</target>
        </trans-unit>
        <trans-unit id="2678c99fd8fdc43f16d7467eadb82d93e78c58e2" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;boxed/struct.box&quot;&gt;&lt;code&gt;Box&amp;lt;str&amp;gt;&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; without copying or allocating.</source>
          <target state="translated">変換&lt;a href=&quot;boxed/struct.box&quot;&gt; &lt;code&gt;Box&amp;lt;str&amp;gt;&lt;/code&gt; &lt;/a&gt;への&lt;a href=&quot;string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;のコピーまたは割り当てなし。</target>
        </trans-unit>
        <trans-unit id="130030a2baf6c6eb54f698adef7750699c1911cb" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;char/index&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;u32/index&quot;&gt;&lt;code&gt;u32&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;char/index&quot;&gt; &lt;code&gt;char&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;u32/index&quot;&gt; &lt;code&gt;u32&lt;/code&gt; に&lt;/a&gt;変換します。</target>
        </trans-unit>
        <trans-unit id="2e44ce998bccceebfa7a05532cd930bd0674e79d" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;enum.cow&quot;&gt;&lt;code&gt;Cow&lt;/code&gt;&lt;/a&gt; into a box of dyn &lt;a href=&quot;../error/trait.error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt;&lt;code&gt;Send&lt;/code&gt;&lt;/a&gt; + &lt;a href=&quot;../marker/trait.sync&quot;&gt;&lt;code&gt;Sync&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;enum.cow&quot;&gt; &lt;code&gt;Cow&lt;/code&gt; &lt;/a&gt;をdyn &lt;a href=&quot;../error/trait.error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt; &lt;code&gt;Send&lt;/code&gt; &lt;/a&gt; +&lt;a href=&quot;../marker/trait.sync&quot;&gt; &lt;code&gt;Sync&lt;/code&gt; &lt;/a&gt;ボックスに変換します。</target>
        </trans-unit>
        <trans-unit id="629ea0f945cffea58091bb84ab503dc6d08d2c45" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;enum.cow&quot;&gt;&lt;code&gt;Cow&lt;/code&gt;&lt;/a&gt; into a box of dyn &lt;a href=&quot;../error/trait.error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;enum.cow&quot;&gt; &lt;code&gt;Cow&lt;/code&gt; &lt;/a&gt;をdyn &lt;a href=&quot;../error/trait.error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;ボックスに変換します。</target>
        </trans-unit>
        <trans-unit id="0e65942989638bce57ca860a15f9353124a34134" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; into a box of dyn &lt;a href=&quot;../error/trait.error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt;&lt;code&gt;Send&lt;/code&gt;&lt;/a&gt; + &lt;a href=&quot;../marker/trait.sync&quot;&gt;&lt;code&gt;Sync&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;をdyn&lt;a href=&quot;../error/trait.error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;+&lt;a href=&quot;../marker/trait.send&quot;&gt; &lt;code&gt;Send&lt;/code&gt; &lt;/a&gt;+&lt;a href=&quot;../marker/trait.sync&quot;&gt; &lt;code&gt;Sync&lt;/code&gt; &lt;/a&gt;ボックスに変換します。</target>
        </trans-unit>
        <trans-unit id="56486b1a7d06c44cfafea1293c146d46b5041d62" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; into a box of dyn &lt;a href=&quot;../error/trait.error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;をdyn&lt;a href=&quot;../error/trait.error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;ボックスに変換します。</target>
        </trans-unit>
        <trans-unit id="9141fc35db3a28a46cc87810b784094e41b4da37" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;primitive.u32&quot;&gt;&lt;code&gt;u32&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;primitive.char&quot;&gt; &lt;code&gt;char&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;primitive.u32&quot;&gt; &lt;code&gt;u32&lt;/code&gt; に&lt;/a&gt;変換します。</target>
        </trans-unit>
        <trans-unit id="9544a8c668ed44f4a6e8054267ca167647eb38f9" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;primitive.u8&quot;&gt;&lt;code&gt;u8&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;primitive.u8&quot;&gt; &lt;code&gt;u8&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;primitive.char&quot;&gt; &lt;code&gt;char&lt;/code&gt; に&lt;/a&gt;変換します。</target>
        </trans-unit>
        <trans-unit id="3deb0c9a9f83bd7090d7b2fb3493f15d4af07efb" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;../ffi/struct.osstr&quot;&gt;&lt;code&gt;OsStr&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; into a &lt;code&gt;OsString&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">変換&lt;a href=&quot;struct.box&quot;&gt; &lt;code&gt;Box&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;../ffi/struct.osstr&quot;&gt; &lt;code&gt;OsStr&lt;/code&gt; は&lt;/a&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; に &lt;code&gt;OsString&lt;/code&gt; コピーまたは割り当てずに。</target>
        </trans-unit>
        <trans-unit id="50129c53ae4eb92a6ff5b04e126f88e8ca54e86e" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; into a &lt;a href=&quot;../ffi/struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; without copying or allocating.</source>
          <target state="translated">コピーまたは割り当てを行わずに、&lt;a href=&quot;struct.box&quot;&gt; &lt;code&gt;Box&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; を&lt;a href=&quot;../ffi/struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; に&lt;/a&gt;変換します。</target>
        </trans-unit>
        <trans-unit id="7c96fae541b351683fe9f8bba6309005a7f5044b" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">コピーまたは割り当てを行わずに、&lt;a href=&quot;struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;../boxed/struct.box&quot;&gt; &lt;code&gt;Box&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="00e53719150a327cc01c7ca8a988a6a5eda6e79d" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../rc/struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">コピーまたは割り当てを行わずに、&lt;a href=&quot;struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;../rc/struct.rc&quot;&gt; &lt;code&gt;Rc&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="b6e1ed3d81f61b4800db71326eac4a692ebff7d5" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../sync/struct.arc&quot;&gt;&lt;code&gt;Arc&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">コピーも割り当てもせずに、&lt;a href=&quot;struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;../sync/struct.arc&quot;&gt; &lt;code&gt;Arc&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="83ef98f3af5ff6d179a460803d51411341bc656d" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;u8&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;../vec/struct.vec&quot;&gt; &lt;code&gt;Vec&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;u8&amp;gt;&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="3a4c21f1fe950ebd401db7315b07a169a4c62981" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;struct.nulerror&quot;&gt;&lt;code&gt;NulError&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../io/struct.error&quot;&gt;&lt;code&gt;io::Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;struct.nulerror&quot;&gt; &lt;code&gt;NulError&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;../io/struct.error&quot;&gt; &lt;code&gt;io::Error&lt;/code&gt; &lt;/a&gt;変換します。</target>
        </trans-unit>
        <trans-unit id="c961b860653ffae5954488d0c345e6c5f84386c0" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;OsStr&amp;gt;&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">コピーまたは割り当てを行わずに、&lt;a href=&quot;struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;../boxed/struct.box&quot;&gt; &lt;code&gt;Box&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;OsStr&amp;gt;&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="b7410d710a6f08a4266ed34ce0bd9421324e6c77" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../rc/struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;OsStr&amp;gt;&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">コピーまたは割り当てをせずに、&lt;a href=&quot;struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;../rc/struct.rc&quot;&gt; &lt;code&gt;Rc&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;OsStr&amp;gt;&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="80d8a9afc471ef80c18b47fff0419a5b090ace6d" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../sync/struct.arc&quot;&gt;&lt;code&gt;Arc&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;OsStr&amp;gt;&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">変換&lt;a href=&quot;struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; は&lt;/a&gt;に&lt;a href=&quot;../sync/struct.arc&quot;&gt; &lt;code&gt;Arc&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;OsStr&amp;gt;&lt;/code&gt; コピーまたは割り当てず。</target>
        </trans-unit>
        <trans-unit id="6431406076c64b76f904c00b5194f273b831260f" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;struct.socketaddrv4&quot;&gt;&lt;code&gt;SocketAddrV4&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;enum.socketaddr#variant.V4&quot;&gt;&lt;code&gt;SocketAddr::V4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;struct.socketaddrv4&quot;&gt; &lt;code&gt;SocketAddrV4&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;enum.socketaddr#variant.V4&quot;&gt; &lt;code&gt;SocketAddr::V4&lt;/code&gt; &lt;/a&gt;変換します。</target>
        </trans-unit>
        <trans-unit id="791ee8f9b1a4469418bb4afa8fc3e245927636e3" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;struct.socketaddrv6&quot;&gt;&lt;code&gt;SocketAddrV6&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;enum.socketaddr#variant.V6&quot;&gt;&lt;code&gt;SocketAddr::V6&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;struct.socketaddrv6&quot;&gt; &lt;code&gt;SocketAddrV6&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;enum.socketaddr#variant.V6&quot;&gt; &lt;code&gt;SocketAddr::V6&lt;/code&gt; &lt;/a&gt;変換します。</target>
        </trans-unit>
        <trans-unit id="cf0b398e78cd40a705807e37ba53b34cd7683621" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;../ffi/struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; に&lt;/a&gt;変換します。</target>
        </trans-unit>
        <trans-unit id="2fe48be71fb1ff65cd2d46afeff9f94c6dcc7aa4" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; into a box of dyn &lt;a href=&quot;../error/trait.error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt;&lt;code&gt;Send&lt;/code&gt;&lt;/a&gt; + &lt;a href=&quot;../marker/trait.sync&quot;&gt;&lt;code&gt;Sync&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;をdyn &lt;a href=&quot;../error/trait.error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt; &lt;code&gt;Send&lt;/code&gt; &lt;/a&gt; + &lt;a href=&quot;../marker/trait.sync&quot;&gt; &lt;code&gt;Sync&lt;/code&gt; &lt;/a&gt;ボックスに変換します。</target>
        </trans-unit>
        <trans-unit id="ff32bdd0d2f3418ad19df6e93c0c3d13fbf68e43" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; into a box of dyn &lt;a href=&quot;../error/trait.error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;をdyn &lt;a href=&quot;../error/trait.error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;ボックスに変換します。</target>
        </trans-unit>
        <trans-unit id="24367f23bb853e16e2ec00e9fc105762ca4f808c" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;../num/struct.nonzerou8&quot;&gt;&lt;code&gt;NonZeroU8&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; into a &lt;a href=&quot;../ffi/struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; without copying nor checking for inner null bytes.</source>
          <target state="translated">&lt;a href=&quot;../num/struct.nonzerou8&quot;&gt; &lt;code&gt;NonZeroU8&lt;/code&gt; &lt;/a&gt;をコピーしたりチェックしたりせずに、&lt;a href=&quot;struct.vec&quot;&gt; &lt;code&gt;Vec&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; NonZeroU8 &lt;code&gt;&amp;gt;&lt;/code&gt; を&lt;a href=&quot;../ffi/struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; に&lt;/a&gt;変換します。</target>
        </trans-unit>
        <trans-unit id="d4c1e662741447ad062146bca0d17982c339ead0" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;u8/index&quot;&gt;&lt;code&gt;u8&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;char/index&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;u8/index&quot;&gt; &lt;code&gt;u8&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;char/index&quot;&gt; &lt;code&gt;char&lt;/code&gt; に&lt;/a&gt;変換します。</target>
        </trans-unit>
        <trans-unit id="bcb50a1d14840aa1865afdda5fbba02cd6c28c3f" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;&amp;amp;[T]&lt;/code&gt; into a &lt;code&gt;Box&amp;lt;[T]&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;[T]&lt;/code&gt; を &lt;code&gt;Box&amp;lt;[T]&amp;gt;&lt;/code&gt; 変換します&amp;lt;[T]&amp;gt;</target>
        </trans-unit>
        <trans-unit id="52b61a90530c1398c90bc5313e44f61fc0821ec6" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;&amp;amp;mut str&lt;/code&gt; into a &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">変換するA &lt;code&gt;&amp;amp;mut str&lt;/code&gt; に &lt;code&gt;String&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1bafe80a66f71d97b087a825fd4e45818e750a52" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;&amp;amp;str&lt;/code&gt; into a &lt;code&gt;Box&amp;lt;str&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;str&lt;/code&gt; を &lt;code&gt;Box&amp;lt;str&amp;gt;&lt;/code&gt; 変換します&amp;lt;str&amp;gt;</target>
        </trans-unit>
        <trans-unit id="83567149ae2e3508a5885e26f888fe84aaf63a7e" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;BinaryHeap&amp;lt;T&amp;gt;&lt;/code&gt; into a &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;BinaryHeap&amp;lt;T&amp;gt;&lt;/code&gt; を &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; 変換します。</target>
        </trans-unit>
        <trans-unit id="b41f5195e016e753adfde65f148db081c9422123" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;Box&amp;lt;OsStr&amp;gt;&lt;/code&gt; into a &lt;code&gt;OsString&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">変換 &lt;code&gt;Box&amp;lt;OsStr&amp;gt;&lt;/code&gt; に &lt;code&gt;OsString&lt;/code&gt; コピーまたは割り当てずに。</target>
        </trans-unit>
        <trans-unit id="8e6b447489ef6fcdf6c86be112a05c9bcc83a010" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;Box&amp;lt;Path&amp;gt;&lt;/code&gt; into a &lt;code&gt;PathBuf&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Box&amp;lt;Path&amp;gt;&lt;/code&gt; を &lt;code&gt;PathBuf&lt;/code&gt; に変換します</target>
        </trans-unit>
        <trans-unit id="0a8c2399b3e07b786db4d24aabb658e78c04d7ba" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; into a &lt;code&gt;Box&amp;lt;[T]&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; を &lt;code&gt;Box&amp;lt;[T]&amp;gt;&lt;/code&gt; 変換します</target>
        </trans-unit>
        <trans-unit id="91e94c6ecac78f1cb58346a0d0e52a3cfa7708db" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; into a &lt;code&gt;Pin&amp;lt;Box&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; を &lt;code&gt;Pin&amp;lt;Box&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; 変換します</target>
        </trans-unit>
        <trans-unit id="dc1ffd001a1d54190107d29ad62eb6e5fb71488c" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;Box&amp;lt;str&amp;gt;&amp;gt;&lt;/code&gt; into a &lt;code&gt;Box&amp;lt;[u8]&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Box&amp;lt;str&amp;gt;&amp;gt;&lt;/code&gt; を &lt;code&gt;Box&amp;lt;[u8]&amp;gt;&lt;/code&gt; 変換します</target>
        </trans-unit>
        <trans-unit id="51d43881320388593145e985b9ad14af4738b7a5" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;Box&amp;lt;str&amp;gt;&lt;/code&gt; into a &lt;code&gt;Box&amp;lt;[u8]&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Box&amp;lt;str&amp;gt;&lt;/code&gt; を &lt;code&gt;Box&amp;lt;[u8]&amp;gt;&lt;/code&gt; 変換します</target>
        </trans-unit>
        <trans-unit id="8eff31fce2c7f05e934ef590a70594ab2c578b68" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;Box&amp;lt;str&amp;gt;&lt;/code&gt; into a &lt;code&gt;Box&amp;lt;[u8]&amp;gt;&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">コピーまたは割り当てせずに、 &lt;code&gt;Box&amp;lt;str&amp;gt;&lt;/code&gt; を &lt;code&gt;Box&amp;lt;[u8]&amp;gt;&lt;/code&gt; 変換します。</target>
        </trans-unit>
        <trans-unit id="cf9ae497c8472d72a09fda61c2822e37bf25d88e" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;CStr&lt;/code&gt; into a &lt;a href=&quot;../borrow/enum.cow&quot;&gt;&lt;code&gt;Cow&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CStr&lt;/code&gt; を&lt;a href=&quot;../borrow/enum.cow&quot;&gt; &lt;code&gt;Cow&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="2f67bf585cd38bc241e1b2c3224eebea5639509b" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;CStr&lt;/code&gt; into a &lt;a href=&quot;../borrow/enum.cow&quot;&gt;&lt;code&gt;Cow&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CStr&lt;/code&gt; を&lt;a href=&quot;../borrow/enum.cow&quot;&gt; &lt;code&gt;Cow&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="dc1a46f892ce2931a3f7b1bdf1ea82665d848aaf" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;ChildStderr&lt;/code&gt; into a &lt;code&gt;Stdio&lt;/code&gt;</source>
          <target state="translated">変換し &lt;code&gt;ChildStderr&lt;/code&gt; に &lt;code&gt;Stdio&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="47411ceb563cfd0d8418d3a7d85ebbf602b1247a" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;ChildStdin&lt;/code&gt; into a &lt;code&gt;Stdio&lt;/code&gt;</source>
          <target state="translated">変換し &lt;code&gt;ChildStdin&lt;/code&gt; に &lt;code&gt;Stdio&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3f7300d5183c175cacd491adfc9b55da4e1d2831" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;ChildStdout&lt;/code&gt; into a &lt;code&gt;Stdio&lt;/code&gt;</source>
          <target state="translated">変換し &lt;code&gt;ChildStdout&lt;/code&gt; に &lt;code&gt;Stdio&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="594d05935f944760cf6bbdf66de9e7a23f43345e" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;File&lt;/code&gt; into a &lt;code&gt;Stdio&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;File&lt;/code&gt; を &lt;code&gt;Stdio&lt;/code&gt; 変換します</target>
        </trans-unit>
        <trans-unit id="47b664e550418f87220133b148bc20e423beb7b9" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;NonZeroI128&lt;/code&gt; into an &lt;code&gt;i128&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;NonZeroI128&lt;/code&gt; をi128に変換し &lt;code&gt;i128&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d7578f40bb33a71e39534b65c3acaa1cd61d8cdf" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;NonZeroI16&lt;/code&gt; into an &lt;code&gt;i16&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;NonZeroI16&lt;/code&gt; をi16に変換し &lt;code&gt;i16&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="565c5466dc904ce2cc44cc0493f4eedbd5d61a30" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;NonZeroI32&lt;/code&gt; into an &lt;code&gt;i32&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;NonZeroI32&lt;/code&gt; を &lt;code&gt;i32&lt;/code&gt; に変換します</target>
        </trans-unit>
        <trans-unit id="c9d9daa044746766790bb629517cf3705f281eba" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;NonZeroI64&lt;/code&gt; into an &lt;code&gt;i64&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;NonZeroI64&lt;/code&gt; をi64に変換し &lt;code&gt;i64&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="79020ca41757af1ca9f516424a6e4d207f5daa1c" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;NonZeroI8&lt;/code&gt; into an &lt;code&gt;i8&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;NonZeroI8&lt;/code&gt; を &lt;code&gt;i8&lt;/code&gt; に変換します</target>
        </trans-unit>
        <trans-unit id="cde676153b014bd936e7417a310b133f9d75e959" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;NonZeroIsize&lt;/code&gt; into an &lt;code&gt;isize&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;NonZeroIsize&lt;/code&gt; をisizeに変換し &lt;code&gt;isize&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="517b71de0f49f40d0272468a12bf0219e2e98ebb" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;NonZeroU128&lt;/code&gt; into an &lt;code&gt;u128&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;NonZeroU128&lt;/code&gt; をu128に変換し &lt;code&gt;u128&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8ee28eed4c174167605c6eb9e97e79c6185cdadb" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;NonZeroU16&lt;/code&gt; into an &lt;code&gt;u16&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;NonZeroU16&lt;/code&gt; をu16に変換し &lt;code&gt;u16&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9531e9d534d1c1f7162192869f2e80aa2a9e0045" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;NonZeroU32&lt;/code&gt; into an &lt;code&gt;u32&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;NonZeroU32&lt;/code&gt; を &lt;code&gt;u32&lt;/code&gt; に変換します</target>
        </trans-unit>
        <trans-unit id="6396a9d868c19a85ec6221b1a66b066a1e336bc1" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;NonZeroU64&lt;/code&gt; into an &lt;code&gt;u64&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;NonZeroU64&lt;/code&gt; をu64に変換し &lt;code&gt;u64&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e68a161d6fe4b0971729632901cac2888f5d022e" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;NonZeroU8&lt;/code&gt; into an &lt;code&gt;u8&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;NonZeroU8&lt;/code&gt; をu8に変換し &lt;code&gt;u8&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b7a5a46d06b88298bf6dadb805e18e58e2a4e5cc" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;NonZeroUsize&lt;/code&gt; into an &lt;code&gt;usize&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;NonZeroUsize&lt;/code&gt; をusizeに変換し &lt;code&gt;usize&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="98fad3b87fe329cdb28c2472db1177be714e3392" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;OsString&lt;/code&gt; into a &lt;code&gt;PathBuf&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;OsString&lt;/code&gt; をPathBufに変換し &lt;code&gt;PathBuf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="03863d55ad289c17cb9083da1fed0834b328a3c9" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;Path&lt;/code&gt; into an &lt;code&gt;Arc&lt;/code&gt; by copying the &lt;code&gt;Path&lt;/code&gt; data into a new &lt;code&gt;Arc&lt;/code&gt; buffer.</source>
          <target state="translated">&lt;code&gt;Path&lt;/code&gt; データを新しい &lt;code&gt;Arc&lt;/code&gt; バッファにコピーすることにより、 &lt;code&gt;Path&lt;/code&gt; を &lt;code&gt;Arc&lt;/code&gt; 変換します。</target>
        </trans-unit>
        <trans-unit id="7ca10193cd13d03a85955c2c796d75dd06e23e59" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;Path&lt;/code&gt; into an &lt;code&gt;Rc&lt;/code&gt; by copying the &lt;code&gt;Path&lt;/code&gt; data into a new &lt;code&gt;Rc&lt;/code&gt; buffer.</source>
          <target state="translated">&lt;code&gt;Path&lt;/code&gt; データを新しい &lt;code&gt;Rc&lt;/code&gt; バッファーにコピーすることにより、 &lt;code&gt;Path&lt;/code&gt; を &lt;code&gt;Rc&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="b4a9829245ea605e4087e03bdac6c4dc04a77c50" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;Path&lt;/code&gt; to a &lt;a href=&quot;../borrow/enum.cow&quot;&gt;&lt;code&gt;Cow&amp;lt;str&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Path&lt;/code&gt; を&lt;a href=&quot;../borrow/enum.cow&quot;&gt; &lt;code&gt;Cow&amp;lt;str&amp;gt;&lt;/code&gt; &lt;/a&gt;変換します&amp;lt;str&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="e10fd97cf9cf5599eeb86af5178a9840684d830a" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;Path&lt;/code&gt; to an owned &lt;a href=&quot;struct.pathbuf&quot;&gt;&lt;code&gt;PathBuf&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Path&lt;/code&gt; を所有されている&lt;a href=&quot;struct.pathbuf&quot;&gt; &lt;code&gt;PathBuf&lt;/code&gt; に&lt;/a&gt;変換します。</target>
        </trans-unit>
        <trans-unit id="eb0109e2dc898f4cd22be0dd1fb080947b495e8a" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;PathBuf&lt;/code&gt; into a &lt;code&gt;Box&amp;lt;Path&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;PathBuf&lt;/code&gt; を &lt;code&gt;Box&amp;lt;Path&amp;gt;&lt;/code&gt; 変換します</target>
        </trans-unit>
        <trans-unit id="79ef207eacd8c844ef3305fc3019cecf5a497ac8" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;PathBuf&lt;/code&gt; into a &lt;code&gt;OsString&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;PathBuf&lt;/code&gt; をOsStringに変換し &lt;code&gt;OsString&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="75d08c6944a5f2afaaca4432b19d74d46d6c9646" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;PathBuf&lt;/code&gt; into an &lt;code&gt;Arc&lt;/code&gt; by moving the &lt;code&gt;PathBuf&lt;/code&gt; data into a new &lt;code&gt;Arc&lt;/code&gt; buffer.</source>
          <target state="translated">&lt;code&gt;PathBuf&lt;/code&gt; データを新しい &lt;code&gt;Arc&lt;/code&gt; バッファーに移動することにより、 &lt;code&gt;PathBuf&lt;/code&gt; を &lt;code&gt;Arc&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="5656068f6cb8d70f7137b95714ffbaf75cdce4e4" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;PathBuf&lt;/code&gt; into an &lt;code&gt;Rc&lt;/code&gt; by moving the &lt;code&gt;PathBuf&lt;/code&gt; data into a new &lt;code&gt;Rc&lt;/code&gt; buffer.</source>
          <target state="translated">&lt;code&gt;PathBuf&lt;/code&gt; データを新しい &lt;code&gt;Rc&lt;/code&gt; バッファーに移動することにより、 &lt;code&gt;PathBuf&lt;/code&gt; を &lt;code&gt;Rc&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="d832a43f8ec0d4ca8efc3a87f8cf3a7416b01ae1" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;RecvError&lt;/code&gt; into a &lt;code&gt;RecvTimeoutError&lt;/code&gt;.</source>
          <target state="translated">変換し &lt;code&gt;RecvError&lt;/code&gt; に &lt;code&gt;RecvTimeoutError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cee77b2e179030ba9450d7acd26ad7171c3359ef" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;RecvError&lt;/code&gt; into a &lt;code&gt;TryRecvError&lt;/code&gt;.</source>
          <target state="translated">変換し &lt;code&gt;RecvError&lt;/code&gt; に &lt;code&gt;TryRecvError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c764f49ee62702bbeefaf62f621fe381b709fe64" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;SendError&amp;lt;T&amp;gt;&lt;/code&gt; into a &lt;code&gt;TrySendError&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">変換するA &lt;code&gt;SendError&amp;lt;T&amp;gt;&lt;/code&gt; に &lt;code&gt;TrySendError&amp;lt;T&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bdaa659a4f6bcc5404af4dd88387e22ed7c31125" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;String&lt;/code&gt; into a &lt;code&gt;PathBuf&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; を &lt;code&gt;PathBuf&lt;/code&gt; に変換します</target>
        </trans-unit>
        <trans-unit id="189d6b3f1d45bf60434960667cb203ae044af1da" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;String&lt;/code&gt; into a byte vector.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; をバイトベクトルに変換します。</target>
        </trans-unit>
        <trans-unit id="0fdcfdecade353d503da1650e37c7d056fce188a" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;String&lt;/code&gt; into a mutable string slice.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; を変更可能な文字列スライスに変換します。</target>
        </trans-unit>
        <trans-unit id="a005776af8cdbc1e4ce274e9b626c45d6e0a737b" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; into a &lt;code&gt;BinaryHeap&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; を &lt;code&gt;BinaryHeap&amp;lt;T&amp;gt;&lt;/code&gt; 変換します。</target>
        </trans-unit>
        <trans-unit id="bb3d38b712aa2507136b81017131058657b76bbf" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;[T; N]&lt;/code&gt; into a &lt;code&gt;Box&amp;lt;[T]&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[T; N]&lt;/code&gt; 変換します N]に &lt;code&gt;Box&amp;lt;[T]&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0f0f6c5dcf6c5004f4556ede1a8d88df4fff7790" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;bool&lt;/code&gt; into an &lt;code&gt;AtomicBool&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; を &lt;code&gt;AtomicBool&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="70101800425c6ea71ada9a1d451229e9886771f1" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;bool&lt;/code&gt; to a &lt;code&gt;i128&lt;/code&gt;. The resulting value is &lt;code&gt;0&lt;/code&gt; for &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt; for &lt;code&gt;true&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; を &lt;code&gt;i128&lt;/code&gt; に変換します。結果の値は &lt;code&gt;0&lt;/code&gt; のための &lt;code&gt;false&lt;/code&gt; および &lt;code&gt;1&lt;/code&gt; のため &lt;code&gt;true&lt;/code&gt; 値。</target>
        </trans-unit>
        <trans-unit id="929f027be27a006120b46e13c82e048fb59174df" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;bool&lt;/code&gt; to a &lt;code&gt;i16&lt;/code&gt;. The resulting value is &lt;code&gt;0&lt;/code&gt; for &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt; for &lt;code&gt;true&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; を &lt;code&gt;i16&lt;/code&gt; に変換します。結果の値は &lt;code&gt;0&lt;/code&gt; のための &lt;code&gt;false&lt;/code&gt; および &lt;code&gt;1&lt;/code&gt; のため &lt;code&gt;true&lt;/code&gt; 値。</target>
        </trans-unit>
        <trans-unit id="1fd9262da6a49289a0422a7b3aeae91ed2be4fea" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;bool&lt;/code&gt; to a &lt;code&gt;i32&lt;/code&gt;. The resulting value is &lt;code&gt;0&lt;/code&gt; for &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt; for &lt;code&gt;true&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; を &lt;code&gt;i32&lt;/code&gt; に変換します。結果の値は &lt;code&gt;0&lt;/code&gt; のための &lt;code&gt;false&lt;/code&gt; および &lt;code&gt;1&lt;/code&gt; のため &lt;code&gt;true&lt;/code&gt; 値。</target>
        </trans-unit>
        <trans-unit id="f89ecc9b61abaefec84a5f51aec5bb043e75788d" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;bool&lt;/code&gt; to a &lt;code&gt;i64&lt;/code&gt;. The resulting value is &lt;code&gt;0&lt;/code&gt; for &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt; for &lt;code&gt;true&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; を &lt;code&gt;i64&lt;/code&gt; に変換します。結果の値は &lt;code&gt;0&lt;/code&gt; のための &lt;code&gt;false&lt;/code&gt; および &lt;code&gt;1&lt;/code&gt; のため &lt;code&gt;true&lt;/code&gt; 値。</target>
        </trans-unit>
        <trans-unit id="f060822416214b74d945cffca02732ddb751eed6" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;bool&lt;/code&gt; to a &lt;code&gt;i8&lt;/code&gt;. The resulting value is &lt;code&gt;0&lt;/code&gt; for &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt; for &lt;code&gt;true&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; を &lt;code&gt;i8&lt;/code&gt; に変換します。結果の値は &lt;code&gt;0&lt;/code&gt; のための &lt;code&gt;false&lt;/code&gt; および &lt;code&gt;1&lt;/code&gt; のため &lt;code&gt;true&lt;/code&gt; 値。</target>
        </trans-unit>
        <trans-unit id="5b5d51c7e068453d730661130d649d6b1a0d5cc6" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;bool&lt;/code&gt; to a &lt;code&gt;isize&lt;/code&gt;. The resulting value is &lt;code&gt;0&lt;/code&gt; for &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt; for &lt;code&gt;true&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; を &lt;code&gt;isize&lt;/code&gt; に変換します。結果の値は &lt;code&gt;0&lt;/code&gt; のための &lt;code&gt;false&lt;/code&gt; および &lt;code&gt;1&lt;/code&gt; のため &lt;code&gt;true&lt;/code&gt; 値。</target>
        </trans-unit>
        <trans-unit id="b9328ab1d682bdef3cab778bfeac7f924548328d" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;bool&lt;/code&gt; to a &lt;code&gt;u128&lt;/code&gt;. The resulting value is &lt;code&gt;0&lt;/code&gt; for &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt; for &lt;code&gt;true&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; を &lt;code&gt;u128&lt;/code&gt; に変換します。結果の値は &lt;code&gt;0&lt;/code&gt; のための &lt;code&gt;false&lt;/code&gt; および &lt;code&gt;1&lt;/code&gt; のため &lt;code&gt;true&lt;/code&gt; 値。</target>
        </trans-unit>
        <trans-unit id="8aa7a598a7228fada2160a79130cdca3c70467ca" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;bool&lt;/code&gt; to a &lt;code&gt;u16&lt;/code&gt;. The resulting value is &lt;code&gt;0&lt;/code&gt; for &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt; for &lt;code&gt;true&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; を &lt;code&gt;u16&lt;/code&gt; に変換します。結果の値は &lt;code&gt;0&lt;/code&gt; のための &lt;code&gt;false&lt;/code&gt; および &lt;code&gt;1&lt;/code&gt; のため &lt;code&gt;true&lt;/code&gt; 値。</target>
        </trans-unit>
        <trans-unit id="599434807547538a9ac054391b9eeada0895b267" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;bool&lt;/code&gt; to a &lt;code&gt;u32&lt;/code&gt;. The resulting value is &lt;code&gt;0&lt;/code&gt; for &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt; for &lt;code&gt;true&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; を &lt;code&gt;u32&lt;/code&gt; に変換します。結果の値は &lt;code&gt;0&lt;/code&gt; のための &lt;code&gt;false&lt;/code&gt; および &lt;code&gt;1&lt;/code&gt; のため &lt;code&gt;true&lt;/code&gt; 値。</target>
        </trans-unit>
        <trans-unit id="8db02dda26ac25eeea637389f0de03b7c425c449" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;bool&lt;/code&gt; to a &lt;code&gt;u64&lt;/code&gt;. The resulting value is &lt;code&gt;0&lt;/code&gt; for &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt; for &lt;code&gt;true&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; を &lt;code&gt;u64&lt;/code&gt; に変換します。結果の値は &lt;code&gt;0&lt;/code&gt; のための &lt;code&gt;false&lt;/code&gt; および &lt;code&gt;1&lt;/code&gt; のため &lt;code&gt;true&lt;/code&gt; 値。</target>
        </trans-unit>
        <trans-unit id="a86fe90d460f1dc268a8512055f95bb51cb32464" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;bool&lt;/code&gt; to a &lt;code&gt;u8&lt;/code&gt;. The resulting value is &lt;code&gt;0&lt;/code&gt; for &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt; for &lt;code&gt;true&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; を &lt;code&gt;u8&lt;/code&gt; に変換します。結果の値は &lt;code&gt;0&lt;/code&gt; のための &lt;code&gt;false&lt;/code&gt; および &lt;code&gt;1&lt;/code&gt; のため &lt;code&gt;true&lt;/code&gt; 値。</target>
        </trans-unit>
        <trans-unit id="93bd531b59ec6b027ca1de4b4023f011f09c0bc5" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;bool&lt;/code&gt; to a &lt;code&gt;usize&lt;/code&gt;. The resulting value is &lt;code&gt;0&lt;/code&gt; for &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt; for &lt;code&gt;true&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; を &lt;code&gt;usize&lt;/code&gt; に変換します。結果の値は &lt;code&gt;0&lt;/code&gt; のための &lt;code&gt;false&lt;/code&gt; および &lt;code&gt;1&lt;/code&gt; のため &lt;code&gt;true&lt;/code&gt; 値。</target>
        </trans-unit>
        <trans-unit id="457339c197484d0834bd470bb3055e6a996b2ac3" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;char&lt;/code&gt; to a digit in the given radix.</source>
          <target state="translated">&lt;code&gt;char&lt;/code&gt; を指定された基数の数字に変換します。</target>
        </trans-unit>
        <trans-unit id="c6fdef231b91e9827bf5362ab16dbeccaacb412d" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;u32&lt;/code&gt; to a &lt;code&gt;char&lt;/code&gt;, ignoring validity.</source>
          <target state="translated">有効性を無視して、 &lt;code&gt;u32&lt;/code&gt; を &lt;code&gt;char&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="f21611b03f5d0510e836842cff70c3865f5e851a" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;u32&lt;/code&gt; to a &lt;code&gt;char&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;u32&lt;/code&gt; を &lt;code&gt;char&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="36a973083c660deb6a18070fe865a550715a42b0" translate="yes" xml:space="preserve">
          <source>Converts a Path into a Rc by copying the Path data into a new Rc buffer.</source>
          <target state="translated">パスのデータを新しいRcバッファにコピーして、パスをRcに変換します。</target>
        </trans-unit>
        <trans-unit id="06ffb7f201b4481138fdd417928c3c66370e06fd" translate="yes" xml:space="preserve">
          <source>Converts a boxed slice of bytes to a boxed string slice without checking that the string contains valid UTF-8.</source>
          <target state="translated">文字列に有効な UTF-8 が含まれているかどうかをチェックせずに、バイトの箱型スライスを箱型文字列スライスに変換します。</target>
        </trans-unit>
        <trans-unit id="194aa8e8e10e7bf946af1548897bb1e52a99d431" translate="yes" xml:space="preserve">
          <source>Converts a digit in the given radix to a &lt;code&gt;char&lt;/code&gt;.</source>
          <target state="translated">指定された基数の数字を &lt;code&gt;char&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="56b8b94e8fd327d6205c9f59c9eb0670cc2b0f73" translate="yes" xml:space="preserve">
          <source>Converts a generic type &lt;code&gt;T&lt;/code&gt; into a &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt;</source>
          <target state="translated">ジェネリック型 &lt;code&gt;T&lt;/code&gt; を &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; 変換します</target>
        </trans-unit>
        <trans-unit id="d3ca9303503e3a6fbcdd41e1789eafe4c7eb181a" translate="yes" xml:space="preserve">
          <source>Converts a host byte order &lt;code&gt;u32&lt;/code&gt; into an &lt;code&gt;Ipv4Addr&lt;/code&gt;.</source>
          <target state="translated">ホストのバイトオーダー &lt;code&gt;u32&lt;/code&gt; を &lt;code&gt;Ipv4Addr&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="91320d709e2ac19e0dfc9be6f86cf512d7edb5ca" translate="yes" xml:space="preserve">
          <source>Converts a mutable reference to &lt;code&gt;T&lt;/code&gt; into a mutable reference to an array of length 1 (without copying).</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; への可変参照を長さ1の配列への可変参照に変換します（コピーなし）。</target>
        </trans-unit>
        <trans-unit id="4c622f5ec6ca8cc5700575c43853637aacb34b4e" translate="yes" xml:space="preserve">
          <source>Converts a mutable slice of bytes to a mutable string slice.</source>
          <target state="translated">変形可能なバイト数のスライスを変形可能な文字列スライスに変換します。</target>
        </trans-unit>
        <trans-unit id="764f33f1850bf6b4368ebbc45bf4fe9f4379bbb8" translate="yes" xml:space="preserve">
          <source>Converts a mutable string slice to a mutable byte slice.</source>
          <target state="translated">変形可能な文字列スライスを変形可能なバイトスライスに変換します。</target>
        </trans-unit>
        <trans-unit id="0d02765932717e776464c2711f382a4fc35b1a55" translate="yes" xml:space="preserve">
          <source>Converts a mutable string slice to a mutable byte slice. To convert the mutable byte slice back into a mutable string slice, use the &lt;a href=&quot;str/fn.from_utf8_mut&quot;&gt;&lt;code&gt;str::from_utf8_mut&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">可変文字列スライスを可変バイトスライスに変換します。可変バイトスライスを可変文字列スライスに戻すには、&lt;a href=&quot;str/fn.from_utf8_mut&quot;&gt; &lt;code&gt;str::from_utf8_mut&lt;/code&gt; &lt;/a&gt;関数を使用します。</target>
        </trans-unit>
        <trans-unit id="ad81024213e868a6383a59da85867362f82aba61" translate="yes" xml:space="preserve">
          <source>Converts a mutable string slice to a raw pointer.</source>
          <target state="translated">変形可能な文字列スライスを生ポインタに変換します。</target>
        </trans-unit>
        <trans-unit id="23fa31ec96ebc3a1c0c28d937085d2ab8d52ee8c" translate="yes" xml:space="preserve">
          <source>Converts a raw pointer previously created by &lt;a href=&quot;struct.weak#method.into_raw&quot;&gt;&lt;code&gt;into_raw&lt;/code&gt;&lt;/a&gt; back into &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">以前&lt;a href=&quot;struct.weak#method.into_raw&quot;&gt; &lt;code&gt;into_raw&lt;/code&gt; で&lt;/a&gt;作成された生のポインタを &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt; 変換します。</target>
        </trans-unit>
        <trans-unit id="6e4213e799fe61dc5dc8b9a6e640cb5c3996ca40" translate="yes" xml:space="preserve">
          <source>Converts a reference to &lt;code&gt;T&lt;/code&gt; into a reference to an array of length 1 (without copying).</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; への参照を長さ1の配列への参照に変換します（コピーなし）。</target>
        </trans-unit>
        <trans-unit id="c352b487035da80fa46a591658f8d11ee1f96cbb" translate="yes" xml:space="preserve">
          <source>Converts a reference to T into a slice of length 1 (without copying).</source>
          <target state="translated">Tへの参照を長さ1のスライスに変換します(コピーなし)。</target>
        </trans-unit>
        <trans-unit id="1de468daac84b3022b5853f863ad0362bf41aa2d" translate="yes" xml:space="preserve">
          <source>Converts a slice of bytes to a string slice without checking that the string contains valid UTF-8.</source>
          <target state="translated">文字列に有効な UTF-8 が含まれているかどうかをチェックせずに、バイトのスライスを文字列のスライスに変換します。</target>
        </trans-unit>
        <trans-unit id="8873be30b93b2adcab1d083688a0abe5f31a0951" translate="yes" xml:space="preserve">
          <source>Converts a slice of bytes to a string slice without checking that the string contains valid UTF-8; mutable version.</source>
          <target state="translated">文字列に有効な UTF-8;変形可能なバージョンが含まれているかどうかをチェックせずに、バイトのスライスを文字列のスライスに変換します。</target>
        </trans-unit>
        <trans-unit id="ea5b0c4c2fba9471d92c1c862b803e4a0ac9b1b3" translate="yes" xml:space="preserve">
          <source>Converts a slice of bytes to a string slice.</source>
          <target state="translated">バイトのスライスを文字列のスライスに変換します。</target>
        </trans-unit>
        <trans-unit id="ce9520a0614988e0d1cff79ffd6b51cb737a3cba" translate="yes" xml:space="preserve">
          <source>Converts a slice of bytes to a string, including invalid characters.</source>
          <target state="translated">無効な文字を含むバイトのスライスを文字列に変換します。</target>
        </trans-unit>
        <trans-unit id="940acf14e650522ac4fda99dbb2a9c07c34ebee0" translate="yes" xml:space="preserve">
          <source>Converts a string in base 10 to a float. Accepts an optional decimal exponent.</source>
          <target state="translated">ベース10の文字列をfloatに変換します。オプションの10進数を受け取ります。</target>
        </trans-unit>
        <trans-unit id="58e1f00741960a2db2644fb62685d89cf3afbf93" translate="yes" xml:space="preserve">
          <source>Converts a string slice in a given base to an integer.</source>
          <target state="translated">指定された基底の文字列スライスを整数に変換します。</target>
        </trans-unit>
        <trans-unit id="615362b0eaa4b5787787d1672b34678384533267" translate="yes" xml:space="preserve">
          <source>Converts a string slice to a byte slice. To convert the byte slice back into a string slice, use the &lt;a href=&quot;../str/fn.from_utf8&quot;&gt;&lt;code&gt;from_utf8&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">文字列スライスをバイトスライスに変換します。バイトスライスを文字列スライスに戻すには、&lt;a href=&quot;../str/fn.from_utf8&quot;&gt; &lt;code&gt;from_utf8&lt;/code&gt; &lt;/a&gt;関数を使用します。</target>
        </trans-unit>
        <trans-unit id="7b4d96839aac4730a925950ed018466921caabb9" translate="yes" xml:space="preserve">
          <source>Converts a string slice to a byte slice. To convert the byte slice back into a string slice, use the &lt;a href=&quot;str/fn.from_utf8&quot;&gt;&lt;code&gt;from_utf8&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">文字列スライスをバイトスライスに変換します。バイトスライスを文字列スライスに戻すには、&lt;a href=&quot;str/fn.from_utf8&quot;&gt; &lt;code&gt;from_utf8&lt;/code&gt; &lt;/a&gt;関数を使用します。</target>
        </trans-unit>
        <trans-unit id="de670cd391406f2a862df01df79b8545d4ec96bb" translate="yes" xml:space="preserve">
          <source>Converts a string slice to a byte slice. To convert the byte slice back into a string slice, use the &lt;a href=&quot;str/fn.from_utf8&quot;&gt;&lt;code&gt;str::from_utf8&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">文字列スライスをバイトスライスに変換します。バイトスライスを文字列スライスに戻すには、&lt;a href=&quot;str/fn.from_utf8&quot;&gt; &lt;code&gt;str::from_utf8&lt;/code&gt; &lt;/a&gt;関数を使用します。</target>
        </trans-unit>
        <trans-unit id="cdd60bdab18cd686b2f950306bb48b1fa5f92efe" translate="yes" xml:space="preserve">
          <source>Converts a string slice to a raw pointer.</source>
          <target state="translated">文字列スライスを生ポインタに変換します。</target>
        </trans-unit>
        <trans-unit id="30ad257845d4be3d9fa6cb4c6c7277bc7c96dddd" translate="yes" xml:space="preserve">
          <source>Converts a string to an integer, turning poorly-formed strings into 0 (the default value for integers). &lt;a href=&quot;../primitive.str#method.parse&quot;&gt;&lt;code&gt;parse&lt;/code&gt;&lt;/a&gt; converts a string to any other type that implements &lt;a href=&quot;../str/trait.fromstr&quot;&gt;&lt;code&gt;FromStr&lt;/code&gt;&lt;/a&gt;, returning &lt;a href=&quot;#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; on error.</source>
          <target state="translated">文字列を整数に変換し、不適切な形式の文字列を0（整数のデフォルト値）に変換します。&lt;a href=&quot;../primitive.str#method.parse&quot;&gt; &lt;code&gt;parse&lt;/code&gt; &lt;/a&gt;は文字列を&lt;a href=&quot;../str/trait.fromstr&quot;&gt; &lt;code&gt;FromStr&lt;/code&gt; &lt;/a&gt;を実装するその他の型に変換し、エラーの場合は&lt;a href=&quot;#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="412a0b1d1771282a32d06ccf153d17d74b048c92" translate="yes" xml:space="preserve">
          <source>Converts a string to an integer, turning poorly-formed strings into 0 (the default value for integers). &lt;a href=&quot;../primitive.str#method.parse&quot;&gt;&lt;code&gt;parse&lt;/code&gt;&lt;/a&gt; converts a string to any other type that implements &lt;a href=&quot;../str/trait.fromstr&quot;&gt;&lt;code&gt;FromStr&lt;/code&gt;&lt;/a&gt;, returning &lt;a href=&quot;enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; on error.</source>
          <target state="translated">文字列を整数に変換し、形式の悪い文字列を0（整数のデフォルト値）に変換します。&lt;a href=&quot;../primitive.str#method.parse&quot;&gt; &lt;code&gt;parse&lt;/code&gt; は&lt;/a&gt;、文字列を&lt;a href=&quot;../str/trait.fromstr&quot;&gt; &lt;code&gt;FromStr&lt;/code&gt; &lt;/a&gt;を実装する他のタイプに変換し、エラーの場合は&lt;a href=&quot;enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
