<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="rust">
    <body>
      <group id="rust">
        <trans-unit id="af1bca8bbc6e2d920e534d675597f2249024f02b" translate="yes" xml:space="preserve">
          <source>Loads the current value of the pointer. The stabilized version of this intrinsic is available on the &lt;code&gt;std::sync::atomic&lt;/code&gt; types via the &lt;code&gt;load&lt;/code&gt; method by passing &lt;a href=&quot;../sync/atomic/enum.ordering&quot;&gt;&lt;code&gt;Ordering::SeqCst&lt;/code&gt;&lt;/a&gt; as the &lt;code&gt;order&lt;/code&gt;. For example, &lt;a href=&quot;../sync/atomic/struct.atomicbool#method.load&quot;&gt;&lt;code&gt;AtomicBool::load&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ポインタの現在の値をロードします。この固有の安定したバージョンで利用可能である &lt;code&gt;std::sync::atomic&lt;/code&gt; を介した種類の &lt;code&gt;load&lt;/code&gt; 渡すことにより、法&lt;a href=&quot;../sync/atomic/enum.ordering&quot;&gt; &lt;code&gt;Ordering::SeqCst&lt;/code&gt; &lt;/a&gt;として &lt;code&gt;order&lt;/code&gt; 。たとえば、&lt;a href=&quot;../sync/atomic/struct.atomicbool#method.load&quot;&gt; &lt;code&gt;AtomicBool::load&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="941e9ffed9c95e1ea8344edfe59e65e40e4aeabc" translate="yes" xml:space="preserve">
          <source>Local Documentation</source>
          <target state="translated">ローカルドキュメント</target>
        </trans-unit>
        <trans-unit id="16eb226bdb0b2f8a9b4b77740cac4ee8957c3268" translate="yes" xml:space="preserve">
          <source>Local trait</source>
          <target state="translated">局所的な特徴</target>
        </trans-unit>
        <trans-unit id="7875c6daf8bab38e1a44c86ed1d0cfff1fb46f2c" translate="yes" xml:space="preserve">
          <source>Local type</source>
          <target state="translated">ローカルタイプ</target>
        </trans-unit>
        <trans-unit id="d41199dfcb8b15e548fa69da859ee2a75aebcf49" translate="yes" xml:space="preserve">
          <source>Local variables are immutable unless declared otherwise. For example: &lt;code&gt;let mut x = ...&lt;/code&gt;.</source>
          <target state="translated">ローカル変数は、特に宣言されていない限り不変です。たとえば： &lt;code&gt;let mut x = ...&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="75b5802818ead588f51a1f91daa65fd2c4a74ea9" translate="yes" xml:space="preserve">
          <source>Local variables are not initialized when allocated. Instead, the entire frame worth of local variables are allocated, on frame-entry, in an uninitialized state. Subsequent statements within a function may or may not initialize the local variables. Local variables can be used only after they have been initialized through all reachable control flow paths.</source>
          <target state="translated">ローカル変数は、割り当て時には初期化されません。その代わり、ローカル変数のフレーム全体が、フレームエントリ時に初期化されていない状態で割り当てられます。関数内のそれ以降の文は、ローカル変数を初期化する場合としない場合があります。ローカル変数は、すべての到達可能な制御フローパスを通して初期化された後にのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="296cfd3580dfd613671d291555e1c1698e02ce35" translate="yes" xml:space="preserve">
          <source>Local variables declared in a &lt;code&gt;let&lt;/code&gt; statement are associated to the scope of the block that contains the &lt;code&gt;let&lt;/code&gt; statement. Local variables declared in a &lt;code&gt;match&lt;/code&gt; expression are associated to the arm scope of the &lt;code&gt;match&lt;/code&gt; arm that they are declared in.</source>
          <target state="translated">で宣言されたローカル変数 &lt;code&gt;let&lt;/code&gt; 文が含まれているブロックの範囲に関連している &lt;code&gt;let&lt;/code&gt; 文を。で宣言されたローカル変数 &lt;code&gt;match&lt;/code&gt; 式はの腕スコープに関連付けられている &lt;code&gt;match&lt;/code&gt; それらが宣言されていることの腕。</target>
        </trans-unit>
        <trans-unit id="24db2be24235176cea7a6a0080946e9e4814f0fd" translate="yes" xml:space="preserve">
          <source>Local variables, function parameters and temporaries are all dropped before the end of the function body. So a reference to them cannot be returned.</source>
          <target state="translated">ローカル変数、関数パラメータ、テンポラリはすべて関数本体の終了前に落とされます。そのため、それらへの参照を返すことはできません。</target>
        </trans-unit>
        <trans-unit id="b57f356d98e7b91fbe063da29276cb354247c06a" translate="yes" xml:space="preserve">
          <source>LocalKey</source>
          <target state="translated">LocalKey</target>
        </trans-unit>
        <trans-unit id="1a79b2e2221bebfe90a3ef9537c59ac43612dcbe" translate="yes" xml:space="preserve">
          <source>LocalKey::borrow</source>
          <target state="translated">LocalKey::borrow</target>
        </trans-unit>
        <trans-unit id="3b9417d916bc3a3d747f53586258cc56e7c849f2" translate="yes" xml:space="preserve">
          <source>LocalKey::borrow_mut</source>
          <target state="translated">LocalKey::borrow_mut</target>
        </trans-unit>
        <trans-unit id="768de79806df1b58e4582bceae4a562c725b710a" translate="yes" xml:space="preserve">
          <source>LocalKey::fmt</source>
          <target state="translated">LocalKey::fmt</target>
        </trans-unit>
        <trans-unit id="04db5bfa62eafd4f90e1a16ca6df970a09ea95bf" translate="yes" xml:space="preserve">
          <source>LocalKey::from</source>
          <target state="translated">LocalKey::from</target>
        </trans-unit>
        <trans-unit id="66396cd5cf67dc7801926e9745215b0456deef7b" translate="yes" xml:space="preserve">
          <source>LocalKey::into</source>
          <target state="translated">LocalKey::into</target>
        </trans-unit>
        <trans-unit id="cc21a18a97944363056d0fa4e6071c4bb8782051" translate="yes" xml:space="preserve">
          <source>LocalKey::try_from</source>
          <target state="translated">LocalKey::try_from</target>
        </trans-unit>
        <trans-unit id="e500db7b861442f8600e95f67099831683ceec87" translate="yes" xml:space="preserve">
          <source>LocalKey::try_into</source>
          <target state="translated">LocalKey::try_into</target>
        </trans-unit>
        <trans-unit id="309bb438f79f8e518c86850c1b3d05f00f6bafd1" translate="yes" xml:space="preserve">
          <source>LocalKey::try_with</source>
          <target state="translated">LocalKey::try_with</target>
        </trans-unit>
        <trans-unit id="3817b1685d6cc5c6708aa6297cac9391932b8ae0" translate="yes" xml:space="preserve">
          <source>LocalKey::type_id</source>
          <target state="translated">LocalKey::type_id</target>
        </trans-unit>
        <trans-unit id="4247f14d0fda1ef40e2b23dbb4fcb4e5a24deebc" translate="yes" xml:space="preserve">
          <source>LocalKey::with</source>
          <target state="translated">LocalKey::with</target>
        </trans-unit>
        <trans-unit id="b9fc941160f1b0396956bfd39853ec712bd8d1fb" translate="yes" xml:space="preserve">
          <source>Localization</source>
          <target state="translated">Localization</target>
        </trans-unit>
        <trans-unit id="d219c68101f532de10add2cf42fb9dbeca73d3be" translate="yes" xml:space="preserve">
          <source>Location</source>
          <target state="translated">Location</target>
        </trans-unit>
        <trans-unit id="de8e3479056d230460e3d065cadbbb3e88b9e0a1" translate="yes" xml:space="preserve">
          <source>Location::borrow</source>
          <target state="translated">Location::borrow</target>
        </trans-unit>
        <trans-unit id="1d9e53c65b573e90d70ad87be11180d0ded0def9" translate="yes" xml:space="preserve">
          <source>Location::borrow_mut</source>
          <target state="translated">Location::borrow_mut</target>
        </trans-unit>
        <trans-unit id="06f7857fae6348ebddb7925de15be023ff302293" translate="yes" xml:space="preserve">
          <source>Location::column</source>
          <target state="translated">Location::column</target>
        </trans-unit>
        <trans-unit id="9fb181d2c69e2035b76e3ee310eed5924685b399" translate="yes" xml:space="preserve">
          <source>Location::file</source>
          <target state="translated">Location::file</target>
        </trans-unit>
        <trans-unit id="ec687275a890211ca3e866f1220c998706144cc6" translate="yes" xml:space="preserve">
          <source>Location::fmt</source>
          <target state="translated">Location::fmt</target>
        </trans-unit>
        <trans-unit id="60120cb59b875444b733ef5f228a29149ea9b6c5" translate="yes" xml:space="preserve">
          <source>Location::from</source>
          <target state="translated">Location::from</target>
        </trans-unit>
        <trans-unit id="b6980837efc63ab1c2ec1f3155219869677cee35" translate="yes" xml:space="preserve">
          <source>Location::into</source>
          <target state="translated">Location::into</target>
        </trans-unit>
        <trans-unit id="efa58fc8c7e3ad70a14072fba0190415c7dbb3ad" translate="yes" xml:space="preserve">
          <source>Location::line</source>
          <target state="translated">Location::line</target>
        </trans-unit>
        <trans-unit id="9c9f6004c28a00f9a92ccf386a3208c153f86d7b" translate="yes" xml:space="preserve">
          <source>Location::to_string</source>
          <target state="translated">Location::to_string</target>
        </trans-unit>
        <trans-unit id="efab285ec70c363438a49f6d908e951d125ddf5c" translate="yes" xml:space="preserve">
          <source>Location::try_from</source>
          <target state="translated">Location::try_from</target>
        </trans-unit>
        <trans-unit id="84e4f49094e8dfe9c876d276615f6aa496dc6c2b" translate="yes" xml:space="preserve">
          <source>Location::try_into</source>
          <target state="translated">Location::try_into</target>
        </trans-unit>
        <trans-unit id="5ebbd6025914da908b121a8e402d26c288533b08" translate="yes" xml:space="preserve">
          <source>Location::type_id</source>
          <target state="translated">Location::type_id</target>
        </trans-unit>
        <trans-unit id="1240d9496629774bebbf2088261a9f110654375b" translate="yes" xml:space="preserve">
          <source>LockResult</source>
          <target state="translated">LockResult</target>
        </trans-unit>
        <trans-unit id="973f5f3e39546b3553d2987086d61fa219ab8dac" translate="yes" xml:space="preserve">
          <source>Locks this handle and reads a line of input into the specified buffer.</source>
          <target state="translated">このハンドルをロックし、指定されたバッファに入力の行を読み込みます。</target>
        </trans-unit>
        <trans-unit id="3b8eda572be35f6bbbdfd0a9fcbf5c187366d189" translate="yes" xml:space="preserve">
          <source>Locks this handle and reads a line of input, appending it to the specified buffer.</source>
          <target state="translated">このハンドルをロックし、入力の行を読み込み、指定されたバッファに追加します。</target>
        </trans-unit>
        <trans-unit id="1ad4d3a2b606aa7060e1a91cf488d094b1348484" translate="yes" xml:space="preserve">
          <source>Locks this handle to the standard error stream, returning a writable guard.</source>
          <target state="translated">このハンドルを標準エラーストリームにロックし、書き込み可能なガードを返します。</target>
        </trans-unit>
        <trans-unit id="15f06fe991e3f223535bf849d1c1cc252a2456f8" translate="yes" xml:space="preserve">
          <source>Locks this handle to the standard input stream, returning a readable guard.</source>
          <target state="translated">このハンドルを標準入力ストリームにロックし、読み取り可能なガードを返します。</target>
        </trans-unit>
        <trans-unit id="782ff8719cb8b6960732a41787ca938c115b040f" translate="yes" xml:space="preserve">
          <source>Locks this handle to the standard output stream, returning a writable guard.</source>
          <target state="translated">このハンドルを標準出力ストリームにロックし、書き込み可能なガードを返します。</target>
        </trans-unit>
        <trans-unit id="0c8592e141df4b4bfc0222b0946f49bc89c81c2d" translate="yes" xml:space="preserve">
          <source>Locks this rwlock with exclusive write access, blocking the current thread until it can be acquired.</source>
          <target state="translated">この rwlock を排他的な書き込みアクセスでロックし、現在のスレッドを取得できるようになるまでブロックします。</target>
        </trans-unit>
        <trans-unit id="597e7ee91c82cf5999ea71d9dea5b733c88212bd" translate="yes" xml:space="preserve">
          <source>Locks this rwlock with shared read access, blocking the current thread until it can be acquired.</source>
          <target state="translated">この rwlock を共有リードアクセスでロックし、現在のスレッドを取得できるようになるまでブロックします。</target>
        </trans-unit>
        <trans-unit id="db804819fe316197c87a07887ca38ba5bc608df0" translate="yes" xml:space="preserve">
          <source>Logging errors before discarding them:</source>
          <target state="translated">エラーを破棄する前にログを記録します。</target>
        </trans-unit>
        <trans-unit id="ee9e48c47419cad9fed4445a06222f604e817eeb" translate="yes" xml:space="preserve">
          <source>Logical &quot;and&quot; with a boolean value.</source>
          <target state="translated">論理的な &quot;and &quot;でブール値を指定します。</target>
        </trans-unit>
        <trans-unit id="f9d91b6f27e396f96bc7e4d5c176995f52cb3df3" translate="yes" xml:space="preserve">
          <source>Logical &quot;nand&quot; with a boolean value.</source>
          <target state="translated">論理値の &quot;nand &quot;をブール値で指定します。</target>
        </trans-unit>
        <trans-unit id="c80813e42e08f1c9f8127158014a106210689d6f" translate="yes" xml:space="preserve">
          <source>Logical &quot;or&quot; with a boolean value.</source>
          <target state="translated">論理値の &quot;or &quot;をブール値で指定します。</target>
        </trans-unit>
        <trans-unit id="99150192e85afda9231de9dfbcc0991931e0b296" translate="yes" xml:space="preserve">
          <source>Logical &quot;xor&quot; with a boolean value.</source>
          <target state="translated">論理値の &quot;xor &quot;をブール値で指定します。</target>
        </trans-unit>
        <trans-unit id="c5d5c5fb2a8798e4f962780fba63386de96b07b6" translate="yes" xml:space="preserve">
          <source>Logical AND</source>
          <target state="translated">論理 AND</target>
        </trans-unit>
        <trans-unit id="e7e803ba6df9ebf5f542bc2b7ce91db2dc559f7e" translate="yes" xml:space="preserve">
          <source>Logical NOT</source>
          <target state="translated">論理 NOT</target>
        </trans-unit>
        <trans-unit id="e9b0aefdf7ed2c67abbfc572bbc5743979450674" translate="yes" xml:space="preserve">
          <source>Logical OR</source>
          <target state="translated">論理和</target>
        </trans-unit>
        <trans-unit id="93425a1fb1ee61afdd5c8bde53ad3e437fa5c378" translate="yes" xml:space="preserve">
          <source>Logical XOR</source>
          <target state="translated">論理XOR</target>
        </trans-unit>
        <trans-unit id="7fe7fed5d2180339a03ebc2bbe54c97c8777625e" translate="yes" xml:space="preserve">
          <source>Logically &lt;code&gt;true&lt;/code&gt; is not equal to &lt;a href=&quot;keyword.false&quot;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">論理的に &lt;code&gt;true&lt;/code&gt; は&lt;a href=&quot;keyword.false&quot;&gt; &lt;code&gt;false&lt;/code&gt; &lt;/a&gt;と同じではありません。</target>
        </trans-unit>
        <trans-unit id="a94122f802a61cca6ca880b82b748cd175aece3a" translate="yes" xml:space="preserve">
          <source>Longer code examples are in a syntax highlighted box that has controls for copying, executing, and showing hidden lines in the top right corner.</source>
          <target state="translated">長いコード例は、コピー、実行、右上の隠し行を表示するためのコントロールを持つ構文強調表示されたボックスにあります。</target>
        </trans-unit>
        <trans-unit id="aa73733853589d673d333c74fe5abae906356928" translate="yes" xml:space="preserve">
          <source>Look at the generated &lt;em&gt;Cargo.toml&lt;/em&gt; file:</source>
          <target state="translated">生成された&lt;em&gt;Cargo.toml&lt;/em&gt;ファイルを見てください。</target>
        </trans-unit>
        <trans-unit id="f85711ffe46c9fb58f69ce5d1973d7acbb710f52" translate="yes" xml:space="preserve">
          <source>Looking at the request line data we received from running our program so far, we see that &lt;code&gt;GET&lt;/code&gt; is the method, &lt;em&gt;/&lt;/em&gt; is the request URI, and &lt;code&gt;HTTP/1.1&lt;/code&gt; is the version.</source>
          <target state="translated">これまでにプログラムを実行して受け取ったリクエストラインデータを見ると、 &lt;code&gt;GET&lt;/code&gt; がメソッド、&lt;em&gt;/&lt;/em&gt;がリクエストURI、 &lt;code&gt;HTTP/1.1&lt;/code&gt; がバージョンであることがわかります。</target>
        </trans-unit>
        <trans-unit id="52462e9d8cfe0534f0c444d216cecaa174866ab3" translate="yes" xml:space="preserve">
          <source>Looks good! Now let&amp;rsquo;s introduce a bug in our code by removing the condition that the &lt;code&gt;new&lt;/code&gt; function will panic if the value is greater than 100:</source>
          <target state="translated">いいね！次に、値が100より大きい場合に &lt;code&gt;new&lt;/code&gt; 関数がパニックになる条件を削除して、コードにバグを導入しましょう。</target>
        </trans-unit>
        <trans-unit id="ab842a980e44426037703edaca40e816d1bc12c6" translate="yes" xml:space="preserve">
          <source>Looks like that still works! Now, let&amp;rsquo;s run the program with &lt;code&gt;CASE_INSENSITIVE&lt;/code&gt; set to &lt;code&gt;1&lt;/code&gt; but with the same query &lt;code&gt;to&lt;/code&gt;.</source>
          <target state="translated">それでも動作するようです！次に、 &lt;code&gt;CASE_INSENSITIVE&lt;/code&gt; を &lt;code&gt;1&lt;/code&gt; に設定してプログラムを実行しますが、同じクエリ &lt;code&gt;to&lt;/code&gt; 使用します。</target>
        </trans-unit>
        <trans-unit id="02c45b0f7d3c1dd9b57ad06eaf274c8641f5e41b" translate="yes" xml:space="preserve">
          <source>Looks up a series of four elements in a slice of pairs sorted by their second elements. The first is found, with a uniquely determined position; the second and third are not found; the fourth could match any position in &lt;code&gt;[1, 4]&lt;/code&gt;.</source>
          <target state="translated">2番目の要素で並べ替えられたペアのスライスで、一連の4つの要素を検索します。1つ目は、一意に決定された位置で見つかります。2番目と3番目は見つかりません。4番目は &lt;code&gt;[1, 4]&lt;/code&gt; のどの位置にも一致します。</target>
        </trans-unit>
        <trans-unit id="fe6ce8703b6504f9854c260e42a417c77143b940" translate="yes" xml:space="preserve">
          <source>Looks up a series of four elements. The first is found, with a uniquely determined position; the second and third are not found; the fourth could match any position in &lt;code&gt;[1, 4]&lt;/code&gt;.</source>
          <target state="translated">一連の4つの要素を検索します。1つ目は、一意に決定された位置で見つかります。2番目と3番目は見つかりません。4番目は &lt;code&gt;[1, 4]&lt;/code&gt; のどの位置にも一致します。</target>
        </trans-unit>
        <trans-unit id="f34585a43eb20d762a66a3fa82814993a65ae4f4" translate="yes" xml:space="preserve">
          <source>Loop bodies (&lt;a href=&quot;loop-expr#infinite-loops&quot;&gt;&lt;code&gt;loop&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;loop-expr#predicate-loops&quot;&gt;&lt;code&gt;while&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;loop-expr#predicate-pattern-loops&quot;&gt;&lt;code&gt;while let&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;loop-expr#iterator-loops&quot;&gt;&lt;code&gt;for&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">ループ本体（&lt;a href=&quot;loop-expr#infinite-loops&quot;&gt; &lt;code&gt;loop&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;loop-expr#predicate-loops&quot;&gt; &lt;code&gt;while&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;loop-expr#predicate-pattern-loops&quot;&gt; &lt;code&gt;while let&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;loop-expr#iterator-loops&quot;&gt; &lt;code&gt;for&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="146e4f6cadda9361ba6dd2659cb14c387bbabff7" translate="yes" xml:space="preserve">
          <source>Loop indefinitely.</source>
          <target state="translated">無期限にループします。</target>
        </trans-unit>
        <trans-unit id="910baeda8a78b7fdbccdb9b95411cc6f09c93072" translate="yes" xml:space="preserve">
          <source>Loop label</source>
          <target state="translated">ループラベル</target>
        </trans-unit>
        <trans-unit id="8ceed8c250a89a0eef89445e73e6213e28957b27" translate="yes" xml:space="preserve">
          <source>Loop labels</source>
          <target state="translated">ループラベル</target>
        </trans-unit>
        <trans-unit id="67f6007e968fdc453361267f6ef12b769dbb1f4d" translate="yes" xml:space="preserve">
          <source>Loop while a condition is upheld.</source>
          <target state="translated">条件が満たされている間はループします。</target>
        </trans-unit>
        <trans-unit id="983e951f3609eb8366a28b4678803cdb5faf2344" translate="yes" xml:space="preserve">
          <source>Looping Through a Collection with &lt;code id=&quot;looping-through-a-collection-with-for&quot;&gt;for&lt;/code&gt;</source>
          <target state="translated">&lt;code id=&quot;looping-through-a-collection-with-for&quot;&gt;for&lt;/code&gt; でコレクションをループする</target>
        </trans-unit>
        <trans-unit id="02720f9d38bf4f35e84ed5228689898bee176418" translate="yes" xml:space="preserve">
          <source>Loops</source>
          <target state="translated">Loops</target>
        </trans-unit>
        <trans-unit id="82f9a94d3567f8b48be0a89547b5a502496697d3" translate="yes" xml:space="preserve">
          <source>Loops that dynamically terminate.</source>
          <target state="translated">動的に終了するループ。</target>
        </trans-unit>
        <trans-unit id="7a10d86424203ece50b876ab703fbf8511a44eb3" translate="yes" xml:space="preserve">
          <source>Low level implementations of things like collections, which need to manually drop their data, should use this function to avoid unnecessarily trying to drop all their contents when they are destroyed. This might not make a difference in release builds (where a loop that has no side-effects is easily detected and eliminated), but is often a big win for debug builds.</source>
          <target state="translated">コレクションのようなものの低レベルの実装では、データを手動で削除する必要がありますが、破壊されたときに不必要にすべてのコンテンツを削除しようとするのを避けるために、この関数を使うべきです。これはリリースビルド (副作用のないループが簡単に検出されて排除される)では違いがないかもしれませんが、デバッグビルドでは大きなメリットになることがよくあります。</target>
        </trans-unit>
        <trans-unit id="4c4c04816367b618249cf624dd23204ea48a2ca0" translate="yes" xml:space="preserve">
          <source>Low-intensity workout plans will recommend a number of push-ups and sit-ups based on the complex algorithm we&amp;rsquo;re simulating.</source>
          <target state="translated">低強度のワークアウト計画では、シミュレーションしている複雑なアルゴリズムに基づいて、いくつかの腕立て伏せと腹筋運動を推奨します。</target>
        </trans-unit>
        <trans-unit id="6b1ede9bf060e1ecd9cc0282a8fdc16b5797d80a" translate="yes" xml:space="preserve">
          <source>LowerExp</source>
          <target state="translated">LowerExp</target>
        </trans-unit>
        <trans-unit id="e465df3a2e8bac6e03c650115f311c8cf3119812" translate="yes" xml:space="preserve">
          <source>LowerExp::fmt</source>
          <target state="translated">LowerExp::fmt</target>
        </trans-unit>
        <trans-unit id="5d91084dfc80f601e5d058842fda3944bfa31f05" translate="yes" xml:space="preserve">
          <source>LowerHex</source>
          <target state="translated">LowerHex</target>
        </trans-unit>
        <trans-unit id="6487af46ece97a6dff859b02884a2d7af105ba28" translate="yes" xml:space="preserve">
          <source>LowerHex::fmt</source>
          <target state="translated">LowerHex::fmt</target>
        </trans-unit>
        <trans-unit id="f41a055096fba2f5ebbddc8916d81727739dbdb3" translate="yes" xml:space="preserve">
          <source>Lt</source>
          <target state="translated">Lt</target>
        </trans-unit>
        <trans-unit id="da61d0dd8b2c285f06eeb2dd41678c18a2b332e0" translate="yes" xml:space="preserve">
          <source>Luckily, Rust has a solution to this problem: string slices.</source>
          <target state="translated">幸いにも、Rustにはこの問題を解決するためのソリューションがあります。</target>
        </trans-unit>
        <trans-unit id="e6ceaa126b03ac34bb0e0b13dff478218c35e1e0" translate="yes" xml:space="preserve">
          <source>M matches &amp;beta;,</source>
          <target state="translated">Mは&amp;beta;に一致し、</target>
        </trans-unit>
        <trans-unit id="213da531ac0923945abaf2dc2942d501e202b6c8" translate="yes" xml:space="preserve">
          <source>MAIN_SEPARATOR</source>
          <target state="translated">MAIN_SEPARATOR</target>
        </trans-unit>
        <trans-unit id="eee9360f4b93f57def5c15bd6ae691f1478ff551" translate="yes" xml:space="preserve">
          <source>MANTISSA_DIGITS</source>
          <target state="translated">MANTISSA_DIGITS</target>
        </trans-unit>
        <trans-unit id="7b186e235f284107df6b4dbe6060d2b6a5d9f1e5" translate="yes" xml:space="preserve">
          <source>MAX</source>
          <target state="translated">MAX</target>
        </trans-unit>
        <trans-unit id="6968182b7ddb75495db1d95a77b0e45847ee26f5" translate="yes" xml:space="preserve">
          <source>MAX_10_EXP</source>
          <target state="translated">MAX_10_EXP</target>
        </trans-unit>
        <trans-unit id="a339add390e7a87f01f39970f8d80d34d56891c9" translate="yes" xml:space="preserve">
          <source>MAX_EXP</source>
          <target state="translated">MAX_EXP</target>
        </trans-unit>
        <trans-unit id="04e66352aa8f9c4c5f26b71bf380973ada994760" translate="yes" xml:space="preserve">
          <source>MIN</source>
          <target state="translated">MIN</target>
        </trans-unit>
        <trans-unit id="3a02ac2670621244b8a3fc445809cf4d21c72fca" translate="yes" xml:space="preserve">
          <source>MIN_10_EXP</source>
          <target state="translated">MIN_10_EXP</target>
        </trans-unit>
        <trans-unit id="cb4eece303b67f51c9c2c8b3e7de70d833dfe224" translate="yes" xml:space="preserve">
          <source>MIN_EXP</source>
          <target state="translated">MIN_EXP</target>
        </trans-unit>
        <trans-unit id="a0bd516b99da79f578eb0a04fc4a312b707a19ff" translate="yes" xml:space="preserve">
          <source>MIN_POSITIVE</source>
          <target state="translated">MIN_POSITIVE</target>
        </trans-unit>
        <trans-unit id="c13543311f46a50ff427d8868b100b68e78eb3ab" translate="yes" xml:space="preserve">
          <source>ML Kit, Cyclone: region based memory management</source>
          <target state="translated">MLキット、サイクロン:リージョンベースのメモリ管理</target>
        </trans-unit>
        <trans-unit id="24bdfb38558728e0acc797866530efdca1ba0bef" translate="yes" xml:space="preserve">
          <source>Machine-dependent integer types</source>
          <target state="translated">機械依存の整数型</target>
        </trans-unit>
        <trans-unit id="2659290a82d88237585af5f472bc1ac313e43ce0" translate="yes" xml:space="preserve">
          <source>Macro Invocation</source>
          <target state="translated">マクロ呼び出し</target>
        </trans-unit>
        <trans-unit id="9e730842d2f7a25329bbe5cfb07dcdf0d39c81ff" translate="yes" xml:space="preserve">
          <source>Macro attributes</source>
          <target state="translated">マクロ属性</target>
        </trans-unit>
        <trans-unit id="b1e739693999a37495960fe83d99415a95be52b3" translate="yes" xml:space="preserve">
          <source>Macro authors need to be careful to ensure their macros work in as many contexts as possible given this limitation. This often includes using absolute paths to items in libraries (for example, &lt;code&gt;::std::option::Option&lt;/code&gt; instead of &lt;code&gt;Option&lt;/code&gt;) or by ensuring that generated functions have names that are unlikely to clash with other functions (like &lt;code&gt;__internal_foo&lt;/code&gt; instead of &lt;code&gt;foo&lt;/code&gt;).</source>
          <target state="translated">マクロの作成者は、この制限を考慮して、できるだけ多くのコンテキストでマクロが機能するように注意する必要があります。これには、ライブラリ内のアイテムへの絶対パスの使用（たとえば、 &lt;code&gt;::std::option::Option&lt;/code&gt; 代わりに:: std :: option :: &lt;code&gt;Option&lt;/code&gt; ）が含まれるか、または生成された関数が他の関数と衝突する可能性が低い名前を持つようにすること（ &lt;code&gt;foo&lt;/code&gt; ではなく &lt;code&gt;__internal_foo&lt;/code&gt; など）が含まれることがよくあります。。</target>
        </trans-unit>
        <trans-unit id="3c67805f00d2045185be06759bad2344ffccbcb7" translate="yes" xml:space="preserve">
          <source>Macro capture</source>
          <target state="translated">マクロキャプチャ</target>
        </trans-unit>
        <trans-unit id="a44b5f0e39bbc761353368be4a96890b94a75063" translate="yes" xml:space="preserve">
          <source>Macro expansion</source>
          <target state="translated">マクロ展開</target>
        </trans-unit>
        <trans-unit id="ae933d8a4781e5105243afefc15101f8a2c8287f" translate="yes" xml:space="preserve">
          <source>Macro import declaration was malformed.</source>
          <target state="translated">マクロインポート宣言に誤りがありました。</target>
        </trans-unit>
        <trans-unit id="41a72c642fcf8114343e8c949ed168a43b64c413" translate="yes" xml:space="preserve">
          <source>Macro import declarations were malformed.</source>
          <target state="translated">マクロのインポート宣言が不正な形になっていました。</target>
        </trans-unit>
        <trans-unit id="bd9aa77628f4b1ec118826262de0ca28626e59d7" translate="yes" xml:space="preserve">
          <source>Macro invocation</source>
          <target state="translated">マクロ呼び出し</target>
        </trans-unit>
        <trans-unit id="433dbd0aed916c8f4209de792ed63fa554a2240d" translate="yes" xml:space="preserve">
          <source>Macro placeholders</source>
          <target state="translated">マクロプレースホルダ</target>
        </trans-unit>
        <trans-unit id="6f9585989499055c950f0a1cea9ea35eab211a07" translate="yes" xml:space="preserve">
          <source>Macro repetition</source>
          <target state="translated">マクロの繰り返し</target>
        </trans-unit>
        <trans-unit id="6bf8e1253f5bfdd2b376a7a473244315ed08859d" translate="yes" xml:space="preserve">
          <source>Macro std::asm</source>
          <target state="translated">マクロ std::asm</target>
        </trans-unit>
        <trans-unit id="11f058360dbba18a3c9f77a849989539cec6306a" translate="yes" xml:space="preserve">
          <source>Macro std::assert</source>
          <target state="translated">マクロ std::assert</target>
        </trans-unit>
        <trans-unit id="f000aa0f88374a6c56665c06a8c607808c0582af" translate="yes" xml:space="preserve">
          <source>Macro std::assert_eq</source>
          <target state="translated">マクロ std::assert_eq</target>
        </trans-unit>
        <trans-unit id="26ec6afffddbd2b766331235eb12a65ccaed119d" translate="yes" xml:space="preserve">
          <source>Macro std::assert_ne</source>
          <target state="translated">マクロ std::assert_ne</target>
        </trans-unit>
        <trans-unit id="0a6f62a4d46be57d97ef44f55d11e47c88244874" translate="yes" xml:space="preserve">
          <source>Macro std::cfg</source>
          <target state="translated">マクロ std::cfg</target>
        </trans-unit>
        <trans-unit id="5b1da2fc3d6c63a8a94a2c677e11168ebecb51d6" translate="yes" xml:space="preserve">
          <source>Macro std::clone::Clone</source>
          <target state="translated">マクロ std::clone::クローン</target>
        </trans-unit>
        <trans-unit id="c39772ee2d9f0c0278ec923084cb041e5da952b3" translate="yes" xml:space="preserve">
          <source>Macro std::cmp::Eq</source>
          <target state="translated">マクロ std::cmp::Eq</target>
        </trans-unit>
        <trans-unit id="e877ae1439ca9c726ebd135e649f5b7ca4c7b811" translate="yes" xml:space="preserve">
          <source>Macro std::cmp::Ord</source>
          <target state="translated">マクロ std::cmp::Ord</target>
        </trans-unit>
        <trans-unit id="1e425e67e8014b07972fbe5912e9c5c6b80f20cc" translate="yes" xml:space="preserve">
          <source>Macro std::cmp::PartialEq</source>
          <target state="translated">マクロ std::cmp::PartialEq</target>
        </trans-unit>
        <trans-unit id="00e2b89b994cff94c4b95827866a952752d72fe3" translate="yes" xml:space="preserve">
          <source>Macro std::cmp::PartialOrd</source>
          <target state="translated">マクロ std::cmp::PartialOrd</target>
        </trans-unit>
        <trans-unit id="bfc3353d435f62be42330b50878e3da5db2c0ebf" translate="yes" xml:space="preserve">
          <source>Macro std::column</source>
          <target state="translated">マクロ std::column</target>
        </trans-unit>
        <trans-unit id="8269c763b50aa38775a2c7cb4b26145e32e4874c" translate="yes" xml:space="preserve">
          <source>Macro std::compile_error</source>
          <target state="translated">マクロ std::compile_error</target>
        </trans-unit>
        <trans-unit id="15c727a0d120c4960a5206dfd7af2c20bdd517dc" translate="yes" xml:space="preserve">
          <source>Macro std::concat</source>
          <target state="translated">マクロ std::concat</target>
        </trans-unit>
        <trans-unit id="df9ffe481ee3d242913fbac3b2dc97e3be05c8cc" translate="yes" xml:space="preserve">
          <source>Macro std::concat_idents</source>
          <target state="translated">マクロ std::concat_idents</target>
        </trans-unit>
        <trans-unit id="1d922e73017d104fe46ceb5c4220f8ea3271a322" translate="yes" xml:space="preserve">
          <source>Macro std::dbg</source>
          <target state="translated">マクロ std::dbg</target>
        </trans-unit>
        <trans-unit id="a90c90eae394db424024f268470fa895b3873ccd" translate="yes" xml:space="preserve">
          <source>Macro std::debug_assert</source>
          <target state="translated">マクロ std::debug_assert</target>
        </trans-unit>
        <trans-unit id="8e74b5bd11d5d45437c1c09fd22f126276ff08d6" translate="yes" xml:space="preserve">
          <source>Macro std::debug_assert_eq</source>
          <target state="translated">マクロ std::debug_assert_eq</target>
        </trans-unit>
        <trans-unit id="4dc1eec2b9f87d8b7da901765d50ea403fdbf99b" translate="yes" xml:space="preserve">
          <source>Macro std::debug_assert_ne</source>
          <target state="translated">マクロ std::debug_assert_ne</target>
        </trans-unit>
        <trans-unit id="ba169214991fc2e32da613dd8e35cb373c6ba0dc" translate="yes" xml:space="preserve">
          <source>Macro std::default::Default</source>
          <target state="translated">マクロ std::default::Default</target>
        </trans-unit>
        <trans-unit id="cf29f83996c4fac331e1f5ba5b531aba1c1c6d23" translate="yes" xml:space="preserve">
          <source>Macro std::env</source>
          <target state="translated">マクロ std::env</target>
        </trans-unit>
        <trans-unit id="aba939d2bf68b43edae33ec09ebbd714b2d6987c" translate="yes" xml:space="preserve">
          <source>Macro std::eprint</source>
          <target state="translated">マクロ std::eprint</target>
        </trans-unit>
        <trans-unit id="6ffb1f04cc34f8411495e5f8ebb85e8a15409308" translate="yes" xml:space="preserve">
          <source>Macro std::eprintln</source>
          <target state="translated">マクロ std::eprintln</target>
        </trans-unit>
        <trans-unit id="c6bfe7e4fa137ef90068b684e50c67e41d606764" translate="yes" xml:space="preserve">
          <source>Macro std::file</source>
          <target state="translated">マクロ std::file</target>
        </trans-unit>
        <trans-unit id="491c90c3bda044306071e14b9c8a4fa10b1e7782" translate="yes" xml:space="preserve">
          <source>Macro std::fmt::Debug</source>
          <target state="translated">マクロ std::fmt::Debug</target>
        </trans-unit>
        <trans-unit id="e14394b9c26c15c0b3312ed06d14291ed3726b29" translate="yes" xml:space="preserve">
          <source>Macro std::format</source>
          <target state="translated">マクロ std::format</target>
        </trans-unit>
        <trans-unit id="dd107af8410c93f9885e0bcf221cd750b3983786" translate="yes" xml:space="preserve">
          <source>Macro std::format_args</source>
          <target state="translated">マクロ std::format_args</target>
        </trans-unit>
        <trans-unit id="9b2f7ae3773485eb4a95ce3b2d9d979e1397281b" translate="yes" xml:space="preserve">
          <source>Macro std::format_args_nl</source>
          <target state="translated">マクロ std::format_args_nl</target>
        </trans-unit>
        <trans-unit id="72b78145ec9d014d9f3be2b89cc19c2819319afb" translate="yes" xml:space="preserve">
          <source>Macro std::global_asm</source>
          <target state="translated">マクロ std::global_asm</target>
        </trans-unit>
        <trans-unit id="f1f0f0276731bf5a943740728b2a4d9e8d9311ea" translate="yes" xml:space="preserve">
          <source>Macro std::hash::Hash</source>
          <target state="translated">マクロ std::hash::Hash</target>
        </trans-unit>
        <trans-unit id="2b4f30c9cc31a223b1f4745e8265d159c78f6d54" translate="yes" xml:space="preserve">
          <source>Macro std::include</source>
          <target state="translated">マクロ std::include</target>
        </trans-unit>
        <trans-unit id="f78f89f7fc1bec378f1151165dbb68895d22a8c6" translate="yes" xml:space="preserve">
          <source>Macro std::include_bytes</source>
          <target state="translated">マクロ std::include_bytes</target>
        </trans-unit>
        <trans-unit id="7bd0028a712b614e4315a9416e07d5bcac8d4159" translate="yes" xml:space="preserve">
          <source>Macro std::include_str</source>
          <target state="translated">マクロ std::include_str</target>
        </trans-unit>
        <trans-unit id="537e36d2d2ad3fbbb990e6d081f9a1f6bfb6c7ee" translate="yes" xml:space="preserve">
          <source>Macro std::is_aarch64_feature_detected</source>
          <target state="translated">マクロ std::is_aarch64_feature_detected</target>
        </trans-unit>
        <trans-unit id="1709caf08a9d4114d479c826e9f270f25a4438cf" translate="yes" xml:space="preserve">
          <source>Macro std::is_arm_feature_detected</source>
          <target state="translated">マクロ std::is_arm_feature_detected</target>
        </trans-unit>
        <trans-unit id="444bc0075b65384ad493e53d06b947d0a6982b9f" translate="yes" xml:space="preserve">
          <source>Macro std::is_mips64_feature_detected</source>
          <target state="translated">マクロ std::is_mips64_feature_detected</target>
        </trans-unit>
        <trans-unit id="15cb20dbc2a3ff0fed9508f4bc148aa082229773" translate="yes" xml:space="preserve">
          <source>Macro std::is_mips_feature_detected</source>
          <target state="translated">マクロ std::is_mips_feature_detected</target>
        </trans-unit>
        <trans-unit id="37b5ae59c5f1ef8a3b8e22937bb56921b20a8ca3" translate="yes" xml:space="preserve">
          <source>Macro std::is_powerpc64_feature_detected</source>
          <target state="translated">マクロ std::is_powerpc64_feature_detected</target>
        </trans-unit>
        <trans-unit id="155e3dbc931dc2bf21378e8d9285a8e305f3f1e6" translate="yes" xml:space="preserve">
          <source>Macro std::is_powerpc_feature_detected</source>
          <target state="translated">マクロ std::is_powerpc_feature_detected</target>
        </trans-unit>
        <trans-unit id="c0fd68c1457055c7bddcb10c03ea35839bdace1d" translate="yes" xml:space="preserve">
          <source>Macro std::is_x86_feature_detected</source>
          <target state="translated">マクロ std::is_x86_feature_detected</target>
        </trans-unit>
        <trans-unit id="39ce5d75824d32f564b1ccd0dea600d21e870a23" translate="yes" xml:space="preserve">
          <source>Macro std::line</source>
          <target state="translated">マクロ std::line</target>
        </trans-unit>
        <trans-unit id="38f4201b011987c888b975ac8bae265607691cd4" translate="yes" xml:space="preserve">
          <source>Macro std::llvm_asm</source>
          <target state="translated">マクロ std::llvm_asm</target>
        </trans-unit>
        <trans-unit id="e5ebce41e30105a7e8b0bb180fd3ef13677f6073" translate="yes" xml:space="preserve">
          <source>Macro std::log_syntax</source>
          <target state="translated">マクロ std::log_syntax</target>
        </trans-unit>
        <trans-unit id="0c26c6abfa84b03c939f7a1ab38ac24077e0391e" translate="yes" xml:space="preserve">
          <source>Macro std::marker::Copy</source>
          <target state="translated">マクロ std::marker::Copy</target>
        </trans-unit>
        <trans-unit id="66b9aaef0eccf3e0af6f2d1d5e113ee16766123b" translate="yes" xml:space="preserve">
          <source>Macro std::matches</source>
          <target state="translated">マクロ std::matches</target>
        </trans-unit>
        <trans-unit id="8f90aa7d77c7e0afa2f4b43c2ff5e0b6df3b9c86" translate="yes" xml:space="preserve">
          <source>Macro std::module_path</source>
          <target state="translated">マクロ std::module_path</target>
        </trans-unit>
        <trans-unit id="3d2ebea8fd7f8696f7403dfb7d8b231c68a49d1b" translate="yes" xml:space="preserve">
          <source>Macro std::option_env</source>
          <target state="translated">マクロ std::option_env</target>
        </trans-unit>
        <trans-unit id="6f4c465e8a552f41ced3b86d9467af7400898ea0" translate="yes" xml:space="preserve">
          <source>Macro std::panic</source>
          <target state="translated">マクロ std::panic</target>
        </trans-unit>
        <trans-unit id="d7c5619ee3c7e37065c6348f596afee18812e904" translate="yes" xml:space="preserve">
          <source>Macro std::print</source>
          <target state="translated">マクロ std::print</target>
        </trans-unit>
        <trans-unit id="204a418c0077187d8cc0f577443c7e7fa541ff0e" translate="yes" xml:space="preserve">
          <source>Macro std::println</source>
          <target state="translated">マクロ std::println</target>
        </trans-unit>
        <trans-unit id="49b5cd28b30251f10af2a2a90db5636dbc06c78f" translate="yes" xml:space="preserve">
          <source>Macro std::ptr::raw_const</source>
          <target state="translated">マクロ std::ptr::raw_const</target>
        </trans-unit>
        <trans-unit id="94efa33950d8639a2632508a96f54528f0f4892f" translate="yes" xml:space="preserve">
          <source>Macro std::ptr::raw_mut</source>
          <target state="translated">マクロ std::ptr::raw_mut</target>
        </trans-unit>
        <trans-unit id="f96af0500399ede902072159d4a56f1154cec983" translate="yes" xml:space="preserve">
          <source>Macro std::stringify</source>
          <target state="translated">マクロ std::stringify</target>
        </trans-unit>
        <trans-unit id="0046668cc33f70012c2ac60da4e82f57bc0eae5c" translate="yes" xml:space="preserve">
          <source>Macro std::task::ready</source>
          <target state="translated">マクロ std::task::ready</target>
        </trans-unit>
        <trans-unit id="68d6e8f0ed1c6779a250baacf32ce34713bc747e" translate="yes" xml:space="preserve">
          <source>Macro std::thread_local</source>
          <target state="translated">マクロ std::thread_local</target>
        </trans-unit>
        <trans-unit id="9baf7587c5afbc5de300cb0d4bf1a784ace4fa43" translate="yes" xml:space="preserve">
          <source>Macro std::todo</source>
          <target state="translated">マクロ std::todo</target>
        </trans-unit>
        <trans-unit id="8235c2be6e7598983a06912a0f7475d0ca841096" translate="yes" xml:space="preserve">
          <source>Macro std::trace_macros</source>
          <target state="translated">マクロ std::trace_macros</target>
        </trans-unit>
        <trans-unit id="45339975a30497b8aa678e5782dd85d0d6524c52" translate="yes" xml:space="preserve">
          <source>Macro std::try</source>
          <target state="translated">マクロ std::try</target>
        </trans-unit>
        <trans-unit id="30819b013032d5b56dd171479c78004eb8506424" translate="yes" xml:space="preserve">
          <source>Macro std::unimplemented</source>
          <target state="translated">マクロ std::unimplemented</target>
        </trans-unit>
        <trans-unit id="af90d4d175741e7c682c9a76c40bcbf22e038351" translate="yes" xml:space="preserve">
          <source>Macro std::unreachable</source>
          <target state="translated">マクロ std::unreachable</target>
        </trans-unit>
        <trans-unit id="6cb76d941b106a5984361c746233e091f3eb7268" translate="yes" xml:space="preserve">
          <source>Macro std::vec</source>
          <target state="translated">マクロ std::vec</target>
        </trans-unit>
        <trans-unit id="7dfa6a5a74afbe5370bea7ee37dfc0cf4b7a5b7a" translate="yes" xml:space="preserve">
          <source>Macro std::write</source>
          <target state="translated">マクロ std::write</target>
        </trans-unit>
        <trans-unit id="6a165588c7cdc25e45e0ccfbbb1e4233fccbef59" translate="yes" xml:space="preserve">
          <source>Macro std::writeln</source>
          <target state="translated">マクロ std::writeln</target>
        </trans-unit>
        <trans-unit id="fc574c4feb9eb58a0dcac94d6fe7f033e148ad50" translate="yes" xml:space="preserve">
          <source>Macro substitution</source>
          <target state="translated">マクロ置換</target>
        </trans-unit>
        <trans-unit id="899bd694d29ace1be956ab35177075021977560b" translate="yes" xml:space="preserve">
          <source>Macros</source>
          <target state="translated">Macros</target>
        </trans-unit>
        <trans-unit id="ea985fb52970be4df72a617484744fdc16a5c018" translate="yes" xml:space="preserve">
          <source>Macros By Example</source>
          <target state="translated">例題によるマクロ</target>
        </trans-unit>
        <trans-unit id="890c8b86dee76287900f5de49ded629e47a1eff2" translate="yes" xml:space="preserve">
          <source>Macros can be declared and used locally inside functions as well, and work similarly:</source>
          <target state="translated">マクロは、関数内で宣言してローカルに使用することもでき、同様に動作します。</target>
        </trans-unit>
        <trans-unit id="99213c2eae5f4b5b5261d6ead8683782ce8b74da" translate="yes" xml:space="preserve">
          <source>Macros labeled with &lt;code&gt;#[macro_export]&lt;/code&gt; are always &lt;code&gt;pub&lt;/code&gt; and can be referred to by other crates, either by path or by &lt;code&gt;#[macro_use]&lt;/code&gt; as described above.</source>
          <target state="translated">&lt;code&gt;#[macro_export]&lt;/code&gt; でラベル付けされたマクロは常に &lt;code&gt;pub&lt;/code&gt; であり、上記のように、パスまたは &lt;code&gt;#[macro_use]&lt;/code&gt; によって他のクレートから参照できます。</target>
        </trans-unit>
        <trans-unit id="92e8814276dffd676e7f646da635908018045437" translate="yes" xml:space="preserve">
          <source>Macros to be imported with &lt;code&gt;#[macro_use]&lt;/code&gt; must be exported with &lt;code&gt;#[macro_export]&lt;/code&gt;, which is described below.</source>
          <target state="translated">インポートするマクロ &lt;code&gt;#[macro_use]&lt;/code&gt; を用いてエクスポートする必要があり &lt;code&gt;#[macro_export]&lt;/code&gt; 、以下に記載されています。</target>
        </trans-unit>
        <trans-unit id="1c9a2176dfeeea79d9e3e32de9c2c5a99269809e" translate="yes" xml:space="preserve">
          <source>Macros: ways to define code that defines more code at compile time</source>
          <target state="translated">マクロ:コンパイル時により多くのコードを定義するコードを定義する方法</target>
        </trans-unit>
        <trans-unit id="cd76d64707087c171bdd458df7294e3865fa1eaf" translate="yes" xml:space="preserve">
          <source>Magic intrinsic that derives its meaning from attributes attached to the function.</source>
          <target state="translated">機能に付随する属性から意味を派生させる魔法の内在性。</target>
        </trans-unit>
        <trans-unit id="d0ddf4609657c9fc7a5a760b623591e2b8c06955" translate="yes" xml:space="preserve">
          <source>Main Functions</source>
          <target state="translated">主な機能</target>
        </trans-unit>
        <trans-unit id="65915636886ad9b418e5053522e9bb186aaffa57" translate="yes" xml:space="preserve">
          <source>Major version.</source>
          <target state="translated">メジャーバージョン。</target>
        </trans-unit>
        <trans-unit id="f56204cba2ee3c4f2fb7f50188e73508c869d62b" translate="yes" xml:space="preserve">
          <source>Make an item visible to others.</source>
          <target state="translated">アイテムを他の人にも見えるようにする。</target>
        </trans-unit>
        <trans-unit id="5c4b994a73f6ca91c56b5e39a0519626ed63946d" translate="yes" xml:space="preserve">
          <source>Make sure &lt;code&gt;break value;&lt;/code&gt; statements only occur in &lt;code&gt;loop&lt;/code&gt; loops:</source>
          <target state="translated">&lt;code&gt;break value;&lt;/code&gt; を確認してください。ステートメントは &lt;code&gt;loop&lt;/code&gt; ループでのみ発生します：</target>
        </trans-unit>
        <trans-unit id="7ea8a95eb24800ac0c84a828db1e4421635b78f0" translate="yes" xml:space="preserve">
          <source>Make sure &lt;code&gt;impl Trait&lt;/code&gt; only appears in return-type position.</source>
          <target state="translated">&lt;code&gt;impl Trait&lt;/code&gt; が戻り型の位置にのみ表示されることを確認してください。</target>
        </trans-unit>
        <trans-unit id="0ba401c0c9cfac171b760a1ce41525fd66059bdc" translate="yes" xml:space="preserve">
          <source>Make sure that you have defined the associated type in the trait body. Also, verify that you used the right trait or you didn't misspell the associated type name. Example:</source>
          <target state="translated">関連付けられたタイプが、形質本体で定義されていることを確認してください。また、正しい形質を使用しているか、関連付けられた型名のスペルを間違えていないかを確認してください。例</target>
        </trans-unit>
        <trans-unit id="13ea5ceb8177b1d40f0f669f0ff85244195769c5" translate="yes" xml:space="preserve">
          <source>Make sure the crate has been added as a dependency in &lt;code&gt;Cargo.toml&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Cargo.toml&lt;/code&gt; に依存関係としてクレートが追加されていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="785fdbeb8403e3c205c309d50d0c4627b6a13510" translate="yes" xml:space="preserve">
          <source>Make sure to always label the &lt;code&gt;break&lt;/code&gt;:</source>
          <target state="translated">必ず &lt;code&gt;break&lt;/code&gt; ラベルを付けてください。</target>
        </trans-unit>
        <trans-unit id="03635492e49dd51aa8427fce3fe33f477a9049d7" translate="yes" xml:space="preserve">
          <source>Make sure you're using one of the supported options:</source>
          <target state="translated">サポートされているオプションのいずれかを使用していることを確認してください。</target>
        </trans-unit>
        <trans-unit id="74f86a9c8187dd0e3d1a42a2d66b7afdce31f0bd" translate="yes" xml:space="preserve">
          <source>Make the changes in Listing 20-12 to &lt;em&gt;src/main.rs&lt;/em&gt;, and then let&amp;rsquo;s use the compiler errors from &lt;code&gt;cargo check&lt;/code&gt; to drive our development. Here is the first error we get:</source>
          <target state="translated">リスト20-12の変更を&lt;em&gt;src / main.rsに加え&lt;/em&gt;、 &lt;code&gt;cargo check&lt;/code&gt; コンパイラエラーを使用して開発を進めましょう。ここに私たちが得る最初のエラーがあります：</target>
        </trans-unit>
        <trans-unit id="f4e82ef8f9077ff004c9fab509d5821910979336" translate="yes" xml:space="preserve">
          <source>Make the item public:</source>
          <target state="translated">項目を公開してください。</target>
        </trans-unit>
        <trans-unit id="d06ec9954ea419a6b38edc1bf1a2a6dcc02a5258" translate="yes" xml:space="preserve">
          <source>Make the variable binding mutable:</source>
          <target state="translated">変数バインディングを変更可能にします。</target>
        </trans-unit>
        <trans-unit id="bc48084236d12cb5600cc26b44a2d290edf453b1" translate="yes" xml:space="preserve">
          <source>Makes a clone of the &lt;code&gt;Arc&lt;/code&gt; pointer.</source>
          <target state="translated">&lt;code&gt;Arc&lt;/code&gt; ポインターのクローンを作成します。</target>
        </trans-unit>
        <trans-unit id="0c4e31ca7d1bf4da5b4f8ddc228662ab3f004b62" translate="yes" xml:space="preserve">
          <source>Makes a clone of the &lt;code&gt;Rc&lt;/code&gt; pointer.</source>
          <target state="translated">&lt;code&gt;Rc&lt;/code&gt; ポインタのクローンを作成します。</target>
        </trans-unit>
        <trans-unit id="594571d4a3af8b84956baaf9ead2a966c2e5f3b0" translate="yes" xml:space="preserve">
          <source>Makes a clone of the &lt;code&gt;Weak&lt;/code&gt; pointer that points to the same allocation.</source>
          <target state="translated">同じ割り当てを指す &lt;code&gt;Weak&lt;/code&gt; ポインタのクローンを作成します。</target>
        </trans-unit>
        <trans-unit id="da0d43f1a301c05257ea292524b54ea56af3ec64" translate="yes" xml:space="preserve">
          <source>Makes a clone of the &lt;code&gt;Weak&lt;/code&gt; pointer that points to the same value.</source>
          <target state="translated">同じ値を指す &lt;code&gt;Weak&lt;/code&gt; ポインターのクローンを作成します。</target>
        </trans-unit>
        <trans-unit id="95e1b1bca3d2f7d7acb2f9c78011570f45ba8b35" translate="yes" xml:space="preserve">
          <source>Makes a copy of the value in its ASCII lower case equivalent.</source>
          <target state="translated">値のコピーをASCII小文字で作成します。</target>
        </trans-unit>
        <trans-unit id="c2f78dac175677e088f8d9587c48e1e5deed4b7e" translate="yes" xml:space="preserve">
          <source>Makes a copy of the value in its ASCII lower case equivalent. &lt;a href=&quot;ascii/trait.asciiext#tymethod.to_ascii_lowercase&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">同等のASCII小文字で値のコピーを作成します。&lt;a href=&quot;ascii/trait.asciiext#tymethod.to_ascii_lowercase&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6a98184763dce8b9abdd98e8311b0e6e7ba1eb23" translate="yes" xml:space="preserve">
          <source>Makes a copy of the value in its ASCII upper case equivalent.</source>
          <target state="translated">値のコピーをASCII大文字に変換します。</target>
        </trans-unit>
        <trans-unit id="4d3c8e93f271e4b9119862f73dd68d30760c691b" translate="yes" xml:space="preserve">
          <source>Makes a copy of the value in its ASCII upper case equivalent. &lt;a href=&quot;ascii/trait.asciiext#tymethod.to_ascii_uppercase&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">同等のASCII大文字で値のコピーを作成します。&lt;a href=&quot;ascii/trait.asciiext#tymethod.to_ascii_uppercase&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b21b449d04022c2cb71ab03b6cb465f521b25f3f" translate="yes" xml:space="preserve">
          <source>Makes a mutable reference into the given &lt;code&gt;Arc&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;Arc&lt;/code&gt; への可変参照を作成します。</target>
        </trans-unit>
        <trans-unit id="c80eeefe8e089abbe6fc15570a328083977a6eae" translate="yes" xml:space="preserve">
          <source>Makes a mutable reference into the given &lt;code&gt;Rc&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;Rc&lt;/code&gt; への可変参照を作成します。</target>
        </trans-unit>
        <trans-unit id="6b45ab7ad58abf01267fb6d691762feb9e77a2f6" translate="yes" xml:space="preserve">
          <source>Makes a new &lt;code&gt;BTreeSet&lt;/code&gt; with a reasonable choice of B.</source>
          <target state="translated">Bを適切に選択して新しい &lt;code&gt;BTreeSet&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="a781f5d796d1c37fbc01362e95835e22088ff170" translate="yes" xml:space="preserve">
          <source>Makes a new &lt;code&gt;Ref&lt;/code&gt; for a component of the borrowed data.</source>
          <target state="translated">借用したデータのコンポーネントの新しい &lt;code&gt;Ref&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="278e1cc774975411f6e08d7aebe6c4b4e9c25568" translate="yes" xml:space="preserve">
          <source>Makes a new &lt;code&gt;RefMut&lt;/code&gt; for a component of the borrowed data, e.g., an enum variant.</source>
          <target state="translated">enumバリアントなど、借用したデータのコンポーネントの新しい &lt;code&gt;RefMut&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="283aa1fed88c10ebb8edc51655bd6a83920089a2" translate="yes" xml:space="preserve">
          <source>Makes a new empty BTreeMap with a reasonable choice for B.</source>
          <target state="translated">新しい空の BTreeMap を作成し、B のための合理的な選択を行います。</target>
        </trans-unit>
        <trans-unit id="540d9e49b40fedaea8393e2653dc20ecf4dc809a" translate="yes" xml:space="preserve">
          <source>Makes a new empty BTreeMap.</source>
          <target state="translated">新しい空の BTreeMap を作成します。</target>
        </trans-unit>
        <trans-unit id="2185704ef8fdb0964925f4ab6a6fcc6a90f32392" translate="yes" xml:space="preserve">
          <source>Makes an empty &lt;code&gt;BTreeSet&amp;lt;T&amp;gt;&lt;/code&gt; with a reasonable choice of B.</source>
          <target state="translated">Bを適切に選択して空の &lt;code&gt;BTreeSet&amp;lt;T&amp;gt;&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="fa4f9a96a9969672dc553ff0f59ac09bc8fd1d4b" translate="yes" xml:space="preserve">
          <source>Making Code Clearer with Iterator Adaptors</source>
          <target state="translated">イテレータアダプタを使ってコードをより明確にする</target>
        </trans-unit>
        <trans-unit id="0be549adec6c4078f9192f2037937c6ed7dc4414" translate="yes" xml:space="preserve">
          <source>Making Structs and Enums Public</source>
          <target state="translated">構造体と列挙型を公開する</target>
        </trans-unit>
        <trans-unit id="f726c18b4c7efce9ac3b84c7741581c3646b1ec5" translate="yes" xml:space="preserve">
          <source>Making Useful Documentation Comments</source>
          <target state="translated">役に立つドキュメントのコメントを作る</target>
        </trans-unit>
        <trans-unit id="1c3b5a5bc06c23419d77d273dc1f5cd6abe50ac2" translate="yes" xml:space="preserve">
          <source>Making programmers annotate the types in these small, anonymous functions would be annoying and largely redundant with the information the compiler already has available.</source>
          <target state="translated">プログラマにこれらの小さな無名関数の型のアノテーションをさせることは、コンパイラがすでに利用可能な情報と比較して、非常に冗長で迷惑なことでしょう。</target>
        </trans-unit>
        <trans-unit id="f3cb970fe3641fbfc89185e2ed186cc580150a10" translate="yes" xml:space="preserve">
          <source>Making your own:</source>
          <target state="translated">自分のものを作ること。</target>
        </trans-unit>
        <trans-unit id="d14d90edf49e39f5bd2a9db025048da3c7bdc65a" translate="yes" xml:space="preserve">
          <source>Malformed inline assembly rejected by LLVM.</source>
          <target state="translated">LLVMによって拒絶された不完全なインラインアセンブリ。</target>
        </trans-unit>
        <trans-unit id="fa459cf08953bcf4efc4e2de46a7eb88331c909b" translate="yes" xml:space="preserve">
          <source>Management of mutexes can be incredibly tricky to get right, which is why so many people are enthusiastic about channels. However, thanks to Rust&amp;rsquo;s type system and ownership rules, you can&amp;rsquo;t get locking and unlocking wrong.</source>
          <target state="translated">mutexの管理は、正しく行うのが非常に難しい場合があります。そのため、非常に多くの人々がチャネルに熱心です。ただし、Rustの型システムと所有権ルールのおかげで、ロックとロック解除を間違えることはありません。</target>
        </trans-unit>
        <trans-unit id="32669800cbcfbb3c25b1d2dca7e0647a969d2310" translate="yes" xml:space="preserve">
          <source>Managing Growing Projects with Packages, Crates, and Modules</source>
          <target state="translated">パッケージ、クレート、モジュールを使用した成長中のプロジェクトの管理</target>
        </trans-unit>
        <trans-unit id="bac0c6db61c690d85ce8891466d311628def1204" translate="yes" xml:space="preserve">
          <source>Manual cleanup by explicitly running the destructor and deallocating the memory:</source>
          <target state="translated">デストラクタを明示的に実行してメモリを解放することで、手動でクリーンアップします。</target>
        </trans-unit>
        <trans-unit id="4bb0f5664832e7d5b5156b1f9a49ed8f9963a4c6" translate="yes" xml:space="preserve">
          <source>Manually create a &lt;code&gt;Box&lt;/code&gt; from scratch by using the global allocator:</source>
          <target state="translated">グローバルアロケーターを使用して、 &lt;code&gt;Box&lt;/code&gt; を最初から手動で作成します。</target>
        </trans-unit>
        <trans-unit id="95b428f28bdeb53004768b2b632b7999a8e7e2ed" translate="yes" xml:space="preserve">
          <source>Manually create a &lt;code&gt;Box&lt;/code&gt; from scratch by using the system allocator:</source>
          <target state="translated">システムアロケータを使用して、最初から &lt;code&gt;Box&lt;/code&gt; を手動で作成します。</target>
        </trans-unit>
        <trans-unit id="5ae74603719e41d33e01446b92c34f34abab1e8d" translate="yes" xml:space="preserve">
          <source>Manually drops the contained value.</source>
          <target state="translated">含まれている値を手動で削除します。</target>
        </trans-unit>
        <trans-unit id="fb7bce2897ed79f90e7bc1c68e59dd547267e3cf" translate="yes" xml:space="preserve">
          <source>Manually drops the contained value. This is exactly equivalent to calling &lt;a href=&quot;../ptr/fn.drop_in_place&quot;&gt;&lt;code&gt;ptr::drop_in_place&lt;/code&gt;&lt;/a&gt; with a pointer to the contained value. As such, unless the contained value is a packed struct, the destructor will be called in-place without moving the value, and thus can be used to safely drop &lt;a href=&quot;../pin/index&quot;&gt;pinned&lt;/a&gt; data.</source>
          <target state="translated">含まれている値を手動で削除します。これは、含まれている値へのポインタを使用して&lt;a href=&quot;../ptr/fn.drop_in_place&quot;&gt; &lt;code&gt;ptr::drop_in_place&lt;/code&gt; &lt;/a&gt;を呼び出すこととまったく同じです。そのため、含まれている値がパック構造体でない限り、デストラクタは値を移動せずにインプレースで呼び出されるため、&lt;a href=&quot;../pin/index&quot;&gt;固定された&lt;/a&gt;データを安全にドロップするために使用できます。</target>
        </trans-unit>
        <trans-unit id="d5d3e558818238f853cd41590676e6b0ae84ca10" translate="yes" xml:space="preserve">
          <source>Manually implement &lt;a href=&quot;../mem/fn.swap&quot;&gt;&lt;code&gt;mem::swap&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;../mem/fn.swap&quot;&gt; &lt;code&gt;mem::swap&lt;/code&gt; &lt;/a&gt;手動で実装します。</target>
        </trans-unit>
        <trans-unit id="81e1d8d8d28791b682c9dd5fafecf45c98c894b0" translate="yes" xml:space="preserve">
          <source>Manually implement &lt;a href=&quot;../vec/struct.vec#method.append&quot;&gt;&lt;code&gt;Vec::append&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;../vec/struct.vec#method.append&quot;&gt; &lt;code&gt;Vec::append&lt;/code&gt; &lt;/a&gt;手動で実装します。</target>
        </trans-unit>
        <trans-unit id="540ff29bf252e98c28d525edf6412a6a1783a89f" translate="yes" xml:space="preserve">
          <source>Manually implementing these traits involves implementing unsafe Rust code. We&amp;rsquo;ll talk about using unsafe Rust code in Chapter 19; for now, the important information is that building new concurrent types not made up of &lt;code&gt;Send&lt;/code&gt; and &lt;code&gt;Sync&lt;/code&gt; parts requires careful thought to uphold the safety guarantees. &lt;a href=&quot;https://doc.rust-lang.org/nomicon/index.html&quot;&gt;&amp;ldquo;The Rustonomicon&amp;rdquo;&lt;/a&gt; has more information about these guarantees and how to uphold them.</source>
          <target state="translated">これらの特性を手動で実装するには、安全でないRustコードを実装する必要があります。安全でないRustコードの使用については第19章で説明します。今のところ、重要な情報は、 &lt;code&gt;Send&lt;/code&gt; 部分と &lt;code&gt;Sync&lt;/code&gt; 部分で構成されていない新しい同時型を構築するには、安全性の保証を維持するために慎重に検討する必要があるということです。&lt;a href=&quot;https://doc.rust-lang.org/nomicon/index.html&quot;&gt;「TheRustonomicon」に&lt;/a&gt;は、これらの保証とそれらを維持する方法についての詳細があります。</target>
        </trans-unit>
        <trans-unit id="3fef3e11606bd60261d9a5caddcd97763d588f6c" translate="yes" xml:space="preserve">
          <source>Manually implementing these traits involves implementing unsafe Rust code. We&amp;rsquo;ll talk about using unsafe Rust code in Chapter 19; for now, the important information is that building new concurrent types not made up of &lt;code&gt;Send&lt;/code&gt; and &lt;code&gt;Sync&lt;/code&gt; parts requires careful thought to uphold the safety guarantees. &lt;a href=&quot;https://doc.rust-lang.org/stable/nomicon/index.html&quot;&gt;The Rustonomicon&lt;/a&gt; has more information about these guarantees and how to uphold them.</source>
          <target state="translated">これらの特性を手動で実装するには、安全でないRustコードを実装する必要があります。安全でないRustコードの使用については、第19章で説明します。現時点では、重要な情報は、 &lt;code&gt;Send&lt;/code&gt; および &lt;code&gt;Sync&lt;/code&gt; パーツで構成されていない新しい並行タイプを構築するには、安全性を確保するために慎重な検討が必要であることです。&lt;a href=&quot;https://doc.rust-lang.org/stable/nomicon/index.html&quot;&gt;Rustonomiconに&lt;/a&gt;は、これらの保証とそれらを維持する方法に関する詳細情報があります。</target>
        </trans-unit>
        <trans-unit id="6875772c5ce142246241ada5c6db0fbc4121917a" translate="yes" xml:space="preserve">
          <source>Manually implementing:</source>
          <target state="translated">手動で実装します。</target>
        </trans-unit>
        <trans-unit id="c76cf1bc5487111c7ff7f07658b0600d36759821" translate="yes" xml:space="preserve">
          <source>Manually manage memory through raw pointers.</source>
          <target state="translated">生のポインタを使ってメモリを手動で管理します。</target>
        </trans-unit>
        <trans-unit id="bb52de8f06ed1791910717e6e139f7255684bfa4" translate="yes" xml:space="preserve">
          <source>Manually remove the last item from a vector:</source>
          <target state="translated">ベクトルから最後の項目を手動で削除します。</target>
        </trans-unit>
        <trans-unit id="75a5eb8b2241198d901330cf1baaeb049af418bb" translate="yes" xml:space="preserve">
          <source>ManuallyDrop</source>
          <target state="translated">ManuallyDrop</target>
        </trans-unit>
        <trans-unit id="0ff49992553914f35e95f678e4651c519531be19" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::borrow</source>
          <target state="translated">ManuallyDrop::borrow</target>
        </trans-unit>
        <trans-unit id="e5866233ecb81d35fc4c06e7aa867877316062f7" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::borrow_mut</source>
          <target state="translated">ManuallyDrop::borrow_mut</target>
        </trans-unit>
        <trans-unit id="bb4bc8cef32d3dd1adb9b671371b51ee97a7372a" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::clamp</source>
          <target state="translated">ManuallyDrop::clamp</target>
        </trans-unit>
        <trans-unit id="a258f3620afb6729be4732891e11a8c3a4960b35" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::clone</source>
          <target state="translated">ManuallyDrop::clone</target>
        </trans-unit>
        <trans-unit id="05e63ab6d29a7a5ebd15711613d2e33238d33c5c" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::clone_from</source>
          <target state="translated">ManuallyDrop::clone_from</target>
        </trans-unit>
        <trans-unit id="27ce3992f06bab23ef7ecdc00e69e69c64222ba5" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::clone_into</source>
          <target state="translated">ManuallyDrop::clone_into</target>
        </trans-unit>
        <trans-unit id="9aea997c1c52a9eb2bb803351c7dca247a166a2f" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::cmp</source>
          <target state="translated">ManuallyDrop::cmp</target>
        </trans-unit>
        <trans-unit id="747a3b572684b844c2a4c3556b8949e29fea34ec" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::default</source>
          <target state="translated">ManuallyDrop::default</target>
        </trans-unit>
        <trans-unit id="79d46a552813ce7815952b600c48e5b93c95ef87" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::deref</source>
          <target state="translated">ManuallyDrop::deref</target>
        </trans-unit>
        <trans-unit id="5d9d451b9a7433a5c92ed5e5b380480b0f9132bd" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::deref_mut</source>
          <target state="translated">ManuallyDrop::deref_mut</target>
        </trans-unit>
        <trans-unit id="3401a5ca235ecfd9ff38182608c65bbd70928805" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::drop</source>
          <target state="translated">ManuallyDrop::drop</target>
        </trans-unit>
        <trans-unit id="cffffdcd791ba0dfd910260ec733c70393dfc2cc" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::eq</source>
          <target state="translated">ManuallyDrop::eq</target>
        </trans-unit>
        <trans-unit id="4c085ca90dbc1eab8ccf43a0009f0ab3086cb5f8" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::fmt</source>
          <target state="translated">ManuallyDrop::fmt</target>
        </trans-unit>
        <trans-unit id="9825f9a0deb90ddba8b0dd90214596371285c92a" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::from</source>
          <target state="translated">ManuallyDrop::from</target>
        </trans-unit>
        <trans-unit id="342b69fedd01afaf0f1b87bab9d8cee14185af05" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::ge</source>
          <target state="translated">ManuallyDrop::ge</target>
        </trans-unit>
        <trans-unit id="2dfb7a4c123b39c58646c84396fae274126ca87a" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::gt</source>
          <target state="translated">ManuallyDrop::gt</target>
        </trans-unit>
        <trans-unit id="2f7911193372b76c4c437a07fe7c1a80f89642c6" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::hash</source>
          <target state="translated">ManuallyDrop::hash</target>
        </trans-unit>
        <trans-unit id="307abb97d7a83c9cd8613613885c4d1695a785af" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::hash_slice</source>
          <target state="translated">ManuallyDrop::hash_slice</target>
        </trans-unit>
        <trans-unit id="58c2a06e97cbbfc5ea6ad890b23262056bc15050" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::into</source>
          <target state="translated">ManuallyDrop::into</target>
        </trans-unit>
        <trans-unit id="e49ff403586f091fb5a7449bf767effb956ba0cf" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::into_inner</source>
          <target state="translated">ManuallyDrop::into_inner</target>
        </trans-unit>
        <trans-unit id="84250d05114c51d17952cb262ee0278e1a84a8a5" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::le</source>
          <target state="translated">ManuallyDrop::le</target>
        </trans-unit>
        <trans-unit id="9d64d7de989098ce0554a7c48ed7c5bfe51622e8" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::lt</source>
          <target state="translated">ManuallyDrop::lt</target>
        </trans-unit>
        <trans-unit id="14e565f729cf4f2941482964c6f3f00d9b8a29b7" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::max</source>
          <target state="translated">ManuallyDrop::max</target>
        </trans-unit>
        <trans-unit id="05d11d60a8ff6f9820cc7d4611b2a51f3cb4d4a4" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::min</source>
          <target state="translated">ManuallyDrop::min</target>
        </trans-unit>
        <trans-unit id="a790ef37ec80d8b2ad924d14b5d7e2e5176578ec" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::ne</source>
          <target state="translated">ManuallyDrop::ne</target>
        </trans-unit>
        <trans-unit id="dec7845815f60658c15281c1f79fb29a12700422" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::new</source>
          <target state="translated">ManuallyDrop::new</target>
        </trans-unit>
        <trans-unit id="1687c7f86ad3a66dcfa37560f79c6f09e76e7e01" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::partial_cmp</source>
          <target state="translated">ManuallyDrop::partial_cmp</target>
        </trans-unit>
        <trans-unit id="ac4a9c56d7567f613d40ab18d47ec612a4a7257a" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::take</source>
          <target state="translated">ManuallyDrop::take</target>
        </trans-unit>
        <trans-unit id="3745dcb1c49b08d18b087f92e1e6a66b6b2bd928" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::to_owned</source>
          <target state="translated">ManuallyDrop::to_owned</target>
        </trans-unit>
        <trans-unit id="c5ff516c9244a2f6aff068058ab94e3870f6da6e" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::try_from</source>
          <target state="translated">ManuallyDrop::try_from</target>
        </trans-unit>
        <trans-unit id="4e9b867ee8ca49c0141fa4c441ec1d6b64d20709" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::try_into</source>
          <target state="translated">ManuallyDrop::try_into</target>
        </trans-unit>
        <trans-unit id="d032a4ae2e222fee9a81b0c504905787d1cffc97" translate="yes" xml:space="preserve">
          <source>ManuallyDrop::type_id</source>
          <target state="translated">ManuallyDrop::type_id</target>
        </trans-unit>
        <trans-unit id="0484839de4fe3406648b41928f1dde69deca9b74" translate="yes" xml:space="preserve">
          <source>Many &lt;a href=&quot;trait.iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt;s don't know how many times they will iterate, but some do. If an iterator knows how many times it can iterate, providing access to that information can be useful. For example, if you want to iterate backwards, a good start is to know where the end is.</source>
          <target state="translated">多くの&lt;a href=&quot;trait.iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt;は、反復する回数を知りませんが、反復するものもあります。イテレータが何回反復できるかわかっている場合は、その情報へのアクセスを提供すると便利です。たとえば、逆方向に反復処理したい場合、適切な開始点は、終了点がどこにあるかを知ることです。</target>
        </trans-unit>
        <trans-unit id="c0580adef286548602a7c6b76f2902b81639f53c" translate="yes" xml:space="preserve">
          <source>Many I/O functions throughout the standard library are documented to indicate what various library or syscalls they are delegated to. This is done to help applications both understand what's happening under the hood as well as investigate any possibly unclear semantics. Note, however, that this is informative, not a binding contract. The implementation of many of these functions are subject to change over time and may call fewer or more syscalls/library functions.</source>
          <target state="translated">標準ライブラリ全体の多くのI/O関数は、どのようなライブラリやsyscallに委任されているかを示すために文書化されています。これは、アプリケーションが、何が起こっているのかを理解するのと同時に、不明瞭なセマンティクスを調査するのを助けるために行われています。しかし、これは情報提供であり、拘束力のある契約ではないことに注意してください。これらの関数の多くの実装は時間の経過とともに変更される可能性があり、より少ない、またはより多くの syscall/library 関数を呼び出すかもしれません。</target>
        </trans-unit>
        <trans-unit id="bc24a04fe684f5f353db22858c0879621d2c150e" translate="yes" xml:space="preserve">
          <source>Many collections provide several constructors and methods that refer to &quot;capacity&quot;. These collections are generally built on top of an array. Optimally, this array would be exactly the right size to fit only the elements stored in the collection, but for the collection to do this would be very inefficient. If the backing array was exactly the right size at all times, then every time an element is inserted, the collection would have to grow the array to fit it. Due to the way memory is allocated and managed on most computers, this would almost surely require allocating an entirely new array and copying every single element from the old one into the new one. Hopefully you can see that this wouldn't be very efficient to do on every operation.</source>
          <target state="translated">多くのコレクションは「容量」を参照するいくつかのコンストラクタとメソッドを提供しています。これらのコレクションは一般的に配列の上に構築されます。最適なのは、この配列がコレクションに格納されている要素だけを収めるのにちょうど良いサイズであることですが、コレクションがこれを行うのは非常に非効率的です。もしバッキング配列が常に正確なサイズであれば、要素が挿入されるたびに、コレクションはそれに合うように配列を成長させなければなりません。ほとんどのコンピュータではメモリが割り当てられて管理されているため、これはほぼ確実にまったく新しい配列を割り当て、古い配列から新しい配列に要素をすべてコピーしなければなりません。うまくいけば、これがすべての操作においてあまり効率的ではないことがわかるでしょう。</target>
        </trans-unit>
        <trans-unit id="76b19e79175576e6cab7093093e0ddb1fd52809f" translate="yes" xml:space="preserve">
          <source>Many functions in this module take raw pointers as arguments and read from or write to them. For this to be safe, these pointers must be &lt;em&gt;valid&lt;/em&gt;. Whether a pointer is valid depends on the operation it is used for (read or write), and the extent of the memory that is accessed (i.e., how many bytes are read/written). Most functions use &lt;code&gt;*mut T&lt;/code&gt; and &lt;code&gt;*const T&lt;/code&gt; to access only a single value, in which case the documentation omits the size and implicitly assumes it to be &lt;code&gt;size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; bytes.</source>
          <target state="translated">このモジュールの多くの関数は、生のポインタを引数として取り、それらから読み取りまたは書き込みを行います。これを安全にするには、これらのポインタが&lt;em&gt;有効で&lt;/em&gt;なければなりません。ポインタが有効かどうかは、そのポインタが使用される操作（読み取りまたは書き込み）、およびアクセスされるメモリの範囲（つまり、読み取り/書き込みされるバイト数）によって異なります。ほとんどの関数は &lt;code&gt;*mut T&lt;/code&gt; および &lt;code&gt;*const T&lt;/code&gt; を使用して単一の値のみにアクセスします。この場合、ドキュメントではサイズが省略され、暗黙的にそれが &lt;code&gt;size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; バイトであると想定されます。</target>
        </trans-unit>
        <trans-unit id="13d014fff5ec1912fa9a9184bedfeb8068f9c08d" translate="yes" xml:space="preserve">
          <source>Many languages are dogmatic about the solutions they offer for handling concurrent problems. For example, Erlang has elegant functionality for message-passing concurrency but has only obscure ways to share state between threads. Supporting only a subset of possible solutions is a reasonable strategy for higher-level languages, because a higher-level language promises benefits from giving up some control to gain abstractions. However, lower-level languages are expected to provide the solution with the best performance in any given situation and have fewer abstractions over the hardware. Therefore, Rust offers a variety of tools for modeling problems in whatever way is appropriate for your situation and requirements.</source>
          <target state="translated">多くの言語は並行処理の問題を処理するために提供されているソリューションに独断的です。例えば、Erlangはメッセージを渡す同時実行のためのエレガントな機能を持っていますが、スレッド間で状態を共有する曖昧な方法しか持っていません。可能な解決策のサブセットだけをサポートすることは、高レベル言語にとっては合理的な戦略です。しかし、低レベル言語は、任意の状況で最高のパフォーマンスを持つソリューションを提供することが期待されており、ハードウェア上の抽象化が少なくなっています。そのため、Rustでは、状況や要件に応じて適切な方法であればどのような方法でも問題をモデリングするための様々なツールを提供しています。</target>
        </trans-unit>
        <trans-unit id="d4c938f1a7f4caf7f410216dbf9505989bc2be65" translate="yes" xml:space="preserve">
          <source>Many of the following operators and expressions can also be overloaded for other types using traits in &lt;code&gt;std::ops&lt;/code&gt; or &lt;code&gt;std::cmp&lt;/code&gt;. These traits also exist in &lt;code&gt;core::ops&lt;/code&gt; and &lt;code&gt;core::cmp&lt;/code&gt; with the same names.</source>
          <target state="translated">以下の演算子と式の多くは、 &lt;code&gt;std::ops&lt;/code&gt; または &lt;code&gt;std::cmp&lt;/code&gt; 特性を使用して、他のタイプに多重定義することもできます。これらの特性は、 &lt;code&gt;core::ops&lt;/code&gt; および &lt;code&gt;core::cmp&lt;/code&gt; にも同じ名前で存在します。</target>
        </trans-unit>
        <trans-unit id="5b90bc029a171633a89b2034a09fb0706d49bed6" translate="yes" xml:space="preserve">
          <source>Many of the operators take their operands by value. In non-generic contexts involving built-in types, this is usually not a problem. However, using these operators in generic code, requires some attention if values have to be reused as opposed to letting the operators consume them. One option is to occasionally use &lt;a href=&quot;../clone/trait.clone#tymethod.clone&quot;&gt;&lt;code&gt;clone&lt;/code&gt;&lt;/a&gt;. Another option is to rely on the types involved providing additional operator implementations for references. For example, for a user-defined type &lt;code&gt;T&lt;/code&gt; which is supposed to support addition, it is probably a good idea to have both &lt;code&gt;T&lt;/code&gt; and &lt;code&gt;&amp;amp;T&lt;/code&gt; implement the traits &lt;a href=&quot;trait.add&quot;&gt;&lt;code&gt;Add&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;trait.add&quot;&gt;&lt;code&gt;Add&amp;lt;&amp;amp;T&amp;gt;&lt;/code&gt;&lt;/a&gt; so that generic code can be written without unnecessary cloning.</source>
          <target state="translated">演算子の多くは、値によってオペランドを取ります。組み込み型を含む非ジェネリックコンテキストでは、これは通常問題になりません。ただし、これらの演算子を一般的なコードで使用する場合、演算子を使用するのではなく、値を再利用する必要がある場合は注意が必要です。 1つのオプションは、たまに&lt;a href=&quot;../clone/trait.clone#tymethod.clone&quot;&gt; &lt;code&gt;clone&lt;/code&gt; を&lt;/a&gt;使用することです。別のオプションは、参照に追加の演算子実装を提供することを含む型に依存することです。たとえば、追加をサポートすることになっているユーザー定義型 &lt;code&gt;T&lt;/code&gt; の場合、 &lt;code&gt;T&lt;/code&gt; と &lt;code&gt;&amp;amp;T&lt;/code&gt; の両方に&lt;a href=&quot;trait.add&quot;&gt; &lt;code&gt;Add&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;trait.add&quot;&gt; &lt;code&gt;Add&amp;lt;&amp;amp;T&amp;gt;&lt;/code&gt; &lt;/a&gt;の特性を実装して、不要な汎用コードを記述できるようにすることをお勧めします。クローニング。</target>
        </trans-unit>
        <trans-unit id="068d0085110695f778d351f46b177f0bbabef680" translate="yes" xml:space="preserve">
          <source>Many of the same operations available with &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; are available with &lt;code&gt;String&lt;/code&gt; as well, starting with the &lt;code&gt;new&lt;/code&gt; function to create a string, shown in Listing 8-11.</source>
          <target state="translated">リスト8-11に示すように、 &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; 使用できる同じ操作の多くは &lt;code&gt;String&lt;/code&gt; でも使用できます。まず、文字列を作成する &lt;code&gt;new&lt;/code&gt; 関数を使用します。</target>
        </trans-unit>
        <trans-unit id="3254468e9df291d0c506cf9f47d3052afb8cf80e" translate="yes" xml:space="preserve">
          <source>Many programming languages provide their own special implementation of threads. Programming language-provided threads are known as &lt;em&gt;green&lt;/em&gt; threads, and languages that use these green threads will execute them in the context of a different number of operating system threads. For this reason, the green-threaded model is called the &lt;em&gt;M:N&lt;/em&gt; model: there are &lt;code&gt;M&lt;/code&gt; green threads per &lt;code&gt;N&lt;/code&gt; operating system threads, where &lt;code&gt;M&lt;/code&gt; and &lt;code&gt;N&lt;/code&gt; are not necessarily the same number.</source>
          <target state="translated">多くのプログラミング言語は、スレッドの独自の特別な実装を提供します。プログラミング言語が提供するスレッドは&lt;em&gt;グリーン&lt;/em&gt;スレッドと呼ばれ、これらのグリーンスレッドを使用する言語は、異なる数のオペレーティングシステムスレッドのコンテキストでスレッドを実行します。このため、緑のスレッドモデルは&lt;em&gt;M：N&lt;/em&gt;モデルと呼ばれます &lt;code&gt;N&lt;/code&gt; オペレーティングシステムスレッドごとに &lt;code&gt;M&lt;/code&gt; の緑のスレッドがあり、 &lt;code&gt;M&lt;/code&gt; と &lt;code&gt;N&lt;/code&gt; は必ずしも同じ数ではありません。</target>
        </trans-unit>
        <trans-unit id="8963e190dad9b5c2c0a517c43746d1a72fc75e7c" translate="yes" xml:space="preserve">
          <source>Many shared smart pointer types, including &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; and &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt;, provide containers that can be cloned and shared between multiple parties. Because the contained values may be multiply-aliased, they can only be borrowed with &lt;code&gt;&amp;amp;&lt;/code&gt;, not &lt;code&gt;&amp;amp;mut&lt;/code&gt;. Without cells it would be impossible to mutate data inside of these smart pointers at all.</source>
          <target state="translated">&lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; や &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; を含む多くの共有スマートポインター型は、複数のパーティ間で複製および共有できるコンテナーを提供します。含まれている値はマルチエイリアス化されている可能性があるため、 &lt;code&gt;&amp;amp;mut&lt;/code&gt; でなく、 &lt;code&gt;&amp;amp;&lt;/code&gt; でのみ借りることができます。セルがなければ、これらのスマートポインター内のデータを変更することは不可能です。</target>
        </trans-unit>
        <trans-unit id="08c077e60b3acb5d875cec7cb9d6d59f52db0053" translate="yes" xml:space="preserve">
          <source>Many threads may call &lt;code&gt;get_or_init&lt;/code&gt; concurrently with different initializing functions, but it is guaranteed that only one function will be executed.</source>
          <target state="translated">多くのスレッドは、異なる初期化関数と同時に &lt;code&gt;get_or_init&lt;/code&gt; を呼び出す場合がありますが、実行される関数は1つだけであることが保証されています。</target>
        </trans-unit>
        <trans-unit id="360c8791842766a3afd1e2bb160420977a6612f7" translate="yes" xml:space="preserve">
          <source>Many types are always freely movable, even when pinned, because they do not rely on having a stable address. This includes all the basic types (like &lt;a href=&quot;../primitive.bool&quot;&gt;&lt;code&gt;bool&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../primitive.i32&quot;&gt;&lt;code&gt;i32&lt;/code&gt;&lt;/a&gt;, and references) as well as types consisting solely of these types. Types that do not care about pinning implement the &lt;a href=&quot;../marker/trait.unpin&quot;&gt;&lt;code&gt;Unpin&lt;/code&gt;&lt;/a&gt; auto-trait, which cancels the effect of &lt;a href=&quot;struct.pin&quot;&gt;&lt;code&gt;Pin&amp;lt;P&amp;gt;&lt;/code&gt;&lt;/a&gt;. For &lt;code&gt;T: Unpin&lt;/code&gt;, &lt;a href=&quot;struct.pin&quot;&gt;&lt;code&gt;Pin&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; and &lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; function identically, as do &lt;a href=&quot;struct.pin&quot;&gt;&lt;code&gt;Pin&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;amp;mut T&lt;/code&gt;.</source>
          <target state="translated">多くのタイプは、安定したアドレスを持つことに依存しないため、固定されている場合でも常に自由に移動できます。これには、すべての基本タイプ（&lt;a href=&quot;../primitive.bool&quot;&gt; &lt;code&gt;bool&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../primitive.i32&quot;&gt; &lt;code&gt;i32&lt;/code&gt; &lt;/a&gt;、参照など）と、これらのタイプのみで構成されるタイプが含まれます。固定を気にしないタイプは、&lt;a href=&quot;struct.pin&quot;&gt; &lt;code&gt;Pin&amp;lt;P&amp;gt;&lt;/code&gt; &lt;/a&gt;効果をキャンセルする&lt;a href=&quot;../marker/trait.unpin&quot;&gt; &lt;code&gt;Unpin&lt;/code&gt; &lt;/a&gt;自動特性を実装します。以下のための &lt;code&gt;T: Unpin&lt;/code&gt; 、&lt;a href=&quot;struct.pin&quot;&gt; &lt;code&gt;Pin&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;../boxed/struct.box&quot;&gt; &lt;code&gt;Box&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; と&lt;a href=&quot;../boxed/struct.box&quot;&gt; &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt;同一の関数として行う&lt;a href=&quot;struct.pin&quot;&gt; &lt;code&gt;Pin&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; と &lt;code&gt;&amp;amp;mut T&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="96524e6fb50cd6e78bd3a49b9cef3f18568b875d" translate="yes" xml:space="preserve">
          <source>Many types are always freely movable, even when pinned, because they do not rely on having a stable address. This includes all the basic types (like &lt;code&gt;bool&lt;/code&gt;, &lt;code&gt;i32&lt;/code&gt;, and references) as well as types consisting solely of these types. Types that do not care about pinning implement the &lt;a href=&quot;../marker/trait.unpin&quot;&gt;&lt;code&gt;Unpin&lt;/code&gt;&lt;/a&gt; auto-trait, which cancels the effect of &lt;a href=&quot;struct.pin&quot;&gt;&lt;code&gt;Pin&amp;lt;P&amp;gt;&lt;/code&gt;&lt;/a&gt;. For &lt;code&gt;T: Unpin&lt;/code&gt;, &lt;code&gt;Pin&amp;lt;Box&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; and &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; function identically, as do &lt;code&gt;Pin&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;amp;mut T&lt;/code&gt;.</source>
          <target state="translated">多くのタイプは、固定されたアドレスを持っていることに依存していないため、固定されていても常に自由に移動できます。これには、すべての基本的な型（ &lt;code&gt;bool&lt;/code&gt; 、 &lt;code&gt;i32&lt;/code&gt; 、および参照など）だけでなく、これらの型のみで構成される型も含まれます。ピン留めを気にしないタイプは&lt;a href=&quot;../marker/trait.unpin&quot;&gt; &lt;code&gt;Unpin&lt;/code&gt; &lt;/a&gt;自動トレイトを実装し、&lt;a href=&quot;struct.pin&quot;&gt; &lt;code&gt;Pin&amp;lt;P&amp;gt;&lt;/code&gt; &lt;/a&gt;効果をキャンセルします。以下のための &lt;code&gt;T: Unpin&lt;/code&gt; 、 &lt;code&gt;Pin&amp;lt;Box&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; と &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; 同一の関数として行う &lt;code&gt;Pin&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; して &lt;code&gt;&amp;amp;mut T&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ab478f3efc840eebab919dff1b9512286f70c10c" translate="yes" xml:space="preserve">
          <source>Map</source>
          <target state="translated">Map</target>
        </trans-unit>
        <trans-unit id="df29122b53f448bfbd8df7d684e45a356a48d53a" translate="yes" xml:space="preserve">
          <source>Map a &lt;code&gt;Bound&amp;lt;&amp;amp;T&amp;gt;&lt;/code&gt; to a &lt;code&gt;Bound&amp;lt;T&amp;gt;&lt;/code&gt; by cloning the contents of the bound.</source>
          <target state="translated">&lt;code&gt;Bound&amp;lt;&amp;amp;T&amp;gt;&lt;/code&gt; の内容を複製することにより、Bound &amp;lt;＆T&amp;gt;を &lt;code&gt;Bound&amp;lt;T&amp;gt;&lt;/code&gt; マップします。</target>
        </trans-unit>
        <trans-unit id="1a58a81fddddcc9b42869ed27a566238e1a8c6d5" translate="yes" xml:space="preserve">
          <source>Map::all</source>
          <target state="translated">Map::all</target>
        </trans-unit>
        <trans-unit id="03a745f35f9d4e2b9b8920e51c8b975225024525" translate="yes" xml:space="preserve">
          <source>Map::any</source>
          <target state="translated">Map::any</target>
        </trans-unit>
        <trans-unit id="e27fd38da04382eeb1d09c2169581e27980d8965" translate="yes" xml:space="preserve">
          <source>Map::borrow</source>
          <target state="translated">Map::borrow</target>
        </trans-unit>
        <trans-unit id="8008fa72e2540ba9977ec160e11c30c29db689ee" translate="yes" xml:space="preserve">
          <source>Map::borrow_mut</source>
          <target state="translated">Map::borrow_mut</target>
        </trans-unit>
        <trans-unit id="630e5d943b1b99e5b6e1c5dde655dc59ab5ead67" translate="yes" xml:space="preserve">
          <source>Map::by_ref</source>
          <target state="translated">Map::by_ref</target>
        </trans-unit>
        <trans-unit id="f9153e36a7758a4c6c8165b792439aca160eae94" translate="yes" xml:space="preserve">
          <source>Map::chain</source>
          <target state="translated">Map::chain</target>
        </trans-unit>
        <trans-unit id="88f217332993f3ef5853b6036404a9b04eb5d0ac" translate="yes" xml:space="preserve">
          <source>Map::clone</source>
          <target state="translated">Map::clone</target>
        </trans-unit>
        <trans-unit id="b396fbb67f91e6a12e22a206a5dfb999efbc0df4" translate="yes" xml:space="preserve">
          <source>Map::clone_from</source>
          <target state="translated">Map::clone_from</target>
        </trans-unit>
        <trans-unit id="e76e1d2031241d6c1bfa8fbbd9d13afe6324ebf9" translate="yes" xml:space="preserve">
          <source>Map::clone_into</source>
          <target state="translated">Map::clone_into</target>
        </trans-unit>
        <trans-unit id="b4397f4a58cb5d1944076bd352733820732697bd" translate="yes" xml:space="preserve">
          <source>Map::cloned</source>
          <target state="translated">Map::cloned</target>
        </trans-unit>
        <trans-unit id="db371665e696808903fcf4889430504c79ae21fc" translate="yes" xml:space="preserve">
          <source>Map::cmp</source>
          <target state="translated">Map::cmp</target>
        </trans-unit>
        <trans-unit id="f8b2a982a2812ec678253c38d1d30209727e2bc7" translate="yes" xml:space="preserve">
          <source>Map::collect</source>
          <target state="translated">Map::collect</target>
        </trans-unit>
        <trans-unit id="f1c1d9b76187baf3d0320022636c2f0e5e69889f" translate="yes" xml:space="preserve">
          <source>Map::copied</source>
          <target state="translated">Map::copied</target>
        </trans-unit>
        <trans-unit id="4a1e3f85e9de5cc61392d0a34fa79e32ccb95b3e" translate="yes" xml:space="preserve">
          <source>Map::count</source>
          <target state="translated">Map::count</target>
        </trans-unit>
        <trans-unit id="72b2b5c0b54a8363747a5badec2258979b6f7450" translate="yes" xml:space="preserve">
          <source>Map::cycle</source>
          <target state="translated">Map::cycle</target>
        </trans-unit>
        <trans-unit id="75eb992b5af7c74e94707b08a42500a0bdbe5987" translate="yes" xml:space="preserve">
          <source>Map::enumerate</source>
          <target state="translated">Map::enumerate</target>
        </trans-unit>
        <trans-unit id="993d6a08bb24f1190f8b7dde7f20470f1c97017c" translate="yes" xml:space="preserve">
          <source>Map::eq</source>
          <target state="translated">Map::eq</target>
        </trans-unit>
        <trans-unit id="a9e5ac2366e118220418421b0caa9bee4fba383a" translate="yes" xml:space="preserve">
          <source>Map::filter</source>
          <target state="translated">Map::filter</target>
        </trans-unit>
        <trans-unit id="b442c2b2361ea72b048219f3e26a5f18e537332f" translate="yes" xml:space="preserve">
          <source>Map::filter_map</source>
          <target state="translated">Map::filter_map</target>
        </trans-unit>
        <trans-unit id="f63418aeba4241d5162fbcce56cc0644c14f1d1c" translate="yes" xml:space="preserve">
          <source>Map::find</source>
          <target state="translated">Map::find</target>
        </trans-unit>
        <trans-unit id="f6144d3320c6dfea791d10217e3e8079952c660e" translate="yes" xml:space="preserve">
          <source>Map::find_map</source>
          <target state="translated">Map::find_map</target>
        </trans-unit>
        <trans-unit id="635fe84f8ddb9aa9bafea1e6c25c86a9ed0e9b4b" translate="yes" xml:space="preserve">
          <source>Map::flat_map</source>
          <target state="translated">Map::flat_map</target>
        </trans-unit>
        <trans-unit id="df8c7d56d90eb915ddece209e0ed60e910cf5810" translate="yes" xml:space="preserve">
          <source>Map::flatten</source>
          <target state="translated">Map::flatten</target>
        </trans-unit>
        <trans-unit id="741d7f7e9bdb0a0542cd59e99d6a8f4cdaf7f84d" translate="yes" xml:space="preserve">
          <source>Map::fmt</source>
          <target state="translated">Map::fmt</target>
        </trans-unit>
        <trans-unit id="ae44712f04dab2122840dd77dd590fa9b454de37" translate="yes" xml:space="preserve">
          <source>Map::fold</source>
          <target state="translated">Map::fold</target>
        </trans-unit>
        <trans-unit id="112cae751955c6b50967e1a0a3cc5f382a9d83ef" translate="yes" xml:space="preserve">
          <source>Map::for_each</source>
          <target state="translated">Map::for_each</target>
        </trans-unit>
        <trans-unit id="34c8999abc6581153960b6dc7ac11211aeeb887f" translate="yes" xml:space="preserve">
          <source>Map::from</source>
          <target state="translated">Map::from</target>
        </trans-unit>
        <trans-unit id="8c3b295e4b4bb67a51c785cb5890d343a0fe3a35" translate="yes" xml:space="preserve">
          <source>Map::fuse</source>
          <target state="translated">Map::fuse</target>
        </trans-unit>
        <trans-unit id="bb5c0aa6766f65baaad20d564cd25d5b3652c7c5" translate="yes" xml:space="preserve">
          <source>Map::ge</source>
          <target state="translated">Map::ge</target>
        </trans-unit>
        <trans-unit id="148bbbf71d9210e5c6e2d74d7b37d6a4959732ae" translate="yes" xml:space="preserve">
          <source>Map::gt</source>
          <target state="translated">Map::gt</target>
        </trans-unit>
        <trans-unit id="59a3caad759408198d5ff6b63ffab02c7f0d0109" translate="yes" xml:space="preserve">
          <source>Map::inspect</source>
          <target state="translated">Map::inspect</target>
        </trans-unit>
        <trans-unit id="0c414c474aadfea661298e12c8c1893a0877e27f" translate="yes" xml:space="preserve">
          <source>Map::into</source>
          <target state="translated">Map::into</target>
        </trans-unit>
        <trans-unit id="be46558bc25fe8b488a966057d9a20b90705b693" translate="yes" xml:space="preserve">
          <source>Map::into_iter</source>
          <target state="translated">Map::into_iter</target>
        </trans-unit>
        <trans-unit id="aa4767aede3957f624bc911847b8de1f51f6759c" translate="yes" xml:space="preserve">
          <source>Map::is_empty</source>
          <target state="translated">Map::is_empty</target>
        </trans-unit>
        <trans-unit id="06ac53014021288c74158a733397c0235d2512ac" translate="yes" xml:space="preserve">
          <source>Map::is_sorted</source>
          <target state="translated">Map::is_sorted</target>
        </trans-unit>
        <trans-unit id="adebe865ede9926f64d1d6ed334e7f319bb11f62" translate="yes" xml:space="preserve">
          <source>Map::is_sorted_by</source>
          <target state="translated">Map::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="ce8087aab9316ebfe810681e115dc046b013c6b0" translate="yes" xml:space="preserve">
          <source>Map::is_sorted_by_key</source>
          <target state="translated">Map::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="fddd4a9e9f359e6b02a370e6da729aa214300ae4" translate="yes" xml:space="preserve">
          <source>Map::last</source>
          <target state="translated">Map::last</target>
        </trans-unit>
        <trans-unit id="3794995c0f5bba6ab4b90ce6c82a5e83207a1571" translate="yes" xml:space="preserve">
          <source>Map::le</source>
          <target state="translated">Map::le</target>
        </trans-unit>
        <trans-unit id="26586aaae30ff20d50715692987bf1a4d7716e8c" translate="yes" xml:space="preserve">
          <source>Map::len</source>
          <target state="translated">Map::len</target>
        </trans-unit>
        <trans-unit id="25ef7d621a5ac63c0fda76bac9dd97d2d2700cd6" translate="yes" xml:space="preserve">
          <source>Map::lt</source>
          <target state="translated">Map::lt</target>
        </trans-unit>
        <trans-unit id="40cac0b5fd45dddd282e0ee446680c17c5c623d7" translate="yes" xml:space="preserve">
          <source>Map::map</source>
          <target state="translated">Map::map</target>
        </trans-unit>
        <trans-unit id="48b5b8f8f6251126a880cc4ab4b3b2011c64448b" translate="yes" xml:space="preserve">
          <source>Map::max</source>
          <target state="translated">Map::max</target>
        </trans-unit>
        <trans-unit id="6fb150f3d87aa0a6ddb9c71c96b522bb70871171" translate="yes" xml:space="preserve">
          <source>Map::max_by</source>
          <target state="translated">Map::max_by</target>
        </trans-unit>
        <trans-unit id="5e6536c48e7829b8ff885ec31d8681a3ced9a901" translate="yes" xml:space="preserve">
          <source>Map::max_by_key</source>
          <target state="translated">Map::max_by_key</target>
        </trans-unit>
        <trans-unit id="68233d057ba78c0b7a8e0a61b6680d3717ba4150" translate="yes" xml:space="preserve">
          <source>Map::min</source>
          <target state="translated">Map::min</target>
        </trans-unit>
        <trans-unit id="8a9341a8b777321cda6d7fcd4082aa0671c4fe1b" translate="yes" xml:space="preserve">
          <source>Map::min_by</source>
          <target state="translated">Map::min_by</target>
        </trans-unit>
        <trans-unit id="921c6c43f49d77c68b806d0e548ee1cef1a992ec" translate="yes" xml:space="preserve">
          <source>Map::min_by_key</source>
          <target state="translated">Map::min_by_key</target>
        </trans-unit>
        <trans-unit id="4d8988fbd101fbf8e6c94aa5288cf45fab81e964" translate="yes" xml:space="preserve">
          <source>Map::ne</source>
          <target state="translated">Map::ne</target>
        </trans-unit>
        <trans-unit id="bd95bbe906046a49dc9810190d741e1bd68bbc39" translate="yes" xml:space="preserve">
          <source>Map::next</source>
          <target state="translated">Map::next</target>
        </trans-unit>
        <trans-unit id="39e2008f43536663d0ca35066c739e6e3ebadc47" translate="yes" xml:space="preserve">
          <source>Map::next_back</source>
          <target state="translated">Map::next_back</target>
        </trans-unit>
        <trans-unit id="bc8224e378d580c52513c9c59784964d8f54fe1a" translate="yes" xml:space="preserve">
          <source>Map::nth</source>
          <target state="translated">Map::nth</target>
        </trans-unit>
        <trans-unit id="ce0694a97b324829d9ed31f3b6e2cc31e3a513e0" translate="yes" xml:space="preserve">
          <source>Map::nth_back</source>
          <target state="translated">Map::nth_back</target>
        </trans-unit>
        <trans-unit id="6dc78fd299f1bfef5c724073e84810a0ebf43ea3" translate="yes" xml:space="preserve">
          <source>Map::partial_cmp</source>
          <target state="translated">Map::partial_cmp</target>
        </trans-unit>
        <trans-unit id="fd07c390ff46f9dcd32482c98f66d65c6fddcc9e" translate="yes" xml:space="preserve">
          <source>Map::partition</source>
          <target state="translated">Map::partition</target>
        </trans-unit>
        <trans-unit id="37114f4f80d49293573e7c92509d712b2a2e49ba" translate="yes" xml:space="preserve">
          <source>Map::peekable</source>
          <target state="translated">Map::peekable</target>
        </trans-unit>
        <trans-unit id="9b4d7af93bb9bdf0426605707f0b34a9ff7e2daa" translate="yes" xml:space="preserve">
          <source>Map::position</source>
          <target state="translated">Map::position</target>
        </trans-unit>
        <trans-unit id="3d27eb47b8bdd3a8842e3f21315f7117954ca629" translate="yes" xml:space="preserve">
          <source>Map::product</source>
          <target state="translated">Map::product</target>
        </trans-unit>
        <trans-unit id="47c5c4644d5a03d1a05f0fbb573d4f9546fc7eda" translate="yes" xml:space="preserve">
          <source>Map::rev</source>
          <target state="translated">Map::rev</target>
        </trans-unit>
        <trans-unit id="98eeaa4cd728ab7a6cea0c95712fbc4770918b02" translate="yes" xml:space="preserve">
          <source>Map::rfind</source>
          <target state="translated">Map::rfind</target>
        </trans-unit>
        <trans-unit id="7f3aad1b4b83a46d17d2320a509b0bca35196ddc" translate="yes" xml:space="preserve">
          <source>Map::rfold</source>
          <target state="translated">Map::rfold</target>
        </trans-unit>
        <trans-unit id="602b0edc5518aae4fa0c05975ed09058fc128538" translate="yes" xml:space="preserve">
          <source>Map::rposition</source>
          <target state="translated">Map::rposition</target>
        </trans-unit>
        <trans-unit id="c6c10105cff31b60a7f7d97985eee0e40ee6b580" translate="yes" xml:space="preserve">
          <source>Map::scan</source>
          <target state="translated">Map::scan</target>
        </trans-unit>
        <trans-unit id="6600c2d56964d5ec64f83bb9495bd9cb7812154f" translate="yes" xml:space="preserve">
          <source>Map::size_hint</source>
          <target state="translated">Map::size_hint</target>
        </trans-unit>
        <trans-unit id="923e99f72130f5a97cac9c41715a3476d75c8951" translate="yes" xml:space="preserve">
          <source>Map::skip</source>
          <target state="translated">Map::skip</target>
        </trans-unit>
        <trans-unit id="9611218973349584a7bfbfb37c26e1ef38fb218f" translate="yes" xml:space="preserve">
          <source>Map::skip_while</source>
          <target state="translated">Map::skip_while</target>
        </trans-unit>
        <trans-unit id="37f15143aefd854a8af3e39ab55c70a5a192f8d8" translate="yes" xml:space="preserve">
          <source>Map::step_by</source>
          <target state="translated">Map::step_by</target>
        </trans-unit>
        <trans-unit id="7f04c8c1b54f17f3163e839e0042fa9006757120" translate="yes" xml:space="preserve">
          <source>Map::sum</source>
          <target state="translated">Map::sum</target>
        </trans-unit>
        <trans-unit id="87a9e6e637b04e1927a2c2eeae5ce601d8133256" translate="yes" xml:space="preserve">
          <source>Map::take</source>
          <target state="translated">Map::take</target>
        </trans-unit>
        <trans-unit id="f840d3533ded62863a4a0980e694e739563fdcc6" translate="yes" xml:space="preserve">
          <source>Map::take_while</source>
          <target state="translated">Map::take_while</target>
        </trans-unit>
        <trans-unit id="b22c8ca3fc8de8258f5c9cd3b2dc713ff6fcfb77" translate="yes" xml:space="preserve">
          <source>Map::to_owned</source>
          <target state="translated">Map::to_owned</target>
        </trans-unit>
        <trans-unit id="e9e6303270d6b2a52a8c06e6ea872d1081d4b3d0" translate="yes" xml:space="preserve">
          <source>Map::try_fold</source>
          <target state="translated">Map::try_fold</target>
        </trans-unit>
        <trans-unit id="2f933b05d507f1d3229a0fe286c9a34e8d46fa7c" translate="yes" xml:space="preserve">
          <source>Map::try_for_each</source>
          <target state="translated">Map::try_for_each</target>
        </trans-unit>
        <trans-unit id="bcd71f7fed78903d5ba372cc2b24eff4b81cfb7c" translate="yes" xml:space="preserve">
          <source>Map::try_from</source>
          <target state="translated">Map::try_from</target>
        </trans-unit>
        <trans-unit id="377418caebd9f1c884f3b21ab42fefd1a732ed86" translate="yes" xml:space="preserve">
          <source>Map::try_into</source>
          <target state="translated">Map::try_into</target>
        </trans-unit>
        <trans-unit id="39f1bb6fc690aefbc861e9a1fcc04ae870ca5342" translate="yes" xml:space="preserve">
          <source>Map::try_rfold</source>
          <target state="translated">Map::try_rfold</target>
        </trans-unit>
        <trans-unit id="7981573889b59d44592e7cd96024ff52ab0f2d02" translate="yes" xml:space="preserve">
          <source>Map::type_id</source>
          <target state="translated">Map::type_id</target>
        </trans-unit>
        <trans-unit id="28a8fad3b6d7b8e3263b1c130ee318dddf630612" translate="yes" xml:space="preserve">
          <source>Map::unzip</source>
          <target state="translated">Map::unzip</target>
        </trans-unit>
        <trans-unit id="0c9357ee56278da444fa47d2152d6415837f2772" translate="yes" xml:space="preserve">
          <source>Map::zip</source>
          <target state="translated">Map::zip</target>
        </trans-unit>
        <trans-unit id="e756756cc8409d6509546ae5d3bd850bcef76291" translate="yes" xml:space="preserve">
          <source>MapWhile</source>
          <target state="translated">MapWhile</target>
        </trans-unit>
        <trans-unit id="83cefc6377d7fddbe40b4eec70dcd5e0779d80d1" translate="yes" xml:space="preserve">
          <source>Mapping and then flattening:</source>
          <target state="translated">マッピングしてからフラットにする。</target>
        </trans-unit>
        <trans-unit id="80071cd75107cd5c4afdb2571725ea6733631038" translate="yes" xml:space="preserve">
          <source>Maps</source>
          <target state="translated">Maps</target>
        </trans-unit>
        <trans-unit id="7dfca1c39dc2005ffa58f05878051dfb7ab133c0" translate="yes" xml:space="preserve">
          <source>Maps a &lt;code&gt;Result&amp;lt;&amp;amp;T, E&amp;gt;&lt;/code&gt; to a &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; by cloning the contents of the &lt;code&gt;Ok&lt;/code&gt; part.</source>
          <target state="translated">&lt;code&gt;Ok&lt;/code&gt; パーツの内容を複製して、 &lt;code&gt;Result&amp;lt;&amp;amp;T, E&amp;gt;&lt;/code&gt; を &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; マップします。</target>
        </trans-unit>
        <trans-unit id="d25505fbe1870538ccc1572575cda9f420028758" translate="yes" xml:space="preserve">
          <source>Maps a &lt;code&gt;Result&amp;lt;&amp;amp;T, E&amp;gt;&lt;/code&gt; to a &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; by copying the contents of the &lt;code&gt;Ok&lt;/code&gt; part.</source>
          <target state="translated">&lt;code&gt;Ok&lt;/code&gt; パーツの内容をコピーして、 &lt;code&gt;Result&amp;lt;&amp;amp;T, E&amp;gt;&lt;/code&gt; を &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; マップします。</target>
        </trans-unit>
        <trans-unit id="26ddf84303b0a1a0f206dd98bc1ca95bc7fd61f9" translate="yes" xml:space="preserve">
          <source>Maps a &lt;code&gt;Result&amp;lt;&amp;amp;mut T, E&amp;gt;&lt;/code&gt; to a &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; by cloning the contents of the &lt;code&gt;Ok&lt;/code&gt; part.</source>
          <target state="translated">&lt;code&gt;Ok&lt;/code&gt; パーツの内容を複製することにより、 &lt;code&gt;Result&amp;lt;&amp;amp;mut T, E&amp;gt;&lt;/code&gt; を &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; マップします。</target>
        </trans-unit>
        <trans-unit id="75078b53df865555f845fe3a893c127ababf9294" translate="yes" xml:space="preserve">
          <source>Maps a &lt;code&gt;Result&amp;lt;&amp;amp;mut T, E&amp;gt;&lt;/code&gt; to a &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; by copying the contents of the &lt;code&gt;Ok&lt;/code&gt; part.</source>
          <target state="translated">&lt;code&gt;Ok&lt;/code&gt; パーツの内容をコピーして、 &lt;code&gt;Result&amp;lt;&amp;amp;mut T, E&amp;gt;&lt;/code&gt; を &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; マップします。</target>
        </trans-unit>
        <trans-unit id="734564b861ed03b0aefe58885560fbc7857a1738" translate="yes" xml:space="preserve">
          <source>Maps a &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; to &lt;code&gt;Result&amp;lt;T, F&amp;gt;&lt;/code&gt; by applying a function to a contained &lt;a href=&quot;enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt; value, leaving an &lt;a href=&quot;enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt; value untouched.</source>
          <target state="translated">含まれている&lt;a href=&quot;enum.result#variant.Err&quot;&gt; &lt;code&gt;Err&lt;/code&gt; &lt;/a&gt;値に関数を適用して &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; を &lt;code&gt;Result&amp;lt;T, F&amp;gt;&lt;/code&gt; マップし、&lt;a href=&quot;enum.result#variant.Ok&quot;&gt; &lt;code&gt;Ok&lt;/code&gt; &lt;/a&gt;値はそのままにします。</target>
        </trans-unit>
        <trans-unit id="ad065da187875e2c9f2477c5e59a007924643b31" translate="yes" xml:space="preserve">
          <source>Maps a &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; to &lt;code&gt;Result&amp;lt;U, E&amp;gt;&lt;/code&gt; by applying a function to a contained &lt;a href=&quot;enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt; value, leaving an &lt;a href=&quot;enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt; value untouched.</source>
          <target state="translated">含まれる&lt;a href=&quot;enum.result#variant.Ok&quot;&gt; &lt;code&gt;Ok&lt;/code&gt; &lt;/a&gt;値に関数を適用して &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; を &lt;code&gt;Result&amp;lt;U, E&amp;gt;&lt;/code&gt; マップし、&lt;a href=&quot;enum.result#variant.Err&quot;&gt; &lt;code&gt;Err&lt;/code&gt; &lt;/a&gt;値はそのままにします。</target>
        </trans-unit>
        <trans-unit id="f936d32399d16bbfe67702c38935926ed5468164" translate="yes" xml:space="preserve">
          <source>Maps a &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; to &lt;code&gt;U&lt;/code&gt; by applying a function to a contained &lt;a href=&quot;enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt; value, or a fallback function to a contained &lt;a href=&quot;enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt; value.</source>
          <target state="translated">含まれている&lt;a href=&quot;enum.result#variant.Ok&quot;&gt; &lt;code&gt;Ok&lt;/code&gt; &lt;/a&gt;値に関数を適用するか、含まれている&lt;a href=&quot;enum.result#variant.Err&quot;&gt; &lt;code&gt;Err&lt;/code&gt; &lt;/a&gt;値にフォールバック関数を適用して、 &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; を &lt;code&gt;U&lt;/code&gt; にマップします。</target>
        </trans-unit>
        <trans-unit id="797fbd17d80382efa5086a8df9508fbdca0a1060" translate="yes" xml:space="preserve">
          <source>Maps a byte in 0x00..=0xFF to a &lt;code&gt;char&lt;/code&gt; whose code point has the same value, in U+0000..=U+00FF.</source>
          <target state="translated">0x00 .. = 0xFF内のバイトを、コードポイントが同じ値を持つ &lt;code&gt;char&lt;/code&gt; マップします（U + 0000 .. = U + 00FF）。</target>
        </trans-unit>
        <trans-unit id="2e352145a0cdb19a335300b9369b89fbd8a25ef7" translate="yes" xml:space="preserve">
          <source>Maps an &lt;code&gt;Option&amp;lt;&amp;amp;T&amp;gt;&lt;/code&gt; to an &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; by cloning the contents of the option.</source>
          <target state="translated">&lt;code&gt;Option&amp;lt;&amp;amp;T&amp;gt;&lt;/code&gt; の内容を複製することにより、オプション&amp;lt;＆T&amp;gt;を &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; マッピングします。</target>
        </trans-unit>
        <trans-unit id="93de5376733896baa45e538f72efc3d420f82590" translate="yes" xml:space="preserve">
          <source>Maps an &lt;code&gt;Option&amp;lt;&amp;amp;T&amp;gt;&lt;/code&gt; to an &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; by copying the contents of the option.</source>
          <target state="translated">&lt;code&gt;Option&amp;lt;&amp;amp;T&amp;gt;&lt;/code&gt; の内容をコピーして、オプション&amp;lt;＆T&amp;gt;を &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; マッピングします。</target>
        </trans-unit>
        <trans-unit id="489e927771bbcdbcf304af0a46f6f0a2cfc0e463" translate="yes" xml:space="preserve">
          <source>Maps an &lt;code&gt;Option&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; to an &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; by cloning the contents of the option.</source>
          <target state="translated">&lt;code&gt;Option&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; の内容を複製することにより、Option &amp;lt;＆mut T&amp;gt;を &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; マップします。</target>
        </trans-unit>
        <trans-unit id="c891415b6b09551729b3ef9fb44bbf6a6f502c69" translate="yes" xml:space="preserve">
          <source>Maps an &lt;code&gt;Option&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; to an &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; by copying the contents of the option.</source>
          <target state="translated">&lt;code&gt;Option&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; の内容をコピーして、Option &amp;lt;＆mut T&amp;gt;を &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; マップします。</target>
        </trans-unit>
        <trans-unit id="6625245129c5cc0b5428454a5f4ec750a28d7f63" translate="yes" xml:space="preserve">
          <source>Maps an &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; to &lt;code&gt;Option&amp;lt;U&amp;gt;&lt;/code&gt; by applying a function to a contained value.</source>
          <target state="translated">含まれている値に関数を適用して、 &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; を &lt;code&gt;Option&amp;lt;U&amp;gt;&lt;/code&gt; マップします。</target>
        </trans-unit>
        <trans-unit id="2e0db9965b9d8c070fe6ab5a20105fd94f41e462" translate="yes" xml:space="preserve">
          <source>Maps: &lt;a href=&quot;struct.hashmap&quot;&gt;&lt;code&gt;HashMap&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;struct.btreemap&quot;&gt;&lt;code&gt;BTreeMap&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">マップ：&lt;a href=&quot;struct.hashmap&quot;&gt; &lt;code&gt;HashMap&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;struct.btreemap&quot;&gt; &lt;code&gt;BTreeMap&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d25037497682a833510188b5ecdcc39064438926" translate="yes" xml:space="preserve">
          <source>Marking elements as &lt;code&gt;unsafe&lt;/code&gt;</source>
          <target state="translated">要素を &lt;code&gt;unsafe&lt;/code&gt; としてマークする</target>
        </trans-unit>
        <trans-unit id="799115430a273023c28ac0e7dc5ce0b69eca5421" translate="yes" xml:space="preserve">
          <source>Marks the struct as non-exhaustive, indicating to the reader that there are some other fields that are not shown in the debug representation.</source>
          <target state="translated">構造体を非網羅的なものとしてマークし、デバッグ表現では表示されない他のフィールドがあることを示します。</target>
        </trans-unit>
        <trans-unit id="5d2cb06099639fbea64185538fa2f9ba651babda" translate="yes" xml:space="preserve">
          <source>Match arms can accept &lt;em&gt;match guards&lt;/em&gt; to further refine the criteria for matching a case. Pattern guards appear after the pattern and consist of a &lt;code&gt;bool&lt;/code&gt;-typed expression following the &lt;code&gt;if&lt;/code&gt; keyword.</source>
          <target state="translated">マッチアームは&lt;em&gt;マッチガード&lt;/em&gt;を受け入れて、ケースをマッチングするための基準をさらに洗練することができます。パターンガードはパターンの後に表示され、 &lt;code&gt;if&lt;/code&gt; キーワードに続く &lt;code&gt;bool&lt;/code&gt; 型の式で構成されます。</target>
        </trans-unit>
        <trans-unit id="c7ef7934adf8c801d44bf69adf1806707e1b590a" translate="yes" xml:space="preserve">
          <source>Match arms can accept &lt;em&gt;match guards&lt;/em&gt; to further refine the criteria for matching a case. Pattern guards appear after the pattern and consist of a bool-typed expression following the &lt;code&gt;if&lt;/code&gt; keyword. A pattern guard may refer to the variables bound within the pattern they follow.</source>
          <target state="translated">マッチアームは、&lt;em&gt;マッチガード&lt;/em&gt;を受け入れて、ケースのマッチング基準をさらに絞り込むことができます。パターンガードはパターンの後に表示され、 &lt;code&gt;if&lt;/code&gt; キーワードに続くブール型の式で構成されます。パターンガードは、パターンが従うパターン内でバインドされた変数を参照できます。</target>
        </trans-unit>
        <trans-unit id="82dbbba4b754bd91fe25a2303476d2bbf40a1588" translate="yes" xml:space="preserve">
          <source>Match arms with guard conditions.</source>
          <target state="translated">ガード条件で腕を一致させる。</target>
        </trans-unit>
        <trans-unit id="705c230fc6ae75bfa567a56930852133f1ba462b" translate="yes" xml:space="preserve">
          <source>Match arms:</source>
          <target state="translated">腕を一致させる。</target>
        </trans-unit>
        <trans-unit id="29c22bededda367b5ee4a04d29831608c006bc68" translate="yes" xml:space="preserve">
          <source>Match condition</source>
          <target state="translated">状態が一致している</target>
        </trans-unit>
        <trans-unit id="0282881bf64b96224fa36c4b271c429100fee5e9" translate="yes" xml:space="preserve">
          <source>Match guards</source>
          <target state="translated">マッチガード</target>
        </trans-unit>
        <trans-unit id="442ae912e5bf400cd7a06fdbd1cc99f277c5045b" translate="yes" xml:space="preserve">
          <source>Match inside the loop instead:</source>
          <target state="translated">代わりにループ内でマッチします。</target>
        </trans-unit>
        <trans-unit id="3739f6f123a862ea5412abd3d0679f165957e53c" translate="yes" xml:space="preserve">
          <source>MatchIndices</source>
          <target state="translated">MatchIndices</target>
        </trans-unit>
        <trans-unit id="7c0c01a14aad4ca86387f3507273def6a3cf0b5d" translate="yes" xml:space="preserve">
          <source>MatchIndices::all</source>
          <target state="translated">MatchIndices::all</target>
        </trans-unit>
        <trans-unit id="6b76c9e862a027cab6fcec93f08aebfc4d529237" translate="yes" xml:space="preserve">
          <source>MatchIndices::any</source>
          <target state="translated">MatchIndices::any</target>
        </trans-unit>
        <trans-unit id="02aeeb6f73d6644372f844a5d08ae7c1ad25533b" translate="yes" xml:space="preserve">
          <source>MatchIndices::borrow</source>
          <target state="translated">MatchIndices::borrow</target>
        </trans-unit>
        <trans-unit id="b0b39a03296952fb25f2b50c8b6722eebfb7261f" translate="yes" xml:space="preserve">
          <source>MatchIndices::borrow_mut</source>
          <target state="translated">MatchIndices::borrow_mut</target>
        </trans-unit>
        <trans-unit id="2f345fb24654ed82e91d8ac8467f8f30c4bc0bef" translate="yes" xml:space="preserve">
          <source>MatchIndices::by_ref</source>
          <target state="translated">MatchIndices::by_ref</target>
        </trans-unit>
        <trans-unit id="7bcbb5083968690c1ca1cc9942df87127b2049fd" translate="yes" xml:space="preserve">
          <source>MatchIndices::chain</source>
          <target state="translated">MatchIndices::chain</target>
        </trans-unit>
        <trans-unit id="c701a3c91470a2cb8c46024cd84462cdb941eff5" translate="yes" xml:space="preserve">
          <source>MatchIndices::clone</source>
          <target state="translated">MatchIndices::clone</target>
        </trans-unit>
        <trans-unit id="b0db6347a398c0d36c24c5e5f31ef74d6bf115ca" translate="yes" xml:space="preserve">
          <source>MatchIndices::clone_from</source>
          <target state="translated">MatchIndices::clone_from</target>
        </trans-unit>
        <trans-unit id="9075b3ad377aae3bdb3b83754cfb1468e97248e7" translate="yes" xml:space="preserve">
          <source>MatchIndices::clone_into</source>
          <target state="translated">MatchIndices::clone_into</target>
        </trans-unit>
        <trans-unit id="757c60bfbfeda7ff54ff552a04999ace62a28ddb" translate="yes" xml:space="preserve">
          <source>MatchIndices::cloned</source>
          <target state="translated">MatchIndices::cloned</target>
        </trans-unit>
        <trans-unit id="74bc1bc3ac32f736e9ea21ac4deeb6498b8d7799" translate="yes" xml:space="preserve">
          <source>MatchIndices::cmp</source>
          <target state="translated">MatchIndices::cmp</target>
        </trans-unit>
        <trans-unit id="f4bb5929c6110cfa542fbadab3093a0794871a1f" translate="yes" xml:space="preserve">
          <source>MatchIndices::collect</source>
          <target state="translated">MatchIndices::collect</target>
        </trans-unit>
        <trans-unit id="9fb056458d0be8f451f5aeda3cd7b8ceb8b0f74a" translate="yes" xml:space="preserve">
          <source>MatchIndices::copied</source>
          <target state="translated">MatchIndices::copied</target>
        </trans-unit>
        <trans-unit id="930e8200a6895bbc7e075dc0a7fd4f9d44780000" translate="yes" xml:space="preserve">
          <source>MatchIndices::count</source>
          <target state="translated">MatchIndices::count</target>
        </trans-unit>
        <trans-unit id="143eb1f700da8cf5aae0dd4a729b79290ec10b2b" translate="yes" xml:space="preserve">
          <source>MatchIndices::cycle</source>
          <target state="translated">MatchIndices::cycle</target>
        </trans-unit>
        <trans-unit id="39fccef48dab1f3fc05706219bfd31fd34f04217" translate="yes" xml:space="preserve">
          <source>MatchIndices::enumerate</source>
          <target state="translated">MatchIndices::enumerate</target>
        </trans-unit>
        <trans-unit id="83dd639bfdfbf1b4e77bd2d8087dd98ee30fd7e2" translate="yes" xml:space="preserve">
          <source>MatchIndices::eq</source>
          <target state="translated">MatchIndices::eq</target>
        </trans-unit>
        <trans-unit id="259b55c869ea052cb365e557e96672d0213d2b93" translate="yes" xml:space="preserve">
          <source>MatchIndices::filter</source>
          <target state="translated">MatchIndices::filter</target>
        </trans-unit>
        <trans-unit id="4ed78bfae8f63df5c8348a6634e914e2623500d4" translate="yes" xml:space="preserve">
          <source>MatchIndices::filter_map</source>
          <target state="translated">MatchIndices::filter_map</target>
        </trans-unit>
        <trans-unit id="b452e8e82fa71eb809418b8c3d82a85ac8e7f300" translate="yes" xml:space="preserve">
          <source>MatchIndices::find</source>
          <target state="translated">MatchIndices::find</target>
        </trans-unit>
        <trans-unit id="5066cb793c580d5e99d9f3e72076420df852a3ce" translate="yes" xml:space="preserve">
          <source>MatchIndices::find_map</source>
          <target state="translated">MatchIndices::find_map</target>
        </trans-unit>
        <trans-unit id="32f41be00b97eddbee56f06e0cc743acc0fa1781" translate="yes" xml:space="preserve">
          <source>MatchIndices::flat_map</source>
          <target state="translated">MatchIndices::flat_map</target>
        </trans-unit>
        <trans-unit id="b44aed96a3a677020d0c5e466d55940493f6a771" translate="yes" xml:space="preserve">
          <source>MatchIndices::flatten</source>
          <target state="translated">MatchIndices::flatten</target>
        </trans-unit>
        <trans-unit id="be9072fce8c1c8b1d608e2a6376a42143199290b" translate="yes" xml:space="preserve">
          <source>MatchIndices::fmt</source>
          <target state="translated">MatchIndices::fmt</target>
        </trans-unit>
        <trans-unit id="59f5816f4df1065953ab5e8e96de08a2f5b8c0af" translate="yes" xml:space="preserve">
          <source>MatchIndices::fold</source>
          <target state="translated">MatchIndices::fold</target>
        </trans-unit>
        <trans-unit id="b31fa990a3df79fb105a5e710721d9f935c9c97b" translate="yes" xml:space="preserve">
          <source>MatchIndices::for_each</source>
          <target state="translated">MatchIndices::for_each</target>
        </trans-unit>
        <trans-unit id="3b2b8851365c2d9263607ae5431ceb335c33430c" translate="yes" xml:space="preserve">
          <source>MatchIndices::from</source>
          <target state="translated">MatchIndices::from</target>
        </trans-unit>
        <trans-unit id="f0cb1d25b686f277b736f73628eadc3976c50e30" translate="yes" xml:space="preserve">
          <source>MatchIndices::fuse</source>
          <target state="translated">MatchIndices::fuse</target>
        </trans-unit>
        <trans-unit id="eb595e7b82cb227143f7d4c2a48acdc7fbae9b38" translate="yes" xml:space="preserve">
          <source>MatchIndices::ge</source>
          <target state="translated">MatchIndices::ge</target>
        </trans-unit>
        <trans-unit id="14c10296be221ae8bcda163e2cac0af0fda7612f" translate="yes" xml:space="preserve">
          <source>MatchIndices::gt</source>
          <target state="translated">MatchIndices::gt</target>
        </trans-unit>
        <trans-unit id="76ec672bbeb01f886568824d13941fb70441a5af" translate="yes" xml:space="preserve">
          <source>MatchIndices::inspect</source>
          <target state="translated">MatchIndices::inspect</target>
        </trans-unit>
        <trans-unit id="1b9f739731ad3a5d5d8f1ba65f8f102b3c42b9e3" translate="yes" xml:space="preserve">
          <source>MatchIndices::into</source>
          <target state="translated">MatchIndices::into</target>
        </trans-unit>
        <trans-unit id="aead44f955338c2dea3080f6f046288cf282389c" translate="yes" xml:space="preserve">
          <source>MatchIndices::into_iter</source>
          <target state="translated">MatchIndices::into_iter</target>
        </trans-unit>
        <trans-unit id="aaca048678ac9cb09d17b6f19dccfa3f8cbd8a68" translate="yes" xml:space="preserve">
          <source>MatchIndices::is_sorted</source>
          <target state="translated">MatchIndices::is_sorted</target>
        </trans-unit>
        <trans-unit id="494ccebc2573bc8ae8e822653128501799daee31" translate="yes" xml:space="preserve">
          <source>MatchIndices::is_sorted_by</source>
          <target state="translated">MatchIndices::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="10969064cde7db281b3bf5ae0d8074ddbe5b2057" translate="yes" xml:space="preserve">
          <source>MatchIndices::is_sorted_by_key</source>
          <target state="translated">MatchIndices::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="b207e7a0e0f65362244472856341f08e7b5f968e" translate="yes" xml:space="preserve">
          <source>MatchIndices::last</source>
          <target state="translated">MatchIndices::last</target>
        </trans-unit>
        <trans-unit id="1f0c1804be730a595793157eee0b5899468a57fe" translate="yes" xml:space="preserve">
          <source>MatchIndices::le</source>
          <target state="translated">MatchIndices::le</target>
        </trans-unit>
        <trans-unit id="714c1040165e446023bdb25a0d7a5b62b88a2827" translate="yes" xml:space="preserve">
          <source>MatchIndices::lt</source>
          <target state="translated">MatchIndices::lt</target>
        </trans-unit>
        <trans-unit id="c2c7317c42e1128c61257980f67d6e48c552e06e" translate="yes" xml:space="preserve">
          <source>MatchIndices::map</source>
          <target state="translated">MatchIndices::map</target>
        </trans-unit>
        <trans-unit id="aee4229db0b745c9bce9e251b061d1df09093478" translate="yes" xml:space="preserve">
          <source>MatchIndices::max</source>
          <target state="translated">MatchIndices::max</target>
        </trans-unit>
        <trans-unit id="fa0986e2f1af3e5f1bc0450062f53561e6c81ddd" translate="yes" xml:space="preserve">
          <source>MatchIndices::max_by</source>
          <target state="translated">MatchIndices::max_by</target>
        </trans-unit>
        <trans-unit id="9f23e12ae79451b15c7c916bd3225e0027c45e8a" translate="yes" xml:space="preserve">
          <source>MatchIndices::max_by_key</source>
          <target state="translated">MatchIndices::max_by_key</target>
        </trans-unit>
        <trans-unit id="2e39560ff99878ffc39fd296cda924c5b2c03981" translate="yes" xml:space="preserve">
          <source>MatchIndices::min</source>
          <target state="translated">MatchIndices::min</target>
        </trans-unit>
        <trans-unit id="92f4db568851f93dab54705599c319ed015f3650" translate="yes" xml:space="preserve">
          <source>MatchIndices::min_by</source>
          <target state="translated">MatchIndices::min_by</target>
        </trans-unit>
        <trans-unit id="65abf9fc033ef993ad3616561604bc6168d2ccbe" translate="yes" xml:space="preserve">
          <source>MatchIndices::min_by_key</source>
          <target state="translated">MatchIndices::min_by_key</target>
        </trans-unit>
        <trans-unit id="07fc13c698bd94933a040c5a662601d3baa2e9fe" translate="yes" xml:space="preserve">
          <source>MatchIndices::ne</source>
          <target state="translated">MatchIndices::ne</target>
        </trans-unit>
        <trans-unit id="310938ae31ecec7a264e7277687593734d44568f" translate="yes" xml:space="preserve">
          <source>MatchIndices::next</source>
          <target state="translated">MatchIndices::next</target>
        </trans-unit>
        <trans-unit id="c31cf9fcd888382ae0ea7f383f70a3b44d3ec196" translate="yes" xml:space="preserve">
          <source>MatchIndices::next_back</source>
          <target state="translated">MatchIndices::next_back</target>
        </trans-unit>
        <trans-unit id="96ef6e6af4fd7d98ef4e1e43a8b441ed1e0c34cc" translate="yes" xml:space="preserve">
          <source>MatchIndices::nth</source>
          <target state="translated">MatchIndices::nth</target>
        </trans-unit>
        <trans-unit id="7d368eba8c884cae30ca39ce974f4608867e96d3" translate="yes" xml:space="preserve">
          <source>MatchIndices::nth_back</source>
          <target state="translated">MatchIndices::nth_back</target>
        </trans-unit>
        <trans-unit id="ab962565ed9fafac9d7ff2b1a2e63f1fd3710d5e" translate="yes" xml:space="preserve">
          <source>MatchIndices::partial_cmp</source>
          <target state="translated">MatchIndices::partial_cmp</target>
        </trans-unit>
        <trans-unit id="57254eb362bbbf8b679504cfd2a2d5e3ec1f0dfa" translate="yes" xml:space="preserve">
          <source>MatchIndices::partition</source>
          <target state="translated">MatchIndices::partition</target>
        </trans-unit>
        <trans-unit id="1e7e9422949dcdc28a75d0836c9aebd087900b8c" translate="yes" xml:space="preserve">
          <source>MatchIndices::peekable</source>
          <target state="translated">MatchIndices::peekable</target>
        </trans-unit>
        <trans-unit id="12be4b9a10cadd68ecaf54663c00f4a34b5f4ecc" translate="yes" xml:space="preserve">
          <source>MatchIndices::position</source>
          <target state="translated">MatchIndices::position</target>
        </trans-unit>
        <trans-unit id="348fe66eb091edea41f27fba3b3e350602376bed" translate="yes" xml:space="preserve">
          <source>MatchIndices::product</source>
          <target state="translated">MatchIndices::product</target>
        </trans-unit>
        <trans-unit id="1963aa77d2e51a1cd8995d3a7783963289df1dfa" translate="yes" xml:space="preserve">
          <source>MatchIndices::rev</source>
          <target state="translated">MatchIndices::rev</target>
        </trans-unit>
        <trans-unit id="0a8c8a9860d2936ff3103a39728b1f7122a37be7" translate="yes" xml:space="preserve">
          <source>MatchIndices::rfind</source>
          <target state="translated">MatchIndices::rfind</target>
        </trans-unit>
        <trans-unit id="f68b89eb92b49e5293f3bc6009baae718e58a00e" translate="yes" xml:space="preserve">
          <source>MatchIndices::rfold</source>
          <target state="translated">MatchIndices::rfold</target>
        </trans-unit>
        <trans-unit id="315b4220cbd8e0c545f07547765f5832a9c86221" translate="yes" xml:space="preserve">
          <source>MatchIndices::rposition</source>
          <target state="translated">MatchIndices::rposition</target>
        </trans-unit>
        <trans-unit id="2ab2384d0375db50c9c56dc9c650d7a18fc9cfca" translate="yes" xml:space="preserve">
          <source>MatchIndices::scan</source>
          <target state="translated">MatchIndices::scan</target>
        </trans-unit>
        <trans-unit id="2b77624dba127ee70a08d8deb81afce43d4451ff" translate="yes" xml:space="preserve">
          <source>MatchIndices::size_hint</source>
          <target state="translated">MatchIndices::size_hint</target>
        </trans-unit>
        <trans-unit id="e11016fd82a8ae6b1cc4431c096024383cd55289" translate="yes" xml:space="preserve">
          <source>MatchIndices::skip</source>
          <target state="translated">MatchIndices::skip</target>
        </trans-unit>
        <trans-unit id="66537225c0c97f9b5ed8f0b1d276134fb031158a" translate="yes" xml:space="preserve">
          <source>MatchIndices::skip_while</source>
          <target state="translated">MatchIndices::skip_while</target>
        </trans-unit>
        <trans-unit id="ea0d009d45cb6d7e6d3bb7b20ed5bcea6fc3295b" translate="yes" xml:space="preserve">
          <source>MatchIndices::step_by</source>
          <target state="translated">MatchIndices::step_by</target>
        </trans-unit>
        <trans-unit id="a281813e58bcc4fe4ecfc5f52608eaa03bea658a" translate="yes" xml:space="preserve">
          <source>MatchIndices::sum</source>
          <target state="translated">MatchIndices::sum</target>
        </trans-unit>
        <trans-unit id="096f4326ed06e3754c6af15c4a48de95d9807c80" translate="yes" xml:space="preserve">
          <source>MatchIndices::take</source>
          <target state="translated">MatchIndices::take</target>
        </trans-unit>
        <trans-unit id="dd509dc4aa10cbf86aa0cedca0fb11bb8d228ba4" translate="yes" xml:space="preserve">
          <source>MatchIndices::take_while</source>
          <target state="translated">MatchIndices::take_while</target>
        </trans-unit>
        <trans-unit id="7ba6b4d532f5fe105f4c17cfa277856ecc93cc91" translate="yes" xml:space="preserve">
          <source>MatchIndices::to_owned</source>
          <target state="translated">MatchIndices::to_owned</target>
        </trans-unit>
        <trans-unit id="d53bd53761ca88b3d4f96c0e1da7e805ecc1a162" translate="yes" xml:space="preserve">
          <source>MatchIndices::try_fold</source>
          <target state="translated">MatchIndices::try_fold</target>
        </trans-unit>
        <trans-unit id="e55d2c69102746bda08c66c4290fa28c373fe4d1" translate="yes" xml:space="preserve">
          <source>MatchIndices::try_for_each</source>
          <target state="translated">MatchIndices::try_for_each</target>
        </trans-unit>
        <trans-unit id="ce0fcc30049ca458576119cb2101ceaf48da4b9a" translate="yes" xml:space="preserve">
          <source>MatchIndices::try_from</source>
          <target state="translated">MatchIndices::try_from</target>
        </trans-unit>
        <trans-unit id="591ae842ca203ad1f776a040ba0ef67aa76a60e1" translate="yes" xml:space="preserve">
          <source>MatchIndices::try_into</source>
          <target state="translated">MatchIndices::try_into</target>
        </trans-unit>
        <trans-unit id="f087c03238f8f86bc47404dfad613d4c63b4e2e0" translate="yes" xml:space="preserve">
          <source>MatchIndices::try_rfold</source>
          <target state="translated">MatchIndices::try_rfold</target>
        </trans-unit>
        <trans-unit id="5ce0bb4829d8b7bbb7369d2b9ae77a51efbf54f6" translate="yes" xml:space="preserve">
          <source>MatchIndices::type_id</source>
          <target state="translated">MatchIndices::type_id</target>
        </trans-unit>
        <trans-unit id="52c4c724db47afc62f2fdf9a014929e13ed5bbba" translate="yes" xml:space="preserve">
          <source>MatchIndices::unzip</source>
          <target state="translated">MatchIndices::unzip</target>
        </trans-unit>
        <trans-unit id="a0fd217e64097f5938d4a8d5755e5fced6da54a0" translate="yes" xml:space="preserve">
          <source>MatchIndices::zip</source>
          <target state="translated">MatchIndices::zip</target>
        </trans-unit>
        <trans-unit id="ee2dbd5d6d82d0833069b07e7dd2848d3bf4d83a" translate="yes" xml:space="preserve">
          <source>Matches</source>
          <target state="translated">Matches</target>
        </trans-unit>
        <trans-unit id="5cc6987e7ed2a2b2e62c548b42089341976209aa" translate="yes" xml:space="preserve">
          <source>Matches Are Exhaustive</source>
          <target state="translated">マッチは網羅的</target>
        </trans-unit>
        <trans-unit id="3a0d932544aa8e3d9374e99e6710f8a85f6c0c7d" translate="yes" xml:space="preserve">
          <source>Matches::all</source>
          <target state="translated">Matches::all</target>
        </trans-unit>
        <trans-unit id="16fb890dd8ce7dfcb5a0e63ba8978c2471f380a3" translate="yes" xml:space="preserve">
          <source>Matches::any</source>
          <target state="translated">Matches::any</target>
        </trans-unit>
        <trans-unit id="5e4f547e5a9c68b04b7459d87531f3392cef812c" translate="yes" xml:space="preserve">
          <source>Matches::borrow</source>
          <target state="translated">Matches::borrow</target>
        </trans-unit>
        <trans-unit id="eb7a33e738fd491a8440d0e486d0da0f4b7357df" translate="yes" xml:space="preserve">
          <source>Matches::borrow_mut</source>
          <target state="translated">Matches::borrow_mut</target>
        </trans-unit>
        <trans-unit id="442cbd680df62a68364c435a1bb0ae46b79a7eac" translate="yes" xml:space="preserve">
          <source>Matches::by_ref</source>
          <target state="translated">Matches::by_ref</target>
        </trans-unit>
        <trans-unit id="20dfc02cc86de67d6fdaf58ce4461b2fd5815f11" translate="yes" xml:space="preserve">
          <source>Matches::chain</source>
          <target state="translated">Matches::chain</target>
        </trans-unit>
        <trans-unit id="e26629789994660e4224d4cebf44f28566fa8954" translate="yes" xml:space="preserve">
          <source>Matches::clone</source>
          <target state="translated">Matches::clone</target>
        </trans-unit>
        <trans-unit id="4c01d6dc1417a885eff4cea68ae3c49c30339c23" translate="yes" xml:space="preserve">
          <source>Matches::clone_from</source>
          <target state="translated">Matches::clone_from</target>
        </trans-unit>
        <trans-unit id="908070155acaacd57ea50bc0c693a8d4d38e9084" translate="yes" xml:space="preserve">
          <source>Matches::clone_into</source>
          <target state="translated">Matches::clone_into</target>
        </trans-unit>
        <trans-unit id="f1039a5bd9dd87408160a7bc89f5aee247baed0e" translate="yes" xml:space="preserve">
          <source>Matches::cloned</source>
          <target state="translated">Matches::cloned</target>
        </trans-unit>
        <trans-unit id="19c9fd0279baa24b411e3947534ec46f6b80b29b" translate="yes" xml:space="preserve">
          <source>Matches::cmp</source>
          <target state="translated">Matches::cmp</target>
        </trans-unit>
        <trans-unit id="b28a79700065ba26a75e2535566b0111e766961d" translate="yes" xml:space="preserve">
          <source>Matches::collect</source>
          <target state="translated">Matches::collect</target>
        </trans-unit>
        <trans-unit id="23a42c659f214505d85c65acf90795a53cbbd9c7" translate="yes" xml:space="preserve">
          <source>Matches::copied</source>
          <target state="translated">Matches::copied</target>
        </trans-unit>
        <trans-unit id="8ddc41164c9c903c75ffabc4216778ab2b92a07b" translate="yes" xml:space="preserve">
          <source>Matches::count</source>
          <target state="translated">Matches::count</target>
        </trans-unit>
        <trans-unit id="c5bb9e45a2d04384d39504bf8fed06af4eb949f4" translate="yes" xml:space="preserve">
          <source>Matches::cycle</source>
          <target state="translated">Matches::cycle</target>
        </trans-unit>
        <trans-unit id="25d821be5ab0c31669a0c65bee52e76ca6e2dfda" translate="yes" xml:space="preserve">
          <source>Matches::enumerate</source>
          <target state="translated">Matches::enumerate</target>
        </trans-unit>
        <trans-unit id="8fe87f5ab4c69eee8b3e42d4ef7d3f0bc9b6bd46" translate="yes" xml:space="preserve">
          <source>Matches::eq</source>
          <target state="translated">Matches::eq</target>
        </trans-unit>
        <trans-unit id="bd6c3e4a09141a6b1687bc6edcbc4725f14d6e9b" translate="yes" xml:space="preserve">
          <source>Matches::filter</source>
          <target state="translated">Matches::filter</target>
        </trans-unit>
        <trans-unit id="f28215c08cf52a08c1113104ff10156614b2d4dc" translate="yes" xml:space="preserve">
          <source>Matches::filter_map</source>
          <target state="translated">Matches::filter_map</target>
        </trans-unit>
        <trans-unit id="7e979d935feb5504226bf8fd99bc7ddddbae73ed" translate="yes" xml:space="preserve">
          <source>Matches::find</source>
          <target state="translated">Matches::find</target>
        </trans-unit>
        <trans-unit id="f417888fb6c581ab01ae22da17789e08d5d30a43" translate="yes" xml:space="preserve">
          <source>Matches::find_map</source>
          <target state="translated">Matches::find_map</target>
        </trans-unit>
        <trans-unit id="aac48d806deb17c5fb6f87226315aa3b6f58319d" translate="yes" xml:space="preserve">
          <source>Matches::flat_map</source>
          <target state="translated">Matches::flat_map</target>
        </trans-unit>
        <trans-unit id="0721b37fe4fd2773176992136934d02d73295f86" translate="yes" xml:space="preserve">
          <source>Matches::flatten</source>
          <target state="translated">Matches::flatten</target>
        </trans-unit>
        <trans-unit id="a82571e1d46a7c4bd3c2adc55d5ec1e13ef469b7" translate="yes" xml:space="preserve">
          <source>Matches::fmt</source>
          <target state="translated">Matches::fmt</target>
        </trans-unit>
        <trans-unit id="81d2cf00372eb5d8702e03ec8c630dd8ec00c4bb" translate="yes" xml:space="preserve">
          <source>Matches::fold</source>
          <target state="translated">Matches::fold</target>
        </trans-unit>
        <trans-unit id="1fbe90aeae0d2764bf797ea002efc575a587c806" translate="yes" xml:space="preserve">
          <source>Matches::for_each</source>
          <target state="translated">Matches::for_each</target>
        </trans-unit>
        <trans-unit id="b935cf9ba4ffa6f06d97d64621e3d2de0895f4ba" translate="yes" xml:space="preserve">
          <source>Matches::from</source>
          <target state="translated">Matches::from</target>
        </trans-unit>
        <trans-unit id="4d32cbce51a48f695b8fea902b09c284a29cde2e" translate="yes" xml:space="preserve">
          <source>Matches::fuse</source>
          <target state="translated">Matches::fuse</target>
        </trans-unit>
        <trans-unit id="9b2e7ede1acc6f67900d4a4d3ab2c98e1aaad7f8" translate="yes" xml:space="preserve">
          <source>Matches::ge</source>
          <target state="translated">Matches::ge</target>
        </trans-unit>
        <trans-unit id="31fe4a3fccced0fe0c71960e54c70b3121c12d76" translate="yes" xml:space="preserve">
          <source>Matches::gt</source>
          <target state="translated">Matches::gt</target>
        </trans-unit>
        <trans-unit id="9a91adab19d2f651b421bcb0b782f148955b87df" translate="yes" xml:space="preserve">
          <source>Matches::inspect</source>
          <target state="translated">Matches::inspect</target>
        </trans-unit>
        <trans-unit id="cdaa2f6866b152ff52f54f63d328297e95ffefc9" translate="yes" xml:space="preserve">
          <source>Matches::into</source>
          <target state="translated">Matches::into</target>
        </trans-unit>
        <trans-unit id="fbfdb405e53ca49b4f0a6aa96e0707e0b10af640" translate="yes" xml:space="preserve">
          <source>Matches::into_iter</source>
          <target state="translated">Matches::into_iter</target>
        </trans-unit>
        <trans-unit id="b86a1a91695e60a826f9cbcbe7744cdd9377aa24" translate="yes" xml:space="preserve">
          <source>Matches::is_sorted</source>
          <target state="translated">Matches::is_sorted</target>
        </trans-unit>
        <trans-unit id="88b5d9a696f322ca51982376a518e086721e6020" translate="yes" xml:space="preserve">
          <source>Matches::is_sorted_by</source>
          <target state="translated">Matches::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="3af6013a8cdc222cc7dcf468759ca7a196ae2a35" translate="yes" xml:space="preserve">
          <source>Matches::is_sorted_by_key</source>
          <target state="translated">Matches::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="19db6decfee88589fa49e71164a6c424bfab43c4" translate="yes" xml:space="preserve">
          <source>Matches::last</source>
          <target state="translated">Matches::last</target>
        </trans-unit>
        <trans-unit id="2b3c79eaacf0da1aceb94340410e1bf3e66ed35d" translate="yes" xml:space="preserve">
          <source>Matches::le</source>
          <target state="translated">Matches::le</target>
        </trans-unit>
        <trans-unit id="dc89550af976d29f1cd838ad118281c1c59ff27c" translate="yes" xml:space="preserve">
          <source>Matches::lt</source>
          <target state="translated">Matches::lt</target>
        </trans-unit>
        <trans-unit id="82f4602ea6fb73360443d9745b09df18459d58b6" translate="yes" xml:space="preserve">
          <source>Matches::map</source>
          <target state="translated">Matches::map</target>
        </trans-unit>
        <trans-unit id="c8d9d7e742cfadc7e42da43df1666f94b32c56dd" translate="yes" xml:space="preserve">
          <source>Matches::max</source>
          <target state="translated">Matches::max</target>
        </trans-unit>
        <trans-unit id="381ae5d9564473d6e8dd9a2749230d133255ad00" translate="yes" xml:space="preserve">
          <source>Matches::max_by</source>
          <target state="translated">Matches::max_by</target>
        </trans-unit>
        <trans-unit id="eb15db6391ca1dcfb4eb7997be38ea7ac31e86d5" translate="yes" xml:space="preserve">
          <source>Matches::max_by_key</source>
          <target state="translated">Matches::max_by_key</target>
        </trans-unit>
        <trans-unit id="2a7f00fe010cb33ba0a91dd9c43d06d20c3144c3" translate="yes" xml:space="preserve">
          <source>Matches::min</source>
          <target state="translated">Matches::min</target>
        </trans-unit>
        <trans-unit id="0511629eee2ebb309e8d692bfafa7146e73ab99a" translate="yes" xml:space="preserve">
          <source>Matches::min_by</source>
          <target state="translated">Matches::min_by</target>
        </trans-unit>
        <trans-unit id="92b4e0376aa22e37c9b2a710dfa2ea1a89fb5ad8" translate="yes" xml:space="preserve">
          <source>Matches::min_by_key</source>
          <target state="translated">Matches::min_by_key</target>
        </trans-unit>
        <trans-unit id="d1e00a92c27dc4a08ef517bcbb3c16d1d7c73fa2" translate="yes" xml:space="preserve">
          <source>Matches::ne</source>
          <target state="translated">Matches::ne</target>
        </trans-unit>
        <trans-unit id="80100501d955233d0aad678a7a0522b50d083d41" translate="yes" xml:space="preserve">
          <source>Matches::next</source>
          <target state="translated">Matches::next</target>
        </trans-unit>
        <trans-unit id="f87ed28aa3c643fcff8c2a323261a5ab3c47af41" translate="yes" xml:space="preserve">
          <source>Matches::next_back</source>
          <target state="translated">Matches::next_back</target>
        </trans-unit>
        <trans-unit id="06e8a5ed4403652966532401d85cecb2a059ab86" translate="yes" xml:space="preserve">
          <source>Matches::nth</source>
          <target state="translated">Matches::nth</target>
        </trans-unit>
        <trans-unit id="2d97ef2f69ba88eadeb3c0a353560d47aa8d892d" translate="yes" xml:space="preserve">
          <source>Matches::nth_back</source>
          <target state="translated">Matches::nth_back</target>
        </trans-unit>
        <trans-unit id="1e59a6c73ae29a25bdcf2a99e065e71f8bb68764" translate="yes" xml:space="preserve">
          <source>Matches::partial_cmp</source>
          <target state="translated">Matches::partial_cmp</target>
        </trans-unit>
        <trans-unit id="10bc67bf25acda7fdf7709fb020ef7093757f048" translate="yes" xml:space="preserve">
          <source>Matches::partition</source>
          <target state="translated">Matches::partition</target>
        </trans-unit>
        <trans-unit id="ca97a164faa6e48e7f0155c295145750469b483d" translate="yes" xml:space="preserve">
          <source>Matches::peekable</source>
          <target state="translated">Matches::peekable</target>
        </trans-unit>
        <trans-unit id="cb6e62672281dd6247bc9a5dfdecde19ffbc8916" translate="yes" xml:space="preserve">
          <source>Matches::position</source>
          <target state="translated">Matches::position</target>
        </trans-unit>
        <trans-unit id="8541181e1bc4494e2d6b28d4f7775de0da6559c4" translate="yes" xml:space="preserve">
          <source>Matches::product</source>
          <target state="translated">Matches::product</target>
        </trans-unit>
        <trans-unit id="7aa9e259d1203fa5740a53d399d7183277702354" translate="yes" xml:space="preserve">
          <source>Matches::rev</source>
          <target state="translated">Matches::rev</target>
        </trans-unit>
        <trans-unit id="e02709763e2207e61e4d933e858c99b7a28d8bcb" translate="yes" xml:space="preserve">
          <source>Matches::rfind</source>
          <target state="translated">Matches::rfind</target>
        </trans-unit>
        <trans-unit id="a9cc66b976865799bd4716ff397f93b4a843b5ae" translate="yes" xml:space="preserve">
          <source>Matches::rfold</source>
          <target state="translated">Matches::rfold</target>
        </trans-unit>
        <trans-unit id="04c297da099729a5b43001f9d0063ee6a901e844" translate="yes" xml:space="preserve">
          <source>Matches::rposition</source>
          <target state="translated">Matches::rposition</target>
        </trans-unit>
        <trans-unit id="91a658d8a0294b7bd18e5d0570dba1b46dc2ddb4" translate="yes" xml:space="preserve">
          <source>Matches::scan</source>
          <target state="translated">Matches::scan</target>
        </trans-unit>
        <trans-unit id="bff98e95d244b87dfd471f3aa1b0b9776052e73a" translate="yes" xml:space="preserve">
          <source>Matches::size_hint</source>
          <target state="translated">Matches::size_hint</target>
        </trans-unit>
        <trans-unit id="ea769d36db0ecdf9a449becbbea0e918770b1961" translate="yes" xml:space="preserve">
          <source>Matches::skip</source>
          <target state="translated">Matches::skip</target>
        </trans-unit>
        <trans-unit id="96627df75057a48d2e0d9c40c523b84e3b33c7af" translate="yes" xml:space="preserve">
          <source>Matches::skip_while</source>
          <target state="translated">Matches::skip_while</target>
        </trans-unit>
        <trans-unit id="4ca4138e4a3268a198c5cdc5a737a6380795549e" translate="yes" xml:space="preserve">
          <source>Matches::step_by</source>
          <target state="translated">Matches::step_by</target>
        </trans-unit>
        <trans-unit id="721b319e30617315060e55781f7380c841c6ace9" translate="yes" xml:space="preserve">
          <source>Matches::sum</source>
          <target state="translated">Matches::sum</target>
        </trans-unit>
        <trans-unit id="f9e758615e71ff38d6f7a5c65eecde2590e23098" translate="yes" xml:space="preserve">
          <source>Matches::take</source>
          <target state="translated">Matches::take</target>
        </trans-unit>
        <trans-unit id="af24995f9c4fd5dd2457e65743d9a60e9e9ffcde" translate="yes" xml:space="preserve">
          <source>Matches::take_while</source>
          <target state="translated">Matches::take_while</target>
        </trans-unit>
        <trans-unit id="1565bfd09bd2f23c0095b4606ab9e834a51712c8" translate="yes" xml:space="preserve">
          <source>Matches::to_owned</source>
          <target state="translated">Matches::to_owned</target>
        </trans-unit>
        <trans-unit id="50cf72084a8dfa7ad581505a5ddcd33faf655fa9" translate="yes" xml:space="preserve">
          <source>Matches::try_fold</source>
          <target state="translated">Matches::try_fold</target>
        </trans-unit>
        <trans-unit id="549e63df22456e9fa5caee460202dea317cd527f" translate="yes" xml:space="preserve">
          <source>Matches::try_for_each</source>
          <target state="translated">Matches::try_for_each</target>
        </trans-unit>
        <trans-unit id="91833652262591b5f00ea537d289de5b67c4c727" translate="yes" xml:space="preserve">
          <source>Matches::try_from</source>
          <target state="translated">Matches::try_from</target>
        </trans-unit>
        <trans-unit id="c0c530573a1f2dab2a0a124a457144714f1af70b" translate="yes" xml:space="preserve">
          <source>Matches::try_into</source>
          <target state="translated">Matches::try_into</target>
        </trans-unit>
        <trans-unit id="1d6807a096cceb3f086a98b72caed6864b350d48" translate="yes" xml:space="preserve">
          <source>Matches::try_rfold</source>
          <target state="translated">Matches::try_rfold</target>
        </trans-unit>
        <trans-unit id="4ed84d268d517902f1ee835907ba616731437e78" translate="yes" xml:space="preserve">
          <source>Matches::type_id</source>
          <target state="translated">Matches::type_id</target>
        </trans-unit>
        <trans-unit id="82df0ef498c0500087358c2ad708f2591ff13a74" translate="yes" xml:space="preserve">
          <source>Matches::unzip</source>
          <target state="translated">Matches::unzip</target>
        </trans-unit>
        <trans-unit id="4f51ed1bb8aedce5983b27a82ba200a62553b0de" translate="yes" xml:space="preserve">
          <source>Matches::zip</source>
          <target state="translated">Matches::zip</target>
        </trans-unit>
        <trans-unit id="50c7753425f81366ad955ad648ef1402bbd0bdcd" translate="yes" xml:space="preserve">
          <source>Matching Literals</source>
          <target state="translated">マッチングリテラル</target>
        </trans-unit>
        <trans-unit id="a4b76dc421c21dad908aceac8ef24107ed076e94" translate="yes" xml:space="preserve">
          <source>Matching Named Variables</source>
          <target state="translated">名前付き変数のマッチング</target>
        </trans-unit>
        <trans-unit id="116c1a129c8dd758e30ed686c4946011c26b8dc1" translate="yes" xml:space="preserve">
          <source>Matching Ranges of Values with &lt;code id=&quot;matching-ranges-of-values-with-&quot;&gt;...&lt;/code&gt;</source>
          <target state="translated">値の範囲を &lt;code id=&quot;matching-ranges-of-values-with-&quot;&gt;...&lt;/code&gt; と一致させる</target>
        </trans-unit>
        <trans-unit id="85dbe67c3ce6228be02004258ed55391b9cbf81e" translate="yes" xml:space="preserve">
          <source>Matching Ranges of Values with &lt;code id=&quot;matching-ranges-of-values-with-&quot;&gt;..=&lt;/code&gt;</source>
          <target state="translated">値の範囲を &lt;code id=&quot;matching-ranges-of-values-with-&quot;&gt;..=&lt;/code&gt; と一致させる</target>
        </trans-unit>
        <trans-unit id="d07b8ccde1bae5f429be81f6528205564b8930b4" translate="yes" xml:space="preserve">
          <source>Matching on Different Errors</source>
          <target state="translated">異なるエラーでのマッチング</target>
        </trans-unit>
        <trans-unit id="3ac1a688c9f9a53fc22834e447e836a1464d2897" translate="yes" xml:space="preserve">
          <source>Matching on unions</source>
          <target state="translated">ユニオンでのマッチング</target>
        </trans-unit>
        <trans-unit id="5c23b58f42105349394b72c44a9e0c8e30cfb1c7" translate="yes" xml:space="preserve">
          <source>Matching with &lt;code id=&quot;matching-with-optiont&quot;&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code id=&quot;matching-with-optiont&quot;&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; とのマッチング</target>
        </trans-unit>
        <trans-unit id="6746eb65af6871e0e05e248c440e5aefea8b6fc2" translate="yes" xml:space="preserve">
          <source>Matching with the wrong number of fields has no sensible interpretation:</source>
          <target state="translated">間違ったフィールド数でマッチングしても、良識的な解釈はできません。</target>
        </trans-unit>
        <trans-unit id="e962ad60673258d2f89e18021a55117503f9d972" translate="yes" xml:space="preserve">
          <source>Mathematically significant numbers are provided in the &lt;code&gt;consts&lt;/code&gt; sub-module.</source>
          <target state="translated">数学的に有意な数値は、 &lt;code&gt;consts&lt;/code&gt; サブモジュールで提供されます。</target>
        </trans-unit>
        <trans-unit id="a8df2fec28d8948a0326722029c7492b88ee4fbe" translate="yes" xml:space="preserve">
          <source>Maximum</source>
          <target state="translated">Maximum</target>
        </trans-unit>
        <trans-unit id="24ecf2527de68fa30e51892809349a8c5974beff" translate="yes" xml:space="preserve">
          <source>Maximum possible power of 10 exponent.</source>
          <target state="translated">10の指数の最大可能なパワー。</target>
        </trans-unit>
        <trans-unit id="9b80b0220e2a1cfba556bc68a3ae18dd04ca555f" translate="yes" xml:space="preserve">
          <source>Maximum possible power of 10 exponent. Use &lt;a href=&quot;../primitive.f32#associatedconstant.MAX_10_EXP&quot;&gt;&lt;code&gt;f32::MAX_10_EXP&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">10の指数の可能な最大パワー。代わりに&lt;a href=&quot;../primitive.f32#associatedconstant.MAX_10_EXP&quot;&gt; &lt;code&gt;f32::MAX_10_EXP&lt;/code&gt; &lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="14a9a3e421ae4adf1ac38d3d026e245423621fd6" translate="yes" xml:space="preserve">
          <source>Maximum possible power of 10 exponent. Use &lt;a href=&quot;../primitive.f64#associatedconstant.MAX_10_EXP&quot;&gt;&lt;code&gt;f64::MAX_10_EXP&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">10の指数の可能な最大パワー。代わりに&lt;a href=&quot;../primitive.f64#associatedconstant.MAX_10_EXP&quot;&gt; &lt;code&gt;f64::MAX_10_EXP&lt;/code&gt; &lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="86392c8e5a7e87515616425adb01dd9226d9dffe" translate="yes" xml:space="preserve">
          <source>Maximum possible power of 2 exponent.</source>
          <target state="translated">2指数の最大可能乗。</target>
        </trans-unit>
        <trans-unit id="9aa9636d9f2be0da47be065e0c7d353d7567c7eb" translate="yes" xml:space="preserve">
          <source>Maximum possible power of 2 exponent. Use &lt;a href=&quot;../primitive.f32#associatedconstant.MAX_EXP&quot;&gt;&lt;code&gt;f32::MAX_EXP&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">2指数の可能な最大パワー。代わりに&lt;a href=&quot;../primitive.f32#associatedconstant.MAX_EXP&quot;&gt; &lt;code&gt;f32::MAX_EXP&lt;/code&gt; &lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="b256bdd9a7e1cdc07523395c526401d41fbaa024" translate="yes" xml:space="preserve">
          <source>Maximum possible power of 2 exponent. Use &lt;a href=&quot;../primitive.f64#associatedconstant.MAX_EXP&quot;&gt;&lt;code&gt;f64::MAX_EXP&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">2指数の可能な最大パワー。代わりに&lt;a href=&quot;../primitive.f64#associatedconstant.MAX_EXP&quot;&gt; &lt;code&gt;f64::MAX_EXP&lt;/code&gt; &lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="766be5e052191ff8eba5c2e3f2b1a1b838f4d50a" translate="yes" xml:space="preserve">
          <source>Maximum with the current value using a signed comparison.</source>
          <target state="translated">符号付き比較を使用して、現在の値を最大値とします。</target>
        </trans-unit>
        <trans-unit id="9351d4078eb47c9b5544bef45a78aaa02d855e4e" translate="yes" xml:space="preserve">
          <source>Maximum with the current value using an unsigned comparison.</source>
          <target state="translated">符号なし比較を使用して、現在の値で最大値を指定します。</target>
        </trans-unit>
        <trans-unit id="f7750430a3882e92eb8337af201fa180c2fbb566" translate="yes" xml:space="preserve">
          <source>Maximum with the current value.</source>
          <target state="translated">現在の値で最大。</target>
        </trans-unit>
        <trans-unit id="f19c24c7e8b87604106489a66b28772b598f6b35" translate="yes" xml:space="preserve">
          <source>Maybe you just misspelled the lint name or the lint doesn't exist anymore. Either way, try to update/remove it in order to fix the error.</source>
          <target state="translated">lint の名前のスペルを間違えただけかもしれませんし、lint が存在しなくなっただけかもしれません。いずれにしても、エラーを修正するために更新/削除してみてください。</target>
        </trans-unit>
        <trans-unit id="22c5a738f61d1560d21875d83c8951314a7f1948" translate="yes" xml:space="preserve">
          <source>MaybeUninit</source>
          <target state="translated">MaybeUninit</target>
        </trans-unit>
        <trans-unit id="a44ab7dbe0cde09757fb1b4dd939c97aee493195" translate="yes" xml:space="preserve">
          <source>MaybeUninit::as_mut_ptr</source>
          <target state="translated">MaybeUninit::as_mut_ptr</target>
        </trans-unit>
        <trans-unit id="2e8f9abe8f0c08c924ac4559ea36a2868edf193c" translate="yes" xml:space="preserve">
          <source>MaybeUninit::as_ptr</source>
          <target state="translated">MaybeUninit::as_ptr</target>
        </trans-unit>
        <trans-unit id="e1dd151013280c4f30271f0f104514aec380c95c" translate="yes" xml:space="preserve">
          <source>MaybeUninit::assume_init</source>
          <target state="translated">MaybeUninit::assume_init</target>
        </trans-unit>
        <trans-unit id="b1d1838a31c2c75fa59b89a7ab49435bba63a56d" translate="yes" xml:space="preserve">
          <source>MaybeUninit::borrow</source>
          <target state="translated">MaybeUninit::borrow</target>
        </trans-unit>
        <trans-unit id="a4bd23ea05be7819a23ca240934851baaf368f66" translate="yes" xml:space="preserve">
          <source>MaybeUninit::borrow_mut</source>
          <target state="translated">MaybeUninit::borrow_mut</target>
        </trans-unit>
        <trans-unit id="00da197228ec4cbebb9a48bf7d0d5d3897d0f688" translate="yes" xml:space="preserve">
          <source>MaybeUninit::clone</source>
          <target state="translated">MaybeUninit::clone</target>
        </trans-unit>
        <trans-unit id="796164cb8ea5a1c4d0c3e89dc0dfc3140435eea9" translate="yes" xml:space="preserve">
          <source>MaybeUninit::clone_from</source>
          <target state="translated">MaybeUninit::clone_from</target>
        </trans-unit>
        <trans-unit id="19917792b095268faeb706604925e2b6e4601cdc" translate="yes" xml:space="preserve">
          <source>MaybeUninit::clone_into</source>
          <target state="translated">MaybeUninit::clone_into</target>
        </trans-unit>
        <trans-unit id="6aaeccae7a8603cf84871ff7d9f6d72bbae00843" translate="yes" xml:space="preserve">
          <source>MaybeUninit::first_ptr</source>
          <target state="translated">MaybeUninit::first_ptr</target>
        </trans-unit>
        <trans-unit id="b2731997cc044a29850216c34ed7b2af6f757272" translate="yes" xml:space="preserve">
          <source>MaybeUninit::first_ptr_mut</source>
          <target state="translated">MaybeUninit::first_ptr_mut</target>
        </trans-unit>
        <trans-unit id="ee80e55e0462f555d62ecf479729778c2792940a" translate="yes" xml:space="preserve">
          <source>MaybeUninit::from</source>
          <target state="translated">MaybeUninit::from</target>
        </trans-unit>
        <trans-unit id="68ed3d2ac72b021d64280ccfce1d512f796b7866" translate="yes" xml:space="preserve">
          <source>MaybeUninit::get_mut</source>
          <target state="translated">MaybeUninit::get_mut</target>
        </trans-unit>
        <trans-unit id="f1a2a1267ae897ec9afd26b0801711626f42622c" translate="yes" xml:space="preserve">
          <source>MaybeUninit::get_ref</source>
          <target state="translated">MaybeUninit::get_ref</target>
        </trans-unit>
        <trans-unit id="b7ce4c445d543adc399f6af5ed234119732fcd7d" translate="yes" xml:space="preserve">
          <source>MaybeUninit::into</source>
          <target state="translated">MaybeUninit::into</target>
        </trans-unit>
        <trans-unit id="bdcb34ac76eeb0b6ab305cf39705377f28d916a3" translate="yes" xml:space="preserve">
          <source>MaybeUninit::new</source>
          <target state="translated">MaybeUninit::new</target>
        </trans-unit>
        <trans-unit id="7134280ee1359eff29bec32e4670d803b9181af9" translate="yes" xml:space="preserve">
          <source>MaybeUninit::read</source>
          <target state="translated">MaybeUninit::read</target>
        </trans-unit>
        <trans-unit id="a887e0697a801d5760dd067e4907b33cac927028" translate="yes" xml:space="preserve">
          <source>MaybeUninit::to_owned</source>
          <target state="translated">MaybeUninit::to_owned</target>
        </trans-unit>
        <trans-unit id="7dc9f792640725a6cecb6f81a4e42e83461a6abe" translate="yes" xml:space="preserve">
          <source>MaybeUninit::try_from</source>
          <target state="translated">MaybeUninit::try_from</target>
        </trans-unit>
        <trans-unit id="8b12b56b9f617d5d7f3945aef0bc3328d56d0391" translate="yes" xml:space="preserve">
          <source>MaybeUninit::try_into</source>
          <target state="translated">MaybeUninit::try_into</target>
        </trans-unit>
        <trans-unit id="5e34c0cc0c05d1c11d92d758dfd9eb546ac718be" translate="yes" xml:space="preserve">
          <source>MaybeUninit::type_id</source>
          <target state="translated">MaybeUninit::type_id</target>
        </trans-unit>
        <trans-unit id="6d196fc5db7278a9d9758ce0ec7ef03ec5379e9c" translate="yes" xml:space="preserve">
          <source>MaybeUninit::uninit</source>
          <target state="translated">MaybeUninit::uninit</target>
        </trans-unit>
        <trans-unit id="2f8fd2d121ed93f168b51c2d802af7d29e8bc671" translate="yes" xml:space="preserve">
          <source>MaybeUninit::write</source>
          <target state="translated">MaybeUninit::write</target>
        </trans-unit>
        <trans-unit id="be630dd4779c289571757af988e536f8c58f8978" translate="yes" xml:space="preserve">
          <source>MaybeUninit::zeroed</source>
          <target state="translated">MaybeUninit::zeroed</target>
        </trans-unit>
        <trans-unit id="19cd7d185cfd95a703e62d43597e9ae28e0646e5" translate="yes" xml:space="preserve">
          <source>Meaning</source>
          <target state="translated">Meaning</target>
        </trans-unit>
        <trans-unit id="d880b0db33396f09e94ad458e37bf499710140d0" translate="yes" xml:space="preserve">
          <source>Member access</source>
          <target state="translated">会員アクセス</target>
        </trans-unit>
        <trans-unit id="711aeb171229297561befc7fcf7c64be1c7bad67" translate="yes" xml:space="preserve">
          <source>Members of the Rust community have made many packages available at &lt;a href=&quot;https://crates.io/&quot;&gt;crates.io&lt;/a&gt;, and pulling any of them into your package involves these same steps: listing them in your package&amp;rsquo;s &lt;em&gt;Cargo.toml&lt;/em&gt; file and using &lt;code&gt;use&lt;/code&gt; to bring items from their crates into scope.</source>
          <target state="translated">Rustコミュニティのメンバーは&lt;a href=&quot;https://crates.io/&quot;&gt;crates.io&lt;/a&gt;で多くのパッケージを利用できるようにしており、それらのいずれかをパッケージに&lt;em&gt;取り込むに&lt;/em&gt;は、パッケージの&lt;em&gt;Cargo.toml&lt;/em&gt;ファイルにそれらをリストし、&lt;em&gt;use&lt;/em&gt;を &lt;code&gt;use&lt;/code&gt; してクレートからアイテムをスコープに&lt;em&gt;取り込む&lt;/em&gt;という同じ手順が必要です。</target>
        </trans-unit>
        <trans-unit id="146533db3fc38f7b706b77ba72e7df0357d2e39f" translate="yes" xml:space="preserve">
          <source>Members of the Rust community have made many packages available at &lt;a href=&quot;https://crates.io/&quot;&gt;crates.io&lt;/a&gt;, and pulling any of them into your package involves these same steps: listing them in your package&amp;rsquo;s &lt;em&gt;Cargo.toml&lt;/em&gt; file and using &lt;code&gt;use&lt;/code&gt; to bring items into scope.</source>
          <target state="translated">Rustコミュニティのメンバーは、多数のパッケージを&lt;a href=&quot;https://crates.io/&quot;&gt;crates.io&lt;/a&gt;で利用できるようにしており、それらのいずれかをパッケージに&lt;em&gt;取り込むに&lt;/em&gt;は、パッケージの&lt;em&gt;Cargo.toml&lt;/em&gt;ファイルにパッケージをリストし、&lt;em&gt;use&lt;/em&gt;を &lt;code&gt;use&lt;/code&gt; してアイテムをスコープに入れるという同じ手順が含まれます。</target>
        </trans-unit>
        <trans-unit id="2d6f4ca6e81d6132b393ed23c50a82522bb4eb19" translate="yes" xml:space="preserve">
          <source>Memory accesses will never be reordered across this barrier by the compiler, but no instructions will be emitted for it. This is appropriate for operations on the same thread that may be preempted, such as when interacting with signal handlers.</source>
          <target state="translated">メモリアクセスがコンパイラによってこのバリアを越えて並び替えられることはありませんが、そのために命令が出ることはありません。これは、シグナルハンドラと相互作用する場合など、先取りされる可能性のある同じスレッド上の操作に適しています。</target>
        </trans-unit>
        <trans-unit id="b6bee5018a7e72cff7d1df71077553bda7588c2a" translate="yes" xml:space="preserve">
          <source>Memory allocation APIs</source>
          <target state="translated">メモリ割り当てAPI</target>
        </trans-unit>
        <trans-unit id="9be755c16f3fbdbf43ec9463cafab25c253fea10" translate="yes" xml:space="preserve">
          <source>Memory allocation and lifetime</source>
          <target state="translated">メモリの割り当てと寿命</target>
        </trans-unit>
        <trans-unit id="78f88c2700a9711b2514c20dff02f5f5982c250e" translate="yes" xml:space="preserve">
          <source>Memory and Allocation</source>
          <target state="translated">メモリと割り当て</target>
        </trans-unit>
        <trans-unit id="bf742dc53a39d7b88626c322f9ed405b349b0ec4" translate="yes" xml:space="preserve">
          <source>Memory blocks returned from an allocator must point to valid memory and retain their validity until the instance and all of its clones are dropped,</source>
          <target state="translated">アロケータから返されたメモリブロックは有効なメモリを指していなければならず、インスタンスとそのクローンのすべてが削除されるまでその有効性を保持しなければなりません。</target>
        </trans-unit>
        <trans-unit id="ec9a362f08612fb77b9f0b713369a332f48651a9" translate="yes" xml:space="preserve">
          <source>Memory can be &quot;invalidated&quot; by deallocation, but also by replacing a &lt;a href=&quot;../option/enum.option#variant.Some&quot;&gt;&lt;code&gt;Some(v)&lt;/code&gt;&lt;/a&gt; by &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, or calling &lt;a href=&quot;../vec/struct.vec#method.set_len&quot;&gt;&lt;code&gt;Vec::set_len&lt;/code&gt;&lt;/a&gt; to &quot;kill&quot; some elements off of a vector. It can be repurposed by using &lt;a href=&quot;../ptr/fn.write&quot;&gt;&lt;code&gt;ptr::write&lt;/code&gt;&lt;/a&gt; to overwrite it without calling the destructor first. None of this is allowed for pinned data without calling &lt;a href=&quot;../ops/trait.drop#tymethod.drop&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">メモリは、割り当て解除によって「無効化」できますが、&lt;a href=&quot;../option/enum.option#variant.Some&quot;&gt; &lt;code&gt;Some(v)&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;に置き換えるか、&lt;a href=&quot;../vec/struct.vec#method.set_len&quot;&gt; &lt;code&gt;Vec::set_len&lt;/code&gt; &lt;/a&gt;を呼び出してベクトルからいくつかの要素を「強制終了」することもできます。&lt;a href=&quot;../ptr/fn.write&quot;&gt; &lt;code&gt;ptr::write&lt;/code&gt; &lt;/a&gt;を使用して、最初にデストラクタを呼び出さずに上書きすることで、再利用できます。これは、&lt;a href=&quot;../ops/trait.drop#tymethod.drop&quot;&gt; &lt;code&gt;drop&lt;/code&gt; &lt;/a&gt;を呼び出さずに固定されたデータには許可されません。</target>
        </trans-unit>
        <trans-unit id="6537b839fc70c4da7309dad24d6cd1a0b7bfff39" translate="yes" xml:space="preserve">
          <source>Memory fitting</source>
          <target state="translated">メモリーフィッティング</target>
        </trans-unit>
        <trans-unit id="475bc2651561a3c3ff5fe7691308be8b459d93e5" translate="yes" xml:space="preserve">
          <source>Memory layout</source>
          <target state="translated">メモリレイアウト</target>
        </trans-unit>
        <trans-unit id="ab97ff6f2dba5d3f1cd5aeb9b43d517c7ff39baa" translate="yes" xml:space="preserve">
          <source>Memory model</source>
          <target state="translated">メモリモデル</target>
        </trans-unit>
        <trans-unit id="64f050cf8ce861fb451d8ebe7ed180d3e0b08ad3" translate="yes" xml:space="preserve">
          <source>Memory orderings specify the way atomic operations synchronize memory. In its weakest &lt;a href=&quot;#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;, only the memory directly touched by the operation is synchronized. On the other hand, a store-load pair of &lt;a href=&quot;#variant.SeqCst&quot;&gt;&lt;code&gt;SeqCst&lt;/code&gt;&lt;/a&gt; operations synchronize other memory while additionally preserving a total order of such operations across all threads.</source>
          <target state="translated">メモリの順序は、アトミック操作がメモリを同期する方法を指定します。最も弱い&lt;a href=&quot;#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt;では、操作によって直接触れられたメモリのみが同期されます。一方、&lt;a href=&quot;#variant.SeqCst&quot;&gt; &lt;code&gt;SeqCst&lt;/code&gt; &lt;/a&gt;オペレーションのストアロードペアは、他のメモリを同期化しながら、すべてのスレッドにわたってそのようなオペレーションの全体的な順序を維持します。</target>
        </trans-unit>
        <trans-unit id="03e2538c8eaa31e61eba2183330660d56415ebcf" translate="yes" xml:space="preserve">
          <source>Memory orderings specify the way atomic operations synchronize memory. In its weakest &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Ordering::Relaxed&lt;/code&gt;&lt;/a&gt;, only the memory directly touched by the operation is synchronized. On the other hand, a store-load pair of &lt;a href=&quot;enum.ordering#variant.SeqCst&quot;&gt;&lt;code&gt;Ordering::SeqCst&lt;/code&gt;&lt;/a&gt; operations synchronize other memory while additionally preserving a total order of such operations across all threads.</source>
          <target state="translated">メモリの順序は、アトミック操作がメモリを同期する方法を指定します。最も弱い&lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Ordering::Relaxed&lt;/code&gt; &lt;/a&gt;では、操作によって直接触れられたメモリのみが同期されます。一方、&lt;a href=&quot;enum.ordering#variant.SeqCst&quot;&gt; &lt;code&gt;Ordering::SeqCst&lt;/code&gt; &lt;/a&gt;操作のストアとロードのペアは、他のメモリを同期すると同時に、すべてのスレッドにわたってそのような操作の全順序を維持します。</target>
        </trans-unit>
        <trans-unit id="22c02bdcac42d16560e88c9cdab7cac8538ffbcb" translate="yes" xml:space="preserve">
          <source>Memory ownership</source>
          <target state="translated">メモリの所有権</target>
        </trans-unit>
        <trans-unit id="b70cefd0a9c3186fc3ad2fca9d8f59f0972163e5" translate="yes" xml:space="preserve">
          <source>Message passing is a fine way of handling concurrency, but it&amp;rsquo;s not the only one. Consider this part of the slogan from the Go language documentation again: &amp;ldquo;communicate by sharing memory.&amp;rdquo;</source>
          <target state="translated">メッセージパッシングは同時実行性を処理するための優れた方法ですが、それだけではありません。Go言語ドキュメントのスローガンのこの部分をもう一度考えてみましょう。「メモリを共有して通信する」。</target>
        </trans-unit>
        <trans-unit id="a03a90d59c75d716e1941e5fb5b8746472062e0e" translate="yes" xml:space="preserve">
          <source>Message passing is a fine way of handling concurrency, but it&amp;rsquo;s not the only one. Consider this part of the slogan from the Go language documentation again: &amp;ldquo;do not communicate by sharing memory.&amp;rdquo;</source>
          <target state="translated">メッセージパッシングは並行性を処理する優れた方法ですが、それだけではありません。Go言語のドキュメントのスローガンのこの部分をもう一度考えてみてください。「メモリを共有して通信しないでください」。</target>
        </trans-unit>
        <trans-unit id="d47924059f378f859c3137ecc92f3018c8554c48" translate="yes" xml:space="preserve">
          <source>Messages can be sent through this channel with &lt;a href=&quot;struct.sender#method.send&quot;&gt;&lt;code&gt;send&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;struct.sender#method.send&quot;&gt; &lt;code&gt;send&lt;/code&gt; を使用&lt;/a&gt;すると、このチャネルを介してメッセージを送信できます。</target>
        </trans-unit>
        <trans-unit id="d56b67df96e3223775707154a8618c734f2b8a7b" translate="yes" xml:space="preserve">
          <source>Messages can be sent through this channel with &lt;a href=&quot;struct.syncsender#method.send&quot;&gt;&lt;code&gt;send&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;struct.syncsender#method.try_send&quot;&gt;&lt;code&gt;try_send&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">メッセージは、&lt;a href=&quot;struct.syncsender#method.send&quot;&gt; &lt;code&gt;send&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;struct.syncsender#method.try_send&quot;&gt; &lt;code&gt;try_send&lt;/code&gt; を使用&lt;/a&gt;してこのチャネルを介して送信できます。</target>
        </trans-unit>
        <trans-unit id="e5fc413e41d8882a3983a228d24cde55dfc6fca3" translate="yes" xml:space="preserve">
          <source>Messages sent to the channel can be retrieved using &lt;a href=&quot;struct.receiver#method.recv&quot;&gt;&lt;code&gt;recv&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">チャネルに送信されたメッセージは、&lt;a href=&quot;struct.receiver#method.recv&quot;&gt; &lt;code&gt;recv&lt;/code&gt; &lt;/a&gt;を使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="f57866593059968e971f86172293e7f4c20bbf7f" translate="yes" xml:space="preserve">
          <source>Meta Item Attribute Syntax</source>
          <target state="translated">メタ項目属性構文</target>
        </trans-unit>
        <trans-unit id="073695a20c371f27457f6aab051f26f7536b49bf" translate="yes" xml:space="preserve">
          <source>Meta items are the key-value pairs inside of an attribute. Each key may only be used once in each attribute.</source>
          <target state="translated">メタ項目は、属性内のキーと値のペアです。各キーは各属性内で一度だけ使用することができます。</target>
        </trans-unit>
        <trans-unit id="da50cb07b82024b80368e7f1d0d9ee941c6a68a0" translate="yes" xml:space="preserve">
          <source>Meta items are the key-value pairs inside of an attribute. The keys provided must be one of the valid keys for the specified attribute.</source>
          <target state="translated">メタ項目は、属性内のキーと値のペアです。提供されるキーは、指定された属性に対して有効なキーの一つでなければなりません。</target>
        </trans-unit>
        <trans-unit id="ded036d51fe4b3fb3eddc611d6778ba8e4dcef98" translate="yes" xml:space="preserve">
          <source>Meta items are the key-value pairs inside of an attribute. To fix these issues you need to give required key-value pairs.</source>
          <target state="translated">メタ項目は、属性内のキーと値のペアです。これらの問題を解決するには、必須のキーと値のペアを与える必要があります。</target>
        </trans-unit>
        <trans-unit id="fda66a74788b36b4a9cc97c2d88181628e7d03cd" translate="yes" xml:space="preserve">
          <source>Meta items are the key-value pairs inside of an attribute. To fix this issue, you need to give a value to the &lt;code&gt;note&lt;/code&gt; key. Example:</source>
          <target state="translated">メタアイテムは、属性内のキーと値のペアです。この問題を修正するには、 &lt;code&gt;note&lt;/code&gt; キーに値を指定する必要があります。例：</target>
        </trans-unit>
        <trans-unit id="251edc0eb5a820646bda4e103f0f007fd55321f3" translate="yes" xml:space="preserve">
          <source>Metadata</source>
          <target state="translated">Metadata</target>
        </trans-unit>
        <trans-unit id="6fbea655dc155b182628eb902f62724120a1efca" translate="yes" xml:space="preserve">
          <source>Metadata information about a file.</source>
          <target state="translated">ファイルに関するメタデータ情報。</target>
        </trans-unit>
        <trans-unit id="084830b6199879b13e88117f115361f568aadfed" translate="yes" xml:space="preserve">
          <source>Metadata::accessed</source>
          <target state="translated">Metadata::accessed</target>
        </trans-unit>
        <trans-unit id="ea03a6d8c078cad675d89ba6e750f9418bc0c495" translate="yes" xml:space="preserve">
          <source>Metadata::as_raw_stat</source>
          <target state="translated">Metadata::as_raw_stat</target>
        </trans-unit>
        <trans-unit id="c0545109dd814c2f2913abc28479e6d94ee0114d" translate="yes" xml:space="preserve">
          <source>Metadata::atime</source>
          <target state="translated">Metadata::atime</target>
        </trans-unit>
        <trans-unit id="50367585ad74ed80fa1cbe2b541c19bd0b2de90e" translate="yes" xml:space="preserve">
          <source>Metadata::atime_nsec</source>
          <target state="translated">Metadata::atime_nsec</target>
        </trans-unit>
        <trans-unit id="a680da2613a5aedd0f376ab10667b053d5d40a97" translate="yes" xml:space="preserve">
          <source>Metadata::blksize</source>
          <target state="translated">Metadata::blksize</target>
        </trans-unit>
        <trans-unit id="233007abda8ced2d64fc02c99f7a9b937493f947" translate="yes" xml:space="preserve">
          <source>Metadata::blocks</source>
          <target state="translated">Metadata::blocks</target>
        </trans-unit>
        <trans-unit id="0c9cb348d31160eb04b04dc9d0a8c9a6c7bb3082" translate="yes" xml:space="preserve">
          <source>Metadata::borrow</source>
          <target state="translated">Metadata::borrow</target>
        </trans-unit>
        <trans-unit id="fb7e7385698a1d59ac894814c418b5e972ac017f" translate="yes" xml:space="preserve">
          <source>Metadata::borrow_mut</source>
          <target state="translated">Metadata::borrow_mut</target>
        </trans-unit>
        <trans-unit id="81bdb5794047e85d36b507a5703800ac21e7b116" translate="yes" xml:space="preserve">
          <source>Metadata::clone</source>
          <target state="translated">Metadata::clone</target>
        </trans-unit>
        <trans-unit id="6063837d957ee30e1e495b46a1c85b6125b18ecc" translate="yes" xml:space="preserve">
          <source>Metadata::clone_from</source>
          <target state="translated">Metadata::clone_from</target>
        </trans-unit>
        <trans-unit id="9e01066e110fc02d3274390539e97c3ce87be38e" translate="yes" xml:space="preserve">
          <source>Metadata::clone_into</source>
          <target state="translated">Metadata::clone_into</target>
        </trans-unit>
        <trans-unit id="24bc22c259e7b47fee155cccf102870ea5319289" translate="yes" xml:space="preserve">
          <source>Metadata::created</source>
          <target state="translated">Metadata::created</target>
        </trans-unit>
        <trans-unit id="0a5fa59a9bdd4af484124f7b881a605786b1c5fc" translate="yes" xml:space="preserve">
          <source>Metadata::creation_time</source>
          <target state="translated">Metadata::creation_time</target>
        </trans-unit>
        <trans-unit id="eb8ad0815aeb8f84922c1ba42934ea060392d848" translate="yes" xml:space="preserve">
          <source>Metadata::ctime</source>
          <target state="translated">Metadata::ctime</target>
        </trans-unit>
        <trans-unit id="34107d78458895bc36cb2a586370e9a33f001d4e" translate="yes" xml:space="preserve">
          <source>Metadata::ctime_nsec</source>
          <target state="translated">Metadata::ctime_nsec</target>
        </trans-unit>
        <trans-unit id="4de93a5e1be0a62280e753f74aead534158e32fa" translate="yes" xml:space="preserve">
          <source>Metadata::dev</source>
          <target state="translated">Metadata::dev</target>
        </trans-unit>
        <trans-unit id="1ddf7b6dcaac670ecb58c655d7c29e7efcc7b976" translate="yes" xml:space="preserve">
          <source>Metadata::file_attributes</source>
          <target state="translated">Metadata::file_attributes</target>
        </trans-unit>
        <trans-unit id="d0242558abd414a74f34089244fa5d62391b4237" translate="yes" xml:space="preserve">
          <source>Metadata::file_size</source>
          <target state="translated">Metadata::file_size</target>
        </trans-unit>
        <trans-unit id="a80334eec47f4ec592f2356b1c15e66616fe6d79" translate="yes" xml:space="preserve">
          <source>Metadata::file_type</source>
          <target state="translated">Metadata::file_type</target>
        </trans-unit>
        <trans-unit id="8c5b2aa68de07863010f75c33869a67231d8a86c" translate="yes" xml:space="preserve">
          <source>Metadata::fmt</source>
          <target state="translated">Metadata::fmt</target>
        </trans-unit>
        <trans-unit id="22c4729ff6931a968eb928ba73151ec865e539bd" translate="yes" xml:space="preserve">
          <source>Metadata::from</source>
          <target state="translated">Metadata::from</target>
        </trans-unit>
        <trans-unit id="9aecb9b26fb5e2f5ecf3ae7fec8ad1913791d4fb" translate="yes" xml:space="preserve">
          <source>Metadata::gid</source>
          <target state="translated">Metadata::gid</target>
        </trans-unit>
        <trans-unit id="2dfe494860d779fdeab8e4a5d4ab49c9979a2c22" translate="yes" xml:space="preserve">
          <source>Metadata::ino</source>
          <target state="translated">Metadata::ino</target>
        </trans-unit>
        <trans-unit id="36d9dbdaea92dec9fd9a367943daf11c2968a4d9" translate="yes" xml:space="preserve">
          <source>Metadata::into</source>
          <target state="translated">Metadata::into</target>
        </trans-unit>
        <trans-unit id="29f1788d2917dee377c894e5f697e2f775dbe3c2" translate="yes" xml:space="preserve">
          <source>Metadata::is_dir</source>
          <target state="translated">Metadata::is_dir</target>
        </trans-unit>
        <trans-unit id="3aa539a19a6b3e2c584510ba64204dfdd9773023" translate="yes" xml:space="preserve">
          <source>Metadata::is_file</source>
          <target state="translated">Metadata::is_file</target>
        </trans-unit>
        <trans-unit id="afa64cd752db362df2a19d1dc5a178b5cc2f28bb" translate="yes" xml:space="preserve">
          <source>Metadata::last_access_time</source>
          <target state="translated">Metadata::last_access_time</target>
        </trans-unit>
        <trans-unit id="eaad95ea1d9df1f852c79a83a750592a287faefd" translate="yes" xml:space="preserve">
          <source>Metadata::last_write_time</source>
          <target state="translated">Metadata::last_write_time</target>
        </trans-unit>
        <trans-unit id="f9881c504082a9c98f72732ac253d46ddfcdd091" translate="yes" xml:space="preserve">
          <source>Metadata::len</source>
          <target state="translated">Metadata::len</target>
        </trans-unit>
        <trans-unit id="a1e80cdaa5a7c4b60866de711876b3a869fae063" translate="yes" xml:space="preserve">
          <source>Metadata::mode</source>
          <target state="translated">Metadata::mode</target>
        </trans-unit>
        <trans-unit id="7ccfeed6204cf299fd71093fa88a387e2f40cf29" translate="yes" xml:space="preserve">
          <source>Metadata::modified</source>
          <target state="translated">Metadata::modified</target>
        </trans-unit>
        <trans-unit id="fed36d469e25519f5d756495cbef355ed7e91ebc" translate="yes" xml:space="preserve">
          <source>Metadata::mtime</source>
          <target state="translated">Metadata::mtime</target>
        </trans-unit>
        <trans-unit id="f89d0ee281fc80e82b34a04d9ec5669992f853fe" translate="yes" xml:space="preserve">
          <source>Metadata::mtime_nsec</source>
          <target state="translated">Metadata::mtime_nsec</target>
        </trans-unit>
        <trans-unit id="7ea3185afb2cc66c1d1c43bb7e0c9431a71d5c0f" translate="yes" xml:space="preserve">
          <source>Metadata::nlink</source>
          <target state="translated">Metadata::nlink</target>
        </trans-unit>
        <trans-unit id="af6dc5bc6a15bc877f1b97832fdbaad7638e9e01" translate="yes" xml:space="preserve">
          <source>Metadata::permissions</source>
          <target state="translated">Metadata::permissions</target>
        </trans-unit>
        <trans-unit id="b8f0501a86acbf9b1c6ecec7d4736817cdf817cd" translate="yes" xml:space="preserve">
          <source>Metadata::rdev</source>
          <target state="translated">Metadata::rdev</target>
        </trans-unit>
        <trans-unit id="4d6596297451f34a3f748901f33eeaf5ca1ce581" translate="yes" xml:space="preserve">
          <source>Metadata::size</source>
          <target state="translated">Metadata::size</target>
        </trans-unit>
        <trans-unit id="e9067cb7fc933272c2ee73372bde8b5d793cec95" translate="yes" xml:space="preserve">
          <source>Metadata::st_atime</source>
          <target state="translated">Metadata::st_atime</target>
        </trans-unit>
        <trans-unit id="340d2deeb996099feda8b2e71ceee4746a54e895" translate="yes" xml:space="preserve">
          <source>Metadata::st_atime_nsec</source>
          <target state="translated">Metadata::st_atime_nsec</target>
        </trans-unit>
        <trans-unit id="0ae9039ec88beb8fc2f0f3bd1bb8ef8e5c525cab" translate="yes" xml:space="preserve">
          <source>Metadata::st_blksize</source>
          <target state="translated">Metadata::st_blksize</target>
        </trans-unit>
        <trans-unit id="a25bdcb2eb0e69a91b6e2eff09a462eca581884d" translate="yes" xml:space="preserve">
          <source>Metadata::st_blocks</source>
          <target state="translated">Metadata::st_blocks</target>
        </trans-unit>
        <trans-unit id="e8b580c6f030ddce2f3b41279b8814a4d974c39d" translate="yes" xml:space="preserve">
          <source>Metadata::st_ctime</source>
          <target state="translated">Metadata::st_ctime</target>
        </trans-unit>
        <trans-unit id="fdbb925376f8fb42348d70bd8f7efc024fe60076" translate="yes" xml:space="preserve">
          <source>Metadata::st_ctime_nsec</source>
          <target state="translated">Metadata::st_ctime_nsec</target>
        </trans-unit>
        <trans-unit id="b757b695e74311ba3c6e636e55b5ad9fdd73dd6b" translate="yes" xml:space="preserve">
          <source>Metadata::st_dev</source>
          <target state="translated">Metadata::st_dev</target>
        </trans-unit>
        <trans-unit id="6105b8b71960b47bdcdea43e0b8e7952849ef7c3" translate="yes" xml:space="preserve">
          <source>Metadata::st_gid</source>
          <target state="translated">Metadata::st_gid</target>
        </trans-unit>
        <trans-unit id="3db7b256e8dd1ff1c7ca3b4ec363649b620ce482" translate="yes" xml:space="preserve">
          <source>Metadata::st_ino</source>
          <target state="translated">Metadata::st_ino</target>
        </trans-unit>
        <trans-unit id="ccf6656b53d7732815f828000bde9df01154c5f7" translate="yes" xml:space="preserve">
          <source>Metadata::st_mode</source>
          <target state="translated">Metadata::st_mode</target>
        </trans-unit>
        <trans-unit id="a4761c3748e8e19cc614ab97572a55d03b74ded1" translate="yes" xml:space="preserve">
          <source>Metadata::st_mtime</source>
          <target state="translated">Metadata::st_mtime</target>
        </trans-unit>
        <trans-unit id="577eec1f21e7645e8b3ba3b96112265814eaab93" translate="yes" xml:space="preserve">
          <source>Metadata::st_mtime_nsec</source>
          <target state="translated">Metadata::st_mtime_nsec</target>
        </trans-unit>
        <trans-unit id="4af1b80839dea5a20a8f02919825911bfcfe6451" translate="yes" xml:space="preserve">
          <source>Metadata::st_nlink</source>
          <target state="translated">Metadata::st_nlink</target>
        </trans-unit>
        <trans-unit id="69d962fce72392be8edddc9a53681e0f08b9b69f" translate="yes" xml:space="preserve">
          <source>Metadata::st_rdev</source>
          <target state="translated">Metadata::st_rdev</target>
        </trans-unit>
        <trans-unit id="5faa5088298b4ae9ae7b08b3962a9a150635dfec" translate="yes" xml:space="preserve">
          <source>Metadata::st_size</source>
          <target state="translated">Metadata::st_size</target>
        </trans-unit>
        <trans-unit id="f4f89d23b5f0cd7c330566cf669e3a00205d72a7" translate="yes" xml:space="preserve">
          <source>Metadata::st_uid</source>
          <target state="translated">Metadata::st_uid</target>
        </trans-unit>
        <trans-unit id="1db7c9309be564ff6bf65531b173171534332f43" translate="yes" xml:space="preserve">
          <source>Metadata::to_owned</source>
          <target state="translated">Metadata::to_owned</target>
        </trans-unit>
        <trans-unit id="6732c96994bf6d2c0e20506c4bb4e662b9256862" translate="yes" xml:space="preserve">
          <source>Metadata::try_from</source>
          <target state="translated">Metadata::try_from</target>
        </trans-unit>
        <trans-unit id="73fe4168a94e1f02fc1b289a25908017bcf2159f" translate="yes" xml:space="preserve">
          <source>Metadata::try_into</source>
          <target state="translated">Metadata::try_into</target>
        </trans-unit>
        <trans-unit id="a718e80ede3faf1769107826f6fe239c5ded8be3" translate="yes" xml:space="preserve">
          <source>Metadata::type_id</source>
          <target state="translated">Metadata::type_id</target>
        </trans-unit>
        <trans-unit id="1d7387a664bb0cc1f5c78326600bd1342e97632f" translate="yes" xml:space="preserve">
          <source>Metadata::uid</source>
          <target state="translated">Metadata::uid</target>
        </trans-unit>
        <trans-unit id="1a9ddfb0caa33f4742d361d8a2f00bef568db02a" translate="yes" xml:space="preserve">
          <source>MetadataExt</source>
          <target state="translated">MetadataExt</target>
        </trans-unit>
        <trans-unit id="40b8dd00df3d6447af8e9e83e083a7745c1c189d" translate="yes" xml:space="preserve">
          <source>Metaprogramming is useful for reducing the amount of code you have to write and maintain, which is also one of the roles of functions. However, macros have some additional powers that functions don&amp;rsquo;t.</source>
          <target state="translated">メタプログラミングは、関数の役割の1つでもある、作成および保守しなければならないコードの量を減らすのに役立ちます。ただし、マクロには、関数にはない追加の機能がいくつかあります。</target>
        </trans-unit>
        <trans-unit id="7cbf3f8dcb1e2f43e65d88ac0f8a6b93a1658631" translate="yes" xml:space="preserve">
          <source>Metavariables</source>
          <target state="translated">Metavariables</target>
        </trans-unit>
        <trans-unit id="076edf57211eeac67aa1aad417b7d7a1ffc8d699" translate="yes" xml:space="preserve">
          <source>Method Syntax</source>
          <target state="translated">メソッド構文</target>
        </trans-unit>
        <trans-unit id="aa23ba323c11de2437b737ae399da090864345e1" translate="yes" xml:space="preserve">
          <source>Method calls</source>
          <target state="translated">メソッド呼び出し</target>
        </trans-unit>
        <trans-unit id="db3e2af666e649fa244ecde8200f6f3e54c8deaf" translate="yes" xml:space="preserve">
          <source>Method has generic type parameters</source>
          <target state="translated">メソッドは一般的な型のパラメータを持っています。</target>
        </trans-unit>
        <trans-unit id="9fe2b64db1642155c9d0f52ba05e45faefa0cb4b" translate="yes" xml:space="preserve">
          <source>Method has no receiver</source>
          <target state="translated">メソッドには受信機がありません。</target>
        </trans-unit>
        <trans-unit id="9fbefc33104f8433b35bf7c08d6416988a59e97a" translate="yes" xml:space="preserve">
          <source>Method references the &lt;code&gt;Self&lt;/code&gt; type in its arguments or return type</source>
          <target state="translated">メソッドが引数または戻り値の型で &lt;code&gt;Self&lt;/code&gt; 型を参照しています</target>
        </trans-unit>
        <trans-unit id="2e20e820f64e959b3049d8c2e89b632aa89d87d7" translate="yes" xml:space="preserve">
          <source>Method references the &lt;code&gt;Self&lt;/code&gt; type in its parameters or return type</source>
          <target state="translated">メソッドは、パラメーターまたは戻り値の型で &lt;code&gt;Self&lt;/code&gt; 型を参照します</target>
        </trans-unit>
        <trans-unit id="4caa5dd0258db2dcd504dc2546dbae39450d3d76" translate="yes" xml:space="preserve">
          <source>Method which takes an iterator and generates &lt;code&gt;Self&lt;/code&gt; from the elements by &quot;summing up&quot; the items.</source>
          <target state="translated">イテレータを取り、項目を「合計」することによって要素から &lt;code&gt;Self&lt;/code&gt; を生成するメソッド。</target>
        </trans-unit>
        <trans-unit id="0bfbad119f3cf91e8a3caba0dfc0e91aabd256df" translate="yes" xml:space="preserve">
          <source>Method which takes an iterator and generates &lt;code&gt;Self&lt;/code&gt; from the elements by &quot;summing up&quot; the items. &lt;a href=&quot;../iter/trait.sum#tymethod.sum&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">イテレータを取り、項目を「合計」することによって要素から &lt;code&gt;Self&lt;/code&gt; を生成するメソッド。&lt;a href=&quot;../iter/trait.sum#tymethod.sum&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a49c93b99f5d6fa2929221bf68c97c440d6e08d7" translate="yes" xml:space="preserve">
          <source>Method which takes an iterator and generates &lt;code&gt;Self&lt;/code&gt; from the elements by &quot;summing up&quot; the items. &lt;a href=&quot;iter/trait.sum#tymethod.sum&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">イテレータを取り、項目を「合計」することによって要素から &lt;code&gt;Self&lt;/code&gt; を生成するメソッド。&lt;a href=&quot;iter/trait.sum#tymethod.sum&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ea69507e1801650f83f78a153ac7b6a2ad0138d3" translate="yes" xml:space="preserve">
          <source>Method which takes an iterator and generates &lt;code&gt;Self&lt;/code&gt; from the elements by multiplying the items.</source>
          <target state="translated">イテレータを取り、要素を乗算することにより要素から &lt;code&gt;Self&lt;/code&gt; を生成するメソッド。</target>
        </trans-unit>
        <trans-unit id="73a5734b7c8ee797666395ff82c8551e1baecbfd" translate="yes" xml:space="preserve">
          <source>Method which takes an iterator and generates &lt;code&gt;Self&lt;/code&gt; from the elements by multiplying the items. &lt;a href=&quot;../iter/trait.product#tymethod.product&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">イテレータを取り、要素を乗算することにより要素から &lt;code&gt;Self&lt;/code&gt; を生成するメソッド。&lt;a href=&quot;../iter/trait.product#tymethod.product&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="05e078fee77d9f52059120342f63434db6b130d7" translate="yes" xml:space="preserve">
          <source>Method which takes an iterator and generates &lt;code&gt;Self&lt;/code&gt; from the elements by multiplying the items. &lt;a href=&quot;iter/trait.product#tymethod.product&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">イテレータを取り、要素を乗算することにより要素から &lt;code&gt;Self&lt;/code&gt; を生成するメソッド。&lt;a href=&quot;iter/trait.product#tymethod.product&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a92d08f589c40b54496b3a1fbc8d96e770e0ced7" translate="yes" xml:space="preserve">
          <source>Method-call expressions</source>
          <target state="translated">メソッド呼び出し式</target>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Methods</target>
        </trans-unit>
        <trans-unit id="ee8ca348ec57b6e6b019969d4eed66807417ce83" translate="yes" xml:space="preserve">
          <source>Methods can be chained on it in order to configure it.</source>
          <target state="translated">メソッドは、それを設定するために、その上に連鎖させることができます。</target>
        </trans-unit>
        <trans-unit id="b021a05f7c2a7c30d999e3a3dbfdfbb325ce5b50" translate="yes" xml:space="preserve">
          <source>Methods for Iterating Over Strings</source>
          <target state="translated">文字列を反復処理するための方法</target>
        </trans-unit>
        <trans-unit id="00dd2d8a3c6af309cfff5d80bf81a66f5911b4af" translate="yes" xml:space="preserve">
          <source>Methods for string slices.</source>
          <target state="translated">文字列スライスのためのメソッドです。</target>
        </trans-unit>
        <trans-unit id="c07aa4ee0c7df87d7696c4013a8c13bb9865c6c1" translate="yes" xml:space="preserve">
          <source>Methods from Deref&amp;lt;Target = CStr&amp;gt;</source>
          <target state="translated">Deref &amp;lt;Target = CStr&amp;gt;のメソッド</target>
        </trans-unit>
        <trans-unit id="52ba76ad3be01e9c1922f800d6dd033b03df424a" translate="yes" xml:space="preserve">
          <source>Methods from Deref&amp;lt;Target = OsStr&amp;gt;</source>
          <target state="translated">Deref &amp;lt;Target = OsStr&amp;gt;のメソッド</target>
        </trans-unit>
        <trans-unit id="2c4d2afb0c4f85edb3758b4b74f07ed37559c41d" translate="yes" xml:space="preserve">
          <source>Methods from Deref&amp;lt;Target = Path&amp;gt;</source>
          <target state="translated">Deref &amp;lt;Target = Path&amp;gt;のメソッド</target>
        </trans-unit>
        <trans-unit id="4fe785a58d64e13b3eb4b5b3048abd19034b85d5" translate="yes" xml:space="preserve">
          <source>Methods from Deref&amp;lt;Target = VaListImpl&amp;lt;'f&amp;gt;&amp;gt;</source>
          <target state="translated">Deref &amp;lt;Target = VaListImpl &amp;lt;'f &amp;gt;&amp;gt;のメソッド</target>
        </trans-unit>
        <trans-unit id="886ed7558512e092a63227354a168c0f7c713bf8" translate="yes" xml:space="preserve">
          <source>Methods from Deref&amp;lt;Target = [T]&amp;gt;</source>
          <target state="translated">Deref &amp;lt;Target = [T]&amp;gt;のメソッド</target>
        </trans-unit>
        <trans-unit id="aeaea61088adeb05abf57ffbd37dfaa9942f2c9c" translate="yes" xml:space="preserve">
          <source>Methods from Deref&amp;lt;Target = [u8]&amp;gt;</source>
          <target state="translated">Deref &amp;lt;Target = [u8]&amp;gt;のメソッド</target>
        </trans-unit>
        <trans-unit id="2d000ac3199600cab3d62328aab7e663fe156377" translate="yes" xml:space="preserve">
          <source>Methods from Deref&amp;lt;Target = str&amp;gt;</source>
          <target state="translated">Deref &amp;lt;Target = str&amp;gt;のメソッド</target>
        </trans-unit>
        <trans-unit id="15acf73029decb61b9edc8c57e095d1568d02f80" translate="yes" xml:space="preserve">
          <source>Methods take a special first parameter, of which there are three variants: &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;&amp;amp;self&lt;/code&gt;, and &lt;code&gt;&amp;amp;mut self&lt;/code&gt;. These are syntactic sugar for &lt;code&gt;self: Self&lt;/code&gt;, &lt;code&gt;self: &amp;amp;Self&lt;/code&gt;, and &lt;code&gt;self: &amp;amp;mut Self&lt;/code&gt; respectively.</source>
          <target state="translated">メソッドは特別な最初のパラメーターを取ります。その中には、 &lt;code&gt;self&lt;/code&gt; 、 &lt;code&gt;&amp;amp;self&lt;/code&gt; 、および &lt;code&gt;&amp;amp;mut self&lt;/code&gt; 3つのバリアントがあります。これらは、それぞれ、 &lt;code&gt;self: Self&lt;/code&gt; 、 &lt;code&gt;self: &amp;amp;Self&lt;/code&gt; 、および &lt;code&gt;self: &amp;amp;mut Self&lt;/code&gt; シンタックスシュガーです。</target>
        </trans-unit>
        <trans-unit id="fe4104ca2fabda0b7616f0224304804e72d4ac2a" translate="yes" xml:space="preserve">
          <source>Methods that Consume the Iterator</source>
          <target state="translated">イテレータを消費するメソッド</target>
        </trans-unit>
        <trans-unit id="043d81030ec2d2447aaee9862fecf17f9a5197d0" translate="yes" xml:space="preserve">
          <source>Methods that Produce Other Iterators</source>
          <target state="translated">他のイテレータを生成するメソッド</target>
        </trans-unit>
        <trans-unit id="679313b3ec5d9213f11610dd488f1716be31fd55" translate="yes" xml:space="preserve">
          <source>Methods that call &lt;code&gt;next&lt;/code&gt; are called &lt;em&gt;consuming adaptors&lt;/em&gt;, because calling them uses up the iterator. One example is the &lt;code&gt;sum&lt;/code&gt; method, which takes ownership of the iterator and iterates through the items by repeatedly calling &lt;code&gt;next&lt;/code&gt;, thus consuming the iterator. As it iterates through, it adds each item to a running total and returns the total when iteration is complete. Listing 13-16 has a test illustrating a use of the &lt;code&gt;sum&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;next&lt;/code&gt; 呼び出すメソッドは、反復子を使い果たすため、&lt;em&gt;消費アダプター&lt;/em&gt;と呼ばれます。1つの例は &lt;code&gt;sum&lt;/code&gt; メソッドで、イテレータの所有権を取得し、 &lt;code&gt;next&lt;/code&gt; を繰り返し呼び出すことでアイテムを反復し、イテレータを消費します。反復処理を行うと、各項目が現在の合計に追加され、反復が完了すると合計が返されます。リスト13-16は &lt;code&gt;sum&lt;/code&gt; メソッドの使用を説明するテストを持っています：</target>
        </trans-unit>
        <trans-unit id="3ee9e7dcc3b812dd7c3d130ea59dea4e2ffafdfc" translate="yes" xml:space="preserve">
          <source>Methods that do not take a &lt;code&gt;self&lt;/code&gt; parameter can't be called since there won't be a way to get a pointer to the method table for them.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; パラメータをとらないメソッドは、メソッドテーブルへのポインタを取得する方法がないため、呼び出すことができません。</target>
        </trans-unit>
        <trans-unit id="ae3a1f0113af9f3ea9e116941ce0ea3243f869f0" translate="yes" xml:space="preserve">
          <source>Methods which take no arguments, like &lt;a href=&quot;../../std/default/trait.default#tymethod.default&quot;&gt;&lt;code&gt;default()&lt;/code&gt;&lt;/a&gt;, and return properties of a type, like &lt;a href=&quot;../../std/mem/fn.size_of&quot;&gt;&lt;code&gt;size_of()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../std/default/trait.default#tymethod.default&quot;&gt; &lt;code&gt;default()&lt;/code&gt; の&lt;/a&gt;ように引数をとらず、&lt;a href=&quot;../../std/mem/fn.size_of&quot;&gt; &lt;code&gt;size_of()&lt;/code&gt; の&lt;/a&gt;ように型のプロパティを返すメソッド</target>
        </trans-unit>
        <trans-unit id="f508ce51136df60a01c2c9efd3801fc4a432141c" translate="yes" xml:space="preserve">
          <source>Methods which take no arguments, like &lt;code&gt;default()&lt;/code&gt;, and return properties of a type, like &lt;code&gt;size_of()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;default()&lt;/code&gt; のような引数を取らず、 &lt;code&gt;size_of()&lt;/code&gt; のような型のプロパティを返すメソッド</target>
        </trans-unit>
        <trans-unit id="511541816029367d0abeb46600cba6c7968497a0" translate="yes" xml:space="preserve">
          <source>Methods with More Parameters</source>
          <target state="translated">より多くのパラメータを持つメソッド</target>
        </trans-unit>
        <trans-unit id="802461e6fd7e65d5e9a22bd62f94115d8960193a" translate="yes" xml:space="preserve">
          <source>Micro (or Update) version.</source>
          <target state="translated">マイクロ(またはアップデート)版。</target>
        </trans-unit>
        <trans-unit id="1d43f011780167b829f8c795b301b234700476ad" translate="yes" xml:space="preserve">
          <source>Might panic if the index of the element overflows a &lt;code&gt;usize&lt;/code&gt;.</source>
          <target state="translated">要素のインデックスが &lt;code&gt;usize&lt;/code&gt; をオーバーフローするとパニックになる可能性があります。</target>
        </trans-unit>
        <trans-unit id="779f4caecdf181b1f5c98a94586ba57d3d722311" translate="yes" xml:space="preserve">
          <source>Min-heap</source>
          <target state="translated">Min-heap</target>
        </trans-unit>
        <trans-unit id="5d398eef3ecc3ea6a161734581d0bd3d920b64d8" translate="yes" xml:space="preserve">
          <source>Minimum</source>
          <target state="translated">Minimum</target>
        </trans-unit>
        <trans-unit id="9686035ca169e7d2c603263a9dbe434de5abc91a" translate="yes" xml:space="preserve">
          <source>Minimum possible normal power of 10 exponent.</source>
          <target state="translated">指数10の最小可能な通常の乗。</target>
        </trans-unit>
        <trans-unit id="ffb2ad89a1dd6c4804093e8354f75dbc1aa1f5e7" translate="yes" xml:space="preserve">
          <source>Minimum possible normal power of 10 exponent. Use &lt;a href=&quot;../primitive.f32#associatedconstant.MIN_10_EXP&quot;&gt;&lt;code&gt;f32::MIN_10_EXP&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">10指数の可能な最小の通常のべき乗。代わりに&lt;a href=&quot;../primitive.f32#associatedconstant.MIN_10_EXP&quot;&gt; &lt;code&gt;f32::MIN_10_EXP&lt;/code&gt; &lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="28b12c5c97636794c572ef7bb8ea42845c9ea039" translate="yes" xml:space="preserve">
          <source>Minimum possible normal power of 10 exponent. Use &lt;a href=&quot;../primitive.f64#associatedconstant.MIN_10_EXP&quot;&gt;&lt;code&gt;f64::MIN_10_EXP&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">10指数の可能な最小の通常のべき乗。代わりに&lt;a href=&quot;../primitive.f64#associatedconstant.MIN_10_EXP&quot;&gt; &lt;code&gt;f64::MIN_10_EXP&lt;/code&gt; &lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="a4d51f63ad6ed8d5102aae64b1f14cf4ad7186d1" translate="yes" xml:space="preserve">
          <source>Minimum with the current value using a signed comparison.</source>
          <target state="translated">符号付き比較を使用して、現在の値を最小値とします。</target>
        </trans-unit>
        <trans-unit id="f7d307d26ef7401783092ce67c5e5dfce79391c8" translate="yes" xml:space="preserve">
          <source>Minimum with the current value using an unsigned comparison.</source>
          <target state="translated">符号なし比較を使用して、現在の値との最小値を指定します。</target>
        </trans-unit>
        <trans-unit id="bc9c56954a5369c8cefef30b5732fd34372d7311" translate="yes" xml:space="preserve">
          <source>Minimum with the current value.</source>
          <target state="translated">現在の値で最小値。</target>
        </trans-unit>
        <trans-unit id="59f366bad4114cb2cc36b8a33f5423f9ac6fd71f" translate="yes" xml:space="preserve">
          <source>Minor version.</source>
          <target state="translated">マイナーバージョン。</target>
        </trans-unit>
        <trans-unit id="02b11141c2e4b7a3f351c2572f6527000b3797a8" translate="yes" xml:space="preserve">
          <source>Minus</source>
          <target state="translated">Minus</target>
        </trans-unit>
        <trans-unit id="022838872d4385168e069837fce8660a01c5ed91" translate="yes" xml:space="preserve">
          <source>MinusEq</source>
          <target state="translated">MinusEq</target>
        </trans-unit>
        <trans-unit id="c5f80ef4e4318adbcf9d144d914ef70f5c17933b" translate="yes" xml:space="preserve">
          <source>Misc: &lt;a href=&quot;struct.binaryheap&quot;&gt;&lt;code&gt;BinaryHeap&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">その他：&lt;a href=&quot;struct.binaryheap&quot;&gt; &lt;code&gt;BinaryHeap&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a1c83ad0d224e2f3eec634234f5566e77e746484" translate="yes" xml:space="preserve">
          <source>Modifies the &lt;code&gt;VecDeque&lt;/code&gt; in-place so that &lt;code&gt;len()&lt;/code&gt; is equal to &lt;code&gt;new_len&lt;/code&gt;, either by removing excess elements from the back or by appending elements generated by calling &lt;code&gt;generator&lt;/code&gt; to the back.</source>
          <target state="translated">余分な要素を後ろから削除するか、 &lt;code&gt;generator&lt;/code&gt; を呼び出して生成された要素を後ろに追加することにより、 &lt;code&gt;len()&lt;/code&gt; が &lt;code&gt;new_len&lt;/code&gt; と等しくなるように &lt;code&gt;VecDeque&lt;/code&gt; をインプレースで変更します。</target>
        </trans-unit>
        <trans-unit id="259e0f4ab5708c9eae56da4674bd459c6c84d47d" translate="yes" xml:space="preserve">
          <source>Modifies the &lt;code&gt;VecDeque&lt;/code&gt; in-place so that &lt;code&gt;len()&lt;/code&gt; is equal to new_len, either by removing excess elements from the back or by appending clones of &lt;code&gt;value&lt;/code&gt; to the back.</source>
          <target state="translated">&lt;code&gt;VecDeque&lt;/code&gt; をインプレースで変更して、 &lt;code&gt;len()&lt;/code&gt; がnew_lenと等しくなるようにします。後ろから余分な要素を削除するか、後ろに &lt;code&gt;value&lt;/code&gt; クローンを追加します。</target>
        </trans-unit>
        <trans-unit id="388953bd58be40c58525d23884620eb769a245cf" translate="yes" xml:space="preserve">
          <source>Modifies the readonly flag for this set of permissions. If the &lt;code&gt;readonly&lt;/code&gt; argument is &lt;code&gt;true&lt;/code&gt;, using the resulting &lt;code&gt;Permission&lt;/code&gt; will update file permissions to forbid writing. Conversely, if it's &lt;code&gt;false&lt;/code&gt;, using the resulting &lt;code&gt;Permission&lt;/code&gt; will update file permissions to allow writing.</source>
          <target state="translated">この権限のセットの読み取り専用フラグを変更します。 &lt;code&gt;readonly&lt;/code&gt; 引数が &lt;code&gt;true&lt;/code&gt; の場合、結果の &lt;code&gt;Permission&lt;/code&gt; を使用すると、ファイルのアクセス許可が更新され、書き込みが禁止されます。逆に、 &lt;code&gt;false&lt;/code&gt; の場合、結果の &lt;code&gt;Permission&lt;/code&gt; を使用すると、書き込みを許可するようにファイルのアクセス許可が更新されます。</target>
        </trans-unit>
        <trans-unit id="6685c1ab86d7b3200ddad05850d044f335910e37" translate="yes" xml:space="preserve">
          <source>Modifying the container referenced by this slice may cause its buffer to be reallocated, which would also make any pointers to it invalid.</source>
          <target state="translated">このスライスで参照されるコンテナを変更すると、そのバッファが再割り当てされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="dd695f53eb7e8aa3d751b63b95373a718454f083" translate="yes" xml:space="preserve">
          <source>Module Path</source>
          <target state="translated">モジュールパス</target>
        </trans-unit>
        <trans-unit id="358ab95660416089a183bc3d4af1ea1d91ce74b3" translate="yes" xml:space="preserve">
          <source>Module Source Filenames</source>
          <target state="translated">モジュールのソースファイル名</target>
        </trans-unit>
        <trans-unit id="9438c342e44c174f90e843017ea4487401effee4" translate="yes" xml:space="preserve">
          <source>Module filenames may also be the name of the module as a directory with the contents in a file named &lt;code&gt;mod.rs&lt;/code&gt; within that directory. The above example can alternately be expressed with &lt;code&gt;crate::util&lt;/code&gt;'s contents in a file named &lt;code&gt;util/mod.rs&lt;/code&gt;. It is not allowed to have both &lt;code&gt;util.rs&lt;/code&gt; and &lt;code&gt;util/mod.rs&lt;/code&gt;.</source>
          <target state="translated">モジュールのファイル名は、そのディレクトリ内の &lt;code&gt;mod.rs&lt;/code&gt; という名前のファイルの内容を含むディレクトリとしてのモジュールの名前にすることもできます。上記の例は、代わりに、 &lt;code&gt;util/mod.rs&lt;/code&gt; &lt;code&gt;crate::util&lt;/code&gt; のコンテンツをutil / mod.rsという名前のファイルで表すことができます。 &lt;code&gt;util.rs&lt;/code&gt; と &lt;code&gt;util/mod.rs&lt;/code&gt; の両方を持つことはできません。</target>
        </trans-unit>
        <trans-unit id="67e7cc7f99628a4986b6a1f3cec75594ae2a421d" translate="yes" xml:space="preserve">
          <source>Module std::alloc</source>
          <target state="translated">モジュール std::alloc</target>
        </trans-unit>
        <trans-unit id="1f168b0ce3b5f4140561435dd8191fdd8d1f8400" translate="yes" xml:space="preserve">
          <source>Module std::any</source>
          <target state="translated">モジュール std::any</target>
        </trans-unit>
        <trans-unit id="74dcac8707e89902448dfa1c14f9f7c425346aa8" translate="yes" xml:space="preserve">
          <source>Module std::array</source>
          <target state="translated">モジュール std::array</target>
        </trans-unit>
        <trans-unit id="eb88c7aeb0713036089449fecb0c4f55f2b78393" translate="yes" xml:space="preserve">
          <source>Module std::ascii</source>
          <target state="translated">モジュール std::ascii</target>
        </trans-unit>
        <trans-unit id="339818c659486971042b366b79f0f4797f5fff35" translate="yes" xml:space="preserve">
          <source>Module std::backtrace</source>
          <target state="translated">モジュール std::backtrace</target>
        </trans-unit>
        <trans-unit id="c1baa0271b255c4579475b533c596937f9caca25" translate="yes" xml:space="preserve">
          <source>Module std::borrow</source>
          <target state="translated">モジュール std::borrow</target>
        </trans-unit>
        <trans-unit id="944aa644b01a70375b135a1296686f1614357d19" translate="yes" xml:space="preserve">
          <source>Module std::boxed</source>
          <target state="translated">モジュール std::boxed</target>
        </trans-unit>
        <trans-unit id="3b5f7e15fd316c8d34b81bf8061e390af9288b4b" translate="yes" xml:space="preserve">
          <source>Module std::cell</source>
          <target state="translated">モジュール std::cell</target>
        </trans-unit>
        <trans-unit id="f8bf99c4dd201de2fdc07a15b2cc6fbbca18e6cd" translate="yes" xml:space="preserve">
          <source>Module std::char</source>
          <target state="translated">モジュール std::char</target>
        </trans-unit>
        <trans-unit id="c5dd89ff5c6a7d776cfcfe78e55674c03d5223be" translate="yes" xml:space="preserve">
          <source>Module std::clone</source>
          <target state="translated">モジュール std::clone</target>
        </trans-unit>
        <trans-unit id="732c478dc0b8b1af9e2281c8805a09a43713023c" translate="yes" xml:space="preserve">
          <source>Module std::cmp</source>
          <target state="translated">モジュール std::cmp</target>
        </trans-unit>
        <trans-unit id="1c527c4c50093bdafdd449b15cd58deed5226111" translate="yes" xml:space="preserve">
          <source>Module std::collections</source>
          <target state="translated">モジュール std::collections</target>
        </trans-unit>
        <trans-unit id="22399e3b667d659ffdf0bd0d2a242938115b334d" translate="yes" xml:space="preserve">
          <source>Module std::collections::binary_heap</source>
          <target state="translated">モジュール std::collections::binary_heap</target>
        </trans-unit>
        <trans-unit id="8831b08122b4025abd8f4cce52120cf0293000eb" translate="yes" xml:space="preserve">
          <source>Module std::collections::btree_map</source>
          <target state="translated">モジュール std::collections::btree_map</target>
        </trans-unit>
        <trans-unit id="0fda50906c532c1e2a0ad6e3de7fe45a0e660208" translate="yes" xml:space="preserve">
          <source>Module std::collections::btree_set</source>
          <target state="translated">モジュール std::collections::btree_set</target>
        </trans-unit>
        <trans-unit id="bf9f7bc09a39f746ccb1fb9dd1b68ca2f37b3ac8" translate="yes" xml:space="preserve">
          <source>Module std::collections::hash_map</source>
          <target state="translated">モジュール std::collections::hash_map</target>
        </trans-unit>
        <trans-unit id="82d4e5a9b2b747b555ec1f59cc3ee8b6040f0ea4" translate="yes" xml:space="preserve">
          <source>Module std::collections::hash_set</source>
          <target state="translated">モジュール std::collections::hash_set</target>
        </trans-unit>
        <trans-unit id="3b9e90623541cf502101a0da3f9cd7a22f337bee" translate="yes" xml:space="preserve">
          <source>Module std::collections::linked_list</source>
          <target state="translated">モジュール std::collections::linked_list</target>
        </trans-unit>
        <trans-unit id="1cc384ca31725520529bcef0534d2d6ef4a59015" translate="yes" xml:space="preserve">
          <source>Module std::collections::vec_deque</source>
          <target state="translated">モジュール std::collections::vec_deque</target>
        </trans-unit>
        <trans-unit id="5c101adb0bf7699694386752ddfb2c4e7c3acc27" translate="yes" xml:space="preserve">
          <source>Module std::convert</source>
          <target state="translated">モジュール std::convert</target>
        </trans-unit>
        <trans-unit id="1696cfce739558be5ebc0f8ef2878137df7f39dd" translate="yes" xml:space="preserve">
          <source>Module std::default</source>
          <target state="translated">モジュール std::default</target>
        </trans-unit>
        <trans-unit id="a7964893576681a36f1c7c99505b4891038450ef" translate="yes" xml:space="preserve">
          <source>Module std::env</source>
          <target state="translated">モジュール std::env</target>
        </trans-unit>
        <trans-unit id="18e031a86caea66de408ccae8837f2b2b874a6fb" translate="yes" xml:space="preserve">
          <source>Module std::env::consts</source>
          <target state="translated">モジュール std::env::consts</target>
        </trans-unit>
        <trans-unit id="714e701bd4a34342e7c5c2a54b206b9d64a36fd2" translate="yes" xml:space="preserve">
          <source>Module std::error</source>
          <target state="translated">モジュール std::error</target>
        </trans-unit>
        <trans-unit id="024e18310861ff85880bdf1bd192fded2a7f7fae" translate="yes" xml:space="preserve">
          <source>Module std::f32</source>
          <target state="translated">モジュール std::f32</target>
        </trans-unit>
        <trans-unit id="d3dfc2ef589d6b2fe26d70f811bd98d775db9b43" translate="yes" xml:space="preserve">
          <source>Module std::f32::consts</source>
          <target state="translated">モジュール std::f32::consts</target>
        </trans-unit>
        <trans-unit id="a908a9121b2baed35830f37aa5f643dad8dd2a69" translate="yes" xml:space="preserve">
          <source>Module std::f64</source>
          <target state="translated">モジュール std::f64</target>
        </trans-unit>
        <trans-unit id="6ebde8a62115282c608377191e51eec94ae36ac7" translate="yes" xml:space="preserve">
          <source>Module std::f64::consts</source>
          <target state="translated">モジュール std::f64::consts</target>
        </trans-unit>
        <trans-unit id="b48745452ac486d7491517605613a3997acd41e1" translate="yes" xml:space="preserve">
          <source>Module std::ffi</source>
          <target state="translated">モジュール std::ffi</target>
        </trans-unit>
        <trans-unit id="513413625cb667d1a23a6bdf55d8291c2a415569" translate="yes" xml:space="preserve">
          <source>Module std::fmt</source>
          <target state="translated">モジュール std::fmt</target>
        </trans-unit>
        <trans-unit id="ba31839aa5198e5b217aeb76bb7ef860415500f7" translate="yes" xml:space="preserve">
          <source>Module std::fs</source>
          <target state="translated">モジュール std::fs</target>
        </trans-unit>
        <trans-unit id="ed3fa75d05c230ee7e55688c40c7a666e8d77259" translate="yes" xml:space="preserve">
          <source>Module std::future</source>
          <target state="translated">モジュール std::future</target>
        </trans-unit>
        <trans-unit id="ebc2a772ed30a81840a1d451a8c2c89aab5c92b4" translate="yes" xml:space="preserve">
          <source>Module std::hash</source>
          <target state="translated">モジュール std::hash</target>
        </trans-unit>
        <trans-unit id="d24afb2059821706f68be9725e265ed398fbbe08" translate="yes" xml:space="preserve">
          <source>Module std::hint</source>
          <target state="translated">モジュール std::hint</target>
        </trans-unit>
        <trans-unit id="faf4d0919a773dd46bc0ea50e8553ab459a11552" translate="yes" xml:space="preserve">
          <source>Module std::i128</source>
          <target state="translated">モジュール std::i128</target>
        </trans-unit>
        <trans-unit id="79357e954e2b2694b7e153bf655cf2500d8798dd" translate="yes" xml:space="preserve">
          <source>Module std::i16</source>
          <target state="translated">モジュール std::i16</target>
        </trans-unit>
        <trans-unit id="36fd00a7fbc538ecafcc456a9917547646d03ef3" translate="yes" xml:space="preserve">
          <source>Module std::i32</source>
          <target state="translated">モジュール std::i32</target>
        </trans-unit>
        <trans-unit id="e63c251332db3cdab1c09f68009ab5cea31d30ca" translate="yes" xml:space="preserve">
          <source>Module std::i64</source>
          <target state="translated">モジュール std::i64</target>
        </trans-unit>
        <trans-unit id="1db4b4a2c54c784d4898f7607b6032a2da53eebf" translate="yes" xml:space="preserve">
          <source>Module std::i8</source>
          <target state="translated">モジュール std::i8</target>
        </trans-unit>
        <trans-unit id="57d9247242555ef52e05b7666b250df82a8a67f2" translate="yes" xml:space="preserve">
          <source>Module std::intrinsics</source>
          <target state="translated">モジュール std::intrinsics</target>
        </trans-unit>
        <trans-unit id="e09c0021069c0b5dc7fa0552436af600e87d48ec" translate="yes" xml:space="preserve">
          <source>Module std::io</source>
          <target state="translated">モジュール std::io</target>
        </trans-unit>
        <trans-unit id="387a9fa1ef32cff8e09d4bb8bd02d4f53e1b3480" translate="yes" xml:space="preserve">
          <source>Module std::io::prelude</source>
          <target state="translated">モジュール std::io::prelude</target>
        </trans-unit>
        <trans-unit id="7842ca2efa605585ef115faa072b699cfc65676e" translate="yes" xml:space="preserve">
          <source>Module std::isize</source>
          <target state="translated">モジュール std::isize</target>
        </trans-unit>
        <trans-unit id="601c1ba18661cd27d5610644b24553dece1976f3" translate="yes" xml:space="preserve">
          <source>Module std::iter</source>
          <target state="translated">モジュール std::iter</target>
        </trans-unit>
        <trans-unit id="4d3b1a2ad37e60a72ab1856c390fe28ed7b35be6" translate="yes" xml:space="preserve">
          <source>Module std::lazy</source>
          <target state="translated">モジュール std::lazy</target>
        </trans-unit>
        <trans-unit id="da0499ff04c78dc7910317cdcd69930464227eb5" translate="yes" xml:space="preserve">
          <source>Module std::marker</source>
          <target state="translated">モジュール std::marker</target>
        </trans-unit>
        <trans-unit id="2a3e749b607cb57406551010f876024c0c08dd92" translate="yes" xml:space="preserve">
          <source>Module std::mem</source>
          <target state="translated">モジュール std::mem</target>
        </trans-unit>
        <trans-unit id="c3f0b3647f4485c1d3f60dd7745d15046a0394e2" translate="yes" xml:space="preserve">
          <source>Module std::net</source>
          <target state="translated">モジュール std::net</target>
        </trans-unit>
        <trans-unit id="c77d2a44ca46d3b377b843d90632c7f049270aa5" translate="yes" xml:space="preserve">
          <source>Module std::num</source>
          <target state="translated">モジュール std::num</target>
        </trans-unit>
        <trans-unit id="9b2965277551e3bc8df52c5ac3fb1f339bf8d5d6" translate="yes" xml:space="preserve">
          <source>Module std::ops</source>
          <target state="translated">モジュール std::ops</target>
        </trans-unit>
        <trans-unit id="e45a8da7735323b76386e35efab4701fd0ca8fbb" translate="yes" xml:space="preserve">
          <source>Module std::option</source>
          <target state="translated">モジュール std::option</target>
        </trans-unit>
        <trans-unit id="307fafb17725b95023deaf1a6801c2a5ac4f03cb" translate="yes" xml:space="preserve">
          <source>Module std::os</source>
          <target state="translated">モジュール std::os</target>
        </trans-unit>
        <trans-unit id="505dd09c9a71b2838c7035bc67e62349d53c8dc3" translate="yes" xml:space="preserve">
          <source>Module std::os::linux</source>
          <target state="translated">モジュール std::os::linux</target>
        </trans-unit>
        <trans-unit id="fa0dc21a3daaf135d69d911638837a8b9d2d630d" translate="yes" xml:space="preserve">
          <source>Module std::os::linux::fs</source>
          <target state="translated">モジュール std::os::linux::fs</target>
        </trans-unit>
        <trans-unit id="1ca3824e634b18182698b8ba7bcf1d5541585e2f" translate="yes" xml:space="preserve">
          <source>Module std::os::linux::raw</source>
          <target state="translated">モジュール std::os::linux::raw</target>
        </trans-unit>
        <trans-unit id="582caf1e2f62f8bab46f235f3c754b626e233672" translate="yes" xml:space="preserve">
          <source>Module std::os::raw</source>
          <target state="translated">モジュール std::os::raw</target>
        </trans-unit>
        <trans-unit id="d11d414140e55c223e9dc48ec87e8796ccd2b3f4" translate="yes" xml:space="preserve">
          <source>Module std::os::unix</source>
          <target state="translated">モジュール std::os::unix</target>
        </trans-unit>
        <trans-unit id="af56c4b5931b2847016fbfd39d2585e1fdfd5b8c" translate="yes" xml:space="preserve">
          <source>Module std::os::unix::ffi</source>
          <target state="translated">モジュール std::os::unix::fi</target>
        </trans-unit>
        <trans-unit id="3c5b94d9dc17e4fdbbcdc6a46f2e9a32ae5cf92b" translate="yes" xml:space="preserve">
          <source>Module std::os::unix::fs</source>
          <target state="translated">モジュール std::os::unix::fs</target>
        </trans-unit>
        <trans-unit id="f25625cf4aa908a37e36073f3b8cf3ff3c9fdadc" translate="yes" xml:space="preserve">
          <source>Module std::os::unix::io</source>
          <target state="translated">モジュール std::os::unix::io</target>
        </trans-unit>
        <trans-unit id="1ad5bcc975ebe113e7aff4ca1ac2085e8a6e283d" translate="yes" xml:space="preserve">
          <source>Module std::os::unix::net</source>
          <target state="translated">モジュール std::os::unix::net</target>
        </trans-unit>
        <trans-unit id="08e71b66acb88da56278c3ca887195904d0231bc" translate="yes" xml:space="preserve">
          <source>Module std::os::unix::prelude</source>
          <target state="translated">モジュール std::os::unix::prelude</target>
        </trans-unit>
        <trans-unit id="45906151349e8d44b6c1080c120767e9f40795a0" translate="yes" xml:space="preserve">
          <source>Module std::os::unix::process</source>
          <target state="translated">モジュール std::os::unix::process</target>
        </trans-unit>
        <trans-unit id="9b65405323e9bf4ef1b88c304e5ec0dfe3eb2c2e" translate="yes" xml:space="preserve">
          <source>Module std::os::unix::raw</source>
          <target state="translated">モジュール std::os::unix::raw</target>
        </trans-unit>
        <trans-unit id="eda535add8f6a9e9aa82a314016a472708ba626f" translate="yes" xml:space="preserve">
          <source>Module std::os::unix::thread</source>
          <target state="translated">モジュール std::os::unix::thread</target>
        </trans-unit>
        <trans-unit id="69b1500244b78ec441b75ff9d2e96e69a350f9f0" translate="yes" xml:space="preserve">
          <source>Module std::os::unix::ucred</source>
          <target state="translated">モジュール std::os::unix::ucred</target>
        </trans-unit>
        <trans-unit id="a9545acc42cdd06b141e858854f8f8dbbc3fec0b" translate="yes" xml:space="preserve">
          <source>Module std::os::unix::ucred::impl_linux</source>
          <target state="translated">モジュール std::os::unix::ucred::impl_linux</target>
        </trans-unit>
        <trans-unit id="e0d43b7d1d112f6d717881b08a1b8360eeeb3de7" translate="yes" xml:space="preserve">
          <source>Module std::os::windows</source>
          <target state="translated">モジュール std::os::windows</target>
        </trans-unit>
        <trans-unit id="f5337c9e4fddf5f309a1b852756b69889a5e1ed7" translate="yes" xml:space="preserve">
          <source>Module std::os::windows::ffi</source>
          <target state="translated">モジュール std::os::windows::fi</target>
        </trans-unit>
        <trans-unit id="9a5eadcc218fb3b0ed96394fe1a8b6e9aaf4efcd" translate="yes" xml:space="preserve">
          <source>Module std::os::windows::fs</source>
          <target state="translated">モジュール std::os::windows::fs</target>
        </trans-unit>
        <trans-unit id="9800232b824a17f8674dba073742accd03a5c7b4" translate="yes" xml:space="preserve">
          <source>Module std::os::windows::io</source>
          <target state="translated">モジュール std::os::windows::io</target>
        </trans-unit>
        <trans-unit id="f64b2edc640f0b863a86e9fc1c63b93491ecb73e" translate="yes" xml:space="preserve">
          <source>Module std::os::windows::prelude</source>
          <target state="translated">モジュール std::os::windows::prelude</target>
        </trans-unit>
        <trans-unit id="c3a33d8f5b07f49ebbb466bdc5b0c55d9f30a1a4" translate="yes" xml:space="preserve">
          <source>Module std::os::windows::process</source>
          <target state="translated">モジュール std::os::windows::process</target>
        </trans-unit>
        <trans-unit id="d5984edd78151ee0b86049ca16fe84ae4281aba6" translate="yes" xml:space="preserve">
          <source>Module std::os::windows::raw</source>
          <target state="translated">モジュール std::os::windows::raw</target>
        </trans-unit>
        <trans-unit id="ce2dd33c5819fd4ec975020da7690a04606049df" translate="yes" xml:space="preserve">
          <source>Module std::os::windows::thread</source>
          <target state="translated">モジュール std::os::windows::thread</target>
        </trans-unit>
        <trans-unit id="1e56e7038b8ac2517d919e74dd6ff5affae26278" translate="yes" xml:space="preserve">
          <source>Module std::panic</source>
          <target state="translated">モジュール std::panic</target>
        </trans-unit>
        <trans-unit id="40741efebae8310393287d7e27414f9dd61b5684" translate="yes" xml:space="preserve">
          <source>Module std::path</source>
          <target state="translated">モジュール std::path</target>
        </trans-unit>
        <trans-unit id="dc08f19b2b5942ca70666472d7824576a229b191" translate="yes" xml:space="preserve">
          <source>Module std::pin</source>
          <target state="translated">モジュール std::ピン</target>
        </trans-unit>
        <trans-unit id="e00e5920fcfa2a371eecc3d8ce29ba6d6438eb84" translate="yes" xml:space="preserve">
          <source>Module std::prelude</source>
          <target state="translated">モジュール std::prelude</target>
        </trans-unit>
        <trans-unit id="fefd1d724d34848239d3e045d418f35d9b208fc9" translate="yes" xml:space="preserve">
          <source>Module std::prelude::v1</source>
          <target state="translated">モジュール std::prelude::v1</target>
        </trans-unit>
        <trans-unit id="bbb8fcf9e3be10a696ead68236ca9c9aeaf6a63e" translate="yes" xml:space="preserve">
          <source>Module std::primitive</source>
          <target state="translated">モジュール std::primitive</target>
        </trans-unit>
        <trans-unit id="65c28b370cc205bebff871a57e62031b24ec4a43" translate="yes" xml:space="preserve">
          <source>Module std::process</source>
          <target state="translated">モジュール std::process</target>
        </trans-unit>
        <trans-unit id="7b9e8bf21d42be55d01196ef987f8cbb37fc224a" translate="yes" xml:space="preserve">
          <source>Module std::ptr</source>
          <target state="translated">モジュール std::ptr</target>
        </trans-unit>
        <trans-unit id="28199ad0111f666412d3aac539bb85773b597888" translate="yes" xml:space="preserve">
          <source>Module std::raw</source>
          <target state="translated">モジュール std::raw</target>
        </trans-unit>
        <trans-unit id="282923935aad5d5fe4841c8b5e180098d5fe65e2" translate="yes" xml:space="preserve">
          <source>Module std::rc</source>
          <target state="translated">モジュール std::rc</target>
        </trans-unit>
        <trans-unit id="f76d25c62f168207fc204e65332783a5d150cb8b" translate="yes" xml:space="preserve">
          <source>Module std::result</source>
          <target state="translated">モジュール std::result</target>
        </trans-unit>
        <trans-unit id="27cb2f9fc9b89fd1a70b0710886b9cb09fd35544" translate="yes" xml:space="preserve">
          <source>Module std::slice</source>
          <target state="translated">モジュール std::slice</target>
        </trans-unit>
        <trans-unit id="b77cc21e7e49e96d2397bb7380f5d3cdd704c79f" translate="yes" xml:space="preserve">
          <source>Module std::str</source>
          <target state="translated">モジュール std::str</target>
        </trans-unit>
        <trans-unit id="dea701188b273fc04096957bb1bc877ece1217e7" translate="yes" xml:space="preserve">
          <source>Module std::str::pattern</source>
          <target state="translated">モジュール std::str::pattern</target>
        </trans-unit>
        <trans-unit id="6fd27e0113a1de10eb71fecbf4a0503b0ac43319" translate="yes" xml:space="preserve">
          <source>Module std::string</source>
          <target state="translated">モジュール std::string</target>
        </trans-unit>
        <trans-unit id="8926d1f47e5d766b1c5cf6669ce0f9090e988bec" translate="yes" xml:space="preserve">
          <source>Module std::sync</source>
          <target state="translated">モジュール std::sync</target>
        </trans-unit>
        <trans-unit id="3f8c3c8747e4c27d7fa67f501603c55dd9682772" translate="yes" xml:space="preserve">
          <source>Module std::sync::atomic</source>
          <target state="translated">モジュール std::sync::atomic</target>
        </trans-unit>
        <trans-unit id="b48714ec7da5332ac87a26f5a933baa549bfa338" translate="yes" xml:space="preserve">
          <source>Module std::sync::mpsc</source>
          <target state="translated">モジュール std::sync::mpsc</target>
        </trans-unit>
        <trans-unit id="aee4e612154c80072bb3fe90b082bacce5aed533" translate="yes" xml:space="preserve">
          <source>Module std::task</source>
          <target state="translated">モジュール std::タスク</target>
        </trans-unit>
        <trans-unit id="1022333fdc4443428b44d90e0b03525e65cdc63c" translate="yes" xml:space="preserve">
          <source>Module std::thread</source>
          <target state="translated">モジュール std::thread</target>
        </trans-unit>
        <trans-unit id="c8c97cfe535e0087eca60f19f8932d01609705e4" translate="yes" xml:space="preserve">
          <source>Module std::time</source>
          <target state="translated">モジュール std::time</target>
        </trans-unit>
        <trans-unit id="76a71314fe23c5db0ec81783d2749c460fa38783" translate="yes" xml:space="preserve">
          <source>Module std::u128</source>
          <target state="translated">モジュール std::u128</target>
        </trans-unit>
        <trans-unit id="12fe4b62dacfc7d423417c92fa4041cf277a9862" translate="yes" xml:space="preserve">
          <source>Module std::u16</source>
          <target state="translated">モジュール std::u16</target>
        </trans-unit>
        <trans-unit id="8fda3c7e5af83a49ffac1d15404ab5301d7cf97c" translate="yes" xml:space="preserve">
          <source>Module std::u32</source>
          <target state="translated">モジュール std::u32</target>
        </trans-unit>
        <trans-unit id="3cedb947fc5671194a69be4b83a79ddec58ad211" translate="yes" xml:space="preserve">
          <source>Module std::u64</source>
          <target state="translated">モジュール std::u64</target>
        </trans-unit>
        <trans-unit id="165b8cb195ac2ec75de3ff752eb65046b594dce9" translate="yes" xml:space="preserve">
          <source>Module std::u8</source>
          <target state="translated">モジュール std::u8</target>
        </trans-unit>
        <trans-unit id="b102b76b0626198e73aa2c3edeee79b1784bf4fb" translate="yes" xml:space="preserve">
          <source>Module std::usize</source>
          <target state="translated">モジュール std::usize</target>
        </trans-unit>
        <trans-unit id="82cbe241ce94c801b0d2980247896f1d9b03b922" translate="yes" xml:space="preserve">
          <source>Module std::vec</source>
          <target state="translated">モジュール std::vec</target>
        </trans-unit>
        <trans-unit id="29b66d670d54eac9d4e45a14658084f9001c209c" translate="yes" xml:space="preserve">
          <source>Module-level inline assembly.</source>
          <target state="translated">モジュールレベルのインラインアセンブリ。</target>
        </trans-unit>
        <trans-unit id="04e9462c0ff02bb9032b92abd45881a3c7e15fb7" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="translated">Modules</target>
        </trans-unit>
        <trans-unit id="77b5cf98259ec5b0ff342bdba310975e1bab1b10" translate="yes" xml:space="preserve">
          <source>Modules and types share the same namespace. Declaring a named type with the same name as a module in scope is forbidden: that is, a type definition, trait, struct, enumeration, union, type parameter or crate can't shadow the name of a module in scope, or vice versa. Items brought into scope with &lt;code&gt;use&lt;/code&gt; also have this restriction.</source>
          <target state="translated">モジュールとタイプは同じ名前空間を共有します。スコープ内のモジュールと同じ名前の名前付き型を宣言することは禁止されています。つまり、型定義、特性、構造体、列挙、共用体、型パラメーターまたはクレートは、スコープ内のモジュールの名前をシャドウできません。 。 &lt;code&gt;use&lt;/code&gt; 対象となるアイテムにもこの制限があります。</target>
        </trans-unit>
        <trans-unit id="b8d88c49dc7335756df022d9a0942322d892bf31" translate="yes" xml:space="preserve">
          <source>Modules aren&amp;rsquo;t useful only for organizing your code. They also define Rust&amp;rsquo;s &lt;em&gt;privacy boundary&lt;/em&gt;: the line that encapsulates the implementation details external code isn&amp;rsquo;t allowed to know about, call, or rely on. So, if you want to make an item like a function or struct private, you put it in a module.</source>
          <target state="translated">モジュールは、コードを整理するためだけに役立つわけではありません。また、Rustの&lt;em&gt;プライバシー境界&lt;/em&gt;も定義します。外部コードが知ること、呼び出すこと、または依存することを外部コードに許可しない実装の詳細をカプセル化する行。したがって、関数や構造体のような項目をプライベートにしたい場合は、モジュールに入れます。</target>
        </trans-unit>
        <trans-unit id="bd557da0146a5e50bc37d63c90af625d07e7d2d9" translate="yes" xml:space="preserve">
          <source>Modules implicitly have some names in scope. These name are to built-in types, macros imported with &lt;a href=&quot;../macros-by-example#the-macro_use-attribute&quot;&gt;&lt;code&gt;#[macro_use]&lt;/code&gt;&lt;/a&gt; on an extern crate, and by the crate's &lt;a href=&quot;../crates-and-source-files#preludes-and-no_std&quot;&gt;prelude&lt;/a&gt;. These names are all made of a single identifier. These names are not part of the module, so for example, any name &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;self::name&lt;/code&gt; is not a valid path. The names added by the &lt;a href=&quot;../crates-and-source-files#preludes-and-no_std&quot;&gt;prelude&lt;/a&gt; can be removed by placing the &lt;code&gt;no_implicit_prelude&lt;/code&gt;&lt;a href=&quot;../attributes&quot;&gt;attribute&lt;/a&gt; onto the module or one of its ancestor modules.</source>
          <target state="translated">モジュールには、スコープ内に暗黙的にいくつかの名前があります。これらの名前は、組み込み型、&lt;a href=&quot;../macros-by-example#the-macro_use-attribute&quot;&gt; &lt;code&gt;#[macro_use]&lt;/code&gt; &lt;/a&gt;クレートで＃[macro_use]を使用してインポートされたマクロ、およびクレートの&lt;a href=&quot;../crates-and-source-files#preludes-and-no_std&quot;&gt;前奏曲に付けられてい&lt;/a&gt;ます。これらの名前はすべて単一の識別子で構成されています。これらの名前はモジュールの一部ではないため、たとえば、名前 &lt;code&gt;name&lt;/code&gt; 、 &lt;code&gt;self::name&lt;/code&gt; は有効なパスではありません。&lt;a href=&quot;../crates-and-source-files#preludes-and-no_std&quot;&gt;プレリュード&lt;/a&gt;によって追加された名前は、 &lt;code&gt;no_implicit_prelude&lt;/code&gt; &lt;a href=&quot;../attributes&quot;&gt;属性&lt;/a&gt;をモジュールまたはその祖先モジュールの1つに配置することで削除できます。</target>
        </trans-unit>
        <trans-unit id="0291ff6d7ab0361e35e29525a101c6e3961e4e76" translate="yes" xml:space="preserve">
          <source>Modules implicitly have some names in scope. These name are to built-in types, macros imported with &lt;a href=&quot;../macros-by-example#the-macro_use-attribute&quot;&gt;&lt;code&gt;#[macro_use]&lt;/code&gt;&lt;/a&gt; on an extern crate, and by the crate's &lt;a href=&quot;../crates-and-source-files#preludes-and-no_std&quot;&gt;prelude&lt;/a&gt;. These names are all made of a single identifier. These names are not part of the module, so for example, any name &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;self::name&lt;/code&gt; is not a valid path. The names added by the &lt;a href=&quot;../crates-and-source-files#preludes-and-no_std&quot;&gt;prelude&lt;/a&gt; can be removed by placing the &lt;code&gt;no_implicit_prelude&lt;/code&gt;&lt;a href=&quot;../attributes&quot;&gt;attribute&lt;/a&gt; onto the module.</source>
          <target state="translated">モジュールはスコープ内に暗黙的にいくつかの名前を持っています。これらの名前は、組み込みタイプ、&lt;a href=&quot;../macros-by-example#the-macro_use-attribute&quot;&gt; &lt;code&gt;#[macro_use]&lt;/code&gt; &lt;/a&gt;クレートで＃[macro_use]を使用してインポートされたマクロ、およびクレートの&lt;a href=&quot;../crates-and-source-files#preludes-and-no_std&quot;&gt;プレリュード&lt;/a&gt;によって付けられます。これらの名前はすべて単一の識別子で構成されています。これらの名前はモジュールの一部ではないため、たとえば、任意の名前 &lt;code&gt;name&lt;/code&gt; 、 &lt;code&gt;self::name&lt;/code&gt; は有効なパスではありません。&lt;a href=&quot;../crates-and-source-files#preludes-and-no_std&quot;&gt;プレリュード&lt;/a&gt;によって追加された名前は、モジュールに &lt;code&gt;no_implicit_prelude&lt;/code&gt; &lt;a href=&quot;../attributes&quot;&gt;属性&lt;/a&gt;を配置することで削除できます。</target>
        </trans-unit>
        <trans-unit id="ff1fbd413fa236739023997953ac21a3b2cc4538" translate="yes" xml:space="preserve">
          <source>Modules, like all items, accept outer attributes. They also accept inner attributes: either after &lt;code&gt;{&lt;/code&gt; for a module with a body, or at the beginning of the source file, after the optional BOM and shebang.</source>
          <target state="translated">モジュールは、すべてのアイテムと同様に、外部属性を受け入れます。それらは内部属性も受け入れます： &lt;code&gt;{&lt;/code&gt; 本体を含むモジュールの場合、またはソースファイルの先頭、オプションのBOMおよびシバンの後。</target>
        </trans-unit>
        <trans-unit id="a80c4acdab9385909e7dbad1128c0839eb07a18a" translate="yes" xml:space="preserve">
          <source>More About Cargo and Crates.io</source>
          <target state="translated">カーゴとクレートの詳細情報</target>
        </trans-unit>
        <trans-unit id="8b506b766f38c963c4fb67cf54510e809b00d630" translate="yes" xml:space="preserve">
          <source>More Information About the Cons List</source>
          <target state="translated">コンス一覧の詳細情報</target>
        </trans-unit>
        <trans-unit id="9dcdcdd7563f636d0f735cacd3835c7a85a1b37b" translate="yes" xml:space="preserve">
          <source>More Lints with Clippy</source>
          <target state="translated">クリッピーを使ったリントを多めに</target>
        </trans-unit>
        <trans-unit id="0eb5e0f014499c13cd573691dd8d842c73505771" translate="yes" xml:space="preserve">
          <source>More about patterns and matching can be found in &lt;a href=&quot;ch18-00-patterns&quot;&gt;chapter 18&lt;/a&gt;.</source>
          <target state="translated">パターンとマッチングの詳細については、&lt;a href=&quot;ch18-00-patterns&quot;&gt;第18章を参照してください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1f80fff5e4e5f11f26a8df18755f4ba4ad3a6ae5" translate="yes" xml:space="preserve">
          <source>More complex patterns using point-free style and closures:</source>
          <target state="translated">ポイントフリーのスタイルやクローゼットを使った、より複雑なパターン。</target>
        </trans-unit>
        <trans-unit id="3a143e7d940f49baace66eb851b7d8db887d67e7" translate="yes" xml:space="preserve">
          <source>More complex patterns with closures:</source>
          <target state="translated">クローズアップでより複雑なパターンに。</target>
        </trans-unit>
        <trans-unit id="59901ea555299e532747ae0c72098ee315285615" translate="yes" xml:space="preserve">
          <source>More details about the overall approach can be found in the &lt;a href=&quot;index&quot;&gt;module documentation&lt;/a&gt;.</source>
          <target state="translated">全体的なアプローチの詳細については、&lt;a href=&quot;index&quot;&gt;モジュールのドキュメントを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="03e29df8563f2c7d15d433645463bb8454472bc1" translate="yes" xml:space="preserve">
          <source>More details can be found in &lt;a href=&quot;https://github.com/rust-lang/rfcs/pull/438&quot;&gt;RFC 438&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://github.com/rust-lang/rfcs/pull/438&quot;&gt;RFC 438を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7c64d98076877e493846d8fb81f60069893823ea" translate="yes" xml:space="preserve">
          <source>More details can be found in the &lt;a href=&quot;reference/expressions#places-rvalues-and-temporaries&quot;&gt;Expressions&lt;/a&gt; section of the Reference.</source>
          <target state="translated">詳細については、リファレンスの「&lt;a href=&quot;reference/expressions#places-rvalues-and-temporaries&quot;&gt;式」&lt;/a&gt;セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="5b016e48793899f84c9dc4f741c54bbe0469e235" translate="yes" xml:space="preserve">
          <source>More details on the functionality shown can be seen at the &lt;a href=&quot;iter/trait.intoiterator&quot;&gt;&lt;code&gt;IntoIterator&lt;/code&gt;&lt;/a&gt; docs.</source>
          <target state="translated">示されている機能の詳細については、&lt;a href=&quot;iter/trait.intoiterator&quot;&gt; &lt;code&gt;IntoIterator&lt;/code&gt; の&lt;/a&gt;ドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="8c36e81c7e986e12ec31df752d60b5c100e110f7" translate="yes" xml:space="preserve">
          <source>More documentation of generators can be found in the unstable book.</source>
          <target state="translated">ジェネレータのより多くのドキュメントは、不安定な本の中にあります。</target>
        </trans-unit>
        <trans-unit id="160f6ee360990ab6dc539b3a8325ac927a353a75" translate="yes" xml:space="preserve">
          <source>More information on mutable references and pointers can be found in``` &lt;a href=&quot;../reference/types/pointer#mutable-references-mut&quot;&gt;Reference&lt;/a&gt;.</source>
          <target state="translated">可変参照とポインターの詳細については、「 `&lt;a href=&quot;../reference/types/pointer#mutable-references-mut&quot;&gt;参照」を参照してください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6711f14f448620f82d0dd1c9f52457ca6b91764e" translate="yes" xml:space="preserve">
          <source>More on &lt;code&gt;Deref&lt;/code&gt; coercion</source>
          <target state="translated">&lt;code&gt;Deref&lt;/code&gt; 強制の詳細</target>
        </trans-unit>
        <trans-unit id="92965db7def0a60a6db94b45ff0b39dff9073468" translate="yes" xml:space="preserve">
          <source>More specifically, an &lt;code&gt;&amp;lt;expr&amp;gt;.await&lt;/code&gt; expression has the following effect.</source>
          <target state="translated">具体的には、 &lt;code&gt;&amp;lt;expr&amp;gt;.await&lt;/code&gt; 式には次のような効果があります。</target>
        </trans-unit>
        <trans-unit id="d621c989973e9c17e9cde0b21eb6d04678695b72" translate="yes" xml:space="preserve">
          <source>More specifically, this is the offset in bytes between successive elements in an array with that item type including alignment padding. Thus, for any type &lt;code&gt;T&lt;/code&gt; and length &lt;code&gt;n&lt;/code&gt;, &lt;code&gt;[T; n]&lt;/code&gt; has a size of &lt;code&gt;n * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt;.</source>
          <target state="translated">より具体的には、これは、配列のパディングを含むその項目タイプの配列内の連続する要素間のバイト単位のオフセットです。したがって、任意のタイプ &lt;code&gt;T&lt;/code&gt; および長さ &lt;code&gt;n&lt;/code&gt; の場合、 &lt;code&gt;[T; n]&lt;/code&gt; のサイズは &lt;code&gt;n * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5cd2a26924c123e5d1ea8bb92a1d25942aab575d" translate="yes" xml:space="preserve">
          <source>More specifically, this is the offset in bytes between successive items of the same type, including alignment padding.</source>
          <target state="translated">より具体的には、これは同じタイプの連続する項目間のバイト単位のオフセットであり、整列パディングを含む。</target>
        </trans-unit>
        <trans-unit id="f3b524cd9541fd42971bc0ab9235a90326b7abb3" translate="yes" xml:space="preserve">
          <source>More specifically, we&amp;rsquo;ll cover:</source>
          <target state="translated">具体的には、次の内容を取り上げます。</target>
        </trans-unit>
        <trans-unit id="6280ba9424a15f03fdde313064799f9fac845fb7" translate="yes" xml:space="preserve">
          <source>More than one &lt;code&gt;deprecated&lt;/code&gt; attribute has been put on an item.</source>
          <target state="translated">1つのアイテムに複数の &lt;code&gt;deprecated&lt;/code&gt; 属性が設定されています。</target>
        </trans-unit>
        <trans-unit id="cefd0883c31d6980158a3fa042e84d2d520e19ee" translate="yes" xml:space="preserve">
          <source>More than one &lt;code&gt;main&lt;/code&gt; function was found.</source>
          <target state="translated">複数の &lt;code&gt;main&lt;/code&gt; 機能が見つかりました。</target>
        </trans-unit>
        <trans-unit id="56e5e936562012f849b3e1edd7314a39a109286a" translate="yes" xml:space="preserve">
          <source>More than one explicit lifetime bound was used on a trait object.</source>
          <target state="translated">形質オブジェクトで複数の明示的な寿命制限が使用されていました。</target>
        </trans-unit>
        <trans-unit id="0ac23505321d1b26de051244f9ea7df5362d07c6" translate="yes" xml:space="preserve">
          <source>More than one function parameter have the same name.</source>
          <target state="translated">複数の関数パラメータが同じ名前を持つ。</target>
        </trans-unit>
        <trans-unit id="e8ba882606d0c8163ab0c901024f2759bfa657b5" translate="yes" xml:space="preserve">
          <source>More than one function was declared with the &lt;code&gt;#[main]&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;code&gt;#[main]&lt;/code&gt; 属性を使用して複数の関数が宣言されました。</target>
        </trans-unit>
        <trans-unit id="5f9532259b064ec79ee052f90461e412025c9d29" translate="yes" xml:space="preserve">
          <source>More than one function was declared with the &lt;code&gt;#[start]&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;code&gt;#[start]&lt;/code&gt; 属性を使用して複数の関数が宣言されました。</target>
        </trans-unit>
        <trans-unit id="e6d406d608676b21119a1a2cc93c12a6680b4fcb" translate="yes" xml:space="preserve">
          <source>More than one parameter was used for a generator.</source>
          <target state="translated">つ以上のパラメータをジェネレータに使用しました。</target>
        </trans-unit>
        <trans-unit id="3b9736800f16b69d3879ffacd66ef274c022daca" translate="yes" xml:space="preserve">
          <source>Moreover, if your type is &lt;code&gt;#[repr(packed)]&lt;/code&gt;, the compiler will automatically move fields around to be able to drop them. As a consequence, you cannot use pinning with a &lt;code&gt;#[repr(packed)]&lt;/code&gt; type.</source>
          <target state="translated">さらに、タイプが &lt;code&gt;#[repr(packed)]&lt;/code&gt; の場合、コンパイラーはフィールドを自動的に移動してドロップできるようにします。その結果、 &lt;code&gt;#[repr(packed)]&lt;/code&gt; タイプではピン留めを使用できません。</target>
        </trans-unit>
        <trans-unit id="eb05286fee4aa465691d2082174e06298b972289" translate="yes" xml:space="preserve">
          <source>Moreover, if your type is &lt;code&gt;#[repr(packed)]&lt;/code&gt;, the compiler will automatically move fields around to be able to drop them. It might even do that for fields that happen to be sufficiently aligned. As a consequence, you cannot use pinning with a &lt;code&gt;#[repr(packed)]&lt;/code&gt; type.</source>
          <target state="translated">さらに、タイプが &lt;code&gt;#[repr(packed)]&lt;/code&gt; の場合、コンパイラーはフィールドを自動的に移動してドロップできるようにします。たまたま十分に整列されているフィールドに対してもそうなる可能性があります。結果として、 &lt;code&gt;#[repr(packed)]&lt;/code&gt; タイプでピン留めを使用することはできません。</target>
        </trans-unit>
        <trans-unit id="0c8e3e71e669c1b52e93628b2d983e5658861c25" translate="yes" xml:space="preserve">
          <source>Moreover, this leaves a copy of the same data behind in the &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt;. When using multiple copies of the data (by calling &lt;code&gt;assume_init_read&lt;/code&gt; multiple times, or first calling &lt;code&gt;assume_init_read&lt;/code&gt; and then &lt;a href=&quot;union.maybeuninit#method.assume_init&quot;&gt;&lt;code&gt;assume_init&lt;/code&gt;&lt;/a&gt;), it is your responsibility to ensure that that data may indeed be duplicated.</source>
          <target state="translated">さらに、これにより、 &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; 同じデータのコピーが残ります。データの複数のコピーを使用する場合（ &lt;code&gt;assume_init_read&lt;/code&gt; を複数回呼び出すか、最初に &lt;code&gt;assume_init_read&lt;/code&gt; を呼び出してからassume_initを&lt;a href=&quot;union.maybeuninit#method.assume_init&quot;&gt; &lt;code&gt;assume_init&lt;/code&gt; &lt;/a&gt;）、データが実際に複製されることを確認するのはユーザーの責任です。</target>
        </trans-unit>
        <trans-unit id="b83d01c347c3f0838e253771c1cdcc4254556b6b" translate="yes" xml:space="preserve">
          <source>Moreover, this leaves a copy of the same data behind in the &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt;. When using multiple copies of the data (by calling &lt;code&gt;read&lt;/code&gt; multiple times, or first calling &lt;code&gt;read&lt;/code&gt; and then &lt;a href=&quot;#method.assume_init&quot;&gt;&lt;code&gt;assume_init&lt;/code&gt;&lt;/a&gt;), it is your responsibility to ensure that that data may indeed be duplicated.</source>
          <target state="translated">さらに、これにより &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; 同じデータのコピーが残ります。データの複数のコピーを使用する場合（ &lt;code&gt;read&lt;/code&gt; を複数回呼び出すか、最初に &lt;code&gt;read&lt;/code&gt; を呼び出してから&lt;a href=&quot;#method.assume_init&quot;&gt; &lt;code&gt;assume_init&lt;/code&gt; を&lt;/a&gt;呼び出すことにより）、そのデータが実際に複製されることを確認するのはユーザーの責任です。</target>
        </trans-unit>
        <trans-unit id="397bb4af8d0aaad716e315cf0b7702aa85056a50" translate="yes" xml:space="preserve">
          <source>Moreover, uninitialized memory is special in that the compiler knows that it does not have a fixed value. This makes it undefined behavior to have uninitialized data in a variable even if that variable has an integer type, which otherwise can hold any &lt;em&gt;fixed&lt;/em&gt; bit pattern:</source>
          <target state="translated">さらに、初期化されていないメモリは、コンパイラが固定値を持たないことを知っているという点で特別です。これにより、変数に整数型がある場合でも、変数に初期化されていないデータがあると、未定義の動作になり、そうでなければ&lt;em&gt;固定&lt;/em&gt;ビットパターンを保持できます。</target>
        </trans-unit>
        <trans-unit id="4bf2d71e181166bc0e04b2b08dbd9deb6dcc8cfa" translate="yes" xml:space="preserve">
          <source>Most &lt;a href=&quot;statements&quot;&gt;statements&lt;/a&gt; accept outer attributes (see &lt;a href=&quot;expressions#expression-attributes&quot;&gt;Expression Attributes&lt;/a&gt; for limitations on expression statements).</source>
          <target state="translated">ほとんどの&lt;a href=&quot;statements&quot;&gt;ステートメント&lt;/a&gt;は外部属性を受け入れます（式ステートメントの制限については&lt;a href=&quot;expressions#expression-attributes&quot;&gt;式属性&lt;/a&gt;を参照してください）。</target>
        </trans-unit>
        <trans-unit id="8c3542b0039ed219b27529952c16fc4b334b235c" translate="yes" xml:space="preserve">
          <source>Most Rust developers primarily use the stable channel, but those who want to try out experimental new features may use nightly or beta.</source>
          <target state="translated">ほとんどのRust開発者は主に安定版チャンネルを使用していますが、実験的な新機能を試したい人はナイトリーやベータ版を使用することができます。</target>
        </trans-unit>
        <trans-unit id="29018cdfcbfbfce31a8ead4b336062e9b6cf7a98" translate="yes" xml:space="preserve">
          <source>Most Rust users do not use beta releases actively, but test against beta in their CI system to help Rust discover possible regressions. In the meantime, there&amp;rsquo;s still a nightly release every night:</source>
          <target state="translated">ほとんどのRustユーザーはベータリリースを積極的に使用していませんが、CIシステムでベータ版に対してテストを行うことで、Rustが可能な回帰を発見できるようにしています。それまでの間、毎晩、毎晩リリースされます。</target>
        </trans-unit>
        <trans-unit id="70da42e65bc671e9a4d71da7bf00c46172961b5b" translate="yes" xml:space="preserve">
          <source>Most collections therefore use an &lt;em&gt;amortized&lt;/em&gt; allocation strategy. They generally let themselves have a fair amount of unoccupied space so that they only have to grow on occasion. When they do grow, they allocate a substantially larger array to move the elements into so that it will take a while for another grow to be required. While this strategy is great in general, it would be even better if the collection &lt;em&gt;never&lt;/em&gt; had to resize its backing array. Unfortunately, the collection itself doesn't have enough information to do this itself. Therefore, it is up to us programmers to give it hints.</source>
          <target state="translated">そのため、ほとんどのコレクションは&lt;em&gt;償却&lt;/em&gt;配分戦略を使用しています。彼らは一般的に、彼らが時々成長するだけでよいように、彼ら自身にかなりの空きスペースを持たせました。大きくなると、要素を移動するためにかなり大きな配列を割り当てて、別の増加が必要になるまでしばらく時間がかかるようにします。この戦略は一般的には優れていますが、コレクションがバッキング配列のサイズを変更する必要が&lt;em&gt;ない&lt;/em&gt;場合はさらに優れています。残念ながら、コレクション自体には、これを行うための十分な情報がありません。したがって、ヒントを与えるのはプログラマー次第です。</target>
        </trans-unit>
        <trans-unit id="5f084859346ec0aca36a3e1b8612899686a0bd1a" translate="yes" xml:space="preserve">
          <source>Most documentation comments don&amp;rsquo;t need all of these sections, but this is a good checklist to remind you of the aspects of your code that people calling your code will be interested in knowing about.</source>
          <target state="translated">ほとんどのドキュメンテーションコメントはこれらのセクションのすべてを必要とするわけではありませんが、これは、コードを呼び出している人々が知ることに興味があるコードの側面を思い出させるための良いチェックリストです。</target>
        </trans-unit>
        <trans-unit id="5ffa244fb547e8974a04a1c03e5c30be30143ed1" translate="yes" xml:space="preserve">
          <source>Most errors aren&amp;rsquo;t serious enough to require the program to stop entirely. Sometimes, when a function fails, it&amp;rsquo;s for a reason that you can easily interpret and respond to. For example, if you try to open a file and that operation fails because the file doesn&amp;rsquo;t exist, you might want to create the file instead of terminating the process.</source>
          <target state="translated">ほとんどのエラーは、プログラムを完全に停止する必要があるほど深刻ではありません。場合によっては、関数が失敗したときに、簡単に解釈して応答できる理由があります。たとえば、ファイルを開こうとしたが、ファイルが存在しないためにその操作が失敗した場合、プロセスを終了する代わりにファイルを作成することができます。</target>
        </trans-unit>
        <trans-unit id="3ba773a5c0df60e16aeba581f5a54767ff1a24cc" translate="yes" xml:space="preserve">
          <source>Most fundamentally, &lt;code&gt;Vec&lt;/code&gt; is and always will be a (pointer, capacity, length) triplet. No more, no less. The order of these fields is completely unspecified, and you should use the appropriate methods to modify these. The pointer will never be null, so this type is null-pointer-optimized.</source>
          <target state="translated">最も基本的に、 &lt;code&gt;Vec&lt;/code&gt; は（ポインタ、容量、長さ）のトリプレットです。それ以上でもそれ以下でもありません。これらのフィールドの順序は完全に指定されていないため、適切な方法を使用してこれらを変更する必要があります。ポインターがnullになることはないため、この型はnullポインターに最適化されています。</target>
        </trans-unit>
        <trans-unit id="958f57b670c19f5ad7bbf0104c478d29e5d8679d" translate="yes" xml:space="preserve">
          <source>Most languages don&amp;rsquo;t distinguish between these two kinds of errors and handle both in the same way, using mechanisms such as exceptions. Rust doesn&amp;rsquo;t have exceptions. Instead, it has the type &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; for recoverable errors and the &lt;code&gt;panic!&lt;/code&gt; macro that stops execution when the program encounters an unrecoverable error. This chapter covers calling &lt;code&gt;panic!&lt;/code&gt; first and then talks about returning &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; values. Additionally, we&amp;rsquo;ll explore considerations when deciding whether to try to recover from an error or to stop execution.</source>
          <target state="translated">ほとんどの言語では、これら2種類のエラーを区別せず、例外などのメカニズムを使用して、両方を同じ方法で処理します。 Rustには例外はありません。代わりに、回復可能なエラーと &lt;code&gt;panic!&lt;/code&gt; 場合は、タイプ &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; になります。プログラムに回復不可能なエラーが発生したときに実行を停止するマクロ。この章では、 &lt;code&gt;panic!&lt;/code&gt; 呼び出しについて説明します。まず、 &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; 値を返すことについて説明します。さらに、エラーからの回復を試みるか、実行を停止するかを決定する際の考慮事項についても検討します。</target>
        </trans-unit>
        <trans-unit id="50f1f38b341fad6f4d56c11542754d03d8b6f10e" translate="yes" xml:space="preserve">
          <source>Most of the low-level synchronization primitives are quite error-prone and inconvenient to use, which is why the standard library also exposes some higher-level synchronization objects.</source>
          <target state="translated">低レベルの同期プリミティブのほとんどは、かなりエラーを起こしやすく不便なので、標準ライブラリでもいくつかの高レベルの同期オブジェクトを公開しています。</target>
        </trans-unit>
        <trans-unit id="45842a65c91f33ef72023fea07bcb074a0717e37" translate="yes" xml:space="preserve">
          <source>Most of the other (forward) methods have default implementations in terms of this one, so try to implement this explicitly if it can do something better than the default &lt;code&gt;for&lt;/code&gt; loop implementation.</source>
          <target state="translated">他のほとんどの（フォワード）メソッドには、これに関するデフォルトの実装があります。したがって &lt;code&gt;for&lt;/code&gt; ループのデフォルトの実装よりも優れたことができる場合は、明示的に実装してみてください。</target>
        </trans-unit>
        <trans-unit id="03c5a14179a1f6e72d19d5cfec89966bcfe49ba7" translate="yes" xml:space="preserve">
          <source>Most of the time when specifying one of the &lt;code&gt;Fn&lt;/code&gt; trait bounds, you can start with &lt;code&gt;Fn&lt;/code&gt; and the compiler will tell you if you need &lt;code&gt;FnMut&lt;/code&gt; or &lt;code&gt;FnOnce&lt;/code&gt; based on what happens in the closure body.</source>
          <target state="translated">一つを指定するときの時間のほとんど &lt;code&gt;Fn&lt;/code&gt; 特色境界は、あなたが始めることができる &lt;code&gt;Fn&lt;/code&gt; とあなたが必要な場合、コンパイラはあなたを教えてくれます &lt;code&gt;FnMut&lt;/code&gt; または &lt;code&gt;FnOnce&lt;/code&gt; を閉鎖体に何が起こるかに基づきます。</target>
        </trans-unit>
        <trans-unit id="da4e141fca4e0afe1cd6ac0675436058c611eefb" translate="yes" xml:space="preserve">
          <source>Most platforms fundamentally can't even construct such an allocation. For instance, no known 64-bit platform can ever serve a request for 2&lt;sup&gt;63&lt;/sup&gt; bytes due to page-table limitations or splitting the address space. However, some 32-bit and 16-bit platforms may successfully serve a request for more than &lt;code&gt;isize::MAX&lt;/code&gt; bytes with things like Physical Address Extension. As such, memory acquired directly from allocators or memory mapped files &lt;em&gt;may&lt;/em&gt; be too large to handle with this function.</source>
          <target state="translated">ほとんどのプラットフォームは、基本的にそのような割り当てを構築することさえできません。たとえば、既知の64ビットプラットフォームでは、ページテーブルの制限やアドレス空間の分割により、2 &lt;sup&gt;63&lt;/sup&gt;バイトのリクエストを処理できません。ただし、一部の32ビットおよび16ビットプラットフォームでは、物理アドレス拡張などの &lt;code&gt;isize::MAX&lt;/code&gt; バイトを超えるリクエストを正常に処理できる場合があります。そのため、アロケータから直接取得したメモリまたはメモリマップファイル&lt;em&gt;は&lt;/em&gt;、この関数で処理するには大きすぎる&lt;em&gt;場合&lt;/em&gt;があります。</target>
        </trans-unit>
        <trans-unit id="9f7b392b93b303d14e5eba66f48c56491e04e2b1" translate="yes" xml:space="preserve">
          <source>Most primitives are generally aligned to their size, although this is platform-specific behavior. In particular, on x86 u64 and f64 are only aligned to 32 bits.</source>
          <target state="translated">ほとんどのプリミティブは一般的にそのサイズにアラインメントされていますが、これはプラットフォーム固有の動作です。特に、x86ではu64とf64は32ビットにのみアラインメントされています。</target>
        </trans-unit>
        <trans-unit id="5ff0d1ff3d2d4c051c8f323ba109968c86507f39" translate="yes" xml:space="preserve">
          <source>Most string operations in Rust act on UTF-8 strings. However, at times it makes more sense to only consider the ASCII character set for a specific operation.</source>
          <target state="translated">Rust のほとんどの文字列操作は UTF-8 文字列で動作します。しかし、特定の操作のために ASCII 文字セットだけを考慮する方が理にかなっている場合もあります。</target>
        </trans-unit>
        <trans-unit id="9677cb4403181dff567b3b3138809fbca5b2b3a3" translate="yes" xml:space="preserve">
          <source>Most types have a fixed size that is known at compile time and implement the trait &lt;a href=&quot;special-types-and-traits#sized&quot;&gt;&lt;code&gt;Sized&lt;/code&gt;&lt;/a&gt;. A type with a size that is known only at run-time is called a &lt;em&gt;dynamically sized type&lt;/em&gt; (&lt;em&gt;DST&lt;/em&gt;) or, informally, an unsized type. &lt;a href=&quot;types/slice&quot;&gt;Slices&lt;/a&gt; and &lt;a href=&quot;types/trait-object&quot;&gt;trait objects&lt;/a&gt; are two examples of</source>
          <target state="translated">ほとんどの型は、コンパイル時に認識され、&lt;a href=&quot;special-types-and-traits#sized&quot;&gt; &lt;code&gt;Sized&lt;/code&gt; &lt;/a&gt;特性を実装する固定サイズを持っています。実行時にのみ既知のサイズを持つ型は、&lt;em&gt;動的サイズ型&lt;/em&gt;（&lt;em&gt;DST&lt;/em&gt;）または非公式には&lt;em&gt;サイズなし型&lt;/em&gt;と呼ばれます。&lt;a href=&quot;types/slice&quot;&gt;スライス&lt;/a&gt;と&lt;a href=&quot;types/trait-object&quot;&gt;トレイトオブジェクト&lt;/a&gt;は2つの例です</target>
        </trans-unit>
        <trans-unit id="ef68ca25c12250d53c99628a48a2f0197abb8a8a" translate="yes" xml:space="preserve">
          <source>Most types implement &lt;code&gt;Any&lt;/code&gt;. However, any type which contains a non-&lt;code&gt;'static&lt;/code&gt; reference does not. See the &lt;a href=&quot;index&quot;&gt;module-level documentation&lt;/a&gt; for more details.</source>
          <target state="translated">ほとんどの型は &lt;code&gt;Any&lt;/code&gt; を実装します。ただし、非 &lt;code&gt;'static&lt;/code&gt; 参照を含む型は含まれません。詳細については、&lt;a href=&quot;index&quot;&gt;モジュールレベルのドキュメント&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="0c6631c82a54c3f6386b2c06a91b566d27239d41" translate="yes" xml:space="preserve">
          <source>Most types in the standard library are marked &lt;code&gt;Clone&lt;/code&gt;. The example below demonstrates using &lt;code&gt;clone()&lt;/code&gt; on a string. &lt;code&gt;s1&lt;/code&gt; is first set to &quot;many&quot;, and then copied to &lt;code&gt;s2&lt;/code&gt;. Then the first character of &lt;code&gt;s1&lt;/code&gt; is removed, without affecting &lt;code&gt;s2&lt;/code&gt;. &quot;any many&quot; is printed to the console.</source>
          <target state="translated">標準ライブラリのほとんどのタイプには、 &lt;code&gt;Clone&lt;/code&gt; マークされています。以下の例は、文字列で &lt;code&gt;clone()&lt;/code&gt; を使用する方法を示しています。 &lt;code&gt;s1&lt;/code&gt; は最初に「多数」に設定され、次に &lt;code&gt;s2&lt;/code&gt; にコピーされます。次に、 &lt;code&gt;s2&lt;/code&gt; に影響を与えることなく、 &lt;code&gt;s1&lt;/code&gt; の最初の文字が削除されます。&quot;any many&quot;がコンソールに出力されます。</target>
        </trans-unit>
        <trans-unit id="1cd742a9ceccf5d20629665bf40182605100b10d" translate="yes" xml:space="preserve">
          <source>Move a value from a &lt;a href=&quot;struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt; back to the stack by &lt;a href=&quot;../ops/trait.deref&quot;&gt;dereferencing&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;struct.box&quot;&gt; &lt;code&gt;Box&lt;/code&gt; &lt;/a&gt;から値を&lt;a href=&quot;../ops/trait.deref&quot;&gt;逆参照&lt;/a&gt;してスタックに戻します。</target>
        </trans-unit>
        <trans-unit id="935c4f1405b15e5b82bfb04029f450ae632b8671" translate="yes" xml:space="preserve">
          <source>Move a value from the stack to the heap by creating a &lt;a href=&quot;struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;struct.box&quot;&gt; &lt;code&gt;Box&lt;/code&gt; を&lt;/a&gt;作成して、スタックからヒープに値を移動します。</target>
        </trans-unit>
        <trans-unit id="94b892ad1fea415b769a9bdfa76a946da0a37855" translate="yes" xml:space="preserve">
          <source>Move bindings and reference bindings can be mixed together in the same pattern, doing so will result in partial move of the object bound to and the object cannot be used afterwards. This applies only if the type cannot be copied.</source>
          <target state="translated">移動バインディングと参照バインディングを同じパターンで混在させることができますが、そうすると、バインドされたオブジェクトが部分的に移動してしまい、その後オブジェクトを使用することができなくなります。これは、型がコピーできない場合にのみ適用されます。</target>
        </trans-unit>
        <trans-unit id="f29cd020e7c547e08e26acc9ffed915241bec615" translate="yes" xml:space="preserve">
          <source>Moved and copied types</source>
          <target state="translated">タイプの移動とコピー</target>
        </trans-unit>
        <trans-unit id="53a1d8932db0e6bed87e33c7d5de8c0af8087c52" translate="yes" xml:space="preserve">
          <source>Moves &lt;code&gt;src&lt;/code&gt; into the pointed &lt;code&gt;dst&lt;/code&gt;, returning the previous &lt;code&gt;dst&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; をポイントされた &lt;code&gt;dst&lt;/code&gt; に移動し、前の &lt;code&gt;dst&lt;/code&gt; 値を返します。</target>
        </trans-unit>
        <trans-unit id="e3dcdde14c3aa147dfabeae55330264c813b1e5a" translate="yes" xml:space="preserve">
          <source>Moves &lt;code&gt;src&lt;/code&gt; into the referenced &lt;code&gt;dest&lt;/code&gt;, returning the previous &lt;code&gt;dest&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; を参照される &lt;code&gt;dest&lt;/code&gt; に移動し、前の &lt;code&gt;dest&lt;/code&gt; 値を返します。</target>
        </trans-unit>
        <trans-unit id="4050f7b0941c8fb8f727572a7c43d5df8fbbe3d3" translate="yes" xml:space="preserve">
          <source>Moves a value out of scope without running drop glue.</source>
          <target state="translated">ドロップグルーを実行せずに値をスコープ外に移動します。</target>
        </trans-unit>
        <trans-unit id="3449cde17e65d98095b98828c5cc0579f71b4cf8" translate="yes" xml:space="preserve">
          <source>Moves a value to an uninitialized memory location.</source>
          <target state="translated">初期化されていないメモリの場所に値を移動します。</target>
        </trans-unit>
        <trans-unit id="8d36e10d798f7d8f015f1a268ea8a4f001de9e7a" translate="yes" xml:space="preserve">
          <source>Moves all but the first of consecutive elements to the end of the slice satisfying a given equality relation.</source>
          <target state="translated">連続した要素のうち、最初の要素を除いたすべての要素を、与えられた平等関係を満たすスライスの最後に移動します。</target>
        </trans-unit>
        <trans-unit id="90dc92e249e4045f2df19fe5863b01f0d381a1dd" translate="yes" xml:space="preserve">
          <source>Moves all but the first of consecutive elements to the end of the slice that resolve to the same key.</source>
          <target state="translated">連続した要素のうち、最初の要素を除いたすべての要素を、同じキーに解決するスライスの最後に移動します。</target>
        </trans-unit>
        <trans-unit id="7b51346776885a3c951f1374a27a37ab6fa4ba64" translate="yes" xml:space="preserve">
          <source>Moves all consecutive repeated elements to the end of the slice according to the &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;&lt;code&gt;PartialEq&lt;/code&gt;&lt;/a&gt; trait implementation.</source>
          <target state="translated">&lt;a href=&quot;../cmp/trait.partialeq&quot;&gt; &lt;code&gt;PartialEq&lt;/code&gt; &lt;/a&gt;トレイトの実装に従って、連続するすべての繰り返し要素をスライスの最後に移動します。</target>
        </trans-unit>
        <trans-unit id="dd2eef506f42784c3edada1784459627524feac1" translate="yes" xml:space="preserve">
          <source>Moves all consecutive repeated elements to the end of the slice according to the &lt;a href=&quot;cmp/trait.partialeq&quot;&gt;&lt;code&gt;PartialEq&lt;/code&gt;&lt;/a&gt; trait implementation.</source>
          <target state="translated">&lt;a href=&quot;cmp/trait.partialeq&quot;&gt; &lt;code&gt;PartialEq&lt;/code&gt; &lt;/a&gt;トレイトの実装に従って、連続するすべての繰り返し要素をスライスの最後に移動します。</target>
        </trans-unit>
        <trans-unit id="5fe424ea4e0a685b7c23ffeca2e9899213584477" translate="yes" xml:space="preserve">
          <source>Moves all elements from &lt;code&gt;other&lt;/code&gt; into &lt;code&gt;Self&lt;/code&gt;, leaving &lt;code&gt;other&lt;/code&gt; empty.</source>
          <target state="translated">すべての要素を &lt;code&gt;other&lt;/code&gt; から &lt;code&gt;Self&lt;/code&gt; に移動し、 &lt;code&gt;other&lt;/code&gt; は空のままにします。</target>
        </trans-unit>
        <trans-unit id="8e1c0e5843f20567dd9c23dda304f99a13d895f0" translate="yes" xml:space="preserve">
          <source>Moves all elements from &lt;code&gt;other&lt;/code&gt; to the begin of the list.</source>
          <target state="translated">すべての要素を &lt;code&gt;other&lt;/code&gt; 要素からリストの先頭に移動します。</target>
        </trans-unit>
        <trans-unit id="c67d917da3329c924a5ed3bfdafb74f3c2d27351" translate="yes" xml:space="preserve">
          <source>Moves all elements from &lt;code&gt;other&lt;/code&gt; to the end of the list.</source>
          <target state="translated">すべての要素を &lt;code&gt;other&lt;/code&gt; 要素からリストの最後に移動します。</target>
        </trans-unit>
        <trans-unit id="e19c427e120934a6f18591f019a5d8d7c8c9bb90" translate="yes" xml:space="preserve">
          <source>Moves all the elements of &lt;code&gt;other&lt;/code&gt; into &lt;code&gt;Self&lt;/code&gt;, leaving &lt;code&gt;other&lt;/code&gt; empty.</source>
          <target state="translated">&lt;code&gt;other&lt;/code&gt; のすべての要素を &lt;code&gt;Self&lt;/code&gt; に移動し、 &lt;code&gt;other&lt;/code&gt; は空のままにします。</target>
        </trans-unit>
        <trans-unit id="394ed70dc750ade766d8a7affdf104389ae4a41b" translate="yes" xml:space="preserve">
          <source>Moves all the elements of &lt;code&gt;other&lt;/code&gt; into &lt;code&gt;self&lt;/code&gt;, leaving &lt;code&gt;other&lt;/code&gt; empty.</source>
          <target state="translated">&lt;code&gt;other&lt;/code&gt; のすべての要素を &lt;code&gt;self&lt;/code&gt; に移動し、 &lt;code&gt;other&lt;/code&gt; は空のままにします。</target>
        </trans-unit>
        <trans-unit id="066a26ceff1a71981759aebbd334cdcd82a5696f" translate="yes" xml:space="preserve">
          <source>Moves the cursor to the next element of the &lt;code&gt;LinkedList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinkedList&lt;/code&gt; の次の要素にカーソルを移動します。</target>
        </trans-unit>
        <trans-unit id="c836d6bf5360e4a23ec5c0ddea08ea90d75c9118" translate="yes" xml:space="preserve">
          <source>Moves the cursor to the previous element of the &lt;code&gt;LinkedList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinkedList&lt;/code&gt; の前の要素にカーソルを移動します。</target>
        </trans-unit>
        <trans-unit id="4081ad7604822fc3863325bfbc9c6b23eefd10c5" translate="yes" xml:space="preserve">
          <source>Moves the socket into or out of nonblocking mode.</source>
          <target state="translated">ソケットをノンブロッキングモードにするか、ノンブロッキングモードから外すかを選択します。</target>
        </trans-unit>
        <trans-unit id="3f132740261eaea1c058f822397565c2ea169662" translate="yes" xml:space="preserve">
          <source>Moves the value &lt;code&gt;v&lt;/code&gt; out of the &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; if it is &lt;a href=&quot;#variant.Some&quot;&gt;&lt;code&gt;Some(v)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">値 &lt;code&gt;v&lt;/code&gt; が&lt;a href=&quot;#variant.Some&quot;&gt; &lt;code&gt;Some(v)&lt;/code&gt; の&lt;/a&gt;場合、 &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; 外に移動します。</target>
        </trans-unit>
        <trans-unit id="d923a42481a31c898588f7632c4104ccc079b9a8" translate="yes" xml:space="preserve">
          <source>Moves this TCP stream into or out of nonblocking mode.</source>
          <target state="translated">この TCP ストリームをノンブロッキング・モードにするかどうかを指定します。</target>
        </trans-unit>
        <trans-unit id="857058a663cc2ef223e5bcf3b913916ca7203127" translate="yes" xml:space="preserve">
          <source>Moves this UDP socket into or out of nonblocking mode.</source>
          <target state="translated">このUDPソケットをノンブロッキングモードにしたり、ノンブロッキングモードから抜けたりします。</target>
        </trans-unit>
        <trans-unit id="35fbed2269b14f8388d3641b845768d91a9c88f6" translate="yes" xml:space="preserve">
          <source>Moving a member out of a mutably borrowed struct will also cause E0507 error:</source>
          <target state="translated">変異的に借用された構造体からメンバを移動すると、E0507 エラーも発生します。</target>
        </trans-unit>
        <trans-unit id="4f45a6d62a116cf766d4acf9ec5d831a79f46388" translate="yes" xml:space="preserve">
          <source>Moving out of a place expression that evaluates to a local variable, the location is deinitialized and cannot be read from again until it is reinitialized. In all other cases, trying to use a place expression in a value expression context is an error.</source>
          <target state="translated">ローカル変数に評価される場所式から移動すると、その場所は初期化されず、再初期化されるまで再度読み出すことができません。それ以外のすべての場合、値式コンテキストで場所式を使用しようとするとエラーになります。</target>
        </trans-unit>
        <trans-unit id="84acd8bc955a67b3e57fc5d4e1f21da9ff4cd61d" translate="yes" xml:space="preserve">
          <source>Mul</source>
          <target state="translated">Mul</target>
        </trans-unit>
        <trans-unit id="a44823a91768e5e95df3efe5561280bcca377a9b" translate="yes" xml:space="preserve">
          <source>Mul::mul</source>
          <target state="translated">Mul::mul</target>
        </trans-unit>
        <trans-unit id="66a17e016059d249b4c2e6eaead00d3ff5892a8d" translate="yes" xml:space="preserve">
          <source>MulAssign</source>
          <target state="translated">MulAssign</target>
        </trans-unit>
        <trans-unit id="644d3414fe5aac6848364363e1259070e386b29c" translate="yes" xml:space="preserve">
          <source>MulAssign::mul_assign</source>
          <target state="translated">MulAssign::mul_assign</target>
        </trans-unit>
        <trans-unit id="a83f62b59a24bf7ff1d2e1176308d59c260a2d7c" translate="yes" xml:space="preserve">
          <source>Multi-producer, single-consumer FIFO queue communication primitives.</source>
          <target state="translated">マルチプロデューサ、シングルコンシューマFIFOキュー通信プリミティブ。</target>
        </trans-unit>
        <trans-unit id="e8f275576880c08d9cb72256ebb5c5550da0ae5f" translate="yes" xml:space="preserve">
          <source>Multicast addresses have a most significant octet between 224 and 239, and is defined by &lt;a href=&quot;https://tools.ietf.org/html/rfc5771&quot;&gt;IETF RFC 5771&lt;/a&gt;.</source>
          <target state="translated">マルチキャストアドレスは、224から239までの最も重要なオクテットを持ち、&lt;a href=&quot;https://tools.ietf.org/html/rfc5771&quot;&gt;IETF RFC 5771で&lt;/a&gt;定義されています。</target>
        </trans-unit>
        <trans-unit id="131527b580414c642a15e34f9b2b06ac063866dc" translate="yes" xml:space="preserve">
          <source>Multiple &lt;code id=&quot;multiple-impl-blocks&quot;&gt;impl&lt;/code&gt; Blocks</source>
          <target state="translated">複数の &lt;code id=&quot;multiple-impl-blocks&quot;&gt;impl&lt;/code&gt; ブロック</target>
        </trans-unit>
        <trans-unit id="3ba016b087265e8c0df188a419d0407dbc2db032" translate="yes" xml:space="preserve">
          <source>Multiple Ownership with Multiple Threads</source>
          <target state="translated">複数スレッドでの複数所有</target>
        </trans-unit>
        <trans-unit id="96799ac6d39880a60f56792870e3f698a44d9f25" translate="yes" xml:space="preserve">
          <source>Multiple Patterns</source>
          <target state="translated">複数のパターン</target>
        </trans-unit>
        <trans-unit id="880b82e87c7718d117edf6049c501691c39d7707" translate="yes" xml:space="preserve">
          <source>Multiple candidate files were found for an out-of-line module.</source>
          <target state="translated">行外のモジュールで複数の候補ファイルが見つかりました。</target>
        </trans-unit>
        <trans-unit id="bd944a217bb8ced4adfb9b29cccccdde6f94d8b2" translate="yes" xml:space="preserve">
          <source>Multiple closures can be registered and they will be called in order of their registration. If a closure returns &lt;code&gt;Err&lt;/code&gt; then no further closures will be called and the spawn operation will immediately return with a failure.</source>
          <target state="translated">複数のクロージャを登録でき、登録順に呼び出されます。クロージャーが &lt;code&gt;Err&lt;/code&gt; を返した場合、それ以上のクロージャーは呼び出されず、spawn操作はすぐに失敗して戻ります。</target>
        </trans-unit>
        <trans-unit id="f8bfe4a1f8665d86c42967d287e06dcfdbd2a416" translate="yes" xml:space="preserve">
          <source>Multiple in-scope traits define methods with the same name for the same types</source>
          <target state="translated">複数のインスコープ形質は、同じ型のために同じ名前のメソッドを定義します。</target>
        </trans-unit>
        <trans-unit id="7f57fc35ae9f13c2759a07f510481de830ebcb1f" translate="yes" xml:space="preserve">
          <source>Multiple match patterns may be joined with the &lt;code&gt;|&lt;/code&gt; operator. Each pattern will be tested in left-to-right sequence until a successful match is found.</source>
          <target state="translated">&lt;code&gt;|&lt;/code&gt; で複数の一致パターンを結合できます。オペレーター。各パターンは、一致が見つかるまで、左から右の順序でテストされます。</target>
        </trans-unit>
        <trans-unit id="32acf98c4434cd3afcb06d0594c524c0d173439d" translate="yes" xml:space="preserve">
          <source>Multiple patterns may be specified with the &lt;code&gt;|&lt;/code&gt; operator. This has the same semantics as with &lt;code&gt;|&lt;/code&gt; in &lt;code&gt;match&lt;/code&gt; expressions:</source>
          <target state="translated">&lt;code&gt;|&lt;/code&gt; で複数のパターンを指定できます。オペレーター。これは &lt;code&gt;|&lt;/code&gt; と同じセマンティクスを持っています で &lt;code&gt;match&lt;/code&gt; 表現：</target>
        </trans-unit>
        <trans-unit id="3cbe1704448a8be6f6cb7b5df8bbc8ae2c951a0e" translate="yes" xml:space="preserve">
          <source>Multiple types were used as bounds for a closure or trait object.</source>
          <target state="translated">複数のタイプがクロージャまたは特徴オブジェクトの境界として使用されていました。</target>
        </trans-unit>
        <trans-unit id="61688d36e37f9b0059485c05c26bf5dbf9d908fa" translate="yes" xml:space="preserve">
          <source>Multiple variables can be defined with the same name, known as shadowing. This doesn't affect the original variable in any way beyond being unable to directly access it beyond the point of shadowing. It continues to remain in scope, getting dropped only when it falls out of scope. Shadowed variables don't need to have the same type as the variables shadowing them.</source>
          <target state="translated">複数の変数を同じ名前で定義することができます。これは、シャドウイングのポイントを超えて直接アクセスできなくなることを超えて、元の変数には何ら影響を与えません。シャドウイングされた変数はスコープ内に残り、スコープ外になったときだけ削除されます。シャドウイングされた変数は、シャドウイングされた変数と同じ型を持つ必要はありません。</target>
        </trans-unit>
        <trans-unit id="0a28713b802733c23cc35ef454d3f1c1fc36efdc" translate="yes" xml:space="preserve">
          <source>Multiple variables can interact with the same data in different ways in Rust. Let&amp;rsquo;s look at an example using an integer in Listing 4-2.</source>
          <target state="translated">Rustでは、複数の変数が異なる方法で同じデータと対話できます。リスト4-2の整数を使用した例を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="2b9ee6e2b5fcdbd970e8f069acf17877e49e0441" translate="yes" xml:space="preserve">
          <source>Multiplication</source>
          <target state="translated">Multiplication</target>
        </trans-unit>
        <trans-unit id="bc5f7a8e3f6c574a340d00ceb468d9ad4997d1a2" translate="yes" xml:space="preserve">
          <source>Multiplication assignment</source>
          <target state="translated">掛け算の割り当て</target>
        </trans-unit>
        <trans-unit id="20018a803d4e69df922c16d0019e2f27ede1b107" translate="yes" xml:space="preserve">
          <source>Multiplies &lt;code&gt;Duration&lt;/code&gt; by &lt;code&gt;f32&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Duration&lt;/code&gt; に &lt;code&gt;f32&lt;/code&gt; を乗算します。</target>
        </trans-unit>
        <trans-unit id="05f59b6c6a4f48034c9df701431f127015086e9c" translate="yes" xml:space="preserve">
          <source>Multiplies &lt;code&gt;Duration&lt;/code&gt; by &lt;code&gt;f64&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Duration&lt;/code&gt; に &lt;code&gt;f64&lt;/code&gt; を乗算します。</target>
        </trans-unit>
        <trans-unit id="5e4385922c1cb179c0fef470b33c3151d7e99ec3" translate="yes" xml:space="preserve">
          <source>Multiplying vectors by scalars as in linear algebra</source>
          <target state="translated">線形代数のようにスカラーでベクトルを乗算する</target>
        </trans-unit>
        <trans-unit id="0b624351b5cd3201f9dffff20f656615d250adb4" translate="yes" xml:space="preserve">
          <source>Must always be called with exactly two arguments, e.g., &lt;code&gt;f(2, &quot;test&quot;)&lt;/code&gt;.</source>
          <target state="translated">常に2つの引数を指定して呼び出す必要があります（例： &lt;code&gt;f(2, &quot;test&quot;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0b79f8e4890c8608e67c29a1e344d765772f2753" translate="yes" xml:space="preserve">
          <source>Mutability</source>
          <target state="translated">Mutability</target>
        </trans-unit>
        <trans-unit id="25bc44284f7469aa18ce8d2018ebb79f8bda5466" translate="yes" xml:space="preserve">
          <source>Mutability:</source>
          <target state="translated">Mutability:</target>
        </trans-unit>
        <trans-unit id="2254ac7d15b79a3982ee657fd941675d1118b345" translate="yes" xml:space="preserve">
          <source>Mutable &lt;a href=&quot;variables&quot;&gt;variables&lt;/a&gt;, which are not currently borrowed.</source>
          <target state="translated">変更可能な&lt;a href=&quot;variables&quot;&gt;変数は&lt;/a&gt;、現在借りていません。</target>
        </trans-unit>
        <trans-unit id="51d947bca6dc6daa21fd55054748064504d465b5" translate="yes" xml:space="preserve">
          <source>Mutable &lt;code&gt;static&lt;/code&gt;s</source>
          <target state="translated">可変 &lt;code&gt;static&lt;/code&gt; 秒</target>
        </trans-unit>
        <trans-unit id="73a6ca773e0129ab88c342db95a16c2e597fe027" translate="yes" xml:space="preserve">
          <source>Mutable &lt;code&gt;static&lt;/code&gt;s, just like simple &lt;code&gt;static&lt;/code&gt;s, have some restrictions that apply to them. See the &lt;a href=&quot;../reference/items/static-items&quot;&gt;Reference&lt;/a&gt; for more information.</source>
          <target state="translated">可変 &lt;code&gt;static&lt;/code&gt; 、単純な &lt;code&gt;static&lt;/code&gt; と同様に、それらに適用されるいくつかの制限があります。詳細については、&lt;a href=&quot;../reference/items/static-items&quot;&gt;リファレンス&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="a85864e0508044cfca06bb749d86a2d95063aada" translate="yes" xml:space="preserve">
          <source>Mutable References</source>
          <target state="translated">互換性のある参照</target>
        </trans-unit>
        <trans-unit id="4ae4e12cbc02746a1ff720435f4bc1ce18747dba" translate="yes" xml:space="preserve">
          <source>Mutable borrows are not allowed in pattern guards, because matching cannot have side effects. Side effects could alter the matched object or the environment on which the match depends in such a way, that the match would not be exhaustive. For instance, the following would not match any arm if mutable borrows were allowed:</source>
          <target state="translated">パターンガードでは、マッチングに副作用を持たせることができないため、ミューータブルボローは許可されていません。副作用とは、マッチしたオブジェクトやマッチが依存する環境を変更することで、マッチが完全なものではなくなる可能性があります。例えば、以下のようなものは、ミューータブルボローが許可されている場合、どのアームにもマッチしません。</target>
        </trans-unit>
        <trans-unit id="bce9ec15c27b88a115b07a4fb0bd820131127a3c" translate="yes" xml:space="preserve">
          <source>Mutable raw pointers work much like mutable references, with the added possibility of not pointing to a valid object. The syntax is &lt;code&gt;*mut Type&lt;/code&gt;.</source>
          <target state="translated">可変のrawポインターは、可変参照とほとんど同じように機能しますが、有効なオブジェクトを指さない可能性があります。構文は &lt;code&gt;*mut Type&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="14a50cb6021aef34ebbadd3bdc8e0a2c8aa37b86" translate="yes" xml:space="preserve">
          <source>Mutable references (&lt;code id=&quot;mutable-references-mut&quot;&gt;&amp;amp;mut&lt;/code&gt;)</source>
          <target state="translated">可変参照（ &lt;code id=&quot;mutable-references-mut&quot;&gt;&amp;amp;mut&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="5fa3b51295b66d6f308b38cdc6ecce7d889c5606" translate="yes" xml:space="preserve">
          <source>Mutable references (&lt;code&gt;&amp;amp;mut&lt;/code&gt;)</source>
          <target state="translated">可変参照（ &lt;code&gt;&amp;amp;mut&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="ec3c63093396d50094aef9c95a4bb18d50ec6b9d" translate="yes" xml:space="preserve">
          <source>Mutable references (&lt;code&gt;&amp;amp;mut&lt;/code&gt;) can only be used in constant functions, not statics or constants. This limitation exists to prevent the creation of constants that have a mutable reference in their final value. If you had a constant of &lt;code&gt;&amp;amp;mut i32&lt;/code&gt; type, you could modify the value through that reference, making the constant essentially mutable.</source>
          <target state="translated">可変参照（ &lt;code&gt;&amp;amp;mut&lt;/code&gt; ）は定数関数でのみ使用でき、静的関数や定数では使用できません。この制限は、最終値に変更可能な参照を持つ定数の作成を防ぐために存在します。 &lt;code&gt;&amp;amp;mut i32&lt;/code&gt; タイプの定数がある場合は、その参照を介して値を変更し、定数を本質的に変更可能にすることができます。</target>
        </trans-unit>
        <trans-unit id="807698746e1bb008f7832bb9ecf71b91a1a6d75d" translate="yes" xml:space="preserve">
          <source>Mutable slice iterator.</source>
          <target state="translated">変形可能なスライスイテレータ。</target>
        </trans-unit>
        <trans-unit id="d378259ee8c41de8764dfe80d547382a8bfb9a6d" translate="yes" xml:space="preserve">
          <source>Mutable statics</source>
          <target state="translated">可換性のある静態</target>
        </trans-unit>
        <trans-unit id="251e4f7a695616bf015910b905cc56d4d0cdcb5d" translate="yes" xml:space="preserve">
          <source>Mutable statics are still very useful, however. They can be used with C libraries and can also be bound from C libraries in an &lt;code&gt;extern&lt;/code&gt; block.</source>
          <target state="translated">ただし、変更可能な静的変数は依然として非常に便利です。これらはCライブラリで使用でき、Cライブラリから &lt;code&gt;extern&lt;/code&gt; ブロックでバインドすることもできます。</target>
        </trans-unit>
        <trans-unit id="35a250da62f146757b2bb997376c9c1f1b0697e9" translate="yes" xml:space="preserve">
          <source>Mutable statics have the same restrictions as normal statics, except that the type does not have to implement the &lt;code&gt;Sync&lt;/code&gt; trait.</source>
          <target state="translated">変更可能なstaticには、型が &lt;code&gt;Sync&lt;/code&gt; トレイトを実装する必要がないことを除いて、通常のstaticと同じ制限があります。</target>
        </trans-unit>
        <trans-unit id="07709586244d2902e96feb26498a180327651bfb" translate="yes" xml:space="preserve">
          <source>Mutably borrows from an owned value.</source>
          <target state="translated">所有している価値から相互に借りています。</target>
        </trans-unit>
        <trans-unit id="23aec1af14256dd29e38ccd00f64d7409572720f" translate="yes" xml:space="preserve">
          <source>Mutably borrows from an owned value. &lt;a href=&quot;../../../borrow/trait.borrowmut#tymethod.borrow_mut&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">所有価値からミュータブルに借ります。&lt;a href=&quot;../../../borrow/trait.borrowmut#tymethod.borrow_mut&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="36185fe04a97d1f6f42e66edf6e3f3db3976acc8" translate="yes" xml:space="preserve">
          <source>Mutably borrows from an owned value. &lt;a href=&quot;../../borrow/trait.borrowmut#tymethod.borrow_mut&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">所有価値からミュータブルに借ります。&lt;a href=&quot;../../borrow/trait.borrowmut#tymethod.borrow_mut&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="be90a7bb28ce0ba66b4185070fafdd998508baca" translate="yes" xml:space="preserve">
          <source>Mutably borrows from an owned value. &lt;a href=&quot;../borrow/trait.borrowmut#tymethod.borrow_mut&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">所有価値からミュータブルに借ります。&lt;a href=&quot;../borrow/trait.borrowmut#tymethod.borrow_mut&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2b075f3b74cbfcb7773b9c81d1913acc5fe6e0e1" translate="yes" xml:space="preserve">
          <source>Mutably borrows from an owned value. &lt;a href=&quot;borrow/trait.borrowmut#tymethod.borrow_mut&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">所有価値からミュータブルに借ります。&lt;a href=&quot;borrow/trait.borrowmut#tymethod.borrow_mut&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="002d34554fc3a003b69453f4fa394932bfeb64d7" translate="yes" xml:space="preserve">
          <source>Mutably borrows from an owned value. &lt;a href=&quot;trait.borrowmut#tymethod.borrow_mut&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">所有価値からミュータブルに借ります。&lt;a href=&quot;trait.borrowmut#tymethod.borrow_mut&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0525184a8828ec5244bc08eb3db976fa38e4d393" translate="yes" xml:space="preserve">
          <source>Mutably borrows the wrapped value, returning an error if the value is currently borrowed.</source>
          <target state="translated">ラップされた値を相互に借用し、値が現在借用されている場合はエラーを返します。</target>
        </trans-unit>
        <trans-unit id="d6eb72446fb5d0e81d80186c2aea34036d37a462" translate="yes" xml:space="preserve">
          <source>Mutably borrows the wrapped value.</source>
          <target state="translated">ラップされた値を相互に借ります。</target>
        </trans-unit>
        <trans-unit id="95331faeca1dbc6cb40218f815911edfe0146d93" translate="yes" xml:space="preserve">
          <source>Mutably dereferences the content.</source>
          <target state="translated">コンテンツを変異的にデフォールトします。</target>
        </trans-unit>
        <trans-unit id="7fef57cb29809c3fdf7ff34d83de2555ca5dd2c0" translate="yes" xml:space="preserve">
          <source>Mutably dereferences the value.</source>
          <target state="translated">値を変異的にデフォールトします。</target>
        </trans-unit>
        <trans-unit id="4ee0c78f0e77bb758490b62387f47c9c2280d3cb" translate="yes" xml:space="preserve">
          <source>Mutate &lt;a href=&quot;keyword.static&quot;&gt;&lt;code&gt;static&lt;/code&gt;&lt;/a&gt;s (including &lt;a href=&quot;keyword.extern&quot;&gt;&lt;code&gt;extern&lt;/code&gt;&lt;/a&gt;al ones)</source>
          <target state="translated">変異&lt;a href=&quot;keyword.static&quot;&gt; &lt;code&gt;static&lt;/code&gt; &lt;/a&gt;（含む複数&lt;a href=&quot;keyword.extern&quot;&gt; &lt;code&gt;extern&lt;/code&gt; &lt;/a&gt;らのもの）</target>
        </trans-unit>
        <trans-unit id="9fe085d236e81b702bb73ff5289610fb669f5333" translate="yes" xml:space="preserve">
          <source>Mutating immutable data. All data inside a &lt;a href=&quot;items/constant-items&quot;&gt;&lt;code&gt;const&lt;/code&gt;&lt;/a&gt; item is immutable. Moreover, all data reached through a shared reference or data owned by an immutable binding is immutable, unless that data is contained within an &lt;a href=&quot;../std/cell/struct.unsafecell&quot;&gt;&lt;code&gt;UnsafeCell&amp;lt;U&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">不変データの変更。&lt;a href=&quot;items/constant-items&quot;&gt; &lt;code&gt;const&lt;/code&gt; &lt;/a&gt;アイテム内のすべてのデータは不変です。さらに、共有参照を介して到達したすべてのデータ、または不変のバインディングが所有するデータは、そのデータが&lt;a href=&quot;../std/cell/struct.unsafecell&quot;&gt; &lt;code&gt;UnsafeCell&amp;lt;U&amp;gt;&lt;/code&gt; &lt;/a&gt;内に含まれていない限り、不変です。</target>
        </trans-unit>
        <trans-unit id="5a1c46d3df93a0f32072ac195f523e3a373551b5" translate="yes" xml:space="preserve">
          <source>Mutating implementations of &lt;code&gt;Clone&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Clone&lt;/code&gt; 実装の変更</target>
        </trans-unit>
        <trans-unit id="db6b11e1ed5a87b6d2dff2e54357e35132e62505" translate="yes" xml:space="preserve">
          <source>Mutating implementations of &lt;code&gt;Clone&lt;/code&gt;.</source>
          <target state="translated">実装変異 &lt;code&gt;Clone&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f427230fb9092700678c0b5c69e93d76d2146f74" translate="yes" xml:space="preserve">
          <source>Mutating non-mutable data &amp;mdash; that is, data reached through a shared reference or data owned by a &lt;code&gt;let&lt;/code&gt; binding), unless that data is contained within an &lt;a href=&quot;../std/cell/struct.unsafecell&quot;&gt;&lt;code&gt;UnsafeCell&amp;lt;U&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">変更不可能なデータの変更&amp;mdash;つまり、共有参照を通じて到達したデータまたは &lt;code&gt;let&lt;/code&gt; バインディングが所有するデータ）。ただし、そのデータが&lt;a href=&quot;../std/cell/struct.unsafecell&quot;&gt; &lt;code&gt;UnsafeCell&amp;lt;U&amp;gt;&lt;/code&gt; &lt;/a&gt;内に含まれている場合を除きます。</target>
        </trans-unit>
        <trans-unit id="ef5ac9e21297c98398b41dfda16cfd26de5a780d" translate="yes" xml:space="preserve">
          <source>Mutating the value inside an immutable value is the &lt;em&gt;interior mutability&lt;/em&gt; pattern. Let&amp;rsquo;s look at a situation in which interior mutability is useful and examine how it&amp;rsquo;s possible.</source>
          <target state="translated">不変値内の値の変更は、&lt;em&gt;内部の可変&lt;/em&gt;パターンです。内部の可変性が役立つ状況を見て、それがどのように可能であるかを調べてみましょう。</target>
        </trans-unit>
        <trans-unit id="bd2b0f087b02e413546a53c4f93f4cdf1581cc30" translate="yes" xml:space="preserve">
          <source>Mutex</source>
          <target state="translated">Mutex</target>
        </trans-unit>
        <trans-unit id="8b1ec69b0491d67da19fa319445ffc0a71413314" translate="yes" xml:space="preserve">
          <source>Mutex::borrow</source>
          <target state="translated">Mutex::borrow</target>
        </trans-unit>
        <trans-unit id="5d8e0cd94eca43b9d430fe82a2c656ee51fa1df8" translate="yes" xml:space="preserve">
          <source>Mutex::borrow_mut</source>
          <target state="translated">Mutex::borrow_mut</target>
        </trans-unit>
        <trans-unit id="faaec1e4812fa8f67d20103e196aed51a3af055f" translate="yes" xml:space="preserve">
          <source>Mutex::default</source>
          <target state="translated">Mutex::default</target>
        </trans-unit>
        <trans-unit id="b21fb6d7e26d11656f3a2bf0e012015692546955" translate="yes" xml:space="preserve">
          <source>Mutex::drop</source>
          <target state="translated">Mutex::drop</target>
        </trans-unit>
        <trans-unit id="0ce0d14d0e8a1582d02e769dfae4e0d04c41beb0" translate="yes" xml:space="preserve">
          <source>Mutex::fmt</source>
          <target state="translated">Mutex::fmt</target>
        </trans-unit>
        <trans-unit id="f3b32a1191db577a5a668469ee3f5fe5e5a39af1" translate="yes" xml:space="preserve">
          <source>Mutex::from</source>
          <target state="translated">Mutex::from</target>
        </trans-unit>
        <trans-unit id="b72d111db4b9c772bf94ea8a593458fb72c02358" translate="yes" xml:space="preserve">
          <source>Mutex::get_mut</source>
          <target state="translated">Mutex::get_mut</target>
        </trans-unit>
        <trans-unit id="9afd670758015679deed62310d5564b19cb86bc6" translate="yes" xml:space="preserve">
          <source>Mutex::into</source>
          <target state="translated">Mutex::into</target>
        </trans-unit>
        <trans-unit id="4f7654c9cc4309477d3b0aaf43e4e1bbc0d73cb6" translate="yes" xml:space="preserve">
          <source>Mutex::into_inner</source>
          <target state="translated">Mutex::into_inner</target>
        </trans-unit>
        <trans-unit id="68911d5cae85b79a0fe42d47b0dd1e08c6ec7a93" translate="yes" xml:space="preserve">
          <source>Mutex::is_poisoned</source>
          <target state="translated">Mutex::is_poisoned</target>
        </trans-unit>
        <trans-unit id="45e2a8305c697b4c7a758e3debe7bcee30f43862" translate="yes" xml:space="preserve">
          <source>Mutex::lock</source>
          <target state="translated">Mutex::lock</target>
        </trans-unit>
        <trans-unit id="271afa54f4dc6f415115426049fc5cf28802b93d" translate="yes" xml:space="preserve">
          <source>Mutex::new</source>
          <target state="translated">Mutex::new</target>
        </trans-unit>
        <trans-unit id="40fb23d545d310ce345b4641563a6c676e0d612d" translate="yes" xml:space="preserve">
          <source>Mutex::try_from</source>
          <target state="translated">Mutex::try_from</target>
        </trans-unit>
        <trans-unit id="0afc79fca30a1f8960756b3e5d3691e48e62a949" translate="yes" xml:space="preserve">
          <source>Mutex::try_into</source>
          <target state="translated">Mutex::try_into</target>
        </trans-unit>
        <trans-unit id="31ef69564e11080bc8cdd503010cb02266bdab68" translate="yes" xml:space="preserve">
          <source>Mutex::try_lock</source>
          <target state="translated">Mutex::try_lock</target>
        </trans-unit>
        <trans-unit id="e2c9a914ed8d18818acfd496506788093f73979d" translate="yes" xml:space="preserve">
          <source>Mutex::type_id</source>
          <target state="translated">Mutex::type_id</target>
        </trans-unit>
        <trans-unit id="0b5712250374171ff19e40af90ec2bff6eb040c5" translate="yes" xml:space="preserve">
          <source>MutexGuard</source>
          <target state="translated">MutexGuard</target>
        </trans-unit>
        <trans-unit id="3d11ea2f26e39e1cd8b7f52691661b58b8e8e3fd" translate="yes" xml:space="preserve">
          <source>MutexGuard::borrow</source>
          <target state="translated">MutexGuard::borrow</target>
        </trans-unit>
        <trans-unit id="9341c2640cd2f34e67aca6befc272df424743715" translate="yes" xml:space="preserve">
          <source>MutexGuard::borrow_mut</source>
          <target state="translated">MutexGuard::borrow_mut</target>
        </trans-unit>
        <trans-unit id="78c3dd5ebf5528db902b33f842bfd5bb14362c4b" translate="yes" xml:space="preserve">
          <source>MutexGuard::deref</source>
          <target state="translated">MutexGuard::deref</target>
        </trans-unit>
        <trans-unit id="5ee7b2c2acd6f9fc3824398729e9a37454a6dc55" translate="yes" xml:space="preserve">
          <source>MutexGuard::deref_mut</source>
          <target state="translated">MutexGuard::deref_mut</target>
        </trans-unit>
        <trans-unit id="d225bcc97df4591af2aa3460780b58f67fe017f4" translate="yes" xml:space="preserve">
          <source>MutexGuard::drop</source>
          <target state="translated">MutexGuard::drop</target>
        </trans-unit>
        <trans-unit id="33d03326e6a9aaa3def233527ec6e75eab8a6d58" translate="yes" xml:space="preserve">
          <source>MutexGuard::fmt</source>
          <target state="translated">MutexGuard::fmt</target>
        </trans-unit>
        <trans-unit id="e8ea1492f2c82871fc274cc07f6a8f2dc0a54669" translate="yes" xml:space="preserve">
          <source>MutexGuard::from</source>
          <target state="translated">MutexGuard::from</target>
        </trans-unit>
        <trans-unit id="3d606f16270cd972992caa6ec2bf3f97c0badfd1" translate="yes" xml:space="preserve">
          <source>MutexGuard::into</source>
          <target state="translated">MutexGuard::into</target>
        </trans-unit>
        <trans-unit id="5a647be7a2ca84b94dbddd7a86eaa710861ba051" translate="yes" xml:space="preserve">
          <source>MutexGuard::to_string</source>
          <target state="translated">MutexGuard::to_string</target>
        </trans-unit>
        <trans-unit id="eac6d1e73119ccfd2cfefa430288537143225294" translate="yes" xml:space="preserve">
          <source>MutexGuard::try_from</source>
          <target state="translated">MutexGuard::try_from</target>
        </trans-unit>
        <trans-unit id="e9aa082c858ae836955c925d4f4c3f91897023e2" translate="yes" xml:space="preserve">
          <source>MutexGuard::try_into</source>
          <target state="translated">MutexGuard::try_into</target>
        </trans-unit>
        <trans-unit id="7cc0c79e70fec88d83d4d42891cb2ec74d704d30" translate="yes" xml:space="preserve">
          <source>MutexGuard::type_id</source>
          <target state="translated">MutexGuard::type_id</target>
        </trans-unit>
        <trans-unit id="26a560ac7b8f05b58df28cf62e1853751f8be1f6" translate="yes" xml:space="preserve">
          <source>Mutexes have a reputation for being difficult to use because you have to remember two rules:</source>
          <target state="translated">ミューテックスは2つのルールを覚えておかないといけないので、使いにくいと評判です。</target>
        </trans-unit>
        <trans-unit id="cf3d28a732d3ec6dcf9f21895ad1ca4792aed77d" translate="yes" xml:space="preserve">
          <source>N.B., this is very different from the &lt;code&gt;unreachable!()&lt;/code&gt; macro: Unlike the macro, which panics when it is executed, it is &lt;em&gt;undefined behavior&lt;/em&gt; to reach code marked with this function.</source>
          <target state="translated">注：これは &lt;code&gt;unreachable!()&lt;/code&gt; マクロとは大きく異なります。実行時にパニックを&lt;em&gt;起こす&lt;/em&gt;マクロとは異なり、この関数でマークされたコードに到達するのは&lt;em&gt;未定義の動作&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="08d2e98e6754af941484848930ccbaddfefe13d6" translate="yes" xml:space="preserve">
          <source>N/A</source>
          <target state="translated">N/A</target>
        </trans-unit>
        <trans-unit id="d82a19a46f2f7da0f84cb56740a41e0148eda5c1" translate="yes" xml:space="preserve">
          <source>NAN</source>
          <target state="translated">NAN</target>
        </trans-unit>
        <trans-unit id="fe71a16b983d42d7ba54430b5ff04f41e29f434b" translate="yes" xml:space="preserve">
          <source>NB. The default behavior here is &quot;allowed&quot;, but this is unspecified and likely to change in the future.</source>
          <target state="translated">注意:ここでのデフォルトの動作は「許可されている」です。ここでのデフォルトの動作は &quot;allowed &quot;ですが、これは未定義であり、将来的に変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="e1ddef6d81a568c2827c10ea4d6ba71abf3a5714" translate="yes" xml:space="preserve">
          <source>NEG_INFINITY</source>
          <target state="translated">NEG_INFINITY</target>
        </trans-unit>
        <trans-unit id="fdf6112c558923a52a1ea8211e793722ff83d94f" translate="yes" xml:space="preserve">
          <source>NIL, Hermes: &lt;strike&gt;typestate&lt;/strike&gt;</source>
          <target state="translated">NIL、エルメス：&lt;strike&gt;typestate&lt;/strike&gt;</target>
        </trans-unit>
        <trans-unit id="a05fee8cdc79c30b4abc969705f32d15aa756a6a" translate="yes" xml:space="preserve">
          <source>NON_KEYWORD_IDENTIFIER : IDENTIFIER_OR_KEYWORD &lt;sub&gt;&lt;em&gt;Except a &lt;a href=&quot;keywords#strict-keywords&quot;&gt;strict&lt;/a&gt; or &lt;a href=&quot;keywords#reserved-keywords&quot;&gt;reserved&lt;/a&gt; keyword&lt;/em&gt;&lt;/sub&gt;</source>
          <target state="translated">NON_KEYWORD_IDENTIFIER：IDENTIFIER_OR_KEYWORD &lt;sub&gt;&lt;em&gt;&lt;a href=&quot;keywords#strict-keywords&quot;&gt;厳格&lt;/a&gt;&lt;/em&gt;&lt;/sub&gt;&lt;sub&gt;&lt;em&gt;または&lt;/em&gt;&lt;/sub&gt;&lt;sub&gt;&lt;em&gt;&lt;a href=&quot;keywords#reserved-keywords&quot;&gt;予約済みの&lt;/a&gt;&lt;/em&gt;&lt;/sub&gt;&lt;sub&gt;&lt;em&gt;キーワードを&lt;/em&gt;&lt;/sub&gt;&lt;sub&gt;&lt;em&gt;除く&lt;/em&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="604c091e6520bd70a283112b3d1cb5ab614885f3" translate="yes" xml:space="preserve">
          <source>NON_KEYWORD_IDENTIFIER | RAW_IDENTIFIER</source>
          <target state="translated">NON_KEYWORD_IDENTIFIER|RAW_IDENTIFIER</target>
        </trans-unit>
        <trans-unit id="dfa8b3449dac324be0d4ec9c1ddc0fca8a64ae4a" translate="yes" xml:space="preserve">
          <source>NON_ZERO_DEC_DIGIT : [&lt;code&gt;1&lt;/code&gt;-&lt;code&gt;9&lt;/code&gt;]</source>
          <target state="translated">NON_ZERO_DEC_DIGIT：[ &lt;code&gt;1&lt;/code&gt; - &lt;code&gt;9&lt;/code&gt; ]</target>
        </trans-unit>
        <trans-unit id="89a25c668207f5b4de73462d1ddb7646256ccc51" translate="yes" xml:space="preserve">
          <source>NOTE: It is almost always better to use &lt;a href=&quot;../../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../struct.vecdeque&quot;&gt;&lt;code&gt;VecDeque&lt;/code&gt;&lt;/a&gt; because array-based containers are generally faster, more memory efficient, and make better use of CPU cache.</source>
          <target state="translated">注：アレイベースのコンテナは一般に高速でメモリ効率が高く、CPUキャッシュをより有効に活用するため、ほとんどの場合、&lt;a href=&quot;../../vec/struct.vec&quot;&gt; &lt;code&gt;Vec&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../struct.vecdeque&quot;&gt; &lt;code&gt;VecDeque&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="9842f0bfbc5e5be039c20495708a361823545497" translate="yes" xml:space="preserve">
          <source>NOTE: It is almost always better to use &lt;code&gt;Vec&lt;/code&gt; or &lt;code&gt;VecDeque&lt;/code&gt; because array-based containers are generally faster, more memory efficient, and make better use of CPU cache.</source>
          <target state="translated">注：アレイベースのコンテナは一般に高速でメモリ効率が高く、CPUキャッシュをより有効に活用するため、ほとんどの場合、 &lt;code&gt;Vec&lt;/code&gt; または &lt;code&gt;VecDeque&lt;/code&gt; を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="cc274d5d2263838f79d29729cbb093b2edf78847" translate="yes" xml:space="preserve">
          <source>NOTE: this has the &lt;em&gt;opposite&lt;/em&gt; argument order of &lt;a href=&quot;ptr/fn.copy&quot;&gt;&lt;code&gt;ptr::copy&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">注：これは&lt;a href=&quot;ptr/fn.copy&quot;&gt; &lt;code&gt;ptr::copy&lt;/code&gt; &lt;/a&gt;&lt;em&gt;反対の&lt;/em&gt;引数の順序を持っています。</target>
        </trans-unit>
        <trans-unit id="04245176ce021c5996ae94cb1d734e59fa5be8e1" translate="yes" xml:space="preserve">
          <source>NOTE: this has the &lt;em&gt;opposite&lt;/em&gt; argument order of &lt;a href=&quot;ptr/fn.copy_nonoverlapping&quot;&gt;&lt;code&gt;ptr::copy_nonoverlapping&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">注：これは&lt;a href=&quot;ptr/fn.copy_nonoverlapping&quot;&gt; &lt;code&gt;ptr::copy_nonoverlapping&lt;/code&gt; &lt;/a&gt;&lt;em&gt;反対の&lt;/em&gt;引数順序を持っています。</target>
        </trans-unit>
        <trans-unit id="24f0c636b2534446f5c3e8e4920567881a0a19de" translate="yes" xml:space="preserve">
          <source>NOTE: this has the &lt;em&gt;same&lt;/em&gt; argument order as &lt;a href=&quot;ptr/fn.copy&quot;&gt;&lt;code&gt;ptr::copy&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">注：これは&lt;a href=&quot;ptr/fn.copy&quot;&gt; &lt;code&gt;ptr::copy&lt;/code&gt; &lt;/a&gt;&lt;em&gt;と同じ&lt;/em&gt;引数の順序を持ちます。</target>
        </trans-unit>
        <trans-unit id="42ffb4a7a2d5da14ae26a6e648692385c772e707" translate="yes" xml:space="preserve">
          <source>NOTE: this has the &lt;em&gt;same&lt;/em&gt; argument order as &lt;a href=&quot;ptr/fn.copy_nonoverlapping&quot;&gt;&lt;code&gt;ptr::copy_nonoverlapping&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">注：これは&lt;a href=&quot;ptr/fn.copy_nonoverlapping&quot;&gt; &lt;code&gt;ptr::copy_nonoverlapping&lt;/code&gt; &lt;/a&gt;&lt;em&gt;と同じ&lt;/em&gt;引数の順序です。</target>
        </trans-unit>
        <trans-unit id="69fbc7b4d017cc8ef97c313f3b88986888b4509e" translate="yes" xml:space="preserve">
          <source>Naive factorial implementation:</source>
          <target state="translated">ナイーブな階乗の実装。</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="34f864e719f4c2657ab4411ddf58c4e944c84e5c" translate="yes" xml:space="preserve">
          <source>Name the type of a &lt;a href=&quot;../book/ch17-02-trait-objects&quot;&gt;trait object&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../book/ch17-02-trait-objects&quot;&gt;特性オブジェクトの&lt;/a&gt;タイプに名前を付けます。</target>
        </trans-unit>
        <trans-unit id="73d05c292bc3a5ced866ff46712e815b2ba46830" translate="yes" xml:space="preserve">
          <source>Named lifetime or loop label</source>
          <target state="translated">命名されたライフタイムまたはループラベル</target>
        </trans-unit>
        <trans-unit id="e6c4fd05ac071605352883668025a2439dd60991" translate="yes" xml:space="preserve">
          <source>Named parameters</source>
          <target state="translated">名前付きパラメータ</target>
        </trans-unit>
        <trans-unit id="356a0c3d459bf98a0577b99ed80776c2dfdf95c3" translate="yes" xml:space="preserve">
          <source>Named variables are irrefutable patterns that match any value, and we&amp;rsquo;ve used them many times in the book. However, there is a complication when you use named variables in &lt;code&gt;match&lt;/code&gt; expressions. Because &lt;code&gt;match&lt;/code&gt; starts a new scope, variables declared as part of a pattern inside the &lt;code&gt;match&lt;/code&gt; expression will shadow those with the same name outside the &lt;code&gt;match&lt;/code&gt; construct, as is the case with all variables. In Listing 18-11, we declare a variable named &lt;code&gt;x&lt;/code&gt; with the value &lt;code&gt;Some(5)&lt;/code&gt; and a variable &lt;code&gt;y&lt;/code&gt; with the value &lt;code&gt;10&lt;/code&gt;. We then create a &lt;code&gt;match&lt;/code&gt; expression on the value &lt;code&gt;x&lt;/code&gt;. Look at the patterns in the match arms and &lt;code&gt;println!&lt;/code&gt; at the end, and try to figure out what the code will print before running this code or reading further.</source>
          <target state="translated">名前付き変数は、あらゆる値に一致する反駁できないパターンであり、本で何度も使用しています。ただし、名前付き変数を &lt;code&gt;match&lt;/code&gt; 式で使用すると複雑になります。 &lt;code&gt;match&lt;/code&gt; は新しいスコープを開始するため、 &lt;code&gt;match&lt;/code&gt; 式内のパターンの一部として宣言された変数は、すべての変数の場合と同様に、 &lt;code&gt;match&lt;/code&gt; 構成の外側にある同じ名前の変数をシャドウします。リスト18-11では、値 &lt;code&gt;Some(5)&lt;/code&gt; で &lt;code&gt;x&lt;/code&gt; という名前の変数と値 &lt;code&gt;10&lt;/code&gt; で変数 &lt;code&gt;y&lt;/code&gt; を宣言しています。次に、値 &lt;code&gt;x&lt;/code&gt; に &lt;code&gt;match&lt;/code&gt; 式を作成します。マッチアームと &lt;code&gt;println!&lt;/code&gt; のパターンを見てください！最後に、このコードを実行したり、先に読んだりする前に、コードが何を出力するかを理解してください。</target>
        </trans-unit>
        <trans-unit id="06ca7e81602be4d3469b36d38e0ca14a623cd08f" translate="yes" xml:space="preserve">
          <source>Namely, a case like this:</source>
          <target state="translated">つまり、このようなケース。</target>
        </trans-unit>
        <trans-unit id="fec4cc49af99b20cd6c730b646421b9a64ccbb53" translate="yes" xml:space="preserve">
          <source>Names bound in match arms retain their type in pattern guards. As such, if a name is bound by move in a pattern, it should also be moved to wherever it is referenced in the pattern guard code. Doing so however would prevent the name from being available in the body of the match arm. Consider the following:</source>
          <target state="translated">マッチアームにバインドされた名前は、パターンガードでその型を保持します。そのため、名前がパターン内で移動によってバインドされている場合は、パターンガードコード内で参照されている場所に移動させる必要があります。ただし、そのようにすると、その名前がマッチ・アームのボディで使用できなくなります。次のように考えてみてください。</target>
        </trans-unit>
        <trans-unit id="eeb9d4ad1e5d5cd83096958c44ff4a037353dcbc" translate="yes" xml:space="preserve">
          <source>Names the thread-to-be. Currently the name is used for identification only in panic messages.</source>
          <target state="translated">対象となるスレッドの名前を指定します。現在のところ、この名前はパニックメッセージの中でのみ識別に使用されます。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
