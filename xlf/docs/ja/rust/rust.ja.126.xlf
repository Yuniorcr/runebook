<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="rust">
    <body>
      <group id="rust">
        <trans-unit id="3c9012f61158cc2210365cbae7a2e9cdd608bf5a" translate="yes" xml:space="preserve">
          <source>Range::next</source>
          <target state="translated">Range::next</target>
        </trans-unit>
        <trans-unit id="200d8c63b63041ccd078da2d2b79423d47b0971a" translate="yes" xml:space="preserve">
          <source>Range::next_back</source>
          <target state="translated">Range::next_back</target>
        </trans-unit>
        <trans-unit id="82e1185a1ad806784ded44405c1b0aaed36f120d" translate="yes" xml:space="preserve">
          <source>Range::nth</source>
          <target state="translated">Range::nth</target>
        </trans-unit>
        <trans-unit id="b4d2ebd58ff0f7a7446a06f93e8f52aca9d07a8e" translate="yes" xml:space="preserve">
          <source>Range::nth_back</source>
          <target state="translated">Range::nth_back</target>
        </trans-unit>
        <trans-unit id="ee6585e95a8c2950dcc83e7a5c704bb598052e28" translate="yes" xml:space="preserve">
          <source>Range::partial_cmp</source>
          <target state="translated">Range::partial_cmp</target>
        </trans-unit>
        <trans-unit id="3a88695d4c45372c7691915deb247fd7edbb74db" translate="yes" xml:space="preserve">
          <source>Range::partition</source>
          <target state="translated">Range::partition</target>
        </trans-unit>
        <trans-unit id="fc62517be804ad69706a3d1730430708feae681e" translate="yes" xml:space="preserve">
          <source>Range::peekable</source>
          <target state="translated">Range::peekable</target>
        </trans-unit>
        <trans-unit id="47876532094911bd2379fb5165c5bc05feeb4483" translate="yes" xml:space="preserve">
          <source>Range::position</source>
          <target state="translated">Range::position</target>
        </trans-unit>
        <trans-unit id="b2dfcb3ad90ac92a0b61d0b8287dc1a498651674" translate="yes" xml:space="preserve">
          <source>Range::product</source>
          <target state="translated">Range::product</target>
        </trans-unit>
        <trans-unit id="c7040aed99955510b077183fb621f5949e29c536" translate="yes" xml:space="preserve">
          <source>Range::rev</source>
          <target state="translated">Range::rev</target>
        </trans-unit>
        <trans-unit id="78302c66058c93b75a9cfe6ca04cb3d20684d46b" translate="yes" xml:space="preserve">
          <source>Range::rfind</source>
          <target state="translated">Range::rfind</target>
        </trans-unit>
        <trans-unit id="fcc317387c40295dc438ab973452ddbd366156c5" translate="yes" xml:space="preserve">
          <source>Range::rfold</source>
          <target state="translated">Range::rfold</target>
        </trans-unit>
        <trans-unit id="2ac8c6f1f1b829ac720440d1d1cb0476bcf4a3b5" translate="yes" xml:space="preserve">
          <source>Range::rposition</source>
          <target state="translated">Range::rposition</target>
        </trans-unit>
        <trans-unit id="acac7581fed16f351f4ce617ce3f962b3fe5e631" translate="yes" xml:space="preserve">
          <source>Range::scan</source>
          <target state="translated">Range::scan</target>
        </trans-unit>
        <trans-unit id="20489cdaa02d2a396472371f9f0b90d0d9e3537f" translate="yes" xml:space="preserve">
          <source>Range::size_hint</source>
          <target state="translated">Range::size_hint</target>
        </trans-unit>
        <trans-unit id="548981959927acb6e0ef604f36160108763ffa60" translate="yes" xml:space="preserve">
          <source>Range::skip</source>
          <target state="translated">Range::skip</target>
        </trans-unit>
        <trans-unit id="ccedf47173c12ab2b3a07a328a7e3b284543c49f" translate="yes" xml:space="preserve">
          <source>Range::skip_while</source>
          <target state="translated">Range::skip_while</target>
        </trans-unit>
        <trans-unit id="71f4bdd729941b22dca1987c3d10ad9d6e2cee2b" translate="yes" xml:space="preserve">
          <source>Range::start_bound</source>
          <target state="translated">Range::start_bound</target>
        </trans-unit>
        <trans-unit id="d621d06fdf2b96a464fbf6fdb112d6a23a17e5df" translate="yes" xml:space="preserve">
          <source>Range::step_by</source>
          <target state="translated">Range::step_by</target>
        </trans-unit>
        <trans-unit id="2f0742b84fd06b4e1930f6176ab300753484ca92" translate="yes" xml:space="preserve">
          <source>Range::sum</source>
          <target state="translated">Range::sum</target>
        </trans-unit>
        <trans-unit id="b877e80fbfe83827d446a082b79a5f1ba7893f66" translate="yes" xml:space="preserve">
          <source>Range::take</source>
          <target state="translated">Range::take</target>
        </trans-unit>
        <trans-unit id="fc579b087363f3affd03336bf97118c0bc8057c0" translate="yes" xml:space="preserve">
          <source>Range::take_while</source>
          <target state="translated">Range::take_while</target>
        </trans-unit>
        <trans-unit id="97eb461b703ec1393c26a9c6c254bfd9882db01b" translate="yes" xml:space="preserve">
          <source>Range::to_owned</source>
          <target state="translated">Range::to_owned</target>
        </trans-unit>
        <trans-unit id="45feb080eb4b1ddd22a6b9ffcbba93833ec9f379" translate="yes" xml:space="preserve">
          <source>Range::try_fold</source>
          <target state="translated">Range::try_fold</target>
        </trans-unit>
        <trans-unit id="12a3ea7f1d9c67561052016d42b14ef6ddd1eb57" translate="yes" xml:space="preserve">
          <source>Range::try_for_each</source>
          <target state="translated">Range::try_for_each</target>
        </trans-unit>
        <trans-unit id="ea1885b5602b920f60edd7f24af6b9e80c35c744" translate="yes" xml:space="preserve">
          <source>Range::try_from</source>
          <target state="translated">Range::try_from</target>
        </trans-unit>
        <trans-unit id="445417bf5bdfe11cc173b04f3af76d8aaaea5369" translate="yes" xml:space="preserve">
          <source>Range::try_into</source>
          <target state="translated">Range::try_into</target>
        </trans-unit>
        <trans-unit id="4e87b9f270f923185a54a79b219df83ee10c7ec6" translate="yes" xml:space="preserve">
          <source>Range::try_rfold</source>
          <target state="translated">Range::try_rfold</target>
        </trans-unit>
        <trans-unit id="c6c8dfaa2afb7177624f73136fd318961053e63b" translate="yes" xml:space="preserve">
          <source>Range::type_id</source>
          <target state="translated">Range::type_id</target>
        </trans-unit>
        <trans-unit id="8f1c20bd8003b6111c9990003808d69e7665b26b" translate="yes" xml:space="preserve">
          <source>Range::unzip</source>
          <target state="translated">Range::unzip</target>
        </trans-unit>
        <trans-unit id="02ddcb3851f20d5ee48c74108d73e0146c90d19a" translate="yes" xml:space="preserve">
          <source>Range::zip</source>
          <target state="translated">Range::zip</target>
        </trans-unit>
        <trans-unit id="f5643d95a6bb09210c97ce5e09477db0f1c74c7c" translate="yes" xml:space="preserve">
          <source>RangeBounds</source>
          <target state="translated">RangeBounds</target>
        </trans-unit>
        <trans-unit id="4fc56eb811de8c58ab8a04474804c71cabfd460b" translate="yes" xml:space="preserve">
          <source>RangeBounds::contains</source>
          <target state="translated">RangeBounds::contains</target>
        </trans-unit>
        <trans-unit id="28509abe25ac9b026adb7b6c0ff1db84d940d59c" translate="yes" xml:space="preserve">
          <source>RangeBounds::end_bound</source>
          <target state="translated">RangeBounds::end_bound</target>
        </trans-unit>
        <trans-unit id="ac9bc61b05a0d2d6ce0490358a964b09c6ee113e" translate="yes" xml:space="preserve">
          <source>RangeBounds::start_bound</source>
          <target state="translated">RangeBounds::start_bound</target>
        </trans-unit>
        <trans-unit id="45e56e9b4baae158539951d498856af65aaadb45" translate="yes" xml:space="preserve">
          <source>RangeFrom</source>
          <target state="translated">RangeFrom</target>
        </trans-unit>
        <trans-unit id="af6bb2b48814476539a91011b8029a081fd92e38" translate="yes" xml:space="preserve">
          <source>RangeFrom::all</source>
          <target state="translated">RangeFrom::all</target>
        </trans-unit>
        <trans-unit id="6d766b6d0408737c6ef59679c0f38f45702e34bb" translate="yes" xml:space="preserve">
          <source>RangeFrom::any</source>
          <target state="translated">RangeFrom::any</target>
        </trans-unit>
        <trans-unit id="b1211dc7242b4aecb31785422fe4c7f4a6439397" translate="yes" xml:space="preserve">
          <source>RangeFrom::borrow</source>
          <target state="translated">RangeFrom::borrow</target>
        </trans-unit>
        <trans-unit id="65b7c70816146cb5b2814737a7acacb1ca0dc62d" translate="yes" xml:space="preserve">
          <source>RangeFrom::borrow_mut</source>
          <target state="translated">RangeFrom::borrow_mut</target>
        </trans-unit>
        <trans-unit id="03d0655b4f80825c17cba1651c6f297a8ed13c98" translate="yes" xml:space="preserve">
          <source>RangeFrom::by_ref</source>
          <target state="translated">RangeFrom::by_ref</target>
        </trans-unit>
        <trans-unit id="38a33f5d0c812815d9cecc2dc841860c791e870e" translate="yes" xml:space="preserve">
          <source>RangeFrom::chain</source>
          <target state="translated">RangeFrom::chain</target>
        </trans-unit>
        <trans-unit id="0d3290e5902f7e7664f7a6b9602861a9d6d14112" translate="yes" xml:space="preserve">
          <source>RangeFrom::clone</source>
          <target state="translated">RangeFrom::clone</target>
        </trans-unit>
        <trans-unit id="5654a17d41b8e92e1bad51e672fa9685a9435951" translate="yes" xml:space="preserve">
          <source>RangeFrom::clone_from</source>
          <target state="translated">RangeFrom::clone_from</target>
        </trans-unit>
        <trans-unit id="3a1a19e2876d44cacf8bf7e7ba111c13eb5f5c33" translate="yes" xml:space="preserve">
          <source>RangeFrom::clone_into</source>
          <target state="translated">RangeFrom::clone_into</target>
        </trans-unit>
        <trans-unit id="d4ea5d174fbb5959aa1614c9adf7c2fe78e2846f" translate="yes" xml:space="preserve">
          <source>RangeFrom::cloned</source>
          <target state="translated">RangeFrom::cloned</target>
        </trans-unit>
        <trans-unit id="6c4f9feacda977e4a3a7ae2e13c15a17e640e9a2" translate="yes" xml:space="preserve">
          <source>RangeFrom::cmp</source>
          <target state="translated">RangeFrom::cmp</target>
        </trans-unit>
        <trans-unit id="556a2e61234c64dc3e4f2db68ccb93e8a984aaf4" translate="yes" xml:space="preserve">
          <source>RangeFrom::collect</source>
          <target state="translated">RangeFrom::collect</target>
        </trans-unit>
        <trans-unit id="3287af87f33897befd7315d4b0222b9ec7e0076c" translate="yes" xml:space="preserve">
          <source>RangeFrom::contains</source>
          <target state="translated">RangeFrom::contains</target>
        </trans-unit>
        <trans-unit id="b9e45ff97d9a637dee8ac7a94c7da5f948baa3dc" translate="yes" xml:space="preserve">
          <source>RangeFrom::copied</source>
          <target state="translated">RangeFrom::copied</target>
        </trans-unit>
        <trans-unit id="43e40768c2daa19421b001a005729ccb88568efc" translate="yes" xml:space="preserve">
          <source>RangeFrom::count</source>
          <target state="translated">RangeFrom::count</target>
        </trans-unit>
        <trans-unit id="22b958c32c1e97d437016c23f68fb1a68ca0c223" translate="yes" xml:space="preserve">
          <source>RangeFrom::cycle</source>
          <target state="translated">RangeFrom::cycle</target>
        </trans-unit>
        <trans-unit id="73d55e1230761a6108f3e8d800791e48c352f2f1" translate="yes" xml:space="preserve">
          <source>RangeFrom::end_bound</source>
          <target state="translated">RangeFrom::end_bound</target>
        </trans-unit>
        <trans-unit id="e44be23acec916461f905ee9fa86fda31c23065a" translate="yes" xml:space="preserve">
          <source>RangeFrom::enumerate</source>
          <target state="translated">RangeFrom::enumerate</target>
        </trans-unit>
        <trans-unit id="cb0aa39b90beacd547f50bc97d0bd380851650b6" translate="yes" xml:space="preserve">
          <source>RangeFrom::eq</source>
          <target state="translated">RangeFrom::eq</target>
        </trans-unit>
        <trans-unit id="2a861b835593148963d4a99eb1226ae608292405" translate="yes" xml:space="preserve">
          <source>RangeFrom::filter</source>
          <target state="translated">RangeFrom::filter</target>
        </trans-unit>
        <trans-unit id="79758d4e8b7495221ea962b08658c23f841c01b6" translate="yes" xml:space="preserve">
          <source>RangeFrom::filter_map</source>
          <target state="translated">RangeFrom::filter_map</target>
        </trans-unit>
        <trans-unit id="89a80f5e6cbc093de1974851d3a36c1e9df20fff" translate="yes" xml:space="preserve">
          <source>RangeFrom::find</source>
          <target state="translated">RangeFrom::find</target>
        </trans-unit>
        <trans-unit id="5ea7c4a02d4b25d3aae9dc34862838fae6d5074a" translate="yes" xml:space="preserve">
          <source>RangeFrom::find_map</source>
          <target state="translated">RangeFrom::find_map</target>
        </trans-unit>
        <trans-unit id="5cf4a0616b2af9d526c8ea82e29d7f6e2daccf62" translate="yes" xml:space="preserve">
          <source>RangeFrom::flat_map</source>
          <target state="translated">RangeFrom::flat_map</target>
        </trans-unit>
        <trans-unit id="2383f3fb8c229597e75c3946675e7f92c6033b24" translate="yes" xml:space="preserve">
          <source>RangeFrom::flatten</source>
          <target state="translated">RangeFrom::flatten</target>
        </trans-unit>
        <trans-unit id="63ddddd5522c2eaf1175e7d731c8e6180e400ed3" translate="yes" xml:space="preserve">
          <source>RangeFrom::fmt</source>
          <target state="translated">RangeFrom::fmt</target>
        </trans-unit>
        <trans-unit id="a27259b7f02869f130328a42452ac80283d81dcf" translate="yes" xml:space="preserve">
          <source>RangeFrom::fold</source>
          <target state="translated">RangeFrom::fold</target>
        </trans-unit>
        <trans-unit id="235be94622d653f1dda9eeb9a45f93db3e6753f7" translate="yes" xml:space="preserve">
          <source>RangeFrom::for_each</source>
          <target state="translated">RangeFrom::for_each</target>
        </trans-unit>
        <trans-unit id="21517b5f8648ad1422d2e1455b38e02cfdbb2b90" translate="yes" xml:space="preserve">
          <source>RangeFrom::from</source>
          <target state="translated">RangeFrom::from</target>
        </trans-unit>
        <trans-unit id="5b55b8ce659f00434be100345b3b6365e4a5a039" translate="yes" xml:space="preserve">
          <source>RangeFrom::fuse</source>
          <target state="translated">RangeFrom::fuse</target>
        </trans-unit>
        <trans-unit id="67caf9cedb952ccd5ef65830f51a1a924a5e89c0" translate="yes" xml:space="preserve">
          <source>RangeFrom::ge</source>
          <target state="translated">RangeFrom::ge</target>
        </trans-unit>
        <trans-unit id="732c12e4b87b638994f6db3479e650dce653045b" translate="yes" xml:space="preserve">
          <source>RangeFrom::get</source>
          <target state="translated">RangeFrom::get</target>
        </trans-unit>
        <trans-unit id="33fc9077366907052471d37b0f764cdc2bbafff2" translate="yes" xml:space="preserve">
          <source>RangeFrom::get_mut</source>
          <target state="translated">RangeFrom::get_mut</target>
        </trans-unit>
        <trans-unit id="07c00ee3d0c705b1f026884414b2713047c88f0e" translate="yes" xml:space="preserve">
          <source>RangeFrom::get_unchecked</source>
          <target state="translated">RangeFrom::get_unchecked</target>
        </trans-unit>
        <trans-unit id="be6dd3ecae7951c40aaf9b5cd6758a8754cc1a60" translate="yes" xml:space="preserve">
          <source>RangeFrom::get_unchecked_mut</source>
          <target state="translated">RangeFrom::get_unchecked_mut</target>
        </trans-unit>
        <trans-unit id="dc3e3c8a30b7275bab4bc0cb0376a125d2fdec1b" translate="yes" xml:space="preserve">
          <source>RangeFrom::gt</source>
          <target state="translated">RangeFrom::gt</target>
        </trans-unit>
        <trans-unit id="677548d4468e377082a62bc4e1eaf9de2a3c5a9b" translate="yes" xml:space="preserve">
          <source>RangeFrom::hash</source>
          <target state="translated">RangeFrom::hash</target>
        </trans-unit>
        <trans-unit id="92501b6b66ac1c54403512bb5c51c1a8b47af663" translate="yes" xml:space="preserve">
          <source>RangeFrom::hash_slice</source>
          <target state="translated">RangeFrom::hash_slice</target>
        </trans-unit>
        <trans-unit id="9193c0a5f3a408283710c34a5a118a2d3acd6a57" translate="yes" xml:space="preserve">
          <source>RangeFrom::index</source>
          <target state="translated">RangeFrom::index</target>
        </trans-unit>
        <trans-unit id="a3225eef28e50e32765bd6c74f7086ff78719e2e" translate="yes" xml:space="preserve">
          <source>RangeFrom::index_mut</source>
          <target state="translated">RangeFrom::index_mut</target>
        </trans-unit>
        <trans-unit id="bb04333aae51a72b51346dedf7edf2dfb9843f38" translate="yes" xml:space="preserve">
          <source>RangeFrom::inspect</source>
          <target state="translated">RangeFrom::inspect</target>
        </trans-unit>
        <trans-unit id="088d71d35b97d95f61a59fe4b344c113ff382f6f" translate="yes" xml:space="preserve">
          <source>RangeFrom::into</source>
          <target state="translated">RangeFrom::into</target>
        </trans-unit>
        <trans-unit id="5c231e4dbb01b2db78cf59bf6b1c5dc32c91df72" translate="yes" xml:space="preserve">
          <source>RangeFrom::into_iter</source>
          <target state="translated">RangeFrom::into_iter</target>
        </trans-unit>
        <trans-unit id="94351907d35581d5cd84527000aea17dccaf62a6" translate="yes" xml:space="preserve">
          <source>RangeFrom::is_sorted</source>
          <target state="translated">RangeFrom::is_sorted</target>
        </trans-unit>
        <trans-unit id="ab9861d2d30f5cb228d3a73b0dc387f7eb9ccdaa" translate="yes" xml:space="preserve">
          <source>RangeFrom::is_sorted_by</source>
          <target state="translated">RangeFrom::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="fba1ff995b6eff4ef6a0244dedcc657a824f99e2" translate="yes" xml:space="preserve">
          <source>RangeFrom::is_sorted_by_key</source>
          <target state="translated">RangeFrom::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="c9f41fba8d0d15da8cc428dde9ead99a2906e2a0" translate="yes" xml:space="preserve">
          <source>RangeFrom::last</source>
          <target state="translated">RangeFrom::last</target>
        </trans-unit>
        <trans-unit id="687323fc45f02a34206a1a8e985a09cfa04e512f" translate="yes" xml:space="preserve">
          <source>RangeFrom::le</source>
          <target state="translated">RangeFrom::le</target>
        </trans-unit>
        <trans-unit id="8d10046ed5b20470fc0fd2ecb9b51e54c17da624" translate="yes" xml:space="preserve">
          <source>RangeFrom::lt</source>
          <target state="translated">RangeFrom::lt</target>
        </trans-unit>
        <trans-unit id="d3a425c61e40648829eff3990119d082bfc7f9b2" translate="yes" xml:space="preserve">
          <source>RangeFrom::map</source>
          <target state="translated">RangeFrom::map</target>
        </trans-unit>
        <trans-unit id="e8aa32318fbb2a275cc4286c9f9081be16f5d67e" translate="yes" xml:space="preserve">
          <source>RangeFrom::max</source>
          <target state="translated">RangeFrom::max</target>
        </trans-unit>
        <trans-unit id="eca58c099b7365ce170629a4dd34ae028ffc931a" translate="yes" xml:space="preserve">
          <source>RangeFrom::max_by</source>
          <target state="translated">RangeFrom::max_by</target>
        </trans-unit>
        <trans-unit id="31fd0256694b569cc934fd8b48ebe5ea1e0ed0fa" translate="yes" xml:space="preserve">
          <source>RangeFrom::max_by_key</source>
          <target state="translated">RangeFrom::max_by_key</target>
        </trans-unit>
        <trans-unit id="37391d6f18af9b0584d692eddeabd0d1660e2e3f" translate="yes" xml:space="preserve">
          <source>RangeFrom::min</source>
          <target state="translated">RangeFrom::min</target>
        </trans-unit>
        <trans-unit id="55cf16c100696e9a58ab022696b11b310689ccb5" translate="yes" xml:space="preserve">
          <source>RangeFrom::min_by</source>
          <target state="translated">RangeFrom::min_by</target>
        </trans-unit>
        <trans-unit id="95b9d23949e146bcdaa3aa9da28bfea29a3be578" translate="yes" xml:space="preserve">
          <source>RangeFrom::min_by_key</source>
          <target state="translated">RangeFrom::min_by_key</target>
        </trans-unit>
        <trans-unit id="e298b9a567e88e7936e638945b979f2de025b389" translate="yes" xml:space="preserve">
          <source>RangeFrom::ne</source>
          <target state="translated">RangeFrom::ne</target>
        </trans-unit>
        <trans-unit id="b04bc4b3a7120b33c6a3e8fe676e45def8edb821" translate="yes" xml:space="preserve">
          <source>RangeFrom::next</source>
          <target state="translated">RangeFrom::next</target>
        </trans-unit>
        <trans-unit id="2b53e4d2cad07e7b935ea412a6a3a0a035fd0f63" translate="yes" xml:space="preserve">
          <source>RangeFrom::nth</source>
          <target state="translated">RangeFrom::nth</target>
        </trans-unit>
        <trans-unit id="09e4fa2260ce702ccf162fb225c5baca9d7ad9e6" translate="yes" xml:space="preserve">
          <source>RangeFrom::partial_cmp</source>
          <target state="translated">RangeFrom::partial_cmp</target>
        </trans-unit>
        <trans-unit id="6fe48ca0820c303624a60ddce31588bd77324713" translate="yes" xml:space="preserve">
          <source>RangeFrom::partition</source>
          <target state="translated">RangeFrom::partition</target>
        </trans-unit>
        <trans-unit id="c6f1ed9039efaae990c98f873e271b5e7d9a3624" translate="yes" xml:space="preserve">
          <source>RangeFrom::peekable</source>
          <target state="translated">RangeFrom::peekable</target>
        </trans-unit>
        <trans-unit id="e4a791243fea3d939fbb526d8bda5e1c3aa7e9a1" translate="yes" xml:space="preserve">
          <source>RangeFrom::position</source>
          <target state="translated">RangeFrom::position</target>
        </trans-unit>
        <trans-unit id="e22e344b3662d5696c10011ee3f87073c6f564e2" translate="yes" xml:space="preserve">
          <source>RangeFrom::product</source>
          <target state="translated">RangeFrom::product</target>
        </trans-unit>
        <trans-unit id="54621ae608e60b1bcc107962605153a1204f90c3" translate="yes" xml:space="preserve">
          <source>RangeFrom::rev</source>
          <target state="translated">RangeFrom::rev</target>
        </trans-unit>
        <trans-unit id="773603e6071955f07ec46cf812a83405fa76b0b9" translate="yes" xml:space="preserve">
          <source>RangeFrom::rposition</source>
          <target state="translated">RangeFrom::rposition</target>
        </trans-unit>
        <trans-unit id="7fb3e4824013661a873e358e7380a6db27efdd2d" translate="yes" xml:space="preserve">
          <source>RangeFrom::scan</source>
          <target state="translated">RangeFrom::scan</target>
        </trans-unit>
        <trans-unit id="17a38038d1205e89dc9ff9bf54cf58a324c8bb09" translate="yes" xml:space="preserve">
          <source>RangeFrom::size_hint</source>
          <target state="translated">RangeFrom::size_hint</target>
        </trans-unit>
        <trans-unit id="8f4e49c3c05ba46eb49c10c1cfefd70b9487492f" translate="yes" xml:space="preserve">
          <source>RangeFrom::skip</source>
          <target state="translated">RangeFrom::skip</target>
        </trans-unit>
        <trans-unit id="6fd515ae0a8fde13c533f7956824cb7d35a6313c" translate="yes" xml:space="preserve">
          <source>RangeFrom::skip_while</source>
          <target state="translated">RangeFrom::skip_while</target>
        </trans-unit>
        <trans-unit id="3f9098821504bd28eb9b32ce763fc427ad94443c" translate="yes" xml:space="preserve">
          <source>RangeFrom::start_bound</source>
          <target state="translated">RangeFrom::start_bound</target>
        </trans-unit>
        <trans-unit id="38a015367bcd3babd9c6fe5f5a2ba2dcdb19a7c9" translate="yes" xml:space="preserve">
          <source>RangeFrom::step_by</source>
          <target state="translated">RangeFrom::step_by</target>
        </trans-unit>
        <trans-unit id="c1dbc47ee7a1e19bfa52f9a1c67c3268b2a1dc99" translate="yes" xml:space="preserve">
          <source>RangeFrom::sum</source>
          <target state="translated">RangeFrom::sum</target>
        </trans-unit>
        <trans-unit id="4b4153e987b378c47892c873a78094ae66668e06" translate="yes" xml:space="preserve">
          <source>RangeFrom::take</source>
          <target state="translated">RangeFrom::take</target>
        </trans-unit>
        <trans-unit id="e1284f6b3244fde94b279e4ec2029c17db29ed70" translate="yes" xml:space="preserve">
          <source>RangeFrom::take_while</source>
          <target state="translated">RangeFrom::take_while</target>
        </trans-unit>
        <trans-unit id="bc40c8cba22d334e02b8f234eef0adceb8971ec7" translate="yes" xml:space="preserve">
          <source>RangeFrom::to_owned</source>
          <target state="translated">RangeFrom::to_owned</target>
        </trans-unit>
        <trans-unit id="749886fb93e4e2152697f0b7484a2589a850b242" translate="yes" xml:space="preserve">
          <source>RangeFrom::try_fold</source>
          <target state="translated">RangeFrom::try_fold</target>
        </trans-unit>
        <trans-unit id="a0e62fa0dedbcfc0f182bd013c5fa8ab81abbe85" translate="yes" xml:space="preserve">
          <source>RangeFrom::try_for_each</source>
          <target state="translated">RangeFrom::try_for_each</target>
        </trans-unit>
        <trans-unit id="51cff46334ec4eb8ed46b1c3e7b7a7da375d6f61" translate="yes" xml:space="preserve">
          <source>RangeFrom::try_from</source>
          <target state="translated">RangeFrom::try_from</target>
        </trans-unit>
        <trans-unit id="2fa35635225bebb9c21a72047eb71e2571eda0d1" translate="yes" xml:space="preserve">
          <source>RangeFrom::try_into</source>
          <target state="translated">RangeFrom::try_into</target>
        </trans-unit>
        <trans-unit id="847d9ee9bbacb0ca00772c1ea1fd4aa3af1b0c7a" translate="yes" xml:space="preserve">
          <source>RangeFrom::type_id</source>
          <target state="translated">RangeFrom::type_id</target>
        </trans-unit>
        <trans-unit id="273d67f19ffcccf1893ce4a816acd5e986068407" translate="yes" xml:space="preserve">
          <source>RangeFrom::unzip</source>
          <target state="translated">RangeFrom::unzip</target>
        </trans-unit>
        <trans-unit id="de6a3d13330ec1b4dafb204e95a8ca58c126a455" translate="yes" xml:space="preserve">
          <source>RangeFrom::zip</source>
          <target state="translated">RangeFrom::zip</target>
        </trans-unit>
        <trans-unit id="3ef63b29e9c06a746ab8aa29401633cfd6f6c1bb" translate="yes" xml:space="preserve">
          <source>RangeFull</source>
          <target state="translated">RangeFull</target>
        </trans-unit>
        <trans-unit id="4e22bc878f1d01c893667de17b5657d68b17140c" translate="yes" xml:space="preserve">
          <source>RangeFull::borrow</source>
          <target state="translated">RangeFull::borrow</target>
        </trans-unit>
        <trans-unit id="40a15a58f881e62b3dfc976c291f6747a7a51f28" translate="yes" xml:space="preserve">
          <source>RangeFull::borrow_mut</source>
          <target state="translated">RangeFull::borrow_mut</target>
        </trans-unit>
        <trans-unit id="1be73ddb82ba05df7ac0cc44e9154be3ab6a3596" translate="yes" xml:space="preserve">
          <source>RangeFull::clone</source>
          <target state="translated">RangeFull::clone</target>
        </trans-unit>
        <trans-unit id="9019a145d8c13a942b5671d3fb4a11070b75b2af" translate="yes" xml:space="preserve">
          <source>RangeFull::clone_from</source>
          <target state="translated">RangeFull::clone_from</target>
        </trans-unit>
        <trans-unit id="044643b7ee461d846b86d94b0558664ea22e5aac" translate="yes" xml:space="preserve">
          <source>RangeFull::clone_into</source>
          <target state="translated">RangeFull::clone_into</target>
        </trans-unit>
        <trans-unit id="473c67a7838af068aebd4cfcf1c0058859825c4d" translate="yes" xml:space="preserve">
          <source>RangeFull::contains</source>
          <target state="translated">RangeFull::contains</target>
        </trans-unit>
        <trans-unit id="9b9700e6b16c501ec227baea1c02da2876928b50" translate="yes" xml:space="preserve">
          <source>RangeFull::end_bound</source>
          <target state="translated">RangeFull::end_bound</target>
        </trans-unit>
        <trans-unit id="e3a21273a27f232b052d1bf9dc4ea42a817a398a" translate="yes" xml:space="preserve">
          <source>RangeFull::eq</source>
          <target state="translated">RangeFull::eq</target>
        </trans-unit>
        <trans-unit id="1a9949c7dd765b5b71317120ae29894a4e8d137c" translate="yes" xml:space="preserve">
          <source>RangeFull::fmt</source>
          <target state="translated">RangeFull::fmt</target>
        </trans-unit>
        <trans-unit id="cf0d3abe6873f54e4cda8d53be9659e87742924b" translate="yes" xml:space="preserve">
          <source>RangeFull::from</source>
          <target state="translated">RangeFull::from</target>
        </trans-unit>
        <trans-unit id="55c069153f31744bcd7b412237c54e0425607019" translate="yes" xml:space="preserve">
          <source>RangeFull::get</source>
          <target state="translated">RangeFull::get</target>
        </trans-unit>
        <trans-unit id="d60fed57b9371f0ca02176418bbd100227116c8b" translate="yes" xml:space="preserve">
          <source>RangeFull::get_mut</source>
          <target state="translated">RangeFull::get_mut</target>
        </trans-unit>
        <trans-unit id="8f97fc38d32c52704b1fa56653f0fc230b78e805" translate="yes" xml:space="preserve">
          <source>RangeFull::get_unchecked</source>
          <target state="translated">RangeFull::get_unchecked</target>
        </trans-unit>
        <trans-unit id="482f5260844163f3c1ca9129684852192ee1609f" translate="yes" xml:space="preserve">
          <source>RangeFull::get_unchecked_mut</source>
          <target state="translated">RangeFull::get_unchecked_mut</target>
        </trans-unit>
        <trans-unit id="6ecd9e5c281be0810596f4463f709effb810b27c" translate="yes" xml:space="preserve">
          <source>RangeFull::hash</source>
          <target state="translated">RangeFull::hash</target>
        </trans-unit>
        <trans-unit id="6acc7c2ecc2987364895158d33956bf51fbdca82" translate="yes" xml:space="preserve">
          <source>RangeFull::hash_slice</source>
          <target state="translated">RangeFull::hash_slice</target>
        </trans-unit>
        <trans-unit id="a3865c455cddd6e30e213305841ce13a73870f60" translate="yes" xml:space="preserve">
          <source>RangeFull::index</source>
          <target state="translated">RangeFull::index</target>
        </trans-unit>
        <trans-unit id="3ac4db3dc5dab177bd04180665c37f443e981b35" translate="yes" xml:space="preserve">
          <source>RangeFull::index_mut</source>
          <target state="translated">RangeFull::index_mut</target>
        </trans-unit>
        <trans-unit id="b6bc9667079b146fe4a7ad3bb2bcd56198148036" translate="yes" xml:space="preserve">
          <source>RangeFull::into</source>
          <target state="translated">RangeFull::into</target>
        </trans-unit>
        <trans-unit id="4a9bdc94c831d2882711502958991c9960a49410" translate="yes" xml:space="preserve">
          <source>RangeFull::ne</source>
          <target state="translated">RangeFull::ne</target>
        </trans-unit>
        <trans-unit id="2bc663ccd1d9dfb557c55b1ea27405a1343716c8" translate="yes" xml:space="preserve">
          <source>RangeFull::start_bound</source>
          <target state="translated">RangeFull::start_bound</target>
        </trans-unit>
        <trans-unit id="2f424358ab6771e8f9109a24b117f824005fee62" translate="yes" xml:space="preserve">
          <source>RangeFull::to_owned</source>
          <target state="translated">RangeFull::to_owned</target>
        </trans-unit>
        <trans-unit id="98bdee41ff40e121ccfb26433017e1b9b67e78f0" translate="yes" xml:space="preserve">
          <source>RangeFull::try_from</source>
          <target state="translated">RangeFull::try_from</target>
        </trans-unit>
        <trans-unit id="f7c8b64a3804c8f312cc13e8a7dcab5e916083b3" translate="yes" xml:space="preserve">
          <source>RangeFull::try_into</source>
          <target state="translated">RangeFull::try_into</target>
        </trans-unit>
        <trans-unit id="27c230f8513eef66128780e7a2b13f3f5fa93624" translate="yes" xml:space="preserve">
          <source>RangeFull::type_id</source>
          <target state="translated">RangeFull::type_id</target>
        </trans-unit>
        <trans-unit id="f2fa1bde42e8870fc9921fc2e705b5b5a8cbee76" translate="yes" xml:space="preserve">
          <source>RangeInclusive</source>
          <target state="translated">RangeInclusive</target>
        </trans-unit>
        <trans-unit id="78eb5cf8b1e562f422cd255807c0a7463587d47b" translate="yes" xml:space="preserve">
          <source>RangeInclusive::all</source>
          <target state="translated">RangeInclusive::all</target>
        </trans-unit>
        <trans-unit id="1b3c41e075d29ec459c655d4ec4b803581561a46" translate="yes" xml:space="preserve">
          <source>RangeInclusive::any</source>
          <target state="translated">RangeInclusive::any</target>
        </trans-unit>
        <trans-unit id="74ff2f6212f715f44637add7519d3d58eff19aca" translate="yes" xml:space="preserve">
          <source>RangeInclusive::borrow</source>
          <target state="translated">RangeInclusive::borrow</target>
        </trans-unit>
        <trans-unit id="6771dcb5ecbfa24171081ea12186a93e0674ea37" translate="yes" xml:space="preserve">
          <source>RangeInclusive::borrow_mut</source>
          <target state="translated">RangeInclusive::borrow_mut</target>
        </trans-unit>
        <trans-unit id="1b7f4ff95fb37b01f5cab1b1d90f48fa2a4ceed4" translate="yes" xml:space="preserve">
          <source>RangeInclusive::by_ref</source>
          <target state="translated">RangeInclusive::by_ref</target>
        </trans-unit>
        <trans-unit id="71425f91bb6cff550e2c49c383e7688ab17052d5" translate="yes" xml:space="preserve">
          <source>RangeInclusive::chain</source>
          <target state="translated">RangeInclusive::chain</target>
        </trans-unit>
        <trans-unit id="de4f639070af3be4e2e8b4207a46089619e5e6d9" translate="yes" xml:space="preserve">
          <source>RangeInclusive::clone</source>
          <target state="translated">RangeInclusive::clone</target>
        </trans-unit>
        <trans-unit id="9453e6b09c50110e2fc5314f3fce74b180e7d823" translate="yes" xml:space="preserve">
          <source>RangeInclusive::clone_from</source>
          <target state="translated">RangeInclusive::clone_from</target>
        </trans-unit>
        <trans-unit id="7ae546519b7b53e2e394885f4efa8815cf7c0a2b" translate="yes" xml:space="preserve">
          <source>RangeInclusive::clone_into</source>
          <target state="translated">RangeInclusive::clone_into</target>
        </trans-unit>
        <trans-unit id="4689b739746b8a249f63cb6a931cfec2326caaff" translate="yes" xml:space="preserve">
          <source>RangeInclusive::cloned</source>
          <target state="translated">RangeInclusive::cloned</target>
        </trans-unit>
        <trans-unit id="99c4a3e7c08f6b5aec2a9bfb85f841c817031f69" translate="yes" xml:space="preserve">
          <source>RangeInclusive::cmp</source>
          <target state="translated">RangeInclusive::cmp</target>
        </trans-unit>
        <trans-unit id="ac1d7628a04bf268bc5496eeb19d98711dab66a1" translate="yes" xml:space="preserve">
          <source>RangeInclusive::collect</source>
          <target state="translated">RangeInclusive::collect</target>
        </trans-unit>
        <trans-unit id="7625e60211989c45e1a773239385dc84b256a335" translate="yes" xml:space="preserve">
          <source>RangeInclusive::contains</source>
          <target state="translated">RangeInclusive::contains</target>
        </trans-unit>
        <trans-unit id="addc4838f71523a8d29f8d3385a53b977c0e40c6" translate="yes" xml:space="preserve">
          <source>RangeInclusive::copied</source>
          <target state="translated">RangeInclusive::copied</target>
        </trans-unit>
        <trans-unit id="15d5758e5bce3d4c11bfb51c2acdd746cba3f765" translate="yes" xml:space="preserve">
          <source>RangeInclusive::count</source>
          <target state="translated">RangeInclusive::count</target>
        </trans-unit>
        <trans-unit id="5ef34c46e0c9b4241df34d7eb0408eb619fd06ff" translate="yes" xml:space="preserve">
          <source>RangeInclusive::cycle</source>
          <target state="translated">RangeInclusive::cycle</target>
        </trans-unit>
        <trans-unit id="ef454d9d7e6c98a5f31ea8aabc2b406ba3085665" translate="yes" xml:space="preserve">
          <source>RangeInclusive::end</source>
          <target state="translated">RangeInclusive::end</target>
        </trans-unit>
        <trans-unit id="147fc080d674e3c6e7f594bb95119186dcaec4d9" translate="yes" xml:space="preserve">
          <source>RangeInclusive::end_bound</source>
          <target state="translated">RangeInclusive::end_bound</target>
        </trans-unit>
        <trans-unit id="b6ea9fe611267ce077fdc9f32a92dce32e9a8940" translate="yes" xml:space="preserve">
          <source>RangeInclusive::enumerate</source>
          <target state="translated">RangeInclusive::enumerate</target>
        </trans-unit>
        <trans-unit id="609cf5ff598de0527806e4301aa54ecbc56756bc" translate="yes" xml:space="preserve">
          <source>RangeInclusive::eq</source>
          <target state="translated">RangeInclusive::eq</target>
        </trans-unit>
        <trans-unit id="077cdb6c70a099ceb8f28eee4445654253d83401" translate="yes" xml:space="preserve">
          <source>RangeInclusive::filter</source>
          <target state="translated">RangeInclusive::filter</target>
        </trans-unit>
        <trans-unit id="89055f18d9987fceb9770791f15714818b97f61e" translate="yes" xml:space="preserve">
          <source>RangeInclusive::filter_map</source>
          <target state="translated">RangeInclusive::filter_map</target>
        </trans-unit>
        <trans-unit id="eef44257cf15f50e870de2e389c2d02fbddefb84" translate="yes" xml:space="preserve">
          <source>RangeInclusive::find</source>
          <target state="translated">RangeInclusive::find</target>
        </trans-unit>
        <trans-unit id="6adec73b7663e9aa2c89fefcdad521d4e843debc" translate="yes" xml:space="preserve">
          <source>RangeInclusive::find_map</source>
          <target state="translated">RangeInclusive::find_map</target>
        </trans-unit>
        <trans-unit id="68a99fa109a6fd8b17727048fbc9ec481d97ebdb" translate="yes" xml:space="preserve">
          <source>RangeInclusive::flat_map</source>
          <target state="translated">RangeInclusive::flat_map</target>
        </trans-unit>
        <trans-unit id="724410cc4c934535b00b9a900b34559f077a19e9" translate="yes" xml:space="preserve">
          <source>RangeInclusive::flatten</source>
          <target state="translated">RangeInclusive::flatten</target>
        </trans-unit>
        <trans-unit id="1098b431e3991859430ff9c533562bb3f16b34d9" translate="yes" xml:space="preserve">
          <source>RangeInclusive::fmt</source>
          <target state="translated">RangeInclusive::fmt</target>
        </trans-unit>
        <trans-unit id="fbb2d1ff9f889fc2714e97ca96cadb771fd7d581" translate="yes" xml:space="preserve">
          <source>RangeInclusive::fold</source>
          <target state="translated">RangeInclusive::fold</target>
        </trans-unit>
        <trans-unit id="b7673174dfd714dde511d0102d15f6450a1bad4b" translate="yes" xml:space="preserve">
          <source>RangeInclusive::for_each</source>
          <target state="translated">RangeInclusive::for_each</target>
        </trans-unit>
        <trans-unit id="aff90e6b2d53a9cf8ccf1a2934591b26531ae977" translate="yes" xml:space="preserve">
          <source>RangeInclusive::from</source>
          <target state="translated">RangeInclusive::from</target>
        </trans-unit>
        <trans-unit id="d91a50181bb9b16c36befb981189bd9f39e331a6" translate="yes" xml:space="preserve">
          <source>RangeInclusive::fuse</source>
          <target state="translated">RangeInclusive::fuse</target>
        </trans-unit>
        <trans-unit id="235a3834ea5df9456b8ff5a66bdbedaea49fe5cd" translate="yes" xml:space="preserve">
          <source>RangeInclusive::ge</source>
          <target state="translated">RangeInclusive::ge</target>
        </trans-unit>
        <trans-unit id="4d7a503185b5800fef4b7cbd0dea2e2c82837e70" translate="yes" xml:space="preserve">
          <source>RangeInclusive::get</source>
          <target state="translated">RangeInclusive::get</target>
        </trans-unit>
        <trans-unit id="7b81fc660b92c42cda954b9950cad61926b5bee0" translate="yes" xml:space="preserve">
          <source>RangeInclusive::get_mut</source>
          <target state="translated">RangeInclusive::get_mut</target>
        </trans-unit>
        <trans-unit id="f6d7df24767ec5addf1aa42e679ccee59915b50e" translate="yes" xml:space="preserve">
          <source>RangeInclusive::get_unchecked</source>
          <target state="translated">RangeInclusive::get_unchecked</target>
        </trans-unit>
        <trans-unit id="51301b333c45c97ba8f12e24b5c39462705711bc" translate="yes" xml:space="preserve">
          <source>RangeInclusive::get_unchecked_mut</source>
          <target state="translated">RangeInclusive::get_unchecked_mut</target>
        </trans-unit>
        <trans-unit id="a57ce9f424acd53935272e8d9825b7ed5831054a" translate="yes" xml:space="preserve">
          <source>RangeInclusive::gt</source>
          <target state="translated">RangeInclusive::gt</target>
        </trans-unit>
        <trans-unit id="b27ed796dabe0b4af372cd34d4f72b3a1608be14" translate="yes" xml:space="preserve">
          <source>RangeInclusive::hash</source>
          <target state="translated">RangeInclusive::hash</target>
        </trans-unit>
        <trans-unit id="797948ab70629ae8b58edfc8c28ad84594edd42f" translate="yes" xml:space="preserve">
          <source>RangeInclusive::hash_slice</source>
          <target state="translated">RangeInclusive::hash_slice</target>
        </trans-unit>
        <trans-unit id="f4fb06501e8d82bcd53991e8527af27264c67d0f" translate="yes" xml:space="preserve">
          <source>RangeInclusive::index</source>
          <target state="translated">RangeInclusive::index</target>
        </trans-unit>
        <trans-unit id="af7af1fb9b10f78e3fe558565d5c67f0edd109af" translate="yes" xml:space="preserve">
          <source>RangeInclusive::index_mut</source>
          <target state="translated">RangeInclusive::index_mut</target>
        </trans-unit>
        <trans-unit id="be874e4996be4e5bd6ba13c75141c58e8900ce53" translate="yes" xml:space="preserve">
          <source>RangeInclusive::inspect</source>
          <target state="translated">RangeInclusive::inspect</target>
        </trans-unit>
        <trans-unit id="49264e668b3f97409706f4f9f1179dd70a8e0418" translate="yes" xml:space="preserve">
          <source>RangeInclusive::into</source>
          <target state="translated">RangeInclusive::into</target>
        </trans-unit>
        <trans-unit id="50108fdb83525b7fc3cd58fdccc84519b44e9def" translate="yes" xml:space="preserve">
          <source>RangeInclusive::into_inner</source>
          <target state="translated">RangeInclusive::into_inner</target>
        </trans-unit>
        <trans-unit id="07cfd2929e977e09d4ce5616f294004c018788be" translate="yes" xml:space="preserve">
          <source>RangeInclusive::into_iter</source>
          <target state="translated">RangeInclusive::into_iter</target>
        </trans-unit>
        <trans-unit id="f3c13ead5e832ec65df4a9ec93ea99ec9e61fd2a" translate="yes" xml:space="preserve">
          <source>RangeInclusive::is_empty</source>
          <target state="translated">RangeInclusive::is_empty</target>
        </trans-unit>
        <trans-unit id="60e8895dc63a4d97cff1abe9847312b0580712d5" translate="yes" xml:space="preserve">
          <source>RangeInclusive::is_sorted</source>
          <target state="translated">RangeInclusive::is_sorted</target>
        </trans-unit>
        <trans-unit id="528324c7313156f7a42c6e9d296fd68b5b37876c" translate="yes" xml:space="preserve">
          <source>RangeInclusive::is_sorted_by</source>
          <target state="translated">RangeInclusive::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="50bad18677c0a845094a2e1c22e3037251106248" translate="yes" xml:space="preserve">
          <source>RangeInclusive::is_sorted_by_key</source>
          <target state="translated">RangeInclusive::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="7914e06ff23804dc478e05af1c3afc39faa0823c" translate="yes" xml:space="preserve">
          <source>RangeInclusive::last</source>
          <target state="translated">RangeInclusive::last</target>
        </trans-unit>
        <trans-unit id="97da6e021e736328468664a00714dd67917afbae" translate="yes" xml:space="preserve">
          <source>RangeInclusive::le</source>
          <target state="translated">RangeInclusive::le</target>
        </trans-unit>
        <trans-unit id="4a506cbd00f56725e393186c19502a452539dec1" translate="yes" xml:space="preserve">
          <source>RangeInclusive::len</source>
          <target state="translated">RangeInclusive::len</target>
        </trans-unit>
        <trans-unit id="f52728e027cb14772445e9ecb2d287e31da650fc" translate="yes" xml:space="preserve">
          <source>RangeInclusive::lt</source>
          <target state="translated">RangeInclusive::lt</target>
        </trans-unit>
        <trans-unit id="c523b895f2c0b569fe45232105ccc0401061154c" translate="yes" xml:space="preserve">
          <source>RangeInclusive::map</source>
          <target state="translated">RangeInclusive::map</target>
        </trans-unit>
        <trans-unit id="82e86eb522499843908561b443ebf562d9dc7abf" translate="yes" xml:space="preserve">
          <source>RangeInclusive::max</source>
          <target state="translated">RangeInclusive::max</target>
        </trans-unit>
        <trans-unit id="5c428fe3d5738990bdde11a68e9b3201b846e173" translate="yes" xml:space="preserve">
          <source>RangeInclusive::max_by</source>
          <target state="translated">RangeInclusive::max_by</target>
        </trans-unit>
        <trans-unit id="2a797b18d2705b8d8f8c43495471e67466622e13" translate="yes" xml:space="preserve">
          <source>RangeInclusive::max_by_key</source>
          <target state="translated">RangeInclusive::max_by_key</target>
        </trans-unit>
        <trans-unit id="93dbde80c0352764c4213da7ce3d6f765c427f5d" translate="yes" xml:space="preserve">
          <source>RangeInclusive::min</source>
          <target state="translated">RangeInclusive::min</target>
        </trans-unit>
        <trans-unit id="0c4e328c39ade287473a8a6684529af229cc1103" translate="yes" xml:space="preserve">
          <source>RangeInclusive::min_by</source>
          <target state="translated">RangeInclusive::min_by</target>
        </trans-unit>
        <trans-unit id="b89fe62d63b33a2972f7fe0f671630ef9159e4ea" translate="yes" xml:space="preserve">
          <source>RangeInclusive::min_by_key</source>
          <target state="translated">RangeInclusive::min_by_key</target>
        </trans-unit>
        <trans-unit id="b8f75a080760780a81b4da63a74dac721a513c63" translate="yes" xml:space="preserve">
          <source>RangeInclusive::ne</source>
          <target state="translated">RangeInclusive::ne</target>
        </trans-unit>
        <trans-unit id="0654530690bcca089ecf5c267374306fe5e51c68" translate="yes" xml:space="preserve">
          <source>RangeInclusive::new</source>
          <target state="translated">RangeInclusive::new</target>
        </trans-unit>
        <trans-unit id="eee9b1ea1cef8c95c64babb7519d99edb9260083" translate="yes" xml:space="preserve">
          <source>RangeInclusive::next</source>
          <target state="translated">RangeInclusive::next</target>
        </trans-unit>
        <trans-unit id="f015b4da6bfdde6d8f31662c45a68bd39629fa70" translate="yes" xml:space="preserve">
          <source>RangeInclusive::next_back</source>
          <target state="translated">RangeInclusive::next_back</target>
        </trans-unit>
        <trans-unit id="3a02dfcc4d08377c54f877b152e1a1bb37b1cc8d" translate="yes" xml:space="preserve">
          <source>RangeInclusive::nth</source>
          <target state="translated">RangeInclusive::nth</target>
        </trans-unit>
        <trans-unit id="47189f312b54b28e46948a0b6a5af36afa7775f9" translate="yes" xml:space="preserve">
          <source>RangeInclusive::nth_back</source>
          <target state="translated">RangeInclusive::nth_back</target>
        </trans-unit>
        <trans-unit id="c20e92458a7e523a0b699c0f7445207477e7b999" translate="yes" xml:space="preserve">
          <source>RangeInclusive::partial_cmp</source>
          <target state="translated">RangeInclusive::partial_cmp</target>
        </trans-unit>
        <trans-unit id="6a6cb39e5270487e5e40438cf068836837729fe4" translate="yes" xml:space="preserve">
          <source>RangeInclusive::partition</source>
          <target state="translated">RangeInclusive::partition</target>
        </trans-unit>
        <trans-unit id="a9a678218a25759ef40d447e9aa867a8f2abae4c" translate="yes" xml:space="preserve">
          <source>RangeInclusive::peekable</source>
          <target state="translated">RangeInclusive::peekable</target>
        </trans-unit>
        <trans-unit id="d3cdfd32e4bb93d2675c78dfaa530ce3da058562" translate="yes" xml:space="preserve">
          <source>RangeInclusive::position</source>
          <target state="translated">RangeInclusive::position</target>
        </trans-unit>
        <trans-unit id="b0947bf6d51c9fc13cbdbd278e7304eccdce1d05" translate="yes" xml:space="preserve">
          <source>RangeInclusive::product</source>
          <target state="translated">RangeInclusive::product</target>
        </trans-unit>
        <trans-unit id="9cc1d8197e822934a50e67d30abbc03c836ee41f" translate="yes" xml:space="preserve">
          <source>RangeInclusive::rev</source>
          <target state="translated">RangeInclusive::rev</target>
        </trans-unit>
        <trans-unit id="f70e886554f948d82b134fc56b6628f977ae6605" translate="yes" xml:space="preserve">
          <source>RangeInclusive::rfind</source>
          <target state="translated">RangeInclusive::rfind</target>
        </trans-unit>
        <trans-unit id="3bdde5b8be20cd5044bcd6ee938c1b2b018f5812" translate="yes" xml:space="preserve">
          <source>RangeInclusive::rfold</source>
          <target state="translated">RangeInclusive::rfold</target>
        </trans-unit>
        <trans-unit id="619fce5f970ca66200b80dca4b628291fea1d751" translate="yes" xml:space="preserve">
          <source>RangeInclusive::rposition</source>
          <target state="translated">RangeInclusive::rposition</target>
        </trans-unit>
        <trans-unit id="3a57325a149f89e6d872a35f29b8adb9d6f1b9c0" translate="yes" xml:space="preserve">
          <source>RangeInclusive::scan</source>
          <target state="translated">RangeInclusive::scan</target>
        </trans-unit>
        <trans-unit id="080406b3b55aaa31135c771393b2884e6bcefd04" translate="yes" xml:space="preserve">
          <source>RangeInclusive::size_hint</source>
          <target state="translated">RangeInclusive::size_hint</target>
        </trans-unit>
        <trans-unit id="2d6b5da5cdb2a760f36fc86c470cf70896544123" translate="yes" xml:space="preserve">
          <source>RangeInclusive::skip</source>
          <target state="translated">RangeInclusive::skip</target>
        </trans-unit>
        <trans-unit id="4065b3111be283939e583e5359e4723af9a71d86" translate="yes" xml:space="preserve">
          <source>RangeInclusive::skip_while</source>
          <target state="translated">RangeInclusive::skip_while</target>
        </trans-unit>
        <trans-unit id="d1d6d1a748b52a806a4c812d288c4fbd41f5141b" translate="yes" xml:space="preserve">
          <source>RangeInclusive::start</source>
          <target state="translated">RangeInclusive::start</target>
        </trans-unit>
        <trans-unit id="65620f92df66ee207d761638346f2e17f0de57a3" translate="yes" xml:space="preserve">
          <source>RangeInclusive::start_bound</source>
          <target state="translated">RangeInclusive::start_bound</target>
        </trans-unit>
        <trans-unit id="75378585f9c0adddf5d4c1b84dcbe46e7c1a3c50" translate="yes" xml:space="preserve">
          <source>RangeInclusive::step_by</source>
          <target state="translated">RangeInclusive::step_by</target>
        </trans-unit>
        <trans-unit id="d350e62ca607d537fe57298bf3543d4b94686b37" translate="yes" xml:space="preserve">
          <source>RangeInclusive::sum</source>
          <target state="translated">RangeInclusive::sum</target>
        </trans-unit>
        <trans-unit id="7b70e8b156c78c824fa2ca7968662d4c00dbc860" translate="yes" xml:space="preserve">
          <source>RangeInclusive::take</source>
          <target state="translated">RangeInclusive::take</target>
        </trans-unit>
        <trans-unit id="bcea8076f83e70044a2d763dab50dbd54a73b3a2" translate="yes" xml:space="preserve">
          <source>RangeInclusive::take_while</source>
          <target state="translated">RangeInclusive::take_while</target>
        </trans-unit>
        <trans-unit id="c5409651f05c9904e3621ac037c1e5e59b5ab3e8" translate="yes" xml:space="preserve">
          <source>RangeInclusive::to_owned</source>
          <target state="translated">RangeInclusive::to_owned</target>
        </trans-unit>
        <trans-unit id="8ae2605763868d4bc2fd9df8782ec7b770df879f" translate="yes" xml:space="preserve">
          <source>RangeInclusive::try_fold</source>
          <target state="translated">RangeInclusive::try_fold</target>
        </trans-unit>
        <trans-unit id="4382a108f90724e174d70ddff06349204dddce2e" translate="yes" xml:space="preserve">
          <source>RangeInclusive::try_for_each</source>
          <target state="translated">RangeInclusive::try_for_each</target>
        </trans-unit>
        <trans-unit id="26d88fffd367bdc133af6b9cde90d9e01d2f4146" translate="yes" xml:space="preserve">
          <source>RangeInclusive::try_from</source>
          <target state="translated">RangeInclusive::try_from</target>
        </trans-unit>
        <trans-unit id="cb404e9aa87a88443ad82c4ed896eb8a4ddb48a7" translate="yes" xml:space="preserve">
          <source>RangeInclusive::try_into</source>
          <target state="translated">RangeInclusive::try_into</target>
        </trans-unit>
        <trans-unit id="62d328df897ff563826732c3fdc4d3a4412bc111" translate="yes" xml:space="preserve">
          <source>RangeInclusive::try_rfold</source>
          <target state="translated">RangeInclusive::try_rfold</target>
        </trans-unit>
        <trans-unit id="7093ccfbba7817e5486feb1278c13500290d0563" translate="yes" xml:space="preserve">
          <source>RangeInclusive::type_id</source>
          <target state="translated">RangeInclusive::type_id</target>
        </trans-unit>
        <trans-unit id="4bf45b00b82a6775a88991b1f07a33b7910e1d10" translate="yes" xml:space="preserve">
          <source>RangeInclusive::unzip</source>
          <target state="translated">RangeInclusive::unzip</target>
        </trans-unit>
        <trans-unit id="90017c71fedd9c8eb0daaea8e3199f75b0b418ad" translate="yes" xml:space="preserve">
          <source>RangeInclusive::zip</source>
          <target state="translated">RangeInclusive::zip</target>
        </trans-unit>
        <trans-unit id="c23d08bdcdb5a8e3bad00100bf811d39837f1874" translate="yes" xml:space="preserve">
          <source>RangeMut</source>
          <target state="translated">RangeMut</target>
        </trans-unit>
        <trans-unit id="4e3e2867c853d577a916ed0da792c50313dfa61f" translate="yes" xml:space="preserve">
          <source>RangeTo</source>
          <target state="translated">RangeTo</target>
        </trans-unit>
        <trans-unit id="9ac3ece6c1b3f30607de7b9b3c8c93742e14dd8e" translate="yes" xml:space="preserve">
          <source>RangeTo::borrow</source>
          <target state="translated">RangeTo::borrow</target>
        </trans-unit>
        <trans-unit id="d52ccfe6d98c27aaeafdc0d11095e316d3c93b5b" translate="yes" xml:space="preserve">
          <source>RangeTo::borrow_mut</source>
          <target state="translated">RangeTo::borrow_mut</target>
        </trans-unit>
        <trans-unit id="f673a75a72ceeca789b7115eae5354831ef447d1" translate="yes" xml:space="preserve">
          <source>RangeTo::clone</source>
          <target state="translated">RangeTo::clone</target>
        </trans-unit>
        <trans-unit id="2fd17e34eae9ba41b2c44181cbbca94a40f7b931" translate="yes" xml:space="preserve">
          <source>RangeTo::clone_from</source>
          <target state="translated">RangeTo::clone_from</target>
        </trans-unit>
        <trans-unit id="6718f07cdf4a6bca910d79ae70f164a96a3c899c" translate="yes" xml:space="preserve">
          <source>RangeTo::clone_into</source>
          <target state="translated">RangeTo::clone_into</target>
        </trans-unit>
        <trans-unit id="f1f28cc232a0627785458be4ed1c91d288faa2ef" translate="yes" xml:space="preserve">
          <source>RangeTo::contains</source>
          <target state="translated">RangeTo::contains</target>
        </trans-unit>
        <trans-unit id="05c64f152c093ff915e9757805aeedcc7960e2f6" translate="yes" xml:space="preserve">
          <source>RangeTo::end_bound</source>
          <target state="translated">RangeTo::end_bound</target>
        </trans-unit>
        <trans-unit id="fe8f3d826e523d1128c069f9889c5b67abd2f40d" translate="yes" xml:space="preserve">
          <source>RangeTo::eq</source>
          <target state="translated">RangeTo::eq</target>
        </trans-unit>
        <trans-unit id="3aab1f543d59735e75bc6b95fe1ab1cc01e663d4" translate="yes" xml:space="preserve">
          <source>RangeTo::fmt</source>
          <target state="translated">RangeTo::fmt</target>
        </trans-unit>
        <trans-unit id="e6db35463b97aae4705d9fee42dd6189ee3cf872" translate="yes" xml:space="preserve">
          <source>RangeTo::from</source>
          <target state="translated">RangeTo::from</target>
        </trans-unit>
        <trans-unit id="e00dd8dd60351a46f0042d43f5336950d2b17df6" translate="yes" xml:space="preserve">
          <source>RangeTo::get</source>
          <target state="translated">RangeTo::get</target>
        </trans-unit>
        <trans-unit id="eae60152386f625eb638d9071f4d09159dc20a4d" translate="yes" xml:space="preserve">
          <source>RangeTo::get_mut</source>
          <target state="translated">RangeTo::get_mut</target>
        </trans-unit>
        <trans-unit id="10326032eea64b28b5cd81da494315977663b351" translate="yes" xml:space="preserve">
          <source>RangeTo::get_unchecked</source>
          <target state="translated">RangeTo::get_unchecked</target>
        </trans-unit>
        <trans-unit id="09aa0ed9a575255f5789261fbe67d4f143c7b959" translate="yes" xml:space="preserve">
          <source>RangeTo::get_unchecked_mut</source>
          <target state="translated">RangeTo::get_unchecked_mut</target>
        </trans-unit>
        <trans-unit id="86212f234cc7db923739b38253b3e99261b66eb8" translate="yes" xml:space="preserve">
          <source>RangeTo::hash</source>
          <target state="translated">RangeTo::hash</target>
        </trans-unit>
        <trans-unit id="8fd21da8dc4f35ce761f591bc301e63647a06245" translate="yes" xml:space="preserve">
          <source>RangeTo::hash_slice</source>
          <target state="translated">RangeTo::hash_slice</target>
        </trans-unit>
        <trans-unit id="6168989291616713ccdd95ee5d651d3dacebc38c" translate="yes" xml:space="preserve">
          <source>RangeTo::index</source>
          <target state="translated">RangeTo::index</target>
        </trans-unit>
        <trans-unit id="53bcd7c0ee6f7123be9d19a93a27d701cfe3a746" translate="yes" xml:space="preserve">
          <source>RangeTo::index_mut</source>
          <target state="translated">RangeTo::index_mut</target>
        </trans-unit>
        <trans-unit id="3a9bbf50b56349323dbb3951b1fa30893f23dfa0" translate="yes" xml:space="preserve">
          <source>RangeTo::into</source>
          <target state="translated">RangeTo::into</target>
        </trans-unit>
        <trans-unit id="92487886946ae628b7855f233f35ff511a1a1583" translate="yes" xml:space="preserve">
          <source>RangeTo::ne</source>
          <target state="translated">RangeTo::ne</target>
        </trans-unit>
        <trans-unit id="6d3ecd45e72ff7246b7d3bfdcfb9fbcb75040065" translate="yes" xml:space="preserve">
          <source>RangeTo::start_bound</source>
          <target state="translated">RangeTo::start_bound</target>
        </trans-unit>
        <trans-unit id="48eda5aa25de2773b6bddfdf15f1b6edf03cec73" translate="yes" xml:space="preserve">
          <source>RangeTo::to_owned</source>
          <target state="translated">RangeTo::to_owned</target>
        </trans-unit>
        <trans-unit id="4e4d8eb0c4b2a57c5e81e41c1c87261a4eddca50" translate="yes" xml:space="preserve">
          <source>RangeTo::try_from</source>
          <target state="translated">RangeTo::try_from</target>
        </trans-unit>
        <trans-unit id="63ed935164bc78630507b0b3323242bad706db54" translate="yes" xml:space="preserve">
          <source>RangeTo::try_into</source>
          <target state="translated">RangeTo::try_into</target>
        </trans-unit>
        <trans-unit id="551b9fa98c41e6472745f8eccdab31fb191cad7a" translate="yes" xml:space="preserve">
          <source>RangeTo::type_id</source>
          <target state="translated">RangeTo::type_id</target>
        </trans-unit>
        <trans-unit id="d985d28dde0957b017232d280c0710c90fd28c83" translate="yes" xml:space="preserve">
          <source>RangeToInclusive</source>
          <target state="translated">RangeToInclusive</target>
        </trans-unit>
        <trans-unit id="c10d6d2c88f4b284ce88efc68c6bbdba16a08acc" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::borrow</source>
          <target state="translated">RangeToInclusive::borrow</target>
        </trans-unit>
        <trans-unit id="627317c3c3f0881129c644a854304b760ad3ca67" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::borrow_mut</source>
          <target state="translated">RangeToInclusive::borrow_mut</target>
        </trans-unit>
        <trans-unit id="dbaffaba1b9861f9baef6dbae74e794aa7cb8a71" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::clone</source>
          <target state="translated">RangeToInclusive::clone</target>
        </trans-unit>
        <trans-unit id="a6d9f5f56aa4e178c118a1f6440e9cdd75b7c979" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::clone_from</source>
          <target state="translated">RangeToInclusive::clone_from</target>
        </trans-unit>
        <trans-unit id="ec61649eea086e3fa7d207d9debd737a26bbb9cc" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::clone_into</source>
          <target state="translated">RangeToInclusive::clone_into</target>
        </trans-unit>
        <trans-unit id="66f44708c2a3513935a01414e682bc1f3eec3c55" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::contains</source>
          <target state="translated">RangeToInclusive::contains</target>
        </trans-unit>
        <trans-unit id="7361e5df2253259a3368f0aaac22ab1c7a84c58d" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::end_bound</source>
          <target state="translated">RangeToInclusive::end_bound</target>
        </trans-unit>
        <trans-unit id="9177ea95afb49f4f416c70d108a7acff20a4eeba" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::eq</source>
          <target state="translated">RangeToInclusive::eq</target>
        </trans-unit>
        <trans-unit id="378339177c1f6e9bf41ebba2f734c10b8b92905d" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::fmt</source>
          <target state="translated">RangeToInclusive::fmt</target>
        </trans-unit>
        <trans-unit id="ac346794310c4a3278bfcef03319c5eea1a4191f" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::from</source>
          <target state="translated">RangeToInclusive::from</target>
        </trans-unit>
        <trans-unit id="ac8e9d751554212311931483d9898ed26d2b4ecf" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::get</source>
          <target state="translated">RangeToInclusive::get</target>
        </trans-unit>
        <trans-unit id="bbbadee88fb550f62252593fa6092b6d10ddf387" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::get_mut</source>
          <target state="translated">RangeToInclusive::get_mut</target>
        </trans-unit>
        <trans-unit id="83b5cd4277c627a35deda10a3f0d9ab9d1cd4752" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::get_unchecked</source>
          <target state="translated">RangeToInclusive::get_unchecked</target>
        </trans-unit>
        <trans-unit id="37452e0424ce3bd650bf89207d085a58ae79e462" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::get_unchecked_mut</source>
          <target state="translated">RangeToInclusive::get_unchecked_mut</target>
        </trans-unit>
        <trans-unit id="5498ed2cc23ff2cd2d2f13e5ee02ce0c63814f81" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::hash</source>
          <target state="translated">RangeToInclusive::hash</target>
        </trans-unit>
        <trans-unit id="bfee908549a2c39d8ef7245d64b5765dbc00632d" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::hash_slice</source>
          <target state="translated">RangeToInclusive::hash_slice</target>
        </trans-unit>
        <trans-unit id="8bfa7ead587100608893308d92abbab49bca7a94" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::index</source>
          <target state="translated">RangeToInclusive::index</target>
        </trans-unit>
        <trans-unit id="0b20b7788b66bef581150343d527efa128a41ad2" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::index_mut</source>
          <target state="translated">RangeToInclusive::index_mut</target>
        </trans-unit>
        <trans-unit id="bb69f78f80d8491574c960b41360d6d2291c13b1" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::into</source>
          <target state="translated">RangeToInclusive::into</target>
        </trans-unit>
        <trans-unit id="3c34389200aa15f56b0ecb1a1e85a93d0af37de9" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::ne</source>
          <target state="translated">RangeToInclusive::ne</target>
        </trans-unit>
        <trans-unit id="4cd55beb6f03fd385bee129298e430dd77fa87f5" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::start_bound</source>
          <target state="translated">RangeToInclusive::start_bound</target>
        </trans-unit>
        <trans-unit id="5f4fee0c495f24a194f8d4b830f535be5f7d9486" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::to_owned</source>
          <target state="translated">RangeToInclusive::to_owned</target>
        </trans-unit>
        <trans-unit id="0fe3d5f0a9741c932f14c4b15850bc64fb981a74" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::try_from</source>
          <target state="translated">RangeToInclusive::try_from</target>
        </trans-unit>
        <trans-unit id="f5b8f0b5fc15b6636497993f82cc735fec7339e5" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::try_into</source>
          <target state="translated">RangeToInclusive::try_into</target>
        </trans-unit>
        <trans-unit id="45559d1c4e968461bcefa9d15a49e9673d3b2eb7" translate="yes" xml:space="preserve">
          <source>RangeToInclusive::type_id</source>
          <target state="translated">RangeToInclusive::type_id</target>
        </trans-unit>
        <trans-unit id="13442990026e52a3407661154c182e2c58e34296" translate="yes" xml:space="preserve">
          <source>Ranges are only allowed with numeric values or &lt;code&gt;char&lt;/code&gt; values, because the compiler checks that the range isn&amp;rsquo;t empty at compile time. The only types for which Rust can tell if a range is empty or not are &lt;code&gt;char&lt;/code&gt; and numeric values.</source>
          <target state="translated">コンパイラーはコンパイル時に範囲が空でないことをチェックするため、範囲は数値または &lt;code&gt;char&lt;/code&gt; 値でのみ許可されます。Rustが範囲が空かどうかを判別できる唯一のタイプは、 &lt;code&gt;char&lt;/code&gt; と数値です。</target>
        </trans-unit>
        <trans-unit id="6e9ee0a735e5e1881e2a39d789df15f943cafe87" translate="yes" xml:space="preserve">
          <source>Ranges can be used in &lt;code&gt;for&lt;/code&gt; loops:</source>
          <target state="translated">範囲は &lt;code&gt;for&lt;/code&gt; ループで使用できます。</target>
        </trans-unit>
        <trans-unit id="5f1017be8ed63af9920d4fd2a0e112543589adfc" translate="yes" xml:space="preserve">
          <source>Rather than spawning unlimited threads, we&amp;rsquo;ll have a fixed number of threads waiting in the pool. As requests come in, they&amp;rsquo;ll be sent to the pool for processing. The pool will maintain a queue of incoming requests. Each of the threads in the pool will pop off a request from this queue, handle the request, and then ask the queue for another request. With this design, we can process &lt;code&gt;N&lt;/code&gt; requests concurrently, where &lt;code&gt;N&lt;/code&gt; is the number of threads. If each thread is responding to a long-running request, subsequent requests can still back up in the queue, but we&amp;rsquo;ve increased the number of long-running requests we can handle before reaching that point.</source>
          <target state="translated">無制限のスレッドを生成するのではなく、固定数のスレッドがプールで待機します。リクエストが届くと、処理のためにプールに送信されます。プールは、着信要求のキューを維持します。プール内の各スレッドは、このキューから要求をポップし、要求を処理してから、キューに別の要求を要求します。この設計では、我々は処理することができ &lt;code&gt;N&lt;/code&gt; どこ、同時に要求した &lt;code&gt;N&lt;/code&gt; は、スレッドの数です。各スレッドが長時間実行のリクエストに応答している場合、後続のリクエストは引き続きキューにバックアップできますが、そのポイントに到達する前に処理できる長時間実行のリクエストの数を増やしました。</target>
        </trans-unit>
        <trans-unit id="763b44cc09fb4535432b79a6d50534767e81d46e" translate="yes" xml:space="preserve">
          <source>Rather than trying to preserve signaling-ness cross-platform, this implementation favors preserving the exact bits. This means that any payloads encoded in NaNs will be preserved even if the result of this method is sent over the network from an x86 machine to a MIPS one.</source>
          <target state="translated">この実装では、クロスプラットフォームでのシグナリング性を維持しようとするのではなく、正確なビットを維持することを優先する。これは、この方法の結果がネットワーク上で x86 マシンから MIPS マシンに送られた場合でも、NaN でエンコードされたペイロードが保存されることを意味します。</target>
        </trans-unit>
        <trans-unit id="0e2386ac47b2575dd8e3d2989b4433153a55e64e" translate="yes" xml:space="preserve">
          <source>Rather than trying to preserve signaling-ness cross-platform, this implementation favours preserving the exact bits. This means that any payloads encoded in NaNs will be preserved even if the result of this method is sent over the network from an x86 machine to a MIPS one.</source>
          <target state="translated">この実装では、クロスプラットフォームでのシグナリング性を維持しようとするのではなく、正確なビットを維持することを優先している。これは、この方法の結果がネットワーク上で x86 マシンから MIPS マシンに送信された場合でも、NaN でエンコードされたペイロードが保存されることを意味します。</target>
        </trans-unit>
        <trans-unit id="a33078721464f7f7339d7b276d49a3396d8cc580" translate="yes" xml:space="preserve">
          <source>Raw HANDLEs.</source>
          <target state="translated">生のHANDLE。</target>
        </trans-unit>
        <trans-unit id="cb64c6b4221215b1d103fe80a9a72278ea020e47" translate="yes" xml:space="preserve">
          <source>Raw Identifiers</source>
          <target state="translated">生の識別子</target>
        </trans-unit>
        <trans-unit id="73a6c9e8131c0b43f4186a2651286ec9b9fb0616" translate="yes" xml:space="preserve">
          <source>Raw SOCKETs.</source>
          <target state="translated">生のSOCKET。</target>
        </trans-unit>
        <trans-unit id="01fb057d7991c4a8339790fa0a57a17cadf6c61c" translate="yes" xml:space="preserve">
          <source>Raw byte string</source>
          <target state="translated">生のバイト文字列</target>
        </trans-unit>
        <trans-unit id="5526ec701cadc303f1154254464375cea8cd2d27" translate="yes" xml:space="preserve">
          <source>Raw byte string literal, combination of raw and byte string literal</source>
          <target state="translated">生のバイト文字列リテラル、生とバイト文字列リテラルの組み合わせ</target>
        </trans-unit>
        <trans-unit id="5e096187d95c91102edda768ec3ced57a4b885ab" translate="yes" xml:space="preserve">
          <source>Raw byte string literals</source>
          <target state="translated">生のバイト文字列リテラル</target>
        </trans-unit>
        <trans-unit id="a484d16ef9b51ec0444a8ff7e50920eb0f05f0bc" translate="yes" xml:space="preserve">
          <source>Raw byte string literals do not process any escapes. They start with the character &lt;code&gt;U+0062&lt;/code&gt; (&lt;code&gt;b&lt;/code&gt;), followed by &lt;code&gt;U+0072&lt;/code&gt; (&lt;code&gt;r&lt;/code&gt;), followed by zero or more of the character &lt;code&gt;U+0023&lt;/code&gt; (&lt;code&gt;#&lt;/code&gt;), and a &lt;code&gt;U+0022&lt;/code&gt; (double-quote) character. The &lt;em&gt;raw string body&lt;/em&gt; can contain any sequence of ASCII characters and is terminated only by another &lt;code&gt;U+0022&lt;/code&gt; (double-quote) character, followed by the same number of &lt;code&gt;U+0023&lt;/code&gt; (&lt;code&gt;#&lt;/code&gt;) characters that preceded the opening &lt;code&gt;U+0022&lt;/code&gt; (double-quote) character. A raw byte string literal can not contain any non-ASCII byte.</source>
          <target state="translated">生のバイト文字列リテラルはエスケープを処理しません。それらは、文字 &lt;code&gt;U+0062&lt;/code&gt; （ &lt;code&gt;b&lt;/code&gt; ）で始まり、その後に &lt;code&gt;U+0072&lt;/code&gt; （ &lt;code&gt;r&lt;/code&gt; ）、0個以上の文字 &lt;code&gt;U+0023&lt;/code&gt; （ &lt;code&gt;#&lt;/code&gt; ）、および &lt;code&gt;U+0022&lt;/code&gt; （二重引用符）文字が続きます。&lt;em&gt;生の文字列本体には、&lt;/em&gt; ASCII文字の任意のシーケンスを含めることができ、唯一の別によって終了される &lt;code&gt;U+0022&lt;/code&gt; の同じ番号が続く（二重引用符）文字、 &lt;code&gt;U+0023&lt;/code&gt; （ &lt;code&gt;#&lt;/code&gt; 開口部の前）の文字 &lt;code&gt;U+0022&lt;/code&gt; （ダブルを引用）文字。未加工のバイト文字列リテラルには、非ASCIIバイトを含めることはできません。</target>
        </trans-unit>
        <trans-unit id="3e0160860decfd4a8d88d3c5abc31c00a9c09fdc" translate="yes" xml:space="preserve">
          <source>Raw entries are useful for such exotic situations as:</source>
          <target state="translated">生エントリーは、こんなエキゾチックな状況に便利です。</target>
        </trans-unit>
        <trans-unit id="3f36bb9f3b2f7cb70cd901cf0cdef14e9f4c83b7" translate="yes" xml:space="preserve">
          <source>Raw entries give mutable access to the keys. This must not be used to modify how the key would compare or hash, as the map will not re-evaluate where the key should go, meaning the keys may become &quot;lost&quot; if their location does not reflect their state. For instance, if you change a key so that the map now contains keys which compare equal, search may start acting erratically, with two keys randomly masking each other. Implementations are free to assume this doesn't happen (within the limits of memory-safety).</source>
          <target state="translated">生のエントリは、鍵へのアクセスを変更可能にします。これは、マップがキーの移動先を再評価しないため、キーの位置がその状態を反映していない場合にキーが &quot;失われる&quot; 可能性があることを意味します。たとえば、マップに同じ比較をするキーが含まれるようにキーを変更した場合、検索は不規則な動作を開始し、2 つのキーがランダムに互いにマスクされてしまうことがあります。このようなことが起こらないと仮定して実装するのは自由です (メモリの安全性の範囲内で)。</target>
        </trans-unit>
        <trans-unit id="4825c8fe91ee126a49c569c456289b5e1ad29440" translate="yes" xml:space="preserve">
          <source>Raw entries provide the lowest level of control for searching and manipulating a map. They must be manually initialized with a hash and then manually searched.</source>
          <target state="translated">Raw エントリは、マップを検索および操作するための最低レベルの制御を提供します。これらは手動でハッシュで初期化してから手動で検索する必要があります。</target>
        </trans-unit>
        <trans-unit id="7264462f89ce27f88049bb86a595f171aac68c19" translate="yes" xml:space="preserve">
          <source>Raw entries provide the lowest level of control for searching and manipulating a map. They must be manually initialized with a hash and then manually searched. After this, insertions into a vacant entry still require an owned key to be provided.</source>
          <target state="translated">Raw エントリは、マップを検索および操作するための最低レベルの制御を提供します。これらのエントリは、手動でハッシュで初期化してから手動で検索する必要があります。この後、空のエントリへの挿入には、所有するキーを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="cebcb11fb0265ac1a3233d9748f7535298ce0984" translate="yes" xml:space="preserve">
          <source>Raw file descriptors.</source>
          <target state="translated">生のファイル記述子。</target>
        </trans-unit>
        <trans-unit id="5674bb91d1c8f088048adafa77baf0ba77324d3d" translate="yes" xml:space="preserve">
          <source>Raw identifiers allow you to use any word you choose as an identifier, even if that word happens to be a reserved keyword. In addition, raw identifiers allow you to use libraries written in a different Rust edition than your crate uses. For example, &lt;code&gt;try&lt;/code&gt; isn&amp;rsquo;t a keyword in the 2015 edition but is in the 2018 edition. If you depend on a library that&amp;rsquo;s written using the 2015 edition and has a &lt;code&gt;try&lt;/code&gt; function, you&amp;rsquo;ll need to use the raw identifier syntax, &lt;code&gt;r#try&lt;/code&gt; in this case, to call that function from your 2018 edition code. See &lt;a href=&quot;appendix-05-editions&quot;&gt;Appendix E&lt;/a&gt; for more information on editions.</source>
          <target state="translated">生の識別子を使用すると、たとえその単語がたまたま予約されたキーワードであっても、選択した単語を識別子として使用できます。さらに、未加工の識別子を使用すると、クレートが使用するものとは異なるRustエディションで作成されたライブラリを使用できます。たとえば、 &lt;code&gt;try&lt;/code&gt; は2015版のキーワードではなく、2018版のキーワードです。2015エディションを使用して作成されたライブラリに依存し、 &lt;code&gt;try&lt;/code&gt; 関数がある場合、生の識別子構文（この場合は &lt;code&gt;r#try&lt;/code&gt; )を使用して、2018エディションのコードからその関数を呼び出す必要があります。エディションの詳細については、&lt;a href=&quot;appendix-05-editions&quot;&gt;付録E&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="7f7949d26d4cfe02607f23dc39e0895322e6aff8" translate="yes" xml:space="preserve">
          <source>Raw pointer</source>
          <target state="translated">生ポインタ</target>
        </trans-unit>
        <trans-unit id="7406947610b4aaf9b915c60cba67504792c004b9" translate="yes" xml:space="preserve">
          <source>Raw pointers</source>
          <target state="translated">生ポインタ</target>
        </trans-unit>
        <trans-unit id="a12ebd647fc38e7f16d2980238beb71d987304e1" translate="yes" xml:space="preserve">
          <source>Raw pointers (&lt;code id=&quot;raw-pointers-const-and-mut&quot;&gt;*const&lt;/code&gt; and &lt;code&gt;*mut&lt;/code&gt;)</source>
          <target state="translated">生のポインター（ &lt;code id=&quot;raw-pointers-const-and-mut&quot;&gt;*const&lt;/code&gt; および &lt;code&gt;*mut&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="63e588e35818890d12124a770012df1ed891a04a" translate="yes" xml:space="preserve">
          <source>Raw pointers (&lt;code&gt;*const&lt;/code&gt; and &lt;code&gt;*mut&lt;/code&gt;)</source>
          <target state="translated">生のポインタ（ &lt;code&gt;*const&lt;/code&gt; および &lt;code&gt;*mut&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="21c05f68497d082f5c77ee17b471c212a8e878b4" translate="yes" xml:space="preserve">
          <source>Raw pointers are pointers without safety or liveness guarantees. Raw pointers are written as &lt;code&gt;*const T&lt;/code&gt; or &lt;code&gt;*mut T&lt;/code&gt;, for example &lt;code&gt;*const i32&lt;/code&gt; means a raw pointer to a 32-bit integer. Copying or dropping a raw pointer has no effect on the lifecycle of any other value. Dereferencing a raw pointer is an &lt;a href=&quot;../unsafety&quot;&gt;&lt;code&gt;unsafe&lt;/code&gt; operation&lt;/a&gt;, this can also be used to convert a raw pointer to a reference by reborrowing it (&lt;code&gt;&amp;amp;*&lt;/code&gt; or &lt;code&gt;&amp;amp;mut *&lt;/code&gt;). Raw pointers are generally discouraged in Rust code; they exist to support interoperability with foreign code, and writing performance-critical or low-level functions.</source>
          <target state="translated">生のポインタは、安全性または生存性が保証されていないポインタです。生のポインタは &lt;code&gt;*const T&lt;/code&gt; または &lt;code&gt;*mut T&lt;/code&gt; として書き込まれます。たとえば、 &lt;code&gt;*const i32&lt;/code&gt; は32ビット整数への生のポインタを意味します。生のポインタをコピーまたは削除しても、他の値のライフサイクルには影響しません。生のポインタの逆参照は&lt;a href=&quot;../unsafety&quot;&gt; &lt;code&gt;unsafe&lt;/code&gt; &lt;/a&gt;はない操作です。これを使用して、生のポインタを再借用することにより（ &lt;code&gt;&amp;amp;*&lt;/code&gt; または &lt;code&gt;&amp;amp;mut *&lt;/code&gt; ）、参照に変換することもできます。 Rustコードでは、生のポインタは一般的に推奨されていません。これらは、外部コードとの相互運用性をサポートし、パフォーマンスが重要な関数または低レベルの関数を作成するために存在します。</target>
        </trans-unit>
        <trans-unit id="ddc4e1b145bd3557c3572077fba39b49a6503a23" translate="yes" xml:space="preserve">
          <source>Raw string</source>
          <target state="translated">生の文字列</target>
        </trans-unit>
        <trans-unit id="dd7de7e9fa110484824fffd439c5570abf1de509" translate="yes" xml:space="preserve">
          <source>Raw string literal, escape characters not processed</source>
          <target state="translated">生の文字列リテラル、エスケープ文字は処理されません</target>
        </trans-unit>
        <trans-unit id="ce9a4a772a88d49b6a63f78245488ac96b3f98ab" translate="yes" xml:space="preserve">
          <source>Raw string literals</source>
          <target state="translated">生の文字列リテラル</target>
        </trans-unit>
        <trans-unit id="6b25436df8a9d13f384e036d56b975cfe13bf79c" translate="yes" xml:space="preserve">
          <source>Raw string literals do not process any escapes. They start with the character &lt;code&gt;U+0072&lt;/code&gt; (&lt;code&gt;r&lt;/code&gt;), followed by zero or more of the character &lt;code&gt;U+0023&lt;/code&gt; (&lt;code&gt;#&lt;/code&gt;) and a &lt;code&gt;U+0022&lt;/code&gt; (double-quote) character. The &lt;em&gt;raw string body&lt;/em&gt; can contain any sequence of Unicode characters and is terminated only by another &lt;code&gt;U+0022&lt;/code&gt; (double-quote) character, followed by the same number of &lt;code&gt;U+0023&lt;/code&gt; (&lt;code&gt;#&lt;/code&gt;) characters that preceded the opening &lt;code&gt;U+0022&lt;/code&gt; (double-quote) character.</source>
          <target state="translated">生の文字列リテラルはエスケープを処理しません。それらは文字 &lt;code&gt;U+0072&lt;/code&gt; （ &lt;code&gt;r&lt;/code&gt; ）で始まり、その後に0個以上の文字 &lt;code&gt;U+0023&lt;/code&gt; （ &lt;code&gt;#&lt;/code&gt; ）と &lt;code&gt;U+0022&lt;/code&gt; （二重引用符）文字が続きます。&lt;em&gt;生の文字列本体には、&lt;/em&gt; Unicode文字の任意のシーケンスを含めることができ、唯一の別によって終了される &lt;code&gt;U+0022&lt;/code&gt; の同じ番号が続く（二重引用符）文字、 &lt;code&gt;U+0023&lt;/code&gt; （ &lt;code&gt;#&lt;/code&gt; 開口部の前）の文字 &lt;code&gt;U+0022&lt;/code&gt; （ダブルを引用）文字。</target>
        </trans-unit>
        <trans-unit id="68a7417cc6769829649fcfed5749842b585ccee5" translate="yes" xml:space="preserve">
          <source>Raw transmutation from &lt;code&gt;u32&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;u32&lt;/code&gt; からのそのままの変換。</target>
        </trans-unit>
        <trans-unit id="fcdcdcf1390a8765d6d030ed528f059cf54eff93" translate="yes" xml:space="preserve">
          <source>Raw transmutation from &lt;code&gt;u64&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;u64&lt;/code&gt; からのそのままの変換。</target>
        </trans-unit>
        <trans-unit id="0685aac7f9b0bb6004103bf8ba6ab0c44d6656b2" translate="yes" xml:space="preserve">
          <source>Raw transmutation to &lt;code&gt;u32&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;u32&lt;/code&gt; への生の変換。</target>
        </trans-unit>
        <trans-unit id="180adb907a3ae4d47cd70799fba42cc7e508cc2b" translate="yes" xml:space="preserve">
          <source>Raw transmutation to &lt;code&gt;u64&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;u64&lt;/code&gt; への生の変換。</target>
        </trans-unit>
        <trans-unit id="48d7233e8353fa113dafdcba1071a73f03575b29" translate="yes" xml:space="preserve">
          <source>Raw, unsafe pointers, &lt;code&gt;*const T&lt;/code&gt;, and &lt;code&gt;*mut T&lt;/code&gt;.</source>
          <target state="translated">生の、危険なポインター、 &lt;code&gt;*const T&lt;/code&gt; 、および &lt;code&gt;*mut T&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="83f75f43a785a6515cbca140dd7f3e6fa2639dde" translate="yes" xml:space="preserve">
          <source>RawEntryBuilder</source>
          <target state="translated">RawEntryBuilder</target>
        </trans-unit>
        <trans-unit id="19944150fbd62e3cd5ecd2c35f38ac069e0b178a" translate="yes" xml:space="preserve">
          <source>RawEntryBuilderMut</source>
          <target state="translated">RawEntryBuilderMut</target>
        </trans-unit>
        <trans-unit id="f7324d8b69bfefad2904635fdd497d75980ea184" translate="yes" xml:space="preserve">
          <source>RawEntryMut</source>
          <target state="translated">RawEntryMut</target>
        </trans-unit>
        <trans-unit id="7dfa8ca472cca1021fd9d72c0870e52f7b67a551" translate="yes" xml:space="preserve">
          <source>RawFd</source>
          <target state="translated">RawFd</target>
        </trans-unit>
        <trans-unit id="d9a1393b8d5db2df1f4779de5821b26748af8a41" translate="yes" xml:space="preserve">
          <source>RawHandle</source>
          <target state="translated">RawHandle</target>
        </trans-unit>
        <trans-unit id="dcf879f07dfe2e14f84862e6ae209b67788fda90" translate="yes" xml:space="preserve">
          <source>RawOccupiedEntryMut</source>
          <target state="translated">RawOccupiedEntryMut</target>
        </trans-unit>
        <trans-unit id="7474b5f47a51fb6c94588c0ce88d876674ffdd32" translate="yes" xml:space="preserve">
          <source>RawPthread</source>
          <target state="translated">RawPthread</target>
        </trans-unit>
        <trans-unit id="05838f9aa51ee0e029863aaafabf0e0dbb10f0d7" translate="yes" xml:space="preserve">
          <source>RawSocket</source>
          <target state="translated">RawSocket</target>
        </trans-unit>
        <trans-unit id="f1b8c077881e860127f49eae1e895c4b8a774204" translate="yes" xml:space="preserve">
          <source>RawVacantEntryMut</source>
          <target state="translated">RawVacantEntryMut</target>
        </trans-unit>
        <trans-unit id="e01624343349cda84160ca75a20b11c87a7660ee" translate="yes" xml:space="preserve">
          <source>RawWaker</source>
          <target state="translated">RawWaker</target>
        </trans-unit>
        <trans-unit id="e5007945aaf2d6f4d4bcf9bc1772c0464fa73a29" translate="yes" xml:space="preserve">
          <source>RawWaker::borrow</source>
          <target state="translated">RawWaker::borrow</target>
        </trans-unit>
        <trans-unit id="e1cbf5ad2f63c5b526e0043dac5b54c220be2d3d" translate="yes" xml:space="preserve">
          <source>RawWaker::borrow_mut</source>
          <target state="translated">RawWaker::borrow_mut</target>
        </trans-unit>
        <trans-unit id="52ca019e644732d1a28801cc63167c2908f006f6" translate="yes" xml:space="preserve">
          <source>RawWaker::eq</source>
          <target state="translated">RawWaker::eq</target>
        </trans-unit>
        <trans-unit id="d0f83b66634d1171ca6ff02de43889bdcdc3fef4" translate="yes" xml:space="preserve">
          <source>RawWaker::fmt</source>
          <target state="translated">RawWaker::fmt</target>
        </trans-unit>
        <trans-unit id="20a35391f8f3168faad4572961d9bd5222149ae8" translate="yes" xml:space="preserve">
          <source>RawWaker::from</source>
          <target state="translated">RawWaker::from</target>
        </trans-unit>
        <trans-unit id="b610c7d00b4203be6be965531712845e466c840d" translate="yes" xml:space="preserve">
          <source>RawWaker::into</source>
          <target state="translated">RawWaker::into</target>
        </trans-unit>
        <trans-unit id="c4337cf232150994d112f31e267d8a4b8bbb00a9" translate="yes" xml:space="preserve">
          <source>RawWaker::ne</source>
          <target state="translated">RawWaker::ne</target>
        </trans-unit>
        <trans-unit id="bf5ed9d18d96e4ee4c0f6b77ba265ff929cdec87" translate="yes" xml:space="preserve">
          <source>RawWaker::new</source>
          <target state="translated">RawWaker::new</target>
        </trans-unit>
        <trans-unit id="7abd5bc80089f4e513451111bcdd6f4c398f4789" translate="yes" xml:space="preserve">
          <source>RawWaker::try_from</source>
          <target state="translated">RawWaker::try_from</target>
        </trans-unit>
        <trans-unit id="95014173bb8607151ba9c8e3dc23823f0da0ea5b" translate="yes" xml:space="preserve">
          <source>RawWaker::try_into</source>
          <target state="translated">RawWaker::try_into</target>
        </trans-unit>
        <trans-unit id="bbbf1bae13c3774d77408b49dd1dafe48352edf0" translate="yes" xml:space="preserve">
          <source>RawWaker::type_id</source>
          <target state="translated">RawWaker::type_id</target>
        </trans-unit>
        <trans-unit id="298a7c00cdb228653b985b7402ed7448afdb7444" translate="yes" xml:space="preserve">
          <source>RawWakerVTable</source>
          <target state="translated">RawWakerVTable</target>
        </trans-unit>
        <trans-unit id="3334e0496c27f0d7d788f93e73b49ff3a1e63344" translate="yes" xml:space="preserve">
          <source>RawWakerVTable::borrow</source>
          <target state="translated">RawWakerVTable::borrow</target>
        </trans-unit>
        <trans-unit id="762a3a24ac993468b97fc6d3f0b31aa3b845c70b" translate="yes" xml:space="preserve">
          <source>RawWakerVTable::borrow_mut</source>
          <target state="translated">RawWakerVTable::borrow_mut</target>
        </trans-unit>
        <trans-unit id="97b470761c01ea77f474700031413e3a6ea3530d" translate="yes" xml:space="preserve">
          <source>RawWakerVTable::clone</source>
          <target state="translated">RawWakerVTable::clone</target>
        </trans-unit>
        <trans-unit id="127466810bfe974a3953b5a4c1a3823c0e130053" translate="yes" xml:space="preserve">
          <source>RawWakerVTable::clone_from</source>
          <target state="translated">RawWakerVTable::clone_from</target>
        </trans-unit>
        <trans-unit id="96f81056d1534820ba9537c329dbf0e68fc46153" translate="yes" xml:space="preserve">
          <source>RawWakerVTable::clone_into</source>
          <target state="translated">RawWakerVTable::clone_into</target>
        </trans-unit>
        <trans-unit id="a94826b89f4c75e8315e7f7ccbdb8b546b92cf53" translate="yes" xml:space="preserve">
          <source>RawWakerVTable::eq</source>
          <target state="translated">RawWakerVTable::eq</target>
        </trans-unit>
        <trans-unit id="2a2e485112e56f413fae5e5bcedc98aae83cf37a" translate="yes" xml:space="preserve">
          <source>RawWakerVTable::fmt</source>
          <target state="translated">RawWakerVTable::fmt</target>
        </trans-unit>
        <trans-unit id="a84648954f67c75de1839a4fad7195026720b5c0" translate="yes" xml:space="preserve">
          <source>RawWakerVTable::from</source>
          <target state="translated">RawWakerVTable::from</target>
        </trans-unit>
        <trans-unit id="907841883ee46692991c759ae22a60c806a56167" translate="yes" xml:space="preserve">
          <source>RawWakerVTable::into</source>
          <target state="translated">RawWakerVTable::into</target>
        </trans-unit>
        <trans-unit id="ff2d509f363eae5cdb38db232a5bb87ba07276e2" translate="yes" xml:space="preserve">
          <source>RawWakerVTable::ne</source>
          <target state="translated">RawWakerVTable::ne</target>
        </trans-unit>
        <trans-unit id="944fd565916eec63e25c1d1e7bfff8659b2068b2" translate="yes" xml:space="preserve">
          <source>RawWakerVTable::new</source>
          <target state="translated">RawWakerVTable::new</target>
        </trans-unit>
        <trans-unit id="0214bb9d2f118b836755a0ed721b0dc7e366f6cf" translate="yes" xml:space="preserve">
          <source>RawWakerVTable::to_owned</source>
          <target state="translated">RawWakerVTable::to_owned</target>
        </trans-unit>
        <trans-unit id="76b560873b944933076ea754bd95f4211475466b" translate="yes" xml:space="preserve">
          <source>RawWakerVTable::try_from</source>
          <target state="translated">RawWakerVTable::try_from</target>
        </trans-unit>
        <trans-unit id="98ca7063102d141de019577f46960b34ff728119" translate="yes" xml:space="preserve">
          <source>RawWakerVTable::try_into</source>
          <target state="translated">RawWakerVTable::try_into</target>
        </trans-unit>
        <trans-unit id="8304a3619516dfd57333fc1ad6b89030c49be112" translate="yes" xml:space="preserve">
          <source>RawWakerVTable::type_id</source>
          <target state="translated">RawWakerVTable::type_id</target>
        </trans-unit>
        <trans-unit id="e41846b6fc0629040ca45e4774a707cf11fbcc70" translate="yes" xml:space="preserve">
          <source>Rc</source>
          <target state="translated">Rc</target>
        </trans-unit>
        <trans-unit id="6517edc47f13b27430661ac11c9da860bde5704e" translate="yes" xml:space="preserve">
          <source>Rc::as_ref</source>
          <target state="translated">Rc::as_ref</target>
        </trans-unit>
        <trans-unit id="67915b83766b78317844ca8bb132e071aae98ddf" translate="yes" xml:space="preserve">
          <source>Rc::borrow</source>
          <target state="translated">Rc::borrow</target>
        </trans-unit>
        <trans-unit id="c405ab74bad409ac96f33954bff2c180b764c98f" translate="yes" xml:space="preserve">
          <source>Rc::borrow_mut</source>
          <target state="translated">Rc::borrow_mut</target>
        </trans-unit>
        <trans-unit id="a3292b38c68d436499b9fe522bcff44f881ecbb9" translate="yes" xml:space="preserve">
          <source>Rc::clamp</source>
          <target state="translated">Rc::clamp</target>
        </trans-unit>
        <trans-unit id="d890a77f3da6fad9942aaece8c23a119f666a869" translate="yes" xml:space="preserve">
          <source>Rc::clone</source>
          <target state="translated">Rc::clone</target>
        </trans-unit>
        <trans-unit id="29de9827fb5b10a0afcc911928b6498e3b6971c5" translate="yes" xml:space="preserve">
          <source>Rc::clone_from</source>
          <target state="translated">Rc::clone_from</target>
        </trans-unit>
        <trans-unit id="24956a1d93f9d128a9159fd0aea637b4404c53f8" translate="yes" xml:space="preserve">
          <source>Rc::clone_into</source>
          <target state="translated">Rc::clone_into</target>
        </trans-unit>
        <trans-unit id="24b375a76909b2d126a14d740fa5173f475ca7a2" translate="yes" xml:space="preserve">
          <source>Rc::cmp</source>
          <target state="translated">Rc::cmp</target>
        </trans-unit>
        <trans-unit id="f9800254b64c342eb5eaa1e6e2b1f2b5ac84c6b8" translate="yes" xml:space="preserve">
          <source>Rc::default</source>
          <target state="translated">Rc::default</target>
        </trans-unit>
        <trans-unit id="7463c5f1f25192b85fee7b883c0259794ebc158c" translate="yes" xml:space="preserve">
          <source>Rc::deref</source>
          <target state="translated">Rc::deref</target>
        </trans-unit>
        <trans-unit id="437c663d6a1aaaf62df967752858a825de23b1e0" translate="yes" xml:space="preserve">
          <source>Rc::downcast</source>
          <target state="translated">Rc::downcast</target>
        </trans-unit>
        <trans-unit id="41f262cff55a35445444e59fadcc95448199cb72" translate="yes" xml:space="preserve">
          <source>Rc::downgrade</source>
          <target state="translated">Rc::downgrade</target>
        </trans-unit>
        <trans-unit id="2e346041da04343d36f6c8400429a5d338eeca29" translate="yes" xml:space="preserve">
          <source>Rc::drop</source>
          <target state="translated">Rc::drop</target>
        </trans-unit>
        <trans-unit id="f38251d94ae1e2e5048c680cf755a333c59f3fc7" translate="yes" xml:space="preserve">
          <source>Rc::eq</source>
          <target state="translated">Rc::eq</target>
        </trans-unit>
        <trans-unit id="ea2cecadcb1e18ef06c50655e10e1c6f42a34a24" translate="yes" xml:space="preserve">
          <source>Rc::fmt</source>
          <target state="translated">Rc::fmt</target>
        </trans-unit>
        <trans-unit id="9a8fab14b21f704c3211f754faaaaf8506b44664" translate="yes" xml:space="preserve">
          <source>Rc::from</source>
          <target state="translated">Rc::from</target>
        </trans-unit>
        <trans-unit id="6f21340bb9811b1fa6ffb6aa7c686429a838958d" translate="yes" xml:space="preserve">
          <source>Rc::from_raw</source>
          <target state="translated">Rc::from_raw</target>
        </trans-unit>
        <trans-unit id="92d54b54dcfea2c0e4fc43b6f8771645b3ad97ee" translate="yes" xml:space="preserve">
          <source>Rc::ge</source>
          <target state="translated">Rc::ge</target>
        </trans-unit>
        <trans-unit id="a8a4341af4296515a6a9840869ffb4ac60849dec" translate="yes" xml:space="preserve">
          <source>Rc::get_mut</source>
          <target state="translated">Rc::get_mut</target>
        </trans-unit>
        <trans-unit id="e343fa41eda7431d24bf4a0566c71d70fa9e0e66" translate="yes" xml:space="preserve">
          <source>Rc::gt</source>
          <target state="translated">Rc::gt</target>
        </trans-unit>
        <trans-unit id="477a21f650bf293924ae2b8d7fda7a9637062797" translate="yes" xml:space="preserve">
          <source>Rc::hash</source>
          <target state="translated">Rc::hash</target>
        </trans-unit>
        <trans-unit id="93c547a4144fe1ddfd28536f64cb3f73700d8e05" translate="yes" xml:space="preserve">
          <source>Rc::hash_slice</source>
          <target state="translated">Rc::hash_slice</target>
        </trans-unit>
        <trans-unit id="4bf183ec1f763d571f214362371d97baba67c20f" translate="yes" xml:space="preserve">
          <source>Rc::into</source>
          <target state="translated">Rc::into</target>
        </trans-unit>
        <trans-unit id="82d5004fa31049d42e2cfa990c95db3dc6c575f4" translate="yes" xml:space="preserve">
          <source>Rc::into_raw</source>
          <target state="translated">Rc::into_raw</target>
        </trans-unit>
        <trans-unit id="071c7886fc93722fa637281f1c3dfc8ca4234a75" translate="yes" xml:space="preserve">
          <source>Rc::into_raw_non_null</source>
          <target state="translated">Rc::into_raw_non_null</target>
        </trans-unit>
        <trans-unit id="028083c7d4502d5ccd5add65c502eea0ad017cb7" translate="yes" xml:space="preserve">
          <source>Rc::le</source>
          <target state="translated">Rc::le</target>
        </trans-unit>
        <trans-unit id="6b2eb732f96319fd192f3341b446ba0b96d18d0a" translate="yes" xml:space="preserve">
          <source>Rc::lt</source>
          <target state="translated">Rc::lt</target>
        </trans-unit>
        <trans-unit id="6a956ae11a6efd7cbe207538a3da9ccc2097ed76" translate="yes" xml:space="preserve">
          <source>Rc::make_mut</source>
          <target state="translated">Rc::make_mut</target>
        </trans-unit>
        <trans-unit id="ee0f387fd3170cb93e0698988fffe873d43023bc" translate="yes" xml:space="preserve">
          <source>Rc::max</source>
          <target state="translated">Rc::max</target>
        </trans-unit>
        <trans-unit id="bef959198cdfa4e2a1bcf79bf303cee04aa165bb" translate="yes" xml:space="preserve">
          <source>Rc::min</source>
          <target state="translated">Rc::min</target>
        </trans-unit>
        <trans-unit id="99d24a130a9a5972cbb8fcae715482186eae2ee8" translate="yes" xml:space="preserve">
          <source>Rc::ne</source>
          <target state="translated">Rc::ne</target>
        </trans-unit>
        <trans-unit id="275e09b18245b0e67843a64cbfb82c43d394df8f" translate="yes" xml:space="preserve">
          <source>Rc::new</source>
          <target state="translated">Rc::new</target>
        </trans-unit>
        <trans-unit id="bf9edff9d69a46439cc5be7818dc0bda63766fb6" translate="yes" xml:space="preserve">
          <source>Rc::partial_cmp</source>
          <target state="translated">Rc::partial_cmp</target>
        </trans-unit>
        <trans-unit id="16474f5cf6e975f5e66de86716d5af9402297f2a" translate="yes" xml:space="preserve">
          <source>Rc::pin</source>
          <target state="translated">Rc::pin</target>
        </trans-unit>
        <trans-unit id="f37b795cddee2f0f1dd79a2fa2341b27f07bc1f6" translate="yes" xml:space="preserve">
          <source>Rc::ptr_eq</source>
          <target state="translated">Rc::ptr_eq</target>
        </trans-unit>
        <trans-unit id="dcfa1994b79481531dd3c385752d484451452d0e" translate="yes" xml:space="preserve">
          <source>Rc::strong_count</source>
          <target state="translated">Rc::strong_count</target>
        </trans-unit>
        <trans-unit id="47f9ddc26a8368cf587d5faaaadd5da29196be63" translate="yes" xml:space="preserve">
          <source>Rc::to_owned</source>
          <target state="translated">Rc::to_owned</target>
        </trans-unit>
        <trans-unit id="cba79fb5cb6c0a8a914e02983e67891226615d49" translate="yes" xml:space="preserve">
          <source>Rc::to_string</source>
          <target state="translated">Rc::to_string</target>
        </trans-unit>
        <trans-unit id="6dff3e421f497a7da71da51e03f15d004aaee469" translate="yes" xml:space="preserve">
          <source>Rc::try_from</source>
          <target state="translated">Rc::try_from</target>
        </trans-unit>
        <trans-unit id="c858338cb38e7bca5faf54c3e8c44a4f7fb8befa" translate="yes" xml:space="preserve">
          <source>Rc::try_into</source>
          <target state="translated">Rc::try_into</target>
        </trans-unit>
        <trans-unit id="caf7a897ec1f1b1f5619be996a3580ab1eb9c125" translate="yes" xml:space="preserve">
          <source>Rc::try_unwrap</source>
          <target state="translated">Rc::try_unwrap</target>
        </trans-unit>
        <trans-unit id="dbbbf7f2a4b6ec85cb35b85dfd7b27db8474f438" translate="yes" xml:space="preserve">
          <source>Rc::type_id</source>
          <target state="translated">Rc::type_id</target>
        </trans-unit>
        <trans-unit id="f7c4b870b777d209ca5ee6d0c53d6c182e8a583d" translate="yes" xml:space="preserve">
          <source>Rc::weak_count</source>
          <target state="translated">Rc::weak_count</target>
        </trans-unit>
        <trans-unit id="a7c2ca08d406f13126e4d50a8c8832d618eb2a16" translate="yes" xml:space="preserve">
          <source>Re-encodes an &lt;code&gt;OsStr&lt;/code&gt; as a wide character sequence, i.e., potentially ill-formed UTF-16.</source>
          <target state="translated">&lt;code&gt;OsStr&lt;/code&gt; をワイド文字シーケンス（つまり、形式が正しくないUTF-16）として再エンコードします。</target>
        </trans-unit>
        <trans-unit id="c65fce14fc83f6f42d4be42b83f6efc530f4e1d0" translate="yes" xml:space="preserve">
          <source>Re-encodes an &lt;code&gt;OsStr&lt;/code&gt; as a wide character sequence, i.e., potentially ill-formed UTF-16. &lt;a href=&quot;../os/windows/ffi/trait.osstrext#tymethod.encode_wide&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;OsStr&lt;/code&gt; をワイド文字シーケンス（つまり、形式が正しくないUTF-16）として再エンコードします。&lt;a href=&quot;../os/windows/ffi/trait.osstrext#tymethod.encode_wide&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c7cc3d5baa1039b8b28d9886a65117fb3d07b0d7" translate="yes" xml:space="preserve">
          <source>Re-exporting Names with &lt;code id=&quot;re-exporting-names-with-pub-use&quot;&gt;pub use&lt;/code&gt;</source>
          <target state="translated">名前を &lt;code id=&quot;re-exporting-names-with-pub-use&quot;&gt;pub use&lt;/code&gt; して再エクスポートする</target>
        </trans-unit>
        <trans-unit id="82136ea74433a2e4719706a67293ee7c476aae39" translate="yes" xml:space="preserve">
          <source>Re-exporting and Visibility</source>
          <target state="translated">再輸出と可視化</target>
        </trans-unit>
        <trans-unit id="9b6de882250ca9be8bad1b7021dc7796554dbdfd" translate="yes" xml:space="preserve">
          <source>Re-exporting is useful when the internal structure of your code is different from how programmers calling your code would think about the domain. For example, in this restaurant metaphor, the people running the restaurant think about &amp;ldquo;front of house&amp;rdquo; and &amp;ldquo;back of house.&amp;rdquo; But customers visiting a restaurant probably won&amp;rsquo;t think about the parts of the restaurant in those terms. With &lt;code&gt;pub use&lt;/code&gt;, we can write our code with one structure but expose a different structure. Doing so makes our library well organized for programmers working on the library and programmers calling the library.</source>
          <target state="translated">再エクスポートは、コードの内部構造が、コードを呼び出すプログラマーがドメインについて考える方法と異なる場合に役立ちます。たとえば、このレストランのメタファーでは、レストランを経営する人々は「家の前」と「家の裏」について考えています。しかし、レストランを訪問する顧客は、おそらくその意味でレストランの部分については考えないでしょう。 &lt;code&gt;pub use&lt;/code&gt; 、我々は一つの構造と私たちのコードを書くが、異なる構造を公開することができます。そうすることで、ライブラリを操作するプログラマーやライブラリーを呼び出すプログラマーのために、ライブラリーが適切に編成されます。</target>
        </trans-unit>
        <trans-unit id="eda2bfe47f1cfbe6424bba7d3a76f901f6b42466" translate="yes" xml:space="preserve">
          <source>Re-exports</source>
          <target state="translated">Re-exports</target>
        </trans-unit>
        <trans-unit id="d422a17942f96c2a0a2768e2e29ad7a5844366b8" translate="yes" xml:space="preserve">
          <source>Reaches into this error indicating that a lock is poisoned, returning a mutable reference to the underlying guard to allow access regardless.</source>
          <target state="translated">ロックがポイズンされていることを示すこのエラーに到達し、アクセスを許可するために基礎となるガードへの変更可能な参照を返します。</target>
        </trans-unit>
        <trans-unit id="7f450ae4387b2d2205a4a8e45edc9260e6dbf0d1" translate="yes" xml:space="preserve">
          <source>Reaches into this error indicating that a lock is poisoned, returning a reference to the underlying guard to allow access regardless.</source>
          <target state="translated">ロックが毒されていることを示すこのエラーに到達し、関係なくアクセスを許可するために基礎となるガードへの参照を返します。</target>
        </trans-unit>
        <trans-unit id="ad880641ccbd447b37bb099d2267d49ac661fa0f" translate="yes" xml:space="preserve">
          <source>Reaching this function is completely &lt;em&gt;undefined behavior&lt;/em&gt; (UB). In particular, the compiler assumes that all UB must never happen, and therefore will eliminate all branches that reach to a call to &lt;code&gt;unreachable_unchecked()&lt;/code&gt;.</source>
          <target state="translated">この関数に到達することは完全に&lt;em&gt;未定義の動作&lt;/em&gt;（UB）です。特に、コンパイラーはすべてのUBが発生してはならないことを前提としているため、 &lt;code&gt;unreachable_unchecked()&lt;/code&gt; への呼び出しに到達するすべてのブランチを排除します。</target>
        </trans-unit>
        <trans-unit id="852b438f91ad9eb2cdd84419a675a216d543c687" translate="yes" xml:space="preserve">
          <source>Read</source>
          <target state="translated">Read</target>
        </trans-unit>
        <trans-unit id="4955b79d82f58e610ad1791b2e2b696ff640fda0" translate="yes" xml:space="preserve">
          <source>Read all bytes into &lt;code&gt;buf&lt;/code&gt; until the delimiter &lt;code&gt;byte&lt;/code&gt; or EOF is reached.</source>
          <target state="translated">区切り &lt;code&gt;byte&lt;/code&gt; またはEOFに達するまで、すべてのバイトを &lt;code&gt;buf&lt;/code&gt; に読み取ります。</target>
        </trans-unit>
        <trans-unit id="dfabe443014fd9d0acde13e506476c45f39f3be9" translate="yes" xml:space="preserve">
          <source>Read all bytes into &lt;code&gt;buf&lt;/code&gt; until the delimiter &lt;code&gt;byte&lt;/code&gt; or EOF is reached. &lt;a href=&quot;../io/trait.bufread#method.read_until&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">区切り &lt;code&gt;byte&lt;/code&gt; またはEOFに達するまで、すべてのバイトを &lt;code&gt;buf&lt;/code&gt; に読み取ります。&lt;a href=&quot;../io/trait.bufread#method.read_until&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e1dd5fa24fac04708eb7d09f9b71eafae3652625" translate="yes" xml:space="preserve">
          <source>Read all bytes into &lt;code&gt;buf&lt;/code&gt; until the delimiter &lt;code&gt;byte&lt;/code&gt; or EOF is reached. &lt;a href=&quot;io/trait.bufread#method.read_until&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">区切り &lt;code&gt;byte&lt;/code&gt; またはEOFに達するまで、すべてのバイトを &lt;code&gt;buf&lt;/code&gt; に読み取ります。&lt;a href=&quot;io/trait.bufread#method.read_until&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="20c68943490eab75b8393886c786bfce41ed538d" translate="yes" xml:space="preserve">
          <source>Read all bytes into &lt;code&gt;buf&lt;/code&gt; until the delimiter &lt;code&gt;byte&lt;/code&gt; or EOF is reached. &lt;a href=&quot;trait.bufread#method.read_until&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">区切り &lt;code&gt;byte&lt;/code&gt; またはEOFに達するまで、すべてのバイトを &lt;code&gt;buf&lt;/code&gt; に読み取ります。&lt;a href=&quot;trait.bufread#method.read_until&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8628d8ad46a6f777556d3ae690c981be0fe616e0" translate="yes" xml:space="preserve">
          <source>Read all bytes until EOF in this source, appending them to &lt;code&gt;buf&lt;/code&gt;.</source>
          <target state="translated">このソースでEOFまですべてのバイトを読み取り、それらを &lt;code&gt;buf&lt;/code&gt; に追加します。</target>
        </trans-unit>
        <trans-unit id="4b5cedd3b11440f67471416111bbead4c1055ef8" translate="yes" xml:space="preserve">
          <source>Read all bytes until EOF in this source, appending them to &lt;code&gt;buf&lt;/code&gt;. &lt;a href=&quot;../../../io/trait.read#method.read_to_string&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">このソースでEOFまですべてのバイトを読み取り、それらを &lt;code&gt;buf&lt;/code&gt; に追加します。&lt;a href=&quot;../../../io/trait.read#method.read_to_string&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="59b632cacba411fc615d971cf83a9c99771e175c" translate="yes" xml:space="preserve">
          <source>Read all bytes until EOF in this source, appending them to &lt;code&gt;buf&lt;/code&gt;. &lt;a href=&quot;../io/trait.read#method.read_to_string&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">このソースでEOFまですべてのバイトを読み取り、それらを &lt;code&gt;buf&lt;/code&gt; に追加します。&lt;a href=&quot;../io/trait.read#method.read_to_string&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="23ce0337f8ae37e3141425a9d23a5a07e0ecef22" translate="yes" xml:space="preserve">
          <source>Read all bytes until EOF in this source, appending them to &lt;code&gt;buf&lt;/code&gt;. &lt;a href=&quot;io/trait.read#method.read_to_string&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">このソースでEOFまですべてのバイトを読み取り、それらを &lt;code&gt;buf&lt;/code&gt; に追加します。&lt;a href=&quot;io/trait.read#method.read_to_string&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cf3cd2b44ab1ca46c20cfdb34b4ecc0c77df4924" translate="yes" xml:space="preserve">
          <source>Read all bytes until EOF in this source, appending them to &lt;code&gt;buf&lt;/code&gt;. &lt;a href=&quot;trait.read#method.read_to_string&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">このソースでEOFまですべてのバイトを読み取り、それらを &lt;code&gt;buf&lt;/code&gt; に追加します。&lt;a href=&quot;trait.read#method.read_to_string&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6b17a0327950722df7ef31829395e2be5f4c5fdf" translate="yes" xml:space="preserve">
          <source>Read all bytes until EOF in this source, placing them into &lt;code&gt;buf&lt;/code&gt;.</source>
          <target state="translated">このソースのEOFまですべてのバイトを読み取り、それらを &lt;code&gt;buf&lt;/code&gt; に配置します。</target>
        </trans-unit>
        <trans-unit id="627f30f10b9df729ca25248b091ba0a8176cc6d4" translate="yes" xml:space="preserve">
          <source>Read all bytes until EOF in this source, placing them into &lt;code&gt;buf&lt;/code&gt;. &lt;a href=&quot;../../../io/trait.read#method.read_to_end&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">このソースのEOFまですべてのバイトを読み取り、それらを &lt;code&gt;buf&lt;/code&gt; に配置します。&lt;a href=&quot;../../../io/trait.read#method.read_to_end&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b148b8b5287b4d894508c6abeeba65687360fad4" translate="yes" xml:space="preserve">
          <source>Read all bytes until EOF in this source, placing them into &lt;code&gt;buf&lt;/code&gt;. &lt;a href=&quot;../io/trait.read#method.read_to_end&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">このソースのEOFまですべてのバイトを読み取り、それらを &lt;code&gt;buf&lt;/code&gt; に配置します。&lt;a href=&quot;../io/trait.read#method.read_to_end&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a8b89d5304a56b297c4a2c9dd2f4bbad258bd98a" translate="yes" xml:space="preserve">
          <source>Read all bytes until EOF in this source, placing them into &lt;code&gt;buf&lt;/code&gt;. &lt;a href=&quot;io/trait.read#method.read_to_end&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">このソースのEOFまですべてのバイトを読み取り、それらを &lt;code&gt;buf&lt;/code&gt; に配置します。&lt;a href=&quot;io/trait.read#method.read_to_end&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c7fe0dd9ca78711718f83ccddfb730235826eff1" translate="yes" xml:space="preserve">
          <source>Read all bytes until EOF in this source, placing them into &lt;code&gt;buf&lt;/code&gt;. &lt;a href=&quot;trait.read#method.read_to_end&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">このソースのEOFまですべてのバイトを読み取り、それらを &lt;code&gt;buf&lt;/code&gt; に配置します。&lt;a href=&quot;trait.read#method.read_to_end&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d67dd80be945c4cef5eb0023ca9b40ca8b949703" translate="yes" xml:space="preserve">
          <source>Read all bytes until a newline (the 0xA byte) is reached, and append them to the provided buffer.</source>
          <target state="translated">改行(0xA バイト)に達するまですべてのバイトを読み込み、指定されたバッファに追加します。</target>
        </trans-unit>
        <trans-unit id="1b7f423ebbc16f7d003501fab2fe3bebdec4126d" translate="yes" xml:space="preserve">
          <source>Read all bytes until a newline (the 0xA byte) is reached, and append them to the provided buffer. &lt;a href=&quot;../io/trait.bufread#method.read_line&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">改行（0xAバイト）に達するまですべてのバイトを読み取り、それらを提供されたバッファーに追加します。&lt;a href=&quot;../io/trait.bufread#method.read_line&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8e6bae6c84a5776f4a3d37dc14c6b1f4f56df8da" translate="yes" xml:space="preserve">
          <source>Read all bytes until a newline (the 0xA byte) is reached, and append them to the provided buffer. &lt;a href=&quot;io/trait.bufread#method.read_line&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">改行（0xAバイト）に達するまですべてのバイトを読み取り、それらを提供されたバッファーに追加します。&lt;a href=&quot;io/trait.bufread#method.read_line&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="84e51af9a2e398af1f37897ece84ea5babfc3811" translate="yes" xml:space="preserve">
          <source>Read all bytes until a newline (the 0xA byte) is reached, and append them to the provided buffer. &lt;a href=&quot;trait.bufread#method.read_line&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">改行（0xAバイト）に達するまですべてのバイトを読み取り、それらを提供されたバッファーに追加します。&lt;a href=&quot;trait.bufread#method.read_line&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="21467e8f1c05ad84916bede4a1b63acc99f4eec9" translate="yes" xml:space="preserve">
          <source>Read all bytes until a newline (the &lt;code&gt;0xA&lt;/code&gt; byte) is reached, and append them to the provided buffer.</source>
          <target state="translated">改行（ &lt;code&gt;0xA&lt;/code&gt; バイト）に達するまですべてのバイトを読み取り、提供されたバッファーに追加します。</target>
        </trans-unit>
        <trans-unit id="285c4803ba02e3a4e2e0f798cdefdab5f8097d4b" translate="yes" xml:space="preserve">
          <source>Read all bytes until a newline (the &lt;code&gt;0xA&lt;/code&gt; byte) is reached, and append them to the provided buffer. &lt;a href=&quot;../io/trait.bufread#method.read_line&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">改行（ &lt;code&gt;0xA&lt;/code&gt; バイト）に達するまですべてのバイトを読み取り、提供されたバッファーに追加します。&lt;a href=&quot;../io/trait.bufread#method.read_line&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4924d08a4f7c3aa7dacc3adbe0bed76226888f1f" translate="yes" xml:space="preserve">
          <source>Read all bytes until a newline (the &lt;code&gt;0xA&lt;/code&gt; byte) is reached, and append them to the provided buffer. &lt;a href=&quot;io/trait.bufread#method.read_line&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">改行（ &lt;code&gt;0xA&lt;/code&gt; バイト）に達するまですべてのバイトを読み取り、提供されたバッファーに追加します。&lt;a href=&quot;io/trait.bufread#method.read_line&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7c95b76feb1f56f315462f7eff47774d6e261941" translate="yes" xml:space="preserve">
          <source>Read all bytes until a newline (the &lt;code&gt;0xA&lt;/code&gt; byte) is reached, and append them to the provided buffer. &lt;a href=&quot;trait.bufread#method.read_line&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">改行（ &lt;code&gt;0xA&lt;/code&gt; バイト）に達するまですべてのバイトを読み取り、提供されたバッファーに追加します。&lt;a href=&quot;trait.bufread#method.read_line&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8660ceb29d045a4f5c79fdab0995bfcd03bc6c95" translate="yes" xml:space="preserve">
          <source>Read an usize value from a byte buffer:</source>
          <target state="translated">バイトバッファからユーザサイズの値を読み込みます。</target>
        </trans-unit>
        <trans-unit id="8bf38e07e361334d95c3bdc1284defa3881000c6" translate="yes" xml:space="preserve">
          <source>Read and Write</source>
          <target state="translated">読み書き</target>
        </trans-unit>
        <trans-unit id="f37fc303fbdb3912eda1a203bb681ea9a9813fa5" translate="yes" xml:space="preserve">
          <source>Read from &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; because &lt;a href=&quot;../primitive.slice&quot;&gt;&lt;code&gt;&amp;amp;[u8]&lt;/code&gt;&lt;/a&gt; implements &lt;code&gt;Read&lt;/code&gt;:</source>
          <target state="translated">&lt;a href=&quot;../primitive.slice&quot;&gt; &lt;code&gt;&amp;amp;[u8]&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;Read&lt;/code&gt; を実装しているため、&lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;&amp;amp;str&lt;/code&gt; &lt;/a&gt;から読み取ります。</target>
        </trans-unit>
        <trans-unit id="01ef337ecc9c0a64c755ffbfc871abc9c70c5fe4" translate="yes" xml:space="preserve">
          <source>Read from &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; because &lt;a href=&quot;../primitive.slice&quot;&gt;&lt;code&gt;&amp;amp;[u8]&lt;/code&gt;&lt;/a&gt; implements &lt;code&gt;Read&lt;/code&gt;:</source>
          <target state="translated">&lt;a href=&quot;../primitive.slice&quot;&gt; &lt;code&gt;&amp;amp;[u8]&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;Read&lt;/code&gt; を実装しているため、&lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt; &lt;code&gt;&amp;amp;str&lt;/code&gt; &lt;/a&gt;から読み取ります。</target>
        </trans-unit>
        <trans-unit id="3684b2861b75ea353c0a2e5693dbab22dcfc59e5" translate="yes" xml:space="preserve">
          <source>Read is implemented for &lt;code&gt;&amp;amp;[u8]&lt;/code&gt; by copying from the slice.</source>
          <target state="translated">&lt;code&gt;&amp;amp;[u8]&lt;/code&gt; の読み取りは、スライスからコピーすることで実装されます。</target>
        </trans-unit>
        <trans-unit id="ad086cf55b834c375e209972840f1342401d8c41" translate="yes" xml:space="preserve">
          <source>Read more</source>
          <target state="translated">続きを読む</target>
        </trans-unit>
        <trans-unit id="9326a0e0216fd29fd117238ffe547428fe421fac" translate="yes" xml:space="preserve">
          <source>Read more about &lt;code&gt;object safety&lt;/code&gt; and &lt;a href=&quot;../book/ch17-02-trait-objects&quot;&gt;trait object&lt;/a&gt;s.</source>
          <target state="translated">&lt;code&gt;object safety&lt;/code&gt; と&lt;a href=&quot;../book/ch17-02-trait-objects&quot;&gt;特性オブジェクト&lt;/a&gt;の詳細をご覧ください。</target>
        </trans-unit>
        <trans-unit id="ef04bc7a0943f3e3f3341864f4e72ce99a986b05" translate="yes" xml:space="preserve">
          <source>Read more about control flow in the &lt;a href=&quot;../book/ch03-05-control-flow#handling-multiple-conditions-with-else-if&quot;&gt;Rust Book&lt;/a&gt;.</source>
          <target state="translated">制御フローの詳細については、&lt;a href=&quot;../book/ch03-05-control-flow#handling-multiple-conditions-with-else-if&quot;&gt;RustBook&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="3c4cb41e99b084f8410950c9f006628911a6ef3a" translate="yes" xml:space="preserve">
          <source>Read the &lt;a href=&quot;https://doc.rust-lang.org/unstable-book/library-features/asm.html&quot;&gt;unstable book&lt;/a&gt; for the usage.</source>
          <target state="translated">使用法については&lt;a href=&quot;https://doc.rust-lang.org/unstable-book/library-features/asm.html&quot;&gt;不安定な本&lt;/a&gt;を読んでください。</target>
        </trans-unit>
        <trans-unit id="3324873982325ef58fd5cb1fa008909c289110ce" translate="yes" xml:space="preserve">
          <source>Read the &lt;a href=&quot;https://doc.rust-lang.org/unstable-book/library-features/llvm-asm.html&quot;&gt;unstable book&lt;/a&gt; for the usage.</source>
          <target state="translated">使用法については&lt;a href=&quot;https://doc.rust-lang.org/unstable-book/library-features/llvm-asm.html&quot;&gt;不安定な本&lt;/a&gt;を読んでください。</target>
        </trans-unit>
        <trans-unit id="29226645bd1c55b5e141810d243520817413284a" translate="yes" xml:space="preserve">
          <source>Read the &lt;a href=&quot;https://rust-lang.github.io/async-book/&quot;&gt;async book&lt;/a&gt; for details on how async/await and executors work.</source>
          <target state="translated">async / awaitとエグゼキュータの動作の詳細については、&lt;a href=&quot;https://rust-lang.github.io/async-book/&quot;&gt;非同期ブック&lt;/a&gt;をお読みください。</target>
        </trans-unit>
        <trans-unit id="23a60e747bf1202d62ffccf39f4882b7e16092d2" translate="yes" xml:space="preserve">
          <source>Read the contents of a file into a &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; (you can also use &lt;a href=&quot;fn.read&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt;):</source>
          <target state="translated">ファイルの内容を&lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;fn.read&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;ます（readを使用することもできます）。</target>
        </trans-unit>
        <trans-unit id="cee8f4e316762fbd5460a9a0ece0d25298bad8c5" translate="yes" xml:space="preserve">
          <source>Read the contents of a file into a &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">ファイルの内容を&lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; に&lt;/a&gt;読み込みます。</target>
        </trans-unit>
        <trans-unit id="3025f075997a386102bc57fb44c7414f26d2abb0" translate="yes" xml:space="preserve">
          <source>Read the entire contents of a file into a bytes vector.</source>
          <target state="translated">ファイルの内容全体をバイトベクトルに読み込みます。</target>
        </trans-unit>
        <trans-unit id="6217ff62850bc13dbc7a4ba0a0734bbdd4cfd081" translate="yes" xml:space="preserve">
          <source>Read the entire contents of a file into a string.</source>
          <target state="translated">ファイルの内容全体を文字列に読み込みます。</target>
        </trans-unit>
        <trans-unit id="bf29b702ccd2798c77b8e34791ca0f07dab6a07d" translate="yes" xml:space="preserve">
          <source>Read the exact number of bytes required to fill &lt;code&gt;buf&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;buf&lt;/code&gt; を満たすために必要な正確なバイト数を読み取ります。</target>
        </trans-unit>
        <trans-unit id="30475e68fb188622b8f612da886a95d25a7cb104" translate="yes" xml:space="preserve">
          <source>Read the exact number of bytes required to fill &lt;code&gt;buf&lt;/code&gt;. &lt;a href=&quot;../../../io/trait.read#method.read_exact&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;buf&lt;/code&gt; を満たすために必要な正確なバイト数を読み取ります。&lt;a href=&quot;../../../io/trait.read#method.read_exact&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e7bfd372d8c1f792a2af880495a55fa9bb7a4af7" translate="yes" xml:space="preserve">
          <source>Read the exact number of bytes required to fill &lt;code&gt;buf&lt;/code&gt;. &lt;a href=&quot;../io/trait.read#method.read_exact&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;buf&lt;/code&gt; を満たすために必要な正確なバイト数を読み取ります。&lt;a href=&quot;../io/trait.read#method.read_exact&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2b8b08b0098880cdbccf4f8d11857f0398041e42" translate="yes" xml:space="preserve">
          <source>Read the exact number of bytes required to fill &lt;code&gt;buf&lt;/code&gt;. &lt;a href=&quot;io/trait.read#method.read_exact&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;buf&lt;/code&gt; を満たすために必要な正確なバイト数を読み取ります。&lt;a href=&quot;io/trait.read#method.read_exact&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a6331109e0c1b38abf681591a378a4d20c28bc6b" translate="yes" xml:space="preserve">
          <source>Read the exact number of bytes required to fill &lt;code&gt;buf&lt;/code&gt;. &lt;a href=&quot;trait.read#method.read_exact&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;buf&lt;/code&gt; を満たすために必要な正確なバイト数を読み取ります。&lt;a href=&quot;trait.read#method.read_exact&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0d42cf08e897513d379b703a8da21da647a9ade6" translate="yes" xml:space="preserve">
          <source>Read::by_ref</source>
          <target state="translated">Read::by_ref</target>
        </trans-unit>
        <trans-unit id="868be0fa05b5ce980b37383d48eaef4a2f31f62e" translate="yes" xml:space="preserve">
          <source>Read::bytes</source>
          <target state="translated">Read::bytes</target>
        </trans-unit>
        <trans-unit id="34b7c8ac89dceb336a7c362523bcf163c8caa61d" translate="yes" xml:space="preserve">
          <source>Read::chain</source>
          <target state="translated">Read::chain</target>
        </trans-unit>
        <trans-unit id="0b71640c286d1b2bbeae57a8799f88c650460f23" translate="yes" xml:space="preserve">
          <source>Read::initializer</source>
          <target state="translated">Read::initializer</target>
        </trans-unit>
        <trans-unit id="8215f31c1896a55126ae4c6843ebc5f004c28200" translate="yes" xml:space="preserve">
          <source>Read::read</source>
          <target state="translated">Read::read</target>
        </trans-unit>
        <trans-unit id="20b2e50893e9a1d3989491b10bff95c440d95ab7" translate="yes" xml:space="preserve">
          <source>Read::read_exact</source>
          <target state="translated">Read::read_exact</target>
        </trans-unit>
        <trans-unit id="b7116de153914a541555a07c2e9251a6e213aa74" translate="yes" xml:space="preserve">
          <source>Read::read_to_end</source>
          <target state="translated">Read::read_to_end</target>
        </trans-unit>
        <trans-unit id="4fdfe09256554670a78603825fe1b0d973b76622" translate="yes" xml:space="preserve">
          <source>Read::read_to_string</source>
          <target state="translated">Read::read_to_string</target>
        </trans-unit>
        <trans-unit id="a405183934eb940e36c7dd026c2b5d5fb92d5210" translate="yes" xml:space="preserve">
          <source>Read::read_vectored</source>
          <target state="translated">Read::read_vectored</target>
        </trans-unit>
        <trans-unit id="e7651abb56c19158129573d316520368e6dcf244" translate="yes" xml:space="preserve">
          <source>Read::take</source>
          <target state="translated">Read::take</target>
        </trans-unit>
        <trans-unit id="5967a3c48bcceae8eab866aea588318eebdf12d2" translate="yes" xml:space="preserve">
          <source>ReadDir</source>
          <target state="translated">ReadDir</target>
        </trans-unit>
        <trans-unit id="eee36da2f89658931c94e16550eeddc622814ae3" translate="yes" xml:space="preserve">
          <source>ReadDir::all</source>
          <target state="translated">ReadDir::all</target>
        </trans-unit>
        <trans-unit id="4e4e2f9edc446605337e5a0c15959c02597e72fa" translate="yes" xml:space="preserve">
          <source>ReadDir::any</source>
          <target state="translated">ReadDir::any</target>
        </trans-unit>
        <trans-unit id="384a43a29f5adf6109dbcd531022f38a44f3a58e" translate="yes" xml:space="preserve">
          <source>ReadDir::borrow</source>
          <target state="translated">ReadDir::borrow</target>
        </trans-unit>
        <trans-unit id="7c7ad115d1ca9b1f917088752c1c91b8d854d2a2" translate="yes" xml:space="preserve">
          <source>ReadDir::borrow_mut</source>
          <target state="translated">ReadDir::borrow_mut</target>
        </trans-unit>
        <trans-unit id="a9a5fa6212f91e4c81f7c072924e797f1a193d87" translate="yes" xml:space="preserve">
          <source>ReadDir::by_ref</source>
          <target state="translated">ReadDir::by_ref</target>
        </trans-unit>
        <trans-unit id="81a7f712c4f7e43a1d194cf7893b3de5c122ec6a" translate="yes" xml:space="preserve">
          <source>ReadDir::chain</source>
          <target state="translated">ReadDir::chain</target>
        </trans-unit>
        <trans-unit id="af3778ae80946114688c0e003f355e371c96edc2" translate="yes" xml:space="preserve">
          <source>ReadDir::cloned</source>
          <target state="translated">ReadDir::cloned</target>
        </trans-unit>
        <trans-unit id="44bbb46c7ff0c896f967b73bb17b6ac7273ea085" translate="yes" xml:space="preserve">
          <source>ReadDir::cmp</source>
          <target state="translated">ReadDir::cmp</target>
        </trans-unit>
        <trans-unit id="fdde136604e36ed5911d0ca04eb3cb0dba1f7535" translate="yes" xml:space="preserve">
          <source>ReadDir::collect</source>
          <target state="translated">ReadDir::collect</target>
        </trans-unit>
        <trans-unit id="02685a8f93c37571c60ec533db2b29992e602bf7" translate="yes" xml:space="preserve">
          <source>ReadDir::copied</source>
          <target state="translated">ReadDir::copied</target>
        </trans-unit>
        <trans-unit id="b0d679b7992b2a57e8353881cbea2af34970b99a" translate="yes" xml:space="preserve">
          <source>ReadDir::count</source>
          <target state="translated">ReadDir::count</target>
        </trans-unit>
        <trans-unit id="bca67add72464a957dcb4f282fcbaf36e1516be4" translate="yes" xml:space="preserve">
          <source>ReadDir::cycle</source>
          <target state="translated">ReadDir::cycle</target>
        </trans-unit>
        <trans-unit id="41e60b25d5ea1df09dd584a3582da07bce6f954a" translate="yes" xml:space="preserve">
          <source>ReadDir::enumerate</source>
          <target state="translated">ReadDir::enumerate</target>
        </trans-unit>
        <trans-unit id="c122e4ebcd8ff7aa3515e65cd1c31b660dcd7ccb" translate="yes" xml:space="preserve">
          <source>ReadDir::eq</source>
          <target state="translated">ReadDir::eq</target>
        </trans-unit>
        <trans-unit id="87fed61c8a176289a874af11ad05bb5609c923ea" translate="yes" xml:space="preserve">
          <source>ReadDir::filter</source>
          <target state="translated">ReadDir::filter</target>
        </trans-unit>
        <trans-unit id="071ca380f1f9eeab6af3c290787c94fba0439431" translate="yes" xml:space="preserve">
          <source>ReadDir::filter_map</source>
          <target state="translated">ReadDir::filter_map</target>
        </trans-unit>
        <trans-unit id="68433dc18fc42d23aacd81ca9e1fdb593abbcb94" translate="yes" xml:space="preserve">
          <source>ReadDir::find</source>
          <target state="translated">ReadDir::find</target>
        </trans-unit>
        <trans-unit id="8da7ad1e35882f87849cef57126d958ba0a81013" translate="yes" xml:space="preserve">
          <source>ReadDir::find_map</source>
          <target state="translated">ReadDir::find_map</target>
        </trans-unit>
        <trans-unit id="fe6a98b4dbf705eb404d4f58072950ca7fb41729" translate="yes" xml:space="preserve">
          <source>ReadDir::flat_map</source>
          <target state="translated">ReadDir::flat_map</target>
        </trans-unit>
        <trans-unit id="244e32da80a84e4e52321d46a9e9a90f12d45e64" translate="yes" xml:space="preserve">
          <source>ReadDir::flatten</source>
          <target state="translated">ReadDir::flatten</target>
        </trans-unit>
        <trans-unit id="218e02a62d7e07aaaf965dd826f10098287ba620" translate="yes" xml:space="preserve">
          <source>ReadDir::fmt</source>
          <target state="translated">ReadDir::fmt</target>
        </trans-unit>
        <trans-unit id="b2c9325e5e872353328e3d23929b9705c5ee9d11" translate="yes" xml:space="preserve">
          <source>ReadDir::fold</source>
          <target state="translated">ReadDir::fold</target>
        </trans-unit>
        <trans-unit id="d569e1e76dfe26d9b07cd1820cfd6bc38515b0db" translate="yes" xml:space="preserve">
          <source>ReadDir::for_each</source>
          <target state="translated">ReadDir::for_each</target>
        </trans-unit>
        <trans-unit id="1139395f7ad74a071eccd7f633073acbea665ad5" translate="yes" xml:space="preserve">
          <source>ReadDir::from</source>
          <target state="translated">ReadDir::from</target>
        </trans-unit>
        <trans-unit id="0182841eccee49571fb77892d363552e0546de70" translate="yes" xml:space="preserve">
          <source>ReadDir::fuse</source>
          <target state="translated">ReadDir::fuse</target>
        </trans-unit>
        <trans-unit id="07e49d4bc3b884e8d35f70d40ed34cf2101c1b34" translate="yes" xml:space="preserve">
          <source>ReadDir::ge</source>
          <target state="translated">ReadDir::ge</target>
        </trans-unit>
        <trans-unit id="4da8f8ca27fbd9bcf019939efb6354e04a44e150" translate="yes" xml:space="preserve">
          <source>ReadDir::gt</source>
          <target state="translated">ReadDir::gt</target>
        </trans-unit>
        <trans-unit id="13573dfc6b54a001e82d8fc1168ae572c25d30e0" translate="yes" xml:space="preserve">
          <source>ReadDir::inspect</source>
          <target state="translated">ReadDir::inspect</target>
        </trans-unit>
        <trans-unit id="c82c8bd5fb1b30c1610eb503ed25e0689fee0167" translate="yes" xml:space="preserve">
          <source>ReadDir::into</source>
          <target state="translated">ReadDir::into</target>
        </trans-unit>
        <trans-unit id="3891535ab8a5a4e66c1f29afc23dc81640ae82da" translate="yes" xml:space="preserve">
          <source>ReadDir::into_iter</source>
          <target state="translated">ReadDir::into_iter</target>
        </trans-unit>
        <trans-unit id="6a3bfbe85af0d035dfb845a7686eaa36e5c424d1" translate="yes" xml:space="preserve">
          <source>ReadDir::is_sorted</source>
          <target state="translated">ReadDir::is_sorted</target>
        </trans-unit>
        <trans-unit id="d030ace6e479b69d1e19301c7064c02e40ff88a4" translate="yes" xml:space="preserve">
          <source>ReadDir::is_sorted_by</source>
          <target state="translated">ReadDir::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="162c00e6af11b671a6d882473e8a29a45b27cd93" translate="yes" xml:space="preserve">
          <source>ReadDir::is_sorted_by_key</source>
          <target state="translated">ReadDir::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="5edfb94c83e3a52ebfd65ceedb77d7138482a704" translate="yes" xml:space="preserve">
          <source>ReadDir::last</source>
          <target state="translated">ReadDir::last</target>
        </trans-unit>
        <trans-unit id="b347a50a98ca227305bfa320fe8c259dd702a834" translate="yes" xml:space="preserve">
          <source>ReadDir::le</source>
          <target state="translated">ReadDir::le</target>
        </trans-unit>
        <trans-unit id="121987e25e716880d602214b6e7e113011f90ece" translate="yes" xml:space="preserve">
          <source>ReadDir::lt</source>
          <target state="translated">ReadDir::lt</target>
        </trans-unit>
        <trans-unit id="73cd9a4901b1625f175f6cd5d5b05829eb04e744" translate="yes" xml:space="preserve">
          <source>ReadDir::map</source>
          <target state="translated">ReadDir::map</target>
        </trans-unit>
        <trans-unit id="29160f414b7ac9ec1c5bdaf067213b2b558b3026" translate="yes" xml:space="preserve">
          <source>ReadDir::max</source>
          <target state="translated">ReadDir::max</target>
        </trans-unit>
        <trans-unit id="0371f9c32057e4c572046c1f0e12df7e94ea261d" translate="yes" xml:space="preserve">
          <source>ReadDir::max_by</source>
          <target state="translated">ReadDir::max_by</target>
        </trans-unit>
        <trans-unit id="bb08f2b2ac6961587d3baca3d136e65653871db7" translate="yes" xml:space="preserve">
          <source>ReadDir::max_by_key</source>
          <target state="translated">ReadDir::max_by_key</target>
        </trans-unit>
        <trans-unit id="7ae43f191c3cd90d6bdc4f09ff162abaa33c2e3b" translate="yes" xml:space="preserve">
          <source>ReadDir::min</source>
          <target state="translated">ReadDir::min</target>
        </trans-unit>
        <trans-unit id="d59de49dfbd883955c3b4cae0f1e7a7fc7eda8b7" translate="yes" xml:space="preserve">
          <source>ReadDir::min_by</source>
          <target state="translated">ReadDir::min_by</target>
        </trans-unit>
        <trans-unit id="2deb04a5a162e1d3b95245212e04b0879249bdef" translate="yes" xml:space="preserve">
          <source>ReadDir::min_by_key</source>
          <target state="translated">ReadDir::min_by_key</target>
        </trans-unit>
        <trans-unit id="b78506eeb6909e5d0d02c4fe71aaac62db1b3df2" translate="yes" xml:space="preserve">
          <source>ReadDir::ne</source>
          <target state="translated">ReadDir::ne</target>
        </trans-unit>
        <trans-unit id="f7109782eb43e77e07defe3d4496588a1d412959" translate="yes" xml:space="preserve">
          <source>ReadDir::next</source>
          <target state="translated">ReadDir::next</target>
        </trans-unit>
        <trans-unit id="21c414c00bddb257d7b10f447d9b0a21c2c4e69e" translate="yes" xml:space="preserve">
          <source>ReadDir::nth</source>
          <target state="translated">ReadDir::nth</target>
        </trans-unit>
        <trans-unit id="5fe92e8cec34c8e47ff7eee529cdf5430239c9e9" translate="yes" xml:space="preserve">
          <source>ReadDir::partial_cmp</source>
          <target state="translated">ReadDir::partial_cmp</target>
        </trans-unit>
        <trans-unit id="afa10fe7818b39862f8a13ce0f86ba208765c49b" translate="yes" xml:space="preserve">
          <source>ReadDir::partition</source>
          <target state="translated">ReadDir::partition</target>
        </trans-unit>
        <trans-unit id="800ddaafac8a8e56d6fbcd4e6d0d6c65fc6cc94e" translate="yes" xml:space="preserve">
          <source>ReadDir::peekable</source>
          <target state="translated">ReadDir::peekable</target>
        </trans-unit>
        <trans-unit id="c8c0199564e8f72420a238c16c1284ba9b3d57fc" translate="yes" xml:space="preserve">
          <source>ReadDir::position</source>
          <target state="translated">ReadDir::position</target>
        </trans-unit>
        <trans-unit id="72d7386ef350b242e1a2f1dab88f725465357757" translate="yes" xml:space="preserve">
          <source>ReadDir::product</source>
          <target state="translated">ReadDir::product</target>
        </trans-unit>
        <trans-unit id="3e9a25a2e99efa7110fb7f06e9ad642d4600c05f" translate="yes" xml:space="preserve">
          <source>ReadDir::rev</source>
          <target state="translated">ReadDir::rev</target>
        </trans-unit>
        <trans-unit id="e1467379910bb7ed20b468d7be3f87272791580e" translate="yes" xml:space="preserve">
          <source>ReadDir::rposition</source>
          <target state="translated">ReadDir::rposition</target>
        </trans-unit>
        <trans-unit id="e652c4499aa9a3ffe986d0524a73d529dbc9fb7f" translate="yes" xml:space="preserve">
          <source>ReadDir::scan</source>
          <target state="translated">ReadDir::scan</target>
        </trans-unit>
        <trans-unit id="e3c6c6e2f7592846e953e0ba8f624910561060d1" translate="yes" xml:space="preserve">
          <source>ReadDir::size_hint</source>
          <target state="translated">ReadDir::size_hint</target>
        </trans-unit>
        <trans-unit id="da2ea3b7ac21c68cfa5113bb70b4f1d99df2c286" translate="yes" xml:space="preserve">
          <source>ReadDir::skip</source>
          <target state="translated">ReadDir::skip</target>
        </trans-unit>
        <trans-unit id="2a1f99526f9c81cfec557a4b160469d8f663f339" translate="yes" xml:space="preserve">
          <source>ReadDir::skip_while</source>
          <target state="translated">ReadDir::skip_while</target>
        </trans-unit>
        <trans-unit id="c73f86e6936709dda4c4d26495fa40bafc64821b" translate="yes" xml:space="preserve">
          <source>ReadDir::step_by</source>
          <target state="translated">ReadDir::step_by</target>
        </trans-unit>
        <trans-unit id="848d46530ef90158514603fc98c5b30ab6b42155" translate="yes" xml:space="preserve">
          <source>ReadDir::sum</source>
          <target state="translated">ReadDir::sum</target>
        </trans-unit>
        <trans-unit id="0e399e94cc63582b765b0699bbbbcb9363eca198" translate="yes" xml:space="preserve">
          <source>ReadDir::take</source>
          <target state="translated">ReadDir::take</target>
        </trans-unit>
        <trans-unit id="274bcaf64fc61aaf802f412c4f007467f13f4918" translate="yes" xml:space="preserve">
          <source>ReadDir::take_while</source>
          <target state="translated">ReadDir::take_while</target>
        </trans-unit>
        <trans-unit id="3163a4054ea404a95888a7f4971e62ab5aabc3c7" translate="yes" xml:space="preserve">
          <source>ReadDir::try_fold</source>
          <target state="translated">ReadDir::try_fold</target>
        </trans-unit>
        <trans-unit id="eecee7d68e1aa7a5fe4d33d70cc8fc075b1e5444" translate="yes" xml:space="preserve">
          <source>ReadDir::try_for_each</source>
          <target state="translated">ReadDir::try_for_each</target>
        </trans-unit>
        <trans-unit id="fd413bac8334c489ebabfbc9d204197d83c14318" translate="yes" xml:space="preserve">
          <source>ReadDir::try_from</source>
          <target state="translated">ReadDir::try_from</target>
        </trans-unit>
        <trans-unit id="7597ab15990a171a33c6bd92342ca067aeb53e1b" translate="yes" xml:space="preserve">
          <source>ReadDir::try_into</source>
          <target state="translated">ReadDir::try_into</target>
        </trans-unit>
        <trans-unit id="97b9022b1e53f65d002a4aa894af4b5fff9d8e59" translate="yes" xml:space="preserve">
          <source>ReadDir::type_id</source>
          <target state="translated">ReadDir::type_id</target>
        </trans-unit>
        <trans-unit id="0a2d7207c9021148229e5c5be394ff7a465e244d" translate="yes" xml:space="preserve">
          <source>ReadDir::unzip</source>
          <target state="translated">ReadDir::unzip</target>
        </trans-unit>
        <trans-unit id="d8a91ff17c9da22dbb3e15918e960b90416a2bdc" translate="yes" xml:space="preserve">
          <source>ReadDir::zip</source>
          <target state="translated">ReadDir::zip</target>
        </trans-unit>
        <trans-unit id="7966241573e357e107eeb70dcb0356e963fbce94" translate="yes" xml:space="preserve">
          <source>Reader adaptor which limits the bytes read from an underlying reader.</source>
          <target state="translated">基盤となるリーダーからの読み込みバイト数を制限するリーダーアダプタ。</target>
        </trans-unit>
        <trans-unit id="b3d7382a6b1b0f982a454529b7364628e241f227" translate="yes" xml:space="preserve">
          <source>Readers are defined by one required method, &lt;a href=&quot;trait.read#tymethod.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt;. Each call to &lt;a href=&quot;trait.read#tymethod.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; will attempt to pull bytes from this source into a provided buffer. A number of other methods are implemented in terms of &lt;a href=&quot;trait.read#tymethod.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt;, giving implementors a number of ways to read bytes while only needing to implement a single method.</source>
          <target state="translated">リーダーは、1つの必須メソッド&lt;a href=&quot;trait.read#tymethod.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt;によって定義されます。&lt;a href=&quot;trait.read#tymethod.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt;を呼び出すたびに、このソースから提供されたバッファーにバイトをプルしようとします。他の多くのメソッドが&lt;a href=&quot;trait.read#tymethod.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; の&lt;/a&gt;観点から実装されており、単一のメソッドを実装するだけで、バイトを読み取る方法を実装者に提供します。</target>
        </trans-unit>
        <trans-unit id="7bbf2a577054ef3e935b0580155e9d485db28740" translate="yes" xml:space="preserve">
          <source>Readers are intended to be composable with one another. Many implementors throughout &lt;a href=&quot;index&quot;&gt;&lt;code&gt;std::io&lt;/code&gt;&lt;/a&gt; take and provide types which implement the &lt;code&gt;Read&lt;/code&gt; trait.</source>
          <target state="translated">リーダーは、相互に構成可能であることを目的としています。&lt;a href=&quot;index&quot;&gt; &lt;code&gt;std::io&lt;/code&gt; &lt;/a&gt;全体の多くの実装者は、 &lt;code&gt;Read&lt;/code&gt; トレイトを実装する型を取得して提供します。</target>
        </trans-unit>
        <trans-unit id="5473ffa93b30fa294601ace41eff2869779706af" translate="yes" xml:space="preserve">
          <source>Reading Elements of Vectors</source>
          <target state="translated">ベクトルの要素を読み取る</target>
        </trans-unit>
        <trans-unit id="1d95d060bd72753fbcb6ce12aa159086cd1b6d26" translate="yes" xml:space="preserve">
          <source>Reading a File</source>
          <target state="translated">ファイルの読み取り</target>
        </trans-unit>
        <trans-unit id="3cfdb7bd3b78488749cba4bed260f08f64ad8047" translate="yes" xml:space="preserve">
          <source>Reading a file into a string is a fairly common operation, so Rust provides the convenient &lt;code&gt;fs::read_to_string&lt;/code&gt; function that opens the file, creates a new &lt;code&gt;String&lt;/code&gt;, reads the contents of the file, puts the contents into that &lt;code&gt;String&lt;/code&gt;, and returns it. Of course, using &lt;code&gt;fs::read_to_string&lt;/code&gt; doesn&amp;rsquo;t give us the opportunity to explain all the error handling, so we did it the longer way first.</source>
          <target state="translated">ファイルを文字列に読み込むのはごく一般的な操作なので、Rustは便利な &lt;code&gt;fs::read_to_string&lt;/code&gt; 関数を提供して、ファイルを開き、新しい &lt;code&gt;String&lt;/code&gt; を作成し、ファイルの内容を読み取り、その内容をその &lt;code&gt;String&lt;/code&gt; に入れて返します。もちろん、 &lt;code&gt;fs::read_to_string&lt;/code&gt; を使用しても、すべてのエラー処理を説明する機会は得られないため、最初に長い方の方法で説明しました。</target>
        </trans-unit>
        <trans-unit id="0d97067e73865a884d880346145922869a3017a1" translate="yes" xml:space="preserve">
          <source>Reading and writing union fields</source>
          <target state="translated">組合分野の読み書き</target>
        </trans-unit>
        <trans-unit id="51259e1bdfba582032350760e20b49bdcc88457a" translate="yes" xml:space="preserve">
          <source>Reading beyond the end of the file will always return with a length of 0.</source>
          <target state="translated">ファイルの終端を超えて読み込んだ場合は、常に0の長さで返されます。</target>
        </trans-unit>
        <trans-unit id="5913e922226462d94153ab48c03a05d0ea31201c" translate="yes" xml:space="preserve">
          <source>Reading bytes from a TCP stream in non-blocking mode:</source>
          <target state="translated">ノンブロッキング・モードでTCPストリームからバイトを読み込みます。</target>
        </trans-unit>
        <trans-unit id="4fe80c1137a37a9596d952d0a3f073335a7f2eeb" translate="yes" xml:space="preserve">
          <source>Reading from constants (but not statics, not even taking a reference to a static)</source>
          <target state="translated">定数からの読み込み(ただし、スタティックへの参照も取らない</target>
        </trans-unit>
        <trans-unit id="0270a4c946dd084a5aaed424a453fa759b340c50" translate="yes" xml:space="preserve">
          <source>Reading or writing a &lt;a href=&quot;items/static-items#mutable-statics&quot;&gt;mutable&lt;/a&gt; or &lt;a href=&quot;items/external-blocks&quot;&gt;external&lt;/a&gt; static variable.</source>
          <target state="translated">&lt;a href=&quot;items/static-items#mutable-statics&quot;&gt;可変&lt;/a&gt;または&lt;a href=&quot;items/external-blocks&quot;&gt;外部&lt;/a&gt;静的変数の読み取りまたは書き込み。</target>
        </trans-unit>
        <trans-unit id="ac1280060c42c89ba134cee6e95b4b2512121a2d" translate="yes" xml:space="preserve">
          <source>Reading the Argument Values</source>
          <target state="translated">論語の価値観を読み解く</target>
        </trans-unit>
        <trans-unit id="a052a73ed266f81425a017e24109bab4ce532e21" translate="yes" xml:space="preserve">
          <source>Reading the Request</source>
          <target state="translated">リクエストを読む</target>
        </trans-unit>
        <trans-unit id="5bb0e32af5e3bcad9584d6acb365c92080f523c6" translate="yes" xml:space="preserve">
          <source>Reads a number of bytes starting from a given offset.</source>
          <target state="translated">指定されたオフセットから始まるバイト数を読み込みます。</target>
        </trans-unit>
        <trans-unit id="1f3f73fcc5e4b52be73e21769cc49bfb0022e83c" translate="yes" xml:space="preserve">
          <source>Reads a number of bytes starting from a given offset. &lt;a href=&quot;../os/unix/fs/trait.fileext#tymethod.read_at&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">指定されたオフセットから始まるバイト数を読み取ります。&lt;a href=&quot;../os/unix/fs/trait.fileext#tymethod.read_at&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="863287e0153959647b6159c7cc0d60fc57215f32" translate="yes" xml:space="preserve">
          <source>Reads a symbolic link, returning the file that the link points to.</source>
          <target state="translated">シンボリックリンクを読み込み、リンク先のファイルを返します。</target>
        </trans-unit>
        <trans-unit id="ae95595e12456e9d0551fde28cdd2c503fe27a40" translate="yes" xml:space="preserve">
          <source>Reads of &lt;a href=&quot;http://llvm.org/docs/LangRef.html#undefined-values&quot;&gt;undef&lt;/a&gt; (uninitialized) memory.</source>
          <target state="translated">&lt;a href=&quot;http://llvm.org/docs/LangRef.html#undefined-values&quot;&gt;undef&lt;/a&gt;（未初期化）メモリーの読み取り。</target>
        </trans-unit>
        <trans-unit id="2a38e8f6338acbcae10b2688ccde1f86f7e64e1c" translate="yes" xml:space="preserve">
          <source>Reads the exact number of byte required to fill &lt;code&gt;buf&lt;/code&gt; from the given offset.</source>
          <target state="translated">指定されたオフセットから &lt;code&gt;buf&lt;/code&gt; を埋めるために必要な正確なバイト数を読み取ります。</target>
        </trans-unit>
        <trans-unit id="b9f6a919695ef1a49fc66f4a33dd2f78aa4a416e" translate="yes" xml:space="preserve">
          <source>Reads the exact number of byte required to fill &lt;code&gt;buf&lt;/code&gt; from the given offset. &lt;a href=&quot;../os/unix/fs/trait.fileext#method.read_exact_at&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">指定されたオフセットから &lt;code&gt;buf&lt;/code&gt; を埋めるために必要な正確なバイト数を読み取ります。&lt;a href=&quot;../os/unix/fs/trait.fileext#method.read_exact_at&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4c91d9e66cbec17ab94398d403c50b74a6cddad5" translate="yes" xml:space="preserve">
          <source>Reads the value from &lt;code&gt;self&lt;/code&gt; without moving it. This leaves the memory in &lt;code&gt;self&lt;/code&gt; unchanged.</source>
          <target state="translated">移動せずに &lt;code&gt;self&lt;/code&gt; から値を読み取ります。これは、メモリを残し &lt;code&gt;self&lt;/code&gt; 変わりません。</target>
        </trans-unit>
        <trans-unit id="e87ac687a6bd1c395a908a13c802e2a17e60a371" translate="yes" xml:space="preserve">
          <source>Reads the value from &lt;code&gt;src&lt;/code&gt; without moving it. This leaves the memory in &lt;code&gt;src&lt;/code&gt; unchanged.</source>
          <target state="translated">移動せずに &lt;code&gt;src&lt;/code&gt; から値を読み取ります。これにより、 &lt;code&gt;src&lt;/code&gt; のメモリは変更されません。</target>
        </trans-unit>
        <trans-unit id="d3652653fdf8370b023ed38100155cebb22f90ae" translate="yes" xml:space="preserve">
          <source>Reads the value from the &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; container. The resulting &lt;code&gt;T&lt;/code&gt; is subject to the usual drop handling.</source>
          <target state="translated">&lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; コンテナから値を読み取ります。結果の &lt;code&gt;T&lt;/code&gt; は通常のドロップ処理の対象になります。</target>
        </trans-unit>
        <trans-unit id="20c7c5522fc28c5817550dd82bc3272eb6a991c7" translate="yes" xml:space="preserve">
          <source>Ready</source>
          <target state="translated">Ready</target>
        </trans-unit>
        <trans-unit id="aa20c41a1c175af6fbd641d570028c7ec56b181b" translate="yes" xml:space="preserve">
          <source>Ready? Here is Listing 20-15 with one way to make the preceding modifications.</source>
          <target state="translated">準備はいいですか? リスト20-15に、先行する修正を行う1つの方法を示します。</target>
        </trans-unit>
        <trans-unit id="7069b64e4f8cf07b289d967e74520bde92fb11d4" translate="yes" xml:space="preserve">
          <source>Reallocate memory with the global allocator.</source>
          <target state="translated">グローバルアロケータでメモリを再割り当てします。</target>
        </trans-unit>
        <trans-unit id="5cca1600aafaa538d332e9c1d3ff6f3fd65dd5b6" translate="yes" xml:space="preserve">
          <source>Reallocates a block previously suitable for holding &lt;code&gt;n_old&lt;/code&gt; instances of &lt;code&gt;T&lt;/code&gt;, returning a block suitable for holding &lt;code&gt;n_new&lt;/code&gt; instances of &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">保持するために以前に適したブロック再割り当て &lt;code&gt;n_old&lt;/code&gt; のインスタンス &lt;code&gt;T&lt;/code&gt; を保持するのに適したブロック戻り、 &lt;code&gt;n_new&lt;/code&gt; のインスタンス &lt;code&gt;T&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="b74c1ac0065db295c0989c0ba9724c0c9203bf6a" translate="yes" xml:space="preserve">
          <source>Reallocates a block previously suitable for holding &lt;code&gt;n_old&lt;/code&gt; instances of &lt;code&gt;T&lt;/code&gt;, returning a block suitable for holding &lt;code&gt;n_new&lt;/code&gt; instances of &lt;code&gt;T&lt;/code&gt;. &lt;a href=&quot;trait.alloc#method.realloc_array&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">保持するために以前に適したブロック再割り当て &lt;code&gt;n_old&lt;/code&gt; のインスタンス &lt;code&gt;T&lt;/code&gt; を保持するのに適したブロック戻り、 &lt;code&gt;n_new&lt;/code&gt; のインスタンス &lt;code&gt;T&lt;/code&gt; を。&lt;a href=&quot;trait.alloc#method.realloc_array&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b6e942612c266facf25ef55f88af604151a7a012" translate="yes" xml:space="preserve">
          <source>Rearranges the internal storage of this deque so it is one contiguous slice, which is then returned.</source>
          <target state="translated">このデクの内部ストレージを再編成して、1つの連続したスライスにし、それを返します。</target>
        </trans-unit>
        <trans-unit id="1c179ab340fb50fe882179514202424206560057" translate="yes" xml:space="preserve">
          <source>Rebinding the target name as a new local name, using the syntax &lt;code&gt;use p::q::r as x;&lt;/code&gt;. This can also be used with the last two features: &lt;code&gt;use a::b::{self as ab, c as abc}&lt;/code&gt;.</source>
          <target state="translated">構文 &lt;code&gt;use p::q::r as x;&lt;/code&gt; して、ターゲット名を新しいローカル名として再バインドします。。これは最後の2つの機能で使用することもできます： &lt;code&gt;use a::b::{self as ab, c as abc}&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="5e2b44250efec8da5de3e35956a3dd7c4973ef62" translate="yes" xml:space="preserve">
          <source>Recall from &lt;a href=&quot;ch02-00-guessing-game-tutorial#handling-potential-failure-with-the-result-type&quot;&gt;&amp;ldquo;Handling Potential Failure with the &lt;code&gt;Result&lt;/code&gt; Type&amp;rdquo;&lt;/a&gt; in Chapter 2 that the &lt;code&gt;Result&lt;/code&gt; enum is defined as having two variants, &lt;code&gt;Ok&lt;/code&gt; and &lt;code&gt;Err&lt;/code&gt;, as follows:</source>
          <target state="translated">第2章の&lt;a href=&quot;ch02-00-guessing-game-tutorial#handling-potential-failure-with-the-result-type&quot;&gt;「&lt;/a&gt; &lt;code&gt;Result&lt;/code&gt; タイプによる潜在的な障害の処理」から、 &lt;code&gt;Result&lt;/code&gt; 列挙型が次のように &lt;code&gt;Ok&lt;/code&gt; と &lt;code&gt;Err&lt;/code&gt; の 2つのバリアントを持つものとして定義されていることを思い出してください。</target>
        </trans-unit>
        <trans-unit id="dabe5ae865d38ebdd27f57682c5d8349e00cf3b9" translate="yes" xml:space="preserve">
          <source>Recall from &lt;a href=&quot;ch04-03-slices#the-slice-type&quot;&gt;&amp;ldquo;The Slice Type&amp;rdquo;&lt;/a&gt; section in Chapter 4 that slices are a pointer to some data and the length of the slice. We use the &lt;code&gt;len&lt;/code&gt; method to get the length of a slice and the &lt;code&gt;as_mut_ptr&lt;/code&gt; method to access the raw pointer of a slice. In this case, because we have a mutable slice to &lt;code&gt;i32&lt;/code&gt; values, &lt;code&gt;as_mut_ptr&lt;/code&gt; returns a raw pointer with the type &lt;code&gt;*mut i32&lt;/code&gt;, which we&amp;rsquo;ve stored in the variable &lt;code&gt;ptr&lt;/code&gt;.</source>
          <target state="translated">第4章の&lt;a href=&quot;ch04-03-slices#the-slice-type&quot;&gt;「スライスの種類」の&lt;/a&gt;セクションでは、スライスは一部のデータとスライスの長さへのポインタであることを思い出してください。 &lt;code&gt;len&lt;/code&gt; メソッドを使用してスライスの長さを取得し、 &lt;code&gt;as_mut_ptr&lt;/code&gt; メソッドを使用してスライスの生のポインタにアクセスします。この場合、 &lt;code&gt;i32&lt;/code&gt; 値への変更可能なスライスがあるため、 &lt;code&gt;as_mut_ptr&lt;/code&gt; は、変数 &lt;code&gt;ptr&lt;/code&gt; に格納した &lt;code&gt;*mut i32&lt;/code&gt; 型の未加工ポインターを返します。</target>
        </trans-unit>
        <trans-unit id="e4a7235fe16dd925ce00768ca56d78d637f75a6b" translate="yes" xml:space="preserve">
          <source>Recall from the borrowing rules that if we have an immutable reference to something, we cannot also take a mutable reference. Because &lt;code&gt;clear&lt;/code&gt; needs to truncate the &lt;code&gt;String&lt;/code&gt;, it needs to get a mutable reference. Rust disallows this, and compilation fails. Not only has Rust made our API easier to use, but it has also eliminated an entire class of errors at compile time!</source>
          <target state="translated">借用ルールから、何かへの不変の参照がある場合、変更可能な参照も取得できないことを思い出してください。ので &lt;code&gt;clear&lt;/code&gt; ニーズが切り捨てる &lt;code&gt;String&lt;/code&gt; 、それが可変の参照を取得する必要があります。 Rustはこれを許可せず、コンパイルは失敗します。 RustはAPIを使いやすくするだけでなく、コンパイル時のエラーのクラス全体を排除しました！</target>
        </trans-unit>
        <trans-unit id="aa605e9c412c4cb8e240f96a9d96f9754cc1f874" translate="yes" xml:space="preserve">
          <source>Recall in the &lt;a href=&quot;ch10-01-syntax#performance-of-code-using-generics&quot;&gt;&amp;ldquo;Performance of Code Using Generics&amp;rdquo;&lt;/a&gt; section in Chapter 10 our discussion on the monomorphization process performed by the compiler when we use trait bounds on generics: the compiler generates nongeneric implementations of functions and methods for each concrete type that we use in place of a generic type parameter. The code that results from monomorphization is doing &lt;em&gt;static dispatch&lt;/em&gt;, which is when the compiler knows what method you&amp;rsquo;re calling at compile time. This is opposed to &lt;em&gt;dynamic dispatch&lt;/em&gt;, which is when the compiler can&amp;rsquo;t tell at compile time which method you&amp;rsquo;re calling. In dynamic dispatch cases, the compiler emits code that at runtime will figure out which method to call.</source>
          <target state="translated">第10章の&lt;a href=&quot;ch10-01-syntax#performance-of-code-using-generics&quot;&gt;「Genericsを使用したコードのパフォーマンス」&lt;/a&gt;セクションで、ジェネリックに特性境界を使用するときにコンパイラーによって実行されるモノモーフィングプロセスに関する説明を思い出してください。ジェネリック型パラメーターの。モノモーフィゼーションの結果として生成されるコードは、&lt;em&gt;静的ディスパッチを&lt;/em&gt;実行してい&lt;em&gt;ます&lt;/em&gt;。これは、コンパイラーがコンパイル時に呼び出すメソッドをコンパイラーが認識している場合です。これは、&lt;em&gt;動的ディスパッチ&lt;/em&gt;とは対照的です。&lt;em&gt;動的ディスパッチ&lt;/em&gt;は、コンパイラーがコンパイル時にどのメソッドを呼び出しているのかを判別できない場合です。動的ディスパッチの場合、コンパイラーは、実行時に呼び出すメソッドを判別するコードを生成します。</target>
        </trans-unit>
        <trans-unit id="d6725c78944b5fa42cef3207e313ad8d7d4ba064" translate="yes" xml:space="preserve">
          <source>Recall that the purpose of the &lt;code&gt;search&lt;/code&gt; function is to return all lines in &lt;code&gt;contents&lt;/code&gt; that contain the &lt;code&gt;query&lt;/code&gt;. Similar to the &lt;code&gt;filter&lt;/code&gt; example in Listing 13-19, this code uses the &lt;code&gt;filter&lt;/code&gt; adaptor to keep only the lines that &lt;code&gt;line.contains(query)&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; for. We then collect the matching lines into another vector with &lt;code&gt;collect&lt;/code&gt;. Much simpler! Feel free to make the same change to use iterator methods in the &lt;code&gt;search_case_insensitive&lt;/code&gt; function as well.</source>
          <target state="translated">&lt;code&gt;search&lt;/code&gt; 関数の目的は、 &lt;code&gt;query&lt;/code&gt; を含む &lt;code&gt;contents&lt;/code&gt; すべての行を返すことであることを思い出してください。コードリスト13-19の &lt;code&gt;filter&lt;/code&gt; 例と同様に、このコードは &lt;code&gt;filter&lt;/code&gt; アダプターを使用して、 &lt;code&gt;line.contains(query)&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; を返す行のみを保持します。次に、collectを使用して、一致する行を別のベクトルに &lt;code&gt;collect&lt;/code&gt; ます。はるかに簡単です！ &lt;code&gt;search_case_insensitive&lt;/code&gt; 関数でもイテレータメソッドを使用するように、同じ変更を自由に行ってください。</target>
        </trans-unit>
        <trans-unit id="a1e6d46d382c6fe231c1d0724bd1e41b60b18246" translate="yes" xml:space="preserve">
          <source>Recall that we can create raw pointers in safe code, but we can&amp;rsquo;t &lt;em&gt;dereference&lt;/em&gt; raw pointers and read the data being pointed to. In Listing 19-3, we use the dereference operator &lt;code&gt;*&lt;/code&gt; on a raw pointer that requires an &lt;code&gt;unsafe&lt;/code&gt; block.</source>
          <target state="translated">安全なコードで生のポインタを作成することはできますが、生のポインタを&lt;em&gt;逆参照し&lt;/em&gt;てポイントされているデータを読み取ることはできません。リスト19-3 では、 &lt;code&gt;unsafe&lt;/code&gt; ブロックを必要とする生のポインタに逆参照演算子 &lt;code&gt;*&lt;/code&gt; を使用しています。</target>
        </trans-unit>
        <trans-unit id="728f54bae3d71dea0e3a37331faf704744639b5e" translate="yes" xml:space="preserve">
          <source>Recall that we included the input/output functionality from the standard library with &lt;code&gt;use std::io;&lt;/code&gt; on the first line of the program. Now we&amp;rsquo;ll call the &lt;code&gt;stdin&lt;/code&gt; function from the &lt;code&gt;io&lt;/code&gt; module:</source>
          <target state="translated">&lt;code&gt;use std::io;&lt;/code&gt; を使用して、標準ライブラリの入出力機能を含めたことを思い出してください。プログラムの最初の行に。次に、 &lt;code&gt;io&lt;/code&gt; モジュールから &lt;code&gt;stdin&lt;/code&gt; 関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="2cdc0bf5bca1efab9cc667d9dceb388612fa3da9" translate="yes" xml:space="preserve">
          <source>Recall that we talked about string literals being stored inside the binary. Now that we know about slices, we can properly understand string literals:</source>
          <target state="translated">文字列リテラルがバイナリの内部に格納されていることを思い出してください。スライスについて知ったので、文字列リテラルを正しく理解することができます。</target>
        </trans-unit>
        <trans-unit id="8056707fd6990a08b5daea23e861a435fd37a039" translate="yes" xml:space="preserve">
          <source>Recall that when we generated the new &lt;code&gt;adder&lt;/code&gt; project in the first section of this chapter, Cargo generated this code for us:</source>
          <target state="translated">我々は新しい生成時にことを思い出して &lt;code&gt;adder&lt;/code&gt; ：この章の最初のセクションでは、プロジェクトを、貨物が私たちのためにこのコードを生成</target>
        </trans-unit>
        <trans-unit id="70d56f7319d84e74a3ef19745d17cc45bd430b27" translate="yes" xml:space="preserve">
          <source>Recall the &lt;code&gt;Message&lt;/code&gt; enum we defined in Listing 6-2 when we discussed enum definitions in Chapter 6:</source>
          <target state="translated">第6章で列挙型の定義について説明したときに、リスト6-2で定義した &lt;code&gt;Message&lt;/code&gt; 列挙型を思い出してください。</target>
        </trans-unit>
        <trans-unit id="e8599ec7e3d16c35368bf8bb986afb37f099874c" translate="yes" xml:space="preserve">
          <source>Recall the thread-safe smart pointers discussed in Chapter 16: to share ownership across multiple threads and allow the threads to mutate the value, we need to use &lt;code&gt;Arc&amp;lt;Mutex&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;. The &lt;code&gt;Arc&lt;/code&gt; type will let multiple workers own the receiver, and &lt;code&gt;Mutex&lt;/code&gt; will ensure that only one worker gets a job from the receiver at a time. Listing 20-18 shows the changes we need to make.</source>
          <target state="translated">第16章で説明したスレッドセーフなスマートポインターを思い出してください。複数のスレッド間で所有権を共有し、スレッドが値を変更できるようにするには、 &lt;code&gt;Arc&amp;lt;Mutex&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; を使用する必要があります。 &lt;code&gt;Arc&lt;/code&gt; タイプは、複数の労働者が受信機を所有できるようになる、と &lt;code&gt;Mutex&lt;/code&gt; 唯一の労働者が一度に受信機からのジョブを取得することを保証します。リスト20-18は私たちが行う必要がある変更を示しています。</target>
        </trans-unit>
        <trans-unit id="8434c52b54f0df88fc7f845d21a20f6a6d5ff880" translate="yes" xml:space="preserve">
          <source>Receiver</source>
          <target state="translated">Receiver</target>
        </trans-unit>
        <trans-unit id="893674f58a7593567351027cf33c94c892d0284d" translate="yes" xml:space="preserve">
          <source>Receives a single datagram message on the socket from the remote address to which it is connected. On success, returns the number of bytes read.</source>
          <target state="translated">接続先のリモートアドレスからソケット上の単一のデータグラムメッセージを受信する。成功した場合、読み込んだバイト数を返す。</target>
        </trans-unit>
        <trans-unit id="d922eca171fd309bc13b3aab3daf4110a3531c5f" translate="yes" xml:space="preserve">
          <source>Receives a single datagram message on the socket, without removing it from the queue. On success, returns the number of bytes read and the origin.</source>
          <target state="translated">キューからデータグラムメッセージを削除せずに、ソケット上の単一のデータグラムメッセージを受信する。成功した場合は、読み込んだバイト数と送信元を返します。</target>
        </trans-unit>
        <trans-unit id="4922aedba0a4e797aceb736d97040616a477cdaa" translate="yes" xml:space="preserve">
          <source>Receives a single datagram message on the socket. On success, returns the number of bytes read and the origin.</source>
          <target state="translated">ソケット上で単一のデータグラムメッセージを受信する。成功した場合、読み込んだバイト数と送信元を返します。</target>
        </trans-unit>
        <trans-unit id="c66700bf80292995de67bf851d042bb12d9a29c7" translate="yes" xml:space="preserve">
          <source>Receives data from the socket.</source>
          <target state="translated">ソケットからデータを受信します。</target>
        </trans-unit>
        <trans-unit id="e1b8c1411ba0b99035f9f1674a5264f1a9ac96ee" translate="yes" xml:space="preserve">
          <source>Receives data on the socket from the remote address to which it is connected, without removing that data from the queue. On success, returns the number of bytes peeked.</source>
          <target state="translated">キューからデータを削除せずに、接続先のリモートアドレスからソケット上のデータを受信する。成功した場合には、覗いたバイト数を返す。</target>
        </trans-unit>
        <trans-unit id="62b1e1ebe789ec27ec59463d1892a51d533a3262" translate="yes" xml:space="preserve">
          <source>Receives single datagram on the socket from the remote address to which it is connected, without removing the message from input queue. On success, returns the number of bytes peeked.</source>
          <target state="translated">ソケットに接続されているリモートアドレスから、入力キューからメッセージを削除することなく、ソケット上の単一のデータグラムを受信する。成功した場合には、覗いたバイト数を返す。</target>
        </trans-unit>
        <trans-unit id="b0cd162189acef9a5f49ef33602da42fae61d443" translate="yes" xml:space="preserve">
          <source>Receiving an error upon reaching deadline:</source>
          <target state="translated">締め切りに間に合わず、エラーが発生した。</target>
        </trans-unit>
        <trans-unit id="fca11f70e2a9d0225e162c0a68aa93d0c423f024" translate="yes" xml:space="preserve">
          <source>Receiving an error upon reaching timeout:</source>
          <target state="translated">タイムアウト時にエラーを受信しました。</target>
        </trans-unit>
        <trans-unit id="748db2084a5b5d673de56c18d266865f8a8485d6" translate="yes" xml:space="preserve">
          <source>Recoverable Errors with &lt;code id=&quot;recoverable-errors-with-result&quot;&gt;Result&lt;/code&gt;</source>
          <target state="translated">&lt;code id=&quot;recoverable-errors-with-result&quot;&gt;Result&lt;/code&gt; 伴う回復可能なエラー</target>
        </trans-unit>
        <trans-unit id="007e914132011b42637012b9ce4492137e081ee4" translate="yes" xml:space="preserve">
          <source>Recreate a &lt;code&gt;Box&lt;/code&gt; which was previously converted to a raw pointer using &lt;a href=&quot;struct.box#method.into_raw&quot;&gt;&lt;code&gt;Box::into_raw&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">以前に&lt;a href=&quot;struct.box#method.into_raw&quot;&gt; &lt;code&gt;Box::into_raw&lt;/code&gt; &lt;/a&gt;を使用してrawポインターに変換された &lt;code&gt;Box&lt;/code&gt; を再作成します。</target>
        </trans-unit>
        <trans-unit id="1af6c5316f8c71dde61007855ad036634dd13338" translate="yes" xml:space="preserve">
          <source>Recreate a &lt;code&gt;Box&lt;/code&gt; which was previously converted to a raw pointer using &lt;a href=&quot;struct.box#method.into_raw_with_alloc&quot;&gt;&lt;code&gt;Box::into_raw_with_alloc&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;struct.box#method.into_raw_with_alloc&quot;&gt; &lt;code&gt;Box::into_raw_with_alloc&lt;/code&gt; &lt;/a&gt;：を使用して、以前にrawポインタに変換された &lt;code&gt;Box&lt;/code&gt; を再作成します。</target>
        </trans-unit>
        <trans-unit id="72d20ffa5a336ca9bbe78dbe6197e2690761ca4a" translate="yes" xml:space="preserve">
          <source>Recursive structures must be boxed, because if the definition of &lt;code&gt;Cons&lt;/code&gt; looked like this:</source>
          <target state="translated">&lt;code&gt;Cons&lt;/code&gt; の定義が次のようになっている場合、再帰構造はボックス化する必要があります。</target>
        </trans-unit>
        <trans-unit id="6cfce22c00d0c64566ae852aeca29a5736f4a1f6" translate="yes" xml:space="preserve">
          <source>Recursive type definitions can cross module boundaries, but not module &lt;em&gt;visibility&lt;/em&gt; boundaries, or crate boundaries (in order to simplify the module system and type checker).</source>
          <target state="translated">再帰的な型定義は、モジュールの境界を越えることができますが、モジュールの&lt;em&gt;可視性の&lt;/em&gt;境界を越えたり、クレートの境界を越えたりすることはできません（モジュールシステムとタイプチェッカーを簡略化するため）。</target>
        </trans-unit>
        <trans-unit id="2fc507acee73e921f2090a5da067618858259860" translate="yes" xml:space="preserve">
          <source>Recursive types</source>
          <target state="translated">再帰型</target>
        </trans-unit>
        <trans-unit id="77d8a06bec1eed669a14750f6d5fd3a53be2c297" translate="yes" xml:space="preserve">
          <source>Recursive types must include a nominal type in the recursion (not mere &lt;a href=&quot;items/type-aliases&quot;&gt;type aliases&lt;/a&gt;, or other structural types such as &lt;a href=&quot;types/array&quot;&gt;arrays&lt;/a&gt; or &lt;a href=&quot;types/tuple&quot;&gt;tuples&lt;/a&gt;). So &lt;code&gt;type Rec = &amp;amp;'static [Rec]&lt;/code&gt; is not allowed.</source>
          <target state="translated">再帰型には、再帰に名義型を含める必要があります（単なる&lt;a href=&quot;items/type-aliases&quot;&gt;型エイリアス&lt;/a&gt;、または&lt;a href=&quot;types/array&quot;&gt;配列&lt;/a&gt;や&lt;a href=&quot;types/tuple&quot;&gt;タプル&lt;/a&gt;などの他の構造型ではありません）。したがって、 &lt;code&gt;type Rec = &amp;amp;'static [Rec]&lt;/code&gt; と入力することはできません。</target>
        </trans-unit>
        <trans-unit id="f596307d64ec4aaab8355bb59cc3fce7f7c0e570" translate="yes" xml:space="preserve">
          <source>Recursively create a directory and all of its parent components if they are missing.</source>
          <target state="translated">ディレクトリとその親コンポーネントが見つからない場合は、再帰的にディレクトリとそのすべての親コンポーネントを作成します。</target>
        </trans-unit>
        <trans-unit id="293498c2d44c441e3886ae4082c660d64bcefd98" translate="yes" xml:space="preserve">
          <source>Recursively running the destructor of all of its fields.</source>
          <target state="translated">すべてのフィールドのデストラクタを再帰的に実行します。</target>
        </trans-unit>
        <trans-unit id="d34a53d2b73b3c4d90f012c97837f353382de44d" translate="yes" xml:space="preserve">
          <source>RecvError</source>
          <target state="translated">RecvError</target>
        </trans-unit>
        <trans-unit id="95d37f622bdbf43e67a0f713d14de7100482d627" translate="yes" xml:space="preserve">
          <source>RecvTimeoutError</source>
          <target state="translated">RecvTimeoutError</target>
        </trans-unit>
        <trans-unit id="65f26c52f44c85ebfd467c0c62d8c69cfe419185" translate="yes" xml:space="preserve">
          <source>Reexporting with visibility modifiers such as &lt;code&gt;pub use a::b;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pub use a::b;&lt;/code&gt; などの可視性修飾子を使用して再エクスポートするにはa :: bを使用します。</target>
        </trans-unit>
        <trans-unit id="c89dd33c646c40bdf00223afeac7bcdb65160463" translate="yes" xml:space="preserve">
          <source>Ref</source>
          <target state="translated">Ref</target>
        </trans-unit>
        <trans-unit id="ae6dd4a1ebc18cb485d881c8bf2b4f15d27cb7e7" translate="yes" xml:space="preserve">
          <source>Ref::borrow</source>
          <target state="translated">Ref::borrow</target>
        </trans-unit>
        <trans-unit id="59dcfd8528aeb28747dda5e9d7d9aa42d02d2ffd" translate="yes" xml:space="preserve">
          <source>Ref::borrow_mut</source>
          <target state="translated">Ref::borrow_mut</target>
        </trans-unit>
        <trans-unit id="8495712904b74d241d2ca8d7f7d7c586af139091" translate="yes" xml:space="preserve">
          <source>Ref::clone</source>
          <target state="translated">Ref::clone</target>
        </trans-unit>
        <trans-unit id="657e4be0d8f30d0fac524d0ea19f5065a9cc9fe9" translate="yes" xml:space="preserve">
          <source>Ref::deref</source>
          <target state="translated">Ref::deref</target>
        </trans-unit>
        <trans-unit id="a461904516044af6a711e3c77ed49bdd9fc65dfc" translate="yes" xml:space="preserve">
          <source>Ref::fmt</source>
          <target state="translated">Ref::fmt</target>
        </trans-unit>
        <trans-unit id="d43093f106fc18dfc827d3f4bc5b7fc2b7addb1e" translate="yes" xml:space="preserve">
          <source>Ref::from</source>
          <target state="translated">Ref::from</target>
        </trans-unit>
        <trans-unit id="09d1336c6c73eb350f1b8ca48ae21dbc3c7b316b" translate="yes" xml:space="preserve">
          <source>Ref::into</source>
          <target state="translated">Ref::into</target>
        </trans-unit>
        <trans-unit id="4f283b52f6beda0ef1fc1faa98d195a3c894846b" translate="yes" xml:space="preserve">
          <source>Ref::map</source>
          <target state="translated">Ref::map</target>
        </trans-unit>
        <trans-unit id="40094d2323463912175db6c4c1b5c4fc1b661eb5" translate="yes" xml:space="preserve">
          <source>Ref::map_split</source>
          <target state="translated">Ref::map_split</target>
        </trans-unit>
        <trans-unit id="ffb34fc425f9a8736734a5d2bbffa489ef0bfc79" translate="yes" xml:space="preserve">
          <source>Ref::to_string</source>
          <target state="translated">Ref::to_string</target>
        </trans-unit>
        <trans-unit id="2dbde3675368070cd1f5a4bd99c75cb490d0c80d" translate="yes" xml:space="preserve">
          <source>Ref::try_from</source>
          <target state="translated">Ref::try_from</target>
        </trans-unit>
        <trans-unit id="3431b979676e3e8f37de04b14b8c68d8a218f4c9" translate="yes" xml:space="preserve">
          <source>Ref::try_into</source>
          <target state="translated">Ref::try_into</target>
        </trans-unit>
        <trans-unit id="df50d884b2cb0ab88701b1d563b8b3b3690f42a9" translate="yes" xml:space="preserve">
          <source>Ref::type_id</source>
          <target state="translated">Ref::type_id</target>
        </trans-unit>
        <trans-unit id="1e8d85e281abdda394f93aee68bc2af2fa8380bd" translate="yes" xml:space="preserve">
          <source>RefCell</source>
          <target state="translated">RefCell</target>
        </trans-unit>
        <trans-unit id="505b4c2484a44e1a5e0ee37ac4c2bcf2bd8fd19c" translate="yes" xml:space="preserve">
          <source>RefCell::as_ptr</source>
          <target state="translated">RefCell::as_ptr</target>
        </trans-unit>
        <trans-unit id="62a812f1f18838908d6afee0ea499ade301643fb" translate="yes" xml:space="preserve">
          <source>RefCell::borrow</source>
          <target state="translated">RefCell::borrow</target>
        </trans-unit>
        <trans-unit id="1316b4aa37afb535dfdd7b04030e6418ea1f6a7d" translate="yes" xml:space="preserve">
          <source>RefCell::borrow_mut</source>
          <target state="translated">RefCell::borrow_mut</target>
        </trans-unit>
        <trans-unit id="e87d9ef83bdb8d9ed0a0d1c36f3b1bcf8a84d8aa" translate="yes" xml:space="preserve">
          <source>RefCell::clamp</source>
          <target state="translated">RefCell::clamp</target>
        </trans-unit>
        <trans-unit id="418b309a2204e2da66f491cd060301166d629798" translate="yes" xml:space="preserve">
          <source>RefCell::clone</source>
          <target state="translated">RefCell::clone</target>
        </trans-unit>
        <trans-unit id="edb0e001eca01f3d3f149d949e9749040a6a4808" translate="yes" xml:space="preserve">
          <source>RefCell::clone_from</source>
          <target state="translated">RefCell::clone_from</target>
        </trans-unit>
        <trans-unit id="b1b722cfe66777ee21e6d1fb910eac396ac337fb" translate="yes" xml:space="preserve">
          <source>RefCell::clone_into</source>
          <target state="translated">RefCell::clone_into</target>
        </trans-unit>
        <trans-unit id="d22c521cb0bdfd15b87f30bc2784b6d17b8ca4b2" translate="yes" xml:space="preserve">
          <source>RefCell::cmp</source>
          <target state="translated">RefCell::cmp</target>
        </trans-unit>
        <trans-unit id="9c8e6ef37aab69ec4c1dfcbeeb3ef2b05f8dfb58" translate="yes" xml:space="preserve">
          <source>RefCell::default</source>
          <target state="translated">RefCell::default</target>
        </trans-unit>
        <trans-unit id="48be338181152032ca0b883b7574e5d074ea7839" translate="yes" xml:space="preserve">
          <source>RefCell::eq</source>
          <target state="translated">RefCell::eq</target>
        </trans-unit>
        <trans-unit id="3355bb2c796e559e0a3e27335637f627a54a07c9" translate="yes" xml:space="preserve">
          <source>RefCell::fmt</source>
          <target state="translated">RefCell::fmt</target>
        </trans-unit>
        <trans-unit id="580005802d43ffb29217b6c9d242c5950b033cdf" translate="yes" xml:space="preserve">
          <source>RefCell::from</source>
          <target state="translated">RefCell::from</target>
        </trans-unit>
        <trans-unit id="dfe6e5c77278efd0a28109ccd313afadce54801e" translate="yes" xml:space="preserve">
          <source>RefCell::ge</source>
          <target state="translated">RefCell::ge</target>
        </trans-unit>
        <trans-unit id="5439700b9a7e4dcfa02b612614acfb868dd8325d" translate="yes" xml:space="preserve">
          <source>RefCell::get_mut</source>
          <target state="translated">RefCell::get_mut</target>
        </trans-unit>
        <trans-unit id="e4376837fb5c1360c6b274ad81b27501d89a6b4b" translate="yes" xml:space="preserve">
          <source>RefCell::gt</source>
          <target state="translated">RefCell::gt</target>
        </trans-unit>
        <trans-unit id="951d112e934301c3415f25e030e9eca061657900" translate="yes" xml:space="preserve">
          <source>RefCell::into</source>
          <target state="translated">RefCell::into</target>
        </trans-unit>
        <trans-unit id="1d5bb1d0ae7245e9c6baa4413451c608d54c57bc" translate="yes" xml:space="preserve">
          <source>RefCell::into_inner</source>
          <target state="translated">RefCell::into_inner</target>
        </trans-unit>
        <trans-unit id="7640c04c2e3bb01f85ff1604bcf4c6366f5550dc" translate="yes" xml:space="preserve">
          <source>RefCell::le</source>
          <target state="translated">RefCell::le</target>
        </trans-unit>
        <trans-unit id="1d27657fbb232b4aadd414a8aafba1065c65710b" translate="yes" xml:space="preserve">
          <source>RefCell::lt</source>
          <target state="translated">RefCell::lt</target>
        </trans-unit>
        <trans-unit id="fb760f634a1ac30f3570371233b307469df7b951" translate="yes" xml:space="preserve">
          <source>RefCell::max</source>
          <target state="translated">RefCell::max</target>
        </trans-unit>
        <trans-unit id="f2cceba2d242a0245f040957f2dc1d8a2a594bfc" translate="yes" xml:space="preserve">
          <source>RefCell::min</source>
          <target state="translated">RefCell::min</target>
        </trans-unit>
        <trans-unit id="cdf493d4f55937a587744c22d8e93f2d1487cdf6" translate="yes" xml:space="preserve">
          <source>RefCell::ne</source>
          <target state="translated">RefCell::ne</target>
        </trans-unit>
        <trans-unit id="1b13a8456252ae82be7b7ead198f8f170562e696" translate="yes" xml:space="preserve">
          <source>RefCell::new</source>
          <target state="translated">RefCell::new</target>
        </trans-unit>
        <trans-unit id="935b4f415854a7f4c772ebed8a8f95e3499b2cf8" translate="yes" xml:space="preserve">
          <source>RefCell::partial_cmp</source>
          <target state="translated">RefCell::partial_cmp</target>
        </trans-unit>
        <trans-unit id="af895c7553c09dcfb58e3be218b3b01037fa4266" translate="yes" xml:space="preserve">
          <source>RefCell::replace</source>
          <target state="translated">RefCell::replace</target>
        </trans-unit>
        <trans-unit id="34f8dca50510847d6139bdc2ef53441d2cdd8552" translate="yes" xml:space="preserve">
          <source>RefCell::replace_with</source>
          <target state="translated">RefCell::replace_with</target>
        </trans-unit>
        <trans-unit id="00a191512967ee10c691196113d0712bd746d0e6" translate="yes" xml:space="preserve">
          <source>RefCell::swap</source>
          <target state="translated">RefCell::swap</target>
        </trans-unit>
        <trans-unit id="9dfc6df11e517bb86371637c30ee992669919390" translate="yes" xml:space="preserve">
          <source>RefCell::to_owned</source>
          <target state="translated">RefCell::to_owned</target>
        </trans-unit>
        <trans-unit id="0fae1bb5843eec2309e58a28f1505b5c07604ff4" translate="yes" xml:space="preserve">
          <source>RefCell::try_borrow</source>
          <target state="translated">RefCell::try_borrow</target>
        </trans-unit>
        <trans-unit id="fc2b2c01d0c4e3dae9495389e333b45ea7f5a63c" translate="yes" xml:space="preserve">
          <source>RefCell::try_borrow_mut</source>
          <target state="translated">RefCell::try_borrow_mut</target>
        </trans-unit>
        <trans-unit id="beaa81db296eb8166eb0eb013a9cf4abf41c1115" translate="yes" xml:space="preserve">
          <source>RefCell::try_borrow_unguarded</source>
          <target state="translated">RefCell::try_borrow_unguarded</target>
        </trans-unit>
        <trans-unit id="7f9ce5f418fc1cd153432b6d2b8b5cfe53d63335" translate="yes" xml:space="preserve">
          <source>RefCell::try_from</source>
          <target state="translated">RefCell::try_from</target>
        </trans-unit>
        <trans-unit id="385580e40b3dc06a0dc45eb2fd1df689230b88cf" translate="yes" xml:space="preserve">
          <source>RefCell::try_into</source>
          <target state="translated">RefCell::try_into</target>
        </trans-unit>
        <trans-unit id="c61087deae3a634a9472d7cc03074b0ac932ef3b" translate="yes" xml:space="preserve">
          <source>RefCell::type_id</source>
          <target state="translated">RefCell::type_id</target>
        </trans-unit>
        <trans-unit id="4fa85168e6a7c8e1d1bc137b86cecdbf70aeb47f" translate="yes" xml:space="preserve">
          <source>RefMut</source>
          <target state="translated">RefMut</target>
        </trans-unit>
        <trans-unit id="f279854365ecc5e06566043f641c4eab06f46de9" translate="yes" xml:space="preserve">
          <source>RefMut::borrow</source>
          <target state="translated">RefMut::borrow</target>
        </trans-unit>
        <trans-unit id="ca3f8645458e3973eb93cae2a5d86d5be6e1dd39" translate="yes" xml:space="preserve">
          <source>RefMut::borrow_mut</source>
          <target state="translated">RefMut::borrow_mut</target>
        </trans-unit>
        <trans-unit id="68c95880b73d7fa75f043cbf6ce42487df31e8de" translate="yes" xml:space="preserve">
          <source>RefMut::deref</source>
          <target state="translated">RefMut::deref</target>
        </trans-unit>
        <trans-unit id="d2333acfdf95063f03b679e65b3f32b4b3b41605" translate="yes" xml:space="preserve">
          <source>RefMut::deref_mut</source>
          <target state="translated">RefMut::deref_mut</target>
        </trans-unit>
        <trans-unit id="5f2f9d10e02b5c99c9f5b255a8a991ceac714cdd" translate="yes" xml:space="preserve">
          <source>RefMut::fmt</source>
          <target state="translated">RefMut::fmt</target>
        </trans-unit>
        <trans-unit id="f7c4d621ae4fa4ec2a79395837b51d791aeb0dd7" translate="yes" xml:space="preserve">
          <source>RefMut::from</source>
          <target state="translated">RefMut::from</target>
        </trans-unit>
        <trans-unit id="6ecc7572888155336f41a73bb02c3d56a6b85094" translate="yes" xml:space="preserve">
          <source>RefMut::into</source>
          <target state="translated">RefMut::into</target>
        </trans-unit>
        <trans-unit id="c4912ff65bb2446226ebc9c5a3bdae5704b47995" translate="yes" xml:space="preserve">
          <source>RefMut::map</source>
          <target state="translated">RefMut::map</target>
        </trans-unit>
        <trans-unit id="3022c0ecfe0e90a0daf55c5945532baa492f43a3" translate="yes" xml:space="preserve">
          <source>RefMut::map_split</source>
          <target state="translated">RefMut::map_split</target>
        </trans-unit>
        <trans-unit id="dcafa9ed20f38472a8aafae8e0eca416e00d8958" translate="yes" xml:space="preserve">
          <source>RefMut::to_string</source>
          <target state="translated">RefMut::to_string</target>
        </trans-unit>
        <trans-unit id="aa75fb4fa88fed082c4278be2e18a19a3f123c0f" translate="yes" xml:space="preserve">
          <source>RefMut::try_from</source>
          <target state="translated">RefMut::try_from</target>
        </trans-unit>
        <trans-unit id="9e77e04874e35b778c58785d2a426d8ca3d83b9f" translate="yes" xml:space="preserve">
          <source>RefMut::try_into</source>
          <target state="translated">RefMut::try_into</target>
        </trans-unit>
        <trans-unit id="c4241558fd67c2108088359a199ff43c776582e6" translate="yes" xml:space="preserve">
          <source>RefMut::type_id</source>
          <target state="translated">RefMut::type_id</target>
        </trans-unit>
        <trans-unit id="7b53abe952691347dbedfd64d4ad2e21aa812fb2" translate="yes" xml:space="preserve">
          <source>RefUnwindSafe</source>
          <target state="translated">RefUnwindSafe</target>
        </trans-unit>
        <trans-unit id="5294ea48103afc195a68b47fa008f55a67285244" translate="yes" xml:space="preserve">
          <source>Refactor the code you just added or changed and make sure the tests continue to pass.</source>
          <target state="translated">追加または変更したコードをリファクタリングして、テストが通過し続けることを確認してください。</target>
        </trans-unit>
        <trans-unit id="32108e8ecb882c7e91d50c15dc102e03b711366b" translate="yes" xml:space="preserve">
          <source>Refactoring Using Functions</source>
          <target state="translated">関数を使ったリファクタリング</target>
        </trans-unit>
        <trans-unit id="0d90ba592a90de6f045599abbb9eac0cc22bbdf9" translate="yes" xml:space="preserve">
          <source>Refactoring to Improve Modularity and Error Handling</source>
          <target state="translated">モジュール性とエラー処理を改善するためのリファクタリング</target>
        </trans-unit>
        <trans-unit id="d3348a77c52c86217379a7c61ae0d3899d165caa" translate="yes" xml:space="preserve">
          <source>Refactoring with Closures to Store Code</source>
          <target state="translated">クロージャでリファクタリングしてコードを保存</target>
        </trans-unit>
        <trans-unit id="53c9cee6bf06f4b720a0b505506ec6f1fa25871e" translate="yes" xml:space="preserve">
          <source>Refactoring with Structs: Adding More Meaning</source>
          <target state="translated">Structs を使ったリファクタリング。意味の追加</target>
        </trans-unit>
        <trans-unit id="4d5d2fb3e8970f535362d6f1ef1ed86879497383" translate="yes" xml:space="preserve">
          <source>Refactoring with Tuples</source>
          <target state="translated">タプルを使ったリファクタリング</target>
        </trans-unit>
        <trans-unit id="ec5a7e0fd2709071500f561f20d54b1cf02993cd" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;../../book/ch15-03-drop&quot;&gt;the chapter on &lt;code&gt;Drop&lt;/code&gt; in &lt;em&gt;The Rust Programming Language&lt;/em&gt;&lt;/a&gt; for some more elaboration.</source>
          <target state="translated">参照してください&lt;a href=&quot;../../book/ch15-03-drop&quot;&gt;上の章 &lt;code&gt;Drop&lt;/code&gt; で&lt;em&gt;錆プログラミング言語の&lt;/em&gt;&lt;/a&gt;いくつかのより多くの精緻化のために。</target>
        </trans-unit>
        <trans-unit id="ebee384d5ab59d9238010eb11ee0774c2695a7e1" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/0132-ufcs.md&quot;&gt;RFC 132&lt;/a&gt; for further details and motivations.</source>
          <target state="translated">詳細と動機については、&lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/0132-ufcs.md&quot;&gt;RFC 132&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="5723c7ff2a05b60d65671ac84704221e5abc2479" translate="yes" xml:space="preserve">
          <source>Refer to the &lt;a href=&quot;ch04-03-slices#string-slices-as-parameters&quot;&gt;&amp;ldquo;String Slices as Parameters&amp;rdquo;&lt;/a&gt; section in Chapter 4 for more discussion about why the parameters we use in Listing 10-20 are the ones we want.</source>
          <target state="translated">リスト10-20で使用するパラメーターが必要な理由についての詳細は、第4章の&lt;a href=&quot;ch04-03-slices#string-slices-as-parameters&quot;&gt;「パラメーターとしての文字列スライス」&lt;/a&gt;セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="db1c784524e1b54011a95823026161f7c8517fe0" translate="yes" xml:space="preserve">
          <source>Reference</source>
          <target state="translated">Reference</target>
        </trans-unit>
        <trans-unit id="dab55b60dca25f20b796862053b994dcd35ee2f5" translate="yes" xml:space="preserve">
          <source>Reference Cycles Can Leak Memory</source>
          <target state="translated">リファレンスサイクルはメモリを漏らす可能性があります</target>
        </trans-unit>
        <trans-unit id="fcdf9ff815a433b6e4b73e90ad9faeb5c9516044" translate="yes" xml:space="preserve">
          <source>Reference equality by address, instead of comparing the values pointed to, is accomplished via implicit reference-pointer coercion and raw pointer equality via &lt;a href=&quot;ptr/fn.eq&quot;&gt;&lt;code&gt;ptr::eq&lt;/code&gt;&lt;/a&gt;, while &lt;a href=&quot;cmp/trait.partialeq&quot;&gt;&lt;code&gt;PartialEq&lt;/code&gt;&lt;/a&gt; compares values.</source>
          <target state="translated">代わりに尖った値を、比較のアドレスによって参照平等は、を介して暗黙の参照ポインタ強制生ポインタ平等を介して達成される&lt;a href=&quot;ptr/fn.eq&quot;&gt; &lt;code&gt;ptr::eq&lt;/code&gt; &lt;/a&gt;ながら、&lt;a href=&quot;cmp/trait.partialeq&quot;&gt; &lt;code&gt;PartialEq&lt;/code&gt; の&lt;/a&gt;値を比較します。</target>
        </trans-unit>
        <trans-unit id="f16b46c7f2489e304d89aa5be46b8d7afc846291" translate="yes" xml:space="preserve">
          <source>Reference patterns</source>
          <target state="translated">リファレンスパターン</target>
        </trans-unit>
        <trans-unit id="8aaa421b28e63892f91dde72cfc848da3bc86c17" translate="yes" xml:space="preserve">
          <source>Reference patterns are always irrefutable.</source>
          <target state="translated">参照パターンは常に反論の余地のないものです。</target>
        </trans-unit>
        <trans-unit id="e07a8581f70aee7dffe1d96bca31f27175fc393f" translate="yes" xml:space="preserve">
          <source>Reference patterns dereference the pointers that are being matched and, thus, borrow them.</source>
          <target state="translated">参照パターンは、マッチされているポインタを参照しないため、それらを借用します。</target>
        </trans-unit>
        <trans-unit id="c2897b854516afa7da202ff8119e9a26c6a37c43" translate="yes" xml:space="preserve">
          <source>Reference's lifetime of borrowed content doesn't match the expected lifetime.</source>
          <target state="translated">リファレンスの借用コンテンツのライフタイムが、期待されるライフタイムと一致しない。</target>
        </trans-unit>
        <trans-unit id="5d20d0fee3b91643dd8d272ac33d01ca95179d82" translate="yes" xml:space="preserve">
          <source>References</source>
          <target state="translated">References</target>
        </trans-unit>
        <trans-unit id="c16d4f583282205cac2b45c5615c6e07ddc702e2" translate="yes" xml:space="preserve">
          <source>References (&lt;code id=&quot;references--and-mut&quot;&gt;&amp;amp;&lt;/code&gt; and &lt;code&gt;&amp;amp;mut&lt;/code&gt;)</source>
          <target state="translated">参照（ &lt;code id=&quot;references--and-mut&quot;&gt;&amp;amp;&lt;/code&gt; および &lt;code&gt;&amp;amp;mut&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="9853b24ab6e99d1a4823850941ed9d0e1219cbe3" translate="yes" xml:space="preserve">
          <source>References and Borrowing</source>
          <target state="translated">参考文献・借入</target>
        </trans-unit>
        <trans-unit id="69569f3897c090b2ed7327c80442cdc52f19c168" translate="yes" xml:space="preserve">
          <source>References have a lifetime attached to them, which represents the scope for which the borrow is valid. A lifetime is said to &quot;outlive&quot; another one if its representative scope is as long or longer than the other. The &lt;code&gt;'static&lt;/code&gt; lifetime is the longest lifetime, which represents the total life of the program. For example, string literals have a &lt;code&gt;'static&lt;/code&gt; lifetime because the text data is embedded into the binary of the program, rather than in an allocation that needs to be dynamically managed.</source>
          <target state="translated">参照には、借用が有効なスコープを表す有効期間が付加されています。ライフタイムは、その代表的なスコープが他のスコープと同じかそれより長い場合、別のライフタイムを「長生き」すると言われます。 &lt;code&gt;'static&lt;/code&gt; 寿命は、プログラム全体の寿命を表し最長寿命です。たとえば、テキストデータは動的に管理する必要がある割り当てではなくプログラムのバイナリに埋め込まれるため、文字列リテラルには &lt;code&gt;'static&lt;/code&gt; 存続期間」があります。</target>
        </trans-unit>
        <trans-unit id="252a202b10b745ff25af1dc832a6be0bdd681085" translate="yes" xml:space="preserve">
          <source>References in statics and constants may only refer to immutable values. Erroneous code example:</source>
          <target state="translated">静的および定数での参照は、不変値のみを参照することができます。誤ったコード例。</target>
        </trans-unit>
        <trans-unit id="e3720d258f1a60160f8cf21b8a55142622bce6e8" translate="yes" xml:space="preserve">
          <source>References must always be valid.</source>
          <target state="translated">参照は常に有効でなければなりません。</target>
        </trans-unit>
        <trans-unit id="226e638d37c8056849d768b6e420f90f2b09dab7" translate="yes" xml:space="preserve">
          <source>References to union fields</source>
          <target state="translated">ユニオンフィールドへの参照</target>
        </trans-unit>
        <trans-unit id="6219e83c36e7891f64719cbfb731860388855371" translate="yes" xml:space="preserve">
          <source>References, both shared and mutable.</source>
          <target state="translated">参照、共有と変異可能の両方。</target>
        </trans-unit>
        <trans-unit id="0a3433e1fd13d86899e7b1de253f9ae911e1ac1a" translate="yes" xml:space="preserve">
          <source>Referring to an argument with the dollar syntax does not affect the &quot;next argument&quot; counter, so it's usually a good idea to refer to arguments by position, or use named arguments.</source>
          <target state="translated">ドル構文で引数を参照しても「次の引数」カウンターには影響しませんので、通常は位置で引数を参照するか、名前付き引数を使用するのが良いでしょう。</target>
        </trans-unit>
        <trans-unit id="ece0bb210626bdfdd4639cd3165c239e255c896c" translate="yes" xml:space="preserve">
          <source>Refutability</source>
          <target state="translated">Refutability</target>
        </trans-unit>
        <trans-unit id="6010f8d798e4eecb7c5ea33e818a0c5e503603da" translate="yes" xml:space="preserve">
          <source>Refutability: Whether a Pattern Might Fail to Match</source>
          <target state="translated">反証可能性 パターンが一致しない可能性があるかどうか</target>
        </trans-unit>
        <trans-unit id="4f9937325e7509315c59a4fef01df9a4828d3d22" translate="yes" xml:space="preserve">
          <source>Regardless of what this method returns, ownership of the memory block referenced by &lt;code&gt;ptr&lt;/code&gt; has not been transferred, and the contents of the memory block are unaltered.</source>
          <target state="translated">このメソッドが返す内容に関係なく、 &lt;code&gt;ptr&lt;/code&gt; によって参照されるメモリブロックの所有権は転送されておらず、メモリブロックの内容は変更されていません。</target>
        </trans-unit>
        <trans-unit id="3f5a4da0a68fe0429d659d2723f10975ca04e054" translate="yes" xml:space="preserve">
          <source>Regardless of your operating system, the string &lt;code&gt;Hello, world!&lt;/code&gt; should print to the terminal. If you don&amp;rsquo;t see this output, refer back to the &lt;a href=&quot;ch01-01-installation#troubleshooting&quot;&gt;&amp;ldquo;Troubleshooting&amp;rdquo;&lt;/a&gt; part of the Installation section for ways to get help.</source>
          <target state="translated">オペレーティングシステムに関係なく、文字列 &lt;code&gt;Hello, world!&lt;/code&gt; 端末に出力する必要があります。この出力が表示されない場合は、&lt;a href=&quot;ch01-01-installation#troubleshooting&quot;&gt;「インストール」&lt;/a&gt;セクションの「トラブルシューティング」の部分に戻って、ヘルプを取得する方法を参照してください。</target>
        </trans-unit>
        <trans-unit id="c6d64e2bccce60748b5fe03dbf67d6160db2b2e0" translate="yes" xml:space="preserve">
          <source>Registers a custom allocation error hook, replacing any that was previously registered.</source>
          <target state="translated">カスタムアロケーションエラーフックを登録し、以前に登録されていたものを置き換えます。</target>
        </trans-unit>
        <trans-unit id="cb5f4d93955c482b2c36a91ac9a1a95deb296412" translate="yes" xml:space="preserve">
          <source>Registers a custom panic hook, replacing any that was previously registered.</source>
          <target state="translated">カスタムパニックフックを登録し、以前に登録されていたものを置き換えます。</target>
        </trans-unit>
        <trans-unit id="d683947604fe1c5bf56cff07393a12390d3ed513" translate="yes" xml:space="preserve">
          <source>Regular structs are the most commonly used. Each field defined within them has a name and a type, and once defined can be accessed using &lt;code&gt;example_struct.field&lt;/code&gt; syntax. The fields of a struct share its mutability, so &lt;code&gt;foo.bar = 2;&lt;/code&gt; would only be valid if &lt;code&gt;foo&lt;/code&gt; was mutable. Adding &lt;code&gt;pub&lt;/code&gt; to a field makes it visible to code in other modules, as well as allowing it to be directly accessed and modified.</source>
          <target state="translated">通常の構造体が最も一般的に使用されます。それらの中で定義された各フィールドには名前とタイプがあり、一度定義されると &lt;code&gt;example_struct.field&lt;/code&gt; 構文を使用してアクセスできます。構造体のフィールドはその &lt;code&gt;foo.bar = 2;&lt;/code&gt; 共有しているため、foo.bar = 2; &lt;code&gt;foo&lt;/code&gt; が変更可能である場合にのみ有効です。フィールドに &lt;code&gt;pub&lt;/code&gt; を追加すると、他のモジュールのコードから見えるようになるだけでなく、直接アクセスして変更できるようになります。</target>
        </trans-unit>
        <trans-unit id="c7a4f051faf65254680f4079c54a8517fde96d07" translate="yes" xml:space="preserve">
          <source>Reinterprets the bits of a value of one type as another type.</source>
          <target state="translated">ある型の値のビットを別の型として再解釈します。</target>
        </trans-unit>
        <trans-unit id="b13c3ff3e36c8646c9f630b31f754a28e7cd3aa6" translate="yes" xml:space="preserve">
          <source>Related macros</source>
          <target state="translated">関連マクロ</target>
        </trans-unit>
        <trans-unit id="5a0d31ef401af7e48cb8fdb8695b1239b3d5de86" translate="yes" xml:space="preserve">
          <source>Relationship with &lt;code&gt;ManuallyDrop&lt;/code&gt;</source>
          <target state="translated">関係 &lt;code&gt;ManuallyDrop&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7236970f9232116712d462fb14e487b3e80a0d1a" translate="yes" xml:space="preserve">
          <source>Release - a barrier for releasing a lock. Preceding reads and writes take place before the barrier.</source>
          <target state="translated">Release (リリース)-ロックを解放するためのバリア。先行する読み書きはバリアの前で行われます。</target>
        </trans-unit>
        <trans-unit id="53431f3ad82292d8589cbc4f971c6f0431b5276f" translate="yes" xml:space="preserve">
          <source>Release borrow before move.</source>
          <target state="translated">移動する前に借用を解除します。</target>
        </trans-unit>
        <trans-unit id="63bad8b347b4755165af0fb962efbdc69b6bda54" translate="yes" xml:space="preserve">
          <source>Rem</source>
          <target state="translated">Rem</target>
        </trans-unit>
        <trans-unit id="0a4db5c8d38aff0a2853679b596092600a0ae19b" translate="yes" xml:space="preserve">
          <source>Rem::rem</source>
          <target state="translated">Rem::rem</target>
        </trans-unit>
        <trans-unit id="6ddca2f87d04b2a80ae6483e8e4febf6fb13af7d" translate="yes" xml:space="preserve">
          <source>RemAssign</source>
          <target state="translated">RemAssign</target>
        </trans-unit>
        <trans-unit id="31e8440bd24dbf3b4744da225e58958a2b476840" translate="yes" xml:space="preserve">
          <source>RemAssign::rem_assign</source>
          <target state="translated">RemAssign::rem_assign</target>
        </trans-unit>
        <trans-unit id="c20a1017faea096d3f06199fd35a9c0037bfb227" translate="yes" xml:space="preserve">
          <source>Remainder</source>
          <target state="translated">Remainder</target>
        </trans-unit>
        <trans-unit id="3abfbe6b4f511d3dea5d6431cdbf39c4e4729f0c" translate="yes" xml:space="preserve">
          <source>Remainder assignment</source>
          <target state="translated">残量の割り当て</target>
        </trans-unit>
        <trans-unit id="d7020f448aaf8aacc8b4d63537e375e865fff9d8" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="translated">Remarks</target>
        </trans-unit>
        <trans-unit id="f1be69425bab38294482fd6c9a961434cfbc1e00" translate="yes" xml:space="preserve">
          <source>Remember that a crate is a collection of Rust source code files. The project we&amp;rsquo;ve been building is a &lt;em&gt;binary crate&lt;/em&gt;, which is an executable. The &lt;code&gt;rand&lt;/code&gt; crate is a &lt;em&gt;library crate&lt;/em&gt;, which contains code intended to be used in other programs.</source>
          <target state="translated">クレートはRustのソースコードファイルの集まりです。私たちが構築してきたプロジェクトは、実行可能な&lt;em&gt;バイナリクレート&lt;/em&gt;です。 &lt;code&gt;rand&lt;/code&gt; クレートは、&lt;em&gt;ライブラリクレート&lt;/em&gt;、他のプログラムで使用されることを意図したコードが含まれています、。</target>
        </trans-unit>
        <trans-unit id="e2a7262567b5ab9a75e7796c66ea4001e7364f73" translate="yes" xml:space="preserve">
          <source>Remember that blocks of code evaluate to the last expression in them, and numbers by themselves are also expressions. In this case, the value of the whole &lt;code&gt;if&lt;/code&gt; expression depends on which block of code executes. This means the values that have the potential to be results from each arm of the &lt;code&gt;if&lt;/code&gt; must be the same type; in Listing 3-2, the results of both the &lt;code&gt;if&lt;/code&gt; arm and the &lt;code&gt;else&lt;/code&gt; arm were &lt;code&gt;i32&lt;/code&gt; integers. If the types are mismatched, as in the following example, we&amp;rsquo;ll get an error:</source>
          <target state="translated">コードのブロックはそれらの最後の式に評価され、数値自体も式であることに注意してください。この場合、 &lt;code&gt;if&lt;/code&gt; 式全体の値は、実行するコードブロックによって異なります。つまり、 &lt;code&gt;if&lt;/code&gt; の各アームからの結果である可能性がある値は、同じ型でなければなりません。リスト3-2では、 &lt;code&gt;if&lt;/code&gt; アームと &lt;code&gt;else&lt;/code&gt; アームの両方の結果が &lt;code&gt;i32&lt;/code&gt; 整数でした。次の例のようにタイプが一致しない場合、エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="13bff6540a604915955e887c3df6c5cf7dce46cd" translate="yes" xml:space="preserve">
          <source>Remember that strings are UTF-8 encoded, so we can include any properly encoded data in them, as shown in Listing 8-14.</source>
          <target state="translated">リスト8-14で示されるように、文字列はUTF-8でエンコードされていることを覚えておいてください。</target>
        </trans-unit>
        <trans-unit id="df096f058e66383b66e43ab80b172663eedf1a7c" translate="yes" xml:space="preserve">
          <source>Remember that the first value in the return value of &lt;code&gt;env::args&lt;/code&gt; is the name of the program. We want to ignore that and get to the next value, so first we call &lt;code&gt;next&lt;/code&gt; and do nothing with the return value. Second, we call &lt;code&gt;next&lt;/code&gt; to get the value we want to put in the &lt;code&gt;query&lt;/code&gt; field of &lt;code&gt;Config&lt;/code&gt;. If &lt;code&gt;next&lt;/code&gt; returns a &lt;code&gt;Some&lt;/code&gt;, we use a &lt;code&gt;match&lt;/code&gt; to extract the value. If it returns &lt;code&gt;None&lt;/code&gt;, it means not enough arguments were given and we return early with an &lt;code&gt;Err&lt;/code&gt; value. We do the same thing for the &lt;code&gt;filename&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;env::args&lt;/code&gt; 戻り値の最初の値はプログラムの名前であることに注意してください。それを無視して次の値に到達したいので、最初に &lt;code&gt;next&lt;/code&gt; を呼び出し、戻り値に対して何もしません。次に、 &lt;code&gt;next&lt;/code&gt; を呼び出して、 &lt;code&gt;Config&lt;/code&gt; の &lt;code&gt;query&lt;/code&gt; フィールドに入力する値を取得します。 &lt;code&gt;next&lt;/code&gt; が &lt;code&gt;Some&lt;/code&gt; を返す場合、 &lt;code&gt;match&lt;/code&gt; を使用して値を抽出します。それが &lt;code&gt;None&lt;/code&gt; を返す場合、それは十分な引数が与えられなかったことを意味し、 &lt;code&gt;Err&lt;/code&gt; 値で早く戻ります。 &lt;code&gt;filename&lt;/code&gt; 値についても同じことを行います。</target>
        </trans-unit>
        <trans-unit id="6e15cc8b59bfac42e1a9c8d421b6603d5cbdf480" translate="yes" xml:space="preserve">
          <source>Remember this solution is unsafe! You will have to ensure that accesses to the cell are synchronized.</source>
          <target state="translated">このソリューションは安全ではないことを覚えておいてください。セルへのアクセスが同期されていることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="cc7fd191216e8cc9e433938ec9f025101857bba2" translate="yes" xml:space="preserve">
          <source>Remember to stop the program by pressing ctrl-c when you&amp;rsquo;re done running a particular version of the code. Then restart &lt;code&gt;cargo run&lt;/code&gt; after you&amp;rsquo;ve made each set of code changes to make sure you&amp;rsquo;re running the newest code.</source>
          <target state="translated">特定のバージョンのコードの実行が終了したら、ctrl-cを押してプログラムを停止することを忘れないでください。次に、コードの各セットを変更した後、 &lt;code&gt;cargo run&lt;/code&gt; を再起動して、最新のコードが実行されていることを確認します。</target>
        </trans-unit>
        <trans-unit id="cd3b3dbf01c86fd8fe9076a1555c32cdb0933594" translate="yes" xml:space="preserve">
          <source>Remember, &lt;a href=&quot;../char/index&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt;s may not match your human intuition about characters:</source>
          <target state="translated">&lt;a href=&quot;../char/index&quot;&gt; &lt;code&gt;char&lt;/code&gt; &lt;/a&gt;は、文字に関する人間の直感と一致しない場合があります。</target>
        </trans-unit>
        <trans-unit id="782794232de3d93fd1d5602f9d3c1869be1600ee" translate="yes" xml:space="preserve">
          <source>Remember, &lt;a href=&quot;../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt;s may not match your intuition about characters:</source>
          <target state="translated">&lt;a href=&quot;../primitive.char&quot;&gt; &lt;code&gt;char&lt;/code&gt; &lt;/a&gt;は、文字に関する直感と一致しない場合があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="4c7648abc1e394f5383d51910a904b914def0fbc" translate="yes" xml:space="preserve">
          <source>Remember, &lt;a href=&quot;char/index&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt;s may not match your human intuition about characters:</source>
          <target state="translated">&lt;a href=&quot;char/index&quot;&gt; &lt;code&gt;char&lt;/code&gt; &lt;/a&gt;は、文字に関する人間の直感と一致しない場合があります。</target>
        </trans-unit>
        <trans-unit id="e8e6774e04d72a9291fd5676345716e063a3fa1e" translate="yes" xml:space="preserve">
          <source>Remember, &lt;a href=&quot;primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt;s may not match your intuition about characters:</source>
          <target state="translated">&lt;a href=&quot;primitive.char&quot;&gt; &lt;code&gt;char&lt;/code&gt; &lt;/a&gt;は、文字に関する直感と一致しない場合があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="e64127ffe6be164d9d8d034cb10e48a3c48eff64" translate="yes" xml:space="preserve">
          <source>Remember: you can't use a function call inside a const's initialization expression! However, you can totally use it anywhere else:</source>
          <target state="translated">覚えておいてください:const の初期化式の中では関数呼び出しは使えません! しかし、それ以外の場所では完全に使用できます。</target>
        </trans-unit>
        <trans-unit id="0a7440e709c374a9dc4dfad140b66911fcf69eb1" translate="yes" xml:space="preserve">
          <source>Remember: you cannot use a function call inside a constant or static. However, you can totally use it in constant functions:</source>
          <target state="translated">覚えておいてください:定数やスタティックの中では関数呼び出しを使うことはできません。しかし、定数関数の中では完全に使用できます。</target>
        </trans-unit>
        <trans-unit id="76d243e595fc804a0047898728bf95566f021ead" translate="yes" xml:space="preserve">
          <source>Removes a &lt;a href=&quot;../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt; from this &lt;code&gt;String&lt;/code&gt; at a byte position and returns it.</source>
          <target state="translated">削除&lt;a href=&quot;../primitive.char&quot;&gt; &lt;code&gt;char&lt;/code&gt; &lt;/a&gt;このから &lt;code&gt;String&lt;/code&gt; バイト位置と戻り、それをで。</target>
        </trans-unit>
        <trans-unit id="9456d200736a4f7f6ca19767cc9aff812ff0da14" translate="yes" xml:space="preserve">
          <source>Removes a directory at this path, after removing all its contents. Use carefully!</source>
          <target state="translated">このパスのディレクトリの内容をすべて削除した後、そのパスのディレクトリを削除します。慎重に使用してください。</target>
        </trans-unit>
        <trans-unit id="2154b6fbbe7ed8c872a44cd2732bd21137c2bc44" translate="yes" xml:space="preserve">
          <source>Removes a file from the filesystem.</source>
          <target state="translated">ファイルシステムからファイルを削除します。</target>
        </trans-unit>
        <trans-unit id="2984f4cefe5e002ae98ccf151f25dd21e13ffb2f" translate="yes" xml:space="preserve">
          <source>Removes a key from the map, returning the stored key and value if the key was previously in the map.</source>
          <target state="translated">マップからキーを削除し、そのキーが以前にマップ内にあった場合は、保存されたキーと値を返します。</target>
        </trans-unit>
        <trans-unit id="e41c6b48eb8ad991a4cdc318420fd5a447a63f47" translate="yes" xml:space="preserve">
          <source>Removes a key from the map, returning the value at the key if the key was previously in the map.</source>
          <target state="translated">マップからキーを削除し、そのキーが以前にマップ内にあった場合はそのキーの値を返します。</target>
        </trans-unit>
        <trans-unit id="4c82bc88204eaff51b3602f51dec10746fc2c81e" translate="yes" xml:space="preserve">
          <source>Removes a value from the set. Returns whether the value was present in the set.</source>
          <target state="translated">セットから値を削除します。値がセット内に存在していたかどうかを返します。</target>
        </trans-unit>
        <trans-unit id="dd85db4ad95c943099e81fc67055c01a8b810427" translate="yes" xml:space="preserve">
          <source>Removes all but the first of consecutive elements in the vector satisfying a given equality relation.</source>
          <target state="translated">与えられた等値関係を満たすベクトル内の連続した要素のうち,最初の要素を除くすべてを削除します.</target>
        </trans-unit>
        <trans-unit id="c92451da7b71dc64574b093dbf558b677e898c08" translate="yes" xml:space="preserve">
          <source>Removes all but the first of consecutive elements in the vector that resolve to the same key.</source>
          <target state="translated">ベクトル内の連続した要素のうち、同じキーに解決する最初の要素を除くすべてを削除します。</target>
        </trans-unit>
        <trans-unit id="29bd8affd62aa3348852563dbe7f80c50e8f4fe1" translate="yes" xml:space="preserve">
          <source>Removes all elements from the &lt;code&gt;LinkedList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinkedList&lt;/code&gt; からすべての要素を削除します。</target>
        </trans-unit>
        <trans-unit id="924d946ae082c27c4a8997a9765e09a279af0bb9" translate="yes" xml:space="preserve">
          <source>Removes an element from anywhere in the &lt;code&gt;VecDeque&lt;/code&gt; and returns it, replacing it with the first element.</source>
          <target state="translated">&lt;code&gt;VecDeque&lt;/code&gt; の任意の場所から要素を削除して返し、最初の要素に置き換えます。</target>
        </trans-unit>
        <trans-unit id="7c33bf062ed229322b7434f0b81151dc7650e774" translate="yes" xml:space="preserve">
          <source>Removes an element from anywhere in the &lt;code&gt;VecDeque&lt;/code&gt; and returns it, replacing it with the last element.</source>
          <target state="translated">&lt;code&gt;VecDeque&lt;/code&gt; の任意の場所から要素を削除して返し、最後の要素に置き換えます。</target>
        </trans-unit>
        <trans-unit id="7009610fbbefe679a0736ec00724024d2f765772" translate="yes" xml:space="preserve">
          <source>Removes an element from the vector and returns it.</source>
          <target state="translated">ベクトルから要素を削除し、それを返します。</target>
        </trans-unit>
        <trans-unit id="3a163fa6fd299406ab78104123ca7ee6e2d39fe9" translate="yes" xml:space="preserve">
          <source>Removes an empty directory.</source>
          <target state="translated">空のディレクトリを削除します。</target>
        </trans-unit>
        <trans-unit id="8a7f21c5d2bc51db50b4e29b6a2f8041ed8e6316" translate="yes" xml:space="preserve">
          <source>Removes an environment variable from the environment of the currently running process.</source>
          <target state="translated">現在実行中のプロセスの環境から環境変数を削除します。</target>
        </trans-unit>
        <trans-unit id="cdce8e247721f14eab2cd7c926aee57fdc3b514c" translate="yes" xml:space="preserve">
          <source>Removes an environment variable mapping.</source>
          <target state="translated">環境変数のマッピングを削除します。</target>
        </trans-unit>
        <trans-unit id="1d2396c70ced05a269886e4ccbe28568a0e6d957" translate="yes" xml:space="preserve">
          <source>Removes an existing, empty directory.</source>
          <target state="translated">既存の空のディレクトリを削除します。</target>
        </trans-unit>
        <trans-unit id="71eb8019778fc46b67791ae6ceb10e93926ae281" translate="yes" xml:space="preserve">
          <source>Removes and returns an element from the end of the iterator.</source>
          <target state="translated">イテレータの末尾から要素を削除して返します。</target>
        </trans-unit>
        <trans-unit id="77b67ecfb59bcd37366f8a88c136fc9a79d1f654" translate="yes" xml:space="preserve">
          <source>Removes and returns an element from the end of the iterator. &lt;a href=&quot;../../iter/trait.doubleendediterator#tymethod.next_back&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">イテレータの末尾から要素を削除して返します。&lt;a href=&quot;../../iter/trait.doubleendediterator#tymethod.next_back&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4a13ca048939a7a2f877472b124e4560b6fcb043" translate="yes" xml:space="preserve">
          <source>Removes and returns an element from the end of the iterator. &lt;a href=&quot;../iter/trait.doubleendediterator#tymethod.next_back&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">イテレータの末尾から要素を削除して返します。&lt;a href=&quot;../iter/trait.doubleendediterator#tymethod.next_back&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e9d5be9f4ab48e0f12a6e134e7067cba845f65a1" translate="yes" xml:space="preserve">
          <source>Removes and returns an element from the end of the iterator. &lt;a href=&quot;iter/trait.doubleendediterator#tymethod.next_back&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">イテレータの末尾から要素を削除して返します。&lt;a href=&quot;iter/trait.doubleendediterator#tymethod.next_back&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="de089e7620fbb6e0344251ebdd4d65c9d34d0aff" translate="yes" xml:space="preserve">
          <source>Removes and returns an element from the end of the iterator. &lt;a href=&quot;trait.doubleendediterator#tymethod.next_back&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">イテレータの末尾から要素を削除して返します。&lt;a href=&quot;trait.doubleendediterator#tymethod.next_back&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="71500db3d64f324a722389f95a28e059368fd7c7" translate="yes" xml:space="preserve">
          <source>Removes and returns the element at &lt;code&gt;index&lt;/code&gt; from the &lt;code&gt;VecDeque&lt;/code&gt;. Whichever end is closer to the removal point will be moved to make room, and all the affected elements will be moved to new positions. Returns &lt;code&gt;None&lt;/code&gt; if &lt;code&gt;index&lt;/code&gt; is out of bounds.</source>
          <target state="translated">&lt;code&gt;VecDeque&lt;/code&gt; から &lt;code&gt;index&lt;/code&gt; の要素を削除して返します。削除ポイントに近い方の端が移動してスペースが確保され、影響を受けるすべての要素が新しい位置に移動します。 &lt;code&gt;index&lt;/code&gt; が範囲外の場合は &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="100e22591d4e437fc8ee7d6fb044d9bfa79809cb" translate="yes" xml:space="preserve">
          <source>Removes and returns the element at position &lt;code&gt;index&lt;/code&gt; within the vector, shifting all elements after it to the left.</source>
          <target state="translated">ベクトル内の位置 &lt;code&gt;index&lt;/code&gt; の要素を削除して返し、それ以降のすべての要素を左にシフトします。</target>
        </trans-unit>
        <trans-unit id="833b18a99b3f5da56b1195d9612095e2681a1aaf" translate="yes" xml:space="preserve">
          <source>Removes and returns the first element in the map. The key of this element is the minimum key that was in the map.</source>
          <target state="translated">マップ内の最初の要素を削除して返します。この要素のキーは、マップ内にあった最小キーです。</target>
        </trans-unit>
        <trans-unit id="b03a1c3aa0a3b02602a4edc4be49e3fba232419e" translate="yes" xml:space="preserve">
          <source>Removes and returns the last element in the map. The key of this element is the maximum key that was in the map.</source>
          <target state="translated">マップ内の最後の要素を削除して返します。この要素のキーは、マップ内にあった最大のキーです。</target>
        </trans-unit>
        <trans-unit id="a94bbdaa214533c35e65684f515b588f53cd1d06" translate="yes" xml:space="preserve">
          <source>Removes and returns the value in the set, if any, that is equal to the given one.</source>
          <target state="translated">与えられた値と等しい値があれば、それを削除して返します。</target>
        </trans-unit>
        <trans-unit id="a509c18bcefdbfe5d042eb4ed2cd6333de0afb0c" translate="yes" xml:space="preserve">
          <source>Removes consecutive repeated elements in the vector according to the &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;&lt;code&gt;PartialEq&lt;/code&gt;&lt;/a&gt; trait implementation.</source>
          <target state="translated">&lt;a href=&quot;../cmp/trait.partialeq&quot;&gt; &lt;code&gt;PartialEq&lt;/code&gt; &lt;/a&gt;トレイトの実装に従って、ベクター内の連続する繰り返し要素を削除します。</target>
        </trans-unit>
        <trans-unit id="74f54f0b787203509ffc0804f7b8590b8115ba2d" translate="yes" xml:space="preserve">
          <source>Removes heap elements in heap order.</source>
          <target state="translated">ヒープ要素をヒープ順に削除します。</target>
        </trans-unit>
        <trans-unit id="3e72578b29295a43a01c102c62f8b197be9d6ae3" translate="yes" xml:space="preserve">
          <source>Removes the current element from the &lt;code&gt;LinkedList&lt;/code&gt; without deallocating the list node.</source>
          <target state="translated">リストノードの割り当てを解除せずに、 &lt;code&gt;LinkedList&lt;/code&gt; から現在の要素を削除します。</target>
        </trans-unit>
        <trans-unit id="02d123f2f5cce8286fd50b24a3f93ff9aecfd7ae" translate="yes" xml:space="preserve">
          <source>Removes the current element from the &lt;code&gt;LinkedList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinkedList&lt;/code&gt; から現在の要素を削除します。</target>
        </trans-unit>
        <trans-unit id="360f94ca0a9ce831eb2c61750d255e1e0f32b115" translate="yes" xml:space="preserve">
          <source>Removes the element at the given index and returns it.</source>
          <target state="translated">指定されたインデックスの要素を削除し、それを返します。</target>
        </trans-unit>
        <trans-unit id="759524eef145af4e8c457b801f61c3b975e964d7" translate="yes" xml:space="preserve">
          <source>Removes the first element and returns it, or &lt;code&gt;None&lt;/code&gt; if the &lt;code&gt;VecDeque&lt;/code&gt; is empty.</source>
          <target state="translated">最初の要素を削除して返します &lt;code&gt;VecDeque&lt;/code&gt; が空の場合は &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f8547c3304ee1ee9135cfaae338e0b933d30d25b" translate="yes" xml:space="preserve">
          <source>Removes the first element and returns it, or &lt;code&gt;None&lt;/code&gt; if the list is empty.</source>
          <target state="translated">最初の要素を削除して返します。リストが空の場合は &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="4f66c84ba41049d112ec0e9e7f04c73243a8927c" translate="yes" xml:space="preserve">
          <source>Removes the first instance of &lt;code&gt;item&lt;/code&gt; from the vector if the item exists.</source>
          <target state="translated">アイテムが存在する場合、ベクターから &lt;code&gt;item&lt;/code&gt; の最初のインスタンスを削除します。</target>
        </trans-unit>
        <trans-unit id="a772d4b0016729a6e97d9637561449535c0c7e4d" translate="yes" xml:space="preserve">
          <source>Removes the first value from the set and returns it, if any. The first value is always the minimum value in the set.</source>
          <target state="translated">セットから最初の値を削除し、あればそれを返します。最初の値は常にセット内の最小値です。</target>
        </trans-unit>
        <trans-unit id="dcc797aab7f9c03f033b7b60de44f069d1d0542e" translate="yes" xml:space="preserve">
          <source>Removes the greatest item from the binary heap and returns it, or &lt;code&gt;None&lt;/code&gt; if it is empty.</source>
          <target state="translated">バイナリヒープから最大の項目を削除して返します。空の場合は &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="ebad829527c3b2fffe7ccc9999e9929b5778b412" translate="yes" xml:space="preserve">
          <source>Removes the last character from the string buffer and returns it.</source>
          <target state="translated">文字列バッファから最後の文字を削除して返します。</target>
        </trans-unit>
        <trans-unit id="232c1cec812af167930182dcac299ed58f945e5d" translate="yes" xml:space="preserve">
          <source>Removes the last element from a list and returns it, or &lt;code&gt;None&lt;/code&gt; if it is empty.</source>
          <target state="translated">リストから最後の要素を削除して返します。空の場合は &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="a0df9d6fba0ee5b927e72dbb72348355f3b04bed" translate="yes" xml:space="preserve">
          <source>Removes the last element from a vector and returns it, or &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if it is empty.</source>
          <target state="translated">ベクトルから最後の要素を削除して返します。空の場合は&lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="e8d3e78f3721af9c347fdff07fd16bbc2878282f" translate="yes" xml:space="preserve">
          <source>Removes the last element from the &lt;code&gt;VecDeque&lt;/code&gt; and returns it, or &lt;code&gt;None&lt;/code&gt; if it is empty.</source>
          <target state="translated">&lt;code&gt;VecDeque&lt;/code&gt; から最後の要素を削除して返します。空の場合は &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="7386c9f87058654cdac7dfef9daebffd4916d954" translate="yes" xml:space="preserve">
          <source>Removes the last value from the set and returns it, if any. The last value is always the maximum value in the set.</source>
          <target state="translated">最後の値をセットから削除し、もしあればそれを返します。最後の値は常にセット内の最大値となります。</target>
        </trans-unit>
        <trans-unit id="dfcb06c2f7349ce0a755b4717101ec544c0cf8b7" translate="yes" xml:space="preserve">
          <source>Removes the pattern from the back of haystack, if it matches.</source>
          <target state="translated">一致していれば、ハヤブサの裏の模様を削除します。</target>
        </trans-unit>
        <trans-unit id="7667101efc6816d0de1ca6d3af351cb2eebc650d" translate="yes" xml:space="preserve">
          <source>Removes the pattern from the front of haystack, if it matches.</source>
          <target state="translated">一致している場合は、ハヤブサの前面のパターンを削除します。</target>
        </trans-unit>
        <trans-unit id="0d9e44c3bf98e4e76a2cb77dcc13026cd973c51e" translate="yes" xml:space="preserve">
          <source>Removes the peeked value from the heap and returns it.</source>
          <target state="translated">ヒープから覗いた値を削除し、それを返します。</target>
        </trans-unit>
        <trans-unit id="12ba56a3f06ad562090612b407ec9aea1c9c1064" translate="yes" xml:space="preserve">
          <source>Removes the specified range in the string, and replaces it with the given string. The given string doesn't need to be the same length as the range.</source>
          <target state="translated">文字列から指定した範囲を削除し、指定した文字列に置き換えます。与えられた文字列は、範囲と同じ長さである必要はありません。</target>
        </trans-unit>
        <trans-unit id="53988dbb88ae741fb5da8e28db7052aea7a1bcd0" translate="yes" xml:space="preserve">
          <source>Removing Duplication by Extracting a Function</source>
          <target state="translated">関数を抽出して重複を削除する</target>
        </trans-unit>
        <trans-unit id="1765da4d496a324939dc55a696d30b073522395f" translate="yes" xml:space="preserve">
          <source>Removing Versions from Crates.io with &lt;code id=&quot;removing-versions-from-cratesio-with-cargo-yank&quot;&gt;cargo yank&lt;/code&gt;</source>
          <target state="translated">カーゴヤンクを使用してCrates.ioからバージョンを &lt;code id=&quot;removing-versions-from-cratesio-with-cargo-yank&quot;&gt;cargo yank&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7181d40adc4d3873d3d26192d262bbc488cee41b" translate="yes" xml:space="preserve">
          <source>Removing a &lt;code id=&quot;removing-a-clone-using-an-iterator&quot;&gt;clone&lt;/code&gt; Using an Iterator</source>
          <target state="translated">イテレーターを使用した &lt;code id=&quot;removing-a-clone-using-an-iterator&quot;&gt;clone&lt;/code&gt; 削除</target>
        </trans-unit>
        <trans-unit id="071f147948daa0a6f1bf1cc601d28474d31625d5" translate="yes" xml:space="preserve">
          <source>Rename a file or directory to a new name, replacing the original file if &lt;code&gt;to&lt;/code&gt; already exists.</source>
          <target state="translated">ファイルまたはディレクトリの名前を新しい名前に変更し、元のファイル &lt;code&gt;to&lt;/code&gt; 既に存在する場合は置き換えます。</target>
        </trans-unit>
        <trans-unit id="0b8f5087b0ba495cc2a475e380d94e248b897f94" translate="yes" xml:space="preserve">
          <source>Reopen the &lt;em&gt;src/main.rs&lt;/em&gt; file. You&amp;rsquo;ll be writing all the code in this file.</source>
          <target state="translated">&lt;em&gt;src / main.rs&lt;/em&gt;ファイルを再度&lt;em&gt;開き&lt;/em&gt;ます。このファイルにすべてのコードを記述します。</target>
        </trans-unit>
        <trans-unit id="801b0debd2aee9e57fd1fedfd04bdd3e07dbc19c" translate="yes" xml:space="preserve">
          <source>Reorder the slice such that the element at &lt;code&gt;index&lt;/code&gt; is at its final sorted position.</source>
          <target state="translated">&lt;code&gt;index&lt;/code&gt; の要素が最終的なソート位置になるようにスライスを並べ替えます。</target>
        </trans-unit>
        <trans-unit id="70cb0023bd56c79ef851ab41e2fe574a3668483c" translate="yes" xml:space="preserve">
          <source>Reorder the slice with a comparator function such that the element at &lt;code&gt;index&lt;/code&gt; is at its final sorted position.</source>
          <target state="translated">&lt;code&gt;index&lt;/code&gt; の要素が最終的なソート位置になるように、コンパレーター関数を使用してスライスを並べ替えます。</target>
        </trans-unit>
        <trans-unit id="7873ca017e1ddd82af0471bd3874f42b0ac11a5d" translate="yes" xml:space="preserve">
          <source>Reorder the slice with a key extraction function such that the element at &lt;code&gt;index&lt;/code&gt; is at its final sorted position.</source>
          <target state="translated">&lt;code&gt;index&lt;/code&gt; の要素が最終的なソート位置になるように、キー抽出関数を使用してスライスを並べ替えます。</target>
        </trans-unit>
        <trans-unit id="cd86716f02c41b985329c243cfb7adf5749a5de0" translate="yes" xml:space="preserve">
          <source>Reorders the elements of this iterator &lt;em&gt;in-place&lt;/em&gt; according to the given predicate, such that all those that return &lt;code&gt;true&lt;/code&gt; precede all those that return &lt;code&gt;false&lt;/code&gt;. Returns the number of &lt;code&gt;true&lt;/code&gt; elements found.</source>
          <target state="translated">このイテレータの要素を、指定された述語に従って&lt;em&gt;インプレース&lt;/em&gt;で並べ&lt;em&gt;替え&lt;/em&gt;て、 &lt;code&gt;true&lt;/code&gt; を返すすべての要素が &lt;code&gt;false&lt;/code&gt; を返すすべての要素に先行するようにします。見つかった &lt;code&gt;true&lt;/code&gt; 要素の数を返します。</target>
        </trans-unit>
        <trans-unit id="c4f536652380bba3ee4a847db40c20fceae9f960" translate="yes" xml:space="preserve">
          <source>Reorders the elements of this iterator &lt;em&gt;in-place&lt;/em&gt; according to the given predicate, such that all those that return &lt;code&gt;true&lt;/code&gt; precede all those that return &lt;code&gt;false&lt;/code&gt;. Returns the number of &lt;code&gt;true&lt;/code&gt; elements found. &lt;a href=&quot;../../../iter/trait.iterator#method.partition_in_place&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">このイテレータの要素を、指定された述語に従って&lt;em&gt;インプレース&lt;/em&gt;で並べ&lt;em&gt;替え&lt;/em&gt;て、 &lt;code&gt;true&lt;/code&gt; を返すすべての要素が &lt;code&gt;false&lt;/code&gt; を返すすべての要素に先行するようにします。見つかった &lt;code&gt;true&lt;/code&gt; 要素の数を返します。&lt;a href=&quot;../../../iter/trait.iterator#method.partition_in_place&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a4a8a0eb11e0a273024f57492238a3917f06ece8" translate="yes" xml:space="preserve">
          <source>Reorders the elements of this iterator &lt;em&gt;in-place&lt;/em&gt; according to the given predicate, such that all those that return &lt;code&gt;true&lt;/code&gt; precede all those that return &lt;code&gt;false&lt;/code&gt;. Returns the number of &lt;code&gt;true&lt;/code&gt; elements found. &lt;a href=&quot;../../iter/trait.iterator#method.partition_in_place&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">このイテレータの要素を、指定された述語に従って&lt;em&gt;インプレース&lt;/em&gt;で並べ&lt;em&gt;替え&lt;/em&gt;て、 &lt;code&gt;true&lt;/code&gt; を返すすべての要素が &lt;code&gt;false&lt;/code&gt; を返すすべての要素に先行するようにします。見つかった &lt;code&gt;true&lt;/code&gt; 要素の数を返します。&lt;a href=&quot;../../iter/trait.iterator#method.partition_in_place&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="22dbcf3393abe0939fcb9bf994de959d6b1b5113" translate="yes" xml:space="preserve">
          <source>Reorders the elements of this iterator &lt;em&gt;in-place&lt;/em&gt; according to the given predicate, such that all those that return &lt;code&gt;true&lt;/code&gt; precede all those that return &lt;code&gt;false&lt;/code&gt;. Returns the number of &lt;code&gt;true&lt;/code&gt; elements found. &lt;a href=&quot;../iter/trait.iterator#method.partition_in_place&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">このイテレータの要素を、指定された述語に従って&lt;em&gt;インプレース&lt;/em&gt;で並べ&lt;em&gt;替え&lt;/em&gt;て、 &lt;code&gt;true&lt;/code&gt; を返すすべての要素が &lt;code&gt;false&lt;/code&gt; を返すすべての要素に先行するようにします。見つかった &lt;code&gt;true&lt;/code&gt; 要素の数を返します。&lt;a href=&quot;../iter/trait.iterator#method.partition_in_place&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fc3b4d7ff39e618b84b8b617ea8e4e264ee1b207" translate="yes" xml:space="preserve">
          <source>Reorders the elements of this iterator &lt;em&gt;in-place&lt;/em&gt; according to the given predicate, such that all those that return &lt;code&gt;true&lt;/code&gt; precede all those that return &lt;code&gt;false&lt;/code&gt;. Returns the number of &lt;code&gt;true&lt;/code&gt; elements found. &lt;a href=&quot;iter/trait.iterator#method.partition_in_place&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">このイテレータの要素を、指定された述語に従って&lt;em&gt;インプレース&lt;/em&gt;で並べ&lt;em&gt;替え&lt;/em&gt;て、 &lt;code&gt;true&lt;/code&gt; を返すすべての要素が &lt;code&gt;false&lt;/code&gt; を返すすべての要素に先行するようにします。見つかった &lt;code&gt;true&lt;/code&gt; 要素の数を返します。&lt;a href=&quot;iter/trait.iterator#method.partition_in_place&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f1f78ba3c08ec9dea393cd7e246429007ffb1afd" translate="yes" xml:space="preserve">
          <source>Reorders the elements of this iterator &lt;em&gt;in-place&lt;/em&gt; according to the given predicate, such that all those that return &lt;code&gt;true&lt;/code&gt; precede all those that return &lt;code&gt;false&lt;/code&gt;. Returns the number of &lt;code&gt;true&lt;/code&gt; elements found. &lt;a href=&quot;trait.iterator#method.partition_in_place&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">このイテレータの要素を、指定された述語に従って&lt;em&gt;インプレース&lt;/em&gt;で並べ&lt;em&gt;替え&lt;/em&gt;て、 &lt;code&gt;true&lt;/code&gt; を返すすべての要素が &lt;code&gt;false&lt;/code&gt; を返すすべての要素に先行するようにします。見つかった &lt;code&gt;true&lt;/code&gt; 要素の数を返します。&lt;a href=&quot;trait.iterator#method.partition_in_place&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="659eba121958f4a29fab3d29d61cedc55a892334" translate="yes" xml:space="preserve">
          <source>Repeat</source>
          <target state="translated">Repeat</target>
        </trans-unit>
        <trans-unit id="a4f5907c5550327c3cdeaac7ee5776c5138b1562" translate="yes" xml:space="preserve">
          <source>Repeat expression length expressions</source>
          <target state="translated">繰り返し式の長さの式</target>
        </trans-unit>
        <trans-unit id="dff87520d474c556b47fb80aca375065bb27cd92" translate="yes" xml:space="preserve">
          <source>Repeat from step 1!</source>
          <target state="translated">手順1から繰り返します!</target>
        </trans-unit>
        <trans-unit id="e0d66d1c52d66eef81dbc39645b2ac00a35447ed" translate="yes" xml:space="preserve">
          <source>Repeat::all</source>
          <target state="translated">Repeat::all</target>
        </trans-unit>
        <trans-unit id="1795a3953eea0fba31f8f4214b24babdb806fe8c" translate="yes" xml:space="preserve">
          <source>Repeat::any</source>
          <target state="translated">Repeat::any</target>
        </trans-unit>
        <trans-unit id="a6ab4b00a3fea3f37fff154303fc34fe53f7bcdd" translate="yes" xml:space="preserve">
          <source>Repeat::borrow</source>
          <target state="translated">Repeat::borrow</target>
        </trans-unit>
        <trans-unit id="1085c24cdeb9930ba28b2f630c34482c5d2fe6c2" translate="yes" xml:space="preserve">
          <source>Repeat::borrow_mut</source>
          <target state="translated">Repeat::borrow_mut</target>
        </trans-unit>
        <trans-unit id="4d1f55cc2e53ca7b40a28027db2e41ff338052b6" translate="yes" xml:space="preserve">
          <source>Repeat::by_ref</source>
          <target state="translated">Repeat::by_ref</target>
        </trans-unit>
        <trans-unit id="7356c92a81793a39c68b74c9c392dac799be6339" translate="yes" xml:space="preserve">
          <source>Repeat::bytes</source>
          <target state="translated">Repeat::bytes</target>
        </trans-unit>
        <trans-unit id="78e936edb90699f6000acd23db74f6b3e4ae93a9" translate="yes" xml:space="preserve">
          <source>Repeat::chain</source>
          <target state="translated">Repeat::chain</target>
        </trans-unit>
        <trans-unit id="d232d7d4a019dfde3b319a73d43a70176e3fe07b" translate="yes" xml:space="preserve">
          <source>Repeat::clone</source>
          <target state="translated">Repeat::clone</target>
        </trans-unit>
        <trans-unit id="501c99968024c5ec0f08be5a207b6694e058fcd1" translate="yes" xml:space="preserve">
          <source>Repeat::clone_from</source>
          <target state="translated">Repeat::clone_from</target>
        </trans-unit>
        <trans-unit id="bea4b596fabe6b7eec17488f855bc0652153f05c" translate="yes" xml:space="preserve">
          <source>Repeat::clone_into</source>
          <target state="translated">Repeat::clone_into</target>
        </trans-unit>
        <trans-unit id="976890d932f6d91858d3a8e36246073d6149ee91" translate="yes" xml:space="preserve">
          <source>Repeat::cloned</source>
          <target state="translated">Repeat::cloned</target>
        </trans-unit>
        <trans-unit id="8a7ff43d508e423ab8520c4fb8c974b52a1e9f2e" translate="yes" xml:space="preserve">
          <source>Repeat::cmp</source>
          <target state="translated">Repeat::cmp</target>
        </trans-unit>
        <trans-unit id="87a92ed337d35ebbe60a15ec1c6f7e731ea77fd7" translate="yes" xml:space="preserve">
          <source>Repeat::collect</source>
          <target state="translated">Repeat::collect</target>
        </trans-unit>
        <trans-unit id="304b784c8ab8b2046561752c22147a8608692f11" translate="yes" xml:space="preserve">
          <source>Repeat::copied</source>
          <target state="translated">Repeat::copied</target>
        </trans-unit>
        <trans-unit id="944b662bda89be92dc7df07783c6aa389b1a6f24" translate="yes" xml:space="preserve">
          <source>Repeat::count</source>
          <target state="translated">Repeat::count</target>
        </trans-unit>
        <trans-unit id="52865fc3550edc9fa5f08446cb96d9c1ee96f1b4" translate="yes" xml:space="preserve">
          <source>Repeat::cycle</source>
          <target state="translated">Repeat::cycle</target>
        </trans-unit>
        <trans-unit id="0d1303bed98ad0cd704f11be3e582b6ee3f196f9" translate="yes" xml:space="preserve">
          <source>Repeat::enumerate</source>
          <target state="translated">Repeat::enumerate</target>
        </trans-unit>
        <trans-unit id="2cfd7b0c065c0d1f713dbed67fff3cd5c474c960" translate="yes" xml:space="preserve">
          <source>Repeat::eq</source>
          <target state="translated">Repeat::eq</target>
        </trans-unit>
        <trans-unit id="c7613232111618219df77b9aeed133293920c584" translate="yes" xml:space="preserve">
          <source>Repeat::filter</source>
          <target state="translated">Repeat::filter</target>
        </trans-unit>
        <trans-unit id="02dd6b3fd65fccd87d871d40e77ef5284486b3a4" translate="yes" xml:space="preserve">
          <source>Repeat::filter_map</source>
          <target state="translated">Repeat::filter_map</target>
        </trans-unit>
        <trans-unit id="a5131a20e5b38ca750cf329d5ba901000f83fb2b" translate="yes" xml:space="preserve">
          <source>Repeat::find</source>
          <target state="translated">Repeat::find</target>
        </trans-unit>
        <trans-unit id="77a0ea525389a0e79ea3175a3a6526922fec53a2" translate="yes" xml:space="preserve">
          <source>Repeat::find_map</source>
          <target state="translated">Repeat::find_map</target>
        </trans-unit>
        <trans-unit id="5e907afc79ac8ca891f26bfcf09188ea288e2b7e" translate="yes" xml:space="preserve">
          <source>Repeat::flat_map</source>
          <target state="translated">Repeat::flat_map</target>
        </trans-unit>
        <trans-unit id="6cb292e16756d4f851ff575ea6e9e5305d793855" translate="yes" xml:space="preserve">
          <source>Repeat::flatten</source>
          <target state="translated">Repeat::flatten</target>
        </trans-unit>
        <trans-unit id="dc1018c7f7b6eb9d47ea1a790f07fb0f398a75ce" translate="yes" xml:space="preserve">
          <source>Repeat::fmt</source>
          <target state="translated">Repeat::fmt</target>
        </trans-unit>
        <trans-unit id="7577ecaf5a5ac958a322b2c84849a1280f6bd72f" translate="yes" xml:space="preserve">
          <source>Repeat::fold</source>
          <target state="translated">Repeat::fold</target>
        </trans-unit>
        <trans-unit id="4a2c8bb20dc9a0442f08af58d57f8f4ab984169d" translate="yes" xml:space="preserve">
          <source>Repeat::for_each</source>
          <target state="translated">Repeat::for_each</target>
        </trans-unit>
        <trans-unit id="e70e9c08f992e9f3dcedba5d957e75c0482f325c" translate="yes" xml:space="preserve">
          <source>Repeat::from</source>
          <target state="translated">Repeat::from</target>
        </trans-unit>
        <trans-unit id="c5a7fe989cf8c0ca84b35067ec828fa305b28edf" translate="yes" xml:space="preserve">
          <source>Repeat::fuse</source>
          <target state="translated">Repeat::fuse</target>
        </trans-unit>
        <trans-unit id="ca7872bf1702a9dcec7f1a9605b5d6e7b373e425" translate="yes" xml:space="preserve">
          <source>Repeat::ge</source>
          <target state="translated">Repeat::ge</target>
        </trans-unit>
        <trans-unit id="eaff2a9572c9b234968c3c9128bd455fdb88c5bf" translate="yes" xml:space="preserve">
          <source>Repeat::gt</source>
          <target state="translated">Repeat::gt</target>
        </trans-unit>
        <trans-unit id="09a8379d89260feccaefce5a88a67ed62d1dbf86" translate="yes" xml:space="preserve">
          <source>Repeat::initializer</source>
          <target state="translated">Repeat::initializer</target>
        </trans-unit>
        <trans-unit id="06d0599a91630abedd900e1b906dd00656058106" translate="yes" xml:space="preserve">
          <source>Repeat::inspect</source>
          <target state="translated">Repeat::inspect</target>
        </trans-unit>
        <trans-unit id="3d3e23264cbd24c9f606038f5084259316640936" translate="yes" xml:space="preserve">
          <source>Repeat::into</source>
          <target state="translated">Repeat::into</target>
        </trans-unit>
        <trans-unit id="7cce40a7234294a1e9c88fdc1e6d948c7def6dc1" translate="yes" xml:space="preserve">
          <source>Repeat::into_iter</source>
          <target state="translated">Repeat::into_iter</target>
        </trans-unit>
        <trans-unit id="d28af1780c5066ffa01c2936a21766da78d9c03b" translate="yes" xml:space="preserve">
          <source>Repeat::is_sorted</source>
          <target state="translated">Repeat::is_sorted</target>
        </trans-unit>
        <trans-unit id="708a77debdf9e6b5919dec0a9fedbe960f1f0ef0" translate="yes" xml:space="preserve">
          <source>Repeat::is_sorted_by</source>
          <target state="translated">Repeat::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="2af7a1890d5cf56e2c08682ca7f5b24d8654316e" translate="yes" xml:space="preserve">
          <source>Repeat::is_sorted_by_key</source>
          <target state="translated">Repeat::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="4b007a7af4f10c677b9075e8b0152a21384f50b8" translate="yes" xml:space="preserve">
          <source>Repeat::last</source>
          <target state="translated">Repeat::last</target>
        </trans-unit>
        <trans-unit id="b782de3c85f879cffd622b7cf289ddc8889668b5" translate="yes" xml:space="preserve">
          <source>Repeat::le</source>
          <target state="translated">Repeat::le</target>
        </trans-unit>
        <trans-unit id="8f33ef80e6806e50957d70b0e3962fabb9b3ad87" translate="yes" xml:space="preserve">
          <source>Repeat::lt</source>
          <target state="translated">Repeat::lt</target>
        </trans-unit>
        <trans-unit id="7f92778504bb908a8c13f99a1b920608141d09b3" translate="yes" xml:space="preserve">
          <source>Repeat::map</source>
          <target state="translated">Repeat::map</target>
        </trans-unit>
        <trans-unit id="8e7fb2c9110f164ac77a63d0c6ec02654cf08084" translate="yes" xml:space="preserve">
          <source>Repeat::max</source>
          <target state="translated">Repeat::max</target>
        </trans-unit>
        <trans-unit id="97e5950c569c8bf62518b44abe049fc2782d9769" translate="yes" xml:space="preserve">
          <source>Repeat::max_by</source>
          <target state="translated">Repeat::max_by</target>
        </trans-unit>
        <trans-unit id="738957e98e94eaddcb3b342e5517d3836deeadd1" translate="yes" xml:space="preserve">
          <source>Repeat::max_by_key</source>
          <target state="translated">Repeat::max_by_key</target>
        </trans-unit>
        <trans-unit id="ee2e3aee316004eef3a63f588417605bf673ff44" translate="yes" xml:space="preserve">
          <source>Repeat::min</source>
          <target state="translated">Repeat::min</target>
        </trans-unit>
        <trans-unit id="7fcdf83a1b59143ac3706b6e576e2aba6200bc07" translate="yes" xml:space="preserve">
          <source>Repeat::min_by</source>
          <target state="translated">Repeat::min_by</target>
        </trans-unit>
        <trans-unit id="87da781976dc00fc00c2be17ce492dc31b267413" translate="yes" xml:space="preserve">
          <source>Repeat::min_by_key</source>
          <target state="translated">Repeat::min_by_key</target>
        </trans-unit>
        <trans-unit id="f0aa9dbd60f2246240478fe19feb38bc15183ca8" translate="yes" xml:space="preserve">
          <source>Repeat::ne</source>
          <target state="translated">Repeat::ne</target>
        </trans-unit>
        <trans-unit id="f93ad12d429ba311f21acca6b3f0a12dc7376bd2" translate="yes" xml:space="preserve">
          <source>Repeat::next</source>
          <target state="translated">Repeat::next</target>
        </trans-unit>
        <trans-unit id="ed8ddb98c9efbe676108fcdfe5a58fb2496f4939" translate="yes" xml:space="preserve">
          <source>Repeat::next_back</source>
          <target state="translated">Repeat::next_back</target>
        </trans-unit>
        <trans-unit id="e0e41927a6b04a56824e9a8267fbbda38dc7bddf" translate="yes" xml:space="preserve">
          <source>Repeat::nth</source>
          <target state="translated">Repeat::nth</target>
        </trans-unit>
        <trans-unit id="47b7b07ff84d341436584b0a26d451f7d862451e" translate="yes" xml:space="preserve">
          <source>Repeat::nth_back</source>
          <target state="translated">Repeat::nth_back</target>
        </trans-unit>
        <trans-unit id="4661bcb36a9fc82b38cf048c7617d0a85bf8b02a" translate="yes" xml:space="preserve">
          <source>Repeat::partial_cmp</source>
          <target state="translated">Repeat::partial_cmp</target>
        </trans-unit>
        <trans-unit id="272efa6abe606bc5e26302fb147ba4e023a1932d" translate="yes" xml:space="preserve">
          <source>Repeat::partition</source>
          <target state="translated">Repeat::partition</target>
        </trans-unit>
        <trans-unit id="869319645bdc02e4eebe0c2be6d69ef37fe7d658" translate="yes" xml:space="preserve">
          <source>Repeat::peekable</source>
          <target state="translated">Repeat::peekable</target>
        </trans-unit>
        <trans-unit id="b80c25533fc389d0e27d0e7950299f0cf8b15e3d" translate="yes" xml:space="preserve">
          <source>Repeat::position</source>
          <target state="translated">Repeat::position</target>
        </trans-unit>
        <trans-unit id="a0766f43a6d61a592770c76e0465b7c862f313e5" translate="yes" xml:space="preserve">
          <source>Repeat::product</source>
          <target state="translated">Repeat::product</target>
        </trans-unit>
        <trans-unit id="b443be1cafeef3054d3c2f7162064b37fadf2590" translate="yes" xml:space="preserve">
          <source>Repeat::read</source>
          <target state="translated">Repeat::read</target>
        </trans-unit>
        <trans-unit id="46ee00f60c547f46559f9cff0c5d12900d0c9a90" translate="yes" xml:space="preserve">
          <source>Repeat::read_exact</source>
          <target state="translated">Repeat::read_exact</target>
        </trans-unit>
        <trans-unit id="3d3cc015f35e5f0f742cb21bf42710ab91be8ae1" translate="yes" xml:space="preserve">
          <source>Repeat::read_to_end</source>
          <target state="translated">Repeat::read_to_end</target>
        </trans-unit>
        <trans-unit id="8cb5bec7ce6a03412a5e6573762ecba332a5dc8c" translate="yes" xml:space="preserve">
          <source>Repeat::read_to_string</source>
          <target state="translated">Repeat::read_to_string</target>
        </trans-unit>
        <trans-unit id="05bb722560ff5f40b875a9b390a1c2130a3bf57c" translate="yes" xml:space="preserve">
          <source>Repeat::read_vectored</source>
          <target state="translated">Repeat::read_vectored</target>
        </trans-unit>
        <trans-unit id="e9fdfa78aac5211609a6a87081a21ce79a1aa2a7" translate="yes" xml:space="preserve">
          <source>Repeat::rev</source>
          <target state="translated">Repeat::rev</target>
        </trans-unit>
        <trans-unit id="cb110c4a90e6a9b1c8d23a0b1d6864278cb107fa" translate="yes" xml:space="preserve">
          <source>Repeat::rfind</source>
          <target state="translated">Repeat::rfind</target>
        </trans-unit>
        <trans-unit id="4283216b269b2b9085f32fc7b5fa384a98e25f03" translate="yes" xml:space="preserve">
          <source>Repeat::rfold</source>
          <target state="translated">Repeat::rfold</target>
        </trans-unit>
        <trans-unit id="fe12565d71577b197d1fea4140ed056f17fe1a34" translate="yes" xml:space="preserve">
          <source>Repeat::rposition</source>
          <target state="translated">Repeat::rposition</target>
        </trans-unit>
        <trans-unit id="89c1794c53f88860bca114eb6c95b62cdfd3a2db" translate="yes" xml:space="preserve">
          <source>Repeat::scan</source>
          <target state="translated">Repeat::scan</target>
        </trans-unit>
        <trans-unit id="68df876039bb1b57875981292bde5e5ec0e0d5e6" translate="yes" xml:space="preserve">
          <source>Repeat::size_hint</source>
          <target state="translated">Repeat::size_hint</target>
        </trans-unit>
        <trans-unit id="b39d77ae825f6caf01b5a0c1043bbcc77b9473a5" translate="yes" xml:space="preserve">
          <source>Repeat::skip</source>
          <target state="translated">Repeat::skip</target>
        </trans-unit>
        <trans-unit id="aa894d4c6602d608451da5514e1e3c2f04154a60" translate="yes" xml:space="preserve">
          <source>Repeat::skip_while</source>
          <target state="translated">Repeat::skip_while</target>
        </trans-unit>
        <trans-unit id="0961fe7de786108d69dc3e6b33480cadfdb93d7c" translate="yes" xml:space="preserve">
          <source>Repeat::step_by</source>
          <target state="translated">Repeat::step_by</target>
        </trans-unit>
        <trans-unit id="c03c70e9a5038a683dcffecaa4b5b648423f49f6" translate="yes" xml:space="preserve">
          <source>Repeat::sum</source>
          <target state="translated">Repeat::sum</target>
        </trans-unit>
        <trans-unit id="c7f8012f7adfa96a5d523ff1feede3939cf93f7c" translate="yes" xml:space="preserve">
          <source>Repeat::take</source>
          <target state="translated">Repeat::take</target>
        </trans-unit>
        <trans-unit id="fe5576d039002b0fe61b6298722965b5d0f6c582" translate="yes" xml:space="preserve">
          <source>Repeat::take_while</source>
          <target state="translated">Repeat::take_while</target>
        </trans-unit>
        <trans-unit id="e41a1da491a3b456235a2ea7c65cf69e45b464ac" translate="yes" xml:space="preserve">
          <source>Repeat::to_owned</source>
          <target state="translated">Repeat::to_owned</target>
        </trans-unit>
        <trans-unit id="7084d041a0c466af37268ada6a1fc217af752207" translate="yes" xml:space="preserve">
          <source>Repeat::try_fold</source>
          <target state="translated">Repeat::try_fold</target>
        </trans-unit>
        <trans-unit id="7af8b8e4da0e86bb7da920c322f22a846da6dca2" translate="yes" xml:space="preserve">
          <source>Repeat::try_for_each</source>
          <target state="translated">Repeat::try_for_each</target>
        </trans-unit>
        <trans-unit id="d8d742d179ad253262c70375cc00d8b578b78f97" translate="yes" xml:space="preserve">
          <source>Repeat::try_from</source>
          <target state="translated">Repeat::try_from</target>
        </trans-unit>
        <trans-unit id="da895b6400f251377869dc72dd90095fa8909727" translate="yes" xml:space="preserve">
          <source>Repeat::try_into</source>
          <target state="translated">Repeat::try_into</target>
        </trans-unit>
        <trans-unit id="431b541f7db73969c16619c3bb06ffe23f1e1237" translate="yes" xml:space="preserve">
          <source>Repeat::try_rfold</source>
          <target state="translated">Repeat::try_rfold</target>
        </trans-unit>
        <trans-unit id="8629d55372e3f80fe959515d7fe3ca7d87031b5e" translate="yes" xml:space="preserve">
          <source>Repeat::type_id</source>
          <target state="translated">Repeat::type_id</target>
        </trans-unit>
        <trans-unit id="5c782e9d1e768f2b7461e16f2ebbe2c7c38f4d91" translate="yes" xml:space="preserve">
          <source>Repeat::unzip</source>
          <target state="translated">Repeat::unzip</target>
        </trans-unit>
        <trans-unit id="f0a5141078b040a5b3f32d731aab6d08aad8bd88" translate="yes" xml:space="preserve">
          <source>Repeat::zip</source>
          <target state="translated">Repeat::zip</target>
        </trans-unit>
        <trans-unit id="1b68e75e971ad7cbdf50aac3e944685f297cde4d" translate="yes" xml:space="preserve">
          <source>RepeatWith</source>
          <target state="translated">RepeatWith</target>
        </trans-unit>
        <trans-unit id="ca388ef2d5eb3c3649182a283ac90ea5826d225b" translate="yes" xml:space="preserve">
          <source>RepeatWith::all</source>
          <target state="translated">RepeatWith::all</target>
        </trans-unit>
        <trans-unit id="b83f7e653553364ae9d05dd8ec8dcaf11803c98f" translate="yes" xml:space="preserve">
          <source>RepeatWith::any</source>
          <target state="translated">RepeatWith::any</target>
        </trans-unit>
        <trans-unit id="9c8f5135ae6031806ff176d087ca48cf66072c24" translate="yes" xml:space="preserve">
          <source>RepeatWith::borrow</source>
          <target state="translated">RepeatWith::borrow</target>
        </trans-unit>
        <trans-unit id="1ca1d840e90e15ae9e2e351513714cc1e3618132" translate="yes" xml:space="preserve">
          <source>RepeatWith::borrow_mut</source>
          <target state="translated">RepeatWith::borrow_mut</target>
        </trans-unit>
        <trans-unit id="88ff520a4498aee08bee9c3974b3604eabec52a0" translate="yes" xml:space="preserve">
          <source>RepeatWith::by_ref</source>
          <target state="translated">RepeatWith::by_ref</target>
        </trans-unit>
        <trans-unit id="d91e0160f4fe8f6b26ffe1a1f64c3f784eaeae65" translate="yes" xml:space="preserve">
          <source>RepeatWith::chain</source>
          <target state="translated">RepeatWith::chain</target>
        </trans-unit>
        <trans-unit id="bd23c493f5e9e3a20ef63fd1f2c872586ecdc373" translate="yes" xml:space="preserve">
          <source>RepeatWith::clone</source>
          <target state="translated">RepeatWith::clone</target>
        </trans-unit>
        <trans-unit id="23589ac2771a2f8579e7e88d830e436f0f7181c2" translate="yes" xml:space="preserve">
          <source>RepeatWith::clone_from</source>
          <target state="translated">RepeatWith::clone_from</target>
        </trans-unit>
        <trans-unit id="e8edcc3deabb2f738adb7dd12af2d9c2a59fd7a5" translate="yes" xml:space="preserve">
          <source>RepeatWith::clone_into</source>
          <target state="translated">RepeatWith::clone_into</target>
        </trans-unit>
        <trans-unit id="aa94498901a669f13225fef684b464c77d6aa15b" translate="yes" xml:space="preserve">
          <source>RepeatWith::cloned</source>
          <target state="translated">RepeatWith::cloned</target>
        </trans-unit>
        <trans-unit id="8a87f2dfa3cb9a223df0456070ae393a016e57a6" translate="yes" xml:space="preserve">
          <source>RepeatWith::cmp</source>
          <target state="translated">RepeatWith::cmp</target>
        </trans-unit>
        <trans-unit id="585254efd05165354ba341ec71df2b5f1cabbc4a" translate="yes" xml:space="preserve">
          <source>RepeatWith::collect</source>
          <target state="translated">RepeatWith::collect</target>
        </trans-unit>
        <trans-unit id="1c8b54bdeaaa14c0ff67773c36dca9e230f38cfc" translate="yes" xml:space="preserve">
          <source>RepeatWith::copied</source>
          <target state="translated">RepeatWith::copied</target>
        </trans-unit>
        <trans-unit id="52eff4651386648e97bef7d02b74b622451d65a6" translate="yes" xml:space="preserve">
          <source>RepeatWith::count</source>
          <target state="translated">RepeatWith::count</target>
        </trans-unit>
        <trans-unit id="f7222ec87547ee63ae25706d94de91f8d7fe46f8" translate="yes" xml:space="preserve">
          <source>RepeatWith::cycle</source>
          <target state="translated">RepeatWith::cycle</target>
        </trans-unit>
        <trans-unit id="f898b390b1d97f75a8bf4615071fb026072bc9d7" translate="yes" xml:space="preserve">
          <source>RepeatWith::enumerate</source>
          <target state="translated">RepeatWith::enumerate</target>
        </trans-unit>
        <trans-unit id="f40ae2a80e588b0ba389565b0c48bebc77b27a4d" translate="yes" xml:space="preserve">
          <source>RepeatWith::eq</source>
          <target state="translated">RepeatWith::eq</target>
        </trans-unit>
        <trans-unit id="f031ad45b51a7818ef97db76dc1df52cc5f4f3dd" translate="yes" xml:space="preserve">
          <source>RepeatWith::filter</source>
          <target state="translated">RepeatWith::filter</target>
        </trans-unit>
        <trans-unit id="aa6da830e301c28ee4893acddd8aa8d735f8e6db" translate="yes" xml:space="preserve">
          <source>RepeatWith::filter_map</source>
          <target state="translated">RepeatWith::filter_map</target>
        </trans-unit>
        <trans-unit id="1ebd8e3f99f8cdab7bd4bb2a0d8ba888a389d1d6" translate="yes" xml:space="preserve">
          <source>RepeatWith::find</source>
          <target state="translated">RepeatWith::find</target>
        </trans-unit>
        <trans-unit id="c073d2c286ee072e8ae04110419e545915a56be0" translate="yes" xml:space="preserve">
          <source>RepeatWith::find_map</source>
          <target state="translated">RepeatWith::find_map</target>
        </trans-unit>
        <trans-unit id="71ba1223c6ee01350c9fa2e343dd4a60a6379c9d" translate="yes" xml:space="preserve">
          <source>RepeatWith::flat_map</source>
          <target state="translated">RepeatWith::flat_map</target>
        </trans-unit>
        <trans-unit id="4c76842297761283a170b800c361897fd0f6e4f7" translate="yes" xml:space="preserve">
          <source>RepeatWith::flatten</source>
          <target state="translated">RepeatWith::flatten</target>
        </trans-unit>
        <trans-unit id="8ebabf2d3b47531bc6452bf5e645ed21706d50aa" translate="yes" xml:space="preserve">
          <source>RepeatWith::fmt</source>
          <target state="translated">RepeatWith::fmt</target>
        </trans-unit>
        <trans-unit id="0e982fcc8fb245a7780a70a17b9cd00453e05ab0" translate="yes" xml:space="preserve">
          <source>RepeatWith::fold</source>
          <target state="translated">RepeatWith::fold</target>
        </trans-unit>
        <trans-unit id="8ca98359ae1fde6bc8f36a1be76b5c8721a81549" translate="yes" xml:space="preserve">
          <source>RepeatWith::for_each</source>
          <target state="translated">RepeatWith::for_each</target>
        </trans-unit>
        <trans-unit id="69e2036f6ed3d13d241f812decabb780c585d923" translate="yes" xml:space="preserve">
          <source>RepeatWith::from</source>
          <target state="translated">RepeatWith::from</target>
        </trans-unit>
        <trans-unit id="2630fd32ac2390aeefd1bac6c85170c720a429a9" translate="yes" xml:space="preserve">
          <source>RepeatWith::fuse</source>
          <target state="translated">RepeatWith::fuse</target>
        </trans-unit>
        <trans-unit id="579db6105678220b182d649253e7570d4ed4f90d" translate="yes" xml:space="preserve">
          <source>RepeatWith::ge</source>
          <target state="translated">RepeatWith::ge</target>
        </trans-unit>
        <trans-unit id="b414f4c665acead68c15a37dad14689e3eaf6f4e" translate="yes" xml:space="preserve">
          <source>RepeatWith::gt</source>
          <target state="translated">RepeatWith::gt</target>
        </trans-unit>
        <trans-unit id="4646a889420c0456920abb3cc71cb07b33039ae2" translate="yes" xml:space="preserve">
          <source>RepeatWith::inspect</source>
          <target state="translated">RepeatWith::inspect</target>
        </trans-unit>
        <trans-unit id="e8185331f67950b0e6c5598272385361651eab27" translate="yes" xml:space="preserve">
          <source>RepeatWith::into</source>
          <target state="translated">RepeatWith::into</target>
        </trans-unit>
        <trans-unit id="650296f33ac9e2ee11cf2b2d811fffb53e876839" translate="yes" xml:space="preserve">
          <source>RepeatWith::into_iter</source>
          <target state="translated">RepeatWith::into_iter</target>
        </trans-unit>
        <trans-unit id="9c6ab030de9d17a9fbc760a8c57aaec17e65ce4e" translate="yes" xml:space="preserve">
          <source>RepeatWith::is_sorted</source>
          <target state="translated">RepeatWith::is_sorted</target>
        </trans-unit>
        <trans-unit id="0d6fe96979d4c47f62702d9827f0d4a97a7824d3" translate="yes" xml:space="preserve">
          <source>RepeatWith::is_sorted_by</source>
          <target state="translated">RepeatWith::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="d39e6a792a4558b92e357380d96071ae5cb2d7af" translate="yes" xml:space="preserve">
          <source>RepeatWith::is_sorted_by_key</source>
          <target state="translated">RepeatWith::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="fb9624e484276d5ac78f88ee6452cade260c3700" translate="yes" xml:space="preserve">
          <source>RepeatWith::last</source>
          <target state="translated">RepeatWith::last</target>
        </trans-unit>
        <trans-unit id="279fb80e7d469c8477f186912958c5cd91a01fd8" translate="yes" xml:space="preserve">
          <source>RepeatWith::le</source>
          <target state="translated">RepeatWith::le</target>
        </trans-unit>
        <trans-unit id="d060619739ff42096500f02d08383b7c2b1d0998" translate="yes" xml:space="preserve">
          <source>RepeatWith::lt</source>
          <target state="translated">RepeatWith::lt</target>
        </trans-unit>
        <trans-unit id="d097f25b6de96ad4369afa29e569bab0acd49d15" translate="yes" xml:space="preserve">
          <source>RepeatWith::map</source>
          <target state="translated">RepeatWith::map</target>
        </trans-unit>
        <trans-unit id="3a8ba449571fb91bd2e6dd7f11b80c51d8d45267" translate="yes" xml:space="preserve">
          <source>RepeatWith::max</source>
          <target state="translated">RepeatWith::max</target>
        </trans-unit>
        <trans-unit id="cac16829544f13b4bb523fabd0d2589fad1911f8" translate="yes" xml:space="preserve">
          <source>RepeatWith::max_by</source>
          <target state="translated">RepeatWith::max_by</target>
        </trans-unit>
        <trans-unit id="d0a5623655acf166f624d1ee3532d16f17165bb7" translate="yes" xml:space="preserve">
          <source>RepeatWith::max_by_key</source>
          <target state="translated">RepeatWith::max_by_key</target>
        </trans-unit>
        <trans-unit id="96425c24bf2d133a5353ce55122b4503b4030b58" translate="yes" xml:space="preserve">
          <source>RepeatWith::min</source>
          <target state="translated">RepeatWith::min</target>
        </trans-unit>
        <trans-unit id="4fe4d709c00746a92f8920c38969f87d97e97d14" translate="yes" xml:space="preserve">
          <source>RepeatWith::min_by</source>
          <target state="translated">RepeatWith::min_by</target>
        </trans-unit>
        <trans-unit id="637f4f9109481b1230fc6f438740883594c0ea60" translate="yes" xml:space="preserve">
          <source>RepeatWith::min_by_key</source>
          <target state="translated">RepeatWith::min_by_key</target>
        </trans-unit>
        <trans-unit id="b149faa5d525eb4871e9cd3589ca79dff3b4e32d" translate="yes" xml:space="preserve">
          <source>RepeatWith::ne</source>
          <target state="translated">RepeatWith::ne</target>
        </trans-unit>
        <trans-unit id="936f94a98a54104f6b7914cf6c72dce2dd74e3ed" translate="yes" xml:space="preserve">
          <source>RepeatWith::next</source>
          <target state="translated">RepeatWith::next</target>
        </trans-unit>
        <trans-unit id="40b95c3916d70abb69e7df2098e24d1f3332934a" translate="yes" xml:space="preserve">
          <source>RepeatWith::nth</source>
          <target state="translated">RepeatWith::nth</target>
        </trans-unit>
        <trans-unit id="8e54dcd32f7a90c904fe20de378c3a1830f3d47f" translate="yes" xml:space="preserve">
          <source>RepeatWith::partial_cmp</source>
          <target state="translated">RepeatWith::partial_cmp</target>
        </trans-unit>
        <trans-unit id="f57a0036590d58dfb5df53b9ca94f2c3c9f6982a" translate="yes" xml:space="preserve">
          <source>RepeatWith::partition</source>
          <target state="translated">RepeatWith::partition</target>
        </trans-unit>
        <trans-unit id="f9ffa3a2ca6db737e8ed2aadaf61174ce20cb8a4" translate="yes" xml:space="preserve">
          <source>RepeatWith::peekable</source>
          <target state="translated">RepeatWith::peekable</target>
        </trans-unit>
        <trans-unit id="e964c144cc0d667df3f5cb42e12e602b7e9c83bc" translate="yes" xml:space="preserve">
          <source>RepeatWith::position</source>
          <target state="translated">RepeatWith::position</target>
        </trans-unit>
        <trans-unit id="cce6f639f2cee9a6c96da7e256985b3ed007fa65" translate="yes" xml:space="preserve">
          <source>RepeatWith::product</source>
          <target state="translated">RepeatWith::product</target>
        </trans-unit>
        <trans-unit id="7d2e1fff9de49d3993c5c368f08073297aa4a0bc" translate="yes" xml:space="preserve">
          <source>RepeatWith::rev</source>
          <target state="translated">RepeatWith::rev</target>
        </trans-unit>
        <trans-unit id="8ee10b702fdb5f2c2bf7069b21faa14a229e50fe" translate="yes" xml:space="preserve">
          <source>RepeatWith::rposition</source>
          <target state="translated">RepeatWith::rposition</target>
        </trans-unit>
        <trans-unit id="81f8b61b3fdac980c8cf6524b1638614ea34067d" translate="yes" xml:space="preserve">
          <source>RepeatWith::scan</source>
          <target state="translated">RepeatWith::scan</target>
        </trans-unit>
        <trans-unit id="3bea719eecf5f2f134b6be7845512875ca9ea1f1" translate="yes" xml:space="preserve">
          <source>RepeatWith::size_hint</source>
          <target state="translated">RepeatWith::size_hint</target>
        </trans-unit>
        <trans-unit id="89ddb4468ebfdadd0afa26a309f01021d1c61ab1" translate="yes" xml:space="preserve">
          <source>RepeatWith::skip</source>
          <target state="translated">RepeatWith::skip</target>
        </trans-unit>
        <trans-unit id="1229b04755c4d8618af32f5a1ec0892d26ef4e31" translate="yes" xml:space="preserve">
          <source>RepeatWith::skip_while</source>
          <target state="translated">RepeatWith::skip_while</target>
        </trans-unit>
        <trans-unit id="a9d6a80c702a4f1c2100d66b97f7cd7d07854cdf" translate="yes" xml:space="preserve">
          <source>RepeatWith::step_by</source>
          <target state="translated">RepeatWith::step_by</target>
        </trans-unit>
        <trans-unit id="cea7d7fd9a4a2eb67e123c0973255c14cd21609d" translate="yes" xml:space="preserve">
          <source>RepeatWith::sum</source>
          <target state="translated">RepeatWith::sum</target>
        </trans-unit>
        <trans-unit id="ea3196b11f64f0006e0f027f57bf893f92fa42aa" translate="yes" xml:space="preserve">
          <source>RepeatWith::take</source>
          <target state="translated">RepeatWith::take</target>
        </trans-unit>
        <trans-unit id="09c37858b22d63e81ef5a122ee889d74dd0cd919" translate="yes" xml:space="preserve">
          <source>RepeatWith::take_while</source>
          <target state="translated">RepeatWith::take_while</target>
        </trans-unit>
        <trans-unit id="3c8e09c461900d6f77cf734a31571064f52902b3" translate="yes" xml:space="preserve">
          <source>RepeatWith::to_owned</source>
          <target state="translated">RepeatWith::to_owned</target>
        </trans-unit>
        <trans-unit id="772c0a1bba7854f106d26df3be586545842e7fc7" translate="yes" xml:space="preserve">
          <source>RepeatWith::try_fold</source>
          <target state="translated">RepeatWith::try_fold</target>
        </trans-unit>
        <trans-unit id="0c550cc572986dd5522b2031ef25ca7b3c3c9053" translate="yes" xml:space="preserve">
          <source>RepeatWith::try_for_each</source>
          <target state="translated">RepeatWith::try_for_each</target>
        </trans-unit>
        <trans-unit id="c267437b4fc813274f4fdd0710aae7f227775c9b" translate="yes" xml:space="preserve">
          <source>RepeatWith::try_from</source>
          <target state="translated">RepeatWith::try_from</target>
        </trans-unit>
        <trans-unit id="1e0bd2d28f0c849be4fd36f59122368a308019a8" translate="yes" xml:space="preserve">
          <source>RepeatWith::try_into</source>
          <target state="translated">RepeatWith::try_into</target>
        </trans-unit>
        <trans-unit id="78e3d037279e2606ef7ead2adcbf5c69af4fb52d" translate="yes" xml:space="preserve">
          <source>RepeatWith::type_id</source>
          <target state="translated">RepeatWith::type_id</target>
        </trans-unit>
        <trans-unit id="de62ef4425278625bac4dcd05779086d187ca015" translate="yes" xml:space="preserve">
          <source>RepeatWith::unzip</source>
          <target state="translated">RepeatWith::unzip</target>
        </trans-unit>
        <trans-unit id="bc72bfd5c95e5630387c0b050289aeb72da1b223" translate="yes" xml:space="preserve">
          <source>RepeatWith::zip</source>
          <target state="translated">RepeatWith::zip</target>
        </trans-unit>
        <trans-unit id="57e00d23cfde8e919e0f140943d3db3f10e754cd" translate="yes" xml:space="preserve">
          <source>Repeated separators are ignored, so &lt;code&gt;a/b&lt;/code&gt; and &lt;code&gt;a//b&lt;/code&gt; both have &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; as components.</source>
          <target state="translated">繰り返されるセパレータは無視されるため &lt;code&gt;a/b&lt;/code&gt; と &lt;code&gt;a//b&lt;/code&gt; どちらも &lt;code&gt;a&lt;/code&gt; および &lt;code&gt;b&lt;/code&gt; をコンポーネントとして持っています。</target>
        </trans-unit>
        <trans-unit id="5c57174e924db6c26c6b92bf826f849020b67e73" translate="yes" xml:space="preserve">
          <source>Repeating Code with &lt;code id=&quot;repeating-code-with-loop&quot;&gt;loop&lt;/code&gt;</source>
          <target state="translated">&lt;code id=&quot;repeating-code-with-loop&quot;&gt;loop&lt;/code&gt; 付きの繰り返しコード</target>
        </trans-unit>
        <trans-unit id="d801c3cc11e4c1a0fa4a6c7768dcf48380ebce93" translate="yes" xml:space="preserve">
          <source>Repeats an iterator endlessly.</source>
          <target state="translated">イテレータを無限に繰り返します。</target>
        </trans-unit>
        <trans-unit id="1c665fd5316abc5c4fffad4b47446453bdec8418" translate="yes" xml:space="preserve">
          <source>Repeats an iterator endlessly. &lt;a href=&quot;../../../iter/trait.iterator#method.cycle&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">イテレータを無限に繰り返します。&lt;a href=&quot;../../../iter/trait.iterator#method.cycle&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="590bedfbefe05802eccef4d5f47d01d9d612ffd4" translate="yes" xml:space="preserve">
          <source>Repeats an iterator endlessly. &lt;a href=&quot;../../iter/trait.iterator#method.cycle&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">イテレータを無限に繰り返します。&lt;a href=&quot;../../iter/trait.iterator#method.cycle&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a35251d919f9d3303daeab1d863a3379aba72b74" translate="yes" xml:space="preserve">
          <source>Repeats an iterator endlessly. &lt;a href=&quot;../iter/trait.iterator#method.cycle&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">イテレータを無限に繰り返します。&lt;a href=&quot;../iter/trait.iterator#method.cycle&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0758ff446a6ef96b07f35540421a524faa434f27" translate="yes" xml:space="preserve">
          <source>Repeats an iterator endlessly. &lt;a href=&quot;iter/trait.iterator#method.cycle&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">イテレータを無限に繰り返します。&lt;a href=&quot;iter/trait.iterator#method.cycle&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2e296aa78f4af3924e90e9d94077e13ad4933468" translate="yes" xml:space="preserve">
          <source>Repeats an iterator endlessly. &lt;a href=&quot;trait.iterator#method.cycle&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">イテレータを無限に繰り返します。&lt;a href=&quot;trait.iterator#method.cycle&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f504e77421405eb0acbb8a003e7d116c302ffecf" translate="yes" xml:space="preserve">
          <source>Repetition with Loops</source>
          <target state="translated">ループを使った繰り返し</target>
        </trans-unit>
        <trans-unit id="2be44ed66dfa89b9e5d4c156eea657d4501aefc5" translate="yes" xml:space="preserve">
          <source>Repetitions</source>
          <target state="translated">Repetitions</target>
        </trans-unit>
        <trans-unit id="04e4aab8049d2a6b3d91b8df3a5c93a29860ce6d" translate="yes" xml:space="preserve">
          <source>Replace &lt;code&gt;dest&lt;/code&gt; with the default value of &lt;code&gt;T&lt;/code&gt;, and return the previous &lt;code&gt;dest&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;dest&lt;/code&gt; をデフォルト値の &lt;code&gt;T&lt;/code&gt; に置き換え、前の &lt;code&gt;dest&lt;/code&gt; 値を返します。</target>
        </trans-unit>
        <trans-unit id="634d15d983f74b7fc50742c7a4d030400c3abf35" translate="yes" xml:space="preserve">
          <source>Replaces &lt;code&gt;dest&lt;/code&gt; with the default value of &lt;code&gt;T&lt;/code&gt;, returning the previous &lt;code&gt;dest&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;dest&lt;/code&gt; をデフォルト値の &lt;code&gt;T&lt;/code&gt; に置き換え、前の &lt;code&gt;dest&lt;/code&gt; 値を返します。</target>
        </trans-unit>
        <trans-unit id="3306932e0c82544d3e149c79e67cae38d94597f4" translate="yes" xml:space="preserve">
          <source>Replaces all matches of a pattern with another string.</source>
          <target state="translated">パターンに一致するすべての文字列を別の文字列に置き換えます。</target>
        </trans-unit>
        <trans-unit id="9b7b840d68bbcc735799ee5c7c97bff854387856" translate="yes" xml:space="preserve">
          <source>Replaces first N matches of a pattern with another string.</source>
          <target state="translated">パターンの最初のN個のマッチを別の文字列に置き換えます。</target>
        </trans-unit>
        <trans-unit id="15b654e118de8680e3128e97301405bd7ef3b4bb" translate="yes" xml:space="preserve">
          <source>Replaces the actual value in the option by the value given in parameter, returning the old value if present, leaving a &lt;a href=&quot;#variant.Some&quot;&gt;&lt;code&gt;Some&lt;/code&gt;&lt;/a&gt; in its place without deinitializing either one.</source>
          <target state="translated">オプションの実際の値をパラメーターで指定された値に置き換え、存在する場合は古い値を返し、いずれかを初期化せずに、&lt;a href=&quot;#variant.Some&quot;&gt; &lt;code&gt;Some&lt;/code&gt; &lt;/a&gt;をその場所に残します。</target>
        </trans-unit>
        <trans-unit id="94c17d92375906b664a49dc11fa08f47f0984c89" translate="yes" xml:space="preserve">
          <source>Replaces the actual value in the option by the value given in parameter, returning the old value if present, leaving a &lt;a href=&quot;enum.option#variant.Some&quot;&gt;&lt;code&gt;Some&lt;/code&gt;&lt;/a&gt; in its place without deinitializing either one.</source>
          <target state="translated">オプションの実際の値をパラメーターで指定された値に置き換え、存在する場合は古い値を返し、どちらかを非初期化せずにその場所に&lt;a href=&quot;enum.option#variant.Some&quot;&gt; &lt;code&gt;Some&lt;/code&gt; &lt;/a&gt;を残します。</target>
        </trans-unit>
        <trans-unit id="6785b615956c0d509156116058312546752c6670" translate="yes" xml:space="preserve">
          <source>Replaces the contained value, and returns it.</source>
          <target state="translated">含まれている値を置換して返します。</target>
        </trans-unit>
        <trans-unit id="18102c652af3caf2416fcf67892168635add2578" translate="yes" xml:space="preserve">
          <source>Replaces the entry, returning the old key and value. The new key in the hash map will be the key used to create this entry.</source>
          <target state="translated">エントリを置き換え、古いキーと値を返します。ハッシュマップの新しいキーは、このエントリを作成するために使用されたキーになります。</target>
        </trans-unit>
        <trans-unit id="4c9be872a917409082e68c7e864831e026612d7f" translate="yes" xml:space="preserve">
          <source>Replaces the key in the hash map with the key used to create this entry.</source>
          <target state="translated">ハッシュマップのキーを、このエントリの作成に使用されたキーに置き換えます。</target>
        </trans-unit>
        <trans-unit id="1b3cb977b566aef2fdda0c4704b5527aa4bd7c7e" translate="yes" xml:space="preserve">
          <source>Replaces the value at &lt;code&gt;self&lt;/code&gt; with &lt;code&gt;src&lt;/code&gt;, returning the old value, without dropping either.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; の値を &lt;code&gt;src&lt;/code&gt; で置き換え、どちらもドロップせずに古い値を返します。</target>
        </trans-unit>
        <trans-unit id="31ca2ad2f0c7d3b5538be8d269c926d2699277c5" translate="yes" xml:space="preserve">
          <source>Replaces the wrapped value with a new one computed from &lt;code&gt;f&lt;/code&gt;, returning the old value, without deinitializing either one.</source>
          <target state="translated">ラップされた値を &lt;code&gt;f&lt;/code&gt; から計算された新しい値に置き換え、どちらの値も初期化せずに古い値を返します。</target>
        </trans-unit>
        <trans-unit id="a086aafa7beaf1fdd62da33be232e072f5040e4a" translate="yes" xml:space="preserve">
          <source>Replaces the wrapped value with a new one, returning the old value, without deinitializing either one.</source>
          <target state="translated">ラップされた値を新しい値に置き換え、どちらも初期化せずに古い値を返します。</target>
        </trans-unit>
        <trans-unit id="47becd6cd07733aec18722531a6e68895d92d3b7" translate="yes" xml:space="preserve">
          <source>Replaces this step with &lt;code&gt;0&lt;/code&gt;, returning itself.</source>
          <target state="translated">このステップを &lt;code&gt;0&lt;/code&gt; に置き換え、それ自体を返します。</target>
        </trans-unit>
        <trans-unit id="b65f36d07c33b91799dc42664e6736b5ce243818" translate="yes" xml:space="preserve">
          <source>Replaces this step with &lt;code&gt;1&lt;/code&gt;, returning itself.</source>
          <target state="translated">このステップを &lt;code&gt;1&lt;/code&gt; に置き換え、それ自体を返します。</target>
        </trans-unit>
        <trans-unit id="360bc539904b3901915f57b0aead8cb40373f0de" translate="yes" xml:space="preserve">
          <source>Representation</source>
          <target state="translated">Representation</target>
        </trans-unit>
        <trans-unit id="8d1dadb3c116ce8de79ba5059831322c609e8293" translate="yes" xml:space="preserve">
          <source>Representation of a borrowed C string.</source>
          <target state="translated">借りてきたC言語の文字列の表現。</target>
        </trans-unit>
        <trans-unit id="a4bea91714ce4520b0cbfc64e3f8bf62e1ce9faa" translate="yes" xml:space="preserve">
          <source>Representation of a running or exited child process.</source>
          <target state="translated">実行中または終了した子プロセスの表現。</target>
        </trans-unit>
        <trans-unit id="08d2b8261ee5596da2a1e24751cfa569594f22d6" translate="yes" xml:space="preserve">
          <source>Representation of the various permissions on a file.</source>
          <target state="translated">ファイル上の様々なパーミッションを表現します。</target>
        </trans-unit>
        <trans-unit id="dfc0f19f9eba170bce8f7267283a080cb3621be5" translate="yes" xml:space="preserve">
          <source>Representations</source>
          <target state="translated">Representations</target>
        </trans-unit>
        <trans-unit id="662277f411bae4194b15f9f85dcc39885ede1ce0" translate="yes" xml:space="preserve">
          <source>Representations like &lt;code&gt;#[repr(u8)]&lt;/code&gt;, &lt;code&gt;#[repr(i64)]&lt;/code&gt; are for selecting the discriminant size for enums with no data fields on any of the variants, e.g. &lt;code&gt;enum Color {Red, Blue, Green}&lt;/code&gt;, effectively setting the size of the enum to the size of the provided type. Such an enum can be cast to a value of the same type as well. In short, &lt;code&gt;#[repr(u8)]&lt;/code&gt; makes the enum behave like an integer with a constrained set of allowed values.</source>
          <target state="translated">&lt;code&gt;#[repr(u8)]&lt;/code&gt; 、 &lt;code&gt;#[repr(i64)]&lt;/code&gt; のような表現は、バリアントのいずれにもデータフィールドがない列挙型の判別サイズを選択するためのものです。たとえば、 &lt;code&gt;enum Color {Red, Blue, Green}&lt;/code&gt; 、効果的にサイズを設定します列挙型から提供された型のサイズ。このような列挙型は、同じ型の値にキャストすることもできます。要するに、 &lt;code&gt;#[repr(u8)]&lt;/code&gt; は、列挙型を、制限された許容値のセットを持つ整数のように動作させます。</target>
        </trans-unit>
        <trans-unit id="b67b621ee7f6c4c10523a589bea0eee4e6ca5f3b" translate="yes" xml:space="preserve">
          <source>Representations of non-Rust strings</source>
          <target state="translated">ラスト以外の文字列の表現</target>
        </trans-unit>
        <trans-unit id="eb12684bb0040a8df976fd1ef35ecb647517bea3" translate="yes" xml:space="preserve">
          <source>Represents a Unicode Version.</source>
          <target state="translated">Unicodeバージョンを表します。</target>
        </trans-unit>
        <trans-unit id="7b700dfd2ed995bac902dd5f1e5ed666d73266f1" translate="yes" xml:space="preserve">
          <source>Represents that a value is immediately ready.</source>
          <target state="translated">値がすぐに準備できていることを表します。</target>
        </trans-unit>
        <trans-unit id="d0acc891cff5b6913514d7803750374ae7c0b5c4" translate="yes" xml:space="preserve">
          <source>Represents that a value is not ready yet.</source>
          <target state="translated">値がまだ準備できていないことを表します。</target>
        </trans-unit>
        <trans-unit id="6b2584cb3266c6f2503760bc5214b463cecaf7b5" translate="yes" xml:space="preserve">
          <source>Represents the combination of a starting address and a total capacity of the returned block.</source>
          <target state="translated">返されたブロックの開始アドレスと総容量の組み合わせを表します。</target>
        </trans-unit>
        <trans-unit id="ae77344234b3c0043c478714a49e3d4ca8c0543b" translate="yes" xml:space="preserve">
          <source>Requesting a Review of the Post Changes Its State</source>
          <target state="translated">ポストの状態を変える見直しを要請</target>
        </trans-unit>
        <trans-unit id="1f73efbbe3c848dbb42cd596b46000dc5b9ef386" translate="yes" xml:space="preserve">
          <source>Require parentheses</source>
          <target state="translated">括弧を必要とする</target>
        </trans-unit>
        <trans-unit id="dc5542bf42ec17ceb631015ef4d33ea773f5e3fd" translate="yes" xml:space="preserve">
          <source>Require two calls to &lt;code&gt;approve&lt;/code&gt; before the state can be changed to &lt;code&gt;Published&lt;/code&gt;.</source>
          <target state="translated">状態を &lt;code&gt;Published&lt;/code&gt; に変更 &lt;code&gt;approve&lt;/code&gt; 前に、承認のために2つの呼び出しが必要です。</target>
        </trans-unit>
        <trans-unit id="672ad5346d62dd6eb67f727712f3a58da5a155d2" translate="yes" xml:space="preserve">
          <source>Required methods</source>
          <target state="translated">必要なメソッド</target>
        </trans-unit>
        <trans-unit id="55d081acccfe4aae9c4d2d3af0a31eee277f8d58" translate="yes" xml:space="preserve">
          <source>Required trait for constants used in pattern matches.</source>
          <target state="translated">パターン マッチで使用される定数に必須の形質。</target>
        </trans-unit>
        <trans-unit id="4c97939f4956f23e7f26a9b334fedfea8dceae5d" translate="yes" xml:space="preserve">
          <source>Reserved keywords</source>
          <target state="translated">予約キーワード</target>
        </trans-unit>
        <trans-unit id="d115fa8e0fb8e693059df86f979b8b6c607e5b55" translate="yes" xml:space="preserve">
          <source>Reserves capacity for at least &lt;code&gt;additional&lt;/code&gt; more capacity to be inserted in the given &lt;code&gt;OsString&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;OsString&lt;/code&gt; に挿入される少なくとも &lt;code&gt;additional&lt;/code&gt; 容量のために容量を予約します。</target>
        </trans-unit>
        <trans-unit id="a6bdd145e2c2b8d80f59ff0af7a0c70c2441de04" translate="yes" xml:space="preserve">
          <source>Reserves capacity for at least &lt;code&gt;additional&lt;/code&gt; more elements to be inserted in the &lt;code&gt;BinaryHeap&lt;/code&gt;. The collection may reserve more space to avoid frequent reallocations.</source>
          <target state="translated">&lt;code&gt;BinaryHeap&lt;/code&gt; に挿入される少なくとも &lt;code&gt;additional&lt;/code&gt; 要素の容量を予約します。コレクションは、頻繁な再割り当てを回避するために、より多くのスペースを予約する場合があります。</target>
        </trans-unit>
        <trans-unit id="d91531546812ceb3960ca2501d418c8093e9e12d" translate="yes" xml:space="preserve">
          <source>Reserves capacity for at least &lt;code&gt;additional&lt;/code&gt; more elements to be inserted in the &lt;code&gt;HashMap&lt;/code&gt;. The collection may reserve more space to avoid frequent reallocations.</source>
          <target state="translated">&lt;code&gt;HashMap&lt;/code&gt; に挿入される少なくとも &lt;code&gt;additional&lt;/code&gt; 要素の容量を予約します。コレクションは、頻繁な再割り当てを回避するために、より多くのスペースを予約することがあります。</target>
        </trans-unit>
        <trans-unit id="b76d6f2b5e7d09db8f77646b21b8bd2b9a806202" translate="yes" xml:space="preserve">
          <source>Reserves capacity for at least &lt;code&gt;additional&lt;/code&gt; more elements to be inserted in the &lt;code&gt;HashSet&lt;/code&gt;. The collection may reserve more space to avoid frequent reallocations.</source>
          <target state="translated">&lt;code&gt;HashSet&lt;/code&gt; に挿入される少なくとも &lt;code&gt;additional&lt;/code&gt; 要素の容量を予約します。コレクションは、頻繁な再割り当てを回避するために、より多くのスペースを予約することがあります。</target>
        </trans-unit>
        <trans-unit id="04b2863f1a58e6249c5da4e3d2bd0e5ca213d75b" translate="yes" xml:space="preserve">
          <source>Reserves capacity for at least &lt;code&gt;additional&lt;/code&gt; more elements to be inserted in the given &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt;. The collection may reserve more space to avoid frequent reallocations. After calling &lt;code&gt;reserve&lt;/code&gt;, capacity will be greater than or equal to &lt;code&gt;self.len() + additional&lt;/code&gt;. Does nothing if capacity is already sufficient.</source>
          <target state="translated">指定された &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; 挿入される少なくとも &lt;code&gt;additional&lt;/code&gt; 要素の容量を予約します。コレクションは、頻繁な再割り当てを回避するために、より多くのスペースを予約する場合があります。 &lt;code&gt;reserve&lt;/code&gt; を呼び出した後、容量は &lt;code&gt;self.len() + additional&lt;/code&gt; と同じかそれ以上になります。容量がすでに十分である場合は何もしません。</target>
        </trans-unit>
        <trans-unit id="c44387ea7a7caff80a36cb04a23cf29a65bf364f" translate="yes" xml:space="preserve">
          <source>Reserves capacity for at least &lt;code&gt;additional&lt;/code&gt; more elements to be inserted in the given &lt;code&gt;VecDeque&lt;/code&gt;. The collection may reserve more space to avoid frequent reallocations.</source>
          <target state="translated">指定された &lt;code&gt;VecDeque&lt;/code&gt; に挿入される少なくとも &lt;code&gt;additional&lt;/code&gt; 要素の容量を予約します。コレクションは、頻繁な再割り当てを回避するために、より多くのスペースを予約する場合があります。</target>
        </trans-unit>
        <trans-unit id="4fd162826ef4e4ddf7986da07bfc7a15cd67374d" translate="yes" xml:space="preserve">
          <source>Reserves capacity in a collection for the given number of additional elements.</source>
          <target state="translated">与えられた数の追加要素のために、コレクションの容量を確保します。</target>
        </trans-unit>
        <trans-unit id="2b2da13104ecc61e01c2357be45b9983a9b60820" translate="yes" xml:space="preserve">
          <source>Reserves capacity in a collection for the given number of additional elements. &lt;a href=&quot;../../iter/trait.extend#method.extend_reserve&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">指定された数の追加要素のコレクションの容量を予約します。&lt;a href=&quot;../../iter/trait.extend#method.extend_reserve&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="27b393b060a6d66fce41b3b0cd2b6379dbca08a3" translate="yes" xml:space="preserve">
          <source>Reserves capacity in a collection for the given number of additional elements. &lt;a href=&quot;../iter/trait.extend#method.extend_reserve&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">指定された数の追加要素のコレクションの容量を予約します。&lt;a href=&quot;../iter/trait.extend#method.extend_reserve&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6b25189615b5e4686db955d40caa685cacbf0969" translate="yes" xml:space="preserve">
          <source>Reserves capacity in a collection for the given number of additional elements. &lt;a href=&quot;iter/trait.extend#method.extend_reserve&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">指定された数の追加要素のコレクションの容量を予約します。&lt;a href=&quot;iter/trait.extend#method.extend_reserve&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0715893552a34ce0c24ad36116d472b6b57548bb" translate="yes" xml:space="preserve">
          <source>Reserves the minimum capacity for exactly &lt;code&gt;additional&lt;/code&gt; more capacity to be inserted in the given &lt;code&gt;OsString&lt;/code&gt;. Does nothing if the capacity is already sufficient.</source>
          <target state="translated">指定された &lt;code&gt;OsString&lt;/code&gt; に挿入される &lt;code&gt;additional&lt;/code&gt; 容量を正確に確保するために、最小容量を予約します。容量がすでに十分である場合は何もしません。</target>
        </trans-unit>
        <trans-unit id="627750cfae0543b96ece681916f99cdca1213077" translate="yes" xml:space="preserve">
          <source>Reserves the minimum capacity for exactly &lt;code&gt;additional&lt;/code&gt; more elements to be inserted in the given &lt;code&gt;BinaryHeap&lt;/code&gt;. Does nothing if the capacity is already sufficient.</source>
          <target state="translated">指定された &lt;code&gt;BinaryHeap&lt;/code&gt; に挿入される要素を &lt;code&gt;additional&lt;/code&gt; するための最小容量を予約します。容量がすでに十分である場合は何もしません。</target>
        </trans-unit>
        <trans-unit id="0273c9f4d0b21d2b91c13099454783584660b406" translate="yes" xml:space="preserve">
          <source>Reserves the minimum capacity for exactly &lt;code&gt;additional&lt;/code&gt; more elements to be inserted in the given &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt;. After calling &lt;code&gt;reserve_exact&lt;/code&gt;, capacity will be greater than or equal to &lt;code&gt;self.len() + additional&lt;/code&gt;. Does nothing if the capacity is already sufficient.</source>
          <target state="translated">指定された &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; 挿入される要素を &lt;code&gt;additional&lt;/code&gt; するための最小容量を予約します。 &lt;code&gt;reserve_exact&lt;/code&gt; を呼び出した後、容量は &lt;code&gt;self.len() + additional&lt;/code&gt; 値以上になります。容量がすでに十分である場合は何もしません。</target>
        </trans-unit>
        <trans-unit id="dd349854db3f7929c7e67d08f54b6151f916c5d2" translate="yes" xml:space="preserve">
          <source>Reserves the minimum capacity for exactly &lt;code&gt;additional&lt;/code&gt; more elements to be inserted in the given &lt;code&gt;VecDeque&lt;/code&gt;. Does nothing if the capacity is already sufficient.</source>
          <target state="translated">指定された &lt;code&gt;VecDeque&lt;/code&gt; に挿入される要素を &lt;code&gt;additional&lt;/code&gt; するための最小容量を予約します。容量がすでに十分である場合は何もしません。</target>
        </trans-unit>
        <trans-unit id="1ed97a69e694f141a250420a76f659ecacafb9fc" translate="yes" xml:space="preserve">
          <source>Resizes the &lt;code&gt;Vec&lt;/code&gt; in-place so that &lt;code&gt;len&lt;/code&gt; is equal to &lt;code&gt;new_len&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;len&lt;/code&gt; が &lt;code&gt;new_len&lt;/code&gt; と等しくなるように、 &lt;code&gt;Vec&lt;/code&gt; をインプレースでサイズ変更します。</target>
        </trans-unit>
        <trans-unit id="d1688ca8fade0b5b9baeede581bb7830ef9a0378" translate="yes" xml:space="preserve">
          <source>Rest patterns</source>
          <target state="translated">休息パターン</target>
        </trans-unit>
        <trans-unit id="eda4fccc21251c43fec1679f1ab6dbf3ec09f4b1" translate="yes" xml:space="preserve">
          <source>Restrict a value to a certain interval unless it is NaN.</source>
          <target state="translated">NaNでない限り、一定の間隔で値を制限します。</target>
        </trans-unit>
        <trans-unit id="df254f25f7b5703bb4f51ae9b5fa96f5a9c1a47f" translate="yes" xml:space="preserve">
          <source>Restrict a value to a certain interval.</source>
          <target state="translated">値を特定の間隔に制限します。</target>
        </trans-unit>
        <trans-unit id="fb4871f776dd00215e8771c2a6d3ba3cfd6bc3fe" translate="yes" xml:space="preserve">
          <source>Restrict a value to a certain interval. &lt;a href=&quot;../../cmp/trait.ord#method.clamp&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">値を特定の間隔に制限します。&lt;a href=&quot;../../cmp/trait.ord#method.clamp&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7b32359e399289d43db5a851f60da6f1dcd3f6b7" translate="yes" xml:space="preserve">
          <source>Restrict a value to a certain interval. &lt;a href=&quot;../cmp/trait.ord#method.clamp&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">値を特定の間隔に制限します。&lt;a href=&quot;../cmp/trait.ord#method.clamp&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3ad8f29e003992ad8c946e288497d3c9aef3a3fe" translate="yes" xml:space="preserve">
          <source>Restrict a value to a certain interval. &lt;a href=&quot;cmp/trait.ord#method.clamp&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">値を特定の間隔に制限します。&lt;a href=&quot;cmp/trait.ord#method.clamp&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8936ba6d2c104b25de8bf14f08471c2f6045c8c7" translate="yes" xml:space="preserve">
          <source>Restrict a value to a certain interval. &lt;a href=&quot;trait.ord#method.clamp&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">値を特定の間隔に制限します。&lt;a href=&quot;trait.ord#method.clamp&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
