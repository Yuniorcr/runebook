<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="rust">
    <body>
      <group id="rust">
        <trans-unit id="043075ce176dd25e531f92a1093f419f3c621bfa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;'static&amp;gt; &lt;a href=&quot;struct.localkey&quot;&gt;LocalKey&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/thread/local.rs.html#210-260&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;'static&amp;gt; &lt;a href=&quot;struct.localkey&quot;&gt;LocalKey&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/thread/local.rs.html#210-260&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="a802bc3bb967a5cf27aa5ec46e583bc2b7f4e04d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;'static&amp;gt; Debug for &lt;a href=&quot;../thread/struct.localkey&quot;&gt;LocalKey&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/thread/local.rs.html#96-100&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;'static&amp;gt; Debug for &lt;a href=&quot;../thread/struct.localkey&quot;&gt;LocalKey&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/thread/local.rs.html#96-100&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="aae4d2385bfb461e942353bf48ced387162a9727" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../clone/trait.clone&quot;&gt;Clone&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#618&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../clone/trait.clone&quot;&gt;Clone&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#618&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="34166f60b2e5156b03e73a5709749258f31aeae6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../clone/trait.clone&quot;&gt;Clone&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#555&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../clone/trait.clone&quot;&gt;Clone&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#555&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="74387d47f70d17f1b274d16fea5d29c958191be1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../clone/trait.clone&quot;&gt;Clone&lt;/a&gt;, S:&amp;nbsp;&lt;a href=&quot;../../clone/trait.clone&quot;&gt;Clone&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;../struct.hashset&quot;&gt;HashSet&lt;/a&gt;&amp;lt;T, S&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/set.rs.html#109&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../clone/trait.clone&quot;&gt;Clone&lt;/a&gt;, S:&amp;nbsp;&lt;a href=&quot;../../clone/trait.clone&quot;&gt;Clone&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;../struct.hashset&quot;&gt;HashSet&lt;/a&gt;&amp;lt;T, S&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/set.rs.html#109&quot;&gt;[SRC]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a2f8324c8040582ddafa26467afeb19facd803be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#618&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#618&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b9bf9379b38ce373d85dfddd8193527decf1395b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#555&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#555&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0d7e2adecf3f8616895058639448f47c6e7da4d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt; for &lt;a href=&quot;enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#618&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt; for &lt;a href=&quot;enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#618&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="49b8a5dfbb1e4fc6b5114aba81ff64dddaa0e6e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt; for &lt;a href=&quot;struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#555&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt; for &lt;a href=&quot;struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#555&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="8e6b0aae60349e9ad455bfe54e164c60b88d2c1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.intoiter&quot;&gt;IntoIter&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#440&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.intoiter&quot;&gt;IntoIter&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#440&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3a7aeceb62dd702b2d1c266bbebae8718356d8be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../hash/trait.hash&quot;&gt;Hash&lt;/a&gt; + &lt;a href=&quot;../../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt;&amp;gt; &lt;a href=&quot;../struct.hashset&quot;&gt;HashSet&lt;/a&gt;&amp;lt;T, &lt;a href=&quot;../hash_map/struct.randomstate&quot;&gt;RandomState&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/set.rs.html#115-150&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../hash/trait.hash&quot;&gt;Hash&lt;/a&gt; + &lt;a href=&quot;../../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt;&amp;gt; &lt;a href=&quot;../struct.hashset&quot;&gt;HashSet&lt;/a&gt;&amp;lt;T, &lt;a href=&quot;../hash_map/struct.randomstate&quot;&gt;RandomState&lt;/a&gt;&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/set.rs.html#115-150&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="9ad9db0cbe770ee822e1398a61c8a0e8fa887441" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../marker/trait.copy&quot;&gt;Copy&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../marker/trait.copy&quot;&gt;Copy&lt;/a&gt; for &lt;a href=&quot;enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#618&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../marker/trait.copy&quot;&gt;Copy&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../marker/trait.copy&quot;&gt;Copy&lt;/a&gt; for &lt;a href=&quot;enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#618&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9cc2b0756b27101f3780951c573f77b915b82e44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../marker/trait.copy&quot;&gt;Copy&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../marker/trait.copy&quot;&gt;Copy&lt;/a&gt; for &lt;a href=&quot;struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#555&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../marker/trait.copy&quot;&gt;Copy&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../marker/trait.copy&quot;&gt;Copy&lt;/a&gt; for &lt;a href=&quot;struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#555&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8e3f06b2b53ffc235543adeb4989d50a3b862d78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../marker/trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#1615-1631&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../marker/trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#1615-1631&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="39e2aee665752d3b5a39a4589e62cc3f3fc49287" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../marker/trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#1580-1588&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../marker/trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#1580-1588&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="17c7433b7f4bfe33f69a88a19f06bd83d45ba903" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../marker/trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../marker/trait.send&quot;&gt;Send&lt;/a&gt; for &lt;a href=&quot;struct.receiver&quot;&gt;Receiver&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#325&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../marker/trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../marker/trait.send&quot;&gt;Send&lt;/a&gt; for &lt;a href=&quot;struct.receiver&quot;&gt;Receiver&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#325&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="292ecd6243d130eae079ae1f887a57ae1cd669c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../marker/trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../marker/trait.send&quot;&gt;Send&lt;/a&gt; for &lt;a href=&quot;struct.sender&quot;&gt;Sender&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#485&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../marker/trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../marker/trait.send&quot;&gt;Send&lt;/a&gt; for &lt;a href=&quot;struct.sender&quot;&gt;Sender&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#485&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1d5e857498d48e60ec32526cbd5e877b5353d52a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../marker/trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../marker/trait.send&quot;&gt;Send&lt;/a&gt; for &lt;a href=&quot;struct.syncsender&quot;&gt;SyncSender&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#543&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../../marker/trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; &lt;a href=&quot;../../marker/trait.send&quot;&gt;Send&lt;/a&gt; for &lt;a href=&quot;struct.syncsender&quot;&gt;SyncSender&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#543&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8d161d8005760617762da0ff26c0878e163f9109" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt;&amp;gt; &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.cursor&quot;&gt;Cursor&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#75&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt;&amp;gt; &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.cursor&quot;&gt;Cursor&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#75&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="352cc29f31d348cfe6b22ae898fe94137baf8ccc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt;, S:&amp;nbsp;&lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt;&amp;gt; &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.hashset&quot;&gt;HashSet&lt;/a&gt;&amp;lt;T, S&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/set.rs.html#109&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt;, S:&amp;nbsp;&lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt;&amp;gt; &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.hashset&quot;&gt;HashSet&lt;/a&gt;&amp;lt;T, S&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/set.rs.html#109&quot;&gt;[SRC]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e72fd60e70ac68bcb392c96b27be8c761309c4f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt;&amp;gt; &lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt; for &lt;a href=&quot;struct.cursor&quot;&gt;Cursor&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#75&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt;&amp;gt; &lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt; for &lt;a href=&quot;struct.cursor&quot;&gt;Cursor&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#75&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f596c41a5ce3e9c9fe1c13a88a72f5712a0855e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt;&amp;gt; &lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt; for &lt;a href=&quot;struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#445-450&quot;&gt;[src]&lt;/a&gt;1.10.0</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt;&amp;gt; &lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt; for &lt;a href=&quot;struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#445-450&quot;&gt;[ソース]&lt;/a&gt; 1.10.0</target>
        </trans-unit>
        <trans-unit id="96a7e02dba974e1a8d41d6499f5e150ed055bd4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt;&amp;gt; &lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/error.rs.html#554-567&quot;&gt;[src]&lt;/a&gt;1.8.0</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt;&amp;gt; &lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/error.rs.html#554-567&quot;&gt;[ソース]&lt;/a&gt; 1.8.0</target>
        </trans-unit>
        <trans-unit id="b0c30f05b3ffbfd42cf006d7819bad85cb22a48c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.assertunwindsafe&quot;&gt;AssertUnwindSafe&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#320-326&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.assertunwindsafe&quot;&gt;AssertUnwindSafe&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#320-326&quot;&gt;[ソース]&lt;/a&gt; 1.16.0</target>
        </trans-unit>
        <trans-unit id="4c3c1170452d976d7b6ef74eb8ce48726d8f543a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.cursor&quot;&gt;Cursor&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#75&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.cursor&quot;&gt;Cursor&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#75&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5258a5bd65a615a005bb7bda66dcde3adecf10b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.take&quot;&gt;Take&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1981&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.take&quot;&gt;Take&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1981&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c50f56c6386c7bd0dd0357baff01c7cc1be23263" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;, U:&amp;nbsp;&lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.chain&quot;&gt;Chain&lt;/a&gt;&amp;lt;T, U&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1912-1919&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;, U:&amp;nbsp;&lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.chain&quot;&gt;Chain&lt;/a&gt;&amp;lt;T, U&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1912-1919&quot;&gt;[SRC]&lt;/a&gt; 1.16.0</target>
        </trans-unit>
        <trans-unit id="d41afdc49ee5f70bd9f57c8c3d7ba27907e1e188" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../hash/trait.hash&quot;&gt;Hash&lt;/a&gt; + &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt;&amp;gt; &lt;a href=&quot;struct.hashset&quot;&gt;HashSet&lt;/a&gt;&amp;lt;T, &lt;a href=&quot;hash_map/struct.randomstate&quot;&gt;RandomState&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/set.rs.html#115-150&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../hash/trait.hash&quot;&gt;Hash&lt;/a&gt; + &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt;&amp;gt; &lt;a href=&quot;struct.hashset&quot;&gt;HashSet&lt;/a&gt;&amp;lt;T, &lt;a href=&quot;hash_map/struct.randomstate&quot;&gt;RandomState&lt;/a&gt;&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/set.rs.html#115-150&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="75173a795182a0dc92bfb676c55fe9f64c7d0441" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; Error for &lt;a href=&quot;../sync/mpsc/enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#1615-1631&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; Error for &lt;a href=&quot;../sync/mpsc/enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#1615-1631&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="f2b257100c8be9a03409fa9eb88a9dcb33f83663" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; Error for &lt;a href=&quot;../sync/mpsc/struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#1580-1588&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; Error for &lt;a href=&quot;../sync/mpsc/struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#1580-1588&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="676c0772b1b45247bb97556fbcbbb96ab9361aea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;../panic/trait.unwindsafe&quot;&gt;UnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.arc&quot;&gt;Arc&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#227&quot;&gt;[src]&lt;/a&gt;1.9.0</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;../panic/trait.unwindsafe&quot;&gt;UnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.arc&quot;&gt;Arc&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#227&quot;&gt;[src]&lt;/a&gt; 1.9.0</target>
        </trans-unit>
        <trans-unit id="9ad2aeae778a337e9c4c18f834f17b52d2818256" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;../panic/trait.unwindsafe&quot;&gt;UnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;../panic/trait.unwindsafe&quot;&gt;UnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#213&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cf8ae500994cd1d3c213649ea84bd85cdf32fb92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;../panic/trait.unwindsafe&quot;&gt;UnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.rc&quot;&gt;Rc&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#225&quot;&gt;[src]&lt;/a&gt;1.9.0</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;../panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;../panic/trait.unwindsafe&quot;&gt;UnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.rc&quot;&gt;Rc&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#225&quot;&gt;[ &lt;/a&gt;ソース ] 1.9.0</target>
        </trans-unit>
        <trans-unit id="f62d97f961961d604b9f449f5dab62ac38001fbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;panic/trait.unwindsafe&quot;&gt;UnwindSafe&lt;/a&gt; for &lt;a href=&quot;primitive.pointer&quot;&gt;*const T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#207&quot;&gt;[src]&lt;/a&gt;1.9.0</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;panic/trait.unwindsafe&quot;&gt;UnwindSafe&lt;/a&gt; for &lt;a href=&quot;primitive.pointer&quot;&gt;*const T&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#207&quot;&gt; [src]&lt;/a&gt; 1.9.0</target>
        </trans-unit>
        <trans-unit id="ac34a5248c80c5b18f0e39ecf73caabbec0c0c5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;panic/trait.unwindsafe&quot;&gt;UnwindSafe&lt;/a&gt; for &lt;a href=&quot;primitive.pointer&quot;&gt;*mut T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#209&quot;&gt;[src]&lt;/a&gt;1.9.0</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;panic/trait.unwindsafe&quot;&gt;UnwindSafe&lt;/a&gt; for &lt;a href=&quot;primitive.pointer&quot;&gt;*mut T&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#209&quot;&gt; [src]&lt;/a&gt; 1.9.0</target>
        </trans-unit>
        <trans-unit id="547c9da1fb7d494d49127e01f59076ee29abaaaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.bufread&quot;&gt;BufRead&lt;/a&gt;&amp;gt; &lt;a href=&quot;trait.bufread&quot;&gt;BufRead&lt;/a&gt; for &lt;a href=&quot;struct.take&quot;&gt;Take&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#2152-2170&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.bufread&quot;&gt;BufRead&lt;/a&gt;&amp;gt; &lt;a href=&quot;trait.bufread&quot;&gt;BufRead&lt;/a&gt; for &lt;a href=&quot;struct.take&quot;&gt;Take&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#2152-2170&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="21b00fd58387b2df50846d2e210c27ee4d10c7e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.bufread&quot;&gt;BufRead&lt;/a&gt;&amp;gt; BufRead for &lt;a href=&quot;struct.take&quot;&gt;Take&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#2152-2170&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.bufread&quot;&gt;BufRead&lt;/a&gt;&amp;gt; BufRead for &lt;a href=&quot;struct.take&quot;&gt;Take&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#2152-2170&quot;&gt;]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5fbd44a7d18bc6c2a41fa8bf1f90e640c11004cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.bufread&quot;&gt;BufRead&lt;/a&gt;, U:&amp;nbsp;&lt;a href=&quot;trait.bufread&quot;&gt;BufRead&lt;/a&gt;&amp;gt; &lt;a href=&quot;trait.bufread&quot;&gt;BufRead&lt;/a&gt; for &lt;a href=&quot;struct.chain&quot;&gt;Chain&lt;/a&gt;&amp;lt;T, U&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1954-1972&quot;&gt;[src]&lt;/a&gt;1.9.0</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.bufread&quot;&gt;BufRead&lt;/a&gt;, U:&amp;nbsp;&lt;a href=&quot;trait.bufread&quot;&gt;BufRead&lt;/a&gt;&amp;gt; &lt;a href=&quot;trait.bufread&quot;&gt;BufRead&lt;/a&gt; for &lt;a href=&quot;struct.chain&quot;&gt;Chain&lt;/a&gt;&amp;lt;T, U&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1954-1972&quot;&gt;[ソース]&lt;/a&gt; 1.9.0</target>
        </trans-unit>
        <trans-unit id="9cd99f1027b46c6035c5fb5a77aaf3a2ca2f21d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.bufread&quot;&gt;BufRead&lt;/a&gt;, U:&amp;nbsp;&lt;a href=&quot;trait.bufread&quot;&gt;BufRead&lt;/a&gt;&amp;gt; BufRead for &lt;a href=&quot;struct.chain&quot;&gt;Chain&lt;/a&gt;&amp;lt;T, U&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1954-1972&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.bufread&quot;&gt;BufRead&lt;/a&gt;, U:&amp;nbsp;&lt;a href=&quot;trait.bufread&quot;&gt;BufRead&lt;/a&gt;&amp;gt; BufRead for &lt;a href=&quot;struct.chain&quot;&gt;Chain&lt;/a&gt;&amp;lt;T, U&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1954-1972&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="46f996ff62ea1fe9e16ab66ef6dee4578bc7138e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.clone&quot;&gt;Clone&lt;/a&gt;&amp;gt; Clone for &lt;a href=&quot;../io/struct.cursor&quot;&gt;Cursor&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#75&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.clone&quot;&gt;Clone&lt;/a&gt;&amp;gt; Clone for &lt;a href=&quot;../io/struct.cursor&quot;&gt;Cursor&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#75&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="50706b2920d840527b0d5c7ab02289878f1ee92f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.clone&quot;&gt;Clone&lt;/a&gt;&amp;gt; Clone for &lt;a href=&quot;../sync/mpsc/enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#618&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.clone&quot;&gt;Clone&lt;/a&gt;&amp;gt; Clone for &lt;a href=&quot;../sync/mpsc/enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#618&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="a18e6c6dda5ebe73385d9abb12370d01e6d44e60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.clone&quot;&gt;Clone&lt;/a&gt;&amp;gt; Clone for &lt;a href=&quot;../sync/mpsc/struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#555&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.clone&quot;&gt;Clone&lt;/a&gt;&amp;gt; Clone for &lt;a href=&quot;../sync/mpsc/struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#555&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="c6f241da6150470860c0b9623afcd9f51b3595de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.clone&quot;&gt;Clone&lt;/a&gt;, S:&amp;nbsp;&lt;a href=&quot;trait.clone&quot;&gt;Clone&lt;/a&gt;&amp;gt; Clone for std::collections::&lt;a href=&quot;../collections/struct.hashset&quot;&gt;HashSet&lt;/a&gt;&amp;lt;T, S&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/set.rs.html#109&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.clone&quot;&gt;Clone&lt;/a&gt;, S:&amp;nbsp;&lt;a href=&quot;trait.clone&quot;&gt;Clone&lt;/a&gt;&amp;gt; Clone for std::collections::&lt;a href=&quot;../collections/struct.hashset&quot;&gt;HashSet&lt;/a&gt;&amp;lt;T, S&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/set.rs.html#109&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="35f372758697638bc2bedeb1ccf8353f2b1f5541" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.copy&quot;&gt;Copy&lt;/a&gt;&amp;gt; Copy for &lt;a href=&quot;../sync/mpsc/enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#618&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.copy&quot;&gt;Copy&lt;/a&gt;&amp;gt; Copy for &lt;a href=&quot;../sync/mpsc/enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#618&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="f37bdf5919e259977d0defb52abcfe810ee27673" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.copy&quot;&gt;Copy&lt;/a&gt;&amp;gt; Copy for &lt;a href=&quot;../sync/mpsc/struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#555&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.copy&quot;&gt;Copy&lt;/a&gt;&amp;gt; Copy for &lt;a href=&quot;../sync/mpsc/struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#555&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="163ce41f58d6729ecc204c03d25e42aa1fa2ac12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; Debug for &lt;a href=&quot;../io/struct.cursor&quot;&gt;Cursor&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#75&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; Debug for &lt;a href=&quot;../io/struct.cursor&quot;&gt;Cursor&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#75&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9b05ccd915c0f69fab8694c43bb4d7c451a056eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; Debug for &lt;a href=&quot;../panic/struct.assertunwindsafe&quot;&gt;AssertUnwindSafe&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#320-326&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; Debug for &lt;a href=&quot;../panic/struct.assertunwindsafe&quot;&gt;AssertUnwindSafe&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#320-326&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="be28c27d17b38d4f8f316e20e22202371caf638d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; Debug for std::io::&lt;a href=&quot;../io/struct.take&quot;&gt;Take&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1981&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; Debug for std::io::&lt;a href=&quot;../io/struct.take&quot;&gt;Take&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1981&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e9294f9da252e8e88fb1b6950e443aa10f151b85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; Debug for std::sync::mpsc::&lt;a href=&quot;../sync/mpsc/struct.intoiter&quot;&gt;IntoIter&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#440&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; Debug for std::sync::mpsc::&lt;a href=&quot;../sync/mpsc/struct.intoiter&quot;&gt;IntoIter&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#440&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="05b5124d90474cf2790a80c6934eccdab24bf186" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;, U:&amp;nbsp;&lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; Debug for std::io::&lt;a href=&quot;../io/struct.chain&quot;&gt;Chain&lt;/a&gt;&amp;lt;T, U&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1912-1919&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;, U:&amp;nbsp;&lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; Debug for std::io::&lt;a href=&quot;../io/struct.chain&quot;&gt;Chain&lt;/a&gt;&amp;lt;T, U&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1912-1919&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0e13cb4033c8eca6589226886d7df158a5feaae1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.default&quot;&gt;Default&lt;/a&gt;&amp;gt; Default for &lt;a href=&quot;../io/struct.cursor&quot;&gt;Cursor&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#75&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.default&quot;&gt;Default&lt;/a&gt;&amp;gt; Default for &lt;a href=&quot;../io/struct.cursor&quot;&gt;Cursor&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#75&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5bd997446d3e77c7d6a1408887f1a454aeb2e8cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.default&quot;&gt;Default&lt;/a&gt;&amp;gt; Default for &lt;a href=&quot;../sync/struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#445-450&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.default&quot;&gt;Default&lt;/a&gt;&amp;gt; Default for &lt;a href=&quot;../sync/struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#445-450&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="8d3e5e59465127a2475af07083f7ad82a798ce55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.eq&quot;&gt;Eq&lt;/a&gt;&amp;gt; Eq for &lt;a href=&quot;../sync/mpsc/enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#618&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.eq&quot;&gt;Eq&lt;/a&gt;&amp;gt; Eq for &lt;a href=&quot;../sync/mpsc/enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#618&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="a47d4b8db7a88cb469225520717012ab145867ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.eq&quot;&gt;Eq&lt;/a&gt;&amp;gt; Eq for &lt;a href=&quot;../sync/mpsc/struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#555&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.eq&quot;&gt;Eq&lt;/a&gt;&amp;gt; Eq for &lt;a href=&quot;../sync/mpsc/struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#555&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="a98cd304bd639cc1e1071696453f41fe583cc904" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.error&quot;&gt;Error&lt;/a&gt;&amp;gt; Error for &lt;a href=&quot;../boxed/struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/error.rs.html#554-567&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.error&quot;&gt;Error&lt;/a&gt;&amp;gt; Error for &lt;a href=&quot;../boxed/struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/error.rs.html#554-567&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7625b17855b33b16e95109bb7b1f7f8b675fb3fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;gt; PartialEq&amp;lt;&lt;a href=&quot;../sync/mpsc/enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt; for &lt;a href=&quot;../sync/mpsc/enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#618&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;gt; PartialEq&amp;lt;&lt;a href=&quot;../sync/mpsc/enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt; for &lt;a href=&quot;../sync/mpsc/enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#618&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="a630f1a277a495e6d883bf17adbb744bf3527ad6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;gt; PartialEq&amp;lt;&lt;a href=&quot;../sync/mpsc/struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt; for &lt;a href=&quot;../sync/mpsc/struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#555&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;gt; PartialEq&amp;lt;&lt;a href=&quot;../sync/mpsc/struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt; for &lt;a href=&quot;../sync/mpsc/struct.senderror&quot;&gt;SendError&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#555&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="0c31fd41b381bdd9f2daf8894708d3fb3b23de72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.read&quot;&gt;Read&lt;/a&gt;&amp;gt; &lt;a href=&quot;trait.read&quot;&gt;Read&lt;/a&gt; for &lt;a href=&quot;struct.take&quot;&gt;Take&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#2127-2149&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.read&quot;&gt;Read&lt;/a&gt;&amp;gt; &lt;a href=&quot;trait.read&quot;&gt;Read&lt;/a&gt; for &lt;a href=&quot;struct.take&quot;&gt;Take&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#2127-2149&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="032a827f3c39829f96f98ac41f5f73bfdf0e30c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.read&quot;&gt;Read&lt;/a&gt;&amp;gt; Read for &lt;a href=&quot;struct.take&quot;&gt;Take&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#2127-2149&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.read&quot;&gt;Read&lt;/a&gt;&amp;gt; Read for &lt;a href=&quot;struct.take&quot;&gt;Take&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#2127-2149&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d55cd7c64fce5add6cb266a23b746d45f8396f15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.read&quot;&gt;Read&lt;/a&gt;, U:&amp;nbsp;&lt;a href=&quot;trait.read&quot;&gt;Read&lt;/a&gt;&amp;gt; &lt;a href=&quot;trait.read&quot;&gt;Read&lt;/a&gt; for &lt;a href=&quot;struct.chain&quot;&gt;Chain&lt;/a&gt;&amp;lt;T, U&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1922-1951&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.read&quot;&gt;Read&lt;/a&gt;, U:&amp;nbsp;&lt;a href=&quot;trait.read&quot;&gt;Read&lt;/a&gt;&amp;gt; &lt;a href=&quot;trait.read&quot;&gt;Read&lt;/a&gt; for &lt;a href=&quot;struct.chain&quot;&gt;Chain&lt;/a&gt;&amp;lt;T, U&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1922-1951&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0ca1788a210847d7b8c2555cbde6f8844bd121d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.read&quot;&gt;Read&lt;/a&gt;, U:&amp;nbsp;&lt;a href=&quot;trait.read&quot;&gt;Read&lt;/a&gt;&amp;gt; Read for &lt;a href=&quot;struct.chain&quot;&gt;Chain&lt;/a&gt;&amp;lt;T, U&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1922-1951&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.read&quot;&gt;Read&lt;/a&gt;, U:&amp;nbsp;&lt;a href=&quot;trait.read&quot;&gt;Read&lt;/a&gt;&amp;gt; Read for &lt;a href=&quot;struct.chain&quot;&gt;Chain&lt;/a&gt;&amp;lt;T, U&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1922-1951&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="21cee83b76cba7d18a73dfae06b9e1cf19ce8b00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; UnwindSafe for &lt;a href=&quot;../primitive.pointer&quot;&gt;*const T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#207&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; UnwindSafe for &lt;a href=&quot;../primitive.pointer&quot;&gt;*const T&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#207&quot;&gt; [ &lt;/a&gt;ソース]</target>
        </trans-unit>
        <trans-unit id="4cd3d8c7456da7742cd1767e75431dc451eeed59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; UnwindSafe for &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#209&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; UnwindSafe for &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut T&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#209&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="99beb36f5c1961cf02e1af9d58612ccc5a9607c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; UnwindSafe for &lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; UnwindSafe for &lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#213&quot;&gt;]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3a04a0e424b935aa942b4e198d4f2dfc5b8f81f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; UnwindSafe for &lt;a href=&quot;../rc/struct.rc&quot;&gt;Rc&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#225&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; UnwindSafe for &lt;a href=&quot;../rc/struct.rc&quot;&gt;Rc&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#225&quot;&gt;[ &lt;/a&gt;ソース]</target>
        </trans-unit>
        <trans-unit id="7fbde3b1d65d03dac73129686e3bb3f54ab756c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; UnwindSafe for &lt;a href=&quot;../sync/struct.arc&quot;&gt;Arc&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#227&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; UnwindSafe for &lt;a href=&quot;../sync/struct.arc&quot;&gt;Arc&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#227&quot;&gt;[ &lt;/a&gt;ソース]</target>
        </trans-unit>
        <trans-unit id="86bb2fb48894f00c3e4a9d3a44f707fc39285565" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; Send for &lt;a href=&quot;../sync/mpsc/struct.receiver&quot;&gt;Receiver&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#325&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; Send for &lt;a href=&quot;../sync/mpsc/struct.receiver&quot;&gt;Receiver&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#325&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5de29965db047bd3060e3a4827dc15ddb825bcbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; Send for &lt;a href=&quot;../sync/mpsc/struct.sender&quot;&gt;Sender&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#485&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; Send for &lt;a href=&quot;../sync/mpsc/struct.sender&quot;&gt;Sender&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#485&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dc40cdad592341fddce7f1c9fef4ecdabc9011d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; Send for &lt;a href=&quot;../sync/mpsc/struct.syncsender&quot;&gt;SyncSender&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#543&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; Send for &lt;a href=&quot;../sync/mpsc/struct.syncsender&quot;&gt;SyncSender&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#543&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="fb6e95222b6832ab61746d4a8162bc548e204647" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.unwindsafe&quot;&gt;UnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;trait.unwindsafe&quot;&gt;UnwindSafe&lt;/a&gt; for Unique&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#211&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;&lt;a href=&quot;trait.unwindsafe&quot;&gt;UnwindSafe&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;trait.unwindsafe&quot;&gt;UnwindSafe&lt;/a&gt; for Unique&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#211&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="a75d9d6ffdeb332f80c0923f6135204fa63f8a26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt;&amp;gt; &lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt; for &lt;a href=&quot;struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#387-392&quot;&gt;[src]&lt;/a&gt;1.10.0</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt;&amp;gt; &lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt; for &lt;a href=&quot;struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#387-392&quot;&gt;[ソース]&lt;/a&gt; 1.10.0</target>
        </trans-unit>
        <trans-unit id="21f0accbae517f3223b98f567166bddcda0b880e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#395-414&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#395-414&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="426b4e32fd7b248566c9917d920f61e47becdffc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#423-442&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#423-442&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="10ca7c9b2ccea9a05f297f1066d3408e47ce4775" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt; + &lt;a href=&quot;../marker/trait.sync&quot;&gt;Sync&lt;/a&gt;&amp;gt; &lt;a href=&quot;../marker/trait.sync&quot;&gt;Sync&lt;/a&gt; for &lt;a href=&quot;struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#76&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt; + &lt;a href=&quot;../marker/trait.sync&quot;&gt;Sync&lt;/a&gt;&amp;gt; &lt;a href=&quot;../marker/trait.sync&quot;&gt;Sync&lt;/a&gt; for &lt;a href=&quot;struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#76&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d15812025a9f2d288dd7bc31b93dd1fbb9e17e97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; &lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt; for &lt;a href=&quot;struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#125&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; &lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt; for &lt;a href=&quot;struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#125&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3d478115af173168bc28efb242edd30f78a0a9c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; &lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt; for &lt;a href=&quot;struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; &lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt; for &lt;a href=&quot;struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#74&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4d23a118b38589cf456b6f9e5d04b1eca995f2ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; &lt;a href=&quot;../marker/trait.sync&quot;&gt;Sync&lt;/a&gt; for &lt;a href=&quot;struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#127&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; &lt;a href=&quot;../marker/trait.sync&quot;&gt;Sync&lt;/a&gt; for &lt;a href=&quot;struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#127&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5622e69c25a0e1fae7563d8e79d86a1f6e2c4faa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; Debug for &lt;a href=&quot;../sync/struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#395-414&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; Debug for &lt;a href=&quot;../sync/struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#395-414&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="61133ea873c26ca3c0f42c3ac1483928a466b954" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; Debug for &lt;a href=&quot;../sync/struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#423-442&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; Debug for &lt;a href=&quot;../sync/struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#423-442&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="4476a1e1ec362ee5166c359729ed71e7cc594318" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;trait.default&quot;&gt;Default&lt;/a&gt;&amp;gt; Default for &lt;a href=&quot;../sync/struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#387-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;trait.default&quot;&gt;Default&lt;/a&gt;&amp;gt; Default for &lt;a href=&quot;../sync/struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#387-392&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4b11ee55ef39854f9a6c7d40f9bff41e13d944f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; !&lt;a href=&quot;../panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.unsafecell&quot;&gt;UnsafeCell&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#234&quot;&gt;[src]&lt;/a&gt;1.9.0</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; !&lt;a href=&quot;../panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.unsafecell&quot;&gt;UnsafeCell&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#234&quot;&gt;[ソース]&lt;/a&gt; 1.9.0</target>
        </trans-unit>
        <trans-unit id="e36d1bd827b5a97b3ab3cc61a66c275eb55a769c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; !RefUnwindSafe for &lt;a href=&quot;../cell/struct.unsafecell&quot;&gt;UnsafeCell&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#234&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; !RefUnwindSafe for &lt;a href=&quot;../cell/struct.unsafecell&quot;&gt;UnsafeCell&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#234&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="0875182ba6edc27f33841d8dc48817e107c835de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;../ops/trait.drop&quot;&gt;Drop&lt;/a&gt; for &lt;a href=&quot;struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#364-373&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;../ops/trait.drop&quot;&gt;Drop&lt;/a&gt; for &lt;a href=&quot;struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#364-373&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="17e73aece41076d55e7be7ca00cd2dcc11dd7de3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;../ops/trait.drop&quot;&gt;Drop&lt;/a&gt; for &lt;a href=&quot;struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#415-420&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;../ops/trait.drop&quot;&gt;Drop&lt;/a&gt; for &lt;a href=&quot;struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#415-420&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="479108d446251c4267e608c67e65b43bc43c25e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;../panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#239&quot;&gt;[src]&lt;/a&gt;1.12.0</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;../panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#239&quot;&gt;[SRC]&lt;/a&gt; 1.12.0</target>
        </trans-unit>
        <trans-unit id="ff703a5df5cd41e4641ba4b31c3959dc838f8798" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;../panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#241&quot;&gt;[src]&lt;/a&gt;1.12.0</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;../panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#241&quot;&gt;[SRC]&lt;/a&gt; 1.12.0</target>
        </trans-unit>
        <trans-unit id="99116f78913fcb684f5583ecc25b8344de84705c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;../panic/trait.unwindsafe&quot;&gt;UnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#215&quot;&gt;[src]&lt;/a&gt;1.9.0</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;../panic/trait.unwindsafe&quot;&gt;UnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#215&quot;&gt;[ &lt;/a&gt;ソース ] 1.9.0</target>
        </trans-unit>
        <trans-unit id="d49c129728719b5058c4e69ac308b70408120f0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;../panic/trait.unwindsafe&quot;&gt;UnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#217&quot;&gt;[src]&lt;/a&gt;1.9.0</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;../panic/trait.unwindsafe&quot;&gt;UnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#217&quot;&gt;[ &lt;/a&gt;ソース ] 1.9.0</target>
        </trans-unit>
        <trans-unit id="82828c10eb084ba48ba0e360b22b553e1cf0ba89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#181-361&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#181-361&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8d03e1bf77b0a7e4ef27d5ec22e1b135af619af6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#141-412&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#141-412&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="1e402ffde266c5287460a89c4ded4de93e035ccf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; Drop for &lt;a href=&quot;../sync/struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#364-373&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; Drop for &lt;a href=&quot;../sync/struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#364-373&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a8aa97a0fa40a9ae50b9c91acc0934f28d702b27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; Drop for &lt;a href=&quot;../sync/struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#415-420&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; Drop for &lt;a href=&quot;../sync/struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#415-420&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="23a963f8d278e1c662a1c19b4cb0a362b55a09bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; RefUnwindSafe for &lt;a href=&quot;../sync/struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#239&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; RefUnwindSafe for &lt;a href=&quot;../sync/struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#239&quot;&gt;]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d79cca7d526d86fe06b5a84a67d124c680fbf505" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; RefUnwindSafe for &lt;a href=&quot;../sync/struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#241&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; RefUnwindSafe for &lt;a href=&quot;../sync/struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#241&quot;&gt;]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="16f78879f45a31cc98c5a5e6ecb2909bc430eb45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; UnwindSafe for &lt;a href=&quot;../sync/struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#215&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; UnwindSafe for &lt;a href=&quot;../sync/struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#215&quot;&gt;[ &lt;/a&gt;ソース]</target>
        </trans-unit>
        <trans-unit id="f8bdf8c174ec2c046ca5cb18a26233600a2380b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; UnwindSafe for &lt;a href=&quot;../sync/struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#217&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; UnwindSafe for &lt;a href=&quot;../sync/struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#217&quot;&gt;]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="66612e1235f9b75e87508148e808899704c721b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;trait.send&quot;&gt;Send&lt;/a&gt; + &lt;a href=&quot;trait.sync&quot;&gt;Sync&lt;/a&gt;&amp;gt; Sync for &lt;a href=&quot;../sync/struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#76&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;trait.send&quot;&gt;Send&lt;/a&gt; + &lt;a href=&quot;trait.sync&quot;&gt;Sync&lt;/a&gt;&amp;gt; Sync for &lt;a href=&quot;../sync/struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#76&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="4e0aa75f4f62563ee0d5e0897cd51ba4e76b614e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; Send for &lt;a href=&quot;../sync/struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#125&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; Send for &lt;a href=&quot;../sync/struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#125&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="35dbddc158549210d432825a5ef0ab1aec80edc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; Send for &lt;a href=&quot;../sync/struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; Send for &lt;a href=&quot;../sync/struct.rwlock&quot;&gt;RwLock&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#74&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="0a30163738ba6c6b99855e56e576d5e08b2be4d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; Sync for &lt;a href=&quot;../sync/struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#127&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;T:&amp;nbsp;?&lt;a href=&quot;trait.sized&quot;&gt;Sized&lt;/a&gt; + &lt;a href=&quot;trait.send&quot;&gt;Send&lt;/a&gt;&amp;gt; Sync for &lt;a href=&quot;../sync/struct.mutex&quot;&gt;Mutex&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#127&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4b3d70b5076759acee505bf39303e05b734856c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W&amp;gt; &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.intoinnererror&quot;&gt;IntoInnerError&lt;/a&gt;&amp;lt;W&amp;gt;&amp;gt; for &lt;a href=&quot;struct.error&quot;&gt;Error&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#728-730&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W&amp;gt; &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.intoinnererror&quot;&gt;IntoInnerError&lt;/a&gt;&amp;lt;W&amp;gt;&amp;gt; for &lt;a href=&quot;struct.error&quot;&gt;Error&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#728-730&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a02c980049cb4878538706a3cc36de84546d2bea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W&amp;gt; &lt;a href=&quot;../fmt/trait.display&quot;&gt;Display&lt;/a&gt; for &lt;a href=&quot;struct.intoinnererror&quot;&gt;IntoInnerError&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#740-744&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W&amp;gt; &lt;a href=&quot;../fmt/trait.display&quot;&gt;Display&lt;/a&gt; for &lt;a href=&quot;struct.intoinnererror&quot;&gt;IntoInnerError&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#740-744&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e0c02314ad81257bccb25ccddbfcb050d7f11081" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W&amp;gt; &lt;a href=&quot;struct.intoinnererror&quot;&gt;IntoInnerError&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#661-725&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W&amp;gt; &lt;a href=&quot;struct.intoinnererror&quot;&gt;IntoInnerError&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#661-725&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="da74d5273ecef506e1f14079146ee6de01bc17f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W&amp;gt; Display for &lt;a href=&quot;../io/struct.intoinnererror&quot;&gt;IntoInnerError&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#740-744&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W&amp;gt; Display for &lt;a href=&quot;../io/struct.intoinnererror&quot;&gt;IntoInnerError&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#740-744&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fd2349b273a2ba9a0189c550844428f21dbc36d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W&amp;gt; From&amp;lt;&lt;a href=&quot;../io/struct.intoinnererror&quot;&gt;IntoInnerError&lt;/a&gt;&amp;lt;W&amp;gt;&amp;gt; for &lt;a href=&quot;../io/struct.error&quot;&gt;Error&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#728-730&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W&amp;gt; From&amp;lt;&lt;a href=&quot;../io/struct.intoinnererror&quot;&gt;IntoInnerError&lt;/a&gt;&amp;lt;W&amp;gt;&amp;gt; for &lt;a href=&quot;../io/struct.error&quot;&gt;Error&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#728-730&quot;&gt; [src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="93c937c3b18bef016c8cd4d96a5daaf1d1d79aaa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.intoinnererror&quot;&gt;IntoInnerError&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#445&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.intoinnererror&quot;&gt;IntoInnerError&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#445&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="39725e47fd73db2639a773522885648c64cab5e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;../io/trait.write&quot;&gt;Write&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;../io/trait.write&quot;&gt;Write&lt;/a&gt; for &lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#122-143&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;../io/trait.write&quot;&gt;Write&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; &lt;a href=&quot;../io/trait.write&quot;&gt;Write&lt;/a&gt; for &lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#122-143&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0571f848ab4321a0894cfdc8098b6ade3a09b8ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;../io/trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; Debug for &lt;a href=&quot;../io/struct.bufwriter&quot;&gt;BufWriter&lt;/a&gt;&amp;lt;W&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;W: &lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#632-639&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;../io/trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; Debug for &lt;a href=&quot;../io/struct.bufwriter&quot;&gt;BufWriter&lt;/a&gt;&amp;lt;W&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;W: &lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#632-639&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="790f3ea91c3924d57be998b1eb547aeaccbb1095" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;../io/trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; Debug for &lt;a href=&quot;../io/struct.linewriter&quot;&gt;LineWriter&lt;/a&gt;&amp;lt;W&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;W: &lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#982-990&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;../io/trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; Debug for &lt;a href=&quot;../io/struct.linewriter&quot;&gt;LineWriter&lt;/a&gt;&amp;lt;W&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;W: &lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#982-990&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="37ba4ba0656c30df13d8744b22aa4b241fc17413" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;../io/trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; Drop for &lt;a href=&quot;../io/struct.bufwriter&quot;&gt;BufWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#652-659&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;../io/trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; Drop for &lt;a href=&quot;../io/struct.bufwriter&quot;&gt;BufWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#652-659&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="1576b3ac8d9f4046d9b971fba1259a9c48fdb890" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt; + &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; &lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;struct.intoinnererror&quot;&gt;IntoInnerError&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#733-737&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt; + &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; &lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;struct.intoinnererror&quot;&gt;IntoInnerError&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#733-737&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7ac669904b3d0dde5cf2cb2bca211c1096c9e864" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt; + &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; Error for &lt;a href=&quot;../io/struct.intoinnererror&quot;&gt;IntoInnerError&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#733-737&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt; + &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; Error for &lt;a href=&quot;../io/struct.intoinnererror&quot;&gt;IntoInnerError&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#733-737&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="3fcaf6d492e5cb1018060dc04c66871b8b188f26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; Debug for &lt;a href=&quot;../io/struct.intoinnererror&quot;&gt;IntoInnerError&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#445&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;&amp;gt; Debug for &lt;a href=&quot;../io/struct.intoinnererror&quot;&gt;IntoInnerError&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#445&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="740b80d5c98687287e286c275264244cc6aaa836" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt; + &lt;a href=&quot;trait.seek&quot;&gt;Seek&lt;/a&gt;&amp;gt; &lt;a href=&quot;trait.seek&quot;&gt;Seek&lt;/a&gt; for &lt;a href=&quot;struct.bufwriter&quot;&gt;BufWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#642-649&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt; + &lt;a href=&quot;trait.seek&quot;&gt;Seek&lt;/a&gt;&amp;gt; &lt;a href=&quot;trait.seek&quot;&gt;Seek&lt;/a&gt; for &lt;a href=&quot;struct.bufwriter&quot;&gt;BufWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#642-649&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="81783591c4c71cc231ef91a47adc0c7e01608661" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt; + &lt;a href=&quot;trait.seek&quot;&gt;Seek&lt;/a&gt;&amp;gt; Seek for &lt;a href=&quot;struct.bufwriter&quot;&gt;BufWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#642-649&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt; + &lt;a href=&quot;trait.seek&quot;&gt;Seek&lt;/a&gt;&amp;gt; Seek for &lt;a href=&quot;struct.bufwriter&quot;&gt;BufWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#642-649&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="aec03852553c9808fcb710703899d3c35bc25e79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; Write for &lt;a href=&quot;../boxed/struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#122-143&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt; + ?&lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;&amp;gt; Write for &lt;a href=&quot;../boxed/struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#122-143&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="90e015522f7a0f2726d5d632e69d5f3c81e379d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.bufwriter&quot;&gt;BufWriter&lt;/a&gt;&amp;lt;W&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;W: &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#632-639&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.bufwriter&quot;&gt;BufWriter&lt;/a&gt;&amp;lt;W&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;W: &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#632-639&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bd4d39d703899b0d1378d0740724155e2bbf033d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.linewriter&quot;&gt;LineWriter&lt;/a&gt;&amp;lt;W&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;W: &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#982-990&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.linewriter&quot;&gt;LineWriter&lt;/a&gt;&amp;lt;W&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;W: &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#982-990&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f9b2d0bea5f580cbc686ba478736c559d47ae885" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; &lt;a href=&quot;../ops/trait.drop&quot;&gt;Drop&lt;/a&gt; for &lt;a href=&quot;struct.bufwriter&quot;&gt;BufWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#652-659&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; &lt;a href=&quot;../ops/trait.drop&quot;&gt;Drop&lt;/a&gt; for &lt;a href=&quot;struct.bufwriter&quot;&gt;BufWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#652-659&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="42792a014b701e70522af6c2510d60af80e8698b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; &lt;a href=&quot;struct.bufwriter&quot;&gt;BufWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#449-593&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; &lt;a href=&quot;struct.bufwriter&quot;&gt;BufWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#449-593&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="9068863c133489e2895071f9044f57e26321b092" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; &lt;a href=&quot;struct.linewriter&quot;&gt;LineWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#816-934&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; &lt;a href=&quot;struct.linewriter&quot;&gt;LineWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#816-934&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="5d5310ce39089a15474e4d5339d0a8159e4a29d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; &lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt; for &lt;a href=&quot;struct.bufwriter&quot;&gt;BufWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#596-629&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; &lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt; for &lt;a href=&quot;struct.bufwriter&quot;&gt;BufWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#596-629&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f26ad1112c18027f8528e2f5fba1c5c9b97d467" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; &lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt; for &lt;a href=&quot;struct.linewriter&quot;&gt;LineWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#937-979&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; &lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt; for &lt;a href=&quot;struct.linewriter&quot;&gt;LineWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#937-979&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d866c879f00a871d2c61a6d8f1527538564d193f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; Write for &lt;a href=&quot;struct.bufwriter&quot;&gt;BufWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#596-629&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; Write for &lt;a href=&quot;struct.bufwriter&quot;&gt;BufWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#596-629&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="d579e6a736ab1ebf2b2e2a62eebdbbadddda4575" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; Write for &lt;a href=&quot;struct.linewriter&quot;&gt;LineWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#937-979&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;W:&amp;nbsp;&lt;a href=&quot;trait.write&quot;&gt;Write&lt;/a&gt;&amp;gt; Write for &lt;a href=&quot;struct.linewriter&quot;&gt;LineWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#937-979&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="5637c0f9456004c95eef1e95096299e4d38a86ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;Y, R&amp;gt; &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;Y, R&amp;gt; &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[SRC]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b76a08d00b806c2fbcb1301a867670018c1f69d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;Y, R&amp;gt; &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;Y, R&amp;gt; &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[SRC]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="28214db2a7119725b6b7320eb1f263ad67491a9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;Y, R&amp;gt; &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt; for &lt;a href=&quot;enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;Y, R&amp;gt; &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt; for &lt;a href=&quot;enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[SRC]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="14a3a640ee93e9275b917cb7efd042e9b8e33d6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;Y, R&amp;gt; &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt;&amp;gt; for &lt;a href=&quot;enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;R&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;Y&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;Y, R&amp;gt; &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt;&amp;gt; for &lt;a href=&quot;enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;R&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;Y&amp;gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="ec07e95b8fa244bcb5e0aec2d6221d92be85ef7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;Y, R&amp;gt; &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt;&amp;gt; for &lt;a href=&quot;enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;R&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;Y&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;Y, R&amp;gt; &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt;&amp;gt; for &lt;a href=&quot;enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;R&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;Y&amp;gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="0f152ff91f96304735b9f9747937bb1bf2dfc3e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;Y, R&amp;gt; &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;Y, R&amp;gt; &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[SRC]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="db2b568b6c74e23d0e91cdc3b00b27d1d9da1c31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;Y, R&amp;gt; &lt;a href=&quot;../hash/trait.hash&quot;&gt;Hash&lt;/a&gt; for &lt;a href=&quot;enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../hash/trait.hash&quot;&gt;Hash&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;../hash/trait.hash&quot;&gt;Hash&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;Y, R&amp;gt; &lt;a href=&quot;../hash/trait.hash&quot;&gt;Hash&lt;/a&gt; for &lt;a href=&quot;enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../hash/trait.hash&quot;&gt;Hash&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;../hash/trait.hash&quot;&gt;Hash&lt;/a&gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[SRC]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3921f3a96a3f93ff3ea4508e1c904a5698757b43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;Y, R&amp;gt; &lt;a href=&quot;../marker/trait.copy&quot;&gt;Copy&lt;/a&gt; for &lt;a href=&quot;enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../marker/trait.copy&quot;&gt;Copy&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;../marker/trait.copy&quot;&gt;Copy&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;Y, R&amp;gt; &lt;a href=&quot;../marker/trait.copy&quot;&gt;Copy&lt;/a&gt; for &lt;a href=&quot;enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../marker/trait.copy&quot;&gt;Copy&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;../marker/trait.copy&quot;&gt;Copy&lt;/a&gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[SRC]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3084a6a26e1aba9435cf60bd0c9605017ed3b0a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;Y, R&amp;gt; Clone for &lt;a href=&quot;../ops/enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;trait.clone&quot;&gt;Clone&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;trait.clone&quot;&gt;Clone&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;Y, R&amp;gt; Clone for &lt;a href=&quot;../ops/enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;trait.clone&quot;&gt;Clone&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;trait.clone&quot;&gt;Clone&lt;/a&gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4a52ff228389409f259731f44a89891f3f21658f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;Y, R&amp;gt; Copy for &lt;a href=&quot;../ops/enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;trait.copy&quot;&gt;Copy&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;trait.copy&quot;&gt;Copy&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;Y, R&amp;gt; Copy for &lt;a href=&quot;../ops/enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;trait.copy&quot;&gt;Copy&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;trait.copy&quot;&gt;Copy&lt;/a&gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ecb27558adca7fbfe911679932cdc9934929b705" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;Y, R&amp;gt; Debug for &lt;a href=&quot;../ops/enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;Y, R&amp;gt; Debug for &lt;a href=&quot;../ops/enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;trait.debug&quot;&gt;Debug&lt;/a&gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0fc9780dc968491e36f2477391aebff2ee9ba87d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;Y, R&amp;gt; Eq for &lt;a href=&quot;../ops/enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;trait.eq&quot;&gt;Eq&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;trait.eq&quot;&gt;Eq&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;Y, R&amp;gt; Eq for &lt;a href=&quot;../ops/enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;trait.eq&quot;&gt;Eq&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;trait.eq&quot;&gt;Eq&lt;/a&gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="efc4a802638b9bd065c585b32f0c97a117d289c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;Y, R&amp;gt; Hash for &lt;a href=&quot;../ops/enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;trait.hash&quot;&gt;Hash&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;trait.hash&quot;&gt;Hash&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;Y, R&amp;gt; Hash for &lt;a href=&quot;../ops/enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;trait.hash&quot;&gt;Hash&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;trait.hash&quot;&gt;Hash&lt;/a&gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[ソース]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bd5263b05d3c6be93b91ff6f3741a2b3e8e25d85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;Y, R&amp;gt; Ord for &lt;a href=&quot;../ops/enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;trait.ord&quot;&gt;Ord&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;trait.ord&quot;&gt;Ord&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;Y, R&amp;gt; Ord for &lt;a href=&quot;../ops/enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;trait.ord&quot;&gt;Ord&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;trait.ord&quot;&gt;Ord&lt;/a&gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0fcabed6ddbb04024945a8ae7cd0c131d81cba52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;Y, R&amp;gt; PartialEq&amp;lt;&lt;a href=&quot;../ops/enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt;&amp;gt; for &lt;a href=&quot;../ops/enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;R&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;Y&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;Y, R&amp;gt; PartialEq&amp;lt;&lt;a href=&quot;../ops/enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt;&amp;gt; for &lt;a href=&quot;../ops/enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;R&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;Y&amp;gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="268729f4f3cb41242e938317a196415a88765c96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&amp;lt;Y, R&amp;gt; PartialOrd&amp;lt;&lt;a href=&quot;../ops/enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt;&amp;gt; for &lt;a href=&quot;../ops/enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;R&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;Y&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;Y, R&amp;gt; PartialOrd&amp;lt;&lt;a href=&quot;../ops/enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt;&amp;gt; for &lt;a href=&quot;../ops/enum.generatorstate&quot;&gt;GeneratorState&lt;/a&gt;&amp;lt;Y, R&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;R&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Y: &lt;a href=&quot;trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;Y&amp;gt;,&amp;nbsp;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/generator.rs.html#9&quot;&gt;[ &lt;/a&gt;ソース ]</target>
        </trans-unit>
        <trans-unit id="f0525519f645d447e6a4b1ad3dc5f10a8c32d6c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&lt;/code&gt; - implement inherent or trait functionality</source>
          <target state="translated">&lt;code&gt;impl&lt;/code&gt; -固有または特性の機能を実装する</target>
        </trans-unit>
        <trans-unit id="184ff4f3ccf97181c1e7d13190fee789ec30dbaa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl&lt;/code&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;{&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;impl&lt;/code&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;{&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8bb19a5f0089329ff5fc36688c371e3b510abdcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;in&lt;/code&gt; - part of &lt;code&gt;for&lt;/code&gt; loop syntax</source>
          <target state="translated">&lt;code&gt;in&lt;/code&gt; - &lt;code&gt;for&lt;/code&gt; ループ構文の一部</target>
        </trans-unit>
        <trans-unit id="30ecb2f02ce38d58d4aa4a7c9f2c938d614049d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&lt;/code&gt; is unsafe because it returns a zeroed-out datum, which is unsafe unless &lt;code&gt;T&lt;/code&gt; is &lt;code&gt;Copy&lt;/code&gt;. Also, even if T is &lt;code&gt;Copy&lt;/code&gt;, an all-zero value may not correspond to any legitimate state for the type in question.</source>
          <target state="translated">&lt;code&gt;init&lt;/code&gt; はゼロ化されたデータを返すため、安全ではありません &lt;code&gt;T&lt;/code&gt; が &lt;code&gt;Copy&lt;/code&gt; でない限り、これは安全ではありません。また、Tが &lt;code&gt;Copy&lt;/code&gt; であっても、すべてゼロの値は、問題の型の正当な状態に対応していない場合があります。</target>
        </trans-unit>
        <trans-unit id="858c85332c7a6ae3719f1490daf3f32734cafad1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inner&lt;/code&gt;'s File Location</source>
          <target state="translated">&lt;code&gt;inner&lt;/code&gt; のファイルの場所</target>
        </trans-unit>
        <trans-unit id="488e0faba8216ef29b582fa846291a33548d945c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inner&lt;/code&gt;'s Module Path</source>
          <target state="translated">&lt;code&gt;inner&lt;/code&gt; のモジュールパス</target>
        </trans-unit>
        <trans-unit id="2bd2ca825452dc91b9eb5cc3803ada20ad55e2b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;into_iter()&lt;/code&gt;, which iterates over &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;into_iter()&lt;/code&gt; は &lt;code&gt;T&lt;/code&gt; を反復します。</target>
        </trans-unit>
        <trans-unit id="908ce4b4276fdf90442dace8bd2507b8573748bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;into_iter&lt;/code&gt; transforms the actual collection into an iterator over its contents by-value. This is great when the collection itself is no longer needed, and the values are needed elsewhere. Using &lt;code&gt;extend&lt;/code&gt; with &lt;code&gt;into_iter&lt;/code&gt; is the main way that contents of one collection are moved into another. &lt;code&gt;extend&lt;/code&gt; automatically calls &lt;code&gt;into_iter&lt;/code&gt;, and takes any &lt;code&gt;T: &lt;/code&gt;&lt;a href=&quot;../iter/trait.intoiterator&quot;&gt;&lt;code&gt;IntoIterator&lt;/code&gt;&lt;/a&gt;. Calling &lt;code&gt;collect&lt;/code&gt; on an iterator itself is also a great way to convert one collection into another. Both of these methods should internally use the capacity management tools discussed in the previous section to do this as efficiently as possible.</source>
          <target state="translated">&lt;code&gt;into_iter&lt;/code&gt; は、実際のコレクションをその値ごとのイテレータに変換します。これは、コレクション自体が不要になり、他の場所で値が必要になる場合に最適です。 &lt;code&gt;into_iter&lt;/code&gt; で &lt;code&gt;extend&lt;/code&gt; を使用することは、あるコレクションのコンテンツを別のコレクションに移動する主な方法です。 &lt;code&gt;extend&lt;/code&gt; は自動的に &lt;code&gt;into_iter&lt;/code&gt; を呼び出し、任意の &lt;code&gt;T: &lt;/code&gt; &lt;a href=&quot;../iter/trait.intoiterator&quot;&gt; &lt;code&gt;IntoIterator&lt;/code&gt; を取り&lt;/a&gt;ます。イテレータ自体で &lt;code&gt;collect&lt;/code&gt; を呼び出すことも、あるコレクションを別のコレクションに変換する優れた方法です。これらの方法はどちらも、前のセクションで説明した容量管理ツールを内部で使用して、これを可能な限り効率的に行う必要があります。</target>
        </trans-unit>
        <trans-unit id="650648fa6f8b804b549eb061425615eb02051ac0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;item&lt;/code&gt;: an &lt;a href=&quot;items&quot;&gt;&lt;em&gt;Item&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;item&lt;/code&gt; ：&lt;a href=&quot;items&quot;&gt;&lt;em&gt;アイテム&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f86c8363726e9f6a7ea9fae8904907f991e374c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter()&lt;/code&gt;, which iterates over &lt;code&gt;&amp;amp;T&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;iter()&lt;/code&gt; は &lt;code&gt;&amp;amp;T&lt;/code&gt; を反復します。</target>
        </trans-unit>
        <trans-unit id="e35b8ef3bb9383339e086a0eae88a4aa52b9fa7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter.find_map(f)&lt;/code&gt; is equivalent to &lt;code&gt;iter.filter_map(f).next()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;iter.find_map(f)&lt;/code&gt; と同等である &lt;code&gt;iter.filter_map(f).next()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="31a2e44d603997626475db15f45fdf5ff6e09830" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter&lt;/code&gt; provides an iterator of immutable references to all the contents of a collection in the most &quot;natural&quot; order. For sequence collections like &lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt;, this means the items will be yielded in increasing order of index starting at 0. For ordered collections like &lt;a href=&quot;struct.btreemap&quot;&gt;&lt;code&gt;BTreeMap&lt;/code&gt;&lt;/a&gt;, this means that the items will be yielded in sorted order. For unordered collections like &lt;a href=&quot;struct.hashmap&quot;&gt;&lt;code&gt;HashMap&lt;/code&gt;&lt;/a&gt;, the items will be yielded in whatever order the internal representation made most convenient. This is great for reading through all the contents of the collection.</source>
          <target state="translated">&lt;code&gt;iter&lt;/code&gt; は、コレクションのすべてのコンテンツへの不変の参照のイテレータを最も「自然な」順序で提供します。&lt;a href=&quot;../vec/struct.vec&quot;&gt; &lt;code&gt;Vec&lt;/code&gt; の&lt;/a&gt;ようなシーケンスコレクションの場合、これは0から始まるインデックスの&lt;a href=&quot;struct.btreemap&quot;&gt; &lt;code&gt;BTreeMap&lt;/code&gt; &lt;/a&gt;でアイテムが生成されることを意味します。BTreeMapのような順序付けられたコレクションの場合、これはアイテムがソートされた順序で生成されることを意味します。&lt;a href=&quot;struct.hashmap&quot;&gt; &lt;code&gt;HashMap&lt;/code&gt; の&lt;/a&gt;ような順序付けられていないコレクションの場合、アイテムは、内部表現が最も便利になった順序で生成されます。これは、コレクションのすべてのコンテンツを読むのに最適です。</target>
        </trans-unit>
        <trans-unit id="8c525b7bcda795b7d93ffe5d335f77685fef5ea1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter_mut()&lt;/code&gt;, which iterates over &lt;code&gt;&amp;amp;mut T&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;iter_mut()&lt;/code&gt; は、 &lt;code&gt;&amp;amp;mut T&lt;/code&gt; を反復します。</target>
        </trans-unit>
        <trans-unit id="37819f5586bdf028bb35a52d901fe1afb9740745" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter_mut&lt;/code&gt; provides an iterator of &lt;em&gt;mutable&lt;/em&gt; references in the same order as &lt;code&gt;iter&lt;/code&gt;. This is great for mutating all the contents of the collection.</source>
          <target state="translated">&lt;code&gt;iter_mut&lt;/code&gt; は、 &lt;code&gt;iter&lt;/code&gt; と同じ順序で&lt;em&gt;変更可能な&lt;/em&gt;参照のイテレータを提供します。これは、コレクションのすべてのコンテンツを変更するのに最適です。</target>
        </trans-unit>
        <trans-unit id="0201e3c1512b2026496fb180a73cf9bc9ed78830" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;language&lt;/code&gt;: a context-free language.</source>
          <target state="translated">&lt;code&gt;language&lt;/code&gt; ：文脈自由言語。</target>
        </trans-unit>
        <trans-unit id="6857c646e18211dd671c4234055f2f82520a4333" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;layout&lt;/code&gt; must &lt;em&gt;fit&lt;/em&gt; that block of memory,</source>
          <target state="translated">&lt;code&gt;layout&lt;/code&gt; はそのメモリブロックに&lt;em&gt;適合し&lt;/em&gt;ている必要&lt;em&gt;が&lt;/em&gt;あります。</target>
        </trans-unit>
        <trans-unit id="2f9b1698b2ef014a8d22f6ffe29d6b48a60fb957" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;layout&lt;/code&gt; must &lt;em&gt;fit&lt;/em&gt; the &lt;code&gt;ptr&lt;/code&gt; (see above). (The &lt;code&gt;new_size&lt;/code&gt; argument need not fit it.)</source>
          <target state="translated">&lt;code&gt;layout&lt;/code&gt; は &lt;code&gt;ptr&lt;/code&gt; に&lt;em&gt;合わせる&lt;/em&gt;必要があります（上記を参照）。（ &lt;code&gt;new_size&lt;/code&gt; 引数はそれに合わせる必要はありません。）</target>
        </trans-unit>
        <trans-unit id="f7b2d14cd9dec3f77fa4819ed728088543633861" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;layout&lt;/code&gt; must &lt;em&gt;fit&lt;/em&gt; the &lt;code&gt;ptr&lt;/code&gt; (see above); note the &lt;code&gt;new_size&lt;/code&gt; argument need not fit it,</source>
          <target state="translated">&lt;code&gt;layout&lt;/code&gt; は &lt;code&gt;ptr&lt;/code&gt; に&lt;em&gt;合わせる&lt;/em&gt;必要があります（上記を参照）。 &lt;code&gt;new_size&lt;/code&gt; 引数はそれに合わせる必要はないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="bf5b1cfc8087c1e1c178dd077efa63f6bccb807e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;layout&lt;/code&gt; must be the same layout that was used to allocate that block of memory,</source>
          <target state="translated">&lt;code&gt;layout&lt;/code&gt; は、そのメモリブロックを割り当てるために使用されたものと同じレイアウトでなければなりません。</target>
        </trans-unit>
        <trans-unit id="25e003f488803d253799e3dc93942592b978c006" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;length&lt;/code&gt; needs to be less than or equal to &lt;code&gt;capacity&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;length&lt;/code&gt; は &lt;code&gt;capacity&lt;/code&gt; 以下にする必要があります。</target>
        </trans-unit>
        <trans-unit id="5fd444dfc07f29ef6d510893cae808ef5c72f739" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let ref x = temp()&lt;/code&gt;. In this case, the temporary is created using a ref binding, but the result is the same: the lifetime is extended to the enclosing block.</source>
          <target state="translated">&lt;code&gt;let ref x = temp()&lt;/code&gt; ます。この場合、一時バインディングはrefバインディングを使用して作成されますが、結果は同じです。存続期間は、外側のブロックまで延長されます。</target>
        </trans-unit>
        <trans-unit id="71a451b2b52e63dc61b8f2d00f1e6b62a15334f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let x = &amp;amp;temp()&lt;/code&gt;. Here, the same temporary is being assigned into &lt;code&gt;x&lt;/code&gt;, rather than being passed as a parameter, and hence the temporary's lifetime is considered to be the enclosing block.</source>
          <target state="translated">&lt;code&gt;let x = &amp;amp;temp()&lt;/code&gt; ます。ここでは、同じ一時変数がパラメーターとして渡されるのではなく、 &lt;code&gt;x&lt;/code&gt; に割り当てられているため、一時変数の存続期間は包含ブロックと見なされます。</target>
        </trans-unit>
        <trans-unit id="58137df5ad12ad27581331f88d18f8cbafb56800" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let x = SomeStruct { foo: &amp;amp;temp() }&lt;/code&gt;. As in the previous case, the temporary is assigned into a struct which is then assigned into a binding, and hence it is given the lifetime of the enclosing block.</source>
          <target state="translated">&lt;code&gt;let x = SomeStruct { foo: &amp;amp;temp() }&lt;/code&gt; ます。前のケースと同様に、一時要素は構造体に割り当てられ、次に構造体に割り当てられます。そのため、一時ブロックには囲んでいるブロックの寿命が与えられます。</target>
        </trans-unit>
        <trans-unit id="b34ba0e33fd1a1f9d0a17593c298b44094bfeee9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let x = [ &amp;amp;temp() ]&lt;/code&gt;. As in the previous case, the temporary is assigned into an array which is then assigned into a binding, and hence it is given the lifetime of the enclosing block.</source>
          <target state="translated">&lt;code&gt;let x = [ &amp;amp;temp() ]&lt;/code&gt; ます。前の場合と同様に、一時変数は配列に割り当てられ、その後、バインディングに割り当てられます。したがって、一時ブロックには、囲んでいるブロックの寿命が与えられます。</target>
        </trans-unit>
        <trans-unit id="a0476596ee64bfabff75d15b38bd3ce011cbfed0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let x = foo(&amp;amp;temp())&lt;/code&gt;. The expression &lt;code&gt;temp()&lt;/code&gt; is a value expression. As it is being borrowed, a temporary is created which will be freed after the innermost enclosing statement; in this case, the &lt;code&gt;let&lt;/code&gt; declaration.</source>
          <target state="translated">&lt;code&gt;let x = foo(&amp;amp;temp())&lt;/code&gt; ます。式 &lt;code&gt;temp()&lt;/code&gt; は値式です。それが借用されているときに、最も内側の囲みステートメントの後で解放される一時ファイルが作成されます。この場合は、 &lt;code&gt;let&lt;/code&gt; 宣言です。</target>
        </trans-unit>
        <trans-unit id="d725072cc0129dd81534f55b4b5567f2520b033c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let x = if foo(&amp;amp;temp()) {bar()} else {baz()};&lt;/code&gt;. The expression &lt;code&gt;temp()&lt;/code&gt; is a value expression. As the temporary is created in the condition expression of an &lt;code&gt;if&lt;/code&gt;, it will be freed at the end of the condition expression; in this example before the call to &lt;code&gt;bar&lt;/code&gt; or &lt;code&gt;baz&lt;/code&gt; is made.</source>
          <target state="translated">&lt;code&gt;let x = if foo(&amp;amp;temp()) {bar()} else {baz()};&lt;/code&gt; 。式 &lt;code&gt;temp()&lt;/code&gt; は値式です。一時変数は &lt;code&gt;if&lt;/code&gt; の条件式で作成されるため、条件式の最後で解放されます。この例では、 &lt;code&gt;bar&lt;/code&gt; または &lt;code&gt;baz&lt;/code&gt; が呼び出される前です。</target>
        </trans-unit>
        <trans-unit id="b9e90c0c83ac293ea85b163ee684e4788e256e3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let x = if temp().must_run_bar {bar()} else {baz()};&lt;/code&gt;. Here we assume the type of &lt;code&gt;temp()&lt;/code&gt; is a struct with a boolean field &lt;code&gt;must_run_bar&lt;/code&gt;. As the previous example, the temporary corresponding to &lt;code&gt;temp()&lt;/code&gt; will be freed at the end of the condition expression.</source>
          <target state="translated">&lt;code&gt;let x = if temp().must_run_bar {bar()} else {baz()};&lt;/code&gt; 。ここでは、 &lt;code&gt;temp()&lt;/code&gt; の型がブール型フィールド &lt;code&gt;must_run_bar&lt;/code&gt; を持つ構造体であると想定しています。前の例のように、 &lt;code&gt;temp()&lt;/code&gt; に対応する一時変数は、条件式の最後で解放されます。</target>
        </trans-unit>
        <trans-unit id="75d91ad41986b3ea206b99af860fa53eb8dbf4f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let x = temp().foo()&lt;/code&gt;. This is the same as the previous example, except that the value of &lt;code&gt;temp()&lt;/code&gt; is being borrowed via autoref on a method-call. Here we are assuming that &lt;code&gt;foo()&lt;/code&gt; is an &lt;code&gt;&amp;amp;self&lt;/code&gt; method defined in some trait, say &lt;code&gt;Foo&lt;/code&gt;. In other words, the expression &lt;code&gt;temp().foo()&lt;/code&gt; is equivalent to &lt;code&gt;Foo::foo(&amp;amp;temp())&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;let x = temp().foo()&lt;/code&gt; ます。これは、 &lt;code&gt;temp()&lt;/code&gt; の値がメソッド呼び出しのautorefを介して借用されることを除いて、前の例と同じです。ここでは、 &lt;code&gt;foo()&lt;/code&gt; が、ある特性で定義されている &lt;code&gt;&amp;amp;self&lt;/code&gt; メソッドであると仮定しています（たとえば &lt;code&gt;Foo&lt;/code&gt; )。つまり、式 &lt;code&gt;temp().foo()&lt;/code&gt; は &lt;code&gt;Foo::foo(&amp;amp;temp())&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="eb620c9b59e12a9311e96cb48aea3b2431f47cb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let&lt;/code&gt; - bind a variable</source>
          <target state="translated">&lt;code&gt;let&lt;/code&gt; -変数をバインドする</target>
        </trans-unit>
        <trans-unit id="6b776172d356ffcb9dd1ee020b2f44b56c7785dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let&lt;/code&gt; declarations</source>
          <target state="translated">&lt;code&gt;let&lt;/code&gt; 宣言をしましょう</target>
        </trans-unit>
        <trans-unit id="ffdd0d324cc89e7ba70dc5a463c8e51e25427f42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let&lt;/code&gt; statements</source>
          <target state="translated">&lt;code&gt;let&lt;/code&gt; ステートメントをしましょう</target>
        </trans-unit>
        <trans-unit id="3f6988c99bb96d42adb99c1e16a47a967bd9f952" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let&lt;/code&gt; statements where an explicit type is given.</source>
          <target state="translated">&lt;code&gt;let&lt;/code&gt; 明示的なタイプが指定されているletステートメント。</target>
        </trans-unit>
        <trans-unit id="bb6dde5d672c23dcccae3b0a0885f494c82b4ab5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lifetime&lt;/code&gt;: a &lt;a href=&quot;tokens#lifetimes-and-loop-labels&quot;&gt;LIFETIME_TOKEN&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;lifetime&lt;/code&gt; ：&lt;a href=&quot;tokens#lifetimes-and-loop-labels&quot;&gt;LIFETIME_TOKEN&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1c41dd8b9cc67b686d0234e023bde90f8e17533f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;literal&lt;/code&gt;: matches &lt;code&gt;-&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;expressions/literal-expr&quot;&gt;&lt;em&gt;LiteralExpression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;literal&lt;/code&gt; ：一致 &lt;code&gt;-&lt;/code&gt; &lt;sup&gt;？&lt;/sup&gt;&lt;a href=&quot;expressions/literal-expr&quot;&gt;&lt;em&gt;LiteralExpression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cc0220d5be1778c063f4075827f94379d15d8236" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;load&lt;/code&gt; takes an &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; argument which describes the memory ordering of this operation. Possible values are &lt;a href=&quot;enum.ordering#variant.SeqCst&quot;&gt;&lt;code&gt;SeqCst&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;load&lt;/code&gt; は、この操作のメモリの順序を表す&lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt;引数を取ります。可能な値は&lt;a href=&quot;enum.ordering#variant.SeqCst&quot;&gt; &lt;code&gt;SeqCst&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt; &lt;code&gt;Acquire&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="8bfd0ba1d1cc83e054ea9da06c5d13219bda9d3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;loop&lt;/code&gt; - loop unconditionally</source>
          <target state="translated">&lt;code&gt;loop&lt;/code&gt; -無条件ループ</target>
        </trans-unit>
        <trans-unit id="d43014574e59af3930cf6de0a2e87bdb403e9a77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;loop&lt;/code&gt; is used to define the simplest kind of loop supported in Rust. It runs the code inside it until the code uses &lt;code&gt;break&lt;/code&gt; or the program exits.</source>
          <target state="translated">&lt;code&gt;loop&lt;/code&gt; は、Rustでサポートされる最も単純な種類のループを定義するために使用されます。コードが &lt;code&gt;break&lt;/code&gt; を使用するかプログラムが終了するまで、コードはその内部で実行されます。</target>
        </trans-unit>
        <trans-unit id="ed7eb40d17b4898ce73d0484b93d37bbbca2cd44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;loop&lt;/code&gt;&lt;a href=&quot;block-expr&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;loop&lt;/code&gt;&lt;a href=&quot;block-expr&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="de5a687e475f403e06aafe448fba7357725d0277" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;macro parser&lt;/code&gt;: the bit of code in the Rust parser that will parse the input using a grammar derived from all of the matchers.</source>
          <target state="translated">&lt;code&gt;macro parser&lt;/code&gt; ：すべてのマッチャーから派生した文法を使用して入力を解析するRustパーサーのコードのビット。</target>
        </trans-unit>
        <trans-unit id="a0a20a43ace139830b723ea96b7b62b3a3f170f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;macro&lt;/code&gt;: anything invokable as &lt;code&gt;foo!(...)&lt;/code&gt; in source code.</source>
          <target state="translated">&lt;code&gt;macro&lt;/code&gt; ：ソースコードで &lt;code&gt;foo!(...)&lt;/code&gt; として呼び出し可能なもの。</target>
        </trans-unit>
        <trans-unit id="6c6287b8dfab0a52f52790e4fbdb25f98e75223d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;macro_rules&lt;/code&gt; allows users to define syntax extension in a declarative way. We call such extensions &quot;macros by example&quot; or simply &quot;macros&quot;.</source>
          <target state="translated">&lt;code&gt;macro_rules&lt;/code&gt; を使用すると、宣言的な方法で構文拡張を定義できます。このような拡張機能を「例によるマクロ」または単に「マクロ」と呼びます。</target>
        </trans-unit>
        <trans-unit id="82273132576c01dcee3c2196c79b5c13c49e7015" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;macro_rules&lt;/code&gt;&lt;code&gt;!&lt;/code&gt;&lt;a href=&quot;identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;em&gt;MacroRulesDef&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;macro_rules&lt;/code&gt;&lt;code&gt;!&lt;/code&gt;&lt;a href=&quot;identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;em&gt;MacroRulesDef&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e662cdf06cb5f8f9c86e14efc4831f6d9711f827" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map()&lt;/code&gt; is conceptually similar to a &lt;a href=&quot;../../book/ch03-05-control-flow#looping-through-a-collection-with-for&quot;&gt;&lt;code&gt;for&lt;/code&gt;&lt;/a&gt; loop. However, as &lt;code&gt;map()&lt;/code&gt; is lazy, it is best used when you're already working with other iterators. If you're doing some sort of looping for a side effect, it's considered more idiomatic to use &lt;a href=&quot;../../book/ch03-05-control-flow#looping-through-a-collection-with-for&quot;&gt;&lt;code&gt;for&lt;/code&gt;&lt;/a&gt; than &lt;code&gt;map()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map()&lt;/code&gt; は概念的には&lt;a href=&quot;../../book/ch03-05-control-flow#looping-through-a-collection-with-for&quot;&gt; &lt;code&gt;for&lt;/code&gt; &lt;/a&gt;ループに似ています。ただし、 &lt;code&gt;map()&lt;/code&gt; はレイジーなので、すでに他のイテレーターを使用している場合に最適です。副作用のために何らかのループを行っている場合&lt;a href=&quot;../../book/ch03-05-control-flow#looping-through-a-collection-with-for&quot;&gt; &lt;code&gt;for&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;map()&lt;/code&gt; よりも慣用的に使用すると考えられます。</target>
        </trans-unit>
        <trans-unit id="67f7d199bc83dfa05d1bc2fbb071ba8a245e62d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map()&lt;/code&gt; transforms one iterator into another, by means of its argument: something that implements &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;&lt;code&gt;FnMut&lt;/code&gt;&lt;/a&gt;. It produces a new iterator which calls this closure on each element of the original iterator.</source>
          <target state="translated">&lt;code&gt;map()&lt;/code&gt; は、&lt;a href=&quot;../ops/trait.fnmut&quot;&gt; &lt;code&gt;FnMut&lt;/code&gt; &lt;/a&gt;を実装する引数を使用して、1つのイテレータを別のイテレータに変換します。元のイテレーターの各要素でこのクロージャーを呼び出す新しいイテレーターを生成します。</target>
        </trans-unit>
        <trans-unit id="e4366b0124f5c086716cac28bad5e3df91d7e15b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;match&lt;/code&gt; - match a value to patterns</source>
          <target state="translated">&lt;code&gt;match&lt;/code&gt; -値をパターンに一致させます</target>
        </trans-unit>
        <trans-unit id="dfba3076fe9afe871fd741b878f1ff57daae5d7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;match&lt;/code&gt; blocks have their patterns matched in order, so, for example, putting a wildcard arm above a more specific arm will make the latter arm irrelevant.</source>
          <target state="translated">&lt;code&gt;match&lt;/code&gt; ブロックのパターンは順番に一致するため、たとえば、ワイルドカードアームを特定のアームの上に置くと、後者のアームは無関係になります。</target>
        </trans-unit>
        <trans-unit id="8f0b04b6545c1be3c46698b408dd17d32283f788" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;match&lt;/code&gt; expressions</source>
          <target state="translated">&lt;code&gt;match&lt;/code&gt; 表現</target>
        </trans-unit>
        <trans-unit id="4f1b9652d2e33e07cc107dc2f0ad580874e30d05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;match&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;sub&gt;&lt;em&gt;except struct expression&lt;/em&gt;&lt;/sub&gt;&lt;code&gt;{&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;match&lt;/code&gt; &lt;sub&gt;&lt;em&gt;構造&lt;/em&gt;&lt;/sub&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;式&lt;/em&gt;&lt;/a&gt;&lt;sub&gt;&lt;em&gt;以外の&lt;/em&gt;&lt;/sub&gt;一致&lt;em&gt;式&lt;/em&gt; &lt;code&gt;{&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b2e499a6d19f7cb126e7e1c49c6e92af1c99a130" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;matcher&lt;/code&gt;: the left-hand-side of a rule in a &lt;code&gt;macro_rules&lt;/code&gt; invocation, or a subportion thereof.</source>
          <target state="translated">&lt;code&gt;matcher&lt;/code&gt; ： &lt;code&gt;macro_rules&lt;/code&gt; 呼び出しのルールの左側、またはそのサブポーション。</target>
        </trans-unit>
        <trans-unit id="49d3f4359ed8b249be629e6365cced2d5114b434" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;meta&lt;/code&gt;: a &lt;a href=&quot;attributes#meta-item-attribute-syntax&quot;&gt;&lt;em&gt;MetaItem&lt;/em&gt;&lt;/a&gt;, the contents of an attribute</source>
          <target state="translated">&lt;code&gt;meta&lt;/code&gt; ：&lt;a href=&quot;attributes#meta-item-attribute-syntax&quot;&gt;&lt;em&gt;MetaItem&lt;/em&gt;&lt;/a&gt;、属性のコンテンツ</target>
        </trans-unit>
        <trans-unit id="d60ebef21be8afdeef56e7541ac1a619b8598961" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mod&lt;/code&gt; - define a module</source>
          <target state="translated">&lt;code&gt;mod&lt;/code&gt; -モジュールを定義する</target>
        </trans-unit>
        <trans-unit id="f3462c4c9ec4f725d3453d110e1bfb8763f681e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mod&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;mod&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4f13af2b7e97ad16010507f39a05ad6ee2021cf1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;move&lt;/code&gt; - make a closure take ownership of all its captures</source>
          <target state="translated">&lt;code&gt;move&lt;/code&gt; -そのすべてのキャプチャの閉鎖テイクの所有権を作ります</target>
        </trans-unit>
        <trans-unit id="35ee64baeab599d232258bebe9d05e4a13d2401c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;move&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;move&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="49662560b54e3906a31f283c66a490c8ee044406" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mut&lt;/code&gt; - denote mutability in references, raw pointers, or pattern bindings</source>
          <target state="translated">&lt;code&gt;mut&lt;/code&gt; -参照、生のポインタ、またはパターンバインディングの可変性を示します</target>
        </trans-unit>
        <trans-unit id="b543c8475568f6cd7fdaa60353ac856f876f428c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mut&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;mut&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2d8c501d55f0d92b8e7be57ada28e76a5f824640" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new_len&lt;/code&gt; must be less than or equal to &lt;a href=&quot;#method.capacity&quot;&gt;&lt;code&gt;capacity()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;new_len&lt;/code&gt; は&lt;a href=&quot;#method.capacity&quot;&gt; &lt;code&gt;capacity()&lt;/code&gt; &lt;/a&gt;以下でなければなりません。</target>
        </trans-unit>
        <trans-unit id="de622d49667f22827b598d71b82eeae43d0cad92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new_size&lt;/code&gt; must be greater than zero.</source>
          <target state="translated">&lt;code&gt;new_size&lt;/code&gt; はゼロより大きくなければなりません。</target>
        </trans-unit>
        <trans-unit id="ed2850bf8dac308ad886b52cdaf9e3957fab1fa2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new_size&lt;/code&gt; must not be greater than &lt;code&gt;layout.size()&lt;/code&gt; (and must be greater than zero),</source>
          <target state="translated">&lt;code&gt;new_size&lt;/code&gt; は、 &lt;code&gt;layout.size()&lt;/code&gt; より大きくてはなりません（ゼロより大きくなければなりません）。</target>
        </trans-unit>
        <trans-unit id="35e3ec7f4271ee7a3c0c618966184b2cf90c457e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new_size&lt;/code&gt; must not be less than &lt;code&gt;layout.size()&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;new_size&lt;/code&gt; は、 &lt;code&gt;layout.size()&lt;/code&gt; 未満であってはなりません。</target>
        </trans-unit>
        <trans-unit id="578633e0d25e404880d149fe743faeed79ed7ec1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new_size&lt;/code&gt;, when rounded up to the nearest multiple of &lt;code&gt;layout.align()&lt;/code&gt;, must not overflow (i.e., the rounded value must be less than &lt;code&gt;usize::MAX&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;new_size&lt;/code&gt; は、最も近い &lt;code&gt;layout.align()&lt;/code&gt; の倍数に切り上げられたときにオーバーフローしてはなりません（つまり、丸められた値は &lt;code&gt;usize::MAX&lt;/code&gt; より小さくなければなりません）。</target>
        </trans-unit>
        <trans-unit id="c790e4079b555989bd49a4e4df696f81956e5931" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;next()&lt;/code&gt; and &lt;code&gt;next_back()&lt;/code&gt; need to behave as the two ends of a range of values, that is they can not &quot;walk past each other&quot;.</source>
          <target state="translated">&lt;code&gt;next()&lt;/code&gt; と &lt;code&gt;next_back()&lt;/code&gt; は、値の範囲の両端として動作する必要があります。つまり、「お互いを通り過ぎる」ことができません。</target>
        </trans-unit>
        <trans-unit id="dc03708d4b3e4e1a3d1ccf1997e157cad4b5655d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;not()&lt;/code&gt; with a configuration predicate. It is true if its predicate is false and false if its predicate is true.</source>
          <target state="translated">&lt;code&gt;not()&lt;/code&gt; と構成述語。述語が偽の場合は真であり、述語が真の場合は偽です。</target>
        </trans-unit>
        <trans-unit id="2192ff114b1aeb434615529e749d9e96060cfd3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;not&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;&lt;em&gt;ConfigurationPredicate&lt;/em&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;not&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;&lt;em&gt;ConfigurationPredicate&lt;/em&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c177f23822fee534105483778732cc9f3a183561" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;note&lt;/code&gt; &amp;mdash; Specifies a string that should be included in the deprecation message. This is typically used to provide an explanation about the deprecation and preferred alternatives.</source>
          <target state="translated">&lt;code&gt;note&lt;/code&gt; &amp;mdash;非推奨メッセージに含める必要がある文字列を指定します。これは通常、非推奨と推奨される代替案についての説明を提供するために使用されます。</target>
        </trans-unit>
        <trans-unit id="2f27d53cbfb1c69c0047bef1df7a53996f67739e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nth()&lt;/code&gt; will return &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;n&lt;/code&gt; is greater than or equal to the length of the iterator.</source>
          <target state="translated">&lt;code&gt;nth()&lt;/code&gt; は、 &lt;code&gt;n&lt;/code&gt; がイテレータの長さ以上の場合に&lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="3d7c5d305a57c5ad7f80d05c1d52834437a77fe7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nth_back()&lt;/code&gt; will return &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;n&lt;/code&gt; is greater than or equal to the length of the iterator.</source>
          <target state="translated">&lt;code&gt;nth_back()&lt;/code&gt; は、 &lt;code&gt;n&lt;/code&gt; がイテレータの長さ以上の場合に&lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="56e3621545ffb513772d311cf9be52e840a7da83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;o&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.octal&quot;&gt;&lt;code&gt;Octal&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;o&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.octal&quot;&gt; &lt;code&gt;Octal&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e1f75c275e14ea5638dd6d590318a3c8bf1c8cb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;o&lt;/code&gt; formatting.</source>
          <target state="translated">&lt;code&gt;o&lt;/code&gt; フォーマット。</target>
        </trans-unit>
        <trans-unit id="20cce486740389f1d5738f34ccecfed323be3639" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;p&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.pointer&quot;&gt;&lt;code&gt;Pointer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;p&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.pointer&quot;&gt; &lt;code&gt;Pointer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="360942977c79e331a3a8464d736dd5d71915c56e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;p&lt;/code&gt; formatting.</source>
          <target state="translated">&lt;code&gt;p&lt;/code&gt; フォーマット。</target>
        </trans-unit>
        <trans-unit id="190cbefced0a1808c6388593add68e2947f18f43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parse&lt;/code&gt; can parse any type that implements the &lt;a href=&quot;str/trait.fromstr&quot;&gt;&lt;code&gt;FromStr&lt;/code&gt;&lt;/a&gt; trait.</source>
          <target state="translated">&lt;code&gt;parse&lt;/code&gt; は、&lt;a href=&quot;str/trait.fromstr&quot;&gt; &lt;code&gt;FromStr&lt;/code&gt; &lt;/a&gt;トレイトを実装する任意の型を解析できます。</target>
        </trans-unit>
        <trans-unit id="293f7d5ce46515832fdf3fe705bdf4ccf490c5a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pat: type&lt;/code&gt;, &lt;code&gt;ident: type&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pat: type&lt;/code&gt; 、 &lt;code&gt;ident: type&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5bf2ca04852220f7f0966d0d2316ccea928b0523" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pat&lt;/code&gt; may only be followed by one of: &lt;code&gt;=&amp;gt;&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;=&lt;/code&gt;, &lt;code&gt;|&lt;/code&gt;, &lt;code&gt;if&lt;/code&gt;, or &lt;code&gt;in&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pat&lt;/code&gt; 唯一の1が続くことがあり： &lt;code&gt;=&amp;gt;&lt;/code&gt; 、、、 &lt;code&gt;,&lt;/code&gt; &lt;code&gt;=&lt;/code&gt; 、 &lt;code&gt;|&lt;/code&gt; 、 &lt;code&gt;if&lt;/code&gt; 、または &lt;code&gt;in&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d322a979efb924539a918c172e6431056aab5037" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pat&lt;/code&gt;: a &lt;a href=&quot;patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;pat&lt;/code&gt; ：&lt;a href=&quot;patterns&quot;&gt;&lt;em&gt;パターン&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7d1f6da81ce745a0b93980b2e3f737e3409475af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path::&amp;lt;...&amp;gt;&lt;/code&gt;, &lt;code&gt;method::&amp;lt;...&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;path::&amp;lt;...&amp;gt;&lt;/code&gt; 、 &lt;code&gt;method::&amp;lt;...&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1d3ea949aec2d359f48702d56aa94147df267d46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt; already exists.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; すでに存在しています。</target>
        </trans-unit>
        <trans-unit id="2d4168095a748d7358dd07871a8d1825e9b913ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt; and &lt;code&gt;ty&lt;/code&gt; may only be followed by one of: &lt;code&gt;=&amp;gt;&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;=&lt;/code&gt;, &lt;code&gt;|&lt;/code&gt;, &lt;code&gt;;&lt;/code&gt;, &lt;code&gt;:&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;{&lt;/code&gt;, &lt;code&gt;as&lt;/code&gt;, &lt;code&gt;where&lt;/code&gt;, or a macro variable of &lt;code&gt;block&lt;/code&gt; fragment specifier.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; と &lt;code&gt;ty&lt;/code&gt; の後にのみ続くことができます： &lt;code&gt;=&amp;gt;&lt;/code&gt; 、 &lt;code&gt;,&lt;/code&gt; 、 &lt;code&gt;=&lt;/code&gt; 、 &lt;code&gt;|&lt;/code&gt; 、 &lt;code&gt;;&lt;/code&gt; 、 &lt;code&gt;:&lt;/code&gt; 、 &lt;code&gt;&amp;gt;&lt;/code&gt; 、 &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; 、 &lt;code&gt;[&lt;/code&gt; 、 &lt;code&gt;{&lt;/code&gt; 、 &lt;code&gt;as&lt;/code&gt; 、 &lt;code&gt;where&lt;/code&gt; 、または &lt;code&gt;block&lt;/code&gt; フラグメント指定子のマクロ変数。</target>
        </trans-unit>
        <trans-unit id="122aa7f8c8d3e74625fdea0701e8791222b62df8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt; does not exist.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; が存在しません。</target>
        </trans-unit>
        <trans-unit id="eec160ea04755003d0325fae2c97b0610ec38f98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt; is not a symbolic link.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; はシンボリックリンクではありません。</target>
        </trans-unit>
        <trans-unit id="9fe8d91c25a88a11813340fa8960010fd740dd86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt; points to a directory.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; はディレクトリを指します。</target>
        </trans-unit>
        <trans-unit id="bc7d3530ef55ff8f2e2ea7b711cec32dd803949a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt;: a &lt;a href=&quot;paths#paths-in-types&quot;&gt;&lt;em&gt;TypePath&lt;/em&gt;&lt;/a&gt; style path</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; ：&lt;a href=&quot;paths#paths-in-types&quot;&gt;&lt;em&gt;TypePath&lt;/em&gt;&lt;/a&gt;スタイルのパス</target>
        </trans-unit>
        <trans-unit id="3aeb6a95b9bb64eb7301ee964f59fd6f2bad2d6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;position()&lt;/code&gt; is short-circuiting; in other words, it will stop processing as soon as it finds a &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;position()&lt;/code&gt; はショートサーキットです。つまり、 &lt;code&gt;true&lt;/code&gt; が見つかるとすぐに処理を停止します。</target>
        </trans-unit>
        <trans-unit id="a77ff08b387d2123d312f7dc0c9f0a010db1bf10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;position()&lt;/code&gt; takes a closure that returns &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. It applies this closure to each element of the iterator, and if one of them returns &lt;code&gt;true&lt;/code&gt;, then &lt;code&gt;position()&lt;/code&gt; returns &lt;a href=&quot;../option/enum.option#variant.Some&quot;&gt;&lt;code&gt;Some(index)&lt;/code&gt;&lt;/a&gt;. If all of them return &lt;code&gt;false&lt;/code&gt;, it returns &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;position()&lt;/code&gt; は、 &lt;code&gt;true&lt;/code&gt; または &lt;code&gt;false&lt;/code&gt; を返すクロージャを取ります。イテレータの各要素にこのクロージャを適用し、それらの1つが &lt;code&gt;true&lt;/code&gt; を返す場合、 &lt;code&gt;position()&lt;/code&gt; は&lt;a href=&quot;../option/enum.option#variant.Some&quot;&gt; &lt;code&gt;Some(index)&lt;/code&gt; を&lt;/a&gt;返します。それらのすべてが &lt;code&gt;false&lt;/code&gt; を返す場合、&lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="0ae0ae8b31ae213c17c24b4b4e64fa68ea0864ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ptr&lt;/code&gt; must be currently allocated via this allocator,</source>
          <target state="translated">&lt;code&gt;ptr&lt;/code&gt; は現在、このアロケータを介して割り当てられている必要があります</target>
        </trans-unit>
        <trans-unit id="e34744a0d10c190463b762b39debe9b176030206" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ptr&lt;/code&gt; must be non-null.</source>
          <target state="translated">&lt;code&gt;ptr&lt;/code&gt; はnull以外でなければなりません。</target>
        </trans-unit>
        <trans-unit id="35d670a5397ff10d3a6550a1dc4c62b1d8cc1eaa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ptr&lt;/code&gt; must denote a block of memory currently allocated via this allocator</source>
          <target state="translated">&lt;code&gt;ptr&lt;/code&gt; は、このアロケータを介して現在割り当てられているメモリのブロックを示す必要があります</target>
        </trans-unit>
        <trans-unit id="12068198cfce6c81a5022dd5b1bec0de89ed6019" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ptr&lt;/code&gt; must denote a block of memory currently allocated via this allocator,</source>
          <target state="translated">&lt;code&gt;ptr&lt;/code&gt; は、このアロケータを介して現在割り当てられているメモリのブロックを示す必要があります。</target>
        </trans-unit>
        <trans-unit id="9e9b2ae0672c1d431fa9f5b46c7dd4fa34681b5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ptr&lt;/code&gt; needs to have been previously allocated via &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;/&lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; (at least, it's highly likely to be incorrect if it wasn't).</source>
          <target state="translated">&lt;code&gt;ptr&lt;/code&gt; は以前に&lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; / &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; を介して割り当てられている必要があります（少なくとも、そうでない場合は正しくない可能性が高いです）。</target>
        </trans-unit>
        <trans-unit id="7a630e90d76d8d484503d08533b0cfae42a4c465" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ptr&lt;/code&gt;'s &lt;code&gt;T&lt;/code&gt; needs to have the same size and alignment as it was allocated with.</source>
          <target state="translated">&lt;code&gt;ptr&lt;/code&gt; の &lt;code&gt;T&lt;/code&gt; は、割り当てられたときと同じサイズと配置である必要があります。</target>
        </trans-unit>
        <trans-unit id="3716c897be4542682afec1ccd5f2b7a00a78a499" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub(crate)&lt;/code&gt; makes an item visible within the current crate.</source>
          <target state="translated">&lt;code&gt;pub(crate)&lt;/code&gt; は、現在のクレート内にアイテムを表示します。</target>
        </trans-unit>
        <trans-unit id="e244e5c6210bbaeafb8a20af2bd53f7f634e9d92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub(in path)&lt;/code&gt; makes an item visible within the provided &lt;code&gt;path&lt;/code&gt;. &lt;code&gt;path&lt;/code&gt; must be a parent module of the item whose visibility is being declared.</source>
          <target state="translated">&lt;code&gt;pub(in path)&lt;/code&gt; は、提供された &lt;code&gt;path&lt;/code&gt; 内でアイテムを表示します。 &lt;code&gt;path&lt;/code&gt; は、可視性が宣言されているアイテムの親モジュールである必要があります。</target>
        </trans-unit>
        <trans-unit id="7f2e98367a724327f63f5b73009472cb3e139320" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub(in path)&lt;/code&gt;, &lt;code&gt;pub(crate)&lt;/code&gt;, &lt;code&gt;pub(super)&lt;/code&gt;, and &lt;code&gt;pub(self)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pub(in path)&lt;/code&gt; 、 &lt;code&gt;pub(crate)&lt;/code&gt; 、 &lt;code&gt;pub(super)&lt;/code&gt; 、および &lt;code&gt;pub(self)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5d6fa93376a74580a8a18e9c3023defaeec815f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub(self)&lt;/code&gt; makes an item visible to the current module. This is equivalent to &lt;code&gt;pub(in self)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pub(self)&lt;/code&gt; は、現在のモジュールにアイテムを表示します。これは &lt;code&gt;pub(in self)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="ed18bc09fd5d8672a156418d5af9c753fc33dc75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub(super)&lt;/code&gt; makes an item visible to the parent module. This is equivalent to &lt;code&gt;pub(in super)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pub(super)&lt;/code&gt; は、親モジュールにアイテムを表示します。これは &lt;code&gt;pub(in super)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="a1be70fc2abd812619326b7d5f484cb66c683356" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub&lt;/code&gt; - denote public visibility in struct fields, &lt;code&gt;impl&lt;/code&gt; blocks, or modules</source>
          <target state="translated">&lt;code&gt;pub&lt;/code&gt; -構造体の分野で表し公共の可視性 &lt;code&gt;impl&lt;/code&gt; ブロック、またはモジュール</target>
        </trans-unit>
        <trans-unit id="5c7277d7b9e326c8e7cd0225ac28502af51b85c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pub&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;pub&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="cbc45e05a8267e7a3bdf40fcaa4d87714bd3c619" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;r&quot;...&quot;&lt;/code&gt;, &lt;code&gt;r#&quot;...&quot;#&lt;/code&gt;, &lt;code&gt;r##&quot;...&quot;##&lt;/code&gt;, etc.</source>
          <target state="translated">&lt;code&gt;r&quot;...&quot;&lt;/code&gt; 、 &lt;code&gt;r#&quot;...&quot;#&lt;/code&gt; 、 &lt;code&gt;r##&quot;...&quot;##&lt;/code&gt; など</target>
        </trans-unit>
        <trans-unit id="3f1ef34dfac0fbdff6a58587b64f54cfadfbab83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;r&lt;/code&gt; RAW_STRING_CONTENT</source>
          <target state="translated">&lt;code&gt;r&lt;/code&gt; RAW_STRING_CONTENT</target>
        </trans-unit>
        <trans-unit id="b3496df7f964b3da68df1770f73523cff9459893" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;read&lt;/code&gt; creates a bitwise copy of &lt;code&gt;T&lt;/code&gt;, regardless of whether &lt;code&gt;T&lt;/code&gt; is &lt;a href=&quot;../marker/trait.copy&quot;&gt;&lt;code&gt;Copy&lt;/code&gt;&lt;/a&gt;. If &lt;code&gt;T&lt;/code&gt; is not &lt;a href=&quot;../marker/trait.copy&quot;&gt;&lt;code&gt;Copy&lt;/code&gt;&lt;/a&gt;, using both the returned value and the value at &lt;code&gt;*src&lt;/code&gt; can violate memory safety. Note that assigning to &lt;code&gt;*src&lt;/code&gt; counts as a use because it will attempt to drop the value at &lt;code&gt;*src&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;read&lt;/code&gt; は、 &lt;code&gt;T&lt;/code&gt; が&lt;a href=&quot;../marker/trait.copy&quot;&gt; &lt;code&gt;Copy&lt;/code&gt; &lt;/a&gt;かどうかに関係なく、 &lt;code&gt;T&lt;/code&gt; のビット単位のコピーを作成します。 &lt;code&gt;T&lt;/code&gt; が&lt;a href=&quot;../marker/trait.copy&quot;&gt; &lt;code&gt;Copy&lt;/code&gt; &lt;/a&gt;でない場合、戻り値と &lt;code&gt;*src&lt;/code&gt; の値の両方を使用すると、メモリの安全性に違反する可能性があります。 &lt;code&gt;*src&lt;/code&gt; に割り当てることに注意してください使用としてカウントすることがで値をドロップしようとしますので、 &lt;code&gt;*src&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="79aec6cdde39a19b7d9a9a800222b6ad5595ce43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ref&lt;/code&gt; - bind by reference</source>
          <target state="translated">&lt;code&gt;ref&lt;/code&gt; 参照によるバインド</target>
        </trans-unit>
        <trans-unit id="38457fb066838f03c4b2e9c59b4180790259129a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ref&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;mut&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;identifiers&quot;&gt;IDENTIFIER&lt;/a&gt; (&lt;code&gt;@&lt;/code&gt;&lt;a href=&quot;patterns#patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt; ) &lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;ref&lt;/code&gt; &lt;sup&gt;？&lt;/sup&gt; &lt;code&gt;mut&lt;/code&gt; &lt;sup&gt;？&lt;/sup&gt;&lt;a href=&quot;identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;（ &lt;code&gt;@&lt;/code&gt; &lt;a href=&quot;patterns#patterns&quot;&gt;&lt;em&gt;パターン&lt;/em&gt;&lt;/a&gt;）&lt;sup&gt;？&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9454523b62c6c9dc19c0e79cd1c9c70bc5714f0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;repetition&lt;/code&gt; : a fragment that follows a regular repeating pattern</source>
          <target state="translated">&lt;code&gt;repetition&lt;/code&gt; ：通常の繰り返しパターンに従うフラグメント</target>
        </trans-unit>
        <trans-unit id="4548cf0b854b0433c6e4f6378c8dcc6fa06e9627" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replace&lt;/code&gt; allows consumption of a struct field by replacing it with another value. Without &lt;code&gt;replace&lt;/code&gt; you can run into issues like these:</source>
          <target state="translated">&lt;code&gt;replace&lt;/code&gt; は、構造体フィールドを別の値で置き換えることにより、それを消費できるようにします。なし &lt;code&gt;replace&lt;/code&gt; 次のような問題が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="e0267f0c7b2765a197ed1365af284f22a1f3e107" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replace&lt;/code&gt; creates a new &lt;a href=&quot;string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, and copies the data from this string slice into it. While doing so, it attempts to find matches of a pattern. If it finds any, it replaces them with the replacement string slice.</source>
          <target state="translated">&lt;code&gt;replace&lt;/code&gt; は新しい&lt;a href=&quot;string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;作成しますこの文字列スライスからそこにデータをコピーします。その間、パターンの一致を見つけようとします。見つかった場合は、置換文字列スライスに置き換えます。</target>
        </trans-unit>
        <trans-unit id="e65ccabcad8d607cfa9500600b305c3d751e4bf9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replacen&lt;/code&gt; creates a new &lt;a href=&quot;string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, and copies the data from this string slice into it. While doing so, it attempts to find matches of a pattern. If it finds any, it replaces them with the replacement string slice at most &lt;code&gt;count&lt;/code&gt; times.</source>
          <target state="translated">&lt;code&gt;replacen&lt;/code&gt; は新しい&lt;a href=&quot;string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; を&lt;/a&gt;作成し、この文字列スライスからそこにデータをコピーします。その間、パターンの一致を見つけようとします。それがいずれかを見つけた場合、それはせいぜい置換文字列スライスに置き換え &lt;code&gt;count&lt;/code&gt; 回。</target>
        </trans-unit>
        <trans-unit id="7b0a2e84d7415dc958fe7758bd7cf63a180bb417" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;return&lt;/code&gt; - return from function</source>
          <target state="translated">&lt;code&gt;return&lt;/code&gt; -関数から戻る</target>
        </trans-unit>
        <trans-unit id="c15a670ff1938000c192dad14fac98a79e2e3ac2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;return&lt;/code&gt; expressions</source>
          <target state="translated">&lt;code&gt;return&lt;/code&gt; 式</target>
        </trans-unit>
        <trans-unit id="67a81bce7735c4c8dcc873ea0d8ed586e63971f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;return&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;return&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="0c20b32549eb0c3e50bf26b6136d1fcb33d1aca0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;return&lt;/code&gt;&lt;code&gt;break&lt;/code&gt; closures</source>
          <target state="translated">&lt;code&gt;return&lt;/code&gt; &lt;code&gt;break&lt;/code&gt; クロージャーを</target>
        </trans-unit>
        <trans-unit id="f231dbdc06422e9ea5b9cfe17ce77515dd672e8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rfind()&lt;/code&gt; is short-circuiting; in other words, it will stop processing as soon as the closure returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rfind()&lt;/code&gt; はショートサーキットです。つまり、クロージャが &lt;code&gt;true&lt;/code&gt; を返すとすぐに処理を停止します。</target>
        </trans-unit>
        <trans-unit id="d97aff1d14d8fb997058b7557012d977906f7ad3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rfind()&lt;/code&gt; takes a closure that returns &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. It applies this closure to each element of the iterator, starting at the end, and if any of them return &lt;code&gt;true&lt;/code&gt;, then &lt;code&gt;rfind()&lt;/code&gt; returns &lt;a href=&quot;../option/enum.option#variant.Some&quot;&gt;&lt;code&gt;Some(element)&lt;/code&gt;&lt;/a&gt;. If they all return &lt;code&gt;false&lt;/code&gt;, it returns &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;rfind()&lt;/code&gt; は、 &lt;code&gt;true&lt;/code&gt; または &lt;code&gt;false&lt;/code&gt; を返すクロージャを取ります。このクロージャーをイテレーターの各要素の最後から適用し、それらのいずれかが &lt;code&gt;true&lt;/code&gt; を返す場合、 &lt;code&gt;rfind()&lt;/code&gt; は&lt;a href=&quot;../option/enum.option#variant.Some&quot;&gt; &lt;code&gt;Some(element)&lt;/code&gt; を&lt;/a&gt;返します。それらがすべて &lt;code&gt;false&lt;/code&gt; を返す場合、&lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="0469fbc0fcd72dff61e3038e1b41c1ee7696ac80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rfold()&lt;/code&gt; takes two arguments: an initial value, and a closure with two arguments: an 'accumulator', and an element. The closure returns the value that the accumulator should have for the next iteration.</source>
          <target state="translated">&lt;code&gt;rfold()&lt;/code&gt; は、2つの引数初期値）と、2つの引数（「アキュムレータ」）と要素を持つクロージャを受け取ります。クロージャは、次の反復でアキュムレータが持つべき値を返します。</target>
        </trans-unit>
        <trans-unit id="c315b4e152c3d9045dd11786d11f385ee7391d4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rposition()&lt;/code&gt; is short-circuiting; in other words, it will stop processing as soon as it finds a &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rposition()&lt;/code&gt; はショートサーキットです。つまり、 &lt;code&gt;true&lt;/code&gt; が見つかるとすぐに処理を停止します。。</target>
        </trans-unit>
        <trans-unit id="3f8832ab36f0d97e64ef12568fd3b388e8fc770d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rposition()&lt;/code&gt; takes a closure that returns &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. It applies this closure to each element of the iterator, starting from the end, and if one of them returns &lt;code&gt;true&lt;/code&gt;, then &lt;code&gt;rposition()&lt;/code&gt; returns &lt;a href=&quot;../option/enum.option#variant.Some&quot;&gt;&lt;code&gt;Some(index)&lt;/code&gt;&lt;/a&gt;. If all of them return &lt;code&gt;false&lt;/code&gt;, it returns &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;rposition()&lt;/code&gt; は、 &lt;code&gt;true&lt;/code&gt; または &lt;code&gt;false&lt;/code&gt; を返すクロージャを取ります。このクロージャーを反復子の各要素に最後から適用し、そのうちの1つが &lt;code&gt;true&lt;/code&gt; を返す場合、 &lt;code&gt;rposition()&lt;/code&gt; は&lt;a href=&quot;../option/enum.option#variant.Some&quot;&gt; &lt;code&gt;Some(index)&lt;/code&gt; を&lt;/a&gt;返します。それらのすべてが &lt;code&gt;false&lt;/code&gt; を返す場合、&lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="44187ffc6652aaa7c984920b559cb964fc11164b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scan()&lt;/code&gt; takes two arguments: an initial value which seeds the internal state, and a closure with two arguments, the first being a mutable reference to the internal state and the second an iterator element. The closure can assign to the internal state to share state between iterations.</source>
          <target state="translated">&lt;code&gt;scan()&lt;/code&gt; は2つの引数を取ります。内部状態をシードする初期値と2つの引数を持つクロージャーです。最初の引数は内部状態への変更可能な参照で、2番目の引数は反復子要素です。クロージャーは、反復間で状態を共有するために内部状態に割り当てることができます。</target>
        </trans-unit>
        <trans-unit id="b7e4087a59d7db17a93ec98d1a6e141c27cefeb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt; - method subject or current module</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; -メソッドのサブジェクトまたは現在のモジュール</target>
        </trans-unit>
        <trans-unit id="5a57893af25bf81ba3c2d3e57e6480c1e0642a56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt; resolves the path relative to the current module. &lt;code&gt;self&lt;/code&gt; can only be used as the first segment, without a preceding &lt;code&gt;::&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; は現在のモジュールからの相対パスを解決します。 &lt;code&gt;self&lt;/code&gt; は、先頭の &lt;code&gt;::&lt;/code&gt; なしで、最初のセグメントとしてのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="82740239487244545117186e09a09c10f8b9fdfd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;separated complex NT&lt;/code&gt;: a complex NT that has its own separator token.</source>
          <target state="translated">&lt;code&gt;separated complex NT&lt;/code&gt; ：独自の分離トークンを持つ複雑なNT。</target>
        </trans-unit>
        <trans-unit id="05b574e7c6fd33234ec611e29bcd10bb6d5d9405" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;separator token&lt;/code&gt;: an optional delimiter token in an complex NT that separates each pair of elements in the matched repetition.</source>
          <target state="translated">&lt;code&gt;separator token&lt;/code&gt; ：複合NTのオプションの区切りトークンで、一致した繰り返しの要素の各ペアを区切ります。</target>
        </trans-unit>
        <trans-unit id="f640c658e0dc190b95d5120e0f41acc1036e6277" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;simple NT&lt;/code&gt;: a &quot;meta-variable&quot; non-terminal (further discussion below).</source>
          <target state="translated">&lt;code&gt;simple NT&lt;/code&gt; ：「メタ変数」の非ターミナル（以下でさらに説明）。</target>
        </trans-unit>
        <trans-unit id="1f33d4f90ab86cc078ac8802a8cffe79680a48bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;since&lt;/code&gt; &amp;mdash; Specifies a version number when the item was deprecated. &lt;code&gt;rustc&lt;/code&gt; does not currently interpret the string, but external tools like &lt;a href=&quot;https://github.com/rust-lang/rust-clippy&quot;&gt;Clippy&lt;/a&gt; may check the validity of the value.</source>
          <target state="translated">&lt;code&gt;since&lt;/code&gt; &amp;mdash;アイテムが廃止されたときのバージョン番号を指定します。 &lt;code&gt;rustc&lt;/code&gt; は現在文字列を解釈しませんが、&lt;a href=&quot;https://github.com/rust-lang/rust-clippy&quot;&gt;Clippy&lt;/a&gt;などの外部ツールが値の有効性をチェックする場合があります。</target>
        </trans-unit>
        <trans-unit id="e6561540a07c369427c9b5c968c7291f45dab48b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size&lt;/code&gt;, when rounded up to the nearest multiple of &lt;code&gt;align&lt;/code&gt;, must not overflow (i.e., the rounded value must be less than &lt;code&gt;usize::MAX&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; は、 &lt;code&gt;align&lt;/code&gt; の最も近い倍数に切り上げられた場合、オーバーフローしてはなりません（つまり、丸められた値は &lt;code&gt;usize::MAX&lt;/code&gt; より小さくなければなりません）。</target>
        </trans-unit>
        <trans-unit id="d17aa1d875dfa9b462d34dfe331e338ba203115a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size_hint()&lt;/code&gt; is primarily intended to be used for optimizations such as reserving space for the elements of the iterator, but must not be trusted to e.g., omit bounds checks in unsafe code. An incorrect implementation of &lt;code&gt;size_hint()&lt;/code&gt; should not lead to memory safety violations.</source>
          <target state="translated">&lt;code&gt;size_hint()&lt;/code&gt; は、主にイテレータの要素のスペースを予約するなどの最適化に使用することを目的としていますが、安全でないコードで境界チェックを省略するなど、信頼してはなりません。 &lt;code&gt;size_hint()&lt;/code&gt; の誤った実装は、メモリの安全性違反につながるべきではありません。</target>
        </trans-unit>
        <trans-unit id="4f70e02bad1fb8a115ec2bfeaeadee2c07c0caa1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;skip_while()&lt;/code&gt; takes a closure as an argument. It will call this closure on each element of the iterator, and ignore elements until it returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;skip_while()&lt;/code&gt; は、引数としてクロージャーを取ります。イテレータの各要素でこのクロージャを呼び出し、 &lt;code&gt;false&lt;/code&gt; を返すまで要素を無視します。</target>
        </trans-unit>
        <trans-unit id="2325ded05106fa9a2bed447d21025c84f50f5ea3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;src&lt;/code&gt; is the range within &lt;code&gt;self&lt;/code&gt; to copy from. &lt;code&gt;dest&lt;/code&gt; is the starting index of the range within &lt;code&gt;self&lt;/code&gt; to copy to, which will have the same length as &lt;code&gt;src&lt;/code&gt;. The two ranges may overlap. The ends of the two ranges must be less than or equal to &lt;code&gt;self.len()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; は、コピー元となる &lt;code&gt;self&lt;/code&gt; 内の範囲です。 &lt;code&gt;dest&lt;/code&gt; は、コピーする &lt;code&gt;self&lt;/code&gt; 内の範囲の開始インデックスであり、 &lt;code&gt;src&lt;/code&gt; と同じ長さになります。2つの範囲は重複する場合があります。2つの範囲の両端は、 &lt;code&gt;self.len()&lt;/code&gt; 以下でなければなりません。</target>
        </trans-unit>
        <trans-unit id="c0917646d8728988487d064fac2c14f59a665065" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;src&lt;/code&gt; must be &lt;a href=&quot;../ptr/index#safety&quot;&gt;valid&lt;/a&gt; for reads of &lt;code&gt;count * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; bytes.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; は &lt;code&gt;count * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; バイトの読み取りに&lt;a href=&quot;../ptr/index#safety&quot;&gt;有効&lt;/a&gt;である必要があります。</target>
        </trans-unit>
        <trans-unit id="154a0d95375b0182f8e4fdfa80a253d710d41383" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;src&lt;/code&gt; must be &lt;a href=&quot;index#safety&quot;&gt;valid&lt;/a&gt; for reads of &lt;code&gt;count * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; bytes.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; は &lt;code&gt;count * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; バイトの読み取りに&lt;a href=&quot;index#safety&quot;&gt;有効&lt;/a&gt;である必要があります。</target>
        </trans-unit>
        <trans-unit id="c3932aaae250c78900aaba45274ae965ddbcd18a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;src&lt;/code&gt; must be &lt;a href=&quot;index#safety&quot;&gt;valid&lt;/a&gt; for reads.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; は読み取りに&lt;a href=&quot;index#safety&quot;&gt;有効&lt;/a&gt;でなければなりません。</target>
        </trans-unit>
        <trans-unit id="1eb5075986eee387a9acdc56f4940da2f7a19994" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;src&lt;/code&gt; must be properly aligned.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; は正しく位置合わせする必要があります。</target>
        </trans-unit>
        <trans-unit id="f441a811656a0c3dd4a6016a7503878191979ea2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;src&lt;/code&gt; must be properly aligned. Use &lt;a href=&quot;fn.read_unaligned&quot;&gt;&lt;code&gt;read_unaligned&lt;/code&gt;&lt;/a&gt; if this is not the case.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; は正しく位置合わせする必要があります。そうでない場合は、&lt;a href=&quot;fn.read_unaligned&quot;&gt; &lt;code&gt;read_unaligned&lt;/code&gt; を&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="25e236aef0934c86a0d74b6088d301f4eaca2720" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;static&lt;/code&gt; &amp;mdash; Indicates a static library.</source>
          <target state="translated">&lt;code&gt;static&lt;/code&gt; &amp;mdash;静的ライブラリを示します。</target>
        </trans-unit>
        <trans-unit id="64cb1a64239891af05cbbbc93d77402f661c4c47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;static&lt;/code&gt; - global variable or lifetime lasting the entire program execution</source>
          <target state="translated">&lt;code&gt;static&lt;/code&gt; -プログラム全体で実行されるグローバル変数またはライフタイム</target>
        </trans-unit>
        <trans-unit id="ebbc410882f7d5448c407ca5659024240a6dda57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;static&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; statements (similar to &lt;code&gt;let&lt;/code&gt; statements).</source>
          <target state="translated">&lt;code&gt;static&lt;/code&gt; および &lt;code&gt;const&lt;/code&gt; ステートメント（ &lt;code&gt;let&lt;/code&gt; ステートメントと同様）。</target>
        </trans-unit>
        <trans-unit id="c95a320ef3efcbc4189ba9ec5c6dd858f287b25e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;static&lt;/code&gt;&lt;code&gt;mut&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;static&lt;/code&gt;&lt;code&gt;mut&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0919ec1ea19851132893298b32894f6e70049d6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;static&lt;/code&gt;&lt;code&gt;mut&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;=&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;static&lt;/code&gt;&lt;code&gt;mut&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;=&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bcb4b5702c1587354d79a6cfe054038f4afdf76a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;std::*&lt;/code&gt; modules</source>
          <target state="translated">&lt;code&gt;std::*&lt;/code&gt; モジュール</target>
        </trans-unit>
        <trans-unit id="4f28c89525ec17874a17d9bd45904c60323a26a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;std&lt;/code&gt; is available to all Rust crates by default. Therefore, the standard library can be accessed in &lt;a href=&quot;../book/ch07-02-defining-modules-to-control-scope-and-privacy&quot;&gt;&lt;code&gt;use&lt;/code&gt;&lt;/a&gt; statements through the path &lt;code&gt;std&lt;/code&gt;, as in &lt;a href=&quot;env/index&quot;&gt;&lt;code&gt;use std::env&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;std&lt;/code&gt; は、すべてのRustクレートでデフォルトで使用できます。したがって、&lt;a href=&quot;../book/ch07-02-defining-modules-to-control-scope-and-privacy&quot;&gt; &lt;code&gt;use&lt;/code&gt; &lt;/a&gt;文では、&lt;a href=&quot;env/index&quot;&gt; &lt;code&gt;use std::env&lt;/code&gt; &lt;/a&gt;ように、パス &lt;code&gt;std&lt;/code&gt; を介して標準ライブラリにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="1547b82dd2d11f511fe70c22b40a48ae8af6fcc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stmt&lt;/code&gt;: a &lt;a href=&quot;statements&quot;&gt;&lt;em&gt;Statement&lt;/em&gt;&lt;/a&gt; without the trailing semicolon (except for item statements that require semicolons)</source>
          <target state="translated">&lt;code&gt;stmt&lt;/code&gt; ：末尾にセミコロンがない&lt;a href=&quot;statements&quot;&gt;&lt;em&gt;ステートメント&lt;/em&gt;&lt;/a&gt;（セミコロンを必要とする項目ステートメントを除く）</target>
        </trans-unit>
        <trans-unit id="ceaa90f7c3072ac3a54aa7d6730427ba6ddb60c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;store&lt;/code&gt; takes an &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; argument which describes the memory ordering of this operation. Possible values are &lt;a href=&quot;enum.ordering#variant.SeqCst&quot;&gt;&lt;code&gt;SeqCst&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;store&lt;/code&gt; は、この操作のメモリの順序を表す&lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt;引数を取ります。可能な値は&lt;a href=&quot;enum.ordering#variant.SeqCst&quot;&gt; &lt;code&gt;SeqCst&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;enum.ordering#variant.Release&quot;&gt; &lt;code&gt;Release&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="90ca25a4f034af9b8f70f21c2dbba7f666343917" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;str&lt;/code&gt; Layout</source>
          <target state="translated">&lt;code&gt;str&lt;/code&gt; レイアウト</target>
        </trans-unit>
        <trans-unit id="f30de198812b944ea0c38ae5504032c4739c470e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;struct&lt;/code&gt; - define a structure</source>
          <target state="translated">&lt;code&gt;struct&lt;/code&gt; -構造を定義する</target>
        </trans-unit>
        <trans-unit id="2c6d46f9db815f3033748933785f1777882d397c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;struct&lt;/code&gt; literal</source>
          <target state="translated">&lt;code&gt;struct&lt;/code&gt; リテラル</target>
        </trans-unit>
        <trans-unit id="b36187fc68c888f2b17d4ce077c877670a9fd135" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;struct&lt;/code&gt; types are analogous to &lt;code&gt;struct&lt;/code&gt; types in C, the &lt;em&gt;record&lt;/em&gt; types of the ML family, or the &lt;em&gt;struct&lt;/em&gt; types of the Lisp family.</source>
          <target state="translated">&lt;code&gt;struct&lt;/code&gt; タイプはに類似してい &lt;code&gt;struct&lt;/code&gt; C内の型、&lt;em&gt;レコード&lt;/em&gt; MLファミリーのタイプ、または&lt;em&gt;構造体&lt;/em&gt;のLispファミリーのタイプを。</target>
        </trans-unit>
        <trans-unit id="be5f6f327cf8b30e85ebbea7ea5017ce1ec6c3d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;struct&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt; ( &lt;code&gt;{&lt;/code&gt;&lt;em&gt;StructFields&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;}&lt;/code&gt; | &lt;code&gt;;&lt;/code&gt; )</source>
          <target state="translated">&lt;code&gt;struct&lt;/code&gt; &lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER &lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;？&lt;/sup&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;？&lt;/sup&gt;（ &lt;code&gt;{&lt;/code&gt; &lt;em&gt;StructFields &lt;/em&gt;&lt;sup&gt;？&lt;/sup&gt; &lt;code&gt;}&lt;/code&gt; | &lt;code&gt;;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="0a1ee96ffae5bfefba492eb9b5a6edea8df103dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;struct&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;(&lt;/code&gt;&lt;em&gt;TupleFields&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;struct&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;(&lt;/code&gt;&lt;em&gt;TupleFields&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="687ed7a00a27f7e2aef40cd3dd0438bf344c064a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;super&lt;/code&gt; - parent module of the current module</source>
          <target state="translated">&lt;code&gt;super&lt;/code&gt; -現在のモジュールの親モジュール</target>
        </trans-unit>
        <trans-unit id="0e7befa38ed89799a44b49feb18b6dc7bc329e1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;super&lt;/code&gt; in a path resolves to the parent module. It may only be used in leading segments of the path, possibly after an initial &lt;code&gt;self&lt;/code&gt; segment.</source>
          <target state="translated">&lt;code&gt;super&lt;/code&gt; パス内のスーパーは、親モジュールに解決されます。これは、パスの先頭のセグメントでのみ使用できます。最初の &lt;code&gt;self&lt;/code&gt; セグメントの後の可能性があります。</target>
        </trans-unit>
        <trans-unit id="6d05db176698bd65d99d4cfba8bd0a8376a5b0f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;super&lt;/code&gt; may be repeated several times after the first &lt;code&gt;super&lt;/code&gt; or &lt;code&gt;self&lt;/code&gt; to refer to ancestor modules.</source>
          <target state="translated">&lt;code&gt;super&lt;/code&gt; は、祖先モジュールを参照するために、最初の &lt;code&gt;super&lt;/code&gt; または &lt;code&gt;self&lt;/code&gt; の後に数回繰り返すことができます。</target>
        </trans-unit>
        <trans-unit id="f0cd48e5eef0ee4e5ad3fc6a5b00fe0f25cee1d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;swap&lt;/code&gt; takes an &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; argument which describes the memory ordering of this operation. All ordering modes are possible. Note that using &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; makes the store part of this operation &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;, and using &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; makes the load part &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;swap&lt;/code&gt; は、この操作のメモリの順序を記述する&lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt;引数を取ります。すべての注文モードが可能です。&lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt; &lt;code&gt;Acquire&lt;/code&gt; &lt;/a&gt;を使用すると、この操作のストア部分が&lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt;になり、&lt;a href=&quot;enum.ordering#variant.Release&quot;&gt; &lt;code&gt;Release&lt;/code&gt; &lt;/a&gt;を使用すると、ロード部分が&lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; になり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="f9a833f8c39d11f72a5179fc587e7727914596ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;take()&lt;/code&gt; is often used with an infinite iterator, to make it finite:</source>
          <target state="translated">&lt;code&gt;take()&lt;/code&gt; はしばしば、それを有限にするために、無限イテレータとともに使用されます。</target>
        </trans-unit>
        <trans-unit id="0c6d4555814b5e27a40b3405726eb1875f9f77f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;take&lt;/code&gt; allows taking ownership of a struct field by replacing it with an &quot;empty&quot; value. Without &lt;code&gt;take&lt;/code&gt; you can run into issues like these:</source>
          <target state="translated">&lt;code&gt;take&lt;/code&gt; は、構造体フィールドを「空の」値で置き換えることにより、その所有権を取得できます。 &lt;code&gt;take&lt;/code&gt; なしでは、次のような問題が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="1c4d5a989bdc653ef5b9d0180573ae1225eeeaa4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;take_while()&lt;/code&gt; takes a closure as an argument. It will call this closure on each element of the iterator, and yield elements while it returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;take_while()&lt;/code&gt; は引数としてクロージャを取ります。イテレータの各要素でこのクロージャを呼び出し、 &lt;code&gt;true&lt;/code&gt; を返す間要素を生成します。</target>
        </trans-unit>
        <trans-unit id="dca38561eaa0d2b3485495e518384f88d58e295a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_drop&lt;/code&gt; must be &lt;a href=&quot;../ptr/index#safety&quot;&gt;valid&lt;/a&gt; for reads.</source>
          <target state="translated">&lt;code&gt;to_drop&lt;/code&gt; は読み取りに&lt;a href=&quot;../ptr/index#safety&quot;&gt;有効&lt;/a&gt;である必要があります。</target>
        </trans-unit>
        <trans-unit id="24250e71bc280dcaf012673fb61adf6115e05b76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_drop&lt;/code&gt; must be &lt;a href=&quot;index#safety&quot;&gt;valid&lt;/a&gt; for reads.</source>
          <target state="translated">&lt;code&gt;to_drop&lt;/code&gt; は読み取りに&lt;a href=&quot;index#safety&quot;&gt;有効&lt;/a&gt;である必要があります。</target>
        </trans-unit>
        <trans-unit id="d65e1efb8b6b95806276fa89628096da65f3bf25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_drop&lt;/code&gt; must be properly aligned. See the example below for how to drop an unaligned pointer.</source>
          <target state="translated">&lt;code&gt;to_drop&lt;/code&gt; は適切に位置合わせする必要があります。非整列ポインターをドロップする方法については、以下の例を参照してください。</target>
        </trans-unit>
        <trans-unit id="36c9576b6f91bb2b8f6fa3a3a3fecf3d0448b670" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;token tree&lt;/code&gt;: a tree structure formed from tokens (the leaves), complex NT's, and finite sequences of token trees.</source>
          <target state="translated">&lt;code&gt;token tree&lt;/code&gt; ：トークン（葉）、複雑なNT、およびトークンツリーの有限シーケンスから形成されるツリー構造。</target>
        </trans-unit>
        <trans-unit id="dbae8bf5fef61c9952693677560e652cecf324f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;token&lt;/code&gt;: an atomic element of a matcher; i.e. identifiers, operators, open/close delimiters, &lt;em&gt;and&lt;/em&gt; simple NT's.</source>
          <target state="translated">&lt;code&gt;token&lt;/code&gt; ：マッチャーのアトミック要素。つまり、識別子、演算子、開閉の区切り記号、&lt;em&gt;および&lt;/em&gt;単純なNTです。</target>
        </trans-unit>
        <trans-unit id="1d261cfc33b3f42c8d5de636d023e7ee9d3539b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;trait + trait&lt;/code&gt;, &lt;code&gt;'a + trait&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;trait + trait&lt;/code&gt; 、 &lt;code&gt;'a + trait&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e8aeb78903d253f17ce950d7ce86cc47925788b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;trait&lt;/code&gt; - define a trait</source>
          <target state="translated">&lt;code&gt;trait&lt;/code&gt; - トレイトを定義する</target>
        </trans-unit>
        <trans-unit id="034f61b98a2845dfb551b61c03baf0c796699104" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transmute&lt;/code&gt; is &lt;strong&gt;incredibly&lt;/strong&gt; unsafe. There are a vast number of ways to cause &lt;a href=&quot;../../reference/behavior-considered-undefined&quot;&gt;undefined behavior&lt;/a&gt; with this function. &lt;code&gt;transmute&lt;/code&gt; should be the absolute last resort.</source>
          <target state="translated">&lt;code&gt;transmute&lt;/code&gt; は&lt;strong&gt;非常に&lt;/strong&gt;安全ではありません。この関数で&lt;a href=&quot;../../reference/behavior-considered-undefined&quot;&gt;未定義の動作&lt;/a&gt;を引き起こす方法は数多くあります。 &lt;code&gt;transmute&lt;/code&gt; は絶対的な最後の手段であるべきです。</target>
        </trans-unit>
        <trans-unit id="175fcd7de10c60db7596f63e7d92b1ff5ef63a16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transmute&lt;/code&gt; is semantically equivalent to a bitwise move of one type into another. It copies the bits from the source value into the destination value, then forgets the original. It's equivalent to C's &lt;code&gt;memcpy&lt;/code&gt; under the hood, just like &lt;code&gt;transmute_copy&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;transmute&lt;/code&gt; は、意味的に、あるタイプから別のタイプへのビット単位の移動と同等です。ソース値から宛先値にビットをコピーし、元の値を忘れます。 &lt;code&gt;transmute_copy&lt;/code&gt; と同じように、これはCの &lt;code&gt;memcpy&lt;/code&gt; のmemcpyと同等です。</target>
        </trans-unit>
        <trans-unit id="9b1e6c4a8fa90bfd9b072eb1e4ad10fb9a5cfe0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; - Boolean true literal</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; - Boolean trueのリテラル</target>
        </trans-unit>
        <trans-unit id="3d1d9f6406c7cd419678ba2a518aa0edbb8a78ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;try!&lt;/code&gt; matches the given &lt;a href=&quot;result/enum.result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt;. In case of the &lt;code&gt;Ok&lt;/code&gt; variant, the expression has the value of the wrapped value.</source>
          <target state="translated">&lt;code&gt;try!&lt;/code&gt; 指定された&lt;a href=&quot;result/enum.result&quot;&gt; &lt;code&gt;Result&lt;/code&gt; と&lt;/a&gt;一致します。以下の場合には &lt;code&gt;Ok&lt;/code&gt; 変異体は、発現は、ラップされた値の値を有します。</target>
        </trans-unit>
        <trans-unit id="29f7e94d4a82f9517634d924c7d5bc9b59da6428" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;try_fold()&lt;/code&gt; takes two arguments: an initial value, and a closure with two arguments: an 'accumulator', and an element. The closure either returns successfully, with the value that the accumulator should have for the next iteration, or it returns failure, with an error value that is propagated back to the caller immediately (short-circuiting).</source>
          <target state="translated">&lt;code&gt;try_fold()&lt;/code&gt; は2つの引数を取ります：初期値と2つの引数を持つクロージャ： 'アキュムレータ'と要素です。クロージャは、アキュムレータが次の反復のために持つべき値で正常に戻るか、エラー値を伴って失敗を返し、エラー値はすぐに呼び出し側に伝搬されます（短絡）。</target>
        </trans-unit>
        <trans-unit id="c9dbb3dbc94673c47f6803251cb5fae592f24819" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tt&lt;/code&gt;: a &lt;a href=&quot;macros#macro-invocation&quot;&gt;&lt;em&gt;TokenTree&lt;/em&gt;&lt;/a&gt; (a single &lt;a href=&quot;tokens&quot;&gt;token&lt;/a&gt; or tokens in matching delimiters &lt;code&gt;()&lt;/code&gt;, &lt;code&gt;[]&lt;/code&gt;, or &lt;code&gt;{}&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;tt&lt;/code&gt; ：&lt;a href=&quot;macros#macro-invocation&quot;&gt;&lt;em&gt;TokenTree&lt;/em&gt;&lt;/a&gt;（一致する区切り文字 &lt;code&gt;()&lt;/code&gt; 、 &lt;code&gt;[]&lt;/code&gt; 、または &lt;code&gt;{}&lt;/code&gt; 内の単一の&lt;a href=&quot;tokens&quot;&gt;トークン&lt;/a&gt;またはトークン群）</target>
        </trans-unit>
        <trans-unit id="3dd7fa85f0428b74821618eabd4dcdc9c6129636" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ty&lt;/code&gt;: a &lt;a href=&quot;types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;ty&lt;/code&gt; ：&lt;a href=&quot;types#type-expressions&quot;&gt;&lt;em&gt;タイプ&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1f19156090f13c0e758f648128584dd095e3ac88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type::ident&lt;/code&gt;, &lt;code&gt;&amp;lt;type as trait&amp;gt;::ident&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;type::ident&lt;/code&gt; 、 &lt;code&gt;&amp;lt;type as trait&amp;gt;::ident&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a6243bc35c4a5f7d3ba99fbf79ca05c5c7638dca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt; - define a type alias or associated type</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; -型エイリアスまたは関連するタイプを定義</target>
        </trans-unit>
        <trans-unit id="78453e1a389a3cd1eccac228fea75d93571f7806" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt; ( &lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TypeParamBounds&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt; )&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; &lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;（ &lt;code&gt;:&lt;/code&gt; &lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TypeParamBounds&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;？&lt;/sup&gt;）&lt;sup&gt;？&lt;/sup&gt; &lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9c75fe9982ba1b848a81443152678ea4e87f76cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;=&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;=&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3614618f326b5e16471f9332f930fafb0c388b66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;u16&lt;/code&gt; is treated as port of the newly created &lt;a href=&quot;../net/enum.socketaddr&quot;&gt;&lt;code&gt;SocketAddr&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;u16&lt;/code&gt; は、新しく作成された&lt;a href=&quot;../net/enum.socketaddr&quot;&gt; &lt;code&gt;SocketAddr&lt;/code&gt; の&lt;/a&gt;ポートとして扱われます。</target>
        </trans-unit>
        <trans-unit id="eea0a10535447994d2273798613463f4b3980fec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;u16&lt;/code&gt; is treated as port of the newly created &lt;a href=&quot;enum.socketaddr&quot;&gt;&lt;code&gt;SocketAddr&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;u16&lt;/code&gt; は、新しく作成された&lt;a href=&quot;enum.socketaddr&quot;&gt; &lt;code&gt;SocketAddr&lt;/code&gt; の&lt;/a&gt;ポートとして扱われます。</target>
        </trans-unit>
        <trans-unit id="2f1a6326a774c35e62bb7b315b36c24be7cf202f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;u8&lt;/code&gt; to &lt;code&gt;char&lt;/code&gt; cast</source>
          <target state="translated">&lt;code&gt;u8&lt;/code&gt; から &lt;code&gt;char&lt;/code&gt; キャスト</target>
        </trans-unit>
        <trans-unit id="e4f26eb956911719088b5c0bffbc986b5f9b7de3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;u8&lt;/code&gt; | &lt;code&gt;u16&lt;/code&gt; | &lt;code&gt;u32&lt;/code&gt; | &lt;code&gt;u64&lt;/code&gt; | &lt;code&gt;u128&lt;/code&gt; | &lt;code&gt;usize&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;u8&lt;/code&gt; | &lt;code&gt;u16&lt;/code&gt; | &lt;code&gt;u32&lt;/code&gt; | &lt;code&gt;u64&lt;/code&gt; | &lt;code&gt;u128&lt;/code&gt; | &lt;code&gt;usize&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d2337112e72d044e1b4d70325534427ef28ed7a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;u8&lt;/code&gt; | &lt;code&gt;u16&lt;/code&gt;, Block | Item</source>
          <target state="translated">&lt;code&gt;u8&lt;/code&gt; | &lt;code&gt;u16&lt;/code&gt; 、ブロック| 項目</target>
        </trans-unit>
        <trans-unit id="bd0d1066cf75fe5975a75c82dc257a3da4846bc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;u8&lt;/code&gt;, &lt;code&gt;i8&lt;/code&gt;, &lt;code&gt;u16&lt;/code&gt;, &lt;code&gt;i16&lt;/code&gt;, &lt;code&gt;u32&lt;/code&gt;, &lt;code&gt;i32&lt;/code&gt;, &lt;code&gt;u64&lt;/code&gt;, &lt;code&gt;i64&lt;/code&gt;, &lt;code&gt;u128&lt;/code&gt;, &lt;code&gt;i128&lt;/code&gt;, &lt;code&gt;usize&lt;/code&gt;, &lt;code&gt;isize&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;u8&lt;/code&gt; 、 &lt;code&gt;i8&lt;/code&gt; 、 &lt;code&gt;u16&lt;/code&gt; 、 &lt;code&gt;i16&lt;/code&gt; 、 &lt;code&gt;u32&lt;/code&gt; 、 &lt;code&gt;i32&lt;/code&gt; 、 &lt;code&gt;u64&lt;/code&gt; 、 &lt;code&gt;i64&lt;/code&gt; 、 &lt;code&gt;u128&lt;/code&gt; 、 &lt;code&gt;i128&lt;/code&gt; 、 &lt;code&gt;usize&lt;/code&gt; 、 &lt;code&gt;isize&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af4d4aaa5d7119b01bc4b46793c55424d1c7bdc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uninit&lt;/code&gt; is unsafe because there is no guarantee of what its contents are. In particular its drop-flag may be set to any state, which means it may claim either dropped or undropped. In the general case one must use &lt;code&gt;ptr::write&lt;/code&gt; to initialize memory previous set to the result of &lt;code&gt;uninit&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;uninit&lt;/code&gt; は、その内容が何であるかについての保証がないため、安全ではありません。特に、そのドロップフラグは任意の状態に設定できます。つまり、ドロップされた、またはドロップされていないことを要求できます。一般的なケースでは、 &lt;code&gt;ptr::write&lt;/code&gt; を使用して、以前のセットのメモリを &lt;code&gt;uninit&lt;/code&gt; の結果に初期化する必要があります。</target>
        </trans-unit>
        <trans-unit id="e84734326b9228c078d992e678358f7019aa6589" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;union&lt;/code&gt; is used to declare a &lt;a href=&quot;items/unions&quot;&gt;union&lt;/a&gt; and is only a keyword when used in a union declaration.</source>
          <target state="translated">&lt;code&gt;union&lt;/code&gt; 宣言するために使用されている&lt;a href=&quot;items/unions&quot;&gt;労働組合が&lt;/a&gt;労働組合の宣言で使用する場合にのみキーワードです。</target>
        </trans-unit>
        <trans-unit id="bc3b8191e2485b33816d2e7cf9395ebd6f0b1a38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;union&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;{&lt;/code&gt;&lt;a href=&quot;structs&quot;&gt;&lt;em&gt;StructFields&lt;/em&gt;&lt;/a&gt;&lt;code&gt;}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;union&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;{&lt;/code&gt;&lt;a href=&quot;structs&quot;&gt;&lt;em&gt;StructFields&lt;/em&gt;&lt;/a&gt;&lt;code&gt;}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b9fa04d3e3ffb533a96f1c314a534c52676f2f4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unix&lt;/code&gt; and &lt;code&gt;windows&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;unix&lt;/code&gt; と &lt;code&gt;windows&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="348330ca3bbf2eb4cff6e672d042e105af48ddcc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unix&lt;/code&gt; is set if &lt;code&gt;target_family = &quot;unix&quot;&lt;/code&gt; is set and &lt;code&gt;windows&lt;/code&gt; is set if &lt;code&gt;target_family = &quot;windows&quot;&lt;/code&gt; is set.</source>
          <target state="translated">&lt;code&gt;unix&lt;/code&gt; は &lt;code&gt;target_family = &quot;unix&quot;&lt;/code&gt; が設定されている場合に設定され、 &lt;code&gt;windows&lt;/code&gt; は &lt;code&gt;target_family = &quot;windows&quot;&lt;/code&gt; が設定されている場合に設定されます。</target>
        </trans-unit>
        <trans-unit id="805f2b9152d73be6994ac2a9ed4f55d25b3958ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe&lt;/code&gt; - denote unsafe code, functions, traits, or implementations</source>
          <target state="translated">&lt;code&gt;unsafe&lt;/code&gt; -安全でないコード、関数、特性、または実装を示します</target>
        </trans-unit>
        <trans-unit id="b8f5446501043cd72eba942178b8c8f9d7127e09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe&lt;/code&gt; blocks</source>
          <target state="translated">&lt;code&gt;unsafe&lt;/code&gt; ブロック</target>
        </trans-unit>
        <trans-unit id="e8e3345d0d20542f3961bfada324b4be5ae460c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe&lt;/code&gt; blocks and &lt;code&gt;const unsafe fn&lt;/code&gt; are allowed, but the body/block may only do the following unsafe operations:</source>
          <target state="translated">&lt;code&gt;unsafe&lt;/code&gt; ブロックと &lt;code&gt;const unsafe fn&lt;/code&gt; は許可されますが、本体/ブロックは次の安全でない操作のみを実行できます。</target>
        </trans-unit>
        <trans-unit id="fa370f536df8b7e006c8811ff9b5f6d3390758b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe&lt;/code&gt;&lt;em&gt;BlockExpression&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;unsafe&lt;/code&gt;&lt;em&gt;BlockExpression&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a6b449b84465a6dfedf9fdd8c4060055ec11634f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;impl&lt;/code&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;!&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../paths#paths-in-types&quot;&gt;&lt;em&gt;TypePath&lt;/em&gt;&lt;/a&gt;&lt;code&gt;for&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;unsafe&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;impl&lt;/code&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;!&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../paths#paths-in-types&quot;&gt;&lt;em&gt;TypePath&lt;/em&gt;&lt;/a&gt;&lt;code&gt;for&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c213f71744e3496c0a4c469e371467c7ccc65dc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;trait&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt; ( &lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TypeParamBounds&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt; )&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;{&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;unsafe&lt;/code&gt; &lt;sup&gt;？&lt;/sup&gt; &lt;code&gt;trait&lt;/code&gt; &lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER &lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;？&lt;/sup&gt;（ &lt;code&gt;:&lt;/code&gt; &lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TypeParamBounds&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;？&lt;/sup&gt;）&lt;sup&gt;？&lt;/sup&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;？&lt;/sup&gt; &lt;code&gt;{&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="abb0a77ab71ec0bbd26928506e21321581be6903" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unzip()&lt;/code&gt; consumes an entire iterator of pairs, producing two collections: one from the left elements of the pairs, and one from the right elements.</source>
          <target state="translated">&lt;code&gt;unzip()&lt;/code&gt; はペアのイテレータ全体を消費し、2つのコレクションを生成します。1つはペアの左要素から、もう1つは右要素からです。</target>
        </trans-unit>
        <trans-unit id="f456905a1d3d6d03c7b6621576a3403358714371" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;use&lt;/code&gt; - bring symbols into scope</source>
          <target state="translated">&lt;code&gt;use&lt;/code&gt; -シンボルをスコープに入れる</target>
        </trans-unit>
        <trans-unit id="14ae1a9aead1dddc54a27bba1ba6f3f1e2e22e18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;use&lt;/code&gt; Paths</source>
          <target state="translated">&lt;code&gt;use&lt;/code&gt; パスを使用</target>
        </trans-unit>
        <trans-unit id="5169fc857a584a19af23b472571ef92b6980c9ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;use&lt;/code&gt; Visibility</source>
          <target state="translated">&lt;code&gt;use&lt;/code&gt; 可視性を使用する</target>
        </trans-unit>
        <trans-unit id="f1bde37586217501db68bfc7d52534b8fcfd6058" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;use&lt;/code&gt; declarations</source>
          <target state="translated">&lt;code&gt;use&lt;/code&gt; 宣言</target>
        </trans-unit>
        <trans-unit id="232f6c6cf9d575813a9014b62ed17c56d46c8564" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;use&lt;/code&gt;&lt;em&gt;UseTree&lt;/em&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;use&lt;/code&gt;&lt;em&gt;UseTree&lt;/em&gt;&lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="66200641914a8ccaf8f122b32177d225ef47c976" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;use_max&lt;/code&gt; is the capacity that was (or would have been) returned when (if) the block was allocated via a call to &lt;code&gt;alloc_excess&lt;/code&gt; or &lt;code&gt;realloc_excess&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;use_max&lt;/code&gt; は、ブロックが &lt;code&gt;alloc_excess&lt;/code&gt; または &lt;code&gt;realloc_excess&lt;/code&gt; の呼び出しを介して割り当てられた場合に（もしあれば）返された（または返されたであろう）容量です。</target>
        </trans-unit>
        <trans-unit id="d608195115134d4ea9fea4472362792947f140f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;use_min&lt;/code&gt; is &lt;code&gt;self.usable_size(layout).0&lt;/code&gt;, and</source>
          <target state="translated">&lt;code&gt;use_min&lt;/code&gt; は &lt;code&gt;self.usable_size(layout).0&lt;/code&gt; であり、</target>
        </trans-unit>
        <trans-unit id="55b38fa0b1ef7073555973d244758d06cb19996e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;usize&lt;/code&gt; and &lt;code&gt;isize&lt;/code&gt; have a size big enough to contain every address on the target platform. For example, on a 32 bit target, this is 4 bytes and on a 64 bit target, this is 8 bytes.</source>
          <target state="translated">&lt;code&gt;usize&lt;/code&gt; と &lt;code&gt;isize&lt;/code&gt; のサイズは、ターゲットプラットフォームのすべてのアドレスを含めるのに十分な大きさです。たとえば、32ビットターゲットの場合は4バイト、64ビットターゲットの場合は8バイトです。</target>
        </trans-unit>
        <trans-unit id="8517555f62051bd887048d0f96f8011d175bf39e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;var = expr&lt;/code&gt;, &lt;code&gt;ident = type&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;var = expr&lt;/code&gt; 、 &lt;code&gt;ident = type&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2e1f1b24a5b6675ef99987af788624aa2117200b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;variant(x, ..)&lt;/code&gt;, &lt;code&gt;struct_type { x, .. }&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;variant(x, ..)&lt;/code&gt; 、 &lt;code&gt;struct_type { x, .. }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="75ce46d92480cdcd4600e7f8c69b733a667507a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vec!&lt;/code&gt; allows &lt;code&gt;Vec&lt;/code&gt;s to be defined with the same syntax as array expressions. There are two forms of this macro:</source>
          <target state="translated">&lt;code&gt;vec!&lt;/code&gt; &lt;code&gt;Vec&lt;/code&gt; を配列式と同じ構文で定義できます。このマクロには2つの形式があります。</target>
        </trans-unit>
        <trans-unit id="fbd1def4fd4e7409afc8f13d7310b1ad7193138a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vec![x; n]&lt;/code&gt;, &lt;code&gt;vec![a, b, c, d]&lt;/code&gt;, and &lt;a href=&quot;struct.vec#method.with_capacity&quot;&gt;&lt;code&gt;Vec::with_capacity(n)&lt;/code&gt;&lt;/a&gt;, will all produce a &lt;code&gt;Vec&lt;/code&gt; with exactly the requested capacity. If &lt;a href=&quot;struct.vec#method.len&quot;&gt;&lt;code&gt;len&lt;/code&gt;&lt;/a&gt;&lt;code&gt;==&lt;/code&gt;&lt;a href=&quot;struct.vec#method.capacity&quot;&gt;&lt;code&gt;capacity&lt;/code&gt;&lt;/a&gt;, (as is the case for the &lt;a href=&quot;../macro.vec&quot;&gt;&lt;code&gt;vec!&lt;/code&gt;&lt;/a&gt; macro), then a &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; can be converted to and from a &lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&amp;lt;[T]&amp;gt;&lt;/code&gt;&lt;/a&gt; without reallocating or moving the elements.</source>
          <target state="translated">&lt;code&gt;vec![x; n]&lt;/code&gt; 、 &lt;code&gt;vec![a, b, c, d]&lt;/code&gt; 、および&lt;a href=&quot;struct.vec#method.with_capacity&quot;&gt; &lt;code&gt;Vec::with_capacity(n)&lt;/code&gt; &lt;/a&gt;はすべて、要求された容量の &lt;code&gt;Vec&lt;/code&gt; を生成します。場合&lt;a href=&quot;struct.vec#method.len&quot;&gt; &lt;code&gt;len&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;==&lt;/code&gt; &lt;a href=&quot;struct.vec#method.capacity&quot;&gt; &lt;code&gt;capacity&lt;/code&gt; &lt;/a&gt;（の場合のように、&lt;a href=&quot;../macro.vec&quot;&gt; &lt;code&gt;vec!&lt;/code&gt; &lt;/a&gt;マクロ）、次いでA &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; にから変換することができる&lt;a href=&quot;../boxed/struct.box&quot;&gt; &lt;code&gt;Box&amp;lt;[T]&amp;gt;&lt;/code&gt; &lt;/a&gt;再配置又は要素を移動させず。</target>
        </trans-unit>
        <trans-unit id="2d08b44ca2e8c97b5ffc525b474768abf57a3776" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vis&lt;/code&gt; may only be followed by one of: &lt;code&gt;,&lt;/code&gt;, an identifier other than a non-raw &lt;code&gt;priv&lt;/code&gt;, any token that can begin a type, or a metavariable with a &lt;code&gt;ident&lt;/code&gt;, &lt;code&gt;ty&lt;/code&gt;, or &lt;code&gt;path&lt;/code&gt; fragment specifier.</source>
          <target state="translated">&lt;code&gt;vis&lt;/code&gt; ：唯一のいずれかが続くことがあり &lt;code&gt;,&lt;/code&gt; 非生以外の識別子 &lt;code&gt;priv&lt;/code&gt; 、タイプ、または有するメタ変数を開始することができる任意のトークン &lt;code&gt;ident&lt;/code&gt; 、 &lt;code&gt;ty&lt;/code&gt; 、または &lt;code&gt;path&lt;/code&gt; フラグメント指定子。</target>
        </trans-unit>
        <trans-unit id="f91c2c8cc6543bfd4e86094ff90e3a9ce854567d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vis&lt;/code&gt;: a possibly empty &lt;a href=&quot;visibility-and-privacy&quot;&gt;&lt;em&gt;Visibility&lt;/em&gt;&lt;/a&gt; qualifier</source>
          <target state="translated">&lt;code&gt;vis&lt;/code&gt; ：空の&lt;a href=&quot;visibility-and-privacy&quot;&gt;&lt;em&gt;Visibility&lt;/em&gt;&lt;/a&gt;修飾子</target>
        </trans-unit>
        <trans-unit id="76143324a8d362fe9906ff5b06906dd181169374" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;warn(C)&lt;/code&gt; warns about violations of &lt;code&gt;C&lt;/code&gt; but continues compilation.</source>
          <target state="translated">&lt;code&gt;warn(C)&lt;/code&gt; は &lt;code&gt;C&lt;/code&gt; の違反について警告しますが、コンパイルは続行します。</target>
        </trans-unit>
        <trans-unit id="5ed18d103b24e9d9ef79833b0840427fc16e4165" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;where&lt;/code&gt; ( &lt;em&gt;WhereClauseItem&lt;/em&gt;&lt;code&gt;,&lt;/code&gt; )&lt;sup&gt;*&lt;/sup&gt;&lt;em&gt;WhereClauseItem&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;where&lt;/code&gt; （&lt;em&gt;WhereClauseItem &lt;/em&gt; &lt;code&gt;,&lt;/code&gt; ）&lt;sup&gt;* &lt;/sup&gt;&lt;em&gt;WhereClauseItem &lt;/em&gt;&lt;sup&gt;？&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="46fff36fad83b20aa97b4640a9571fd166f8cb3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;where&lt;/code&gt; - denote clauses that constrain a type</source>
          <target state="translated">&lt;code&gt;where&lt;/code&gt; -タイプを制約示す条項</target>
        </trans-unit>
        <trans-unit id="6e107977b55bce4f228fbc34edfc92b750ccde8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;where&lt;/code&gt; clauses must use generic type parameters: it does not make sense to use them otherwise. An example causing this error:</source>
          <target state="translated">&lt;code&gt;where&lt;/code&gt; 句はジェネリック型パラメーターを使用する必要があります。それ以外の場合は使用しません。このエラーの原因となる例：</target>
        </trans-unit>
        <trans-unit id="a805febf23aefbedce95cfd9e535dfc8d88a2060" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;while foo(&amp;amp;temp()) {bar();}&lt;/code&gt;. The temporary containing the return value from the call to &lt;code&gt;temp()&lt;/code&gt; is created in the loop conditional expression. Hence it will be freed at the end of the loop conditional expression; in this example before the call to &lt;code&gt;bar&lt;/code&gt; if the loop body is executed.</source>
          <target state="translated">&lt;code&gt;while foo(&amp;amp;temp()) {bar();}&lt;/code&gt; 。 &lt;code&gt;temp()&lt;/code&gt; の呼び出しからの戻り値を含む一時変数は、ループ条件式で作成されます。したがって、ループ条件式の最後で解放されます。この例では、ループ本体が実行される場合の &lt;code&gt;bar&lt;/code&gt; の呼び出し前。</target>
        </trans-unit>
        <trans-unit id="2198a7aaf735574c836bd8137d8e90a6901689d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;while let&lt;/code&gt; expressions</source>
          <target state="translated">&lt;code&gt;while let&lt;/code&gt; 式を聞かせながら</target>
        </trans-unit>
        <trans-unit id="921bef7a3e65fdbb7f908d578534f5b7317761c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;while&lt;/code&gt; - loop conditionally based on the result of an expression</source>
          <target state="translated">&lt;code&gt;while&lt;/code&gt; 条件付き式の結果に基づいてループ-</target>
        </trans-unit>
        <trans-unit id="a9b4d0912cc7b8dba0ecbcf87816f452ee5f70dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;while&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;sub&gt;except struct expression&lt;/sub&gt;&lt;a href=&quot;block-expr&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;while&lt;/code&gt; &lt;sub&gt;struct &lt;/sub&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;式&lt;/em&gt;&lt;/a&gt;&lt;sub&gt;以外の式&lt;/sub&gt;&lt;a href=&quot;block-expr&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="82a119d968bd20b54a077326e844d3f9dfc3789f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;while&lt;/code&gt;&lt;code&gt;let&lt;/code&gt;&lt;a href=&quot;match-expr&quot;&gt;&lt;em&gt;MatchArmPatterns&lt;/em&gt;&lt;/a&gt;&lt;code&gt;=&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;sub&gt;except struct expression&lt;/sub&gt;&lt;a href=&quot;block-expr&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;while&lt;/code&gt; &lt;code&gt;let&lt;/code&gt; &lt;a href=&quot;match-expr&quot;&gt;&lt;em&gt;MatchArmPatterns&lt;/em&gt;&lt;/a&gt; &lt;code&gt;=&lt;/code&gt; &lt;sub&gt;構造体&lt;/sub&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;式&lt;/em&gt;&lt;/a&gt;&lt;sub&gt;以外の式&lt;/sub&gt;&lt;a href=&quot;block-expr&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9725c6db67ef47c4123c705d0b5bcff6ee2a61d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;write&lt;/code&gt; does not drop the contents of &lt;code&gt;dst&lt;/code&gt;. This is safe, but it could leak allocations or resources, so care should be taken not to overwrite an object that should be dropped.</source>
          <target state="translated">&lt;code&gt;write&lt;/code&gt; は &lt;code&gt;dst&lt;/code&gt; の内容を削除しません。これは安全ですが、割り当てやリソースがリークする可能性があるため、削除する必要があるオブジェクトを上書きしないように注意する必要があります。</target>
        </trans-unit>
        <trans-unit id="ddc34afa23fa651f44486b9ec6afe1675fa1ae1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;write_bytes&lt;/code&gt; is similar to C's &lt;a href=&quot;https://en.cppreference.com/w/c/string/byte/memset&quot;&gt;&lt;code&gt;memset&lt;/code&gt;&lt;/a&gt;, but sets &lt;code&gt;count * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; bytes to &lt;code&gt;val&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;write_bytes&lt;/code&gt; はCの&lt;a href=&quot;https://en.cppreference.com/w/c/string/byte/memset&quot;&gt; &lt;code&gt;memset&lt;/code&gt; に&lt;/a&gt;似ていますが、 &lt;code&gt;count * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; バイトを &lt;code&gt;val&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="054a9108334d065897c67d31900457afaf2eff38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;write_unaligned&lt;/code&gt; does not drop the contents of &lt;code&gt;dst&lt;/code&gt;. This is safe, but it could leak allocations or resources, so care should be taken not to overwrite an object that should be dropped.</source>
          <target state="translated">&lt;code&gt;write_unaligned&lt;/code&gt; は &lt;code&gt;dst&lt;/code&gt; の内容を削除しません。これは安全ですが、割り当てやリソースがリークする可能性があるため、削除する必要があるオブジェクトを上書きしないように注意する必要があります。</target>
        </trans-unit>
        <trans-unit id="0cb4125bd17c272925aea82766043022e2093246" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;write_volatile&lt;/code&gt; does not drop the contents of &lt;code&gt;dst&lt;/code&gt;. This is safe, but it could leak allocations or resources, so care should be taken not to overwrite an object that should be dropped.</source>
          <target state="translated">&lt;code&gt;write_volatile&lt;/code&gt; は &lt;code&gt;dst&lt;/code&gt; の内容を削除しません。これは安全ですが、割り当てやリソースがリークする可能性があるため、削除する必要があるオブジェクトを上書きしないように注意する必要があります。</target>
        </trans-unit>
        <trans-unit id="8276083d136c27da43c9907e5cdba7fc594950a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x &amp;gt;= 0&lt;/code&gt;: &lt;code&gt;arctan(y/x)&lt;/code&gt; -&amp;gt; &lt;code&gt;[-pi/2, pi/2]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x &amp;gt;= 0&lt;/code&gt; ： &lt;code&gt;arctan(y/x)&lt;/code&gt; -&amp;gt; &lt;code&gt;[-pi/2, pi/2]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0b5bbf457f12b8925eeebe054ee2e7627ea0aa6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x = 0&lt;/code&gt;, &lt;code&gt;y = 0&lt;/code&gt;: &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x = 0&lt;/code&gt; 、 &lt;code&gt;y = 0&lt;/code&gt; ： &lt;code&gt;0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cac4e5a63b3dddd8eb480045393d001706c0c924" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x86&lt;/code&gt; or &lt;code&gt;x86_64&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x86&lt;/code&gt; または &lt;code&gt;x86_64&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3b00e0b8945f50a14fa61d6e9a2b0332a4c6a1dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.lowerhex&quot;&gt;&lt;code&gt;LowerHex&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.lowerhex&quot;&gt; &lt;code&gt;LowerHex&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="025160341e85be696bd147a9a4541ba42341e742" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; formatting.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; フォーマット。</target>
        </trans-unit>
        <trans-unit id="e6a735703e80ddf3d43a9cb53dbbf35cd6648332" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 、 &lt;code&gt;while&lt;/code&gt; 、 &lt;code&gt;*&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa6059b34937a8c76b7e69ee691d0f5c18fd74f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x?&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.debug&quot;&gt;&lt;code&gt;Debug&lt;/code&gt;&lt;/a&gt; with lower-case hexadecimal integers</source>
          <target state="translated">&lt;code&gt;x?&lt;/code&gt; &amp;rArr; 小文字の16進整数で&lt;a href=&quot;trait.debug&quot;&gt; &lt;code&gt;Debug&lt;/code&gt; &lt;/a&gt;する</target>
        </trans-unit>
        <trans-unit id="c010c672c012cef8144a3c2ea0d4da05d2e7fa96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y &amp;gt;= 0&lt;/code&gt;: &lt;code&gt;arctan(y/x) + pi&lt;/code&gt; -&amp;gt; &lt;code&gt;(pi/2, pi]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;y &amp;gt;= 0&lt;/code&gt; ： &lt;code&gt;arctan(y/x) + pi&lt;/code&gt; -&amp;gt; &lt;code&gt;(pi/2, pi]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9913280959bcf6536763f373a06fe85b3b866062" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y &amp;lt; 0&lt;/code&gt;: &lt;code&gt;arctan(y/x) - pi&lt;/code&gt; -&amp;gt; &lt;code&gt;(-pi, -pi/2)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;y &amp;lt; 0&lt;/code&gt; ： &lt;code&gt;arctan(y/x) - pi&lt;/code&gt; &lt;code&gt;(-pi, -pi/2)&lt;/code&gt; -&amp;gt; （-pi 、-pi / 2）</target>
        </trans-unit>
        <trans-unit id="dc3dc24bbc59a13785c638cfa29eb558067b929c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zip()&lt;/code&gt; is often used to zip an infinite iterator to a finite one. This works because the finite iterator will eventually return &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, ending the zipper. Zipping with &lt;code&gt;(0..)&lt;/code&gt; can look a lot like &lt;a href=&quot;trait.iterator#method.enumerate&quot;&gt;&lt;code&gt;enumerate&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;zip()&lt;/code&gt; は、無限イテレータを有限イテレータに圧縮するためによく使用されます。これは、有限反復子が最終的に&lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; を&lt;/a&gt;返し、ジッパーを終了するため機能します。 &lt;code&gt;(0..)&lt;/code&gt; 圧縮すると、&lt;a href=&quot;trait.iterator#method.enumerate&quot;&gt; &lt;code&gt;enumerate&lt;/code&gt; の&lt;/a&gt;ようになります。</target>
        </trans-unit>
        <trans-unit id="1ae414c709e33c3350c16c90713b290b063a371c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zip()&lt;/code&gt; returns a new iterator that will iterate over two other iterators, returning a tuple where the first element comes from the first iterator, and the second element comes from the second iterator.</source>
          <target state="translated">&lt;code&gt;zip()&lt;/code&gt; は、他の2つの反復子を反復処理する新しい反復子を返し、最初の要素が最初の反復子から、2番目の要素が2番目の反復子からなるタプルを返します。</target>
        </trans-unit>
        <trans-unit id="c747b39d424c4c127d32ba50d56d1da6309879fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{&lt;/code&gt;&lt;a href=&quot;structs&quot;&gt;&lt;em&gt;StructFields&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;{&lt;/code&gt;&lt;a href=&quot;structs&quot;&gt;&lt;em&gt;StructFields&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d32b0513d1b98e371087b4eb163c3d26f2ab32e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{&lt;/code&gt;&lt;code&gt;}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;{&lt;/code&gt;&lt;code&gt;}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7ed79972f6f7f79a47068e04e16add33aff259f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;|&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt; ( &lt;code&gt;|&lt;/code&gt;&lt;a href=&quot;../patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt; )&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;|&lt;/code&gt; &lt;sup&gt;？&lt;/sup&gt;&lt;a href=&quot;../patterns&quot;&gt;&lt;em&gt;パターン&lt;/em&gt;&lt;/a&gt;（ &lt;code&gt;|&lt;/code&gt; &lt;a href=&quot;../patterns&quot;&gt;&lt;em&gt;パターン&lt;/em&gt;&lt;/a&gt;）&lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="3e9e4a1d79413f2c783c3985129cfcd9ace14a8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;~&lt;/code&gt;&lt;a href=&quot;expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;~&lt;/code&gt;&lt;a href=&quot;expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fc377ffbf59e15917ded85798b6434d0c79d5fe0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.array&quot;&gt;See also the array primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.array&quot;&gt;配列プリミティブ型も参照してください&lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5afe898a7ddade3301b919bc7b98efe0e6058fdb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.f32&quot;&gt;See also the &lt;code&gt;f32&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.f32&quot;&gt; &lt;code&gt;f32&lt;/code&gt; プリミティブ型も参照してください&lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9bc08298e33e2ecdf0888a6a61ec82422f09c61a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.f64&quot;&gt;See also the &lt;code&gt;f64&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.f64&quot;&gt; &lt;code&gt;f64&lt;/code&gt; プリミティブ型も参照してください&lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0d0a06c6bcf39135bd01b7dd5810efffad07bfba" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.i128&quot;&gt;See also the &lt;code&gt;i128&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.i128&quot;&gt; &lt;code&gt;i128&lt;/code&gt; プリミティブ型も参照してください&lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e46d7c1a98001ada23aacc00ad0acfcec133f38e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.i16&quot;&gt;See also the &lt;code&gt;i16&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.i16&quot;&gt; &lt;code&gt;i16&lt;/code&gt; プリミティブ型も参照してください&lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="93b00deff3e36bdc53fed2a9cac7284ea7b0c778" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.i32&quot;&gt;See also the &lt;code&gt;i32&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.i32&quot;&gt; &lt;code&gt;i32&lt;/code&gt; プリミティブ型も参照してください&lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="156e0a557d174e90ddf6cf3583116c84a9dee15c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.i64&quot;&gt;See also the &lt;code&gt;i64&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.i64&quot;&gt; &lt;code&gt;i64&lt;/code&gt; プリミティブ型も参照してください&lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fc160ff8ffee74ff77604c7ce32bf62e1fd258b7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.i8&quot;&gt;See also the &lt;code&gt;i8&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.i8&quot;&gt; &lt;code&gt;i8&lt;/code&gt; プリミティブ型も参照してください&lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d16336f499199cbfb74f9b6f69e3d9e23882b4b8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.isize&quot;&gt;See also the &lt;code&gt;isize&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.isize&quot;&gt; &lt;code&gt;isize&lt;/code&gt; プリミティブタイプも参照してください&lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e0cb4b94b9c8c01463e93bd16e042cf95ee2c64e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.pointer&quot;&gt;See also the pointer primitive types&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.pointer&quot;&gt;ポインタプリミティブタイプも参照してください&lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d4d3d757af0c56fd5735b0d5301a2da0f9ee1ef8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;See also the slice primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;スライスプリミティブタイプも参照してください&lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="012dc525e54452ca9e5513daa2b317478262a8a4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.str&quot;&gt;See also the &lt;code&gt;str&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;str&lt;/code&gt; プリミティブ型も参照してください&lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="afff95f99c68cafc1f9bbcaac001052edd8b1e40" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.u128&quot;&gt;See also the &lt;code&gt;u128&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.u128&quot;&gt; &lt;code&gt;u128&lt;/code&gt; プリミティブ型も参照してください&lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3d7f056041f87bf11e5967e21149325855cafcbf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.u16&quot;&gt;See also the &lt;code&gt;u16&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.u16&quot;&gt; &lt;code&gt;u16&lt;/code&gt; プリミティブ型も参照してください&lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="641d2f36ab10c6cd94d2d3af160150ae5d6727f4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.u32&quot;&gt;See also the &lt;code&gt;u32&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.u32&quot;&gt; &lt;code&gt;u32&lt;/code&gt; プリミティブ型も参照してください&lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="441e0403b4acb7dc1b791d3f82a64c9dc1aac5b4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.u64&quot;&gt;See also the &lt;code&gt;u64&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.u64&quot;&gt; &lt;code&gt;u64&lt;/code&gt; プリミティブ型も参照してください&lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d8f6f83eb8a6b4c59043b83e50c484d60b96451f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;See also the &lt;code&gt;u8&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.u8&quot;&gt; &lt;code&gt;u8&lt;/code&gt; プリミティブ型も参照してください&lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="21c2215b2e7378f4350b9cbb17bd270077b8f7d9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.usize&quot;&gt;See also the &lt;code&gt;usize&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.usize&quot;&gt; &lt;code&gt;usize&lt;/code&gt; プリミティブタイプも参照してください&lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3755d956ff02149ee56f84f936c4a79c5e59a075" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;f32/index&quot;&gt;See also the &lt;code&gt;std::f32&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;f32/index&quot;&gt; &lt;code&gt;std::f32&lt;/code&gt; モジュールも参照してください&lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3e3247c982f613de71992993ea86d058c3974dc4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;f64/index&quot;&gt;See also the &lt;code&gt;std::f64&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;f64/index&quot;&gt; &lt;code&gt;std::f64&lt;/code&gt; モジュールも参照してください&lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="edf3d15d8745c67fb84d8994eaddf9d1e04c5e0d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;i128/index&quot;&gt;See also the &lt;code&gt;std::i128&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;i128/index&quot;&gt; &lt;code&gt;std::i128&lt;/code&gt; モジュールも参照してください&lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="be30ad00b808390fe80fd2391b71bb056a65227e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;i16/index&quot;&gt;See also the &lt;code&gt;std::i16&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;i16/index&quot;&gt; &lt;code&gt;std::i16&lt;/code&gt; モジュールも参照してください&lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="188b02eb10822e25f1f315068f6a8f2057abb225" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;i32/index&quot;&gt;See also the &lt;code&gt;std::i32&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;i32/index&quot;&gt; &lt;code&gt;std::i32&lt;/code&gt; モジュールも参照してください&lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6ceac7726866419e153d0d3c52994db5fe0ef8e8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;i64/index&quot;&gt;See also the &lt;code&gt;std::i64&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;i64/index&quot;&gt; &lt;code&gt;std::i64&lt;/code&gt; モジュールも参照してください&lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7691514b6d93900c7943a77ca07f2b0b9ba7da66" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;i8/index&quot;&gt;See also the &lt;code&gt;std::i8&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;i8/index&quot;&gt; &lt;code&gt;std::i8&lt;/code&gt; モジュールも参照してください&lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="183e6c4e2632c343159b5362cf5789fcf8d616e6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;isize/index&quot;&gt;See also the &lt;code&gt;std::isize&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;isize/index&quot;&gt; &lt;code&gt;std::isize&lt;/code&gt; モジュールも参照してください&lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="52008a607ee91e4a6ca2a87dfc01495af8b05bad" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;ptr/index&quot;&gt;See also the &lt;code&gt;std::ptr&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;ptr/index&quot;&gt; &lt;code&gt;std::ptr&lt;/code&gt; モジュールも参照してください&lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b446fb280d5ecf908446abb0aaa3bfc2a2b109a3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;slice/index&quot;&gt;See also the &lt;code&gt;std::slice&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;slice/index&quot;&gt; &lt;code&gt;std::slice&lt;/code&gt; モジュールも参照してください&lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9589ef92f30f110cfa700b0f3b19b545732f4789" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;str/index&quot;&gt;See also the &lt;code&gt;std::str&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;str/index&quot;&gt; &lt;code&gt;std::str&lt;/code&gt; モジュールも参照してください&lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="97669e507582d88ff0ecc27318b816708a20d07a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;u128/index&quot;&gt;See also the &lt;code&gt;std::u128&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;u128/index&quot;&gt; &lt;code&gt;std::u128&lt;/code&gt; モジュールも参照してください&lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2f74a6f3e8587d7a4384628b6eb04ac060fa5f73" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;u16/index&quot;&gt;See also the &lt;code&gt;std::u16&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;u16/index&quot;&gt; &lt;code&gt;std::u16&lt;/code&gt; モジュールも参照してください&lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8ecd6227400d1feb039e4d2713cbd95f6fe31597" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;u32/index&quot;&gt;See also the &lt;code&gt;std::u32&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;u32/index&quot;&gt; &lt;code&gt;std::u32&lt;/code&gt; モジュールも参照してください&lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5b3976137d48100bdcd7648dfb2518526966187b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;u64/index&quot;&gt;See also the &lt;code&gt;std::u64&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;u64/index&quot;&gt; &lt;code&gt;std::u64&lt;/code&gt; モジュールも参照してください&lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b14a4674db1787eb1f4f3f6326efac88545cfae0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;u8/index&quot;&gt;See also the &lt;code&gt;std::u8&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;u8/index&quot;&gt; &lt;code&gt;std::u8&lt;/code&gt; モジュールも参照してください&lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9e26dfc27379e83ee98ee0278a32aa28cd01c29f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;usize/index&quot;&gt;See also the &lt;code&gt;std::usize&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;usize/index&quot;&gt; &lt;code&gt;std::usize&lt;/code&gt; モジュールも参照してください&lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="171845cf214853b0c7d13267275f2e59cc8fd49d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;A &lt;code&gt;\r&lt;/code&gt; not followed by a &lt;code&gt;\n&lt;/code&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;\r&lt;/code&gt; 続かない &lt;code&gt;\n&lt;/code&gt; &lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="896fb33c45a7e28daf5fae1c1416751fa7aa0637" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Abi&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;アビ&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="7af965bf10928c2c6e2403bc2ce7cb98a024f8ae" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ArithmeticOrLogicalExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ArithmeticOrLogicalExpression&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="8850228ae2540294c04b59c901a233548818abeb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ArrayElements&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ArrayElements&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="18b5944dcf636a5c91ca30d2b3c07609b0f80acf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ArrayExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ArrayExpression&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="86753a06ca9f7ba368a8897e80566a8268300ea4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ArrayType&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ArrayType&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="7b8fdd377339508be889cf902ef8a135a53cd2a3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;AsClause&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;AsClause&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="b9c4b414bb510492d52d2adbfa0dd809e951b767" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;AssignmentExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;AssignmentExpression&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="2daea7f8aeef67fba1c92d781f3c640fb18296cc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Associated Items&lt;/em&gt; are the items declared in &lt;a href=&quot;traits&quot;&gt;traits&lt;/a&gt; or defined in &lt;a href=&quot;implementations&quot;&gt;implementations&lt;/a&gt;. They are called this because they are defined on an associate type &amp;mdash; the type in the implementation. They are a subset of the kinds of items you can declare in a module. Specifically, there are &lt;a href=&quot;associated-items#associated-functions-and-methods&quot;&gt;associated functions&lt;/a&gt; (including methods), &lt;a href=&quot;associated-items#associated-types&quot;&gt;associated types&lt;/a&gt;, and &lt;a href=&quot;associated-items#associated-constants&quot;&gt;associated constants&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;関連項目&lt;/em&gt;は、&lt;a href=&quot;traits&quot;&gt;特性で&lt;/a&gt;宣言された項目または&lt;a href=&quot;implementations&quot;&gt;実装で&lt;/a&gt;定義された項目です。これらは、関連タイプ（実装のタイプ）で定義されているため、これと呼ばれます。これらは、モジュールで宣言できる種類のアイテムのサブセットです。具体的には、&lt;a href=&quot;associated-items#associated-functions-and-methods&quot;&gt;関連する関数&lt;/a&gt;（メソッドを含む）、&lt;a href=&quot;associated-items#associated-types&quot;&gt;関連する型&lt;/a&gt;、および&lt;a href=&quot;associated-items#associated-constants&quot;&gt;関連する定数があります。&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="9ac109c8aaa6a1b884c029e2991539365303f4a2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Associated constants&lt;/em&gt; are &lt;a href=&quot;constant-items&quot;&gt;constants&lt;/a&gt; associated with a type.</source>
          <target state="translated">&lt;em&gt;関連する定数&lt;/em&gt;は&lt;a href=&quot;constant-items&quot;&gt;定数です&lt;/a&gt;関連付けられた、型に関連付けられたです。</target>
        </trans-unit>
        <trans-unit id="27a22d074f123889d3225fe003a61829bf9e9847" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Associated functions&lt;/em&gt; are &lt;a href=&quot;functions&quot;&gt;functions&lt;/a&gt; associated with a type.</source>
          <target state="translated">&lt;em&gt;関連する関数&lt;/em&gt;は&lt;a href=&quot;functions&quot;&gt;関数です&lt;/a&gt;関連付けられた、型に関連付けられたです。</target>
        </trans-unit>
        <trans-unit id="6a668d2d58269c25414ad3ff72866e24064ff941" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Associated types&lt;/em&gt; are &lt;a href=&quot;type-aliases&quot;&gt;type aliases&lt;/a&gt; associated with another type. Associated types cannot be defined in &lt;a href=&quot;implementations#inherent-implementations&quot;&gt;inherent implementations&lt;/a&gt; nor can they be given a default implementation in traits.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;関連付けられた&lt;em&gt;タイプ&lt;/em&gt;は、別のタイプに関連付けられた&lt;a href=&quot;type-aliases&quot;&gt;タイプエイリアス&lt;/a&gt;です。関連する型は&lt;a href=&quot;implementations#inherent-implementations&quot;&gt;固有の実装&lt;/a&gt;では定義できませんすることも、特性にデフォルトの実装を与えることもできません。</target>
        </trans-unit>
        <trans-unit id="5b66769226f7c43473e0e95bd7bfc4ced1c33421" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Associated types&lt;/em&gt; connect a type placeholder with a trait such that the trait method definitions can use these placeholder types in their signatures. The implementor of a trait will specify the concrete type to be used in this type&amp;rsquo;s place for the particular implementation. That way, we can define a trait that uses some types without needing to know exactly what those types are until the trait is implemented.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;関連付けられた&lt;em&gt;タイプ&lt;/em&gt;は、タイププレースホルダーをトレイトに接続し、トレイトメソッドの定義でこれらのプレースホルダータイプをシグニチャーで使用できるようにします。トレイトの実装者は、特定の実装のこの型の場所で使用される具象型を指定します。このように、トレイトが実装されるまで、それらのタイプが何であるかを正確に知る必要なく、いくつかのタイプを使用するトレイトを定義できます。</target>
        </trans-unit>
        <trans-unit id="0cf2912c53086da65e70188ef9bf7b9fc7a20c2e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Attr&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;属性&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="f838c004e01c1eeaed35c161adee827f056b1dfa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;AttrInput&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;AttrInput&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="6d22677ee607ab5d87346790036a43373e395d1f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Attribute macros&lt;/em&gt; define new &lt;a href=&quot;attributes&quot;&gt;attributes&lt;/a&gt; which can be attached to &lt;a href=&quot;items&quot;&gt;items&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;属性マクロ&lt;/em&gt;は、&lt;a href=&quot;items&quot;&gt;アイテム&lt;/a&gt;に添付できる新しい&lt;a href=&quot;attributes&quot;&gt;属性&lt;/a&gt;を定義します。</target>
        </trans-unit>
        <trans-unit id="9a0dc24b964f44bd5547f633daf6cbf9d76b638e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;BareFunctionReturnType&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;BareFunctionReturnType&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="0a33b45f4dc92b88f285a44ace162de9c75018a7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;BareFunctionType&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;BareFunctionType&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="08e49cdb20a45fa41c61e0d32fb166ba3c7463a0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;BlockCommentOrDoc&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;BlockCommentOrDoc&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="cc638e7cdced8011de5e0eb90479bc2e8b83b608" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;BlockExpression&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;BlockExpression&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6441cdd8ad7428fa0bb45b030365eb53981fcbcd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;BlockExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;BlockExpression&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="bf3f4642938316db2257c5eaa0402f8005ef001a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;BorrowExpression&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;BorrowExpression&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="86343c9272ae9ae53dc6f5e0f2704ab99eab5baa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;BorrowExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;BorrowExpression&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="af1528833b5928011eebcdd68a634088db06a41b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;BreakExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;BreakExpression&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="84eee52c54b688323da4dea745c5529909707675" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;CallExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;CallExpression&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="f85ca38240bd386d80ee61a93ce3c4f89a83c0b1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;CallParams&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;CallParams&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="70306b863cdb9fc80d1150ee1893c4b854c286a2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;CfgAttrAttribute&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;CfgAttrAttribute&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="a7459f3fb67f3c84ad0db3116391795340975d38" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;CfgAttrs&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;CfgAttrs&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="d89db728f2d366b1b26c0701467c8f598308edf7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ClosureExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ClosureExpression&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="57b7aa70faf777ea546a54a39ebe1db8b7da71d8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ClosureParam&lt;/em&gt; (&lt;code&gt;,&lt;/code&gt;&lt;em&gt;ClosureParam&lt;/em&gt;)&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;ClosureParam&lt;/em&gt;（ &lt;code&gt;,&lt;/code&gt; &lt;em&gt;ClosureParam&lt;/em&gt;）&lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;？&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="934a15c08190ec04166bdec8c7630ec61065a12f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ClosureParam&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ClosureParam&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="91debf9a8dc0617494d29a7ae3c60c0497dcb73e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ClosureParameters&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ClosureParameters&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="6179a001625f5bc7462572316bf4b62222738aba" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Closures&lt;/em&gt;, a function-like construct you can store in a variable</source>
          <target state="translated">&lt;em&gt;クロージャ&lt;/em&gt;、変数に保存できる関数のような構造</target>
        </trans-unit>
        <trans-unit id="8d4bde915497a96a99a619eb31908e6f6a25f66f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ComparisonExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;比較式&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="2987b6f39aba0488f464403134153b55e5806493" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Compound types&lt;/em&gt; can group multiple values into one type. Rust has two primitive compound types: tuples and arrays.</source>
          <target state="translated">&lt;em&gt;複合型&lt;/em&gt;は、複数の値を1つのタイプにグループ化できます。Rustには、タプルと配列の2つの基本的な複合型があります。</target>
        </trans-unit>
        <trans-unit id="60e102c6b06e65ff9f5d576023fdf32a474f2082" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;CompoundAssignmentExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;CompoundAssignmentExpression&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="bb646db9e45009650f92db559a38f16a7f8e2ef8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Conditionally compiled source code&lt;/em&gt; is source code that may or may not be considered a part of the source code depending on certain conditions.  Source code can be conditionally compiled using &lt;a href=&quot;attributes&quot;&gt;attributes&lt;/a&gt;, &lt;a href=&quot;conditional-compilation#the-cfg-attribute&quot;&gt;&lt;code&gt;cfg&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;conditional-compilation#the-cfg_attr-attribute&quot;&gt;&lt;code&gt;cfg_attr&lt;/code&gt;&lt;/a&gt;, and the built-in &lt;a href=&quot;conditional-compilation#the-cfg-macro&quot;&gt;&lt;code&gt;cfg&lt;/code&gt; macro&lt;/a&gt;. These conditions are based on the target architecture of the compiled crate, arbitrary values passed to the compiler, and a few other miscellaneous things further described below in detail.</source>
          <target state="translated">&lt;em&gt;条件付きでコンパイルされたソースコード&lt;/em&gt;は、特定の条件に応じてソースコードの一部と見なされる場合と見なされない場合があるソースコードです。ソースコードは、&lt;a href=&quot;attributes&quot;&gt;属性&lt;/a&gt;、&lt;a href=&quot;conditional-compilation#the-cfg-attribute&quot;&gt; &lt;code&gt;cfg&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;conditional-compilation#the-cfg_attr-attribute&quot;&gt; &lt;code&gt;cfg_attr&lt;/code&gt; &lt;/a&gt;、および組み込みの&lt;a href=&quot;conditional-compilation#the-cfg-macro&quot;&gt; &lt;code&gt;cfg&lt;/code&gt; マクロ&lt;/a&gt;を使用して条件付きでコンパイルできます。これらの条件は、コンパイルされたクレートのターゲットアーキテクチャ、コンパイラに渡される任意の値、および以下で詳細に説明するその他のいくつかの事項に基づいています。</target>
        </trans-unit>
        <trans-unit id="804879068ad65b1104b5c96ff86fc5dcadf047e6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Configuration options&lt;/em&gt; are names and key-value pairs that are either set or unset. Names are written as a single identifier such as, for example, &lt;code&gt;unix&lt;/code&gt;. Key-value pairs are written as an identifier, &lt;code&gt;=&lt;/code&gt;, and then a string. For example, &lt;code&gt;target_arch = &quot;x86_64&quot;&lt;/code&gt; is a configuration option.</source>
          <target state="translated">&lt;em&gt;構成オプション&lt;/em&gt;は、名前またはキーと値のペアであり、設定または設定解除されます。名前は、たとえば &lt;code&gt;unix&lt;/code&gt; などの単一の識別子として記述されます。キーと値のペアは、識別子 &lt;code&gt;=&lt;/code&gt; 、次に文字列として書き込まれます。たとえば、 &lt;code&gt;target_arch = &quot;x86_64&quot;&lt;/code&gt; は構成オプションです。</target>
        </trans-unit>
        <trans-unit id="5fd8ccd8ef14d64b54dcb73071bdd435858764ff" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ConfigurationAll&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ConfigurationAll&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2a3f3490554aae2a1d05d22716ecbc21e7a0008d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ConfigurationAny&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ConfigurationAny&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="40baa237b3e5d609aa99144c9113a95044546f0e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ConfigurationNot&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ConfigurationNot&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7092727ee4218d2aa4c23ace8b1ff8f8643c46ae" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ConfigurationOption&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ConfigurationOption&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d624df479df18156c3af914bf1922ad9f4caa8fd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ConfigurationOption&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ConfigurationOption&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="5ad4964f057a83107f2eb1c72ee64caf3eacf36b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ConfigurationPredicate&lt;/em&gt; (&lt;code&gt;,&lt;/code&gt;&lt;em&gt;ConfigurationPredicate&lt;/em&gt;)&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;ConfigurationPredicate&lt;/em&gt;（ &lt;code&gt;,&lt;/code&gt; &lt;em&gt;ConfigurationPredicate&lt;/em&gt;）&lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;？&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="f1296f5daec2c617bdc3dd3f2f359fb7f679e202" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ConfigurationPredicate&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ConfigurationPredicate&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="cb0936b7a69327261de8e0b0c03f3d56f0d00fd1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ConfigurationPredicateList&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ConfigurationPredicateList&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="012cc76248fe9505eddab45a5035f8eae8d9318f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ConstantItem&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ConstantItem&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="9531d18a1e12260e962aa3594378fd4dee19a8b4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ContinueExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ContinueExpression&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="64cb78e1be5024c4314dec53c07cc0240fe7e8f7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Crate&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;クレート&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="9e27cd4ebba2623a3adbf84e0fc68a0aafe5b354" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;CrateRef&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;CrateRef&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="09a4c07aae2d970ef44b5c5ec76a82f1d3f31ed5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;DelimTokenTree&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;DelimTokenTree&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9c6909aef579ed884ef08c1950f045984b47eaa5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;DelimTokenTree&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;DelimTokenTree&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="cb711f6d1258a2d9fde66b31f4e41b3ff4f4d5e1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Deref coercion&lt;/em&gt; is a convenience that Rust performs on arguments to functions and methods. Deref coercion converts a reference to a type that implements &lt;code&gt;Deref&lt;/code&gt; into a reference to a type that &lt;code&gt;Deref&lt;/code&gt; can convert the original type into. Deref coercion happens automatically when we pass a reference to a particular type&amp;rsquo;s value as an argument to a function or method that doesn&amp;rsquo;t match the parameter type in the function or method definition. A sequence of calls to the &lt;code&gt;deref&lt;/code&gt; method converts the type we provided into the type the parameter needs.</source>
          <target state="translated">&lt;em&gt;Deref強制&lt;/em&gt;は、Rustが関数やメソッドへの引数に対して実行する便利な機能です。DEREF強制変換実装がそのタイプを参照 &lt;code&gt;Deref&lt;/code&gt; ことタイプを参照に &lt;code&gt;Deref&lt;/code&gt; に元の型を変換することができます。関数またはメソッド定義のパラメーターの型と一致しない関数またはメソッドに引数として特定の型の値への参照を渡すと、参照解除の強制が自動的に行われます。 &lt;code&gt;deref&lt;/code&gt; メソッドの一連の呼び出しは、提供された型をパラメーターが必要とする型に変換します。</target>
        </trans-unit>
        <trans-unit id="37eed1edd1a8cde28e85b8c1ad70682884b34cfc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;DereferenceExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;DereferenceExpression&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="76f75031d02347fc664901b1f2bf13fed47fb373" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Derive macros&lt;/em&gt; define new inputs for the &lt;a href=&quot;attributes/derive&quot;&gt;&lt;code&gt;derive&lt;/code&gt; attribute&lt;/a&gt;. These macros can create new &lt;a href=&quot;items&quot;&gt;items&lt;/a&gt; given the token stream of a &lt;a href=&quot;items/structs&quot;&gt;struct&lt;/a&gt;, &lt;a href=&quot;items/enumerations&quot;&gt;enum&lt;/a&gt;, or &lt;a href=&quot;items/unions&quot;&gt;union&lt;/a&gt;. They can also define &lt;a href=&quot;procedural-macros#derive-macro-helper-attributes&quot;&gt;derive macro helper attributes&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;派生マクロ&lt;/em&gt;は、&lt;a href=&quot;attributes/derive&quot;&gt; &lt;code&gt;derive&lt;/code&gt; 属性の&lt;/a&gt;新しい入力を定義します。これらのマクロは、&lt;a href=&quot;items/structs&quot;&gt;struct&lt;/a&gt;、&lt;a href=&quot;items/enumerations&quot;&gt;enum&lt;/a&gt;、または&lt;a href=&quot;items/unions&quot;&gt;union&lt;/a&gt;のトークンストリームを指定して、新しい&lt;a href=&quot;items&quot;&gt;項目&lt;/a&gt;を作成できます。また、&lt;a href=&quot;procedural-macros#derive-macro-helper-attributes&quot;&gt;派生マクロヘルパー属性を&lt;/a&gt;定義できます。</target>
        </trans-unit>
        <trans-unit id="119a91c56447c43f1658acfafd5f4d75a39e168e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumExprField&lt;/em&gt; (&lt;code&gt;,&lt;/code&gt;&lt;em&gt;EnumExprField&lt;/em&gt;)&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;EnumExprField&lt;/em&gt;（ &lt;code&gt;,&lt;/code&gt; &lt;em&gt;EnumExprField&lt;/em&gt;）&lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;？&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="af63d6116b0ffd79b25d33ee20cdc2c652857fec" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumExprField&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;EnumExprField&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="1f26b60ccfa5cdd6e5115153df20e841973bdc24" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumExprFieldless&lt;/em&gt; : &lt;a href=&quot;../paths#paths-in-expressions&quot;&gt;&lt;em&gt;PathInExpression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;EnumExprFieldless&lt;/em&gt;：&lt;a href=&quot;../paths#paths-in-expressions&quot;&gt;&lt;em&gt;PathInExpression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a3e247b5324fe26d81405de894f9ae01cd12c71" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumExprFields&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;EnumExprFields&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="a1e63e280dcac737e7087d81c417bb2ab6ef170a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumExprStruct&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;EnumExprStruct&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="81a31b2effb76cd9ae25598167249ffe2927f24d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumExprStruct&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;EnumExprStruct&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="872818237167326d46f7d79f82a474d7620d59e8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumExprTuple&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;EnumExprTuple&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="7a247d38a26600c1d6ab239677aae501828c23bb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumItem&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt;&lt;em&gt;EnumItem&lt;/em&gt; )&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;EnumItem&lt;/em&gt;（ &lt;code&gt;,&lt;/code&gt; &lt;em&gt;EnumItem&lt;/em&gt;）&lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;？&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="c96047187a48e4499f3d9eb09874509e7dcf5a6b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumItem&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;EnumItem&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="f1d208e299cd6d7197f344b241477faf59f14365" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumItemDiscriminant&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;EnumItemDiscriminant&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="392efbedcf0e93dd1c123943deacda31699a635d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumItemStruct&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;EnumItemStruct&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="535fb7350a5f7ecf9c99b545d4d08879625019c9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumItemTuple&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;EnumItemTuple&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="560d9a1d9be288e4fd935c185e48e368caa0cd50" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumItems&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;EnumItems&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="480d1890c3d2b2e50731052f78fb268c56243900" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Enumeration&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;列挙&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="8f62338d6b7c311d14624b530b32b048db1ab97a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumerationVariantExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;EnumerationVariantExpression&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="dd5815fe88c57026716044be8c2b7d220a9fa4cc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ErrorPropagationExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ErrorPropagationExpression&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="cb9ee65024268a75134206e6a4c99f7d8fa0f89f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ExampleGrammar&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;ExampleGrammar&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="80c44d7022c9adcdd921a5b80aee11712f70fc05" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Expression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;表現&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="e58544a48f06924557169ef1418c4689a451c875" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ExpressionStatement&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ExpressionStatement&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="7cc396823b918359020f355cf1dc9da18933258b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ExpressionWithBlock&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ExpressionWithBlock&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="596bbce5f87bab0fd29d812454db376d6aca155e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ExpressionWithoutBlock&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ExpressionWithoutBlock&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6c94d5af9134aa8b1f09f00ed31c6f369919f09c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ExpressionWithoutBlock&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ExpressionWithoutBlock&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="446e71b1899f357476dc9ae92fa474c0107ed591" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ExternBlock&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ExternBlock&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="1b561479775d2c9407f5fd110e063fb310a737a2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ExternCrate&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ExternCrate&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="c7cf4477548c689d6a4ea7f06ba8c1d3681deb95" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ExternalFunctionItem&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ExternalFunctionItem&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="37172998df85b0e7dd731b75e4d62eb9a9c7b379" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ExternalItem&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ExternalItem&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="c0d8bdffca78d8882e397411de97d66a0f45e54d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ExternalItem&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;ExternalItem&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="08bd64786f839eb621640ebd233ca37b6a4950c3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ExternalStaticItem&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ExternalStaticItem&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="ca497f47dd18f54d8f558a5e7a74e5f715f1a983" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;FieldExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;FieldExpression&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="7a09c2fd212d136b9c8764d23e72ed1626095d14" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ForLifetimes&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ForLifetimes&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="fb5f5509306f986a8ce27f23fda17690166842f4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ForLifetimes&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TypeParamBounds&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;ForLifetimes&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TypeParamBounds&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="162bb590eada5f15f64a539675ab6a6a7f5751fb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Function-like procedural macros&lt;/em&gt; are procedural macros that are invoked using the macro invocation operator (&lt;code&gt;!&lt;/code&gt;).</source>
          <target state="translated">&lt;em&gt;関数のような手続き型マクロ&lt;/em&gt;は、マクロ呼び出し演算子（ &lt;code&gt;!&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="ec28b24ac72ab68956c914d032226ef2400adbed" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Function&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;機能&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="8168d63a8074aab909c34b26df738e48ecfde250" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;FunctionParam&lt;/em&gt; (&lt;code&gt;,&lt;/code&gt;&lt;em&gt;FunctionParam&lt;/em&gt;)&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;FunctionParam&lt;/em&gt;（ &lt;code&gt;,&lt;/code&gt; &lt;em&gt;FunctionParam&lt;/em&gt;）&lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;？&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9c894aa89db1ffe8f9db0eef51225568cfe54120" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;FunctionParam&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;FunctionParam&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="0f42bf8375c939e33e16809b4a34a1ac2d861f69" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;FunctionParameters&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;FunctionParameters&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="9a31e1b61e366904b87a234a9c76e83e22d71da6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;FunctionParametersMaybeNamedVariadic&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;FunctionParametersMaybeNamedVariadic&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="1c3279a6ddd347e91a65b511c22f09a8aeb666d8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;FunctionQualifiers&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;FunctionQualifiers&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="39418f8af9ab5576f6c64f1ee2ad007aa5750e01" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;FunctionQualifiers&lt;/em&gt;&lt;code&gt;fn&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;FunctionQualifiers&lt;/em&gt;&lt;code&gt;fn&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="788b2713b2513627be56a9c05d69615eb51c0722" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;FunctionReturnType&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;FunctionReturnType&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="38b65471a255a2036cede5bcb3d47f5c080c49c8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;FunctionReturnType&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;FunctionReturnType&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="c5e08598325a6fef007cf94d3ecd46442c7fafee" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GenericArgs&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;GenericArgs&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="c54e63947d01d4af369104ad05fe28f3eb40ce84" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GenericArgsBinding&lt;/em&gt; (&lt;code&gt;,&lt;/code&gt;&lt;em&gt;GenericArgsBinding&lt;/em&gt;)&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;GenericArgsBinding&lt;/em&gt;（ &lt;code&gt;,&lt;/code&gt; &lt;em&gt;GenericArgsBinding&lt;/em&gt;）&lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="6f38617bda8c69b2aad0962cd10c3412991b5c0b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GenericArgsBinding&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;GenericArgsBinding&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="81dc2ce7abba66a5df4eb392835de6eb00035c8c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GenericArgsBindings&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;GenericArgsBindings&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="b73f8a4aab172b4a6c9574ba65d5bb321d657dd1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GenericArgsLifetimes&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;GenericArgsLifetimes&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="f8a974f32d33a7bd75a95fdf90a18c5c1e6073d9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GenericArgsTypes&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;GenericArgsTypes&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="3c24974b6beee6e1f7b208bc03c9dcc3fc124d86" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GenericParams&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;GenericParams&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="da9e88754d1d196b1d9ba3e958771b23d53dadb1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Generics&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ジェネリック&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="ea913979d94c8460bf48a0d160d405c6a3cb364e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GroupedExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;GroupedExpression&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="d9335cb7193c14f1c28286092073632a0e0c482a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GroupedPattern&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;GroupedPattern&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="1d7c2bcd43e46897232ff538bfc77694fb9d1cf3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;IdentifierPattern&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;IdentifierPattern&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="552a257d41f0a82c496a8c9d9d5ff9cf5f001458" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;IfExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;IfExpression&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="bf2626f317e3f10399cb330cefe01d92a99d8b6f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;IfLetExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;IfLetExpression&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="79ee94938a3f8246e8c14f54e7a997fd1ad6c760" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ImplTraitType&lt;/em&gt; : &lt;code&gt;impl&lt;/code&gt;&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TypeParamBounds&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;ImplTraitType&lt;/em&gt;： &lt;code&gt;impl&lt;/code&gt; &lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TypeParamBounds&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="05613b00e6dd0110b60f330b7e46df5b89a82cd7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ImplTraitTypeOneBound&lt;/em&gt; : &lt;code&gt;impl&lt;/code&gt;&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TraitBound&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;ImplTraitTypeOneBound&lt;/em&gt;： &lt;code&gt;impl&lt;/code&gt; &lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TraitBound&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d4fd05262d3d8919770d7462003fd7944b0dd430" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Implementation&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;実装&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="0cfcf205225b502eeddd6cc3a859a4ac35782fa4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Incorrect&lt;/em&gt; usage of this function: initializing a reference with zero.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;この関数の使い方の&lt;em&gt;誤り&lt;/em&gt;：参照をゼロで初期化する。</target>
        </trans-unit>
        <trans-unit id="28628453b676c4b17b657f804b1cdabf0268307f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Incorrect&lt;/em&gt; usage of this function: initializing a struct with zero, where some fields cannot hold 0 as a valid value.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;この関数の&lt;em&gt;誤った&lt;/em&gt;使用法：構造体をゼロで初期化すると、一部のフィールドでは有効な値として0を保持できません。</target>
        </trans-unit>
        <trans-unit id="1e35375dd8ca064ff4be0792decd69979e2a94f1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Incorrect&lt;/em&gt; usage of this method:</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;このメソッドの&lt;em&gt;誤った&lt;/em&gt;使用：</target>
        </trans-unit>
        <trans-unit id="bf29de4a8b94f53e344a29577c238666b6c4f853" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;IndexExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;IndexExpression&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="c94ff0faba99ce65f8412731449d7be18d1e3771" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;InferredType&lt;/em&gt; : &lt;code&gt;_&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;InferredType&lt;/em&gt;： &lt;code&gt;_&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="95b1cb6f36e254b0e037447afbf413b63c98f580" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;InfiniteLoopExpression&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;InfiniteLoopExpression&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6a29190f932069fb30261267a0f7f6a8f0edf508" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;InfiniteLoopExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;InfiniteLoopExpression&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="863ac61ae9beee9e20887415b53077b2cd587cc4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;InherentImpl&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;InherentImpl&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="a79afb1ce32a4539826399a2e1aefd3500e2864c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;InherentImpl&lt;/em&gt; | &lt;em&gt;TraitImpl&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;InherentImpl&lt;/em&gt; | &lt;em&gt;TraitImpl&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="25f84d39eb0b9d4931e76839cb6cce77d4382f61" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;InherentImplItem&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;InherentImplItem&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="2eff57e7451fa06aafae25f01ccf8779642171cf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;InherentImplItem&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;InherentImplItem&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9d5c07a8ba88eeed78b7d7e38091e5c9ecaa5fca" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Inheritance&lt;/em&gt; is a mechanism whereby an object can inherit from another object&amp;rsquo;s definition, thus gaining the parent object&amp;rsquo;s data and behavior without you having to define them again.</source>
          <target state="translated">&lt;em&gt;継承&lt;/em&gt;は、オブジェクトが別のオブジェクトの定義から継承できるメカニズムであり、親オブジェクトのデータと動作を、それらを再度定義することなく取得できます。</target>
        </trans-unit>
        <trans-unit id="37b838e42be8ffd5750f71b0c368c67cc7d9cc92" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Inner attributes&lt;/em&gt;, written with a bang (&lt;code&gt;!&lt;/code&gt;) after the hash (&lt;code&gt;#&lt;/code&gt;), apply to the item that the attribute is declared within. &lt;em&gt;Outer attributes&lt;/em&gt;, written without the bang after the hash, apply to the thing that follows the attribute.</source>
          <target state="translated">&lt;em&gt;インナー属性&lt;/em&gt;バタンと書かれた、（ ！ &lt;code&gt;!&lt;/code&gt; ハッシュ後の（ &lt;code&gt;#&lt;/code&gt; が）、属性が内で宣言されていることをアイテムに適用されます。ハッシュの後に強打なしで書かれた&lt;em&gt;外部属性は&lt;/em&gt;、&lt;em&gt;属性&lt;/em&gt;に続くものに適用されます。</target>
        </trans-unit>
        <trans-unit id="b21dd44482c776a4ae70c27fc6354483a4a31457" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;InnerAttribute&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;InnerAttribute&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="6a4a98cd6f0b1230436493f0b5d42df54fbefc46" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Interior mutability&lt;/em&gt; is a design pattern in Rust that allows you to mutate data even when there are immutable references to that data; normally, this action is disallowed by the borrowing rules. To mutate data, the pattern uses &lt;code&gt;unsafe&lt;/code&gt; code inside a data structure to bend Rust&amp;rsquo;s usual rules that govern mutation and borrowing. We haven&amp;rsquo;t yet covered unsafe code; we will in Chapter 19. We can use types that use the interior mutability pattern when we can ensure that the borrowing rules will be followed at runtime, even though the compiler can&amp;rsquo;t guarantee that. The &lt;code&gt;unsafe&lt;/code&gt; code involved is then wrapped in a safe API, and the outer type is still immutable.</source>
          <target state="translated">&lt;em&gt;内部の可変性&lt;/em&gt;はRustの設計パターンであり、データへの不変の参照がある場合でもデータを変更することができます。通常、このアクションは借用ルールによって禁止されています。データを変更するために、パターンはデータ構造内の &lt;code&gt;unsafe&lt;/code&gt; コードを使用して、変更と借用を制御するRustの通常のルールを曲げます。安全でないコードについてはまだ説明していません。第19章で説明します。コンパイラが保証できない場合でも、実行時に借用規則が確実に守られる場合は、内部可変パターンを使用する型を使用できます。 &lt;code&gt;unsafe&lt;/code&gt; 関係のコードは、安全なAPIに包まれ、そして外側のタイプはまだ不変です。</target>
        </trans-unit>
        <trans-unit id="91f906ea541949971bce8092251fb34ad2874f01" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;IsolatedCR&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;IsolatedCR&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="15b1db203d17ae708a602c52e1b8b0a79a33743c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;It's much nicer!&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;それはずっといいです！&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3589cc7a2650a6a39893a4f30ad24db14bcc98c3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ItalicCamelCase&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ItalicCamelCase&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8e4294d2f533011b09278da1f0928e3fabf6c585" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Item&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;Item&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="35eaaafb0e0cfcbe9059a1b585f1a998f21adff7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;IteratorLoopExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;IteratorLoopExpression&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="c5c5224fda773552cba7aaab8d33158d49416eb2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Iterators&lt;/em&gt;, a way of processing a series of elements</source>
          <target state="translated">&lt;em&gt;イテレータ&lt;/em&gt;、一連の要素を処理する方法</target>
        </trans-unit>
        <trans-unit id="6878bb942a50edb04c637f441255c08839fd8b5e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LazyBooleanExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;LazyBooleanExpression&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="e4ec5679d98469d83e30b728ef14a087b47cc5ad" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LetStatement&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;LetStatement&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="50e44bb3a7ace5b8fd084f781de2033f5d340501" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LetStatement&lt;/em&gt;, &lt;em&gt;Item&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;LetStatement&lt;/em&gt;、&lt;em&gt;アイテム&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="39582c4eee46618d53ec3ef9cb470cd2be058e46" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Lifetime&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;寿命&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="0ea24f230231f68a2b34565b7dcca2f3da5ddd71" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Lifetime&lt;/em&gt; | &lt;em&gt;TraitBound&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;生涯&lt;/em&gt; | &lt;em&gt;TraitBound&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4ebf62dff1412adf1ae4b162299598ee5a032a6e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LifetimeBounds&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;LifetimeBounds&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="060de76296a6782922ad4030917b108ef8967b15" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LifetimeParam&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;LifetimeParam&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="db9dbc6cc32224342ea50dccd96dda25d69288f1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LifetimeParams&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;LifetimeParams&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="03a0239bb786012518cf2c6c045b55b7937dfe9b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LifetimeParams&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;LifetimeParams&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="0b9e9f262b361c2f9cde92cf65edeac7a44b031e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LifetimeWhereClauseItem&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;LifetimeWhereClauseItem&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b5e16a802a7971ac6b243273fb14a2dccf57bf67" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LifetimeWhereClauseItem&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;LifetimeWhereClauseItem&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="2edfdb6001688b168202c1220fd23770fbcb9d2b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Literal patterns&lt;/em&gt; match exactly the same value as what is created by the literal. Since negative numbers are not &lt;a href=&quot;expressions/literal-expr&quot;&gt;literals&lt;/a&gt;, literal patterns also accept an optional minus sign before the literal, which acts like the negation operator.</source>
          <target state="translated">&lt;em&gt;リテラルパターン&lt;/em&gt;は、リテラルによって作成されたものとまったく同じ値に一致します。負の数は&lt;a href=&quot;expressions/literal-expr&quot;&gt;リテラル&lt;/a&gt;ではないため、リテラルパターンはリテラルの前にオプションのマイナス記号も受け入れます。これは否定演算子のように機能します。</target>
        </trans-unit>
        <trans-unit id="464b5ac4b1f4a4fffbbf7466eec695e49502c6aa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LiteralExpression&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;LiteralExpression&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="80ad5e778c4821aa8ad4533e2e1b28aceca96a97" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LiteralExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;LiteralExpression&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="b2462e40e7f72a721e3006bfd0b52a9aee146737" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LiteralPattern&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;LiteralPattern&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e24c33e733c079f39066482083d99720d7a590a0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LiteralPattern&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;LiteralPattern&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="884209fe2f2a76e7cda80f39d4d922f1c38b8004" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LoopExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;LoopExpression&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="14ce3d029e799f142eb096754128bfcb245b572f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LoopLabel&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;LoopLabel&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="899f19ae53fdd000cfcb9c004274efe07708a07c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroFragSpec&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MacroFragSpec&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="3da67bc64cc6b58442ceabf314b6d8f315774765" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroInvocation&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MacroInvocation&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="86736fdf72b16f87485cb2da5b9702f1f15e0d0d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroInvocationSemi&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MacroInvocationSemi&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d0c25696e65bad5ef16fa4cff7c02ac72724ed33" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroInvocationSemi&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MacroInvocationSemi&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="1314757d6629df1286f781c412bcb2a7cfc877cd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroItem&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;MacroItem&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="107065ee19fe1d1535cd6a2549f6ef154a38aad6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroMatch&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MacroMatch&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="10f1c042b96121396ef40d4d223f94b891eadae1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroMatch&lt;/em&gt;&lt;sup&gt;+&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;MacroMatch&lt;/em&gt;&lt;sup&gt;+&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="aa73b9a1272ca09d2634ea23fbb5d95ac193c417" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroMatcher&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MacroMatcher&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="c85576888e4fc3cc4860eb43185db02056a40314" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroMatcher&lt;/em&gt;&lt;code&gt;=&amp;gt;&lt;/code&gt;&lt;em&gt;MacroTranscriber&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MacroMatcher&lt;/em&gt;&lt;code&gt;=&amp;gt;&lt;/code&gt;&lt;em&gt;MacroTranscriber&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5ffe14d46b6069b4bd1e26e86ac80bb7d5bc67f4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroRepOp&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MacroRepOp&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="5a2b0452859a72cf796927f33eb344fb43ce17a2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroRepSep&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MacroRepSep&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="b47a89691628c051ab5d56c0b0874a4768743618" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroRule&lt;/em&gt; ( &lt;code&gt;;&lt;/code&gt;&lt;em&gt;MacroRule&lt;/em&gt; )&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;;&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;マクロルール&lt;/em&gt;（ &lt;code&gt;;&lt;/code&gt; &lt;em&gt;マクロルール&lt;/em&gt;）&lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;;&lt;/code&gt; &lt;sup&gt;？&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="7a3a64afb6e6e4c9cb8013297f3aecf634458b77" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroRule&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MacroRule&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="e0d02c2687f0b8d0a3ec1e79a5d0a4e723aaa459" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroRules&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MacroRules&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="300a4e1e637630e5311d1580fa57ad0907c4949c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroRulesDef&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MacroRulesDef&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="7432d8c5ee6a6f8435e41ebcb841a8e9e3efbe09" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroRulesDefinition&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MacroRulesDefinition&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="0aa63b176d3289e7d5fe278979b47b6351d1c8f5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroTranscriber&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MacroTranscriber&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="301310ca509d88b71bdcbce85bca8484407c855a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MatchArm&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MatchArm&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="8ef8dd7b9ee9553c116df71c870c9fe2196820b0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MatchArm&lt;/em&gt;&lt;code&gt;=&amp;gt;&lt;/code&gt; ( &lt;a href=&quot;block-expr#block-expressions&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt; | &lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt; ) &lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;MatchArm &lt;/em&gt; &lt;code&gt;=&amp;gt;&lt;/code&gt; （&lt;a href=&quot;block-expr#block-expressions&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt; | &lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;式&lt;/em&gt;&lt;/a&gt;） &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;？&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="af2a8e7c1bb63707445e68194a98566db9ae9c62" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MatchArmGuard&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MatchArmGuard&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="872ab4d9cba4ef81fd6eff181c3df94d111b4c90" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MatchArmPatterns&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MatchArmPatterns&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="51d70fe968fee1e7e37c530e278c9f179e55c999" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MatchArms&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MatchArms&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="b0dcf9c9f72e6c885154f72e9f84114403538d7f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MatchArms&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;MatchArms&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="93cef99b84f5880c91ba6132e54cffaa8bb07cb1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MatchExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MatchExpression&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="59546d2d50e5e2644feb3600d82325e80727d837" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MaybeNamedFunctionParameters&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MaybeNamedFunctionParameters&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="e3e8698bcc99e08a21191034a6f81b16c183dbab" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MaybeNamedFunctionParameters&lt;/em&gt; | &lt;em&gt;MaybeNamedFunctionParametersVariadic&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MaybeNamedFunctionParameters&lt;/em&gt; | &lt;em&gt;MaybeNamedFunctionParametersVariadic&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bdf70a1b2c190ce80402e5ed97a8e9f90da84521" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MaybeNamedFunctionParametersVariadic&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MaybeNamedFunctionParametersVariadic&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="ec466b5c020581c11646855a10025f8789e4720d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MaybeNamedParam&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt;&lt;em&gt;MaybeNamedParam&lt;/em&gt; )&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;MaybeNamedParam&lt;/em&gt;（ &lt;code&gt;,&lt;/code&gt; &lt;em&gt;MaybeNamedParam&lt;/em&gt;）&lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;？&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="de8577b4b4d9a6ef30f90cc872d3edd2da01d708" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MaybeNamedParam&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MaybeNamedParam&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="a3e31631cab04f772c43505b41bc02828d169566" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Message-passing&lt;/em&gt; concurrency, where channels send messages between threads</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;チャネル間でメッセージをスレッド間で送信するメッセージ&lt;em&gt;渡し&lt;/em&gt;同時実行性</target>
        </trans-unit>
        <trans-unit id="6421221bdae5d3f17103c8797dccdfa396e56c64" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaItem&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MetaItem&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cd9d222feeff596ac3ec40241e21471c3875c6ca" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaItem&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MetaItem&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="631b2977683a81dc7b858b95988c10709eeca01c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaItemInner&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt; MetaItemInner )&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;MetaItemInner&lt;/em&gt;（ &lt;code&gt;,&lt;/code&gt; MetaItemInner）&lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;？&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="a0a236982f9fe3679818752e8c83dbdada7e61fd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaItemInner&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MetaItemInner&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="a46470f7df8921c8404bc47b518414ef4ebe4e99" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaListIdents&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MetaListIdents&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9b89767b1e8283ee44c2da2f824ccf3cf13cf9e9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaListIdents&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;MetaListIdents&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="69329eee070eb64bdd8e9ebfd52d7a97bd2bd718" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaListNameValueStr&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MetaListNameValueStr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="253f2c53a18a5eb7f5cdbfb33a96efc6d67efb57" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaListNameValueStr&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;MetaListNameValueStr&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="525440e46ebe819cb3f49893ee89b9befcb43c78" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaListPaths&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MetaListPaths&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="623b1dde663ef9f165bf458c94a79025f4f511f9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaListPaths&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;MetaListPaths&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="0d1903ff0a2527be2a0e272eab75174749d6fc10" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaNameValueStr&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MetaNameValueStr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b219e52aa36ab2d3868c212bf29298e8f3e03d76" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaNameValueStr&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;MetaNameValueStr&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="8dda892455f17857ab98d3e2fac0ec83a1144173" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaSeq&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MetaSeq&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="3e86baf44bbbc009b1410a0c45820c7a75b171b9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaWord&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MetaWord&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4f27a607b80b63639e5c352b9449a8087cf31209" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaWord&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;MetaWord&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="7cc1d093a2803d4f22d129156c7ea0623492edd7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Method&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;方法&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="116ae302839cf2f314903962433adec3cd7ac223" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MethodCallExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MethodCallExpression&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="6d1e1b8c482fe8dac376ede8bea2c4c40be8d75d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Methods&lt;/em&gt; are similar to functions: they&amp;rsquo;re declared with the &lt;code&gt;fn&lt;/code&gt; keyword and their name, they can have parameters and a return value, and they contain some code that is run when they&amp;rsquo;re called from somewhere else. However, methods are different from functions in that they&amp;rsquo;re defined within the context of a struct (or an enum or a trait object, which we cover in Chapters 6 and 17, respectively), and their first parameter is always &lt;code&gt;self&lt;/code&gt;, which represents the instance of the struct the method is being called on.</source>
          <target state="translated">&lt;em&gt;メソッド&lt;/em&gt;は関数に似ています &lt;code&gt;fn&lt;/code&gt; キーワードとその名前で宣言され、パラメーターと戻り値を持つことができ、他の場所から呼び出されたときに実行されるコードが含まれます。ただし、メソッドは関数とは異なり、構造体（または、第6章と第17章で説明する列挙型または特性オブジェクト）のコンテキスト内で定義され、最初のパラメーターは常に &lt;code&gt;self&lt;/code&gt; です。メソッドが呼び出されている構造体のインスタンス。</target>
        </trans-unit>
        <trans-unit id="02da3ae59b83d41fac0ece7c0e674a6453dd1a2b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Module&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Module&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="12a97132963c0e60bc212205136da7166461dc92" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Module&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;モジュール&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="83b4121f259948e1d6bf06a38eadea9b08bfc769" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Modules&lt;/em&gt; let us organize code within a crate into groups for readability and easy reuse. Modules also control the &lt;em&gt;privacy&lt;/em&gt; of items, which is whether an item can be used by outside code (&lt;em&gt;public&lt;/em&gt;) or is an internal implementation detail and not available for outside use (&lt;em&gt;private&lt;/em&gt;).</source>
          <target state="translated">&lt;em&gt;モジュールを&lt;/em&gt;使用すると、クレート内のコードをグループに編成して、読みやすく再利用しやすくなります。モジュールは、アイテムの&lt;em&gt;プライバシー&lt;/em&gt;も制御します。これは、アイテムを外部コードで使用できるか（&lt;em&gt;public&lt;/em&gt;）、内部実装の詳細であり、外部で使用できないか（&lt;em&gt;private&lt;/em&gt;）です。</target>
        </trans-unit>
        <trans-unit id="2795bcf66d84e6f66e4e78f1f52e5e397edb297a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Mutex&lt;/em&gt; is an abbreviation for &lt;em&gt;mutual exclusion&lt;/em&gt;, as in, a mutex allows only one thread to access some data at any given time. To access the data in a mutex, a thread must first signal that it wants access by asking to acquire the mutex&amp;rsquo;s &lt;em&gt;lock&lt;/em&gt;. The lock is a data structure that is part of the mutex that keeps track of who currently has exclusive access to the data. Therefore, the mutex is described as &lt;em&gt;guarding&lt;/em&gt; the data it holds via the locking system.</source>
          <target state="translated">&lt;em&gt;ミューテックス&lt;/em&gt;は&lt;em&gt;相互排除の&lt;/em&gt;略語であり、ミューテックスは一度に1つのスレッドのみが一部のデータにアクセスできるようにします。ミューテックスのデータにアクセスするには、スレッドは最初に、ミューテックスの&lt;em&gt;ロック&lt;/em&gt;を取得するように要求することによって、アクセスしたいことを通知する必要があり&lt;em&gt;ます&lt;/em&gt;。ロックは、ミューテックスの一部であるデータ構造であり、現在データへの排他的アクセス権を持つユーザーを追跡します。したがって、ミューテックスは、ロックシステムを介して保持するデータを&lt;em&gt;保護&lt;/em&gt;すると説明され&lt;em&gt;て&lt;/em&gt;います。</target>
        </trans-unit>
        <trans-unit id="c141f34947bfe55e1f46d1e448bdd473c2e41277" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NamedFunctionParam&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt;&lt;em&gt;NamedFunctionParam&lt;/em&gt; )&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;NamedFunctionParam&lt;/em&gt;（ &lt;code&gt;,&lt;/code&gt; &lt;em&gt;NamedFunctionParam&lt;/em&gt;）&lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;？&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="177e1ec2a1a343f8b157386f08366b0643b92099" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NamedFunctionParam&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;NamedFunctionParam&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="9c1536bd5b283e57a048ae939494854cc91bcee5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NamedFunctionParameters&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;NamedFunctionParameters&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="efc20863a7794bc34aebfc1e0f3ff83907a77f44" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NamedFunctionParametersWithVariadics&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;NamedFunctionParametersWithVariadics&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="209ca2070cdd0548a6ec072ee0f642ab57d0d9b0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NegationExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;NegationExpression&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="85373d9d19e2d5e6a72b0d46955723308c982fbc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NeverType&lt;/em&gt; : &lt;code&gt;!&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;NeverType&lt;/em&gt;： &lt;code&gt;!&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c4a7de36936293c2079a21203197e69abd8fdff0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Non-capturing closures&lt;/em&gt; are closures that don't capture anything from their environment. They can be coerced to function pointers (&lt;code&gt;fn&lt;/code&gt;) with the matching signature.</source>
          <target state="translated">&lt;em&gt;非キャプチャークロージャー&lt;/em&gt;は、環境から何もキャプチャーしないクロージャーです。それらは、一致するシグニチャーを持つ関数ポインター（ &lt;code&gt;fn&lt;/code&gt; ）に強制変換できます。</target>
        </trans-unit>
        <trans-unit id="4dd380afc1048d6388f700be958b8b6c54432a25" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Non-reference patterns&lt;/em&gt; include all patterns except bindings, &lt;a href=&quot;patterns#wildcard-pattern&quot;&gt;wildcard patterns&lt;/a&gt; (&lt;code&gt;_&lt;/code&gt;), &lt;a href=&quot;patterns#path-patterns&quot;&gt;&lt;code&gt;const&lt;/code&gt; patterns&lt;/a&gt; of reference types, and &lt;a href=&quot;patterns#reference-patterns&quot;&gt;reference patterns&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;非参照パターンに&lt;/em&gt;は、バインディング、&lt;a href=&quot;patterns#wildcard-pattern&quot;&gt;ワイルドカードパターン&lt;/a&gt;（ &lt;code&gt;_&lt;/code&gt; ）、参照タイプの&lt;a href=&quot;patterns#path-patterns&quot;&gt; &lt;code&gt;const&lt;/code&gt; パターン&lt;/a&gt;、参照パターンを除くすべての&lt;em&gt;パターンが&lt;/em&gt;含まれ&lt;a href=&quot;patterns#reference-patterns&quot;&gt;ます&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c87699403d42475f0b497d21fa62cf5035ebcee2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: The actual definition of &lt;a href=&quot;../io/trait.write&quot;&gt;&lt;code&gt;Write&lt;/code&gt;&lt;/a&gt; uses &lt;a href=&quot;../io/type.result&quot;&gt;&lt;code&gt;io::Result&lt;/code&gt;&lt;/a&gt;, which is just a synonym for &lt;a href=&quot;enum.result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;T, &lt;/code&gt;&lt;a href=&quot;../io/struct.error&quot;&gt;&lt;code&gt;io::Error&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;注：実際の&lt;a href=&quot;../io/trait.write&quot;&gt; &lt;code&gt;Write&lt;/code&gt; &lt;/a&gt;定義では&lt;a href=&quot;../io/type.result&quot;&gt; &lt;code&gt;io::Result&lt;/code&gt; &lt;/a&gt;を使用します。これは&lt;a href=&quot;enum.result&quot;&gt; &lt;code&gt;Result&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;T, &lt;/code&gt; &lt;a href=&quot;../io/struct.error&quot;&gt; &lt;code&gt;io::Error&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; の同義語です。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="70b104ca519b1781e89b16883d9ec4abee1ce28d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: Currently, no overflow checking is done for the &lt;a href=&quot;../iter/trait.intoiterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; implementation; if you use an integer range and the integer overflows, it might panic in debug mode or create an endless loop in release mode. &lt;strong&gt;This overflow behavior might change in the future.&lt;/strong&gt;</source>
          <target state="translated">&lt;em&gt;注&lt;/em&gt;：現在、&lt;a href=&quot;../iter/trait.intoiterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt;実装ではオーバーフローチェックは行われません。整数の範囲を使用し、整数がオーバーフローした場合、デバッグモードでパニックになるか、リリースモードで無限ループが発生する可能性があります。&lt;strong&gt;このオーバーフロー動作は将来変更される可能性があります。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1e802f553e220dd18bf4818941d72e6a9dc76bc2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;OperatorExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;OperatorExpression&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="707bdb59efd6df1d04ef0a97e7761ae6368376ae" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;OuterAttribute&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;OuterAttribute&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="61f4c3add2cbf87a1ebb0e51006bbc38d76a9f38" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;OuterAttribute&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;OuterAttribute&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="6fbb1da1d7470d11a25428cf31c46f6a27063b7f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ParenthesizedType&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ParenthesizedType&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8b7acc2936472747aad080689d7ab467ef52624a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ParenthesizedType&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ParenthesizedType&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="e44566e2561c2eb7a6760edc74d9f4edecae92f5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Path patterns&lt;/em&gt; are patterns that refer either to constant values or to structs or enum variants that have no fields.</source>
          <target state="translated">&lt;em&gt;パスパターン&lt;/em&gt;は、定数値、またはフィールドのない構造体や列挙型のバリアントを参照するパターンです。</target>
        </trans-unit>
        <trans-unit id="9bcee4bd86adf42333cbfbdb5021dc5e4de35bfd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;PathExprSegment&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;PathExprSegment&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="6866344cc2c77f90134a1e4d8664a91ddb6a1e6c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;PathExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;PathExpression&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="3b21ff3120356d5734116a476d3f58af846cfa68" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;PathIdentSegment&lt;/em&gt; (&lt;code&gt;::&lt;/code&gt;&lt;em&gt;GenericArgs&lt;/em&gt;)&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;PathIdentSegment&lt;/em&gt;（ &lt;code&gt;::&lt;/code&gt; &lt;em&gt;GenericArgs&lt;/em&gt;）&lt;sup&gt;？&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="4f2ab1dc66ffbe80c3e3eb05499904b9752b616b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;PathIdentSegment&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;PathIdentSegment&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="519c591d68e404044ea856e26adda836058be072" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;PathIdentSegment&lt;/em&gt;&lt;code&gt;::&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt; (&lt;a href=&quot;paths#paths-in-expressions&quot;&gt;&lt;em&gt;GenericArgs&lt;/em&gt;&lt;/a&gt; | &lt;em&gt;TypePathFn&lt;/em&gt;)&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;PathIdentSegment &lt;/em&gt; &lt;code&gt;::&lt;/code&gt; &lt;sup&gt;？&lt;/sup&gt;（&lt;a href=&quot;paths#paths-in-expressions&quot;&gt;&lt;em&gt;GenericArgs&lt;/em&gt;&lt;/a&gt; | &lt;em&gt;TypePathFn&lt;/em&gt;）&lt;sup&gt;？&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="2fae05622c303c1d4eccd9ca25430d9d32917508" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;PathInExpression&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;PathInExpression&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3de904317f4b7c125296f50803a5214ebd2270a5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;PathInExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;PathInExpression&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="8cb7cab543206666211bb802cc27b3ce29047765" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;PathPattern&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;PathPattern&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="655915425e7447753811d878f0caf9ea904e20d7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Pattern&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;パターン&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="6ea4d82b3bba42a2dc742d0b085995b0ec2a5047" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;PredicateLoopExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;PredicateLoopExpression&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="d3cd25c56d27f14b1134b4e294f89b2590b57963" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Procedural macros&lt;/em&gt; allow creating syntax extensions as execution of a function. Procedural macros come in one of three flavors:</source>
          <target state="translated">&lt;em&gt;手続き型マクロを&lt;/em&gt;使用すると、関数の実行として構文拡張を作成できます。手続き型マクロには、次の3つの種類があります。</target>
        </trans-unit>
        <trans-unit id="b72a8031347aaf18a58618d59af907d6c8eb9013" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;QualifiedPathInExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;QualifiedPathInExpression&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="77fb3b42cb3dd1ced63e0329de85c328c846330d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;QualifiedPathInType&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;QualifiedPathInType&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="8c80a51014e86782790035357c12fab1f5ffdba3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;QualifiedPathType&lt;/em&gt; (&lt;code&gt;::&lt;/code&gt;&lt;em&gt;PathExprSegment&lt;/em&gt;)&lt;sup&gt;+&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;QualifiedPathType&lt;/em&gt;（ &lt;code&gt;::&lt;/code&gt; &lt;em&gt;PathExprSegment&lt;/em&gt;）&lt;sup&gt;+&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="04f0ea3553ecb7b0b5c8b2bef5c9d0d391a2da64" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;QualifiedPathType&lt;/em&gt; (&lt;code&gt;::&lt;/code&gt;&lt;em&gt;TypePathSegment&lt;/em&gt;)&lt;sup&gt;+&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;QualifiedPathType&lt;/em&gt;（ &lt;code&gt;::&lt;/code&gt; &lt;em&gt;TypePathSegment&lt;/em&gt;）&lt;sup&gt;+&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="4c26401cc9a8056bf9b2a2a79e730a48613992d0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;QualifiedPathType&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;QualifiedPathType&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="135a398a47f9295958865e188f2406e097785d05" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangeExpr&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;RangeExpr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f7a9f296c9a093396885dfd5991001d600043f24" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangeExpr&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;RangeExpr&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="3e653b374c01c7c5dec8665cf4b6535aa5c5e1de" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangeExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;RangeExpression&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="920b763f29d5ca056654f00f7ffa9c69fe46209a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangeFromExpr&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;RangeFromExpr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ea2f802e68ac2369c7598af82179afc86b1e0b6e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangeFromExpr&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;RangeFromExpr&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="363671b9548fb436fda9c9b87cba616cf37f641b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangeFullExpr&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;RangeFullExpr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="85f26367c428a460c7b8099c16615e492b299ee1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangeFullExpr&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;RangeFullExpr&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="126c1a4b65ea9632a7efbfb0fe1c9a1d350f463b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangeInclusiveExpr&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;RangeInclusiveExpr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="19898a1d631dc21ba75a2493d9f0afca74a49f53" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangeInclusiveExpr&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;RangeInclusiveExpr&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="0a1c66b8f9a46931d432ab8cd938cd1959062e1f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangePattern&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;RangePattern&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="9c16f86e2eb7ae21d849c20b2a94807de0634de8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangePatternBound&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;RangePatternBound&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="73bf4ee3f8f843c79f33f8120c7889ebeb1f871d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangePatternBound&lt;/em&gt;&lt;code&gt;..=&lt;/code&gt;&lt;em&gt;RangePatternBound&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;RangePatternBound&lt;/em&gt;&lt;code&gt;..=&lt;/code&gt;&lt;em&gt;RangePatternBound&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b91cce69b109a1113c0f1301b3921f6c0d8c9841" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangeToExpr&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;RangeToExpr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="056f04414a6072c6d8a7d5278b753371763d0866" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangeToExpr&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;RangeToExpr&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="c0a3c68e83ea112500ca6f8241341ce0c95b83e8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangeToInclusiveExpr&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;RangeToInclusiveExpr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="48d09923603391e16f14398b177229e34d2e4358" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangeToInclusiveExpr&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;RangeToInclusiveExpr&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="122d0ec9354f5c94b472176c44d7a71f69f7003b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Raw identifiers&lt;/em&gt; are the syntax that lets you use keywords where they wouldn&amp;rsquo;t normally be allowed. You use a raw identifier by prefixing a keyword with &lt;code&gt;r#&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;生の識別子&lt;/em&gt;は、通常は許可されないキーワードを使用できる構文です。キーワードの前に &lt;code&gt;r#&lt;/code&gt; を付けて、未加工の識別子を使用します。</target>
        </trans-unit>
        <trans-unit id="beb7fd319e09e40c039ed0e647571be692b1855c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RawPointerType&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;RawPointerType&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="bbdab98148adb37f1fd44c8053155f959bcbd95a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ReferencePattern&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ReferencePattern&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="395e4a70cb5a7f0d9cf660245c9441944ed4492a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ReferenceType&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ReferenceType&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="009634e33886b0d3afe59323b0dfb20337a5713e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ReturnExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ReturnExpression&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="6995779224fa4b3c0e17b2c0a7c11e16c2d79815" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;See &lt;a href=&quot;../unsafe-blocks&quot;&gt;&lt;code&gt;unsafe&lt;/code&gt; block&lt;/a&gt; for more information on when to use &lt;code&gt;unsafe&lt;/code&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;参照してください。&lt;a href=&quot;../unsafe-blocks&quot;&gt; &lt;code&gt;unsafe&lt;/code&gt; ブロックを&lt;/a&gt;使用する際の詳細については、 &lt;code&gt;unsafe&lt;/code&gt; &lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ab791639c0e3785d063efb8b6c7566c0199d057f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;See also the function &lt;a href=&quot;fn.set_alloc_error_hook&quot;&gt;&lt;code&gt;set_alloc_error_hook&lt;/code&gt;&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;関数&lt;a href=&quot;fn.set_alloc_error_hook&quot;&gt; &lt;code&gt;set_alloc_error_hook&lt;/code&gt; &lt;/a&gt;も参照してください。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5813e441679317ceb3a63f6e1a90700dbc6169a3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;See also the function &lt;a href=&quot;fn.set_hook&quot;&gt;&lt;code&gt;set_hook&lt;/code&gt;&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;関数&lt;a href=&quot;fn.set_hook&quot;&gt; &lt;code&gt;set_hook&lt;/code&gt; &lt;/a&gt;も参照してください。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d97539b5ffa0ef84ac1570d65777c1c03aa27113" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;See also the traits &lt;a href=&quot;ops/trait.fn&quot;&gt;&lt;code&gt;Fn&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;ops/trait.fnmut&quot;&gt;&lt;code&gt;FnMut&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;ops/trait.fnonce&quot;&gt;&lt;code&gt;FnOnce&lt;/code&gt;&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;特性&lt;a href=&quot;ops/trait.fn&quot;&gt; &lt;code&gt;Fn&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;ops/trait.fnmut&quot;&gt; &lt;code&gt;FnMut&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;ops/trait.fnonce&quot;&gt; &lt;code&gt;FnOnce&lt;/code&gt; &lt;/a&gt;も参照してください。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="42d2d11002016447d13712109a6707c15283f050" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;See the &lt;a href=&quot;index&quot;&gt;&lt;code&gt;pin&lt;/code&gt; module&lt;/a&gt; documentation for an explanation of pinning.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;index&quot;&gt; &lt;code&gt;pin&lt;/code&gt; &lt;/a&gt;留めの説明については、ピンモジュールのドキュメントを参照してください。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5438bca624c396667e7b6deac3c984f7f2e82c10" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;SelfParam&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;SelfParam&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="db4af228731279d394e3046af1d9e82aa1512ac3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Shared-state&lt;/em&gt; concurrency, where multiple threads have access to some piece of data</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;複数のスレッドが一部のデータにアクセスできる&lt;em&gt;共有状態の&lt;/em&gt;同時実行性</target>
        </trans-unit>
        <trans-unit id="d92f6128170d5621eab7e2ceb2d70a694ce8c6db" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;SimplePath&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;SimplePath&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0b742875ad3c0b5a35438c2af92edfd0de93ba9d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;SimplePath&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;SimplePath&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="68150a373debcb76a880319decd58fb043d731d6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;SimplePathSegment&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;SimplePathSegment&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="0324cd3da292de895d59cdae2cacefbad3e79e47" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;SlicePattern&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;SlicePattern&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="96410cd37f6f4dea7c598221484d3b2edd47c848" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;SliceType&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;SliceType&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="8ff80eb69934e90a9bfaaff015c59b5ca994b9a7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Smart pointers&lt;/em&gt;, on the other hand, are data structures that not only act like a pointer but also have additional metadata and capabilities. The concept of smart pointers isn&amp;rsquo;t unique to Rust: smart pointers originated in C++ and exist in other languages as well. In Rust, the different smart pointers defined in the standard library provide functionality beyond that provided by references. One example that we&amp;rsquo;ll explore in this chapter is the &lt;em&gt;reference counting&lt;/em&gt; smart pointer type. This pointer enables you to have multiple owners of data by keeping track of the number of owners and, when no owners remain, cleaning up the data.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;一方、&lt;em&gt;スマートポインタ&lt;/em&gt;は、ポインタのように機能するだけでなく、追加のメタデータと機能も備えたデータ構造です。スマートポインターの概念はRustに固有のものではありません。スマートポインターはC ++で生まれ、他の言語にも存在します。Rustでは、標準ライブラリで定義されたさまざまなスマートポインターが、参照によって提供される機能を超える機能を提供します。この章で取り上げる1つの例は、&lt;em&gt;参照カウントの&lt;/em&gt;スマートポインタ型です。このポインターを使用すると、所有者の数を追跡し、所有者が残っていない場合にデータをクリーンアップすることにより、データの複数の所有者を持つことができます。</target>
        </trans-unit>
        <trans-unit id="253b660cc8be4465d9b8ddd37b6607dc6b51ea77" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Statement&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ステートメント&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="26a623aabcd120adedebbfc207e47e8c9cfe6dbc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Statements&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ステートメント&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="f461b10420ba8e20055ecc8b1a33e58f3b5ee363" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Statements&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;Statements&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="7ebdfb0ba3d68cd6c1c0c7c808149dc0f3e08735" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StaticItem&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StaticItem&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="d8f8c4e4ebe6a1807a58735dd36e3530ebfc7941" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Struct&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;構造&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="52de2279345f8eaf6d3b9e9c7795289b76503d5a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructBase&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructBase&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="3e68420d222a81975d88531202a554741fffad0f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructExprField&lt;/em&gt; (&lt;code&gt;,&lt;/code&gt;&lt;em&gt;StructExprField&lt;/em&gt;)&lt;sup&gt;*&lt;/sup&gt; (&lt;code&gt;,&lt;/code&gt;&lt;em&gt;StructBase&lt;/em&gt; | &lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;)</source>
          <target state="translated">&lt;em&gt;StructExprField&lt;/em&gt;（ &lt;code&gt;,&lt;/code&gt; &lt;em&gt;StructExprField&lt;/em&gt;）&lt;sup&gt;*&lt;/sup&gt;（ &lt;code&gt;,&lt;/code&gt; &lt;em&gt;StructBase&lt;/em&gt; | &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;？&lt;/sup&gt;）</target>
        </trans-unit>
        <trans-unit id="ba0ff6935d6ae7e74f48961a1cc8ea925fb0432a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructExprField&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructExprField&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="524c2b5dba514f3a256359d4d6e99a80046aee79" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructExprFields&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructExprFields&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="1c7ac038df32af7bf2bedcfcebd8fee418a53e36" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructExprStruct&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;StructExprStruct&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="95f24431f7f433e9b111cdeb800975e2c6e55d0c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructExprStruct&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructExprStruct&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="6de6378cef86647803576068cd25d307bc2350b9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructExprTuple&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructExprTuple&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="61ababa832b8ff99e7349a379374adddff95127a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructExprUnit&lt;/em&gt; : &lt;a href=&quot;../paths#paths-in-expressions&quot;&gt;&lt;em&gt;PathInExpression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;StructExprUnit&lt;/em&gt;：&lt;a href=&quot;../paths#paths-in-expressions&quot;&gt;&lt;em&gt;PathInExpression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="92355bdddc574903ee30863a71b7025c51d74961" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructExpression&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="566e949e4f05b2c3cfb42ec91c7ec84804cfcce4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructField&lt;/em&gt; (&lt;code&gt;,&lt;/code&gt;&lt;em&gt;StructField&lt;/em&gt;)&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;StructField&lt;/em&gt;（ &lt;code&gt;,&lt;/code&gt; &lt;em&gt;StructField&lt;/em&gt;）&lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;？&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9a81102e1c82570d28ba1ed11e2d83d0367aef8a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructField&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructField&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="b287480750338275a7af1d6a5b7aad82bb060b6a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructFields&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructFields&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="2bc73189662b63d3361c96b56002244624e69b6d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructPattern&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructPattern&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="210e692a7c3e16c9edf54f6c2392a561a1618c7f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructPatternElements&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructPatternElements&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="39d6ef08ece264673dc6b967b150bae385d05b06" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructPatternElements&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;StructPatternElements&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="238986fb7c84a86b855335c64191a4e00b6cbb02" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructPatternEtCetera&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructPatternEtCetera&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="dbf37477a9316ac6d3b788abc2dc349da0d57a12" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructPatternField&lt;/em&gt; (&lt;code&gt;,&lt;/code&gt;&lt;em&gt;StructPatternField&lt;/em&gt;) &lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;StructPatternField&lt;/em&gt;（ &lt;code&gt;,&lt;/code&gt; &lt;em&gt;StructPatternField&lt;/em&gt;）&lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9f596823fc1b43f97ed24051c4fd4ebb4203a65d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructPatternField&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructPatternField&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="f4a10981df34d23c369c9a6a0648c68dcbf8aaae" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructPatternFields&lt;/em&gt; (&lt;code&gt;,&lt;/code&gt; | &lt;code&gt;,&lt;/code&gt;&lt;em&gt;StructPatternEtCetera&lt;/em&gt;)&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;StructPatternFields&lt;/em&gt;（ &lt;code&gt;,&lt;/code&gt; | &lt;code&gt;,&lt;/code&gt; &lt;em&gt;StructPatternEtCetera&lt;/em&gt;）&lt;sup&gt;？&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="fccf1153a8be4b68ce951da35c0661394670ab0f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructPatternFields&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructPatternFields&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="37314f8f642d31d4e4564ef3ba2e2309e3e2d3a8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructStruct&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;StructStruct&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="30c3ada6c51caeba99cd9d386f477d7aeaf83b53" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructStruct&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructStruct&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="697dfdce9bf3d9b41f94517d0194ddf489983e3a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This trait (&lt;code&gt;Fn&lt;/code&gt;) is not to be confused with &lt;a href=&quot;../primitive.fn&quot;&gt;function pointers&lt;/a&gt; (&lt;code&gt;fn&lt;/code&gt;).&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;この特性（ &lt;code&gt;Fn&lt;/code&gt; ）を&lt;a href=&quot;../primitive.fn&quot;&gt;関数ポインター&lt;/a&gt;（ &lt;code&gt;fn&lt;/code&gt; ）と混同しないでください。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="91d944359a1bf8307d79c422c78262d9c0aec213" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TokenTree&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TokenTree&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="2017c51c85a49d1a852c3fbcde11cec60a9770fa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Trait&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;特性&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="8f1b04dca43b7cfc7c69bb4af366545ceb5cac93" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitBound&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TraitBound&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="69592ca3ff1513e3be0359c2d1e9d62b068f9cfd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitConst&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TraitConst&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="97642c40f2a81ad79da9dd23372db0cae60029dd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitFunc&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;TraitFunc&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2bff8c8b32dfde9becdad8eae0c57efb0b637ebc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitFunc&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TraitFunc&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="ccb6375dd90976afd53f0381f82559e851230993" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitFunctionDecl&lt;/em&gt; ( &lt;code&gt;;&lt;/code&gt; | &lt;a href=&quot;../expressions/block-expr&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt; )</source>
          <target state="translated">&lt;em&gt;TraitFunctionDecl&lt;/em&gt;（ &lt;code&gt;;&lt;/code&gt; | &lt;a href=&quot;../expressions/block-expr&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="a8860991019f8c63d82dc67b054c4a0c9a23a4f1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitFunctionDecl&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TraitFunctionDecl&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="1edaa550e25dd7fde1873d474f96d031a4017cbd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitFunctionParam&lt;/em&gt; (&lt;code&gt;,&lt;/code&gt;&lt;em&gt;TraitFunctionParam&lt;/em&gt;)&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;TraitFunctionParam&lt;/em&gt;（ &lt;code&gt;,&lt;/code&gt; &lt;em&gt;TraitFunctionParam&lt;/em&gt;）&lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;？&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="06d10b607e829541bf1f81fd98aab71758f19f48" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitFunctionParam&lt;/em&gt;&lt;sup&gt;&lt;a href=&quot;traits#parameter-patterns&quot;&gt;&amp;dagger;&lt;/a&gt;&lt;/sup&gt; :</source>
          <target state="translated">&lt;em&gt;TraitFunctionParam &lt;/em&gt;&lt;sup&gt;&lt;a href=&quot;traits#parameter-patterns&quot;&gt;&amp;dagger;&lt;/a&gt;&lt;/sup&gt;：</target>
        </trans-unit>
        <trans-unit id="a304cd39ecff7dfdf794e47ad36c15dfbbc30542" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitFunctionParameters&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TraitFunctionParameters&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="75defe812406ddb68a95aeda39c25e43d70aa012" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitImpl&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TraitImpl&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="c39bd3ba05d7bf507ec884d8e1702a2c0b69c5b0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitImplItem&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TraitImplItem&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="e93aaffcb29c8c74184121078f4b21b7c5416378" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitImplItem&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;TraitImplItem&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9615e2378bf81154c725f2b3d137b61337d67b8e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitItem&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TraitItem&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="c432af0ce759fb8a417605aca32e642204b833dd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitItem&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;TraitItem&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="bf4c27a989d13969f392dc056bde2eb918b684f2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitMethod&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TraitMethod&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="791b15e5455d4a95a0273c137120e140492b3e97" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitMethodDecl&lt;/em&gt; ( &lt;code&gt;;&lt;/code&gt; | &lt;a href=&quot;../expressions/block-expr&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt; )</source>
          <target state="translated">&lt;em&gt;TraitMethodDecl&lt;/em&gt;（ &lt;code&gt;;&lt;/code&gt; | &lt;a href=&quot;../expressions/block-expr&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="23e30546f4c27238213b7a7d90d7983989fd08a0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitMethodDecl&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TraitMethodDecl&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="f845415b3371af4a9129112e68d3ca8790ac2c2f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitObjectType&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TraitObjectType&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="559a479177d1c18edecb461b5ab5dafaa0b24a60" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitObjectTypeOneBound&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TraitObjectTypeOneBound&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="00367738ee72462454e7cefc5497751d3b2dd2d8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitType&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TraitType&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="88fb9e46d8f66f4eefea0a0d09b786fb08ff77bb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TupleElements&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TupleElements&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="82ca008d064e6f22f73764cbb41705b3661743c0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TupleExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TupleExpression&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="b2be422d56678c4beb25054bbb013f90df3f36ad" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TupleField&lt;/em&gt; (&lt;code&gt;,&lt;/code&gt;&lt;em&gt;TupleField&lt;/em&gt;)&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;TupleField&lt;/em&gt;（ &lt;code&gt;,&lt;/code&gt; &lt;em&gt;TupleField&lt;/em&gt;）&lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;？&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="d1964c69c34169ddb45c023b8f6ad7804e8784a9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TupleField&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TupleField&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="7f2fc45439a6ac05238e8033d3cafbac51cca003" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TupleFields&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TupleFields&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="8b561f8148edf91fc8ceba4d6d7f08151b328e44" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TupleIndexingExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TupleIndexingExpression&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="82636c0586552b7db7833ce549c8c2fee23bca69" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TuplePattern&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TuplePattern&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="28bab88d51b0299abc9e03fea50716b7fc4cb76e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TuplePatternItems&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TuplePatternItems&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="63a42f8cc9d12ee22bbd928872038e51b2e84a96" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TupleStruct&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TupleStruct&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="55b0f11f035f5785aec4eee7a34e3cd60a0b8788" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TupleStructItems&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TupleStructItems&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="e626c4062aed9330f99f19598396153bc65ab2c4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TupleStructPattern&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TupleStructPattern&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="b0af4e3e1c043681b4e7e98dd6f497431ff99f36" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TupleType&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TupleType&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="36197e9dcc19894ea01b3a33c74db9be233fa5b2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Type&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Type&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="acb7cfdb169b01b2056fd4b70ce695b6dce975ab" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Type&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;タイプ&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="6580f30f2fbb91f0c202a16b5526ebec104ef496" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypeAlias&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TypeAlias&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="a85ec990c24c83498baea143d931c7990a230d47" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypeBoundWhereClauseItem&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TypeBoundWhereClauseItem&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="cee61c431d57aafff44991227e4c69fe1cdf53de" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypeCastExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TypeCastExpression&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="f1cd8e81e1617639d66de79aea2715d0ace7acad" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypeNoBounds&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;TypeNoBounds&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5424aab74d0d2fe39cdbd91f014de769d880a226" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypeNoBounds&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TypeNoBounds&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="5d9c8a26eb599b91e226d0a8bce641cb0ac7132f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypeParam&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TypeParam&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="80fe390e286fbce96ff6498e206bd07fcdb725b3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypeParamBound&lt;/em&gt; ( &lt;code&gt;+&lt;/code&gt;&lt;em&gt;TypeParamBound&lt;/em&gt; )&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;+&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;TypeParamBound&lt;/em&gt;（ &lt;code&gt;+&lt;/code&gt; &lt;em&gt;TypeParamBound&lt;/em&gt;）&lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;+&lt;/code&gt; &lt;sup&gt;？&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="0191bd504228dd677a10483ab9eb36cde3d82d86" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypeParamBound&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TypeParamBound&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="149b7266088edec9953b0bb5ea7594bff53ee9e3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypeParamBounds&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TypeParamBounds&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="323f8099b5cc4fcb6313ce7c8ad6f5c5b99c7699" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypeParams&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;TypeParams&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="3e8dd9667f560979efe1f5c373fccd047664263f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypePath&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TypePath&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="ec3b0747981182a147f649cbca42c150573d2cbb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypePathFn&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TypePathFn&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="adac299c0d146ed47076cfb530c5e9cad37370c0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypePathFnInputs&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TypePathFnInputs&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="5d0639cb5518a2640ee102f46e684dc647486f0a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypePathSegment&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TypePathSegment&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="dc8474ac4310cfa625a58db09eda48a6193fdce3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Union&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;連合&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="ef35f21f99ec1e61037f284bf1cabe5f9e9e272b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;UnsafeBlockExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;UnsafeBlockExpression&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="4054dfafbaa8bb2a66ecccf5b3ebb00ee96ffe74" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;UseDeclaration&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;UseDeclaration&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="f50876417424d4d896476cb7f20d89dd7713485a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;UseTree&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;UseTree&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="71ebdef7d7317084043d257adb8cb88491987d82" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;VisItem&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;VisItem&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="43fd81989c8fb8be977c8584a63a2a9b4265eb46" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;VisItem&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;VisItem&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="2ccf92fd74eccfb92144612b5643b6134e7f98b2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Visibility&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;可視性&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="d45de78fa9ccdf83478ce3380d866ccb6658db66" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Where clauses&lt;/em&gt; provide another way to specify bounds on type and lifetime parameters as well as a way to specify bounds on types that aren't type parameters.</source>
          <target state="translated">&lt;em&gt;Where句&lt;/em&gt;は、型およびライフタイムパラメーターの範囲を指定する別の方法と、型パラメーターではない型の範囲を指定する方法を提供します。</target>
        </trans-unit>
        <trans-unit id="ff786522e51ee848c23ade94d46bd1a722a44ef6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;WhereClause&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;WhereClause&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="2f425d58e216b8abdf730282aec2e2ced920cf8e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;WhereClauseItem&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;WhereClauseItem&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="5754695102dfe3cd0f49e9d18dc6e5bd798aace5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;WildcardPattern&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;WildcardPattern&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="302c963be9788a72ba07e67b0021b52f4c796ab2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;any ASCII (i.e 0x00 to 0x7F), except&lt;/em&gt;&lt;code&gt;&quot;&lt;/code&gt;, &lt;code&gt;\&lt;/code&gt;&lt;em&gt;and IsolatedCR&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&quot;&lt;/code&gt; 、 &lt;code&gt;\&lt;/code&gt; &lt;em&gt;、およびIsolatedCR &lt;/em&gt;&lt;em&gt;を除く、任意のASCII（つまり0x00から0x7F）&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b45bef9788c16b898f5430e15f0ffd77c1e56277" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;any ASCII (i.e. 0x00 to 0x7F), except&lt;/em&gt;&lt;code&gt;'&lt;/code&gt;, &lt;code&gt;\&lt;/code&gt;, \n, \r or \t</source>
          <target state="translated">&lt;em&gt;ASCII（つまり0x00から0x7F）、ただし&lt;/em&gt; &lt;code&gt;'&lt;/code&gt; 、 &lt;code&gt;\&lt;/code&gt; 、\ n、\ rまたは\ t &lt;em&gt;を除く&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1f7743746809b99884ae23fba74c25051171b18d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;any ASCII (i.e. 0x00 to 0x7F)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;任意のASCII（つまり0x00から0x7F）&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d2c2a89bc15e15ebf0ac33105fd923646f79fb71" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;by Steve Klabnik and Carol Nichols, with contributions from the Rust Community&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Steve KlabnikとCarol Nicholsによる、Rustコミュニティからの寄稿&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="11422e22a39de0af093535e24fc8505d168c2bb0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;nothing&lt;/em&gt; &amp;rArr; &lt;a href=&quot;trait.display&quot;&gt;&lt;code&gt;Display&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;なし&lt;/em&gt; &amp;rArr; &lt;a href=&quot;trait.display&quot;&gt; &lt;code&gt;Display&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9f06557a4f67dee5e955068615617812bd7b49d0" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.__pad0&quot;&gt;&lt;code id=&quot;__pad0.v&quot;&gt;__pad0: &lt;a href=&quot;../../raw/type.c_int&quot;&gt;c_int&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.__pad0&quot;&gt; &lt;code id=&quot;__pad0.v&quot;&gt;__pad0: &lt;a href=&quot;../../raw/type.c_int&quot;&gt;c_int&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5677f02800461e733fbf31ef92f786a12d6f671e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.__unused&quot;&gt;&lt;code id=&quot;__unused.v&quot;&gt;__unused: &lt;a href=&quot;../../../primitive.array&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../../raw/type.c_long&quot;&gt;c_long&lt;/a&gt;&lt;a href=&quot;../../../primitive.array&quot;&gt;; 3]&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.__unused&quot;&gt; &lt;code id=&quot;__unused.v&quot;&gt;__unused: &lt;a href=&quot;../../../primitive.array&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../../raw/type.c_long&quot;&gt;c_long&lt;/a&gt;&lt;a href=&quot;../../../primitive.array&quot;&gt;; 3]&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8810ba453083a9187a21a12b15eb7a149bea36c1" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.data&quot;&gt;&lt;code id=&quot;data.v&quot;&gt;data: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.data&quot;&gt; &lt;code id=&quot;data.v&quot;&gt;data: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="da329b4a7a67a97d64b4cf6cc5010bf78c39c6d9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.end&quot;&gt;&lt;code id=&quot;end.v&quot;&gt;end: Idx&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.end&quot;&gt; &lt;code id=&quot;end.v&quot;&gt;end: Idx&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b13577b6feccf3971f23407018824a3bef45ebf9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.major&quot;&gt;&lt;code id=&quot;major.v&quot;&gt;major: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.major&quot;&gt; &lt;code id=&quot;major.v&quot;&gt;major: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="180d30d6da1a5642ab4b3ac7ec2eaa9132a9a0f7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.micro&quot;&gt;&lt;code id=&quot;micro.v&quot;&gt;micro: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.micro&quot;&gt; &lt;code id=&quot;micro.v&quot;&gt;micro: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="416703e1955def8a64303bc8dc479d6065856279" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.minor&quot;&gt;&lt;code id=&quot;minor.v&quot;&gt;minor: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.minor&quot;&gt; &lt;code id=&quot;minor.v&quot;&gt;minor: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="73a043f1f7253ee911b4231525dd4e3356df5001" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_atime&quot;&gt;&lt;code id=&quot;st_atime.v&quot;&gt;st_atime: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_atime&quot;&gt; &lt;code id=&quot;st_atime.v&quot;&gt;st_atime: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0f6395466b333dbe35b1ed9267380cf6ebc61b7c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_atime_nsec&quot;&gt;&lt;code id=&quot;st_atime_nsec.v&quot;&gt;st_atime_nsec: &lt;a href=&quot;../../raw/type.c_long&quot;&gt;c_long&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_atime_nsec&quot;&gt; &lt;code id=&quot;st_atime_nsec.v&quot;&gt;st_atime_nsec: &lt;a href=&quot;../../raw/type.c_long&quot;&gt;c_long&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="084cbb4253fac525903fe6cb3af050f521ae48ab" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_blksize&quot;&gt;&lt;code id=&quot;st_blksize.v&quot;&gt;st_blksize: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_blksize&quot;&gt; &lt;code id=&quot;st_blksize.v&quot;&gt;st_blksize: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b3971e6c694e7fbd63db0f0bedebd2c9b3181e73" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_blocks&quot;&gt;&lt;code id=&quot;st_blocks.v&quot;&gt;st_blocks: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_blocks&quot;&gt; &lt;code id=&quot;st_blocks.v&quot;&gt;st_blocks: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4dfcbef09a11b9bfd30285716478de2f114a05da" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_ctime&quot;&gt;&lt;code id=&quot;st_ctime.v&quot;&gt;st_ctime: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_ctime&quot;&gt; &lt;code id=&quot;st_ctime.v&quot;&gt;st_ctime: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="29688f2aab6b1e81b77a9bd8f260ec2ebac3c0ba" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_ctime_nsec&quot;&gt;&lt;code id=&quot;st_ctime_nsec.v&quot;&gt;st_ctime_nsec: &lt;a href=&quot;../../raw/type.c_long&quot;&gt;c_long&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_ctime_nsec&quot;&gt; &lt;code id=&quot;st_ctime_nsec.v&quot;&gt;st_ctime_nsec: &lt;a href=&quot;../../raw/type.c_long&quot;&gt;c_long&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9697dcc912c6b9171594847f38a2631d99d4bfc7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_dev&quot;&gt;&lt;code id=&quot;st_dev.v&quot;&gt;st_dev: &lt;a href=&quot;../../../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_dev&quot;&gt; &lt;code id=&quot;st_dev.v&quot;&gt;st_dev: &lt;a href=&quot;../../../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6e708b7c08677d2226d492b09bc57f021de593f4" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_gid&quot;&gt;&lt;code id=&quot;st_gid.v&quot;&gt;st_gid: &lt;a href=&quot;../../../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_gid&quot;&gt; &lt;code id=&quot;st_gid.v&quot;&gt;st_gid: &lt;a href=&quot;../../../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="537f8b3679513c1355553fedd3faf79ae6540555" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_ino&quot;&gt;&lt;code id=&quot;st_ino.v&quot;&gt;st_ino: &lt;a href=&quot;../../../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_ino&quot;&gt; &lt;code id=&quot;st_ino.v&quot;&gt;st_ino: &lt;a href=&quot;../../../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8e5a73d56e9ec1691cc0b77c93c60d9eb6ae0127" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_mode&quot;&gt;&lt;code id=&quot;st_mode.v&quot;&gt;st_mode: &lt;a href=&quot;../../../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_mode&quot;&gt; &lt;code id=&quot;st_mode.v&quot;&gt;st_mode: &lt;a href=&quot;../../../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="413b5e14b5dfc07ddd073f68f742388395ec9660" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_mtime&quot;&gt;&lt;code id=&quot;st_mtime.v&quot;&gt;st_mtime: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_mtime&quot;&gt; &lt;code id=&quot;st_mtime.v&quot;&gt;st_mtime: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="534c9e596a4c78975da3107baefb599a862104f3" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_mtime_nsec&quot;&gt;&lt;code id=&quot;st_mtime_nsec.v&quot;&gt;st_mtime_nsec: &lt;a href=&quot;../../raw/type.c_long&quot;&gt;c_long&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_mtime_nsec&quot;&gt; &lt;code id=&quot;st_mtime_nsec.v&quot;&gt;st_mtime_nsec: &lt;a href=&quot;../../raw/type.c_long&quot;&gt;c_long&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7b5692c36ead107be34df7bdeb0d0074f52b37a5" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_nlink&quot;&gt;&lt;code id=&quot;st_nlink.v&quot;&gt;st_nlink: &lt;a href=&quot;../../../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_nlink&quot;&gt; &lt;code id=&quot;st_nlink.v&quot;&gt;st_nlink: &lt;a href=&quot;../../../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1273a6096f46f541222315f10648ed37ee993ea9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_rdev&quot;&gt;&lt;code id=&quot;st_rdev.v&quot;&gt;st_rdev: &lt;a href=&quot;../../../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_rdev&quot;&gt; &lt;code id=&quot;st_rdev.v&quot;&gt;st_rdev: &lt;a href=&quot;../../../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fd7bf2eea86eaa3c6a503716f0877168d1e72843" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_size&quot;&gt;&lt;code id=&quot;st_size.v&quot;&gt;st_size: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_size&quot;&gt; &lt;code id=&quot;st_size.v&quot;&gt;st_size: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ddb60037ec6366dc35d9714f06b0fd9c774f5d44" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_uid&quot;&gt;&lt;code id=&quot;st_uid.v&quot;&gt;st_uid: &lt;a href=&quot;../../../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_uid&quot;&gt; &lt;code id=&quot;st_uid.v&quot;&gt;st_uid: &lt;a href=&quot;../../../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="eddff13a75a62b336450792dac9389705ff5535e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.start&quot;&gt;&lt;code id=&quot;start.v&quot;&gt;start: Idx&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.start&quot;&gt; &lt;code id=&quot;start.v&quot;&gt;start: Idx&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="595c429917c7e83bb5ea003723a3dad4fbc3892c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.status&quot;&gt;&lt;code id=&quot;status.v&quot;&gt;status: &lt;a href=&quot;struct.exitstatus&quot;&gt;ExitStatus&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.status&quot;&gt; &lt;code id=&quot;status.v&quot;&gt;status: &lt;a href=&quot;struct.exitstatus&quot;&gt;ExitStatus&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="825360808bc06e18c7f2405dabacd498f4219908" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.stderr&quot;&gt;&lt;code id=&quot;stderr.v&quot;&gt;stderr: &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.childstderr&quot;&gt;ChildStderr&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.stderr&quot;&gt; &lt;code id=&quot;stderr.v&quot;&gt;stderr: &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.childstderr&quot;&gt;ChildStderr&lt;/a&gt;&amp;gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="98259434ff21e599526464c9c321fa1c184d2e5b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.stderr&quot;&gt;&lt;code id=&quot;stderr.v&quot;&gt;stderr: &lt;a href=&quot;../vec/struct.vec&quot;&gt;Vec&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.stderr&quot;&gt; &lt;code id=&quot;stderr.v&quot;&gt;stderr: &lt;a href=&quot;../vec/struct.vec&quot;&gt;Vec&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="47b26a9e0d20f6cfab3b55fbedd302f4e67d3a6c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.stdin&quot;&gt;&lt;code id=&quot;stdin.v&quot;&gt;stdin: &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.childstdin&quot;&gt;ChildStdin&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.stdin&quot;&gt; &lt;code id=&quot;stdin.v&quot;&gt;stdin: &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.childstdin&quot;&gt;ChildStdin&lt;/a&gt;&amp;gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2c0a7a091d0d9050c602ca56d1525931ad7deea2" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.stdout&quot;&gt;&lt;code id=&quot;stdout.v&quot;&gt;stdout: &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.childstdout&quot;&gt;ChildStdout&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.stdout&quot;&gt; &lt;code id=&quot;stdout.v&quot;&gt;stdout: &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.childstdout&quot;&gt;ChildStdout&lt;/a&gt;&amp;gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="df1647dd486f6b3f232e94bbe3907a6c0233f73d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.stdout&quot;&gt;&lt;code id=&quot;stdout.v&quot;&gt;stdout: &lt;a href=&quot;../vec/struct.vec&quot;&gt;Vec&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.stdout&quot;&gt; &lt;code id=&quot;stdout.v&quot;&gt;stdout: &lt;a href=&quot;../vec/struct.vec&quot;&gt;Vec&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f5df205eb14bf75f9a41d2d8686bf3e7bbd3b5a7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.vtable&quot;&gt;&lt;code id=&quot;vtable.v&quot;&gt;vtable: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.vtable&quot;&gt; &lt;code id=&quot;vtable.v&quot;&gt;vtable: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="946b4825a836b123aed1b0db3bdee153a15764b5" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.AcqRel&quot;&gt;&lt;code id=&quot;AcqRel.v&quot;&gt;AcqRel&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.AcqRel&quot;&gt;&lt;code id=&quot;AcqRel.v&quot;&gt;AcqRel&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4230cc993ac07ca6573267284010ddeec6c0e7b1" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Acquire&quot;&gt;&lt;code id=&quot;Acquire.v&quot;&gt;Acquire&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Acquire&quot;&gt;&lt;code id=&quot;Acquire.v&quot;&gt;Acquire&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="dc03c50ab33c44b4d36f66bde38b884449d85298" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.AddrInUse&quot;&gt;&lt;code id=&quot;AddrInUse.v&quot;&gt;AddrInUse&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.AddrInUse&quot;&gt;&lt;code id=&quot;AddrInUse.v&quot;&gt;AddrInUse&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1e2f3ad358c4f9376ca5812807bdd724fa113d13" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.AddrNotAvailable&quot;&gt;&lt;code id=&quot;AddrNotAvailable.v&quot;&gt;AddrNotAvailable&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.AddrNotAvailable&quot;&gt;&lt;code id=&quot;AddrNotAvailable.v&quot;&gt;AddrNotAvailable&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a44f465c3041a29d11e1e21b6969999191177828" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.AdminLocal&quot;&gt;&lt;code id=&quot;AdminLocal.v&quot;&gt;AdminLocal&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.AdminLocal&quot;&gt;&lt;code id=&quot;AdminLocal.v&quot;&gt;AdminLocal&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4a1aab14de7e04e1624f4f2b9dc6fdff082be47a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.AllocErr&quot;&gt;&lt;code id=&quot;AllocErr.v&quot;&gt;AllocErr&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.AllocErr&quot;&gt;&lt;code id=&quot;AllocErr.v&quot;&gt;AllocErr&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8c56e960d29aea402847dc3cb9c2765608c50e01" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.AlreadyExists&quot;&gt;&lt;code id=&quot;AlreadyExists.v&quot;&gt;AlreadyExists&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.AlreadyExists&quot;&gt;&lt;code id=&quot;AlreadyExists.v&quot;&gt;AlreadyExists&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2103b11c02c41b20de7b764371ab1bb036ab3215" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Borrowed&quot;&gt;&lt;code id=&quot;Borrowed.v&quot;&gt;Borrowed(&lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;'a &lt;/a&gt;B)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Borrowed&quot;&gt; &lt;code id=&quot;Borrowed.v&quot;&gt;Borrowed(&lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;'a &lt;/a&gt;B)&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6e4494920de112b3e89be4c3786787e2a871ce5a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Both&quot;&gt;&lt;code id=&quot;Both.v&quot;&gt;Both&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Both&quot;&gt;&lt;code id=&quot;Both.v&quot;&gt;Both&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="195633d52548a9956e44a14bb98d903a93470814" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.BrokenPipe&quot;&gt;&lt;code id=&quot;BrokenPipe.v&quot;&gt;BrokenPipe&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.BrokenPipe&quot;&gt;&lt;code id=&quot;BrokenPipe.v&quot;&gt;BrokenPipe&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c06dc18f824fba3f7eed99af71c6c15e25b0f467" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.CapacityOverflow&quot;&gt;&lt;code id=&quot;CapacityOverflow.v&quot;&gt;CapacityOverflow&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.CapacityOverflow&quot;&gt;&lt;code id=&quot;CapacityOverflow.v&quot;&gt;CapacityOverflow&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="119cdee165ba265ebe5e4af818c7cf2037a1cdee" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Center&quot;&gt;&lt;code id=&quot;Center.v&quot;&gt;Center&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Center&quot;&gt;&lt;code id=&quot;Center.v&quot;&gt;Center&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="19bc00cf17ef0759c612db31b403eb94011a38f4" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Complete&quot;&gt;&lt;code id=&quot;Complete.v&quot;&gt;Complete(R)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Complete&quot;&gt;&lt;code id=&quot;Complete.v&quot;&gt;Complete(R)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a14409bce0e2fae9b46e220d9d0c91d82f930c2a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.ConnectionAborted&quot;&gt;&lt;code id=&quot;ConnectionAborted.v&quot;&gt;ConnectionAborted&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.ConnectionAborted&quot;&gt;&lt;code id=&quot;ConnectionAborted.v&quot;&gt;ConnectionAborted&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9b8f4dcd7d9a633c50319b6e301160353718a09b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.ConnectionRefused&quot;&gt;&lt;code id=&quot;ConnectionRefused.v&quot;&gt;ConnectionRefused&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.ConnectionRefused&quot;&gt;&lt;code id=&quot;ConnectionRefused.v&quot;&gt;ConnectionRefused&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fb1ea9fb34f773addb085d7bcfeffdf0a1415e16" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.ConnectionReset&quot;&gt;&lt;code id=&quot;ConnectionReset.v&quot;&gt;ConnectionReset&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.ConnectionReset&quot;&gt;&lt;code id=&quot;ConnectionReset.v&quot;&gt;ConnectionReset&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ce7593f8f4bb701502df6d50e2a38596b5c8a53d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.CurDir&quot;&gt;&lt;code id=&quot;CurDir.v&quot;&gt;CurDir&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.CurDir&quot;&gt;&lt;code id=&quot;CurDir.v&quot;&gt;CurDir&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="84c1a1e1ada471c42be621e237a9254c3b5880aa" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Current&quot;&gt;&lt;code id=&quot;Current.v&quot;&gt;Current(&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Current&quot;&gt;&lt;code id=&quot;Current.v&quot;&gt;Current(&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8555525de0dceb6fc1426858d8f93bcde834077e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.DeviceNS&quot;&gt;&lt;code id=&quot;DeviceNS.v&quot;&gt;DeviceNS(&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.DeviceNS&quot;&gt; &lt;code id=&quot;DeviceNS.v&quot;&gt;DeviceNS(&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;)&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="dd839a797c1a40f3f1e67eb9f42850b9214871d8" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Disconnected&quot;&gt;&lt;code id=&quot;Disconnected.v&quot;&gt;Disconnected(T)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Disconnected&quot;&gt;&lt;code id=&quot;Disconnected.v&quot;&gt;Disconnected(T)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="233b8a56070e10c5a6edb89ca81599295404f11c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Disconnected&quot;&gt;&lt;code id=&quot;Disconnected.v&quot;&gt;Disconnected&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Disconnected&quot;&gt;&lt;code id=&quot;Disconnected.v&quot;&gt;Disconnected&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c0eb1ad83d989c28d2123be40143869034589ee9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Disk&quot;&gt;&lt;code id=&quot;Disk.v&quot;&gt;Disk(&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Disk&quot;&gt;&lt;code id=&quot;Disk.v&quot;&gt;Disk(&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6e365e1d981853ff8abacf24d6c798e85b26da8b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Done&quot;&gt;&lt;code id=&quot;Done.v&quot;&gt;Done&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Done&quot;&gt;&lt;code id=&quot;Done.v&quot;&gt;Done&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ebd1e2656a25389b38042a2ee93aa0b0274a99a9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Empty&quot;&gt;&lt;code id=&quot;Empty.v&quot;&gt;Empty&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Empty&quot;&gt;&lt;code id=&quot;Empty.v&quot;&gt;Empty&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0a848e76f7264564f321770ded44bb9b7a1b6a35" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.End&quot;&gt;&lt;code id=&quot;End.v&quot;&gt;End(&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.End&quot;&gt;&lt;code id=&quot;End.v&quot;&gt;End(&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8723331951b34d82be19c1ce625b1ee6fce56d46" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Equal&quot;&gt;&lt;code id=&quot;Equal.v&quot;&gt;Equal&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Equal&quot;&gt;&lt;code id=&quot;Equal.v&quot;&gt;Equal&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f2ab196f2f7910502ba63d388b2f3e81b93c0c1e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Err&quot;&gt;&lt;code id=&quot;Err.v&quot;&gt;Err(E)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Err&quot;&gt;&lt;code id=&quot;Err.v&quot;&gt;Err(E)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b06630fdb5853b0a418ffdd873576b5d9c8e2b2b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Excluded&quot;&gt;&lt;code id=&quot;Excluded.v&quot;&gt;Excluded(T)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Excluded&quot;&gt;&lt;code id=&quot;Excluded.v&quot;&gt;Excluded(T)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cd86649b7c0dfd7f171f39f3053fd365094c5c2f" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Full&quot;&gt;&lt;code id=&quot;Full.v&quot;&gt;Full(T)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Full&quot;&gt;&lt;code id=&quot;Full.v&quot;&gt;Full(T)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0530d6c549164d07b8b93ef5281b06fb1cb9fe7b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Global&quot;&gt;&lt;code id=&quot;Global.v&quot;&gt;Global&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Global&quot;&gt;&lt;code id=&quot;Global.v&quot;&gt;Global&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c6051a7f005811e75ec6c3941285e0a20030184a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Greater&quot;&gt;&lt;code id=&quot;Greater.v&quot;&gt;Greater&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Greater&quot;&gt;&lt;code id=&quot;Greater.v&quot;&gt;Greater&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="28027264a8441670c966494a873a91c837582fed" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Included&quot;&gt;&lt;code id=&quot;Included.v&quot;&gt;Included(T)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Included&quot;&gt;&lt;code id=&quot;Included.v&quot;&gt;Included(T)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="97b749903f93feeafc24b841c8f5eab4658dac32" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Infinite&quot;&gt;&lt;code id=&quot;Infinite.v&quot;&gt;Infinite&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Infinite&quot;&gt;&lt;code id=&quot;Infinite.v&quot;&gt;Infinite&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="29801ef3d9b2a5ad56cd3314f21e2ed90897033b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.InterfaceLocal&quot;&gt;&lt;code id=&quot;InterfaceLocal.v&quot;&gt;InterfaceLocal&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.InterfaceLocal&quot;&gt;&lt;code id=&quot;InterfaceLocal.v&quot;&gt;InterfaceLocal&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a153734777372f0e6fe6c60d5d2d4e768d9a00e2" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Interrupted&quot;&gt;&lt;code id=&quot;Interrupted.v&quot;&gt;Interrupted&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Interrupted&quot;&gt;&lt;code id=&quot;Interrupted.v&quot;&gt;Interrupted&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="944cde559a80f504150d19aac1a4186667a904f3" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.InvalidData&quot;&gt;&lt;code id=&quot;InvalidData.v&quot;&gt;InvalidData&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.InvalidData&quot;&gt;&lt;code id=&quot;InvalidData.v&quot;&gt;InvalidData&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="861dfeecaacd5ddd3f7f53e4e01501b19aed3c2e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.InvalidDigit&quot;&gt;&lt;code id=&quot;InvalidDigit.v&quot;&gt;InvalidDigit&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.InvalidDigit&quot;&gt;&lt;code id=&quot;InvalidDigit.v&quot;&gt;InvalidDigit&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cec6b2f0a96ccb9826f2699dd136b03c65975f65" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.InvalidInput&quot;&gt;&lt;code id=&quot;InvalidInput.v&quot;&gt;InvalidInput&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.InvalidInput&quot;&gt;&lt;code id=&quot;InvalidInput.v&quot;&gt;InvalidInput&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1c48a08f5e35337d1285fa3d1f5ea2fa86b8980a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Left&quot;&gt;&lt;code id=&quot;Left.v&quot;&gt;Left&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Left&quot;&gt;&lt;code id=&quot;Left.v&quot;&gt;Left&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bfc5b4925fbc65a6078ed6e61288122455b8da20" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Less&quot;&gt;&lt;code id=&quot;Less.v&quot;&gt;Less&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Less&quot;&gt;&lt;code id=&quot;Less.v&quot;&gt;Less&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="04c2e527909a275828dbb2bc9c176ac1614afb9a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.LinkLocal&quot;&gt;&lt;code id=&quot;LinkLocal.v&quot;&gt;LinkLocal&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.LinkLocal&quot;&gt;&lt;code id=&quot;LinkLocal.v&quot;&gt;LinkLocal&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3a3be082674449bec271275edbb5b3bdedbea9cf" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Match&quot;&gt;&lt;code id=&quot;Match.v&quot;&gt;Match(&lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;,&amp;nbsp;&lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Match&quot;&gt;&lt;code id=&quot;Match.v&quot;&gt;Match(&lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;,&amp;nbsp;&lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="33c57e7136af06da2673c92afbecc78b42d4bb8d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Nan&quot;&gt;&lt;code id=&quot;Nan.v&quot;&gt;Nan&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Nan&quot;&gt;&lt;code id=&quot;Nan.v&quot;&gt;Nan&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1833b9dfa5fa15a79300095828f4a1061fcca6ae" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.None&quot;&gt;&lt;code id=&quot;None.v&quot;&gt;None&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.None&quot;&gt;&lt;code id=&quot;None.v&quot;&gt;None&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8b7f9960f8fede66e69c8346c0fe55971b394846" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Normal&quot;&gt;&lt;code id=&quot;Normal.v&quot;&gt;Normal(&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Normal&quot;&gt; &lt;code id=&quot;Normal.v&quot;&gt;Normal(&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;)&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="73e37be22e9836d151f22b696fa4cc08cde49c7a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Normal&quot;&gt;&lt;code id=&quot;Normal.v&quot;&gt;Normal&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Normal&quot;&gt;&lt;code id=&quot;Normal.v&quot;&gt;Normal&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="302bdd905be9ba572bf55602011599880b543fb0" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.NotConnected&quot;&gt;&lt;code id=&quot;NotConnected.v&quot;&gt;NotConnected&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.NotConnected&quot;&gt;&lt;code id=&quot;NotConnected.v&quot;&gt;NotConnected&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bf20326c7704ca8a2d60e0103d4eef981db0a71b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.NotPresent&quot;&gt;&lt;code id=&quot;NotPresent.v&quot;&gt;NotPresent&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.NotPresent&quot;&gt;&lt;code id=&quot;NotPresent.v&quot;&gt;NotPresent&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bd6891d626f18686dd978498d564a3a9dd632671" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.NotUnicode&quot;&gt;&lt;code id=&quot;NotUnicode.v&quot;&gt;NotUnicode(&lt;a href=&quot;../ffi/struct.osstring&quot;&gt;OsString&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.NotUnicode&quot;&gt;&lt;code id=&quot;NotUnicode.v&quot;&gt;NotUnicode(&lt;a href=&quot;../ffi/struct.osstring&quot;&gt;OsString&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="58ca30b68e1ee1141f60c556208edc9df2863f7a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Occupied&quot;&gt;&lt;code id=&quot;Occupied.v&quot;&gt;Occupied(&lt;a href=&quot;struct.occupiedentry&quot;&gt;OccupiedEntry&lt;/a&gt;&amp;lt;'a, K, V&amp;gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Occupied&quot;&gt; &lt;code id=&quot;Occupied.v&quot;&gt;Occupied(&lt;a href=&quot;struct.occupiedentry&quot;&gt;OccupiedEntry&lt;/a&gt;&amp;lt;'a, K, V&amp;gt;)&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="79d84ac84d7562b64ee8b46eb17bc54857797e35" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Occupied&quot;&gt;&lt;code id=&quot;Occupied.v&quot;&gt;Occupied(&lt;a href=&quot;struct.rawoccupiedentrymut&quot;&gt;RawOccupiedEntryMut&lt;/a&gt;&amp;lt;'a, K, V&amp;gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Occupied&quot;&gt; &lt;code id=&quot;Occupied.v&quot;&gt;Occupied(&lt;a href=&quot;struct.rawoccupiedentrymut&quot;&gt;RawOccupiedEntryMut&lt;/a&gt;&amp;lt;'a, K, V&amp;gt;)&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fd094f1fe30e236145ad34a6ef2aeae32c47c024" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Ok&quot;&gt;&lt;code id=&quot;Ok.v&quot;&gt;Ok(T)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Ok&quot;&gt;&lt;code id=&quot;Ok.v&quot;&gt;Ok(T)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ad29067dc1ddb6390eecde4b19ddb7b4e48556ec" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.OrganizationLocal&quot;&gt;&lt;code id=&quot;OrganizationLocal.v&quot;&gt;OrganizationLocal&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.OrganizationLocal&quot;&gt;&lt;code id=&quot;OrganizationLocal.v&quot;&gt;OrganizationLocal&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="614945d762d7b7f3ca7d4d33a62bfa4cf751b4f5" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Other&quot;&gt;&lt;code id=&quot;Other.v&quot;&gt;Other&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Other&quot;&gt;&lt;code id=&quot;Other.v&quot;&gt;Other&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1f80b89959df88b9a4c7a182108e33e7ae034e34" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Overflow&quot;&gt;&lt;code id=&quot;Overflow.v&quot;&gt;Overflow&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Overflow&quot;&gt;&lt;code id=&quot;Overflow.v&quot;&gt;Overflow&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0a7ec9dfedf294e598bbdf184ee94ac142f649e2" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Owned&quot;&gt;&lt;code id=&quot;Owned.v&quot;&gt;Owned(&amp;lt;B as &lt;a href=&quot;trait.toowned&quot;&gt;ToOwned&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.toowned#associatedtype.Owned&quot;&gt;Owned&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Owned&quot;&gt; &lt;code id=&quot;Owned.v&quot;&gt;Owned(&amp;lt;B as &lt;a href=&quot;trait.toowned&quot;&gt;ToOwned&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.toowned#associatedtype.Owned&quot;&gt;Owned&lt;/a&gt;)&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="366f13f97df38e7760f99f4ed4e6f443cb52b78a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.ParentDir&quot;&gt;&lt;code id=&quot;ParentDir.v&quot;&gt;ParentDir&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.ParentDir&quot;&gt;&lt;code id=&quot;ParentDir.v&quot;&gt;ParentDir&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8fca49f6b1e54b2f6eb0e0614b84b19a82a57a2d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Pending&quot;&gt;&lt;code id=&quot;Pending.v&quot;&gt;Pending&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Pending&quot;&gt;&lt;code id=&quot;Pending.v&quot;&gt;Pending&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f8ea77fa0d82d545e02bfa5a78c7b86db79b230a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.PermissionDenied&quot;&gt;&lt;code id=&quot;PermissionDenied.v&quot;&gt;PermissionDenied&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.PermissionDenied&quot;&gt;&lt;code id=&quot;PermissionDenied.v&quot;&gt;PermissionDenied&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="426c64483da2ed8fb22c4d0ef80fe7462462dec0" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Poisoned&quot;&gt;&lt;code id=&quot;Poisoned.v&quot;&gt;Poisoned(&lt;a href=&quot;struct.poisonerror&quot;&gt;PoisonError&lt;/a&gt;&amp;lt;T&amp;gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Poisoned&quot;&gt;&lt;code id=&quot;Poisoned.v&quot;&gt;Poisoned(&lt;a href=&quot;struct.poisonerror&quot;&gt;PoisonError&lt;/a&gt;&amp;lt;T&amp;gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="aabf6ec799b83a62729dd8ddca3e66fd2e29a1b0" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Prefix&quot;&gt;&lt;code id=&quot;Prefix.v&quot;&gt;Prefix(&lt;a href=&quot;struct.prefixcomponent&quot;&gt;PrefixComponent&lt;/a&gt;&amp;lt;'a&amp;gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Prefix&quot;&gt;&lt;code id=&quot;Prefix.v&quot;&gt;Prefix(&lt;a href=&quot;struct.prefixcomponent&quot;&gt;PrefixComponent&lt;/a&gt;&amp;lt;'a&amp;gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3de0621cd9bcefb6247dfd9619970dbd8debeda9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Read&quot;&gt;&lt;code id=&quot;Read.v&quot;&gt;Read&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Read&quot;&gt;&lt;code id=&quot;Read.v&quot;&gt;Read&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e1efd3f72ec0589cd90bdcc31f61d490b9e1ba0b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Ready&quot;&gt;&lt;code id=&quot;Ready.v&quot;&gt;Ready(T)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Ready&quot;&gt;&lt;code id=&quot;Ready.v&quot;&gt;Ready(T)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="288a138d722b4ebc06719c5a87497ea19f4b32b2" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.RealmLocal&quot;&gt;&lt;code id=&quot;RealmLocal.v&quot;&gt;RealmLocal&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.RealmLocal&quot;&gt;&lt;code id=&quot;RealmLocal.v&quot;&gt;RealmLocal&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9f7194b11e9652ccc63640018e61ad9fa189051d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Reject&quot;&gt;&lt;code id=&quot;Reject.v&quot;&gt;Reject(&lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;,&amp;nbsp;&lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Reject&quot;&gt;&lt;code id=&quot;Reject.v&quot;&gt;Reject(&lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;,&amp;nbsp;&lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="aa24735ea4548068cac195fa82eac6028e590e9b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Release&quot;&gt;&lt;code id=&quot;Release.v&quot;&gt;Release&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Release&quot;&gt;&lt;code id=&quot;Release.v&quot;&gt;Release&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="06c0431051b594fb99ab03870fd7e8251b995997" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Right&quot;&gt;&lt;code id=&quot;Right.v&quot;&gt;Right&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Right&quot;&gt;&lt;code id=&quot;Right.v&quot;&gt;Right&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2bc13f3a3f558e67936274b79305e4dc6242a960" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.RootDir&quot;&gt;&lt;code id=&quot;RootDir.v&quot;&gt;RootDir&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.RootDir&quot;&gt;&lt;code id=&quot;RootDir.v&quot;&gt;RootDir&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d5a6c2f3840abf373975c58db866fd05566f07fa" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.SeqCst&quot;&gt;&lt;code id=&quot;SeqCst.v&quot;&gt;SeqCst&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.SeqCst&quot;&gt;&lt;code id=&quot;SeqCst.v&quot;&gt;SeqCst&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="700fbd54368779d7c9e308dc4255e5f268c517b1" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.SiteLocal&quot;&gt;&lt;code id=&quot;SiteLocal.v&quot;&gt;SiteLocal&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.SiteLocal&quot;&gt;&lt;code id=&quot;SiteLocal.v&quot;&gt;SiteLocal&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="42457a7c802e96aa7ca550c99c3489f984533ece" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Some&quot;&gt;&lt;code id=&quot;Some.v&quot;&gt;Some(T)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Some&quot;&gt;&lt;code id=&quot;Some.v&quot;&gt;Some(T)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ba0ec412b4f5daa35203a6a7d1344b09c477fe1a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Start&quot;&gt;&lt;code id=&quot;Start.v&quot;&gt;Start(&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Start&quot;&gt;&lt;code id=&quot;Start.v&quot;&gt;Start(&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="119bce8494f5d1c83df82c443bac86537d0fe2c9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Subnormal&quot;&gt;&lt;code id=&quot;Subnormal.v&quot;&gt;Subnormal&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Subnormal&quot;&gt;&lt;code id=&quot;Subnormal.v&quot;&gt;Subnormal&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5d2078249f3a354ac09a4548a73efd3c5aa98f30" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Timeout&quot;&gt;&lt;code id=&quot;Timeout.v&quot;&gt;Timeout&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Timeout&quot;&gt;&lt;code id=&quot;Timeout.v&quot;&gt;Timeout&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b7657da1c54904b1a94f601ce854c30560cfe56f" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.UNC&quot;&gt;&lt;code id=&quot;UNC.v&quot;&gt;UNC(&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;,&amp;nbsp;&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.UNC&quot;&gt; &lt;code id=&quot;UNC.v&quot;&gt;UNC(&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;,&amp;nbsp;&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;)&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7251262f6418487ba30792246a9f626d6a25f83c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Unbounded&quot;&gt;&lt;code id=&quot;Unbounded.v&quot;&gt;Unbounded&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Unbounded&quot;&gt;&lt;code id=&quot;Unbounded.v&quot;&gt;Unbounded&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6504115f74e762170d71f0c01803aa1433e0ce47" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Underflow&quot;&gt;&lt;code id=&quot;Underflow.v&quot;&gt;Underflow&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Underflow&quot;&gt;&lt;code id=&quot;Underflow.v&quot;&gt;Underflow&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="238e882f1739488ba7a030da1c404786df9579f9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.UnexpectedEof&quot;&gt;&lt;code id=&quot;UnexpectedEof.v&quot;&gt;UnexpectedEof&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.UnexpectedEof&quot;&gt;&lt;code id=&quot;UnexpectedEof.v&quot;&gt;UnexpectedEof&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a8dd251a1207d4e11e3d10d61c6d014b2646ff37" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.V4&quot;&gt;&lt;code id=&quot;V4.v&quot;&gt;V4(&lt;a href=&quot;struct.ipv4addr&quot;&gt;Ipv4Addr&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.V4&quot;&gt;&lt;code id=&quot;V4.v&quot;&gt;V4(&lt;a href=&quot;struct.ipv4addr&quot;&gt;Ipv4Addr&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="900d145487fbb075cf35b7f31871559fc4e06aea" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.V4&quot;&gt;&lt;code id=&quot;V4.v&quot;&gt;V4(&lt;a href=&quot;struct.socketaddrv4&quot;&gt;SocketAddrV4&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.V4&quot;&gt;&lt;code id=&quot;V4.v&quot;&gt;V4(&lt;a href=&quot;struct.socketaddrv4&quot;&gt;SocketAddrV4&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ccd5990162f9019755ca0861aec17eeb838635c5" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.V6&quot;&gt;&lt;code id=&quot;V6.v&quot;&gt;V6(&lt;a href=&quot;struct.ipv6addr&quot;&gt;Ipv6Addr&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.V6&quot;&gt;&lt;code id=&quot;V6.v&quot;&gt;V6(&lt;a href=&quot;struct.ipv6addr&quot;&gt;Ipv6Addr&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="df27b63255e5ca4dd10ee3931d89a214cb7a79e8" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.V6&quot;&gt;&lt;code id=&quot;V6.v&quot;&gt;V6(&lt;a href=&quot;struct.socketaddrv6&quot;&gt;SocketAddrV6&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.V6&quot;&gt;&lt;code id=&quot;V6.v&quot;&gt;V6(&lt;a href=&quot;struct.socketaddrv6&quot;&gt;SocketAddrV6&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b1ea069ef9327f5c3a1a861557ea04c82575ae3c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Vacant&quot;&gt;&lt;code id=&quot;Vacant.v&quot;&gt;Vacant(&lt;a href=&quot;struct.rawvacantentrymut&quot;&gt;RawVacantEntryMut&lt;/a&gt;&amp;lt;'a, K, V, S&amp;gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Vacant&quot;&gt; &lt;code id=&quot;Vacant.v&quot;&gt;Vacant(&lt;a href=&quot;struct.rawvacantentrymut&quot;&gt;RawVacantEntryMut&lt;/a&gt;&amp;lt;'a, K, V, S&amp;gt;)&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a3f52e8e92525a9484f9ea21a413660d15607c54" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Vacant&quot;&gt;&lt;code id=&quot;Vacant.v&quot;&gt;Vacant(&lt;a href=&quot;struct.vacantentry&quot;&gt;VacantEntry&lt;/a&gt;&amp;lt;'a, K, V&amp;gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Vacant&quot;&gt; &lt;code id=&quot;Vacant.v&quot;&gt;Vacant(&lt;a href=&quot;struct.vacantentry&quot;&gt;VacantEntry&lt;/a&gt;&amp;lt;'a, K, V&amp;gt;)&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cc590a03de1082f370b8b404e093e91ac5cb0306" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Verbatim&quot;&gt;&lt;code id=&quot;Verbatim.v&quot;&gt;Verbatim(&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Verbatim&quot;&gt; &lt;code id=&quot;Verbatim.v&quot;&gt;Verbatim(&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;)&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5aa296add133e61d06a6d4259d1fb0881eb7bd39" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.VerbatimDisk&quot;&gt;&lt;code id=&quot;VerbatimDisk.v&quot;&gt;VerbatimDisk(&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.VerbatimDisk&quot;&gt;&lt;code id=&quot;VerbatimDisk.v&quot;&gt;VerbatimDisk(&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f6b929546a75faa42e8181de8ca57bcfbd173f85" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.VerbatimUNC&quot;&gt;&lt;code id=&quot;VerbatimUNC.v&quot;&gt;VerbatimUNC(&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;,&amp;nbsp;&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.VerbatimUNC&quot;&gt; &lt;code id=&quot;VerbatimUNC.v&quot;&gt;VerbatimUNC(&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;,&amp;nbsp;&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;)&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9cd9ad739de8cce934db346fc40fc958c8b3429e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.WouldBlock&quot;&gt;&lt;code id=&quot;WouldBlock.v&quot;&gt;WouldBlock&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.WouldBlock&quot;&gt;&lt;code id=&quot;WouldBlock.v&quot;&gt;WouldBlock&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="31c97026aa6d07f6414185d909730c36779144a9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Write&quot;&gt;&lt;code id=&quot;Write.v&quot;&gt;Write&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Write&quot;&gt;&lt;code id=&quot;Write.v&quot;&gt;Write&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="61e6c90d5de31882b090799d674e61ef0d0f389c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.WriteZero&quot;&gt;&lt;code id=&quot;WriteZero.v&quot;&gt;WriteZero&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.WriteZero&quot;&gt;&lt;code id=&quot;WriteZero.v&quot;&gt;WriteZero&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="dc8ede49b45bb296751c2a5d3ace189c5a80e69c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Yielded&quot;&gt;&lt;code id=&quot;Yielded.v&quot;&gt;Yielded(Y)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Yielded&quot;&gt;&lt;code id=&quot;Yielded.v&quot;&gt;Yielded(Y)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6b8f56e3c79b5975e1be195dd3734989bee366c7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Zero&quot;&gt;&lt;code id=&quot;Zero.v&quot;&gt;Zero&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Zero&quot;&gt;&lt;code id=&quot;Zero.v&quot;&gt;Zero&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8d30ecbd2f33931b54af81e7b1473f6ce8c0ba0d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://github.com/rust-lang/rust/issues/10184&quot;&gt;NOTE: currently this will cause Undefined Behavior if the rounded value cannot be represented by the target integer type&lt;/a&gt;&lt;/strong&gt;. This includes Inf and NaN. This is a bug and will be fixed.</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://github.com/rust-lang/rust/issues/10184&quot;&gt;注：現在、丸められた値がターゲット整数型で表現できない場合、これにより未定義の動作が発生し&lt;/a&gt;&lt;/strong&gt;ます。これにはInfとNaNが含まれます。これはバグであり、修正される予定です。</target>
        </trans-unit>
        <trans-unit id="92971d62fe3186475f026398e7a0174099738633" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://github.com/rust-lang/rust/issues/15536&quot;&gt;NOTE: currently this will cause Undefined Behavior if the value is finite but larger or smaller than the largest or smallest finite value representable by f32&lt;/a&gt;&lt;/strong&gt;. This is a bug and will be fixed.</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://github.com/rust-lang/rust/issues/15536&quot;&gt;注：現在、値が有限であるがf32で表現可能な最大または最小の有限値よりも大きいまたは小さい場合、これにより未定義の動作が発生します&lt;/a&gt;&lt;/strong&gt;。これはバグであり、修正される予定です。</target>
        </trans-unit>
        <trans-unit id="1afbb08e18a2a8950ebdff5b3534ae0f7e3fd83f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Note&lt;/em&gt;&lt;/strong&gt;: The &lt;code&gt;rustc&lt;/code&gt; compiler automatically inlines functions based on internal heuristics. Incorrectly inlining functions can make the program slower, so this attribute should be used with care.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;注&lt;/em&gt;&lt;/strong&gt;： &lt;code&gt;rustc&lt;/code&gt; コンパイラーは、内部ヒューリスティックに基づいて関数を自動的にインライン化します。関数を誤ってインライン化するとプログラムが遅くなる可能性があるため、この属性の使用には注意が必要です。</target>
        </trans-unit>
        <trans-unit id="52af196e2df7d6d1d70d4b20971e00ada5feef77" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Warning:&lt;/em&gt;&lt;/strong&gt; Dereferencing an unaligned pointer is &lt;a href=&quot;behavior-considered-undefined&quot;&gt;undefined behavior&lt;/a&gt; and it is possible to &lt;a href=&quot;https://github.com/rust-lang/rust/issues/27060&quot;&gt;safely create unaligned pointers to &lt;code&gt;packed&lt;/code&gt; fields&lt;/a&gt;. Like all ways to create undefined behavior in safe Rust, this is a bug.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;警告：&lt;/em&gt;&lt;/strong&gt;非境界整列ポインターの逆参照は&lt;a href=&quot;behavior-considered-undefined&quot;&gt;未定義の動作で&lt;/a&gt;あり&lt;a href=&quot;https://github.com/rust-lang/rust/issues/27060&quot;&gt;、 &lt;code&gt;packed&lt;/code&gt; フィールドへの非境界整列ポインターを安全に作成する&lt;/a&gt;ことが可能です。Safe Rustで未定義の動作を作成するすべての方法と同様に、これはバグです。</target>
        </trans-unit>
        <trans-unit id="641eae7d16c8e6d62bab0c62010b11532ce2de80" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Warning:&lt;/em&gt;&lt;/strong&gt; For &lt;a href=&quot;../types/trait-object&quot;&gt;trait objects&lt;/a&gt;, if there is an inherent method of the same name as a trait method, it will give a compiler error when trying to call the method in a method call expression. Instead, you can call the method using &lt;a href=&quot;call-expr#disambiguating-function-calls&quot;&gt;disambiguating function call syntax&lt;/a&gt;, in which case it calls the trait method, not the inherent method. There is no way to call the inherent method. Just don't define inherent methods on trait objects with the same name a trait method and you'll be fine.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;警告：&lt;/em&gt;&lt;/strong&gt;について&lt;a href=&quot;../types/trait-object&quot;&gt;形質がオブジェクト&lt;/a&gt;形質メソッドと同じ名前の固有の方法がある場合は、メソッド呼び出し式でメソッドを呼び出すしようとしたとき、それはコンパイラのエラーになります。代わりに、&lt;a href=&quot;call-expr#disambiguating-function-calls&quot;&gt;明確な関数呼び出し構文&lt;/a&gt;を使用してメソッドを呼び出すことができます。この場合、固有のメソッドではなく特性メソッドを呼び出します。固有のメソッドを呼び出す方法はありません。トレイトメソッドと同じ名前のトレイトオブジェクトに固有のメソッドを定義しないでください。</target>
        </trans-unit>
        <trans-unit id="14f5badea1be2736539096eaf684db8c5d26b01b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Warning:&lt;/em&gt;&lt;/strong&gt; The following list is not exhaustive. There is no formal model of Rust's semantics for what is and is not allowed in unsafe code, so there may be more behavior considered unsafe. The following list is just what we know for sure is undefined behavior. Please read the &lt;a href=&quot;https://doc.rust-lang.org/nomicon/index.html&quot;&gt;Rustonomicon&lt;/a&gt; before writing unsafe code.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;警告：&lt;/em&gt;&lt;/strong&gt;次のリストは完全ではありません。安全ではないコードで許可されているものと許可されていないものについて、Rustのセマンティクスの正式なモデルはないため、安全でないと見なされる動作が増える可能性があります。次のリストは、未定義の動作であることを確認したものです。安全でないコードを書く前に、&lt;a href=&quot;https://doc.rust-lang.org/nomicon/index.html&quot;&gt; Rustonomiconを&lt;/a&gt;読んでください。</target>
        </trans-unit>
        <trans-unit id="0029a09af0cc0f5afc1611697c9ad1ed7b7d0cfc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Warning:&lt;/em&gt;&lt;/strong&gt; With two trait object types, even when the complete set of traits is the same, if the base traits differ, the type is different. For example, &lt;code&gt;dyn Send + Sync&lt;/code&gt; is a different type from &lt;code&gt;dyn Sync + Send&lt;/code&gt;. See &lt;a href=&quot;https://github.com/rust-lang/rust/issues/33140&quot;&gt;issue 33140&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;警告：&lt;/em&gt;&lt;/strong&gt; 2つの特性オブジェクトタイプでは、特性の完全なセットが同じであっても、基本特性が異なる場合、タイプは異なります。たとえば、 &lt;code&gt;dyn Send + Sync&lt;/code&gt; は &lt;code&gt;dyn Sync + Send&lt;/code&gt; とは異なるタイプです。&lt;a href=&quot;https://github.com/rust-lang/rust/issues/33140&quot;&gt;問題33140を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ee107fe206809602998471109ca3cf88bae2bbb4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;sup&gt;Lexer 2015&lt;/sup&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;sup&gt;レクサー2015&lt;/sup&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="086e314e305cc39ba4d4b327b89e5d7a0d8c6f03" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;sup&gt;Lexer 2018+&lt;/sup&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;sup&gt;レクサー2018+&lt;/sup&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="32563aa7feb766e8d7e65307f8bc48e47003b702" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;sup&gt;Lexer:&lt;/sup&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;sup&gt;Lexer:&lt;/sup&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a3ac7aad80402b534d708e407025f17f7772a4ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;sup&gt;Lexer&lt;/sup&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;sup&gt;Lexer&lt;/sup&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="13ea811ecc594e94181b24eb80a75c60e5e29672" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;sup&gt;Syntax:&lt;/sup&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;sup&gt;Syntax:&lt;/sup&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4284bd4d709ac711e8c06bbdaf51939ae42316ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;sup&gt;Syntax&lt;/sup&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;sup&gt;Syntax&lt;/sup&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="04d38a540329625df538c94f4f56761b0074d0fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Character size&lt;/strong&gt; - C strings may use &lt;code&gt;char&lt;/code&gt; or &lt;code&gt;wchar_t&lt;/code&gt;-sized characters; please &lt;strong&gt;note&lt;/strong&gt; that C's &lt;code&gt;char&lt;/code&gt; is different from Rust's. The C standard leaves the actual sizes of those types open to interpretation, but defines different APIs for strings made up of each character type. Rust strings are always UTF-8, so different Unicode characters will be encoded in a variable number of bytes each. The Rust type &lt;a href=&quot;../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt; represents a '&lt;a href=&quot;http://www.unicode.org/glossary/#unicode_scalar_value&quot;&gt;Unicode scalar value&lt;/a&gt;', which is similar to, but not the same as, a '&lt;a href=&quot;http://www.unicode.org/glossary/#code_point&quot;&gt;Unicode code point&lt;/a&gt;'.</source>
          <target state="translated">&lt;strong&gt;文字サイズ&lt;/strong&gt; -C文字列は &lt;code&gt;char&lt;/code&gt; または &lt;code&gt;wchar_t&lt;/code&gt; サイズの文字を使用できます。Cの &lt;code&gt;char&lt;/code&gt; はRustのcharとは異なることに&lt;strong&gt;注意し&lt;/strong&gt;てください。C標準では、これらの型の実際のサイズは解釈の自由になっていますが、各文字型で構成される文字列に対して異なるAPIを定義しています。Rust文字列は常にUTF-8であるため、さまざまなUnicode文字がそれぞれ可変バイト数でエンコードされます。Rust型の&lt;a href=&quot;../primitive.char&quot;&gt; &lt;code&gt;char&lt;/code&gt; &lt;/a&gt;は、 ' &lt;a href=&quot;http://www.unicode.org/glossary/#unicode_scalar_value&quot;&gt;Unicodeスカラー値&lt;/a&gt; 'を表します。これは、 ' &lt;a href=&quot;http://www.unicode.org/glossary/#code_point&quot;&gt;Unicodeコードポイント&lt;/a&gt; ' と似ていますが、同じではありません。</target>
        </trans-unit>
        <trans-unit id="700eaca40cee125f38cc4d75b02d62979fde8825" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Crates:&lt;/strong&gt; A tree of modules that produces a library or executable</source>
          <target state="translated">&lt;strong&gt;クレート：&lt;/strong&gt;ライブラリまたは実行可能ファイルを生成するモジュールのツリー</target>
        </trans-unit>
        <trans-unit id="6b8b3462b6d6c541b754f0aec381f7e706c421ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edition Differences&lt;/strong&gt;: In the 2015 Edition, the crate root contains a variety of different items, including external crates, default crates such as &lt;code&gt;std&lt;/code&gt; and &lt;code&gt;core&lt;/code&gt;, and items in the top level of the crate (including &lt;code&gt;use&lt;/code&gt; imports).</source>
          <target state="translated">&lt;strong&gt;エディションの違い&lt;/strong&gt;：2015エディションでは、クレートのルートには、外部クレート、 &lt;code&gt;std&lt;/code&gt; や &lt;code&gt;core&lt;/code&gt; などのデフォルトのクレート、クレートの最上位レベルのアイテム（ &lt;code&gt;use&lt;/code&gt; インポートを含む）など、さまざまなアイテムが含まれています。</target>
        </trans-unit>
        <trans-unit id="e088bfe5ad018353c64bdbb01968dcde42ba3d14" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edition Differences&lt;/strong&gt;: In the 2015 edition, &lt;code&gt;use&lt;/code&gt; paths also allow accessing items in the crate root. Using the example above, the following &lt;code&gt;use&lt;/code&gt; paths work in 2015 but not 2018:</source>
          <target state="translated">&lt;strong&gt;エディションの違い&lt;/strong&gt;：2015エディションでは、 &lt;code&gt;use&lt;/code&gt; パスを使用してクレートルート内のアイテムにアクセスすることもできます。上記の例を使用すると、次の &lt;code&gt;use&lt;/code&gt; パスは2015では機能しますが、2018では機能しません。</target>
        </trans-unit>
        <trans-unit id="627f712f9b93a0a851f59c926530c05272107ff4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edition Differences&lt;/strong&gt;: In the 2015 edition, crates in the extern prelude cannot be referenced via &lt;a href=&quot;use-declarations&quot;&gt;use declarations&lt;/a&gt;, so it is generally standard practice to include &lt;code&gt;extern crate&lt;/code&gt; declarations to bring them into scope.</source>
          <target state="translated">&lt;strong&gt;エディションの違い&lt;/strong&gt;：2015版では、externプレリュード内のクレートは&lt;a href=&quot;use-declarations&quot;&gt;use宣言&lt;/a&gt;で参照できないため、 &lt;code&gt;extern crate&lt;/code&gt; 宣言を含めてスコープに含めるのが一般的な標準的な方法です。</target>
        </trans-unit>
        <trans-unit id="f5085a0b269138950b893252f1966657953ef4b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edition Differences&lt;/strong&gt;: In the 2015 edition, if the first bound of the trait object is a path that starts with &lt;code&gt;::&lt;/code&gt;, then the &lt;code&gt;dyn&lt;/code&gt; will be treated as a part of the path. The first path can be put in parenthesis to get around this. As such, if you want a trait object with the trait &lt;code&gt;::your_module::Trait&lt;/code&gt;, you should write it as &lt;code&gt;dyn (::your_module::Trait)&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;エディションの違い&lt;/strong&gt;：2015版では、特性オブジェクトの最初の境界が &lt;code&gt;::&lt;/code&gt; で始まるパスである場合、 &lt;code&gt;dyn&lt;/code&gt; はパスの一部として扱われます。これを回避するために、最初のパスを括弧で囲むことができます。そのため、特性 &lt;code&gt;::your_module::Trait&lt;/code&gt; 持つ特性オブジェクトが必要な場合は、それを &lt;code&gt;dyn (::your_module::Trait)&lt;/code&gt; として記述する必要があります。</target>
        </trans-unit>
        <trans-unit id="d876e32afa65f2d220b1dd922c7a25c124ae5c8d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edition Differences&lt;/strong&gt;: In the 2015 edition, it is possible to declare trait methods with anonymous parameters (e.g. &lt;code&gt;fn foo(u8)&lt;/code&gt;). This is deprecated and an error as of the 2018 edition. All parameters must have an argument name.</source>
          <target state="translated">&lt;strong&gt;エディションの違い&lt;/strong&gt;：2015エディションでは、匿名パラメーター（例： &lt;code&gt;fn foo(u8)&lt;/code&gt; ）を使用して特性メソッドを宣言できます。これは非推奨であり、2018年版の時点ではエラーです。すべてのパラメーターには引数名が必要です。</target>
        </trans-unit>
        <trans-unit id="d8a4eb3a8ecd26bd2a8200c1aa407e7c962a47c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edition Differences&lt;/strong&gt;: In the 2015 edition, this syntax is valid that is disallowed as of the 2018 edition.</source>
          <target state="translated">&lt;strong&gt;エディションの違い&lt;/strong&gt;：2015エディションでは、この構文は有効ですが、2018エディションでは許可されていません。</target>
        </trans-unit>
        <trans-unit id="e6c48e95dbd2c5b344112038b2d6d28be512c6e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edition Differences&lt;/strong&gt;: Starting with the 2018 edition, paths for &lt;code&gt;pub(in path)&lt;/code&gt; must start with &lt;code&gt;crate&lt;/code&gt;, &lt;code&gt;self&lt;/code&gt;, or &lt;code&gt;super&lt;/code&gt;. The 2015 edition may also use paths starting with &lt;code&gt;::&lt;/code&gt; or modules from the crate root.</source>
          <target state="translated">&lt;strong&gt;エディションの違い&lt;/strong&gt;：2018エディション以降、 &lt;code&gt;pub(in path)&lt;/code&gt; のパスは &lt;code&gt;crate&lt;/code&gt; 、 &lt;code&gt;self&lt;/code&gt; 、または &lt;code&gt;super&lt;/code&gt; で始まる必要があります。2015版では、 &lt;code&gt;::&lt;/code&gt; で始まるパス、またはクレートルートからのモジュールも使用できます。</target>
        </trans-unit>
        <trans-unit id="2bd803d8196215afbdb722ca42ff6863ebfdce05" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Encodings&lt;/strong&gt; - Rust strings are UTF-8, but C strings may use other encodings. If you are using a string from C, you should check its encoding explicitly, rather than just assuming that it is UTF-8 like you can do in Rust.</source>
          <target state="translated">&lt;strong&gt;エンコーディング&lt;/strong&gt; -Rust文字列はUTF-8ですが、C文字列は他のエンコーディングを使用する場合があります。Cの文字列を使用している場合は、RustのようにUTF-8であると想定するのではなく、そのエンコーディングを明示的に確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="c4744b4de56ac84ab4967b9e79393a7382d93137" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Errors&lt;/strong&gt;: If the function returns a &lt;code&gt;Result&lt;/code&gt;, describing the kinds of errors that might occur and what conditions might cause those errors to be returned can be helpful to callers so they can write code to handle the different kinds of errors in different ways.</source>
          <target state="translated">&lt;strong&gt;エラー&lt;/strong&gt;：関数が &lt;code&gt;Result&lt;/code&gt; を返す場合、発生する可能性のあるエラーの種類とそれらのエラーが返される原因となる可能性のある条件を説明すると、さまざまな種類のエラーをさまざまな方法で処理するコードを記述できるようになります。</target>
        </trans-unit>
        <trans-unit id="ab2c858e00d5352d65014ede49ecfd4f78f2629f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;From C to Rust:&lt;/strong&gt;&lt;a href=&quot;struct.cstr&quot;&gt;&lt;code&gt;CStr&lt;/code&gt;&lt;/a&gt; represents a borrowed C string; it is what you would use to wrap a raw &lt;code&gt;*const &lt;/code&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;&lt;code&gt;u8&lt;/code&gt;&lt;/a&gt; that you got from a C function. A &lt;a href=&quot;struct.cstr&quot;&gt;&lt;code&gt;CStr&lt;/code&gt;&lt;/a&gt; is guaranteed to be a nul-terminated array of bytes. Once you have a &lt;a href=&quot;struct.cstr&quot;&gt;&lt;code&gt;CStr&lt;/code&gt;&lt;/a&gt;, you can convert it to a Rust &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; if it's valid UTF-8, or lossily convert it by adding replacement characters.</source>
          <target state="translated">&lt;strong&gt;CからRustへ：&lt;/strong&gt;&lt;a href=&quot;struct.cstr&quot;&gt; &lt;code&gt;CStr&lt;/code&gt; &lt;/a&gt;は借用されたC文字列を表します。これは、C関数から取得した生の &lt;code&gt;*const &lt;/code&gt; &lt;a href=&quot;../primitive.u8&quot;&gt; &lt;code&gt;u8&lt;/code&gt; &lt;/a&gt;をラップするために使用するものです。A &lt;a href=&quot;struct.cstr&quot;&gt; &lt;code&gt;CStr&lt;/code&gt; 関数は、&lt;/a&gt;バイトのNULで終わる配列であることが保証されます。あなたが持ってたら&lt;a href=&quot;struct.cstr&quot;&gt; &lt;code&gt;CStr&lt;/code&gt; 関数を&lt;/a&gt;、あなたは錆に変換することができます&lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;&amp;amp;str&lt;/code&gt; &lt;/a&gt;、それが有効なUTF-8だ場合、または非可逆置換文字を追加することによって、それを変換します。</target>
        </trans-unit>
        <trans-unit id="6a880c7c09fd0c1f69a3098a3095ef95bac0a546" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;From Rust to C:&lt;/strong&gt;&lt;a href=&quot;struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; represents an owned, C-friendly string: it is nul-terminated, and has no internal nul characters. Rust code can create a &lt;a href=&quot;struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; out of a normal string (provided that the string doesn't have nul characters in the middle), and then use a variety of methods to obtain a raw &lt;code&gt;*mut &lt;/code&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;&lt;code&gt;u8&lt;/code&gt;&lt;/a&gt; that can then be passed as an argument to functions which use the C conventions for strings.</source>
          <target state="translated">&lt;strong&gt;RustからCへ：&lt;/strong&gt;&lt;a href=&quot;struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt;は所有されたCフレンドリーな文字列を表します。これはNULで終了し、内部のNUL文字はありません。Rustコードは、通常の文字列から&lt;a href=&quot;struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt;を作成し（文字列の中央にヌル文字がない場合）、さまざまなメソッドを使用して、引数として渡される生の &lt;code&gt;*mut &lt;/code&gt; &lt;a href=&quot;../primitive.u8&quot;&gt; &lt;code&gt;u8&lt;/code&gt; &lt;/a&gt;を取得できます。文字列にCの規則を使用する関数。</target>
        </trans-unit>
        <trans-unit id="c2238adb64a05e56adbe151507af6c19abcbbbc4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;From a Rust string&lt;/strong&gt;: &lt;code&gt;OsString&lt;/code&gt; implements &lt;a href=&quot;../convert/trait.from&quot;&gt;&lt;code&gt;From&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;, so you can use &lt;code&gt;my_string.from&lt;/code&gt; to create an &lt;code&gt;OsString&lt;/code&gt; from a normal Rust string.</source>
          <target state="translated">&lt;strong&gt;Rust文字列から&lt;/strong&gt;： &lt;code&gt;OsString&lt;/code&gt; は&lt;a href=&quot;../convert/trait.from&quot;&gt; &lt;code&gt;From&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; を実装するため、 &lt;code&gt;OsString&lt;/code&gt; を使用して通常のRust文字列から &lt;code&gt;my_string.from&lt;/code&gt; を作成できます。</target>
        </trans-unit>
        <trans-unit id="adfbc9f4c9b7bf87cce69244480b633a8de2c39f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;From slices:&lt;/strong&gt; Just like you can start with an empty Rust &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; and then &lt;a href=&quot;../string/struct.string#method.push_str&quot;&gt;&lt;code&gt;push_str&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt; sub-string slices into it, you can create an empty &lt;code&gt;OsString&lt;/code&gt; with the &lt;a href=&quot;#method.new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; method and then push string slices into it with the &lt;a href=&quot;#method.push&quot;&gt;&lt;code&gt;push&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;strong&gt;スライスから：&lt;/strong&gt;空のRust &lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;から始めて、&lt;a href=&quot;../string/struct.string#method.push_str&quot;&gt; &lt;code&gt;push_str&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;amp;str&lt;/code&gt; サブ文字列スライスを &lt;code&gt;OsString&lt;/code&gt; できるように、&lt;a href=&quot;#method.new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt;メソッドで空のOsStringを作成し、&lt;a href=&quot;#method.push&quot;&gt; &lt;code&gt;push&lt;/code&gt; &lt;/a&gt;メソッドで文字列スライスをプッシュできます。</target>
        </trans-unit>
        <trans-unit id="629ec911ccd79d718629d3b5e11521368319be97" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Internal nul characters&lt;/strong&gt; - When C strings have a nul terminator character, this usually means that they cannot have nul characters in the middle &amp;mdash; a nul character would essentially truncate the string. Rust strings &lt;em&gt;can&lt;/em&gt; have nul characters in the middle, because nul does not have to mark the end of the string in Rust.</source>
          <target state="translated">&lt;strong&gt;内部ヌル文字&lt;/strong&gt; -C文字列にヌルターミネーター文字がある場合、これは通常、中央にヌル文字を含めることができないことを意味します。ヌル文字は基本的に文字列を切り捨てます。Rustの文字列の終わりをnulでマークする必要がないため、Rust文字列の中央にnul文字を含める&lt;em&gt;こと&lt;/em&gt;が&lt;em&gt;でき&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="b41d1a37bb22ed7e91444167c781b032f81cc870" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Modules&lt;/strong&gt; and &lt;strong&gt;use:&lt;/strong&gt; Let you control the organization, scope, and privacy of paths</source>
          <target state="translated">&lt;strong&gt;モジュール&lt;/strong&gt;と&lt;strong&gt;使用：&lt;/strong&gt;パスの編成、スコープ、プライバシーを制御できます</target>
        </trans-unit>
        <trans-unit id="060d89d923956472cc05e7319b76fa9d50a7e876" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE: The third invariant is currently unenforced due to historical oversight and significant reliance on the behaviour. It is currently undecided what to do about this going forward. Macros that do not respect the behaviour may become invalid in a future edition of Rust. See the &lt;a href=&quot;https://github.com/rust-lang/rust/issues/56575&quot;&gt;tracking issue&lt;/a&gt;.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注：3番目の不変条件は、履歴の監視と動作への大幅な依存により、現在は適用されていません。現在、これについてどうするかは未定です。この動作を尊重しないマクロは、Rustの将来のエディションでは無効になる可能性があります。&lt;a href=&quot;https://github.com/rust-lang/rust/issues/56575&quot;&gt;追跡の問題を&lt;/a&gt;ご覧ください。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="379a60c8e2b4b827557b233553a6bc6c82683fa1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: If a parent of the given path doesn't exist, this function will return an error. To create a directory and all its missing parents at the same time, use the &lt;a href=&quot;fn.create_dir_all&quot;&gt;&lt;code&gt;create_dir_all&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：指定されたパスの親が存在しない場合、この関数はエラーを返します。ディレクトリとそのすべての欠落している親を同時に作成するには、&lt;a href=&quot;fn.create_dir_all&quot;&gt; &lt;code&gt;create_dir_all&lt;/code&gt; &lt;/a&gt;関数を使用します。</target>
        </trans-unit>
        <trans-unit id="6558cd07ee1a59a066bae7f1a7d1d4e7129c19ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note: This trait must not fail&lt;/strong&gt;. If the conversion can fail, use &lt;a href=&quot;trait.tryfrom&quot;&gt;&lt;code&gt;TryFrom&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注：この特性は失敗してはなりません&lt;/strong&gt;。変換が失敗する可能性がある場合は、&lt;a href=&quot;trait.tryfrom&quot;&gt; &lt;code&gt;TryFrom&lt;/code&gt; を&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="fc7fd5e949a51b13efc359ef4faae3bf584089ed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note: This trait must not fail&lt;/strong&gt;. If the conversion can fail, use &lt;a href=&quot;trait.tryinto&quot;&gt;&lt;code&gt;TryInto&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注：この特性は失敗してはなりません&lt;/strong&gt;。変換が失敗する可能性がある場合は、&lt;a href=&quot;trait.tryinto&quot;&gt; &lt;code&gt;TryInto&lt;/code&gt; を&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="a5b6ef596678a6ec7ac86f37d73d853ca889a37a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note: This trait must not fail&lt;/strong&gt;. If the conversion can fail, use a dedicated method which returns an &lt;a href=&quot;../option/enum.option&quot;&gt;&lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;../result/enum.result&quot;&gt;&lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注：この特性は失敗してはなりません&lt;/strong&gt;。変換が失敗する可能性がある場合は、&lt;a href=&quot;../option/enum.option&quot;&gt; &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../result/enum.result&quot;&gt; &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; &lt;/a&gt;を返す専用メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="9f7d81ecf2a6b96e00a858ce77d080e3c485f5c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you need to borrow a string that was allocated by foreign code, use &lt;a href=&quot;struct.cstr&quot;&gt;&lt;code&gt;CStr&lt;/code&gt;&lt;/a&gt;. If you need to take ownership of a string that was allocated by foreign code, you will need to make your own provisions for freeing it appropriately, likely with the foreign code's API to do that.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;外部コードによって割り当てられた文字列を借用する必要がある場合は、&lt;a href=&quot;struct.cstr&quot;&gt; &lt;code&gt;CStr&lt;/code&gt; を&lt;/a&gt;使用してください。外部コードによって割り当てられた文字列の所有権を取得する必要がある場合は、外部コードのAPIを使用して適切に解放するための独自の準備を行う必要があります。</target>
        </trans-unit>
        <trans-unit id="bf68398fddb94f0a1abd51db31ce0b9347bd8495" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Additional crates that ship with &lt;code&gt;rustc&lt;/code&gt;, such as &lt;a href=&quot;https://doc.rust-lang.org/proc_macro/index.html&quot;&gt;&lt;code&gt;proc_macro&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://doc.rust-lang.org/alloc/index.html&quot;&gt;&lt;code&gt;alloc&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://doc.rust-lang.org/test/index.html&quot;&gt;&lt;code&gt;test&lt;/code&gt;&lt;/a&gt;, are not automatically included with the &lt;code&gt;--extern&lt;/code&gt; flag when using Cargo. They must be brought into scope with an &lt;code&gt;extern crate&lt;/code&gt; declaration, even in the 2018 edition.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：を有する船こと追加クレート &lt;code&gt;rustc&lt;/code&gt; など、&lt;a href=&quot;https://doc.rust-lang.org/proc_macro/index.html&quot;&gt; &lt;code&gt;proc_macro&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://doc.rust-lang.org/alloc/index.html&quot;&gt; &lt;code&gt;alloc&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;https://doc.rust-lang.org/test/index.html&quot;&gt; &lt;code&gt;test&lt;/code&gt; &lt;/a&gt;、自動的に含まれていない &lt;code&gt;--extern&lt;/code&gt; 貨物を使用する場合、フラグ。それらは、2018年版であっても、 &lt;code&gt;extern crate&lt;/code&gt; 宣言で対象範囲に含める必要があります。</target>
        </trans-unit>
        <trans-unit id="0e534aae954895e78357179a1ac94a40dd8cf86b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: For &lt;code&gt;rustc&lt;/code&gt;, arbitrary-set configuration options are set using the &lt;a href=&quot;https://doc.rust-lang.org/rustc/command-line-arguments.html#a--cfg-configure-the-compilation-environment&quot;&gt;&lt;code&gt;--cfg&lt;/code&gt;&lt;/a&gt; flag.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;： &lt;code&gt;rustc&lt;/code&gt; の場合、任意設定の構成オプションは&lt;a href=&quot;https://doc.rust-lang.org/rustc/command-line-arguments.html#a--cfg-configure-the-compilation-environment&quot;&gt; &lt;code&gt;--cfg&lt;/code&gt; &lt;/a&gt;フラグを使用して設定されます。</target>
        </trans-unit>
        <trans-unit id="c424a34ea4d877226958104553992541e3787ae9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: In the past, the Rust community used the terms &quot;Unambiguous Function Call Syntax&quot;, &quot;Universal Function Call Syntax&quot;, or &quot;UFCS&quot;, in documentation, issues, RFCs, and other community writings. However, the term lacks descriptive power and potentially confuses the issue at hand. We mention it here for searchability's sake.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：以前、Rustコミュニティは、ドキュメント、問題、RFC、およびその他のコミュニティの執筆で、「あいまいでない関数呼び出し構文」、「ユニバーサル関数呼び出し構文」、または「UFCS」という用語を使用していました。ただし、この用語には説明力がなく、問題を混乱させる可能性があります。ここでは検索性のために言及します。</target>
        </trans-unit>
        <trans-unit id="2ee6a6f44b42148913ce05336e8333f03b878a8a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: On platforms that do not support receiving spin-loop hints this function does not do anything at all.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：スピンループヒントの受信をサポートしていないプラットフォームでは、この関数は何もしません。</target>
        </trans-unit>
        <trans-unit id="3cd7dc42d46fc1a7eaf8316e86e18b4771b7a37c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Previous to &lt;code&gt;rustc&lt;/code&gt; 1.30, using &lt;code&gt;mod.rs&lt;/code&gt; files was the way to load a module with nested children. It is encouraged to use the new naming convention as it is more consistent, and avoids having many files named &lt;code&gt;mod.rs&lt;/code&gt; within a project.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;： &lt;code&gt;rustc&lt;/code&gt; 1.30 以前は、ネストされた子を持つモジュールをロードする方法として &lt;code&gt;mod.rs&lt;/code&gt; ファイルを使用していました。より一貫性があり、プロジェクト内で &lt;code&gt;mod.rs&lt;/code&gt; という名前の多くのファイルを使用することを避けるため、新しい命名規則を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="09dbeb2a0b5b6ab350517ca73457c241b60699f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;cfg_attr&lt;/code&gt; can expand to another &lt;code&gt;cfg_attr&lt;/code&gt;. For example, &lt;code&gt;#[cfg_attr(linux, cfg_attr(feature = &quot;multithreaded&quot;, some_other_attribute))&lt;/code&gt; is valid. This example would be equivalent to &lt;code&gt;#[cfg_attr(all(linux, feature =&quot;multithreaded&quot;), some_other_attribute)]&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;： &lt;code&gt;cfg_attr&lt;/code&gt; は別の &lt;code&gt;cfg_attr&lt;/code&gt; に拡張できます。たとえば、 &lt;code&gt;#[cfg_attr(linux, cfg_attr(feature = &quot;multithreaded&quot;, some_other_attribute))&lt;/code&gt; は有効です。この例は、 &lt;code&gt;#[cfg_attr(all(linux, feature =&quot;multithreaded&quot;), some_other_attribute)]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="542e5e434f17a5e7fe96f177447ca260c03e5782" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;rustc&lt;/code&gt; test harness supports the &lt;code&gt;--include-ignored&lt;/code&gt; flag to force ignored tests to be run.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;： &lt;code&gt;rustc&lt;/code&gt; テストハーネスは、無視するテストを強制的に実行する &lt;code&gt;--include-ignored&lt;/code&gt; フラグをサポートしています。</target>
        </trans-unit>
        <trans-unit id="2e578eea7529dc499f5ab70e8ee02f1a3a04f7e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function returns an array of length 2, 4 or 8 bytes depending on the target pointer size.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：この関数は、ターゲットポインターのサイズに応じて、長さが2、4、または8バイトの配列を返します。</target>
        </trans-unit>
        <trans-unit id="204f556d6eb284d02edf2bf12e7415dff429dcbd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function takes an array of length 2, 4 or 8 bytes depending on the target pointer size.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：この関数は、ターゲットポインターのサイズに応じて、長さが2、4、または8バイトの配列を取ります。</target>
        </trans-unit>
        <trans-unit id="205669dd54e34ac0f225ea4e8c1e039e92861b84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This is an example note.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：これは&lt;strong&gt;メモ&lt;/strong&gt;の例です。</target>
        </trans-unit>
        <trans-unit id="4f8175ab0b6ced026c78c226ce62e4e0326a00cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This method is currently implemented as a 0-cost cast, but it is planned to alter its definition in the future to perform the length calculation whenever this method is called.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：このメソッドは現在、0コストのキャストとして実装されていますが、このメソッドが呼び出されるたびに長さの計算を実行するように、将来その定義を変更する予定です。</target>
        </trans-unit>
        <trans-unit id="9364ca407d4e4789b372b4d12ec8ebcdd47debe7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This method is currently implemented as a constant-time cast, but it is planned to alter its definition in the future to perform the length calculation whenever this method is called.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：このメソッドは現在、一定時間キャストとして実装されていますが、このメソッドが呼び出されるたびに長さの計算を実行するように、将来その定義を変更する予定です。</target>
        </trans-unit>
        <trans-unit id="9acff81794f805a2a107dfa5d332d79517391aa9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This method is currently implemented to check for validity after a constant-time cast, but it is planned to alter its definition in the future to perform the length calculation in addition to the UTF-8 check whenever this method is called.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：このメソッドは現在、一定時間キャスト後に有効性をチェックするために実装されていますが、このメソッドが呼び出されるたびに、UTF-8チェックに加えて長さ計算を実行するように将来的に定義を変更する予定です。</target>
        </trans-unit>
        <trans-unit id="d5c5be5853f961e5512f727adc94106859254411" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This operation is intended to be a 0-cost cast but it is currently implemented with an up-front calculation of the length of the string. This is not guaranteed to always be the case.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：この操作は0コストのキャストを対象としていますが、現在は文字列の長さの事前計算で実装されています。これは常に当てはまるとは限りません。</target>
        </trans-unit>
        <trans-unit id="f5df3103e6447e1ad2ce9490f42afb19650917b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Undefined behavior affects the entire program. For example, calling a function in C that exhibits undefined behavior of C means your entire program contains undefined behaviour that can also affect the Rust code. And vice versa, undefined behavior in Rust can cause adverse affects on code executed by any FFI calls to other languages.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：未定義の動作はプログラム全体に影響します。たとえば、Cで未定義の動作を示す関数をCで呼び出すと、Rustコードに影響する可能性のある未定義の動作がプログラム全体に含まれます。また、逆の場合、Rustでの未定義の動作は、他の言語へのFFI呼び出しによって実行されるコードに悪影響を与える可能性があります。</target>
        </trans-unit>
        <trans-unit id="9bf566863d0e6c1f93fa47ff736f9ade81dd38c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: When using Cargo, Procedural macro crates are defined with the &lt;code&gt;proc-macro&lt;/code&gt; key in your manifest:</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：Cargoを使用する場合、手続き型マクロクレートはマニフェストの &lt;code&gt;proc-macro&lt;/code&gt; キーで定義されます。</target>
        </trans-unit>
        <trans-unit id="a7f8ef7c18d1ebc911a4b8802c9c294409605f53" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Whitespace around the &lt;code&gt;=&lt;/code&gt; is ignored. &lt;code&gt;foo=&quot;bar&quot;&lt;/code&gt; and &lt;code&gt;foo = &quot;bar&quot;&lt;/code&gt; are equivalent configuration options.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;： &lt;code&gt;=&lt;/code&gt; の前後の空白は無視されます。 &lt;code&gt;foo=&quot;bar&quot;&lt;/code&gt; と &lt;code&gt;foo = &quot;bar&quot;&lt;/code&gt; は同等の設定オプションです。</target>
        </trans-unit>
        <trans-unit id="ca0b8f99436f4b7d93b7e3e4bd936fecc9cacde1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: that the outer &lt;code&gt;match&lt;/code&gt; is used to ensure that any &lt;a href=&quot;../expressions#temporary-lifetimes&quot;&gt;temporary values&lt;/a&gt; in &lt;code&gt;iter_expr&lt;/code&gt; don't get dropped before the loop is finished. &lt;code&gt;next&lt;/code&gt; is declared before being assigned because it results in types being inferred correctly more often.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：外側の &lt;code&gt;match&lt;/code&gt; は、ループが終了する前に &lt;code&gt;iter_expr&lt;/code&gt; の&lt;a href=&quot;../expressions#temporary-lifetimes&quot;&gt;一時的な値&lt;/a&gt;が削除されないようにするために使用されます。 &lt;code&gt;next&lt;/code&gt; は、型がより頻繁に正しく推論される結果となるため、割り当てられる前に宣言されます。</target>
        </trans-unit>
        <trans-unit id="3d08b1d0d9771f64d914289f8a909594611ec769" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: this list is more restrictive than what you can write in regular constants</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：このリストは、通常の定数で記述できるものよりも制限されています</target>
        </trans-unit>
        <trans-unit id="484956955d43e1da5356d63148d3bf3ffefed245" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Nul terminators and implicit string lengths&lt;/strong&gt; - Often, C strings are nul-terminated, i.e., they have a &lt;code&gt;\0&lt;/code&gt; character at the end. The length of a string buffer is not stored, but has to be calculated; to compute the length of a string, C code must manually call a function like &lt;code&gt;strlen()&lt;/code&gt; for &lt;code&gt;char&lt;/code&gt;-based strings, or &lt;code&gt;wcslen()&lt;/code&gt; for &lt;code&gt;wchar_t&lt;/code&gt;-based ones. Those functions return the number of characters in the string excluding the nul terminator, so the buffer length is really &lt;code&gt;len+1&lt;/code&gt; characters. Rust strings don't have a nul terminator; their length is always stored and does not need to be calculated. While in Rust accessing a string's length is a O(1) operation (because the length is stored); in C it is an O(length) operation because the length needs to be computed by scanning the string for the nul terminator.</source>
          <target state="translated">&lt;strong&gt;NULターミネータと暗黙の文字列長&lt;/strong&gt; -多くの場合、C文字列はNULで終了します。つまり、末尾に &lt;code&gt;\0&lt;/code&gt; 文字があります。文字列バッファの長さは保存されませんが、計算する必要があります。以下のような文字列の長さを計算するために、Cコードは、手動で関数を呼び出す必要があり &lt;code&gt;strlen()&lt;/code&gt; のための &lt;code&gt;char&lt;/code&gt; 列、またはベース &lt;code&gt;wcslen()&lt;/code&gt; 用 &lt;code&gt;wchar_t&lt;/code&gt; ベースのもの。これらの関数は、nulターミネーターを除く文字列の文字数を返すため、バッファー長は実際には &lt;code&gt;len+1&lt;/code&gt; です。文字。Rust文字列にはNULターミネータはありません。それらの長さは常に保存され、計算する必要はありません。Rustでは、文字列の長さにアクセスするのはO（1）操作です（長さが保存されるため）。Cでは、長さはNULターミネーターの文字列をスキャンして計算する必要があるため、O（長さ）操作です。</target>
        </trans-unit>
        <trans-unit id="b3a55015f9b574b249377781d35ad1256b26e09a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Packages:&lt;/strong&gt; A Cargo feature that lets you build, test, and share crates</source>
          <target state="translated">&lt;strong&gt;パッケージ：&lt;/strong&gt;木箱を作成、テスト、共有できるCargo機能</target>
        </trans-unit>
        <trans-unit id="b9614e48c420558746aa5a195f1ca3514d9bdb89" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Panics&lt;/strong&gt;: The scenarios in which the function being documented could panic. Callers of the function who don&amp;rsquo;t want their programs to panic should make sure they don&amp;rsquo;t call the function in these situations.</source>
          <target state="translated">&lt;strong&gt;パニック&lt;/strong&gt;：文書化されている機能がパニックになる可能性があるシナリオ。プログラムにパニックを起こさせたくない関数の呼び出し元は、これらの状況で関数を呼び出さないようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="48ddec251d4b93c950c826aa556ff50e924f3f09" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Paths:&lt;/strong&gt; A way of naming an item, such as a struct, function, or module</source>
          <target state="translated">&lt;strong&gt;パス：&lt;/strong&gt;構造体、関数、モジュールなどのアイテムに名前を付ける方法</target>
        </trans-unit>
        <trans-unit id="481513e92d2c79e9922e6fdaeaecbe26904d2dbb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Safety&lt;/strong&gt;: If the function is &lt;code&gt;unsafe&lt;/code&gt; to call (we discuss unsafety in Chapter 19), there should be a section explaining why the function is unsafe and covering the invariants that the function expects callers to uphold.</source>
          <target state="translated">&lt;strong&gt;安全性&lt;/strong&gt;：関数の呼び出しが &lt;code&gt;unsafe&lt;/code&gt; 場合（第19章で安全性について説明します）、関数が安全でない理由を説明し、関数が呼び出し元が保持すると期待する不変条件をカバーするセクションが必要です。</target>
        </trans-unit>
        <trans-unit id="7e43e997b28aeec3b9c71554f3cb60497761adcd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Supertraits&lt;/strong&gt; are traits that are required to be implemented for a type to implement a specific trait. Furthermore, anywhere a &lt;a href=&quot;generics&quot;&gt;generic&lt;/a&gt; or &lt;a href=&quot;../types/trait-object&quot;&gt;trait object&lt;/a&gt; is bounded by a trait, it has access to the associated items of its supertraits.</source>
          <target state="translated">&lt;strong&gt;スーパートレイト&lt;/strong&gt;トレイトは、型が特定のトレイトを実装するために実装する必要があるトレイトです。さらに、&lt;a href=&quot;generics&quot;&gt;ジェネリック&lt;/a&gt;&lt;a href=&quot;../types/trait-object&quot;&gt;オブジェクト&lt;/a&gt;またはトレイトオブジェクトがトレイトに囲まれている場合は、そのスーパートレイトの関連アイテムにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="8f3ae627337dcbcd948c51fd96893635d151265e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This functon is deprecated.&lt;/strong&gt; Use &lt;a href=&quot;union.maybeuninit&quot;&gt;&lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;strong&gt;この機能は廃止されました。&lt;/strong&gt;代わりに&lt;a href=&quot;union.maybeuninit&quot;&gt; &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="90d5331accb6d1f759b6d533c2ffbb7485074384" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is soft-deprecated.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;このメソッドは、非推奨です。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7cd5055ffa46d984c313532603ca78647862a3d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unix&lt;/strong&gt;: On Unix-like platforms, it is unlikely that all 32 bits of &lt;code&gt;exit&lt;/code&gt; will be visible to a parent process inspecting the exit code. On most Unix-like platforms, only the eight least-significant bits are considered.</source>
          <target state="translated">&lt;strong&gt;Unix&lt;/strong&gt;：Unixライクなプラットフォームでは、32ビットの &lt;code&gt;exit&lt;/code&gt; がすべて親プロセスから見えて、終了コードを検査することはほとんどありません。ほとんどのUnixライクなプラットフォームでは、最下位8ビットのみが考慮されます。</target>
        </trans-unit>
        <trans-unit id="4c1aa9b3c8e196e8c2b0242b80db4f7600ac8956" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Version &amp;amp; Edition Differences&lt;/strong&gt;: Prior to Rust 1.30, &lt;code&gt;$crate&lt;/code&gt; and &lt;code&gt;local_inner_macros&lt;/code&gt; (below) were unsupported. They were added alongside path-based imports of macros (described above), to ensure that helper macros did not need to be manually imported by users of a macro-exporting crate. Crates written for earlier versions of Rust that use helper macros need to be modified to use &lt;code&gt;$crate&lt;/code&gt; or &lt;code&gt;local_inner_macros&lt;/code&gt; to work well with path-based imports.</source>
          <target state="translated">&lt;strong&gt;バージョンとエディションの違い&lt;/strong&gt;：Rust 1.30より前の&lt;strong&gt;バージョンでは&lt;/strong&gt;、 &lt;code&gt;$crate&lt;/code&gt; &lt;code&gt;local_inner_macros&lt;/code&gt; およびlocal_inner_macros（以下）はサポートされていませんでした。これらは、マクロのパスベースのインポート（上記を参照）とともに追加され、マクロをエクスポートするクレートのユーザーがヘルパーマクロを手動でインポートする必要がないようにしました。ヘルパーマクロを使用するRustの以前のバージョン用に記述された &lt;code&gt;$crate&lt;/code&gt; は、$ crateを使用するように変更する必要があります、パスベースのインポートで &lt;code&gt;local_inner_macros&lt;/code&gt; に機能 crateまたはlocal_inner_macrosを。</target>
        </trans-unit>
        <trans-unit id="a61fe7dcc9b944b7aa4bb3863418ae332c93ffba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WARNING&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;WARNING&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="70d92d3e972f8d8fddf85474fbc20df429ca9e9a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning&lt;/strong&gt;: While various forms of this were discussed in &lt;a href=&quot;https://github.com/rust-lang/rfcs/pull/1937&quot;&gt;RFC #1937&lt;/a&gt;, it was ultimately cut from that RFC, and thus this type is more subject to change even than the usual unstable item churn.</source>
          <target state="translated">&lt;strong&gt;警告&lt;/strong&gt;：これのさまざまな形式が&lt;a href=&quot;https://github.com/rust-lang/rfcs/pull/1937&quot;&gt;RFC＃1937&lt;/a&gt;で説明されていましたが、最終的にはそのRFCからカットされたため、このタイプは通常の不安定なアイテムのチャーンよりも変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="430cf372e21694405a7f29b4ea7aae36bbc30335" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;1&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;1&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="0a5afaa9ee5bac968c87333877722aa1495b952b" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;2&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;2&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="a4ab7f7217b5214e279ea052fb2ed3cfbd58c8f2" translate="yes" xml:space="preserve">
          <source>A &quot;meta item&quot; is the syntax used for the &lt;em&gt;Attr&lt;/em&gt; rule by most &lt;a href=&quot;attributes#built-in-attributes-index&quot;&gt;built-in attributes&lt;/a&gt; and the &lt;a href=&quot;macros-by-example&quot;&gt;&lt;code&gt;meta&lt;/code&gt; macro fragment specifier&lt;/a&gt;. It has the following grammar:</source>
          <target state="translated">「メタアイテム」は、ほとんどの&lt;a href=&quot;attributes#built-in-attributes-index&quot;&gt;組み込み属性&lt;/a&gt;と&lt;a href=&quot;macros-by-example&quot;&gt; &lt;code&gt;meta&lt;/code&gt; &lt;/a&gt;によって&lt;em&gt;Attr&lt;/em&gt;ルールに使用される構文ですマクロフラグメント指定子です。次の文法があります。</target>
        </trans-unit>
        <trans-unit id="22d3a6ec1e16d0b77c16e420bbe8e26c33c2811f" translate="yes" xml:space="preserve">
          <source>A &quot;stack allocated string&quot;:</source>
          <target state="translated">スタック割り当て文字列」。</target>
        </trans-unit>
        <trans-unit id="b64a876ef415d016ec9dc92ffaf76e9ab89ca04f" translate="yes" xml:space="preserve">
          <source>A 'radix' here is sometimes also called a 'base'. A radix of two indicates a binary number, a radix of ten, decimal, and a radix of sixteen, hexadecimal, to give some common values. Arbitrary radices are supported.</source>
          <target state="translated">ここでの「基数」は「基数」と呼ばれることもあります。2の基数は2進数、10の基数は10進数、16の基数は16進数を示し、いくつかの共通の値を与えます。任意の基数をサポートしています。</target>
        </trans-unit>
        <trans-unit id="41c53bc2a64d3e62babdedd9c3047a7e08995ee3" translate="yes" xml:space="preserve">
          <source>A (half-open) range bounded inclusively below and exclusively above (&lt;code&gt;start..end&lt;/code&gt;).</source>
          <target state="translated">（半分開いた）範囲の上限と下限（上限は上限）（ &lt;code&gt;start..end&lt;/code&gt; ）上と下 start..end）。</target>
        </trans-unit>
        <trans-unit id="c1847a494c164bc5812c67ca50bfe2768f6e254d" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../expressions/closure-expr&quot;&gt;closure expression&lt;/a&gt; produces a closure value with a unique, anonymous type that cannot be written out. A closure type is approximately equivalent to a struct which contains the captured variables. For instance, the following closure:</source>
          <target state="translated">あ &lt;a href=&quot;../expressions/closure-expr&quot;&gt;閉鎖式は&lt;/a&gt;書き出すことができないユニークな、匿名型と閉鎖値を生成します。クロージャ型は、キャプチャされた変数を含む構造体とほぼ同等です。たとえば、次のクロージャ：</target>
        </trans-unit>
        <trans-unit id="3cfb72d2748a10ee8855d86ad887d39ff3f43dfe" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../paths&quot;&gt;path&lt;/a&gt; used as an expression context denotes either a local variable or an item. Path expressions that resolve to local or static variables are &lt;a href=&quot;../expressions#place-expressions-and-value-expressions&quot;&gt;place expressions&lt;/a&gt;, other paths are &lt;a href=&quot;../expressions#place-expressions-and-value-expressions&quot;&gt;value expressions&lt;/a&gt;. Using a &lt;a href=&quot;../items/static-items#mutable-statics&quot;&gt;&lt;code&gt;static mut&lt;/code&gt;&lt;/a&gt; variable requires an &lt;a href=&quot;block-expr#unsafe-blocks&quot;&gt;&lt;code&gt;unsafe&lt;/code&gt; block&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../paths&quot;&gt;パス&lt;/a&gt;式コンテキストとして使用されるローカル変数または項目のいずれかを意味します。ローカル変数または静的変数に解決されるパス式は&lt;a href=&quot;../expressions#place-expressions-and-value-expressions&quot;&gt;場所式であり&lt;/a&gt;、他のパスは&lt;a href=&quot;../expressions#place-expressions-and-value-expressions&quot;&gt;値式&lt;/a&gt;です。&lt;a href=&quot;../items/static-items#mutable-statics&quot;&gt; &lt;code&gt;static mut&lt;/code&gt; &lt;/a&gt;変数を使用すると、&lt;a href=&quot;block-expr#unsafe-blocks&quot;&gt; &lt;code&gt;unsafe&lt;/code&gt; ブロック&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="8c135626ccc454eee440ccf3a13f0ec15be919ba" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt; is a &lt;a href=&quot;http://www.unicode.org/glossary/#unicode_scalar_value&quot;&gt;Unicode Scalar Value&lt;/a&gt;, which means that it is a &lt;a href=&quot;http://www.unicode.org/glossary/#code_point&quot;&gt;Code Point&lt;/a&gt;, but only ones within a certain range. &lt;code&gt;MAX&lt;/code&gt; is the highest valid code point that's a valid &lt;a href=&quot;http://www.unicode.org/glossary/#unicode_scalar_value&quot;&gt;Unicode Scalar Value&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../primitive.char&quot;&gt; &lt;code&gt;char&lt;/code&gt; が&lt;/a&gt;ある&lt;a href=&quot;http://www.unicode.org/glossary/#unicode_scalar_value&quot;&gt;Unicodeのスカラー値&lt;/a&gt;があることを意味し、&lt;a href=&quot;http://www.unicode.org/glossary/#code_point&quot;&gt;コードポイント&lt;/a&gt;が、一定の範囲内で唯一のもの。 &lt;code&gt;MAX&lt;/code&gt; は有効な最高の有効なコードポイントです&lt;a href=&quot;http://www.unicode.org/glossary/#unicode_scalar_value&quot;&gt; Unicodeスカラー値で&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="817aefb1123a860203996fe1bc087199cf9a9301" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;fn.null&quot;&gt;null&lt;/a&gt; pointer is &lt;em&gt;never&lt;/em&gt; valid, not even for accesses of &lt;a href=&quot;https://doc.rust-lang.org/nomicon/exotic-sizes.html#zero-sized-types-zsts&quot;&gt;size zero&lt;/a&gt;.</source>
          <target state="translated">のアクセスであっても、&lt;a href=&quot;fn.null&quot;&gt;null&lt;/a&gt;ポインタは&lt;em&gt;決して&lt;/em&gt;有効ではありません&lt;a href=&quot;https://doc.rust-lang.org/nomicon/exotic-sizes.html#zero-sized-types-zsts&quot;&gt;サイズのゼロ&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="64470c49d997c71e612fbbb1108517461ba5028e" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;items/associated-items#methods&quot;&gt;method&lt;/a&gt; defined in an &lt;a href=&quot;items/implementations#inherent-implementations&quot;&gt;inherent implementation&lt;/a&gt;, not in a trait implementation.</source>
          <target state="translated">で定義された&lt;a href=&quot;items/associated-items#methods&quot;&gt;メソッド&lt;/a&gt;&lt;a href=&quot;items/implementations#inherent-implementations&quot;&gt;固有の実装&lt;/a&gt;ない形質実装では、。</target>
        </trans-unit>
        <trans-unit id="2929c70726dc937049a9f5950f13c4723ad1c193" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;loop-expr#infinite-loops&quot;&gt;&lt;code&gt;loop&lt;/code&gt; expression&lt;/a&gt; denotes an infinite loop.</source>
          <target state="translated">&lt;a href=&quot;loop-expr#infinite-loops&quot;&gt; &lt;code&gt;loop&lt;/code&gt; 表現&lt;/a&gt;無限ループを示しています。</target>
        </trans-unit>
        <trans-unit id="e86e93a58bbbbc71c44b9b885a659ff826ce9490" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;loop-expr#iterator-loops&quot;&gt;&lt;code&gt;for&lt;/code&gt; expression&lt;/a&gt; extracts values from an iterator, looping until the iterator is empty.</source>
          <target state="translated">A &lt;a href=&quot;loop-expr#iterator-loops&quot;&gt; &lt;code&gt;for&lt;/code&gt; の発現&lt;/a&gt;イテレータから抽出値、イテレータが空になるまでループします。</target>
        </trans-unit>
        <trans-unit id="78d2df8a50ce969bca66a5211eeeb6570b3f1784" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;loop-expr#predicate-loops&quot;&gt;&lt;code&gt;while&lt;/code&gt; expression&lt;/a&gt; loops until a predicate is false.</source>
          <target state="translated">A &lt;a href=&quot;loop-expr#predicate-loops&quot;&gt; &lt;code&gt;while&lt;/code&gt; 式は&lt;/a&gt;述語が偽になるまでループします。</target>
        </trans-unit>
        <trans-unit id="506fd8c66fe2c3330ab3ababc69a27680d58db08" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;loop-expr#predicate-pattern-loops&quot;&gt;&lt;code&gt;while let&lt;/code&gt; expression&lt;/a&gt; tests a pattern.</source>
          <target state="translated">&lt;a href=&quot;loop-expr#predicate-pattern-loops&quot;&gt; &lt;code&gt;while let&lt;/code&gt; 式は&lt;/a&gt;パターンをテストします。</target>
        </trans-unit>
        <trans-unit id="8b1f2559cf32a60aeffbe295d8dcc8b7d2d1bc74" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;struct.path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; might contain non-Unicode data. This &lt;code&gt;struct&lt;/code&gt; implements the &lt;a href=&quot;../fmt/trait.display&quot;&gt;&lt;code&gt;Display&lt;/code&gt;&lt;/a&gt; trait in a way that mitigates that. It is created by the &lt;a href=&quot;struct.path#method.display&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;struct.path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;struct.path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;非Unicodeデータが含まれる可能性があります。この &lt;code&gt;struct&lt;/code&gt; は、それを軽減する方法で&lt;a href=&quot;../fmt/trait.display&quot;&gt; &lt;code&gt;Display&lt;/code&gt; &lt;/a&gt;トレイトを実装します。&lt;a href=&quot;struct.path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;の&lt;a href=&quot;struct.path#method.display&quot;&gt; &lt;code&gt;display&lt;/code&gt; &lt;/a&gt;メソッドで作成されます。</target>
        </trans-unit>
        <trans-unit id="8ad6cb9fb2de3ff94c9692c27c57c7195ec6d6cb" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;struct.pin&quot;&gt;&lt;code&gt;Pin&amp;lt;P&amp;gt;&lt;/code&gt;&lt;/a&gt; ensures that the pointee of any pointer type &lt;code&gt;P&lt;/code&gt; has a stable location in memory, meaning it cannot be moved elsewhere and its memory cannot be deallocated until it gets dropped. We say that the pointee is &quot;pinned&quot;.</source>
          <target state="translated">A &lt;a href=&quot;struct.pin&quot;&gt; &lt;code&gt;Pin&amp;lt;P&amp;gt;&lt;/code&gt; &lt;/a&gt;確実に任意のポインタ型のポインタの指示 &lt;code&gt;P&lt;/code&gt; は、それが他の場所に移動させることができず、それがドロップされるまで、そのメモリを割り当て解除することができない意味、メモリ内の安定した位置を有しています。指示先は「固定」されていると言います。</target>
        </trans-unit>
        <trans-unit id="a15e8cc8aa6158fcb3389cfdaf6e7e84bacae80c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;struct.sender&quot;&gt;&lt;code&gt;Sender&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;struct.syncsender&quot;&gt;&lt;code&gt;SyncSender&lt;/code&gt;&lt;/a&gt; is used to send data to a &lt;a href=&quot;struct.receiver&quot;&gt;&lt;code&gt;Receiver&lt;/code&gt;&lt;/a&gt;. Both senders are clone-able (multi-producer) such that many threads can send simultaneously to one receiver (single-consumer).</source>
          <target state="translated">&lt;a href=&quot;struct.sender&quot;&gt; &lt;code&gt;Sender&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;struct.syncsender&quot;&gt; &lt;code&gt;SyncSender&lt;/code&gt; は&lt;/a&gt;にデータを送信するために使用される&lt;a href=&quot;struct.receiver&quot;&gt; &lt;code&gt;Receiver&lt;/code&gt; &lt;/a&gt;。両方の送信者は、多くのスレッドが1つの受信者（単一の消費者）に同時に送信できるように、クローン可能（マルチプロデューサー）です。</target>
        </trans-unit>
        <trans-unit id="e878b6c48911644ea2ee908e204d14d9ba8414f3" translate="yes" xml:space="preserve">
          <source>A &lt;code id=&quot;a-worker-struct-responsible-for-sending-code-from-the-threadpool-to-a-thread&quot;&gt;Worker&lt;/code&gt; Struct Responsible for Sending Code from the &lt;code&gt;ThreadPool&lt;/code&gt; to a Thread</source>
          <target state="translated">&lt;code&gt;ThreadPool&lt;/code&gt; からコードを送信する &lt;code id=&quot;a-worker-struct-responsible-for-sending-code-from-the-threadpool-to-a-thread&quot;&gt;Worker&lt;/code&gt; 構造体からスレッドへの</target>
        </trans-unit>
        <trans-unit id="cb1329292e0705741bc6efb49bebc4980736dafb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;#![feature]&lt;/code&gt; attribute was declared for a feature that is stable in the current edition, but not in all editions.</source>
          <target state="translated">&lt;code&gt;#![feature]&lt;/code&gt; 属性は、現在の版ではなく、すべてのエディションで安定している機能のために宣言されました。</target>
        </trans-unit>
        <trans-unit id="aaa8a708af81269c0b5576d02729333db199fa1d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;#![feature]&lt;/code&gt; attribute was declared multiple times.</source>
          <target state="translated">&lt;code&gt;#![feature]&lt;/code&gt; 属性が複数回宣言されました。</target>
        </trans-unit>
        <trans-unit id="12a617fa960129a71a59055ffc0553333e4d1938" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;#[marker]&lt;/code&gt; trait contained an associated item.</source>
          <target state="translated">&lt;code&gt;#[marker]&lt;/code&gt; 形質は、関連するアイテムを含んでいました。</target>
        </trans-unit>
        <trans-unit id="0a9d6b916ce0da508f854e05a1feec7e0befaef9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;#[repr(inttype)]&lt;/code&gt; must be provided on an &lt;code&gt;enum&lt;/code&gt; if it has a non-unit variant with a discriminant, or where there are both unit variants with discriminants and non-unit variants. This restriction ensures that there is a well-defined way to extract a variant's discriminant from a value; for instance:</source>
          <target state="translated">&lt;code&gt;#[repr(inttype)]&lt;/code&gt; 上に提供されなければならない &lt;code&gt;enum&lt;/code&gt; が判別非ユニットの変異体を有する場合、または両方のユニットは、判別式と非ユニット変異を有する変異体があります。この制限により、値からバリアントの判別式を抽出する明確に定義された方法があることが保証されます。例えば：</target>
        </trans-unit>
        <trans-unit id="c012898141fc2cec018c7c222ae43346e5dd5f44" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&amp;amp;T&lt;/code&gt; reference can be released to safe code and there it can co-exist with other &lt;code&gt;&amp;amp;T&lt;/code&gt; references, but not with a &lt;code&gt;&amp;amp;mut T&lt;/code&gt;</source>
          <target state="translated">A &lt;code&gt;&amp;amp;T&lt;/code&gt; の参照は、安全なコードに解放することができ、それはそこに共存することができ、他のと &lt;code&gt;&amp;amp;T&lt;/code&gt; ではないと、リファレンス &lt;code&gt;&amp;amp;mut T&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3ec5710ef1f0b84eb29b3c1cc1f924e822fb56fa" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&amp;amp;mut T&lt;/code&gt; reference may be released to safe code provided neither other &lt;code&gt;&amp;amp;mut T&lt;/code&gt; nor &lt;code&gt;&amp;amp;T&lt;/code&gt; co-exist with it. A &lt;code&gt;&amp;amp;mut T&lt;/code&gt; must always be unique.</source>
          <target state="translated">A &lt;code&gt;&amp;amp;mut T&lt;/code&gt; 参照はいずれも、他の提供安全コードを解放することができる &lt;code&gt;&amp;amp;mut T&lt;/code&gt; も &lt;code&gt;&amp;amp;T&lt;/code&gt; はそれと共存。A &lt;code&gt;&amp;amp;mut T&lt;/code&gt; 常に一意である必要があります。</target>
        </trans-unit>
        <trans-unit id="40585fc29df20c1219babfcdddcfc95974719e32" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&amp;amp;str&lt;/code&gt; is made up of two components: a pointer to some bytes, and a length. You can look at these with the &lt;a href=&quot;#method.as_ptr&quot;&gt;&lt;code&gt;as_ptr&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#method.len&quot;&gt;&lt;code&gt;len&lt;/code&gt;&lt;/a&gt; methods:</source>
          <target state="translated">A &lt;code&gt;&amp;amp;str&lt;/code&gt; いくつかのバイトへのポインタ、および長さの2つのコンポーネントで構成されています。これらは、&lt;a href=&quot;#method.as_ptr&quot;&gt; &lt;code&gt;as_ptr&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#method.len&quot;&gt; &lt;code&gt;len&lt;/code&gt; &lt;/a&gt;メソッドで確認できます。</target>
        </trans-unit>
        <trans-unit id="35fb8d8640dfbea523c47310a34e3d854229d236" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;BarrierWaitResult&lt;/code&gt; is returned by &lt;a href=&quot;struct.barrier#method.wait&quot;&gt;&lt;code&gt;wait&lt;/code&gt;&lt;/a&gt; when all threads in the &lt;a href=&quot;struct.barrier&quot;&gt;&lt;code&gt;Barrier&lt;/code&gt;&lt;/a&gt; have rendezvoused.</source>
          <target state="translated">A &lt;code&gt;BarrierWaitResult&lt;/code&gt; がで返され&lt;a href=&quot;struct.barrier#method.wait&quot;&gt; &lt;code&gt;wait&lt;/code&gt; &lt;/a&gt;中のすべてのスレッド時に&lt;a href=&quot;struct.barrier&quot;&gt; &lt;code&gt;Barrier&lt;/code&gt; &lt;/a&gt;ランデブーしています。</target>
        </trans-unit>
        <trans-unit id="a33fe1ab5786729bf200982553a4a40b28677c12" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;BufRead&lt;/code&gt; is a type of &lt;code&gt;Read&lt;/code&gt;er which has an internal buffer, allowing it to perform extra ways of reading.</source>
          <target state="translated">A &lt;code&gt;BufRead&lt;/code&gt; はのタイプで &lt;code&gt;Read&lt;/code&gt; 、それが読書の余分な方法を実行することができ、内部バッファを持っている小胞体。</target>
        </trans-unit>
        <trans-unit id="c2a7d564e1881467808b1da26fc7f621d550ac35" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;BuildHasher&lt;/code&gt; is typically used (e.g., by &lt;a href=&quot;../collections/struct.hashmap&quot;&gt;&lt;code&gt;HashMap&lt;/code&gt;&lt;/a&gt;) to create &lt;a href=&quot;trait.hasher&quot;&gt;&lt;code&gt;Hasher&lt;/code&gt;&lt;/a&gt;s for each key such that they are hashed independently of one another, since &lt;a href=&quot;trait.hasher&quot;&gt;&lt;code&gt;Hasher&lt;/code&gt;&lt;/a&gt;s contain state.</source>
          <target state="translated">A &lt;code&gt;BuildHasher&lt;/code&gt; は、典型的に（により、例えば、使用される&lt;a href=&quot;../collections/struct.hashmap&quot;&gt; &lt;code&gt;HashMap&lt;/code&gt; &lt;/a&gt;作成する）&lt;a href=&quot;trait.hasher&quot;&gt; &lt;code&gt;Hasher&lt;/code&gt; &lt;/a&gt;それらがので、互いに独立してハッシュされること、各キーようなに対するSを&lt;a href=&quot;trait.hasher&quot;&gt; &lt;code&gt;Hasher&lt;/code&gt; &lt;/a&gt;の状態を含みます。</target>
        </trans-unit>
        <trans-unit id="5ac6d9ca4b25b818aa6f9cb17715ea50c25bf2ef" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CString&lt;/code&gt; is created from either a byte slice or a byte vector, or anything that implements &lt;a href=&quot;../convert/trait.into&quot;&gt;&lt;code&gt;Into&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;&lt;code&gt;u8&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; (for example, you can build a &lt;code&gt;CString&lt;/code&gt; straight out of a &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt;, since both implement that trait).</source>
          <target state="translated">A &lt;code&gt;CString&lt;/code&gt; バイトのスライスやバイトベクタ、または何かのいずれかから作成された道具&lt;a href=&quot;../convert/trait.into&quot;&gt; &lt;code&gt;Into&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;../vec/struct.vec&quot;&gt; &lt;code&gt;Vec&lt;/code&gt; と&lt;/a&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;../primitive.u8&quot;&gt; &lt;code&gt;u8&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; （たとえば、あなたが構築できる &lt;code&gt;CString&lt;/code&gt; まっすぐの&lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;&amp;amp;str&lt;/code&gt; の&lt;/a&gt;両方その形質を実装しているので、）。</target>
        </trans-unit>
        <trans-unit id="bef22157720da42f049eda44831ae9039ff96672" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Component&lt;/code&gt; roughly corresponds to a substring between path separators (&lt;code&gt;/&lt;/code&gt; or ).</source>
          <target state="translated">A &lt;code&gt;Component&lt;/code&gt; おおよそパスセパレータ（間のサブストリングに相当 &lt;code&gt;/&lt;/code&gt; 又は）。</target>
        </trans-unit>
        <trans-unit id="592f6bf36d948cda2dbd34364696113591fa1887" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Cursor&lt;/code&gt; wraps an in-memory buffer and provides it with a &lt;a href=&quot;trait.seek&quot;&gt;&lt;code&gt;Seek&lt;/code&gt;&lt;/a&gt; implementation.</source>
          <target state="translated">A &lt;code&gt;Cursor&lt;/code&gt; インメモリバッファをラップし、それを提供する&lt;a href=&quot;trait.seek&quot;&gt; &lt;code&gt;Seek&lt;/code&gt; &lt;/a&gt;実装。</target>
        </trans-unit>
        <trans-unit id="a89cb140638fa3cd771cb02496374d776ad6d007" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Duration&lt;/code&gt; type to represent a span of time, typically used for system timeouts.</source>
          <target state="translated">&lt;code&gt;Duration&lt;/code&gt; タイプは、典型的には、システム・タイムアウトのために使用される時間のスパンを表現します。</target>
        </trans-unit>
        <trans-unit id="e39d340a59cb5b2bb2e11548f7d50ffd50cdcaa5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Formatter&lt;/code&gt; represents various options related to formatting. Users do not construct &lt;code&gt;Formatter&lt;/code&gt;s directly; a mutable reference to one is passed to the &lt;code&gt;fmt&lt;/code&gt; method of all formatting traits, like &lt;a href=&quot;trait.debug&quot;&gt;&lt;code&gt;Debug&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;trait.display&quot;&gt;&lt;code&gt;Display&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">A &lt;code&gt;Formatter&lt;/code&gt; 、フォーマットに関連するさまざまなオプションを表します。ユーザーは &lt;code&gt;Formatter&lt;/code&gt; を直接作成しません。1つへの変更可能な参照は、&lt;a href=&quot;trait.debug&quot;&gt; &lt;code&gt;Debug&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;trait.display&quot;&gt; &lt;code&gt;Display&lt;/code&gt; &lt;/a&gt;などのすべてのフォーマット特性の &lt;code&gt;fmt&lt;/code&gt; メソッドに渡されます。</target>
        </trans-unit>
        <trans-unit id="921821ce37ee7be55d1f4cd9ec14a09989a7422f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;HashMap&lt;/code&gt; with fixed list of elements can be initialized from an array:</source>
          <target state="translated">要素の固定リストを持つ &lt;code&gt;HashMap&lt;/code&gt; は、配列から初期化できます。</target>
        </trans-unit>
        <trans-unit id="9e3e7578434780dbd4d9d999f38a9955ea8f8204" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;HashSet&lt;/code&gt; with fixed list of elements can be initialized from an array:</source>
          <target state="translated">要素の固定リストを持つ &lt;code&gt;HashSet&lt;/code&gt; は、配列から初期化できます。</target>
        </trans-unit>
        <trans-unit id="9b7c01af6b5011fee801753cdfcb67030ddd18ba" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;JoinHandle&lt;/code&gt;&lt;em&gt;detaches&lt;/em&gt; the associated thread when it is dropped, which means that there is no longer any handle to thread and no way to &lt;code&gt;join&lt;/code&gt; on it.</source>
          <target state="translated">あ &lt;code&gt;JoinHandle&lt;/code&gt; は&lt;em&gt;切り離し&lt;/em&gt;、もはやスレッドに任意のハンドルとする方法はありませんがあることを、どの手段を落としていない場合に、関連するスレッドを &lt;code&gt;join&lt;/code&gt; ことにします。</target>
        </trans-unit>
        <trans-unit id="134a2452be93d4c2cdb1b9f1f0542b4b65ecae3d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;LocalKey&lt;/code&gt;'s initializer cannot recursively depend on itself, and using a &lt;code&gt;LocalKey&lt;/code&gt; in this way will cause the initializer to infinitely recurse on the first call to &lt;code&gt;with&lt;/code&gt;.</source>
          <target state="translated">A &lt;code&gt;LocalKey&lt;/code&gt; の初期化子は、再帰的に自分自身に依存することはできませんし、使用して &lt;code&gt;LocalKey&lt;/code&gt; をこのようにすることへの最初の呼び出しに無限再帰に初期化子が発生します &lt;code&gt;with&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c72c40c2b2da09870992c3f25ebf2fd884c3cef5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Match&lt;/code&gt; result needs to contain the whole matched pattern, however &lt;code&gt;Reject&lt;/code&gt; results may be split up into arbitrary many adjacent fragments. Both ranges may have zero length.</source>
          <target state="translated">あ &lt;code&gt;Match&lt;/code&gt; の結果は、しかし、全体マッチしたパターンが含まれている必要が &lt;code&gt;Reject&lt;/code&gt; の結果は、任意の多くの隣接する断片に分割することができます。両方の範囲の長さがゼロの場合があります。</target>
        </trans-unit>
        <trans-unit id="5668f2d21fa477474ed4b8f6c89c068e50ff97ac" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Pattern&amp;lt;'a&amp;gt;&lt;/code&gt; expresses that the implementing type can be used as a string pattern for searching in a &lt;code&gt;&amp;amp;'a str&lt;/code&gt;.</source>
          <target state="translated">あ &lt;code&gt;Pattern&amp;lt;'a&amp;gt;&lt;/code&gt; 実装タイプがで検索するための文字列パターンとして使用することができることを表して &lt;code&gt;&amp;amp;'a str&lt;/code&gt; 。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
