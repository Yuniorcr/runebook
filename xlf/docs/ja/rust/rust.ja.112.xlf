<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="rust">
    <body>
      <group id="rust">
        <trans-unit id="0a41bdd85995aee20319dd5020be70218ba7123c" translate="yes" xml:space="preserve">
          <source>Corresponds to LLVM's &lt;a href=&quot;https://llvm.org/docs/Atomics.html#acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; ordering.</source>
          <target state="translated">LLVMの&lt;a href=&quot;https://llvm.org/docs/Atomics.html#acquire&quot;&gt; &lt;code&gt;Acquire&lt;/code&gt; &lt;/a&gt;オーダーに対応します。</target>
        </trans-unit>
        <trans-unit id="911a6e4bb70e2ffe1b7ef863d56f27f01c3fc3e9" translate="yes" xml:space="preserve">
          <source>Corresponds to LLVM's &lt;a href=&quot;https://llvm.org/docs/Atomics.html#acquirerelease&quot;&gt;&lt;code&gt;AcquireRelease&lt;/code&gt;&lt;/a&gt; ordering.</source>
          <target state="translated">LLVMの&lt;a href=&quot;https://llvm.org/docs/Atomics.html#acquirerelease&quot;&gt; &lt;code&gt;AcquireRelease&lt;/code&gt; &lt;/a&gt;オーダーに対応します。</target>
        </trans-unit>
        <trans-unit id="7859ab1b7f6c440afd9ae4644e912c2d657bf83d" translate="yes" xml:space="preserve">
          <source>Corresponds to LLVM's &lt;a href=&quot;https://llvm.org/docs/Atomics.html#monotonic&quot;&gt;&lt;code&gt;Monotonic&lt;/code&gt;&lt;/a&gt; ordering.</source>
          <target state="translated">LLVMの&lt;a href=&quot;https://llvm.org/docs/Atomics.html#monotonic&quot;&gt; &lt;code&gt;Monotonic&lt;/code&gt; &lt;/a&gt;順序に対応します。</target>
        </trans-unit>
        <trans-unit id="dc056c09ee8b569718c5590a2a1623d473b331fa" translate="yes" xml:space="preserve">
          <source>Corresponds to LLVM's &lt;a href=&quot;https://llvm.org/docs/Atomics.html#release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; ordering.</source>
          <target state="translated">LLVMの&lt;a href=&quot;https://llvm.org/docs/Atomics.html#release&quot;&gt; &lt;code&gt;Release&lt;/code&gt; &lt;/a&gt;順序に対応しています。</target>
        </trans-unit>
        <trans-unit id="f0290a32ed2a42eada11789a34bbee1dead05f50" translate="yes" xml:space="preserve">
          <source>Corresponds to LLVM's &lt;a href=&quot;https://llvm.org/docs/Atomics.html#sequentiallyconsistent&quot;&gt;&lt;code&gt;SequentiallyConsistent&lt;/code&gt;&lt;/a&gt; ordering.</source>
          <target state="translated">LLVMの&lt;a href=&quot;https://llvm.org/docs/Atomics.html#sequentiallyconsistent&quot;&gt; &lt;code&gt;SequentiallyConsistent&lt;/code&gt; &lt;/a&gt;順序に対応します。</target>
        </trans-unit>
        <trans-unit id="f08c346abc15f2333345a09ec38f898e5a3c37f4" translate="yes" xml:space="preserve">
          <source>Cost is &lt;em&gt;O&lt;/em&gt;(1) in the worst case.</source>
          <target state="translated">最悪の場合、コストは&lt;em&gt;O&lt;/em&gt;（1）です。</target>
        </trans-unit>
        <trans-unit id="09ce2e9304ae5b383f1632fbb44a39ef3060234c" translate="yes" xml:space="preserve">
          <source>Cost is O(1) in the worst case.</source>
          <target state="translated">コストは最悪の場合O(1)です。</target>
        </trans-unit>
        <trans-unit id="4565dac88acbb7caf8a606f26f1a40ae8ffd1c83" translate="yes" xml:space="preserve">
          <source>Counting the number of times each character in a string occurs</source>
          <target state="translated">文字列中の各文字の出現回数を数える</target>
        </trans-unit>
        <trans-unit id="33935f03e2050408f5414a4ce0ae315ea392ec16" translate="yes" xml:space="preserve">
          <source>Cow</source>
          <target state="translated">Cow</target>
        </trans-unit>
        <trans-unit id="693955de587b375013c6570bf823a68dfd67917d" translate="yes" xml:space="preserve">
          <source>Cow::add</source>
          <target state="translated">Cow::add</target>
        </trans-unit>
        <trans-unit id="7cbe8211cbeef402d10ebf93bfa757f6e2139508" translate="yes" xml:space="preserve">
          <source>Cow::add_assign</source>
          <target state="translated">Cow::add_assign</target>
        </trans-unit>
        <trans-unit id="32e5fc6c56d5604169c226a3a944c073c12140c7" translate="yes" xml:space="preserve">
          <source>Cow::as_ref</source>
          <target state="translated">Cow::as_ref</target>
        </trans-unit>
        <trans-unit id="0a5d6acea679c8099a6bbb9a416bd6729a13bc2f" translate="yes" xml:space="preserve">
          <source>Cow::borrow</source>
          <target state="translated">Cow::borrow</target>
        </trans-unit>
        <trans-unit id="796a45dcb867e9830884b0690f9a272e819f5f3a" translate="yes" xml:space="preserve">
          <source>Cow::borrow_mut</source>
          <target state="translated">Cow::borrow_mut</target>
        </trans-unit>
        <trans-unit id="7e39dc06c961703bf1c460cfd6b96092d922bbde" translate="yes" xml:space="preserve">
          <source>Cow::clamp</source>
          <target state="translated">Cow::clamp</target>
        </trans-unit>
        <trans-unit id="7b15f2c3bfdb27a5cabafc7f0ad588221725b072" translate="yes" xml:space="preserve">
          <source>Cow::clone</source>
          <target state="translated">Cow::clone</target>
        </trans-unit>
        <trans-unit id="966aa7081fe4cf6f42dd4acb0bc7fcfd36a6e01f" translate="yes" xml:space="preserve">
          <source>Cow::clone_from</source>
          <target state="translated">Cow::clone_from</target>
        </trans-unit>
        <trans-unit id="33201e2c4f59d80236b56d492f272cb3c2ab346b" translate="yes" xml:space="preserve">
          <source>Cow::clone_into</source>
          <target state="translated">Cow::clone_into</target>
        </trans-unit>
        <trans-unit id="028a59b6cc6ecfb8febc6dc3dd5d3dc356c53c23" translate="yes" xml:space="preserve">
          <source>Cow::cmp</source>
          <target state="translated">Cow::cmp</target>
        </trans-unit>
        <trans-unit id="2e5b7f3004475d1f8e4955e27f33e2152324f652" translate="yes" xml:space="preserve">
          <source>Cow::default</source>
          <target state="translated">Cow::default</target>
        </trans-unit>
        <trans-unit id="b699cecf1f0d7f529a1a6f64b8a4903dcd1001ed" translate="yes" xml:space="preserve">
          <source>Cow::deref</source>
          <target state="translated">Cow::deref</target>
        </trans-unit>
        <trans-unit id="6bc94223417332709b4b63272dcb8b4305db7891" translate="yes" xml:space="preserve">
          <source>Cow::eq</source>
          <target state="translated">Cow::eq</target>
        </trans-unit>
        <trans-unit id="2d104060ce81cbbb3886aeba50d79a35444450ea" translate="yes" xml:space="preserve">
          <source>Cow::extend</source>
          <target state="translated">Cow::extend</target>
        </trans-unit>
        <trans-unit id="fe60e1a7453821175b1a861b940c910975fc4310" translate="yes" xml:space="preserve">
          <source>Cow::fmt</source>
          <target state="translated">Cow::fmt</target>
        </trans-unit>
        <trans-unit id="fca34a50e1bfcf0f247b1169df9b14f1b8428d49" translate="yes" xml:space="preserve">
          <source>Cow::from</source>
          <target state="translated">Cow::from</target>
        </trans-unit>
        <trans-unit id="e367ea07f6e4d63f248c649b12e294dc43303629" translate="yes" xml:space="preserve">
          <source>Cow::from_iter</source>
          <target state="translated">Cow::from_iter</target>
        </trans-unit>
        <trans-unit id="d12d86dc5a7f9ffe202177b8e115ee33875a2d8d" translate="yes" xml:space="preserve">
          <source>Cow::ge</source>
          <target state="translated">Cow::ge</target>
        </trans-unit>
        <trans-unit id="22818597dcded615134fe9a1b6bb8626b033e296" translate="yes" xml:space="preserve">
          <source>Cow::gt</source>
          <target state="translated">Cow::gt</target>
        </trans-unit>
        <trans-unit id="51cf9f48532dc9da964f91b7522b27baaa2d4c0c" translate="yes" xml:space="preserve">
          <source>Cow::hash</source>
          <target state="translated">Cow::hash</target>
        </trans-unit>
        <trans-unit id="d042eb93c4a4d7f640eab07a196cb05fb390b9df" translate="yes" xml:space="preserve">
          <source>Cow::hash_slice</source>
          <target state="translated">Cow::hash_slice</target>
        </trans-unit>
        <trans-unit id="97fb1be95d12f842dcf3c638a87ba0b2b8944b97" translate="yes" xml:space="preserve">
          <source>Cow::into</source>
          <target state="translated">Cow::into</target>
        </trans-unit>
        <trans-unit id="b8e553eaa3186de0fe51ca5f3c0b4841c5ae5c04" translate="yes" xml:space="preserve">
          <source>Cow::into_owned</source>
          <target state="translated">Cow::into_owned</target>
        </trans-unit>
        <trans-unit id="0e1c80a19711560c1f116de54a1f7e719d1bf442" translate="yes" xml:space="preserve">
          <source>Cow::le</source>
          <target state="translated">Cow::le</target>
        </trans-unit>
        <trans-unit id="93a9c0a2628918700020fecd5abf72577d1de50c" translate="yes" xml:space="preserve">
          <source>Cow::lt</source>
          <target state="translated">Cow::lt</target>
        </trans-unit>
        <trans-unit id="56e7afeac7bd6ef65adc6d32143bb8dab6b08222" translate="yes" xml:space="preserve">
          <source>Cow::max</source>
          <target state="translated">Cow::max</target>
        </trans-unit>
        <trans-unit id="4aaaf9d7dbe72651e1b030b2262eb0e8e8cb78b9" translate="yes" xml:space="preserve">
          <source>Cow::min</source>
          <target state="translated">Cow::min</target>
        </trans-unit>
        <trans-unit id="9ab3103ee1509fd6a54106bb7381607716ed0138" translate="yes" xml:space="preserve">
          <source>Cow::ne</source>
          <target state="translated">Cow::ne</target>
        </trans-unit>
        <trans-unit id="f044809d018419aa69f3a820e029c02c164aa551" translate="yes" xml:space="preserve">
          <source>Cow::partial_cmp</source>
          <target state="translated">Cow::partial_cmp</target>
        </trans-unit>
        <trans-unit id="ebeb9986333e97f2bbde42528a31ea5b0c3c685e" translate="yes" xml:space="preserve">
          <source>Cow::to_mut</source>
          <target state="translated">Cow::to_mut</target>
        </trans-unit>
        <trans-unit id="a3edd74dc1b5e1ddc3c8bf77bc0c1300fbe12c7a" translate="yes" xml:space="preserve">
          <source>Cow::to_owned</source>
          <target state="translated">Cow::to_owned</target>
        </trans-unit>
        <trans-unit id="e88592e59ccc38b4d59be087417232c9110d93ee" translate="yes" xml:space="preserve">
          <source>Cow::to_string</source>
          <target state="translated">Cow::to_string</target>
        </trans-unit>
        <trans-unit id="40b9ec03a5cec2936f5d7f046fb627d8e4fbfe33" translate="yes" xml:space="preserve">
          <source>Cow::try_from</source>
          <target state="translated">Cow::try_from</target>
        </trans-unit>
        <trans-unit id="58e7fdeb9b72b29c39d64b56b36d86e410e88fad" translate="yes" xml:space="preserve">
          <source>Cow::try_into</source>
          <target state="translated">Cow::try_into</target>
        </trans-unit>
        <trans-unit id="1fe64d0caae123b8b82e7a38873038a43e5d637b" translate="yes" xml:space="preserve">
          <source>Cow::type_id</source>
          <target state="translated">Cow::type_id</target>
        </trans-unit>
        <trans-unit id="511047aee6ef07c2cf5bfb5bfce8379f7f4ff0d7" translate="yes" xml:space="preserve">
          <source>Crate std</source>
          <target state="translated">クレート標準</target>
        </trans-unit>
        <trans-unit id="8f11bdf9ce6198dd51c1c5023a46121d1ac9d8b4" translate="yes" xml:space="preserve">
          <source>Crates</source>
          <target state="translated">Crates</target>
        </trans-unit>
        <trans-unit id="54a760409100eb3d0cf2335a44a83249f918ef6c" translate="yes" xml:space="preserve">
          <source>Crates and source files</source>
          <target state="translated">クレートとソースファイル</target>
        </trans-unit>
        <trans-unit id="81846c0ce3d60d6c98fda1ad99d8e815fa36aed3" translate="yes" xml:space="preserve">
          <source>Crates may also learn about how the C runtime is being linked. Code on MSVC, for example, needs to be compiled differently (e.g. with &lt;code&gt;/MT&lt;/code&gt; or &lt;code&gt;/MD&lt;/code&gt;) depending on the runtime being linked. This is exported currently through the &lt;a href=&quot;conditional-compilation#target_feature&quot;&gt;&lt;code&gt;cfg&lt;/code&gt; attribute &lt;code&gt;target_feature&lt;/code&gt; option&lt;/a&gt;:</source>
          <target state="translated">クレートは、Cランタイムがどのようにリンクされているかも知ることができます。たとえば、MSVCのコードは、リンクされているランタイムに応じて異なる方法で（たとえば &lt;code&gt;/MT&lt;/code&gt; または &lt;code&gt;/MD&lt;/code&gt; を使用して）コンパイルする必要があります。これは現在&lt;a href=&quot;conditional-compilation#target_feature&quot;&gt; &lt;code&gt;cfg&lt;/code&gt; 属性の &lt;code&gt;target_feature&lt;/code&gt; オプション&lt;/a&gt;を通じてエクスポートされています：</target>
        </trans-unit>
        <trans-unit id="106010044d4f1f1beaea337fae0e18c89b67b5dc" translate="yes" xml:space="preserve">
          <source>Create a &lt;a href=&quot;vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt; containing a given list of elements:</source>
          <target state="translated">与えられた要素のリストを含む&lt;a href=&quot;vec/struct.vec&quot;&gt; &lt;code&gt;Vec&lt;/code&gt; &lt;/a&gt;を作成します。</target>
        </trans-unit>
        <trans-unit id="08512da9b9631b9ad0299589cfdce97af650a4af" translate="yes" xml:space="preserve">
          <source>Create a &lt;a href=&quot;vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt; from a given element and size:</source>
          <target state="translated">&lt;a href=&quot;vec/struct.vec&quot;&gt; &lt;code&gt;Vec&lt;/code&gt; を&lt;/a&gt;作成する指定された要素とサイズからを。</target>
        </trans-unit>
        <trans-unit id="2b2d7e4c94a21c2565db9b8e49daa5427122f55a" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;ControlFlow&lt;/code&gt; from any type implementing &lt;code&gt;Try&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Try&lt;/code&gt; を実装する任意のタイプから &lt;code&gt;ControlFlow&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="6887be00e79042f00517ecdcb279252e481cce7b" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;const&lt;/code&gt; raw pointer to a place, without creating an intermediate reference.</source>
          <target state="translated">作成 &lt;code&gt;const&lt;/code&gt; の中間の参照を作成することなく、場所に生のポインタを。</target>
        </trans-unit>
        <trans-unit id="e8f88f84cbce6cd3d87b8b4e0c02ce0db7e09718" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;mut&lt;/code&gt; raw pointer to a place, without creating an intermediate reference.</source>
          <target state="translated">作成し &lt;code&gt;mut&lt;/code&gt; 中間の参照を作成することなく、場所に生のポインタを。</target>
        </trans-unit>
        <trans-unit id="dadc65fc1cc97ba934751fe27ff9c73111665bb6" translate="yes" xml:space="preserve">
          <source>Create a &lt;em&gt;src/lib.rs&lt;/em&gt; that contains the following, which is the simplest definition of a &lt;code&gt;ThreadPool&lt;/code&gt; struct that we can have for now:</source>
          <target state="translated">以下を含む&lt;em&gt;src / lib.rs&lt;/em&gt;を作成します。これは、 &lt;code&gt;ThreadPool&lt;/code&gt; の最も単純な定義です。現時点で使用できる構造体の。</target>
        </trans-unit>
        <trans-unit id="f347ec024d82eb6b89c2dd7f293208cbc1526227" translate="yes" xml:space="preserve">
          <source>Create a floating point value from its representation as a byte array in big endian.</source>
          <target state="translated">ビッグエンディアンのバイト配列としての表現から浮動小数点値を作成します。</target>
        </trans-unit>
        <trans-unit id="738eb68374d58eca55f11ff82de4043965980cae" translate="yes" xml:space="preserve">
          <source>Create a floating point value from its representation as a byte array in little endian.</source>
          <target state="translated">リトルエンディアンのバイト配列としての表現から浮動小数点値を作成します。</target>
        </trans-unit>
        <trans-unit id="4a603ee22aea5d470343b311f421ae51172d2c39" translate="yes" xml:space="preserve">
          <source>Create a floating point value from its representation as a byte array in native endian.</source>
          <target state="translated">ネイティブエンディアンのバイト配列としての表現から浮動小数点値を作成します。</target>
        </trans-unit>
        <trans-unit id="b7f61c879edfd0a45d7f9ea67f2cf1df05c737a7" translate="yes" xml:space="preserve">
          <source>Create a native endian integer value from its memory representation as a byte array in native endianness.</source>
          <target state="translated">メモリ表現からネイティブエンディアンの整数値をネイティブエンディアンのバイト配列として作成します。</target>
        </trans-unit>
        <trans-unit id="df6229db42ef4dafc7a180d1330b9a8f69d7fa1f" translate="yes" xml:space="preserve">
          <source>Create a native endian integer value from its representation as a byte array in big endian.</source>
          <target state="translated">ビッグエンディアンのバイト配列としての表現からネイティブエンディアンの整数値を作成します。</target>
        </trans-unit>
        <trans-unit id="51d495418f093348cadd3c42ede09a86d9d385c1" translate="yes" xml:space="preserve">
          <source>Create a native endian integer value from its representation as a byte array in little endian.</source>
          <target state="translated">リトルエンディアンのバイト配列としての表現からネイティブエンディアンの整数値を作成します。</target>
        </trans-unit>
        <trans-unit id="a5e05951e26f0ac1f3e1782521ac4d97124e1e43" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;Context&lt;/code&gt; from a &lt;code&gt;&amp;amp;Waker&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;amp;Waker&lt;/code&gt; から新しい &lt;code&gt;Context&lt;/code&gt; を作成する。</target>
        </trans-unit>
        <trans-unit id="1573b61a5aefaf75d05d038cd9b74b32106f81d5" translate="yes" xml:space="preserve">
          <source>Create a new array of &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; items, in an uninitialized state.</source>
          <target state="translated">初期化されていない状態で、 &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; アイテムの新しい配列を作成します。</target>
        </trans-unit>
        <trans-unit id="fc2b95be4b476076ff98a704cd14c423842d1bc0" translate="yes" xml:space="preserve">
          <source>Create a new project called &lt;em&gt;branches&lt;/em&gt; in your &lt;em&gt;projects&lt;/em&gt; directory to explore the &lt;code&gt;if&lt;/code&gt; expression. In the &lt;em&gt;src/main.rs&lt;/em&gt; file, input the following:</source>
          <target state="translated">&lt;em&gt;プロジェクト&lt;/em&gt;ディレクトリに&lt;em&gt;ブランチ&lt;/em&gt;と呼ばれる新しいプロジェクトを作成して、 &lt;code&gt;if&lt;/code&gt; 式を調べます。中&lt;em&gt;のsrc / main.rs&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;ファイル、入力は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="6018c3ae5328bae6985607148a16666db7ade84b" translate="yes" xml:space="preserve">
          <source>Create a proper HTTP response.</source>
          <target state="translated">適切なHTTPレスポンスを作成します。</target>
        </trans-unit>
        <trans-unit id="d439578ea401a7b7b1ed8ba278f389cb961cb29e" translate="yes" xml:space="preserve">
          <source>Create an integer value from its memory representation as a byte array in native endianness.</source>
          <target state="translated">メモリ表現からネイティブエンディアンのバイト配列として整数値を作成します。</target>
        </trans-unit>
        <trans-unit id="edadb155e110b7152a3af83ab6dc9bcd41c5f792" translate="yes" xml:space="preserve">
          <source>Create an integer value from its representation as a byte array in big endian.</source>
          <target state="translated">ビッグエンディアンのバイト配列としての表現から整数値を作成します。</target>
        </trans-unit>
        <trans-unit id="79d89966c01183ef583d394ab66736d72e5ab2a4" translate="yes" xml:space="preserve">
          <source>Create an integer value from its representation as a byte array in little endian.</source>
          <target state="translated">リトルエンディアンのバイト配列としての表現から整数値を作成します。</target>
        </trans-unit>
        <trans-unit id="25d9f5bbee57eb46f4d71f4619cd2954dab40b6a" translate="yes" xml:space="preserve">
          <source>Create and run a new project using the conventions of Cargo</source>
          <target state="translated">カーゴの規約を使用して、新しいプロジェクトを作成して実行します。</target>
        </trans-unit>
        <trans-unit id="4022af3050254311f09f639a107112b87a62cf71" translate="yes" xml:space="preserve">
          <source>Created by &lt;a href=&quot;enum.result#method.iter&quot;&gt;&lt;code&gt;Result::iter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;enum.result#method.iter&quot;&gt; &lt;code&gt;Result::iter&lt;/code&gt; &lt;/a&gt;によって作成されましたます。</target>
        </trans-unit>
        <trans-unit id="af0c83f28db824845c100a582780b8f20508d394" translate="yes" xml:space="preserve">
          <source>Created by &lt;a href=&quot;enum.result#method.iter_mut&quot;&gt;&lt;code&gt;Result::iter_mut&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;enum.result#method.iter_mut&quot;&gt; &lt;code&gt;Result::iter_mut&lt;/code&gt; &lt;/a&gt;によって作成されましたます。</target>
        </trans-unit>
        <trans-unit id="09811f267c1ebc50f95d66fc983b0d7082c3ae69" translate="yes" xml:space="preserve">
          <source>Created by the &lt;a href=&quot;fn.stdin&quot;&gt;&lt;code&gt;io::stdin&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;fn.stdin&quot;&gt; &lt;code&gt;io::stdin&lt;/code&gt; &lt;/a&gt;によって作成されますメソッドます。</target>
        </trans-unit>
        <trans-unit id="aa4eda3fc81c73b324209a0ed053e3502c7b6d3a" translate="yes" xml:space="preserve">
          <source>Created by the &lt;a href=&quot;fn.stdout&quot;&gt;&lt;code&gt;io::stdout&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;fn.stdout&quot;&gt; &lt;code&gt;io::stdout&lt;/code&gt; &lt;/a&gt;によって作成されますメソッドます。</target>
        </trans-unit>
        <trans-unit id="4118ac7e788ef0c9786b67fbda36272b1c4996cd" translate="yes" xml:space="preserve">
          <source>Created with the method &lt;a href=&quot;../primitive.str#method.lines_any&quot;&gt;&lt;code&gt;lines_any&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../primitive.str#method.lines_any&quot;&gt; &lt;code&gt;lines_any&lt;/code&gt; &lt;/a&gt;メソッドで作成ます。</target>
        </trans-unit>
        <trans-unit id="59262292850307c7c68fd149910ff46990cb490b" translate="yes" xml:space="preserve">
          <source>Created with the method &lt;a href=&quot;../primitive.str#method.match_indices&quot;&gt;&lt;code&gt;match_indices&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">メソッド&lt;a href=&quot;../primitive.str#method.match_indices&quot;&gt; &lt;code&gt;match_indices&lt;/code&gt; で&lt;/a&gt;作成されます。</target>
        </trans-unit>
        <trans-unit id="69007e7b352974d2ed5a0645adfb2a0e511b43d9" translate="yes" xml:space="preserve">
          <source>Created with the method &lt;a href=&quot;../primitive.str#method.matches&quot;&gt;&lt;code&gt;matches&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../primitive.str#method.matches&quot;&gt; &lt;code&gt;matches&lt;/code&gt; &lt;/a&gt;メソッドで作成されます。</target>
        </trans-unit>
        <trans-unit id="0c07e4ab70e8dd8054e05dc1dda6b7b088cec14a" translate="yes" xml:space="preserve">
          <source>Created with the method &lt;a href=&quot;../primitive.str#method.rmatch_indices&quot;&gt;&lt;code&gt;rmatch_indices&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">メソッド&lt;a href=&quot;../primitive.str#method.rmatch_indices&quot;&gt; &lt;code&gt;rmatch_indices&lt;/code&gt; で&lt;/a&gt;作成されます。</target>
        </trans-unit>
        <trans-unit id="f8f1b36ba4c6f5f7293de7c9293d9136170acffe" translate="yes" xml:space="preserve">
          <source>Created with the method &lt;a href=&quot;../primitive.str#method.rmatches&quot;&gt;&lt;code&gt;rmatches&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">メソッド&lt;a href=&quot;../primitive.str#method.rmatches&quot;&gt; &lt;code&gt;rmatches&lt;/code&gt; で&lt;/a&gt;作成ます。</target>
        </trans-unit>
        <trans-unit id="eef49ccb04e77a74dfee92c547a3ffe707fa5c65" translate="yes" xml:space="preserve">
          <source>Created with the method &lt;a href=&quot;../primitive.str#method.rsplit&quot;&gt;&lt;code&gt;rsplit&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">メソッド&lt;a href=&quot;../primitive.str#method.rsplit&quot;&gt; &lt;code&gt;rsplit&lt;/code&gt; で&lt;/a&gt;作成ます。</target>
        </trans-unit>
        <trans-unit id="d94820cdb27352da5110e5e8ca3318ed87798da3" translate="yes" xml:space="preserve">
          <source>Created with the method &lt;a href=&quot;../primitive.str#method.rsplit_terminator&quot;&gt;&lt;code&gt;rsplit_terminator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">メソッド&lt;a href=&quot;../primitive.str#method.rsplit_terminator&quot;&gt; &lt;code&gt;rsplit_terminator&lt;/code&gt; で&lt;/a&gt;作成ます。</target>
        </trans-unit>
        <trans-unit id="bd48ff5a5ed05db4cd4900ae8bbab6c4468c965c" translate="yes" xml:space="preserve">
          <source>Created with the method &lt;a href=&quot;../primitive.str#method.rsplitn&quot;&gt;&lt;code&gt;rsplitn&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">メソッド&lt;a href=&quot;../primitive.str#method.rsplitn&quot;&gt; &lt;code&gt;rsplitn&lt;/code&gt; で&lt;/a&gt;作成ます。</target>
        </trans-unit>
        <trans-unit id="41150054fb3e04a6eb2f60c89a0c622a8b687e9f" translate="yes" xml:space="preserve">
          <source>Created with the method &lt;a href=&quot;../primitive.str#method.split&quot;&gt;&lt;code&gt;split&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">メソッド&lt;a href=&quot;../primitive.str#method.split&quot;&gt; &lt;code&gt;split&lt;/code&gt; で&lt;/a&gt;作成。</target>
        </trans-unit>
        <trans-unit id="736af07e54c1a03aed92b1a7eb6db1ffdbce9dfc" translate="yes" xml:space="preserve">
          <source>Created with the method &lt;a href=&quot;../primitive.str#method.split_terminator&quot;&gt;&lt;code&gt;split_terminator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">メソッド&lt;a href=&quot;../primitive.str#method.split_terminator&quot;&gt; &lt;code&gt;split_terminator&lt;/code&gt; で&lt;/a&gt;作成ます。</target>
        </trans-unit>
        <trans-unit id="34e66b6ac298ec2a03ac33fa2c496d6b931aa7f7" translate="yes" xml:space="preserve">
          <source>Created with the method &lt;a href=&quot;../primitive.str#method.splitn&quot;&gt;&lt;code&gt;splitn&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">メソッド&lt;a href=&quot;../primitive.str#method.splitn&quot;&gt; &lt;code&gt;splitn&lt;/code&gt; で&lt;/a&gt;作成ます。</target>
        </trans-unit>
        <trans-unit id="2dd142425da747e12befd4f5b44fb2a02ff2fd2f" translate="yes" xml:space="preserve">
          <source>Creates I/O objects from raw sockets.</source>
          <target state="translated">生のソケットからI/Oオブジェクトを作成します。</target>
        </trans-unit>
        <trans-unit id="cf32a2de5dd08df87331831c146a8dc440cef190" translate="yes" xml:space="preserve">
          <source>Creates a &quot;by reference&quot; adaptor for this instance of &lt;code&gt;AllocRef&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;AllocRef&lt;/code&gt; のこのインスタンスの「参照による」アダプタを作成します。</target>
        </trans-unit>
        <trans-unit id="adc7360d03682b9ce3e40bde033153a742669e22" translate="yes" xml:space="preserve">
          <source>Creates a &quot;by reference&quot; adaptor for this instance of &lt;code&gt;AllocRef&lt;/code&gt;. &lt;a href=&quot;alloc/trait.allocref#method.by_ref&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;AllocRef&lt;/code&gt; のこのインスタンス用の「参照による」アダプタを作成します。&lt;a href=&quot;alloc/trait.allocref#method.by_ref&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="49e98c67adbb6f030254f89831552d25dcc5c44a" translate="yes" xml:space="preserve">
          <source>Creates a &quot;by reference&quot; adaptor for this instance of &lt;code&gt;AllocRef&lt;/code&gt;. &lt;a href=&quot;trait.allocref#method.by_ref&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;AllocRef&lt;/code&gt; のこのインスタンス用の「参照による」アダプタを作成します。&lt;a href=&quot;trait.allocref#method.by_ref&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a278d518f40bfe407b65ae92472554f0ad43b0e9" translate="yes" xml:space="preserve">
          <source>Creates a &quot;by reference&quot; adaptor for this instance of &lt;code&gt;Read&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Read&lt;/code&gt; このインスタンスの「参照」アダプタを作成します。</target>
        </trans-unit>
        <trans-unit id="a8c6aace43e5222b1b4a67c3314eb668fa59a95b" translate="yes" xml:space="preserve">
          <source>Creates a &quot;by reference&quot; adaptor for this instance of &lt;code&gt;Read&lt;/code&gt;. &lt;a href=&quot;../../../io/trait.read#method.by_ref&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">この &lt;code&gt;Read&lt;/code&gt; のインスタンスの「参照」アダプタを作成します。&lt;a href=&quot;../../../io/trait.read#method.by_ref&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aa1120735f9b617bfcf4c408c364721e2474cfac" translate="yes" xml:space="preserve">
          <source>Creates a &quot;by reference&quot; adaptor for this instance of &lt;code&gt;Read&lt;/code&gt;. &lt;a href=&quot;../io/trait.read#method.by_ref&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">この &lt;code&gt;Read&lt;/code&gt; のインスタンスの「参照」アダプタを作成します。&lt;a href=&quot;../io/trait.read#method.by_ref&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1c23950f757a3b5a0564d63c695e29d699148b00" translate="yes" xml:space="preserve">
          <source>Creates a &quot;by reference&quot; adaptor for this instance of &lt;code&gt;Read&lt;/code&gt;. &lt;a href=&quot;io/trait.read#method.by_ref&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">この &lt;code&gt;Read&lt;/code&gt; のインスタンスの「参照」アダプタを作成します。&lt;a href=&quot;io/trait.read#method.by_ref&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f0dd31fabcecb658aaa6493cf0457334c216005a" translate="yes" xml:space="preserve">
          <source>Creates a &quot;by reference&quot; adaptor for this instance of &lt;code&gt;Read&lt;/code&gt;. &lt;a href=&quot;trait.read#method.by_ref&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">この &lt;code&gt;Read&lt;/code&gt; のインスタンスの「参照」アダプタを作成します。&lt;a href=&quot;trait.read#method.by_ref&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a5351601dd7e1d6a711ac1b03e723d4cf003ac2c" translate="yes" xml:space="preserve">
          <source>Creates a &quot;by reference&quot; adaptor for this instance of &lt;code&gt;Write&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Write&lt;/code&gt; のこのインスタンスの「参照」アダプタを作成します。</target>
        </trans-unit>
        <trans-unit id="c9988f2100bdf98ad9b37f6f532ce86603b20f78" translate="yes" xml:space="preserve">
          <source>Creates a &quot;by reference&quot; adaptor for this instance of &lt;code&gt;Write&lt;/code&gt;. &lt;a href=&quot;../../../io/trait.write#method.by_ref&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Write&lt;/code&gt; のこのインスタンスの「参照」アダプタを作成します。&lt;a href=&quot;../../../io/trait.write#method.by_ref&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f47d2f8cb902e7b21c7adcb08944a9e00262efbd" translate="yes" xml:space="preserve">
          <source>Creates a &quot;by reference&quot; adaptor for this instance of &lt;code&gt;Write&lt;/code&gt;. &lt;a href=&quot;../io/trait.write#method.by_ref&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Write&lt;/code&gt; のこのインスタンスの「参照」アダプタを作成します。&lt;a href=&quot;../io/trait.write#method.by_ref&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c99cb43cbdda30f4ad3392b170e0ff9d377fdbb7" translate="yes" xml:space="preserve">
          <source>Creates a &quot;by reference&quot; adaptor for this instance of &lt;code&gt;Write&lt;/code&gt;. &lt;a href=&quot;io/trait.write#method.by_ref&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Write&lt;/code&gt; のこのインスタンスの「参照」アダプタを作成します。&lt;a href=&quot;io/trait.write#method.by_ref&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a85a9e9d25d9e345d63fefe60877566ee12ee3a5" translate="yes" xml:space="preserve">
          <source>Creates a &quot;by reference&quot; adaptor for this instance of &lt;code&gt;Write&lt;/code&gt;. &lt;a href=&quot;trait.write#method.by_ref&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Write&lt;/code&gt; のこのインスタンスの「参照」アダプタを作成します。&lt;a href=&quot;trait.write#method.by_ref&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f219c50ef6b1636aad391feae92a5a6ba5fcaaa9" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;struct.debugstruct&quot;&gt;&lt;code&gt;DebugStruct&lt;/code&gt;&lt;/a&gt; builder designed to assist with creation of &lt;a href=&quot;trait.debug&quot;&gt;&lt;code&gt;fmt::Debug&lt;/code&gt;&lt;/a&gt; implementations for structs.</source>
          <target state="translated">構造体の&lt;a href=&quot;trait.debug&quot;&gt; &lt;code&gt;fmt::Debug&lt;/code&gt; &lt;/a&gt;実装の作成を支援するように設計された&lt;a href=&quot;struct.debugstruct&quot;&gt; &lt;code&gt;DebugStruct&lt;/code&gt; &lt;/a&gt;ビルダーを作成します。</target>
        </trans-unit>
        <trans-unit id="739fb641f1f016f93a6f73322b4ce14626637551" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt; containing the arguments.</source>
          <target state="translated">引数を含む&lt;a href=&quot;vec/struct.vec&quot;&gt; &lt;code&gt;Vec&lt;/code&gt; &lt;/a&gt;を作成します。</target>
        </trans-unit>
        <trans-unit id="20ac12e51666ff19269f656f8ed337ce37aa8f96" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt;, with the &lt;code&gt;Default&lt;/code&gt; value for T.</source>
          <target state="translated">&lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; の &lt;code&gt;Default&lt;/code&gt; 値でBox &amp;lt;T&amp;gt;を作成します。</target>
        </trans-unit>
        <trans-unit id="6ffffc37f2ecbb6a8bb4083f12327ca3d6f4223a" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;CString&lt;/code&gt;, pass ownership to an &lt;code&gt;extern&lt;/code&gt; function (via raw pointer), then retake ownership with &lt;code&gt;from_raw&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;CString&lt;/code&gt; を作成し、（生のポインタを介して）所有権を &lt;code&gt;extern&lt;/code&gt; 関数に渡し、 &lt;code&gt;from_raw&lt;/code&gt; で所有権を再取得します。</target>
        </trans-unit>
        <trans-unit id="e697eeab2968b2fe6b1eaad6636bc85accf362d3" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;Cell&amp;lt;T&amp;gt;&lt;/code&gt;, with the &lt;code&gt;Default&lt;/code&gt; value for T.</source>
          <target state="translated">&lt;code&gt;Cell&amp;lt;T&amp;gt;&lt;/code&gt; の &lt;code&gt;Default&lt;/code&gt; 値でCell &amp;lt;T&amp;gt;を作成します。</target>
        </trans-unit>
        <trans-unit id="55a80b9868a6c43d379540049d65f50ea1da2ffd" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;Condvar&lt;/code&gt; which is ready to be waited on and notified.</source>
          <target state="translated">待機して通知する準備ができている &lt;code&gt;Condvar&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="c7eaba70ca9585d52f8873cbf27e20698cc83ca9" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;DebugList&lt;/code&gt; builder designed to assist with creation of &lt;code&gt;fmt::Debug&lt;/code&gt; implementations for list-like structures.</source>
          <target state="translated">リストのような構造の &lt;code&gt;fmt::Debug&lt;/code&gt; 実装の作成を支援するように設計された &lt;code&gt;DebugList&lt;/code&gt; ビルダーを作成します。</target>
        </trans-unit>
        <trans-unit id="78f2b0bf71bda8bfb83fdfb6f61982d96c436b41" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;DebugMap&lt;/code&gt; builder designed to assist with creation of &lt;code&gt;fmt::Debug&lt;/code&gt; implementations for map-like structures.</source>
          <target state="translated">マップのような構造の &lt;code&gt;fmt::Debug&lt;/code&gt; 実装の作成を支援するように設計された &lt;code&gt;DebugMap&lt;/code&gt; ビルダーを作成します。</target>
        </trans-unit>
        <trans-unit id="6b223e3e99a64a1329ad13395fb3de1305791f79" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;DebugSet&lt;/code&gt; builder designed to assist with creation of &lt;code&gt;fmt::Debug&lt;/code&gt; implementations for set-like structures.</source>
          <target state="translated">&lt;code&gt;fmt::Debug&lt;/code&gt; 作成を支援するように設計された &lt;code&gt;DebugSet&lt;/code&gt; ビルダーを作成しますセットのような構造実装の。</target>
        </trans-unit>
        <trans-unit id="3a043481d83beb3910de7ff88ad967a32c4cdea8" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;DebugTuple&lt;/code&gt; builder designed to assist with creation of &lt;code&gt;fmt::Debug&lt;/code&gt; implementations for tuple structs.</source>
          <target state="translated">タプル構造の &lt;code&gt;fmt::Debug&lt;/code&gt; 実装の作成を支援するように設計された &lt;code&gt;DebugTuple&lt;/code&gt; ビルダーを作成します。</target>
        </trans-unit>
        <trans-unit id="c2e945b534e7387a676cdf2092f05ed3ca7e6a0d" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;Mutex&amp;lt;T&amp;gt;&lt;/code&gt;, with the &lt;code&gt;Default&lt;/code&gt; value for T.</source>
          <target state="translated">作成 &lt;code&gt;Mutex&amp;lt;T&amp;gt;&lt;/code&gt; 、と &lt;code&gt;Default&lt;/code&gt; T.値</target>
        </trans-unit>
        <trans-unit id="2457dcfd86eed40ee77c1be89b5497e483ff1fb1" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;NonNull&lt;/code&gt; that is dangling, but well-aligned for this Layout.</source>
          <target state="translated">&lt;code&gt;NonNull&lt;/code&gt; ているが、このレイアウトに適切に配置されたNonNullを作成します。</target>
        </trans-unit>
        <trans-unit id="5c0d085c7250037263700b6cfb18ce731e674d4b" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;PoisonError&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PoisonError&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="2e0a49f1052dbc1a3b0a1749902359f56811b9e5" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;RawEntryMut&lt;/code&gt; from the given hash.</source>
          <target state="translated">指定されたハッシュから &lt;code&gt;RawEntryMut&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="de5c5c1cf0d19ac46ba4373288253b2f05653f7c" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;RawEntryMut&lt;/code&gt; from the given key and its hash.</source>
          <target state="translated">指定されたキーとそのハッシュから &lt;code&gt;RawEntryMut&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="62c5d99a4d7585b6ed324067726f3b9bcf468406" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;RawEntryMut&lt;/code&gt; from the given key.</source>
          <target state="translated">指定されたキーから &lt;code&gt;RawEntryMut&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="783dd143d9e57f2eac1643efca4369484a4560cb" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;, with the &lt;code&gt;Default&lt;/code&gt; value for T.</source>
          <target state="translated">&lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; の &lt;code&gt;Default&lt;/code&gt; 値を使用してRefCell &amp;lt;T&amp;gt;を作成します。</target>
        </trans-unit>
        <trans-unit id="3fff5893e4b016c790ee41387abc252e0a3dbbc9" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;SipHasher&lt;/code&gt; that is keyed off the provided keys.</source>
          <target state="translated">&lt;code&gt;SipHasher&lt;/code&gt; を作成します提供されたキーををます。</target>
        </trans-unit>
        <trans-unit id="7d2164d0001388156d7dc65bb3766604bcd46f23" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;String&lt;/code&gt; using interpolation of runtime expressions.</source>
          <target state="translated">ランタイム式の補間を使用して &lt;code&gt;String&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="186312d3e8f02c67bef7a02b5d523802c4aa8934" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; directly from the raw components of another vector.</source>
          <target state="translated">別のベクトルの生のコンポーネントから直接 &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; 作成します。</target>
        </trans-unit>
        <trans-unit id="1d9bce70c0580be8c8b97ba5c3bd8fd776ca7cd1" translate="yes" xml:space="preserve">
          <source>Creates a C string wrapper from a byte slice.</source>
          <target state="translated">バイトスライスからC文字列ラッパーを作成します。</target>
        </trans-unit>
        <trans-unit id="2760a55dc42de0ca1b9aa402a75cb2cd901bf4c7" translate="yes" xml:space="preserve">
          <source>Creates a C-compatible string by consuming a byte vector, without checking for interior 0 bytes.</source>
          <target state="translated">バイトベクトルを消費してC互換の文字列を作成します。</target>
        </trans-unit>
        <trans-unit id="8f3450537e212e5ded854c29cc430df9d6399fe6" translate="yes" xml:space="preserve">
          <source>Creates a TCP listener bound to &lt;code&gt;127.0.0.1:80&lt;/code&gt;. If that fails, create a TCP listener bound to &lt;code&gt;127.0.0.1:443&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;127.0.0.1:80&lt;/code&gt; にバインドされたTCPリスナーを作成します。それが失敗した場合は、 &lt;code&gt;127.0.0.1:443&lt;/code&gt; : 443にバインドされたTCPリスナーを作成します。</target>
        </trans-unit>
        <trans-unit id="09ead757efb04dcd3b56b97156680495cc215787" translate="yes" xml:space="preserve">
          <source>Creates a TCP listener bound to &lt;code&gt;127.0.0.1:80&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;127.0.0.1:80&lt;/code&gt; にバインドされたTCPリスナーを作成します。</target>
        </trans-unit>
        <trans-unit id="125547a7cdfd055c791ab9fe907dbb901276dc4e" translate="yes" xml:space="preserve">
          <source>Creates a UDP socket bound to &lt;code&gt;127.0.0.1:3400&lt;/code&gt; and connect the socket to &lt;code&gt;127.0.0.1:8080&lt;/code&gt;:</source>
          <target state="translated">バインドされたUDPソケットを作成 &lt;code&gt;127.0.0.1:3400&lt;/code&gt; をしてにソケットを接続し &lt;code&gt;127.0.0.1:8080&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="b3e6bdcae553ddb22df2dc99d1291e7f6adae2cb" translate="yes" xml:space="preserve">
          <source>Creates a UDP socket bound to &lt;code&gt;127.0.0.1:3400&lt;/code&gt;. If the socket cannot be bound to that address, create a UDP socket bound to &lt;code&gt;127.0.0.1:3401&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;127.0.0.1:3400&lt;/code&gt; にバインドされたUDPソケットを作成します。ソケットをそのアドレスにバインドできない場合は、 &lt;code&gt;127.0.0.1:3401&lt;/code&gt; ：3401にバインドされたUDPソケットを作成します。</target>
        </trans-unit>
        <trans-unit id="970a978688cc0f0cc3cd91c8aee2643dc529be5e" translate="yes" xml:space="preserve">
          <source>Creates a UDP socket bound to &lt;code&gt;127.0.0.1:3400&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;127.0.0.1:3400&lt;/code&gt; にバインドされたUDPソケットを作成します。</target>
        </trans-unit>
        <trans-unit id="6d67e9f4331cb8a94ca8c11e0fa8d4c1d232fb18" translate="yes" xml:space="preserve">
          <source>Creates a UDP socket bound to &lt;code&gt;127.0.0.1:7878&lt;/code&gt; and read bytes in nonblocking mode:</source>
          <target state="translated">&lt;code&gt;127.0.0.1:7878&lt;/code&gt; にバインドされたUDPソケットを作成し、非ブロッキングモードでバイトを読み取ります。</target>
        </trans-unit>
        <trans-unit id="1151249da77e9f2de50f7481ee50add938a7ab4f" translate="yes" xml:space="preserve">
          <source>Creates a UDP socket from the given address.</source>
          <target state="translated">指定したアドレスからUDPソケットを作成します。</target>
        </trans-unit>
        <trans-unit id="795fe524ed6f584d4e9afe0e80df1ee90a45cd0b" translate="yes" xml:space="preserve">
          <source>Creates a Unix Datagram socket which is not bound to any address.</source>
          <target state="translated">アドレスに縛られないUnix Datagramソケットを作成します。</target>
        </trans-unit>
        <trans-unit id="d924c364ce8b29f794812fd360b1f7778311ab84" translate="yes" xml:space="preserve">
          <source>Creates a Unix datagram socket bound to the given path.</source>
          <target state="translated">指定したパスにバインドされたUnixデータグラムソケットを作成します。</target>
        </trans-unit>
        <trans-unit id="4c2cfa537cff8be0489b9b009b909857fe251042" translate="yes" xml:space="preserve">
          <source>Creates a blank new set of options ready for configuration.</source>
          <target state="translated">設定の準備ができた空白の新しいオプションセットを作成します。</target>
        </trans-unit>
        <trans-unit id="126f592716e99eb8b2f011b315511a7abe434c67" translate="yes" xml:space="preserve">
          <source>Creates a consuming iterator visiting all the keys in arbitrary order. The map cannot be used after calling this. The iterator element type is &lt;code&gt;K&lt;/code&gt;.</source>
          <target state="translated">任意の順序ですべてのキーにアクセスする消費イテレータを作成します。これを呼び出した後は、マップを使用できません。イテレータ要素のタイプは &lt;code&gt;K&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="7c40975f7aca2548822b2c017b5f70dd4d1cc3cc" translate="yes" xml:space="preserve">
          <source>Creates a consuming iterator visiting all the keys, in sorted order. The map cannot be used after calling this. The iterator element type is &lt;code&gt;K&lt;/code&gt;.</source>
          <target state="translated">ソートされた順序で、すべてのキーにアクセスする消費イテレータを作成します。これを呼び出した後は、マップを使用できません。イテレータ要素のタイプは &lt;code&gt;K&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="214a64ab897dee52561a07fdff1b80d5d939e941" translate="yes" xml:space="preserve">
          <source>Creates a consuming iterator visiting all the values in arbitrary order. The map cannot be used after calling this. The iterator element type is &lt;code&gt;V&lt;/code&gt;.</source>
          <target state="translated">任意の順序ですべての値にアクセスする消費イテレータを作成します。これを呼び出した後は、マップを使用できません。イテレータ要素のタイプは &lt;code&gt;V&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="19a6064fc4e6c00c6fd2244ac07d8131e44e7638" translate="yes" xml:space="preserve">
          <source>Creates a consuming iterator visiting all the values, in order by key. The map cannot be used after calling this. The iterator element type is &lt;code&gt;V&lt;/code&gt;.</source>
          <target state="translated">キー順にすべての値にアクセスする消費イテレータを作成します。これを呼び出した後は、マップを使用できません。イテレータ要素のタイプは &lt;code&gt;V&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c3d1a6f5d907d5005528a9e611c70f14eac0e563" translate="yes" xml:space="preserve">
          <source>Creates a consuming iterator, that is, one that moves each key-value pair out of the map in arbitrary order. The map cannot be used after calling this.</source>
          <target state="translated">消費型イテレータを作成します。つまり、各キーと値のペアを任意の順序でマップの外に移動させるイテレータを作成します。これを呼び出すと、マップは使用できなくなります。</target>
        </trans-unit>
        <trans-unit id="79b001f20ad5ddba645d473cd2eabf2f0b9fab15" translate="yes" xml:space="preserve">
          <source>Creates a consuming iterator, that is, one that moves each value out of the binary heap in arbitrary order. The binary heap cannot be used after calling this.</source>
          <target state="translated">バイナリヒープから任意の順序で各値を移動させる消費型イテレータを作成します。これを呼び出すと、バイナリヒープは使用できなくなります。</target>
        </trans-unit>
        <trans-unit id="7feed7f78b7ec26ae1634185d6a9758340531778" translate="yes" xml:space="preserve">
          <source>Creates a consuming iterator, that is, one that moves each value out of the set in arbitrary order. The set cannot be used after calling this.</source>
          <target state="translated">つまり、セットから任意の順序で各値を移動させる消費型イテレータを作成します。これを呼び出した後は、セットを使用することはできません。</target>
        </trans-unit>
        <trans-unit id="21cd148d772cd2056fdb8294260ce5794f1a496f" translate="yes" xml:space="preserve">
          <source>Creates a consuming iterator, that is, one that moves each value out of the vector (from start to end). The vector cannot be used after calling this.</source>
          <target state="translated">消費型イテレータを作成します。これを呼び出した後は,ベクトルを使用することはできません.</target>
        </trans-unit>
        <trans-unit id="e25f6dea08ae4574fa8e540a54d8cc1337d77224" translate="yes" xml:space="preserve">
          <source>Creates a draining iterator that removes the specified range in the &lt;code&gt;String&lt;/code&gt; and yields the removed &lt;code&gt;chars&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 内の指定された範囲を削除し、削除された &lt;code&gt;chars&lt;/code&gt; を生成するドレインイテレータを作成します。</target>
        </trans-unit>
        <trans-unit id="7db96b23148a77de869b5eca7a045e98737fe84f" translate="yes" xml:space="preserve">
          <source>Creates a draining iterator that removes the specified range in the &lt;code&gt;VecDeque&lt;/code&gt; and yields the removed items.</source>
          <target state="translated">&lt;code&gt;VecDeque&lt;/code&gt; 内の指定された範囲を削除し、削除されたアイテムを生成するドレインイテレータを作成します。</target>
        </trans-unit>
        <trans-unit id="30705a0e8a834bf60d65b0e913c943e74e2345a0" translate="yes" xml:space="preserve">
          <source>Creates a draining iterator that removes the specified range in the vector and yields the removed items.</source>
          <target state="translated">ベクトル内の指定された範囲を削除し,削除された項目を生成する排出イテレータを作成します.</target>
        </trans-unit>
        <trans-unit id="0a3ace82b47facecc11751d667241e41c5433bb3" translate="yes" xml:space="preserve">
          <source>Creates a future from a value.</source>
          <target state="translated">価値から未来を創造します。</target>
        </trans-unit>
        <trans-unit id="a4904c979ded2cb022be948e4bb7e724529681fe" translate="yes" xml:space="preserve">
          <source>Creates a future that is immediately ready with a value.</source>
          <target state="translated">価値観を持ってすぐにできる未来を創造する。</target>
        </trans-unit>
        <trans-unit id="a911b1f09940050ef78aeaffea81a903d921b3d4" translate="yes" xml:space="preserve">
          <source>Creates a future which never resolves, representing a computation that never finishes.</source>
          <target state="translated">決して解決しない未来を作成し、決して終わらない計算を表現します。</target>
        </trans-unit>
        <trans-unit id="436c8bdec76df1112a2f44268113a4f34c8a8a35" translate="yes" xml:space="preserve">
          <source>Creates a layout by rounding the size of this layout up to a multiple of the layout's alignment.</source>
          <target state="translated">このレイアウトのサイズをレイアウトのアライメントの倍数まで丸めてレイアウトを作成します。</target>
        </trans-unit>
        <trans-unit id="50260a92d64c851dba9e3cd2c96fc0f61579a3fa" translate="yes" xml:space="preserve">
          <source>Creates a layout describing the record for &lt;code&gt;n&lt;/code&gt; instances of &lt;code&gt;self&lt;/code&gt;, with a suitable amount of padding between each to ensure that each instance is given its requested size and alignment. On success, returns &lt;code&gt;(k, offs)&lt;/code&gt; where &lt;code&gt;k&lt;/code&gt; is the layout of the array and &lt;code&gt;offs&lt;/code&gt; is the distance between the start of each element in the array.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; の &lt;code&gt;n&lt;/code&gt; 個のインスタンスのレコードを説明するレイアウトを作成し、各インスタンスの間に適切な量のパディングを使用して、各インスタンスに要求されたサイズと配置が確実に与えられるようにします。成功した場合、 &lt;code&gt;(k, offs)&lt;/code&gt; 返します。ここで、 &lt;code&gt;k&lt;/code&gt; は配列のレイアウトであり、 &lt;code&gt;offs&lt;/code&gt; は配列の各要素の開始点間の距離です。</target>
        </trans-unit>
        <trans-unit id="268f12b9c493a33dcef1cd52c4873aea2c4bfee9" translate="yes" xml:space="preserve">
          <source>Creates a layout describing the record for &lt;code&gt;n&lt;/code&gt; instances of &lt;code&gt;self&lt;/code&gt;, with no padding between each instance.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; の &lt;code&gt;n&lt;/code&gt; 個のインスタンスのレコードを説明するレイアウトを作成します。各インスタンス間にパディングはありません。</target>
        </trans-unit>
        <trans-unit id="8ef29cf4bd3ff8c9dc61d9840e7fe86d594cf7ea" translate="yes" xml:space="preserve">
          <source>Creates a layout describing the record for &lt;code&gt;self&lt;/code&gt; followed by &lt;code&gt;next&lt;/code&gt; with no additional padding between the two. Since no padding is inserted, the alignment of &lt;code&gt;next&lt;/code&gt; is irrelevant, and is not incorporated &lt;em&gt;at all&lt;/em&gt; into the resulting layout.</source>
          <target state="translated">2つの間に追加のパディングを行わずに、 &lt;code&gt;self&lt;/code&gt; それに続く &lt;code&gt;next&lt;/code&gt; レコードを説明するレイアウトを作成します。パディングが挿入されていないため、 &lt;code&gt;next&lt;/code&gt; の配置は無関係であり、結果のレイアウトにはまったく組み込ま&lt;em&gt;れ&lt;/em&gt;ません。</target>
        </trans-unit>
        <trans-unit id="b28cc5cd8d23aba4c2d3ab83f94dacdbb74a4144" translate="yes" xml:space="preserve">
          <source>Creates a layout describing the record for &lt;code&gt;self&lt;/code&gt; followed by &lt;code&gt;next&lt;/code&gt;, including any necessary padding to ensure that &lt;code&gt;next&lt;/code&gt; will be properly aligned, but &lt;em&gt;no trailing padding&lt;/em&gt;.</source>
          <target state="translated">レコードを記述するレイアウト作成 &lt;code&gt;self&lt;/code&gt; 続く &lt;code&gt;next&lt;/code&gt; ことを保証するために必要なパディングを含む、 &lt;code&gt;next&lt;/code&gt; 正しく整列されますが、&lt;em&gt;末尾パディング&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c8a339bd6044081931512d7181022dc336e0d927" translate="yes" xml:space="preserve">
          <source>Creates a layout describing the record for &lt;code&gt;self&lt;/code&gt; followed by &lt;code&gt;next&lt;/code&gt;, including any necessary padding to ensure that &lt;code&gt;next&lt;/code&gt; will be properly aligned. Note that the result layout will satisfy the alignment properties of both &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;next&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; のレコードとそれに続く &lt;code&gt;next&lt;/code&gt; レコードを説明するレイアウトを作成します。必要なパディングを含めて、 &lt;code&gt;next&lt;/code&gt; が適切に配置されるようにします。結果のレイアウトは、 &lt;code&gt;self&lt;/code&gt; と &lt;code&gt;next&lt;/code&gt; の両方の配置プロパティを満たすことに注意してください。</target>
        </trans-unit>
        <trans-unit id="e9eb164e50415b51b0271091ac7a99d5413e2a1e" translate="yes" xml:space="preserve">
          <source>Creates a layout describing the record for a &lt;code&gt;[T; n]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[T; n]&lt;/code&gt; レコードを説明するレイアウトを作成します。n]。</target>
        </trans-unit>
        <trans-unit id="389dad686e39af29b9b280293b52a42a6430962d" translate="yes" xml:space="preserve">
          <source>Creates a layout describing the record that can hold a value of the same layout as &lt;code&gt;self&lt;/code&gt;, but that also is aligned to alignment &lt;code&gt;align&lt;/code&gt; (measured in bytes).</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; と同じレイアウトの値を保持できるが、alignment &lt;code&gt;align&lt;/code&gt; （バイト単位で測定）に揃えられるレコードを記述するレイアウトを作成します。</target>
        </trans-unit>
        <trans-unit id="e588f25c4e6b7ac7ea5caf6c5e06d4755cf5af31" translate="yes" xml:space="preserve">
          <source>Creates a layout, bypassing all checks.</source>
          <target state="translated">すべてのチェックをバイパスしてレイアウトを作成します。</target>
        </trans-unit>
        <trans-unit id="2817fb61697399c19b58cca3a8fdd90cbe8f1971" translate="yes" xml:space="preserve">
          <source>Creates a mutable empty slice.</source>
          <target state="translated">変形可能な空のスライスを作成します。</target>
        </trans-unit>
        <trans-unit id="e9df76e91971de9dcb6fc67a0fae7b04f68b9134" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;a href=&quot;string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; by repeating a string &lt;code&gt;n&lt;/code&gt; times.</source>
          <target state="translated">文字列を &lt;code&gt;n&lt;/code&gt; 回繰り返すことにより、新しい&lt;a href=&quot;string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;作成します。</target>
        </trans-unit>
        <trans-unit id="31012fb6bbd1810c8b9f76097430713c7a6abb1a" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;a href=&quot;struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; by repeating a string &lt;code&gt;n&lt;/code&gt; times.</source>
          <target state="translated">文字列を &lt;code&gt;n&lt;/code&gt; 回繰り返すことにより、新しい&lt;a href=&quot;struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;作成します。</target>
        </trans-unit>
        <trans-unit id="b29497ce5a46da557b14f6b4d2ebca275af52b14" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;a href=&quot;struct.weak&quot;&gt;&lt;code&gt;Weak&lt;/code&gt;&lt;/a&gt; pointer to this allocation.</source>
          <target state="translated">この割り当てへの新しい&lt;a href=&quot;struct.weak&quot;&gt; &lt;code&gt;Weak&lt;/code&gt; &lt;/a&gt;ポインタを作成します。</target>
        </trans-unit>
        <trans-unit id="1fd7999bf71d6912e1a04411cb9e145cd825dabf" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;a href=&quot;struct.weak&quot;&gt;&lt;code&gt;Weak&lt;/code&gt;&lt;/a&gt; pointer to this value.</source>
          <target state="translated">この値への新しい&lt;a href=&quot;struct.weak&quot;&gt; &lt;code&gt;Weak&lt;/code&gt; &lt;/a&gt;ポインタを作成します。</target>
        </trans-unit>
        <trans-unit id="807ffb64a9c1d7c6b34cf14a23c5c2110d7f3f31" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt;, with the &lt;code&gt;Default&lt;/code&gt; value for &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">新しい作成 &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; と、 &lt;code&gt;Default&lt;/code&gt; の値 &lt;code&gt;T&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="99ef26d0672391b7800bf502312643fb4577ee24" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;AtomicBool&lt;/code&gt;.</source>
          <target state="translated">新しい &lt;code&gt;AtomicBool&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="65045a23e7b234e7546b04c58c4a8f40ab5f175b" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;AtomicPtr&lt;/code&gt;.</source>
          <target state="translated">新しい &lt;code&gt;AtomicPtr&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="1af905254bd28a16477b0ee056f080f37df04308" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;BufReader&amp;lt;R&amp;gt;&lt;/code&gt; with a default buffer capacity. The default is currently 8 KB, but may change in the future.</source>
          <target state="translated">デフォルトのバッファ容量で新しい &lt;code&gt;BufReader&amp;lt;R&amp;gt;&lt;/code&gt; を作成します。デフォルトは現在8KBですが、将来変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="83f093efbc0350ba55fc2e1d6b4a2a524c09471a" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;BufReader&amp;lt;R&amp;gt;&lt;/code&gt; with the specified buffer capacity.</source>
          <target state="translated">指定されたバッファ容量で新しい &lt;code&gt;BufReader&amp;lt;R&amp;gt;&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="fcf38db8656a4ba5c6c6fe72b32bd43098614713" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;BufReader&lt;/code&gt; with a default buffer capacity. The default is currently 8 KB, but may change in the future.</source>
          <target state="translated">デフォルトのバッファ容量で新しい &lt;code&gt;BufReader&lt;/code&gt; を作成します。デフォルトは現在8 KBですが、将来変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="67804ff6b85e90a2d980b3a1c2e871ccde3859fa" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;BufReader&lt;/code&gt; with the specified buffer capacity.</source>
          <target state="translated">指定されたバッファ容量で新しい &lt;code&gt;BufReader&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="f62e390375d42a44f731ae89152595f4f9af74a2" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;BufWriter&amp;lt;W&amp;gt;&lt;/code&gt; with a default buffer capacity. The default is currently 8 KB, but may change in the future.</source>
          <target state="translated">デフォルトのバッファ容量で新しい &lt;code&gt;BufWriter&amp;lt;W&amp;gt;&lt;/code&gt; を作成します。デフォルトは現在8KBですが、将来変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="0bd18eed39836994abba67796e9ca63c465a3cc2" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;BufWriter&amp;lt;W&amp;gt;&lt;/code&gt; with the specified buffer capacity.</source>
          <target state="translated">指定されたバッファ容量で新しい &lt;code&gt;BufWriter&amp;lt;W&amp;gt;&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="066e33af0aa472fa3e8c8b27730733cce1804b11" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;BufWriter&lt;/code&gt; with a default buffer capacity. The default is currently 8 KB, but may change in the future.</source>
          <target state="translated">デフォルトのバッファ容量で新しい &lt;code&gt;BufWriter&lt;/code&gt; を作成します。デフォルトは現在8 KBですが、将来変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="dda444016d344ac62e443818aad1aa9269ea0cd0" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;BufWriter&lt;/code&gt; with the specified buffer capacity.</source>
          <target state="translated">指定されたバッファ容量で新しい &lt;code&gt;BufWriter&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="ba8ad7d1fcbae32069c8b306593ac23f6cb511e4" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Cell&lt;/code&gt; containing the given value.</source>
          <target state="translated">指定された値を含む新しい &lt;code&gt;Cell&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="b9d2b6177e4e9be9aacf869587ccada30900a5cc" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;DefaultHasher&lt;/code&gt; using &lt;a href=&quot;../collections/hash_map/struct.defaulthasher#method.new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt;. See its documentation for more.</source>
          <target state="translated">新しい作成 &lt;code&gt;DefaultHasher&lt;/code&gt; 使って&lt;a href=&quot;../collections/hash_map/struct.defaulthasher#method.new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt;。詳細については、そのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="a58ce1a3743a2768136b99607cdae8b4185b440f" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;DefaultHasher&lt;/code&gt; using &lt;a href=&quot;struct.defaulthasher#method.new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt;. See its documentation for more.</source>
          <target state="translated">新しい作成 &lt;code&gt;DefaultHasher&lt;/code&gt; 使って&lt;a href=&quot;struct.defaulthasher#method.new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt;。詳細については、そのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="f304e05ff89799828ae510c8ed9b70a76d3ac86b" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;DefaultHasher&lt;/code&gt; using &lt;code&gt;new&lt;/code&gt;. See its documentation for more.</source>
          <target state="translated">新しい作成 &lt;code&gt;DefaultHasher&lt;/code&gt; 使って &lt;code&gt;new&lt;/code&gt; 。詳細については、ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="e776f772fa00078a1230fbf70cf606d2f7f7a82b" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;DefaultHasher&lt;/code&gt;.</source>
          <target state="translated">新しい &lt;code&gt;DefaultHasher&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="ac1919fbbb2fe7072f84e13a4b91b90e6d25fdc4" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Duration&lt;/code&gt; from the specified number of microseconds.</source>
          <target state="translated">指定されたマイクロ秒数から新しい &lt;code&gt;Duration&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="d1c8945480eb390fc4c3cc7d988b2e7b9adcd43a" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Duration&lt;/code&gt; from the specified number of milliseconds.</source>
          <target state="translated">指定されたミリ秒数から新しい &lt;code&gt;Duration&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="8fbbf7fd3c6c92a75e1e34b568a1b924fa36a984" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Duration&lt;/code&gt; from the specified number of nanoseconds.</source>
          <target state="translated">指定したナノ秒数から新しい &lt;code&gt;Duration&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="cfa9562be769593a7e87d38990184c91f9589a6e" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Duration&lt;/code&gt; from the specified number of seconds represented as &lt;code&gt;f32&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;f32&lt;/code&gt; で表される指定された秒数から新しい &lt;code&gt;Duration&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="47028819bc03f40c46ee37ebefa2ecf952787f7c" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Duration&lt;/code&gt; from the specified number of seconds represented as &lt;code&gt;f64&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;f64&lt;/code&gt; で表される指定された秒数から新しい &lt;code&gt;Duration&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="7e738616afd1d02fb1c01ef1c8da746fbd673198" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Duration&lt;/code&gt; from the specified number of whole seconds and additional nanoseconds.</source>
          <target state="translated">指定した整数秒と追加のナノ秒から新しい &lt;code&gt;Duration&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="587d29ed6b51190b5b14de549d69d716511e4c67" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Duration&lt;/code&gt; from the specified number of whole seconds.</source>
          <target state="translated">指定された秒数から新しい &lt;code&gt;Duration&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="cfe09547fea1dc0f13c85efa7a063cc23ea3e22e" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Duration&lt;/code&gt; that spans no time.</source>
          <target state="translated">&lt;code&gt;Duration&lt;/code&gt; をかけない新しい期間を作成します。</target>
        </trans-unit>
        <trans-unit id="df5ff87acbb972a65afaee2f4544dd49e05923a9" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;ExitStatus&lt;/code&gt; from the raw underlying &lt;code&gt;i32&lt;/code&gt; return value of a process.</source>
          <target state="translated">プロセスの基本となる生の &lt;code&gt;i32&lt;/code&gt; 戻り値から新しい &lt;code&gt;ExitStatus&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="52fe5caa89c1904f743c20af8d459d8ea0d54f66" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;ExitStatus&lt;/code&gt; from the raw underlying &lt;code&gt;i32&lt;/code&gt; return value of a process. &lt;a href=&quot;../os/unix/process/trait.exitstatusext#tymethod.from_raw&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">プロセスの基本となる生の &lt;code&gt;i32&lt;/code&gt; 戻り値から新しい &lt;code&gt;ExitStatus&lt;/code&gt; を作成します。&lt;a href=&quot;../os/unix/process/trait.exitstatusext#tymethod.from_raw&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="64d4e497a4325552204be0953e113e9c4996198e" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;ExitStatus&lt;/code&gt; from the raw underlying &lt;code&gt;u32&lt;/code&gt; return value of a process.</source>
          <target state="translated">プロセスの基本となる生の &lt;code&gt;u32&lt;/code&gt; 戻り値から新しい &lt;code&gt;ExitStatus&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="b16ec7ae2a57c52f9a63e577ed32017e5ea38296" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;ExitStatus&lt;/code&gt; from the raw underlying &lt;code&gt;u32&lt;/code&gt; return value of a process. &lt;a href=&quot;../os/windows/process/trait.exitstatusext#tymethod.from_raw&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">プロセスの基本となる生の &lt;code&gt;u32&lt;/code&gt; 戻り値から新しい &lt;code&gt;ExitStatus&lt;/code&gt; を作成します。&lt;a href=&quot;../os/windows/process/trait.exitstatusext#tymethod.from_raw&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c54c6b6e1ac99a29c5886d973030c90ecbe09703" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;File&lt;/code&gt; instance that shares the same underlying file handle as the existing &lt;code&gt;File&lt;/code&gt; instance. Reads, writes, and seeks will affect both &lt;code&gt;File&lt;/code&gt; instances simultaneously.</source>
          <target state="translated">既存の &lt;code&gt;File&lt;/code&gt; インスタンスと同じ基本ファイルハンドルを共有する新しい &lt;code&gt;File&lt;/code&gt; インスタンスを作成します。読み取り、書き込み、シークは、両方の &lt;code&gt;File&lt;/code&gt; インスタンスに同時に影響します。</target>
        </trans-unit>
        <trans-unit id="fc40d753662125fab6bff7ec77e45558fad3313e" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;IoSlice&lt;/code&gt; wrapping a byte slice.</source>
          <target state="translated">バイトスライスをラップする新しい &lt;code&gt;IoSlice&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="6262ac945fe4f065843bdc921d137c7ba882edd8" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;IoSliceMut&lt;/code&gt; wrapping a byte slice.</source>
          <target state="translated">バイトスライスをラップする新しい &lt;code&gt;IoSliceMut&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="cdba9bc8b65ba1c91c154d3143d90612e003ad88" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;LineWriter&lt;/code&gt; with a specified capacity for the internal buffer.</source>
          <target state="translated">内部バッファの容量を指定して、新しい &lt;code&gt;LineWriter&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="e0600662edab1bcab51ac0bc096522a5c92ba496" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;LineWriter&lt;/code&gt;.</source>
          <target state="translated">新しい &lt;code&gt;LineWriter&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="af68ad9875bc8f87d7804de24b784586df687e95" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; in an uninitialized state, with the memory being filled with &lt;code&gt;0&lt;/code&gt; bytes. It depends on &lt;code&gt;T&lt;/code&gt; whether that already makes for proper initialization. For example, &lt;code&gt;MaybeUninit&amp;lt;usize&amp;gt;::zeroed()&lt;/code&gt; is initialized, but &lt;code&gt;MaybeUninit&amp;lt;&amp;amp;'static i32&amp;gt;::zeroed()&lt;/code&gt; is not because references must not be null.</source>
          <target state="translated">初期化されていない状態で新しい &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; を作成します。メモリは &lt;code&gt;0&lt;/code&gt; バイトで埋められます。それがすでに適切な初期化を行うかどうかは &lt;code&gt;T&lt;/code&gt; に依存します。たとえば、 &lt;code&gt;MaybeUninit&amp;lt;usize&amp;gt;::zeroed()&lt;/code&gt; は初期化されますが、 &lt;code&gt;MaybeUninit&amp;lt;&amp;amp;'static i32&amp;gt;::zeroed()&lt;/code&gt; は、参照がnullであってはならないため初期化されません。</target>
        </trans-unit>
        <trans-unit id="892753767efd9bdc2117ddd3a626fe350155a2f7" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; in an uninitialized state.</source>
          <target state="translated">初期化されていない状態で新しい &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="20fe211b21fb0f95cc5631b2c5906351919cf296" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; initialized with the given value. It is safe to call &lt;a href=&quot;#method.assume_init&quot;&gt;&lt;code&gt;assume_init&lt;/code&gt;&lt;/a&gt; on the return value of this function.</source>
          <target state="translated">指定された値で初期化された新しい &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; 作成します。この関数の戻り値で&lt;a href=&quot;#method.assume_init&quot;&gt; &lt;code&gt;assume_init&lt;/code&gt; &lt;/a&gt;を呼び出しても安全です。</target>
        </trans-unit>
        <trans-unit id="c037622005756a3f8893da57c8c8db85d4d2339f" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; initialized with the given value. It is safe to call &lt;a href=&quot;union.maybeuninit#method.assume_init&quot;&gt;&lt;code&gt;assume_init&lt;/code&gt;&lt;/a&gt; on the return value of this function.</source>
          <target state="translated">指定された値で初期化された新しい &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; 作成します。この関数の戻り値で&lt;a href=&quot;union.maybeuninit#method.assume_init&quot;&gt; &lt;code&gt;assume_init&lt;/code&gt; &lt;/a&gt;を呼び出しても安全です。</target>
        </trans-unit>
        <trans-unit id="b792bb4fa6b2af9606db216f84b9e37a8238e7e9" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;NonNull&lt;/code&gt; if &lt;code&gt;ptr&lt;/code&gt; is non-null.</source>
          <target state="translated">&lt;code&gt;ptr&lt;/code&gt; がnullでない場合、新しい &lt;code&gt;NonNull&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="6d95c9c1a436aaa0561205a0afb98c6b8948e877" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;NonNull&lt;/code&gt; that is dangling, but well-aligned.</source>
          <target state="translated">ぶら下がっているが適切に調整された新しい &lt;code&gt;NonNull&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="d88819d9f52fd4c66f2d811b6b36f7817fc8811e" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;NonNull&lt;/code&gt;.</source>
          <target state="translated">新しい &lt;code&gt;NonNull&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="57d86a84e8f9fc81ee203b6616499b4d2e65244a" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Once&lt;/code&gt; value.</source>
          <target state="translated">新しい &lt;code&gt;Once&lt;/code&gt; 値を作成します。</target>
        </trans-unit>
        <trans-unit id="bb7591bd908639c4722b535363e45ec6207c325b" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;OsString&lt;/code&gt; with the given capacity.</source>
          <target state="translated">指定された容量で新しい &lt;code&gt;OsString&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="919cf27d5e403554cee61d10d7b01fa674a86681" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;PathBuf&lt;/code&gt; with a given capacity used to create the internal &lt;a href=&quot;../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;../ffi/struct.osstring#method.with_capacity&quot;&gt;&lt;code&gt;with_capacity&lt;/code&gt;&lt;/a&gt; defined on &lt;a href=&quot;../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">内部&lt;a href=&quot;../ffi/struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; の&lt;/a&gt;作成に使用される指定された容量で新しい &lt;code&gt;PathBuf&lt;/code&gt; を作成します。&lt;a href=&quot;../ffi/struct.osstring#method.with_capacity&quot;&gt; &lt;code&gt;with_capacity&lt;/code&gt; &lt;/a&gt;定義された&lt;a href=&quot;../ffi/struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4679da04f2e5f846a389076a683398439f2c0e56" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;RawWaker&lt;/code&gt; from the provided &lt;code&gt;data&lt;/code&gt; pointer and &lt;code&gt;vtable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RawWaker&lt;/code&gt; れた &lt;code&gt;data&lt;/code&gt; ポインターと &lt;code&gt;vtable&lt;/code&gt; から新しいRawWakerを作成します。</target>
        </trans-unit>
        <trans-unit id="a801aae93956af0cf79382be3b6ec17384d1028d" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;RawWakerVTable&lt;/code&gt; from the provided &lt;code&gt;clone&lt;/code&gt;, &lt;code&gt;wake&lt;/code&gt;, &lt;code&gt;wake_by_ref&lt;/code&gt;, and &lt;code&gt;drop&lt;/code&gt; functions.</source>
          <target state="translated">提供された &lt;code&gt;clone&lt;/code&gt; 、 &lt;code&gt;wake&lt;/code&gt; 、 &lt;code&gt;wake_by_ref&lt;/code&gt; 、および &lt;code&gt;drop&lt;/code&gt; 関数から新しい &lt;code&gt;RawWakerVTable&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="2e1c3db31c2d4985356e904afc90ec7df1984b0d" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt;, with the &lt;code&gt;Default&lt;/code&gt; value for &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">新しい作成します &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; と、 &lt;code&gt;Default&lt;/code&gt; の値 &lt;code&gt;T&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dee07ff67ad42b50be68a36af39da71db45883d5" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;RefCell&lt;/code&gt; containing &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RefCell&lt;/code&gt; を含む新しいRefCellを作成し &lt;code&gt;value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="47dfe3dbe40a838fcde041e915587b61249f1c8f" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;RwLock&amp;lt;T&amp;gt;&lt;/code&gt;, with the &lt;code&gt;Default&lt;/code&gt; value for T.</source>
          <target state="translated">&lt;code&gt;RwLock&amp;lt;T&amp;gt;&lt;/code&gt; の &lt;code&gt;Default&lt;/code&gt; 値を使用して、新しいRwLock &amp;lt;T&amp;gt;を作成します。</target>
        </trans-unit>
        <trans-unit id="2fab82ed27b80c732d845b7856fca2db0a142b3a" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;SipHasher&lt;/code&gt; with the two initial keys set to 0.</source>
          <target state="translated">2つの初期キーを0に設定して、新しい &lt;code&gt;SipHasher&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="f27a93e3bce25398c6aeabaad6c8fbb1d985fd09" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;String&lt;/code&gt; from a length, capacity, and pointer.</source>
          <target state="translated">長さ、容量、およびポインタから新しい &lt;code&gt;String&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="e0e9a8184f275034e8388bfc2db4ef549f7b1ab9" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;TcpListener&lt;/code&gt; which will be bound to the specified address.</source>
          <target state="translated">指定されたアドレスにバインドされる新しい &lt;code&gt;TcpListener&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="21ffd3461c97ddd32b280b1e4bdabddb6aba4c3a" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;UnixListener&lt;/code&gt; bound to the specified socket.</source>
          <target state="translated">指定されたソケットにバインドされた新しい &lt;code&gt;UnixListener&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="c37e43132018207bc1c55fc5e89a8df22def41d8" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Waker&lt;/code&gt; from &lt;a href=&quot;struct.rawwaker&quot;&gt;&lt;code&gt;RawWaker&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;struct.rawwaker&quot;&gt; &lt;code&gt;RawWaker&lt;/code&gt; &lt;/a&gt;から新しい &lt;code&gt;Waker&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="2c3556ff08f7d3933d722496aa3907894d0a4865" translate="yes" xml:space="preserve">
          <source>Creates a new C-compatible string from a container of bytes.</source>
          <target state="translated">バイトのコンテナから新しいC互換文字列を作成します。</target>
        </trans-unit>
        <trans-unit id="0cbea299bfe056f4851f6faaaa5b6f7f01792572" translate="yes" xml:space="preserve">
          <source>Creates a new I/O error from a known kind of error as well as an arbitrary error payload.</source>
          <target state="translated">既知の種類のエラーと任意のエラーペイロードから新しいI/Oエラーを作成します。</target>
        </trans-unit>
        <trans-unit id="7e3f58d1058d0a8d5c466171c49802144489d65c" translate="yes" xml:space="preserve">
          <source>Creates a new I/O object from the given raw socket.</source>
          <target state="translated">与えられた生のソケットから新しいI/Oオブジェクトを作成します。</target>
        </trans-unit>
        <trans-unit id="b73dbc9804f1425c71b1bc03294f1ad048bffb01" translate="yes" xml:space="preserve">
          <source>Creates a new I/O object from the given raw socket. &lt;a href=&quot;../os/windows/io/trait.fromrawsocket#tymethod.from_raw_socket&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">指定されたrawソケットから新しいI / Oオブジェクトを作成します。&lt;a href=&quot;../os/windows/io/trait.fromrawsocket#tymethod.from_raw_socket&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="220d966c8b9141dbf040a15d6c27fa1da0d0e577" translate="yes" xml:space="preserve">
          <source>Creates a new IPv4 address from four eight-bit octets.</source>
          <target state="translated">4つの8ビットオクテットから新しいIPv4アドレスを作成します。</target>
        </trans-unit>
        <trans-unit id="5d1f2ebbd78b1218eacbcd32b65130482713b5f6" translate="yes" xml:space="preserve">
          <source>Creates a new IPv6 address from eight 16-bit segments.</source>
          <target state="translated">8つの16ビットセグメントから新しいIPv6アドレスを作成します。</target>
        </trans-unit>
        <trans-unit id="dd4a5e1c955c3d29d62b1bf54c30c12af0f33b88" translate="yes" xml:space="preserve">
          <source>Creates a new asynchronous channel, returning the sender/receiver halves. All data sent on the &lt;a href=&quot;struct.sender&quot;&gt;&lt;code&gt;Sender&lt;/code&gt;&lt;/a&gt; will become available on the &lt;a href=&quot;struct.receiver&quot;&gt;&lt;code&gt;Receiver&lt;/code&gt;&lt;/a&gt; in the same order as it was sent, and no &lt;a href=&quot;struct.sender#method.send&quot;&gt;&lt;code&gt;send&lt;/code&gt;&lt;/a&gt; will block the calling thread (this channel has an &quot;infinite buffer&quot;, unlike &lt;a href=&quot;fn.sync_channel&quot;&gt;&lt;code&gt;sync_channel&lt;/code&gt;&lt;/a&gt;, which will block after its buffer limit is reached). &lt;a href=&quot;struct.receiver#method.recv&quot;&gt;&lt;code&gt;recv&lt;/code&gt;&lt;/a&gt; will block until a message is available.</source>
          <target state="translated">新しい非同期チャネルを作成し、送信側/受信側の半分を返します。で送信されたすべてのデータ&lt;a href=&quot;struct.sender&quot;&gt; &lt;code&gt;Sender&lt;/code&gt; が&lt;/a&gt;で利用可能になります&lt;a href=&quot;struct.receiver&quot;&gt; &lt;code&gt;Receiver&lt;/code&gt; &lt;/a&gt;、それが送信されたのと同じ順序で、そして何の&lt;a href=&quot;struct.sender#method.send&quot;&gt; &lt;code&gt;send&lt;/code&gt; &lt;/a&gt;呼び出しスレッドをブロックしません（このチャンネルは、「無限のバッファ」とは異なり、持ってい&lt;a href=&quot;fn.sync_channel&quot;&gt; &lt;code&gt;sync_channel&lt;/code&gt; &lt;/a&gt;そのバッファ制限があるの後にブロックされます、到達した）。メッセージが利用可能になるまで、&lt;a href=&quot;struct.receiver#method.recv&quot;&gt; &lt;code&gt;recv&lt;/code&gt; &lt;/a&gt;はブロックします。</target>
        </trans-unit>
        <trans-unit id="03b6a1d2146db5e3bb25371518d63e22c3bcf186" translate="yes" xml:space="preserve">
          <source>Creates a new atomic integer.</source>
          <target state="translated">新しい原子状整数を作成します。</target>
        </trans-unit>
        <trans-unit id="6ea4f763ed1c057748bf8280371702fcd8506516" translate="yes" xml:space="preserve">
          <source>Creates a new barrier that can block a given number of threads.</source>
          <target state="translated">指定した数のスレッドをブロックできる新しいバリアを作成します。</target>
        </trans-unit>
        <trans-unit id="f556969e861a3ae31fffd9518d6ddb7677807736" translate="yes" xml:space="preserve">
          <source>Creates a new condition variable which is ready to be waited on and notified.</source>
          <target state="translated">待機して通知される準備ができている新しい条件変数を作成します。</target>
        </trans-unit>
        <trans-unit id="5e91e4d581643d3fe8e42947d614855380ad9e9c" translate="yes" xml:space="preserve">
          <source>Creates a new cursor wrapping the provided underlying in-memory buffer.</source>
          <target state="translated">提供されたメモリ内バッファをラップした新しいカーソルを作成します。</target>
        </trans-unit>
        <trans-unit id="93fc42f3216ef385e8f760e8392d0fd62480a47f" translate="yes" xml:space="preserve">
          <source>Creates a new directory symlink on the filesystem.</source>
          <target state="translated">ファイルシステム上に新しいディレクトリシンボリックリンクを作成します。</target>
        </trans-unit>
        <trans-unit id="d54fc28f0bb3c45b0bcb0838df40649a39736256" translate="yes" xml:space="preserve">
          <source>Creates a new empty &lt;code&gt;String&lt;/code&gt; with a particular capacity.</source>
          <target state="translated">特定の容量で新しい空の &lt;code&gt;String&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="ee34e5abab2e9e382cad8495fb44b265f0035951" translate="yes" xml:space="preserve">
          <source>Creates a new empty &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">新しい空の &lt;code&gt;String&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="5279398aa560ab4e4ec49bd6fd4bf7f1795d0a76" translate="yes" xml:space="preserve">
          <source>Creates a new empty cell.</source>
          <target state="translated">新しい空のセルを作成します。</target>
        </trans-unit>
        <trans-unit id="c3b38006c9c30bb30f2c0885562c32a6e57e84c2" translate="yes" xml:space="preserve">
          <source>Creates a new empty hash set which will use the given hasher to hash keys.</source>
          <target state="translated">新しい空のハッシュセットを作成し、与えられたハッシャーを使用してキーをハッシュします。</target>
        </trans-unit>
        <trans-unit id="34084f685b64e1a07dd749cda47df5bb43d3f2b9" translate="yes" xml:space="preserve">
          <source>Creates a new file and write bytes to it (you can also use &lt;a href=&quot;fn.write&quot;&gt;&lt;code&gt;write()&lt;/code&gt;&lt;/a&gt;):</source>
          <target state="translated">新しいファイルを作成し、それにバイトを書き込みます（&lt;a href=&quot;fn.write&quot;&gt; &lt;code&gt;write()&lt;/code&gt; を&lt;/a&gt;使用することもできます）：</target>
        </trans-unit>
        <trans-unit id="4a696c653995891396ceff7bdc0cedf665d4d7b8" translate="yes" xml:space="preserve">
          <source>Creates a new file and write bytes to it:</source>
          <target state="translated">新しいファイルを作成し、そのファイルにバイトを書き込みます。</target>
        </trans-unit>
        <trans-unit id="4e9dedddb8cb32ff135f15d112729467982b870b" translate="yes" xml:space="preserve">
          <source>Creates a new file symbolic link on the filesystem.</source>
          <target state="translated">ファイルシステム上に新しいファイルシンボリックリンクを作成します。</target>
        </trans-unit>
        <trans-unit id="95b5c84d202b8a1e904466b47cda004bbc6bd3bc" translate="yes" xml:space="preserve">
          <source>Creates a new hard link on the filesystem.</source>
          <target state="translated">ファイルシステム上に新しいハードリンクを作成します。</target>
        </trans-unit>
        <trans-unit id="e6be82de9e5f4d29f635b099d6dd669a2a38cc45" translate="yes" xml:space="preserve">
          <source>Creates a new hasher.</source>
          <target state="translated">新しいハッシャーを作成します。</target>
        </trans-unit>
        <trans-unit id="a7c9490f7ef201dae9d1f71e819968ed104cfd1e" translate="yes" xml:space="preserve">
          <source>Creates a new hasher. &lt;a href=&quot;../../hash/trait.buildhasher#tymethod.build_hasher&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">新しいハッシュを作成します。&lt;a href=&quot;../../hash/trait.buildhasher#tymethod.build_hasher&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0a98ba64e6434904541a1b801133b20bbfe38ebe" translate="yes" xml:space="preserve">
          <source>Creates a new hasher. &lt;a href=&quot;trait.buildhasher#tymethod.build_hasher&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">新しいハッシュを作成します。&lt;a href=&quot;trait.buildhasher#tymethod.build_hasher&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1dfe1094597c49e654261f7f451a7a06110261fc" translate="yes" xml:space="preserve">
          <source>Creates a new inclusive range. Equivalent to writing &lt;code&gt;start..=end&lt;/code&gt;.</source>
          <target state="translated">新しい包含範囲を作成します。 &lt;code&gt;start..=end&lt;/code&gt; と書くのと同じです。</target>
        </trans-unit>
        <trans-unit id="58821b72e2e51c721b3c6db984b7740ca5dab0d1" translate="yes" xml:space="preserve">
          <source>Creates a new independently owned handle to the underlying socket.</source>
          <target state="translated">ソケットに独立して所有する新しいハンドルを作成します。</target>
        </trans-unit>
        <trans-unit id="2ae1d7e669b71e799ba5a526c2ef71d7ca7a26e1" translate="yes" xml:space="preserve">
          <source>Creates a new instance of &lt;code&gt;Permissions&lt;/code&gt; from the given set of Unix permission bits.</source>
          <target state="translated">指定されたUnix許可ビットのセットから &lt;code&gt;Permissions&lt;/code&gt; 新しいインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="5285aed433dfd994d5e278468b056c8440fdcf1f" translate="yes" xml:space="preserve">
          <source>Creates a new instance of &lt;code&gt;Permissions&lt;/code&gt; from the given set of Unix permission bits. &lt;a href=&quot;../os/unix/fs/trait.permissionsext#tymethod.from_mode&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">指定されたUnix許可ビットのセットから &lt;code&gt;Permissions&lt;/code&gt; 新しいインスタンスを作成します。&lt;a href=&quot;../os/unix/fs/trait.permissionsext#tymethod.from_mode&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fe1251c2100aa748fd7d27dcd0eea8106d838663" translate="yes" xml:space="preserve">
          <source>Creates a new instance of an &lt;a href=&quot;struct.error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; from a particular OS error code.</source>
          <target state="translated">特定のOSエラーコードから&lt;a href=&quot;struct.error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;新しいインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="7b7dde0f15dbe2f13852b6e6fe7adfa5a774e541" translate="yes" xml:space="preserve">
          <source>Creates a new instance of an &lt;code&gt;Error&lt;/code&gt; from a particular OS error code.</source>
          <target state="translated">特定のOSエラーコードから &lt;code&gt;Error&lt;/code&gt; 新しいインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="090ec365f8526c95fee09bbe70cbe5272537662c" translate="yes" xml:space="preserve">
          <source>Creates a new instance of an &lt;code&gt;RwLock&amp;lt;T&amp;gt;&lt;/code&gt; which is unlocked.</source>
          <target state="translated">ロックされていない &lt;code&gt;RwLock&amp;lt;T&amp;gt;&lt;/code&gt; 新しいインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="0934f187052c5838f578d7b8acc86ca34bb0062e" translate="yes" xml:space="preserve">
          <source>Creates a new instance of an &lt;code&gt;RwLock&amp;lt;T&amp;gt;&lt;/code&gt; which is unlocked. This is equivalent to &lt;a href=&quot;../sync/struct.rwlock#method.new&quot;&gt;&lt;code&gt;RwLock::new&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ロックされていない &lt;code&gt;RwLock&amp;lt;T&amp;gt;&lt;/code&gt; 新しいインスタンスを作成します。これは&lt;a href=&quot;../sync/struct.rwlock#method.new&quot;&gt; &lt;code&gt;RwLock::new&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="9b9c1501e6d1d498c33d95dd7a3190d2bb32ce34" translate="yes" xml:space="preserve">
          <source>Creates a new instance of an &lt;code&gt;RwLock&amp;lt;T&amp;gt;&lt;/code&gt; which is unlocked. This is equivalent to &lt;a href=&quot;struct.rwlock#method.new&quot;&gt;&lt;code&gt;RwLock::new&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ロックされていない &lt;code&gt;RwLock&amp;lt;T&amp;gt;&lt;/code&gt; 新しいインスタンスを作成します。これは&lt;a href=&quot;struct.rwlock#method.new&quot;&gt; &lt;code&gt;RwLock::new&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="2e1570031c5b061e9cadc423d1c08e4f3f6704fc" translate="yes" xml:space="preserve">
          <source>Creates a new iterator over the given &lt;code&gt;array&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;array&lt;/code&gt; 上に新しいイテレータを作成します。</target>
        </trans-unit>
        <trans-unit id="98a01a4e76fd4ab98461fa1e8e27858e43860d30" translate="yes" xml:space="preserve">
          <source>Creates a new iterator that endlessly repeats a single element.</source>
          <target state="translated">1つの要素を無限に繰り返す新しいイテレータを作成します。</target>
        </trans-unit>
        <trans-unit id="3d2b90314fbe083a9e4473790c7183aaa20791e5" translate="yes" xml:space="preserve">
          <source>Creates a new iterator that repeats elements of type &lt;code&gt;A&lt;/code&gt; endlessly by applying the provided closure, the repeater, &lt;code&gt;F: FnMut() -&amp;gt; A&lt;/code&gt;.</source>
          <target state="translated">提供されたクロージャー、リピーター &lt;code&gt;F: FnMut() -&amp;gt; A&lt;/code&gt; 適用することにより、タイプ &lt;code&gt;A&lt;/code&gt; の要素を無限に繰り返す新しいイテレーターを作成します。</target>
        </trans-unit>
        <trans-unit id="2afdd5b900c10a328e99287fde0c5cc079543868" translate="yes" xml:space="preserve">
          <source>Creates a new iterator where each iteration calls the provided closure &lt;code&gt;F: FnMut() -&amp;gt; Option&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">各反復が提供されたクロージャー &lt;code&gt;F: FnMut() -&amp;gt; Option&amp;lt;T&amp;gt;&lt;/code&gt; 呼び出す新しいイテレーターを作成します。</target>
        </trans-unit>
        <trans-unit id="40f97e135238d44119ad81ac9e7fef55633480eb" translate="yes" xml:space="preserve">
          <source>Creates a new iterator where each successive item is computed based on the preceding one.</source>
          <target state="translated">新しいイテレータを作成し,連続する各項目が前の項目に基づいて計算されます.</target>
        </trans-unit>
        <trans-unit id="b76a9ceabae2fbc1adc202b1327cf15fb1ff69e2" translate="yes" xml:space="preserve">
          <source>Creates a new lazy value using &lt;code&gt;Default&lt;/code&gt; as the initializing function.</source>
          <target state="translated">初期化関数として &lt;code&gt;Default&lt;/code&gt; を使用して、新しい遅延値を作成します。</target>
        </trans-unit>
        <trans-unit id="6f1879fdd6701d2b6bf908372ce63819c4bc2b54" translate="yes" xml:space="preserve">
          <source>Creates a new lazy value with the given initializing function.</source>
          <target state="translated">与えられた初期化関数で新しい遅延値を作成します。</target>
        </trans-unit>
        <trans-unit id="9a4b55ded306ae8c7bdb808a89b4823992e5a21b" translate="yes" xml:space="preserve">
          <source>Creates a new mutex in an unlocked state ready for use.</source>
          <target state="translated">使用可能なアンロック状態の新しいミューテックスを作成します。</target>
        </trans-unit>
        <trans-unit id="32fe128c930c0a8e00a665887e0b53d682363e65" translate="yes" xml:space="preserve">
          <source>Creates a new mutex in an unlocked state ready for use. This is equivalent to &lt;a href=&quot;../sync/struct.mutex#method.new&quot;&gt;&lt;code&gt;Mutex::new&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ロック解除された状態で新しいmutexを作成し、使用できるようにします。これは&lt;a href=&quot;../sync/struct.mutex#method.new&quot;&gt; &lt;code&gt;Mutex::new&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="406da34a5c1ad1ee8dc88e61a792d5d86cf63dcf" translate="yes" xml:space="preserve">
          <source>Creates a new mutex in an unlocked state ready for use. This is equivalent to &lt;a href=&quot;struct.mutex#method.new&quot;&gt;&lt;code&gt;Mutex::new&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ロック解除された状態で新しいmutexを作成し、使用できるようにします。これは&lt;a href=&quot;struct.mutex#method.new&quot;&gt; &lt;code&gt;Mutex::new&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="fb2aab23d519b404b4017f03e7d5bfdff9d42377" translate="yes" xml:space="preserve">
          <source>Creates a new set of options with default mode/security settings for all platforms and also non-recursive.</source>
          <target state="translated">すべてのプラットフォームのデフォルトモード/セキュリティ設定と再帰的でないオプションの新しいセットを作成します。</target>
        </trans-unit>
        <trans-unit id="3a3300a594f2785c511d931a82dd7b8d76fcd7a1" translate="yes" xml:space="preserve">
          <source>Creates a new socket address from an &lt;a href=&quot;enum.ipaddr&quot;&gt;IP address&lt;/a&gt; and a port number.</source>
          <target state="translated">&lt;a href=&quot;enum.ipaddr&quot;&gt;IPアドレス&lt;/a&gt;とポート番号から新しいソケットアドレスを作成します。</target>
        </trans-unit>
        <trans-unit id="78e0590606924b218204149db86496368317d073" translate="yes" xml:space="preserve">
          <source>Creates a new socket address from an &lt;a href=&quot;struct.ipv4addr&quot;&gt;&lt;code&gt;IPv4&lt;/code&gt; address&lt;/a&gt; and a port number.</source>
          <target state="translated">&lt;a href=&quot;struct.ipv4addr&quot;&gt; &lt;code&gt;IPv4&lt;/code&gt; アドレス&lt;/a&gt;とポート番号から新しいソケットアドレスを作成します。</target>
        </trans-unit>
        <trans-unit id="122f8cd0e13fae2afa078b3d7723c6dca46bcec5" translate="yes" xml:space="preserve">
          <source>Creates a new socket address from an &lt;a href=&quot;struct.ipv4addr&quot;&gt;IPv4 address&lt;/a&gt; and a port number.</source>
          <target state="translated">&lt;a href=&quot;struct.ipv4addr&quot;&gt;IPv4アドレス&lt;/a&gt;とポート番号から新しいソケットアドレスを作成します。</target>
        </trans-unit>
        <trans-unit id="0741f9c15cc68b029b075a74d6dcd5e904a91af8" translate="yes" xml:space="preserve">
          <source>Creates a new socket address from an &lt;a href=&quot;struct.ipv6addr&quot;&gt;&lt;code&gt;IPv6&lt;/code&gt; address&lt;/a&gt;, a 16-bit port number, and the &lt;code&gt;flowinfo&lt;/code&gt; and &lt;code&gt;scope_id&lt;/code&gt; fields.</source>
          <target state="translated">&lt;a href=&quot;struct.ipv6addr&quot;&gt; &lt;code&gt;IPv6&lt;/code&gt; アドレス&lt;/a&gt;、16ビットのポート番号、および &lt;code&gt;flowinfo&lt;/code&gt; フィールドと &lt;code&gt;scope_id&lt;/code&gt; フィールドから新しいソケットアドレスを作成します。</target>
        </trans-unit>
        <trans-unit id="2c06bb4dc3ca07f1c78c2f7867c71b913f71e6d0" translate="yes" xml:space="preserve">
          <source>Creates a new socket address from an &lt;a href=&quot;struct.ipv6addr&quot;&gt;IPv6 address&lt;/a&gt;, a 16-bit port number, and the &lt;code&gt;flowinfo&lt;/code&gt; and &lt;code&gt;scope_id&lt;/code&gt; fields.</source>
          <target state="translated">&lt;a href=&quot;struct.ipv6addr&quot;&gt;IPv6アドレス&lt;/a&gt;、16ビットのポート番号、 &lt;code&gt;flowinfo&lt;/code&gt; および &lt;code&gt;scope_id&lt;/code&gt; フィールドから新しいソケットアドレスを作成します。</target>
        </trans-unit>
        <trans-unit id="f78961c1b14dec5658f6038a06ead656867dfe98" translate="yes" xml:space="preserve">
          <source>Creates a new symbolic link on the filesystem.</source>
          <target state="translated">ファイルシステム上に新しいシンボリックリンクを作成します。</target>
        </trans-unit>
        <trans-unit id="6c9cbe4d5cfacba596243be7d4deb4fbb32acb9a" translate="yes" xml:space="preserve">
          <source>Creates a new synchronous, bounded channel. All data sent on the &lt;a href=&quot;struct.syncsender&quot;&gt;&lt;code&gt;SyncSender&lt;/code&gt;&lt;/a&gt; will become available on the &lt;a href=&quot;struct.receiver&quot;&gt;&lt;code&gt;Receiver&lt;/code&gt;&lt;/a&gt; in the same order as it was sent. Like asynchronous &lt;a href=&quot;fn.channel&quot;&gt;&lt;code&gt;channel&lt;/code&gt;&lt;/a&gt;s, the &lt;a href=&quot;struct.receiver&quot;&gt;&lt;code&gt;Receiver&lt;/code&gt;&lt;/a&gt; will block until a message becomes available. &lt;code&gt;sync_channel&lt;/code&gt; differs greatly in the semantics of the sender, however.</source>
          <target state="translated">新しい同期境界チャネルを作成します。&lt;a href=&quot;struct.syncsender&quot;&gt; &lt;code&gt;SyncSender&lt;/code&gt; で&lt;/a&gt;送信されたすべてのデータは、送信されたのと同じ順序で&lt;a href=&quot;struct.receiver&quot;&gt; &lt;code&gt;Receiver&lt;/code&gt; &lt;/a&gt;で使用できるようになります。非同期&lt;a href=&quot;fn.channel&quot;&gt; &lt;code&gt;channel&lt;/code&gt; &lt;/a&gt;と同様に、&lt;a href=&quot;struct.receiver&quot;&gt; &lt;code&gt;Receiver&lt;/code&gt; &lt;/a&gt;はメッセージが利用可能になるまでブロックします。 &lt;code&gt;sync_channel&lt;/code&gt; は送信者のセマンティクスが大きく異なります。</target>
        </trans-unit>
        <trans-unit id="21f6de81451ef0d17f95f7f4106efa09af7b48a7" translate="yes" xml:space="preserve">
          <source>Creates a new, empty directory at the provided path</source>
          <target state="translated">指定したパスに新しい空のディレクトリを作成します。</target>
        </trans-unit>
        <trans-unit id="a678eb20d24295ae70f0dbd27a83022d13de450e" translate="yes" xml:space="preserve">
          <source>Creates a non-null raw slice from a thin pointer and a length.</source>
          <target state="translated">薄いポインタと長さから非 null の生のスライスを作成します。</target>
        </trans-unit>
        <trans-unit id="945f3243b2c22d6f4dd9519a5747f22f3750d6e6" translate="yes" xml:space="preserve">
          <source>Creates a non-zero if the given value is not zero.</source>
          <target state="translated">与えられた値がゼロでない場合、ゼロ以外の値を作成します。</target>
        </trans-unit>
        <trans-unit id="5fa836ae5c5f92c449d789f1edbf09aa1933a522" translate="yes" xml:space="preserve">
          <source>Creates a non-zero without checking the value.</source>
          <target state="translated">値をチェックせずにゼロ以外の値を作成します。</target>
        </trans-unit>
        <trans-unit id="49f6b0f135c5a8c426aae0ce2b21e7bdfc524a21" translate="yes" xml:space="preserve">
          <source>Creates a null &lt;code&gt;AtomicPtr&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">null &lt;code&gt;AtomicPtr&amp;lt;T&amp;gt;&lt;/code&gt; 作成します。</target>
        </trans-unit>
        <trans-unit id="deca466084a72d05d7972440c285e92d3c2d4c2a" translate="yes" xml:space="preserve">
          <source>Creates a null mutable raw pointer.</source>
          <target state="translated">ヌルの変異可能な生ポインタを作成します。</target>
        </trans-unit>
        <trans-unit id="0972c921b1754b1fb8e93881db1741de7c8b4f23" translate="yes" xml:space="preserve">
          <source>Creates a null raw pointer.</source>
          <target state="translated">ヌルの生ポインタを作成します。</target>
        </trans-unit>
        <trans-unit id="4d6345617a21947f2dd585db53e034aff08666c8" translate="yes" xml:space="preserve">
          <source>Creates a raw entry builder for the HashMap.</source>
          <target state="translated">HashMap用の生エントリビルダを作成します。</target>
        </trans-unit>
        <trans-unit id="3c2f1cbf1d8c5719266c60d18a8325c2e105eab0" translate="yes" xml:space="preserve">
          <source>Creates a raw immutable entry builder for the HashMap.</source>
          <target state="translated">HashMap用の生の不変エントリビルダを作成します。</target>
        </trans-unit>
        <trans-unit id="a31ea57d2a8983589bf14d88133419ec5560b9ec" translate="yes" xml:space="preserve">
          <source>Creates a splicing iterator that replaces the specified range in the vector with the given &lt;code&gt;replace_with&lt;/code&gt; iterator and yields the removed items. &lt;code&gt;replace_with&lt;/code&gt; does not need to be the same length as &lt;code&gt;range&lt;/code&gt;.</source>
          <target state="translated">ベクトルの指定された範囲を指定された &lt;code&gt;replace_with&lt;/code&gt; イテレーターで置き換え、削除された項目を生成するスプライシングイテレーターを作成します。 &lt;code&gt;replace_with&lt;/code&gt; は &lt;code&gt;range&lt;/code&gt; と同じ長さである必要はありません。</target>
        </trans-unit>
        <trans-unit id="afcc57804a946c4d33c3d361e9c455c47ae9cb43" translate="yes" xml:space="preserve">
          <source>Creates a string slice from another string slice, bypassing safety checks.</source>
          <target state="translated">安全チェックをバイパスして、別の文字列スライスから文字列スライスを作成します。</target>
        </trans-unit>
        <trans-unit id="60bc83bd88544322fc213fb439f928e5a2145261" translate="yes" xml:space="preserve">
          <source>Creates a string slice from another string slice, bypassing safety checks. This is generally not recommended, use with caution! For a safe alternative see &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../ops/trait.indexmut&quot;&gt;&lt;code&gt;IndexMut&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">安全性チェックをバイパスして、別の文字列スライスから文字列スライスを作成します。これは一般的にはお勧めできません。注意して使用してください。安全な代替手段については、&lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../ops/trait.indexmut&quot;&gt; &lt;code&gt;IndexMut&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3646bd3738d7152ad6c8e17b557c9675d1890f47" translate="yes" xml:space="preserve">
          <source>Creates a string slice from another string slice, bypassing safety checks. This is generally not recommended, use with caution! For a safe alternative see &lt;a href=&quot;primitive.str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;ops/trait.indexmut&quot;&gt;&lt;code&gt;IndexMut&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">安全チェックをバイパスして、別の文字列スライスから文字列スライスを作成します。これは一般的には推奨されません。注意して使用してください！安全な代替案については、&lt;a href=&quot;primitive.str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;ops/trait.indexmut&quot;&gt; &lt;code&gt;IndexMut&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="0ffd3724d14d9663dd4dd20bb79f46768128de94" translate="yes" xml:space="preserve">
          <source>Creates a value from an iterator.</source>
          <target state="translated">イテレータから値を作成します。</target>
        </trans-unit>
        <trans-unit id="86b45d723ada6032ddda61cb4075fe4aa6481503" translate="yes" xml:space="preserve">
          <source>Creates a value from an iterator. &lt;a href=&quot;../../iter/trait.fromiterator#tymethod.from_iter&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">イテレータから値を作成します。&lt;a href=&quot;../../iter/trait.fromiterator#tymethod.from_iter&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b460defa0cfe89fc45b1019f70c0de532f4665e7" translate="yes" xml:space="preserve">
          <source>Creates a value from an iterator. &lt;a href=&quot;../iter/trait.fromiterator#tymethod.from_iter&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">イテレータから値を作成します。&lt;a href=&quot;../iter/trait.fromiterator#tymethod.from_iter&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="68ead759474d50aa9af7cd8a9bb5d6c8b267d451" translate="yes" xml:space="preserve">
          <source>Creates a value from an iterator. &lt;a href=&quot;iter/trait.fromiterator#tymethod.from_iter&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">イテレータから値を作成します。&lt;a href=&quot;iter/trait.fromiterator#tymethod.from_iter&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d6bf095f2992debd28c7dd9b9615a3e68c8b76bb" translate="yes" xml:space="preserve">
          <source>Creates a value initialized to zero.</source>
          <target state="translated">ゼロに初期化された値を作成します。</target>
        </trans-unit>
        <trans-unit id="a74aca8e3aab96aec6f571ad85233674581c4e05" translate="yes" xml:space="preserve">
          <source>Creates a value whose bytes are all zero.</source>
          <target state="translated">バイトがすべてゼロの値を作成します。</target>
        </trans-unit>
        <trans-unit id="380f1574904b16455bbeab5eb0b571ad6332ee78" translate="yes" xml:space="preserve">
          <source>Creates a vector by repeating a slice &lt;code&gt;n&lt;/code&gt; times.</source>
          <target state="translated">スライスを &lt;code&gt;n&lt;/code&gt; 回繰り返すことによりベクトルを作成します。</target>
        </trans-unit>
        <trans-unit id="275bac338dcc2aef63e43260859dad33e53cca0b" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;../../../ffi/struct.osstr&quot;&gt;&lt;code&gt;OsStr&lt;/code&gt;&lt;/a&gt; from a byte slice.</source>
          <target state="translated">バイトスライスから&lt;a href=&quot;../../../ffi/struct.osstr&quot;&gt; &lt;code&gt;OsStr&lt;/code&gt; &lt;/a&gt;を作成します。</target>
        </trans-unit>
        <trans-unit id="be1b3f7ab07e5ef5645e313a90eae6b95bf029e4" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;../../../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt; from a byte vector.</source>
          <target state="translated">バイトベクトルから&lt;a href=&quot;../../../ffi/struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt;を作成します。</target>
        </trans-unit>
        <trans-unit id="835a2d553f804f4d9e5b619b5a426ccb3d1be939" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;struct.osstr&quot;&gt;&lt;code&gt;OsStr&lt;/code&gt;&lt;/a&gt; from a byte slice. &lt;a href=&quot;../os/unix/ffi/trait.osstrext#tymethod.from_bytes&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">バイトスライスから&lt;a href=&quot;struct.osstr&quot;&gt; &lt;code&gt;OsStr&lt;/code&gt; &lt;/a&gt;を作成します。&lt;a href=&quot;../os/unix/ffi/trait.osstrext#tymethod.from_bytes&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2e9607662255e7be5e73922a7715cb7a1c234440" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt; from a byte vector. &lt;a href=&quot;../os/unix/ffi/trait.osstringext#tymethod.from_vec&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">バイトベクトルから&lt;a href=&quot;struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt;を作成します。&lt;a href=&quot;../os/unix/ffi/trait.osstringext#tymethod.from_vec&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2bd08d7cc02a88eedb45d338293a6be4ac06701d" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;AtomicBool&lt;/code&gt; initialized to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; に初期化された &lt;code&gt;AtomicBool&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="1f4908e8448e32ede6cb4dfbc73dea7c7a9a149a" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;IpAddr::V4&lt;/code&gt; from a four element byte array.</source>
          <target state="translated">4要素のバイト配列から &lt;code&gt;IpAddr::V4&lt;/code&gt; 作成します。</target>
        </trans-unit>
        <trans-unit id="3c1a70ac99f4439a3e6c20e5c57811ce46b21371" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;IpAddr::V6&lt;/code&gt; from a sixteen element byte array.</source>
          <target state="translated">16要素のバイト配列から &lt;code&gt;IpAddr::V6&lt;/code&gt; 作成します。</target>
        </trans-unit>
        <trans-unit id="a54657ca21fad91a9d6896f8b9745db4a9a8800d" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;IpAddr::V6&lt;/code&gt; from an eight element 16-bit array.</source>
          <target state="translated">8要素の16ビット配列から &lt;code&gt;IpAddr::V6&lt;/code&gt; 作成します。</target>
        </trans-unit>
        <trans-unit id="ddd6c49e3f813edfe18ad709cfe8b0ba0163f2f2" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;Ipv4Addr&lt;/code&gt; from a four element byte array.</source>
          <target state="translated">4要素のバイト配列から &lt;code&gt;Ipv4Addr&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="52da7291c3b5b9858391fd3f0038209d1205ecd6" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;Ipv6Addr&lt;/code&gt; from a sixteen element byte array.</source>
          <target state="translated">16要素のバイト配列から &lt;code&gt;Ipv6Addr&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="ba724c5ad62c355f960db96847d5f0121d342f62" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;Ipv6Addr&lt;/code&gt; from an eight element 16-bit array.</source>
          <target state="translated">8要素の16ビット配列から &lt;code&gt;Ipv6Addr&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="63a40ca4e488c7f2a99183e03a9cf5b1a5448821" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;OsString&lt;/code&gt; from a potentially ill-formed UTF-16 slice of 16-bit code units.</source>
          <target state="translated">16ビットコードユニットの &lt;code&gt;OsString&lt;/code&gt; の可能性があるUTF-16スライスからOsStringを作成します。</target>
        </trans-unit>
        <trans-unit id="86cd6d88f63dff9ff2335ba9c15edfda38d93082" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;OsString&lt;/code&gt; from a potentially ill-formed UTF-16 slice of 16-bit code units. &lt;a href=&quot;../os/windows/ffi/trait.osstringext#tymethod.from_wide&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">16ビットコードユニットの &lt;code&gt;OsString&lt;/code&gt; の可能性があるUTF-16スライスからOsStringを作成します。&lt;a href=&quot;../os/windows/ffi/trait.osstringext#tymethod.from_wide&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c78ffdce16186170dfcd879c0340a5fb5c728160" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;UnsafeCell&lt;/code&gt;, with the &lt;code&gt;Default&lt;/code&gt; value for T.</source>
          <target state="translated">作成し &lt;code&gt;UnsafeCell&lt;/code&gt; はと、 &lt;code&gt;Default&lt;/code&gt; T.の値</target>
        </trans-unit>
        <trans-unit id="a3a690446edba9f0d3909eaaea02ff7cfbfd8000" translate="yes" xml:space="preserve">
          <source>Creates an [&lt;code&gt;OsStr&lt;/code&gt;] from a byte slice. &lt;a href=&quot;../os/unix/ffi/trait.osstrext#tymethod.from_bytes&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">バイトスライスから[ &lt;code&gt;OsStr&lt;/code&gt; ]を作成します。&lt;a href=&quot;../os/unix/ffi/trait.osstrext#tymethod.from_bytes&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="99abec94729a1f1dba3d0ceed4887b7f19b9fd72" translate="yes" xml:space="preserve">
          <source>Creates an [&lt;code&gt;OsString&lt;/code&gt;] from a byte vector. &lt;a href=&quot;../os/unix/ffi/trait.osstringext#tymethod.from_vec&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">バイトベクトルから[ &lt;code&gt;OsString&lt;/code&gt; ]を作成します。&lt;a href=&quot;../os/unix/ffi/trait.osstringext#tymethod.from_vec&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4d50e595b20fbf8128787a8a9d153893c3a0e105" translate="yes" xml:space="preserve">
          <source>Creates an adaptor which will chain this stream with another.</source>
          <target state="translated">このストリームを別のストリームにチェーンするアダプタを作成します。</target>
        </trans-unit>
        <trans-unit id="1f8582e419fac49a344e5a552c7942c7ebf7db20" translate="yes" xml:space="preserve">
          <source>Creates an adaptor which will chain this stream with another. &lt;a href=&quot;../../../io/trait.read#method.chain&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">このストリームを別のストリームとチェーンするアダプタを作成します。&lt;a href=&quot;../../../io/trait.read#method.chain&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="80672abb092b9cfaa17064f033cb8c86bc68a5db" translate="yes" xml:space="preserve">
          <source>Creates an adaptor which will chain this stream with another. &lt;a href=&quot;../io/trait.read#method.chain&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">このストリームを別のストリームとチェーンするアダプタを作成します。&lt;a href=&quot;../io/trait.read#method.chain&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8912a7fe0b81ea69c427f6b4432668c67c61f2ff" translate="yes" xml:space="preserve">
          <source>Creates an adaptor which will chain this stream with another. &lt;a href=&quot;io/trait.read#method.chain&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">このストリームを別のストリームとチェーンするアダプタを作成します。&lt;a href=&quot;io/trait.read#method.chain&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0d49e069cc25b66f83683548ee5c27230f94ae3d" translate="yes" xml:space="preserve">
          <source>Creates an adaptor which will chain this stream with another. &lt;a href=&quot;trait.read#method.chain&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">このストリームを別のストリームとチェーンするアダプタを作成します。&lt;a href=&quot;trait.read#method.chain&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b8e7b09ba78d3a4187040fa5bdd78cc9268c123d" translate="yes" xml:space="preserve">
          <source>Creates an adaptor which will read at most &lt;code&gt;limit&lt;/code&gt; bytes from it.</source>
          <target state="translated">最大で &lt;code&gt;limit&lt;/code&gt; バイトを読み取るアダプタを作成します。</target>
        </trans-unit>
        <trans-unit id="44239cbc05f793ae1014ef137a8e06c9b960e67e" translate="yes" xml:space="preserve">
          <source>Creates an adaptor which will read at most &lt;code&gt;limit&lt;/code&gt; bytes from it. &lt;a href=&quot;../../../io/trait.read#method.take&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">最大で &lt;code&gt;limit&lt;/code&gt; バイトを読み取るアダプタを作成します。&lt;a href=&quot;../../../io/trait.read#method.take&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9f4ba547b4d83c73219171797f1f46e7439d3d52" translate="yes" xml:space="preserve">
          <source>Creates an adaptor which will read at most &lt;code&gt;limit&lt;/code&gt; bytes from it. &lt;a href=&quot;../io/trait.read#method.take&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">最大で &lt;code&gt;limit&lt;/code&gt; バイトを読み取るアダプタを作成します。&lt;a href=&quot;../io/trait.read#method.take&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7173249f15299f63a5b7a066dc19a7f53f4f3099" translate="yes" xml:space="preserve">
          <source>Creates an adaptor which will read at most &lt;code&gt;limit&lt;/code&gt; bytes from it. &lt;a href=&quot;io/trait.read#method.take&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">最大で &lt;code&gt;limit&lt;/code&gt; バイトを読み取るアダプタを作成します。&lt;a href=&quot;io/trait.read#method.take&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="542e0983f19cd1c5c3e1c575b4a757f9545cb208" translate="yes" xml:space="preserve">
          <source>Creates an adaptor which will read at most &lt;code&gt;limit&lt;/code&gt; bytes from it. &lt;a href=&quot;trait.read#method.take&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">最大で &lt;code&gt;limit&lt;/code&gt; バイトを読み取るアダプタを作成します。&lt;a href=&quot;trait.read#method.take&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5fa5e80b796110bc6ca6cc21739068866e288136" translate="yes" xml:space="preserve">
          <source>Creates an empty &lt;code&gt;BTreeMap&amp;lt;K, V&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">空の &lt;code&gt;BTreeMap&amp;lt;K, V&amp;gt;&lt;/code&gt; 作成します。</target>
        </trans-unit>
        <trans-unit id="5728ef084eb4d9df1c3cbf35a05a96d08607d0fb" translate="yes" xml:space="preserve">
          <source>Creates an empty &lt;code&gt;BinaryHeap&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">空の &lt;code&gt;BinaryHeap&amp;lt;T&amp;gt;&lt;/code&gt; 作成します。</target>
        </trans-unit>
        <trans-unit id="261dd3ff68938722d66541ffdeba02c75fbc4e03" translate="yes" xml:space="preserve">
          <source>Creates an empty &lt;code&gt;BinaryHeap&lt;/code&gt; as a max-heap.</source>
          <target state="translated">空の &lt;code&gt;BinaryHeap&lt;/code&gt; を最大ヒープとして作成します。</target>
        </trans-unit>
        <trans-unit id="7365f843dbfeecf17e7270c6762b8ef2a9e1cf67" translate="yes" xml:space="preserve">
          <source>Creates an empty &lt;code&gt;BinaryHeap&lt;/code&gt; with a specific capacity. This preallocates enough memory for &lt;code&gt;capacity&lt;/code&gt; elements, so that the &lt;code&gt;BinaryHeap&lt;/code&gt; does not have to be reallocated until it contains at least that many values.</source>
          <target state="translated">特定の容量を持つ空の &lt;code&gt;BinaryHeap&lt;/code&gt; を作成します。これにより、 &lt;code&gt;capacity&lt;/code&gt; 要素に十分なメモリが事前に割り当てられるため、 &lt;code&gt;BinaryHeap&lt;/code&gt; は、少なくともその数の値が含まれるまで再割り当てする必要がありません。</target>
        </trans-unit>
        <trans-unit id="cc755b21b925553cb116b1325f5f10c93de0ada8" translate="yes" xml:space="preserve">
          <source>Creates an empty &lt;code&gt;CString&lt;/code&gt;.</source>
          <target state="translated">空の &lt;code&gt;CString&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="8ae6abf6b412a9ee5dd80d0817603de0df46470d" translate="yes" xml:space="preserve">
          <source>Creates an empty &lt;code&gt;HashMap&amp;lt;K, V, S&amp;gt;&lt;/code&gt;, with the &lt;code&gt;Default&lt;/code&gt; value for the hasher.</source>
          <target state="translated">空の作成 &lt;code&gt;HashMap&amp;lt;K, V, S&amp;gt;&lt;/code&gt; 用いて、 &lt;code&gt;Default&lt;/code&gt; ハッシャの値。</target>
        </trans-unit>
        <trans-unit id="d50e8dcf216c02291d96c26afe1ccb4b3497cccb" translate="yes" xml:space="preserve">
          <source>Creates an empty &lt;code&gt;HashMap&lt;/code&gt; which will use the given hash builder to hash keys.</source>
          <target state="translated">指定されたハッシュビルダーを使用してキーをハッシュする空の &lt;code&gt;HashMap&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="d96674b5613aa40744681fcae64913c07555af5b" translate="yes" xml:space="preserve">
          <source>Creates an empty &lt;code&gt;HashMap&lt;/code&gt; with the specified capacity, using &lt;code&gt;hash_builder&lt;/code&gt; to hash the keys.</source>
          <target state="translated">&lt;code&gt;hash_builder&lt;/code&gt; を使用してキーをハッシュし、指定された容量の空の &lt;code&gt;HashMap&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="84bb5f481e637e7a0d3c30b5565d9fa58ecf4378" translate="yes" xml:space="preserve">
          <source>Creates an empty &lt;code&gt;HashMap&lt;/code&gt; with the specified capacity.</source>
          <target state="translated">指定された容量で空の &lt;code&gt;HashMap&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="33a902e3dd301b27e3ae1af3b9dbbdebf73aa03a" translate="yes" xml:space="preserve">
          <source>Creates an empty &lt;code&gt;HashMap&lt;/code&gt;.</source>
          <target state="translated">空の &lt;code&gt;HashMap&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="cd7abb3484f414de2d9e0899bc14e583b4f71085" translate="yes" xml:space="preserve">
          <source>Creates an empty &lt;code&gt;HashSet&amp;lt;T, S&amp;gt;&lt;/code&gt; with the &lt;code&gt;Default&lt;/code&gt; value for the hasher.</source>
          <target state="translated">ハッシャーの &lt;code&gt;Default&lt;/code&gt; 値で空の &lt;code&gt;HashSet&amp;lt;T, S&amp;gt;&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="15c23107876c26b04afb1ec8e8c7cc3a1c12da06" translate="yes" xml:space="preserve">
          <source>Creates an empty &lt;code&gt;HashSet&lt;/code&gt; with the specified capacity, using &lt;code&gt;hasher&lt;/code&gt; to hash the keys.</source>
          <target state="translated">空の作成 &lt;code&gt;HashSet&lt;/code&gt; のを使用して、指定された容量との &lt;code&gt;hasher&lt;/code&gt; キーをハッシュします。</target>
        </trans-unit>
        <trans-unit id="a7b8c1477ec1597759e1735939be2c5e4eb618e8" translate="yes" xml:space="preserve">
          <source>Creates an empty &lt;code&gt;HashSet&lt;/code&gt; with the specified capacity.</source>
          <target state="translated">指定された容量で空の &lt;code&gt;HashSet&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="7c706136c38eb4a7a81f135f87cd76d0dc0ff283" translate="yes" xml:space="preserve">
          <source>Creates an empty &lt;code&gt;HashSet&lt;/code&gt;.</source>
          <target state="translated">空の &lt;code&gt;HashSet&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="65fdf9a5df8c011f5a192763a7d1bc4f06f8da92" translate="yes" xml:space="preserve">
          <source>Creates an empty &lt;code&gt;LinkedList&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">空の &lt;code&gt;LinkedList&amp;lt;T&amp;gt;&lt;/code&gt; 作成します。</target>
        </trans-unit>
        <trans-unit id="721f7cb37286ae23c9965a0bafd49f3776edc3de" translate="yes" xml:space="preserve">
          <source>Creates an empty &lt;code&gt;LinkedList&lt;/code&gt;.</source>
          <target state="translated">空の &lt;code&gt;LinkedList&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="bb6653f921c749ed5a57dfd4d033cefb798302c7" translate="yes" xml:space="preserve">
          <source>Creates an empty &lt;code&gt;OsStr&lt;/code&gt;.</source>
          <target state="translated">空の &lt;code&gt;OsStr&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="5c875c188f82cf96799dc90db3571410e9bfa42c" translate="yes" xml:space="preserve">
          <source>Creates an empty &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">空の &lt;code&gt;String&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="de06d15165ef983b354799ed99f0ec0b2630bc1d" translate="yes" xml:space="preserve">
          <source>Creates an empty &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">空の &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; 作成します。</target>
        </trans-unit>
        <trans-unit id="39ad4c24e5f6d3768e9ec89dfb52cce051a87c17" translate="yes" xml:space="preserve">
          <source>Creates an empty &lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">空の &lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt; 作成します。</target>
        </trans-unit>
        <trans-unit id="90b33af60ebb2746fceb1fad2875d0ac763f2c3a" translate="yes" xml:space="preserve">
          <source>Creates an empty &lt;code&gt;VecDeque&lt;/code&gt; with space for at least &lt;code&gt;capacity&lt;/code&gt; elements.</source>
          <target state="translated">少なくとも &lt;code&gt;capacity&lt;/code&gt; 要素のためのスペースを持つ空の &lt;code&gt;VecDeque&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="a15a30e4696b0eb19de54cd9b608e3905b605173" translate="yes" xml:space="preserve">
          <source>Creates an empty &lt;code&gt;VecDeque&lt;/code&gt;.</source>
          <target state="translated">空の &lt;code&gt;VecDeque&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="61db4431137176e0d653a8c7c92dd31a11839b46" translate="yes" xml:space="preserve">
          <source>Creates an empty mutable str</source>
          <target state="translated">空の mutable str を作成します。</target>
        </trans-unit>
        <trans-unit id="76ff6cbdf33604612589914ffefc9a334987b5f8" translate="yes" xml:space="preserve">
          <source>Creates an empty slice.</source>
          <target state="translated">空のスライスを作成します。</target>
        </trans-unit>
        <trans-unit id="926452cb81fff4032fd679a763d4468c010af3e3" translate="yes" xml:space="preserve">
          <source>Creates an empty str</source>
          <target state="translated">空の文字列を作成します。</target>
        </trans-unit>
        <trans-unit id="cbbd7335ee0cae3e7d2c8921dae6ec13eee3098d" translate="yes" xml:space="preserve">
          <source>Creates an instance of a reader that infinitely repeats one byte.</source>
          <target state="translated">1バイトを無限に繰り返すリーダーのインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="ed05fe75dd08d0f09463440c9e260cf143bb5371" translate="yes" xml:space="preserve">
          <source>Creates an instance of a writer which will successfully consume all data.</source>
          <target state="translated">すべてのデータを正常に消費するライターのインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="612ac638dfc6f61171e4ade14a39aee9de3c86e8" translate="yes" xml:space="preserve">
          <source>Creates an iterator from a value.</source>
          <target state="translated">値からイテレータを作成します。</target>
        </trans-unit>
        <trans-unit id="746df43ae565a001dbd7c52535d12aa3e5bce3b0" translate="yes" xml:space="preserve">
          <source>Creates an iterator from a value. &lt;a href=&quot;../../../iter/trait.intoiterator#tymethod.into_iter&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">値からイテレータを作成します。&lt;a href=&quot;../../../iter/trait.intoiterator#tymethod.into_iter&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5369e3d175d5c548aa5e8c2271668c6389bca3ce" translate="yes" xml:space="preserve">
          <source>Creates an iterator from a value. &lt;a href=&quot;../../iter/trait.intoiterator#tymethod.into_iter&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">値からイテレータを作成します。&lt;a href=&quot;../../iter/trait.intoiterator#tymethod.into_iter&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="536714da76d5c3556d82cd82157dbfe4ea42ccaf" translate="yes" xml:space="preserve">
          <source>Creates an iterator from a value. &lt;a href=&quot;../iter/trait.intoiterator#tymethod.into_iter&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">値からイテレータを作成します。&lt;a href=&quot;../iter/trait.intoiterator#tymethod.into_iter&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1f0e3b2a4b4d7341514158da4eccc972bdcc0d7e" translate="yes" xml:space="preserve">
          <source>Creates an iterator from a value. &lt;a href=&quot;iter/trait.intoiterator#tymethod.into_iter&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">値からイテレータを作成します。&lt;a href=&quot;iter/trait.intoiterator#tymethod.into_iter&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8d75f1b6b7004a22f81618b76b0a4e999397d5e5" translate="yes" xml:space="preserve">
          <source>Creates an iterator from a value. &lt;a href=&quot;trait.intoiterator#tymethod.into_iter&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">値からイテレータを作成します。&lt;a href=&quot;trait.intoiterator#tymethod.into_iter&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="98a1361ac2f65ab1e66d6530065101b4c213e1d8" translate="yes" xml:space="preserve">
          <source>Creates an iterator over the UTF-16 encoded code points in &lt;code&gt;iter&lt;/code&gt;, returning unpaired surrogates as &lt;code&gt;Err&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;iter&lt;/code&gt; 内のUTF-16エンコードされたコードポイントでイテレーターを作成し、ペアになっていないサロゲートを &lt;code&gt;Err&lt;/code&gt; として返します。</target>
        </trans-unit>
        <trans-unit id="3d37ca88895d3844b78db329a20f8fac166b3aa4" translate="yes" xml:space="preserve">
          <source>Creates an iterator starting at the same point, but stepping by the given amount at each iteration.</source>
          <target state="translated">同じ点から開始するイテレータを作成しますが、各イテレータでは指定された量だけステップします。</target>
        </trans-unit>
        <trans-unit id="f17ef1ee9863db627a338eeefe396fb5cc50f8c5" translate="yes" xml:space="preserve">
          <source>Creates an iterator starting at the same point, but stepping by the given amount at each iteration. &lt;a href=&quot;../../../iter/trait.iterator#method.step_by&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">同じポイントから開始して、各反復で指定された量だけステップ実行する反復子を作成します。&lt;a href=&quot;../../../iter/trait.iterator#method.step_by&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f589f8d0b54db9b2f92d55b74e7e58b0dcda9ce" translate="yes" xml:space="preserve">
          <source>Creates an iterator starting at the same point, but stepping by the given amount at each iteration. &lt;a href=&quot;../../iter/trait.iterator#method.step_by&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">同じポイントから開始して、各反復で指定された量だけステップ実行する反復子を作成します。&lt;a href=&quot;../../iter/trait.iterator#method.step_by&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="07feb7eb7a6a35e67d359c9501ab89944e8fd669" translate="yes" xml:space="preserve">
          <source>Creates an iterator starting at the same point, but stepping by the given amount at each iteration. &lt;a href=&quot;../iter/trait.iterator#method.step_by&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">同じポイントから開始して、各反復で指定された量だけステップ実行する反復子を作成します。&lt;a href=&quot;../iter/trait.iterator#method.step_by&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eab9a86c7e75870ef57ae080e97a684f73181222" translate="yes" xml:space="preserve">
          <source>Creates an iterator starting at the same point, but stepping by the given amount at each iteration. &lt;a href=&quot;iter/trait.iterator#method.step_by&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">同じポイントから開始して、各反復で指定された量だけステップ実行する反復子を作成します。&lt;a href=&quot;iter/trait.iterator#method.step_by&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9498cab2fe705faff6250896d0984200807b7ea2" translate="yes" xml:space="preserve">
          <source>Creates an iterator starting at the same point, but stepping by the given amount at each iteration. &lt;a href=&quot;trait.iterator#method.step_by&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">同じポイントから開始して、各反復で指定された量だけステップ実行する反復子を作成します。&lt;a href=&quot;trait.iterator#method.step_by&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="212a5e49022b35d12b2b52c0624cc5708bfe3320" translate="yes" xml:space="preserve">
          <source>Creates an iterator that &lt;a href=&quot;#method.skip&quot;&gt;&lt;code&gt;skip&lt;/code&gt;&lt;/a&gt;s elements based on a predicate.</source>
          <target state="translated">述語に基づいて要素を&lt;a href=&quot;#method.skip&quot;&gt; &lt;code&gt;skip&lt;/code&gt; &lt;/a&gt;するイテレータを作成します。</target>
        </trans-unit>
        <trans-unit id="fde765b966b542c85bd7d2dac57c31c1d0692e27" translate="yes" xml:space="preserve">
          <source>Creates an iterator that &lt;a href=&quot;../../../iter/trait.iterator#method.skip&quot;&gt;&lt;code&gt;skip&lt;/code&gt;&lt;/a&gt;s elements based on a predicate. &lt;a href=&quot;../../../iter/trait.iterator#method.skip_while&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">述語に基づいてs要素を&lt;a href=&quot;../../../iter/trait.iterator#method.skip&quot;&gt; &lt;code&gt;skip&lt;/code&gt; &lt;/a&gt;するイテレータを作成します。&lt;a href=&quot;../../../iter/trait.iterator#method.skip_while&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ddf805c8a9066fac0a1e6af349144d26abcabebe" translate="yes" xml:space="preserve">
          <source>Creates an iterator that &lt;a href=&quot;../../iter/trait.iterator#method.skip&quot;&gt;&lt;code&gt;skip&lt;/code&gt;&lt;/a&gt;s elements based on a predicate. &lt;a href=&quot;../../iter/trait.iterator#method.skip_while&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">述語に基づいてs要素を&lt;a href=&quot;../../iter/trait.iterator#method.skip&quot;&gt; &lt;code&gt;skip&lt;/code&gt; &lt;/a&gt;するイテレータを作成します。&lt;a href=&quot;../../iter/trait.iterator#method.skip_while&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d8422a7e4be09892b3485cd668ab0890b0f085e1" translate="yes" xml:space="preserve">
          <source>Creates an iterator that &lt;a href=&quot;../iter/trait.iterator#method.skip&quot;&gt;&lt;code&gt;skip&lt;/code&gt;&lt;/a&gt;s elements based on a predicate. &lt;a href=&quot;../iter/trait.iterator#method.skip_while&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">述語に基づいてs要素を&lt;a href=&quot;../iter/trait.iterator#method.skip&quot;&gt; &lt;code&gt;skip&lt;/code&gt; &lt;/a&gt;するイテレータを作成します。&lt;a href=&quot;../iter/trait.iterator#method.skip_while&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="34eb55a51fcc713c121aafd9810f07f7be1d3126" translate="yes" xml:space="preserve">
          <source>Creates an iterator that &lt;a href=&quot;iter/trait.iterator#method.skip&quot;&gt;&lt;code&gt;skip&lt;/code&gt;&lt;/a&gt;s elements based on a predicate. &lt;a href=&quot;iter/trait.iterator#method.skip_while&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">述語に基づいてs要素を&lt;a href=&quot;iter/trait.iterator#method.skip&quot;&gt; &lt;code&gt;skip&lt;/code&gt; &lt;/a&gt;するイテレータを作成します。&lt;a href=&quot;iter/trait.iterator#method.skip_while&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4375df73af46c31bd958da8afa6de29956f71071" translate="yes" xml:space="preserve">
          <source>Creates an iterator that &lt;a href=&quot;trait.iterator#method.skip&quot;&gt;&lt;code&gt;skip&lt;/code&gt;&lt;/a&gt;s elements based on a predicate.</source>
          <target state="translated">述語に基づいてs要素を&lt;a href=&quot;trait.iterator#method.skip&quot;&gt; &lt;code&gt;skip&lt;/code&gt; &lt;/a&gt;するイテレータを作成します。</target>
        </trans-unit>
        <trans-unit id="2b8f89250558f253d3734ab94337539d350bf0ec" translate="yes" xml:space="preserve">
          <source>Creates an iterator that &lt;a href=&quot;trait.iterator#method.skip&quot;&gt;&lt;code&gt;skip&lt;/code&gt;&lt;/a&gt;s elements based on a predicate. &lt;a href=&quot;trait.iterator#method.skip_while&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">述語に基づいてs要素を&lt;a href=&quot;trait.iterator#method.skip&quot;&gt; &lt;code&gt;skip&lt;/code&gt; &lt;/a&gt;するイテレータを作成します。&lt;a href=&quot;trait.iterator#method.skip_while&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="84ef6ca8c1c61986aa09032d67b0dd510b0a6037" translate="yes" xml:space="preserve">
          <source>Creates an iterator that [&lt;code&gt;skip&lt;/code&gt;]s elements based on a predicate. &lt;a href=&quot;../../../iter/trait.iterator#method.skip_while&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">述語に基づいて要素を[ &lt;code&gt;skip&lt;/code&gt; ] するイテレータを作成します。&lt;a href=&quot;../../../iter/trait.iterator#method.skip_while&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3d8a610addd54e7198873c3ebbe296aba0c43751" translate="yes" xml:space="preserve">
          <source>Creates an iterator that [&lt;code&gt;skip&lt;/code&gt;]s elements based on a predicate. &lt;a href=&quot;../../iter/trait.iterator#method.skip_while&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">述語に基づいて要素を[ &lt;code&gt;skip&lt;/code&gt; ] するイテレータを作成します。&lt;a href=&quot;../../iter/trait.iterator#method.skip_while&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e5d2aa3aad94dd80fba1c1bcc236a49962eb3e73" translate="yes" xml:space="preserve">
          <source>Creates an iterator that [&lt;code&gt;skip&lt;/code&gt;]s elements based on a predicate. &lt;a href=&quot;../iter/trait.iterator#method.skip_while&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">述語に基づいて要素を[ &lt;code&gt;skip&lt;/code&gt; ] するイテレータを作成します。&lt;a href=&quot;../iter/trait.iterator#method.skip_while&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eebdaeb89f486bbfb7b00483e5f44d76ca2a3dcd" translate="yes" xml:space="preserve">
          <source>Creates an iterator that [&lt;code&gt;skip&lt;/code&gt;]s elements based on a predicate. &lt;a href=&quot;iter/trait.iterator#method.skip_while&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">述語に基づいて要素を[ &lt;code&gt;skip&lt;/code&gt; ] するイテレータを作成します。&lt;a href=&quot;iter/trait.iterator#method.skip_while&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a496e3d6c62a122b26e66cb7f66c74b067a7120d" translate="yes" xml:space="preserve">
          <source>Creates an iterator that [&lt;code&gt;skip&lt;/code&gt;]s elements based on a predicate. &lt;a href=&quot;trait.iterator#method.skip_while&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">述語に基づいて要素を[ &lt;code&gt;skip&lt;/code&gt; ] するイテレータを作成します。&lt;a href=&quot;trait.iterator#method.skip_while&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a0489206c165b2312b66b1e40a33b3df30c352b6" translate="yes" xml:space="preserve">
          <source>Creates an iterator that both filters and maps.</source>
          <target state="translated">フィルタとマップの両方を行うイテレータを作成します。</target>
        </trans-unit>
        <trans-unit id="06492aa1b9d09e8e683b0f58506357ffad969205" translate="yes" xml:space="preserve">
          <source>Creates an iterator that both filters and maps. &lt;a href=&quot;../../../iter/trait.iterator#method.filter_map&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">フィルターとマップの両方を行うイテレーターを作成します。&lt;a href=&quot;../../../iter/trait.iterator#method.filter_map&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5f3679d48d6c69f3b2b276b4b61179b60109e7ad" translate="yes" xml:space="preserve">
          <source>Creates an iterator that both filters and maps. &lt;a href=&quot;../../iter/trait.iterator#method.filter_map&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">フィルターとマップの両方を行うイテレーターを作成します。&lt;a href=&quot;../../iter/trait.iterator#method.filter_map&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="39aa8dd7a7c630c104252bf7b3644592d5bfc847" translate="yes" xml:space="preserve">
          <source>Creates an iterator that both filters and maps. &lt;a href=&quot;../iter/trait.iterator#method.filter_map&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">フィルターとマップの両方を行うイテレーターを作成します。&lt;a href=&quot;../iter/trait.iterator#method.filter_map&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b4942a6b6f64e0b296501d37deb64a77ea33429a" translate="yes" xml:space="preserve">
          <source>Creates an iterator that both filters and maps. &lt;a href=&quot;iter/trait.iterator#method.filter_map&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">フィルターとマップの両方を行うイテレーターを作成します。&lt;a href=&quot;iter/trait.iterator#method.filter_map&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eba61035ef45ec8e34c6de7c67b5676eec96e49d" translate="yes" xml:space="preserve">
          <source>Creates an iterator that both filters and maps. &lt;a href=&quot;trait.iterator#method.filter_map&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">フィルターとマップの両方を行うイテレーターを作成します。&lt;a href=&quot;trait.iterator#method.filter_map&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6a3752343b3758ffd8af6594de5d0df58697cb53" translate="yes" xml:space="preserve">
          <source>Creates an iterator that both yields elements based on a predicate and maps.</source>
          <target state="translated">述語とマップに基づく要素を生成するイテレータを作成します。</target>
        </trans-unit>
        <trans-unit id="724620fa7de9b633a1d109bdb8b91b43c0f57c85" translate="yes" xml:space="preserve">
          <source>Creates an iterator that both yields elements based on a predicate and maps. &lt;a href=&quot;../../../iter/trait.iterator#method.map_while&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">述語とマップに基づいて要素を生成するイテレータを作成します。&lt;a href=&quot;../../../iter/trait.iterator#method.map_while&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="84962fbe5444b7cf656ed79af558ef24afd942bb" translate="yes" xml:space="preserve">
          <source>Creates an iterator that both yields elements based on a predicate and maps. &lt;a href=&quot;../../iter/trait.iterator#method.map_while&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">述語とマップに基づいて要素を生成するイテレータを作成します。&lt;a href=&quot;../../iter/trait.iterator#method.map_while&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c8eb702758b8057d7acdd469f47356275f025cef" translate="yes" xml:space="preserve">
          <source>Creates an iterator that both yields elements based on a predicate and maps. &lt;a href=&quot;../iter/trait.iterator#method.map_while&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">述語とマップに基づいて要素を生成するイテレータを作成します。&lt;a href=&quot;../iter/trait.iterator#method.map_while&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="092996be4273938b9dce1922a43295dde1273a0f" translate="yes" xml:space="preserve">
          <source>Creates an iterator that both yields elements based on a predicate and maps. &lt;a href=&quot;iter/trait.iterator#method.map_while&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">述語とマップに基づいて要素を生成するイテレータを作成します。&lt;a href=&quot;iter/trait.iterator#method.map_while&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4acec5ac4a9791f40e7d52038a34587cc3a846c2" translate="yes" xml:space="preserve">
          <source>Creates an iterator that both yields elements based on a predicate and maps. &lt;a href=&quot;trait.iterator#method.map_while&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">述語とマップに基づいて要素を生成するイテレータを作成します。&lt;a href=&quot;trait.iterator#method.map_while&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="45eee823aa7c16d97a5180b10d41ca898dab58a6" translate="yes" xml:space="preserve">
          <source>Creates an iterator that covers the specified mutable range in the &lt;code&gt;VecDeque&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;VecDeque&lt;/code&gt; で指定された可変範囲をカバーするイテレータを作成します。</target>
        </trans-unit>
        <trans-unit id="06091e35f99d50f56d044536eee23c43aec4dad6" translate="yes" xml:space="preserve">
          <source>Creates an iterator that covers the specified range in the &lt;code&gt;VecDeque&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;VecDeque&lt;/code&gt; で指定された範囲をカバーするイテレータを作成します。</target>
        </trans-unit>
        <trans-unit id="f225657bbf104af01a26cea9c236b21020f326b5" translate="yes" xml:space="preserve">
          <source>Creates an iterator that flattens nested structure.</source>
          <target state="translated">入れ子になった構造体を平坦化するイテレータを作成します。</target>
        </trans-unit>
        <trans-unit id="03c23602f35638d9ae0af465ee16652e06e702f7" translate="yes" xml:space="preserve">
          <source>Creates an iterator that flattens nested structure. &lt;a href=&quot;../../../iter/trait.iterator#method.flatten&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">ネストされた構造をフラット化するイテレータを作成します。&lt;a href=&quot;../../../iter/trait.iterator#method.flatten&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="176c478c721d7b4c22958591f469995d0afd217e" translate="yes" xml:space="preserve">
          <source>Creates an iterator that flattens nested structure. &lt;a href=&quot;../../iter/trait.iterator#method.flatten&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">ネストされた構造をフラット化するイテレータを作成します。&lt;a href=&quot;../../iter/trait.iterator#method.flatten&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5bd5e639354a0492fd2f1d73938a279795b54cff" translate="yes" xml:space="preserve">
          <source>Creates an iterator that flattens nested structure. &lt;a href=&quot;../iter/trait.iterator#method.flatten&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">ネストされた構造をフラット化するイテレータを作成します。&lt;a href=&quot;../iter/trait.iterator#method.flatten&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6358d1beff6d17af778f8e09b120b70e3dd71bda" translate="yes" xml:space="preserve">
          <source>Creates an iterator that flattens nested structure. &lt;a href=&quot;iter/trait.iterator#method.flatten&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">ネストされた構造をフラット化するイテレータを作成します。&lt;a href=&quot;iter/trait.iterator#method.flatten&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cade14ba41a3da4bd71d2091e9ff2d17f6d56f8f" translate="yes" xml:space="preserve">
          <source>Creates an iterator that flattens nested structure. &lt;a href=&quot;trait.iterator#method.flatten&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">ネストされた構造をフラット化するイテレータを作成します。&lt;a href=&quot;trait.iterator#method.flatten&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5065b2759d56578711f5663f0aadc556ea6c12e9" translate="yes" xml:space="preserve">
          <source>Creates an iterator that lazily generates a value exactly once by invoking the provided closure.</source>
          <target state="translated">指定されたクロージャを呼び出すことで、一度だけ値を生成するイテレータを作成します。</target>
        </trans-unit>
        <trans-unit id="137f6e475b55a786362f571d7e19a9cbbe495f3a" translate="yes" xml:space="preserve">
          <source>Creates an iterator that skips the first &lt;code&gt;n&lt;/code&gt; elements.</source>
          <target state="translated">最初の &lt;code&gt;n&lt;/code&gt; 個の要素をスキップする反復子を作成します。</target>
        </trans-unit>
        <trans-unit id="6d0dfde1ccf460c40bd689c43bed61a53d9b1249" translate="yes" xml:space="preserve">
          <source>Creates an iterator that skips the first &lt;code&gt;n&lt;/code&gt; elements. &lt;a href=&quot;../../../iter/trait.iterator#method.skip&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">最初の &lt;code&gt;n&lt;/code&gt; 個の要素をスキップする反復子を作成します。&lt;a href=&quot;../../../iter/trait.iterator#method.skip&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a78622430eaf407fb8010e8367a558363a9f904a" translate="yes" xml:space="preserve">
          <source>Creates an iterator that skips the first &lt;code&gt;n&lt;/code&gt; elements. &lt;a href=&quot;../../iter/trait.iterator#method.skip&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">最初の &lt;code&gt;n&lt;/code&gt; 個の要素をスキップする反復子を作成します。&lt;a href=&quot;../../iter/trait.iterator#method.skip&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ea90fd9ac002b59d6ec82167ec576c6cbff9ad6e" translate="yes" xml:space="preserve">
          <source>Creates an iterator that skips the first &lt;code&gt;n&lt;/code&gt; elements. &lt;a href=&quot;../iter/trait.iterator#method.skip&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">最初の &lt;code&gt;n&lt;/code&gt; 個の要素をスキップする反復子を作成します。&lt;a href=&quot;../iter/trait.iterator#method.skip&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3193f1935e1a72d0b2cd3c347b32cee78974f8a0" translate="yes" xml:space="preserve">
          <source>Creates an iterator that skips the first &lt;code&gt;n&lt;/code&gt; elements. &lt;a href=&quot;iter/trait.iterator#method.skip&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">最初の &lt;code&gt;n&lt;/code&gt; 個の要素をスキップする反復子を作成します。&lt;a href=&quot;iter/trait.iterator#method.skip&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c28ff265211a163d4a9545a51c40a99d73676488" translate="yes" xml:space="preserve">
          <source>Creates an iterator that skips the first &lt;code&gt;n&lt;/code&gt; elements. &lt;a href=&quot;trait.iterator#method.skip&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">最初の &lt;code&gt;n&lt;/code&gt; 個の要素をスキップする反復子を作成します。&lt;a href=&quot;trait.iterator#method.skip&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8dda645466af67eab6fc1aac43427506d197b8fd" translate="yes" xml:space="preserve">
          <source>Creates an iterator that works like map, but flattens nested structure.</source>
          <target state="translated">マップのように動作するイテレータを作成しますが、入れ子構造をフラットにします。</target>
        </trans-unit>
        <trans-unit id="388223dc84d5377baf43f4817c30fd58b59d0344" translate="yes" xml:space="preserve">
          <source>Creates an iterator that works like map, but flattens nested structure. &lt;a href=&quot;../../../iter/trait.iterator#method.flat_map&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">マップのように機能するが、ネストされた構造を平坦化するイテレータを作成します。&lt;a href=&quot;../../../iter/trait.iterator#method.flat_map&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="94cbc2cd8c52dfd69c70bb2750877f99b83ca1a3" translate="yes" xml:space="preserve">
          <source>Creates an iterator that works like map, but flattens nested structure. &lt;a href=&quot;../../iter/trait.iterator#method.flat_map&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">マップのように機能するが、ネストされた構造を平坦化するイテレータを作成します。&lt;a href=&quot;../../iter/trait.iterator#method.flat_map&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dc4207452d5e80483557f5fb875de17444c6f447" translate="yes" xml:space="preserve">
          <source>Creates an iterator that works like map, but flattens nested structure. &lt;a href=&quot;../iter/trait.iterator#method.flat_map&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">マップのように機能するが、ネストされた構造を平坦化するイテレータを作成します。&lt;a href=&quot;../iter/trait.iterator#method.flat_map&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e2be42476fdf9b971e829ea11ce8d7bb1fc5881e" translate="yes" xml:space="preserve">
          <source>Creates an iterator that works like map, but flattens nested structure. &lt;a href=&quot;iter/trait.iterator#method.flat_map&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">マップのように機能するが、ネストされた構造を平坦化するイテレータを作成します。&lt;a href=&quot;iter/trait.iterator#method.flat_map&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4f4dd12bd17c139dd66864290f91ff8c7838e685" translate="yes" xml:space="preserve">
          <source>Creates an iterator that works like map, but flattens nested structure. &lt;a href=&quot;trait.iterator#method.flat_map&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">マップのように機能するが、ネストされた構造を平坦化するイテレータを作成します。&lt;a href=&quot;trait.iterator#method.flat_map&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="481df8a265f7c4ab747b7cfa05930432b7765fdc" translate="yes" xml:space="preserve">
          <source>Creates an iterator that yields an element exactly once.</source>
          <target state="translated">要素を正確に一度だけ返すイテレータを作成します。</target>
        </trans-unit>
        <trans-unit id="67495929d54726a36a1f85df47900c9ad76aa4dd" translate="yes" xml:space="preserve">
          <source>Creates an iterator that yields elements based on a predicate.</source>
          <target state="translated">述語に基づいて要素を生成するイテレータを作成します。</target>
        </trans-unit>
        <trans-unit id="defdf8642db7a873bf62755d42d204b3295db3ac" translate="yes" xml:space="preserve">
          <source>Creates an iterator that yields elements based on a predicate. &lt;a href=&quot;../../../iter/trait.iterator#method.take_while&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">述語に基づいて要素を生成するイテレータを作成します。&lt;a href=&quot;../../../iter/trait.iterator#method.take_while&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a8a063d539723e40e04833f416f61856f873583" translate="yes" xml:space="preserve">
          <source>Creates an iterator that yields elements based on a predicate. &lt;a href=&quot;../../iter/trait.iterator#method.take_while&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">述語に基づいて要素を生成するイテレータを作成します。&lt;a href=&quot;../../iter/trait.iterator#method.take_while&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="db2f2b739457e0508cf1d24d6734468b0d3243db" translate="yes" xml:space="preserve">
          <source>Creates an iterator that yields elements based on a predicate. &lt;a href=&quot;../iter/trait.iterator#method.take_while&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">述語に基づいて要素を生成するイテレータを作成します。&lt;a href=&quot;../iter/trait.iterator#method.take_while&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3401570a23cc826789ad67dd6c078e36f64fc106" translate="yes" xml:space="preserve">
          <source>Creates an iterator that yields elements based on a predicate. &lt;a href=&quot;iter/trait.iterator#method.take_while&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">述語に基づいて要素を生成するイテレータを作成します。&lt;a href=&quot;iter/trait.iterator#method.take_while&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="85e064cef19a761bfe195fe697314f5e34cd5878" translate="yes" xml:space="preserve">
          <source>Creates an iterator that yields elements based on a predicate. &lt;a href=&quot;trait.iterator#method.take_while&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">述語に基づいて要素を生成するイテレータを作成します。&lt;a href=&quot;trait.iterator#method.take_while&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3abd3eb44fc09b94fd3919a99010944508f3869e" translate="yes" xml:space="preserve">
          <source>Creates an iterator that yields its first &lt;code&gt;n&lt;/code&gt; elements.</source>
          <target state="translated">最初の &lt;code&gt;n&lt;/code&gt; 個の要素を生成するイテレータを作成します。</target>
        </trans-unit>
        <trans-unit id="727a4330530572cbe05abfcafba027ed23e39fbb" translate="yes" xml:space="preserve">
          <source>Creates an iterator that yields its first &lt;code&gt;n&lt;/code&gt; elements. &lt;a href=&quot;../../../iter/trait.iterator#method.take&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">最初の &lt;code&gt;n&lt;/code&gt; 個の要素を生成するイテレータを作成します。&lt;a href=&quot;../../../iter/trait.iterator#method.take&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ce6d9e2f07ca59ad7288f807032ac57c774febfe" translate="yes" xml:space="preserve">
          <source>Creates an iterator that yields its first &lt;code&gt;n&lt;/code&gt; elements. &lt;a href=&quot;../../iter/trait.iterator#method.take&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">最初の &lt;code&gt;n&lt;/code&gt; 個の要素を生成するイテレータを作成します。&lt;a href=&quot;../../iter/trait.iterator#method.take&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="01a6c1d55ee3c08ecd1083fac99d461d4009dd08" translate="yes" xml:space="preserve">
          <source>Creates an iterator that yields its first &lt;code&gt;n&lt;/code&gt; elements. &lt;a href=&quot;../iter/trait.iterator#method.take&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">最初の &lt;code&gt;n&lt;/code&gt; 個の要素を生成するイテレータを作成します。&lt;a href=&quot;../iter/trait.iterator#method.take&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d7758fe43ae5eb1c90b40d8cf2cf3bd802e7a40f" translate="yes" xml:space="preserve">
          <source>Creates an iterator that yields its first &lt;code&gt;n&lt;/code&gt; elements. &lt;a href=&quot;iter/trait.iterator#method.take&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">最初の &lt;code&gt;n&lt;/code&gt; 個の要素を生成するイテレータを作成します。&lt;a href=&quot;iter/trait.iterator#method.take&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fa3e3041fb11f828e6981127fb881a4d418183f7" translate="yes" xml:space="preserve">
          <source>Creates an iterator that yields its first &lt;code&gt;n&lt;/code&gt; elements. &lt;a href=&quot;trait.iterator#method.take&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">最初の &lt;code&gt;n&lt;/code&gt; 個の要素を生成するイテレータを作成します。&lt;a href=&quot;trait.iterator#method.take&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e65fdbcde9c2de367244cdea69f84798872618af" translate="yes" xml:space="preserve">
          <source>Creates an iterator that yields nothing.</source>
          <target state="translated">何も生成しないイテレータを作成します。</target>
        </trans-unit>
        <trans-unit id="e2c003460c98676cf4762fdb3a362cc00ac1f6b8" translate="yes" xml:space="preserve">
          <source>Creates an iterator which &lt;a href=&quot;../../../clone/trait.clone#tymethod.clone&quot;&gt;&lt;code&gt;clone&lt;/code&gt;&lt;/a&gt;s all of its elements. &lt;a href=&quot;../../../iter/trait.iterator#method.cloned&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">すべての要素の&lt;a href=&quot;../../../clone/trait.clone#tymethod.clone&quot;&gt; &lt;code&gt;clone&lt;/code&gt; &lt;/a&gt;作成するイテレータを作成します。&lt;a href=&quot;../../../iter/trait.iterator#method.cloned&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="12789ecc106fc8d51d3a45ffbe45fae840038c3e" translate="yes" xml:space="preserve">
          <source>Creates an iterator which &lt;a href=&quot;../../clone/trait.clone#tymethod.clone&quot;&gt;&lt;code&gt;clone&lt;/code&gt;&lt;/a&gt;s all of its elements. &lt;a href=&quot;../../iter/trait.iterator#method.cloned&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">すべての要素の&lt;a href=&quot;../../clone/trait.clone#tymethod.clone&quot;&gt; &lt;code&gt;clone&lt;/code&gt; &lt;/a&gt;作成するイテレータを作成します。&lt;a href=&quot;../../iter/trait.iterator#method.cloned&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dd40bec1b1d98323abcce05b3546f71b0fe656c8" translate="yes" xml:space="preserve">
          <source>Creates an iterator which &lt;a href=&quot;../clone/trait.clone#tymethod.clone&quot;&gt;&lt;code&gt;clone&lt;/code&gt;&lt;/a&gt;s all of its elements.</source>
          <target state="translated">すべての要素を&lt;a href=&quot;../clone/trait.clone#tymethod.clone&quot;&gt; &lt;code&gt;clone&lt;/code&gt; &lt;/a&gt;するイテレータを作成します。</target>
        </trans-unit>
        <trans-unit id="35dbce8951288744b106eaf363579ecf518e79dc" translate="yes" xml:space="preserve">
          <source>Creates an iterator which &lt;a href=&quot;../clone/trait.clone#tymethod.clone&quot;&gt;&lt;code&gt;clone&lt;/code&gt;&lt;/a&gt;s all of its elements. &lt;a href=&quot;../iter/trait.iterator#method.cloned&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">すべての要素の&lt;a href=&quot;../clone/trait.clone#tymethod.clone&quot;&gt; &lt;code&gt;clone&lt;/code&gt; &lt;/a&gt;作成するイテレータを作成します。&lt;a href=&quot;../iter/trait.iterator#method.cloned&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d084f10641c4fb24cd76f018544c17a9f97f27f8" translate="yes" xml:space="preserve">
          <source>Creates an iterator which &lt;a href=&quot;../clone/trait.clone#tymethod.clone&quot;&gt;&lt;code&gt;clone&lt;/code&gt;&lt;/a&gt;s all of its elements. &lt;a href=&quot;trait.iterator#method.cloned&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">すべての要素の&lt;a href=&quot;../clone/trait.clone#tymethod.clone&quot;&gt; &lt;code&gt;clone&lt;/code&gt; &lt;/a&gt;作成するイテレータを作成します。&lt;a href=&quot;trait.iterator#method.cloned&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fdd427c3d17f49ef7f7e352f4c9e2e293082ade4" translate="yes" xml:space="preserve">
          <source>Creates an iterator which &lt;a href=&quot;clone/trait.clone#tymethod.clone&quot;&gt;&lt;code&gt;clone&lt;/code&gt;&lt;/a&gt;s all of its elements. &lt;a href=&quot;iter/trait.iterator#method.cloned&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">すべての要素の&lt;a href=&quot;clone/trait.clone#tymethod.clone&quot;&gt; &lt;code&gt;clone&lt;/code&gt; &lt;/a&gt;作成するイテレータを作成します。&lt;a href=&quot;iter/trait.iterator#method.cloned&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e14aeeb803a57cf9ed73fa566d29a326c81840f9" translate="yes" xml:space="preserve">
          <source>Creates an iterator which [&lt;code&gt;clone&lt;/code&gt;]s all of its elements. &lt;a href=&quot;../../../iter/trait.iterator#method.cloned&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">すべての要素を[ &lt;code&gt;clone&lt;/code&gt; ] するイテレータを作成します。&lt;a href=&quot;../../../iter/trait.iterator#method.cloned&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c903d6f30bfd038325abdf793aaea4685a66c583" translate="yes" xml:space="preserve">
          <source>Creates an iterator which [&lt;code&gt;clone&lt;/code&gt;]s all of its elements. &lt;a href=&quot;../../iter/trait.iterator#method.cloned&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">すべての要素を[ &lt;code&gt;clone&lt;/code&gt; ] するイテレータを作成します。&lt;a href=&quot;../../iter/trait.iterator#method.cloned&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="60eadf2efce07a8610ea80b7b2128257a935f74d" translate="yes" xml:space="preserve">
          <source>Creates an iterator which [&lt;code&gt;clone&lt;/code&gt;]s all of its elements. &lt;a href=&quot;../iter/trait.iterator#method.cloned&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">すべての要素を[ &lt;code&gt;clone&lt;/code&gt; ] するイテレータを作成します。&lt;a href=&quot;../iter/trait.iterator#method.cloned&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5ecfb075d57c46101ca32423be3f3875a865527a" translate="yes" xml:space="preserve">
          <source>Creates an iterator which [&lt;code&gt;clone&lt;/code&gt;]s all of its elements. &lt;a href=&quot;iter/trait.iterator#method.cloned&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">すべての要素を[ &lt;code&gt;clone&lt;/code&gt; ] するイテレータを作成します。&lt;a href=&quot;iter/trait.iterator#method.cloned&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ba7ed3ea63dc141c819c724858803e7719ef08a1" translate="yes" xml:space="preserve">
          <source>Creates an iterator which [&lt;code&gt;clone&lt;/code&gt;]s all of its elements. &lt;a href=&quot;trait.iterator#method.cloned&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">すべての要素を[ &lt;code&gt;clone&lt;/code&gt; ] するイテレータを作成します。&lt;a href=&quot;trait.iterator#method.cloned&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="39cb0b3163eba0877e6674381c55dc36f6d874d6" translate="yes" xml:space="preserve">
          <source>Creates an iterator which can use &lt;a href=&quot;../../../iter/struct.peekable#method.peek&quot;&gt;&lt;code&gt;peek&lt;/code&gt;&lt;/a&gt; to look at the next element of the iterator without consuming it. &lt;a href=&quot;../../../iter/trait.iterator#method.peekable&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../../iter/struct.peekable#method.peek&quot;&gt; &lt;code&gt;peek&lt;/code&gt; &lt;/a&gt;を使用して、イテレータの次の要素を消費せずに調べることができるイテレータを作成します。&lt;a href=&quot;../../../iter/trait.iterator#method.peekable&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bc9a57f9f6f09c53d11db16b09ec35e234a7ca10" translate="yes" xml:space="preserve">
          <source>Creates an iterator which can use &lt;a href=&quot;../../iter/struct.peekable#method.peek&quot;&gt;&lt;code&gt;peek&lt;/code&gt;&lt;/a&gt; to look at the next element of the iterator without consuming it. &lt;a href=&quot;../../iter/trait.iterator#method.peekable&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../iter/struct.peekable#method.peek&quot;&gt; &lt;code&gt;peek&lt;/code&gt; &lt;/a&gt;を使用して、イテレータの次の要素を消費せずに調べることができるイテレータを作成します。&lt;a href=&quot;../../iter/trait.iterator#method.peekable&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4472077dd42dc19c68b52b2067fee84c5b747585" translate="yes" xml:space="preserve">
          <source>Creates an iterator which can use &lt;a href=&quot;../iter/struct.peekable#method.peek&quot;&gt;&lt;code&gt;peek&lt;/code&gt;&lt;/a&gt; to look at the next element of the iterator without consuming it. &lt;a href=&quot;../iter/trait.iterator#method.peekable&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../iter/struct.peekable#method.peek&quot;&gt; &lt;code&gt;peek&lt;/code&gt; &lt;/a&gt;を使用して、イテレータの次の要素を消費せずに調べることができるイテレータを作成します。&lt;a href=&quot;../iter/trait.iterator#method.peekable&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3a6be5245abbbbe2b58c3419c843a41a802148eb" translate="yes" xml:space="preserve">
          <source>Creates an iterator which can use &lt;a href=&quot;iter/struct.peekable#method.peek&quot;&gt;&lt;code&gt;peek&lt;/code&gt;&lt;/a&gt; to look at the next element of the iterator without consuming it. &lt;a href=&quot;iter/trait.iterator#method.peekable&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;iter/struct.peekable#method.peek&quot;&gt; &lt;code&gt;peek&lt;/code&gt; &lt;/a&gt;を使用して、イテレータの次の要素を消費せずに調べることができるイテレータを作成します。&lt;a href=&quot;iter/trait.iterator#method.peekable&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="51a2457f515591109173fa8c288248aa5d4c7cdf" translate="yes" xml:space="preserve">
          <source>Creates an iterator which can use &lt;a href=&quot;struct.peekable#method.peek&quot;&gt;&lt;code&gt;peek&lt;/code&gt;&lt;/a&gt; to look at the next element of the iterator without consuming it.</source>
          <target state="translated">&lt;a href=&quot;struct.peekable#method.peek&quot;&gt; &lt;code&gt;peek&lt;/code&gt; &lt;/a&gt;を使用して、イテレータの次の要素を消費せずに調べることができるイテレータを作成します。</target>
        </trans-unit>
        <trans-unit id="5a9eabbb1da2ff9cd5ec65aec3b4628d2586eb6f" translate="yes" xml:space="preserve">
          <source>Creates an iterator which can use &lt;a href=&quot;struct.peekable#method.peek&quot;&gt;&lt;code&gt;peek&lt;/code&gt;&lt;/a&gt; to look at the next element of the iterator without consuming it. &lt;a href=&quot;trait.iterator#method.peekable&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;struct.peekable#method.peek&quot;&gt; &lt;code&gt;peek&lt;/code&gt; &lt;/a&gt;を使用して、イテレータの次の要素を消費せずに調べることができるイテレータを作成します。&lt;a href=&quot;trait.iterator#method.peekable&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9bcebcc930446d03010dd3c99ca8269fe10f63ee" translate="yes" xml:space="preserve">
          <source>Creates an iterator which can use &lt;code&gt;peek&lt;/code&gt; to look at the next element of the iterator without consuming it.</source>
          <target state="translated">&lt;code&gt;peek&lt;/code&gt; を使用してイテレータの次の要素を消費せずに調べることができるイテレータを作成します。</target>
        </trans-unit>
        <trans-unit id="e77c8c5308a9251dbac33ad2501fcd92d5ea2e43" translate="yes" xml:space="preserve">
          <source>Creates an iterator which can use &lt;code&gt;peek&lt;/code&gt; to look at the next element of the iterator without consuming it. &lt;a href=&quot;../../../iter/trait.iterator#method.peekable&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;peek&lt;/code&gt; を使用してイテレータの次の要素を消費せずに調べることができるイテレータを作成します。&lt;a href=&quot;../../../iter/trait.iterator#method.peekable&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="827658326eed969fcd2b07f339b3f06a3363accd" translate="yes" xml:space="preserve">
          <source>Creates an iterator which can use &lt;code&gt;peek&lt;/code&gt; to look at the next element of the iterator without consuming it. &lt;a href=&quot;../../iter/trait.iterator#method.peekable&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;peek&lt;/code&gt; を使用してイテレータの次の要素を消費せずに調べることができるイテレータを作成します。&lt;a href=&quot;../../iter/trait.iterator#method.peekable&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="99b6a6dcdff6d8fedc8d00ab2647f70dc162b8c3" translate="yes" xml:space="preserve">
          <source>Creates an iterator which can use &lt;code&gt;peek&lt;/code&gt; to look at the next element of the iterator without consuming it. &lt;a href=&quot;../iter/trait.iterator#method.peekable&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;peek&lt;/code&gt; を使用してイテレータの次の要素を消費せずに調べることができるイテレータを作成します。&lt;a href=&quot;../iter/trait.iterator#method.peekable&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d8d594d922785af5cd7bd114969860d4fa300493" translate="yes" xml:space="preserve">
          <source>Creates an iterator which can use &lt;code&gt;peek&lt;/code&gt; to look at the next element of the iterator without consuming it. &lt;a href=&quot;iter/trait.iterator#method.peekable&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;peek&lt;/code&gt; を使用してイテレータの次の要素を消費せずに調べることができるイテレータを作成します。&lt;a href=&quot;iter/trait.iterator#method.peekable&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6023b7df688365014948465f05370132dbfa3a86" translate="yes" xml:space="preserve">
          <source>Creates an iterator which can use &lt;code&gt;peek&lt;/code&gt; to look at the next element of the iterator without consuming it. &lt;a href=&quot;trait.iterator#method.peekable&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;peek&lt;/code&gt; を使用してイテレータの次の要素を消費せずに調べることができるイテレータを作成します。&lt;a href=&quot;trait.iterator#method.peekable&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4c6ef1828bd1e769e509aac448541e055bb78dce" translate="yes" xml:space="preserve">
          <source>Creates an iterator which copies all of its elements.</source>
          <target state="translated">すべての要素をコピーするイテレータを作成します。</target>
        </trans-unit>
        <trans-unit id="882d6773fdc39898c05736fb353d6bc86da4aa86" translate="yes" xml:space="preserve">
          <source>Creates an iterator which copies all of its elements. &lt;a href=&quot;../../../iter/trait.iterator#method.copied&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">すべての要素をコピーするイテレータを作成します。&lt;a href=&quot;../../../iter/trait.iterator#method.copied&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9f35f2d9a6f73755bbeafb8494fd1d16dbc378ed" translate="yes" xml:space="preserve">
          <source>Creates an iterator which copies all of its elements. &lt;a href=&quot;../../iter/trait.iterator#method.copied&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">すべての要素をコピーするイテレータを作成します。&lt;a href=&quot;../../iter/trait.iterator#method.copied&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="88a049897b0850ff1c4d35cc183bcbbd1e25e3ac" translate="yes" xml:space="preserve">
          <source>Creates an iterator which copies all of its elements. &lt;a href=&quot;../iter/trait.iterator#method.copied&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">すべての要素をコピーするイテレータを作成します。&lt;a href=&quot;../iter/trait.iterator#method.copied&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ee79d2c1b13c6f7e6bea368f647deef264895c6a" translate="yes" xml:space="preserve">
          <source>Creates an iterator which copies all of its elements. &lt;a href=&quot;iter/trait.iterator#method.copied&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">すべての要素をコピーするイテレータを作成します。&lt;a href=&quot;iter/trait.iterator#method.copied&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bdd99b99a28a313b887146457bfe7663e9ca17fa" translate="yes" xml:space="preserve">
          <source>Creates an iterator which copies all of its elements. &lt;a href=&quot;trait.iterator#method.copied&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">すべての要素をコピーするイテレータを作成します。&lt;a href=&quot;trait.iterator#method.copied&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d3314b2b0bceac435a5f2eb303797105b0022a10" translate="yes" xml:space="preserve">
          <source>Creates an iterator which ends after the first &lt;a href=&quot;../../../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../../../iter/trait.iterator#method.fuse&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">最初の&lt;a href=&quot;../../../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; の&lt;/a&gt;後に終了するイテレータを作成します。&lt;a href=&quot;../../../iter/trait.iterator#method.fuse&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="08fa10251e50d72c03ea9a73737cb7271bc5607b" translate="yes" xml:space="preserve">
          <source>Creates an iterator which ends after the first &lt;a href=&quot;../../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../../iter/trait.iterator#method.fuse&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">最初の&lt;a href=&quot;../../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; の&lt;/a&gt;後に終了するイテレータを作成します。&lt;a href=&quot;../../iter/trait.iterator#method.fuse&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e2e342ae274abdf1bc72d2e4ae1336161a4b7298" translate="yes" xml:space="preserve">
          <source>Creates an iterator which ends after the first &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">最初の&lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; の&lt;/a&gt;後で終了するイテレータを作成します。</target>
        </trans-unit>
        <trans-unit id="7ba32257a475ce5fea1c96814ee6ef529a511e0e" translate="yes" xml:space="preserve">
          <source>Creates an iterator which ends after the first &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../iter/trait.iterator#method.fuse&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">最初の&lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; の&lt;/a&gt;後に終了するイテレータを作成します。&lt;a href=&quot;../iter/trait.iterator#method.fuse&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d99efe10e5bb0b667800887447f2be34cdf5179c" translate="yes" xml:space="preserve">
          <source>Creates an iterator which ends after the first &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;trait.iterator#method.fuse&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">最初の&lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; の&lt;/a&gt;後に終了するイテレータを作成します。&lt;a href=&quot;trait.iterator#method.fuse&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b95effc925855e7d476626b959ac81b9d3c982cc" translate="yes" xml:space="preserve">
          <source>Creates an iterator which ends after the first &lt;a href=&quot;enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../iter/trait.iterator#method.fuse&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">最初の&lt;a href=&quot;enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; の&lt;/a&gt;後に終了するイテレータを作成します。&lt;a href=&quot;../iter/trait.iterator#method.fuse&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2b0ee707f8a13be652c70289a962c31eb32a32fb" translate="yes" xml:space="preserve">
          <source>Creates an iterator which ends after the first &lt;a href=&quot;option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;iter/trait.iterator#method.fuse&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">最初の&lt;a href=&quot;option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; の&lt;/a&gt;後に終了するイテレータを作成します。&lt;a href=&quot;iter/trait.iterator#method.fuse&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="32af1e82554414879cea343145cf11fbb6bb9348" translate="yes" xml:space="preserve">
          <source>Creates an iterator which ends after the first [&lt;code&gt;None&lt;/code&gt;]. &lt;a href=&quot;../../../iter/trait.iterator#method.fuse&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">最初の[ &lt;code&gt;None&lt;/code&gt; ]の後に終了する反復子を作成します。&lt;a href=&quot;../../../iter/trait.iterator#method.fuse&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="91cead2ea0727b6136acc0637707923b84f2793f" translate="yes" xml:space="preserve">
          <source>Creates an iterator which ends after the first [&lt;code&gt;None&lt;/code&gt;]. &lt;a href=&quot;../../iter/trait.iterator#method.fuse&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">最初の[ &lt;code&gt;None&lt;/code&gt; ]の後に終了する反復子を作成します。&lt;a href=&quot;../../iter/trait.iterator#method.fuse&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="82a9e286978ee039c291c271f9cf4655cef7d0c4" translate="yes" xml:space="preserve">
          <source>Creates an iterator which ends after the first [&lt;code&gt;None&lt;/code&gt;]. &lt;a href=&quot;../iter/trait.iterator#method.fuse&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">最初の[ &lt;code&gt;None&lt;/code&gt; ]の後に終了する反復子を作成します。&lt;a href=&quot;../iter/trait.iterator#method.fuse&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="45ec241e3bd6d19787705578724836afc440cfe9" translate="yes" xml:space="preserve">
          <source>Creates an iterator which ends after the first [&lt;code&gt;None&lt;/code&gt;]. &lt;a href=&quot;iter/trait.iterator#method.fuse&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">最初の[ &lt;code&gt;None&lt;/code&gt; ]の後に終了する反復子を作成します。&lt;a href=&quot;iter/trait.iterator#method.fuse&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="154982a7ad8be4f7b41cad489509e139717f7578" translate="yes" xml:space="preserve">
          <source>Creates an iterator which ends after the first [&lt;code&gt;None&lt;/code&gt;]. &lt;a href=&quot;trait.iterator#method.fuse&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">最初の[ &lt;code&gt;None&lt;/code&gt; ]の後に終了する反復子を作成します。&lt;a href=&quot;trait.iterator#method.fuse&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3f2236de71559e3a9d022df02e46f12cf977612a" translate="yes" xml:space="preserve">
          <source>Creates an iterator which gives the current iteration count as well as the next value.</source>
          <target state="translated">現在の反復回数と次の値を与えるイテレータを作成します。</target>
        </trans-unit>
        <trans-unit id="23705793484295c9aca16dfcd2d7b9c74a573b4f" translate="yes" xml:space="preserve">
          <source>Creates an iterator which gives the current iteration count as well as the next value. &lt;a href=&quot;../../../iter/trait.iterator#method.enumerate&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">現在の反復回数と次の値を提供する反復子を作成します。&lt;a href=&quot;../../../iter/trait.iterator#method.enumerate&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8abb02ee85539bb708dae2f14648dc0ed7c3cfa4" translate="yes" xml:space="preserve">
          <source>Creates an iterator which gives the current iteration count as well as the next value. &lt;a href=&quot;../../iter/trait.iterator#method.enumerate&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">現在の反復回数と次の値を提供する反復子を作成します。&lt;a href=&quot;../../iter/trait.iterator#method.enumerate&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f0341e655c9f90442f68630eb0295edadf41cbf5" translate="yes" xml:space="preserve">
          <source>Creates an iterator which gives the current iteration count as well as the next value. &lt;a href=&quot;../iter/trait.iterator#method.enumerate&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">現在の反復回数と次の値を提供する反復子を作成します。&lt;a href=&quot;../iter/trait.iterator#method.enumerate&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f31d824fa8c63b3049639e02cf1923074ba63297" translate="yes" xml:space="preserve">
          <source>Creates an iterator which gives the current iteration count as well as the next value. &lt;a href=&quot;iter/trait.iterator#method.enumerate&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">現在の反復回数と次の値を提供する反復子を作成します。&lt;a href=&quot;iter/trait.iterator#method.enumerate&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="adc24b023bb5c152a4d7777f2b3ea0523efed4a6" translate="yes" xml:space="preserve">
          <source>Creates an iterator which gives the current iteration count as well as the next value. &lt;a href=&quot;trait.iterator#method.enumerate&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">現在の反復回数と次の値を提供する反復子を作成します。&lt;a href=&quot;trait.iterator#method.enumerate&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d113cd3dbc514b266010f4520b840d4a55e27ca0" translate="yes" xml:space="preserve">
          <source>Creates an iterator which uses a closure to determine if a value should be removed.</source>
          <target state="translated">クロージャを使用して値を削除するかどうかを判断するイテレータを作成します。</target>
        </trans-unit>
        <trans-unit id="c4a4ed3912ef35e7fd3f56ce0bf301ef42fe2d9c" translate="yes" xml:space="preserve">
          <source>Creates an iterator which uses a closure to determine if an element should be removed.</source>
          <target state="translated">クロージャを使用して要素を削除するかどうかを判断するイテレータを作成します。</target>
        </trans-unit>
        <trans-unit id="203b9095060aad409cfc4113681b2e324e84e839" translate="yes" xml:space="preserve">
          <source>Creates an iterator which uses a closure to determine if an element should be yielded.</source>
          <target state="translated">クロージャを使用して、要素が生成されるべきかどうかを判断するイテレータを作成します。</target>
        </trans-unit>
        <trans-unit id="4c8a181d41317fccea6ad46eb1d953165f4f0cf2" translate="yes" xml:space="preserve">
          <source>Creates an iterator which uses a closure to determine if an element should be yielded. &lt;a href=&quot;../../../iter/trait.iterator#method.filter&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">クロージャーを使用して、要素を生成する必要があるかどうかを判別するイテレーターを作成します。&lt;a href=&quot;../../../iter/trait.iterator#method.filter&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bb2f9aa6b1774a0fa77473e163bdd979085a0e71" translate="yes" xml:space="preserve">
          <source>Creates an iterator which uses a closure to determine if an element should be yielded. &lt;a href=&quot;../../iter/trait.iterator#method.filter&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">クロージャーを使用して、要素を生成する必要があるかどうかを判別するイテレーターを作成します。&lt;a href=&quot;../../iter/trait.iterator#method.filter&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ca412038b14781eb771a1e3ecea5f6d1e01f6702" translate="yes" xml:space="preserve">
          <source>Creates an iterator which uses a closure to determine if an element should be yielded. &lt;a href=&quot;../iter/trait.iterator#method.filter&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">クロージャーを使用して、要素を生成する必要があるかどうかを判別するイテレーターを作成します。&lt;a href=&quot;../iter/trait.iterator#method.filter&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4c88578ee5c43eda00d7d21b6ab19c4a3152b2c8" translate="yes" xml:space="preserve">
          <source>Creates an iterator which uses a closure to determine if an element should be yielded. &lt;a href=&quot;iter/trait.iterator#method.filter&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">クロージャーを使用して、要素を生成する必要があるかどうかを判別するイテレーターを作成します。&lt;a href=&quot;iter/trait.iterator#method.filter&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b13a5c60bb67b365f21c10a35f3301f63893802d" translate="yes" xml:space="preserve">
          <source>Creates an iterator which uses a closure to determine if an element should be yielded. &lt;a href=&quot;trait.iterator#method.filter&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">クロージャーを使用して、要素を生成する必要があるかどうかを判別するイテレーターを作成します。&lt;a href=&quot;trait.iterator#method.filter&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="67685708baedc2d18956e1eb00ef7c7b11def155" translate="yes" xml:space="preserve">
          <source>Creates an owned &lt;a href=&quot;struct.pathbuf&quot;&gt;&lt;code&gt;PathBuf&lt;/code&gt;&lt;/a&gt; like &lt;code&gt;self&lt;/code&gt; but with the given extension.</source>
          <target state="translated">所有する&lt;a href=&quot;struct.pathbuf&quot;&gt; &lt;code&gt;PathBuf&lt;/code&gt; を&lt;/a&gt;作成します &lt;code&gt;self&lt;/code&gt; ように指定された拡張子。</target>
        </trans-unit>
        <trans-unit id="7971d0c3df8d58c636b105fe17e1e7dd1a9daa00" translate="yes" xml:space="preserve">
          <source>Creates an owned &lt;a href=&quot;struct.pathbuf&quot;&gt;&lt;code&gt;PathBuf&lt;/code&gt;&lt;/a&gt; like &lt;code&gt;self&lt;/code&gt; but with the given file name.</source>
          <target state="translated">のような所有された&lt;a href=&quot;struct.pathbuf&quot;&gt; &lt;code&gt;PathBuf&lt;/code&gt; を&lt;/a&gt;作成します &lt;code&gt;self&lt;/code&gt; を、指定されたファイル名で。</target>
        </trans-unit>
        <trans-unit id="bed146dec3ccae2962c485beb600799bc9d7208f" translate="yes" xml:space="preserve">
          <source>Creates an owned &lt;a href=&quot;struct.pathbuf&quot;&gt;&lt;code&gt;PathBuf&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;path&lt;/code&gt; adjoined to &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">隣接する &lt;code&gt;path&lt;/code&gt; を持つ所有された&lt;a href=&quot;struct.pathbuf&quot;&gt; &lt;code&gt;PathBuf&lt;/code&gt; &lt;/a&gt;を作成します &lt;code&gt;self&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7ecff3c50af8c7de8755e03a0758cc5dd7873614" translate="yes" xml:space="preserve">
          <source>Creates an owned Cow&amp;lt;'a, B&amp;gt; with the default value for the contained owned value.</source>
          <target state="translated">含まれる所有値のデフォルト値を使用して、所有Cow &amp;lt;'a、B&amp;gt;を作成します。</target>
        </trans-unit>
        <trans-unit id="bb32215e552b5bff8cfa082f37b2f0845267e594" translate="yes" xml:space="preserve">
          <source>Creates an uninitialized value.</source>
          <target state="translated">初期化されていない値を作成します。</target>
        </trans-unit>
        <trans-unit id="ae78ef3c15f5eec7b3034bc6982499bd91d95bef" translate="yes" xml:space="preserve">
          <source>Creates an unnamed pair of connected sockets.</source>
          <target state="translated">接続されたソケットの名前のないペアを作成します。</target>
        </trans-unit>
        <trans-unit id="701f9ff53ac213295a5abb276de60038f73b86dc" translate="yes" xml:space="preserve">
          <source>Creates owned data from borrowed data, usually by cloning.</source>
          <target state="translated">借りたデータから所有データを作成します。</target>
        </trans-unit>
        <trans-unit id="ddc18af5c8a730bb78c01ef4f06a648ee5dc5db0" translate="yes" xml:space="preserve">
          <source>Creates owned data from borrowed data, usually by cloning. &lt;a href=&quot;../../../borrow/trait.toowned#tymethod.to_owned&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">借用データから、通常はクローン作成によって所有データを作成します。&lt;a href=&quot;../../../borrow/trait.toowned#tymethod.to_owned&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="967bd6ff47348028996371f8f666143c2054af48" translate="yes" xml:space="preserve">
          <source>Creates owned data from borrowed data, usually by cloning. &lt;a href=&quot;../../borrow/trait.toowned#tymethod.to_owned&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">借用データから、通常はクローン作成によって所有データを作成します。&lt;a href=&quot;../../borrow/trait.toowned#tymethod.to_owned&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7ea08e00cafa42eb0c8f84acb27b991bead92079" translate="yes" xml:space="preserve">
          <source>Creates owned data from borrowed data, usually by cloning. &lt;a href=&quot;../borrow/trait.toowned#tymethod.to_owned&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">借用データから、通常はクローン作成によって所有データを作成します。&lt;a href=&quot;../borrow/trait.toowned#tymethod.to_owned&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d06902a78a0b3edb98c112c1f936bcab3a931e1f" translate="yes" xml:space="preserve">
          <source>Creates owned data from borrowed data, usually by cloning. &lt;a href=&quot;borrow/trait.toowned#tymethod.to_owned&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">借用データから、通常はクローン作成によって所有データを作成します。&lt;a href=&quot;borrow/trait.toowned#tymethod.to_owned&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4bf7b97abae7df3a33aa6a6fe4ccba30dd84b9aa" translate="yes" xml:space="preserve">
          <source>Creates owned data from borrowed data, usually by cloning. &lt;a href=&quot;trait.toowned#tymethod.to_owned&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">借用データから、通常はクローン作成によって所有データを作成します。&lt;a href=&quot;trait.toowned#tymethod.to_owned&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0378c5ade8abee6a513285c0d68f23d33d9ccc7b" translate="yes" xml:space="preserve">
          <source>Creates the specified directory with the options configured in this builder.</source>
          <target state="translated">このビルダで設定したオプションで指定したディレクトリを作成します。</target>
        </trans-unit>
        <trans-unit id="4d7fa3aa189247d5d2cea12579ebc28587da0842" translate="yes" xml:space="preserve">
          <source>Creates two handles for a file named &lt;code&gt;foo.txt&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;foo.txt&lt;/code&gt; という名前のファイルに2つのハンドルを作成します。</target>
        </trans-unit>
        <trans-unit id="b91c967685246a4f9cd2562dd07262930f218939" translate="yes" xml:space="preserve">
          <source>Creating Custom Types for Validation</source>
          <target state="translated">バリデーション用のカスタム型の作成</target>
        </trans-unit>
        <trans-unit id="e58c4dcd32615ae770b17c57ed22daac02b2114e" translate="yes" xml:space="preserve">
          <source>Creating Idiomatic &lt;code id=&quot;creating-idiomatic-use-paths&quot;&gt;use&lt;/code&gt; Paths</source>
          <target state="translated">慣用的な &lt;code id=&quot;creating-idiomatic-use-paths&quot;&gt;use&lt;/code&gt; 作成パスの</target>
        </trans-unit>
        <trans-unit id="95aef9f7c3c70372bdcc535ee6a6194e2e9e78ef" translate="yes" xml:space="preserve">
          <source>Creating Instances From Other Instances With Struct Update Syntax</source>
          <target state="translated">構造更新構文を使用した他のインスタンスからのインスタンスの作成</target>
        </trans-unit>
        <trans-unit id="281a2adb2dbc8e4a7b3f6a301d3929a5493a9bfe" translate="yes" xml:space="preserve">
          <source>Creating Multiple Producers by Cloning the Transmitter</source>
          <target state="translated">トランスミッターのクローンを作成して複数のプロデューサーを作成する</target>
        </trans-unit>
        <trans-unit id="9db589a5a3041bd31f08fadc3d5126877f80fc31" translate="yes" xml:space="preserve">
          <source>Creating Our Own Iterators with the &lt;code id=&quot;creating-our-own-iterators-with-the-iterator-trait&quot;&gt;Iterator&lt;/code&gt; Trait</source>
          <target state="translated">私たち自身のイテレータを作成する &lt;code id=&quot;creating-our-own-iterators-with-the-iterator-trait&quot;&gt;Iterator&lt;/code&gt; 特性を使用</target>
        </trans-unit>
        <trans-unit id="b590c164f8e65d879f0c7d9b0c7d8a14707256e6" translate="yes" xml:space="preserve">
          <source>Creating Space to Store the Threads</source>
          <target state="translated">スレッドを格納するスペースの作成</target>
        </trans-unit>
        <trans-unit id="4698079e161988af5b053b1ab73e152fcfc21759" translate="yes" xml:space="preserve">
          <source>Creating Type Synonyms with Type Aliases</source>
          <target state="translated">型のエイリアスで型の同義語を作成する</target>
        </trans-unit>
        <trans-unit id="2dae49e8113a7260323bd03d57515a21b7cf77cd" translate="yes" xml:space="preserve">
          <source>Creating a &lt;a href=&quot;enum.socketaddr&quot;&gt;&lt;code&gt;SocketAddr&lt;/code&gt;&lt;/a&gt; iterator from a hostname:</source>
          <target state="translated">ホスト名から&lt;a href=&quot;enum.socketaddr&quot;&gt; &lt;code&gt;SocketAddr&lt;/code&gt; &lt;/a&gt;イテレータを作成する：</target>
        </trans-unit>
        <trans-unit id="3483d4d793af76cc22890817eaa0d84e72c7c9c3" translate="yes" xml:space="preserve">
          <source>Creating a &lt;a href=&quot;enum.socketaddr&quot;&gt;&lt;code&gt;SocketAddr&lt;/code&gt;&lt;/a&gt; iterator that yields multiple items:</source>
          <target state="translated">複数の項目を生成する&lt;a href=&quot;enum.socketaddr&quot;&gt; &lt;code&gt;SocketAddr&lt;/code&gt; &lt;/a&gt;イテレータを作成します。</target>
        </trans-unit>
        <trans-unit id="59a132e8be749da0cc175444399331dc4575a63d" translate="yes" xml:space="preserve">
          <source>Creating a &lt;a href=&quot;enum.socketaddr&quot;&gt;&lt;code&gt;SocketAddr&lt;/code&gt;&lt;/a&gt; iterator that yields one item:</source>
          <target state="translated">1つの項目を生成する&lt;a href=&quot;enum.socketaddr&quot;&gt; &lt;code&gt;SocketAddr&lt;/code&gt; &lt;/a&gt;イテレーターを作成します。</target>
        </trans-unit>
        <trans-unit id="e164416054aa53741f6ff09d810e80d36b4cfd7b" translate="yes" xml:space="preserve">
          <source>Creating a &lt;code&gt;CStr&lt;/code&gt; with an interior nul byte is an error:</source>
          <target state="translated">内部ヌルバイトで &lt;code&gt;CStr&lt;/code&gt; を作成するとエラーになります。</target>
        </trans-unit>
        <trans-unit id="36e1a90c7a5ecd913b7b8db54dc86b44cb68a2dd" translate="yes" xml:space="preserve">
          <source>Creating a &lt;code&gt;CStr&lt;/code&gt; without a trailing nul terminator is an error:</source>
          <target state="translated">末尾のヌルターミネータなしで &lt;code&gt;CStr&lt;/code&gt; を作成するとエラーになります。</target>
        </trans-unit>
        <trans-unit id="d18514ce56e02fd691951f8261f5e6e4f5369fc5" translate="yes" xml:space="preserve">
          <source>Creating a &lt;code&gt;CString&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;CString&lt;/code&gt; の作成</target>
        </trans-unit>
        <trans-unit id="fd7d519ebcaf64eaa062db8abd6cb7904c07784a" translate="yes" xml:space="preserve">
          <source>Creating a Constructor for &lt;code id=&quot;creating-a-constructor-for-config&quot;&gt;Config&lt;/code&gt;</source>
          <target state="translated">コンストラクタの作成 &lt;code id=&quot;creating-a-constructor-for-config&quot;&gt;Config&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e0c98e95c6955a04f56de2990644268b7fd4115e" translate="yes" xml:space="preserve">
          <source>Creating a New Hash Map</source>
          <target state="translated">新しいハッシュマップの作成</target>
        </trans-unit>
        <trans-unit id="2e315682cf94e87497ea96c14bdee549d9b39e7e" translate="yes" xml:space="preserve">
          <source>Creating a New String</source>
          <target state="translated">新しい文字列の作成</target>
        </trans-unit>
        <trans-unit id="9189dd8a059e15dd589153c8067adf68af9afba9" translate="yes" xml:space="preserve">
          <source>Creating a New Thread with &lt;code id=&quot;creating-a-new-thread-with-spawn&quot;&gt;spawn&lt;/code&gt;</source>
          <target state="translated">&lt;code id=&quot;creating-a-new-thread-with-spawn&quot;&gt;spawn&lt;/code&gt; で新しいスレッドを作成する</target>
        </trans-unit>
        <trans-unit id="ee11e74a230667594e32ea457143ed8890765ed0" translate="yes" xml:space="preserve">
          <source>Creating a New Vector</source>
          <target state="translated">新しいベクトルの作成</target>
        </trans-unit>
        <trans-unit id="b7ccf108289683dd08766b1b02554cc04d23f839" translate="yes" xml:space="preserve">
          <source>Creating a Project Directory</source>
          <target state="translated">プロジェクトディレクトリの作成</target>
        </trans-unit>
        <trans-unit id="5d8c3047434e605f81eabc44a8139356753b302c" translate="yes" xml:space="preserve">
          <source>Creating a Project with Cargo</source>
          <target state="translated">カーゴを使ったプロジェクトの作成</target>
        </trans-unit>
        <trans-unit id="a8fd4fb040699572be6026dbf84fdba10f0e62d4" translate="yes" xml:space="preserve">
          <source>Creating a Reference Cycle</source>
          <target state="translated">リファレンスサイクルの作成</target>
        </trans-unit>
        <trans-unit id="b974704f6ef951ecf8626b598cef77bc0a08c2e3" translate="yes" xml:space="preserve">
          <source>Creating a Safe Abstraction over Unsafe Code</source>
          <target state="translated">安全でないコードに対する安全な抽象化の作成</target>
        </trans-unit>
        <trans-unit id="fe6de9c15f6bdce27923e7d5ca37285b7c22410b" translate="yes" xml:space="preserve">
          <source>Creating a Similar Interface for a Finite Number of Threads</source>
          <target state="translated">有限のスレッド数のための類似インターフェースの作成</target>
        </trans-unit>
        <trans-unit id="2fbd9625d5f3e725701f876d10cc13fc4112d9a8" translate="yes" xml:space="preserve">
          <source>Creating a Tree Data Structure: a &lt;code id=&quot;creating-a-tree-data-structure-a-node-with-child-nodes&quot;&gt;Node&lt;/code&gt; with Child Nodes</source>
          <target state="translated">ツリーデータ構造の作成： &lt;code id=&quot;creating-a-tree-data-structure-a-node-with-child-nodes&quot;&gt;Node&lt;/code&gt; の子ノードとし</target>
        </trans-unit>
        <trans-unit id="ef16ef6d39d7d0cd11021caf5199b86d3bf34464" translate="yes" xml:space="preserve">
          <source>Creating a Workspace</source>
          <target state="translated">ワークスペースの作成</target>
        </trans-unit>
        <trans-unit id="bb43c170478771fd57574f373f4020eae5f6879c" translate="yes" xml:space="preserve">
          <source>Creating a buffer with a buffer of a hundred bytes.</source>
          <target state="translated">100バイトのバッファを使ってバッファを作成します。</target>
        </trans-unit>
        <trans-unit id="ca21c0d301f5d8fbd8d2dca546f4c0cbe7cb1ddf" translate="yes" xml:space="preserve">
          <source>Creating a buffer with ten bytes of capacity:</source>
          <target state="translated">容量10バイトのバッファを作成します。</target>
        </trans-unit>
        <trans-unit id="0c69fdf0d5ae468db009b3051da8076128c56f44" translate="yes" xml:space="preserve">
          <source>Creating a default implementation for &lt;code&gt;summarize&lt;/code&gt; doesn&amp;rsquo;t require us to change anything about the implementation of &lt;code&gt;Summary&lt;/code&gt; on &lt;code&gt;Tweet&lt;/code&gt; in Listing 10-13. The reason is that the syntax for overriding a default implementation is the same as the syntax for implementing a trait method that doesn&amp;rsquo;t have a default implementation.</source>
          <target state="translated">以下のためのデフォルトの実装の作成 &lt;code&gt;summarize&lt;/code&gt; の実装について何かを変更するために私達を必要としない &lt;code&gt;Summary&lt;/code&gt; について &lt;code&gt;Tweet&lt;/code&gt; リスト10-13でを。その理由は、デフォルトの実装をオーバーライドするための構文は、デフォルトの実装を持たない特性メソッドを実装するための構文と同じだからです。</target>
        </trans-unit>
        <trans-unit id="3155248b3340760fb6115eb644e581c5500c61d8" translate="yes" xml:space="preserve">
          <source>Creating a new reference from an existing reference counted pointer is done using the &lt;code&gt;Clone&lt;/code&gt; trait implemented for &lt;a href=&quot;struct.arc&quot;&gt;&lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;struct.weak&quot;&gt;&lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">既存の参照カウントポインターから新しい参照を作成するには、&lt;a href=&quot;struct.arc&quot;&gt; &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;struct.weak&quot;&gt; &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt;実装された &lt;code&gt;Clone&lt;/code&gt; トレイトを使用します。</target>
        </trans-unit>
        <trans-unit id="bed2471f726fd2aede8564163bf80e06b40873fb" translate="yes" xml:space="preserve">
          <source>Creating a new reference from an existing reference counted pointer is done using the &lt;code&gt;Clone&lt;/code&gt; trait implemented for &lt;a href=&quot;struct.rc&quot;&gt;&lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;struct.weak&quot;&gt;&lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">既存の参照カウントポインターから新しい参照を作成するには、&lt;a href=&quot;struct.rc&quot;&gt; &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;struct.weak&quot;&gt; &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt;実装された &lt;code&gt;Clone&lt;/code&gt; トレイトを使用します。</target>
        </trans-unit>
        <trans-unit id="1e14175bfd0147826f96a0e9436d688a0a348233" translate="yes" xml:space="preserve">
          <source>Creating a new reference from an existing reference-counted pointer is done using the &lt;code&gt;Clone&lt;/code&gt; trait implemented for &lt;a href=&quot;struct.arc&quot;&gt;&lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;struct.weak&quot;&gt;&lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">既存の参照カウントポインタから新しい参照を作成するには、&lt;a href=&quot;struct.arc&quot;&gt; &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;struct.weak&quot;&gt; &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt;実装されている &lt;code&gt;Clone&lt;/code&gt; トレイトを使用します。</target>
        </trans-unit>
        <trans-unit id="2df503bd8e4b797228dc511030950254c8d88d71" translate="yes" xml:space="preserve">
          <source>Creating a new reference to the same allocation as an existing reference counted pointer is done using the &lt;code&gt;Clone&lt;/code&gt; trait implemented for &lt;a href=&quot;struct.rc&quot;&gt;&lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;struct.weak&quot;&gt;&lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">既存の参照カウントポインタと同じ割り当てへの新しい参照の作成は、&lt;a href=&quot;struct.rc&quot;&gt; &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;struct.weak&quot;&gt; &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt;実装された &lt;code&gt;Clone&lt;/code&gt; トレイトを使用して行われます。</target>
        </trans-unit>
        <trans-unit id="f8afa237fc65052057478185a51b021d673e4053" translate="yes" xml:space="preserve">
          <source>Creating a pointer does no harm; it&amp;rsquo;s only when we try to access the value that it points at that we might end up dealing with an invalid value.</source>
          <target state="translated">ポインタを作成しても害はありません。値にアクセスしようとしたときに初めて、無効な値を処理する可能性があります。</target>
        </trans-unit>
        <trans-unit id="bac4b5cd7d35c8c30e7df74ae098dd899ac6a303" translate="yes" xml:space="preserve">
          <source>Creating a recursive data structure:</source>
          <target state="translated">再帰的なデータ構造を作成します。</target>
        </trans-unit>
        <trans-unit id="401fc4c410307acff3a44c153449f38ad5f15638" translate="yes" xml:space="preserve">
          <source>Creating a reference with &lt;code&gt;&amp;amp;&lt;/code&gt;/&lt;code&gt;&amp;amp;mut&lt;/code&gt; is only allowed if the pointer is properly aligned and points to initialized data. For cases where those requirements do not hold, raw pointers should be used instead. However, &lt;code&gt;&amp;amp;expr as *const _&lt;/code&gt; creates a reference before casting it to a raw pointer, and that reference is subject to the same rules as all other references. This macro can create a raw pointer &lt;em&gt;without&lt;/em&gt; creating a reference first.</source>
          <target state="translated">&lt;code&gt;&amp;amp;&lt;/code&gt; / &lt;code&gt;&amp;amp;mut&lt;/code&gt; を使用して参照を作成できるのは、ポインターが適切に配置され、初期化されたデータを指している場合のみです。これらの要件が満たされない場合は、代わりに生のポインターを使用する必要があります。ただし、 &lt;code&gt;&amp;amp;expr as *const _&lt;/code&gt; は、生のポインターにキャストする前に参照を作成し、その参照は他のすべての参照と同じ規則に従います。このマクロは、最初に参照&lt;em&gt;を&lt;/em&gt;作成&lt;em&gt;せずに&lt;/em&gt;生のポインター&lt;em&gt;を&lt;/em&gt;作成できます。</target>
        </trans-unit>
        <trans-unit id="d457e6e872c947c9858291a8b183690b8647ed50" translate="yes" xml:space="preserve">
          <source>Creating a reference with &lt;code&gt;&amp;amp;&lt;/code&gt;/&lt;code&gt;&amp;amp;mut&lt;/code&gt; is only allowed if the pointer is properly aligned and points to initialized data. For cases where those requirements do not hold, raw pointers should be used instead. However, &lt;code&gt;&amp;amp;mut expr as *mut _&lt;/code&gt; creates a reference before casting it to a raw pointer, and that reference is subject to the same rules as all other references. This macro can create a raw pointer &lt;em&gt;without&lt;/em&gt; creating a reference first.</source>
          <target state="translated">&lt;code&gt;&amp;amp;&lt;/code&gt; / &lt;code&gt;&amp;amp;mut&lt;/code&gt; を使用して参照を作成できるのは、ポインターが適切に配置され、初期化されたデータを指している場合のみです。これらの要件が満たされない場合は、代わりに生のポインターを使用する必要があります。ただし、 &lt;code&gt;&amp;amp;mut expr as *mut _&lt;/code&gt; は、生のポインターにキャストする前に参照を作成し、その参照は他のすべての参照と同じ規則に従います。このマクロは、最初に参照&lt;em&gt;を&lt;/em&gt;作成&lt;em&gt;せずに&lt;/em&gt;生のポインター&lt;em&gt;を&lt;/em&gt;作成できます。</target>
        </trans-unit>
        <trans-unit id="721726d794bbfad2ff15cd91c4dc825f3dab1674" translate="yes" xml:space="preserve">
          <source>Creating a thread.</source>
          <target state="translated">スレッドを作成します。</target>
        </trans-unit>
        <trans-unit id="85f3ab0d5f8018477a4992240494f023bf8f357e" translate="yes" xml:space="preserve">
          <source>Creating a useful public API structure is more of an art than a science, and you can iterate to find the API that works best for your users. Choosing &lt;code&gt;pub use&lt;/code&gt; gives you flexibility in how you structure your crate internally and decouples that internal structure from what you present to your users. Look at some of the code of crates you&amp;rsquo;ve installed to see if their internal structure differs from their public API.</source>
          <target state="translated">有用なパブリックAPI構造を作成することは、科学というよりは芸術であり、ユーザーに最適なAPIを見つけるために反復することができます。 &lt;code&gt;pub use&lt;/code&gt; を選択すると、クレートを内部で構造化する方法に柔軟性が与えられ、その内部構造がユーザーに提示するものから切り離されます。インストールした箱のコードのいくつかを見て、それらの内部構造がパブリックAPIと異なるかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="48e00a2c170f31ced029650b5c59266d551bac00" translate="yes" xml:space="preserve">
          <source>Creating a variable and assigning a value to it with the &lt;code&gt;let&lt;/code&gt; keyword is a statement. In Listing 3-1, &lt;code&gt;let y = 6;&lt;/code&gt; is a statement.</source>
          <target state="translated">変数を作成し、 &lt;code&gt;let&lt;/code&gt; キーワードを使用して変数に値を割り当てることは、ステートメントです。リスト3-1では &lt;code&gt;let y = 6;&lt;/code&gt; ステートメントです。</target>
        </trans-unit>
        <trans-unit id="e3eb572e9e38354f90eaddb13eba31e4eff64056" translate="yes" xml:space="preserve">
          <source>Creating an &lt;code&gt;OsString&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;OsString&lt;/code&gt; の作成</target>
        </trans-unit>
        <trans-unit id="b26775fa56c32993f352ff34f22a5172bf15ee00" translate="yes" xml:space="preserve">
          <source>Creating an Abstraction of Behavior with Closures</source>
          <target state="translated">クロージャを用いた行動の抽象化</target>
        </trans-unit>
        <trans-unit id="21a15f2984b574f0c8e2238c944b0011d3d87bc5" translate="yes" xml:space="preserve">
          <source>Creating an invalid value:</source>
          <target state="translated">無効な値を作成します。</target>
        </trans-unit>
        <trans-unit id="30cf21ff3df48039c65b3e456cb5205e777d558f" translate="yes" xml:space="preserve">
          <source>Creating an iterator of your own involves two steps: creating a &lt;code&gt;struct&lt;/code&gt; to hold the iterator's state, and then &lt;code&gt;impl&lt;/code&gt;ementing &lt;a href=&quot;trait.iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; for that &lt;code&gt;struct&lt;/code&gt;. This is why there are so many &lt;code&gt;struct&lt;/code&gt;s in this module: there is one for each iterator and iterator adapter.</source>
          <target state="translated">あなた自身のイテレータを作成するには、2つのステップが含まれます作成 &lt;code&gt;struct&lt;/code&gt; イテレータの状態を保持し、その後する &lt;code&gt;impl&lt;/code&gt; ementing &lt;a href=&quot;trait.iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; を&lt;/a&gt;そのための &lt;code&gt;struct&lt;/code&gt; 。これが、非常に多くの &lt;code&gt;struct&lt;/code&gt; がある理由です、このモジュールにです。各反復子と反復子アダプターに1つあります。</target>
        </trans-unit>
        <trans-unit id="de47f2f30a0e300da42db4f0c8ef38c9b4f14c4d" translate="yes" xml:space="preserve">
          <source>Creating an iterator of your own involves two steps: creating a &lt;code&gt;struct&lt;/code&gt; to hold the iterator's state, and then implementing &lt;a href=&quot;trait.iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; for that &lt;code&gt;struct&lt;/code&gt;. This is why there are so many &lt;code&gt;struct&lt;/code&gt;s in this module: there is one for each iterator and iterator adapter.</source>
          <target state="translated">独自のイテレータを作成するには、2つのステップが必要です。イテレータの状態を保持する &lt;code&gt;struct&lt;/code&gt; を作成することと、その &lt;code&gt;struct&lt;/code&gt; &lt;a href=&quot;trait.iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt;を実装することです。これが、このモジュールに非常に多くの &lt;code&gt;struct&lt;/code&gt; がある理由です。イテレーターとイテレーターアダプターごとに1つあります。</target>
        </trans-unit>
        <trans-unit id="f373ce67a69fc6668592cdf51f774e1426c7e7b6" translate="yes" xml:space="preserve">
          <source>Creating function pointers</source>
          <target state="translated">関数ポインタの作成</target>
        </trans-unit>
        <trans-unit id="db7cb17e1882182f2d09e09c746d876964566c78" translate="yes" xml:space="preserve">
          <source>Creating reference cycles is not easily done, but it&amp;rsquo;s not impossible either. If you have &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; values that contain &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; values or similar nested combinations of types with interior mutability and reference counting, you must ensure that you don&amp;rsquo;t create cycles; you can&amp;rsquo;t rely on Rust to catch them. Creating a reference cycle would be a logic bug in your program that you should use automated tests, code reviews, and other software development practices to minimize.</source>
          <target state="translated">参照サイクルの作成は簡単ではありませんが、不可能ではありません。あなたが持っている場合は &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; 含む値 &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; 値または内部可変性と参照カウントを持つタイプの同様のネストされた組み合わせを、あなたはサイクルを作成しないことを確認する必要があります。 Rustに頼ってそれらをキャッチすることはできません。参照サイクルの作成は、自動テスト、コードレビュー、および他のソフトウェア開発手法を使用して最小化する必要があるプログラムの論理バグになります。</target>
        </trans-unit>
        <trans-unit id="4711649d8e68850225f9964b813aebe3a34d71ea" translate="yes" xml:space="preserve">
          <source>Creating the &lt;code&gt;leaf&lt;/code&gt; node looks similar to how creating the &lt;code&gt;leaf&lt;/code&gt; node looked in Listing 15-27 with the exception of the &lt;code&gt;parent&lt;/code&gt; field: &lt;code&gt;leaf&lt;/code&gt; starts out without a parent, so we create a new, empty &lt;code&gt;Weak&amp;lt;Node&amp;gt;&lt;/code&gt; reference instance.</source>
          <target state="translated">&lt;code&gt;leaf&lt;/code&gt; ノードの作成は、リスト15-27での &lt;code&gt;leaf&lt;/code&gt; ノードの作成と似ていますが、 &lt;code&gt;parent&lt;/code&gt; フィールドは異なります。 &lt;code&gt;leaf&lt;/code&gt; は親なしで開始されるため、新しい空の &lt;code&gt;Weak&amp;lt;Node&amp;gt;&lt;/code&gt; 参照インスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="f2ac2c4b5c578085e3dfef13721b4933c9478d42" translate="yes" xml:space="preserve">
          <source>Creating the Second Crate in the Workspace</source>
          <target state="translated">ワークスペースに2つ目のクレートを作成する</target>
        </trans-unit>
        <trans-unit id="0e2c977abbc75ff9fc7022f38fc72e63f3d09820" translate="yes" xml:space="preserve">
          <source>Creating the Second Package in the Workspace</source>
          <target state="translated">ワークスペースでの 2 番目のパッケージの作成</target>
        </trans-unit>
        <trans-unit id="3580e47e8c860d2365136c73cc27802685f34968" translate="yes" xml:space="preserve">
          <source>Creation from &lt;a href=&quot;fn.spawn&quot;&gt;&lt;code&gt;thread::spawn&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;fn.spawn&quot;&gt; &lt;code&gt;thread::spawn&lt;/code&gt; &lt;/a&gt;からの作成：</target>
        </trans-unit>
        <trans-unit id="527737aa0cd6cb949e436ad2dd95b61bcbaaafbf" translate="yes" xml:space="preserve">
          <source>Creation from &lt;a href=&quot;struct.builder#method.spawn&quot;&gt;&lt;code&gt;thread::Builder::spawn&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;struct.builder#method.spawn&quot;&gt; &lt;code&gt;thread::Builder::spawn&lt;/code&gt; &lt;/a&gt;からの作成：</target>
        </trans-unit>
        <trans-unit id="1db244720a79413acff359e95fdbab48f9a3a881" translate="yes" xml:space="preserve">
          <source>Credentials for a UNIX process for credentials passing.</source>
          <target state="translated">クレデンシャルを渡すためのUNIXプロセスのクレデンシャル。</target>
        </trans-unit>
        <trans-unit id="beaa2e9dbdf1ef3ec15f5de471f07f4851c7dc4d" translate="yes" xml:space="preserve">
          <source>Cross-compilation</source>
          <target state="translated">Cross-compilation</target>
        </trans-unit>
        <trans-unit id="973c2c12a3762ea198b96014e1e40bfb68f5a78a" translate="yes" xml:space="preserve">
          <source>Cross-platform path manipulation.</source>
          <target state="translated">クロスプラットフォームでのパス操作。</target>
        </trans-unit>
        <trans-unit id="8330e1ea0752165532d1cdddcd3f57aa937181c8" translate="yes" xml:space="preserve">
          <source>Crucially, we have to be able to rely on &lt;a href=&quot;../ops/trait.drop#tymethod.drop&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt; being called. If an element could be deallocated or otherwise invalidated without calling &lt;a href=&quot;../ops/trait.drop#tymethod.drop&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt;, the pointers into it from its neighboring elements would become invalid, which would break the data structure.</source>
          <target state="translated">重要なのは、&lt;a href=&quot;../ops/trait.drop#tymethod.drop&quot;&gt; &lt;code&gt;drop&lt;/code&gt; &lt;/a&gt;が呼び出されることに依存できる必要があるということです。&lt;a href=&quot;../ops/trait.drop#tymethod.drop&quot;&gt; &lt;code&gt;drop&lt;/code&gt; &lt;/a&gt;を呼び出さずに要素の割り当てを解除したり無効にしたりできると、隣接する要素から要素へのポインタが無効になり、データ構造が破損します。</target>
        </trans-unit>
        <trans-unit id="026e6ffc6c794c4e295872ca0b6da98b4bff0321" translate="yes" xml:space="preserve">
          <source>Crucially, we have to be able to rely on &lt;code&gt;drop&lt;/code&gt; being called. If an element could be deallocated or otherwise invalidated without calling &lt;code&gt;drop&lt;/code&gt;, the pointers into it from its neighbouring elements would become invalid, which would break the data structure.</source>
          <target state="translated">重要なのは、 &lt;code&gt;drop&lt;/code&gt; が呼び出されることに依存できるようにする必要があることです。 &lt;code&gt;drop&lt;/code&gt; を呼び出さずに要素の割り当てを解除したり無効にしたりできる場合、隣接する要素からその要素へのポインタは無効になり、データ構造が壊れます。</target>
        </trans-unit>
        <trans-unit id="8f3896c45fffd6cca2d32bcbab32873cb06fb1e6" translate="yes" xml:space="preserve">
          <source>Curly braces</source>
          <target state="translated">カーリーブレース</target>
        </trans-unit>
        <trans-unit id="ac9b5b2108eb76ae977a14bf5492a0eded19d63d" translate="yes" xml:space="preserve">
          <source>Curly brackets typically aren&amp;rsquo;t used if the match arm code is short, as it is in Listing 6-3 where each arm just returns a value. If you want to run multiple lines of code in a match arm, you can use curly brackets. For example, the following code would print &amp;ldquo;Lucky penny!&amp;rdquo; every time the method was called with a &lt;code&gt;Coin::Penny&lt;/code&gt; but would still return the last value of the block, &lt;code&gt;1&lt;/code&gt;:</source>
          <target state="translated">リスト6-3にあるように、マッチアームのコードが短い場合、通常、中括弧は使用されません。ここで、各アームは値を返すだけです。マッチアームで複数行のコードを実行する場合は、中かっこを使用できます。たとえば、次のコードは「Lucky penny！」を出力します。メソッドが &lt;code&gt;Coin::Penny&lt;/code&gt; 呼び出されるたびに、ブロックの最後の値 &lt;code&gt;1&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="bc60fa62ef84205a5c48b2525c6ebe4e4a5be0eb" translate="yes" xml:space="preserve">
          <source>Current directory does not exist.</source>
          <target state="translated">カレントディレクトリが存在しません。</target>
        </trans-unit>
        <trans-unit id="ecc02508f741caaf0ccb5f53659c2d1bc004753f" translate="yes" xml:space="preserve">
          <source>Current implementation</source>
          <target state="translated">現在の実装</target>
        </trans-unit>
        <trans-unit id="1425f78e5d844312470cdef9ef9f0acd79f61a97" translate="yes" xml:space="preserve">
          <source>Currently &lt;code&gt;clippy&lt;/code&gt; is the only available lint tool.</source>
          <target state="translated">現在、 &lt;code&gt;clippy&lt;/code&gt; は利用可能な唯一のlintツールです。</target>
        </trans-unit>
        <trans-unit id="db5e674d0b635a1d232ee6cc38f2e78e95695f87" translate="yes" xml:space="preserve">
          <source>Currently allocated memory</source>
          <target state="translated">現在割り当てられているメモリ</target>
        </trans-unit>
        <trans-unit id="085e78464e262321ab71c5bf671ada80e92466bf" translate="yes" xml:space="preserve">
          <source>Currently the default global allocator is unspecified. Libraries, however, like &lt;code&gt;cdylib&lt;/code&gt;s and &lt;code&gt;staticlib&lt;/code&gt;s are guaranteed to use the &lt;a href=&quot;struct.system&quot;&gt;&lt;code&gt;System&lt;/code&gt;&lt;/a&gt; by default.</source>
          <target state="translated">現在、デフォルトのグローバルアロケーターは指定されていません。ただし、 &lt;code&gt;cdylib&lt;/code&gt; や &lt;code&gt;staticlib&lt;/code&gt; のようなライブラリは、デフォルトで&lt;a href=&quot;struct.system&quot;&gt; &lt;code&gt;System&lt;/code&gt; &lt;/a&gt;を使用することが保証されています。</target>
        </trans-unit>
        <trans-unit id="ba37979aa280e5c385e9c67c41a5fbe28d6d0645" translate="yes" xml:space="preserve">
          <source>Currently you'll need to use &lt;code&gt;#[cfg(target_arch)]&lt;/code&gt; primarily to conditionally compile in code with atomics. There is an unstable &lt;code&gt;#[cfg(target_has_atomic)]&lt;/code&gt; as well which may be stabilized in the future.</source>
          <target state="translated">現在、主にアトミックでコードを条件付きでコンパイルするには、 &lt;code&gt;#[cfg(target_arch)]&lt;/code&gt; を使用する必要があります。不安定になる &lt;code&gt;#[cfg(target_has_atomic)]&lt;/code&gt; もあり、将来的には安定する可能性があります。</target>
        </trans-unit>
        <trans-unit id="ceb70531f450e62720cd16030079f112237fdd93" translate="yes" xml:space="preserve">
          <source>Currently, &lt;code&gt;Context&lt;/code&gt; only serves to provide access to a &lt;code&gt;&amp;amp;Waker&lt;/code&gt; which can be used to wake the current task.</source>
          <target state="translated">現在、 &lt;code&gt;Context&lt;/code&gt; は、現在のタスクを起こすために使用できる &lt;code&gt;&amp;amp;Waker&lt;/code&gt; へのアクセスを提供するためだけに機能します。</target>
        </trans-unit>
        <trans-unit id="b2ba0163ebd6551d3ef41be5c2ff3097b177f68d" translate="yes" xml:space="preserve">
          <source>Currently, our implementation simply performs naive linear search. This provides excellent performance on &lt;em&gt;small&lt;/em&gt; nodes of elements which are cheap to compare. However in the future we would like to further explore choosing the optimal search strategy based on the choice of B, and possibly other factors. Using linear search, searching for a random element is expected to take O(B * log(n)) comparisons, which is generally worse than a BST. In practice, however, performance is excellent.</source>
          <target state="translated">現在、私たちの実装は単純な線形検索を実行します。これにより、比較が安価な要素の&lt;em&gt;小さな&lt;/em&gt;ノードで優れたパフォーマンスが得られます。ただし、将来的には、Bの選択、および場合によっては他の要因に基づいて、最適な検索戦略を選択することをさらに検討したいと思います。線形検索を使用すると、ランダム要素の検索ではO（B * log（n））の比較が行われると予想されますが、これは一般にBSTよりも劣ります。ただし、実際には、パフォーマンスは優れています。</target>
        </trans-unit>
        <trans-unit id="4cb0cc544477c47ca02baaaf1bd84f94a8d8ba29" translate="yes" xml:space="preserve">
          <source>Currently, our implementation simply performs naive linear search. This provides excellent performance on &lt;em&gt;small&lt;/em&gt; nodes of elements which are cheap to compare. However in the future we would like to further explore choosing the optimal search strategy based on the choice of B, and possibly other factors. Using linear search, searching for a random element is expected to take O(B log&lt;sub&gt;B&lt;/sub&gt;n) comparisons, which is generally worse than a BST. In practice, however, performance is excellent.</source>
          <target state="translated">現在、この実装は単純な線形検索を実行するだけです。これは、比較が安価な要素の&lt;em&gt;小さな&lt;/em&gt;ノードで優れたパフォーマンスを提供します。ただし、将来的には、Bの選択に基づいて最適な検索戦略を選択することを検討したいと思います。線形検索を使用して、ランダムな要素を検索すると、O（B log &lt;sub&gt;B&lt;/sub&gt; n）の比較が行われることが予想されます。これは、一般的にBSTよりも悪い結果です。ただし、実際には、パフォーマンスは優れています。</target>
        </trans-unit>
        <trans-unit id="872eba23b65316c698b60b9a7908b3d92bce4aa5" translate="yes" xml:space="preserve">
          <source>Currently, our server runs in a single thread, meaning it can only serve one request at a time. Let&amp;rsquo;s examine how that can be a problem by simulating some slow requests. Then we&amp;rsquo;ll fix it so our server can handle multiple requests at once.</source>
          <target state="translated">現在、サーバーは単一のスレッドで実行されているため、一度に1つのリクエストしか処理できません。いくつかの遅いリクエストをシミュレートして、それがどのように問題になるかを調べてみましょう。次に、サーバーが複数のリクエストを一度に処理できるように修正します。</target>
        </trans-unit>
        <trans-unit id="411886a6bfbb480733f3d935aba8fe2dfdd4407f" translate="yes" xml:space="preserve">
          <source>Currently, our test is failing because we always return an empty vector. To fix that and implement &lt;code&gt;search&lt;/code&gt;, our program needs to follow these steps:</source>
          <target state="translated">現在、常に空のベクトルを返すため、現在、テストは失敗しています。これを修正して &lt;code&gt;search&lt;/code&gt; を実装するには、プログラムで次の手順を実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="9b88a76d351829313ced93078a08e2ad2c911111" translate="yes" xml:space="preserve">
          <source>Currently, the following system calls are being used to get the current time using &lt;code&gt;now()&lt;/code&gt;:</source>
          <target state="translated">現在、 &lt;code&gt;now()&lt;/code&gt; を使用して現在の時刻を取得するために、次のシステムコールが使用されています。</target>
        </trans-unit>
        <trans-unit id="c14a4beb4fc5077e09525d2d28b6a466f3abfcb9" translate="yes" xml:space="preserve">
          <source>Currently, the value of &lt;code&gt;BAR&lt;/code&gt; for a particular type can only be accessed through a concrete type, as shown below:</source>
          <target state="translated">現在、特定のタイプの &lt;code&gt;BAR&lt;/code&gt; の値には、以下に示すように、具象タイプを介してのみアクセスできます。</target>
        </trans-unit>
        <trans-unit id="b0a7283142b1045743972bf44193e48b1c8b802d" translate="yes" xml:space="preserve">
          <source>Currently, this isn't ideal, because we simply panic whenever we fail to get a new connection. Instead, we'd like to keep track of this error, like this:</source>
          <target state="translated">現在のところ、これは理想的ではありません。代わりに、次のようにこのエラーを記録しておきたいと思います。</target>
        </trans-unit>
        <trans-unit id="b6b832b5ea5efa8136cddfa94e7ea2108ce7fe30" translate="yes" xml:space="preserve">
          <source>Currently, we&amp;rsquo;re ignoring the request data in &lt;code&gt;buffer&lt;/code&gt; and just sending back the contents of the HTML file unconditionally. That means if you try requesting &lt;em&gt;127.0.0.1:7878/something-else&lt;/em&gt; in your browser, you&amp;rsquo;ll still get back this same HTML response. Our server is very limited and is not what most web servers do. We want to customize our responses depending on the request and only send back the HTML file for a well-formed request to &lt;em&gt;/&lt;/em&gt;.</source>
          <target state="translated">現在、 &lt;code&gt;buffer&lt;/code&gt; 内のリクエストデータは無視して、無条件にHTMLファイルのコンテンツを送り返しています。つまり、ブラウザーで&lt;em&gt;127.0.0.1:7878/something-else&lt;/em&gt;を要求しようとしても、同じHTML応答が返されます。私たちのサーバーは非常に限られており、ほとんどのWebサーバーが行うものではありません。私たちは、リクエストに応じて、私たちの応答をカスタマイズし、唯一の整形式の要求のためのHTMLファイルを返送したいです&lt;em&gt;/&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="2239943c8d0af354a467e6cc18b9ec9e32f2afcf" translate="yes" xml:space="preserve">
          <source>Cursor</source>
          <target state="translated">Cursor</target>
        </trans-unit>
        <trans-unit id="1f598496b6b7038cfaebf14b6b5e7d4680b16a66" translate="yes" xml:space="preserve">
          <source>Cursor initial position is &lt;code&gt;0&lt;/code&gt; even if underlying buffer (e.g., &lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt;) is not empty. So writing to cursor starts with overwriting &lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt; content, not with appending to it.</source>
          <target state="translated">基になるバッファ（&lt;a href=&quot;../vec/struct.vec&quot;&gt; &lt;code&gt;Vec&lt;/code&gt; など&lt;/a&gt;）が空でなくても、カーソルの初期位置は &lt;code&gt;0&lt;/code&gt; です。したがって、カーソルへの書き込みは、&lt;a href=&quot;../vec/struct.vec&quot;&gt; &lt;code&gt;Vec&lt;/code&gt; &lt;/a&gt;コンテンツに追加するのではなく、上書きすることから始まります。</target>
        </trans-unit>
        <trans-unit id="88b8cb37f3480da1e8b6b3d2c4bfe446be7f2f7b" translate="yes" xml:space="preserve">
          <source>Cursor initial position is &lt;code&gt;0&lt;/code&gt; even if underlying buffer (e.g., &lt;code&gt;Vec&lt;/code&gt;) is not empty. So writing to cursor starts with overwriting &lt;code&gt;Vec&lt;/code&gt; content, not with appending to it.</source>
          <target state="translated">カーソル（ &lt;code&gt;Vec&lt;/code&gt; など）が空でない場合でも、カーソルの初期位置は &lt;code&gt;0&lt;/code&gt; です。したがって、カーソルへの書き込みは、 &lt;code&gt;Vec&lt;/code&gt; コンテンツの上書きではなく、上書きで始まります。</target>
        </trans-unit>
        <trans-unit id="7c72c14501a1df2fcef7191b94db0c850982ca27" translate="yes" xml:space="preserve">
          <source>Cursor::borrow</source>
          <target state="translated">Cursor::borrow</target>
        </trans-unit>
        <trans-unit id="907c1f8dfe0d8184914230a13a0777dab3bd1741" translate="yes" xml:space="preserve">
          <source>Cursor::borrow_mut</source>
          <target state="translated">Cursor::borrow_mut</target>
        </trans-unit>
        <trans-unit id="3b64b4b0f2f091bfbdcfa06f015006642d7f75b7" translate="yes" xml:space="preserve">
          <source>Cursor::by_ref</source>
          <target state="translated">Cursor::by_ref</target>
        </trans-unit>
        <trans-unit id="da29f5ca9cfedf33d63cfebb7b3a00eea6bde4fc" translate="yes" xml:space="preserve">
          <source>Cursor::bytes</source>
          <target state="translated">Cursor::bytes</target>
        </trans-unit>
        <trans-unit id="945b01efd77c9533067a48ef4d515bb7d1c52ff9" translate="yes" xml:space="preserve">
          <source>Cursor::chain</source>
          <target state="translated">Cursor::chain</target>
        </trans-unit>
        <trans-unit id="7d77f67c902f7ab86b63cd2e632b7d77b42089c5" translate="yes" xml:space="preserve">
          <source>Cursor::clone</source>
          <target state="translated">Cursor::clone</target>
        </trans-unit>
        <trans-unit id="e36ceca000c04d98cd3f614f26e3e2fce464a23d" translate="yes" xml:space="preserve">
          <source>Cursor::clone_from</source>
          <target state="translated">Cursor::clone_from</target>
        </trans-unit>
        <trans-unit id="1a2a754195f4b8678304420caacbe456065dbcf5" translate="yes" xml:space="preserve">
          <source>Cursor::clone_into</source>
          <target state="translated">Cursor::clone_into</target>
        </trans-unit>
        <trans-unit id="e003ea57f882246b75a56c6803026f8e7096b85f" translate="yes" xml:space="preserve">
          <source>Cursor::consume</source>
          <target state="translated">Cursor::consume</target>
        </trans-unit>
        <trans-unit id="70ef7adf113b70228dabbf6f7adad597c6810b3c" translate="yes" xml:space="preserve">
          <source>Cursor::default</source>
          <target state="translated">Cursor::default</target>
        </trans-unit>
        <trans-unit id="3be321b1b22c46db64cc655a523688c5ef4cdb3e" translate="yes" xml:space="preserve">
          <source>Cursor::fill_buf</source>
          <target state="translated">Cursor::fill_buf</target>
        </trans-unit>
        <trans-unit id="3341d6f76116138bc21a473c516bf563ea933e3b" translate="yes" xml:space="preserve">
          <source>Cursor::flush</source>
          <target state="translated">Cursor::flush</target>
        </trans-unit>
        <trans-unit id="d1cabce1c7671c2546809d1db295fad35bbf19bf" translate="yes" xml:space="preserve">
          <source>Cursor::fmt</source>
          <target state="translated">Cursor::fmt</target>
        </trans-unit>
        <trans-unit id="e543516b7fde3437332a8df783b1d8f0722f35e7" translate="yes" xml:space="preserve">
          <source>Cursor::from</source>
          <target state="translated">Cursor::from</target>
        </trans-unit>
        <trans-unit id="912a17fc69304f1ba5cc95df17a2567dd624d44d" translate="yes" xml:space="preserve">
          <source>Cursor::get_mut</source>
          <target state="translated">Cursor::get_mut</target>
        </trans-unit>
        <trans-unit id="b698f37f267fbcf7aea30902f61625884c75252f" translate="yes" xml:space="preserve">
          <source>Cursor::get_ref</source>
          <target state="translated">Cursor::get_ref</target>
        </trans-unit>
        <trans-unit id="2d2db43f76346ec325257c3d7e9c1de13475242b" translate="yes" xml:space="preserve">
          <source>Cursor::initializer</source>
          <target state="translated">Cursor::initializer</target>
        </trans-unit>
        <trans-unit id="90e1594d6274550c5339376c3724a68c5c531055" translate="yes" xml:space="preserve">
          <source>Cursor::into</source>
          <target state="translated">Cursor::into</target>
        </trans-unit>
        <trans-unit id="a48e3250ed339c3aa20fa3b74911e42024cc090a" translate="yes" xml:space="preserve">
          <source>Cursor::into_inner</source>
          <target state="translated">Cursor::into_inner</target>
        </trans-unit>
        <trans-unit id="3ac11b4f20e42879408f2799850345abadfbcf6a" translate="yes" xml:space="preserve">
          <source>Cursor::lines</source>
          <target state="translated">Cursor::lines</target>
        </trans-unit>
        <trans-unit id="cb832ab47ce8dce147c7b2160ad5eeae1446c098" translate="yes" xml:space="preserve">
          <source>Cursor::new</source>
          <target state="translated">Cursor::new</target>
        </trans-unit>
        <trans-unit id="7cf571d850007e7adecf1b9b2e5ec4478d041215" translate="yes" xml:space="preserve">
          <source>Cursor::position</source>
          <target state="translated">Cursor::position</target>
        </trans-unit>
        <trans-unit id="f62560e648db4a9420079ae2d45d74956fd51005" translate="yes" xml:space="preserve">
          <source>Cursor::read</source>
          <target state="translated">Cursor::read</target>
        </trans-unit>
        <trans-unit id="2ac65a7184ee585766d4716553566a36c91ddeff" translate="yes" xml:space="preserve">
          <source>Cursor::read_exact</source>
          <target state="translated">Cursor::read_exact</target>
        </trans-unit>
        <trans-unit id="e25476827943ffc4feb970137a588528d350812e" translate="yes" xml:space="preserve">
          <source>Cursor::read_line</source>
          <target state="translated">Cursor::read_line</target>
        </trans-unit>
        <trans-unit id="f3fdb06b6ca0233f2c1ad94aa87fdeca0f19a2be" translate="yes" xml:space="preserve">
          <source>Cursor::read_to_end</source>
          <target state="translated">Cursor::read_to_end</target>
        </trans-unit>
        <trans-unit id="51d5e5c0bcf7a0325ce8807956a4759f4e09676a" translate="yes" xml:space="preserve">
          <source>Cursor::read_to_string</source>
          <target state="translated">Cursor::read_to_string</target>
        </trans-unit>
        <trans-unit id="fc48a0ed394bee64bfce917085bd0ad63429c948" translate="yes" xml:space="preserve">
          <source>Cursor::read_until</source>
          <target state="translated">Cursor::read_until</target>
        </trans-unit>
        <trans-unit id="394cef5ba19177c10f2900dd503acf159211b80a" translate="yes" xml:space="preserve">
          <source>Cursor::read_vectored</source>
          <target state="translated">Cursor::read_vectored</target>
        </trans-unit>
        <trans-unit id="b49e75bee792bbb44f5c41592069a93fac0483ba" translate="yes" xml:space="preserve">
          <source>Cursor::seek</source>
          <target state="translated">Cursor::seek</target>
        </trans-unit>
        <trans-unit id="005fac12104194c5e27e58dbb5bbec07ec13f13b" translate="yes" xml:space="preserve">
          <source>Cursor::set_position</source>
          <target state="translated">Cursor::set_position</target>
        </trans-unit>
        <trans-unit id="d107f5282ea2e83fee016601b36a6a13d7633128" translate="yes" xml:space="preserve">
          <source>Cursor::split</source>
          <target state="translated">Cursor::split</target>
        </trans-unit>
        <trans-unit id="7ca68f17f4b7edbf48fde4313af634ab7df0cada" translate="yes" xml:space="preserve">
          <source>Cursor::stream_len</source>
          <target state="translated">Cursor::stream_len</target>
        </trans-unit>
        <trans-unit id="f59caa65069705e9045bff8595db47368727ebb1" translate="yes" xml:space="preserve">
          <source>Cursor::stream_position</source>
          <target state="translated">Cursor::stream_position</target>
        </trans-unit>
        <trans-unit id="35995a03d4bffa63d27b7533ce08fea8c68b23bc" translate="yes" xml:space="preserve">
          <source>Cursor::take</source>
          <target state="translated">Cursor::take</target>
        </trans-unit>
        <trans-unit id="fa7736d8b18ae7cb7811d1b67b7b78bee5b77377" translate="yes" xml:space="preserve">
          <source>Cursor::to_owned</source>
          <target state="translated">Cursor::to_owned</target>
        </trans-unit>
        <trans-unit id="d6f5e8c759a8ed99b5109dfe0ab0633445df9559" translate="yes" xml:space="preserve">
          <source>Cursor::try_from</source>
          <target state="translated">Cursor::try_from</target>
        </trans-unit>
        <trans-unit id="73510e0acad76a771d3b229a53ee21eaef7bd133" translate="yes" xml:space="preserve">
          <source>Cursor::try_into</source>
          <target state="translated">Cursor::try_into</target>
        </trans-unit>
        <trans-unit id="1fb419cee239622040e4d9758807459d35039a26" translate="yes" xml:space="preserve">
          <source>Cursor::type_id</source>
          <target state="translated">Cursor::type_id</target>
        </trans-unit>
        <trans-unit id="956fe2405e9fff2a0f33ab2a4ebae3601c5b348f" translate="yes" xml:space="preserve">
          <source>Cursor::write</source>
          <target state="translated">Cursor::write</target>
        </trans-unit>
        <trans-unit id="2a4624aa78096b3df7ca2fcfa3d62576867a0b25" translate="yes" xml:space="preserve">
          <source>Cursor::write_all</source>
          <target state="translated">Cursor::write_all</target>
        </trans-unit>
        <trans-unit id="ceea657f5fee42924ee15702f8e10bd151919d3b" translate="yes" xml:space="preserve">
          <source>Cursor::write_fmt</source>
          <target state="translated">Cursor::write_fmt</target>
        </trans-unit>
        <trans-unit id="0ffcb550a35ea4720a566d1c314a6a5037ec3b57" translate="yes" xml:space="preserve">
          <source>Cursor::write_vectored</source>
          <target state="translated">Cursor::write_vectored</target>
        </trans-unit>
        <trans-unit id="4a1ebfe3ea9090eaff6be8ae05c377a3e263ffe4" translate="yes" xml:space="preserve">
          <source>CursorMut</source>
          <target state="translated">CursorMut</target>
        </trans-unit>
        <trans-unit id="1eb26f62d76108675d5fbd285014d55c53dd73ef" translate="yes" xml:space="preserve">
          <source>Cursors always rest between two elements in the list, and index in a logically circular way. To accommodate this, there is a &quot;ghost&quot; non-element that yields &lt;code&gt;None&lt;/code&gt; between the head and tail of the list.</source>
          <target state="translated">カーソルは常にリスト内の2つの要素の間にあり、論理的に循環する方法でインデックスを付けます。これに対応するために、リストの先頭と末尾の間に &lt;code&gt;None&lt;/code&gt; を生成する「ゴースト」非要素があります。</target>
        </trans-unit>
        <trans-unit id="5ebd563ca24af29fc12aa3d357419694eab2c760" translate="yes" xml:space="preserve">
          <source>Custom &lt;code&gt;#[derive]&lt;/code&gt; macros that specify code added with the &lt;code&gt;derive&lt;/code&gt; attribute used on structs and enums</source>
          <target state="translated">カスタム &lt;code&gt;#[derive]&lt;/code&gt; に追加されたコードを指定するマクロ &lt;code&gt;derive&lt;/code&gt; 構造体と列挙型で使用される属性を</target>
        </trans-unit>
        <trans-unit id="93ef6593cd5cb962891fd58d39ce47cec83fe200" translate="yes" xml:space="preserve">
          <source>Custom Discriminant Values for Field-Less Enumerations</source>
          <target state="translated">フィールドレス列挙のためのカスタム判別値</target>
        </trans-unit>
        <trans-unit id="855b692fd85ff5e9915d8659e4d93150c4099f77" translate="yes" xml:space="preserve">
          <source>Custom Discriminant Values for Fieldless Enumerations</source>
          <target state="translated">フィールドレス列挙のためのカスタム判別値</target>
        </trans-unit>
        <trans-unit id="083c792994a317119a113e500c40a8c4ff7407bd" translate="yes" xml:space="preserve">
          <source>Custom Messages</source>
          <target state="translated">カスタムメッセージ</target>
        </trans-unit>
        <trans-unit id="277c137c579974a7c387e4913b41c84212ad89de" translate="yes" xml:space="preserve">
          <source>Custom code within the destructor.</source>
          <target state="translated">デストラクタ内のカスタムコード。</target>
        </trans-unit>
        <trans-unit id="f9339fbac23198c7ef6e935583d35d57cb25ead4" translate="yes" xml:space="preserve">
          <source>Custom derive macros are defined by a &lt;a href=&quot;visibility-and-privacy&quot;&gt;public&lt;/a&gt;&lt;a href=&quot;items/functions&quot;&gt;function&lt;/a&gt; with the &lt;code&gt;proc_macro_derive&lt;/code&gt; attribute and a signature of &lt;code&gt;(TokenStream) -&amp;gt; TokenStream&lt;/code&gt;.</source>
          <target state="translated">カスタム派生マクロは、 &lt;code&gt;proc_macro_derive&lt;/code&gt; 属性と &lt;code&gt;(TokenStream) -&amp;gt; TokenStream&lt;/code&gt; シグネチャを持つ&lt;a href=&quot;visibility-and-privacy&quot;&gt;public &lt;/a&gt;&lt;a href=&quot;items/functions&quot;&gt;関数&lt;/a&gt;によって定義されます。</target>
        </trans-unit>
        <trans-unit id="2e1388b6eccd83eec06fd4729c57d9b8fcdc75a1" translate="yes" xml:space="preserve">
          <source>Custom flags can only set flags, not remove flags set by Rust's options. This option overwrites any previously set custom flags.</source>
          <target state="translated">カスタムフラグはフラグを設定するだけで、Rustのオプションで設定されたフラグを削除することはできません。このオプションは、以前に設定されたカスタムフラグを上書きします。</target>
        </trans-unit>
        <trans-unit id="064b3866861c42230aaf060a82605bf950293e1d" translate="yes" xml:space="preserve">
          <source>Custom flags can only set flags, not remove flags set by Rusts options. This options overwrites any previously set custom flags.</source>
          <target state="translated">カスタムフラグはフラグを設定するだけで、Rustsオプションで設定したフラグを削除することはできません。このオプションは、以前に設定されたカスタムフラグを上書きします。</target>
        </trans-unit>
        <trans-unit id="b9f31ba5089238e22588a4428012611878d7ba42" translate="yes" xml:space="preserve">
          <source>Customize your build through release profiles</source>
          <target state="translated">リリースプロファイルによるビルドのカスタマイズ</target>
        </trans-unit>
        <trans-unit id="174c7ea34445f169060b40e93fccbe2035a5cb30" translate="yes" xml:space="preserve">
          <source>Customizing Builds with Release Profiles</source>
          <target state="translated">リリースプロファイルでビルドをカスタマイズする</target>
        </trans-unit>
        <trans-unit id="f5eda1b11afa0fcfb39f3eb94274b23a7d669749" translate="yes" xml:space="preserve">
          <source>Cycle</source>
          <target state="translated">Cycle</target>
        </trans-unit>
        <trans-unit id="de7f823d9352cd7fb50edb24062d3dff037faa48" translate="yes" xml:space="preserve">
          <source>Cycle::all</source>
          <target state="translated">Cycle::all</target>
        </trans-unit>
        <trans-unit id="9ca5bdae88a3a90c3eae8cba5ca9b7f0fa58a831" translate="yes" xml:space="preserve">
          <source>Cycle::any</source>
          <target state="translated">Cycle::any</target>
        </trans-unit>
        <trans-unit id="2b941448ad16ab8ceaac4cc9e258b3c27f716c1e" translate="yes" xml:space="preserve">
          <source>Cycle::borrow</source>
          <target state="translated">Cycle::borrow</target>
        </trans-unit>
        <trans-unit id="f0df920b023cec286a074b6ec0cf2a9b9a63c0a8" translate="yes" xml:space="preserve">
          <source>Cycle::borrow_mut</source>
          <target state="translated">Cycle::borrow_mut</target>
        </trans-unit>
        <trans-unit id="d3eebe6a29a00a003e103a701a8388214cab88bb" translate="yes" xml:space="preserve">
          <source>Cycle::by_ref</source>
          <target state="translated">Cycle::by_ref</target>
        </trans-unit>
        <trans-unit id="d3fcad207554bf564f28ae3fa619ec4a47cbdff3" translate="yes" xml:space="preserve">
          <source>Cycle::chain</source>
          <target state="translated">Cycle::chain</target>
        </trans-unit>
        <trans-unit id="b0e522f04a6f9858da8134286cbe31ffeffa4323" translate="yes" xml:space="preserve">
          <source>Cycle::clone</source>
          <target state="translated">Cycle::clone</target>
        </trans-unit>
        <trans-unit id="518166812f474892f85f482ad30dec896dd3d95d" translate="yes" xml:space="preserve">
          <source>Cycle::clone_from</source>
          <target state="translated">Cycle::clone_from</target>
        </trans-unit>
        <trans-unit id="e64d59b2131c4ebbf4a82ed2f94e8a42e8974bc8" translate="yes" xml:space="preserve">
          <source>Cycle::clone_into</source>
          <target state="translated">Cycle::clone_into</target>
        </trans-unit>
        <trans-unit id="1bdc71a450dc6a96cad8941d3844d007a4b31002" translate="yes" xml:space="preserve">
          <source>Cycle::cloned</source>
          <target state="translated">Cycle::cloned</target>
        </trans-unit>
        <trans-unit id="989a9f2affebaf3b1a0a2354667953f7e18d5fbe" translate="yes" xml:space="preserve">
          <source>Cycle::cmp</source>
          <target state="translated">Cycle::cmp</target>
        </trans-unit>
        <trans-unit id="10031eb07822113a2eb095ff61fc095c3e5a8b79" translate="yes" xml:space="preserve">
          <source>Cycle::collect</source>
          <target state="translated">Cycle::collect</target>
        </trans-unit>
        <trans-unit id="25bf5bf9bac79f658d71018038cdcfd3e65d9091" translate="yes" xml:space="preserve">
          <source>Cycle::copied</source>
          <target state="translated">Cycle::copied</target>
        </trans-unit>
        <trans-unit id="2b4f997a47c504415b265a63f11fbada520ec943" translate="yes" xml:space="preserve">
          <source>Cycle::count</source>
          <target state="translated">Cycle::count</target>
        </trans-unit>
        <trans-unit id="2e30c7fec970dd384549f3d86a57feba23a3a3c8" translate="yes" xml:space="preserve">
          <source>Cycle::cycle</source>
          <target state="translated">Cycle::cycle</target>
        </trans-unit>
        <trans-unit id="933ce87d03f991223be2123d87380756e127e4ab" translate="yes" xml:space="preserve">
          <source>Cycle::enumerate</source>
          <target state="translated">Cycle::enumerate</target>
        </trans-unit>
        <trans-unit id="310d8b28d596fde063cbaa3945f48bb10fe9175f" translate="yes" xml:space="preserve">
          <source>Cycle::eq</source>
          <target state="translated">Cycle::eq</target>
        </trans-unit>
        <trans-unit id="bcbe7225c9aacc0df8978b532b1c8867cbde6022" translate="yes" xml:space="preserve">
          <source>Cycle::filter</source>
          <target state="translated">Cycle::filter</target>
        </trans-unit>
        <trans-unit id="b8c2b52a2b735564a1fa7a04228fec4a49e5f121" translate="yes" xml:space="preserve">
          <source>Cycle::filter_map</source>
          <target state="translated">Cycle::filter_map</target>
        </trans-unit>
        <trans-unit id="0a5b5ef9993a8d40229f1fe51f872494f23d672a" translate="yes" xml:space="preserve">
          <source>Cycle::find</source>
          <target state="translated">Cycle::find</target>
        </trans-unit>
        <trans-unit id="0fa0dc443bfd48a62fc24f73f915fb44030ee8eb" translate="yes" xml:space="preserve">
          <source>Cycle::find_map</source>
          <target state="translated">Cycle::find_map</target>
        </trans-unit>
        <trans-unit id="74169b784513f48ae5b3a5a337d4d8bbcaab9402" translate="yes" xml:space="preserve">
          <source>Cycle::flat_map</source>
          <target state="translated">Cycle::flat_map</target>
        </trans-unit>
        <trans-unit id="a3c81779908132b68e2be9c3d86fabe0aafe3303" translate="yes" xml:space="preserve">
          <source>Cycle::flatten</source>
          <target state="translated">Cycle::flatten</target>
        </trans-unit>
        <trans-unit id="d1eefd42e95bd692854ff28ab72c5b955a1068c0" translate="yes" xml:space="preserve">
          <source>Cycle::fmt</source>
          <target state="translated">Cycle::fmt</target>
        </trans-unit>
        <trans-unit id="105894b40fe11b10f0e775f610b86dbd42775948" translate="yes" xml:space="preserve">
          <source>Cycle::fold</source>
          <target state="translated">Cycle::fold</target>
        </trans-unit>
        <trans-unit id="4eb890b34e3c1347d9d1c991e0969fc28920ef4e" translate="yes" xml:space="preserve">
          <source>Cycle::for_each</source>
          <target state="translated">Cycle::for_each</target>
        </trans-unit>
        <trans-unit id="b8af6bba1a74b0387a54871e14d6fc7b3e54e5ea" translate="yes" xml:space="preserve">
          <source>Cycle::from</source>
          <target state="translated">Cycle::from</target>
        </trans-unit>
        <trans-unit id="21e898f8b8c60977a076f3cd05a5ac16772fa9ad" translate="yes" xml:space="preserve">
          <source>Cycle::fuse</source>
          <target state="translated">Cycle::fuse</target>
        </trans-unit>
        <trans-unit id="661bf395cfa6213001841dc057f3b845fb6068af" translate="yes" xml:space="preserve">
          <source>Cycle::ge</source>
          <target state="translated">Cycle::ge</target>
        </trans-unit>
        <trans-unit id="705e5cb0ae258d8f05f4c53b9ee3119cdade7f00" translate="yes" xml:space="preserve">
          <source>Cycle::gt</source>
          <target state="translated">Cycle::gt</target>
        </trans-unit>
        <trans-unit id="1cb2042888537955144addaf41b890ef141bd562" translate="yes" xml:space="preserve">
          <source>Cycle::inspect</source>
          <target state="translated">Cycle::inspect</target>
        </trans-unit>
        <trans-unit id="87fc36f02e94ab469335c0d1a4f0557968a76f36" translate="yes" xml:space="preserve">
          <source>Cycle::into</source>
          <target state="translated">Cycle::into</target>
        </trans-unit>
        <trans-unit id="89a4fecbbabd54eef43b946f8cf0f53ecc9d4064" translate="yes" xml:space="preserve">
          <source>Cycle::into_iter</source>
          <target state="translated">Cycle::into_iter</target>
        </trans-unit>
        <trans-unit id="d7bb71a2ae66d38f9af223fe3b35f8904230ed3f" translate="yes" xml:space="preserve">
          <source>Cycle::is_sorted</source>
          <target state="translated">Cycle::is_sorted</target>
        </trans-unit>
        <trans-unit id="6a236c5def5acd50002e8dcc84226fcdbe394bf9" translate="yes" xml:space="preserve">
          <source>Cycle::is_sorted_by</source>
          <target state="translated">Cycle::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="64748a2cbfe191385097ac1af88e47bd618f13fb" translate="yes" xml:space="preserve">
          <source>Cycle::is_sorted_by_key</source>
          <target state="translated">Cycle::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="a1c52de629f2c013a862ad5662a20d3a34b90d7e" translate="yes" xml:space="preserve">
          <source>Cycle::last</source>
          <target state="translated">Cycle::last</target>
        </trans-unit>
        <trans-unit id="2d4d0b68829c25954fa65e8e7a40e63a96fd1556" translate="yes" xml:space="preserve">
          <source>Cycle::le</source>
          <target state="translated">Cycle::le</target>
        </trans-unit>
        <trans-unit id="d7367cd179a221b33c6bacc6846659d5a1606a5a" translate="yes" xml:space="preserve">
          <source>Cycle::lt</source>
          <target state="translated">Cycle::lt</target>
        </trans-unit>
        <trans-unit id="1d7abe7dbcbdff655894d7912844c5422633be80" translate="yes" xml:space="preserve">
          <source>Cycle::map</source>
          <target state="translated">Cycle::map</target>
        </trans-unit>
        <trans-unit id="27618d9ef0c7023c952595549a602fc32dee1443" translate="yes" xml:space="preserve">
          <source>Cycle::max</source>
          <target state="translated">Cycle::max</target>
        </trans-unit>
        <trans-unit id="a3d165c5cbfd7a5a74975eb77a6039ad4013f828" translate="yes" xml:space="preserve">
          <source>Cycle::max_by</source>
          <target state="translated">Cycle::max_by</target>
        </trans-unit>
        <trans-unit id="5c58c34f9c0a12745239f5a2535aa943d119301a" translate="yes" xml:space="preserve">
          <source>Cycle::max_by_key</source>
          <target state="translated">Cycle::max_by_key</target>
        </trans-unit>
        <trans-unit id="70ce07c508f1ef847d310598189e1bda0842fdd0" translate="yes" xml:space="preserve">
          <source>Cycle::min</source>
          <target state="translated">Cycle::min</target>
        </trans-unit>
        <trans-unit id="b99df7594807b3ab75f8989b981b11ef703c807d" translate="yes" xml:space="preserve">
          <source>Cycle::min_by</source>
          <target state="translated">Cycle::min_by</target>
        </trans-unit>
        <trans-unit id="decea16cd79281c35206ecab9bab4061cbfbeabb" translate="yes" xml:space="preserve">
          <source>Cycle::min_by_key</source>
          <target state="translated">Cycle::min_by_key</target>
        </trans-unit>
        <trans-unit id="62fe08dbbc65db452392fdd3f581c768db635b31" translate="yes" xml:space="preserve">
          <source>Cycle::ne</source>
          <target state="translated">Cycle::ne</target>
        </trans-unit>
        <trans-unit id="1b53833a6dc6bd6e44f595e900a7441d2555b554" translate="yes" xml:space="preserve">
          <source>Cycle::next</source>
          <target state="translated">Cycle::next</target>
        </trans-unit>
        <trans-unit id="e28dd22b1e11da2fd650d61c96d4fe6905088eea" translate="yes" xml:space="preserve">
          <source>Cycle::nth</source>
          <target state="translated">Cycle::nth</target>
        </trans-unit>
        <trans-unit id="8c4ac9a410e38e23aed111829ed962b4ebc9ac37" translate="yes" xml:space="preserve">
          <source>Cycle::partial_cmp</source>
          <target state="translated">Cycle::partial_cmp</target>
        </trans-unit>
        <trans-unit id="3a5b9b0e79bf8208a925b7dbb807affc2d3d5390" translate="yes" xml:space="preserve">
          <source>Cycle::partition</source>
          <target state="translated">Cycle::partition</target>
        </trans-unit>
        <trans-unit id="08f304b7e5408c25ac31406e77b983ed98a48630" translate="yes" xml:space="preserve">
          <source>Cycle::peekable</source>
          <target state="translated">Cycle::peekable</target>
        </trans-unit>
        <trans-unit id="eb37395a71586a17922d1130b0756b79b2b63272" translate="yes" xml:space="preserve">
          <source>Cycle::position</source>
          <target state="translated">Cycle::position</target>
        </trans-unit>
        <trans-unit id="eb5a873ba027a2f63a692eaefd2a7ce0f86d6c11" translate="yes" xml:space="preserve">
          <source>Cycle::product</source>
          <target state="translated">Cycle::product</target>
        </trans-unit>
        <trans-unit id="6b71bbc8a81cb99953e96743b456ccf98351ae33" translate="yes" xml:space="preserve">
          <source>Cycle::rev</source>
          <target state="translated">Cycle::rev</target>
        </trans-unit>
        <trans-unit id="658d1d88fa1c7ba170349f9afcc9b8b5d9c73c67" translate="yes" xml:space="preserve">
          <source>Cycle::rposition</source>
          <target state="translated">Cycle::rposition</target>
        </trans-unit>
        <trans-unit id="2bfb648455b28f06114152c647dca1fe88f4b117" translate="yes" xml:space="preserve">
          <source>Cycle::scan</source>
          <target state="translated">Cycle::scan</target>
        </trans-unit>
        <trans-unit id="993d85755431d0cb532c47ccd8fc3d47ab3ce18e" translate="yes" xml:space="preserve">
          <source>Cycle::size_hint</source>
          <target state="translated">Cycle::size_hint</target>
        </trans-unit>
        <trans-unit id="044c62603d5e3d05c3bfc27dc9527236a5a4335d" translate="yes" xml:space="preserve">
          <source>Cycle::skip</source>
          <target state="translated">Cycle::skip</target>
        </trans-unit>
        <trans-unit id="ae08ef429cc5958240018bcad1474c33323b30e3" translate="yes" xml:space="preserve">
          <source>Cycle::skip_while</source>
          <target state="translated">Cycle::skip_while</target>
        </trans-unit>
        <trans-unit id="c3c179121e73ed8fd4af03d2c30275951222cdc6" translate="yes" xml:space="preserve">
          <source>Cycle::step_by</source>
          <target state="translated">Cycle::step_by</target>
        </trans-unit>
        <trans-unit id="7833f1fdef5c7f028e78b519f82ae64e15481764" translate="yes" xml:space="preserve">
          <source>Cycle::sum</source>
          <target state="translated">Cycle::sum</target>
        </trans-unit>
        <trans-unit id="b0e5e37ca6dfd53759e5b3d854f9b4d5553befcd" translate="yes" xml:space="preserve">
          <source>Cycle::take</source>
          <target state="translated">Cycle::take</target>
        </trans-unit>
        <trans-unit id="4d6d558b6d81abf2b55472f4c12c54c452cbcf04" translate="yes" xml:space="preserve">
          <source>Cycle::take_while</source>
          <target state="translated">Cycle::take_while</target>
        </trans-unit>
        <trans-unit id="2bd7b27d7d47199f8b79dc0352645da686c309b3" translate="yes" xml:space="preserve">
          <source>Cycle::to_owned</source>
          <target state="translated">Cycle::to_owned</target>
        </trans-unit>
        <trans-unit id="978dd67e7170b30281e03bc34f9cf5086459b9f8" translate="yes" xml:space="preserve">
          <source>Cycle::try_fold</source>
          <target state="translated">Cycle::try_fold</target>
        </trans-unit>
        <trans-unit id="2f9d5a8ba61139023a4f510c420e6dd1b772c4e7" translate="yes" xml:space="preserve">
          <source>Cycle::try_for_each</source>
          <target state="translated">Cycle::try_for_each</target>
        </trans-unit>
        <trans-unit id="c7abc38cb96c7d7e5e9b6aaac8545b0481576ed9" translate="yes" xml:space="preserve">
          <source>Cycle::try_from</source>
          <target state="translated">Cycle::try_from</target>
        </trans-unit>
        <trans-unit id="5db66d3608f0d6a420d2bf27d6b7ca5c83d81998" translate="yes" xml:space="preserve">
          <source>Cycle::try_into</source>
          <target state="translated">Cycle::try_into</target>
        </trans-unit>
        <trans-unit id="d3ff576be28bae96cc48716bbae90b9ddd35113b" translate="yes" xml:space="preserve">
          <source>Cycle::type_id</source>
          <target state="translated">Cycle::type_id</target>
        </trans-unit>
        <trans-unit id="908ecb64d2a773f9ea32adf64e12b97724bb854d" translate="yes" xml:space="preserve">
          <source>Cycle::unzip</source>
          <target state="translated">Cycle::unzip</target>
        </trans-unit>
        <trans-unit id="db2593fcc11dfd20ecf0252959d0c38e24ad3160" translate="yes" xml:space="preserve">
          <source>Cycle::zip</source>
          <target state="translated">Cycle::zip</target>
        </trans-unit>
        <trans-unit id="6102af1503b688d06337d6d314be78ccc2e04c4f" translate="yes" xml:space="preserve">
          <source>DEC_DIGIT (DEC_DIGIT|&lt;code&gt;_&lt;/code&gt;)&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">DEC_DIGIT（DEC_DIGIT | &lt;code&gt;_&lt;/code&gt; ）&lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="2ea940a067af582a8e8529e1900d0689b6311f51" translate="yes" xml:space="preserve">
          <source>DEC_DIGIT : [&lt;code&gt;0&lt;/code&gt;-&lt;code&gt;9&lt;/code&gt;]</source>
          <target state="translated">DEC_DIGIT：[ &lt;code&gt;0&lt;/code&gt; - &lt;code&gt;9&lt;/code&gt; ]</target>
        </trans-unit>
        <trans-unit id="476b54a11815610731cfd91b7a37618bc60385a8" translate="yes" xml:space="preserve">
          <source>DEC_LITERAL :</source>
          <target state="translated">DEC_LITERAL .</target>
        </trans-unit>
        <trans-unit id="29ac1833a0f456913c9ea74abab77eaad12b3a23" translate="yes" xml:space="preserve">
          <source>DEC_LITERAL &lt;code&gt;.&lt;/code&gt;&lt;em&gt;(not immediately followed by &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;_&lt;/code&gt; or an &lt;a href=&quot;identifiers&quot;&gt;identifier&lt;/a&gt;&lt;/em&gt;)</source>
          <target state="translated">DEC_LITERAL &lt;code&gt;.&lt;/code&gt; &lt;em&gt;（直後に &lt;code&gt;.&lt;/code&gt; 、 &lt;code&gt;_&lt;/code&gt; または&lt;a href=&quot;identifiers&quot;&gt;識別子が&lt;/a&gt;&lt;/em&gt;&lt;em&gt;続かない&lt;/em&gt;）</target>
        </trans-unit>
        <trans-unit id="b4a1470bd9fa9d864b8e2a674844408f43f7ea49" translate="yes" xml:space="preserve">
          <source>DFA</source>
          <target state="translated">DFA</target>
        </trans-unit>
        <trans-unit id="e848d63e53c17d7219dfa67a2cafbb25b2efb309" translate="yes" xml:space="preserve">
          <source>DIGITS</source>
          <target state="translated">DIGITS</target>
        </trans-unit>
        <trans-unit id="ce1e1ba27caba665e66a353797b83b929d7d6f66" translate="yes" xml:space="preserve">
          <source>DLL_EXTENSION</source>
          <target state="translated">DLL_EXTENSION</target>
        </trans-unit>
        <trans-unit id="1e6381a504a256eb43786bb9c20fd4c751c9d5ff" translate="yes" xml:space="preserve">
          <source>DLL_PREFIX</source>
          <target state="translated">DLL_PREFIX</target>
        </trans-unit>
        <trans-unit id="80e07987df166c568a7eb99cc54075db3715c1cf" translate="yes" xml:space="preserve">
          <source>DLL_SUFFIX</source>
          <target state="translated">DLL_SUFFIX</target>
        </trans-unit>
        <trans-unit id="724976782a35aea0ac9d7c4add2be932cd11938c" translate="yes" xml:space="preserve">
          <source>DST</source>
          <target state="translated">DST</target>
        </trans-unit>
        <trans-unit id="9e82704b7f769c6df63d66dac53f834e10b91f38" translate="yes" xml:space="preserve">
          <source>DSTs</source>
          <target state="translated">DSTs</target>
        </trans-unit>
        <trans-unit id="3ae8ffeedb6907fd72a0d0ce3478431fc546c4b1" translate="yes" xml:space="preserve">
          <source>Dangling References</source>
          <target state="translated">ぶら下がり参考文献</target>
        </trans-unit>
        <trans-unit id="24f7178851f530861dfcbba6de92b9a2a18a8884" translate="yes" xml:space="preserve">
          <source>Dangling or null references and boxes.</source>
          <target state="translated">ぶら下がっている、またはヌルの参照とボックス。</target>
        </trans-unit>
        <trans-unit id="695c30da52807837432872044a6eae91aead89e7" translate="yes" xml:space="preserve">
          <source>Darwin</source>
          <target state="translated">Darwin</target>
        </trans-unit>
        <trans-unit id="c18842877f84be9bb3ae10673c4e60242f22c160" translate="yes" xml:space="preserve">
          <source>Data Types</source>
          <target state="translated">データ型</target>
        </trans-unit>
        <trans-unit id="396cf9245adf81ee51fd7a0d35d0abc67456c7a8" translate="yes" xml:space="preserve">
          <source>Data is copied from each buffer in order, with the final buffer read from possibly being only partially consumed. This method must behave as a call to &lt;a href=&quot;trait.write#tymethod.write&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; with the buffers concatenated would.</source>
          <target state="translated">データは各バッファから順番にコピーされ、最終的なバッファは部分的にしか消費されない可能性があります。このメソッドは、連結されたバッファを使用して&lt;a href=&quot;trait.write#tymethod.write&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;ための呼び出しとして動作する必要があります。</target>
        </trans-unit>
        <trans-unit id="a0c0f41ef8417d4d5d2ec5f0639295d8e3cfbf6a" translate="yes" xml:space="preserve">
          <source>Data is copied to fill each buffer in order, with the final buffer written to possibly being only partially filled. This method must behave as a single call to &lt;code&gt;read&lt;/code&gt; with the buffers concatenated would.</source>
          <target state="translated">データは、各バッファーを順番に埋めるためにコピーされ、最終的なバッファーは部分的にのみ埋められる可能性があります。このメソッドは、バッファーを連結して &lt;code&gt;read&lt;/code&gt; 単一の呼び出しと同じように動作する必要があります。</target>
        </trans-unit>
        <trans-unit id="215c0e0937148bc882fa1e38b7ecb830bd13ed6a" translate="yes" xml:space="preserve">
          <source>Data is copied to fill each buffer in order, with the final buffer written to possibly being only partially filled. This method must behave equivalently to a single call to &lt;code&gt;read&lt;/code&gt; with concatenated buffers.</source>
          <target state="translated">データはコピーされて各バッファーを順番に埋め、最後のバッファーは部分的にしか埋められない可能性があります。このメソッドは、連結されたバッファーで &lt;code&gt;read&lt;/code&gt; ための1回の呼び出しと同等に動作する必要があります。</target>
        </trans-unit>
        <trans-unit id="6b36150ebf8dd74581d6c69f981e2fe8e40e0787" translate="yes" xml:space="preserve">
          <source>Data is copied to from each buffer in order, with the final buffer read from possibly being only partially consumed. This method must behave as a call to &lt;code&gt;write&lt;/code&gt; with the buffers concatenated would.</source>
          <target state="translated">データは各バッファーから順番にコピーされ、最後に読み取られたバッファーは部分的にしか消費されない可能性があります。このメソッドは、バッファーを連結して &lt;code&gt;write&lt;/code&gt; 呼び出しのように動作する必要があります。</target>
        </trans-unit>
        <trans-unit id="6d4a367bb6a0e84d2231cd5db2a498cba3238fee" translate="yes" xml:space="preserve">
          <source>Data may be shared by placing it in a reference-counted box or the &lt;a href=&quot;rc/index&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt; type, and if further contained in a &lt;a href=&quot;cell/struct.cell&quot;&gt;&lt;code&gt;Cell&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;cell/struct.refcell&quot;&gt;&lt;code&gt;RefCell&lt;/code&gt;&lt;/a&gt;, may be mutated as well as shared. Likewise, in a concurrent setting it is common to pair an atomically-reference-counted box, &lt;a href=&quot;sync/struct.arc&quot;&gt;&lt;code&gt;Arc&lt;/code&gt;&lt;/a&gt;, with a &lt;a href=&quot;sync/struct.mutex&quot;&gt;&lt;code&gt;Mutex&lt;/code&gt;&lt;/a&gt; to get the same effect.</source>
          <target state="translated">データは、参照カウントボックスまたは&lt;a href=&quot;rc/index&quot;&gt; &lt;code&gt;Rc&lt;/code&gt; &lt;/a&gt;タイプに配置することで共有でき、さらに&lt;a href=&quot;cell/struct.cell&quot;&gt; &lt;code&gt;Cell&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;cell/struct.refcell&quot;&gt; &lt;code&gt;RefCell&lt;/code&gt; に&lt;/a&gt;含まれている場合は、共有するだけでなく変更することもできます。同様に、同時設定では、原子的に参照カウントされるボックス&lt;a href=&quot;sync/struct.arc&quot;&gt; &lt;code&gt;Arc&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;sync/struct.mutex&quot;&gt; &lt;code&gt;Mutex&lt;/code&gt; &lt;/a&gt;とペアにして同じ効果を得るのが一般的です。</target>
        </trans-unit>
        <trans-unit id="ef8cbafde79f4709d58bdb0fb31a7b64e6b7c79a" translate="yes" xml:space="preserve">
          <source>Data may be shared by placing it in a reference-counted box or the &lt;a href=&quot;rc/struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt; type, and if further contained in a &lt;a href=&quot;cell/struct.cell&quot;&gt;&lt;code&gt;Cell&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;cell/struct.refcell&quot;&gt;&lt;code&gt;RefCell&lt;/code&gt;&lt;/a&gt;, may be mutated as well as shared. Likewise, in a concurrent setting it is common to pair an atomically-reference-counted box, &lt;a href=&quot;sync/struct.arc&quot;&gt;&lt;code&gt;Arc&lt;/code&gt;&lt;/a&gt;, with a &lt;a href=&quot;sync/struct.mutex&quot;&gt;&lt;code&gt;Mutex&lt;/code&gt;&lt;/a&gt; to get the same effect.</source>
          <target state="translated">データは、参照カウントボックスまたは&lt;a href=&quot;rc/struct.rc&quot;&gt; &lt;code&gt;Rc&lt;/code&gt; &lt;/a&gt;タイプに配置することで共有でき、さらに&lt;a href=&quot;cell/struct.cell&quot;&gt; &lt;code&gt;Cell&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;cell/struct.refcell&quot;&gt; &lt;code&gt;RefCell&lt;/code&gt; に&lt;/a&gt;含まれている場合は、変更および共有できます。同様に、並行設定では、同じ効果を得るために、原子参照カウントボックス&lt;a href=&quot;sync/struct.arc&quot;&gt; &lt;code&gt;Arc&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;sync/struct.mutex&quot;&gt; &lt;code&gt;Mutex&lt;/code&gt; &lt;/a&gt;とペアにするのが一般的です。</target>
        </trans-unit>
        <trans-unit id="28295791c86f3115b889cd7ec2915e8186bc50ed" translate="yes" xml:space="preserve">
          <source>Data not valid for the operation were encountered.</source>
          <target state="translated">操作に有効でないデータが発生しました。</target>
        </trans-unit>
        <trans-unit id="caaa4a467eaa32287a4168d5ef4944fb42825483" translate="yes" xml:space="preserve">
          <source>Data races cause undefined behavior and can be difficult to diagnose and fix when you&amp;rsquo;re trying to track them down at runtime; Rust prevents this problem from happening because it won&amp;rsquo;t even compile code with data races!</source>
          <target state="translated">データの競合は未定義の動作を引き起こし、実行時にそれらを追跡しようとすると、診断と修正が困難になる可能性があります。Rustは、データ競合のあるコードもコンパイルしないため、この問題の発生を防ぎます。</target>
        </trans-unit>
        <trans-unit id="fa03516fcd9411e8d8266af480dc648c27058a2e" translate="yes" xml:space="preserve">
          <source>Data races.</source>
          <target state="translated">データレース。</target>
        </trans-unit>
        <trans-unit id="0f3958acb7234fe3e10691732285b0dd0917a3f2" translate="yes" xml:space="preserve">
          <source>De-normalized floating point representation (less precise than &lt;code&gt;Normal&lt;/code&gt;).</source>
          <target state="translated">非正規化された浮動小数点表現（ &lt;code&gt;Normal&lt;/code&gt; より精度が低い）。</target>
        </trans-unit>
        <trans-unit id="2f5cf1c11e68d3f1c518349f633afc29d6e23118" translate="yes" xml:space="preserve">
          <source>Deadlocks</source>
          <target state="translated">Deadlocks</target>
        </trans-unit>
        <trans-unit id="34b23af80772bac584b8b14b4c6d7c4746675c35" translate="yes" xml:space="preserve">
          <source>Deadlocks, where two threads are waiting for each other to finish using a resource the other thread has, preventing both threads from continuing</source>
          <target state="translated">デッドロックとは、2 つのスレッドが他方のスレッドが持っているリソースの使用終了を待っている状態で、両方のスレッドの継続を妨げることです。</target>
        </trans-unit>
        <trans-unit id="d94576b7eb60cf1bd0d90b5f4d335da0f3c0cdff" translate="yes" xml:space="preserve">
          <source>Deallocate memory with the global allocator.</source>
          <target state="translated">グローバルアロケータでメモリを解放します。</target>
        </trans-unit>
        <trans-unit id="70002793b47c615d523c65de058268e76678384a" translate="yes" xml:space="preserve">
          <source>Deallocate the block of memory at the given &lt;code&gt;ptr&lt;/code&gt; pointer with the given &lt;code&gt;layout&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;layout&lt;/code&gt; で、指定された &lt;code&gt;ptr&lt;/code&gt; ポインターにあるメモリブロックの割り当てを解除します。</target>
        </trans-unit>
        <trans-unit id="841bbd92cc71925f18003b934ca5775c323421fc" translate="yes" xml:space="preserve">
          <source>Deallocate the block of memory at the given &lt;code&gt;ptr&lt;/code&gt; pointer with the given &lt;code&gt;layout&lt;/code&gt;. &lt;a href=&quot;trait.globalalloc#tymethod.dealloc&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">指定された &lt;code&gt;layout&lt;/code&gt; で、指定された &lt;code&gt;ptr&lt;/code&gt; ポインターにあるメモリブロックの割り当てを解除します。&lt;a href=&quot;trait.globalalloc#tymethod.dealloc&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6521f0ab7ee551f2824e33de2c46172646b6af9e" translate="yes" xml:space="preserve">
          <source>Deallocate the memory referenced by &lt;code&gt;ptr&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ptr&lt;/code&gt; が参照するメモリの割り当てを解除します。</target>
        </trans-unit>
        <trans-unit id="00e2ad4b768a5d6394b5422c09114b054ac731c7" translate="yes" xml:space="preserve">
          <source>Deallocate the memory referenced by &lt;code&gt;ptr&lt;/code&gt;. &lt;a href=&quot;trait.alloc#tymethod.dealloc&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;ptr&lt;/code&gt; が参照するメモリの割り当てを解除します。&lt;a href=&quot;trait.alloc#tymethod.dealloc&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="098bb5a7f008a74e6e66b63758b617be71d735dd" translate="yes" xml:space="preserve">
          <source>Deallocates a block suitable for holding &lt;code&gt;n&lt;/code&gt; instances of &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; の &lt;code&gt;n&lt;/code&gt; 個のインスタンスを保持するのに適したブロックの割り当てを解除します。</target>
        </trans-unit>
        <trans-unit id="e69067c8504c952e8d8c512f055e66cd88ceccc6" translate="yes" xml:space="preserve">
          <source>Deallocates a block suitable for holding &lt;code&gt;n&lt;/code&gt; instances of &lt;code&gt;T&lt;/code&gt;. &lt;a href=&quot;trait.alloc#method.dealloc_array&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; の &lt;code&gt;n&lt;/code&gt; 個のインスタンスを保持するのに適したブロックの割り当てを解除します。&lt;a href=&quot;trait.alloc#method.dealloc_array&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="db6030c8232842854382777ea39327a4cabb6d31" translate="yes" xml:space="preserve">
          <source>Deallocates a block suitable for holding an instance of &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; のインスタンスを保持するのに適したブロックの割り当てを解除します。</target>
        </trans-unit>
        <trans-unit id="17cb41f6768dd191f0a261566c1ec49e57f6bd3b" translate="yes" xml:space="preserve">
          <source>Deallocates a block suitable for holding an instance of &lt;code&gt;T&lt;/code&gt;. &lt;a href=&quot;trait.alloc#method.dealloc_one&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; のインスタンスを保持するのに適したブロックの割り当てを解除します。&lt;a href=&quot;trait.alloc#method.dealloc_one&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2d22a14cf52483c1443b068fec7531c36b2389af" translate="yes" xml:space="preserve">
          <source>Deallocates the memory referenced by &lt;code&gt;ptr&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ptr&lt;/code&gt; によって参照されるメモリの割り当てを解除します。</target>
        </trans-unit>
        <trans-unit id="6769b0cd10b473994c7c8069b6d2ebbbc6ebfbda" translate="yes" xml:space="preserve">
          <source>Deallocates the memory referenced by &lt;code&gt;ptr&lt;/code&gt;. &lt;a href=&quot;alloc/trait.allocref#tymethod.dealloc&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;ptr&lt;/code&gt; によって参照されるメモリの割り当てを解除します。&lt;a href=&quot;alloc/trait.allocref#tymethod.dealloc&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ffbdd035a3f1e90c830c666734c828cb3955719b" translate="yes" xml:space="preserve">
          <source>Deallocates the memory referenced by &lt;code&gt;ptr&lt;/code&gt;. &lt;a href=&quot;trait.allocref#tymethod.dealloc&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;ptr&lt;/code&gt; によって参照されるメモリの割り当てを解除します。&lt;a href=&quot;trait.allocref#tymethod.dealloc&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bd604d99e75e45d38bc7ac8fc714cde0097d901f" translate="yes" xml:space="preserve">
          <source>Debug</source>
          <target state="translated">Debug</target>
        </trans-unit>
        <trans-unit id="81164edb834d0582600df8183d4f2141de3b5a84" translate="yes" xml:space="preserve">
          <source>Debug::fmt</source>
          <target state="translated">Debug::fmt</target>
        </trans-unit>
        <trans-unit id="a60d7a220215e446f14b6e7a44b1a8c1e12db251" translate="yes" xml:space="preserve">
          <source>DebugList</source>
          <target state="translated">DebugList</target>
        </trans-unit>
        <trans-unit id="8e32753212f38e07b45082bd67afbefa9455df23" translate="yes" xml:space="preserve">
          <source>DebugList::borrow</source>
          <target state="translated">DebugList::borrow</target>
        </trans-unit>
        <trans-unit id="6e538f2f34ae7df7422cf04d9b6e72f903bee574" translate="yes" xml:space="preserve">
          <source>DebugList::borrow_mut</source>
          <target state="translated">DebugList::borrow_mut</target>
        </trans-unit>
        <trans-unit id="11ce0b1f059d54fd67d8fbcb55818c1f9e86f6f7" translate="yes" xml:space="preserve">
          <source>DebugList::entries</source>
          <target state="translated">DebugList::entries</target>
        </trans-unit>
        <trans-unit id="9ff5c17cf0e4c21540c9aaa44e46f2485fdec59c" translate="yes" xml:space="preserve">
          <source>DebugList::entry</source>
          <target state="translated">DebugList::entry</target>
        </trans-unit>
        <trans-unit id="c19a162ab01fbe042640fc4c505402b8d710aa72" translate="yes" xml:space="preserve">
          <source>DebugList::finish</source>
          <target state="translated">DebugList::finish</target>
        </trans-unit>
        <trans-unit id="7256f7d6d969cebd9970fa654c9384cceae41331" translate="yes" xml:space="preserve">
          <source>DebugList::from</source>
          <target state="translated">DebugList::from</target>
        </trans-unit>
        <trans-unit id="5c2ec45e4d2932f4446cb6a1afb1d22167903dfb" translate="yes" xml:space="preserve">
          <source>DebugList::into</source>
          <target state="translated">DebugList::into</target>
        </trans-unit>
        <trans-unit id="465231e925b00ba7cc222c32dce7510fd59b2a56" translate="yes" xml:space="preserve">
          <source>DebugList::try_from</source>
          <target state="translated">DebugList::try_from</target>
        </trans-unit>
        <trans-unit id="f0b0b267ea2c86de5c461858e1f17f9e6bc6a872" translate="yes" xml:space="preserve">
          <source>DebugList::try_into</source>
          <target state="translated">DebugList::try_into</target>
        </trans-unit>
        <trans-unit id="e4fe6c78613749267cef784a01421fd37be47c5c" translate="yes" xml:space="preserve">
          <source>DebugList::type_id</source>
          <target state="translated">DebugList::type_id</target>
        </trans-unit>
        <trans-unit id="d65787461745ccdefb29a1ef93d515613ba02864" translate="yes" xml:space="preserve">
          <source>DebugMap</source>
          <target state="translated">DebugMap</target>
        </trans-unit>
        <trans-unit id="1996b3406e1b61233f441b5b7f2647371d4b256b" translate="yes" xml:space="preserve">
          <source>DebugMap::borrow</source>
          <target state="translated">DebugMap::borrow</target>
        </trans-unit>
        <trans-unit id="77271b65d620d9544f75c95a8cd6811a098f3b42" translate="yes" xml:space="preserve">
          <source>DebugMap::borrow_mut</source>
          <target state="translated">DebugMap::borrow_mut</target>
        </trans-unit>
        <trans-unit id="c2c725b63e4b18d010f349c1db9eef911ebaeba7" translate="yes" xml:space="preserve">
          <source>DebugMap::entries</source>
          <target state="translated">DebugMap::entries</target>
        </trans-unit>
        <trans-unit id="85c74badc715b8b566e807b287878d5b84888c27" translate="yes" xml:space="preserve">
          <source>DebugMap::entry</source>
          <target state="translated">DebugMap::entry</target>
        </trans-unit>
        <trans-unit id="8eed89e8c1389f62162e3ab7b94301b53cde4fb2" translate="yes" xml:space="preserve">
          <source>DebugMap::finish</source>
          <target state="translated">DebugMap::finish</target>
        </trans-unit>
        <trans-unit id="b6616b7c4b428fd773525b9832363b87d439b976" translate="yes" xml:space="preserve">
          <source>DebugMap::from</source>
          <target state="translated">DebugMap::from</target>
        </trans-unit>
        <trans-unit id="0d1ac893758c80699e398e4af9ac25747ce47322" translate="yes" xml:space="preserve">
          <source>DebugMap::into</source>
          <target state="translated">DebugMap::into</target>
        </trans-unit>
        <trans-unit id="a6df898952d6600e334a9789c683a0676756e9fb" translate="yes" xml:space="preserve">
          <source>DebugMap::try_from</source>
          <target state="translated">DebugMap::try_from</target>
        </trans-unit>
        <trans-unit id="cba0a69042fde2e8dece557c2b2e95cc14bdbab9" translate="yes" xml:space="preserve">
          <source>DebugMap::try_into</source>
          <target state="translated">DebugMap::try_into</target>
        </trans-unit>
        <trans-unit id="a3a7026fbb6774eba354aadfb42622de28ef1e65" translate="yes" xml:space="preserve">
          <source>DebugMap::type_id</source>
          <target state="translated">DebugMap::type_id</target>
        </trans-unit>
        <trans-unit id="c34a95fb1ea481df36eb0ff78cdcfbee19e6330e" translate="yes" xml:space="preserve">
          <source>DebugSet</source>
          <target state="translated">DebugSet</target>
        </trans-unit>
        <trans-unit id="8e0ca6285a8dc009ab24947b479583e3b565665d" translate="yes" xml:space="preserve">
          <source>DebugSet::borrow</source>
          <target state="translated">DebugSet::borrow</target>
        </trans-unit>
        <trans-unit id="1f56f91582358975a9688e175b36dc01c0f1f478" translate="yes" xml:space="preserve">
          <source>DebugSet::borrow_mut</source>
          <target state="translated">DebugSet::borrow_mut</target>
        </trans-unit>
        <trans-unit id="c711c41c48e718c7ad771c23111ef4e997f2ea48" translate="yes" xml:space="preserve">
          <source>DebugSet::entries</source>
          <target state="translated">DebugSet::entries</target>
        </trans-unit>
        <trans-unit id="397086f95495cd8c06ad52edb6bbcbb017063dd9" translate="yes" xml:space="preserve">
          <source>DebugSet::entry</source>
          <target state="translated">DebugSet::entry</target>
        </trans-unit>
        <trans-unit id="bed6afcb9558fb0816673a6344c2cd0bdcec64ae" translate="yes" xml:space="preserve">
          <source>DebugSet::finish</source>
          <target state="translated">DebugSet::finish</target>
        </trans-unit>
        <trans-unit id="c81f1d75420a4fa3f9c66786b2f75ec41a21f5ee" translate="yes" xml:space="preserve">
          <source>DebugSet::from</source>
          <target state="translated">DebugSet::from</target>
        </trans-unit>
        <trans-unit id="0b167f08c0d49297e5301b7a612f9354c4ecc1be" translate="yes" xml:space="preserve">
          <source>DebugSet::into</source>
          <target state="translated">DebugSet::into</target>
        </trans-unit>
        <trans-unit id="40ba72fe403768332afbbcca4e42acd14e80201d" translate="yes" xml:space="preserve">
          <source>DebugSet::try_from</source>
          <target state="translated">DebugSet::try_from</target>
        </trans-unit>
        <trans-unit id="83c39780ab24417a91d39f0ac512e899cffdb7de" translate="yes" xml:space="preserve">
          <source>DebugSet::try_into</source>
          <target state="translated">DebugSet::try_into</target>
        </trans-unit>
        <trans-unit id="d16121a11a75123841f26b5dbde232385c5fee62" translate="yes" xml:space="preserve">
          <source>DebugSet::type_id</source>
          <target state="translated">DebugSet::type_id</target>
        </trans-unit>
        <trans-unit id="543f197c96218c42d00f3c3611b631c8212553d6" translate="yes" xml:space="preserve">
          <source>DebugStruct</source>
          <target state="translated">DebugStruct</target>
        </trans-unit>
        <trans-unit id="8b4c59f42a21add90383270ca4a52bb86c600fe9" translate="yes" xml:space="preserve">
          <source>DebugStruct::borrow</source>
          <target state="translated">DebugStruct::borrow</target>
        </trans-unit>
        <trans-unit id="6f6f363bd50fd68fc6eba33f1871ca1be1027efa" translate="yes" xml:space="preserve">
          <source>DebugStruct::borrow_mut</source>
          <target state="translated">DebugStruct::borrow_mut</target>
        </trans-unit>
        <trans-unit id="4fd044d6c6466522217e882896e40c73bb8c78bc" translate="yes" xml:space="preserve">
          <source>DebugStruct::field</source>
          <target state="translated">DebugStruct::field</target>
        </trans-unit>
        <trans-unit id="13384f4f2be55007b243b5f88dc97caee0104dfe" translate="yes" xml:space="preserve">
          <source>DebugStruct::finish</source>
          <target state="translated">DebugStruct::finish</target>
        </trans-unit>
        <trans-unit id="eaca2ed00445725cca18995faa13be91a5504727" translate="yes" xml:space="preserve">
          <source>DebugStruct::from</source>
          <target state="translated">DebugStruct::from</target>
        </trans-unit>
        <trans-unit id="55216f9d28cb3b4ff24ed1f1adeba1bee87c89b7" translate="yes" xml:space="preserve">
          <source>DebugStruct::into</source>
          <target state="translated">DebugStruct::into</target>
        </trans-unit>
        <trans-unit id="221fde73b903baccd6b64c8e58365835bc198da9" translate="yes" xml:space="preserve">
          <source>DebugStruct::try_from</source>
          <target state="translated">DebugStruct::try_from</target>
        </trans-unit>
        <trans-unit id="7da40d465656eb737dc43460497f2376d260baf8" translate="yes" xml:space="preserve">
          <source>DebugStruct::try_into</source>
          <target state="translated">DebugStruct::try_into</target>
        </trans-unit>
        <trans-unit id="0eb0a9173b8a55437fd0ec85c6c712f7da69e5be" translate="yes" xml:space="preserve">
          <source>DebugStruct::type_id</source>
          <target state="translated">DebugStruct::type_id</target>
        </trans-unit>
        <trans-unit id="ca16f4625171c71844b8750eb83afa29bd182aaf" translate="yes" xml:space="preserve">
          <source>DebugTuple</source>
          <target state="translated">DebugTuple</target>
        </trans-unit>
        <trans-unit id="82ac20591a60e27a5a17183f0921fbee6ac1e74a" translate="yes" xml:space="preserve">
          <source>DebugTuple::borrow</source>
          <target state="translated">DebugTuple::borrow</target>
        </trans-unit>
        <trans-unit id="e56cc02dd85f36a8c0faf22a05b13facd77fed5a" translate="yes" xml:space="preserve">
          <source>DebugTuple::borrow_mut</source>
          <target state="translated">DebugTuple::borrow_mut</target>
        </trans-unit>
        <trans-unit id="c48d3ddd38f9976a508d216548647eea55e12e50" translate="yes" xml:space="preserve">
          <source>DebugTuple::field</source>
          <target state="translated">DebugTuple::field</target>
        </trans-unit>
        <trans-unit id="f9566df1af4c6264a18f41b5e2dcbbdff9c4ceb4" translate="yes" xml:space="preserve">
          <source>DebugTuple::finish</source>
          <target state="translated">DebugTuple::finish</target>
        </trans-unit>
        <trans-unit id="13bc97fcdaf2fc11c852f2bdfab78811e7df3040" translate="yes" xml:space="preserve">
          <source>DebugTuple::from</source>
          <target state="translated">DebugTuple::from</target>
        </trans-unit>
        <trans-unit id="4bffff5fc2311eec224ce6f3595668c685d971d6" translate="yes" xml:space="preserve">
          <source>DebugTuple::into</source>
          <target state="translated">DebugTuple::into</target>
        </trans-unit>
        <trans-unit id="914aa9f66ceddf11f34b0abc994ace846eb9eac8" translate="yes" xml:space="preserve">
          <source>DebugTuple::try_from</source>
          <target state="translated">DebugTuple::try_from</target>
        </trans-unit>
        <trans-unit id="0121a5bcd33f73295972d50f242021790394310f" translate="yes" xml:space="preserve">
          <source>DebugTuple::try_into</source>
          <target state="translated">DebugTuple::try_into</target>
        </trans-unit>
        <trans-unit id="33304e6a454f2852d0a43d9d56b69ef7a57a9ce5" translate="yes" xml:space="preserve">
          <source>DebugTuple::type_id</source>
          <target state="translated">DebugTuple::type_id</target>
        </trans-unit>
        <trans-unit id="7df80a24c5ca433ebd54a75a88f80219152b5575" translate="yes" xml:space="preserve">
          <source>Deciding whether or not to run some code depending on if a condition is true and deciding to run some code repeatedly while a condition is true are basic building blocks in most programming languages. The most common constructs that let you control the flow of execution of Rust code are &lt;code&gt;if&lt;/code&gt; expressions and loops.</source>
          <target state="translated">ほとんどのプログラミング言語では、条件がtrueかどうかに応じてコードを実行するかどうかを決定し、条件がtrueのときにコードを繰り返し実行することを決定することが基本的なビルディングブロックです。Rustコードの実行フローを制御できる最も一般的な構造は &lt;code&gt;if&lt;/code&gt; 式とループです。</target>
        </trans-unit>
        <trans-unit id="e4c3a2d0cc24a4535ef91791064ffe989cbd382a" translate="yes" xml:space="preserve">
          <source>Decimal</source>
          <target state="translated">Decimal</target>
        </trans-unit>
        <trans-unit id="ab5dfb740f9cf7f9df79ba16d24345758db1c965" translate="yes" xml:space="preserve">
          <source>Decimal integer</source>
          <target state="translated">10進整数</target>
        </trans-unit>
        <trans-unit id="267eb363b3f106e3005ab1c50b0101debef66501" translate="yes" xml:space="preserve">
          <source>Declaration statements</source>
          <target state="translated">宣言文</target>
        </trans-unit>
        <trans-unit id="a8c466a48da20d4783681f65fecd8bcef83753d0" translate="yes" xml:space="preserve">
          <source>Declarative Macros with &lt;code id=&quot;declarative-macros-with-macro_rules-for-general-metaprogramming&quot;&gt;macro_rules!&lt;/code&gt; for General Metaprogramming</source>
          <target state="translated">&lt;code id=&quot;declarative-macros-with-macro_rules-for-general-metaprogramming&quot;&gt;macro_rules!&lt;/code&gt; 使用した宣言型マクロ！一般的なメタプログラミング</target>
        </trans-unit>
        <trans-unit id="cd5c6ebc8bd2bce6c0a6e1be3404d50878875217" translate="yes" xml:space="preserve">
          <source>Declare a new thread local storage key of type &lt;a href=&quot;thread/struct.localkey&quot;&gt;&lt;code&gt;std::thread::LocalKey&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">タイプ&lt;a href=&quot;thread/struct.localkey&quot;&gt; &lt;code&gt;std::thread::LocalKey&lt;/code&gt; &lt;/a&gt;新しいスレッドローカルストレージキーを宣言します。</target>
        </trans-unit>
        <trans-unit id="2dd53328b7399187bf3122b0f2f58b4adca6d4f4" translate="yes" xml:space="preserve">
          <source>Declaring certain lifetime names in parameters is disallowed. For example, because the &lt;code&gt;'static&lt;/code&gt; lifetime is a special built-in lifetime name denoting the lifetime of the entire program, this is an error:</source>
          <target state="translated">パラメータで特定のライフタイム名を宣言することはできません。たとえば、 &lt;code&gt;'static&lt;/code&gt; 存続期間は、プログラム全体の存続期間を示す特別な組み込みの存続期間名であるため、これはエラーです。</target>
        </trans-unit>
        <trans-unit id="e85646d3cbbec2f794cafd1f6c0e5a30bdcb1a5e" translate="yes" xml:space="preserve">
          <source>Declaring trait bounds in the angle brackets is functionally identical to using a &lt;code&gt;where&lt;/code&gt; clause. It's up to the programmer to decide which works better in each situation, but &lt;code&gt;where&lt;/code&gt; tends to be better when things get longer than one line.</source>
          <target state="translated">山括弧で特性の境界を宣言することは、 &lt;code&gt;where&lt;/code&gt; 句を使用することと機能的に同じです。どちらの状況でどちらがうまく機能するかを決めるのはプログラマ次第ですが、1行より長くなると &lt;code&gt;where&lt;/code&gt; がより良くなる傾向があります。</target>
        </trans-unit>
        <trans-unit id="d846b5b62babf0599823ec3f319c60bd484eef4c" translate="yes" xml:space="preserve">
          <source>Decode a UTF-16 encoded slice &lt;code&gt;v&lt;/code&gt; into a &lt;code&gt;String&lt;/code&gt;, replacing invalid data with &lt;a href=&quot;../char/constant.replacement_character&quot;&gt;the replacement character (&lt;code&gt;U+FFFD&lt;/code&gt;)&lt;/a&gt;.</source>
          <target state="translated">UTF-16でエンコードされたスライス &lt;code&gt;v&lt;/code&gt; を &lt;code&gt;String&lt;/code&gt; にデコードし、無効なデータを&lt;a href=&quot;../char/constant.replacement_character&quot;&gt;置換文字（ &lt;code&gt;U+FFFD&lt;/code&gt; ）&lt;/a&gt;に置き換えます。</target>
        </trans-unit>
        <trans-unit id="21bdb9e0691185467f8cb5a27d35bb07e5eb7923" translate="yes" xml:space="preserve">
          <source>Decode a UTF-16 encoded vector &lt;code&gt;v&lt;/code&gt; into a &lt;code&gt;String&lt;/code&gt;, returning &lt;a href=&quot;../result/enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;v&lt;/code&gt; contains any invalid data.</source>
          <target state="translated">UTF-16でエンコードされたベクトル &lt;code&gt;v&lt;/code&gt; を &lt;code&gt;String&lt;/code&gt; にデコードし、 &lt;code&gt;v&lt;/code&gt; に無効なデータが含まれている場合は&lt;a href=&quot;../result/enum.result#variant.Err&quot;&gt; &lt;code&gt;Err&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="a8751b5af78112e3f85864def20bcbd6119659f5" translate="yes" xml:space="preserve">
          <source>Decode a UTF-16&amp;ndash;encoded slice &lt;code&gt;v&lt;/code&gt; into a &lt;code&gt;String&lt;/code&gt;, replacing invalid data with &lt;a href=&quot;../char/constant.replacement_character&quot;&gt;the replacement character (&lt;code&gt;U+FFFD&lt;/code&gt;)&lt;/a&gt;.</source>
          <target state="translated">UTF-16でエンコードされたスライス &lt;code&gt;v&lt;/code&gt; を &lt;code&gt;String&lt;/code&gt; にデコードし、無効なデータを&lt;a href=&quot;../char/constant.replacement_character&quot;&gt;置換文字（ &lt;code&gt;U+FFFD&lt;/code&gt; ）&lt;/a&gt;に置き換えます。</target>
        </trans-unit>
        <trans-unit id="bcee45d2009ddc9b3783bb50b333f7ed6038de41" translate="yes" xml:space="preserve">
          <source>Decode a UTF-16&amp;ndash;encoded vector &lt;code&gt;v&lt;/code&gt; into a &lt;code&gt;String&lt;/code&gt;, returning &lt;a href=&quot;../result/enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;v&lt;/code&gt; contains any invalid data.</source>
          <target state="translated">UTF-16でエンコードされたベクトル &lt;code&gt;v&lt;/code&gt; を &lt;code&gt;String&lt;/code&gt; にデコードし、 &lt;code&gt;v&lt;/code&gt; に無効なデータが含まれている場合は&lt;a href=&quot;../result/enum.result#variant.Err&quot;&gt; &lt;code&gt;Err&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="8fffb92833cd137b0d11eb520711921dbe305c65" translate="yes" xml:space="preserve">
          <source>DecodeUtf16</source>
          <target state="translated">DecodeUtf16</target>
        </trans-unit>
        <trans-unit id="0c483dd3eb1072e079a76cdff25767cef5239b4d" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::all</source>
          <target state="translated">DecodeUtf16::all</target>
        </trans-unit>
        <trans-unit id="72be3e90a471172e13d134ea30de51b34ff02e4a" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::any</source>
          <target state="translated">DecodeUtf16::any</target>
        </trans-unit>
        <trans-unit id="0cd27e5cdd32ad738f9708c765550d72fc4051c4" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::borrow</source>
          <target state="translated">DecodeUtf16::borrow</target>
        </trans-unit>
        <trans-unit id="2bd2a3baff16c454c8c025311bf84e232e23c901" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::borrow_mut</source>
          <target state="translated">DecodeUtf16::borrow_mut</target>
        </trans-unit>
        <trans-unit id="38263ed2c391818e9c87a4c754852ba2347092ec" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::by_ref</source>
          <target state="translated">DecodeUtf16::by_ref</target>
        </trans-unit>
        <trans-unit id="b4738fe8edf872aa55bb32d4a46a722587fb9f3c" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::chain</source>
          <target state="translated">DecodeUtf16::chain</target>
        </trans-unit>
        <trans-unit id="253ae9d3ee778d2346f4b8aae74c5779ab524b7b" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::clone</source>
          <target state="translated">DecodeUtf16::clone</target>
        </trans-unit>
        <trans-unit id="c4f2fa58f83d71be6d9282a5206e725c2b0d11e6" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::clone_from</source>
          <target state="translated">DecodeUtf16::clone_from</target>
        </trans-unit>
        <trans-unit id="ae30f757586afa7346e44d5347d901fa5861ad4d" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::clone_into</source>
          <target state="translated">DecodeUtf16::clone_into</target>
        </trans-unit>
        <trans-unit id="addc90728a51f00c01320c067f7190ac5a948806" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::cloned</source>
          <target state="translated">DecodeUtf16::cloned</target>
        </trans-unit>
        <trans-unit id="9d32f1da8111490a65d664cad786f0def6cfb11c" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::cmp</source>
          <target state="translated">DecodeUtf16::cmp</target>
        </trans-unit>
        <trans-unit id="b90f6797c521cf83e47be443b21d8fbb74f7d83e" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::collect</source>
          <target state="translated">DecodeUtf16::collect</target>
        </trans-unit>
        <trans-unit id="03a5eb4ee8df93f7630975658679f9f5a1b4d37a" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::copied</source>
          <target state="translated">DecodeUtf16::copied</target>
        </trans-unit>
        <trans-unit id="8be2a7b891e2190982d72f3b26846e4961c825ec" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::count</source>
          <target state="translated">DecodeUtf16::count</target>
        </trans-unit>
        <trans-unit id="8c875b692130f6baf66d6ed3b81247d352f87b58" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::cycle</source>
          <target state="translated">DecodeUtf16::cycle</target>
        </trans-unit>
        <trans-unit id="1e584bfedeea2149d93854c5da699e783d287fce" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::enumerate</source>
          <target state="translated">DecodeUtf16::enumerate</target>
        </trans-unit>
        <trans-unit id="b5f80c2c58ed5aac137bd86b727e4eb8204ba72c" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::eq</source>
          <target state="translated">DecodeUtf16::eq</target>
        </trans-unit>
        <trans-unit id="d2faf11b797fb537b8f68557f39cb4f61496fc15" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::filter</source>
          <target state="translated">DecodeUtf16::filter</target>
        </trans-unit>
        <trans-unit id="8b371813c6bed14f9e4b62a6a500cff43b2246b8" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::filter_map</source>
          <target state="translated">DecodeUtf16::filter_map</target>
        </trans-unit>
        <trans-unit id="3a09c33ed942f593ce334e2cc0e4931fb37028c3" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::find</source>
          <target state="translated">DecodeUtf16::find</target>
        </trans-unit>
        <trans-unit id="8207967a7c0b1c60f5f2c77958103b46c2c2c631" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::find_map</source>
          <target state="translated">DecodeUtf16::find_map</target>
        </trans-unit>
        <trans-unit id="53ae08731c8b4e9c9f3bf4450cb3a889f6e67310" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::flat_map</source>
          <target state="translated">DecodeUtf16::flat_map</target>
        </trans-unit>
        <trans-unit id="985c3854ddd66e22f28f9cb3dd0ffaa887cbeb24" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::flatten</source>
          <target state="translated">DecodeUtf16::flatten</target>
        </trans-unit>
        <trans-unit id="a74ce9887720d3c66123ae8487ad2f5f4108f1fc" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::fmt</source>
          <target state="translated">DecodeUtf16::fmt</target>
        </trans-unit>
        <trans-unit id="9138f81507d593a6dd9a94b28230b7f4465c7525" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::fold</source>
          <target state="translated">DecodeUtf16::fold</target>
        </trans-unit>
        <trans-unit id="d567075852c0ffff9943090dbe41c2f045aa7674" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::for_each</source>
          <target state="translated">DecodeUtf16::for_each</target>
        </trans-unit>
        <trans-unit id="c6bcb592254965889502aeec4d58fdb21efabc60" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::from</source>
          <target state="translated">DecodeUtf16::from</target>
        </trans-unit>
        <trans-unit id="337cb61999d9eafa82189ed3cb16765b11e0d1db" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::fuse</source>
          <target state="translated">DecodeUtf16::fuse</target>
        </trans-unit>
        <trans-unit id="b4162866b2927b3ddbe1ee045f3984c1c2bd908c" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::ge</source>
          <target state="translated">DecodeUtf16::ge</target>
        </trans-unit>
        <trans-unit id="30ba08f24cfe0775ac2885dc99addc69712df4ad" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::gt</source>
          <target state="translated">DecodeUtf16::gt</target>
        </trans-unit>
        <trans-unit id="f559c26f562617182e7d26ce5b1062cdfc92e6cf" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::inspect</source>
          <target state="translated">DecodeUtf16::inspect</target>
        </trans-unit>
        <trans-unit id="536a2d081f7521cca991a1015d5ef3202be51ff6" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::into</source>
          <target state="translated">DecodeUtf16::into</target>
        </trans-unit>
        <trans-unit id="4618c1955a2828ec2d835ec134d53f166e579304" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::into_iter</source>
          <target state="translated">DecodeUtf16::into_iter</target>
        </trans-unit>
        <trans-unit id="b5a06fb6e342bf63a01e54cd8d216b9352c9c447" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::is_sorted</source>
          <target state="translated">DecodeUtf16::is_sorted</target>
        </trans-unit>
        <trans-unit id="1caf54191f95cb6a00d350c90a9ab4a23f9f0442" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::is_sorted_by</source>
          <target state="translated">DecodeUtf16::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="b9821a021c1e7b391faf0268cb0591ddb59132fe" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::is_sorted_by_key</source>
          <target state="translated">DecodeUtf16::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="cf18fbbeacb112db644fb8c7c02290fb789dcc2e" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::last</source>
          <target state="translated">DecodeUtf16::last</target>
        </trans-unit>
        <trans-unit id="7a3ceaffbd36446f84baa221182083cc02f52dc9" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::le</source>
          <target state="translated">DecodeUtf16::le</target>
        </trans-unit>
        <trans-unit id="5a764cf30c7856aa95f980e1e74156be03ba90d5" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::lt</source>
          <target state="translated">DecodeUtf16::lt</target>
        </trans-unit>
        <trans-unit id="eaee1242b914b3fdcdfb4e54565e746ff71ab4ff" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::map</source>
          <target state="translated">DecodeUtf16::map</target>
        </trans-unit>
        <trans-unit id="54aee96756a6781187cab26d6acfc2cdc53e25e2" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::max</source>
          <target state="translated">DecodeUtf16::max</target>
        </trans-unit>
        <trans-unit id="e0c186488d3fdf30fdf211b8c45d6d81803bc721" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::max_by</source>
          <target state="translated">DecodeUtf16::max_by</target>
        </trans-unit>
        <trans-unit id="5931ca9a135b6a788c336a8f4f8b2fdc46329ccb" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::max_by_key</source>
          <target state="translated">DecodeUtf16::max_by_key</target>
        </trans-unit>
        <trans-unit id="6dbdf50dba6e5087447ff606cb15cb17757a5560" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::min</source>
          <target state="translated">DecodeUtf16::min</target>
        </trans-unit>
        <trans-unit id="66dddee8a18f3f12d1c55b026d827f31407f2066" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::min_by</source>
          <target state="translated">DecodeUtf16::min_by</target>
        </trans-unit>
        <trans-unit id="c515d70ba6d459e409eb6c889e0bba6724801728" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::min_by_key</source>
          <target state="translated">DecodeUtf16::min_by_key</target>
        </trans-unit>
        <trans-unit id="34035a4bf555e9fbe6e41d9bf364506f7d2986be" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::ne</source>
          <target state="translated">DecodeUtf16::ne</target>
        </trans-unit>
        <trans-unit id="8b3b353f847b6e6f91d4903131bfdcd62d4ab927" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::next</source>
          <target state="translated">DecodeUtf16::next</target>
        </trans-unit>
        <trans-unit id="531aa0dbeddda4e7c96c5f7eee86ad5b91a61d03" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::nth</source>
          <target state="translated">DecodeUtf16::nth</target>
        </trans-unit>
        <trans-unit id="2cf52fad6a455ff6ff67456d67ba5468b4a89980" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::partial_cmp</source>
          <target state="translated">DecodeUtf16::partial_cmp</target>
        </trans-unit>
        <trans-unit id="2a6ad48ca7814ff23afb377483397444bb413923" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::partition</source>
          <target state="translated">DecodeUtf16::partition</target>
        </trans-unit>
        <trans-unit id="38b4de20cbb33f2ba6c27c51497c2d1a3b94aa14" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::peekable</source>
          <target state="translated">DecodeUtf16::peekable</target>
        </trans-unit>
        <trans-unit id="369b0c418b4ef2dd52cb3dc8e53a70dcf06be122" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::position</source>
          <target state="translated">DecodeUtf16::position</target>
        </trans-unit>
        <trans-unit id="e19f77b0844dc27ffc7680ae25a614dae7408f21" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::product</source>
          <target state="translated">DecodeUtf16::product</target>
        </trans-unit>
        <trans-unit id="b27e1d1a4f6199e50fff15f992dc81a556802eb0" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::rev</source>
          <target state="translated">DecodeUtf16::rev</target>
        </trans-unit>
        <trans-unit id="b337e0a96e3ae0cfea374cc4570450c6acc23c2a" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::rposition</source>
          <target state="translated">DecodeUtf16::rposition</target>
        </trans-unit>
        <trans-unit id="d2bbad248fb47c7de8d332910fd18e2adbcdf5c3" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::scan</source>
          <target state="translated">DecodeUtf16::scan</target>
        </trans-unit>
        <trans-unit id="6670d14e656f73bb6fb5e8d5cb8ab6dd177f178f" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::size_hint</source>
          <target state="translated">DecodeUtf16::size_hint</target>
        </trans-unit>
        <trans-unit id="ba138d832cac9967aeb5fe1a0c4fbcafcf682937" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::skip</source>
          <target state="translated">DecodeUtf16::skip</target>
        </trans-unit>
        <trans-unit id="5af6f140a5b23c8d400a7d716056c04a6ddc241c" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::skip_while</source>
          <target state="translated">DecodeUtf16::skip_while</target>
        </trans-unit>
        <trans-unit id="c15d168eed267b3006c92cb96c9350258d1f197d" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::step_by</source>
          <target state="translated">DecodeUtf16::step_by</target>
        </trans-unit>
        <trans-unit id="cc012ffc5e74f7d127dadf5d5fb9b11fee6815dc" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::sum</source>
          <target state="translated">DecodeUtf16::sum</target>
        </trans-unit>
        <trans-unit id="c1c1ccb6a426feb7c91f7864fc7636febb3fc260" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::take</source>
          <target state="translated">DecodeUtf16::take</target>
        </trans-unit>
        <trans-unit id="9912cb564fcb8a822a2ac1be9f282aab47c09c26" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::take_while</source>
          <target state="translated">DecodeUtf16::take_while</target>
        </trans-unit>
        <trans-unit id="a039b97b8dd00fced40a694729b2830de0f25a56" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::to_owned</source>
          <target state="translated">DecodeUtf16::to_owned</target>
        </trans-unit>
        <trans-unit id="69136c5eb962be3512f953eb84d370b035727097" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::try_fold</source>
          <target state="translated">DecodeUtf16::try_fold</target>
        </trans-unit>
        <trans-unit id="3ac2e71ce30c4f915a9c1eaf3198bc5f59cb127a" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::try_for_each</source>
          <target state="translated">DecodeUtf16::try_for_each</target>
        </trans-unit>
        <trans-unit id="2a9c47b594ac2015f671647aa497792ef3858128" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::try_from</source>
          <target state="translated">DecodeUtf16::try_from</target>
        </trans-unit>
        <trans-unit id="17efd7f83047ffec285f30b211ade31c7e165cf1" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::try_into</source>
          <target state="translated">DecodeUtf16::try_into</target>
        </trans-unit>
        <trans-unit id="da7d32811cecfd4f0e11187d5767fb25a5934e35" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::type_id</source>
          <target state="translated">DecodeUtf16::type_id</target>
        </trans-unit>
        <trans-unit id="1a3c6ef2664ad3ec7f830c689039d694538c5552" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::unzip</source>
          <target state="translated">DecodeUtf16::unzip</target>
        </trans-unit>
        <trans-unit id="0d5cc3496c51e4c98b18501bf89248fe8097de80" translate="yes" xml:space="preserve">
          <source>DecodeUtf16::zip</source>
          <target state="translated">DecodeUtf16::zip</target>
        </trans-unit>
        <trans-unit id="1493e3bfcee517e1947863ff248bad61b057dc8f" translate="yes" xml:space="preserve">
          <source>DecodeUtf16Error</source>
          <target state="translated">DecodeUtf16Error</target>
        </trans-unit>
        <trans-unit id="57d673990e35a4afc03d4a5325901f16612ca7c0" translate="yes" xml:space="preserve">
          <source>DecodeUtf16Error::borrow</source>
          <target state="translated">DecodeUtf16Error::borrow</target>
        </trans-unit>
        <trans-unit id="ba4fdd34466b48f2e78032e4cb995680a10543b8" translate="yes" xml:space="preserve">
          <source>DecodeUtf16Error::borrow_mut</source>
          <target state="translated">DecodeUtf16Error::borrow_mut</target>
        </trans-unit>
        <trans-unit id="8f8cdbedf4bdf6e2a5cd6b73c6406bfc4dec374b" translate="yes" xml:space="preserve">
          <source>DecodeUtf16Error::cause</source>
          <target state="translated">DecodeUtf16Error::cause</target>
        </trans-unit>
        <trans-unit id="23ca5ecdecb6b55c7e36d3a51812d8b2e9d21142" translate="yes" xml:space="preserve">
          <source>DecodeUtf16Error::clone</source>
          <target state="translated">DecodeUtf16Error::clone</target>
        </trans-unit>
        <trans-unit id="9a0b49eb80077253e715a265cc25fa4313a0f995" translate="yes" xml:space="preserve">
          <source>DecodeUtf16Error::clone_from</source>
          <target state="translated">DecodeUtf16Error::clone_from</target>
        </trans-unit>
        <trans-unit id="c381a781caa57670926d5830b7d28ba1d6f3df5e" translate="yes" xml:space="preserve">
          <source>DecodeUtf16Error::clone_into</source>
          <target state="translated">DecodeUtf16Error::clone_into</target>
        </trans-unit>
        <trans-unit id="d7a9c7ec25484b4ef208977a6f0b3e3fe2ab2e00" translate="yes" xml:space="preserve">
          <source>DecodeUtf16Error::description</source>
          <target state="translated">DecodeUtf16Error::description</target>
        </trans-unit>
        <trans-unit id="3dc82a83290c3be0a8b477df0d8c8cb694c663b9" translate="yes" xml:space="preserve">
          <source>DecodeUtf16Error::eq</source>
          <target state="translated">DecodeUtf16Error::eq</target>
        </trans-unit>
        <trans-unit id="d21c8ca806ffba59cde7cd87bda438f4359c653a" translate="yes" xml:space="preserve">
          <source>DecodeUtf16Error::fmt</source>
          <target state="translated">DecodeUtf16Error::fmt</target>
        </trans-unit>
        <trans-unit id="20eff1e4e74632c6253f033d1d59bd0c8288f493" translate="yes" xml:space="preserve">
          <source>DecodeUtf16Error::from</source>
          <target state="translated">DecodeUtf16Error::from</target>
        </trans-unit>
        <trans-unit id="dce7a94f6c67b3374cbc66af790d70a0a5ef0c10" translate="yes" xml:space="preserve">
          <source>DecodeUtf16Error::into</source>
          <target state="translated">DecodeUtf16Error::into</target>
        </trans-unit>
        <trans-unit id="73eb10779ff4b762d7c879605f0bec1ed4c3ac00" translate="yes" xml:space="preserve">
          <source>DecodeUtf16Error::ne</source>
          <target state="translated">DecodeUtf16Error::ne</target>
        </trans-unit>
        <trans-unit id="d44452ae0ea242a3f03e20692537a71512a2ff92" translate="yes" xml:space="preserve">
          <source>DecodeUtf16Error::source</source>
          <target state="translated">DecodeUtf16Error::source</target>
        </trans-unit>
        <trans-unit id="24728ca63caef5406a39ca2e0951d14f80d39c58" translate="yes" xml:space="preserve">
          <source>DecodeUtf16Error::to_owned</source>
          <target state="translated">DecodeUtf16Error::to_owned</target>
        </trans-unit>
        <trans-unit id="6501dc36a9e42e98d4ea4d48f53a106920f009ff" translate="yes" xml:space="preserve">
          <source>DecodeUtf16Error::to_string</source>
          <target state="translated">DecodeUtf16Error::to_string</target>
        </trans-unit>
        <trans-unit id="c30ca1046a2aa5c3b9609bbc74f486600c62c3d4" translate="yes" xml:space="preserve">
          <source>DecodeUtf16Error::try_from</source>
          <target state="translated">DecodeUtf16Error::try_from</target>
        </trans-unit>
        <trans-unit id="63d42218f29f0daa71ba960efc9a77c01ae59ece" translate="yes" xml:space="preserve">
          <source>DecodeUtf16Error::try_into</source>
          <target state="translated">DecodeUtf16Error::try_into</target>
        </trans-unit>
        <trans-unit id="24260641e9d9c59969aa63b92f06d8a4fa06c8c8" translate="yes" xml:space="preserve">
          <source>DecodeUtf16Error::type_id</source>
          <target state="translated">DecodeUtf16Error::type_id</target>
        </trans-unit>
        <trans-unit id="203e6e3b423c10122a908bab62008f22e61ee26b" translate="yes" xml:space="preserve">
          <source>DecodeUtf16Error::unpaired_surrogate</source>
          <target state="translated">DecodeUtf16Error::unpaired_surrogate</target>
        </trans-unit>
        <trans-unit id="0b5d3daca79e17fa9786cb5c4946d4b2b7e4e185" translate="yes" xml:space="preserve">
          <source>Decomposes a &lt;code&gt;String&lt;/code&gt; into its raw components.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; を生のコンポーネントに分解します。</target>
        </trans-unit>
        <trans-unit id="c412c1c9738caf619a3c6db1f2f1492e3201cf84" translate="yes" xml:space="preserve">
          <source>Decomposes a &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; into its raw components.</source>
          <target state="translated">&lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; を生のコンポーネントに分解します。</target>
        </trans-unit>
        <trans-unit id="aa26043b1df1b9533237482c25a023db14c5552f" translate="yes" xml:space="preserve">
          <source>Decrements the strong reference count on the &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; associated with the provided pointer by one.</source>
          <target state="translated">指定されたポインタに関連付けられた &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; の強い参照カウントを1つ減らします。</target>
        </trans-unit>
        <trans-unit id="808d7dca8a74d84af27a2d6602c3d786de45fe1e" translate="yes" xml:space="preserve">
          <source>Default</source>
          <target state="translated">Default</target>
        </trans-unit>
        <trans-unit id="5c54ac6c1966d0171b52316955bd8dca31bf04fb" translate="yes" xml:space="preserve">
          <source>Default Generic Type Parameters and Operator Overloading</source>
          <target state="translated">デフォルトの汎用型パラメータと演算子のオーバーロード</target>
        </trans-unit>
        <trans-unit id="045ede237d5ffa1dae01340fe0445ba033120980" translate="yes" xml:space="preserve">
          <source>Default Implementations</source>
          <target state="translated">デフォルトの実装</target>
        </trans-unit>
        <trans-unit id="ba343a281c845f069dd40843f785800359d0698b" translate="yes" xml:space="preserve">
          <source>Default implementations can call other methods in the same trait, even if those other methods don&amp;rsquo;t have a default implementation. In this way, a trait can provide a lot of useful functionality and only require implementors to specify a small part of it. For example, we could define the &lt;code&gt;Summary&lt;/code&gt; trait to have a &lt;code&gt;summarize_author&lt;/code&gt; method whose implementation is required, and then define a &lt;code&gt;summarize&lt;/code&gt; method that has a default implementation that calls the &lt;code&gt;summarize_author&lt;/code&gt; method:</source>
          <target state="translated">デフォルトの実装は、他のメソッドにデフォルトの実装がない場合でも、同じトレイトで他のメソッドを呼び出すことができます。このようにして、トレイトは多くの有用な機能を提供でき、実装者はその一部を指定するだけで済みます。例えば、我々は定義でき &lt;code&gt;Summary&lt;/code&gt; 持っている特性を &lt;code&gt;summarize_author&lt;/code&gt; のその実装が要求される方法を、次に定義 &lt;code&gt;summarize&lt;/code&gt; 呼び出し、デフォルトの実装がある方法 &lt;code&gt;summarize_author&lt;/code&gt; の方法を：</target>
        </trans-unit>
        <trans-unit id="a91483e6360b3646ee54ed4e19077d5119378911" translate="yes" xml:space="preserve">
          <source>Default trait object lifetimes</source>
          <target state="translated">デフォルトの形質オブジェクトの寿命</target>
        </trans-unit>
        <trans-unit id="505a5b3ea840c811942619a54b13ebc90c1d69ae" translate="yes" xml:space="preserve">
          <source>Default values are often some kind of initial value, identity value, or anything else that may make sense as a default.</source>
          <target state="translated">デフォルト値は、多くの場合、初期値や ID 値など、デフォルトとして意味のあるものは何でもあります。</target>
        </trans-unit>
        <trans-unit id="18cfa29846be5d88a38b8ddf0318e49898df2749" translate="yes" xml:space="preserve">
          <source>Default::default</source>
          <target state="translated">Default::default</target>
        </trans-unit>
        <trans-unit id="fbd377384cd4e537b7e63605d35553f8591fc4a4" translate="yes" xml:space="preserve">
          <source>DefaultHasher</source>
          <target state="translated">DefaultHasher</target>
        </trans-unit>
        <trans-unit id="bf56a037f8eb371f517ddde5edfb82fe9eacf355" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;a href=&quot;struct.stdio#method.inherit&quot;&gt;&lt;code&gt;inherit&lt;/code&gt;&lt;/a&gt; when used with &lt;code&gt;spawn&lt;/code&gt; or &lt;code&gt;status&lt;/code&gt;, and defaults to &lt;a href=&quot;struct.stdio#method.piped&quot;&gt;&lt;code&gt;piped&lt;/code&gt;&lt;/a&gt; when used with &lt;code&gt;output&lt;/code&gt;.</source>
          <target state="translated">デフォルトは&lt;a href=&quot;struct.stdio#method.inherit&quot;&gt; &lt;code&gt;inherit&lt;/code&gt; &lt;/a&gt;して使用 &lt;code&gt;spawn&lt;/code&gt; や &lt;code&gt;status&lt;/code&gt; にすると、既定値&lt;a href=&quot;struct.stdio#method.piped&quot;&gt; &lt;code&gt;piped&lt;/code&gt; &lt;/a&gt;で使用した場合 &lt;code&gt;output&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9e5a1a08bec2102ce07bfdf6a7686dcec5b9788a" translate="yes" xml:space="preserve">
          <source>Deferring the creation of an owned key until it is known to be required</source>
          <target state="translated">所有する鍵の作成を必要とされることが判明するまで延期する</target>
        </trans-unit>
        <trans-unit id="432f3a996089c37538481f6f6e1be53656d15922" translate="yes" xml:space="preserve">
          <source>Define a &lt;code&gt;Worker::new&lt;/code&gt; function that takes an &lt;code&gt;id&lt;/code&gt; number and returns a &lt;code&gt;Worker&lt;/code&gt; instance that holds the &lt;code&gt;id&lt;/code&gt; and a thread spawned with an empty closure.</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; 番号を取得し、 &lt;code&gt;id&lt;/code&gt; を保持する &lt;code&gt;Worker&lt;/code&gt; インスタンスと空のクロージャーで生成されたスレッドを返す &lt;code&gt;Worker::new&lt;/code&gt; 関数を定義します。</target>
        </trans-unit>
        <trans-unit id="dc11612553ef39d18cbd236eb8998804f494a503" translate="yes" xml:space="preserve">
          <source>Define a &lt;code&gt;Worker&lt;/code&gt; struct that holds an &lt;code&gt;id&lt;/code&gt; and a &lt;code&gt;JoinHandle&amp;lt;()&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; と &lt;code&gt;JoinHandle&amp;lt;()&amp;gt;&lt;/code&gt; を保持する &lt;code&gt;Worker&lt;/code&gt; 構造体を定義します。</target>
        </trans-unit>
        <trans-unit id="d7f9f10ecbab802431e1f3cb8c8b629d032029c0" translate="yes" xml:space="preserve">
          <source>Define an alias for an existing type.</source>
          <target state="translated">既存の型のエイリアスを定義します。</target>
        </trans-unit>
        <trans-unit id="4f105fc90b8bb22934e565095ee16711acb9ad51" translate="yes" xml:space="preserve">
          <source>Define generic enumeration</source>
          <target state="translated">一般的な列挙を定義する</target>
        </trans-unit>
        <trans-unit id="5e37bd5b6f154c97e17777be5e1831a1cf37080b" translate="yes" xml:space="preserve">
          <source>Define generic function</source>
          <target state="translated">ジェネリック機能の定義</target>
        </trans-unit>
        <trans-unit id="c4211e02d4968a9565789f999b7e43d8911970a8" translate="yes" xml:space="preserve">
          <source>Define generic implementation</source>
          <target state="translated">一般的な実装を定義する</target>
        </trans-unit>
        <trans-unit id="bc9e8027397016480e7fcff8b962c002dc8b2dbb" translate="yes" xml:space="preserve">
          <source>Define generic structure</source>
          <target state="translated">汎用構造の定義</target>
        </trans-unit>
        <trans-unit id="73e238c301781f7a2d4eb87bc549865d2a4cbc80" translate="yes" xml:space="preserve">
          <source>Defining &lt;code id=&quot;defining-post-and-creating-a-new-instance-in-the-draft-state&quot;&gt;Post&lt;/code&gt; and Creating a New Instance in the Draft State</source>
          <target state="translated">ドラフト状態での &lt;code id=&quot;defining-post-and-creating-a-new-instance-in-the-draft-state&quot;&gt;Post&lt;/code&gt; 定義と新しいインスタンスの作成</target>
        </trans-unit>
        <trans-unit id="d2947f0706fff8e7126e6357ddb46ba0dbd29fa6" translate="yes" xml:space="preserve">
          <source>Defining Methods</source>
          <target state="translated">メソッドの定義</target>
        </trans-unit>
        <trans-unit id="5ae232afca081861858b253aaf1f3ffaa74c2e5b" translate="yes" xml:space="preserve">
          <source>Defining Modules to Control Scope and Privacy</source>
          <target state="translated">スコープとプライバシーを制御するためのモジュールの定義</target>
        </trans-unit>
        <trans-unit id="decfed670da0a748ef94b0c2ecdfd377a887ac80" translate="yes" xml:space="preserve">
          <source>Defining Our Own Smart Pointer</source>
          <target state="translated">独自のスマートポインターの定義</target>
        </trans-unit>
        <trans-unit id="2d5f6a8837bd721f1a6e00ea61c2eb356fa6f3d4" translate="yes" xml:space="preserve">
          <source>Defining a Trait</source>
          <target state="translated">特性の定義</target>
        </trans-unit>
        <trans-unit id="4748a6b7802962b0f2a92e385ca6a18fbc199984" translate="yes" xml:space="preserve">
          <source>Defining a Trait for Common Behavior</source>
          <target state="translated">一般的な行動の特徴を定義する</target>
        </trans-unit>
        <trans-unit id="303e56c9b8421dd66457586e4456217147541a42" translate="yes" xml:space="preserve">
          <source>Defining an Enum</source>
          <target state="translated">列挙型の定義</target>
        </trans-unit>
        <trans-unit id="f14bd0484296981fbff8025b7149a6243b871b4b" translate="yes" xml:space="preserve">
          <source>Defining an enum with variants such as the ones in Listing 6-2 is similar to defining different kinds of struct definitions, except the enum doesn&amp;rsquo;t use the &lt;code&gt;struct&lt;/code&gt; keyword and all the variants are grouped together under the &lt;code&gt;Message&lt;/code&gt; type. The following structs could hold the same data that the preceding enum variants hold:</source>
          <target state="translated">リスト6-2のようなバリアントを使用して列挙型を定義することは、列挙型が &lt;code&gt;struct&lt;/code&gt; キーワードを使用せず、すべてのバリアントが &lt;code&gt;Message&lt;/code&gt; タイプの下でグループ化されることを除いて、さまざまな種類の構造体定義の定義と似ています。次の構造体は、前述の列挙型バリアントが保持するのと同じデータを保持できます。</target>
        </trans-unit>
        <trans-unit id="bac853d52352a8f8bf81a6e64a9dd03bd1420300" translate="yes" xml:space="preserve">
          <source>Defining and Instantiating Structs</source>
          <target state="translated">構造体の定義とインスタンス化</target>
        </trans-unit>
        <trans-unit id="53258a5b954779c14ca4da85fc417fc7c059395a" translate="yes" xml:space="preserve">
          <source>Definitions &amp;amp; Conventions</source>
          <target state="translated">定義と規約</target>
        </trans-unit>
        <trans-unit id="0c8165a3b44ef73c95de81723f6c79997c3d9e95" translate="yes" xml:space="preserve">
          <source>Delegates to the &lt;code&gt;&amp;amp;str&lt;/code&gt; impl.</source>
          <target state="translated">&lt;code&gt;&amp;amp;str&lt;/code&gt; 実装へのデリゲート。</target>
        </trans-unit>
        <trans-unit id="b2ff9cc2124191e65f73700c2382d5e16744ab32" translate="yes" xml:space="preserve">
          <source>Delete the offending feature attribute, or add it to the list of allowed features in the &lt;code&gt;-Z allow_features&lt;/code&gt; flag.</source>
          <target state="translated">問題のある機能属性を削除するか、 &lt;code&gt;-Z allow_features&lt;/code&gt; フラグの許可された機能のリストに追加します。</target>
        </trans-unit>
        <trans-unit id="95d2352c127bc9b052b6e577ab0b245caba8d012" translate="yes" xml:space="preserve">
          <source>Delete the offending feature attribute.</source>
          <target state="translated">違反した機能属性を削除します。</target>
        </trans-unit>
        <trans-unit id="46bbf306924eee9652ad5b65b09bb0869a4486d1" translate="yes" xml:space="preserve">
          <source>Delimiters</source>
          <target state="translated">Delimiters</target>
        </trans-unit>
        <trans-unit id="de543ed17540ba31c723171be0d32ce1cf99ef8c" translate="yes" xml:space="preserve">
          <source>Depending on an External Crate in a Workspace</source>
          <target state="translated">ワークスペースの外部クレートに応じて</target>
        </trans-unit>
        <trans-unit id="26fb10a90fce8b6ba8e2778d2fa2dcac8f46aa84" translate="yes" xml:space="preserve">
          <source>Depending on an External Package in a Workspace</source>
          <target state="translated">ワークスペースの外部パッケージに依存する</target>
        </trans-unit>
        <trans-unit id="399ae4be33a57c192711f5ebe5abbb3a51356345" translate="yes" xml:space="preserve">
          <source>Depending on the specified order, a fence prevents the compiler and CPU from reordering certain types of memory operations around it. That creates synchronizes-with relationships between it and atomic operations or fences in other threads.</source>
          <target state="translated">指定された順序に応じて、フェンスは、コンパイラとCPUが特定の種類のメモリ操作をその周りに並べ替えることを防ぎます。これは、それと他のスレッドのアトミック操作やフェンスとの間にシンクロナイズ・ウィズの関係を作ります。</target>
        </trans-unit>
        <trans-unit id="4039aa36cf6ada7a2798986e8f71e0237bd5eb15" translate="yes" xml:space="preserve">
          <source>Depending on the type of the pattern, the behaviour of methods like &lt;a href=&quot;../../primitive.str#method.find&quot;&gt;&lt;code&gt;str::find&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../primitive.str#method.contains&quot;&gt;&lt;code&gt;str::contains&lt;/code&gt;&lt;/a&gt; can change. The table below describes some of those behaviours.</source>
          <target state="translated">パターンのタイプに応じて、&lt;a href=&quot;../../primitive.str#method.find&quot;&gt; &lt;code&gt;str::find&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;../../primitive.str#method.contains&quot;&gt; &lt;code&gt;str::contains&lt;/code&gt; &lt;/a&gt;などのメソッドの動作は変わる可能性があります。次の表は、これらの動作の一部を示しています。</target>
        </trans-unit>
        <trans-unit id="8cafc6581fa576db44c29a719fde3a20f1179865" translate="yes" xml:space="preserve">
          <source>Depending on your browser, you might get slightly different output. Now that we&amp;rsquo;re printing the request data, we can see why we get multiple connections from one browser request by looking at the path after &lt;code&gt;Request: GET&lt;/code&gt;. If the repeated connections are all requesting &lt;em&gt;/&lt;/em&gt;, we know the browser is trying to fetch &lt;em&gt;/&lt;/em&gt; repeatedly because it&amp;rsquo;s not getting a response from our program.</source>
          <target state="translated">ブラウザによっては、わずかに異なる出力が表示される場合があります。リクエストデータを出力しているので、 &lt;code&gt;Request: GET&lt;/code&gt; 後のパスを見ることで、1つのブラウザーリクエストから複数の接続を取得する理由を確認できます。繰り返される接続がすべて&lt;em&gt;/&lt;/em&gt;を要求している場合、プログラムからの応答がないため、ブラウザが&lt;em&gt;/を&lt;/em&gt;繰り返しフェッチしようとしていることがわかります。</target>
        </trans-unit>
        <trans-unit id="527600bf0272b6bf3abcb495a99c6ee346bb82b2" translate="yes" xml:space="preserve">
          <source>Deprecated</source>
          <target state="translated">Deprecated</target>
        </trans-unit>
        <trans-unit id="d3100b38d941e8810fdd63040dbe65a4fed5fe64" translate="yes" xml:space="preserve">
          <source>Deprecated since 1.1.0: replaced with std::os::unix::fs::symlink and std::os::windows::fs::{symlink_file, symlink_dir}</source>
          <target state="translated">1.1.0 以降非推奨:std::os::unix::fs::symlink および std::os::windows::fs::{symlink_file,symlink_dir}に置き換えられました。</target>
        </trans-unit>
        <trans-unit id="04e3e9a740c3a7b1627949f020282a0e4c2c53e1" translate="yes" xml:space="preserve">
          <source>Deprecated since 1.10.0: you probably meant (self - other).abs(): this operation is (self - other).max(0.0) except that abs_sub also propagates NaNs (also known as fdim in C). If you truly need the positive difference, consider using that expression or the C function fdim, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too).</source>
          <target state="translated">1.10.0 以降で非推奨:(self-other).abs():この操作は (self-other).max(0.0)です。もし本当に正の差が必要ならば、NaNをどのように扱いたいかに応じて、この式やC関数fdimの使用を検討してください(あなたのユースケースを記述したissueを提出することも検討してください)。</target>
        </trans-unit>
        <trans-unit id="fdfda2e47542033b752ec1e210a9cb623ec20656" translate="yes" xml:space="preserve">
          <source>Deprecated since 1.10.0: you probably meant (self - other).abs(): this operation is (self - other).max(0.0) except that abs_sub also propagates NaNs (also known as fdimf in C). If you truly need the positive difference, consider using that expression or the C function fdimf, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too).</source>
          <target state="translated">1.10.0 以降で非推奨:おそらく (self-other).abs():この操作は (self-other).max(0.0)となります。もし本当に正の差が必要ならば、NaNをどのように扱いたいかに応じて、この式やC関数fdimfの使用を検討してください(あなたのユースケースを記述したissueを提出することも検討してください)。</target>
        </trans-unit>
        <trans-unit id="f9bd3ceb9b14c654723ab6074e0af783f23b3297" translate="yes" xml:space="preserve">
          <source>Deprecated since 1.13.0: use std::collections::hash_map::DefaultHasher instead</source>
          <target state="translated">1.13.0 より非推奨:代わりに std::collections::hash_map::DefaultHasher を使う。</target>
        </trans-unit>
        <trans-unit id="03173369262f2fdb7458cf65fb7f75c75ad4268e" translate="yes" xml:space="preserve">
          <source>Deprecated since 1.16.0: this option can only be set before the socket is bound</source>
          <target state="translated">1.16.0 より非推奨:このオプションはソケットがバインドされる前にしか設定できません。</target>
        </trans-unit>
        <trans-unit id="7f0641a3656900d3ae2853f74bf51ff6440b6783" translate="yes" xml:space="preserve">
          <source>Deprecated since 1.2.0: use align_of instead</source>
          <target state="translated">1.2.0 より非推奨:代わりに align_of を使用</target>
        </trans-unit>
        <trans-unit id="32b77ea951168674f6d43de79c9f0a999e563b5e" translate="yes" xml:space="preserve">
          <source>Deprecated since 1.2.0: use align_of_val instead</source>
          <target state="translated">1.2.0 より非推奨:代わりに align_of_val を使用</target>
        </trans-unit>
        <trans-unit id="07299c7d321fe4dea2f6eda92dd8f012f6c66e46" translate="yes" xml:space="preserve">
          <source>Deprecated since 1.24.0: use the sign_plus, sign_minus, alternate, or sign_aware_zero_pad methods instead</source>
          <target state="translated">1.24.0 以降非推奨:代わりに sign_plus、sign_minus、alternate、あるいは sign_aware_zero_pad メソッドを使う</target>
        </trans-unit>
        <trans-unit id="7b632c8182ea1cdb0f9422d4488d0db51bf1eb32" translate="yes" xml:space="preserve">
          <source>Deprecated since 1.26.0: use inherent methods instead</source>
          <target state="translated">1.26.0 より非推奨:代わりに固有のメソッドを使用</target>
        </trans-unit>
        <trans-unit id="d6a8942f2179e123a6c560b1e9711539414a648b" translate="yes" xml:space="preserve">
          <source>Deprecated since 1.29.0: This function's behavior is unexpected and probably not what you want. Consider using the home_dir function from https://crates.io/crates/dirs instead.</source>
          <target state="translated">1.29.0 以降で非推奨:この関数の動作は予期せぬもので、おそらくあなたが望むものではありません。代わりに https://crates.io/crates/dirs にある home_dir 関数を使うことを検討してください。</target>
        </trans-unit>
        <trans-unit id="72ac84a50687e0401e298e2b46b70eef11bb5aa6" translate="yes" xml:space="preserve">
          <source>Deprecated since 1.29.0: use get_unchecked(begin..end) instead</source>
          <target state="translated">1.29.0 以降で非推奨:代わりに get_unchecked(begin...end)を使用。</target>
        </trans-unit>
        <trans-unit id="de58bf0dbb6301eaded5be6db8a98fe0fc1f2746" translate="yes" xml:space="preserve">
          <source>Deprecated since 1.29.0: use get_unchecked_mut(begin..end) instead</source>
          <target state="translated">1.29.0 以降で非推奨:代わりに get_unchecked_mut(begin...end)を使用。</target>
        </trans-unit>
        <trans-unit id="f50f6fdba5262abb5bff838f34da6fbad525af77" translate="yes" xml:space="preserve">
          <source>Deprecated since 1.3.0: renamed to join</source>
          <target state="translated">1.3.0 以降で非推奨となりました。</target>
        </trans-unit>
        <trans-unit id="d2a81a90b1295245eb25b4a950295a33c2b1cc65" translate="yes" xml:space="preserve">
          <source>Deprecated since 1.33.0: This is moving towards being removed in favor of .resize_with(Default::default). If you disagree, please comment in the tracking issue. 🔬 This is a nightly-only experimental API. (vec_resize_default #41758)</source>
          <target state="translated">1.33.0 以降非推奨。これは .resize_with(Default::default)を支持して削除される方向に進んでいます。同意しない場合は、追跡問題でコメントしてください。🔬 これは夜間限定の実験的な API です。(vec_resize_default #41758)</target>
        </trans-unit>
        <trans-unit id="991ee402a4dd64de0ef38942bc3e087e5e5712ee" translate="yes" xml:space="preserve">
          <source>Deprecated since 1.33.0: replaced by Error::source, which can support downcasting</source>
          <target state="translated">1.33.0 から非推奨となりました:ダウンキャストをサポートする Error::source に置き換えられました。</target>
        </trans-unit>
        <trans-unit id="a1f8c7c5d37555e0342ab7878d03d950e3640b08" translate="yes" xml:space="preserve">
          <source>Deprecated since 1.33.0: superseded by trim_end</source>
          <target state="translated">1.33.0 以降で非推奨となりました。</target>
        </trans-unit>
        <trans-unit id="6fa3befce489fe7767b0e83d4cd9a3d870b8b577" translate="yes" xml:space="preserve">
          <source>Deprecated since 1.33.0: superseded by trim_end_matches</source>
          <target state="translated">1.33.0 以降非推奨:trim_end_matches で置き換えられました。</target>
        </trans-unit>
        <trans-unit id="8a896f4649bfcb00d2a0d2f5eca7116e9ec227e8" translate="yes" xml:space="preserve">
          <source>Deprecated since 1.33.0: superseded by trim_start</source>
          <target state="translated">1.33.0 以降非推奨:trim_start で置き換えられました。</target>
        </trans-unit>
        <trans-unit id="6923193d3b837ca885d6472bd1a925179e3a04a9" translate="yes" xml:space="preserve">
          <source>Deprecated since 1.33.0: superseded by trim_start_matches</source>
          <target state="translated">1.33.0以降非推奨:trim_start_matchesで置き換えられました。</target>
        </trans-unit>
        <trans-unit id="d013b9bd63aaff05df9977702df65007fb7f2bd1" translate="yes" xml:space="preserve">
          <source>Deprecated since 1.34.0: the new function is now preferred</source>
          <target state="translated">1.34.0 以降非推奨:新しい関数が優先されるようになりました。</target>
        </trans-unit>
        <trans-unit id="71e046072d9269e076803abaf8eea2524e68292e" translate="yes" xml:space="preserve">
          <source>Deprecated since 1.34.0: the new function is now preferred 🔬 This is a nightly-only experimental API. (integer_atomics #32976)</source>
          <target state="translated">1.34.0 以降非推奨:新しい関数が優先されるようになりました 🔬 これは夜間限定の実験的な API です。(integer_atomics #32976)</target>
        </trans-unit>
        <trans-unit id="fc7d12cd9e0ea3a360d731ce687b243ea255e17b" translate="yes" xml:space="preserve">
          <source>Deprecated since 1.37.0: should be unsafe, use pre_exec instead This is supported on Unix only.</source>
          <target state="translated">1.37.0 以降非推奨:安全ではないはず、代わりに pre_exec を使用してください。</target>
        </trans-unit>
        <trans-unit id="f1126bab2fdc9da6f4455daea74586f8b7e7c8f1" translate="yes" xml:space="preserve">
          <source>Deprecated since 1.4.0: use lines() instead now</source>
          <target state="translated">1.4.0 より非推奨:代わりに lines()を使用するようになりました。</target>
        </trans-unit>
        <trans-unit id="24f0d16f0bb8ac8e09ab4952cb73d3db8603b96b" translate="yes" xml:space="preserve">
          <source>Deprecated since 1.4.0: use lines()/Lines instead now</source>
          <target state="translated">1.4.0 より非推奨:代わりに lines()/Lines を使用するようになりました。</target>
        </trans-unit>
        <trans-unit id="9dbdcb2879eafcc80c1b2bd2ce2156a3196c5d72" translate="yes" xml:space="preserve">
          <source>Deprecated since 1.6.0: replaced by std::sync::Condvar::wait_timeout</source>
          <target state="translated">1.6.0 から非推奨になりました:std::sync::Condvar::wait_timeout で置き換えられました。</target>
        </trans-unit>
        <trans-unit id="f9e1416a6436fd0c288d364af62e339dded9a0ba" translate="yes" xml:space="preserve">
          <source>Deprecated since 1.6.0: replaced by std::thread::park_timeout</source>
          <target state="translated">1.6.0 以降非推奨:std::thread::park_timeout で置き換えられました。</target>
        </trans-unit>
        <trans-unit id="93b7892dee69e271c121e23bdf07c2b278b92830" translate="yes" xml:space="preserve">
          <source>Deprecated since 1.6.0: replaced by std::thread::sleep</source>
          <target state="translated">1.6.0 以降で非推奨となりました:std::thread::sleep で置き換えられました。</target>
        </trans-unit>
        <trans-unit id="21c91a880783f22cf3b63dfb9e44c16e774e1caa" translate="yes" xml:space="preserve">
          <source>Deprecated since 1.8.0: deprecated in favor of the accessor methods of this trait This is supported on Linux only.</source>
          <target state="translated">1.8.0 より非推奨:この形質のアクセサメソッドを優先して非推奨となりました。</target>
        </trans-unit>
        <trans-unit id="7f351a92decc47abf83ee83c06fd37a35f0940f6" translate="yes" xml:space="preserve">
          <source>Deprecated since 1.8.0: these type aliases are no longer supported by the standard library, the libc crate on crates.io should be used instead for the correct definitions This is supported on Linux only.</source>
          <target state="translated">1.8.0 から非推奨:これらのタイプエイリアスはもはや標準ライブラリではサポートされていません、代わりに crates.io の libc crate を正しい定義のために使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="d6079d8ee4437f19d124cfe55f2dc4b8c2e0ac8f" translate="yes" xml:space="preserve">
          <source>Deprecated since 1.8.0: these type aliases are no longer supported by the standard library, the libc crate on crates.io should be used instead for the correct definitions This is supported on Unix only.</source>
          <target state="translated">1.8.0 以降非推奨:これらのタイプエイリアスはもはや標準ライブラリではサポートされていません、代わりに crates.io の libc crate を正しい定義のために使用するべきです。</target>
        </trans-unit>
        <trans-unit id="f0b3d9ba26a7ac57793533a03834e9e8b13d0b50" translate="yes" xml:space="preserve">
          <source>DeprecatedExperimental</source>
          <target state="translated">DeprecatedExperimental</target>
        </trans-unit>
        <trans-unit id="85e323e6fc2ea224f8bc8ea80588b02851113b01" translate="yes" xml:space="preserve">
          <source>DeprecatedLinux</source>
          <target state="translated">DeprecatedLinux</target>
        </trans-unit>
        <trans-unit id="6373548eb10d40ceed447aca6da8f8d220d6fcaf" translate="yes" xml:space="preserve">
          <source>DeprecatedUnix</source>
          <target state="translated">DeprecatedUnix</target>
        </trans-unit>
        <trans-unit id="0c00b4a77106b1db5111a5c2d544c5652fec4d1d" translate="yes" xml:space="preserve">
          <source>Deprecating in 1.38.0: the new function is now preferred</source>
          <target state="translated">1.38.0 で非推奨:新しい関数が優先されるようになりました。</target>
        </trans-unit>
        <trans-unit id="6bd63c8ae67f32ff67fe98566737cbe4e5a155cb" translate="yes" xml:space="preserve">
          <source>Deprecating in 1.38.0: use mem::MaybeUninit instead</source>
          <target state="translated">1.38.0 で非推奨とされていること:mem::MaybeUninit の代わりに</target>
        </trans-unit>
        <trans-unit id="ceea5acd50a9fc0f771945e8f1d68f6913a0a4b6" translate="yes" xml:space="preserve">
          <source>Deprecation planned</source>
          <target state="translated">非推奨の予定</target>
        </trans-unit>
        <trans-unit id="df0ad997b0e3d0399c4b21b8dd9e1dd618d5ee7f" translate="yes" xml:space="preserve">
          <source>Deref</source>
          <target state="translated">Deref</target>
        </trans-unit>
        <trans-unit id="2a77420cc7bd8d0a99502b28861fb0ddc341803c" translate="yes" xml:space="preserve">
          <source>Deref coercion was added to Rust so that programmers writing function and method calls don&amp;rsquo;t need to add as many explicit references and dereferences with &lt;code&gt;&amp;amp;&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt;. The deref coercion feature also lets us write more code that can work for either references or smart pointers.</source>
          <target state="translated">Deref強制がRustに追加されたため、関数とメソッドの呼び出しを作成するプログラマーは、 &lt;code&gt;&amp;amp;&lt;/code&gt; と &lt;code&gt;*&lt;/code&gt; を使用して明示的な参照と逆参照を追加する必要がなくなります。deref強制機能を使用すると、参照またはスマートポインターのどちらでも機能するコードをさらに記述できます。</target>
        </trans-unit>
        <trans-unit id="df88d8846f547855f2e361454416634d00942ed6" translate="yes" xml:space="preserve">
          <source>Deref::deref</source>
          <target state="translated">Deref::deref</target>
        </trans-unit>
        <trans-unit id="f257586d823871fa0c17506e7daddd7d084f6162" translate="yes" xml:space="preserve">
          <source>DerefMut</source>
          <target state="translated">DerefMut</target>
        </trans-unit>
        <trans-unit id="8cd93380a04240c7f513dd0504b209faa07736cf" translate="yes" xml:space="preserve">
          <source>DerefMut::deref_mut</source>
          <target state="translated">DerefMut::deref_mut</target>
        </trans-unit>
        <trans-unit id="dec3b6d46e827cc481476ff03cd71af78767baf0" translate="yes" xml:space="preserve">
          <source>Dereference</source>
          <target state="translated">Dereference</target>
        </trans-unit>
        <trans-unit id="9e4a1f9b78f8fbbd1c886a98c8b4319b97659c47" translate="yes" xml:space="preserve">
          <source>Dereference &lt;a href=&quot;../reference/types/pointer&quot;&gt;raw pointers&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../reference/types/pointer&quot;&gt;生のポインタを&lt;/a&gt;逆参照する</target>
        </trans-unit>
        <trans-unit id="94225bb55f02cffe2639c566160bdaa4d81b1b56" translate="yes" xml:space="preserve">
          <source>Dereference a raw pointer</source>
          <target state="translated">生ポインタの参照解除</target>
        </trans-unit>
        <trans-unit id="7fe246d90e1eef88840de84d7186fd3e60a4344d" translate="yes" xml:space="preserve">
          <source>Dereference of a variable, or field of a variable, with type &lt;code&gt;&amp;amp;mut T&lt;/code&gt;. Note: This is an exception to the requirement of the next rule.</source>
          <target state="translated">タイプ &lt;code&gt;&amp;amp;mut T&lt;/code&gt; の変数または変数のフィールドの逆参照。注：これは、次のルールの要件の例外です。</target>
        </trans-unit>
        <trans-unit id="bf15be28ec067a5f2def2af367cd349bb18c45f4" translate="yes" xml:space="preserve">
          <source>Dereferences of a type that implements &lt;code&gt;DerefMut&lt;/code&gt;, this then requires that the value being dereferenced is evaluated is a mutable place expression context.</source>
          <target state="translated">&lt;code&gt;DerefMut&lt;/code&gt; を実装する型の逆参照。これにより、逆参照される値が評価可能な値であることが、変更可能な場所式コンテキストであることが必要になります。</target>
        </trans-unit>
        <trans-unit id="6285b5705c95fbc3abd29688b60f9c827f1bf1cc" translate="yes" xml:space="preserve">
          <source>Dereferences the content.</source>
          <target state="translated">コンテンツのデリファレンスを行います。</target>
        </trans-unit>
        <trans-unit id="b9e5b9322c89412749e008b4a1629467f5980b1c" translate="yes" xml:space="preserve">
          <source>Dereferences the value.</source>
          <target state="translated">値をデリファレンス化します。</target>
        </trans-unit>
        <trans-unit id="d5b1dbcd480450f694d32bac7458f8bc57e5cb73" translate="yes" xml:space="preserve">
          <source>Dereferencing (using the &lt;code&gt;*&lt;/code&gt; operator on) a dangling or unaligned raw pointer.</source>
          <target state="translated">ぶら下がっている、または整列されていない生のポインターを間接参照（ &lt;code&gt;*&lt;/code&gt; 演算子を使用）します。</target>
        </trans-unit>
        <trans-unit id="203e8193ab79d8d8f6a36eff1d88c963c62a48dc" translate="yes" xml:space="preserve">
          <source>Dereferencing a &lt;a href=&quot;types/pointer&quot;&gt;raw pointer&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;types/pointer&quot;&gt;生のポインタの&lt;/a&gt;逆参照。</target>
        </trans-unit>
        <trans-unit id="c5e98978b4d566f48f224b70d1a8713fa1b3ed35" translate="yes" xml:space="preserve">
          <source>Dereferencing a Raw Pointer</source>
          <target state="translated">生のポインタの参照を解除する</target>
        </trans-unit>
        <trans-unit id="9a8f58415bed3dbbd0827b83d071007a1e2d7639" translate="yes" xml:space="preserve">
          <source>Dereferencing a null or dangling raw pointer.</source>
          <target state="translated">NULLまたはぶら下がっている生ポインタの参照を解除します。</target>
        </trans-unit>
        <trans-unit id="90581f70e194a01467c59d5dda0f147595ad4bf5" translate="yes" xml:space="preserve">
          <source>Dereferencing raw pointers</source>
          <target state="translated">生のポインタのデリファレンス</target>
        </trans-unit>
        <trans-unit id="db71412b021b204b10e41bd88c713fa09c1a540d" translate="yes" xml:space="preserve">
          <source>Derivable</source>
          <target state="translated">Derivable</target>
        </trans-unit>
        <trans-unit id="66ff36dea57c0d8c7e146b725da4182bfdd4df6f" translate="yes" xml:space="preserve">
          <source>Derive</source>
          <target state="translated">Derive</target>
        </trans-unit>
        <trans-unit id="b7a05f0cc493c53653aef1084bd25954ea060e0f" translate="yes" xml:space="preserve">
          <source>Derive macro generating an impl of the trait &lt;code&gt;Clone&lt;/code&gt;.</source>
          <target state="translated">特性 &lt;code&gt;Clone&lt;/code&gt; implを生成するマクロを導出します。</target>
        </trans-unit>
        <trans-unit id="765d7dac47bc654041e7b9ec129519290949d23f" translate="yes" xml:space="preserve">
          <source>Derive macro generating an impl of the trait &lt;code&gt;Copy&lt;/code&gt;.</source>
          <target state="translated">特性 &lt;code&gt;Copy&lt;/code&gt; のimplを生成するマクロを導出します。</target>
        </trans-unit>
        <trans-unit id="6a433c3f0454296cae356730afd24837dbfad2ce" translate="yes" xml:space="preserve">
          <source>Derive macro generating an impl of the trait &lt;code&gt;Debug&lt;/code&gt;.</source>
          <target state="translated">特性 &lt;code&gt;Debug&lt;/code&gt; のimplを生成するマクロを導出します。</target>
        </trans-unit>
        <trans-unit id="a2ef16b0ab3dd30236316a659cc0d2577ea9f79e" translate="yes" xml:space="preserve">
          <source>Derive macro generating an impl of the trait &lt;code&gt;Default&lt;/code&gt;.</source>
          <target state="translated">特性 &lt;code&gt;Default&lt;/code&gt; のimplを生成するマクロを導出します。</target>
        </trans-unit>
        <trans-unit id="b2b4bad9def186b785041fa78ce820efab639d2c" translate="yes" xml:space="preserve">
          <source>Derive macro generating an impl of the trait &lt;code&gt;Eq&lt;/code&gt;.</source>
          <target state="translated">特性 &lt;code&gt;Eq&lt;/code&gt; 実装を生成するマクロを導出します。</target>
        </trans-unit>
        <trans-unit id="06e5076eda13d2dde6348cbd29ffe096b6a3b784" translate="yes" xml:space="preserve">
          <source>Derive macro generating an impl of the trait &lt;code&gt;Hash&lt;/code&gt;.</source>
          <target state="translated">特性 &lt;code&gt;Hash&lt;/code&gt; 実装を生成するマクロを導出します。</target>
        </trans-unit>
        <trans-unit id="b1dd3a0eebd516dae25b3e9f99f2a1a576c39ce0" translate="yes" xml:space="preserve">
          <source>Derive macro generating an impl of the trait &lt;code&gt;Ord&lt;/code&gt;.</source>
          <target state="translated">特性 &lt;code&gt;Ord&lt;/code&gt; のimplを生成するマクロを導出します。</target>
        </trans-unit>
        <trans-unit id="b18b6e9d8198e6d48a757a9ffb09e7f136abbd5f" translate="yes" xml:space="preserve">
          <source>Derive macro generating an impl of the trait &lt;code&gt;PartialEq&lt;/code&gt;.</source>
          <target state="translated">特性 &lt;code&gt;PartialEq&lt;/code&gt; のimplを生成するマクロを導出します。</target>
        </trans-unit>
        <trans-unit id="31ba04b0391b718d12af641b6a0d1a4f0cbe9f5e" translate="yes" xml:space="preserve">
          <source>Derive macro generating an impl of the trait &lt;code&gt;PartialOrd&lt;/code&gt;.</source>
          <target state="translated">特性 &lt;code&gt;PartialOrd&lt;/code&gt; のimplを生成するマクロを導出します。</target>
        </trans-unit>
        <trans-unit id="112338f58ef204d73942d4bc434c2d32ea0864eb" translate="yes" xml:space="preserve">
          <source>Derive macro helper attributes</source>
          <target state="translated">マクロヘルパー属性の導出</target>
        </trans-unit>
        <trans-unit id="63c61cf5f8f79d1dd28c9e6315f3b4ab389bec22" translate="yes" xml:space="preserve">
          <source>Derive macros</source>
          <target state="translated">マクロの導出</target>
        </trans-unit>
        <trans-unit id="3deccee1f8aecf14e3765ffc88218d54d777243b" translate="yes" xml:space="preserve">
          <source>Derive macros can add additional &lt;a href=&quot;attributes&quot;&gt;attributes&lt;/a&gt; into the scope of the &lt;a href=&quot;items&quot;&gt;item&lt;/a&gt; they are on. Said attributes are called &lt;em&gt;derive macro helper attributes&lt;/em&gt;. These attributes are &lt;a href=&quot;attributes#active-and-inert-attributes&quot;&gt;inert&lt;/a&gt;, and their only purpose is to be fed into the derive macro that defined them. That said, they can be seen by all macros.</source>
          <target state="translated">派生マクロは、それらが存在する&lt;a href=&quot;items&quot;&gt;アイテム&lt;/a&gt;のスコープに追加の&lt;a href=&quot;attributes&quot;&gt;属性&lt;/a&gt;を追加できます。これらの属性は、&lt;em&gt;マクロヘルパー属性の派生&lt;/em&gt;と呼ばれ&lt;em&gt;ます&lt;/em&gt;。これらの属性は&lt;a href=&quot;attributes#active-and-inert-attributes&quot;&gt;不活性&lt;/a&gt;であり、それらの唯一の目的は、それらを定義した派生マクロにフィードされることです。そうは言っても、それらはすべてのマクロで見ることができます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3dd5ae6a7acc48407e1d3a2ecb6776d8ebdcd160" translate="yes" xml:space="preserve">
          <source>Derived &lt;code&gt;Debug&lt;/code&gt; formats are not stable, and so may change with future Rust versions. Additionally, &lt;code&gt;Debug&lt;/code&gt; implementations of types provided by the standard library (&lt;code&gt;libstd&lt;/code&gt;, &lt;code&gt;libcore&lt;/code&gt;, &lt;code&gt;liballoc&lt;/code&gt;, etc.) are not stable, and may also change with future Rust versions.</source>
          <target state="translated">派生 &lt;code&gt;Debug&lt;/code&gt; 形式は安定していないため、将来のRustバージョンで変更される可能性があります。さらに、標準ライブラリ（ &lt;code&gt;libstd&lt;/code&gt; 、 &lt;code&gt;libcore&lt;/code&gt; 、 &lt;code&gt;liballoc&lt;/code&gt; など）によって提供されるタイプの &lt;code&gt;Debug&lt;/code&gt; 実装は安定しておらず、将来のRustバージョンでも変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="79fdb1532cc89a14d5dbfee71ea023d8e0384403" translate="yes" xml:space="preserve">
          <source>Deriving &lt;code&gt;Clone&lt;/code&gt; implements the &lt;code&gt;clone&lt;/code&gt; method, which when implemented for the whole type, calls &lt;code&gt;clone&lt;/code&gt; on each of the parts of the type. This means all the fields or values in the type must also implement &lt;code&gt;Clone&lt;/code&gt; to derive &lt;code&gt;Clone&lt;/code&gt;.</source>
          <target state="translated">派生 &lt;code&gt;Clone&lt;/code&gt; は &lt;code&gt;clone&lt;/code&gt; メソッドを実装します。これは、型全体に実装されると、型の各部分で &lt;code&gt;clone&lt;/code&gt; を呼び出します。この手段タイプのすべてのフィールドや値も実装しなければならない &lt;code&gt;Clone&lt;/code&gt; 導出する &lt;code&gt;Clone&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c7404ecd6b469aea26dbea987b5684eb0f1cc5b8" translate="yes" xml:space="preserve">
          <source>Deriving &lt;code&gt;PartialEq&lt;/code&gt; implements the &lt;code&gt;eq&lt;/code&gt; method. When &lt;code&gt;PartialEq&lt;/code&gt; is derived on structs, two instances are equal only if &lt;em&gt;all&lt;/em&gt; fields are equal, and the instances are not equal if any fields are not equal. When derived on enums, each variant is equal to itself and not equal to the other variants.</source>
          <target state="translated">&lt;code&gt;PartialEq&lt;/code&gt; の派生は、 &lt;code&gt;eq&lt;/code&gt; メソッドを実装します。場合 &lt;code&gt;PartialEq&lt;/code&gt; を構造体に誘導される場合、2つのインスタンスが等しいだけである&lt;em&gt;すべて&lt;/em&gt;のフィールドが等しく、すべてのフィールドが等しくない場合インスタンスが等しくありません。列挙型で派生した場合、各バリアントはそれ自体に等しく、他のバリアントには等しくありません。</target>
        </trans-unit>
        <trans-unit id="2b1c08c04c059f24ba06cdc1004250207714f2cc" translate="yes" xml:space="preserve">
          <source>Deriving &lt;code&gt;PartialOrd&lt;/code&gt; implements the &lt;code&gt;partial_cmp&lt;/code&gt; method, which returns an &lt;code&gt;Option&amp;lt;Ordering&amp;gt;&lt;/code&gt; that will be &lt;code&gt;None&lt;/code&gt; when the values given don&amp;rsquo;t produce an ordering. An example of a value that doesn&amp;rsquo;t produce an ordering, even though most values of that type can be compared, is the not-a-number (&lt;code&gt;NaN&lt;/code&gt;) floating point value. Calling &lt;code&gt;partial_cmp&lt;/code&gt; with any floating point number and the &lt;code&gt;NaN&lt;/code&gt; floating point value will return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PartialOrd&lt;/code&gt; の派生は、 &lt;code&gt;partial_cmp&lt;/code&gt; メソッドを実装します。これは、指定された値が順序付けを生成しない場合に &lt;code&gt;None&lt;/code&gt; になる &lt;code&gt;Option&amp;lt;Ordering&amp;gt;&lt;/code&gt; を返します。その型のほとんどの値を比較できるとしても、順序付けを行わない値の例は、非数（ &lt;code&gt;NaN&lt;/code&gt; ）の浮動小数点値です。任意の浮動小数点数と &lt;code&gt;NaN&lt;/code&gt; 浮動小数点値を使用して &lt;code&gt;partial_cmp&lt;/code&gt; を呼び出すと、 &lt;code&gt;None&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="06577bba30756d250846189c651dee1b48d21a88" translate="yes" xml:space="preserve">
          <source>Deriving an implementation:</source>
          <target state="translated">実装を導出する。</target>
        </trans-unit>
        <trans-unit id="4878c48a1f449ee2005017c65e70554a3fb5ff36" translate="yes" xml:space="preserve">
          <source>Describes the result of a process after it has terminated.</source>
          <target state="translated">プロセスが終了した後の結果を記述します。</target>
        </trans-unit>
        <trans-unit id="90c6fd970980025ae692adb1ab3556011cbb30dc" translate="yes" xml:space="preserve">
          <source>Describes what to do with a standard I/O stream for a child process when passed to the &lt;a href=&quot;struct.command#method.stdin&quot;&gt;&lt;code&gt;stdin&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;struct.command#method.stdout&quot;&gt;&lt;code&gt;stdout&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;struct.command#method.stderr&quot;&gt;&lt;code&gt;stderr&lt;/code&gt;&lt;/a&gt; methods of &lt;a href=&quot;struct.command&quot;&gt;&lt;code&gt;Command&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;struct.command&quot;&gt; &lt;code&gt;Command&lt;/code&gt; の&lt;/a&gt;&lt;a href=&quot;struct.command#method.stdin&quot;&gt; &lt;code&gt;stdin&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;struct.command#method.stdout&quot;&gt; &lt;code&gt;stdout&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;struct.command#method.stderr&quot;&gt; &lt;code&gt;stderr&lt;/code&gt; &lt;/a&gt;メソッドに渡されたときに、子プロセスの標準I / Oストリームをどう処理するかを説明します。</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="8ba00923d537dc9cfd63a7dd5b6ae95851f98649" translate="yes" xml:space="preserve">
          <source>Despite its name, the method does not reset the hasher&amp;rsquo;s internal state. Additional &lt;a href=&quot;#tymethod.write&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt;s will continue from the current value. If you need to start a fresh hash value, you will have to create a new hasher.</source>
          <target state="translated">その名前にもかかわらず、このメソッドはハッシュの内部状態をリセットしません。追加の&lt;a href=&quot;#tymethod.write&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;は、現在の値から続行されます。新しいハッシュ値を開始する必要がある場合は、新しいハッシュを作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="4195ca0878a92723401de254132ba7eb59ce1fde" translate="yes" xml:space="preserve">
          <source>Despite its name, the method does not reset the hasher&amp;rsquo;s internal state. Additional &lt;a href=&quot;trait.hasher#tymethod.write&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt;s will continue from the current value. If you need to start a fresh hash value, you will have to create a new hasher.</source>
          <target state="translated">その名前にもかかわらず、このメソッドはハッシャーの内部状態をリセットしません。追加の&lt;a href=&quot;trait.hasher#tymethod.write&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;は、現在の値から続行されます。新しいハッシュ値を開始する必要がある場合は、新しいハッシュ値を作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="98d32888ffe1460d6078e9e8b30915ce4c23692e" translate="yes" xml:space="preserve">
          <source>Despite their unsafety, mutable &lt;code&gt;static&lt;/code&gt;s are necessary in many contexts: they can be used to represent global state shared by the whole program or in &lt;a href=&quot;keyword.extern&quot;&gt;&lt;code&gt;extern&lt;/code&gt;&lt;/a&gt; blocks to bind to variables from C libraries.</source>
          <target state="translated">安全性は低いものの、多くのコンテキストで可変 &lt;code&gt;static&lt;/code&gt; が必要です。プログラム全体で共有されるグローバル状態を表すため、またはCライブラリの変数にバインドするための&lt;a href=&quot;keyword.extern&quot;&gt; &lt;code&gt;extern&lt;/code&gt; &lt;/a&gt;ブロックで使用できます。</target>
        </trans-unit>
        <trans-unit id="bcf6c17f9da73e467a073ac5e6e487e5bdc36429" translate="yes" xml:space="preserve">
          <source>Destructors</source>
          <target state="translated">Destructors</target>
        </trans-unit>
        <trans-unit id="69fb1e79d722b855da9c1512910081b8e71ee0b8" translate="yes" xml:space="preserve">
          <source>Destructured arrays, enums, structs, or tuples</source>
          <target state="translated">構造化されていない配列、列挙型、構造体、またはタプル</target>
        </trans-unit>
        <trans-unit id="223b06db480ce74a9acfa66f8dc7cbb8442242d5" translate="yes" xml:space="preserve">
          <source>Destructures the &lt;code&gt;RangeInclusive&lt;/code&gt; into (lower bound, upper (inclusive) bound).</source>
          <target state="translated">Destructures &lt;code&gt;RangeInclusive&lt;/code&gt; には、（）は、上部（包括的、拘束下界）。</target>
        </trans-unit>
        <trans-unit id="077ef6bb7e9ca7a81dc6c9028d61cccdb0c255dd" translate="yes" xml:space="preserve">
          <source>Destructuring</source>
          <target state="translated">Destructuring</target>
        </trans-unit>
        <trans-unit id="3fc161c96f68d64ff5f6c35bd957154b32f15db9" translate="yes" xml:space="preserve">
          <source>Destructuring Enums</source>
          <target state="translated">列挙型のデストラクチャリング</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
