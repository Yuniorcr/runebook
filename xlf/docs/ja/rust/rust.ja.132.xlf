<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="rust">
    <body>
      <group id="rust">
        <trans-unit id="45262fa99b327234791e4fea3ce5f091eff36de4" translate="yes" xml:space="preserve">
          <source>EscapeDefault::last</source>
          <target state="translated">EscapeDefault::last</target>
        </trans-unit>
        <trans-unit id="99d2c3864aed6762dd24c6fc99bbdcb5d81968a1" translate="yes" xml:space="preserve">
          <source>EscapeDefault::le</source>
          <target state="translated">EscapeDefault::le</target>
        </trans-unit>
        <trans-unit id="8b560c65243ccfe78b50d719c08bd53c88470b59" translate="yes" xml:space="preserve">
          <source>EscapeDefault::len</source>
          <target state="translated">EscapeDefault::len</target>
        </trans-unit>
        <trans-unit id="88e2aaac0798d925388638a5ba98a29996b32585" translate="yes" xml:space="preserve">
          <source>EscapeDefault::lt</source>
          <target state="translated">EscapeDefault::lt</target>
        </trans-unit>
        <trans-unit id="e98e35f9f162549d57b27db6061f6cb4b07a64d4" translate="yes" xml:space="preserve">
          <source>EscapeDefault::map</source>
          <target state="translated">EscapeDefault::map</target>
        </trans-unit>
        <trans-unit id="48fabe70e0dd3d46394d877b7e272278324171c8" translate="yes" xml:space="preserve">
          <source>EscapeDefault::max</source>
          <target state="translated">EscapeDefault::max</target>
        </trans-unit>
        <trans-unit id="1f7172bcb9d49b013dad56022f11c7cbe2551b88" translate="yes" xml:space="preserve">
          <source>EscapeDefault::max_by</source>
          <target state="translated">EscapeDefault::max_by</target>
        </trans-unit>
        <trans-unit id="838e895eafcbc8b7e872e447f6f3d78de6bd8002" translate="yes" xml:space="preserve">
          <source>EscapeDefault::max_by_key</source>
          <target state="translated">EscapeDefault::max_by_key</target>
        </trans-unit>
        <trans-unit id="4e048e15b4f03d96a7a8acfe0af747c15b186ce6" translate="yes" xml:space="preserve">
          <source>EscapeDefault::min</source>
          <target state="translated">EscapeDefault::min</target>
        </trans-unit>
        <trans-unit id="7000fbe502be89a90b61b4bb9ecd4ba9b5160c6e" translate="yes" xml:space="preserve">
          <source>EscapeDefault::min_by</source>
          <target state="translated">EscapeDefault::min_by</target>
        </trans-unit>
        <trans-unit id="9b30be3d5f503e371c286382064d5cf8a70e0727" translate="yes" xml:space="preserve">
          <source>EscapeDefault::min_by_key</source>
          <target state="translated">EscapeDefault::min_by_key</target>
        </trans-unit>
        <trans-unit id="93c4143ff3e7141abb0406bcb307cb46d013156d" translate="yes" xml:space="preserve">
          <source>EscapeDefault::ne</source>
          <target state="translated">EscapeDefault::ne</target>
        </trans-unit>
        <trans-unit id="07f794c656dd08220694c812ad1b40ba5de2dfbd" translate="yes" xml:space="preserve">
          <source>EscapeDefault::next</source>
          <target state="translated">EscapeDefault::next</target>
        </trans-unit>
        <trans-unit id="b0b7f105b402375d8d37e94053a7be932e0f5b0b" translate="yes" xml:space="preserve">
          <source>EscapeDefault::next_back</source>
          <target state="translated">EscapeDefault::next_back</target>
        </trans-unit>
        <trans-unit id="f1bc6d43bd50f8f87f8369534f1183ed1d86f6ad" translate="yes" xml:space="preserve">
          <source>EscapeDefault::nth</source>
          <target state="translated">EscapeDefault::nth</target>
        </trans-unit>
        <trans-unit id="48b43205a16a6be089cfd5147f284b564c1c8276" translate="yes" xml:space="preserve">
          <source>EscapeDefault::nth_back</source>
          <target state="translated">EscapeDefault::nth_back</target>
        </trans-unit>
        <trans-unit id="71f2e3e189254ca066415241eb5522da6b526c2b" translate="yes" xml:space="preserve">
          <source>EscapeDefault::partial_cmp</source>
          <target state="translated">EscapeDefault::partial_cmp</target>
        </trans-unit>
        <trans-unit id="d798d68412346bfe3301520c540cb718747e83cb" translate="yes" xml:space="preserve">
          <source>EscapeDefault::partition</source>
          <target state="translated">EscapeDefault::partition</target>
        </trans-unit>
        <trans-unit id="5c0ff15b85cae1835c576432fc41880518ecca65" translate="yes" xml:space="preserve">
          <source>EscapeDefault::peekable</source>
          <target state="translated">EscapeDefault::peekable</target>
        </trans-unit>
        <trans-unit id="739321aafe7186085248dbad4c98b921d3d0b3e1" translate="yes" xml:space="preserve">
          <source>EscapeDefault::position</source>
          <target state="translated">EscapeDefault::position</target>
        </trans-unit>
        <trans-unit id="76475de1a9c8522c4960566ded75947e2651a164" translate="yes" xml:space="preserve">
          <source>EscapeDefault::product</source>
          <target state="translated">EscapeDefault::product</target>
        </trans-unit>
        <trans-unit id="3066fefb8e0879b8529af5d94df2a99b0352340f" translate="yes" xml:space="preserve">
          <source>EscapeDefault::rev</source>
          <target state="translated">EscapeDefault::rev</target>
        </trans-unit>
        <trans-unit id="a95f49409576fc45e4143af3adbe9f86767d07fa" translate="yes" xml:space="preserve">
          <source>EscapeDefault::rfind</source>
          <target state="translated">EscapeDefault::rfind</target>
        </trans-unit>
        <trans-unit id="166f8536d102f8f719fcc59c69b0d91b493b991d" translate="yes" xml:space="preserve">
          <source>EscapeDefault::rfold</source>
          <target state="translated">EscapeDefault::rfold</target>
        </trans-unit>
        <trans-unit id="3c4d30f10da77bc2ac5182818f4097d3db5695d6" translate="yes" xml:space="preserve">
          <source>EscapeDefault::rposition</source>
          <target state="translated">EscapeDefault::rposition</target>
        </trans-unit>
        <trans-unit id="f063501d23242be7fe5f46dee09f94e1fdbc4d49" translate="yes" xml:space="preserve">
          <source>EscapeDefault::scan</source>
          <target state="translated">EscapeDefault::scan</target>
        </trans-unit>
        <trans-unit id="6320b8b7ec506ea3976a15ca62499cfbaf384d01" translate="yes" xml:space="preserve">
          <source>EscapeDefault::size_hint</source>
          <target state="translated">EscapeDefault::size_hint</target>
        </trans-unit>
        <trans-unit id="b59f7fbf1a222c7149d4477c8fe971bb1d2be80e" translate="yes" xml:space="preserve">
          <source>EscapeDefault::skip</source>
          <target state="translated">EscapeDefault::skip</target>
        </trans-unit>
        <trans-unit id="177acb056504c667f56fd0ee42606ebca06a010d" translate="yes" xml:space="preserve">
          <source>EscapeDefault::skip_while</source>
          <target state="translated">EscapeDefault::skip_while</target>
        </trans-unit>
        <trans-unit id="79f56c72865ad082ce8614565ca6a5eac037a250" translate="yes" xml:space="preserve">
          <source>EscapeDefault::step_by</source>
          <target state="translated">EscapeDefault::step_by</target>
        </trans-unit>
        <trans-unit id="8571affcda2aebe685239f5251a13e3c68e47f91" translate="yes" xml:space="preserve">
          <source>EscapeDefault::sum</source>
          <target state="translated">EscapeDefault::sum</target>
        </trans-unit>
        <trans-unit id="83340eb53538865e57c916372718139f49b7960c" translate="yes" xml:space="preserve">
          <source>EscapeDefault::take</source>
          <target state="translated">EscapeDefault::take</target>
        </trans-unit>
        <trans-unit id="a2fba6d2c09a902279ea9aa430f6399b1b3fcd42" translate="yes" xml:space="preserve">
          <source>EscapeDefault::take_while</source>
          <target state="translated">EscapeDefault::take_while</target>
        </trans-unit>
        <trans-unit id="e504d7a0bdee17bfdce6673fd1944e04ac8baa12" translate="yes" xml:space="preserve">
          <source>EscapeDefault::to_owned</source>
          <target state="translated">EscapeDefault::to_owned</target>
        </trans-unit>
        <trans-unit id="c3b16c4c1b036937005924214d8a2f44890ced65" translate="yes" xml:space="preserve">
          <source>EscapeDefault::to_string</source>
          <target state="translated">EscapeDefault::to_string</target>
        </trans-unit>
        <trans-unit id="71696d55ed84461f6a461d08b79a6fc78889ef18" translate="yes" xml:space="preserve">
          <source>EscapeDefault::try_fold</source>
          <target state="translated">EscapeDefault::try_fold</target>
        </trans-unit>
        <trans-unit id="05d01804e2a96603271d21c960ce7f5a78dc37ff" translate="yes" xml:space="preserve">
          <source>EscapeDefault::try_for_each</source>
          <target state="translated">EscapeDefault::try_for_each</target>
        </trans-unit>
        <trans-unit id="f2f553b83de134e1e69387ed70158d31efae709d" translate="yes" xml:space="preserve">
          <source>EscapeDefault::try_from</source>
          <target state="translated">EscapeDefault::try_from</target>
        </trans-unit>
        <trans-unit id="10fe68a047717f619d0ff82c61f904c3de7318a3" translate="yes" xml:space="preserve">
          <source>EscapeDefault::try_into</source>
          <target state="translated">EscapeDefault::try_into</target>
        </trans-unit>
        <trans-unit id="c5fa491666370b5b02acd3d86c8aa8678dfdaf61" translate="yes" xml:space="preserve">
          <source>EscapeDefault::try_rfold</source>
          <target state="translated">EscapeDefault::try_rfold</target>
        </trans-unit>
        <trans-unit id="b16d0c0058e4f545309bddf5e58c40882e88f965" translate="yes" xml:space="preserve">
          <source>EscapeDefault::type_id</source>
          <target state="translated">EscapeDefault::type_id</target>
        </trans-unit>
        <trans-unit id="247220328f780b13ca15fb15c8decbd28a2efffa" translate="yes" xml:space="preserve">
          <source>EscapeDefault::unzip</source>
          <target state="translated">EscapeDefault::unzip</target>
        </trans-unit>
        <trans-unit id="743588f5dc429f9c68efc4cced91ad4503444abd" translate="yes" xml:space="preserve">
          <source>EscapeDefault::zip</source>
          <target state="translated">EscapeDefault::zip</target>
        </trans-unit>
        <trans-unit id="5b08d708ad0d47d75358dca66ce2be2b9aba334f" translate="yes" xml:space="preserve">
          <source>EscapeUnicode</source>
          <target state="translated">EscapeUnicode</target>
        </trans-unit>
        <trans-unit id="338163d429dd7fbe43d129f6850e28f4b455efd9" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::all</source>
          <target state="translated">EscapeUnicode::all</target>
        </trans-unit>
        <trans-unit id="628858297365d4a4438fcfc7dd8d30dc698065d3" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::any</source>
          <target state="translated">EscapeUnicode::any</target>
        </trans-unit>
        <trans-unit id="6d63f08209a6bd9dd015c1a1db8ee6e4e7efe023" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::borrow</source>
          <target state="translated">EscapeUnicode::borrow</target>
        </trans-unit>
        <trans-unit id="78577ac6a9c32a2ecd6dc7eb2f887093a3c44560" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::borrow_mut</source>
          <target state="translated">EscapeUnicode::borrow_mut</target>
        </trans-unit>
        <trans-unit id="26218fa4c966e54951938330aa4730f2fcc4d848" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::by_ref</source>
          <target state="translated">EscapeUnicode::by_ref</target>
        </trans-unit>
        <trans-unit id="70ac0e3a423821d9a024a452d05e9d57234e1b6f" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::chain</source>
          <target state="translated">EscapeUnicode::chain</target>
        </trans-unit>
        <trans-unit id="0afc0d46cff70768dfa196b4242ace28d32629bf" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::clone</source>
          <target state="translated">EscapeUnicode::clone</target>
        </trans-unit>
        <trans-unit id="37f61119789d01c80ccad50f93e42088c149ef2a" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::clone_from</source>
          <target state="translated">EscapeUnicode::clone_from</target>
        </trans-unit>
        <trans-unit id="a69a5a523734b43cae2867c9dcd92980762a188a" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::clone_into</source>
          <target state="translated">EscapeUnicode::clone_into</target>
        </trans-unit>
        <trans-unit id="49213d801e9c16a64cb4d65e9e8cf9cd006d7255" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::cloned</source>
          <target state="translated">EscapeUnicode::cloned</target>
        </trans-unit>
        <trans-unit id="09aed60ade949e3fb8bf9aa8a315bec8f74b6d40" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::cmp</source>
          <target state="translated">EscapeUnicode::cmp</target>
        </trans-unit>
        <trans-unit id="e81e4ebf3847459a7993c1387811d34affb83b5e" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::collect</source>
          <target state="translated">EscapeUnicode::collect</target>
        </trans-unit>
        <trans-unit id="0d3ab602f00f6cd24f6d047879215a868407079c" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::copied</source>
          <target state="translated">EscapeUnicode::copied</target>
        </trans-unit>
        <trans-unit id="1f7e93442912390be7ac37ec6707ddf060fcdcc3" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::count</source>
          <target state="translated">EscapeUnicode::count</target>
        </trans-unit>
        <trans-unit id="c5816fead6895134e7332fd61a4ebbb93edd4c6e" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::cycle</source>
          <target state="translated">EscapeUnicode::cycle</target>
        </trans-unit>
        <trans-unit id="91ebf1a374f53ffe64235dd62d85e7824fdf98fa" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::enumerate</source>
          <target state="translated">EscapeUnicode::enumerate</target>
        </trans-unit>
        <trans-unit id="624c3c4eaa626b53b5f3567a6a0886688bee812c" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::eq</source>
          <target state="translated">EscapeUnicode::eq</target>
        </trans-unit>
        <trans-unit id="1b80627264519a884e250e6abcb99f6a9358c5f4" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::filter</source>
          <target state="translated">EscapeUnicode::filter</target>
        </trans-unit>
        <trans-unit id="6ad3883341432c8fdeca20bec8ed9915dc3e6d9c" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::filter_map</source>
          <target state="translated">EscapeUnicode::filter_map</target>
        </trans-unit>
        <trans-unit id="22af0c82774533dcba3e67943da4985a58b22480" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::find</source>
          <target state="translated">EscapeUnicode::find</target>
        </trans-unit>
        <trans-unit id="8b7a2e416abe07d4d3e4b1477617d8f0e078b759" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::find_map</source>
          <target state="translated">EscapeUnicode::find_map</target>
        </trans-unit>
        <trans-unit id="d0fc0df0f7b1a4cc96b1cd5bfd7fa34c162c3acf" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::flat_map</source>
          <target state="translated">EscapeUnicode::flat_map</target>
        </trans-unit>
        <trans-unit id="e713c66cee1265d7cc9554df7c5e68c1e0c767c2" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::flatten</source>
          <target state="translated">EscapeUnicode::flatten</target>
        </trans-unit>
        <trans-unit id="0caddef2e4978f256b08382e18fec43ab463bdf9" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::fmt</source>
          <target state="translated">EscapeUnicode::fmt</target>
        </trans-unit>
        <trans-unit id="fcef23622002269e5beec9379be0569d62d28f1e" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::fold</source>
          <target state="translated">EscapeUnicode::fold</target>
        </trans-unit>
        <trans-unit id="b84872daa6e6195ef4e504f3bd9bd2d6978c769b" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::for_each</source>
          <target state="translated">EscapeUnicode::for_each</target>
        </trans-unit>
        <trans-unit id="1e1ff72b5bb8e76fbe07dd5ba80db36e47e71953" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::from</source>
          <target state="translated">EscapeUnicode::from</target>
        </trans-unit>
        <trans-unit id="00f439e23aadac9efce5955c7043b1d335e59147" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::fuse</source>
          <target state="translated">EscapeUnicode::fuse</target>
        </trans-unit>
        <trans-unit id="c1cd1e99c3b3323e2b471e91ee347505c6c7368c" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::ge</source>
          <target state="translated">EscapeUnicode::ge</target>
        </trans-unit>
        <trans-unit id="ea93c1c8610d8fca3701b3bc68fdc287fe6583a1" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::gt</source>
          <target state="translated">EscapeUnicode::gt</target>
        </trans-unit>
        <trans-unit id="fb6e744c73c6dec1c915a3ccb8df927dbcdac63e" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::inspect</source>
          <target state="translated">EscapeUnicode::inspect</target>
        </trans-unit>
        <trans-unit id="04a6919af5c13d6a42719ded258f92f22357619e" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::into</source>
          <target state="translated">EscapeUnicode::into</target>
        </trans-unit>
        <trans-unit id="0e571730ac10c717da86bccd36b90ffb3c7a01a3" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::into_iter</source>
          <target state="translated">EscapeUnicode::into_iter</target>
        </trans-unit>
        <trans-unit id="0a0560ff6ccd04bbc6587a17959ae7a43e873b29" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::is_empty</source>
          <target state="translated">EscapeUnicode::is_empty</target>
        </trans-unit>
        <trans-unit id="fb2fe92538e6e612d15c82977d24ceaf3392d54a" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::is_sorted</source>
          <target state="translated">EscapeUnicode::is_sorted</target>
        </trans-unit>
        <trans-unit id="56783676cf0c414af8ea0201e21204493dcbbb61" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::is_sorted_by</source>
          <target state="translated">EscapeUnicode::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="82c350920bf2841c71b78a8cc46f3960f2c60737" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::is_sorted_by_key</source>
          <target state="translated">EscapeUnicode::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="73eb9337b1ba515cef881d025db8cfb9a38db48b" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::last</source>
          <target state="translated">EscapeUnicode::last</target>
        </trans-unit>
        <trans-unit id="0003e23acbc637a64c8355649e271719969c41c3" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::le</source>
          <target state="translated">EscapeUnicode::le</target>
        </trans-unit>
        <trans-unit id="257347191a0fac0135af121b7d5fed9af19c5790" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::len</source>
          <target state="translated">EscapeUnicode::len</target>
        </trans-unit>
        <trans-unit id="0c0366d1822da413e57fa9b0093dc17d9dcfa841" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::lt</source>
          <target state="translated">EscapeUnicode::lt</target>
        </trans-unit>
        <trans-unit id="a9241fdd65a99b328e6ea7b4ddcbea38168f8179" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::map</source>
          <target state="translated">EscapeUnicode::map</target>
        </trans-unit>
        <trans-unit id="dc4a3e1eb5ac1e75b4ddb5fcd83a64e505ed4b4e" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::max</source>
          <target state="translated">EscapeUnicode::max</target>
        </trans-unit>
        <trans-unit id="130bf86fe6249b7265d9d38e830de9c52ca3ee5b" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::max_by</source>
          <target state="translated">EscapeUnicode::max_by</target>
        </trans-unit>
        <trans-unit id="46c7b290210cd1e69a1849bfe78d0a563883e983" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::max_by_key</source>
          <target state="translated">EscapeUnicode::max_by_key</target>
        </trans-unit>
        <trans-unit id="920545ee8bea9174479acb1461ae0d24605ec09b" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::min</source>
          <target state="translated">EscapeUnicode::min</target>
        </trans-unit>
        <trans-unit id="110b77ebf9dead9287b5903d1a2154a4259c30d1" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::min_by</source>
          <target state="translated">EscapeUnicode::min_by</target>
        </trans-unit>
        <trans-unit id="f2c43efcdcfbfa14b7a093249b972405956abd53" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::min_by_key</source>
          <target state="translated">EscapeUnicode::min_by_key</target>
        </trans-unit>
        <trans-unit id="3f0d1b302c4945cd77ac97b42b24b796bedeb1e3" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::ne</source>
          <target state="translated">EscapeUnicode::ne</target>
        </trans-unit>
        <trans-unit id="df3d1eb95accf7f741ace476517450fb4dba748d" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::next</source>
          <target state="translated">EscapeUnicode::next</target>
        </trans-unit>
        <trans-unit id="a3acbed68464123dcb4c275bca03968d93b3e671" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::nth</source>
          <target state="translated">EscapeUnicode::nth</target>
        </trans-unit>
        <trans-unit id="642fa545e023f6277acba6e430850c845c7d4003" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::partial_cmp</source>
          <target state="translated">EscapeUnicode::partial_cmp</target>
        </trans-unit>
        <trans-unit id="bc7bdea70b7fcde08556b6c8e91335e1ad5eaa9e" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::partition</source>
          <target state="translated">EscapeUnicode::partition</target>
        </trans-unit>
        <trans-unit id="6665ad27e3148710cb4e4fb562fc4ec4db1c47fb" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::peekable</source>
          <target state="translated">EscapeUnicode::peekable</target>
        </trans-unit>
        <trans-unit id="6f8fcc8c70cc7592ca8eaf2b54b9e2ad6eb50b2d" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::position</source>
          <target state="translated">EscapeUnicode::position</target>
        </trans-unit>
        <trans-unit id="4d2fb0cb516e823012d3cb29401298553fa89b16" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::product</source>
          <target state="translated">EscapeUnicode::product</target>
        </trans-unit>
        <trans-unit id="303570e879b1f6e790aaa3671f13e9fe7a626010" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::rev</source>
          <target state="translated">EscapeUnicode::rev</target>
        </trans-unit>
        <trans-unit id="0c8213cad840a995661998ea79bdc9dd67ad5163" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::rposition</source>
          <target state="translated">EscapeUnicode::rposition</target>
        </trans-unit>
        <trans-unit id="e0ae3f548940995a9b9ad36014afc4f6eb030555" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::scan</source>
          <target state="translated">EscapeUnicode::scan</target>
        </trans-unit>
        <trans-unit id="7a61e7c2e293a853a6c95c255171c877e9c89185" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::size_hint</source>
          <target state="translated">EscapeUnicode::size_hint</target>
        </trans-unit>
        <trans-unit id="90012f3506f0e7514a7ee8681a74ca203cc2725f" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::skip</source>
          <target state="translated">EscapeUnicode::skip</target>
        </trans-unit>
        <trans-unit id="e9dadfa112cc4b631f57be703d4fce65b9640b92" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::skip_while</source>
          <target state="translated">EscapeUnicode::skip_while</target>
        </trans-unit>
        <trans-unit id="c9739decdfa52577bf97064b6a35f26103da22bd" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::step_by</source>
          <target state="translated">EscapeUnicode::step_by</target>
        </trans-unit>
        <trans-unit id="1ab839dc8dec9b3051d8d0f3c1c2bea92372898e" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::sum</source>
          <target state="translated">EscapeUnicode::sum</target>
        </trans-unit>
        <trans-unit id="894b4b1223d7aabca2df42e4e23d7469b01e534b" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::take</source>
          <target state="translated">EscapeUnicode::take</target>
        </trans-unit>
        <trans-unit id="50095ec963d926ad273ce8f7680857fdc6d99883" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::take_while</source>
          <target state="translated">EscapeUnicode::take_while</target>
        </trans-unit>
        <trans-unit id="89951cb4016665275a1f0c79d63c3a41d48b9bbc" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::to_owned</source>
          <target state="translated">EscapeUnicode::to_owned</target>
        </trans-unit>
        <trans-unit id="9c010d42b1b68dd68e35100205cc6b9b13b87ceb" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::to_string</source>
          <target state="translated">EscapeUnicode::to_string</target>
        </trans-unit>
        <trans-unit id="2a2492f0b69674651dcf41e24aca83b747264abb" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::try_fold</source>
          <target state="translated">EscapeUnicode::try_fold</target>
        </trans-unit>
        <trans-unit id="abdbdf8e5fdbc93bccdba1f8f4b3d554e0588d03" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::try_for_each</source>
          <target state="translated">EscapeUnicode::try_for_each</target>
        </trans-unit>
        <trans-unit id="499fc66c5b31571d53103934f102bd44ecc45003" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::try_from</source>
          <target state="translated">EscapeUnicode::try_from</target>
        </trans-unit>
        <trans-unit id="7c689d351d4d6b0dd069f827dafcd20d09391602" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::try_into</source>
          <target state="translated">EscapeUnicode::try_into</target>
        </trans-unit>
        <trans-unit id="ca5591fdf66699030e3f72b363a9b43416735ad7" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::type_id</source>
          <target state="translated">EscapeUnicode::type_id</target>
        </trans-unit>
        <trans-unit id="e8a0c661607f4a50cd01e13dc6f5a9fa5b042bb1" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::unzip</source>
          <target state="translated">EscapeUnicode::unzip</target>
        </trans-unit>
        <trans-unit id="8d40fc69a25f77fbcf7dc2e7f43271b1e57cfd55" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::zip</source>
          <target state="translated">EscapeUnicode::zip</target>
        </trans-unit>
        <trans-unit id="a93a4e0ef80150a1a033177365048c386c52720b" translate="yes" xml:space="preserve">
          <source>Escapes</source>
          <target state="translated">Escapes</target>
        </trans-unit>
        <trans-unit id="2779ea444cb47200f1b0085d04662b33c09fc23f" translate="yes" xml:space="preserve">
          <source>Escaping</source>
          <target state="translated">Escaping</target>
        </trans-unit>
        <trans-unit id="4c2c45d27a40b2998f04b13b9d7872a526ef8792" translate="yes" xml:space="preserve">
          <source>Esperanto</source>
          <target state="translated">Esperanto</target>
        </trans-unit>
        <trans-unit id="768321cc50f5d114bfad1c578f68791ccf6e88fb" translate="yes" xml:space="preserve">
          <source>Euler's number (e)</source>
          <target state="translated">オイラー数</target>
        </trans-unit>
        <trans-unit id="667c792fff743e0aaa0a670a8c0ee0b95ee8d357" translate="yes" xml:space="preserve">
          <source>Evaluate &lt;code&gt;&amp;lt;expr&amp;gt;&lt;/code&gt; to a &lt;a href=&quot;../../std/future/trait.future&quot;&gt;future&lt;/a&gt;&lt;code&gt;tmp&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;&amp;lt;expr&amp;gt;&lt;/code&gt; を&lt;a href=&quot;../../std/future/trait.future&quot;&gt;将来の&lt;/a&gt; &lt;code&gt;tmp&lt;/code&gt; に評価します;</target>
        </trans-unit>
        <trans-unit id="31cbd333cae389613a7fb2ed2211d9e0c3b3f093" translate="yes" xml:space="preserve">
          <source>Evaluate a block if a condition holds.</source>
          <target state="translated">条件が成立している場合は、ブロックを評価します。</target>
        </trans-unit>
        <trans-unit id="a44f082e00d0add30a3696eec24a505adfd8f6c0" translate="yes" xml:space="preserve">
          <source>Evaluates boolean combinations of configuration flags at compile-time.</source>
          <target state="translated">コンパイル時に設定フラグのブール値の組み合わせを評価します。</target>
        </trans-unit>
        <trans-unit id="4d9da6da0ea8c2a843cd3b868ef90237e224509e" translate="yes" xml:space="preserve">
          <source>Evaluating an assignment expression &lt;a href=&quot;../destructors&quot;&gt;drops&lt;/a&gt; the left-hand operand, unless it's an uninitialized local variable or field of a local variable, and &lt;a href=&quot;../expressions#moved-and-copied-types&quot;&gt;either copies or moves&lt;/a&gt; its right-hand operand to its left-hand operand. The left-hand operand must be a place expression: using a value expression results in a compiler error, rather than promoting it to a temporary.</source>
          <target state="translated">割り当て式を評価すると、初期化されていないローカル変数またはローカル変数のフィールドでない限り、左側のオペランドが&lt;a href=&quot;../destructors&quot;&gt;削除され&lt;/a&gt;、右側のオペランドが左側のオペランドに&lt;a href=&quot;../expressions#moved-and-copied-types&quot;&gt;コピーまたは移動され&lt;/a&gt;ます。左側のオペランドは場所式でなければなりません。値式を使用すると、一時式に昇格されるのではなく、コンパイラエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="8ee0ecdb4fa4e379f7068e7406054da1ee3b3dcc" translate="yes" xml:space="preserve">
          <source>Even after we&amp;rsquo;ve called &lt;code&gt;add_text&lt;/code&gt; and added some content to our post, we still want the &lt;code&gt;content&lt;/code&gt; method to return an empty string slice because the post is still in the draft state, as shown on line 7 of Listing 17-11. For now, let&amp;rsquo;s implement the &lt;code&gt;content&lt;/code&gt; method with the simplest thing that will fulfill this requirement: always returning an empty string slice. We&amp;rsquo;ll change this later once we implement the ability to change a post&amp;rsquo;s state so it can be published. So far, posts can only be in the draft state, so the post content should always be empty. Listing 17-14 shows this placeholder implementation:</source>
          <target state="translated">&lt;code&gt;add_text&lt;/code&gt; を呼び出してコンテンツを投稿に追加した後でも、リスト17-11の7行目に示すように、投稿はまだドラフト状態であるため、 &lt;code&gt;content&lt;/code&gt; メソッドは空の文字列スライスを返します。とりあえず、この要件を満たす最も単純なもの、つまり常に空の文字列スライスを返す &lt;code&gt;content&lt;/code&gt; メソッドを実装してみましょう。投稿の状態を変更して公開できるようにする機能を実装したら、後でこれを変更します。これまでのところ、投稿は下書き状態でなければならないため、投稿のコンテンツは常に空である必要があります。リスト17-14はこのプレースホルダーの実装を示しています：</target>
        </trans-unit>
        <trans-unit id="629b9b3e5521a93bcc2e234e46c14b3e3215e0a8" translate="yes" xml:space="preserve">
          <source>Even for operations of &lt;a href=&quot;https://doc.rust-lang.org/nomicon/exotic-sizes.html#zero-sized-types-zsts&quot;&gt;size zero&lt;/a&gt;, the pointer must not be pointing to deallocated memory, i.e., deallocation makes pointers invalid even for zero-sized operations. However, casting any non-zero integer &lt;em&gt;literal&lt;/em&gt; to a pointer is valid for zero-sized accesses, even if some memory happens to exist at that address and gets deallocated. This corresponds to writing your own allocator: allocating zero-sized objects is not very hard. The canonical way to obtain a pointer that is valid for zero-sized accesses is &lt;a href=&quot;struct.nonnull#method.dangling&quot;&gt;&lt;code&gt;NonNull::dangling&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37d0141ea9c61ae4a6562b3cf98eab7edd31ea09" translate="yes" xml:space="preserve">
          <source>Even if we remove the implementation of &lt;code&gt;Drop&lt;/code&gt; for &lt;code&gt;HasTwoDrop&lt;/code&gt;, the destructors of its fields are still called. This would result in</source>
          <target state="translated">我々はの実装削除しても &lt;code&gt;Drop&lt;/code&gt; のため &lt;code&gt;HasTwoDrop&lt;/code&gt; を、そのフィールドのデストラクタが、まだ呼ばれています。これにより、</target>
        </trans-unit>
        <trans-unit id="ab173ff29f7b7004702d67804fc33628bc12a45e" translate="yes" xml:space="preserve">
          <source>Even if you&amp;rsquo;ve chosen a unique name, when you run &lt;code&gt;cargo publish&lt;/code&gt; to publish the crate at this point, you&amp;rsquo;ll get a warning and then an error:</source>
          <target state="translated">一意の名前を選択した場合でも、 &lt;code&gt;cargo publish&lt;/code&gt; を実行してこの時点でクレートを発行すると、警告が表示されてからエラーが表示されます。</target>
        </trans-unit>
        <trans-unit id="6ec55377ca5df23ef0219d7b6e615849e8e678c8" translate="yes" xml:space="preserve">
          <source>Even though &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; is a single token (&lt;a href=&quot;#lazy-boolean-operators&quot;&gt;the lazy 'and' operator&lt;/a&gt;), when used in the context of borrow expressions it works as two borrows:</source>
          <target state="translated">にもかかわらず &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; （単一のトークンで&lt;a href=&quot;#lazy-boolean-operators&quot;&gt;怠惰な「と」演算子&lt;/a&gt;、2つ借りとして働く借り式のコンテキストで使用する場合、）：</target>
        </trans-unit>
        <trans-unit id="420077d5f09a0ce345e8fa51720467e57996c78f" translate="yes" xml:space="preserve">
          <source>Even though &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; is a single token (&lt;a href=&quot;operator-expr#lazy-boolean-operators&quot;&gt;the lazy 'and' operator&lt;/a&gt;), when used in the context of borrow expressions it works as two borrows:</source>
          <target state="translated">にもかかわらず &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; （単一のトークンで&lt;a href=&quot;operator-expr#lazy-boolean-operators&quot;&gt;怠惰な「と」演算子&lt;/a&gt;、2つ借りとして働く借り式のコンテキストで使用する場合、）：</target>
        </trans-unit>
        <trans-unit id="035cb7335b9071630d76a6cac22f3690d8a901ec" translate="yes" xml:space="preserve">
          <source>Even though &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; has the same representation and C ABI as a C pointer, this does not mean that you can convert an arbitrary &lt;code&gt;T*&lt;/code&gt; into a &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; and expect things to work. &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; values will always be fully aligned, non-null pointers. Moreover, the destructor for &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; will attempt to free the value with the global allocator. In general, the best practice is to only use &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; for pointers that originated from the global allocator.</source>
          <target state="translated">にもかかわらず &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; Cのポインタと同じ表現とC ABIを持っている、これはあなたが任意に変換できることを意味するものではありません &lt;code&gt;T*&lt;/code&gt; に &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; と仕事に物事を期待しています。 &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; 値は常に完全に整列され、null以外のポインターになります。さらに、 &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; デストラクタは、グローバルアロケータを使用して値を解放しようとします。一般に、ベストプラクティスは、グローバルアロケータから発信されたポインタにのみ &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; を使用することです。</target>
        </trans-unit>
        <trans-unit id="91ee5e90d74ce606b0229131c8cc64d6f3ee06e7" translate="yes" xml:space="preserve">
          <source>Even though &lt;code&gt;is_null()&lt;/code&gt; exists as a method on any raw pointer, Rust shows this error because Rust allows for &lt;code&gt;self&lt;/code&gt; to have arbitrary types (behind the arbitrary_self_types feature flag).</source>
          <target state="translated">にもかかわらず &lt;code&gt;is_null()&lt;/code&gt; 、任意の生のポインタのメソッドとして存在するために錆ができるため、錆がこのエラーを示す &lt;code&gt;self&lt;/code&gt; 任意のタイプ（arbitrary_self_types後ろフラグを特色）を有します。</target>
        </trans-unit>
        <trans-unit id="8c186a95c8257fdcb7a8df67d4c166687bcdf7e1" translate="yes" xml:space="preserve">
          <source>Even though Listing 5-8 works and figures out the area of the rectangle by calling the &lt;code&gt;area&lt;/code&gt; function with each dimension, we can do better. The width and the height are related to each other because together they describe one rectangle.</source>
          <target state="translated">リスト5-8は機能し、各次元で &lt;code&gt;area&lt;/code&gt; 関数を呼び出すことによって長方形の領域を計算しますが、より良い方法があります。幅と高さは、1つの四角形を表すため、互いに関連しています。</target>
        </trans-unit>
        <trans-unit id="eb06d2c8b3d18e861072fe22916749403b015e47" translate="yes" xml:space="preserve">
          <source>Even though borrowing errors may be frustrating at times, remember that it&amp;rsquo;s the Rust compiler pointing out a potential bug early (at compile time rather than at runtime) and showing you exactly where the problem is. Then you don&amp;rsquo;t have to track down why your data isn&amp;rsquo;t what you thought it was.</source>
          <target state="translated">借用エラーは時々イライラするかもしれませんが、それはRustコンパイラが潜在的なバグを早期に（実行時ではなくコンパイル時に）指摘し、問題がどこにあるかを正確に示すことを覚えておいてください。そうすれば、データが思ったとおりではない理由を突き止める必要はありません。</target>
        </trans-unit>
        <trans-unit id="8ee3f464e87cacd50ef37867b4262b1a2c8adac6" translate="yes" xml:space="preserve">
          <source>Even though the &lt;code&gt;hello_cargo&lt;/code&gt; project is simple, it now uses much of the real tooling you&amp;rsquo;ll use in the rest of your Rust career. In fact, to work on any existing projects, you can use the following commands to check out the code using Git, change to that project&amp;rsquo;s directory, and build:</source>
          <target state="translated">にもかかわらず &lt;code&gt;hello_cargo&lt;/code&gt; のプロジェクトは簡単ですが、それは今、あなたの錆のキャリアの残りの部分で使用します実際のツールの多くを使用しています。実際、既存のプロジェクトで作業するには、次のコマンドを使用して、Gitを使用してコードをチェックアウトし、そのプロジェクトのディレクトリに変更してビルドできます。</target>
        </trans-unit>
        <trans-unit id="c8a4a7fb26f3188e28a4219c11d55ad8831cf7cd" translate="yes" xml:space="preserve">
          <source>Even though we&amp;rsquo;re no longer defining the &lt;code&gt;summarize&lt;/code&gt; method on &lt;code&gt;NewsArticle&lt;/code&gt; directly, we&amp;rsquo;ve provided a default implementation and specified that &lt;code&gt;NewsArticle&lt;/code&gt; implements the &lt;code&gt;Summary&lt;/code&gt; trait. As a result, we can still call the &lt;code&gt;summarize&lt;/code&gt; method on an instance of &lt;code&gt;NewsArticle&lt;/code&gt;, like this:</source>
          <target state="translated">私たちはもはや定義しているにもかかわらず &lt;code&gt;summarize&lt;/code&gt; の方法 &lt;code&gt;NewsArticle&lt;/code&gt; を直接、我々は、デフォルトの実装を提供していないとことを指定した &lt;code&gt;NewsArticle&lt;/code&gt; が実装 &lt;code&gt;Summary&lt;/code&gt; 形質を。その結果、我々はまだ呼び出すことができ &lt;code&gt;summarize&lt;/code&gt; のインスタンスでメソッドを &lt;code&gt;NewsArticle&lt;/code&gt; このように、：</target>
        </trans-unit>
        <trans-unit id="fbb0e8f1a58e917e841b10b78e92da6dc706ef76" translate="yes" xml:space="preserve">
          <source>Every &lt;code&gt;break&lt;/code&gt; in a loop has to have the same type. When it's not explicitly giving something, &lt;code&gt;break;&lt;/code&gt; returns &lt;code&gt;()&lt;/code&gt;.</source>
          <target state="translated">ループ内のすべての &lt;code&gt;break&lt;/code&gt; は同じタイプでなければなりません。それが明示的に何かを与えていないときは、 &lt;code&gt;break;&lt;/code&gt; &lt;code&gt;()&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="bc778fc30ee752a7d4f4f19d38c17a4680a1a896" translate="yes" xml:space="preserve">
          <source>Every associated item kind comes in two varieties: definitions that contain the actual implementation and declarations that declare signatures for definitions.</source>
          <target state="translated">すべての関連するアイテムの種類には、実際の実装を含む定義と、定義のシグネチャを宣言する宣言の2種類があります。</target>
        </trans-unit>
        <trans-unit id="223636711bd916c83b0c1c1d50bb03c43f02e7d8" translate="yes" xml:space="preserve">
          <source>Every binding in each &lt;code&gt;|&lt;/code&gt; separated pattern must appear in all of the patterns in the arm. Every binding of the same name must have the same type, and have the same binding mode.</source>
          <target state="translated">それぞれのすべてのバインディング &lt;code&gt;|&lt;/code&gt; 分離されたパターンは、腕のすべてのパターンに現れる必要があります。同じ名前のバインディングはすべて同じタイプで、同じバインディングモードでなければなりません。</target>
        </trans-unit>
        <trans-unit id="f737446eafc5a17a8ec946c9c5af55ffd56f7fc6" translate="yes" xml:space="preserve">
          <source>Every programming language has tools for effectively handling the duplication of concepts. In Rust, one such tool is &lt;em&gt;generics&lt;/em&gt;. Generics are abstract stand-ins for concrete types or other properties. When we&amp;rsquo;re writing code, we can express the behavior of generics or how they relate to other generics without knowing what will be in their place when compiling and running the code.</source>
          <target state="translated">すべてのプログラミング言語には、概念の重複を効果的に処理するためのツールがあります。Rustでは、そのようなツールの1つが&lt;em&gt;ジェネリック&lt;/em&gt;です。ジェネリックスは、具象タイプまたはその他のプロパティの抽象的な代役です。コードを記述しているときは、コードをコンパイルして実行するときに何が配置されるかがわからなくても、ジェネリックの動作や他のジェネリックとの関係を表現できます。</target>
        </trans-unit>
        <trans-unit id="a4e5ea4250d5e82010eb406e2a4f6595cd8eb17e" translate="yes" xml:space="preserve">
          <source>Every reference to a value of the type &lt;code&gt;T&lt;/code&gt; must be a multiple of this number.</source>
          <target state="translated">タイプ &lt;code&gt;T&lt;/code&gt; の値へのすべての参照は、この数の倍数でなければなりません。</target>
        </trans-unit>
        <trans-unit id="b2b297070b39157818fb52cce13340b22664a05d" translate="yes" xml:space="preserve">
          <source>Every six weeks, it&amp;rsquo;s time to prepare a new release! The &lt;code&gt;beta&lt;/code&gt; branch of the Rust repository branches off from the &lt;code&gt;master&lt;/code&gt; branch used by nightly. Now, there are two releases:</source>
          <target state="translated">6週間ごとに、新しいリリースを準備するときです。Rustリポジトリの &lt;code&gt;beta&lt;/code&gt; ブランチは、夜間に使用される &lt;code&gt;master&lt;/code&gt; ブランチから分岐します。現在、2つのリリースがあります。</target>
        </trans-unit>
        <trans-unit id="6b368f07214c45db61fd3d58dd74504e2a16a0b1" translate="yes" xml:space="preserve">
          <source>Every thread is equipped with some basic low-level blocking support, via the &lt;a href=&quot;fn.park&quot;&gt;&lt;code&gt;park&lt;/code&gt;&lt;/a&gt; function and the &lt;code&gt;unpark()&lt;/code&gt; method. These can be used as a more CPU-efficient implementation of a spinlock.</source>
          <target state="translated">すべてのスレッドは、&lt;a href=&quot;fn.park&quot;&gt; &lt;code&gt;park&lt;/code&gt; &lt;/a&gt;関数と &lt;code&gt;unpark()&lt;/code&gt; メソッドを介して、いくつかの基本的な低レベルのブロッキングサポートを備えています。これらは、スピンロックのよりCPU効率の高い実装として使用できます。</target>
        </trans-unit>
        <trans-unit id="a3fd2a9561db500bb9d0da237c1cbe58bde7a76a" translate="yes" xml:space="preserve">
          <source>Every thread is equipped with some basic low-level blocking support, via the &lt;a href=&quot;fn.park&quot;&gt;&lt;code&gt;thread::park&lt;/code&gt;&lt;/a&gt; function and &lt;a href=&quot;struct.thread#method.unpark&quot;&gt;&lt;code&gt;thread::Thread::unpark&lt;/code&gt;&lt;/a&gt; method. &lt;a href=&quot;fn.park&quot;&gt;&lt;code&gt;park&lt;/code&gt;&lt;/a&gt; blocks the current thread, which can then be resumed from another thread by calling the &lt;a href=&quot;struct.thread#method.unpark&quot;&gt;&lt;code&gt;unpark&lt;/code&gt;&lt;/a&gt; method on the blocked thread's handle.</source>
          <target state="translated">すべてのスレッドは、&lt;a href=&quot;fn.park&quot;&gt; &lt;code&gt;thread::park&lt;/code&gt; &lt;/a&gt;関数と&lt;a href=&quot;struct.thread#method.unpark&quot;&gt; &lt;code&gt;thread::Thread::unpark&lt;/code&gt; &lt;/a&gt;メソッドを介して、いくつかの基本的な低レベルのブロッキングサポートを備えています。&lt;a href=&quot;fn.park&quot;&gt; &lt;code&gt;park&lt;/code&gt; &lt;/a&gt;は現在のスレッドをブロックし、ブロックされたスレッドのハンドルで&lt;a href=&quot;struct.thread#method.unpark&quot;&gt; &lt;code&gt;unpark&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことにより、別のスレッドから再開できます。</target>
        </trans-unit>
        <trans-unit id="b2e699d3d67c0cff58c1aa9e18f48ce00d748e2e" translate="yes" xml:space="preserve">
          <source>Every two or three years, the Rust team produces a new Rust &lt;em&gt;edition&lt;/em&gt;. Each edition brings together the features that have landed into a clear package with fully updated documentation and tooling. New editions ship as part of the usual six-week release process.</source>
          <target state="translated">Rustチームは2〜3年ごとに新しいRust &lt;em&gt;エディションを作成し&lt;/em&gt;ます。各エディションには、完全に更新されたドキュメントとツールを備えた明確なパッケージに含まれる機能がまとめられています。新しいエディションは、通常の6週間のリリースプロセスの一部として出荷されます。</target>
        </trans-unit>
        <trans-unit id="53b902771046989665a92604fb9ab46703388afa" translate="yes" xml:space="preserve">
          <source>Every value in Rust is of a certain &lt;em&gt;data type&lt;/em&gt;, which tells Rust what kind of data is being specified so it knows how to work with that data. We&amp;rsquo;ll look at two data type subsets: scalar and compound.</source>
          <target state="translated">Rustのすべての値は特定の&lt;em&gt;データ型&lt;/em&gt;であり、指定されているデータの種類をRustに伝え、そのデータの操作方法を認識します。2つのデータ型のサブセット（スカラーと複合）を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="c0bb7784cb1f387d176d36590603da6e68c6346f" translate="yes" xml:space="preserve">
          <source>Every variable, item and value in a Rust program has a type. The &lt;em&gt;type&lt;/em&gt; of a &lt;em&gt;value&lt;/em&gt; defines the interpretation of the memory holding it and the operations that may be performed on the value.</source>
          <target state="translated">Rustプログラムのすべての変数、項目、値にはタイプがあります。&lt;em&gt;値&lt;/em&gt;の&lt;em&gt;タイプ&lt;/em&gt;は、&lt;em&gt;値&lt;/em&gt;を保持しているメモリの解釈と、値に対して実行できる操作を定義します。</target>
        </trans-unit>
        <trans-unit id="a7ba8dc4d2e8318330c227618f02b6a3d6a485d1" translate="yes" xml:space="preserve">
          <source>Every variable, item, and value in a Rust program has a type. The &lt;em&gt;type&lt;/em&gt; of a &lt;em&gt;value&lt;/em&gt; defines the interpretation of the memory holding it and the operations that may be performed on the value.</source>
          <target state="translated">Rustプログラムのすべての変数、項目、および値には型があります。&lt;em&gt;値&lt;/em&gt;の&lt;em&gt;タイプ&lt;/em&gt;は、&lt;em&gt;値&lt;/em&gt;を保持するメモリの解釈と、値に対して実行される可能性のある操作を定義します。</target>
        </trans-unit>
        <trans-unit id="e5d0186e8728baeab6c41facdf93f768a88a492b" translate="yes" xml:space="preserve">
          <source>Everything possible with &lt;code&gt;Copy&lt;/code&gt; you can also accomplish with &lt;code&gt;Clone&lt;/code&gt;, but the code might be slower or have to use &lt;code&gt;clone&lt;/code&gt; in places.</source>
          <target state="translated">&lt;code&gt;Copy&lt;/code&gt; で可能なことはすべて &lt;code&gt;Clone&lt;/code&gt; でも実現できますが、コードが遅くなるか、場所で &lt;code&gt;clone&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="3146101ecfa785f2d78080e0cc6a0d3503e3150a" translate="yes" xml:space="preserve">
          <source>ExactSizeIterator</source>
          <target state="translated">ExactSizeIterator</target>
        </trans-unit>
        <trans-unit id="41cf591951d2d7beb31eb3343cd4db3af8e57c20" translate="yes" xml:space="preserve">
          <source>ExactSizeIterator::is_empty</source>
          <target state="translated">ExactSizeIterator::is_empty</target>
        </trans-unit>
        <trans-unit id="751cc21500a7d7ee17b2f0da7fa4415a88a14eff" translate="yes" xml:space="preserve">
          <source>ExactSizeIterator::len</source>
          <target state="translated">ExactSizeIterator::len</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="ea72eaaf017adfe62fdd1e99e5bfc7eafbab0c64" translate="yes" xml:space="preserve">
          <source>Example of erroneous code (on a stable compiler):</source>
          <target state="translated">誤ったコードの例 (安定したコンパイラ上で)</target>
        </trans-unit>
        <trans-unit id="d1be55f5a5e8633f6ca767327d6ffbd2b73f390b" translate="yes" xml:space="preserve">
          <source>Example of erroneous code:</source>
          <target state="translated">誤ったコードの例。</target>
        </trans-unit>
        <trans-unit id="be4b93eb6f82c4178ceabca452a27ceb4158ddd6" translate="yes" xml:space="preserve">
          <source>Example of illegal &lt;code&gt;DispatchFromDyn&lt;/code&gt; implementation (illegal because of extra field)</source>
          <target state="translated">不正な &lt;code&gt;DispatchFromDyn&lt;/code&gt; 実装の例（余分なフィールドのために不正）</target>
        </trans-unit>
        <trans-unit id="5ab7721397827b925456d2a147cb5704105a62a7" translate="yes" xml:space="preserve">
          <source>Example usage:</source>
          <target state="translated">使用例。</target>
        </trans-unit>
        <trans-unit id="7629d161925d53d8c07052430e5179b9cd73df9f" translate="yes" xml:space="preserve">
          <source>Example values:</source>
          <target state="translated">値の例。</target>
        </trans-unit>
        <trans-unit id="fe024fc50c42665f35ef632be8bce2be9071e454" translate="yes" xml:space="preserve">
          <source>Example with a slice:</source>
          <target state="translated">スライスを使った例。</target>
        </trans-unit>
        <trans-unit id="544ec83edaaeafcc4cc305d0e2e6d04b135cc057" translate="yes" xml:space="preserve">
          <source>Example with an array with a fixed length:</source>
          <target state="translated">長さが固定された配列を使用した例</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="230703cf217e08cd431878d7b6d6b7ff5ccb00db" translate="yes" xml:space="preserve">
          <source>Example: intrusive doubly-linked list</source>
          <target state="translated">例:侵入型二重リンクリスト</target>
        </trans-unit>
        <trans-unit id="a363e70ae555493671c2074eba9434f0f10d22e4" translate="yes" xml:space="preserve">
          <source>Example: self-referential struct</source>
          <target state="translated">例:自己参照型構造体</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="504949c19448e1d28dd86072199a95c3060c8653" translate="yes" xml:space="preserve">
          <source>Examples for byte string literals:</source>
          <target state="translated">バイト文字列リテラルの例。</target>
        </trans-unit>
        <trans-unit id="65f96bb6473bf49ea5a2532013969ed04304777b" translate="yes" xml:space="preserve">
          <source>Examples for string literals:</source>
          <target state="translated">文字列リテラルの例。</target>
        </trans-unit>
        <trans-unit id="2b9f5ebc8bf70f5cd20a64246adda6fce8d80cb9" translate="yes" xml:space="preserve">
          <source>Examples of FIRST and LAST</source>
          <target state="translated">FIRSTとLASTの例</target>
        </trans-unit>
        <trans-unit id="4f69dc35c5188614946261cae793c365f8f070ba" translate="yes" xml:space="preserve">
          <source>Examples of FOLLOW for complex M:</source>
          <target state="translated">複合体MのFOLLOWの例</target>
        </trans-unit>
        <trans-unit id="475ed2196b5eed6aae0929450b2e017a53d203e7" translate="yes" xml:space="preserve">
          <source>Examples of erroneous code:</source>
          <target state="translated">誤ったコードの例。</target>
        </trans-unit>
        <trans-unit id="e44283640465bc24f4846139632af27bff59f97f" translate="yes" xml:space="preserve">
          <source>Examples of floating-point literals of various forms:</source>
          <target state="translated">様々な形式の浮動小数点リテラルの例。</target>
        </trans-unit>
        <trans-unit id="20265a7ac86f2018ea7005f50471da3fc3f072e7" translate="yes" xml:space="preserve">
          <source>Examples of integer literals of various forms:</source>
          <target state="translated">様々な形式の整数リテラルの例。</target>
        </trans-unit>
        <trans-unit id="3940a23e3ef887983adab9997e687a55b439de86" translate="yes" xml:space="preserve">
          <source>Examples of invalid integer literals:</source>
          <target state="translated">無効な整数リテラルの例。</target>
        </trans-unit>
        <trans-unit id="2b25c77bfdf1d1552ef0bbfa469ce8d62e5fd274" translate="yes" xml:space="preserve">
          <source>Examples of operations that require the trait</source>
          <target state="translated">形質を必要とする操作の例</target>
        </trans-unit>
        <trans-unit id="b9acf60b57b2d3b797f6ad69be2caed995f4289f" translate="yes" xml:space="preserve">
          <source>Examples of this error include:</source>
          <target state="translated">このエラーの例としては、次のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="4038c3ca40e0b1c6e5447bea24e8b897365db2d5" translate="yes" xml:space="preserve">
          <source>Examples of tuple expressions:</source>
          <target state="translated">タプル表現の例。</target>
        </trans-unit>
        <trans-unit id="203410f83cacdfbbcb718e74578a1613980744e9" translate="yes" xml:space="preserve">
          <source>Examples of tuple indexing expressions:</source>
          <target state="translated">タプル索引付け表現の例。</target>
        </trans-unit>
        <trans-unit id="100ef8f675809d602a846ef1b2275dd4f7faaa08" translate="yes" xml:space="preserve">
          <source>Examples of valid and invalid matchers</source>
          <target state="translated">有効なマッチャと無効なマッチャの例</target>
        </trans-unit>
        <trans-unit id="747dd22ecd6b689c0e332fe68ec6f6bb31f239fe" translate="yes" xml:space="preserve">
          <source>Examples, Prototype Code, and Tests</source>
          <target state="translated">例題、プロトタイプコード、テスト</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="43a61309e189219e20c136cf9a618743f41e2459" translate="yes" xml:space="preserve">
          <source>Excellent! We&amp;rsquo;ve built our own mini version of a classic tool and learned a lot about how to structure applications. We&amp;rsquo;ve also learned a bit about file input and output, lifetimes, testing, and command line parsing.</source>
          <target state="translated">優れた！クラシックツールの独自のミニバージョンを構築し、アプリケーションの構造化方法について多くを学びました。また、ファイルの入出力、有効期間、テスト、コマンドライン解析についても少し学びました。</target>
        </trans-unit>
        <trans-unit id="0a19b54597560e3b4fb3dfb50c3ffd609d90b30b" translate="yes" xml:space="preserve">
          <source>Excellent, we also got lines containing &amp;ldquo;To&amp;rdquo;! Our &lt;code&gt;minigrep&lt;/code&gt; program can now do case-insensitive searching controlled by an environment variable. Now you know how to manage options set using either command line arguments or environment variables.</source>
          <target state="translated">すばらしい、 &quot;To&quot;を含む行もあります。私たちの &lt;code&gt;minigrep&lt;/code&gt; のプログラムは、環境変数によって制御される大文字と小文字を区別しない検索を行うことができます。コマンドライン引数または環境変数を使用してオプションセットを管理する方法をマスターしました。</target>
        </trans-unit>
        <trans-unit id="a1ad1cd0df10d5b78ddd5c10568c7b6ba49956bd" translate="yes" xml:space="preserve">
          <source>Excess</source>
          <target state="translated">Excess</target>
        </trans-unit>
        <trans-unit id="213ac679129944cf35b52d3f166247a3476e33dd" translate="yes" xml:space="preserve">
          <source>Excess::borrow</source>
          <target state="translated">Excess::borrow</target>
        </trans-unit>
        <trans-unit id="2aa3ff98b7c6f889ec18867c1d879d31601fb976" translate="yes" xml:space="preserve">
          <source>Excess::borrow_mut</source>
          <target state="translated">Excess::borrow_mut</target>
        </trans-unit>
        <trans-unit id="69de6edf75670f83bf3d8c7612c28b32864662df" translate="yes" xml:space="preserve">
          <source>Excess::fmt</source>
          <target state="translated">Excess::fmt</target>
        </trans-unit>
        <trans-unit id="bae672085f5259844ae325ef19a7fbc823650dc3" translate="yes" xml:space="preserve">
          <source>Excess::from</source>
          <target state="translated">Excess::from</target>
        </trans-unit>
        <trans-unit id="3363cf55711fe555cd263a5f080aea1e2742f961" translate="yes" xml:space="preserve">
          <source>Excess::into</source>
          <target state="translated">Excess::into</target>
        </trans-unit>
        <trans-unit id="424dd77390342ae96d6be4663e2d673101095f6a" translate="yes" xml:space="preserve">
          <source>Excess::try_from</source>
          <target state="translated">Excess::try_from</target>
        </trans-unit>
        <trans-unit id="186dd3392df9a7ea057cfa2caeb2981aafeba862" translate="yes" xml:space="preserve">
          <source>Excess::try_into</source>
          <target state="translated">Excess::try_into</target>
        </trans-unit>
        <trans-unit id="fb79516f9afb5e67966091ce36a4e5750009a75b" translate="yes" xml:space="preserve">
          <source>Excess::type_id</source>
          <target state="translated">Excess::type_id</target>
        </trans-unit>
        <trans-unit id="6844909cde8e4da71d8365e268bda7441f803c28" translate="yes" xml:space="preserve">
          <source>Executes a breakpoint trap, for inspection by a debugger.</source>
          <target state="translated">デバッガによる検査のためにブレークポイント・トラップを実行します。</target>
        </trans-unit>
        <trans-unit id="7d5df1b7eb69039d1df43d4fce510e000a51b106" translate="yes" xml:space="preserve">
          <source>Executes a command as a child process, waiting for it to finish and collecting its exit status.</source>
          <target state="translated">子プロセスとしてコマンドを実行し、終了するのを待ち、終了ステータスを収集します。</target>
        </trans-unit>
        <trans-unit id="6a9be9437f2e17bce8bdfe27c265a90a0b3b13c8" translate="yes" xml:space="preserve">
          <source>Executes an operation of the &lt;code&gt;IPV6_ADD_MEMBERSHIP&lt;/code&gt; type.</source>
          <target state="translated">&lt;code&gt;IPV6_ADD_MEMBERSHIP&lt;/code&gt; タイプの操作を実行します。</target>
        </trans-unit>
        <trans-unit id="0570b69919b49638c7581c2f5f7e745acac96b18" translate="yes" xml:space="preserve">
          <source>Executes an operation of the &lt;code&gt;IPV6_DROP_MEMBERSHIP&lt;/code&gt; type.</source>
          <target state="translated">&lt;code&gt;IPV6_DROP_MEMBERSHIP&lt;/code&gt; タイプの操作を実行します。</target>
        </trans-unit>
        <trans-unit id="40fbdcbcf3c3fc0f5d4fb231720c04e19886ed36" translate="yes" xml:space="preserve">
          <source>Executes an operation of the &lt;code&gt;IP_ADD_MEMBERSHIP&lt;/code&gt; type.</source>
          <target state="translated">&lt;code&gt;IP_ADD_MEMBERSHIP&lt;/code&gt; タイプの操作を実行します。</target>
        </trans-unit>
        <trans-unit id="95072943c905b0126c579c18ad7e5ab7d362940a" translate="yes" xml:space="preserve">
          <source>Executes an operation of the &lt;code&gt;IP_DROP_MEMBERSHIP&lt;/code&gt; type.</source>
          <target state="translated">&lt;code&gt;IP_DROP_MEMBERSHIP&lt;/code&gt; タイプの操作を実行します。</target>
        </trans-unit>
        <trans-unit id="6743cba9287a9caaff1cd440b7d64282c6049053" translate="yes" xml:space="preserve">
          <source>Executes the command as a child process, returning a handle to it.</source>
          <target state="translated">子プロセスとしてコマンドを実行し、ハンドルを返します。</target>
        </trans-unit>
        <trans-unit id="b30f963dd62b9cb6f21b5fac9b505666d74b5221" translate="yes" xml:space="preserve">
          <source>Executes the command as a child process, waiting for it to finish and collecting all of its output.</source>
          <target state="translated">子プロセスとしてコマンドを実行し、コマンドが終了するのを待ち、その出力をすべて収集します。</target>
        </trans-unit>
        <trans-unit id="2817cb06c5b73332022cf111098d6bcb52bffbf9" translate="yes" xml:space="preserve">
          <source>Executes the destructor (if any) of the pointed-to value.</source>
          <target state="translated">指向先の値のデストラクタ(もしあれば)を実行します。</target>
        </trans-unit>
        <trans-unit id="17bebc4fe982bc5987b474e37f88af148d80ee3a" translate="yes" xml:space="preserve">
          <source>Executes the destructor for this type.</source>
          <target state="translated">この型のデストラクタを実行します。</target>
        </trans-unit>
        <trans-unit id="52c42692b06f8f96ca5eac28d8eb9b409a21b5d6" translate="yes" xml:space="preserve">
          <source>Executes the destructor for this type. &lt;a href=&quot;../../ops/trait.drop#tymethod.drop&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">このタイプのデストラクタを実行します。&lt;a href=&quot;../../ops/trait.drop#tymethod.drop&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f264f5a6fea12730ab8cdf161fec7b22c4658d43" translate="yes" xml:space="preserve">
          <source>Executes the destructor for this type. &lt;a href=&quot;../ops/trait.drop#tymethod.drop&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">このタイプのデストラクタを実行します。&lt;a href=&quot;../ops/trait.drop#tymethod.drop&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c5803bf23e85137290e380e7120cf5cda940241d" translate="yes" xml:space="preserve">
          <source>Executing an &lt;code&gt;as&lt;/code&gt; expression casts the value on the left-hand side to the type on the right-hand side.</source>
          <target state="translated">&lt;code&gt;as&lt;/code&gt; 式を実行すると、左側の値が右側の型にキャストされます。</target>
        </trans-unit>
        <trans-unit id="f227ddba90126d9b19972677ff1e5de9bf4b8baf" translate="yes" xml:space="preserve">
          <source>Executing an async block is similar to executing a closure expression: its immediate effect is to produce and return an anonymous type. Whereas closures return a type that implements one or more of the &lt;a href=&quot;../../std/ops/trait.fn&quot;&gt;&lt;code&gt;std::ops::Fn&lt;/code&gt;&lt;/a&gt; traits, however, the type returned for an async block implements the &lt;a href=&quot;../../std/future/trait.future&quot;&gt;&lt;code&gt;std::future::Future&lt;/code&gt;&lt;/a&gt; trait. The actual data format for this type is unspecified.</source>
          <target state="translated">非同期ブロックの実行は、クロージャ式の実行に似ています。その即時の効果は、匿名型を生成して返すことです。クロージャは1つ以上の&lt;a href=&quot;../../std/ops/trait.fn&quot;&gt; &lt;code&gt;std::ops::Fn&lt;/code&gt; &lt;/a&gt;トレイトを実装するタイプを返しますが、非同期ブロックに対して返されるタイプは&lt;a href=&quot;../../std/future/trait.future&quot;&gt; &lt;code&gt;std::future::Future&lt;/code&gt; &lt;/a&gt;トレイトを実装します。このタイプの実際のデータ形式は指定されていません。</target>
        </trans-unit>
        <trans-unit id="82d5a597261b3a537849f1b372f9b78e7b625eb8" translate="yes" xml:space="preserve">
          <source>Executing code compiled with platform features that the current platform does not support (see &lt;a href=&quot;attributes/codegen#the-target_feature-attribute&quot;&gt;&lt;code&gt;target_feature&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">現在のプラットフォームがサポートしていないプラットフォーム機能でコンパイルされたコードの実行（&lt;a href=&quot;attributes/codegen#the-target_feature-attribute&quot;&gt; &lt;code&gt;target_feature&lt;/code&gt; を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="b06f8d63833c073486a1fdfd5916e0d398ec4cd0" translate="yes" xml:space="preserve">
          <source>Exhaustive list of permitted structures in const functions:</source>
          <target state="translated">const関数で許可されている構造体の網羅的なリスト。</target>
        </trans-unit>
        <trans-unit id="86a8f90bc64cf5df00aa90e18788357137564fbe" translate="yes" xml:space="preserve">
          <source>Exit early from a loop.</source>
          <target state="translated">ループから早々に退場。</target>
        </trans-unit>
        <trans-unit id="50608b32a949b3a08997046090620bbfa3cfc868" translate="yes" xml:space="preserve">
          <source>Exit the loop, yielding the given value</source>
          <target state="translated">ループを終了し、指定された値を生成します。</target>
        </trans-unit>
        <trans-unit id="0ff1b7133e455e31a96b40324f51f574297a78d9" translate="yes" xml:space="preserve">
          <source>ExitCode</source>
          <target state="translated">ExitCode</target>
        </trans-unit>
        <trans-unit id="e1ae1acdd19956469141874d789907a490e9de55" translate="yes" xml:space="preserve">
          <source>ExitCode::borrow</source>
          <target state="translated">ExitCode::borrow</target>
        </trans-unit>
        <trans-unit id="a7c5a114734064fcccce67a9cd3dfdfdd76445d7" translate="yes" xml:space="preserve">
          <source>ExitCode::borrow_mut</source>
          <target state="translated">ExitCode::borrow_mut</target>
        </trans-unit>
        <trans-unit id="5bc752a76a7e5d3cc8b0c1d1e796fcbadc8039c7" translate="yes" xml:space="preserve">
          <source>ExitCode::clone</source>
          <target state="translated">ExitCode::clone</target>
        </trans-unit>
        <trans-unit id="e3aa3ff5485bd9294736387dd7b9f8d0c75a260b" translate="yes" xml:space="preserve">
          <source>ExitCode::clone_from</source>
          <target state="translated">ExitCode::clone_from</target>
        </trans-unit>
        <trans-unit id="060819903443bc1767dc26493ecf28b9dacb53f7" translate="yes" xml:space="preserve">
          <source>ExitCode::clone_into</source>
          <target state="translated">ExitCode::clone_into</target>
        </trans-unit>
        <trans-unit id="88c7fb509d4ffac9b282b1107a33514bd2b03738" translate="yes" xml:space="preserve">
          <source>ExitCode::fmt</source>
          <target state="translated">ExitCode::fmt</target>
        </trans-unit>
        <trans-unit id="1ce2ab0ed3bb706748e0b3c735c0688aff5160bf" translate="yes" xml:space="preserve">
          <source>ExitCode::from</source>
          <target state="translated">ExitCode::from</target>
        </trans-unit>
        <trans-unit id="b7bae028a6211fed92006d269593eb905ff449b3" translate="yes" xml:space="preserve">
          <source>ExitCode::into</source>
          <target state="translated">ExitCode::into</target>
        </trans-unit>
        <trans-unit id="df1e11e3310a78305718c30303c6e2d585a97898" translate="yes" xml:space="preserve">
          <source>ExitCode::report</source>
          <target state="translated">ExitCode::report</target>
        </trans-unit>
        <trans-unit id="2ad5a69a740cfdba845cbcd4d855863f15dc8419" translate="yes" xml:space="preserve">
          <source>ExitCode::to_owned</source>
          <target state="translated">ExitCode::to_owned</target>
        </trans-unit>
        <trans-unit id="b3d7600372ff90a15d8a6af9f58e0f3703b33bf4" translate="yes" xml:space="preserve">
          <source>ExitCode::try_from</source>
          <target state="translated">ExitCode::try_from</target>
        </trans-unit>
        <trans-unit id="185ac9887db2c6d26575ff67cb5a611fc101a07d" translate="yes" xml:space="preserve">
          <source>ExitCode::try_into</source>
          <target state="translated">ExitCode::try_into</target>
        </trans-unit>
        <trans-unit id="d18c4ea9574f15037debc13139109e30412ae359" translate="yes" xml:space="preserve">
          <source>ExitCode::type_id</source>
          <target state="translated">ExitCode::type_id</target>
        </trans-unit>
        <trans-unit id="c111aeda61ffb30094d669bbbfd2bc91a42cd8b8" translate="yes" xml:space="preserve">
          <source>ExitStatus</source>
          <target state="translated">ExitStatus</target>
        </trans-unit>
        <trans-unit id="1974f260a6f0d3b98fe0a9d8c2855e1574bf736a" translate="yes" xml:space="preserve">
          <source>ExitStatus::borrow</source>
          <target state="translated">ExitStatus::borrow</target>
        </trans-unit>
        <trans-unit id="2e8dc59f4c3302f6a185b095cb7a63489f63705c" translate="yes" xml:space="preserve">
          <source>ExitStatus::borrow_mut</source>
          <target state="translated">ExitStatus::borrow_mut</target>
        </trans-unit>
        <trans-unit id="6d4d42d0ac2545f85258d6aeff490a183d94bdde" translate="yes" xml:space="preserve">
          <source>ExitStatus::clone</source>
          <target state="translated">ExitStatus::clone</target>
        </trans-unit>
        <trans-unit id="6b9f4647c8bbb11d090a3ad7a23f835f91d4e1f3" translate="yes" xml:space="preserve">
          <source>ExitStatus::clone_from</source>
          <target state="translated">ExitStatus::clone_from</target>
        </trans-unit>
        <trans-unit id="7f70f957cde58c8fa54e2f3d5c363a834dc94fd9" translate="yes" xml:space="preserve">
          <source>ExitStatus::clone_into</source>
          <target state="translated">ExitStatus::clone_into</target>
        </trans-unit>
        <trans-unit id="fb34c74ca984270958cdf7e209f3f61f917dd89e" translate="yes" xml:space="preserve">
          <source>ExitStatus::code</source>
          <target state="translated">ExitStatus::code</target>
        </trans-unit>
        <trans-unit id="5d276ae9b5eb288da3fb43e86a9dfcb2560769d0" translate="yes" xml:space="preserve">
          <source>ExitStatus::eq</source>
          <target state="translated">ExitStatus::eq</target>
        </trans-unit>
        <trans-unit id="9327a6d9903d1c0cd219988422f92e0424dd692a" translate="yes" xml:space="preserve">
          <source>ExitStatus::fmt</source>
          <target state="translated">ExitStatus::fmt</target>
        </trans-unit>
        <trans-unit id="bc98aeee9f7f4b636747178371ae035d543a7d73" translate="yes" xml:space="preserve">
          <source>ExitStatus::from</source>
          <target state="translated">ExitStatus::from</target>
        </trans-unit>
        <trans-unit id="33187a0a7c122e0dc9144590daee2a62f6ddf619" translate="yes" xml:space="preserve">
          <source>ExitStatus::from_raw</source>
          <target state="translated">ExitStatus::from_raw</target>
        </trans-unit>
        <trans-unit id="93f1b4bcf00cab23c41a7e1a9a12b16b01301289" translate="yes" xml:space="preserve">
          <source>ExitStatus::into</source>
          <target state="translated">ExitStatus::into</target>
        </trans-unit>
        <trans-unit id="62581279cf1b3936bce1dcf62db029ec5612c875" translate="yes" xml:space="preserve">
          <source>ExitStatus::ne</source>
          <target state="translated">ExitStatus::ne</target>
        </trans-unit>
        <trans-unit id="cfac0374512ce042704c82ce7fa68a8364d0e58f" translate="yes" xml:space="preserve">
          <source>ExitStatus::signal</source>
          <target state="translated">ExitStatus::signal</target>
        </trans-unit>
        <trans-unit id="ed4f39a2d8c7a9a57537b3c31d5431dd2f115cdc" translate="yes" xml:space="preserve">
          <source>ExitStatus::success</source>
          <target state="translated">ExitStatus::success</target>
        </trans-unit>
        <trans-unit id="62b47c36650840b0108126f3adde26e48b61617d" translate="yes" xml:space="preserve">
          <source>ExitStatus::to_owned</source>
          <target state="translated">ExitStatus::to_owned</target>
        </trans-unit>
        <trans-unit id="0bfe5d5113bfde9b81de6719accbb3be938d9509" translate="yes" xml:space="preserve">
          <source>ExitStatus::to_string</source>
          <target state="translated">ExitStatus::to_string</target>
        </trans-unit>
        <trans-unit id="29bd286a73a29a6827e8115de57ab58bfab614df" translate="yes" xml:space="preserve">
          <source>ExitStatus::try_from</source>
          <target state="translated">ExitStatus::try_from</target>
        </trans-unit>
        <trans-unit id="04fd7f5c8e73d6df1fa6efbe1a61914cbf761794" translate="yes" xml:space="preserve">
          <source>ExitStatus::try_into</source>
          <target state="translated">ExitStatus::try_into</target>
        </trans-unit>
        <trans-unit id="520d14d48b9052fe8fb50d5d6c071024ebf5dbbd" translate="yes" xml:space="preserve">
          <source>ExitStatus::type_id</source>
          <target state="translated">ExitStatus::type_id</target>
        </trans-unit>
        <trans-unit id="2627903d418f2f228b709bdaae9456f1231acdaa" translate="yes" xml:space="preserve">
          <source>ExitStatusExt</source>
          <target state="translated">ExitStatusExt</target>
        </trans-unit>
        <trans-unit id="29e45ab9d14b5913718450c7b9f0d56077e83e7e" translate="yes" xml:space="preserve">
          <source>Exiting without calling destructors</source>
          <target state="translated">デストラクタを呼び出さずに終了する</target>
        </trans-unit>
        <trans-unit id="28d9b17570ad88d114dcb8b6b92211f2f97de502" translate="yes" xml:space="preserve">
          <source>Expands to a string that represents the current module path.</source>
          <target state="translated">現在のモジュールのパスを表す文字列に展開します。</target>
        </trans-unit>
        <trans-unit id="111566545f49cd21933fc1fea69c690da33c96ff" translate="yes" xml:space="preserve">
          <source>Expands to the column number at which it was invoked.</source>
          <target state="translated">呼び出された列番号に展開します。</target>
        </trans-unit>
        <trans-unit id="415d4a1b98b5b38e7136a2569231ef3c795170fb" translate="yes" xml:space="preserve">
          <source>Expands to the file name in which it was invoked.</source>
          <target state="translated">呼び出されたファイル名まで展開します。</target>
        </trans-unit>
        <trans-unit id="a45f83d80d16c44c92eee689c97673f06829c8ce" translate="yes" xml:space="preserve">
          <source>Expands to the line number on which it was invoked.</source>
          <target state="translated">呼び出された行番号まで展開します。</target>
        </trans-unit>
        <trans-unit id="a4c577a2ac16bd3ba372061e96a947970d947bf7" translate="yes" xml:space="preserve">
          <source>Expected type did not match the received type.</source>
          <target state="translated">期待される型が受信した型と一致しませんでした。</target>
        </trans-unit>
        <trans-unit id="b718f8c3a83788b1b360cc38380401a994fb4892" translate="yes" xml:space="preserve">
          <source>Experimental</source>
          <target state="translated">Experimental</target>
        </trans-unit>
        <trans-unit id="9560abec248c2d8a474706784a0064e62c9f3bc6" translate="yes" xml:space="preserve">
          <source>ExperimentalUnix</source>
          <target state="translated">ExperimentalUnix</target>
        </trans-unit>
        <trans-unit id="9c999b61cac476de27b9f2b90682b4f512986004" translate="yes" xml:space="preserve">
          <source>ExperimentalWindows</source>
          <target state="translated">ExperimentalWindows</target>
        </trans-unit>
        <trans-unit id="b32ef340ea4702fd5f41dbe4001671d76174ef71" translate="yes" xml:space="preserve">
          <source>Explanation</source>
          <target state="translated">Explanation</target>
        </trans-unit>
        <trans-unit id="fb0c7f76ba2eebc8ef86d8e08fdc9b8c28d34904" translate="yes" xml:space="preserve">
          <source>Explicitly implementing both &lt;code&gt;Drop&lt;/code&gt; and &lt;code&gt;Copy&lt;/code&gt; trait on a type is currently disallowed. This feature can make some sense in theory, but the current implementation is incorrect and can lead to memory unsafety (see &lt;a href=&quot;https://github.com/rust-lang/rust/issues/20126&quot;&gt;issue #20126&lt;/a&gt;), so it has been disabled for now.</source>
          <target state="translated">型に &lt;code&gt;Drop&lt;/code&gt; 特性と &lt;code&gt;Copy&lt;/code&gt; 特性の両方を明示的に実装することは、現在許可されていません。この機能は理論的にはある程度意味がありますが、現在の実装は正しくなく、メモリの安全性が低下する可能性があるため（&lt;a href=&quot;https://github.com/rust-lang/rust/issues/20126&quot;&gt;問題＃&lt;/a&gt; 20126を参照）、現時点では無効になっています。</target>
        </trans-unit>
        <trans-unit id="d698ba47df5ae5a811a1350c6abdd8a4ed0fff8c" translate="yes" xml:space="preserve">
          <source>Explicitly implementing both Drop and Copy for a type is currently disallowed. This feature can make some sense in theory, but the current implementation is incorrect and can lead to memory unsafety (see &lt;a href=&quot;https://github.com/rust-lang/rust/issues/20126&quot;&gt;issue #20126&lt;/a&gt;), so it has been disabled for now.</source>
          <target state="translated">型に対してドロップとコピーの両方を明示的に実装することは現在許可されていません。この機能は理論的には理にかなっていますが、現在の実装は正しくなく、メモリが安全でなくなる可能性があるため（&lt;a href=&quot;https://github.com/rust-lang/rust/issues/20126&quot;&gt;問題＃&lt;/a&gt; 20126を参照）、現時点では無効になっています。</target>
        </trans-unit>
        <trans-unit id="d165ee97f26b031b938fc12621899c47ca3e7175" translate="yes" xml:space="preserve">
          <source>Exponentiation</source>
          <target state="translated">Exponentiation</target>
        </trans-unit>
        <trans-unit id="bd112165280d2f00f9e756f129da9dc704c3f593" translate="yes" xml:space="preserve">
          <source>Exporting a Convenient Public API with &lt;code id=&quot;exporting-a-convenient-public-api-with-pub-use&quot;&gt;pub use&lt;/code&gt;</source>
          <target state="translated">&lt;code id=&quot;exporting-a-convenient-public-api-with-pub-use&quot;&gt;pub use&lt;/code&gt; を使用した便利なパブリックAPIのエクスポート</target>
        </trans-unit>
        <trans-unit id="9150316825e9f6d857b4398d59d6a96682d74585" translate="yes" xml:space="preserve">
          <source>Exposing Paths with the &lt;code id=&quot;exposing-paths-with-the-pub-keyword&quot;&gt;pub&lt;/code&gt; Keyword</source>
          <target state="translated">&lt;code id=&quot;exposing-paths-with-the-pub-keyword&quot;&gt;pub&lt;/code&gt; キーワードでパスを公開する</target>
        </trans-unit>
        <trans-unit id="ae50b85a56c1e601d894825d1bcd5433f309e845" translate="yes" xml:space="preserve">
          <source>Exposing randomized base addresses through pointer leaks</source>
          <target state="translated">ポインタリークによるランダム化されたベースアドレスの公開</target>
        </trans-unit>
        <trans-unit id="1cce5cf4c494ba29ff4d7ae159b2451a4462e9e9" translate="yes" xml:space="preserve">
          <source>Expresses that &lt;code&gt;haystack[a..b]&lt;/code&gt; has been rejected as a possible match of the pattern.</source>
          <target state="translated">ことを表し &lt;code&gt;haystack[a..b]&lt;/code&gt; パターンの可能なマッチとして拒否されました。</target>
        </trans-unit>
        <trans-unit id="d9fc1c82d92eeab98426878b759fceb2c4c1a8a6" translate="yes" xml:space="preserve">
          <source>Expresses that a match of the pattern has been found at &lt;code&gt;haystack[a..b]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;haystack[a..b]&lt;/code&gt; でパターンの一致が見つかったことを示します。</target>
        </trans-unit>
        <trans-unit id="e9413e7cf480a6b3fb1a89962b712e0076f99371" translate="yes" xml:space="preserve">
          <source>Expresses that every byte of the haystack has been visited, ending the iteration.</source>
          <target state="translated">haystack の全バイトが訪問されたことを表現し、反復を終了します。</target>
        </trans-unit>
        <trans-unit id="97b695b9b9cfde3612c21b3add972cc0f21f4e26" translate="yes" xml:space="preserve">
          <source>Expression</source>
          <target state="translated">Expression</target>
        </trans-unit>
        <trans-unit id="1c214c7f9bfde2d572e04368579436132fb7c9dc" translate="yes" xml:space="preserve">
          <source>Expression Attributes</source>
          <target state="translated">表現属性</target>
        </trans-unit>
        <trans-unit id="e290d0bd398f4e40e7ad97a44c3e4a14487bc65b" translate="yes" xml:space="preserve">
          <source>Expression precedence</source>
          <target state="translated">式の優先順位</target>
        </trans-unit>
        <trans-unit id="0a7a6ba0d7d2af3106edf9d912c2fc5a47512f54" translate="yes" xml:space="preserve">
          <source>Expression statements</source>
          <target state="translated">表現文</target>
        </trans-unit>
        <trans-unit id="ae5fccd8dcd8fc317f8edfc8259af86cd2967a29" translate="yes" xml:space="preserve">
          <source>Expressions</source>
          <target state="translated">Expressions</target>
        </trans-unit>
        <trans-unit id="7bb2466f3a73df210b2543c2d61b582e81a11f51" translate="yes" xml:space="preserve">
          <source>Expressions accept outer attributes in limited situations, see &lt;a href=&quot;expressions#expression-attributes&quot;&gt;Expression Attributes&lt;/a&gt; for details.</source>
          <target state="translated">式は限られた状況で外部属性を受け入れます。詳細については、&lt;a href=&quot;expressions#expression-attributes&quot;&gt;式属性&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ea5a29e3a572dfe0ff53324d950b33e506a558c6" translate="yes" xml:space="preserve">
          <source>Expressions are divided into two main categories: place expressions and value expressions. Likewise within each expression, sub-expressions may occur in either place context or value context. The evaluation of an expression depends both on its own category and the context it occurs within.</source>
          <target state="translated">式は 2 つの主要なカテゴリに分けられます:場所式と値式です。同様に、それぞれの式の中で、サブ式は場所コンテキストまたは値コンテキストのいずれかで発生することがあります。式の評価は、それ自身のカテゴリと、その中で発生するコンテキストの両方に依存します。</target>
        </trans-unit>
        <trans-unit id="f3f87c5952fa93a03448097e06e822130ba38581" translate="yes" xml:space="preserve">
          <source>Expressions evaluate to something and make up most of the rest of the code that you&amp;rsquo;ll write in Rust. Consider a simple math operation, such as &lt;code&gt;5 + 6&lt;/code&gt;, which is an expression that evaluates to the value &lt;code&gt;11&lt;/code&gt;. Expressions can be part of statements: in Listing 3-1, the &lt;code&gt;6&lt;/code&gt; in the statement &lt;code&gt;let y = 6;&lt;/code&gt; is an expression that evaluates to the value &lt;code&gt;6&lt;/code&gt;. Calling a function is an expression. Calling a macro is an expression. The block that we use to create new scopes, &lt;code&gt;{}&lt;/code&gt;, is an expression, for example:</source>
          <target state="translated">式は何かに評価され、Rustで記述する残りのコードのほとんどを構成します。 &lt;code&gt;5 + 6&lt;/code&gt; などの単純な数学演算を考えてみます。これは、値が &lt;code&gt;11&lt;/code&gt; に評価される式です。式はステートメントの一部にすることができます。リスト3-1では、ステートメントの &lt;code&gt;6&lt;/code&gt; つが &lt;code&gt;let y = 6;&lt;/code&gt; 値 &lt;code&gt;6&lt;/code&gt; に評価される式です。関数の呼び出しは式です。マクロの呼び出しは式です。新しいスコープを作成するために使用するブロック &lt;code&gt;{}&lt;/code&gt; は、次のような式です。</target>
        </trans-unit>
        <trans-unit id="281dd83602a2719ee60a63350e4c59f5a5ec31ba" translate="yes" xml:space="preserve">
          <source>Extend</source>
          <target state="translated">Extend</target>
        </trans-unit>
        <trans-unit id="3d400e57b7ebc958150362b7ccf527570885afef" translate="yes" xml:space="preserve">
          <source>Extend Cargo using custom commands</source>
          <target state="translated">カスタムコマンドを使用したカーゴの拡張</target>
        </trans-unit>
        <trans-unit id="1aa1b8d09aeae60b76b14c43da05508c2308568e" translate="yes" xml:space="preserve">
          <source>Extend a collection with the contents of an iterator.</source>
          <target state="translated">イテレータの内容でコレクションを拡張します。</target>
        </trans-unit>
        <trans-unit id="63d17bd5e813a98108e872632dda1e3f6fca9930" translate="yes" xml:space="preserve">
          <source>Extend implementation that copies elements out of references before pushing them onto the Vec.</source>
          <target state="translated">Vecにプッシュする前に参照から要素をコピーする実装を拡張しました。</target>
        </trans-unit>
        <trans-unit id="6ca321bc031c66209872c995fde2c9958df48aec" translate="yes" xml:space="preserve">
          <source>Extend::extend</source>
          <target state="translated">Extend::extend</target>
        </trans-unit>
        <trans-unit id="0bdb432d95a5f44684c48bb5ff9c63a8b741778d" translate="yes" xml:space="preserve">
          <source>Extending Cargo with Custom Commands</source>
          <target state="translated">カスタムコマンドによるカーゴの拡張</target>
        </trans-unit>
        <trans-unit id="0bfe02d755fba1dacbc3abdb4bc60dfdcb8cf321" translate="yes" xml:space="preserve">
          <source>Extending a lifetime, or shortening an invariant lifetime. This is advanced, very unsafe Rust!</source>
          <target state="translated">ライフタイムを延長したり、不変のライフタイムを短縮したり。これは高度で、非常に危険なRust!</target>
        </trans-unit>
        <trans-unit id="f3982b58ea128693a466b38fe551940ae59fc928" translate="yes" xml:space="preserve">
          <source>Extending based on expressions</source>
          <target state="translated">式に基づいた拡張</target>
        </trans-unit>
        <trans-unit id="165c503abcbf685b22633768fa14b61e6111321a" translate="yes" xml:space="preserve">
          <source>Extending based on patterns</source>
          <target state="translated">パターンに基づいた拡張</target>
        </trans-unit>
        <trans-unit id="5e7a6525f01fc44c66d625472111d46906a702a3" translate="yes" xml:space="preserve">
          <source>Extends &lt;code&gt;self&lt;/code&gt; with &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; &lt;code&gt;self&lt;/code&gt; を拡張します。</target>
        </trans-unit>
        <trans-unit id="5b0d8441b27aafa3374d0798ba679165b9c0bf75" translate="yes" xml:space="preserve">
          <source>Extends a collection with exactly one element.</source>
          <target state="translated">1つの要素だけでコレクションを拡張します。</target>
        </trans-unit>
        <trans-unit id="c596f05a0a374226d4d89af6b8fc31f100676800" translate="yes" xml:space="preserve">
          <source>Extends a collection with the contents of an iterator.</source>
          <target state="translated">イテレータの内容を持つコレクションを拡張します。</target>
        </trans-unit>
        <trans-unit id="34684b1f4466b8bac4b0eb3da31f67f046bcdfaf" translate="yes" xml:space="preserve">
          <source>Extends a collection with the contents of an iterator. &lt;a href=&quot;../../iter/trait.extend#tymethod.extend&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">イテレータのコンテンツでコレクションを拡張します。&lt;a href=&quot;../../iter/trait.extend#tymethod.extend&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="53d3d99ff458e4308538b8fa842ffa49b1175ef6" translate="yes" xml:space="preserve">
          <source>Extends a collection with the contents of an iterator. &lt;a href=&quot;../iter/trait.extend#tymethod.extend&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">イテレータのコンテンツでコレクションを拡張します。&lt;a href=&quot;../iter/trait.extend#tymethod.extend&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="22bdb7eb07189c9fee4746d6cf601a24763232c3" translate="yes" xml:space="preserve">
          <source>Extends a collection with the contents of an iterator. &lt;a href=&quot;iter/trait.extend#tymethod.extend&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">イテレータのコンテンツでコレクションを拡張します。&lt;a href=&quot;iter/trait.extend#tymethod.extend&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6747fcd458b4db93fa07e978eeadfc404e97d049" translate="yes" xml:space="preserve">
          <source>Extends the string with the given &lt;a href=&quot;struct.osstr&quot;&gt;&lt;code&gt;&amp;amp;OsStr&lt;/code&gt;&lt;/a&gt; slice.</source>
          <target state="translated">指定された&lt;a href=&quot;struct.osstr&quot;&gt; &lt;code&gt;&amp;amp;OsStr&lt;/code&gt; &lt;/a&gt;スライスで文字列を拡張します。</target>
        </trans-unit>
        <trans-unit id="a449e6ae4ae76fbd14bf33b19229c470ef831252" translate="yes" xml:space="preserve">
          <source>Extensible Concurrency with the &lt;code id=&quot;extensible-concurrency-with-the-sync-and-send-traits&quot;&gt;Sync&lt;/code&gt; and &lt;code&gt;Send&lt;/code&gt; Traits</source>
          <target state="translated">&lt;code id=&quot;extensible-concurrency-with-the-sync-and-send-traits&quot;&gt;Sync&lt;/code&gt; および &lt;code&gt;Send&lt;/code&gt; トレイトによる拡張可能な同時実行性</target>
        </trans-unit>
        <trans-unit id="35c3ace074cac5108c2b6392030678de1734abf0" translate="yes" xml:space="preserve">
          <source>Extension methods for ASCII-subset only operations.</source>
          <target state="translated">ASCII-サブセットのみの操作のための拡張メソッド。</target>
        </trans-unit>
        <trans-unit id="656bcfe284e2da39c77d4fdab55b16ad3c654719" translate="yes" xml:space="preserve">
          <source>Extensions</source>
          <target state="translated">Extensions</target>
        </trans-unit>
        <trans-unit id="5660e0fb3b8978f5c7dd8e664a4a677b0daa23bf" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;std::process&lt;/code&gt; for Windows.</source>
          <target state="translated">Windowsの &lt;code&gt;std::process&lt;/code&gt; 拡張。</target>
        </trans-unit>
        <trans-unit id="8e8b96cc72db0c4dc075e35bc9cdf0733b6acb09" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;std::thread&lt;/code&gt; for Windows.</source>
          <target state="translated">Windowsの &lt;code&gt;std::thread&lt;/code&gt; 拡張。</target>
        </trans-unit>
        <trans-unit id="f0c28f41a9e3fa7fb027e52e2670951b4ac96708" translate="yes" xml:space="preserve">
          <source>Extern Prelude</source>
          <target state="translated">外部前奏曲</target>
        </trans-unit>
        <trans-unit id="6514bbb426cf43d7f3f90e0fe10f9d7ff363e600" translate="yes" xml:space="preserve">
          <source>Extern crate declarations</source>
          <target state="translated">外部クレート宣言</target>
        </trans-unit>
        <trans-unit id="1eddd7e69cdbd60c0d72ebdd3c45472a5da1f730" translate="yes" xml:space="preserve">
          <source>Extern function declarations with the &quot;C&quot; or &quot;cdecl&quot; ABIs can also be &lt;em&gt;variadic&lt;/em&gt;, allowing them to be called with a variable number of arguments. Normal Rust functions, even those with an &lt;code&gt;extern &quot;ABI&quot;&lt;/code&gt;, cannot be variadic. For more information, see &lt;a href=&quot;https://doc.rust-lang.org/nomicon/ffi.html#variadic-functions&quot;&gt;the nomicon's section on variadic functions&lt;/a&gt;.</source>
          <target state="translated">「C」または「cdecl」ABIを使用した外部関数宣言も&lt;em&gt;可変個引数&lt;/em&gt;にすることができ、可変数の引数を使用して呼び出すことができます。通常のRust機能は、 &lt;code&gt;extern &quot;ABI&quot;&lt;/code&gt; 備えたものであっても、可変個引数にすることはできません。詳細については&lt;a href=&quot;https://doc.rust-lang.org/nomicon/ffi.html#variadic-functions&quot;&gt;、可変個引数関数に関するnomiconのセクションを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="30ed2ac66ec6b9cc0432e6d5a4601ee33b6bb930" translate="yes" xml:space="preserve">
          <source>Extern function declarations with the &quot;C&quot; or &quot;cdecl&quot; ABIs can also be &lt;em&gt;variadic&lt;/em&gt;, allowing them to be called with a variable number of arguments. Normal rust functions, even those with an &lt;code&gt;extern &quot;ABI&quot;&lt;/code&gt;, cannot be variadic. For more information, see &lt;a href=&quot;https://doc.rust-lang.org/nomicon/ffi.html#variadic-functions&quot;&gt;the nomicon's section on variadic functions&lt;/a&gt;.</source>
          <target state="translated">「C」または「CDECL」のABIとはextern関数宣言もすることができ&lt;em&gt;可変長&lt;/em&gt;、それらが可変数の引数で呼び出されることを可能にします。通常の錆関数は、 &lt;code&gt;extern &quot;ABI&quot;&lt;/code&gt; を備えた関数であっても、可変性を持つことはできません。詳細については&lt;a href=&quot;https://doc.rust-lang.org/nomicon/ffi.html#variadic-functions&quot;&gt;、バリアント関数に関するノミコンのセクションを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="65d89d6a6f18d5795e8b05b432b6cd52044db0ee" translate="yes" xml:space="preserve">
          <source>Extern function qualifier</source>
          <target state="translated">外部関数修飾子</target>
        </trans-unit>
        <trans-unit id="1f7eccef81a98e5c471b9d99ccf4b50c1b88fe3f" translate="yes" xml:space="preserve">
          <source>Extern functions</source>
          <target state="translated">外部機能</target>
        </trans-unit>
        <trans-unit id="a2d449c2066cab7d81ea015424bd8d14387bea22" translate="yes" xml:space="preserve">
          <source>Extern functions are part of Rust's foreign function interface, providing the opposite functionality to &lt;a href=&quot;external-blocks&quot;&gt;external blocks&lt;/a&gt;. Whereas external blocks allow Rust code to call foreign code, extern functions with bodies defined in Rust code &lt;em&gt;can be called by foreign code&lt;/em&gt;. They are defined in the same way as any other Rust function, except that they have the &lt;code&gt;extern&lt;/code&gt; qualifier.</source>
          <target state="translated">外部関数は、Rustの外部関数インターフェイスの一部であり、&lt;a href=&quot;external-blocks&quot;&gt;外部ブロックに&lt;/a&gt;反対の機能を提供します。外部ブロックではRustコードが外部コードを呼び出す&lt;em&gt;ことができますが&lt;/em&gt;、Rustコードで定義された本体を持つextern関数は外部コードから呼び出す&lt;em&gt;ことができます&lt;/em&gt;。それらは &lt;code&gt;extern&lt;/code&gt; 修飾子があることを除いて、他のRust関数と同じ方法で定義されます。</target>
        </trans-unit>
        <trans-unit id="4ce0af43c07f2157bc2038fa0249d689eb463c91" translate="yes" xml:space="preserve">
          <source>Extern statics can be either immutable or mutable just like &lt;a href=&quot;static-items&quot;&gt;statics&lt;/a&gt; outside of external blocks. An immutable static &lt;em&gt;must&lt;/em&gt; be initialized before any Rust code is executed. It is not enough for the static to be initialized before Rust code reads from it.</source>
          <target state="translated">外部静力学は、外部ブロックの外部の&lt;a href=&quot;static-items&quot;&gt;静力学と&lt;/a&gt;同じように、不変または可変のいずれかになります。Rustコードを実行する前に、不変のスタティックを初期化する&lt;em&gt;必要&lt;/em&gt;が&lt;em&gt;あり&lt;/em&gt;ます。Rustコードが静的を読み取る前に静的を初期化するだけでは不十分です。</target>
        </trans-unit>
        <trans-unit id="224dea6c3333066e46cdb1ca575646da5bfd214d" translate="yes" xml:space="preserve">
          <source>External C functions are allowed to be variadic. However, a variadic function takes a minimum number of arguments. For example, consider C's variadic &lt;code&gt;printf&lt;/code&gt; function:</source>
          <target state="translated">外部C関数は可変長であることを許可されます。ただし、可変個引数関数は最小数の引数を取ります。たとえば、Cの可変個の &lt;code&gt;printf&lt;/code&gt; 関数を考えます。</target>
        </trans-unit>
        <trans-unit id="342d6c5cca77be476d8a95967d8d0db8741e506c" translate="yes" xml:space="preserve">
          <source>External blocks</source>
          <target state="translated">外部ブロック</target>
        </trans-unit>
        <trans-unit id="83d8db48341a32267147990e9523818d742c54b5" translate="yes" xml:space="preserve">
          <source>External blocks form the basis for Rust's foreign function interface. Declarations in an external block describe symbols in external, non-Rust libraries.</source>
          <target state="translated">外部ブロックは、Rustの外部関数インタフェースの基礎となるものです。外部ブロックの宣言は、外部のRust以外のライブラリのシンボルを記述します。</target>
        </trans-unit>
        <trans-unit id="ace0915a6c1896ef0020e8c3d63897ba9f7ed170" translate="yes" xml:space="preserve">
          <source>External blocks provide &lt;em&gt;declarations&lt;/em&gt; of items that are not &lt;em&gt;defined&lt;/em&gt; in the current crate and are the basis of Rust's foreign function interface. These are akin to unchecked imports.</source>
          <target state="translated">外部ブロックは、現在のクレートで&lt;em&gt;定義さ&lt;/em&gt;れておらず、Rustの外部関数インターフェイスの基礎となるアイテムの&lt;em&gt;宣言&lt;/em&gt;を提供します。これらは、チェックされていないインポートに似ています。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="48e7f57651ea7eed7c7272c6b08048522b200ade" translate="yes" xml:space="preserve">
          <source>External code (like our server in &lt;em&gt;src/bin/main.rs&lt;/em&gt;) doesn&amp;rsquo;t need to know the implementation details regarding using a &lt;code&gt;Worker&lt;/code&gt; struct within &lt;code&gt;ThreadPool&lt;/code&gt;, so we make the &lt;code&gt;Worker&lt;/code&gt; struct and its &lt;code&gt;new&lt;/code&gt; function private. The &lt;code&gt;Worker::new&lt;/code&gt; function uses the &lt;code&gt;id&lt;/code&gt; we give it and stores a &lt;code&gt;JoinHandle&amp;lt;()&amp;gt;&lt;/code&gt; instance that is created by spawning a new thread using an empty closure.</source>
          <target state="translated">外部コード（&lt;em&gt;src / bin / main.rs&lt;/em&gt;内のサーバーなど）は、 &lt;code&gt;ThreadPool&lt;/code&gt; 内の &lt;code&gt;Worker&lt;/code&gt; 構造体の使用に関する実装の詳細を知る必要がないため、 &lt;code&gt;Worker&lt;/code&gt; 構造体とその &lt;code&gt;new&lt;/code&gt; 関数をプライベートにします。 &lt;code&gt;Worker::new&lt;/code&gt; 機能は使用しています &lt;code&gt;id&lt;/code&gt; 、我々はそれを格納与える &lt;code&gt;JoinHandle&amp;lt;()&amp;gt;&lt;/code&gt; 空の閉鎖を使用して、新しいスレッドを生成することによって作成されたインスタンスを。</target>
        </trans-unit>
        <trans-unit id="6613e88e66a635a2565b186ccf4e3b12f673582c" translate="yes" xml:space="preserve">
          <source>External crates imported with &lt;code&gt;extern crate&lt;/code&gt; in the root module or provided to the compiler (as with the &lt;code&gt;--extern&lt;/code&gt; flag with &lt;code&gt;rustc&lt;/code&gt;) are added to the &quot;extern prelude&quot;. Crates in the extern prelude are in scope in the entire crate, including inner modules. If imported with &lt;code&gt;extern crate orig_name as new_name&lt;/code&gt;, then the symbol &lt;code&gt;new_name&lt;/code&gt; is instead added to the prelude.</source>
          <target state="translated">ルートモジュールで &lt;code&gt;extern crate&lt;/code&gt; &lt;code&gt;--extern&lt;/code&gt; を使用してインポートされた、またはコンパイラに提供された（rustcの--externフラグと &lt;code&gt;rustc&lt;/code&gt; ）外部クレートは、「extern prelude」に追加されます。外部プレリュードのクレートは、内部モジュールを含むクレート全体に適用されます。 &lt;code&gt;extern crate orig_name as new_name&lt;/code&gt; インポートした場合、代わりにシンボル &lt;code&gt;new_name&lt;/code&gt; がプレリュードに追加されます。</target>
        </trans-unit>
        <trans-unit id="32ece7447e212ccb757012ae5e86643f98cfc6c5" translate="yes" xml:space="preserve">
          <source>Extra Conditionals with Match Guards</source>
          <target state="translated">マッチガード付きのエクストラ条件付き</target>
        </trans-unit>
        <trans-unit id="d752dee9295f4dfe5d392179a84af08c86a16b3f" translate="yes" xml:space="preserve">
          <source>Extract the duplicate code into the body of the function and specify the inputs and return values of that code in the function signature.</source>
          <target state="translated">重複したコードを関数本体に抽出し、そのコードの入力値と戻り値を関数のシグネチャで指定します。</target>
        </trans-unit>
        <trans-unit id="c23bc5711c4106716527b5647362f08a92113ff9" translate="yes" xml:space="preserve">
          <source>Extracting Logic from &lt;code id=&quot;extracting-logic-from-main&quot;&gt;main&lt;/code&gt;</source>
          <target state="translated">&lt;code id=&quot;extracting-logic-from-main&quot;&gt;main&lt;/code&gt; からロジックを抽出しています</target>
        </trans-unit>
        <trans-unit id="f8d7602f3461fa54951122f27033f10fd4dd6680" translate="yes" xml:space="preserve">
          <source>Extracting a borrowed reference to the whole OS string</source>
          <target state="translated">OS全体の文字列への借用参照の抽出</target>
        </trans-unit>
        <trans-unit id="bd1c17a8059d60877bed23a8c062ed6219764c29" translate="yes" xml:space="preserve">
          <source>Extracting a raw pointer to the whole C string</source>
          <target state="translated">C文字列全体への生ポインタの抽出</target>
        </trans-unit>
        <trans-unit id="f3f51cc80e3ae1982747ef739eae23585f64efc4" translate="yes" xml:space="preserve">
          <source>Extracting a slice of the whole C string</source>
          <target state="translated">C文字列全体のスライスを抽出する</target>
        </trans-unit>
        <trans-unit id="7c6025beb99c95c0892b851cf9a727b399d3c515" translate="yes" xml:space="preserve">
          <source>Extracting the Argument Parser</source>
          <target state="translated">引数パーサーの抽出</target>
        </trans-unit>
        <trans-unit id="12801130beeedd079871761a20c76e767840cb13" translate="yes" xml:space="preserve">
          <source>Extracts a &lt;a href=&quot;struct.cstr&quot;&gt;&lt;code&gt;CStr&lt;/code&gt;&lt;/a&gt; slice containing the entire string.</source>
          <target state="translated">文字列全体を含む&lt;a href=&quot;struct.cstr&quot;&gt; &lt;code&gt;CStr&lt;/code&gt; &lt;/a&gt;スライスを抽出します。</target>
        </trans-unit>
        <trans-unit id="077bce36ea34a8682de40493d76c550ac66ae1ea" translate="yes" xml:space="preserve">
          <source>Extracts a handle to the underlying thread.</source>
          <target state="translated">基礎となるスレッドへのハンドルを抽出します。</target>
        </trans-unit>
        <trans-unit id="aa6ee9425f37e1c341efbcd4e8925124891481c6" translate="yes" xml:space="preserve">
          <source>Extracts a mutable slice of the entire vector.</source>
          <target state="translated">ベクター全体の変異可能なスライスを抽出します。</target>
        </trans-unit>
        <trans-unit id="e8196634fb250cabfeeb8a4a353d72847d5abea9" translate="yes" xml:space="preserve">
          <source>Extracts a slice containing the entire vector.</source>
          <target state="translated">ベクトル全体を含むスライスを抽出します.</target>
        </trans-unit>
        <trans-unit id="bc4640cdf6554d00501ee6f64b836dde5c00e850" translate="yes" xml:space="preserve">
          <source>Extracts a slice corresponding to the portion of the path remaining for iteration.</source>
          <target state="translated">反復のために残っているパスの部分に対応するスライスを抽出します。</target>
        </trans-unit>
        <trans-unit id="f68aae8ae781accce97421c5e61e3829b8563586" translate="yes" xml:space="preserve">
          <source>Extracts a string slice containing the entire &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 全体を含む文字列スライスを抽出します。</target>
        </trans-unit>
        <trans-unit id="6dd84a0b0798bd462adfd72caf33efd2748e9c71" translate="yes" xml:space="preserve">
          <source>Extracts raw handles.</source>
          <target state="translated">生のハンドルを抽出します。</target>
        </trans-unit>
        <trans-unit id="c6728342203a48ea78b904344daa2644f7bc9bca" translate="yes" xml:space="preserve">
          <source>Extracts raw sockets.</source>
          <target state="translated">生のソケットを抽出します。</target>
        </trans-unit>
        <trans-unit id="d3570013dd1716a99b0c2c5aa380c86577276340" translate="yes" xml:space="preserve">
          <source>Extracts the extension of &lt;a href=&quot;struct.path#method.file_name&quot;&gt;&lt;code&gt;self.file_name&lt;/code&gt;&lt;/a&gt;, if possible.</source>
          <target state="translated">&lt;a href=&quot;struct.path#method.file_name&quot;&gt; &lt;code&gt;self.file_name&lt;/code&gt; &lt;/a&gt;、self.file_nameの拡張子を抽出します。</target>
        </trans-unit>
        <trans-unit id="aba9f813990b5d9b5e64eb012431f01eb12a62e1" translate="yes" xml:space="preserve">
          <source>Extracts the owned data.</source>
          <target state="translated">所有データを抽出します。</target>
        </trans-unit>
        <trans-unit id="4bb8a1ffc5fe23d30e47788db4b04e4bd7ef9dde" translate="yes" xml:space="preserve">
          <source>Extracts the raw file descriptor.</source>
          <target state="translated">生のファイル記述子を抽出します。</target>
        </trans-unit>
        <trans-unit id="145e41f4f95335ea695a373cf463fcbaa9c860e2" translate="yes" xml:space="preserve">
          <source>Extracts the raw file descriptor. &lt;a href=&quot;../io/trait.asrawfd#tymethod.as_raw_fd&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">生ファイル記述子を抽出します。&lt;a href=&quot;../io/trait.asrawfd#tymethod.as_raw_fd&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="157d6bba148c30ad9080b9f153526fca61cf9fe7" translate="yes" xml:space="preserve">
          <source>Extracts the raw file descriptor. &lt;a href=&quot;../os/unix/io/trait.asrawfd#tymethod.as_raw_fd&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">生ファイル記述子を抽出します。&lt;a href=&quot;../os/unix/io/trait.asrawfd#tymethod.as_raw_fd&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bf843522fb743becb77da1f3973dfc766fb5fb45" translate="yes" xml:space="preserve">
          <source>Extracts the raw file descriptor. &lt;a href=&quot;trait.asrawfd#tymethod.as_raw_fd&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">生のファイル記述子を抽出します。&lt;a href=&quot;trait.asrawfd#tymethod.as_raw_fd&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f1ecbe9d7e6f6348c9a2a37d377a77cab837df15" translate="yes" xml:space="preserve">
          <source>Extracts the raw handle, without taking any ownership.</source>
          <target state="translated">所有権を取らずに生のハンドルを抽出します。</target>
        </trans-unit>
        <trans-unit id="fb58f79e9d98b1a88cfc91994de4506ca5b76415" translate="yes" xml:space="preserve">
          <source>Extracts the raw pthread_t without taking ownership</source>
          <target state="translated">所有権を取得せずに生のpthread_tを抽出します。</target>
        </trans-unit>
        <trans-unit id="264c6329df802b250e08319ad78e526de637a284" translate="yes" xml:space="preserve">
          <source>Extracts the stem (non-extension) portion of &lt;a href=&quot;struct.path#method.file_name&quot;&gt;&lt;code&gt;self.file_name&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;struct.path#method.file_name&quot;&gt; &lt;code&gt;self.file_name&lt;/code&gt; &lt;/a&gt;の語幹（非拡張子）部分を抽出します。</target>
        </trans-unit>
        <trans-unit id="ac75e4cd1cc5311228d80d0eaa18429d4399ec15" translate="yes" xml:space="preserve">
          <source>Extracts the successful type of a &lt;a href=&quot;enum.poll&quot;&gt;&lt;code&gt;Poll&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa7c9b77e315be6b4940e226a98d1c2a71199fcd" translate="yes" xml:space="preserve">
          <source>Extracts the successful type of a &lt;code&gt;Poll&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">成功したタイプの &lt;code&gt;Poll&amp;lt;T&amp;gt;&lt;/code&gt; 抽出します。</target>
        </trans-unit>
        <trans-unit id="650999695577c161ded55abd72cdc4bc351a6093" translate="yes" xml:space="preserve">
          <source>Extracts the underlying &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;&lt;code&gt;OsStr&lt;/code&gt;&lt;/a&gt; slice.</source>
          <target state="translated">基になる&lt;a href=&quot;../ffi/struct.osstr&quot;&gt; &lt;code&gt;OsStr&lt;/code&gt; &lt;/a&gt;スライスを抽出します。</target>
        </trans-unit>
        <trans-unit id="9bfd07353b81ed06ed256e3b838944349974b425" translate="yes" xml:space="preserve">
          <source>Extracts the underlying raw socket from this object.</source>
          <target state="translated">このオブジェクトから基礎となる生のソケットを抽出します。</target>
        </trans-unit>
        <trans-unit id="5ee8247b6d05870f64aaf871d2729bdc31ac6272" translate="yes" xml:space="preserve">
          <source>Extracts the value from the &lt;code&gt;ManuallyDrop&lt;/code&gt; container.</source>
          <target state="translated">値を抽出 &lt;code&gt;ManuallyDrop&lt;/code&gt; のコンテナを。</target>
        </trans-unit>
        <trans-unit id="62d749f502c802698c8a607ffdae632027824402" translate="yes" xml:space="preserve">
          <source>Extracts the value from the &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; container. This is a great way to ensure that the data will get dropped, because the resulting &lt;code&gt;T&lt;/code&gt; is subject to the usual drop handling.</source>
          <target state="translated">&lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; コンテナから値を抽出します。結果の &lt;code&gt;T&lt;/code&gt; は通常のドロップ処理の対象となるため、これはデータが確実にドロップされるようにする優れた方法です。</target>
        </trans-unit>
        <trans-unit id="d77ba39cee073972bc000f3eb60f7cf221c2412f" translate="yes" xml:space="preserve">
          <source>FAMILY</source>
          <target state="translated">FAMILY</target>
        </trans-unit>
        <trans-unit id="2f20f7ce5f89c0638962299aea08b6280742c461" translate="yes" xml:space="preserve">
          <source>FIRST</source>
          <target state="translated">FIRST</target>
        </trans-unit>
        <trans-unit id="eb81392957b389f13a1eb1aff4a90a77051ccc8d" translate="yes" xml:space="preserve">
          <source>FIRST and FOLLOW, informally</source>
          <target state="translated">FIRSTとFOLLOW、非公式に</target>
        </trans-unit>
        <trans-unit id="76aa8b011108f3fc78ef01901d036d34558de308" translate="yes" xml:space="preserve">
          <source>FIRST(&lt;code&gt;$($d:ident $e:expr );* $( $(h)* );* $( f ;)+ g&lt;/code&gt;) = { &lt;code&gt;$d:ident&lt;/code&gt;, &lt;code&gt;h&lt;/code&gt;, &lt;code&gt;;&lt;/code&gt;, &lt;code&gt;f&lt;/code&gt; }</source>
          <target state="translated">FIRST（ &lt;code&gt;$($d:ident $e:expr );* $( $(h)* );* $( f ;)+ g&lt;/code&gt; ）= { &lt;code&gt;$d:ident&lt;/code&gt; 、 &lt;code&gt;h&lt;/code&gt; 、 &lt;code&gt;;&lt;/code&gt; 、 &lt;code&gt;f&lt;/code&gt; }</target>
        </trans-unit>
        <trans-unit id="e8000c6cb4a71cc183161d8db5dc14548c68a90f" translate="yes" xml:space="preserve">
          <source>FIRST(&lt;code&gt;$($d:ident $e:expr );* $( $(h)* );* $($( f ;)+ g)*&lt;/code&gt;) = { &lt;code&gt;$d:ident&lt;/code&gt;, &lt;code&gt;h&lt;/code&gt;, &lt;code&gt;;&lt;/code&gt;, &lt;code&gt;f&lt;/code&gt;, &amp;epsilon; }</source>
          <target state="translated">FIRST（ &lt;code&gt;$($d:ident $e:expr );* $( $(h)* );* $($( f ;)+ g)*&lt;/code&gt; ）= { &lt;code&gt;$d:ident&lt;/code&gt; 、 &lt;code&gt;h&lt;/code&gt; 、 &lt;code&gt;;&lt;/code&gt; 、 &lt;code&gt;f&lt;/code&gt; 、&amp;epsilon;}</target>
        </trans-unit>
        <trans-unit id="e2fd18272a4c09d4e029ae98fd4afb46c1c6f501" translate="yes" xml:space="preserve">
          <source>FIRST(M) = (FIRST(&lt;code&gt;tt ...&lt;/code&gt;) \ {&amp;epsilon;}) &amp;cup; SEP_SET(M) &amp;cup; ALPHA_SET(M).</source>
          <target state="translated">FIRST（M）=（FIRST（ &lt;code&gt;tt ...&lt;/code&gt; ）\ {&amp;epsilon;}）&amp;cup;SEP_SET（M）&amp;cup;ALPHA_SET（M）。</target>
        </trans-unit>
        <trans-unit id="570891275149514a941164503f52d96a230e8f72" translate="yes" xml:space="preserve">
          <source>FIRST(M) is defined by case analysis on the sequence M and the structure of its first token-tree (if any):</source>
          <target state="translated">FIRST(M)は、配列Mとその最初のトークンツリーの構造(もしあれば)についてのケース分析によって定義されます。</target>
        </trans-unit>
        <trans-unit id="2770ed7ea07727161a590105d2cced4460e6fb7a" translate="yes" xml:space="preserve">
          <source>FIRST(M): collects the tokens potentially used first when matching a fragment to M.</source>
          <target state="translated">FIRST(M):フラグメントをMにマッチングする際に最初に使用される可能性のあるトークンを収集します。</target>
        </trans-unit>
        <trans-unit id="0cc51227cb07c287afd998c5485405007129eb98" translate="yes" xml:space="preserve">
          <source>FIRST, LAST</source>
          <target state="translated">最初に、最後に</target>
        </trans-unit>
        <trans-unit id="d54a79c953c49229ca1b999a3877fc833c78a625" translate="yes" xml:space="preserve">
          <source>FLOAT_EXPONENT :</source>
          <target state="translated">FLOAT_EXPONENT .</target>
        </trans-unit>
        <trans-unit id="5688d97bfcb3dd848972075906e724309a5c4fc7" translate="yes" xml:space="preserve">
          <source>FLOAT_LITERAL :</source>
          <target state="translated">FLOAT_LITERAL .</target>
        </trans-unit>
        <trans-unit id="643e5757b63e729e09982a4bc89c853df6f16736" translate="yes" xml:space="preserve">
          <source>FLOAT_SUFFIX :</source>
          <target state="translated">FLOAT_SUFFIX .</target>
        </trans-unit>
        <trans-unit id="5e03334c60577d8657d4920c7623f56e324bf8c1" translate="yes" xml:space="preserve">
          <source>FOLLOW(&lt;code&gt;$( $d:ident $e:expr )\* $(;)\* $( f |)+&lt;/code&gt;) = ANYTOKEN</source>
          <target state="translated">FOLLOW（ &lt;code&gt;$( $d:ident $e:expr )\* $(;)\* $( f |)+&lt;/code&gt; ）= ANYTOKEN</target>
        </trans-unit>
        <trans-unit id="167d62ac4e7d3790ad97aedf4ba14cb8341fe3a2" translate="yes" xml:space="preserve">
          <source>FOLLOW(&lt;code&gt;$( $d:ident $e:expr )\* $(;)\*&lt;/code&gt;) = FOLLOW(&lt;code&gt;$e:expr&lt;/code&gt;) &amp;cap; ANYTOKEN = FOLLOW(&lt;code&gt;$e:expr&lt;/code&gt;)</source>
          <target state="translated">FOLLOW（ &lt;code&gt;$( $d:ident $e:expr )\* $(;)\*&lt;/code&gt; ）= FOLLOW（ &lt;code&gt;$e:expr&lt;/code&gt; ）&amp;cap;ANYTOKEN = FOLLOW（ &lt;code&gt;$e:expr&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="6626c4141f57e9b60be30be617c2cdb171317a01" translate="yes" xml:space="preserve">
          <source>FOLLOW(&lt;code&gt;$( $d:ident $e:expr )\*&lt;/code&gt;) = FOLLOW(&lt;code&gt;$e:expr&lt;/code&gt;)</source>
          <target state="translated">FOLLOW（ &lt;code&gt;$( $d:ident $e:expr )\*&lt;/code&gt; ）= FOLLOW（ &lt;code&gt;$e:expr&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="f66d5e29e70cd589cff4e5ab08177a93ed0611c5" translate="yes" xml:space="preserve">
          <source>FOLLOW(M)</source>
          <target state="translated">FOLLOW(M)</target>
        </trans-unit>
        <trans-unit id="9e09d2ab82f025a7e64828cab6c43d0b06a57274" translate="yes" xml:space="preserve">
          <source>FOLLOW(M), for any other M, is defined as the intersection, as t ranges over (LAST(M) \ {&amp;epsilon;}), of FOLLOW(t).</source>
          <target state="translated">他のMのFOLLOW（M）は、FOLLOW（t）のtが（LAST（M）\ {&amp;epsilon;}）を超える範囲の交差として定義されます。</target>
        </trans-unit>
        <trans-unit id="4206a86ea038ea435c1ed347f0969f9d822ce69d" translate="yes" xml:space="preserve">
          <source>FOLLOW(M): the set of tokens allowed to follow immediately after some fragment matched by M.</source>
          <target state="translated">FOLLOW(M):M でマッチしたフラグメントの直後に従うことが許されるトークンの集合。</target>
        </trans-unit>
        <trans-unit id="e8725359cf480c43172e8daff805567af5ab28a1" translate="yes" xml:space="preserve">
          <source>FOLLOW(expr) = FOLLOW(stmt) = {&lt;code&gt;=&amp;gt;&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;;&lt;/code&gt;}`.</source>
          <target state="translated">フォロー（expr）は=フォロー（STMT）= { &lt;code&gt;=&amp;gt;&lt;/code&gt; 、、 &lt;code&gt;,&lt;/code&gt; &lt;code&gt;;&lt;/code&gt; } `。</target>
        </trans-unit>
        <trans-unit id="f1c94b0843a99531c8c835aca785adb4c5a90dfb" translate="yes" xml:space="preserve">
          <source>FOLLOW(pat) = {&lt;code&gt;=&amp;gt;&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;=&lt;/code&gt;, &lt;code&gt;|&lt;/code&gt;, &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;in&lt;/code&gt;}`.</source>
          <target state="translated">フォロー（PAT）= { &lt;code&gt;=&amp;gt;&lt;/code&gt; 、、、 &lt;code&gt;,&lt;/code&gt; &lt;code&gt;=&lt;/code&gt; 、 &lt;code&gt;|&lt;/code&gt; 、 &lt;code&gt;if&lt;/code&gt; 、 &lt;code&gt;in&lt;/code&gt; `}。</target>
        </trans-unit>
        <trans-unit id="885a9fff1d5cc3b15f49b530772bdc214e6a723a" translate="yes" xml:space="preserve">
          <source>FOLLOW(t) = ANYTOKEN for any other simple token, including block, ident, tt, item, lifetime, literal and meta simple nonterminals, and all terminals.</source>
          <target state="translated">FOLLOW(t)=ブロック、ident、tt、item、lifetime、リテラルおよびメタ単純非末端、およびすべての端末を含む、他の任意の単純トークンに対するANYTOKEN。</target>
        </trans-unit>
        <trans-unit id="ba430e4179365d182ff4146ae1dcefc0d6523dab" translate="yes" xml:space="preserve">
          <source>FOLLOW(ty) = FOLLOW(path) = {&lt;code&gt;{&lt;/code&gt;, &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;=&amp;gt;&lt;/code&gt;, &lt;code&gt;:&lt;/code&gt;, &lt;code&gt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;;&lt;/code&gt;, &lt;code&gt;|&lt;/code&gt;, &lt;code&gt;as&lt;/code&gt;, &lt;code&gt;where&lt;/code&gt;, block nonterminals}.</source>
          <target state="translated">フォロー（TY）=フォロー（パス）= { &lt;code&gt;{&lt;/code&gt; 、 &lt;code&gt;[&lt;/code&gt; 、 &lt;code&gt;,&lt;/code&gt; 、 &lt;code&gt;=&amp;gt;&lt;/code&gt; 、：、 &lt;code&gt;:&lt;/code&gt; &lt;code&gt;=&lt;/code&gt; 、 &lt;code&gt;&amp;gt;&lt;/code&gt; 、 &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; 、 &lt;code&gt;;&lt;/code&gt; 、 &lt;code&gt;|&lt;/code&gt; 、 &lt;code&gt;as&lt;/code&gt; 、 &lt;code&gt;where&lt;/code&gt; 、block nonterminals}です。</target>
        </trans-unit>
        <trans-unit id="52673718fb30daab6c2f4857915def92bbf5b6a9" translate="yes" xml:space="preserve">
          <source>FOLLOW(vis) = {&lt;code&gt;,&lt;/code&gt;l any keyword or identifier except a non-raw &lt;code&gt;priv&lt;/code&gt;; any token that can begin a type; ident, ty, and path nonterminals}.</source>
          <target state="translated">FOLLOW（vis）= { &lt;code&gt;,&lt;/code&gt; l非生の &lt;code&gt;priv&lt;/code&gt; を除く任意のキーワードまたは識別子。タイプを開始できるトークン。ident、ty、およびpath nonterminals}。</target>
        </trans-unit>
        <trans-unit id="f90089a1ed80c5ba9419cdf50dfc612afc536d22" translate="yes" xml:space="preserve">
          <source>FRAC_1_PI</source>
          <target state="translated">FRAC_1_PI</target>
        </trans-unit>
        <trans-unit id="e0319e1e557b6305c1c1499cfe0364b5f5cc1130" translate="yes" xml:space="preserve">
          <source>FRAC_1_SQRT_2</source>
          <target state="translated">FRAC_1_SQRT_2</target>
        </trans-unit>
        <trans-unit id="a81334f47dfc908c4c0fb84f83be29c7ab8a4f51" translate="yes" xml:space="preserve">
          <source>FRAC_2_PI</source>
          <target state="translated">FRAC_2_PI</target>
        </trans-unit>
        <trans-unit id="abd901b4867c68111461f7868ae952e8b3de69c1" translate="yes" xml:space="preserve">
          <source>FRAC_2_SQRT_PI</source>
          <target state="translated">FRAC_2_SQRT_PI</target>
        </trans-unit>
        <trans-unit id="573bed53f67faec190045c494f61c1a015153c37" translate="yes" xml:space="preserve">
          <source>FRAC_PI_2</source>
          <target state="translated">FRAC_PI_2</target>
        </trans-unit>
        <trans-unit id="22e278fb1970a27028037caf41c34dee6e5f7c42" translate="yes" xml:space="preserve">
          <source>FRAC_PI_3</source>
          <target state="translated">FRAC_PI_3</target>
        </trans-unit>
        <trans-unit id="e6b17be70a78fe06e105098e0e4ee099ad3f5080" translate="yes" xml:space="preserve">
          <source>FRAC_PI_4</source>
          <target state="translated">FRAC_PI_4</target>
        </trans-unit>
        <trans-unit id="d3d8ae944016d01d1e199f96bd61ce54950f390e" translate="yes" xml:space="preserve">
          <source>FRAC_PI_6</source>
          <target state="translated">FRAC_PI_6</target>
        </trans-unit>
        <trans-unit id="0de52d1fda4d16632d5fb2ad97ae761dc9c7a143" translate="yes" xml:space="preserve">
          <source>FRAC_PI_8</source>
          <target state="translated">FRAC_PI_8</target>
        </trans-unit>
        <trans-unit id="7dc91a3674464a8b5ea13cab4dcb4989d95397d1" translate="yes" xml:space="preserve">
          <source>Failing that, the returned string slice may reference invalid memory or violate the invariants communicated by the &lt;code&gt;str&lt;/code&gt; type.</source>
          <target state="translated">これに失敗すると、返された文字列スライスが無効なメモリを参照したり、 &lt;code&gt;str&lt;/code&gt; 型によって伝えられた不変条件に違反したりする可能性があります。</target>
        </trans-unit>
        <trans-unit id="59f40a06eb57b6054d241382e155735a3d65877b" translate="yes" xml:space="preserve">
          <source>Failing to parse:</source>
          <target state="translated">解析に失敗しました</target>
        </trans-unit>
        <trans-unit id="1656649117e437fcfba93420c2b3f76dd76878b7" translate="yes" xml:space="preserve">
          <source>Failure</source>
          <target state="translated">Failure</target>
        </trans-unit>
        <trans-unit id="7cbcd570eef4be686a49dc2bc2d0e5442816cd50" translate="yes" xml:space="preserve">
          <source>Failure to call &lt;a href=&quot;#method.from_raw&quot;&gt;&lt;code&gt;from_raw&lt;/code&gt;&lt;/a&gt; will lead to a memory leak.</source>
          <target state="translated">&lt;a href=&quot;#method.from_raw&quot;&gt; &lt;code&gt;from_raw&lt;/code&gt; の&lt;/a&gt;呼び出しに失敗すると、メモリリークが発生します。</target>
        </trans-unit>
        <trans-unit id="63226f57689a39a588b9556e8ae268e590c871c9" translate="yes" xml:space="preserve">
          <source>Failure to call &lt;a href=&quot;struct.cstring#method.from_raw&quot;&gt;&lt;code&gt;CString::from_raw&lt;/code&gt;&lt;/a&gt; will lead to a memory leak.</source>
          <target state="translated">&lt;a href=&quot;struct.cstring#method.from_raw&quot;&gt; &lt;code&gt;CString::from_raw&lt;/code&gt; &lt;/a&gt;呼び出しに失敗すると、メモリリークが発生します。</target>
        </trans-unit>
        <trans-unit id="ef83abf2a1fc75890fc470998be15db9d3f0072b" translate="yes" xml:space="preserve">
          <source>Farsi</source>
          <target state="translated">Farsi</target>
        </trans-unit>
        <trans-unit id="64af9d58fb2be75f9f4f919ce107fc70b472fbec" translate="yes" xml:space="preserve">
          <source>Fat pointers are pointers referencing Dynamically Sized Types (also called DST). DST don't have a statically known size, therefore they can only exist behind some kind of pointers that contain additional information. Slices and trait objects are DSTs. In the case of slices, the additional information the fat pointer holds is their size.</source>
          <target state="translated">Fatポインターは、Dynamically Sized Types (DSTとも呼ばれる)を参照するポインターです。DSTは統計的に知られたサイズを持っていないので、追加情報を含むある種のポインタの後ろにのみ存在することができます。スライスや形質オブジェクトはDSTです。スライスの場合、ファットポインタが保持する追加情報はそのサイズです。</target>
        </trans-unit>
        <trans-unit id="28b58decbe9e8a9fb1763209ba7f2c5ddd1c193d" translate="yes" xml:space="preserve">
          <source>Fat pointers are pointers referencing Dynamically Sized Types (also called DSTs). DSTs don't have a statically known size, therefore they can only exist behind some kind of pointer that contains additional information. For example, slices and trait objects are DSTs. In the case of slices, the additional information the fat pointer holds is their size.</source>
          <target state="translated">ファットポインタは、動的サイズの型(DSTsとも呼ばれる)を参照するポインタです。DSTは統計的に知られているサイズを持っていないので、追加情報を含む何らかのポインタの後ろにのみ存在することができます。例えば、スライスや形質オブジェクトはDSTです。スライスの場合、ファットポインタが保持する追加情報はそのサイズです。</target>
        </trans-unit>
        <trans-unit id="50d55b8c7dec496f1ef87e07f896e26b69229e1b" translate="yes" xml:space="preserve">
          <source>FatArrow</source>
          <target state="translated">FatArrow</target>
        </trans-unit>
        <trans-unit id="7e4287b17a40231f59d61622530e62a29a3443af" translate="yes" xml:space="preserve">
          <source>Fatal logic errors in Rust cause &lt;em&gt;thread panic&lt;/em&gt;, during which a thread will unwind the stack, running destructors and freeing owned resources. While not meant as a 'try/catch' mechanism, panics in Rust can nonetheless be caught (unless compiling with &lt;code&gt;panic=abort&lt;/code&gt;) with &lt;a href=&quot;../panic/fn.catch_unwind&quot;&gt;&lt;code&gt;catch_unwind&lt;/code&gt;&lt;/a&gt; and recovered from, or alternatively be resumed with &lt;a href=&quot;../panic/fn.resume_unwind&quot;&gt;&lt;code&gt;resume_unwind&lt;/code&gt;&lt;/a&gt;. If the panic is not caught the thread will exit, but the panic may optionally be detected from a different thread with &lt;a href=&quot;struct.joinhandle#method.join&quot;&gt;&lt;code&gt;join&lt;/code&gt;&lt;/a&gt;. If the main thread panics without the panic being caught, the application will exit with a non-zero exit code.</source>
          <target state="translated">Rustで致命的な論理エラーが発生すると、&lt;em&gt;スレッドパニックが&lt;/em&gt;発生し&lt;em&gt;ます&lt;/em&gt;。その間、スレッドはスタックを巻き戻し、デストラクタを実行し、所有リソースを解放します。「try / catch」メカニズムとして意図されたものではありませんが、Rustのパニックは、（ &lt;code&gt;panic=abort&lt;/code&gt; でコンパイルしない限り）&lt;a href=&quot;../panic/fn.catch_unwind&quot;&gt; &lt;code&gt;catch_unwind&lt;/code&gt; &lt;/a&gt;でキャッチして回復するか、または&lt;a href=&quot;../panic/fn.resume_unwind&quot;&gt; &lt;code&gt;resume_unwind&lt;/code&gt; &lt;/a&gt;で再開できます。パニックがキャッチされない場合、スレッドは終了しますが、パニックはオプションで、&lt;a href=&quot;struct.joinhandle#method.join&quot;&gt; &lt;code&gt;join&lt;/code&gt; を使用&lt;/a&gt;して別のスレッドから検出される場合があります。メインスレッドがパニックに陥らずにパニックになると、アプリケーションはゼロ以外の終了コードで終了します。</target>
        </trans-unit>
        <trans-unit id="ddbe3169df2a0f74f163681bf351df5db1d13339" translate="yes" xml:space="preserve">
          <source>Fearless Concurrency</source>
          <target state="translated">フィアレスコンカレンシー</target>
        </trans-unit>
        <trans-unit id="ad565d9d01d0e0bf91fd6a8532f6d81613338901" translate="yes" xml:space="preserve">
          <source>Feature</source>
          <target state="translated">Feature</target>
        </trans-unit>
        <trans-unit id="0b807bdc730a4b27845b24638a849382424bab42" translate="yes" xml:space="preserve">
          <source>Feature attributes are only allowed on the nightly release channel. Stable or beta compilers will not comply.</source>
          <target state="translated">機能属性は毎晩のリリースチャンネルでのみ許可されています。安定版やベータ版のコンパイラはこれに従いません。</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Features</target>
        </trans-unit>
        <trans-unit id="e2ff700e32db2c23935e7a4e52cc763c7d881920" translate="yes" xml:space="preserve">
          <source>Feeds a slice of this type into the given &lt;a href=&quot;../../../hash/trait.hasher&quot;&gt;&lt;code&gt;Hasher&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../../../hash/trait.hash#method.hash_slice&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">このタイプのスライスを指定された&lt;a href=&quot;../../../hash/trait.hasher&quot;&gt; &lt;code&gt;Hasher&lt;/code&gt; &lt;/a&gt;フィードします。&lt;a href=&quot;../../../hash/trait.hash#method.hash_slice&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e9283f20f4304ed3eb3ce57ab07963c3a1b777bf" translate="yes" xml:space="preserve">
          <source>Feeds a slice of this type into the given &lt;a href=&quot;../../hash/trait.hasher&quot;&gt;&lt;code&gt;Hasher&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../../hash/trait.hash#method.hash_slice&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">このタイプのスライスを指定された&lt;a href=&quot;../../hash/trait.hasher&quot;&gt; &lt;code&gt;Hasher&lt;/code&gt; &lt;/a&gt;フィードします。&lt;a href=&quot;../../hash/trait.hash#method.hash_slice&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="94e7a00a78ea9d3b1a1df39ebe9775ab03b8b174" translate="yes" xml:space="preserve">
          <source>Feeds a slice of this type into the given &lt;a href=&quot;../hash/trait.hasher&quot;&gt;&lt;code&gt;Hasher&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../hash/trait.hash#method.hash_slice&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">このタイプのスライスを指定された&lt;a href=&quot;../hash/trait.hasher&quot;&gt; &lt;code&gt;Hasher&lt;/code&gt; &lt;/a&gt;フィードします。&lt;a href=&quot;../hash/trait.hash#method.hash_slice&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a3086754a1899641d3271946a0c848c3c20b60f8" translate="yes" xml:space="preserve">
          <source>Feeds a slice of this type into the given &lt;a href=&quot;hash/trait.hasher&quot;&gt;&lt;code&gt;Hasher&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;hash/trait.hash#method.hash_slice&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">このタイプのスライスを指定された&lt;a href=&quot;hash/trait.hasher&quot;&gt; &lt;code&gt;Hasher&lt;/code&gt; &lt;/a&gt;フィードします。&lt;a href=&quot;hash/trait.hash#method.hash_slice&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c777023546e54e748b36703160b53d183118a8bb" translate="yes" xml:space="preserve">
          <source>Feeds a slice of this type into the given &lt;a href=&quot;trait.hasher&quot;&gt;&lt;code&gt;Hasher&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このタイプのスライスを指定された&lt;a href=&quot;trait.hasher&quot;&gt; &lt;code&gt;Hasher&lt;/code&gt; に&lt;/a&gt;フィードします。</target>
        </trans-unit>
        <trans-unit id="ce5e264a52b8a95f0d288d4a511af0782f37de5d" translate="yes" xml:space="preserve">
          <source>Feeds a slice of this type into the given [&lt;code&gt;Hasher&lt;/code&gt;]. &lt;a href=&quot;../../hash/trait.hash#method.hash_slice&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">このタイプのスライスを指定の[ &lt;code&gt;Hasher&lt;/code&gt; ]にフィードします。&lt;a href=&quot;../../hash/trait.hash#method.hash_slice&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b5b2875a97a1836943f337622e3bfe4abf69acb3" translate="yes" xml:space="preserve">
          <source>Feeds a slice of this type into the given [&lt;code&gt;Hasher&lt;/code&gt;]. &lt;a href=&quot;../hash/trait.hash#method.hash_slice&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">このタイプのスライスを指定の[ &lt;code&gt;Hasher&lt;/code&gt; ]にフィードします。&lt;a href=&quot;../hash/trait.hash#method.hash_slice&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9a51782694579b108f11b3021d7eed3af1932ab8" translate="yes" xml:space="preserve">
          <source>Feeds a slice of this type into the given [&lt;code&gt;Hasher&lt;/code&gt;]. &lt;a href=&quot;hash/trait.hash#method.hash_slice&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">このタイプのスライスを指定の[ &lt;code&gt;Hasher&lt;/code&gt; ]にフィードします。&lt;a href=&quot;hash/trait.hash#method.hash_slice&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="166896c1362241dd63605c470b9b90b18452344b" translate="yes" xml:space="preserve">
          <source>Feeds this value into the given &lt;a href=&quot;../../../hash/trait.hasher&quot;&gt;&lt;code&gt;Hasher&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../../../hash/trait.hash#tymethod.hash&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">この値を指定された&lt;a href=&quot;../../../hash/trait.hasher&quot;&gt; &lt;code&gt;Hasher&lt;/code&gt; に&lt;/a&gt;フィードします。&lt;a href=&quot;../../../hash/trait.hash#tymethod.hash&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d6e4eeab3a7b22e0bacc65049fc3dbdd0361b21f" translate="yes" xml:space="preserve">
          <source>Feeds this value into the given &lt;a href=&quot;../../hash/trait.hasher&quot;&gt;&lt;code&gt;Hasher&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../../hash/trait.hash#tymethod.hash&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">この値を指定された&lt;a href=&quot;../../hash/trait.hasher&quot;&gt; &lt;code&gt;Hasher&lt;/code&gt; に&lt;/a&gt;フィードします。&lt;a href=&quot;../../hash/trait.hash#tymethod.hash&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d9336eaa28085928d881d753dbb23a679ec860ef" translate="yes" xml:space="preserve">
          <source>Feeds this value into the given &lt;a href=&quot;../hash/trait.hasher&quot;&gt;&lt;code&gt;Hasher&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../hash/trait.hash#tymethod.hash&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">この値を指定された&lt;a href=&quot;../hash/trait.hasher&quot;&gt; &lt;code&gt;Hasher&lt;/code&gt; に&lt;/a&gt;フィードします。&lt;a href=&quot;../hash/trait.hash#tymethod.hash&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="553b072888e14f6fb589f877d5453630501eeea6" translate="yes" xml:space="preserve">
          <source>Feeds this value into the given &lt;a href=&quot;hash/trait.hasher&quot;&gt;&lt;code&gt;Hasher&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;hash/trait.hash#tymethod.hash&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">この値を指定された&lt;a href=&quot;hash/trait.hasher&quot;&gt; &lt;code&gt;Hasher&lt;/code&gt; に&lt;/a&gt;フィードします。&lt;a href=&quot;hash/trait.hash#tymethod.hash&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="712dd6a1f0b25bc76164e57bc7b7ed06b793d8d1" translate="yes" xml:space="preserve">
          <source>Feeds this value into the given &lt;a href=&quot;trait.hasher&quot;&gt;&lt;code&gt;Hasher&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この値を指定された&lt;a href=&quot;trait.hasher&quot;&gt; &lt;code&gt;Hasher&lt;/code&gt; に&lt;/a&gt;フィードします。</target>
        </trans-unit>
        <trans-unit id="528dc4ba180b5e0fdf3a460356136d0d4538452c" translate="yes" xml:space="preserve">
          <source>Feeds this value into the given [&lt;code&gt;Hasher&lt;/code&gt;]. &lt;a href=&quot;../../hash/trait.hash#tymethod.hash&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">この値を指定された[ &lt;code&gt;Hasher&lt;/code&gt; ]にフィードします。&lt;a href=&quot;../../hash/trait.hash#tymethod.hash&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6a7253be47a5e33a8974cf031ca870cdd79ea7e2" translate="yes" xml:space="preserve">
          <source>Feeds this value into the given [&lt;code&gt;Hasher&lt;/code&gt;]. &lt;a href=&quot;../hash/trait.hash#tymethod.hash&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">この値を指定された[ &lt;code&gt;Hasher&lt;/code&gt; ]にフィードします。&lt;a href=&quot;../hash/trait.hash#tymethod.hash&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b8b797a2e1e90add5c3065eedd796f7422be504b" translate="yes" xml:space="preserve">
          <source>Feeds this value into the given [&lt;code&gt;Hasher&lt;/code&gt;]. &lt;a href=&quot;hash/trait.hash#tymethod.hash&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">この値を指定された[ &lt;code&gt;Hasher&lt;/code&gt; ]にフィードします。&lt;a href=&quot;hash/trait.hash#tymethod.hash&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="20c6342d5558b78fbfcaebca035cf96cfc09fd61" translate="yes" xml:space="preserve">
          <source>Ferris</source>
          <target state="translated">Ferris</target>
        </trans-unit>
        <trans-unit id="4e97b12e606426cf2a177817b263cd257d8395c3" translate="yes" xml:space="preserve">
          <source>Fetch a &lt;code&gt;Utf8Error&lt;/code&gt; to get more details about the conversion failure.</source>
          <target state="translated">&lt;code&gt;Utf8Error&lt;/code&gt; をフェッチして、変換の失敗に関する詳細を取得します。</target>
        </trans-unit>
        <trans-unit id="aed2f625af6f4e5c53c8ff520b59a87ae9f84782" translate="yes" xml:space="preserve">
          <source>Fetches the environment variable &lt;code&gt;key&lt;/code&gt; from the current process, returning &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if the variable isn't set.</source>
          <target state="translated">現在のプロセスから環境変数 &lt;code&gt;key&lt;/code&gt; 取得し、変数が設定されていない場合は&lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="b340540df67cdd46ed6d6149644b82642c536a79" translate="yes" xml:space="preserve">
          <source>Fetches the environment variable &lt;code&gt;key&lt;/code&gt; from the current process.</source>
          <target state="translated">現在のプロセスから環境変数 &lt;code&gt;key&lt;/code&gt; 取得します。</target>
        </trans-unit>
        <trans-unit id="6f772ad7b037ef600e878b61e303f6b7de4e1cd5" translate="yes" xml:space="preserve">
          <source>Fetches the value, and applies a function to it that returns an optional new value. Returns a &lt;code&gt;Result&lt;/code&gt; of &lt;code&gt;Ok(previous_value)&lt;/code&gt; if the function returned &lt;code&gt;Some(_)&lt;/code&gt;, else &lt;code&gt;Err(previous_value)&lt;/code&gt;.</source>
          <target state="translated">値をフェッチし、オプションの新しい値を返す関数を適用します。返し &lt;code&gt;Result&lt;/code&gt; の &lt;code&gt;Ok(previous_value)&lt;/code&gt; 関数が返された場合は &lt;code&gt;Some(_)&lt;/code&gt; 、それ以外 &lt;code&gt;Err(previous_value)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="026307a2e2b198a7b11b4e487771b106a1c55079" translate="yes" xml:space="preserve">
          <source>Field access expressions</source>
          <target state="translated">フィールドアクセス式</target>
        </trans-unit>
        <trans-unit id="c65fecfa2a096796cbc5310420806ac4c241ef80" translate="yes" xml:space="preserve">
          <source>Field accesses on structs and tuples</source>
          <target state="translated">構造体とタプルのフィールドアクセス</target>
        </trans-unit>
        <trans-unit id="caa8c98ec1d007ced9fbda047a0a1b901d77e628" translate="yes" xml:space="preserve">
          <source>Field expressions</source>
          <target state="translated">フィールド表現</target>
        </trans-unit>
        <trans-unit id="deb6e7b9bef56dbdb9c8601b67588b2bb8dc955b" translate="yes" xml:space="preserve">
          <source>Field struct expression</source>
          <target state="translated">フィールド構造式</target>
        </trans-unit>
        <trans-unit id="e8b685271238adf161cffed3c91f54d97023262b" translate="yes" xml:space="preserve">
          <source>Fields</source>
          <target state="translated">Fields</target>
        </trans-unit>
        <trans-unit id="9cce6e78930a15ffa1e05f69626dac54cef653ea" translate="yes" xml:space="preserve">
          <source>Fields and &lt;a href=&quot;items/enumerations&quot;&gt;variants&lt;/a&gt;</source>
          <target state="translated">フィールドと&lt;a href=&quot;items/enumerations&quot;&gt;バリアント&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7956ab54859c452d96d688d0d038ef94e8d937db" translate="yes" xml:space="preserve">
          <source>Fields of &lt;b&gt;AllocError&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;AllocErrorの&lt;/b&gt;フィールド&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="7163134c5e86c152355184748d0ab40051b2a1f6" translate="yes" xml:space="preserve">
          <source>Fields of &lt;b&gt;Unknown&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3ca41b484fb0424fdf0e477fab4e7d183fa2eac" translate="yes" xml:space="preserve">
          <source>Fields without structural pinning may have a projection method that turns &lt;a href=&quot;struct.pin&quot;&gt;&lt;code&gt;Pin&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&amp;amp;mut Struct&amp;gt;&lt;/code&gt; into &lt;code&gt;&amp;amp;mut Field&lt;/code&gt;:</source>
          <target state="translated">構造体のピン留めのないフィールドには、&lt;a href=&quot;struct.pin&quot;&gt; &lt;code&gt;Pin&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&amp;amp;mut Struct&amp;gt;&lt;/code&gt; を &lt;code&gt;&amp;amp;mut Field&lt;/code&gt; 変換する投影方法がある場合があります。</target>
        </trans-unit>
        <trans-unit id="3334577210e32a2009e2aeab4e368b539dfe28a0" translate="yes" xml:space="preserve">
          <source>Fields without structural pinning may have a projection method that turns &lt;code&gt;Pin&amp;lt;&amp;amp;mut Struct&amp;gt;&lt;/code&gt; into &lt;code&gt;&amp;amp;mut Field&lt;/code&gt;:</source>
          <target state="translated">構造的な固定のないフィールドには、 &lt;code&gt;Pin&amp;lt;&amp;amp;mut Struct&amp;gt;&lt;/code&gt; を &lt;code&gt;&amp;amp;mut Field&lt;/code&gt; に変換するプロジェクションメソッドがある場合があります。</target>
        </trans-unit>
        <trans-unit id="f9b5c22ad800082c7a5957c226059bbfcb18e083" translate="yes" xml:space="preserve">
          <source>Figure 14-1: HTML documentation for the &lt;code&gt;add_one&lt;/code&gt; function</source>
          <target state="translated">図14-1： &lt;code&gt;add_one&lt;/code&gt; 関数のHTMLドキュメント</target>
        </trans-unit>
        <trans-unit id="47215be469a189ca970f4bde70948486d8efef2a" translate="yes" xml:space="preserve">
          <source>Figure 14-2: Rendered documentation for &lt;code&gt;my_crate&lt;/code&gt;, including the comment describing the crate as a whole</source>
          <target state="translated">図14-2：全体としてクレートを説明するコメントを含む、 &lt;code&gt;my_crate&lt;/code&gt; のレンダリングされたドキュメント</target>
        </trans-unit>
        <trans-unit id="9d23324502a10649bdfd0211dc814e9d6f80f334" translate="yes" xml:space="preserve">
          <source>Figure 14-3 shows what the front page of the documentation for this crate generated by &lt;code&gt;cargo doc&lt;/code&gt; would look like:</source>
          <target state="translated">図14-3は、 &lt;code&gt;cargo doc&lt;/code&gt; によって生成されたこのクレートのドキュメントのフロントページがどのようになるかを示しています。</target>
        </trans-unit>
        <trans-unit id="6cbdc555f4e8275dbf75958fe807fbcf1bd028c3" translate="yes" xml:space="preserve">
          <source>Figure 14-3: Front page of the documentation for &lt;code&gt;art&lt;/code&gt; that lists the &lt;code&gt;kinds&lt;/code&gt; and &lt;code&gt;utils&lt;/code&gt; modules</source>
          <target state="translated">図14-3：のドキュメントのフロントページ &lt;code&gt;art&lt;/code&gt; リストその &lt;code&gt;kinds&lt;/code&gt; と &lt;code&gt;utils&lt;/code&gt; のモジュール</target>
        </trans-unit>
        <trans-unit id="c9d76b1e9908cad97786dd3a47ce45581971b401" translate="yes" xml:space="preserve">
          <source>Figure 14-4: The front page of the documentation for &lt;code&gt;art&lt;/code&gt; that lists the re-exports</source>
          <target state="translated">図14-4：再エクスポートをリストする &lt;code&gt;art&lt;/code&gt; のドキュメントのフロントページ</target>
        </trans-unit>
        <trans-unit id="6a60f2bc2c0b4fba0e9c2110209113455ada6763" translate="yes" xml:space="preserve">
          <source>Figure 15-1: An infinite &lt;code&gt;List&lt;/code&gt; consisting of infinite &lt;code&gt;Cons&lt;/code&gt; variants</source>
          <target state="translated">図15-1：無限の &lt;code&gt;Cons&lt;/code&gt; バリアントで構成される無限 &lt;code&gt;List&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7ceebef5638620d07e5bc17ec9f5c0097945b32b" translate="yes" xml:space="preserve">
          <source>Figure 15-2: A &lt;code&gt;List&lt;/code&gt; that is not infinitely sized because &lt;code&gt;Cons&lt;/code&gt; holds a &lt;code&gt;Box&lt;/code&gt;</source>
          <target state="translated">図15-2： &lt;code&gt;Cons&lt;/code&gt; が &lt;code&gt;Box&lt;/code&gt; 保持するためにサイズが無限ではない &lt;code&gt;List&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3979138bda43e17af7993681a6c9de25829d6b5c" translate="yes" xml:space="preserve">
          <source>Figure 15-3: Two lists, &lt;code&gt;b&lt;/code&gt; and &lt;code&gt;c&lt;/code&gt;, sharing ownership of a third list, &lt;code&gt;a&lt;/code&gt;</source>
          <target state="translated">図15-3：2つのリスト、 &lt;code&gt;b&lt;/code&gt; 及び &lt;code&gt;c&lt;/code&gt; 、第3のリストの所有権を共有し、 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9749a310dbf65124d6b52c446cbeadf16aca2868" translate="yes" xml:space="preserve">
          <source>Figure 15-4: A reference cycle of lists &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; pointing to each other</source>
          <target state="translated">図15-4：リスト &lt;code&gt;a&lt;/code&gt; と &lt;code&gt;b&lt;/code&gt; が互いに指す参照サイクル</target>
        </trans-unit>
        <trans-unit id="d911acbcc012bd6ae8a8d34419e851de3d989743" translate="yes" xml:space="preserve">
          <source>Figure 20-1: Our final shared project</source>
          <target state="translated">図 20-1:最終的な共有プロジェクト</target>
        </trans-unit>
        <trans-unit id="94348a85e2baa754a6c88b9f15b8f20ecff6ca6a" translate="yes" xml:space="preserve">
          <source>Figure 4-1: Representation in memory of a &lt;code&gt;String&lt;/code&gt; holding the value &lt;code&gt;&quot;hello&quot;&lt;/code&gt; bound to &lt;code&gt;s1&lt;/code&gt;</source>
          <target state="translated">図4-1： &lt;code&gt;s1&lt;/code&gt; にバインドされた値 &lt;code&gt;&quot;hello&quot;&lt;/code&gt; 保持する &lt;code&gt;String&lt;/code&gt; メモリでの表現</target>
        </trans-unit>
        <trans-unit id="6d60241f03ce61fbfde9bb38dff136b2ebc9f438" translate="yes" xml:space="preserve">
          <source>Figure 4-2: Representation in memory of the variable &lt;code&gt;s2&lt;/code&gt; that has a copy of the pointer, length, and capacity of &lt;code&gt;s1&lt;/code&gt;</source>
          <target state="translated">図4-2： &lt;code&gt;s1&lt;/code&gt; のポインター、長さ、および容量のコピーを持つ変数 &lt;code&gt;s2&lt;/code&gt; のメモリでの表現</target>
        </trans-unit>
        <trans-unit id="6b4c9fe8ce2ac2fe08f18ef7384d2f5e33c8f6dd" translate="yes" xml:space="preserve">
          <source>Figure 4-3: Another possibility for what &lt;code&gt;s2 = s1&lt;/code&gt; might do if Rust copied the heap data as well</source>
          <target state="translated">図4-3：Rustがヒープデータもコピーした場合の &lt;code&gt;s2 = s1&lt;/code&gt; 可能性の別の可能性</target>
        </trans-unit>
        <trans-unit id="3ee3bdd573f51164612a3321eeda173f6e011080" translate="yes" xml:space="preserve">
          <source>Figure 4-4: Representation in memory after &lt;code&gt;s1&lt;/code&gt; has been invalidated</source>
          <target state="translated">図4-4： &lt;code&gt;s1&lt;/code&gt; が無効化された後のメモリ内の表現</target>
        </trans-unit>
        <trans-unit id="40e2720f5df50422ab02b09a5a1f6311c2356514" translate="yes" xml:space="preserve">
          <source>Figure 4-5: A diagram of &lt;code&gt;&amp;amp;String s&lt;/code&gt; pointing at &lt;code&gt;String s1&lt;/code&gt;</source>
          <target state="translated">図4-5： &lt;code&gt;String s1&lt;/code&gt; 指す &lt;code&gt;&amp;amp;String s&lt;/code&gt; 図</target>
        </trans-unit>
        <trans-unit id="362f8cc9378a25ae691e8ceef6aac1b07a01360f" translate="yes" xml:space="preserve">
          <source>Figure 4-6 shows this in a diagram.</source>
          <target state="translated">これを図4-6に示す。</target>
        </trans-unit>
        <trans-unit id="64753bfc974befeeb207db9ae8164a90b743dadb" translate="yes" xml:space="preserve">
          <source>Figure 4-6: String slice referring to part of a &lt;code&gt;String&lt;/code&gt;</source>
          <target state="translated">図4-6：文字列スライスの一部を参照する &lt;code&gt;String&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2c3cafa4db3f3e1e51b3dff4303502dbe42b7a89" translate="yes" xml:space="preserve">
          <source>File</source>
          <target state="translated">File</target>
        </trans-unit>
        <trans-unit id="71586db00903f9292b2b685a2888975f06820d67" translate="yes" xml:space="preserve">
          <source>File 'main.rs':</source>
          <target state="translated">ファイル 'main.rs'。</target>
        </trans-unit>
        <trans-unit id="f189168706980cccdcec9897ca166a464ad0c3c5" translate="yes" xml:space="preserve">
          <source>File 'monkeys.in':</source>
          <target state="translated">ファイル「monkeys.in」。</target>
        </trans-unit>
        <trans-unit id="64ae82ace4169c576e88c6922bb42eb840728222" translate="yes" xml:space="preserve">
          <source>File 'spanish.in':</source>
          <target state="translated">ファイル「spanish.in」。</target>
        </trans-unit>
        <trans-unit id="5f69c18fff67e9bb3de98093917fcea8886d0491" translate="yes" xml:space="preserve">
          <source>File Contents</source>
          <target state="translated">ファイルの内容</target>
        </trans-unit>
        <trans-unit id="3a8ce65b275014da9366a333c528cc11a27603ad" translate="yes" xml:space="preserve">
          <source>File::as_raw_fd</source>
          <target state="translated">File::as_raw_fd</target>
        </trans-unit>
        <trans-unit id="3d449c38270541419bb0081c528587aba3397218" translate="yes" xml:space="preserve">
          <source>File::as_raw_handle</source>
          <target state="translated">File::as_raw_handle</target>
        </trans-unit>
        <trans-unit id="2056fccad8d9b2001409dacfc6cf02024cffb307" translate="yes" xml:space="preserve">
          <source>File::borrow</source>
          <target state="translated">File::borrow</target>
        </trans-unit>
        <trans-unit id="c5830e06e8a92a0fd9c3e097ccddd2b690bdc088" translate="yes" xml:space="preserve">
          <source>File::borrow_mut</source>
          <target state="translated">File::borrow_mut</target>
        </trans-unit>
        <trans-unit id="d65814ca1f8b90061da3e18a4bc24397f086a9fe" translate="yes" xml:space="preserve">
          <source>File::by_ref</source>
          <target state="translated">File::by_ref</target>
        </trans-unit>
        <trans-unit id="773cd8a79ad9c419222201aaf0bf0218f2c7accf" translate="yes" xml:space="preserve">
          <source>File::bytes</source>
          <target state="translated">File::bytes</target>
        </trans-unit>
        <trans-unit id="a0f3595139353ee753bcd2ff03a5fc64e77911ae" translate="yes" xml:space="preserve">
          <source>File::chain</source>
          <target state="translated">File::chain</target>
        </trans-unit>
        <trans-unit id="95e8cd86390d00f3896c2230ccdd160c9bc23025" translate="yes" xml:space="preserve">
          <source>File::create</source>
          <target state="translated">File::create</target>
        </trans-unit>
        <trans-unit id="54ca8ca0fc241592a42be655c6d268820df9355f" translate="yes" xml:space="preserve">
          <source>File::flush</source>
          <target state="translated">File::flush</target>
        </trans-unit>
        <trans-unit id="e01a168a8912a7cc5799bfb1c398439aec9f4ed1" translate="yes" xml:space="preserve">
          <source>File::fmt</source>
          <target state="translated">File::fmt</target>
        </trans-unit>
        <trans-unit id="462aa700e0b01fb5561cb0c83a065ba37dc301cd" translate="yes" xml:space="preserve">
          <source>File::from</source>
          <target state="translated">File::from</target>
        </trans-unit>
        <trans-unit id="70291bc5b9877c92db3ab4265d45317b2b617c36" translate="yes" xml:space="preserve">
          <source>File::from_raw_fd</source>
          <target state="translated">File::from_raw_fd</target>
        </trans-unit>
        <trans-unit id="0fbc45812981a1ce2ce84aee914f58e3a41e23c0" translate="yes" xml:space="preserve">
          <source>File::from_raw_handle</source>
          <target state="translated">File::from_raw_handle</target>
        </trans-unit>
        <trans-unit id="1e1628b4f36ad5c24d1f52ec7885156a03c69cbc" translate="yes" xml:space="preserve">
          <source>File::initializer</source>
          <target state="translated">File::initializer</target>
        </trans-unit>
        <trans-unit id="4980cc2e25a5cf505b6373948c23c2147c3a35ab" translate="yes" xml:space="preserve">
          <source>File::into</source>
          <target state="translated">File::into</target>
        </trans-unit>
        <trans-unit id="c078e8bb3863ea50046b3ae960bde55336bec78f" translate="yes" xml:space="preserve">
          <source>File::into_raw_fd</source>
          <target state="translated">File::into_raw_fd</target>
        </trans-unit>
        <trans-unit id="6528c63ba1553592afcf8e7bc775ae0f3c8bed47" translate="yes" xml:space="preserve">
          <source>File::into_raw_handle</source>
          <target state="translated">File::into_raw_handle</target>
        </trans-unit>
        <trans-unit id="68e2be694ec5d58cce4c91be7471cd46c71bebcf" translate="yes" xml:space="preserve">
          <source>File::metadata</source>
          <target state="translated">File::metadata</target>
        </trans-unit>
        <trans-unit id="97bcf3457432f7eaa769c60bfb1da6e5b2780916" translate="yes" xml:space="preserve">
          <source>File::open</source>
          <target state="translated">File::open</target>
        </trans-unit>
        <trans-unit id="f871edcbffd3f22d5da646d84c3dcfcd912271d1" translate="yes" xml:space="preserve">
          <source>File::read</source>
          <target state="translated">File::read</target>
        </trans-unit>
        <trans-unit id="a645722c97df48da34622d9796c05e2576e3949e" translate="yes" xml:space="preserve">
          <source>File::read_at</source>
          <target state="translated">File::read_at</target>
        </trans-unit>
        <trans-unit id="ba13bba4025a75bb86d9ef57bbcadf6dcfeba9ee" translate="yes" xml:space="preserve">
          <source>File::read_exact</source>
          <target state="translated">File::read_exact</target>
        </trans-unit>
        <trans-unit id="f847ce48410e6c56a723a0a7624fc3229f0b997d" translate="yes" xml:space="preserve">
          <source>File::read_exact_at</source>
          <target state="translated">File::read_exact_at</target>
        </trans-unit>
        <trans-unit id="d22500382a9c0cd111fa13ebe7d3d2e5c87ce67d" translate="yes" xml:space="preserve">
          <source>File::read_to_end</source>
          <target state="translated">File::read_to_end</target>
        </trans-unit>
        <trans-unit id="eb02a5b72eeb117477f8d7c6607e258e1005512b" translate="yes" xml:space="preserve">
          <source>File::read_to_string</source>
          <target state="translated">File::read_to_string</target>
        </trans-unit>
        <trans-unit id="cbfa0a4bdbeaaeef6f070f890e816cbe54330552" translate="yes" xml:space="preserve">
          <source>File::read_vectored</source>
          <target state="translated">File::read_vectored</target>
        </trans-unit>
        <trans-unit id="f8f3a35a864cf614552d87389a77af39b10a4fdc" translate="yes" xml:space="preserve">
          <source>File::seek</source>
          <target state="translated">File::seek</target>
        </trans-unit>
        <trans-unit id="04234ec7d9e227d6b902291ecda0b26743335f10" translate="yes" xml:space="preserve">
          <source>File::seek_read</source>
          <target state="translated">File::seek_read</target>
        </trans-unit>
        <trans-unit id="9b3226909081e77cc3da58c19157a3a7f35c0e54" translate="yes" xml:space="preserve">
          <source>File::seek_write</source>
          <target state="translated">File::seek_write</target>
        </trans-unit>
        <trans-unit id="176345e9fefce2a35bb8ca66cb1a1bc24e2975ef" translate="yes" xml:space="preserve">
          <source>File::set_len</source>
          <target state="translated">File::set_len</target>
        </trans-unit>
        <trans-unit id="9c04a0373a283e053cc19271b282da528b3c5f40" translate="yes" xml:space="preserve">
          <source>File::set_permissions</source>
          <target state="translated">File::set_permissions</target>
        </trans-unit>
        <trans-unit id="33cb7aebce418bea76661c32675dbfc4ba91da35" translate="yes" xml:space="preserve">
          <source>File::stream_len</source>
          <target state="translated">File::stream_len</target>
        </trans-unit>
        <trans-unit id="4e28fcaafba833a3d432094b16feb7b889799db7" translate="yes" xml:space="preserve">
          <source>File::stream_position</source>
          <target state="translated">File::stream_position</target>
        </trans-unit>
        <trans-unit id="64b1d6dad78834024e7e0e9efe098ba606d995db" translate="yes" xml:space="preserve">
          <source>File::sync_all</source>
          <target state="translated">File::sync_all</target>
        </trans-unit>
        <trans-unit id="e709350c4bb12a169bd7cc6ec460be2e12353b3a" translate="yes" xml:space="preserve">
          <source>File::sync_data</source>
          <target state="translated">File::sync_data</target>
        </trans-unit>
        <trans-unit id="a8fb7874744d19f9cbaacb8302104416299da469" translate="yes" xml:space="preserve">
          <source>File::take</source>
          <target state="translated">File::take</target>
        </trans-unit>
        <trans-unit id="834539604b9138ec19d39db9187ec1234190ba52" translate="yes" xml:space="preserve">
          <source>File::try_clone</source>
          <target state="translated">File::try_clone</target>
        </trans-unit>
        <trans-unit id="51ee322f66b2862e4ae82ee32794015cf227438c" translate="yes" xml:space="preserve">
          <source>File::try_from</source>
          <target state="translated">File::try_from</target>
        </trans-unit>
        <trans-unit id="5a6f3e363dc60b9c57befeee82045b9cfe478aeb" translate="yes" xml:space="preserve">
          <source>File::try_into</source>
          <target state="translated">File::try_into</target>
        </trans-unit>
        <trans-unit id="8736e53b16ffd23f947d8208f6dbbb524a31eea9" translate="yes" xml:space="preserve">
          <source>File::type_id</source>
          <target state="translated">File::type_id</target>
        </trans-unit>
        <trans-unit id="542b4a5df3e669a9980dda08577e7f13b255e2f1" translate="yes" xml:space="preserve">
          <source>File::write</source>
          <target state="translated">File::write</target>
        </trans-unit>
        <trans-unit id="9142df1de524fe95cbc714c918278848b708bd2d" translate="yes" xml:space="preserve">
          <source>File::write_all</source>
          <target state="translated">File::write_all</target>
        </trans-unit>
        <trans-unit id="44e2a43a786d888ec9d0f0e51986a7811f73a422" translate="yes" xml:space="preserve">
          <source>File::write_all_at</source>
          <target state="translated">File::write_all_at</target>
        </trans-unit>
        <trans-unit id="54384dddf08125669e0c4d1cdbd9b1b83db9d608" translate="yes" xml:space="preserve">
          <source>File::write_at</source>
          <target state="translated">File::write_at</target>
        </trans-unit>
        <trans-unit id="9fa986c60627d48b6e3d5772525cc8a9825efd1a" translate="yes" xml:space="preserve">
          <source>File::write_fmt</source>
          <target state="translated">File::write_fmt</target>
        </trans-unit>
        <trans-unit id="7ce04c077eea4442a92bc0af3afbd94829db0fb5" translate="yes" xml:space="preserve">
          <source>File::write_vectored</source>
          <target state="translated">File::write_vectored</target>
        </trans-unit>
        <trans-unit id="78b5a47a53fa4fa99be68dceb6634fc119d54a3f" translate="yes" xml:space="preserve">
          <source>FileExt</source>
          <target state="translated">FileExt</target>
        </trans-unit>
        <trans-unit id="1baa34e6560f1522cca6ce9d9df461092e8ec59b" translate="yes" xml:space="preserve">
          <source>FileType</source>
          <target state="translated">FileType</target>
        </trans-unit>
        <trans-unit id="0a5f31a5f7fa3700db102d4fc6aa5b19c0ebb2d7" translate="yes" xml:space="preserve">
          <source>FileType::borrow</source>
          <target state="translated">FileType::borrow</target>
        </trans-unit>
        <trans-unit id="2562b8c22c9447e2362ce675adc3f4ddeac34448" translate="yes" xml:space="preserve">
          <source>FileType::borrow_mut</source>
          <target state="translated">FileType::borrow_mut</target>
        </trans-unit>
        <trans-unit id="fe2bbc6cec2535dadcf4d56c61f7d1e8ecc65cf5" translate="yes" xml:space="preserve">
          <source>FileType::clone</source>
          <target state="translated">FileType::clone</target>
        </trans-unit>
        <trans-unit id="89c6ed45341ac2e4f56d80de606e3a25cc033a21" translate="yes" xml:space="preserve">
          <source>FileType::clone_from</source>
          <target state="translated">FileType::clone_from</target>
        </trans-unit>
        <trans-unit id="37889d4ad9d83c99f2e5f40ede3353cf703d878b" translate="yes" xml:space="preserve">
          <source>FileType::clone_into</source>
          <target state="translated">FileType::clone_into</target>
        </trans-unit>
        <trans-unit id="6db90bf5c72f0b1ae6fffb6b3290d61092ba6e4c" translate="yes" xml:space="preserve">
          <source>FileType::eq</source>
          <target state="translated">FileType::eq</target>
        </trans-unit>
        <trans-unit id="88e6100ee83e3e063affc8bd1d38b8abbe750f90" translate="yes" xml:space="preserve">
          <source>FileType::fmt</source>
          <target state="translated">FileType::fmt</target>
        </trans-unit>
        <trans-unit id="4c24140c0d7c4231c1c1f84a69f75acd5abee26c" translate="yes" xml:space="preserve">
          <source>FileType::from</source>
          <target state="translated">FileType::from</target>
        </trans-unit>
        <trans-unit id="d27aebc50548197adbf3d79440d218e68ac191db" translate="yes" xml:space="preserve">
          <source>FileType::hash</source>
          <target state="translated">FileType::hash</target>
        </trans-unit>
        <trans-unit id="b3e96c343c991ffee71bdd440a5ee51a29ba889b" translate="yes" xml:space="preserve">
          <source>FileType::hash_slice</source>
          <target state="translated">FileType::hash_slice</target>
        </trans-unit>
        <trans-unit id="b1da059fdf3ae975b1ff2ecd9a45dc8ee7d9f6f0" translate="yes" xml:space="preserve">
          <source>FileType::into</source>
          <target state="translated">FileType::into</target>
        </trans-unit>
        <trans-unit id="a480026f947841bd5dfd2bee65d966da23be2c07" translate="yes" xml:space="preserve">
          <source>FileType::is_block_device</source>
          <target state="translated">FileType::is_block_device</target>
        </trans-unit>
        <trans-unit id="929ec805338d0df6f5cce8afbf2a4a027cd1760c" translate="yes" xml:space="preserve">
          <source>FileType::is_char_device</source>
          <target state="translated">FileType::is_char_device</target>
        </trans-unit>
        <trans-unit id="da96f9ff8310fbe6949063c55fb9b0080bb1235b" translate="yes" xml:space="preserve">
          <source>FileType::is_dir</source>
          <target state="translated">FileType::is_dir</target>
        </trans-unit>
        <trans-unit id="a6d81d0cd16f71094838b204a36990745cb29023" translate="yes" xml:space="preserve">
          <source>FileType::is_fifo</source>
          <target state="translated">FileType::is_fifo</target>
        </trans-unit>
        <trans-unit id="2af1f0a4636078633359db0f3181940d1c2a204b" translate="yes" xml:space="preserve">
          <source>FileType::is_file</source>
          <target state="translated">FileType::is_file</target>
        </trans-unit>
        <trans-unit id="3c1333f1991bced2e5ce2d74904700f65938202d" translate="yes" xml:space="preserve">
          <source>FileType::is_socket</source>
          <target state="translated">FileType::is_socket</target>
        </trans-unit>
        <trans-unit id="60df6415a8b30206c092cfe0fbae9032ba5e2cd1" translate="yes" xml:space="preserve">
          <source>FileType::is_symlink</source>
          <target state="translated">FileType::is_symlink</target>
        </trans-unit>
        <trans-unit id="4e343fd9143441200113a8f67932edca6bc93b9f" translate="yes" xml:space="preserve">
          <source>FileType::is_symlink_dir</source>
          <target state="translated">FileType::is_symlink_dir</target>
        </trans-unit>
        <trans-unit id="c9ad14b62a571a2536098caeee8ea7b916e53728" translate="yes" xml:space="preserve">
          <source>FileType::is_symlink_file</source>
          <target state="translated">FileType::is_symlink_file</target>
        </trans-unit>
        <trans-unit id="a7096bc6ac2d873191e604408d3cd0131982214d" translate="yes" xml:space="preserve">
          <source>FileType::ne</source>
          <target state="translated">FileType::ne</target>
        </trans-unit>
        <trans-unit id="1f1334a629b5790555cc45dc52576d862e1b09bf" translate="yes" xml:space="preserve">
          <source>FileType::to_owned</source>
          <target state="translated">FileType::to_owned</target>
        </trans-unit>
        <trans-unit id="4e9fe33eecd6adda90387c8f66e59fffd6597a45" translate="yes" xml:space="preserve">
          <source>FileType::try_from</source>
          <target state="translated">FileType::try_from</target>
        </trans-unit>
        <trans-unit id="aee4d692b20b4419f3509460ce95c21892a13f39" translate="yes" xml:space="preserve">
          <source>FileType::try_into</source>
          <target state="translated">FileType::try_into</target>
        </trans-unit>
        <trans-unit id="5ff5f887e7b3e8aff555d49306612e357675c9bd" translate="yes" xml:space="preserve">
          <source>FileType::type_id</source>
          <target state="translated">FileType::type_id</target>
        </trans-unit>
        <trans-unit id="929cc186c19be1918402ad5662ea29c9cc865b4b" translate="yes" xml:space="preserve">
          <source>FileTypeExt</source>
          <target state="translated">FileTypeExt</target>
        </trans-unit>
        <trans-unit id="3972652ca488790a15415879855d53ac012c75d8" translate="yes" xml:space="preserve">
          <source>Filename: 404.html</source>
          <target state="translated">ファイル名:404.html</target>
        </trans-unit>
        <trans-unit id="187ac0475d2c3726c770569bbd34586a2bc90a27" translate="yes" xml:space="preserve">
          <source>Filename: Cargo.toml</source>
          <target state="translated">ファイル名:Cargo.toml</target>
        </trans-unit>
        <trans-unit id="e98cdddb1ee8e7c4da95cb3ab4be1e783886b76c" translate="yes" xml:space="preserve">
          <source>Filename: add-one/Cargo.toml</source>
          <target state="translated">ファイル名:add-one/Cargo.toml</target>
        </trans-unit>
        <trans-unit id="8b0ea8f4a250a566178380bcc9a555524c06a32d" translate="yes" xml:space="preserve">
          <source>Filename: add-one/src/lib.rs</source>
          <target state="translated">ファイル名:add-one/src/lib.rs</target>
        </trans-unit>
        <trans-unit id="ab8fe577535c87d7dd689486f1d41a8080c2f271" translate="yes" xml:space="preserve">
          <source>Filename: adder/Cargo.toml</source>
          <target state="translated">ファイル名:adder/Cargo.toml</target>
        </trans-unit>
        <trans-unit id="a90b8a2a0f924bd6227af083f347aa7353d3f031" translate="yes" xml:space="preserve">
          <source>Filename: adder/src/main.rs</source>
          <target state="translated">ファイル名:adder/src/main.rs</target>
        </trans-unit>
        <trans-unit id="55f9db44bd21ac460147a956ffca8a2b4cb94f18" translate="yes" xml:space="preserve">
          <source>Filename: hello.html</source>
          <target state="translated">ファイル名:hello.html</target>
        </trans-unit>
        <trans-unit id="5c1a8e7babcba6042bc1a6786f94a4f521498fff" translate="yes" xml:space="preserve">
          <source>Filename: hello_macro_derive/Cargo.toml</source>
          <target state="translated">ファイル名:hello_macro_derive/Cargo.toml</target>
        </trans-unit>
        <trans-unit id="0c53901dfc6059b090347760f0e4570d0a6ea6b4" translate="yes" xml:space="preserve">
          <source>Filename: hello_macro_derive/src/lib.rs</source>
          <target state="translated">ファイル名:hello_macro_derive/src/lib.rs</target>
        </trans-unit>
        <trans-unit id="c085a35a49926c12b0b2f35a9d7e21e1f29ddfad" translate="yes" xml:space="preserve">
          <source>Filename: main.rs</source>
          <target state="translated">ファイル名:main.rs</target>
        </trans-unit>
        <trans-unit id="81f5927534928d025112f0d5ae4d73cccfd04baa" translate="yes" xml:space="preserve">
          <source>Filename: output.txt</source>
          <target state="translated">ファイル名:output.txt</target>
        </trans-unit>
        <trans-unit id="6360f8e91fa7b0fef745323be28824d312222104" translate="yes" xml:space="preserve">
          <source>Filename: poem.txt</source>
          <target state="translated">ファイル名:poem.txt</target>
        </trans-unit>
        <trans-unit id="0fdd7d7934ab894a3047c2245042589e94e3f26b" translate="yes" xml:space="preserve">
          <source>Filename: src/bin/main.rs</source>
          <target state="translated">ファイル名:src/bin/main.rs</target>
        </trans-unit>
        <trans-unit id="8e86c775b0151ad294556754d9d32d0a378d89a2" translate="yes" xml:space="preserve">
          <source>Filename: src/front_of_house.rs</source>
          <target state="translated">ファイル名:src/front_of_house.rs</target>
        </trans-unit>
        <trans-unit id="e47929b5d2ede0dcd00ecfe8380b419d77496276" translate="yes" xml:space="preserve">
          <source>Filename: src/front_of_house/hosting.rs</source>
          <target state="translated">ファイル名:src/front_of_house/hosting.rs</target>
        </trans-unit>
        <trans-unit id="7d2518c204baa1386e9e328285a548971d9689e1" translate="yes" xml:space="preserve">
          <source>Filename: src/lib.rs</source>
          <target state="translated">ファイル名:src/lib.rs</target>
        </trans-unit>
        <trans-unit id="6bf165519fb28f6463bffd299a348551f7a70ffe" translate="yes" xml:space="preserve">
          <source>Filename: src/main.rs</source>
          <target state="translated">ファイル名:src/main.rs</target>
        </trans-unit>
        <trans-unit id="4c278d633f2b0c6d8e3ac60f43097864b83be1d1" translate="yes" xml:space="preserve">
          <source>Filename: tests/common.rs</source>
          <target state="translated">ファイル名:tests/common.rs</target>
        </trans-unit>
        <trans-unit id="89bb3352206d43a9c7be07621ae99a4c7a63d59b" translate="yes" xml:space="preserve">
          <source>Filename: tests/integration_test.rs</source>
          <target state="translated">ファイル名:tests/integration_test.rs</target>
        </trans-unit>
        <trans-unit id="da7e9e679b1fa7c216538bf5373f282426df5514" translate="yes" xml:space="preserve">
          <source>Files are automatically closed when they go out of scope. Errors detected on closing are ignored by the implementation of &lt;code&gt;Drop&lt;/code&gt;. Use the method &lt;a href=&quot;struct.file#method.sync_all&quot;&gt;&lt;code&gt;sync_all&lt;/code&gt;&lt;/a&gt; if these errors must be manually handled.</source>
          <target state="translated">ファイルは、範囲外になると自動的に閉じられます。クローズ時に検出されたエラーは、 &lt;code&gt;Drop&lt;/code&gt; の実装によって無視されます。これらのエラーを手動で処理する必要がある場合は、&lt;a href=&quot;struct.file#method.sync_all&quot;&gt; &lt;code&gt;sync_all&lt;/code&gt; &lt;/a&gt;メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="c9f364a0ba59ec6db4093419159a64cbb17d3ea1" translate="yes" xml:space="preserve">
          <source>Filesystem Path</source>
          <target state="translated">ファイルシステムパス</target>
        </trans-unit>
        <trans-unit id="d6f2cf3e28184d29b142a65282628e9e9ed3b391" translate="yes" xml:space="preserve">
          <source>Filesystem manipulation operations.</source>
          <target state="translated">ファイルシステムの操作</target>
        </trans-unit>
        <trans-unit id="1810ebd9bf18910a703b86e95fef3813caed4917" translate="yes" xml:space="preserve">
          <source>Fill/Alignment</source>
          <target state="translated">Fill/Alignment</target>
        </trans-unit>
        <trans-unit id="c8e2efee182c5700f3ea63856c64beff2fb9c8c8" translate="yes" xml:space="preserve">
          <source>Fills &lt;code&gt;self&lt;/code&gt; with elements by cloning &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">塗りつぶし &lt;code&gt;self&lt;/code&gt; クローニングによって要素と &lt;code&gt;value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1b493030b97a1893222266261bf1840f800a5471" translate="yes" xml:space="preserve">
          <source>Fills &lt;code&gt;self&lt;/code&gt; with elements returned by calling a closure repeatedly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7decf1aa22b02ae8abf9a96849ee423eee838e4" translate="yes" xml:space="preserve">
          <source>Filter</source>
          <target state="translated">Filter</target>
        </trans-unit>
        <trans-unit id="cbdc4f8747f1519b270349e133c571ee1757bb1c" translate="yes" xml:space="preserve">
          <source>Filter::all</source>
          <target state="translated">Filter::all</target>
        </trans-unit>
        <trans-unit id="213652adf17d8d5b23821af3df01aaf36e105b47" translate="yes" xml:space="preserve">
          <source>Filter::any</source>
          <target state="translated">Filter::any</target>
        </trans-unit>
        <trans-unit id="c56449e149c1793febf6f13545654fac67e14e5a" translate="yes" xml:space="preserve">
          <source>Filter::borrow</source>
          <target state="translated">Filter::borrow</target>
        </trans-unit>
        <trans-unit id="a80b74f3a8cb1f73ab5e73e6e8d67e70d6ab3056" translate="yes" xml:space="preserve">
          <source>Filter::borrow_mut</source>
          <target state="translated">Filter::borrow_mut</target>
        </trans-unit>
        <trans-unit id="76237c827e872488f01eff9ed90f791a915570c6" translate="yes" xml:space="preserve">
          <source>Filter::by_ref</source>
          <target state="translated">Filter::by_ref</target>
        </trans-unit>
        <trans-unit id="c08ff6ff4c7d0c0a773ca134ca43a253a245dfd2" translate="yes" xml:space="preserve">
          <source>Filter::chain</source>
          <target state="translated">Filter::chain</target>
        </trans-unit>
        <trans-unit id="6aa9effab13d7de89564c149c0bea2c3feb5e4b3" translate="yes" xml:space="preserve">
          <source>Filter::clone</source>
          <target state="translated">Filter::clone</target>
        </trans-unit>
        <trans-unit id="e8b20e49791eb3c6b7a3e63b638a8f8db9699303" translate="yes" xml:space="preserve">
          <source>Filter::clone_from</source>
          <target state="translated">Filter::clone_from</target>
        </trans-unit>
        <trans-unit id="b1a5e59ab9400c8da99232745d0500b07031cca8" translate="yes" xml:space="preserve">
          <source>Filter::clone_into</source>
          <target state="translated">Filter::clone_into</target>
        </trans-unit>
        <trans-unit id="e3902049f2a6ddd774deb61257ff1952539bf21a" translate="yes" xml:space="preserve">
          <source>Filter::cloned</source>
          <target state="translated">Filter::cloned</target>
        </trans-unit>
        <trans-unit id="76bdb4ad2df9791c692d243dd7adee158b8b1812" translate="yes" xml:space="preserve">
          <source>Filter::cmp</source>
          <target state="translated">Filter::cmp</target>
        </trans-unit>
        <trans-unit id="f720610c04103a2d0aba4df49c3f0fa78ee69c23" translate="yes" xml:space="preserve">
          <source>Filter::collect</source>
          <target state="translated">Filter::collect</target>
        </trans-unit>
        <trans-unit id="775f688375a5095a1cc2ef60b92888bab1a6e97a" translate="yes" xml:space="preserve">
          <source>Filter::copied</source>
          <target state="translated">Filter::copied</target>
        </trans-unit>
        <trans-unit id="f16939860dd5d154c5f25da7f419042acbf0c772" translate="yes" xml:space="preserve">
          <source>Filter::count</source>
          <target state="translated">Filter::count</target>
        </trans-unit>
        <trans-unit id="67fdc43a3084de4052d59b3b63f0c63e6bb5d964" translate="yes" xml:space="preserve">
          <source>Filter::cycle</source>
          <target state="translated">Filter::cycle</target>
        </trans-unit>
        <trans-unit id="cd9139b739680b08d5f86e5eaac4157bc1eca80d" translate="yes" xml:space="preserve">
          <source>Filter::enumerate</source>
          <target state="translated">Filter::enumerate</target>
        </trans-unit>
        <trans-unit id="c26e44c81ed8d12f0079a166a0d6667f105d37ec" translate="yes" xml:space="preserve">
          <source>Filter::eq</source>
          <target state="translated">Filter::eq</target>
        </trans-unit>
        <trans-unit id="a15849cd825bfff00ebb42b59700eb882c5694d9" translate="yes" xml:space="preserve">
          <source>Filter::filter</source>
          <target state="translated">Filter::filter</target>
        </trans-unit>
        <trans-unit id="24efc78d3f6adc5e59647487bd7ca0c304590d15" translate="yes" xml:space="preserve">
          <source>Filter::filter_map</source>
          <target state="translated">Filter::filter_map</target>
        </trans-unit>
        <trans-unit id="a08364af9a780af59da2e7dacb512c40b0b44167" translate="yes" xml:space="preserve">
          <source>Filter::find</source>
          <target state="translated">Filter::find</target>
        </trans-unit>
        <trans-unit id="dfd691ecf4bc1689e21b0e8f66fd7983b9f63f3d" translate="yes" xml:space="preserve">
          <source>Filter::find_map</source>
          <target state="translated">Filter::find_map</target>
        </trans-unit>
        <trans-unit id="5fcc14d3fdac172bc84f9cacf0d607f84e029b57" translate="yes" xml:space="preserve">
          <source>Filter::flat_map</source>
          <target state="translated">Filter::flat_map</target>
        </trans-unit>
        <trans-unit id="26583da011e813ddafc93dccbf1207378fa84499" translate="yes" xml:space="preserve">
          <source>Filter::flatten</source>
          <target state="translated">Filter::flatten</target>
        </trans-unit>
        <trans-unit id="0081de77ca92e9a27e84cd163fdbdc3a133d7ec2" translate="yes" xml:space="preserve">
          <source>Filter::fmt</source>
          <target state="translated">Filter::fmt</target>
        </trans-unit>
        <trans-unit id="cb5810e92581c7ab74b65631c90f7a801485519b" translate="yes" xml:space="preserve">
          <source>Filter::fold</source>
          <target state="translated">Filter::fold</target>
        </trans-unit>
        <trans-unit id="c2f6811f53cf481731dba95f289bc5b451fb8096" translate="yes" xml:space="preserve">
          <source>Filter::for_each</source>
          <target state="translated">Filter::for_each</target>
        </trans-unit>
        <trans-unit id="5d32efb9ef420f99d29d9cfdafd65780f6152d22" translate="yes" xml:space="preserve">
          <source>Filter::from</source>
          <target state="translated">Filter::from</target>
        </trans-unit>
        <trans-unit id="89189c4cbf29e04977c47f5286c6c94193c7d1d7" translate="yes" xml:space="preserve">
          <source>Filter::fuse</source>
          <target state="translated">Filter::fuse</target>
        </trans-unit>
        <trans-unit id="3d442ac00bf682738eb7e8185a5e11718f4244af" translate="yes" xml:space="preserve">
          <source>Filter::ge</source>
          <target state="translated">Filter::ge</target>
        </trans-unit>
        <trans-unit id="988424c48047d84bced56ec599d616c88d157ba1" translate="yes" xml:space="preserve">
          <source>Filter::gt</source>
          <target state="translated">Filter::gt</target>
        </trans-unit>
        <trans-unit id="935ea9ea374208a06eb72657dc289a8b1352b9c8" translate="yes" xml:space="preserve">
          <source>Filter::inspect</source>
          <target state="translated">Filter::inspect</target>
        </trans-unit>
        <trans-unit id="c066ff580282ed2966a365604533d7fc4e4343b4" translate="yes" xml:space="preserve">
          <source>Filter::into</source>
          <target state="translated">Filter::into</target>
        </trans-unit>
        <trans-unit id="5bd2ab99188866f12a730a837d29da3bcaad7a8e" translate="yes" xml:space="preserve">
          <source>Filter::into_iter</source>
          <target state="translated">Filter::into_iter</target>
        </trans-unit>
        <trans-unit id="654d65456d47a9a637a8ace3472ffb07cc121839" translate="yes" xml:space="preserve">
          <source>Filter::is_sorted</source>
          <target state="translated">Filter::is_sorted</target>
        </trans-unit>
        <trans-unit id="120f503d9cd2ba86358dfadbcba49346124c01ea" translate="yes" xml:space="preserve">
          <source>Filter::is_sorted_by</source>
          <target state="translated">Filter::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="94b2a18bec30d810f9dcb765cca9e6a8de1b6cd3" translate="yes" xml:space="preserve">
          <source>Filter::is_sorted_by_key</source>
          <target state="translated">Filter::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="159d811fafa2e0efe7c5ba7415af454c491f66cd" translate="yes" xml:space="preserve">
          <source>Filter::last</source>
          <target state="translated">Filter::last</target>
        </trans-unit>
        <trans-unit id="3d7f719326ba1977f049f327dae155cd5d008edc" translate="yes" xml:space="preserve">
          <source>Filter::le</source>
          <target state="translated">Filter::le</target>
        </trans-unit>
        <trans-unit id="f75e00cbb3e7d9494f344d32f9634dc98d3159db" translate="yes" xml:space="preserve">
          <source>Filter::lt</source>
          <target state="translated">Filter::lt</target>
        </trans-unit>
        <trans-unit id="d357c8df2881bd5268acbe3d45730d4a2455a03f" translate="yes" xml:space="preserve">
          <source>Filter::map</source>
          <target state="translated">Filter::map</target>
        </trans-unit>
        <trans-unit id="685fae1c6826405dbf3dd5154e10decba5601aef" translate="yes" xml:space="preserve">
          <source>Filter::max</source>
          <target state="translated">Filter::max</target>
        </trans-unit>
        <trans-unit id="0e44ccbef3a78d02dba3572d78ec33af28c5e10d" translate="yes" xml:space="preserve">
          <source>Filter::max_by</source>
          <target state="translated">Filter::max_by</target>
        </trans-unit>
        <trans-unit id="4e356fad5f964adfe160f41cf46044f86e855415" translate="yes" xml:space="preserve">
          <source>Filter::max_by_key</source>
          <target state="translated">Filter::max_by_key</target>
        </trans-unit>
        <trans-unit id="cd5c61dcdd3a4eb6ffe9980bcfa99812a22a99b8" translate="yes" xml:space="preserve">
          <source>Filter::min</source>
          <target state="translated">Filter::min</target>
        </trans-unit>
        <trans-unit id="6267572b9001345858bd23a3c2a5283613550f1c" translate="yes" xml:space="preserve">
          <source>Filter::min_by</source>
          <target state="translated">Filter::min_by</target>
        </trans-unit>
        <trans-unit id="1434d5ff7c813900572d3d1d17e7e9c616ddca1c" translate="yes" xml:space="preserve">
          <source>Filter::min_by_key</source>
          <target state="translated">Filter::min_by_key</target>
        </trans-unit>
        <trans-unit id="99b66bcba4654ffdef5ad6f5a89651da3c827526" translate="yes" xml:space="preserve">
          <source>Filter::ne</source>
          <target state="translated">Filter::ne</target>
        </trans-unit>
        <trans-unit id="9f2847ef7da7296603b441916e18d32d60eae92d" translate="yes" xml:space="preserve">
          <source>Filter::next</source>
          <target state="translated">Filter::next</target>
        </trans-unit>
        <trans-unit id="f45b4e6d5533e6f3377975f48156cab4e4d39687" translate="yes" xml:space="preserve">
          <source>Filter::next_back</source>
          <target state="translated">Filter::next_back</target>
        </trans-unit>
        <trans-unit id="a26082fae2f4ba20b3e7fae7ad76d84b633340b4" translate="yes" xml:space="preserve">
          <source>Filter::nth</source>
          <target state="translated">Filter::nth</target>
        </trans-unit>
        <trans-unit id="33367b8b38a92926a22e41e47c6609e03d903dae" translate="yes" xml:space="preserve">
          <source>Filter::nth_back</source>
          <target state="translated">Filter::nth_back</target>
        </trans-unit>
        <trans-unit id="9299c303759eec1e6d407635cf1c4c8007db8f32" translate="yes" xml:space="preserve">
          <source>Filter::partial_cmp</source>
          <target state="translated">Filter::partial_cmp</target>
        </trans-unit>
        <trans-unit id="4b800d21e02fa744f44ecf3517b8c0380f8c45dc" translate="yes" xml:space="preserve">
          <source>Filter::partition</source>
          <target state="translated">Filter::partition</target>
        </trans-unit>
        <trans-unit id="50b0dd0933b632753646b3db69322e05915e7e9c" translate="yes" xml:space="preserve">
          <source>Filter::peekable</source>
          <target state="translated">Filter::peekable</target>
        </trans-unit>
        <trans-unit id="56cbb0512792b87b005d0edc38dd7f5b7d66d89c" translate="yes" xml:space="preserve">
          <source>Filter::position</source>
          <target state="translated">Filter::position</target>
        </trans-unit>
        <trans-unit id="8abcfc1e2912b7d94dafa01d3c894ad55bf06811" translate="yes" xml:space="preserve">
          <source>Filter::product</source>
          <target state="translated">Filter::product</target>
        </trans-unit>
        <trans-unit id="744beb8eba444cd8007aca26fddc12f77d06c7ee" translate="yes" xml:space="preserve">
          <source>Filter::rev</source>
          <target state="translated">Filter::rev</target>
        </trans-unit>
        <trans-unit id="2fbee7cabd92c1bbb40aa4e4d8bc11ffb7323bd0" translate="yes" xml:space="preserve">
          <source>Filter::rfind</source>
          <target state="translated">Filter::rfind</target>
        </trans-unit>
        <trans-unit id="c04751947038390718dfb4e703413f7458033f8a" translate="yes" xml:space="preserve">
          <source>Filter::rfold</source>
          <target state="translated">Filter::rfold</target>
        </trans-unit>
        <trans-unit id="fb5edd411694fb58eb50d1adee34a1f1672a86d1" translate="yes" xml:space="preserve">
          <source>Filter::rposition</source>
          <target state="translated">Filter::rposition</target>
        </trans-unit>
        <trans-unit id="0443bec5e567f4f41bf9211e6a14a53d932ca5de" translate="yes" xml:space="preserve">
          <source>Filter::scan</source>
          <target state="translated">Filter::scan</target>
        </trans-unit>
        <trans-unit id="3c87d52dd510721bf36aa5824dfda723f1cc9c41" translate="yes" xml:space="preserve">
          <source>Filter::size_hint</source>
          <target state="translated">Filter::size_hint</target>
        </trans-unit>
        <trans-unit id="73ff3ae6b81ca5209cbedecccee9a9295c89e420" translate="yes" xml:space="preserve">
          <source>Filter::skip</source>
          <target state="translated">Filter::skip</target>
        </trans-unit>
        <trans-unit id="63485bee608bbb032e62ac1926d4423f7e4ff5cf" translate="yes" xml:space="preserve">
          <source>Filter::skip_while</source>
          <target state="translated">Filter::skip_while</target>
        </trans-unit>
        <trans-unit id="b3e2246b0543b7c24d7766b9a4c389adda77e23a" translate="yes" xml:space="preserve">
          <source>Filter::step_by</source>
          <target state="translated">Filter::step_by</target>
        </trans-unit>
        <trans-unit id="cb8f3bb10ced2597f26dbbb4a22a852a6b7fc5a6" translate="yes" xml:space="preserve">
          <source>Filter::sum</source>
          <target state="translated">Filter::sum</target>
        </trans-unit>
        <trans-unit id="fd528d522f0e9356841949d9382636816d91e657" translate="yes" xml:space="preserve">
          <source>Filter::take</source>
          <target state="translated">Filter::take</target>
        </trans-unit>
        <trans-unit id="53e4721dbfdbc67e38abc29a2ba5b0855c42f1d6" translate="yes" xml:space="preserve">
          <source>Filter::take_while</source>
          <target state="translated">Filter::take_while</target>
        </trans-unit>
        <trans-unit id="8d7cc088f213c95ed6d117d9f20756f4b59fd99c" translate="yes" xml:space="preserve">
          <source>Filter::to_owned</source>
          <target state="translated">Filter::to_owned</target>
        </trans-unit>
        <trans-unit id="91edcccfbd424db1e271a58b030ecd53ce7cc376" translate="yes" xml:space="preserve">
          <source>Filter::try_fold</source>
          <target state="translated">Filter::try_fold</target>
        </trans-unit>
        <trans-unit id="4e5dc865ae5492bff8c965279dc8d8d6549367fc" translate="yes" xml:space="preserve">
          <source>Filter::try_for_each</source>
          <target state="translated">Filter::try_for_each</target>
        </trans-unit>
        <trans-unit id="a29a975cd5ff530452972a645aab000d7a0a9564" translate="yes" xml:space="preserve">
          <source>Filter::try_from</source>
          <target state="translated">Filter::try_from</target>
        </trans-unit>
        <trans-unit id="e0430947230f7346595292222e6fd915f5dd81cc" translate="yes" xml:space="preserve">
          <source>Filter::try_into</source>
          <target state="translated">Filter::try_into</target>
        </trans-unit>
        <trans-unit id="8cec84df6490ee5ddbb4ad01e2e99b6ef2f04f4f" translate="yes" xml:space="preserve">
          <source>Filter::try_rfold</source>
          <target state="translated">Filter::try_rfold</target>
        </trans-unit>
        <trans-unit id="0754f58624302676282d4836edee3ed84e8620f7" translate="yes" xml:space="preserve">
          <source>Filter::type_id</source>
          <target state="translated">Filter::type_id</target>
        </trans-unit>
        <trans-unit id="74df6714231936212824bfa512b7d688c36309ea" translate="yes" xml:space="preserve">
          <source>Filter::unzip</source>
          <target state="translated">Filter::unzip</target>
        </trans-unit>
        <trans-unit id="8e017a842575b7cdf7dcc2ab224971d1284d20ec" translate="yes" xml:space="preserve">
          <source>Filter::zip</source>
          <target state="translated">Filter::zip</target>
        </trans-unit>
        <trans-unit id="cbcae3949ded35d509783e6f0637ed71ff60f4a6" translate="yes" xml:space="preserve">
          <source>FilterMap</source>
          <target state="translated">FilterMap</target>
        </trans-unit>
        <trans-unit id="7b92b5eae9e8062c60cffe29ca8736eca2f30e6c" translate="yes" xml:space="preserve">
          <source>FilterMap::all</source>
          <target state="translated">FilterMap::all</target>
        </trans-unit>
        <trans-unit id="056763da49a00dedd56d642628227f49af82fa2c" translate="yes" xml:space="preserve">
          <source>FilterMap::any</source>
          <target state="translated">FilterMap::any</target>
        </trans-unit>
        <trans-unit id="e22da377c9a59dd2414678b2de94caf302f4b11a" translate="yes" xml:space="preserve">
          <source>FilterMap::borrow</source>
          <target state="translated">FilterMap::borrow</target>
        </trans-unit>
        <trans-unit id="f52bf4743271f18a79db1b6d0cf7659f6a5a4470" translate="yes" xml:space="preserve">
          <source>FilterMap::borrow_mut</source>
          <target state="translated">FilterMap::borrow_mut</target>
        </trans-unit>
        <trans-unit id="afd052ecc7eac7c108a37d4e4f95c5b462c283a8" translate="yes" xml:space="preserve">
          <source>FilterMap::by_ref</source>
          <target state="translated">FilterMap::by_ref</target>
        </trans-unit>
        <trans-unit id="6c4d335a70bb28a89e78be903a69ac81820531b4" translate="yes" xml:space="preserve">
          <source>FilterMap::chain</source>
          <target state="translated">FilterMap::chain</target>
        </trans-unit>
        <trans-unit id="e72e0d33d70b5bb441f9c636ac02c73fec770065" translate="yes" xml:space="preserve">
          <source>FilterMap::clone</source>
          <target state="translated">FilterMap::clone</target>
        </trans-unit>
        <trans-unit id="e59e8e02d0632862f5235d89cd22b4d107ce257e" translate="yes" xml:space="preserve">
          <source>FilterMap::clone_from</source>
          <target state="translated">FilterMap::clone_from</target>
        </trans-unit>
        <trans-unit id="90db74595be16c2cb19f9cab1796a2edce3d0af7" translate="yes" xml:space="preserve">
          <source>FilterMap::clone_into</source>
          <target state="translated">FilterMap::clone_into</target>
        </trans-unit>
        <trans-unit id="c9777fbc2076ee56339b6fc1fbdf983d76c7b127" translate="yes" xml:space="preserve">
          <source>FilterMap::cloned</source>
          <target state="translated">FilterMap::cloned</target>
        </trans-unit>
        <trans-unit id="5807d265563c7c60620fc8da08b872c9ab8d3fd9" translate="yes" xml:space="preserve">
          <source>FilterMap::cmp</source>
          <target state="translated">FilterMap::cmp</target>
        </trans-unit>
        <trans-unit id="1bad71d537463c8edec7eeed9bb36bbe800d0240" translate="yes" xml:space="preserve">
          <source>FilterMap::collect</source>
          <target state="translated">FilterMap::collect</target>
        </trans-unit>
        <trans-unit id="f362b610a095c9213723aa6b7c29a70ad6a75d23" translate="yes" xml:space="preserve">
          <source>FilterMap::copied</source>
          <target state="translated">FilterMap::copied</target>
        </trans-unit>
        <trans-unit id="15f849a9134f9ee541710bde8fa395c7f5827ea5" translate="yes" xml:space="preserve">
          <source>FilterMap::count</source>
          <target state="translated">FilterMap::count</target>
        </trans-unit>
        <trans-unit id="b04e79b1c207ad85f19cc770bf3af8a8cdfc7564" translate="yes" xml:space="preserve">
          <source>FilterMap::cycle</source>
          <target state="translated">FilterMap::cycle</target>
        </trans-unit>
        <trans-unit id="d5eaa8ed50a34c4d51cf80b092cd79a044f981dc" translate="yes" xml:space="preserve">
          <source>FilterMap::enumerate</source>
          <target state="translated">FilterMap::enumerate</target>
        </trans-unit>
        <trans-unit id="3049b24cc78d8dee8b282464fe6a54629d9d99a7" translate="yes" xml:space="preserve">
          <source>FilterMap::eq</source>
          <target state="translated">FilterMap::eq</target>
        </trans-unit>
        <trans-unit id="c6574764327f750fbed775fea3b87ff0f564ab4b" translate="yes" xml:space="preserve">
          <source>FilterMap::filter</source>
          <target state="translated">FilterMap::filter</target>
        </trans-unit>
        <trans-unit id="5fd3ed340b926621f6e6a7cec27c42b8aa8de606" translate="yes" xml:space="preserve">
          <source>FilterMap::filter_map</source>
          <target state="translated">FilterMap::filter_map</target>
        </trans-unit>
        <trans-unit id="e64c38e3c57d335f0029952b9f3dfb8de6339646" translate="yes" xml:space="preserve">
          <source>FilterMap::find</source>
          <target state="translated">FilterMap::find</target>
        </trans-unit>
        <trans-unit id="a782576451cde1a09fb3fcb04ed110cb35558244" translate="yes" xml:space="preserve">
          <source>FilterMap::find_map</source>
          <target state="translated">FilterMap::find_map</target>
        </trans-unit>
        <trans-unit id="2f1d9d14678b908bdc8f961d330d535e24696c96" translate="yes" xml:space="preserve">
          <source>FilterMap::flat_map</source>
          <target state="translated">FilterMap::flat_map</target>
        </trans-unit>
        <trans-unit id="373bd651e683619f593d10b616679672c7aaed59" translate="yes" xml:space="preserve">
          <source>FilterMap::flatten</source>
          <target state="translated">FilterMap::flatten</target>
        </trans-unit>
        <trans-unit id="c1bd93959b35c9e527b2799deacab3c73c0eb53a" translate="yes" xml:space="preserve">
          <source>FilterMap::fmt</source>
          <target state="translated">FilterMap::fmt</target>
        </trans-unit>
        <trans-unit id="17c141370292082f0ec7c950597e3f230f9c5eba" translate="yes" xml:space="preserve">
          <source>FilterMap::fold</source>
          <target state="translated">FilterMap::fold</target>
        </trans-unit>
        <trans-unit id="764f2cd89d16cf2d61f033ea733cbd68ac155cf8" translate="yes" xml:space="preserve">
          <source>FilterMap::for_each</source>
          <target state="translated">FilterMap::for_each</target>
        </trans-unit>
        <trans-unit id="b529e2a588242fc40bc3a565040f503232812103" translate="yes" xml:space="preserve">
          <source>FilterMap::from</source>
          <target state="translated">FilterMap::from</target>
        </trans-unit>
        <trans-unit id="782e9758d3b5d111b6dc199ff21b0148712a9942" translate="yes" xml:space="preserve">
          <source>FilterMap::fuse</source>
          <target state="translated">FilterMap::fuse</target>
        </trans-unit>
        <trans-unit id="3382272e7370c0b6147c8c387ffc37b4d4c5e3a6" translate="yes" xml:space="preserve">
          <source>FilterMap::ge</source>
          <target state="translated">FilterMap::ge</target>
        </trans-unit>
        <trans-unit id="4b8238e089d3397b749e1b187d2a724b2617946b" translate="yes" xml:space="preserve">
          <source>FilterMap::gt</source>
          <target state="translated">FilterMap::gt</target>
        </trans-unit>
        <trans-unit id="82617e4f67971bc78b124b6cb5a257d959803b60" translate="yes" xml:space="preserve">
          <source>FilterMap::inspect</source>
          <target state="translated">FilterMap::inspect</target>
        </trans-unit>
        <trans-unit id="aa02bb54120358798026dad5fd5c4d13752028ae" translate="yes" xml:space="preserve">
          <source>FilterMap::into</source>
          <target state="translated">FilterMap::into</target>
        </trans-unit>
        <trans-unit id="d9156abee7291c0e1aff8b8e10dfdf72b8682948" translate="yes" xml:space="preserve">
          <source>FilterMap::into_iter</source>
          <target state="translated">FilterMap::into_iter</target>
        </trans-unit>
        <trans-unit id="b5f609b521b0384ad2700db99a7535f641b735d3" translate="yes" xml:space="preserve">
          <source>FilterMap::is_sorted</source>
          <target state="translated">FilterMap::is_sorted</target>
        </trans-unit>
        <trans-unit id="125f87f00258d3f5268e75a03b685825e6459606" translate="yes" xml:space="preserve">
          <source>FilterMap::is_sorted_by</source>
          <target state="translated">FilterMap::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="db08443b07b0a8ffcf37e18de9535ef98fc6640f" translate="yes" xml:space="preserve">
          <source>FilterMap::is_sorted_by_key</source>
          <target state="translated">FilterMap::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="63d4423b8f09aee32267033e6ed51ee3d75dbe39" translate="yes" xml:space="preserve">
          <source>FilterMap::last</source>
          <target state="translated">FilterMap::last</target>
        </trans-unit>
        <trans-unit id="508b943f88718a1ffcbe85638512d90a4a5aeb16" translate="yes" xml:space="preserve">
          <source>FilterMap::le</source>
          <target state="translated">FilterMap::le</target>
        </trans-unit>
        <trans-unit id="f59441da463942dd788b8584520a628dbb0a7821" translate="yes" xml:space="preserve">
          <source>FilterMap::lt</source>
          <target state="translated">FilterMap::lt</target>
        </trans-unit>
        <trans-unit id="b97224e4f5de7796c1b3262a2a8093bdeff53e3d" translate="yes" xml:space="preserve">
          <source>FilterMap::map</source>
          <target state="translated">FilterMap::map</target>
        </trans-unit>
        <trans-unit id="93f0d3347911a786232d9f9e9dd863f797f500e2" translate="yes" xml:space="preserve">
          <source>FilterMap::max</source>
          <target state="translated">FilterMap::max</target>
        </trans-unit>
        <trans-unit id="6ed3c1e75437eb9e78693e8457ba8a6a19a9eeb6" translate="yes" xml:space="preserve">
          <source>FilterMap::max_by</source>
          <target state="translated">FilterMap::max_by</target>
        </trans-unit>
        <trans-unit id="1f115c7e6fcefc2da1a6cb134d4cacec12999553" translate="yes" xml:space="preserve">
          <source>FilterMap::max_by_key</source>
          <target state="translated">FilterMap::max_by_key</target>
        </trans-unit>
        <trans-unit id="5910845dc1ac65e3512f9f11db4bb64d77317203" translate="yes" xml:space="preserve">
          <source>FilterMap::min</source>
          <target state="translated">FilterMap::min</target>
        </trans-unit>
        <trans-unit id="35d98e882270cba4778f1d16fbe51a082da7d77c" translate="yes" xml:space="preserve">
          <source>FilterMap::min_by</source>
          <target state="translated">FilterMap::min_by</target>
        </trans-unit>
        <trans-unit id="bd2fcb562ae558f66536954f665c945857c9ad67" translate="yes" xml:space="preserve">
          <source>FilterMap::min_by_key</source>
          <target state="translated">FilterMap::min_by_key</target>
        </trans-unit>
        <trans-unit id="03f3e5a4e3eee64b9fb373323ea94527e555da6c" translate="yes" xml:space="preserve">
          <source>FilterMap::ne</source>
          <target state="translated">FilterMap::ne</target>
        </trans-unit>
        <trans-unit id="7ba597ec213271e4a028a80dc2193495e8a9579f" translate="yes" xml:space="preserve">
          <source>FilterMap::next</source>
          <target state="translated">FilterMap::next</target>
        </trans-unit>
        <trans-unit id="08c78668993a1e3f69d527bd6cf931f4bbf29e6e" translate="yes" xml:space="preserve">
          <source>FilterMap::next_back</source>
          <target state="translated">FilterMap::next_back</target>
        </trans-unit>
        <trans-unit id="092ec64a808e7c6fae88552498cb84deac692fe6" translate="yes" xml:space="preserve">
          <source>FilterMap::nth</source>
          <target state="translated">FilterMap::nth</target>
        </trans-unit>
        <trans-unit id="8a5b5faea870c471f74dfaeb9ef1c2978daa1b52" translate="yes" xml:space="preserve">
          <source>FilterMap::nth_back</source>
          <target state="translated">FilterMap::nth_back</target>
        </trans-unit>
        <trans-unit id="ad666374da1329cd1c98c13570e3079bb4d9753b" translate="yes" xml:space="preserve">
          <source>FilterMap::partial_cmp</source>
          <target state="translated">FilterMap::partial_cmp</target>
        </trans-unit>
        <trans-unit id="3a1f557504b4f033d74e3a0cd191e1bc44061c10" translate="yes" xml:space="preserve">
          <source>FilterMap::partition</source>
          <target state="translated">FilterMap::partition</target>
        </trans-unit>
        <trans-unit id="464af94ecc2766027bb520d65baac83210a96d68" translate="yes" xml:space="preserve">
          <source>FilterMap::peekable</source>
          <target state="translated">FilterMap::peekable</target>
        </trans-unit>
        <trans-unit id="b6f5926027a29b108c8c4e148fba7961cd883263" translate="yes" xml:space="preserve">
          <source>FilterMap::position</source>
          <target state="translated">FilterMap::position</target>
        </trans-unit>
        <trans-unit id="d4662fb16a6925d0bdf1426861c2a05c92e21e7d" translate="yes" xml:space="preserve">
          <source>FilterMap::product</source>
          <target state="translated">FilterMap::product</target>
        </trans-unit>
        <trans-unit id="2f01e0b767f05f370a85a3bce7f34a15bdc9a56b" translate="yes" xml:space="preserve">
          <source>FilterMap::rev</source>
          <target state="translated">FilterMap::rev</target>
        </trans-unit>
        <trans-unit id="b9fe0d46b42128b7dc2d7f453059d68d1988c06c" translate="yes" xml:space="preserve">
          <source>FilterMap::rfind</source>
          <target state="translated">FilterMap::rfind</target>
        </trans-unit>
        <trans-unit id="bb45767b515f5a13f54d1f8925702c231e459f48" translate="yes" xml:space="preserve">
          <source>FilterMap::rfold</source>
          <target state="translated">FilterMap::rfold</target>
        </trans-unit>
        <trans-unit id="3b53374da06b703dbb129fb0e8ac3835e2b66f53" translate="yes" xml:space="preserve">
          <source>FilterMap::rposition</source>
          <target state="translated">FilterMap::rposition</target>
        </trans-unit>
        <trans-unit id="278a05a25baf85f2add4950e7c66a2320e6b50b2" translate="yes" xml:space="preserve">
          <source>FilterMap::scan</source>
          <target state="translated">FilterMap::scan</target>
        </trans-unit>
        <trans-unit id="167ea8a00b9ef9c7ea919b1e9de5fba54ddc0740" translate="yes" xml:space="preserve">
          <source>FilterMap::size_hint</source>
          <target state="translated">FilterMap::size_hint</target>
        </trans-unit>
        <trans-unit id="9fdc76c5b90747996aecbe0fdb9da980250a87a2" translate="yes" xml:space="preserve">
          <source>FilterMap::skip</source>
          <target state="translated">FilterMap::skip</target>
        </trans-unit>
        <trans-unit id="0f412c7f819fc672e3cd01cabc2fe79a44cf585b" translate="yes" xml:space="preserve">
          <source>FilterMap::skip_while</source>
          <target state="translated">FilterMap::skip_while</target>
        </trans-unit>
        <trans-unit id="87cce8dbbb10863949d947cefa0807292845bbfb" translate="yes" xml:space="preserve">
          <source>FilterMap::step_by</source>
          <target state="translated">FilterMap::step_by</target>
        </trans-unit>
        <trans-unit id="282c5277a534d22485e237e603241e16a5f9e5f9" translate="yes" xml:space="preserve">
          <source>FilterMap::sum</source>
          <target state="translated">FilterMap::sum</target>
        </trans-unit>
        <trans-unit id="99f988100f49cae2541730ccb54030e896cd2571" translate="yes" xml:space="preserve">
          <source>FilterMap::take</source>
          <target state="translated">FilterMap::take</target>
        </trans-unit>
        <trans-unit id="57b392761e70688448cbe9355f4bb904a0511634" translate="yes" xml:space="preserve">
          <source>FilterMap::take_while</source>
          <target state="translated">FilterMap::take_while</target>
        </trans-unit>
        <trans-unit id="876276a289c68259eb1f6162c94a574e37c52d43" translate="yes" xml:space="preserve">
          <source>FilterMap::to_owned</source>
          <target state="translated">FilterMap::to_owned</target>
        </trans-unit>
        <trans-unit id="284869e46c98e507cba7aeae84131afbfc8aa3e8" translate="yes" xml:space="preserve">
          <source>FilterMap::try_fold</source>
          <target state="translated">FilterMap::try_fold</target>
        </trans-unit>
        <trans-unit id="873249a637f8784b6dfb037f99f7a9afa12e2ba3" translate="yes" xml:space="preserve">
          <source>FilterMap::try_for_each</source>
          <target state="translated">FilterMap::try_for_each</target>
        </trans-unit>
        <trans-unit id="b26e84db8c832a00d7f4ec926259648291fad5b1" translate="yes" xml:space="preserve">
          <source>FilterMap::try_from</source>
          <target state="translated">FilterMap::try_from</target>
        </trans-unit>
        <trans-unit id="dc276d5890d13630365d25d01f73a94caac57e69" translate="yes" xml:space="preserve">
          <source>FilterMap::try_into</source>
          <target state="translated">FilterMap::try_into</target>
        </trans-unit>
        <trans-unit id="f9633b81f914f1be9e1f4e12becd6ea257145954" translate="yes" xml:space="preserve">
          <source>FilterMap::try_rfold</source>
          <target state="translated">FilterMap::try_rfold</target>
        </trans-unit>
        <trans-unit id="f9434165936bad747cb6920cd683f2f70ffac33f" translate="yes" xml:space="preserve">
          <source>FilterMap::type_id</source>
          <target state="translated">FilterMap::type_id</target>
        </trans-unit>
        <trans-unit id="f4645fc713c3c09c25deb1f92c2a7b15bf56f9b3" translate="yes" xml:space="preserve">
          <source>FilterMap::unzip</source>
          <target state="translated">FilterMap::unzip</target>
        </trans-unit>
        <trans-unit id="5d51993841e241bdd0f7af97f0689f8877d8cf6a" translate="yes" xml:space="preserve">
          <source>FilterMap::zip</source>
          <target state="translated">FilterMap::zip</target>
        </trans-unit>
        <trans-unit id="37cb4de530573cb240e27ee116ddd7f334d96a4e" translate="yes" xml:space="preserve">
          <source>Filtering to Run Multiple Tests</source>
          <target state="translated">複数のテストを実行するためのフィルタリング</target>
        </trans-unit>
        <trans-unit id="03852e06afb208b880e5478db67fe7284385a208" translate="yes" xml:space="preserve">
          <source>Final Project: Building a Multithreaded Web Server</source>
          <target state="translated">最終プロジェクト。マルチスレッドWebサーバの構築</target>
        </trans-unit>
        <trans-unit id="a0d2c6f63e0ec75dd04cb469fec8f4cddc384550" translate="yes" xml:space="preserve">
          <source>Finally, if ever you're interested in what the actual capacity of the collection is, most collections provide a &lt;code&gt;capacity&lt;/code&gt; method to query this information on demand. This can be useful for debugging purposes, or for use with the &lt;code&gt;reserve&lt;/code&gt; methods.</source>
          <target state="translated">最後に、コレクションの実際の容量に興味がある場合は、ほとんどのコレクションがこの情報をオンデマンドで照会するための &lt;code&gt;capacity&lt;/code&gt; メソッドを提供します。これは、デバッグや、 &lt;code&gt;reserve&lt;/code&gt; メソッドでの使用に役立ちます。</target>
        </trans-unit>
        <trans-unit id="5057e0c4d54ac6561f43dd750beeee0c71ccd643" translate="yes" xml:space="preserve">
          <source>Finally, if you want to &lt;code&gt;dbg!(..)&lt;/code&gt; multiple values, it will treat them as a tuple (and return it, too):</source>
          <target state="translated">最後に、複数の値を &lt;code&gt;dbg!(..)&lt;/code&gt; にしたい場合は、それらをタプルとして扱います（それも返します）。</target>
        </trans-unit>
        <trans-unit id="afdf2f40b9b960b4d92937b2c4eaf5bbc5a5f9a5" translate="yes" xml:space="preserve">
          <source>Finally, if you wish to still be able to access the original type, you can create a new &lt;code&gt;enum&lt;/code&gt; with a variant for each type:</source>
          <target state="translated">最後に、元のタイプに引き続きアクセスできるようにしたい場合は、タイプごとにバリアントを使用して新しい &lt;code&gt;enum&lt;/code&gt; 型を作成できます。</target>
        </trans-unit>
        <trans-unit id="db9f333a75202b2d585bd73ba51b8b4167fbe6ea" translate="yes" xml:space="preserve">
          <source>Finally, it is useful for the reader to keep in mind that according to the definitions of this formalism, no simple NT matches the empty fragment, and likewise no token matches the empty fragment of Rust syntax. (Thus, the &lt;em&gt;only&lt;/em&gt; NT that can match the empty fragment is a complex NT.) This is not actually true, because the &lt;code&gt;vis&lt;/code&gt; matcher can match an empty fragment. Thus, for the purposes of the formalism, we will treat &lt;code&gt;$v:vis&lt;/code&gt; as actually being &lt;code&gt;$($v:vis)?&lt;/code&gt;, with a requirement that the matcher match an empty fragment.</source>
          <target state="translated">最後に、この形式の定義によれば、単純なNTは空のフラグメントと一致せず、同様にトークンはRust構文の空のフラグメントと一致しないことを読者が覚えておくと便利です。 （したがって、空のフラグメントと一致できる&lt;em&gt;唯一の&lt;/em&gt; NTは複雑なNTです。）これは、 &lt;code&gt;vis&lt;/code&gt; matcherが空のフラグメントと一致できるため、実際には当てはまりません。したがって、形式主義の目的で、 &lt;code&gt;$v:vis&lt;/code&gt; を実際には &lt;code&gt;$($v:vis)?&lt;/code&gt; として扱いますか？、マッチャーは空のフラグメントと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="58c68111d14cda947ed8f36da0ddde0b0eefb4b4" translate="yes" xml:space="preserve">
          <source>Finally, round the size of the struct to the nearest multiple of its &lt;a href=&quot;fn.align_of&quot;&gt;alignment&lt;/a&gt;. The alignment of the struct is usually the largest alignment of all its fields; this can be changed with the use of &lt;code&gt;repr(align(N))&lt;/code&gt;.</source>
          <target state="translated">最後に、構造体のサイズをその&lt;a href=&quot;fn.align_of&quot;&gt;配置の&lt;/a&gt;最も近い倍数に丸めます。構造体の配置は通常、そのすべてのフィールドの最大の配置です。これは &lt;code&gt;repr(align(N))&lt;/code&gt; を使用して変更できます。</target>
        </trans-unit>
        <trans-unit id="0c2717494a167e54473342fef77ea104a2168605" translate="yes" xml:space="preserve">
          <source>Finally, some appendices contain useful information about the language in a more reference-like format. Appendix A covers Rust&amp;rsquo;s keywords, Appendix B covers Rust&amp;rsquo;s operators and symbols, Appendix C covers derivable traits provided by the standard library, Appendix D covers some useful development tools, and Appendix E explains Rust editions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b6451b88d5b36c4db78ede6ff2093f67ddbc787" translate="yes" xml:space="preserve">
          <source>Finally, some appendixes contain useful information about the language in a more reference-like format. Appendix A covers Rust&amp;rsquo;s keywords, Appendix B covers Rust&amp;rsquo;s operators and symbols, Appendix C covers derivable traits provided by the standard library, Appendix D covers some useful development tools, and Appendix E explains Rust editions.</source>
          <target state="translated">最後に、一部の付録には、言語に関する有用な情報がより参照に似た形式で含まれています。付録AはRustのキーワード、付録BはRustの演算子と記号、付録Cは標準ライブラリが提供する派生可能な特性、付録Dはいくつかの便利な開発ツール、付録EはRustのエディションについて説明しています。</target>
        </trans-unit>
        <trans-unit id="685942198bdcba88a6f3ec4528092dcd922fa44c" translate="yes" xml:space="preserve">
          <source>Finally, the &lt;code&gt;break&lt;/code&gt; and &lt;code&gt;continue&lt;/code&gt; keywords cannot be used to branch out from an async block. Therefore the following is illegal:</source>
          <target state="translated">最後に、 &lt;code&gt;break&lt;/code&gt; キーワードと &lt;code&gt;continue&lt;/code&gt; キーワードを使用して、非同期ブロックから分岐することはできません。したがって、以下は違法です。</target>
        </trans-unit>
        <trans-unit id="5d1a919e9ce1e7229991dc6f5ff6a1bc5e62a081" translate="yes" xml:space="preserve">
          <source>Finally, the definition for FOLLOW(M) is built up as follows. pat, expr, etc. represent simple nonterminals with the given fragment specifier.</source>
          <target state="translated">最後に、FOLLOW(M)の定義は以下のように構成されています。</target>
        </trans-unit>
        <trans-unit id="7b36b2ea3ef096f4ea76abe3b88dfbc7ea77d828" translate="yes" xml:space="preserve">
          <source>Finally, the fields of a struct or a reference to a struct are treated as separate entities when borrowing. If the struct does not implement &lt;a href=&quot;../special-types-and-traits#drop&quot;&gt;&lt;code&gt;Drop&lt;/code&gt;&lt;/a&gt; and is stored in a local variable, this also applies to moving out of each of its fields. This also does not apply if automatic dereferencing is done though user defined types other than &lt;a href=&quot;../special-types-and-traits#boxt&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">最後に、構造体のフィールドまたは構造体への参照は、借用時に個別のエンティティとして扱われます。構造体が&lt;a href=&quot;../special-types-and-traits#drop&quot;&gt; &lt;code&gt;Drop&lt;/code&gt; &lt;/a&gt;を実装せず、ローカル変数に格納されている場合、これは各フィールドからの移動にも適用されます。これは、&lt;a href=&quot;../special-types-and-traits#boxt&quot;&gt; &lt;code&gt;Box&lt;/code&gt; &lt;/a&gt;以外のユーザー定義タイプを介して自動逆参照が実行される場合にも適用されません。</target>
        </trans-unit>
        <trans-unit id="380bab2eff15b19d764ef3dede97b0a3724bf24b" translate="yes" xml:space="preserve">
          <source>Finally, the fields of a struct or a reference to a struct are treated as separate entities when borrowing. If the struct does not implement &lt;a href=&quot;../special-types-and-traits#drop&quot;&gt;&lt;code&gt;Drop&lt;/code&gt;&lt;/a&gt; and is stored in a local variable, this also applies to moving out of each of its fields. This also does not apply if automatic dereferencing is done though user defined types.</source>
          <target state="translated">最後に、構造体のフィールドまたは構造体への参照は、借用時に個別のエンティティとして扱われます。構造体が&lt;a href=&quot;../special-types-and-traits#drop&quot;&gt; &lt;code&gt;Drop&lt;/code&gt; &lt;/a&gt;を実装せず、ローカル変数に格納されている場合、これは各フィールドからの移動にも適用されます。これは、ユーザー定義タイプを介して自動逆参照が行われる場合にも適用されません。</target>
        </trans-unit>
        <trans-unit id="8ea92f7eac703a6790db697e7ddca35702303491" translate="yes" xml:space="preserve">
          <source>Finally, the future is wrapped in a pinned box:</source>
          <target state="translated">最後に、未来はピンで包まれています。</target>
        </trans-unit>
        <trans-unit id="88c1ba38702bf121d72f8d950ee229564f388f8a" translate="yes" xml:space="preserve">
          <source>Finally, the size of the struct is the current offset rounded up to the nearest multiple of the struct's alignment.</source>
          <target state="translated">最後に、構造体のサイズは、構造体のアライメントの最も近い倍数に切り上げられた現在のオフセットです。</target>
        </trans-unit>
        <trans-unit id="548f9672973eaeba55b9a5a51839b947dcf766a5" translate="yes" xml:space="preserve">
          <source>Finally, there are some rustc-specific ABI strings:</source>
          <target state="translated">最後に、rustc特有のABI文字列があります。</target>
        </trans-unit>
        <trans-unit id="89bd21dfa629771ada041a6142c77fa2db99944d" translate="yes" xml:space="preserve">
          <source>Finally, this book is not normative. It may include details that are specific to &lt;code&gt;rustc&lt;/code&gt; itself, and should not be taken as a specification for the Rust language. We intend to produce such a book someday, and until then, the reference is the closest thing we have to one.</source>
          <target state="translated">最後に、この本は規範的ではありません。 &lt;code&gt;rustc&lt;/code&gt; 自体に固有の詳細が含まれている可能性があり、Rust言語の仕様として解釈すべきではありません。私たちはいつかそのような本を作るつもりです、そしてそれまで、リファレンスは私たちが持っている最も近いものです。</target>
        </trans-unit>
        <trans-unit id="663b39c893a31add869d68d1a6799a4bd0c74e8d" translate="yes" xml:space="preserve">
          <source>Finally, we need to check for the environment variable. The functions for working with environment variables are in the &lt;code&gt;env&lt;/code&gt; module in the standard library, so we want to bring that module into scope with a &lt;code&gt;use std::env;&lt;/code&gt; line at the top of &lt;em&gt;src/lib.rs&lt;/em&gt;. Then we&amp;rsquo;ll use the &lt;code&gt;var&lt;/code&gt; function from the &lt;code&gt;env&lt;/code&gt; module to check for an environment variable named &lt;code&gt;CASE_INSENSITIVE&lt;/code&gt;, as shown in Listing 12-23.</source>
          <target state="translated">最後に、環境変数を確認する必要があります。環境変数を操作するための関数は標準ライブラリの &lt;code&gt;env&lt;/code&gt; モジュールにあるので、 &lt;code&gt;use std::env;&lt;/code&gt; してそのモジュールをスコープに入れたいと思います。&lt;em&gt;src / lib.rsの&lt;/em&gt;上部の行。次に、リスト12-23に示すように、 &lt;code&gt;env&lt;/code&gt; モジュールの &lt;code&gt;var&lt;/code&gt; 関数を使用して、 &lt;code&gt;CASE_INSENSITIVE&lt;/code&gt; という名前の環境変数をチェックします。</target>
        </trans-unit>
        <trans-unit id="7b94f451664fd622143f67b7930e9fe770df8ffa" translate="yes" xml:space="preserve">
          <source>Finally, we print the vector using the debug formatter, &lt;code&gt;:?&lt;/code&gt;. Let&amp;rsquo;s try running the code first with no arguments and then with two arguments:</source>
          <target state="translated">最後に、デバッグフォーマッタを使用してベクターを出力し &lt;code&gt;:?&lt;/code&gt; 。最初に引数なしで、次に2つの引数付きでコードを実行してみましょう。</target>
        </trans-unit>
        <trans-unit id="b161bc0b0c419ae3078ec5bae46ff2b23172929b" translate="yes" xml:space="preserve">
          <source>Finally, we&amp;rsquo;ll discuss &lt;em&gt;lifetimes&lt;/em&gt;, a variety of generics that give the compiler information about how references relate to each other. Lifetimes allow us to borrow values in many situations while still enabling the compiler to check that the references are valid.</source>
          <target state="translated">最後に、&lt;em&gt;ライフタイム&lt;/em&gt;について説明します。これは、参照が相互にどのように関連しているかについてコンパイラー情報を提供するさまざまなジェネリックです。ライフタイムにより、コンパイラが参照が有効であることを確認しながら、多くの状況で値を借りることができます。</target>
        </trans-unit>
        <trans-unit id="d7a0dc1697c1346659c0be4f103861518f7b9d81" translate="yes" xml:space="preserve">
          <source>Finally, we&amp;rsquo;ll explore some advanced features related to functions and closures, which include function pointers and returning closures.</source>
          <target state="translated">最後に、関数ポインタと戻りクロージャを含む、関数とクロージャに関連するいくつかの高度な機能を探ります。</target>
        </trans-unit>
        <trans-unit id="171b5cf2cd61ebf1db80d501121ab244d56de9bf" translate="yes" xml:space="preserve">
          <source>Find a thread pool crate on &lt;a href=&quot;https://crates.io/&quot;&gt;crates.io&lt;/a&gt; and implement a similar web server using the crate instead. Then compare its API and robustness to the thread pool we implemented.</source>
          <target state="translated">&lt;a href=&quot;https://crates.io/&quot;&gt;crates.ioで&lt;/a&gt;スレッドプールクレートを見つけ、代わりにクレートを使用して同様のWebサーバーを実装します。次に、そのAPIと堅牢性を、実装したスレッドプールと比較します。</target>
        </trans-unit>
        <trans-unit id="46a827a2f0dc244988c76bf6fe0fe311647c9125" translate="yes" xml:space="preserve">
          <source>Find the maximum value:</source>
          <target state="translated">最大値を求めます。</target>
        </trans-unit>
        <trans-unit id="60191f2292bd928f112e13ade98b13a4839ed4f4" translate="yes" xml:space="preserve">
          <source>Finds the maximum of the current value and the argument &lt;code&gt;val&lt;/code&gt;, and sets the new value to the result.</source>
          <target state="translated">現在の値と引数 &lt;code&gt;val&lt;/code&gt; の最大値を見つけ、新しい値を結果に設定します。</target>
        </trans-unit>
        <trans-unit id="498de5df28b597678df8cbe9a80720213d72aed5" translate="yes" xml:space="preserve">
          <source>Finds the minimum of the current value and the argument &lt;code&gt;val&lt;/code&gt;, and sets the new value to the result.</source>
          <target state="translated">現在の値と引数 &lt;code&gt;val&lt;/code&gt; の最小値を検索し、新しい値を結果に設定します。</target>
        </trans-unit>
        <trans-unit id="e3e69bc01095a6f3fac0836e7beb312d9c2aefe1" translate="yes" xml:space="preserve">
          <source>Finds the next &lt;a href=&quot;enum.searchstep#variant.Match&quot;&gt;&lt;code&gt;Match&lt;/code&gt;&lt;/a&gt; result. See &lt;a href=&quot;trait.reversesearcher#tymethod.next_back&quot;&gt;&lt;code&gt;next_back()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次の&lt;a href=&quot;enum.searchstep#variant.Match&quot;&gt; &lt;code&gt;Match&lt;/code&gt; &lt;/a&gt;結果を検索します。&lt;a href=&quot;trait.reversesearcher#tymethod.next_back&quot;&gt; &lt;code&gt;next_back()&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ad0385924037131ded8a259e11b4749e29f93d51" translate="yes" xml:space="preserve">
          <source>Finds the next &lt;a href=&quot;enum.searchstep#variant.Match&quot;&gt;&lt;code&gt;Match&lt;/code&gt;&lt;/a&gt; result. See &lt;a href=&quot;trait.reversesearcher#tymethod.next_back&quot;&gt;&lt;code&gt;next_back()&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;trait.reversesearcher#method.next_match_back&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">次の&lt;a href=&quot;enum.searchstep#variant.Match&quot;&gt; &lt;code&gt;Match&lt;/code&gt; &lt;/a&gt;結果を検索します。&lt;a href=&quot;trait.reversesearcher#tymethod.next_back&quot;&gt; &lt;code&gt;next_back()&lt;/code&gt; を&lt;/a&gt;参照してください。&lt;a href=&quot;trait.reversesearcher#method.next_match_back&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3a10a45ca33d7ae22aa5bce3d25e091693c4a83a" translate="yes" xml:space="preserve">
          <source>Finds the next &lt;a href=&quot;enum.searchstep#variant.Match&quot;&gt;&lt;code&gt;Match&lt;/code&gt;&lt;/a&gt; result. See &lt;a href=&quot;trait.searcher#tymethod.next&quot;&gt;&lt;code&gt;next()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次の&lt;a href=&quot;enum.searchstep#variant.Match&quot;&gt; &lt;code&gt;Match&lt;/code&gt; &lt;/a&gt;結果を検索します。&lt;a href=&quot;trait.searcher#tymethod.next&quot;&gt; &lt;code&gt;next()&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="69156046927a7cd67c7d9e462b0e5fcab34a0d88" translate="yes" xml:space="preserve">
          <source>Finds the next &lt;a href=&quot;enum.searchstep#variant.Match&quot;&gt;&lt;code&gt;Match&lt;/code&gt;&lt;/a&gt; result. See &lt;a href=&quot;trait.searcher#tymethod.next&quot;&gt;&lt;code&gt;next()&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;trait.searcher#method.next_match&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">次の&lt;a href=&quot;enum.searchstep#variant.Match&quot;&gt; &lt;code&gt;Match&lt;/code&gt; &lt;/a&gt;結果を検索します。&lt;a href=&quot;trait.searcher#tymethod.next&quot;&gt; &lt;code&gt;next()&lt;/code&gt; を&lt;/a&gt;参照してください。&lt;a href=&quot;trait.searcher#method.next_match&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1adaf75dd08f31b2a6e16fb196782a3e2358d10d" translate="yes" xml:space="preserve">
          <source>Finds the next &lt;a href=&quot;enum.searchstep#variant.Reject&quot;&gt;&lt;code&gt;Reject&lt;/code&gt;&lt;/a&gt; result. See &lt;a href=&quot;trait.reversesearcher#tymethod.next_back&quot;&gt;&lt;code&gt;next_back()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次の&lt;a href=&quot;enum.searchstep#variant.Reject&quot;&gt; &lt;code&gt;Reject&lt;/code&gt; &lt;/a&gt;結果を検索します。&lt;a href=&quot;trait.reversesearcher#tymethod.next_back&quot;&gt; &lt;code&gt;next_back()&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a293f6cc0a4dc35516ad7c5ff771448e15ba3002" translate="yes" xml:space="preserve">
          <source>Finds the next &lt;a href=&quot;enum.searchstep#variant.Reject&quot;&gt;&lt;code&gt;Reject&lt;/code&gt;&lt;/a&gt; result. See &lt;a href=&quot;trait.reversesearcher#tymethod.next_back&quot;&gt;&lt;code&gt;next_back()&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;trait.reversesearcher#method.next_reject_back&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">次の&lt;a href=&quot;enum.searchstep#variant.Reject&quot;&gt; &lt;code&gt;Reject&lt;/code&gt; &lt;/a&gt;結果を検索します。&lt;a href=&quot;trait.reversesearcher#tymethod.next_back&quot;&gt; &lt;code&gt;next_back()&lt;/code&gt; を&lt;/a&gt;参照してください。&lt;a href=&quot;trait.reversesearcher#method.next_reject_back&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fcaccecdc2e217c486e841419f3a046ccb423510" translate="yes" xml:space="preserve">
          <source>Finds the next &lt;a href=&quot;enum.searchstep#variant.Reject&quot;&gt;&lt;code&gt;Reject&lt;/code&gt;&lt;/a&gt; result. See &lt;a href=&quot;trait.searcher#tymethod.next&quot;&gt;&lt;code&gt;next()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;trait.searcher#method.next_match&quot;&gt;&lt;code&gt;next_match()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次の&lt;a href=&quot;enum.searchstep#variant.Reject&quot;&gt; &lt;code&gt;Reject&lt;/code&gt; &lt;/a&gt;結果を検索します。&lt;a href=&quot;trait.searcher#tymethod.next&quot;&gt; &lt;code&gt;next()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;trait.searcher#method.next_match&quot;&gt; &lt;code&gt;next_match()&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b33f904b27576d8886562d66556bcac59bfa6d4c" translate="yes" xml:space="preserve">
          <source>Finds the next &lt;a href=&quot;enum.searchstep#variant.Reject&quot;&gt;&lt;code&gt;Reject&lt;/code&gt;&lt;/a&gt; result. See &lt;a href=&quot;trait.searcher#tymethod.next&quot;&gt;&lt;code&gt;next()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;trait.searcher#method.next_match&quot;&gt;&lt;code&gt;next_match()&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;trait.searcher#method.next_reject&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">次の&lt;a href=&quot;enum.searchstep#variant.Reject&quot;&gt; &lt;code&gt;Reject&lt;/code&gt; &lt;/a&gt;結果を検索します。&lt;a href=&quot;trait.searcher#tymethod.next&quot;&gt; &lt;code&gt;next()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;trait.searcher#method.next_match&quot;&gt; &lt;code&gt;next_match()&lt;/code&gt; を&lt;/a&gt;参照してください。&lt;a href=&quot;trait.searcher#method.next_reject&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6e15e49aba2d1097c5b0c90f18a8985868ff5345" translate="yes" xml:space="preserve">
          <source>Finds the next &lt;code&gt;Match&lt;/code&gt; result. See &lt;code&gt;next()&lt;/code&gt;</source>
          <target state="translated">次の &lt;code&gt;Match&lt;/code&gt; 結果を検索します。 &lt;code&gt;next()&lt;/code&gt; を参照</target>
        </trans-unit>
        <trans-unit id="f756114721031a50a5d8ac031e3faff85aa6ddf5" translate="yes" xml:space="preserve">
          <source>Finds the next &lt;code&gt;Match&lt;/code&gt; result. See &lt;code&gt;next()&lt;/code&gt;&lt;a href=&quot;trait.searcher#method.next_match&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">次の &lt;code&gt;Match&lt;/code&gt; 結果を検索します。 &lt;code&gt;next()&lt;/code&gt; &lt;a href=&quot;trait.searcher#method.next_match&quot;&gt;を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f2240ff0cf3b8d663704cb6ee664b2dad69c1451" translate="yes" xml:space="preserve">
          <source>Finds the next &lt;code&gt;Match&lt;/code&gt; result. See &lt;code&gt;next_back()&lt;/code&gt;</source>
          <target state="translated">次の &lt;code&gt;Match&lt;/code&gt; 結果を検索します。 &lt;code&gt;next_back()&lt;/code&gt; を参照してください</target>
        </trans-unit>
        <trans-unit id="b818e5dcb2a1ad45e7017c0a12a4f4decc1c165c" translate="yes" xml:space="preserve">
          <source>Finds the next &lt;code&gt;Reject&lt;/code&gt; result. See &lt;code&gt;next()&lt;/code&gt; and &lt;code&gt;next_match()&lt;/code&gt;</source>
          <target state="translated">次の &lt;code&gt;Reject&lt;/code&gt; 結果を検索します。 &lt;code&gt;next()&lt;/code&gt; および &lt;code&gt;next_match()&lt;/code&gt; を参照してください</target>
        </trans-unit>
        <trans-unit id="b8a778d42413c82824cbf998f891d30368b19e92" translate="yes" xml:space="preserve">
          <source>Finds the next &lt;code&gt;Reject&lt;/code&gt; result. See &lt;code&gt;next()&lt;/code&gt; and &lt;code&gt;next_match()&lt;/code&gt;&lt;a href=&quot;trait.searcher#method.next_reject&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">次の &lt;code&gt;Reject&lt;/code&gt; 結果を検索します。 &lt;code&gt;next()&lt;/code&gt; および &lt;code&gt;next_match()&lt;/code&gt; &lt;a href=&quot;trait.searcher#method.next_reject&quot;&gt;を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d4ca03f0531ac97b63f1238433b5fa19d39bf3db" translate="yes" xml:space="preserve">
          <source>Finds the next &lt;code&gt;Reject&lt;/code&gt; result. See &lt;code&gt;next_back()&lt;/code&gt;</source>
          <target state="translated">次の &lt;code&gt;Reject&lt;/code&gt; 結果を検索します。 &lt;code&gt;next_back()&lt;/code&gt; を参照してください</target>
        </trans-unit>
        <trans-unit id="71299e80a415886028dd476494a1f27b4e8c0c3d" translate="yes" xml:space="preserve">
          <source>Finishes output and returns any error encountered.</source>
          <target state="translated">出力を終了し、エラーが発生した場合はそれを返します。</target>
        </trans-unit>
        <trans-unit id="2aa5b8ef6d4b44127ec3baa7d85c821bd5d9e7fb" translate="yes" xml:space="preserve">
          <source>First of all, The Rust Standard Library is divided into a number of focused modules, &lt;a href=&quot;#modules&quot;&gt;all listed further down this page&lt;/a&gt;. These modules are the bedrock upon which all of Rust is forged, and they have mighty names like &lt;a href=&quot;slice/index&quot;&gt;&lt;code&gt;std::slice&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;cmp/index&quot;&gt;&lt;code&gt;std::cmp&lt;/code&gt;&lt;/a&gt;. Modules' documentation typically includes an overview of the module along with examples, and are a smart place to start familiarizing yourself with the library.</source>
          <target state="translated">まず、Rust標準ライブラリはいくつかの重点モジュールに分割されており、&lt;a href=&quot;#modules&quot;&gt;すべてこのページの下にリストされています&lt;/a&gt;。これらのモジュールは、Rustがすべて偽造される基盤であり、&lt;a href=&quot;slice/index&quot;&gt; &lt;code&gt;std::slice&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;cmp/index&quot;&gt; &lt;code&gt;std::cmp&lt;/code&gt; &lt;/a&gt;などの強力な名前が付けられています。モジュールのドキュメントには通常、モジュールの概要と例が含まれており、ライブラリに慣れるのに最適な場所です。</target>
        </trans-unit>
        <trans-unit id="fc7b5a52488afcf282a02fd4d0b848ba0846b2b9" translate="yes" xml:space="preserve">
          <source>First, &lt;code&gt;s2&lt;/code&gt; has an &lt;code&gt;&amp;amp;&lt;/code&gt;, meaning that we&amp;rsquo;re adding a &lt;em&gt;reference&lt;/em&gt; of the second string to the first string because of the &lt;code&gt;s&lt;/code&gt; parameter in the &lt;code&gt;add&lt;/code&gt; function: we can only add a &lt;code&gt;&amp;amp;str&lt;/code&gt; to a &lt;code&gt;String&lt;/code&gt;; we can&amp;rsquo;t add two &lt;code&gt;String&lt;/code&gt; values together. But wait&amp;mdash;the type of &lt;code&gt;&amp;amp;s2&lt;/code&gt; is &lt;code&gt;&amp;amp;String&lt;/code&gt;, not &lt;code&gt;&amp;amp;str&lt;/code&gt;, as specified in the second parameter to &lt;code&gt;add&lt;/code&gt;. So why does Listing 8-18 compile?</source>
          <target state="translated">まず、 &lt;code&gt;s2&lt;/code&gt; が持っている &lt;code&gt;&amp;amp;&lt;/code&gt; 私たちが追加していることを意味し、&lt;em&gt;リファレンス&lt;/em&gt;ための最初の文字列に2番目の文字列のを &lt;code&gt;s&lt;/code&gt; 中のパラメータ &lt;code&gt;add&lt;/code&gt; 機能：我々だけ追加することができます &lt;code&gt;&amp;amp;str&lt;/code&gt; する &lt;code&gt;String&lt;/code&gt; 。 2つの &lt;code&gt;String&lt;/code&gt; 値を一緒に追加することはできません。しかし、の待機型 &lt;code&gt;&amp;amp;s2&lt;/code&gt; がある &lt;code&gt;&amp;amp;String&lt;/code&gt; ではない、 &lt;code&gt;&amp;amp;str&lt;/code&gt; のための2番目のパラメータで指定されているように、 &lt;code&gt;add&lt;/code&gt; 。では、なぜリスト8-18はコンパイルされるのでしょうか。</target>
        </trans-unit>
        <trans-unit id="2149e186bda6874699886cb87496264d05159bfb" translate="yes" xml:space="preserve">
          <source>First, Listing 5-6 shows how we create a new &lt;code&gt;User&lt;/code&gt; instance in &lt;code&gt;user2&lt;/code&gt; without the update syntax. We set new values for &lt;code&gt;email&lt;/code&gt; and &lt;code&gt;username&lt;/code&gt; but otherwise use the same values from &lt;code&gt;user1&lt;/code&gt; that we created in Listing 5-2.</source>
          <target state="translated">まず、リスト5-6は、更新構文なしで &lt;code&gt;user2&lt;/code&gt; に新しい &lt;code&gt;User&lt;/code&gt; インスタンスを作成する方法を示しています。 &lt;code&gt;email&lt;/code&gt; と &lt;code&gt;username&lt;/code&gt; に新しい値を設定しますが、それ以外の場合は、リスト5-2で作成した &lt;code&gt;user1&lt;/code&gt; からの同じ値を使用します。</target>
        </trans-unit>
        <trans-unit id="2b41d69eb26a6b40f4aae2f050715fea536b1f0a" translate="yes" xml:space="preserve">
          <source>First, Rust style is to indent with four spaces, not a tab.</source>
          <target state="translated">まず、Rustスタイルは、タブではなくスペース4つでインデントすることです。</target>
        </trans-unit>
        <trans-unit id="3040dcb3a93d5116af8b98dddf1679cc848e8028" translate="yes" xml:space="preserve">
          <source>First, a set of parentheses encompasses the whole pattern. A dollar sign (&lt;code&gt;$&lt;/code&gt;) is next, followed by a set of parentheses that captures values that match the pattern within the parentheses for use in the replacement code. Within &lt;code&gt;$()&lt;/code&gt; is &lt;code&gt;$x:expr&lt;/code&gt;, which matches any Rust expression and gives the expression the name &lt;code&gt;$x&lt;/code&gt;.</source>
          <target state="translated">まず、括弧のセットはパターン全体を囲みます。次にドル記号（ &lt;code&gt;$&lt;/code&gt; ）が続き、かっこ内のパターンに一致する値をキャプチャするかっこのセットが続き、置換コードで使用できます。 &lt;code&gt;$()&lt;/code&gt; 内には &lt;code&gt;$x:expr&lt;/code&gt; 、これは任意のRust式に一致し、式に &lt;code&gt;$x&lt;/code&gt; という名前を付けます。</target>
        </trans-unit>
        <trans-unit id="36f043a38969ebd0c1100d1946c0070f78f5083d" translate="yes" xml:space="preserve">
          <source>First, in Listing 16-6, we&amp;rsquo;ll create a channel but not do anything with it. Note that this won&amp;rsquo;t compile yet because Rust can&amp;rsquo;t tell what type of values we want to send over the channel.</source>
          <target state="translated">まず、リスト16-6では、チャネルを作成しますが、チャネルに対しては何も行いません。Rustがチャネルを介して送信する値のタイプを判別できないため、これはまだコンパイルされないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="a904d8b464a341807b2afce181cf10f340831790" translate="yes" xml:space="preserve">
          <source>First, let&amp;rsquo;s explore how our code might look if it did create a new thread for every connection. As mentioned earlier, this isn&amp;rsquo;t our final plan due to the problems with potentially spawning an unlimited number of threads, but it is a starting point. Listing 20-11 shows the changes to make to &lt;code&gt;main&lt;/code&gt; to spawn a new thread to handle each stream within the &lt;code&gt;for&lt;/code&gt; loop.</source>
          <target state="translated">最初に、すべての接続に対して新しいスレッドが作成された場合のコードの外観を見てみましょう。前述したように、無制限の数のスレッドを生成する可能性があるという問題があるため、これは最終的な計画ではありませんが、これは出発点です。リスト20-11は、 &lt;code&gt;for&lt;/code&gt; ループ内の各ストリームを処理するために新しいスレッドを生成するために &lt;code&gt;main&lt;/code&gt; に加える変更を示しています。</target>
        </trans-unit>
        <trans-unit id="e2d8fc1aab0782183ce43b898abd828e1a971de0" translate="yes" xml:space="preserve">
          <source>First, let&amp;rsquo;s observe how the content printed by &lt;code&gt;minigrep&lt;/code&gt; is currently being written to standard output, including any error messages we want to write to standard error instead. We&amp;rsquo;ll do that by redirecting the standard output stream to a file while also intentionally causing an error. We won&amp;rsquo;t redirect the standard error stream, so any content sent to standard error will continue to display on the screen.</source>
          <target state="translated">最初に、 &lt;code&gt;minigrep&lt;/code&gt; によって印刷されたコンテンツが標準出力に現在どのように書き込まれているかを観察します。代わりに、標準エラーに書き込みたいエラーメッセージがあります。これを行うには、意図的にエラーを発生させながら、標準出力ストリームをファイルにリダイレクトします。標準エラーストリームはリダイレクトされないため、標準エラーに送信されたコンテンツは引き続き画面に表示されます。</target>
        </trans-unit>
        <trans-unit id="299d434ba9482e48711594e406595923ccc6a45d" translate="yes" xml:space="preserve">
          <source>First, let&amp;rsquo;s take a look at the ownership rules. Keep these rules in mind as we work through the examples that illustrate them:</source>
          <target state="translated">まず、所有権のルールを見てみましょう。これらのルールを説明する例を検討するときは、これらのルールに留意してください。</target>
        </trans-unit>
        <trans-unit id="1e6993f10ab80d08ed459d70a6e9b72bea9f1bb6" translate="yes" xml:space="preserve">
          <source>First, notice that all the tuple code in the variable declaration and the function return value is gone. Second, note that we pass &lt;code&gt;&amp;amp;s1&lt;/code&gt; into &lt;code&gt;calculate_length&lt;/code&gt; and, in its definition, we take &lt;code&gt;&amp;amp;String&lt;/code&gt; rather than &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">まず、変数宣言のすべてのタプルコードと関数の戻り値がなくなっていることに注意してください。第二に、我々が通過することをノート &lt;code&gt;&amp;amp;s1&lt;/code&gt; に &lt;code&gt;calculate_length&lt;/code&gt; と、その定義では、我々が取る &lt;code&gt;&amp;amp;String&lt;/code&gt; ではなく &lt;code&gt;String&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="60e88a2c11a7190bdc4e6ea4f275db2a41748c26" translate="yes" xml:space="preserve">
          <source>First, our &lt;code&gt;main&lt;/code&gt; function now performs two tasks: it parses arguments and reads files. For such a small function, this isn&amp;rsquo;t a major problem. However, if we continue to grow our program inside &lt;code&gt;main&lt;/code&gt;, the number of separate tasks the &lt;code&gt;main&lt;/code&gt; function handles will increase. As a function gains responsibilities, it becomes more difficult to reason about, harder to test, and harder to change without breaking one of its parts. It&amp;rsquo;s best to separate functionality so each function is responsible for one task.</source>
          <target state="translated">まず、 &lt;code&gt;main&lt;/code&gt; 関数は2つのタスクを実行します。引数を解析し、ファイルを読み取ります。このような小さな関数の場合、これは大きな問題ではありません。ただし、プログラムを &lt;code&gt;main&lt;/code&gt; 内で成長させ続けると、 &lt;code&gt;main&lt;/code&gt; 関数が処理する個別のタスクの数が増加します。関数が責任を持つようになると、その部分の1つを壊すことなく、推論が難しくなり、テストが難しくなり、変更が難しくなります。各機能が1つのタスクを担当するように、機能を分離することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="2531f22fd6a5bf69e9d2107ddeefb2d48bde3d1b" translate="yes" xml:space="preserve">
          <source>First, we add a &lt;code&gt;use&lt;/code&gt; line: &lt;code&gt;use rand::Rng&lt;/code&gt;. The &lt;code&gt;Rng&lt;/code&gt; trait defines methods that random number generators implement, and this trait must be in scope for us to use those methods. Chapter 10 will cover traits in detail.</source>
          <target state="translated">まず、 &lt;code&gt;use&lt;/code&gt; 行を追加します： &lt;code&gt;use rand::Rng&lt;/code&gt; 。 &lt;code&gt;Rng&lt;/code&gt; トレイトを定義する方法は、乱数発生器は実装していること、そして私たちはこれらのメソッドを使用するため、この特性は、スコープ内になければなりません。第10章では、特性について詳しく説明します。</target>
        </trans-unit>
        <trans-unit id="5620d966096cc525a97c7b483a8ab91d3a93c5d6" translate="yes" xml:space="preserve">
          <source>First, we add another &lt;code&gt;use&lt;/code&gt; statement to bring in a relevant part of the standard library: we need &lt;code&gt;std::fs&lt;/code&gt; to handle files.</source>
          <target state="translated">最初に、標準ライブラリの関連部分を取り込む別の &lt;code&gt;use&lt;/code&gt; ステートメントを追加します。ファイルを処理するには &lt;code&gt;std::fs&lt;/code&gt; が必要です。</target>
        </trans-unit>
        <trans-unit id="bc25543e6bea82949a22fa47ac93b7c3b107613c" translate="yes" xml:space="preserve">
          <source>First, we bring the &lt;code&gt;std::env&lt;/code&gt; module into scope with a &lt;code&gt;use&lt;/code&gt; statement so we can use its &lt;code&gt;args&lt;/code&gt; function. Notice that the &lt;code&gt;std::env::args&lt;/code&gt; function is nested in two levels of modules. As we discussed in &lt;a href=&quot;ch07-04-bringing-paths-into-scope-with-the-use-keyword#creating-idiomatic-use-paths&quot;&gt;Chapter 7&lt;/a&gt;, in cases where the desired function is nested in more than one module, it&amp;rsquo;s conventional to bring the parent module into scope rather than the function. By doing so, we can easily use other functions from &lt;code&gt;std::env&lt;/code&gt;. It&amp;rsquo;s also less ambiguous than adding &lt;code&gt;use std::env::args&lt;/code&gt; and then calling the function with just &lt;code&gt;args&lt;/code&gt;, because &lt;code&gt;args&lt;/code&gt; might easily be mistaken for a function that&amp;rsquo;s defined in the current module.</source>
          <target state="translated">まず、 &lt;code&gt;std::env&lt;/code&gt; モジュールを &lt;code&gt;use&lt;/code&gt; ステートメントでスコープに入れ、 &lt;code&gt;args&lt;/code&gt; 関数を使用できるようにします。 &lt;code&gt;std::env::args&lt;/code&gt; 関数が2つのレベルのモジュールにネストされていることに注意してください。&lt;a href=&quot;ch07-04-bringing-paths-into-scope-with-the-use-keyword#creating-idiomatic-use-paths&quot;&gt;第7章で&lt;/a&gt;説明したように、目的の関数が複数のモジュールにネストされている場合、通常は、関数ではなく親モジュールをスコープに含めます。そうすることで、 &lt;code&gt;std::env&lt;/code&gt; から他の関数​​を簡単に使用できます。それも追加未満曖昧だ &lt;code&gt;use std::env::args&lt;/code&gt; 当時とだけで関数を呼び出す &lt;code&gt;args&lt;/code&gt; ので、 &lt;code&gt;args&lt;/code&gt; 現在のモジュールで定義されている関数と簡単に混同される可能性があります。</target>
        </trans-unit>
        <trans-unit id="77c43259a6ef4fde9dcd2d5039e611a741bb307a" translate="yes" xml:space="preserve">
          <source>First, we call &lt;code&gt;into_iter()&lt;/code&gt; on the value. Then, we match on the iterator that returns, calling &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;&lt;code&gt;next&lt;/code&gt;&lt;/a&gt; over and over until we see a &lt;code&gt;None&lt;/code&gt;. At that point, we &lt;code&gt;break&lt;/code&gt; out of the loop, and we're done iterating.</source>
          <target state="translated">まず、値に対して &lt;code&gt;into_iter()&lt;/code&gt; を呼び出します。その後、我々は呼び出し、反復子そのリターンに一致する&lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt; &lt;code&gt;next&lt;/code&gt; &lt;/a&gt;私たちが見なくなるまで何度も &lt;code&gt;None&lt;/code&gt; 。その時点で、我々は &lt;code&gt;break&lt;/code&gt; ループのうち、私たちは反復を行っています。</target>
        </trans-unit>
        <trans-unit id="6ab5c3115b5c520a97acc958c118c302f43db0ef" translate="yes" xml:space="preserve">
          <source>First, we create a new trait named &lt;code&gt;FnBox&lt;/code&gt;. This trait has the one method &lt;code&gt;call_box&lt;/code&gt;, which is similar to the &lt;code&gt;call&lt;/code&gt; methods on the other &lt;code&gt;Fn*&lt;/code&gt; traits except that it takes &lt;code&gt;self: Box&amp;lt;Self&amp;gt;&lt;/code&gt; to take ownership of &lt;code&gt;self&lt;/code&gt; and move the value out of the &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">まず、 &lt;code&gt;FnBox&lt;/code&gt; という名前の新しいトレイトを作成します。この特性は、1つのメソッドがある &lt;code&gt;call_box&lt;/code&gt; に似て、 &lt;code&gt;call&lt;/code&gt; その他の方法 &lt;code&gt;Fn*&lt;/code&gt; がかかっていることを除いて特色 &lt;code&gt;self: Box&amp;lt;Self&amp;gt;&lt;/code&gt; の所有権取るために &lt;code&gt;self&lt;/code&gt; の外に値を移動する &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1ff037ac0d1711710cacef25650f7925ee9931dc" translate="yes" xml:space="preserve">
          <source>First, we define a struct named &lt;code&gt;Guess&lt;/code&gt; that has a field named &lt;code&gt;value&lt;/code&gt; that holds an &lt;code&gt;i32&lt;/code&gt;. This is where the number will be stored.</source>
          <target state="translated">まず、 &lt;code&gt;i32&lt;/code&gt; を保持する &lt;code&gt;value&lt;/code&gt; という名前のフィールドを持つ &lt;code&gt;Guess&lt;/code&gt; という名前の構造体を定義します。これは、番号が格納される場所です。</target>
        </trans-unit>
        <trans-unit id="7d453ea285cf874f5e20bf0a44d8de3966ff594c" translate="yes" xml:space="preserve">
          <source>First, we had to change &lt;code&gt;s&lt;/code&gt; to be &lt;code&gt;mut&lt;/code&gt;. Then we had to create a mutable reference with &lt;code&gt;&amp;amp;mut s&lt;/code&gt; and accept a mutable reference with &lt;code&gt;some_string: &amp;amp;mut String&lt;/code&gt;.</source>
          <target state="translated">まず、 &lt;code&gt;s&lt;/code&gt; を &lt;code&gt;mut&lt;/code&gt; に変更する必要がありました。次に、 &lt;code&gt;&amp;amp;mut s&lt;/code&gt; を使用して可変参照を作成し、 &lt;code&gt;some_string: &amp;amp;mut String&lt;/code&gt; を使用して可変参照を受け入れる必要がありました。</target>
        </trans-unit>
        <trans-unit id="e1a3297145da0b9ddf78f8d191794fb1446a4150" translate="yes" xml:space="preserve">
          <source>First, we hardcode the data corresponding to the &lt;em&gt;/&lt;/em&gt; request into the &lt;code&gt;get&lt;/code&gt; variable. Because we&amp;rsquo;re reading raw bytes into the buffer, we transform &lt;code&gt;get&lt;/code&gt; into a byte string by adding the &lt;code&gt;b&quot;&quot;&lt;/code&gt; byte string syntax at the start of the content data. Then we check whether &lt;code&gt;buffer&lt;/code&gt; starts with the bytes in &lt;code&gt;get&lt;/code&gt;. If it does, it means we&amp;rsquo;ve received a well-formed request to &lt;em&gt;/&lt;/em&gt;, which is the success case we&amp;rsquo;ll handle in the &lt;code&gt;if&lt;/code&gt; block that returns the contents of our HTML file.</source>
          <target state="translated">まず、&lt;em&gt;/&lt;/em&gt;リクエストに対応するデータを &lt;code&gt;get&lt;/code&gt; 変数にハードコードします。生のバイトをバッファに読み込んでいるため、コンテンツデータの先頭に &lt;code&gt;b&quot;&quot;&lt;/code&gt; バイト文字列構文を追加することにより、 &lt;code&gt;get&lt;/code&gt; をバイト文字列に変換します。次に、 &lt;code&gt;buffer&lt;/code&gt; が &lt;code&gt;get&lt;/code&gt; のバイトで始まるかどうかを確認します。そうであれば、&lt;em&gt;/&lt;/em&gt;への整形式のリクエストを受け取ったことを意味します。これは、HTMLファイルのコンテンツを返す &lt;code&gt;if&lt;/code&gt; ブロックで処理する成功例です。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="67c337bec6fe5e9baa6919a72ca1dc381f0c72e6" translate="yes" xml:space="preserve">
          <source>First, we loop through each of the thread pool &lt;code&gt;workers&lt;/code&gt;. We use &lt;code&gt;&amp;amp;mut&lt;/code&gt; for this because &lt;code&gt;self&lt;/code&gt; is a mutable reference, and we also need to be able to mutate &lt;code&gt;worker&lt;/code&gt;. For each worker, we print a message saying that this particular worker is shutting down, and then we call &lt;code&gt;join&lt;/code&gt; on that worker&amp;rsquo;s thread. If the call to &lt;code&gt;join&lt;/code&gt; fails, we use &lt;code&gt;unwrap&lt;/code&gt; to make Rust panic and go into an ungraceful shutdown.</source>
          <target state="translated">まず、各スレッドプール &lt;code&gt;workers&lt;/code&gt; をループ処理します。 &lt;code&gt;&amp;amp;mut&lt;/code&gt; を使用するのは、 &lt;code&gt;self&lt;/code&gt; が変更可能な参照であるためです。また、 &lt;code&gt;worker&lt;/code&gt; を変更できる必要もあります。各ワーカーについて、この特定のワーカーがシャットダウンしているというメッセージを出力し、そのワーカーのスレッドで &lt;code&gt;join&lt;/code&gt; を呼び出します。 &lt;code&gt;join&lt;/code&gt; の呼び出しが失敗した場合は、 &lt;code&gt;unwrap&lt;/code&gt; を使用してRustをパニックにして異常なシャットダウンを開始します。</target>
        </trans-unit>
        <trans-unit id="4c15dd08c54ccaef878863fcce7531d8669281a2" translate="yes" xml:space="preserve">
          <source>First, we lowercase the &lt;code&gt;query&lt;/code&gt; string and store it in a shadowed variable with the same name. Calling &lt;code&gt;to_lowercase&lt;/code&gt; on the query is necessary so no matter whether the user&amp;rsquo;s query is &lt;code&gt;&quot;rust&quot;&lt;/code&gt;, &lt;code&gt;&quot;RUST&quot;&lt;/code&gt;, &lt;code&gt;&quot;Rust&quot;&lt;/code&gt;, or &lt;code&gt;&quot;rUsT&quot;&lt;/code&gt;, we&amp;rsquo;ll treat the query as if it were &lt;code&gt;&quot;rust&quot;&lt;/code&gt; and be insensitive to the case.</source>
          <target state="translated">最初に、 &lt;code&gt;query&lt;/code&gt; 文字列を小文字にして、同じ名前の影付き変数に格納します。呼び出し &lt;code&gt;to_lowercase&lt;/code&gt; ユーザーのクエリがあるかどうかに関係なくので、必要なクエリ上の &lt;code&gt;&quot;rust&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;RUST&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;Rust&quot;&lt;/code&gt; 、または &lt;code&gt;&quot;rUsT&quot;&lt;/code&gt; 、我々はそれがであるかのようにクエリをおごるよ &lt;code&gt;&quot;rust&quot;&lt;/code&gt; との影響を受けないこと場合。</target>
        </trans-unit>
        <trans-unit id="65f94c7193ac8d89c46d0cf4b30dc2e56b5807e0" translate="yes" xml:space="preserve">
          <source>First, we lowercase the &lt;code&gt;query&lt;/code&gt; string and store it in a shadowed variable with the same name. Calling &lt;code&gt;to_lowercase&lt;/code&gt; on the query is necessary so no matter whether the user&amp;rsquo;s query is &lt;code&gt;&quot;rust&quot;&lt;/code&gt;, &lt;code&gt;&quot;RUST&quot;&lt;/code&gt;, &lt;code&gt;&quot;Rust&quot;&lt;/code&gt;, or &lt;code&gt;&quot;rUsT&quot;&lt;/code&gt;, we&amp;rsquo;ll treat the query as if it were &lt;code&gt;&quot;rust&quot;&lt;/code&gt; and be insensitive to the case. While &lt;code&gt;to_lowercase&lt;/code&gt; will handle basic Unicode, it won't be 100% accurate. If we were writing a real application, we'd want to do a bit more work here, but this section is about environment variables, not Unicode, so we'll leave it at that here.</source>
          <target state="translated">まず、 &lt;code&gt;query&lt;/code&gt; 文字列を小文字にして、同じ名前のシャドウ変数に格納します。クエリで &lt;code&gt;to_lowercase&lt;/code&gt; を呼び出す必要があるため、ユーザーのクエリが &lt;code&gt;&quot;rust&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;RUST&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;Rust&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;rUsT&quot;&lt;/code&gt; であっても、クエリは &lt;code&gt;&quot;rust&quot;&lt;/code&gt; であるかのように扱われ、場合。一方で &lt;code&gt;to_lowercase&lt;/code&gt; は、基本的なUnicodeを処理する、それが100％正確ではありません。実際のアプリケーションを作成している場合は、ここでもう少し作業を行いたいと思いますが、このセクションはUnicodeではなく環境変数に関するものなので、ここではそのままにしておきます。</target>
        </trans-unit>
        <trans-unit id="23da79e53710cbb9d9524e2acf5446ad6eea5d1a" translate="yes" xml:space="preserve">
          <source>First, we&amp;rsquo;ll review how to extract a function to reduce code duplication. Next, we&amp;rsquo;ll use the same technique to make a generic function from two functions that differ only in the types of their parameters. We&amp;rsquo;ll also explain how to use generic types in struct and enum definitions.</source>
          <target state="translated">最初に、コードの重複を減らすために関数を抽出する方法を確認します。次に、同じ手法を使用して、パラメーターのタイプのみが異なる2つの関数からジェネリック関数を作成します。また、構造体および列挙型の定義でジェネリック型を使用する方法についても説明します。</target>
        </trans-unit>
        <trans-unit id="ab7b98b1216839b90c2ba36a3e1d94b2940e258c" translate="yes" xml:space="preserve">
          <source>First, we&amp;rsquo;ll use a method named &lt;code&gt;level&lt;/code&gt; whose only parameter is a reference to &lt;code&gt;self&lt;/code&gt; and whose return value is an &lt;code&gt;i32&lt;/code&gt;, which is not a reference to anything:</source>
          <target state="translated">最初に、唯一のパラメーターが &lt;code&gt;self&lt;/code&gt; への参照であり、戻り値が &lt;code&gt;i32&lt;/code&gt; であり、何への参照でもない &lt;code&gt;level&lt;/code&gt; という名前のメソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="ebc1b5224daaa43800af474dfe2a67270d2c64a8" translate="yes" xml:space="preserve">
          <source>First, you aren&amp;rsquo;t allowed to use &lt;code&gt;mut&lt;/code&gt; with constants. Constants aren&amp;rsquo;t just immutable by default&amp;mdash;they&amp;rsquo;re always immutable.</source>
          <target state="translated">まず、定数で &lt;code&gt;mut&lt;/code&gt; を使用することはできません。定数はデフォルトでは不変ではなく、常に不変です。</target>
        </trans-unit>
        <trans-unit id="a37b907fb3b08482758f4b94eb7905467643c0cc" translate="yes" xml:space="preserve">
          <source>First: what are thin and fat pointers?</source>
          <target state="translated">はじめに:細くて太っているポインターとは?</target>
        </trans-unit>
        <trans-unit id="8f4320a9bbe54780e4b1be068359ce0c3e42263e" translate="yes" xml:space="preserve">
          <source>Fix Your Code with &lt;code id=&quot;fix-your-code-with-rustfix&quot;&gt;rustfix&lt;/code&gt;</source>
          <target state="translated">&lt;code id=&quot;fix-your-code-with-rustfix&quot;&gt;rustfix&lt;/code&gt; を使用してコードを修正する</target>
        </trans-unit>
        <trans-unit id="456cf8a255eb59ebf894cb52911a86af4e0bff54" translate="yes" xml:space="preserve">
          <source>Fixed example:</source>
          <target state="translated">固定例。</target>
        </trans-unit>
        <trans-unit id="46b15ff97ce4188ff129110dc0f200273d75d6f6" translate="yes" xml:space="preserve">
          <source>FixedSizeArray</source>
          <target state="translated">FixedSizeArray</target>
        </trans-unit>
        <trans-unit id="10febdb2af33240d31157815d06600628d271c1b" translate="yes" xml:space="preserve">
          <source>FixedSizeArray::as_mut_slice</source>
          <target state="translated">FixedSizeArray::as_mut_slice</target>
        </trans-unit>
        <trans-unit id="f3cdc8722aecf5254db9dc4b899708cf59624ff8" translate="yes" xml:space="preserve">
          <source>FixedSizeArray::as_slice</source>
          <target state="translated">FixedSizeArray::as_slice</target>
        </trans-unit>
        <trans-unit id="74d70129228428cb4a00fa07c90df5cecbd391db" translate="yes" xml:space="preserve">
          <source>Fixing the &lt;code id=&quot;fixing-the-largest-function-with-trait-bounds&quot;&gt;largest&lt;/code&gt; Function with Trait Bounds</source>
          <target state="translated">特性の境界で &lt;code id=&quot;fixing-the-largest-function-with-trait-bounds&quot;&gt;largest&lt;/code&gt; 関数を修正する</target>
        </trans-unit>
        <trans-unit id="bbed51341da047b6a94c2210a2cc73a851e30623" translate="yes" xml:space="preserve">
          <source>Fixing the Error Handling</source>
          <target state="translated">エラー処理の修正</target>
        </trans-unit>
        <trans-unit id="027245ccd994e4fdf64ec804047d0b807eb6ca26" translate="yes" xml:space="preserve">
          <source>Flag indicating what form of alignment was requested.</source>
          <target state="translated">どのような形式のアライメントが要求されたかを示すフラグ。</target>
        </trans-unit>
        <trans-unit id="da6ec40326ab64f852f9b68303a74a8d34fcffbf" translate="yes" xml:space="preserve">
          <source>Flags for formatting</source>
          <target state="translated">書式化のためのフラグ</target>
        </trans-unit>
        <trans-unit id="c5bda5b47fc05cd947485d9dcbc97c118c87af17" translate="yes" xml:space="preserve">
          <source>FlatMap</source>
          <target state="translated">FlatMap</target>
        </trans-unit>
        <trans-unit id="55f7ffcafa8a176774484e54fc484f1dca47b72e" translate="yes" xml:space="preserve">
          <source>FlatMap::all</source>
          <target state="translated">FlatMap::all</target>
        </trans-unit>
        <trans-unit id="831495e089cc3e2bd763a99a1e31c54c37f852a0" translate="yes" xml:space="preserve">
          <source>FlatMap::any</source>
          <target state="translated">FlatMap::any</target>
        </trans-unit>
        <trans-unit id="f416c20467c8d199e5325633d964ae6b0bdccc36" translate="yes" xml:space="preserve">
          <source>FlatMap::borrow</source>
          <target state="translated">FlatMap::borrow</target>
        </trans-unit>
        <trans-unit id="0f50fa0b8ab26f20cea1f5fb6f3730a5604c35d1" translate="yes" xml:space="preserve">
          <source>FlatMap::borrow_mut</source>
          <target state="translated">FlatMap::borrow_mut</target>
        </trans-unit>
        <trans-unit id="89c9cad149062b6897a19684327c3ae5982ebace" translate="yes" xml:space="preserve">
          <source>FlatMap::by_ref</source>
          <target state="translated">FlatMap::by_ref</target>
        </trans-unit>
        <trans-unit id="c6f0a1b16fccff09f7335c088d321c69b06ca959" translate="yes" xml:space="preserve">
          <source>FlatMap::chain</source>
          <target state="translated">FlatMap::chain</target>
        </trans-unit>
        <trans-unit id="2d45e75c6f6700f82e192c77480ec8d8d907e11e" translate="yes" xml:space="preserve">
          <source>FlatMap::clone</source>
          <target state="translated">FlatMap::clone</target>
        </trans-unit>
        <trans-unit id="e5214baf27582eace148fdb9cb8f95195ba3bf8c" translate="yes" xml:space="preserve">
          <source>FlatMap::clone_from</source>
          <target state="translated">FlatMap::clone_from</target>
        </trans-unit>
        <trans-unit id="c32a40933a63eee1e8a0cbd457ef7c05726a69b2" translate="yes" xml:space="preserve">
          <source>FlatMap::clone_into</source>
          <target state="translated">FlatMap::clone_into</target>
        </trans-unit>
        <trans-unit id="c1f27e08be29b514c198bc7981660e3e47bd811a" translate="yes" xml:space="preserve">
          <source>FlatMap::cloned</source>
          <target state="translated">FlatMap::cloned</target>
        </trans-unit>
        <trans-unit id="4dfb53dc9aa97c2971aa6c756cdbd0bdb3436919" translate="yes" xml:space="preserve">
          <source>FlatMap::cmp</source>
          <target state="translated">FlatMap::cmp</target>
        </trans-unit>
        <trans-unit id="2cdaf60c33826b55dd432eda68ef7f30e20db492" translate="yes" xml:space="preserve">
          <source>FlatMap::collect</source>
          <target state="translated">FlatMap::collect</target>
        </trans-unit>
        <trans-unit id="92b5287378b975cdd6eb3d34fc3ed8fbc47bd575" translate="yes" xml:space="preserve">
          <source>FlatMap::copied</source>
          <target state="translated">FlatMap::copied</target>
        </trans-unit>
        <trans-unit id="6e26ebde4a566056367b49d24d357a4de5ea7ec1" translate="yes" xml:space="preserve">
          <source>FlatMap::count</source>
          <target state="translated">FlatMap::count</target>
        </trans-unit>
        <trans-unit id="c627c3238d8bca5bf9bd82f8615c5b311d3dc317" translate="yes" xml:space="preserve">
          <source>FlatMap::cycle</source>
          <target state="translated">FlatMap::cycle</target>
        </trans-unit>
        <trans-unit id="8c9d482a5ba44802cd6b475ac707537e0b74c551" translate="yes" xml:space="preserve">
          <source>FlatMap::enumerate</source>
          <target state="translated">FlatMap::enumerate</target>
        </trans-unit>
        <trans-unit id="e1b10ed4bcc2c007a3876d69ca7f6998dfc386e9" translate="yes" xml:space="preserve">
          <source>FlatMap::eq</source>
          <target state="translated">FlatMap::eq</target>
        </trans-unit>
        <trans-unit id="59aade0b7a453e9f98a9103c697f12521005318a" translate="yes" xml:space="preserve">
          <source>FlatMap::filter</source>
          <target state="translated">FlatMap::filter</target>
        </trans-unit>
        <trans-unit id="2fdbe05e9dadc13643f106b9eda46a88c0b1a996" translate="yes" xml:space="preserve">
          <source>FlatMap::filter_map</source>
          <target state="translated">FlatMap::filter_map</target>
        </trans-unit>
        <trans-unit id="fad2443193400c8a63870e603e5bca91422f362a" translate="yes" xml:space="preserve">
          <source>FlatMap::find</source>
          <target state="translated">FlatMap::find</target>
        </trans-unit>
        <trans-unit id="125dbed80de4b69dffc0dfe11847e62b883770d9" translate="yes" xml:space="preserve">
          <source>FlatMap::find_map</source>
          <target state="translated">FlatMap::find_map</target>
        </trans-unit>
        <trans-unit id="b6489882f5d9daee9820331897d0b4627133e07c" translate="yes" xml:space="preserve">
          <source>FlatMap::flat_map</source>
          <target state="translated">FlatMap::flat_map</target>
        </trans-unit>
        <trans-unit id="5c844d63a8259face3787e8f3299ac3b95755901" translate="yes" xml:space="preserve">
          <source>FlatMap::flatten</source>
          <target state="translated">FlatMap::flatten</target>
        </trans-unit>
        <trans-unit id="7584f7a4ad8eb0b9e113c6aa4f2d46cf83b69b8c" translate="yes" xml:space="preserve">
          <source>FlatMap::fmt</source>
          <target state="translated">FlatMap::fmt</target>
        </trans-unit>
        <trans-unit id="4278b2b98a5bc75ad2b12d42fb2cec52596d7ebe" translate="yes" xml:space="preserve">
          <source>FlatMap::fold</source>
          <target state="translated">FlatMap::fold</target>
        </trans-unit>
        <trans-unit id="1ffb13409823faf10fd3ae3f3074c8038c60c7da" translate="yes" xml:space="preserve">
          <source>FlatMap::for_each</source>
          <target state="translated">FlatMap::for_each</target>
        </trans-unit>
        <trans-unit id="0fcab2131764cdc3768560c3b1df806cf7dfe63b" translate="yes" xml:space="preserve">
          <source>FlatMap::from</source>
          <target state="translated">FlatMap::from</target>
        </trans-unit>
        <trans-unit id="14f6989573f8625324fdc8b8df9585bc9a1af65d" translate="yes" xml:space="preserve">
          <source>FlatMap::fuse</source>
          <target state="translated">FlatMap::fuse</target>
        </trans-unit>
        <trans-unit id="7ea462adb211e84d27be1814f2efbdec85119daf" translate="yes" xml:space="preserve">
          <source>FlatMap::ge</source>
          <target state="translated">FlatMap::ge</target>
        </trans-unit>
        <trans-unit id="136942cf0fe762e017ee40007f923d9271764888" translate="yes" xml:space="preserve">
          <source>FlatMap::gt</source>
          <target state="translated">FlatMap::gt</target>
        </trans-unit>
        <trans-unit id="56d26cf413c4394c3c690fee39f5f690cddcb862" translate="yes" xml:space="preserve">
          <source>FlatMap::inspect</source>
          <target state="translated">FlatMap::inspect</target>
        </trans-unit>
        <trans-unit id="b1a341556fccb8a6be0a5131d4f93c4c107b492f" translate="yes" xml:space="preserve">
          <source>FlatMap::into</source>
          <target state="translated">FlatMap::into</target>
        </trans-unit>
        <trans-unit id="e7dcc1b2ca70b8d936af84416012126e5732e25e" translate="yes" xml:space="preserve">
          <source>FlatMap::into_iter</source>
          <target state="translated">FlatMap::into_iter</target>
        </trans-unit>
        <trans-unit id="007628a6c352d20c0124a62b84d90c6724624f53" translate="yes" xml:space="preserve">
          <source>FlatMap::is_sorted</source>
          <target state="translated">FlatMap::is_sorted</target>
        </trans-unit>
        <trans-unit id="9129a45f76204f8c0351777e3da2b554a0b582f4" translate="yes" xml:space="preserve">
          <source>FlatMap::is_sorted_by</source>
          <target state="translated">FlatMap::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="d22e20cf5c02a9ebd29f54967389a09e0adfcfd2" translate="yes" xml:space="preserve">
          <source>FlatMap::is_sorted_by_key</source>
          <target state="translated">FlatMap::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="914399f8b8e96bde2c7fd618fdd4c48d1e9f9c6b" translate="yes" xml:space="preserve">
          <source>FlatMap::last</source>
          <target state="translated">FlatMap::last</target>
        </trans-unit>
        <trans-unit id="c9c703d00fbde0472ecac7cb117332c2f00b6308" translate="yes" xml:space="preserve">
          <source>FlatMap::le</source>
          <target state="translated">FlatMap::le</target>
        </trans-unit>
        <trans-unit id="7360f05321dff1711d111ce541e910a129e8d56c" translate="yes" xml:space="preserve">
          <source>FlatMap::lt</source>
          <target state="translated">FlatMap::lt</target>
        </trans-unit>
        <trans-unit id="b2efff963360869fc2ad9335eb94ff36586cd28d" translate="yes" xml:space="preserve">
          <source>FlatMap::map</source>
          <target state="translated">FlatMap::map</target>
        </trans-unit>
        <trans-unit id="e356ce911add6c369fab96edbb719464384bba68" translate="yes" xml:space="preserve">
          <source>FlatMap::max</source>
          <target state="translated">FlatMap::max</target>
        </trans-unit>
        <trans-unit id="257a5dd5d73e305052601eebdee4a4144216f407" translate="yes" xml:space="preserve">
          <source>FlatMap::max_by</source>
          <target state="translated">FlatMap::max_by</target>
        </trans-unit>
        <trans-unit id="34e9a3ee89c7633227b0c7e3080f159ebe1f6745" translate="yes" xml:space="preserve">
          <source>FlatMap::max_by_key</source>
          <target state="translated">FlatMap::max_by_key</target>
        </trans-unit>
        <trans-unit id="94181b6165e939e7637c998da161b8e6499990f0" translate="yes" xml:space="preserve">
          <source>FlatMap::min</source>
          <target state="translated">FlatMap::min</target>
        </trans-unit>
        <trans-unit id="bb1e852b532bd04e8a57ef7446395d8d5fe5cc58" translate="yes" xml:space="preserve">
          <source>FlatMap::min_by</source>
          <target state="translated">FlatMap::min_by</target>
        </trans-unit>
        <trans-unit id="de471f0806e95f0c8e23e763226ce017d6b1b108" translate="yes" xml:space="preserve">
          <source>FlatMap::min_by_key</source>
          <target state="translated">FlatMap::min_by_key</target>
        </trans-unit>
        <trans-unit id="6c6f160abb7fb76039410b7ac9b852e5021ff6b8" translate="yes" xml:space="preserve">
          <source>FlatMap::ne</source>
          <target state="translated">FlatMap::ne</target>
        </trans-unit>
        <trans-unit id="413f510bb1b95afc92fa6eefe3f8c079cc4a4473" translate="yes" xml:space="preserve">
          <source>FlatMap::next</source>
          <target state="translated">FlatMap::next</target>
        </trans-unit>
        <trans-unit id="112103f858355cb1a8010b4285b08f7678bbaf9f" translate="yes" xml:space="preserve">
          <source>FlatMap::next_back</source>
          <target state="translated">FlatMap::next_back</target>
        </trans-unit>
        <trans-unit id="447ac571074b370963af84bb1ccc70cfd30971dd" translate="yes" xml:space="preserve">
          <source>FlatMap::nth</source>
          <target state="translated">FlatMap::nth</target>
        </trans-unit>
        <trans-unit id="19960eeb0a79269d9090196f451f486631f2b2fa" translate="yes" xml:space="preserve">
          <source>FlatMap::nth_back</source>
          <target state="translated">FlatMap::nth_back</target>
        </trans-unit>
        <trans-unit id="9fc3ac65efe50b7b9e8c052a3c45d03586fa19e6" translate="yes" xml:space="preserve">
          <source>FlatMap::partial_cmp</source>
          <target state="translated">FlatMap::partial_cmp</target>
        </trans-unit>
        <trans-unit id="b8420210bc00b780e997a2f176d15bd70a9cefc2" translate="yes" xml:space="preserve">
          <source>FlatMap::partition</source>
          <target state="translated">FlatMap::partition</target>
        </trans-unit>
        <trans-unit id="d96a8ef922a7dd232909440321f99286aee95938" translate="yes" xml:space="preserve">
          <source>FlatMap::peekable</source>
          <target state="translated">FlatMap::peekable</target>
        </trans-unit>
        <trans-unit id="9288726a37bae0b67d5b14478913d587122a7cff" translate="yes" xml:space="preserve">
          <source>FlatMap::position</source>
          <target state="translated">FlatMap::position</target>
        </trans-unit>
        <trans-unit id="943b213a0bfff37b51e3f3abb7e24395a9eeaff5" translate="yes" xml:space="preserve">
          <source>FlatMap::product</source>
          <target state="translated">FlatMap::product</target>
        </trans-unit>
        <trans-unit id="7b6ba5d98ab711868a29538fd256421af7fccddb" translate="yes" xml:space="preserve">
          <source>FlatMap::rev</source>
          <target state="translated">FlatMap::rev</target>
        </trans-unit>
        <trans-unit id="ffc3ba85262bf1bee58e06cd4bd7ac51112bb7bd" translate="yes" xml:space="preserve">
          <source>FlatMap::rfind</source>
          <target state="translated">FlatMap::rfind</target>
        </trans-unit>
        <trans-unit id="fe6cce940b1123c4767e7142e02b0874d48f1ef8" translate="yes" xml:space="preserve">
          <source>FlatMap::rfold</source>
          <target state="translated">FlatMap::rfold</target>
        </trans-unit>
        <trans-unit id="898c71d717e9f617cc31776c3b0e1fda2441d3bb" translate="yes" xml:space="preserve">
          <source>FlatMap::rposition</source>
          <target state="translated">FlatMap::rposition</target>
        </trans-unit>
        <trans-unit id="70837142b6824cfea9881ff15102481af06523ea" translate="yes" xml:space="preserve">
          <source>FlatMap::scan</source>
          <target state="translated">FlatMap::scan</target>
        </trans-unit>
        <trans-unit id="a72ce51abbc23ca3b19fb0bfc4d326cbd5308d6b" translate="yes" xml:space="preserve">
          <source>FlatMap::size_hint</source>
          <target state="translated">FlatMap::size_hint</target>
        </trans-unit>
        <trans-unit id="576b084fc5b101cd96570df280cf9563178dc0b6" translate="yes" xml:space="preserve">
          <source>FlatMap::skip</source>
          <target state="translated">FlatMap::skip</target>
        </trans-unit>
        <trans-unit id="990653817c5f3095db5801bef648ae48d6779ccd" translate="yes" xml:space="preserve">
          <source>FlatMap::skip_while</source>
          <target state="translated">FlatMap::skip_while</target>
        </trans-unit>
        <trans-unit id="cf9f2b6c21d3b585de5e080a4488ed8b2c27a1a9" translate="yes" xml:space="preserve">
          <source>FlatMap::step_by</source>
          <target state="translated">FlatMap::step_by</target>
        </trans-unit>
        <trans-unit id="0ada750aca7bbff98c03f0857972a15b9d9648a3" translate="yes" xml:space="preserve">
          <source>FlatMap::sum</source>
          <target state="translated">FlatMap::sum</target>
        </trans-unit>
        <trans-unit id="254acb09707335820a8e9275de9208df9fe45564" translate="yes" xml:space="preserve">
          <source>FlatMap::take</source>
          <target state="translated">FlatMap::take</target>
        </trans-unit>
        <trans-unit id="e2cd6313ade76c7297a2894057b99af8f8568ad3" translate="yes" xml:space="preserve">
          <source>FlatMap::take_while</source>
          <target state="translated">FlatMap::take_while</target>
        </trans-unit>
        <trans-unit id="f01f588225546b5db35652e4f0ae1badb647ccfc" translate="yes" xml:space="preserve">
          <source>FlatMap::to_owned</source>
          <target state="translated">FlatMap::to_owned</target>
        </trans-unit>
        <trans-unit id="bc2526e55e922f158b916e5feb1a4f9204a46d81" translate="yes" xml:space="preserve">
          <source>FlatMap::try_fold</source>
          <target state="translated">FlatMap::try_fold</target>
        </trans-unit>
        <trans-unit id="d00acbb4947216d76778b375caaa9531b3c7a01b" translate="yes" xml:space="preserve">
          <source>FlatMap::try_for_each</source>
          <target state="translated">FlatMap::try_for_each</target>
        </trans-unit>
        <trans-unit id="f98ca2e0c1a9c29db9a5cbf530d4e1cd8f6d7537" translate="yes" xml:space="preserve">
          <source>FlatMap::try_from</source>
          <target state="translated">FlatMap::try_from</target>
        </trans-unit>
        <trans-unit id="83b3931fb3265079ae3a473c969b6429f59f284f" translate="yes" xml:space="preserve">
          <source>FlatMap::try_into</source>
          <target state="translated">FlatMap::try_into</target>
        </trans-unit>
        <trans-unit id="324cd76beab30c1f527357aa91c0d96ed5842438" translate="yes" xml:space="preserve">
          <source>FlatMap::try_rfold</source>
          <target state="translated">FlatMap::try_rfold</target>
        </trans-unit>
        <trans-unit id="8a22d8d83287254ab6a23ee75e949e98501f6760" translate="yes" xml:space="preserve">
          <source>FlatMap::type_id</source>
          <target state="translated">FlatMap::type_id</target>
        </trans-unit>
        <trans-unit id="2de222ea97e7cb23e6ac9590d214d64f195cdd1c" translate="yes" xml:space="preserve">
          <source>FlatMap::unzip</source>
          <target state="translated">FlatMap::unzip</target>
        </trans-unit>
        <trans-unit id="db281575c806e87003c9b6682de864fc0df2c6b7" translate="yes" xml:space="preserve">
          <source>FlatMap::zip</source>
          <target state="translated">FlatMap::zip</target>
        </trans-unit>
        <trans-unit id="0af14ddb20aabbe1bd98f28f2c2f744284ccedb3" translate="yes" xml:space="preserve">
          <source>Flatten</source>
          <target state="translated">Flatten</target>
        </trans-unit>
        <trans-unit id="6378b27c94c7794528ec83525ca6682b68867eec" translate="yes" xml:space="preserve">
          <source>Flatten::all</source>
          <target state="translated">Flatten::all</target>
        </trans-unit>
        <trans-unit id="e537d39e2eeb046a286f6dc24210f196c2d61d0c" translate="yes" xml:space="preserve">
          <source>Flatten::any</source>
          <target state="translated">Flatten::any</target>
        </trans-unit>
        <trans-unit id="5df2c8dc161ea0f44000a8a7e6342e9273d021dc" translate="yes" xml:space="preserve">
          <source>Flatten::borrow</source>
          <target state="translated">Flatten::borrow</target>
        </trans-unit>
        <trans-unit id="84d618ced9026bc2da12c2d26053c6b0ea2832f2" translate="yes" xml:space="preserve">
          <source>Flatten::borrow_mut</source>
          <target state="translated">Flatten::borrow_mut</target>
        </trans-unit>
        <trans-unit id="74988a93d8ba79ac6a15f23e599ffe2f23d121f4" translate="yes" xml:space="preserve">
          <source>Flatten::by_ref</source>
          <target state="translated">Flatten::by_ref</target>
        </trans-unit>
        <trans-unit id="6549aaf28075727d38f42f2f9b05397627efdff6" translate="yes" xml:space="preserve">
          <source>Flatten::chain</source>
          <target state="translated">Flatten::chain</target>
        </trans-unit>
        <trans-unit id="1d6a474ca145d35d3343b59b0db187a0d609a48e" translate="yes" xml:space="preserve">
          <source>Flatten::clone</source>
          <target state="translated">Flatten::clone</target>
        </trans-unit>
        <trans-unit id="a61e2674c6ebe5e369a60cd98e4d14c1bdbc7ecd" translate="yes" xml:space="preserve">
          <source>Flatten::clone_from</source>
          <target state="translated">Flatten::clone_from</target>
        </trans-unit>
        <trans-unit id="b77c050e5d12e01700009a11e456e000faadd474" translate="yes" xml:space="preserve">
          <source>Flatten::clone_into</source>
          <target state="translated">Flatten::clone_into</target>
        </trans-unit>
        <trans-unit id="70230129a5a138fb98df5c13a6ad9b1512002b32" translate="yes" xml:space="preserve">
          <source>Flatten::cloned</source>
          <target state="translated">Flatten::cloned</target>
        </trans-unit>
        <trans-unit id="7bbd7d570ad36636c913a9c8cbd18cfb5adea88f" translate="yes" xml:space="preserve">
          <source>Flatten::cmp</source>
          <target state="translated">Flatten::cmp</target>
        </trans-unit>
        <trans-unit id="76980a69644d7dfe349ef13faef81ade2648a2f3" translate="yes" xml:space="preserve">
          <source>Flatten::collect</source>
          <target state="translated">Flatten::collect</target>
        </trans-unit>
        <trans-unit id="ba6f2bf705c0726e60fb3b5c631c9e8ba71a38c7" translate="yes" xml:space="preserve">
          <source>Flatten::copied</source>
          <target state="translated">Flatten::copied</target>
        </trans-unit>
        <trans-unit id="7ed45506f42e57be3ac6257b86e3a2328aee7f22" translate="yes" xml:space="preserve">
          <source>Flatten::count</source>
          <target state="translated">Flatten::count</target>
        </trans-unit>
        <trans-unit id="be9beb234550863ee98e63eadf7a2a2ac4c88820" translate="yes" xml:space="preserve">
          <source>Flatten::cycle</source>
          <target state="translated">Flatten::cycle</target>
        </trans-unit>
        <trans-unit id="ca72956e75e462249891af1c4d9e29a3c340bd27" translate="yes" xml:space="preserve">
          <source>Flatten::enumerate</source>
          <target state="translated">Flatten::enumerate</target>
        </trans-unit>
        <trans-unit id="2a9759914de233d5e6579bdc9b33a2209c3a8358" translate="yes" xml:space="preserve">
          <source>Flatten::eq</source>
          <target state="translated">Flatten::eq</target>
        </trans-unit>
        <trans-unit id="642b7ffbc86337b9b2e53a6a1b94b8dc49b65539" translate="yes" xml:space="preserve">
          <source>Flatten::filter</source>
          <target state="translated">Flatten::filter</target>
        </trans-unit>
        <trans-unit id="65ded6356f6e126088527091aa1cda97844fcba0" translate="yes" xml:space="preserve">
          <source>Flatten::filter_map</source>
          <target state="translated">Flatten::filter_map</target>
        </trans-unit>
        <trans-unit id="044b010b61b947fc0b8970d857cf151425e135b0" translate="yes" xml:space="preserve">
          <source>Flatten::find</source>
          <target state="translated">Flatten::find</target>
        </trans-unit>
        <trans-unit id="64cdc8f49da3fee8a3829164b9381155cca9a8bc" translate="yes" xml:space="preserve">
          <source>Flatten::find_map</source>
          <target state="translated">Flatten::find_map</target>
        </trans-unit>
        <trans-unit id="fbceeb9e0a2e8f7040fa8eae075282f8aade0232" translate="yes" xml:space="preserve">
          <source>Flatten::flat_map</source>
          <target state="translated">Flatten::flat_map</target>
        </trans-unit>
        <trans-unit id="2a2632fc9594da6c4e5ac878933c36a7ce8506c0" translate="yes" xml:space="preserve">
          <source>Flatten::flatten</source>
          <target state="translated">Flatten::flatten</target>
        </trans-unit>
        <trans-unit id="dd6734500dab755029f2d9f77d7cfe9ece45f723" translate="yes" xml:space="preserve">
          <source>Flatten::fmt</source>
          <target state="translated">Flatten::fmt</target>
        </trans-unit>
        <trans-unit id="9a29c24349f70fcf122bf03fd36e163675ac9f7a" translate="yes" xml:space="preserve">
          <source>Flatten::fold</source>
          <target state="translated">Flatten::fold</target>
        </trans-unit>
        <trans-unit id="d2b27a5433d79fd4a93dbf5304184654ea746b76" translate="yes" xml:space="preserve">
          <source>Flatten::for_each</source>
          <target state="translated">Flatten::for_each</target>
        </trans-unit>
        <trans-unit id="f02bc4e5cf877bd2a8f5fb77330649f946dd8c7c" translate="yes" xml:space="preserve">
          <source>Flatten::from</source>
          <target state="translated">Flatten::from</target>
        </trans-unit>
        <trans-unit id="e3507685efab8ac5ecaa03bf287d4c718237a452" translate="yes" xml:space="preserve">
          <source>Flatten::fuse</source>
          <target state="translated">Flatten::fuse</target>
        </trans-unit>
        <trans-unit id="f07045a07e1ac8513837d15d1ec32837341eabcc" translate="yes" xml:space="preserve">
          <source>Flatten::ge</source>
          <target state="translated">Flatten::ge</target>
        </trans-unit>
        <trans-unit id="18da0db46ede4c4e9350844a5fe4f2d2274f31b3" translate="yes" xml:space="preserve">
          <source>Flatten::gt</source>
          <target state="translated">Flatten::gt</target>
        </trans-unit>
        <trans-unit id="722a0d4464ed406627f2f5a56ffa12e0fc1e8196" translate="yes" xml:space="preserve">
          <source>Flatten::inspect</source>
          <target state="translated">Flatten::inspect</target>
        </trans-unit>
        <trans-unit id="9038111fe007cebcd62592d7da4378fd8cd0ddc9" translate="yes" xml:space="preserve">
          <source>Flatten::into</source>
          <target state="translated">Flatten::into</target>
        </trans-unit>
        <trans-unit id="54d478ead00f59905a55dcdb561d01c146b61fd4" translate="yes" xml:space="preserve">
          <source>Flatten::into_iter</source>
          <target state="translated">Flatten::into_iter</target>
        </trans-unit>
        <trans-unit id="1f53c39807466ee056a762c8bb70af58d51102d6" translate="yes" xml:space="preserve">
          <source>Flatten::is_sorted</source>
          <target state="translated">Flatten::is_sorted</target>
        </trans-unit>
        <trans-unit id="99e14c30526feba1349b21ae6448ce04dc088808" translate="yes" xml:space="preserve">
          <source>Flatten::is_sorted_by</source>
          <target state="translated">Flatten::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="05f031fcd127e3c76e69783269222edde058928f" translate="yes" xml:space="preserve">
          <source>Flatten::is_sorted_by_key</source>
          <target state="translated">Flatten::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="167347567e9e36963c9b163dc2921f9764574bfb" translate="yes" xml:space="preserve">
          <source>Flatten::last</source>
          <target state="translated">Flatten::last</target>
        </trans-unit>
        <trans-unit id="59a60a72d8b85bae670a6ec6d6b1c7f0b4374dc4" translate="yes" xml:space="preserve">
          <source>Flatten::le</source>
          <target state="translated">Flatten::le</target>
        </trans-unit>
        <trans-unit id="bf97088162f8613f4d0c4bd4d261b0a18f3879b3" translate="yes" xml:space="preserve">
          <source>Flatten::lt</source>
          <target state="translated">Flatten::lt</target>
        </trans-unit>
        <trans-unit id="3a8699a18f82d35e0444dabf1fea5718454a04b7" translate="yes" xml:space="preserve">
          <source>Flatten::map</source>
          <target state="translated">Flatten::map</target>
        </trans-unit>
        <trans-unit id="971af5e71369a17fae6c02994f662f7c1a30c72e" translate="yes" xml:space="preserve">
          <source>Flatten::max</source>
          <target state="translated">Flatten::max</target>
        </trans-unit>
        <trans-unit id="055208d53a428731c79d10e7f2cd7a58a65901f3" translate="yes" xml:space="preserve">
          <source>Flatten::max_by</source>
          <target state="translated">Flatten::max_by</target>
        </trans-unit>
        <trans-unit id="648db41109ce31b9176dbd6022bb142f8fbea63e" translate="yes" xml:space="preserve">
          <source>Flatten::max_by_key</source>
          <target state="translated">Flatten::max_by_key</target>
        </trans-unit>
        <trans-unit id="8292a6b614fa7627ff7156cfa936be0ce5ecea55" translate="yes" xml:space="preserve">
          <source>Flatten::min</source>
          <target state="translated">Flatten::min</target>
        </trans-unit>
        <trans-unit id="1ca455139385f0481bcf43be9b6211e86be6e9cb" translate="yes" xml:space="preserve">
          <source>Flatten::min_by</source>
          <target state="translated">Flatten::min_by</target>
        </trans-unit>
        <trans-unit id="3469af64a679ee79aee5996a0319e6c7d95a1310" translate="yes" xml:space="preserve">
          <source>Flatten::min_by_key</source>
          <target state="translated">Flatten::min_by_key</target>
        </trans-unit>
        <trans-unit id="ef8f8fffefb73fc7348db9447211056250507e70" translate="yes" xml:space="preserve">
          <source>Flatten::ne</source>
          <target state="translated">Flatten::ne</target>
        </trans-unit>
        <trans-unit id="272ed09059d038377f61436223e52ba15c11b454" translate="yes" xml:space="preserve">
          <source>Flatten::next</source>
          <target state="translated">Flatten::next</target>
        </trans-unit>
        <trans-unit id="6ed0e583171d5730167d3925b7f66ab5407e5a6a" translate="yes" xml:space="preserve">
          <source>Flatten::next_back</source>
          <target state="translated">Flatten::next_back</target>
        </trans-unit>
        <trans-unit id="f83cb633f58a8127eb53726450c5004cab59c22d" translate="yes" xml:space="preserve">
          <source>Flatten::nth</source>
          <target state="translated">Flatten::nth</target>
        </trans-unit>
        <trans-unit id="906f8bd6dbad910277215452b72f8ecb4493b03b" translate="yes" xml:space="preserve">
          <source>Flatten::nth_back</source>
          <target state="translated">Flatten::nth_back</target>
        </trans-unit>
        <trans-unit id="b45584894a3184899393e2e35ffa7d84c020e248" translate="yes" xml:space="preserve">
          <source>Flatten::partial_cmp</source>
          <target state="translated">Flatten::partial_cmp</target>
        </trans-unit>
        <trans-unit id="1326415f76b3ee0702ae181196138a1da2b8783e" translate="yes" xml:space="preserve">
          <source>Flatten::partition</source>
          <target state="translated">Flatten::partition</target>
        </trans-unit>
        <trans-unit id="ec97561985365e9099f643e7f6904c13d7b21fd7" translate="yes" xml:space="preserve">
          <source>Flatten::peekable</source>
          <target state="translated">Flatten::peekable</target>
        </trans-unit>
        <trans-unit id="00b0e7b90c4867222af5876dbf3b63065324cfdc" translate="yes" xml:space="preserve">
          <source>Flatten::position</source>
          <target state="translated">Flatten::position</target>
        </trans-unit>
        <trans-unit id="0b876d8774954704d6a4f4d43ff764e2f62e2c9c" translate="yes" xml:space="preserve">
          <source>Flatten::product</source>
          <target state="translated">Flatten::product</target>
        </trans-unit>
        <trans-unit id="ff196a64f89e7d72f68d826286f92097d9b1ece7" translate="yes" xml:space="preserve">
          <source>Flatten::rev</source>
          <target state="translated">Flatten::rev</target>
        </trans-unit>
        <trans-unit id="7267d42f2a661daf38b970f24ef035e184fd9351" translate="yes" xml:space="preserve">
          <source>Flatten::rfind</source>
          <target state="translated">Flatten::rfind</target>
        </trans-unit>
        <trans-unit id="45d2ff094df3d26c61a36270b8f07f83e8e5e07e" translate="yes" xml:space="preserve">
          <source>Flatten::rfold</source>
          <target state="translated">Flatten::rfold</target>
        </trans-unit>
        <trans-unit id="ad2b35a0674e4ff1c33b5453f7b4b6c7b565a180" translate="yes" xml:space="preserve">
          <source>Flatten::rposition</source>
          <target state="translated">Flatten::rposition</target>
        </trans-unit>
        <trans-unit id="c72be32d7b5232d751abac5840b35a5590803c12" translate="yes" xml:space="preserve">
          <source>Flatten::scan</source>
          <target state="translated">Flatten::scan</target>
        </trans-unit>
        <trans-unit id="2751595a2a3743ada0b7f330c315f9ba7e604b21" translate="yes" xml:space="preserve">
          <source>Flatten::size_hint</source>
          <target state="translated">Flatten::size_hint</target>
        </trans-unit>
        <trans-unit id="719ec1c1fd63a2ee5cd01c6d957412482c788246" translate="yes" xml:space="preserve">
          <source>Flatten::skip</source>
          <target state="translated">Flatten::skip</target>
        </trans-unit>
        <trans-unit id="8517a605d396572f805fe6af0230042a552b2350" translate="yes" xml:space="preserve">
          <source>Flatten::skip_while</source>
          <target state="translated">Flatten::skip_while</target>
        </trans-unit>
        <trans-unit id="eca7e88833692e39b6f9af6ac4e764aa9801cc1a" translate="yes" xml:space="preserve">
          <source>Flatten::step_by</source>
          <target state="translated">Flatten::step_by</target>
        </trans-unit>
        <trans-unit id="1080bc491e844001c194e780cb411a27dc80f258" translate="yes" xml:space="preserve">
          <source>Flatten::sum</source>
          <target state="translated">Flatten::sum</target>
        </trans-unit>
        <trans-unit id="b1f45e3b2fc44e5e7692f1843043de19468f3281" translate="yes" xml:space="preserve">
          <source>Flatten::take</source>
          <target state="translated">Flatten::take</target>
        </trans-unit>
        <trans-unit id="2489ed525114cd215de8170aeb7a02d8dac85234" translate="yes" xml:space="preserve">
          <source>Flatten::take_while</source>
          <target state="translated">Flatten::take_while</target>
        </trans-unit>
        <trans-unit id="a68643f524eb3165bd80bad5436c59fcfa11fcf3" translate="yes" xml:space="preserve">
          <source>Flatten::to_owned</source>
          <target state="translated">Flatten::to_owned</target>
        </trans-unit>
        <trans-unit id="55101c5d87b3e8e91f704992caf59c5a02c3a9a9" translate="yes" xml:space="preserve">
          <source>Flatten::try_fold</source>
          <target state="translated">Flatten::try_fold</target>
        </trans-unit>
        <trans-unit id="b9003e86513292141f138e44919ff2e9b4e5ec22" translate="yes" xml:space="preserve">
          <source>Flatten::try_for_each</source>
          <target state="translated">Flatten::try_for_each</target>
        </trans-unit>
        <trans-unit id="8c94ac06304502f80ab771cd077de0e05f32ad4f" translate="yes" xml:space="preserve">
          <source>Flatten::try_from</source>
          <target state="translated">Flatten::try_from</target>
        </trans-unit>
        <trans-unit id="8c47a05dbe76fce1ac45eaad991c1459babafd7d" translate="yes" xml:space="preserve">
          <source>Flatten::try_into</source>
          <target state="translated">Flatten::try_into</target>
        </trans-unit>
        <trans-unit id="1150ea07e36800b3c23c6fef303c0db8cc2cc651" translate="yes" xml:space="preserve">
          <source>Flatten::try_rfold</source>
          <target state="translated">Flatten::try_rfold</target>
        </trans-unit>
        <trans-unit id="60786eceea34873c96933ce0f24809d4169ea724" translate="yes" xml:space="preserve">
          <source>Flatten::type_id</source>
          <target state="translated">Flatten::type_id</target>
        </trans-unit>
        <trans-unit id="636ae3b4e642a02f33332bd930cb8c4897983777" translate="yes" xml:space="preserve">
          <source>Flatten::unzip</source>
          <target state="translated">Flatten::unzip</target>
        </trans-unit>
        <trans-unit id="257fcdc639672ecc8d1c76cd08bb5d85d427e136" translate="yes" xml:space="preserve">
          <source>Flatten::zip</source>
          <target state="translated">Flatten::zip</target>
        </trans-unit>
        <trans-unit id="50e65289e2c773b01f0800828c6c91a71c48f0cb" translate="yes" xml:space="preserve">
          <source>Flattening once only removes one level of nesting:</source>
          <target state="translated">一度だけフラットにすることで、1レベルのネスティングを解除することができます。</target>
        </trans-unit>
        <trans-unit id="bcf29b919df7e1dd6a835a81c333e1abd31af0bc" translate="yes" xml:space="preserve">
          <source>Flattening only removes one level of nesting at a time:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0132840ddd72a6d00a7d9eae2c8c7920bb049af1" translate="yes" xml:space="preserve">
          <source>Flattens a slice of &lt;code&gt;T&lt;/code&gt; into a single value &lt;code&gt;Self::Output&lt;/code&gt;, placing a given separator between each.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; のスライスを単一の値 &lt;code&gt;Self::Output&lt;/code&gt; にフラット化し、それぞれの間に特定のセパレーターを配置します。</target>
        </trans-unit>
        <trans-unit id="9534a89d8aa0d41ae0710eafe7247193c9b256f0" translate="yes" xml:space="preserve">
          <source>Flattens a slice of &lt;code&gt;T&lt;/code&gt; into a single value &lt;code&gt;Self::Output&lt;/code&gt;, placing a given separator between each. &lt;a href=&quot;slice/trait.sliceconcatext#method.connect&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; のスライスを単一の値 &lt;code&gt;Self::Output&lt;/code&gt; にフラット化し、それぞれの間に特定のセパレーターを配置します。&lt;a href=&quot;slice/trait.sliceconcatext#method.connect&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="09b89d3be7140cb65f98edbcd63bf5d5810fcd17" translate="yes" xml:space="preserve">
          <source>Flattens a slice of &lt;code&gt;T&lt;/code&gt; into a single value &lt;code&gt;Self::Output&lt;/code&gt;, placing a given separator between each. &lt;a href=&quot;slice/trait.sliceconcatext#tymethod.join&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; のスライスを単一の値 &lt;code&gt;Self::Output&lt;/code&gt; にフラット化し、それぞれの間に特定のセパレーターを配置します。&lt;a href=&quot;slice/trait.sliceconcatext#tymethod.join&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1a6dcd1f499bd97e21e4181f8911e1274dcc8f58" translate="yes" xml:space="preserve">
          <source>Flattens a slice of &lt;code&gt;T&lt;/code&gt; into a single value &lt;code&gt;Self::Output&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; のスライスを単一の値 &lt;code&gt;Self::Output&lt;/code&gt; フラット化します。</target>
        </trans-unit>
        <trans-unit id="c64a1918c8c75d3a6c599598a89b781e61c86988" translate="yes" xml:space="preserve">
          <source>Flattens a slice of &lt;code&gt;T&lt;/code&gt; into a single value &lt;code&gt;Self::Output&lt;/code&gt;. &lt;a href=&quot;slice/trait.sliceconcatext#tymethod.concat&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; のスライスを単一の値 &lt;code&gt;Self::Output&lt;/code&gt; フラット化します。&lt;a href=&quot;slice/trait.sliceconcatext#tymethod.concat&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b9c5f3fe33f00613b76fc40a67722510e55920eb" translate="yes" xml:space="preserve">
          <source>Float addition that allows optimizations based on algebraic rules. May assume inputs are finite.</source>
          <target state="translated">代数的なルールに基づいた最適化を可能にするフロート加算。入力が有限であると仮定してもよい。</target>
        </trans-unit>
        <trans-unit id="52499cebbcb214cabfe0a704e43a1fb104def099" translate="yes" xml:space="preserve">
          <source>Float division that allows optimizations based on algebraic rules. May assume inputs are finite.</source>
          <target state="translated">代数的なルールに基づいた最適化を可能にするフロート分割。入力が有限であると仮定してもよい。</target>
        </trans-unit>
        <trans-unit id="bc6141321e3d4c4de44fa14f30b656e4984e0713" translate="yes" xml:space="preserve">
          <source>Float multiplication that allows optimizations based on algebraic rules. May assume inputs are finite.</source>
          <target state="translated">代数的なルールに基づいた最適化を可能にするフロート乗算。入力が有限であると仮定してもよい。</target>
        </trans-unit>
        <trans-unit id="4ce00125ee33ccfea7b8391349b004512e0631fc" translate="yes" xml:space="preserve">
          <source>Float remainder that allows optimizations based on algebraic rules. May assume inputs are finite.</source>
          <target state="translated">代数的なルールに基づいた最適化を可能にするフロート残量。入力が有限であると仮定することができます。</target>
        </trans-unit>
        <trans-unit id="6c32fd01dbb17847421092ea2ccb3eef2d237af0" translate="yes" xml:space="preserve">
          <source>Float subtraction that allows optimizations based on algebraic rules. May assume inputs are finite.</source>
          <target state="translated">代数的なルールに基づいた最適化を可能にするフロート減算。入力が有限であると仮定してもよい。</target>
        </trans-unit>
        <trans-unit id="b322920c63a6e6bae036b4e3c0515703738c1bb1" translate="yes" xml:space="preserve">
          <source>FloatToInt</source>
          <target state="translated">FloatToInt</target>
        </trans-unit>
        <trans-unit id="f980f6669a99ae97aa471b598c62ac0c3e1f823b" translate="yes" xml:space="preserve">
          <source>Floating Point</source>
          <target state="translated">浮動小数点</target>
        </trans-unit>
        <trans-unit id="45036235c9c4abd7b11f7d03dccc9d1dff8eb2f8" translate="yes" xml:space="preserve">
          <source>Floating point types (f32 and f64). This is being deprecated and will not be available in a future version of Rust (see &lt;a href=&quot;https://github.com/rust-lang/rust/issues/41620&quot;&gt;issue #41620&lt;/a&gt;).</source>
          <target state="translated">浮動小数点型（f32およびf64）。これは非推奨であり、Rustの将来のバージョンでは使用できなくなります（&lt;a href=&quot;https://github.com/rust-lang/rust/issues/41620&quot;&gt;問題＃41620を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="ef5cfdfa7defdf70726b76da829b0fe14f65909e" translate="yes" xml:space="preserve">
          <source>Floating-Point Types</source>
          <target state="translated">浮動小数点型</target>
        </trans-unit>
        <trans-unit id="d11f66aff25662009484827fd72f259b820f6fce" translate="yes" xml:space="preserve">
          <source>Floating-point</source>
          <target state="translated">Floating-point</target>
        </trans-unit>
        <trans-unit id="4360ebce69c40c7912c546b8749e2ef775efcd1d" translate="yes" xml:space="preserve">
          <source>Floating-point literals</source>
          <target state="translated">浮動小数点リテラル</target>
        </trans-unit>
        <trans-unit id="78376c313af60d60b363b980ef50678fc594133a" translate="yes" xml:space="preserve">
          <source>Floating-point literals are currently accepted, but due to the complexity of comparing them, they are going to be forbidden on literal patterns in a future version of Rust (see &lt;a href=&quot;https://github.com/rust-lang/rust/issues/41620&quot;&gt;issue #41620&lt;/a&gt;).</source>
          <target state="translated">現在、浮動小数点リテラルが受け入れられていますが、比較が複雑であるため、Rustの将来のバージョンではリテラルパターンで使用できなくなります（&lt;a href=&quot;https://github.com/rust-lang/rust/issues/41620&quot;&gt;問題＃41620を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="39a753eeef8506a068f8801ce25d6973d1bebd2d" translate="yes" xml:space="preserve">
          <source>Floating-point numbers are represented according to the IEEE-754 standard. The &lt;code&gt;f32&lt;/code&gt; type is a single-precision float, and &lt;code&gt;f64&lt;/code&gt; has double precision.</source>
          <target state="translated">浮動小数点数は、IEEE-754標準に従って表されます。 &lt;code&gt;f32&lt;/code&gt; タイプは、単精度浮動小数点数であり、 &lt;code&gt;f64&lt;/code&gt; 二重精度を有しています。</target>
        </trans-unit>
        <trans-unit id="c77fa93b82b89d18fe6eec4a6c763b65896680b4" translate="yes" xml:space="preserve">
          <source>Floating-point suffixes</source>
          <target state="translated">浮動小数点の接尾辞</target>
        </trans-unit>
        <trans-unit id="2a9bb411b345b451f4de56294a2e04b8bb44acd7" translate="yes" xml:space="preserve">
          <source>Floating-point types</source>
          <target state="translated">浮動小数点型</target>
        </trans-unit>
        <trans-unit id="b591f9a1c42f27d4c4bd26d282be40b7c6e85c25" translate="yes" xml:space="preserve">
          <source>Floats and Ints have the same endianness on all supported platforms.</source>
          <target state="translated">フロートとイントは、サポートされているすべてのプラットフォームで同じエンディアン性を持っています。</target>
        </trans-unit>
        <trans-unit id="7120a4a1223ce171f0d2cfc3936e1fbe3242f8a9" translate="yes" xml:space="preserve">
          <source>Flush this output stream, ensuring that all intermediately buffered contents reach their destination.</source>
          <target state="translated">この出力ストリームをフラッシュし、中間的にバッファリングされたすべてのコンテンツが目的地に到達するようにします。</target>
        </trans-unit>
        <trans-unit id="11e5d3922d6bab7c0c9ab6b22418d00727480d0e" translate="yes" xml:space="preserve">
          <source>Flush this output stream, ensuring that all intermediately buffered contents reach their destination. &lt;a href=&quot;../../../io/trait.write#tymethod.flush&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">この出力ストリームをフラッシュして、中間でバッファリングされたすべてのコンテンツが宛先に到達するようにします。&lt;a href=&quot;../../../io/trait.write#tymethod.flush&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f6f07902e73f7da8a0b11290876961118d116c44" translate="yes" xml:space="preserve">
          <source>Flush this output stream, ensuring that all intermediately buffered contents reach their destination. &lt;a href=&quot;../io/trait.write#tymethod.flush&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">この出力ストリームをフラッシュして、中間でバッファリングされたすべてのコンテンツが宛先に到達するようにします。&lt;a href=&quot;../io/trait.write#tymethod.flush&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="789421fd045243ff9df826043d84e59d1e2aea7e" translate="yes" xml:space="preserve">
          <source>Flush this output stream, ensuring that all intermediately buffered contents reach their destination. &lt;a href=&quot;io/trait.write#tymethod.flush&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">この出力ストリームをフラッシュして、中間でバッファリングされたすべてのコンテンツが宛先に到達するようにします。&lt;a href=&quot;io/trait.write#tymethod.flush&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d31d71fc0f019cc686c94e54986a1090b2f8d953" translate="yes" xml:space="preserve">
          <source>Flush this output stream, ensuring that all intermediately buffered contents reach their destination. &lt;a href=&quot;trait.write#tymethod.flush&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">この出力ストリームをフラッシュして、中間でバッファリングされたすべてのコンテンツが宛先に到達するようにします。&lt;a href=&quot;trait.write#tymethod.flush&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="97f22050b4373bd22012fd26f53a60dc8f2b7438" translate="yes" xml:space="preserve">
          <source>Fn</source>
          <target state="translated">Fn</target>
        </trans-unit>
        <trans-unit id="056571b6bd538e1535f1a1885d9b32da7f141ee6" translate="yes" xml:space="preserve">
          <source>Fn::call</source>
          <target state="translated">Fn::call</target>
        </trans-unit>
        <trans-unit id="420a3294fc08a40e696614ef505f5ae7675c908a" translate="yes" xml:space="preserve">
          <source>FnMut</source>
          <target state="translated">FnMut</target>
        </trans-unit>
        <trans-unit id="7058c27c0e6429a4b6c5bf52b3c5e54116d44494" translate="yes" xml:space="preserve">
          <source>FnMut::call_mut</source>
          <target state="translated">FnMut::call_mut</target>
        </trans-unit>
        <trans-unit id="6fad81ecb429baed573c945fb613aa8792b2676b" translate="yes" xml:space="preserve">
          <source>FnOnce</source>
          <target state="translated">FnOnce</target>
        </trans-unit>
        <trans-unit id="dbc3b78f4e51810e9d273ad6baf9fc5201a5a6f9" translate="yes" xml:space="preserve">
          <source>FnOnce::call_once</source>
          <target state="translated">FnOnce::call_once</target>
        </trans-unit>
        <trans-unit id="b04326a1880243af0c022215459eab0a42fc4bce" translate="yes" xml:space="preserve">
          <source>Folding is useful whenever you have a collection of something, and want to produce a single value from it.</source>
          <target state="translated">折りたたみは、何かのコレクションを持っていて、そこから一つの価値を生み出したいときに便利です。</target>
        </trans-unit>
        <trans-unit id="049d0e1886b38562b2d1550218c69703314ea03f" translate="yes" xml:space="preserve">
          <source>Follow-set Ambiguity Restrictions</source>
          <target state="translated">フォローセットの曖昧さの制限</target>
        </trans-unit>
        <trans-unit id="03df26aff78415b204036fc3617fc106fe18f8fa" translate="yes" xml:space="preserve">
          <source>Following the Pointer to the Value with the Dereference Operator</source>
          <target state="translated">値へのポインタを参照解除演算子で追従する</target>
        </trans-unit>
        <trans-unit id="5bd2efa47d9f58ed1261195b65a4c89b8c16ef77" translate="yes" xml:space="preserve">
          <source>Foo is a struct</source>
          <target state="translated">Fooは構造体</target>
        </trans-unit>
        <trans-unit id="efa35157485464b05359fcfe9f301757903b6164" translate="yes" xml:space="preserve">
          <source>For (an erroneous) example, here a &lt;code&gt;struct&lt;/code&gt; variant name were used as a function:</source>
          <target state="translated">（誤った）例の場合、ここでは &lt;code&gt;struct&lt;/code&gt; バリアント名が関数として使用されています。</target>
        </trans-unit>
        <trans-unit id="e4c2229e9dabe7c9b8ed00d340552949b1352584" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;items/enumerations#custom-discriminant-values-for-field-less-enumerations&quot;&gt;C-like enumerations&lt;/a&gt;, the &lt;code&gt;C&lt;/code&gt; representation has the size and alignment of the default &lt;code&gt;enum&lt;/code&gt; size and alignment for the target platform's C ABI.</source>
          <target state="translated">以下のために&lt;a href=&quot;items/enumerations#custom-discriminant-values-for-field-less-enumerations&quot;&gt;C状列挙型&lt;/a&gt;、 &lt;code&gt;C&lt;/code&gt; の表現は、デフォルトのサイズ及び位置合わせ有する &lt;code&gt;enum&lt;/code&gt; ターゲットプラットフォームのC ABIのサイズとアライメントを。</target>
        </trans-unit>
        <trans-unit id="12601868b110bccb432aa4fc5e827b149936a899" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;items/enumerations#custom-discriminant-values-for-field-less-enumerations&quot;&gt;C-like enumerations&lt;/a&gt;, they set the size and alignment to be the same as the primitive type of the same name. For example, a C-like enumeration with a &lt;code&gt;u8&lt;/code&gt; representation can only have discriminants between 0 and 255 inclusive.</source>
          <target state="translated">以下のために&lt;a href=&quot;items/enumerations#custom-discriminant-values-for-field-less-enumerations&quot;&gt;C状列挙&lt;/a&gt;、それらは同じ名前のプリミティブ型と同じになるように大きさ及び配置を設定しました。たとえば、 &lt;code&gt;u8&lt;/code&gt; を使用したCのような列挙表現を使用 0から255までの判別式しかことができません。</target>
        </trans-unit>
        <trans-unit id="d97dbac13875101902d78d79d2008fd919d0a3cd" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;items/enumerations#custom-discriminant-values-for-fieldless-enumerations&quot;&gt;field-less enums&lt;/a&gt;, primitive representations set the size and alignment to be the same as the primitive type of the same name. For example, a field-less enum with a &lt;code&gt;u8&lt;/code&gt; representation can only have discriminants between 0 and 255 inclusive.</source>
          <target state="translated">ための&lt;a href=&quot;items/enumerations#custom-discriminant-values-for-fieldless-enumerations&quot;&gt;フィールドレス列挙型&lt;/a&gt;、プリミティブ表現は、同じ名前のプリミティブ型と同じになるように大きさ及び配置を設定しました。たとえば、 &lt;code&gt;u8&lt;/code&gt; 表現のフィールドレス列挙型は、0から255までの判別式のみを持つことができます。</target>
        </trans-unit>
        <trans-unit id="928dfa57bc9d97afc6451c5f626c02eedca2bff4" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;items/enumerations#custom-discriminant-values-for-fieldless-enumerations&quot;&gt;field-less enums&lt;/a&gt;, the &lt;code&gt;C&lt;/code&gt; representation has the size and alignment of the default &lt;code&gt;enum&lt;/code&gt; size and alignment for the target platform's C ABI.</source>
          <target state="translated">以下のために&lt;a href=&quot;items/enumerations#custom-discriminant-values-for-fieldless-enumerations&quot;&gt;フィールドレス列挙型&lt;/a&gt;、 &lt;code&gt;C&lt;/code&gt; の表現は、デフォルトのサイズとアライメント持つ &lt;code&gt;enum&lt;/code&gt; ターゲットプラットフォームのC ABIのサイズとアライメントを。</target>
        </trans-unit>
        <trans-unit id="ee2dc6c0f5371a2e2facba64ec0821770c3bf059" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;Result&lt;/code&gt;, the variants are &lt;code&gt;Ok&lt;/code&gt; or &lt;code&gt;Err&lt;/code&gt;. The &lt;code&gt;Ok&lt;/code&gt; variant indicates the operation was successful, and inside &lt;code&gt;Ok&lt;/code&gt; is the successfully generated value. The &lt;code&gt;Err&lt;/code&gt; variant means the operation failed, and &lt;code&gt;Err&lt;/code&gt; contains information about how or why the operation failed.</source>
          <target state="translated">&lt;code&gt;Result&lt;/code&gt; 、変異体である &lt;code&gt;Ok&lt;/code&gt; か &lt;code&gt;Err&lt;/code&gt; 。 &lt;code&gt;Ok&lt;/code&gt; 変異体は、操作が成功したことを示し、そして内部 &lt;code&gt;Ok&lt;/code&gt; を正常に生成された値です。 &lt;code&gt;Err&lt;/code&gt; バリアントは、操作が失敗したこと、および &lt;code&gt;Err&lt;/code&gt; 、操作が失敗したか、または理由に関する情報が含まれています。</target>
        </trans-unit>
        <trans-unit id="8baf4140d041ccdcdf77b0c6099035c4a7773845" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;align&lt;/code&gt;, if the specified alignment is less than the alignment of the type without the &lt;code&gt;align&lt;/code&gt; modifier, then the alignment is unaffected.</source>
          <target state="translated">以下のために &lt;code&gt;align&lt;/code&gt; 指定アライメントは無しタイプの位置合わせよりも小さい場合、 &lt;code&gt;align&lt;/code&gt; 修飾子は、位置合わせが影響を受けません。</target>
        </trans-unit>
        <trans-unit id="95953d2494ecdb1a594e093e00b3f00569f19670" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;packed&lt;/code&gt;, if the specified alignment is greater than the type's alignment without the &lt;code&gt;packed&lt;/code&gt; modifier, then the alignment and layout is unaffected. The alignments of each field, for the purpose of positioning fields, is the smaller of the specified alignment and the alignment of the field's type.</source>
          <target state="translated">以下のために &lt;code&gt;packed&lt;/code&gt; 、指定された境界がなしタイプのアライメントよりも大きい場合 &lt;code&gt;packed&lt;/code&gt; 修飾は、アライメントとレイアウトは影響を受けません。各フィールドの配置は、フィールドを配置するために、指定された配置とフィールドタイプの配置のどちらか小さい方です。</target>
        </trans-unit>
        <trans-unit id="923e7c9f8f5916bc98ca7d99786bb3a648ab5049" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;path&lt;/code&gt; attributes inside inline module blocks, the relative location of the file path depends on the kind of source file the &lt;code&gt;path&lt;/code&gt; attribute is located in. &quot;mod-rs&quot; source files are root modules (such as &lt;code&gt;lib.rs&lt;/code&gt; or &lt;code&gt;main.rs&lt;/code&gt;) and modules with files named &lt;code&gt;mod.rs&lt;/code&gt;. &quot;non-mod-rs&quot; source files are all other module files. Paths for &lt;code&gt;path&lt;/code&gt; attributes inside inline module blocks in a mod-rs file are relative to the directory of the mod-rs file including the inline module components as directories. For non-mod-rs files, it is the same except the path starts with a directory with the name of the non-mod-rs module. For example, the following code snippet would use the paths shown based on where it is located:</source>
          <target state="translated">インラインモジュールブロック内の &lt;code&gt;path&lt;/code&gt; 属性の場合、ファイルパスの相対位置は、 &lt;code&gt;path&lt;/code&gt; 属性が配置されているソースファイルの種類によって異なります。「mod-rs」ソースファイルはルートモジュール（ &lt;code&gt;lib.rs&lt;/code&gt; や &lt;code&gt;main.rs&lt;/code&gt; など）です。そして &lt;code&gt;mod.rs&lt;/code&gt; という名前のファイルを持つモジュール。 「non-mod-rs」ソースファイルは、他のすべてのモジュールファイルです。 &lt;code&gt;path&lt;/code&gt; mod-rsファイルのインラインモジュールブロック内の属性のパスは、インラインモジュールコンポーネントをディレクトリとして含むmod-rsファイルのディレクトリを基準にしています。 mod-rs以外のファイルの場合、パスがmod-rs以外のモジュールの名前のディレクトリで始まることを除いて、同じです。たとえば、次のコードスニペットは、配置されている場所に基づいて表示されるパスを使用します。</target>
        </trans-unit>
        <trans-unit id="dfab802e53dcd0980d9211ee320dac167a703dcd" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;path&lt;/code&gt; attributes on modules not inside inline module blocks, the file path is relative to the directory the source file is located. For example, the following code snippet would use the paths shown based on where it is located:</source>
          <target state="translated">ための &lt;code&gt;path&lt;/code&gt; モジュールではない内部インラインモジュールブロックの属性、ファイル・パスは、ソースファイルが置かれているディレクトリからの相対。たとえば、次のコードスニペットは、配置されている場所に基づいて表示されるパスを使用します。</target>
        </trans-unit>
        <trans-unit id="3dd7e36edad8d4c66b9d73756a7e9df42b2bf6bf" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;structs&lt;/code&gt;, the size is determined by the following algorithm.</source>
          <target state="translated">以下のために &lt;code&gt;structs&lt;/code&gt; のサイズは、次のアルゴリズムによって決定されます。</target>
        </trans-unit>
        <trans-unit id="6ff44c29aba6a3b1bc418f65dba60f927d755f35" translate="yes" xml:space="preserve">
          <source>For Linux, macOS, and PowerShell on Windows, enter this:</source>
          <target state="translated">Linux、macOS、WindowsのPowerShellの場合は、これを入力します。</target>
        </trans-unit>
        <trans-unit id="0255b4e2a2f93f2b4e2d8aa8385a301c695c0e77" translate="yes" xml:space="preserve">
          <source>For Sets, all operations have the cost of the equivalent Map operation.</source>
          <target state="translated">セットの場合、すべての操作には、同等のマップ操作のコストがかかります。</target>
        </trans-unit>
        <trans-unit id="c7cc1c1542e1186f4de55716920db5bc7661558a" translate="yes" xml:space="preserve">
          <source>For Windows CMD, enter this:</source>
          <target state="translated">WindowsのCMDの場合は、これを入力します。</target>
        </trans-unit>
        <trans-unit id="e8a09318e4aecc4ba3f5576d47f7d0fc0404e3e6" translate="yes" xml:space="preserve">
          <source>For a Rust program to pass the privacy checking pass, all paths must be valid accesses given the two rules above. This includes all use statements, expressions, types, etc.</source>
          <target state="translated">Rust プログラムがプライバシーチェックをパスするためには、すべてのパスが上記の 2 つのルールに基づいた有効なアクセスでなければなりません。これには、すべての使用文、式、型などが含まれます。</target>
        </trans-unit>
        <trans-unit id="721c13185217ca5163b540357358e984418f8298" translate="yes" xml:space="preserve">
          <source>For a discussion of different locking strategies and their trade-offs, see &lt;a href=&quot;../sync/atomic/fn.spin_loop_hint&quot;&gt;&lt;code&gt;core::sync::atomic::spin_loop_hint&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">さまざまなロック戦略とそのトレードオフの説明については、&lt;a href=&quot;../sync/atomic/fn.spin_loop_hint&quot;&gt; &lt;code&gt;core::sync::atomic::spin_loop_hint&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a6f352f3c8751107e9c7e42b98ad0591d3538c17" translate="yes" xml:space="preserve">
          <source>For a file, the value specifies the last time that a file was read from or written to. For a directory, the value specifies when the directory was created. For both files and directories, the specified date is correct, but the time of day is always set to midnight.</source>
          <target state="translated">ファイルの場合は、最後にファイルが読み込まれたか書き込まれたかを指定します。ディレクトリの場合は、ディレクトリが作成された時刻を指定します。ファイルとディレクトリの両方で、指定された日付は正しいですが、時刻は常に真夜中に設定されています。</target>
        </trans-unit>
        <trans-unit id="647fe810a619072712836a1bdb49dbed8a4b1f4b" translate="yes" xml:space="preserve">
          <source>For a file, the value specifies the last time that a file was written to. For a directory, the structure specifies when the directory was created.</source>
          <target state="translated">ファイルの場合は、最後にファイルが書き込まれた時刻を指定します。ディレクトリの場合、構造体はディレクトリがいつ作成されたかを指定します。</target>
        </trans-unit>
        <trans-unit id="184a572ea33b05885cd109fbccf58b322acfb836" translate="yes" xml:space="preserve">
          <source>For a full reference, see &lt;a href=&quot;http://www.unicode.org/versions/Unicode7.0.0/ch03.pdf#G33992&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">完全なリファレンスについては、&lt;a href=&quot;http://www.unicode.org/versions/Unicode7.0.0/ch03.pdf#G33992&quot;&gt;ここを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8a026a81446d2c299885fea4ef646b54b601a628" translate="yes" xml:space="preserve">
          <source>For a generic item, you can copy over the parameters:</source>
          <target state="translated">一般的な項目の場合は、パラメータをコピーします。</target>
        </trans-unit>
        <trans-unit id="7421ee5b154df5e28d3a023a162558830a4adb57" translate="yes" xml:space="preserve">
          <source>For a generic struct, &lt;code&gt;#[derive]&lt;/code&gt; implements &lt;code&gt;Clone&lt;/code&gt; conditionally by adding bound &lt;code&gt;Clone&lt;/code&gt; on generic parameters.</source>
          <target state="translated">ジェネリック構造体の場合、 &lt;code&gt;#[derive]&lt;/code&gt; はジェネリックパラメーターにバインドされた &lt;code&gt;Clone&lt;/code&gt; を追加することにより、条件付きで &lt;code&gt;Clone&lt;/code&gt; を実装します。</target>
        </trans-unit>
        <trans-unit id="32da4d49301b83f44881cf4568bed0ee41e96684" translate="yes" xml:space="preserve">
          <source>For a let statement with an initializer, an &lt;em&gt;extending expression&lt;/em&gt; is an expression which is one of the following:</source>
          <target state="translated">初期化子を使用したletステートメントの場合、&lt;em&gt;拡張式&lt;/em&gt;は次のいずれかの&lt;em&gt;式&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="584bf730787a75a1719997d08b667d38c08e2ea5" translate="yes" xml:space="preserve">
          <source>For a more complete documentation see &lt;a href=&quot;fn.spawn&quot;&gt;&lt;code&gt;thread::spawn&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">より完全なドキュメントについては、&lt;a href=&quot;fn.spawn&quot;&gt; &lt;code&gt;thread::spawn&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c8c460d22a41e7606c57994d8c6a28932718cf2b" translate="yes" xml:space="preserve">
          <source>For a more complex example of moving data out of a pinned type, imagine if &lt;a href=&quot;../cell/struct.refcell&quot;&gt;&lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; had a method &lt;code&gt;fn get_pin_mut(self: Pin&amp;lt;&amp;amp;mut Self&amp;gt;) -&amp;gt; Pin&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt;. Then we could do the following:</source>
          <target state="translated">ピン留めされた型からデータを移動するより複雑な例として、&lt;a href=&quot;../cell/struct.refcell&quot;&gt; &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt;メソッド &lt;code&gt;fn get_pin_mut(self: Pin&amp;lt;&amp;amp;mut Self&amp;gt;) -&amp;gt; Pin&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; があったと想像してください。次に、以下を実行できます。</target>
        </trans-unit>
        <trans-unit id="4ac34c74fd617d583af55fa97b4ee576cf77109d" translate="yes" xml:space="preserve">
          <source>For a more comprehensive benchmark, you should check using various texts of various sizes as the &lt;code&gt;contents&lt;/code&gt;, different words and words of different lengths as the &lt;code&gt;query&lt;/code&gt;, and all kinds of other variations. The point is this: iterators, although a high-level abstraction, get compiled down to roughly the same code as if you&amp;rsquo;d written the lower-level code yourself. Iterators are one of Rust&amp;rsquo;s &lt;em&gt;zero-cost abstractions&lt;/em&gt;, by which we mean using the abstraction imposes no additional runtime overhead. This is analogous to how Bjarne Stroustrup, the original designer and implementor of C++, defines &lt;em&gt;zero-overhead&lt;/em&gt; in &amp;ldquo;Foundations of C++&amp;rdquo; (2012):</source>
          <target state="translated">より包括的なベンチマークについては、 &lt;code&gt;contents&lt;/code&gt; としてさまざまなサイズのさまざまなテキスト、 &lt;code&gt;query&lt;/code&gt; としてさまざまな単語と長さの異なる単語、およびその他のあらゆる種類のバリエーションを使用して確認する必要があります。ポイントはこれです。イテレータは、高レベルの抽象化ですが、自分で低レベルのコードを記述した場合とほぼ同じコードにコンパイルされます。イテレータは、Rustの&lt;em&gt;ゼロコスト抽象化&lt;/em&gt;の1つです。これにより、抽象化を使用しても、実行時のオーバーヘッドが増えることはありません。これは、C ++の最初の設計者であり実装者であるBjarne Stroustrup が「Foundations of C ++」（2012）で&lt;em&gt;オーバーヘッドなし&lt;/em&gt;を定義する方法に類似しています。</target>
        </trans-unit>
        <trans-unit id="a76d52c7eb79f9d18e4c8141f16d37a39eb23aea" translate="yes" xml:space="preserve">
          <source>For a more comprehensive understanding of 'digit', see &lt;a href=&quot;#method.is_numeric&quot;&gt;&lt;code&gt;is_numeric()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8c3ee9b7f75a6166ad08fd46bdfb3c7c5f3aa2d" translate="yes" xml:space="preserve">
          <source>For a more comprehensive understanding of 'digit', see &lt;a href=&quot;#method.is_numeric&quot;&gt;&lt;code&gt;is_numeric&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">「数字」のより包括的な理解については、&lt;a href=&quot;#method.is_numeric&quot;&gt; &lt;code&gt;is_numeric&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="af029266b2102335e9ca60b4eb325b82424cec62" translate="yes" xml:space="preserve">
          <source>For a more in-depth explanation of how to use &lt;code&gt;PhantomData&amp;lt;T&amp;gt;&lt;/code&gt;, please see &lt;a href=&quot;https://doc.rust-lang.org/nomicon/phantom-data.html&quot;&gt;the Nomicon&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;PhantomData&amp;lt;T&amp;gt;&lt;/code&gt; 使用方法の詳細については&lt;a href=&quot;https://doc.rust-lang.org/nomicon/phantom-data.html&quot;&gt;、Nomicon&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="34072c7c26ac45c9889fc99ef1564d3ceab6d702" translate="yes" xml:space="preserve">
          <source>For a mutex, this means that the &lt;a href=&quot;#method.lock&quot;&gt;&lt;code&gt;lock&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#method.try_lock&quot;&gt;&lt;code&gt;try_lock&lt;/code&gt;&lt;/a&gt; methods return a &lt;a href=&quot;../result/enum.result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt; which indicates whether a mutex has been poisoned or not. Most usage of a mutex will simply &lt;a href=&quot;../result/enum.result#method.unwrap&quot;&gt;&lt;code&gt;unwrap()&lt;/code&gt;&lt;/a&gt; these results, propagating panics among threads to ensure that a possibly invalid invariant is not witnessed.</source>
          <target state="translated">mutexの場合、これは、&lt;a href=&quot;#method.lock&quot;&gt; &lt;code&gt;lock&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#method.try_lock&quot;&gt; &lt;code&gt;try_lock&lt;/code&gt; &lt;/a&gt;メソッドが、mutexが汚染されているかどうかを示す&lt;a href=&quot;../result/enum.result&quot;&gt; &lt;code&gt;Result&lt;/code&gt; &lt;/a&gt;を返すことを意味します。mutexのほとんどの使用法は、これらの結果を単に&lt;a href=&quot;../result/enum.result#method.unwrap&quot;&gt; &lt;code&gt;unwrap()&lt;/code&gt; し&lt;/a&gt;、スレッド間でパニックを伝播して、無効である可能性のある不変条件が発生しないようにします。</target>
        </trans-unit>
        <trans-unit id="1303e2aac1fec56b39d2ac04d0af4683a5f720f6" translate="yes" xml:space="preserve">
          <source>For a mutex, this means that the &lt;a href=&quot;struct.mutex#method.lock&quot;&gt;&lt;code&gt;lock&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;struct.mutex#method.try_lock&quot;&gt;&lt;code&gt;try_lock&lt;/code&gt;&lt;/a&gt; methods return a &lt;a href=&quot;../result/enum.result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt; which indicates whether a mutex has been poisoned or not. Most usage of a mutex will simply &lt;a href=&quot;../result/enum.result#method.unwrap&quot;&gt;&lt;code&gt;unwrap()&lt;/code&gt;&lt;/a&gt; these results, propagating panics among threads to ensure that a possibly invalid invariant is not witnessed.</source>
          <target state="translated">ミューテックスの場合、これは、&lt;a href=&quot;struct.mutex#method.lock&quot;&gt; &lt;code&gt;lock&lt;/code&gt; &lt;/a&gt;メソッドと&lt;a href=&quot;struct.mutex#method.try_lock&quot;&gt; &lt;code&gt;try_lock&lt;/code&gt; &lt;/a&gt;メソッドがミューテックスがポイズニングされているかどうかを示す&lt;a href=&quot;../result/enum.result&quot;&gt; &lt;code&gt;Result&lt;/code&gt; &lt;/a&gt;を返すことを意味します。ミューテックスのほとんどの使用法は、これらの結果を単に&lt;a href=&quot;../result/enum.result#method.unwrap&quot;&gt; &lt;code&gt;unwrap()&lt;/code&gt; し&lt;/a&gt;、スレッド間でパニックを伝播して、無効である可能性のある不変条件が目撃されないようにします。</target>
        </trans-unit>
        <trans-unit id="110bad19ab93479b5e966e4b0cc50f978bba8b9c" translate="yes" xml:space="preserve">
          <source>For a place expression to be &lt;a href=&quot;expressions/operator-expr#assignment-expressions&quot;&gt;assigned&lt;/a&gt; to, mutably &lt;a href=&quot;expressions/operator-expr#borrow-operators&quot;&gt;borrowed&lt;/a&gt;, &lt;a href=&quot;#implicit-borrows&quot;&gt;implicitly mutably borrowed&lt;/a&gt;, or bound to a pattern containing &lt;code&gt;ref mut&lt;/code&gt; it must be &lt;em&gt;mutable&lt;/em&gt;. We call these &lt;em&gt;mutable place expressions&lt;/em&gt;. In contrast, other place expressions are called &lt;em&gt;immutable place expressions&lt;/em&gt;.</source>
          <target state="translated">プレイス式が&lt;a href=&quot;expressions/operator-expr#assignment-expressions&quot;&gt;割り当て&lt;/a&gt;られる、可変的に&lt;a href=&quot;expressions/operator-expr#borrow-operators&quot;&gt;借用される&lt;/a&gt;、&lt;a href=&quot;#implicit-borrows&quot;&gt;暗黙的に可変的に借用される&lt;/a&gt;、または &lt;code&gt;ref mut&lt;/code&gt; を含むパターンにバインドされるには、それが&lt;em&gt;可変&lt;/em&gt;である必要があります。これらを&lt;em&gt;可変の場所式&lt;/em&gt;と呼びます。対照的に、他の場所式は&lt;em&gt;不変の場所式&lt;/em&gt;と呼ば&lt;em&gt;れます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="727cb8735a255c915e275d498c1053a4223d0653" translate="yes" xml:space="preserve">
          <source>For a place expression to be &lt;a href=&quot;expressions/operator-expr#assignment-expressions&quot;&gt;assigned&lt;/a&gt; to, mutably &lt;a href=&quot;expressions/operator-expr#borrow-operators&quot;&gt;borrowed&lt;/a&gt;, &lt;a href=&quot;expressions#implicit-borrows&quot;&gt;implicitly mutably borrowed&lt;/a&gt;, or bound to a pattern containing &lt;code&gt;ref mut&lt;/code&gt; it must be &lt;em&gt;mutable&lt;/em&gt;. We call these &lt;em&gt;mutable place expressions&lt;/em&gt;. In contrast, other place expressions are called &lt;em&gt;immutable place expressions&lt;/em&gt;.</source>
          <target state="translated">する場所の発現のために&lt;a href=&quot;expressions/operator-expr#assignment-expressions&quot;&gt;割り当てられた&lt;/a&gt; mutablyに、&lt;a href=&quot;expressions/operator-expr#borrow-operators&quot;&gt;借りた&lt;/a&gt;、&lt;a href=&quot;expressions#implicit-borrows&quot;&gt;暗黙のうちにmutably借り&lt;/a&gt;、または含むパターンにバインドされた &lt;code&gt;ref mut&lt;/code&gt; それがなければなりません&lt;em&gt;変更可能&lt;/em&gt;。これらの&lt;em&gt;可変の場所式&lt;/em&gt;を呼び出します。対照的に、他の場所式は&lt;em&gt;不変の場所式&lt;/em&gt;と呼ば&lt;em&gt;れます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="0a4fd6dad5fac8c5fd74a9dbca3eb356df92719e" translate="yes" xml:space="preserve">
          <source>For a pointer to be valid, it is necessary, but not always sufficient, that the pointer be &lt;em&gt;dereferenceable&lt;/em&gt;: the memory range of the given size starting at the pointer must all be within the bounds of a single allocated object. Note that in Rust, every (stack-allocated) variable is considered a separate allocated object.</source>
          <target state="translated">ポインタが有効であるためには、ポインタが&lt;em&gt;逆参照&lt;/em&gt;可能である必要がありますが、必ずしも十分ではありません。ポインタから始まる指定されたサイズのメモリ範囲はすべて、割り当てられた単一のオブジェクトの範囲内にある必要があります。Rustでは、すべての（スタックに割り当てられた）変数は個別に割り当てられたオブジェクトと見なされることに注意してください。</target>
        </trans-unit>
        <trans-unit id="de9301d58c943a74d83bb3fa1ba310ec944b1bcb" translate="yes" xml:space="preserve">
          <source>For a real-world metaphor for a mutex, imagine a panel discussion at a conference with only one microphone. Before a panelist can speak, they have to ask or signal that they want to use the microphone. When they get the microphone, they can talk for as long as they want to and then hand the microphone to the next panelist who requests to speak. If a panelist forgets to hand the microphone off when they&amp;rsquo;re finished with it, no one else is able to speak. If management of the shared microphone goes wrong, the panel won&amp;rsquo;t work as planned!</source>
          <target state="translated">mutexの実際のメタファーとして、マイクが1つしかない会議でのパネルディスカッションを想像してみてください。パネリストが発言する前に、マイクを使用することを尋ねるか、信号を送る必要があります。マイクが届いたら、好きなだけ話してから、次のパネリストにマイクを渡して話してもらいます。パネリストがマイクの使用を終えたときにマイクを渡すのを忘れると、他の誰も話すことができなくなります。共有マイクの管理がうまくいかないと、パネルは予定通り機能しません！</target>
        </trans-unit>
        <trans-unit id="50947d30fed8f70a7887dbcd8ce5acf23cbf7259" translate="yes" xml:space="preserve">
          <source>For a safe alternative see &lt;a href=&quot;#method.get&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">安全な代替手段については、&lt;a href=&quot;#method.get&quot;&gt; &lt;code&gt;get&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="90ff72d90a7e5c0bf0e102c5c91fc1584cbdbc95" translate="yes" xml:space="preserve">
          <source>For a safe alternative see &lt;a href=&quot;#method.get_mut&quot;&gt;&lt;code&gt;get_mut&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">安全な代替手段については、&lt;a href=&quot;#method.get_mut&quot;&gt; &lt;code&gt;get_mut&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="574f9240f72aeac0bfeae5e0f00d9253ad522ec4" translate="yes" xml:space="preserve">
          <source>For a safe version of this function, see the &lt;a href=&quot;#method.from_u32&quot;&gt;&lt;code&gt;from_u32&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">この関数の安全なバージョンについては、&lt;a href=&quot;#method.from_u32&quot;&gt; &lt;code&gt;from_u32&lt;/code&gt; &lt;/a&gt;関数を参照してください。</target>
        </trans-unit>
        <trans-unit id="80cb9fa8331624fe1b3590f8bda584f9d5823d76" translate="yes" xml:space="preserve">
          <source>For a safe version of this function, see the &lt;a href=&quot;fn.from_u32&quot;&gt;&lt;code&gt;from_u32&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">この関数の安全なバージョンについては、&lt;a href=&quot;fn.from_u32&quot;&gt; &lt;code&gt;from_u32&lt;/code&gt; &lt;/a&gt;関数を参照してください。</target>
        </trans-unit>
        <trans-unit id="aa5bc88b13ac7c1bbb6ef7b8b5f285e4ac562cee" translate="yes" xml:space="preserve">
          <source>For a somewhat artificial example:</source>
          <target state="translated">やや人工的な例のために。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
