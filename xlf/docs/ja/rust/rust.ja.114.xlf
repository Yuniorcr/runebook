<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="rust">
    <body>
      <group id="rust">
        <trans-unit id="4d1ff8f5ffff8ef960fb18a0fc2cd0a8503af5f3" translate="yes" xml:space="preserve">
          <source>Each &lt;a href=&quot;../conditional-compilation#target_arch&quot;&gt;target architecture&lt;/a&gt; has a set of features that may be enabled. It is an error to specify a feature for a target architecture that the crate is not being compiled for.</source>
          <target state="translated">各&lt;a href=&quot;../conditional-compilation#target_arch&quot;&gt;ターゲットアーキテクチャに&lt;/a&gt;は、有効にできる一連の機能があります。クレートがコンパイルされていないターゲットアーキテクチャの機能を指定すると、エラーになります。</target>
        </trans-unit>
        <trans-unit id="8b610ae5a7928e4b33e09e0d35558c19bc915d18" translate="yes" xml:space="preserve">
          <source>Each &lt;a href=&quot;expressions&quot;&gt;expression&lt;/a&gt;</source>
          <target state="translated">各&lt;a href=&quot;expressions&quot;&gt;式&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6c186e5ab6fa7be6e7599c03e6fd8699ee0bc7cb" translate="yes" xml:space="preserve">
          <source>Each &lt;a href=&quot;statements&quot;&gt;statement&lt;/a&gt;</source>
          <target state="translated">各&lt;a href=&quot;statements&quot;&gt;ステートメント&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="126fff2b7eae12ac10e9fc33e97e0d4d2162c0c3" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;Duration&lt;/code&gt; is composed of a whole number of seconds and a fractional part represented in nanoseconds. If the underlying system does not support nanosecond-level precision, APIs binding a system timeout will typically round up the number of nanoseconds.</source>
          <target state="translated">各 &lt;code&gt;Duration&lt;/code&gt; は、秒の整数と、ナノ秒で表される小数部分で構成されます。基盤となるシステムがナノ秒レベルの精度をサポートしていない場合、システムタイムアウトをバインドするAPIは通常、ナノ秒の数を切り上げます。</target>
        </trans-unit>
        <trans-unit id="b5a691bd92d393002f3a7670f659a5d60edafb3e" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;TypeId&lt;/code&gt; is an opaque object which does not allow inspection of what's inside but does allow basic operations such as cloning, comparison, printing, and showing.</source>
          <target state="translated">各 &lt;code&gt;TypeId&lt;/code&gt; は不透明なオブジェクトであり、内部の内容を調べることはできませんが、複製、比較、印刷、表示などの基本的な操作はできます。</target>
        </trans-unit>
        <trans-unit id="b0f4cbffcf92a6a730cd388d8aa6b41349c26b49" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;Worker&lt;/code&gt; will hold on to the receiving side of the channel.</source>
          <target state="translated">各 &lt;code&gt;Worker&lt;/code&gt; はチャネルの受信側を保持します。</target>
        </trans-unit>
        <trans-unit id="ffe5e612429811f1e6a344c5077b43d7f29d7268" translate="yes" xml:space="preserve">
          <source>Each argument being formatted can be transformed by a number of formatting parameters (corresponding to &lt;code&gt;format_spec&lt;/code&gt; in &lt;a href=&quot;#syntax&quot;&gt;the syntax&lt;/a&gt;). These parameters affect the string representation of what's being formatted.</source>
          <target state="translated">フォーマットされる各引数は、いくつかのフォーマットパラメータ（&lt;a href=&quot;#syntax&quot;&gt;構文の&lt;/a&gt; &lt;code&gt;format_spec&lt;/code&gt; に対応）によって変換できます。これらのパラメータは、フォーマットされているものの文字列表現に影響を与えます。</target>
        </trans-unit>
        <trans-unit id="51fb881c439bc37c1da05d8ca4692423b5476f4d" translate="yes" xml:space="preserve">
          <source>Each argument being formatted can be transformed by a number of formatting parameters (corresponding to &lt;code&gt;format_spec&lt;/code&gt; in the syntax above). These parameters affect the string representation of what's being formatted.</source>
          <target state="translated">フォーマットされる各引数は、いくつかのフォーマットパラメータ（上記の構文の &lt;code&gt;format_spec&lt;/code&gt; に対応）によって変換できます。これらのパラメータは、フォーマットされているものの文字列表現に影響します。</target>
        </trans-unit>
        <trans-unit id="2fab2074feae60354cbe728f2512b43b2c4e8b66" translate="yes" xml:space="preserve">
          <source>Each argument's type is dictated by the format string. There are various parameters which require a particular type, however. An example is the &lt;code&gt;{:.*}&lt;/code&gt; syntax, which sets the number of decimal places in floating-point types:</source>
          <target state="translated">各引数のタイプは、フォーマット文字列によって決定されます。ただし、特定のタイプを必要とするさまざまなパラメーターがあります。例は、浮動小数点型の小数点以下の桁数を設定する &lt;code&gt;{:.*}&lt;/code&gt; 構文です。</target>
        </trans-unit>
        <trans-unit id="4d401e8f75ed1564889625d847d0b8bf06d64de9" translate="yes" xml:space="preserve">
          <source>Each arm of a &lt;code&gt;match&lt;/code&gt; expression</source>
          <target state="translated">&lt;code&gt;match&lt;/code&gt; 式の各アーム</target>
        </trans-unit>
        <trans-unit id="53d9823fc4ad3a5b4bcb7842fce97e6e2d0a739e" translate="yes" xml:space="preserve">
          <source>Each block, including the function body</source>
          <target state="translated">機能本体を含む各ブロック</target>
        </trans-unit>
        <trans-unit id="e689bee36f13f483e57d17b06b0d01ad647cca32" translate="yes" xml:space="preserve">
          <source>Each call to &lt;code&gt;build_hasher&lt;/code&gt; on the same instance should produce identical &lt;a href=&quot;trait.hasher&quot;&gt;&lt;code&gt;Hasher&lt;/code&gt;&lt;/a&gt;s.</source>
          <target state="translated">同じインスタンスで &lt;code&gt;build_hasher&lt;/code&gt; を呼び出すたびに、同一の&lt;a href=&quot;trait.hasher&quot;&gt; &lt;code&gt;Hasher&lt;/code&gt; &lt;/a&gt;が生成されます。</target>
        </trans-unit>
        <trans-unit id="76da7377edc287826a9e3cffa2f67b70b8f822cb" translate="yes" xml:space="preserve">
          <source>Each call to &lt;code&gt;write&lt;/code&gt; may generate an I/O error indicating that the operation could not be completed. If an error is returned then no bytes in the buffer were written to this writer.</source>
          <target state="translated">&lt;code&gt;write&lt;/code&gt; 呼び出すたびに、操作を完了できなかったことを示すI / Oエラーが生成される場合があります。エラーが返された場合、バッファ内のバイトはこのライターに書き込まれていません。</target>
        </trans-unit>
        <trans-unit id="1f681d715a85138d7fdd7fd9df6c7f6a7bb7a5a8" translate="yes" xml:space="preserve">
          <source>Each element is a tuple &lt;code&gt;(&amp;amp;OsStr, Option&amp;lt;&amp;amp;OsStr&amp;gt;)&lt;/code&gt;, where the first value is the key, and the second is the value, which is &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if the environment variable is to be explicitly removed.</source>
          <target state="translated">各要素はタプル &lt;code&gt;(&amp;amp;OsStr, Option&amp;lt;&amp;amp;OsStr&amp;gt;)&lt;/code&gt; であり、最初の値がキーで、2番目の値が値です。環境変数を明示的に削除する場合は&lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="5505b7fafdec1d07aa6049b16ef0572579ca163c" translate="yes" xml:space="preserve">
          <source>Each elided lifetime in the parameters becomes a distinct lifetime parameter.</source>
          <target state="translated">パラメータ内の各イールドされたライフタイムは、別個のライフタイムパラメータになります。</target>
        </trans-unit>
        <trans-unit id="ac84b4da72304f13a33e9918424e7a3159c19d66" translate="yes" xml:space="preserve">
          <source>Each expression in these statements uses a mathematical operator and evaluates to a single value, which is then bound to a variable. &lt;a href=&quot;appendix-02-operators&quot;&gt;Appendix B&lt;/a&gt; contains a list of all operators that Rust provides.</source>
          <target state="translated">これらのステートメントの各式は、数学演算子を使用して単一の値に評価され、それが変数にバインドされます。&lt;a href=&quot;appendix-02-operators&quot;&gt;付録Bに&lt;/a&gt;は、Rustが提供するすべての演算子のリストが含まれています。</target>
        </trans-unit>
        <trans-unit id="bfa0be1bbcbbaf27ece23163a5b358f5d378e30b" translate="yes" xml:space="preserve">
          <source>Each expression in these statements uses a mathematical operator and evaluates to a single value, which is then bound to a variable. Appendix B contains a list of all operators that Rust provides.</source>
          <target state="translated">これらのステートメントの各式は数学演算子を使用し、1つの値に評価され、変数に束縛されます。付録Bには、Rustが提供するすべての演算子のリストが含まれています。</target>
        </trans-unit>
        <trans-unit id="2a952ee9c28143001d43ba7762ef890ea80c77a0" translate="yes" xml:space="preserve">
          <source>Each field of a struct can only be bound once in a pattern.</source>
          <target state="translated">構造体の各フィールドは、パターン内で一度しかバインドできません。</target>
        </trans-unit>
        <trans-unit id="98b648d683519b063d3d01de1013d6f8f926a4a0" translate="yes" xml:space="preserve">
          <source>Each field of a struct can only be bound once in a pattern. Erroneous code example:</source>
          <target state="translated">構造体の各フィールドは、パターン内で 1 回しかバインドできません。誤ったコード例です。</target>
        </trans-unit>
        <trans-unit id="596f842caba952d8ab1722311a31161194ab9a00" translate="yes" xml:space="preserve">
          <source>Each field should be specified exactly once. Example:</source>
          <target state="translated">各フィールドは一度だけ指定する必要があります。例</target>
        </trans-unit>
        <trans-unit id="7c3a2bcc4b3856f751522107575a023bbd05d3da" translate="yes" xml:space="preserve">
          <source>Each field should be specified exactly one time. Example:</source>
          <target state="translated">各フィールドは一度だけ指定する必要があります。例</target>
        </trans-unit>
        <trans-unit id="0a165198ce4d478cb6979644898f24a5dcb33316" translate="yes" xml:space="preserve">
          <source>Each form of conditional compilation takes a &lt;em&gt;configuration predicate&lt;/em&gt; that evaluates to true or false. The predicate is one of the following:</source>
          <target state="translated">条件付きコンパイルの各形式は、trueまたはfalseに評価される&lt;em&gt;構成述語&lt;/em&gt;を取ります。述語は次のいずれかです。</target>
        </trans-unit>
        <trans-unit id="e29d597dc3479d0ff5165035104ed891e9a3c733" translate="yes" xml:space="preserve">
          <source>Each formatting argument is allowed to specify which value argument it's referencing, and if omitted it is assumed to be &quot;the next argument&quot;. For example, the format string &lt;code&gt;{} {} {}&lt;/code&gt; would take three parameters, and they would be formatted in the same order as they're given. The format string &lt;code&gt;{2} {1} {0}&lt;/code&gt;, however, would format arguments in reverse order.</source>
          <target state="translated">各フォーマット引数は、参照する値引数を指定できます。省略した場合、「次の引数」と見なされます。たとえば、フォーマット文字列 &lt;code&gt;{} {} {}&lt;/code&gt; は3つのパラメーターを受け取り、指定された順序でフォーマットされます。ただし、フォーマット文字列 &lt;code&gt;{2} {1} {0}&lt;/code&gt; は、引数を逆の順序でフォーマットします。</target>
        </trans-unit>
        <trans-unit id="6212de18af89501deddf634ee59e72577ed563ce" translate="yes" xml:space="preserve">
          <source>Each handle is a shared reference to a global buffer of input data to this process. A handle can be &lt;code&gt;lock&lt;/code&gt;'d to gain full access to &lt;a href=&quot;trait.bufread&quot;&gt;&lt;code&gt;BufRead&lt;/code&gt;&lt;/a&gt; methods (e.g., &lt;code&gt;.lines()&lt;/code&gt;). Reads to this handle are otherwise locked with respect to other reads.</source>
          <target state="translated">各ハンドルは、このプロセスへの入力データのグローバルバッファーへの共有参照です。ハンドルを &lt;code&gt;lock&lt;/code&gt; して、&lt;a href=&quot;trait.bufread&quot;&gt; &lt;code&gt;BufRead&lt;/code&gt; &lt;/a&gt;メソッド（例： &lt;code&gt;.lines()&lt;/code&gt; ）へのフルアクセスを取得できます。このハンドルへの読み取りは、他の読み取りに関して他の方法でロックされます。</target>
        </trans-unit>
        <trans-unit id="af78c237d46d22dff52ea4303802921c5c6c0c85" translate="yes" xml:space="preserve">
          <source>Each handle returned is a reference to a shared global buffer whose access is synchronized via a mutex. If you need more explicit control over locking, see the &lt;a href=&quot;struct.stdin#method.lock&quot;&gt;&lt;code&gt;Stdin::lock&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">返される各ハンドルは、ミューテックスを介してアクセスが同期される共有グローバルバッファーへの参照です。ロックをより明示的に制御する必要がある場合は、&lt;a href=&quot;struct.stdin#method.lock&quot;&gt; &lt;code&gt;Stdin::lock&lt;/code&gt; &lt;/a&gt;メソッドを参照してください。</target>
        </trans-unit>
        <trans-unit id="985f12b7461263d71870583720b19710a8dc8a51" translate="yes" xml:space="preserve">
          <source>Each handle returned is a reference to a shared global buffer whose access is synchronized via a mutex. If you need more explicit control over locking, see the &lt;a href=&quot;struct.stdin#method.lock&quot;&gt;&lt;code&gt;lock() method&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返される各ハンドルは、ミューテックスを介してアクセスが同期される共有グローバルバッファーへの参照です。ロックをより明示的に制御する必要がある場合は、&lt;a href=&quot;struct.stdin#method.lock&quot;&gt; &lt;code&gt;lock() method&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7a2cc9890a7bc22b2694c10334ba392aac36973a" translate="yes" xml:space="preserve">
          <source>Each handle returned is a reference to a shared global buffer whose access is synchronized via a mutex. If you need more explicit control over locking, see the &lt;a href=&quot;struct.stdout#method.lock&quot;&gt;&lt;code&gt;Stdout::lock&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">返される各ハンドルは、ミューテックスを介してアクセスが同期される共有グローバルバッファーへの参照です。ロックをより明示的に制御する必要がある場合は、&lt;a href=&quot;struct.stdout#method.lock&quot;&gt; &lt;code&gt;Stdout::lock&lt;/code&gt; &lt;/a&gt;メソッドを参照してください。</target>
        </trans-unit>
        <trans-unit id="120a2ccebccc3b74d363975f9e56ebe3a7a7dc42" translate="yes" xml:space="preserve">
          <source>Each handle returned is a reference to a shared global buffer whose access is synchronized via a mutex. If you need more explicit control over locking, see the &lt;a href=&quot;struct.stdout#method.lock&quot;&gt;Stdout::lock&lt;/a&gt; method.</source>
          <target state="translated">返される各ハンドルは、ミューテックスを介してアクセスが同期される共有グローバルバッファーへの参照です。ロックをより明示的に制御する必要がある場合は、&lt;a href=&quot;struct.stdout#method.lock&quot;&gt;Stdout :: lock&lt;/a&gt;メソッドを参照してください。</target>
        </trans-unit>
        <trans-unit id="9d3042d64748bbd401e62170b38ccfa6626c0d2a" translate="yes" xml:space="preserve">
          <source>Each handle shares a global buffer of data to be written to the standard output stream. Access is also synchronized via a lock and explicit control over locking is available via the &lt;a href=&quot;#method.lock&quot;&gt;&lt;code&gt;lock&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">各ハンドルは、標準出力ストリームに書き込まれるデータのグローバルバッファーを共有します。アクセスはロックを介しても同期され、ロックを介した明示的な制御は&lt;a href=&quot;#method.lock&quot;&gt; &lt;code&gt;lock&lt;/code&gt; &lt;/a&gt;メソッドを。</target>
        </trans-unit>
        <trans-unit id="5020c82f20053feaeeb1ccfa723596b5b2d2ed75" translate="yes" xml:space="preserve">
          <source>Each handle shares a global buffer of data to be written to the standard output stream. Access is also synchronized via a lock and explicit control over locking is available via the &lt;a href=&quot;struct.stdout#method.lock&quot;&gt;&lt;code&gt;lock&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">各ハンドルは、標準出力ストリームに書き込まれるデータのグローバルバッファを共有します。アクセスもロックを介して同期され、ロックの明示的な制御は&lt;a href=&quot;struct.stdout#method.lock&quot;&gt; &lt;code&gt;lock&lt;/code&gt; &lt;/a&gt;方式を介して利用できます。</target>
        </trans-unit>
        <trans-unit id="28a7482cc238ca16f0aa5f21e0a35f1857d60dc3" translate="yes" xml:space="preserve">
          <source>Each impl will be checked for a size match in the transmute as usual, and since there are no unbound type parameters involved, this should compile unless there is a size mismatch in one of the impls.</source>
          <target state="translated">各インプリムは通常通りtransmuteでサイズが一致するかどうかチェックされ、アンバウンド型のパラメータが関与していないので、いずれかのインプリムにサイズの不一致がない限りコンパイルされるはずです。</target>
        </trans-unit>
        <trans-unit id="4e56a3a94b01885e400d6ab42c5ea938e1a6e145" translate="yes" xml:space="preserve">
          <source>Each item in a cons list contains two elements: the value of the current item and the next item. The last item in the list contains only a value called &lt;code&gt;Nil&lt;/code&gt; without a next item. A cons list is produced by recursively calling the &lt;code&gt;cons&lt;/code&gt; function. The canonical name to denote the base case of the recursion is &lt;code&gt;Nil&lt;/code&gt;. Note that this is not the same as the &amp;ldquo;null&amp;rdquo; or &amp;ldquo;nil&amp;rdquo; concept in Chapter 6, which is an invalid or absent value.</source>
          <target state="translated">consリストの各アイテムには、現在のアイテムの値と次のアイテムの2つの要素が含まれます。リストの最後の項目には、次の項目のない &lt;code&gt;Nil&lt;/code&gt; と呼ばれる値のみが含まれています。consリストは、 &lt;code&gt;cons&lt;/code&gt; 関数を再帰的に呼び出すことによって作成されます。再帰の基本ケースを示す正規名は &lt;code&gt;Nil&lt;/code&gt; です。これは、第6章の「null」または「nil」の概念と同じではないことに注意してください。これは、無効または存在しない値です。</target>
        </trans-unit>
        <trans-unit id="852e121b150d57636c4943389fd0ee28559a6838" translate="yes" xml:space="preserve">
          <source>Each kind of &lt;code&gt;if&lt;/code&gt; expression can be mixed and matched as needed.</source>
          <target state="translated">それぞれの &lt;code&gt;if&lt;/code&gt; 式は、必要に応じて混合および照合できます。</target>
        </trans-unit>
        <trans-unit id="ded57eb4b4ac6434138ebb0e6ce8cea4b02e0c8f" translate="yes" xml:space="preserve">
          <source>Each line of the iterator has the same error semantics as &lt;a href=&quot;trait.bufread#method.read_line&quot;&gt;&lt;code&gt;BufRead::read_line&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">イテレータの各行には、&lt;a href=&quot;trait.bufread#method.read_line&quot;&gt; &lt;code&gt;BufRead::read_line&lt;/code&gt; &lt;/a&gt;と同じエラーセマンティクスがあります。。</target>
        </trans-unit>
        <trans-unit id="ffbc239bac63a8ea1c51d3c3ac8b5c84017ff8e5" translate="yes" xml:space="preserve">
          <source>Each macro by example has a name, and one or more &lt;em&gt;rules&lt;/em&gt;. Each rule has two parts: a &lt;em&gt;matcher&lt;/em&gt;, describing the syntax that it matches, and a &lt;em&gt;transcriber&lt;/em&gt;, describing the syntax that will replace a successfully matched invocation. Both the matcher and the transcriber must be surrounded by delimiters. Macros can expand to expressions, statements, items (including traits, impls, and foreign items), types, or patterns.</source>
          <target state="translated">例による各マクロには、名前と1つ以上の&lt;em&gt;ルールがあります&lt;/em&gt;。各ルールには2つの部分があります。一致する構文を説明する&lt;em&gt;matcher&lt;/em&gt;と、正常に一致した呼び出しを置き換える構文を説明する&lt;em&gt;transcriber&lt;/em&gt;です。マッチャーとトランスクリバーの両方を区切り文字で囲む必要があります。マクロは、式、ステートメント、アイテム（特性、実装、および外部アイテムを含む）、タイプ、またはパターンに展開できます。</target>
        </trans-unit>
        <trans-unit id="13ac03403d9d72048c9c285809f1471d60299197" translate="yes" xml:space="preserve">
          <source>Each method takes an &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; which represents the strength of the memory barrier for that operation. These orderings are the same as &lt;a href=&quot;https://llvm.org/docs/LangRef.html#memory-model-for-concurrent-operations&quot;&gt;LLVM atomic orderings&lt;/a&gt;. For more information see the &lt;a href=&quot;https://doc.rust-lang.org/nomicon/atomics.html&quot;&gt;nomicon&lt;/a&gt;.</source>
          <target state="translated">各メソッドは、その操作のメモリバリアの強さを表す&lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt;を取ります。これらの順序は、&lt;a href=&quot;https://llvm.org/docs/LangRef.html#memory-model-for-concurrent-operations&quot;&gt;LLVMのアトミック順序&lt;/a&gt;と同じです。詳細については、&lt;a href=&quot;https://doc.rust-lang.org/nomicon/atomics.html&quot;&gt; nomiconをください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="005e83ce9610accdc5e27bc12422e0fba380d26e" translate="yes" xml:space="preserve">
          <source>Each method takes an &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; which represents the strength of the memory barrier for that operation. These orderings are the same as the &lt;a href=&quot;https://en.cppreference.com/w/cpp/atomic/memory_order&quot;&gt;C++20 atomic orderings&lt;/a&gt;. For more information see the &lt;a href=&quot;https://doc.rust-lang.org/nomicon/atomics.html&quot;&gt;nomicon&lt;/a&gt;.</source>
          <target state="translated">各メソッドは、その操作のメモリバリアの強度を表す&lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt;を取ります。これらの順序は、&lt;a href=&quot;https://en.cppreference.com/w/cpp/atomic/memory_order&quot;&gt;C ++ 20アトミック順序&lt;/a&gt;と同じです。詳細については、&lt;a href=&quot;https://doc.rust-lang.org/nomicon/atomics.html&quot;&gt;nomiconを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="6537bf38895482fa3623658db5eb6e88c641811b" translate="yes" xml:space="preserve">
          <source>Each model has its own advantages and trade-offs, and the trade-off most important to Rust is runtime support. &lt;em&gt;Runtime&lt;/em&gt; is a confusing term and can have different meanings in different contexts.</source>
          <target state="translated">各モデルには独自の利点とトレードオフがあり、Rustにとって最も重要なトレードオフはランタイムサポートです。&lt;em&gt;ランタイム&lt;/em&gt;は混乱を招く用語であり、コンテキストによって意味が異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="25ef8ee64fe0670303125d2546058ffc382cec75" translate="yes" xml:space="preserve">
          <source>Each occurrence of a field name binds the value of that field, so to fix this error you will have to remove or alter the duplicate uses of the field name. Perhaps you misspelled another field name? Example:</source>
          <target state="translated">フィールド名の各出現はそのフィールドの値をバインドするため、このエラーを修正するには、フィールド名の重複使用を削除するか変更する必要があります。おそらく、別のフィールド名のスペルを間違えたのではないでしょうか?例。</target>
        </trans-unit>
        <trans-unit id="e4c2d2e19dedfdb643a875437959d32c799f7692" translate="yes" xml:space="preserve">
          <source>Each of the three sets is made up of tokens. FIRST(M) and LAST(M) may also contain a distinguished non-token element &amp;epsilon; (&quot;epsilon&quot;), which indicates that M can match the empty fragment. (But FOLLOW(M) is always just a set of tokens.)</source>
          <target state="translated">3つのセットはそれぞれトークンで構成されています。FIRST（M）およびLAST（M）は、Mが空のフラグメントと一致できることを示す、区別された非トークン要素&amp;epsilon;（「イプシロン」）も含む場合があります。（しかし、FOLLOW（M）は常に単なるトークンのセットです。）</target>
        </trans-unit>
        <trans-unit id="529daff7df36c871aeb8f2255242bd9bae5a4c61" translate="yes" xml:space="preserve">
          <source>Each project can opt in to an edition other than the default 2015 edition. Editions can contain incompatible changes, such as including a new keyword that conflicts with identifiers in code. However, unless you opt in to those changes, your code will continue to compile even as you upgrade the Rust compiler version you use.</source>
          <target state="translated">各プロジェクトは、デフォルトの2015年版以外のエディションを選択することができます。エディションには、コード内の識別子と競合する新しいキーワードを含むなど、互換性のない変更が含まれることがあります。ただし、これらの変更をオプトインしない限り、使用している Rust コンパイラのバージョンをアップグレードしても、コードのコンパイルは継続されます。</target>
        </trans-unit>
        <trans-unit id="43c3ac95973230f595f727b4f66021ade2e24dee" translate="yes" xml:space="preserve">
          <source>Each repetition in the transcriber must contain at least one metavariable to decide how many times to expand it. If multiple metavariables appear in the same repetition, they must be bound to the same number of fragments. For instance, &lt;code&gt;( $( $i:ident ),* ; $( $j:ident ),* ) =&amp;gt;( $( ($i,$j) ),*&lt;/code&gt; must bind the same number of &lt;code&gt;$i&lt;/code&gt; fragments as &lt;code&gt;$j&lt;/code&gt; fragments. This means that invoking the macro with &lt;code&gt;(a, b, c; d, e, f&lt;/code&gt;) is legal and expands to &lt;code&gt;((a,d), (b,e), (c,f))&lt;/code&gt;, but &lt;code&gt;(a, b, c; d, e)&lt;/code&gt; is illegal because it does not have the same number. This requirement applies to every layer of nested repetitions.</source>
          <target state="translated">転記者の各繰り返しには、それを展開する回数を決定するために、少なくとも1つのメタ変数が含まれている必要があります。複数のメタ変数が同じ繰り返しで表示される場合、それらは同じ数のフラグメントにバインドされている必要があります。たとえば、 &lt;code&gt;( $( $i:ident ),* ; $( $j:ident ),* ) =&amp;gt;( $( ($i,$j) ),*&lt;/code&gt; 同じ数のバインドする必要があります &lt;code&gt;$i&lt;/code&gt; として断片を &lt;code&gt;$j&lt;/code&gt; フラグメント。これは、 &lt;code&gt;(a, b, c; d, e, f&lt;/code&gt; ）を使用してマクロを呼び出すことは合法であり、 &lt;code&gt;((a,d), (b,e), (c,f))&lt;/code&gt; に展開されることを意味しますが、 &lt;code&gt;(a, b, c; d, e)&lt;/code&gt; は同じ数ではないため違法です。この要件は、ネストされた繰り返しのすべてのレイヤーに適用されます。</target>
        </trans-unit>
        <trans-unit id="8224a868c65606856106ca950b67bbb8c08e5b07" translate="yes" xml:space="preserve">
          <source>Each signed variant can store numbers from -(2&lt;sup&gt;n - 1&lt;/sup&gt;) to 2&lt;sup&gt;n - 1&lt;/sup&gt; - 1 inclusive, where &lt;em&gt;n&lt;/em&gt; is the number of bits that variant uses. So an &lt;code&gt;i8&lt;/code&gt; can store numbers from -(2&lt;sup&gt;7&lt;/sup&gt;) to 2&lt;sup&gt;7&lt;/sup&gt; - 1, which equals -128 to 127. Unsigned variants can store numbers from 0 to 2&lt;sup&gt;n&lt;/sup&gt; - 1, so a &lt;code&gt;u8&lt;/code&gt; can store numbers from 0 to 2&lt;sup&gt;8&lt;/sup&gt; - 1, which equals 0 to 255.</source>
          <target state="translated">各符号付きバリアントは-（2 &lt;sup&gt;n-1&lt;/sup&gt;）から2 &lt;sup&gt;n-&lt;/sup&gt; 1-1までの数値を格納できます。ここで、&lt;em&gt;n&lt;/em&gt;はバリアントが使用するビット数です。よう &lt;code&gt;i8&lt;/code&gt; （2 -から数値を格納することができる&lt;sup&gt;7&lt;/sup&gt; 2）&lt;sup&gt;7&lt;/sup&gt; 1、0から2までの番号を記憶することができる-128〜127符号なしバリアント等しく- &lt;sup&gt;N&lt;/sup&gt;ので、1 - &lt;code&gt;u8&lt;/code&gt; 0~2の数字を格納することができる&lt;sup&gt;8&lt;/sup&gt; - 1は0〜255です。</target>
        </trans-unit>
        <trans-unit id="826672438fc84d16512d6b633474458774ceb436" translate="yes" xml:space="preserve">
          <source>Each source file contains a sequence of zero or more &lt;a href=&quot;items&quot;&gt;&lt;em&gt;Item&lt;/em&gt;&lt;/a&gt; definitions, and may optionally begin with any number of &lt;a href=&quot;attributes&quot;&gt;attributes&lt;/a&gt; that apply to the containing module, most of which influence the behavior of the compiler. The anonymous crate module can have additional attributes that apply to the crate as a whole.</source>
          <target state="translated">各ソースファイルには、0個以上の&lt;a href=&quot;items&quot;&gt;&lt;em&gt;アイテム&lt;/em&gt;&lt;/a&gt;定義のシーケンスが含まれ、オプションで任意の数の&lt;a href=&quot;attributes&quot;&gt;属性で&lt;/a&gt;開始できます、含まれているモジュールに適用されるでほとんどは、コンパイラーの動作に影響します。匿名のクレートモジュールには、クレート全体に適用される追加の属性を含めることができます。</target>
        </trans-unit>
        <trans-unit id="2bcfd176c2c18a5eb4d1aa2d727e87e0a6ab57a2" translate="yes" xml:space="preserve">
          <source>Each struct is allowed to have multiple &lt;code&gt;impl&lt;/code&gt; blocks. For example, Listing 5-15 is equivalent to the code shown in Listing 5-16, which has each method in its own &lt;code&gt;impl&lt;/code&gt; block.</source>
          <target state="translated">各構造体は複数の &lt;code&gt;impl&lt;/code&gt; ブロックを持つことができます。たとえば、リスト5-15はリスト5-16に示すコードと同等であり、独自の &lt;code&gt;impl&lt;/code&gt; ブロックに各メソッドがあります。</target>
        </trans-unit>
        <trans-unit id="b28b84bcd926510d253c8bf7cc054739faffc294" translate="yes" xml:space="preserve">
          <source>Each value in Rust has a variable that&amp;rsquo;s called its &lt;em&gt;owner&lt;/em&gt;.</source>
          <target state="translated">Rustの各値には、その&lt;em&gt;所有者&lt;/em&gt;と呼ばれる変数があります。</target>
        </trans-unit>
        <trans-unit id="82b1c873ef1982debfe7e46f90253b46864a593d" translate="yes" xml:space="preserve">
          <source>Each variable or temporary is associated to a &lt;em&gt;drop scope&lt;/em&gt;. When control flow leaves a drop scope all variables associated to that scope are dropped in reverse order of declaration (for variables) or creation (for temporaries).</source>
          <target state="translated">各変数または一時変数は、&lt;em&gt;ドロップスコープに&lt;/em&gt;関連付けられてい&lt;em&gt;ます&lt;/em&gt;。制御フローがドロップスコープを離れると、そのスコープに関連付けられているすべての変数が、宣言（変数の場合）または作成（一時の場合）の逆の順序でドロップされます。</target>
        </trans-unit>
        <trans-unit id="d1248dd1ef6e49e7192eb1bfecd501c0ca3a729a" translate="yes" xml:space="preserve">
          <source>Each variant can be either signed or unsigned and has an explicit size. &lt;em&gt;Signed&lt;/em&gt; and &lt;em&gt;unsigned&lt;/em&gt; refer to whether it&amp;rsquo;s possible for the number to be negative or positive&amp;mdash;in other words, whether the number needs to have a sign with it (signed) or whether it will only ever be positive and can therefore be represented without a sign (unsigned). It&amp;rsquo;s like writing numbers on paper: when the sign matters, a number is shown with a plus sign or a minus sign; however, when it&amp;rsquo;s safe to assume the number is positive, it&amp;rsquo;s shown with no sign. Signed numbers are stored using &lt;a href=&quot;https://en.wikipedia.org/wiki/Two%27s_complement&quot;&gt;two&amp;rsquo;s complement&lt;/a&gt; representation.</source>
          <target state="translated">各バリアントは、署名付きまたは署名なしのいずれかで、明示的なサイズを持っています。&lt;em&gt;符号付き&lt;/em&gt;と&lt;em&gt;符号なし&lt;/em&gt;は、数値が負または正になる可能性があるかどうか、つまり、数値に符号を付ける必要があるか（符号付き）か、常に正になるため符号なしで表すことができるかどうかを示します。 （署名なし）。これは、紙に数字を書くようなものです。記号が重要な場合、数値はプラス記号またはマイナス記号で表示されます。ただし、数値が正であると仮定しても安全な場合は、符号なしで表示されます。符号付きの数値は、&lt;a href=&quot;https://en.wikipedia.org/wiki/Two%27s_complement&quot;&gt;2の補数&lt;/a&gt;表現を使用して格納されます。</target>
        </trans-unit>
        <trans-unit id="61ee8b007725434b7c09cf7c2567fe31ea575955" translate="yes" xml:space="preserve">
          <source>Each variant can be either signed or unsigned and has an explicit size. &lt;em&gt;Signed&lt;/em&gt; and &lt;em&gt;unsigned&lt;/em&gt; refer to whether it&amp;rsquo;s possible for the number to be negative&amp;mdash;in other words, whether the number needs to have a sign with it (signed) or whether it will only ever be positive and can therefore be represented without a sign (unsigned). It&amp;rsquo;s like writing numbers on paper: when the sign matters, a number is shown with a plus sign or a minus sign; however, when it&amp;rsquo;s safe to assume the number is positive, it&amp;rsquo;s shown with no sign. Signed numbers are stored using &lt;a href=&quot;https://en.wikipedia.org/wiki/Two%27s_complement&quot;&gt;two&amp;rsquo;s complement&lt;/a&gt; representation.</source>
          <target state="translated">各バリアントは、符号付きまたは符号なしのいずれかであり、明示的なサイズがあります。&lt;em&gt;符号付き&lt;/em&gt;と&lt;em&gt;符号なし&lt;/em&gt;は、数値が負になる可能性があるかどうか、つまり、数値に符号を付ける必要があるか（符号付き）、または正の数のみであるため符号なしで表すことができるか（符号なし）を示します。 ）。紙に数字を書くようなものです。記号が重要な場合、数字はプラス記号またはマイナス記号で表示されます。ただし、数値が正であると安全に想定できる場合は、符号なしで表示されます。符号付き数値は、&lt;a href=&quot;https://en.wikipedia.org/wiki/Two%27s_complement&quot;&gt;2の補数&lt;/a&gt;表現を使用して格納されます。</target>
        </trans-unit>
        <trans-unit id="ae4005452949f70bdd59201e1664fc31638b85fc" translate="yes" xml:space="preserve">
          <source>Earlier we mentioned that &lt;code&gt;mpsc&lt;/code&gt; was an acronym for &lt;em&gt;multiple producer, single consumer&lt;/em&gt;. Let&amp;rsquo;s put &lt;code&gt;mpsc&lt;/code&gt; to use and expand the code in Listing 16-10 to create multiple threads that all send values to the same receiver. We can do so by cloning the transmitting half of the channel, as shown in Listing 16-11:</source>
          <target state="translated">以前、 &lt;code&gt;mpsc&lt;/code&gt; は&lt;em&gt;複数のプロデューサー、単一のコンシューマーの&lt;/em&gt;頭字語であると述べました。 &lt;code&gt;mpsc&lt;/code&gt; を入れましょうを使用してリスト16-10のコードを拡張し、すべてが同じレシーバーに値を送信する複数のスレッドを作成して。リスト16-11で示されるように、チャネルの送信半分を複製することでこれを行うことができます：</target>
        </trans-unit>
        <trans-unit id="f9104eca113a616e8b6b5222ed0f8f64de7c15e8" translate="yes" xml:space="preserve">
          <source>Earlier, we mentioned that &lt;em&gt;src/main.rs&lt;/em&gt; and &lt;em&gt;src/lib.rs&lt;/em&gt; are called crate roots. The reason for their name is that the contents of either of these two files form a module named &lt;code&gt;crate&lt;/code&gt; at the root of the crate&amp;rsquo;s module structure, known as the &lt;em&gt;module tree&lt;/em&gt;.</source>
          <target state="translated">以前、&lt;em&gt;src / main.rs&lt;/em&gt;と&lt;em&gt;src / lib.rs&lt;/em&gt;はクレートルートと呼ばれると述べました。自分の名前の理由は、いずれかのこれらの2つのファイルの内容は、モジュールの名前を形成していることを &lt;code&gt;crate&lt;/code&gt; として知られているクレートのモジュール構造のルートに、&lt;em&gt;モジュールの木を&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="8af0638157ce0436ec1d89f88bb4a626ee5af9e1" translate="yes" xml:space="preserve">
          <source>Earlier, we said that when a variable goes out of scope, Rust automatically calls the &lt;code&gt;drop&lt;/code&gt; function and cleans up the heap memory for that variable. But Figure 4-2 shows both data pointers pointing to the same location. This is a problem: when &lt;code&gt;s2&lt;/code&gt; and &lt;code&gt;s1&lt;/code&gt; go out of scope, they will both try to free the same memory. This is known as a &lt;em&gt;double free&lt;/em&gt; error and is one of the memory safety bugs we mentioned previously. Freeing memory twice can lead to memory corruption, which can potentially lead to security vulnerabilities.</source>
          <target state="translated">以前、変数がスコープ外になると、Rustは自動的に &lt;code&gt;drop&lt;/code&gt; 関数を呼び出し、その変数のヒープメモリをクリーンアップすると述べました。ただし、図4-2は、同じ場所を指す両方のデータポインターを示しています。これは問題です： &lt;code&gt;s2&lt;/code&gt; と &lt;code&gt;s1&lt;/code&gt; がスコープから外れると、どちらも同じメモリを解放しようとします。これは&lt;em&gt;ダブルフリー&lt;/em&gt;エラーと呼ばれ、前述のメモリ安全性バグの1つです。メモリを2回解放すると、メモリが破損し、セキュリティの脆弱性につながる可能性があります。</target>
        </trans-unit>
        <trans-unit id="3559305c539f50358a28e6967b817c4a3af48ba6" translate="yes" xml:space="preserve">
          <source>Editions</source>
          <target state="translated">Editions</target>
        </trans-unit>
        <trans-unit id="fe2f3c7e0d37f0fcea8ada0967a1f5281c5447fa" translate="yes" xml:space="preserve">
          <source>Editions serve different purposes for different people:</source>
          <target state="translated">エディションの目的は人によって異なります。</target>
        </trans-unit>
        <trans-unit id="f6bdb2491e02663c8bfa6e859883774fe82e4040" translate="yes" xml:space="preserve">
          <source>Effectively, an &lt;code&gt;&amp;lt;expr&amp;gt;.await&lt;/code&gt; expression is roughly equivalent to the following (this desugaring is not normative):</source>
          <target state="translated">事実上、 &lt;code&gt;&amp;lt;expr&amp;gt;.await&lt;/code&gt; 式は、次の式とほぼ同等です（この脱糖は規範的ではありません）。</target>
        </trans-unit>
        <trans-unit id="3ddf90b741a5808501725fb99a40e8cb4767ad9e" translate="yes" xml:space="preserve">
          <source>Efficiently create a Rust vector from an unsafe buffer:</source>
          <target state="translated">安全でないバッファから効率的に Rust ベクトルを作成します。</target>
        </trans-unit>
        <trans-unit id="3bb3b33251059cb5f93747019aa489c21ce5547c" translate="yes" xml:space="preserve">
          <source>Either</source>
          <target state="translated">Either</target>
        </trans-unit>
        <trans-unit id="735b39b5e1fb2a552fe04a8c371d6acca44fa4bc" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;std::cmp::Reverse&lt;/code&gt; or a custom &lt;code&gt;Ord&lt;/code&gt; implementation can be used to make &lt;code&gt;BinaryHeap&lt;/code&gt; a min-heap. This makes &lt;code&gt;heap.pop()&lt;/code&gt; return the smallest value instead of the greatest one.</source>
          <target state="translated">どちらか &lt;code&gt;std::cmp::Reverse&lt;/code&gt; またはカスタム &lt;code&gt;Ord&lt;/code&gt; 実装を作るために使用することができる &lt;code&gt;BinaryHeap&lt;/code&gt; 分、ヒープ。これにより、 &lt;code&gt;heap.pop()&lt;/code&gt; は最大値ではなく最小値を返します。</target>
        </trans-unit>
        <trans-unit id="a70333a7ae21a253176f079ae93be5dbb35a407c" translate="yes" xml:space="preserve">
          <source>Either move the macro import to crate root or do without the foreign macros. This will work:</source>
          <target state="translated">マクロのインポートをクレートルートに移動するか、外部マクロを使わないようにします。これでうまくいきます。</target>
        </trans-unit>
        <trans-unit id="aff9ff23c50e3f5fba65cd2173ee12632778d7ee" translate="yes" xml:space="preserve">
          <source>Either one or another</source>
          <target state="translated">どっちもどっち</target>
        </trans-unit>
        <trans-unit id="f3598e073888fbcf63fdd3c270953e0ae45124fb" translate="yes" xml:space="preserve">
          <source>Either the listed macro is not contained in the imported crate, or it is not exported from the given crate.</source>
          <target state="translated">リストされたマクロがインポートされた木箱に含まれていないか、指定された木箱からエクスポートされていないかのいずれかです。</target>
        </trans-unit>
        <trans-unit id="9487c16dd694cb43fb6e406b590ac8cb37cecbda" translate="yes" xml:space="preserve">
          <source>Either way, it should work fine with our previous code:</source>
          <target state="translated">いずれにしても、以前のコードでは問題なく動作するはずです。</target>
        </trans-unit>
        <trans-unit id="4887f80534edc76ba79070565ace9c1e809fb5f6" translate="yes" xml:space="preserve">
          <source>Either we make &lt;code&gt;'short&lt;/code&gt; live at least as long as &lt;code&gt;'long&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;'short&lt;/code&gt; 少なくとも &lt;code&gt;'long&lt;/code&gt; 限り'短いライブにするか：</target>
        </trans-unit>
        <trans-unit id="19e5bc7039aed82680dc56ae6c5f774dc0779417" translate="yes" xml:space="preserve">
          <source>Element at index 0 is the front of the queue.</source>
          <target state="translated">インデックス 0 の要素がキューの先頭になります。</target>
        </trans-unit>
        <trans-unit id="6ac8e95f9b8071b5313c568706b4d3ff98f0e698" translate="yes" xml:space="preserve">
          <source>Elements in the slice may be modified if the cursor is not advanced to the end of the slice. For example if we have a slice of buffers with 2 &lt;code&gt;IoSlice&lt;/code&gt;s, both of length 8, and we advance the cursor by 10 bytes the first &lt;code&gt;IoSlice&lt;/code&gt; will be untouched however the second will be modified to remove the first 2 bytes (10 - 8).</source>
          <target state="translated">カーソルがスライスの最後まで進んでいない場合、スライス内の要素が変更される可能性があります。たとえば、両方とも長さが8の2つの &lt;code&gt;IoSlice&lt;/code&gt; を持つバッファのスライスがあり、カーソルを10バイト &lt;code&gt;IoSlice&lt;/code&gt; と、最初のIoSliceは変更されませんが、2番目のIoSliceは変更され、最初の2バイト（10〜8）が削除されます。 。</target>
        </trans-unit>
        <trans-unit id="5257352590f6463dbbefefa68374845d15ff47aa" translate="yes" xml:space="preserve">
          <source>Elements in the slice may be modified if the cursor is not advanced to the end of the slice. For example if we have a slice of buffers with 2 &lt;code&gt;IoSliceMut&lt;/code&gt;s, both of length 8, and we advance the cursor by 10 bytes the first &lt;code&gt;IoSliceMut&lt;/code&gt; will be untouched however the second will be modified to remove the first 2 bytes (10 - 8).</source>
          <target state="translated">カーソルがスライスの最後まで進んでいない場合、スライス内の要素が変更される可能性があります。たとえば、両方とも長さが8の2つの &lt;code&gt;IoSliceMut&lt;/code&gt; を持つバッファのスライスがあり、カーソルを10バイト &lt;code&gt;IoSliceMut&lt;/code&gt; と、最初のIoSliceMutは変更されませんが、2番目のIoSliceMutは変更され、最初の2バイト（10〜8）が削除されます。 。</target>
        </trans-unit>
        <trans-unit id="00cfa54a12b3df8cb91e454b158ab4fad56ee3b3" translate="yes" xml:space="preserve">
          <source>Elements of &lt;a href=&quot;expressions/array-expr&quot;&gt;array expressions&lt;/a&gt;, &lt;a href=&quot;expressions/tuple-expr&quot;&gt;tuple expressions&lt;/a&gt;, &lt;a href=&quot;expressions/call-expr&quot;&gt;call expressions&lt;/a&gt;, and tuple-style &lt;a href=&quot;expressions/struct-expr&quot;&gt;struct&lt;/a&gt; and &lt;a href=&quot;expressions/enum-variant-expr&quot;&gt;enum variant&lt;/a&gt; expressions.</source>
          <target state="translated">&lt;a href=&quot;expressions/array-expr&quot;&gt;配列式&lt;/a&gt;、&lt;a href=&quot;expressions/tuple-expr&quot;&gt;タプル式&lt;/a&gt;、&lt;a href=&quot;expressions/call-expr&quot;&gt;呼び出し式&lt;/a&gt;、およびタプルスタイルの&lt;a href=&quot;expressions/struct-expr&quot;&gt;構造体&lt;/a&gt;および&lt;a href=&quot;expressions/enum-variant-expr&quot;&gt;列挙型バリアント&lt;/a&gt;式の要素。</target>
        </trans-unit>
        <trans-unit id="d4aabe272181c1d02b5056e4cb3eb888eb5c68e0" translate="yes" xml:space="preserve">
          <source>Elements of &lt;a href=&quot;expressions/array-expr&quot;&gt;array expressions&lt;/a&gt;, &lt;a href=&quot;expressions/tuple-expr&quot;&gt;tuple expressions&lt;/a&gt;, &lt;a href=&quot;expressions/call-expr&quot;&gt;call expressions&lt;/a&gt;, tuple-style &lt;a href=&quot;expressions/struct-expr&quot;&gt;struct&lt;/a&gt; and &lt;a href=&quot;expressions/enum-variant-expr&quot;&gt;enum variant&lt;/a&gt; expressions.</source>
          <target state="translated">&lt;a href=&quot;expressions/array-expr&quot;&gt;配列式&lt;/a&gt;、&lt;a href=&quot;expressions/tuple-expr&quot;&gt;タプル式&lt;/a&gt;、&lt;a href=&quot;expressions/call-expr&quot;&gt;呼び出し式&lt;/a&gt;、タプルスタイルの&lt;a href=&quot;expressions/struct-expr&quot;&gt;構造体&lt;/a&gt;、&lt;a href=&quot;expressions/enum-variant-expr&quot;&gt;列挙型バリアント&lt;/a&gt;式の要素。</target>
        </trans-unit>
        <trans-unit id="500d10adef4cd5d1297c11aad8cb70be0d0b2a2c" translate="yes" xml:space="preserve">
          <source>Else: &lt;code&gt;self - other&lt;/code&gt;</source>
          <target state="translated">その他： &lt;code&gt;self - other&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cd6b9f566ed84f7c6ebff963a98832649b6428f9" translate="yes" xml:space="preserve">
          <source>Emit better compiler error if a macro is passed invalid values. Without the final branch, the compiler would still emit an error, but the error's message would not mention the two valid values.</source>
          <target state="translated">マクロに無効な値が渡された場合のコンパイラエラーを改善しました。最終ブランチがなければ、コンパイラはエラーを出しますが、エラーのメッセージは2つの有効な値には言及しません。</target>
        </trans-unit>
        <trans-unit id="19ea122a01cb5f56e9030f4750a2bd2620a3c2a4" translate="yes" xml:space="preserve">
          <source>Emit compiler error if one of a number of features isn't available.</source>
          <target state="translated">いくつかの機能のうちの1つが利用できない場合は、コンパイラエラーを表示します。</target>
        </trans-unit>
        <trans-unit id="0a63de9b321e517ed318dc394786fe241484733d" translate="yes" xml:space="preserve">
          <source>Emits a &lt;code&gt;!nontemporal&lt;/code&gt; store according to LLVM (see their docs). Probably will never become stable.</source>
          <target state="translated">発する &lt;code&gt;!nontemporal&lt;/code&gt; LLVM（自分のドキュメントを参照）に応じて店を。おそらく安定することはありません。</target>
        </trans-unit>
        <trans-unit id="cc11c362cb8c7a68637fca0f41bdd938d124ce2a" translate="yes" xml:space="preserve">
          <source>Emits a machine instruction hinting to the processor that it is running in busy-wait spin-loop (&quot;spin lock&quot;).</source>
          <target state="translated">プロセッサがビジーウェイトスピンループ(「スピンロック」)中に実行されていることを示唆するマシン命令を送信します。</target>
        </trans-unit>
        <trans-unit id="e26bd17ce43d35af4b24b779dae6854239b77dc7" translate="yes" xml:space="preserve">
          <source>Emits a machine instruction to signal the processor that it is running in a busy-wait spin-loop (&quot;spin lock&quot;).</source>
          <target state="translated">マシン命令を送信して、プロセッサがビジーウェイト・スピンループ(「スピンロック」)で実行中であることを通知します。</target>
        </trans-unit>
        <trans-unit id="3159fe421b3221381b3c778dc1c3c26e4540be37" translate="yes" xml:space="preserve">
          <source>Empty</source>
          <target state="translated">Empty</target>
        </trans-unit>
        <trans-unit id="c426785cafeae6fe02152b31eb9200ba4a059dd1" translate="yes" xml:space="preserve">
          <source>Empty structs are instantiated with just their name, and don't need anything else. &lt;code&gt;let thing = EmptyStruct;&lt;/code&gt;</source>
          <target state="translated">空の構造体は名前だけでインスタンス化され、他に何も必要ありません。 &lt;code&gt;let thing = EmptyStruct;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="826c264e6ec984da8d64c4bff69753e114d91fa9" translate="yes" xml:space="preserve">
          <source>Empty tuple (aka unit), both literal and type</source>
          <target state="translated">空のタプル(別名ユニット)、リテラルと型の両方</target>
        </trans-unit>
        <trans-unit id="a0be8bae04477ba285605e1e618ce61e58fc878d" translate="yes" xml:space="preserve">
          <source>Empty::all</source>
          <target state="translated">Empty::all</target>
        </trans-unit>
        <trans-unit id="588c67af3e635b816f2ca34ce18a1d9e68286178" translate="yes" xml:space="preserve">
          <source>Empty::any</source>
          <target state="translated">Empty::any</target>
        </trans-unit>
        <trans-unit id="b8e34ce7579c115aafaf037149d154d7710101ea" translate="yes" xml:space="preserve">
          <source>Empty::borrow</source>
          <target state="translated">Empty::borrow</target>
        </trans-unit>
        <trans-unit id="164510d737c42fe085a2de0e68d478a0ce4b79c8" translate="yes" xml:space="preserve">
          <source>Empty::borrow_mut</source>
          <target state="translated">Empty::borrow_mut</target>
        </trans-unit>
        <trans-unit id="5cfbcb79cd343b7cba743b6e04570e63139b25bd" translate="yes" xml:space="preserve">
          <source>Empty::by_ref</source>
          <target state="translated">Empty::by_ref</target>
        </trans-unit>
        <trans-unit id="d6f3a18d0ce2e56d667bc60326704f4618e5ea25" translate="yes" xml:space="preserve">
          <source>Empty::bytes</source>
          <target state="translated">Empty::bytes</target>
        </trans-unit>
        <trans-unit id="d39a954a988932cc07257c6c5464d233b64f56e5" translate="yes" xml:space="preserve">
          <source>Empty::chain</source>
          <target state="translated">Empty::chain</target>
        </trans-unit>
        <trans-unit id="7264c7bae7e2248346fa781aa02d3fe6ea776d06" translate="yes" xml:space="preserve">
          <source>Empty::clone</source>
          <target state="translated">Empty::clone</target>
        </trans-unit>
        <trans-unit id="fd94ef5a1455716632ff18a0a63a53b7a1b435b6" translate="yes" xml:space="preserve">
          <source>Empty::clone_from</source>
          <target state="translated">Empty::clone_from</target>
        </trans-unit>
        <trans-unit id="9716fdd5f765a65574ec16c3541f700b22e58672" translate="yes" xml:space="preserve">
          <source>Empty::clone_into</source>
          <target state="translated">Empty::clone_into</target>
        </trans-unit>
        <trans-unit id="c41130073b19dcf47de19bf3dba0a5394bf2f72c" translate="yes" xml:space="preserve">
          <source>Empty::cloned</source>
          <target state="translated">Empty::cloned</target>
        </trans-unit>
        <trans-unit id="280a7ebb7ddd12621bbf01003efcc701d63356de" translate="yes" xml:space="preserve">
          <source>Empty::cmp</source>
          <target state="translated">Empty::cmp</target>
        </trans-unit>
        <trans-unit id="8a204c5a277829cdf8be911e7ecddd1b27e49645" translate="yes" xml:space="preserve">
          <source>Empty::collect</source>
          <target state="translated">Empty::collect</target>
        </trans-unit>
        <trans-unit id="e40a1c7440ad89ae8eb7972049d5d9f4ec627a36" translate="yes" xml:space="preserve">
          <source>Empty::consume</source>
          <target state="translated">Empty::consume</target>
        </trans-unit>
        <trans-unit id="fb2ba4d26c2097e4bbe519ef485e8540ada4f454" translate="yes" xml:space="preserve">
          <source>Empty::copied</source>
          <target state="translated">Empty::copied</target>
        </trans-unit>
        <trans-unit id="c556fd8dcc4d109de38b4f97973bd2178b7d8909" translate="yes" xml:space="preserve">
          <source>Empty::count</source>
          <target state="translated">Empty::count</target>
        </trans-unit>
        <trans-unit id="7c733228b4fba011f56e38412439567731d1772f" translate="yes" xml:space="preserve">
          <source>Empty::cycle</source>
          <target state="translated">Empty::cycle</target>
        </trans-unit>
        <trans-unit id="05aa4013ff65ca238b08fdf38d917bf447623ba1" translate="yes" xml:space="preserve">
          <source>Empty::default</source>
          <target state="translated">Empty::default</target>
        </trans-unit>
        <trans-unit id="eccb8d34684e82d63a6c2d7943c30cc5097c3b8b" translate="yes" xml:space="preserve">
          <source>Empty::enumerate</source>
          <target state="translated">Empty::enumerate</target>
        </trans-unit>
        <trans-unit id="04f789652a67b0f5d0ecc499d27af614de94bd6c" translate="yes" xml:space="preserve">
          <source>Empty::eq</source>
          <target state="translated">Empty::eq</target>
        </trans-unit>
        <trans-unit id="b4d4e9361303779522e8538d4fa8d5cb1cf4eb21" translate="yes" xml:space="preserve">
          <source>Empty::fill_buf</source>
          <target state="translated">Empty::fill_buf</target>
        </trans-unit>
        <trans-unit id="279f047c835e800e7dc14f83bb4d7e4d8272e1cd" translate="yes" xml:space="preserve">
          <source>Empty::filter</source>
          <target state="translated">Empty::filter</target>
        </trans-unit>
        <trans-unit id="4b9234e859b3610b9b0ecebf372522da018a07da" translate="yes" xml:space="preserve">
          <source>Empty::filter_map</source>
          <target state="translated">Empty::filter_map</target>
        </trans-unit>
        <trans-unit id="ab444c31041089fe3c560fdc696e34673de1eb8b" translate="yes" xml:space="preserve">
          <source>Empty::find</source>
          <target state="translated">Empty::find</target>
        </trans-unit>
        <trans-unit id="4c379a12f6dce6b3c288e2564f11c2477392289b" translate="yes" xml:space="preserve">
          <source>Empty::find_map</source>
          <target state="translated">Empty::find_map</target>
        </trans-unit>
        <trans-unit id="744d54cdde66a8cd9d001af5237bb01f49085fcf" translate="yes" xml:space="preserve">
          <source>Empty::flat_map</source>
          <target state="translated">Empty::flat_map</target>
        </trans-unit>
        <trans-unit id="44529a067ac5e4f8b019339c7ca0806cbf8727df" translate="yes" xml:space="preserve">
          <source>Empty::flatten</source>
          <target state="translated">Empty::flatten</target>
        </trans-unit>
        <trans-unit id="f559e6af7c0391cf12ec7798c374571c74a1659d" translate="yes" xml:space="preserve">
          <source>Empty::fmt</source>
          <target state="translated">Empty::fmt</target>
        </trans-unit>
        <trans-unit id="7530b1f2726e57c5f54dc81195df034a983257a5" translate="yes" xml:space="preserve">
          <source>Empty::fold</source>
          <target state="translated">Empty::fold</target>
        </trans-unit>
        <trans-unit id="d70aa73c81fd067259497233e675208d193cd65c" translate="yes" xml:space="preserve">
          <source>Empty::for_each</source>
          <target state="translated">Empty::for_each</target>
        </trans-unit>
        <trans-unit id="2dcf8cedbfb430407c39821cee99eb2242e04c00" translate="yes" xml:space="preserve">
          <source>Empty::from</source>
          <target state="translated">Empty::from</target>
        </trans-unit>
        <trans-unit id="8e056f99dc851f045aa0666631387c62ff10b0de" translate="yes" xml:space="preserve">
          <source>Empty::fuse</source>
          <target state="translated">Empty::fuse</target>
        </trans-unit>
        <trans-unit id="2608c3c3093afcd9d17dd809bf746a1cb06dc633" translate="yes" xml:space="preserve">
          <source>Empty::ge</source>
          <target state="translated">Empty::ge</target>
        </trans-unit>
        <trans-unit id="c18a8ab1d88150773946bbec3cee63c7e4b57a1e" translate="yes" xml:space="preserve">
          <source>Empty::gt</source>
          <target state="translated">Empty::gt</target>
        </trans-unit>
        <trans-unit id="9ba0810325be9ab99dc0e7612bf287bb097ba2a6" translate="yes" xml:space="preserve">
          <source>Empty::initializer</source>
          <target state="translated">Empty::initializer</target>
        </trans-unit>
        <trans-unit id="5fc14d6ebec1bf2aa78029053bf0f13bd917c405" translate="yes" xml:space="preserve">
          <source>Empty::inspect</source>
          <target state="translated">Empty::inspect</target>
        </trans-unit>
        <trans-unit id="b7b9908da2e97f182a6cbe82180994cb67969430" translate="yes" xml:space="preserve">
          <source>Empty::into</source>
          <target state="translated">Empty::into</target>
        </trans-unit>
        <trans-unit id="44252b70382278e07bd4368799bfdf061c83f4e0" translate="yes" xml:space="preserve">
          <source>Empty::into_iter</source>
          <target state="translated">Empty::into_iter</target>
        </trans-unit>
        <trans-unit id="a402f3276a92704f6b0ac69ef24f0dd970215fae" translate="yes" xml:space="preserve">
          <source>Empty::is_empty</source>
          <target state="translated">Empty::is_empty</target>
        </trans-unit>
        <trans-unit id="dce7b307e69b29085f1b11bc245e98974c9b4d33" translate="yes" xml:space="preserve">
          <source>Empty::is_sorted</source>
          <target state="translated">Empty::is_sorted</target>
        </trans-unit>
        <trans-unit id="a510c1edce102d227832ad4567d27d8614ad2fff" translate="yes" xml:space="preserve">
          <source>Empty::is_sorted_by</source>
          <target state="translated">Empty::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="b5cf8d7557419eaa1f8dab24740bfb70210303fe" translate="yes" xml:space="preserve">
          <source>Empty::is_sorted_by_key</source>
          <target state="translated">Empty::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="4e7e858bf1391d0bf1baea232132143a2c1c12a1" translate="yes" xml:space="preserve">
          <source>Empty::last</source>
          <target state="translated">Empty::last</target>
        </trans-unit>
        <trans-unit id="a648c452c1c81b5f777562b98bc56877237bb9c2" translate="yes" xml:space="preserve">
          <source>Empty::le</source>
          <target state="translated">Empty::le</target>
        </trans-unit>
        <trans-unit id="35ce802b8cbcc363b49fd596edeb175cd3e656ea" translate="yes" xml:space="preserve">
          <source>Empty::len</source>
          <target state="translated">Empty::len</target>
        </trans-unit>
        <trans-unit id="9236df1cd50c2bf464e411d63fcc22c91a209f7a" translate="yes" xml:space="preserve">
          <source>Empty::lines</source>
          <target state="translated">Empty::lines</target>
        </trans-unit>
        <trans-unit id="56580cfcd4f7069ec84dd4b48fbb77efa9cdf78b" translate="yes" xml:space="preserve">
          <source>Empty::lt</source>
          <target state="translated">Empty::lt</target>
        </trans-unit>
        <trans-unit id="6c22ebdc9211707c8a9e6c00c5eb9bf705b3bdf9" translate="yes" xml:space="preserve">
          <source>Empty::map</source>
          <target state="translated">Empty::map</target>
        </trans-unit>
        <trans-unit id="f9fc8ab59aa634d6cd5e2c607004e0fb9224f9d8" translate="yes" xml:space="preserve">
          <source>Empty::max</source>
          <target state="translated">Empty::max</target>
        </trans-unit>
        <trans-unit id="690ce54b5213d69a88c87f8d95df58f08ebc0f5e" translate="yes" xml:space="preserve">
          <source>Empty::max_by</source>
          <target state="translated">Empty::max_by</target>
        </trans-unit>
        <trans-unit id="8447eea61887eacbe123452c1ca960112dae3642" translate="yes" xml:space="preserve">
          <source>Empty::max_by_key</source>
          <target state="translated">Empty::max_by_key</target>
        </trans-unit>
        <trans-unit id="f8df4c1408eb1aba4a37e366fb6388bd06e0399d" translate="yes" xml:space="preserve">
          <source>Empty::min</source>
          <target state="translated">Empty::min</target>
        </trans-unit>
        <trans-unit id="0ec9fd877a9dfe33f71c157c079210a36775d194" translate="yes" xml:space="preserve">
          <source>Empty::min_by</source>
          <target state="translated">Empty::min_by</target>
        </trans-unit>
        <trans-unit id="5ba48382fbb39138358224249aaa2f30341c3fb0" translate="yes" xml:space="preserve">
          <source>Empty::min_by_key</source>
          <target state="translated">Empty::min_by_key</target>
        </trans-unit>
        <trans-unit id="2493765d87d5cafb57ad0bbfa6411a61570fabb5" translate="yes" xml:space="preserve">
          <source>Empty::ne</source>
          <target state="translated">Empty::ne</target>
        </trans-unit>
        <trans-unit id="876c62747fa1a8f03bebc42db119b6ad628e7e89" translate="yes" xml:space="preserve">
          <source>Empty::next</source>
          <target state="translated">Empty::next</target>
        </trans-unit>
        <trans-unit id="0320a440a8eab3a1c2c33dddcf805c0f1578436a" translate="yes" xml:space="preserve">
          <source>Empty::next_back</source>
          <target state="translated">Empty::next_back</target>
        </trans-unit>
        <trans-unit id="975b29a6b10731c0bccb44e78109779062ab0759" translate="yes" xml:space="preserve">
          <source>Empty::nth</source>
          <target state="translated">Empty::nth</target>
        </trans-unit>
        <trans-unit id="b824c27239fd65ca9cf3cd1bc3775d11e36b5f6a" translate="yes" xml:space="preserve">
          <source>Empty::nth_back</source>
          <target state="translated">Empty::nth_back</target>
        </trans-unit>
        <trans-unit id="b86c06f4c10a1d7a9bf5006059dbf5d704f7d4ec" translate="yes" xml:space="preserve">
          <source>Empty::partial_cmp</source>
          <target state="translated">Empty::partial_cmp</target>
        </trans-unit>
        <trans-unit id="846cdd45d4afcafaa77164780cb5c284f10a3e74" translate="yes" xml:space="preserve">
          <source>Empty::partition</source>
          <target state="translated">Empty::partition</target>
        </trans-unit>
        <trans-unit id="9fb457483353f2b55827eff5c59520bc65815a6d" translate="yes" xml:space="preserve">
          <source>Empty::peekable</source>
          <target state="translated">Empty::peekable</target>
        </trans-unit>
        <trans-unit id="7c2221a238963b4ace0dd59546588466626910d5" translate="yes" xml:space="preserve">
          <source>Empty::position</source>
          <target state="translated">Empty::position</target>
        </trans-unit>
        <trans-unit id="15b1087c90f3c68f8adfe858feeade9fea35b8e7" translate="yes" xml:space="preserve">
          <source>Empty::product</source>
          <target state="translated">Empty::product</target>
        </trans-unit>
        <trans-unit id="f9aef2b1d81e1f0263f8ed11ff99c4716018b139" translate="yes" xml:space="preserve">
          <source>Empty::read</source>
          <target state="translated">Empty::read</target>
        </trans-unit>
        <trans-unit id="d7b9f9449ae27f82ae4a3c3cb8bb9070d4c36d16" translate="yes" xml:space="preserve">
          <source>Empty::read_exact</source>
          <target state="translated">Empty::read_exact</target>
        </trans-unit>
        <trans-unit id="b36df35eb3237f195bfcf0642b3bb0f52e9001bf" translate="yes" xml:space="preserve">
          <source>Empty::read_line</source>
          <target state="translated">Empty::read_line</target>
        </trans-unit>
        <trans-unit id="62732f5d5acb4c275863ed4fdebc3bfb90ce7b21" translate="yes" xml:space="preserve">
          <source>Empty::read_to_end</source>
          <target state="translated">Empty::read_to_end</target>
        </trans-unit>
        <trans-unit id="2c63193c078f6eaad7e26d4a6ebe921e700de4d7" translate="yes" xml:space="preserve">
          <source>Empty::read_to_string</source>
          <target state="translated">Empty::read_to_string</target>
        </trans-unit>
        <trans-unit id="ecc7aa61a750be8fb6145051478c62576ddce715" translate="yes" xml:space="preserve">
          <source>Empty::read_until</source>
          <target state="translated">Empty::read_until</target>
        </trans-unit>
        <trans-unit id="8441c16f8771d67e9ea2e64e8b064da280d8dc65" translate="yes" xml:space="preserve">
          <source>Empty::read_vectored</source>
          <target state="translated">Empty::read_vectored</target>
        </trans-unit>
        <trans-unit id="97162e8e2347c4f720e62da9d07a5e38c0705bdd" translate="yes" xml:space="preserve">
          <source>Empty::rev</source>
          <target state="translated">Empty::rev</target>
        </trans-unit>
        <trans-unit id="6154c05de60ee9548946e9d0f2f3b39f77aa7116" translate="yes" xml:space="preserve">
          <source>Empty::rfind</source>
          <target state="translated">Empty::rfind</target>
        </trans-unit>
        <trans-unit id="4760bfb9a37139dd42c32dc832bc1fb35b66a56a" translate="yes" xml:space="preserve">
          <source>Empty::rfold</source>
          <target state="translated">Empty::rfold</target>
        </trans-unit>
        <trans-unit id="f4f3831dc565261a20f764ae8a66a97c889939aa" translate="yes" xml:space="preserve">
          <source>Empty::rposition</source>
          <target state="translated">Empty::rposition</target>
        </trans-unit>
        <trans-unit id="a2400ded95ec1b396f8612ac1e246eb1a11fd133" translate="yes" xml:space="preserve">
          <source>Empty::scan</source>
          <target state="translated">Empty::scan</target>
        </trans-unit>
        <trans-unit id="989aaaa7b827453370fdd285e7590574978278ed" translate="yes" xml:space="preserve">
          <source>Empty::size_hint</source>
          <target state="translated">Empty::size_hint</target>
        </trans-unit>
        <trans-unit id="8f23dd91b8ee8d0b74d053dc898db86fc0210d68" translate="yes" xml:space="preserve">
          <source>Empty::skip</source>
          <target state="translated">Empty::skip</target>
        </trans-unit>
        <trans-unit id="b7497a7f45804bec8b02da693111cc7a72fbf805" translate="yes" xml:space="preserve">
          <source>Empty::skip_while</source>
          <target state="translated">Empty::skip_while</target>
        </trans-unit>
        <trans-unit id="eaa77d5620a137a9e8f1c337be78b6b642b988aa" translate="yes" xml:space="preserve">
          <source>Empty::split</source>
          <target state="translated">Empty::split</target>
        </trans-unit>
        <trans-unit id="4a5ad2e676f61c7fe0318dfee092f195a76430f1" translate="yes" xml:space="preserve">
          <source>Empty::step_by</source>
          <target state="translated">Empty::step_by</target>
        </trans-unit>
        <trans-unit id="f13e8eb24c2b8792fc6715ca0b1116387fc5bee2" translate="yes" xml:space="preserve">
          <source>Empty::sum</source>
          <target state="translated">Empty::sum</target>
        </trans-unit>
        <trans-unit id="ff9824384477031a6fd693598e5caeb61e0af3a5" translate="yes" xml:space="preserve">
          <source>Empty::take</source>
          <target state="translated">Empty::take</target>
        </trans-unit>
        <trans-unit id="4f99dd9f7abcf1493398166f9c9cdce10922d997" translate="yes" xml:space="preserve">
          <source>Empty::take_while</source>
          <target state="translated">Empty::take_while</target>
        </trans-unit>
        <trans-unit id="89b11c4f58dd6599176d3ca117383f1fd9ba30a4" translate="yes" xml:space="preserve">
          <source>Empty::to_owned</source>
          <target state="translated">Empty::to_owned</target>
        </trans-unit>
        <trans-unit id="baafcc0d953786a27939cb82fd27f4cb342768ec" translate="yes" xml:space="preserve">
          <source>Empty::try_fold</source>
          <target state="translated">Empty::try_fold</target>
        </trans-unit>
        <trans-unit id="28a322d815c7fac4014f4dc23965fbe755e4d0b5" translate="yes" xml:space="preserve">
          <source>Empty::try_for_each</source>
          <target state="translated">Empty::try_for_each</target>
        </trans-unit>
        <trans-unit id="a3471b6bf1ed95eeca1c4c1b1c1a771788cc88e1" translate="yes" xml:space="preserve">
          <source>Empty::try_from</source>
          <target state="translated">Empty::try_from</target>
        </trans-unit>
        <trans-unit id="a26dae9da77fb95013ca88c70f5bfe9c720e0e74" translate="yes" xml:space="preserve">
          <source>Empty::try_into</source>
          <target state="translated">Empty::try_into</target>
        </trans-unit>
        <trans-unit id="c1e67a4b6c560399b50ffc190740b82f65f891ce" translate="yes" xml:space="preserve">
          <source>Empty::try_rfold</source>
          <target state="translated">Empty::try_rfold</target>
        </trans-unit>
        <trans-unit id="c732c96bcf08fac7227d9ba1e7b66d7c9bfbe97c" translate="yes" xml:space="preserve">
          <source>Empty::type_id</source>
          <target state="translated">Empty::type_id</target>
        </trans-unit>
        <trans-unit id="9d150a16053a3f9b92bf3cccfa31bf22aa174714" translate="yes" xml:space="preserve">
          <source>Empty::unzip</source>
          <target state="translated">Empty::unzip</target>
        </trans-unit>
        <trans-unit id="0aeeeac13dffc6debd7ef2200458a8aa152354a5" translate="yes" xml:space="preserve">
          <source>Empty::zip</source>
          <target state="translated">Empty::zip</target>
        </trans-unit>
        <trans-unit id="c162cb16dcaccb5a7083bce0bba087366496ee74" translate="yes" xml:space="preserve">
          <source>Enabled by default when compiling without optimizations. This can be used to enable extra debugging code in development but not in production. For example, it controls the behavior of the standard library's &lt;a href=&quot;../std/macro.debug_assert&quot;&gt;&lt;code&gt;debug_assert!&lt;/code&gt;&lt;/a&gt; macro.</source>
          <target state="translated">最適化なしでコンパイルする場合、デフォルトで有効になります。これは、開発では追加のデバッグコードを有効にするために使用できますが、本番環境では使用できません。たとえば、標準ライブラリの&lt;a href=&quot;../std/macro.debug_assert&quot;&gt; &lt;code&gt;debug_assert!&lt;/code&gt; &lt;/a&gt;の動作を制御します。大きい。</target>
        </trans-unit>
        <trans-unit id="da18733468821ba326716fb8e05ea24f6d1e3cb6" translate="yes" xml:space="preserve">
          <source>Enabled when compiling the test harness. Done with &lt;code&gt;rustc&lt;/code&gt; by using the &lt;a href=&quot;https://doc.rust-lang.org/rustc/command-line-arguments.html#--test-build-a-test-harness&quot;&gt;&lt;code&gt;--test&lt;/code&gt;&lt;/a&gt; flag. See &lt;a href=&quot;attributes/testing&quot;&gt;Testing&lt;/a&gt; for more on testing support.</source>
          <target state="translated">テストハーネスのコンパイル時に有効になります。行わ &lt;code&gt;rustc&lt;/code&gt; 用いて&lt;a href=&quot;https://doc.rust-lang.org/rustc/command-line-arguments.html#--test-build-a-test-harness&quot;&gt; &lt;code&gt;--test&lt;/code&gt; &lt;/a&gt;フラグ。テストサポートの詳細については、&lt;a href=&quot;attributes/testing&quot;&gt;テスト&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ede5bc6ed6d470d50e36bb0e8bf7034fcbfe5689" translate="yes" xml:space="preserve">
          <source>Enabled when compiling the test harness. Done with &lt;code&gt;rustc&lt;/code&gt; by using the &lt;a href=&quot;https://doc.rust-lang.org/rustc/command-line-arguments.html#a--test-build-a-test-harness&quot;&gt;&lt;code&gt;--test&lt;/code&gt;&lt;/a&gt; flag. See &lt;a href=&quot;attributes/testing&quot;&gt;Testing&lt;/a&gt; for more on testing support.</source>
          <target state="translated">テストハーネスのコンパイル時に有効になります。行わ &lt;code&gt;rustc&lt;/code&gt; 用いて&lt;a href=&quot;https://doc.rust-lang.org/rustc/command-line-arguments.html#a--test-build-a-test-harness&quot;&gt; &lt;code&gt;--test&lt;/code&gt; &lt;/a&gt;フラグ。テストのサポートの詳細については、&lt;a href=&quot;attributes/testing&quot;&gt;テスト&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="96e83fb7ab829c214e65c80a2db3d257c04f0614" translate="yes" xml:space="preserve">
          <source>Enables or disables tracing functionality used for debugging other macros.</source>
          <target state="translated">他のマクロのデバッグに使用するトレース機能を有効または無効にします。</target>
        </trans-unit>
        <trans-unit id="5dbac231f42ed8e8dff3f552f6770098ad6c943f" translate="yes" xml:space="preserve">
          <source>Enabling Recursive Types with Boxes</source>
          <target state="translated">ボックスで再帰型を有効にする</target>
        </trans-unit>
        <trans-unit id="a0d4475d681b9a00b8068f413028bb6043930a17" translate="yes" xml:space="preserve">
          <source>Encapsulation that Hides Implementation Details</source>
          <target state="translated">実装の詳細を隠すカプセル化</target>
        </trans-unit>
        <trans-unit id="3ae14e1a543143445af9580e0ff1d2b736ac91b9" translate="yes" xml:space="preserve">
          <source>Enclosing a pattern in parentheses can be used to explicitly control the precedence of compound patterns. For example, a reference pattern next to a range pattern such as &lt;code&gt;&amp;amp;0..=5&lt;/code&gt; is ambiguous and is not allowed, but can be expressed with parentheses.</source>
          <target state="translated">パターンを括弧で囲むと、複合パターンの優先順位を明示的に制御できます。たとえば、 &lt;code&gt;&amp;amp;0..=5&lt;/code&gt; などの範囲パターンの隣の参照パターンはあいまいであり、許可されませんが、括弧で表すことができます。</target>
        </trans-unit>
        <trans-unit id="d4725b21f1d12318016392b69bfa376d8082d0d6" translate="yes" xml:space="preserve">
          <source>EncodeUtf16</source>
          <target state="translated">EncodeUtf16</target>
        </trans-unit>
        <trans-unit id="ce484ed73c35d9d375c9a2e75ea123de3864039a" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::all</source>
          <target state="translated">EncodeUtf16::all</target>
        </trans-unit>
        <trans-unit id="b13637de09bdd83f273c42cf69710e748317ba2a" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::any</source>
          <target state="translated">EncodeUtf16::any</target>
        </trans-unit>
        <trans-unit id="93ac2c39feb433f96a296a03b4668bc5435f7f6d" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::borrow</source>
          <target state="translated">EncodeUtf16::borrow</target>
        </trans-unit>
        <trans-unit id="78ccd19acbc9668c621da527d72d4f35be64ea58" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::borrow_mut</source>
          <target state="translated">EncodeUtf16::borrow_mut</target>
        </trans-unit>
        <trans-unit id="2c66776d8a34c8e6785457cb8c49db621ba862f9" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::by_ref</source>
          <target state="translated">EncodeUtf16::by_ref</target>
        </trans-unit>
        <trans-unit id="c4b5714670c77e78b45c6e25c50a581a1c4d645c" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::chain</source>
          <target state="translated">EncodeUtf16::chain</target>
        </trans-unit>
        <trans-unit id="c66274320e8dd9e010320a086da1fd47d8b331e7" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::clone</source>
          <target state="translated">EncodeUtf16::clone</target>
        </trans-unit>
        <trans-unit id="26b2cb0d58c68fe235d662eb91074cd0f04d6df3" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::clone_from</source>
          <target state="translated">EncodeUtf16::clone_from</target>
        </trans-unit>
        <trans-unit id="4a860acf52ade690d0ceefa397ff508568a77bab" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::clone_into</source>
          <target state="translated">EncodeUtf16::clone_into</target>
        </trans-unit>
        <trans-unit id="422d43fc8a8ddf0e553896ac1aa08fdfa1a07c19" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::cloned</source>
          <target state="translated">EncodeUtf16::cloned</target>
        </trans-unit>
        <trans-unit id="2b32a83e37123a815508602402544eed1f148e6b" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::cmp</source>
          <target state="translated">EncodeUtf16::cmp</target>
        </trans-unit>
        <trans-unit id="32150118df00a1e84a6169ddaa39bebb86b6db92" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::collect</source>
          <target state="translated">EncodeUtf16::collect</target>
        </trans-unit>
        <trans-unit id="f7ebee532e9d58c27aa905ee149fb273cbbf9692" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::copied</source>
          <target state="translated">EncodeUtf16::copied</target>
        </trans-unit>
        <trans-unit id="5f3c75221bbdc11916f27ed3db5bf64a9320fe84" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::count</source>
          <target state="translated">EncodeUtf16::count</target>
        </trans-unit>
        <trans-unit id="9b0b2d3798e7183a39c2b53255d786cbc7504ef5" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::cycle</source>
          <target state="translated">EncodeUtf16::cycle</target>
        </trans-unit>
        <trans-unit id="ef62c7225bef340b259ce1949b5e3ecb127994af" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::enumerate</source>
          <target state="translated">EncodeUtf16::enumerate</target>
        </trans-unit>
        <trans-unit id="64ba39f19e8a35a5356b272e4a3de25e5dc21d5c" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::eq</source>
          <target state="translated">EncodeUtf16::eq</target>
        </trans-unit>
        <trans-unit id="ce764ac6a8574778f87d0bfdbdfc678d4353eaef" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::filter</source>
          <target state="translated">EncodeUtf16::filter</target>
        </trans-unit>
        <trans-unit id="7d850587434cf0b2f59ed1f47dfe4b6e7664fe54" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::filter_map</source>
          <target state="translated">EncodeUtf16::filter_map</target>
        </trans-unit>
        <trans-unit id="18f74beb364586f859b394ca0514ebd640b1d5e2" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::find</source>
          <target state="translated">EncodeUtf16::find</target>
        </trans-unit>
        <trans-unit id="543006d2826022a63a384fe325aa40fb7900e87a" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::find_map</source>
          <target state="translated">EncodeUtf16::find_map</target>
        </trans-unit>
        <trans-unit id="70a49bfc15b05b5fc02c75d768756c36766e4299" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::flat_map</source>
          <target state="translated">EncodeUtf16::flat_map</target>
        </trans-unit>
        <trans-unit id="515ffd9c05d61170c05dbfbbd3dd8d52041c0b5e" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::flatten</source>
          <target state="translated">EncodeUtf16::flatten</target>
        </trans-unit>
        <trans-unit id="27aba94a3e9f58cde7865400e72b65ecc6149649" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::fmt</source>
          <target state="translated">EncodeUtf16::fmt</target>
        </trans-unit>
        <trans-unit id="27ad225c64eb70041f4f3739b33cd30ef9c0b251" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::fold</source>
          <target state="translated">EncodeUtf16::fold</target>
        </trans-unit>
        <trans-unit id="07b9424bd54f13fcb0f38f10d2582fe9acbea52f" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::for_each</source>
          <target state="translated">EncodeUtf16::for_each</target>
        </trans-unit>
        <trans-unit id="ea8487b9d3843f80ae0ed98cb0d06525cda778d8" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::from</source>
          <target state="translated">EncodeUtf16::from</target>
        </trans-unit>
        <trans-unit id="ae6d66fae477d6c3701c4654c63b5731677337c0" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::fuse</source>
          <target state="translated">EncodeUtf16::fuse</target>
        </trans-unit>
        <trans-unit id="9eb3c4e1064f6cfafa61322829fa6648b167ef09" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::ge</source>
          <target state="translated">EncodeUtf16::ge</target>
        </trans-unit>
        <trans-unit id="ddbe303a42de81068d7a034e29c52d7012281cea" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::gt</source>
          <target state="translated">EncodeUtf16::gt</target>
        </trans-unit>
        <trans-unit id="985c61b8024c7d9bf290636dc2058388d2544373" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::inspect</source>
          <target state="translated">EncodeUtf16::inspect</target>
        </trans-unit>
        <trans-unit id="e7377c675ce97a9d96f7d6960e76000d3d40dd9d" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::into</source>
          <target state="translated">EncodeUtf16::into</target>
        </trans-unit>
        <trans-unit id="6a07b19823bdb72a7e63c2248cc7262f3d04c7df" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::into_iter</source>
          <target state="translated">EncodeUtf16::into_iter</target>
        </trans-unit>
        <trans-unit id="a940cf4584259555bc674fad64be058f8d6d5fc4" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::is_sorted</source>
          <target state="translated">EncodeUtf16::is_sorted</target>
        </trans-unit>
        <trans-unit id="9030aa3db94c1a0ca24c3d9e8e3f26485ea44d03" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::is_sorted_by</source>
          <target state="translated">EncodeUtf16::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="e3b8ee098864e0a2ae9a18bd9d3ea21b174ca982" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::is_sorted_by_key</source>
          <target state="translated">EncodeUtf16::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="784d11896a94efa65c15f4d8f262259fb80f7bf0" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::last</source>
          <target state="translated">EncodeUtf16::last</target>
        </trans-unit>
        <trans-unit id="2b0636009264bf849ec24c9433e18fdcdc8a1cd4" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::le</source>
          <target state="translated">EncodeUtf16::le</target>
        </trans-unit>
        <trans-unit id="891451d3481ca933b85561453f233b64871dea74" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::lt</source>
          <target state="translated">EncodeUtf16::lt</target>
        </trans-unit>
        <trans-unit id="57c44df540ec01512cc425e189d9a6599cd20bb3" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::map</source>
          <target state="translated">EncodeUtf16::map</target>
        </trans-unit>
        <trans-unit id="26dbdd2a8a7b24556bb16300402673b877fd098c" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::max</source>
          <target state="translated">EncodeUtf16::max</target>
        </trans-unit>
        <trans-unit id="dd1f21d6ddd7677bdb1403ac76e3ba8aaa010210" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::max_by</source>
          <target state="translated">EncodeUtf16::max_by</target>
        </trans-unit>
        <trans-unit id="ba74195f56b035211ddd1a7e0cc079db11196f54" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::max_by_key</source>
          <target state="translated">EncodeUtf16::max_by_key</target>
        </trans-unit>
        <trans-unit id="bb271542daf84980c747fb07fc3bcf2649b268ba" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::min</source>
          <target state="translated">EncodeUtf16::min</target>
        </trans-unit>
        <trans-unit id="d2cc580689148c610fbdf5b595fe4a50d756727c" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::min_by</source>
          <target state="translated">EncodeUtf16::min_by</target>
        </trans-unit>
        <trans-unit id="d1c0c0c8baf64bc852fa8c72d379df047c75756d" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::min_by_key</source>
          <target state="translated">EncodeUtf16::min_by_key</target>
        </trans-unit>
        <trans-unit id="c692b2473977bdc54e269f38f1d09b16f6fd6516" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::ne</source>
          <target state="translated">EncodeUtf16::ne</target>
        </trans-unit>
        <trans-unit id="30e46854f8e4bceeb0693a585b4c805bb3630179" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::next</source>
          <target state="translated">EncodeUtf16::next</target>
        </trans-unit>
        <trans-unit id="53d09d4baa51927279b27826a6980d29c6cf5692" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::nth</source>
          <target state="translated">EncodeUtf16::nth</target>
        </trans-unit>
        <trans-unit id="e2070bd561a9d91cc6ea0c271f6415e81033097f" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::partial_cmp</source>
          <target state="translated">EncodeUtf16::partial_cmp</target>
        </trans-unit>
        <trans-unit id="ac2552c4aeb50948ecd0a1f95a600b99afb77de9" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::partition</source>
          <target state="translated">EncodeUtf16::partition</target>
        </trans-unit>
        <trans-unit id="4bdd8d61b8c6d0a7e16cfa2f96eb9b3a7f6981e7" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::peekable</source>
          <target state="translated">EncodeUtf16::peekable</target>
        </trans-unit>
        <trans-unit id="2d36cd93138d4017795d5ef69ea30e95d94c31a9" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::position</source>
          <target state="translated">EncodeUtf16::position</target>
        </trans-unit>
        <trans-unit id="a501fbfa8ff048ba208d42a22a3fd06e90f203a3" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::product</source>
          <target state="translated">EncodeUtf16::product</target>
        </trans-unit>
        <trans-unit id="5e3e94427596c7de03b323fa5a1fe112ed666c0c" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::rev</source>
          <target state="translated">EncodeUtf16::rev</target>
        </trans-unit>
        <trans-unit id="f525390f2cae36ec30b43b46ef07116d2e3f9d62" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::rposition</source>
          <target state="translated">EncodeUtf16::rposition</target>
        </trans-unit>
        <trans-unit id="cd996f318e2b96c96c347b098ec913e9cad134ca" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::scan</source>
          <target state="translated">EncodeUtf16::scan</target>
        </trans-unit>
        <trans-unit id="f977e43552fc6d30cfe03a90947ea540d9df7319" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::size_hint</source>
          <target state="translated">EncodeUtf16::size_hint</target>
        </trans-unit>
        <trans-unit id="be465e50411c44bb7234a866bea171bda8e26b0c" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::skip</source>
          <target state="translated">EncodeUtf16::skip</target>
        </trans-unit>
        <trans-unit id="c12654ede0f7bdc315e414ce23e597bda2c37f65" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::skip_while</source>
          <target state="translated">EncodeUtf16::skip_while</target>
        </trans-unit>
        <trans-unit id="809a19ab5ec36862d14c1a62588bbcfe0973dcf2" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::step_by</source>
          <target state="translated">EncodeUtf16::step_by</target>
        </trans-unit>
        <trans-unit id="c676d3852ab4e26936170e8f8ab501f0f795926b" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::sum</source>
          <target state="translated">EncodeUtf16::sum</target>
        </trans-unit>
        <trans-unit id="933d3e1df4a2f1ad64a264c24cbb6523c267ae74" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::take</source>
          <target state="translated">EncodeUtf16::take</target>
        </trans-unit>
        <trans-unit id="a38271408f51dc7190b676b383bf41e4526df8f1" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::take_while</source>
          <target state="translated">EncodeUtf16::take_while</target>
        </trans-unit>
        <trans-unit id="80b98e6e7c1edd3aaa39ec3f392fe61e25bd1917" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::to_owned</source>
          <target state="translated">EncodeUtf16::to_owned</target>
        </trans-unit>
        <trans-unit id="8d7677e2a74fe8046628e76f11c78f76a90c76a5" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::try_fold</source>
          <target state="translated">EncodeUtf16::try_fold</target>
        </trans-unit>
        <trans-unit id="e1532a5baf90094bf0714f75a8d9fb62a16208b2" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::try_for_each</source>
          <target state="translated">EncodeUtf16::try_for_each</target>
        </trans-unit>
        <trans-unit id="51d7ec651834020f2c54eb5a8a30262da61f0777" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::try_from</source>
          <target state="translated">EncodeUtf16::try_from</target>
        </trans-unit>
        <trans-unit id="0acfe1b8ce2d5eddb55cfcd74f0582990d67f75a" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::try_into</source>
          <target state="translated">EncodeUtf16::try_into</target>
        </trans-unit>
        <trans-unit id="d51ca481ff69910765af1e31df8462b2f6a9a7e6" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::type_id</source>
          <target state="translated">EncodeUtf16::type_id</target>
        </trans-unit>
        <trans-unit id="4f82acd3f53a72088194e6e6579934c3b87f413f" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::unzip</source>
          <target state="translated">EncodeUtf16::unzip</target>
        </trans-unit>
        <trans-unit id="645e8c4913bdf28e95c799cf40e99ac9fed68d20" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::zip</source>
          <target state="translated">EncodeUtf16::zip</target>
        </trans-unit>
        <trans-unit id="843f11bc4069ceca4f72ceff4b56a6a90d70d0e1" translate="yes" xml:space="preserve">
          <source>EncodeWide</source>
          <target state="translated">EncodeWide</target>
        </trans-unit>
        <trans-unit id="8a0d134aa9ae0c6cad102005376c6e0bb3da9c6f" translate="yes" xml:space="preserve">
          <source>Encodes this character as UTF-16 into the provided &lt;code&gt;u16&lt;/code&gt; buffer, and then returns the subslice of the buffer that contains the encoded character.</source>
          <target state="translated">この文字をUTF-16として提供された &lt;code&gt;u16&lt;/code&gt; バッファーにエンコードし、エンコードされた文字を含むバッファーのサブスライスを返します。</target>
        </trans-unit>
        <trans-unit id="687b074cc61ba52fde0fb773045bd9d6e1557a76" translate="yes" xml:space="preserve">
          <source>Encodes this character as UTF-8 into the provided byte buffer, and then returns the subslice of the buffer that contains the encoded character.</source>
          <target state="translated">この文字を UTF-8 として指定されたバイトバッファにエンコードし、エンコードされた文字を含むバッファのサブスライスを返します。</target>
        </trans-unit>
        <trans-unit id="b9ef2fea9a545689e8874fb3e0e4c5e4cc5f5144" translate="yes" xml:space="preserve">
          <source>Encoding States and Behavior as Types</source>
          <target state="translated">型としての状態と振る舞いのエンコード</target>
        </trans-unit>
        <trans-unit id="3676359621256ff5957842bfefe8d40cab282839" translate="yes" xml:space="preserve">
          <source>End index bound.</source>
          <target state="translated">インデックスバインドを終了します。</target>
        </trans-unit>
        <trans-unit id="2ad6ad2573400026df17d34c935b9c0d7ff6aae7" translate="yes" xml:space="preserve">
          <source>End index bound. &lt;a href=&quot;ops/trait.rangebounds#tymethod.end_bound&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">バインドされた終了インデックス。&lt;a href=&quot;ops/trait.rangebounds#tymethod.end_bound&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="37d494c4674a4c1f2f0b399896434d94593eba3c" translate="yes" xml:space="preserve">
          <source>End index bound. &lt;a href=&quot;trait.rangebounds#tymethod.end_bound&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">バインドされた終了インデックス。&lt;a href=&quot;trait.rangebounds#tymethod.end_bound&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7388b490f32d69bda9888a11e33caaa3065a6b0a" translate="yes" xml:space="preserve">
          <source>Ending the expression with &lt;a href=&quot;../macro.try&quot;&gt;&lt;code&gt;?&lt;/code&gt;&lt;/a&gt; will result in the unwrapped success (&lt;a href=&quot;enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt;) value, unless the result is &lt;a href=&quot;enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt;, in which case &lt;a href=&quot;enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt; is returned early from the enclosing function.</source>
          <target state="translated">式の最後に&lt;a href=&quot;../macro.try&quot;&gt; &lt;code&gt;?&lt;/code&gt; &lt;/a&gt;結果が&lt;a href=&quot;enum.result#variant.Err&quot;&gt; &lt;code&gt;Err&lt;/code&gt; &lt;/a&gt;でない限り、ラップされていない成功（&lt;a href=&quot;enum.result#variant.Ok&quot;&gt; &lt;code&gt;Ok&lt;/code&gt; &lt;/a&gt;）値になります。その場合、&lt;a href=&quot;enum.result#variant.Err&quot;&gt; &lt;code&gt;Err&lt;/code&gt; &lt;/a&gt;は囲んでいる関数から早く返されます。</target>
        </trans-unit>
        <trans-unit id="863ed0259a9c3a38b685a0b41a4059ad329a34ec" translate="yes" xml:space="preserve">
          <source>Ending the expression with &lt;a href=&quot;../ops/trait.try&quot;&gt;&lt;code&gt;?&lt;/code&gt;&lt;/a&gt; will result in the unwrapped success (&lt;a href=&quot;enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt;) value, unless the result is &lt;a href=&quot;enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt;, in which case &lt;a href=&quot;enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt; is returned early from the enclosing function.</source>
          <target state="translated">式を&lt;a href=&quot;../ops/trait.try&quot;&gt; &lt;code&gt;?&lt;/code&gt; で終了&lt;/a&gt;します 結果が&lt;a href=&quot;enum.result#variant.Err&quot;&gt; &lt;code&gt;Err&lt;/code&gt; &lt;/a&gt;でない限り、ラップされていない成功（&lt;a href=&quot;enum.result#variant.Ok&quot;&gt; &lt;code&gt;Ok&lt;/code&gt; &lt;/a&gt;）値になります。Errの場合、&lt;a href=&quot;enum.result#variant.Err&quot;&gt; &lt;code&gt;Err&lt;/code&gt; &lt;/a&gt;は囲んでいる関数から早期に返されます。</target>
        </trans-unit>
        <trans-unit id="3a65bf9349cbcc7a32b63bf1cb88e01bc4e34ec1" translate="yes" xml:space="preserve">
          <source>Enforce that &lt;code&gt;'a&lt;/code&gt; lives at least as long as &lt;code&gt;'b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'a&lt;/code&gt; は少なくとも &lt;code&gt;'b&lt;/code&gt; 同じくらい長く存続することを強制します。</target>
        </trans-unit>
        <trans-unit id="35f3afa560fd78bcd88388920c6d32ed6d26609e" translate="yes" xml:space="preserve">
          <source>Enforcing Borrowing Rules at Runtime with &lt;code id=&quot;enforcing-borrowing-rules-at-runtime-with-refcellt&quot;&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code id=&quot;enforcing-borrowing-rules-at-runtime-with-refcellt&quot;&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; を使用して実行時に借用ルールを適用する</target>
        </trans-unit>
        <trans-unit id="41dc62e0abdc36afee260ab853e23ecd6b6a9cfe" translate="yes" xml:space="preserve">
          <source>Ensure that the expressions given can be evaluated as the desired integer type.</source>
          <target state="translated">与えられた式が所望の整数型として評価できることを確認する。</target>
        </trans-unit>
        <trans-unit id="e741b7684269f691a4fafe48259d2a463e8aba7e" translate="yes" xml:space="preserve">
          <source>Ensure that the expressions given can be evaluated as the desired integer type. See the FFI section of the Reference for more information about using a custom integer type:</source>
          <target state="translated">与えられた式が希望の整数型として評価できることを確認します。カスタム整数型の使用の詳細については、「リファレンス」の「FFI」セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="c7547812f495615ad03bb3098df2db60f0cad0b9" translate="yes" xml:space="preserve">
          <source>Ensure that the label is within scope. Labels are not reachable through functions, closures, async blocks or modules. Example:</source>
          <target state="translated">ラベルがスコープ内にあることを確認してください。ラベルは、関数、クロージャ、非同期ブロック、モジュールを介して到達することはできません。例。</target>
        </trans-unit>
        <trans-unit id="0abbd9783f23249e07d36f38058dff5ef9a59102" translate="yes" xml:space="preserve">
          <source>Ensure that the matched array has at least as many elements as the pattern requires. You can match an arbitrary number of remaining elements with &lt;code&gt;..&lt;/code&gt;:</source>
          <target state="translated">一致した配列に、少なくともパターンに必要な数の要素があることを確認してください。残りの要素の任意の数を &lt;code&gt;..&lt;/code&gt; と一致させることができます。</target>
        </trans-unit>
        <trans-unit id="0c626009c906b5442ff81667bb40d5f078b8036f" translate="yes" xml:space="preserve">
          <source>Ensure that the pattern and the expression being matched on are of consistent types:</source>
          <target state="translated">パターンとマッチする式が一貫した型であることを確認します。</target>
        </trans-unit>
        <trans-unit id="477d3e7a4b0f87f3da353673163b5e9dc7931085" translate="yes" xml:space="preserve">
          <source>Ensure that the pattern is consistent with the size of the matched array. Additional elements can be matched with &lt;code&gt;..&lt;/code&gt;:</source>
          <target state="translated">パターンが一致した配列のサイズと一致していることを確認してください。追加の要素は &lt;code&gt;..&lt;/code&gt; と照合できます。</target>
        </trans-unit>
        <trans-unit id="e2de0e5c4f109574d1676efa4c7e9d7fe093850f" translate="yes" xml:space="preserve">
          <source>Ensure the ordering of the match arm is correct and remove any superfluous arms.</source>
          <target state="translated">マッチアームの順序が正しいことを確認し、余計なアームを取り除きます。</target>
        </trans-unit>
        <trans-unit id="52324da6b76ad31c23818be99af30e92393c26cc" translate="yes" xml:space="preserve">
          <source>Ensures a value is in the entry by inserting the default if empty, and returns a mutable reference to the value in the entry.</source>
          <target state="translated">空の場合はデフォルトを挿入することでエントリ内に値があることを確認し、エントリ内の値への変更可能な参照を返します。</target>
        </trans-unit>
        <trans-unit id="d3d34304502c9d31e892eee4a24eadf8d436752d" translate="yes" xml:space="preserve">
          <source>Ensures a value is in the entry by inserting the default if empty, and returns mutable references to the key and value in the entry.</source>
          <target state="translated">空の場合はデフォルト値を挿入することでエントリ内に値があることを確認し、エントリ内のキーと値への変更可能な参照を返します。</target>
        </trans-unit>
        <trans-unit id="12dbb1ba9d0bf9bea6b9666200705f4b7a3b92fa" translate="yes" xml:space="preserve">
          <source>Ensures a value is in the entry by inserting the default value if empty, and returns a mutable reference to the value in the entry.</source>
          <target state="translated">空の場合はデフォルト値を挿入することでエントリ内に値があることを確認し、エントリ内の値への変更可能な参照を返します。</target>
        </trans-unit>
        <trans-unit id="91eb62f08fa1e9f1c8fef0576f5f6f51a7075bd3" translate="yes" xml:space="preserve">
          <source>Ensures a value is in the entry by inserting the result of the default function if empty, and returns a mutable reference to the value in the entry.</source>
          <target state="translated">空の場合はデフォルト関数の結果を挿入することで、エントリ内に値があることを確認し、エントリ内の値への変更可能な参照を返します。</target>
        </trans-unit>
        <trans-unit id="8a70404bc566001003acd7999c238a7c63466896" translate="yes" xml:space="preserve">
          <source>Ensures a value is in the entry by inserting the result of the default function if empty, and returns mutable references to the key and value in the entry.</source>
          <target state="translated">空の場合はデフォルト関数の結果を挿入することでエントリ内に値があることを確認し、エントリ内のキーと値への変更可能な参照を返します。</target>
        </trans-unit>
        <trans-unit id="e929d91bcc8b385a287367bde618b1e3b37492a1" translate="yes" xml:space="preserve">
          <source>Ensures a value is in the entry by inserting, if empty, the result of the default function, which takes the key as its argument, and returns a mutable reference to the value in the entry.</source>
          <target state="translated">空の場合はデフォルトの関数の結果を挿入して、エントリ内に値があることを確認します。</target>
        </trans-unit>
        <trans-unit id="6090e80f899e3fc3659b85b1ce29239491058e17" translate="yes" xml:space="preserve">
          <source>Ensures that this &lt;code&gt;String&lt;/code&gt;'s capacity is &lt;code&gt;additional&lt;/code&gt; bytes larger than its length.</source>
          <target state="translated">この &lt;code&gt;String&lt;/code&gt; の容量がその長さよりも &lt;code&gt;additional&lt;/code&gt; バイトが大きいことを確認します。</target>
        </trans-unit>
        <trans-unit id="e25e1b6637adad8903002d15d14f6006ff7e734b" translate="yes" xml:space="preserve">
          <source>Ensures that this &lt;code&gt;String&lt;/code&gt;'s capacity is at least &lt;code&gt;additional&lt;/code&gt; bytes larger than its length.</source>
          <target state="translated">この &lt;code&gt;String&lt;/code&gt; の容量が少なくともその長さよりも &lt;code&gt;additional&lt;/code&gt; バイトが大きいことを確認します。</target>
        </trans-unit>
        <trans-unit id="c28dd38104875a0c1934d0c3d27ef146c3fb21d3" translate="yes" xml:space="preserve">
          <source>Ensuring Reproducible Builds with the &lt;em id=&quot;ensuring-reproducible-builds-with-the-cargolock-file&quot;&gt;Cargo.lock&lt;/em&gt; File</source>
          <target state="translated">&lt;em id=&quot;ensuring-reproducible-builds-with-the-cargolock-file&quot;&gt;Cargo.lock&lt;/em&gt;ファイルによる再現可能なビルドの確保</target>
        </trans-unit>
        <trans-unit id="4001e8408671d2b64f15377bf0dd7db16d9f3884" translate="yes" xml:space="preserve">
          <source>Ensuring the Content of a Draft Post Is Empty</source>
          <target state="translated">下書き投稿の内容が空であることを確認する</target>
        </trans-unit>
        <trans-unit id="f056d0d56afcad712d11464b0db2cfa06742ce13" translate="yes" xml:space="preserve">
          <source>Entries</source>
          <target state="translated">Entries</target>
        </trans-unit>
        <trans-unit id="908d591390886eb3ce7cacfe18cd38fd5f4bd251" translate="yes" xml:space="preserve">
          <source>Entries returned by the &lt;a href=&quot;struct.readdir&quot;&gt;&lt;code&gt;ReadDir&lt;/code&gt;&lt;/a&gt; iterator.</source>
          <target state="translated">&lt;a href=&quot;struct.readdir&quot;&gt; &lt;code&gt;ReadDir&lt;/code&gt; &lt;/a&gt;イテレータによって返されたエントリ。</target>
        </trans-unit>
        <trans-unit id="19172e9e47fee4109f3d1d86c3076acdc36822f2" translate="yes" xml:space="preserve">
          <source>Entry</source>
          <target state="translated">Entry</target>
        </trans-unit>
        <trans-unit id="20588ae8e5c269292d35f9dfffa8f2eb3fd3c259" translate="yes" xml:space="preserve">
          <source>Enum</source>
          <target state="translated">Enum</target>
        </trans-unit>
        <trans-unit id="b2e5e902b1971489c8bd86ea7e44ac1bef195074" translate="yes" xml:space="preserve">
          <source>Enum Values</source>
          <target state="translated">列挙値</target>
        </trans-unit>
        <trans-unit id="6db7dadb683dfbdb59d016f570c90b8c231dea12" translate="yes" xml:space="preserve">
          <source>Enum cast</source>
          <target state="translated">列挙キャスト</target>
        </trans-unit>
        <trans-unit id="2602ba347e0d7cd01c4cf212ea93978d0ef2673e" translate="yes" xml:space="preserve">
          <source>Enum constructors can have either named or unnamed fields:</source>
          <target state="translated">列挙型コンストラクタは、名前付きまたは名前なしのフィールドを持つことができます。</target>
        </trans-unit>
        <trans-unit id="e688bb3fd3463d105323422cdef963383c5293af" translate="yes" xml:space="preserve">
          <source>Enum discriminants are used to differentiate enum variants stored in memory. This error indicates that the same value was used for two or more variants, making it impossible to distinguish them.</source>
          <target state="translated">メモリに格納されているenumバリアントを区別するために、enum判別器が使用されます。このエラーは、2つ以上のバリアントに同じ値が使用され、それらを区別することができないことを示しています。</target>
        </trans-unit>
        <trans-unit id="d0c5b6447a37acb764d0265034e908a91f765fe0" translate="yes" xml:space="preserve">
          <source>Enum discriminants are used to differentiate enum variants stored in memory. This error indicates that the same value was used for two or more variants, making them impossible to tell apart.</source>
          <target state="translated">Enum判別器は、メモリに格納されているenumバリアントを区別するために使用されます。このエラーは、2つ以上のバリアントに同じ値が使用され、それらを区別することができないことを示します。</target>
        </trans-unit>
        <trans-unit id="3c0a2f174ffe2a8278bd5fca4c46d413bdfd5a0a" translate="yes" xml:space="preserve">
          <source>Enum std::backtrace::BacktraceStatus</source>
          <target state="translated">Enum std::backtrace::BacktraceStatus</target>
        </trans-unit>
        <trans-unit id="a03886c340458545d7206451b9f5d11f69ebaf7f" translate="yes" xml:space="preserve">
          <source>Enum std::borrow::Cow</source>
          <target state="translated">Enum std::borrow::Cow</target>
        </trans-unit>
        <trans-unit id="8a19099e4a33a1f6d4ab4aaabaf8429c30834ae2" translate="yes" xml:space="preserve">
          <source>Enum std::cmp::Ordering</source>
          <target state="translated">Enum std::cmp::順序付け</target>
        </trans-unit>
        <trans-unit id="a906312d753da86d825160309ab6b94f07803b17" translate="yes" xml:space="preserve">
          <source>Enum std::collections::CollectionAllocErr</source>
          <target state="translated">Enum std::collections::CollectionAllocErr</target>
        </trans-unit>
        <trans-unit id="938c2996c6a182ac69ffcc169d396d77ab1ccace" translate="yes" xml:space="preserve">
          <source>Enum std::collections::TryReserveError</source>
          <target state="translated">Enum std::collections::TryReserveError</target>
        </trans-unit>
        <trans-unit id="a0529dc76cf5663d9b929ac2223b68cd3ce96139" translate="yes" xml:space="preserve">
          <source>Enum std::collections::btree_map::Entry</source>
          <target state="translated">Enum std::collections::btree_map::Entry</target>
        </trans-unit>
        <trans-unit id="a26e0c5424cd8a0fa6aa449a501bce68be76d5dc" translate="yes" xml:space="preserve">
          <source>Enum std::collections::hash_map::Entry</source>
          <target state="translated">Enum std::collections::hash_map::Entry</target>
        </trans-unit>
        <trans-unit id="088beae48ffc4dd9f717044edf08e9627e52e13e" translate="yes" xml:space="preserve">
          <source>Enum std::collections::hash_map::RawEntryMut</source>
          <target state="translated">Enum std::collections::hash_map::RawEntryMut</target>
        </trans-unit>
        <trans-unit id="db8e38f908a035e61ab108b6f3d4fb3010dd40ad" translate="yes" xml:space="preserve">
          <source>Enum std::convert::Infallible</source>
          <target state="translated">Enum std::convert::Infallible</target>
        </trans-unit>
        <trans-unit id="02c4acb668d8a2d290f0e517e401e15f6c6625d9" translate="yes" xml:space="preserve">
          <source>Enum std::env::VarError</source>
          <target state="translated">Enum std::env::VarError</target>
        </trans-unit>
        <trans-unit id="4e4f017fc55b493d3a565c018ae6b3efa6c48ae3" translate="yes" xml:space="preserve">
          <source>Enum std::ffi::c_void</source>
          <target state="translated">Enum std::fi::c_void</target>
        </trans-unit>
        <trans-unit id="b95d431d3ea146292ab6321a7eeefac707195630" translate="yes" xml:space="preserve">
          <source>Enum std::fmt::Alignment</source>
          <target state="translated">Enum std::fmt::Alignment</target>
        </trans-unit>
        <trans-unit id="5679d1936b1856603acc103ed02b3dfb58d1bbf9" translate="yes" xml:space="preserve">
          <source>Enum std::io::ErrorKind</source>
          <target state="translated">Enum std::io::ErrorKind</target>
        </trans-unit>
        <trans-unit id="c3388c362d304c45249f992ac84c72ac93900d39" translate="yes" xml:space="preserve">
          <source>Enum std::io::SeekFrom</source>
          <target state="translated">Enum std::io::SeekFrom</target>
        </trans-unit>
        <trans-unit id="e185fbfa56b0b966a7f281f36c4c4a1d2862ccf3" translate="yes" xml:space="preserve">
          <source>Enum std::net::IpAddr</source>
          <target state="translated">Enum std::net::IPAddr</target>
        </trans-unit>
        <trans-unit id="bc9400331c680d88f1f6aff354d90613ee1a1df4" translate="yes" xml:space="preserve">
          <source>Enum std::net::Ipv6MulticastScope</source>
          <target state="translated">Enum std::net::Ipv6MulticastScope</target>
        </trans-unit>
        <trans-unit id="c80ad861d24a6873feb87deb337af535836a0d04" translate="yes" xml:space="preserve">
          <source>Enum std::net::Shutdown</source>
          <target state="translated">Enum std::net::Shutdown</target>
        </trans-unit>
        <trans-unit id="4814be63b637669ec88f04775d3d1c629f5b94bf" translate="yes" xml:space="preserve">
          <source>Enum std::net::SocketAddr</source>
          <target state="translated">Enum std::net::SocketAddr</target>
        </trans-unit>
        <trans-unit id="ed2c2572ce6b9a5b901e85fae8ffb949e21687b7" translate="yes" xml:space="preserve">
          <source>Enum std::num::FpCategory</source>
          <target state="translated">Enum std::num::FpCategory</target>
        </trans-unit>
        <trans-unit id="1ca7e70e5029ee3f6f32cd42eeea0aeb6b20f5b5" translate="yes" xml:space="preserve">
          <source>Enum std::num::IntErrorKind</source>
          <target state="translated">Enum std::num::IntErrorKind</target>
        </trans-unit>
        <trans-unit id="1ebb2a7aaad177ff740cd9acfd59fffdbd87b880" translate="yes" xml:space="preserve">
          <source>Enum std::ops::Bound</source>
          <target state="translated">Enum std::ops::Bound</target>
        </trans-unit>
        <trans-unit id="097f7430aab80cad8b3c370230ca50acf62899ee" translate="yes" xml:space="preserve">
          <source>Enum std::ops::ControlFlow</source>
          <target state="translated">Enum std::ops::ControlFlow</target>
        </trans-unit>
        <trans-unit id="c78df29388f847c37007ab5c1da89606a8fe11b2" translate="yes" xml:space="preserve">
          <source>Enum std::ops::GeneratorState</source>
          <target state="translated">Enum std::ops::GeneratorState</target>
        </trans-unit>
        <trans-unit id="ff6e130a028661924b6fd8346d712d565f01d40a" translate="yes" xml:space="preserve">
          <source>Enum std::option::Option</source>
          <target state="translated">Enum std::option::Option</target>
        </trans-unit>
        <trans-unit id="a0acf447e91cbaa1cade4b716e52fd7ede383487" translate="yes" xml:space="preserve">
          <source>Enum std::path::Component</source>
          <target state="translated">Enum std::path::Component</target>
        </trans-unit>
        <trans-unit id="cd80b2975834c5aa46ae7664755122a3e5265714" translate="yes" xml:space="preserve">
          <source>Enum std::path::Prefix</source>
          <target state="translated">Enum std::path::Prefix</target>
        </trans-unit>
        <trans-unit id="366d8a2cd765622a59309973f90f11ee7d3411fa" translate="yes" xml:space="preserve">
          <source>Enum std::result::Result</source>
          <target state="translated">Enum std::result::Result</target>
        </trans-unit>
        <trans-unit id="0b5173f713050e2c1b188be249f1e093bcf8490b" translate="yes" xml:space="preserve">
          <source>Enum std::str::pattern::SearchStep</source>
          <target state="translated">Enum std::str::pattern::SearchStep</target>
        </trans-unit>
        <trans-unit id="22343b7c1385bb798e7abcbac4d7aa2f6e785e63" translate="yes" xml:space="preserve">
          <source>Enum std::sync::TryLockError</source>
          <target state="translated">Enum std::sync::TryLockError</target>
        </trans-unit>
        <trans-unit id="ab38cfe6801ed5d9c4bb9c9cef4f3f3b0a23ce0e" translate="yes" xml:space="preserve">
          <source>Enum std::sync::atomic::Ordering</source>
          <target state="translated">Enum std::sync::atomic::Ordering</target>
        </trans-unit>
        <trans-unit id="3e1f03f1dc49f478b6049aa83ea9e4cc6527a28c" translate="yes" xml:space="preserve">
          <source>Enum std::sync::mpsc::RecvTimeoutError</source>
          <target state="translated">Enum std::sync::mpsc::RecvTimeoutError</target>
        </trans-unit>
        <trans-unit id="1c400de244902fed9cf33e98e3ccb497bd93f4a8" translate="yes" xml:space="preserve">
          <source>Enum std::sync::mpsc::TryRecvError</source>
          <target state="translated">Enum std::sync::mpsc::TryRecvError</target>
        </trans-unit>
        <trans-unit id="f0642750a6fb95d77857bc849c3fdf37c6c39866" translate="yes" xml:space="preserve">
          <source>Enum std::sync::mpsc::TrySendError</source>
          <target state="translated">Enum std::sync::mpsc::TrySendError</target>
        </trans-unit>
        <trans-unit id="e6974bd4a7cf5773272e93f4d39bee1d1076860b" translate="yes" xml:space="preserve">
          <source>Enum std::task::Poll</source>
          <target state="translated">Enum std::task::Poll</target>
        </trans-unit>
        <trans-unit id="0c2b2b71e631a7254549c4a44d361c1056b2a7be" translate="yes" xml:space="preserve">
          <source>Enum to store the various types of errors that can cause parsing an integer to fail.</source>
          <target state="translated">整数の解析に失敗する原因となる様々なタイプのエラーを保存するためのEnum。</target>
        </trans-unit>
        <trans-unit id="73e9c51dc0792051a5876f1b6b0c9cccad0e35cc" translate="yes" xml:space="preserve">
          <source>Enum types cannot be denoted &lt;em&gt;structurally&lt;/em&gt; as types, but must be denoted by named reference to an &lt;a href=&quot;../items/enumerations&quot;&gt;&lt;code&gt;enum&lt;/code&gt; item&lt;/a&gt;.</source>
          <target state="translated">列挙型は&lt;em&gt;構造的&lt;/em&gt;に型として表すことはできませんが、&lt;a href=&quot;../items/enumerations&quot;&gt; &lt;code&gt;enum&lt;/code&gt; 項目&lt;/a&gt;への名前付き参照で表す必要があります。</target>
        </trans-unit>
        <trans-unit id="695337c1fe7433fa9d62d634a8e65544ced1c0f7" translate="yes" xml:space="preserve">
          <source>Enum variant expressions have the same syntax, behavior, and restrictions as &lt;a href=&quot;struct-expr&quot;&gt;struct expressions&lt;/a&gt;, except they do not support base update with the &lt;code&gt;..&lt;/code&gt; syntax.</source>
          <target state="translated">Enumバリアント式は、 &lt;code&gt;..&lt;/code&gt; 構文を使用した基本更新をサポートしないことを除いて、&lt;a href=&quot;struct-expr&quot;&gt;struct式&lt;/a&gt;と同じ構文、動作、および制限があります。</target>
        </trans-unit>
        <trans-unit id="8d0e6de08e8283e929cffacec1b9802dce2655fb" translate="yes" xml:space="preserve">
          <source>Enum variants are qualified by default. For example, given this type:</source>
          <target state="translated">列挙型のバリアントはデフォルトで修飾されます。例えば、この型を指定すると</target>
        </trans-unit>
        <trans-unit id="0b08a3bc7cfb7ded0ccdfbe6ec1887f3052667dd" translate="yes" xml:space="preserve">
          <source>Enum variants syntactically allow a &lt;a href=&quot;../visibility-and-privacy&quot;&gt;&lt;em&gt;Visibility&lt;/em&gt;&lt;/a&gt; annotation, but this is rejected when the enum is validated. This allows items to be parsed with a unified syntax across different contexts where they are used.</source>
          <target state="translated">列挙型バリアントは構文的に&lt;a href=&quot;../visibility-and-privacy&quot;&gt;&lt;em&gt;Visibility&lt;/em&gt;&lt;/a&gt;アノテーションを許可しますが、列挙型が検証されるとこれは拒否されます。これにより、アイテムが使用されるさまざまなコンテキスト間で統一された構文でアイテムを解析できます。</target>
        </trans-unit>
        <trans-unit id="314f2039c6f5c9a047c9df5d08efdf012ed6ebfb" translate="yes" xml:space="preserve">
          <source>Enumerate</source>
          <target state="translated">Enumerate</target>
        </trans-unit>
        <trans-unit id="a39077a0b1b3b430dce489a90c9c5f5aa88edd7c" translate="yes" xml:space="preserve">
          <source>Enumerate::all</source>
          <target state="translated">Enumerate::all</target>
        </trans-unit>
        <trans-unit id="ec2fa6d5d4f1c8be073425621f77eacfb8edabba" translate="yes" xml:space="preserve">
          <source>Enumerate::any</source>
          <target state="translated">Enumerate::any</target>
        </trans-unit>
        <trans-unit id="98c1cda15cee0dede09a0fe601e039d428e6f02c" translate="yes" xml:space="preserve">
          <source>Enumerate::borrow</source>
          <target state="translated">Enumerate::borrow</target>
        </trans-unit>
        <trans-unit id="0e6eef1f51705f2671d8c8991bf9dbbf78449104" translate="yes" xml:space="preserve">
          <source>Enumerate::borrow_mut</source>
          <target state="translated">Enumerate::borrow_mut</target>
        </trans-unit>
        <trans-unit id="a1adeb45afeadd9875603c24716860d9f9519ea4" translate="yes" xml:space="preserve">
          <source>Enumerate::by_ref</source>
          <target state="translated">Enumerate::by_ref</target>
        </trans-unit>
        <trans-unit id="692b595e78a37257b5d4697e883ff3f5814eb9d6" translate="yes" xml:space="preserve">
          <source>Enumerate::chain</source>
          <target state="translated">Enumerate::chain</target>
        </trans-unit>
        <trans-unit id="17f314f0425a829ad53ec6bf5c9454953e39f1d3" translate="yes" xml:space="preserve">
          <source>Enumerate::clone</source>
          <target state="translated">Enumerate::clone</target>
        </trans-unit>
        <trans-unit id="2fcc04be32e4178f86909469cb69d0f8f80dcba7" translate="yes" xml:space="preserve">
          <source>Enumerate::clone_from</source>
          <target state="translated">Enumerate::clone_from</target>
        </trans-unit>
        <trans-unit id="81c6165f89ac6d03db812777d379c49115dbbcc1" translate="yes" xml:space="preserve">
          <source>Enumerate::clone_into</source>
          <target state="translated">Enumerate::clone_into</target>
        </trans-unit>
        <trans-unit id="02aeb42daad1bdb7fabddcd9cf2ef84ebb1cb768" translate="yes" xml:space="preserve">
          <source>Enumerate::cloned</source>
          <target state="translated">Enumerate::cloned</target>
        </trans-unit>
        <trans-unit id="d65dcb0d1e6bbca90b19abd4054388fd1e000bd5" translate="yes" xml:space="preserve">
          <source>Enumerate::cmp</source>
          <target state="translated">Enumerate::cmp</target>
        </trans-unit>
        <trans-unit id="bda6ca845dbac86c405f8244d50d705caad84fdb" translate="yes" xml:space="preserve">
          <source>Enumerate::collect</source>
          <target state="translated">Enumerate::collect</target>
        </trans-unit>
        <trans-unit id="313658d0cc1ccedc16677cdc5bca22601e7adc66" translate="yes" xml:space="preserve">
          <source>Enumerate::copied</source>
          <target state="translated">Enumerate::copied</target>
        </trans-unit>
        <trans-unit id="86f31e1782f22ea94286b9f40e724015407c54e0" translate="yes" xml:space="preserve">
          <source>Enumerate::count</source>
          <target state="translated">Enumerate::count</target>
        </trans-unit>
        <trans-unit id="669d96468f02aee28b2439ad798964cd3badf592" translate="yes" xml:space="preserve">
          <source>Enumerate::cycle</source>
          <target state="translated">Enumerate::cycle</target>
        </trans-unit>
        <trans-unit id="9145631d4495d356e5bca3c6a44364932f594135" translate="yes" xml:space="preserve">
          <source>Enumerate::enumerate</source>
          <target state="translated">Enumerate::enumerate</target>
        </trans-unit>
        <trans-unit id="82428d16070c2d09b6af0b1fbe69003eb8e2b911" translate="yes" xml:space="preserve">
          <source>Enumerate::eq</source>
          <target state="translated">Enumerate::eq</target>
        </trans-unit>
        <trans-unit id="16b5cb21527cf2bdab801962b940228289abde1f" translate="yes" xml:space="preserve">
          <source>Enumerate::filter</source>
          <target state="translated">Enumerate::filter</target>
        </trans-unit>
        <trans-unit id="cc5690f103841c5f008dd6e8bf7ab89e08db6241" translate="yes" xml:space="preserve">
          <source>Enumerate::filter_map</source>
          <target state="translated">Enumerate::filter_map</target>
        </trans-unit>
        <trans-unit id="be5fdebf0195fac290ce9e0959f99d51f037e2e1" translate="yes" xml:space="preserve">
          <source>Enumerate::find</source>
          <target state="translated">Enumerate::find</target>
        </trans-unit>
        <trans-unit id="abb36617595e894860b5b4e0510cd5030549b5f9" translate="yes" xml:space="preserve">
          <source>Enumerate::find_map</source>
          <target state="translated">Enumerate::find_map</target>
        </trans-unit>
        <trans-unit id="8f4e9f9f29bf97620c1ff7991f2fc893c2e55887" translate="yes" xml:space="preserve">
          <source>Enumerate::flat_map</source>
          <target state="translated">Enumerate::flat_map</target>
        </trans-unit>
        <trans-unit id="8c38343a6d068108409cc9cf2c6685f22e117344" translate="yes" xml:space="preserve">
          <source>Enumerate::flatten</source>
          <target state="translated">Enumerate::flatten</target>
        </trans-unit>
        <trans-unit id="9eb12a58ea2f6ccc5d5c35c7bc60a4b4b71ff5c8" translate="yes" xml:space="preserve">
          <source>Enumerate::fmt</source>
          <target state="translated">Enumerate::fmt</target>
        </trans-unit>
        <trans-unit id="b15a1187d17612313e4cb153326cb1612d8cc002" translate="yes" xml:space="preserve">
          <source>Enumerate::fold</source>
          <target state="translated">Enumerate::fold</target>
        </trans-unit>
        <trans-unit id="b6497d8532996b38f792af5af838add6252e5864" translate="yes" xml:space="preserve">
          <source>Enumerate::for_each</source>
          <target state="translated">Enumerate::for_each</target>
        </trans-unit>
        <trans-unit id="4d59e3171e83970eb66ed99b2ae64cadb4c0d95b" translate="yes" xml:space="preserve">
          <source>Enumerate::from</source>
          <target state="translated">Enumerate::from</target>
        </trans-unit>
        <trans-unit id="d66292b90a370ce7ffd76e7edb50c604ad56fe77" translate="yes" xml:space="preserve">
          <source>Enumerate::fuse</source>
          <target state="translated">Enumerate::fuse</target>
        </trans-unit>
        <trans-unit id="32fa15b2d69ef05bda793bb2df462e4c7d45d9ab" translate="yes" xml:space="preserve">
          <source>Enumerate::ge</source>
          <target state="translated">Enumerate::ge</target>
        </trans-unit>
        <trans-unit id="b2d2e35988ad984c51a126b00b57f722a04813ad" translate="yes" xml:space="preserve">
          <source>Enumerate::gt</source>
          <target state="translated">Enumerate::gt</target>
        </trans-unit>
        <trans-unit id="1506a9020cd887529949922978a6d1f040cf385b" translate="yes" xml:space="preserve">
          <source>Enumerate::inspect</source>
          <target state="translated">Enumerate::inspect</target>
        </trans-unit>
        <trans-unit id="6b3f696ed7c75b187f9dfda69649760cfb6afa1e" translate="yes" xml:space="preserve">
          <source>Enumerate::into</source>
          <target state="translated">Enumerate::into</target>
        </trans-unit>
        <trans-unit id="5ab71a164bcf467b3f72c2fe2857fab0833d694f" translate="yes" xml:space="preserve">
          <source>Enumerate::into_iter</source>
          <target state="translated">Enumerate::into_iter</target>
        </trans-unit>
        <trans-unit id="fb7ed6b6be04d5df42bdfaee42eb735c4f94138b" translate="yes" xml:space="preserve">
          <source>Enumerate::is_empty</source>
          <target state="translated">Enumerate::is_empty</target>
        </trans-unit>
        <trans-unit id="83f9c146ad186b6e60f86d68bea1f4263d9becdf" translate="yes" xml:space="preserve">
          <source>Enumerate::is_sorted</source>
          <target state="translated">Enumerate::is_sorted</target>
        </trans-unit>
        <trans-unit id="58bc83e37ae7495572a45579619887c4cc43e066" translate="yes" xml:space="preserve">
          <source>Enumerate::is_sorted_by</source>
          <target state="translated">Enumerate::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="fe599b84c352146d2e7d220a983d76926f5b6f39" translate="yes" xml:space="preserve">
          <source>Enumerate::is_sorted_by_key</source>
          <target state="translated">Enumerate::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="ab7e30011d51a9b8a7113623cdf79af796393fb1" translate="yes" xml:space="preserve">
          <source>Enumerate::last</source>
          <target state="translated">Enumerate::last</target>
        </trans-unit>
        <trans-unit id="2b160bfc36620b5d90420a724b5fa9cd6f9f105a" translate="yes" xml:space="preserve">
          <source>Enumerate::le</source>
          <target state="translated">Enumerate::le</target>
        </trans-unit>
        <trans-unit id="eaacb7a02965012d5dc904224f30e66a797ce243" translate="yes" xml:space="preserve">
          <source>Enumerate::len</source>
          <target state="translated">Enumerate::len</target>
        </trans-unit>
        <trans-unit id="e2c48252c4aed717c0e1f79886abc381eaacced4" translate="yes" xml:space="preserve">
          <source>Enumerate::lt</source>
          <target state="translated">Enumerate::lt</target>
        </trans-unit>
        <trans-unit id="7898fe027e691a40aeacf4672a8086c1adac8042" translate="yes" xml:space="preserve">
          <source>Enumerate::map</source>
          <target state="translated">Enumerate::map</target>
        </trans-unit>
        <trans-unit id="1794b8a54377dd063e4edca314127c4f74cca288" translate="yes" xml:space="preserve">
          <source>Enumerate::max</source>
          <target state="translated">Enumerate::max</target>
        </trans-unit>
        <trans-unit id="c373021f6c4ffc91e50c55c85b62e14249b7d204" translate="yes" xml:space="preserve">
          <source>Enumerate::max_by</source>
          <target state="translated">Enumerate::max_by</target>
        </trans-unit>
        <trans-unit id="8c98e7ca00042643846808aeb397fc59c239e140" translate="yes" xml:space="preserve">
          <source>Enumerate::max_by_key</source>
          <target state="translated">Enumerate::max_by_key</target>
        </trans-unit>
        <trans-unit id="768aa7bb087973f1cbf17ade0ae0716e4962abec" translate="yes" xml:space="preserve">
          <source>Enumerate::min</source>
          <target state="translated">Enumerate::min</target>
        </trans-unit>
        <trans-unit id="0c7933da63edbe9737fc2f6d2c7e03c991125380" translate="yes" xml:space="preserve">
          <source>Enumerate::min_by</source>
          <target state="translated">Enumerate::min_by</target>
        </trans-unit>
        <trans-unit id="b3e165dbee985e6a9e332a295d31ae587119a468" translate="yes" xml:space="preserve">
          <source>Enumerate::min_by_key</source>
          <target state="translated">Enumerate::min_by_key</target>
        </trans-unit>
        <trans-unit id="57a5ad76c50de8c95c2da2a227e2c358e51a4d0c" translate="yes" xml:space="preserve">
          <source>Enumerate::ne</source>
          <target state="translated">Enumerate::ne</target>
        </trans-unit>
        <trans-unit id="a114e8e4e6d416306a3bef2c53065bfe5c04feef" translate="yes" xml:space="preserve">
          <source>Enumerate::next</source>
          <target state="translated">Enumerate::next</target>
        </trans-unit>
        <trans-unit id="7ad0f5d83bfc21ddd5360e1ed821caa342cb1dfc" translate="yes" xml:space="preserve">
          <source>Enumerate::next_back</source>
          <target state="translated">Enumerate::next_back</target>
        </trans-unit>
        <trans-unit id="fe2dbc2cac2412ca4e1818d3a7c9f52b256a005a" translate="yes" xml:space="preserve">
          <source>Enumerate::nth</source>
          <target state="translated">Enumerate::nth</target>
        </trans-unit>
        <trans-unit id="26061f2f230c6c23841449a4e7701a1730a1a7ea" translate="yes" xml:space="preserve">
          <source>Enumerate::nth_back</source>
          <target state="translated">Enumerate::nth_back</target>
        </trans-unit>
        <trans-unit id="eb9c458ec6e639f0323b41b22e8c179ff6fd8ca1" translate="yes" xml:space="preserve">
          <source>Enumerate::partial_cmp</source>
          <target state="translated">Enumerate::partial_cmp</target>
        </trans-unit>
        <trans-unit id="59ee9d4c5b51c608c475f024d909c8fd17efea3e" translate="yes" xml:space="preserve">
          <source>Enumerate::partition</source>
          <target state="translated">Enumerate::partition</target>
        </trans-unit>
        <trans-unit id="d384858d39fbc03016ed1f757e620cf47fc645f5" translate="yes" xml:space="preserve">
          <source>Enumerate::peekable</source>
          <target state="translated">Enumerate::peekable</target>
        </trans-unit>
        <trans-unit id="2310dad35dd194019013235e51235a1c50831605" translate="yes" xml:space="preserve">
          <source>Enumerate::position</source>
          <target state="translated">Enumerate::position</target>
        </trans-unit>
        <trans-unit id="b1bfe0c8edf3d7fef14564223b7e0e5002b4df98" translate="yes" xml:space="preserve">
          <source>Enumerate::product</source>
          <target state="translated">Enumerate::product</target>
        </trans-unit>
        <trans-unit id="1efb277eb865e2493175396927be9fcdfca2f5a0" translate="yes" xml:space="preserve">
          <source>Enumerate::rev</source>
          <target state="translated">Enumerate::rev</target>
        </trans-unit>
        <trans-unit id="2648bcc3f1ca46a294c3ee4f7fc72cd0fb795cd9" translate="yes" xml:space="preserve">
          <source>Enumerate::rfind</source>
          <target state="translated">Enumerate::rfind</target>
        </trans-unit>
        <trans-unit id="6c41128f0e4a6049130261829395e6cae972a6df" translate="yes" xml:space="preserve">
          <source>Enumerate::rfold</source>
          <target state="translated">Enumerate::rfold</target>
        </trans-unit>
        <trans-unit id="705df40f27a676206690fe8d4a8c4e25c4b04014" translate="yes" xml:space="preserve">
          <source>Enumerate::rposition</source>
          <target state="translated">Enumerate::rposition</target>
        </trans-unit>
        <trans-unit id="3d04befb4c720d8c2d55110652bad838941f9ea7" translate="yes" xml:space="preserve">
          <source>Enumerate::scan</source>
          <target state="translated">Enumerate::scan</target>
        </trans-unit>
        <trans-unit id="7f44e2ec681c2469d81f1db98c07ab3d0ba05363" translate="yes" xml:space="preserve">
          <source>Enumerate::size_hint</source>
          <target state="translated">Enumerate::size_hint</target>
        </trans-unit>
        <trans-unit id="c1625ae89e1318dc6b78c1182110445b85ccdeac" translate="yes" xml:space="preserve">
          <source>Enumerate::skip</source>
          <target state="translated">Enumerate::skip</target>
        </trans-unit>
        <trans-unit id="ed203eb609995275384a88c3983406279492b314" translate="yes" xml:space="preserve">
          <source>Enumerate::skip_while</source>
          <target state="translated">Enumerate::skip_while</target>
        </trans-unit>
        <trans-unit id="277b5ecfeb11530756726f70d5d03aa06e9d27ca" translate="yes" xml:space="preserve">
          <source>Enumerate::step_by</source>
          <target state="translated">Enumerate::step_by</target>
        </trans-unit>
        <trans-unit id="17b65a108f6885bec54789f8c74fee98ffca596a" translate="yes" xml:space="preserve">
          <source>Enumerate::sum</source>
          <target state="translated">Enumerate::sum</target>
        </trans-unit>
        <trans-unit id="d9858d8fc38a9546c9f0929b60dd61fd6d697417" translate="yes" xml:space="preserve">
          <source>Enumerate::take</source>
          <target state="translated">Enumerate::take</target>
        </trans-unit>
        <trans-unit id="45666910daa19873ea1770d1ef597f0128e63df8" translate="yes" xml:space="preserve">
          <source>Enumerate::take_while</source>
          <target state="translated">Enumerate::take_while</target>
        </trans-unit>
        <trans-unit id="44bbb4a1547a8a0da4ef48b8b71a72a22f42639e" translate="yes" xml:space="preserve">
          <source>Enumerate::to_owned</source>
          <target state="translated">Enumerate::to_owned</target>
        </trans-unit>
        <trans-unit id="26026f97a59a9a7fa57499815e51f3fee1c4e61f" translate="yes" xml:space="preserve">
          <source>Enumerate::try_fold</source>
          <target state="translated">Enumerate::try_fold</target>
        </trans-unit>
        <trans-unit id="00273da397c166b36465246b9116c5855a5e239b" translate="yes" xml:space="preserve">
          <source>Enumerate::try_for_each</source>
          <target state="translated">Enumerate::try_for_each</target>
        </trans-unit>
        <trans-unit id="0ef7eec6a78d13a7063fe8d4d792a07dd56d2664" translate="yes" xml:space="preserve">
          <source>Enumerate::try_from</source>
          <target state="translated">Enumerate::try_from</target>
        </trans-unit>
        <trans-unit id="bd7e4d10d7efe221271a7b83d078b1cecf74418c" translate="yes" xml:space="preserve">
          <source>Enumerate::try_into</source>
          <target state="translated">Enumerate::try_into</target>
        </trans-unit>
        <trans-unit id="1c958e8cbbe1a542a031df4ad24fd70ec4d84ac6" translate="yes" xml:space="preserve">
          <source>Enumerate::try_rfold</source>
          <target state="translated">Enumerate::try_rfold</target>
        </trans-unit>
        <trans-unit id="b3bd36a160c27f3f0215274cdc41312c123d7ea5" translate="yes" xml:space="preserve">
          <source>Enumerate::type_id</source>
          <target state="translated">Enumerate::type_id</target>
        </trans-unit>
        <trans-unit id="3ce6ccb4e4512cf33ac707de6f17f2ef02ce0d2e" translate="yes" xml:space="preserve">
          <source>Enumerate::unzip</source>
          <target state="translated">Enumerate::unzip</target>
        </trans-unit>
        <trans-unit id="eb5c20683246957e6670b019a590a1c38409fec1" translate="yes" xml:space="preserve">
          <source>Enumerate::zip</source>
          <target state="translated">Enumerate::zip</target>
        </trans-unit>
        <trans-unit id="8ea41b40c0807902b383921b120f19aadff7d0a6" translate="yes" xml:space="preserve">
          <source>Enumerated types</source>
          <target state="translated">列挙型</target>
        </trans-unit>
        <trans-unit id="c5d21d1c37023b200603823a8bd155344f7f8b17" translate="yes" xml:space="preserve">
          <source>Enumeration Variant expressions</source>
          <target state="translated">列挙バリアント式</target>
        </trans-unit>
        <trans-unit id="cdce973b3c492568a571f2d4a76f5f2b237c4025" translate="yes" xml:space="preserve">
          <source>Enumeration of possible methods to seek within an I/O object.</source>
          <target state="translated">I/O オブジェクト内でシークする可能性のあるメソッドの列挙。</target>
        </trans-unit>
        <trans-unit id="624f3ff9c3b551a7cb172ef63ed22f37c151f87b" translate="yes" xml:space="preserve">
          <source>Enumeration variants can be constructed similarly to &lt;a href=&quot;struct-expr&quot;&gt;structs&lt;/a&gt;, using a path to an enum variant instead of to a struct:</source>
          <target state="translated">列挙バリアントは、&lt;a href=&quot;struct-expr&quot;&gt;構造体&lt;/a&gt;ではなく列挙バリアントへのパスを使用して、構造体と同様に構築できます。</target>
        </trans-unit>
        <trans-unit id="413e9110db4f37157b581483ed8d7133f5021d89" translate="yes" xml:space="preserve">
          <source>Enumerations</source>
          <target state="translated">Enumerations</target>
        </trans-unit>
        <trans-unit id="b9d827ad44579d07ddfea44ecffc410574b7a3e1" translate="yes" xml:space="preserve">
          <source>Enumerations are declared with the keyword &lt;code&gt;enum&lt;/code&gt;.</source>
          <target state="translated">列挙は、キーワード &lt;code&gt;enum&lt;/code&gt; で宣言されます。</target>
        </trans-unit>
        <trans-unit id="f3104dd45718e6d1ac6a03b91ae67193ae8361f0" translate="yes" xml:space="preserve">
          <source>Enums</source>
          <target state="translated">Enums</target>
        </trans-unit>
        <trans-unit id="b1bae4144086638d52ac91d0fa73650e3e324d9a" translate="yes" xml:space="preserve">
          <source>Enums and Pattern Matching</source>
          <target state="translated">列挙型とパターンマッチング</target>
        </trans-unit>
        <trans-unit id="29d1e793dd5ff89342cc10cdfcc04b3c27829bc3" translate="yes" xml:space="preserve">
          <source>Enums are a feature in many languages, but their capabilities differ in each language. Rust&amp;rsquo;s enums are most similar to &lt;em&gt;algebraic data types&lt;/em&gt; in functional languages, such as F#, OCaml, and Haskell.</source>
          <target state="translated">列挙型は多くの言語の機能ですが、その機能は言語ごとに異なります。Rustの列挙型は、F＃、OCaml、Haskellなどの関数&lt;em&gt;型&lt;/em&gt;言語の&lt;em&gt;代数的データ型&lt;/em&gt;に最も似ています。</target>
        </trans-unit>
        <trans-unit id="c00c45daf90518781271117a88cc6b6bf8f40d67" translate="yes" xml:space="preserve">
          <source>Enums can use multiple generic types as well. The definition of the &lt;code&gt;Result&lt;/code&gt; enum that we used in Chapter 9 is one example:</source>
          <target state="translated">列挙型では、複数のジェネリック型も使用できます。第9章で使用した &lt;code&gt;Result&lt;/code&gt; 列挙型の定義は1つの例です。</target>
        </trans-unit>
        <trans-unit id="77653211d002e5da1e92cfe69e290edeb74a2fda" translate="yes" xml:space="preserve">
          <source>Enums in Rust are similar to those of other compiled languages like C, but have important differences that make them considerably more powerful. What Rust calls enums are more commonly known as &lt;a href=&quot;https://en.wikipedia.org/wiki/Algebraic_data_type&quot;&gt;Algebraic Data Types&lt;/a&gt; if you're coming from a functional programming background. The important detail is that each enum variant can have data to go along with it.</source>
          <target state="translated">Rustの列挙型は、Cのような他のコンパイル済み言語の列挙型に似ていますが、かなり強力にする重要な違いがあります。関数型プログラミングのバックグラウンドから来ている場合、Rustが列挙型と呼ぶものは、より一般的には&lt;a href=&quot;https://en.wikipedia.org/wiki/Algebraic_data_type&quot;&gt;代数データ型&lt;/a&gt;として知られています。重要な詳細は、各列挙型バリアントがそれに対応するデータを持つことができるということです。</target>
        </trans-unit>
        <trans-unit id="a7932169790b9ae3d486b1fa44f1494c4c7c0425" translate="yes" xml:space="preserve">
          <source>Enums that carry no data other than the discriminant have the same size as C enums on the platform they are compiled for.</source>
          <target state="translated">判別子以外のデータを持たない列挙型は、コンパイルされたプラットフォーム上ではC列挙型と同じサイズになります。</target>
        </trans-unit>
        <trans-unit id="55965abb28128c0efbf6804cc70a5550204de017" translate="yes" xml:space="preserve">
          <source>Enums with zero variants are known as &lt;em&gt;zero-variant enums&lt;/em&gt;. As they have no valid values, they cannot be instantiated.</source>
          <target state="translated">バリアントが&lt;em&gt;ゼロの列挙型は&lt;/em&gt;、&lt;em&gt;ゼロバリアント列挙型と&lt;/em&gt;呼ばれ&lt;em&gt;ます&lt;/em&gt;。有効な値がないため、インスタンス化できません。</target>
        </trans-unit>
        <trans-unit id="ec072bba7befaa68af710fe3549eb0491d7badd1" translate="yes" xml:space="preserve">
          <source>Environment Variables</source>
          <target state="translated">環境変数</target>
        </trans-unit>
        <trans-unit id="eeb2022856d69a582a1f16324be2c7eef1792857" translate="yes" xml:space="preserve">
          <source>Environment variable is not present</source>
          <target state="translated">環境変数が存在しない</target>
        </trans-unit>
        <trans-unit id="1a6c58863f1bbbfd07cb1beaa53eaa23e2925fac" translate="yes" xml:space="preserve">
          <source>Environment variable is not valid unicode</source>
          <target state="translated">環境変数が有効なunicodeではありません。</target>
        </trans-unit>
        <trans-unit id="afcfba63ae8c7c116df2f46471e75a3359724931" translate="yes" xml:space="preserve">
          <source>Eq</source>
          <target state="translated">Eq</target>
        </trans-unit>
        <trans-unit id="b62fd0547a8c1527b794ea00dd9836542686a2f8" translate="yes" xml:space="preserve">
          <source>EqEq</source>
          <target state="translated">EqEq</target>
        </trans-unit>
        <trans-unit id="a472ce8d19d10484177dabb05deb4ee299058a0c" translate="yes" xml:space="preserve">
          <source>Equal</source>
          <target state="translated">Equal</target>
        </trans-unit>
        <trans-unit id="63276c3f030c19b627bf5d254dcdbb9bcf562bad" translate="yes" xml:space="preserve">
          <source>Equal to 2&amp;pi;.</source>
          <target state="translated">2&amp;pi;に等しい。</target>
        </trans-unit>
        <trans-unit id="405a251de130511276f39e55ec9df55ba69f2df4" translate="yes" xml:space="preserve">
          <source>Equal to &lt;code&gt;self&lt;/code&gt; if the sign of &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;sign&lt;/code&gt; are the same, otherwise equal to &lt;code&gt;-self&lt;/code&gt;. If &lt;code&gt;self&lt;/code&gt; is a &lt;code&gt;NAN&lt;/code&gt;, then a &lt;code&gt;NAN&lt;/code&gt; with the sign of &lt;code&gt;sign&lt;/code&gt; is returned.</source>
          <target state="translated">等しい &lt;code&gt;self&lt;/code&gt; の符号場合 &lt;code&gt;self&lt;/code&gt; 及び &lt;code&gt;sign&lt;/code&gt; そうでなければ、同じであるに等しい &lt;code&gt;-self&lt;/code&gt; 。 &lt;code&gt;self&lt;/code&gt; が &lt;code&gt;NAN&lt;/code&gt; の場合、signの &lt;code&gt;sign&lt;/code&gt; が付いた &lt;code&gt;NAN&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="7e6f5b495f8a4e458ef3a061841a33a5e4f18979" translate="yes" xml:space="preserve">
          <source>Equality comparison</source>
          <target state="translated">平等比較</target>
        </trans-unit>
        <trans-unit id="5f41aea6c09b33c06645c0766aaecfedd792ccc6" translate="yes" xml:space="preserve">
          <source>Equality for two &lt;code&gt;Arc&lt;/code&gt;s.</source>
          <target state="translated">2つの &lt;code&gt;Arc&lt;/code&gt; の等価性。</target>
        </trans-unit>
        <trans-unit id="3aa1e173d05b48dca7557f6bab092467f78ca8c9" translate="yes" xml:space="preserve">
          <source>Equality for two &lt;code&gt;Rc&lt;/code&gt;s.</source>
          <target state="translated">2つの &lt;code&gt;Rc&lt;/code&gt; の等価性。</target>
        </trans-unit>
        <trans-unit id="1f55cac8623bcd3e718c002528aa20c26ca69289" translate="yes" xml:space="preserve">
          <source>Equivalent</source>
          <target state="translated">Equivalent</target>
        </trans-unit>
        <trans-unit id="a578720d2ebce2cf30841367e32e8f0bd0b0b22c" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#method.split&quot;&gt;&lt;code&gt;split&lt;/code&gt;&lt;/a&gt;, except that the trailing substring is skipped if empty.</source>
          <target state="translated">空の場合、後続の部分文字列がスキップされることを除いて、&lt;a href=&quot;#method.split&quot;&gt; &lt;code&gt;split&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="e1fe70a9013b9f7ad52543eb074d60df3e652fa5" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../primitive.str#method.split&quot;&gt;&lt;code&gt;split&lt;/code&gt;&lt;/a&gt;, except that the trailing substring is skipped if empty.</source>
          <target state="translated">末尾の部分文字列が空の場合にスキップされることを除いて、&lt;a href=&quot;../primitive.str#method.split&quot;&gt; &lt;code&gt;split&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="e107c080060b9ae42d47d1adc35885a18ad2376a" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;primitive.str#method.split&quot;&gt;&lt;code&gt;split&lt;/code&gt;&lt;/a&gt;, except that the trailing substring is skipped if empty.</source>
          <target state="translated">末尾の部分文字列が空の場合にスキップされることを除いて、&lt;a href=&quot;primitive.str#method.split&quot;&gt; &lt;code&gt;split&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="f4d4c5ad5ed4d546680f19b164a88f1e0df94dc1" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;struct.cstring#method.as_bytes&quot;&gt;&lt;code&gt;CString::as_bytes()&lt;/code&gt;&lt;/a&gt; except that the returned slice includes the trailing nul terminator.</source>
          <target state="translated">返されるスライスに末尾のヌルターミネータが含まれることを除いて、&lt;a href=&quot;struct.cstring#method.as_bytes&quot;&gt; &lt;code&gt;CString::as_bytes()&lt;/code&gt; &lt;/a&gt;同等です。</target>
        </trans-unit>
        <trans-unit id="8e09a4314eb2aac92e3bbcd11268ea5eabb19c15" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;struct.cstring#method.into_bytes&quot;&gt;&lt;code&gt;CString::into_bytes()&lt;/code&gt;&lt;/a&gt; except that the returned vector includes the trailing nul terminator.</source>
          <target state="translated">返されるベクトルに末尾のヌルターミネータが含まれることを除いて、&lt;a href=&quot;struct.cstring#method.into_bytes&quot;&gt; &lt;code&gt;CString::into_bytes()&lt;/code&gt; &lt;/a&gt;同等です。</target>
        </trans-unit>
        <trans-unit id="520ec4df60576047dc6953cb6e9a90f79e8c34af" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&amp;amp;mut s[..]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;amp;mut s[..]&lt;/code&gt; 同等です。</target>
        </trans-unit>
        <trans-unit id="37288772f40eeba4a16d383aae7f00fba4942540" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&amp;amp;s[..]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;amp;s[..]&lt;/code&gt; 同等です。</target>
        </trans-unit>
        <trans-unit id="7b61ccc658e4cdf275fde6588076abc022d0a9ce" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&amp;amp;self[0 .. len]&lt;/code&gt; or &lt;code&gt;&amp;amp;mut self[0 .. len]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;amp;self[0 .. len]&lt;/code&gt; または &lt;code&gt;&amp;amp;mut self[0 .. len]&lt;/code&gt; 同等です。</target>
        </trans-unit>
        <trans-unit id="beccb6f9ce4ea8fe1f797ec93ce8aae8564f97f5" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;to_ascii_lowercase(a) == to_ascii_lowercase(b)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;to_ascii_lowercase(a) == to_ascii_lowercase(b)&lt;/code&gt; 同等です。</target>
        </trans-unit>
        <trans-unit id="30fd2550afd1dfab7729d0cd3a295d45e23e1fd6" translate="yes" xml:space="preserve">
          <source>Equivalent to C's &lt;code&gt;char&lt;/code&gt; type.</source>
          <target state="translated">Cの &lt;code&gt;char&lt;/code&gt; 型と同じです。</target>
        </trans-unit>
        <trans-unit id="fe5d96bd900ba762d3ae3004062988f64d02efc2" translate="yes" xml:space="preserve">
          <source>Equivalent to C's &lt;code&gt;double&lt;/code&gt; type.</source>
          <target state="translated">Cの &lt;code&gt;double&lt;/code&gt; 型に相当します。</target>
        </trans-unit>
        <trans-unit id="cc4e7a1a539169a38158ff00da857107cb2c1ff4" translate="yes" xml:space="preserve">
          <source>Equivalent to C's &lt;code&gt;float&lt;/code&gt; type.</source>
          <target state="translated">Cの &lt;code&gt;float&lt;/code&gt; 型と同じです。</target>
        </trans-unit>
        <trans-unit id="1d0ed3b86c432a566c7e37d909d740b7df7c763d" translate="yes" xml:space="preserve">
          <source>Equivalent to C's &lt;code&gt;signed char&lt;/code&gt; type.</source>
          <target state="translated">Cの &lt;code&gt;signed char&lt;/code&gt; 型と同等です。</target>
        </trans-unit>
        <trans-unit id="cd9e7c22a743e1e144a7cb0f17f18f94081052b8" translate="yes" xml:space="preserve">
          <source>Equivalent to C's &lt;code&gt;signed int&lt;/code&gt; (&lt;code&gt;int&lt;/code&gt;) type.</source>
          <target state="translated">Cの &lt;code&gt;signed int&lt;/code&gt; （ &lt;code&gt;int&lt;/code&gt; ）型と同等です。</target>
        </trans-unit>
        <trans-unit id="6fa274bc22fa90964570ee36afaf10f043a4dac2" translate="yes" xml:space="preserve">
          <source>Equivalent to C's &lt;code&gt;signed long long&lt;/code&gt; (&lt;code&gt;long long&lt;/code&gt;) type.</source>
          <target state="translated">Cの &lt;code&gt;signed long long&lt;/code&gt; （ &lt;code&gt;long long&lt;/code&gt; ）型と同等です。</target>
        </trans-unit>
        <trans-unit id="b838c3f9398b5073227215c8465e1c0743f70a09" translate="yes" xml:space="preserve">
          <source>Equivalent to C's &lt;code&gt;signed long&lt;/code&gt; (&lt;code&gt;long&lt;/code&gt;) type.</source>
          <target state="translated">Cの &lt;code&gt;signed long&lt;/code&gt; （ &lt;code&gt;long&lt;/code&gt; ）型と同等です。</target>
        </trans-unit>
        <trans-unit id="9137a4ce3f48d2c2c3c1de4a81ba6a0d6131e984" translate="yes" xml:space="preserve">
          <source>Equivalent to C's &lt;code&gt;signed short&lt;/code&gt; (&lt;code&gt;short&lt;/code&gt;) type.</source>
          <target state="translated">Cの &lt;code&gt;signed short&lt;/code&gt; （ &lt;code&gt;short&lt;/code&gt; ）型と同等です。</target>
        </trans-unit>
        <trans-unit id="2001a64bb4f156b5b695b049dbe89ebb2aafe34d" translate="yes" xml:space="preserve">
          <source>Equivalent to C's &lt;code&gt;unsigned char&lt;/code&gt; type.</source>
          <target state="translated">Cの &lt;code&gt;unsigned char&lt;/code&gt; 型と同じです。</target>
        </trans-unit>
        <trans-unit id="fb7b04edd9da02fb05c64fcf998b723d3c5a4d85" translate="yes" xml:space="preserve">
          <source>Equivalent to C's &lt;code&gt;unsigned int&lt;/code&gt; type.</source>
          <target state="translated">Cの &lt;code&gt;unsigned int&lt;/code&gt; 型と同じです。</target>
        </trans-unit>
        <trans-unit id="a92b05b4be5ba5d26db92658a367d95893a07fab" translate="yes" xml:space="preserve">
          <source>Equivalent to C's &lt;code&gt;unsigned long long&lt;/code&gt; type.</source>
          <target state="translated">Cの &lt;code&gt;unsigned long long&lt;/code&gt; 型と同等です。</target>
        </trans-unit>
        <trans-unit id="2b4aa8d1d8fcdc89be8cd9a4f4a1b3f8af4286a3" translate="yes" xml:space="preserve">
          <source>Equivalent to C's &lt;code&gt;unsigned long&lt;/code&gt; type.</source>
          <target state="translated">Cの &lt;code&gt;unsigned long&lt;/code&gt; 型と同等です。</target>
        </trans-unit>
        <trans-unit id="21994295625e2adb043d30b75542a094d322568b" translate="yes" xml:space="preserve">
          <source>Equivalent to C's &lt;code&gt;unsigned short&lt;/code&gt; type.</source>
          <target state="translated">Cの &lt;code&gt;unsigned short&lt;/code&gt; 型と同等です。</target>
        </trans-unit>
        <trans-unit id="11fb84dd17447c802002de727eafffd74f87212e" translate="yes" xml:space="preserve">
          <source>Equivalent to C's &lt;code&gt;void&lt;/code&gt; type when used as a &lt;a href=&quot;../primitive.pointer&quot;&gt;pointer&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../primitive.pointer&quot;&gt;ポインタ&lt;/a&gt;として使用した場合のCの &lt;code&gt;void&lt;/code&gt; 型と同じです。</target>
        </trans-unit>
        <trans-unit id="6f0f20b21cf3a4db5aabd8499cca599fe84f0489" translate="yes" xml:space="preserve">
          <source>Equivalent to the &lt;a href=&quot;#method.as_bytes&quot;&gt;&lt;code&gt;as_bytes&lt;/code&gt;&lt;/a&gt; function except that the returned slice includes the trailing nul terminator.</source>
          <target state="translated">返されるスライスに末尾のヌルターミネーターが含まれることを除いて、&lt;a href=&quot;#method.as_bytes&quot;&gt; &lt;code&gt;as_bytes&lt;/code&gt; &lt;/a&gt;関数と同等です。</target>
        </trans-unit>
        <trans-unit id="2d259b1deaffdda43650de85037b35507164253c" translate="yes" xml:space="preserve">
          <source>Equivalent to the &lt;a href=&quot;#method.into_bytes&quot;&gt;&lt;code&gt;into_bytes&lt;/code&gt;&lt;/a&gt; function except that the returned vector includes the trailing nul terminator.</source>
          <target state="translated">返されるベクトルに末尾のNULターミネーターが含まれることを除いて、&lt;a href=&quot;#method.into_bytes&quot;&gt; &lt;code&gt;into_bytes&lt;/code&gt; &lt;/a&gt;関数と同等です。</target>
        </trans-unit>
        <trans-unit id="11359624403d05f21d9be479e7f5d5078192e88c" translate="yes" xml:space="preserve">
          <source>Equivalent to the &lt;a href=&quot;macro.print&quot;&gt;&lt;code&gt;print!&lt;/code&gt;&lt;/a&gt; macro, except that output goes to &lt;a href=&quot;io/fn.stderr&quot;&gt;&lt;code&gt;io::stderr&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;io/fn.stdout&quot;&gt;&lt;code&gt;io::stdout&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;macro.print&quot;&gt;&lt;code&gt;print!&lt;/code&gt;&lt;/a&gt; for example usage.</source>
          <target state="translated">&lt;a href=&quot;macro.print&quot;&gt; &lt;code&gt;print!&lt;/code&gt; &lt;/a&gt;相当！マクロ。ただし、出力は&lt;a href=&quot;io/fn.stdout&quot;&gt; &lt;code&gt;io::stdout&lt;/code&gt; &lt;/a&gt;ではなく&lt;a href=&quot;io/fn.stderr&quot;&gt; &lt;code&gt;io::stderr&lt;/code&gt; &lt;/a&gt;に送られます。&lt;a href=&quot;macro.print&quot;&gt; &lt;code&gt;print!&lt;/code&gt; &lt;/a&gt;参照してください！たとえば使用法。</target>
        </trans-unit>
        <trans-unit id="cf02d51ee9f0075a3e0407f60766bc21ffa97f33" translate="yes" xml:space="preserve">
          <source>Equivalent to the &lt;a href=&quot;macro.print&quot;&gt;&lt;code&gt;print!&lt;/code&gt;&lt;/a&gt; macro, except that output goes to &lt;a href=&quot;io/struct.stderr&quot;&gt;&lt;code&gt;io::stderr&lt;/code&gt;&lt;/a&gt; instead of &lt;code&gt;io::stdout&lt;/code&gt;. See &lt;a href=&quot;macro.print&quot;&gt;&lt;code&gt;print!&lt;/code&gt;&lt;/a&gt; for example usage.</source>
          <target state="translated">&lt;a href=&quot;macro.print&quot;&gt; &lt;code&gt;print!&lt;/code&gt; &lt;/a&gt;相当！マクロ。ただし、出力は &lt;code&gt;io::stdout&lt;/code&gt; ではなく&lt;a href=&quot;io/struct.stderr&quot;&gt; &lt;code&gt;io::stderr&lt;/code&gt; &lt;/a&gt;に送られます。&lt;a href=&quot;macro.print&quot;&gt; &lt;code&gt;print!&lt;/code&gt; &lt;/a&gt;見る！たとえば使用法。</target>
        </trans-unit>
        <trans-unit id="0f135709bd74c6b9ed255dbf4268c7ebf5c86c50" translate="yes" xml:space="preserve">
          <source>Equivalent to the &lt;a href=&quot;macro.println&quot;&gt;&lt;code&gt;println!&lt;/code&gt;&lt;/a&gt; macro except that a newline is not printed at the end of the message.</source>
          <target state="translated">&lt;a href=&quot;macro.println&quot;&gt; &lt;code&gt;println!&lt;/code&gt; &lt;/a&gt;相当！メッセージの最後に改行が出力されないことを除いて、マクロ。</target>
        </trans-unit>
        <trans-unit id="388ca29321046ed16eb06ab0fd4ca5e00ee9e149" translate="yes" xml:space="preserve">
          <source>Equivalent to the &lt;a href=&quot;macro.println&quot;&gt;&lt;code&gt;println!&lt;/code&gt;&lt;/a&gt; macro, except that output goes to &lt;a href=&quot;io/fn.stderr&quot;&gt;&lt;code&gt;io::stderr&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;io/fn.stdout&quot;&gt;&lt;code&gt;io::stdout&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;macro.println&quot;&gt;&lt;code&gt;println!&lt;/code&gt;&lt;/a&gt; for example usage.</source>
          <target state="translated">&lt;a href=&quot;macro.println&quot;&gt; &lt;code&gt;println!&lt;/code&gt; &lt;/a&gt;相当！マクロ。ただし、出力は&lt;a href=&quot;io/fn.stdout&quot;&gt; &lt;code&gt;io::stdout&lt;/code&gt; &lt;/a&gt;ではなく&lt;a href=&quot;io/fn.stderr&quot;&gt; &lt;code&gt;io::stderr&lt;/code&gt; &lt;/a&gt;に送られます。&lt;a href=&quot;macro.println&quot;&gt; &lt;code&gt;println!&lt;/code&gt; &lt;/a&gt;参照してください！たとえば使用法。</target>
        </trans-unit>
        <trans-unit id="9b612036702d33a6a546ca5118b9e2422c85faf1" translate="yes" xml:space="preserve">
          <source>Equivalent to the &lt;a href=&quot;macro.println&quot;&gt;&lt;code&gt;println!&lt;/code&gt;&lt;/a&gt; macro, except that output goes to &lt;a href=&quot;io/struct.stderr&quot;&gt;&lt;code&gt;io::stderr&lt;/code&gt;&lt;/a&gt; instead of &lt;code&gt;io::stdout&lt;/code&gt;. See &lt;a href=&quot;macro.println&quot;&gt;&lt;code&gt;println!&lt;/code&gt;&lt;/a&gt; for example usage.</source>
          <target state="translated">&lt;a href=&quot;macro.println&quot;&gt; &lt;code&gt;println!&lt;/code&gt; &lt;/a&gt;相当！マクロ。ただし、出力は &lt;code&gt;io::stdout&lt;/code&gt; ではなく&lt;a href=&quot;io/struct.stderr&quot;&gt; &lt;code&gt;io::stderr&lt;/code&gt; &lt;/a&gt;に送られます。&lt;a href=&quot;macro.println&quot;&gt; &lt;code&gt;println!&lt;/code&gt; &lt;/a&gt;参照してください。たとえば使用法。</target>
        </trans-unit>
        <trans-unit id="0bdb51b90a639b122b5a4aaf1dc88977e5e38965" translate="yes" xml:space="preserve">
          <source>Equivalent to the appropriate &lt;code&gt;llvm.memcpy.p0i8.0i8.*&lt;/code&gt; intrinsic, with a size of &lt;code&gt;count&lt;/code&gt; * &lt;code&gt;size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; and an alignment of &lt;code&gt;min_align_of::&amp;lt;T&amp;gt;()&lt;/code&gt;</source>
          <target state="translated">適切な &lt;code&gt;llvm.memcpy.p0i8.0i8.*&lt;/code&gt; 組み込み関数に相当し、サイズは &lt;code&gt;count&lt;/code&gt; * &lt;code&gt;size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; で、アラインメントは &lt;code&gt;min_align_of::&amp;lt;T&amp;gt;()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="10bf5f3deeda5edf7a0faa5c4444a053d8235289" translate="yes" xml:space="preserve">
          <source>Equivalent to the appropriate &lt;code&gt;llvm.memmove.p0i8.0i8.*&lt;/code&gt; intrinsic, with a size of &lt;code&gt;count&lt;/code&gt; * &lt;code&gt;size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; and an alignment of &lt;code&gt;min_align_of::&amp;lt;T&amp;gt;()&lt;/code&gt;</source>
          <target state="translated">適切な &lt;code&gt;llvm.memmove.p0i8.0i8.*&lt;/code&gt; 組み込み関数と同等で、サイズは &lt;code&gt;count&lt;/code&gt; * &lt;code&gt;size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; で、アラインメントは &lt;code&gt;min_align_of::&amp;lt;T&amp;gt;()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f67c1ea40a38529f7dc73cfd47d92c27ec74dd74" translate="yes" xml:space="preserve">
          <source>Equivalent to the appropriate &lt;code&gt;llvm.memset.p0i8.*&lt;/code&gt; intrinsic, with a size of &lt;code&gt;count&lt;/code&gt; * &lt;code&gt;size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; and an alignment of &lt;code&gt;min_align_of::&amp;lt;T&amp;gt;()&lt;/code&gt;.</source>
          <target state="translated">適切な &lt;code&gt;llvm.memset.p0i8.*&lt;/code&gt; 組み込み関数に相当し、サイズは &lt;code&gt;count&lt;/code&gt; * &lt;code&gt;size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; で、アラインメントは &lt;code&gt;min_align_of::&amp;lt;T&amp;gt;()&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5abb5ea96382d02e76f7d80f2fa2df82acf8c9d4" translate="yes" xml:space="preserve">
          <source>Equivalently,</source>
          <target state="translated">Equivalently,</target>
        </trans-unit>
        <trans-unit id="c3aec62f01b02fefce53e99d7ad2f8787712ba62" translate="yes" xml:space="preserve">
          <source>Erlang: message passing, thread failure, &lt;strike&gt;linked thread failure&lt;/strike&gt;, &lt;strike&gt;lightweight concurrency&lt;/strike&gt;</source>
          <target state="translated">Erlang：メッセージパッシング、スレッドエラー、&lt;strike&gt;リンクされたスレッドエラー&lt;/strike&gt;、&lt;strike&gt;軽量同時実行&lt;/strike&gt;</target>
        </trans-unit>
        <trans-unit id="e11685bac8354615d61ebe036088d0c4c929e1b4" translate="yes" xml:space="preserve">
          <source>Erroneous code code:</source>
          <target state="translated">誤ったコードコード。</target>
        </trans-unit>
        <trans-unit id="ac45dc1541b3387a5c75b3af2001ef9eb9e56876" translate="yes" xml:space="preserve">
          <source>Erroneous code example:</source>
          <target state="translated">誤ったコード例。</target>
        </trans-unit>
        <trans-unit id="bcfe0e860ee04a6ab672554e1a2d468af0dcefbc" translate="yes" xml:space="preserve">
          <source>Erroneous code examples:</source>
          <target state="translated">誤ったコード例。</target>
        </trans-unit>
        <trans-unit id="d80b2ebf07c00e4fe35f5780bb8f2096a563a4e2" translate="yes" xml:space="preserve">
          <source>Erroneous example:</source>
          <target state="translated">誤った例。</target>
        </trans-unit>
        <trans-unit id="7f2f6a15cf8da2b27e5a4af47b58e7ad71c0b3d9" translate="yes" xml:space="preserve">
          <source>Error</source>
          <target state="translated">Error</target>
        </trans-unit>
        <trans-unit id="5fff1f56919b006049c274c6c76fbbe56470ee4c" translate="yes" xml:space="preserve">
          <source>Error Handling</source>
          <target state="translated">エラー処理</target>
        </trans-unit>
        <trans-unit id="7ae926478f4235575cf8de025ad5fae5ef6bff67" translate="yes" xml:space="preserve">
          <source>Error due to the allocator (see the &lt;code&gt;AllocErr&lt;/code&gt; type's docs).</source>
          <target state="translated">アロケータによるエラー（ &lt;code&gt;AllocErr&lt;/code&gt; タイプのドキュメントを参照）。</target>
        </trans-unit>
        <trans-unit id="9ea0e53093de195d4dbdb70df7b3f7a8398b73b5" translate="yes" xml:space="preserve">
          <source>Error due to the computed capacity exceeding the collection's maximum (usually &lt;code&gt;isize::MAX&lt;/code&gt; bytes).</source>
          <target state="translated">計算された容量がコレクションの最大値（通常は &lt;code&gt;isize::MAX&lt;/code&gt; バイト）を超えているため、エラーが発生しました。</target>
        </trans-unit>
        <trans-unit id="676ac89a3f3553d0b80db8057d9ed4e3fd953d78" translate="yes" xml:space="preserve">
          <source>Error example 1</source>
          <target state="translated">エラー例1</target>
        </trans-unit>
        <trans-unit id="696064c5e9ba15e9a251569a1ede5708d4a9adee" translate="yes" xml:space="preserve">
          <source>Error example 2</source>
          <target state="translated">エラー例2</target>
        </trans-unit>
        <trans-unit id="6b8c3c7802740fdba2ff293f271859e1c9eef5fb" translate="yes" xml:space="preserve">
          <source>Error handling with the &lt;code&gt;Result&lt;/code&gt; type.</source>
          <target state="translated">&lt;code&gt;Result&lt;/code&gt; タイプでのエラー処理。</target>
        </trans-unit>
        <trans-unit id="8b0c0f6da06324384f8cea5aba8ad0d43949ed58" translate="yes" xml:space="preserve">
          <source>Error propagation</source>
          <target state="translated">エラー伝搬</target>
        </trans-unit>
        <trans-unit id="c9c1811042df6d8655bfc0ef3accbc3dac411ce0" translate="yes" xml:space="preserve">
          <source>Error::borrow</source>
          <target state="translated">Error::borrow</target>
        </trans-unit>
        <trans-unit id="27fbc8c96a4a3a6e5df37788f9c0bec5338c6410" translate="yes" xml:space="preserve">
          <source>Error::borrow_mut</source>
          <target state="translated">Error::borrow_mut</target>
        </trans-unit>
        <trans-unit id="a5a34ef7d8732a5c6f2299420adf7993344da125" translate="yes" xml:space="preserve">
          <source>Error::cause</source>
          <target state="translated">Error::cause</target>
        </trans-unit>
        <trans-unit id="8f4b324ad306db17f767ba7f7c03b774afe7bb8a" translate="yes" xml:space="preserve">
          <source>Error::clamp</source>
          <target state="translated">Error::clamp</target>
        </trans-unit>
        <trans-unit id="0a013c38bbd91642acb14e6d94113ac42c823db8" translate="yes" xml:space="preserve">
          <source>Error::clone</source>
          <target state="translated">Error::clone</target>
        </trans-unit>
        <trans-unit id="fef2a1f7c02d295b34d2ec373e4d337d258a3549" translate="yes" xml:space="preserve">
          <source>Error::clone_from</source>
          <target state="translated">Error::clone_from</target>
        </trans-unit>
        <trans-unit id="acdfa150dc8c2f5ea8f0166df083084f8f782d0f" translate="yes" xml:space="preserve">
          <source>Error::clone_into</source>
          <target state="translated">Error::clone_into</target>
        </trans-unit>
        <trans-unit id="877de87d3c803dd682640de6cdf78c52fb7bee1f" translate="yes" xml:space="preserve">
          <source>Error::cmp</source>
          <target state="translated">Error::cmp</target>
        </trans-unit>
        <trans-unit id="23f30d96191c3a7643d14c94dfb469f704b05aa4" translate="yes" xml:space="preserve">
          <source>Error::default</source>
          <target state="translated">Error::default</target>
        </trans-unit>
        <trans-unit id="e388e1edbd7a27e927336ea0fa220440eb353e4f" translate="yes" xml:space="preserve">
          <source>Error::description</source>
          <target state="translated">Error::description</target>
        </trans-unit>
        <trans-unit id="8a37255a468996312549889b0ab0192986460354" translate="yes" xml:space="preserve">
          <source>Error::downcast</source>
          <target state="translated">Error::downcast</target>
        </trans-unit>
        <trans-unit id="1f7ff6c952f193850e4c6ecbf439abf598495018" translate="yes" xml:space="preserve">
          <source>Error::downcast_mut</source>
          <target state="translated">Error::downcast_mut</target>
        </trans-unit>
        <trans-unit id="55f5cb582143da889a9624743684f78ba98c4bfd" translate="yes" xml:space="preserve">
          <source>Error::downcast_ref</source>
          <target state="translated">Error::downcast_ref</target>
        </trans-unit>
        <trans-unit id="5d76f5304dae034d9a0f8645cd674b06f7eae87d" translate="yes" xml:space="preserve">
          <source>Error::eq</source>
          <target state="translated">Error::eq</target>
        </trans-unit>
        <trans-unit id="cd33ae164422424c5c03032c1cbd8abee3a83fd1" translate="yes" xml:space="preserve">
          <source>Error::fmt</source>
          <target state="translated">Error::fmt</target>
        </trans-unit>
        <trans-unit id="431ea39cab473ac0ba84b0267ce6254bfa289644" translate="yes" xml:space="preserve">
          <source>Error::from</source>
          <target state="translated">Error::from</target>
        </trans-unit>
        <trans-unit id="be7af209adc075ec98f6b0c5dfe7d7a698c1b58a" translate="yes" xml:space="preserve">
          <source>Error::from_raw_os_error</source>
          <target state="translated">Error::from_raw_os_error</target>
        </trans-unit>
        <trans-unit id="0eec7117b080320155e1dd83ce265e8f853fcd63" translate="yes" xml:space="preserve">
          <source>Error::ge</source>
          <target state="translated">Error::ge</target>
        </trans-unit>
        <trans-unit id="fd6fc2c9814ef2ff7654680b15c3ef541e762337" translate="yes" xml:space="preserve">
          <source>Error::get_mut</source>
          <target state="translated">Error::get_mut</target>
        </trans-unit>
        <trans-unit id="eea25728b2f25e24aac53110afa1436c0767b978" translate="yes" xml:space="preserve">
          <source>Error::get_ref</source>
          <target state="translated">Error::get_ref</target>
        </trans-unit>
        <trans-unit id="2640372730a8aa1ecc96d8ccd78f72b11b5db66c" translate="yes" xml:space="preserve">
          <source>Error::gt</source>
          <target state="translated">Error::gt</target>
        </trans-unit>
        <trans-unit id="3adcad88c39514bb7c03dde916fb22d3fce7a971" translate="yes" xml:space="preserve">
          <source>Error::hash</source>
          <target state="translated">Error::hash</target>
        </trans-unit>
        <trans-unit id="b5864113f515a985f9343d1bdcf4dbaa41b305cb" translate="yes" xml:space="preserve">
          <source>Error::hash_slice</source>
          <target state="translated">Error::hash_slice</target>
        </trans-unit>
        <trans-unit id="cabf07b2a5074c19ed53c54cda3b1327ea3376e5" translate="yes" xml:space="preserve">
          <source>Error::into</source>
          <target state="translated">Error::into</target>
        </trans-unit>
        <trans-unit id="d5d79bfaabb4cf080d891e86c73af2aab63b9b8c" translate="yes" xml:space="preserve">
          <source>Error::into_inner</source>
          <target state="translated">Error::into_inner</target>
        </trans-unit>
        <trans-unit id="12f4d6008c2623bb1cb7436ba6e4341209351a00" translate="yes" xml:space="preserve">
          <source>Error::is</source>
          <target state="translated">Error::is</target>
        </trans-unit>
        <trans-unit id="811b10fd99e037312e0ff41bb7e3725c408f892e" translate="yes" xml:space="preserve">
          <source>Error::iter_chain</source>
          <target state="translated">Error::iter_chain</target>
        </trans-unit>
        <trans-unit id="4fdf56d6c4a5e74f21b83b51366e54ef244d514c" translate="yes" xml:space="preserve">
          <source>Error::iter_sources</source>
          <target state="translated">Error::iter_sources</target>
        </trans-unit>
        <trans-unit id="76cce834e921ce55885d2fa9ffb911f60fc84ee7" translate="yes" xml:space="preserve">
          <source>Error::kind</source>
          <target state="translated">Error::kind</target>
        </trans-unit>
        <trans-unit id="2a636b40126c0e0da44fa183f3203731ddf5cf2b" translate="yes" xml:space="preserve">
          <source>Error::last_os_error</source>
          <target state="translated">Error::last_os_error</target>
        </trans-unit>
        <trans-unit id="8f76cee83f8b1da204711a8705c4c35e2d11dc80" translate="yes" xml:space="preserve">
          <source>Error::le</source>
          <target state="translated">Error::le</target>
        </trans-unit>
        <trans-unit id="d242c57e372c095a386fb1b9ea29644d56c81ab4" translate="yes" xml:space="preserve">
          <source>Error::lt</source>
          <target state="translated">Error::lt</target>
        </trans-unit>
        <trans-unit id="bfbc0742b9e39acc5b9fc63fb561bc3aaa9db104" translate="yes" xml:space="preserve">
          <source>Error::max</source>
          <target state="translated">Error::max</target>
        </trans-unit>
        <trans-unit id="dbe16a1942001b3fe792a01894dda0e6db02ef48" translate="yes" xml:space="preserve">
          <source>Error::min</source>
          <target state="translated">Error::min</target>
        </trans-unit>
        <trans-unit id="7e65d7b0eeb79d984bc7dba8652c6ebf2a1ea272" translate="yes" xml:space="preserve">
          <source>Error::ne</source>
          <target state="translated">Error::ne</target>
        </trans-unit>
        <trans-unit id="5d7bcfa1d2fe7676d295dc41d99b34b20d023c84" translate="yes" xml:space="preserve">
          <source>Error::new</source>
          <target state="translated">Error::new</target>
        </trans-unit>
        <trans-unit id="28d90b994fd0c91dcc7990cc0ecaec0d5e760af9" translate="yes" xml:space="preserve">
          <source>Error::partial_cmp</source>
          <target state="translated">Error::partial_cmp</target>
        </trans-unit>
        <trans-unit id="5c1a38dce31a8b50097cad5419054de9a918a9bd" translate="yes" xml:space="preserve">
          <source>Error::raw_os_error</source>
          <target state="translated">Error::raw_os_error</target>
        </trans-unit>
        <trans-unit id="ab34d9f79591c65515a63d29c8697da3918b1b67" translate="yes" xml:space="preserve">
          <source>Error::source</source>
          <target state="translated">Error::source</target>
        </trans-unit>
        <trans-unit id="42687807937d8e1436ff3eae8c6de0b446c1cf5e" translate="yes" xml:space="preserve">
          <source>Error::to_owned</source>
          <target state="translated">Error::to_owned</target>
        </trans-unit>
        <trans-unit id="b0faf8673d1aa039809db4a0ca31cfe6bfb24551" translate="yes" xml:space="preserve">
          <source>Error::to_string</source>
          <target state="translated">Error::to_string</target>
        </trans-unit>
        <trans-unit id="d17f0a86764f1ea745c846fec67b5c7567adfed3" translate="yes" xml:space="preserve">
          <source>Error::try_from</source>
          <target state="translated">Error::try_from</target>
        </trans-unit>
        <trans-unit id="87459884d6f31bbc0a98e64c9f22e18aa2330477" translate="yes" xml:space="preserve">
          <source>Error::try_into</source>
          <target state="translated">Error::try_into</target>
        </trans-unit>
        <trans-unit id="a2bc10df678ac3319a12672d224c47ec3aefb167" translate="yes" xml:space="preserve">
          <source>Error::type_id</source>
          <target state="translated">Error::type_id</target>
        </trans-unit>
        <trans-unit id="06ab716d6b6df21282717af03b8eb6ef305c6249" translate="yes" xml:space="preserve">
          <source>ErrorIter</source>
          <target state="translated">ErrorIter</target>
        </trans-unit>
        <trans-unit id="91043185bf6aab5264c0e408311b84db1a0fb5e8" translate="yes" xml:space="preserve">
          <source>ErrorIter::all</source>
          <target state="translated">ErrorIter::all</target>
        </trans-unit>
        <trans-unit id="8df457e3cf3fc1687ada53e82f98763478469b23" translate="yes" xml:space="preserve">
          <source>ErrorIter::any</source>
          <target state="translated">ErrorIter::any</target>
        </trans-unit>
        <trans-unit id="c9e802e1b5bed892fc44202c87de37586478a361" translate="yes" xml:space="preserve">
          <source>ErrorIter::borrow</source>
          <target state="translated">ErrorIter::borrow</target>
        </trans-unit>
        <trans-unit id="1775b681cabd4bfb41850c9225629727b3db02b7" translate="yes" xml:space="preserve">
          <source>ErrorIter::borrow_mut</source>
          <target state="translated">ErrorIter::borrow_mut</target>
        </trans-unit>
        <trans-unit id="ea805504e04a1f41dd619245f64ade6327d91d2b" translate="yes" xml:space="preserve">
          <source>ErrorIter::by_ref</source>
          <target state="translated">ErrorIter::by_ref</target>
        </trans-unit>
        <trans-unit id="a41c456c5b8c6027bb242f48b4746af1d84aa688" translate="yes" xml:space="preserve">
          <source>ErrorIter::chain</source>
          <target state="translated">ErrorIter::chain</target>
        </trans-unit>
        <trans-unit id="76d6364331dd254f7cfc57a24ef9a8f11207e038" translate="yes" xml:space="preserve">
          <source>ErrorIter::clone</source>
          <target state="translated">ErrorIter::clone</target>
        </trans-unit>
        <trans-unit id="08ca480dbce99991f6aa015c6ab8297547e99edb" translate="yes" xml:space="preserve">
          <source>ErrorIter::clone_from</source>
          <target state="translated">ErrorIter::clone_from</target>
        </trans-unit>
        <trans-unit id="c75578c8fe04456c827488ebc5b484c4f440e702" translate="yes" xml:space="preserve">
          <source>ErrorIter::clone_into</source>
          <target state="translated">ErrorIter::clone_into</target>
        </trans-unit>
        <trans-unit id="f6ca6311feefe93aa3ff662cc57af6bb26c1df01" translate="yes" xml:space="preserve">
          <source>ErrorIter::cloned</source>
          <target state="translated">ErrorIter::cloned</target>
        </trans-unit>
        <trans-unit id="39d7b71286dffe1e8112336d0155fad0cb8939ff" translate="yes" xml:space="preserve">
          <source>ErrorIter::cmp</source>
          <target state="translated">ErrorIter::cmp</target>
        </trans-unit>
        <trans-unit id="26db5782e75a95dafcced9b6ef52894ed5fd2ef3" translate="yes" xml:space="preserve">
          <source>ErrorIter::collect</source>
          <target state="translated">ErrorIter::collect</target>
        </trans-unit>
        <trans-unit id="6d88e70ee3639b8d2aeab09a5876f956c7dfd835" translate="yes" xml:space="preserve">
          <source>ErrorIter::copied</source>
          <target state="translated">ErrorIter::copied</target>
        </trans-unit>
        <trans-unit id="2167a685a74b2509bc9f1b702a90eb311ada299d" translate="yes" xml:space="preserve">
          <source>ErrorIter::count</source>
          <target state="translated">ErrorIter::count</target>
        </trans-unit>
        <trans-unit id="81b3e3f8a09e70a6da9303c857b1b6a4f026ce12" translate="yes" xml:space="preserve">
          <source>ErrorIter::cycle</source>
          <target state="translated">ErrorIter::cycle</target>
        </trans-unit>
        <trans-unit id="317a6cf98623321e6cdb478da60097ca7f60c8d0" translate="yes" xml:space="preserve">
          <source>ErrorIter::enumerate</source>
          <target state="translated">ErrorIter::enumerate</target>
        </trans-unit>
        <trans-unit id="d2c6b309130c35901cb8511c21e1cc4bff343112" translate="yes" xml:space="preserve">
          <source>ErrorIter::eq</source>
          <target state="translated">ErrorIter::eq</target>
        </trans-unit>
        <trans-unit id="9ce04821944e69ece8d845f8f23dd99add317778" translate="yes" xml:space="preserve">
          <source>ErrorIter::filter</source>
          <target state="translated">ErrorIter::filter</target>
        </trans-unit>
        <trans-unit id="9f1b4a216f6c1e93e80f983274e4ce0cc156f868" translate="yes" xml:space="preserve">
          <source>ErrorIter::filter_map</source>
          <target state="translated">ErrorIter::filter_map</target>
        </trans-unit>
        <trans-unit id="ca73f731ff488a406d9d3cad80fc75568ea18c6d" translate="yes" xml:space="preserve">
          <source>ErrorIter::find</source>
          <target state="translated">ErrorIter::find</target>
        </trans-unit>
        <trans-unit id="a2d99ef42596a0439182e206e926ffe92c354eef" translate="yes" xml:space="preserve">
          <source>ErrorIter::find_map</source>
          <target state="translated">ErrorIter::find_map</target>
        </trans-unit>
        <trans-unit id="bad5ee004bac6f4c928c4b117650510fceaf8bfe" translate="yes" xml:space="preserve">
          <source>ErrorIter::flat_map</source>
          <target state="translated">ErrorIter::flat_map</target>
        </trans-unit>
        <trans-unit id="b1981d1d1da1062d93d5dc14d979958b12ab9edf" translate="yes" xml:space="preserve">
          <source>ErrorIter::flatten</source>
          <target state="translated">ErrorIter::flatten</target>
        </trans-unit>
        <trans-unit id="6ac02b4bd4b134bf3756af190c955220f6f03c42" translate="yes" xml:space="preserve">
          <source>ErrorIter::fmt</source>
          <target state="translated">ErrorIter::fmt</target>
        </trans-unit>
        <trans-unit id="f1f19a7e4c2a3f6f64983208404498558a7c4681" translate="yes" xml:space="preserve">
          <source>ErrorIter::fold</source>
          <target state="translated">ErrorIter::fold</target>
        </trans-unit>
        <trans-unit id="99ae147b4f6e5f242225a2afad86725ab6e4348b" translate="yes" xml:space="preserve">
          <source>ErrorIter::for_each</source>
          <target state="translated">ErrorIter::for_each</target>
        </trans-unit>
        <trans-unit id="efce1afdc65039bcd4078703c38961aee06da0a1" translate="yes" xml:space="preserve">
          <source>ErrorIter::from</source>
          <target state="translated">ErrorIter::from</target>
        </trans-unit>
        <trans-unit id="4e5a8744f335560b34b09dc34308d0056a106537" translate="yes" xml:space="preserve">
          <source>ErrorIter::fuse</source>
          <target state="translated">ErrorIter::fuse</target>
        </trans-unit>
        <trans-unit id="927bad5fd536db91abebe6d23f559d293ffe454a" translate="yes" xml:space="preserve">
          <source>ErrorIter::ge</source>
          <target state="translated">ErrorIter::ge</target>
        </trans-unit>
        <trans-unit id="d362ecf4fbf64b83324bdcc2b41987c4e0280112" translate="yes" xml:space="preserve">
          <source>ErrorIter::gt</source>
          <target state="translated">ErrorIter::gt</target>
        </trans-unit>
        <trans-unit id="d2da2c2b1bfe76b056455e41956b02780d4b4c1a" translate="yes" xml:space="preserve">
          <source>ErrorIter::inspect</source>
          <target state="translated">ErrorIter::inspect</target>
        </trans-unit>
        <trans-unit id="2e662179fef843796050cff2ea91a0bbec268d16" translate="yes" xml:space="preserve">
          <source>ErrorIter::into</source>
          <target state="translated">ErrorIter::into</target>
        </trans-unit>
        <trans-unit id="a6ecb53d24d32ed261cccaa2104b8698489c1f5e" translate="yes" xml:space="preserve">
          <source>ErrorIter::into_iter</source>
          <target state="translated">ErrorIter::into_iter</target>
        </trans-unit>
        <trans-unit id="109a7d928f65801a408ea6df957693e0a8c6dff1" translate="yes" xml:space="preserve">
          <source>ErrorIter::is_sorted</source>
          <target state="translated">ErrorIter::is_sorted</target>
        </trans-unit>
        <trans-unit id="d86c6d8ec9db204e0257ff86a56ad73dc0d70220" translate="yes" xml:space="preserve">
          <source>ErrorIter::is_sorted_by</source>
          <target state="translated">ErrorIter::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="0b3190903a26c14e4d3dac8cd5b121a55ef094c9" translate="yes" xml:space="preserve">
          <source>ErrorIter::is_sorted_by_key</source>
          <target state="translated">ErrorIter::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="87f5e824393c5afd589357155a9f5cfe9704fbba" translate="yes" xml:space="preserve">
          <source>ErrorIter::last</source>
          <target state="translated">ErrorIter::last</target>
        </trans-unit>
        <trans-unit id="489977883556c303806bcf1355f15d731d68561a" translate="yes" xml:space="preserve">
          <source>ErrorIter::le</source>
          <target state="translated">ErrorIter::le</target>
        </trans-unit>
        <trans-unit id="63be8f3a9809328e3e6301fb5202c3adb561ab94" translate="yes" xml:space="preserve">
          <source>ErrorIter::lt</source>
          <target state="translated">ErrorIter::lt</target>
        </trans-unit>
        <trans-unit id="49f1d228b25d6cf6ca66899cbd0f696261068889" translate="yes" xml:space="preserve">
          <source>ErrorIter::map</source>
          <target state="translated">ErrorIter::map</target>
        </trans-unit>
        <trans-unit id="6f31d09b8fe33cac5a4595eb0fbc6ed3e7975dd4" translate="yes" xml:space="preserve">
          <source>ErrorIter::max</source>
          <target state="translated">ErrorIter::max</target>
        </trans-unit>
        <trans-unit id="abd663cebef0c63f0b765bb7f3b9132bf1c389b6" translate="yes" xml:space="preserve">
          <source>ErrorIter::max_by</source>
          <target state="translated">ErrorIter::max_by</target>
        </trans-unit>
        <trans-unit id="88b59eeaaa6b2c8714fdc1e04c1609bf80b5b337" translate="yes" xml:space="preserve">
          <source>ErrorIter::max_by_key</source>
          <target state="translated">ErrorIter::max_by_key</target>
        </trans-unit>
        <trans-unit id="bc6638c81b3773f829090d87ea5f748d874b26a5" translate="yes" xml:space="preserve">
          <source>ErrorIter::min</source>
          <target state="translated">ErrorIter::min</target>
        </trans-unit>
        <trans-unit id="715087be39effd23569dac5b8603cca1eefabdd8" translate="yes" xml:space="preserve">
          <source>ErrorIter::min_by</source>
          <target state="translated">ErrorIter::min_by</target>
        </trans-unit>
        <trans-unit id="143e60560536ea273049ceb1fdbf02aa9faecbf6" translate="yes" xml:space="preserve">
          <source>ErrorIter::min_by_key</source>
          <target state="translated">ErrorIter::min_by_key</target>
        </trans-unit>
        <trans-unit id="98f048958bd83a0eb5bfc578cabf331b673e8bf8" translate="yes" xml:space="preserve">
          <source>ErrorIter::ne</source>
          <target state="translated">ErrorIter::ne</target>
        </trans-unit>
        <trans-unit id="43130c9b404c0207d45f88008f6b12b339ac9b72" translate="yes" xml:space="preserve">
          <source>ErrorIter::next</source>
          <target state="translated">ErrorIter::next</target>
        </trans-unit>
        <trans-unit id="661c44f015a0f08b2adadbd8a6e33db60c7d5cb9" translate="yes" xml:space="preserve">
          <source>ErrorIter::nth</source>
          <target state="translated">ErrorIter::nth</target>
        </trans-unit>
        <trans-unit id="5d758aca8c429b6c0965ebdaa5e7df77718f4752" translate="yes" xml:space="preserve">
          <source>ErrorIter::partial_cmp</source>
          <target state="translated">ErrorIter::partial_cmp</target>
        </trans-unit>
        <trans-unit id="d4ef2555472fd18733a48d2e98afd0cb97ddcd1b" translate="yes" xml:space="preserve">
          <source>ErrorIter::partition</source>
          <target state="translated">ErrorIter::partition</target>
        </trans-unit>
        <trans-unit id="7156fa170e10a2c1bef42e6ea173f6df2c374943" translate="yes" xml:space="preserve">
          <source>ErrorIter::peekable</source>
          <target state="translated">ErrorIter::peekable</target>
        </trans-unit>
        <trans-unit id="526a6dfc8e9c8447bd2e4c5e7d9c2e090eb70da6" translate="yes" xml:space="preserve">
          <source>ErrorIter::position</source>
          <target state="translated">ErrorIter::position</target>
        </trans-unit>
        <trans-unit id="6aa89adaf5d385081dadea3ed316a38253f8b2c9" translate="yes" xml:space="preserve">
          <source>ErrorIter::product</source>
          <target state="translated">ErrorIter::product</target>
        </trans-unit>
        <trans-unit id="ba6872f319b20d4b7c8ed12d395c54de7777ce12" translate="yes" xml:space="preserve">
          <source>ErrorIter::rev</source>
          <target state="translated">ErrorIter::rev</target>
        </trans-unit>
        <trans-unit id="20efdc92e8c052c4e74f98b2ff771e859729871a" translate="yes" xml:space="preserve">
          <source>ErrorIter::rposition</source>
          <target state="translated">ErrorIter::rposition</target>
        </trans-unit>
        <trans-unit id="9ba947f0f16aea6d1449058db3d29fe2e872cbc2" translate="yes" xml:space="preserve">
          <source>ErrorIter::scan</source>
          <target state="translated">ErrorIter::scan</target>
        </trans-unit>
        <trans-unit id="577761fa1238fe8853eb997d76220ee576a33605" translate="yes" xml:space="preserve">
          <source>ErrorIter::size_hint</source>
          <target state="translated">ErrorIter::size_hint</target>
        </trans-unit>
        <trans-unit id="0ab1fbcc4d98566483f23fa2bf9b99b18f8867d1" translate="yes" xml:space="preserve">
          <source>ErrorIter::skip</source>
          <target state="translated">ErrorIter::skip</target>
        </trans-unit>
        <trans-unit id="370cf207fa70bc9aa4562e962432a6545d0cb842" translate="yes" xml:space="preserve">
          <source>ErrorIter::skip_while</source>
          <target state="translated">ErrorIter::skip_while</target>
        </trans-unit>
        <trans-unit id="85c0c528d3fee7da1d43112adebf68f08e41edce" translate="yes" xml:space="preserve">
          <source>ErrorIter::step_by</source>
          <target state="translated">ErrorIter::step_by</target>
        </trans-unit>
        <trans-unit id="8a90acb08f66ed2efc432397f60d6c488429f91b" translate="yes" xml:space="preserve">
          <source>ErrorIter::sum</source>
          <target state="translated">ErrorIter::sum</target>
        </trans-unit>
        <trans-unit id="16c8c93ac7d119f95436b8191f828e172550d85a" translate="yes" xml:space="preserve">
          <source>ErrorIter::take</source>
          <target state="translated">ErrorIter::take</target>
        </trans-unit>
        <trans-unit id="34a55d7a94ae1b6a93a446fbc88d67c07b37736f" translate="yes" xml:space="preserve">
          <source>ErrorIter::take_while</source>
          <target state="translated">ErrorIter::take_while</target>
        </trans-unit>
        <trans-unit id="6bb89732501c88e3882522c2487bec2fa8c6e1b6" translate="yes" xml:space="preserve">
          <source>ErrorIter::to_owned</source>
          <target state="translated">ErrorIter::to_owned</target>
        </trans-unit>
        <trans-unit id="f71921b1ac52bb96f998e3df7a23ae89272d2703" translate="yes" xml:space="preserve">
          <source>ErrorIter::try_fold</source>
          <target state="translated">ErrorIter::try_fold</target>
        </trans-unit>
        <trans-unit id="006379f6696475eb369876240c8298a1550b4b92" translate="yes" xml:space="preserve">
          <source>ErrorIter::try_for_each</source>
          <target state="translated">ErrorIter::try_for_each</target>
        </trans-unit>
        <trans-unit id="8b33e0004061b2fad07dee9a12c33d7f73d5c6e2" translate="yes" xml:space="preserve">
          <source>ErrorIter::try_from</source>
          <target state="translated">ErrorIter::try_from</target>
        </trans-unit>
        <trans-unit id="fbda61b2216aa0d6820636b30c5058063277e0e3" translate="yes" xml:space="preserve">
          <source>ErrorIter::try_into</source>
          <target state="translated">ErrorIter::try_into</target>
        </trans-unit>
        <trans-unit id="064ba71e1ac3a639a701d85b4c10f6f0c03052ac" translate="yes" xml:space="preserve">
          <source>ErrorIter::type_id</source>
          <target state="translated">ErrorIter::type_id</target>
        </trans-unit>
        <trans-unit id="d1fb0d85eef9b409463670f3e7cbedaf6ed1899b" translate="yes" xml:space="preserve">
          <source>ErrorIter::unzip</source>
          <target state="translated">ErrorIter::unzip</target>
        </trans-unit>
        <trans-unit id="0c70622ee8b65b81cbc6c9e11a0a194074da14fb" translate="yes" xml:space="preserve">
          <source>ErrorIter::zip</source>
          <target state="translated">ErrorIter::zip</target>
        </trans-unit>
        <trans-unit id="84c5a637a1e81dc8cea0953625129cc071e8fe22" translate="yes" xml:space="preserve">
          <source>ErrorKind</source>
          <target state="translated">ErrorKind</target>
        </trans-unit>
        <trans-unit id="661f3db342d40d161c815e24dcd28fd90072182e" translate="yes" xml:space="preserve">
          <source>ErrorKind::borrow</source>
          <target state="translated">ErrorKind::borrow</target>
        </trans-unit>
        <trans-unit id="a7c0e6672941125f13f7425b682289bf6f270084" translate="yes" xml:space="preserve">
          <source>ErrorKind::borrow_mut</source>
          <target state="translated">ErrorKind::borrow_mut</target>
        </trans-unit>
        <trans-unit id="512f1996ce370b96a6c9d734472221a8c6d10bc2" translate="yes" xml:space="preserve">
          <source>ErrorKind::clamp</source>
          <target state="translated">ErrorKind::clamp</target>
        </trans-unit>
        <trans-unit id="0bb88486e95f4c4535e615559b601fa571e80e2d" translate="yes" xml:space="preserve">
          <source>ErrorKind::clone</source>
          <target state="translated">ErrorKind::clone</target>
        </trans-unit>
        <trans-unit id="42f07958af05164e3b5481fd181b5daf228078c4" translate="yes" xml:space="preserve">
          <source>ErrorKind::clone_from</source>
          <target state="translated">ErrorKind::clone_from</target>
        </trans-unit>
        <trans-unit id="d4faf1211f323ff4a3e9d22587bc469e0ea0acc6" translate="yes" xml:space="preserve">
          <source>ErrorKind::clone_into</source>
          <target state="translated">ErrorKind::clone_into</target>
        </trans-unit>
        <trans-unit id="699ad34c098b58c9ae5199d8c326a06627454b22" translate="yes" xml:space="preserve">
          <source>ErrorKind::cmp</source>
          <target state="translated">ErrorKind::cmp</target>
        </trans-unit>
        <trans-unit id="600073c582521666f7a8cdca06a024019eb42c8b" translate="yes" xml:space="preserve">
          <source>ErrorKind::eq</source>
          <target state="translated">ErrorKind::eq</target>
        </trans-unit>
        <trans-unit id="870fbb5ab6681bb642f25062aabacdf4204c2549" translate="yes" xml:space="preserve">
          <source>ErrorKind::fmt</source>
          <target state="translated">ErrorKind::fmt</target>
        </trans-unit>
        <trans-unit id="9cf1590cfbe1ae248877811fc6fb4179da992261" translate="yes" xml:space="preserve">
          <source>ErrorKind::from</source>
          <target state="translated">ErrorKind::from</target>
        </trans-unit>
        <trans-unit id="f1418c60b27299c29626f5e264f75f81ff0b2d6f" translate="yes" xml:space="preserve">
          <source>ErrorKind::ge</source>
          <target state="translated">ErrorKind::ge</target>
        </trans-unit>
        <trans-unit id="5696d03cd71a347e97d1d4cf43ae7b553decbd3b" translate="yes" xml:space="preserve">
          <source>ErrorKind::gt</source>
          <target state="translated">ErrorKind::gt</target>
        </trans-unit>
        <trans-unit id="5b32b39a188cf662b3f6b60b32c1a90ec82cbc31" translate="yes" xml:space="preserve">
          <source>ErrorKind::hash</source>
          <target state="translated">ErrorKind::hash</target>
        </trans-unit>
        <trans-unit id="15602f3189b3529aebcc2465b516f40c90dc4336" translate="yes" xml:space="preserve">
          <source>ErrorKind::hash_slice</source>
          <target state="translated">ErrorKind::hash_slice</target>
        </trans-unit>
        <trans-unit id="5c2d93df4341bbe210c069aadfa57574bb396fd0" translate="yes" xml:space="preserve">
          <source>ErrorKind::into</source>
          <target state="translated">ErrorKind::into</target>
        </trans-unit>
        <trans-unit id="a1e29dfd09d0f799ab36804aa2308647ce6eab0f" translate="yes" xml:space="preserve">
          <source>ErrorKind::le</source>
          <target state="translated">ErrorKind::le</target>
        </trans-unit>
        <trans-unit id="3d104950c3d01e45500c34d939b46ee8657cbe97" translate="yes" xml:space="preserve">
          <source>ErrorKind::lt</source>
          <target state="translated">ErrorKind::lt</target>
        </trans-unit>
        <trans-unit id="42518e9d6e310cb8f1d9daf12d8289338dd37059" translate="yes" xml:space="preserve">
          <source>ErrorKind::max</source>
          <target state="translated">ErrorKind::max</target>
        </trans-unit>
        <trans-unit id="dd0d47b52baf4626044901e80bf0f1b9e1d38aed" translate="yes" xml:space="preserve">
          <source>ErrorKind::min</source>
          <target state="translated">ErrorKind::min</target>
        </trans-unit>
        <trans-unit id="e8ed6ea0417b24701f5d386634f3ec1d84f3acd5" translate="yes" xml:space="preserve">
          <source>ErrorKind::ne</source>
          <target state="translated">ErrorKind::ne</target>
        </trans-unit>
        <trans-unit id="46d011754636b09593cb8a683d317fe309faec89" translate="yes" xml:space="preserve">
          <source>ErrorKind::partial_cmp</source>
          <target state="translated">ErrorKind::partial_cmp</target>
        </trans-unit>
        <trans-unit id="ef8b6b3e78c949fd8037b9405e7bd6d1277e51bd" translate="yes" xml:space="preserve">
          <source>ErrorKind::to_owned</source>
          <target state="translated">ErrorKind::to_owned</target>
        </trans-unit>
        <trans-unit id="98986f9b9bd9e3954b7a7943add6b56199e3f3df" translate="yes" xml:space="preserve">
          <source>ErrorKind::try_from</source>
          <target state="translated">ErrorKind::try_from</target>
        </trans-unit>
        <trans-unit id="031ba76e8fe0a945a726b7f1adc2ce8b8c218311" translate="yes" xml:space="preserve">
          <source>ErrorKind::try_into</source>
          <target state="translated">ErrorKind::try_into</target>
        </trans-unit>
        <trans-unit id="95af2226eb090255473b97cfaed8ae5e62c77771" translate="yes" xml:space="preserve">
          <source>ErrorKind::type_id</source>
          <target state="translated">ErrorKind::type_id</target>
        </trans-unit>
        <trans-unit id="805e86a8cbf628e38e4c45612c005a504009e79a" translate="yes" xml:space="preserve">
          <source>Errors</source>
          <target state="translated">Errors</target>
        </trans-unit>
        <trans-unit id="1ba66ce42361e4649fa32fe22a5ce1fe36634ba9" translate="yes" xml:space="preserve">
          <source>Errors mostly originate from the underlying OS, but custom instances of &lt;code&gt;Error&lt;/code&gt; can be created with crafted error messages and a particular value of &lt;a href=&quot;enum.errorkind&quot;&gt;&lt;code&gt;ErrorKind&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">エラーのほとんどは、基盤となるOSに起因しますが、 &lt;code&gt;Error&lt;/code&gt; カスタムインスタンスは、細工されたエラーメッセージと&lt;a href=&quot;enum.errorkind&quot;&gt; &lt;code&gt;ErrorKind&lt;/code&gt; の&lt;/a&gt;特定の値を使用して作成できます。</target>
        </trans-unit>
        <trans-unit id="21fb05591d3103c9493d6620320e7e405f59ad58" translate="yes" xml:space="preserve">
          <source>Errors that are &lt;code&gt;Other&lt;/code&gt; now may move to a different or a new &lt;a href=&quot;enum.errorkind&quot;&gt;&lt;code&gt;ErrorKind&lt;/code&gt;&lt;/a&gt; variant in the future. It is not recommended to match an error against &lt;code&gt;Other&lt;/code&gt; and to expect any additional characteristics, e.g., a specific &lt;a href=&quot;struct.error#method.raw_os_error&quot;&gt;&lt;code&gt;Error::raw_os_error&lt;/code&gt;&lt;/a&gt; return value.</source>
          <target state="translated">現在 &lt;code&gt;Other&lt;/code&gt; エラーは、将来、別のまたは新しい&lt;a href=&quot;enum.errorkind&quot;&gt; &lt;code&gt;ErrorKind&lt;/code&gt; &lt;/a&gt;バリアントに移動する可能性があります。エラーを &lt;code&gt;Other&lt;/code&gt; と&lt;a href=&quot;struct.error#method.raw_os_error&quot;&gt; &lt;code&gt;Error::raw_os_error&lt;/code&gt; &lt;/a&gt;、特定のError :: raw_os_error戻り値などの追加の特性を期待することはお勧めしません。</target>
        </trans-unit>
        <trans-unit id="617231aeb459776cab6c72fadc2e075debd8f0e1" translate="yes" xml:space="preserve">
          <source>Errors which can occur when attempting to interpret a sequence of &lt;a href=&quot;../primitive.u8&quot;&gt;&lt;code&gt;u8&lt;/code&gt;&lt;/a&gt; as a string.</source>
          <target state="translated">&lt;a href=&quot;../primitive.u8&quot;&gt; &lt;code&gt;u8&lt;/code&gt; の&lt;/a&gt;シーケンスを文字列として解釈しようとしたときに発生する可能性のあるエラー。</target>
        </trans-unit>
        <trans-unit id="572650de1d30fa3946f8dcf507d7dccb6e03cc31" translate="yes" xml:space="preserve">
          <source>EscapeDebug</source>
          <target state="translated">EscapeDebug</target>
        </trans-unit>
        <trans-unit id="f851a971b0b5eadcc642f419fafefaaf9a2db208" translate="yes" xml:space="preserve">
          <source>EscapeDebug::all</source>
          <target state="translated">EscapeDebug::all</target>
        </trans-unit>
        <trans-unit id="4997d045b3bd7ef806841f6131ad4a795c2ff521" translate="yes" xml:space="preserve">
          <source>EscapeDebug::any</source>
          <target state="translated">EscapeDebug::any</target>
        </trans-unit>
        <trans-unit id="31484f8a5d6386bec728800641ae797ce976ba34" translate="yes" xml:space="preserve">
          <source>EscapeDebug::borrow</source>
          <target state="translated">EscapeDebug::borrow</target>
        </trans-unit>
        <trans-unit id="a921027c6ec31ca6851a12e1bc2f7b696b3e3562" translate="yes" xml:space="preserve">
          <source>EscapeDebug::borrow_mut</source>
          <target state="translated">EscapeDebug::borrow_mut</target>
        </trans-unit>
        <trans-unit id="e192c290802349931dddd02e7976ae46c2b06fcd" translate="yes" xml:space="preserve">
          <source>EscapeDebug::by_ref</source>
          <target state="translated">EscapeDebug::by_ref</target>
        </trans-unit>
        <trans-unit id="219eb645dbfe050683f6c5d99becaaf6b5fa5b33" translate="yes" xml:space="preserve">
          <source>EscapeDebug::chain</source>
          <target state="translated">EscapeDebug::chain</target>
        </trans-unit>
        <trans-unit id="84d8c6f7670ac726b4a5999f99987879fe803b8e" translate="yes" xml:space="preserve">
          <source>EscapeDebug::clone</source>
          <target state="translated">EscapeDebug::clone</target>
        </trans-unit>
        <trans-unit id="0fd60e634a08eba48314a085c9523c9136486b07" translate="yes" xml:space="preserve">
          <source>EscapeDebug::clone_from</source>
          <target state="translated">EscapeDebug::clone_from</target>
        </trans-unit>
        <trans-unit id="db0970b68de395fbd83871baec922bd8449441bc" translate="yes" xml:space="preserve">
          <source>EscapeDebug::clone_into</source>
          <target state="translated">EscapeDebug::clone_into</target>
        </trans-unit>
        <trans-unit id="ab9372640426f09e33fcfd0a966dcb6e03a091ef" translate="yes" xml:space="preserve">
          <source>EscapeDebug::cloned</source>
          <target state="translated">EscapeDebug::cloned</target>
        </trans-unit>
        <trans-unit id="69a70889e4201d22630174bf27ed62729904d3d6" translate="yes" xml:space="preserve">
          <source>EscapeDebug::cmp</source>
          <target state="translated">EscapeDebug::cmp</target>
        </trans-unit>
        <trans-unit id="a9708a871e133fbc380631800417f97f2c6c6385" translate="yes" xml:space="preserve">
          <source>EscapeDebug::collect</source>
          <target state="translated">EscapeDebug::collect</target>
        </trans-unit>
        <trans-unit id="90f37428d7eb5762dae339603b70498e7bd12964" translate="yes" xml:space="preserve">
          <source>EscapeDebug::copied</source>
          <target state="translated">EscapeDebug::copied</target>
        </trans-unit>
        <trans-unit id="d63c9499fa360b1b3c6e249081e949cb9b9c63be" translate="yes" xml:space="preserve">
          <source>EscapeDebug::count</source>
          <target state="translated">EscapeDebug::count</target>
        </trans-unit>
        <trans-unit id="6aee966b4dd14f10e887c419eaaf7b8e2eecdcae" translate="yes" xml:space="preserve">
          <source>EscapeDebug::cycle</source>
          <target state="translated">EscapeDebug::cycle</target>
        </trans-unit>
        <trans-unit id="7c567b372fb87e0913a13eee35788b3ea21d6514" translate="yes" xml:space="preserve">
          <source>EscapeDebug::enumerate</source>
          <target state="translated">EscapeDebug::enumerate</target>
        </trans-unit>
        <trans-unit id="37fa311f735d0539ca0789d26cfee80109cd52bd" translate="yes" xml:space="preserve">
          <source>EscapeDebug::eq</source>
          <target state="translated">EscapeDebug::eq</target>
        </trans-unit>
        <trans-unit id="e3f8910289f7163e9e811caea02b821bca1cff9e" translate="yes" xml:space="preserve">
          <source>EscapeDebug::filter</source>
          <target state="translated">EscapeDebug::filter</target>
        </trans-unit>
        <trans-unit id="b9e5de818d4b65261f37b3c95d410b9be1003692" translate="yes" xml:space="preserve">
          <source>EscapeDebug::filter_map</source>
          <target state="translated">EscapeDebug::filter_map</target>
        </trans-unit>
        <trans-unit id="c447df5f56b65fad4a436903c5d379793be60ec1" translate="yes" xml:space="preserve">
          <source>EscapeDebug::find</source>
          <target state="translated">EscapeDebug::find</target>
        </trans-unit>
        <trans-unit id="a16a6792b2eca3506329b7d92286ada08f0d492f" translate="yes" xml:space="preserve">
          <source>EscapeDebug::find_map</source>
          <target state="translated">EscapeDebug::find_map</target>
        </trans-unit>
        <trans-unit id="04c8abe31c6d6a0027d88e78e3830b72ddecd65e" translate="yes" xml:space="preserve">
          <source>EscapeDebug::flat_map</source>
          <target state="translated">EscapeDebug::flat_map</target>
        </trans-unit>
        <trans-unit id="3f953abd99203a2a0745b24ae2ad8775fb635a5c" translate="yes" xml:space="preserve">
          <source>EscapeDebug::flatten</source>
          <target state="translated">EscapeDebug::flatten</target>
        </trans-unit>
        <trans-unit id="322207c662c6b9226bf5fccc68e11cf4cf5f9191" translate="yes" xml:space="preserve">
          <source>EscapeDebug::fmt</source>
          <target state="translated">EscapeDebug::fmt</target>
        </trans-unit>
        <trans-unit id="1a14ffcebcff1935f949f9c61c2a9c31dd2deb7e" translate="yes" xml:space="preserve">
          <source>EscapeDebug::fold</source>
          <target state="translated">EscapeDebug::fold</target>
        </trans-unit>
        <trans-unit id="3fce21febfd27ff9f278db8e2e83bf584dbc60f9" translate="yes" xml:space="preserve">
          <source>EscapeDebug::for_each</source>
          <target state="translated">EscapeDebug::for_each</target>
        </trans-unit>
        <trans-unit id="243e1e23691d93496fd0e7fe8f9754c9fc55f571" translate="yes" xml:space="preserve">
          <source>EscapeDebug::from</source>
          <target state="translated">EscapeDebug::from</target>
        </trans-unit>
        <trans-unit id="99042fa59815fc225a3eb42dd6e2eba0b2c17e42" translate="yes" xml:space="preserve">
          <source>EscapeDebug::fuse</source>
          <target state="translated">EscapeDebug::fuse</target>
        </trans-unit>
        <trans-unit id="7e7452fe6197edf28ac3fb0922355878e2d488a6" translate="yes" xml:space="preserve">
          <source>EscapeDebug::ge</source>
          <target state="translated">EscapeDebug::ge</target>
        </trans-unit>
        <trans-unit id="9ea77d1b90438f759ee8fc21fde6468957ea443c" translate="yes" xml:space="preserve">
          <source>EscapeDebug::gt</source>
          <target state="translated">EscapeDebug::gt</target>
        </trans-unit>
        <trans-unit id="00f182f15fbd77f1b89dc7c9b6e31552c0fffc17" translate="yes" xml:space="preserve">
          <source>EscapeDebug::inspect</source>
          <target state="translated">EscapeDebug::inspect</target>
        </trans-unit>
        <trans-unit id="28f7751aca4d6a080babd7aae46052ffe2acab3b" translate="yes" xml:space="preserve">
          <source>EscapeDebug::into</source>
          <target state="translated">EscapeDebug::into</target>
        </trans-unit>
        <trans-unit id="bf5deee2e1752e2bf92cd46736a37f0130260c5d" translate="yes" xml:space="preserve">
          <source>EscapeDebug::into_iter</source>
          <target state="translated">EscapeDebug::into_iter</target>
        </trans-unit>
        <trans-unit id="54224f110c5f77290b7486385dbc979ce3576c6a" translate="yes" xml:space="preserve">
          <source>EscapeDebug::is_empty</source>
          <target state="translated">EscapeDebug::is_empty</target>
        </trans-unit>
        <trans-unit id="ef17b8ec73a9c37772199b0ac6c6b2babaf12734" translate="yes" xml:space="preserve">
          <source>EscapeDebug::is_sorted</source>
          <target state="translated">EscapeDebug::is_sorted</target>
        </trans-unit>
        <trans-unit id="edb457a92329a54870a49a5ca5748e23586b1d7a" translate="yes" xml:space="preserve">
          <source>EscapeDebug::is_sorted_by</source>
          <target state="translated">EscapeDebug::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="73b7c668beea25c5c4ebe92ccad8550ae772a13e" translate="yes" xml:space="preserve">
          <source>EscapeDebug::is_sorted_by_key</source>
          <target state="translated">EscapeDebug::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="bc64784557d85110ff746d3f97e433ff9a9a9377" translate="yes" xml:space="preserve">
          <source>EscapeDebug::last</source>
          <target state="translated">EscapeDebug::last</target>
        </trans-unit>
        <trans-unit id="ea67597e516e1f459498d455c57e5c471aac1dd5" translate="yes" xml:space="preserve">
          <source>EscapeDebug::le</source>
          <target state="translated">EscapeDebug::le</target>
        </trans-unit>
        <trans-unit id="f34a2cea8231ba9f8ad668c56ece3f675ef00f21" translate="yes" xml:space="preserve">
          <source>EscapeDebug::len</source>
          <target state="translated">EscapeDebug::len</target>
        </trans-unit>
        <trans-unit id="d7c4acc91f20eb30f7b2d320e529538a3e8ac98f" translate="yes" xml:space="preserve">
          <source>EscapeDebug::lt</source>
          <target state="translated">EscapeDebug::lt</target>
        </trans-unit>
        <trans-unit id="7450c0fac7a0a6fce02f82f917fd853e5275365a" translate="yes" xml:space="preserve">
          <source>EscapeDebug::map</source>
          <target state="translated">EscapeDebug::map</target>
        </trans-unit>
        <trans-unit id="27d445546097456d20cb821cb6f04d55acb1a563" translate="yes" xml:space="preserve">
          <source>EscapeDebug::max</source>
          <target state="translated">EscapeDebug::max</target>
        </trans-unit>
        <trans-unit id="0be2e21b673780373384f7d01ca769a8971b4cb5" translate="yes" xml:space="preserve">
          <source>EscapeDebug::max_by</source>
          <target state="translated">EscapeDebug::max_by</target>
        </trans-unit>
        <trans-unit id="edb16f6956009635b34365be87340ab27e2e2eaf" translate="yes" xml:space="preserve">
          <source>EscapeDebug::max_by_key</source>
          <target state="translated">EscapeDebug::max_by_key</target>
        </trans-unit>
        <trans-unit id="9160e222b23449832056c9710a112358b4c05934" translate="yes" xml:space="preserve">
          <source>EscapeDebug::min</source>
          <target state="translated">EscapeDebug::min</target>
        </trans-unit>
        <trans-unit id="b827a8a2c83e22b2f5d3bd2d7ea52b9b1dc3d4b6" translate="yes" xml:space="preserve">
          <source>EscapeDebug::min_by</source>
          <target state="translated">EscapeDebug::min_by</target>
        </trans-unit>
        <trans-unit id="b6e799461b8608ff70f98c23b3333752ef1cc28a" translate="yes" xml:space="preserve">
          <source>EscapeDebug::min_by_key</source>
          <target state="translated">EscapeDebug::min_by_key</target>
        </trans-unit>
        <trans-unit id="f9efd3bfdb62be8a0fcc650ec17ea66ac1101ef9" translate="yes" xml:space="preserve">
          <source>EscapeDebug::ne</source>
          <target state="translated">EscapeDebug::ne</target>
        </trans-unit>
        <trans-unit id="7138466f1ab2c2c66280bb69e817157652fe6ad9" translate="yes" xml:space="preserve">
          <source>EscapeDebug::next</source>
          <target state="translated">EscapeDebug::next</target>
        </trans-unit>
        <trans-unit id="ae8c8b124dc57e7fb6b9592a2ca7608f810fcbc1" translate="yes" xml:space="preserve">
          <source>EscapeDebug::nth</source>
          <target state="translated">EscapeDebug::nth</target>
        </trans-unit>
        <trans-unit id="14bc5438490c227654217f32e03393d380a61bc2" translate="yes" xml:space="preserve">
          <source>EscapeDebug::partial_cmp</source>
          <target state="translated">EscapeDebug::partial_cmp</target>
        </trans-unit>
        <trans-unit id="d0c9c88077a1179c230062db952f6fb6fce028a2" translate="yes" xml:space="preserve">
          <source>EscapeDebug::partition</source>
          <target state="translated">EscapeDebug::partition</target>
        </trans-unit>
        <trans-unit id="fb5691b29734f49107a92e1b1671c090415c3cca" translate="yes" xml:space="preserve">
          <source>EscapeDebug::peekable</source>
          <target state="translated">EscapeDebug::peekable</target>
        </trans-unit>
        <trans-unit id="1af5d4ed909d4d2eff2a2538936a4711810602e0" translate="yes" xml:space="preserve">
          <source>EscapeDebug::position</source>
          <target state="translated">EscapeDebug::position</target>
        </trans-unit>
        <trans-unit id="b7b44b2427d64c5bb9739f39b142e7072c6ef97e" translate="yes" xml:space="preserve">
          <source>EscapeDebug::product</source>
          <target state="translated">EscapeDebug::product</target>
        </trans-unit>
        <trans-unit id="039f46c2dfb06cb23c44dea6f2b929fad9165f14" translate="yes" xml:space="preserve">
          <source>EscapeDebug::rev</source>
          <target state="translated">EscapeDebug::rev</target>
        </trans-unit>
        <trans-unit id="1191b9896fd4031f269c48b0ce266530f88f6d1a" translate="yes" xml:space="preserve">
          <source>EscapeDebug::rposition</source>
          <target state="translated">EscapeDebug::rposition</target>
        </trans-unit>
        <trans-unit id="6438c60e088f96c76919374f08f399bb15d6eecd" translate="yes" xml:space="preserve">
          <source>EscapeDebug::scan</source>
          <target state="translated">EscapeDebug::scan</target>
        </trans-unit>
        <trans-unit id="df517cb62c4bd38809d6f6eefd11361a36305a53" translate="yes" xml:space="preserve">
          <source>EscapeDebug::size_hint</source>
          <target state="translated">EscapeDebug::size_hint</target>
        </trans-unit>
        <trans-unit id="2117c666e235c723952d6c587cac4ff6f2497aa8" translate="yes" xml:space="preserve">
          <source>EscapeDebug::skip</source>
          <target state="translated">EscapeDebug::skip</target>
        </trans-unit>
        <trans-unit id="3a7ff6c86e6035e47972d04d9f03ed94ce5a716d" translate="yes" xml:space="preserve">
          <source>EscapeDebug::skip_while</source>
          <target state="translated">EscapeDebug::skip_while</target>
        </trans-unit>
        <trans-unit id="40fc5601b025d208e66bb737f57d6da06b47ade0" translate="yes" xml:space="preserve">
          <source>EscapeDebug::step_by</source>
          <target state="translated">EscapeDebug::step_by</target>
        </trans-unit>
        <trans-unit id="48b3d1abdb3455603d2d212580461917f3ecb092" translate="yes" xml:space="preserve">
          <source>EscapeDebug::sum</source>
          <target state="translated">EscapeDebug::sum</target>
        </trans-unit>
        <trans-unit id="408dca79de01bcb165d02684cbf1e8eaa7b0694c" translate="yes" xml:space="preserve">
          <source>EscapeDebug::take</source>
          <target state="translated">EscapeDebug::take</target>
        </trans-unit>
        <trans-unit id="bbee152a32ff416e74daec9e3bb2dc2b1e379e81" translate="yes" xml:space="preserve">
          <source>EscapeDebug::take_while</source>
          <target state="translated">EscapeDebug::take_while</target>
        </trans-unit>
        <trans-unit id="349ff6ee944494af4cdd8d0105f154a03a530886" translate="yes" xml:space="preserve">
          <source>EscapeDebug::to_owned</source>
          <target state="translated">EscapeDebug::to_owned</target>
        </trans-unit>
        <trans-unit id="3c49e3a31484dfb37f8a787108ff6927a5fc086c" translate="yes" xml:space="preserve">
          <source>EscapeDebug::to_string</source>
          <target state="translated">EscapeDebug::to_string</target>
        </trans-unit>
        <trans-unit id="7a3982e9d31b237ce98c9ae8b17c962c98262e80" translate="yes" xml:space="preserve">
          <source>EscapeDebug::try_fold</source>
          <target state="translated">EscapeDebug::try_fold</target>
        </trans-unit>
        <trans-unit id="db5587e57b5b91ccf9d0a7f8659a32c17e61d90c" translate="yes" xml:space="preserve">
          <source>EscapeDebug::try_for_each</source>
          <target state="translated">EscapeDebug::try_for_each</target>
        </trans-unit>
        <trans-unit id="87594b3a02da30aa66a7d13db18e0a0a4c9362be" translate="yes" xml:space="preserve">
          <source>EscapeDebug::try_from</source>
          <target state="translated">EscapeDebug::try_from</target>
        </trans-unit>
        <trans-unit id="a815a2f8f27ce9813e30b77cd8859bb40438d811" translate="yes" xml:space="preserve">
          <source>EscapeDebug::try_into</source>
          <target state="translated">EscapeDebug::try_into</target>
        </trans-unit>
        <trans-unit id="1c18a75264b62c832abbe7a772699202f524cb6e" translate="yes" xml:space="preserve">
          <source>EscapeDebug::type_id</source>
          <target state="translated">EscapeDebug::type_id</target>
        </trans-unit>
        <trans-unit id="59d663cd9b027121642ba0a7c0d37654ef30b755" translate="yes" xml:space="preserve">
          <source>EscapeDebug::unzip</source>
          <target state="translated">EscapeDebug::unzip</target>
        </trans-unit>
        <trans-unit id="98a8e7bfd1bda21317c8668982022c90d80cd52e" translate="yes" xml:space="preserve">
          <source>EscapeDebug::zip</source>
          <target state="translated">EscapeDebug::zip</target>
        </trans-unit>
        <trans-unit id="2c49d638507bef6ec508ed1d5a011148b8ab99d6" translate="yes" xml:space="preserve">
          <source>EscapeDefault</source>
          <target state="translated">EscapeDefault</target>
        </trans-unit>
        <trans-unit id="c8d390e0189d165c1ccd94cc5606abda369cda8e" translate="yes" xml:space="preserve">
          <source>EscapeDefault::all</source>
          <target state="translated">EscapeDefault::all</target>
        </trans-unit>
        <trans-unit id="7b1457a363be06394fb7df21484088cab81b23a8" translate="yes" xml:space="preserve">
          <source>EscapeDefault::any</source>
          <target state="translated">EscapeDefault::any</target>
        </trans-unit>
        <trans-unit id="83c226877f88d2d845db6252099a90103d5b95e3" translate="yes" xml:space="preserve">
          <source>EscapeDefault::borrow</source>
          <target state="translated">EscapeDefault::borrow</target>
        </trans-unit>
        <trans-unit id="eab34231135a49263a09f28ecfb83f837488eacf" translate="yes" xml:space="preserve">
          <source>EscapeDefault::borrow_mut</source>
          <target state="translated">EscapeDefault::borrow_mut</target>
        </trans-unit>
        <trans-unit id="d32d5867d95ead458f63044b1b2b70705a54ce25" translate="yes" xml:space="preserve">
          <source>EscapeDefault::by_ref</source>
          <target state="translated">EscapeDefault::by_ref</target>
        </trans-unit>
        <trans-unit id="025c92b9b8008e9036590117da0b3f599c306756" translate="yes" xml:space="preserve">
          <source>EscapeDefault::chain</source>
          <target state="translated">EscapeDefault::chain</target>
        </trans-unit>
        <trans-unit id="ea0c55a5e8aa922150585cabcbd133e1af302fbc" translate="yes" xml:space="preserve">
          <source>EscapeDefault::clone</source>
          <target state="translated">EscapeDefault::clone</target>
        </trans-unit>
        <trans-unit id="5496012109ae1656d11b96bc4ac9d0b3c901205d" translate="yes" xml:space="preserve">
          <source>EscapeDefault::clone_from</source>
          <target state="translated">EscapeDefault::clone_from</target>
        </trans-unit>
        <trans-unit id="3051ba64fc5271d1bd321d7a5f4847d17e0df1d2" translate="yes" xml:space="preserve">
          <source>EscapeDefault::clone_into</source>
          <target state="translated">EscapeDefault::clone_into</target>
        </trans-unit>
        <trans-unit id="49e1b7672f40aae8f6520462e85fc291badefa91" translate="yes" xml:space="preserve">
          <source>EscapeDefault::cloned</source>
          <target state="translated">EscapeDefault::cloned</target>
        </trans-unit>
        <trans-unit id="f08dd9a8a1df13e20a11290f26989bec2f119628" translate="yes" xml:space="preserve">
          <source>EscapeDefault::cmp</source>
          <target state="translated">EscapeDefault::cmp</target>
        </trans-unit>
        <trans-unit id="a4a50b297a8af9075cbefc1a210828bf0ba5f8f4" translate="yes" xml:space="preserve">
          <source>EscapeDefault::collect</source>
          <target state="translated">EscapeDefault::collect</target>
        </trans-unit>
        <trans-unit id="dc41e4599252b0a81a5edcb22fca26b33190b37a" translate="yes" xml:space="preserve">
          <source>EscapeDefault::copied</source>
          <target state="translated">EscapeDefault::copied</target>
        </trans-unit>
        <trans-unit id="8acfbb605a582fd09e9cb50af6ad258424d718e8" translate="yes" xml:space="preserve">
          <source>EscapeDefault::count</source>
          <target state="translated">EscapeDefault::count</target>
        </trans-unit>
        <trans-unit id="59d69646937c92208f7673aa6f0c0dcc854554c5" translate="yes" xml:space="preserve">
          <source>EscapeDefault::cycle</source>
          <target state="translated">EscapeDefault::cycle</target>
        </trans-unit>
        <trans-unit id="2eb59b24aa04a702fb49bb3819c53e9696260fd0" translate="yes" xml:space="preserve">
          <source>EscapeDefault::enumerate</source>
          <target state="translated">EscapeDefault::enumerate</target>
        </trans-unit>
        <trans-unit id="e6623db72fe48cd268932ff83da490c772606ad1" translate="yes" xml:space="preserve">
          <source>EscapeDefault::eq</source>
          <target state="translated">EscapeDefault::eq</target>
        </trans-unit>
        <trans-unit id="bcb06f360163014f78c3db605676a533f14c905f" translate="yes" xml:space="preserve">
          <source>EscapeDefault::filter</source>
          <target state="translated">EscapeDefault::filter</target>
        </trans-unit>
        <trans-unit id="c91216450618d24e538da64ab42926525db6804b" translate="yes" xml:space="preserve">
          <source>EscapeDefault::filter_map</source>
          <target state="translated">EscapeDefault::filter_map</target>
        </trans-unit>
        <trans-unit id="e20a18bd348e3dcd15ef5a7f186e306ffa36c59d" translate="yes" xml:space="preserve">
          <source>EscapeDefault::find</source>
          <target state="translated">EscapeDefault::find</target>
        </trans-unit>
        <trans-unit id="82be58dcaa89bc2d05f77950dd8ce717d19ef45d" translate="yes" xml:space="preserve">
          <source>EscapeDefault::find_map</source>
          <target state="translated">EscapeDefault::find_map</target>
        </trans-unit>
        <trans-unit id="1d3a7cf1d1fbfb00c4e30bffca47db6485d1024f" translate="yes" xml:space="preserve">
          <source>EscapeDefault::flat_map</source>
          <target state="translated">EscapeDefault::flat_map</target>
        </trans-unit>
        <trans-unit id="ec867eee2eb35e4a07424fc4a70317c1dd390e03" translate="yes" xml:space="preserve">
          <source>EscapeDefault::flatten</source>
          <target state="translated">EscapeDefault::flatten</target>
        </trans-unit>
        <trans-unit id="d9d14ab1b7f518b676653447da8fb9f446ae0acf" translate="yes" xml:space="preserve">
          <source>EscapeDefault::fmt</source>
          <target state="translated">EscapeDefault::fmt</target>
        </trans-unit>
        <trans-unit id="bb94f91e350f810886920c60f3f74603d11ba76d" translate="yes" xml:space="preserve">
          <source>EscapeDefault::fold</source>
          <target state="translated">EscapeDefault::fold</target>
        </trans-unit>
        <trans-unit id="9d423ea509871d53af9a21a1ae4c3160432ad799" translate="yes" xml:space="preserve">
          <source>EscapeDefault::for_each</source>
          <target state="translated">EscapeDefault::for_each</target>
        </trans-unit>
        <trans-unit id="644f4ea6ce4dcc1d460b46ddf6a879686e926827" translate="yes" xml:space="preserve">
          <source>EscapeDefault::from</source>
          <target state="translated">EscapeDefault::from</target>
        </trans-unit>
        <trans-unit id="beb4dce1ed14df8f3aff0364e332ed02a1394bbf" translate="yes" xml:space="preserve">
          <source>EscapeDefault::fuse</source>
          <target state="translated">EscapeDefault::fuse</target>
        </trans-unit>
        <trans-unit id="15daf3c83ca40564e0f9f3ff26459dc96c9ac4cf" translate="yes" xml:space="preserve">
          <source>EscapeDefault::ge</source>
          <target state="translated">EscapeDefault::ge</target>
        </trans-unit>
        <trans-unit id="cd98c58dfefc40db78ce2893a09882f16d3442bc" translate="yes" xml:space="preserve">
          <source>EscapeDefault::gt</source>
          <target state="translated">EscapeDefault::gt</target>
        </trans-unit>
        <trans-unit id="eacf8a62c06fa5b47fd7661efc3a643736967905" translate="yes" xml:space="preserve">
          <source>EscapeDefault::inspect</source>
          <target state="translated">EscapeDefault::inspect</target>
        </trans-unit>
        <trans-unit id="222b7c35c7a4ccd57306ad294e6c503eb8aa7681" translate="yes" xml:space="preserve">
          <source>EscapeDefault::into</source>
          <target state="translated">EscapeDefault::into</target>
        </trans-unit>
        <trans-unit id="3eef642ab467d970fa67e2d795dfc529e5ab06b3" translate="yes" xml:space="preserve">
          <source>EscapeDefault::into_iter</source>
          <target state="translated">EscapeDefault::into_iter</target>
        </trans-unit>
        <trans-unit id="989ebe052f7264be5b90e7455f2c22004cfd663a" translate="yes" xml:space="preserve">
          <source>EscapeDefault::is_empty</source>
          <target state="translated">EscapeDefault::is_empty</target>
        </trans-unit>
        <trans-unit id="ace15f7ad05bc5cca2d0d4905e261e764df8adff" translate="yes" xml:space="preserve">
          <source>EscapeDefault::is_sorted</source>
          <target state="translated">EscapeDefault::is_sorted</target>
        </trans-unit>
        <trans-unit id="ddf7c3321bc9afbb92521d92ee4c888303535416" translate="yes" xml:space="preserve">
          <source>EscapeDefault::is_sorted_by</source>
          <target state="translated">EscapeDefault::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="d96cf0d36b39d667b9b3ee756d8579e0289fb904" translate="yes" xml:space="preserve">
          <source>EscapeDefault::is_sorted_by_key</source>
          <target state="translated">EscapeDefault::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="45262fa99b327234791e4fea3ce5f091eff36de4" translate="yes" xml:space="preserve">
          <source>EscapeDefault::last</source>
          <target state="translated">EscapeDefault::last</target>
        </trans-unit>
        <trans-unit id="99d2c3864aed6762dd24c6fc99bbdcb5d81968a1" translate="yes" xml:space="preserve">
          <source>EscapeDefault::le</source>
          <target state="translated">EscapeDefault::le</target>
        </trans-unit>
        <trans-unit id="8b560c65243ccfe78b50d719c08bd53c88470b59" translate="yes" xml:space="preserve">
          <source>EscapeDefault::len</source>
          <target state="translated">EscapeDefault::len</target>
        </trans-unit>
        <trans-unit id="88e2aaac0798d925388638a5ba98a29996b32585" translate="yes" xml:space="preserve">
          <source>EscapeDefault::lt</source>
          <target state="translated">EscapeDefault::lt</target>
        </trans-unit>
        <trans-unit id="e98e35f9f162549d57b27db6061f6cb4b07a64d4" translate="yes" xml:space="preserve">
          <source>EscapeDefault::map</source>
          <target state="translated">EscapeDefault::map</target>
        </trans-unit>
        <trans-unit id="48fabe70e0dd3d46394d877b7e272278324171c8" translate="yes" xml:space="preserve">
          <source>EscapeDefault::max</source>
          <target state="translated">EscapeDefault::max</target>
        </trans-unit>
        <trans-unit id="1f7172bcb9d49b013dad56022f11c7cbe2551b88" translate="yes" xml:space="preserve">
          <source>EscapeDefault::max_by</source>
          <target state="translated">EscapeDefault::max_by</target>
        </trans-unit>
        <trans-unit id="838e895eafcbc8b7e872e447f6f3d78de6bd8002" translate="yes" xml:space="preserve">
          <source>EscapeDefault::max_by_key</source>
          <target state="translated">EscapeDefault::max_by_key</target>
        </trans-unit>
        <trans-unit id="4e048e15b4f03d96a7a8acfe0af747c15b186ce6" translate="yes" xml:space="preserve">
          <source>EscapeDefault::min</source>
          <target state="translated">EscapeDefault::min</target>
        </trans-unit>
        <trans-unit id="7000fbe502be89a90b61b4bb9ecd4ba9b5160c6e" translate="yes" xml:space="preserve">
          <source>EscapeDefault::min_by</source>
          <target state="translated">EscapeDefault::min_by</target>
        </trans-unit>
        <trans-unit id="9b30be3d5f503e371c286382064d5cf8a70e0727" translate="yes" xml:space="preserve">
          <source>EscapeDefault::min_by_key</source>
          <target state="translated">EscapeDefault::min_by_key</target>
        </trans-unit>
        <trans-unit id="93c4143ff3e7141abb0406bcb307cb46d013156d" translate="yes" xml:space="preserve">
          <source>EscapeDefault::ne</source>
          <target state="translated">EscapeDefault::ne</target>
        </trans-unit>
        <trans-unit id="07f794c656dd08220694c812ad1b40ba5de2dfbd" translate="yes" xml:space="preserve">
          <source>EscapeDefault::next</source>
          <target state="translated">EscapeDefault::next</target>
        </trans-unit>
        <trans-unit id="b0b7f105b402375d8d37e94053a7be932e0f5b0b" translate="yes" xml:space="preserve">
          <source>EscapeDefault::next_back</source>
          <target state="translated">EscapeDefault::next_back</target>
        </trans-unit>
        <trans-unit id="f1bc6d43bd50f8f87f8369534f1183ed1d86f6ad" translate="yes" xml:space="preserve">
          <source>EscapeDefault::nth</source>
          <target state="translated">EscapeDefault::nth</target>
        </trans-unit>
        <trans-unit id="48b43205a16a6be089cfd5147f284b564c1c8276" translate="yes" xml:space="preserve">
          <source>EscapeDefault::nth_back</source>
          <target state="translated">EscapeDefault::nth_back</target>
        </trans-unit>
        <trans-unit id="71f2e3e189254ca066415241eb5522da6b526c2b" translate="yes" xml:space="preserve">
          <source>EscapeDefault::partial_cmp</source>
          <target state="translated">EscapeDefault::partial_cmp</target>
        </trans-unit>
        <trans-unit id="d798d68412346bfe3301520c540cb718747e83cb" translate="yes" xml:space="preserve">
          <source>EscapeDefault::partition</source>
          <target state="translated">EscapeDefault::partition</target>
        </trans-unit>
        <trans-unit id="5c0ff15b85cae1835c576432fc41880518ecca65" translate="yes" xml:space="preserve">
          <source>EscapeDefault::peekable</source>
          <target state="translated">EscapeDefault::peekable</target>
        </trans-unit>
        <trans-unit id="739321aafe7186085248dbad4c98b921d3d0b3e1" translate="yes" xml:space="preserve">
          <source>EscapeDefault::position</source>
          <target state="translated">EscapeDefault::position</target>
        </trans-unit>
        <trans-unit id="76475de1a9c8522c4960566ded75947e2651a164" translate="yes" xml:space="preserve">
          <source>EscapeDefault::product</source>
          <target state="translated">EscapeDefault::product</target>
        </trans-unit>
        <trans-unit id="3066fefb8e0879b8529af5d94df2a99b0352340f" translate="yes" xml:space="preserve">
          <source>EscapeDefault::rev</source>
          <target state="translated">EscapeDefault::rev</target>
        </trans-unit>
        <trans-unit id="a95f49409576fc45e4143af3adbe9f86767d07fa" translate="yes" xml:space="preserve">
          <source>EscapeDefault::rfind</source>
          <target state="translated">EscapeDefault::rfind</target>
        </trans-unit>
        <trans-unit id="166f8536d102f8f719fcc59c69b0d91b493b991d" translate="yes" xml:space="preserve">
          <source>EscapeDefault::rfold</source>
          <target state="translated">EscapeDefault::rfold</target>
        </trans-unit>
        <trans-unit id="3c4d30f10da77bc2ac5182818f4097d3db5695d6" translate="yes" xml:space="preserve">
          <source>EscapeDefault::rposition</source>
          <target state="translated">EscapeDefault::rposition</target>
        </trans-unit>
        <trans-unit id="f063501d23242be7fe5f46dee09f94e1fdbc4d49" translate="yes" xml:space="preserve">
          <source>EscapeDefault::scan</source>
          <target state="translated">EscapeDefault::scan</target>
        </trans-unit>
        <trans-unit id="6320b8b7ec506ea3976a15ca62499cfbaf384d01" translate="yes" xml:space="preserve">
          <source>EscapeDefault::size_hint</source>
          <target state="translated">EscapeDefault::size_hint</target>
        </trans-unit>
        <trans-unit id="b59f7fbf1a222c7149d4477c8fe971bb1d2be80e" translate="yes" xml:space="preserve">
          <source>EscapeDefault::skip</source>
          <target state="translated">EscapeDefault::skip</target>
        </trans-unit>
        <trans-unit id="177acb056504c667f56fd0ee42606ebca06a010d" translate="yes" xml:space="preserve">
          <source>EscapeDefault::skip_while</source>
          <target state="translated">EscapeDefault::skip_while</target>
        </trans-unit>
        <trans-unit id="79f56c72865ad082ce8614565ca6a5eac037a250" translate="yes" xml:space="preserve">
          <source>EscapeDefault::step_by</source>
          <target state="translated">EscapeDefault::step_by</target>
        </trans-unit>
        <trans-unit id="8571affcda2aebe685239f5251a13e3c68e47f91" translate="yes" xml:space="preserve">
          <source>EscapeDefault::sum</source>
          <target state="translated">EscapeDefault::sum</target>
        </trans-unit>
        <trans-unit id="83340eb53538865e57c916372718139f49b7960c" translate="yes" xml:space="preserve">
          <source>EscapeDefault::take</source>
          <target state="translated">EscapeDefault::take</target>
        </trans-unit>
        <trans-unit id="a2fba6d2c09a902279ea9aa430f6399b1b3fcd42" translate="yes" xml:space="preserve">
          <source>EscapeDefault::take_while</source>
          <target state="translated">EscapeDefault::take_while</target>
        </trans-unit>
        <trans-unit id="e504d7a0bdee17bfdce6673fd1944e04ac8baa12" translate="yes" xml:space="preserve">
          <source>EscapeDefault::to_owned</source>
          <target state="translated">EscapeDefault::to_owned</target>
        </trans-unit>
        <trans-unit id="c3b16c4c1b036937005924214d8a2f44890ced65" translate="yes" xml:space="preserve">
          <source>EscapeDefault::to_string</source>
          <target state="translated">EscapeDefault::to_string</target>
        </trans-unit>
        <trans-unit id="71696d55ed84461f6a461d08b79a6fc78889ef18" translate="yes" xml:space="preserve">
          <source>EscapeDefault::try_fold</source>
          <target state="translated">EscapeDefault::try_fold</target>
        </trans-unit>
        <trans-unit id="05d01804e2a96603271d21c960ce7f5a78dc37ff" translate="yes" xml:space="preserve">
          <source>EscapeDefault::try_for_each</source>
          <target state="translated">EscapeDefault::try_for_each</target>
        </trans-unit>
        <trans-unit id="f2f553b83de134e1e69387ed70158d31efae709d" translate="yes" xml:space="preserve">
          <source>EscapeDefault::try_from</source>
          <target state="translated">EscapeDefault::try_from</target>
        </trans-unit>
        <trans-unit id="10fe68a047717f619d0ff82c61f904c3de7318a3" translate="yes" xml:space="preserve">
          <source>EscapeDefault::try_into</source>
          <target state="translated">EscapeDefault::try_into</target>
        </trans-unit>
        <trans-unit id="c5fa491666370b5b02acd3d86c8aa8678dfdaf61" translate="yes" xml:space="preserve">
          <source>EscapeDefault::try_rfold</source>
          <target state="translated">EscapeDefault::try_rfold</target>
        </trans-unit>
        <trans-unit id="b16d0c0058e4f545309bddf5e58c40882e88f965" translate="yes" xml:space="preserve">
          <source>EscapeDefault::type_id</source>
          <target state="translated">EscapeDefault::type_id</target>
        </trans-unit>
        <trans-unit id="247220328f780b13ca15fb15c8decbd28a2efffa" translate="yes" xml:space="preserve">
          <source>EscapeDefault::unzip</source>
          <target state="translated">EscapeDefault::unzip</target>
        </trans-unit>
        <trans-unit id="743588f5dc429f9c68efc4cced91ad4503444abd" translate="yes" xml:space="preserve">
          <source>EscapeDefault::zip</source>
          <target state="translated">EscapeDefault::zip</target>
        </trans-unit>
        <trans-unit id="5b08d708ad0d47d75358dca66ce2be2b9aba334f" translate="yes" xml:space="preserve">
          <source>EscapeUnicode</source>
          <target state="translated">EscapeUnicode</target>
        </trans-unit>
        <trans-unit id="338163d429dd7fbe43d129f6850e28f4b455efd9" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::all</source>
          <target state="translated">EscapeUnicode::all</target>
        </trans-unit>
        <trans-unit id="628858297365d4a4438fcfc7dd8d30dc698065d3" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::any</source>
          <target state="translated">EscapeUnicode::any</target>
        </trans-unit>
        <trans-unit id="6d63f08209a6bd9dd015c1a1db8ee6e4e7efe023" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::borrow</source>
          <target state="translated">EscapeUnicode::borrow</target>
        </trans-unit>
        <trans-unit id="78577ac6a9c32a2ecd6dc7eb2f887093a3c44560" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::borrow_mut</source>
          <target state="translated">EscapeUnicode::borrow_mut</target>
        </trans-unit>
        <trans-unit id="26218fa4c966e54951938330aa4730f2fcc4d848" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::by_ref</source>
          <target state="translated">EscapeUnicode::by_ref</target>
        </trans-unit>
        <trans-unit id="70ac0e3a423821d9a024a452d05e9d57234e1b6f" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::chain</source>
          <target state="translated">EscapeUnicode::chain</target>
        </trans-unit>
        <trans-unit id="0afc0d46cff70768dfa196b4242ace28d32629bf" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::clone</source>
          <target state="translated">EscapeUnicode::clone</target>
        </trans-unit>
        <trans-unit id="37f61119789d01c80ccad50f93e42088c149ef2a" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::clone_from</source>
          <target state="translated">EscapeUnicode::clone_from</target>
        </trans-unit>
        <trans-unit id="a69a5a523734b43cae2867c9dcd92980762a188a" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::clone_into</source>
          <target state="translated">EscapeUnicode::clone_into</target>
        </trans-unit>
        <trans-unit id="49213d801e9c16a64cb4d65e9e8cf9cd006d7255" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::cloned</source>
          <target state="translated">EscapeUnicode::cloned</target>
        </trans-unit>
        <trans-unit id="09aed60ade949e3fb8bf9aa8a315bec8f74b6d40" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::cmp</source>
          <target state="translated">EscapeUnicode::cmp</target>
        </trans-unit>
        <trans-unit id="e81e4ebf3847459a7993c1387811d34affb83b5e" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::collect</source>
          <target state="translated">EscapeUnicode::collect</target>
        </trans-unit>
        <trans-unit id="0d3ab602f00f6cd24f6d047879215a868407079c" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::copied</source>
          <target state="translated">EscapeUnicode::copied</target>
        </trans-unit>
        <trans-unit id="1f7e93442912390be7ac37ec6707ddf060fcdcc3" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::count</source>
          <target state="translated">EscapeUnicode::count</target>
        </trans-unit>
        <trans-unit id="c5816fead6895134e7332fd61a4ebbb93edd4c6e" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::cycle</source>
          <target state="translated">EscapeUnicode::cycle</target>
        </trans-unit>
        <trans-unit id="91ebf1a374f53ffe64235dd62d85e7824fdf98fa" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::enumerate</source>
          <target state="translated">EscapeUnicode::enumerate</target>
        </trans-unit>
        <trans-unit id="624c3c4eaa626b53b5f3567a6a0886688bee812c" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::eq</source>
          <target state="translated">EscapeUnicode::eq</target>
        </trans-unit>
        <trans-unit id="1b80627264519a884e250e6abcb99f6a9358c5f4" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::filter</source>
          <target state="translated">EscapeUnicode::filter</target>
        </trans-unit>
        <trans-unit id="6ad3883341432c8fdeca20bec8ed9915dc3e6d9c" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::filter_map</source>
          <target state="translated">EscapeUnicode::filter_map</target>
        </trans-unit>
        <trans-unit id="22af0c82774533dcba3e67943da4985a58b22480" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::find</source>
          <target state="translated">EscapeUnicode::find</target>
        </trans-unit>
        <trans-unit id="8b7a2e416abe07d4d3e4b1477617d8f0e078b759" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::find_map</source>
          <target state="translated">EscapeUnicode::find_map</target>
        </trans-unit>
        <trans-unit id="d0fc0df0f7b1a4cc96b1cd5bfd7fa34c162c3acf" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::flat_map</source>
          <target state="translated">EscapeUnicode::flat_map</target>
        </trans-unit>
        <trans-unit id="e713c66cee1265d7cc9554df7c5e68c1e0c767c2" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::flatten</source>
          <target state="translated">EscapeUnicode::flatten</target>
        </trans-unit>
        <trans-unit id="0caddef2e4978f256b08382e18fec43ab463bdf9" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::fmt</source>
          <target state="translated">EscapeUnicode::fmt</target>
        </trans-unit>
        <trans-unit id="fcef23622002269e5beec9379be0569d62d28f1e" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::fold</source>
          <target state="translated">EscapeUnicode::fold</target>
        </trans-unit>
        <trans-unit id="b84872daa6e6195ef4e504f3bd9bd2d6978c769b" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::for_each</source>
          <target state="translated">EscapeUnicode::for_each</target>
        </trans-unit>
        <trans-unit id="1e1ff72b5bb8e76fbe07dd5ba80db36e47e71953" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::from</source>
          <target state="translated">EscapeUnicode::from</target>
        </trans-unit>
        <trans-unit id="00f439e23aadac9efce5955c7043b1d335e59147" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::fuse</source>
          <target state="translated">EscapeUnicode::fuse</target>
        </trans-unit>
        <trans-unit id="c1cd1e99c3b3323e2b471e91ee347505c6c7368c" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::ge</source>
          <target state="translated">EscapeUnicode::ge</target>
        </trans-unit>
        <trans-unit id="ea93c1c8610d8fca3701b3bc68fdc287fe6583a1" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::gt</source>
          <target state="translated">EscapeUnicode::gt</target>
        </trans-unit>
        <trans-unit id="fb6e744c73c6dec1c915a3ccb8df927dbcdac63e" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::inspect</source>
          <target state="translated">EscapeUnicode::inspect</target>
        </trans-unit>
        <trans-unit id="04a6919af5c13d6a42719ded258f92f22357619e" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::into</source>
          <target state="translated">EscapeUnicode::into</target>
        </trans-unit>
        <trans-unit id="0e571730ac10c717da86bccd36b90ffb3c7a01a3" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::into_iter</source>
          <target state="translated">EscapeUnicode::into_iter</target>
        </trans-unit>
        <trans-unit id="0a0560ff6ccd04bbc6587a17959ae7a43e873b29" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::is_empty</source>
          <target state="translated">EscapeUnicode::is_empty</target>
        </trans-unit>
        <trans-unit id="fb2fe92538e6e612d15c82977d24ceaf3392d54a" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::is_sorted</source>
          <target state="translated">EscapeUnicode::is_sorted</target>
        </trans-unit>
        <trans-unit id="56783676cf0c414af8ea0201e21204493dcbbb61" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::is_sorted_by</source>
          <target state="translated">EscapeUnicode::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="82c350920bf2841c71b78a8cc46f3960f2c60737" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::is_sorted_by_key</source>
          <target state="translated">EscapeUnicode::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="73eb9337b1ba515cef881d025db8cfb9a38db48b" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::last</source>
          <target state="translated">EscapeUnicode::last</target>
        </trans-unit>
        <trans-unit id="0003e23acbc637a64c8355649e271719969c41c3" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::le</source>
          <target state="translated">EscapeUnicode::le</target>
        </trans-unit>
        <trans-unit id="257347191a0fac0135af121b7d5fed9af19c5790" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::len</source>
          <target state="translated">EscapeUnicode::len</target>
        </trans-unit>
        <trans-unit id="0c0366d1822da413e57fa9b0093dc17d9dcfa841" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::lt</source>
          <target state="translated">EscapeUnicode::lt</target>
        </trans-unit>
        <trans-unit id="a9241fdd65a99b328e6ea7b4ddcbea38168f8179" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::map</source>
          <target state="translated">EscapeUnicode::map</target>
        </trans-unit>
        <trans-unit id="dc4a3e1eb5ac1e75b4ddb5fcd83a64e505ed4b4e" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::max</source>
          <target state="translated">EscapeUnicode::max</target>
        </trans-unit>
        <trans-unit id="130bf86fe6249b7265d9d38e830de9c52ca3ee5b" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::max_by</source>
          <target state="translated">EscapeUnicode::max_by</target>
        </trans-unit>
        <trans-unit id="46c7b290210cd1e69a1849bfe78d0a563883e983" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::max_by_key</source>
          <target state="translated">EscapeUnicode::max_by_key</target>
        </trans-unit>
        <trans-unit id="920545ee8bea9174479acb1461ae0d24605ec09b" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::min</source>
          <target state="translated">EscapeUnicode::min</target>
        </trans-unit>
        <trans-unit id="110b77ebf9dead9287b5903d1a2154a4259c30d1" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::min_by</source>
          <target state="translated">EscapeUnicode::min_by</target>
        </trans-unit>
        <trans-unit id="f2c43efcdcfbfa14b7a093249b972405956abd53" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::min_by_key</source>
          <target state="translated">EscapeUnicode::min_by_key</target>
        </trans-unit>
        <trans-unit id="3f0d1b302c4945cd77ac97b42b24b796bedeb1e3" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::ne</source>
          <target state="translated">EscapeUnicode::ne</target>
        </trans-unit>
        <trans-unit id="df3d1eb95accf7f741ace476517450fb4dba748d" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::next</source>
          <target state="translated">EscapeUnicode::next</target>
        </trans-unit>
        <trans-unit id="a3acbed68464123dcb4c275bca03968d93b3e671" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::nth</source>
          <target state="translated">EscapeUnicode::nth</target>
        </trans-unit>
        <trans-unit id="642fa545e023f6277acba6e430850c845c7d4003" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::partial_cmp</source>
          <target state="translated">EscapeUnicode::partial_cmp</target>
        </trans-unit>
        <trans-unit id="bc7bdea70b7fcde08556b6c8e91335e1ad5eaa9e" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::partition</source>
          <target state="translated">EscapeUnicode::partition</target>
        </trans-unit>
        <trans-unit id="6665ad27e3148710cb4e4fb562fc4ec4db1c47fb" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::peekable</source>
          <target state="translated">EscapeUnicode::peekable</target>
        </trans-unit>
        <trans-unit id="6f8fcc8c70cc7592ca8eaf2b54b9e2ad6eb50b2d" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::position</source>
          <target state="translated">EscapeUnicode::position</target>
        </trans-unit>
        <trans-unit id="4d2fb0cb516e823012d3cb29401298553fa89b16" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::product</source>
          <target state="translated">EscapeUnicode::product</target>
        </trans-unit>
        <trans-unit id="303570e879b1f6e790aaa3671f13e9fe7a626010" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::rev</source>
          <target state="translated">EscapeUnicode::rev</target>
        </trans-unit>
        <trans-unit id="0c8213cad840a995661998ea79bdc9dd67ad5163" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::rposition</source>
          <target state="translated">EscapeUnicode::rposition</target>
        </trans-unit>
        <trans-unit id="e0ae3f548940995a9b9ad36014afc4f6eb030555" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::scan</source>
          <target state="translated">EscapeUnicode::scan</target>
        </trans-unit>
        <trans-unit id="7a61e7c2e293a853a6c95c255171c877e9c89185" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::size_hint</source>
          <target state="translated">EscapeUnicode::size_hint</target>
        </trans-unit>
        <trans-unit id="90012f3506f0e7514a7ee8681a74ca203cc2725f" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::skip</source>
          <target state="translated">EscapeUnicode::skip</target>
        </trans-unit>
        <trans-unit id="e9dadfa112cc4b631f57be703d4fce65b9640b92" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::skip_while</source>
          <target state="translated">EscapeUnicode::skip_while</target>
        </trans-unit>
        <trans-unit id="c9739decdfa52577bf97064b6a35f26103da22bd" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::step_by</source>
          <target state="translated">EscapeUnicode::step_by</target>
        </trans-unit>
        <trans-unit id="1ab839dc8dec9b3051d8d0f3c1c2bea92372898e" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::sum</source>
          <target state="translated">EscapeUnicode::sum</target>
        </trans-unit>
        <trans-unit id="894b4b1223d7aabca2df42e4e23d7469b01e534b" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::take</source>
          <target state="translated">EscapeUnicode::take</target>
        </trans-unit>
        <trans-unit id="50095ec963d926ad273ce8f7680857fdc6d99883" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::take_while</source>
          <target state="translated">EscapeUnicode::take_while</target>
        </trans-unit>
        <trans-unit id="89951cb4016665275a1f0c79d63c3a41d48b9bbc" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::to_owned</source>
          <target state="translated">EscapeUnicode::to_owned</target>
        </trans-unit>
        <trans-unit id="9c010d42b1b68dd68e35100205cc6b9b13b87ceb" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::to_string</source>
          <target state="translated">EscapeUnicode::to_string</target>
        </trans-unit>
        <trans-unit id="2a2492f0b69674651dcf41e24aca83b747264abb" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::try_fold</source>
          <target state="translated">EscapeUnicode::try_fold</target>
        </trans-unit>
        <trans-unit id="abdbdf8e5fdbc93bccdba1f8f4b3d554e0588d03" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::try_for_each</source>
          <target state="translated">EscapeUnicode::try_for_each</target>
        </trans-unit>
        <trans-unit id="499fc66c5b31571d53103934f102bd44ecc45003" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::try_from</source>
          <target state="translated">EscapeUnicode::try_from</target>
        </trans-unit>
        <trans-unit id="7c689d351d4d6b0dd069f827dafcd20d09391602" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::try_into</source>
          <target state="translated">EscapeUnicode::try_into</target>
        </trans-unit>
        <trans-unit id="ca5591fdf66699030e3f72b363a9b43416735ad7" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::type_id</source>
          <target state="translated">EscapeUnicode::type_id</target>
        </trans-unit>
        <trans-unit id="e8a0c661607f4a50cd01e13dc6f5a9fa5b042bb1" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::unzip</source>
          <target state="translated">EscapeUnicode::unzip</target>
        </trans-unit>
        <trans-unit id="8d40fc69a25f77fbcf7dc2e7f43271b1e57cfd55" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::zip</source>
          <target state="translated">EscapeUnicode::zip</target>
        </trans-unit>
        <trans-unit id="a93a4e0ef80150a1a033177365048c386c52720b" translate="yes" xml:space="preserve">
          <source>Escapes</source>
          <target state="translated">Escapes</target>
        </trans-unit>
        <trans-unit id="2779ea444cb47200f1b0085d04662b33c09fc23f" translate="yes" xml:space="preserve">
          <source>Escaping</source>
          <target state="translated">Escaping</target>
        </trans-unit>
        <trans-unit id="4c2c45d27a40b2998f04b13b9d7872a526ef8792" translate="yes" xml:space="preserve">
          <source>Esperanto</source>
          <target state="translated">Esperanto</target>
        </trans-unit>
        <trans-unit id="768321cc50f5d114bfad1c578f68791ccf6e88fb" translate="yes" xml:space="preserve">
          <source>Euler's number (e)</source>
          <target state="translated">オイラー数</target>
        </trans-unit>
        <trans-unit id="667c792fff743e0aaa0a670a8c0ee0b95ee8d357" translate="yes" xml:space="preserve">
          <source>Evaluate &lt;code&gt;&amp;lt;expr&amp;gt;&lt;/code&gt; to a &lt;a href=&quot;../../std/future/trait.future&quot;&gt;future&lt;/a&gt;&lt;code&gt;tmp&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;&amp;lt;expr&amp;gt;&lt;/code&gt; を&lt;a href=&quot;../../std/future/trait.future&quot;&gt;将来の&lt;/a&gt; &lt;code&gt;tmp&lt;/code&gt; に評価します;</target>
        </trans-unit>
        <trans-unit id="31cbd333cae389613a7fb2ed2211d9e0c3b3f093" translate="yes" xml:space="preserve">
          <source>Evaluate a block if a condition holds.</source>
          <target state="translated">条件が成立している場合は、ブロックを評価します。</target>
        </trans-unit>
        <trans-unit id="a44f082e00d0add30a3696eec24a505adfd8f6c0" translate="yes" xml:space="preserve">
          <source>Evaluates boolean combinations of configuration flags at compile-time.</source>
          <target state="translated">コンパイル時に設定フラグのブール値の組み合わせを評価します。</target>
        </trans-unit>
        <trans-unit id="4d9da6da0ea8c2a843cd3b868ef90237e224509e" translate="yes" xml:space="preserve">
          <source>Evaluating an assignment expression &lt;a href=&quot;../destructors&quot;&gt;drops&lt;/a&gt; the left-hand operand, unless it's an uninitialized local variable or field of a local variable, and &lt;a href=&quot;../expressions#moved-and-copied-types&quot;&gt;either copies or moves&lt;/a&gt; its right-hand operand to its left-hand operand. The left-hand operand must be a place expression: using a value expression results in a compiler error, rather than promoting it to a temporary.</source>
          <target state="translated">割り当て式を評価すると、初期化されていないローカル変数またはローカル変数のフィールドでない限り、左側のオペランドが&lt;a href=&quot;../destructors&quot;&gt;削除され&lt;/a&gt;、右側のオペランドが左側のオペランドに&lt;a href=&quot;../expressions#moved-and-copied-types&quot;&gt;コピーまたは移動され&lt;/a&gt;ます。左側のオペランドは場所式でなければなりません。値式を使用すると、一時式に昇格されるのではなく、コンパイラエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="8ee0ecdb4fa4e379f7068e7406054da1ee3b3dcc" translate="yes" xml:space="preserve">
          <source>Even after we&amp;rsquo;ve called &lt;code&gt;add_text&lt;/code&gt; and added some content to our post, we still want the &lt;code&gt;content&lt;/code&gt; method to return an empty string slice because the post is still in the draft state, as shown on line 7 of Listing 17-11. For now, let&amp;rsquo;s implement the &lt;code&gt;content&lt;/code&gt; method with the simplest thing that will fulfill this requirement: always returning an empty string slice. We&amp;rsquo;ll change this later once we implement the ability to change a post&amp;rsquo;s state so it can be published. So far, posts can only be in the draft state, so the post content should always be empty. Listing 17-14 shows this placeholder implementation:</source>
          <target state="translated">&lt;code&gt;add_text&lt;/code&gt; を呼び出してコンテンツを投稿に追加した後でも、リスト17-11の7行目に示すように、投稿はまだドラフト状態であるため、 &lt;code&gt;content&lt;/code&gt; メソッドは空の文字列スライスを返します。とりあえず、この要件を満たす最も単純なもの、つまり常に空の文字列スライスを返す &lt;code&gt;content&lt;/code&gt; メソッドを実装してみましょう。投稿の状態を変更して公開できるようにする機能を実装したら、後でこれを変更します。これまでのところ、投稿は下書き状態でなければならないため、投稿のコンテンツは常に空である必要があります。リスト17-14はこのプレースホルダーの実装を示しています：</target>
        </trans-unit>
        <trans-unit id="37d0141ea9c61ae4a6562b3cf98eab7edd31ea09" translate="yes" xml:space="preserve">
          <source>Even if we remove the implementation of &lt;code&gt;Drop&lt;/code&gt; for &lt;code&gt;HasTwoDrop&lt;/code&gt;, the destructors of its fields are still called. This would result in</source>
          <target state="translated">我々はの実装削除しても &lt;code&gt;Drop&lt;/code&gt; のため &lt;code&gt;HasTwoDrop&lt;/code&gt; を、そのフィールドのデストラクタが、まだ呼ばれています。これにより、</target>
        </trans-unit>
        <trans-unit id="ab173ff29f7b7004702d67804fc33628bc12a45e" translate="yes" xml:space="preserve">
          <source>Even if you&amp;rsquo;ve chosen a unique name, when you run &lt;code&gt;cargo publish&lt;/code&gt; to publish the crate at this point, you&amp;rsquo;ll get a warning and then an error:</source>
          <target state="translated">一意の名前を選択した場合でも、 &lt;code&gt;cargo publish&lt;/code&gt; を実行してこの時点でクレートを発行すると、警告が表示されてからエラーが表示されます。</target>
        </trans-unit>
        <trans-unit id="6ec55377ca5df23ef0219d7b6e615849e8e678c8" translate="yes" xml:space="preserve">
          <source>Even though &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; is a single token (&lt;a href=&quot;#lazy-boolean-operators&quot;&gt;the lazy 'and' operator&lt;/a&gt;), when used in the context of borrow expressions it works as two borrows:</source>
          <target state="translated">にもかかわらず &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; （単一のトークンで&lt;a href=&quot;#lazy-boolean-operators&quot;&gt;怠惰な「と」演算子&lt;/a&gt;、2つ借りとして働く借り式のコンテキストで使用する場合、）：</target>
        </trans-unit>
        <trans-unit id="420077d5f09a0ce345e8fa51720467e57996c78f" translate="yes" xml:space="preserve">
          <source>Even though &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; is a single token (&lt;a href=&quot;operator-expr#lazy-boolean-operators&quot;&gt;the lazy 'and' operator&lt;/a&gt;), when used in the context of borrow expressions it works as two borrows:</source>
          <target state="translated">にもかかわらず &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; （単一のトークンで&lt;a href=&quot;operator-expr#lazy-boolean-operators&quot;&gt;怠惰な「と」演算子&lt;/a&gt;、2つ借りとして働く借り式のコンテキストで使用する場合、）：</target>
        </trans-unit>
        <trans-unit id="035cb7335b9071630d76a6cac22f3690d8a901ec" translate="yes" xml:space="preserve">
          <source>Even though &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; has the same representation and C ABI as a C pointer, this does not mean that you can convert an arbitrary &lt;code&gt;T*&lt;/code&gt; into a &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; and expect things to work. &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; values will always be fully aligned, non-null pointers. Moreover, the destructor for &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; will attempt to free the value with the global allocator. In general, the best practice is to only use &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; for pointers that originated from the global allocator.</source>
          <target state="translated">にもかかわらず &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; Cのポインタと同じ表現とC ABIを持っている、これはあなたが任意に変換できることを意味するものではありません &lt;code&gt;T*&lt;/code&gt; に &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; と仕事に物事を期待しています。 &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; 値は常に完全に整列され、null以外のポインターになります。さらに、 &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; デストラクタは、グローバルアロケータを使用して値を解放しようとします。一般に、ベストプラクティスは、グローバルアロケータから発信されたポインタにのみ &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; を使用することです。</target>
        </trans-unit>
        <trans-unit id="91ee5e90d74ce606b0229131c8cc64d6f3ee06e7" translate="yes" xml:space="preserve">
          <source>Even though &lt;code&gt;is_null()&lt;/code&gt; exists as a method on any raw pointer, Rust shows this error because Rust allows for &lt;code&gt;self&lt;/code&gt; to have arbitrary types (behind the arbitrary_self_types feature flag).</source>
          <target state="translated">にもかかわらず &lt;code&gt;is_null()&lt;/code&gt; 、任意の生のポインタのメソッドとして存在するために錆ができるため、錆がこのエラーを示す &lt;code&gt;self&lt;/code&gt; 任意のタイプ（arbitrary_self_types後ろフラグを特色）を有します。</target>
        </trans-unit>
        <trans-unit id="8c186a95c8257fdcb7a8df67d4c166687bcdf7e1" translate="yes" xml:space="preserve">
          <source>Even though Listing 5-8 works and figures out the area of the rectangle by calling the &lt;code&gt;area&lt;/code&gt; function with each dimension, we can do better. The width and the height are related to each other because together they describe one rectangle.</source>
          <target state="translated">リスト5-8は機能し、各次元で &lt;code&gt;area&lt;/code&gt; 関数を呼び出すことによって長方形の領域を計算しますが、より良い方法があります。幅と高さは、1つの四角形を表すため、互いに関連しています。</target>
        </trans-unit>
        <trans-unit id="eb06d2c8b3d18e861072fe22916749403b015e47" translate="yes" xml:space="preserve">
          <source>Even though borrowing errors may be frustrating at times, remember that it&amp;rsquo;s the Rust compiler pointing out a potential bug early (at compile time rather than at runtime) and showing you exactly where the problem is. Then you don&amp;rsquo;t have to track down why your data isn&amp;rsquo;t what you thought it was.</source>
          <target state="translated">借用エラーは時々イライラするかもしれませんが、それはRustコンパイラが潜在的なバグを早期に（実行時ではなくコンパイル時に）指摘し、問題がどこにあるかを正確に示すことを覚えておいてください。そうすれば、データが思ったとおりではない理由を突き止める必要はありません。</target>
        </trans-unit>
        <trans-unit id="8ee3f464e87cacd50ef37867b4262b1a2c8adac6" translate="yes" xml:space="preserve">
          <source>Even though the &lt;code&gt;hello_cargo&lt;/code&gt; project is simple, it now uses much of the real tooling you&amp;rsquo;ll use in the rest of your Rust career. In fact, to work on any existing projects, you can use the following commands to check out the code using Git, change to that project&amp;rsquo;s directory, and build:</source>
          <target state="translated">にもかかわらず &lt;code&gt;hello_cargo&lt;/code&gt; のプロジェクトは簡単ですが、それは今、あなたの錆のキャリアの残りの部分で使用します実際のツールの多くを使用しています。実際、既存のプロジェクトで作業するには、次のコマンドを使用して、Gitを使用してコードをチェックアウトし、そのプロジェクトのディレクトリに変更してビルドできます。</target>
        </trans-unit>
        <trans-unit id="c8a4a7fb26f3188e28a4219c11d55ad8831cf7cd" translate="yes" xml:space="preserve">
          <source>Even though we&amp;rsquo;re no longer defining the &lt;code&gt;summarize&lt;/code&gt; method on &lt;code&gt;NewsArticle&lt;/code&gt; directly, we&amp;rsquo;ve provided a default implementation and specified that &lt;code&gt;NewsArticle&lt;/code&gt; implements the &lt;code&gt;Summary&lt;/code&gt; trait. As a result, we can still call the &lt;code&gt;summarize&lt;/code&gt; method on an instance of &lt;code&gt;NewsArticle&lt;/code&gt;, like this:</source>
          <target state="translated">私たちはもはや定義しているにもかかわらず &lt;code&gt;summarize&lt;/code&gt; の方法 &lt;code&gt;NewsArticle&lt;/code&gt; を直接、我々は、デフォルトの実装を提供していないとことを指定した &lt;code&gt;NewsArticle&lt;/code&gt; が実装 &lt;code&gt;Summary&lt;/code&gt; 形質を。その結果、我々はまだ呼び出すことができ &lt;code&gt;summarize&lt;/code&gt; のインスタンスでメソッドを &lt;code&gt;NewsArticle&lt;/code&gt; このように、：</target>
        </trans-unit>
        <trans-unit id="fbb0e8f1a58e917e841b10b78e92da6dc706ef76" translate="yes" xml:space="preserve">
          <source>Every &lt;code&gt;break&lt;/code&gt; in a loop has to have the same type. When it's not explicitly giving something, &lt;code&gt;break;&lt;/code&gt; returns &lt;code&gt;()&lt;/code&gt;.</source>
          <target state="translated">ループ内のすべての &lt;code&gt;break&lt;/code&gt; は同じタイプでなければなりません。それが明示的に何かを与えていないときは、 &lt;code&gt;break;&lt;/code&gt; &lt;code&gt;()&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="bc778fc30ee752a7d4f4f19d38c17a4680a1a896" translate="yes" xml:space="preserve">
          <source>Every associated item kind comes in two varieties: definitions that contain the actual implementation and declarations that declare signatures for definitions.</source>
          <target state="translated">すべての関連するアイテムの種類には、実際の実装を含む定義と、定義のシグネチャを宣言する宣言の2種類があります。</target>
        </trans-unit>
        <trans-unit id="223636711bd916c83b0c1c1d50bb03c43f02e7d8" translate="yes" xml:space="preserve">
          <source>Every binding in each &lt;code&gt;|&lt;/code&gt; separated pattern must appear in all of the patterns in the arm. Every binding of the same name must have the same type, and have the same binding mode.</source>
          <target state="translated">それぞれのすべてのバインディング &lt;code&gt;|&lt;/code&gt; 分離されたパターンは、腕のすべてのパターンに現れる必要があります。同じ名前のバインディングはすべて同じタイプで、同じバインディングモードでなければなりません。</target>
        </trans-unit>
        <trans-unit id="f737446eafc5a17a8ec946c9c5af55ffd56f7fc6" translate="yes" xml:space="preserve">
          <source>Every programming language has tools for effectively handling the duplication of concepts. In Rust, one such tool is &lt;em&gt;generics&lt;/em&gt;. Generics are abstract stand-ins for concrete types or other properties. When we&amp;rsquo;re writing code, we can express the behavior of generics or how they relate to other generics without knowing what will be in their place when compiling and running the code.</source>
          <target state="translated">すべてのプログラミング言語には、概念の重複を効果的に処理するためのツールがあります。Rustでは、そのようなツールの1つが&lt;em&gt;ジェネリック&lt;/em&gt;です。ジェネリックスは、具象タイプまたはその他のプロパティの抽象的な代役です。コードを記述しているときは、コードをコンパイルして実行するときに何が配置されるかがわからなくても、ジェネリックの動作や他のジェネリックとの関係を表現できます。</target>
        </trans-unit>
        <trans-unit id="a4e5ea4250d5e82010eb406e2a4f6595cd8eb17e" translate="yes" xml:space="preserve">
          <source>Every reference to a value of the type &lt;code&gt;T&lt;/code&gt; must be a multiple of this number.</source>
          <target state="translated">タイプ &lt;code&gt;T&lt;/code&gt; の値へのすべての参照は、この数の倍数でなければなりません。</target>
        </trans-unit>
        <trans-unit id="b2b297070b39157818fb52cce13340b22664a05d" translate="yes" xml:space="preserve">
          <source>Every six weeks, it&amp;rsquo;s time to prepare a new release! The &lt;code&gt;beta&lt;/code&gt; branch of the Rust repository branches off from the &lt;code&gt;master&lt;/code&gt; branch used by nightly. Now, there are two releases:</source>
          <target state="translated">6週間ごとに、新しいリリースを準備するときです。Rustリポジトリの &lt;code&gt;beta&lt;/code&gt; ブランチは、夜間に使用される &lt;code&gt;master&lt;/code&gt; ブランチから分岐します。現在、2つのリリースがあります。</target>
        </trans-unit>
        <trans-unit id="6b368f07214c45db61fd3d58dd74504e2a16a0b1" translate="yes" xml:space="preserve">
          <source>Every thread is equipped with some basic low-level blocking support, via the &lt;a href=&quot;fn.park&quot;&gt;&lt;code&gt;park&lt;/code&gt;&lt;/a&gt; function and the &lt;code&gt;unpark()&lt;/code&gt; method. These can be used as a more CPU-efficient implementation of a spinlock.</source>
          <target state="translated">すべてのスレッドは、&lt;a href=&quot;fn.park&quot;&gt; &lt;code&gt;park&lt;/code&gt; &lt;/a&gt;関数と &lt;code&gt;unpark()&lt;/code&gt; メソッドを介して、いくつかの基本的な低レベルのブロッキングサポートを備えています。これらは、スピンロックのよりCPU効率の高い実装として使用できます。</target>
        </trans-unit>
        <trans-unit id="a3fd2a9561db500bb9d0da237c1cbe58bde7a76a" translate="yes" xml:space="preserve">
          <source>Every thread is equipped with some basic low-level blocking support, via the &lt;a href=&quot;fn.park&quot;&gt;&lt;code&gt;thread::park&lt;/code&gt;&lt;/a&gt; function and &lt;a href=&quot;struct.thread#method.unpark&quot;&gt;&lt;code&gt;thread::Thread::unpark&lt;/code&gt;&lt;/a&gt; method. &lt;a href=&quot;fn.park&quot;&gt;&lt;code&gt;park&lt;/code&gt;&lt;/a&gt; blocks the current thread, which can then be resumed from another thread by calling the &lt;a href=&quot;struct.thread#method.unpark&quot;&gt;&lt;code&gt;unpark&lt;/code&gt;&lt;/a&gt; method on the blocked thread's handle.</source>
          <target state="translated">すべてのスレッドは、&lt;a href=&quot;fn.park&quot;&gt; &lt;code&gt;thread::park&lt;/code&gt; &lt;/a&gt;関数と&lt;a href=&quot;struct.thread#method.unpark&quot;&gt; &lt;code&gt;thread::Thread::unpark&lt;/code&gt; &lt;/a&gt;メソッドを介して、いくつかの基本的な低レベルのブロッキングサポートを備えています。&lt;a href=&quot;fn.park&quot;&gt; &lt;code&gt;park&lt;/code&gt; &lt;/a&gt;は現在のスレッドをブロックし、ブロックされたスレッドのハンドルで&lt;a href=&quot;struct.thread#method.unpark&quot;&gt; &lt;code&gt;unpark&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことにより、別のスレッドから再開できます。</target>
        </trans-unit>
        <trans-unit id="b2e699d3d67c0cff58c1aa9e18f48ce00d748e2e" translate="yes" xml:space="preserve">
          <source>Every two or three years, the Rust team produces a new Rust &lt;em&gt;edition&lt;/em&gt;. Each edition brings together the features that have landed into a clear package with fully updated documentation and tooling. New editions ship as part of the usual six-week release process.</source>
          <target state="translated">Rustチームは2〜3年ごとに新しいRust &lt;em&gt;エディションを作成し&lt;/em&gt;ます。各エディションには、完全に更新されたドキュメントとツールを備えた明確なパッケージに含まれる機能がまとめられています。新しいエディションは、通常の6週間のリリースプロセスの一部として出荷されます。</target>
        </trans-unit>
        <trans-unit id="53b902771046989665a92604fb9ab46703388afa" translate="yes" xml:space="preserve">
          <source>Every value in Rust is of a certain &lt;em&gt;data type&lt;/em&gt;, which tells Rust what kind of data is being specified so it knows how to work with that data. We&amp;rsquo;ll look at two data type subsets: scalar and compound.</source>
          <target state="translated">Rustのすべての値は特定の&lt;em&gt;データ型&lt;/em&gt;であり、指定されているデータの種類をRustに伝え、そのデータの操作方法を認識します。2つのデータ型のサブセット（スカラーと複合）を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="c0bb7784cb1f387d176d36590603da6e68c6346f" translate="yes" xml:space="preserve">
          <source>Every variable, item and value in a Rust program has a type. The &lt;em&gt;type&lt;/em&gt; of a &lt;em&gt;value&lt;/em&gt; defines the interpretation of the memory holding it and the operations that may be performed on the value.</source>
          <target state="translated">Rustプログラムのすべての変数、項目、値にはタイプがあります。&lt;em&gt;値&lt;/em&gt;の&lt;em&gt;タイプ&lt;/em&gt;は、&lt;em&gt;値&lt;/em&gt;を保持しているメモリの解釈と、値に対して実行できる操作を定義します。</target>
        </trans-unit>
        <trans-unit id="a7ba8dc4d2e8318330c227618f02b6a3d6a485d1" translate="yes" xml:space="preserve">
          <source>Every variable, item, and value in a Rust program has a type. The &lt;em&gt;type&lt;/em&gt; of a &lt;em&gt;value&lt;/em&gt; defines the interpretation of the memory holding it and the operations that may be performed on the value.</source>
          <target state="translated">Rustプログラムのすべての変数、項目、および値には型があります。&lt;em&gt;値&lt;/em&gt;の&lt;em&gt;タイプ&lt;/em&gt;は、&lt;em&gt;値&lt;/em&gt;を保持するメモリの解釈と、値に対して実行される可能性のある操作を定義します。</target>
        </trans-unit>
        <trans-unit id="e5d0186e8728baeab6c41facdf93f768a88a492b" translate="yes" xml:space="preserve">
          <source>Everything possible with &lt;code&gt;Copy&lt;/code&gt; you can also accomplish with &lt;code&gt;Clone&lt;/code&gt;, but the code might be slower or have to use &lt;code&gt;clone&lt;/code&gt; in places.</source>
          <target state="translated">&lt;code&gt;Copy&lt;/code&gt; で可能なことはすべて &lt;code&gt;Clone&lt;/code&gt; でも実現できますが、コードが遅くなるか、場所で &lt;code&gt;clone&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="3146101ecfa785f2d78080e0cc6a0d3503e3150a" translate="yes" xml:space="preserve">
          <source>ExactSizeIterator</source>
          <target state="translated">ExactSizeIterator</target>
        </trans-unit>
        <trans-unit id="41cf591951d2d7beb31eb3343cd4db3af8e57c20" translate="yes" xml:space="preserve">
          <source>ExactSizeIterator::is_empty</source>
          <target state="translated">ExactSizeIterator::is_empty</target>
        </trans-unit>
        <trans-unit id="751cc21500a7d7ee17b2f0da7fa4415a88a14eff" translate="yes" xml:space="preserve">
          <source>ExactSizeIterator::len</source>
          <target state="translated">ExactSizeIterator::len</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="ea72eaaf017adfe62fdd1e99e5bfc7eafbab0c64" translate="yes" xml:space="preserve">
          <source>Example of erroneous code (on a stable compiler):</source>
          <target state="translated">誤ったコードの例 (安定したコンパイラ上で)</target>
        </trans-unit>
        <trans-unit id="d1be55f5a5e8633f6ca767327d6ffbd2b73f390b" translate="yes" xml:space="preserve">
          <source>Example of erroneous code:</source>
          <target state="translated">誤ったコードの例。</target>
        </trans-unit>
        <trans-unit id="be4b93eb6f82c4178ceabca452a27ceb4158ddd6" translate="yes" xml:space="preserve">
          <source>Example of illegal &lt;code&gt;DispatchFromDyn&lt;/code&gt; implementation (illegal because of extra field)</source>
          <target state="translated">不正な &lt;code&gt;DispatchFromDyn&lt;/code&gt; 実装の例（余分なフィールドのために不正）</target>
        </trans-unit>
        <trans-unit id="5ab7721397827b925456d2a147cb5704105a62a7" translate="yes" xml:space="preserve">
          <source>Example usage:</source>
          <target state="translated">使用例。</target>
        </trans-unit>
        <trans-unit id="7629d161925d53d8c07052430e5179b9cd73df9f" translate="yes" xml:space="preserve">
          <source>Example values:</source>
          <target state="translated">値の例。</target>
        </trans-unit>
        <trans-unit id="fe024fc50c42665f35ef632be8bce2be9071e454" translate="yes" xml:space="preserve">
          <source>Example with a slice:</source>
          <target state="translated">スライスを使った例。</target>
        </trans-unit>
        <trans-unit id="544ec83edaaeafcc4cc305d0e2e6d04b135cc057" translate="yes" xml:space="preserve">
          <source>Example with an array with a fixed length:</source>
          <target state="translated">長さが固定された配列を使用した例</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="230703cf217e08cd431878d7b6d6b7ff5ccb00db" translate="yes" xml:space="preserve">
          <source>Example: intrusive doubly-linked list</source>
          <target state="translated">例:侵入型二重リンクリスト</target>
        </trans-unit>
        <trans-unit id="a363e70ae555493671c2074eba9434f0f10d22e4" translate="yes" xml:space="preserve">
          <source>Example: self-referential struct</source>
          <target state="translated">例:自己参照型構造体</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="504949c19448e1d28dd86072199a95c3060c8653" translate="yes" xml:space="preserve">
          <source>Examples for byte string literals:</source>
          <target state="translated">バイト文字列リテラルの例。</target>
        </trans-unit>
        <trans-unit id="65f96bb6473bf49ea5a2532013969ed04304777b" translate="yes" xml:space="preserve">
          <source>Examples for string literals:</source>
          <target state="translated">文字列リテラルの例。</target>
        </trans-unit>
        <trans-unit id="2b9f5ebc8bf70f5cd20a64246adda6fce8d80cb9" translate="yes" xml:space="preserve">
          <source>Examples of FIRST and LAST</source>
          <target state="translated">FIRSTとLASTの例</target>
        </trans-unit>
        <trans-unit id="4f69dc35c5188614946261cae793c365f8f070ba" translate="yes" xml:space="preserve">
          <source>Examples of FOLLOW for complex M:</source>
          <target state="translated">複合体MのFOLLOWの例</target>
        </trans-unit>
        <trans-unit id="475ed2196b5eed6aae0929450b2e017a53d203e7" translate="yes" xml:space="preserve">
          <source>Examples of erroneous code:</source>
          <target state="translated">誤ったコードの例。</target>
        </trans-unit>
        <trans-unit id="e44283640465bc24f4846139632af27bff59f97f" translate="yes" xml:space="preserve">
          <source>Examples of floating-point literals of various forms:</source>
          <target state="translated">様々な形式の浮動小数点リテラルの例。</target>
        </trans-unit>
        <trans-unit id="20265a7ac86f2018ea7005f50471da3fc3f072e7" translate="yes" xml:space="preserve">
          <source>Examples of integer literals of various forms:</source>
          <target state="translated">様々な形式の整数リテラルの例。</target>
        </trans-unit>
        <trans-unit id="3940a23e3ef887983adab9997e687a55b439de86" translate="yes" xml:space="preserve">
          <source>Examples of invalid integer literals:</source>
          <target state="translated">無効な整数リテラルの例。</target>
        </trans-unit>
        <trans-unit id="2b25c77bfdf1d1552ef0bbfa469ce8d62e5fd274" translate="yes" xml:space="preserve">
          <source>Examples of operations that require the trait</source>
          <target state="translated">形質を必要とする操作の例</target>
        </trans-unit>
        <trans-unit id="b9acf60b57b2d3b797f6ad69be2caed995f4289f" translate="yes" xml:space="preserve">
          <source>Examples of this error include:</source>
          <target state="translated">このエラーの例としては、次のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="4038c3ca40e0b1c6e5447bea24e8b897365db2d5" translate="yes" xml:space="preserve">
          <source>Examples of tuple expressions:</source>
          <target state="translated">タプル表現の例。</target>
        </trans-unit>
        <trans-unit id="203410f83cacdfbbcb718e74578a1613980744e9" translate="yes" xml:space="preserve">
          <source>Examples of tuple indexing expressions:</source>
          <target state="translated">タプル索引付け表現の例。</target>
        </trans-unit>
        <trans-unit id="100ef8f675809d602a846ef1b2275dd4f7faaa08" translate="yes" xml:space="preserve">
          <source>Examples of valid and invalid matchers</source>
          <target state="translated">有効なマッチャと無効なマッチャの例</target>
        </trans-unit>
        <trans-unit id="747dd22ecd6b689c0e332fe68ec6f6bb31f239fe" translate="yes" xml:space="preserve">
          <source>Examples, Prototype Code, and Tests</source>
          <target state="translated">例題、プロトタイプコード、テスト</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="43a61309e189219e20c136cf9a618743f41e2459" translate="yes" xml:space="preserve">
          <source>Excellent! We&amp;rsquo;ve built our own mini version of a classic tool and learned a lot about how to structure applications. We&amp;rsquo;ve also learned a bit about file input and output, lifetimes, testing, and command line parsing.</source>
          <target state="translated">優れた！クラシックツールの独自のミニバージョンを構築し、アプリケーションの構造化方法について多くを学びました。また、ファイルの入出力、有効期間、テスト、コマンドライン解析についても少し学びました。</target>
        </trans-unit>
        <trans-unit id="0a19b54597560e3b4fb3dfb50c3ffd609d90b30b" translate="yes" xml:space="preserve">
          <source>Excellent, we also got lines containing &amp;ldquo;To&amp;rdquo;! Our &lt;code&gt;minigrep&lt;/code&gt; program can now do case-insensitive searching controlled by an environment variable. Now you know how to manage options set using either command line arguments or environment variables.</source>
          <target state="translated">すばらしい、 &quot;To&quot;を含む行もあります。私たちの &lt;code&gt;minigrep&lt;/code&gt; のプログラムは、環境変数によって制御される大文字と小文字を区別しない検索を行うことができます。コマンドライン引数または環境変数を使用してオプションセットを管理する方法をマスターしました。</target>
        </trans-unit>
        <trans-unit id="a1ad1cd0df10d5b78ddd5c10568c7b6ba49956bd" translate="yes" xml:space="preserve">
          <source>Excess</source>
          <target state="translated">Excess</target>
        </trans-unit>
        <trans-unit id="213ac679129944cf35b52d3f166247a3476e33dd" translate="yes" xml:space="preserve">
          <source>Excess::borrow</source>
          <target state="translated">Excess::borrow</target>
        </trans-unit>
        <trans-unit id="2aa3ff98b7c6f889ec18867c1d879d31601fb976" translate="yes" xml:space="preserve">
          <source>Excess::borrow_mut</source>
          <target state="translated">Excess::borrow_mut</target>
        </trans-unit>
        <trans-unit id="69de6edf75670f83bf3d8c7612c28b32864662df" translate="yes" xml:space="preserve">
          <source>Excess::fmt</source>
          <target state="translated">Excess::fmt</target>
        </trans-unit>
        <trans-unit id="bae672085f5259844ae325ef19a7fbc823650dc3" translate="yes" xml:space="preserve">
          <source>Excess::from</source>
          <target state="translated">Excess::from</target>
        </trans-unit>
        <trans-unit id="3363cf55711fe555cd263a5f080aea1e2742f961" translate="yes" xml:space="preserve">
          <source>Excess::into</source>
          <target state="translated">Excess::into</target>
        </trans-unit>
        <trans-unit id="424dd77390342ae96d6be4663e2d673101095f6a" translate="yes" xml:space="preserve">
          <source>Excess::try_from</source>
          <target state="translated">Excess::try_from</target>
        </trans-unit>
        <trans-unit id="186dd3392df9a7ea057cfa2caeb2981aafeba862" translate="yes" xml:space="preserve">
          <source>Excess::try_into</source>
          <target state="translated">Excess::try_into</target>
        </trans-unit>
        <trans-unit id="fb79516f9afb5e67966091ce36a4e5750009a75b" translate="yes" xml:space="preserve">
          <source>Excess::type_id</source>
          <target state="translated">Excess::type_id</target>
        </trans-unit>
        <trans-unit id="6844909cde8e4da71d8365e268bda7441f803c28" translate="yes" xml:space="preserve">
          <source>Executes a breakpoint trap, for inspection by a debugger.</source>
          <target state="translated">デバッガによる検査のためにブレークポイント・トラップを実行します。</target>
        </trans-unit>
        <trans-unit id="7d5df1b7eb69039d1df43d4fce510e000a51b106" translate="yes" xml:space="preserve">
          <source>Executes a command as a child process, waiting for it to finish and collecting its exit status.</source>
          <target state="translated">子プロセスとしてコマンドを実行し、終了するのを待ち、終了ステータスを収集します。</target>
        </trans-unit>
        <trans-unit id="6a9be9437f2e17bce8bdfe27c265a90a0b3b13c8" translate="yes" xml:space="preserve">
          <source>Executes an operation of the &lt;code&gt;IPV6_ADD_MEMBERSHIP&lt;/code&gt; type.</source>
          <target state="translated">&lt;code&gt;IPV6_ADD_MEMBERSHIP&lt;/code&gt; タイプの操作を実行します。</target>
        </trans-unit>
        <trans-unit id="0570b69919b49638c7581c2f5f7e745acac96b18" translate="yes" xml:space="preserve">
          <source>Executes an operation of the &lt;code&gt;IPV6_DROP_MEMBERSHIP&lt;/code&gt; type.</source>
          <target state="translated">&lt;code&gt;IPV6_DROP_MEMBERSHIP&lt;/code&gt; タイプの操作を実行します。</target>
        </trans-unit>
        <trans-unit id="40fbdcbcf3c3fc0f5d4fb231720c04e19886ed36" translate="yes" xml:space="preserve">
          <source>Executes an operation of the &lt;code&gt;IP_ADD_MEMBERSHIP&lt;/code&gt; type.</source>
          <target state="translated">&lt;code&gt;IP_ADD_MEMBERSHIP&lt;/code&gt; タイプの操作を実行します。</target>
        </trans-unit>
        <trans-unit id="95072943c905b0126c579c18ad7e5ab7d362940a" translate="yes" xml:space="preserve">
          <source>Executes an operation of the &lt;code&gt;IP_DROP_MEMBERSHIP&lt;/code&gt; type.</source>
          <target state="translated">&lt;code&gt;IP_DROP_MEMBERSHIP&lt;/code&gt; タイプの操作を実行します。</target>
        </trans-unit>
        <trans-unit id="6743cba9287a9caaff1cd440b7d64282c6049053" translate="yes" xml:space="preserve">
          <source>Executes the command as a child process, returning a handle to it.</source>
          <target state="translated">子プロセスとしてコマンドを実行し、ハンドルを返します。</target>
        </trans-unit>
        <trans-unit id="b30f963dd62b9cb6f21b5fac9b505666d74b5221" translate="yes" xml:space="preserve">
          <source>Executes the command as a child process, waiting for it to finish and collecting all of its output.</source>
          <target state="translated">子プロセスとしてコマンドを実行し、コマンドが終了するのを待ち、その出力をすべて収集します。</target>
        </trans-unit>
        <trans-unit id="2817cb06c5b73332022cf111098d6bcb52bffbf9" translate="yes" xml:space="preserve">
          <source>Executes the destructor (if any) of the pointed-to value.</source>
          <target state="translated">指向先の値のデストラクタ(もしあれば)を実行します。</target>
        </trans-unit>
        <trans-unit id="17bebc4fe982bc5987b474e37f88af148d80ee3a" translate="yes" xml:space="preserve">
          <source>Executes the destructor for this type.</source>
          <target state="translated">この型のデストラクタを実行します。</target>
        </trans-unit>
        <trans-unit id="52c42692b06f8f96ca5eac28d8eb9b409a21b5d6" translate="yes" xml:space="preserve">
          <source>Executes the destructor for this type. &lt;a href=&quot;../../ops/trait.drop#tymethod.drop&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">このタイプのデストラクタを実行します。&lt;a href=&quot;../../ops/trait.drop#tymethod.drop&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f264f5a6fea12730ab8cdf161fec7b22c4658d43" translate="yes" xml:space="preserve">
          <source>Executes the destructor for this type. &lt;a href=&quot;../ops/trait.drop#tymethod.drop&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">このタイプのデストラクタを実行します。&lt;a href=&quot;../ops/trait.drop#tymethod.drop&quot;&gt;続きを読む&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c5803bf23e85137290e380e7120cf5cda940241d" translate="yes" xml:space="preserve">
          <source>Executing an &lt;code&gt;as&lt;/code&gt; expression casts the value on the left-hand side to the type on the right-hand side.</source>
          <target state="translated">&lt;code&gt;as&lt;/code&gt; 式を実行すると、左側の値が右側の型にキャストされます。</target>
        </trans-unit>
        <trans-unit id="f227ddba90126d9b19972677ff1e5de9bf4b8baf" translate="yes" xml:space="preserve">
          <source>Executing an async block is similar to executing a closure expression: its immediate effect is to produce and return an anonymous type. Whereas closures return a type that implements one or more of the &lt;a href=&quot;../../std/ops/trait.fn&quot;&gt;&lt;code&gt;std::ops::Fn&lt;/code&gt;&lt;/a&gt; traits, however, the type returned for an async block implements the &lt;a href=&quot;../../std/future/trait.future&quot;&gt;&lt;code&gt;std::future::Future&lt;/code&gt;&lt;/a&gt; trait. The actual data format for this type is unspecified.</source>
          <target state="translated">非同期ブロックの実行は、クロージャ式の実行に似ています。その即時の効果は、匿名型を生成して返すことです。クロージャは1つ以上の&lt;a href=&quot;../../std/ops/trait.fn&quot;&gt; &lt;code&gt;std::ops::Fn&lt;/code&gt; &lt;/a&gt;トレイトを実装するタイプを返しますが、非同期ブロックに対して返されるタイプは&lt;a href=&quot;../../std/future/trait.future&quot;&gt; &lt;code&gt;std::future::Future&lt;/code&gt; &lt;/a&gt;トレイトを実装します。このタイプの実際のデータ形式は指定されていません。</target>
        </trans-unit>
        <trans-unit id="82d5a597261b3a537849f1b372f9b78e7b625eb8" translate="yes" xml:space="preserve">
          <source>Executing code compiled with platform features that the current platform does not support (see &lt;a href=&quot;attributes/codegen#the-target_feature-attribute&quot;&gt;&lt;code&gt;target_feature&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">現在のプラットフォームがサポートしていないプラットフォーム機能でコンパイルされたコードの実行（&lt;a href=&quot;attributes/codegen#the-target_feature-attribute&quot;&gt; &lt;code&gt;target_feature&lt;/code&gt; を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="b06f8d63833c073486a1fdfd5916e0d398ec4cd0" translate="yes" xml:space="preserve">
          <source>Exhaustive list of permitted structures in const functions:</source>
          <target state="translated">const関数で許可されている構造体の網羅的なリスト。</target>
        </trans-unit>
        <trans-unit id="86a8f90bc64cf5df00aa90e18788357137564fbe" translate="yes" xml:space="preserve">
          <source>Exit early from a loop.</source>
          <target state="translated">ループから早々に退場。</target>
        </trans-unit>
        <trans-unit id="50608b32a949b3a08997046090620bbfa3cfc868" translate="yes" xml:space="preserve">
          <source>Exit the loop, yielding the given value</source>
          <target state="translated">ループを終了し、指定された値を生成します。</target>
        </trans-unit>
        <trans-unit id="0ff1b7133e455e31a96b40324f51f574297a78d9" translate="yes" xml:space="preserve">
          <source>ExitCode</source>
          <target state="translated">ExitCode</target>
        </trans-unit>
        <trans-unit id="e1ae1acdd19956469141874d789907a490e9de55" translate="yes" xml:space="preserve">
          <source>ExitCode::borrow</source>
          <target state="translated">ExitCode::borrow</target>
        </trans-unit>
        <trans-unit id="a7c5a114734064fcccce67a9cd3dfdfdd76445d7" translate="yes" xml:space="preserve">
          <source>ExitCode::borrow_mut</source>
          <target state="translated">ExitCode::borrow_mut</target>
        </trans-unit>
        <trans-unit id="5bc752a76a7e5d3cc8b0c1d1e796fcbadc8039c7" translate="yes" xml:space="preserve">
          <source>ExitCode::clone</source>
          <target state="translated">ExitCode::clone</target>
        </trans-unit>
        <trans-unit id="e3aa3ff5485bd9294736387dd7b9f8d0c75a260b" translate="yes" xml:space="preserve">
          <source>ExitCode::clone_from</source>
          <target state="translated">ExitCode::clone_from</target>
        </trans-unit>
        <trans-unit id="060819903443bc1767dc26493ecf28b9dacb53f7" translate="yes" xml:space="preserve">
          <source>ExitCode::clone_into</source>
          <target state="translated">ExitCode::clone_into</target>
        </trans-unit>
        <trans-unit id="88c7fb509d4ffac9b282b1107a33514bd2b03738" translate="yes" xml:space="preserve">
          <source>ExitCode::fmt</source>
          <target state="translated">ExitCode::fmt</target>
        </trans-unit>
        <trans-unit id="1ce2ab0ed3bb706748e0b3c735c0688aff5160bf" translate="yes" xml:space="preserve">
          <source>ExitCode::from</source>
          <target state="translated">ExitCode::from</target>
        </trans-unit>
        <trans-unit id="b7bae028a6211fed92006d269593eb905ff449b3" translate="yes" xml:space="preserve">
          <source>ExitCode::into</source>
          <target state="translated">ExitCode::into</target>
        </trans-unit>
        <trans-unit id="df1e11e3310a78305718c30303c6e2d585a97898" translate="yes" xml:space="preserve">
          <source>ExitCode::report</source>
          <target state="translated">ExitCode::report</target>
        </trans-unit>
        <trans-unit id="2ad5a69a740cfdba845cbcd4d855863f15dc8419" translate="yes" xml:space="preserve">
          <source>ExitCode::to_owned</source>
          <target state="translated">ExitCode::to_owned</target>
        </trans-unit>
        <trans-unit id="b3d7600372ff90a15d8a6af9f58e0f3703b33bf4" translate="yes" xml:space="preserve">
          <source>ExitCode::try_from</source>
          <target state="translated">ExitCode::try_from</target>
        </trans-unit>
        <trans-unit id="185ac9887db2c6d26575ff67cb5a611fc101a07d" translate="yes" xml:space="preserve">
          <source>ExitCode::try_into</source>
          <target state="translated">ExitCode::try_into</target>
        </trans-unit>
        <trans-unit id="d18c4ea9574f15037debc13139109e30412ae359" translate="yes" xml:space="preserve">
          <source>ExitCode::type_id</source>
          <target state="translated">ExitCode::type_id</target>
        </trans-unit>
        <trans-unit id="c111aeda61ffb30094d669bbbfd2bc91a42cd8b8" translate="yes" xml:space="preserve">
          <source>ExitStatus</source>
          <target state="translated">ExitStatus</target>
        </trans-unit>
        <trans-unit id="1974f260a6f0d3b98fe0a9d8c2855e1574bf736a" translate="yes" xml:space="preserve">
          <source>ExitStatus::borrow</source>
          <target state="translated">ExitStatus::borrow</target>
        </trans-unit>
        <trans-unit id="2e8dc59f4c3302f6a185b095cb7a63489f63705c" translate="yes" xml:space="preserve">
          <source>ExitStatus::borrow_mut</source>
          <target state="translated">ExitStatus::borrow_mut</target>
        </trans-unit>
        <trans-unit id="6d4d42d0ac2545f85258d6aeff490a183d94bdde" translate="yes" xml:space="preserve">
          <source>ExitStatus::clone</source>
          <target state="translated">ExitStatus::clone</target>
        </trans-unit>
        <trans-unit id="6b9f4647c8bbb11d090a3ad7a23f835f91d4e1f3" translate="yes" xml:space="preserve">
          <source>ExitStatus::clone_from</source>
          <target state="translated">ExitStatus::clone_from</target>
        </trans-unit>
        <trans-unit id="7f70f957cde58c8fa54e2f3d5c363a834dc94fd9" translate="yes" xml:space="preserve">
          <source>ExitStatus::clone_into</source>
          <target state="translated">ExitStatus::clone_into</target>
        </trans-unit>
        <trans-unit id="fb34c74ca984270958cdf7e209f3f61f917dd89e" translate="yes" xml:space="preserve">
          <source>ExitStatus::code</source>
          <target state="translated">ExitStatus::code</target>
        </trans-unit>
        <trans-unit id="5d276ae9b5eb288da3fb43e86a9dfcb2560769d0" translate="yes" xml:space="preserve">
          <source>ExitStatus::eq</source>
          <target state="translated">ExitStatus::eq</target>
        </trans-unit>
        <trans-unit id="9327a6d9903d1c0cd219988422f92e0424dd692a" translate="yes" xml:space="preserve">
          <source>ExitStatus::fmt</source>
          <target state="translated">ExitStatus::fmt</target>
        </trans-unit>
        <trans-unit id="bc98aeee9f7f4b636747178371ae035d543a7d73" translate="yes" xml:space="preserve">
          <source>ExitStatus::from</source>
          <target state="translated">ExitStatus::from</target>
        </trans-unit>
        <trans-unit id="33187a0a7c122e0dc9144590daee2a62f6ddf619" translate="yes" xml:space="preserve">
          <source>ExitStatus::from_raw</source>
          <target state="translated">ExitStatus::from_raw</target>
        </trans-unit>
        <trans-unit id="93f1b4bcf00cab23c41a7e1a9a12b16b01301289" translate="yes" xml:space="preserve">
          <source>ExitStatus::into</source>
          <target state="translated">ExitStatus::into</target>
        </trans-unit>
        <trans-unit id="62581279cf1b3936bce1dcf62db029ec5612c875" translate="yes" xml:space="preserve">
          <source>ExitStatus::ne</source>
          <target state="translated">ExitStatus::ne</target>
        </trans-unit>
        <trans-unit id="cfac0374512ce042704c82ce7fa68a8364d0e58f" translate="yes" xml:space="preserve">
          <source>ExitStatus::signal</source>
          <target state="translated">ExitStatus::signal</target>
        </trans-unit>
        <trans-unit id="ed4f39a2d8c7a9a57537b3c31d5431dd2f115cdc" translate="yes" xml:space="preserve">
          <source>ExitStatus::success</source>
          <target state="translated">ExitStatus::success</target>
        </trans-unit>
        <trans-unit id="62b47c36650840b0108126f3adde26e48b61617d" translate="yes" xml:space="preserve">
          <source>ExitStatus::to_owned</source>
          <target state="translated">ExitStatus::to_owned</target>
        </trans-unit>
        <trans-unit id="0bfe5d5113bfde9b81de6719accbb3be938d9509" translate="yes" xml:space="preserve">
          <source>ExitStatus::to_string</source>
          <target state="translated">ExitStatus::to_string</target>
        </trans-unit>
        <trans-unit id="29bd286a73a29a6827e8115de57ab58bfab614df" translate="yes" xml:space="preserve">
          <source>ExitStatus::try_from</source>
          <target state="translated">ExitStatus::try_from</target>
        </trans-unit>
        <trans-unit id="04fd7f5c8e73d6df1fa6efbe1a61914cbf761794" translate="yes" xml:space="preserve">
          <source>ExitStatus::try_into</source>
          <target state="translated">ExitStatus::try_into</target>
        </trans-unit>
        <trans-unit id="520d14d48b9052fe8fb50d5d6c071024ebf5dbbd" translate="yes" xml:space="preserve">
          <source>ExitStatus::type_id</source>
          <target state="translated">ExitStatus::type_id</target>
        </trans-unit>
        <trans-unit id="2627903d418f2f228b709bdaae9456f1231acdaa" translate="yes" xml:space="preserve">
          <source>ExitStatusExt</source>
          <target state="translated">ExitStatusExt</target>
        </trans-unit>
        <trans-unit id="29e45ab9d14b5913718450c7b9f0d56077e83e7e" translate="yes" xml:space="preserve">
          <source>Exiting without calling destructors</source>
          <target state="translated">デストラクタを呼び出さずに終了する</target>
        </trans-unit>
        <trans-unit id="28d9b17570ad88d114dcb8b6b92211f2f97de502" translate="yes" xml:space="preserve">
          <source>Expands to a string that represents the current module path.</source>
          <target state="translated">現在のモジュールのパスを表す文字列に展開します。</target>
        </trans-unit>
        <trans-unit id="111566545f49cd21933fc1fea69c690da33c96ff" translate="yes" xml:space="preserve">
          <source>Expands to the column number at which it was invoked.</source>
          <target state="translated">呼び出された列番号に展開します。</target>
        </trans-unit>
        <trans-unit id="415d4a1b98b5b38e7136a2569231ef3c795170fb" translate="yes" xml:space="preserve">
          <source>Expands to the file name in which it was invoked.</source>
          <target state="translated">呼び出されたファイル名まで展開します。</target>
        </trans-unit>
        <trans-unit id="a45f83d80d16c44c92eee689c97673f06829c8ce" translate="yes" xml:space="preserve">
          <source>Expands to the line number on which it was invoked.</source>
          <target state="translated">呼び出された行番号まで展開します。</target>
        </trans-unit>
        <trans-unit id="a4c577a2ac16bd3ba372061e96a947970d947bf7" translate="yes" xml:space="preserve">
          <source>Expected type did not match the received type.</source>
          <target state="translated">期待される型が受信した型と一致しませんでした。</target>
        </trans-unit>
        <trans-unit id="b718f8c3a83788b1b360cc38380401a994fb4892" translate="yes" xml:space="preserve">
          <source>Experimental</source>
          <target state="translated">Experimental</target>
        </trans-unit>
        <trans-unit id="9560abec248c2d8a474706784a0064e62c9f3bc6" translate="yes" xml:space="preserve">
          <source>ExperimentalUnix</source>
          <target state="translated">ExperimentalUnix</target>
        </trans-unit>
        <trans-unit id="9c999b61cac476de27b9f2b90682b4f512986004" translate="yes" xml:space="preserve">
          <source>ExperimentalWindows</source>
          <target state="translated">ExperimentalWindows</target>
        </trans-unit>
        <trans-unit id="b32ef340ea4702fd5f41dbe4001671d76174ef71" translate="yes" xml:space="preserve">
          <source>Explanation</source>
          <target state="translated">Explanation</target>
        </trans-unit>
        <trans-unit id="fb0c7f76ba2eebc8ef86d8e08fdc9b8c28d34904" translate="yes" xml:space="preserve">
          <source>Explicitly implementing both &lt;code&gt;Drop&lt;/code&gt; and &lt;code&gt;Copy&lt;/code&gt; trait on a type is currently disallowed. This feature can make some sense in theory, but the current implementation is incorrect and can lead to memory unsafety (see &lt;a href=&quot;https://github.com/rust-lang/rust/issues/20126&quot;&gt;issue #20126&lt;/a&gt;), so it has been disabled for now.</source>
          <target state="translated">型に &lt;code&gt;Drop&lt;/code&gt; 特性と &lt;code&gt;Copy&lt;/code&gt; 特性の両方を明示的に実装することは、現在許可されていません。この機能は理論的にはある程度意味がありますが、現在の実装は正しくなく、メモリの安全性が低下する可能性があるため（&lt;a href=&quot;https://github.com/rust-lang/rust/issues/20126&quot;&gt;問題＃&lt;/a&gt; 20126を参照）、現時点では無効になっています。</target>
        </trans-unit>
        <trans-unit id="d698ba47df5ae5a811a1350c6abdd8a4ed0fff8c" translate="yes" xml:space="preserve">
          <source>Explicitly implementing both Drop and Copy for a type is currently disallowed. This feature can make some sense in theory, but the current implementation is incorrect and can lead to memory unsafety (see &lt;a href=&quot;https://github.com/rust-lang/rust/issues/20126&quot;&gt;issue #20126&lt;/a&gt;), so it has been disabled for now.</source>
          <target state="translated">型に対してドロップとコピーの両方を明示的に実装することは現在許可されていません。この機能は理論的には理にかなっていますが、現在の実装は正しくなく、メモリが安全でなくなる可能性があるため（&lt;a href=&quot;https://github.com/rust-lang/rust/issues/20126&quot;&gt;問題＃&lt;/a&gt; 20126を参照）、現時点では無効になっています。</target>
        </trans-unit>
        <trans-unit id="d165ee97f26b031b938fc12621899c47ca3e7175" translate="yes" xml:space="preserve">
          <source>Exponentiation</source>
          <target state="translated">Exponentiation</target>
        </trans-unit>
        <trans-unit id="bd112165280d2f00f9e756f129da9dc704c3f593" translate="yes" xml:space="preserve">
          <source>Exporting a Convenient Public API with &lt;code id=&quot;exporting-a-convenient-public-api-with-pub-use&quot;&gt;pub use&lt;/code&gt;</source>
          <target state="translated">&lt;code id=&quot;exporting-a-convenient-public-api-with-pub-use&quot;&gt;pub use&lt;/code&gt; を使用した便利なパブリックAPIのエクスポート</target>
        </trans-unit>
        <trans-unit id="9150316825e9f6d857b4398d59d6a96682d74585" translate="yes" xml:space="preserve">
          <source>Exposing Paths with the &lt;code id=&quot;exposing-paths-with-the-pub-keyword&quot;&gt;pub&lt;/code&gt; Keyword</source>
          <target state="translated">&lt;code id=&quot;exposing-paths-with-the-pub-keyword&quot;&gt;pub&lt;/code&gt; キーワードでパスを公開する</target>
        </trans-unit>
        <trans-unit id="ae50b85a56c1e601d894825d1bcd5433f309e845" translate="yes" xml:space="preserve">
          <source>Exposing randomized base addresses through pointer leaks</source>
          <target state="translated">ポインタリークによるランダム化されたベースアドレスの公開</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
