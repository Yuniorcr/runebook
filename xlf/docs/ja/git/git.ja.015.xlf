<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="git">
    <body>
      <group id="git">
        <trans-unit id="12f69b768fbdb877106cba3b6d6afbd305a42b1c" translate="yes" xml:space="preserve">
          <source>will result in:</source>
          <target state="translated">になります。</target>
        </trans-unit>
        <trans-unit id="2f2b51229d2d2167e0cc3202015392cc28ab8187" translate="yes" xml:space="preserve">
          <source>will return no commits when the two branches are equal.</source>
          <target state="translated">は、2つのブランチが等しい場合にコミットを返さないようにします。</target>
        </trans-unit>
        <trans-unit id="d7fb4c7e19f587f366fe3ea0e98028a92d8fea8e" translate="yes" xml:space="preserve">
          <source>will show a nice graphical representation of the resulting history.</source>
          <target state="translated">は、結果の履歴をグラフィカルに表示します。</target>
        </trans-unit>
        <trans-unit id="a5a8e7b047472640f5d146677e9c728928275e66" translate="yes" xml:space="preserve">
          <source>will show the list of commits made on the stable branch but not the master branch.</source>
          <target state="translated">は安定版ブランチで行われたコミットの一覧を表示しますが、マスターブランチでは行われません。</target>
        </trans-unit>
        <trans-unit id="68545f3a6f4d69e42947665de20411f9ec15d387" translate="yes" xml:space="preserve">
          <source>will show this. Once you&amp;rsquo;ve edited the files to resolve the conflicts,</source>
          <target state="translated">これを表示します。競合を解決するためにファイルを編集したら、</target>
        </trans-unit>
        <trans-unit id="97b06ba16f479d1bb2f14d02f495998e3aa43a36" translate="yes" xml:space="preserve">
          <source>will show what HEAD pointed to one week ago, not what the current branch pointed to one week ago. This allows you to see the history of what you&amp;rsquo;ve checked out.</source>
          <target state="translated">HEADが1週間前にポイントしたものを表示します。現在のブランチが1週間前にポイントしたものは表示しません。これにより、チェックアウトしたものの履歴を確認できます。</target>
        </trans-unit>
        <trans-unit id="6c7766e6bd2c3044e5f437a985d8e97c1aaa2741" translate="yes" xml:space="preserve">
          <source>will show you graphically both of your branches (that&amp;rsquo;s what the &lt;code&gt;--all&lt;/code&gt; means: normally it will just show you your current &lt;code&gt;HEAD&lt;/code&gt;) and their histories. You can also see exactly how they came to be from a common source.</source>
          <target state="translated">両方のブランチ（ &lt;code&gt;--all&lt;/code&gt; の意味：通常は現在の &lt;code&gt;HEAD&lt;/code&gt; が表示されるだけです）とその履歴をグラフィカルに表示します。また、それらが共通のソースからどのようにして生まれたかを正確に確認することもできます。</target>
        </trans-unit>
        <trans-unit id="88356df00c3516762073ccbdc78aa678f20cae5f" translate="yes" xml:space="preserve">
          <source>will tell you where it&amp;rsquo;s pointing. To get the list of branches you have, you can say</source>
          <target state="translated">それが指している場所を教えてくれます。あなたが持っているブランチのリストを取得するには、次のように言うことができます</target>
        </trans-unit>
        <trans-unit id="6cdd86cb78566c41c85784dc0a0c2629a62ca7ce" translate="yes" xml:space="preserve">
          <source>will tell you whether the contents of the project are the same at the two branches; in theory, however, it&amp;rsquo;s possible that the same project contents could have been arrived at by two different historical routes. You could compare the object names:</source>
          <target state="translated">プロジェクトの内容が2つのブランチで同じであるかどうかがわかります。ただし、理論的には、同じプロジェクトの内容が2つの異なる歴史的な経路で到達した可能性があります。オブジェクト名を比較することができます：</target>
        </trans-unit>
        <trans-unit id="b9ee4c8cf1d80f9a0a5a4a11e832c20bacca676c" translate="yes" xml:space="preserve">
          <source>will try to use konqueror first. But this may fail (for example, if DISPLAY is not set) and in that case emacs' woman mode will be tried.</source>
          <target state="translated">はまずkonquerorを使おうとします。しかし、これは失敗する可能性があり(例えばDISPLAYが設定されていない場合)、その場合はemacsの女性モードが試されます。</target>
        </trans-unit>
        <trans-unit id="f6031424c5b15149805cc3d0c8b0eac718e1d424" translate="yes" xml:space="preserve">
          <source>will update the index with any files that you&amp;rsquo;ve modified or removed and create a commit, all in one step.</source>
          <target state="translated">変更または削除したファイルでインデックスを更新し、コミットを作成します。</target>
        </trans-unit>
        <trans-unit id="9b84bddfaa68e5df6de8681c72c0df1fa4a7fa1b" translate="yes" xml:space="preserve">
          <source>will use HEAD to produce a gzipped tar archive in which each filename is preceded by &lt;code&gt;project/&lt;/code&gt;. The output file format is inferred from the output file extension if possible, see &lt;a href=&quot;git-archive&quot;&gt;git-archive[1]&lt;/a&gt; for details.</source>
          <target state="translated">HEADを使用して、各ファイル名の前に &lt;code&gt;project/&lt;/code&gt; が付いたgzip圧縮されたtarアーカイブを作成します。出力ファイルの形式は、可能であれば出力ファイル拡張子から推測されます。詳細については、&lt;a href=&quot;git-archive&quot;&gt;git-archive [1]&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="d00bc787a2d4b77c2ff5ea6fc53c8c29f15dc358" translate="yes" xml:space="preserve">
          <source>winmerge</source>
          <target state="translated">winmerge</target>
        </trans-unit>
        <trans-unit id="20800520495b2303a3ac17dd27fe3c4163987c1e" translate="yes" xml:space="preserve">
          <source>working directory &amp;rarr; index</source>
          <target state="translated">作業ディレクトリ&amp;rarr;インデックス</target>
        </trans-unit>
        <trans-unit id="4eafbf4c3acd9084fd21be8ac9ae916a897b122b" translate="yes" xml:space="preserve">
          <source>working tree</source>
          <target state="translated">作業木</target>
        </trans-unit>
        <trans-unit id="94449c5bf46256cd2c8d8717f9940ed8cf221db3" translate="yes" xml:space="preserve">
          <source>worktree</source>
          <target state="translated">worktree</target>
        </trans-unit>
        <trans-unit id="efd3ab67ae8bdaac67f76d19bad0017021556659" translate="yes" xml:space="preserve">
          <source>worktree.guessRemote</source>
          <target state="translated">worktree.guessRemote</target>
        </trans-unit>
        <trans-unit id="5c46c9b5886a79e1bb6967377b51e67078ac410e" translate="yes" xml:space="preserve">
          <source>worktreepath</source>
          <target state="translated">worktreepath</target>
        </trans-unit>
        <trans-unit id="32d1d8cd691bd73eb0e8445a53eb45a6219cd631" translate="yes" xml:space="preserve">
          <source>worktrees</source>
          <target state="translated">worktrees</target>
        </trans-unit>
        <trans-unit id="917d24c19e6172d01ee58d4d910cf520abde5e00" translate="yes" xml:space="preserve">
          <source>worktrees/&amp;lt;id&amp;gt;/config.worktree</source>
          <target state="translated">worktrees/&amp;lt;id&amp;gt;/config.worktree</target>
        </trans-unit>
        <trans-unit id="7a2a4f1b20c8a2e59a305206002b8b028eaf5833" translate="yes" xml:space="preserve">
          <source>worktrees/&amp;lt;id&amp;gt;/gitdir</source>
          <target state="translated">worktrees/&amp;lt;id&amp;gt;/gitdir</target>
        </trans-unit>
        <trans-unit id="7dc15d067a8c70411dcc35bf1efd2caa26ebdc18" translate="yes" xml:space="preserve">
          <source>worktrees/&amp;lt;id&amp;gt;/locked</source>
          <target state="translated">worktrees/&amp;lt;id&amp;gt;/locked</target>
        </trans-unit>
        <trans-unit id="6e52918f32fd9eea83251e9bf09da6ae390c3eae" translate="yes" xml:space="preserve">
          <source>would be of roughly the same length. Finding the change which introduces a regression is thus reduced to a binary search: repeatedly generate and test new 'midpoint&amp;rsquo;s until the commit chain is of length one.</source>
          <target state="translated">ほぼ同じ長さになります。したがって、回帰を導入する変更を見つけることは、バイナリ検索に還元されます。コミットチェーンの長さが1になるまで、新しい中間点を繰り返し生成してテストします。</target>
        </trans-unit>
        <trans-unit id="2176dfd0874fe19ae8bdc1313d3e537d33c3c4c7" translate="yes" xml:space="preserve">
          <source>would be of roughly the same length. Finding the change which introduces a regression is thus reduced to a binary search: repeatedly generate and test new 'midpoint&amp;rsquo;s until the commit chain is of length one. Cannot be combined with --first-parent.</source>
          <target state="translated">ほぼ同じ長さになります。したがって、回帰を導入する変更を見つけることは、バイナリ検索に削減されます。コミットチェーンの長さが1になるまで、新しい「中間点」を繰り返し生成してテストします。--first-parentと組み合わせることはできません。</target>
        </trans-unit>
        <trans-unit id="a0ebc00ce2803c4b05ae16c519fdb6afbeecd7c8" translate="yes" xml:space="preserve">
          <source>would be:</source>
          <target state="translated">となるでしょう。</target>
        </trans-unit>
        <trans-unit id="ec462e1209bb81dd4d4da74d7cc622ecbd59d27e" translate="yes" xml:space="preserve">
          <source>would create the lightweight tag &lt;code&gt;refs/tags/938&lt;/code&gt; referring to whatever commit mark &lt;code&gt;:938&lt;/code&gt; references.</source>
          <target state="translated">コミットマーク &lt;code&gt;:938&lt;/code&gt; の参照を参照する軽量タグ &lt;code&gt;refs/tags/938&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="0e64309207a65a066015e183c95df0e98fa9beef" translate="yes" xml:space="preserve">
          <source>would output something like:</source>
          <target state="translated">のようなものを出力します。</target>
        </trans-unit>
        <trans-unit id="17d8e6d8f0677b6f8b2c882d7facbbbc37143301" translate="yes" xml:space="preserve">
          <source>would remove them for you.</source>
          <target state="translated">と言ってくれれば、あなたのために削除してくれます。</target>
        </trans-unit>
        <trans-unit id="a4d42effbae7f1dd903be5bc58250775e8fdb07f" translate="yes" xml:space="preserve">
          <source>would result in the removal of commits F and G:</source>
          <target state="translated">とすると、コミットFとGが削除されることになります。</target>
        </trans-unit>
        <trans-unit id="e178c9aaffe5991230dd9ff28b8f996011875161" translate="yes" xml:space="preserve">
          <source>would result in:</source>
          <target state="translated">になってしまうのではないでしょうか。</target>
        </trans-unit>
        <trans-unit id="e1d0c6c1c29e6ad5164072a5b21340dca7fcb052" translate="yes" xml:space="preserve">
          <source>write</source>
          <target state="translated">write</target>
        </trans-unit>
        <trans-unit id="a6956dab1239c6c1fbc46a263df37854151bdad3" translate="yes" xml:space="preserve">
          <source>write, in the test suite, a test script that exposes the regression</source>
          <target state="translated">テストスイートに、リグレッションを公開するテストスクリプトを書きます。</target>
        </trans-unit>
        <trans-unit id="b51c03916d43845d38d787ba1177d97c35d6d8b0" translate="yes" xml:space="preserve">
          <source>write-tree</source>
          <target state="translated">write-tree</target>
        </trans-unit>
        <trans-unit id="b16c937fc5f3c005b0c3db817c6328aabab56313" translate="yes" xml:space="preserve">
          <source>xxdiff</source>
          <target state="translated">xxdiff</target>
        </trans-unit>
        <trans-unit id="edb0f5b1f639a3886e3180c47fe86c3a6a263842" translate="yes" xml:space="preserve">
          <source>yields</source>
          <target state="translated">yields</target>
        </trans-unit>
        <trans-unit id="bb7860b062b4c7f6477197562066897cfac86203" translate="yes" xml:space="preserve">
          <source>you can feed the following input to &lt;code&gt;--index-info&lt;/code&gt;:</source>
          <target state="translated">次の入力を &lt;code&gt;--index-info&lt;/code&gt; にフィードできます。</target>
        </trans-unit>
        <trans-unit id="f512f3664f28acf3b646ac106562aabf5b3fd0fa" translate="yes" xml:space="preserve">
          <source>you can refer to 1b2e1d63ff by the name &quot;v2.5&quot;. If you intend to share this name with other people (for example, to identify a release version), you should create a &quot;tag&quot; object, and perhaps sign it; see &lt;a href=&quot;git-tag&quot;&gt;git-tag[1]&lt;/a&gt; for details.</source>
          <target state="translated">「v2.5」という名前で1b2e1d63ffを参照できます。この名前を他の人と共有する場合（たとえば、リリースバージョンを識別するため）、「タグ」オブジェクトを作成し、おそらくそれに署名する必要があります。詳細は&lt;a href=&quot;git-tag&quot;&gt;git-tag [1]&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="f21aea3b773b85ed15a02e0520c4596660ede62d" translate="yes" xml:space="preserve">
          <source>you can set the filemode to true with</source>
          <target state="translated">でファイルモードをtrueに設定することができます。</target>
        </trans-unit>
        <trans-unit id="7dc43142eea4044676647e6bd97cb9f7eb183068" translate="yes" xml:space="preserve">
          <source>you can tell about the change after the fact.</source>
          <target state="translated">後から変化がわかるようになります。</target>
        </trans-unit>
        <trans-unit id="55ae0d2f317b0ae71a87fb90b36301e7c9181a34" translate="yes" xml:space="preserve">
          <source>you could run &lt;code&gt;git rebase master topic&lt;/code&gt;, to bring yourself up to date before your topic is ready to be sent upstream. This would result in falling back to a three-way merge, and it would conflict the same way as the test merge you resolved earlier. &lt;code&gt;git rerere&lt;/code&gt; will be run by &lt;code&gt;git rebase&lt;/code&gt; to help you resolve this conflict.</source>
          <target state="translated">&lt;code&gt;git rebase master topic&lt;/code&gt; を実行して、トピックをアップストリームに送信する準備ができる前に最新の状態にすることができます。これにより、3者間マージにフォールバックし、先に解決したテストマージと同じ方法で競合します。 &lt;code&gt;git rerere&lt;/code&gt; は &lt;code&gt;git rebase&lt;/code&gt; によって実行され、この競合を解決するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="ce05848d37149bd7a63386fce7bea6475bab3138" translate="yes" xml:space="preserve">
          <source>you have now created two files in your working tree (aka &lt;code&gt;working directory&lt;/code&gt;), but to actually check in your hard work, you will have to go through two steps:</source>
          <target state="translated">これで作業ツリー（別名 &lt;code&gt;working directory&lt;/code&gt; ）に2つのファイルが作成されましたが、実際に作業をチェックインするには、2つの手順を実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="0b8f2b63647cf0b4cf2e4ae1c829a8efa59acde9" translate="yes" xml:space="preserve">
          <source>you need to tell Git if you added a new file; removal and modification will be caught if you do &lt;code&gt;git commit -a&lt;/code&gt; later.</source>
          <target state="translated">新しいファイルを追加した場合は、Gitに通知する必要があります。後で &lt;code&gt;git commit -a&lt;/code&gt; を実行すると、削除と変更がキャッチされます。</target>
        </trans-unit>
        <trans-unit id="e6782f0c216c9a85ff68244a10ed13eb161478ca" translate="yes" xml:space="preserve">
          <source>you run into problems with deletions whenever the user is simply trying to rename files (because attempting to delete files that don&amp;rsquo;t exist looks like a no-op; it takes some chicanery to remap deletes across file renames when the renames happen via arbitrary user-provided shell)</source>
          <target state="translated">ユーザーが単にファイルの名前を変更しようとするたびに削除の問題が発生します（存在しないファイルを削除しようとすると何も起こらないように見えるため、任意のユーザーを介して名前が変更されたときに、ファイルの名前を変更して削除を再マッピングするには、いくつかの方法が必要です） -提供されるシェル）</target>
        </trans-unit>
        <trans-unit id="e804abbe97d54cb4bc4f8871e020be4bbbadaebf" translate="yes" xml:space="preserve">
          <source>you try to unset an option which does not exist (ret=5),</source>
          <target state="translated">存在しないオプションの設定を解除しようとした場合 (ret=5)。</target>
        </trans-unit>
        <trans-unit id="fe0543b68420ac22d2548c7e91b972d8572fa97d" translate="yes" xml:space="preserve">
          <source>you try to unset/set an option for which multiple lines match (ret=5), or</source>
          <target state="translated">複数の行が一致するオプションを設定/解除しようとした場合 (ret=5)、または</target>
        </trans-unit>
        <trans-unit id="efa92f0afbb0477eac8bafddb9f3892f7f60093d" translate="yes" xml:space="preserve">
          <source>you try to use an invalid regexp (ret=6).</source>
          <target state="translated">無効な正規表現 (ret=6)を使おうとした場合。</target>
        </trans-unit>
        <trans-unit id="deeffff664f882f6292365d3f4355f0fd1f2950a" translate="yes" xml:space="preserve">
          <source>you walk the index in order, and ignore all entries of stage 0, since they&amp;rsquo;ve already been done.</source>
          <target state="translated">インデックスを順番にたどり、ステージ0のすべてのエントリは既に行われているので無視します。</target>
        </trans-unit>
        <trans-unit id="e40858f3b1ea33484ad870e370d3ce3403d6e862" translate="yes" xml:space="preserve">
          <source>you will end up with the fixed history</source>
          <target state="translated">固定された履歴で終わってしまいます。</target>
        </trans-unit>
        <trans-unit id="3feccc2142131c34ccba809c47212fd9f28c1cb4" translate="yes" xml:space="preserve">
          <source>you would get an output like this:</source>
          <target state="translated">のような出力が得られます。</target>
        </trans-unit>
        <trans-unit id="0bae78553462e7a34534afd02b3496453c11a90d" translate="yes" xml:space="preserve">
          <source>you&amp;rsquo;ll get a list of all existing branches:</source>
          <target state="translated">既存のすべてのブランチのリストが表示されます。</target>
        </trans-unit>
        <trans-unit id="38aa53de31c04bcfae9163cc23b7963ed9cf90f7" translate="yes" xml:space="preserve">
          <source>zebra</source>
          <target state="translated">zebra</target>
        </trans-unit>
        <trans-unit id="f13e27693c85aed522df8c3fcb0bb0110ca54e14" translate="yes" xml:space="preserve">
          <source>zip</source>
          <target state="translated">zip</target>
        </trans-unit>
        <trans-unit id="1abe74473dcd47570993fe227357e8340418b7f4" translate="yes" xml:space="preserve">
          <source>~/.git-credentials</source>
          <target state="translated">~/.git-credentials</target>
        </trans-unit>
        <trans-unit id="9e794d254d2ea7f1b185c970ca6ed90747ac8823" translate="yes" xml:space="preserve">
          <source>~/.gitconfig</source>
          <target state="translated">~/.gitconfig</target>
        </trans-unit>
        <trans-unit id="afde40b275af0ad36ff7b6e7f32ecc59bab0a691" translate="yes" xml:space="preserve">
          <source>~/.gitconfig push.pushoption = c</source>
          <target state="translated">〜/ .gitconfig push.pushoption = c</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
