<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="git">
    <body>
      <group id="git">
        <trans-unit id="f4bb9a18f09e2a84cc163ecae438e47b1c4edd13" translate="yes" xml:space="preserve">
          <source>Remove only files ignored by Git. This may be useful to rebuild everything from scratch, but keep manually created files.</source>
          <target state="translated">Git に無視されたファイルだけを削除します。これはゼロからすべてを再構築するのに便利かもしれませんが、手動で作成したファイルは残しておきましょう。</target>
        </trans-unit>
        <trans-unit id="db3de663ed677f594653d0d9e2ee65cde68df92e" translate="yes" xml:space="preserve">
          <source>Remove remote branches that don&amp;rsquo;t have a local counterpart. For example a remote branch &lt;code&gt;tmp&lt;/code&gt; will be removed if a local branch with the same name doesn&amp;rsquo;t exist any more. This also respects refspecs, e.g. &lt;code&gt;git push --prune remote refs/heads/*:refs/tmp/*&lt;/code&gt; would make sure that remote &lt;code&gt;refs/tmp/foo&lt;/code&gt; will be removed if &lt;code&gt;refs/heads/foo&lt;/code&gt; doesn&amp;rsquo;t exist.</source>
          <target state="translated">ローカルに対応するものがないリモートブランチを削除します。たとえば、同じ名前のローカルブランチがもう存在しない場合、リモートブランチの &lt;code&gt;tmp&lt;/code&gt; は削除されます。これは、refspecも尊重します。たとえば、 &lt;code&gt;git push --prune remote refs/heads/*:refs/tmp/*&lt;/code&gt; は、 &lt;code&gt;refs/heads/foo&lt;/code&gt; が存在しない場合にリモート &lt;code&gt;refs/tmp/foo&lt;/code&gt; が確実に削除されるようにします。</target>
        </trans-unit>
        <trans-unit id="2919c677f0cd57d3ef223926e7768e681a692562" translate="yes" xml:space="preserve">
          <source>Remove the file from the index even when the working directory still has such a file. (Implies --remove.)</source>
          <target state="translated">作業ディレクトリにそのようなファイルが残っている場合でも、そのファイルをインデックスから削除します。(--removeを意味する)。</target>
        </trans-unit>
        <trans-unit id="164a03cc0aa02b0fdd552e7429c1ea851b7d7d46" translate="yes" xml:space="preserve">
          <source>Remove the given section from the configuration file.</source>
          <target state="translated">設定ファイルから指定されたセクションを削除します。</target>
        </trans-unit>
        <trans-unit id="499242d7995d63aad1acd16a991a3d6fcb048be8" translate="yes" xml:space="preserve">
          <source>Remove the line matching the key from config file.</source>
          <target state="translated">設定ファイルからキーに一致する行を削除します。</target>
        </trans-unit>
        <trans-unit id="9012d0fb42a36221745fbb3295fa2024a72211df" translate="yes" xml:space="preserve">
          <source>Remove the notes for given objects (defaults to HEAD). When giving zero or one object from the command line, this is equivalent to specifying an empty note message to the &lt;code&gt;edit&lt;/code&gt; subcommand.</source>
          <target state="translated">指定されたオブジェクトのメモを削除します（デフォルトはHEAD）。コマンドラインからゼロまたは1つのオブジェクトを指定する場合、これは &lt;code&gt;edit&lt;/code&gt; サブコマンドに空のノートメッセージを指定することと同じです。</target>
        </trans-unit>
        <trans-unit id="b516eb38e36b7b4419cbc8b6cb246b5741dd75c3" translate="yes" xml:space="preserve">
          <source>Remove the original refs backed up by git-filter-branch: say &lt;code&gt;git
for-each-ref --format=&quot;%(refname)&quot; refs/original/ | xargs -n 1 git
update-ref -d&lt;/code&gt;.</source>
          <target state="translated">git-filter-branchによってバックアップされた元の参照を削除します： &lt;code&gt;git for-each-ref --format=&quot;%(refname)&quot; refs/original/ | xargs -n 1 git update-ref -d&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f5271d5dabe5bf4126a68baa1d1f5cc6eedea4a6" translate="yes" xml:space="preserve">
          <source>Remove the remote named &amp;lt;name&amp;gt;. All remote-tracking branches and configuration settings for the remote are removed.</source>
          <target state="translated">&amp;lt;name&amp;gt;という名前のリモートを削除します。すべてのリモート追跡ブランチとリモートの構成設定が削除されます。</target>
        </trans-unit>
        <trans-unit id="55f1c43ced88c466a9b48b12744508e7df191628" translate="yes" xml:space="preserve">
          <source>Remove the upstream information for &amp;lt;branchname&amp;gt;. If no branch is specified it defaults to the current branch.</source>
          <target state="translated">&amp;lt;branchname&amp;gt;のアップストリーム情報を削除します。ブランチが指定されていない場合、デフォルトで現在のブランチになります。</target>
        </trans-unit>
        <trans-unit id="7dd660439147162be4964d5d4a2d3c419e5791f0" translate="yes" xml:space="preserve">
          <source>Remove unnecessary whitespace</source>
          <target state="translated">不要な空白を削除する</target>
        </trans-unit>
        <trans-unit id="d76bb29e1084aa7b85896360764953783a4152de" translate="yes" xml:space="preserve">
          <source>Remove untracked files from the working tree</source>
          <target state="translated">作業ツリーからトラックされていないファイルを削除する</target>
        </trans-unit>
        <trans-unit id="e317f2faafb831e4cbd09ebccd9fa3144e930ab8" translate="yes" xml:space="preserve">
          <source>Removed content is represented by lines beginning with &quot;-&quot;. You can prevent staging their removal by converting the &quot;-&quot; to a &quot; &quot; (space).</source>
          <target state="translated">削除されたコンテンツは、&quot;-&quot;で始まる行で表されます。この&quot;-&quot;を&quot; &quot;(スペース)に変換することで、削除の演出を防ぐことができます。</target>
        </trans-unit>
        <trans-unit id="078d2cf1e943764a2f97b429a98d1c54fe3fc4b4" translate="yes" xml:space="preserve">
          <source>Removes all &lt;code&gt;*.txt&lt;/code&gt; files from the index that are under the &lt;code&gt;Documentation&lt;/code&gt; directory and any of its subdirectories.</source>
          <target state="translated">&lt;code&gt;Documentation&lt;/code&gt; ディレクトリとそのサブディレクトリのいずれかにあるインデックスからすべての &lt;code&gt;*.txt&lt;/code&gt; ファイルを削除します。</target>
        </trans-unit>
        <trans-unit id="b7b4dacce459fd9e247be7781aa6ab7a83d66ed0" translate="yes" xml:space="preserve">
          <source>Removing files that have disappeared from the filesystem</source>
          <target state="translated">ファイルシステムから消えたファイルを削除する</target>
        </trans-unit>
        <trans-unit id="3225190bfc565c2a8dc8b2fcac1b38dcbf9dd0d7" translate="yes" xml:space="preserve">
          <source>Rename detection options for git-diff and git-diff-tree. The default is ('-M'); set it to ('-C') or ('-C', '-C') to also detect copies, or set it to () i.e. empty list if you don&amp;rsquo;t want to have renames detection.</source>
          <target state="translated">git-diffおよびgit-diff-treeの検出オプションの名前を変更します。デフォルトは（ '-M'）です。（ '-C'）または（ '-C'、 '-C'）に設定してコピーも検出するか、（）に設定します。つまり、名前の変更を検出したくない場合は空のリストに設定します。</target>
        </trans-unit>
        <trans-unit id="8ccf039fc07f889e68756c36ea6201967b32f105" translate="yes" xml:space="preserve">
          <source>Rename the given section to a new name.</source>
          <target state="translated">与えられたセクションの名前を新しい名前に変更します。</target>
        </trans-unit>
        <trans-unit id="141bf3674e223333500e19c5eb60f38f2c848a7a" translate="yes" xml:space="preserve">
          <source>Rename the remote named &amp;lt;old&amp;gt; to &amp;lt;new&amp;gt;. All remote-tracking branches and configuration settings for the remote are updated.</source>
          <target state="translated">&amp;lt;old&amp;gt;という名前のリモートの名前を&amp;lt;new&amp;gt;に変更します。すべてのリモート追跡ブランチとリモートの構成設定が更新されます。</target>
        </trans-unit>
        <trans-unit id="3dc385accd1a9a34d691dc85a7cf993a198b2f01" translate="yes" xml:space="preserve">
          <source>Renamed and copied directories are not detected by Git and hence not tracked when committing to SVN. I do not plan on adding support for this as it&amp;rsquo;s quite difficult and time-consuming to get working for all the possible corner cases (Git doesn&amp;rsquo;t do it, either). Committing renamed and copied files is fully supported if they&amp;rsquo;re similar enough for Git to detect them.</source>
          <target state="translated">名前を変更してコピーしたディレクトリはGitによって検出されないため、SVNへのコミット時に追跡されません。可能性のあるすべてのコーナーケースに対応するのは非常に困難で時間がかかるため、これに対するサポートを追加する予定はありません（Gitもそれを行いません）。名前が変更されてコピーされたファイルのコミットは、Gitがそれらを検出するのに十分類似している場合に完全にサポートされます。</target>
        </trans-unit>
        <trans-unit id="4a51a71032e050546d92c69d4de0167dd63ce59a" translate="yes" xml:space="preserve">
          <source>Renamed or copied entries have the following format:</source>
          <target state="translated">名前の変更やコピーされたエントリは、以下の形式になります。</target>
        </trans-unit>
        <trans-unit id="226701a0627a0c80ce4e0de29a5f8995d1cc94ec" translate="yes" xml:space="preserve">
          <source>Renames an existing file or subdirectory to a different location within the branch. The existing file or directory must exist. If the destination exists it will be replaced by the source directory.</source>
          <target state="translated">既存のファイルやサブディレクトリの名前を、ブランチ内の別の場所に変更します。既存のファイルまたはディレクトリが存在する必要があります。宛先が存在する場合は、ソースディレクトリに置き換えられます。</target>
        </trans-unit>
        <trans-unit id="7f74fd002fd53242d75fe672215f240c564dd1ec" translate="yes" xml:space="preserve">
          <source>Reordering and editing commits usually creates untested intermediate steps. You may want to check that your history editing did not break anything by running a test, or at least recompiling at intermediate points in history by using the &quot;exec&quot; command (shortcut &quot;x&quot;). You may do so by creating a todo list like this one:</source>
          <target state="translated">コミットを並べ替えたり編集したりすると、通常はテストされていない中間のステップが発生します。履歴の編集が何も壊れていないことを確認するには、テストを実行するか、少なくとも履歴の中間地点で &quot;exec&quot; コマンド (ショートカット &quot;x&quot;)を使って再コンパイルするとよいでしょう。このようなToDoリストを作成することで、そうすることができます。</target>
        </trans-unit>
        <trans-unit id="e58cc3e9504477ac39c3fae4556406d9e87fe8d4" translate="yes" xml:space="preserve">
          <source>Reordering file diffs that make up a patch does not affect the ID. In particular, two patches produced by comparing the same two trees with two different settings for &quot;-O&amp;lt;orderfile&amp;gt;&quot; result in the same patch ID signature, thereby allowing the computed result to be used as a key to index some meta-information about the change between the two trees;</source>
          <target state="translated">パッチを構成するファイルの差分を並べ替えても、IDには影響しません。特に、同じ2つのツリーを「-O &amp;lt;orderfile&amp;gt;」の2つの異なる設定と比較して作成された2つのパッチは、同じパッチIDシグネチャを生成するため、計算結果をキーとして使用して、 2本の木の間の変化;</target>
        </trans-unit>
        <trans-unit id="5727ab28a85a139867f62da8126eb9354b33a57a" translate="yes" xml:space="preserve">
          <source>Reordering or selecting from a patch series</source>
          <target state="translated">パッチシリーズの並び替えや選択</target>
        </trans-unit>
        <trans-unit id="25df8871189ca5637ebc8cd7aea9cae824ef4545" translate="yes" xml:space="preserve">
          <source>Repacking Historical Data</source>
          <target state="translated">履歴データのリパック</target>
        </trans-unit>
        <trans-unit id="9421c86863fd32deff3fd89fb282f96023d8e85d" translate="yes" xml:space="preserve">
          <source>Repeat the last two steps until your working tree is clean.</source>
          <target state="translated">作業ツリーがきれいになるまで、最後の2つのステップを繰り返します。</target>
        </trans-unit>
        <trans-unit id="834462c9f22bc02c77a9880295a7368517cb2349" translate="yes" xml:space="preserve">
          <source>Replace an existing tag with the given name (instead of failing)</source>
          <target state="translated">既存のタグを指定された名前で置き換える(失敗する代わりに</target>
        </trans-unit>
        <trans-unit id="7cf4729941401b21c05e226cfd4468a69f10bdc9" translate="yes" xml:space="preserve">
          <source>Replace each parent &lt;code&gt;P&lt;/code&gt; of &lt;code&gt;C'&lt;/code&gt; with its simplification &lt;code&gt;P'&lt;/code&gt;. In the process, drop parents that are ancestors of other parents or that are root commits TREESAME to an empty tree, and remove duplicates, but take care to never drop all parents that we are TREESAME to.</source>
          <target state="translated">&lt;code&gt;C'&lt;/code&gt; 各親 &lt;code&gt;P&lt;/code&gt; を単純化 &lt;code&gt;P'&lt;/code&gt; で置き換えます。このプロセスでは、他の親の祖先である親またはルートである親をドロップしてTREESAMEを空のツリーにコミットし、重複を削除しますが、TREESAMEの親をすべてドロップしないように注意してください。</target>
        </trans-unit>
        <trans-unit id="2f9605c49f9b2a3f616b81433e85ca64645d76b1" translate="yes" xml:space="preserve">
          <source>Replace the tip of the current branch by creating a new commit. The recorded tree is prepared as usual (including the effect of the &lt;code&gt;-i&lt;/code&gt; and &lt;code&gt;-o&lt;/code&gt; options and explicit pathspec), and the message from the original commit is used as the starting point, instead of an empty message, when no other message is specified from the command line via options such as &lt;code&gt;-m&lt;/code&gt;, &lt;code&gt;-F&lt;/code&gt;, &lt;code&gt;-c&lt;/code&gt;, etc. The new commit has the same parents and author as the current one (the &lt;code&gt;--reset-author&lt;/code&gt; option can countermand this).</source>
          <target state="translated">新しいコミットを作成して、現在のブランチの先端を置き換えます。記録されたツリーは通常どおり準備され（ &lt;code&gt;-i&lt;/code&gt; および &lt;code&gt;-o&lt;/code&gt; オプションと明示的なpathspec の影響を含みます）、他のメッセージが指定されていない場合、空のメッセージではなく、元のコミットからのメッセージが開始点として使用されますコマンドラインから &lt;code&gt;-m&lt;/code&gt; 、 &lt;code&gt;-F&lt;/code&gt; 、 &lt;code&gt;-c&lt;/code&gt; などのオプションを介して。新しいコミットは現在のものと同じ親と作成者を持っています（ &lt;code&gt;--reset-author&lt;/code&gt; オプションはこれに対抗できます）。</target>
        </trans-unit>
        <trans-unit id="f3cb9be6e266f94b26ae77ef70ae8b6ef0aebb1e" translate="yes" xml:space="preserve">
          <source>Replaced with long name (git-receive-pack, git-upload-pack, or git-upload-archive) of the service Git wants to invoke.</source>
          <target state="translated">Git が起動したいサービスの長い名前 (git-receive-pack,git-upload-pack,あるいは git-upload-archive)で置き換えます。</target>
        </trans-unit>
        <trans-unit id="bb8b07a94b19262ae05804fd3dbbad7507b398f9" translate="yes" xml:space="preserve">
          <source>Replaced with name (receive-pack, upload-pack, or upload-archive) of the service Git wants to invoke.</source>
          <target state="translated">Git が起動したいサービスの名前 (receive-pack、upload-pack、upload-archive)に置き換えます。</target>
        </trans-unit>
        <trans-unit id="daa118b2fa4fcb83d5d989f3e2085ec4ffc46e78" translate="yes" xml:space="preserve">
          <source>Replacement references will be used by default by all Git commands except those doing reachability traversal (prune, pack transfer and fsck).</source>
          <target state="translated">置換参照は、リーチャビリティ・トラバーサルを行うコマンド (prune、pack transfer、fsck)以外のすべての Git コマンドでデフォルトで使用されます。</target>
        </trans-unit>
        <trans-unit id="1c7de5212a432b2bb1d31f5a918c389962b1d1aa" translate="yes" xml:space="preserve">
          <source>Report all removed objects.</source>
          <target state="translated">削除されたオブジェクトをすべて報告します。</target>
        </trans-unit>
        <trans-unit id="7cf59cb5c9b7cd37a64d08b6f1df2d863445c6dc" translate="yes" xml:space="preserve">
          <source>Report bugs to the Git mailing list &amp;lt;&lt;a href=&quot;mailto:git@vger.kernel.org&quot;&gt;git@vger.kernel.org&lt;/a&gt;&amp;gt; where the development and maintenance is primarily done. You do not have to be subscribed to the list to send a message there. See the list archive at &lt;a href=&quot;https://lore.kernel.org/git&quot;&gt;https://lore.kernel.org/git&lt;/a&gt; for previous bug reports and other discussions.</source>
          <target state="translated">開発とメンテナンスが主に行われているGitメーリングリスト&amp;lt; &lt;a href=&quot;mailto:git@vger.kernel.org&quot;&gt;git@vger.kernel.org&lt;/a&gt; &amp;gt;にバグを報告してください。リストにメッセージを送信するためにリストに登録する必要はありません。以前のバグレポートやその他の議論については、&lt;a href=&quot;https://lore.kernel.org/git&quot;&gt;https：//lore.kernel.org/gitに&lt;/a&gt;あるリストアーカイブを参照してください。</target>
        </trans-unit>
        <trans-unit id="9c34aa6a8d095f4c3d50ca22d6cbaa490bb7d9e6" translate="yes" xml:space="preserve">
          <source>Report in more detail:</source>
          <target state="translated">詳細を報告します。</target>
        </trans-unit>
        <trans-unit id="00d1a1b2ba790dc8a5d0ef6f48b27324107dfa43" translate="yes" xml:space="preserve">
          <source>Report on the success or failure of the password. If the credential allowed the operation to complete successfully, then it can be marked with an &quot;approve&quot; action to tell &lt;code&gt;git
credential&lt;/code&gt; to reuse it in its next invocation. If the credential was rejected during the operation, use the &quot;reject&quot; action so that &lt;code&gt;git credential&lt;/code&gt; will ask for a new password in its next invocation. In either case, &lt;code&gt;git credential&lt;/code&gt; should be fed with the credential description obtained from step (2) (which also contain the ones provided in step (1)).</source>
          <target state="translated">パスワードの成功または失敗について報告します。資格情報によって操作が正常に完了した場合は、「承認」アクションでマークを付けて、 &lt;code&gt;git credential&lt;/code&gt; に次の呼び出しで再利用するように指示できます。クレデンシャルが操作中に拒否された場合は、「reject」アクションを使用して、 &lt;code&gt;git credential&lt;/code&gt; が次回の呼び出しで新しいパスワードを要求するようにします。どちらの場合でも、 &lt;code&gt;git credential&lt;/code&gt; には、ステップ（2）から取得したクレデンシャルの説明を入力する必要があります（これには、ステップ（1）で提供されたものも含まれます）。</target>
        </trans-unit>
        <trans-unit id="d2999561ae6989540b2fd61f56808ce48ec59875" translate="yes" xml:space="preserve">
          <source>Report progress to stderr.</source>
          <target state="translated">stderrに進捗状況を報告します。</target>
        </trans-unit>
        <trans-unit id="23ca6237e7b4d09b8d3d4523a8b69c6b949c38b4" translate="yes" xml:space="preserve">
          <source>Report progress to stderr. By default, only a message about the current patch being applied will be printed. This option will cause additional information to be reported.</source>
          <target state="translated">stderr に進捗状況を報告します。デフォルトでは、現在適用されているパッチに関するメッセージのみが表示されます。このオプションを使用すると、追加の情報が報告されます。</target>
        </trans-unit>
        <trans-unit id="40a5b594b81a1c53f8bc61470ed2acd9caeb657d" translate="yes" xml:space="preserve">
          <source>Report root nodes.</source>
          <target state="translated">ルートノードを報告します。</target>
        </trans-unit>
        <trans-unit id="f3f7b1acaa97f30c6a4351eea727e4482f68baad" translate="yes" xml:space="preserve">
          <source>Report tags.</source>
          <target state="translated">タグを報告します。</target>
        </trans-unit>
        <trans-unit id="ca0ca9c619773e28411f3305d3cdb605dc8f7d58" translate="yes" xml:space="preserve">
          <source>Report the list of objects being walked locally and the list of objects successfully sent to the remote repository.</source>
          <target state="translated">ローカルで歩行中のオブジェクトのリストと、リモートリポジトリに正常に送信されたオブジェクトのリストをレポートします。</target>
        </trans-unit>
        <trans-unit id="b0782f7c4e5f1bf3ea56caef9403677659089e74" translate="yes" xml:space="preserve">
          <source>Report the names of files as they are moved.</source>
          <target state="translated">移動したファイルの名前を報告します。</target>
        </trans-unit>
        <trans-unit id="3f95107453bf160f40698d26a88098aaa480cce8" translate="yes" xml:space="preserve">
          <source>Report what is being added and removed from index.</source>
          <target state="translated">インデックスから何を追加・削除しているかを報告します。</target>
        </trans-unit>
        <trans-unit id="d567f68fa956f7f96b358a6cc234fa317f99710f" translate="yes" xml:space="preserve">
          <source>Report what is downloaded.</source>
          <target state="translated">ダウンロードしたものを報告します。</target>
        </trans-unit>
        <trans-unit id="da402275b11a467df24029cc41a475356773c185" translate="yes" xml:space="preserve">
          <source>Reporting bugs</source>
          <target state="translated">バグの報告</target>
        </trans-unit>
        <trans-unit id="c91e6e6a538a5087a64a99718ae975966b761c1e" translate="yes" xml:space="preserve">
          <source>Repositories</source>
          <target state="translated">Repositories</target>
        </trans-unit>
        <trans-unit id="cc18a74ca85a5fe1dba71937009d7cf5c036f7f7" translate="yes" xml:space="preserve">
          <source>Repositories and branches</source>
          <target state="translated">リポジトリと支店</target>
        </trans-unit>
        <trans-unit id="3fb88b595be10aadddb6789d4ff575757e80830d" translate="yes" xml:space="preserve">
          <source>Repository administration</source>
          <target state="translated">リポジトリの管理</target>
        </trans-unit>
        <trans-unit id="df92bd52a2917a26c9495edc89977fc3eba4e3de" translate="yes" xml:space="preserve">
          <source>Repository maintenance</source>
          <target state="translated">リポジトリのメンテナンス</target>
        </trans-unit>
        <trans-unit id="9b33ca61629f451364a09b37b4533d1a6f2f1429" translate="yes" xml:space="preserve">
          <source>Repository specific configuration file.</source>
          <target state="translated">リポジトリ固有の設定ファイル。</target>
        </trans-unit>
        <trans-unit id="c748d884d06ef27fef856a77e77414daf14ef261" translate="yes" xml:space="preserve">
          <source>Repository specific configuration file. This file is ignored if $GIT_COMMON_DIR is set and &quot;$GIT_COMMON_DIR/config&quot; will be used instead.</source>
          <target state="translated">リポジトリ固有の設定ファイル。GIT_COMMON_DIRが設定されている場合、このファイルは無視され、代わりに&quot;$GIT_COMMON_DIR/config &quot;が使用されます。</target>
        </trans-unit>
        <trans-unit id="7394e3ce9096d2546e81d264f6ebc4e2faebef57" translate="yes" xml:space="preserve">
          <source>Represents a repository accessed using the helper program &quot;git-ssl foo.example /bar&quot;. The type of request can be determined by the helper using environment variables (see above).</source>
          <target state="translated">ヘルパープログラム &quot;git-ssl foo.example /bar&quot; を使用してアクセスしたリポジトリを表します。リクエストの種類は、環境変数を使用してヘルパーが決めることができます (上記を参照ください)。</target>
        </trans-unit>
        <trans-unit id="9c983b3418b85a3f9b204dd1418f6237fbf7bdab" translate="yes" xml:space="preserve">
          <source>Represents a repository with path /repo accessed using the helper program &quot;git-server-alias foo&quot;. The hostname for the remote server passed in the protocol stream will be &quot;foo&quot; (this allows multiple virtual Git servers to share a link-level address).</source>
          <target state="translated">パス /repo を持つリポジトリを表し、ヘルパープログラム &quot;git-server-alias foo&quot; を使用してアクセスします。プロトコルストリームで渡されるリモートサーバーのホスト名は &quot;foo&quot; となります (これにより、複数の仮想 Git サーバーがリンクレベルのアドレスを共有できるようになります)。</target>
        </trans-unit>
        <trans-unit id="1362aa2b16d7c974af6da4e16e1f2f2e57cebac0" translate="yes" xml:space="preserve">
          <source>Represents a repository with path /repo accessed using the helper program &quot;git-server-alias foo&quot;. The path to the repository and type of request are not passed on the command line but as part of the protocol stream, as usual with git:// protocol.</source>
          <target state="translated">パス /repo で、ヘルパープログラム &quot;git-server-alias foo&quot; を使用してアクセスしたリポジトリを表します。リポジトリへのパスとリクエストの種類は、コマンドラインではなくプロトコルストリームの一部として渡されます。</target>
        </trans-unit>
        <trans-unit id="d09e808fea175aed6c0426870e406a54311c7cc5" translate="yes" xml:space="preserve">
          <source>Represents a repository with path &lt;code&gt;/repo with spaces&lt;/code&gt; accessed using the helper program &quot;git-server-alias foo&quot;. The hostname for the remote server passed in the protocol stream will be &quot;foo&quot; (this allows multiple virtual Git servers to share a link-level address).</source>
          <target state="translated">ヘルパープログラム「git-server-alias foo」を使用してアクセスされる &lt;code&gt;/repo with spaces&lt;/code&gt; を含むパス/ repoを持つリポジトリを表します。プロトコルストリームで渡されるリモートサーバーのホスト名は「foo」になります（これにより、複数の仮想Gitサーバーがリンクレベルのアドレスを共有できるようになります）。</target>
        </trans-unit>
        <trans-unit id="2efb065a9a5c22367444476c2d3425647648ecad" translate="yes" xml:space="preserve">
          <source>Represents repository with path /somerepo accessible over git protocol at abstract namespace address /git-server.</source>
          <target state="translated">パス /somerepo を持つリポジトリを表し、抽象的な名前空間アドレス /git-server に git プロトコルでアクセスできるようにします。</target>
        </trans-unit>
        <trans-unit id="19e1ed64e856e6f12f5bac77f5299cded049014e" translate="yes" xml:space="preserve">
          <source>Request a single valid revision from the user, and set the &lt;code&gt;REVISION&lt;/code&gt; environment variable. In other aspects this option is similar to &lt;code&gt;argPrompt&lt;/code&gt;, and can be used together with it.</source>
          <target state="translated">ユーザーに単一の有効なリビジョンを要求し、 &lt;code&gt;REVISION&lt;/code&gt; 環境変数を設定します。他の側面では、このオプションは &lt;code&gt;argPrompt&lt;/code&gt; に似ており、それと一緒に使用できます。</target>
        </trans-unit>
        <trans-unit id="197fbdc9cd47b824a513f297f7a38d2715e6a37f" translate="yes" xml:space="preserve">
          <source>Request a string argument from the user, and pass it to the tool through the &lt;code&gt;ARGS&lt;/code&gt; environment variable. Since requesting an argument implies confirmation, the &lt;code&gt;confirm&lt;/code&gt; option has no effect if this is enabled. If the option is set to &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;yes&lt;/code&gt;, or &lt;code&gt;1&lt;/code&gt;, the dialog uses a built-in generic prompt; otherwise the exact value of the variable is used.</source>
          <target state="translated">ユーザーに文字列引数を要求し、それを &lt;code&gt;ARGS&lt;/code&gt; 環境変数を介してツールに渡します。引数の要求は確認を意味するため、これが有効になっている場合、 &lt;code&gt;confirm&lt;/code&gt; オプションは効果がありません。オプションが &lt;code&gt;true&lt;/code&gt; 、 &lt;code&gt;yes&lt;/code&gt; 、または &lt;code&gt;1&lt;/code&gt; に設定されている場合、ダイアログは組み込みの汎用プロンプトを使用します。それ以外の場合は、変数の正確な値が使用されます。</target>
        </trans-unit>
        <trans-unit id="af76b31829a8dd5cf3635494d51216915adc4665" translate="yes" xml:space="preserve">
          <source>Request the helper to check connectivity of a clone.</source>
          <target state="translated">クローンの接続性を確認するためにヘルパーを要求します。</target>
        </trans-unit>
        <trans-unit id="c38d97d1cdb590002eb1b4ddac901b5b9f2b5245" translate="yes" xml:space="preserve">
          <source>Request the helper to perform a force update. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">ヘルパーに強制更新を要求します。デフォルトは &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ca0eaa75282457b7cf284de87b05023d92c795d5" translate="yes" xml:space="preserve">
          <source>Requesting credentials</source>
          <target state="translated">信任状を要求する</target>
        </trans-unit>
        <trans-unit id="c253c74295e6d26ab1e36992edc46329d8f4d039" translate="yes" xml:space="preserve">
          <source>Requests writing one file revision to the packfile. The revision is not connected to any commit; this connection must be formed in a subsequent &lt;code&gt;commit&lt;/code&gt; command by referencing the blob through an assigned mark.</source>
          <target state="translated">1つのファイルリビジョンをpackfileに書き込むように要求します。リビジョンはコミットに関連付けられていません。この接続は、割り当てられたマークを介してblobを参照する &lt;code&gt;commit&lt;/code&gt; により、後続のcommitコマンドで形成する必要があります。</target>
        </trans-unit>
        <trans-unit id="f1bfe97ddeff74e34e5c2b1e166cee78ba2487b9" translate="yes" xml:space="preserve">
          <source>Require that fast-import supports the specified feature, or abort if it does not.</source>
          <target state="translated">fast-import が指定された機能をサポートしていることを要求するか、サポートしていない場合はアボートします。</target>
        </trans-unit>
        <trans-unit id="6316856b66b77d95afc0c3453708e583c5e94170" translate="yes" xml:space="preserve">
          <source>Require that the backend support the &lt;code&gt;get-mark&lt;/code&gt;, &lt;code&gt;cat-blob&lt;/code&gt;, or &lt;code&gt;ls&lt;/code&gt; command respectively. Versions of fast-import not supporting the specified command will exit with a message indicating so. This lets the import error out early with a clear message, rather than wasting time on the early part of an import before the unsupported command is detected.</source>
          <target state="translated">バックエンドがそれぞれ &lt;code&gt;get-mark&lt;/code&gt; 、 &lt;code&gt;cat-blob&lt;/code&gt; 、または &lt;code&gt;ls&lt;/code&gt; コマンドをサポートすることを要求します。指定されたコマンドをサポートしないfast-importのバージョンは、そのことを示すメッセージで終了します。これにより、サポートされていないコマンドが検出される前にインポートの早い段階で時間を浪費するのではなく、明確なメッセージでインポートエラーを早期に排除できます。</target>
        </trans-unit>
        <trans-unit id="237f6cde559246995a9ad3fe3a19f1f678ef3d45" translate="yes" xml:space="preserve">
          <source>Require that the backend support the &lt;code&gt;notemodify&lt;/code&gt; (N) subcommand to the &lt;code&gt;commit&lt;/code&gt; command. Versions of fast-import not supporting notes will exit with a message indicating so.</source>
          <target state="translated">バックエンドが &lt;code&gt;commit&lt;/code&gt; コマンドに対する &lt;code&gt;notemodify&lt;/code&gt; （N）サブコマンドをサポートすることを要求します。メモをサポートしないfast-importのバージョンは、そのことを示すメッセージで終了します。</target>
        </trans-unit>
        <trans-unit id="2bdd979f5fb070ff3c7f85169894f3f721c9ebce" translate="yes" xml:space="preserve">
          <source>Requires &lt;code&gt;--stdout&lt;/code&gt;. Omits certain objects (usually blobs) from the resulting packfile. See &lt;a href=&quot;git-rev-list&quot;&gt;git-rev-list[1]&lt;/a&gt; for valid &lt;code&gt;&amp;lt;filter-spec&amp;gt;&lt;/code&gt; forms.</source>
          <target state="translated">&lt;code&gt;--stdout&lt;/code&gt; が必要です。結果のpackfileから特定のオブジェクト（通常はblob）を省略します。有効な &lt;code&gt;&amp;lt;filter-spec&amp;gt;&lt;/code&gt; 形式については、&lt;a href=&quot;git-rev-list&quot;&gt;git-rev-list [1]&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="fc9ece81e668f48ca0c9284b17719cfe0a863c67" translate="yes" xml:space="preserve">
          <source>Reserved characters are: &quot;%&quot; (used for encoding), &quot;+&quot; (can be used to encode SPACE), all whitespace characters as defined in Perl, including SP, TAB and LF, (used to separate fields in a record).</source>
          <target state="translated">予約文字は以下の通りです。&quot;(エンコードに使用)、&quot;+&quot; (スペースのエンコードに使用)、Perlで定義されているすべての空白文字(SP、TAB、LFを含む)、 (レコード内のフィールドを分離するために使用)。</target>
        </trans-unit>
        <trans-unit id="b42218495bd708d0856afd1fabb98c3577f4ad60" translate="yes" xml:space="preserve">
          <source>Reserved instruction</source>
          <target state="translated">予約命令</target>
        </trans-unit>
        <trans-unit id="ade58d6ef106ac4468b520e2f9f718942ef96589" translate="yes" xml:space="preserve">
          <source>Reset &amp;lt;branchname&amp;gt; to &amp;lt;startpoint&amp;gt;, even if &amp;lt;branchname&amp;gt; exists already. Without &lt;code&gt;-f&lt;/code&gt;, &lt;code&gt;git branch&lt;/code&gt; refuses to change an existing branch. In combination with &lt;code&gt;-d&lt;/code&gt; (or &lt;code&gt;--delete&lt;/code&gt;), allow deleting the branch irrespective of its merged status. In combination with &lt;code&gt;-m&lt;/code&gt; (or &lt;code&gt;--move&lt;/code&gt;), allow renaming the branch even if the new branch name already exists, the same applies for &lt;code&gt;-c&lt;/code&gt; (or &lt;code&gt;--copy&lt;/code&gt;).</source>
          <target state="translated">&amp;lt;branchname&amp;gt;がすでに存在する場合でも、&amp;lt;branchname&amp;gt;を&amp;lt;startpoint&amp;gt;にリセットします。 &lt;code&gt;-f&lt;/code&gt; がないと、 &lt;code&gt;git branch&lt;/code&gt; は既存のブランチの変更を拒否します。 &lt;code&gt;-d&lt;/code&gt; （または &lt;code&gt;--delete&lt;/code&gt; ）と組み合わせて、マージされたステータスに関係なくブランチを削除できるようにします。 &lt;code&gt;-m&lt;/code&gt; （または &lt;code&gt;--move&lt;/code&gt; ）と組み合わせて、新しいブランチ名がすでに存在する場合でもブランチの名前を変更できるようにします。同じことが &lt;code&gt;-c&lt;/code&gt; （または &lt;code&gt;--copy&lt;/code&gt; ）にも当てはまります。</target>
        </trans-unit>
        <trans-unit id="9c000dded32d603bd2d66f7de30922c3049331d8" translate="yes" xml:space="preserve">
          <source>Reset a single file in the index</source>
          <target state="translated">インデックス内の単一ファイルをリセット</target>
        </trans-unit>
        <trans-unit id="b199a41a6acc73bab0e76970a8b89b9149933695" translate="yes" xml:space="preserve">
          <source>Reset an existing branch (or a new branch) to a specific revision. This command must be used to change a branch to a specific revision without making a commit on it.</source>
          <target state="translated">既存のブランチ (または新規ブランチ)を特定のリビジョンにリセットします。このコマンドは、ブランチをコミットせずに特定のリビジョンに変更するために使用しなければなりません。</target>
        </trans-unit>
        <trans-unit id="3caab3d6f602d251b347bcf8cb43ce25777589d7" translate="yes" xml:space="preserve">
          <source>Reset current HEAD to the specified state</source>
          <target state="translated">現在のHEADを指定された状態にリセットします。</target>
        </trans-unit>
        <trans-unit id="7000155564e143a5ed7b021bd65e423555a02d6b" translate="yes" xml:space="preserve">
          <source>Reset the conflict resolutions which rerere has recorded for the current conflict in &amp;lt;pathspec&amp;gt;.</source>
          <target state="translated">&amp;lt;pathspec&amp;gt;の現在の競合について、rerereが記録した競合解決をリセットします。</target>
        </trans-unit>
        <trans-unit id="4a789604fce06a1f57b66b342300476ce0a41423" translate="yes" xml:space="preserve">
          <source>Reset the metadata used by rerere if a merge resolution is to be aborted. Calling &lt;code&gt;git am [--skip|--abort]&lt;/code&gt; or &lt;code&gt;git rebase [--skip|--abort]&lt;/code&gt; will automatically invoke this command.</source>
          <target state="translated">マージ解決を中止する場合は、rerereが使用するメタデータをリセットします。呼び出し &lt;code&gt;git am [--skip|--abort]&lt;/code&gt; または &lt;code&gt;git rebase [--skip|--abort]&lt;/code&gt; は自動的にこのコマンドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="e58c6724a36573568d9a717f014941c665fe0e5c" translate="yes" xml:space="preserve">
          <source>Reset, restore and revert</source>
          <target state="translated">リセット、復元、元に戻す</target>
        </trans-unit>
        <trans-unit id="cfb6b4d825df9b6e5392392c169da218cc9ebb7e" translate="yes" xml:space="preserve">
          <source>Resets index entries and updates files in the working tree that are different between &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; and &lt;code&gt;HEAD&lt;/code&gt;. If a file that is different between &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; and &lt;code&gt;HEAD&lt;/code&gt; has local changes, reset is aborted.</source>
          <target state="translated">&lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; と &lt;code&gt;HEAD&lt;/code&gt; で異なる作業ツリーのインデックスエントリと更新ファイルをリセットします。 &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; と &lt;code&gt;HEAD&lt;/code&gt; で異なるファイルにローカルの変更がある場合、リセットは中止されます。</target>
        </trans-unit>
        <trans-unit id="37918ef314fe9073b027113123d9b71065a3aa0b" translate="yes" xml:space="preserve">
          <source>Resets the index and updates the files in the working tree that are different between &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; and &lt;code&gt;HEAD&lt;/code&gt;, but keeps those which are different between the index and working tree (i.e. which have changes which have not been added). If a file that is different between &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; and the index has unstaged changes, reset is aborted.</source>
          <target state="translated">インデックスをリセットし、 &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; と &lt;code&gt;HEAD&lt;/code&gt; で異なる作業ツリーのファイルを更新しますが、インデックスと作業ツリーで異なるファイル（つまり、追加されていない変更があるファイル）は保持します。 &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; とインデックスで異なるファイルにステージングされていない変更がある場合、リセットは中止されます。</target>
        </trans-unit>
        <trans-unit id="66814a725afb76705c792c5c5bff2effba54bba2" translate="yes" xml:space="preserve">
          <source>Resets the index and working tree. Any changes to tracked files in the working tree since &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; are discarded.</source>
          <target state="translated">インデックスと作業ツリーをリセットします。 &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; 以降の作業ツリー内の追跡ファイルへの変更は破棄されます。</target>
        </trans-unit>
        <trans-unit id="018c5d5ee267c3048a66b8317e0b378d380cebd3" translate="yes" xml:space="preserve">
          <source>Resets the index but not the working tree (i.e., the changed files are preserved but not marked for commit) and reports what has not been updated. This is the default action.</source>
          <target state="translated">インデックスをリセットしますが、作業ツリーはリセットされません (つまり、変更されたファイルは保存されますが、コミットのためにマークされていません)そして、更新されていないものを報告します。これがデフォルトのアクションです。</target>
        </trans-unit>
        <trans-unit id="367477f47d978611bcd2955ee4ebc351a609da8a" translate="yes" xml:space="preserve">
          <source>Resolve &quot;$GIT_DIR/&amp;lt;path&amp;gt;&quot; and takes other path relocation variables such as $GIT_OBJECT_DIRECTORY, $GIT_INDEX_FILE&amp;hellip;​ into account. For example, if $GIT_OBJECT_DIRECTORY is set to /foo/bar then &quot;git rev-parse --git-path objects/abc&quot; returns /foo/bar/abc.</source>
          <target state="translated">「$ GIT_DIR / &amp;lt;path&amp;gt;」を解決し、$ GIT_OBJECT_DIRECTORY、$ GIT_INDEX_FILE&amp;hellip;などの他のパス再配置変数を考慮に入れます。たとえば、$ GIT_OBJECT_DIRECTORYが/ foo / barに設定されている場合、「git rev-parse --git-path objects / abc」は/ foo / bar / abcを返します。</target>
        </trans-unit>
        <trans-unit id="c8bb6fc86c763639a02a3bc6b6e1886e0912fa99" translate="yes" xml:space="preserve">
          <source>Resolve the conflicts. Git will mark the conflicts in the working tree. Edit the files into shape and &lt;code&gt;git add&lt;/code&gt; them to the index. Use &lt;code&gt;git commit&lt;/code&gt; or &lt;code&gt;git merge --continue&lt;/code&gt; to seal the deal. The latter command checks whether there is a (interrupted) merge in progress before calling &lt;code&gt;git commit&lt;/code&gt;.</source>
          <target state="translated">競合を解決します。Gitは作業ツリーで競合をマークします。ファイルを整形して &lt;code&gt;git add&lt;/code&gt; インデックスに追加します。 &lt;code&gt;git commit&lt;/code&gt; または &lt;code&gt;git merge --continue&lt;/code&gt; を使用して契約を締結します。後者のコマンドは、 &lt;code&gt;git commit&lt;/code&gt; を呼び出す前に、進行中の（中断された）マージがあるかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="40be4fe30543d88c430c41f2a76b60f305a6a06a" translate="yes" xml:space="preserve">
          <source>Resolving a merge</source>
          <target state="translated">マージの解決</target>
        </trans-unit>
        <trans-unit id="3aa5d718d6655d399867529b5e479166f7b70223" translate="yes" xml:space="preserve">
          <source>Respect &lt;code&gt;include.*&lt;/code&gt; directives in config files when looking up values. Defaults to &lt;code&gt;off&lt;/code&gt; when a specific file is given (e.g., using &lt;code&gt;--file&lt;/code&gt;, &lt;code&gt;--global&lt;/code&gt;, etc) and &lt;code&gt;on&lt;/code&gt; when searching all config files.</source>
          <target state="translated">値を検索するときは、設定ファイルの &lt;code&gt;include.*&lt;/code&gt; ディレクティブを尊重してください。特定のファイルが指定さ &lt;code&gt;off&lt;/code&gt; 場合（たとえば、-- &lt;code&gt;--file&lt;/code&gt; 、-- &lt;code&gt;--global&lt;/code&gt; などを使用する場合）はデフォルトでオフになり、すべての構成ファイルを検索 &lt;code&gt;on&lt;/code&gt; 場合はオンになります。</target>
        </trans-unit>
        <trans-unit id="3821457277b56f085d69d5b77c2d88808f6181de" translate="yes" xml:space="preserve">
          <source>Respect any colors specified in the &lt;code&gt;--format&lt;/code&gt; option. The &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; field must be one of &lt;code&gt;always&lt;/code&gt;, &lt;code&gt;never&lt;/code&gt;, or &lt;code&gt;auto&lt;/code&gt; (if &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; is absent, behave as if &lt;code&gt;always&lt;/code&gt; was given).</source>
          <target state="translated">&lt;code&gt;--format&lt;/code&gt; オプションで指定された色を順守します。 &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; フィールドには、のいずれかでなければなりません &lt;code&gt;always&lt;/code&gt; 、 &lt;code&gt;never&lt;/code&gt; 、または &lt;code&gt;auto&lt;/code&gt; （場合 &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; 不在で、振る舞いがあるかのように &lt;code&gt;always&lt;/code&gt; 与えられました）。</target>
        </trans-unit>
        <trans-unit id="19c837ff313a7ba1f889a299cee54a40a7c6f84b" translate="yes" xml:space="preserve">
          <source>Responses to commands</source>
          <target state="translated">コマンドへの対応</target>
        </trans-unit>
        <trans-unit id="cc0464b7666785d6a76e9f773de6c54d764f7865" translate="yes" xml:space="preserve">
          <source>Restart the httpd instance and exit. Regenerate configuration files as necessary for spawning a new instance.</source>
          <target state="translated">httpd インスタンスを再起動して終了します。新しいインスタンスを生成するために必要な設定ファイルを再生成します。</target>
        </trans-unit>
        <trans-unit id="8887a5fdf01dac377097b251a845eb9047ab1106" translate="yes" xml:space="preserve">
          <source>Restart the rebasing process after having resolved a merge conflict.</source>
          <target state="translated">マージの競合を解決した後、リベース処理を再開します。</target>
        </trans-unit>
        <trans-unit id="d21d225ced39acf1075b76301dc02cbf10edbb3b" translate="yes" xml:space="preserve">
          <source>Restart the rebasing process by skipping the current patch.</source>
          <target state="translated">現在のパッチをスキップしてリベース処理を再開します。</target>
        </trans-unit>
        <trans-unit id="c1f6ec05a9a6600d16e6b449eaa642ea5102eab3" translate="yes" xml:space="preserve">
          <source>Restore specified paths in the working tree with some contents from a restore source. If a path is tracked but does not exist in the restore source, it will be removed to match the source.</source>
          <target state="translated">作業ツリー内の指定されたパスを、復元ソースから一部の内容で復元します。パスが追跡されているが復元ソースに存在しない場合は、ソースに一致するように削除されます。</target>
        </trans-unit>
        <trans-unit id="264c55416cc1f357f0822f338666c6b7bdbad148" translate="yes" xml:space="preserve">
          <source>Restore the original branch and abort the patching operation.</source>
          <target state="translated">元のブランチを復元して、パッチ操作を中止します。</target>
        </trans-unit>
        <trans-unit id="96e0fd08d6591454dd62291fbfc1b15a5b3e040c" translate="yes" xml:space="preserve">
          <source>Restore the working tree files with the content from the given tree. It is common to specify the source tree by naming a commit, branch or tag associated with it.</source>
          <target state="translated">指定したツリーの内容で作業ツリーファイルを復元します。ソースツリーに関連するコミット、ブランチ、タグを指定して指定するのが一般的です。</target>
        </trans-unit>
        <trans-unit id="37dff9bce765051722ec36426d7fa455df094071" translate="yes" xml:space="preserve">
          <source>Restore working tree files</source>
          <target state="translated">作業ツリーファイルの復元</target>
        </trans-unit>
        <trans-unit id="69b489de455beab1530c19815d63b57591075bcd" translate="yes" xml:space="preserve">
          <source>Restores the &lt;code&gt;unmerged&lt;/code&gt; or &lt;code&gt;needs updating&lt;/code&gt; state of a file during a merge if it was cleared by accident.</source>
          <target state="translated">誤って消去された場合、マージ中にファイルの &lt;code&gt;unmerged&lt;/code&gt; 状態または &lt;code&gt;needs updating&lt;/code&gt; 状態を復元します。</target>
        </trans-unit>
        <trans-unit id="9851dc086eda7e8d693a5cc6867fc0671874ff9d" translate="yes" xml:space="preserve">
          <source>Restrict delta matches based on &quot;islands&quot;. See DELTA ISLANDS below.</source>
          <target state="translated">島」に基づいてデルタのマッチを制限します。下記の「デルタ諸島」を参照してください。</target>
        </trans-unit>
        <trans-unit id="8b8a383fd6388c6ea73ba5d43ff2fb9ca48cf7d7" translate="yes" xml:space="preserve">
          <source>Restrict three-way merge by &lt;code&gt;git read-tree&lt;/code&gt; to happen only if there is no file-level merging required, instead of resolving merge for trivial cases and leaving conflicting files unresolved in the index.</source>
          <target state="translated">&lt;code&gt;git read-tree&lt;/code&gt; による3者間マージを、ファイルレベルのマージが不要な場合にのみ発生するように制限します。些細な場合にマージを解決して、競合するファイルをインデックスに解決しないままにします。</target>
        </trans-unit>
        <trans-unit id="3872426d236e98107658a5fa4ce3ec35943effaa" translate="yes" xml:space="preserve">
          <source>Restricted login shell for Git-only SSH access</source>
          <target state="translated">Git のみの SSH アクセスのための制限付きログインシェル</target>
        </trans-unit>
        <trans-unit id="8aededfb12d70887c4524cf03227b8b417c18d04" translate="yes" xml:space="preserve">
          <source>Result is different from the value produced by git 1.9 and older or produced when an &quot;unstable&quot; hash (see --unstable below) is configured - even when used on a diff output taken without any use of &quot;-O&amp;lt;orderfile&amp;gt;&quot;, thereby making existing databases storing such &quot;unstable&quot; or historical patch-ids unusable.</source>
          <target state="translated">結果はgit 1.9以前で生成された値、または「不安定な」ハッシュ（下記の--unstableを参照）が構成されたときに生成された値とは異なります。そのため、そのような「不安定」な、または過去のパッチIDを格納する既存のデータベースが使用できなくなります。</target>
        </trans-unit>
        <trans-unit id="dd0be3ab949b7f61e7a99aac2ba7a208d6ea3a63" translate="yes" xml:space="preserve">
          <source>Retrieve and store user credentials</source>
          <target state="translated">ユーザー資格情報の取得と保存</target>
        </trans-unit>
        <trans-unit id="5a212fd6a296588049eb570292b8fddf3b170728" translate="yes" xml:space="preserve">
          <source>Retrieves the URLs for a remote. Configurations for &lt;code&gt;insteadOf&lt;/code&gt; and &lt;code&gt;pushInsteadOf&lt;/code&gt; are expanded here. By default, only the first URL is listed.</source>
          <target state="translated">リモートのURLを取得します。ここでは、 &lt;code&gt;insteadOf&lt;/code&gt; と &lt;code&gt;pushInsteadOf&lt;/code&gt; の設定を展開しています。デフォルトでは、最初のURLのみがリストされます。</target>
        </trans-unit>
        <trans-unit id="0f444cb29e88624498c6ae42d5b37c68efa3bab0" translate="yes" xml:space="preserve">
          <source>Returns the commit in plain text mail format, suitable for applying with &lt;a href=&quot;git-am&quot;&gt;git-am[1]&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;git-am&quot;&gt;git-am [1]&lt;/a&gt;での適用に適したプレーンテキストメール形式でコミットを返します。</target>
        </trans-unit>
        <trans-unit id="9253efc397e5de345aa951a00d2c23f86bf7df99" translate="yes" xml:space="preserve">
          <source>Returns the raw data for the file in given repository, at given path and revision. Links to this action are marked &lt;code&gt;raw&lt;/code&gt;.</source>
          <target state="translated">指定されたパスとリビジョンで、指定されたリポジトリ内のファイルの生データを返します。このアクションへのリンクは &lt;code&gt;raw&lt;/code&gt; としてマークされます。</target>
        </trans-unit>
        <trans-unit id="5df164550e4b46ec040a3d56bf7256552cf4621c" translate="yes" xml:space="preserve">
          <source>Reuse recorded resolution of conflicted merges</source>
          <target state="translated">競合するマージの記録された解決策を再利用</target>
        </trans-unit>
        <trans-unit id="8616b41a55b6598a78826f975dbbf7f7f8695b39" translate="yes" xml:space="preserve">
          <source>Reverse CVS keyword expansion (e.g. $Revision: 1.2.3.4$ becomes $Revision$) in working CVS checkout before applying patch.</source>
          <target state="translated">パッチを適用する前に、動作中の CVS チェックアウトで CVS キーワードの展開を逆にします (例:$Revision:1.2.3.4$ は $Revision$ になります)。</target>
        </trans-unit>
        <trans-unit id="09d255659c37629cf7ad5a71d93e459ba7907206" translate="yes" xml:space="preserve">
          <source>Reverses the meaning of the &lt;code&gt;^&lt;/code&gt; prefix (or lack thereof) for all following revision specifiers, up to the next &lt;code&gt;--not&lt;/code&gt;.</source>
          <target state="translated">次の &lt;code&gt;--not&lt;/code&gt; まで、以降のすべてのリビジョン指定子の &lt;code&gt;^&lt;/code&gt; 接頭辞（またはその欠如）の意味を逆にします。</target>
        </trans-unit>
        <trans-unit id="f5ecc3a2c0ef8c576038e5331d800290aa1dbb34" translate="yes" xml:space="preserve">
          <source>Revert some existing commits</source>
          <target state="translated">いくつかの既存のコミットを元に戻す</target>
        </trans-unit>
        <trans-unit id="2d05a07b19af8782049520b85fa598b5aae8245a" translate="yes" xml:space="preserve">
          <source>Revert the changes done by commits from the fifth last commit in master (included) to the third last commit in master (included), but do not create any commit with the reverted changes. The revert only modifies the working tree and the index.</source>
          <target state="translated">master (含む)の 5 番目の最後のコミットから master (含む)の 3 番目の最後のコミットまでのコミットで行われた変更を元に戻しますが、元に戻した変更を含むコミットは作成しないでください。戻しは作業ツリーとインデックスを変更するだけです。</target>
        </trans-unit>
        <trans-unit id="d36b73a7d31ce14514491b7bd667f4a3a39a76f3" translate="yes" xml:space="preserve">
          <source>Revert the changes specified by the fourth last commit in HEAD and create a new commit with the reverted changes.</source>
          <target state="translated">HEADの4番目の最後のコミットで指定された変更を元に戻し、元に戻した変更で新しいコミットを作成します。</target>
        </trans-unit>
        <trans-unit id="7816a94047b619334a2511ddb1fb3870ada25153" translate="yes" xml:space="preserve">
          <source>Reverting a merge commit declares that you will never want the tree changes brought in by the merge. As a result, later merges will only bring in tree changes introduced by commits that are not ancestors of the previously reverted merge. This may or may not be what you want.</source>
          <target state="translated">マージのコミットを戻すと、マージによってもたらされたツリーの変更は絶対に行わないことを宣言します。その結果、それ以降のマージでは、以前に戻したマージの先祖ではないコミットによってもたらされたツリーの変更のみが反映されます。これは、あなたが望んでいることではないかもしれません。</target>
        </trans-unit>
        <trans-unit id="e1541e4f3b28e3bf9bf5cd6cdf1c6fa7c5066ac0" translate="yes" xml:space="preserve">
          <source>Review and edit each patch you&amp;rsquo;re about to send. Default is the value of &lt;code&gt;sendemail.annotate&lt;/code&gt;. See the CONFIGURATION section for &lt;code&gt;sendemail.multiEdit&lt;/code&gt;.</source>
          <target state="translated">送信する各パッチを確認および編集します。デフォルトは &lt;code&gt;sendemail.annotate&lt;/code&gt; の値です。 &lt;code&gt;sendemail.multiEdit&lt;/code&gt; のCONFIGURATIONセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="b78ae7131226d816b60a3640c70615147c2668fc" translate="yes" xml:space="preserve">
          <source>Revision range summary</source>
          <target state="translated">改訂範囲の概要</target>
        </trans-unit>
        <trans-unit id="0e507d58daf108f33aa81c2ab9d974a6ce0836d6" translate="yes" xml:space="preserve">
          <source>Revision shown. Defaults to HEAD.</source>
          <target state="translated">リビジョンが表示されます。デフォルトは HEAD です。</target>
        </trans-unit>
        <trans-unit id="2dba79611a64646631612329658c566246fbc9f0" translate="yes" xml:space="preserve">
          <source>Revisions</source>
          <target state="translated">Revisions</target>
        </trans-unit>
        <trans-unit id="0b4be1f6169f38f3814188ca6321f0baef4e8d0e" translate="yes" xml:space="preserve">
          <source>Revisions come first and then paths. E.g. in &lt;code&gt;git diff v1.0 v2.0 arch/x86 include/asm-x86&lt;/code&gt;, &lt;code&gt;v1.0&lt;/code&gt; and &lt;code&gt;v2.0&lt;/code&gt; are revisions and &lt;code&gt;arch/x86&lt;/code&gt; and &lt;code&gt;include/asm-x86&lt;/code&gt; are paths.</source>
          <target state="translated">改訂が最初に来て、次にパス。たとえば、 &lt;code&gt;git diff v1.0 v2.0 arch/x86 include/asm-x86&lt;/code&gt; 、 &lt;code&gt;v1.0&lt;/code&gt; および &lt;code&gt;v2.0&lt;/code&gt; はリビジョンで、 &lt;code&gt;arch/x86&lt;/code&gt; および &lt;code&gt;include/asm-x86&lt;/code&gt; はパスです。</target>
        </trans-unit>
        <trans-unit id="7becdbbb2a8732024f87ab2931981f680230ef94" translate="yes" xml:space="preserve">
          <source>Rewind the master branch to get rid of those three commits.</source>
          <target state="translated">マスターブランチを巻き戻して、これらの 3 つのコミットを削除します。</target>
        </trans-unit>
        <trans-unit id="23707433283a99c49d086ac3b852fb7dc5a49bd7" translate="yes" xml:space="preserve">
          <source>Rewrite branches</source>
          <target state="translated">ブランチの書き換え</target>
        </trans-unit>
        <trans-unit id="51c6d6dea3e502e9d6305607675f5d9cfa096787" translate="yes" xml:space="preserve">
          <source>Rewriting a single commit</source>
          <target state="translated">シングルコミットの書き換え</target>
        </trans-unit>
        <trans-unit id="f0b0b0c2a8ee1155d88307c80fb06e1df9172561" translate="yes" xml:space="preserve">
          <source>Rewriting history and maintaining patch series</source>
          <target state="translated">履歴の書き換えとパッチシリーズのメンテナンス</target>
        </trans-unit>
        <trans-unit id="b4a0f73cd12119000c1f6312d5dd619dd0ae5fda" translate="yes" xml:space="preserve">
          <source>Root of the Maildir to split. This directory should contain the cur, tmp and new subdirectories.</source>
          <target state="translated">分割するMaildirのルート。このディレクトリには cur,tmp,new サブディレクトリが含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="afeb98169e5519ad4e553da5035454587d62f649" translate="yes" xml:space="preserve">
          <source>Roughly speaking, there are two important workflows: merge and patch. The important difference is that the merge workflow can propagate full history, including merges, while patches cannot. Both workflows can be used in parallel: in &lt;code&gt;git.git&lt;/code&gt;, only subsystem maintainers use the merge workflow, while everyone else sends patches.</source>
          <target state="translated">大まかに言えば、マージとパッチという2つの重要なワークフローがあります。重要な違いは、マージワークフローはマージを含む完全な履歴を伝達できますが、パッチは伝達できないことです。両方のワークフローを並行して使用できます &lt;code&gt;git.git&lt;/code&gt; では、サブシステムのメンテナーのみがマージワークフローを使用し、他の全員はパッチを送信します。</target>
        </trans-unit>
        <trans-unit id="4ad3e9112d465fbfd17a48a5928f94fb9df2be8b" translate="yes" xml:space="preserve">
          <source>Routines to help parsing remote repository access parameters</source>
          <target state="translated">リモートリポジトリのアクセスパラメータの解析を支援するルーチン</target>
        </trans-unit>
        <trans-unit id="3495f8aaa83c51339b8e8d234a997810c199e605" translate="yes" xml:space="preserve">
          <source>Rule: Merge to downstream only at well-defined points</source>
          <target state="translated">ルール。十分に定義されたポイントでのみ下流にマージします。</target>
        </trans-unit>
        <trans-unit id="09660bd61221506e477e31f1dd27fab9f41227cb" translate="yes" xml:space="preserve">
          <source>Rule: Merge upwards</source>
          <target state="translated">ルール 上向きにマージ</target>
        </trans-unit>
        <trans-unit id="54160ff726068ad54950593ff8fc01c56330b6b4" translate="yes" xml:space="preserve">
          <source>Rule: Throw-away integration branches</source>
          <target state="translated">ルール。投げやりな統合ブランチ</target>
        </trans-unit>
        <trans-unit id="2f47e21adb2d5e1ec4b0ccaaeca3d73a008017d2" translate="yes" xml:space="preserve">
          <source>Rule: Topic branches</source>
          <target state="translated">ルール トピックブランチ</target>
        </trans-unit>
        <trans-unit id="fda6b71ba420bf88a3b35fd7a8c9d96c7d2ca360" translate="yes" xml:space="preserve">
          <source>Run 3-way file level merge for text files, but take lines from both versions, instead of leaving conflict markers. This tends to leave the added lines in the resulting file in random order and the user should verify the result. Do not use this if you do not understand the implications.</source>
          <target state="translated">テキストファイルに対して 3 者間のファイルレベルマージを実行しますが、競合マーカーを残す代わりに両方のバージョンから行を取ります。これは、結果のファイルに追加された行をランダムな順序で残す傾向があり、ユーザは結果を検証しなければなりません。その意味を理解していない場合は使用しないでください。</target>
        </trans-unit>
        <trans-unit id="a160fe3e32ea42046eaaac9053e680c14caafda7" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;git fetch origin&lt;/code&gt; from the public repository of your upstream every once in a while. This does only the first half of &lt;code&gt;git pull&lt;/code&gt; but does not merge. The head of the public repository is stored in &lt;code&gt;.git/refs/remotes/origin/master&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;git fetch origin&lt;/code&gt; アップストリームのパブリックリポジトリからgit fetch originを実行します。これは &lt;code&gt;git pull&lt;/code&gt; の前半のみを実行しますが、マージはしません。パブリックリポジトリのヘッドは、 &lt;code&gt;.git/refs/remotes/origin/master&lt;/code&gt; に格納されています。</target>
        </trans-unit>
        <trans-unit id="e5df7e2d67065569be056bdfd06fe71034940306" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;git gc --auto&lt;/code&gt; at the end to perform garbage collection if needed. This is enabled by default.</source>
          <target state="translated">ファイル名を指定して実行 &lt;code&gt;git gc --auto&lt;/code&gt; 必要であれば、最後には、ガベージコレクションを実行します。これはデフォルトで有効になっています。</target>
        </trans-unit>
        <trans-unit id="d4c2111aa7a129dccec5c5c0fa7a3c629e6b4b60" translate="yes" xml:space="preserve">
          <source>Run a merge for files needing merging</source>
          <target state="translated">マージが必要なファイルのマージを実行</target>
        </trans-unit>
        <trans-unit id="56deae0bf4d8ef1e2306db4544bba762fbe034dc" translate="yes" xml:space="preserve">
          <source>Run a three-way file merge</source>
          <target state="translated">3 者間ファイルマージの実行</target>
        </trans-unit>
        <trans-unit id="454ceea0bbe28544bd004a32b164a804513700b9" translate="yes" xml:space="preserve">
          <source>Run as if git was started in &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; instead of the current working directory. When multiple &lt;code&gt;-C&lt;/code&gt; options are given, each subsequent non-absolute &lt;code&gt;-C &amp;lt;path&amp;gt;&lt;/code&gt; is interpreted relative to the preceding &lt;code&gt;-C
&amp;lt;path&amp;gt;&lt;/code&gt;. If &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; is present but empty, e.g. &lt;code&gt;-C &quot;&quot;&lt;/code&gt;, then the current working directory is left unchanged.</source>
          <target state="translated">gitが現在の作業ディレクトリではなく &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; で起動されたかのように実行します。複数の &lt;code&gt;-C&lt;/code&gt; オプションが指定されている場合、後続の非絶対 &lt;code&gt;-C &amp;lt;path&amp;gt;&lt;/code&gt; はそれぞれ、先行する &lt;code&gt;-C &amp;lt;path&amp;gt;&lt;/code&gt; 基準にして解釈されます。場合は &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; 存在するが、例えば空である &lt;code&gt;-C &quot;&quot;&lt;/code&gt; 、そして現在の作業ディレクトリは変更されません。</target>
        </trans-unit>
        <trans-unit id="3a57bdd6deda30e0d464ee7ac9f51bb6cd990f64" translate="yes" xml:space="preserve">
          <source>Run git-daemon to serve /pub/scm from inetd.</source>
          <target state="translated">git-daemonを実行して、inetdから/pub/scmをサーブします。</target>
        </trans-unit>
        <trans-unit id="2b3f7399788c5a94c105f34c23c2a49d757c1096" translate="yes" xml:space="preserve">
          <source>Run git-daemon to serve /pub/scm from xinetd.</source>
          <target state="translated">git-daemon を実行して xinetd から /pub/scm を提供します。</target>
        </trans-unit>
        <trans-unit id="29a03b5fc4e803018eee3893eddf1e9108c87d3d" translate="yes" xml:space="preserve">
          <source>Run interactively.</source>
          <target state="translated">対話的に実行します。</target>
        </trans-unit>
        <trans-unit id="f367a056462dd8b9f00355ca4ea04e6dfae0f7a4" translate="yes" xml:space="preserve">
          <source>Run merge against all files in the index that need merging.</source>
          <target state="translated">マージが必要なインデックス内のすべてのファイルに対してマージを実行します。</target>
        </trans-unit>
        <trans-unit id="234f84747fbb8e336dcf4106732f26a4c98fccdf" translate="yes" xml:space="preserve">
          <source>Run merge conflict resolution tools to resolve merge conflicts</source>
          <target state="translated">マージコンフリクトを解決するためのマージコンフリクト解決ツールの実行</target>
        </trans-unit>
        <trans-unit id="6f4bd94ff5f1951786b4d70e32a9fd3f734eea92" translate="yes" xml:space="preserve">
          <source>Run the command silently, without creating a window to display its output.</source>
          <target state="translated">出力を表示するためのウィンドウを作成せずに、黙々とコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="1bc8f86a1473f5767bf3c60c210d9437103d96b3" translate="yes" xml:space="preserve">
          <source>Run the tool only if a diff is selected in the GUI. It guarantees that &lt;code&gt;FILENAME&lt;/code&gt; is not empty.</source>
          <target state="translated">GUIでdiffが選択されている場合にのみ、ツールを実行します。 &lt;code&gt;FILENAME&lt;/code&gt; が空でないことを保証します。</target>
        </trans-unit>
        <trans-unit id="6a6c6a22304c9bf76fa5e2f3f8dca8cd7bf5e3ac" translate="yes" xml:space="preserve">
          <source>Run this script and save its output to a file. This file could then be used as projects list file, which means that you can set &lt;code&gt;$projects_list&lt;/code&gt; to its filename.</source>
          <target state="translated">このスクリプトを実行し、その出力をファイルに保存します。このファイルはプロジェクトリストファイルとして使用できます。つまり、 &lt;code&gt;$projects_list&lt;/code&gt; をそのファイル名に設定できます。</target>
        </trans-unit>
        <trans-unit id="e4350cd9be7c2a6a88a109bf8474f97ce8036333" translate="yes" xml:space="preserve">
          <source>Run verbosely.</source>
          <target state="translated">冗長に走る。</target>
        </trans-unit>
        <trans-unit id="0580e4cb5c8782966251586e9fca0c52971499d2" translate="yes" xml:space="preserve">
          <source>Run verbosely. Does not affect the reporting of progress status to the standard error stream.</source>
          <target state="translated">冗長に実行します。標準エラー・ストリームへの進捗状況の報告には影響しません。</target>
        </trans-unit>
        <trans-unit id="e6c2918d91700995262364e3455a1fa1e70615ff" translate="yes" xml:space="preserve">
          <source>Running &quot;git tag&quot; without arguments also lists all tags. The pattern is a shell wildcard (i.e., matched using fnmatch(3)). Multiple patterns may be given; if any of them matches, the tag is shown.</source>
          <target state="translated">引数なしで &quot;git tag&quot; を実行しても、すべてのタグが表示されます。パターンはシェルのワイルドカード (つまり fnmatch(3)でマッチしたもの)です。複数のパターンを指定してもかまいません。</target>
        </trans-unit>
        <trans-unit id="803264f53d0e1d9dc0bb4982e51be37a05b958fa" translate="yes" xml:space="preserve">
          <source>Running &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt;, &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt;, &lt;a href=&quot;git-show&quot;&gt;git-show[1]&lt;/a&gt;, &lt;a href=&quot;git-diff-index&quot;&gt;git-diff-index[1]&lt;/a&gt;, &lt;a href=&quot;git-diff-tree&quot;&gt;git-diff-tree[1]&lt;/a&gt;, or &lt;a href=&quot;git-diff-files&quot;&gt;git-diff-files[1]&lt;/a&gt; with the &lt;code&gt;-p&lt;/code&gt; option produces patch text. You can customize the creation of patch text via the &lt;code&gt;GIT_EXTERNAL_DIFF&lt;/code&gt; and the &lt;code&gt;GIT_DIFF_OPTS&lt;/code&gt; environment variables.</source>
          <target state="translated">実行中&lt;a href=&quot;git-diff&quot;&gt;のgit-diffの[1] &lt;/a&gt;、&lt;a href=&quot;git-log&quot;&gt;[1] gitのログ&lt;/a&gt;、&lt;a href=&quot;git-show&quot;&gt;のgit-ショー[1] &lt;/a&gt;、&lt;a href=&quot;git-diff-index&quot;&gt;のgit-diffのインデックス[1] &lt;/a&gt;、&lt;a href=&quot;git-diff-tree&quot;&gt;のgit-diffの木[1] 、&lt;/a&gt;または&lt;a href=&quot;git-diff-files&quot;&gt;のgit-diffを-ファイル[1]&lt;/a&gt;で &lt;code&gt;-p&lt;/code&gt; オプションは、パッチのテキストを生成します。 &lt;code&gt;GIT_EXTERNAL_DIFF&lt;/code&gt; および &lt;code&gt;GIT_DIFF_OPTS&lt;/code&gt; 環境変数を使用して、パッチテキストの作成をカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="79747aa96d21887b0b235c733b1bf62702e5f734" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;git gc&lt;/code&gt; manually should only be needed when adding objects to a repository without regularly running such porcelain commands, to do a one-off repository optimization, or e.g. to clean up a suboptimal mass-import. See the &quot;PACKFILE OPTIMIZATION&quot; section in &lt;a href=&quot;git-fast-import&quot;&gt;git-fast-import[1]&lt;/a&gt; for more details on the import case.</source>
          <target state="translated">&lt;code&gt;git gc&lt;/code&gt; を手動で実行する必要があるのは、そのような磁器コマンドを定期的に実行せずにリポジトリにオブジェクトを追加する場合、1回限りのリポジトリ最適化を行う場合、または次善の大量インポートをクリーンアップする場合などです。インポートケースの詳細については、&lt;a href=&quot;git-fast-import&quot;&gt;git-fast-import [1]&lt;/a&gt;の「PACKFILE OPTIMIZATION」セクションをご覧ください。</target>
        </trans-unit>
        <trans-unit id="5e2a5725ee1a3773dc9d930811a085d107277efd" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;git init&lt;/code&gt; in an existing repository is safe. It will not overwrite things that are already there. The primary reason for rerunning &lt;code&gt;git init&lt;/code&gt; is to pick up newly added templates (or to move the repository to another place if --separate-git-dir is given).</source>
          <target state="translated">既存のリポジトリで &lt;code&gt;git init&lt;/code&gt; を実行しても安全です。すでに存在するものは上書きされません。 &lt;code&gt;git init&lt;/code&gt; を再実行する主な理由は、新しく追加されたテンプレートを取得する（または--separate-git-dirが指定されている場合はリポジトリを別の場所に移動する）ためです。</target>
        </trans-unit>
        <trans-unit id="4a12225be5b345f509b740239e0b23dc61c4c69e" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;git merge&lt;/code&gt; or &lt;code&gt;git pull&lt;/code&gt; is NOT recommended on a branch you plan to &lt;code&gt;dcommit&lt;/code&gt; from because Subversion users cannot see any merges you&amp;rsquo;ve made. Furthermore, if you merge or pull from a Git branch that is a mirror of an SVN branch, &lt;code&gt;dcommit&lt;/code&gt; may commit to the wrong branch.</source>
          <target state="translated">&lt;code&gt;git merge&lt;/code&gt; または &lt;code&gt;git pull&lt;/code&gt; を実行することは、Subversionユーザーが作成したマージを確認できないため、 &lt;code&gt;dcommit&lt;/code&gt; する予定のブランチでは推奨されません。さらに、SVNブランチのミラーであるGitブランチからマージまたはプルすると、 &lt;code&gt;dcommit&lt;/code&gt; が間違ったブランチにコミットする可能性があります。</target>
        </trans-unit>
        <trans-unit id="4e5d95b0a65fda26d5c70bb844d87c3f30d59d6d" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;git pack-refs&lt;/code&gt; in a repository renders it unclonable by Git versions prior to 1.5.1.2 over dumb transports such as HTTP. This variable determines whether &lt;code&gt;git gc&lt;/code&gt; runs &lt;code&gt;git pack-refs&lt;/code&gt;. This can be set to &lt;code&gt;notbare&lt;/code&gt; to enable it within all non-bare repos or it can be set to a boolean value. The default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">リポジトリで &lt;code&gt;git pack-refs&lt;/code&gt; を実行すると、HTTPなどのダムトランスポートを介して1.5.1.2より前のGitバージョンでクローンできなくなります。この変数は、 &lt;code&gt;git gc&lt;/code&gt; が &lt;code&gt;git pack-refs&lt;/code&gt; を実行するかどうかを決定します。これを &lt;code&gt;notbare&lt;/code&gt; に設定して、すべての非ベアリポジトリ内で有効にするか、ブール値に設定できます。デフォルトは &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="7e986747909ca421bbba8ffb613702a034d33901" translate="yes" xml:space="preserve">
          <source>Running git-filter-branch with either --tags or --all in your &amp;lt;rev-list options&amp;gt;. In order to retain annotated tags as annotated, you must use --tag-name-filter (and must not have restored from refs/original/ in a previously botched rewrite).</source>
          <target state="translated">&amp;lt;rev-list options&amp;gt;で--tagsまたは--allを指定してgit-filter-branchを実行します。注釈付きのタグを注釈付きとして保持するには、-tag-name-filterを使用する必要があります（以前に失敗した書き換えでrefs / original /から復元していないこと）。</target>
        </trans-unit>
        <trans-unit id="48b168cafbabe8dd5092d4e93800a7944e72448e" translate="yes" xml:space="preserve">
          <source>Running the &lt;code&gt;git rerere&lt;/code&gt; command immediately after a conflicted automerge records the conflicted working tree files, with the usual conflict markers &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt;, &lt;code&gt;=======&lt;/code&gt;, and &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; in them. Later, after you are done resolving the conflicts, running &lt;code&gt;git rerere&lt;/code&gt; again will record the resolved state of these files. Suppose you did this when you created the test merge of master into the topic branch.</source>
          <target state="translated">実行中 &lt;code&gt;git rerere&lt;/code&gt; 競合自動マージ直後のコマンドは、通常の衝突マーカと、競合作業ツリーのファイルを記録し &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt; 、 &lt;code&gt;=======&lt;/code&gt; 、そして &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; それらインチ 後で、競合の解決が完了した後、もう一度 &lt;code&gt;git rerere&lt;/code&gt; を実行すると、これらのファイルの解決された状態が記録されます。masterのトピックブランチへのテストマージを作成したときにこれを行ったとします。</target>
        </trans-unit>
        <trans-unit id="59dc4b3f413e4c03677af110697445ae971ad5c3" translate="yes" xml:space="preserve">
          <source>Runs &lt;code&gt;git update-index&lt;/code&gt; itself on the paths whose index entries are different from those from the &lt;code&gt;HEAD&lt;/code&gt; commit.</source>
          <target state="translated">実行 &lt;code&gt;git update-index&lt;/code&gt; のインデックスエントリからのものとは異なる経路上自体 &lt;code&gt;HEAD&lt;/code&gt; コミットします。</target>
        </trans-unit>
        <trans-unit id="22e727ddf0d0e8f34303d3a3ff629cb6f10d1775" translate="yes" xml:space="preserve">
          <source>Runs &lt;code&gt;init&lt;/code&gt; and &lt;code&gt;fetch&lt;/code&gt;. It will automatically create a directory based on the basename of the URL passed to it; or if a second argument is passed; it will create a directory and work within that. It accepts all arguments that the &lt;code&gt;init&lt;/code&gt; and &lt;code&gt;fetch&lt;/code&gt; commands accept; with the exception of &lt;code&gt;--fetch-all&lt;/code&gt; and &lt;code&gt;--parent&lt;/code&gt;. After a repository is cloned, the &lt;code&gt;fetch&lt;/code&gt; command will be able to update revisions without affecting the working tree; and the &lt;code&gt;rebase&lt;/code&gt; command will be able to update the working tree with the latest changes.</source>
          <target state="translated">&lt;code&gt;init&lt;/code&gt; と &lt;code&gt;fetch&lt;/code&gt; を実行します。渡されたURLのベース名に基づいてディレクトリを自動的に作成します。または、2番目の引数が渡された場合。ディレクトリを作成し、その中で動作します。 &lt;code&gt;init&lt;/code&gt; および &lt;code&gt;fetch&lt;/code&gt; コマンドが受け入れるすべての引数を受け入れます。除いた &lt;code&gt;--fetch-all&lt;/code&gt; と &lt;code&gt;--parent&lt;/code&gt; 。リポジトリが複製された後、 &lt;code&gt;fetch&lt;/code&gt; コマンドは作業ツリーに影響を与えることなくリビジョンを更新できます。そして &lt;code&gt;rebase&lt;/code&gt; コマンドは作業ツリーを最新の変更で更新することができます。</target>
        </trans-unit>
        <trans-unit id="271b9f4ffa51b4716f220d02767212c2cbc90133" translate="yes" xml:space="preserve">
          <source>Runs a number of housekeeping tasks within the current repository, such as compressing file revisions (to reduce disk space and increase performance), removing unreachable objects which may have been created from prior invocations of &lt;code&gt;git add&lt;/code&gt;, packing refs, pruning reflog, rerere metadata or stale working trees. May also update ancillary indexes such as the commit-graph.</source>
          <target state="translated">現在のリポジトリ内で、ファイルリビジョンの圧縮（ディスクスペースを削減してパフォーマンスを向上させる）、 &lt;code&gt;git add&lt;/code&gt; の以前の呼び出しから作成された到達できないオブジェクトの削除、refsのパッキング、reflogのプルーニング、メタデータのrerere などのハウスキーピングタスクを実行します。古い作業木。commit-graphなどの補助インデックスも更新できます。</target>
        </trans-unit>
        <trans-unit id="02aa629c8b16cd17a44f3a0efec2feed43937642" translate="yes" xml:space="preserve">
          <source>S</source>
          <target state="translated">S</target>
        </trans-unit>
        <trans-unit id="9aa5449df2c27f8c453076898c93afa895c00117" translate="yes" xml:space="preserve">
          <source>SCM</source>
          <target state="translated">SCM</target>
        </trans-unit>
        <trans-unit id="c571b86549e49bf223cf648388c46288c2241b5a" translate="yes" xml:space="preserve">
          <source>SHA-1</source>
          <target state="translated">SHA-1</target>
        </trans-unit>
        <trans-unit id="312e98fedb54c7d53ac4e72bc404817b90ff078b" translate="yes" xml:space="preserve">
          <source>SHA-1 identifiers of Git commit objects.</source>
          <target state="translated">Git コミットオブジェクトの SHA-1 識別子。</target>
        </trans-unit>
        <trans-unit id="202b86696ac3129113c6d6b6693f7f6dc827b3d3" translate="yes" xml:space="preserve">
          <source>SHA-1 identifiers of Git tag objects.</source>
          <target state="translated">Git タグオブジェクトの SHA-1 識別子。</target>
        </trans-unit>
        <trans-unit id="839226786b62bf95c9258e79140ac43890ceae07" translate="yes" xml:space="preserve">
          <source>SSH</source>
          <target state="translated">SSH</target>
        </trans-unit>
        <trans-unit id="1685ffa85727a883f0235855ad4fe17b10829246" translate="yes" xml:space="preserve">
          <source>SSH and File Transport</source>
          <target state="translated">SSH とファイル転送</target>
        </trans-unit>
        <trans-unit id="88179dba2afcc4bab1f73ecdf7a5b0b3ec852b33" translate="yes" xml:space="preserve">
          <source>SSH:</source>
          <target state="translated">SSH:</target>
        </trans-unit>
        <trans-unit id="4d1ffce8cc78d20fc8a69ac29d5637ff598777a6" translate="yes" xml:space="preserve">
          <source>SVN itself only stores times in UTC and nothing else. The regular svn client converts the UTC time to the local time (or based on the TZ= environment). This command has the same behaviour.</source>
          <target state="translated">SVN 自体は時刻を UTC で保存しているだけで、それ以外は何も保存していません。通常の svn クライアントは UTC 時間を現地時間に変換します (あるいは TZ=環境に基づいて)。このコマンドも同じ動作をします。</target>
        </trans-unit>
        <trans-unit id="e2462783325d1946b85fa4d6ac9becc9ddef189e" translate="yes" xml:space="preserve">
          <source>Sadly, many merges aren&amp;rsquo;t trivial. If there are files that have been added, moved or removed, or if both branches have modified the same file, you will be left with an index tree that contains &quot;merge entries&quot; in it. Such an index tree can 'NOT' be written out to a tree object, and you will have to resolve any such merge clashes using other tools before you can write out the result.</source>
          <target state="translated">悲しいことに、多くのマージは簡単ではありません。追加、移動、または削除されたファイルがある場合、または両方のブランチで同じファイルが変更されている場合、「マージエントリ」を含むインデックスツリーが残ります。このようなインデックスツリーはツリーオブジェクトに書き出すことはできません。結果を書き出す前に、他のツールを使用してこのようなマージの衝突を解決する必要があります。</target>
        </trans-unit>
        <trans-unit id="db6e7e410412f58574f766c3911f49badd42beca" translate="yes" xml:space="preserve">
          <source>Safety</source>
          <target state="translated">Safety</target>
        </trans-unit>
        <trans-unit id="c65f36deb58ec8692004d5f340eea1de5007232b" translate="yes" xml:space="preserve">
          <source>Salvage your data out of another SCM people love to hate</source>
          <target state="translated">人々に嫌われている別のSCMからデータをサルベージする</target>
        </trans-unit>
        <trans-unit id="7da4c768ec454f900a2b009758758bcc4c497617" translate="yes" xml:space="preserve">
          <source>Same as --mode but take mode encoded as a number. This is mainly used by other commands that have already parsed layout mode.</source>
          <target state="translated">mode と同じですが、モードを数値でエンコードしたものを取ります。これは主にレイアウトモードをパース済みの他のコマンドで使用されます。</target>
        </trans-unit>
        <trans-unit id="2542706528d734cb50feb9bca7bdca378a008047" translate="yes" xml:space="preserve">
          <source>Same as --receive-pack=&amp;lt;git-receive-pack&amp;gt;.</source>
          <target state="translated">--receive-pack = &amp;lt;git-receive-pack&amp;gt;と同じです。</target>
        </trans-unit>
        <trans-unit id="70cac94413c3847bbe37b2e76044db02ae24aecd" translate="yes" xml:space="preserve">
          <source>Same as --upload-pack=&amp;lt;git-upload-pack&amp;gt;.</source>
          <target state="translated">--upload-pack = &amp;lt;git-upload-pack&amp;gt;と同じです。</target>
        </trans-unit>
        <trans-unit id="11461b23fcbc2ba6f710e4af2d4a469477579e7e" translate="yes" xml:space="preserve">
          <source>Same as -m, except that unmerged entries are discarded instead of failing. When used with &lt;code&gt;-u&lt;/code&gt;, updates leading to loss of working tree changes will not abort the operation.</source>
          <target state="translated">-mと同じですが、マージされていないエントリは失敗せずに破棄されます。 &lt;code&gt;-u&lt;/code&gt; と一緒に使用すると、作業ツリーの変更が失われる更新は操作を中止しません。</target>
        </trans-unit>
        <trans-unit id="e08595bc7c109d0c181056c12a1b3a6619cb3279" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;--max-depth=-1&lt;/code&gt;; this is the default.</source>
          <target state="translated">&lt;code&gt;--max-depth=-1&lt;/code&gt; と同じ。これがデフォルトです。</target>
        </trans-unit>
        <trans-unit id="fca1bc99780bb8b21bf845d99b40ff5d1d2ac6f4" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;--max-depth=0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--max-depth=0&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="96a9581032de7bee365152ab2d305df909cefe47" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;--untracked-cache&lt;/code&gt;. Provided for backwards compatibility with older versions of Git where &lt;code&gt;--untracked-cache&lt;/code&gt; used to imply &lt;code&gt;--test-untracked-cache&lt;/code&gt; but this option would enable the extension unconditionally.</source>
          <target state="translated">&lt;code&gt;--untracked-cache&lt;/code&gt; と同じです。以前のバージョンのGitとの下位互換性のために提供されてい &lt;code&gt;--untracked-cache&lt;/code&gt; は--test-untracked-cacheを暗黙的に &lt;code&gt;--test-untracked-cache&lt;/code&gt; いましたが、このオプションは無条件に拡張を有効にします。</target>
        </trans-unit>
        <trans-unit id="a5a8ba00c3dc1ba60d32f039cdc49baa9cb59855" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;--verify&lt;/code&gt; but shortens the object name to a unique prefix with at least &lt;code&gt;length&lt;/code&gt; characters. The minimum length is 4, the default is the effective value of the &lt;code&gt;core.abbrev&lt;/code&gt; configuration variable (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;--verify&lt;/code&gt; と同じですが、オブジェクト名を少なくとも &lt;code&gt;length&lt;/code&gt; 文字の一意のプレフィックスに短縮します。最小長は4で、デフォルトは &lt;code&gt;core.abbrev&lt;/code&gt; 構成変数の有効な値です（&lt;a href=&quot;git-config&quot;&gt;git-config [1]を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="beb85fd3b6ce0903e1b1188af0e814b86495c278" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;-a&lt;/code&gt;, unless &lt;code&gt;-d&lt;/code&gt; is used. Then any unreachable objects in a previous pack become loose, unpacked objects, instead of being left in the old pack. Unreachable objects are never intentionally added to a pack, even when repacking. This option prevents unreachable objects from being immediately deleted by way of being left in the old pack and then removed. Instead, the loose unreachable objects will be pruned according to normal expiry rules with the next &lt;code&gt;git gc&lt;/code&gt; invocation. See &lt;a href=&quot;git-gc&quot;&gt;git-gc[1]&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;-d&lt;/code&gt; が使用されない限り、 &lt;code&gt;-a&lt;/code&gt; と同じです。その後、以前のパックの到達不能オブジェクトは、古いパックに残されるのではなく、ルーズなアンパックオブジェクトになります。再到達しても、到達できないオブジェクトが意図的にパックに追加されることはありません。このオプションは、到達できないオブジェクトが古いパックに残されたまま削除されてすぐに削除されるのを防ぎます。代わりに、緩い到達不能オブジェクトは、次の &lt;code&gt;git gc&lt;/code&gt; 呼び出しで通常の​​有効期限規則に従って削除されます。&lt;a href=&quot;git-gc&quot;&gt;git-gc [1]を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ff89956ed03482de99fb1d76b0d3426c3c4d4dbc" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;git gui citool&lt;/code&gt; (above).</source>
          <target state="translated">&lt;code&gt;git gui citool&lt;/code&gt; （上記）と同じです。</target>
        </trans-unit>
        <trans-unit id="7f884bfa0e72398b065720ac608779bf0b3372aa" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;group&lt;/code&gt;, but make the repository readable by all users.</source>
          <target state="translated">&lt;code&gt;group&lt;/code&gt; と同じですが、すべてのユーザーがリポジトリを読み取り可能にします。</target>
        </trans-unit>
        <trans-unit id="205ac751a2a286c261ce1f6df5fb256a7d0ade8e" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;strip&lt;/code&gt; except #commentary is not removed.</source>
          <target state="translated">#commentaryが削除されないことを除いて、 &lt;code&gt;strip&lt;/code&gt; 同じです。</target>
        </trans-unit>
        <trans-unit id="0f92cc3366a36ceb57ccdcea56b7f1a8684ec893" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;strip&lt;/code&gt; if the message is to be edited. Otherwise &lt;code&gt;whitespace&lt;/code&gt;.</source>
          <target state="translated">メッセージを編集する場合は、 &lt;code&gt;strip&lt;/code&gt; と同じです。それ以外の場合は &lt;code&gt;whitespace&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a8e2d0cf73dc026e93d34c61a101205dcf767e79" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;whitespace&lt;/code&gt; except that everything from (and including) the line found below is truncated, if the message is to be edited. &quot;&lt;code&gt;#&lt;/code&gt;&quot; can be customized with core.commentChar.</source>
          <target state="translated">メッセージが編集される場合、以下にある行からのすべての行が切り捨てられることを除いて、 &lt;code&gt;whitespace&lt;/code&gt; 同じです。&quot; &lt;code&gt;#&lt;/code&gt; &quot;はcore.commentCharでカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="fe1030b7b6d63ee2bb092f0de364ad5810d90270" translate="yes" xml:space="preserve">
          <source>Same as above, but the format is inferred from the output file.</source>
          <target state="translated">上記と同じですが、フォーマットは出力ファイルから推測されます。</target>
        </trans-unit>
        <trans-unit id="a3268177cdd166695f9afb4cfbb0a75c5f082adf" translate="yes" xml:space="preserve">
          <source>Same as above, but using the builtin tar.gz handling.</source>
          <target state="translated">上記と同じですが、ビルトインの tar.gz 処理を使用します。</target>
        </trans-unit>
        <trans-unit id="316b1b6951145c81e2f6393678faa4164cbc2393" translate="yes" xml:space="preserve">
          <source>Same as above.</source>
          <target state="translated">上記と同じです。</target>
        </trans-unit>
        <trans-unit id="eceeb52d76c39f830be2caa3098c992d4c73cfa3" translate="yes" xml:space="preserve">
          <source>Same as the default mode, but does not prune some history.</source>
          <target state="translated">デフォルトモードと同じですが、一部の履歴は剪定されません。</target>
        </trans-unit>
        <trans-unit id="db6a81d8b3d32523ab23e52ba20bfc5ab9af3c20" translate="yes" xml:space="preserve">
          <source>Save that patch to a file in UNIX mailbox format. Call it a.patch, say.</source>
          <target state="translated">そのパッチを UNIX のメールボックス形式のファイルに保存します。これをa.patchと呼んでください。</target>
        </trans-unit>
        <trans-unit id="17bbcc9ad074be63eea942d50d7cda88e930f8d2" translate="yes" xml:space="preserve">
          <source>Save the process id in &lt;code&gt;file&lt;/code&gt;. Ignored when the daemon is run under &lt;code&gt;--inetd&lt;/code&gt;.</source>
          <target state="translated">プロセスIDを &lt;code&gt;file&lt;/code&gt; 保存します。デーモンが &lt;code&gt;--inetd&lt;/code&gt; で実行されている場合は無視されます。</target>
        </trans-unit>
        <trans-unit id="15259adada7ee3df28dbdafd2e3ca8076b5f4a15" translate="yes" xml:space="preserve">
          <source>Save your local modifications to a new &lt;code&gt;stash entry&lt;/code&gt; and roll them back to HEAD (in the working tree and in the index). The &amp;lt;message&amp;gt; part is optional and gives the description along with the stashed state.</source>
          <target state="translated">ローカルの変更を新しい &lt;code&gt;stash entry&lt;/code&gt; 保存し、HEADにロールバックします（作業ツリーとインデックス内）。&amp;lt;message&amp;gt;部分はオプションであり、隠された状態とともに説明を提供します。</target>
        </trans-unit>
        <trans-unit id="ea6661dbb08a609142e04fb33fe9864a0d55a0fb" translate="yes" xml:space="preserve">
          <source>Saving a log and replaying it</source>
          <target state="translated">ログの保存と再生</target>
        </trans-unit>
        <trans-unit id="256f734933def8151aae2c73ad04adbfd2f5710e" translate="yes" xml:space="preserve">
          <source>Say you modify a branch with &lt;a href=&quot;#fixing-mistakes&quot;&gt;&lt;code&gt;git reset --hard&lt;/code&gt;&lt;/a&gt;, and then realize that the branch was the only reference you had to that point in history.</source>
          <target state="translated">&lt;a href=&quot;#fixing-mistakes&quot;&gt; &lt;code&gt;git reset --hard&lt;/code&gt; を使用&lt;/a&gt;してブランチを変更し、ブランチが履歴のその時点までに持っていた唯一の参照であることを理解したとします。</target>
        </trans-unit>
        <trans-unit id="8f7159e28d007390950b554c8900463bad34bfe1" translate="yes" xml:space="preserve">
          <source>Scan &lt;code&gt;Documentation/&lt;/code&gt; for other stuff left out; in particular:</source>
          <target state="translated">&lt;code&gt;Documentation/&lt;/code&gt; をスキャンして、他に残っているものを探します。特に：</target>
        </trans-unit>
        <trans-unit id="deb6721d53898cf2febea6ade63b57224507999f" translate="yes" xml:space="preserve">
          <source>Scan email archives for other stuff left out</source>
          <target state="translated">メールアーカイブをスキャンして、他のものが残っていないか確認してください。</target>
        </trans-unit>
        <trans-unit id="b53f30bf6406e325a3dfac40a2ba03843362a3a9" translate="yes" xml:space="preserve">
          <source>Scan man pages to see if any assume more background than this manual provides.</source>
          <target state="translated">このマニュアルが提供する以上の背景を想定しているものがあるかどうかを確認するために、マンページをスキャンしてください。</target>
        </trans-unit>
        <trans-unit id="d1e8a9a092bccee1d0d707e7539fd2ea1ed01f5c" translate="yes" xml:space="preserve">
          <source>Scheme (e.g., &lt;code&gt;https&lt;/code&gt; in &lt;code&gt;https://example.com/&lt;/code&gt;). This field must match exactly between the config key and the URL.</source>
          <target state="translated">（例えば、スキーム &lt;code&gt;https&lt;/code&gt; で &lt;code&gt;https://example.com/&lt;/code&gt; ）。このフィールドは、構成キーとURLの間で正確に一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="1e05e395ff307d005e7e52d5a8d5532c4a364bbf" translate="yes" xml:space="preserve">
          <source>Search files in the current directory that is not managed by Git.</source>
          <target state="translated">Gitで管理されていないカレントディレクトリ内のファイルを検索します。</target>
        </trans-unit>
        <trans-unit id="b73a02f095e861ccf3246948d40c910baf6a01fe" translate="yes" xml:space="preserve">
          <source>Search for regressions:</source>
          <target state="translated">回帰を検索します。</target>
        </trans-unit>
        <trans-unit id="f6032042d4f48d36194af91f9c0f4e8546fac517" translate="yes" xml:space="preserve">
          <source>Search strategy</source>
          <target state="translated">検索戦略</target>
        </trans-unit>
        <trans-unit id="a28ca13aea7d9b0267664d0e0585dd1effd660f3" translate="yes" xml:space="preserve">
          <source>Second user-specific configuration file. If $XDG_CONFIG_HOME is not set or empty, &lt;code&gt;$HOME/.config/git/config&lt;/code&gt; will be used. Any single-valued variable set in this file will be overwritten by whatever is in &lt;code&gt;~/.gitconfig&lt;/code&gt;. It is a good idea not to create this file if you sometimes use older versions of Git, as support for this file was added fairly recently.</source>
          <target state="translated">2番目のユーザー固有の構成ファイル。$ XDG_CONFIG_HOMEが設定されていないか空の場合、 &lt;code&gt;$HOME/.config/git/config&lt;/code&gt; が使用されます。このファイルに設定されている単一値の変数は、 &lt;code&gt;~/.gitconfig&lt;/code&gt; もので上書きされます。このファイルのサポートがごく最近追加されたため、古いバージョンのGitを使用する場合は、このファイルを作成しないことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="08bcebdee7825304638fc52fdc68926c0d85826a" translate="yes" xml:space="preserve">
          <source>Second user-specific credentials file. If &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; is not set or empty, &lt;code&gt;$HOME/.config/git/credentials&lt;/code&gt; will be used. Any credentials stored in this file will not be used if &lt;code&gt;~/.git-credentials&lt;/code&gt; has a matching credential as well. It is a good idea not to create this file if you sometimes use older versions of Git that do not support it.</source>
          <target state="translated">2番目のユーザー固有の資格情報ファイル。場合は &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; セットまたは空されていない、 &lt;code&gt;$HOME/.config/git/credentials&lt;/code&gt; 使用されます。 &lt;code&gt;~/.git-credentials&lt;/code&gt; にも一致する認証情報がある場合、このファイルに保存されている認証情報は使用されません。サポートしていない古いバージョンのGitを使用する場合は、このファイルを作成しないことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="b5c3361c98212e9d042aaaa5b0c10d9a1a465d8b" translate="yes" xml:space="preserve">
          <source>Second, repositories found in &lt;code&gt;/pub/scm/&lt;/code&gt; and &lt;code&gt;/var/git/&lt;/code&gt; will be accessible through &lt;code&gt;http://git.example.org/scm/&lt;/code&gt; and &lt;code&gt;http://git.example.org/var/&lt;/code&gt;. You can add as many project roots as you want by adding rewrite rules like the third and the fourth.</source>
          <target state="translated">次に、 &lt;code&gt;/pub/scm/&lt;/code&gt; および &lt;code&gt;/var/git/&lt;/code&gt; にあるリポジトリは、 &lt;code&gt;http://git.example.org/scm/&lt;/code&gt; および &lt;code&gt;http://git.example.org/var/&lt;/code&gt; からアクセスできます。3番目と4番目のような書き換えルールを追加することで、プロジェクトルートをいくつでも追加できます。</target>
        </trans-unit>
        <trans-unit id="0d5abfbb7006b1c4a1d7df3783d45b48d9d41d48" translate="yes" xml:space="preserve">
          <source>Seconds wait before reconnecting to smtp server. See also the &lt;code&gt;--relogin-delay&lt;/code&gt; option of &lt;a href=&quot;git-send-email&quot;&gt;git-send-email[1]&lt;/a&gt;.</source>
          <target state="translated">数秒待ってから、SMTPサーバーに再接続します。&lt;a href=&quot;git-send-email&quot;&gt;git-send-email [1]&lt;/a&gt;の &lt;code&gt;--relogin-delay&lt;/code&gt; オプションも参照してください。</target>
        </trans-unit>
        <trans-unit id="16adbe8ae2ec1d5ce021aca603249932e4af29cb" translate="yes" xml:space="preserve">
          <source>Sections can be further divided into subsections. To begin a subsection put its name in double quotes, separated by space from the section name, in the section header, like in the example below:</source>
          <target state="translated">セクションはさらにサブセクションに分けることができます。サブセクションを開始するには、以下の例のように、セクションヘッダーで、セクション名からスペースで区切られた二重引用符でその名前を入れます。</target>
        </trans-unit>
        <trans-unit id="f25ce1b8a399bd8621a57427a20039b4b13935db" translate="yes" xml:space="preserve">
          <source>Security</source>
          <target state="translated">Security</target>
        </trans-unit>
        <trans-unit id="cb670e82b44c131414fdd62cec2e2271a0c3e1ce" translate="yes" xml:space="preserve">
          <source>See &quot;Reset, restore and revert&quot; in &lt;a href=&quot;git&quot;&gt;git[1]&lt;/a&gt; for the differences between the three commands.</source>
          <target state="translated">3つのコマンドの違いについては、&lt;a href=&quot;git&quot;&gt;git [1]の&lt;/a&gt;「リセット、復元、復帰」を参照してください。</target>
        </trans-unit>
        <trans-unit id="449a31d4b9b49095d0b90df41f056d43c8512f47" translate="yes" xml:space="preserve">
          <source>See &amp;ldquo;Responses To Commands&amp;rdquo; below for details about how to read this output safely.</source>
          <target state="translated">この出力を安全に読み取る方法の詳細については、以下の「コマンドへの応答」を参照してください。</target>
        </trans-unit>
        <trans-unit id="814949d103c65b43b61081c8789235b00c3553fa" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;api-trace2&quot;&gt;Trace2 documentation&lt;/a&gt; for full details.</source>
          <target state="translated">詳細については、&lt;a href=&quot;api-trace2&quot;&gt;Trace2のドキュメント&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="b53c26f4c249563ab9682d7689da982420c04631" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-add&quot;&gt;git-add[1]&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;git-add&quot;&gt;git-add [1]を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="fa55cebc3f97b3ec5f8f25b42d230a3ac0a7871d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;git-config&quot;&gt;git-config [1]を&lt;/a&gt;参照してください</target>
        </trans-unit>
        <trans-unit id="927ac170ac73e3dd929a2427d80cab2492ff1deb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for core variables and &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt; for settings related to diff generation.</source>
          <target state="translated">コア変数については&lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt;を、差分生成に関連する設定については&lt;a href=&quot;git-diff&quot;&gt;git-diff [1]&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="29e0897ca1f4dba055ef02d2ee4ea34bca59c450" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for more details on the configuration options mentioned above and &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt; for more details on the refspec syntax.</source>
          <target state="translated">上記の設定オプションの詳細については&lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt;を、refspec構文の詳細については&lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c85dd3188b261218c6ce78dddb7cf27f02c4e498" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt; for the full list of supported options.</source>
          <target state="translated">サポートされているオプションの完全なリストについては、&lt;a href=&quot;git-diff&quot;&gt;git-diff [1]&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="873eafed92c6d143cde4cdd22e9f2f62fb8eab44" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-merge&quot;&gt;git-merge[1]&lt;/a&gt; for details, including how conflicts are presented and handled.</source>
          <target state="translated">競合がどのように提示されて処理されるかなど、詳細については&lt;a href=&quot;git-merge&quot;&gt;git-merge [1]&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="a1dbf552c05185bb952ce9cddaaca48b3f486c1e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-merge&quot;&gt;git-merge[1]&lt;/a&gt; for some hints on resolving such conflicts.</source>
          <target state="translated">このような衝突を解決するためのヒントについては、&lt;a href=&quot;git-merge&quot;&gt;git-merge [1]&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="750a5c09f00fba2da655305aeb20c963fba7eb6e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-repack&quot;&gt;git-repack[1]&lt;/a&gt; for options to generate new packs and replace existing ones.</source>
          <target state="translated">新しいパックを生成して既存のものを置き換えるオプションについては、&lt;a href=&quot;git-repack&quot;&gt;git-repack [1]&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="f51d5b8b3fb6117dc301434a5ecd4dd13bfc3fc0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-send-email&quot;&gt;git-send-email[1]&lt;/a&gt; for description.</source>
          <target state="translated">説明は&lt;a href=&quot;git-send-email&quot;&gt;git-send-email [1]&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="55b7b7d87b2ef94a0c0800814d27411d440df3c7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-send-email&quot;&gt;git-send-email[1]&lt;/a&gt; for description. Note that this setting is not subject to the &lt;code&gt;identity&lt;/code&gt; mechanism.</source>
          <target state="translated">説明は&lt;a href=&quot;git-send-email&quot;&gt;git-send-email [1]&lt;/a&gt;をご覧ください。この設定は &lt;code&gt;identity&lt;/code&gt; メカニズムの影響を受けないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="356db06bc40009203665e547b41d48a6fe47dfb9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-shortlog&quot;&gt;git-shortlog[1]&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;git-shortlog&quot;&gt;git-shortlog [1]を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="816c081fd3a62310db506118ba38e561a6d69e40" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gitcvs-migration&quot;&gt;gitcvs-migration[7]&lt;/a&gt; for the details.</source>
          <target state="translated">詳細は&lt;a href=&quot;gitcvs-migration&quot;&gt;gitcvs-migration [7]&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="a58028451af0f9f542d0d8f8d9f591126508cad5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;githooks&quot;&gt;githooks[5]&lt;/a&gt; for more general info on hook execution.</source>
          <target state="translated">フックの実行に関するより一般的な情報については、&lt;a href=&quot;githooks&quot;&gt;githooks [5]&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ba609b5467f233e457aa9eddbdd4e4c279fc02c9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gitignore&quot;&gt;gitignore[5]&lt;/a&gt; for a detailed explanation of the syntax. You can also place .gitignore files in other directories in your working tree, and they will apply to those directories and their subdirectories. The &lt;code&gt;.gitignore&lt;/code&gt; files can be added to your repository like any other files (just run &lt;code&gt;git add
.gitignore&lt;/code&gt; and &lt;code&gt;git commit&lt;/code&gt;, as usual), which is convenient when the exclude patterns (such as patterns matching build output files) would also make sense for other users who clone your repository.</source>
          <target state="translated">構文の詳細な説明については、&lt;a href=&quot;gitignore&quot;&gt;gitignore [5]&lt;/a&gt;を参照してください。 .gitignoreファイルを作業ツリー内の他のディレクトリに配置することもできます。これらのファイルは、それらのディレクトリとそのサブディレクトリに適用されます。 &lt;code&gt;.gitignore&lt;/code&gt; のファイルは、他のファイルのようなあなたのリポジトリに追加することができます（ただ実行する &lt;code&gt;git add .gitignore&lt;/code&gt; と &lt;code&gt;git commit&lt;/code&gt; いつものように、）もために理にかなっている（例えば、ビルド出力ファイルにマッチするパターンなど）のパターンを除外する際に便利です、リポジトリを複製する他のユーザー。</target>
        </trans-unit>
        <trans-unit id="6c08679dcde5f574a046d2c372d4d13c77c14f09" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gitrepository-layout&quot;&gt;gitrepository-layout[5]&lt;/a&gt; for more information. The rule of thumb is do not make any assumption about whether a path belongs to $GIT_DIR or $GIT_COMMON_DIR when you need to directly access something inside $GIT_DIR. Use &lt;code&gt;git rev-parse --git-path&lt;/code&gt; to get the final path.</source>
          <target state="translated">詳細については、&lt;a href=&quot;gitrepository-layout&quot;&gt;gitrepository-layout [5]&lt;/a&gt;を参照してください。経験則では、$ GIT_DIR内の何かに直接アクセスする必要がある場合、パスが$ GIT_DIRまたは$ GIT_COMMON_DIRに属するかどうかについては想定していません。 &lt;code&gt;git rev-parse --git-path&lt;/code&gt; を使用して、最終的なパスを取得します。</target>
        </trans-unit>
        <trans-unit id="8a0cffbb9b88d8945c0266619dda8f84ab7a60d6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gittutorial&quot;&gt;gittutorial[7]&lt;/a&gt; to get started, then see &lt;a href=&quot;giteveryday&quot;&gt;giteveryday[7]&lt;/a&gt; for a useful minimum set of commands. The &lt;a href=&quot;user-manual&quot;&gt;Git User&amp;rsquo;s Manual&lt;/a&gt; has a more in-depth introduction.</source>
          <target state="translated">参照してください。&lt;a href=&quot;gittutorial&quot;&gt;[7] gittutorial&lt;/a&gt;見た後、始めるのは&lt;a href=&quot;giteveryday&quot;&gt;giteveryday [7]&lt;/a&gt;コマンドの便利な最小限のセットのために。&lt;a href=&quot;user-manual&quot;&gt;Gitのユーザーズマニュアルには、&lt;/a&gt;より詳細な紹介があります。</target>
        </trans-unit>
        <trans-unit id="edb8fa06792cc06c9610f82e7507e11aaf0b3a79" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gitweb&quot;&gt;gitweb[1]&lt;/a&gt; for description.</source>
          <target state="translated">説明は&lt;a href=&quot;gitweb&quot;&gt;gitweb [1]&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="551344f7c6d18aeed126c268a4887b60ea41a732" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf[5]&lt;/a&gt; for description.</source>
          <target state="translated">説明は&lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf [5]&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="b24fd2d7766898a78228977078b6f143b9eddd17" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gitworkflows&quot;&gt;gitworkflows[7]&lt;/a&gt; for an overview of recommended workflows.</source>
          <target state="translated">推奨ワークフローの概要については、&lt;a href=&quot;gitworkflows&quot;&gt;gitworkflows [7]&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c5aaf5106e04565ca03205c2325b61134a265836" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://repo.or.cz/w/git.git/tree/HEAD:/gitweb/&quot;&gt;http://repo.or.cz/w/git.git/tree/HEAD:/gitweb/&lt;/a&gt; for gitweb source code, browsed using gitweb itself.</source>
          <target state="translated">gitweb自体を使用して参照されるgitwebソースコードについては、&lt;a href=&quot;http://repo.or.cz/w/git.git/tree/HEAD:/gitweb/&quot;&gt;http：&lt;/a&gt; //repo.or.cz/w/git.git/tree/HEAD ： / gitweb /を参照してください。</target>
        </trans-unit>
        <trans-unit id="cf4e44a1f9a750a558dfae089d3110695a154f52" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;multi-pack-index&quot;&gt;The Multi-Pack-Index Design Document&lt;/a&gt; and &lt;a href=&quot;pack-format&quot;&gt;The Multi-Pack-Index Format&lt;/a&gt; for more information on the multi-pack-index feature.</source>
          <target state="translated">参照してください&lt;a href=&quot;multi-pack-index&quot;&gt;マルチパック・インデックス設計書&lt;/a&gt;や&lt;a href=&quot;pack-format&quot;&gt;マルチパック-インデックス・フォーマット&lt;/a&gt;のマルチパック・インデックス機能の詳細については、を。</target>
        </trans-unit>
        <trans-unit id="119e1af35250f977a84e7e9b44e17bab322217d6" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;filemodify&lt;/code&gt; above for a detailed description of &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; の詳細については、上記の &lt;code&gt;filemodify&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="a5e5425cc0264ed1e0714353419a5218265f25cb" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;p4 help revisions&lt;/code&gt; for the full syntax of p4 revision specifiers.</source>
          <target state="translated">p4リビジョン指定子の完全な構文については、 &lt;code&gt;p4 help revisions&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="349e8ba30a5911b964eb56ddd5398d0c455fca71" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;pull.rebase&lt;/code&gt;, &lt;code&gt;branch.&amp;lt;name&amp;gt;.rebase&lt;/code&gt; and &lt;code&gt;branch.autoSetupRebase&lt;/code&gt; in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; if you want to make &lt;code&gt;git pull&lt;/code&gt; always use &lt;code&gt;--rebase&lt;/code&gt; instead of merging.</source>
          <target state="translated">&lt;code&gt;git pull&lt;/code&gt; でマージの代わりに常に &lt;code&gt;--rebase&lt;/code&gt; を使用する場合は、&lt;a href=&quot;git-config&quot;&gt;git-config [1]の&lt;/a&gt; &lt;code&gt;pull.rebase&lt;/code&gt; 、 &lt;code&gt;branch.&amp;lt;name&amp;gt;.rebase&lt;/code&gt; および &lt;code&gt;branch.autoSetupRebase&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="6821589cea1a5f5eeaa157482f5875c8dd6c83e8" translate="yes" xml:space="preserve">
          <source>See OPTIONS for a list of currently defined options.</source>
          <target state="translated">現在定義されているオプションのリストは OPTIONS を参照してください。</target>
        </trans-unit>
        <trans-unit id="a7e489653a4ac322711d151924724bebeaab7578" translate="yes" xml:space="preserve">
          <source>See REF LIST ATTRIBUTES for a list of currently defined attributes.</source>
          <target state="translated">現在定義されている属性のリストについては、「REF LIST ATTRIBUTES」を参照してください。</target>
        </trans-unit>
        <trans-unit id="2d8243a2c0e464492c9d563c4f92c56ae3421bcc" translate="yes" xml:space="preserve">
          <source>See also</source>
          <target state="translated">参照:</target>
        </trans-unit>
        <trans-unit id="ed7577b94e1ee464c75f81cac37b66a6926c7436" translate="yes" xml:space="preserve">
          <source>See also &quot;Repositories&quot; and later subsections in &lt;a href=&quot;gitweb&quot;&gt;gitweb[1]&lt;/a&gt; manpage.</source>
          <target state="translated">&lt;a href=&quot;gitweb&quot;&gt;gitweb [1]&lt;/a&gt;マンページの「リポジトリ」とそれ以降のサブセクションも参照してください。</target>
        </trans-unit>
        <trans-unit id="52af4d47e0ed6dc8c81958e8938b6aa167c96389" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#FILES&quot;&gt;FILES&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#FILES&quot;&gt;FILES&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="dcd469ab484a6e7e06726ac525a02976b65d3216" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#git-quick-start&quot;&gt;Git Quick Reference&lt;/a&gt; for a brief overview of Git commands, without any explanation.</source>
          <target state="translated">説明なしのGitコマンドの概要については、&lt;a href=&quot;#git-quick-start&quot;&gt;Gitクイックリファレンス&lt;/a&gt;もご覧ください。</target>
        </trans-unit>
        <trans-unit id="776296c90f2638f4facdccd84ed267d15501958e" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;git-add&quot;&gt;git-add[1]&lt;/a&gt; for a more user-friendly way to do some of the most common operations on the index.</source>
          <target state="translated">インデックスで最も一般的な操作のいくつかを実行するためのよりユーザーフレンドリーな方法については、&lt;a href=&quot;git-add&quot;&gt;git-add [1]&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="7d2d6e7dcb0c9c7bc63cd26813647bc47c39be07" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;git-stash&quot;&gt;git-stash[1]&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;git-stash&quot;&gt;git-stash [1]&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="07d3f2d4e9abbb86fc4947deaf4abd1a8839b08a" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://lore.kernel.org/git/7v64clg5u9.fsf@assigned-by-dhcp.cox.net/&quot;&gt;https://lore.kernel.org/git/7v64clg5u9.fsf@assigned-by-dhcp.cox.net/&lt;/a&gt; and &lt;a href=&quot;https://lore.kernel.org/git/7vy7ej9g38.fsf@gitster.siamese.dyndns.org/&quot;&gt;https://lore.kernel.org/git/7vy7ej9g38.fsf@gitster.siamese.dyndns.org/&lt;/a&gt; for further information.</source>
          <target state="translated">&lt;a href=&quot;https://lore.kernel.org/git/7v64clg5u9.fsf@assigned-by-dhcp.cox.net/&quot;&gt;https://lore.kernel.org/git/7v64clg5u9.fsf@assigned-by-dhcp.cox.net/&lt;/a&gt;および&lt;a href=&quot;https://lore.kernel.org/git/7vy7ej9g38.fsf@gitster.siamese.dyndns.org/&quot;&gt;https://lore.kernel.org/git/7vy7ej9g38.fsf@gitster.siamese.dyndns&lt;/a&gt;も参照してください。詳細については、.org /。</target>
        </trans-unit>
        <trans-unit id="1c13efbf0ce0a3c500629d1824fbdc470face67d" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;%avatar_size&lt;/code&gt; with pixel sizes for icons and avatars (&quot;default&quot; is used for one-line like &quot;log&quot; and &quot;shortlog&quot;, &quot;double&quot; is used for two-line like &quot;commit&quot;, &quot;commitdiff&quot; or &quot;tag&quot;). If the default font sizes or lineheights are changed (e.g. via adding extra CSS stylesheet in &lt;code&gt;@stylesheets&lt;/code&gt;), it may be appropriate to change these values.</source>
          <target state="translated">アイコンとアバターのピクセルサイズの &lt;code&gt;%avatar_size&lt;/code&gt; も参照してください（ &quot;default&quot;は &quot;log&quot;や &quot;shortlog&quot;などの1行に使用され、 &quot;double&quot;は &quot;commit&quot;、 &quot;commitdiff&quot;または &quot;tagなどの2行に使用されます&quot;）。デフォルトのフォントサイズまたは行の高さが変更された場合（ &lt;code&gt;@stylesheets&lt;/code&gt; に CSSスタイルシートを追加するなど）、これらの値を変更することが適切な場合があります。</target>
        </trans-unit>
        <trans-unit id="ef4059c160d59845887bc762e1d3b94b36ac9cb5" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;remote.&amp;lt;name&amp;gt;.prune&lt;/code&gt; and the PRUNING section of &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;remote.&amp;lt;name&amp;gt;.prune&lt;/code&gt; および&lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]の&lt;/a&gt; PRUNINGセクションも参照してください。</target>
        </trans-unit>
        <trans-unit id="97a52221a6fcfc08e94858dbbd32d431c7460334" translate="yes" xml:space="preserve">
          <source>See also INCOMPATIBLE OPTIONS below.</source>
          <target state="translated">下記のINCOMPATIBLE OPTIONSも参照してください。</target>
        </trans-unit>
        <trans-unit id="da70e539ebd47fc0666afc11774bbce890e2d57d" translate="yes" xml:space="preserve">
          <source>See also REBASING MERGES and INCOMPATIBLE OPTIONS below.</source>
          <target state="translated">後述の REBASING MERGES と INCOMPATIBLE OPTIONS も参照してください。</target>
        </trans-unit>
        <trans-unit id="e1cfc7a6ae7eb249f6af4e953ed0aa13e7a9f32c" translate="yes" xml:space="preserve">
          <source>See also more involved example in &quot;Controlling access to Git repositories&quot; subsection on &lt;a href=&quot;gitweb&quot;&gt;gitweb[1]&lt;/a&gt; manpage.</source>
          <target state="translated">&lt;a href=&quot;gitweb&quot;&gt;gitweb [1]&lt;/a&gt;マンページの「Gitリポジトリへのアクセスの制御」サブセクションのより複雑な例もご覧ください。</target>
        </trans-unit>
        <trans-unit id="a90b35f1bca4c9661af072a420272419d14c9fa7" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;howto-index&quot;&gt;howto&lt;/a&gt; documents for some useful examples.</source>
          <target state="translated">いくつかの有用な例については、&lt;a href=&quot;howto-index&quot;&gt;howto&lt;/a&gt;ドキュメントも参照してください。</target>
        </trans-unit>
        <trans-unit id="6727f96125b7533ade941bf6b96be91f1faec003" translate="yes" xml:space="preserve">
          <source>See also the &lt;code&gt;--amend&lt;/code&gt; option to &lt;a href=&quot;git-commit&quot;&gt;git-commit[1]&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;git-commit&quot;&gt;git-commit [1]&lt;/a&gt;の &lt;code&gt;--amend&lt;/code&gt; オプションも参照してください。</target>
        </trans-unit>
        <trans-unit id="5d4e5e0e34b4d53289a1425851b494735221ec25" translate="yes" xml:space="preserve">
          <source>See also the &lt;code&gt;--negotiation-tip&lt;/code&gt; option for &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt;の &lt;code&gt;--negotiation-tip&lt;/code&gt; オプションも参照してください。</target>
        </trans-unit>
        <trans-unit id="393dae9d9c5b724b3e92a8007628ecdf490bf229" translate="yes" xml:space="preserve">
          <source>See also the &lt;code&gt;fetch.negotiationAlgorithm&lt;/code&gt; configuration variable documented in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;git-config&quot;&gt;git-config [1]に&lt;/a&gt;記載されている &lt;code&gt;fetch.negotiationAlgorithm&lt;/code&gt; 構成変数もご覧ください。</target>
        </trans-unit>
        <trans-unit id="b34c3a53a35e7fde45b0dcf380dd07a6f67e09b3" translate="yes" xml:space="preserve">
          <source>See below for a detailed description of the &lt;code&gt;data&lt;/code&gt; command.</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; コマンドの詳細については、以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="8b157460c4f4c3bf67bdbeab995004fb808185e8" translate="yes" xml:space="preserve">
          <source>See the &quot;CONFIGURATION FILE&quot; section of &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for details on the configuration file. The file is plain text, so you can also edit it with your favorite editor.</source>
          <target state="translated">設定ファイルの詳細については、&lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt;の「設定ファイル」セクションを参照してください。ファイルはプレーンテキストなので、お好みのエディターで編集することもできます。</target>
        </trans-unit>
        <trans-unit id="1149bacaf9085ecc4180307d6ae05e8d61573cee" translate="yes" xml:space="preserve">
          <source>See the &quot;PRETTY FORMATS&quot; section for some additional details for each format. When &lt;code&gt;=&amp;lt;format&amp;gt;&lt;/code&gt; part is omitted, it defaults to &lt;code&gt;medium&lt;/code&gt;.</source>
          <target state="translated">各フォーマットの詳細については、「プリティフォーマット」を参照してください。 &lt;code&gt;=&amp;lt;format&amp;gt;&lt;/code&gt; に一部が省略され、それはデフォルト &lt;code&gt;medium&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="16b5734b1a38c0fca2aa75fc8f5afb5e38171b76" translate="yes" xml:space="preserve">
          <source>See the &quot;notes.rewrite.&amp;lt;command&amp;gt;&quot; configuration for a way to carry notes across commands that rewrite commits.</source>
          <target state="translated">コミットを再書き込みするコマンド間でメモを運ぶ方法については、「notes.rewrite。&amp;lt;command&amp;gt;」構成を参照してください。</target>
        </trans-unit>
        <trans-unit id="37c9890c0abc7db617d319f8c623b95994d12d01" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch[1]&lt;/a&gt; and &lt;a href=&quot;git-send-email&quot;&gt;git-send-email[1]&lt;/a&gt; manpages for further usage notes.</source>
          <target state="translated">詳しい使用方法については、&lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch [1]&lt;/a&gt;および&lt;a href=&quot;git-send-email&quot;&gt;git-send-email [1]の&lt;/a&gt;マンページを参照してください。</target>
        </trans-unit>
        <trans-unit id="664aa71d1d2c6ad85c41bdce7b1df31a05aeb0c8" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;git-tag&quot;&gt;git-tag[1]&lt;/a&gt; command to learn how to create and verify tag objects. (Note that &lt;a href=&quot;git-tag&quot;&gt;git-tag[1]&lt;/a&gt; can also be used to create &quot;lightweight tags&quot;, which are not tag objects at all, but just simple references whose names begin with &lt;code&gt;refs/tags/&lt;/code&gt;).</source>
          <target state="translated">タグオブジェクトを作成および検証する方法については、&lt;a href=&quot;git-tag&quot;&gt;git-tag [1]&lt;/a&gt;コマンドをご覧ください。（&lt;a href=&quot;git-tag&quot;&gt;git-tag [1]&lt;/a&gt;は「軽量タグ」の作成にも使用できることに注意してください。これはタグオブジェクトではなく、名前が &lt;code&gt;refs/tags/&lt;/code&gt; 始まる単純な参照にすぎません）。</target>
        </trans-unit>
        <trans-unit id="d438ee28fcc5eac2c57090871716c0835edb3fb6" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://git-scm.com/docs/howto/revert-a-faulty-merge&quot;&gt;revert-a-faulty-merge How-To&lt;/a&gt; for more details.</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://git-scm.com/docs/howto/revert-a-faulty-merge&quot;&gt;revert-a-faulty-mergeのハウツーを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="36ef80def8fdcd62acbd00beaaea20020f8c5e10" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;--pretty&lt;/code&gt; option in the &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt; man page for more display options.</source>
          <target state="translated">その他の表示オプションについては、&lt;a href=&quot;git-log&quot;&gt;git-log [1]の&lt;/a&gt; manページの &lt;code&gt;--pretty&lt;/code&gt; オプションを参照してください。</target>
        </trans-unit>
        <trans-unit id="4059094394364c65c4e256eefa4143bc85285e53" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;--tool=&amp;lt;tool&amp;gt;&lt;/code&gt; option above for more details.</source>
          <target state="translated">詳細については、上記の &lt;code&gt;--tool=&amp;lt;tool&amp;gt;&lt;/code&gt; オプションを参照してください。</target>
        </trans-unit>
        <trans-unit id="cdbbd93582a076d15bd34c470fc66d5137cf3c4d" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;--trust-exit-code&lt;/code&gt; option above for more details.</source>
          <target state="translated">詳細については、上記の &lt;code&gt;--trust-exit-code&lt;/code&gt; オプションを参照してください。</target>
        </trans-unit>
        <trans-unit id="b8e91773464e68ddb68c67818ddc930117958012" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;gc.auto&lt;/code&gt; option in the &quot;CONFIGURATION&quot; section below for how this heuristic works.</source>
          <target state="translated">このヒューリスティックの仕組みについては、以下の「設定」セクションの &lt;code&gt;gc.auto&lt;/code&gt; オプションを参照してください。</target>
        </trans-unit>
        <trans-unit id="3aa11a07b044aa013b3901191823f51922a8ff20" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;gc.bigPackThreshold&lt;/code&gt; configuration variable below. When in use, it&amp;rsquo;ll affect how the auto pack limit works.</source>
          <target state="translated">以下の &lt;code&gt;gc.bigPackThreshold&lt;/code&gt; 構成変数を参照してください。使用すると、自動パック制限の動作に影響します。</target>
        </trans-unit>
        <trans-unit id="3053c5245151cb0daaf5d132e8a14e630a595774" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;pathspec&lt;/code&gt; entry in &lt;a href=&quot;gitglossary&quot;&gt;gitglossary[7]&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;gitglossary&quot;&gt;gitglossary [7]&lt;/a&gt;の &lt;code&gt;pathspec&lt;/code&gt; エントリを参照してください。</target>
        </trans-unit>
        <trans-unit id="75fe9e67c24619f5763d970fe2b63e0643ff0b35" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;pickaxe&lt;/code&gt; entry in &lt;a href=&quot;gitdiffcore&quot;&gt;gitdiffcore[7]&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;gitdiffcore&quot;&gt;gitdiffcore [7]&lt;/a&gt;の &lt;code&gt;pickaxe&lt;/code&gt; エントリを参照してください。</target>
        </trans-unit>
        <trans-unit id="83948d6384607ede7321a1e18da150f9a73d4146" translate="yes" xml:space="preserve">
          <source>See the CONFIGURATION section for &lt;code&gt;sendemail.multiEdit&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sendemail.multiEdit&lt;/code&gt; のCONFIGURATIONセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="f7f0c85a1fe22d7a44e2019c11a92087c61176c9" translate="yes" xml:space="preserve">
          <source>See the PRUNING section below for more details.</source>
          <target state="translated">詳しくは下記のPRUNINGの項をご覧ください。</target>
        </trans-unit>
        <trans-unit id="642ced677c18bf15d387f97024a58b4d20d0707e" translate="yes" xml:space="preserve">
          <source>See the PRUNING section of &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt; for what it&amp;rsquo;ll prune depending on various configuration.</source>
          <target state="translated">さまざまな構成に応じてプルーニングされる内容については、&lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt;のプルーニングセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="8b23758c15811b8a84155a82ad559efc97bcaf83" translate="yes" xml:space="preserve">
          <source>See the add subcommand for the definition of default remote.</source>
          <target state="translated">デフォルトリモートの定義については、add サブコマンドを参照してください。</target>
        </trans-unit>
        <trans-unit id="7b02d435af668a3154c5db21e5216702c6ccada1" translate="yes" xml:space="preserve">
          <source>See the documentation for the &lt;code&gt;--depth&lt;/code&gt; option in &lt;a href=&quot;git-repack&quot;&gt;git-repack[1]&lt;/a&gt; for more details.</source>
          <target state="translated">詳細については、&lt;a href=&quot;git-repack&quot;&gt;git- &lt;/a&gt; &lt;code&gt;--depth&lt;/code&gt; [1]の--depthオプションのドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="8a5c36fc0819626b74533177ce4ae892455a3785" translate="yes" xml:space="preserve">
          <source>See the documentation for the &lt;code&gt;--window&lt;/code&gt; option in &lt;a href=&quot;git-repack&quot;&gt;git-repack[1]&lt;/a&gt; for more details.</source>
          <target state="translated">詳細については、&lt;a href=&quot;git-repack&quot;&gt;git- &lt;/a&gt; &lt;code&gt;--window&lt;/code&gt; [1]の--windowオプションのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="3fcb475ca761c4788b65bc17cc61cddb7ffeaae1" translate="yes" xml:space="preserve">
          <source>See the explanations of the &lt;code&gt;remote.&amp;lt;name&amp;gt;.url&lt;/code&gt;, &lt;code&gt;branch.&amp;lt;name&amp;gt;.remote&lt;/code&gt;, and &lt;code&gt;remote.&amp;lt;name&amp;gt;.push&lt;/code&gt; options in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for details.</source>
          <target state="translated">詳細については、&lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt;の &lt;code&gt;remote.&amp;lt;name&amp;gt;.url&lt;/code&gt; 、 &lt;code&gt;branch.&amp;lt;name&amp;gt;.remote&lt;/code&gt; 、および &lt;code&gt;remote.&amp;lt;name&amp;gt;.push&lt;/code&gt; オプションの説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="8f33051f0ff2a32371d05cfc9580039d116c83c4" translate="yes" xml:space="preserve">
          <source>See the file gitweb/INSTALL in the Git source tree and &lt;a href=&quot;gitweb&quot;&gt;gitweb[1]&lt;/a&gt; for instructions on details setting up a permanent installation with a CGI or Perl capable server.</source>
          <target state="translated">CGIまたはPerl対応のサーバーで永続的なインストールをセットアップする詳細については、Gitソースツリーのgitweb / INSTALLファイルと&lt;a href=&quot;gitweb&quot;&gt;gitweb [1]&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="7471ce55c909897f892e3510360e845c3a8c6f7d" translate="yes" xml:space="preserve">
          <source>See the notes on the quarantine environment below.</source>
          <target state="translated">以下、検疫環境の注意点を参照してください。</target>
        </trans-unit>
        <trans-unit id="38b41ff72286b874a0f3db64c92581ef765256ff" translate="yes" xml:space="preserve">
          <source>See the references in the &quot;description&quot; section to get started using Git. The following is probably more detail than necessary for a first-time user.</source>
          <target state="translated">Git を使い始めるには、「説明」の項のリファレンスを参照してください。以下の内容は、初めてGitを使う人には必要以上に詳しいかもしれません。</target>
        </trans-unit>
        <trans-unit id="3a308d2b2b8eed03e46d2f6cf143cfa2acb546c2" translate="yes" xml:space="preserve">
          <source>See the section describing &lt;code&gt;&amp;lt;refspec&amp;gt;...&lt;/code&gt; above for a discussion of the matching semantics.</source>
          <target state="translated">一致するセマンティクスの説明については、上記の &lt;code&gt;&amp;lt;refspec&amp;gt;...&lt;/code&gt; を説明するセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="ff8a65e5a8b50b2cd32960f644c92d05159f0bd7" translate="yes" xml:space="preserve">
          <source>See the section on &quot;Quarantine Environment&quot; in &lt;a href=&quot;git-receive-pack&quot;&gt;git-receive-pack[1]&lt;/a&gt; for some caveats.</source>
          <target state="translated">注意事項については、&lt;a href=&quot;git-receive-pack&quot;&gt;git-receive-pack [1]の&lt;/a&gt;「隔離環境」のセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="f11ef173da292966d44f74e581bfe70f66e03523" translate="yes" xml:space="preserve">
          <source>See what files &lt;code&gt;git submodule&lt;/code&gt; created:</source>
          <target state="translated">&lt;code&gt;git submodule&lt;/code&gt; 作成したファイルを確認します。</target>
        </trans-unit>
        <trans-unit id="9cf656c9a09d4ac0135f6d95a0f9e062689ebbd6" translate="yes" xml:space="preserve">
          <source>Select &quot;Create a new project &amp;rarr; From CVS checkout&quot;</source>
          <target state="translated">「新規プロジェクトの作成&amp;rarr;CVSチェックアウトから」を選択します</target>
        </trans-unit>
        <trans-unit id="4295d4906e2ecc1e09bb3b7dd2f7bb2e8c0aa11e" translate="yes" xml:space="preserve">
          <source>Select file contents to include in the next commit, then make the commit:</source>
          <target state="translated">次のコミットに含めるファイルの内容を選択し、コミットします。</target>
        </trans-unit>
        <trans-unit id="5458b52d7bc655d716d7b187eb088a80fdb02862" translate="yes" xml:space="preserve">
          <source>Select non-matching lines.</source>
          <target state="translated">一致しない行を選択します。</target>
        </trans-unit>
        <trans-unit id="8cb11cd07f748f144ab7c53fba5e088fa9457785" translate="yes" xml:space="preserve">
          <source>Select only files that are Added (&lt;code&gt;A&lt;/code&gt;), Copied (&lt;code&gt;C&lt;/code&gt;), Deleted (&lt;code&gt;D&lt;/code&gt;), Modified (&lt;code&gt;M&lt;/code&gt;), Renamed (&lt;code&gt;R&lt;/code&gt;), have their type (i.e. regular file, symlink, submodule, &amp;hellip;​) changed (&lt;code&gt;T&lt;/code&gt;), are Unmerged (&lt;code&gt;U&lt;/code&gt;), are Unknown (&lt;code&gt;X&lt;/code&gt;), or have had their pairing Broken (&lt;code&gt;B&lt;/code&gt;). Any combination of the filter characters (including none) can be used. When &lt;code&gt;*&lt;/code&gt; (All-or-none) is added to the combination, all paths are selected if there is any file that matches other criteria in the comparison; if there is no file that matches other criteria, nothing is selected.</source>
          <target state="translated">追加された（ &lt;code&gt;A&lt;/code&gt; ）、コピーされた（ &lt;code&gt;C&lt;/code&gt; ）、削除された（ &lt;code&gt;D&lt;/code&gt; ）、変更された（ &lt;code&gt;M&lt;/code&gt; ）、名前が変更された（ &lt;code&gt;R&lt;/code&gt; ）ファイルのタイプ（つまり、通常のファイル、シンボリックリンク、サブモジュールなど）が変更された（ &lt;code&gt;T&lt;/code&gt; ）、結合されていない（ &lt;code&gt;U&lt;/code&gt; ）、不明である（ &lt;code&gt;X&lt;/code&gt; ）、またはペアリングが解除されている（ &lt;code&gt;B&lt;/code&gt; ）。フィルター文字の任意の組み合わせ（なしを含む）を使用できます。場合 &lt;code&gt;*&lt;/code&gt; （全か無か）の組み合わせに添加する比較して他の基準に一致するすべてのファイルが存在する場合、すべてのパスが選択されます。他の基準に一致するファイルがない場合、何も選択されません。</target>
        </trans-unit>
        <trans-unit id="9d25b5bb0ae1f31c2bf194221afe3b7c5ccd5c79" translate="yes" xml:space="preserve">
          <source>Select the specified commit after loading the graph. Default behavior is equivalent to specifying &lt;code&gt;--select-commit=HEAD&lt;/code&gt;.</source>
          <target state="translated">グラフを読み込んだ後、指定したコミットを選択します。デフォルトの動作は、 &lt;code&gt;--select-commit=HEAD&lt;/code&gt; を指定することと同等です。</target>
        </trans-unit>
        <trans-unit id="57773e54b07c6d2a3694e83fd05fece4b0d947e7" translate="yes" xml:space="preserve">
          <source>Send a &quot;thin&quot; pack, which records objects in deltified form based on objects not included in the pack to reduce network traffic.</source>
          <target state="translated">ネットワークトラフィックを削減するために、パックに含まれていないオブジェクトに基づいてデルタ化された形でオブジェクトを記録する「シン」パックを送信します。</target>
        </trans-unit>
        <trans-unit id="dba975b50e1dab9f5a9242dc7eff168b3f3c3097" translate="yes" xml:space="preserve">
          <source>Send a collection of patches as emails</source>
          <target state="translated">パッチのコレクションをメールで送信</target>
        </trans-unit>
        <trans-unit id="68bbb0e77605fda568edfbf41010fd23ca67e845" translate="yes" xml:space="preserve">
          <source>Send a collection of patches from stdin to an IMAP folder</source>
          <target state="translated">stdin から IMAP フォルダにパッチのコレクションを送信する</target>
        </trans-unit>
        <trans-unit id="9e60bdff05a0f017374a45f7533dd42ce19f567b" translate="yes" xml:space="preserve">
          <source>Send archive back to git-archive</source>
          <target state="translated">アーカイブを git-archive に送り返す</target>
        </trans-unit>
        <trans-unit id="06c77ce9ef53aee9301f7f13788f25846ac20a8c" translate="yes" xml:space="preserve">
          <source>Send emails even if safety checks would prevent it.</source>
          <target state="translated">安全確認で防げてもメールを送る。</target>
        </trans-unit>
        <trans-unit id="be63d2739b30ca972f203afdf956fffed1109d64" translate="yes" xml:space="preserve">
          <source>Send log messages to the specified destination. Note that this option does not imply --verbose, thus by default only error conditions will be logged. The &amp;lt;destination&amp;gt; must be one of:</source>
          <target state="translated">指定された宛先にログメッセージを送信します。このオプションは--verboseを意味しないことに注意してください。したがって、デフォルトではエラー状態のみがログに記録されます。&amp;lt;destination&amp;gt;は次のいずれかである必要があります。</target>
        </trans-unit>
        <trans-unit id="251405e1d50dced2d303a34b1887abbae618fd89" translate="yes" xml:space="preserve">
          <source>Send objects packed back to git-fetch-pack</source>
          <target state="translated">パックされたオブジェクトを git-fetch-pack に送り返す</target>
        </trans-unit>
        <trans-unit id="30587fd7018a9775c3e41757ae3e2ad3d70bd2fe" translate="yes" xml:space="preserve">
          <source>Send results to standard output instead of overwriting &lt;code&gt;&amp;lt;current-file&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;current-file&amp;gt;&lt;/code&gt; を上書きする代わりに、結果を標準出力に送信します。</target>
        </trans-unit>
        <trans-unit id="3d06a389aa194b4adb3bdedb6cd48b760831d80a" translate="yes" xml:space="preserve">
          <source>Send the patch to yourself, exactly the way you would, except with To: and Cc: lines that do not contain the list and maintainer address.</source>
          <target state="translated">To:と Cc:の行にリストとメンテナのアドレスが含まれていないことを除いて、自分自身にパッチを送ってください。</target>
        </trans-unit>
        <trans-unit id="ceafde86d6c97e1f3a1eee505d203dadbe2732aa" translate="yes" xml:space="preserve">
          <source>Sending</source>
          <target state="translated">Sending</target>
        </trans-unit>
        <trans-unit id="bbde4ea1647345dcea60ec05d6e174947edc5729" translate="yes" xml:space="preserve">
          <source>Sending &lt;strong&gt;SIGUSR1&lt;/strong&gt; to the &lt;code&gt;git fast-import&lt;/code&gt; process ends the current packfile early, simulating a &lt;code&gt;checkpoint&lt;/code&gt; command. The impatient operator can use this facility to peek at the objects and refs from an import in progress, at the cost of some added running time and worse compression.</source>
          <target state="translated">&lt;strong&gt;SIGUSR1&lt;/strong&gt;を &lt;code&gt;git fast-import&lt;/code&gt; プロセスに送信すると、現在のパックファイルが早期に終了し、 &lt;code&gt;checkpoint&lt;/code&gt; コマンドがシミュレートされます。せっかちなオペレーターは、この機能を使用して、実行時間の増加と圧縮率の低下を犠牲にして、進行中のインポートからオブジェクトと参照を調べることができます。</target>
        </trans-unit>
        <trans-unit id="69d9f7cb6992812d3ae67c5832e95e51eb94b31e" translate="yes" xml:space="preserve">
          <source>Sends missing objects to remote repository, and updates the remote branch.</source>
          <target state="translated">不足しているオブジェクトをリモートリポジトリに送り、リモートブランチを更新します。</target>
        </trans-unit>
        <trans-unit id="23bbe7eedad5f66236da6f21a05fbf3a6d0c4e2b" translate="yes" xml:space="preserve">
          <source>Separate changes</source>
          <target state="translated">別々の変更</target>
        </trans-unit>
        <trans-unit id="eff8ac5c6bf46b60a389d5ad12d1eb060f7f80df" translate="yes" xml:space="preserve">
          <source>Separate out other information hidden behind NUL bytes (e.g. agent string as a capability and symrefs can be requested using &lt;code&gt;ls-refs&lt;/code&gt;)</source>
          <target state="translated">NULバイトの背後に隠されている他の情報を分離します（例：機能としてのエージェント文字列とsymrefsは &lt;code&gt;ls-refs&lt;/code&gt; を使用してリクエストできます）</target>
        </trans-unit>
        <trans-unit id="ece352ef8327b4eb0b177147a24a8ec2f1418b4f" translate="yes" xml:space="preserve">
          <source>Separate the commits with NULs instead of with new newlines.</source>
          <target state="translated">コミットを改行ではなく NUL で区切る。</target>
        </trans-unit>
        <trans-unit id="b8e497aff8340b70a81417c3e01a367bc04c018c" translate="yes" xml:space="preserve">
          <source>Separating argument from the option</source>
          <target state="translated">オプションから引数を分離する</target>
        </trans-unit>
        <trans-unit id="ad1ff98d9455414907920436d0228d1f33b8b9d5" translate="yes" xml:space="preserve">
          <source>Sequence &quot;%f&quot; on the filter command line is replaced with the name of the file the filter is working on. A filter might use this in keyword substitution. For example:</source>
          <target state="translated">フィルタのコマンドラインのシーケンス &quot;%f&quot; は、フィルタが作業しているファイルの名前に置き換えられます。フィルタはこれをキーワード置換で使用することができます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="0eabff0639877f6ba301a816aebe732d4b82d7eb" translate="yes" xml:space="preserve">
          <source>Sequencer subcommands</source>
          <target state="translated">シーケンサーサブコマンド</target>
        </trans-unit>
        <trans-unit id="4f86f0b14605788e8e970dd961527f669911f656" translate="yes" xml:space="preserve">
          <source>Server Admin</source>
          <target state="translated">サーバー管理者</target>
        </trans-unit>
        <trans-unit id="bf86016aaef42ea05ae67a04c37100e13cf311bf" translate="yes" xml:space="preserve">
          <source>Server side implementation of Git over HTTP</source>
          <target state="translated">HTTP 上での Git のサーバーサイド実装</target>
        </trans-unit>
        <trans-unit id="448833463540a7335612a7134526ca62a325b6eb" translate="yes" xml:space="preserve">
          <source>Server-side syntax highlight support in &quot;blob&quot; view. It requires &lt;code&gt;$highlight_bin&lt;/code&gt; program to be available (see the description of this variable in the &quot;Configuration variables&quot; section above), and therefore is disabled by default.</source>
          <target state="translated">サーバー側の構文は、「blob」ビューのサポートを強調表示します。 &lt;code&gt;$highlight_bin&lt;/code&gt; プログラムが利用可能である必要があり（上記の「構成変数」セクションのこの変数の説明を参照）、したがって、デフォルトでは無効になっています。</target>
        </trans-unit>
        <trans-unit id="5cbd584046863bc7b753e57e8681a98a87f36f0f" translate="yes" xml:space="preserve">
          <source>Services</source>
          <target state="translated">Services</target>
        </trans-unit>
        <trans-unit id="448ab73ba1c21e671e218fb91f2644c834f0c16f" translate="yes" xml:space="preserve">
          <source>Set</source>
          <target state="translated">Set</target>
        </trans-unit>
        <trans-unit id="3c9afc64e385fe9ff937f49ef33cea7eda6d2e43" translate="yes" xml:space="preserve">
          <source>Set &amp;lt;ref&amp;gt; to &amp;lt;newvalue&amp;gt; after verifying &amp;lt;oldvalue&amp;gt;, if given. Specify a zero &amp;lt;newvalue&amp;gt; to ensure the ref does not exist after the update and/or a zero &amp;lt;oldvalue&amp;gt; to make sure the ref does not exist before the update.</source>
          <target state="translated">&amp;lt;oldvalue&amp;gt;が指定されている場合は、検証後に&amp;lt;ref&amp;gt;を&amp;lt;newvalue&amp;gt;に設定します。更新後に参照が存在しないようにするには、ゼロの&amp;lt;newvalue&amp;gt;を指定するか、更新前に参照が存在しないようにするには、ゼロの&amp;lt;oldvalue&amp;gt;を指定します。</target>
        </trans-unit>
        <trans-unit id="ab50837f4221ee62152d0a56b00aa01e36d1c0b1" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;$maxload&lt;/code&gt; to undefined value (&lt;code&gt;undef&lt;/code&gt;) to turn this feature off. The default value is 300.</source>
          <target state="translated">この機能をオフにするには、 &lt;code&gt;$maxload&lt;/code&gt; を未定義の値（ &lt;code&gt;undef&lt;/code&gt; ）に設定します。デフォルト値は300です。</target>
        </trans-unit>
        <trans-unit id="b447103879e346ae5dca39d0e8955736e891677f" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;C'&lt;/code&gt; to &lt;code&gt;C&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;C'&lt;/code&gt; を &lt;code&gt;C&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="4c1de92d3e849c9a6ed15961e4d9552291b7de46" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;GIT_REFLOG_ACTION&lt;/code&gt; environment to a given string (typically the name of the program) unless it is already set. Whenever the script runs a &lt;code&gt;git&lt;/code&gt; command that updates refs, a reflog entry is created using the value of this string to leave the record of what command updated the ref.</source>
          <target state="translated">セット &lt;code&gt;GIT_REFLOG_ACTION&lt;/code&gt; のがすでに設定されていない限り、指定された文字列（プログラムの通常名）に環境。スクリプトが参照を更新する &lt;code&gt;git&lt;/code&gt; コマンドを実行するたびに、この文字列の値を使用してreflogエントリが作成され、どのコマンドが参照を更新したかの記録が残されます。</target>
        </trans-unit>
        <trans-unit id="38478f04f07d7922d4b7c7c155fa10a2d176d8aa" translate="yes" xml:space="preserve">
          <source>Set a configuration variable in the newly-created repository; this takes effect immediately after the repository is initialized, but before the remote history is fetched or any files checked out. The key is in the same format as expected by &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; (e.g., &lt;code&gt;core.eol=true&lt;/code&gt;). If multiple values are given for the same key, each value will be written to the config file. This makes it safe, for example, to add additional fetch refspecs to the origin remote.</source>
          <target state="translated">新しく作成したリポジトリに構成変数を設定します。これは、リポジトリが初期化された直後、ただしリモート履歴がフェッチされる前、またはファイルがチェックアウトされる前に有効になります。キーは&lt;a href=&quot;git-config&quot;&gt;git-config [1]で&lt;/a&gt;期待されるものと同じ形式です（例： &lt;code&gt;core.eol=true&lt;/code&gt; ）。同じキーに複数の値が指定されている場合、各値は構成ファイルに書き込まれます。これにより、たとえば、元のリモートにフェッチ参照仕様を追加することが安全になります。</target>
        </trans-unit>
        <trans-unit id="467cb3791c7eb0e6e17b468939871379585bf0d6" translate="yes" xml:space="preserve">
          <source>Set a custom directory to store the resulting files instead of the current working directory. All directory components will be created.</source>
          <target state="translated">カレントの作業ディレクトリではなく、結果のファイルを保存するカスタムディレクトリを設定します。すべてのディレクトリコンポーネントが作成されます。</target>
        </trans-unit>
        <trans-unit id="d443ac1fac5648ce0c972e61ba93f9dfa28cd774" translate="yes" xml:space="preserve">
          <source>Set a policy to be used by protocol &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; with clone/fetch/push commands. See &lt;code&gt;protocol.allow&lt;/code&gt; above for the available policies.</source>
          <target state="translated">clone / fetch / pushコマンドでプロトコル &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; が使用するポリシーを設定します。利用可能なポリシーについては、上記の &lt;code&gt;protocol.allow&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="ffb09a5018db72662a7a10ef6bf79bb4e8417501" translate="yes" xml:space="preserve">
          <source>Set an alternative CVSROOT to use. This corresponds to the CVS -d parameter. Usually users will not want to set this, except if using CVS in an asymmetric fashion.</source>
          <target state="translated">使用する代替 CVSROOT を設定します。これは CVS -d パラメータに相当します。通常、CVS を非対称的に使用する場合を除いて、ユーザはこれを設定したくないでしょう。</target>
        </trans-unit>
        <trans-unit id="eb6b278f7896d8837cef70de53516ad86e9dbdad" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;GIT_DIR&lt;/code&gt; environment variable. See &lt;a href=&quot;git&quot;&gt;git[1]&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;GIT_DIR&lt;/code&gt; 環境変数を設定します。&lt;a href=&quot;git&quot;&gt;git [1]を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ca1b08676b4e36a73ebf5696b8b5a7e5e3fbf70c" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;noMetadata&lt;/code&gt; option in the [svn-remote] config. This option is not recommended, please read the &lt;code&gt;svn.noMetadata&lt;/code&gt; section of this manpage before using this option.</source>
          <target state="translated">設定し &lt;code&gt;noMetadata&lt;/code&gt; の [SVN-リモート]設定でオプションを選択します。このオプションは推奨されません。このオプションを使用する前に、このマンページの &lt;code&gt;svn.noMetadata&lt;/code&gt; セクションをお読みください。</target>
        </trans-unit>
        <trans-unit id="29075e63ef31a9df87f17de44d7d1a90528328cf" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;rewriteRoot&lt;/code&gt; option in the [svn-remote] config.</source>
          <target state="translated">設定し &lt;code&gt;rewriteRoot&lt;/code&gt; の [SVN-リモート]設定でオプションを選択します。</target>
        </trans-unit>
        <trans-unit id="c2f253f2802c51ea11c741dbafd4f8bda616e672" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;rewriteUUID&lt;/code&gt; option in the [svn-remote] config.</source>
          <target state="translated">設定し &lt;code&gt;rewriteUUID&lt;/code&gt; [SVN-リモート]設定でオプションを選択します。</target>
        </trans-unit>
        <trans-unit id="b54b27dbc703e4c4c112e37e3cc708e31cfd5c62" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;useSvmProps&lt;/code&gt; option in the [svn-remote] config.</source>
          <target state="translated">設定し &lt;code&gt;useSvmProps&lt;/code&gt; の [SVN-リモート]設定でオプションを選択します。</target>
        </trans-unit>
        <trans-unit id="b1c79663eb36a223e3246a6761c3527b1fcb1cd9" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;useSvnsyncProps&lt;/code&gt; option in the [svn-remote] config.</source>
          <target state="translated">設定し &lt;code&gt;useSvnsyncProps&lt;/code&gt; の [SVN-リモート]設定でオプションを選択します。</target>
        </trans-unit>
        <trans-unit id="96cb52718c720acae8e359f2c3854a795081e029" translate="yes" xml:space="preserve">
          <source>Set the Git namespace. See &lt;a href=&quot;gitnamespaces&quot;&gt;gitnamespaces[7]&lt;/a&gt; for more details. Equivalent to setting the &lt;code&gt;GIT_NAMESPACE&lt;/code&gt; environment variable.</source>
          <target state="translated">Git名前空間を設定します。詳細については、&lt;a href=&quot;gitnamespaces&quot;&gt;gitnamespaces [7]&lt;/a&gt;を参照してください。 &lt;code&gt;GIT_NAMESPACE&lt;/code&gt; 環境変数の設定と同等です。</target>
        </trans-unit>
        <trans-unit id="7cb0d29338f1ad7db15e18be0474164e1bc21a46" translate="yes" xml:space="preserve">
          <source>Set the Git namespace; see &lt;a href=&quot;gitnamespaces&quot;&gt;gitnamespaces[7]&lt;/a&gt; for details. The &lt;code&gt;--namespace&lt;/code&gt; command-line option also sets this value.</source>
          <target state="translated">Git名前空間を設定します。詳細については、&lt;a href=&quot;gitnamespaces&quot;&gt;gitnamespaces [7]&lt;/a&gt;を参照してください。 &lt;code&gt;--namespace&lt;/code&gt; コマンドラインオプションも、この値を設定します。</target>
        </trans-unit>
        <trans-unit id="ce505bfde263ccf76db605c3871e55681201849e" translate="yes" xml:space="preserve">
          <source>Set the commit message to be used for the merge commit (in case one is created).</source>
          <target state="translated">マージコミットに使用するコミットメッセージを設定します (コミットが作成された場合)。</target>
        </trans-unit>
        <trans-unit id="60dd95cbd8809da88fe2e4f3deab8c8cfda23f9c" translate="yes" xml:space="preserve">
          <source>Set the creation/deletion cost fudge factor to &lt;code&gt;&amp;lt;percent&amp;gt;&lt;/code&gt;. Defaults to 60. Try a larger value if &lt;code&gt;git range-diff&lt;/code&gt; erroneously considers a large change a total rewrite (deletion of one commit and addition of another), and a smaller one in the reverse case. See the ``Algorithm`` section below for an explanation why this is needed.</source>
          <target state="translated">作成/削除のコストファッジ係数を &lt;code&gt;&amp;lt;percent&amp;gt;&lt;/code&gt; に設定します。デフォルトは60です &lt;code&gt;git range-diff&lt;/code&gt; が大きな変更を完全な書き換え（1つのコミットの削除と別のコミットの追加）と誤って見なし、逆の場合には小さな値と誤って見なす場合は、より大きい値を試してください。これが必要な理由の説明については、以下の「アルゴリズム」セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="e4867b6a9e4fdc121bda203b5824a86f390dc42c" translate="yes" xml:space="preserve">
          <source>Set the default date-time mode for the &lt;code&gt;log&lt;/code&gt; command. Setting a value for log.date is similar to using &lt;code&gt;git log&lt;/code&gt;'s &lt;code&gt;--date&lt;/code&gt; option. See &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;log&lt;/code&gt; コマンドのデフォルトの日時モードを設定します。log.dateの値を設定することは、 &lt;code&gt;git log&lt;/code&gt; の &lt;code&gt;--date&lt;/code&gt; オプションを使用することに似ています。詳細は&lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="452331e44dbf8a551529f8aab3eb063db65f0f80" translate="yes" xml:space="preserve">
          <source>Set the default matching behavior. Using a value of &lt;code&gt;basic&lt;/code&gt;, &lt;code&gt;extended&lt;/code&gt;, &lt;code&gt;fixed&lt;/code&gt;, or &lt;code&gt;perl&lt;/code&gt; will enable the &lt;code&gt;--basic-regexp&lt;/code&gt;, &lt;code&gt;--extended-regexp&lt;/code&gt;, &lt;code&gt;--fixed-strings&lt;/code&gt;, or &lt;code&gt;--perl-regexp&lt;/code&gt; option accordingly, while the value &lt;code&gt;default&lt;/code&gt; will return to the default matching behavior.</source>
          <target state="translated">デフォルトのマッチング動作を設定します。 &lt;code&gt;basic&lt;/code&gt; 、 &lt;code&gt;extended&lt;/code&gt; 、 &lt;code&gt;fixed&lt;/code&gt; 、または &lt;code&gt;perl&lt;/code&gt; の値を使用すると、それに &lt;code&gt;--basic-regexp&lt;/code&gt; 、 &lt;code&gt;--extended-regexp&lt;/code&gt; 、-- &lt;code&gt;--fixed-strings&lt;/code&gt; 、または &lt;code&gt;--perl-regexp&lt;/code&gt; オプションが &lt;code&gt;default&lt;/code&gt; なりますが、デフォルトの値はデフォルトのマッチング動作。</target>
        </trans-unit>
        <trans-unit id="0fa4faa1629ef6ce85f03023fc833f41e1dcd3a2" translate="yes" xml:space="preserve">
          <source>Set the execute permissions on the updated files.</source>
          <target state="translated">更新されたファイルの実行権限を設定します。</target>
        </trans-unit>
        <trans-unit id="8fcbe8639628c30552376de3870da0a1897ef81f" translate="yes" xml:space="preserve">
          <source>Set the length object names are abbreviated to. If unspecified or set to &quot;auto&quot;, an appropriate value is computed based on the approximate number of packed objects in your repository, which hopefully is enough for abbreviated object names to stay unique for some time. The minimum length is 4.</source>
          <target state="translated">オブジェクト名が省略される長さを設定します。指定しない場合や &quot;auto&quot; に設定されている場合、適切な値は、リポジトリ内のおおよそのパックされたオブジェクトの数に基づいて計算され、これは省略されたオブジェクト名がしばらくの間ユニークな状態を保つのに十分であることを願っています。最小の長さは4です。</target>
        </trans-unit>
        <trans-unit id="1c984f4d67f4b1c5f797e0985cdc839cd8173298" translate="yes" xml:space="preserve">
          <source>Set the method with which to authenticate against the HTTP proxy. This only takes effect if the configured proxy string contains a user name part (i.e. is of the form &lt;code&gt;user@host&lt;/code&gt; or &lt;code&gt;user@host:port&lt;/code&gt;). This can be overridden on a per-remote basis; see &lt;code&gt;remote.&amp;lt;name&amp;gt;.proxyAuthMethod&lt;/code&gt;. Both can be overridden by the &lt;code&gt;GIT_HTTP_PROXY_AUTHMETHOD&lt;/code&gt; environment variable. Possible values are:</source>
          <target state="translated">HTTPプロキシに対して認証する方法を設定します。これは、構成されたプロキシ文字列にユーザー名の部分が含まれている場合（つまり、 &lt;code&gt;user@host&lt;/code&gt; または &lt;code&gt;user@host:port&lt;/code&gt; の形式）にのみ有効です。これは、リモートごとにオーバーライドできます。 &lt;code&gt;remote.&amp;lt;name&amp;gt;.proxyAuthMethod&lt;/code&gt; 参照してください。どちらも &lt;code&gt;GIT_HTTP_PROXY_AUTHMETHOD&lt;/code&gt; 環境変数で上書きできます。可能な値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="4531ba21b83c7504310183413d920d4e527a579c" translate="yes" xml:space="preserve">
          <source>Set the name of placeholder files created by --preserve-empty-dirs. Default: &quot;.gitignore&quot;</source>
          <target state="translated">Preserve-empty-dirs で作成したプレースホルダファイルの名前を設定します。デフォルト:&quot;.gitignore&quot;</target>
        </trans-unit>
        <trans-unit id="31570b84b8684acde4e9da43dbd6e7e3871cdd6e" translate="yes" xml:space="preserve">
          <source>Set the path to the repository. This can also be controlled by setting the &lt;code&gt;GIT_DIR&lt;/code&gt; environment variable. It can be an absolute path or relative path to current working directory.</source>
          <target state="translated">リポジトリへのパスを設定します。これは、 &lt;code&gt;GIT_DIR&lt;/code&gt; 環境変数を設定して制御することもできます。現在の作業ディレクトリへの絶対パスまたは相対パスを指定できます。</target>
        </trans-unit>
        <trans-unit id="400ea02361b1fdf84359f8c82c5dbc03e0cfd801" translate="yes" xml:space="preserve">
          <source>Set the path to the root of the working tree. If &lt;code&gt;GIT_COMMON_DIR&lt;/code&gt; environment variable is set, core.worktree is ignored and not used for determining the root of working tree. This can be overridden by the &lt;code&gt;GIT_WORK_TREE&lt;/code&gt; environment variable and the &lt;code&gt;--work-tree&lt;/code&gt; command-line option. The value can be an absolute path or relative to the path to the .git directory, which is either specified by --git-dir or GIT_DIR, or automatically discovered. If --git-dir or GIT_DIR is specified but none of --work-tree, GIT_WORK_TREE and core.worktree is specified, the current working directory is regarded as the top level of your working tree.</source>
          <target state="translated">パスを作業ツリーのルートに設定します。 &lt;code&gt;GIT_COMMON_DIR&lt;/code&gt; 環境変数が設定されている場合、core.worktreeは無視され、作業ツリーのルートを決定するために使用されません。これは、 &lt;code&gt;GIT_WORK_TREE&lt;/code&gt; 環境変数と &lt;code&gt;--work-tree&lt;/code&gt; コマンドラインオプションでオーバーライドできます。値は、絶対パスまたは.gitディレクトリへの相対パスにすることができます。これは、-git-dirまたはGIT_DIRによって指定されるか、自動的に検出されます。 --git-dirまたはGIT_DIRが指定されているが--work-tree、GIT_WORK_TREE、およびcore.worktreeのいずれも指定されていない場合、現在の作業ディレクトリが作業ツリーの最上位レベルと見なされます。</target>
        </trans-unit>
        <trans-unit id="e77cf9dbfa8bb073ac521b0115fcf267d700de96" translate="yes" xml:space="preserve">
          <source>Set the path to the root of the working tree. This can also be controlled by the &lt;code&gt;--work-tree&lt;/code&gt; command-line option and the core.worktree configuration variable.</source>
          <target state="translated">パスを作業ツリーのルートに設定します。これは &lt;code&gt;--work-tree&lt;/code&gt; コマンドラインオプションとcore.worktree構成変数でも制御できます。</target>
        </trans-unit>
        <trans-unit id="3d76dd27e6c2a8b0058c2a945baf951d7f68aa28" translate="yes" xml:space="preserve">
          <source>Set the path to the working tree. It can be an absolute path or a path relative to the current working directory. This can also be controlled by setting the GIT_WORK_TREE environment variable and the core.worktree configuration variable (see core.worktree in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for a more detailed discussion).</source>
          <target state="translated">作業ツリーへのパスを設定します。絶対パスまたは現在の作業ディレクトリからの相対パスを指定できます。これは、GIT_WORK_TREE環境変数とcore.worktree構成変数を設定することでも制御できます（詳細については、&lt;a href=&quot;git-config&quot;&gt;git-config [1]の&lt;/a&gt; core.worktreeを参照してください）。</target>
        </trans-unit>
        <trans-unit id="ed921cb30a3554abcb258c374cc8879de4b6e735" translate="yes" xml:space="preserve">
          <source>Set the starting point at which to create the new commits to the merge base of &amp;lt;upstream&amp;gt; &amp;lt;branch&amp;gt;. Running &lt;code&gt;git rebase --keep-base &amp;lt;upstream&amp;gt; &amp;lt;branch&amp;gt;&lt;/code&gt; is equivalent to running &lt;code&gt;git rebase --onto &amp;lt;upstream&amp;gt;&amp;hellip;​ &amp;lt;upstream&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">新しいコミットを作成する開始点を、&amp;lt;upstream&amp;gt; &amp;lt;branch&amp;gt;のマージベースに設定します。実行 &lt;code&gt;git rebase --keep-base &amp;lt;upstream&amp;gt; &amp;lt;branch&amp;gt;&lt;/code&gt; 実行するのと同じです &lt;code&gt;git rebase --onto &amp;lt;upstream&amp;gt;&amp;hellip;​ &amp;lt;upstream&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b6b13ff409b582dcf430b9ece41f38914d244e47" translate="yes" xml:space="preserve">
          <source>Set this option to &lt;code&gt;false&lt;/code&gt; to disable the default heuristics that shift diff hunk boundaries to make patches easier to read.</source>
          <target state="translated">このオプションを &lt;code&gt;false&lt;/code&gt; に設定すると、diff hunk境界をシフトしてパッチを読みやすくするデフォルトのヒューリスティックが無効になります。</target>
        </trans-unit>
        <trans-unit id="006b55776506e3606ed55b1bbce55137d0106c81" translate="yes" xml:space="preserve">
          <source>Set this option to true to make the diff driver cache the text conversion outputs. See &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt; for details.</source>
          <target state="translated">このオプションをtrueに設定して、diffドライバーがテキスト変換出力をキャッシュするようにします。詳細については、&lt;a href=&quot;gitattributes&quot;&gt;gitattributes [5]&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ef5fd1abf8d8364854389e921b837341fb77c76d" translate="yes" xml:space="preserve">
          <source>Set this option to true to make the diff driver treat files as binary. See &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt; for details.</source>
          <target state="translated">このオプションをtrueに設定すると、diffドライバーはファイルをバイナリーとして扱います。詳細については、&lt;a href=&quot;gitattributes&quot;&gt;gitattributes [5]&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ef3e5c6a12efe8e7150b1e7869bbdde3d0dce7a8" translate="yes" xml:space="preserve">
          <source>Set this variable to &lt;code&gt;false&lt;/code&gt; if you want to disable &lt;code&gt;pushNonFFCurrent&lt;/code&gt;, &lt;code&gt;pushNonFFMatching&lt;/code&gt;, &lt;code&gt;pushAlreadyExists&lt;/code&gt;, &lt;code&gt;pushFetchFirst&lt;/code&gt;, and &lt;code&gt;pushNeedsForce&lt;/code&gt; simultaneously.</source>
          <target state="translated">&lt;code&gt;pushNonFFCurrent&lt;/code&gt; 、 &lt;code&gt;pushNonFFMatching&lt;/code&gt; 、 &lt;code&gt;pushAlreadyExists&lt;/code&gt; 、 &lt;code&gt;pushFetchFirst&lt;/code&gt; 、および &lt;code&gt;pushNeedsForce&lt;/code&gt; を同時に無効にする場合は、この変数を &lt;code&gt;false&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="3942f1a8d8fbbbd45defb8fdf1e1532d95e95175" translate="yes" xml:space="preserve">
          <source>Set to 0 to prevent protocols used by fetch/push/clone which are configured to the &lt;code&gt;user&lt;/code&gt; state. This is useful to restrict recursive submodule initialization from an untrusted repository or for programs which feed potentially-untrusted URLS to git commands. See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for more details.</source>
          <target state="translated">0に設定すると、 &lt;code&gt;user&lt;/code&gt; 状態に設定されているフェッチ/プッシュ/クローンで使用されるプロトコルが無効になります。これは、信頼できないリポジトリからの再帰的なサブモジュールの初期化を制限する場合や、信頼できない可能性のあるURLをgitコマンドにフィードするプログラムの場合に便利です。詳細については、&lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="b65b88faf09ed3e78aacba5ecd3c0b74f296551e" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;change&lt;/code&gt; if you want changes in whitespace to be ignored by default. Set to one of: no, none, never, false if you want changes in whitespace to be significant.</source>
          <target state="translated">空白の変更をデフォルトで無視する場合は、 &lt;code&gt;change&lt;/code&gt; に設定します。空白の変更を大きくしたい場合は、no、none、never、falseのいずれかに設定します。</target>
        </trans-unit>
        <trans-unit id="5365106003c727ad2992b276959d7e28e3f5d488" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;false&lt;/code&gt; to use the legacy shell script implementation of &lt;a href=&quot;git-stash&quot;&gt;git-stash[1]&lt;/a&gt;. Is &lt;code&gt;true&lt;/code&gt; by default, which means use the built-in rewrite of it in C.</source>
          <target state="translated">&lt;a href=&quot;git-stash&quot;&gt;git-stash [1]&lt;/a&gt;のレガシーシェルスクリプト実装を使用するには、 &lt;code&gt;false&lt;/code&gt; に設定します。デフォルトでは &lt;code&gt;true&lt;/code&gt; です。つまり、Cで組み込みの書き換えを使用します。</target>
        </trans-unit>
        <trans-unit id="55c516b6a3b5abf93c689c87b62d882f67783e93" translate="yes" xml:space="preserve">
          <source>Set to a value</source>
          <target state="translated">値に設定します。</target>
        </trans-unit>
        <trans-unit id="126c88db7f15369f3dbc6085e635b28af0c85793" translate="yes" xml:space="preserve">
          <source>Set to false to enable &lt;code&gt;--no-show-forced-updates&lt;/code&gt; in &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt; and &lt;a href=&quot;git-pull&quot;&gt;git-pull[1]&lt;/a&gt; commands. Defaults to true.</source>
          <target state="translated">有効にするには、falseに設定し &lt;code&gt;--no-show-forced-updates&lt;/code&gt; 中に&lt;a href=&quot;git-fetch&quot;&gt;[1]のgitをフェッチ&lt;/a&gt;し、&lt;a href=&quot;git-pull&quot;&gt;gitのプル[1]&lt;/a&gt;コマンドを。デフォルトはtrueです。</target>
        </trans-unit>
        <trans-unit id="361b59fb11064babad5acb39754e365b2c18e181" translate="yes" xml:space="preserve">
          <source>Set to long name (git-upload-pack, etc&amp;hellip;​) of service helper needs to invoke.</source>
          <target state="translated">呼び出す必要のあるサービスヘルパーの長い名前（git-upload-packなど）に設定します。</target>
        </trans-unit>
        <trans-unit id="4bc0f158fa5fccd4891458dbb2fe87fd0c2639c2" translate="yes" xml:space="preserve">
          <source>Set to long name (upload-pack, etc&amp;hellip;​) of service helper needs to invoke.</source>
          <target state="translated">呼び出す必要のあるサービスヘルパーの長い名前（アップロードパックなど...）に設定します</target>
        </trans-unit>
        <trans-unit id="e57cc917cd5904e6e25fccb477e015eebd2cea7f" translate="yes" xml:space="preserve">
          <source>Set to string value &quot;auto&quot;</source>
          <target state="translated">文字列値 &quot;auto &quot;を設定します。</target>
        </trans-unit>
        <trans-unit id="f9270f5e7d6f6a107dd8727f8e03989aa7e1e07f" translate="yes" xml:space="preserve">
          <source>Set to string value &quot;crlf&quot;</source>
          <target state="translated">文字列値 &quot;crlf &quot;を設定します。</target>
        </trans-unit>
        <trans-unit id="a22b46e67f1294009226c3e99f53a466328184f5" translate="yes" xml:space="preserve">
          <source>Set to string value &quot;lf&quot;</source>
          <target state="translated">文字列値 &quot;alf &quot;を設定します。</target>
        </trans-unit>
        <trans-unit id="7f3636e90ee07f52b1799adf7d20919a4160ef67" translate="yes" xml:space="preserve">
          <source>Set to true to enable --branch by default in &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt;. The option --no-branch takes precedence over this variable.</source>
          <target state="translated">&lt;a href=&quot;git-status&quot;&gt;git-status [1]で&lt;/a&gt;デフォルトで--branchを有効にするには、trueに設定します。オプション--no-branchは、この変数よりも優先されます。</target>
        </trans-unit>
        <trans-unit id="01828a4204064cca5b2e88b220546dc5742bc0f1" translate="yes" xml:space="preserve">
          <source>Set to true to enable --short by default in &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt;. The option --no-short takes precedence over this variable.</source>
          <target state="translated">&lt;a href=&quot;git-status&quot;&gt;git-status [1]で&lt;/a&gt;デフォルトで--shortを有効にするには、trueに設定します。オプション--no-shortは、この変数よりも優先されます。</target>
        </trans-unit>
        <trans-unit id="a2f50541fbb43557b6973a5064eb81647dcf94e2" translate="yes" xml:space="preserve">
          <source>Set to true to enable &lt;code&gt;--ahead-behind&lt;/code&gt; and false to enable &lt;code&gt;--no-ahead-behind&lt;/code&gt; by default in &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt; for non-porcelain status formats. Defaults to true.</source>
          <target state="translated">有効にするにはtrueに設定 &lt;code&gt;--ahead-behind&lt;/code&gt; 有効にすると偽を &lt;code&gt;--no-ahead-behind&lt;/code&gt; 、デフォルトで&lt;a href=&quot;git-status&quot;&gt;はgit-状態[1]&lt;/a&gt;非磁器のステータスフォーマットのため。デフォルトはtrueです。</target>
        </trans-unit>
        <trans-unit id="96f0b77e868eff9d4ad63451b6702c714a9e3c67" translate="yes" xml:space="preserve">
          <source>Set to true to write a commit-graph after every &lt;code&gt;git fetch&lt;/code&gt; command that downloads a pack-file from a remote. Using the &lt;code&gt;--split&lt;/code&gt; option, most executions will create a very small commit-graph file on top of the existing commit-graph file(s). Occasionally, these files will merge and the write may take longer. Having an updated commit-graph file helps performance of many Git commands, including &lt;code&gt;git merge-base&lt;/code&gt;, &lt;code&gt;git push -f&lt;/code&gt;, and &lt;code&gt;git log --graph&lt;/code&gt;. Defaults to false, unless &lt;code&gt;feature.experimental&lt;/code&gt; is true.</source>
          <target state="translated">リモートからパックファイルをダウンロードするすべての &lt;code&gt;git fetch&lt;/code&gt; コマンドの後にコミットグラフを書き込むには、trueに設定します。 &lt;code&gt;--split&lt;/code&gt; オプションを使用すると、ほとんどの実行で、既存のコミットグラフファイルの上に非常に小さなコミットグラフファイルが作成されます。場合によっては、これらのファイルがマージされ、書き込みに時間がかかることがあります。コミットグラフファイルを更新すると、 &lt;code&gt;git merge-base&lt;/code&gt; 、 &lt;code&gt;git push -f&lt;/code&gt; 、 &lt;code&gt;git log --graph&lt;/code&gt; など、多くのGitコマンドのパフォーマンスが向上します。 &lt;code&gt;feature.experimental&lt;/code&gt; がtrue でない限り、デフォルトはfalse です。</target>
        </trans-unit>
        <trans-unit id="6596cd35135fea85976308a2f017fa88ea4c3f97" translate="yes" xml:space="preserve">
          <source>Set up &amp;lt;branchname&amp;gt;'s tracking information so &amp;lt;upstream&amp;gt; is considered &amp;lt;branchname&amp;gt;'s upstream branch. If no &amp;lt;branchname&amp;gt; is specified, then it defaults to the current branch.</source>
          <target state="translated">&amp;lt;branchname&amp;gt;の追跡情報を設定して、&amp;lt;upstream&amp;gt;が&amp;lt;branchname&amp;gt;の上流ブランチと見なされるようにします。&amp;lt;branchname&amp;gt;が指定されていない場合、デフォルトで現在のブランチになります。</target>
        </trans-unit>
        <trans-unit id="a7d9f42de7103c698b8b04159cb04db5a6d63650" translate="yes" xml:space="preserve">
          <source>Set up a mirror of the source repository. This implies &lt;code&gt;--bare&lt;/code&gt;. Compared to &lt;code&gt;--bare&lt;/code&gt;, &lt;code&gt;--mirror&lt;/code&gt; not only maps local branches of the source to local branches of the target, it maps all refs (including remote-tracking branches, notes etc.) and sets up a refspec configuration such that all these refs are overwritten by a &lt;code&gt;git remote update&lt;/code&gt; in the target repository.</source>
          <target state="translated">ソースリポジトリのミラーをセットアップします。これは &lt;code&gt;--bare&lt;/code&gt; を意味します。比べ &lt;code&gt;--bare&lt;/code&gt; 、 &lt;code&gt;--mirror&lt;/code&gt; だけでなくすることは、ターゲットのローカルブランチに元の支店をマッピングし、それが（リモート追跡ブランチ、ノートなどを含む）すべての引用文献をマッピングし、そのようなすべてのこれらの参照文献そのrefspec構成を設定しますターゲットリポジトリ内の &lt;code&gt;git remote update&lt;/code&gt; によって上書きされます。</target>
        </trans-unit>
        <trans-unit id="7e96219d093661439598475221c87d2588db74a2" translate="yes" xml:space="preserve">
          <source>Sets default options for merging into branch &amp;lt;name&amp;gt;. The syntax and supported options are the same as those of &lt;a href=&quot;git-merge&quot;&gt;git-merge[1]&lt;/a&gt;, but option values containing whitespace characters are currently not supported.</source>
          <target state="translated">ブランチ&amp;lt;name&amp;gt;にマ​​ージするためのデフォルトオプションを設定します。構文とサポートされるオプションは&lt;a href=&quot;git-merge&quot;&gt;git-merge [1]の&lt;/a&gt;ものと同じですが、空白文字を含むオプション値は現在サポートされていません。</target>
        </trans-unit>
        <trans-unit id="ae1bdc4ada17600e4b52aa414b8e4fd8124c824c" translate="yes" xml:space="preserve">
          <source>Sets default options for merging into branch &amp;lt;name&amp;gt;. The syntax and supported options are the same as those of &lt;code&gt;git merge&lt;/code&gt;, but option values containing whitespace characters are currently not supported.</source>
          <target state="translated">ブランチ&amp;lt;name&amp;gt;にマ​​ージするためのデフォルトオプションを設定します。構文とサポートされているオプションは &lt;code&gt;git merge&lt;/code&gt; のものと同じですが、空白文字を含むオプション値は現在サポートされていません。</target>
        </trans-unit>
        <trans-unit id="d284647c4bbe7eed170d8bbd06667eb66997a29f" translate="yes" xml:space="preserve">
          <source>Sets location of common system-wide configuration file.</source>
          <target state="translated">システム全体に共通の設定ファイルの場所を設定します。</target>
        </trans-unit>
        <trans-unit id="b2395ce7c9c6f7832c2a162201b3e7779e8713ae" translate="yes" xml:space="preserve">
          <source>Sets location of fallback system-wide configuration file. This file is read only if per-instance one does not exist.</source>
          <target state="translated">フォールバックシステム全体の設定ファイルの場所を設定します。このファイルは、インスタンスごとの設定ファイルが存在しない場合にのみ読み込まれます。</target>
        </trans-unit>
        <trans-unit id="80c7084a9261d496ded6a154cb1d21190935c2fb" translate="yes" xml:space="preserve">
          <source>Sets location of per-instance configuration file.</source>
          <target state="translated">インスタンス単位の設定ファイルの場所を設定します。</target>
        </trans-unit>
        <trans-unit id="e0e9d645e60e4880815c1beb8a485ff180b9df6b" translate="yes" xml:space="preserve">
          <source>Sets or deletes the default branch (i.e. the target of the symbolic-ref &lt;code&gt;refs/remotes/&amp;lt;name&amp;gt;/HEAD&lt;/code&gt;) for the named remote. Having a default branch for a remote is not required, but allows the name of the remote to be specified in lieu of a specific branch. For example, if the default branch for &lt;code&gt;origin&lt;/code&gt; is set to &lt;code&gt;master&lt;/code&gt;, then &lt;code&gt;origin&lt;/code&gt; may be specified wherever you would normally specify &lt;code&gt;origin/master&lt;/code&gt;.</source>
          <target state="translated">名前付きリモートのデフォルトブランチ（つまり、symbolic-ref &lt;code&gt;refs/remotes/&amp;lt;name&amp;gt;/HEAD&lt;/code&gt; のターゲット）を設定または削除します。リモートにデフォルトのブランチを用意する必要はありませんが、特定のブランチの代わりにリモートの名前を指定できます。たとえば、 &lt;code&gt;origin&lt;/code&gt; のデフォルトのブランチが &lt;code&gt;master&lt;/code&gt; に設定されている場合は、通常 &lt;code&gt;origin/master&lt;/code&gt; を指定する場所に &lt;code&gt;origin&lt;/code&gt; を指定できます。</target>
        </trans-unit>
        <trans-unit id="b2e044e154b8bedcebccbb47c9cffea4e43f05f2" translate="yes" xml:space="preserve">
          <source>Sets service path (--upload-pack, --receive-pack etc.) for next connect. Remote helper may support this option, but must not rely on this option being set before connect request occurs.</source>
          <target state="translated">次の接続のためのサービスパス (--upload-pack,--receive-pack など)を設定します。リモートヘルパーはこのオプションをサポートしているかもしれませんが、接続要求が発生する前にこのオプションが設定されていることに依存してはいけません。</target>
        </trans-unit>
        <trans-unit id="4daf5e09ce23fccb50e846fa35fe9d7420d00620" translate="yes" xml:space="preserve">
          <source>Sets the Subversion property given as the first argument, to the value given as the second argument for the file given as the third argument.</source>
          <target state="translated">第1引数で与えられたSubversionプロパティを、第3引数で与えられたファイルに対して第2引数で与えられた値に設定します。</target>
        </trans-unit>
        <trans-unit id="7bdcb303e2640fa11b5be793f726d7f4d39f5dcd" translate="yes" xml:space="preserve">
          <source>Sets the URL of the specified submodule to &amp;lt;newurl&amp;gt;. Then, it will automatically synchronize the submodule&amp;rsquo;s new remote URL configuration.</source>
          <target state="translated">指定されたサブモジュールのURLを&amp;lt;newurl&amp;gt;に設定します。次に、サブモジュールの新しいリモートURL構成を自動的に同期します。</target>
        </trans-unit>
        <trans-unit id="81149e7775b257084aed4c2f69389cf77384d49e" translate="yes" xml:space="preserve">
          <source>Sets the default for whether to confirm before sending. Must be one of &lt;code&gt;always&lt;/code&gt;, &lt;code&gt;never&lt;/code&gt;, &lt;code&gt;cc&lt;/code&gt;, &lt;code&gt;compose&lt;/code&gt;, or &lt;code&gt;auto&lt;/code&gt;. See &lt;code&gt;--confirm&lt;/code&gt; in the previous section for the meaning of these values.</source>
          <target state="translated">送信前に確認するかどうかのデフォルトを設定します。 &lt;code&gt;always&lt;/code&gt; 、 &lt;code&gt;never&lt;/code&gt; 、 &lt;code&gt;cc&lt;/code&gt; 、 &lt;code&gt;compose&lt;/code&gt; 、 &lt;code&gt;auto&lt;/code&gt; のいずれかである必要があります。これらの値の意味については、前のセクションの &lt;code&gt;--confirm&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="ae96977bcaf8246e51bbdd562c9442e5f847dd67" translate="yes" xml:space="preserve">
          <source>Sets the default remote tracking branch for the submodule. The &lt;code&gt;--branch&lt;/code&gt; option allows the remote branch to be specified. The &lt;code&gt;--default&lt;/code&gt; option removes the submodule.&amp;lt;name&amp;gt;.branch configuration key, which causes the tracking branch to default to &lt;code&gt;master&lt;/code&gt;.</source>
          <target state="translated">サブモジュールのデフォルトのリモート追跡ブランチを設定します。 &lt;code&gt;--branch&lt;/code&gt; オプションは、リモートブランチを指定することができます。 &lt;code&gt;--default&lt;/code&gt; オプションでは、サブモジュールを削除します。追跡ブランチはをデフォルトになり、&amp;lt;名前&amp;gt; .branch設定キー、 &lt;code&gt;master&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0ebd0697d4e9cc9507469a589b214100fff93c18" translate="yes" xml:space="preserve">
          <source>Sets the default value of --ignore-submodules. Note that this affects only &lt;code&gt;git diff&lt;/code&gt; Porcelain, and not lower level &lt;code&gt;diff&lt;/code&gt; commands such as &lt;code&gt;git diff-files&lt;/code&gt;. &lt;code&gt;git checkout&lt;/code&gt; and &lt;code&gt;git switch&lt;/code&gt; also honor this setting when reporting uncommitted changes. Setting it to &lt;code&gt;all&lt;/code&gt; disables the submodule summary normally shown by &lt;code&gt;git commit&lt;/code&gt; and &lt;code&gt;git status&lt;/code&gt; when &lt;code&gt;status.submoduleSummary&lt;/code&gt; is set unless it is overridden by using the --ignore-submodules command-line option. The &lt;code&gt;git submodule&lt;/code&gt; commands are not affected by this setting.</source>
          <target state="translated">--ignore-submodulesのデフォルト値を設定します。これは &lt;code&gt;git diff&lt;/code&gt; Porcelainにのみ影響し、 &lt;code&gt;git diff-files&lt;/code&gt; などの低レベルの &lt;code&gt;diff&lt;/code&gt; コマンドには影響しないことに注意してください。 &lt;code&gt;git checkout&lt;/code&gt; と &lt;code&gt;git switch&lt;/code&gt; も、コミットされていない変更を報告するときにこの設定を受け入れます。これを &lt;code&gt;all&lt;/code&gt; 設定 &lt;code&gt;git commit&lt;/code&gt; と、--ignore-submodulesコマンドラインオプションを使用してオーバーライドされない限り、 &lt;code&gt;status.submoduleSummary&lt;/code&gt; が設定されている場合、通常はgit commitと &lt;code&gt;git status&lt;/code&gt; で表示されるサブモジュールの概要が無効になります。 &lt;code&gt;git submodule&lt;/code&gt; コマンドは、この設定の影響を受けません。</target>
        </trans-unit>
        <trans-unit id="223bc7be9fc4d628a9979e3c0b82abe9a693f525" translate="yes" xml:space="preserve">
          <source>Sets the git refspec against which the shelved P4 changelist is compared. Defaults to p4/master.</source>
          <target state="translated">棚上げされた P4 の変更リストを比較するための git refspec を設定します。デフォルトは p4/master です。</target>
        </trans-unit>
        <trans-unit id="b66175dc0e90d1aff6b86be51b6554732d676a1f" translate="yes" xml:space="preserve">
          <source>Sets the line ending type to use in the working directory for files that are marked as text (either by having the &lt;code&gt;text&lt;/code&gt; attribute set, or by having &lt;code&gt;text=auto&lt;/code&gt; and Git auto-detecting the contents as text). Alternatives are &lt;code&gt;lf&lt;/code&gt;, &lt;code&gt;crlf&lt;/code&gt; and &lt;code&gt;native&lt;/code&gt;, which uses the platform&amp;rsquo;s native line ending. The default value is &lt;code&gt;native&lt;/code&gt;. See &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt; for more information on end-of-line conversion. Note that this value is ignored if &lt;code&gt;core.autocrlf&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="translated">テキストとしてマークされているファイルの作業ディレクトリで使用する行末のタイプを設定します（ &lt;code&gt;text&lt;/code&gt; 属性を設定するか、 &lt;code&gt;text=auto&lt;/code&gt; とGitが内容をテキストとして自動検出することによって）。代替は &lt;code&gt;lf&lt;/code&gt; 、 &lt;code&gt;crlf&lt;/code&gt; および &lt;code&gt;native&lt;/code&gt; であり、プラットフォームのネイティブ行末を使用します。デフォルト値は &lt;code&gt;native&lt;/code&gt; です。&lt;a href=&quot;gitattributes&quot;&gt;行末変換の&lt;/a&gt;詳細については、gitattributes [5]を参照してください。 &lt;code&gt;core.autocrlf&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; または &lt;code&gt;input&lt;/code&gt; に設定されている場合、この値は無視されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="767fb38cee626faf4bebc702c67f21f5034dd689" translate="yes" xml:space="preserve">
          <source>Sets the transport helper option &amp;lt;name&amp;gt; to &amp;lt;value&amp;gt;. Outputs a single line containing one of &lt;code&gt;ok&lt;/code&gt; (option successfully set), &lt;code&gt;unsupported&lt;/code&gt; (option not recognized) or &lt;code&gt;error &amp;lt;msg&amp;gt;&lt;/code&gt; (option &amp;lt;name&amp;gt; is supported but &amp;lt;value&amp;gt; is not valid for it). Options should be set before other commands, and may influence the behavior of those commands.</source>
          <target state="translated">トランスポートヘルパーオプション&amp;lt;name&amp;gt;を&amp;lt;value&amp;gt;に設定します。 &lt;code&gt;ok&lt;/code&gt; （オプションが正常に設定された）、 &lt;code&gt;unsupported&lt;/code&gt; （オプションが認識されない）、または &lt;code&gt;error &amp;lt;msg&amp;gt;&lt;/code&gt; （オプション&amp;lt;name&amp;gt;はサポートされていますが、&amp;lt;value&amp;gt;は有効ではありません）のいずれかを含む1行を出力します。オプションは他のコマンドの前に設定する必要があり、それらのコマンドの動作に影響を与える可能性があります。</target>
        </trans-unit>
        <trans-unit id="38552fb2c7ab669744831fa34346e5ff34c9ae00" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; will be picked up by &lt;a href=&quot;git-fsck&quot;&gt;git-fsck[1]&lt;/a&gt;, but to accept pushes of such data set &lt;code&gt;receive.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; instead, or to clone or fetch it set &lt;code&gt;fetch.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; 設定は&lt;a href=&quot;git-fsck&quot;&gt;git-fsck [1]&lt;/a&gt;によってピックアップされますが、代わりにそのようなデータセット &lt;code&gt;receive.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; プッシュを受け入れるか、それを複製またはフェッチするには &lt;code&gt;fetch.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; 設定します。 &amp;lt;msg-id&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="f8d5bb1f4cfa6fbc6e58411c45908a4ed9f34950" translate="yes" xml:space="preserve">
          <source>Setting an unknown &lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; value will cause fsck to die, but doing the same for &lt;code&gt;receive.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; and &lt;code&gt;fetch.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; will only cause git to warn.</source>
          <target state="translated">未知の設定 &lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; 値はfsckを死なせたが、同じことをやってます &lt;code&gt;receive.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; と &lt;code&gt;fetch.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; のみ警告するgitの原因になります。</target>
        </trans-unit>
        <trans-unit id="ec7eb0199cb3dbce5770abe0a0c2186f2bc8c0a6" translate="yes" xml:space="preserve">
          <source>Setting the &quot;binary&quot; attribute also unsets the &quot;text&quot; and &quot;diff&quot; attributes as above. Note that macro attributes can only be &quot;Set&quot;, though setting one might have the effect of setting or unsetting other attributes or even returning other attributes to the &quot;Unspecified&quot; state.</source>
          <target state="translated">binary &quot;属性を設定すると、上記のように &quot;text &quot;と &quot;diff &quot;属性も解除されます。マクロ属性は &quot;Set &quot;しかできないことに注意してください。しかし、マクロ属性を設定すると、他の属性を設定したり解除したり、他の属性を &quot;Unspecified &quot;の状態に戻す効果があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="c0809d7ae8979681e24885ec19091ca517e2431a" translate="yes" xml:space="preserve">
          <source>Setting the &lt;code&gt;mergetool.keepBackup&lt;/code&gt; configuration variable to &lt;code&gt;false&lt;/code&gt; causes &lt;code&gt;git mergetool&lt;/code&gt; to automatically remove the backup as files are successfully merged.</source>
          <target state="translated">設定 &lt;code&gt;mergetool.keepBackup&lt;/code&gt; のに設定変数を &lt;code&gt;false&lt;/code&gt; 原因 &lt;code&gt;git mergetool&lt;/code&gt; 自動的にファイルとしてバックアップを削除することに成功マージされます。</target>
        </trans-unit>
        <trans-unit id="6f0c93315d42b41cf980b4419425789cdaac4058" translate="yes" xml:space="preserve">
          <source>Setting the &lt;code&gt;text&lt;/code&gt; attribute on a path enables end-of-line normalization and marks the path as a text file. End-of-line conversion takes place without guessing the content type.</source>
          <target state="translated">パスに &lt;code&gt;text&lt;/code&gt; 属性を設定すると、行末の正規化が有効になり、パスがテキストファイルとしてマークされます。コンテンツタイプを推測することなく、行末変換が行われます。</target>
        </trans-unit>
        <trans-unit id="3d1285aa205a15a3a5aafcd8d0c8d4ab4efd4f97" translate="yes" xml:space="preserve">
          <source>Setting the environment variable &lt;code&gt;GITWEB_CONFIG&lt;/code&gt; will tell gitweb to use the named file (i.e. in this example &lt;code&gt;/etc/gitweb.conf&lt;/code&gt;) as a configuration for gitweb. You don&amp;rsquo;t really need it in above example; it is required only if your configuration file is in different place than built-in (during compiling gitweb) &lt;code&gt;gitweb_config.perl&lt;/code&gt; or &lt;code&gt;/etc/gitweb.conf&lt;/code&gt;. See &lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf[5]&lt;/a&gt; for details, especially information about precedence rules.</source>
          <target state="translated">環境変数 &lt;code&gt;GITWEB_CONFIG&lt;/code&gt; を設定すると、指定したファイル（この例では &lt;code&gt;/etc/gitweb.conf&lt;/code&gt; ）をgitwebの構成として使用するようにgitwebに指示します。上記の例では実際には必要ありません。これは、構成ファイルが組み込み（gitwebのコンパイル中） &lt;code&gt;gitweb_config.perl&lt;/code&gt; または &lt;code&gt;/etc/gitweb.conf&lt;/code&gt; とは異なる場所にある場合にのみ必要です。参照してください&lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf [5]&lt;/a&gt;詳細については、優先順位の規則について、特に情報を。</target>
        </trans-unit>
        <trans-unit id="3d285efb6da308c8dd90713d0979acc9d8958228" translate="yes" xml:space="preserve">
          <source>Setting this to 0 disables not only automatic packing based on the number of loose objects, but any other heuristic &lt;code&gt;git gc --auto&lt;/code&gt; will otherwise use to determine if there&amp;rsquo;s work to do, such as &lt;code&gt;gc.autoPackLimit&lt;/code&gt;.</source>
          <target state="translated">これを0に設定すると、ルースオブジェクトの数に基づく自動パッキングだけでなく、 &lt;code&gt;gc.autoPackLimit&lt;/code&gt; など、他のヒューリスティックな &lt;code&gt;git gc --auto&lt;/code&gt; を使用して、実行する作業があるかどうかを判断します。</target>
        </trans-unit>
        <trans-unit id="ab556d3ed86f8d66a38201c818a74d5378c14e11" translate="yes" xml:space="preserve">
          <source>Setting this to a value &amp;lt;vcs&amp;gt; will cause Git to interact with the remote with the git-remote-&amp;lt;vcs&amp;gt; helper.</source>
          <target state="translated">これを値&amp;lt;vcs&amp;gt;に設定すると、Gitはgit-remote- &amp;lt;vcs&amp;gt;ヘルパーを使用してリモートと対話します。</target>
        </trans-unit>
        <trans-unit id="a78325706284f4930016d288e2c051f8a8fd0d2b" translate="yes" xml:space="preserve">
          <source>Setting this value to --no-tags disables automatic tag following when fetching from remote &amp;lt;name&amp;gt;. Setting it to --tags will fetch every tag from remote &amp;lt;name&amp;gt;, even if they are not reachable from remote branch heads. Passing these flags directly to &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt; can override this setting. See options --tags and --no-tags of &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt;.</source>
          <target state="translated">この値を--no-tagsに設定すると、リモート&amp;lt;name&amp;gt;からフェッチするときの自動タグ追跡が無効になります。--tagsに設定すると、リモートのブランチヘッドから到達できない場合でも、リモートの&amp;lt;name&amp;gt;からすべてのタグがフェッチされます。これらのフラグを直接&lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]に&lt;/a&gt;渡すと、この設定を上書きできます。&lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]の&lt;/a&gt;オプション--tagsおよび--no-tagsを参照してください。</target>
        </trans-unit>
        <trans-unit id="842c183b9c42b0c2525b9292639925b0e5a22ce0" translate="yes" xml:space="preserve">
          <source>Setting this variable to &quot;true&quot; is the same as setting the &lt;code&gt;text&lt;/code&gt; attribute to &quot;auto&quot; on all files and core.eol to &quot;crlf&quot;. Set to true if you want to have &lt;code&gt;CRLF&lt;/code&gt; line endings in your working directory and the repository has LF line endings. This variable can be set to &lt;code&gt;input&lt;/code&gt;, in which case no output conversion is performed.</source>
          <target state="translated">この変数を「true」に設定することは、すべてのファイルで &lt;code&gt;text&lt;/code&gt; 属性を「auto」に設定し、core.eolを「crlf」に設定することと同じです。作業ディレクトリーで &lt;code&gt;CRLF&lt;/code&gt; の行末を持ち、リポジトリーにLFの行末がある場合は、trueに設定します。この変数は &lt;code&gt;input&lt;/code&gt; に設定できます。その場合、出力変換は実行されません。</target>
        </trans-unit>
        <trans-unit id="f2485239ca9db9231d9dc605e4c20a0278342cb8" translate="yes" xml:space="preserve">
          <source>Setting this variable to &lt;code&gt;1&lt;/code&gt; will cause Git to treat all pathspecs as case-insensitive.</source>
          <target state="translated">この変数を &lt;code&gt;1&lt;/code&gt; に設定すると、Gitはすべてのパス仕様を大文字と小文字を区別しないものとして扱います。</target>
        </trans-unit>
        <trans-unit id="1ca46b471bd9797687c8acd1761125db08a21576" translate="yes" xml:space="preserve">
          <source>Setting this variable to &lt;code&gt;1&lt;/code&gt; will cause Git to treat all pathspecs as glob patterns (aka &quot;glob&quot; magic).</source>
          <target state="translated">この変数を &lt;code&gt;1&lt;/code&gt; に設定すると、Gitはすべてのパス仕様をグロブパターン（別名「グロブ」マジック）として扱います。</target>
        </trans-unit>
        <trans-unit id="d6f6c7a0196e6bb7bea48f89270c29c4b30ce796" translate="yes" xml:space="preserve">
          <source>Setting this variable to &lt;code&gt;1&lt;/code&gt; will cause Git to treat all pathspecs as literal (aka &quot;literal&quot; magic).</source>
          <target state="translated">この変数を &lt;code&gt;1&lt;/code&gt; に設定すると、Gitはすべてのパス仕様をリテラル（別名「リテラル」マジック）として扱います。</target>
        </trans-unit>
        <trans-unit id="5ca9aa98c8773f3ffdcfb04129c5f9a059aea952" translate="yes" xml:space="preserve">
          <source>Setting this variable to &lt;code&gt;1&lt;/code&gt; will cause Git to treat all pathspecs literally, rather than as glob patterns. For example, running &lt;code&gt;GIT_LITERAL_PATHSPECS=1 git log -- '*.c'&lt;/code&gt; will search for commits that touch the path &lt;code&gt;*.c&lt;/code&gt;, not any paths that the glob &lt;code&gt;*.c&lt;/code&gt; matches. You might want this if you are feeding literal paths to Git (e.g., paths previously given to you by &lt;code&gt;git ls-tree&lt;/code&gt;, &lt;code&gt;--raw&lt;/code&gt; diff output, etc).</source>
          <target state="translated">この変数を &lt;code&gt;1&lt;/code&gt; に設定すると、Gitはすべてのパス仕様をグロブパターンとしてではなく、文字どおりに扱います。たとえば、 &lt;code&gt;GIT_LITERAL_PATHSPECS=1 git log -- '*.c'&lt;/code&gt; すると、glob &lt;code&gt;*.c&lt;/code&gt; が一致するパスではなく、パス &lt;code&gt;*.c&lt;/code&gt; に関連するコミットが検索されます。Gitへのリテラルパス（たとえば、以前に &lt;code&gt;git ls-tree&lt;/code&gt; によって提供されたパス、 &lt;code&gt;--raw&lt;/code&gt; diff出力など）をフィードする場合は、これが必要になることがあります。</target>
        </trans-unit>
        <trans-unit id="d2a80c691de90ce5c2f5bcae0ddb71cd520d2404" translate="yes" xml:space="preserve">
          <source>Setting up a public repository</source>
          <target state="translated">パブリックリポジトリの設定</target>
        </trans-unit>
        <trans-unit id="3d54bc92ce527cc2dc9817e011bfea7d52def59f" translate="yes" xml:space="preserve">
          <source>Setting up a shared repository</source>
          <target state="translated">共有リポジトリの設定</target>
        </trans-unit>
        <trans-unit id="85d7095bad4cc89bf24fcc23e9812d88b70300be" translate="yes" xml:space="preserve">
          <source>Setup and Config</source>
          <target state="translated">セットアップと設定</target>
        </trans-unit>
        <trans-unit id="42bf423e8b49af69779df6afbd52c08e60ab95d8" translate="yes" xml:space="preserve">
          <source>Sharing and Updating Projects</source>
          <target state="translated">プロジェクトの共有と更新</target>
        </trans-unit>
        <trans-unit id="5bd75d5b2b55f503aa568f15ed9baa9da5d8844b" translate="yes" xml:space="preserve">
          <source>Sharing development with others</source>
          <target state="translated">開発を他の人と共有する</target>
        </trans-unit>
        <trans-unit id="7a899aac208ff2bb86fe5c7bc28489c4a1362bac" translate="yes" xml:space="preserve">
          <source>Sharing your changes</source>
          <target state="translated">変更点の共有</target>
        </trans-unit>
        <trans-unit id="bc5ae6560f23ddf791959b3443d3c0070e504dbd" translate="yes" xml:space="preserve">
          <source>Short (shortened to &lt;code&gt;$projects_list_description_width&lt;/code&gt; in the projects list page, which is 25 characters by default; see &lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf[5]&lt;/a&gt;) single line description of a project (of a repository). Plain text file; HTML will be escaped. By default set to</source>
          <target state="translated">短い（プロジェクトリストページの &lt;code&gt;$projects_list_description_width&lt;/code&gt; に短縮されます。デフォルトは25文字です&lt;a href=&quot;gitweb.conf&quot;&gt;。gitweb.conf[5]を&lt;/a&gt;参照してください）プロジェクトの（リポジトリの）1行の説明。プレーンテキストファイル。HTMLはエスケープされます。デフォルトでは</target>
        </trans-unit>
        <trans-unit id="5d86956f14bde9ab427b7b6c31b677817dd478ab" translate="yes" xml:space="preserve">
          <source>Short Format</source>
          <target state="translated">ショートフォーマット</target>
        </trans-unit>
        <trans-unit id="838e7194f933ef4cd0297d8b96a9d80cda6328ea" translate="yes" xml:space="preserve">
          <source>Short for &lt;code&gt;--log-destination=syslog&lt;/code&gt;.</source>
          <target state="translated">用ショート &lt;code&gt;--log-destination=syslog&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5c9f02f4be5538f5a655964a6f76417ed0e96f8f" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;--copy --force&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--copy --force&lt;/code&gt; のショートカット。</target>
        </trans-unit>
        <trans-unit id="56f96ad104be0e60414a9d6fef2d8f4255f1054e" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;--delete --force&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--delete --force&lt;/code&gt; のショートカット。</target>
        </trans-unit>
        <trans-unit id="8ae41f0ca95cbe8106d76bc74825f096a7f244ce" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;--move --force&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--move --force&lt;/code&gt; のショートカット。</target>
        </trans-unit>
        <trans-unit id="48b1cb87c7e9a2d1ef18425956f9eed09b368016" translate="yes" xml:space="preserve">
          <source>Shortcut version for a frequently used remote repository:</source>
          <target state="translated">よく使うリモートリポジトリのショートカット版。</target>
        </trans-unit>
        <trans-unit id="6460a14591c54e9d0ad48cc5a6224ee494fca842" translate="yes" xml:space="preserve">
          <source>Show &amp;lt;eolinfo&amp;gt; and &amp;lt;eolattr&amp;gt; of files. &amp;lt;eolinfo&amp;gt; is the file content identification used by Git when the &quot;text&quot; attribute is &quot;auto&quot; (or not set and core.autocrlf is not false). &amp;lt;eolinfo&amp;gt; is either &quot;-text&quot;, &quot;none&quot;, &quot;lf&quot;, &quot;crlf&quot;, &quot;mixed&quot; or &quot;&quot;.</source>
          <target state="translated">ファイルの&amp;lt;eolinfo&amp;gt;と&amp;lt;eolattr&amp;gt;を表示します。&amp;lt;eolinfo&amp;gt;は、「text」属性が「auto」の場合（または設定されておらず、core.autocrlfがfalseでない場合）にGitが使用するファイルコンテンツIDです。&amp;lt;eolinfo&amp;gt;は、「-text」、「none」、「lf」、「crlf」、「mixed」、または「」のいずれかです。</target>
        </trans-unit>
        <trans-unit id="6a8bdc54a2349a127936d3843203ecd6d2eac153" translate="yes" xml:space="preserve">
          <source>Show &amp;lt;num&amp;gt; leading and trailing lines, and place a line containing &lt;code&gt;--&lt;/code&gt; between contiguous groups of matches.</source>
          <target state="translated">&amp;lt;num&amp;gt;の先頭行と末尾行を表示し、連続する一致グループ間に &lt;code&gt;--&lt;/code&gt; を含む行を配置します。</target>
        </trans-unit>
        <trans-unit id="f867e00ffafd6cd49c4546fd923f10e52f747e26" translate="yes" xml:space="preserve">
          <source>Show &amp;lt;num&amp;gt; leading lines, and place a line containing &lt;code&gt;--&lt;/code&gt; between contiguous groups of matches.</source>
          <target state="translated">&amp;lt;num&amp;gt;行の先頭行を表示し、連続する一致グループ間に &lt;code&gt;--&lt;/code&gt; を含む行を配置します。</target>
        </trans-unit>
        <trans-unit id="a761d1fc7e4500bf5753e3c7e973fa02308ed552" translate="yes" xml:space="preserve">
          <source>Show &amp;lt;num&amp;gt; trailing lines, and place a line containing &lt;code&gt;--&lt;/code&gt; between contiguous groups of matches.</source>
          <target state="translated">&amp;lt;num&amp;gt;行の末尾の行を表示し、連続する一致グループ間に &lt;code&gt;--&lt;/code&gt; を含む行を配置します。</target>
        </trans-unit>
        <trans-unit id="ec26d3779318f9118ffbcaac500e06b8c03b82aa" translate="yes" xml:space="preserve">
          <source>Show &lt;code&gt;$GIT_COMMON_DIR&lt;/code&gt; if defined, else &lt;code&gt;$GIT_DIR&lt;/code&gt;.</source>
          <target state="translated">ショー &lt;code&gt;$GIT_COMMON_DIR&lt;/code&gt; 定義され、それ以外の場合は &lt;code&gt;$GIT_DIR&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7091c2825a946a2f8e36c69c5a82c708d938854f" translate="yes" xml:space="preserve">
          <source>Show &lt;code&gt;$GIT_DIR&lt;/code&gt; if defined. Otherwise show the path to the .git directory. The path shown, when relative, is relative to the current working directory.</source>
          <target state="translated">定義されている場合は &lt;code&gt;$GIT_DIR&lt;/code&gt; 表示します。それ以外の場合は、.gitディレクトリへのパスを表示します。表示されるパスは、相対の場合、現在の作業ディレクトリに対する相対パスです。</target>
        </trans-unit>
        <trans-unit id="92bc441ca5dd76e30902fc3cfc432e05960c64fb" translate="yes" xml:space="preserve">
          <source>Show a Git logical variable</source>
          <target state="translated">Git の論理変数を表示する</target>
        </trans-unit>
        <trans-unit id="59a5fc6a75e992fe3955834b9f589f3efdf7f45b" translate="yes" xml:space="preserve">
          <source>Show a browser for the tree of the &lt;code&gt;maint&lt;/code&gt; branch. Files selected in the browser can be viewed with the internal blame viewer.</source>
          <target state="translated">&lt;code&gt;maint&lt;/code&gt; ブランチのツリーのブラウザを表示します。ブラウザーで選択されたファイルは、内部の非難ビューアで表示できます。</target>
        </trans-unit>
        <trans-unit id="51464c06cc3ed971f0047721a669b06e6f8dc753" translate="yes" xml:space="preserve">
          <source>Show a confirmation dialog before actually running the tool.</source>
          <target state="translated">実際にツールを実行する前に確認ダイアログを表示します。</target>
        </trans-unit>
        <trans-unit id="6f525616d2d7c1f4fb302645f1046a33897806da" translate="yes" xml:space="preserve">
          <source>Show a diffstat at the end of the merge. The diffstat is also controlled by the configuration option merge.stat.</source>
          <target state="translated">マージの最後に diffstat を表示します。diffstat は、設定オプション merge.stat によっても制御されます。</target>
        </trans-unit>
        <trans-unit id="328b16c9977fc386d8875a1c0557b3f9bae42a58" translate="yes" xml:space="preserve">
          <source>Show a diffstat of what changed upstream since the last rebase. The diffstat is also controlled by the configuration option rebase.stat.</source>
          <target state="translated">前回のリベース以降に上流側で何が変更されたかの diffstat を表示します。diffstat は、設定オプション rebase.stat によっても制御されます。</target>
        </trans-unit>
        <trans-unit id="89145a6b6d57b54925b2a014779bdd41b63aab6d" translate="yes" xml:space="preserve">
          <source>Show a word diff, using the &amp;lt;mode&amp;gt; to delimit changed words. By default, words are delimited by whitespace; see &lt;code&gt;--word-diff-regex&lt;/code&gt; below. The &amp;lt;mode&amp;gt; defaults to &lt;code&gt;plain&lt;/code&gt;, and must be one of:</source>
          <target state="translated">変更された単語を区切るために&amp;lt;mode&amp;gt;を使用して、単語の相違を表示します。デフォルトでは、単語は空白で区切られています。以下の &lt;code&gt;--word-diff-regex&lt;/code&gt; を参照してください。&amp;lt;mode&amp;gt;のデフォルトは &lt;code&gt;plain&lt;/code&gt; で、次のいずれかでなければなりません。</target>
        </trans-unit>
        <trans-unit id="2104f8f059827e60ca6f3a921f9a667c9ac35df8" translate="yes" xml:space="preserve">
          <source>Show all available formats.</source>
          <target state="translated">利用可能なすべてのフォーマットを表示します。</target>
        </trans-unit>
        <trans-unit id="995122a1c6abd2724409485dae28721d5cc2418d" translate="yes" xml:space="preserve">
          <source>Show all branches, tags, or remote-tracking branches, respectively (i.e., refs found in &lt;code&gt;refs/heads&lt;/code&gt;, &lt;code&gt;refs/tags&lt;/code&gt;, or &lt;code&gt;refs/remotes&lt;/code&gt;, respectively).</source>
          <target state="translated">すべてのブランチ、タグ、またはリモートトラッキングブランチをそれぞれ表示します（つまり、それぞれ &lt;code&gt;refs/heads&lt;/code&gt; 、 &lt;code&gt;refs/tags&lt;/code&gt; 、または &lt;code&gt;refs/remotes&lt;/code&gt; にある参照）。</target>
        </trans-unit>
        <trans-unit id="321f7678ea19c696fd3fd95db6c787353e8f0a5f" translate="yes" xml:space="preserve">
          <source>Show all commits since version &lt;code&gt;v2.6.12&lt;/code&gt; that changed any file in the &lt;code&gt;include/scsi&lt;/code&gt; or &lt;code&gt;drivers/scsi&lt;/code&gt; subdirectories</source>
          <target state="translated">&lt;code&gt;include/scsi&lt;/code&gt; または &lt;code&gt;drivers/scsi&lt;/code&gt; サブディレクトリ内のファイルを変更したバージョン &lt;code&gt;v2.6.12&lt;/code&gt; 以降のすべてのコミットを表示する</target>
        </trans-unit>
        <trans-unit id="d180629218690191e783f9ea37e5d26feab056b5" translate="yes" xml:space="preserve">
          <source>Show all refs (branches, tags, etc.).</source>
          <target state="translated">すべての参照先(ブランチ、タグなど)を表示します。</target>
        </trans-unit>
        <trans-unit id="3e7cf0b7d79082307562ec61629e132b2c74285c" translate="yes" xml:space="preserve">
          <source>Show all refs found in &lt;code&gt;refs/&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;refs/&lt;/code&gt; 見つかったすべての参照を表示します。</target>
        </trans-unit>
        <trans-unit id="05ca74609707b569a39bc5511a1daaae1bd87257" translate="yes" xml:space="preserve">
          <source>Show all refs matching the shell glob pattern &lt;code&gt;pattern&lt;/code&gt;. If the pattern does not start with &lt;code&gt;refs/&lt;/code&gt;, this is automatically prepended. If the pattern does not contain a globbing character (&lt;code&gt;?&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, or &lt;code&gt;[&lt;/code&gt;), it is turned into a prefix match by appending &lt;code&gt;/*&lt;/code&gt;.</source>
          <target state="translated">シェルグロブパターン &lt;code&gt;pattern&lt;/code&gt; に一致するすべての参照を表示します。パターンが &lt;code&gt;refs/&lt;/code&gt; で始まらない場合、これは自動的に付加されます。パターンにグロビング文字（ &lt;code&gt;?&lt;/code&gt; 、 &lt;code&gt;*&lt;/code&gt; 、または &lt;code&gt;[&lt;/code&gt; ）が含まれていない場合は、 &lt;code&gt;/*&lt;/code&gt; を付加することにより、プレフィックス一致に変換されます。</target>
        </trans-unit>
        <trans-unit id="4fa56b2fc9907d1086b87e5377bf4476cff2c390" translate="yes" xml:space="preserve">
          <source>Show as patches the commits since version &lt;code&gt;v2.6.12&lt;/code&gt; that changed any file in the include/scsi or drivers/scsi subdirectories</source>
          <target state="translated">include / scsiまたはdrivers / scsiサブディレクトリ内のファイルを変更したバージョン &lt;code&gt;v2.6.12&lt;/code&gt; 以降のコミットをパッチとして表示</target>
        </trans-unit>
        <trans-unit id="276551039d5a6f576b01b648390b28318eb26dab" translate="yes" xml:space="preserve">
          <source>Show at most 100 changes made to the file &lt;code&gt;Makefile&lt;/code&gt;. Instead of only looking for changes in the current branch look in all branches.</source>
          <target state="translated">&lt;code&gt;Makefile&lt;/code&gt; ファイルに加えられた最大100の変更を表示します。現在のブランチの変更のみを探すのではなく、すべてのブランチを調べます。</target>
        </trans-unit>
        <trans-unit id="cc93fcf462d3cdf3d2aeea5e45651f27c396f5a0" translate="yes" xml:space="preserve">
          <source>Show blank SHA-1 for boundary commits. This can also be controlled via the &lt;code&gt;blame.blankboundary&lt;/code&gt; config option.</source>
          <target state="translated">境界コミットに対して空白のSHA-1を表示します。これは、 &lt;code&gt;blame.blankboundary&lt;/code&gt; 構成オプションを使用して制御することもできます。</target>
        </trans-unit>
        <trans-unit id="eaa41db61e1f1bab3111c0b0f717c116280f3b36" translate="yes" xml:space="preserve">
          <source>Show blank commit object name for boundary commits in &lt;a href=&quot;git-blame&quot;&gt;git-blame[1]&lt;/a&gt;. This option defaults to false.</source>
          <target state="translated">&lt;a href=&quot;git-blame&quot;&gt;git-blame [1]&lt;/a&gt;で境界コミットの空のコミットオブジェクト名を表示します。このオプションのデフォルトはfalseです。</target>
        </trans-unit>
        <trans-unit id="d4cb9ae41338f332d90c61100df1a02ed4371d7a" translate="yes" xml:space="preserve">
          <source>Show both remote-tracking branches and local branches.</source>
          <target state="translated">リモートトラッキングブランチとローカルブランチの両方を表示します。</target>
        </trans-unit>
        <trans-unit id="c2301bc581a2d36c1e5747eb8ae04fffb9591539" translate="yes" xml:space="preserve">
          <source>Show branches and their commits</source>
          <target state="translated">ブランチとそのコミットを表示</target>
        </trans-unit>
        <trans-unit id="d55feca71232703b0c06113161bcc96210d9bd44" translate="yes" xml:space="preserve">
          <source>Show brief usage of interactive git-clean.</source>
          <target state="translated">インタラクティブな git-clean の簡単な使い方を表示します。</target>
        </trans-unit>
        <trans-unit id="233374b02c6c18c443fd85da32c678488395ad01" translate="yes" xml:space="preserve">
          <source>Show cached files in the output (default)</source>
          <target state="translated">出力にキャッシュされたファイルを表示する(デフォルト</target>
        </trans-unit>
        <trans-unit id="ea36f7bdbf7d288541a5d87f6a09bd8649bf7e54" translate="yes" xml:space="preserve">
          <source>Show canonical names and email addresses of contacts</source>
          <target state="translated">連絡先の正規の名前とメールアドレスを表示する</target>
        </trans-unit>
        <trans-unit id="cfb0dd7a634282eef7f2e441b5e77786240e4318" translate="yes" xml:space="preserve">
          <source>Show changes between commits, commit and working tree, etc</source>
          <target state="translated">コミット間の変更、コミットと作業ツリーなどの表示</target>
        </trans-unit>
        <trans-unit id="5a1290ea3e3483a3f5ab5d9ff576cc5a9304f139" translate="yes" xml:space="preserve">
          <source>Show changes between the working tree and the index or a tree, changes between the index and a tree, changes between two trees, changes between two blob objects, or changes between two files on disk.</source>
          <target state="translated">作業ツリーとインデックスまたはツリー間の変更、インデックスとツリー間の変更、2 つのツリー間の変更、2 つの blob オブジェクト間の変更、ディスク上の 2 つのファイル間の変更を表示します。</target>
        </trans-unit>
        <trans-unit id="29297be7cb8a5068699eafedd98e29f9ce3b8ef6" translate="yes" xml:space="preserve">
          <source>Show changes using common diff tools</source>
          <target state="translated">一般的な差分ツールを使用した変更点の表示</target>
        </trans-unit>
        <trans-unit id="e6231251cf44dee07a16dc6977218fd9c6ce32a0" translate="yes" xml:space="preserve">
          <source>Show colored diff. &lt;code&gt;--color&lt;/code&gt; (i.e. without &lt;code&gt;=&amp;lt;when&amp;gt;&lt;/code&gt;) is the same as &lt;code&gt;--color=always&lt;/code&gt;. &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; can be one of &lt;code&gt;always&lt;/code&gt;, &lt;code&gt;never&lt;/code&gt;, or &lt;code&gt;auto&lt;/code&gt;.</source>
          <target state="translated">色付きの差分を表示します。 &lt;code&gt;--color&lt;/code&gt; （つまり &lt;code&gt;=&amp;lt;when&amp;gt;&lt;/code&gt; なし）は &lt;code&gt;--color=always&lt;/code&gt; と同じです。 &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; は、 &lt;code&gt;always&lt;/code&gt; 、 &lt;code&gt;never&lt;/code&gt; 、または &lt;code&gt;auto&lt;/code&gt; のいずれかです。</target>
        </trans-unit>
        <trans-unit id="f57a0260693cc114a660b9cc49bd9ca37b9d97bc" translate="yes" xml:space="preserve">
          <source>Show colored diff. &lt;code&gt;--color&lt;/code&gt; (i.e. without &lt;code&gt;=&amp;lt;when&amp;gt;&lt;/code&gt;) is the same as &lt;code&gt;--color=always&lt;/code&gt;. &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; can be one of &lt;code&gt;always&lt;/code&gt;, &lt;code&gt;never&lt;/code&gt;, or &lt;code&gt;auto&lt;/code&gt;. It can be changed by the &lt;code&gt;color.ui&lt;/code&gt; and &lt;code&gt;color.diff&lt;/code&gt; configuration settings.</source>
          <target state="translated">色付きの差分を表示します。 &lt;code&gt;--color&lt;/code&gt; （つまり &lt;code&gt;=&amp;lt;when&amp;gt;&lt;/code&gt; なし）は &lt;code&gt;--color=always&lt;/code&gt; と同じです。 &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; は、 &lt;code&gt;always&lt;/code&gt; 、 &lt;code&gt;never&lt;/code&gt; 、または &lt;code&gt;auto&lt;/code&gt; のいずれかです。 &lt;code&gt;color.ui&lt;/code&gt; および &lt;code&gt;color.diff&lt;/code&gt; 構成設定によって変更できます。</target>
        </trans-unit>
        <trans-unit id="f1325c8ee6526284b9e19b2d177df5189d833f9f" translate="yes" xml:space="preserve">
          <source>Show colored matches. The value must be always (the default), never, or auto.</source>
          <target state="translated">色付きのマッチを表示します。値は、常に(デフォルト)、決して、または自動のいずれかである必要があります。</target>
        </trans-unit>
        <trans-unit id="ae1799387849e3f0fc844a1cc566a09160bccbf5" translate="yes" xml:space="preserve">
          <source>Show commit logs</source>
          <target state="translated">コミットログの表示</target>
        </trans-unit>
        <trans-unit id="091e7ae4df5348623adddab90ca75314d19e3c27" translate="yes" xml:space="preserve">
          <source>Show commit summary between the given commit (defaults to HEAD) and working tree/index. For a submodule in question, a series of commits in the submodule between the given super project commit and the index or working tree (switched by &lt;code&gt;--cached&lt;/code&gt;) are shown. If the option &lt;code&gt;--files&lt;/code&gt; is given, show the series of commits in the submodule between the index of the super project and the working tree of the submodule (this option doesn&amp;rsquo;t allow to use the &lt;code&gt;--cached&lt;/code&gt; option or to provide an explicit commit).</source>
          <target state="translated">指定されたコミット（デフォルトはHEAD）と作業ツリー/インデックスの間のコミット概要を表示します。問題のサブモジュールの場合、特定のスーパープロジェクトコミットとインデックスまたは作業ツリー（ &lt;code&gt;--cached&lt;/code&gt; によって切り替えられる）の間のサブモジュール内の一連のコミットが表示されます。オプション &lt;code&gt;--files&lt;/code&gt; が指定されている場合、スーパープロジェクトのインデックスとサブモジュールの作業ツリーの間のサブモジュール内の一連のコミットを表示します（このオプションでは、 &lt;code&gt;--cached&lt;/code&gt; オプションを使用したり、明示的に指定したりできませんコミット）。</target>
        </trans-unit>
        <trans-unit id="895d627a1559b0f7b8ffb93987e2fbd111bfab2e" translate="yes" xml:space="preserve">
          <source>Show commits more recent than a specific date.</source>
          <target state="translated">特定の日付よりも新しいコミットを表示します。</target>
        </trans-unit>
        <trans-unit id="10992a126510a25dfd1dd64a15502560e4eb97fe" translate="yes" xml:space="preserve">
          <source>Show commits older than a specific date.</source>
          <target state="translated">特定の日付よりも古いコミットを表示します。</target>
        </trans-unit>
        <trans-unit id="65509170881e19fa232abfecd80c1044bc1bc01b" translate="yes" xml:space="preserve">
          <source>Show conflicts in &quot;diff3&quot; style.</source>
          <target state="translated">diff3」スタイルでコンフリクトを表示する。</target>
        </trans-unit>
        <trans-unit id="a627c4be174c8a5ee15f7fc10aa836495b1089c5" translate="yes" xml:space="preserve">
          <source>Show deleted files in the output</source>
          <target state="translated">削除されたファイルを出力に表示する</target>
        </trans-unit>
        <trans-unit id="84454ab6d9a5866ee531cd5f7e98a88b4117a393" translate="yes" xml:space="preserve">
          <source>Show directions on how to proceed from the current state in the output of &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt;, in the template shown when writing commit messages in &lt;a href=&quot;git-commit&quot;&gt;git-commit[1]&lt;/a&gt;, and in the help message shown by &lt;a href=&quot;git-switch&quot;&gt;git-switch[1]&lt;/a&gt; or &lt;a href=&quot;git-checkout&quot;&gt;git-checkout[1]&lt;/a&gt; when switching branch.</source>
          <target state="translated">&lt;a href=&quot;git-status&quot;&gt;git-status [1]&lt;/a&gt;の出力、&lt;a href=&quot;git-commit&quot;&gt;git-commit [1]&lt;/a&gt;でコミットメッセージを書き込むときに表示されるテンプレート、および&lt;a href=&quot;git-switch&quot;&gt;git-switch [1]&lt;/a&gt;によって表示されるヘルプメッセージに、現在の状態から進む方法の指示を表示しますまたはブランチを切り替えるときに&lt;a href=&quot;git-checkout&quot;&gt;git-checkout [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5fc1f3cf9452e6039731a7a1df5dffca4ae78ea2" translate="yes" xml:space="preserve">
          <source>Show every object whose name begins with the given prefix. The &amp;lt;prefix&amp;gt; must be at least 4 hexadecimal digits long to avoid listing each and every object in the repository by mistake.</source>
          <target state="translated">名前が指定された接頭辞で始まるすべてのオブジェクトを表示します。&amp;lt;prefix&amp;gt;は、誤ってリポジトリー内のすべてのオブジェクトをリストしないようにするために、少なくとも4桁の16進数でなければなりません。</target>
        </trans-unit>
        <trans-unit id="0d94de8daf12eebfa732214b2af1b9a367d2d94d" translate="yes" xml:space="preserve">
          <source>Show files on the filesystem that need to be removed due to file/directory conflicts for checkout-index to succeed.</source>
          <target state="translated">checkout-indexを成功させるために、ファイル/ディレクトリの競合のために削除する必要のあるファイルをファイルシステム上に表示します。</target>
        </trans-unit>
        <trans-unit id="ad0ababacc675e26eaf1a0889c9c6ef14ce3769a" translate="yes" xml:space="preserve">
          <source>Show given paths which don&amp;rsquo;t match any pattern. This only makes sense when &lt;code&gt;--verbose&lt;/code&gt; is enabled, otherwise it would not be possible to distinguish between paths which match a pattern and those which don&amp;rsquo;t.</source>
          <target state="translated">どのパターンにも一致しない特定のパスを表示します。これは &lt;code&gt;--verbose&lt;/code&gt; が有効な場合にのみ意味があります。そうでない場合、パターンに一致するパスと一致しないパスを区別することはできません。</target>
        </trans-unit>
        <trans-unit id="762aaa5ab5565ca8e2b3774059028eb53b59477c" translate="yes" xml:space="preserve">
          <source>Show help message.</source>
          <target state="translated">ヘルプメッセージを表示します。</target>
        </trans-unit>
        <trans-unit id="838b52958b292fca61c3a5108dd4ee2a3a75c971" translate="yes" xml:space="preserve">
          <source>Show ignored files as well.</source>
          <target state="translated">無視されたファイルも表示します。</target>
        </trans-unit>
        <trans-unit id="e68b8eea48173094c49e93c786ee56fa7184a0b7" translate="yes" xml:space="preserve">
          <source>Show in a format designed for machine consumption.</source>
          <target state="translated">機械消費のために設計されたフォーマットで表示します。</target>
        </trans-unit>
        <trans-unit id="db93b492cc402222428883561395c8e5b81cce1c" translate="yes" xml:space="preserve">
          <source>Show information about files in the index and the working tree</source>
          <target state="translated">インデックスと作業ツリー内のファイルの情報を表示する</target>
        </trans-unit>
        <trans-unit id="d2d64dc76cbd792285e7b6cfa7570beea5afa702" translate="yes" xml:space="preserve">
          <source>Show just what commits would be submitted to p4; do not change state in Git or p4.</source>
          <target state="translated">Git や p4 で状態を変更しないように、p4 に投稿されるコミットだけを表示します。</target>
        </trans-unit>
        <trans-unit id="76fafda4935f99c8dd9af522c6c8e19e60857b59" translate="yes" xml:space="preserve">
          <source>Show logs with difference each commit introduces</source>
          <target state="translated">コミットごとに異なるログを表示</target>
        </trans-unit>
        <trans-unit id="aa7fe52bb648501db2c178df84cc787b4333ba17" translate="yes" xml:space="preserve">
          <source>Show long rev (Default: off).</source>
          <target state="translated">長い回転数を表示する(デフォルトはオフ)。</target>
        </trans-unit>
        <trans-unit id="5e7221f97ed7eacfd8cdc162cdb28622dbce9b38" translate="yes" xml:space="preserve">
          <source>Show modified files in the output</source>
          <target state="translated">出力に変更したファイルを表示する</target>
        </trans-unit>
        <trans-unit id="68201a6a34d181c9493b1441e79fe99724faace5" translate="yes" xml:space="preserve">
          <source>Show no parents before all of its children are shown, and avoid showing commits on multiple lines of history intermixed.</source>
          <target state="translated">すべての子が表示される前に親を表示しないようにし、複数の履歴が混在している場合にコミットを表示しないようにします。</target>
        </trans-unit>
        <trans-unit id="8b60cbbf5a70ba9636b88509153ae8ade5e1cc90" translate="yes" xml:space="preserve">
          <source>Show no parents before all of its children are shown, but otherwise show commits in the author timestamp order.</source>
          <target state="translated">すべての子を表示する前に親を表示しませんが、そうでない場合は作者のタイムスタンプ順にコミットを表示します。</target>
        </trans-unit>
        <trans-unit id="fc0432ce52689cf9d25cd4a23e5fba4317479073" translate="yes" xml:space="preserve">
          <source>Show no parents before all of its children are shown, but otherwise show commits in the commit timestamp order.</source>
          <target state="translated">すべての子を表示する前に親を表示しませんが、そうでなければコミットのタイムスタンプ順に表示します。</target>
        </trans-unit>
        <trans-unit id="f771bb437a0a632ca38fbb772c5f1f11e2687b42" translate="yes" xml:space="preserve">
          <source>Show object size of blob (file) entries.</source>
          <target state="translated">ブロブ(ファイル)エントリのオブジェクトサイズを表示します。</target>
        </trans-unit>
        <trans-unit id="8ab164ff8a8b9e0dee1e1b73990f42cea75d4c17" translate="yes" xml:space="preserve">
          <source>Show only commits in the specified revision range. When no &amp;lt;revision range&amp;gt; is specified, it defaults to &lt;code&gt;HEAD&lt;/code&gt; (i.e. the whole history leading to the current commit). &lt;code&gt;origin..HEAD&lt;/code&gt; specifies all the commits reachable from the current commit (i.e. &lt;code&gt;HEAD&lt;/code&gt;), but not from &lt;code&gt;origin&lt;/code&gt;. For a complete list of ways to spell &amp;lt;revision range&amp;gt;, see the &quot;Specifying Ranges&quot; section of &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions[7]&lt;/a&gt;.</source>
          <target state="translated">指定したリビジョン範囲のコミットのみを表示します。 &amp;lt;revision range&amp;gt;が指定されていない場合、デフォルトは &lt;code&gt;HEAD&lt;/code&gt; （つまり、現在のコミットに至る履歴全体）です。 &lt;code&gt;origin..HEAD&lt;/code&gt; 現在から到達可能なすべてのコミットのコミットを指定（つまり &lt;code&gt;HEAD&lt;/code&gt; ）ではなく、より &lt;code&gt;origin&lt;/code&gt; 。 &amp;lt;revision range&amp;gt;のスペルの完全なリストについては、&lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions [7]の&lt;/a&gt;「範囲の指定」セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="329dbdc2afc2b5cab87309e7fc9f29edaec58da0" translate="yes" xml:space="preserve">
          <source>Show only commits in the specified revision range. When no &amp;lt;revision range&amp;gt; is specified, it defaults to &lt;code&gt;HEAD&lt;/code&gt; (i.e. the whole history leading to the current commit). &lt;code&gt;origin..HEAD&lt;/code&gt; specifies all the commits reachable from the current commit (i.e. &lt;code&gt;HEAD&lt;/code&gt;), but not from &lt;code&gt;origin&lt;/code&gt;. For a complete list of ways to spell &amp;lt;revision range&amp;gt;, see the &lt;code&gt;Specifying Ranges&lt;/code&gt; section of &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions[7]&lt;/a&gt;.</source>
          <target state="translated">指定したリビジョン範囲のコミットのみを表示します。&amp;lt;revision range&amp;gt;が指定されていない場合、デフォルトは &lt;code&gt;HEAD&lt;/code&gt; （つまり、現在のコミットに至る履歴全体）です。 &lt;code&gt;origin..HEAD&lt;/code&gt; 現在から到達可能なすべてのコミットのコミットを指定（つまり &lt;code&gt;HEAD&lt;/code&gt; ）ではなく、より &lt;code&gt;origin&lt;/code&gt; 。&amp;lt;revision range&amp;gt;の綴りの完全なリストについては、&lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions [7]の&lt;/a&gt; &lt;code&gt;Specifying Ranges&lt;/code&gt; の指定のセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="c46a13d2904f8d6c610a867599fe01f9862dd57c" translate="yes" xml:space="preserve">
          <source>Show only commits that are enough to explain how the files that match the specified paths came to be. See &lt;code&gt;History Simplification&lt;/code&gt; below for details and other simplification modes.</source>
          <target state="translated">指定されたパスに一致するファイルがどのようになったかを説明するのに十分なコミットのみを表示します。参照 &lt;code&gt;History Simplification&lt;/code&gt; 詳細や他の簡素化モードの下に。</target>
        </trans-unit>
        <trans-unit id="66430bcd7753c6221125437192d0fae1e7031a91" translate="yes" xml:space="preserve">
          <source>Show only commits which have at least (or at most) that many parent commits. In particular, &lt;code&gt;--max-parents=1&lt;/code&gt; is the same as &lt;code&gt;--no-merges&lt;/code&gt;, &lt;code&gt;--min-parents=2&lt;/code&gt; is the same as &lt;code&gt;--merges&lt;/code&gt;. &lt;code&gt;--max-parents=0&lt;/code&gt; gives all root commits and &lt;code&gt;--min-parents=3&lt;/code&gt; all octopus merges.</source>
          <target state="translated">少なくとも（または多くても）多くの親コミットがあるコミットのみを表示します。特に、内 &lt;code&gt;--max-parents=1&lt;/code&gt; と同じで &lt;code&gt;--no-merges&lt;/code&gt; 、 &lt;code&gt;--min-parents=2&lt;/code&gt; と同じである &lt;code&gt;--merges&lt;/code&gt; 。 &lt;code&gt;--max-parents=0&lt;/code&gt; はすべてのルートコミットを &lt;code&gt;--min-parents=3&lt;/code&gt; 、-min-parents = 3はすべてのタコをマージします。</target>
        </trans-unit>
        <trans-unit id="af5969993dd03043080efc38142a1ed4316038eb" translate="yes" xml:space="preserve">
          <source>Show only ignored files in the output. When showing files in the index, print only those matched by an exclude pattern. When showing &quot;other&quot; files, show only those matched by an exclude pattern. Standard ignore rules are not automatically activated, therefore at least one of the &lt;code&gt;--exclude*&lt;/code&gt; options is required.</source>
          <target state="translated">無視されたファイルのみを出力に表示します。インデックスにファイルを表示する場合、除外パターンに一致するファイルのみを印刷します。「その他」のファイルを表示する場合、除外パターンに一致するファイルのみを表示します。標準の無視ルールは自動的にアクティブ化されないため、 &lt;code&gt;--exclude*&lt;/code&gt; オプションの少なくとも1つが必要です。</target>
        </trans-unit>
        <trans-unit id="002b0d2d59d3dcff4e51f5a87881355bfa57f547" translate="yes" xml:space="preserve">
          <source>Show only modification, rename, and copy, but not addition or deletion.</source>
          <target state="translated">変更、名前変更、コピーのみを表示し、追加や削除は表示しません。</target>
        </trans-unit>
        <trans-unit id="9c49ead1d682188547c7f67234f6eb73a64f21cf" translate="yes" xml:space="preserve">
          <source>Show only names and status of changed files. See the description of the &lt;code&gt;--diff-filter&lt;/code&gt; option on what the status letters mean.</source>
          <target state="translated">変更されたファイルの名前とステータスのみを表示します。ステータス文字の意味については、 &lt;code&gt;--diff-filter&lt;/code&gt; オプションの説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="0ce605c7552a8aba98345c842476a27b2a9c28e4" translate="yes" xml:space="preserve">
          <source>Show only names and the nature of change, but not actual diff output.</source>
          <target state="translated">名前と変更内容のみを表示し、実際の差分出力は表示しません。</target>
        </trans-unit>
        <trans-unit id="835669256cac48c4e209f28cd6e5b641f9186e51" translate="yes" xml:space="preserve">
          <source>Show only names of changed files.</source>
          <target state="translated">変更されたファイル名のみを表示します。</target>
        </trans-unit>
        <trans-unit id="be1dc5236687c9842a30e8f5499d3363ce72f159" translate="yes" xml:space="preserve">
          <source>Show only the named tree entry itself, not its children.</source>
          <target state="translated">指定されたツリーエントリの子ではなく、指定されたツリーエントリ自体のみを表示します。</target>
        </trans-unit>
        <trans-unit id="8c61ca2fb81ac3434e9edecd88dadef66a32e9a7" translate="yes" xml:space="preserve">
          <source>Show only unmerged branches in the &lt;code&gt;revPrompt&lt;/code&gt; subdialog. This is useful for tools similar to merge or rebase, but not for things like checkout or reset.</source>
          <target state="translated">のみマージされていない枝を表示 &lt;code&gt;revPrompt&lt;/code&gt; のサブダイアログ。これは、マージやリベースに似たツールには役立ちますが、チェックアウトやリセットなどには役立ちません。</target>
        </trans-unit>
        <trans-unit id="bcce9ca1424c944de6ae0083c8d4fdfea35ee963" translate="yes" xml:space="preserve">
          <source>Show other (i.e. untracked) files in the output</source>
          <target state="translated">出力に他の(つまりトラックされていない)ファイルを表示する</target>
        </trans-unit>
        <trans-unit id="b66aeda059663e06293f23a26a8d9280cb01bb39" translate="yes" xml:space="preserve">
          <source>Show packed archive index</source>
          <target state="translated">パックされたアーカイブインデックスを表示</target>
        </trans-unit>
        <trans-unit id="867eafced11331f75ab644a43b8e1a6c8a1b09e5" translate="yes" xml:space="preserve">
          <source>Show progress reports on stderr as objects are considered. The &lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt; text will be printed with each progress update.</source>
          <target state="translated">オブジェクトが考慮されているときにstderrの進捗レポートを表示します。 &lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt; テキストは、それぞれの進捗の更新で印刷されます。</target>
        </trans-unit>
        <trans-unit id="f20a140b8853bef6c5df99f49ec5adde7b92f174" translate="yes" xml:space="preserve">
          <source>Show progress reports on stderr as patches are generated.</source>
          <target state="translated">パッチが生成されたときに、標準エラーに進捗状況を表示します。</target>
        </trans-unit>
        <trans-unit id="873f06beb8dcdfdf113f3a3696210210ae4585eb" translate="yes" xml:space="preserve">
          <source>Show progress.</source>
          <target state="translated">進行状況を表示します。</target>
        </trans-unit>
        <trans-unit id="0aa1726b9011fcb05b9b5a738460be2bb61ef6af" translate="yes" xml:space="preserve">
          <source>Show raw timestamp (Default: off).</source>
          <target state="translated">生のタイムスタンプを表示します(デフォルト:off)。</target>
        </trans-unit>
        <trans-unit id="7167725b750724d1668f3392932bcc3766402e73" translate="yes" xml:space="preserve">
          <source>Show recursive diffs.</source>
          <target state="translated">再帰的な差分を表示します。</target>
        </trans-unit>
        <trans-unit id="4a21113a85b9e00a6d43c59bc8a68e2e1734a7de" translate="yes" xml:space="preserve">
          <source>Show references matching one or more patterns. Patterns are matched from the end of the full name, and only complete parts are matched, e.g. &lt;code&gt;master&lt;/code&gt; matches &lt;code&gt;refs/heads/master&lt;/code&gt;, &lt;code&gt;refs/remotes/origin/master&lt;/code&gt;, &lt;code&gt;refs/tags/jedi/master&lt;/code&gt; but not &lt;code&gt;refs/heads/mymaster&lt;/code&gt; or &lt;code&gt;refs/remotes/master/jedi&lt;/code&gt;.</source>
          <target state="translated">1つ以上のパターンに一致する参照を表示します。例えば、パターンは完全な名前の末尾からマッチングされ、そして唯一の完全な部分が一致している &lt;code&gt;master&lt;/code&gt; 試合の &lt;code&gt;refs/heads/master&lt;/code&gt; 、 &lt;code&gt;refs/remotes/origin/master&lt;/code&gt; 、 &lt;code&gt;refs/tags/jedi/master&lt;/code&gt; ではなく、 &lt;code&gt;refs/heads/mymaster&lt;/code&gt; または &lt;code&gt;refs/remotes/master/jedi&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5256f8d763cc4d210c603b98ae747ed57f6b9b37" translate="yes" xml:space="preserve">
          <source>Show repository only if this file exists (in repository). Only effective if this variable evaluates to true. Can be set when building gitweb by setting &lt;code&gt;GITWEB_EXPORT_OK&lt;/code&gt;. This path is relative to &lt;code&gt;GIT_DIR&lt;/code&gt;. git-daemon[1] uses &lt;code&gt;git-daemon-export-ok&lt;/code&gt;, unless started with &lt;code&gt;--export-all&lt;/code&gt;. By default this variable is not set, which means that this feature is turned off.</source>
          <target state="translated">このファイルが（リポジトリ内に）存在する場合にのみ、リポジトリを表示します。この変数がtrueと評価された場合にのみ有効です。GITWEB_EXPORT_OKを設定することで、 &lt;code&gt;GITWEB_EXPORT_OK&lt;/code&gt; 時に設定できます。このパスは &lt;code&gt;GIT_DIR&lt;/code&gt; からの相対パスです。git-daemon [1]は、 &lt;code&gt;git-daemon-export-ok&lt;/code&gt; &lt;code&gt;--export-all&lt;/code&gt; 開始しない限り、git-daemon-export-okを使用します。デフォルトでは、この変数は設定されていません。つまり、この機能はオフになっています。</target>
        </trans-unit>
        <trans-unit id="61630b8887fba0c6ae1f6471c93d4b1ac2d78421" translate="yes" xml:space="preserve">
          <source>Show staged contents' mode bits, object name and stage number in the output.</source>
          <target state="translated">ステージコンテンツのモードビット、オブジェクト名、ステージ番号を出力に表示します。</target>
        </trans-unit>
        <trans-unit id="146391550f639861a0610768d29eef80cf7e2b56" translate="yes" xml:space="preserve">
          <source>Show the HEAD reference, even if it would normally be filtered out.</source>
          <target state="translated">通常はフィルタリングされていなくても、HEAD参照を表示します。</target>
        </trans-unit>
        <trans-unit id="fea0b0dc87e518d09c89e0b3cebe67d85f5ef7a7" translate="yes" xml:space="preserve">
          <source>Show the absolute path of the root of the superproject&amp;rsquo;s working tree (if exists) that uses the current repository as its submodule. Outputs nothing if the current repository is not used as a submodule by any project.</source>
          <target state="translated">現在のリポジトリをサブモジュールとして使用するスーパープロジェクトの作業ツリー（存在する場合）のルートの絶対パスを表示します。現在のリポジトリがプロジェクトでサブモジュールとして使用されていない場合は何も出力しません。</target>
        </trans-unit>
        <trans-unit id="81d568ac49f075957202365490a4c231f9c1f3ac" translate="yes" xml:space="preserve">
          <source>Show the absolute path of the top-level directory of the working tree. If there is no working tree, report an error.</source>
          <target state="translated">作業ツリーのトップレベルディレクトリの絶対パスを表示します。作業ツリーがない場合は、エラーを報告します。</target>
        </trans-unit>
        <trans-unit id="d58575cff5ae50bf5388e0984f120c24ef0b57bb" translate="yes" xml:space="preserve">
          <source>Show the author email instead of author name (Default: off). This can also be controlled via the &lt;code&gt;blame.showEmail&lt;/code&gt; config option.</source>
          <target state="translated">著者名の代わりに著者のメールを表示します（デフォルト：オフ）。これは、 &lt;code&gt;blame.showEmail&lt;/code&gt; 構成オプションで制御することもできます。</target>
        </trans-unit>
        <trans-unit id="2ecb96a53849cc4ea467a6d904be25f5e345a592" translate="yes" xml:space="preserve">
          <source>Show the author email instead of author name in &lt;a href=&quot;git-blame&quot;&gt;git-blame[1]&lt;/a&gt;. This option defaults to false.</source>
          <target state="translated">&lt;a href=&quot;git-blame&quot;&gt;git-blame [1]&lt;/a&gt;に著者名の代わりに著者のメールを表示します。このオプションのデフォルトはfalseです。</target>
        </trans-unit>
        <trans-unit id="4bcbe1ac6c4bdbbf9ea91698126aa20a057ccc2c" translate="yes" xml:space="preserve">
          <source>Show the branch and tracking info even in short-format.</source>
          <target state="translated">ショートフォーマットでも分岐情報や追跡情報を表示します。</target>
        </trans-unit>
        <trans-unit id="a7915b46ed412ee27d561c779d7568440c30d97c" translate="yes" xml:space="preserve">
          <source>Show the changes during the last two weeks to the file &lt;code&gt;gitk&lt;/code&gt;. The &quot;--&quot; is necessary to avoid confusion with the &lt;strong&gt;branch&lt;/strong&gt; named &lt;code&gt;gitk&lt;/code&gt;</source>
          <target state="translated">過去2週間の &lt;code&gt;gitk&lt;/code&gt; ファイルへの変更を表示します。「-」は &lt;code&gt;gitk&lt;/code&gt; という名前の&lt;strong&gt;ブランチ&lt;/strong&gt;との混同を避けるために必要です</target>
        </trans-unit>
        <trans-unit id="a8fc389f3fa0446576124b8d36bfb677216cd040" translate="yes" xml:space="preserve">
          <source>Show the changes during the last two weeks to the file &lt;code&gt;gitk&lt;/code&gt;. The &lt;code&gt;--&lt;/code&gt; is necessary to avoid confusion with the &lt;strong&gt;branch&lt;/strong&gt; named &lt;code&gt;gitk&lt;/code&gt;</source>
          <target state="translated">過去2週間の &lt;code&gt;gitk&lt;/code&gt; ファイルへの変更を表示します。 &lt;code&gt;--&lt;/code&gt; との混同を避ける必要がある&lt;strong&gt;ブランチ&lt;/strong&gt;の名前 &lt;code&gt;gitk&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="877bab942fc51a3086fcc16e754d1712669dc82e" translate="yes" xml:space="preserve">
          <source>Show the changes recorded in the stash entry as a diff between the stashed contents and the commit back when the stash entry was first created. When no &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; is given, it shows the latest one. By default, the command shows the diffstat, but it will accept any format known to &lt;code&gt;git diff&lt;/code&gt; (e.g., &lt;code&gt;git stash show -p stash@{1}&lt;/code&gt; to view the second most recent entry in patch form). You can use stash.showStat and/or stash.showPatch config variables to change the default behavior.</source>
          <target state="translated">stashエントリーが最初に作成されたとき、stashエントリーに記録された変更を、stashされたコンテンツとコミット間の差分として表示します。 &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; が指定されていない場合は、最新のものを表示します。デフォルトでは、コマンドはdiffstatを表示しますが、 &lt;code&gt;git diff&lt;/code&gt; で認識されている任意のフォーマットを受け入れます（たとえば、パッチ形式で2番目に新しいエントリを表示する &lt;code&gt;git stash show -p stash@{1}&lt;/code&gt; ）。stash.showStatおよび/またはstash.showPatch構成変数を使用して、デフォルトの動作を変更できます。</target>
        </trans-unit>
        <trans-unit id="6dc3c2578e3a9fa987c1a16be4e18cd8d21ed499" translate="yes" xml:space="preserve">
          <source>Show the changes since version &lt;code&gt;v2.6.12&lt;/code&gt; that changed any file in the include/scsi or drivers/scsi subdirectories</source>
          <target state="translated">include / scsiまたはdrivers / scsiサブディレクトリ内のファイルを変更したバージョン &lt;code&gt;v2.6.12&lt;/code&gt; 以降の変更を表示します</target>
        </trans-unit>
        <trans-unit id="59882bbc15f62948be114af14833ad7f6dee5f50" translate="yes" xml:space="preserve">
          <source>Show the commit itself and the commit log message even if the diff itself is empty.</source>
          <target state="translated">diff 自体が空の場合でも、コミット自体とコミットログメッセージを表示します。</target>
        </trans-unit>
        <trans-unit id="8a1797e0ff002e85bbdedc5376243381a92ddebf" translate="yes" xml:space="preserve">
          <source>Show the commit subjects next to the SHA1s.</source>
          <target state="translated">SHA1 の隣にコミット科目を表示します。</target>
        </trans-unit>
        <trans-unit id="13a02f2303b4ed4a2167fcf812fcf1ac53740ea9" translate="yes" xml:space="preserve">
          <source>Show the commits that are in the &quot;test&quot; branch but not yet in the &quot;release&quot; branch, along with the list of paths each commit modifies.</source>
          <target state="translated">test&quot; ブランチにあり、&quot;release&quot; ブランチにはないコミットを、それぞれのコミットが変更したパスの一覧とともに表示します。</target>
        </trans-unit>
        <trans-unit id="724ae33ae952d72a471b3d97f22a84d58cfd2176" translate="yes" xml:space="preserve">
          <source>Show the content as converted by the filters configured in the current working tree for the given &amp;lt;path&amp;gt; (i.e. smudge filters, end-of-line conversion, etc). In this case, &amp;lt;object&amp;gt; has to be of the form &amp;lt;tree-ish&amp;gt;:&amp;lt;path&amp;gt;, or :&amp;lt;path&amp;gt;.</source>
          <target state="translated">指定された&amp;lt;path&amp;gt;の現在の作業ツリーで構成されているフィルターによって変換されたコンテンツを表示します（つまり、スマッジフィルター、行末変換など）。この場合、&amp;lt;object&amp;gt;は&amp;lt;tree-ish&amp;gt;：&amp;lt;path&amp;gt;または：&amp;lt;path&amp;gt;の形式にする必要があります。</target>
        </trans-unit>
        <trans-unit id="be70371f28252f06cf6503a94132408841f759d7" translate="yes" xml:space="preserve">
          <source>Show the content as transformed by a textconv filter. In this case, &amp;lt;object&amp;gt; has to be of the form &amp;lt;tree-ish&amp;gt;:&amp;lt;path&amp;gt;, or :&amp;lt;path&amp;gt; in order to apply the filter to the content recorded in the index at &amp;lt;path&amp;gt;.</source>
          <target state="translated">textconvフィルターによって変換されたコンテンツを表示します。この場合、&amp;lt;object&amp;gt;は、&amp;lt;path&amp;gt;のインデックスに記録されたコンテンツにフィルターを適用するために、&amp;lt;tree-ish&amp;gt;：&amp;lt;path&amp;gt;または：&amp;lt;path&amp;gt;の形式である必要があります。</target>
        </trans-unit>
        <trans-unit id="78813d71262485f1cc698929fd8f6ed3ab93eba8" translate="yes" xml:space="preserve">
          <source>Show the contents of &lt;code&gt;Makefile&lt;/code&gt; in revision &lt;code&gt;v0.99.8&lt;/code&gt; and provide annotations for each line. Unlike the above example the file is read from the object database and not the working directory.</source>
          <target state="translated">&lt;code&gt;Makefile&lt;/code&gt; の内容をリビジョン &lt;code&gt;v0.99.8&lt;/code&gt; で表示し、各行に注釈を付けます。上記の例とは異なり、ファイルは作業データベースではなくオブジェクトデータベースから読み取られます。</target>
        </trans-unit>
        <trans-unit id="5c3c76e526574e694470512f190e4502f8d279a5" translate="yes" xml:space="preserve">
          <source>Show the contents of the file &lt;code&gt;Makefile&lt;/code&gt; in the current working directory, and provide annotations for both the original author of each line, and who moved the line to its current location. The uncommitted file is annotated, and uncommitted changes (if any) are explicitly attributed to &lt;code&gt;Not Yet Committed&lt;/code&gt;.</source>
          <target state="translated">現在の作業ディレクトリにある &lt;code&gt;Makefile&lt;/code&gt; ファイルの内容を表示し、各行の元の作成者と、その行を現在の場所に移動したユーザーの両方に注釈を付けます。コミットされていないファイルには注釈が付けられ、コミットされていない変更（ある場合）は明示的に &lt;code&gt;Not Yet Committed&lt;/code&gt; に起因します。</target>
        </trans-unit>
        <trans-unit id="e218b59d83785be7915643dfc5b6a7b490def489" translate="yes" xml:space="preserve">
          <source>Show the context between diff hunks, up to the specified number of lines, thereby fusing hunks that are close to each other. Defaults to &lt;code&gt;diff.interHunkContext&lt;/code&gt; or 0 if the config option is unset.</source>
          <target state="translated">指定された行数までの差分ハンク間のコンテキストを表示し、それによって互いに近いハンクを融合します。デフォルトは &lt;code&gt;diff.interHunkContext&lt;/code&gt; か、configオプションが設定されていない場合は0です。</target>
        </trans-unit>
        <trans-unit id="738d68d4dedc5068c7659d3b55ae573e291dd6e6" translate="yes" xml:space="preserve">
          <source>Show the context between diff hunks, up to the specified number of lines, thereby fusing the hunks that are close to each other. This value serves as the default for the &lt;code&gt;--inter-hunk-context&lt;/code&gt; command line option.</source>
          <target state="translated">指定された行数までのdiffハンク間のコンテキストを表示し、それによって互いに近いハンクを融合します。この値は、 &lt;code&gt;--inter-hunk-context&lt;/code&gt; コマンドラインオプションのデフォルトとして機能します。</target>
        </trans-unit>
        <trans-unit id="4f70107eeb8997652e58a1d8572c279efb177133" translate="yes" xml:space="preserve">
          <source>Show the current patch in an interactive rebase or when rebase is stopped because of conflicts. This is the equivalent of &lt;code&gt;git show REBASE_HEAD&lt;/code&gt;.</source>
          <target state="translated">インタラクティブなリベースで、または競合のためにリベースが停止したときに、現在のパッチを表示します。これは &lt;code&gt;git show REBASE_HEAD&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="70f379614ad3c3f540d932681a54d5c082f0dab9" translate="yes" xml:space="preserve">
          <source>Show the email address of each author.</source>
          <target state="translated">各著者のメールアドレスを表示します。</target>
        </trans-unit>
        <trans-unit id="7d75f0f1d94f4cb5fb2f3f4826ebeee8b6bd4db1" translate="yes" xml:space="preserve">
          <source>Show the entire e-mail message &quot;git am&quot; has stopped at, because of conflicts.</source>
          <target state="translated">git am&quot; が停止しているメールメッセージ全体を表示します。</target>
        </trans-unit>
        <trans-unit id="172de3da6fec23b745b3f7495e42b18d6ff2e3d5" translate="yes" xml:space="preserve">
          <source>Show the filename above the matches in that file instead of at the start of each shown line.</source>
          <target state="translated">表示される各行の先頭ではなく、そのファイルのマッチの上にファイル名を表示します。</target>
        </trans-unit>
        <trans-unit id="f95469ae696b3f00df813ab275db8edbf948a14b" translate="yes" xml:space="preserve">
          <source>Show the filename in the original commit. By default the filename is shown if there is any line that came from a file with a different name, due to rename detection.</source>
          <target state="translated">元のコミットのファイル名を表示します。デフォルトでは、リネーム検出のために別の名前のファイルから来た行がある場合、ファイル名が表示されます。</target>
        </trans-unit>
        <trans-unit id="3e3d59b4bf16e3f56b771d2e4d942efd80dd4d82" translate="yes" xml:space="preserve">
          <source>Show the full 40-byte hexadecimal commit object name. This negates &lt;code&gt;--abbrev-commit&lt;/code&gt; and those options which imply it such as &quot;--oneline&quot;. It also overrides the &lt;code&gt;log.abbrevCommit&lt;/code&gt; variable.</source>
          <target state="translated">完全な40バイトの16進数のコミットオブジェクト名を表示します。これは、 &lt;code&gt;--abbrev-commit&lt;/code&gt; とそれを意味する &quot;--oneline&quot;などのオプションを無効にします。また、 &lt;code&gt;log.abbrevCommit&lt;/code&gt; 変数もオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="f9a9f3cf0d88f67dc0a2f911b2a17556553b49ba" translate="yes" xml:space="preserve">
          <source>Show the given destination prefix instead of &quot;b/&quot;.</source>
          <target state="translated">b/」ではなく、指定された宛先のプレフィックスを表示します。</target>
        </trans-unit>
        <trans-unit id="4a610521917af2112009fac9ef83beff567eff6c" translate="yes" xml:space="preserve">
          <source>Show the given source prefix instead of &quot;a/&quot;.</source>
          <target state="translated">a/&quot; の代わりに、指定されたソースのプレフィックスを表示します。</target>
        </trans-unit>
        <trans-unit id="77be67edff03e9adcf5b9f00110ef7e89bbf43f4" translate="yes" xml:space="preserve">
          <source>Show the line number in the original commit (Default: off).</source>
          <target state="translated">元のコミットの行番号を表示します (デフォルト:off)。</target>
        </trans-unit>
        <trans-unit id="7fc90bd9d374d0e136811a02e380e22be094fea9" translate="yes" xml:space="preserve">
          <source>Show the notes (see &lt;a href=&quot;git-notes&quot;&gt;git-notes[1]&lt;/a&gt;) that annotate the commit, when showing the commit log message. This is the default for &lt;code&gt;git log&lt;/code&gt;, &lt;code&gt;git show&lt;/code&gt; and &lt;code&gt;git whatchanged&lt;/code&gt; commands when there is no &lt;code&gt;--pretty&lt;/code&gt;, &lt;code&gt;--format&lt;/code&gt;, or &lt;code&gt;--oneline&lt;/code&gt; option given on the command line.</source>
          <target state="translated">コミットログメッセージを表示するときに、コミットに注釈を付けるメモ（&lt;a href=&quot;git-notes&quot;&gt;git-notes [1]を&lt;/a&gt;参照）を表示します。これは、デフォルトで &lt;code&gt;git log&lt;/code&gt; 、 &lt;code&gt;git show&lt;/code&gt; と &lt;code&gt;git whatchanged&lt;/code&gt; 全く存在しないときのコマンドを &lt;code&gt;--pretty&lt;/code&gt; 、 &lt;code&gt;--format&lt;/code&gt; 、または &lt;code&gt;--oneline&lt;/code&gt; コマンドラインで指定したオプション。</target>
        </trans-unit>
        <trans-unit id="5d9c16ddef53da23b241c4981fec0a65a72c29ca" translate="yes" xml:space="preserve">
          <source>Show the notes for a given object (defaults to HEAD).</source>
          <target state="translated">指定されたオブジェクトのノートを表示します(デフォルトは HEAD)。</target>
        </trans-unit>
        <trans-unit id="f0bfdb6e91a5688fc1141d3407d575275f304926" translate="yes" xml:space="preserve">
          <source>Show the number of entries currently stashed away.</source>
          <target state="translated">現在ため込んでいるエントリー数を表示します。</target>
        </trans-unit>
        <trans-unit id="3c9a6685a00f511f81c04581bd599d8474c49f6d" translate="yes" xml:space="preserve">
          <source>Show the object format (hash algorithm) used for the repository for storage inside the &lt;code&gt;.git&lt;/code&gt; directory, input, or output. For input, multiple algorithms may be printed, space-separated. If not specified, the default is &quot;storage&quot;.</source>
          <target state="translated">&lt;code&gt;.git&lt;/code&gt; ディレクトリ内のストレージ、入力、または出力用のリポジトリに使用されるオブジェクト形式（ハッシュアルゴリズム）を表示します。入力の場合、複数のアルゴリズムをスペースで区切って出力できます。指定しない場合、デフォルトは「ストレージ」です。</target>
        </trans-unit>
        <trans-unit id="2065145a8ccf699cb187c308bae854443dde9e61" translate="yes" xml:space="preserve">
          <source>Show the path to the shared index file in split index mode, or empty if not in split-index mode.</source>
          <target state="translated">スプリットインデックスモードでは共有インデックスファイルへのパスを表示し、スプリットインデックスモードでない場合は空のパスを表示します。</target>
        </trans-unit>
        <trans-unit id="fc95b34844d65ed902bda405925620eb3e5a1983" translate="yes" xml:space="preserve">
          <source>Show the porcelain format, but output commit information for each line, not just the first time a commit is referenced. Implies --porcelain.</source>
          <target state="translated">磁器フォーマットを表示しますが、最初のコミットが参照された時だけでなく、各行のコミット情報を出力します。porcelain を意味します。</target>
        </trans-unit>
        <trans-unit id="c81496056d90f54bdff08b7b7019335227bad0b2" translate="yes" xml:space="preserve">
          <source>Show the preceding line that contains the function name of the match, unless the matching line is a function name itself. The name is determined in the same way as &lt;code&gt;git diff&lt;/code&gt; works out patch hunk headers (see &lt;code&gt;Defining a custom hunk-header&lt;/code&gt; in &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt;).</source>
          <target state="translated">一致する行が関数名自体でない限り、一致する関数名を含む前の行を表示します。名前は、 &lt;code&gt;git diff&lt;/code&gt; がパッチハンクヘッダーを&lt;a href=&quot;gitattributes&quot;&gt;計算&lt;/a&gt;するのと同じ方法で決定されます（gitattributes [5]での &lt;code&gt;Defining a custom hunk-header&lt;/code&gt; 参照）。</target>
        </trans-unit>
        <trans-unit id="114a9aa417c57ec620d43a64c520abeb8e1f3f29" translate="yes" xml:space="preserve">
          <source>Show the progress of checking files out.</source>
          <target state="translated">ファイルのチェックアウトの進行状況を表示します。</target>
        </trans-unit>
        <trans-unit id="e5e665e21c64d0029d8257ef6e137aa1376a6118" translate="yes" xml:space="preserve">
          <source>Show the remote-tracking branches.</source>
          <target state="translated">リモートトラッキングのブランチを表示します。</target>
        </trans-unit>
        <trans-unit id="b9c5b299181f4d64f3ea6e8b9c13b148fff537b5" translate="yes" xml:space="preserve">
          <source>Show the result incrementally in a format designed for machine consumption.</source>
          <target state="translated">結果を機械消費用に設計されたフォーマットでインクリメンタルに表示します。</target>
        </trans-unit>
        <trans-unit id="c999f8cbf6fa5c24fdf8b2b9b5596b445f624a80" translate="yes" xml:space="preserve">
          <source>Show the status of the submodules. This will print the SHA-1 of the currently checked out commit for each submodule, along with the submodule path and the output of &lt;code&gt;git describe&lt;/code&gt; for the SHA-1. Each SHA-1 will possibly be prefixed with &lt;code&gt;-&lt;/code&gt; if the submodule is not initialized, &lt;code&gt;+&lt;/code&gt; if the currently checked out submodule commit does not match the SHA-1 found in the index of the containing repository and &lt;code&gt;U&lt;/code&gt; if the submodule has merge conflicts.</source>
          <target state="translated">サブモジュールのステータスを表示します。これにより、各サブモジュールの現在チェックアウトされているコミットのSHA-1が、SHA-1のサブモジュールパスと &lt;code&gt;git describe&lt;/code&gt; の出力とともに出力されます。各SHA-1は、おそらく接頭辞されます &lt;code&gt;-&lt;/code&gt; サブモジュールが初期化されていない場合、 &lt;code&gt;+&lt;/code&gt; 現在チェックアウトサブモジュールが一致していないコミット場合はSHA-1を含むリポジトリとのインデックスで見つかった &lt;code&gt;U&lt;/code&gt; サブモジュールは、マージの競合を持っている場合。</target>
        </trans-unit>
        <trans-unit id="32335b1eb1c0a4fbecaf630b0ab1df57722da3d3" translate="yes" xml:space="preserve">
          <source>Show the surrounding text from the previous line containing a function name up to the one before the next function name, effectively showing the whole function in which the match was found.</source>
          <target state="translated">関数名を含む前の行から次の関数名の前までの周囲のテキストを表示します。</target>
        </trans-unit>
        <trans-unit id="ee3926cd6bade9ce34cbcecec5eb956d896d053e" translate="yes" xml:space="preserve">
          <source>Show the tree objects in the diff output. This implies &lt;code&gt;-r&lt;/code&gt;.</source>
          <target state="translated">ツリーオブジェクトをdiff出力に表示します。これは &lt;code&gt;-r&lt;/code&gt; を意味します。</target>
        </trans-unit>
        <trans-unit id="984ffa4d6fa814707b9db0fd0df1de10038cb7e9" translate="yes" xml:space="preserve">
          <source>Show the whole commit history, but skip any merges</source>
          <target state="translated">コミット履歴全体を表示するが、マージはスキップする</target>
        </trans-unit>
        <trans-unit id="41ba3127797e7497aaa54b06768281c0f54c0178" translate="yes" xml:space="preserve">
          <source>Show the working tree status</source>
          <target state="translated">作業木の状態を表示する</target>
        </trans-unit>
        <trans-unit id="4be15cef7828db991e29f252f2096ac52eaa87a1" translate="yes" xml:space="preserve">
          <source>Show three-way merge without touching index</source>
          <target state="translated">インデックスをタッチせずに三元マージを表示</target>
        </trans-unit>
        <trans-unit id="c011e03eeb56d943a760cc013e6f2e4eb1d425c0" translate="yes" xml:space="preserve">
          <source>Show tree entries even when going to recurse them. Has no effect if &lt;code&gt;-r&lt;/code&gt; was not passed. &lt;code&gt;-d&lt;/code&gt; implies &lt;code&gt;-t&lt;/code&gt;.</source>
          <target state="translated">再帰する場合でもツリーのエントリを表示します。 &lt;code&gt;-r&lt;/code&gt; が渡されなかった場合は効果がありません。 &lt;code&gt;-d&lt;/code&gt; は &lt;code&gt;-t&lt;/code&gt; を意味します。</target>
        </trans-unit>
        <trans-unit id="0ebf2c3da3729666fcca774c5c0088e26b46bc94" translate="yes" xml:space="preserve">
          <source>Show unified diff between the HEAD commit and what would be committed at the bottom of the commit message template to help the user describe the commit by reminding what changes the commit has. Note that this diff output doesn&amp;rsquo;t have its lines prefixed with &lt;code&gt;#&lt;/code&gt;. This diff will not be a part of the commit message. See the &lt;code&gt;commit.verbose&lt;/code&gt; configuration variable in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">HEADコミットとコミットメッセージテンプレートの下部にコミットされる内容との統一された差分を表示して、ユーザーがコミットにどのような変更を加えたかを思い出させることで、ユーザーがコミットを説明できるようにします。このdiff出力には、行の先頭に &lt;code&gt;#&lt;/code&gt; が付いていないことに注意してください。この差分はコミットメッセージの一部にはなりません。&lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt;の &lt;code&gt;commit.verbose&lt;/code&gt; 設定変数を参照してください。</target>
        </trans-unit>
        <trans-unit id="6ec5cbecb883dc178104f40a9f6290a06e20fc1c" translate="yes" xml:space="preserve">
          <source>Show uniquely abbreviated commit object as fallback.</source>
          <target state="translated">一意に省略されたコミットオブジェクトをフォールバックとして表示します。</target>
        </trans-unit>
        <trans-unit id="10c7ca24c353332c5b887c6b6a1d6dd7a457b5d5" translate="yes" xml:space="preserve">
          <source>Show unmerged files in the output (forces --stage)</source>
          <target state="translated">マージされていないファイルを出力に表示 (強制 --stage)</target>
        </trans-unit>
        <trans-unit id="b5d593f0c18fdb91296748ca1fac373587b954d6" translate="yes" xml:space="preserve">
          <source>Show untracked files.</source>
          <target state="translated">追跡されていないファイルを表示します。</target>
        </trans-unit>
        <trans-unit id="26b08d61663ae392b69c5a69245f4edf21293755" translate="yes" xml:space="preserve">
          <source>Show various types of objects</source>
          <target state="translated">様々な種類のオブジェクトを表示</target>
        </trans-unit>
        <trans-unit id="21c5bff92d5285947c85ec0c1484f22db009a919" translate="yes" xml:space="preserve">
          <source>Show what revision and author last modified each line of a file</source>
          <target state="translated">ファイルの各行を最終的に修正したリビジョンと作者を表示する</target>
        </trans-unit>
        <trans-unit id="966d3662ec6148441d1b868ba18110f8156c9e7e" translate="yes" xml:space="preserve">
          <source>Show what revision and author last modified each line of a file. The output of this mode is format-compatible with the output of &amp;lsquo;svn blame&amp;rsquo; by default. Like the SVN blame command, local uncommitted changes in the working tree are ignored; the version of the file in the HEAD revision is annotated. Unknown arguments are passed directly to &lt;code&gt;git blame&lt;/code&gt;.</source>
          <target state="translated">ファイルの各行を最後に変更したリビジョンと作成者を表示します。このモードの出力は、デフォルトで「svn blame」の出力とフォーマット互換です。SVN blameコマンドと同様に、作業ツリー内のローカルのコミットされていない変更は無視されます。HEADリビジョンのファイルのバージョンに注釈が付けられます。不明な引数は直接 &lt;code&gt;git blame&lt;/code&gt; に渡されます。</target>
        </trans-unit>
        <trans-unit id="bf9833b3864a606f143f671880d0d7c492524c3a" translate="yes" xml:space="preserve">
          <source>Show what would be done and clean files interactively. See &amp;ldquo;Interactive mode&amp;rdquo; for details.</source>
          <target state="translated">何が行われるかを示し、ファイルをインタラクティブにクリーンアップします。詳細については、「インタラクティブモード」を参照してください。</target>
        </trans-unit>
        <trans-unit id="df9413d989d45b2c0aaf57aba32e9c05293cab52" translate="yes" xml:space="preserve">
          <source>Show what would be done, without making any changes.</source>
          <target state="translated">何も変更を加えずに、何をするかを表示します。</target>
        </trans-unit>
        <trans-unit id="be4ca0a0825cd627301347d0b898edf805764f04" translate="yes" xml:space="preserve">
          <source>Show whole surrounding functions of changes.</source>
          <target state="translated">変更の周囲の機能全体を表示します。</target>
        </trans-unit>
        <trans-unit id="468ba140a3b94d2f9cd6ef93cfa9cab1327c9537" translate="yes" xml:space="preserve">
          <source>Show words as &lt;code&gt;[-removed-]&lt;/code&gt; and &lt;code&gt;{+added+}&lt;/code&gt;. Makes no attempts to escape the delimiters if they appear in the input, so the output may be ambiguous.</source>
          <target state="translated">単語を &lt;code&gt;[-removed-]&lt;/code&gt; および &lt;code&gt;{+added+}&lt;/code&gt; として表示します。区切り文字が入力に含まれていてもエスケープしようとしないため、出力があいまいになる可能性があります。</target>
        </trans-unit>
        <trans-unit id="853a8e226495d515cddaf8f8812833ecd070bbe7" translate="yes" xml:space="preserve">
          <source>Showing commits unique to a given branch</source>
          <target state="translated">指定されたブランチに固有のコミットの表示</target>
        </trans-unit>
        <trans-unit id="96ca3a302ef6077a82014da5f00857782e6cb86a" translate="yes" xml:space="preserve">
          <source>Shown when &lt;a href=&quot;git-push&quot;&gt;git-push[1]&lt;/a&gt; gives up trying to guess based on the source and destination refs what remote ref namespace the source belongs in, but where we can still suggest that the user push to either refs/heads/* or refs/tags/* based on the type of the source object.</source>
          <target state="translated">&lt;a href=&quot;git-push&quot;&gt;git-push [1]&lt;/a&gt;がソースと宛先の参照に基づいて推測を試みるのをやめたときに、ソースが属しているリモート参照名前空間を示しますが、ユーザーがrefs / heads / *またはrefs / tagsにプッシュすることを提案できます/ *ソースオブジェクトのタイプに基づきます。</target>
        </trans-unit>
        <trans-unit id="75d7e8b680f4e534527cb3c486bef0af3659328c" translate="yes" xml:space="preserve">
          <source>Shown when &lt;a href=&quot;git-push&quot;&gt;git-push[1]&lt;/a&gt; rejects an update that does not qualify for fast-forwarding (e.g., a tag.)</source>
          <target state="translated">&lt;a href=&quot;git-push&quot;&gt;git-push [1]&lt;/a&gt;が早送りに適さない更新（タグなど）を拒否したときに表示されます。</target>
        </trans-unit>
        <trans-unit id="3a0a872703503f071b91634941e8be2dc5533cd1" translate="yes" xml:space="preserve">
          <source>Shown when &lt;a href=&quot;git-push&quot;&gt;git-push[1]&lt;/a&gt; rejects an update that tries to overwrite a remote ref that points at an object that is not a commit-ish, or make the remote ref point at an object that is not a commit-ish.</source>
          <target state="translated">&lt;a href=&quot;git-push&quot;&gt;git-push [1]&lt;/a&gt;が、コミットっぽくないオブジェクトを指すリモート参照を上書きしようとしたり、コミットっぽくないオブジェクトをリモート参照にしたりする更新を拒否したときに表示されます。</target>
        </trans-unit>
        <trans-unit id="3b4c04c7663321c0bb15512a5590b839a243ed3d" translate="yes" xml:space="preserve">
          <source>Shown when &lt;a href=&quot;git-push&quot;&gt;git-push[1]&lt;/a&gt; rejects an update that tries to overwrite a remote ref that points at an object we do not have.</source>
          <target state="translated">&lt;a href=&quot;git-push&quot;&gt;git-push [1]&lt;/a&gt;が、持っていないオブジェクトを指すリモート参照を上書きしようとする更新を拒否したときに表示されます。</target>
        </trans-unit>
        <trans-unit id="78b784f23e7ef12a1020b996b898b9ff902a30e8" translate="yes" xml:space="preserve">
          <source>Shown when &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt; computes the ahead/behind counts for a local ref compared to its remote tracking ref, and that calculation takes longer than expected. Will not appear if &lt;code&gt;status.aheadBehind&lt;/code&gt; is false or the option &lt;code&gt;--no-ahead-behind&lt;/code&gt; is given.</source>
          <target state="translated">場合示さ&lt;a href=&quot;git-status&quot;&gt;gitのステータス[1]は&lt;/a&gt;、そのリモートトラッキングrefに比べてローカルREFのためにカウント背後/前方を計算し、その計算が予想以上かかります。 &lt;code&gt;status.aheadBehind&lt;/code&gt; がfalseの場合、またはオプション &lt;code&gt;--no-ahead-behind&lt;/code&gt; が指定されている場合は表示されません。</target>
        </trans-unit>
        <trans-unit id="d338c5b596db1d1f3b4bc876559fe0665e8ac5fb" translate="yes" xml:space="preserve">
          <source>Shows &amp;lt;n&amp;gt; most recent ref-log entries for the given ref. If &amp;lt;base&amp;gt; is given, &amp;lt;n&amp;gt; entries going back from that entry. &amp;lt;base&amp;gt; can be specified as count or date. When no explicit &amp;lt;ref&amp;gt; parameter is given, it defaults to the current branch (or &lt;code&gt;HEAD&lt;/code&gt; if it is detached).</source>
          <target state="translated">指定されたrefの最新のref-logエントリを&amp;lt;n&amp;gt;件表示します。&amp;lt;base&amp;gt;が指定されている場合、そのエントリから戻る&amp;lt;n&amp;gt;エントリ。&amp;lt;base&amp;gt;は、カウントまたは日付として指定できます。明示的な&amp;lt;ref&amp;gt;パラメータが指定されていない場合、デフォルトで現在のブランチ（またはデタッチされている場合は &lt;code&gt;HEAD&lt;/code&gt; ）に設定されます。</target>
        </trans-unit>
        <trans-unit id="145d28125d096ddf08f1e26c4d9787f99dd5cc7e" translate="yes" xml:space="preserve">
          <source>Shows all commits that are in any of local branches but not in any of remote-tracking branches for &lt;code&gt;origin&lt;/code&gt; (what you have that origin doesn&amp;rsquo;t).</source>
          <target state="translated">ローカルブランチのいずれかにあるが、 &lt;code&gt;origin&lt;/code&gt; リモート追跡ブランチにはないすべてのコミットを表示します（オリジンが持っていないもの）。</target>
        </trans-unit>
        <trans-unit id="c51c52f011be107f5e19468bb7f02daf26af2024" translate="yes" xml:space="preserve">
          <source>Shows all commits that are in local master but not in any remote repository master branches.</source>
          <target state="translated">ローカルマスターにあるコミットで、リモートリポジトリのマスターブランチにはないコミットをすべて表示します。</target>
        </trans-unit>
        <trans-unit id="10371d1293071dacd448b9fdd202c3afd277b14e" translate="yes" xml:space="preserve">
          <source>Shows commit logs and diff output each commit introduces.</source>
          <target state="translated">各コミットが導入したコミットログと差分出力を表示します。</target>
        </trans-unit>
        <trans-unit id="476dac31e594be06f217fa896bee0115d58f6b4c" translate="yes" xml:space="preserve">
          <source>Shows history of the file or directory in a given repository path, starting from given revision (defaults to HEAD, i.e. default branch).</source>
          <target state="translated">指定されたリポジトリパス内のファイルやディレクトリの履歴を、指定されたリビジョンから表示します(デフォルトは HEAD、つまりデフォルトのブランチ)。</target>
        </trans-unit>
        <trans-unit id="952b827e77460f64206eeaa3be7cd6994665a085" translate="yes" xml:space="preserve">
          <source>Shows how the function &lt;code&gt;main()&lt;/code&gt; in the file &lt;code&gt;main.c&lt;/code&gt; evolved over time.</source>
          <target state="translated">ファイル &lt;code&gt;main.c&lt;/code&gt; の関数 &lt;code&gt;main()&lt;/code&gt; が時間とともにどのように進化したかを示します。</target>
        </trans-unit>
        <trans-unit id="ce9fdc182e7532561a25c9e84afbf603141702a1" translate="yes" xml:space="preserve">
          <source>Shows information about a file or directory similar to what &amp;lsquo;svn info&amp;rsquo; provides. Does not currently support a -r/--revision argument. Use the --url option to output only the value of the &lt;code&gt;URL:&lt;/code&gt; field.</source>
          <target state="translated">「svn info」が提供するものと同様のファイルまたはディレクトリに関する情報を表示します。現在-r /-revision引数をサポートしていません。--urlオプションを使用して、 &lt;code&gt;URL:&lt;/code&gt; フィールドの値のみを出力します。</target>
        </trans-unit>
        <trans-unit id="ca1b824d0d56099189f69630ad24bacce78fa10f" translate="yes" xml:space="preserve">
          <source>Shows information about a specific commit in a repository. The &lt;code&gt;commit&lt;/code&gt; view shows information about commit in more detail, the &lt;code&gt;commitdiff&lt;/code&gt; action shows changeset for given commit.</source>
          <target state="translated">リポジトリ内の特定のコミットに関する情報を表示します。 &lt;code&gt;commit&lt;/code&gt; ビュー番組を情報は、およそ、より詳細にコミット &lt;code&gt;commitdiff&lt;/code&gt; のコミット特定のアクションショーのチェンジセットを。</target>
        </trans-unit>
        <trans-unit id="ab228fa7c7d65eb09f46d0e73fe8d72b79bc229a" translate="yes" xml:space="preserve">
          <source>Shows log information (commit message or just commit subject) for a given branch (starting from given revision).</source>
          <target state="translated">指定されたブランチのログ情報 (コミットメッセージまたはコミット件名のみ)を表示します (指定されたリビジョンから始まります)。</target>
        </trans-unit>
        <trans-unit id="a3433f3c29ab88ea9167add81dd6a17e06d4de7e" translate="yes" xml:space="preserve">
          <source>Shows one or more objects (blobs, trees, tags and commits).</source>
          <target state="translated">1つ以上のオブジェクト(ブロブ、ツリー、タグ、コミット)を表示します。</target>
        </trans-unit>
        <trans-unit id="c89f1cda347c61bcda5c7bb78673af53b8dae0ad" translate="yes" xml:space="preserve">
          <source>Shows only commits that are NOT on the first branch given. This helps track topic branches by hiding any commit that is already in the main line of development. When given &quot;git show-branch --topics master topic1 topic2&quot;, this will show the revisions given by &quot;git rev-list ^master topic1 topic2&quot;</source>
          <target state="translated">最初に指定したブランチにないコミットのみを表示します。これは、すでに開発のメインラインにあるコミットを隠すことでトピックブランチを追跡するのに役立ちます。git show-branch --topics master topic1 topic2&quot; と指定すると、&quot;git rev-list ^master topic1 topic2&quot; で指定したリビジョンを表示します。</target>
        </trans-unit>
        <trans-unit id="ad855617a566df1f282b86f94f82b5d862a150d3" translate="yes" xml:space="preserve">
          <source>Shows the Subversion externals. Use -r/--revision to specify a specific revision.</source>
          <target state="translated">Subversion の外観を表示します。特定のリビジョンを指定するには -r/--revision を使用します。</target>
        </trans-unit>
        <trans-unit id="71ee8b01832959c514dd0597fe4e33b8eee16c88" translate="yes" xml:space="preserve">
          <source>Shows the blame (also called annotation) information for a file. On a per line basis it shows the revision in which that line was last changed and the user that committed the change. The incremental version (which if configured is used automatically when JavaScript is enabled) uses Ajax to incrementally add blame info to the contents of given file.</source>
          <target state="translated">ファイルの注釈(注釈とも呼ばれる)情報を表示します。行単位で、その行が最後に変更されたリビジョンと、変更をコミットしたユーザーを表示します。インクリメンタルバージョン (設定されている場合、JavaScript が有効なときに自動的に使用されます)は、Ajax を使用して、与えられたファイルの内容に注釈情報をインクリメンタルに追加します。</target>
        </trans-unit>
        <trans-unit id="048347ade13621e5b8c85cb1ac7da77939e1ffa9" translate="yes" xml:space="preserve">
          <source>Shows the commit ancestry graph starting from the commits named with &amp;lt;rev&amp;gt;s or &amp;lt;glob&amp;gt;s (or all refs under refs/heads and/or refs/tags) semi-visually.</source>
          <target state="translated">&amp;lt;rev&amp;gt;または&amp;lt;glob&amp;gt;（またはrefs / headsおよび/またはrefs / tagsの下のすべての参照）で名前が付けられたコミットから始まるコミット先祖グラフを半視覚的に表示します。</target>
        </trans-unit>
        <trans-unit id="d974b70c2c30c4540e25d821a52ee3e8a89faf35" translate="yes" xml:space="preserve">
          <source>Shows the commit logs.</source>
          <target state="translated">コミットログを表示します。</target>
        </trans-unit>
        <trans-unit id="afa4aeeb0e59c57a072646fb612e51228d9e8ce5" translate="yes" xml:space="preserve">
          <source>Shows the commits that changed &lt;code&gt;builtin/rev-list.c&lt;/code&gt;, including those commits that occurred before the file was given its present name.</source>
          <target state="translated">&lt;code&gt;builtin/rev-list.c&lt;/code&gt; を変更したコミットを表示します。ファイルに現在の名前が付けられる前に発生したコミットも含まれます。</target>
        </trans-unit>
        <trans-unit id="0d2116a149d849234c7b09c554d651b4894474fc" translate="yes" xml:space="preserve">
          <source>Shows the contents of the file &lt;code&gt;Documentation/README&lt;/code&gt; as they were current in the 10th last commit of the branch &lt;code&gt;next&lt;/code&gt;.</source>
          <target state="translated">ファイル &lt;code&gt;Documentation/README&lt;/code&gt; の内容が、 &lt;code&gt;next&lt;/code&gt; のブランチの最後の10番目のコミットで最新であったときに表示されます。</target>
        </trans-unit>
        <trans-unit id="ccc9b587b1ac64f4516513aa59159ddedbb8a45f" translate="yes" xml:space="preserve">
          <source>Shows the difference between two revisions of the same file.</source>
          <target state="translated">同じファイルの2つのリビジョンの違いを表示します。</target>
        </trans-unit>
        <trans-unit id="8c5916992e873dd9df6491dab9446ed99d2ca43b" translate="yes" xml:space="preserve">
          <source>Shows the files and directories in a given repository path, at given revision. This is default command if no action is specified in the URL, and path is given.</source>
          <target state="translated">指定されたリポジトリパス内のファイルとディレクトリを、指定されたリビジョンで表示します。URL にアクションを指定せず、パスを指定した場合のデフォルトのコマンドです。</target>
        </trans-unit>
        <trans-unit id="890a038d1a0efbf86457550ddb0f94462d132854" translate="yes" xml:space="preserve">
          <source>Shows the history including change diffs, but only from the &amp;ldquo;main branch&amp;rdquo; perspective, skipping commits that come from merged branches, and showing full diffs of changes introduced by the merges. This makes sense only when following a strict policy of merging all topic branches when staying on a single integration branch.</source>
          <target state="translated">変更の差分を含む履歴を表示しますが、「メインブランチ」の観点からのみ、マージされたブランチからのコミットをスキップし、マージによって導入された変更の完全な差分を表示します。これは、単一の統合ブランチにとどまるときにすべてのトピックブランチをマージするという厳密なポリシーに従う場合にのみ意味があります。</target>
        </trans-unit>
        <trans-unit id="a6e093f4d97154b146a36fee068be195950aadfd" translate="yes" xml:space="preserve">
          <source>Shows the subject of the commit pointed to by the tag &lt;code&gt;v1.0.0&lt;/code&gt;.</source>
          <target state="translated">タグ &lt;code&gt;v1.0.0&lt;/code&gt; が指すコミットの件名を表示します。</target>
        </trans-unit>
        <trans-unit id="9b44c59ff3bc267fd7a4cbc7d7224ea23d69056e" translate="yes" xml:space="preserve">
          <source>Shows the tag &lt;code&gt;v1.0.0&lt;/code&gt;, along with the object the tags points at.</source>
          <target state="translated">タグ &lt;code&gt;v1.0.0&lt;/code&gt; と、タグが指すオブジェクトを表示します。</target>
        </trans-unit>
        <trans-unit id="092526538596a5fe7b0994948947cb6672086546" translate="yes" xml:space="preserve">
          <source>Shows the tree pointed to by the tag &lt;code&gt;v1.0.0&lt;/code&gt;.</source>
          <target state="translated">タグ &lt;code&gt;v1.0.0&lt;/code&gt; が指すツリーを表示します。</target>
        </trans-unit>
        <trans-unit id="436f07afaaab4f38cb1e7cf08118570b5794b7ea" translate="yes" xml:space="preserve">
          <source>Side note: Unfortunately, people tend to fixate on the written-in-shell aspect and periodically ask if git-filter-branch could be rewritten in another language to fix the performance issues. Not only does that ignore the bigger intrinsic problems with the design, it&amp;rsquo;d help less than you&amp;rsquo;d expect: if git-filter-branch itself were not shell, then the convenience functions (map(), skip_commit(), etc) and the &lt;code&gt;--setup&lt;/code&gt; argument could no longer be executed once at the beginning of the program but would instead need to be prepended to every user filter (and thus re-executed with every commit).</source>
          <target state="translated">補足：残念ながら、人々はシェルで書かれた側面に固執し、パフォーマンスの問題を修正するためにgit-filter-branchを別の言語で書き換えられるかどうかを定期的に尋ねる傾向があります。これは、設計に伴うより大きな固有の問題を無視するだけでなく、期待よりも役立つでしょう：git-filter-branch自体がシェルでない場合、便利な関数（map（）、skip_commit（）など）そして &lt;code&gt;--setup&lt;/code&gt; 引数は、もはやプログラムの先頭で一度に実行することはできなかったが、代わりに、すべてのユーザフィルタの前に追加される（したがって、すべてをコミット再実行）必要があります。</target>
        </trans-unit>
        <trans-unit id="5a31cdd9cba3408afdcd7a253a0ac442839b0979" translate="yes" xml:space="preserve">
          <source>Side note: it may be possible to do step 2 with about:config and the following settings but no one&amp;rsquo;s tried yet.</source>
          <target state="translated">補足：about：configと以下の設定でステップ2を実行できる可能性がありますが、まだ誰も試していません。</target>
        </trans-unit>
        <trans-unit id="2346a18ea3002ff04eca3a130c7f40e65c56f0c9" translate="yes" xml:space="preserve">
          <source>Signals</source>
          <target state="translated">Signals</target>
        </trans-unit>
        <trans-unit id="ff3ca843a6395cdc7d40686539d66fc535a8aaed" translate="yes" xml:space="preserve">
          <source>Signals the end of options; the rest of the parameters are &amp;lt;pathspec&amp;gt; limiters.</source>
          <target state="translated">オプションの終了を通知します。残りのパラメーターは&amp;lt;pathspec&amp;gt;リミッターです。</target>
        </trans-unit>
        <trans-unit id="221dd464fe44b38e2417a0ae6570e07534a3d7ea" translate="yes" xml:space="preserve">
          <source>Signing annotated tags during import from within fast-import is not supported. Trying to include your own PGP/GPG signature is not recommended, as the frontend does not (easily) have access to the complete set of bytes which normally goes into such a signature. If signing is required, create lightweight tags from within fast-import with &lt;code&gt;reset&lt;/code&gt;, then create the annotated versions of those tags offline with the standard &lt;code&gt;git tag&lt;/code&gt; process.</source>
          <target state="translated">高速インポート内からのインポート中の注釈付きタグへの署名はサポートされていません。フロントエンドが（簡単に）通常はこのような署名に入るバイトの完全なセットにアクセスできないため、独自のPGP / GPG署名を含めることはお勧めしません。署名が必要な場合は、 &lt;code&gt;reset&lt;/code&gt; を使用してfast-import内から軽量タグを作成し、標準の &lt;code&gt;git tag&lt;/code&gt; プロセスを使用して、これらのタグの注釈付きバージョンをオフラインで作成します。</target>
        </trans-unit>
        <trans-unit id="e73ba37a846fd05171a6c58829f1ab0aa4e069d7" translate="yes" xml:space="preserve">
          <source>Silently overwrite ignored files from the merge result. This is the default behavior. Use &lt;code&gt;--no-overwrite-ignore&lt;/code&gt; to abort.</source>
          <target state="translated">無視したファイルをマージ結果からサイレントに上書きします。これがデフォルトの動作です。中止 &lt;code&gt;--no-overwrite-ignore&lt;/code&gt; 、-no-overwrite-ignoreを使用します。</target>
        </trans-unit>
        <trans-unit id="a7ca941070a3e177fd03230132f7162630714492" translate="yes" xml:space="preserve">
          <source>Silently overwrite ignored files when switching branches. This is the default behavior. Use &lt;code&gt;--no-overwrite-ignore&lt;/code&gt; to abort the operation when the new branch contains ignored files.</source>
          <target state="translated">ブランチを切り替えるときに無視されたファイルをサイレントに上書きします。これがデフォルトの動作です。新しいブランチに無視されたファイルが含まれている場合、操作を中止するには &lt;code&gt;--no-overwrite-ignore&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="ffd6334e8fa69c33df5ff56f9d3009483e17a61e" translate="yes" xml:space="preserve">
          <source>Similar to --depth, except it specifies the number of commits from the current shallow boundary instead of from the tip of each remote branch history.</source>
          <target state="translated">depth と似ていますが、リモートブランチ履歴の先端からではなく、現在の浅い境界からのコミット数を指定します。</target>
        </trans-unit>
        <trans-unit id="16434785e2f2781f48016d9fab6f521e71729a0f" translate="yes" xml:space="preserve">
          <source>Similar to -u. But when re-coding, the charset specified here is used instead of the one specified by i18n.commitencoding or UTF-8.</source>
          <target state="translated">uと似ています。ただし、リコーディングの際には、i18n.commitencodingやUTF-8で指定された文字セットではなく、ここで指定された文字セットが使用されます。</target>
        </trans-unit>
        <trans-unit id="35df8b1f29f7a7b94cf0adfb128190781a631c4c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;--create&lt;/code&gt; except that if &lt;code&gt;&amp;lt;new-branch&amp;gt;&lt;/code&gt; already exists, it will be reset to &lt;code&gt;&amp;lt;start-point&amp;gt;&lt;/code&gt;. This is a convenient shortcut for:</source>
          <target state="translated">&lt;code&gt;--create&lt;/code&gt; と同じですが、 &lt;code&gt;&amp;lt;new-branch&amp;gt;&lt;/code&gt; がすでに存在する場合は、 &lt;code&gt;&amp;lt;start-point&amp;gt;&lt;/code&gt; にリセットされます。これは次の場合の便利なショートカットです。</target>
        </trans-unit>
        <trans-unit id="a329dc4873c426988eca07322671d0e252450f5a" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;--file&lt;/code&gt; but use the given blob instead of a file. E.g. you can use &lt;code&gt;master:.gitmodules&lt;/code&gt; to read values from the file &lt;code&gt;.gitmodules&lt;/code&gt; in the master branch. See &quot;SPECIFYING REVISIONS&quot; section in &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions[7]&lt;/a&gt; for a more complete list of ways to spell blob names.</source>
          <target state="translated">&lt;code&gt;--file&lt;/code&gt; に似ていますが、ファイルの代わりに指定されたblobを使用します。たとえば、 &lt;code&gt;master:.gitmodules&lt;/code&gt; を使用して、masterブランチの &lt;code&gt;.gitmodules&lt;/code&gt; ファイルから値を読み取ることができます。blob名を綴る方法のより完全なリストについては、&lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions [7]の&lt;/a&gt;「リビジョンの指定」セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="96ae9e148f9a848728ba835436ff9b06a051bf18" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;--local&lt;/code&gt; except that &lt;code&gt;.git/config.worktree&lt;/code&gt; is read from or written to if &lt;code&gt;extensions.worktreeConfig&lt;/code&gt; is present. If not it&amp;rsquo;s the same as &lt;code&gt;--local&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;extensions.worktreeConfig&lt;/code&gt; が存在する場合に &lt;code&gt;.git/config.worktree&lt;/code&gt; が読み書きされることを除いて、 &lt;code&gt;--local&lt;/code&gt; と同様です。そうでない場合は &lt;code&gt;--local&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="9921875dc5f741363cc389c12f0a866da77aa3f9" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;--objects-edge&lt;/code&gt;, but it tries harder to find excluded commits at the cost of increased time. This is used instead of &lt;code&gt;--objects-edge&lt;/code&gt; to build &amp;ldquo;thin&amp;rdquo; packs for shallow repositories.</source>
          <target state="translated">&lt;code&gt;--objects-edge&lt;/code&gt; に似ていますが、時間の増加を犠牲にして、除外されたコミットを見つけるのが難しくなります。これは、 &lt;code&gt;--objects-edge&lt;/code&gt; 代わりに使用され、浅いリポジトリ用の「シン」パックを構築します。</target>
        </trans-unit>
        <trans-unit id="827a1dc116e1ce95f15ed3122df77ff565d151ab" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;--objects&lt;/code&gt;, but also print the IDs of excluded commits prefixed with a &amp;ldquo;-&amp;rdquo; character. This is used by &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects[1]&lt;/a&gt; to build a &amp;ldquo;thin&amp;rdquo; pack, which records objects in deltified form based on objects contained in these excluded commits to reduce network traffic.</source>
          <target state="translated">&lt;code&gt;--objects&lt;/code&gt; に似ていますが、先頭に「-」文字が付いた除外されたコミットのIDも出力します。これは&lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects [1]&lt;/a&gt;によって使用され、「シン」パックを構築します。このパックは、これらの除外されたコミットに含まれるオブジェクトに基づいて、オブジェクトを詳細化された形式で記録し、ネットワークトラフィックを削減します。</target>
        </trans-unit>
        <trans-unit id="db4263bd2603c01331f2d853a8cad6132476aed7" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;--stat&lt;/code&gt;, but shows number of added and deleted lines in decimal notation and pathname without abbreviation, to make it more machine friendly. For binary files, outputs two &lt;code&gt;-&lt;/code&gt; instead of saying &lt;code&gt;0 0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--stat&lt;/code&gt; に似ていますが、追加された行と削除された行の数を10進表記で示し、パス名を省略せずに示します。バイナリファイルの場合は、2を出力 &lt;code&gt;-&lt;/code&gt; の代わりに言っ &lt;code&gt;0 0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="507e19add19af137dd267ca439cffb2e494aaec7" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;--stat&lt;/code&gt;, but shows the number of added and deleted lines in decimal notation and the pathname without abbreviation, to make it more machine friendly. For binary files, outputs two &lt;code&gt;-&lt;/code&gt; instead of saying &lt;code&gt;0 0&lt;/code&gt;. Turns off &quot;apply&quot;.</source>
          <target state="translated">&lt;code&gt;--stat&lt;/code&gt; に似ていますが、追加された行と削除された行の数を10進表記で示し、パス名を省略形なしで示します。バイナリファイルの場合は、2を出力 &lt;code&gt;-&lt;/code&gt; の代わりに言っ &lt;code&gt;0 0&lt;/code&gt; 。「適用」をオフにします。</target>
        </trans-unit>
        <trans-unit id="cebb3f179c2f7afdfbf89dc9db3668db1b27ceee" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;-t&lt;/code&gt;, but use lowercase letters for files that are marked as &lt;code&gt;assume unchanged&lt;/code&gt; (see &lt;a href=&quot;git-update-index&quot;&gt;git-update-index[1]&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;-t&lt;/code&gt; に似ていますが、 &lt;code&gt;assume unchanged&lt;/code&gt; されないと見なされるようにマークされているファイルには小文字を使用します（&lt;a href=&quot;git-update-index&quot;&gt;git-update-index [1]を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="c8a85313dff4970a1ca58c4ac403a9e5f1e1fd26" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;-t&lt;/code&gt;, but use lowercase letters for files that are marked as &lt;code&gt;fsmonitor valid&lt;/code&gt; (see &lt;a href=&quot;git-update-index&quot;&gt;git-update-index[1]&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;-t&lt;/code&gt; に似ていますが、 &lt;code&gt;fsmonitor valid&lt;/code&gt; としてマークされているファイルには小文字を使用します（&lt;a href=&quot;git-update-index&quot;&gt;git-update-index [1]を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="d753bc37a0732c319a3b637b8b9f6c853acf890c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;list&lt;/code&gt;, except that it is used if and only if the caller wants to the resulting ref list to prepare push commands. A helper supporting both push and fetch can use this to distinguish for which operation the output of &lt;code&gt;list&lt;/code&gt; is going to be used, possibly reducing the amount of work that needs to be performed.</source>
          <target state="translated">&lt;code&gt;list&lt;/code&gt; に似ていますが、呼び出し元が結果の参照リストにプッシュコマンドを準備する場合にのみ使用されます。プッシュとフェッチの両方をサポートするヘルパーは、これを使用して、 &lt;code&gt;list&lt;/code&gt; の出力が使用される予定の操作を区別できます。これにより、実行する必要のある作業の量を減らすことができます。</target>
        </trans-unit>
        <trans-unit id="d877d80bc2ddec8772b0999fdcc01984ec807892" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;zebra&lt;/code&gt;, but additional dimming of uninteresting parts of moved code is performed. The bordering lines of two adjacent blocks are considered interesting, the rest is uninteresting. &lt;code&gt;dimmed_zebra&lt;/code&gt; is a deprecated synonym.</source>
          <target state="translated">&lt;code&gt;zebra&lt;/code&gt; に似ていますが、移動したコードの不要な部分の追加の調光が実行されます。隣接する2つのブロックの境界線は興味深いものと見なされ、残りは興味深いものではありません。 &lt;code&gt;dimmed_zebra&lt;/code&gt; は非推奨の同義語です。</target>
        </trans-unit>
        <trans-unit id="bf8bcfbd909889dac33d6d2f89b63bfd39d6ccea" translate="yes" xml:space="preserve">
          <source>Similar to Git&amp;rsquo;s &lt;code&gt;remote.&amp;lt;name&amp;gt;.pushurl&lt;/code&gt;, this key is designed to be used in cases where &lt;code&gt;url&lt;/code&gt; points to an SVN repository via a read-only transport, to provide an alternate read/write transport. It is assumed that both keys point to the same repository. Unlike &lt;code&gt;commiturl&lt;/code&gt;, &lt;code&gt;pushurl&lt;/code&gt; is a base path. If either &lt;code&gt;commiturl&lt;/code&gt; or &lt;code&gt;pushurl&lt;/code&gt; could be used, &lt;code&gt;commiturl&lt;/code&gt; takes precedence.</source>
          <target state="translated">Gitの &lt;code&gt;remote.&amp;lt;name&amp;gt;.pushurl&lt;/code&gt; と同様に、このキーは、 &lt;code&gt;url&lt;/code&gt; が読み取り専用トランスポートを介してSVNリポジトリを指す場合に使用され、代替の読み取り/書き込みトランスポートを提供するように設計されています。両方のキーが同じリポジトリを指していると想定されています。 &lt;code&gt;commiturl&lt;/code&gt; とは異なり、 &lt;code&gt;pushurl&lt;/code&gt; は基本パスです。 &lt;code&gt;commiturl&lt;/code&gt; または &lt;code&gt;pushurl&lt;/code&gt; のいずれかを使用できる場合は、 &lt;code&gt;commiturl&lt;/code&gt; が優先されます。</target>
        </trans-unit>
        <trans-unit id="91682fd49c343f959bbb6403f6f6863feba84482" translate="yes" xml:space="preserve">
          <source>Similar to above:</source>
          <target state="translated">上記に似ています。</target>
        </trans-unit>
        <trans-unit id="e5c2486b9a7763634d7231fd9214964f9084de7d" translate="yes" xml:space="preserve">
          <source>Similar to the above, but Apache can be used to return static files that are stored on disk. On many systems this may be more efficient as Apache can ask the kernel to copy the file contents from the file system directly to the network:</source>
          <target state="translated">上記に似ていますが、Apache はディスクに保存されている静的なファイルを返すのに使うことができます。多くのシステムでは、ファイルシステムからネットワークに直接ファイルの内容を コピーするようにカーネルに要求できるので、これはより効率的かもしれません。</target>
        </trans-unit>
        <trans-unit id="1d010174e63754716183c2af28e1291061e29078" translate="yes" xml:space="preserve">
          <source>Similar to the useSvmProps option; this is for users of the svnsync(1) command distributed with SVN 1.4.x and later.</source>
          <target state="translated">useSvmProps オプションに似ています。これは SVN 1.4.x 以降で配布されている svnsync(1)コマンドのユーザのためのものです。</target>
        </trans-unit>
        <trans-unit id="742718eb04c74d19e18742babbe16ee5d5955f76" translate="yes" xml:space="preserve">
          <source>Similar to the useSvmProps option; this is for users who need to remap the UUID manually. This may be useful in situations where the original UUID is not available via either useSvmProps or useSvnsyncProps.</source>
          <target state="translated">useSvmPropsオプションと同様に、これはUUIDを手動でリマップする必要があるユーザーのためのものです。これは、useSvmPropsまたはuseSvnsyncPropsのいずれかで元のUUIDが利用できない状況で有用かもしれません。</target>
        </trans-unit>
        <trans-unit id="2b4ceb453e6bfcacc89ab013230d146d7c2efc84" translate="yes" xml:space="preserve">
          <source>Similar to two-line header for traditional &lt;code&gt;unified&lt;/code&gt; diff format, &lt;code&gt;/dev/null&lt;/code&gt; is used to signal created or deleted files.</source>
          <target state="translated">従来の &lt;code&gt;unified&lt;/code&gt; diff形式の2行ヘッダーと同様に、 &lt;code&gt;/dev/null&lt;/code&gt; は、作成または削除されたファイルを通知するために使用されます。</target>
        </trans-unit>
        <trans-unit id="9acea96e7cbe682e6caa9d2b57eedce27f5ebab4" translate="yes" xml:space="preserve">
          <source>Similarly, for a maintenance release, &lt;code&gt;maint&lt;/code&gt; is tracking the commits to be released. Therefore, in the steps above simply tag and push &lt;code&gt;maint&lt;/code&gt; rather than &lt;code&gt;master&lt;/code&gt;.</source>
          <target state="translated">同様に、メンテナンスリリースの場合、 &lt;code&gt;maint&lt;/code&gt; はリリースされるコミットを追跡しています。したがって、上記の手順では、 &lt;code&gt;master&lt;/code&gt; ではなく &lt;code&gt;maint&lt;/code&gt; にタグを付けてプッシュするだけです。</target>
        </trans-unit>
        <trans-unit id="c8cf6e3fc26d2562fdbc09f3e09e2deb878c7a85" translate="yes" xml:space="preserve">
          <source>Similarly, when moving files around, one can find that filenames with non-ascii or special characters end up in a different directory, one that includes a double quote character. (This is technically the same issue as above with quoting, but perhaps an interesting different way that it can and has manifested as a problem.)</source>
          <target state="translated">同様に、ファイルを移動させるときに、非 ASCII 文字や特殊文字を含むファイル名が、 ダブルクォート文字を含む別のディレクトリで終わってしまうことがあります (これは技術的には上記の引用符の問題と同じですが、 おそらく興味深い別の方法で問題が発生する可能性があります。(これは技術的には上記の引用符の問題と同じですが、おそらく興味深い別の方法で問題が発生する可能性があり、問題として顕在化しています)</target>
        </trans-unit>
        <trans-unit id="47fa1a83138cf11ea34d19a92cc77db11eb4b97c" translate="yes" xml:space="preserve">
          <source>Similarly, when the &quot;recursive&quot; merge strategy runs, and finds that there are criss-cross merges and thus more than one merge base (which is fairly unusual, but it does happen), it will generate one temporary midway tree (or possibly even more, if you had lots of criss-crossing merges and more than two merge bases) as a temporary internal merge base, and again, those are real objects, but the end result will not end up pointing to them, so they end up &quot;dangling&quot; in your repository.</source>
          <target state="translated">同様に、「再帰的」なマージ戦略を実行して、交差するマージがあり、その結果複数のマージベースがあることを発見した場合 (これはかなり珍しいことですが、実際には起こります)、一時的な内部マージベースとして、一時的な中間ツリーを生成します (交差するマージがたくさんあり、2つ以上のマージベースがある場合は、それ以上になる可能性もあります)。</target>
        </trans-unit>
        <trans-unit id="50765cb4cf598285ffabcacb2eda47bdf85bbc67" translate="yes" xml:space="preserve">
          <source>Similarly, you need only trust the SHA-1 name of a top-level tree object to trust the contents of the entire directory that it refers to, and if you receive the SHA-1 name of a commit from a trusted source, then you can easily verify the entire history of commits reachable through parents of that commit, and all of those contents of the trees referred to by those commits.</source>
          <target state="translated">同様に、トップレベルのツリーオブジェクトのSHA-1名を信頼するだけで、それが参照しているディレクトリ全体の内容を信頼することができ、信頼できるソースからコミットのSHA-1名を受け取った場合、そのコミットの親を介して到達可能なコミットの履歴全体と、そのコミットが参照しているツリーのそれらの内容のすべてを簡単に検証することができます。</target>
        </trans-unit>
        <trans-unit id="35267477ddadd32e54d2580eaf5f6347904aefaa" translate="yes" xml:space="preserve">
          <source>Simple UNIX mbox splitter program</source>
          <target state="translated">シンプルな UNIX mbox スプリッタープログラム</target>
        </trans-unit>
        <trans-unit id="e6081dd40a736a561294c958c5f476bf808af40b" translate="yes" xml:space="preserve">
          <source>Simplifies the history to the simplest history explaining the final state of the tree. Simplest because it prunes some side branches if the end result is the same (i.e. merging branches with the same content)</source>
          <target state="translated">履歴をツリーの最終状態を説明する最も単純な履歴に単純化します。最終的な結果が同じであれば、いくつかの側枝を刈り込んでしまうため、最もシンプルになります(同じ内容の枝をマージするなど)。</target>
        </trans-unit>
        <trans-unit id="7d47a55c52a010c445880763e4c0c53ec8d956ef" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;dcommit&lt;/code&gt; uses rebase internally, any Git branches you &lt;code&gt;git push&lt;/code&gt; to before &lt;code&gt;dcommit&lt;/code&gt; on will require forcing an overwrite of the existing ref on the remote repository. This is generally considered bad practice, see the &lt;a href=&quot;git-push&quot;&gt;git-push[1]&lt;/a&gt; documentation for details.</source>
          <target state="translated">以来 &lt;code&gt;dcommit&lt;/code&gt; 用途あなたは、内部で任意のGitのブランチをリベース &lt;code&gt;git push&lt;/code&gt; 前に &lt;code&gt;dcommit&lt;/code&gt; リモートリポジトリ上の既存のREFの上書きを強制する必要があります上。これは一般に悪い習慣と考えられています。詳細は&lt;a href=&quot;git-push&quot;&gt;git-push [1]の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="d3cbf9539838f097e44d7366548fff10dd5a4bb6" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;git fast-import&lt;/code&gt; cannot tag trees, you will not be able to export the linux.git repository completely, as it contains a tag referencing a tree instead of a commit.</source>
          <target state="translated">以来、 &lt;code&gt;git fast-import&lt;/code&gt; できないタグの木ではなくコミットのツリーを参照するタグが含まれているとして、あなたは、完全にlinux.gitリポジトリをエクスポートすることはできません。</target>
        </trans-unit>
        <trans-unit id="e8a0aceddf81ac41c98d5a8bdbe00960df868272" translate="yes" xml:space="preserve">
          <source>Since every developer&amp;rsquo;s repository has the same complete copy of the project history, no repository is special, and it is trivial for another developer to take over maintenance of a project, either by mutual agreement, or because a maintainer becomes unresponsive or difficult to work with.</source>
          <target state="translated">すべての開発者のリポジトリにはプロジェクト履歴の同じ完​​全なコピーがあるため、特別なリポジトリはなく、他の開発者が相互の合意によって、または保守担当者が応答しなくなったり、作業が困難になったりするために、プロジェクトの保守を引き継ぐことは簡単です。 。</target>
        </trans-unit>
        <trans-unit id="ff45ae2cc9973e736a0612a33b064d4efb949c7a" translate="yes" xml:space="preserve">
          <source>Since keeping up-to-date with both branches and tags on the remote is a common use-case the &lt;code&gt;--prune-tags&lt;/code&gt; option can be supplied along with &lt;code&gt;--prune&lt;/code&gt; to prune local tags that don&amp;rsquo;t exist on the remote, and force-update those tags that differ. Tag pruning can also be enabled with &lt;code&gt;fetch.pruneTags&lt;/code&gt; or &lt;code&gt;remote.&amp;lt;name&amp;gt;.pruneTags&lt;/code&gt; in the config. See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">リモートのブランチとタグの両方を最新の状態に保つことは一般的なユースケースであるため、 &lt;code&gt;--prune-tags&lt;/code&gt; オプションを &lt;code&gt;--prune&lt;/code&gt; と一緒に指定して、リモートに存在しないローカルタグをプルーニングできます。異なるタグを強制的に更新します。タグのプルーニングは、設定の &lt;code&gt;fetch.pruneTags&lt;/code&gt; または &lt;code&gt;remote.&amp;lt;name&amp;gt;.pruneTags&lt;/code&gt; でも有効にできます。&lt;a href=&quot;git-config&quot;&gt;git-config [1]を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="0932a869e1657064106036f8682ab82f7b34c539" translate="yes" xml:space="preserve">
          <source>Since object names are computed the same way in every repository, the same content stored in two repositories will always be stored under the same name.</source>
          <target state="translated">オブジェクト名はどのリポジトリでも同じように計算されるので、2つのリポジトリに保存されている同じコンテンツは常に同じ名前で保存されます。</target>
        </trans-unit>
        <trans-unit id="c6783a475fdc4e2463b00ffd216c9d8a1b41c5ce" translate="yes" xml:space="preserve">
          <source>Since the blob is entirely defined by its data, if two files in a directory tree (or in multiple different versions of the repository) have the same contents, they will share the same blob object. The object is totally independent of its location in the directory tree, and renaming a file does not change the object that file is associated with.</source>
          <target state="translated">ブロブはデータによって完全に定義されるので、ディレクトリツリー内の2つのファイル(またはリポジトリの複数の異なるバージョンのファイル)が同じ内容を持っている場合、同じブロブオブジェクトを共有します。オブジェクトはディレクトリツリー内での位置に完全に依存せず、ファイル名を変更してもそのファイルに関連付けられているオブジェクトは変わりません。</target>
        </trans-unit>
        <trans-unit id="a3fb22d6e6da288d244e8acdd9955bf43f0ad8d0" translate="yes" xml:space="preserve">
          <source>Since the current state of closing.txt is cached in the index file, it is listed as &quot;Changes to be committed&quot;. Since file.txt has changes in the working directory that aren&amp;rsquo;t reflected in the index, it is marked &quot;changed but not updated&quot;. At this point, running &quot;git commit&quot; would create a commit that added closing.txt (with its new contents), but that didn&amp;rsquo;t modify file.txt.</source>
          <target state="translated">close.txtの現在の状態はインデックスファイルにキャッシュされているため、「コミットされる変更」としてリストされます。file.txtには作業ディレクトリで変更があり、インデックスには反映されないため、「変更されていますが更新されていません」とマークされています。この時点で、「git commit」を実行すると、coming.txtが（新しい内容とともに）追加されますが、file.txtは変更されませんでした。</target>
        </trans-unit>
        <trans-unit id="78b19ba60aba5b2f618c3990a75d2fca7411595a" translate="yes" xml:space="preserve">
          <source>Since the noMetadata, rewriteRoot, rewriteUUID, useSvnsyncProps and useSvmProps options all affect the metadata generated and used by &lt;code&gt;git svn&lt;/code&gt;; they &lt;strong&gt;must&lt;/strong&gt; be set in the configuration file before any history is imported and these settings should never be changed once they are set.</source>
          <target state="translated">noMetadata、rewriteRoot、rewriteUUID、useSvnsyncPropsおよびuseSvmPropsオプションはすべて、 &lt;code&gt;git svn&lt;/code&gt; によって生成および使用されるメタデータに影響します。彼らは&lt;strong&gt;必要があります&lt;/strong&gt;任意の履歴をインポートする前に、設定ファイルで設定され、それらが設定されると、これらの設定を変更すべきではありません。</target>
        </trans-unit>
        <trans-unit id="6c0fcca9337c1cb048efaf57760c6fdc1a7b6b6f" translate="yes" xml:space="preserve">
          <source>Singe line category of a project, used to group projects if &lt;code&gt;$projects_list_group_categories&lt;/code&gt; is enabled. By default (file and configuration variable absent), uncategorized projects are put in the &lt;code&gt;$project_list_default_category&lt;/code&gt; category. You can use the &lt;code&gt;gitweb.category&lt;/code&gt; repo configuration variable, but the file takes precedence.</source>
          <target state="translated">&lt;code&gt;$projects_list_group_categories&lt;/code&gt; が有効な場合にプロジェクトをグループ化するために使用される、プロジェクトの単線カテゴリ。デフォルトでは（ファイルおよび構成変数が存在しない）、未分類のプロジェクトは &lt;code&gt;$project_list_default_category&lt;/code&gt; カテゴリーに配置されます。 &lt;code&gt;gitweb.category&lt;/code&gt; repo構成変数を使用できますが、ファイルが優先されます。</target>
        </trans-unit>
        <trans-unit id="1622ee3a3548a98ace63f4a1f20c802cbd3d6865" translate="yes" xml:space="preserve">
          <source>Single Tree Merge</source>
          <target state="translated">シングル ツリー マージ</target>
        </trans-unit>
        <trans-unit id="68fe6fe857d1a576bbea2c5ba543ec91391124bd" translate="yes" xml:space="preserve">
          <source>Single URL for gitweb and for fetching</source>
          <target state="translated">gitweb と取得用の単一 URL</target>
        </trans-unit>
        <trans-unit id="c63aa67778ae9fde52963fd98eabefccd9f535ba" translate="yes" xml:space="preserve">
          <source>Size of the Git repository: In its current form Git scales up poorly for large repositories containing content that is not compressed by delta computation between trees. For example, you can use submodules to hold large binary assets and these repositories can be shallowly cloned such that you do not have a large history locally.</source>
          <target state="translated">Git リポジトリのサイズ。現在の形では、ツリー間のデルタ計算で圧縮されていないコンテンツを含む大規模なリポジトリでは、Git のスケールアップは不十分です。たとえば、大きなバイナリ資産を保持するためにサブモジュールを使用することができますが、これらのリポジトリはローカルに大きな履歴を持たないように浅くクローンすることができます。</target>
        </trans-unit>
        <trans-unit id="109e0b1e1d08be0f664fabdbefc14a841a52fd41" translate="yes" xml:space="preserve">
          <source>Skip &quot;branches&quot; and &quot;tags&quot; of first level directories</source>
          <target state="translated">第一階層ディレクトリの「ブランチ」と「タグ」をスキップする</target>
        </trans-unit>
        <trans-unit id="89ac85d0525bb0b20e17b8b50eb25e661e2c2664" translate="yes" xml:space="preserve">
          <source>Skip &quot;doc*&quot; directory for every fetch</source>
          <target state="translated">フェッチごとに &quot;doc*&quot; ディレクトリをスキップする</target>
        </trans-unit>
        <trans-unit id="160b3d2c26cf27627f75b323f1f2f273b38eb0f3" translate="yes" xml:space="preserve">
          <source>Skip &lt;code&gt;number&lt;/code&gt; commits before starting to show the commit output.</source>
          <target state="translated">コミット出力の表示を開始する前に、 &lt;code&gt;number&lt;/code&gt; コミットをスキップします。</target>
        </trans-unit>
        <trans-unit id="143f0d9f0b5891b48ad38fad90174c475ab3d608" translate="yes" xml:space="preserve">
          <source>Skip algorithm</source>
          <target state="translated">スキップアルゴリズム</target>
        </trans-unit>
        <trans-unit id="fd9da89bf39cfad867f423a79c66781ba5934141" translate="yes" xml:space="preserve">
          <source>Skip algorithm discussed</source>
          <target state="translated">議論されているスキップアルゴリズム</target>
        </trans-unit>
        <trans-unit id="e6458f822412c73c4c309bd3d568b1a062547077" translate="yes" xml:space="preserve">
          <source>Skip and remove all lines starting with comment character (default &lt;code&gt;#&lt;/code&gt;).</source>
          <target state="translated">コメント文字で始まるすべての行をスキップして削除します（デフォルト &lt;code&gt;#&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="8d0905b7d9c2aadf471da8a0572104f192b6463b" translate="yes" xml:space="preserve">
          <source>Skip move or rename actions which would lead to an error condition. An error happens when a source is neither existing nor controlled by Git, or when it would overwrite an existing file unless &lt;code&gt;-f&lt;/code&gt; is given.</source>
          <target state="translated">エラー状態につながる移動または名前変更アクションをスキップします。エラーが発生するのは、ソースが存在しないか、Gitによって制御されていない場合、または &lt;code&gt;-f&lt;/code&gt; が指定されていない限り、既存のファイルを上書きする場合です。</target>
        </trans-unit>
        <trans-unit id="93791f01919fc21e7203f6ad13249cb4adbabc2c" translate="yes" xml:space="preserve">
          <source>Skip output of blob objects and instead refer to blobs via their original SHA-1 hash. This is useful when rewriting the directory structure or history of a repository without touching the contents of individual files. Note that the resulting stream can only be used by a repository which already contains the necessary objects.</source>
          <target state="translated">blob オブジェクトの出力をスキップし、代わりに元の SHA-1 ハッシュを介して blob を参照します。これは、個々のファイルの内容に触れることなく、リポジトリのディレクトリ構造や履歴を書き換える場合に便利です。結果として得られるストリームは、必要なオブジェクトを既に含んでいるリポジトリでのみ使用できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="3704502c09a46589e3fc638d0b7431bdbfb4de69" translate="yes" xml:space="preserve">
          <source>Skip paths matching the regex.</source>
          <target state="translated">正規表現にマッチするパスをスキップします。</target>
        </trans-unit>
        <trans-unit id="8024d787464bdc42cf9e1692fcecd2225427e388" translate="yes" xml:space="preserve">
          <source>Skip the current commit and continue with the rest of the sequence.</source>
          <target state="translated">現在のコミットをスキップして、残りのシーケンスを続行します。</target>
        </trans-unit>
        <trans-unit id="8b89cae0a7a7a1a500c597f44f79f240ec0b9f01" translate="yes" xml:space="preserve">
          <source>Skip the current patch. This is only meaningful when restarting an aborted patch.</source>
          <target state="translated">現在のパッチをスキップします。これは、中断されたパッチを再起動するときにのみ意味があります。</target>
        </trans-unit>
        <trans-unit id="37f2142ef251b529e2961f797b73a85bc8215244" translate="yes" xml:space="preserve">
          <source>Skip the first &amp;lt;nn&amp;gt; numbers, for example if -f3 is specified, start the numbering with 0004.</source>
          <target state="translated">最初の&amp;lt;nn&amp;gt;番号をスキップします。たとえば、-f3が指定されている場合、番号は0004から始めます。</target>
        </trans-unit>
        <trans-unit id="53b34cae8fb29a9d928b4eaf4c1d1171200a7cd2" translate="yes" xml:space="preserve">
          <source>Skip untracked files matching pattern. Note that pattern is a shell wildcard pattern. See EXCLUDE PATTERNS below for more information.</source>
          <target state="translated">パターンに一致するトラックされていないファイルをスキップします。patternはシェルのワイルドカードパターンであることに注意してください。詳細については、下記の「パターンを除外する」を参照してください。</target>
        </trans-unit>
        <trans-unit id="5c514bc7b54c5d446f341bd390aa604bcfe7a779" translate="yes" xml:space="preserve">
          <source>Skip-worktree bit</source>
          <target state="translated">スキップワークツリービット</target>
        </trans-unit>
        <trans-unit id="1c6f4418b45f18f2276258a670ff4fb3ee82370c" translate="yes" xml:space="preserve">
          <source>Skip-worktree bit can be defined in one (long) sentence: When reading an entry, if it is marked as skip-worktree, then Git pretends its working directory version is up to date and read the index version instead.</source>
          <target state="translated">スキップワークツリービットは、ひとつの(長い)文で定義できます。あるエントリを読み込む際に、それが skip-worktree とマークされていると、Git は作業ディレクトリのバージョンを最新のものとみなし、代わりにインデックスのバージョンを読み込みます。</target>
        </trans-unit>
        <trans-unit id="497781ce21708a17d4e26d12bd089a723d673b06" translate="yes" xml:space="preserve">
          <source>So &quot;git bisect&quot; is designed to help find a &quot;first bad commit&quot;. And to be as efficient as possible, it tries to perform a binary search.</source>
          <target state="translated">つまり、&quot;git bisect&quot; は &quot;最初の悪いコミット&quot; を見つけるのに役立つように設計されているということです。そして、可能な限り効率的にするために、バイナリ検索を実行しようとします。</target>
        </trans-unit>
        <trans-unit id="2f63b69e28337cf529c035b03d9daaf28859996c" translate="yes" xml:space="preserve">
          <source>So &lt;code&gt;git diff&lt;/code&gt; is comparing against something other than the head. The thing that it&amp;rsquo;s comparing against is actually the index file, which is stored in .git/index in a binary format, but whose contents we can examine with ls-files:</source>
          <target state="translated">したがって、 &lt;code&gt;git diff&lt;/code&gt; は、ヘッド以外のものと比較しています。比較対象となるのは、実際にはバイナリファイルの.git / indexに格納されているインデックスファイルですが、その内容はls-filesで確認できます。</target>
        </trans-unit>
        <trans-unit id="87fbbf25154de6df0238ad0568533ed6007a8d44" translate="yes" xml:space="preserve">
          <source>So a good work-flow should be designed around the above points. That is making bisecting easier, more useful and standard.</source>
          <target state="translated">ですから、良いワークフローは上記の点を中心に設計されるべきです。それは、二分法をより簡単に、より便利に、より標準的にすることです。</target>
        </trans-unit>
        <trans-unit id="fe9010d034fcf65a3dd663b44598da34c322ed58" translate="yes" xml:space="preserve">
          <source>So be careful when using this with a refspec like &lt;code&gt;refs/tags/*:refs/tags/*&lt;/code&gt;, or any other refspec which might map references from multiple remotes to the same local namespace.</source>
          <target state="translated">したがって、これを &lt;code&gt;refs/tags/*:refs/tags/*&lt;/code&gt; のようなrefspec 、または複数のリモートからの参照を同じローカル名前空間にマップする可能性のあるその他のrefspecで使用する場合は注意してください。</target>
        </trans-unit>
        <trans-unit id="2b170fc73b3dfabca43a4cde5eef61bd350b47e1" translate="yes" xml:space="preserve">
          <source>So by default &lt;code&gt;git commit&lt;/code&gt; uses the index to create the commit, not the working tree; the &quot;-a&quot; option to commit tells it to first update the index with all changes in the working tree.</source>
          <target state="translated">したがって、デフォルトでは &lt;code&gt;git commit&lt;/code&gt; は作業ツリーではなくインデックスを使用してコミットを作成します。コミットする &quot;-a&quot;オプションは、作業ツリー内のすべての変更でインデックスを最初に更新するように指示します。</target>
        </trans-unit>
        <trans-unit id="f86c14eb732dcf1c0bad37f2fc6a2cc528890e0c" translate="yes" xml:space="preserve">
          <source>So doing a &lt;code&gt;git diff-index --cached&lt;/code&gt; is basically very useful when you are asking yourself &quot;what have I already marked for being committed, and what&amp;rsquo;s the difference to a previous tree&quot;.</source>
          <target state="translated">したがって、 &lt;code&gt;git diff-index --cached&lt;/code&gt; を実行することは、「コミット済みとしてすでにマークされているもの、および以前のツリーとの違いは何か」と自問している場合、基本的に非常に役立ちます。</target>
        </trans-unit>
        <trans-unit id="d45f632df019622532eb259f26fdc9a9f2411148" translate="yes" xml:space="preserve">
          <source>So for example when &lt;code&gt;--thread&lt;/code&gt; and &lt;code&gt;--no-chain-reply-to&lt;/code&gt; are specified, the second and subsequent patches will be replies to the first one like in the illustration below where &lt;code&gt;[PATCH v2 0/3]&lt;/code&gt; is in reply to &lt;code&gt;[PATCH 0/2]&lt;/code&gt;:</source>
          <target state="translated">したがって、たとえば &lt;code&gt;--thread&lt;/code&gt; と &lt;code&gt;--no-chain-reply-to&lt;/code&gt; が指定されている場合、2番目以降のパッチは、 &lt;code&gt;[PATCH v2 0/3]&lt;/code&gt; が &lt;code&gt;[PATCH 0/2]&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="8dac83a478835c1820a1dc8da47f73a69f302106" translate="yes" xml:space="preserve">
          <source>So git bisect is unconditional goodness - and feel free to quote that ;-)</source>
          <target state="translated">ということで、git bisectは無条件の善良さですね。)</target>
        </trans-unit>
        <trans-unit id="9a21b5de38126daf9f68802ae918237cb622de11" translate="yes" xml:space="preserve">
          <source>So if there is no bad merge base, the bisection process continues as usual after this step.</source>
          <target state="translated">そのため、悪いマージベースがない場合は、このステップの後も通常通りに二等化処理を継続します。</target>
        </trans-unit>
        <trans-unit id="d61ad44b1ad1935830d69abe827279c6ac721854" translate="yes" xml:space="preserve">
          <source>So if we could just &quot;replace&quot; Z by Z' when we bisect, then we would not need to add anything to a script. It would just work for anyone in the project sharing the special branches and the replacements.</source>
          <target state="translated">ですから、もし二等分するときにZをZ'に「置き換える」ことができれば、スクリプトに何も追加する必要はないでしょう。それは、特別な分岐と置換を共有しているプロジェクトの誰にでも使えるようになるでしょう。</target>
        </trans-unit>
        <trans-unit id="6be137f4b3e3bebc88bcbf9a9fd9420c4009228f" translate="yes" xml:space="preserve">
          <source>So if you know how to create test cases and how to bisect, you will be subject to a virtuous circle:</source>
          <target state="translated">そのため、テストケースの作り方や二分法を知っていれば、好循環の対象になります。</target>
        </trans-unit>
        <trans-unit id="b28d1446f9340641647b1bfa92704042d040df77" translate="yes" xml:space="preserve">
          <source>So if you used &quot;git bisect skip&quot; (or the run script exited with special code 125) you could get a result like this:</source>
          <target state="translated">つまり、&quot;git bisect skip&quot; を使用した場合 (あるいは実行スクリプトが特別なコード 125 で終了した場合)は、次のような結果が得られるということです。</target>
        </trans-unit>
        <trans-unit id="edcb1ada2530409c42369421497ba8e78619bff1" translate="yes" xml:space="preserve">
          <source>So in the above example the best bisection point is commit C.</source>
          <target state="translated">そのため、上記の例では、最適な二等分点はコミットCとなります。</target>
        </trans-unit>
        <trans-unit id="6fdeecf50af4098d1933aa89ebcede0a8177561f" translate="yes" xml:space="preserve">
          <source>So in the end this means that to find the best bisection commits we should maximize the function:</source>
          <target state="translated">つまり、これは最終的には、最良の二分割コミットを見つけるためには、関数を最大化すべきだということを意味しています。</target>
        </trans-unit>
        <trans-unit id="58a2f1d134fdcd7a3743e88aa224e9253e6fbd42" translate="yes" xml:space="preserve">
          <source>So it is a fact that commits near an untestable commit have a high probability of being untestable themselves. And the best bisection commits are often found together too (due to the bisection algorithm).</source>
          <target state="translated">つまり、テスト不可能なコミットの近くにあるコミットは、それ自体がテスト不可能な確率が高いということです。そして、最高の二分法コミットも一緒に見つかることがよくあります (二分法アルゴリズムによる)。</target>
        </trans-unit>
        <trans-unit id="aa016e179ca75d2a0eb71de197505264fa3225e9" translate="yes" xml:space="preserve">
          <source>So now we know how Git uses the object database to represent a project&amp;rsquo;s history:</source>
          <target state="translated">これで、Gitがオブジェクトデータベースを使用してプロジェクトの履歴を表す方法がわかりました。</target>
        </trans-unit>
        <trans-unit id="ce2a816c8c6bc197cebf7da353940391ec82e2e3" translate="yes" xml:space="preserve">
          <source>So now you know that the missing blob was the data for a file named &lt;code&gt;myfile&lt;/code&gt;. And chances are you can also identify the directory&amp;mdash;​let&amp;rsquo;s say it&amp;rsquo;s in &lt;code&gt;somedirectory&lt;/code&gt;. If you&amp;rsquo;re lucky the missing copy might be the same as the copy you have checked out in your working tree at &lt;code&gt;somedirectory/myfile&lt;/code&gt;; you can test whether that&amp;rsquo;s right with &lt;a href=&quot;git-hash-object&quot;&gt;git-hash-object[1]&lt;/a&gt;:</source>
          <target state="translated">これで、欠落しているblobが &lt;code&gt;myfile&lt;/code&gt; という名前のファイルのデータであることがわかりました。また、ディレクトリを特定できる可能性もあります。たとえば、それが &lt;code&gt;somedirectory&lt;/code&gt; にあるとします。運が &lt;code&gt;somedirectory/myfile&lt;/code&gt; ば、失われたコピーは、作業ディレクトリのsomedirectory / myfileでチェックアウトしたコピーと同じになる可能性があります。&lt;a href=&quot;git-hash-object&quot;&gt;git-hash-object [1]を使用&lt;/a&gt;して、それが正しいかどうかをテストできます。</target>
        </trans-unit>
        <trans-unit id="02795e1f800cead1112ee5200f5eaf14f8868f55" translate="yes" xml:space="preserve">
          <source>So of course it&amp;rsquo;s much better as it&amp;rsquo;s O(N * T) vs O(N * T * M) if you would test everything after each commit.</source>
          <target state="translated">もちろん、各コミット後にすべてをテストする場合は、O（N * T）とO（N * T * M）の方がはるかに優れています。</target>
        </trans-unit>
        <trans-unit id="bf839044c5c4761411ba28111f62e6182a819140" translate="yes" xml:space="preserve">
          <source>So only the W and B commits will be kept. Because commits X and Y will have been removed by rules a) and b) respectively, and because commits G are removed by rule b) too.</source>
          <target state="translated">つまり、W と B のコミットだけが保持されることになります。なぜなら、X と Y のコミットはそれぞれルール a)と b)によって削除され、G のコミットもルール b)によって削除されるからです。</target>
        </trans-unit>
        <trans-unit id="2adeb678ade18152fba70f98a363a63cf540c6c1" translate="yes" xml:space="preserve">
          <source>So regressions are fought all the time by developers, and indeed it is well known that bugs should be fixed as soon as possible, so as soon as they are found. That&amp;rsquo;s why it is interesting to have good tools for this purpose.</source>
          <target state="translated">そのため、開発者は常に退行と戦っています。実際、バグが見つかったらすぐに修正する必要があることはよく知られています。そのため、この目的のための優れたツールがあるのは興味深いことです。</target>
        </trans-unit>
        <trans-unit id="e3329398bcdff474dec989568418215901207762" translate="yes" xml:space="preserve">
          <source>So test suites and &quot;git bisect&quot; are complementary tools that are very powerful and efficient when used together.</source>
          <target state="translated">つまり、テストスイートと &quot;git bisect&quot; は補完的なツールであり、一緒に使うと非常に強力で効率的なものになります。</target>
        </trans-unit>
        <trans-unit id="af6a5f3f7d1b778946d7ea3d80d407ba283ecbfd" translate="yes" xml:space="preserve">
          <source>So the algorithm used by &quot;git bisect&quot; to find the best bisection commit when there are no skipped commits is the following:</source>
          <target state="translated">そこで、「git bisect」がスキップされたコミットがないときに最適なバイセクションコミットを見つけるために使っているアルゴリズムは以下のようになります。</target>
        </trans-unit>
        <trans-unit id="d52372a3732a9693c38928f4af80ece55caba390" translate="yes" xml:space="preserve">
          <source>So the current algorithm seems to be the best possible given what we initially supposed.</source>
          <target state="translated">だから、現在のアルゴリズムは、我々が最初に想定していたことを考えると、可能な限り最高のものであるように思われる。</target>
        </trans-unit>
        <trans-unit id="ff070bb5b96ce6bdea0ee7e21e6149356aab622c" translate="yes" xml:space="preserve">
          <source>So the ideal is usually to produce a series of patches such that:</source>
          <target state="translated">だから、理想は通常、そのような一連のパッチを生成することです。</target>
        </trans-unit>
        <trans-unit id="a9929fd0a7cc637ffed9aa6825e45ac8df015448" translate="yes" xml:space="preserve">
          <source>So to help people find commits that introduce a &quot;bad&quot; behavior, the &quot;git bisect&quot; set of commands was invented. And it follows of course that in &quot;git bisect&quot; parlance, commits where the &quot;interesting behavior&quot; is present are called &quot;bad&quot; commits, while other commits are called &quot;good&quot; commits. And a commit that introduce the behavior we are interested in is called a &quot;first bad commit&quot;. Note that there could be more than one &quot;first bad commit&quot; in the commit space we are searching.</source>
          <target state="translated">そこで、「悪い」動作を導入しているコミットを見つけやすくするために &quot;git bisect&quot; というコマンドが考案されました。git bisect&quot; の用語では、&quot;興味深い挙動 &quot;があるコミットを &quot;bad&quot; コミットと呼び、それ以外のコミットを &quot;good&quot; コミットと呼ぶことになります。そして、私たちが興味を持っている挙動を導入したコミットを &quot;最初の悪いコミット&quot; と呼びます。なお、検索しているコミット空間には複数の「最初の不良コミット」が存在する可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="15c2cfea7209fe12c9a7f928eefdf57e7efd00f9" translate="yes" xml:space="preserve">
          <source>So to introduce some real trust in the system, the only thing you need to do is to digitally sign just 'one' special note, which includes the name of a top-level commit. Your digital signature shows others that you trust that commit, and the immutability of the history of commits tells others that they can trust the whole history.</source>
          <target state="translated">ですから、システムに真の信頼を導入するために必要なことは、トップレベルのコミット名を含む「一つ」の特別なメモにデジタル署名をすることだけです。あなたのデジタル署名は、あなたがそのコミットを信頼していることを他の人に示し、コミットの歴史の不変性は、他の人に歴史全体を信頼できることを伝えます。</target>
        </trans-unit>
        <trans-unit id="909741d50394835646e0e74eaab338b4f855de2e" translate="yes" xml:space="preserve">
          <source>So to populate the index with the two files you just created, you can do</source>
          <target state="translated">そこで、先ほど作成した2つのファイルでインデックスを作成するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="f597f374b45ae15a5bbfbd431d1e5af284187139" translate="yes" xml:space="preserve">
          <source>So using a PRNG with a bias to favor commits away from the good and bad commits looked like a good choice.</source>
          <target state="translated">そのため、良いコミットと悪いコミットから離れてコミットを有利にするためにバイアスのかかったPRNGを使用することは良い選択のように見えました。</target>
        </trans-unit>
        <trans-unit id="1d3965fc903eee9b8f55d2c4363ff10ff9b5318f" translate="yes" xml:space="preserve">
          <source>So very soon it will not be possible to completely test everything.</source>
          <target state="translated">だから、すぐにすべてを完全にテストすることはできません。</target>
        </trans-unit>
        <trans-unit id="c734302804af13b8fb3578fee7c8a382eab7f492" translate="yes" xml:space="preserve">
          <source>So we chose G, H, K or L as the best bisection point, which is better than F. Because if for example L is bad, then we will know not only that L, M and N are bad but also that G, H, I and J are not the first bad commit (since we suppose that there is only one first bad commit and it must be an ancestor of L).</source>
          <target state="translated">というのは、例えばLが悪いとすると、L,M,Nが悪いだけでなく、G,H,I,Jが最初の悪いコミットではないことがわかるからです(最初の悪いコミットは1つしかないと仮定しているので、Lの祖先でなければなりません)。</target>
        </trans-unit>
        <trans-unit id="52135537297d21de1e1bab64c3c62387485ffd7b" translate="yes" xml:space="preserve">
          <source>So we would be left with only:</source>
          <target state="translated">そうすると、私たちに残されたのは</target>
        </trans-unit>
        <trans-unit id="9a854aba22b6e93e9800490c72e201394edc5390" translate="yes" xml:space="preserve">
          <source>So what are the tools used to fight regressions? They are nearly the same as those used to fight regular bugs. The only specific tools are test suites and tools similar as &quot;git bisect&quot;.</source>
          <target state="translated">退行と戦うために使われるツールは何ですか?これらのツールは、通常のバグ対策に使われるものとほぼ同じです。特定のツールはテストスイートと &quot;git bisect&quot; に似たツールだけです。</target>
        </trans-unit>
        <trans-unit id="17175b38ddc3adc987023ab7708e71618fdb213f" translate="yes" xml:space="preserve">
          <source>So what our &lt;code&gt;git add&lt;/code&gt; did was store a new blob and then put a reference to it in the index file. If we modify the file again, we&amp;rsquo;ll see that the new modifications are reflected in the &lt;code&gt;git diff&lt;/code&gt; output:</source>
          <target state="translated">したがって、 &lt;code&gt;git add&lt;/code&gt; が行ったのは、新しいblobを格納してから、それへの参照をインデックスファイルに配置することでした。ファイルを再度変更すると、新しい変更が &lt;code&gt;git diff&lt;/code&gt; 出力に反映されていることがわかります。</target>
        </trans-unit>
        <trans-unit id="c52a5d49814c75f968644da3c05f28677f66e5d9" translate="yes" xml:space="preserve">
          <source>So when a commit is marked as &quot;bad&quot; we know we can remove all the commits in the graph except those that are ancestors of the new &quot;bad&quot; commit. This means that:</source>
          <target state="translated">つまり、あるコミットが「悪い」とマークされたとき、新しい「悪い」コミットの祖先であるコミットを除いて、グラフ上のすべてのコミットを削除することができるということです。これは以下のことを意味します。</target>
        </trans-unit>
        <trans-unit id="2ab9a98e063e3527611545f584f2c39a22096906" translate="yes" xml:space="preserve">
          <source>So, look into &lt;code&gt;builtin/cat-file.c&lt;/code&gt;, search for &lt;code&gt;cmd_cat_file()&lt;/code&gt; and look what it does.</source>
          <target state="translated">そのため、 &lt;code&gt;builtin/cat-file.c&lt;/code&gt; &lt;code&gt;cmd_cat_file()&lt;/code&gt; を調べ、cmd_cat_file（）を検索して、それが何をするかを確認します。</target>
        </trans-unit>
        <trans-unit id="190b1ee6ab5b81f82f0d76cf355df1a21f43d2e3" translate="yes" xml:space="preserve">
          <source>So, think about something which you are interested in, say, &quot;how can I access a blob just knowing the object name of it?&quot;. The first step is to find a Git command with which you can do it. In this example, it is either &lt;code&gt;git show&lt;/code&gt; or &lt;code&gt;git cat-file&lt;/code&gt;.</source>
          <target state="translated">それで、たとえば、「オブジェクト名を知っているだけでblobにアクセスするにはどうすればよいですか？」など、興味のあることを考えてください。最初のステップは、それを実行できるGitコマンドを見つけることです。この例では、それは &lt;code&gt;git show&lt;/code&gt; または &lt;code&gt;git cat-file&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1efaef427fd5b515b3e304fc27457e91eec84a25" translate="yes" xml:space="preserve">
          <source>So, we can use somebody else&amp;rsquo;s work from a remote repository, but how can &lt;strong&gt;you&lt;/strong&gt; prepare a repository to let other people pull from it?</source>
          <target state="translated">それで、リモートリポジトリから他の誰かの作業を使用できますが、他の人がそこからプルできるようにリポジトリを準備するにはどうすればよい&lt;strong&gt;です&lt;/strong&gt;か？</target>
        </trans-unit>
        <trans-unit id="1d69dd0a510947edc4fb12eee97c080f4a377f68" translate="yes" xml:space="preserve">
          <source>Software bugs, or errors, are so prevalent and so detrimental that they cost the U.S. economy an estimated $59.5 billion annually, or about 0.6 percent of the gross domestic product, according to a newly released study commissioned by the Department of Commerce&amp;rsquo;s National Institute of Standards and Technology (NIST). At the national level, over half of the costs are borne by software users and the remainder by software developers/vendors. The study also found that, although all errors cannot be removed, more than a third of these costs, or an estimated $22.2 billion, could be eliminated by an improved testing infrastructure that enables earlier and more effective identification and removal of software defects. These are the savings associated with finding an increased percentage (but not 100 percent) of errors closer to the development stages in which they are introduced. Currently, over half of all errors are not found until &quot;downstream&quot; in the development process or during post-sale software use.</source>
          <target state="translated">商務省の国立標準研究所が委託した新たに発表された調査によると、ソフトウェアのバグまたはエラーは非常に蔓延しており、米国経済に年間推定595億ドル、または国内総生産の約0.6％のコストがかかるほど有害ですとテクノロジー（NIST）。国レベルでは、コストの半分以上はソフトウェアユーザーが負担し、残りはソフトウェア開発者/ベンダーが負担します。この調査では、すべてのエラーを取り除くことはできませんが、これらのコストの3分の1、つまり推定222億ドルを、ソフトウェアの欠陥をより効果的かつ早期に特定して取り除くことができる改良されたテストインフラストラクチャによって排除できることもわかりました。これらは、エラーが導入された開発段階に近いエラーの増加したパーセンテージ（100％ではない）を見つけることに関連する節約です。現在、すべてのエラーの半分以上は、開発プロセスの「ダウンストリーム」または販売後のソフトウェアの使用中に見つかるまで見つかりません。</target>
        </trans-unit>
        <trans-unit id="f90a777e081dbed9d193d82399cc2e3159bf44a3" translate="yes" xml:space="preserve">
          <source>Software developers already spend approximately 80 percent of development costs on identifying and correcting defects, and yet few products of any type other than software are shipped with such high levels of errors.</source>
          <target state="translated">ソフトウェア開発者は、すでに開発コストの約80%を欠陥の特定と修正に費やしていますが、ソフトウェア以外のどのタイプの製品でも、このような高いレベルのエラーを抱えて出荷されているものはほとんどありません。</target>
        </trans-unit>
        <trans-unit id="b27e803e858c897a720eecea15e5bd37677e07bf" translate="yes" xml:space="preserve">
          <source>Some Git commands take options that are only used for plumbing or that are deprecated, and such options are hidden from the default usage. This option gives the full list of options.</source>
          <target state="translated">Git コマンドの中には、配管にしか使われていないオプションや非推奨のオプションを取るものがあり、そのようなオプションはデフォルトの使用法から隠されています。このオプションは、オプションの完全なリストを表示します。</target>
        </trans-unit>
        <trans-unit id="987ad55498ef51019e6595f32f9ee9a10fb74d21" translate="yes" xml:space="preserve">
          <source>Some actions require or allow to specify two revisions, and sometimes even two pathnames. In most general form such path_info (component) based gitweb URL looks like this:</source>
          <target state="translated">アクションによっては、ふたつのリビジョンを指定する必要があったり、許可したりするものもあります。最も一般的な形では、path_info (component)ベースの gitweb URL は次のようになります。</target>
        </trans-unit>
        <trans-unit id="4e1994dd201b175192ea5080be05071ba824a420" translate="yes" xml:space="preserve">
          <source>Some atoms like %(align) and %(if) always require a matching %(end). We call them &quot;opening atoms&quot; and sometimes denote them as %($open).</source>
          <target state="translated">(align)や %(if)のようないくつかのアトムは、常に一致する %(end)を必要とします。これらを &quot;オープニング・アトム&quot; と呼び、%($open)と表記することもあります。</target>
        </trans-unit>
        <trans-unit id="b05a87bd0e5e1c61140759ab02c7e9f3bf4a2773" translate="yes" xml:space="preserve">
          <source>Some basic familiarity with Git is required. Having gone through &lt;a href=&quot;gittutorial&quot;&gt;gittutorial[7]&lt;/a&gt; and &lt;a href=&quot;gitglossary&quot;&gt;gitglossary[7]&lt;/a&gt; should be sufficient.</source>
          <target state="translated">Gitの基本的な知識が必要です。経た&lt;a href=&quot;gittutorial&quot;&gt;gittutorial [7]&lt;/a&gt;と&lt;a href=&quot;gitglossary&quot;&gt;gitglossary [7]&lt;/a&gt;十分なものでなければなりません。</target>
        </trans-unit>
        <trans-unit id="61fa4c6dc6ae1d559b0a8be1b0de50848c850d66" translate="yes" xml:space="preserve">
          <source>Some changes are so trivial that it is not necessary to create a separate branch and then merge into each of the test and release branches. For these changes, just apply directly to the &lt;code&gt;release&lt;/code&gt; branch, and then merge that into the &lt;code&gt;test&lt;/code&gt; branch.</source>
          <target state="translated">一部の変更は非常に簡単なので、個別のブランチを作成してから、テストブランチとリリースブランチのそれぞれにマージする必要はありません。これらの変更については、 &lt;code&gt;release&lt;/code&gt; ブランチに直接適用し、それを &lt;code&gt;test&lt;/code&gt; ブランチにマージします。</target>
        </trans-unit>
        <trans-unit id="59b18808ec08d9ea8408e805bbd7fa2f7edcfa73" translate="yes" xml:space="preserve">
          <source>Some commands (e.g. svn and http interfaces) that interactively ask for a password can be told to use an external program given via the value of this variable. Can be overridden by the &lt;code&gt;GIT_ASKPASS&lt;/code&gt; environment variable. If not set, fall back to the value of the &lt;code&gt;SSH_ASKPASS&lt;/code&gt; environment variable or, failing that, a simple password prompt. The external program shall be given a suitable prompt as command-line argument and write the password on its STDOUT.</source>
          <target state="translated">パスワードを対話的に要求するいくつかのコマンド（svnやhttpインターフェースなど）は、この変数の値を介して与えられた外部プログラムを使用するように指示できます。 &lt;code&gt;GIT_ASKPASS&lt;/code&gt; 環境変数によってオーバーライドできます。設定されていない場合は、 &lt;code&gt;SSH_ASKPASS&lt;/code&gt; 環境変数の値にフォールバックするか、失敗した場合は単純なパスワードプロンプトを表示します。外部プログラムには、コマンドライン引数として適切なプロンプトが与えられ、そのSTDOUTにパスワードが書き込まれます。</target>
        </trans-unit>
        <trans-unit id="c2234711ff3c27c62e0fc4ab53a0833622d8f13d" translate="yes" xml:space="preserve">
          <source>Some configuration variables control the way the &lt;code&gt;--trailer&lt;/code&gt; arguments are applied to each commit message and the way any existing trailer in the commit message is changed. They also make it possible to automatically add some trailers.</source>
          <target state="translated">一部の構成変数は、 &lt;code&gt;--trailer&lt;/code&gt; 引数が各コミットメッセージに適用される方法と、コミットメッセージ内の既存のトレーラーが変更される方法を制御します。また、一部のトレーラーを自動的に追加することもできます。</target>
        </trans-unit>
        <trans-unit id="938be1fd3d7f894aaa8fcd897f4e95cd6aacc1b6" translate="yes" xml:space="preserve">
          <source>Some configuration variables have their default values (embedded in the CGI script) set during building gitweb &amp;mdash; if that is the case, this fact is put in their description. See gitweb&amp;rsquo;s &lt;code&gt;INSTALL&lt;/code&gt; file for instructions on building and installing gitweb.</source>
          <target state="translated">一部の構成変数には、gitwebのビルド中にデフォルト値（CGIスクリプトに埋め込まれている）が設定されています&amp;mdash;その場合、このことは説明に記載されています。gitwebのビルドとインストールの手順については、gitwebの &lt;code&gt;INSTALL&lt;/code&gt; ファイルを参照してください。</target>
        </trans-unit>
        <trans-unit id="0d66e22fd5f2bbbc188c5b064782bc9e186f6b28" translate="yes" xml:space="preserve">
          <source>Some email servers (e.g. smtp.163.com) limit the number emails to be sent per session (connection) and this will lead to a failure when sending many messages. With this option, send-email will disconnect after sending $&amp;lt;num&amp;gt; messages and wait for a few seconds (see --relogin-delay) and reconnect, to work around such a limit. You may want to use some form of credential helper to avoid having to retype your password every time this happens. Defaults to the &lt;code&gt;sendemail.smtpBatchSize&lt;/code&gt; configuration variable.</source>
          <target state="translated">一部の電子メールサーバー（たとえば、smtp.163.com）は、セッション（接続）ごとに送信される電子メールの数を制限します。これにより、多くのメッセージを送信するときにエラーが発生します。このオプションを使用すると、send-emailは$ &amp;lt;num&amp;gt;メッセージの送信後に切断し、数秒待って（--relogin-delayを参照）、再接続して、このような制限を回避します。これが発生するたびにパスワードを再入力する必要がないように、何らかの形式の資格情報ヘルパーを使用することをお勧めします。デフォルトは &lt;code&gt;sendemail.smtpBatchSize&lt;/code&gt; 構成変数です。</target>
        </trans-unit>
        <trans-unit id="92168eb294cb53195c326d7cdc472c76b820a62e" translate="yes" xml:space="preserve">
          <source>Some features cannot be overridden per project. For those features the structure of appropriate &lt;code&gt;%feature&lt;/code&gt; hash element has a simpler form:</source>
          <target state="translated">一部の機能はプロジェクトごとにオーバーライドできません。これらの機能の場合、適切な &lt;code&gt;%feature&lt;/code&gt; ハッシュ要素の構造はより単純な形式になります。</target>
        </trans-unit>
        <trans-unit id="7345fdef7f54471f79d673ac02c80817717e5d21" translate="yes" xml:space="preserve">
          <source>Some filesystems lose the executable bit when a file that is marked as executable is checked out, or checks out a non-executable file with executable bit on. &lt;a href=&quot;git-clone&quot;&gt;git-clone[1]&lt;/a&gt; or &lt;a href=&quot;git-init&quot;&gt;git-init[1]&lt;/a&gt; probe the filesystem to see if it handles the executable bit correctly and this variable is automatically set as necessary.</source>
          <target state="translated">一部のファイルシステムでは、実行可能としてマークされているファイルがチェックアウトされるか、実行可能ビットがオンになっている非実行可能ファイルをチェックアウトすると、実行可能ビットが失われます。&lt;a href=&quot;git-clone&quot;&gt;git-clone [1]&lt;/a&gt;または&lt;a href=&quot;git-init&quot;&gt;git-init [1]&lt;/a&gt;は、ファイルシステムを調べて、実行可能ビットを正しく処理し、この変数が必要に応じて自動的に設定されるかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="1c65f795a263fd4e4ffc8fd7edc082e1bb01009b" translate="yes" xml:space="preserve">
          <source>Some filters will generate empty commits that leave the tree untouched. This option instructs git-filter-branch to remove such commits if they have exactly one or zero non-pruned parents; merge commits will therefore remain intact. This option cannot be used together with &lt;code&gt;--commit-filter&lt;/code&gt;, though the same effect can be achieved by using the provided &lt;code&gt;git_commit_non_empty_tree&lt;/code&gt; function in a commit filter.</source>
          <target state="translated">一部のフィルターは、ツリーをそのままにしておく空のコミットを生成します。このオプションは、git-filter-branchに、剪定されていない親が1つまたはゼロの場合にそのようなコミットを削除するように指示します。したがって、マージコミットはそのまま残ります。このオプションを &lt;code&gt;--commit-filter&lt;/code&gt; と一緒に使用することはできませんが、コミットフィルターで提供されている &lt;code&gt;git_commit_non_empty_tree&lt;/code&gt; 関数を使用することで同じ効果を得ることができます。</target>
        </trans-unit>
        <trans-unit id="172ca906089028fc890c646e25bab698db638084" translate="yes" xml:space="preserve">
          <source>Some functions have a &lt;code&gt;_fl()&lt;/code&gt; suffix to indicate that they take &lt;code&gt;file&lt;/code&gt; and &lt;code&gt;line-number&lt;/code&gt; arguments.</source>
          <target state="translated">一部の関数には、 &lt;code&gt;file&lt;/code&gt; と &lt;code&gt;line-number&lt;/code&gt; 引数を取ることを示す &lt;code&gt;_fl()&lt;/code&gt; サフィックスがあります。</target>
        </trans-unit>
        <trans-unit id="cf5b41401ecbf41c583b9f31bc11f9978bf853cb" translate="yes" xml:space="preserve">
          <source>Some functions have a &lt;code&gt;_printf_fl()&lt;/code&gt; suffix to indicate that they also take a varargs argument.</source>
          <target state="translated">一部の関数には、varargs引数も受け取ることを示す &lt;code&gt;_printf_fl()&lt;/code&gt; サフィックスがあります。</target>
        </trans-unit>
        <trans-unit id="c20fab9f2e759692fa04bbce7cef5cc908557231" translate="yes" xml:space="preserve">
          <source>Some functions have a &lt;code&gt;_va_fl()&lt;/code&gt; suffix to indicate that they also take a &lt;code&gt;va_list&lt;/code&gt; argument.</source>
          <target state="translated">一部の関数には、 &lt;code&gt;va_list&lt;/code&gt; 引数も受け取ることを示す &lt;code&gt;_va_fl()&lt;/code&gt; サフィックスがあります。</target>
        </trans-unit>
        <trans-unit id="eba90c7cd2e8efb76a00a6ef6fd10ba0e6c2d355" translate="yes" xml:space="preserve">
          <source>Some improvements to the algorithms inside &quot;git bisect&quot; are possible and some new features could help in some cases, but overall &quot;git bisect&quot; works already very well, is used a lot, and is already very useful. To back up that last claim, let&amp;rsquo;s give the final word to Ingo Molnar when he was asked by the author how much time does he think &quot;git bisect&quot; saves him when he uses it:</source>
          <target state="translated">「git bisect」内のアルゴリズムにはいくつかの改善が可能であり、いくつかの新機能が役立つ場合もありますが、全体的な「git bisect」はすでに非常にうまく機能しており、多く使用されており、すでに非常に便利です。最後の主張を裏付けるために、著者から「git bisect」を使用することでどれだけの時間を節約できると彼が尋ねたときに、Ingo Molnarに最後の言葉を与えましょう。</target>
        </trans-unit>
        <trans-unit id="051a4238025a126fd35cea3d27808e1a33c19d81" translate="yes" xml:space="preserve">
          <source>Some key/value pairs are common to all events and some are event-specific.</source>
          <target state="translated">キーと値のペアの中には、すべてのイベントに共通するものと、イベント固有のものがあります。</target>
        </trans-unit>
        <trans-unit id="171887e25dc7a6bd359791fb5478731797724aa1" translate="yes" xml:space="preserve">
          <source>Some malformed strings may be accepted as valid dates. In some of these cases Git will still be able to obtain the correct date from the malformed string. There are also some types of malformed strings which Git will parse wrong, and yet consider valid. Seriously malformed strings will be rejected.</source>
          <target state="translated">不正な文字列の中には、有効な日付として受け入れられるものもあります。このような場合でも、Git は不正な文字列から正しい日付を取得することができます。また、不正な文字列の中には、Git が誤って解析しても有効だと判断するものもあります。真面目に不正な文字列は却下されます。</target>
        </trans-unit>
        <trans-unit id="783d5fee630f867a836aab31a09a1120dfa61932" translate="yes" xml:space="preserve">
          <source>Some more interesting work has been done in the upstream project, and &lt;code&gt;origin&lt;/code&gt; has advanced:</source>
          <target state="translated">アップストリームプロジェクトでさらに興味深い作業が行われ、 &lt;code&gt;origin&lt;/code&gt; が進んでいます。</target>
        </trans-unit>
        <trans-unit id="f3d95fe16308405a40d9c1590f99de534764e169" translate="yes" xml:space="preserve">
          <source>Some old repositories have tags without a tagger. The fast-import protocol was pretty strict about that, and did not allow that. So fake a tagger to be able to fast-import the output.</source>
          <target state="translated">古いリポジトリの中には、タガーなしでタグを持っているものがあります。fast-importプロトコルはそれについてかなり厳しく、それを許可していませんでした。そこで、出力を高速インポートできるようにタガーを偽装します。</target>
        </trans-unit>
        <trans-unit id="5f1322ce775635ebc0b366d585bc7dbdc07c75d2" translate="yes" xml:space="preserve">
          <source>Some optional features and policies</source>
          <target state="translated">いくつかのオプション機能とポリシー</target>
        </trans-unit>
        <trans-unit id="184f39eeceeacf637176614462d419ff5408c775" translate="yes" xml:space="preserve">
          <source>Some other SCM systems let the user create a tag from multiple files which are not from the same commit/changeset. Or to create tags which are a subset of the files available in the repository.</source>
          <target state="translated">他のSCMシステムでは、同じコミット/チェンジセットからではない複数のファイルからタグを作成することができます。また、リポジトリで利用可能なファイルのサブセットからタグを作成することもできます。</target>
        </trans-unit>
        <trans-unit id="e0986df979670ad50493b8dd4aeecf085f900c18" translate="yes" xml:space="preserve">
          <source>Some other commands that also work on files in the working tree and/or in the index can take &lt;code&gt;--staged&lt;/code&gt; and/or &lt;code&gt;--worktree&lt;/code&gt;.</source>
          <target state="translated">作業ツリー内および/またはインデックス内のファイルでも機能する他のいくつかのコマンドは、-- &lt;code&gt;--staged&lt;/code&gt; および/または &lt;code&gt;--worktree&lt;/code&gt; を取ることができます。</target>
        </trans-unit>
        <trans-unit id="5e825ac68d84922615f20a915d3c1eb9e9c71680" translate="yes" xml:space="preserve">
          <source>Some placeholders may depend on other options given to the revision traversal engine. For example, the &lt;code&gt;%g*&lt;/code&gt; reflog options will insert an empty string unless we are traversing reflog entries (e.g., by &lt;code&gt;git log -g&lt;/code&gt;). The &lt;code&gt;%d&lt;/code&gt; and &lt;code&gt;%D&lt;/code&gt; placeholders will use the &quot;short&quot; decoration format if &lt;code&gt;--decorate&lt;/code&gt; was not already provided on the command line.</source>
          <target state="translated">一部のプレースホルダーは、リビジョントラバーサルエンジンに与えられた他のオプションに依存している場合があります。たとえば、 &lt;code&gt;%g*&lt;/code&gt; log * reflogオプションは、reflogエントリをトラバースしない限り（たとえば、 &lt;code&gt;git log -g&lt;/code&gt; によって）、空の文字列を挿入します。 &lt;code&gt;%d&lt;/code&gt; と &lt;code&gt;%D&lt;/code&gt; プレースホルダ場合は「短い」の装飾形式を使用します &lt;code&gt;--decorate&lt;/code&gt; が既にコマンドラインで提供されていませんでした。</target>
        </trans-unit>
        <trans-unit id="b90f1a06edbdea1cb1ea924bb534bf207be4c8cd" translate="yes" xml:space="preserve">
          <source>Some special diff options allow diffing the working directory against any of these stages:</source>
          <target state="translated">いくつかの特別な diff オプションでは、これらのステージのいずれかに対して作業ディレクトリを diff することができます。</target>
        </trans-unit>
        <trans-unit id="379a99bc56f81a74676a3582df5345ad077361ae" translate="yes" xml:space="preserve">
          <source>Some workflows require that one or more branches of development on one machine be replicated on another machine, but the two machines cannot be directly connected, and therefore the interactive Git protocols (git, ssh, http) cannot be used.</source>
          <target state="translated">ワークフローによっては、1台のマシン上で1つ以上の開発ブランチを別のマシン上で複製する必要がありますが、2台のマシンを直接接続することはできないので、インタラクティブな Git プロトコル (git,ssh,http)を使うことはできません。</target>
        </trans-unit>
        <trans-unit id="4efa70b7553b32aea10bdaaf89e5cdb60eb1465e" translate="yes" xml:space="preserve">
          <source>Somebody asks you to pull, and the changes sound worthy of merging.</source>
          <target state="translated">誰かがあなたに引っ張ってくれと頼まれて、その変更は合併する価値があるように聞こえる。</target>
        </trans-unit>
        <trans-unit id="75bb6efa7b5bca1608dd13b1f00b4537d22f7537" translate="yes" xml:space="preserve">
          <source>Somebody hands you a copy of a file, and asks which commits modified a file such that it contained the given content either before or after the commit. You can find out with this:</source>
          <target state="translated">誰かがあなたにファイルのコピーを渡して、どのコミットがコミットの前か後かに与えられた内容を含むようにファイルを変更したかを尋ねてきます。これで調べることができます。</target>
        </trans-unit>
        <trans-unit id="7ef51555538cdc5f80247933eec8146e7de62402" translate="yes" xml:space="preserve">
          <source>Someone can do a history rewrite, realize they messed up, restore from the backups in refs/original/, and then redo their git-filter-branch command. (The backup in refs/original/ is not a real backup; it dereferences tags first.)</source>
          <target state="translated">履歴の書き換えをして、失敗したことに気づいて refs/original/のバックアップからリストアして、git-filter-branch コマンドをやり直すことができる人がいるかもしれません。(refs/original/のバックアップは本当のバックアップではありません。)</target>
        </trans-unit>
        <trans-unit id="8b7568eaac49251d7ecfa53edc4f2d50e2427376" translate="yes" xml:space="preserve">
          <source>Someone can have a set of &quot;working and tested filters&quot; which they document or provide to a coworker, who then runs them on a different OS where the same commands are not working/tested (some examples in the git-filter-branch manpage are also affected by this). BSD vs. GNU userland differences can really bite. If lucky, error messages are spewed. But just as likely, the commands either don&amp;rsquo;t do the filtering requested, or silently corrupt by making some unwanted change. The unwanted change may only affect a few commits, so it&amp;rsquo;s not necessarily obvious either. (The fact that problems won&amp;rsquo;t necessarily be obvious means they are likely to go unnoticed until the rewritten history is in use for quite a while, at which point it&amp;rsquo;s really hard to justify another flag-day for another rewrite.)</source>
          <target state="translated">誰かがドキュメント化したり、同僚に提供した一連の「動作およびテスト済みフィルター」を持つことができ、同じコマンドが動作/テストされていない別のOSでそれらを実行します（git-filter-branchのマンページの例には、これも影響を受けます）。 BSDとGNUのユーザーランドの違いは実際にかみ合う可能性があります。運がよければ、エラーメッセージが表示されます。しかし、可能性としては、コマンドが要求されたフィルタリングを実行しないか、不要な変更を加えることによってサイレントに破損します。不要な変更は少数のコミットにのみ影響を与える可能性があるため、必ずしも明らかではありません。 （問題が必ずしも明白ではないという事実は、書き換えられた履歴がしばらく使用されるまで気付かれない可能性が高いことを意味します。その時点で、別の書き換えのために別のフラグ日を正当化することは本当に困難です。）</target>
        </trans-unit>
        <trans-unit id="f6f28be0bc03c39873befbc10c61feb3cd6f09d9" translate="yes" xml:space="preserve">
          <source>Sometime later when enough time has passed and testing done, you can pull the same branch into the &lt;code&gt;release&lt;/code&gt; tree ready to go upstream. This is where you see the value of keeping each patch (or patch series) in its own branch. It means that the patches can be moved into the &lt;code&gt;release&lt;/code&gt; tree in any order.</source>
          <target state="translated">しばらくして十分な時間が経過し、テストが完了したら、同じブランチを &lt;code&gt;release&lt;/code&gt; ツリーにプルして、アップストリームに進む準備ができています。ここで、各パッチ（またはパッチシリーズ）を独自のブランチに保持することの価値を確認できます。つまり、パッチは任意の順序で &lt;code&gt;release&lt;/code&gt; ツリーに移動できます。</target>
        </trans-unit>
        <trans-unit id="f3de282e58de418da244c9ed4c8dec9bb8a8937a" translate="yes" xml:space="preserve">
          <source>Sometimes it happens that the current state cannot be tested, for example if it does not compile because there was a bug preventing it at that time. This is what the special exit code 125 is for. It tells &quot;git bisect run&quot; that the current commit should be marked as untestable and that another one should be chosen and checked out.</source>
          <target state="translated">その時にバグがあってコンパイルできなかったなど、現在の状態をテストできないことが時々あります。これが、特別な終了コード 125 です。これは &quot;git bisect run&quot; に、現在のコミットをテスト不可能とマークし、別のコミットを選択してチェックアウトするよう指示します。</target>
        </trans-unit>
        <trans-unit id="ab0983c0f5d9e7bd28c3834685713747f93c2919" translate="yes" xml:space="preserve">
          <source>Sometimes it is desirable to see the diff of a text-converted version of some binary files. For example, a word processor document can be converted to an ASCII text representation, and the diff of the text shown. Even though this conversion loses some information, the resulting diff is useful for human viewing (but cannot be applied directly).</source>
          <target state="translated">いくつかのバイナリファイルのテキスト変換されたバージョンのdiffを見ることが望ましい場合があります。例えば、ワープロ文書をASCIIテキスト表現に変換し、表示されたテキストの差分を見ることができます。この変換ではいくつかの情報が失われますが、結果として得られる差分は人間が見るのに便利です(ただし、直接適用することはできません)。</target>
        </trans-unit>
        <trans-unit id="a66c6ccc61eb22dbd8fb180270521a352bb26eb7" translate="yes" xml:space="preserve">
          <source>Sometimes the thing fixed in b.2. cannot be amended to the not-quite perfect commit it fixes, because that commit is buried deeply in a patch series. That is exactly what interactive rebase is for: use it after plenty of &quot;a&quot;s and &quot;b&quot;s, by rearranging and editing commits, and squashing multiple commits into one.</source>
          <target state="translated">b.2.で修正したものを、それが修正した完全ではないコミットに修正できないことがあります。インタラクティブリベースはまさにそのためにあるのです:たくさんの &quot;a&quot; や &quot;b&quot; を修正した後に、コミットを並べ替えたり編集したり、複数のコミットを一つにまとめたりすることで、この機能を使います。</target>
        </trans-unit>
        <trans-unit id="7d8c42c4820860471a909b97a129a9232304c94a" translate="yes" xml:space="preserve">
          <source>Sometimes what you want instead is a set of patches; for this you can use &lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch[1]&lt;/a&gt;:</source>
          <target state="translated">代わりに、一連のパッチが必要な場合があります。これには&lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch [1]を&lt;/a&gt;使用できます。</target>
        </trans-unit>
        <trans-unit id="abb396ee2420ccad29c3b6a0f48213b60cfe8e4f" translate="yes" xml:space="preserve">
          <source>Sometimes you are not looking for the commit that introduced a breakage, but rather for a commit that caused a change between some other &quot;old&quot; state and &quot;new&quot; state. For example, you might be looking for the commit that introduced a particular fix. Or you might be looking for the first commit in which the source-code filenames were finally all converted to your company&amp;rsquo;s naming standard. Or whatever.</source>
          <target state="translated">場合によっては、破損を引き起こしたコミットではなく、他の「古い」状態と「新しい」状態の間に変化を引き起こしたコミットを探していることがあります。たとえば、特定の修正を導入したコミットを探している場合があります。または、ソースコードのファイル名が最終的にすべて会社の命名基準に変換された最初のコミットを探しているかもしれません。または何でも。</target>
        </trans-unit>
        <trans-unit id="709d16fb784b306222cc9b75f2da6965fd037ce9" translate="yes" xml:space="preserve">
          <source>Sometimes you are only interested in parts of the history, for example the commits modifying a particular &amp;lt;path&amp;gt;. But there are two parts of &lt;code&gt;History Simplification&lt;/code&gt;, one part is selecting the commits and the other is how to do it, as there are various strategies to simplify the history.</source>
          <target state="translated">たとえば、特定の&amp;lt;path&amp;gt;を変更するコミットなど、履歴の一部のみに関心がある場合があります。しかし、そこの2つの部分です &lt;code&gt;History Simplification&lt;/code&gt; 、一部のコミットを選択しているが、他方は歴史を簡素化する様々な戦略があるので、それを行う方法です。</target>
        </trans-unit>
        <trans-unit id="3329bd14db714a1ebe54846da15c65686d4c297b" translate="yes" xml:space="preserve">
          <source>Sometimes you may wish to create a new branch &lt;code&gt;without&lt;/code&gt; actually checking it out and switching to it. If so, just use the command</source>
          <target state="translated">実際にチェックアウトして切り替え &lt;code&gt;without&lt;/code&gt; に、新しいブランチを作成したい場合があります。その場合は、次のコマンドを使用してください</target>
        </trans-unit>
        <trans-unit id="9e0d77cc540587abb285618787352fd870a1def8" translate="yes" xml:space="preserve">
          <source>Sometimes you want to edit a commit deeper in your history. One approach is to use &lt;code&gt;git format-patch&lt;/code&gt; to create a series of patches and then reset the state to before the patches:</source>
          <target state="translated">場合によっては、履歴のより深いコミットを編集したいことがあります。1つのアプローチは、 &lt;code&gt;git format-patch&lt;/code&gt; を使用して一連のパッチを作成し、パッチの前の状態にリセットすることです。</target>
        </trans-unit>
        <trans-unit id="17cc71829facf5cb6a6b321a2cbf6c64d2bc06da" translate="yes" xml:space="preserve">
          <source>Sometimes you would need to override a setting of an attribute for a path to &lt;code&gt;Unspecified&lt;/code&gt; state. This can be done by listing the name of the attribute prefixed with an exclamation point &lt;code&gt;!&lt;/code&gt;.</source>
          <target state="translated">場合によっては、パスの属性の設定を未 &lt;code&gt;Unspecified&lt;/code&gt; 状態にオーバーライドする必要があります。これは、感嘆符が前に付いた属性の名前をリストすることで実行できます &lt;code&gt;!&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="18f66cee3089e3b2788a7d42c7fbfe71e8e6eab6" translate="yes" xml:space="preserve">
          <source>Sometimes, more than one builtin is contained in one source file. For example, &lt;code&gt;cmd_whatchanged()&lt;/code&gt; and &lt;code&gt;cmd_log()&lt;/code&gt; both reside in &lt;code&gt;builtin/log.c&lt;/code&gt;, since they share quite a bit of code. In that case, the commands which are &lt;code&gt;not&lt;/code&gt; named like the &lt;code&gt;.c&lt;/code&gt; file in which they live have to be listed in &lt;code&gt;BUILT_INS&lt;/code&gt; in the &lt;code&gt;Makefile&lt;/code&gt;.</source>
          <target state="translated">1つのソースファイルに複数の組み込みが含まれている場合があります。たとえば、 &lt;code&gt;cmd_whatchanged()&lt;/code&gt; と &lt;code&gt;cmd_log()&lt;/code&gt; は、かなりのコードを共有しているため、どちらも &lt;code&gt;builtin/log.c&lt;/code&gt; にあります。その場合、それらが &lt;code&gt;not&lt;/code&gt; する &lt;code&gt;.c&lt;/code&gt; ファイルのように名前が付けられていないコマンドは、 &lt;code&gt;Makefile&lt;/code&gt; の &lt;code&gt;BUILT_INS&lt;/code&gt; にリストされている必要があります。</target>
        </trans-unit>
        <trans-unit id="59356e5b6f2fcc25a08169f8960c8b579beeb31f" translate="yes" xml:space="preserve">
          <source>Sometimes, you do not know where to look for a feature. In many such cases, it helps to search through the output of &lt;code&gt;git log&lt;/code&gt;, and then &lt;code&gt;git show&lt;/code&gt; the corresponding commit.</source>
          <target state="translated">機能を探す場所がわからない場合があります。そのような多くの場合、 &lt;code&gt;git log&lt;/code&gt; の出力を検索してから、対応するコミットを &lt;code&gt;git show&lt;/code&gt; すると役立ちます。</target>
        </trans-unit>
        <trans-unit id="94a8d6cf12f26243dde0f5140dd4760ee8881bb4" translate="yes" xml:space="preserve">
          <source>Sort based on the key given. Prefix &lt;code&gt;-&lt;/code&gt; to sort in descending order of the value. Supports &quot;version:refname&quot; or &quot;v:refname&quot; (tag names are treated as versions). The &quot;version:refname&quot; sort order can also be affected by the &quot;versionsort.suffix&quot; configuration variable. See &lt;a href=&quot;git-for-each-ref&quot;&gt;git-for-each-ref[1]&lt;/a&gt; for more sort options, but be aware keys like &lt;code&gt;committerdate&lt;/code&gt; that require access to the objects themselves will not work for refs whose objects have not yet been fetched from the remote, and will give a &lt;code&gt;missing object&lt;/code&gt; error.</source>
          <target state="translated">指定されたキーに基づいてソートします。接頭辞 &lt;code&gt;-&lt;/code&gt; 値の降順でソートします。 &quot;version：refname&quot;または &quot;v：refname&quot;をサポートします（タグ名はバージョンとして扱われます）。 「version：refname」のソート順は、「versionsort.suffix」構成変数の影響を受ける場合もあります。その他の並べ替えオプションについては&lt;a href=&quot;git-for-each-ref&quot;&gt;git-for-each-ref [1]&lt;/a&gt;を参照してください。ただし、オブジェクト自体へのアクセスを必要とする &lt;code&gt;committerdate&lt;/code&gt; などのキーは、オブジェクトがまだリモートからフェッチされていない参照には機能せず、 &lt;code&gt;missing object&lt;/code&gt; エラー。</target>
        </trans-unit>
        <trans-unit id="4f8164295fbfdf007f932844e4ac7576dc2d1ee2" translate="yes" xml:space="preserve">
          <source>Sort based on the key given. Prefix &lt;code&gt;-&lt;/code&gt; to sort in descending order of the value. You may use the --sort=&amp;lt;key&amp;gt; option multiple times, in which case the last key becomes the primary key. Also supports &quot;version:refname&quot; or &quot;v:refname&quot; (tag names are treated as versions). The &quot;version:refname&quot; sort order can also be affected by the &quot;versionsort.suffix&quot; configuration variable. The keys supported are the same as those in &lt;code&gt;git for-each-ref&lt;/code&gt;. Sort order defaults to the value configured for the &lt;code&gt;tag.sort&lt;/code&gt; variable if it exists, or lexicographic order otherwise. See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">指定されたキーに基づいてソートします。接頭辞 &lt;code&gt;-&lt;/code&gt; 値の降順でソートします。 --sort = &amp;lt;key&amp;gt;オプションを複数回使用できます。その場合、最後のキーが主キーになります。 「version：refname」または「v：refname」もサポートします（タグ名はバージョンとして扱われます）。 「version：refname」のソート順は、「versionsort.suffix」構成変数の影響を受ける場合もあります。サポートされるキーは &lt;code&gt;git for-each-ref&lt;/code&gt; のものと同じです。ソート順は、デフォルトで &lt;code&gt;tag.sort&lt;/code&gt; 変数に構成されている値に設定されます（存在する場合）。&lt;a href=&quot;git-config&quot;&gt;git-config [1]を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="235c15477db9421be496a9bdb61ee9fe5440e8e8" translate="yes" xml:space="preserve">
          <source>Sort based on the key given. Prefix &lt;code&gt;-&lt;/code&gt; to sort in descending order of the value. You may use the --sort=&amp;lt;key&amp;gt; option multiple times, in which case the last key becomes the primary key. The keys supported are the same as those in &lt;code&gt;git
for-each-ref&lt;/code&gt;. Sort order defaults to the value configured for the &lt;code&gt;branch.sort&lt;/code&gt; variable if exists, or to sorting based on the full refname (including &lt;code&gt;refs/...&lt;/code&gt; prefix). This lists detached HEAD (if present) first, then local branches and finally remote-tracking branches. See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">指定されたキーに基づいてソートします。接頭辞 &lt;code&gt;-&lt;/code&gt; 値の降順でソートします。 --sort = &amp;lt;key&amp;gt;オプションを複数回使用できます。その場合、最後のキーが主キーになります。サポートされるキーは &lt;code&gt;git for-each-ref&lt;/code&gt; ものと同じです。ソート順のデフォルトは、存在する場合は &lt;code&gt;branch.sort&lt;/code&gt; 変数に設定された値、または完全なrefname（ &lt;code&gt;refs/...&lt;/code&gt; プレフィックスを含む）に基づくソートになります。これは、デタッチされたHEAD（存在する場合）を最初にリストし、次にローカルブランチ、最後にリモート追跡ブランチをリストします。&lt;a href=&quot;git-config&quot;&gt;git-config [1]を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="5f1523e64bd22fd24a21f855bbd22c50e1efc550" translate="yes" xml:space="preserve">
          <source>Sort commits by date when possible.</source>
          <target state="translated">可能であればコミットを日付順に並べ替えます。</target>
        </trans-unit>
        <trans-unit id="2c6b9826784b28663433b0a6dc2f2674e6b29a9a" translate="yes" xml:space="preserve">
          <source>Sort output according to the number of commits per author instead of author alphabetic order.</source>
          <target state="translated">著者のアルファベット順ではなく、著者ごとのコミット数に応じて出力をソートします。</target>
        </trans-unit>
        <trans-unit id="97d057704ff7369f19e3dfc333c10a22925317f1" translate="yes" xml:space="preserve">
          <source>Sorting and filtering branches are case insensitive.</source>
          <target state="translated">ブランチのソートとフィルタリングは大文字小文字を区別しません。</target>
        </trans-unit>
        <trans-unit id="5ce7d777697e6536cabaa9eaf03abf69552dd696" translate="yes" xml:space="preserve">
          <source>Sorting and filtering refs are case insensitive.</source>
          <target state="translated">参照のソートとフィルタリングは、大文字と小文字を区別しません。</target>
        </trans-unit>
        <trans-unit id="9d38ff15fbd7490d8843677184f9c7afbcdf73ce" translate="yes" xml:space="preserve">
          <source>Sorting and filtering tags are case insensitive.</source>
          <target state="translated">ソートやフィルタリングのタグは大文字小文字を区別しません。</target>
        </trans-unit>
        <trans-unit id="74d012567bc749743b2f7f680471d74e8b0444d4" translate="yes" xml:space="preserve">
          <source>Source code management (tool).</source>
          <target state="translated">ソースコード管理(ツール)。</target>
        </trans-unit>
        <trans-unit id="36b1651cdc36dfe13b6c0271ea5052804f0ae0c9" translate="yes" xml:space="preserve">
          <source>Sparse checkout</source>
          <target state="translated">まばらなチェックアウト</target>
        </trans-unit>
        <trans-unit id="7aaf15f27eda1de7eaf7b123729519d3afe58336" translate="yes" xml:space="preserve">
          <source>Specifically, the following are removed until none of them remain:</source>
          <target state="translated">具体的には、以下のようなものを1つも残らないまで削除します。</target>
        </trans-unit>
        <trans-unit id="6fb30b05a9f660538f592f3613160c9d3d393240" translate="yes" xml:space="preserve">
          <source>Specified branch is an ancestor of the remote HEAD</source>
          <target state="translated">指定されたブランチは、リモート HEAD の祖先です。</target>
        </trans-unit>
        <trans-unit id="095f9fffc528a2b593b5d023d80910beab9fba54" translate="yes" xml:space="preserve">
          <source>Specified branch resolves to an object that exists locally</source>
          <target state="translated">指定されたブランチは、ローカルに存在するオブジェクトに解決します。</target>
        </trans-unit>
        <trans-unit id="8bd7d2d739debb36a1057aa4a730675102718bfe" translate="yes" xml:space="preserve">
          <source>Specifies a port different from the default port (SMTP servers typically listen to smtp port 25, but may also listen to submission port 587, or the common SSL smtp port 465); symbolic port names (e.g. &quot;submission&quot; instead of 587) are also accepted. The port can also be set with the &lt;code&gt;sendemail.smtpServerPort&lt;/code&gt; configuration variable.</source>
          <target state="translated">デフォルトポートとは異なるポートを指定します（SMTPサーバーは通常、smtpポート25をリッスンしますが、送信ポート587または一般的なSSL smtpポート465もリッスンする場合があります）。シンボリックポート名（たとえば、587の代わりに「送信」）も受け入れられます。ポートは、 &lt;code&gt;sendemail.smtpServerPort&lt;/code&gt; 構成変数を使用して設定することもできます。</target>
        </trans-unit>
        <trans-unit id="07c63275a8584ac825542ccb56fd0f5b3bf25b5a" translate="yes" xml:space="preserve">
          <source>Specifies compression level for newly-compressed data in the generated pack. If not specified, pack compression level is determined first by pack.compression, then by core.compression, and defaults to -1, the zlib default, if neither is set. Add --no-reuse-object if you want to force a uniform compression level on all data no matter the source.</source>
          <target state="translated">生成されたパック内で新たに圧縮されたデータの圧縮レベルを指定します。指定しない場合、パックの圧縮レベルは最初に pack.compression、次に core.compression で決定され、どちらも設定されていない場合は zlib のデフォルトである -1 がデフォルトとなります。ソースに関係なく、すべてのデータに一様な圧縮レベルを強制的に適用したい場合は --no-reuse-object を追加してください。</target>
        </trans-unit>
        <trans-unit id="2e586cba19f8fbc5a10baac47fbd5c9e37781d67" translate="yes" xml:space="preserve">
          <source>Specifies how a merge is handled when the merged-in history is already a descendant of the current history. &lt;code&gt;--ff&lt;/code&gt; is the default unless merging an annotated (and possibly signed) tag that is not stored in its natural place in the &lt;code&gt;refs/tags/&lt;/code&gt; hierarchy, in which case &lt;code&gt;--no-ff&lt;/code&gt; is assumed.</source>
          <target state="translated">マージされた履歴が既に現在の履歴の子孫である場合のマージの処理方法を指定します。 &lt;code&gt;--ff&lt;/code&gt; は、 &lt;code&gt;refs/tags/&lt;/code&gt; 階層の本来の場所に格納されていない注釈付き（および場合によっては署名済み）のタグをマージしない限り、デフォルトです。その場合、-no &lt;code&gt;--no-ff&lt;/code&gt; が想定されます。</target>
        </trans-unit>
        <trans-unit id="1e4cfa4b695628b655fba3d437b2ed50df8c7399" translate="yes" xml:space="preserve">
          <source>Specifies how many context lines should be used in calls to diff made by the &lt;a href=&quot;git-gui&quot;&gt;git-gui[1]&lt;/a&gt;. The default is &quot;5&quot;.</source>
          <target state="translated">&lt;a href=&quot;git-gui&quot;&gt;git-gui [1]に&lt;/a&gt;よるdiffの呼び出しで使用するコンテキスト行の数を指定します。デフォルトは「5」です。</target>
        </trans-unit>
        <trans-unit id="ee05d66bfede680eae8d8ce792188074b5498ff4" translate="yes" xml:space="preserve">
          <source>Specifies how many submodules are fetched/cloned at the same time. A positive integer allows up to that number of submodules fetched in parallel. A value of 0 will give some reasonable default. If unset, it defaults to 1.</source>
          <target state="translated">同時に何個のサブモジュールをフェッチ/クローニングするかを指定します。正の整数を指定すると、同時にフェッチされるサブモジュールの数を指定することができます。0を指定すると、ある程度のデフォルト値が設定されます。未設定の場合、デフォルトは1です。</target>
        </trans-unit>
        <trans-unit id="316fa49ea084b12859b1b97d79b0376bed50442d" translate="yes" xml:space="preserve">
          <source>Specifies how the submodules obtain alternates when submodules are cloned. Possible values are &lt;code&gt;no&lt;/code&gt;, &lt;code&gt;superproject&lt;/code&gt;. By default &lt;code&gt;no&lt;/code&gt; is assumed, which doesn&amp;rsquo;t add references. When the value is set to &lt;code&gt;superproject&lt;/code&gt; the submodule to be cloned computes its alternates location relative to the superprojects alternate.</source>
          <target state="translated">サブモジュールの複製時にサブモジュールが代替を取得する方法を指定します。可能な値は &lt;code&gt;no&lt;/code&gt; 、 &lt;code&gt;superproject&lt;/code&gt; です。デフォルトでは &lt;code&gt;no&lt;/code&gt; が想定され、参照は追加されません。値が &lt;code&gt;superproject&lt;/code&gt; 設定されている場合、複製されるサブモジュールは、スーパープロジェクトの代替に関連する代替の場所を計算します。</target>
        </trans-unit>
        <trans-unit id="b31fc36154a26e26a1c078ebba51ee8a4995b30b" translate="yes" xml:space="preserve">
          <source>Specifies how to treat errors with the alternates for a submodule as computed via &lt;code&gt;submodule.alternateLocation&lt;/code&gt;. Possible values are &lt;code&gt;ignore&lt;/code&gt;, &lt;code&gt;info&lt;/code&gt;, &lt;code&gt;die&lt;/code&gt;. Default is &lt;code&gt;die&lt;/code&gt;. Note that if set to &lt;code&gt;ignore&lt;/code&gt; or &lt;code&gt;info&lt;/code&gt;, and if there is an error with the computed alternate, the clone proceeds as if no alternate was specified.</source>
          <target state="translated">経由して計算されたサブモジュールのために交互にエラーを処理する方法を指定し &lt;code&gt;submodule.alternateLocation&lt;/code&gt; 。可能な値は、 &lt;code&gt;ignore&lt;/code&gt; 、 &lt;code&gt;info&lt;/code&gt; 、 &lt;code&gt;die&lt;/code&gt; です。デフォルトは &lt;code&gt;die&lt;/code&gt; です。 &lt;code&gt;ignore&lt;/code&gt; または &lt;code&gt;info&lt;/code&gt; に設定されていて、計算された代替にエラーがある場合、クローンは代替が指定されていないかのように続行することに注意してください。</target>
        </trans-unit>
        <trans-unit id="be724c0999a6ad4178618a1619dc5ee566f604f6" translate="yes" xml:space="preserve">
          <source>Specifies if commands recurse into submodules by default. This applies to all commands that have a &lt;code&gt;--recurse-submodules&lt;/code&gt; option, except &lt;code&gt;clone&lt;/code&gt;. Defaults to false.</source>
          <target state="translated">コマンドがデフォルトでサブモジュールに再帰するかどうかを指定します。これは、 &lt;code&gt;--recurse-submodules&lt;/code&gt; オプションを持つすべてのコマンドに適用されます。ただし、 &lt;code&gt;clone&lt;/code&gt; は除きます。デフォルトはfalseです。</target>
        </trans-unit>
        <trans-unit id="4a0da697fa597c14275c00dd14541ab0c3dfd994" translate="yes" xml:space="preserve">
          <source>Specifies the Fully Qualified Domain Name (FQDN) used in the HELO/EHLO command to the SMTP server. Some servers require the FQDN to match your IP address. If not set, git send-email attempts to determine your FQDN automatically. Default is the value of &lt;code&gt;sendemail.smtpDomain&lt;/code&gt;.</source>
          <target state="translated">SMTPサーバーへのHELO / EHLOコマンドで使用される完全修飾ドメイン名（FQDN）を指定します。一部のサーバーでは、IPアドレスと一致するFQDNが必要です。設定されていない場合、git send-emailはFQDNを自動的に決定しようとします。デフォルトは &lt;code&gt;sendemail.smtpDomain&lt;/code&gt; の値です。</target>
        </trans-unit>
        <trans-unit id="5037aaf03dca1f2f538183f1496bfc2b7e1efabf" translate="yes" xml:space="preserve">
          <source>Specifies the default encoding to use for displaying of file contents in &lt;a href=&quot;git-gui&quot;&gt;git-gui[1]&lt;/a&gt; and &lt;a href=&quot;gitk&quot;&gt;gitk[1]&lt;/a&gt;. It can be overridden by setting the &lt;code&gt;encoding&lt;/code&gt; attribute for relevant files (see &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt;). If this option is not set, the tools default to the locale encoding.</source>
          <target state="translated">&lt;a href=&quot;git-gui&quot;&gt;git-gui [1]&lt;/a&gt;および&lt;a href=&quot;gitk&quot;&gt;gitk [1]&lt;/a&gt;でファイルの内容を表示するために使用するデフォルトのエンコーディングを指定します。これは、関連ファイルの &lt;code&gt;encoding&lt;/code&gt; 属性を設定することでオーバーライドできます（&lt;a href=&quot;gitattributes&quot;&gt;gitattributes [5]を&lt;/a&gt;参照）。このオプションが設定されていない場合、ツールはデフォルトでロケールエンコーディングになります。</target>
        </trans-unit>
        <trans-unit id="8d7b044fb5611f2bdd400a7d800ea730223f6289" translate="yes" xml:space="preserve">
          <source>Specifies the dictionary used for spell checking commit messages in the &lt;a href=&quot;git-gui&quot;&gt;git-gui[1]&lt;/a&gt;. When set to &quot;none&quot; spell checking is turned off.</source>
          <target state="translated">&lt;a href=&quot;git-gui&quot;&gt;git-gui [1]で&lt;/a&gt;コミットメッセージのスペルチェックに使用する辞書を指定します。「なし」に設定すると、スペルチェックがオフになります。</target>
        </trans-unit>
        <trans-unit id="d083f984efe9263940e7d58fa993a7931f1dd65f" translate="yes" xml:space="preserve">
          <source>Specifies the encoding used to output author names and commit summaries. Setting it to &lt;code&gt;none&lt;/code&gt; makes blame output unconverted data. For more information see the discussion about encoding in the &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt; manual page.</source>
          <target state="translated">著者名の出力と要約のコミットに使用されるエンコーディングを指定します。 &lt;code&gt;none&lt;/code&gt; に設定すると、blame出力は変換されないデータになります。詳細については、&lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt;マニュアルページのエンコーディングに関する説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="a27599ead22294e56acfe0afc5fbf545479773f2" translate="yes" xml:space="preserve">
          <source>Specifies the format used to output dates in &lt;a href=&quot;git-blame&quot;&gt;git-blame[1]&lt;/a&gt;. If unset the iso format is used. For supported values, see the discussion of the &lt;code&gt;--date&lt;/code&gt; option at &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;git-blame&quot;&gt;git-blame [1]で&lt;/a&gt;日付を出力するために使用される形式を指定します。未設定の場合は、iso形式が使用されます。サポートされている値については、&lt;a href=&quot;git-log&quot;&gt;git-log [1]の&lt;/a&gt; &lt;code&gt;--date&lt;/code&gt; オプションの説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="08d91dd5a7053d3bafb0000dd55ac78c15731e93" translate="yes" xml:space="preserve">
          <source>Specifies the format used to output dates. If --date is not provided, the value of the blame.date config variable is used. If the blame.date config variable is also not set, the iso format is used. For supported values, see the discussion of the --date option at &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt;.</source>
          <target state="translated">日付の出力に使用される形式を指定します。--dateが指定されていない場合、blame.date構成変数の値が使用されます。blame.date構成変数も設定されていない場合は、iso形式が使用されます。サポートされている値については、&lt;a href=&quot;git-log&quot;&gt;git-log [1]の&lt;/a&gt; --dateオプションの説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="08b582fd23612321f471de0a5131383c71313dc1" translate="yes" xml:space="preserve">
          <source>Specifies the general prompt string to display at the top of the dialog, before subsections for &lt;code&gt;argPrompt&lt;/code&gt; and &lt;code&gt;revPrompt&lt;/code&gt;. The default value includes the actual command.</source>
          <target state="translated">&lt;code&gt;argPrompt&lt;/code&gt; および &lt;code&gt;revPrompt&lt;/code&gt; のサブセクションの前に、ダイアログの上部に表示する一般的なプロンプト文字列を指定します。デフォルト値には実際のコマンドが含まれています。</target>
        </trans-unit>
        <trans-unit id="a9e526c09a4c4719d9406e0b96ea75a516e14797" translate="yes" xml:space="preserve">
          <source>Specifies the maximal number of fetch operations to be run in parallel at a time (submodules, or remotes when the &lt;code&gt;--multiple&lt;/code&gt; option of &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt; is in effect).</source>
          <target state="translated">一度に並行して実行するフェッチ操作の最大数を指定します（サブモジュール、または&lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt;の &lt;code&gt;--multiple&lt;/code&gt; オプションが有効な場合はリモート）。</target>
        </trans-unit>
        <trans-unit id="841aeff1992a5e30906fb04c48bd487428f81ede" translate="yes" xml:space="preserve">
          <source>Specifies the number of threads to spawn when loading the index. This is meant to reduce index load time on multiprocessor machines. Specifying 0 or &lt;code&gt;true&lt;/code&gt; will cause Git to auto-detect the number of CPU&amp;rsquo;s and set the number of threads accordingly. Specifying 1 or &lt;code&gt;false&lt;/code&gt; will disable multithreading. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">インデックスのロード時に生成されるスレッドの数を指定します。これは、マルチプロセッサマシンでのインデックスの読み込み時間を短縮するためのものです。0または &lt;code&gt;true&lt;/code&gt; を指定すると、GitはCPUの数を自動検出し、それに応じてスレッドの数を設定します。1または &lt;code&gt;false&lt;/code&gt; を指定すると、マルチスレッドが無効になります。デフォルトは &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a1edc546a8b44445b5552ac6cb04ae2f0f6c55a7" translate="yes" xml:space="preserve">
          <source>Specifies the number of threads to spawn when resolving deltas. This requires that index-pack be compiled with pthreads otherwise this option is ignored with a warning. This is meant to reduce packing time on multiprocessor machines. The required amount of memory for the delta search window is however multiplied by the number of threads. Specifying 0 will cause Git to auto-detect the number of CPU&amp;rsquo;s and use maximum 3 threads.</source>
          <target state="translated">デルタを解決するときに生成するスレッドの数を指定します。これには、index-packをpthreadでコンパイルする必要があります。そうでない場合、このオプションは警告とともに無視されます。これは、マルチプロセッサマシンでのパッキング時間を短縮するためのものです。ただし、デルタ検索ウィンドウに必要なメモリ量は、スレッド数で乗算されます。 0を指定すると、GitはCPUの数を自動検出し、最大3つのスレッドを使用します。</target>
        </trans-unit>
        <trans-unit id="62a88cce2e4d60d8d3773b73f0efea252799f6cf" translate="yes" xml:space="preserve">
          <source>Specifies the number of threads to spawn when searching for best delta matches. This requires that &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects[1]&lt;/a&gt; be compiled with pthreads otherwise this option is ignored with a warning. This is meant to reduce packing time on multiprocessor machines. The required amount of memory for the delta search window is however multiplied by the number of threads. Specifying 0 will cause Git to auto-detect the number of CPU&amp;rsquo;s and set the number of threads accordingly.</source>
          <target state="translated">最良のデルタ一致を検索するときに生成するスレッドの数を指定します。これには、&lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects [1]&lt;/a&gt;をpthreadでコンパイルする必要があります。コンパイルしない場合、このオプションは警告とともに無視されます。これは、マルチプロセッサマシンでのパッキング時間を短縮するためのものです。ただし、デルタ検索ウィンドウに必要なメモリ量は、スレッド数で乗算されます。 0を指定すると、GitはCPUの数を自動検出し、それに応じてスレッドの数を設定します。</target>
        </trans-unit>
        <trans-unit id="b8f98a607312c9ba066372345125a9cb60221982" translate="yes" xml:space="preserve">
          <source>Specifies the number of threads to spawn when searching for best delta matches. This requires that pack-objects be compiled with pthreads otherwise this option is ignored with a warning. This is meant to reduce packing time on multiprocessor machines. The required amount of memory for the delta search window is however multiplied by the number of threads. Specifying 0 will cause Git to auto-detect the number of CPU&amp;rsquo;s and set the number of threads accordingly.</source>
          <target state="translated">最良のデルタ一致を検索するときに生成するスレッドの数を指定します。これには、pack-objectsをpthreadでコンパイルする必要があります。そうでない場合、このオプションは警告とともに無視されます。これは、マルチプロセッサマシンでのパッキング時間を短縮するためのものです。ただし、デルタ検索ウィンドウに必要なメモリ量は、スレッド数で乗算されます。0を指定すると、GitはCPUの数を自動検出し、それに応じてスレッドの数を設定します。</target>
        </trans-unit>
        <trans-unit id="a17b7410705517c5284c60d4c1158e205890521a" translate="yes" xml:space="preserve">
          <source>Specifies the number of times to retry a p4 command (notably, &lt;code&gt;p4 sync&lt;/code&gt;) if the network times out. The default value is 3. Set the value to 0 to disable retries or if your p4 version does not support retries (pre 2012.2).</source>
          <target state="translated">ネットワークがタイムアウトした場合に、p4コマンド（特に、 &lt;code&gt;p4 sync&lt;/code&gt; ）を再試行する回数を指定します。デフォルト値は3です。再試行を無効にするには、値を0に設定します。または、p4バージョンが再試行をサポートしていない場合（2012.2より前）。</target>
        </trans-unit>
        <trans-unit id="0ebc03abb12118370c422382dc91c5979f3d39ba" translate="yes" xml:space="preserve">
          <source>Specifies the pathname to the file that contains patterns to describe paths that are not meant to be tracked, in addition to &lt;code&gt;.gitignore&lt;/code&gt; (per-directory) and &lt;code&gt;.git/info/exclude&lt;/code&gt;. Defaults to &lt;code&gt;$XDG_CONFIG_HOME/git/ignore&lt;/code&gt;. If &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; is either not set or empty, &lt;code&gt;$HOME/.config/git/ignore&lt;/code&gt; is used instead. See &lt;a href=&quot;gitignore&quot;&gt;gitignore[5]&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.gitignore&lt;/code&gt; （ディレクトリごと）と &lt;code&gt;.git/info/exclude&lt;/code&gt; に加えて、追跡対象ではないパスを記述するパターンを含むファイルへのパス名を指定します。デフォルトは &lt;code&gt;$XDG_CONFIG_HOME/git/ignore&lt;/code&gt; です。場合は &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; セットまたは空にされていない、 &lt;code&gt;$HOME/.config/git/ignore&lt;/code&gt; 代わりに使用されます。&lt;a href=&quot;gitignore&quot;&gt;gitignore [5]を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d124e54be4e690b62098ac284ac76a08ab37106b" translate="yes" xml:space="preserve">
          <source>Specifies the radius of history context in days to show in &lt;a href=&quot;gitk&quot;&gt;gitk[1]&lt;/a&gt; for the selected commit, when the &lt;code&gt;Show History
Context&lt;/code&gt; menu item is invoked from &lt;code&gt;git gui blame&lt;/code&gt;. If this variable is set to zero, the whole history is shown.</source>
          <target state="translated">&lt;code&gt;git gui blame&lt;/code&gt; から&lt;a href=&quot;gitk&quot;&gt;[ &lt;/a&gt; &lt;code&gt;Show History Context&lt;/code&gt; 表示]メニュー項目が呼び出されたときに、選択したコミットのgitk [1]に表示する履歴コンテキストの半径を日数で指定します。この変数をゼロに設定すると、履歴全体が表示されます。</target>
        </trans-unit>
        <trans-unit id="f11e5547d2e0c72dd049c0935b29638a6ee69cf3" translate="yes" xml:space="preserve">
          <source>Specifies the shell command line to execute when the corresponding item of the &lt;a href=&quot;git-gui&quot;&gt;git-gui[1]&lt;/a&gt;&lt;code&gt;Tools&lt;/code&gt; menu is invoked. This option is mandatory for every tool. The command is executed from the root of the working directory, and in the environment it receives the name of the tool as &lt;code&gt;GIT_GUITOOL&lt;/code&gt;, the name of the currently selected file as &lt;code&gt;FILENAME&lt;/code&gt;, and the name of the current branch as &lt;code&gt;CUR_BRANCH&lt;/code&gt; (if the head is detached, &lt;code&gt;CUR_BRANCH&lt;/code&gt; is empty).</source>
          <target state="translated">&lt;a href=&quot;git-gui&quot;&gt;git-gui [1] &lt;/a&gt; &lt;code&gt;Tools&lt;/code&gt; メニューの対応する項目が呼び出されたときに実行するシェルコマンドラインを指定します。このオプションは、すべてのツールで必須です。コマンドは作業ディレクトリのルートから実行され、環境では、ツールの名前として &lt;code&gt;GIT_GUITOOL&lt;/code&gt; 、現在選択されているファイルの名前として &lt;code&gt;FILENAME&lt;/code&gt; 、現在のブランチの名前として &lt;code&gt;CUR_BRANCH&lt;/code&gt; （ヘッドがデタッチ、 &lt;code&gt;CUR_BRANCH&lt;/code&gt; は空です）。</target>
        </trans-unit>
        <trans-unit id="b9843bcfef468e8924053c3490935a52737f70b4" translate="yes" xml:space="preserve">
          <source>Specifies the threshold to use in &lt;code&gt;git gui blame&lt;/code&gt; original location detection, measured in alphanumeric characters. See the &lt;a href=&quot;git-blame&quot;&gt;git-blame[1]&lt;/a&gt; manual for more information on copy detection.</source>
          <target state="translated">&lt;code&gt;git gui blame&lt;/code&gt; の元の場所の検出で使用するしきい値を英数字で測定して指定します。コピー検出の詳細については、&lt;a href=&quot;git-blame&quot;&gt;git-blame [1]&lt;/a&gt;マニュアルを参照してください。</target>
        </trans-unit>
        <trans-unit id="35d941c623037130ce3eda15ee67700140f974b9" translate="yes" xml:space="preserve">
          <source>Specifies the title to use for the prompt dialog. The default is the tool name.</source>
          <target state="translated">プロンプトダイアログに使用するタイトルを指定します。デフォルトはツール名です。</target>
        </trans-unit>
        <trans-unit id="52c4a2a4dc795a08ca1c6e643c489de2ec8bd5e5" translate="yes" xml:space="preserve">
          <source>Specifies whether the index file should include an &quot;End Of Index Entry&quot; section. This reduces index load time on multiprocessor machines but produces a message &quot;ignoring EOIE extension&quot; when reading the index using Git versions before 2.20. Defaults to &lt;code&gt;true&lt;/code&gt; if index.threads has been explicitly enabled, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">インデックスファイルに「インデックスエントリの終了」セクションを含めるかどうかを指定します。これにより、マルチプロセッサマシンでのインデックスの読み込み時間が短縮されますが、2.20より前のGitバージョンを使用してインデックスを読み取ると、「EOIE拡張を無視しています」というメッセージが表示されます。index.threadsが明示的に有効になっている場合、デフォルトは &lt;code&gt;true&lt;/code&gt; 、それ以外の場合は &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="525e2825828b98c76d10ccc05a720012cdd9968e" translate="yes" xml:space="preserve">
          <source>Specifies whether the index file should include an &quot;Index Entry Offset Table&quot; section. This reduces index load time on multiprocessor machines but produces a message &quot;ignoring IEOT extension&quot; when reading the index using Git versions before 2.20. Defaults to &lt;code&gt;true&lt;/code&gt; if index.threads has been explicitly enabled, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">インデックスファイルに「インデックスエントリオフセットテーブル」セクションを含めるかどうかを指定します。これにより、マルチプロセッサマシンでのインデックスの読み込み時間が短縮されますが、2.20より前のGitバージョンを使用してインデックスを読み取ると、「IEOT拡張を無視する」というメッセージが表示されます。index.threadsが明示的に有効になっている場合、デフォルトは &lt;code&gt;true&lt;/code&gt; 、それ以外の場合は &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8fdd8a31fc755f041d294b5f0a76be847216c212" translate="yes" xml:space="preserve">
          <source>Specifies which key format to use when signing with &lt;code&gt;--gpg-sign&lt;/code&gt;. Default is &quot;openpgp&quot; and another possible value is &quot;x509&quot;.</source>
          <target state="translated">&lt;code&gt;--gpg-sign&lt;/code&gt; で署名するときに使用するキー形式を指定します。デフォルトは「openpgp」で、別の可能な値は「x509」です。</target>
        </trans-unit>
        <trans-unit id="53399059f89e05e568d5d0da51714e4798f56246" translate="yes" xml:space="preserve">
          <source>Specifies which refs to fetch and which local refs to update. When no &amp;lt;refspec&amp;gt;s appear on the command line, the refs to fetch are read from &lt;code&gt;remote.&amp;lt;repository&amp;gt;.fetch&lt;/code&gt; variables instead (see &lt;a href=&quot;#CRTB&quot;&gt;CONFIGURED REMOTE-TRACKING BRANCHES&lt;/a&gt; below).</source>
          <target state="translated">フェッチする参照と更新するローカル参照を指定します。コマンドラインに&amp;lt;refspec&amp;gt;が表示されない場合、フェッチする参照は、代わりに &lt;code&gt;remote.&amp;lt;repository&amp;gt;.fetch&lt;/code&gt; 変数から読み取られます（下記の&lt;a href=&quot;#CRTB&quot;&gt;構成されたリモートトラッキングブランチを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="60264eae7c0d99030432a57153dd31a20ae2e753" translate="yes" xml:space="preserve">
          <source>Specifies which refs to fetch and which local refs to update. When no &amp;lt;refspec&amp;gt;s appear on the command line, the refs to fetch are read from &lt;code&gt;remote.&amp;lt;repository&amp;gt;.fetch&lt;/code&gt; variables instead (see &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt;).</source>
          <target state="translated">フェッチする参照と更新するローカル参照を指定します。コマンドラインに&amp;lt;refspec&amp;gt;が表示されない場合、フェッチする参照は、代わりに &lt;code&gt;remote.&amp;lt;repository&amp;gt;.fetch&lt;/code&gt; 変数から読み取られます（&lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="12c5a4fe1da6e3ddd052994379342b3963b9ece6" translate="yes" xml:space="preserve">
          <source>Specify a &quot;Bcc:&quot; value for each email. Default is the value of &lt;code&gt;sendemail.bcc&lt;/code&gt;.</source>
          <target state="translated">各メールの「Bcc：」値を指定します。デフォルトは &lt;code&gt;sendemail.bcc&lt;/code&gt; の値です。</target>
        </trans-unit>
        <trans-unit id="490afafb9292b82bc6ff88488dc739661601f0fb" translate="yes" xml:space="preserve">
          <source>Specify a (&amp;lt;token&amp;gt;, &amp;lt;value&amp;gt;) pair that should be applied as a trailer to the input messages. See the description of this command.</source>
          <target state="translated">入力メッセージのトレーラーとして適用される（&amp;lt;token&amp;gt;、&amp;lt;value&amp;gt;）ペアを指定します。このコマンドの説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="fda787c4a6303bd8c4899e47b2fd75ed69b102b2" translate="yes" xml:space="preserve">
          <source>Specify a comma separate list of common whitespace problems to notice in the same format as the &lt;code&gt;core.whitespace&lt;/code&gt; configuration variable.</source>
          <target state="translated">一般的な空白の問題のコンマ区切りのリストを、 &lt;code&gt;core.whitespace&lt;/code&gt; 構成変数と同じ形式で指定します。</target>
        </trans-unit>
        <trans-unit id="f01423252b19025369d9eaeaea940daec72c630e" translate="yes" xml:space="preserve">
          <source>Specify a command to execute once per patch file which should generate patch file specific &quot;Cc:&quot; entries. Output of this command must be single email address per line. Default is the value of &lt;code&gt;sendemail.ccCmd&lt;/code&gt; configuration value.</source>
          <target state="translated">パッチファイル固有の「Cc：」エントリを生成するパッチファイルごとに1回実行するコマンドを指定します。このコマンドの出力は、1行に1つのメールアドレスである必要があります。デフォルトは &lt;code&gt;sendemail.ccCmd&lt;/code&gt; 構成値の値です。</target>
        </trans-unit>
        <trans-unit id="8a69aa64125bc041f34a0988fcc820e93ea1cefe" translate="yes" xml:space="preserve">
          <source>Specify a command to execute once per patch file which should generate patch file specific &quot;To:&quot; entries. Output of this command must be single email address per line. Default is the value of &lt;code&gt;sendemail.tocmd&lt;/code&gt; configuration value.</source>
          <target state="translated">パッチファイル固有の「To：」エントリを生成するパッチファイルごとに1回実行するコマンドを指定します。このコマンドの出力は、1行に1つのメールアドレスである必要があります。デフォルトは &lt;code&gt;sendemail.tocmd&lt;/code&gt; 構成値の値です。</target>
        </trans-unit>
        <trans-unit id="f6cbbfb6d081efa8553064ef51812c93149ccd37" translate="yes" xml:space="preserve">
          <source>Specify a custom command for viewing diffs. &lt;code&gt;git-difftool&lt;/code&gt; ignores the configured defaults and runs &lt;code&gt;$command $LOCAL $REMOTE&lt;/code&gt; when this option is specified. Additionally, &lt;code&gt;$BASE&lt;/code&gt; is set in the environment.</source>
          <target state="translated">差分を表示するためのカスタムコマンドを指定します。 &lt;code&gt;git-difftool&lt;/code&gt; は、このオプションが指定されている場合、構成されたデフォルトを無視し、 &lt;code&gt;$command $LOCAL $REMOTE&lt;/code&gt; を実行します。さらに、 &lt;code&gt;$BASE&lt;/code&gt; が環境に設定されます。</target>
        </trans-unit>
        <trans-unit id="f8f61e37f968bf27d42f1bb30c54e88a19aa0b4c" translate="yes" xml:space="preserve">
          <source>Specify a starting &quot;Cc:&quot; value for each email. Default is the value of &lt;code&gt;sendemail.cc&lt;/code&gt;.</source>
          <target state="translated">各電子メールの開始 &quot;Cc：&quot;値を指定します。デフォルトは &lt;code&gt;sendemail.cc&lt;/code&gt; の値です。</target>
        </trans-unit>
        <trans-unit id="d751165243a07b0d8cf01d157a40d624e1274cc2" translate="yes" xml:space="preserve">
          <source>Specify a web browser that may be used by some commands. Currently only &lt;a href=&quot;git-instaweb&quot;&gt;git-instaweb[1]&lt;/a&gt; and &lt;a href=&quot;git-help&quot;&gt;git-help[1]&lt;/a&gt; may use it.</source>
          <target state="translated">一部のコマンドで使用できるWebブラウザーを指定します。現在、&lt;a href=&quot;git-instaweb&quot;&gt;git-instaweb [1]&lt;/a&gt;と&lt;a href=&quot;git-help&quot;&gt;git-help [1]のみ&lt;/a&gt;が使用できます。</target>
        </trans-unit>
        <trans-unit id="3184d8ec3f5fc0c7b49c79eaaa392759be7aeb74" translate="yes" xml:space="preserve">
          <source>Specify an additional category of recipients to suppress the auto-cc of:</source>
          <target state="translated">自動CCを抑制する受信者の追加カテゴリを指定します。</target>
        </trans-unit>
        <trans-unit id="6c3bb30f438f4e33cf02f17fe7e170959d2a5bad" translate="yes" xml:space="preserve">
          <source>Specify an external helper to be called when a username or password credential is needed; the helper may consult external storage to avoid prompting the user for the credentials. Note that multiple helpers may be defined. See &lt;a href=&quot;gitcredentials&quot;&gt;gitcredentials[7]&lt;/a&gt; for details.</source>
          <target state="translated">ユーザー名またはパスワードの資格情報が必要なときに呼び出される外部ヘルパーを指定します。ヘルパーは外部ストレージを調べて、ユーザーに資格情報を要求しないようにすることができます。複数のヘルパーを定義できることに注意してください。詳細については、&lt;a href=&quot;gitcredentials&quot;&gt;gitcredentials [7]&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="88abf188bf279fdc57952e5f78070fe3d6b977d1" translate="yes" xml:space="preserve">
          <source>Specify an island name which gets to have its objects be packed first. This creates a kind of pseudo-pack at the front of one pack, so that the objects from the specified island are hopefully faster to copy into any pack that should be served to a user requesting these objects. In practice this means that the island specified should likely correspond to what is the most commonly cloned in the repo. See also &quot;DELTA ISLANDS&quot; in &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects[1]&lt;/a&gt;.</source>
          <target state="translated">オブジェクトを最初にパックするアイランド名を指定します。これにより、1つのパックの前面に一種の疑似パックが作成されるため、指定されたアイランドからのオブジェクトは、これらのオブジェクトを要求するユーザーに提供する必要があるパックにコピーする方が高速です。実際には、これは、指定されたアイランドがレポで最も一般的にクローンされるものに対応する可能性があることを意味します。&lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects [1]の&lt;/a&gt;「DELTA ISLANDS」も参照してください。</target>
        </trans-unit>
        <trans-unit id="4f4ddca39682ecb94c54d4e5428623a9fabd67c0" translate="yes" xml:space="preserve">
          <source>Specify any of the options listed under OPTIONS that do not change stream semantic to suit the frontend&amp;rsquo;s needs. This command is optional and is not needed to perform an import.</source>
          <target state="translated">フロントエンドのニーズに合わせてストリームの意味を変更しないオプションの下にリストされているオプションを指定します。このコマンドはオプションであり、インポートの実行には必要ありません。</target>
        </trans-unit>
        <trans-unit id="126df40ac6c274763f2820bec126088754eb50a7" translate="yes" xml:space="preserve">
          <source>Specify authenticate method for authentication with IMAP server. If Git was built with the NO_CURL option, or if your curl version is older than 7.34.0, or if you&amp;rsquo;re running git-imap-send with the &lt;code&gt;--no-curl&lt;/code&gt; option, the only supported method is &lt;code&gt;CRAM-MD5&lt;/code&gt;. If this is not set then &lt;code&gt;git imap-send&lt;/code&gt; uses the basic IMAP plaintext LOGIN command.</source>
          <target state="translated">IMAPサーバーでの認証の認証方法を指定します。GitがNO_CURLオプションを使用してビルドされた場合、またはcurlのバージョンが7.34.0より古い場合、またはgit-imap-sendを &lt;code&gt;--no-curl&lt;/code&gt; オプションを指定して実行している場合、サポートされている唯一の方法は &lt;code&gt;CRAM-MD5&lt;/code&gt; です。これが設定されていない場合、 &lt;code&gt;git imap-send&lt;/code&gt; は基本的なIMAP平文LOGINコマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="db15aaae21c1056154eef62ce5f5cbd5e82beaa7" translate="yes" xml:space="preserve">
          <source>Specify encoding of compose message. Default is the value of the &lt;code&gt;sendemail.composeencoding&lt;/code&gt;; if that is unspecified, UTF-8 is assumed.</source>
          <target state="translated">作成メッセージのエンコーディングを指定します。デフォルトは &lt;code&gt;sendemail.composeencoding&lt;/code&gt; の値です。それが指定されていない場合、UTF-8が想定されます。</target>
        </trans-unit>
        <trans-unit id="bb2c4dacdd5136c6abef6fcc4de5e9c24a473010" translate="yes" xml:space="preserve">
          <source>Specify how differences in submodules are shown. When specifying &lt;code&gt;--submodule=short&lt;/code&gt; the &lt;code&gt;short&lt;/code&gt; format is used. This format just shows the names of the commits at the beginning and end of the range. When &lt;code&gt;--submodule&lt;/code&gt; or &lt;code&gt;--submodule=log&lt;/code&gt; is specified, the &lt;code&gt;log&lt;/code&gt; format is used. This format lists the commits in the range like &lt;a href=&quot;git-submodule&quot;&gt;git-submodule[1]&lt;/a&gt;&lt;code&gt;summary&lt;/code&gt; does. When &lt;code&gt;--submodule=diff&lt;/code&gt; is specified, the &lt;code&gt;diff&lt;/code&gt; format is used. This format shows an inline diff of the changes in the submodule contents between the commit range. Defaults to &lt;code&gt;diff.submodule&lt;/code&gt; or the &lt;code&gt;short&lt;/code&gt; format if the config option is unset.</source>
          <target state="translated">サブモジュールの違いの表示方法を指定します。 &lt;code&gt;--submodule=short&lt;/code&gt; を指定すると、 &lt;code&gt;short&lt;/code&gt; 形式が使用されます。このフォーマットは、範囲の最初と最後のコミットの名前を表示するだけです。場合 &lt;code&gt;--submodule&lt;/code&gt; 又は &lt;code&gt;--submodule=log&lt;/code&gt; 指定され、 &lt;code&gt;log&lt;/code&gt; フォーマットが使用されます。このフォーマットは、&lt;a href=&quot;git-submodule&quot;&gt;git-submodule [1] &lt;/a&gt; &lt;code&gt;summary&lt;/code&gt; のように範囲内のコミットをリストします。場合 &lt;code&gt;--submodule=diff&lt;/code&gt; 指定され、 &lt;code&gt;diff&lt;/code&gt; 形式が使用されています。このフォーマットは、コミット範囲間のサブモジュールの内容の変更のインライン差分を示しています。デフォルトは &lt;code&gt;diff.submodule&lt;/code&gt; または &lt;code&gt;short&lt;/code&gt; configオプションが設定されていない場合はフォーマットします。</target>
        </trans-unit>
        <trans-unit id="e212f603460a2824026571f0244622b2735e495f" translate="yes" xml:space="preserve">
          <source>Specify how multiple patterns are combined using Boolean expressions. &lt;code&gt;--or&lt;/code&gt; is the default operator. &lt;code&gt;--and&lt;/code&gt; has higher precedence than &lt;code&gt;--or&lt;/code&gt;. &lt;code&gt;-e&lt;/code&gt; has to be used for all patterns.</source>
          <target state="translated">ブール式を使用して複数のパターンを組み合わせる方法を指定します。 &lt;code&gt;--or&lt;/code&gt; デフォルトの演算子です。 &lt;code&gt;--and&lt;/code&gt; &lt;code&gt;--or&lt;/code&gt; 。よりも優先されます。 &lt;code&gt;-e&lt;/code&gt; はすべてのパターンに使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="ffbe8c6ac43df98980b6107e62dec3dfa7156507" translate="yes" xml:space="preserve">
          <source>Specify how to handle &lt;code&gt;encoding&lt;/code&gt; header in commit objects. When asking to &lt;code&gt;abort&lt;/code&gt; (which is the default), this program will die when encountering such a commit object. With &lt;code&gt;yes&lt;/code&gt;, the commit message will be re-encoded into UTF-8. With &lt;code&gt;no&lt;/code&gt;, the original encoding will be preserved.</source>
          <target state="translated">コミットオブジェクトの &lt;code&gt;encoding&lt;/code&gt; ヘッダーの処理方法を指定します。 &lt;code&gt;abort&lt;/code&gt; を要求する場合（デフォルト）、このプログラムは、そのようなコミットオブジェクトに遭遇すると終了します。 &lt;code&gt;yes&lt;/code&gt; 、コミットメッセージはUTF-8に再エンコードされます。では &lt;code&gt;no&lt;/code&gt; 、元のエンコードは保存されません。</target>
        </trans-unit>
        <trans-unit id="37815a435af244972cccaee7f12b140bf366ab25" translate="yes" xml:space="preserve">
          <source>Specify how to handle signed tags. Since any transformation after the export can change the tag names (which can also happen when excluding revisions) the signatures will not match.</source>
          <target state="translated">署名付きタグの扱い方を指定します。エクスポート後の変換でタグ名が変更される可能性があるので(リビジョンを除く場合にも起こりうる)、署名は一致しません。</target>
        </trans-unit>
        <trans-unit id="2e5b9b1beb3e649edbd3450c18f18cbc2b0b3c2a" translate="yes" xml:space="preserve">
          <source>Specify how to handle tags whose tagged object is filtered out. Since revisions and files to export can be limited by path, tagged objects may be filtered completely.</source>
          <target state="translated">タグ付きオブジェクトがフィルタリングされたタグの扱い方を指定します。リビジョンやエクスポートするファイルはパスで制限できるので、タグ付けされたオブジェクトは完全にフィルタリングされている場合もあります。</target>
        </trans-unit>
        <trans-unit id="58a10039b2ffb00f4c15d28cf7a59fdf8252b1ba" translate="yes" xml:space="preserve">
          <source>Specify layout mode. See configuration variable column.ui for option syntax in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">レイアウトモードを指定します。&lt;a href=&quot;git-config&quot;&gt;git-config [1]の&lt;/a&gt;オプション構文については、構成変数column.uiを参照してください。</target>
        </trans-unit>
        <trans-unit id="cd9fc5283ae0d7709eafb7d7c044a946ec4a926f" translate="yes" xml:space="preserve">
          <source>Specify submit behavior when a conflict with p4 is found, as per --conflict. The default behavior is &lt;code&gt;ask&lt;/code&gt;.</source>
          <target state="translated">--conflictに従って、p4との競合が検出されたときの送信動作を指定します。デフォルトの動作は &lt;code&gt;ask&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6b47b0eac1308c340a251aaa9bc02b368f9e6ec9" translate="yes" xml:space="preserve">
          <source>Specify that the Git repository is to be shared amongst several users. This allows users belonging to the same group to push into that repository. When specified, the config variable &quot;core.sharedRepository&quot; is set so that files and directories under &lt;code&gt;$GIT_DIR&lt;/code&gt; are created with the requested permissions. When not specified, Git will use permissions reported by umask(2).</source>
          <target state="translated">Gitリポジトリを複数のユーザー間で共有することを指定します。これにより、同じグループに属するユーザーがそのリポジトリにプッシュすることができます。指定すると、構成変数 &quot;core.sharedRepository&quot;が設定され、 &lt;code&gt;$GIT_DIR&lt;/code&gt; 下のファイルとディレクトリが要求された権限で作成されます。指定しない場合、Gitはumask（2）によって報告された権限を使用します。</target>
        </trans-unit>
        <trans-unit id="553f83584ef890feb9fc0a5fa486ad4027a85d31" translate="yes" xml:space="preserve">
          <source>Specify that the p4 client spec should be used to identify p4 depot paths of interest. This is equivalent to specifying the option &lt;code&gt;--use-client-spec&lt;/code&gt;. See the &quot;CLIENT SPEC&quot; section above. This variable is a boolean, not the name of a p4 client.</source>
          <target state="translated">対象のp4デポパスを識別するためにp4クライアント仕様を使用する必要があることを指定します。これは、オプション &lt;code&gt;--use-client-spec&lt;/code&gt; を指定することと同じです。上記の「クライアント仕様」セクションを参照してください。この変数はブール値であり、p4クライアントの名前ではありません。</target>
        </trans-unit>
        <trans-unit id="ee45839e9a36541472b0e6b0c79bb025ae2d044b" translate="yes" xml:space="preserve">
          <source>Specify the SVN username to perform the commit as. This option overrides the &lt;code&gt;username&lt;/code&gt; configuration property.</source>
          <target state="translated">コミットを実行するSVNユーザー名を指定します。このオプションは、 &lt;code&gt;username&lt;/code&gt; 構成プロパティーをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="ce5445a596c457d8087a3ba95eb2c606f830762e" translate="yes" xml:space="preserve">
          <source>Specify the [svn-remote &quot;&amp;lt;remote name&amp;gt;&quot;] section to use, this allows SVN multiple repositories to be tracked. Default: &quot;svn&quot;</source>
          <target state="translated">使用する[svn-remote &quot;&amp;lt;remote name&amp;gt;&quot;]セクションを指定すると、SVNの複数のリポジトリを追跡できます。デフォルト： &quot;svn&quot;</target>
        </trans-unit>
        <trans-unit id="9617526476bf00e3e1b98443975d22edd359d482" translate="yes" xml:space="preserve">
          <source>Specify the address where replies from recipients should go to. Use this if replies to messages should go to another address than what is specified with the --from parameter.</source>
          <target state="translated">受信者からの返信の宛先を指定します。メッセージへの返信が --from パラメータで指定したものとは別のアドレスに行く場合に使用します。</target>
        </trans-unit>
        <trans-unit id="ee03a68cf221fcf3ea580414a042d4bf2bb9f1e8" translate="yes" xml:space="preserve">
          <source>Specify the browser that will be used to display help in the &lt;code&gt;web&lt;/code&gt; format. See &lt;a href=&quot;git-help&quot;&gt;git-help[1]&lt;/a&gt;.</source>
          <target state="translated">ヘルプを &lt;code&gt;web&lt;/code&gt; 形式で表示するために使用するブラウザーを指定します。&lt;a href=&quot;git-help&quot;&gt;git-help [1]を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8aa86dc00b5d1ada804b541ee50aabffe17fa3ad" translate="yes" xml:space="preserve">
          <source>Specify the character used to indicate new, old or context lines in the generated patch. Normally they are &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt; and ' ' respectively.</source>
          <target state="translated">生成されたパッチの新しい行、古い行、またはコンテキスト行を示すために使用される文字を指定します。通常、それらはそれぞれ &lt;code&gt;+&lt;/code&gt; 、 &lt;code&gt;-&lt;/code&gt; 、および ''です。</target>
        </trans-unit>
        <trans-unit id="cb636a61044a94ec71c2c0e48db959f09a640e28" translate="yes" xml:space="preserve">
          <source>Specify the command to invoke the specified browser. The specified command is evaluated in shell with the URLs passed as arguments. (See git-web{litdd}browse[1].)</source>
          <target state="translated">指定したブラウザを起動するコマンドを指定します。指定したコマンドは、引数として渡された URL をシェルで評価します (git-web{litdd}browse[1]を参照ください)。(git-web{litdd}browse[1]を参照ください)。</target>
        </trans-unit>
        <trans-unit id="f8ec599a595d519e45f7089bd76b8eb2f0cf86d7" translate="yes" xml:space="preserve">
          <source>Specify the command to invoke the specified diff tool.</source>
          <target state="translated">指定したdiffツールを起動するコマンドを指定します。</target>
        </trans-unit>
        <trans-unit id="045550ad84d88752a76cca9657a08fe5f6314875" translate="yes" xml:space="preserve">
          <source>Specify the command to invoke the specified diff tool. The specified command is evaluated in shell with the following variables available: &lt;code&gt;LOCAL&lt;/code&gt; is set to the name of the temporary file containing the contents of the diff pre-image and &lt;code&gt;REMOTE&lt;/code&gt; is set to the name of the temporary file containing the contents of the diff post-image.</source>
          <target state="translated">コマンドを指定して、指定したdiffツールを呼び出します。指定されたコマンドは、次の変数を使用してシェルで評価されます &lt;code&gt;LOCAL&lt;/code&gt; は、差分プリイメージのコンテンツを含む一時ファイルの名前に設定され、 &lt;code&gt;REMOTE&lt;/code&gt; は、差分ポストのコンテンツを含む一時ファイルの名前に設定されます。 -画像。</target>
        </trans-unit>
        <trans-unit id="a4e7d7e1334d2dbe270d234d60ef8777bddd17c9" translate="yes" xml:space="preserve">
          <source>Specify the command to invoke the specified man viewer. The specified command is evaluated in shell with the man page passed as argument. (See &lt;a href=&quot;git-help&quot;&gt;git-help[1]&lt;/a&gt;.)</source>
          <target state="translated">指定されたmanビューアを呼び出すコマンドを指定します。指定されたコマンドは、引数として渡されるmanページを使用してシェルで評価されます。（&lt;a href=&quot;git-help&quot;&gt;git-help [1]を&lt;/a&gt;参照してください。）</target>
        </trans-unit>
        <trans-unit id="3a2ff684c7c448a4b91310593e49dad0e76d3118" translate="yes" xml:space="preserve">
          <source>Specify the command to invoke the specified merge tool. The specified command is evaluated in shell with the following variables available: &lt;code&gt;BASE&lt;/code&gt; is the name of a temporary file containing the common base of the files to be merged, if available; &lt;code&gt;LOCAL&lt;/code&gt; is the name of a temporary file containing the contents of the file on the current branch; &lt;code&gt;REMOTE&lt;/code&gt; is the name of a temporary file containing the contents of the file from the branch being merged; &lt;code&gt;MERGED&lt;/code&gt; contains the name of the file to which the merge tool should write the results of a successful merge.</source>
          <target state="translated">指定したマージツールを呼び出すコマンドを指定します。指定されたコマンドは、次の変数を使用してシェルで評価されます &lt;code&gt;BASE&lt;/code&gt; は、マージされるファイルの共通ベースを含む一時ファイルの名前です（使用可能な場合）。 &lt;code&gt;LOCAL&lt;/code&gt; は、現在のブランチ上のファイルの内容を含む一時ファイルの名前です。 &lt;code&gt;REMOTE&lt;/code&gt; は、マージされるブランチからのファイルのコンテンツを含む一時ファイルの名前です。 &lt;code&gt;MERGED&lt;/code&gt; には、マージツールが成功したマージの結果を書き込むファイルの名前が含まれています。</target>
        </trans-unit>
        <trans-unit id="6a0cfc4c034bf82c50504b5853ea3a2048b66aa0" translate="yes" xml:space="preserve">
          <source>Specify the default pack index version. Valid values are 1 for legacy pack index used by Git versions prior to 1.5.2, and 2 for the new pack index with capabilities for packs larger than 4 GB as well as proper protection against the repacking of corrupted packs. Version 2 is the default. Note that version 2 is enforced and this config option ignored whenever the corresponding pack is larger than 2 GB.</source>
          <target state="translated">デフォルトのパックインデックスのバージョンを指定します。有効な値は、1.5.2 より前のバージョンの Git で使用されていたレガシーなパックインデックスを表す 1 と、4 GB を超えるパックに対応し、破損したパックの再パックを防ぐための適切な保護機能を持つ新しいパックインデックスを表す 2 です。バージョン 2 がデフォルトです。バージョン 2 が適用され、対応するパックが 2 GB を超える場合はこの設定オプションは無視されることに注意しましょう。</target>
        </trans-unit>
        <trans-unit id="237b5a9487d0a4c4f3b292963fb14ac9431d7354" translate="yes" xml:space="preserve">
          <source>Specify the directory from which templates will be copied. (See the &quot;TEMPLATE DIRECTORY&quot; section of &lt;a href=&quot;git-init&quot;&gt;git-init[1]&lt;/a&gt;.)</source>
          <target state="translated">テンプレートのコピー元のディレクトリを指定します。（&lt;a href=&quot;git-init&quot;&gt;git-init [1]&lt;/a&gt;の「TEMPLATE DIRECTORY」セクションを参照してください。）</target>
        </trans-unit>
        <trans-unit id="9e017dab9e6089dc4c6b8916eff9198d29b5fa5a" translate="yes" xml:space="preserve">
          <source>Specify the directory from which templates will be used. (See the &quot;TEMPLATE DIRECTORY&quot; section below.)</source>
          <target state="translated">テンプレートを使用するディレクトリを指定します。(後述の「TEMPLATE DIRECTORY」のセクションを参照)。</target>
        </trans-unit>
        <trans-unit id="10fbc8bd7f7f67034717ffef3bdc652592011a96" translate="yes" xml:space="preserve">
          <source>Specify the directory from which templates will be used; (See the &quot;TEMPLATE DIRECTORY&quot; section of &lt;a href=&quot;git-init&quot;&gt;git-init[1]&lt;/a&gt;.)</source>
          <target state="translated">テンプレートを使用するディレクトリを指定します。（&lt;a href=&quot;git-init&quot;&gt;git-init [1]&lt;/a&gt;の「TEMPLATE DIRECTORY」セクションを参照してください。）</target>
        </trans-unit>
        <trans-unit id="6d06560706961e8be925ad5b0c5ec94cdc91c729" translate="yes" xml:space="preserve">
          <source>Specify the encryption to use, either &lt;code&gt;ssl&lt;/code&gt; or &lt;code&gt;tls&lt;/code&gt;. Any other value reverts to plain SMTP. Default is the value of &lt;code&gt;sendemail.smtpEncryption&lt;/code&gt;.</source>
          <target state="translated">使用する暗号化を &lt;code&gt;ssl&lt;/code&gt; または &lt;code&gt;tls&lt;/code&gt; のいずれかで指定します。その他の値はプレーンSMTPに戻ります。デフォルトは &lt;code&gt;sendemail.smtpEncryption&lt;/code&gt; の値です。</target>
        </trans-unit>
        <trans-unit id="4d476f2efa135b04b0d382124ae1d7eb2f09baec" translate="yes" xml:space="preserve">
          <source>Specify the envelope sender used to send the emails. This is useful if your default address is not the address that is subscribed to a list. In order to use the &lt;code&gt;From&lt;/code&gt; address, set the value to &quot;auto&quot;. If you use the sendmail binary, you must have suitable privileges for the -f parameter. Default is the value of the &lt;code&gt;sendemail.envelopeSender&lt;/code&gt; configuration variable; if that is unspecified, choosing the envelope sender is left to your MTA.</source>
          <target state="translated">電子メールの送信に使用されるエンベロープ送信者を指定します。これは、デフォルトのアドレスがリストに登録されているアドレスではない場合に役立ちます。 &lt;code&gt;From&lt;/code&gt; アドレスを使用するには、値を「auto」に設定します。 sendmailバイナリーを使用する場合、-fパラメーターに対する適切な特権が必要です。デフォルトは &lt;code&gt;sendemail.envelopeSender&lt;/code&gt; 構成変数の値です。それが指定されていない場合、エンベロープ送信者の選択はMTAに委ねられます。</target>
        </trans-unit>
        <trans-unit id="57154856f70bd26e9f32c73474da174dbb6a71bf" translate="yes" xml:space="preserve">
          <source>Specify the format in which differences in submodules are shown. The &quot;short&quot; format just shows the names of the commits at the beginning and end of the range. The &quot;log&quot; format lists the commits in the range like &lt;a href=&quot;git-submodule&quot;&gt;git-submodule[1]&lt;/a&gt;&lt;code&gt;summary&lt;/code&gt; does. The &quot;diff&quot; format shows an inline diff of the changed contents of the submodule. Defaults to &quot;short&quot;.</source>
          <target state="translated">サブモジュールの違いが表示される形式を指定します。「短い」形式は、範囲の最初と最後のコミットの名前を表示するだけです。「ログ」フォーマットは、&lt;a href=&quot;git-submodule&quot;&gt;git-submodule [1] &lt;/a&gt; &lt;code&gt;summary&lt;/code&gt; ように、範囲内のコミットをリストします。「diff」フォーマットは、サブモジュールの変更されたコンテンツのインラインdiffを示します。デフォルトは「short」です。</target>
        </trans-unit>
        <trans-unit id="ee4e54ea6641c26749f683e2086f11110bfcb031" translate="yes" xml:space="preserve">
          <source>Specify the full path of &lt;code&gt;git-upload-pack&lt;/code&gt; on the remote host. This allows listing references from repositories accessed via SSH and where the SSH daemon does not use the PATH configured by the user.</source>
          <target state="translated">リモートホストの &lt;code&gt;git-upload-pack&lt;/code&gt; の完全パスを指定します。これにより、SSH経由でアクセスされ、SSHデーモンがユーザーが設定したPATHを使用しないリポジトリからの参照を一覧表示できます。</target>
        </trans-unit>
        <trans-unit id="e05f34f2b12543d24deddf183d7f5563e4746b8d" translate="yes" xml:space="preserve">
          <source>Specify the initial subject of the email thread. Only necessary if --compose is also set. If --compose is not set, this will be prompted for.</source>
          <target state="translated">メールスレッドの最初の件名を指定します。composeも設定されている場合のみ必要です。composeが設定されていない場合は、プロンプトが表示されます。</target>
        </trans-unit>
        <trans-unit id="7f0e894272a77fe6a04290fbdb329a63eb87bf76" translate="yes" xml:space="preserve">
          <source>Specify the layout when list items in &lt;code&gt;git clean -i&lt;/code&gt;, which always shows files and directories in columns. See &lt;code&gt;column.ui&lt;/code&gt; for details.</source>
          <target state="translated">リストアイテムのレイアウトを &lt;code&gt;git clean -i&lt;/code&gt; で指定します。これは常にファイルとディレクトリを列で表示します。詳細については、 &lt;code&gt;column.ui&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="f7208179bdf36d6bc3e9b1d1f4f91288e1356b3f" translate="yes" xml:space="preserve">
          <source>Specify the location of the CVS checkout to use for the export. This option does not require GIT_DIR to be set before execution if the current directory is within a Git repository. The default is the value of &lt;code&gt;cvsexportcommit.cvsdir&lt;/code&gt;.</source>
          <target state="translated">エクスポートに使用するCVSチェックアウトの場所を指定します。現在のディレクトリがGitリポジトリ内にある場合、このオプションでは実行前にGIT_DIRを設定する必要はありません。デフォルトは &lt;code&gt;cvsexportcommit.cvsdir&lt;/code&gt; の値です。</target>
        </trans-unit>
        <trans-unit id="4c1271576d0edb7f1f0d6c8d0d3f48964a9bd30e" translate="yes" xml:space="preserve">
          <source>Specify the most recent revision to keep. All later revisions are discarded.</source>
          <target state="translated">保存する最新のリビジョンを指定します。それ以降のリビジョンはすべて破棄されます。</target>
        </trans-unit>
        <trans-unit id="dbfd748a4216557f92920425eee493e6f587b7d2" translate="yes" xml:space="preserve">
          <source>Specify the name of a CVS checkout using the -w switch or execute it from the root of the CVS working copy. In the latter case GIT_DIR must be defined. See examples below.</source>
          <target state="translated">wスイッチでCVSチェックアウトの名前を指定するか、CVS作業コピーのルートから実行します。後者の場合はgit_dirを定義する必要があります。以下の例を参照してください。</target>
        </trans-unit>
        <trans-unit id="6f5685351080bbe842e1b77f6e72d7f56e71124e" translate="yes" xml:space="preserve">
          <source>Specify the path where the HTML documentation resides. File system paths and URLs are supported. HTML pages will be prefixed with this path when help is displayed in the &lt;code&gt;web&lt;/code&gt; format. This defaults to the documentation path of your Git installation.</source>
          <target state="translated">HTMLドキュメントが存在するパスを指定します。ファイルシステムのパスとURLがサポートされています。ヘルプが &lt;code&gt;web&lt;/code&gt; 形式で表示される場合、HTMLページの前にこのパスが付けられます。デフォルトでは、Gitインストールのドキュメントパスになります。</target>
        </trans-unit>
        <trans-unit id="3939c032cc21518f83cfc7e855a79944401164b0" translate="yes" xml:space="preserve">
          <source>Specify the pathname of a file to use as the template for new commit messages.</source>
          <target state="translated">新しいコミットメッセージのテンプレートとして使用するファイルのパス名を指定します。</target>
        </trans-unit>
        <trans-unit id="626310e55266a25c38521d0786f942652add8252" translate="yes" xml:space="preserve">
          <source>Specify the primary recipient of the emails generated. Generally, this will be the upstream maintainer of the project involved. Default is the value of the &lt;code&gt;sendemail.to&lt;/code&gt; configuration value; if that is unspecified, and --to-cmd is not specified, this will be prompted for.</source>
          <target state="translated">生成される電子メールの主な受信者を指定します。通常、これは関係するプロジェクトの上流のメンテナです。デフォルトは &lt;code&gt;sendemail.to&lt;/code&gt; 構成値の値です。これが指定されておらず、-to-cmdが指定されていない場合は、プロンプトが表示されます。</target>
        </trans-unit>
        <trans-unit id="904cbddb8fe90053f040a40b660f937c8ee221c5" translate="yes" xml:space="preserve">
          <source>Specify the program that will be used to browse your working repository in gitweb. See &lt;a href=&quot;git-instaweb&quot;&gt;git-instaweb[1]&lt;/a&gt;.</source>
          <target state="translated">gitwebで作業リポジトリを参照するために使用されるプログラムを指定します。&lt;a href=&quot;git-instaweb&quot;&gt;git-instaweb [1]を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="87648a4a4b9f3684c45dea895b93d3728e0b89f7" translate="yes" xml:space="preserve">
          <source>Specify the programs that may be used to display help in the &lt;code&gt;man&lt;/code&gt; format. See &lt;a href=&quot;git-help&quot;&gt;git-help[1]&lt;/a&gt;.</source>
          <target state="translated">ヘルプの表示に使用できるプログラムを &lt;code&gt;man&lt;/code&gt; 形式で指定します。&lt;a href=&quot;git-help&quot;&gt;git-help [1]を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c051775f78daae77408669a949bcd688ddbd949c" translate="yes" xml:space="preserve">
          <source>Specify the restore location. If neither option is specified, by default the working tree is restored. Specifying &lt;code&gt;--staged&lt;/code&gt; will only restore the index. Specifying both restores both.</source>
          <target state="translated">復元場所を指定します。どちらのオプションも指定されていない場合、デフォルトで作業ツリーが復元されます。 &lt;code&gt;--staged&lt;/code&gt; を指定すると、インデックスのみが復元されます。両方を指定すると、両方が復元されます。</target>
        </trans-unit>
        <trans-unit id="95b7f682630cddb98a68355ef07c41860159997c" translate="yes" xml:space="preserve">
          <source>Specify the sender of the emails. If not specified on the command line, the value of the &lt;code&gt;sendemail.from&lt;/code&gt; configuration option is used. If neither the command-line option nor &lt;code&gt;sendemail.from&lt;/code&gt; are set, then the user will be prompted for the value. The default for the prompt will be the value of GIT_AUTHOR_IDENT, or GIT_COMMITTER_IDENT if that is not set, as returned by &quot;git var -l&quot;.</source>
          <target state="translated">メールの送信者を指定します。コマンドラインで指定しない場合、 &lt;code&gt;sendemail.from&lt;/code&gt; 構成オプションの値が使用されます。コマンドラインオプションも &lt;code&gt;sendemail.from&lt;/code&gt; も設定されていない場合、ユーザーは値の入力を求められます。プロンプトのデフォルトは、GIT_AUTHOR_IDENTの値、または設定されていない場合はGIT_COMMITTER_IDENTであり、「git var -l」によって返されます。</target>
        </trans-unit>
        <trans-unit id="8cba2f98ceccc0dae91e3c30287bb75513f4e951" translate="yes" xml:space="preserve">
          <source>Specify the style in which conflicted hunks are written out to working tree files upon merge. The default is &quot;merge&quot;, which shows a &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt; conflict marker, changes made by one side, a &lt;code&gt;=======&lt;/code&gt; marker, changes made by the other side, and then a &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; marker. An alternate style, &quot;diff3&quot;, adds a &lt;code&gt;|||||||&lt;/code&gt; marker and the original text before the &lt;code&gt;=======&lt;/code&gt; marker.</source>
          <target state="translated">競合するハンクがマージ時に作業ツリーファイルに書き出されるスタイルを指定します。デフォルトを示す「マージ」さ &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt; 競合マーカーは、片側、によって行われた変更 &lt;code&gt;=======&lt;/code&gt; マーカー、反対側によって行われ、その後変化 &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; マーカー。代替スタイル「diff3」は、 &lt;code&gt;|||||||&lt;/code&gt; を追加しますマーカーと &lt;code&gt;=======&lt;/code&gt; マーカーの前の元のテキスト。</target>
        </trans-unit>
        <trans-unit id="d1c5be6270e8c898e52c9ccc68e940ca06ec404b" translate="yes" xml:space="preserve">
          <source>Specify the system that is used for large (binary) files. Please note that large file systems do not support the &lt;code&gt;git p4 submit&lt;/code&gt; command. Only Git LFS is implemented right now (see &lt;a href=&quot;https://git-lfs.github.com/&quot;&gt;https://git-lfs.github.com/&lt;/a&gt; for more information). Download and install the Git LFS command line extension to use this option and configure it like this:</source>
          <target state="translated">大きな（バイナリ）ファイルに使用するシステムを指定します。大きなファイルシステムは &lt;code&gt;git p4 submit&lt;/code&gt; コマンドをサポートしないことに注意してください。現在、Git LFSのみが実装されています（詳細については、&lt;a href=&quot;https://git-lfs.github.com/&quot;&gt;https：//git-lfs.github.com/&lt;/a&gt;を参照してください）。このオプションを使用するには、Git LFSコマンドライン拡張機能をダウンロードしてインストールし、次のように構成します。</target>
        </trans-unit>
        <trans-unit id="d0eef78fea38d4df295115dcb10e8e7ee7e56973" translate="yes" xml:space="preserve">
          <source>Specify the terminal width. By default &lt;code&gt;git column&lt;/code&gt; will detect the terminal width, or fall back to 80 if it is unable to do so.</source>
          <target state="translated">端子幅を指定してください デフォルトでは、 &lt;code&gt;git column&lt;/code&gt; はターミナルの幅を検出するか、検出できない場合は80にフォールバックします。</target>
        </trans-unit>
        <trans-unit id="724bb2755b4bad5b8b472dcd4850810c5212797c" translate="yes" xml:space="preserve">
          <source>Specify the transfer encoding to be used to send the message over SMTP. 7bit will fail upon encountering a non-ASCII message. quoted-printable can be useful when the repository contains files that contain carriage returns, but makes the raw patch email file (as saved from a MUA) much harder to inspect manually. base64 is even more fool proof, but also even more opaque. auto will use 8bit when possible, and quoted-printable otherwise.</source>
          <target state="translated">SMTP 経由でメッセージを送信する際に使用する転送エンコーディングを指定します。7bitは非ASCIIメッセージに遭遇したときに失敗します。 quoted-printableは、リポジトリにキャリッジリターンを含むファイルが含まれている場合に便利ですが、生のパッチメールファイル(MUAから保存されたもの)を手動で検査するのがはるかに困難になります。</target>
        </trans-unit>
        <trans-unit id="9612f0c17aac603d9a46ca6cb5d976f3bf4c5bf3" translate="yes" xml:space="preserve">
          <source>Specify the type (default: &quot;blob&quot;).</source>
          <target state="translated">タイプを指定します(デフォルトは &quot;blob&quot;)。</target>
        </trans-unit>
        <trans-unit id="13769f1d436d268baed7051a7c066221785b088a" translate="yes" xml:space="preserve">
          <source>Specify the type of dates the frontend will supply to fast-import within &lt;code&gt;author&lt;/code&gt;, &lt;code&gt;committer&lt;/code&gt; and &lt;code&gt;tagger&lt;/code&gt; commands. See &amp;ldquo;Date Formats&amp;rdquo; below for details about which formats are supported, and their syntax.</source>
          <target state="translated">フロントエンドが &lt;code&gt;author&lt;/code&gt; 、 &lt;code&gt;committer&lt;/code&gt; 、 &lt;code&gt;tagger&lt;/code&gt; コマンド内の高速インポートに提供する日付のタイプを指定します。サポートされている形式とその構文の詳細については、以下の「日付形式」を参照してください。</target>
        </trans-unit>
        <trans-unit id="19ebff060f03d17e125a48bf86da29f25cd1bf35" translate="yes" xml:space="preserve">
          <source>Specify the version with which new index files should be initialized. This does not affect existing repositories. If &lt;code&gt;feature.manyFiles&lt;/code&gt; is enabled, then the default is 4.</source>
          <target state="translated">新しいインデックスファイルを初期化するバージョンを指定します。これは既存のリポジトリには影響しません。 &lt;code&gt;feature.manyFiles&lt;/code&gt; が有効な場合、デフォルトは4です。</target>
        </trans-unit>
        <trans-unit id="1dcaca1644c579ca7480d7fe912a3d5f89533d59" translate="yes" xml:space="preserve">
          <source>Specify what action will be performed when there is already at least one trailer with the same &amp;lt;token&amp;gt; in the message. A setting provided with &lt;code&gt;--if-exists&lt;/code&gt; overrides all configuration variables and applies to all &lt;code&gt;--trailer&lt;/code&gt; options until the next occurrence of &lt;code&gt;--if-exists&lt;/code&gt; or &lt;code&gt;--no-if-exists&lt;/code&gt;. Possible actions are &lt;code&gt;addIfDifferent&lt;/code&gt;, &lt;code&gt;addIfDifferentNeighbor&lt;/code&gt;, &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;replace&lt;/code&gt; and &lt;code&gt;doNothing&lt;/code&gt;.</source>
          <target state="translated">メッセージに同じ&amp;lt;token&amp;gt;を持つトレーラがすでに少なくとも1つある場合に実行されるアクションを指定します。 &lt;code&gt;--if-exists&lt;/code&gt; で提供される設定は、すべての構成変数を上書きし、次に &lt;code&gt;--if-exists&lt;/code&gt; または &lt;code&gt;--no-if-exists&lt;/code&gt; が出現するまで、すべての &lt;code&gt;--trailer&lt;/code&gt; オプションに適用されます。可能なアクションは、 &lt;code&gt;addIfDifferent&lt;/code&gt; 、 &lt;code&gt;addIfDifferentNeighbor&lt;/code&gt; 、 &lt;code&gt;add&lt;/code&gt; 、 &lt;code&gt;replace&lt;/code&gt; 、および &lt;code&gt;doNothing&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0811642f4a0657e779f7ae4b567538044cd6208f" translate="yes" xml:space="preserve">
          <source>Specify what action will be performed when there is no other trailer with the same &amp;lt;token&amp;gt; in the message. A setting provided with &lt;code&gt;--if-missing&lt;/code&gt; overrides all configuration variables and applies to all &lt;code&gt;--trailer&lt;/code&gt; options until the next occurrence of &lt;code&gt;--if-missing&lt;/code&gt; or &lt;code&gt;--no-if-missing&lt;/code&gt;. Possible actions are &lt;code&gt;doNothing&lt;/code&gt; or &lt;code&gt;add&lt;/code&gt;.</source>
          <target state="translated">メッセージに同じ&amp;lt;token&amp;gt;を持つトレーラーが他にない場合に実行されるアクションを指定します。 &lt;code&gt;--if-missing&lt;/code&gt; で提供される設定は、すべての構成変数を上書きし、次に &lt;code&gt;--if-missing&lt;/code&gt; または &lt;code&gt;--no-if-missing&lt;/code&gt; が出現するまで、すべての &lt;code&gt;--trailer&lt;/code&gt; オプションに適用されます。可能なアクションは &lt;code&gt;doNothing&lt;/code&gt; または &lt;code&gt;add&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4d686969af43bc9772a0a2bdde0f0d6918dfd1d4" translate="yes" xml:space="preserve">
          <source>Specify what destination ref to update with what source object. The format of a &amp;lt;refspec&amp;gt; parameter is an optional plus &lt;code&gt;+&lt;/code&gt;, followed by the source object &amp;lt;src&amp;gt;, followed by a colon &lt;code&gt;:&lt;/code&gt;, followed by the destination ref &amp;lt;dst&amp;gt;.</source>
          <target state="translated">どのソースオブジェクトでどの宛先参照を更新するかを指定します。&amp;lt;refspec&amp;gt;パラメータの形式は、オプションのプラス &lt;code&gt;+&lt;/code&gt; 、ソースオブジェクト&amp;lt;src&amp;gt;、コロン &lt;code&gt;:&lt;/code&gt; 、宛先ref &amp;lt;dst&amp;gt;の順です。</target>
        </trans-unit>
        <trans-unit id="6138b51fead99efbf1d6930137f2b387251ef604" translate="yes" xml:space="preserve">
          <source>Specify where all new trailers will be added. A setting provided with &lt;code&gt;--where&lt;/code&gt; overrides all configuration variables and applies to all &lt;code&gt;--trailer&lt;/code&gt; options until the next occurrence of &lt;code&gt;--where&lt;/code&gt; or &lt;code&gt;--no-where&lt;/code&gt;. Possible values are &lt;code&gt;after&lt;/code&gt;, &lt;code&gt;before&lt;/code&gt;, &lt;code&gt;end&lt;/code&gt; or &lt;code&gt;start&lt;/code&gt;.</source>
          <target state="translated">すべての新しいトレーラーを追加する場所を指定します。 &lt;code&gt;--where&lt;/code&gt; で提供される設定は、すべての構成変数をオーバーライドし、次に &lt;code&gt;--where&lt;/code&gt; または &lt;code&gt;--no-where&lt;/code&gt; が出現するまで、すべての &lt;code&gt;--trailer&lt;/code&gt; オプションに適用されます。可能な値は &lt;code&gt;after&lt;/code&gt; 、 &lt;code&gt;before&lt;/code&gt; 、 &lt;code&gt;end&lt;/code&gt; 、または &lt;code&gt;start&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9446eb9819e4ea522bac17e494630aff8d54bebb" translate="yes" xml:space="preserve">
          <source>Specify whether supported commands should output in columns. This variable consists of a list of tokens separated by spaces or commas:</source>
          <target state="translated">サポートされているコマンドを列で出力するかどうかを指定します。この変数は、スペースまたはカンマで区切られたトークンのリストで構成されます。</target>
        </trans-unit>
        <trans-unit id="c44825f076cf0385d99447ca6f9388f9e5d821d6" translate="yes" xml:space="preserve">
          <source>Specify whether to output branch listing in &lt;code&gt;git branch&lt;/code&gt; in columns. See &lt;code&gt;column.ui&lt;/code&gt; for details.</source>
          <target state="translated">列の &lt;code&gt;git branch&lt;/code&gt; にブランチ一覧を出力するかどうかを指定します。詳細については、 &lt;code&gt;column.ui&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="eb8ddb4258375ad9322849684e1d07ab6e005bcd" translate="yes" xml:space="preserve">
          <source>Specify whether to output tag listing in &lt;code&gt;git tag&lt;/code&gt; in columns. See &lt;code&gt;column.ui&lt;/code&gt; for details.</source>
          <target state="translated">列の &lt;code&gt;git tag&lt;/code&gt; にタグ一覧を出力するかどうかを指定します。詳細については、 &lt;code&gt;column.ui&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="7607c69174b01d1bb15ae17f25fe8a2d96f9d58f" translate="yes" xml:space="preserve">
          <source>Specify whether to output untracked files in &lt;code&gt;git status&lt;/code&gt; in columns. See &lt;code&gt;column.ui&lt;/code&gt; for details.</source>
          <target state="translated">列に &lt;code&gt;git status&lt;/code&gt; 追跡されていないファイルを出力するかどうかを指定します。詳細については、 &lt;code&gt;column.ui&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="b984e35657451690beb2903dd3dd6390cb372f55" translate="yes" xml:space="preserve">
          <source>Specifying &lt;code&gt;--no-symlinks&lt;/code&gt; instructs &lt;code&gt;git difftool&lt;/code&gt; to create copies instead. &lt;code&gt;--no-symlinks&lt;/code&gt; is the default on Windows.</source>
          <target state="translated">&lt;code&gt;--no-symlinks&lt;/code&gt; を指定すると、代わりにコピーを作成するように &lt;code&gt;git difftool&lt;/code&gt; に指示します。 &lt;code&gt;--no-symlinks&lt;/code&gt; がWindowsのデフォルトです。</target>
        </trans-unit>
        <trans-unit id="3b6b4914f3cbc4ad3df641c0c4177b0ed1427ac9" translate="yes" xml:space="preserve">
          <source>Specifying &lt;code&gt;-b&lt;/code&gt; causes a new branch to be created as if &lt;a href=&quot;git-branch&quot;&gt;git-branch[1]&lt;/a&gt; were called and then checked out. In this case you can use the &lt;code&gt;--track&lt;/code&gt; or &lt;code&gt;--no-track&lt;/code&gt; options, which will be passed to &lt;code&gt;git branch&lt;/code&gt;. As a convenience, &lt;code&gt;--track&lt;/code&gt; without &lt;code&gt;-b&lt;/code&gt; implies branch creation; see the description of &lt;code&gt;--track&lt;/code&gt; below.</source>
          <target state="translated">&lt;code&gt;-b&lt;/code&gt; を指定すると、&lt;a href=&quot;git-branch&quot;&gt;git-branch [1]&lt;/a&gt;が呼び出されてからチェックアウトされたかのように、新しいブランチが作成されます。この場合、 &lt;code&gt;git branch&lt;/code&gt; 渡される &lt;code&gt;--track&lt;/code&gt; または &lt;code&gt;--no-track&lt;/code&gt; オプションを使用できます。便宜上、 &lt;code&gt;-b&lt;/code&gt; なしの &lt;code&gt;--track&lt;/code&gt; はブランチの作成を意味します。以下の &lt;code&gt;--track&lt;/code&gt; の説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="3d1224dfe57ea23830be77ce6389d9ea1f14e370" translate="yes" xml:space="preserve">
          <source>Specifying ranges</source>
          <target state="translated">範囲の指定</target>
        </trans-unit>
        <trans-unit id="c7c8ec2e47baa0d09987a0c4d6001b20abaaf2b4" translate="yes" xml:space="preserve">
          <source>Specifying references</source>
          <target state="translated">リファレンスの指定</target>
        </trans-unit>
        <trans-unit id="393f3ea7b8cd86c4b234c1534e51343677169802" translate="yes" xml:space="preserve">
          <source>Specifying revisions</source>
          <target state="translated">リビジョンの指定</target>
        </trans-unit>
        <trans-unit id="c12054d536cbd9889e1a4db4d75b48d8a7f03cd2" translate="yes" xml:space="preserve">
          <source>Specifying the refs</source>
          <target state="translated">リファレンスの指定</target>
        </trans-unit>
        <trans-unit id="31f2abfdb1a3e7bab64495f843d089d388ea45e0" translate="yes" xml:space="preserve">
          <source>Spend extra cycles to find renames, copies and complete rewrites (very expensive).</source>
          <target state="translated">リネーム、コピー、完全な書き換えを見つけるために余分なサイクルを費やす(非常に高価)。</target>
        </trans-unit>
        <trans-unit id="6b695c34f0798ffd5026fe42cf041af8a841d861" translate="yes" xml:space="preserve">
          <source>Spend extra time to make sure the smallest possible diff is produced.</source>
          <target state="translated">余分な時間をかけて、可能な限り小さなデフを作るようにしましょう。</target>
        </trans-unit>
        <trans-unit id="8622c4dc8f748203e018cc0d2ec4e20b07c9830d" translate="yes" xml:space="preserve">
          <source>Split a commit apart into a sequence of commits</source>
          <target state="translated">コミットを一連のコミットに分割する</target>
        </trans-unit>
        <trans-unit id="9da7a78d6cd0199fb3cad874edd1ba683b830e12" translate="yes" xml:space="preserve">
          <source>Split index</source>
          <target state="translated">スプリットインデックス</target>
        </trans-unit>
        <trans-unit id="704e5487b89b9b30fcd9e576ab8763e642a1b938" translate="yes" xml:space="preserve">
          <source>Splits a mbox file or a Maildir into a list of files: &quot;0001&quot; &quot;0002&quot; .. in the specified directory so you can process them further from there.</source>
          <target state="translated">mboxファイルやMaildirをファイルのリストに分割します。0001&quot; &quot;0001&quot; &quot;0002&quot; ...を指定したディレクトリにあるファイルのリストに分割することで、そこからさらに処理することができます。</target>
        </trans-unit>
        <trans-unit id="30bc5e98fc4346f828d1d387cd6e1c89bab7df56" translate="yes" xml:space="preserve">
          <source>Splits mail messages in a mailbox into commit log message, authorship information and patches, and applies them to the current branch.</source>
          <target state="translated">メールボックス内のメールメッセージをコミットログメッセージ、オーサリング情報、パッチに分割し、現在のブランチに適用します。</target>
        </trans-unit>
        <trans-unit id="05a6d55bcdcfd4539a8e45cc0dd3c2f28f1895ad" translate="yes" xml:space="preserve">
          <source>Splitting a (logically single) project into multiple repositories and tying them back together. This can be used to overcome current limitations of Git&amp;rsquo;s implementation to have finer grained access:</source>
          <target state="translated">（論理的に単一の）プロジェクトを複数のリポジトリーに分割し、それらを結合します。これを使用して、Gitの実装の現在の制限を克服し、よりきめ細かいアクセスを行うことができます。</target>
        </trans-unit>
        <trans-unit id="dca5d29240b446b8bdd6f26fb0b4e46cb995769f" translate="yes" xml:space="preserve">
          <source>Splitting commits</source>
          <target state="translated">コミットの分割</target>
        </trans-unit>
        <trans-unit id="ab83ac1fcfed8f50260b11e517c47e9b533419b5" translate="yes" xml:space="preserve">
          <source>Splitting the CVS log into patch sets is done by &lt;code&gt;cvsps&lt;/code&gt;. At least version 2.1 is required.</source>
          <target state="translated">CVSログをパッチセットに分割するには、 &lt;code&gt;cvsps&lt;/code&gt; を使用します。少なくともバージョン2.1が必要です。</target>
        </trans-unit>
        <trans-unit id="a74a609811ea3b4041281496e2aa5c500ba6558b" translate="yes" xml:space="preserve">
          <source>Sq-quote</source>
          <target state="translated">Sq-quote</target>
        </trans-unit>
        <trans-unit id="d3e10219341e654fff6647b0dadeaeaf0534cae6" translate="yes" xml:space="preserve">
          <source>Squelch the progress indicator.</source>
          <target state="translated">進捗状況の表示をスクエルチします。</target>
        </trans-unit>
        <trans-unit id="56175f21751e04201e148f2612c700747850548a" translate="yes" xml:space="preserve">
          <source>Start &lt;code&gt;git gui&lt;/code&gt; and arrange to make exactly one commit before exiting and returning to the shell. The interface is limited to only commit actions, slightly reducing the application&amp;rsquo;s startup time and simplifying the menubar.</source>
          <target state="translated">&lt;code&gt;git gui&lt;/code&gt; を起動し、シェルを終了してシェルに戻る前に、1回だけコミットするように調整します。インターフェイスはコミットアクションのみに制限され、アプリケーションの起動時間をわずかに短縮し、メニューバーを簡素化します。</target>
        </trans-unit>
        <trans-unit id="1ad6edca0ad31761798d28bd8f2bcba01ec6ebde" translate="yes" xml:space="preserve">
          <source>Start a blame viewer on the specified file on the given version (or working directory if not specified).</source>
          <target state="translated">指定されたバージョン(指定されていない場合は作業ディレクトリ)で指定されたファイル上で blame ビューアを起動します。</target>
        </trans-unit>
        <trans-unit id="27818282f52d064df23dffafcd6a743ee7870fc8" translate="yes" xml:space="preserve">
          <source>Start a new Git repository for an existing code base</source>
          <target state="translated">既存のコードベースに対して新しい Git リポジトリを開始する</target>
        </trans-unit>
        <trans-unit id="749535e22d531edd1c6d9e666c57e169bc2a2908" translate="yes" xml:space="preserve">
          <source>Start a tree browser showing all files in the specified commit. Files selected through the browser are opened in the blame viewer.</source>
          <target state="translated">指定されたコミット内のすべてのファイルを表示するツリーブラウザを起動します。ブラウザで選択されたファイルは blame ビューアで開かれます。</target>
        </trans-unit>
        <trans-unit id="4f65c13509b4c270214524b3ab095bad926fc4e3" translate="yes" xml:space="preserve">
          <source>Start an interactive rebase with &lt;code&gt;git rebase -i &amp;lt;commit&amp;gt;^&lt;/code&gt;, where &amp;lt;commit&amp;gt; is the commit you want to split. In fact, any commit range will do, as long as it contains that commit.</source>
          <target state="translated">&lt;code&gt;git rebase -i &amp;lt;commit&amp;gt;^&lt;/code&gt; でインタラクティブなリベースを開始します。ここで、&amp;lt;commit&amp;gt;は分割するコミットです。実際、そのコミットが含まれている限り、どのコミット範囲でも問題ありません。</target>
        </trans-unit>
        <trans-unit id="e89944344f3db8073a18706746155c852e5164e1" translate="yes" xml:space="preserve">
          <source>Start cleaning files and directories, and then quit.</source>
          <target state="translated">ファイルやディレクトリのクリーニングを開始し、終了します。</target>
        </trans-unit>
        <trans-unit id="b87ef51ca99e7074691b94843e801ff9544539ca" translate="yes" xml:space="preserve">
          <source>Start development from a known tag</source>
          <target state="translated">既知のタグから開発を開始</target>
        </trans-unit>
        <trans-unit id="57f8f31bd16af3371648ce77ae5076e70d2a7e21" translate="yes" xml:space="preserve">
          <source>Start it with the last commit you want to retain as-is:</source>
          <target state="translated">そのまま保持したい最後のコミットから開始します。</target>
        </trans-unit>
        <trans-unit id="2deb883b26612605cc58ed80bbd657e3f5419b69" translate="yes" xml:space="preserve">
          <source>Start numbering the patches at &amp;lt;n&amp;gt; instead of 1.</source>
          <target state="translated">1ではなく&amp;lt;n&amp;gt;からパッチの番号付けを開始します。</target>
        </trans-unit>
        <trans-unit id="f25f51b92f6dabcbe2c2bbe2f01c2d471018dd10" translate="yes" xml:space="preserve">
          <source>Start off with just creating any random files that you want to maintain in your Git repository. We&amp;rsquo;ll start off with a few bad examples, just to get a feel for how this works:</source>
          <target state="translated">まず、Gitリポジトリで維持したいランダムファイルを作成します。これがどのように機能するかを理解するために、いくつかの悪い例から始めます。</target>
        </trans-unit>
        <trans-unit id="93ea699c6796ebb7b82a3a5927dc702e8f1a7316" translate="yes" xml:space="preserve">
          <source>Start the httpd instance and exit. Regenerate configuration files as necessary for spawning a new instance.</source>
          <target state="translated">httpd インスタンスを起動して終了します。新しいインスタンスを生成するために必要な設定ファイルを再生成します。</target>
        </trans-unit>
        <trans-unit id="4e8cde71c6f29e3b4dc0142edc8a7bdf1a0bc89b" translate="yes" xml:space="preserve">
          <source>Start the stream with a &lt;code&gt;feature done&lt;/code&gt; stanza, and terminate it with a &lt;code&gt;done&lt;/code&gt; command.</source>
          <target state="translated">&lt;code&gt;feature done&lt;/code&gt; スタンザでストリームを開始し、 &lt;code&gt;done&lt;/code&gt; コマンドでストリームを終了します。</target>
        </trans-unit>
        <trans-unit id="96e592387dc94e730df0ef669b5a78ed012d4c94" translate="yes" xml:space="preserve">
          <source>Starting a bisection</source>
          <target state="translated">二分法の開始</target>
        </trans-unit>
        <trans-unit id="b8f1956c80187223247d01b968f642bf0007a014" translate="yes" xml:space="preserve">
          <source>Starting point at which to create the new commits. If the --onto option is not specified, the starting point is &amp;lt;upstream&amp;gt;. May be any valid commit, and not just an existing branch name.</source>
          <target state="translated">新しいコミットを作成する開始点。--ontoオプションが指定されていない場合、開始点は&amp;lt;upstream&amp;gt;です。既存のブランチ名だけでなく、任意の有効なコミットである可能性があります。</target>
        </trans-unit>
        <trans-unit id="b2a5514cb8b0c290a6aeca31b2e191aff35672b1" translate="yes" xml:space="preserve">
          <source>Stash the changes in a dirty working directory away</source>
          <target state="translated">汚れた作業ディレクトリに変更点を隠しておく</target>
        </trans-unit>
        <trans-unit id="abb935cbc47e1b75159f277e4b22bfc5de7bbee9" translate="yes" xml:space="preserve">
          <source>Static configuration of usernames for a given authentication context.</source>
          <target state="translated">指定された認証コンテキスト用のユーザ名の静的な設定。</target>
        </trans-unit>
        <trans-unit id="20520ab082263228efd3ab7ffc11e41906666da4" translate="yes" xml:space="preserve">
          <source>Status letters C and R are always followed by a score (denoting the percentage of similarity between the source and target of the move or copy). Status letter M may be followed by a score (denoting the percentage of dissimilarity) for file rewrites.</source>
          <target state="translated">ステータスレターCとRの後には常にスコアが続きます(移動またはコピーのソースとターゲットの間の類似性のパーセンテージを示す)。ファイルの書き換えでは、ステータス文字Mの後にスコア(非類似性の割合を示す)が続くことがあります。</target>
        </trans-unit>
        <trans-unit id="5910dfc64a273edb8d032604ca6d54bef3bf2f4e" translate="yes" xml:space="preserve">
          <source>Stop the httpd instance and exit. This does not generate any of the configuration files for spawning a new instance, nor does it close the browser.</source>
          <target state="translated">httpd インスタンスを停止して終了します。これは、新しいインスタンスを生成するための設定ファイルを生成したり、ブラウザを閉じたりすることはありません。</target>
        </trans-unit>
        <trans-unit id="12d3bab755f474b20ad13c1ab918e01e5f4eb7c4" translate="yes" xml:space="preserve">
          <source>Stop when a given path disappears from the tree.</source>
          <target state="translated">与えられたパスが木から消えたときに停止します。</target>
        </trans-unit>
        <trans-unit id="7363904e3ee0fd364e644f2e1b28c12dd383e027" translate="yes" xml:space="preserve">
          <source>Storage format</source>
          <target state="translated">保存形式</target>
        </trans-unit>
        <trans-unit id="9ff8274c9fcae633894b9e7ab1c37fd6e74f1f7a" translate="yes" xml:space="preserve">
          <source>Store Git commit times in the local time zone instead of UTC. This makes &lt;code&gt;git log&lt;/code&gt; (even without --date=local) show the same times that &lt;code&gt;svn log&lt;/code&gt; would in the local time zone.</source>
          <target state="translated">Gitコミット時刻をUTCではなくローカルタイムゾーンに保存します。これにより、 &lt;code&gt;git log&lt;/code&gt; （--date = localなしでも）が、 &lt;code&gt;svn log&lt;/code&gt; がローカルタイムゾーンで表示するのと同じ時間を表示します。</target>
        </trans-unit>
        <trans-unit id="c403801561a0441c1d742dd0499050f55d110cd9" translate="yes" xml:space="preserve">
          <source>Store a given stash created via &lt;code&gt;git stash create&lt;/code&gt; (which is a dangling merge commit) in the stash ref, updating the stash reflog. This is intended to be useful for scripts. It is probably not the command you want to use; see &quot;push&quot; above.</source>
          <target state="translated">&lt;code&gt;git stash create&lt;/code&gt; （ダングリングマージコミット）で作成された特定のstashをstash refに保存し、stash reflogを更新します。これはスクリプトで役立つことを意図しています。おそらく、使用したいコマンドではありません。上記の「プッシュ」を参照してください。</target>
        </trans-unit>
        <trans-unit id="b41300dc42c243e3949e2ecb7a4c10aea769103e" translate="yes" xml:space="preserve">
          <source>Store credentials indefinitely on disk. See &lt;a href=&quot;git-credential-store&quot;&gt;git-credential-store[1]&lt;/a&gt; for details.</source>
          <target state="translated">資格情報を無期限にディスクに保存します。詳細については、&lt;a href=&quot;git-credential-store&quot;&gt;git-credential-store [1]&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="5597429620f06451a38a8e17b35a345310b01123" translate="yes" xml:space="preserve">
          <source>Store the fetched branch into a local branch before merging into the current branch:</source>
          <target state="translated">現在のブランチにマージする前に、取得したブランチをローカルブランチに保存します。</target>
        </trans-unit>
        <trans-unit id="687760eb98a14d7d5a6fbbba834cf9ccaaf83ea1" translate="yes" xml:space="preserve">
          <source>Store the files instead of deflating them.</source>
          <target state="translated">ファイルをデフレさせるのではなく、保存します。</target>
        </trans-unit>
        <trans-unit id="1512a579e2c05cbf63724a7c8d50327696297b00" translate="yes" xml:space="preserve">
          <source>Stores a set of &quot;objects&quot;, and an individual &lt;a href=&quot;#def_object&quot;&gt;object&lt;/a&gt; is identified by its &lt;a href=&quot;#def_object_name&quot;&gt;object name&lt;/a&gt;. The objects usually live in &lt;code&gt;$GIT_DIR/objects/&lt;/code&gt;.</source>
          <target state="translated">「オブジェクト」のセットを格納し、個々の&lt;a href=&quot;#def_object&quot;&gt;オブジェクト&lt;/a&gt;はその&lt;a href=&quot;#def_object_name&quot;&gt;オブジェクト名&lt;/a&gt;によって識別されます。オブジェクトは通常 &lt;code&gt;$GIT_DIR/objects/&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="c6349a625008b244d26dbb9000ad7480816812a5" translate="yes" xml:space="preserve">
          <source>Stores shorthands for URL and default refnames for use when interacting with remote repositories via &lt;code&gt;git fetch&lt;/code&gt;, &lt;code&gt;git pull&lt;/code&gt; and &lt;code&gt;git push&lt;/code&gt; commands. See the REMOTES section in &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt; for details. This mechanism is legacy and not likely to be found in modern repositories. This directory is ignored if $GIT_COMMON_DIR is set and &quot;$GIT_COMMON_DIR/remotes&quot; will be used instead.</source>
          <target state="translated">&lt;code&gt;git fetch&lt;/code&gt; 、 &lt;code&gt;git pull&lt;/code&gt; 、および &lt;code&gt;git push&lt;/code&gt; コマンドを介してリモートリポジトリとやり取りするときに使用するURLとデフォルトの参照名の省略形を格納します。詳細については、&lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt;のREMOTESセクションを参照してください。このメカニズムはレガシーであり、最近のリポジトリには見られないでしょう。$ GIT_COMMON_DIRが設定されており、代わりに「$ GIT_COMMON_DIR / remotes」が使用される場合、このディレクトリは無視されます。</target>
        </trans-unit>
        <trans-unit id="39f2d5fc66110ba4ba0f8069c43a058a9f84529f" translate="yes" xml:space="preserve">
          <source>Storing multiple repositories as namespaces of a single repository avoids storing duplicate copies of the same objects, such as when storing multiple branches of the same source. The alternates mechanism provides similar support for avoiding duplicates, but alternates do not prevent duplication between new objects added to the repositories without ongoing maintenance, while namespaces do.</source>
          <target state="translated">複数のリポジトリを一つのリポジトリの名前空間として保存することで、同じソースの複数のブランチを保存する場合のように、同じオブジェクトの重複を避けることができます。オルタネート機構は重複を避けるために同様のサポートを提供しますが、名前空間が重複を防ぐのに対し、オルタネートは継続的なメンテナンスなしにリポジトリに追加された新しいオブジェクト間の重複を防ぐことはできません。</target>
        </trans-unit>
        <trans-unit id="ca1c76454e0d7e7718b023221d2b0aad3d2a1aba" translate="yes" xml:space="preserve">
          <source>Stream Comments</source>
          <target state="translated">ストリームコメント</target>
        </trans-unit>
        <trans-unit id="3df63b7acb0522da685dad5fe84b81fdd7b25264" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="translated">String</target>
        </trans-unit>
        <trans-unit id="5ab8d5b6efb1646dea2e4ea7d3282e3cb65c24cb" translate="yes" xml:space="preserve">
          <source>String to be printed at the beginning of each line.</source>
          <target state="translated">各行の先頭に印刷される文字列。</target>
        </trans-unit>
        <trans-unit id="382f9b3217a7726b3a52ca62702799f6d5434b48" translate="yes" xml:space="preserve">
          <source>String to be printed at the end of each line, including newline character.</source>
          <target state="translated">改行文字を含む、各行の末尾に印刷する文字列。</target>
        </trans-unit>
        <trans-unit id="ae0208ff14e492381101b38c4426143fc9d98dd6" translate="yes" xml:space="preserve">
          <source>String(s) &lt;code&gt;receive-pack&lt;/code&gt; and &lt;code&gt;upload-pack&lt;/code&gt; use to decide which refs to omit from their initial advertisements. Use more than one definition to specify multiple prefix strings. A ref that is under the hierarchies listed in the value of this variable is excluded, and is hidden when responding to &lt;code&gt;git push&lt;/code&gt; or &lt;code&gt;git
fetch&lt;/code&gt;. See &lt;code&gt;receive.hideRefs&lt;/code&gt; and &lt;code&gt;uploadpack.hideRefs&lt;/code&gt; for program-specific versions of this config.</source>
          <target state="translated">文字列 &lt;code&gt;receive-pack&lt;/code&gt; および &lt;code&gt;upload-pack&lt;/code&gt; を使用して、最初の通知から除外する参照を決定します。複数の定義を使用して、複数のプレフィックス文字列を指定します。この変数の値にリストされている階層の下にある参照は除外され、 &lt;code&gt;git push&lt;/code&gt; または &lt;code&gt;git fetch&lt;/code&gt; に応答するときに非表示になります。参照 &lt;code&gt;receive.hideRefs&lt;/code&gt; と &lt;code&gt;uploadpack.hideRefs&lt;/code&gt; この設定のプログラム固有のバージョンの。</target>
        </trans-unit>
        <trans-unit id="dd5fa82aac351e4a1096fc62004ba110d66fe810" translate="yes" xml:space="preserve">
          <source>Strip leading and trailing empty lines, trailing whitespace, commentary and collapse consecutive empty lines.</source>
          <target state="translated">先頭の空行と末尾の空行、末尾の空白、コメント、連続する空行の折り返しを取り除く。</target>
        </trans-unit>
        <trans-unit id="7c8cf84261f17414d41a19324152deb0638ecb13" translate="yes" xml:space="preserve">
          <source>Subcommands</source>
          <target state="translated">Subcommands</target>
        </trans-unit>
        <trans-unit id="2dacf65959849884a011f36f76a04eebea94c5ea" translate="yes" xml:space="preserve">
          <source>Submit</source>
          <target state="translated">Submit</target>
        </trans-unit>
        <trans-unit id="f3de51d87e152838b373a65e626718325c16a058" translate="yes" xml:space="preserve">
          <source>Submit only the specified commit or range of commits, instead of the full list of changes that are in the current Git branch.</source>
          <target state="translated">現在の Git ブランチにある変更の一覧ではなく、指定したコミットや範囲のコミットのみを提出します。</target>
        </trans-unit>
        <trans-unit id="08c8f65685b697a18634ff4dd66ae0c7b7f8944c" translate="yes" xml:space="preserve">
          <source>Submit options</source>
          <target state="translated">オプションの提出</target>
        </trans-unit>
        <trans-unit id="3e96d88de40c1b4ce507f5624d2a7a2ae94fe14f" translate="yes" xml:space="preserve">
          <source>Submit variables</source>
          <target state="translated">変数の提出</target>
        </trans-unit>
        <trans-unit id="0213e9a40d8de329179170c49c9f0b36b9c8f25d" translate="yes" xml:space="preserve">
          <source>Submit your commits back to p4:</source>
          <target state="translated">コミットを p4 に戻してください。</target>
        </trans-unit>
        <trans-unit id="45b948a665e37752fe7a51975e7be3fc7f05181f" translate="yes" xml:space="preserve">
          <source>Submitting changes from a Git repository back to the p4 repository requires a separate p4 client workspace. This should be specified using the &lt;code&gt;P4CLIENT&lt;/code&gt; environment variable or the Git configuration variable &lt;code&gt;git-p4.client&lt;/code&gt;. The p4 client must exist, but the client root will be created and populated if it does not already exist.</source>
          <target state="translated">Gitリポジトリからp4リポジトリに変更を送信するには、個別のp4クライアントワークスペースが必要です。これは、 &lt;code&gt;P4CLIENT&lt;/code&gt; 環境変数またはGit構成変数 &lt;code&gt;git-p4.client&lt;/code&gt; を使用して指定する必要があります。p4クライアントは存在する必要がありますが、まだ存在しない場合は、クライアントルートが作成され、データが入力されます。</target>
        </trans-unit>
        <trans-unit id="6fdf0bad4a57f28ad8887a6fe4e3d9618491f48f" translate="yes" xml:space="preserve">
          <source>Submitting patches to a project</source>
          <target state="translated">プロジェクトへのパッチの提出</target>
        </trans-unit>
        <trans-unit id="d2d7b7a6dabf5680ef6fc53443124ea60acd88af" translate="yes" xml:space="preserve">
          <source>Submitting requires a p4 client, which is not in the same location as the Git repository. Patches are applied, one at a time, to this p4 client and submitted from there.</source>
          <target state="translated">送信にはp4クライアントが必要ですが、これはGitリポジトリと同じ場所にはありません。パッチはこの p4 クライアントに一度に一つずつ適用され、そこから提出されます。</target>
        </trans-unit>
        <trans-unit id="e107551e51d7866e29fbfac7f1a9d70e892a1c9c" translate="yes" xml:space="preserve">
          <source>Submodule operations can be configured using the following mechanisms (from highest to lowest precedence):</source>
          <target state="translated">サブモジュールの操作は、以下の仕組みで設定することができます(優先順位の高いものから順に)。</target>
        </trans-unit>
        <trans-unit id="12d390f8025584ad2ceb29d8156199827eb766f2" translate="yes" xml:space="preserve">
          <source>Submodules</source>
          <target state="translated">Submodules</target>
        </trans-unit>
        <trans-unit id="8b3b72a48d6b77673f309811c21a1f34bda69f2a" translate="yes" xml:space="preserve">
          <source>Submodules are initialized and cloned using their default settings. This is equivalent to running &lt;code&gt;git submodule update --init --recursive &amp;lt;pathspec&amp;gt;&lt;/code&gt; immediately after the clone is finished. This option is ignored if the cloned repository does not have a worktree/checkout (i.e. if any of &lt;code&gt;--no-checkout&lt;/code&gt;/&lt;code&gt;-n&lt;/code&gt;, &lt;code&gt;--bare&lt;/code&gt;, or &lt;code&gt;--mirror&lt;/code&gt; is given)</source>
          <target state="translated">サブモジュールは、デフォルト設定を使用して初期化および複製されます。これは、クローンが完了した直後に &lt;code&gt;git submodule update --init --recursive &amp;lt;pathspec&amp;gt;&lt;/code&gt; を実行するのと同じです。クローンされたリポジトリにワークツリー/チェックアウトがない場合（つまり、 &lt;code&gt;--no-checkout&lt;/code&gt; &lt;code&gt;--bare&lt;/code&gt; -checkout / &lt;code&gt;-n&lt;/code&gt; 、-- bare、または &lt;code&gt;--mirror&lt;/code&gt; のいずれかが指定されている場合）、このオプションは無視されます</target>
        </trans-unit>
        <trans-unit id="f0558d8aae211aae78435cf5f18fbee56b357b16" translate="yes" xml:space="preserve">
          <source>Submodules can be used for at least two different use cases:</source>
          <target state="translated">サブモジュールは、少なくとも2つの異なるユースケースで使用することができます。</target>
        </trans-unit>
        <trans-unit id="2a4ac6e80eae220504fcac25436c9a1e818ef8b5" translate="yes" xml:space="preserve">
          <source>Submodules can take the following forms:</source>
          <target state="translated">サブモジュールは以下の形式をとることができます。</target>
        </trans-unit>
        <trans-unit id="8ee6b51df0a5b53ba35723ec36f91cb14154873c" translate="yes" xml:space="preserve">
          <source>Submodules have more state and instead report M the submodule has a different HEAD than recorded in the index m the submodule has modified content ? the submodule has untracked files since modified content or untracked files in a submodule cannot be added via &lt;code&gt;git add&lt;/code&gt; in the superproject to prepare a commit.</source>
          <target state="translated">サブモジュールにはより多くの状態があり、代わりにMを報告します。サブモジュールは、インデックスに記録されたものとは異なるHEADを持っています。サブプロジェクト内の変更されたコンテンツまたは追跡されていないファイルをスーパープロジェクトの &lt;code&gt;git add&lt;/code&gt; を介して追加してコミットを準備できないため、サブモジュールに追跡されていないファイルがあります。</target>
        </trans-unit>
        <trans-unit id="2a03a02ecd76c4aa6d233be9ed15c5b8f09cfe2e" translate="yes" xml:space="preserve">
          <source>Subsection names are case sensitive and can contain any characters except newline and the null byte. Doublequote &lt;code&gt;&quot;&lt;/code&gt; and backslash can be included by escaping them as &lt;code&gt;\&quot;&lt;/code&gt; and &lt;code&gt;\\&lt;/code&gt;, respectively. Backslashes preceding other characters are dropped when reading; for example, &lt;code&gt;\t&lt;/code&gt; is read as &lt;code&gt;t&lt;/code&gt; and &lt;code&gt;\0&lt;/code&gt; is read as &lt;code&gt;0&lt;/code&gt; Section headers cannot span multiple lines. Variables may belong directly to a section or to a given subsection. You can have &lt;code&gt;[section]&lt;/code&gt; if you have &lt;code&gt;[section &quot;subsection&quot;]&lt;/code&gt;, but you don&amp;rsquo;t need to.</source>
          <target state="translated">サブセクション名は大文字と小文字が区別され、改行とnullバイト以外の任意の文字を含めることができます。二重引用符 &lt;code&gt;&quot;&lt;/code&gt; とバックスラッシュは、それぞれ &lt;code&gt;\&quot;&lt;/code&gt; と &lt;code&gt;\\&lt;/code&gt; としてエスケープすることで含めることができます。他の文字の前のバックスラッシュは読み取り時に削除されます。例えば、 &lt;code&gt;\t&lt;/code&gt; として読み出され &lt;code&gt;t&lt;/code&gt; 及び &lt;code&gt;\0&lt;/code&gt; として読み出される &lt;code&gt;0&lt;/code&gt; セクションヘッダが複数行にまたがることができません。変数は、セクションまたは特定のサブセクションに直接属している場合があります。 &lt;code&gt;[section &quot;subsection&quot;]&lt;/code&gt; がある場合は &lt;code&gt;[section]&lt;/code&gt; を使用できますが、必須ではありません。</target>
        </trans-unit>
        <trans-unit id="99e9a313960d39fea11c6c21bc5f471c5ed54f4e" translate="yes" xml:space="preserve">
          <source>Subsequent requests are then made directly to the service &lt;code&gt;$GIT_URL/git-upload-pack&lt;/code&gt;. (This works the same for git-receive-pack).</source>
          <target state="translated">その後のリクエストは、サービス &lt;code&gt;$GIT_URL/git-upload-pack&lt;/code&gt; に対して直接行われます。（これはgit-receive-packと同じように機能します）。</target>
        </trans-unit>
        <trans-unit id="ecd7815bae661c84db8b72f60f38c2e3bca8ef1f" translate="yes" xml:space="preserve">
          <source>Subsequent updates to branches always create new files under &lt;code&gt;$GIT_DIR/refs&lt;/code&gt; directory hierarchy.</source>
          <target state="translated">その後のブランチの更新では、常に &lt;code&gt;$GIT_DIR/refs&lt;/code&gt; ディレクトリ階層の下に新しいファイルが作成されます。</target>
        </trans-unit>
        <trans-unit id="b2bf2538aec79c0d5fa040a786e252ac3772aa80" translate="yes" xml:space="preserve">
          <source>Substitute the character &quot;/&quot; in branch names with &amp;lt;subst&amp;gt;</source>
          <target state="translated">ブランチ名の文字「/」を&amp;lt;subst&amp;gt;に置き換えます</target>
        </trans-unit>
        <trans-unit id="d44c96fa5a053386ed38d9e6a7cca3107588bf57" translate="yes" xml:space="preserve">
          <source>Successful execution (a zero exit status) of this hook does not ensure the ref will actually be updated, it is only a prerequisite. As such it is not a good idea to send notices (e.g. email) from this hook. Consider using the post-receive hook instead.</source>
          <target state="translated">このフックの実行に成功した(終了ステータスがゼロになった)からといって、 refが実際に更新されることを保証するものではありません。そのため、このフックから通知(例えば電子メール)を送るのは良い考えではありません。代わりに post-receive フックを使うことを検討してください。</target>
        </trans-unit>
        <trans-unit id="0454547376d4a4928bbfee6331b7c2a9fb4a2161" translate="yes" xml:space="preserve">
          <source>Such duplicates are generally frowned upon because they clutter up history, making it harder to follow. To clean things up, you need to transplant the commits on &lt;code&gt;topic&lt;/code&gt; to the new &lt;code&gt;subsystem&lt;/code&gt; tip, i.e., rebase &lt;code&gt;topic&lt;/code&gt;. This becomes a ripple effect: anyone downstream from &lt;code&gt;topic&lt;/code&gt; is forced to rebase too, and so on!</source>
          <target state="translated">このような複製は、履歴が乱雑になり、追跡が困難になるため、一般的には嫌われます。クリーンアップするには、 &lt;code&gt;topic&lt;/code&gt; のコミットを新しい &lt;code&gt;subsystem&lt;/code&gt; ヒント、つまりrebase &lt;code&gt;topic&lt;/code&gt; に移植する必要があります。これは波及効果になります。 &lt;code&gt;topic&lt;/code&gt; 下流にいる誰もがリベースを余儀なくされます。</target>
        </trans-unit>
        <trans-unit id="8866d8895f273e182aecc88b4155660c1e2db399" translate="yes" xml:space="preserve">
          <source>Summarize &lt;code&gt;git log&lt;/code&gt; output</source>
          <target state="translated">&lt;code&gt;git log&lt;/code&gt; 出力の要約</target>
        </trans-unit>
        <trans-unit id="ec1e3fb20faac142815eb47774b44cb84610e827" translate="yes" xml:space="preserve">
          <source>Summarizes &lt;code&gt;git log&lt;/code&gt; output in a format suitable for inclusion in release announcements. Each commit will be grouped by author and title.</source>
          <target state="translated">リリースアナウンスに含めるのに適した形式で &lt;code&gt;git log&lt;/code&gt; 出力を要約します。各コミットは作者とタイトルでグループ化されます。</target>
        </trans-unit>
        <trans-unit id="5c7562d8e87120565b992b08061dcfabc4f3c861" translate="yes" xml:space="preserve">
          <source>Supplies raw data (for use as blob/file content, commit messages, or annotated tag messages) to fast-import. Data can be supplied using an exact byte count or delimited with a terminating line. Real frontends intended for production-quality conversions should always use the exact byte count format, as it is more robust and performs better. The delimited format is intended primarily for testing fast-import.</source>
          <target state="translated">生データ (ブロブ/ファイルの内容、コミットメッセージ、または注釈付きタグメッセージとして使用するため)を提供して高速インポートします。データは、正確なバイト数を使用して供給するか、終端行で区切って供給することができます。実運用品質の変換を目的とした実際のフロントエンドでは、より堅牢でパフォーマンスが良いため、常に正確なバイト数形式を使用する必要があります。区切り形式は、主に高速インポートをテストするためのものです。</target>
        </trans-unit>
        <trans-unit id="e8dbb2eeb155ce2917c101c99bacbd864a5c427e" translate="yes" xml:space="preserve">
          <source>Support for these types of regular expressions is an optional compile-time dependency. If Git wasn&amp;rsquo;t compiled with support for them providing this option will cause it to die.</source>
          <target state="translated">これらのタイプの正規表現のサポートは、コンパイル時のオプションの依存関係です。Gitがそれらをサポートするようにコンパイルされていなかった場合、このオプションを指定するとGitが停止します。</target>
        </trans-unit>
        <trans-unit id="8e97694d704a0343a9b684d493f12b44246fec5f" translate="yes" xml:space="preserve">
          <source>Support for this command is mandatory.</source>
          <target state="translated">このコマンドのサポートは必須です。</target>
        </trans-unit>
        <trans-unit id="e1b49c8e0d2e923baa9b1bdde89fd2d2c159197a" translate="yes" xml:space="preserve">
          <source>Supported commands: &lt;code&gt;connect&lt;/code&gt;.</source>
          <target state="translated">サポートされるコマンド： &lt;code&gt;connect&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f0b920ef57768d484ba1cc526d81f954a574c57f" translate="yes" xml:space="preserve">
          <source>Supported commands: &lt;code&gt;list for-push&lt;/code&gt;, &lt;code&gt;export&lt;/code&gt;.</source>
          <target state="translated">サポートされるコマンド： &lt;code&gt;list for-push&lt;/code&gt; 、 &lt;code&gt;export&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="72ec6998fb5b35dff686188df85ab0e3ad151b49" translate="yes" xml:space="preserve">
          <source>Supported commands: &lt;code&gt;list for-push&lt;/code&gt;, &lt;code&gt;push&lt;/code&gt;.</source>
          <target state="translated">サポートされるコマンド： &lt;code&gt;list for-push&lt;/code&gt; 、 &lt;code&gt;push&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5829938d9cd5455d30d44c2ed56081b81ad0e8b1" translate="yes" xml:space="preserve">
          <source>Supported commands: &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;fetch&lt;/code&gt;.</source>
          <target state="translated">サポートされているコマンド： &lt;code&gt;list&lt;/code&gt; 、 &lt;code&gt;fetch&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a4005d18cc0bff6da83fb1c69518c92481df2684" translate="yes" xml:space="preserve">
          <source>Supported commands: &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;import&lt;/code&gt;.</source>
          <target state="translated">サポートされているコマンド： &lt;code&gt;list&lt;/code&gt; 、 &lt;code&gt;import&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ff15abbc5988387a102f85b87106fa0f9a061a4c" translate="yes" xml:space="preserve">
          <source>Supported commands: &lt;code&gt;stateless-connect&lt;/code&gt;.</source>
          <target state="translated">サポートされるコマンド： &lt;code&gt;stateless-connect&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7d7833eb7ee78a4c26a83fcc81c3d2e9095611eb" translate="yes" xml:space="preserve">
          <source>Supported if the helper has the &quot;connect&quot; capability.</source>
          <target state="translated">ヘルパーが &quot;connect&quot; 機能を持っている場合にサポートされます。</target>
        </trans-unit>
        <trans-unit id="3a93883be31e9529a29debf1107a5749f91adad7" translate="yes" xml:space="preserve">
          <source>Supported if the helper has the &quot;export&quot; capability.</source>
          <target state="translated">ヘルパーが &quot;export &quot;機能を持っている場合にサポートされます。</target>
        </trans-unit>
        <trans-unit id="18465219e925f5ab7417753a2928593ca3f010cd" translate="yes" xml:space="preserve">
          <source>Supported if the helper has the &quot;fetch&quot; capability.</source>
          <target state="translated">ヘルパーが &quot;fetch&quot; 機能を持っている場合にサポートされます。</target>
        </trans-unit>
        <trans-unit id="6b3f007fcd47faeaf9e41420b8dd45804e011830" translate="yes" xml:space="preserve">
          <source>Supported if the helper has the &quot;fetch&quot; or &quot;import&quot; capability.</source>
          <target state="translated">ヘルパーが &quot;fetch&quot; または &quot;import&quot; 機能を持っている場合にサポートされます。</target>
        </trans-unit>
        <trans-unit id="4aca0b5526d05a696e7b36938ee6f6c5a0ea9ae4" translate="yes" xml:space="preserve">
          <source>Supported if the helper has the &quot;import&quot; capability.</source>
          <target state="translated">ヘルパーが &quot;import &quot;機能を持っている場合にサポートされます。</target>
        </trans-unit>
        <trans-unit id="e7ddf6d69b0131cf639e3107da22aa777a2105a4" translate="yes" xml:space="preserve">
          <source>Supported if the helper has the &quot;option&quot; capability.</source>
          <target state="translated">ヘルパーが &quot;option&quot; 機能を持っている場合にサポートされます。</target>
        </trans-unit>
        <trans-unit id="c098533fa12e5c25ff58bd90a0ea089d5ecbd91f" translate="yes" xml:space="preserve">
          <source>Supported if the helper has the &quot;push&quot; capability.</source>
          <target state="translated">ヘルパーが &quot;push&quot; 機能を持っている場合にサポートされます。</target>
        </trans-unit>
        <trans-unit id="fb7b526ef7e22c9e1afe23a10d0bc8d29b1f28b6" translate="yes" xml:space="preserve">
          <source>Supported if the helper has the &quot;push&quot; or &quot;export&quot; capability.</source>
          <target state="translated">ヘルパーが &quot;push&quot; または &quot;export&quot; 機能を持っている場合にサポートされます。</target>
        </trans-unit>
        <trans-unit id="b4c51ee5ffb300c10c9d8c4078d940f537159814" translate="yes" xml:space="preserve">
          <source>Supported if the helper has the &quot;stateless-connect&quot; capability.</source>
          <target state="translated">ヘルパーが &quot;stateless-connect&quot; 機能を持っている場合にサポートされます。</target>
        </trans-unit>
        <trans-unit id="05ab661bd504730c5b7114057d0bdfc9f5d779d8" translate="yes" xml:space="preserve">
          <source>Supports file additions, removals, and commits that affect binary files.</source>
          <target state="translated">バイナリファイルに影響を与えるファイルの追加、削除、コミットをサポートします。</target>
        </trans-unit>
        <trans-unit id="837f71448f49e2e0d9f370a0f4924a3332c3ce70" translate="yes" xml:space="preserve">
          <source>Suppose a shared repository is set up in /pub/repo.git on the host foo.com. Then as an individual committer you can clone the shared repository over ssh with:</source>
          <target state="translated">foo.com というホスト上の /pub/repo.git に共有リポジトリが設定されているとします。そうすると、個人のコミッターとして ssh で共有リポジトリをクローンすることができます。</target>
        </trans-unit>
        <trans-unit id="776b1e3e664257166a794955fe1e330d0ed23c81" translate="yes" xml:space="preserve">
          <source>Suppose further that the two development lines merge cleanly at C, so no conflict resolution is required.</source>
          <target state="translated">さらに、2つの開発ラインがCできれいに合流したと仮定します。</target>
        </trans-unit>
        <trans-unit id="e8f9a38765e97d2341920d57addc2939bc25d7eb" translate="yes" xml:space="preserve">
          <source>Suppose that Alice has started a new project with a Git repository in /home/alice/project, and that Bob, who has a home directory on the same machine, wants to contribute.</source>
          <target state="translated">アリスが/home/alice/projectにGitリポジトリを持って新しいプロジェクトを立ち上げ、同じマシンにホームディレクトリを持っているボブが貢献したいと思ったとします。</target>
        </trans-unit>
        <trans-unit id="f0185bb1f9b382ec2ad8024131a049405c5d0a74" translate="yes" xml:space="preserve">
          <source>Suppose that in the meantime on the lower line of development somebody adds a new calling site for that function at commit Y. The commits from Z leading to B all assume the old semantics of that function and the callers and the callee are consistent with each other. There is no bug at B, either.</source>
          <target state="translated">Z から B に至るまでのコミットはすべてその関数の古いセマンティクスを前提としており、呼び出し元と着呼元はお互いに整合性が取れています。B にもバグはありません。</target>
        </trans-unit>
        <trans-unit id="391a0e24d7cf4e807cbdc6c67d247a126500a7a1" translate="yes" xml:space="preserve">
          <source>Suppose that on the upper line of development, the meaning of one of the functions that exists at Z is changed at commit X. The commits from Z leading to A change both the function&amp;rsquo;s implementation and all calling sites that exist at Z, as well as new calling sites they add, to be consistent. There is no bug at A.</source>
          <target state="translated">開発の上の行で、Zに存在する関数の1つの意味がコミットXで変更されたとします。AにつながるZからのコミットは、関数の実装とZに存在するすべての呼び出しサイトの両方を変更します。一貫性を保つために、彼らが追加した新しい通話サイト。Aにバグはありません。</target>
        </trans-unit>
        <trans-unit id="4264938eda486beabd24f72d431c53e3aa7556fd" translate="yes" xml:space="preserve">
          <source>Suppose that you create a branch &lt;code&gt;mywork&lt;/code&gt; on a remote-tracking branch &lt;code&gt;origin&lt;/code&gt;, and create some commits on top of it:</source>
          <target state="translated">リモート追跡ブランチ &lt;code&gt;origin&lt;/code&gt; にブランチ &lt;code&gt;mywork&lt;/code&gt; を作成し、その上にいくつかのコミットを作成するとします。</target>
        </trans-unit>
        <trans-unit id="3c9c906e2a1276113a369eaaabf56387154b9496" translate="yes" xml:space="preserve">
          <source>Suppose that you have created lots of logically separate changes and committed them together. Then, later you decide that it might be better to have each logical chunk associated with its own commit. You can use git reset to rewind history without changing the contents of your local files, and then successively use &lt;code&gt;git add -p&lt;/code&gt; to interactively select which hunks to include into each commit, using &lt;code&gt;git commit -c&lt;/code&gt; to pre-populate the commit message.</source>
          <target state="translated">論理的に分離された多くの変更を作成し、それらをまとめてコミットしたとします。次に、後で、各論理チャンクを独自のコミットに関連付ける方がよいと判断しました。git resetを使用してローカルファイルの内容を変更せずに履歴を巻き戻し、次に &lt;code&gt;git add -p&lt;/code&gt; を使用して対話的に各ハンクに含めるハンクを選択し、 &lt;code&gt;git commit -c&lt;/code&gt; を使用してコミットメッセージを事前に入力できます。</target>
        </trans-unit>
        <trans-unit id="02fbd8fc87f2a350a49d8620ee0b30d4bf4e4abd" translate="yes" xml:space="preserve">
          <source>Suppose version 2.6.18 of your project worked, but the version at &quot;master&quot; crashes. Sometimes the best way to find the cause of such a regression is to perform a brute-force search through the project&amp;rsquo;s history to find the particular commit that caused the problem. The &lt;a href=&quot;git-bisect&quot;&gt;git-bisect[1]&lt;/a&gt; command can help you do this:</source>
          <target state="translated">プロジェクトのバージョン2.6.18は機能したが、「マスター」のバージョンがクラッシュしたとします。このような回帰の原因を見つける最良の方法は、プロジェクトの履歴をブルートフォース検索して、問題の原因となった特定のコミットを見つけることです。&lt;a href=&quot;git-bisect&quot;&gt;git -二分[1]&lt;/a&gt;コマンドを使用すると、この操作を行うことができます。</target>
        </trans-unit>
        <trans-unit id="fe43e13972d777424e11db2803667e644671ba7d" translate="yes" xml:space="preserve">
          <source>Suppose you are a contributor to a large project, and you want to add a complicated feature, and to present it to the other developers in a way that makes it easy for them to read your changes, verify that they are correct, and understand why you made each change.</source>
          <target state="translated">あなたが大きなプロジェクトのコントリビューターで、複雑な機能を追加して、他の開発者があなたの変更を読み、それが正しいかどうかを確認し、なぜあなたがそれぞれの変更を行ったのかを理解しやすくする方法でそれを他の開発者に提示したいとします。</target>
        </trans-unit>
        <trans-unit id="3acc0c164272600e31526ab46c74892c1aa07162" translate="yes" xml:space="preserve">
          <source>Suppose you are interrupted by an urgent fix request while you are in the middle of a large change. The files in your working tree are not in any shape to be committed yet, but you need to get to the other branch for a quick bugfix.</source>
          <target state="translated">大きな変更を行っている最中に、緊急の修正要求があったとしましょう。作業ツリーのファイルはまだコミットできる状態ではありませんが、他のブランチに行って迅速なバグフィックスを行う必要があります。</target>
        </trans-unit>
        <trans-unit id="206336da1c56023f89c7e12354f95287caca26a2" translate="yes" xml:space="preserve">
          <source>Suppose you are working on something and you commit it, and then you continue working a bit more, but now you think that what you have in your working tree should be in another branch that has nothing to do with what you committed previously. You can start a new branch and reset it while keeping the changes in your working tree.</source>
          <target state="translated">何か作業をしていて、それをコミットした後、もう少し作業を続けたとします。新しいブランチを開始して、作業ツリーの変更を維持したままリセットすることができます。</target>
        </trans-unit>
        <trans-unit id="25caa4df3e00bbf0c1bcbf48ca3bbcb805b36ab6" translate="yes" xml:space="preserve">
          <source>Suppose you have added a file to your index, but later decide you do not want to add it to your commit. You can remove the file from the index while keeping your changes with git reset.</source>
          <target state="translated">あるファイルをインデックスに追加したものの、後になってそれをコミットに追加したくないと思ったとしましょう。git reset で変更を維持したままインデックスからファイルを削除することができます。</target>
        </trans-unit>
        <trans-unit id="9419c8de1f4e3152ef10e8d631b17a6a8c4bb66f" translate="yes" xml:space="preserve">
          <source>Suppose you know that the commit e05db0fd fixed a certain problem. You&amp;rsquo;d like to find the earliest tagged release that contains that fix.</source>
          <target state="translated">コミットe05db0fdが特定の問題を修正したことを知っているとします。その修正を含むタグ付きの最も古いリリースを見つけたいと思います。</target>
        </trans-unit>
        <trans-unit id="c40ef08f6cb59edadae067c6870364980c310ebf" translate="yes" xml:space="preserve">
          <source>Suppose you specified &lt;code&gt;foo&lt;/code&gt; as the &amp;lt;paths&amp;gt;. We shall call commits that modify &lt;code&gt;foo&lt;/code&gt; !TREESAME, and the rest TREESAME. (In a diff filtered for &lt;code&gt;foo&lt;/code&gt;, they look different and equal, respectively.)</source>
          <target state="translated">&amp;lt;paths&amp;gt;として &lt;code&gt;foo&lt;/code&gt; を指定したとします。 &lt;code&gt;foo&lt;/code&gt; ！TREESAME、および残りのTREESAME を変更するコミットを呼び出します。（ &lt;code&gt;foo&lt;/code&gt; でフィルタリングされたdiff では、それぞれ異なって見えます。）</target>
        </trans-unit>
        <trans-unit id="cb2a200ea83c58efe22ad112266f5c75d08a4a2e" translate="yes" xml:space="preserve">
          <source>Suppose you want to check whether two branches point at the same point in history.</source>
          <target state="translated">2つの枝が歴史上の同じ点を指しているかどうかを確認したいとします。</target>
        </trans-unit>
        <trans-unit id="a4ad635bf26628e292f1bfd04aa9f0a4ae18d146" translate="yes" xml:space="preserve">
          <source>Suppose you want to know how many commits you&amp;rsquo;ve made on &lt;code&gt;mybranch&lt;/code&gt; since it diverged from &lt;code&gt;origin&lt;/code&gt;:</source>
          <target state="translated">あなたが上で行ったどのように多くのコミットを知りたいと仮定 &lt;code&gt;mybranch&lt;/code&gt; それはから分岐するので &lt;code&gt;origin&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="f9ddeae1484388d5dab75e34df1cfd67e52a3e70" translate="yes" xml:space="preserve">
          <source>Suppose you want to rebase the side branch starting at &quot;A&quot; to &quot;Q&quot;. Make sure that the current HEAD is &quot;B&quot;, and call</source>
          <target state="translated">A&quot; から始まるサイドブランチを &quot;Q&quot; にリベースしたいとします。現在のHEADが &quot;B &quot;であることを確認して</target>
        </trans-unit>
        <trans-unit id="b5613771383533c24d3d428fdc1ae60e9fd438c4" translate="yes" xml:space="preserve">
          <source>Suppose you want to remove a file (containing confidential information or copyright violation) from all commits:</source>
          <target state="translated">あるファイル(機密情報を含むものや著作権違反のもの)をすべてのコミットから削除したいとします。</target>
        </trans-unit>
        <trans-unit id="ff7d0768a57dca637d6eab253f0d487ae1222161" translate="yes" xml:space="preserve">
          <source>Suppose you would like to see all the commits reachable from the branch head named &lt;code&gt;master&lt;/code&gt; but not from any other head in your repository.</source>
          <target state="translated">&lt;code&gt;master&lt;/code&gt; というブランチヘッドから到達可能なすべてのコミットを表示したいが、リポジトリ内の他のヘッドからは到達させたくないとします。</target>
        </trans-unit>
        <trans-unit id="9946995b81548e47df6c8b8392c1840733fdb964" translate="yes" xml:space="preserve">
          <source>Suppress all output, including the listing of updated refs, unless an error occurs. Progress is not reported to the standard error stream.</source>
          <target state="translated">エラーが発生しない限り、更新された参照先のリストを含むすべての出力を抑制します。進捗状況は標準エラーストリームには報告されません。</target>
        </trans-unit>
        <trans-unit id="c4b3a6cd7a8560fe90c65c121ee87d36135f6602" translate="yes" xml:space="preserve">
          <source>Suppress all progress reports.</source>
          <target state="translated">すべての進捗報告を抑制します。</target>
        </trans-unit>
        <trans-unit id="a819bd2ff05cd55161823638237268e190be312a" translate="yes" xml:space="preserve">
          <source>Suppress commit description and provide a commit count summary only.</source>
          <target state="translated">コミットの記述を抑制し、コミット数のサマリーのみを提供します。</target>
        </trans-unit>
        <trans-unit id="e799a643bdb9c82fda51c43573cb85b70de9e54e" translate="yes" xml:space="preserve">
          <source>Suppress commit summary message.</source>
          <target state="translated">コミットサマリーメッセージを抑制します。</target>
        </trans-unit>
        <trans-unit id="1a696049e271af3ebf56a00bfbec639053a19da0" translate="yes" xml:space="preserve">
          <source>Suppress diff output. Useful for commands like &lt;code&gt;git show&lt;/code&gt; that show the patch by default, or to cancel the effect of &lt;code&gt;--patch&lt;/code&gt;.</source>
          <target state="translated">差分出力を抑制します。デフォルトでパッチを表示する &lt;code&gt;git show&lt;/code&gt; などのコマンド、または &lt;code&gt;--patch&lt;/code&gt; の効果をキャンセルするのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="93e56a37493c6ba4434b0b6ea5eb008e9221a320" translate="yes" xml:space="preserve">
          <source>Suppress the author name and timestamp from the output.</source>
          <target state="translated">出力から著者名とタイムスタンプを出力しないようにします。</target>
        </trans-unit>
        <trans-unit id="f43798729bfff9f209d330c349626cb5165ac751" translate="yes" xml:space="preserve">
          <source>Swap two inputs; that is, show differences from index or on-disk file to tree contents.</source>
          <target state="translated">2つの入力を入れ替えます。つまり、インデックスやディスク上のファイルとツリーの内容の違いを表示します。</target>
        </trans-unit>
        <trans-unit id="e5e55f7f46ad773b6efc6aca47e818298efdba7d" translate="yes" xml:space="preserve">
          <source>Switch branches</source>
          <target state="translated">枝の切り替え</target>
        </trans-unit>
        <trans-unit id="c1c3479fb48988243819a9ed632d7db49472e85a" translate="yes" xml:space="preserve">
          <source>Switch branches or restore working tree files</source>
          <target state="translated">ブランチを切り替えたり、作業中のツリーファイルを復元したりする</target>
        </trans-unit>
        <trans-unit id="dfdb03e90173f2e2bacd7c02f01c4407ebc5e4a7" translate="yes" xml:space="preserve">
          <source>Switch to &lt;code&gt;topic/wip&lt;/code&gt; branch and keep working.</source>
          <target state="translated">&lt;code&gt;topic/wip&lt;/code&gt; ブランチに切り替えて作業を続けます。</target>
        </trans-unit>
        <trans-unit id="376cbb6cbd05a4fda1d6b5e220f115dcce8e44f1" translate="yes" xml:space="preserve">
          <source>Switch to a commit for inspection and discardable experiments. See the &quot;DETACHED HEAD&quot; section in &lt;a href=&quot;git-checkout&quot;&gt;git-checkout[1]&lt;/a&gt; for details.</source>
          <target state="translated">検査と破棄可能な実験のコミットに切り替えます。詳細については、&lt;a href=&quot;git-checkout&quot;&gt;git-checkout [1]&lt;/a&gt;の「DETACHED HEAD」セクションをご覧ください。</target>
        </trans-unit>
        <trans-unit id="0362a7c9eb4dad56855ff5dd55a91d5b93e6f9c7" translate="yes" xml:space="preserve">
          <source>Switch to a specified branch. The working tree and the index are updated to match the branch. All new commits will be added to the tip of this branch.</source>
          <target state="translated">指定したブランチに切り替えます。ブランチに合わせて作業ツリーとインデックスが更新されます。新しいコミットはすべてこのブランチの先端に追加されます。</target>
        </trans-unit>
        <trans-unit id="c4a37023c84f04e66def4788394f47d95de02383" translate="yes" xml:space="preserve">
          <source>Switching branches does not require a clean index and working tree (i.e. no differences compared to &lt;code&gt;HEAD&lt;/code&gt;). The operation is aborted however if the operation leads to loss of local changes, unless told otherwise with &lt;code&gt;--discard-changes&lt;/code&gt; or &lt;code&gt;--merge&lt;/code&gt;.</source>
          <target state="translated">ブランチの切り替えには、クリーンなインデックスと作業ツリーは必要ありません（つまり、 &lt;code&gt;HEAD&lt;/code&gt; と比較して違いはありません）。ただし、 &lt;code&gt;--discard-changes&lt;/code&gt; または &lt;code&gt;--merge&lt;/code&gt; で特に指示されていない限り、操作によってローカルの変更が失われる場合、操作は中止されます。</target>
        </trans-unit>
        <trans-unit id="2a44d54fe8d0fbe571632defb5e0f0bfcb635688" translate="yes" xml:space="preserve">
          <source>Symbolic identifiers</source>
          <target state="translated">シンボリック識別子</target>
        </trans-unit>
        <trans-unit id="edf50a81800d6af816fa28268463b4a137a670b4" translate="yes" xml:space="preserve">
          <source>Symbolic reference: instead of containing the &lt;a href=&quot;#def_SHA1&quot;&gt;SHA-1&lt;/a&gt; id itself, it is of the format 'ref: refs/some/thing' and when referenced, it recursively dereferences to this reference. '&lt;a href=&quot;#def_HEAD&quot;&gt;HEAD&lt;/a&gt;' is a prime example of a symref. Symbolic references are manipulated with the &lt;a href=&quot;git-symbolic-ref&quot;&gt;git-symbolic-ref[1]&lt;/a&gt; command.</source>
          <target state="translated">シンボリック参照：&lt;a href=&quot;#def_SHA1&quot;&gt;SHA-1&lt;/a&gt; ID自体を含める代わりに、「ref：refs / some / thing」という形式であり、参照されると、この参照を再帰的に逆参照します。' &lt;a href=&quot;#def_HEAD&quot;&gt;HEAD&lt;/a&gt; 'はsymrefの代表的な例です。シンボリック参照は&lt;a href=&quot;git-symbolic-ref&quot;&gt;git-symbolic-ref [1]&lt;/a&gt;コマンドで操作されます。</target>
        </trans-unit>
        <trans-unit id="6dc4afea6b4b62629fc3af96ff8aeb71d81ce355" translate="yes" xml:space="preserve">
          <source>Symbolic reference: instead of containing the &lt;a href=&quot;#def_SHA1&quot;&gt;SHA-1&lt;/a&gt; id itself, it is of the format &lt;code&gt;ref: refs/some/thing&lt;/code&gt; and when referenced, it recursively dereferences to this reference. &lt;code&gt;&lt;a href=&quot;#def_HEAD&quot;&gt;HEAD&lt;/a&gt;&lt;/code&gt; is a prime example of a symref. Symbolic references are manipulated with the &lt;a href=&quot;git-symbolic-ref&quot;&gt;git-symbolic-ref[1]&lt;/a&gt; command.</source>
          <target state="translated">シンボリック参照：&lt;a href=&quot;#def_SHA1&quot;&gt;SHA-1&lt;/a&gt; ID自体を含むのではなく、 &lt;code&gt;ref: refs/some/thing&lt;/code&gt; という形式であり、参照されると、この参照を再帰的に逆参照します。 &lt;code&gt;&lt;a href=&quot;#def_HEAD&quot;&gt;HEAD&lt;/a&gt;&lt;/code&gt; はsymrefの代表的な例です。シンボリック参照は&lt;a href=&quot;git-symbolic-ref&quot;&gt;git-symbolic-ref [1]&lt;/a&gt;コマンドで操作されます。</target>
        </trans-unit>
        <trans-unit id="7d980e6b3e0dc3c2265b8f39aea640f21a2c26c7" translate="yes" xml:space="preserve">
          <source>Symlinks in &lt;code&gt;$GIT_DIR&lt;/code&gt; are not resolved before matching.</source>
          <target state="translated">&lt;code&gt;$GIT_DIR&lt;/code&gt; シンボリックリンクは、一致する前に解決されません。</target>
        </trans-unit>
        <trans-unit id="905f63092ff26517a7aa8083857b3c8af9707002" translate="yes" xml:space="preserve">
          <source>Sync</source>
          <target state="translated">Sync</target>
        </trans-unit>
        <trans-unit id="1cafa24e02c13e63ccc749c8cc50c089372b01c9" translate="yes" xml:space="preserve">
          <source>Sync options</source>
          <target state="translated">同期オプション</target>
        </trans-unit>
        <trans-unit id="a05ba5351cf72e05a13ed22352248517859a3ce9" translate="yes" xml:space="preserve">
          <source>Synchronizes submodules' remote URL configuration setting to the value specified in &lt;code&gt;.gitmodules&lt;/code&gt;. It will only affect those submodules which already have a URL entry in .git/config (that is the case when they are initialized or freshly added). This is useful when submodule URLs change upstream and you need to update your local repositories accordingly.</source>
          <target state="translated">サブモジュールのリモートURL構成設定を &lt;code&gt;.gitmodules&lt;/code&gt; で指定された値に同期させます。これは、すでに.git / configにURLエントリがあるサブモジュールにのみ影響します（初期化または新たに追加された場合）。これは、サブモジュールのURLが上流で変更され、それに応じてローカルリポジトリを更新する必要がある場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="3ac8d1a1aa5500a3e968826312a150affc9dc46d" translate="yes" xml:space="preserve">
          <source>Syncing repositories</source>
          <target state="translated">リポジトリの同期</target>
        </trans-unit>
        <trans-unit id="566e604d58292e23d183e78e39f3823e9b42de23" translate="yes" xml:space="preserve">
          <source>Synonym for --dirstat=cumulative</source>
          <target state="translated">dirstat=累積の同義語</target>
        </trans-unit>
        <trans-unit id="f1c4d35b0c03f286600f7fb27eae33fe27989165" translate="yes" xml:space="preserve">
          <source>Synonym for --dirstat=files,param1,param2&amp;hellip;​</source>
          <target state="translated">--dirstat = files、param1、param2&amp;hellip;の同義語</target>
        </trans-unit>
        <trans-unit id="030318e98e2891ff258d5f1c486159aabe2ec3cd" translate="yes" xml:space="preserve">
          <source>Synonym for &lt;a href=&quot;#def_commit&quot;&gt;commit&lt;/a&gt; (the noun).</source>
          <target state="translated">&lt;a href=&quot;#def_commit&quot;&gt;commitの&lt;/a&gt;同義語（名詞）。</target>
        </trans-unit>
        <trans-unit id="98387ba9809590c01ed4197e28a198c994b76d39" translate="yes" xml:space="preserve">
          <source>Synonym for &lt;a href=&quot;#def_object_name&quot;&gt;object name&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#def_object_name&quot;&gt;オブジェクト名の&lt;/a&gt;同義語。</target>
        </trans-unit>
        <trans-unit id="05205baafaafa5f371ceb6761f66c9a9092bfca8" translate="yes" xml:space="preserve">
          <source>Synonym for &lt;a href=&quot;#def_repository&quot;&gt;repository&lt;/a&gt; (for arch people).</source>
          <target state="translated">&lt;a href=&quot;#def_repository&quot;&gt;リポジトリの&lt;/a&gt;同義語（アーチの人々向け）。</target>
        </trans-unit>
        <trans-unit id="bd983733ce10be3d6383ba3ae94c790c5998f587" translate="yes" xml:space="preserve">
          <source>Synonym for &lt;code&gt;--date=relative&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--date=relative&lt;/code&gt; の同義語。</target>
        </trans-unit>
        <trans-unit id="7204033ad0a3ce5a123aa68893dbb1ec2d44eb7f" translate="yes" xml:space="preserve">
          <source>Synonym for &lt;code&gt;-p --raw&lt;/code&gt;.</source>
          <target state="translated">同義語 &lt;code&gt;-p --raw&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e2c85a45d4841ec1bc0daa5da30d63888f50f751" translate="yes" xml:space="preserve">
          <source>Synonym for &lt;code&gt;-p --stat&lt;/code&gt;.</source>
          <target state="translated">同義語 &lt;code&gt;-p --stat&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4826ecc5c9ae249b105cc0f800bf317e1bf3ce71" translate="yes" xml:space="preserve">
          <source>Synonym to &lt;code&gt;--more=-1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--more=-1&lt;/code&gt; の同義語</target>
        </trans-unit>
        <trans-unit id="375d34b627071e9b56cd3502d59bf963af19d37c" translate="yes" xml:space="preserve">
          <source>Synonym to &lt;code&gt;merge.log&lt;/code&gt;; this is deprecated and will be removed in the future.</source>
          <target state="translated">シノニム &lt;code&gt;merge.log&lt;/code&gt; 。これは非推奨であり、将来削除される予定です。</target>
        </trans-unit>
        <trans-unit id="d87db41828b59d9f281eb9d60b0fac7e88c656b9" translate="yes" xml:space="preserve">
          <source>Synonyms to --log and --no-log; these are deprecated and will be removed in the future.</source>
          <target state="translated">log と --no-log の同義語です。</target>
        </trans-unit>
        <trans-unit id="c9c7aa6b4fd156059c823cdabeac32daf66bec16" translate="yes" xml:space="preserve">
          <source>Synonyms to --stat and --no-stat; these are deprecated and will be removed in the future.</source>
          <target state="translated">これらは非推奨であり、将来的には削除される予定です。</target>
        </trans-unit>
        <trans-unit id="36c0630a340d2960affa1c4d2360b0e2c06793fb" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">Synopsis</target>
        </trans-unit>
        <trans-unit id="17c7ba7676ad1ad6dd1c4e6b997adcae910262c9" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">Syntax</target>
        </trans-unit>
        <trans-unit id="121e826ad7717bacfd25c6cf738291790df9e550" translate="yes" xml:space="preserve">
          <source>Syntax is compatible with the file used by &lt;code&gt;git cvsimport&lt;/code&gt; but an empty email address can be supplied with &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">構文は &lt;code&gt;git cvsimport&lt;/code&gt; で使用されるファイルと互換性がありますが、 &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; で空のメールアドレスを指定できます。</target>
        </trans-unit>
        <trans-unit id="bd2d182068c3eb81ead850c75865e8ae2f054c99" translate="yes" xml:space="preserve">
          <source>System-wide configuration file.</source>
          <target state="translated">システム全体の設定ファイル。</target>
        </trans-unit>
        <trans-unit id="bb78aa3d24f5df42764064db56cde78ca1a563d8" translate="yes" xml:space="preserve">
          <source>T: change in the type of the file</source>
          <target state="translated">T:ファイルの種類の変更</target>
        </trans-unit>
        <trans-unit id="a5e95b00d8bbc7641f64bca05aef94e0873eb866" translate="yes" xml:space="preserve">
          <source>THIS COMMAND IS EXPERIMENTAL. ITS BEHAVIOR, AND THE BEHAVIOR OF OTHER COMMANDS IN THE PRESENCE OF SPARSE-CHECKOUTS, WILL LIKELY CHANGE IN THE FUTURE.</source>
          <target state="translated">このコマンドは経験的なものです。その動作、およびスパーズチェックアウトが存在する場合の他のコマンドの動作は、将来的に変更される可能性がある。</target>
        </trans-unit>
        <trans-unit id="9667ca46bdeede85b6c2fc52e7779cc06938e375" translate="yes" xml:space="preserve">
          <source>THIS COMMAND IS EXPERIMENTAL. THE BEHAVIOR MAY CHANGE.</source>
          <target state="translated">このコマンドは経験的なものです。動作が変更される場合があります。</target>
        </trans-unit>
        <trans-unit id="667949023cc3f454cb0d70e83c52143e1650458d" translate="yes" xml:space="preserve">
          <source>TRAILER:</source>
          <target state="translated">TRAILER:</target>
        </trans-unit>
        <trans-unit id="a2ba9a257606db8185ab32e1350e244ce43cc422" translate="yes" xml:space="preserve">
          <source>Tag Object</source>
          <target state="translated">タグオブジェクト</target>
        </trans-unit>
        <trans-unit id="cb8b1e1903f812d19eec6ff05583389fd13d1603" translate="yes" xml:space="preserve">
          <source>Tag format</source>
          <target state="translated">タグ形式</target>
        </trans-unit>
        <trans-unit id="7e41343aeba4393f005c76977eda409bbd77862f" translate="yes" xml:space="preserve">
          <source>Tag names are automatically prefixed with &lt;code&gt;refs/tags/&lt;/code&gt; when stored in Git, so importing the CVS branch symbol &lt;code&gt;RELENG-1_0-FINAL&lt;/code&gt; would use just &lt;code&gt;RELENG-1_0-FINAL&lt;/code&gt; for &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;, and fast-import will write the corresponding ref as &lt;code&gt;refs/tags/RELENG-1_0-FINAL&lt;/code&gt;.</source>
          <target state="translated">タグ名は自動的に接頭辞が付いてい &lt;code&gt;refs/tags/&lt;/code&gt; ので、CVSのブランチシンボルをインポートし、Gitリポジトリに保存されている &lt;code&gt;RELENG-1_0-FINAL&lt;/code&gt; ちょうど使用する &lt;code&gt;RELENG-1_0-FINAL&lt;/code&gt; のための &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 、および高速インポートは、対応するREF書き込みます &lt;code&gt;refs/tags/RELENG-1_0-FINAL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9e6fe4e0ae7885e683d9ee3f683c218e6902b977" translate="yes" xml:space="preserve">
          <source>Tag objects (created with &lt;code&gt;-a&lt;/code&gt;, &lt;code&gt;-s&lt;/code&gt;, or &lt;code&gt;-u&lt;/code&gt;) are called &quot;annotated&quot; tags; they contain a creation date, the tagger name and e-mail, a tagging message, and an optional GnuPG signature. Whereas a &quot;lightweight&quot; tag is simply a name for an object (usually a commit object).</source>
          <target state="translated">タグオブジェクト（ &lt;code&gt;-a&lt;/code&gt; 、 &lt;code&gt;-s&lt;/code&gt; 、または &lt;code&gt;-u&lt;/code&gt; で作成）は「注釈付き」タグと呼ばれます。作成日、タガーの名前と電子メール、タグ付けメッセージ、およびオプションのGnuPG署名が含まれています。一方、「軽量」タグは、単にオブジェクト（通常はコミットオブジェクト）の名前です。</target>
        </trans-unit>
        <trans-unit id="71ea1d47718752d76e2ffd9d2603ad43ca73b3c9" translate="yes" xml:space="preserve">
          <source>Tagging a version</source>
          <target state="translated">バージョンのタグ付け</target>
        </trans-unit>
        <trans-unit id="637cc41ee731974198f97641d9bdfb130460784b" translate="yes" xml:space="preserve">
          <source>Tags are expected to always point at the same version of a project, while heads are expected to advance as development progresses.</source>
          <target state="translated">タグは常に同じバージョンのプロジェクトを指すことが予想され、ヘッドは開発が進むにつれて進むことが予想されます。</target>
        </trans-unit>
        <trans-unit id="888bc919d88641f62426fddc6b7cfc9f6452b8d3" translate="yes" xml:space="preserve">
          <source>Take an existing commit object, and reuse the log message and the authorship information (including the timestamp) when creating the commit.</source>
          <target state="translated">既存のコミットオブジェクトを取得し、コミットを作成する際にログメッセージとオーサリング情報(タイムスタンプを含む)を再利用します。</target>
        </trans-unit>
        <trans-unit id="69d5f1e03c82cbcd587369170c6624b0cf043d55" translate="yes" xml:space="preserve">
          <source>Take the commit message from the given file. This option disables the &lt;code&gt;--edit&lt;/code&gt; option.</source>
          <target state="translated">指定されたファイルからコミットメッセージを取得します。このオプションは &lt;code&gt;--edit&lt;/code&gt; オプションを無効にします。</target>
        </trans-unit>
        <trans-unit id="55362ac1695784c6e28770360066065f70c4271a" translate="yes" xml:space="preserve">
          <source>Take the commit message from the given file. Use &lt;code&gt;-&lt;/code&gt; to read the message from the standard input.</source>
          <target state="translated">指定されたファイルからコミットメッセージを取得します。 &lt;code&gt;-&lt;/code&gt; を使用して、標準入力からメッセージを読み取ります。</target>
        </trans-unit>
        <trans-unit id="e36d4d8811a867676a670c71431af6f45b8cdbfc" translate="yes" xml:space="preserve">
          <source>Take the configuration from the given file instead of .git/config. Using the &quot;--global&quot; option forces this to ~/.gitconfig. Using the &quot;--system&quot; option forces this to $(prefix)/etc/gitconfig.</source>
          <target state="translated">.git/config の代わりに、指定したファイルから設定を取得します。global&quot; オプションを使うと ~/.gitconfig になります。-system&quot; オプションを使うと、$(prefix)/etc/gitconfig になります。</target>
        </trans-unit>
        <trans-unit id="29a57524801de08e4acaf7aa5d5fef7d3a95fdaf" translate="yes" xml:space="preserve">
          <source>Take the given blob object (for example, another note) as the note message. (Use &lt;code&gt;git notes copy &amp;lt;object&amp;gt;&lt;/code&gt; instead to copy notes between objects.)</source>
          <target state="translated">指定されたblobオブジェクト（たとえば、別のメモ）をメモメッセージとして受け取ります。（ &lt;code&gt;git notes copy &amp;lt;object&amp;gt;&lt;/code&gt; 間でノートをコピーするには、代わりにgit notes copy &amp;lt;object&amp;gt;を使用してください。）</target>
        </trans-unit>
        <trans-unit id="d362e00efeb54e4840d9ea63f1d18d0cce50b4f2" translate="yes" xml:space="preserve">
          <source>Take the list of merged objects from &amp;lt;file&amp;gt; instead of stdin.</source>
          <target state="translated">stdinの代わりに&amp;lt;file&amp;gt;からマージされたオブジェクトのリストを取得します。</target>
        </trans-unit>
        <trans-unit id="85714dc37d705ec3059aca2b86357cf12078cff0" translate="yes" xml:space="preserve">
          <source>Take the list of refs from stdin, one per line. If there are refs specified on the command line in addition to this option, then the refs from stdin are processed after those on the command line.</source>
          <target state="translated">標準入力からの参照のリストを、1行に1つずつ取得します。このオプションの他にコマンドラインで指定された refs がある場合、標準入力からの refs はコマンドラインのものよりも後に処理されます。</target>
        </trans-unit>
        <trans-unit id="e793a474854bfcd7a2387829ec157d014acaec34" translate="yes" xml:space="preserve">
          <source>Take the note message from the given file. Use &lt;code&gt;-&lt;/code&gt; to read the note message from the standard input. Lines starting with &lt;code&gt;#&lt;/code&gt; and empty lines other than a single line between paragraphs will be stripped out.</source>
          <target state="translated">指定されたファイルからメモメッセージを取得します。 &lt;code&gt;-&lt;/code&gt; を使用して、標準入力からノートメッセージを読み取ります。 &lt;code&gt;#&lt;/code&gt; で始まる行と、段落間の1行以外の空の行は削除されます。</target>
        </trans-unit>
        <trans-unit id="b415454b3e57aca4cd9775be68c013d0b1cba35f" translate="yes" xml:space="preserve">
          <source>Take the tag message from the given file. Use &lt;code&gt;-&lt;/code&gt; to read the message from the standard input. Implies &lt;code&gt;-a&lt;/code&gt; if none of &lt;code&gt;-a&lt;/code&gt;, &lt;code&gt;-s&lt;/code&gt;, or &lt;code&gt;-u &amp;lt;keyid&amp;gt;&lt;/code&gt; is given.</source>
          <target state="translated">指定されたファイルからタグメッセージを取得します。 &lt;code&gt;-&lt;/code&gt; を使用して、標準入力からメッセージを読み取ります。意味 &lt;code&gt;-a&lt;/code&gt; をのどれ場合 &lt;code&gt;-a&lt;/code&gt; 、 &lt;code&gt;-s&lt;/code&gt; 、または &lt;code&gt;-u &amp;lt;keyid&amp;gt;&lt;/code&gt; 与えられていません。</target>
        </trans-unit>
        <trans-unit id="437fabd9a3b90a4e3feee997e0efd394e0e18037" translate="yes" xml:space="preserve">
          <source>Take the version from the current branch as the tentative merge result, and declare that the merge has conflicts. This is suitable for binary files that do not have a well-defined merge semantics.</source>
          <target state="translated">現在のブランチのバージョンを暫定的なマージ結果として受け取り、マージに競合があることを宣言します。これは、十分に定義されたマージセマンティクスを持たないバイナリファイルに適しています。</target>
        </trans-unit>
        <trans-unit id="8adfe6e8bfbfb71c863cfc8d3c7f83de8a17ccfc" translate="yes" xml:space="preserve">
          <source>Takes the list of merged objects on stdin and produces a suitable commit message to be used for the merge commit, usually to be passed as the &lt;code&gt;&amp;lt;merge-message&amp;gt;&lt;/code&gt; argument of &lt;code&gt;git merge&lt;/code&gt;.</source>
          <target state="translated">stdinでマージされたオブジェクトのリストを取得し、マージコミットに使用される適切なコミットメッセージを生成します。通常は &lt;code&gt;git merge&lt;/code&gt; の &lt;code&gt;&amp;lt;merge-message&amp;gt;&lt;/code&gt; 引数として渡されます。</target>
        </trans-unit>
        <trans-unit id="a792b2d24cbb9bea552de7c52e443e6ec570f86e" translate="yes" xml:space="preserve">
          <source>Takes the patches given on the command line and emails them out. Patches can be specified as files, directories (which will send all files in the directory), or directly as a revision list. In the last case, any format accepted by &lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch[1]&lt;/a&gt; can be passed to git send-email.</source>
          <target state="translated">コマンドラインで指定されたパッチを取得してメールで送信します。パッチは、ファイル、ディレクトリ（ディレクトリ内のすべてのファイルを送信する）、または直接リビジョンリストとして指定できます。最後のケースでは、&lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch [1]で&lt;/a&gt;受け入れられる任意のフォーマットをgit send-emailに渡すことができます。</target>
        </trans-unit>
        <trans-unit id="6a0ff7754ecf08c3c8186e018764aeb2fd2691af" translate="yes" xml:space="preserve">
          <source>Talk to the IMAP server using git&amp;rsquo;s own IMAP routines instead of using libcurl. Ignored if Git was built with the NO_OPENSSL option set.</source>
          <target state="translated">libcurlを使用する代わりに、git独自のIMAPルーチンを使用してIMAPサーバーと通信します。GitがNO_OPENSSLオプションを設定してビルドされた場合は無視されます。</target>
        </trans-unit>
        <trans-unit id="8452733fe9983e27bdd86ccd2806b4879b9eed76" translate="yes" xml:space="preserve">
          <source>Target of the home link on the top of all pages (the first part of view &quot;breadcrumbs&quot;). By default it is set to the absolute URI of a current page (to the value of &lt;code&gt;$my_uri&lt;/code&gt; variable, or to &quot;/&quot; if &lt;code&gt;$my_uri&lt;/code&gt; is undefined or is an empty string).</source>
          <target state="translated">すべてのページの上部にあるホームリンクのターゲット（ビューの最初の部分は「パンくずリスト」）。デフォルトでは、現在のページの絶対URI（ &lt;code&gt;$my_uri&lt;/code&gt; 変数の値、または &lt;code&gt;$my_uri&lt;/code&gt; が未定義または空の文字列の場合は「/」）に設定されます。</target>
        </trans-unit>
        <trans-unit id="b83c8f8bfe5de4730b897d69d4046995d166efe4" translate="yes" xml:space="preserve">
          <source>Targets are defined using a VTable allowing easy extension to other formats in the future. This might be used to define a binary format, for example.</source>
          <target state="translated">ターゲットは、将来的に他のフォーマットに簡単に拡張できるように、VTable を使用して定義されます。これは、例えばバイナリ形式を定義するために使用されるかもしれません。</target>
        </trans-unit>
        <trans-unit id="b51ba0493561f3b3deddd8211a5a385cd8601db7" translate="yes" xml:space="preserve">
          <source>Technical discussion</source>
          <target state="translated">技術的な議論</target>
        </trans-unit>
        <trans-unit id="7d2e519ddfe0c57b9b7de69eeaa388f193a9848e" translate="yes" xml:space="preserve">
          <source>Tell Git that canonical representation of files in the repository has changed over time (e.g. earlier commits record text files with CRLF line endings, but recent ones use LF line endings). In such a repository, Git can convert the data recorded in commits to a canonical form before performing a merge to reduce unnecessary conflicts. For more information, see section &quot;Merging branches with differing checkin/checkout attributes&quot; in &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt;.</source>
          <target state="translated">リポジトリ内のファイルの正規表現が時間の経過とともに変更されたことをGitに伝えます（たとえば、以前のコミットはCRLF行末のレコードテキストファイルをコミットしますが、最近のものはLF行末を使用します）。このようなリポジトリでは、Gitは、コミットで記録されたデータを正規の形式に変換してから、マージを実行して不要な競合を減らすことができます。詳細については、&lt;a href=&quot;gitattributes&quot;&gt;gitattributes [5]の&lt;/a&gt;セクション「異なるチェックイン/チェックアウト属性を持つブランチのマージ」を参照してください。</target>
        </trans-unit>
        <trans-unit id="b5b3a0f2444b1d5713e25e3bc88878530e280cdf" translate="yes" xml:space="preserve">
          <source>Tell Git to use it.</source>
          <target state="translated">Gitに使うように伝えます。</target>
        </trans-unit>
        <trans-unit id="bebd78f164bb96ec184a42572b9740f676dbf149" translate="yes" xml:space="preserve">
          <source>Tell cvsexportcommit that the current working directory is not only a Git checkout, but also the CVS checkout. Therefore, Git will reset the working directory to the parent commit before proceeding.</source>
          <target state="translated">cvsexportcommit に、現在の作業ディレクトリは Git のチェックアウトだけでなく CVS のチェックアウトでもあることを伝えます。そのため、Git は先に進む前に作業ディレクトリを親コミットにリセットします。</target>
        </trans-unit>
        <trans-unit id="ccc8867e7c10f12bec70f18c0ebdd4b98ffcfd5b" translate="yes" xml:space="preserve">
          <source>Tell git-credential-cache&amp;mdash;​daemon to ignore SIGHUP, instead of quitting.</source>
          <target state="translated">git-credential-cache&amp;mdash;デーモンに終了せずにSIGHUPを無視するように指示します。</target>
        </trans-unit>
        <trans-unit id="500ee09ba16068aaf0936f5ee6b5ef58c4f8bd06" translate="yes" xml:space="preserve">
          <source>Tell the command to automatically stage files that have been modified and deleted, but new files you have not told Git about are not affected.</source>
          <target state="translated">変更や削除されたファイルを自動的にステージするようにコマンドを伝えますが、Git に伝えていない新しいファイルは影響を受けません。</target>
        </trans-unit>
        <trans-unit id="a69e5b7ab968a315154a9d1fd7cf0d147021841a" translate="yes" xml:space="preserve">
          <source>Telling Git about your changes.</source>
          <target state="translated">Git に変更点を伝える</target>
        </trans-unit>
        <trans-unit id="52aedbe077c84f7c253f79171da85dc15b08fdf7" translate="yes" xml:space="preserve">
          <source>Telling Git your name</source>
          <target state="translated">Git に自分の名前を伝える</target>
        </trans-unit>
        <trans-unit id="47964a2a2b9ba19cb7edfe94ae99ae894e487ad7" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;git add&lt;/code&gt; to continue adding files when some files cannot be added due to indexing errors. Equivalent to the &lt;code&gt;--ignore-errors&lt;/code&gt; option of &lt;a href=&quot;git-add&quot;&gt;git-add[1]&lt;/a&gt;. &lt;code&gt;add.ignore-errors&lt;/code&gt; is deprecated, as it does not follow the usual naming convention for configuration variables.</source>
          <target state="translated">インデックス作成エラーのために一部のファイルを追加できない場合、 &lt;code&gt;git add&lt;/code&gt; にファイルの追加を続行するように指示します。&lt;a href=&quot;git-add&quot;&gt;git-add [1]&lt;/a&gt;の &lt;code&gt;--ignore-errors&lt;/code&gt; オプションと同等です。 &lt;code&gt;add.ignore-errors&lt;/code&gt; は、構成変数の通常の命名規則に従っていないため、推奨されていません。</target>
        </trans-unit>
        <trans-unit id="e23c71acb4f3fb6cc5e3124fdbba41789615dcfa" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;git apply&lt;/code&gt; how to handle whitespaces, in the same way as the &lt;code&gt;--whitespace&lt;/code&gt; option. See &lt;a href=&quot;git-apply&quot;&gt;git-apply[1]&lt;/a&gt;.</source>
          <target state="translated">指示します &lt;code&gt;git apply&lt;/code&gt; と同じように、空白をどのように扱うか &lt;code&gt;--whitespace&lt;/code&gt; オプション。&lt;a href=&quot;git-apply&quot;&gt;git-apply [1]を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1b4fd4c56fbd55fd6a4b61da1b1b25feb1363cb0" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;git branch&lt;/code&gt;, &lt;code&gt;git switch&lt;/code&gt; and &lt;code&gt;git checkout&lt;/code&gt; to set up new branches so that &lt;a href=&quot;git-pull&quot;&gt;git-pull[1]&lt;/a&gt; will appropriately merge from the starting point branch. Note that even if this option is not set, this behavior can be chosen per-branch using the &lt;code&gt;--track&lt;/code&gt; and &lt;code&gt;--no-track&lt;/code&gt; options. The valid settings are: &lt;code&gt;false&lt;/code&gt; &amp;mdash; no automatic setup is done; &lt;code&gt;true&lt;/code&gt; &amp;mdash; automatic setup is done when the starting point is a remote-tracking branch; &lt;code&gt;always&lt;/code&gt; &amp;mdash; automatic setup is done when the starting point is either a local branch or remote-tracking branch. This option defaults to true.</source>
          <target state="translated">伝えます &lt;code&gt;git branch&lt;/code&gt; 、 &lt;code&gt;git switch&lt;/code&gt; と &lt;code&gt;git checkout&lt;/code&gt; するように、新たな支店を設定するには&lt;a href=&quot;git-pull&quot;&gt;gitのプル[1]が&lt;/a&gt;適切に開始点のブランチからマージします。このオプションが設定されていなくても、この動作は &lt;code&gt;--track&lt;/code&gt; および &lt;code&gt;--no-track&lt;/code&gt; オプションを使用してブランチごとに選択できることに注意してください。有効な設定は次のとおりです &lt;code&gt;false&lt;/code&gt; &amp;mdash;自動セットアップは行われません。 &lt;code&gt;true&lt;/code&gt; &amp;mdash;開始点がリモート追跡ブランチの場合、自動セットアップが行われます。 &lt;code&gt;always&lt;/code&gt; &amp;mdash;開始点がローカルブランチまたはリモートトラッキングブランチの場合、自動セットアップが行われます。このオプションのデフォルトはtrueです。</target>
        </trans-unit>
        <trans-unit id="33792c2c707e004799933a452c481ccd3dd6df72" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;merge-recursive&lt;/code&gt; to use a different diff algorithm, which can help avoid mismerges that occur due to unimportant matching lines (such as braces from distinct functions). See also &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt;&lt;code&gt;--diff-algorithm&lt;/code&gt;.</source>
          <target state="translated">伝え &lt;code&gt;merge-recursive&lt;/code&gt; （例えば、別個の機能からブレースなどの）重要でないマッチング線による発生を避けるmismergesを助けることができる異なる差分アルゴリズムを、使用します。&lt;a href=&quot;git-diff&quot;&gt;git-diff [1] &lt;/a&gt; &lt;code&gt;--diff-algorithm&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="322e9bf79fc78c188017b38cca0390d8ca24df83" translate="yes" xml:space="preserve">
          <source>Tells Git if the executable bit of files in the working tree is to be honored.</source>
          <target state="translated">作業ツリー内のファイルの実行可能ビットを優先するかどうかを Git に知らせます。</target>
        </trans-unit>
        <trans-unit id="e732c8317ebf66ceb1e3db1424bc67bd01187e09" translate="yes" xml:space="preserve">
          <source>Template directory</source>
          <target state="translated">テンプレートディレクトリ</target>
        </trans-unit>
        <trans-unit id="ab43df8613b6388c0548cc8be9da228db8e98898" translate="yes" xml:space="preserve">
          <source>Temporarily setting aside work in progress</source>
          <target state="translated">仕掛品を一時的に置いておくこと</target>
        </trans-unit>
        <trans-unit id="8e2754fc91f29834706af71cfa26258d56805769" translate="yes" xml:space="preserve">
          <source>Temporary files</source>
          <target state="translated">一時ファイル</target>
        </trans-unit>
        <trans-unit id="9c01e9143498ee202aefdfaa27172587b4069975" translate="yes" xml:space="preserve">
          <source>Terminate entries with NUL, instead of LF. This implies the &lt;code&gt;--porcelain=v1&lt;/code&gt; output format if no other format is given.</source>
          <target state="translated">LFではなくNULでエントリを終了します。他の形式が指定されていない場合、これは &lt;code&gt;--porcelain=v1&lt;/code&gt; 出力形式を意味します。</target>
        </trans-unit>
        <trans-unit id="07c6a191135373ac9d2aee0a3bde3b658792a63e" translate="yes" xml:space="preserve">
          <source>Terminate with error if there is no &lt;code&gt;done&lt;/code&gt; command at the end of the stream. This option might be useful for detecting errors that cause the frontend to terminate before it has started to write a stream.</source>
          <target state="translated">ストリームの最後に &lt;code&gt;done&lt;/code&gt; コマンドがない場合は、エラーで終了します。このオプションは、ストリームの書き込みを開始する前にフロントエンドを終了させるエラーを検出するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="21d278837034557e7a9b46210d42d6e7b8075142" translate="yes" xml:space="preserve">
          <source>Terminology</source>
          <target state="translated">Terminology</target>
        </trans-unit>
        <trans-unit id="cf10c8624337ce67bcf480537830a31a54a327a5" translate="yes" xml:space="preserve">
          <source>Test suites are very nice. But when they are used alone, they are supposed to be used so that all the tests are checked after each commit. This means that they are not very efficient, because many tests are run for no interesting result, and they suffer from combinatorial explosion.</source>
          <target state="translated">テストスイートはとても良いものです。しかし、テストスイートを単独で使用する場合は、各コミットの後にすべてのテストをチェックするように使用することになっています。これは、多くのテストを実行しても面白い結果が得られず、組み合わせの爆発に悩まされるため、あまり効率的ではないということを意味します。</target>
        </trans-unit>
        <trans-unit id="c7039b793911c3e74e0619b364427be7bb23668d" translate="yes" xml:space="preserve">
          <source>Testing has been done using both the CLI CVS client, and the Eclipse CVS plugin. Most functionality works fine with both of these clients.</source>
          <target state="translated">CLI CVS クライアントと Eclipse CVS プラグインの両方を使ってテストしました。ほとんどの機能は、これらのクライアントの両方で正常に動作します。</target>
        </trans-unit>
        <trans-unit id="499b8eda34fd3ef3837b1d2448aadbb6279371d8" translate="yes" xml:space="preserve">
          <source>Testing partial commits</source>
          <target state="translated">部分的なコミットのテスト</target>
        </trans-unit>
        <trans-unit id="c5dcd73cdfef43c79255820898dee98a4377a12f" translate="yes" xml:space="preserve">
          <source>Text editor for use by Git commands. The value is meant to be interpreted by the shell when it is used. Examples: &lt;code&gt;~/bin/vi&lt;/code&gt;, &lt;code&gt;$SOME_ENVIRONMENT_VARIABLE&lt;/code&gt;, &lt;code&gt;&quot;C:\Program Files\Vim\gvim.exe&quot;
--nofork&lt;/code&gt;. The order of preference is the &lt;code&gt;$GIT_EDITOR&lt;/code&gt; environment variable, then &lt;code&gt;core.editor&lt;/code&gt; configuration, then &lt;code&gt;$VISUAL&lt;/code&gt;, then &lt;code&gt;$EDITOR&lt;/code&gt;, and then the default chosen at compile time, which is usually &lt;code&gt;vi&lt;/code&gt;.</source>
          <target state="translated">Gitコマンドで使用するテキストエディター。この値は、使用時にシェルによって解釈されることを意図しています。例： &lt;code&gt;~/bin/vi&lt;/code&gt; 、 &lt;code&gt;$SOME_ENVIRONMENT_VARIABLE&lt;/code&gt; 、 &lt;code&gt;&quot;C:\Program Files\Vim\gvim.exe&quot; --nofork&lt;/code&gt; 。優先順位は、 &lt;code&gt;$GIT_EDITOR&lt;/code&gt; 環境変数、次に &lt;code&gt;core.editor&lt;/code&gt; 構成、次に &lt;code&gt;$VISUAL&lt;/code&gt; 、次に &lt;code&gt;$EDITOR&lt;/code&gt; 、そしてコンパイル時に選択されたデフォルト（通常は &lt;code&gt;vi&lt;/code&gt; )です。</target>
        </trans-unit>
        <trans-unit id="016aa532b4e9fa7fee1cc89b5c6aa348edd44f21" translate="yes" xml:space="preserve">
          <source>Text editor used by &lt;code&gt;git rebase -i&lt;/code&gt; for editing the rebase instruction file. The value is meant to be interpreted by the shell when it is used. It can be overridden by the &lt;code&gt;GIT_SEQUENCE_EDITOR&lt;/code&gt; environment variable. When not configured the default commit message editor is used instead.</source>
          <target state="translated">&lt;code&gt;git rebase -i&lt;/code&gt; がリベース指示ファイルを編集するために使用するテキストエディター。この値は、使用時にシェルによって解釈されることを意図しています。 &lt;code&gt;GIT_SEQUENCE_EDITOR&lt;/code&gt; 環境変数によって上書きできます。設定されていない場合、デフォルトのコミットメッセージエディタが代わりに使用されます。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
