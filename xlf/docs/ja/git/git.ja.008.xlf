<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="git">
    <body>
      <group id="git">
        <trans-unit id="899e81641132daf9598824927775cf00c10d02f7" translate="yes" xml:space="preserve">
          <source>PATH_INFO (if GIT_PROJECT_ROOT is set, otherwise PATH_TRANSLATED)</source>
          <target state="translated">PATH_INFO (GIT_PROJECT_ROOTが設定されている場合、そうでない場合はPATH_TRANSLATED)</target>
        </trans-unit>
        <trans-unit id="6decffd0412eaf2f154545c6af90e7d695d8d0f2" translate="yes" xml:space="preserve">
          <source>PATH_INFO usage</source>
          <target state="translated">PATH_INFO の使い方</target>
        </trans-unit>
        <trans-unit id="4a9500dfda14165da62b0d759d4f7a0a1828ddac" translate="yes" xml:space="preserve">
          <source>PERF Format</source>
          <target state="translated">PERFフォーマット</target>
        </trans-unit>
        <trans-unit id="ac3820bb690c0e4f8afb899d021a87e2215d9f6c" translate="yes" xml:space="preserve">
          <source>Pack Idx file:</source>
          <target state="translated">Idxファイルをパックします。</target>
        </trans-unit>
        <trans-unit id="8e5bd2c516c0b64c7a093133ad05311d5aa715dd" translate="yes" xml:space="preserve">
          <source>Pack heads and tags for efficient repository access</source>
          <target state="translated">リポジトリへの効率的なアクセスのためのヘッドとタグのパック</target>
        </trans-unit>
        <trans-unit id="916c15851c2e9c9482b6f7ae827a2ef3628cc3b5" translate="yes" xml:space="preserve">
          <source>Pack unpacked objects in a repository</source>
          <target state="translated">リポジトリ内でアンパックされたオブジェクトをパックする</target>
        </trans-unit>
        <trans-unit id="fd708a7f9f7d413af09614d69248d6ad385118ff" translate="yes" xml:space="preserve">
          <source>Pack unreachable loose objects (and their loose counterparts removed). This implies &lt;code&gt;--revs&lt;/code&gt;.</source>
          <target state="translated">到達できないゆるいオブジェクトを梱包します（そして、それらのゆるい対応物を取り外します）。これは &lt;code&gt;--revs&lt;/code&gt; を意味します。</target>
        </trans-unit>
        <trans-unit id="eee993c07c74282866f868d204d9cb338384817b" translate="yes" xml:space="preserve">
          <source>Pack-*.pack files have the following format:</source>
          <target state="translated">Pack-*.packファイルの形式は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="f066589e1e591fe2ae534900eb4066417a728dbe" translate="yes" xml:space="preserve">
          <source>Packet-line framing</source>
          <target state="translated">パケット回線のフレーミング</target>
        </trans-unit>
        <trans-unit id="df55d31d287518a9be7d4b1795862cdf2fc41470" translate="yes" xml:space="preserve">
          <source>Packfile optimization</source>
          <target state="translated">パックファイルの最適化</target>
        </trans-unit>
        <trans-unit id="64fd302d4a38d46210fcac733698d9d782d1ce2e" translate="yes" xml:space="preserve">
          <source>Packfiles can be marked as &quot;special&quot; using empty files that share the initial name but replace &quot;.pack&quot; with &quot;.keep&quot; or &quot;.promisor&quot;. We can add an optional chunk of data to the multi-pack-index that records flags of information about the packfiles. This allows new states, such as &lt;code&gt;repacked&lt;/code&gt; or &lt;code&gt;redeltified&lt;/code&gt;, that can help with pack maintenance in a multi-pack environment. It may also be helpful to organize packfiles by object type (commit, tree, blob, etc.) and use this metadata to help that maintenance.</source>
          <target state="translated">Packfileは、初期名を共有するが「.pack」を「.keep」または「.promisor」に置き換える空のファイルを使用して、「特別」としてマークできます。パックファイルに関する情報のフラグを記録するオプションのデータチャンクをmulti-pack-indexに追加できます。これは、次のような新しい状態、可能に &lt;code&gt;repacked&lt;/code&gt; または &lt;code&gt;redeltified&lt;/code&gt; 、マルチパック環境でのパックのメンテナンスでその缶の助けを。オブジェクトタイプ（コミット、ツリー、ブロブなど）ごとにパックファイルを整理し、このメタデータを使用してメンテナンスを行うことも役立ちます。</target>
        </trans-unit>
        <trans-unit id="31a1b2f09e14954b347560b78870b7472ffa3669" translate="yes" xml:space="preserve">
          <source>Packing objects</source>
          <target state="translated">オブジェクトのパッキング</target>
        </trans-unit>
        <trans-unit id="128ae9baa6dfe921179664d6c2722a23816ef24b" translate="yes" xml:space="preserve">
          <source>Packing your repository</source>
          <target state="translated">リポジトリのパッキング</target>
        </trans-unit>
        <trans-unit id="1b3cc3c53ffc64e43edbae102e2fbe605f6c35c2" translate="yes" xml:space="preserve">
          <source>Packs (files that store many objects in compressed form, along with index files to allow them to be randomly accessed) are found in this directory.</source>
          <target state="translated">パック(多くのオブジェクトを圧縮して保存するファイルと、ランダムにアクセスできるようにするためのインデックスファイル)はこのディレクトリにあります。</target>
        </trans-unit>
        <trans-unit id="5e77e9eb9a9ac23524177c29c90fcfbb2bbc9d8d" translate="yes" xml:space="preserve">
          <source>Packs are used to reduce the load on mirror systems, backup engines, disk storage, etc.</source>
          <target state="translated">パックは、ミラーシステム、バックアップエンジン、ディスクストレージなどの負荷を軽減するために使用されます。</target>
        </trans-unit>
        <trans-unit id="62f32a40a6ada609c72de752933f4d26ac1e6bb8" translate="yes" xml:space="preserve">
          <source>Parallel operation</source>
          <target state="translated">並列運転</target>
        </trans-unit>
        <trans-unit id="669184806db1339e6c6beee1ab38494c4529dab6" translate="yes" xml:space="preserve">
          <source>Parent/child relations are only visible with &lt;code&gt;--parents&lt;/code&gt;, but that does not affect the commits selected in default mode, so we have shown the parent lines.</source>
          <target state="translated">親子関係は &lt;code&gt;--parents&lt;/code&gt; でのみ表示されますが、デフォルトモードで選択されたコミットには影響しないため、親行を表示しました。</target>
        </trans-unit>
        <trans-unit id="2efa637ebfd57586deb686233e5bd089abfab182" translate="yes" xml:space="preserve">
          <source>Parse the date string, and output the corresponding --max-age= parameter for &lt;code&gt;git rev-list&lt;/code&gt;.</source>
          <target state="translated">日付文字列を解析し、対応する--max-age =パラメータを &lt;code&gt;git rev-list&lt;/code&gt; に出力します。</target>
        </trans-unit>
        <trans-unit id="26f771d12548577279103a59da15ea4fd6835ad3" translate="yes" xml:space="preserve">
          <source>Parse the date string, and output the corresponding --min-age= parameter for &lt;code&gt;git rev-list&lt;/code&gt;.</source>
          <target state="translated">日付文字列を解析し、対応する--min-age =パラメータを &lt;code&gt;git rev-list&lt;/code&gt; に出力します。</target>
        </trans-unit>
        <trans-unit id="868df803566ac09bf6f4d16dac1cc6f9e22a2eb9" translate="yes" xml:space="preserve">
          <source>Parseopt</source>
          <target state="translated">Parseopt</target>
        </trans-unit>
        <trans-unit id="2f58caf00da93e9d39ff1263d9c88686c41f1f30" translate="yes" xml:space="preserve">
          <source>Part two of this tutorial explains the object database, the index file, and a few other odds and ends that you&amp;rsquo;ll need to make the most of Git. You can find it at &lt;a href=&quot;gittutorial-2&quot;&gt;gittutorial-2[7]&lt;/a&gt;.</source>
          <target state="translated">このチュートリアルのパート2では、オブジェクトデータベース、インデックスファイル、およびGitを最大限に活用するために必要なその他のいくつかのオッズとエンドについて説明します。あなたはでそれを見つけることができ&lt;a href=&quot;gittutorial-2&quot;&gt;gittutorial-2 [7] &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8fc0213ea3567cb4b4477ecb78349de8a29f1b86" translate="yes" xml:space="preserve">
          <source>Partly for this reason, many experienced Git users, even when working on an otherwise merge-heavy project, keep the history linear by rebasing against the latest upstream version before publishing.</source>
          <target state="translated">この理由もあって、経験豊富な Git ユーザーの多くは、マージの多いプロジェクトで作業をしていても、公開前に最新のアップストリームバージョンにリベースすることで履歴を直線的に保つようにしています。</target>
        </trans-unit>
        <trans-unit id="18fd2ef3833f23df7a3b9f0464ed57cacda16deb" translate="yes" xml:space="preserve">
          <source>Pass --quiet to git-fetch-pack and silence any other internally used git commands. Progress is not reported to the standard error stream.</source>
          <target state="translated">git-fetch-pack に --quiet を渡し、その他の内部的に使われている git コマンドを停止させます。進捗状況は標準のエラーストリームには報告されません。</target>
        </trans-unit>
        <trans-unit id="c1e733f5e8ef91bfe63a917a4d6fc9ec48d03354" translate="yes" xml:space="preserve">
          <source>Pass --verbose to git-fetch and git-merge.</source>
          <target state="translated">git-fetch と git-merge に --verbose を渡します。</target>
        </trans-unit>
        <trans-unit id="5a8b2c7c1f37cd374533e299d8006c239b39cc94" translate="yes" xml:space="preserve">
          <source>Pass &lt;code&gt;-b&lt;/code&gt; flag to &lt;code&gt;git mailinfo&lt;/code&gt; (see &lt;a href=&quot;git-mailinfo&quot;&gt;git-mailinfo[1]&lt;/a&gt;).</source>
          <target state="translated">通過 &lt;code&gt;-b&lt;/code&gt; にフラグを &lt;code&gt;git mailinfo&lt;/code&gt; （参照&lt;a href=&quot;git-mailinfo&quot;&gt;[1]のgit-mailinfoを&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="6ad058b096d5d940b830a4807c658be882c3c4ae" translate="yes" xml:space="preserve">
          <source>Pass &lt;code&gt;-k&lt;/code&gt; flag to &lt;code&gt;git mailinfo&lt;/code&gt; (see &lt;a href=&quot;git-mailinfo&quot;&gt;git-mailinfo[1]&lt;/a&gt;).</source>
          <target state="translated">通過 &lt;code&gt;-k&lt;/code&gt; にフラグを &lt;code&gt;git mailinfo&lt;/code&gt; （参照&lt;a href=&quot;git-mailinfo&quot;&gt;[1]のgit-mailinfoを&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="08d9a4e291a48ec7e7744c9392f211c7729e475b" translate="yes" xml:space="preserve">
          <source>Pass &lt;code&gt;-n&lt;/code&gt; flag to &lt;code&gt;git mailinfo&lt;/code&gt; (see &lt;a href=&quot;git-mailinfo&quot;&gt;git-mailinfo[1]&lt;/a&gt;).</source>
          <target state="translated">通過 &lt;code&gt;-n&lt;/code&gt; にフラグを &lt;code&gt;git mailinfo&lt;/code&gt; （参照&lt;a href=&quot;git-mailinfo&quot;&gt;[1]のgit-mailinfoを&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="c6c9ef8d9eb1e67c7d3dd624c5619505c72d0bcb" translate="yes" xml:space="preserve">
          <source>Pass &lt;code&gt;-q&lt;/code&gt; flag to &lt;code&gt;git unpack-objects&lt;/code&gt;; this makes the cloning process less verbose.</source>
          <target state="translated">&lt;code&gt;-q&lt;/code&gt; フラグを &lt;code&gt;git unpack-objects&lt;/code&gt; に渡します。これにより、複製プロセスの冗長性が低下します。</target>
        </trans-unit>
        <trans-unit id="844d7ccb03cd6ed89f98fadab62d2737a8e85be6" translate="yes" xml:space="preserve">
          <source>Pass &lt;code&gt;-u&lt;/code&gt; flag to &lt;code&gt;git mailinfo&lt;/code&gt; (see &lt;a href=&quot;git-mailinfo&quot;&gt;git-mailinfo[1]&lt;/a&gt;). The proposed commit log message taken from the e-mail is re-coded into UTF-8 encoding (configuration variable &lt;code&gt;i18n.commitencoding&lt;/code&gt; can be used to specify project&amp;rsquo;s preferred encoding if it is not UTF-8).</source>
          <target state="translated">パス &lt;code&gt;-u&lt;/code&gt; にフラグ &lt;code&gt;git mailinfo&lt;/code&gt; （参照&lt;a href=&quot;git-mailinfo&quot;&gt;[1]のgit-mailinfoを&lt;/a&gt;）。電子メールから取得した提案されたコミットログメッセージは、UTF-8エンコーディングに再コード化されます（構成変数 &lt;code&gt;i18n.commitencoding&lt;/code&gt; を使用して、プロジェクトの優先エンコーディングがUTF-8でない場合に指定できます）。</target>
        </trans-unit>
        <trans-unit id="2bc55f5c25108364f3a39ef8fcf3a15e05538a97" translate="yes" xml:space="preserve">
          <source>Pass a configuration parameter to the command. The value given will override values from configuration files. The &amp;lt;name&amp;gt; is expected in the same format as listed by &lt;code&gt;git config&lt;/code&gt; (subkeys separated by dots).</source>
          <target state="translated">コマンドに構成パラメーターを渡します。指定された値は、構成ファイルの値をオーバーライドします。&amp;lt;name&amp;gt;は、 &lt;code&gt;git config&lt;/code&gt; （ドットで区切られたサブキー）でリストされているのと同じ形式であることが期待されています。</target>
        </trans-unit>
        <trans-unit id="53c6f0ea05fb13c74273eb0b4d13e04b5e8a0db8" translate="yes" xml:space="preserve">
          <source>Pass an additional HTTP header when communicating with a server. If more than one such entry exists, all of them are added as extra headers. To allow overriding the settings inherited from the system config, an empty value will reset the extra headers to the empty list.</source>
          <target state="translated">サーバと通信する際に追加の HTTP ヘッダを渡します。このようなエントリが複数存在する場合は、すべてのエントリが追加ヘッダとして追加されます。システム設定から継承された設定を上書きできるようにするために、空の値を指定すると余分なヘッダは空のリストにリセットされます。</target>
        </trans-unit>
        <trans-unit id="88461608ee691de1cd814b8c5a12a7fe39a53808" translate="yes" xml:space="preserve">
          <source>Pass merge strategy specific option through to the merge strategy.</source>
          <target state="translated">マージ戦略固有のオプションをマージ戦略に渡します。</target>
        </trans-unit>
        <trans-unit id="6972c66b8402bd099c21ba9d94ae803550d21e77" translate="yes" xml:space="preserve">
          <source>Pass the &amp;lt;strategy-option&amp;gt; through to the merge strategy. This implies &lt;code&gt;--merge&lt;/code&gt; and, if no strategy has been specified, &lt;code&gt;-s recursive&lt;/code&gt;. Note the reversal of &lt;code&gt;ours&lt;/code&gt; and &lt;code&gt;theirs&lt;/code&gt; as noted above for the &lt;code&gt;-m&lt;/code&gt; option.</source>
          <target state="translated">&amp;lt;strategy-option&amp;gt;をマージ戦略に渡します。これは &lt;code&gt;--merge&lt;/code&gt; を意味し、戦略が指定されていない場合は &lt;code&gt;-s recursive&lt;/code&gt; になります。 &lt;code&gt;-m&lt;/code&gt; オプションについて上記で説明したように、 &lt;code&gt;ours&lt;/code&gt; と &lt;code&gt;theirs&lt;/code&gt; のものの逆転に注意してください。</target>
        </trans-unit>
        <trans-unit id="471cf94bd65fc727b56b2f8e18afb269faa46e42" translate="yes" xml:space="preserve">
          <source>Pass the &lt;code&gt;--delta-islands&lt;/code&gt; option to &lt;code&gt;git-pack-objects&lt;/code&gt;, see &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects[1]&lt;/a&gt;.</source>
          <target state="translated">パス &lt;code&gt;--delta-islands&lt;/code&gt; へのオプション &lt;code&gt;git-pack-objects&lt;/code&gt; 参照してください&lt;a href=&quot;git-pack-objects&quot;&gt;gitのパック-オブジェクト[1] &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6a1683fce9ff86fab10219f3cc0bfdfabc8f2cdd" translate="yes" xml:space="preserve">
          <source>Pass the &lt;code&gt;--local&lt;/code&gt; option to &lt;code&gt;git pack-objects&lt;/code&gt;. See &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects[1]&lt;/a&gt;.</source>
          <target state="translated">渡し &lt;code&gt;--local&lt;/code&gt; にオプション &lt;code&gt;git pack-objects&lt;/code&gt; 。&lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects [1]を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a642deef0312e0c6bd0a5561d0fd768ee8a59b73" translate="yes" xml:space="preserve">
          <source>Pass the &lt;code&gt;--no-reuse-delta&lt;/code&gt; option to &lt;code&gt;git-pack-objects&lt;/code&gt;, see &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects[1]&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;--no-reuse-delta&lt;/code&gt; オプションを &lt;code&gt;git-pack-objects&lt;/code&gt; に渡します&lt;a href=&quot;git-pack-objects&quot;&gt;。git-pack-objects[1]を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d901d31c7644af40691b80c7d63e45696f17b53b" translate="yes" xml:space="preserve">
          <source>Pass the &lt;code&gt;--no-reuse-object&lt;/code&gt; option to &lt;code&gt;git-pack-objects&lt;/code&gt;, see &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects[1]&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;--no-reuse-object&lt;/code&gt; オプションを &lt;code&gt;git-pack-objects&lt;/code&gt; に渡します&lt;a href=&quot;git-pack-objects&quot;&gt;。git-pack-objects[1]を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3ee5cba414a5270880e2aa4a80f865762fee87e9" translate="yes" xml:space="preserve">
          <source>Pass the &lt;code&gt;-m&lt;/code&gt; flag to &lt;code&gt;git mailinfo&lt;/code&gt; (see &lt;a href=&quot;git-mailinfo&quot;&gt;git-mailinfo[1]&lt;/a&gt;), so that the Message-ID header is added to the commit message. The &lt;code&gt;am.messageid&lt;/code&gt; configuration variable can be used to specify the default behaviour.</source>
          <target state="translated">Message-IDヘッダーがコミットメッセージに追加されるように、 &lt;code&gt;-m&lt;/code&gt; フラグを &lt;code&gt;git mailinfo&lt;/code&gt; （&lt;a href=&quot;git-mailinfo&quot;&gt;git-mailinfo [1]を&lt;/a&gt;参照）に渡します。 &lt;code&gt;am.messageid&lt;/code&gt; の設定変数は、デフォルトの動作を指定するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="e26add554b4352375b32406b09e1002baf88696f" translate="yes" xml:space="preserve">
          <source>Pass the &lt;code&gt;-q&lt;/code&gt; option to &lt;code&gt;git pack-objects&lt;/code&gt;. See &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects[1]&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;-q&lt;/code&gt; オプションを &lt;code&gt;git pack-objects&lt;/code&gt; に渡します。&lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects [1]を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d89c69fc0d489e2189a0abb8c756572cba9d279c" translate="yes" xml:space="preserve">
          <source>Pass the merge strategy-specific option through to the merge strategy. See &lt;a href=&quot;git-merge&quot;&gt;git-merge[1]&lt;/a&gt; for details.</source>
          <target state="translated">マージ戦略固有のオプションをマージ戦略に渡します。詳細については、&lt;a href=&quot;git-merge&quot;&gt;git-merge [1]&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="aae9caba3efe1e125b04992ec6689cc466bc71b8" translate="yes" xml:space="preserve">
          <source>Pass the specified string as a push option for consumption by hooks on the server side. If the server doesn&amp;rsquo;t support push options, error out. See &lt;a href=&quot;git-push&quot;&gt;git-push[1]&lt;/a&gt; and &lt;a href=&quot;githooks&quot;&gt;githooks[5]&lt;/a&gt; for details.</source>
          <target state="translated">指定された文字列をサーバー側のフックで使用するためのプッシュオプションとして渡します。サーバーがプッシュオプションをサポートしていない場合は、エラーになります。詳細については、&lt;a href=&quot;git-push&quot;&gt;git-push [1]&lt;/a&gt;および&lt;a href=&quot;githooks&quot;&gt;githooks [5]&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="3802841770affa53645333dabda9772d509a4944" translate="yes" xml:space="preserve">
          <source>Pass the timestamp fuzz factor to cvsps, in seconds. If unset, cvsps defaults to 300s.</source>
          <target state="translated">タイムスタンプのファズファクタを秒単位で cvsps に渡します.設定されていない場合,cvsps のデフォルトは 300 秒です.</target>
        </trans-unit>
        <trans-unit id="b62f7fb7ee127d211118f2c56411ed681d4dc9a8" translate="yes" xml:space="preserve">
          <source>Passed directly to &lt;code&gt;git rebase&lt;/code&gt; when using &lt;code&gt;dcommit&lt;/code&gt; if a &lt;code&gt;git reset&lt;/code&gt; cannot be used (see &lt;code&gt;dcommit&lt;/code&gt;).</source>
          <target state="translated">直接渡さ &lt;code&gt;git rebase&lt;/code&gt; 使用時 &lt;code&gt;dcommit&lt;/code&gt; を場合 &lt;code&gt;git reset&lt;/code&gt; 使用することができない（参照 &lt;code&gt;dcommit&lt;/code&gt; します）。</target>
        </trans-unit>
        <trans-unit id="e0a119c584f6be9edb9c41e31b2e495e1678cbc8" translate="yes" xml:space="preserve">
          <source>Passes the objects in the bundle to &lt;code&gt;git index-pack&lt;/code&gt; for storage in the repository, then prints the names of all defined references. If a list of references is given, only references matching those in the list are printed. This command is really plumbing, intended to be called only by &lt;code&gt;git fetch&lt;/code&gt;.</source>
          <target state="translated">バンドル内のオブジェクトをリポジトリに保存するために &lt;code&gt;git index-pack&lt;/code&gt; に渡し、定義されているすべての参照の名前を出力します。参照のリストが指定されている場合、リスト内の参照と一致する参照のみが印刷されます。このコマンドは実際に配管であり、 &lt;code&gt;git fetch&lt;/code&gt; によってのみ呼び出されることを意図しています。</target>
        </trans-unit>
        <trans-unit id="76a10ff11a1c062361e6cf9a600e31448471fa51" translate="yes" xml:space="preserve">
          <source>Passing sh -c &quot;some commands&quot; to &quot;git bisect run&quot;</source>
          <target state="translated">sh -c &quot;some commands&quot; を &quot;git bisect run&quot; に渡します。</target>
        </trans-unit>
        <trans-unit id="5323220d01673f917e0cf25de9b3b16456b54e2a" translate="yes" xml:space="preserve">
          <source>Passing the pattern via &amp;lt;file&amp;gt; allows for providing a search pattern containing a \0.</source>
          <target state="translated">&amp;lt;file&amp;gt;を介してパターンを渡すと、\ 0を含む検索パターンを提供できます。</target>
        </trans-unit>
        <trans-unit id="dc25b509070cc72f2f466576d5f86386a7b13eca" translate="yes" xml:space="preserve">
          <source>Password for SMTP-AUTH. The argument is optional: If no argument is specified, then the empty string is used as the password. Default is the value of &lt;code&gt;sendemail.smtpPass&lt;/code&gt;, however &lt;code&gt;--smtp-pass&lt;/code&gt; always overrides this value.</source>
          <target state="translated">SMTP-AUTHのパスワード。引数はオプションです。引数を指定しない場合、空の文字列がパスワードとして使用されます。デフォルトはの値である &lt;code&gt;sendemail.smtpPass&lt;/code&gt; しかし、 &lt;code&gt;--smtp-pass&lt;/code&gt; 、常にこの値を上書きします。</target>
        </trans-unit>
        <trans-unit id="bdca924d25420c3b18edd188df0ec914b14515eb" translate="yes" xml:space="preserve">
          <source>Password specified as an option to all p4 commands, with &lt;code&gt;-P &amp;lt;password&amp;gt;&lt;/code&gt;. The environment variable &lt;code&gt;P4PASS&lt;/code&gt; can be used instead.</source>
          <target state="translated">&lt;code&gt;-P &amp;lt;password&amp;gt;&lt;/code&gt; を使用して、すべてのp4コマンドのオプションとして指定されたパスワード。代わりに、環境変数 &lt;code&gt;P4PASS&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="d3420ceeebad33fa39495a8a02933956bb0a3a55" translate="yes" xml:space="preserve">
          <source>Patch merge data from Arch is used to mark merges in Git as well. Git does not care much about tracking patches, and only considers a merge when a branch incorporates all the commits since the point they forked. The end result is that Git will have a good idea of how far branches have diverged. So the import process does lose some patch-trading metadata.</source>
          <target state="translated">Arch のパッチマージデータは Git でもマージのマークに使われます。Git はパッチの追跡にはあまり関心がなく、ブランチがフォークした時点からすべてのコミットを組み込んだ場合のみマージとみなします。最終的には、ブランチがどこまで分岐したのかを Git が把握できるようになります。そのため、インポート処理ではパッチ追跡のメタデータが失われてしまうことになります。</target>
        </trans-unit>
        <trans-unit id="31c42bf1738e25a658115f73ad50091aa9060241" translate="yes" xml:space="preserve">
          <source>Patch workflow</source>
          <target state="translated">パッチワークフロー</target>
        </trans-unit>
        <trans-unit id="b1f5662dd2e222629919ebbe45b58d0f89867f94" translate="yes" xml:space="preserve">
          <source>Patch workflows</source>
          <target state="translated">パッチワークフロー</target>
        </trans-unit>
        <trans-unit id="27352b2b463b7c072417a02bbdfc4fc80c3a786d" translate="yes" xml:space="preserve">
          <source>Patching</source>
          <target state="translated">Patching</target>
        </trans-unit>
        <trans-unit id="b560ead99e5ad114e3f8a677bf699dbd3c20bb23" translate="yes" xml:space="preserve">
          <source>Path (e.g., &lt;code&gt;repo.git&lt;/code&gt; in &lt;code&gt;https://example.com/repo.git&lt;/code&gt;). The path field of the config key must match the path field of the URL either exactly or as a prefix of slash-delimited path elements. This means a config key with path &lt;code&gt;foo/&lt;/code&gt; matches URL path &lt;code&gt;foo/bar&lt;/code&gt;. A prefix can only match on a slash (&lt;code&gt;/&lt;/code&gt;) boundary. Longer matches take precedence (so a config key with path &lt;code&gt;foo/bar&lt;/code&gt; is a better match to URL path &lt;code&gt;foo/bar&lt;/code&gt; than a config key with just path &lt;code&gt;foo/&lt;/code&gt;).</source>
          <target state="translated">パス（例えば、 &lt;code&gt;repo.git&lt;/code&gt; で &lt;code&gt;https://example.com/repo.git&lt;/code&gt; ）。構成キーのパスフィールドは、URLのパスフィールドと完全に一致するか、スラッシュで区切られたパス要素のプレフィックスとして一致する必要があります。これは、パス &lt;code&gt;foo/&lt;/code&gt; 設定キーがURLパス &lt;code&gt;foo/bar&lt;/code&gt; と一致することを意味します。接頭辞はスラッシュ（ &lt;code&gt;/&lt;/code&gt; ）境界でのみ一致します。より長いマッチが優先されます（パスと設定キーので、 &lt;code&gt;foo/bar&lt;/code&gt; URLパスに良く一致している &lt;code&gt;foo/bar&lt;/code&gt; だけのパスと設定キー以外 &lt;code&gt;foo/&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="21d3e318bf1a1b4158750af5acdb00744a4b43b1" translate="yes" xml:space="preserve">
          <source>Path containing files with the CA certificates to verify the peer with when fetching or pushing over HTTPS. Can be overridden by the &lt;code&gt;GIT_SSL_CAPATH&lt;/code&gt; environment variable.</source>
          <target state="translated">HTTPS経由でフェッチまたはプッシュするときにピアを確認するためのCA証明書が含まれるファイルを含むパス。 &lt;code&gt;GIT_SSL_CAPATH&lt;/code&gt; 環境変数によってオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="fa0b12f866af9cc606a1a97e00f59d3f70f76032" translate="yes" xml:space="preserve">
          <source>Path names are encoded in UTF-8 normalization form C. This applies to tree objects, the index file, ref names, as well as path names in command line arguments, environment variables and config files (&lt;code&gt;.git/config&lt;/code&gt; (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;), &lt;a href=&quot;gitignore&quot;&gt;gitignore[5]&lt;/a&gt;, &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt; and &lt;a href=&quot;gitmodules&quot;&gt;gitmodules[5]&lt;/a&gt;).</source>
          <target state="translated">パス名は、UTF-8正規化形式Cでエンコードされます。これは、ツリーオブジェクト、インデックスファイル、参照名、コマンドライン引数、環境変数、構成ファイル（ &lt;code&gt;.git/config&lt;/code&gt; （&lt;a href=&quot;git-config&quot;&gt;git-configを&lt;/a&gt;参照）のパス名に適用されます[1]）、&lt;a href=&quot;gitignore&quot;&gt;gitignore [5]&lt;/a&gt;、&lt;a href=&quot;gitattributes&quot;&gt;gitattributes [5]&lt;/a&gt;および&lt;a href=&quot;gitmodules&quot;&gt;gitmodules [5]&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="9dbaaebd4a9c17d56a6b23f6ab97e6dcfee1c1d1" translate="yes" xml:space="preserve">
          <source>Path names in extended headers do not include the &lt;code&gt;a/&lt;/code&gt; and &lt;code&gt;b/&lt;/code&gt; prefixes.</source>
          <target state="translated">拡張ヘッダーのパス名には、 &lt;code&gt;a/&lt;/code&gt; および &lt;code&gt;b/&lt;/code&gt; プレフィックスは含まれません。</target>
        </trans-unit>
        <trans-unit id="398482aa4d5dc2ffcdb7a8eb1faf09763e2f1990" translate="yes" xml:space="preserve">
          <source>Path resolution via &lt;code&gt;git rev-parse --git-path&lt;/code&gt; uses either $GIT_DIR or $GIT_COMMON_DIR depending on the path. For example, in the linked working tree &lt;code&gt;git rev-parse --git-path HEAD&lt;/code&gt; returns &lt;code&gt;/path/main/.git/worktrees/test-next/HEAD&lt;/code&gt; (not &lt;code&gt;/path/other/test-next/.git/HEAD&lt;/code&gt; or &lt;code&gt;/path/main/.git/HEAD&lt;/code&gt;) while &lt;code&gt;git
rev-parse --git-path refs/heads/master&lt;/code&gt; uses $GIT_COMMON_DIR and returns &lt;code&gt;/path/main/.git/refs/heads/master&lt;/code&gt;, since refs are shared across all working trees, except refs/bisect and refs/worktree.</source>
          <target state="translated">&lt;code&gt;git rev-parse --git-path&lt;/code&gt; によるパス解決は、パスに応じて$ GIT_DIRまたは$ GIT_COMMON_DIRを使用します。たとえば、リンクされた作業ツリーでは &lt;code&gt;git rev-parse --git-path HEAD&lt;/code&gt; は &lt;code&gt;/path/main/.git/worktrees/test-next/HEAD&lt;/code&gt; を返します（ &lt;code&gt;/path/other/test-next/.git/HEAD&lt;/code&gt; または &lt;code&gt;/path/main/.git/HEAD&lt;/code&gt; ）一方 &lt;code&gt;git rev-parse --git-path refs/heads/master&lt;/code&gt; 使用$ GIT_COMMON_DIR戻る &lt;code&gt;/path/main/.git/refs/heads/master&lt;/code&gt; 参考文献は、すべての間で共有されているので、 refs / bisectおよびrefs / worktreeを除く、作業ツリー。</target>
        </trans-unit>
        <trans-unit id="03df17523a63eaf9444aa4e19f8871b2082b9fd5" translate="yes" xml:space="preserve">
          <source>Path resolution via &lt;code&gt;git rev-parse --git-path&lt;/code&gt; uses either &lt;code&gt;$GIT_DIR&lt;/code&gt; or &lt;code&gt;$GIT_COMMON_DIR&lt;/code&gt; depending on the path. For example, in the linked working tree &lt;code&gt;git rev-parse --git-path HEAD&lt;/code&gt; returns &lt;code&gt;/path/main/.git/worktrees/test-next/HEAD&lt;/code&gt; (not &lt;code&gt;/path/other/test-next/.git/HEAD&lt;/code&gt; or &lt;code&gt;/path/main/.git/HEAD&lt;/code&gt;) while &lt;code&gt;git
rev-parse --git-path refs/heads/master&lt;/code&gt; uses &lt;code&gt;$GIT_COMMON_DIR&lt;/code&gt; and returns &lt;code&gt;/path/main/.git/refs/heads/master&lt;/code&gt;, since refs are shared across all working trees, except &lt;code&gt;refs/bisect&lt;/code&gt; and &lt;code&gt;refs/worktree&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;git rev-parse --git-path&lt;/code&gt; によるパス解決では、パスに応じて &lt;code&gt;$GIT_DIR&lt;/code&gt; または &lt;code&gt;$GIT_COMMON_DIR&lt;/code&gt; いずれかが使用されます。たとえば、リンクされた作業ツリーでは、 &lt;code&gt;git rev-parse --git-path HEAD&lt;/code&gt; &lt;code&gt;/path/main/.git/worktrees/test-next/HEAD&lt;/code&gt; は/path/main/.git/worktrees/test-next/HEADを返します（ &lt;code&gt;/path/other/test-next/.git/HEAD&lt;/code&gt; または &lt;code&gt;/path/main/.git/HEAD&lt;/code&gt; ）一方 &lt;code&gt;git rev-parse --git-path refs/heads/master&lt;/code&gt; 使用 &lt;code&gt;$GIT_COMMON_DIR&lt;/code&gt; 戻る &lt;code&gt;/path/main/.git/refs/heads/master&lt;/code&gt; 参考文献は、すべての間で共有されているので、 &lt;code&gt;refs/bisect&lt;/code&gt; および &lt;code&gt;refs/worktree&lt;/code&gt; を除く作業ツリー。</target>
        </trans-unit>
        <trans-unit id="27ac1ba438abc8442b44c3b65ed4fee5e1af6eae" translate="yes" xml:space="preserve">
          <source>Path to a log file where the CVS server interface well&amp;hellip;​ logs various stuff. See &lt;a href=&quot;git-cvsserver&quot;&gt;git-cvsserver[1]&lt;/a&gt;.</source>
          <target state="translated">CVSサーバーインターフェイスのログファイルへのパス...さまざまなものをログに記録します。&lt;a href=&quot;git-cvsserver&quot;&gt;git-cvsserver [1]を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ad9a8cd142a486ee9476680d4a1bf638f8db23fe" translate="yes" xml:space="preserve">
          <source>Path to a store of trusted CA certificates for SMTP SSL/TLS certificate validation (either a directory that has been processed by &lt;code&gt;c_rehash&lt;/code&gt;, or a single file containing one or more PEM format certificates concatenated together: see verify(1) -CAfile and -CApath for more information on these). Set it to an empty string to disable certificate verification. Defaults to the value of the &lt;code&gt;sendemail.smtpsslcertpath&lt;/code&gt; configuration variable, if set, or the backing SSL library&amp;rsquo;s compiled-in default otherwise (which should be the best choice on most platforms).</source>
          <target state="translated">SMTP SSL / TLS証明書の検証用の信頼できるCA証明書のストアへのパス（ &lt;code&gt;c_rehash&lt;/code&gt; によって処理されたディレクトリ、または1つ以上のPEM形式の証明書が連結された単一のファイル：verify（1）を参照してください-CAfileおよび-CApathこれらの詳細については）。空の文字列に設定して、証明書の検証を無効にします。デフォルトは、 &lt;code&gt;sendemail.smtpsslcertpath&lt;/code&gt; 構成変数の値（設定されている場合）、またはバッキングSSLライブラリのコンパイル済みのデフォルト値（それ以外の場合は、ほとんどのプラットフォームで最良の選択です）の値になります。</target>
        </trans-unit>
        <trans-unit id="b2ea00581c7262d0f351e52900685cd26b5cdc9c" translate="yes" xml:space="preserve">
          <source>Path to ca-certificates (either a directory or a single file). Set it to an empty string to disable certificate verification.</source>
          <target state="translated">ca-certificates へのパス (ディレクトリまたは単一ファイル)。証明書の検証を無効にするには、空の文字列を指定します。</target>
        </trans-unit>
        <trans-unit id="59a42b0b47a7f9a3da70b7db0b79cb16c677b919" translate="yes" xml:space="preserve">
          <source>Path to the &lt;code&gt;git-receive-pack&lt;/code&gt; program on the remote end. Sometimes useful when pushing to a remote repository over ssh, and you do not have the program in a directory on the default $PATH.</source>
          <target state="translated">リモートエンドの &lt;code&gt;git-receive-pack&lt;/code&gt; プログラムへのパス。ssh経由でリモートリポジトリにpushするときに、デフォルトの$ PATHのディレクトリにプログラムがない場合に役立つことがあります。</target>
        </trans-unit>
        <trans-unit id="3b50759eb40ac2cfa3120816f612ac8999c3b60c" translate="yes" xml:space="preserve">
          <source>Path to the highlight executable to use (it must be the one from &lt;a href=&quot;http://www.andre-simon.de&quot;&gt;http://www.andre-simon.de&lt;/a&gt; due to assumptions about parameters and output). By default set to &lt;code&gt;highlight&lt;/code&gt;; set it to full path to highlight executable if it is not installed on your web server&amp;rsquo;s PATH. Note that &lt;code&gt;highlight&lt;/code&gt; feature must be set for gitweb to actually use syntax highlighting.</source>
          <target state="translated">使用するハイライト実行可能ファイルへのパス（パラメーターと出力に関する想定により、&lt;a href=&quot;http://www.andre-simon.de&quot;&gt;http：&lt;/a&gt; //www.andre-simon.deからのパスでなければなりません）。デフォルトでは &lt;code&gt;highlight&lt;/code&gt; 設定されています。実行可能ファイルがWebサーバーのPATHにインストールされていない場合は、フルパスに設定して実行可能ファイルを強調表示します。gitwebが実際に構文強調表示を使用するには、 &lt;code&gt;highlight&lt;/code&gt; 機能を設定する必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="11df29eff55bbaa504f93c347ee5438c05683eb4" translate="yes" xml:space="preserve">
          <source>Path to wherever your core Git programs are installed. This can also be controlled by setting the GIT_EXEC_PATH environment variable. If no path is given, &lt;code&gt;git&lt;/code&gt; will print the current setting and then exit.</source>
          <target state="translated">コアGitプログラムがインストールされている場所へのパス。これは、GIT_EXEC_PATH環境変数を設定して制御することもできます。パスが指定されていない場合、 &lt;code&gt;git&lt;/code&gt; は現在の設定を出力して終了します。</target>
        </trans-unit>
        <trans-unit id="8bee226624e5e35cc1c649560301ce6a88341f60" translate="yes" xml:space="preserve">
          <source>Pathname Format Notes and -z</source>
          <target state="translated">パス名フォーマットの注意事項と -z</target>
        </trans-unit>
        <trans-unit id="9b913a330f922046389c0cfbb6fac51af3762ee9" translate="yes" xml:space="preserve">
          <source>Pathname to the file containing the certificate bundle that should be used to verify the proxy with when using an HTTPS proxy. Can be overriden by the &lt;code&gt;GIT_PROXY_SSL_CAINFO&lt;/code&gt; environment variable.</source>
          <target state="translated">HTTPSプロキシを使用するときにプロキシを検証するために使用する必要がある証明書バンドルを含むファイルへのパス名。 &lt;code&gt;GIT_PROXY_SSL_CAINFO&lt;/code&gt; 環境変数でオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="baad7e07c2b2e1eb7a0f4231584855cba490b25b" translate="yes" xml:space="preserve">
          <source>Pathnames with &quot;unusual&quot; characters are quoted as explained for the configuration variable &lt;code&gt;core.quotePath&lt;/code&gt; (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;).</source>
          <target state="translated">「異常な」文字を含むパス名は、構成変数 &lt;code&gt;core.quotePath&lt;/code&gt; で説明されているように引用符で囲まれます（&lt;a href=&quot;git-config&quot;&gt;git-config [1]を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="faafd85683bf6f5bc5b49f23461483144ba14fdc" translate="yes" xml:space="preserve">
          <source>Paths in which the change applied cleanly are updated both in the index file and in your working tree.</source>
          <target state="translated">変更がクリーンに適用されたパスは、インデックスファイルと作業ツリーの両方で更新されます。</target>
        </trans-unit>
        <trans-unit id="02f71c6b4a6bff00e221f1c59f788c05e9bf57ff" translate="yes" xml:space="preserve">
          <source>Paths may need to be prefixed with &lt;code&gt;--&lt;/code&gt; to separate them from options or the revision range, when confusion arises.</source>
          <target state="translated">混乱が生じた場合、オプションまたはリビジョン範囲からそれらを分離するために、パスの前に &lt;code&gt;--&lt;/code&gt; を付ける必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="72d92e139b6d6167634cfbe91ec0c2ba1cace91a" translate="yes" xml:space="preserve">
          <source>Paths that merged cleanly are updated both in the index file and in your working tree.</source>
          <target state="translated">クリーンにマージされたパスは、インデックスファイルと作業ツリーの両方で更新されます。</target>
        </trans-unit>
        <trans-unit id="4d8223b3c254f584e9779f7d614adb9369021888" translate="yes" xml:space="preserve">
          <source>Paths to submodule(s). When specified this will restrict the command to only operate on the submodules found at the specified paths. (This argument is required with add).</source>
          <target state="translated">サブモジュールへのパス。これを指定すると、指定したパスで見つかったサブモジュールに対してのみコマンドが動作するように制限されます。(addではこの引数が必要です)。</target>
        </trans-unit>
        <trans-unit id="d837befa2a08a2d2c5de9a52f9ba8092713b988b" translate="yes" xml:space="preserve">
          <source>Pathspec is passed in &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; instead of commandline args. If &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; is exactly &lt;code&gt;-&lt;/code&gt; then standard input is used. Pathspec elements are separated by LF or CR/LF. Pathspec elements can be quoted as explained for the configuration variable &lt;code&gt;core.quotePath&lt;/code&gt; (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;). See also &lt;code&gt;--pathspec-file-nul&lt;/code&gt; and global &lt;code&gt;--literal-pathspecs&lt;/code&gt;.</source>
          <target state="translated">pathspecは、コマンドライン引数の代わりに &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; で渡されます。 &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; が正確な場合 &lt;code&gt;-&lt;/code&gt; 標準入力が使用されます。Pathspec要素は、LFまたはCR / LFで区切られます。pathspec要素は、構成変数 &lt;code&gt;core.quotePath&lt;/code&gt; （&lt;a href=&quot;git-config&quot;&gt;git-config [1]を&lt;/a&gt;参照）で説明したように引用できます。 &lt;code&gt;--pathspec-file-nul&lt;/code&gt; およびglobal &lt;code&gt;--literal-pathspecs&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="3c3fe95fefb92e7001401ae2dddbe0254cb07692" translate="yes" xml:space="preserve">
          <source>Pathspecs are used on the command line of &quot;git ls-files&quot;, &quot;git ls-tree&quot;, &quot;git add&quot;, &quot;git grep&quot;, &quot;git diff&quot;, &quot;git checkout&quot;, and many other commands to limit the scope of operations to some subset of the tree or worktree. See the documentation of each command for whether paths are relative to the current directory or toplevel. The pathspec syntax is as follows:</source>
          <target state="translated">Pathspecs は、&quot;git ls-files&quot;、&quot;git ls-tree&quot;、&quot;git add&quot;、&quot;git grep&quot;、&quot;git diff&quot;、&quot;git checkout&quot; などのコマンドラインで使用され、ツリーやワークツリーの一部に操作範囲を限定するために使用されます。パスがカレントディレクトリからの相対パスかトップレベルからの相対パスかについては、各コマンドのドキュメントを参照してください。pathspecの構文は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="3edd060b9dbe00aa0b104e48e6298fa38d5e841a" translate="yes" xml:space="preserve">
          <source>Pattern format</source>
          <target state="translated">パターン形式</target>
        </trans-unit>
        <trans-unit id="fcba9b37f153a6df141f56c87f41e26ebdda34ce" translate="yes" xml:space="preserve">
          <source>Pattern used to limit paths in Git commands.</source>
          <target state="translated">Git コマンドでパスを制限するためのパターン。</target>
        </trans-unit>
        <trans-unit id="eb7b848d74da9a813e33fe644876b71e9e6bcaa4" translate="yes" xml:space="preserve">
          <source>Patterns have the same syntax and semantics as patterns used for fnmatch(3) without the FNM_PATHNAME flag, except a pathname also matches a pattern if removing any number of the final pathname components matches the pattern. For example, the pattern &quot;&lt;code&gt;foo*bar&lt;/code&gt;&quot; matches &quot;&lt;code&gt;fooasdfbar&lt;/code&gt;&quot; and &quot;&lt;code&gt;foo/bar/baz/asdf&lt;/code&gt;&quot; but not &quot;&lt;code&gt;foobarx&lt;/code&gt;&quot;.</source>
          <target state="translated">パターンは、FNM_PATHNAMEフラグなしでfnmatch（3）に使用されるパターンと同じ構文とセマンティクスを持っていますが、最終パス名コンポーネントをいくつでも削除するとパターンが一致する場合、パス名もパターンと一致します。例えば、パターン「 &lt;code&gt;foo*bar&lt;/code&gt; 」マッチ「 &lt;code&gt;fooasdfbar&lt;/code&gt; 」と「 &lt;code&gt;foo/bar/baz/asdf&lt;/code&gt; 」ではなく「 &lt;code&gt;foobarx&lt;/code&gt; 」。</target>
        </trans-unit>
        <trans-unit id="fb013761be8ab363fba21719f323aaadcbd3ba0f" translate="yes" xml:space="preserve">
          <source>Patterns read from &lt;code&gt;$GIT_DIR/info/exclude&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$GIT_DIR/info/exclude&lt;/code&gt; から読み取ったパターン。</target>
        </trans-unit>
        <trans-unit id="6698f9ee7644a05337be6a499b35a3dc93d5c62b" translate="yes" xml:space="preserve">
          <source>Patterns read from a &lt;code&gt;.gitignore&lt;/code&gt; file in the same directory as the path, or in any parent directory, with patterns in the higher level files (up to the toplevel of the work tree) being overridden by those in lower level files down to the directory containing the file. These patterns match relative to the location of the &lt;code&gt;.gitignore&lt;/code&gt; file. A project normally includes such &lt;code&gt;.gitignore&lt;/code&gt; files in its repository, containing patterns for files generated as part of the project build.</source>
          <target state="translated">パスと同じディレクトリまたは任意の親ディレクトリにある &lt;code&gt;.gitignore&lt;/code&gt; ファイルから読み取られたパターン。上位レベルのファイル（作業ツリーの最上位レベルまで）のパターンは、下位レベルのファイルのパターンによって上書きされ、ディレクトリに移動します。ファイルを含みます。これらのパターンは、 &lt;code&gt;.gitignore&lt;/code&gt; ファイルの場所に対して相対的に一致します。プロジェクトは通常、そのような &lt;code&gt;.gitignore&lt;/code&gt; ファイルをリポジトリに含み、プロジェクトビルドの一部として生成されたファイルのパターンを含みます。</target>
        </trans-unit>
        <trans-unit id="36ee091d7bc3859a1b36e4f946f23e3881e4ee18" translate="yes" xml:space="preserve">
          <source>Patterns read from the command line for those commands that support them.</source>
          <target state="translated">サポートしているコマンドのためにコマンドラインから読み込んだパターン。</target>
        </trans-unit>
        <trans-unit id="eafc03d17e54d88cb802971c79de6de883bd2e33" translate="yes" xml:space="preserve">
          <source>Patterns read from the file specified by the configuration variable &lt;code&gt;core.excludesFile&lt;/code&gt;.</source>
          <target state="translated">構成変数 &lt;code&gt;core.excludesFile&lt;/code&gt; で指定されたファイルから読み取られたパターン。</target>
        </trans-unit>
        <trans-unit id="3d5b457ce32a5c844bdd2578141f772cb2dfe28f" translate="yes" xml:space="preserve">
          <source>Patterns which a user wants Git to ignore in all situations (e.g., backup or temporary files generated by the user&amp;rsquo;s editor of choice) generally go into a file specified by &lt;code&gt;core.excludesFile&lt;/code&gt; in the user&amp;rsquo;s &lt;code&gt;~/.gitconfig&lt;/code&gt;. Its default value is $XDG_CONFIG_HOME/git/ignore. If $XDG_CONFIG_HOME is either not set or empty, $HOME/.config/git/ignore is used instead.</source>
          <target state="translated">ユーザーがGitにすべての状況で無視してほしいパターン（たとえば、選択したユーザーのエディターによって生成されたバックアップファイルや一時ファイル）は、通常、ユーザーの &lt;code&gt;~/.gitconfig&lt;/code&gt; の &lt;code&gt;core.excludesFile&lt;/code&gt; で指定されたファイルに入ります。そのデフォルト値は$ XDG_CONFIG_HOME / git / ignoreです。$ XDG_CONFIG_HOMEが設定されていないか空の場合、代わりに$ HOME / .config / git / ignoreが使用されます。</target>
        </trans-unit>
        <trans-unit id="5587255035843df5d5295452dbedab67822586cc" translate="yes" xml:space="preserve">
          <source>Patterns which are specific to a particular repository but which do not need to be shared with other related repositories (e.g., auxiliary files that live inside the repository but are specific to one user&amp;rsquo;s workflow) should go into the &lt;code&gt;$GIT_DIR/info/exclude&lt;/code&gt; file.</source>
          <target state="translated">特定のリポジトリに固有であるが、他の関連リポジトリと共有する必要がないパターン（たとえば、リポジトリ内に存在するが、1人のユーザーのワークフローに固有である補助ファイル）は、 &lt;code&gt;$GIT_DIR/info/exclude&lt;/code&gt; ファイルに入れる必要があります。</target>
        </trans-unit>
        <trans-unit id="97235836632b1fb86b67505c96cba9f6f391329a" translate="yes" xml:space="preserve">
          <source>Patterns which should be version-controlled and distributed to other repositories via clone (i.e., files that all developers will want to ignore) should go into a &lt;code&gt;.gitignore&lt;/code&gt; file.</source>
          <target state="translated">バージョン管理され、クローンを介して他のリポジトリに配布されるパターン（つまり、すべての開発者が無視するファイル）は、 &lt;code&gt;.gitignore&lt;/code&gt; ファイルに入れます。</target>
        </trans-unit>
        <trans-unit id="74e957861d59dc180f4938a7e5cbcccc25f5a3ea" translate="yes" xml:space="preserve">
          <source>Patterns will normally need quoting.</source>
          <target state="translated">パターンは通常引用が必要です。</target>
        </trans-unit>
        <trans-unit id="df5e4a7c782200671a0c551a8ae8bde4cbfd4554" translate="yes" xml:space="preserve">
          <source>Peek at a remote&amp;rsquo;s branch, without configuring the remote in your local repository:</source>
          <target state="translated">ローカルリポジトリでリモートを構成せずに、リモートのブランチをのぞきます。</target>
        </trans-unit>
        <trans-unit id="2eee9784312fca59a15483a1887af3e9d7aeb47b" translate="yes" xml:space="preserve">
          <source>People needing to do actual development will also want to read &lt;a href=&quot;#Developing-With-git&quot;&gt;Developing with Git&lt;/a&gt; and &lt;a href=&quot;#sharing-development&quot;&gt;Sharing development with others&lt;/a&gt;.</source>
          <target state="translated">実際の開発を行う必要がある人は&lt;a href=&quot;#Developing-With-git&quot;&gt;、「Git&lt;/a&gt;を使用した&lt;a href=&quot;#sharing-development&quot;&gt;開発」&lt;/a&gt;および「他の人との開発の共有」も読んでください。</target>
        </trans-unit>
        <trans-unit id="d16acfd9d0006fc21d168918fe3efc81d8650072" translate="yes" xml:space="preserve">
          <source>People who play the &lt;a href=&quot;#INTEGRATOR&quot;&gt;Integrator&lt;/a&gt; role need to learn some more commands in addition to the above.</source>
          <target state="translated">&lt;a href=&quot;#INTEGRATOR&quot;&gt;インテグレーターの&lt;/a&gt;役割を果たしている人々は、上記に加えていくつかのより多くのコマンドを学ぶ必要があります。</target>
        </trans-unit>
        <trans-unit id="48b4677fc2e9a16153ae455818d81437374385ab" translate="yes" xml:space="preserve">
          <source>Per-repository gitweb configuration</source>
          <target state="translated">リポジトリごとの gitweb の設定</target>
        </trans-unit>
        <trans-unit id="a457d6f200ccaae5acadefc147a0317025017a2f" translate="yes" xml:space="preserve">
          <source>Perforce keeps the encoding of a path as given by the originating OS. Git expects paths encoded as UTF-8. Use this config to tell git-p4 what encoding Perforce had used for the paths. This encoding is used to transcode the paths to UTF-8. As an example, Perforce on Windows often uses &quot;cp1252&quot; to encode path names.</source>
          <target state="translated">Perforce は、パスのエンコーディングを元の OS から与えられたものとして保持します。Git は UTF-8 でエンコードされたパスを想定しています。この config を使用して、Perforce がパスに使用したエンコーディングを git-p4 に伝えます。このエンコーディングは、パスを UTF-8 にトランスコードするために使われます。たとえば、Windows 上の Perforce はよく &quot;cp1252&quot; を使ってパス名をエンコードしています。</target>
        </trans-unit>
        <trans-unit id="03b8553af827c912cedc4f1a54e56b3f62407825" translate="yes" xml:space="preserve">
          <source>Perform a bare clone. See &lt;a href=&quot;git-clone&quot;&gt;git-clone[1]&lt;/a&gt;.</source>
          <target state="translated">ベアクローンを実行します。&lt;a href=&quot;git-clone&quot;&gt;git-clone [1]を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4d72b7a492b7bd341e81ed1aa91cf43a8cb1b23e" translate="yes" xml:space="preserve">
          <source>Perform a merge, not just a read. The command will refuse to run if your index file has unmerged entries, indicating that you have not finished previous merge you started.</source>
          <target state="translated">単なる読み込みではなく、マージを実行してください。インデックスファイルにマージされていないエントリがある場合、このコマンドは実行を拒否します。</target>
        </trans-unit>
        <trans-unit id="eccacfa088a41a325854fbfce829a88ff14b78ec" translate="yes" xml:space="preserve">
          <source>Perform a tab expansion (replace each tab with enough spaces to fill to the next display column that is multiple of &lt;code&gt;&amp;lt;n&amp;gt;&lt;/code&gt;) in the log message before showing it in the output. &lt;code&gt;--expand-tabs&lt;/code&gt; is a short-hand for &lt;code&gt;--expand-tabs=8&lt;/code&gt;, and &lt;code&gt;--no-expand-tabs&lt;/code&gt; is a short-hand for &lt;code&gt;--expand-tabs=0&lt;/code&gt;, which disables tab expansion.</source>
          <target state="translated">出力に表示する前に、ログメッセージでタブ拡張（各タブを &lt;code&gt;&amp;lt;n&amp;gt;&lt;/code&gt; の倍数である次の表示列に入力するのに十分なスペースで置き換えます）を実行します。 &lt;code&gt;--expand-tabs&lt;/code&gt; ショートハンドで &lt;code&gt;--expand-tabs=8&lt;/code&gt; 、及び &lt;code&gt;--no-expand-tabs&lt;/code&gt; ショートハンドで &lt;code&gt;--expand-tabs=0&lt;/code&gt; タブ拡張を無効にし、。</target>
        </trans-unit>
        <trans-unit id="6fe3dd23120fae0b6c8f1955f52c35dc123f3355" translate="yes" xml:space="preserve">
          <source>Perform move and/or copy detection, as described in the &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt; manual page, and use it to generate rename and copy commands in the output dump.</source>
          <target state="translated">&lt;a href=&quot;git-diff&quot;&gt;git-diff [1]の&lt;/a&gt;マニュアルページで説明されているように、移動および/またはコピーの検出を実行し、それを使用して出力ダンプに名前変更およびコピーコマンドを生成します。</target>
        </trans-unit>
        <trans-unit id="567ab62415c3403908dcc89e62181367d58a1292" translate="yes" xml:space="preserve">
          <source>Perform only a single read-write cycle with stdin and stdout. This fits with the HTTP POST request processing model where a program may read the request, write a response, and must exit.</source>
          <target state="translated">stdin と stdout を使用して、単一の読み書きサイクルのみを実行します。これは、プログラムがリクエストを読み込んでレスポンスを書き、終了しなければならない HTTP POST リクエスト処理モデルに適合します。</target>
        </trans-unit>
        <trans-unit id="41e22f08445cd4ffeacb1dbe66209f768caca3d4" translate="yes" xml:space="preserve">
          <source>Perform sanity checks on patches. Currently, validation means the following:</source>
          <target state="translated">パッチのサニティチェックを行う。現在のところ、バリデーションとは以下のことを意味します。</target>
        </trans-unit>
        <trans-unit id="5dd19cbcd38d018175e7d4b32fed6afd6bedcbe4" translate="yes" xml:space="preserve">
          <source>Perform the merge and commit the result. This option can be used to override --no-commit.</source>
          <target state="translated">マージを実行し、結果をコミットします。このオプションは --no-commit をオーバーライドするために使用できます。</target>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">Performance</target>
        </trans-unit>
        <trans-unit id="7b942adfd148d1f49e5f455e2928985f17ee890d" translate="yes" xml:space="preserve">
          <source>Performance and Compression Tuning</source>
          <target state="translated">パフォーマンスとコンプレッションのチューニング</target>
        </trans-unit>
        <trans-unit id="9848b9866799244495cf3924e3205cf2b3c1519c" translate="yes" xml:space="preserve">
          <source>Performing a three-way merge</source>
          <target state="translated">3 者間マージの実行</target>
        </trans-unit>
        <trans-unit id="c7a1bc80737fe18d499952e507805c3eb4a06cbb" translate="yes" xml:space="preserve">
          <source>Performing text diffs of binary files</source>
          <target state="translated">バイナリファイルのテキスト差分の実行</target>
        </trans-unit>
        <trans-unit id="eefd6fa4d473259c02ba61e1f0886b5b36cd638b" translate="yes" xml:space="preserve">
          <source>Pick &lt;code&gt;HEAD&lt;/code&gt; when it asks what branch/tag to check out. Untick the &quot;launch commit wizard&quot; to avoid committing the .project file.</source>
          <target state="translated">チェックアウトするブランチ/タグを尋ねられたら、 &lt;code&gt;HEAD&lt;/code&gt; を選択します。.projectファイルをコミットしないようにするには、「起動コミットウィザード」のチェックを外します。</target>
        </trans-unit>
        <trans-unit id="84307347f945f7519a1053bc099c7c72668957a6" translate="yes" xml:space="preserve">
          <source>Pick out and massage parameters</source>
          <target state="translated">ピックアップとマッサージパラメータ</target>
        </trans-unit>
        <trans-unit id="6fcb3939990224a308d3440baf7b583ff2b6b3d4" translate="yes" xml:space="preserve">
          <source>Pipe all output into &lt;code&gt;less&lt;/code&gt; (or if set, $PAGER) if standard output is a terminal. This overrides the &lt;code&gt;pager.&amp;lt;cmd&amp;gt;&lt;/code&gt; configuration options (see the &quot;Configuration Mechanism&quot; section below).</source>
          <target state="translated">標準出力が端末の場合、すべての出力を &lt;code&gt;less&lt;/code&gt; （または設定されている場合は$ PAGER）にパイプします。これにより、 &lt;code&gt;pager.&amp;lt;cmd&amp;gt;&lt;/code&gt; 構成オプションが上書きされます（以下の「構成メカニズム」セクションを参照）。</target>
        </trans-unit>
        <trans-unit id="cbb76042b365f8d09d0e51150e4e490e9d51908c" translate="yes" xml:space="preserve">
          <source>Pitfalls with submodules</source>
          <target state="translated">サブモジュールの落とし穴</target>
        </trans-unit>
        <trans-unit id="bf7deb7a333b527df81c06ff54d552140bbe3e03" translate="yes" xml:space="preserve">
          <source>Place the resulting bug report file in &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; instead of the root of the Git repository.</source>
          <target state="translated">結果のバグレポートファイルをGitリポジトリのルートではなく &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; に配置します。</target>
        </trans-unit>
        <trans-unit id="9bdaaf18e8d137e15a223b206babd14884c750c4" translate="yes" xml:space="preserve">
          <source>Placeholders that affect formatting of later placeholders:</source>
          <target state="translated">後のプレースホルダの書式設定に影響を与えるプレースホルダ。</target>
        </trans-unit>
        <trans-unit id="ac211ac96ed9534ab58287056fd17e14f5f3e99f" translate="yes" xml:space="preserve">
          <source>Placeholders that expand to a single literal character:</source>
          <target state="translated">1文字のリテラルに展開するプレースホルダ。</target>
        </trans-unit>
        <trans-unit id="d70cc19bb51191879a6f88620cd832b063255806" translate="yes" xml:space="preserve">
          <source>Placeholders that expand to information extracted from the commit:</source>
          <target state="translated">コミットから抽出した情報に展開するプレースホルダ。</target>
        </trans-unit>
        <trans-unit id="a17341864ca5844ed689cbcc0e99aa3136fe86e9" translate="yes" xml:space="preserve">
          <source>Placing a &lt;code&gt;progress&lt;/code&gt; command immediately after a &lt;code&gt;checkpoint&lt;/code&gt; will inform the reader when the &lt;code&gt;checkpoint&lt;/code&gt; has been completed and it can safely access the refs that fast-import updated.</source>
          <target state="translated">&lt;code&gt;checkpoint&lt;/code&gt; 直後に &lt;code&gt;progress&lt;/code&gt; コマンドを置くと、 &lt;code&gt;checkpoint&lt;/code&gt; が完了したときにリーダーに通知され、高速インポートが更新した参照に安全にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="29d132c8dca94eedc4761b19f4e56a63b7eb3b41" translate="yes" xml:space="preserve">
          <source>Please note that these range notation can be used with both gitk and &quot;git log&quot;.</source>
          <target state="translated">これらの範囲表記はgitkでも「git log」でも使えますのでご注意ください。</target>
        </trans-unit>
        <trans-unit id="a872f84e7510205bc273ea7f3487281d6e0b57f1" translate="yes" xml:space="preserve">
          <source>Please note that using the &lt;code&gt;working-tree-encoding&lt;/code&gt; attribute may have a number of pitfalls:</source>
          <target state="translated">&lt;code&gt;working-tree-encoding&lt;/code&gt; 属性を使用すると、いくつかの落とし穴があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="cddad527343fcd5e5d11ccf1bbf7e571af789394" translate="yes" xml:space="preserve">
          <source>Please note that you cannot use an existing &lt;code&gt;filter.&amp;lt;driver&amp;gt;.clean&lt;/code&gt; or &lt;code&gt;filter.&amp;lt;driver&amp;gt;.smudge&lt;/code&gt; command with &lt;code&gt;filter.&amp;lt;driver&amp;gt;.process&lt;/code&gt; because the former two use a different inter process communication protocol than the latter one.</source>
          <target state="translated">既存の &lt;code&gt;filter.&amp;lt;driver&amp;gt;.clean&lt;/code&gt; または &lt;code&gt;filter.&amp;lt;driver&amp;gt;.smudge&lt;/code&gt; コマンドで &lt;code&gt;filter.&amp;lt;driver&amp;gt;.process&lt;/code&gt; 使用することはできないことに注意してください。前者の2つは後者のものとは異なるプロセス間通信プロトコルを使用するためです。</target>
        </trans-unit>
        <trans-unit id="c888d4a15197bdd365e37f0125b6b805c57d4e97" translate="yes" xml:space="preserve">
          <source>Please report any bugs or feature requests to &lt;a href=&quot;mailto:git@vger.kernel.org&quot;&gt;git@vger.kernel.org&lt;/a&gt;, putting &quot;gitweb&quot; in the subject of email.</source>
          <target state="translated">バグや機能のリクエストは&lt;a href=&quot;mailto:git@vger.kernel.org&quot;&gt;git@vger.kernel.org&lt;/a&gt;に報告し、電子メールの件名に「gitweb」を入れてください。</target>
        </trans-unit>
        <trans-unit id="f21025df43e0479e4864841eab47e70f94cac837" translate="yes" xml:space="preserve">
          <source>Please see &lt;a href=&quot;git-commit&quot;&gt;git-commit[1]&lt;/a&gt; for alternative ways to add content to a commit.</source>
          <target state="translated">&lt;a href=&quot;git-commit&quot;&gt;コミット&lt;/a&gt;にコンテンツを追加する別の方法については、git-commit [1]を参照してください。</target>
        </trans-unit>
        <trans-unit id="0aae3fa8eecc17be69c8d9ed6207c5a978bd3a01" translate="yes" xml:space="preserve">
          <source>Please see &lt;a href=&quot;gitglossary&quot;&gt;gitglossary[7]&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;gitglossary&quot;&gt;gitglossary [7]を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3f7f1dd4c4366b63a145049cec2f6258fda24d83" translate="yes" xml:space="preserve">
          <source>Please see the &lt;a href=&quot;gitrepository-layout&quot;&gt;gitrepository-layout[5]&lt;/a&gt; document.</source>
          <target state="translated">&lt;a href=&quot;gitrepository-layout&quot;&gt;gitrepository-layout [5]&lt;/a&gt;ドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="9a1b79b9af4861f2750548663461bdd94c841127" translate="yes" xml:space="preserve">
          <source>Plumbing Commands</source>
          <target state="translated">配管コマンド</target>
        </trans-unit>
        <trans-unit id="dec39f942885f611a23f70c734d12d63a6e011e1" translate="yes" xml:space="preserve">
          <source>Points to the location where you put &lt;code&gt;git-favicon.png&lt;/code&gt; on your web server, or to be more the generic URI of favicon, which will be served as &quot;image/png&quot; type. Web browsers that support favicons (website icons) may display them in the browser&amp;rsquo;s URL bar and next to the site name in bookmarks. Relative to the base URI of gitweb. Can be adjusted at build time using &lt;code&gt;GITWEB_FAVICON&lt;/code&gt; variable. By default set to &lt;code&gt;static/git-favicon.png&lt;/code&gt;.</source>
          <target state="translated">ウェブサーバー上で &lt;code&gt;git-favicon.png&lt;/code&gt; を配置する場所、または &quot;image / png&quot;タイプとして提供されるファビコンの汎用URIを指します。ファビコン（Webサイトアイコン）をサポートするWebブラウザは、ブラウザのURLバーとブックマークのサイト名の横にそれらを表示する場合があります。 gitwebのベースURIを基準にしています。ビルド時に &lt;code&gt;GITWEB_FAVICON&lt;/code&gt; 変数を使用して調整できます。デフォルトでは &lt;code&gt;static/git-favicon.png&lt;/code&gt; に設定されています。</target>
        </trans-unit>
        <trans-unit id="2a40c85c88d228670d36d1d2ec3cd1298a4f0842" translate="yes" xml:space="preserve">
          <source>Points to the location where you put &lt;code&gt;git-logo.png&lt;/code&gt; on your web server, or to be more the generic URI of logo, 72x27 size). This image is displayed in the top right corner of each gitweb page and used as a logo for the Atom feed. Relative to the base URI of gitweb (as a path). Can be adjusted when building gitweb using &lt;code&gt;GITWEB_LOGO&lt;/code&gt; variable By default set to &lt;code&gt;static/git-logo.png&lt;/code&gt;.</source>
          <target state="translated">ウェブサーバー上で &lt;code&gt;git-logo.png&lt;/code&gt; を配置する場所、またはロゴの汎用URI、72x27サイズを指します）。この画像は各gitwebページの右上隅に表示され、Atomフィードのロゴとして使用されます。gitwebのベースURIを基準にして（パスとして）。 &lt;code&gt;GITWEB_LOGO&lt;/code&gt; 変数を使用してgitwebをビルドするときに調整できます。デフォルトでは &lt;code&gt;static/git-logo.png&lt;/code&gt; に設定されています。</target>
        </trans-unit>
        <trans-unit id="9efd93f849deab28e0c41b0eba10b16f24a27c09" translate="yes" xml:space="preserve">
          <source>Points to the location where you put &lt;code&gt;gitweb.js&lt;/code&gt; on your web server, or to be more generic the URI of JavaScript code used by gitweb. Relative to the base URI of gitweb. Can be set at build time using the &lt;code&gt;GITWEB_JS&lt;/code&gt; build-time configuration variable.</source>
          <target state="translated">&lt;code&gt;gitweb.js&lt;/code&gt; をWebサーバーに配置する場所、またはより一般的にはgitwebで使用されるJavaScriptコードのURIを指します。gitwebのベースURIを基準にしています。ビルド時に &lt;code&gt;GITWEB_JS&lt;/code&gt; ビルド時構成変数を使用して設定できます。</target>
        </trans-unit>
        <trans-unit id="dd1dad0df44ac8f0bb40744bffd4b05eb8a096a6" translate="yes" xml:space="preserve">
          <source>Populating a git repository</source>
          <target state="translated">git リポジトリを投入する</target>
        </trans-unit>
        <trans-unit id="4cbb689daa97a321dd935e9f85d305871f823e3a" translate="yes" xml:space="preserve">
          <source>Porcelain Format</source>
          <target state="translated">磁器の形式</target>
        </trans-unit>
        <trans-unit id="7ed7cead662f9f179a2456c29bfdc5633f939f7a" translate="yes" xml:space="preserve">
          <source>Porcelain Format Version 1</source>
          <target state="translated">ポーセリンフォーマットバージョン1</target>
        </trans-unit>
        <trans-unit id="10c9d2c56f0a79c71fe3af29b00f0a78804206c5" translate="yes" xml:space="preserve">
          <source>Porcelain Format Version 2</source>
          <target state="translated">ポーセリンフォーマットバージョン2</target>
        </trans-unit>
        <trans-unit id="f0ec9d0a213551004afb541fee3084e09f53878a" translate="yes" xml:space="preserve">
          <source>Port number (e.g., &lt;code&gt;8080&lt;/code&gt; in &lt;code&gt;http://example.com:8080/&lt;/code&gt;). This field must match exactly between the config key and the URL. Omitted port numbers are automatically converted to the correct default for the scheme before matching.</source>
          <target state="translated">（例えば、ポート番号 &lt;code&gt;8080&lt;/code&gt; で &lt;code&gt;http://example.com:8080/&lt;/code&gt; ）。このフィールドは、構成キーとURLの間で正確に一致する必要があります。省略されたポート番号は、照合する前にスキームの正しいデフォルトに自動的に変換されます。</target>
        </trans-unit>
        <trans-unit id="75288f00d3cca5affbead93289ac710b7d804777" translate="yes" xml:space="preserve">
          <source>Port specified as an option to all p4 commands, with &lt;code&gt;-p &amp;lt;port&amp;gt;&lt;/code&gt;. The environment variable &lt;code&gt;P4PORT&lt;/code&gt; can be used instead.</source>
          <target state="translated">&lt;code&gt;-p &amp;lt;port&amp;gt;&lt;/code&gt; を使用して、すべてのp4コマンドのオプションとして指定されたポート。代わりに、環境変数 &lt;code&gt;P4PORT&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="d03006f15a6deece98761a569d6fb9a550c11064" translate="yes" xml:space="preserve">
          <source>Possible status letters are:</source>
          <target state="translated">考えられるステータスレターは</target>
        </trans-unit>
        <trans-unit id="2e4db4c63c7f46787206b1d1234a6ef557d7a11f" translate="yes" xml:space="preserve">
          <source>Post-receive hook</source>
          <target state="translated">ポストレシーブフック</target>
        </trans-unit>
        <trans-unit id="bfc66b933494b39d9139ca2f875fbedec7e5e101" translate="yes" xml:space="preserve">
          <source>Post-update hook</source>
          <target state="translated">更新後のフック</target>
        </trans-unit>
        <trans-unit id="f94b267b37a51057882021d23cd86eedc7aa6025" translate="yes" xml:space="preserve">
          <source>Pre-merge checks</source>
          <target state="translated">プレマージチェック</target>
        </trans-unit>
        <trans-unit id="b3efe66caa7433d78cc0ca460492b30524a4fffe" translate="yes" xml:space="preserve">
          <source>Pre-receive hook</source>
          <target state="translated">プリレシーブフック</target>
        </trans-unit>
        <trans-unit id="78240cc944ed7959bc15c94695f728eafb8fe296" translate="yes" xml:space="preserve">
          <source>Prefer to use &lt;code&gt;git svn rebase&lt;/code&gt; or &lt;code&gt;git rebase&lt;/code&gt;, rather than &lt;code&gt;git pull&lt;/code&gt; or &lt;code&gt;git merge&lt;/code&gt; to synchronize unintegrated commits with a &lt;code&gt;git svn&lt;/code&gt; branch. Doing so will keep the history of unintegrated commits linear with respect to the upstream SVN repository and allow the use of the preferred &lt;code&gt;git svn dcommit&lt;/code&gt; subcommand to push unintegrated commits back into SVN.</source>
          <target state="translated">統合されていないコミットを &lt;code&gt;git svn&lt;/code&gt; ブランチと同期するには、 &lt;code&gt;git pull&lt;/code&gt; または &lt;code&gt;git merge&lt;/code&gt; ではなく &lt;code&gt;git svn rebase&lt;/code&gt; または &lt;code&gt;git rebase&lt;/code&gt; を使用することをお勧めします。そうすることで、統合されていないコミットの履歴を上流のSVNリポジトリに対して線形に保ち、優先される &lt;code&gt;git svn dcommit&lt;/code&gt; サブコマンドを使用して、統合されていないコミットをSVNに戻すことができます。</target>
        </trans-unit>
        <trans-unit id="7858ef8a3e54ce180319d79ebe56992e0e058c1d" translate="yes" xml:space="preserve">
          <source>Prefix the 1-indexed byte-offset of the first match from the start of the matching line.</source>
          <target state="translated">マッチング行の先頭から最初のマッチの1インデックスのバイトオフセットを接頭辞にします。</target>
        </trans-unit>
        <trans-unit id="f98eece57f5c0c3847ca98d0dc9e3916d907af8e" translate="yes" xml:space="preserve">
          <source>Prefix the line number to matching lines.</source>
          <target state="translated">一致する行には行番号を先頭に付けます。</target>
        </trans-unit>
        <trans-unit id="cba9c5d09c8d367bd67d9492c7466ff20503c458" translate="yes" xml:space="preserve">
          <source>Prepare a public repository accessible to others, just like the &quot;project lead&quot; person does.</source>
          <target state="translated">プロジェクトリーダー」の人がするように、他の人がアクセスできる公開リポジトリを用意しましょう。</target>
        </trans-unit>
        <trans-unit id="2a7490f3f599e93e81fac551095363496940e575" translate="yes" xml:space="preserve">
          <source>Prepare a public repository accessible to others.</source>
          <target state="translated">他の人がアクセスできる公開リポジトリを用意する。</target>
        </trans-unit>
        <trans-unit id="f3c2eb8e7f45787546457741123fe87f7a0f8282" translate="yes" xml:space="preserve">
          <source>Prepare each commit with its patch in one file per commit, formatted to resemble UNIX mailbox format. The output of this command is convenient for e-mail submission or for use with &lt;code&gt;git am&lt;/code&gt;.</source>
          <target state="translated">コミットごとに1つのファイルにパッチを含む各コミットを準備し、UNIXメールボックス形式に似た形式にします。このコマンドの出力は、電子メールの送信や &lt;code&gt;git am&lt;/code&gt; での使用に便利です。</target>
        </trans-unit>
        <trans-unit id="5bf024f30d7d353a4bfdcd90569f916ebb19100a" translate="yes" xml:space="preserve">
          <source>Prepare patches for e-mail submission</source>
          <target state="translated">メール送信用のパッチを準備する</target>
        </trans-unit>
        <trans-unit id="a8276d8a28067c8245d05a67d9e202424a88780d" translate="yes" xml:space="preserve">
          <source>Prepare patches from the topmost &amp;lt;n&amp;gt; commits.</source>
          <target state="translated">最上位の&amp;lt;n&amp;gt;コミットからパッチを準備します。</target>
        </trans-unit>
        <trans-unit id="99740b269904a01f8762ffe4e520b6b559ecd506" translate="yes" xml:space="preserve">
          <source>Prepare the patch as a text file using your method of choice.</source>
          <target state="translated">お好みの方法でパッチをテキストファイルとして準備します。</target>
        </trans-unit>
        <trans-unit id="f5c02726894a93a50b6991465d16de430338896a" translate="yes" xml:space="preserve">
          <source>Prepare the patch as a text file.</source>
          <target state="translated">パッチをテキストファイルとして用意します。</target>
        </trans-unit>
        <trans-unit id="0655ed9aa66f0d4261162f27b4e3c1f4398f7453" translate="yes" xml:space="preserve">
          <source>Prepare to commit the transaction. This will create lock files for all queued reference updates. If one reference could not be locked, the transaction will be aborted.</source>
          <target state="translated">トランザクションをコミットする準備をします。これにより、キューに入っているすべての参照の更新に対してロックファイルが作成されます。1つの参照がロックできなかった場合、トランザクションは中止されます。</target>
        </trans-unit>
        <trans-unit id="5fdffb29f622a40bb487926aa05bf2c00b010193" translate="yes" xml:space="preserve">
          <source>Prepare to work on top of &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt;, by detaching &lt;code&gt;HEAD&lt;/code&gt; at it (see &quot;DETACHED HEAD&quot; section), and updating the index and the files in the working tree. Local modifications to the files in the working tree are kept, so that the resulting working tree will be the state recorded in the commit plus the local modifications.</source>
          <target state="translated">&lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; の上で &lt;code&gt;HEAD&lt;/code&gt; を切り離し（「デタッチされたヘッド」のセクションを参照）、作業ツリーのインデックスとファイルを更新することで、作業の準備をします。作業ツリー内のファイルへのローカル変更は保持されるため、結果の作業ツリーは、コミットに記録された状態に加えてローカル変更になります。</target>
        </trans-unit>
        <trans-unit id="f2f7b858e8531ffd309df8bd0107db9d4a088dc3" translate="yes" xml:space="preserve">
          <source>Prepare your primary repository on your local machine. Your work is done there.</source>
          <target state="translated">ローカルマシンにプライマリリポジトリを準備します。あなたの作業はそこで行われます。</target>
        </trans-unit>
        <trans-unit id="6351b7119828a745613d6b91f6668ddb5c9afa30" translate="yes" xml:space="preserve">
          <source>Prepare your work repository, by &lt;code&gt;git clone&lt;/code&gt; the public repository of the &quot;project lead&quot; (or a &quot;subsystem maintainer&quot;, if you work on a subsystem). The URL used for the initial cloning is stored in the remote.origin.url configuration variable.</source>
          <target state="translated">「プロジェクトリーダー」（またはサブシステムで作業している場合は「サブシステムメンテナ」）のパブリックリポジトリを &lt;code&gt;git clone&lt;/code&gt; して、作業リポジトリを準備します。最初の複製に使用されるURLは、remote.origin.url構成変数に保管されます。</target>
        </trans-unit>
        <trans-unit id="ab02c2194a1b4abbc5e110578e0e0c5797b11598" translate="yes" xml:space="preserve">
          <source>Prepare your work repository, by running &lt;code&gt;git clone&lt;/code&gt; on the public repository of the &quot;project lead&quot;. The URL used for the initial cloning is stored in the remote.origin.url configuration variable.</source>
          <target state="translated">「プロジェクトリーダー」のパブリックリポジトリで &lt;code&gt;git clone&lt;/code&gt; を実行して、作業リポジトリを準備します。最初の複製に使用されるURLは、remote.origin.url構成変数に保管されます。</target>
        </trans-unit>
        <trans-unit id="8d8f6ddbe39b836164638d60534dc0f8ce8c98b4" translate="yes" xml:space="preserve">
          <source>Prepend &amp;lt;path&amp;gt; to paths printed in informative messages such as &quot;Fetching submodule foo&quot;. This option is used internally when recursing over submodules.</source>
          <target state="translated">「Fetching submodule foo」などの情報メッセージで出力されるパスの前に&amp;lt;path&amp;gt;を追加します。このオプションは、サブモジュールを再帰的に実行するときに内部的に使用されます。</target>
        </trans-unit>
        <trans-unit id="0d9e5ac62ee99d055177c6a4f95d4b7fe25a63a3" translate="yes" xml:space="preserve">
          <source>Prepend &amp;lt;prefix&amp;gt;/ to each filename in the archive.</source>
          <target state="translated">アーカイブの各ファイル名に&amp;lt;prefix&amp;gt; /を付加します。</target>
        </trans-unit>
        <trans-unit id="a1528f0aff1e31c1f36c8998ca335269e9595dd6" translate="yes" xml:space="preserve">
          <source>Prepend &amp;lt;root&amp;gt; to all filenames. If a &quot;-p&quot; argument was also passed, it is applied before prepending the new root.</source>
          <target state="translated">すべてのファイル名の前に&amp;lt;root&amp;gt;を付加します。「-p」引数も渡された場合は、新しいルートを付加する前に適用されます。</target>
        </trans-unit>
        <trans-unit id="04fbe49467d421955780154f308daccbf9dcf57a" translate="yes" xml:space="preserve">
          <source>Prepend &lt;code&gt;path&lt;/code&gt; to requested CVSROOT</source>
          <target state="translated">要求されたCVSROOT &lt;code&gt;path&lt;/code&gt; を追加</target>
        </trans-unit>
        <trans-unit id="0347b26685846c1b1d2b4efcd87239056762e453" translate="yes" xml:space="preserve">
          <source>Prepend an additional prefix to every line of output.</source>
          <target state="translated">出力の各行に追加の接頭辞を付加します。</target>
        </trans-unit>
        <trans-unit id="965630002ec8181b6c5811ecd432fedf5278178d" translate="yes" xml:space="preserve">
          <source>Prepend comment character and blank to each line. Lines will automatically be terminated with a newline. On empty lines, only the comment character will be prepended.</source>
          <target state="translated">各行にコメント文字とブランクを前置してください。行は自動的に改行で終了します。空行には、コメント文字のみが付加されます。</target>
        </trans-unit>
        <trans-unit id="f16c17f5481a4b7eaab0eba6f32fe3b9bdb77e0a" translate="yes" xml:space="preserve">
          <source>Prepend the commit message with the provided prefix. Useful for patch series and the like.</source>
          <target state="translated">コミットメッセージに指定された接頭辞を付加します。パッチシリーズなどに便利です。</target>
        </trans-unit>
        <trans-unit id="1cb847e80ec2973659a3bc43c24ba721cccfc0b9" translate="yes" xml:space="preserve">
          <source>Pretend as if all objects mentioned as ref tips of alternate repositories were listed on the command line. An alternate repository is any repository whose object directory is specified in &lt;code&gt;objects/info/alternates&lt;/code&gt;. The set of included objects may be modified by &lt;code&gt;core.alternateRefsCommand&lt;/code&gt;, etc. See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">代替リポジトリーの参照ヒントとして言及されたすべてのオブジェクトがコマンド行にリストされているかのように見せかけます。代替リポジトリは、オブジェクトディレクトリが &lt;code&gt;objects/info/alternates&lt;/code&gt; で指定されているリポジトリです。含まれるオブジェクトのセットは、 &lt;code&gt;core.alternateRefsCommand&lt;/code&gt; などによって変更できます。git &lt;a href=&quot;git-config&quot;&gt;-config [1]を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d8790db7464ad43dc2580493a3a2b7fe9009b3b8" translate="yes" xml:space="preserve">
          <source>Pretend as if all objects mentioned by reflogs are listed on the command line as &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">reflogsによって言及されたすべてのオブジェクトがコマンドラインに &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; としてリストされているかのように見せかけます。</target>
        </trans-unit>
        <trans-unit id="1bc40db9cd0077507e159c30d2cc8ff273e4cf52" translate="yes" xml:space="preserve">
          <source>Pretend as if all the branches (tags, remote branches, resp.) are listed on the command line as &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt;. If &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; is given, limit refs to ones matching given shell glob. If pattern lacks &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, or &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;/*&lt;/code&gt; at the end is implied.</source>
          <target state="translated">すべてのブランチ（タグ、リモートブランチ、それぞれ）がコマンドラインに &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; としてリストされているかのように見せかけます。 &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; が指定されている場合、参照を指定のシェルグロブに一致するものに制限します。パターンが足りない場合は &lt;code&gt;?&lt;/code&gt; 末尾の、 &lt;code&gt;*&lt;/code&gt; 、または &lt;code&gt;[&lt;/code&gt; 、 &lt;code&gt;/*&lt;/code&gt; は暗示されます。</target>
        </trans-unit>
        <trans-unit id="a40d3b9ce3a70471c04394220cc5bbfab2baa7f5" translate="yes" xml:space="preserve">
          <source>Pretend as if all the refs in &lt;code&gt;refs/&lt;/code&gt;, along with &lt;code&gt;HEAD&lt;/code&gt;, are listed on the command line as &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;HEAD&lt;/code&gt; とともに、 &lt;code&gt;refs/&lt;/code&gt; 内のすべての参照が &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; としてコマンドラインにリストされているかのように見せかけます。</target>
        </trans-unit>
        <trans-unit id="1435ebeededb24db5ecef4374cafc152c655d0c5" translate="yes" xml:space="preserve">
          <source>Pretend as if all the refs in &lt;code&gt;refs/heads&lt;/code&gt; are listed on the command line as &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt;. If &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; is given, limit branches to ones matching given shell glob. If pattern lacks &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, or &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;/*&lt;/code&gt; at the end is implied.</source>
          <target state="translated">&lt;code&gt;refs/heads&lt;/code&gt; 内のすべての参照がコマンドラインに &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; としてリストされているかのように見せかけます。 &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; が指定されている場合、ブランチを指定のシェルグロブに一致するものに制限します。パターンが足りない場合は &lt;code&gt;?&lt;/code&gt; 末尾の、 &lt;code&gt;*&lt;/code&gt; 、または &lt;code&gt;[&lt;/code&gt; 、 &lt;code&gt;/*&lt;/code&gt; は暗示されます。</target>
        </trans-unit>
        <trans-unit id="873bc395593997376453ce378c315180f9e8037d" translate="yes" xml:space="preserve">
          <source>Pretend as if all the refs in &lt;code&gt;refs/remotes&lt;/code&gt; are listed on the command line as &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt;. If &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; is given, limit remote-tracking branches to ones matching given shell glob. If pattern lacks &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, or &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;/*&lt;/code&gt; at the end is implied.</source>
          <target state="translated">&lt;code&gt;refs/remotes&lt;/code&gt; 内のすべての参照がコマンドラインに &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; としてリストされているかのように見せかけます。 &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; が指定されている場合、リモート追跡ブランチを、指定されたシェルグロブに一致するブランチに制限します。パターンが足りない場合は &lt;code&gt;?&lt;/code&gt; 末尾の、 &lt;code&gt;*&lt;/code&gt; 、または &lt;code&gt;[&lt;/code&gt; 、 &lt;code&gt;/*&lt;/code&gt; は暗示されます。</target>
        </trans-unit>
        <trans-unit id="779811bec709e50bc3c2986dda8163a1984c59e0" translate="yes" xml:space="preserve">
          <source>Pretend as if all the refs in &lt;code&gt;refs/tags&lt;/code&gt; are listed on the command line as &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt;. If &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; is given, limit tags to ones matching given shell glob. If pattern lacks &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, or &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;/*&lt;/code&gt; at the end is implied.</source>
          <target state="translated">&lt;code&gt;refs/tags&lt;/code&gt; 内のすべてのrefがコマンドラインに &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; としてリストされているかのように見せかけます。 &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; が指定されている場合、タグを指定されたシェルグロブに一致するものに制限します。パターンが足りない場合は &lt;code&gt;?&lt;/code&gt; 末尾の、 &lt;code&gt;*&lt;/code&gt; 、または &lt;code&gt;[&lt;/code&gt; 、 &lt;code&gt;/*&lt;/code&gt; は暗示されます。</target>
        </trans-unit>
        <trans-unit id="fd8bdbdeb72b98a3e7d8a71774e4228e25fd4361" translate="yes" xml:space="preserve">
          <source>Pretend as if all the refs matching shell glob &lt;code&gt;&amp;lt;glob-pattern&amp;gt;&lt;/code&gt; are listed on the command line as &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt;. Leading &lt;code&gt;refs/&lt;/code&gt;, is automatically prepended if missing. If pattern lacks &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, or &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;/*&lt;/code&gt; at the end is implied.</source>
          <target state="translated">シェルglob &lt;code&gt;&amp;lt;glob-pattern&amp;gt;&lt;/code&gt; に一致するすべての参照がコマンドラインに &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; としてリストされているかのように見せかけます。先頭の &lt;code&gt;refs/&lt;/code&gt; 、欠落している場合は自動的に付加されます。パターンが足りない場合は &lt;code&gt;?&lt;/code&gt; 末尾の、 &lt;code&gt;*&lt;/code&gt; 、または &lt;code&gt;[&lt;/code&gt; 、 &lt;code&gt;/*&lt;/code&gt; は暗示されます。</target>
        </trans-unit>
        <trans-unit id="46b1cc7966c168f121c45715956556d8413ae7ad" translate="yes" xml:space="preserve">
          <source>Pretend as if all trees and blobs used by the index are listed on the command line. Note that you probably want to use &lt;code&gt;--objects&lt;/code&gt;, too.</source>
          <target state="translated">インデックスによって使用されるすべてのツリーとblobがコマンドラインにリストされているかのように見せかけます。おそらく &lt;code&gt;--objects&lt;/code&gt; も使用したいことに注意してください。</target>
        </trans-unit>
        <trans-unit id="909e45224d87696c85b1407d2ca55f9401b9de95" translate="yes" xml:space="preserve">
          <source>Pretend as if the bad bisection ref &lt;code&gt;refs/bisect/bad&lt;/code&gt; was listed and as if it was followed by &lt;code&gt;--not&lt;/code&gt; and the good bisection refs &lt;code&gt;refs/bisect/good-*&lt;/code&gt; on the command line.</source>
          <target state="translated">コマンドラインで、 &lt;code&gt;--not&lt;/code&gt; ref &lt;code&gt;refs/bisect/bad&lt;/code&gt; がリストされ、その後に--notが続き、good bisection refs &lt;code&gt;refs/bisect/good-*&lt;/code&gt; good- *が続くように見せかけます。</target>
        </trans-unit>
        <trans-unit id="cc70d02297620c66f8bef755f564908a1a4698d8" translate="yes" xml:space="preserve">
          <source>Pretend as if the bad bisection ref &lt;code&gt;refs/bisect/bad&lt;/code&gt; was listed and as if it was followed by &lt;code&gt;--not&lt;/code&gt; and the good bisection refs &lt;code&gt;refs/bisect/good-*&lt;/code&gt; on the command line. Cannot be combined with --first-parent.</source>
          <target state="translated">コマンドラインで、不正な二分参照 &lt;code&gt;refs/bisect/bad&lt;/code&gt; がリストされているように &lt;code&gt;--not&lt;/code&gt; 、その後に--notと良好な二分参照 &lt;code&gt;refs/bisect/good-*&lt;/code&gt; good- *が続いているかのように見せかけます。--first-parentと組み合わせることはできません。</target>
        </trans-unit>
        <trans-unit id="0a3604cb0b2f73cd8456355c098a4f83f14d6060" translate="yes" xml:space="preserve">
          <source>Pretty formats</source>
          <target state="translated">プリティフォーマット</target>
        </trans-unit>
        <trans-unit id="1b76ed128a23a5286f4a7e2538cc00e5737e0416" translate="yes" xml:space="preserve">
          <source>Pretty-print the contents of &amp;lt;object&amp;gt; based on its type.</source>
          <target state="translated">タイプに基づいて&amp;lt;object&amp;gt;の内容をプリティプリントします。</target>
        </trans-unit>
        <trans-unit id="a741501b13f29bc4f4975a183857a345cfe33bda" translate="yes" xml:space="preserve">
          <source>Pretty-print the contents of the commit logs in a given format, where &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; can be one of &lt;code&gt;oneline&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;medium&lt;/code&gt;, &lt;code&gt;full&lt;/code&gt;, &lt;code&gt;fuller&lt;/code&gt;, &lt;code&gt;reference&lt;/code&gt;, &lt;code&gt;email&lt;/code&gt;, &lt;code&gt;raw&lt;/code&gt;, &lt;code&gt;format:&amp;lt;string&amp;gt;&lt;/code&gt; and &lt;code&gt;tformat:&amp;lt;string&amp;gt;&lt;/code&gt;. When &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; is none of the above, and has &lt;code&gt;%placeholder&lt;/code&gt; in it, it acts as if &lt;code&gt;--pretty=tformat:&amp;lt;format&amp;gt;&lt;/code&gt; were given.</source>
          <target state="translated">コミットログの内容を所定の形式できれいに出力します。 &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; は、 &lt;code&gt;oneline&lt;/code&gt; 、 &lt;code&gt;short&lt;/code&gt; 、 &lt;code&gt;medium&lt;/code&gt; 、 &lt;code&gt;full&lt;/code&gt; 、 &lt;code&gt;fuller&lt;/code&gt; 、 &lt;code&gt;reference&lt;/code&gt; 、 &lt;code&gt;email&lt;/code&gt; 、 &lt;code&gt;raw&lt;/code&gt; 、 &lt;code&gt;format:&amp;lt;string&amp;gt;&lt;/code&gt; および &lt;code&gt;tformat:&amp;lt;string&amp;gt;&lt;/code&gt; のいずれかです。場合 &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; 上記のいずれでもない、と有し &lt;code&gt;%placeholder&lt;/code&gt; その中に、それが作用するような場合 &lt;code&gt;--pretty=tformat:&amp;lt;format&amp;gt;&lt;/code&gt; 与えました。</target>
        </trans-unit>
        <trans-unit id="7bd89feebefa381d47a4005ee3e7a70495146fc2" translate="yes" xml:space="preserve">
          <source>Print a list of diff tools that may be used with &lt;code&gt;--tool&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--tool&lt;/code&gt; で使用できるdiffツールのリストを出力します。</target>
        </trans-unit>
        <trans-unit id="4427ae28c9b6c7b34bdd7b24aed9e7c7d30f57b8" translate="yes" xml:space="preserve">
          <source>Print a list of merge tools that may be used with &lt;code&gt;--tool&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--tool&lt;/code&gt; で使用できるマージツールのリストを出力します。</target>
        </trans-unit>
        <trans-unit id="66756bdfb6c604999780ed06815c6e483a2bcdd8" translate="yes" xml:space="preserve">
          <source>Print a log message describing a merge of the &quot;master&quot; branch from the &quot;origin&quot; remote.</source>
          <target state="translated">リモートの &quot;origin&quot; から &quot;master&quot; ブランチのマージを記述したログメッセージを表示します。</target>
        </trans-unit>
        <trans-unit id="e170a2249107ead5e4f805939d3f7ece45fff682" translate="yes" xml:space="preserve">
          <source>Print a message to the terminal whenever Git is waiting for editor input from the user.</source>
          <target state="translated">Git がユーザーからのエディタ入力を待っているときに、ターミナルにメッセージを出力します。</target>
        </trans-unit>
        <trans-unit id="8080962c8d32b2cabab8eb19868e6e497af4f4fb" translate="yes" xml:space="preserve">
          <source>Print a number stating how many commits would have been listed, and suppress all other output. When used together with &lt;code&gt;--left-right&lt;/code&gt;, instead print the counts for left and right commits, separated by a tab. When used together with &lt;code&gt;--cherry-mark&lt;/code&gt;, omit patch equivalent commits from these counts and print the count for equivalent commits separated by a tab.</source>
          <target state="translated">リストされたコミットの数を示す数値を出力し、他のすべての出力を抑制します。 &lt;code&gt;--left-right&lt;/code&gt; と一緒に使用すると、代わりに、タブで区切られた左右のコミットのカウントが出力されます。 &lt;code&gt;--cherry-mark&lt;/code&gt; と一緒に使用すると、パッチの同等のコミットがこれらのカウントから除外され、同等のコミットのカウントがタブで区切られて出力されます。</target>
        </trans-unit>
        <trans-unit id="5c8fe4e870e195a4e0e71c8a37d1ceb1bdba9faa" translate="yes" xml:space="preserve">
          <source>Print a short usage message and exit.</source>
          <target state="translated">短い使用方法のメッセージを印刷して終了します。</target>
        </trans-unit>
        <trans-unit id="1605c83b597410df01a57b6af3b5c08c7935c987" translate="yes" xml:space="preserve">
          <source>Print all commits to the standard output in mbox format, instead of creating a file for each one.</source>
          <target state="translated">それぞれのファイルを作成するのではなく、すべてのコミットをmbox形式で標準出力に出力します。</target>
        </trans-unit>
        <trans-unit id="bb80930a87afbf3e0cd1b6dbc46ac66a79700ef9" translate="yes" xml:space="preserve">
          <source>Print also the children of the commit (in the form &quot;commit child&amp;hellip;​&quot;). Also enables parent rewriting, see &lt;code&gt;History Simplification&lt;/code&gt; above.</source>
          <target state="translated">コミットの子も出力します（「commit child&amp;hellip;」の形式で）。また、親の書き換えを有効にします。上記の &lt;code&gt;History Simplification&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="cd486c8f7fa4f0862a9438df255d9ef58e4cce2f" translate="yes" xml:space="preserve">
          <source>Print also the parents of the commit (in the form &quot;commit parent&amp;hellip;​&quot;). Also enables parent rewriting, see &lt;code&gt;History Simplification&lt;/code&gt; above.</source>
          <target state="translated">コミットの親も出力します（「commit parent&amp;hellip;」の形式で）。また、親の書き換えを有効にします。上記の &lt;code&gt;History Simplification&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="f770a9ba11cec50c667f92df6a9581699d1c849f" translate="yes" xml:space="preserve">
          <source>Print an empty line between matches from different files.</source>
          <target state="translated">異なるファイルからのマッチの間に空行を表示します。</target>
        </trans-unit>
        <trans-unit id="dc6bbcf836701f45b1b031bc09ccba6ceff978b1" translate="yes" xml:space="preserve">
          <source>Print extra information on screen.</source>
          <target state="translated">余分な情報を画面に印刷します。</target>
        </trans-unit>
        <trans-unit id="f77fc6854808124fa4634165848ea2138881c54f" translate="yes" xml:space="preserve">
          <source>Print lines matching a pattern</source>
          <target state="translated">パターンにマッチしたラインを印刷する</target>
        </trans-unit>
        <trans-unit id="6fe4856d75dfab579fe9349a68cc2bed1d0dadcc" translate="yes" xml:space="preserve">
          <source>Print object information and contents for each object provided on stdin. May not be combined with any other options or arguments except &lt;code&gt;--textconv&lt;/code&gt; or &lt;code&gt;--filters&lt;/code&gt;, in which case the input lines also need to specify the path, separated by whitespace. See the section &lt;code&gt;BATCH OUTPUT&lt;/code&gt; below for details.</source>
          <target state="translated">stdinで提供される各オブジェクトのオブジェクト情報と内容を出力します。 &lt;code&gt;--textconv&lt;/code&gt; または &lt;code&gt;--filters&lt;/code&gt; を除く他のオプションや引数と組み合わせることはできません。その場合、入力行でも空白で区切られたパスを指定する必要があります。詳細については、以下の「 &lt;code&gt;BATCH OUTPUT&lt;/code&gt; 」のセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="ca4d7c5adc217a6aa2342c6778492ad7113796ff" translate="yes" xml:space="preserve">
          <source>Print object information for each object provided on stdin. May not be combined with any other options or arguments except &lt;code&gt;--textconv&lt;/code&gt; or &lt;code&gt;--filters&lt;/code&gt;, in which case the input lines also need to specify the path, separated by whitespace. See the section &lt;code&gt;BATCH OUTPUT&lt;/code&gt; below for details.</source>
          <target state="translated">stdinで提供される各オブジェクトのオブジェクト情報を出力します。 &lt;code&gt;--textconv&lt;/code&gt; または &lt;code&gt;--filters&lt;/code&gt; を除く他のオプションや引数と組み合わせることはできません。その場合、入力行でも空白で区切られたパスを指定する必要があります。詳細については、以下の「 &lt;code&gt;BATCH OUTPUT&lt;/code&gt; 」のセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="355c9197a67577b10c87d266b1fadda4f338ce43" translate="yes" xml:space="preserve">
          <source>Print objects that exist but that are never &lt;code&gt;directly&lt;/code&gt; used (default). &lt;code&gt;--no-dangling&lt;/code&gt; can be used to omit this information from the output.</source>
          <target state="translated">存在するが &lt;code&gt;directly&lt;/code&gt; 使用されないオブジェクトを印刷します（デフォルト）。 &lt;code&gt;--no-dangling&lt;/code&gt; を使用すると、この情報を出力から除外できます。</target>
        </trans-unit>
        <trans-unit id="2b45348ee53d58a25f5424ead463a255068c26a3" translate="yes" xml:space="preserve">
          <source>Print only merge commits. This is exactly the same as &lt;code&gt;--min-parents=2&lt;/code&gt;.</source>
          <target state="translated">マージコミットのみを出力します。これは &lt;code&gt;--min-parents=2&lt;/code&gt; とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="fba7bfcdde0d986db48ca498619d9372ecc7d2c2" translate="yes" xml:space="preserve">
          <source>Print only the matched (non-empty) parts of a matching line, with each such part on a separate output line.</source>
          <target state="translated">マッチした行のマッチした (空ではない)部分だけを印刷し、そのような部分はそれぞれ別の出力行に出力します。</target>
        </trans-unit>
        <trans-unit id="a0fc3f1d0d97da65e736eae410fad9ae12d5c7be" translate="yes" xml:space="preserve">
          <source>Print out objects that exist but that aren&amp;rsquo;t reachable from any of the reference nodes.</source>
          <target state="translated">存在するが、どの参照ノードからも到達できないオブジェクトを出力します。</target>
        </trans-unit>
        <trans-unit id="e099bc42258fcb131e0b9e1b48df8c89349bb7b8" translate="yes" xml:space="preserve">
          <source>Print out the ref name given on the command line by which each commit was reached.</source>
          <target state="translated">コマンドラインで与えられた ref 名を出力します。</target>
        </trans-unit>
        <trans-unit id="dcb3dcb3ba78d15754773caa5f744c3c4effdf42" translate="yes" xml:space="preserve">
          <source>Print out the ref names of any commits that are shown by the log command. If &lt;code&gt;short&lt;/code&gt; is specified, the ref name prefixes &lt;code&gt;refs/heads/&lt;/code&gt;, &lt;code&gt;refs/tags/&lt;/code&gt; and &lt;code&gt;refs/remotes/&lt;/code&gt; will not be printed. If &lt;code&gt;full&lt;/code&gt; is specified, the full ref name (including prefix) will be printed. If &lt;code&gt;auto&lt;/code&gt; is specified, then if the output is going to a terminal, the ref names are shown as if &lt;code&gt;short&lt;/code&gt; were given, otherwise no ref names are shown. This is the same as the &lt;code&gt;--decorate&lt;/code&gt; option of the &lt;code&gt;git log&lt;/code&gt;.</source>
          <target state="translated">logコマンドで表示されるコミットの参照名を出力します。場合は &lt;code&gt;short&lt;/code&gt; 指定され、参照名は、接頭辞 &lt;code&gt;refs/heads/&lt;/code&gt; 、 &lt;code&gt;refs/tags/&lt;/code&gt; 及び &lt;code&gt;refs/remotes/&lt;/code&gt; 印刷されません。場合は &lt;code&gt;full&lt;/code&gt; 指定されている、（プレフィックスを含む）完全なrefの名前が印刷されます。場合は &lt;code&gt;auto&lt;/code&gt; が指定されている出力が端末に起こっている場合、参照名が表示されているかのように、その後、 &lt;code&gt;short&lt;/code&gt; 与えられた、そうでなければrefの名前が表示されません。これは &lt;code&gt;git log&lt;/code&gt; の &lt;code&gt;--decorate&lt;/code&gt; オプションと同じです。</target>
        </trans-unit>
        <trans-unit id="53ce43f1821ebff917f188f20f204c3e06f211d4" translate="yes" xml:space="preserve">
          <source>Print out the ref names of any commits that are shown. If &lt;code&gt;short&lt;/code&gt; is specified, the ref name prefixes &lt;code&gt;refs/heads/&lt;/code&gt;, &lt;code&gt;refs/tags/&lt;/code&gt; and &lt;code&gt;refs/remotes/&lt;/code&gt; will not be printed. If &lt;code&gt;full&lt;/code&gt; is specified, the full ref name (including prefix) will be printed. If &lt;code&gt;auto&lt;/code&gt; is specified, then if the output is going to a terminal, the ref names are shown as if &lt;code&gt;short&lt;/code&gt; were given, otherwise no ref names are shown. The default option is &lt;code&gt;short&lt;/code&gt;.</source>
          <target state="translated">表示されているコミットの参照名を出力します。場合は &lt;code&gt;short&lt;/code&gt; 指定され、参照名は、接頭辞 &lt;code&gt;refs/heads/&lt;/code&gt; 、 &lt;code&gt;refs/tags/&lt;/code&gt; 及び &lt;code&gt;refs/remotes/&lt;/code&gt; 印刷されません。場合は &lt;code&gt;full&lt;/code&gt; 指定されている、（プレフィックスを含む）完全なrefの名前が印刷されます。場合は &lt;code&gt;auto&lt;/code&gt; が指定されている出力が端末に起こっている場合、参照名が表示されているかのように、その後、 &lt;code&gt;short&lt;/code&gt; 与えられた、そうでなければrefの名前が表示されません。デフォルトのオプションは &lt;code&gt;short&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="2011b0d7f946e8a76de0461151323ce8a5c0f935" translate="yes" xml:space="preserve">
          <source>Print paths with conflicts that have not been autoresolved by rerere. This includes paths whose resolutions cannot be tracked by rerere, such as conflicting submodules.</source>
          <target state="translated">rerere で自動解決されていない競合のあるパスを表示します。これには、競合するサブモジュールのように、 rerere によって解決が追跡できないパスも含まれます。</target>
        </trans-unit>
        <trans-unit id="2cba919653a32310570084639bfa9ccc09fb9fa2" translate="yes" xml:space="preserve">
          <source>Print paths with conflicts whose merge resolution rerere will record.</source>
          <target state="translated">マージ解決の再試行が記録されるコンフリクトのあるパスを表示します。</target>
        </trans-unit>
        <trans-unit id="71b60883716e5c9ed5e8d89999bad00a8a7a60a2" translate="yes" xml:space="preserve">
          <source>Print sizes in human readable format</source>
          <target state="translated">人が読める印刷サイズ</target>
        </trans-unit>
        <trans-unit id="7acdcc1d8a4a904a279ce2f15ace2f46f09a0e30" translate="yes" xml:space="preserve">
          <source>Print the commit object name from the revision in the $REV shell variable:</source>
          <target state="translated">シェル変数 $REV にリビジョンからのコミットオブジェクト名を表示します。</target>
        </trans-unit>
        <trans-unit id="395b30ff424b495b247b1df9486e5529542c8ab4" translate="yes" xml:space="preserve">
          <source>Print the contents of the commit in raw-format; each record is separated with a NUL character.</source>
          <target state="translated">各レコードは NUL 文字で区切られています。</target>
        </trans-unit>
        <trans-unit id="a77cbdea967e7bc1835e082ef3a9add5606ab710" translate="yes" xml:space="preserve">
          <source>Print the contents of the commit object before validating it.</source>
          <target state="translated">コミットオブジェクトを検証する前に、コミットオブジェクトの内容を表示します。</target>
        </trans-unit>
        <trans-unit id="31d513cdd4715b4e34b1efb48c41837ed2726bf9" translate="yes" xml:space="preserve">
          <source>Print the contents of the tag object before validating it.</source>
          <target state="translated">タグオブジェクトを検証する前に、タグオブジェクトの内容を表示します。</target>
        </trans-unit>
        <trans-unit id="87753483ea6cbbd041325490c8537b3b3cada35c" translate="yes" xml:space="preserve">
          <source>Print the current notes ref. This provides an easy way to retrieve the current notes ref (e.g. from scripts).</source>
          <target state="translated">現在のノート ref を印刷します。これは、現在のノート ref を簡単に取得する方法を提供します (スクリプトなどから)。</target>
        </trans-unit>
        <trans-unit id="e336397774a866fc04e04e67418c962536311ce3" translate="yes" xml:space="preserve">
          <source>Print the manpath (see &lt;code&gt;man(1)&lt;/code&gt;) for the man pages for this version of Git and exit.</source>
          <target state="translated">このバージョンのGitのマニュアルページのマンパス（ &lt;code&gt;man(1)&lt;/code&gt; を参照）を出力して終了します。</target>
        </trans-unit>
        <trans-unit id="390fcf6665394474a4208236397a723ae5bbd841" translate="yes" xml:space="preserve">
          <source>Print the name of the current branch. In detached HEAD state, nothing is printed.</source>
          <target state="translated">現在のブランチの名前を印刷します。デタッチドHEAD状態では、何も表示されません。</target>
        </trans-unit>
        <trans-unit id="727d2c972108087f617ca9a52e1404312cb08db7" translate="yes" xml:space="preserve">
          <source>Print the name of the previous thing checked out:</source>
          <target state="translated">チェックアウトした前のものの名前を印刷します。</target>
        </trans-unit>
        <trans-unit id="3642aa2b7cf9b2dae48578e1bdc6f3fea172cd09" translate="yes" xml:space="preserve">
          <source>Print the object IDs of any object referenced by the listed commits. &lt;code&gt;--objects foo ^bar&lt;/code&gt; thus means &amp;ldquo;send me all object IDs which I need to download if I have the commit object &lt;code&gt;bar&lt;/code&gt; but not &lt;code&gt;foo&lt;/code&gt;&amp;rdquo;.</source>
          <target state="translated">リストされたコミットによって参照されるオブジェクトのオブジェクトIDを出力します。 &lt;code&gt;--objects foo ^bar&lt;/code&gt; は、「コミットオブジェクト &lt;code&gt;bar&lt;/code&gt; が &lt;code&gt;foo&lt;/code&gt; がない場合、ダウンロードする必要があるすべてのオブジェクトIDを私に送信する」という意味です。</target>
        </trans-unit>
        <trans-unit id="38fa474c9535276a4f6e33490b7ff8dcbbdc81f4" translate="yes" xml:space="preserve">
          <source>Print the object name of the current commit:</source>
          <target state="translated">現在のコミットのオブジェクト名を表示します。</target>
        </trans-unit>
        <trans-unit id="ee021a7e92899d06aae374f43dcf779c8609f3ff" translate="yes" xml:space="preserve">
          <source>Print the path where the Info files documenting this version of Git are installed and exit.</source>
          <target state="translated">このバージョンの Git を文書化した Info ファイルがインストールされているパスを印刷して終了します。</target>
        </trans-unit>
        <trans-unit id="f91d6d93e8468421a09b4a14a734bbd616d1eaec" translate="yes" xml:space="preserve">
          <source>Print the path, without trailing slash, where Git&amp;rsquo;s HTML documentation is installed and exit.</source>
          <target state="translated">末尾にスラッシュを付けずに、GitのHTMLドキュメントがインストールされているパスを印刷して終了します。</target>
        </trans-unit>
        <trans-unit id="c416409aca85a3200dcaeb96638cdf0bb7fd9f1e" translate="yes" xml:space="preserve">
          <source>Print the raw commit timestamp.</source>
          <target state="translated">生のコミットタイムスタンプを表示します。</target>
        </trans-unit>
        <trans-unit id="a639de23ccd7b17d5228ed28b0950d8dd10397fd" translate="yes" xml:space="preserve">
          <source>Print the raw gpg status output to standard error instead of the normal human-readable output.</source>
          <target state="translated">生の gpg ステータス出力を、通常の人間が読める出力ではなく、標準エラーに出力します。</target>
        </trans-unit>
        <trans-unit id="99ac22b00f0c79de0ff529dde835b6047cf02100" translate="yes" xml:space="preserve">
          <source>Print tree and blob ids in order of the commits. The tree and blob ids are printed after they are first referenced by a commit.</source>
          <target state="translated">ツリーとブロブの ID をコミット順に印刷します。ツリーとブロブの ID は、コミットで最初に参照された後に表示されます。</target>
        </trans-unit>
        <trans-unit id="3b22396fd69e4727d40157cf2f987d6e09d1fcff" translate="yes" xml:space="preserve">
          <source>Print usage information and exit</source>
          <target state="translated">利用情報を印刷して終了</target>
        </trans-unit>
        <trans-unit id="8b0271d848c59df8398c3108bdeba41e38e8636a" translate="yes" xml:space="preserve">
          <source>Print version information and exit</source>
          <target state="translated">バージョン情報を印刷して終了</target>
        </trans-unit>
        <trans-unit id="85ec1b3fb97897b6ced8a489e132839db30e011a" translate="yes" xml:space="preserve">
          <source>Prints a Git logical variable.</source>
          <target state="translated">Git の論理変数を表示します。</target>
        </trans-unit>
        <trans-unit id="913b5e2d55fda904bfce1ecac182bc7aaa60acd0" translate="yes" xml:space="preserve">
          <source>Prints a list of the Git concept guides on the standard output. This option overrides any given command or guide name.</source>
          <target state="translated">Git のコンセプトガイドの一覧を標準出力に出力します。このオプションは、指定したコマンド名やガイド名を上書きします。</target>
        </trans-unit>
        <trans-unit id="401d02aaba20f08ba2e39483d254996af7aae137" translate="yes" xml:space="preserve">
          <source>Prints a list of useful guides on the standard output. This option overrides any given command or guide name.</source>
          <target state="translated">便利なガイドのリストを標準出力に出力します。このオプションは、指定されたコマンドやガイド名を上書きします。</target>
        </trans-unit>
        <trans-unit id="fb51737d6bf1a9b6afa9ffc69b82cbde8918bef7" translate="yes" xml:space="preserve">
          <source>Prints all the available commands on the standard output. This option overrides any given command or guide name.</source>
          <target state="translated">利用可能なすべてのコマンドを標準出力に出力します。このオプションは、指定されたコマンドやガイド名を上書きします。</target>
        </trans-unit>
        <trans-unit id="f5aac771b999435096d722ba3e59e6103d7d4c50" translate="yes" xml:space="preserve">
          <source>Prints information about the object at a path to a file descriptor previously arranged with the &lt;code&gt;--cat-blob-fd&lt;/code&gt; argument. This allows printing a blob from the active commit (with &lt;code&gt;cat-blob&lt;/code&gt;) or copying a blob or tree from a previous commit for use in the current one (with &lt;code&gt;filemodify&lt;/code&gt;).</source>
          <target state="translated">以前に &lt;code&gt;--cat-blob-fd&lt;/code&gt; 引数で調整されたファイル記述子へのパスにあるオブジェクトに関する情報を出力します。これにより、アクティブなコミットからのBLOBの印刷（ &lt;code&gt;cat-blob&lt;/code&gt; を使用）、または現在のコミットで使用するための以前のコミットからのBLOBまたはツリーのコピー（ &lt;code&gt;filemodify&lt;/code&gt; を使用）が可能になります。</target>
        </trans-unit>
        <trans-unit id="67f72d83deebf87ad84204db25d15bef66391fa1" translate="yes" xml:space="preserve">
          <source>Prints the Git suite version that the &lt;code&gt;git&lt;/code&gt; program came from.</source>
          <target state="translated">&lt;code&gt;git&lt;/code&gt; プログラムの元のGitスイートバージョンを出力します。</target>
        </trans-unit>
        <trans-unit id="31cffb4ffe2a30a3dd8ff5b977f393cbba618dfd" translate="yes" xml:space="preserve">
          <source>Prints the synopsis and a list of the most commonly used commands. If the option &lt;code&gt;--all&lt;/code&gt; or &lt;code&gt;-a&lt;/code&gt; is given then all available commands are printed. If a Git command is named this option will bring up the manual page for that command.</source>
          <target state="translated">概要と最も一般的に使用されるコマンドのリストを出力します。オプション &lt;code&gt;--all&lt;/code&gt; または &lt;code&gt;-a&lt;/code&gt; を指定すると、使用可能なすべてのコマンドが出力されます。Gitコマンドに名前が付けられている場合、このオプションはそのコマンドのマニュアルページを表示します。</target>
        </trans-unit>
        <trans-unit id="866254572e1e21a744b0d521a136d91326c823cd" translate="yes" xml:space="preserve">
          <source>Problems related to branches:</source>
          <target state="translated">支店に関する問題。</target>
        </trans-unit>
        <trans-unit id="ca677c6e0873752e051f5b6dc5cfbc5f3713a96f" translate="yes" xml:space="preserve">
          <source>Problems related to tags:</source>
          <target state="translated">タグに関連する問題。</target>
        </trans-unit>
        <trans-unit id="704eb4f9500e5abbbd40e21ecae0dbc6632f17d7" translate="yes" xml:space="preserve">
          <source>Problems related to timestamps:</source>
          <target state="translated">タイムスタンプに関する問題。</target>
        </trans-unit>
        <trans-unit id="face2a8f1265d0d2162b3bb8d6cc8c2e4f00bd1a" translate="yes" xml:space="preserve">
          <source>Problems with rewriting history</source>
          <target state="translated">歴史の書き換えの問題点</target>
        </trans-unit>
        <trans-unit id="cb8ad1a0606d68ac22c37138a82e9dcd94bd7b47" translate="yes" xml:space="preserve">
          <source>Proceed even if the index or the working tree differs from &lt;code&gt;HEAD&lt;/code&gt;. Both the index and working tree are restored to match the switching target. If &lt;code&gt;--recurse-submodules&lt;/code&gt; is specified, submodule content is also restored to match the switching target. This is used to throw away local changes.</source>
          <target state="translated">インデックスまたは作業ツリーが &lt;code&gt;HEAD&lt;/code&gt; と異なっていても続行します。インデックスと作業ツリーの両方が切り替えターゲットに一致するように復元されます。 &lt;code&gt;--recurse-submodules&lt;/code&gt; が指定されている場合、サブモジュールの内容も切り替えターゲットと一致するように復元されます。これは、ローカルの変更を破棄するために使用されます。</target>
        </trans-unit>
        <trans-unit id="81635a56ae860db0a8d1fccf460faed330395977" translate="yes" xml:space="preserve">
          <source>Process binary files as if they were text.</source>
          <target state="translated">バイナリファイルをテキストのように処理します。</target>
        </trans-unit>
        <trans-unit id="c13073a8e5c76f53a6790b53a64799c267eda4e9" translate="yes" xml:space="preserve">
          <source>Process files in the order specified in the &amp;lt;orderfile&amp;gt;, which has one shell glob pattern per line. This overrides the &lt;code&gt;diff.orderFile&lt;/code&gt; configuration variable (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;). To cancel &lt;code&gt;diff.orderFile&lt;/code&gt;, use &lt;code&gt;-O/dev/null&lt;/code&gt;.</source>
          <target state="translated">&amp;lt;orderfile&amp;gt;で指定された順序でファイルを処理します。これには、1行に1つのシェルglobパターンがあります。これは、 &lt;code&gt;diff.orderFile&lt;/code&gt; 構成変数をオーバーライドします（&lt;a href=&quot;git-config&quot;&gt;git-config [1]を&lt;/a&gt;参照）。 &lt;code&gt;diff.orderFile&lt;/code&gt; をキャンセルするには、 &lt;code&gt;-O/dev/null&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="efe0d70966f95f77c3e86b43812298f2ec9b000a" translate="yes" xml:space="preserve">
          <source>Process the reflogs of all references.</source>
          <target state="translated">すべての参照のリフローを処理します。</target>
        </trans-unit>
        <trans-unit id="0782c5b7801790281dc0fb4b01651b8bfdcbc4f5" translate="yes" xml:space="preserve">
          <source>Processes all packs. Any filenames on the command line are ignored.</source>
          <target state="translated">すべてのパックを処理します。コマンドライン上のファイル名は無視されます。</target>
        </trans-unit>
        <trans-unit id="3c46a3f16a2a32b7eba71a8379b8360472d65d8d" translate="yes" xml:space="preserve">
          <source>Processes the specified option so that git fast-import behaves in a way that suits the frontend&amp;rsquo;s needs. Note that options specified by the frontend are overridden by any options the user may specify to git fast-import itself.</source>
          <target state="translated">指定されたオプションを処理して、git fast-importがフロントエンドのニーズに適した方法で動作するようにします。フロントエンドで指定されたオプションは、ユーザーがそれ自体をgit fast-importするために指定するオプションで上書きされることに注意してください。</target>
        </trans-unit>
        <trans-unit id="2de3013c8cd324e1d7d27384810d30bdbff48678" translate="yes" xml:space="preserve">
          <source>Produce a merge commit message</source>
          <target state="translated">マージコミットメッセージを生成する</target>
        </trans-unit>
        <trans-unit id="221bd606329bfae672e0ecc9594988658e144e37" translate="yes" xml:space="preserve">
          <source>Produce machine-readable output. The output status line for each ref will be tab-separated and sent to stdout instead of stderr. The full symbolic names of the refs will be given.</source>
          <target state="translated">機械で読める出力を生成します。各参照の出力ステータス行はタブで区切られ、stderrの代わりにstdoutに送られます。参照先の完全なシンボリック名が与えられます。</target>
        </trans-unit>
        <trans-unit id="fa20429458d99d060783732e4d2e8bf497560d29" translate="yes" xml:space="preserve">
          <source>Produce output in the same format as &lt;code&gt;git blame&lt;/code&gt;, but with SVN revision numbers instead of Git commit hashes. In this mode, changes that haven&amp;rsquo;t been committed to SVN (including local working-copy edits) are shown as revision 0.</source>
          <target state="translated">&lt;code&gt;git blame&lt;/code&gt; と同じ形式で出力を生成しますが、Gitコミットハッシュの代わりにSVNリビジョン番号を使用します。このモードでは、SVNにコミットされていない変更（ローカルの作業コピーの編集を含む）はリビジョン0として表示されます。</target>
        </trans-unit>
        <trans-unit id="cb195c53f13c5c90951762ba09047296d46995e9" translate="yes" xml:space="preserve">
          <source>Produce the working tree and index state as if a real merge happened (except for the merge information), but do not actually make a commit, move the &lt;code&gt;HEAD&lt;/code&gt;, or record &lt;code&gt;$GIT_DIR/MERGE_HEAD&lt;/code&gt; (to cause the next &lt;code&gt;git commit&lt;/code&gt; command to create a merge commit). This allows you to create a single commit on top of the current branch whose effect is the same as merging another branch (or more in case of an octopus).</source>
          <target state="translated">実際のマージが発生したかのように（マージ情報を除いて）作業ツリーとインデックスの状態を生成しますが、実際にはコミットせず、 &lt;code&gt;HEAD&lt;/code&gt; を移動するか、 &lt;code&gt;$GIT_DIR/MERGE_HEAD&lt;/code&gt; 記録します（次の &lt;code&gt;git commit&lt;/code&gt; コマンドで、マージコミット）。これにより、現在のブランチの上に単一のコミットを作成できます。その効果は、別のブランチ（タコの場合はさらに）をマージするのと同じです。</target>
        </trans-unit>
        <trans-unit id="465a8ba2d1fbe9de5dbb0d6da6e9b4fc2bd5f63f" translate="yes" xml:space="preserve">
          <source>Produces a fast-import stream which imports the current value of the named ref. It may additionally import other refs as needed to construct the history efficiently. The script writes to a helper-specific private namespace. The value of the named ref should be written to a location in this namespace derived by applying the refspecs from the &quot;refspec&quot; capability to the name of the ref.</source>
          <target state="translated">指定された ref の現在の値をインポートする高速インポートストリームを生成します。履歴を効率的に構築するために、必要に応じて他の ref を追加でインポートすることもできます。スクリプトはヘルパー固有のプライベートな名前空間に書き込みます。指定されたrefの値は、&quot;refspec &quot;ケイパビリティのrefspecsをrefの名前に適用することで、この名前空間内の場所に書き込まれます。</target>
        </trans-unit>
        <trans-unit id="c940155095e7923b03e52693b949145b33288361" translate="yes" xml:space="preserve">
          <source>Progress status is reported on the standard error stream by default when it is attached to a terminal, unless --no-progress or --verbose is specified. --progress forces progress status even if the standard error stream is not directed to a terminal.</source>
          <target state="translated">標準エラーストリームが端末に接続されている場合、--no-progress または --verbose が指定されていない限り、標準エラーストリームの進捗状況はデフォルトで報告されます。-progress は、標準エラーストリームが端末に接続されていない場合でも、進行状況を強制的に表示します。</target>
        </trans-unit>
        <trans-unit id="2dcc9cf9e59b81f490159a20a52344236fd5a3dc" translate="yes" xml:space="preserve">
          <source>Progress status is reported on the standard error stream by default when it is attached to a terminal, unless -q is specified. This flag forces progress status even if the standard error stream is not directed to a terminal.</source>
          <target state="translated">q が指定されていない限り、標準エラーストリームが端末に接続されている場合、標準エラーストリームの進行状況はデフォルトで報告される。このフラグは、標準エラーストリームが端末に接続されていない場合でも、進行状況を強制的に報告する。</target>
        </trans-unit>
        <trans-unit id="e5cc82042c92eacaa55f040bd35ecdec7afbf1c3" translate="yes" xml:space="preserve">
          <source>Progress status is reported on the standard error stream by default when it is attached to a terminal, unless &lt;code&gt;--quiet&lt;/code&gt; is specified. This flag enables progress reporting even if not attached to a terminal, regardless of &lt;code&gt;--quiet&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--quiet&lt;/code&gt; が指定されていない限り、進行状況は、端末に接続されているときにデフォルトで標準エラーストリームで報告されます。このフラグは、-- &lt;code&gt;--quiet&lt;/code&gt; に関係なく、端末に接続されていなくても進行状況レポートを有効にします。</target>
        </trans-unit>
        <trans-unit id="84082a3e9b3738ac2cad5de1d40208e556f0b5a9" translate="yes" xml:space="preserve">
          <source>Progress status is reported on the standard error stream by default when it is attached to a terminal, unless &lt;code&gt;--quiet&lt;/code&gt; is specified. This flag forces progress status even if the standard error stream is not directed to a terminal.</source>
          <target state="translated">&lt;code&gt;--quiet&lt;/code&gt; が指定されていない限り、進行状況は、端末に接続されているときにデフォルトで標準エラーストリームで報告されます。このフラグは、標準エラーストリームが端末に送信されない場合でも、進行状況を強制します。</target>
        </trans-unit>
        <trans-unit id="8942c3e281f4b4272bf2fa19690b7dbfeb0da954" translate="yes" xml:space="preserve">
          <source>Progress status is reported on the standard error stream by default when it is attached to a terminal. This flag enables progress reporting even if not attached to a terminal. Can&amp;rsquo;t use &lt;code&gt;--progress&lt;/code&gt; together with &lt;code&gt;--porcelain&lt;/code&gt; or &lt;code&gt;--incremental&lt;/code&gt;.</source>
          <target state="translated">端末に接続されている場合、進行状況はデフォルトで標準エラーストリームで報告されます。このフラグは、端末に接続されていない場合でも、進行状況レポートを有効にします。使用することはできません &lt;code&gt;--progress&lt;/code&gt; と一緒に &lt;code&gt;--porcelain&lt;/code&gt; か &lt;code&gt;--incremental&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3394ad842c4e27aba66aa2ba1a5a4056f7fb9719" translate="yes" xml:space="preserve">
          <source>Progress, informational, and error messages: The two backends provide slightly different progress and informational messages. Also, the apply backend writes error messages (such as &quot;Your files would be overwritten&amp;hellip;​&quot;) to stdout, while the merge backend writes them to stderr.</source>
          <target state="translated">進行状況、情報、およびエラーメッセージ：2つのバックエンドは、わずかに異なる進行状況と情報メッセージを提供します。また、適用バックエンドはエラーメッセージ（「ファイルが上書きされます&amp;hellip;」など）をstdoutに書き込み、マージバックエンドはそれらをstderrに書き込みます。</target>
        </trans-unit>
        <trans-unit id="a4a80ecee0b21f76717158fcc872d2fe8c9f70c9" translate="yes" xml:space="preserve">
          <source>Project list files should list one project per line, with each line having the following format</source>
          <target state="translated">プロジェクトリストファイルは、1行に1つのプロジェクトをリストアップし、各行は以下のフォーマットになっていなければなりません。</target>
        </trans-unit>
        <trans-unit id="64ddeaf66879746d77d52edba9fc6b51c3b5494f" translate="yes" xml:space="preserve">
          <source>Project specific override is not supported.</source>
          <target state="translated">プロジェクト固有のオーバーライドはサポートされていません。</target>
        </trans-unit>
        <trans-unit id="38cb6b6f38fc49666443f39245952417f433b632" translate="yes" xml:space="preserve">
          <source>Projects list file format</source>
          <target state="translated">プロジェクト一覧ファイル形式</target>
        </trans-unit>
        <trans-unit id="99a6cf116ac91087c7f440f3f894b1353453be3c" translate="yes" xml:space="preserve">
          <source>Promisor packfiles are repacked separately: if there are packfiles that have an associated &quot;.promisor&quot; file, these packfiles will be repacked into another separate pack, and an empty &quot;.promisor&quot; file corresponding to the new separate pack will be written.</source>
          <target state="translated">プロバイザパックファイルは別々にリパックされます:関連する &quot;.promisor&quot; ファイルがあるパックファイルがある場合、これらのパックファイルは別の別のパックにリパックされ、新しい別のパックに対応する空の &quot;.promisor&quot; ファイルが書き込まれます。</target>
        </trans-unit>
        <trans-unit id="1e3e6d8a5678027c372d639c7caa1ae762739111" translate="yes" xml:space="preserve">
          <source>Prompt before each invocation of the diff tool.</source>
          <target state="translated">diff ツールを起動するたびにプロンプトを表示します。</target>
        </trans-unit>
        <trans-unit id="011847e8f4535310d3585f3561b850f5eaa68bd2" translate="yes" xml:space="preserve">
          <source>Prompt before each invocation of the diff tool. This is the default behaviour; the option is provided to override any configuration settings.</source>
          <target state="translated">diffツールを起動するたびにプロンプトを表示します。これはデフォルトの動作で、設定を上書きするためのオプションが用意されています。</target>
        </trans-unit>
        <trans-unit id="60f48217749656a50ce363c78d14fe3fba58b27e" translate="yes" xml:space="preserve">
          <source>Prompt before each invocation of the merge resolution program to give the user a chance to skip the path.</source>
          <target state="translated">マージ解決プログラムを起動するたびにプロンプトを表示し、パスをスキップする機会をユーザに与えます。</target>
        </trans-unit>
        <trans-unit id="1bd1cfd1155b4114e14d09a7c37c4a191ca7ac30" translate="yes" xml:space="preserve">
          <source>Prompt before each invocation of the merge resolution program.</source>
          <target state="translated">マージ解決プログラムを起動するたびにプロンプトを表示します。</target>
        </trans-unit>
        <trans-unit id="353a353b6eb50b67e795967c32fb24f9eeb5d549" translate="yes" xml:space="preserve">
          <source>Protocol notes: If you are using anonymous access via pserver, just select that. Those using SSH access should choose the &lt;code&gt;ext&lt;/code&gt; protocol, and configure &lt;code&gt;ext&lt;/code&gt; access on the Preferences&amp;rarr;Team&amp;rarr;CVS&amp;rarr;ExtConnection pane. Set CVS_SERVER to &quot;&lt;code&gt;git cvsserver&lt;/code&gt;&quot;. Note that password support is not good when using &lt;code&gt;ext&lt;/code&gt;, you will definitely want to have SSH keys setup.</source>
          <target state="translated">プロトコルに関する注意：pserver経由の匿名アクセスを使用している場合は、それを選択してください。 SSHアクセスを使用するユーザーは、 &lt;code&gt;ext&lt;/code&gt; プロトコルを選択し、[設定]&amp;rarr;[チーム]&amp;rarr;[CVS]&amp;rarr;[ExtConnection]ペインで &lt;code&gt;ext&lt;/code&gt; アクセスを構成する必要があります。 CVS_SERVERを「 &lt;code&gt;git cvsserver&lt;/code&gt; 」に設定します。 &lt;code&gt;ext&lt;/code&gt; を使用する場合、パスワードのサポートは適切ではないことに注意してください。SSHキーを設定することは間違いありません。</target>
        </trans-unit>
        <trans-unit id="4e8bf93a6f67bf7687593a7faf3fef64759fa4d3" translate="yes" xml:space="preserve">
          <source>Protocol version 2 is stateless by default. This means that all commands must only last a single round and be stateless from the perspective of the server side, unless the client has requested a capability indicating that state should be maintained by the server. Clients MUST NOT require state management on the server side in order to function correctly. This permits simple round-robin load-balancing on the server side, without needing to worry about state management.</source>
          <target state="translated">プロトコルバージョン2はデフォルトでステートレスである。これは、クライアントがサーバーがステートを維持すべきであることを示すケイパビリティを要求しない限り、すべてのコマンドは1ラウンドのみ持続し、サーバー側から見ればステートレスでなければならないことを意味する。クライアントが正しく機能するためには、サーバ側でステート管理を必要としてはならない[MUST NOT]。これにより、ステート管理を気にすることなく、サーバー側で単純なラウンドロビンのロードバランシングが可能になります。</target>
        </trans-unit>
        <trans-unit id="a457f44dce93162338e37dcadcb5a7e148a161e8" translate="yes" xml:space="preserve">
          <source>Provide content or type and size information for repository objects</source>
          <target state="translated">リポジトリオブジェクトのコンテンツまたはタイプとサイズの情報を提供する</target>
        </trans-unit>
        <trans-unit id="ce1130d2639274732ace3560e1b161a1f25e1593" translate="yes" xml:space="preserve">
          <source>Provide more progress information.</source>
          <target state="translated">より多くの進捗情報を提供する。</target>
        </trans-unit>
        <trans-unit id="e90e088e3482417a8a9d0a613e03789c858721a1" translate="yes" xml:space="preserve">
          <source>Provides a default value for unspecified object filters (see: the below configuration variable). Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">未指定のオブジェクトフィルターのデフォルト値を提供します（以下の構成変数を参照）。デフォルトは &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ddd6c4f93ce8e6500d931f94e6b50cb8556ece89" translate="yes" xml:space="preserve">
          <source>Provides the default value for the &lt;code&gt;--from&lt;/code&gt; option to format-patch. Accepts a boolean value, or a name and email address. If false, format-patch defaults to &lt;code&gt;--no-from&lt;/code&gt;, using commit authors directly in the &quot;From:&quot; field of patch mails. If true, format-patch defaults to &lt;code&gt;--from&lt;/code&gt;, using your committer identity in the &quot;From:&quot; field of patch mails and including a &quot;From:&quot; field in the body of the patch mail if different. If set to a non-boolean value, format-patch uses that value instead of your committer identity. Defaults to false.</source>
          <target state="translated">&lt;code&gt;--from&lt;/code&gt; オプションのデフォルト値をformat-patchに提供します。ブール値、または名前と電子メールアドレスを受け入れます。 falseの場合、format-patchはデフォルトで &lt;code&gt;--no-from&lt;/code&gt; になり、パッチメールの「From：」フィールドで直接コミット作成者を使用します。 trueの場合、format-patchはデフォルトで &lt;code&gt;--from&lt;/code&gt; になり、パッチメールの「From：」フィールドにコミッターIDを使用し、異なる場合はパッチメールの本文に「From：」フィールドを含めます。非ブール値に設定した場合、format-patchはコミッターIDの代わりにその値を使用します。デフォルトはfalseです。</target>
        </trans-unit>
        <trans-unit id="6c89fcd0681556b5a0a64abc8173aa6e8488cc9d" translate="yes" xml:space="preserve">
          <source>Provides the default value for the &lt;code&gt;--guess&lt;/code&gt; or &lt;code&gt;--no-guess&lt;/code&gt; option in &lt;code&gt;git checkout&lt;/code&gt; and &lt;code&gt;git switch&lt;/code&gt;. See &lt;a href=&quot;git-switch&quot;&gt;git-switch[1]&lt;/a&gt; and &lt;a href=&quot;git-checkout&quot;&gt;git-checkout[1]&lt;/a&gt;.</source>
          <target state="translated">デフォルト値を提供 &lt;code&gt;--guess&lt;/code&gt; または &lt;code&gt;--no-guess&lt;/code&gt; でオプション &lt;code&gt;git checkout&lt;/code&gt; と &lt;code&gt;git switch&lt;/code&gt; 。&lt;a href=&quot;git-switch&quot;&gt;git-switch [1]&lt;/a&gt;および&lt;a href=&quot;git-checkout&quot;&gt;git-checkout [1]を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="07e705dc3eb04b1cd0e9d868ce2fbabc5a7b23e9" translate="yes" xml:space="preserve">
          <source>Provides the default value for the &lt;code&gt;--notes&lt;/code&gt; option to format-patch. Accepts a boolean value, or a ref which specifies where to get notes. If false, format-patch defaults to &lt;code&gt;--no-notes&lt;/code&gt;. If true, format-patch defaults to &lt;code&gt;--notes&lt;/code&gt;. If set to a non-boolean value, format-patch defaults to &lt;code&gt;--notes=&amp;lt;ref&amp;gt;&lt;/code&gt;, where &lt;code&gt;ref&lt;/code&gt; is the non-boolean value. Defaults to false.</source>
          <target state="translated">&lt;code&gt;--notes&lt;/code&gt; オプションのデフォルト値をformat-patchに提供します。ブール値、またはメモを取得する場所を指定する参照を受け入れます。 falseの場合、format-patchのデフォルトは &lt;code&gt;--no-notes&lt;/code&gt; です。 trueの場合、format-patchのデフォルトは &lt;code&gt;--notes&lt;/code&gt; です。非ブール値に設定されている場合、format-patchのデフォルトは &lt;code&gt;--notes=&amp;lt;ref&amp;gt;&lt;/code&gt; です。ここで、 &lt;code&gt;ref&lt;/code&gt; は非ブール値です。デフォルトはfalseです。</target>
        </trans-unit>
        <trans-unit id="dae8413448109f25f13d1230fdfd21a6427a0a34" translate="yes" xml:space="preserve">
          <source>Provides the name of the object in the original source control system. fast-import will simply ignore this directive, but filter processes which operate on and modify the stream before feeding to fast-import may have uses for this information</source>
          <target state="translated">fast-import はこのディレクティブを単に無視しますが、 fast-import に供給する前にストリームを操作したり変更したりするフィルタプロセスは、 この情報を利用することがあります。</target>
        </trans-unit>
        <trans-unit id="354f719eac7091e1c38104be699d2a68f56df045" translate="yes" xml:space="preserve">
          <source>Providing cvs access to a git repository</source>
          <target state="translated">git リポジトリへの cvs アクセスを提供する</target>
        </trans-unit>
        <trans-unit id="9a84f98b698c9d5bcdfa443dee138e79368665d7" translate="yes" xml:space="preserve">
          <source>Providing usernames and passwords to Git</source>
          <target state="translated">Gitへのユーザー名とパスワードの提供</target>
        </trans-unit>
        <trans-unit id="05a28ca41ca8e50984ed01529e7df3e3335567dc" translate="yes" xml:space="preserve">
          <source>Prune all unreachable objects from the object database</source>
          <target state="translated">オブジェクトデータベースからすべての到達不可能なオブジェクトを刈り取る</target>
        </trans-unit>
        <trans-unit id="347c95991436ac84fd290ccf1ebe7a72eadc41e7" translate="yes" xml:space="preserve">
          <source>Prune any reflog entries that point to &quot;broken commits&quot;. A broken commit is a commit that is not reachable from any of the reference tips and that refers, directly or indirectly, to a missing commit, tree, or blob object.</source>
          <target state="translated">壊れたコミット」を指す reflog エントリをすべて削除します。壊れたコミットとは、どの参照チップからも到達できないコミットのことで、直接、間接を問わず、欠落したコミット、ツリー、ブロブオブジェクトを参照しているコミットのことです。</target>
        </trans-unit>
        <trans-unit id="a7eae2a7a6ec9df449cef235306188bcb1fafe15" translate="yes" xml:space="preserve">
          <source>Prune entries older than &lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt; that are not reachable from the current tip of the branch. If this option is not specified, the expiration time is taken from the configuration setting &lt;code&gt;gc.reflogExpireUnreachable&lt;/code&gt;, which in turn defaults to 30 days. &lt;code&gt;--expire-unreachable=all&lt;/code&gt; prunes unreachable entries regardless of their age; &lt;code&gt;--expire-unreachable=never&lt;/code&gt; turns off early pruning of unreachable entries (but see &lt;code&gt;--expire&lt;/code&gt;).</source>
          <target state="translated">ブランチの現在の先端から到達できない &lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt; より古いエントリを削除します。このオプションが指定されていない場合、有効期限は構成設定 &lt;code&gt;gc.reflogExpireUnreachable&lt;/code&gt; から取得され、デフォルトでは30日になります。 &lt;code&gt;--expire-unreachable=all&lt;/code&gt; 年齢に関係なく、到達できないエントリを削除します。 &lt;code&gt;--expire-unreachable=never&lt;/code&gt; は到達不能なエントリの早期プルーニングをオフにしません（ただし &lt;code&gt;--expire&lt;/code&gt; を参照）。</target>
        </trans-unit>
        <trans-unit id="f510204b241f9f833d70b40e365b78ba855d5d73" translate="yes" xml:space="preserve">
          <source>Prune entries older than the specified time. If this option is not specified, the expiration time is taken from the configuration setting &lt;code&gt;gc.reflogExpire&lt;/code&gt;, which in turn defaults to 90 days. &lt;code&gt;--expire=all&lt;/code&gt; prunes entries regardless of their age; &lt;code&gt;--expire=never&lt;/code&gt; turns off pruning of reachable entries (but see &lt;code&gt;--expire-unreachable&lt;/code&gt;).</source>
          <target state="translated">指定された時間より古いエントリを削除します。このオプションが指定されていない場合、有効期限は構成設定 &lt;code&gt;gc.reflogExpire&lt;/code&gt; から取得され、デフォルトでは90日になります。 &lt;code&gt;--expire=all&lt;/code&gt; は、年齢に関係なくエントリを整理します。 &lt;code&gt;--expire=never&lt;/code&gt; は到達可能なエントリのプルーニングをオフにします（ただし、 &lt;code&gt;--expire-unreachable&lt;/code&gt; を参照してください）。</target>
        </trans-unit>
        <trans-unit id="9ca76117e69104a0e4e81d319f878c7014bb3c8a" translate="yes" xml:space="preserve">
          <source>Prune loose objects older than date (default is 2 weeks ago, overridable by the config variable &lt;code&gt;gc.pruneExpire&lt;/code&gt;). --prune=now prunes loose objects regardless of their age and increases the risk of corruption if another process is writing to the repository concurrently; see &quot;NOTES&quot; below. --prune is on by default.</source>
          <target state="translated">日付より古いルーズオブジェクトを &lt;code&gt;gc.pruneExpire&lt;/code&gt; ます（デフォルトは2週間前で、設定変数gc.pruneExpireでオーバーライドできます）。--prune = nowは、古くなったオブジェクトをそれらの経過時間に関係なく枝刈りし、別のプロセスがリポジトリに同時に書き込みを行っている場合に破損のリスクを高めます。以下の「注意事項」を参照してください。--pruneはデフォルトでオンになっています。</target>
        </trans-unit>
        <trans-unit id="ad1903147c3980cb00334e6e57ade6c895b0d197" translate="yes" xml:space="preserve">
          <source>Prune records of conflicted merges that occurred a long time ago. By default, unresolved conflicts older than 15 days and resolved conflicts older than 60 days are pruned. These defaults are controlled via the &lt;code&gt;gc.rerereUnresolved&lt;/code&gt; and &lt;code&gt;gc.rerereResolved&lt;/code&gt; configuration variables respectively.</source>
          <target state="translated">ずっと前に発生した競合したマージのレコードを整理します。デフォルトでは、15日以上経過した未解決の競合と60日以上経過した解決済みの競合が整理されます。これらのデフォルトは、それぞれ &lt;code&gt;gc.rerereUnresolved&lt;/code&gt; および &lt;code&gt;gc.rerereResolved&lt;/code&gt; 構成変数によって制御されます。</target>
        </trans-unit>
        <trans-unit id="9ae5dc95253bd1047251fe2f0130ef53d935cb16" translate="yes" xml:space="preserve">
          <source>Prune working tree information in $GIT_DIR/worktrees.</source>
          <target state="translated">git_dir/worktreesにある作業木の情報を剪定します。</target>
        </trans-unit>
        <trans-unit id="b6aa433344bec7e7c38aefc927d7aa60d687c035" translate="yes" xml:space="preserve">
          <source>Prune working tree information in &lt;code&gt;$GIT_DIR/worktrees&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$GIT_DIR/worktrees&lt;/code&gt; 作業ツリー情報を整理します。</target>
        </trans-unit>
        <trans-unit id="1daa62e08ce5be741f0f9512af6fe6aea569309c" translate="yes" xml:space="preserve">
          <source>Pruning</source>
          <target state="translated">Pruning</target>
        </trans-unit>
        <trans-unit id="9780740ad9404eab5bef283300816b2d37b6c371" translate="yes" xml:space="preserve">
          <source>Pruning tags with &lt;code&gt;--prune-tags&lt;/code&gt; also works when fetching a URL instead of a named remote. These will all prune tags not found on origin:</source>
          <target state="translated">&lt;code&gt;--prune-tags&lt;/code&gt; tagsを使用したタグのプルーニングは、名前付きリモートの代わりにURLをフェッチするときにも機能します。これらはすべて、起点にないタグを除去します。</target>
        </trans-unit>
        <trans-unit id="5d67c6362cb385f7b2fd7440df4474229e4ced1c" translate="yes" xml:space="preserve">
          <source>Pseudorefs are a class of files under &lt;code&gt;$GIT_DIR&lt;/code&gt; which behave like refs for the purposes of rev-parse, but which are treated specially by git. Pseudorefs both have names that are all-caps, and always start with a line consisting of a &lt;a href=&quot;#def_SHA1&quot;&gt;SHA-1&lt;/a&gt; followed by whitespace. So, HEAD is not a pseudoref, because it is sometimes a symbolic ref. They might optionally contain some additional data. &lt;code&gt;MERGE_HEAD&lt;/code&gt; and &lt;code&gt;CHERRY_PICK_HEAD&lt;/code&gt; are examples. Unlike &lt;a href=&quot;#def_per_worktree_ref&quot;&gt;per-worktree refs&lt;/a&gt;, these files cannot be symbolic refs, and never have reflogs. They also cannot be updated through the normal ref update machinery. Instead, they are updated by directly writing to the files. However, they can be read as if they were refs, so &lt;code&gt;git rev-parse
MERGE_HEAD&lt;/code&gt; will work.</source>
          <target state="translated">&lt;code&gt;$GIT_DIR&lt;/code&gt; 参照は、$ GIT_DIRの下のファイルのクラスであり、rev-parseの目的では参照のように動作しますが、gitによって特別に処理されます。疑似参照はどちらもすべて大文字の名前で、常に&lt;a href=&quot;#def_SHA1&quot;&gt;SHA-1と&lt;/a&gt;それに続く空白で構成される行で始まります。したがって、HEADはシンボリック参照になることがあるので、疑似参照ではありません。オプションで、いくつかの追加データが含まれる場合があります。 &lt;code&gt;MERGE_HEAD&lt;/code&gt; と &lt;code&gt;CHERRY_PICK_HEAD&lt;/code&gt; は例です。&lt;a href=&quot;#def_per_worktree_ref&quot;&gt;ワークツリーごとのref&lt;/a&gt;とは異なり、これらのファイルはシンボリックrefにすることはできず、reflogを持つことはできません。また、通常のref更新機構では更新できません。代わりに、ファイルに直接書き込むことで更新されます。ただし、参照であるかのように読み取ることができるため、 &lt;code&gt;git rev-parse MERGE_HEAD&lt;/code&gt; が機能します。</target>
        </trans-unit>
        <trans-unit id="b7a4dc2e6290047f1f86721c32ae669785e9b742" translate="yes" xml:space="preserve">
          <source>Public Git repositories</source>
          <target state="translated">公開されている Git リポジトリ</target>
        </trans-unit>
        <trans-unit id="8f3f20e99361b4469a543cafe71c660d905701e0" translate="yes" xml:space="preserve">
          <source>Public api</source>
          <target state="translated">パブリックAPI</target>
        </trans-unit>
        <trans-unit id="661a1caa924e6377c910ab84f021b879aa1f3688" translate="yes" xml:space="preserve">
          <source>Public key of the https service. It may either be the filename of a PEM or DER encoded public key file or a string starting with &lt;code&gt;sha256//&lt;/code&gt; followed by the base64 encoded sha256 hash of the public key. See also libcurl &lt;code&gt;CURLOPT_PINNEDPUBLICKEY&lt;/code&gt;. git will exit with an error if this option is set but not supported by cURL.</source>
          <target state="translated">httpsサービスの公開鍵。PEMまたはDERでエンコードされた公開鍵ファイルのファイル名か、 &lt;code&gt;sha256//&lt;/code&gt; 始まり、その後に公開鍵のbase64エンコードされたsha256ハッシュが続く文字列のいずれかになります。libcurl &lt;code&gt;CURLOPT_PINNEDPUBLICKEY&lt;/code&gt; も参照してください。このオプションが設定されているが、cURLでサポートされていない場合、gitはエラーで終了します。</target>
        </trans-unit>
        <trans-unit id="fcd79d77a075207d5bb03627d6390daac4adccdf" translate="yes" xml:space="preserve">
          <source>Publishing the changes from your local (private) repository to your remote (public) repository requires a write privilege on the remote machine. You need to have an SSH account there to run a single command, &lt;code&gt;git-receive-pack&lt;/code&gt;.</source>
          <target state="translated">ローカル（プライベート）リポジトリからリモート（パブリック）リポジトリに変更を公開するには、リモートマシンに対する書き込み権限が必要です。単一のコマンド &lt;code&gt;git-receive-pack&lt;/code&gt; を実行するには、そこにSSHアカウントが必要です。</target>
        </trans-unit>
        <trans-unit id="9d5654eba7f3fb26678d0b33453ea83f3704835b" translate="yes" xml:space="preserve">
          <source>Publishing your work</source>
          <target state="translated">作品の出版</target>
        </trans-unit>
        <trans-unit id="5225d106493e2d5cee97f92acd212fcbe8379cc8" translate="yes" xml:space="preserve">
          <source>Pulling a &lt;a href=&quot;#def_branch&quot;&gt;branch&lt;/a&gt; means to &lt;a href=&quot;#def_fetch&quot;&gt;fetch&lt;/a&gt; it and &lt;a href=&quot;#def_merge&quot;&gt;merge&lt;/a&gt; it. See also &lt;a href=&quot;git-pull&quot;&gt;git-pull[1]&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#def_branch&quot;&gt;ブランチ&lt;/a&gt;を&lt;a href=&quot;#def_fetch&quot;&gt;プル&lt;/a&gt;するとは、ブランチをフェッチして&lt;a href=&quot;#def_merge&quot;&gt;マージ&lt;/a&gt;することです。&lt;a href=&quot;git-pull&quot;&gt;git-pull [1]&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="6ba996099ee22cf557dfd858fcdfe9998a7d87a8" translate="yes" xml:space="preserve">
          <source>Pulling down the submodules is a two-step process. First run &lt;code&gt;git submodule
init&lt;/code&gt; to add the submodule repository URLs to &lt;code&gt;.git/config&lt;/code&gt;:</source>
          <target state="translated">サブモジュールのプルダウンは2段階のプロセスです。最初に &lt;code&gt;git submodule init&lt;/code&gt; を実行して、サブモジュールリポジトリのURLを &lt;code&gt;.git/config&lt;/code&gt; に追加します。</target>
        </trans-unit>
        <trans-unit id="67689e297cd4fdd92ebe641f7b6ed9bc63361f6b" translate="yes" xml:space="preserve">
          <source>Pulling into a dirty tree</source>
          <target state="translated">汚れた木に引っ込む</target>
        </trans-unit>
        <trans-unit id="678a9bfb35ce5da855b86526d846cbdc7583b760" translate="yes" xml:space="preserve">
          <source>Push &quot;matching&quot; branches to &lt;code&gt;origin&lt;/code&gt;. See &amp;lt;refspec&amp;gt; in the &lt;a href=&quot;#OPTIONS&quot;&gt;OPTIONS&lt;/a&gt; section above for a description of &quot;matching&quot; branches.</source>
          <target state="translated">「マッチング」ブランチを &lt;code&gt;origin&lt;/code&gt; にプッシュします。「一致する」ブランチの説明については、上記の「&lt;a href=&quot;#OPTIONS&quot;&gt;オプション」&lt;/a&gt;セクションの&amp;lt;refspec&amp;gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="e3d386bb2b306b430b8f1443632bcddb41f7fbbb" translate="yes" xml:space="preserve">
          <source>Push all branches (i.e. refs under &lt;code&gt;refs/heads/&lt;/code&gt;); cannot be used with other &amp;lt;refspec&amp;gt;.</source>
          <target state="translated">すべてのブランチ（つまり、 &lt;code&gt;refs/heads/&lt;/code&gt; 下のrefs）をプッシュします。他の&amp;lt;refspec&amp;gt;と一緒に使用することはできません。</target>
        </trans-unit>
        <trans-unit id="7ed05cac5fbf2fe13d768ad8d52cf3e6b3326c39" translate="yes" xml:space="preserve">
          <source>Push all the refs that would be pushed without this option, and also push annotated tags in &lt;code&gt;refs/tags&lt;/code&gt; that are missing from the remote but are pointing at commit-ish that are reachable from the refs being pushed. This can also be specified with configuration variable &lt;code&gt;push.followTags&lt;/code&gt;. For more information, see &lt;code&gt;push.followTags&lt;/code&gt; in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">このオプションなしでプッシュされるすべての参照をプッシュします。また、リモートから欠落しているがプッシュされている参照から到達可能なcommit-ishを指している &lt;code&gt;refs/tags&lt;/code&gt; 内の注釈付きタグもプッシュします。これは、設定変数 &lt;code&gt;push.followTags&lt;/code&gt; でも指定できます。詳細については、&lt;a href=&quot;git-config&quot;&gt;git-config [1]の&lt;/a&gt; &lt;code&gt;push.followTags&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="640e91962e4a94024fb44763555198cb451cbb5d" translate="yes" xml:space="preserve">
          <source>Push into another repository.</source>
          <target state="translated">別のリポジトリにプッシュします。</target>
        </trans-unit>
        <trans-unit id="fc1129a549e46f5ee09d052c0e625db078207268" translate="yes" xml:space="preserve">
          <source>Push into the public repository from your primary repository.</source>
          <target state="translated">プライマリリポジトリからパブリックリポジトリにプッシュします。</target>
        </trans-unit>
        <trans-unit id="a011ac29541d686365501a5376539fc2a54082f8" translate="yes" xml:space="preserve">
          <source>Push into the public repository from your primary repository. Run &lt;code&gt;git repack&lt;/code&gt;, and possibly &lt;code&gt;git prune&lt;/code&gt; if the transport used for pulling from your repository supports packed repositories.</source>
          <target state="translated">プライマリリポジトリからパブリックリポジトリにプッシュします。 &lt;code&gt;git repack&lt;/code&gt; を実行します。リポジトリからのプルに使用されるトランスポートがパックされたリポジトリをサポートしている場合は、可能であれば &lt;code&gt;git prune&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="a8251f9563aa908db5da52a9527e9f939a118d16" translate="yes" xml:space="preserve">
          <source>Push master, using file descriptor #7 to read data from git-receive-pack and file descriptor #8 to write data to same service.</source>
          <target state="translated">マスターをプッシュし、ファイルディスクリプター #7 を使って git-receive-pack からデータを読み込み、ファイルディスクリプター #8 を使って同じサービスにデータを書き込みます。</target>
        </trans-unit>
        <trans-unit id="db6a77b6524cf46e0155fc78cb84e6ef6e8d26d4" translate="yes" xml:space="preserve">
          <source>Push objects over Git protocol to another repository</source>
          <target state="translated">Git プロトコルを使ってオブジェクトを別のリポジトリにプッシュ</target>
        </trans-unit>
        <trans-unit id="e328f2dc0a129ee52c24984713b8e3e05193f873" translate="yes" xml:space="preserve">
          <source>Push objects over HTTP/DAV to another repository</source>
          <target state="translated">HTTP/DAVを介してオブジェクトを別のリポジトリにプッシュする</target>
        </trans-unit>
        <trans-unit id="93e6fc3901865e79bc1dfa6c467266c7822bf760" translate="yes" xml:space="preserve">
          <source>Push the current branch to the remote ref matching &lt;code&gt;master&lt;/code&gt; in the &lt;code&gt;origin&lt;/code&gt; repository. This form is convenient to push the current branch without thinking about its local name.</source>
          <target state="translated">現在のブランチを、 &lt;code&gt;origin&lt;/code&gt; リポジトリのリモート参照マッチング &lt;code&gt;master&lt;/code&gt; にプッシュします。このフォームは、ローカル名を意識せずに現在のブランチをプッシュするのに便利です。</target>
        </trans-unit>
        <trans-unit id="7221b3bad2db1abe78fb6e7112e947ec9066c484" translate="yes" xml:space="preserve">
          <source>Push your changes to the public repository, and announce it to the public.</source>
          <target state="translated">変更内容を公開リポジトリにプッシュして、公開します。</target>
        </trans-unit>
        <trans-unit id="44e2374abe889d292378278a32f8732ae3d0723a" translate="yes" xml:space="preserve">
          <source>Push your changes to your public repository, and ask your &quot;project lead&quot; and possibly your &quot;sub-subsystem maintainers&quot; to pull from it.</source>
          <target state="translated">変更した内容を公開リポジトリにプッシュし、&quot;プロジェクトリーダー &quot;や &quot;サブサブシステムメンテナ &quot;にそこから引っ張ってくるように依頼してください。</target>
        </trans-unit>
        <trans-unit id="64c3ecd283374b8e31c77b37f0b37ed07f7e3e67" translate="yes" xml:space="preserve">
          <source>Pushes the given local &amp;lt;src&amp;gt; commit or branch to the remote branch described by &amp;lt;dst&amp;gt;. A batch sequence of one or more &lt;code&gt;push&lt;/code&gt; commands is terminated with a blank line (if there is only one reference to push, a single &lt;code&gt;push&lt;/code&gt; command is followed by a blank line). For example, the following would be two batches of &lt;code&gt;push&lt;/code&gt;, the first asking the remote-helper to push the local ref &lt;code&gt;master&lt;/code&gt; to the remote ref &lt;code&gt;master&lt;/code&gt; and the local &lt;code&gt;HEAD&lt;/code&gt; to the remote &lt;code&gt;branch&lt;/code&gt;, and the second asking to push ref &lt;code&gt;foo&lt;/code&gt; to ref &lt;code&gt;bar&lt;/code&gt; (forced update requested by the &lt;code&gt;+&lt;/code&gt;).</source>
          <target state="translated">指定されたローカルの&amp;lt;src&amp;gt;コミットまたはブランチを、&amp;lt;dst&amp;gt;で記述されたリモートブランチにプッシュします。 1つ以上の &lt;code&gt;push&lt;/code&gt; コマンドのバッチシーケンスは、空白行で終了します（プッシュへの参照が1つしかない場合は、1つの &lt;code&gt;push&lt;/code&gt; コマンドの後に空白行が続きます）。たとえば、次は &lt;code&gt;push&lt;/code&gt; の 2つのバッチです。最初のバッチは、リモートヘルパーにローカル参照 &lt;code&gt;master&lt;/code&gt; をリモート参照 &lt;code&gt;master&lt;/code&gt; にプッシュし、ローカル &lt;code&gt;HEAD&lt;/code&gt; をリモート &lt;code&gt;branch&lt;/code&gt; にプッシュするように要求し、2番目は、参照 &lt;code&gt;foo&lt;/code&gt; を参照 &lt;code&gt;bar&lt;/code&gt; にプッシュするように要求します。（ &lt;code&gt;+&lt;/code&gt; によって要求された強制更新）。</target>
        </trans-unit>
        <trans-unit id="ca5456a5df7b11e9ef0d22090b33d4f3bd62ba82" translate="yes" xml:space="preserve">
          <source>Pushes which fail due to problems with the incoming pack, missing objects, or due to the &lt;code&gt;pre-receive&lt;/code&gt; hook will not leave any on-disk data. This is usually helpful to prevent repeated failed pushes from filling up your disk, but can make debugging more challenging.</source>
          <target state="translated">着信パックの問題、オブジェクトの欠落、または &lt;code&gt;pre-receive&lt;/code&gt; フックが原因で失敗したプッシュは、ディスク上のデータを残しません。これは通常、失敗したプッシュが繰り返されてディスクがいっぱいになるのを防ぐのに役立ちますが、デバッグがより困難になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="bd3f47195169191b06e6fb59aa660030c03d8082" translate="yes" xml:space="preserve">
          <source>Pushing a &lt;a href=&quot;#def_branch&quot;&gt;branch&lt;/a&gt; means to get the branch&amp;rsquo;s &lt;a href=&quot;#def_head_ref&quot;&gt;head ref&lt;/a&gt; from a remote &lt;a href=&quot;#def_repository&quot;&gt;repository&lt;/a&gt;, find out if it is an ancestor to the branch&amp;rsquo;s local head ref, and in that case, putting all objects, which are &lt;a href=&quot;#def_reachable&quot;&gt;reachable&lt;/a&gt; from the local head ref, and which are missing from the remote repository, into the remote &lt;a href=&quot;#def_object_database&quot;&gt;object database&lt;/a&gt;, and updating the remote head ref. If the remote &lt;a href=&quot;#def_head&quot;&gt;head&lt;/a&gt; is not an ancestor to the local head, the push fails.</source>
          <target state="translated">&lt;a href=&quot;#def_branch&quot;&gt;ブランチ&lt;/a&gt;をプッシュするとは、リモート&lt;a href=&quot;#def_repository&quot;&gt;リポジトリ&lt;/a&gt;からブランチの&lt;a href=&quot;#def_head_ref&quot;&gt;ヘッド参照&lt;/a&gt;を取得し、ブランチのローカルヘッド参照の祖先であるかどうかを確認し、その場合、ローカルヘッド参照から&lt;a href=&quot;#def_reachable&quot;&gt;到達可能な&lt;/a&gt;すべてのオブジェクトを配置することを意味します。リモートリポジトリからリモート&lt;a href=&quot;#def_object_database&quot;&gt;オブジェクトデータベース&lt;/a&gt;に欠落しており、リモートヘッド参照を更新しています。リモート&lt;a href=&quot;#def_head&quot;&gt;ヘッド&lt;/a&gt;がローカルヘッドの祖先でない場合、プッシュは失敗します。</target>
        </trans-unit>
        <trans-unit id="a1b201ad98b52436e58805968e041862b0e44b88" translate="yes" xml:space="preserve">
          <source>Pushing an empty &amp;lt;src&amp;gt; allows you to delete the &amp;lt;dst&amp;gt; ref from the remote repository. Deletions are always accepted without a leading &lt;code&gt;+&lt;/code&gt; in the refspec (or &lt;code&gt;--force&lt;/code&gt;), except when forbidden by configuration or hooks. See &lt;code&gt;receive.denyDeletes&lt;/code&gt; in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; and &lt;code&gt;pre-receive&lt;/code&gt; and &lt;code&gt;update&lt;/code&gt; in &lt;a href=&quot;githooks&quot;&gt;githooks[5]&lt;/a&gt;.</source>
          <target state="translated">空の&amp;lt;src&amp;gt;をプッシュすると、リモートリポジトリから&amp;lt;dst&amp;gt;参照を削除できます。削除は、設定またはフックで禁止されている場合を除いて、refspec（または &lt;code&gt;--force&lt;/code&gt; ）の先頭に &lt;code&gt;+&lt;/code&gt; を付けずに常に受け入れられます。参照 &lt;code&gt;receive.denyDeletes&lt;/code&gt; で&lt;a href=&quot;git-config&quot;&gt;のgit-設定[1]&lt;/a&gt;及び &lt;code&gt;pre-receive&lt;/code&gt; 及び &lt;code&gt;update&lt;/code&gt; に&lt;a href=&quot;githooks&quot;&gt;githooks [5] &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1b554604b5dbdc966cb242c709d8d9564fd3f48c" translate="yes" xml:space="preserve">
          <source>Pushing changes to a public repository</source>
          <target state="translated">変更を公開リポジトリにプッシュする</target>
        </trans-unit>
        <trans-unit id="eedfa4fe862b4ad2f2d3d15f8505bb4e78d4fc1a" translate="yes" xml:space="preserve">
          <source>Put all the committers in the same group, and make the repository writable by that group:</source>
          <target state="translated">全てのコミット者を同じグループに入れ、そのグループからリポジトリに書き込み可能な状態にします。</target>
        </trans-unit>
        <trans-unit id="c26397c67704ec958580d89b3087bf7a34700351" translate="yes" xml:space="preserve">
          <source>Put everything in the current head&amp;rsquo;s Documentation/ directory into &lt;code&gt;git-1.4.0-docs.zip&lt;/code&gt;, with the prefix &lt;code&gt;git-docs/&lt;/code&gt;.</source>
          <target state="translated">現在のヘッドのDocumentation /ディレクトリ内の &lt;code&gt;git-1.4.0-docs.zip&lt;/code&gt; に、接頭辞 &lt;code&gt;git-docs/&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="ea705b3a47d1cdf9261daf67230a93968f6edd0b" translate="yes" xml:space="preserve">
          <source>QUERY_STRING</source>
          <target state="translated">QUERY_STRING</target>
        </trans-unit>
        <trans-unit id="c3149be9220a8ce116523f671437212f69f45ea5" translate="yes" xml:space="preserve">
          <source>Quarantine environment</source>
          <target state="translated">検疫環境</target>
        </trans-unit>
        <trans-unit id="ec85d37cf9d9f3d10289231d732a03bb25cc011c" translate="yes" xml:space="preserve">
          <source>Query p4 for labels associated with the depot paths, and add them as tags in Git. Limited usefulness as only imports labels associated with new changelists. Deprecated.</source>
          <target state="translated">デポのパスに関連付けられたラベルを p4 に問い合わせ、それを Git のタグとして追加します。新しい変更リストに関連付けられたラベルをインポートするだけなので、有用性は限られています。非推奨。</target>
        </trans-unit>
        <trans-unit id="cb46658e95579ef7659db1b1de8bbb537b0fac1e" translate="yes" xml:space="preserve">
          <source>Quick reference guides: &lt;a href=&quot;https://github.github.com/training-kit/&quot;&gt;GitHub Cheat Sheet&lt;/a&gt; | &lt;a href=&quot;https://ndpsoftware.com/git-cheatsheet.html&quot;&gt;Visual Git Cheat Sheet&lt;/a&gt;</source>
          <target state="translated">クイックリファレンスガイド：&lt;a href=&quot;https://github.github.com/training-kit/&quot;&gt;GitHubチートシート&lt;/a&gt;| &lt;a href=&quot;https://ndpsoftware.com/git-cheatsheet.html&quot;&gt;VisualGitチートシート&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ce8d2336bc85bc6e5b624295904c32b955dda594" translate="yes" xml:space="preserve">
          <source>Quick reference guides: &lt;a href=&quot;https://github.github.com/training-kit/downloads/github-git-cheat-sheet.pdf&quot;&gt;GitHub Cheat Sheet&lt;/a&gt;&lt;small&gt;(PDF)&lt;/small&gt; | &lt;a href=&quot;https://ndpsoftware.com/git-cheatsheet.html&quot;&gt;Visual Git Cheat Sheet&lt;/a&gt;&lt;small&gt;(SVG | PNG)&lt;/small&gt;</source>
          <target state="translated">クイックリファレンスガイド：&lt;a href=&quot;https://github.github.com/training-kit/downloads/github-git-cheat-sheet.pdf&quot;&gt;GitHubチートシート&lt;/a&gt;&lt;small&gt;（PDF）&lt;/small&gt; | &lt;a href=&quot;https://ndpsoftware.com/git-cheatsheet.html&quot;&gt;Visual Gitチートシート&lt;/a&gt;&lt;small&gt;（SVG | PNG）&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3a11ac4a816649c90b2a876b8ed365a4f747816e" translate="yes" xml:space="preserve">
          <source>Quiet, suppress feedback messages.</source>
          <target state="translated">静かに、フィードバックメッセージを抑制する。</target>
        </trans-unit>
        <trans-unit id="2ac9102b0a2f3eb9abc09cf4e1c41ec0575ff1e1" translate="yes" xml:space="preserve">
          <source>Quiet, suppress feedback messages. Implies &lt;code&gt;--no-progress&lt;/code&gt;.</source>
          <target state="translated">静かに、フィードバックメッセージを抑制します。 &lt;code&gt;--no-progress&lt;/code&gt; を意味します。</target>
        </trans-unit>
        <trans-unit id="de1dab6bd571badbfbb3ddaa6f495be909332129" translate="yes" xml:space="preserve">
          <source>Quiet. If --refresh finds that the index needs an update, the default behavior is to error out. This option makes &lt;code&gt;git update-index&lt;/code&gt; continue anyway.</source>
          <target state="translated">静か。--refreshがインデックスの更新を必要とする場合、デフォルトの動作はエラーになります。このオプションは、 &lt;code&gt;git update-index&lt;/code&gt; を続行します。</target>
        </trans-unit>
        <trans-unit id="e1baedfd2936afaf34298be8c53a6f3520c17d3e" translate="yes" xml:space="preserve">
          <source>Quiet; do not warn about conflicts.</source>
          <target state="translated">静かに、紛争について警告しないでください。</target>
        </trans-unit>
        <trans-unit id="e9770de83f70890562d92f9477d5315581d69261" translate="yes" xml:space="preserve">
          <source>Quite similarly, if &lt;code&gt;core.symlinks&lt;/code&gt; configuration variable is set to &lt;code&gt;false&lt;/code&gt; (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;), symbolic links are checked out as plain files, and this command does not modify a recorded file mode from symbolic link to regular file.</source>
          <target state="translated">同様に、 &lt;code&gt;core.symlinks&lt;/code&gt; 構成変数が &lt;code&gt;false&lt;/code&gt; に設定されている場合（&lt;a href=&quot;git-config&quot;&gt;git-config [1]を&lt;/a&gt;参照）、シンボリックリンクはプレーンファイルとしてチェックアウトされ、このコマンドは記録されたファイルモードをシンボリックリンクから通常のファイルに変更しません。</target>
        </trans-unit>
        <trans-unit id="f0f61d9660842b035df0296041289cbf85b3ae28" translate="yes" xml:space="preserve">
          <source>Quote fields containing whitespace as if they were strings in C source code; i.e., surrounded by double-quotes and with backslash escapes. Use 40 &quot;0&quot; characters or the empty string to specify a zero value. To specify a missing value, omit the value and its preceding SP entirely.</source>
          <target state="translated">ホワイトスペースを含むフィールドは、C のソースコードでは文字列であるかのように引用します。ゼロ値を指定するには、40文字の「0」または空文字列を使用します。欠落した値を指定するには、その値とその前のSPを完全に省略します。</target>
        </trans-unit>
        <trans-unit id="0550aeb8801a3ad8332244f3d277c748ecb56080" translate="yes" xml:space="preserve">
          <source>Quoted aliases and quoted addresses are not supported: lines that contain a &lt;code&gt;&quot;&lt;/code&gt; symbol are ignored.</source>
          <target state="translated">引用符で囲まれたエイリアスと引用符で囲まれたアドレスはサポートされていません。 &lt;code&gt;&quot;&lt;/code&gt; 記号を含む行は無視されます。</target>
        </trans-unit>
        <trans-unit id="06576556d1ad802f247cad11ae748be47b70cd9c" translate="yes" xml:space="preserve">
          <source>R</source>
          <target state="translated">R</target>
        </trans-unit>
        <trans-unit id="38354f3564dc690008158ec27147b7718eef20da" translate="yes" xml:space="preserve">
          <source>R: renaming of a file</source>
          <target state="translated">R:ファイルの名前変更</target>
        </trans-unit>
        <trans-unit id="73ff05a9f629bff633fa7a0499495556f0f1a07f" translate="yes" xml:space="preserve">
          <source>README.html</source>
          <target state="translated">README.html</target>
        </trans-unit>
        <trans-unit id="986c96108f4514e08f8de60c616ff1d0727fd986" translate="yes" xml:space="preserve">
          <source>REMOTE_ADDR</source>
          <target state="translated">REMOTE_ADDR</target>
        </trans-unit>
        <trans-unit id="613cec3f00ac4a24def4b10bec39e10198b8d82e" translate="yes" xml:space="preserve">
          <source>REMOTE_USER</source>
          <target state="translated">REMOTE_USER</target>
        </trans-unit>
        <trans-unit id="a16e10b928e7c21c5b4ae3d47f9db3c0b6c782c3" translate="yes" xml:space="preserve">
          <source>REQUEST_METHOD</source>
          <target state="translated">REQUEST_METHOD</target>
        </trans-unit>
        <trans-unit id="697070f17a70b2490138caae401415ac7b401fbd" translate="yes" xml:space="preserve">
          <source>RFC 2822</source>
          <target state="translated">RFC2822号</target>
        </trans-unit>
        <trans-unit id="b34db1f303fd91c6e7039f452d5097c789b26cf1" translate="yes" xml:space="preserve">
          <source>Rather than checking out a branch to work on it, check out a commit for inspection and discardable experiments. This is the default behavior of &lt;code&gt;git checkout &amp;lt;commit&amp;gt;&lt;/code&gt; when &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; is not a branch name. See the &quot;DETACHED HEAD&quot; section below for details.</source>
          <target state="translated">ブランチをチェックアウトして作業するのではなく、検査と破棄可能な実験のコミットをチェックアウトします。これは、 &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; がブランチ名ではない場合の &lt;code&gt;git checkout &amp;lt;commit&amp;gt;&lt;/code&gt; のデフォルトの動作です。詳細については、以下の「デタッチヘッド」セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="4e4bfd7d1a0190903bc19000a40525c987ff7008" translate="yes" xml:space="preserve">
          <source>Raw output format</source>
          <target state="translated">生の出力形式</target>
        </trans-unit>
        <trans-unit id="7b0a88cf0ceef9e929b45fca40ecfa70b119395a" translate="yes" xml:space="preserve">
          <source>Re-author p4 changes before submitting to p4. This option requires p4 admin privileges.</source>
          <target state="translated">p4に提出する前に、p4の変更を再オーサリングします。このオプションには p4 の管理者権限が必要です。</target>
        </trans-unit>
        <trans-unit id="a3d5287f4feb36f53be9e482bea0b4f69488906a" translate="yes" xml:space="preserve">
          <source>Read &lt;a href=&quot;githooks&quot;&gt;githooks[5]&lt;/a&gt; for more details about each hook.</source>
          <target state="translated">読み取り&lt;a href=&quot;githooks&quot;&gt;githooks [5]&lt;/a&gt;各フックの詳細については。</target>
        </trans-unit>
        <trans-unit id="3c99ae2389e194940d6e9dae44358b0f59db22c3" translate="yes" xml:space="preserve">
          <source>Read a list of commits from stdin and commit them in reverse order. Only the leading sha1 is read from each line, so &lt;code&gt;git rev-list --pretty=oneline&lt;/code&gt; output can be used.</source>
          <target state="translated">stdinからコミットのリストを読み取り、逆の順序でコミットします。各行から先頭のsha1のみが読み取られるため、 &lt;code&gt;git rev-list --pretty=oneline&lt;/code&gt; 出力を使用できます。</target>
        </trans-unit>
        <trans-unit id="9a81bd113ea455376c0709dc2b5dec2fbcc3eae4" translate="yes" xml:space="preserve">
          <source>Read a packed archive (.pack) from the standard input, expanding the objects contained within and writing them into the repository in &quot;loose&quot; (one object per file) format.</source>
          <target state="translated">標準入力からパックされたアーカイブ(.pack)を読み込み、その中に含まれるオブジェクトを展開して、&quot;loose&quot; (1ファイルに1つのオブジェクト)形式でリポジトリに書き出します。</target>
        </trans-unit>
        <trans-unit id="cf4f210605880935e907e739e930d70c6c05f393" translate="yes" xml:space="preserve">
          <source>Read a patch from the standard input and compute the patch ID for it.</source>
          <target state="translated">標準入力からパッチを読み込み、そのパッチのパッチIDを計算します。</target>
        </trans-unit>
        <trans-unit id="118b284f547f2475f4692a5a06eacb1fa689da5d" translate="yes" xml:space="preserve">
          <source>Read a tar archive created by &lt;code&gt;git archive&lt;/code&gt; from the standard input and extract the commit ID stored in it. It reads only the first 1024 bytes of input, thus its runtime is not influenced by the size of the tar archive very much.</source>
          <target state="translated">&lt;code&gt;git archive&lt;/code&gt; archiveで作成されたtarアーカイブを標準入力から読み取り、そこに格納されているコミットIDを抽出します。入力の最初の1024バイトのみを読み取るため、ランタイムはtarアーカイブのサイズにあまり影響されません。</target>
        </trans-unit>
        <trans-unit id="8323be41a83f5e8edd45cebf33794d8211b9a65a" translate="yes" xml:space="preserve">
          <source>Read additional exclude patterns that apply only to the directory and its subdirectories in &amp;lt;file&amp;gt;.</source>
          <target state="translated">&amp;lt;file&amp;gt;のディレクトリとそのサブディレクトリにのみ適用される追加の除外パターンを読み取ります。</target>
        </trans-unit>
        <trans-unit id="ec538abd0ecb84f4afa31116a9fde4a7bfbfc841" translate="yes" xml:space="preserve">
          <source>Read contacts, one per line, from the standard input after exhausting contacts provided on the command-line.</source>
          <target state="translated">コマンドラインで提供されているコンタクトを使い切った後、標準入力から1行に1つのコンタクトを読み込みます。</target>
        </trans-unit>
        <trans-unit id="cc8be265c5565879cb19acef5a95bb650b329807" translate="yes" xml:space="preserve">
          <source>Read description of &lt;code&gt;%feature&lt;/code&gt; hash for detailed list, and descriptions. See also &quot;Configuring gitweb features&quot; section in &lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf[5]&lt;/a&gt;</source>
          <target state="translated">詳細なリストと説明については、 &lt;code&gt;%feature&lt;/code&gt; ハッシュの説明をお読みください。&lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf [5]の&lt;/a&gt;「gitweb機能の構成」セクションもご覧ください。</target>
        </trans-unit>
        <trans-unit id="15ad57eb2da16d3087f86e421c960f711d5a7f97" translate="yes" xml:space="preserve">
          <source>Read exclude patterns from &amp;lt;file&amp;gt;; 1 per line.</source>
          <target state="translated">&amp;lt;file&amp;gt;から除外パターンを読み取ります。1行に1つ。</target>
        </trans-unit>
        <trans-unit id="f6c76b424f91b25c9b13ee14e1604c5d3fa96f28" translate="yes" xml:space="preserve">
          <source>Read file names from the standard input, one per line, instead of from the command-line.</source>
          <target state="translated">コマンドラインからではなく、標準入力から1行に1つずつファイル名を読み込みます。</target>
        </trans-unit>
        <trans-unit id="d0b5b313182b086a1f9af39ecd4467e46faca9cf" translate="yes" xml:space="preserve">
          <source>Read index information from stdin.</source>
          <target state="translated">stdinからインデックス情報を読み込みます。</target>
        </trans-unit>
        <trans-unit id="80670c79001d8f8c9a5be5d38404bf833dac649e" translate="yes" xml:space="preserve">
          <source>Read its description.</source>
          <target state="translated">その説明を読む。</target>
        </trans-unit>
        <trans-unit id="46ab10e675175e0e453c98d42b078fb4b46c2856" translate="yes" xml:space="preserve">
          <source>Read pathnames from the standard input, one per line, instead of from the command-line.</source>
          <target state="translated">コマンドラインからではなく、標準入力から1行に1つずつパス名を読み込みます。</target>
        </trans-unit>
        <trans-unit id="e51b79a68429169e8d905bac10a875d5d0bc0bbc" translate="yes" xml:space="preserve">
          <source>Read patterns from &amp;lt;file&amp;gt;, one per line.</source>
          <target state="translated">&amp;lt;file&amp;gt;からパターンを1行に1つ読み取ります。</target>
        </trans-unit>
        <trans-unit id="742eb52188cd86d4cd26b3ac213de9e008afe01b" translate="yes" xml:space="preserve">
          <source>Read refspecs, one per line, from stdin in addition to those provided as arguments. The &quot;tag &amp;lt;name&amp;gt;&quot; format is not supported.</source>
          <target state="translated">引数として提供されたものに加えて、stdinからrefspecsを1行に1つずつ読み取ります。「タグ&amp;lt;名前&amp;gt;」形式はサポートされていません。</target>
        </trans-unit>
        <trans-unit id="fed49b353bd2e8ef2071f098ea90e8175a16e2cc" translate="yes" xml:space="preserve">
          <source>Read text, such as commit messages, notes, tags and branch descriptions, from the standard input and clean it in the manner used by Git.</source>
          <target state="translated">コミットメッセージやノート、タグ、ブランチの説明などのテキストを標準入力から読み込んで、Gitで使われている方法でクリーンアップします。</target>
        </trans-unit>
        <trans-unit id="eceb0ad0aa215d85bc1cfa0886bd096a3daed30d" translate="yes" xml:space="preserve">
          <source>Read the &lt;code&gt;.idx&lt;/code&gt; file for a Git packfile (created with &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects[1]&lt;/a&gt; or &lt;a href=&quot;git-index-pack&quot;&gt;git-index-pack[1]&lt;/a&gt;) from the standard input, and dump its contents. The output consists of one object per line, with each line containing two or three space-separated columns:</source>
          <target state="translated">標準入力からGit packfile（&lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects [1]&lt;/a&gt;または&lt;a href=&quot;git-index-pack&quot;&gt;git-index-pack [1]で作成&lt;/a&gt;）の &lt;code&gt;.idx&lt;/code&gt; ファイルを読み取り、その内容をダンプします。出力は行ごとに1つのオブジェクトで構成され、各行にはスペースで区切られた2つまたは3つの列が含まれます。</target>
        </trans-unit>
        <trans-unit id="ddd6a34883963a795d5ebc22563eef2cf30acd2b" translate="yes" xml:space="preserve">
          <source>Read the NUL-terminated &lt;code&gt;ls-tree -z&lt;/code&gt; output instead.</source>
          <target state="translated">代わりに、NULで終了する &lt;code&gt;ls-tree -z&lt;/code&gt; 出力を読んでください。</target>
        </trans-unit>
        <trans-unit id="3ea8fc0021add956f340de030bf6e8165a69896f" translate="yes" xml:space="preserve">
          <source>Read the commit log message from the given file. Use &lt;code&gt;-&lt;/code&gt; to read from the standard input. This can be given more than once and the content of each file becomes its own paragraph.</source>
          <target state="translated">指定されたファイルからコミットログメッセージを読み取ります。 &lt;code&gt;-&lt;/code&gt; を使用して、標準入力から読み取ります。これは複数回指定でき、各ファイルの内容は独自の段落になります。</target>
        </trans-unit>
        <trans-unit id="507fdedba9f69c5efbd0e8cf829abe30d4a7a120" translate="yes" xml:space="preserve">
          <source>Read the commit message to be used for the merge commit (in case one is created).</source>
          <target state="translated">マージコミットに使用するコミットメッセージを読み込みます (コミットが作成された場合)。</target>
        </trans-unit>
        <trans-unit id="9362ea89cc38e10989edc212ebc0bf489cc001f5" translate="yes" xml:space="preserve">
          <source>Read the commit-graph file and verify its contents against the object database. Used to check for corrupted data.</source>
          <target state="translated">コミットグラフファイルを読み込んで、その内容をオブジェクトデータベースと照合します。破損したデータのチェックに使用します。</target>
        </trans-unit>
        <trans-unit id="9e4092c6ffe69dbb6a8bf7641feea7e173111c93" translate="yes" xml:space="preserve">
          <source>Read the object from standard input instead of from a file.</source>
          <target state="translated">ファイルからではなく、標準入力からオブジェクトを読み込みます。</target>
        </trans-unit>
        <trans-unit id="16a5e93c91809d39b015e5b24abf65dd6438e038" translate="yes" xml:space="preserve">
          <source>Read the revision arguments from the standard input, instead of individual object names. The revision arguments are processed the same way as &lt;code&gt;git rev-list&lt;/code&gt; with the &lt;code&gt;--objects&lt;/code&gt; flag uses its &lt;code&gt;commit&lt;/code&gt; arguments to build the list of objects it outputs. The objects on the resulting list are packed. Besides revisions, &lt;code&gt;--not&lt;/code&gt; or &lt;code&gt;--shallow &amp;lt;SHA-1&amp;gt;&lt;/code&gt; lines are also accepted.</source>
          <target state="translated">個々のオブジェクト名ではなく、標準入力からリビジョン引数を読み取ります。リビジョン引数は、 &lt;code&gt;git rev-list&lt;/code&gt; &lt;code&gt;--objects&lt;/code&gt; フラグ &lt;code&gt;commit&lt;/code&gt; 指定したgit rev-listがコミット引数を使用して出力するオブジェクトのリストを作成するのと同じ方法で処理されます。結果のリストのオブジェクトはパックされます。リビジョンのほかに、 &lt;code&gt;--not&lt;/code&gt; または &lt;code&gt;--shallow &amp;lt;SHA-1&amp;gt;&lt;/code&gt; 行も受け入れられます。</target>
        </trans-unit>
        <trans-unit id="7f840070f6a18eee1c3de888e1eec475edd1cfa4" translate="yes" xml:space="preserve">
          <source>Read, modify and delete symbolic refs</source>
          <target state="translated">シンボリック参照の読み取り、変更、削除</target>
        </trans-unit>
        <trans-unit id="356b6782c6512845fae8c2da14d692d4da174e8d" translate="yes" xml:space="preserve">
          <source>Reading from a named tree</source>
          <target state="translated">名前のついた木から読み取る</target>
        </trans-unit>
        <trans-unit id="7405316147ea4906cae4c658957705537066053b" translate="yes" xml:space="preserve">
          <source>Reading from the active commit</source>
          <target state="translated">アクティブなコミットからの読み込み</target>
        </trans-unit>
        <trans-unit id="d5df5dafb2331c4e6af80c2f8a0c26176a288dab" translate="yes" xml:space="preserve">
          <source>Reads a packed archive (.pack) from the specified file, and builds a pack index file (.idx) for it. The packed archive together with the pack index can then be placed in the objects/pack/ directory of a Git repository.</source>
          <target state="translated">指定したファイルからパックされたアーカイブ (.pack)を読み込み、パックインデックスファイル (.idx)を作成します。パックされたアーカイブをパックインデックスとともに Git リポジトリの objects/pack/ディレクトリに配置することができます。</target>
        </trans-unit>
        <trans-unit id="db9526754c129c75f60022c8e34e8db9d6855fac" translate="yes" xml:space="preserve">
          <source>Reads a single e-mail message from the standard input, and writes the commit log message in &amp;lt;msg&amp;gt; file, and the patches in &amp;lt;patch&amp;gt; file. The author name, e-mail and e-mail subject are written out to the standard output to be used by &lt;code&gt;git am&lt;/code&gt; to create a commit. It is usually not necessary to use this command directly. See &lt;a href=&quot;git-am&quot;&gt;git-am[1]&lt;/a&gt; instead.</source>
          <target state="translated">標準入力から単一の電子メールメッセージを読み取り、コミットログメッセージを&amp;lt;msg&amp;gt;ファイルに、パッチを&amp;lt;patch&amp;gt;ファイルに書き込みます。著者名、電子メール、電子メールの件名は標準出力に書き出され、 &lt;code&gt;git am&lt;/code&gt; がコミットを作成するために使用されます。通常、このコマンドを直接使用する必要はありません。代わりに&lt;a href=&quot;git-am&quot;&gt;git-am [1]を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="91a54b1043f609f02e31617fc1ed3b549e2a4394" translate="yes" xml:space="preserve">
          <source>Reads a tag contents on standard input and creates a tag object that can also be used to sign other objects.</source>
          <target state="translated">標準入力でタグの内容を読み込み、他のオブジェクトへの署名にも使用できるタグオブジェクトを作成します。</target>
        </trans-unit>
        <trans-unit id="1988117fbbba1a52186c7874f472ad690b235ffc" translate="yes" xml:space="preserve">
          <source>Reads given idx file for packed Git archive created with the &lt;code&gt;git pack-objects&lt;/code&gt; command and verifies idx file and the corresponding pack file.</source>
          <target state="translated">&lt;code&gt;git pack-objects&lt;/code&gt; コマンドで作成されたパックされたGitアーカイブの指定されたidxファイルを読み取り、idxファイルと対応するパックファイルを確認します。</target>
        </trans-unit>
        <trans-unit id="befcf9896fcbea450fd9bee257995fb96286ee5a" translate="yes" xml:space="preserve">
          <source>Reads list of objects from the standard input, and writes either one or more packed archives with the specified base-name to disk, or a packed archive to the standard output.</source>
          <target state="translated">標準入力からオブジェクトのリストを読み込み、指定されたベース名を持つ1つ以上のパックされたアーカイブをディスクに書き込むか、パックされたアーカイブを標準出力に書き出します。</target>
        </trans-unit>
        <trans-unit id="d7a9d36099b1ff6ac5bd15dd14e16c269b0389b8" translate="yes" xml:space="preserve">
          <source>Reads standard input in non-recursive &lt;code&gt;ls-tree&lt;/code&gt; output format, and creates a tree object. The order of the tree entries is normalized by mktree so pre-sorting the input is not required. The object name of the tree object built is written to the standard output.</source>
          <target state="translated">非再帰的な &lt;code&gt;ls-tree&lt;/code&gt; 出力形式で標準入力を読み取り、ツリーオブジェクトを作成します。ツリーエントリの順序はmktreeによって正規化されるため、入力を事前にソートする必要はありません。構築されたツリーオブジェクトのオブジェクト名が標準出力に書き込まれます。</target>
        </trans-unit>
        <trans-unit id="768de97d393241af581368bdb5b60add6bc4daa9" translate="yes" xml:space="preserve">
          <source>Reads the supplied diff output (i.e. &quot;a patch&quot;) and applies it to files. When running from a subdirectory in a repository, patched paths outside the directory are ignored. With the &lt;code&gt;--index&lt;/code&gt; option the patch is also applied to the index, and with the &lt;code&gt;--cached&lt;/code&gt; option the patch is only applied to the index. Without these options, the command applies the patch only to files, and does not require them to be in a Git repository.</source>
          <target state="translated">提供されたdiff出力（つまり「パッチ」）を読み取り、それをファイルに適用します。リポジトリ内のサブディレクトリから実行する場合、ディレクトリ外のパッチが適用されたパスは無視されます。 &lt;code&gt;--index&lt;/code&gt; オプションのパッチは、インデックスに適用され、及びで &lt;code&gt;--cached&lt;/code&gt; オプションのパッチは、インデックスのみに適用されます。これらのオプションがない場合、コマンドはパッチをファイルにのみ適用し、Gitリポジトリーにある必要はありません。</target>
        </trans-unit>
        <trans-unit id="e5173f184d3064943fb31ef4b9c751d1119e1685" translate="yes" xml:space="preserve">
          <source>Reads the tree information given by &amp;lt;tree-ish&amp;gt; into the index, but does not actually &lt;strong&gt;update&lt;/strong&gt; any of the files it &quot;caches&quot;. (see: &lt;a href=&quot;git-checkout-index&quot;&gt;git-checkout-index[1]&lt;/a&gt;)</source>
          <target state="translated">&amp;lt;tree-ish&amp;gt;によって与えられたツリー情報をインデックスに読み込みますが、実際に「キャッシュ」するファイルは&lt;strong&gt;更新&lt;/strong&gt;しません。（参照：&lt;a href=&quot;git-checkout-index&quot;&gt;git-checkout-index [1]&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="e432986c9c0bf1c0563c54e4546289b72e2b8f05" translate="yes" xml:space="preserve">
          <source>Reads three tree-ish, and output trivial merge results and conflicting stages to the standard output. This is similar to what three-way &lt;code&gt;git read-tree -m&lt;/code&gt; does, but instead of storing the results in the index, the command outputs the entries to the standard output.</source>
          <target state="translated">3つのツリーのような結果を読み取り、些細なマージ結果と競合するステージを標準出力に出力します。これは、3方向の &lt;code&gt;git read-tree -m&lt;/code&gt; と同じですが、結果をインデックスに保存する代わりに、コマンドはエントリを標準出力に出力します。</target>
        </trans-unit>
        <trans-unit id="47a594db00e7ab66962cb542d6f07d66a982ad3f" translate="yes" xml:space="preserve">
          <source>Reads tree information into the index</source>
          <target state="translated">ツリー情報をインデックスに読み込みます。</target>
        </trans-unit>
        <trans-unit id="cd01faf1694de2fbbfa60db859fa0d8c2fb7a091" translate="yes" xml:space="preserve">
          <source>Reapply all clean cherry-picks of any upstream commit instead of preemptively dropping them. (If these commits then become empty after rebasing, because they contain a subset of already upstream changes, the behavior towards them is controlled by the &lt;code&gt;--empty&lt;/code&gt; flag.)</source>
          <target state="translated">先制的にドロップするのではなく、アップストリームコミットのすべてのクリーンなチェリーピックを再適用します。（これらのコミットがリベース後に空になった場合、それらにはすでにアップストリームの変更のサブセットが含まれているため、それらに対する動作は &lt;code&gt;--empty&lt;/code&gt; フラグによって制御されます。）</target>
        </trans-unit>
        <trans-unit id="209b43abaea4b5ac5dbb8b759ed99ebfaf6f9172" translate="yes" xml:space="preserve">
          <source>Reapply commits on top of another base tip</source>
          <target state="translated">コミットを別のベースチップの上に再適用する</target>
        </trans-unit>
        <trans-unit id="b5f89f19a4f1bfbd626812410183459baf015069" translate="yes" xml:space="preserve">
          <source>Reapply the sparsity pattern rules to paths in the working tree. Commands like merge or rebase can materialize paths to do their work (e.g. in order to show you a conflict), and other sparse-checkout commands might fail to sparsify an individual file (e.g. because it has unstaged changes or conflicts). In such cases, it can make sense to run &lt;code&gt;git sparse-checkout reapply&lt;/code&gt; later after cleaning up affected paths (e.g. resolving conflicts, undoing or committing changes, etc.).</source>
          <target state="translated">スパースパターンルールを作業ツリーのパスに再適用します。マージやリベースなどのコマンドは、作業を行うためのパスを具体化でき（たとえば、競合を表示するため）、他のスパースチェックアウトコマンドは、個々のファイルをスパース化できない場合があります（たとえば、ステージングされていない変更や競合があるため）。このような場合、影響を受けるパスをクリーンアップした後（たとえば、競合の解決、変更の取り消しまたはコミットなど）、後で &lt;code&gt;git sparse-checkout reapply&lt;/code&gt; することは理にかなっています。</target>
        </trans-unit>
        <trans-unit id="95695a29b19740f8f73c24fedd25acfa8a46012d" translate="yes" xml:space="preserve">
          <source>Rebase</source>
          <target state="translated">Rebase</target>
        </trans-unit>
        <trans-unit id="f805426f874c522ca8e3397a261d025324269dce" translate="yes" xml:space="preserve">
          <source>Rebase all commits reachable from &amp;lt;branch&amp;gt;, instead of limiting them with an &amp;lt;upstream&amp;gt;. This allows you to rebase the root commit(s) on a branch. When used with --onto, it will skip changes already contained in &amp;lt;newbase&amp;gt; (instead of &amp;lt;upstream&amp;gt;) whereas without --onto it will operate on every change. When used together with both --onto and --preserve-merges, &lt;code&gt;all&lt;/code&gt; root commits will be rewritten to have &amp;lt;newbase&amp;gt; as parent instead.</source>
          <target state="translated">&amp;lt;upstream&amp;gt;で制限するのではなく、&amp;lt;branch&amp;gt;から到達可能なすべてのコミットをリベースします。これにより、ブランチのルートコミットをリベースできます。--ontoとともに使用すると、（&amp;lt;upstream&amp;gt;ではなく）&amp;lt;newbase&amp;gt;に既に含まれている変更をスキップしますが、-ontoを使用しない場合は、すべての変更に対して動作します。--ontoと--preserve-mergesの両方と一緒に使用すると、 &lt;code&gt;all&lt;/code&gt; ルートコミットが書き直され、代わりに&amp;lt;newbase&amp;gt;が親になります。</target>
        </trans-unit>
        <trans-unit id="e5565e2c078bf46f769d916c78f2140677ea9bef" translate="yes" xml:space="preserve">
          <source>Rebase options</source>
          <target state="translated">リベースオプション</target>
        </trans-unit>
        <trans-unit id="716069514beaa612afd8a844f284c8d0a6aabce4" translate="yes" xml:space="preserve">
          <source>Rebase vs. pull/merge</source>
          <target state="translated">リベースとプル/マージ</target>
        </trans-unit>
        <trans-unit id="5e20f7eeaec14e3dc573b7394eb6cd8341f1bca1" translate="yes" xml:space="preserve">
          <source>Rebase your current HEAD on the last commit you want to retain as-is. For example, if you want to reorder the last 5 commits, use:</source>
          <target state="translated">現在の HEAD を、そのまま保持したい最後のコミットにリベースします。例えば、最後の5つのコミットを並べ替えたい場合は、次のようにします。</target>
        </trans-unit>
        <trans-unit id="7170c51391b558eaee43fbe3f7e40861483475fb" translate="yes" xml:space="preserve">
          <source>Rebasing (or any other form of rewriting) a branch that others have based work on is a bad idea: anyone downstream of it is forced to manually fix their history. This section explains how to do the fix from the downstream&amp;rsquo;s point of view. The real fix, however, would be to avoid rebasing the upstream in the first place.</source>
          <target state="translated">他の人が作業に基づいて作成したブランチのリベース（または他の形式の書き換え）は悪い考えです。その下流の誰もが手動で履歴を修正する必要があります。このセクションでは、ダウンストリームの観点から修正を行う方法について説明します。ただし、本当の解決策は、そもそもアップストリームのリベースを回避することです。</target>
        </trans-unit>
        <trans-unit id="8f0767f1f4e33ddf301ed23c7f2cab0332acde8d" translate="yes" xml:space="preserve">
          <source>Rebasing interactively means that you have a chance to edit the commits which are rebased. You can reorder the commits, and you can remove them (weeding out bad or otherwise unwanted patches).</source>
          <target state="translated">対話的にリベースするということは、リベースされたコミットを編集する機会があるということです。コミットを並べ替えたり、削除したり (悪いパッチや不要なパッチを取り除く)することができます。</target>
        </trans-unit>
        <trans-unit id="451ba45ef5ba504d79efe1ccb8ef4e6b541d4b90" translate="yes" xml:space="preserve">
          <source>Rebasing merges</source>
          <target state="translated">リベースマージ</target>
        </trans-unit>
        <trans-unit id="f41810dd94a2ab482398f10cf85665624d62733a" translate="yes" xml:space="preserve">
          <source>Recall that merge commits may have more than one parent; by default, &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;~&lt;/code&gt; follow the first parent listed in the commit, but you can also choose:</source>
          <target state="translated">マージコミットには複数の親が含まれる場合があることを思い出してください。デフォルトでは、 &lt;code&gt;^&lt;/code&gt; と &lt;code&gt;~&lt;/code&gt; は、コミットにリストされている最初の親の後に続きますが、以下を選択することもできます。</target>
        </trans-unit>
        <trans-unit id="b37c74948935714b7fd73afa3de16cd064ee51d6" translate="yes" xml:space="preserve">
          <source>Recall that the commit which will be committed after we resolve this conflict will have two parents instead of the usual one: one parent will be HEAD, the tip of the current branch; the other will be the tip of the other branch, which is stored temporarily in MERGE_HEAD.</source>
          <target state="translated">この衝突を解決した後にコミットされるコミットは、通常の親の代わりに二つの親を持つことを覚えておいてください:一つの親は現在のブランチの先端である HEAD になり、もう一つの親は他のブランチの先端になります。</target>
        </trans-unit>
        <trans-unit id="9f6cd666ff59558e35fc1e4987f55228a4aa839c" translate="yes" xml:space="preserve">
          <source>Receive missing objects from another repository</source>
          <target state="translated">他のリポジトリから欠落しているオブジェクトを受け取る</target>
        </trans-unit>
        <trans-unit id="3a1414f04e5ec5736bdcd32788841a475c616871" translate="yes" xml:space="preserve">
          <source>Receive what is pushed into the repository</source>
          <target state="translated">リポジトリにプッシュされたものを受け取る</target>
        </trans-unit>
        <trans-unit id="ca8f48326e259b3e6bb0b952b7bb30d324f93b41" translate="yes" xml:space="preserve">
          <source>Recipe: Copy maint</source>
          <target state="translated">レシピです。コピーメイン</target>
        </trans-unit>
        <trans-unit id="53d4283d5e8f18dd173ab180112f372c62ec5838" translate="yes" xml:space="preserve">
          <source>Recipe: Push/pull: Merging remote topics</source>
          <target state="translated">レシピです。プッシュ/プル。リモートのトピックをマージする</target>
        </trans-unit>
        <trans-unit id="1f8640f7861cc46b56a1e4b42e9ca596b559f6db" translate="yes" xml:space="preserve">
          <source>Recipe: Push/pull: Publishing branches/topics</source>
          <target state="translated">レシピです。プッシュ/プル。出版のブランチ/トピック</target>
        </trans-unit>
        <trans-unit id="3a17d2c389fe13fb57af10dbacfb6b3db024c7c4" translate="yes" xml:space="preserve">
          <source>Recipe: Push/pull: Staying up to date</source>
          <target state="translated">レシピです。プッシュ/プル。最新の状態を維持する</target>
        </trans-unit>
        <trans-unit id="02b6d43b8510b59229854c014a4620861f29d737" translate="yes" xml:space="preserve">
          <source>Recipe: Release tagging</source>
          <target state="translated">レシピです。タグの解除</target>
        </trans-unit>
        <trans-unit id="9d28e02794d321eb00b6d5b97832a596837552b2" translate="yes" xml:space="preserve">
          <source>Recipe: Rewind and rebuild next</source>
          <target state="translated">レシピ。巻き戻しと次の再構築</target>
        </trans-unit>
        <trans-unit id="f8152ab6d8ec6437faa103dde674cb065aa68613" translate="yes" xml:space="preserve">
          <source>Recipe: Update maint to new release</source>
          <target state="translated">レシピです。メインを新しいリリースに更新します。</target>
        </trans-unit>
        <trans-unit id="29ee8bda8dd5e0f017624c7f75aa875a53804d32" translate="yes" xml:space="preserve">
          <source>Recipe: Verify &lt;em&gt;master&lt;/em&gt; is a superset of &lt;em&gt;maint&lt;/em&gt;</source>
          <target state="translated">レシピ：&lt;em&gt;マスター&lt;/em&gt;が&lt;em&gt;メイントの&lt;/em&gt;スーパーセットであることを&lt;em&gt;確認する&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ffd09f97e74a882a55504c37b0826f564e6b1346" translate="yes" xml:space="preserve">
          <source>Recipe: format-patch/am: Importing patches</source>
          <target state="translated">レシピ:format-patch/am.パッチのインポート</target>
        </trans-unit>
        <trans-unit id="363c9c30e4fafba7e8fc9192a52c83213c41b8ac" translate="yes" xml:space="preserve">
          <source>Recipe: format-patch/am: Keeping topics up to date</source>
          <target state="translated">レシピ:format-patch/am.トピックを最新の状態に保つ</target>
        </trans-unit>
        <trans-unit id="677a69c96c088fbfbe55531cae388f0a94e79290" translate="yes" xml:space="preserve">
          <source>Recipe: format-patch/am: Publishing branches/topics</source>
          <target state="translated">レシピ:format-patch/am.出版ブランチ/トピック</target>
        </trans-unit>
        <trans-unit id="7c405acad54185184a3b50d9aee58d7a13bab6ed" translate="yes" xml:space="preserve">
          <source>Recompress, remove unused cruft:</source>
          <target state="translated">再圧縮して、使われていないゴミを取り除きます。</target>
        </trans-unit>
        <trans-unit id="257831ab2bd13a64966a7f962a9574ea39ef3108" translate="yes" xml:space="preserve">
          <source>Record changes to the repository</source>
          <target state="translated">リポジトリへの変更を記録する</target>
        </trans-unit>
        <trans-unit id="13168b3a0cbb28fba7cf06c3c640480d4de874bc" translate="yes" xml:space="preserve">
          <source>Record only the fact that the path will be added later. An entry for the path is placed in the index with no content. This is useful for, among other things, showing the unstaged content of such files with &lt;code&gt;git diff&lt;/code&gt; and committing them with &lt;code&gt;git commit
-a&lt;/code&gt;.</source>
          <target state="translated">パスが後で追加されることだけを記録します。パスのエントリがコンテンツなしでインデックスに配置されます。これは、とりわけ、そのようなファイルのステージされていないコンテンツを &lt;code&gt;git diff&lt;/code&gt; で表示し、 &lt;code&gt;git commit -a&lt;/code&gt; 役立ちます。</target>
        </trans-unit>
        <trans-unit id="908f8c6524a9d1fb52d4fa427c4917cc570c6355" translate="yes" xml:space="preserve">
          <source>Record that a mark refers to a given object without first creating any new object.</source>
          <target state="translated">最初に新しいオブジェクトを作成することなく、マークが与えられたオブジェクトを参照していることを記録します。</target>
        </trans-unit>
        <trans-unit id="59ee078874bbbc459021c0c530f38bc7aaf471b2" translate="yes" xml:space="preserve">
          <source>Record that a mark refers to a given object without first creating any new object. Using --import-marks and referring to missing marks will cause fast-import to fail, so aliases can provide a way to set otherwise pruned commits to a valid value (e.g. the nearest non-pruned ancestor).</source>
          <target state="translated">マークが与えられたオブジェクトを参照していることを記録します。そのため、エイリアスを使うことで、剪定されていないコミットを有効な値に設定する方法を提供することができます (例えば、剪定されていない一番近い先祖)。</target>
        </trans-unit>
        <trans-unit id="d6adcb873ab9c7cd434052b29bbda78059575713" translate="yes" xml:space="preserve">
          <source>Record the base tree information to identify the state the patch series applies to. See the BASE TREE INFORMATION section below for details. If &amp;lt;commit&amp;gt; is &quot;auto&quot;, a base commit is automatically chosen. The &lt;code&gt;--no-base&lt;/code&gt; option overrides a &lt;code&gt;format.useAutoBase&lt;/code&gt; configuration.</source>
          <target state="translated">ベースツリー情報を記録して、パッチシリーズが適用される状態を特定します。詳細については、以下の「基本ツリー情報」セクションを参照してください。&amp;lt;commit&amp;gt;が &quot;auto&quot;の場合、ベースコミットが自動的に選択されます。 &lt;code&gt;--no-base&lt;/code&gt; オプションが優先されます &lt;code&gt;format.useAutoBase&lt;/code&gt; の設定を。</target>
        </trans-unit>
        <trans-unit id="1df60f45066883b70333fa04c8ca0ea0ac9a963e" translate="yes" xml:space="preserve">
          <source>Record the pristine state as the first commit in the history.</source>
          <target state="translated">原始状態を史上初のコミットとして記録する。</target>
        </trans-unit>
        <trans-unit id="2779532bfc36fb35edea59aae8e6a7c58766f0fd" translate="yes" xml:space="preserve">
          <source>Records all changes made to the branch tip named &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; という名前のブランチチップに加えられたすべての変更を記録します。</target>
        </trans-unit>
        <trans-unit id="e26cb9a4392a1984a3c8c89ac8ba4d1939bfa972" translate="yes" xml:space="preserve">
          <source>Records all changes made to the tag named &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; という名前のタグに加えられたすべての変更を記録します。</target>
        </trans-unit>
        <trans-unit id="b4426300ccfff51ab94cf09d14eb70cb666bb2d4" translate="yes" xml:space="preserve">
          <source>Records of changes made to refs are stored in this directory. See &lt;a href=&quot;git-update-ref&quot;&gt;git-update-ref[1]&lt;/a&gt; for more information. This directory is ignored (except logs/HEAD) if $GIT_COMMON_DIR is set and &quot;$GIT_COMMON_DIR/logs&quot; will be used instead.</source>
          <target state="translated">refに加えられた変更の記録は、このディレクトリに保存されます。詳細については、&lt;a href=&quot;git-update-ref&quot;&gt;git-update-ref [1]&lt;/a&gt;を参照してください。$ GIT_COMMON_DIRが設定されており、代わりに「$ GIT_COMMON_DIR / logs」が使用される場合、このディレクトリは無視されます（logs / HEADを除く）。</target>
        </trans-unit>
        <trans-unit id="4dfb1dccefe8c5960e96ace8700ff3694a2adfa8" translate="yes" xml:space="preserve">
          <source>Records of conflicted merge you have not resolved are kept for this many days when &lt;code&gt;git rerere gc&lt;/code&gt; is run. You can also use more human-readable &quot;1.month.ago&quot;, etc. The default is 15 days. See &lt;a href=&quot;git-rerere&quot;&gt;git-rerere[1]&lt;/a&gt;.</source>
          <target state="translated">解決していない競合したマージのレコードは、 &lt;code&gt;git rerere gc&lt;/code&gt; が実行されるこの数日間保持されます。人間が読める「1.month.ago」などを使用することもできます。デフォルトは15日です。&lt;a href=&quot;git-rerere&quot;&gt;git-rerere [1]を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="0041a23358783dc658fb86af817bd1e3c4818754" translate="yes" xml:space="preserve">
          <source>Records of conflicted merge you resolved earlier are kept for this many days when &lt;code&gt;git rerere gc&lt;/code&gt; is run. You can also use more human-readable &quot;1.month.ago&quot;, etc. The default is 60 days. See &lt;a href=&quot;git-rerere&quot;&gt;git-rerere[1]&lt;/a&gt;.</source>
          <target state="translated">以前に解決した競合するマージの記録は、 &lt;code&gt;git rerere gc&lt;/code&gt; が実行されるこの数日間保持されます。人間が読める「1.month.ago」などを使用することもできます。デフォルトは60日です。&lt;a href=&quot;git-rerere&quot;&gt;git-rerere [1]を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="6f27ef1289a3377cd529d96e1d59f394c9d2e51b" translate="yes" xml:space="preserve">
          <source>Recovering from repository corruption</source>
          <target state="translated">リポジトリの破損からの復旧</target>
        </trans-unit>
        <trans-unit id="45b084fa0ec2bcf4d8887dcc1ed74808ce39dd65" translate="yes" xml:space="preserve">
          <source>Recovering from upstream rebase</source>
          <target state="translated">上流のリベースからの回復</target>
        </trans-unit>
        <trans-unit id="a2b2e17c2700a078248ea4a8793fdeb963f1e774" translate="yes" xml:space="preserve">
          <source>Recovering lost changes</source>
          <target state="translated">失われた変化を回復する</target>
        </trans-unit>
        <trans-unit id="c9f9ed2d4080ff53397fc95e602ba0c0a8018150" translate="yes" xml:space="preserve">
          <source>Recovering stash entries that were cleared/dropped erroneously</source>
          <target state="translated">誤ってクリア/ドロップされたスタッシュエントリの復元</target>
        </trans-unit>
        <trans-unit id="07417b29bf5742eeb9def793a7c341803a4ae6cf" translate="yes" xml:space="preserve">
          <source>Recurse into sub-trees.</source>
          <target state="translated">サブツリーに再帰する。</target>
        </trans-unit>
        <trans-unit id="a6bbb82b51ea9a73ca0b0838d88a88a52f49ad15" translate="yes" xml:space="preserve">
          <source>Recursively calls ls-files on each active submodule in the repository. Currently there is only support for the --cached mode.</source>
          <target state="translated">リポジトリ内の各アクティブなサブモジュールに対して ls-file を再帰的に呼び出します。現在は --cached モードしかサポートされていません。</target>
        </trans-unit>
        <trans-unit id="b71ca4a78b12182052bd243bd7fb2b5a8710c342" translate="yes" xml:space="preserve">
          <source>Recursively calls ls-files on each submodule in the repository. Currently there is only support for the --cached mode.</source>
          <target state="translated">リポジトリ内の各サブモジュール上で ls-file を再帰的に呼び出します。現在は --cached モードしかサポートされていません。</target>
        </trans-unit>
        <trans-unit id="9594ad54e61dba1e097011c1262a0e12523ac73c" translate="yes" xml:space="preserve">
          <source>Recursively copies an existing file or subdirectory to a different location within the branch. The existing file or directory must exist. If the destination exists it will be completely replaced by the content copied from the source.</source>
          <target state="translated">既存のファイルやサブディレクトリを、ブランチ内の別の場所に再帰的にコピーします。既存のファイルまたはディレクトリが存在しなければなりません。コピー先が存在する場合は、コピー元からコピーした内容で完全に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="784c487e0b0ebf6146a806df2269e12c1733d014" translate="yes" xml:space="preserve">
          <source>Recursively finds and lists the svn:ignore property on directories. The output is suitable for appending to the $GIT_DIR/info/exclude file.</source>
          <target state="translated">ディレクトリの svn:ignore プロパティを再帰的に検索し、リストアップします。出力は $GIT_DIR/info/exclude ファイルに追加するのに適しています。</target>
        </trans-unit>
        <trans-unit id="8a1182cccab09515529f5c8d920459a7ff2c3ff2" translate="yes" xml:space="preserve">
          <source>Recursively finds the svn:ignore property on directories and creates matching .gitignore files. The resulting files are staged to be committed, but are not committed. Use -r/--revision to refer to a specific revision.</source>
          <target state="translated">ディレクトリの svn:ignore プロパティを再帰的に見つけ、一致する .gitignore ファイルを作成します。作成されたファイルはコミットされるようにステージングされますが、コミットされることはありません。特定のリビジョンを参照するには -r/--revision を使用します。</target>
        </trans-unit>
        <trans-unit id="8cf2dd32a75d92cd5c31b8e357091014ef76d06b" translate="yes" xml:space="preserve">
          <source>Recursively search in each submodule that has been initialized and checked out in the repository. When used in combination with the &amp;lt;tree&amp;gt; option the prefix of all submodule output will be the name of the parent project&amp;rsquo;s &amp;lt;tree&amp;gt; object.</source>
          <target state="translated">初期化され、リポジトリでチェックアウトされた各サブモジュールを再帰的に検索します。&amp;lt;tree&amp;gt;オプションと組み合わせて使用​​すると、すべてのサブモジュール出力のプレフィックスは、親プロジェクトの&amp;lt;tree&amp;gt;オブジェクトの名前になります。</target>
        </trans-unit>
        <trans-unit id="c91703d456763a97cd487b639be20f9ff2ca1d31" translate="yes" xml:space="preserve">
          <source>Recursively search in each submodule that is active and checked out in the repository. When used in combination with the &amp;lt;tree&amp;gt; option the prefix of all submodule output will be the name of the parent project&amp;rsquo;s &amp;lt;tree&amp;gt; object. This option has no effect if &lt;code&gt;--no-index&lt;/code&gt; is given.</source>
          <target state="translated">アクティブでリポジトリにチェックアウトされている各サブモジュールを再帰的に検索します。&amp;lt;tree&amp;gt;オプションと組み合わせて使用​​すると、すべてのサブモジュール出力のプレフィックスは、親プロジェクトの&amp;lt;tree&amp;gt;オブジェクトの名前になります。 &lt;code&gt;--no-index&lt;/code&gt; が指定されている場合、このオプションは効果がありません。</target>
        </trans-unit>
        <trans-unit id="c70c81b356beafd0eeca89b16d9fdcb5f7371848" translate="yes" xml:space="preserve">
          <source>Redirection to a file (&lt;code&gt;/path/name&lt;/code&gt;) or pipe (&lt;code&gt;|command&lt;/code&gt;) is not supported.</source>
          <target state="translated">ファイル（ &lt;code&gt;/path/name&lt;/code&gt; ）またはパイプ（ &lt;code&gt;|command&lt;/code&gt; ）へのリダイレクトはサポートされていません。</target>
        </trans-unit>
        <trans-unit id="89381280eddd66ed8601a4438d83804ded19d6ef" translate="yes" xml:space="preserve">
          <source>Reencoding content requires resources that might slow down certain Git operations (e.g &lt;code&gt;git checkout&lt;/code&gt; or &lt;code&gt;git add&lt;/code&gt;).</source>
          <target state="translated">コンテンツを再エンコードするには、特定のGit操作を遅くする可能性のあるリソースが必要です（例： &lt;code&gt;git checkout&lt;/code&gt; や &lt;code&gt;git add&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="4d5f4726578da60b5802012abfa0452d24f12476" translate="yes" xml:space="preserve">
          <source>Reencoding content to non-UTF encodings can cause errors as the conversion might not be UTF-8 round trip safe. If you suspect your encoding to not be round trip safe, then add it to &lt;code&gt;core.checkRoundtripEncoding&lt;/code&gt; to make Git check the round trip encoding (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;). SHIFT-JIS (Japanese character set) is known to have round trip issues with UTF-8 and is checked by default.</source>
          <target state="translated">コンテンツを非UTFエンコーディングに再エンコードすると、変換がUTF-8ラウンドセーフではない可能性があるため、エラーが発生する可能性があります。エンコーディングがラウンドトリップセーフではないと思われる場合は、それを &lt;code&gt;core.checkRoundtripEncoding&lt;/code&gt; に追加して、Gitにラウンドトリップエンコーディングをチェックさせます（&lt;a href=&quot;git-config&quot;&gt;git-config [1]を&lt;/a&gt;参照）。SHIFT-JIS（日本語文字セット）には、UTF-8での往復問題があることが知られており、デフォルトでチェックされています。</target>
        </trans-unit>
        <trans-unit id="f60624f9fc2a82abf8497341d9d81b9d0824e3d8" translate="yes" xml:space="preserve">
          <source>Ref list attributes</source>
          <target state="translated">参照リスト属性</target>
        </trans-unit>
        <trans-unit id="b5e499a4b81055b1593e4e8b58d802dd0804b18d" translate="yes" xml:space="preserve">
          <source>Ref list keywords</source>
          <target state="translated">参考文献リストキーワード</target>
        </trans-unit>
        <trans-unit id="042501eba486c2a8fe3dfeebed7e6a526acc65b2" translate="yes" xml:space="preserve">
          <source>Refer to trace2.h for details about all trace2 functions.</source>
          <target state="translated">すべての trace2 関数の詳細については trace2.h を参照してください。</target>
        </trans-unit>
        <trans-unit id="db1c784524e1b54011a95823026161f7c8517fe0" translate="yes" xml:space="preserve">
          <source>Reference</source>
          <target state="translated">Reference</target>
        </trans-unit>
        <trans-unit id="8189e74b00341c8128de1c9b04b6630dfed40f88" translate="yes" xml:space="preserve">
          <source>Reference advertisement will be omitted unless explicitly requested</source>
          <target state="translated">参照広告は、明示的に要請がない限り省略します。</target>
        </trans-unit>
        <trans-unit id="219616f872f3c1f3f7c63db96c4bad5707f937ab" translate="yes" xml:space="preserve">
          <source>Reference logs, or &quot;reflogs&quot;, record when the tips of branches and other references were updated in the local repository. Reflogs are useful in various Git commands, to specify the old value of a reference. For example, &lt;code&gt;HEAD@{2}&lt;/code&gt; means &quot;where HEAD used to be two moves ago&quot;, &lt;code&gt;master@{one.week.ago}&lt;/code&gt; means &quot;where master used to point to one week ago in this local repository&quot;, and so on. See &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions[7]&lt;/a&gt; for more details.</source>
          <target state="translated">参照ログ、つまり「reflogs」は、ブランチのヒントやその他の参照がローカルリポジトリで更新された日時を記録します。 Reflogは、参照の古い値を指定するために、さまざまなGitコマンドで役立ちます。たとえば、 &lt;code&gt;HEAD@{2}&lt;/code&gt; は「HEADが2移動前であった場所」を意味し、 &lt;code&gt;master@{one.week.ago}&lt;/code&gt; @ { one.week.ago}は「マスターがこのローカルリポジトリで1週間前を指していた場所」を意味します。詳細については、&lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions [7]&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="5d20d0fee3b91643dd8d272ac33d01ca95179d82" translate="yes" xml:space="preserve">
          <source>References</source>
          <target state="translated">References</target>
        </trans-unit>
        <trans-unit id="fdc0add895cb5f66656ac926ee760b1a52ebfc92" translate="yes" xml:space="preserve">
          <source>References are stored in subdirectories of this directory. The &lt;code&gt;git prune&lt;/code&gt; command knows to preserve objects reachable from refs found in this directory and its subdirectories. This directory is ignored (except refs/bisect, refs/rewritten and refs/worktree) if $GIT_COMMON_DIR is set and &quot;$GIT_COMMON_DIR/refs&quot; will be used instead.</source>
          <target state="translated">参照はこのディレクトリのサブディレクトリに保存されます。 &lt;code&gt;git prune&lt;/code&gt; コマンドは、このディレクトリとそのサブディレクトリで見つかった参照文献から到達可能なオブジェクトを保持するために知っています。 $ GIT_COMMON_DIRが設定されており、代わりに &quot;$ GIT_COMMON_DIR / refs&quot;が使用される場合、このディレクトリは無視されます（refs / bisect、refs / rewrittenおよびrefs / worktreeを除く）。</target>
        </trans-unit>
        <trans-unit id="a774e5bc9f4a8942d74474f466fea367c3f9fc07" translate="yes" xml:space="preserve">
          <source>References to commit objects at the head of each branch are stored in files under .git/refs/heads/.</source>
          <target state="translated">各ブランチの先頭にあるコミットオブジェクトへの参照は .git/refs/heads/以下のファイルに格納されます。</target>
        </trans-unit>
        <trans-unit id="e8597d82d33701c292294d665408182c1ffb7098" translate="yes" xml:space="preserve">
          <source>Reflog: The two backends will use different wording when describing the changes made in the reflog, though both will make use of the word &quot;rebase&quot;.</source>
          <target state="translated">リブログ。2つのバックエンドでは、reflogで行われた変更を記述する際に異なる表現を使用しますが、どちらも &quot;rebase &quot;という言葉を使用します。</target>
        </trans-unit>
        <trans-unit id="586454a22a42afbc6e2564872cf76fa552b4a1a3" translate="yes" xml:space="preserve">
          <source>Reflogs</source>
          <target state="translated">Reflogs</target>
        </trans-unit>
        <trans-unit id="701486a68f3896a8a5368aead277807a6847151f" translate="yes" xml:space="preserve">
          <source>Refs</source>
          <target state="translated">Refs</target>
        </trans-unit>
        <trans-unit id="80074f188ddb96f7955691b6a7210a31a672772d" translate="yes" xml:space="preserve">
          <source>Refs are grouped into islands based on their &quot;names&quot;, and two regexes that produce the same name are considered to be in the same island. The names are computed from the regexes by concatenating any capture groups from the regex, with a &lt;code&gt;-&lt;/code&gt; dash in between. (And if there are no capture groups, then the name is the empty string, as in the above example.) This allows you to create arbitrary numbers of islands. Only up to 14 such capture groups are supported though.</source>
          <target state="translated">参照は「名前」に基づいてアイランドにグループ化され、同じ名前を生成する2つの正規表現は同じアイランドにあると見なされます。名前は、 &lt;code&gt;-&lt;/code&gt; を間に挟んで正規表現からのキャプチャグループを連結することにより、正規表現から計算されます。（そして、キャプチャグループがない場合、名前は上記の例のように空の文字列になります。）これにより、任意の数のアイランドを作成できます。ただし、このようなキャプチャグループは14までしかサポートされていません。</target>
        </trans-unit>
        <trans-unit id="f06a362739f816b768319f27e61eb1dd6b36faf2" translate="yes" xml:space="preserve">
          <source>Refs that are per working tree can still be accessed from another working tree via two special paths, &lt;code&gt;main-worktree&lt;/code&gt; and &lt;code&gt;worktrees&lt;/code&gt;. The former gives access to per-working tree refs of the main working tree, while the latter to all linked working trees.</source>
          <target state="translated">作業ツリーごとの参照には、 &lt;code&gt;main-worktree&lt;/code&gt; と &lt;code&gt;worktrees&lt;/code&gt; の2つの特別なパスを介して、別の作業ツリーから引き続きアクセスできます。前者はメインの作業ツリーの作業ごとのツリー参照へのアクセスを提供し、後者はすべてのリンクされた作業ツリーへのアクセスを提供します。</target>
        </trans-unit>
        <trans-unit id="2bb2083cc2f447acfd0f5d16022129235ca5b2cc" translate="yes" xml:space="preserve">
          <source>Refs that are per working tree can still be accessed from another working tree via two special paths, main-worktree and worktrees. The former gives access to per-worktree refs of the main working tree, while the latter to all linked working trees.</source>
          <target state="translated">ワーキングツリーごとの参照は、メインワークツリーとワークツリーの2つの特別なパスを経由して、別のワーキングツリーからアクセスすることができます。前者はメイン作業木の作業木単位の参照にアクセスでき、後者はリンクされたすべての作業木にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="05e5994fa9181b6fad85ee509538c0ad6a6bc5c4" translate="yes" xml:space="preserve">
          <source>Refs that are per-&lt;a href=&quot;#def_working_tree&quot;&gt;worktree&lt;/a&gt;, rather than global. This is presently only &lt;a href=&quot;#def_HEAD&quot;&gt;HEAD&lt;/a&gt; and any refs that start with &lt;code&gt;refs/bisect/&lt;/code&gt;, but might later include other unusual refs.</source>
          <target state="translated">パーいる参考文献&lt;a href=&quot;#def_working_tree&quot;&gt;worktree&lt;/a&gt;ではなくグローバルに比べ、。現在、これは&lt;a href=&quot;#def_HEAD&quot;&gt;HEAD&lt;/a&gt;および &lt;code&gt;refs/bisect/&lt;/code&gt; で始まるすべての参照のみですが、後で他の異常な参照が含まれる可能性があります。</target>
        </trans-unit>
        <trans-unit id="338d2a0e12d851337309cef01e7fe887153b0f55" translate="yes" xml:space="preserve">
          <source>Regardless of object type, all objects share the following characteristics: they are all deflated with zlib, and have a header that not only specifies their type, but also provides size information about the data in the object. It&amp;rsquo;s worth noting that the SHA-1 hash that is used to name the object is the hash of the original data plus this header, so &lt;code&gt;sha1sum&lt;/code&gt; 'file' does not match the object name for 'file'.</source>
          <target state="translated">オブジェクトタイプに関係なく、すべてのオブジェクトは次の特性を共有します。すべてのオブジェクトはzlibで圧縮されており、タイプを指定するだけでなく、オブジェクト内のデータに関するサイズ情報も提供するヘッダーがあります。オブジェクトに名前を付けるために使用されるSHA-1ハッシュは、元のデータとこのヘッダーのハッシュであるため、 &lt;code&gt;sha1sum&lt;/code&gt; 'file'は 'file'のオブジェクト名と一致しないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="8f29e38b3ae41c972d05bd6fbd77326fc2768fcf" translate="yes" xml:space="preserve">
          <source>Regardless of object type, all objects share the following characteristics: they are all deflated with zlib, and have a header that not only specifies their type, but also provides size information about the data in the object. It&amp;rsquo;s worth noting that the SHA-1 hash that is used to name the object is the hash of the original data plus this header, so &lt;code&gt;sha1sum&lt;/code&gt;&lt;code&gt;file&lt;/code&gt; does not match the object name for &lt;code&gt;file&lt;/code&gt;.</source>
          <target state="translated">オブジェクトタイプに関係なく、すべてのオブジェクトは次の特性を共有します。すべてzlibでデフレートされ、タイプを指定するだけでなく、オブジェクト内のデータに関するサイズ情報も提供するヘッダーがあります。それの価値はようにオブジェクトに名前を付けるために使用されているSHA-1ハッシュは、元のデータに加えて、このヘッダのハッシュであることに注意 &lt;code&gt;sha1sum&lt;/code&gt; &lt;code&gt;file&lt;/code&gt; のオブジェクト名と一致しない &lt;code&gt;file&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="710a95e624a3349545888a56ed2557d883a0ebee" translate="yes" xml:space="preserve">
          <source>Region and Data Messages</source>
          <target state="translated">地域とデータメッセージ</target>
        </trans-unit>
        <trans-unit id="039711232507cd9753ddba093da2350b27e67dca" translate="yes" xml:space="preserve">
          <source>Regions</source>
          <target state="translated">Regions</target>
        </trans-unit>
        <trans-unit id="f60734f6521040c876486255fe253adea3ef4364" translate="yes" xml:space="preserve">
          <source>Regions can be use to time an interesting section of code.</source>
          <target state="translated">リージョンは、コードの興味深いセクションの時間を設定するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="e6931aebd376c6a517eae391382acbc891d72f65" translate="yes" xml:space="preserve">
          <source>Regions may be nested. This causes messages to be indented in the PERF target, for example. Elapsed times are relative to the start of the corresponding nesting level as expected. For example, if we add region message to:</source>
          <target state="translated">リージョンは入れ子にすることができます。これにより、例えばPERFターゲットではメッセージがインデントされます。経過時間は、予想通り、対応する入れ子レベルの開始時刻からの相対的なものです。例えば、リージョンメッセージを</target>
        </trans-unit>
        <trans-unit id="1595f1bb6d790a7a3e5eb6fb03765aabf279806d" translate="yes" xml:space="preserve">
          <source>Register file contents in the working tree to the index</source>
          <target state="translated">作業ツリー内のファイルの内容をインデックスに登録する</target>
        </trans-unit>
        <trans-unit id="8a6eb409adc691aa11f00dc05c7a129c2f833328" translate="yes" xml:space="preserve">
          <source>Regressions are a big problem in the software industry. But it&amp;rsquo;s difficult to put some real numbers behind that claim.</source>
          <target state="translated">ソフトウェア業界では、回帰は大きな問題です。しかし、その主張の背後にいくつかの実数を置くことは困難です。</target>
        </trans-unit>
        <trans-unit id="4ab9d6c175961a8739069a73845c7f8b21150d86" translate="yes" xml:space="preserve">
          <source>Regressions: a big problem</source>
          <target state="translated">回帰:大きな問題</target>
        </trans-unit>
        <trans-unit id="2256cc6ee2a5d077491a8a63ef76ac743c25d2d2" translate="yes" xml:space="preserve">
          <source>Related links</source>
          <target state="translated">関連リンク</target>
        </trans-unit>
        <trans-unit id="b61e20d1d031c57060b03654349b1ab448029094" translate="yes" xml:space="preserve">
          <source>Relationship to the Existing Trace Api (api-trace.txt)</source>
          <target state="translated">既存のトレース API との関係 (api-trace.txt)</target>
        </trans-unit>
        <trans-unit id="a5807b40eca9f80054603fbc4a7d22e009d2c415" translate="yes" xml:space="preserve">
          <source>Relative and non-relative marks may be combined by interweaving --(no-)-relative-marks with the --(import|export)-marks= options.</source>
          <target state="translated">相対マークと非相対マークは、--(no-)-相対マークを--(import|export)-mark=オプションで織り交ぜることで組み合わせることができます。</target>
        </trans-unit>
        <trans-unit id="31bc43768c6a353840de5e162fcf9b5cce4d9437" translate="yes" xml:space="preserve">
          <source>Relative to the tip of &lt;code&gt;topic&lt;/code&gt;: knowing that your &lt;code&gt;topic&lt;/code&gt; has three commits, the old tip of &lt;code&gt;subsystem&lt;/code&gt; must be &lt;code&gt;topic~3&lt;/code&gt;.</source>
          <target state="translated">先端に相対 &lt;code&gt;topic&lt;/code&gt; ：あなたのことを知っている &lt;code&gt;topic&lt;/code&gt; 3つのコミットを持っている、古い先端 &lt;code&gt;subsystem&lt;/code&gt; なければなりません &lt;code&gt;topic~3&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="98786341673b229d09cd6bac6df5f38262cac094" translate="yes" xml:space="preserve">
          <source>Remain silent even on nonexistent files</source>
          <target state="translated">存在しないファイルでも沈黙を保つ</target>
        </trans-unit>
        <trans-unit id="cad2c2939c304ff819eff58f792783f6747c93cf" translate="yes" xml:space="preserve">
          <source>Remap all the path requests as relative to the given path. This is sort of &quot;Git root&quot; - if you run &lt;code&gt;git daemon&lt;/code&gt; with &lt;code&gt;--base-path=/srv/git&lt;/code&gt; on example.com, then if you later try to pull &lt;code&gt;git://example.com/hello.git&lt;/code&gt;, &lt;code&gt;git daemon&lt;/code&gt; will interpret the path as &lt;code&gt;/srv/git/hello.git&lt;/code&gt;.</source>
          <target state="translated">指定されたパスを基準にして、すべてのパス要求を再マッピングします。これは「Gitルート」のようなものです &lt;code&gt;--base-path=/srv/git&lt;/code&gt; で--base-path = / srv / gitを指定して &lt;code&gt;git daemon&lt;/code&gt; を実行した場合、後で &lt;code&gt;git://example.com/hello.git&lt;/code&gt; をプルしようとすると、 &lt;code&gt;git daemon&lt;/code&gt; はパスを &lt;code&gt;/srv/git/hello.git&lt;/code&gt; として解釈します。</target>
        </trans-unit>
        <trans-unit id="4a5c393fce9fb8dc0d691f13288d22c0e7f1b235" translate="yes" xml:space="preserve">
          <source>Remap to ancestor</source>
          <target state="translated">先祖へのリマップ</target>
        </trans-unit>
        <trans-unit id="8d0121936c456fcf3d222b828ee9077e2cc34843" translate="yes" xml:space="preserve">
          <source>Remember how we did the &lt;code&gt;git update-index&lt;/code&gt; on file &lt;code&gt;hello&lt;/code&gt; and then we changed &lt;code&gt;hello&lt;/code&gt; afterward, and could compare the new state of &lt;code&gt;hello&lt;/code&gt; with the state we saved in the index file?</source>
          <target state="translated">私たちがやったか覚えている &lt;code&gt;git update-index&lt;/code&gt; ファイルに &lt;code&gt;hello&lt;/code&gt; して、私たちは変わっ &lt;code&gt;hello&lt;/code&gt; その後、との新しい状態を比較でき &lt;code&gt;hello&lt;/code&gt; 私たちはインデックスファイルに保存された状態で？</target>
        </trans-unit>
        <trans-unit id="2cc52de1f31f7df8236151d526db4f676cdfb905" translate="yes" xml:space="preserve">
          <source>Remember, before running &lt;code&gt;git merge&lt;/code&gt;, our &lt;code&gt;master&lt;/code&gt; head was at &quot;Some fun.&quot; commit, while our &lt;code&gt;mybranch&lt;/code&gt; head was at &quot;Some work.&quot; commit.</source>
          <target state="translated">&lt;code&gt;git merge&lt;/code&gt; を実行する前は、 &lt;code&gt;master&lt;/code&gt; ヘッドは「Some fun」でした。 &lt;code&gt;mybranch&lt;/code&gt; の頭が &quot;Some work&quot; にある間、コミットします。コミット。</target>
        </trans-unit>
        <trans-unit id="3e534e3639a4dd02297fd7fd07ede8a71c71535e" translate="yes" xml:space="preserve">
          <source>Remote HEAD must resolve to an object that exists locally</source>
          <target state="translated">リモートHEADは、ローカルに存在するオブジェクトに解決しなければなりません。</target>
        </trans-unit>
        <trans-unit id="2033891925fe29daa47f6c451af0f18a87529563" translate="yes" xml:space="preserve">
          <source>Remote helper programs are invoked with one or (optionally) two arguments. The first argument specifies a remote repository as in Git; it is either the name of a configured remote or a URL. The second argument specifies a URL; it is usually of the form &lt;code&gt;&amp;lt;transport&amp;gt;://&amp;lt;address&amp;gt;&lt;/code&gt;, but any arbitrary string is possible. The &lt;code&gt;GIT_DIR&lt;/code&gt; environment variable is set up for the remote helper and can be used to determine where to store additional data or from which directory to invoke auxiliary Git commands.</source>
          <target state="translated">リモートヘルパープログラムは、1つまたは（オプションで）2つの引数で呼び出されます。最初の引数は、Gitのようにリモートリポジトリを指定します。これは、構成されたリモートの名前またはURLのいずれかです。 2番目の引数はURLを指定します。通常は &lt;code&gt;&amp;lt;transport&amp;gt;://&amp;lt;address&amp;gt;&lt;/code&gt; の形式ですが、任意の文字列が可能です。 &lt;code&gt;GIT_DIR&lt;/code&gt; の環境変数は、リモート・ヘルパー用に設定されており、ここで補助Gitのコマンドを起動するための追加データまたはディレクトリからを格納するかを決定するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="8ee4f73d380c3c99d59209a069206bbd667c2977" translate="yes" xml:space="preserve">
          <source>Remote helper programs are normally not used directly by end users, but they are invoked by Git when it needs to interact with remote repositories Git does not support natively. A given helper will implement a subset of the capabilities documented here. When Git needs to interact with a repository using a remote helper, it spawns the helper as an independent process, sends commands to the helper&amp;rsquo;s standard input, and expects results from the helper&amp;rsquo;s standard output. Because a remote helper runs as an independent process from Git, there is no need to re-link Git to add a new helper, nor any need to link the helper with the implementation of Git.</source>
          <target state="translated">リモートヘルパープログラムは通常、エンドユーザーが直接使用することはありませんが、Gitがネイティブでサポートしていないリモートリポジトリとやり取りする必要があるときにGitによって呼び出されます。特定のヘルパーは、ここに記載されている機能のサブセットを実装します。 Gitがリモートヘルパーを使用してリポジトリとやり取りする必要がある場合、Gitはヘルパーを独立したプロセスとして生成し、ヘルパーの標準入力にコマンドを送信し、ヘルパーの標準出力からの結果を期待します。リモートヘルパーはGitから独立したプロセスとして実行されるため、Gitを再リンクして新しいヘルパーを追加する必要も、ヘルパーをGitの実装にリンクする必要もありません。</target>
        </trans-unit>
        <trans-unit id="7f9d958435b39dd5e8519bc9a5ca0b414455c52e" translate="yes" xml:space="preserve">
          <source>Remotes</source>
          <target state="translated">Remotes</target>
        </trans-unit>
        <trans-unit id="1d36d5e98f5289fdb40f6238091d921b16cd3d1b" translate="yes" xml:space="preserve">
          <source>Remove &amp;lt;n&amp;gt; leading path components (separated by slashes) from traditional diff paths. E.g., with &lt;code&gt;-p2&lt;/code&gt;, a patch against &lt;code&gt;a/dir/file&lt;/code&gt; will be applied directly to &lt;code&gt;file&lt;/code&gt;. The default is 1.</source>
          <target state="translated">従来のdiffパスから&amp;lt;n&amp;gt;の先行パスコンポーネント（スラッシュで区切られた）を削除します。たとえば、 &lt;code&gt;-p2&lt;/code&gt; を使用すると &lt;code&gt;a/dir/file&lt;/code&gt; に対するパッチが &lt;code&gt;file&lt;/code&gt; に直接適用されます。デフォルトは1です。</target>
        </trans-unit>
        <trans-unit id="536f22b2b28f4e056331357f5ffb90610418f296" translate="yes" xml:space="preserve">
          <source>Remove &amp;lt;ref&amp;gt; from remote repository. The specified branch cannot be the remote HEAD. If -d is specified the following other conditions must also be met:</source>
          <target state="translated">リモートリポジトリから&amp;lt;ref&amp;gt;を削除します。指定されたブランチをリモートHEADにすることはできません。-dが指定されている場合、以下の他の条件も満たす必要があります。</target>
        </trans-unit>
        <trans-unit id="1d92b551b14c7ff24c92341cea4922fcb2c6e7df" translate="yes" xml:space="preserve">
          <source>Remove a matching credential, if any, from the helper&amp;rsquo;s storage.</source>
          <target state="translated">一致する資格情報がある場合は、ヘルパーのストレージから削除します。</target>
        </trans-unit>
        <trans-unit id="f5cc16ae24cf52b436071d42d9516387a59ce74f" translate="yes" xml:space="preserve">
          <source>Remove a single stash entry from the list of stash entries.</source>
          <target state="translated">スタッシュエントリのリストから1つのスタッシュエントリを削除します。</target>
        </trans-unit>
        <trans-unit id="9a577cbb08edd5d9773523cfc5cfe43dc9b03f45" translate="yes" xml:space="preserve">
          <source>Remove a single stash entry from the list of stash entries. When no &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; is given, it removes the latest one. i.e. &lt;code&gt;stash@{0}&lt;/code&gt;, otherwise &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; must be a valid stash log reference of the form &lt;code&gt;stash@{&amp;lt;revision&amp;gt;}&lt;/code&gt;.</source>
          <target state="translated">stashエントリーのリストから単一のstashエントリーを削除します。 &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; が指定されていない場合は、最新のものを削除します。つまり、 &lt;code&gt;stash@{0}&lt;/code&gt; 。それ以外の場合、 &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; は &lt;code&gt;stash@{&amp;lt;revision&amp;gt;}&lt;/code&gt; 形式の有効なstashログ参照である必要があります。</target>
        </trans-unit>
        <trans-unit id="729e5fd8775c30c358fedf9e611fd4f6f670b5e7" translate="yes" xml:space="preserve">
          <source>Remove a single stashed state from the stash list and apply it on top of the current working tree state, i.e., do the inverse operation of &lt;code&gt;git stash push&lt;/code&gt;. The working directory must match the index.</source>
          <target state="translated">stashリストから単一のstash状態を削除し、現在の作業ツリー状態の上に適用します。つまり、 &lt;code&gt;git stash push&lt;/code&gt; の逆の操作を行います。作業ディレクトリはインデックスと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="d34ae9e19d54c7604c479f4c5964ccef00bd4a98" translate="yes" xml:space="preserve">
          <source>Remove a working tree. Only clean working trees (no untracked files and no modification in tracked files) can be removed. Unclean working trees or ones with submodules can be removed with &lt;code&gt;--force&lt;/code&gt;. The main working tree cannot be removed.</source>
          <target state="translated">作業ツリーを削除します。削除できるのは、クリーンな作業ツリー（追跡されていないファイルや追跡されているファイルに変更がない）のみです。クリーンでない作業ツリーまたはサブモジュールのある作業ツリーは、-- &lt;code&gt;--force&lt;/code&gt; で削除できます。メインの作業ツリーは削除できません。</target>
        </trans-unit>
        <trans-unit id="df5a8d70d2380181bdc059d7c2ddc0a78e9d1412" translate="yes" xml:space="preserve">
          <source>Remove all lines matching the key from config file.</source>
          <target state="translated">設定ファイルからキーに一致する行をすべて削除します。</target>
        </trans-unit>
        <trans-unit id="9fc0230ddf082dc45699878be1634350de11665f" translate="yes" xml:space="preserve">
          <source>Remove all notes for non-existing/unreachable objects.</source>
          <target state="translated">存在しない/到達不可能なオブジェクトのノートをすべて削除します。</target>
        </trans-unit>
        <trans-unit id="fc1b4600e49f3115828b9f3463a6567fd85094fb" translate="yes" xml:space="preserve">
          <source>Remove all the stash entries. Note that those entries will then be subject to pruning, and may be impossible to recover (see &lt;code&gt;Examples&lt;/code&gt; below for a possible strategy).</source>
          <target state="translated">すべてのstashエントリーを削除します。これらのエントリはプルーニングの対象となり、回復できない可能性があることに注意してください（可能な戦略については、以下の &lt;code&gt;Examples&lt;/code&gt; 参照してください）。</target>
        </trans-unit>
        <trans-unit id="353e52e76ff6a9350e8485da73b547859aa497ce" translate="yes" xml:space="preserve">
          <source>Remove any whitespace-continuation in trailers, so that each trailer appears on a line by itself with its full content.</source>
          <target state="translated">予告編の空白-続きを削除して、各予告編がその内容の完全な内容と一緒に一行に表示されるようにします。</target>
        </trans-unit>
        <trans-unit id="de112945ec414c57cddaca5199f29ee2fc05a979" translate="yes" xml:space="preserve">
          <source>Remove directories from the SVN tree if there are no files left behind. SVN can version empty directories, and they are not removed by default if there are no files left in them. Git cannot version empty directories. Enabling this flag will make the commit to SVN act like Git.</source>
          <target state="translated">ファイルが残っていない場合、SVN ツリーからディレクトリを削除します。SVN は空のディレクトリのバージョン管理を行うことができ、ファイルが残っていない場合はデフォルトでは削除されません。Git は空のディレクトリをバージョン管理することはできません。このフラグを有効にすると、SVN へのコミットが Git のように動作するようになります。</target>
        </trans-unit>
        <trans-unit id="cc02753459be831dfea1cd243efcfb50db2a59d3" translate="yes" xml:space="preserve">
          <source>Remove everything in body before a scissors line (e.g. &quot;-- &amp;gt;8 --&quot;). The line represents scissors and perforation marks, and is used to request the reader to cut the message at that line. If that line appears in the body of the message before the patch, everything before it (including the scissors line itself) is ignored when this option is used.</source>
          <target state="translated">はさみの線の前にあるすべてのものを体から取り除きます（例：「-&amp;gt; 8-」）。この線ははさみとミシン目マークを表しており、読者にその行でメッセージをカットするように要求するために使用されます。パッチの前のメッセージの本文にその行が表示されている場合、このオプションを使用すると、その行の前のすべて（はさみの行自体を含む）が無視されます。</target>
        </trans-unit>
        <trans-unit id="7e6c07487aafd5a1b8bbc132d0eb9f70eb39a580" translate="yes" xml:space="preserve">
          <source>Remove everything in body before a scissors line (see &lt;a href=&quot;git-mailinfo&quot;&gt;git-mailinfo[1]&lt;/a&gt;). Can be activated by default using the &lt;code&gt;mailinfo.scissors&lt;/code&gt; configuration variable.</source>
          <target state="translated">はさみの行の前にある本文のすべてを削除します（&lt;a href=&quot;git-mailinfo&quot;&gt;git-mailinfo [1]を&lt;/a&gt;参照）。 &lt;code&gt;mailinfo.scissors&lt;/code&gt; 構成変数を使用して、デフォルトでアクティブ化できます。</target>
        </trans-unit>
        <trans-unit id="399fc61abd5e53e0ff9fe12417324d78f931368d" translate="yes" xml:space="preserve">
          <source>Remove everything in body before a scissors line. A line that mainly consists of scissors (either &quot;&amp;gt;8&quot; or &quot;8&amp;lt;&quot;) and perforation (dash &quot;-&quot;) marks is called a scissors line, and is used to request the reader to cut the message at that line. If such a line appears in the body of the message before the patch, everything before it (including the scissors line itself) is ignored when this option is used.</source>
          <target state="translated">はさみラインの前に体のすべてを削除します。はさみ（ &quot;&amp;gt; 8&quot;または &quot;8 &amp;lt;&quot;）とミシン目（ダッシュ &quot;-&quot;）のマークで主に構成される線は、はさみ線と呼ばれ、その行でメッセージを切り取るようにリーダーに要求するために使用されます。このような行がパッチの前のメッセージの本文に表示される場合、このオプションを使用すると、その前のすべて（はさみの行自体を含む）は無視されます。</target>
        </trans-unit>
        <trans-unit id="3b6a842b7003d3eacad12733ce8974d4d54219eb" translate="yes" xml:space="preserve">
          <source>Remove extra objects that are already in pack files</source>
          <target state="translated">既にパックファイルに入っている余分なオブジェクトを削除する</target>
        </trans-unit>
        <trans-unit id="17839ee8fd6b46f8390b41c3ab4800fda5ea86c3" translate="yes" xml:space="preserve">
          <source>Remove files from the index, or from the working tree and the index. &lt;code&gt;git rm&lt;/code&gt; will not remove a file from just your working directory. (There is no option to remove a file only from the working tree and yet keep it in the index; use &lt;code&gt;/bin/rm&lt;/code&gt; if you want to do that.) The files being removed have to be identical to the tip of the branch, and no updates to their contents can be staged in the index, though that default behavior can be overridden with the &lt;code&gt;-f&lt;/code&gt; option. When &lt;code&gt;--cached&lt;/code&gt; is given, the staged content has to match either the tip of the branch or the file on disk, allowing the file to be removed from just the index.</source>
          <target state="translated">インデックスから、または作業ツリーとインデックスからファイルを削除します。 &lt;code&gt;git rm&lt;/code&gt; は、作業ディレクトリからのみファイルを削除しません。 （作業ツリーからのみファイルを削除し、それをインデックスに保持するオプションはありません。削除する場合は、 &lt;code&gt;/bin/rm&lt;/code&gt; を使用してください。）削除するファイルは、ブランチの先端と同一である必要があります。また、その内容の更新はインデックスにステージングできませんが、そのデフォルトの動作は &lt;code&gt;-f&lt;/code&gt; オプションでオーバーライドできます。場合は &lt;code&gt;--cached&lt;/code&gt; が与えられ、段階的な内容は、ファイルがちょうどインデックスから削除することができるように、枝の先端またはディスク上のファイルのいずれかと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="3cb238ca5adf89378484ddf4d733eeac1d7298bc" translate="yes" xml:space="preserve">
          <source>Remove files from the working tree and from the index</source>
          <target state="translated">作業ツリーとインデックスからファイルを削除します。</target>
        </trans-unit>
        <trans-unit id="43b38708b726858c7f29029b5ed632fd4a969782" translate="yes" xml:space="preserve">
          <source>Remove files matching pathspec from the index, or from the working tree and the index. &lt;code&gt;git rm&lt;/code&gt; will not remove a file from just your working directory. (There is no option to remove a file only from the working tree and yet keep it in the index; use &lt;code&gt;/bin/rm&lt;/code&gt; if you want to do that.) The files being removed have to be identical to the tip of the branch, and no updates to their contents can be staged in the index, though that default behavior can be overridden with the &lt;code&gt;-f&lt;/code&gt; option. When &lt;code&gt;--cached&lt;/code&gt; is given, the staged content has to match either the tip of the branch or the file on disk, allowing the file to be removed from just the index.</source>
          <target state="translated">pathspecに一致するファイルをインデックスから、または作業ツリーとインデックスから削除します。 &lt;code&gt;git rm&lt;/code&gt; は、作業ディレクトリだけからファイルを削除することはありません。 （作業ツリーからのみファイルを削除し、それをインデックスに保持するオプションはありません。必要に応じて &lt;code&gt;/bin/rm&lt;/code&gt; を使用してください。）削除するファイルは、ブランチの先端と同じである必要があります。また、コンテンツの更新をインデックスにステージングすることはできませんが、そのデフォルトの動作は &lt;code&gt;-f&lt;/code&gt; オプションでオーバーライドできます。場合は &lt;code&gt;--cached&lt;/code&gt; が与えられ、段階的な内容は、ファイルがちょうどインデックスから削除することができるように、枝の先端またはディスク上のファイルのいずれかと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="f4bb9a18f09e2a84cc163ecae438e47b1c4edd13" translate="yes" xml:space="preserve">
          <source>Remove only files ignored by Git. This may be useful to rebuild everything from scratch, but keep manually created files.</source>
          <target state="translated">Git に無視されたファイルだけを削除します。これはゼロからすべてを再構築するのに便利かもしれませんが、手動で作成したファイルは残しておきましょう。</target>
        </trans-unit>
        <trans-unit id="db3de663ed677f594653d0d9e2ee65cde68df92e" translate="yes" xml:space="preserve">
          <source>Remove remote branches that don&amp;rsquo;t have a local counterpart. For example a remote branch &lt;code&gt;tmp&lt;/code&gt; will be removed if a local branch with the same name doesn&amp;rsquo;t exist any more. This also respects refspecs, e.g. &lt;code&gt;git push --prune remote refs/heads/*:refs/tmp/*&lt;/code&gt; would make sure that remote &lt;code&gt;refs/tmp/foo&lt;/code&gt; will be removed if &lt;code&gt;refs/heads/foo&lt;/code&gt; doesn&amp;rsquo;t exist.</source>
          <target state="translated">ローカルに対応するものがないリモートブランチを削除します。たとえば、同じ名前のローカルブランチがもう存在しない場合、リモートブランチの &lt;code&gt;tmp&lt;/code&gt; は削除されます。これは、refspecも尊重します。たとえば、 &lt;code&gt;git push --prune remote refs/heads/*:refs/tmp/*&lt;/code&gt; は、 &lt;code&gt;refs/heads/foo&lt;/code&gt; が存在しない場合にリモート &lt;code&gt;refs/tmp/foo&lt;/code&gt; が確実に削除されるようにします。</target>
        </trans-unit>
        <trans-unit id="f37ac7cebbcb8ec8c49f87fdd3f7cf3698f1f26a" translate="yes" xml:space="preserve">
          <source>Remove the current repository from background maintenance. This only removes the repository from the configured list. It does not stop the background maintenance processes from running.</source>
          <target state="translated">現在のリポジトリをバックグラウンドメンテナンスから削除します。これは、設定されたリストからリポジトリを削除するだけです。バックグラウンドメンテナンスプロセスの実行を停止することはありません。</target>
        </trans-unit>
        <trans-unit id="2919c677f0cd57d3ef223926e7768e681a692562" translate="yes" xml:space="preserve">
          <source>Remove the file from the index even when the working directory still has such a file. (Implies --remove.)</source>
          <target state="translated">作業ディレクトリにそのようなファイルが残っている場合でも、そのファイルをインデックスから削除します。(--removeを意味する)。</target>
        </trans-unit>
        <trans-unit id="164a03cc0aa02b0fdd552e7429c1ea851b7d7d46" translate="yes" xml:space="preserve">
          <source>Remove the given section from the configuration file.</source>
          <target state="translated">設定ファイルから指定されたセクションを削除します。</target>
        </trans-unit>
        <trans-unit id="499242d7995d63aad1acd16a991a3d6fcb048be8" translate="yes" xml:space="preserve">
          <source>Remove the line matching the key from config file.</source>
          <target state="translated">設定ファイルからキーに一致する行を削除します。</target>
        </trans-unit>
        <trans-unit id="9012d0fb42a36221745fbb3295fa2024a72211df" translate="yes" xml:space="preserve">
          <source>Remove the notes for given objects (defaults to HEAD). When giving zero or one object from the command line, this is equivalent to specifying an empty note message to the &lt;code&gt;edit&lt;/code&gt; subcommand.</source>
          <target state="translated">指定されたオブジェクトのメモを削除します（デフォルトはHEAD）。コマンドラインからゼロまたは1つのオブジェクトを指定する場合、これは &lt;code&gt;edit&lt;/code&gt; サブコマンドに空のノートメッセージを指定することと同じです。</target>
        </trans-unit>
        <trans-unit id="b516eb38e36b7b4419cbc8b6cb246b5741dd75c3" translate="yes" xml:space="preserve">
          <source>Remove the original refs backed up by git-filter-branch: say &lt;code&gt;git
for-each-ref --format=&quot;%(refname)&quot; refs/original/ | xargs -n 1 git
update-ref -d&lt;/code&gt;.</source>
          <target state="translated">git-filter-branchによってバックアップされた元の参照を削除します： &lt;code&gt;git for-each-ref --format=&quot;%(refname)&quot; refs/original/ | xargs -n 1 git update-ref -d&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f5271d5dabe5bf4126a68baa1d1f5cc6eedea4a6" translate="yes" xml:space="preserve">
          <source>Remove the remote named &amp;lt;name&amp;gt;. All remote-tracking branches and configuration settings for the remote are removed.</source>
          <target state="translated">&amp;lt;name&amp;gt;という名前のリモートを削除します。すべてのリモート追跡ブランチとリモートの構成設定が削除されます。</target>
        </trans-unit>
        <trans-unit id="55f1c43ced88c466a9b48b12744508e7df191628" translate="yes" xml:space="preserve">
          <source>Remove the upstream information for &amp;lt;branchname&amp;gt;. If no branch is specified it defaults to the current branch.</source>
          <target state="translated">&amp;lt;branchname&amp;gt;のアップストリーム情報を削除します。ブランチが指定されていない場合、デフォルトで現在のブランチになります。</target>
        </trans-unit>
        <trans-unit id="7dd660439147162be4964d5d4a2d3c419e5791f0" translate="yes" xml:space="preserve">
          <source>Remove unnecessary whitespace</source>
          <target state="translated">不要な空白を削除する</target>
        </trans-unit>
        <trans-unit id="d76bb29e1084aa7b85896360764953783a4152de" translate="yes" xml:space="preserve">
          <source>Remove untracked files from the working tree</source>
          <target state="translated">作業ツリーからトラックされていないファイルを削除する</target>
        </trans-unit>
        <trans-unit id="e317f2faafb831e4cbd09ebccd9fa3144e930ab8" translate="yes" xml:space="preserve">
          <source>Removed content is represented by lines beginning with &quot;-&quot;. You can prevent staging their removal by converting the &quot;-&quot; to a &quot; &quot; (space).</source>
          <target state="translated">削除されたコンテンツは、&quot;-&quot;で始まる行で表されます。この&quot;-&quot;を&quot; &quot;(スペース)に変換することで、削除の演出を防ぐことができます。</target>
        </trans-unit>
        <trans-unit id="078d2cf1e943764a2f97b429a98d1c54fe3fc4b4" translate="yes" xml:space="preserve">
          <source>Removes all &lt;code&gt;*.txt&lt;/code&gt; files from the index that are under the &lt;code&gt;Documentation&lt;/code&gt; directory and any of its subdirectories.</source>
          <target state="translated">&lt;code&gt;Documentation&lt;/code&gt; ディレクトリとそのサブディレクトリのいずれかにあるインデックスからすべての &lt;code&gt;*.txt&lt;/code&gt; ファイルを削除します。</target>
        </trans-unit>
        <trans-unit id="b7b4dacce459fd9e247be7781aa6ab7a83d66ed0" translate="yes" xml:space="preserve">
          <source>Removing files that have disappeared from the filesystem</source>
          <target state="translated">ファイルシステムから消えたファイルを削除する</target>
        </trans-unit>
        <trans-unit id="3225190bfc565c2a8dc8b2fcac1b38dcbf9dd0d7" translate="yes" xml:space="preserve">
          <source>Rename detection options for git-diff and git-diff-tree. The default is ('-M'); set it to ('-C') or ('-C', '-C') to also detect copies, or set it to () i.e. empty list if you don&amp;rsquo;t want to have renames detection.</source>
          <target state="translated">git-diffおよびgit-diff-treeの検出オプションの名前を変更します。デフォルトは（ '-M'）です。（ '-C'）または（ '-C'、 '-C'）に設定してコピーも検出するか、（）に設定します。つまり、名前の変更を検出したくない場合は空のリストに設定します。</target>
        </trans-unit>
        <trans-unit id="8ccf039fc07f889e68756c36ea6201967b32f105" translate="yes" xml:space="preserve">
          <source>Rename the given section to a new name.</source>
          <target state="translated">与えられたセクションの名前を新しい名前に変更します。</target>
        </trans-unit>
        <trans-unit id="141bf3674e223333500e19c5eb60f38f2c848a7a" translate="yes" xml:space="preserve">
          <source>Rename the remote named &amp;lt;old&amp;gt; to &amp;lt;new&amp;gt;. All remote-tracking branches and configuration settings for the remote are updated.</source>
          <target state="translated">&amp;lt;old&amp;gt;という名前のリモートの名前を&amp;lt;new&amp;gt;に変更します。すべてのリモート追跡ブランチとリモートの構成設定が更新されます。</target>
        </trans-unit>
        <trans-unit id="3dc385accd1a9a34d691dc85a7cf993a198b2f01" translate="yes" xml:space="preserve">
          <source>Renamed and copied directories are not detected by Git and hence not tracked when committing to SVN. I do not plan on adding support for this as it&amp;rsquo;s quite difficult and time-consuming to get working for all the possible corner cases (Git doesn&amp;rsquo;t do it, either). Committing renamed and copied files is fully supported if they&amp;rsquo;re similar enough for Git to detect them.</source>
          <target state="translated">名前を変更してコピーしたディレクトリはGitによって検出されないため、SVNへのコミット時に追跡されません。可能性のあるすべてのコーナーケースに対応するのは非常に困難で時間がかかるため、これに対するサポートを追加する予定はありません（Gitもそれを行いません）。名前が変更されてコピーされたファイルのコミットは、Gitがそれらを検出するのに十分類似している場合に完全にサポートされます。</target>
        </trans-unit>
        <trans-unit id="4a51a71032e050546d92c69d4de0167dd63ce59a" translate="yes" xml:space="preserve">
          <source>Renamed or copied entries have the following format:</source>
          <target state="translated">名前の変更やコピーされたエントリは、以下の形式になります。</target>
        </trans-unit>
        <trans-unit id="226701a0627a0c80ce4e0de29a5f8995d1cc94ec" translate="yes" xml:space="preserve">
          <source>Renames an existing file or subdirectory to a different location within the branch. The existing file or directory must exist. If the destination exists it will be replaced by the source directory.</source>
          <target state="translated">既存のファイルやサブディレクトリの名前を、ブランチ内の別の場所に変更します。既存のファイルまたはディレクトリが存在する必要があります。宛先が存在する場合は、ソースディレクトリに置き換えられます。</target>
        </trans-unit>
        <trans-unit id="7f74fd002fd53242d75fe672215f240c564dd1ec" translate="yes" xml:space="preserve">
          <source>Reordering and editing commits usually creates untested intermediate steps. You may want to check that your history editing did not break anything by running a test, or at least recompiling at intermediate points in history by using the &quot;exec&quot; command (shortcut &quot;x&quot;). You may do so by creating a todo list like this one:</source>
          <target state="translated">コミットを並べ替えたり編集したりすると、通常はテストされていない中間のステップが発生します。履歴の編集が何も壊れていないことを確認するには、テストを実行するか、少なくとも履歴の中間地点で &quot;exec&quot; コマンド (ショートカット &quot;x&quot;)を使って再コンパイルするとよいでしょう。このようなToDoリストを作成することで、そうすることができます。</target>
        </trans-unit>
        <trans-unit id="e58cc3e9504477ac39c3fae4556406d9e87fe8d4" translate="yes" xml:space="preserve">
          <source>Reordering file diffs that make up a patch does not affect the ID. In particular, two patches produced by comparing the same two trees with two different settings for &quot;-O&amp;lt;orderfile&amp;gt;&quot; result in the same patch ID signature, thereby allowing the computed result to be used as a key to index some meta-information about the change between the two trees;</source>
          <target state="translated">パッチを構成するファイルの差分を並べ替えても、IDには影響しません。特に、同じ2つのツリーを「-O &amp;lt;orderfile&amp;gt;」の2つの異なる設定と比較して作成された2つのパッチは、同じパッチIDシグネチャを生成するため、計算結果をキーとして使用して、 2本の木の間の変化;</target>
        </trans-unit>
        <trans-unit id="5727ab28a85a139867f62da8126eb9354b33a57a" translate="yes" xml:space="preserve">
          <source>Reordering or selecting from a patch series</source>
          <target state="translated">パッチシリーズの並び替えや選択</target>
        </trans-unit>
        <trans-unit id="25df8871189ca5637ebc8cd7aea9cae824ef4545" translate="yes" xml:space="preserve">
          <source>Repacking Historical Data</source>
          <target state="translated">履歴データのリパック</target>
        </trans-unit>
        <trans-unit id="456c003d09a0693bc8c7cb3458bf2ad8bbfc033f" translate="yes" xml:space="preserve">
          <source>Repair working tree administrative files, if possible, if they have become corrupted or outdated due to external factors.</source>
          <target state="translated">作業ツリーの管理ファイルが外的要因により破損したり、古くなっている場合は、可能であれば修復してください。</target>
        </trans-unit>
        <trans-unit id="9421c86863fd32deff3fd89fb282f96023d8e85d" translate="yes" xml:space="preserve">
          <source>Repeat the last two steps until your working tree is clean.</source>
          <target state="translated">作業ツリーがきれいになるまで、最後の2つのステップを繰り返します。</target>
        </trans-unit>
        <trans-unit id="834462c9f22bc02c77a9880295a7368517cb2349" translate="yes" xml:space="preserve">
          <source>Replace an existing tag with the given name (instead of failing)</source>
          <target state="translated">既存のタグを指定された名前で置き換える(失敗する代わりに</target>
        </trans-unit>
        <trans-unit id="7cf4729941401b21c05e226cfd4468a69f10bdc9" translate="yes" xml:space="preserve">
          <source>Replace each parent &lt;code&gt;P&lt;/code&gt; of &lt;code&gt;C'&lt;/code&gt; with its simplification &lt;code&gt;P'&lt;/code&gt;. In the process, drop parents that are ancestors of other parents or that are root commits TREESAME to an empty tree, and remove duplicates, but take care to never drop all parents that we are TREESAME to.</source>
          <target state="translated">&lt;code&gt;C'&lt;/code&gt; 各親 &lt;code&gt;P&lt;/code&gt; を単純化 &lt;code&gt;P'&lt;/code&gt; で置き換えます。このプロセスでは、他の親の祖先である親またはルートである親をドロップしてTREESAMEを空のツリーにコミットし、重複を削除しますが、TREESAMEの親をすべてドロップしないように注意してください。</target>
        </trans-unit>
        <trans-unit id="2f9605c49f9b2a3f616b81433e85ca64645d76b1" translate="yes" xml:space="preserve">
          <source>Replace the tip of the current branch by creating a new commit. The recorded tree is prepared as usual (including the effect of the &lt;code&gt;-i&lt;/code&gt; and &lt;code&gt;-o&lt;/code&gt; options and explicit pathspec), and the message from the original commit is used as the starting point, instead of an empty message, when no other message is specified from the command line via options such as &lt;code&gt;-m&lt;/code&gt;, &lt;code&gt;-F&lt;/code&gt;, &lt;code&gt;-c&lt;/code&gt;, etc. The new commit has the same parents and author as the current one (the &lt;code&gt;--reset-author&lt;/code&gt; option can countermand this).</source>
          <target state="translated">新しいコミットを作成して、現在のブランチの先端を置き換えます。記録されたツリーは通常どおり準備され（ &lt;code&gt;-i&lt;/code&gt; および &lt;code&gt;-o&lt;/code&gt; オプションと明示的なpathspec の影響を含みます）、他のメッセージが指定されていない場合、空のメッセージではなく、元のコミットからのメッセージが開始点として使用されますコマンドラインから &lt;code&gt;-m&lt;/code&gt; 、 &lt;code&gt;-F&lt;/code&gt; 、 &lt;code&gt;-c&lt;/code&gt; などのオプションを介して。新しいコミットは現在のものと同じ親と作成者を持っています（ &lt;code&gt;--reset-author&lt;/code&gt; オプションはこれに対抗できます）。</target>
        </trans-unit>
        <trans-unit id="f3cb9be6e266f94b26ae77ef70ae8b6ef0aebb1e" translate="yes" xml:space="preserve">
          <source>Replaced with long name (git-receive-pack, git-upload-pack, or git-upload-archive) of the service Git wants to invoke.</source>
          <target state="translated">Git が起動したいサービスの長い名前 (git-receive-pack,git-upload-pack,あるいは git-upload-archive)で置き換えます。</target>
        </trans-unit>
        <trans-unit id="bb8b07a94b19262ae05804fd3dbbad7507b398f9" translate="yes" xml:space="preserve">
          <source>Replaced with name (receive-pack, upload-pack, or upload-archive) of the service Git wants to invoke.</source>
          <target state="translated">Git が起動したいサービスの名前 (receive-pack、upload-pack、upload-archive)に置き換えます。</target>
        </trans-unit>
        <trans-unit id="daa118b2fa4fcb83d5d989f3e2085ec4ffc46e78" translate="yes" xml:space="preserve">
          <source>Replacement references will be used by default by all Git commands except those doing reachability traversal (prune, pack transfer and fsck).</source>
          <target state="translated">置換参照は、リーチャビリティ・トラバーサルを行うコマンド (prune、pack transfer、fsck)以外のすべての Git コマンドでデフォルトで使用されます。</target>
        </trans-unit>
        <trans-unit id="1c7de5212a432b2bb1d31f5a918c389962b1d1aa" translate="yes" xml:space="preserve">
          <source>Report all removed objects.</source>
          <target state="translated">削除されたオブジェクトをすべて報告します。</target>
        </trans-unit>
        <trans-unit id="7cf59cb5c9b7cd37a64d08b6f1df2d863445c6dc" translate="yes" xml:space="preserve">
          <source>Report bugs to the Git mailing list &amp;lt;&lt;a href=&quot;mailto:git@vger.kernel.org&quot;&gt;git@vger.kernel.org&lt;/a&gt;&amp;gt; where the development and maintenance is primarily done. You do not have to be subscribed to the list to send a message there. See the list archive at &lt;a href=&quot;https://lore.kernel.org/git&quot;&gt;https://lore.kernel.org/git&lt;/a&gt; for previous bug reports and other discussions.</source>
          <target state="translated">開発とメンテナンスが主に行われているGitメーリングリスト&amp;lt; &lt;a href=&quot;mailto:git@vger.kernel.org&quot;&gt;git@vger.kernel.org&lt;/a&gt; &amp;gt;にバグを報告してください。リストにメッセージを送信するためにリストに登録する必要はありません。以前のバグレポートやその他の議論については、&lt;a href=&quot;https://lore.kernel.org/git&quot;&gt;https：//lore.kernel.org/gitに&lt;/a&gt;あるリストアーカイブを参照してください。</target>
        </trans-unit>
        <trans-unit id="9c34aa6a8d095f4c3d50ca22d6cbaa490bb7d9e6" translate="yes" xml:space="preserve">
          <source>Report in more detail:</source>
          <target state="translated">詳細を報告します。</target>
        </trans-unit>
        <trans-unit id="00d1a1b2ba790dc8a5d0ef6f48b27324107dfa43" translate="yes" xml:space="preserve">
          <source>Report on the success or failure of the password. If the credential allowed the operation to complete successfully, then it can be marked with an &quot;approve&quot; action to tell &lt;code&gt;git
credential&lt;/code&gt; to reuse it in its next invocation. If the credential was rejected during the operation, use the &quot;reject&quot; action so that &lt;code&gt;git credential&lt;/code&gt; will ask for a new password in its next invocation. In either case, &lt;code&gt;git credential&lt;/code&gt; should be fed with the credential description obtained from step (2) (which also contain the ones provided in step (1)).</source>
          <target state="translated">パスワードの成功または失敗について報告します。資格情報によって操作が正常に完了した場合は、「承認」アクションでマークを付けて、 &lt;code&gt;git credential&lt;/code&gt; に次の呼び出しで再利用するように指示できます。クレデンシャルが操作中に拒否された場合は、「reject」アクションを使用して、 &lt;code&gt;git credential&lt;/code&gt; が次回の呼び出しで新しいパスワードを要求するようにします。どちらの場合でも、 &lt;code&gt;git credential&lt;/code&gt; には、ステップ（2）から取得したクレデンシャルの説明を入力する必要があります（これには、ステップ（1）で提供されたものも含まれます）。</target>
        </trans-unit>
        <trans-unit id="d2999561ae6989540b2fd61f56808ce48ec59875" translate="yes" xml:space="preserve">
          <source>Report progress to stderr.</source>
          <target state="translated">stderrに進捗状況を報告します。</target>
        </trans-unit>
        <trans-unit id="23ca6237e7b4d09b8d3d4523a8b69c6b949c38b4" translate="yes" xml:space="preserve">
          <source>Report progress to stderr. By default, only a message about the current patch being applied will be printed. This option will cause additional information to be reported.</source>
          <target state="translated">stderr に進捗状況を報告します。デフォルトでは、現在適用されているパッチに関するメッセージのみが表示されます。このオプションを使用すると、追加の情報が報告されます。</target>
        </trans-unit>
        <trans-unit id="40a5b594b81a1c53f8bc61470ed2acd9caeb657d" translate="yes" xml:space="preserve">
          <source>Report root nodes.</source>
          <target state="translated">ルートノードを報告します。</target>
        </trans-unit>
        <trans-unit id="f3f7b1acaa97f30c6a4351eea727e4482f68baad" translate="yes" xml:space="preserve">
          <source>Report tags.</source>
          <target state="translated">タグを報告します。</target>
        </trans-unit>
        <trans-unit id="ca0ca9c619773e28411f3305d3cdb605dc8f7d58" translate="yes" xml:space="preserve">
          <source>Report the list of objects being walked locally and the list of objects successfully sent to the remote repository.</source>
          <target state="translated">ローカルで歩行中のオブジェクトのリストと、リモートリポジトリに正常に送信されたオブジェクトのリストをレポートします。</target>
        </trans-unit>
        <trans-unit id="b0782f7c4e5f1bf3ea56caef9403677659089e74" translate="yes" xml:space="preserve">
          <source>Report the names of files as they are moved.</source>
          <target state="translated">移動したファイルの名前を報告します。</target>
        </trans-unit>
        <trans-unit id="3f95107453bf160f40698d26a88098aaa480cce8" translate="yes" xml:space="preserve">
          <source>Report what is being added and removed from index.</source>
          <target state="translated">インデックスから何を追加・削除しているかを報告します。</target>
        </trans-unit>
        <trans-unit id="d567f68fa956f7f96b358a6cc234fa317f99710f" translate="yes" xml:space="preserve">
          <source>Report what is downloaded.</source>
          <target state="translated">ダウンロードしたものを報告します。</target>
        </trans-unit>
        <trans-unit id="da402275b11a467df24029cc41a475356773c185" translate="yes" xml:space="preserve">
          <source>Reporting bugs</source>
          <target state="translated">バグの報告</target>
        </trans-unit>
        <trans-unit id="c91e6e6a538a5087a64a99718ae975966b761c1e" translate="yes" xml:space="preserve">
          <source>Repositories</source>
          <target state="translated">Repositories</target>
        </trans-unit>
        <trans-unit id="cc18a74ca85a5fe1dba71937009d7cf5c036f7f7" translate="yes" xml:space="preserve">
          <source>Repositories and branches</source>
          <target state="translated">リポジトリと支店</target>
        </trans-unit>
        <trans-unit id="3fb88b595be10aadddb6789d4ff575757e80830d" translate="yes" xml:space="preserve">
          <source>Repository administration</source>
          <target state="translated">リポジトリの管理</target>
        </trans-unit>
        <trans-unit id="df92bd52a2917a26c9495edc89977fc3eba4e3de" translate="yes" xml:space="preserve">
          <source>Repository maintenance</source>
          <target state="translated">リポジトリのメンテナンス</target>
        </trans-unit>
        <trans-unit id="9b33ca61629f451364a09b37b4533d1a6f2f1429" translate="yes" xml:space="preserve">
          <source>Repository specific configuration file.</source>
          <target state="translated">リポジトリ固有の設定ファイル。</target>
        </trans-unit>
        <trans-unit id="c748d884d06ef27fef856a77e77414daf14ef261" translate="yes" xml:space="preserve">
          <source>Repository specific configuration file. This file is ignored if $GIT_COMMON_DIR is set and &quot;$GIT_COMMON_DIR/config&quot; will be used instead.</source>
          <target state="translated">リポジトリ固有の設定ファイル。GIT_COMMON_DIRが設定されている場合、このファイルは無視され、代わりに&quot;$GIT_COMMON_DIR/config &quot;が使用されます。</target>
        </trans-unit>
        <trans-unit id="7394e3ce9096d2546e81d264f6ebc4e2faebef57" translate="yes" xml:space="preserve">
          <source>Represents a repository accessed using the helper program &quot;git-ssl foo.example /bar&quot;. The type of request can be determined by the helper using environment variables (see above).</source>
          <target state="translated">ヘルパープログラム &quot;git-ssl foo.example /bar&quot; を使用してアクセスしたリポジトリを表します。リクエストの種類は、環境変数を使用してヘルパーが決めることができます (上記を参照ください)。</target>
        </trans-unit>
        <trans-unit id="9c983b3418b85a3f9b204dd1418f6237fbf7bdab" translate="yes" xml:space="preserve">
          <source>Represents a repository with path /repo accessed using the helper program &quot;git-server-alias foo&quot;. The hostname for the remote server passed in the protocol stream will be &quot;foo&quot; (this allows multiple virtual Git servers to share a link-level address).</source>
          <target state="translated">パス /repo を持つリポジトリを表し、ヘルパープログラム &quot;git-server-alias foo&quot; を使用してアクセスします。プロトコルストリームで渡されるリモートサーバーのホスト名は &quot;foo&quot; となります (これにより、複数の仮想 Git サーバーがリンクレベルのアドレスを共有できるようになります)。</target>
        </trans-unit>
        <trans-unit id="1362aa2b16d7c974af6da4e16e1f2f2e57cebac0" translate="yes" xml:space="preserve">
          <source>Represents a repository with path /repo accessed using the helper program &quot;git-server-alias foo&quot;. The path to the repository and type of request are not passed on the command line but as part of the protocol stream, as usual with git:// protocol.</source>
          <target state="translated">パス /repo で、ヘルパープログラム &quot;git-server-alias foo&quot; を使用してアクセスしたリポジトリを表します。リポジトリへのパスとリクエストの種類は、コマンドラインではなくプロトコルストリームの一部として渡されます。</target>
        </trans-unit>
        <trans-unit id="d09e808fea175aed6c0426870e406a54311c7cc5" translate="yes" xml:space="preserve">
          <source>Represents a repository with path &lt;code&gt;/repo with spaces&lt;/code&gt; accessed using the helper program &quot;git-server-alias foo&quot;. The hostname for the remote server passed in the protocol stream will be &quot;foo&quot; (this allows multiple virtual Git servers to share a link-level address).</source>
          <target state="translated">ヘルパープログラム「git-server-alias foo」を使用してアクセスされる &lt;code&gt;/repo with spaces&lt;/code&gt; を含むパス/ repoを持つリポジトリを表します。プロトコルストリームで渡されるリモートサーバーのホスト名は「foo」になります（これにより、複数の仮想Gitサーバーがリンクレベルのアドレスを共有できるようになります）。</target>
        </trans-unit>
        <trans-unit id="2efb065a9a5c22367444476c2d3425647648ecad" translate="yes" xml:space="preserve">
          <source>Represents repository with path /somerepo accessible over git protocol at abstract namespace address /git-server.</source>
          <target state="translated">パス /somerepo を持つリポジトリを表し、抽象的な名前空間アドレス /git-server に git プロトコルでアクセスできるようにします。</target>
        </trans-unit>
        <trans-unit id="c8f4d396d0343dc3cd250d626642ac1b291769ac" translate="yes" xml:space="preserve">
          <source>Reproducing some bugs may require referencing particular commits or paths, which becomes challenging after refnames and paths have been anonymized. You can ask for a particular token to be left as-is or mapped to a new value. For example, if you have a bug which reproduces with &lt;code&gt;git rev-list sensitive -- secret.c&lt;/code&gt;, you can run:</source>
          <target state="translated">一部のバグを再現するには、特定のコミットまたはパスを参照する必要がある場合があります。これは、refnameおよびパスが匿名化された後に困難になります。特定のトークンをそのままにするか、新しい値にマップするように要求できます。たとえば、 &lt;code&gt;git rev-list sensitive -- secret.c&lt;/code&gt; で再現されるバグがある場合は、次のコマンドを実行できます。</target>
        </trans-unit>
        <trans-unit id="b0b1f0b6a8581523745f21b4e1b374268151683b" translate="yes" xml:space="preserve">
          <source>Reproduction steps</source>
          <target state="translated">再現ステップ</target>
        </trans-unit>
        <trans-unit id="19e1ed64e856e6f12f5bac77f5299cded049014e" translate="yes" xml:space="preserve">
          <source>Request a single valid revision from the user, and set the &lt;code&gt;REVISION&lt;/code&gt; environment variable. In other aspects this option is similar to &lt;code&gt;argPrompt&lt;/code&gt;, and can be used together with it.</source>
          <target state="translated">ユーザーに単一の有効なリビジョンを要求し、 &lt;code&gt;REVISION&lt;/code&gt; 環境変数を設定します。他の側面では、このオプションは &lt;code&gt;argPrompt&lt;/code&gt; に似ており、それと一緒に使用できます。</target>
        </trans-unit>
        <trans-unit id="197fbdc9cd47b824a513f297f7a38d2715e6a37f" translate="yes" xml:space="preserve">
          <source>Request a string argument from the user, and pass it to the tool through the &lt;code&gt;ARGS&lt;/code&gt; environment variable. Since requesting an argument implies confirmation, the &lt;code&gt;confirm&lt;/code&gt; option has no effect if this is enabled. If the option is set to &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;yes&lt;/code&gt;, or &lt;code&gt;1&lt;/code&gt;, the dialog uses a built-in generic prompt; otherwise the exact value of the variable is used.</source>
          <target state="translated">ユーザーに文字列引数を要求し、それを &lt;code&gt;ARGS&lt;/code&gt; 環境変数を介してツールに渡します。引数の要求は確認を意味するため、これが有効になっている場合、 &lt;code&gt;confirm&lt;/code&gt; オプションは効果がありません。オプションが &lt;code&gt;true&lt;/code&gt; 、 &lt;code&gt;yes&lt;/code&gt; 、または &lt;code&gt;1&lt;/code&gt; に設定されている場合、ダイアログは組み込みの汎用プロンプトを使用します。それ以外の場合は、変数の正確な値が使用されます。</target>
        </trans-unit>
        <trans-unit id="af76b31829a8dd5cf3635494d51216915adc4665" translate="yes" xml:space="preserve">
          <source>Request the helper to check connectivity of a clone.</source>
          <target state="translated">クローンの接続性を確認するためにヘルパーを要求します。</target>
        </trans-unit>
        <trans-unit id="c38d97d1cdb590002eb1b4ddac901b5b9f2b5245" translate="yes" xml:space="preserve">
          <source>Request the helper to perform a force update. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">ヘルパーに強制更新を要求します。デフォルトは &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ca0eaa75282457b7cf284de87b05023d92c795d5" translate="yes" xml:space="preserve">
          <source>Requesting credentials</source>
          <target state="translated">信任状を要求する</target>
        </trans-unit>
        <trans-unit id="c253c74295e6d26ab1e36992edc46329d8f4d039" translate="yes" xml:space="preserve">
          <source>Requests writing one file revision to the packfile. The revision is not connected to any commit; this connection must be formed in a subsequent &lt;code&gt;commit&lt;/code&gt; command by referencing the blob through an assigned mark.</source>
          <target state="translated">1つのファイルリビジョンをpackfileに書き込むように要求します。リビジョンはコミットに関連付けられていません。この接続は、割り当てられたマークを介してblobを参照する &lt;code&gt;commit&lt;/code&gt; により、後続のcommitコマンドで形成する必要があります。</target>
        </trans-unit>
        <trans-unit id="f1bfe97ddeff74e34e5c2b1e166cee78ba2487b9" translate="yes" xml:space="preserve">
          <source>Require that fast-import supports the specified feature, or abort if it does not.</source>
          <target state="translated">fast-import が指定された機能をサポートしていることを要求するか、サポートしていない場合はアボートします。</target>
        </trans-unit>
        <trans-unit id="6316856b66b77d95afc0c3453708e583c5e94170" translate="yes" xml:space="preserve">
          <source>Require that the backend support the &lt;code&gt;get-mark&lt;/code&gt;, &lt;code&gt;cat-blob&lt;/code&gt;, or &lt;code&gt;ls&lt;/code&gt; command respectively. Versions of fast-import not supporting the specified command will exit with a message indicating so. This lets the import error out early with a clear message, rather than wasting time on the early part of an import before the unsupported command is detected.</source>
          <target state="translated">バックエンドがそれぞれ &lt;code&gt;get-mark&lt;/code&gt; 、 &lt;code&gt;cat-blob&lt;/code&gt; 、または &lt;code&gt;ls&lt;/code&gt; コマンドをサポートすることを要求します。指定されたコマンドをサポートしないfast-importのバージョンは、そのことを示すメッセージで終了します。これにより、サポートされていないコマンドが検出される前にインポートの早い段階で時間を浪費するのではなく、明確なメッセージでインポートエラーを早期に排除できます。</target>
        </trans-unit>
        <trans-unit id="237f6cde559246995a9ad3fe3a19f1f678ef3d45" translate="yes" xml:space="preserve">
          <source>Require that the backend support the &lt;code&gt;notemodify&lt;/code&gt; (N) subcommand to the &lt;code&gt;commit&lt;/code&gt; command. Versions of fast-import not supporting notes will exit with a message indicating so.</source>
          <target state="translated">バックエンドが &lt;code&gt;commit&lt;/code&gt; コマンドに対する &lt;code&gt;notemodify&lt;/code&gt; （N）サブコマンドをサポートすることを要求します。メモをサポートしないfast-importのバージョンは、そのことを示すメッセージで終了します。</target>
        </trans-unit>
        <trans-unit id="2bdd979f5fb070ff3c7f85169894f3f721c9ebce" translate="yes" xml:space="preserve">
          <source>Requires &lt;code&gt;--stdout&lt;/code&gt;. Omits certain objects (usually blobs) from the resulting packfile. See &lt;a href=&quot;git-rev-list&quot;&gt;git-rev-list[1]&lt;/a&gt; for valid &lt;code&gt;&amp;lt;filter-spec&amp;gt;&lt;/code&gt; forms.</source>
          <target state="translated">&lt;code&gt;--stdout&lt;/code&gt; が必要です。結果のpackfileから特定のオブジェクト（通常はblob）を省略します。有効な &lt;code&gt;&amp;lt;filter-spec&amp;gt;&lt;/code&gt; 形式については、&lt;a href=&quot;git-rev-list&quot;&gt;git-rev-list [1]&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="fc9ece81e668f48ca0c9284b17719cfe0a863c67" translate="yes" xml:space="preserve">
          <source>Reserved characters are: &quot;%&quot; (used for encoding), &quot;+&quot; (can be used to encode SPACE), all whitespace characters as defined in Perl, including SP, TAB and LF, (used to separate fields in a record).</source>
          <target state="translated">予約文字は以下の通りです。&quot;(エンコードに使用)、&quot;+&quot; (スペースのエンコードに使用)、Perlで定義されているすべての空白文字(SP、TAB、LFを含む)、 (レコード内のフィールドを分離するために使用)。</target>
        </trans-unit>
        <trans-unit id="b42218495bd708d0856afd1fabb98c3577f4ad60" translate="yes" xml:space="preserve">
          <source>Reserved instruction</source>
          <target state="translated">予約命令</target>
        </trans-unit>
        <trans-unit id="ade58d6ef106ac4468b520e2f9f718942ef96589" translate="yes" xml:space="preserve">
          <source>Reset &amp;lt;branchname&amp;gt; to &amp;lt;startpoint&amp;gt;, even if &amp;lt;branchname&amp;gt; exists already. Without &lt;code&gt;-f&lt;/code&gt;, &lt;code&gt;git branch&lt;/code&gt; refuses to change an existing branch. In combination with &lt;code&gt;-d&lt;/code&gt; (or &lt;code&gt;--delete&lt;/code&gt;), allow deleting the branch irrespective of its merged status. In combination with &lt;code&gt;-m&lt;/code&gt; (or &lt;code&gt;--move&lt;/code&gt;), allow renaming the branch even if the new branch name already exists, the same applies for &lt;code&gt;-c&lt;/code&gt; (or &lt;code&gt;--copy&lt;/code&gt;).</source>
          <target state="translated">&amp;lt;branchname&amp;gt;がすでに存在する場合でも、&amp;lt;branchname&amp;gt;を&amp;lt;startpoint&amp;gt;にリセットします。 &lt;code&gt;-f&lt;/code&gt; がないと、 &lt;code&gt;git branch&lt;/code&gt; は既存のブランチの変更を拒否します。 &lt;code&gt;-d&lt;/code&gt; （または &lt;code&gt;--delete&lt;/code&gt; ）と組み合わせて、マージされたステータスに関係なくブランチを削除できるようにします。 &lt;code&gt;-m&lt;/code&gt; （または &lt;code&gt;--move&lt;/code&gt; ）と組み合わせて、新しいブランチ名がすでに存在する場合でもブランチの名前を変更できるようにします。同じことが &lt;code&gt;-c&lt;/code&gt; （または &lt;code&gt;--copy&lt;/code&gt; ）にも当てはまります。</target>
        </trans-unit>
        <trans-unit id="9c000dded32d603bd2d66f7de30922c3049331d8" translate="yes" xml:space="preserve">
          <source>Reset a single file in the index</source>
          <target state="translated">インデックス内の単一ファイルをリセット</target>
        </trans-unit>
        <trans-unit id="b199a41a6acc73bab0e76970a8b89b9149933695" translate="yes" xml:space="preserve">
          <source>Reset an existing branch (or a new branch) to a specific revision. This command must be used to change a branch to a specific revision without making a commit on it.</source>
          <target state="translated">既存のブランチ (または新規ブランチ)を特定のリビジョンにリセットします。このコマンドは、ブランチをコミットせずに特定のリビジョンに変更するために使用しなければなりません。</target>
        </trans-unit>
        <trans-unit id="3caab3d6f602d251b347bcf8cb43ce25777589d7" translate="yes" xml:space="preserve">
          <source>Reset current HEAD to the specified state</source>
          <target state="translated">現在のHEADを指定された状態にリセットします。</target>
        </trans-unit>
        <trans-unit id="7000155564e143a5ed7b021bd65e423555a02d6b" translate="yes" xml:space="preserve">
          <source>Reset the conflict resolutions which rerere has recorded for the current conflict in &amp;lt;pathspec&amp;gt;.</source>
          <target state="translated">&amp;lt;pathspec&amp;gt;の現在の競合について、rerereが記録した競合解決をリセットします。</target>
        </trans-unit>
        <trans-unit id="4a789604fce06a1f57b66b342300476ce0a41423" translate="yes" xml:space="preserve">
          <source>Reset the metadata used by rerere if a merge resolution is to be aborted. Calling &lt;code&gt;git am [--skip|--abort]&lt;/code&gt; or &lt;code&gt;git rebase [--skip|--abort]&lt;/code&gt; will automatically invoke this command.</source>
          <target state="translated">マージ解決を中止する場合は、rerereが使用するメタデータをリセットします。呼び出し &lt;code&gt;git am [--skip|--abort]&lt;/code&gt; または &lt;code&gt;git rebase [--skip|--abort]&lt;/code&gt; は自動的にこのコマンドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="e58c6724a36573568d9a717f014941c665fe0e5c" translate="yes" xml:space="preserve">
          <source>Reset, restore and revert</source>
          <target state="translated">リセット、復元、元に戻す</target>
        </trans-unit>
        <trans-unit id="cfb6b4d825df9b6e5392392c169da218cc9ebb7e" translate="yes" xml:space="preserve">
          <source>Resets index entries and updates files in the working tree that are different between &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; and &lt;code&gt;HEAD&lt;/code&gt;. If a file that is different between &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; and &lt;code&gt;HEAD&lt;/code&gt; has local changes, reset is aborted.</source>
          <target state="translated">&lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; と &lt;code&gt;HEAD&lt;/code&gt; で異なる作業ツリーのインデックスエントリと更新ファイルをリセットします。 &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; と &lt;code&gt;HEAD&lt;/code&gt; で異なるファイルにローカルの変更がある場合、リセットは中止されます。</target>
        </trans-unit>
        <trans-unit id="37918ef314fe9073b027113123d9b71065a3aa0b" translate="yes" xml:space="preserve">
          <source>Resets the index and updates the files in the working tree that are different between &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; and &lt;code&gt;HEAD&lt;/code&gt;, but keeps those which are different between the index and working tree (i.e. which have changes which have not been added). If a file that is different between &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; and the index has unstaged changes, reset is aborted.</source>
          <target state="translated">インデックスをリセットし、 &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; と &lt;code&gt;HEAD&lt;/code&gt; で異なる作業ツリーのファイルを更新しますが、インデックスと作業ツリーで異なるファイル（つまり、追加されていない変更があるファイル）は保持します。 &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; とインデックスで異なるファイルにステージングされていない変更がある場合、リセットは中止されます。</target>
        </trans-unit>
        <trans-unit id="66814a725afb76705c792c5c5bff2effba54bba2" translate="yes" xml:space="preserve">
          <source>Resets the index and working tree. Any changes to tracked files in the working tree since &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; are discarded.</source>
          <target state="translated">インデックスと作業ツリーをリセットします。 &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; 以降の作業ツリー内の追跡ファイルへの変更は破棄されます。</target>
        </trans-unit>
        <trans-unit id="018c5d5ee267c3048a66b8317e0b378d380cebd3" translate="yes" xml:space="preserve">
          <source>Resets the index but not the working tree (i.e., the changed files are preserved but not marked for commit) and reports what has not been updated. This is the default action.</source>
          <target state="translated">インデックスをリセットしますが、作業ツリーはリセットされません (つまり、変更されたファイルは保存されますが、コミットのためにマークされていません)そして、更新されていないものを報告します。これがデフォルトのアクションです。</target>
        </trans-unit>
        <trans-unit id="367477f47d978611bcd2955ee4ebc351a609da8a" translate="yes" xml:space="preserve">
          <source>Resolve &quot;$GIT_DIR/&amp;lt;path&amp;gt;&quot; and takes other path relocation variables such as $GIT_OBJECT_DIRECTORY, $GIT_INDEX_FILE&amp;hellip;​ into account. For example, if $GIT_OBJECT_DIRECTORY is set to /foo/bar then &quot;git rev-parse --git-path objects/abc&quot; returns /foo/bar/abc.</source>
          <target state="translated">「$ GIT_DIR / &amp;lt;path&amp;gt;」を解決し、$ GIT_OBJECT_DIRECTORY、$ GIT_INDEX_FILE&amp;hellip;などの他のパス再配置変数を考慮に入れます。たとえば、$ GIT_OBJECT_DIRECTORYが/ foo / barに設定されている場合、「git rev-parse --git-path objects / abc」は/ foo / bar / abcを返します。</target>
        </trans-unit>
        <trans-unit id="c8bb6fc86c763639a02a3bc6b6e1886e0912fa99" translate="yes" xml:space="preserve">
          <source>Resolve the conflicts. Git will mark the conflicts in the working tree. Edit the files into shape and &lt;code&gt;git add&lt;/code&gt; them to the index. Use &lt;code&gt;git commit&lt;/code&gt; or &lt;code&gt;git merge --continue&lt;/code&gt; to seal the deal. The latter command checks whether there is a (interrupted) merge in progress before calling &lt;code&gt;git commit&lt;/code&gt;.</source>
          <target state="translated">競合を解決します。Gitは作業ツリーで競合をマークします。ファイルを整形して &lt;code&gt;git add&lt;/code&gt; インデックスに追加します。 &lt;code&gt;git commit&lt;/code&gt; または &lt;code&gt;git merge --continue&lt;/code&gt; を使用して契約を締結します。後者のコマンドは、 &lt;code&gt;git commit&lt;/code&gt; を呼び出す前に、進行中の（中断された）マージがあるかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="40be4fe30543d88c430c41f2a76b60f305a6a06a" translate="yes" xml:space="preserve">
          <source>Resolving a merge</source>
          <target state="translated">マージの解決</target>
        </trans-unit>
        <trans-unit id="3aa5d718d6655d399867529b5e479166f7b70223" translate="yes" xml:space="preserve">
          <source>Respect &lt;code&gt;include.*&lt;/code&gt; directives in config files when looking up values. Defaults to &lt;code&gt;off&lt;/code&gt; when a specific file is given (e.g., using &lt;code&gt;--file&lt;/code&gt;, &lt;code&gt;--global&lt;/code&gt;, etc) and &lt;code&gt;on&lt;/code&gt; when searching all config files.</source>
          <target state="translated">値を検索するときは、設定ファイルの &lt;code&gt;include.*&lt;/code&gt; ディレクティブを尊重してください。特定のファイルが指定さ &lt;code&gt;off&lt;/code&gt; 場合（たとえば、-- &lt;code&gt;--file&lt;/code&gt; 、-- &lt;code&gt;--global&lt;/code&gt; などを使用する場合）はデフォルトでオフになり、すべての構成ファイルを検索 &lt;code&gt;on&lt;/code&gt; 場合はオンになります。</target>
        </trans-unit>
        <trans-unit id="3821457277b56f085d69d5b77c2d88808f6181de" translate="yes" xml:space="preserve">
          <source>Respect any colors specified in the &lt;code&gt;--format&lt;/code&gt; option. The &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; field must be one of &lt;code&gt;always&lt;/code&gt;, &lt;code&gt;never&lt;/code&gt;, or &lt;code&gt;auto&lt;/code&gt; (if &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; is absent, behave as if &lt;code&gt;always&lt;/code&gt; was given).</source>
          <target state="translated">&lt;code&gt;--format&lt;/code&gt; オプションで指定された色を順守します。 &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; フィールドには、のいずれかでなければなりません &lt;code&gt;always&lt;/code&gt; 、 &lt;code&gt;never&lt;/code&gt; 、または &lt;code&gt;auto&lt;/code&gt; （場合 &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; 不在で、振る舞いがあるかのように &lt;code&gt;always&lt;/code&gt; 与えられました）。</target>
        </trans-unit>
        <trans-unit id="19c837ff313a7ba1f889a299cee54a40a7c6f84b" translate="yes" xml:space="preserve">
          <source>Responses to commands</source>
          <target state="translated">コマンドへの対応</target>
        </trans-unit>
        <trans-unit id="cc0464b7666785d6a76e9f773de6c54d764f7865" translate="yes" xml:space="preserve">
          <source>Restart the httpd instance and exit. Regenerate configuration files as necessary for spawning a new instance.</source>
          <target state="translated">httpd インスタンスを再起動して終了します。新しいインスタンスを生成するために必要な設定ファイルを再生成します。</target>
        </trans-unit>
        <trans-unit id="8887a5fdf01dac377097b251a845eb9047ab1106" translate="yes" xml:space="preserve">
          <source>Restart the rebasing process after having resolved a merge conflict.</source>
          <target state="translated">マージの競合を解決した後、リベース処理を再開します。</target>
        </trans-unit>
        <trans-unit id="d21d225ced39acf1075b76301dc02cbf10edbb3b" translate="yes" xml:space="preserve">
          <source>Restart the rebasing process by skipping the current patch.</source>
          <target state="translated">現在のパッチをスキップしてリベース処理を再開します。</target>
        </trans-unit>
        <trans-unit id="c1f6ec05a9a6600d16e6b449eaa642ea5102eab3" translate="yes" xml:space="preserve">
          <source>Restore specified paths in the working tree with some contents from a restore source. If a path is tracked but does not exist in the restore source, it will be removed to match the source.</source>
          <target state="translated">作業ツリー内の指定されたパスを、復元ソースから一部の内容で復元します。パスが追跡されているが復元ソースに存在しない場合は、ソースに一致するように削除されます。</target>
        </trans-unit>
        <trans-unit id="264c55416cc1f357f0822f338666c6b7bdbad148" translate="yes" xml:space="preserve">
          <source>Restore the original branch and abort the patching operation.</source>
          <target state="translated">元のブランチを復元して、パッチ操作を中止します。</target>
        </trans-unit>
        <trans-unit id="96e0fd08d6591454dd62291fbfc1b15a5b3e040c" translate="yes" xml:space="preserve">
          <source>Restore the working tree files with the content from the given tree. It is common to specify the source tree by naming a commit, branch or tag associated with it.</source>
          <target state="translated">指定したツリーの内容で作業ツリーファイルを復元します。ソースツリーに関連するコミット、ブランチ、タグを指定して指定するのが一般的です。</target>
        </trans-unit>
        <trans-unit id="37dff9bce765051722ec36426d7fa455df094071" translate="yes" xml:space="preserve">
          <source>Restore working tree files</source>
          <target state="translated">作業ツリーファイルの復元</target>
        </trans-unit>
        <trans-unit id="69b489de455beab1530c19815d63b57591075bcd" translate="yes" xml:space="preserve">
          <source>Restores the &lt;code&gt;unmerged&lt;/code&gt; or &lt;code&gt;needs updating&lt;/code&gt; state of a file during a merge if it was cleared by accident.</source>
          <target state="translated">誤って消去された場合、マージ中にファイルの &lt;code&gt;unmerged&lt;/code&gt; 状態または &lt;code&gt;needs updating&lt;/code&gt; 状態を復元します。</target>
        </trans-unit>
        <trans-unit id="9851dc086eda7e8d693a5cc6867fc0671874ff9d" translate="yes" xml:space="preserve">
          <source>Restrict delta matches based on &quot;islands&quot;. See DELTA ISLANDS below.</source>
          <target state="translated">島」に基づいてデルタのマッチを制限します。下記の「デルタ諸島」を参照してください。</target>
        </trans-unit>
        <trans-unit id="8b8a383fd6388c6ea73ba5d43ff2fb9ca48cf7d7" translate="yes" xml:space="preserve">
          <source>Restrict three-way merge by &lt;code&gt;git read-tree&lt;/code&gt; to happen only if there is no file-level merging required, instead of resolving merge for trivial cases and leaving conflicting files unresolved in the index.</source>
          <target state="translated">&lt;code&gt;git read-tree&lt;/code&gt; による3者間マージを、ファイルレベルのマージが不要な場合にのみ発生するように制限します。些細な場合にマージを解決して、競合するファイルをインデックスに解決しないままにします。</target>
        </trans-unit>
        <trans-unit id="3872426d236e98107658a5fa4ce3ec35943effaa" translate="yes" xml:space="preserve">
          <source>Restricted login shell for Git-only SSH access</source>
          <target state="translated">Git のみの SSH アクセスのための制限付きログインシェル</target>
        </trans-unit>
        <trans-unit id="8aededfb12d70887c4524cf03227b8b417c18d04" translate="yes" xml:space="preserve">
          <source>Result is different from the value produced by git 1.9 and older or produced when an &quot;unstable&quot; hash (see --unstable below) is configured - even when used on a diff output taken without any use of &quot;-O&amp;lt;orderfile&amp;gt;&quot;, thereby making existing databases storing such &quot;unstable&quot; or historical patch-ids unusable.</source>
          <target state="translated">結果はgit 1.9以前で生成された値、または「不安定な」ハッシュ（下記の--unstableを参照）が構成されたときに生成された値とは異なります。そのため、そのような「不安定」な、または過去のパッチIDを格納する既存のデータベースが使用できなくなります。</target>
        </trans-unit>
        <trans-unit id="dd0be3ab949b7f61e7a99aac2ba7a208d6ea3a63" translate="yes" xml:space="preserve">
          <source>Retrieve and store user credentials</source>
          <target state="translated">ユーザー資格情報の取得と保存</target>
        </trans-unit>
        <trans-unit id="5a212fd6a296588049eb570292b8fddf3b170728" translate="yes" xml:space="preserve">
          <source>Retrieves the URLs for a remote. Configurations for &lt;code&gt;insteadOf&lt;/code&gt; and &lt;code&gt;pushInsteadOf&lt;/code&gt; are expanded here. By default, only the first URL is listed.</source>
          <target state="translated">リモートのURLを取得します。ここでは、 &lt;code&gt;insteadOf&lt;/code&gt; と &lt;code&gt;pushInsteadOf&lt;/code&gt; の設定を展開しています。デフォルトでは、最初のURLのみがリストされます。</target>
        </trans-unit>
        <trans-unit id="9396c18e702afc19006375ff866bd100e0e10678" translate="yes" xml:space="preserve">
          <source>Return a matching credential, if any exists.</source>
          <target state="translated">一致するクレデンシャルが存在する場合は、それを返します。</target>
        </trans-unit>
        <trans-unit id="0f444cb29e88624498c6ae42d5b37c68efa3bab0" translate="yes" xml:space="preserve">
          <source>Returns the commit in plain text mail format, suitable for applying with &lt;a href=&quot;git-am&quot;&gt;git-am[1]&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;git-am&quot;&gt;git-am [1]&lt;/a&gt;での適用に適したプレーンテキストメール形式でコミットを返します。</target>
        </trans-unit>
        <trans-unit id="9253efc397e5de345aa951a00d2c23f86bf7df99" translate="yes" xml:space="preserve">
          <source>Returns the raw data for the file in given repository, at given path and revision. Links to this action are marked &lt;code&gt;raw&lt;/code&gt;.</source>
          <target state="translated">指定されたパスとリビジョンで、指定されたリポジトリ内のファイルの生データを返します。このアクションへのリンクは &lt;code&gt;raw&lt;/code&gt; としてマークされます。</target>
        </trans-unit>
        <trans-unit id="5df164550e4b46ec040a3d56bf7256552cf4621c" translate="yes" xml:space="preserve">
          <source>Reuse recorded resolution of conflicted merges</source>
          <target state="translated">競合するマージの記録された解決策を再利用</target>
        </trans-unit>
        <trans-unit id="8616b41a55b6598a78826f975dbbf7f7f8695b39" translate="yes" xml:space="preserve">
          <source>Reverse CVS keyword expansion (e.g. $Revision: 1.2.3.4$ becomes $Revision$) in working CVS checkout before applying patch.</source>
          <target state="translated">パッチを適用する前に、動作中の CVS チェックアウトで CVS キーワードの展開を逆にします (例:$Revision:1.2.3.4$ は $Revision$ になります)。</target>
        </trans-unit>
        <trans-unit id="09d255659c37629cf7ad5a71d93e459ba7907206" translate="yes" xml:space="preserve">
          <source>Reverses the meaning of the &lt;code&gt;^&lt;/code&gt; prefix (or lack thereof) for all following revision specifiers, up to the next &lt;code&gt;--not&lt;/code&gt;.</source>
          <target state="translated">次の &lt;code&gt;--not&lt;/code&gt; まで、以降のすべてのリビジョン指定子の &lt;code&gt;^&lt;/code&gt; 接頭辞（またはその欠如）の意味を逆にします。</target>
        </trans-unit>
        <trans-unit id="f5ecc3a2c0ef8c576038e5331d800290aa1dbb34" translate="yes" xml:space="preserve">
          <source>Revert some existing commits</source>
          <target state="translated">いくつかの既存のコミットを元に戻す</target>
        </trans-unit>
        <trans-unit id="2d05a07b19af8782049520b85fa598b5aae8245a" translate="yes" xml:space="preserve">
          <source>Revert the changes done by commits from the fifth last commit in master (included) to the third last commit in master (included), but do not create any commit with the reverted changes. The revert only modifies the working tree and the index.</source>
          <target state="translated">master (含む)の 5 番目の最後のコミットから master (含む)の 3 番目の最後のコミットまでのコミットで行われた変更を元に戻しますが、元に戻した変更を含むコミットは作成しないでください。戻しは作業ツリーとインデックスを変更するだけです。</target>
        </trans-unit>
        <trans-unit id="d36b73a7d31ce14514491b7bd667f4a3a39a76f3" translate="yes" xml:space="preserve">
          <source>Revert the changes specified by the fourth last commit in HEAD and create a new commit with the reverted changes.</source>
          <target state="translated">HEADの4番目の最後のコミットで指定された変更を元に戻し、元に戻した変更で新しいコミットを作成します。</target>
        </trans-unit>
        <trans-unit id="7816a94047b619334a2511ddb1fb3870ada25153" translate="yes" xml:space="preserve">
          <source>Reverting a merge commit declares that you will never want the tree changes brought in by the merge. As a result, later merges will only bring in tree changes introduced by commits that are not ancestors of the previously reverted merge. This may or may not be what you want.</source>
          <target state="translated">マージのコミットを戻すと、マージによってもたらされたツリーの変更は絶対に行わないことを宣言します。その結果、それ以降のマージでは、以前に戻したマージの先祖ではないコミットによってもたらされたツリーの変更のみが反映されます。これは、あなたが望んでいることではないかもしれません。</target>
        </trans-unit>
        <trans-unit id="e1541e4f3b28e3bf9bf5cd6cdf1c6fa7c5066ac0" translate="yes" xml:space="preserve">
          <source>Review and edit each patch you&amp;rsquo;re about to send. Default is the value of &lt;code&gt;sendemail.annotate&lt;/code&gt;. See the CONFIGURATION section for &lt;code&gt;sendemail.multiEdit&lt;/code&gt;.</source>
          <target state="translated">送信する各パッチを確認および編集します。デフォルトは &lt;code&gt;sendemail.annotate&lt;/code&gt; の値です。 &lt;code&gt;sendemail.multiEdit&lt;/code&gt; のCONFIGURATIONセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="b78ae7131226d816b60a3640c70615147c2668fc" translate="yes" xml:space="preserve">
          <source>Revision range summary</source>
          <target state="translated">改訂範囲の概要</target>
        </trans-unit>
        <trans-unit id="0e507d58daf108f33aa81c2ab9d974a6ce0836d6" translate="yes" xml:space="preserve">
          <source>Revision shown. Defaults to HEAD.</source>
          <target state="translated">リビジョンが表示されます。デフォルトは HEAD です。</target>
        </trans-unit>
        <trans-unit id="2dba79611a64646631612329658c566246fbc9f0" translate="yes" xml:space="preserve">
          <source>Revisions</source>
          <target state="translated">Revisions</target>
        </trans-unit>
        <trans-unit id="0b4be1f6169f38f3814188ca6321f0baef4e8d0e" translate="yes" xml:space="preserve">
          <source>Revisions come first and then paths. E.g. in &lt;code&gt;git diff v1.0 v2.0 arch/x86 include/asm-x86&lt;/code&gt;, &lt;code&gt;v1.0&lt;/code&gt; and &lt;code&gt;v2.0&lt;/code&gt; are revisions and &lt;code&gt;arch/x86&lt;/code&gt; and &lt;code&gt;include/asm-x86&lt;/code&gt; are paths.</source>
          <target state="translated">改訂が最初に来て、次にパス。たとえば、 &lt;code&gt;git diff v1.0 v2.0 arch/x86 include/asm-x86&lt;/code&gt; 、 &lt;code&gt;v1.0&lt;/code&gt; および &lt;code&gt;v2.0&lt;/code&gt; はリビジョンで、 &lt;code&gt;arch/x86&lt;/code&gt; および &lt;code&gt;include/asm-x86&lt;/code&gt; はパスです。</target>
        </trans-unit>
        <trans-unit id="7becdbbb2a8732024f87ab2931981f680230ef94" translate="yes" xml:space="preserve">
          <source>Rewind the master branch to get rid of those three commits.</source>
          <target state="translated">マスターブランチを巻き戻して、これらの 3 つのコミットを削除します。</target>
        </trans-unit>
        <trans-unit id="23707433283a99c49d086ac3b852fb7dc5a49bd7" translate="yes" xml:space="preserve">
          <source>Rewrite branches</source>
          <target state="translated">ブランチの書き換え</target>
        </trans-unit>
        <trans-unit id="1f772054df9f197c59794505debe5263bced78f0" translate="yes" xml:space="preserve">
          <source>Rewrite the object IDs for the submodule specified by &amp;lt;name&amp;gt; from the values used in the from &amp;lt;file&amp;gt; to those used in the to &amp;lt;file&amp;gt;. The from marks should have been created by &lt;code&gt;git fast-export&lt;/code&gt;, and the to marks should have been created by &lt;code&gt;git fast-import&lt;/code&gt; when importing that same submodule.</source>
          <target state="translated">&amp;lt;name&amp;gt;で指定されたサブモジュールのオブジェクトIDを、from &amp;lt;file&amp;gt;で使用されている値からto &amp;lt;file&amp;gt;で使用されている値に書き換えます。同じサブモジュールを &lt;code&gt;git fast-import&lt;/code&gt; 場合、fromマークは &lt;code&gt;git fast-export&lt;/code&gt; によって作成され、toマークはgitfast-importによって作成されている必要があります。</target>
        </trans-unit>
        <trans-unit id="51c6d6dea3e502e9d6305607675f5d9cfa096787" translate="yes" xml:space="preserve">
          <source>Rewriting a single commit</source>
          <target state="translated">シングルコミットの書き換え</target>
        </trans-unit>
        <trans-unit id="f0b0b0c2a8ee1155d88307c80fb06e1df9172561" translate="yes" xml:space="preserve">
          <source>Rewriting history and maintaining patch series</source>
          <target state="translated">履歴の書き換えとパッチシリーズのメンテナンス</target>
        </trans-unit>
        <trans-unit id="b4a0f73cd12119000c1f6312d5dd619dd0ae5fda" translate="yes" xml:space="preserve">
          <source>Root of the Maildir to split. This directory should contain the cur, tmp and new subdirectories.</source>
          <target state="translated">分割するMaildirのルート。このディレクトリには cur,tmp,new サブディレクトリが含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="afeb98169e5519ad4e553da5035454587d62f649" translate="yes" xml:space="preserve">
          <source>Roughly speaking, there are two important workflows: merge and patch. The important difference is that the merge workflow can propagate full history, including merges, while patches cannot. Both workflows can be used in parallel: in &lt;code&gt;git.git&lt;/code&gt;, only subsystem maintainers use the merge workflow, while everyone else sends patches.</source>
          <target state="translated">大まかに言えば、マージとパッチという2つの重要なワークフローがあります。重要な違いは、マージワークフローはマージを含む完全な履歴を伝達できますが、パッチは伝達できないことです。両方のワークフローを並行して使用できます &lt;code&gt;git.git&lt;/code&gt; では、サブシステムのメンテナーのみがマージワークフローを使用し、他の全員はパッチを送信します。</target>
        </trans-unit>
        <trans-unit id="4ad3e9112d465fbfd17a48a5928f94fb9df2be8b" translate="yes" xml:space="preserve">
          <source>Routines to help parsing remote repository access parameters</source>
          <target state="translated">リモートリポジトリのアクセスパラメータの解析を支援するルーチン</target>
        </trans-unit>
        <trans-unit id="3495f8aaa83c51339b8e8d234a997810c199e605" translate="yes" xml:space="preserve">
          <source>Rule: Merge to downstream only at well-defined points</source>
          <target state="translated">ルール。十分に定義されたポイントでのみ下流にマージします。</target>
        </trans-unit>
        <trans-unit id="09660bd61221506e477e31f1dd27fab9f41227cb" translate="yes" xml:space="preserve">
          <source>Rule: Merge upwards</source>
          <target state="translated">ルール 上向きにマージ</target>
        </trans-unit>
        <trans-unit id="54160ff726068ad54950593ff8fc01c56330b6b4" translate="yes" xml:space="preserve">
          <source>Rule: Throw-away integration branches</source>
          <target state="translated">ルール。投げやりな統合ブランチ</target>
        </trans-unit>
        <trans-unit id="2f47e21adb2d5e1ec4b0ccaaeca3d73a008017d2" translate="yes" xml:space="preserve">
          <source>Rule: Topic branches</source>
          <target state="translated">ルール トピックブランチ</target>
        </trans-unit>
        <trans-unit id="fda6b71ba420bf88a3b35fd7a8c9d96c7d2ca360" translate="yes" xml:space="preserve">
          <source>Run 3-way file level merge for text files, but take lines from both versions, instead of leaving conflict markers. This tends to leave the added lines in the resulting file in random order and the user should verify the result. Do not use this if you do not understand the implications.</source>
          <target state="translated">テキストファイルに対して 3 者間のファイルレベルマージを実行しますが、競合マーカーを残す代わりに両方のバージョンから行を取ります。これは、結果のファイルに追加された行をランダムな順序で残す傾向があり、ユーザは結果を検証しなければなりません。その意味を理解していない場合は使用しないでください。</target>
        </trans-unit>
        <trans-unit id="a160fe3e32ea42046eaaac9053e680c14caafda7" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;git fetch origin&lt;/code&gt; from the public repository of your upstream every once in a while. This does only the first half of &lt;code&gt;git pull&lt;/code&gt; but does not merge. The head of the public repository is stored in &lt;code&gt;.git/refs/remotes/origin/master&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;git fetch origin&lt;/code&gt; アップストリームのパブリックリポジトリからgit fetch originを実行します。これは &lt;code&gt;git pull&lt;/code&gt; の前半のみを実行しますが、マージはしません。パブリックリポジトリのヘッドは、 &lt;code&gt;.git/refs/remotes/origin/master&lt;/code&gt; に格納されています。</target>
        </trans-unit>
        <trans-unit id="e5df7e2d67065569be056bdfd06fe71034940306" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;git gc --auto&lt;/code&gt; at the end to perform garbage collection if needed. This is enabled by default.</source>
          <target state="translated">ファイル名を指定して実行 &lt;code&gt;git gc --auto&lt;/code&gt; 必要であれば、最後には、ガベージコレクションを実行します。これはデフォルトで有効になっています。</target>
        </trans-unit>
        <trans-unit id="6039403ffea6ab0903949880e74c464732db7a11" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;git maintenance run --auto&lt;/code&gt; at the end to perform automatic repository maintenance if needed. (&lt;code&gt;--[no-]auto-gc&lt;/code&gt; is a synonym.) This is enabled by default.</source>
          <target state="translated">実行 &lt;code&gt;git maintenance run --auto&lt;/code&gt; 必要に応じて自動的にリポジトリのメンテナンスを実行するために最後に。（ &lt;code&gt;--[no-]auto-gc&lt;/code&gt; は同義語です。）これはデフォルトで有効になっています。</target>
        </trans-unit>
        <trans-unit id="eb6f5eee3c049cb1a6dcee0979306b460610b633" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;git-p4 submit --help&lt;/code&gt; for details.</source>
          <target state="translated">詳細については、 &lt;code&gt;git-p4 submit --help&lt;/code&gt; を実行してください。</target>
        </trans-unit>
        <trans-unit id="cc49e996e8e34709ea561bacff37a9bf116159b3" translate="yes" xml:space="preserve">
          <source>Run a Git command on a list of repositories</source>
          <target state="translated">リポジトリの一覧から Git コマンドを実行する</target>
        </trans-unit>
        <trans-unit id="d0a954ed6f4ae500efc5471d437b334c3b04a034" translate="yes" xml:space="preserve">
          <source>Run a Git command on a list of repositories. The arguments after the known options or &lt;code&gt;--&lt;/code&gt; indicator are used as the arguments for the Git subprocess.</source>
          <target state="translated">リポジトリのリストに対してGitコマンドを実行します。既知のオプションまたは &lt;code&gt;--&lt;/code&gt; インジケーターの後の引数は、Gitサブプロセスの引数として使用されます。</target>
        </trans-unit>
        <trans-unit id="d4c2111aa7a129dccec5c5c0fa7a3c629e6b4b60" translate="yes" xml:space="preserve">
          <source>Run a merge for files needing merging</source>
          <target state="translated">マージが必要なファイルのマージを実行</target>
        </trans-unit>
        <trans-unit id="56deae0bf4d8ef1e2306db4544bba762fbe034dc" translate="yes" xml:space="preserve">
          <source>Run a three-way file merge</source>
          <target state="translated">3 者間ファイルマージの実行</target>
        </trans-unit>
        <trans-unit id="454ceea0bbe28544bd004a32b164a804513700b9" translate="yes" xml:space="preserve">
          <source>Run as if git was started in &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; instead of the current working directory. When multiple &lt;code&gt;-C&lt;/code&gt; options are given, each subsequent non-absolute &lt;code&gt;-C &amp;lt;path&amp;gt;&lt;/code&gt; is interpreted relative to the preceding &lt;code&gt;-C
&amp;lt;path&amp;gt;&lt;/code&gt;. If &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; is present but empty, e.g. &lt;code&gt;-C &quot;&quot;&lt;/code&gt;, then the current working directory is left unchanged.</source>
          <target state="translated">gitが現在の作業ディレクトリではなく &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; で起動されたかのように実行します。複数の &lt;code&gt;-C&lt;/code&gt; オプションが指定されている場合、後続の非絶対 &lt;code&gt;-C &amp;lt;path&amp;gt;&lt;/code&gt; はそれぞれ、先行する &lt;code&gt;-C &amp;lt;path&amp;gt;&lt;/code&gt; 基準にして解釈されます。場合は &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; 存在するが、例えば空である &lt;code&gt;-C &quot;&quot;&lt;/code&gt; 、そして現在の作業ディレクトリは変更されません。</target>
        </trans-unit>
        <trans-unit id="3a57bdd6deda30e0d464ee7ac9f51bb6cd990f64" translate="yes" xml:space="preserve">
          <source>Run git-daemon to serve /pub/scm from inetd.</source>
          <target state="translated">git-daemonを実行して、inetdから/pub/scmをサーブします。</target>
        </trans-unit>
        <trans-unit id="2b3f7399788c5a94c105f34c23c2a49d757c1096" translate="yes" xml:space="preserve">
          <source>Run git-daemon to serve /pub/scm from xinetd.</source>
          <target state="translated">git-daemon を実行して xinetd から /pub/scm を提供します。</target>
        </trans-unit>
        <trans-unit id="29a03b5fc4e803018eee3893eddf1e9108c87d3d" translate="yes" xml:space="preserve">
          <source>Run interactively.</source>
          <target state="translated">対話的に実行します。</target>
        </trans-unit>
        <trans-unit id="f367a056462dd8b9f00355ca4ea04e6dfae0f7a4" translate="yes" xml:space="preserve">
          <source>Run merge against all files in the index that need merging.</source>
          <target state="translated">マージが必要なインデックス内のすべてのファイルに対してマージを実行します。</target>
        </trans-unit>
        <trans-unit id="234f84747fbb8e336dcf4106732f26a4c98fccdf" translate="yes" xml:space="preserve">
          <source>Run merge conflict resolution tools to resolve merge conflicts</source>
          <target state="translated">マージコンフリクトを解決するためのマージコンフリクト解決ツールの実行</target>
        </trans-unit>
        <trans-unit id="38771a9d07a5f491f090711c0224ce001d0749d6" translate="yes" xml:space="preserve">
          <source>Run one or more maintenance tasks. If one or more &lt;code&gt;--task&lt;/code&gt; options are specified, then those tasks are run in that order. Otherwise, the tasks are determined by which &lt;code&gt;maintenance.&amp;lt;task&amp;gt;.enabled&lt;/code&gt; config options are true. By default, only &lt;code&gt;maintenance.gc.enabled&lt;/code&gt; is true.</source>
          <target state="translated">1つ以上のメンテナンスタスクを実行します。1つ以上の &lt;code&gt;--task&lt;/code&gt; オプションが指定されている場合、それらのタスクはその順序で実行されます。それ以外の場合、タスクは、どの &lt;code&gt;maintenance.&amp;lt;task&amp;gt;.enabled&lt;/code&gt; オプションがtrueであるかによって決定されます。デフォルトでは、 &lt;code&gt;maintenance.gc.enabled&lt;/code&gt; のみがtrueです。</target>
        </trans-unit>
        <trans-unit id="297b88341d487657ac7bfaea2e82d26521a04a34" translate="yes" xml:space="preserve">
          <source>Run tasks to optimize Git repository data</source>
          <target state="translated">Git リポジトリのデータを最適化するタスクを実行する</target>
        </trans-unit>
        <trans-unit id="71e897b70d3ba0903b5f674288a89ed16c610cd3" translate="yes" xml:space="preserve">
          <source>Run tasks to optimize Git repository data, speeding up other Git commands and reducing storage requirements for the repository.</source>
          <target state="translated">タスクを実行してGitリポジトリのデータを最適化し、他のGitコマンドを高速化し、リポジトリのストレージ要件を削減します。</target>
        </trans-unit>
        <trans-unit id="6f4bd94ff5f1951786b4d70e32a9fd3f734eea92" translate="yes" xml:space="preserve">
          <source>Run the command silently, without creating a window to display its output.</source>
          <target state="translated">出力を表示するためのウィンドウを作成せずに、黙々とコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="1bc8f86a1473f5767bf3c60c210d9437103d96b3" translate="yes" xml:space="preserve">
          <source>Run the tool only if a diff is selected in the GUI. It guarantees that &lt;code&gt;FILENAME&lt;/code&gt; is not empty.</source>
          <target state="translated">GUIでdiffが選択されている場合にのみ、ツールを実行します。 &lt;code&gt;FILENAME&lt;/code&gt; が空でないことを保証します。</target>
        </trans-unit>
        <trans-unit id="6a6c6a22304c9bf76fa5e2f3f8dca8cd7bf5e3ac" translate="yes" xml:space="preserve">
          <source>Run this script and save its output to a file. This file could then be used as projects list file, which means that you can set &lt;code&gt;$projects_list&lt;/code&gt; to its filename.</source>
          <target state="translated">このスクリプトを実行し、その出力をファイルに保存します。このファイルはプロジェクトリストファイルとして使用できます。つまり、 &lt;code&gt;$projects_list&lt;/code&gt; をそのファイル名に設定できます。</target>
        </trans-unit>
        <trans-unit id="e4350cd9be7c2a6a88a109bf8474f97ce8036333" translate="yes" xml:space="preserve">
          <source>Run verbosely.</source>
          <target state="translated">冗長に走る。</target>
        </trans-unit>
        <trans-unit id="0580e4cb5c8782966251586e9fca0c52971499d2" translate="yes" xml:space="preserve">
          <source>Run verbosely. Does not affect the reporting of progress status to the standard error stream.</source>
          <target state="translated">冗長に実行します。標準エラー・ストリームへの進捗状況の報告には影響しません。</target>
        </trans-unit>
        <trans-unit id="e6c2918d91700995262364e3455a1fa1e70615ff" translate="yes" xml:space="preserve">
          <source>Running &quot;git tag&quot; without arguments also lists all tags. The pattern is a shell wildcard (i.e., matched using fnmatch(3)). Multiple patterns may be given; if any of them matches, the tag is shown.</source>
          <target state="translated">引数なしで &quot;git tag&quot; を実行しても、すべてのタグが表示されます。パターンはシェルのワイルドカード (つまり fnmatch(3)でマッチしたもの)です。複数のパターンを指定してもかまいません。</target>
        </trans-unit>
        <trans-unit id="a2ee2445637d31b2b0a87c4075e11372cbe6d8cc" translate="yes" xml:space="preserve">
          <source>Running &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt;, &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt;, &lt;a href=&quot;git-show&quot;&gt;git-show[1]&lt;/a&gt;, &lt;a href=&quot;git-diff-index&quot;&gt;git-diff-index[1]&lt;/a&gt;, &lt;a href=&quot;git-diff-tree&quot;&gt;git-diff-tree[1]&lt;/a&gt;, or &lt;a href=&quot;git-diff-files&quot;&gt;git-diff-files[1]&lt;/a&gt; with the &lt;code&gt;-p&lt;/code&gt; option produces patch text. You can customize the creation of patch text via the &lt;code&gt;GIT_EXTERNAL_DIFF&lt;/code&gt; and the &lt;code&gt;GIT_DIFF_OPTS&lt;/code&gt; environment variables (see &lt;a href=&quot;git&quot;&gt;git[1]&lt;/a&gt;).</source>
          <target state="translated">実行中&lt;a href=&quot;git-diff&quot;&gt;のgit-diffの[1] &lt;/a&gt;、&lt;a href=&quot;git-log&quot;&gt;[1] gitのログ&lt;/a&gt;、&lt;a href=&quot;git-show&quot;&gt;のgit-ショー[1] &lt;/a&gt;、&lt;a href=&quot;git-diff-index&quot;&gt;のgit-diffのインデックス[1] &lt;/a&gt;、&lt;a href=&quot;git-diff-tree&quot;&gt;のgit-diffの木[1] 、&lt;/a&gt;または&lt;a href=&quot;git-diff-files&quot;&gt;のgit-diffを-ファイル[1]&lt;/a&gt;で &lt;code&gt;-p&lt;/code&gt; オプションは、パッチのテキストを生成します。 &lt;code&gt;GIT_EXTERNAL_DIFF&lt;/code&gt; および &lt;code&gt;GIT_DIFF_OPTS&lt;/code&gt; 環境変数を介してパッチテキストの作成をカスタマイズできます（&lt;a href=&quot;git&quot;&gt;git [1]を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="803264f53d0e1d9dc0bb4982e51be37a05b958fa" translate="yes" xml:space="preserve">
          <source>Running &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt;, &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt;, &lt;a href=&quot;git-show&quot;&gt;git-show[1]&lt;/a&gt;, &lt;a href=&quot;git-diff-index&quot;&gt;git-diff-index[1]&lt;/a&gt;, &lt;a href=&quot;git-diff-tree&quot;&gt;git-diff-tree[1]&lt;/a&gt;, or &lt;a href=&quot;git-diff-files&quot;&gt;git-diff-files[1]&lt;/a&gt; with the &lt;code&gt;-p&lt;/code&gt; option produces patch text. You can customize the creation of patch text via the &lt;code&gt;GIT_EXTERNAL_DIFF&lt;/code&gt; and the &lt;code&gt;GIT_DIFF_OPTS&lt;/code&gt; environment variables.</source>
          <target state="translated">実行中&lt;a href=&quot;git-diff&quot;&gt;のgit-diffの[1] &lt;/a&gt;、&lt;a href=&quot;git-log&quot;&gt;[1] gitのログ&lt;/a&gt;、&lt;a href=&quot;git-show&quot;&gt;のgit-ショー[1] &lt;/a&gt;、&lt;a href=&quot;git-diff-index&quot;&gt;のgit-diffのインデックス[1] &lt;/a&gt;、&lt;a href=&quot;git-diff-tree&quot;&gt;のgit-diffの木[1] 、&lt;/a&gt;または&lt;a href=&quot;git-diff-files&quot;&gt;のgit-diffを-ファイル[1]&lt;/a&gt;で &lt;code&gt;-p&lt;/code&gt; オプションは、パッチのテキストを生成します。 &lt;code&gt;GIT_EXTERNAL_DIFF&lt;/code&gt; および &lt;code&gt;GIT_DIFF_OPTS&lt;/code&gt; 環境変数を使用して、パッチテキストの作成をカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="79747aa96d21887b0b235c733b1bf62702e5f734" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;git gc&lt;/code&gt; manually should only be needed when adding objects to a repository without regularly running such porcelain commands, to do a one-off repository optimization, or e.g. to clean up a suboptimal mass-import. See the &quot;PACKFILE OPTIMIZATION&quot; section in &lt;a href=&quot;git-fast-import&quot;&gt;git-fast-import[1]&lt;/a&gt; for more details on the import case.</source>
          <target state="translated">&lt;code&gt;git gc&lt;/code&gt; を手動で実行する必要があるのは、そのような磁器コマンドを定期的に実行せずにリポジトリにオブジェクトを追加する場合、1回限りのリポジトリ最適化を行う場合、または次善の大量インポートをクリーンアップする場合などです。インポートケースの詳細については、&lt;a href=&quot;git-fast-import&quot;&gt;git-fast-import [1]&lt;/a&gt;の「PACKFILE OPTIMIZATION」セクションをご覧ください。</target>
        </trans-unit>
        <trans-unit id="5e2a5725ee1a3773dc9d930811a085d107277efd" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;git init&lt;/code&gt; in an existing repository is safe. It will not overwrite things that are already there. The primary reason for rerunning &lt;code&gt;git init&lt;/code&gt; is to pick up newly added templates (or to move the repository to another place if --separate-git-dir is given).</source>
          <target state="translated">既存のリポジトリで &lt;code&gt;git init&lt;/code&gt; を実行しても安全です。すでに存在するものは上書きされません。 &lt;code&gt;git init&lt;/code&gt; を再実行する主な理由は、新しく追加されたテンプレートを取得する（または--separate-git-dirが指定されている場合はリポジトリを別の場所に移動する）ためです。</target>
        </trans-unit>
        <trans-unit id="4a12225be5b345f509b740239e0b23dc61c4c69e" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;git merge&lt;/code&gt; or &lt;code&gt;git pull&lt;/code&gt; is NOT recommended on a branch you plan to &lt;code&gt;dcommit&lt;/code&gt; from because Subversion users cannot see any merges you&amp;rsquo;ve made. Furthermore, if you merge or pull from a Git branch that is a mirror of an SVN branch, &lt;code&gt;dcommit&lt;/code&gt; may commit to the wrong branch.</source>
          <target state="translated">&lt;code&gt;git merge&lt;/code&gt; または &lt;code&gt;git pull&lt;/code&gt; を実行することは、Subversionユーザーが作成したマージを確認できないため、 &lt;code&gt;dcommit&lt;/code&gt; する予定のブランチでは推奨されません。さらに、SVNブランチのミラーであるGitブランチからマージまたはプルすると、 &lt;code&gt;dcommit&lt;/code&gt; が間違ったブランチにコミットする可能性があります。</target>
        </trans-unit>
        <trans-unit id="4e5d95b0a65fda26d5c70bb844d87c3f30d59d6d" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;git pack-refs&lt;/code&gt; in a repository renders it unclonable by Git versions prior to 1.5.1.2 over dumb transports such as HTTP. This variable determines whether &lt;code&gt;git gc&lt;/code&gt; runs &lt;code&gt;git pack-refs&lt;/code&gt;. This can be set to &lt;code&gt;notbare&lt;/code&gt; to enable it within all non-bare repos or it can be set to a boolean value. The default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">リポジトリで &lt;code&gt;git pack-refs&lt;/code&gt; を実行すると、HTTPなどのダムトランスポートを介して1.5.1.2より前のGitバージョンでクローンできなくなります。この変数は、 &lt;code&gt;git gc&lt;/code&gt; が &lt;code&gt;git pack-refs&lt;/code&gt; を実行するかどうかを決定します。これを &lt;code&gt;notbare&lt;/code&gt; に設定して、すべての非ベアリポジトリ内で有効にするか、ブール値に設定できます。デフォルトは &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="7e986747909ca421bbba8ffb613702a034d33901" translate="yes" xml:space="preserve">
          <source>Running git-filter-branch with either --tags or --all in your &amp;lt;rev-list options&amp;gt;. In order to retain annotated tags as annotated, you must use --tag-name-filter (and must not have restored from refs/original/ in a previously botched rewrite).</source>
          <target state="translated">&amp;lt;rev-list options&amp;gt;で--tagsまたは--allを指定してgit-filter-branchを実行します。注釈付きのタグを注釈付きとして保持するには、-tag-name-filterを使用する必要があります（以前に失敗した書き換えでrefs / original /から復元していないこと）。</target>
        </trans-unit>
        <trans-unit id="48b168cafbabe8dd5092d4e93800a7944e72448e" translate="yes" xml:space="preserve">
          <source>Running the &lt;code&gt;git rerere&lt;/code&gt; command immediately after a conflicted automerge records the conflicted working tree files, with the usual conflict markers &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt;, &lt;code&gt;=======&lt;/code&gt;, and &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; in them. Later, after you are done resolving the conflicts, running &lt;code&gt;git rerere&lt;/code&gt; again will record the resolved state of these files. Suppose you did this when you created the test merge of master into the topic branch.</source>
          <target state="translated">実行中 &lt;code&gt;git rerere&lt;/code&gt; 競合自動マージ直後のコマンドは、通常の衝突マーカと、競合作業ツリーのファイルを記録し &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt; 、 &lt;code&gt;=======&lt;/code&gt; 、そして &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; それらインチ 後で、競合の解決が完了した後、もう一度 &lt;code&gt;git rerere&lt;/code&gt; を実行すると、これらのファイルの解決された状態が記録されます。masterのトピックブランチへのテストマージを作成したときにこれを行ったとします。</target>
        </trans-unit>
        <trans-unit id="59dc4b3f413e4c03677af110697445ae971ad5c3" translate="yes" xml:space="preserve">
          <source>Runs &lt;code&gt;git update-index&lt;/code&gt; itself on the paths whose index entries are different from those from the &lt;code&gt;HEAD&lt;/code&gt; commit.</source>
          <target state="translated">実行 &lt;code&gt;git update-index&lt;/code&gt; のインデックスエントリからのものとは異なる経路上自体 &lt;code&gt;HEAD&lt;/code&gt; コミットします。</target>
        </trans-unit>
        <trans-unit id="22e727ddf0d0e8f34303d3a3ff629cb6f10d1775" translate="yes" xml:space="preserve">
          <source>Runs &lt;code&gt;init&lt;/code&gt; and &lt;code&gt;fetch&lt;/code&gt;. It will automatically create a directory based on the basename of the URL passed to it; or if a second argument is passed; it will create a directory and work within that. It accepts all arguments that the &lt;code&gt;init&lt;/code&gt; and &lt;code&gt;fetch&lt;/code&gt; commands accept; with the exception of &lt;code&gt;--fetch-all&lt;/code&gt; and &lt;code&gt;--parent&lt;/code&gt;. After a repository is cloned, the &lt;code&gt;fetch&lt;/code&gt; command will be able to update revisions without affecting the working tree; and the &lt;code&gt;rebase&lt;/code&gt; command will be able to update the working tree with the latest changes.</source>
          <target state="translated">&lt;code&gt;init&lt;/code&gt; と &lt;code&gt;fetch&lt;/code&gt; を実行します。渡されたURLのベース名に基づいてディレクトリを自動的に作成します。または、2番目の引数が渡された場合。ディレクトリを作成し、その中で動作します。 &lt;code&gt;init&lt;/code&gt; および &lt;code&gt;fetch&lt;/code&gt; コマンドが受け入れるすべての引数を受け入れます。除いた &lt;code&gt;--fetch-all&lt;/code&gt; と &lt;code&gt;--parent&lt;/code&gt; 。リポジトリが複製された後、 &lt;code&gt;fetch&lt;/code&gt; コマンドは作業ツリーに影響を与えることなくリビジョンを更新できます。そして &lt;code&gt;rebase&lt;/code&gt; コマンドは作業ツリーを最新の変更で更新することができます。</target>
        </trans-unit>
        <trans-unit id="271b9f4ffa51b4716f220d02767212c2cbc90133" translate="yes" xml:space="preserve">
          <source>Runs a number of housekeeping tasks within the current repository, such as compressing file revisions (to reduce disk space and increase performance), removing unreachable objects which may have been created from prior invocations of &lt;code&gt;git add&lt;/code&gt;, packing refs, pruning reflog, rerere metadata or stale working trees. May also update ancillary indexes such as the commit-graph.</source>
          <target state="translated">現在のリポジトリ内で、ファイルリビジョンの圧縮（ディスクスペースを削減してパフォーマンスを向上させる）、 &lt;code&gt;git add&lt;/code&gt; の以前の呼び出しから作成された到達できないオブジェクトの削除、refsのパッキング、reflogのプルーニング、メタデータのrerere などのハウスキーピングタスクを実行します。古い作業木。commit-graphなどの補助インデックスも更新できます。</target>
        </trans-unit>
        <trans-unit id="02aa629c8b16cd17a44f3a0efec2feed43937642" translate="yes" xml:space="preserve">
          <source>S</source>
          <target state="translated">S</target>
        </trans-unit>
        <trans-unit id="9aa5449df2c27f8c453076898c93afa895c00117" translate="yes" xml:space="preserve">
          <source>SCM</source>
          <target state="translated">SCM</target>
        </trans-unit>
        <trans-unit id="c571b86549e49bf223cf648388c46288c2241b5a" translate="yes" xml:space="preserve">
          <source>SHA-1</source>
          <target state="translated">SHA-1</target>
        </trans-unit>
        <trans-unit id="312e98fedb54c7d53ac4e72bc404817b90ff078b" translate="yes" xml:space="preserve">
          <source>SHA-1 identifiers of Git commit objects.</source>
          <target state="translated">Git コミットオブジェクトの SHA-1 識別子。</target>
        </trans-unit>
        <trans-unit id="202b86696ac3129113c6d6b6693f7f6dc827b3d3" translate="yes" xml:space="preserve">
          <source>SHA-1 identifiers of Git tag objects.</source>
          <target state="translated">Git タグオブジェクトの SHA-1 識別子。</target>
        </trans-unit>
        <trans-unit id="839226786b62bf95c9258e79140ac43890ceae07" translate="yes" xml:space="preserve">
          <source>SSH</source>
          <target state="translated">SSH</target>
        </trans-unit>
        <trans-unit id="1685ffa85727a883f0235855ad4fe17b10829246" translate="yes" xml:space="preserve">
          <source>SSH and File Transport</source>
          <target state="translated">SSH とファイル転送</target>
        </trans-unit>
        <trans-unit id="88179dba2afcc4bab1f73ecdf7a5b0b3ec852b33" translate="yes" xml:space="preserve">
          <source>SSH:</source>
          <target state="translated">SSH:</target>
        </trans-unit>
        <trans-unit id="4d1ffce8cc78d20fc8a69ac29d5637ff598777a6" translate="yes" xml:space="preserve">
          <source>SVN itself only stores times in UTC and nothing else. The regular svn client converts the UTC time to the local time (or based on the TZ= environment). This command has the same behaviour.</source>
          <target state="translated">SVN 自体は時刻を UTC で保存しているだけで、それ以外は何も保存していません。通常の svn クライアントは UTC 時間を現地時間に変換します (あるいは TZ=環境に基づいて)。このコマンドも同じ動作をします。</target>
        </trans-unit>
        <trans-unit id="e2462783325d1946b85fa4d6ac9becc9ddef189e" translate="yes" xml:space="preserve">
          <source>Sadly, many merges aren&amp;rsquo;t trivial. If there are files that have been added, moved or removed, or if both branches have modified the same file, you will be left with an index tree that contains &quot;merge entries&quot; in it. Such an index tree can 'NOT' be written out to a tree object, and you will have to resolve any such merge clashes using other tools before you can write out the result.</source>
          <target state="translated">悲しいことに、多くのマージは簡単ではありません。追加、移動、または削除されたファイルがある場合、または両方のブランチで同じファイルが変更されている場合、「マージエントリ」を含むインデックスツリーが残ります。このようなインデックスツリーはツリーオブジェクトに書き出すことはできません。結果を書き出す前に、他のツールを使用してこのようなマージの衝突を解決する必要があります。</target>
        </trans-unit>
        <trans-unit id="a29b0686374a954376cc620b8979b45dec7b936c" translate="yes" xml:space="preserve">
          <source>Sadly, many merges aren&amp;rsquo;t trivial. If there are files that have been added, moved or removed, or if both branches have modified the same file, you will be left with an index tree that contains &quot;merge entries&quot; in it. Such an index tree can &lt;code&gt;NOT&lt;/code&gt; be written out to a tree object, and you will have to resolve any such merge clashes using other tools before you can write out the result.</source>
          <target state="translated">悲しいことに、多くのマージは簡単ではありません。追加、移動、または削除されたファイルがある場合、または両方のブランチが同じファイルを変更した場合は、「マージエントリ」を含むインデックスツリーが残ります。このようなインデックスツリーはツリーオブジェクトに書き出すことはでき &lt;code&gt;NOT&lt;/code&gt; 。結果を書き出す前に、他のツールを使用してこのようなマージの衝突を解決する必要があります。</target>
        </trans-unit>
        <trans-unit id="db6e7e410412f58574f766c3911f49badd42beca" translate="yes" xml:space="preserve">
          <source>Safety</source>
          <target state="translated">Safety</target>
        </trans-unit>
        <trans-unit id="c65f36deb58ec8692004d5f340eea1de5007232b" translate="yes" xml:space="preserve">
          <source>Salvage your data out of another SCM people love to hate</source>
          <target state="translated">人々に嫌われている別のSCMからデータをサルベージする</target>
        </trans-unit>
        <trans-unit id="7da4c768ec454f900a2b009758758bcc4c497617" translate="yes" xml:space="preserve">
          <source>Same as --mode but take mode encoded as a number. This is mainly used by other commands that have already parsed layout mode.</source>
          <target state="translated">mode と同じですが、モードを数値でエンコードしたものを取ります。これは主にレイアウトモードをパース済みの他のコマンドで使用されます。</target>
        </trans-unit>
        <trans-unit id="2542706528d734cb50feb9bca7bdca378a008047" translate="yes" xml:space="preserve">
          <source>Same as --receive-pack=&amp;lt;git-receive-pack&amp;gt;.</source>
          <target state="translated">--receive-pack = &amp;lt;git-receive-pack&amp;gt;と同じです。</target>
        </trans-unit>
        <trans-unit id="70cac94413c3847bbe37b2e76044db02ae24aecd" translate="yes" xml:space="preserve">
          <source>Same as --upload-pack=&amp;lt;git-upload-pack&amp;gt;.</source>
          <target state="translated">--upload-pack = &amp;lt;git-upload-pack&amp;gt;と同じです。</target>
        </trans-unit>
        <trans-unit id="11461b23fcbc2ba6f710e4af2d4a469477579e7e" translate="yes" xml:space="preserve">
          <source>Same as -m, except that unmerged entries are discarded instead of failing. When used with &lt;code&gt;-u&lt;/code&gt;, updates leading to loss of working tree changes will not abort the operation.</source>
          <target state="translated">-mと同じですが、マージされていないエントリは失敗せずに破棄されます。 &lt;code&gt;-u&lt;/code&gt; と一緒に使用すると、作業ツリーの変更が失われる更新は操作を中止しません。</target>
        </trans-unit>
        <trans-unit id="e08595bc7c109d0c181056c12a1b3a6619cb3279" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;--max-depth=-1&lt;/code&gt;; this is the default.</source>
          <target state="translated">&lt;code&gt;--max-depth=-1&lt;/code&gt; と同じ。これがデフォルトです。</target>
        </trans-unit>
        <trans-unit id="fca1bc99780bb8b21bf845d99b40ff5d1d2ac6f4" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;--max-depth=0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--max-depth=0&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="96a9581032de7bee365152ab2d305df909cefe47" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;--untracked-cache&lt;/code&gt;. Provided for backwards compatibility with older versions of Git where &lt;code&gt;--untracked-cache&lt;/code&gt; used to imply &lt;code&gt;--test-untracked-cache&lt;/code&gt; but this option would enable the extension unconditionally.</source>
          <target state="translated">&lt;code&gt;--untracked-cache&lt;/code&gt; と同じです。以前のバージョンのGitとの下位互換性のために提供されてい &lt;code&gt;--untracked-cache&lt;/code&gt; は--test-untracked-cacheを暗黙的に &lt;code&gt;--test-untracked-cache&lt;/code&gt; いましたが、このオプションは無条件に拡張を有効にします。</target>
        </trans-unit>
        <trans-unit id="a5a8ba00c3dc1ba60d32f039cdc49baa9cb59855" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;--verify&lt;/code&gt; but shortens the object name to a unique prefix with at least &lt;code&gt;length&lt;/code&gt; characters. The minimum length is 4, the default is the effective value of the &lt;code&gt;core.abbrev&lt;/code&gt; configuration variable (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;--verify&lt;/code&gt; と同じですが、オブジェクト名を少なくとも &lt;code&gt;length&lt;/code&gt; 文字の一意のプレフィックスに短縮します。最小長は4で、デフォルトは &lt;code&gt;core.abbrev&lt;/code&gt; 構成変数の有効な値です（&lt;a href=&quot;git-config&quot;&gt;git-config [1]を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="beb85fd3b6ce0903e1b1188af0e814b86495c278" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;-a&lt;/code&gt;, unless &lt;code&gt;-d&lt;/code&gt; is used. Then any unreachable objects in a previous pack become loose, unpacked objects, instead of being left in the old pack. Unreachable objects are never intentionally added to a pack, even when repacking. This option prevents unreachable objects from being immediately deleted by way of being left in the old pack and then removed. Instead, the loose unreachable objects will be pruned according to normal expiry rules with the next &lt;code&gt;git gc&lt;/code&gt; invocation. See &lt;a href=&quot;git-gc&quot;&gt;git-gc[1]&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;-d&lt;/code&gt; が使用されない限り、 &lt;code&gt;-a&lt;/code&gt; と同じです。その後、以前のパックの到達不能オブジェクトは、古いパックに残されるのではなく、ルーズなアンパックオブジェクトになります。再到達しても、到達できないオブジェクトが意図的にパックに追加されることはありません。このオプションは、到達できないオブジェクトが古いパックに残されたまま削除されてすぐに削除されるのを防ぎます。代わりに、緩い到達不能オブジェクトは、次の &lt;code&gt;git gc&lt;/code&gt; 呼び出しで通常の​​有効期限規則に従って削除されます。&lt;a href=&quot;git-gc&quot;&gt;git-gc [1]を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ff89956ed03482de99fb1d76b0d3426c3c4d4dbc" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;git gui citool&lt;/code&gt; (above).</source>
          <target state="translated">&lt;code&gt;git gui citool&lt;/code&gt; （上記）と同じです。</target>
        </trans-unit>
        <trans-unit id="7f884bfa0e72398b065720ac608779bf0b3372aa" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;group&lt;/code&gt;, but make the repository readable by all users.</source>
          <target state="translated">&lt;code&gt;group&lt;/code&gt; と同じですが、すべてのユーザーがリポジトリを読み取り可能にします。</target>
        </trans-unit>
        <trans-unit id="205ac751a2a286c261ce1f6df5fb256a7d0ade8e" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;strip&lt;/code&gt; except #commentary is not removed.</source>
          <target state="translated">#commentaryが削除されないことを除いて、 &lt;code&gt;strip&lt;/code&gt; 同じです。</target>
        </trans-unit>
        <trans-unit id="0f92cc3366a36ceb57ccdcea56b7f1a8684ec893" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;strip&lt;/code&gt; if the message is to be edited. Otherwise &lt;code&gt;whitespace&lt;/code&gt;.</source>
          <target state="translated">メッセージを編集する場合は、 &lt;code&gt;strip&lt;/code&gt; と同じです。それ以外の場合は &lt;code&gt;whitespace&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a8e2d0cf73dc026e93d34c61a101205dcf767e79" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;whitespace&lt;/code&gt; except that everything from (and including) the line found below is truncated, if the message is to be edited. &quot;&lt;code&gt;#&lt;/code&gt;&quot; can be customized with core.commentChar.</source>
          <target state="translated">メッセージが編集される場合、以下にある行からのすべての行が切り捨てられることを除いて、 &lt;code&gt;whitespace&lt;/code&gt; 同じです。&quot; &lt;code&gt;#&lt;/code&gt; &quot;はcore.commentCharでカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="fe1030b7b6d63ee2bb092f0de364ad5810d90270" translate="yes" xml:space="preserve">
          <source>Same as above, but the format is inferred from the output file.</source>
          <target state="translated">上記と同じですが、フォーマットは出力ファイルから推測されます。</target>
        </trans-unit>
        <trans-unit id="a3268177cdd166695f9afb4cfbb0a75c5f082adf" translate="yes" xml:space="preserve">
          <source>Same as above, but using the builtin tar.gz handling.</source>
          <target state="translated">上記と同じですが、ビルトインの tar.gz 処理を使用します。</target>
        </trans-unit>
        <trans-unit id="316b1b6951145c81e2f6393678faa4164cbc2393" translate="yes" xml:space="preserve">
          <source>Same as above.</source>
          <target state="translated">上記と同じです。</target>
        </trans-unit>
        <trans-unit id="eceeb52d76c39f830be2caa3098c992d4c73cfa3" translate="yes" xml:space="preserve">
          <source>Same as the default mode, but does not prune some history.</source>
          <target state="translated">デフォルトモードと同じですが、一部の履歴は剪定されません。</target>
        </trans-unit>
        <trans-unit id="db6a81d8b3d32523ab23e52ba20bfc5ab9af3c20" translate="yes" xml:space="preserve">
          <source>Save that patch to a file in UNIX mailbox format. Call it a.patch, say.</source>
          <target state="translated">そのパッチを UNIX のメールボックス形式のファイルに保存します。これをa.patchと呼んでください。</target>
        </trans-unit>
        <trans-unit id="17bbcc9ad074be63eea942d50d7cda88e930f8d2" translate="yes" xml:space="preserve">
          <source>Save the process id in &lt;code&gt;file&lt;/code&gt;. Ignored when the daemon is run under &lt;code&gt;--inetd&lt;/code&gt;.</source>
          <target state="translated">プロセスIDを &lt;code&gt;file&lt;/code&gt; 保存します。デーモンが &lt;code&gt;--inetd&lt;/code&gt; で実行されている場合は無視されます。</target>
        </trans-unit>
        <trans-unit id="15259adada7ee3df28dbdafd2e3ca8076b5f4a15" translate="yes" xml:space="preserve">
          <source>Save your local modifications to a new &lt;code&gt;stash entry&lt;/code&gt; and roll them back to HEAD (in the working tree and in the index). The &amp;lt;message&amp;gt; part is optional and gives the description along with the stashed state.</source>
          <target state="translated">ローカルの変更を新しい &lt;code&gt;stash entry&lt;/code&gt; 保存し、HEADにロールバックします（作業ツリーとインデックス内）。&amp;lt;message&amp;gt;部分はオプションであり、隠された状態とともに説明を提供します。</target>
        </trans-unit>
        <trans-unit id="ea6661dbb08a609142e04fb33fe9864a0d55a0fb" translate="yes" xml:space="preserve">
          <source>Saving a log and replaying it</source>
          <target state="translated">ログの保存と再生</target>
        </trans-unit>
        <trans-unit id="256f734933def8151aae2c73ad04adbfd2f5710e" translate="yes" xml:space="preserve">
          <source>Say you modify a branch with &lt;a href=&quot;#fixing-mistakes&quot;&gt;&lt;code&gt;git reset --hard&lt;/code&gt;&lt;/a&gt;, and then realize that the branch was the only reference you had to that point in history.</source>
          <target state="translated">&lt;a href=&quot;#fixing-mistakes&quot;&gt; &lt;code&gt;git reset --hard&lt;/code&gt; を使用&lt;/a&gt;してブランチを変更し、ブランチが履歴のその時点までに持っていた唯一の参照であることを理解したとします。</target>
        </trans-unit>
        <trans-unit id="8f7159e28d007390950b554c8900463bad34bfe1" translate="yes" xml:space="preserve">
          <source>Scan &lt;code&gt;Documentation/&lt;/code&gt; for other stuff left out; in particular:</source>
          <target state="translated">&lt;code&gt;Documentation/&lt;/code&gt; をスキャンして、他に残っているものを探します。特に：</target>
        </trans-unit>
        <trans-unit id="deb6721d53898cf2febea6ade63b57224507999f" translate="yes" xml:space="preserve">
          <source>Scan email archives for other stuff left out</source>
          <target state="translated">メールアーカイブをスキャンして、他のものが残っていないか確認してください。</target>
        </trans-unit>
        <trans-unit id="b53f30bf6406e325a3dfac40a2ba03843362a3a9" translate="yes" xml:space="preserve">
          <source>Scan man pages to see if any assume more background than this manual provides.</source>
          <target state="translated">このマニュアルが提供する以上の背景を想定しているものがあるかどうかを確認するために、マンページをスキャンしてください。</target>
        </trans-unit>
        <trans-unit id="d1e8a9a092bccee1d0d707e7539fd2ea1ed01f5c" translate="yes" xml:space="preserve">
          <source>Scheme (e.g., &lt;code&gt;https&lt;/code&gt; in &lt;code&gt;https://example.com/&lt;/code&gt;). This field must match exactly between the config key and the URL.</source>
          <target state="translated">（例えば、スキーム &lt;code&gt;https&lt;/code&gt; で &lt;code&gt;https://example.com/&lt;/code&gt; ）。このフィールドは、構成キーとURLの間で正確に一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="1e05e395ff307d005e7e52d5a8d5532c4a364bbf" translate="yes" xml:space="preserve">
          <source>Search files in the current directory that is not managed by Git.</source>
          <target state="translated">Gitで管理されていないカレントディレクトリ内のファイルを検索します。</target>
        </trans-unit>
        <trans-unit id="b73a02f095e861ccf3246948d40c910baf6a01fe" translate="yes" xml:space="preserve">
          <source>Search for regressions:</source>
          <target state="translated">回帰を検索します。</target>
        </trans-unit>
        <trans-unit id="f6032042d4f48d36194af91f9c0f4e8546fac517" translate="yes" xml:space="preserve">
          <source>Search strategy</source>
          <target state="translated">検索戦略</target>
        </trans-unit>
        <trans-unit id="a28ca13aea7d9b0267664d0e0585dd1effd660f3" translate="yes" xml:space="preserve">
          <source>Second user-specific configuration file. If $XDG_CONFIG_HOME is not set or empty, &lt;code&gt;$HOME/.config/git/config&lt;/code&gt; will be used. Any single-valued variable set in this file will be overwritten by whatever is in &lt;code&gt;~/.gitconfig&lt;/code&gt;. It is a good idea not to create this file if you sometimes use older versions of Git, as support for this file was added fairly recently.</source>
          <target state="translated">2番目のユーザー固有の構成ファイル。$ XDG_CONFIG_HOMEが設定されていないか空の場合、 &lt;code&gt;$HOME/.config/git/config&lt;/code&gt; が使用されます。このファイルに設定されている単一値の変数は、 &lt;code&gt;~/.gitconfig&lt;/code&gt; もので上書きされます。このファイルのサポートがごく最近追加されたため、古いバージョンのGitを使用する場合は、このファイルを作成しないことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="08bcebdee7825304638fc52fdc68926c0d85826a" translate="yes" xml:space="preserve">
          <source>Second user-specific credentials file. If &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; is not set or empty, &lt;code&gt;$HOME/.config/git/credentials&lt;/code&gt; will be used. Any credentials stored in this file will not be used if &lt;code&gt;~/.git-credentials&lt;/code&gt; has a matching credential as well. It is a good idea not to create this file if you sometimes use older versions of Git that do not support it.</source>
          <target state="translated">2番目のユーザー固有の資格情報ファイル。場合は &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; セットまたは空されていない、 &lt;code&gt;$HOME/.config/git/credentials&lt;/code&gt; 使用されます。 &lt;code&gt;~/.git-credentials&lt;/code&gt; にも一致する認証情報がある場合、このファイルに保存されている認証情報は使用されません。サポートしていない古いバージョンのGitを使用する場合は、このファイルを作成しないことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="b5c3361c98212e9d042aaaa5b0c10d9a1a465d8b" translate="yes" xml:space="preserve">
          <source>Second, repositories found in &lt;code&gt;/pub/scm/&lt;/code&gt; and &lt;code&gt;/var/git/&lt;/code&gt; will be accessible through &lt;code&gt;http://git.example.org/scm/&lt;/code&gt; and &lt;code&gt;http://git.example.org/var/&lt;/code&gt;. You can add as many project roots as you want by adding rewrite rules like the third and the fourth.</source>
          <target state="translated">次に、 &lt;code&gt;/pub/scm/&lt;/code&gt; および &lt;code&gt;/var/git/&lt;/code&gt; にあるリポジトリは、 &lt;code&gt;http://git.example.org/scm/&lt;/code&gt; および &lt;code&gt;http://git.example.org/var/&lt;/code&gt; からアクセスできます。3番目と4番目のような書き換えルールを追加することで、プロジェクトルートをいくつでも追加できます。</target>
        </trans-unit>
        <trans-unit id="0d5abfbb7006b1c4a1d7df3783d45b48d9d41d48" translate="yes" xml:space="preserve">
          <source>Seconds wait before reconnecting to smtp server. See also the &lt;code&gt;--relogin-delay&lt;/code&gt; option of &lt;a href=&quot;git-send-email&quot;&gt;git-send-email[1]&lt;/a&gt;.</source>
          <target state="translated">数秒待ってから、SMTPサーバーに再接続します。&lt;a href=&quot;git-send-email&quot;&gt;git-send-email [1]&lt;/a&gt;の &lt;code&gt;--relogin-delay&lt;/code&gt; オプションも参照してください。</target>
        </trans-unit>
        <trans-unit id="16adbe8ae2ec1d5ce021aca603249932e4af29cb" translate="yes" xml:space="preserve">
          <source>Sections can be further divided into subsections. To begin a subsection put its name in double quotes, separated by space from the section name, in the section header, like in the example below:</source>
          <target state="translated">セクションはさらにサブセクションに分けることができます。サブセクションを開始するには、以下の例のように、セクションヘッダーで、セクション名からスペースで区切られた二重引用符でその名前を入れます。</target>
        </trans-unit>
        <trans-unit id="f25ce1b8a399bd8621a57427a20039b4b13935db" translate="yes" xml:space="preserve">
          <source>Security</source>
          <target state="translated">Security</target>
        </trans-unit>
        <trans-unit id="cb670e82b44c131414fdd62cec2e2271a0c3e1ce" translate="yes" xml:space="preserve">
          <source>See &quot;Reset, restore and revert&quot; in &lt;a href=&quot;git&quot;&gt;git[1]&lt;/a&gt; for the differences between the three commands.</source>
          <target state="translated">3つのコマンドの違いについては、&lt;a href=&quot;git&quot;&gt;git [1]の&lt;/a&gt;「リセット、復元、復帰」を参照してください。</target>
        </trans-unit>
        <trans-unit id="449a31d4b9b49095d0b90df41f056d43c8512f47" translate="yes" xml:space="preserve">
          <source>See &amp;ldquo;Responses To Commands&amp;rdquo; below for details about how to read this output safely.</source>
          <target state="translated">この出力を安全に読み取る方法の詳細については、以下の「コマンドへの応答」を参照してください。</target>
        </trans-unit>
        <trans-unit id="814949d103c65b43b61081c8789235b00c3553fa" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;api-trace2&quot;&gt;Trace2 documentation&lt;/a&gt; for full details.</source>
          <target state="translated">詳細については、&lt;a href=&quot;api-trace2&quot;&gt;Trace2のドキュメント&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="b53c26f4c249563ab9682d7689da982420c04631" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-add&quot;&gt;git-add[1]&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;git-add&quot;&gt;git-add [1]を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="fa55cebc3f97b3ec5f8f25b42d230a3ac0a7871d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;git-config&quot;&gt;git-config [1]を&lt;/a&gt;参照してください</target>
        </trans-unit>
        <trans-unit id="927ac170ac73e3dd929a2427d80cab2492ff1deb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for core variables and &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt; for settings related to diff generation.</source>
          <target state="translated">コア変数については&lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt;を、差分生成に関連する設定については&lt;a href=&quot;git-diff&quot;&gt;git-diff [1]&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="29e0897ca1f4dba055ef02d2ee4ea34bca59c450" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for more details on the configuration options mentioned above and &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt; for more details on the refspec syntax.</source>
          <target state="translated">上記の設定オプションの詳細については&lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt;を、refspec構文の詳細については&lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c85dd3188b261218c6ce78dddb7cf27f02c4e498" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt; for the full list of supported options.</source>
          <target state="translated">サポートされているオプションの完全なリストについては、&lt;a href=&quot;git-diff&quot;&gt;git-diff [1]&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="873eafed92c6d143cde4cdd22e9f2f62fb8eab44" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-merge&quot;&gt;git-merge[1]&lt;/a&gt; for details, including how conflicts are presented and handled.</source>
          <target state="translated">競合がどのように提示されて処理されるかなど、詳細については&lt;a href=&quot;git-merge&quot;&gt;git-merge [1]&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="a1dbf552c05185bb952ce9cddaaca48b3f486c1e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-merge&quot;&gt;git-merge[1]&lt;/a&gt; for some hints on resolving such conflicts.</source>
          <target state="translated">このような衝突を解決するためのヒントについては、&lt;a href=&quot;git-merge&quot;&gt;git-merge [1]&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="750a5c09f00fba2da655305aeb20c963fba7eb6e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-repack&quot;&gt;git-repack[1]&lt;/a&gt; for options to generate new packs and replace existing ones.</source>
          <target state="translated">新しいパックを生成して既存のものを置き換えるオプションについては、&lt;a href=&quot;git-repack&quot;&gt;git-repack [1]&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="f51d5b8b3fb6117dc301434a5ecd4dd13bfc3fc0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-send-email&quot;&gt;git-send-email[1]&lt;/a&gt; for description.</source>
          <target state="translated">説明は&lt;a href=&quot;git-send-email&quot;&gt;git-send-email [1]&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="55b7b7d87b2ef94a0c0800814d27411d440df3c7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-send-email&quot;&gt;git-send-email[1]&lt;/a&gt; for description. Note that this setting is not subject to the &lt;code&gt;identity&lt;/code&gt; mechanism.</source>
          <target state="translated">説明は&lt;a href=&quot;git-send-email&quot;&gt;git-send-email [1]&lt;/a&gt;をご覧ください。この設定は &lt;code&gt;identity&lt;/code&gt; メカニズムの影響を受けないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="356db06bc40009203665e547b41d48a6fe47dfb9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-shortlog&quot;&gt;git-shortlog[1]&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;git-shortlog&quot;&gt;git-shortlog [1]を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="816c081fd3a62310db506118ba38e561a6d69e40" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gitcvs-migration&quot;&gt;gitcvs-migration[7]&lt;/a&gt; for the details.</source>
          <target state="translated">詳細は&lt;a href=&quot;gitcvs-migration&quot;&gt;gitcvs-migration [7]&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="a58028451af0f9f542d0d8f8d9f591126508cad5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;githooks&quot;&gt;githooks[5]&lt;/a&gt; for more general info on hook execution.</source>
          <target state="translated">フックの実行に関するより一般的な情報については、&lt;a href=&quot;githooks&quot;&gt;githooks [5]&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ba609b5467f233e457aa9eddbdd4e4c279fc02c9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gitignore&quot;&gt;gitignore[5]&lt;/a&gt; for a detailed explanation of the syntax. You can also place .gitignore files in other directories in your working tree, and they will apply to those directories and their subdirectories. The &lt;code&gt;.gitignore&lt;/code&gt; files can be added to your repository like any other files (just run &lt;code&gt;git add
.gitignore&lt;/code&gt; and &lt;code&gt;git commit&lt;/code&gt;, as usual), which is convenient when the exclude patterns (such as patterns matching build output files) would also make sense for other users who clone your repository.</source>
          <target state="translated">構文の詳細な説明については、&lt;a href=&quot;gitignore&quot;&gt;gitignore [5]&lt;/a&gt;を参照してください。 .gitignoreファイルを作業ツリー内の他のディレクトリに配置することもできます。これらのファイルは、それらのディレクトリとそのサブディレクトリに適用されます。 &lt;code&gt;.gitignore&lt;/code&gt; のファイルは、他のファイルのようなあなたのリポジトリに追加することができます（ただ実行する &lt;code&gt;git add .gitignore&lt;/code&gt; と &lt;code&gt;git commit&lt;/code&gt; いつものように、）もために理にかなっている（例えば、ビルド出力ファイルにマッチするパターンなど）のパターンを除外する際に便利です、リポジトリを複製する他のユーザー。</target>
        </trans-unit>
        <trans-unit id="6c08679dcde5f574a046d2c372d4d13c77c14f09" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gitrepository-layout&quot;&gt;gitrepository-layout[5]&lt;/a&gt; for more information. The rule of thumb is do not make any assumption about whether a path belongs to $GIT_DIR or $GIT_COMMON_DIR when you need to directly access something inside $GIT_DIR. Use &lt;code&gt;git rev-parse --git-path&lt;/code&gt; to get the final path.</source>
          <target state="translated">詳細については、&lt;a href=&quot;gitrepository-layout&quot;&gt;gitrepository-layout [5]&lt;/a&gt;を参照してください。経験則では、$ GIT_DIR内の何かに直接アクセスする必要がある場合、パスが$ GIT_DIRまたは$ GIT_COMMON_DIRに属するかどうかについては想定していません。 &lt;code&gt;git rev-parse --git-path&lt;/code&gt; を使用して、最終的なパスを取得します。</target>
        </trans-unit>
        <trans-unit id="68978af0c4229a0c7ad3871d3bd5d420a7abb9f0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gitrepository-layout&quot;&gt;gitrepository-layout[5]&lt;/a&gt; for more information. The rule of thumb is do not make any assumption about whether a path belongs to &lt;code&gt;$GIT_DIR&lt;/code&gt; or &lt;code&gt;$GIT_COMMON_DIR&lt;/code&gt; when you need to directly access something inside &lt;code&gt;$GIT_DIR&lt;/code&gt;. Use &lt;code&gt;git rev-parse --git-path&lt;/code&gt; to get the final path.</source>
          <target state="translated">詳細については、&lt;a href=&quot;gitrepository-layout&quot;&gt;gitrepository-layout [5]&lt;/a&gt;を参照してください。親指のルールは、パスがに属しているかどうかについての仮定にしないで &lt;code&gt;$GIT_DIR&lt;/code&gt; または &lt;code&gt;$GIT_COMMON_DIR&lt;/code&gt; あなたが内部に直接アクセス何かする必要があるときに &lt;code&gt;$GIT_DIR&lt;/code&gt; 。 &lt;code&gt;git rev-parse --git-path&lt;/code&gt; を使用して、最終パスを取得します。</target>
        </trans-unit>
        <trans-unit id="8a0cffbb9b88d8945c0266619dda8f84ab7a60d6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gittutorial&quot;&gt;gittutorial[7]&lt;/a&gt; to get started, then see &lt;a href=&quot;giteveryday&quot;&gt;giteveryday[7]&lt;/a&gt; for a useful minimum set of commands. The &lt;a href=&quot;user-manual&quot;&gt;Git User&amp;rsquo;s Manual&lt;/a&gt; has a more in-depth introduction.</source>
          <target state="translated">参照してください。&lt;a href=&quot;gittutorial&quot;&gt;[7] gittutorial&lt;/a&gt;見た後、始めるのは&lt;a href=&quot;giteveryday&quot;&gt;giteveryday [7]&lt;/a&gt;コマンドの便利な最小限のセットのために。&lt;a href=&quot;user-manual&quot;&gt;Gitのユーザーズマニュアルには、&lt;/a&gt;より詳細な紹介があります。</target>
        </trans-unit>
        <trans-unit id="edb8fa06792cc06c9610f82e7507e11aaf0b3a79" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gitweb&quot;&gt;gitweb[1]&lt;/a&gt; for description.</source>
          <target state="translated">説明は&lt;a href=&quot;gitweb&quot;&gt;gitweb [1]&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="551344f7c6d18aeed126c268a4887b60ea41a732" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf[5]&lt;/a&gt; for description.</source>
          <target state="translated">説明は&lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf [5]&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="b24fd2d7766898a78228977078b6f143b9eddd17" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gitworkflows&quot;&gt;gitworkflows[7]&lt;/a&gt; for an overview of recommended workflows.</source>
          <target state="translated">推奨ワークフローの概要については、&lt;a href=&quot;gitworkflows&quot;&gt;gitworkflows [7]&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c5aaf5106e04565ca03205c2325b61134a265836" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://repo.or.cz/w/git.git/tree/HEAD:/gitweb/&quot;&gt;http://repo.or.cz/w/git.git/tree/HEAD:/gitweb/&lt;/a&gt; for gitweb source code, browsed using gitweb itself.</source>
          <target state="translated">gitweb自体を使用して参照されるgitwebソースコードについては、&lt;a href=&quot;http://repo.or.cz/w/git.git/tree/HEAD:/gitweb/&quot;&gt;http：&lt;/a&gt; //repo.or.cz/w/git.git/tree/HEAD ： / gitweb /を参照してください。</target>
        </trans-unit>
        <trans-unit id="cf4e44a1f9a750a558dfae089d3110695a154f52" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;multi-pack-index&quot;&gt;The Multi-Pack-Index Design Document&lt;/a&gt; and &lt;a href=&quot;pack-format&quot;&gt;The Multi-Pack-Index Format&lt;/a&gt; for more information on the multi-pack-index feature.</source>
          <target state="translated">参照してください&lt;a href=&quot;multi-pack-index&quot;&gt;マルチパック・インデックス設計書&lt;/a&gt;や&lt;a href=&quot;pack-format&quot;&gt;マルチパック-インデックス・フォーマット&lt;/a&gt;のマルチパック・インデックス機能の詳細については、を。</target>
        </trans-unit>
        <trans-unit id="119e1af35250f977a84e7e9b44e17bab322217d6" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;filemodify&lt;/code&gt; above for a detailed description of &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; の詳細については、上記の &lt;code&gt;filemodify&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="a5e5425cc0264ed1e0714353419a5218265f25cb" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;p4 help revisions&lt;/code&gt; for the full syntax of p4 revision specifiers.</source>
          <target state="translated">p4リビジョン指定子の完全な構文については、 &lt;code&gt;p4 help revisions&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="349e8ba30a5911b964eb56ddd5398d0c455fca71" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;pull.rebase&lt;/code&gt;, &lt;code&gt;branch.&amp;lt;name&amp;gt;.rebase&lt;/code&gt; and &lt;code&gt;branch.autoSetupRebase&lt;/code&gt; in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; if you want to make &lt;code&gt;git pull&lt;/code&gt; always use &lt;code&gt;--rebase&lt;/code&gt; instead of merging.</source>
          <target state="translated">&lt;code&gt;git pull&lt;/code&gt; でマージの代わりに常に &lt;code&gt;--rebase&lt;/code&gt; を使用する場合は、&lt;a href=&quot;git-config&quot;&gt;git-config [1]の&lt;/a&gt; &lt;code&gt;pull.rebase&lt;/code&gt; 、 &lt;code&gt;branch.&amp;lt;name&amp;gt;.rebase&lt;/code&gt; および &lt;code&gt;branch.autoSetupRebase&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="6821589cea1a5f5eeaa157482f5875c8dd6c83e8" translate="yes" xml:space="preserve">
          <source>See OPTIONS for a list of currently defined options.</source>
          <target state="translated">現在定義されているオプションのリストは OPTIONS を参照してください。</target>
        </trans-unit>
        <trans-unit id="a7e489653a4ac322711d151924724bebeaab7578" translate="yes" xml:space="preserve">
          <source>See REF LIST ATTRIBUTES for a list of currently defined attributes.</source>
          <target state="translated">現在定義されている属性のリストについては、「REF LIST ATTRIBUTES」を参照してください。</target>
        </trans-unit>
        <trans-unit id="3f21653c235501bb7bff551e983de8d0a4c4aca2" translate="yes" xml:space="preserve">
          <source>See REF LIST ATTRIBUTES for a list of currently defined attributes. See REF LIST KEYWORDS for a list of currently defined keywords.</source>
          <target state="translated">現在定義されている属性のリストは、『REF LIST ATTRIBUTES』を参照してください。現在定義されているキーワードのリストについては、 REF LIST KEYWORDS を参照してください。</target>
        </trans-unit>
        <trans-unit id="2d8243a2c0e464492c9d563c4f92c56ae3421bcc" translate="yes" xml:space="preserve">
          <source>See also</source>
          <target state="translated">参照:</target>
        </trans-unit>
        <trans-unit id="ed7577b94e1ee464c75f81cac37b66a6926c7436" translate="yes" xml:space="preserve">
          <source>See also &quot;Repositories&quot; and later subsections in &lt;a href=&quot;gitweb&quot;&gt;gitweb[1]&lt;/a&gt; manpage.</source>
          <target state="translated">&lt;a href=&quot;gitweb&quot;&gt;gitweb [1]&lt;/a&gt;マンページの「リポジトリ」とそれ以降のサブセクションも参照してください。</target>
        </trans-unit>
        <trans-unit id="52af4d47e0ed6dc8c81958e8938b6aa167c96389" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#FILES&quot;&gt;FILES&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#FILES&quot;&gt;FILES&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="dcd469ab484a6e7e06726ac525a02976b65d3216" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#git-quick-start&quot;&gt;Git Quick Reference&lt;/a&gt; for a brief overview of Git commands, without any explanation.</source>
          <target state="translated">説明なしのGitコマンドの概要については、&lt;a href=&quot;#git-quick-start&quot;&gt;Gitクイックリファレンス&lt;/a&gt;もご覧ください。</target>
        </trans-unit>
        <trans-unit id="776296c90f2638f4facdccd84ed267d15501958e" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;git-add&quot;&gt;git-add[1]&lt;/a&gt; for a more user-friendly way to do some of the most common operations on the index.</source>
          <target state="translated">インデックスで最も一般的な操作のいくつかを実行するためのよりユーザーフレンドリーな方法については、&lt;a href=&quot;git-add&quot;&gt;git-add [1]&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="7d2d6e7dcb0c9c7bc63cd26813647bc47c39be07" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;git-stash&quot;&gt;git-stash[1]&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;git-stash&quot;&gt;git-stash [1]&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="07d3f2d4e9abbb86fc4947deaf4abd1a8839b08a" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://lore.kernel.org/git/7v64clg5u9.fsf@assigned-by-dhcp.cox.net/&quot;&gt;https://lore.kernel.org/git/7v64clg5u9.fsf@assigned-by-dhcp.cox.net/&lt;/a&gt; and &lt;a href=&quot;https://lore.kernel.org/git/7vy7ej9g38.fsf@gitster.siamese.dyndns.org/&quot;&gt;https://lore.kernel.org/git/7vy7ej9g38.fsf@gitster.siamese.dyndns.org/&lt;/a&gt; for further information.</source>
          <target state="translated">&lt;a href=&quot;https://lore.kernel.org/git/7v64clg5u9.fsf@assigned-by-dhcp.cox.net/&quot;&gt;https://lore.kernel.org/git/7v64clg5u9.fsf@assigned-by-dhcp.cox.net/&lt;/a&gt;および&lt;a href=&quot;https://lore.kernel.org/git/7vy7ej9g38.fsf@gitster.siamese.dyndns.org/&quot;&gt;https://lore.kernel.org/git/7vy7ej9g38.fsf@gitster.siamese.dyndns&lt;/a&gt;も参照してください。詳細については、.org /。</target>
        </trans-unit>
        <trans-unit id="1c13efbf0ce0a3c500629d1824fbdc470face67d" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;%avatar_size&lt;/code&gt; with pixel sizes for icons and avatars (&quot;default&quot; is used for one-line like &quot;log&quot; and &quot;shortlog&quot;, &quot;double&quot; is used for two-line like &quot;commit&quot;, &quot;commitdiff&quot; or &quot;tag&quot;). If the default font sizes or lineheights are changed (e.g. via adding extra CSS stylesheet in &lt;code&gt;@stylesheets&lt;/code&gt;), it may be appropriate to change these values.</source>
          <target state="translated">アイコンとアバターのピクセルサイズの &lt;code&gt;%avatar_size&lt;/code&gt; も参照してください（ &quot;default&quot;は &quot;log&quot;や &quot;shortlog&quot;などの1行に使用され、 &quot;double&quot;は &quot;commit&quot;、 &quot;commitdiff&quot;または &quot;tagなどの2行に使用されます&quot;）。デフォルトのフォントサイズまたは行の高さが変更された場合（ &lt;code&gt;@stylesheets&lt;/code&gt; に CSSスタイルシートを追加するなど）、これらの値を変更することが適切な場合があります。</target>
        </trans-unit>
        <trans-unit id="ef4059c160d59845887bc762e1d3b94b36ac9cb5" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;remote.&amp;lt;name&amp;gt;.prune&lt;/code&gt; and the PRUNING section of &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;remote.&amp;lt;name&amp;gt;.prune&lt;/code&gt; および&lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]の&lt;/a&gt; PRUNINGセクションも参照してください。</target>
        </trans-unit>
        <trans-unit id="97a52221a6fcfc08e94858dbbd32d431c7460334" translate="yes" xml:space="preserve">
          <source>See also INCOMPATIBLE OPTIONS below.</source>
          <target state="translated">下記のINCOMPATIBLE OPTIONSも参照してください。</target>
        </trans-unit>
        <trans-unit id="da70e539ebd47fc0666afc11774bbce890e2d57d" translate="yes" xml:space="preserve">
          <source>See also REBASING MERGES and INCOMPATIBLE OPTIONS below.</source>
          <target state="translated">後述の REBASING MERGES と INCOMPATIBLE OPTIONS も参照してください。</target>
        </trans-unit>
        <trans-unit id="e1cfc7a6ae7eb249f6af4e953ed0aa13e7a9f32c" translate="yes" xml:space="preserve">
          <source>See also more involved example in &quot;Controlling access to Git repositories&quot; subsection on &lt;a href=&quot;gitweb&quot;&gt;gitweb[1]&lt;/a&gt; manpage.</source>
          <target state="translated">&lt;a href=&quot;gitweb&quot;&gt;gitweb [1]&lt;/a&gt;マンページの「Gitリポジトリへのアクセスの制御」サブセクションのより複雑な例もご覧ください。</target>
        </trans-unit>
        <trans-unit id="a90b35f1bca4c9661af072a420272419d14c9fa7" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;howto-index&quot;&gt;howto&lt;/a&gt; documents for some useful examples.</source>
          <target state="translated">いくつかの有用な例については、&lt;a href=&quot;howto-index&quot;&gt;howto&lt;/a&gt;ドキュメントも参照してください。</target>
        </trans-unit>
        <trans-unit id="6727f96125b7533ade941bf6b96be91f1faec003" translate="yes" xml:space="preserve">
          <source>See also the &lt;code&gt;--amend&lt;/code&gt; option to &lt;a href=&quot;git-commit&quot;&gt;git-commit[1]&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;git-commit&quot;&gt;git-commit [1]&lt;/a&gt;の &lt;code&gt;--amend&lt;/code&gt; オプションも参照してください。</target>
        </trans-unit>
        <trans-unit id="5d4e5e0e34b4d53289a1425851b494735221ec25" translate="yes" xml:space="preserve">
          <source>See also the &lt;code&gt;--negotiation-tip&lt;/code&gt; option for &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt;の &lt;code&gt;--negotiation-tip&lt;/code&gt; オプションも参照してください。</target>
        </trans-unit>
        <trans-unit id="393dae9d9c5b724b3e92a8007628ecdf490bf229" translate="yes" xml:space="preserve">
          <source>See also the &lt;code&gt;fetch.negotiationAlgorithm&lt;/code&gt; configuration variable documented in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;git-config&quot;&gt;git-config [1]に&lt;/a&gt;記載されている &lt;code&gt;fetch.negotiationAlgorithm&lt;/code&gt; 構成変数もご覧ください。</target>
        </trans-unit>
        <trans-unit id="b34c3a53a35e7fde45b0dcf380dd07a6f67e09b3" translate="yes" xml:space="preserve">
          <source>See below for a detailed description of the &lt;code&gt;data&lt;/code&gt; command.</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; コマンドの詳細については、以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="8b157460c4f4c3bf67bdbeab995004fb808185e8" translate="yes" xml:space="preserve">
          <source>See the &quot;CONFIGURATION FILE&quot; section of &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for details on the configuration file. The file is plain text, so you can also edit it with your favorite editor.</source>
          <target state="translated">設定ファイルの詳細については、&lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt;の「設定ファイル」セクションを参照してください。ファイルはプレーンテキストなので、お好みのエディターで編集することもできます。</target>
        </trans-unit>
        <trans-unit id="1149bacaf9085ecc4180307d6ae05e8d61573cee" translate="yes" xml:space="preserve">
          <source>See the &quot;PRETTY FORMATS&quot; section for some additional details for each format. When &lt;code&gt;=&amp;lt;format&amp;gt;&lt;/code&gt; part is omitted, it defaults to &lt;code&gt;medium&lt;/code&gt;.</source>
          <target state="translated">各フォーマットの詳細については、「プリティフォーマット」を参照してください。 &lt;code&gt;=&amp;lt;format&amp;gt;&lt;/code&gt; に一部が省略され、それはデフォルト &lt;code&gt;medium&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="16b5734b1a38c0fca2aa75fc8f5afb5e38171b76" translate="yes" xml:space="preserve">
          <source>See the &quot;notes.rewrite.&amp;lt;command&amp;gt;&quot; configuration for a way to carry notes across commands that rewrite commits.</source>
          <target state="translated">コミットを再書き込みするコマンド間でメモを運ぶ方法については、「notes.rewrite。&amp;lt;command&amp;gt;」構成を参照してください。</target>
        </trans-unit>
        <trans-unit id="37c9890c0abc7db617d319f8c623b95994d12d01" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch[1]&lt;/a&gt; and &lt;a href=&quot;git-send-email&quot;&gt;git-send-email[1]&lt;/a&gt; manpages for further usage notes.</source>
          <target state="translated">詳しい使用方法については、&lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch [1]&lt;/a&gt;および&lt;a href=&quot;git-send-email&quot;&gt;git-send-email [1]の&lt;/a&gt;マンページを参照してください。</target>
        </trans-unit>
        <trans-unit id="664aa71d1d2c6ad85c41bdce7b1df31a05aeb0c8" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;git-tag&quot;&gt;git-tag[1]&lt;/a&gt; command to learn how to create and verify tag objects. (Note that &lt;a href=&quot;git-tag&quot;&gt;git-tag[1]&lt;/a&gt; can also be used to create &quot;lightweight tags&quot;, which are not tag objects at all, but just simple references whose names begin with &lt;code&gt;refs/tags/&lt;/code&gt;).</source>
          <target state="translated">タグオブジェクトを作成および検証する方法については、&lt;a href=&quot;git-tag&quot;&gt;git-tag [1]&lt;/a&gt;コマンドをご覧ください。（&lt;a href=&quot;git-tag&quot;&gt;git-tag [1]&lt;/a&gt;は「軽量タグ」の作成にも使用できることに注意してください。これはタグオブジェクトではなく、名前が &lt;code&gt;refs/tags/&lt;/code&gt; 始まる単純な参照にすぎません）。</target>
        </trans-unit>
        <trans-unit id="d438ee28fcc5eac2c57090871716c0835edb3fb6" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://git-scm.com/docs/howto/revert-a-faulty-merge&quot;&gt;revert-a-faulty-merge How-To&lt;/a&gt; for more details.</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://git-scm.com/docs/howto/revert-a-faulty-merge&quot;&gt;revert-a-faulty-mergeのハウツーを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="36ef80def8fdcd62acbd00beaaea20020f8c5e10" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;--pretty&lt;/code&gt; option in the &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt; man page for more display options.</source>
          <target state="translated">その他の表示オプションについては、&lt;a href=&quot;git-log&quot;&gt;git-log [1]の&lt;/a&gt; manページの &lt;code&gt;--pretty&lt;/code&gt; オプションを参照してください。</target>
        </trans-unit>
        <trans-unit id="4059094394364c65c4e256eefa4143bc85285e53" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;--tool=&amp;lt;tool&amp;gt;&lt;/code&gt; option above for more details.</source>
          <target state="translated">詳細については、上記の &lt;code&gt;--tool=&amp;lt;tool&amp;gt;&lt;/code&gt; オプションを参照してください。</target>
        </trans-unit>
        <trans-unit id="cdbbd93582a076d15bd34c470fc66d5137cf3c4d" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;--trust-exit-code&lt;/code&gt; option above for more details.</source>
          <target state="translated">詳細については、上記の &lt;code&gt;--trust-exit-code&lt;/code&gt; オプションを参照してください。</target>
        </trans-unit>
        <trans-unit id="b8e91773464e68ddb68c67818ddc930117958012" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;gc.auto&lt;/code&gt; option in the &quot;CONFIGURATION&quot; section below for how this heuristic works.</source>
          <target state="translated">このヒューリスティックの仕組みについては、以下の「設定」セクションの &lt;code&gt;gc.auto&lt;/code&gt; オプションを参照してください。</target>
        </trans-unit>
        <trans-unit id="3aa11a07b044aa013b3901191823f51922a8ff20" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;gc.bigPackThreshold&lt;/code&gt; configuration variable below. When in use, it&amp;rsquo;ll affect how the auto pack limit works.</source>
          <target state="translated">以下の &lt;code&gt;gc.bigPackThreshold&lt;/code&gt; 構成変数を参照してください。使用すると、自動パック制限の動作に影響します。</target>
        </trans-unit>
        <trans-unit id="3053c5245151cb0daaf5d132e8a14e630a595774" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;pathspec&lt;/code&gt; entry in &lt;a href=&quot;gitglossary&quot;&gt;gitglossary[7]&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;gitglossary&quot;&gt;gitglossary [7]&lt;/a&gt;の &lt;code&gt;pathspec&lt;/code&gt; エントリを参照してください。</target>
        </trans-unit>
        <trans-unit id="75fe9e67c24619f5763d970fe2b63e0643ff0b35" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;pickaxe&lt;/code&gt; entry in &lt;a href=&quot;gitdiffcore&quot;&gt;gitdiffcore[7]&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;gitdiffcore&quot;&gt;gitdiffcore [7]&lt;/a&gt;の &lt;code&gt;pickaxe&lt;/code&gt; エントリを参照してください。</target>
        </trans-unit>
        <trans-unit id="83948d6384607ede7321a1e18da150f9a73d4146" translate="yes" xml:space="preserve">
          <source>See the CONFIGURATION section for &lt;code&gt;sendemail.multiEdit&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sendemail.multiEdit&lt;/code&gt; のCONFIGURATIONセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="f7f0c85a1fe22d7a44e2019c11a92087c61176c9" translate="yes" xml:space="preserve">
          <source>See the PRUNING section below for more details.</source>
          <target state="translated">詳しくは下記のPRUNINGの項をご覧ください。</target>
        </trans-unit>
        <trans-unit id="642ced677c18bf15d387f97024a58b4d20d0707e" translate="yes" xml:space="preserve">
          <source>See the PRUNING section of &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt; for what it&amp;rsquo;ll prune depending on various configuration.</source>
          <target state="translated">さまざまな構成に応じてプルーニングされる内容については、&lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt;のプルーニングセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="8b23758c15811b8a84155a82ad559efc97bcaf83" translate="yes" xml:space="preserve">
          <source>See the add subcommand for the definition of default remote.</source>
          <target state="translated">デフォルトリモートの定義については、add サブコマンドを参照してください。</target>
        </trans-unit>
        <trans-unit id="7b02d435af668a3154c5db21e5216702c6ccada1" translate="yes" xml:space="preserve">
          <source>See the documentation for the &lt;code&gt;--depth&lt;/code&gt; option in &lt;a href=&quot;git-repack&quot;&gt;git-repack[1]&lt;/a&gt; for more details.</source>
          <target state="translated">詳細については、&lt;a href=&quot;git-repack&quot;&gt;git- &lt;/a&gt; &lt;code&gt;--depth&lt;/code&gt; [1]の--depthオプションのドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="8a5c36fc0819626b74533177ce4ae892455a3785" translate="yes" xml:space="preserve">
          <source>See the documentation for the &lt;code&gt;--window&lt;/code&gt; option in &lt;a href=&quot;git-repack&quot;&gt;git-repack[1]&lt;/a&gt; for more details.</source>
          <target state="translated">詳細については、&lt;a href=&quot;git-repack&quot;&gt;git- &lt;/a&gt; &lt;code&gt;--window&lt;/code&gt; [1]の--windowオプションのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="3fcb475ca761c4788b65bc17cc61cddb7ffeaae1" translate="yes" xml:space="preserve">
          <source>See the explanations of the &lt;code&gt;remote.&amp;lt;name&amp;gt;.url&lt;/code&gt;, &lt;code&gt;branch.&amp;lt;name&amp;gt;.remote&lt;/code&gt;, and &lt;code&gt;remote.&amp;lt;name&amp;gt;.push&lt;/code&gt; options in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for details.</source>
          <target state="translated">詳細については、&lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt;の &lt;code&gt;remote.&amp;lt;name&amp;gt;.url&lt;/code&gt; 、 &lt;code&gt;branch.&amp;lt;name&amp;gt;.remote&lt;/code&gt; 、および &lt;code&gt;remote.&amp;lt;name&amp;gt;.push&lt;/code&gt; オプションの説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="8f33051f0ff2a32371d05cfc9580039d116c83c4" translate="yes" xml:space="preserve">
          <source>See the file gitweb/INSTALL in the Git source tree and &lt;a href=&quot;gitweb&quot;&gt;gitweb[1]&lt;/a&gt; for instructions on details setting up a permanent installation with a CGI or Perl capable server.</source>
          <target state="translated">CGIまたはPerl対応のサーバーで永続的なインストールをセットアップする詳細については、Gitソースツリーのgitweb / INSTALLファイルと&lt;a href=&quot;gitweb&quot;&gt;gitweb [1]&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ce13732a4e4daae5026a5a26714caf41bcc13201" translate="yes" xml:space="preserve">
          <source>See the following entry for information about normalizing line endings as well, and see &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt; for more information about attribute files.</source>
          <target state="translated">行末の正規化についても次のエントリを参照してください。属性ファイルの詳細については、&lt;a href=&quot;gitattributes&quot;&gt;gitattributes [5]&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="7471ce55c909897f892e3510360e845c3a8c6f7d" translate="yes" xml:space="preserve">
          <source>See the notes on the quarantine environment below.</source>
          <target state="translated">以下、検疫環境の注意点を参照してください。</target>
        </trans-unit>
        <trans-unit id="38b41ff72286b874a0f3db64c92581ef765256ff" translate="yes" xml:space="preserve">
          <source>See the references in the &quot;description&quot; section to get started using Git. The following is probably more detail than necessary for a first-time user.</source>
          <target state="translated">Git を使い始めるには、「説明」の項のリファレンスを参照してください。以下の内容は、初めてGitを使う人には必要以上に詳しいかもしれません。</target>
        </trans-unit>
        <trans-unit id="3a308d2b2b8eed03e46d2f6cf143cfa2acb546c2" translate="yes" xml:space="preserve">
          <source>See the section describing &lt;code&gt;&amp;lt;refspec&amp;gt;...&lt;/code&gt; above for a discussion of the matching semantics.</source>
          <target state="translated">一致するセマンティクスの説明については、上記の &lt;code&gt;&amp;lt;refspec&amp;gt;...&lt;/code&gt; を説明するセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="ff8a65e5a8b50b2cd32960f644c92d05159f0bd7" translate="yes" xml:space="preserve">
          <source>See the section on &quot;Quarantine Environment&quot; in &lt;a href=&quot;git-receive-pack&quot;&gt;git-receive-pack[1]&lt;/a&gt; for some caveats.</source>
          <target state="translated">注意事項については、&lt;a href=&quot;git-receive-pack&quot;&gt;git-receive-pack [1]の&lt;/a&gt;「隔離環境」のセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="f11ef173da292966d44f74e581bfe70f66e03523" translate="yes" xml:space="preserve">
          <source>See what files &lt;code&gt;git submodule&lt;/code&gt; created:</source>
          <target state="translated">&lt;code&gt;git submodule&lt;/code&gt; 作成したファイルを確認します。</target>
        </trans-unit>
        <trans-unit id="9cf656c9a09d4ac0135f6d95a0f9e062689ebbd6" translate="yes" xml:space="preserve">
          <source>Select &quot;Create a new project &amp;rarr; From CVS checkout&quot;</source>
          <target state="translated">「新規プロジェクトの作成&amp;rarr;CVSチェックアウトから」を選択します</target>
        </trans-unit>
        <trans-unit id="4295d4906e2ecc1e09bb3b7dd2f7bb2e8c0aa11e" translate="yes" xml:space="preserve">
          <source>Select file contents to include in the next commit, then make the commit:</source>
          <target state="translated">次のコミットに含めるファイルの内容を選択し、コミットします。</target>
        </trans-unit>
        <trans-unit id="5458b52d7bc655d716d7b187eb088a80fdb02862" translate="yes" xml:space="preserve">
          <source>Select non-matching lines.</source>
          <target state="translated">一致しない行を選択します。</target>
        </trans-unit>
        <trans-unit id="8cb11cd07f748f144ab7c53fba5e088fa9457785" translate="yes" xml:space="preserve">
          <source>Select only files that are Added (&lt;code&gt;A&lt;/code&gt;), Copied (&lt;code&gt;C&lt;/code&gt;), Deleted (&lt;code&gt;D&lt;/code&gt;), Modified (&lt;code&gt;M&lt;/code&gt;), Renamed (&lt;code&gt;R&lt;/code&gt;), have their type (i.e. regular file, symlink, submodule, &amp;hellip;​) changed (&lt;code&gt;T&lt;/code&gt;), are Unmerged (&lt;code&gt;U&lt;/code&gt;), are Unknown (&lt;code&gt;X&lt;/code&gt;), or have had their pairing Broken (&lt;code&gt;B&lt;/code&gt;). Any combination of the filter characters (including none) can be used. When &lt;code&gt;*&lt;/code&gt; (All-or-none) is added to the combination, all paths are selected if there is any file that matches other criteria in the comparison; if there is no file that matches other criteria, nothing is selected.</source>
          <target state="translated">追加された（ &lt;code&gt;A&lt;/code&gt; ）、コピーされた（ &lt;code&gt;C&lt;/code&gt; ）、削除された（ &lt;code&gt;D&lt;/code&gt; ）、変更された（ &lt;code&gt;M&lt;/code&gt; ）、名前が変更された（ &lt;code&gt;R&lt;/code&gt; ）ファイルのタイプ（つまり、通常のファイル、シンボリックリンク、サブモジュールなど）が変更された（ &lt;code&gt;T&lt;/code&gt; ）、結合されていない（ &lt;code&gt;U&lt;/code&gt; ）、不明である（ &lt;code&gt;X&lt;/code&gt; ）、またはペアリングが解除されている（ &lt;code&gt;B&lt;/code&gt; ）。フィルター文字の任意の組み合わせ（なしを含む）を使用できます。場合 &lt;code&gt;*&lt;/code&gt; （全か無か）の組み合わせに添加する比較して他の基準に一致するすべてのファイルが存在する場合、すべてのパスが選択されます。他の基準に一致するファイルがない場合、何も選択されません。</target>
        </trans-unit>
        <trans-unit id="9d25b5bb0ae1f31c2bf194221afe3b7c5ccd5c79" translate="yes" xml:space="preserve">
          <source>Select the specified commit after loading the graph. Default behavior is equivalent to specifying &lt;code&gt;--select-commit=HEAD&lt;/code&gt;.</source>
          <target state="translated">グラフを読み込んだ後、指定したコミットを選択します。デフォルトの動作は、 &lt;code&gt;--select-commit=HEAD&lt;/code&gt; を指定することと同等です。</target>
        </trans-unit>
        <trans-unit id="57773e54b07c6d2a3694e83fd05fece4b0d947e7" translate="yes" xml:space="preserve">
          <source>Send a &quot;thin&quot; pack, which records objects in deltified form based on objects not included in the pack to reduce network traffic.</source>
          <target state="translated">ネットワークトラフィックを削減するために、パックに含まれていないオブジェクトに基づいてデルタ化された形でオブジェクトを記録する「シン」パックを送信します。</target>
        </trans-unit>
        <trans-unit id="dba975b50e1dab9f5a9242dc7eff168b3f3c3097" translate="yes" xml:space="preserve">
          <source>Send a collection of patches as emails</source>
          <target state="translated">パッチのコレクションをメールで送信</target>
        </trans-unit>
        <trans-unit id="68bbb0e77605fda568edfbf41010fd23ca67e845" translate="yes" xml:space="preserve">
          <source>Send a collection of patches from stdin to an IMAP folder</source>
          <target state="translated">stdin から IMAP フォルダにパッチのコレクションを送信する</target>
        </trans-unit>
        <trans-unit id="9e60bdff05a0f017374a45f7533dd42ce19f567b" translate="yes" xml:space="preserve">
          <source>Send archive back to git-archive</source>
          <target state="translated">アーカイブを git-archive に送り返す</target>
        </trans-unit>
        <trans-unit id="06c77ce9ef53aee9301f7f13788f25846ac20a8c" translate="yes" xml:space="preserve">
          <source>Send emails even if safety checks would prevent it.</source>
          <target state="translated">安全確認で防げてもメールを送る。</target>
        </trans-unit>
        <trans-unit id="be63d2739b30ca972f203afdf956fffed1109d64" translate="yes" xml:space="preserve">
          <source>Send log messages to the specified destination. Note that this option does not imply --verbose, thus by default only error conditions will be logged. The &amp;lt;destination&amp;gt; must be one of:</source>
          <target state="translated">指定された宛先にログメッセージを送信します。このオプションは--verboseを意味しないことに注意してください。したがって、デフォルトではエラー状態のみがログに記録されます。&amp;lt;destination&amp;gt;は次のいずれかである必要があります。</target>
        </trans-unit>
        <trans-unit id="251405e1d50dced2d303a34b1887abbae618fd89" translate="yes" xml:space="preserve">
          <source>Send objects packed back to git-fetch-pack</source>
          <target state="translated">パックされたオブジェクトを git-fetch-pack に送り返す</target>
        </trans-unit>
        <trans-unit id="30587fd7018a9775c3e41757ae3e2ad3d70bd2fe" translate="yes" xml:space="preserve">
          <source>Send results to standard output instead of overwriting &lt;code&gt;&amp;lt;current-file&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;current-file&amp;gt;&lt;/code&gt; を上書きする代わりに、結果を標準出力に送信します。</target>
        </trans-unit>
        <trans-unit id="3d06a389aa194b4adb3bdedb6cd48b760831d80a" translate="yes" xml:space="preserve">
          <source>Send the patch to yourself, exactly the way you would, except with To: and Cc: lines that do not contain the list and maintainer address.</source>
          <target state="translated">To:と Cc:の行にリストとメンテナのアドレスが含まれていないことを除いて、自分自身にパッチを送ってください。</target>
        </trans-unit>
        <trans-unit id="ceafde86d6c97e1f3a1eee505d203dadbe2732aa" translate="yes" xml:space="preserve">
          <source>Sending</source>
          <target state="translated">Sending</target>
        </trans-unit>
        <trans-unit id="bbde4ea1647345dcea60ec05d6e174947edc5729" translate="yes" xml:space="preserve">
          <source>Sending &lt;strong&gt;SIGUSR1&lt;/strong&gt; to the &lt;code&gt;git fast-import&lt;/code&gt; process ends the current packfile early, simulating a &lt;code&gt;checkpoint&lt;/code&gt; command. The impatient operator can use this facility to peek at the objects and refs from an import in progress, at the cost of some added running time and worse compression.</source>
          <target state="translated">&lt;strong&gt;SIGUSR1&lt;/strong&gt;を &lt;code&gt;git fast-import&lt;/code&gt; プロセスに送信すると、現在のパックファイルが早期に終了し、 &lt;code&gt;checkpoint&lt;/code&gt; コマンドがシミュレートされます。せっかちなオペレーターは、この機能を使用して、実行時間の増加と圧縮率の低下を犠牲にして、進行中のインポートからオブジェクトと参照を調べることができます。</target>
        </trans-unit>
        <trans-unit id="69d9f7cb6992812d3ae67c5832e95e51eb94b31e" translate="yes" xml:space="preserve">
          <source>Sends missing objects to remote repository, and updates the remote branch.</source>
          <target state="translated">不足しているオブジェクトをリモートリポジトリに送り、リモートブランチを更新します。</target>
        </trans-unit>
        <trans-unit id="23bbe7eedad5f66236da6f21a05fbf3a6d0c4e2b" translate="yes" xml:space="preserve">
          <source>Separate changes</source>
          <target state="translated">別々の変更</target>
        </trans-unit>
        <trans-unit id="eff8ac5c6bf46b60a389d5ad12d1eb060f7f80df" translate="yes" xml:space="preserve">
          <source>Separate out other information hidden behind NUL bytes (e.g. agent string as a capability and symrefs can be requested using &lt;code&gt;ls-refs&lt;/code&gt;)</source>
          <target state="translated">NULバイトの背後に隠されている他の情報を分離します（例：機能としてのエージェント文字列とsymrefsは &lt;code&gt;ls-refs&lt;/code&gt; を使用してリクエストできます）</target>
        </trans-unit>
        <trans-unit id="ece352ef8327b4eb0b177147a24a8ec2f1418b4f" translate="yes" xml:space="preserve">
          <source>Separate the commits with NULs instead of with new newlines.</source>
          <target state="translated">コミットを改行ではなく NUL で区切る。</target>
        </trans-unit>
        <trans-unit id="fbdab030c0f541b63a6720cb36f79b58a8a8ddb3" translate="yes" xml:space="preserve">
          <source>Separates pathspec from options for disambiguation purposes.</source>
          <target state="translated">曖昧さを解消するためにpathspecをオプションから分離します。</target>
        </trans-unit>
        <trans-unit id="b8e497aff8340b70a81417c3e01a367bc04c018c" translate="yes" xml:space="preserve">
          <source>Separating argument from the option</source>
          <target state="translated">オプションから引数を分離する</target>
        </trans-unit>
        <trans-unit id="ad1ff98d9455414907920436d0228d1f33b8b9d5" translate="yes" xml:space="preserve">
          <source>Sequence &quot;%f&quot; on the filter command line is replaced with the name of the file the filter is working on. A filter might use this in keyword substitution. For example:</source>
          <target state="translated">フィルタのコマンドラインのシーケンス &quot;%f&quot; は、フィルタが作業しているファイルの名前に置き換えられます。フィルタはこれをキーワード置換で使用することができます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="0eabff0639877f6ba301a816aebe732d4b82d7eb" translate="yes" xml:space="preserve">
          <source>Sequencer subcommands</source>
          <target state="translated">シーケンサーサブコマンド</target>
        </trans-unit>
        <trans-unit id="4f86f0b14605788e8e970dd961527f669911f656" translate="yes" xml:space="preserve">
          <source>Server Admin</source>
          <target state="translated">サーバー管理者</target>
        </trans-unit>
        <trans-unit id="bf86016aaef42ea05ae67a04c37100e13cf311bf" translate="yes" xml:space="preserve">
          <source>Server side implementation of Git over HTTP</source>
          <target state="translated">HTTP 上での Git のサーバーサイド実装</target>
        </trans-unit>
        <trans-unit id="448833463540a7335612a7134526ca62a325b6eb" translate="yes" xml:space="preserve">
          <source>Server-side syntax highlight support in &quot;blob&quot; view. It requires &lt;code&gt;$highlight_bin&lt;/code&gt; program to be available (see the description of this variable in the &quot;Configuration variables&quot; section above), and therefore is disabled by default.</source>
          <target state="translated">サーバー側の構文は、「blob」ビューのサポートを強調表示します。 &lt;code&gt;$highlight_bin&lt;/code&gt; プログラムが利用可能である必要があり（上記の「構成変数」セクションのこの変数の説明を参照）、したがって、デフォルトでは無効になっています。</target>
        </trans-unit>
        <trans-unit id="5cbd584046863bc7b753e57e8681a98a87f36f0f" translate="yes" xml:space="preserve">
          <source>Services</source>
          <target state="translated">Services</target>
        </trans-unit>
        <trans-unit id="a8d786ade49394688747f3008fcce5a3fadd1e66" translate="yes" xml:space="preserve">
          <source>Session IDs should be unique to a given process. They must fit within a packet-line, and must not contain non-printable or whitespace characters. The current implementation uses trace2 session IDs (see &lt;a href=&quot;api-trace2&quot;&gt;api-trace2&lt;/a&gt; for details), but this may change and users of the session ID should not rely on this fact.</source>
          <target state="translated">セッションIDは、特定のプロセスに固有である必要があります。それらはパケット行内に収まる必要があり、印刷不可能な文字や空白文字を含めることはできません。現在の実装ではtrace2セッションIDを使用しています（詳細は&lt;a href=&quot;api-trace2&quot;&gt;api-trace2&lt;/a&gt;を参照）が、これは変更される可能性があるため、セッションIDのユーザーはこの事実に依存しないでください。</target>
        </trans-unit>
        <trans-unit id="448ab73ba1c21e671e218fb91f2644c834f0c16f" translate="yes" xml:space="preserve">
          <source>Set</source>
          <target state="translated">Set</target>
        </trans-unit>
        <trans-unit id="3c9afc64e385fe9ff937f49ef33cea7eda6d2e43" translate="yes" xml:space="preserve">
          <source>Set &amp;lt;ref&amp;gt; to &amp;lt;newvalue&amp;gt; after verifying &amp;lt;oldvalue&amp;gt;, if given. Specify a zero &amp;lt;newvalue&amp;gt; to ensure the ref does not exist after the update and/or a zero &amp;lt;oldvalue&amp;gt; to make sure the ref does not exist before the update.</source>
          <target state="translated">&amp;lt;oldvalue&amp;gt;が指定されている場合は、検証後に&amp;lt;ref&amp;gt;を&amp;lt;newvalue&amp;gt;に設定します。更新後に参照が存在しないようにするには、ゼロの&amp;lt;newvalue&amp;gt;を指定するか、更新前に参照が存在しないようにするには、ゼロの&amp;lt;oldvalue&amp;gt;を指定します。</target>
        </trans-unit>
        <trans-unit id="ab50837f4221ee62152d0a56b00aa01e36d1c0b1" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;$maxload&lt;/code&gt; to undefined value (&lt;code&gt;undef&lt;/code&gt;) to turn this feature off. The default value is 300.</source>
          <target state="translated">この機能をオフにするには、 &lt;code&gt;$maxload&lt;/code&gt; を未定義の値（ &lt;code&gt;undef&lt;/code&gt; ）に設定します。デフォルト値は300です。</target>
        </trans-unit>
        <trans-unit id="b447103879e346ae5dca39d0e8955736e891677f" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;C'&lt;/code&gt; to &lt;code&gt;C&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;C'&lt;/code&gt; を &lt;code&gt;C&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="4c1de92d3e849c9a6ed15961e4d9552291b7de46" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;GIT_REFLOG_ACTION&lt;/code&gt; environment to a given string (typically the name of the program) unless it is already set. Whenever the script runs a &lt;code&gt;git&lt;/code&gt; command that updates refs, a reflog entry is created using the value of this string to leave the record of what command updated the ref.</source>
          <target state="translated">セット &lt;code&gt;GIT_REFLOG_ACTION&lt;/code&gt; のがすでに設定されていない限り、指定された文字列（プログラムの通常名）に環境。スクリプトが参照を更新する &lt;code&gt;git&lt;/code&gt; コマンドを実行するたびに、この文字列の値を使用してreflogエントリが作成され、どのコマンドが参照を更新したかの記録が残されます。</target>
        </trans-unit>
        <trans-unit id="38478f04f07d7922d4b7c7c155fa10a2d176d8aa" translate="yes" xml:space="preserve">
          <source>Set a configuration variable in the newly-created repository; this takes effect immediately after the repository is initialized, but before the remote history is fetched or any files checked out. The key is in the same format as expected by &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; (e.g., &lt;code&gt;core.eol=true&lt;/code&gt;). If multiple values are given for the same key, each value will be written to the config file. This makes it safe, for example, to add additional fetch refspecs to the origin remote.</source>
          <target state="translated">新しく作成したリポジトリに構成変数を設定します。これは、リポジトリが初期化された直後、ただしリモート履歴がフェッチされる前、またはファイルがチェックアウトされる前に有効になります。キーは&lt;a href=&quot;git-config&quot;&gt;git-config [1]で&lt;/a&gt;期待されるものと同じ形式です（例： &lt;code&gt;core.eol=true&lt;/code&gt; ）。同じキーに複数の値が指定されている場合、各値は構成ファイルに書き込まれます。これにより、たとえば、元のリモートにフェッチ参照仕様を追加することが安全になります。</target>
        </trans-unit>
        <trans-unit id="467cb3791c7eb0e6e17b468939871379585bf0d6" translate="yes" xml:space="preserve">
          <source>Set a custom directory to store the resulting files instead of the current working directory. All directory components will be created.</source>
          <target state="translated">カレントの作業ディレクトリではなく、結果のファイルを保存するカスタムディレクトリを設定します。すべてのディレクトリコンポーネントが作成されます。</target>
        </trans-unit>
        <trans-unit id="d443ac1fac5648ce0c972e61ba93f9dfa28cd774" translate="yes" xml:space="preserve">
          <source>Set a policy to be used by protocol &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; with clone/fetch/push commands. See &lt;code&gt;protocol.allow&lt;/code&gt; above for the available policies.</source>
          <target state="translated">clone / fetch / pushコマンドでプロトコル &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; が使用するポリシーを設定します。利用可能なポリシーについては、上記の &lt;code&gt;protocol.allow&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="ffb09a5018db72662a7a10ef6bf79bb4e8417501" translate="yes" xml:space="preserve">
          <source>Set an alternative CVSROOT to use. This corresponds to the CVS -d parameter. Usually users will not want to set this, except if using CVS in an asymmetric fashion.</source>
          <target state="translated">使用する代替 CVSROOT を設定します。これは CVS -d パラメータに相当します。通常、CVS を非対称的に使用する場合を除いて、ユーザはこれを設定したくないでしょう。</target>
        </trans-unit>
        <trans-unit id="eb6b278f7896d8837cef70de53516ad86e9dbdad" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;GIT_DIR&lt;/code&gt; environment variable. See &lt;a href=&quot;git&quot;&gt;git[1]&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;GIT_DIR&lt;/code&gt; 環境変数を設定します。&lt;a href=&quot;git&quot;&gt;git [1]を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ca1b08676b4e36a73ebf5696b8b5a7e5e3fbf70c" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;noMetadata&lt;/code&gt; option in the [svn-remote] config. This option is not recommended, please read the &lt;code&gt;svn.noMetadata&lt;/code&gt; section of this manpage before using this option.</source>
          <target state="translated">設定し &lt;code&gt;noMetadata&lt;/code&gt; の [SVN-リモート]設定でオプションを選択します。このオプションは推奨されません。このオプションを使用する前に、このマンページの &lt;code&gt;svn.noMetadata&lt;/code&gt; セクションをお読みください。</target>
        </trans-unit>
        <trans-unit id="29075e63ef31a9df87f17de44d7d1a90528328cf" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;rewriteRoot&lt;/code&gt; option in the [svn-remote] config.</source>
          <target state="translated">設定し &lt;code&gt;rewriteRoot&lt;/code&gt; の [SVN-リモート]設定でオプションを選択します。</target>
        </trans-unit>
        <trans-unit id="c2f253f2802c51ea11c741dbafd4f8bda616e672" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;rewriteUUID&lt;/code&gt; option in the [svn-remote] config.</source>
          <target state="translated">設定し &lt;code&gt;rewriteUUID&lt;/code&gt; [SVN-リモート]設定でオプションを選択します。</target>
        </trans-unit>
        <trans-unit id="b54b27dbc703e4c4c112e37e3cc708e31cfd5c62" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;useSvmProps&lt;/code&gt; option in the [svn-remote] config.</source>
          <target state="translated">設定し &lt;code&gt;useSvmProps&lt;/code&gt; の [SVN-リモート]設定でオプションを選択します。</target>
        </trans-unit>
        <trans-unit id="b1c79663eb36a223e3246a6761c3527b1fcb1cd9" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;useSvnsyncProps&lt;/code&gt; option in the [svn-remote] config.</source>
          <target state="translated">設定し &lt;code&gt;useSvnsyncProps&lt;/code&gt; の [SVN-リモート]設定でオプションを選択します。</target>
        </trans-unit>
        <trans-unit id="96cb52718c720acae8e359f2c3854a795081e029" translate="yes" xml:space="preserve">
          <source>Set the Git namespace. See &lt;a href=&quot;gitnamespaces&quot;&gt;gitnamespaces[7]&lt;/a&gt; for more details. Equivalent to setting the &lt;code&gt;GIT_NAMESPACE&lt;/code&gt; environment variable.</source>
          <target state="translated">Git名前空間を設定します。詳細については、&lt;a href=&quot;gitnamespaces&quot;&gt;gitnamespaces [7]&lt;/a&gt;を参照してください。 &lt;code&gt;GIT_NAMESPACE&lt;/code&gt; 環境変数の設定と同等です。</target>
        </trans-unit>
        <trans-unit id="7cb0d29338f1ad7db15e18be0474164e1bc21a46" translate="yes" xml:space="preserve">
          <source>Set the Git namespace; see &lt;a href=&quot;gitnamespaces&quot;&gt;gitnamespaces[7]&lt;/a&gt; for details. The &lt;code&gt;--namespace&lt;/code&gt; command-line option also sets this value.</source>
          <target state="translated">Git名前空間を設定します。詳細については、&lt;a href=&quot;gitnamespaces&quot;&gt;gitnamespaces [7]&lt;/a&gt;を参照してください。 &lt;code&gt;--namespace&lt;/code&gt; コマンドラインオプションも、この値を設定します。</target>
        </trans-unit>
        <trans-unit id="ce505bfde263ccf76db605c3871e55681201849e" translate="yes" xml:space="preserve">
          <source>Set the commit message to be used for the merge commit (in case one is created).</source>
          <target state="translated">マージコミットに使用するコミットメッセージを設定します (コミットが作成された場合)。</target>
        </trans-unit>
        <trans-unit id="60dd95cbd8809da88fe2e4f3deab8c8cfda23f9c" translate="yes" xml:space="preserve">
          <source>Set the creation/deletion cost fudge factor to &lt;code&gt;&amp;lt;percent&amp;gt;&lt;/code&gt;. Defaults to 60. Try a larger value if &lt;code&gt;git range-diff&lt;/code&gt; erroneously considers a large change a total rewrite (deletion of one commit and addition of another), and a smaller one in the reverse case. See the ``Algorithm`` section below for an explanation why this is needed.</source>
          <target state="translated">作成/削除のコストファッジ係数を &lt;code&gt;&amp;lt;percent&amp;gt;&lt;/code&gt; に設定します。デフォルトは60です &lt;code&gt;git range-diff&lt;/code&gt; が大きな変更を完全な書き換え（1つのコミットの削除と別のコミットの追加）と誤って見なし、逆の場合には小さな値と誤って見なす場合は、より大きい値を試してください。これが必要な理由の説明については、以下の「アルゴリズム」セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="e4867b6a9e4fdc121bda203b5824a86f390dc42c" translate="yes" xml:space="preserve">
          <source>Set the default date-time mode for the &lt;code&gt;log&lt;/code&gt; command. Setting a value for log.date is similar to using &lt;code&gt;git log&lt;/code&gt;'s &lt;code&gt;--date&lt;/code&gt; option. See &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;log&lt;/code&gt; コマンドのデフォルトの日時モードを設定します。log.dateの値を設定することは、 &lt;code&gt;git log&lt;/code&gt; の &lt;code&gt;--date&lt;/code&gt; オプションを使用することに似ています。詳細は&lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="452331e44dbf8a551529f8aab3eb063db65f0f80" translate="yes" xml:space="preserve">
          <source>Set the default matching behavior. Using a value of &lt;code&gt;basic&lt;/code&gt;, &lt;code&gt;extended&lt;/code&gt;, &lt;code&gt;fixed&lt;/code&gt;, or &lt;code&gt;perl&lt;/code&gt; will enable the &lt;code&gt;--basic-regexp&lt;/code&gt;, &lt;code&gt;--extended-regexp&lt;/code&gt;, &lt;code&gt;--fixed-strings&lt;/code&gt;, or &lt;code&gt;--perl-regexp&lt;/code&gt; option accordingly, while the value &lt;code&gt;default&lt;/code&gt; will return to the default matching behavior.</source>
          <target state="translated">デフォルトのマッチング動作を設定します。 &lt;code&gt;basic&lt;/code&gt; 、 &lt;code&gt;extended&lt;/code&gt; 、 &lt;code&gt;fixed&lt;/code&gt; 、または &lt;code&gt;perl&lt;/code&gt; の値を使用すると、それに &lt;code&gt;--basic-regexp&lt;/code&gt; 、 &lt;code&gt;--extended-regexp&lt;/code&gt; 、-- &lt;code&gt;--fixed-strings&lt;/code&gt; 、または &lt;code&gt;--perl-regexp&lt;/code&gt; オプションが &lt;code&gt;default&lt;/code&gt; なりますが、デフォルトの値はデフォルトのマッチング動作。</target>
        </trans-unit>
        <trans-unit id="0fa4faa1629ef6ce85f03023fc833f41e1dcd3a2" translate="yes" xml:space="preserve">
          <source>Set the execute permissions on the updated files.</source>
          <target state="translated">更新されたファイルの実行権限を設定します。</target>
        </trans-unit>
        <trans-unit id="8fcbe8639628c30552376de3870da0a1897ef81f" translate="yes" xml:space="preserve">
          <source>Set the length object names are abbreviated to. If unspecified or set to &quot;auto&quot;, an appropriate value is computed based on the approximate number of packed objects in your repository, which hopefully is enough for abbreviated object names to stay unique for some time. The minimum length is 4.</source>
          <target state="translated">オブジェクト名が省略される長さを設定します。指定しない場合や &quot;auto&quot; に設定されている場合、適切な値は、リポジトリ内のおおよそのパックされたオブジェクトの数に基づいて計算され、これは省略されたオブジェクト名がしばらくの間ユニークな状態を保つのに十分であることを願っています。最小の長さは4です。</target>
        </trans-unit>
        <trans-unit id="1c984f4d67f4b1c5f797e0985cdc839cd8173298" translate="yes" xml:space="preserve">
          <source>Set the method with which to authenticate against the HTTP proxy. This only takes effect if the configured proxy string contains a user name part (i.e. is of the form &lt;code&gt;user@host&lt;/code&gt; or &lt;code&gt;user@host:port&lt;/code&gt;). This can be overridden on a per-remote basis; see &lt;code&gt;remote.&amp;lt;name&amp;gt;.proxyAuthMethod&lt;/code&gt;. Both can be overridden by the &lt;code&gt;GIT_HTTP_PROXY_AUTHMETHOD&lt;/code&gt; environment variable. Possible values are:</source>
          <target state="translated">HTTPプロキシに対して認証する方法を設定します。これは、構成されたプロキシ文字列にユーザー名の部分が含まれている場合（つまり、 &lt;code&gt;user@host&lt;/code&gt; または &lt;code&gt;user@host:port&lt;/code&gt; の形式）にのみ有効です。これは、リモートごとにオーバーライドできます。 &lt;code&gt;remote.&amp;lt;name&amp;gt;.proxyAuthMethod&lt;/code&gt; 参照してください。どちらも &lt;code&gt;GIT_HTTP_PROXY_AUTHMETHOD&lt;/code&gt; 環境変数で上書きできます。可能な値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="4531ba21b83c7504310183413d920d4e527a579c" translate="yes" xml:space="preserve">
          <source>Set the name of placeholder files created by --preserve-empty-dirs. Default: &quot;.gitignore&quot;</source>
          <target state="translated">Preserve-empty-dirs で作成したプレースホルダファイルの名前を設定します。デフォルト:&quot;.gitignore&quot;</target>
        </trans-unit>
        <trans-unit id="9f6240dcaa583bb3021b3aca773ea9ba6bc9afa0" translate="yes" xml:space="preserve">
          <source>Set the path to the repository (&quot;.git&quot; directory). This can also be controlled by setting the &lt;code&gt;GIT_DIR&lt;/code&gt; environment variable. It can be an absolute path or relative path to current working directory.</source>
          <target state="translated">リポジトリ（ &quot;.git&quot;ディレクトリ）へのパスを設定します。これは、 &lt;code&gt;GIT_DIR&lt;/code&gt; 環境変数を設定することによっても制御できます。現在の作業ディレクトリへの絶対パスまたは相対パスにすることができます。</target>
        </trans-unit>
        <trans-unit id="31570b84b8684acde4e9da43dbd6e7e3871cdd6e" translate="yes" xml:space="preserve">
          <source>Set the path to the repository. This can also be controlled by setting the &lt;code&gt;GIT_DIR&lt;/code&gt; environment variable. It can be an absolute path or relative path to current working directory.</source>
          <target state="translated">リポジトリへのパスを設定します。これは、 &lt;code&gt;GIT_DIR&lt;/code&gt; 環境変数を設定して制御することもできます。現在の作業ディレクトリへの絶対パスまたは相対パスを指定できます。</target>
        </trans-unit>
        <trans-unit id="400ea02361b1fdf84359f8c82c5dbc03e0cfd801" translate="yes" xml:space="preserve">
          <source>Set the path to the root of the working tree. If &lt;code&gt;GIT_COMMON_DIR&lt;/code&gt; environment variable is set, core.worktree is ignored and not used for determining the root of working tree. This can be overridden by the &lt;code&gt;GIT_WORK_TREE&lt;/code&gt; environment variable and the &lt;code&gt;--work-tree&lt;/code&gt; command-line option. The value can be an absolute path or relative to the path to the .git directory, which is either specified by --git-dir or GIT_DIR, or automatically discovered. If --git-dir or GIT_DIR is specified but none of --work-tree, GIT_WORK_TREE and core.worktree is specified, the current working directory is regarded as the top level of your working tree.</source>
          <target state="translated">パスを作業ツリーのルートに設定します。 &lt;code&gt;GIT_COMMON_DIR&lt;/code&gt; 環境変数が設定されている場合、core.worktreeは無視され、作業ツリーのルートを決定するために使用されません。これは、 &lt;code&gt;GIT_WORK_TREE&lt;/code&gt; 環境変数と &lt;code&gt;--work-tree&lt;/code&gt; コマンドラインオプションでオーバーライドできます。値は、絶対パスまたは.gitディレクトリへの相対パスにすることができます。これは、-git-dirまたはGIT_DIRによって指定されるか、自動的に検出されます。 --git-dirまたはGIT_DIRが指定されているが--work-tree、GIT_WORK_TREE、およびcore.worktreeのいずれも指定されていない場合、現在の作業ディレクトリが作業ツリーの最上位レベルと見なされます。</target>
        </trans-unit>
        <trans-unit id="e77cf9dbfa8bb073ac521b0115fcf267d700de96" translate="yes" xml:space="preserve">
          <source>Set the path to the root of the working tree. This can also be controlled by the &lt;code&gt;--work-tree&lt;/code&gt; command-line option and the core.worktree configuration variable.</source>
          <target state="translated">パスを作業ツリーのルートに設定します。これは &lt;code&gt;--work-tree&lt;/code&gt; コマンドラインオプションとcore.worktree構成変数でも制御できます。</target>
        </trans-unit>
        <trans-unit id="3d76dd27e6c2a8b0058c2a945baf951d7f68aa28" translate="yes" xml:space="preserve">
          <source>Set the path to the working tree. It can be an absolute path or a path relative to the current working directory. This can also be controlled by setting the GIT_WORK_TREE environment variable and the core.worktree configuration variable (see core.worktree in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for a more detailed discussion).</source>
          <target state="translated">作業ツリーへのパスを設定します。絶対パスまたは現在の作業ディレクトリからの相対パスを指定できます。これは、GIT_WORK_TREE環境変数とcore.worktree構成変数を設定することでも制御できます（詳細については、&lt;a href=&quot;git-config&quot;&gt;git-config [1]の&lt;/a&gt; core.worktreeを参照してください）。</target>
        </trans-unit>
        <trans-unit id="ed921cb30a3554abcb258c374cc8879de4b6e735" translate="yes" xml:space="preserve">
          <source>Set the starting point at which to create the new commits to the merge base of &amp;lt;upstream&amp;gt; &amp;lt;branch&amp;gt;. Running &lt;code&gt;git rebase --keep-base &amp;lt;upstream&amp;gt; &amp;lt;branch&amp;gt;&lt;/code&gt; is equivalent to running &lt;code&gt;git rebase --onto &amp;lt;upstream&amp;gt;&amp;hellip;​ &amp;lt;upstream&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">新しいコミットを作成する開始点を、&amp;lt;upstream&amp;gt; &amp;lt;branch&amp;gt;のマージベースに設定します。実行 &lt;code&gt;git rebase --keep-base &amp;lt;upstream&amp;gt; &amp;lt;branch&amp;gt;&lt;/code&gt; 実行するのと同じです &lt;code&gt;git rebase --onto &amp;lt;upstream&amp;gt;&amp;hellip;​ &amp;lt;upstream&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b6b13ff409b582dcf430b9ece41f38914d244e47" translate="yes" xml:space="preserve">
          <source>Set this option to &lt;code&gt;false&lt;/code&gt; to disable the default heuristics that shift diff hunk boundaries to make patches easier to read.</source>
          <target state="translated">このオプションを &lt;code&gt;false&lt;/code&gt; に設定すると、diff hunk境界をシフトしてパッチを読みやすくするデフォルトのヒューリスティックが無効になります。</target>
        </trans-unit>
        <trans-unit id="006b55776506e3606ed55b1bbce55137d0106c81" translate="yes" xml:space="preserve">
          <source>Set this option to true to make the diff driver cache the text conversion outputs. See &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt; for details.</source>
          <target state="translated">このオプションをtrueに設定して、diffドライバーがテキスト変換出力をキャッシュするようにします。詳細については、&lt;a href=&quot;gitattributes&quot;&gt;gitattributes [5]&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ef5fd1abf8d8364854389e921b837341fb77c76d" translate="yes" xml:space="preserve">
          <source>Set this option to true to make the diff driver treat files as binary. See &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt; for details.</source>
          <target state="translated">このオプションをtrueに設定すると、diffドライバーはファイルをバイナリーとして扱います。詳細については、&lt;a href=&quot;gitattributes&quot;&gt;gitattributes [5]&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="79fb9e58577e75fc1803ff54dd16424d60dc2c8b" translate="yes" xml:space="preserve">
          <source>Set this variable to &lt;code&gt;false&lt;/code&gt; if you want to disable &lt;code&gt;pushNonFFCurrent&lt;/code&gt;, &lt;code&gt;pushNonFFMatching&lt;/code&gt;, &lt;code&gt;pushAlreadyExists&lt;/code&gt;, &lt;code&gt;pushFetchFirst&lt;/code&gt;, &lt;code&gt;pushNeedsForce&lt;/code&gt;, and &lt;code&gt;pushRefNeedsUpdate&lt;/code&gt; simultaneously.</source>
          <target state="translated">&lt;code&gt;pushNonFFCurrent&lt;/code&gt; 、 &lt;code&gt;pushNonFFMatching&lt;/code&gt; 、 &lt;code&gt;pushAlreadyExists&lt;/code&gt; 、 &lt;code&gt;pushFetchFirst&lt;/code&gt; 、 &lt;code&gt;pushNeedsForce&lt;/code&gt; 、および &lt;code&gt;pushRefNeedsUpdate&lt;/code&gt; を同時に無効にする場合は、この変数を &lt;code&gt;false&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="ef3e5c6a12efe8e7150b1e7869bbdde3d0dce7a8" translate="yes" xml:space="preserve">
          <source>Set this variable to &lt;code&gt;false&lt;/code&gt; if you want to disable &lt;code&gt;pushNonFFCurrent&lt;/code&gt;, &lt;code&gt;pushNonFFMatching&lt;/code&gt;, &lt;code&gt;pushAlreadyExists&lt;/code&gt;, &lt;code&gt;pushFetchFirst&lt;/code&gt;, and &lt;code&gt;pushNeedsForce&lt;/code&gt; simultaneously.</source>
          <target state="translated">&lt;code&gt;pushNonFFCurrent&lt;/code&gt; 、 &lt;code&gt;pushNonFFMatching&lt;/code&gt; 、 &lt;code&gt;pushAlreadyExists&lt;/code&gt; 、 &lt;code&gt;pushFetchFirst&lt;/code&gt; 、および &lt;code&gt;pushNeedsForce&lt;/code&gt; を同時に無効にする場合は、この変数を &lt;code&gt;false&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="3942f1a8d8fbbbd45defb8fdf1e1532d95e95175" translate="yes" xml:space="preserve">
          <source>Set to 0 to prevent protocols used by fetch/push/clone which are configured to the &lt;code&gt;user&lt;/code&gt; state. This is useful to restrict recursive submodule initialization from an untrusted repository or for programs which feed potentially-untrusted URLS to git commands. See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for more details.</source>
          <target state="translated">0に設定すると、 &lt;code&gt;user&lt;/code&gt; 状態に設定されているフェッチ/プッシュ/クローンで使用されるプロトコルが無効になります。これは、信頼できないリポジトリからの再帰的なサブモジュールの初期化を制限する場合や、信頼できない可能性のあるURLをgitコマンドにフィードするプログラムの場合に便利です。詳細については、&lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="b65b88faf09ed3e78aacba5ecd3c0b74f296551e" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;change&lt;/code&gt; if you want changes in whitespace to be ignored by default. Set to one of: no, none, never, false if you want changes in whitespace to be significant.</source>
          <target state="translated">空白の変更をデフォルトで無視する場合は、 &lt;code&gt;change&lt;/code&gt; に設定します。空白の変更を大きくしたい場合は、no、none、never、falseのいずれかに設定します。</target>
        </trans-unit>
        <trans-unit id="5365106003c727ad2992b276959d7e28e3f5d488" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;false&lt;/code&gt; to use the legacy shell script implementation of &lt;a href=&quot;git-stash&quot;&gt;git-stash[1]&lt;/a&gt;. Is &lt;code&gt;true&lt;/code&gt; by default, which means use the built-in rewrite of it in C.</source>
          <target state="translated">&lt;a href=&quot;git-stash&quot;&gt;git-stash [1]&lt;/a&gt;のレガシーシェルスクリプト実装を使用するには、 &lt;code&gt;false&lt;/code&gt; に設定します。デフォルトでは &lt;code&gt;true&lt;/code&gt; です。つまり、Cで組み込みの書き換えを使用します。</target>
        </trans-unit>
        <trans-unit id="55c516b6a3b5abf93c689c87b62d882f67783e93" translate="yes" xml:space="preserve">
          <source>Set to a value</source>
          <target state="translated">値に設定します。</target>
        </trans-unit>
        <trans-unit id="126c88db7f15369f3dbc6085e635b28af0c85793" translate="yes" xml:space="preserve">
          <source>Set to false to enable &lt;code&gt;--no-show-forced-updates&lt;/code&gt; in &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt; and &lt;a href=&quot;git-pull&quot;&gt;git-pull[1]&lt;/a&gt; commands. Defaults to true.</source>
          <target state="translated">有効にするには、falseに設定し &lt;code&gt;--no-show-forced-updates&lt;/code&gt; 中に&lt;a href=&quot;git-fetch&quot;&gt;[1]のgitをフェッチ&lt;/a&gt;し、&lt;a href=&quot;git-pull&quot;&gt;gitのプル[1]&lt;/a&gt;コマンドを。デフォルトはtrueです。</target>
        </trans-unit>
        <trans-unit id="361b59fb11064babad5acb39754e365b2c18e181" translate="yes" xml:space="preserve">
          <source>Set to long name (git-upload-pack, etc&amp;hellip;​) of service helper needs to invoke.</source>
          <target state="translated">呼び出す必要のあるサービスヘルパーの長い名前（git-upload-packなど）に設定します。</target>
        </trans-unit>
        <trans-unit id="4bc0f158fa5fccd4891458dbb2fe87fd0c2639c2" translate="yes" xml:space="preserve">
          <source>Set to long name (upload-pack, etc&amp;hellip;​) of service helper needs to invoke.</source>
          <target state="translated">呼び出す必要のあるサービスヘルパーの長い名前（アップロードパックなど...）に設定します</target>
        </trans-unit>
        <trans-unit id="e57cc917cd5904e6e25fccb477e015eebd2cea7f" translate="yes" xml:space="preserve">
          <source>Set to string value &quot;auto&quot;</source>
          <target state="translated">文字列値 &quot;auto &quot;を設定します。</target>
        </trans-unit>
        <trans-unit id="f9270f5e7d6f6a107dd8727f8e03989aa7e1e07f" translate="yes" xml:space="preserve">
          <source>Set to string value &quot;crlf&quot;</source>
          <target state="translated">文字列値 &quot;crlf &quot;を設定します。</target>
        </trans-unit>
        <trans-unit id="a22b46e67f1294009226c3e99f53a466328184f5" translate="yes" xml:space="preserve">
          <source>Set to string value &quot;lf&quot;</source>
          <target state="translated">文字列値 &quot;alf &quot;を設定します。</target>
        </trans-unit>
        <trans-unit id="7f3636e90ee07f52b1799adf7d20919a4160ef67" translate="yes" xml:space="preserve">
          <source>Set to true to enable --branch by default in &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt;. The option --no-branch takes precedence over this variable.</source>
          <target state="translated">&lt;a href=&quot;git-status&quot;&gt;git-status [1]で&lt;/a&gt;デフォルトで--branchを有効にするには、trueに設定します。オプション--no-branchは、この変数よりも優先されます。</target>
        </trans-unit>
        <trans-unit id="01828a4204064cca5b2e88b220546dc5742bc0f1" translate="yes" xml:space="preserve">
          <source>Set to true to enable --short by default in &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt;. The option --no-short takes precedence over this variable.</source>
          <target state="translated">&lt;a href=&quot;git-status&quot;&gt;git-status [1]で&lt;/a&gt;デフォルトで--shortを有効にするには、trueに設定します。オプション--no-shortは、この変数よりも優先されます。</target>
        </trans-unit>
        <trans-unit id="a2f50541fbb43557b6973a5064eb81647dcf94e2" translate="yes" xml:space="preserve">
          <source>Set to true to enable &lt;code&gt;--ahead-behind&lt;/code&gt; and false to enable &lt;code&gt;--no-ahead-behind&lt;/code&gt; by default in &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt; for non-porcelain status formats. Defaults to true.</source>
          <target state="translated">有効にするにはtrueに設定 &lt;code&gt;--ahead-behind&lt;/code&gt; 有効にすると偽を &lt;code&gt;--no-ahead-behind&lt;/code&gt; 、デフォルトで&lt;a href=&quot;git-status&quot;&gt;はgit-状態[1]&lt;/a&gt;非磁器のステータスフォーマットのため。デフォルトはtrueです。</target>
        </trans-unit>
        <trans-unit id="96f0b77e868eff9d4ad63451b6702c714a9e3c67" translate="yes" xml:space="preserve">
          <source>Set to true to write a commit-graph after every &lt;code&gt;git fetch&lt;/code&gt; command that downloads a pack-file from a remote. Using the &lt;code&gt;--split&lt;/code&gt; option, most executions will create a very small commit-graph file on top of the existing commit-graph file(s). Occasionally, these files will merge and the write may take longer. Having an updated commit-graph file helps performance of many Git commands, including &lt;code&gt;git merge-base&lt;/code&gt;, &lt;code&gt;git push -f&lt;/code&gt;, and &lt;code&gt;git log --graph&lt;/code&gt;. Defaults to false, unless &lt;code&gt;feature.experimental&lt;/code&gt; is true.</source>
          <target state="translated">リモートからパックファイルをダウンロードするすべての &lt;code&gt;git fetch&lt;/code&gt; コマンドの後にコミットグラフを書き込むには、trueに設定します。 &lt;code&gt;--split&lt;/code&gt; オプションを使用すると、ほとんどの実行で、既存のコミットグラフファイルの上に非常に小さなコミットグラフファイルが作成されます。場合によっては、これらのファイルがマージされ、書き込みに時間がかかることがあります。コミットグラフファイルを更新すると、 &lt;code&gt;git merge-base&lt;/code&gt; 、 &lt;code&gt;git push -f&lt;/code&gt; 、 &lt;code&gt;git log --graph&lt;/code&gt; など、多くのGitコマンドのパフォーマンスが向上します。 &lt;code&gt;feature.experimental&lt;/code&gt; がtrue でない限り、デフォルトはfalse です。</target>
        </trans-unit>
        <trans-unit id="8209e9f5d9f75f909ebb340ce07c0375e1a57b1b" translate="yes" xml:space="preserve">
          <source>Set to true to write a commit-graph after every &lt;code&gt;git fetch&lt;/code&gt; command that downloads a pack-file from a remote. Using the &lt;code&gt;--split&lt;/code&gt; option, most executions will create a very small commit-graph file on top of the existing commit-graph file(s). Occasionally, these files will merge and the write may take longer. Having an updated commit-graph file helps performance of many Git commands, including &lt;code&gt;git merge-base&lt;/code&gt;, &lt;code&gt;git push -f&lt;/code&gt;, and &lt;code&gt;git log --graph&lt;/code&gt;. Defaults to false.</source>
          <target state="translated">リモートからpack-fileをダウンロードするすべての &lt;code&gt;git fetch&lt;/code&gt; コマンドの後にcommit-graphを書き込むには、trueに設定します。 &lt;code&gt;--split&lt;/code&gt; オプションを使用すると、ほとんどの実行で、既存のcommit-graphファイルの上に非常に小さなcommit-graphファイルが作成されます。場合によっては、これらのファイルがマージされ、書き込みに時間がかかることがあります。更新されたcommit-graphファイルがあると、 &lt;code&gt;git merge-base&lt;/code&gt; 、 &lt;code&gt;git push -f&lt;/code&gt; 、 &lt;code&gt;git log --graph&lt;/code&gt; --graphなどの多くのGitコマンドのパフォーマンスに役立ちます。デフォルトはfalseです。</target>
        </trans-unit>
        <trans-unit id="6596cd35135fea85976308a2f017fa88ea4c3f97" translate="yes" xml:space="preserve">
          <source>Set up &amp;lt;branchname&amp;gt;'s tracking information so &amp;lt;upstream&amp;gt; is considered &amp;lt;branchname&amp;gt;'s upstream branch. If no &amp;lt;branchname&amp;gt; is specified, then it defaults to the current branch.</source>
          <target state="translated">&amp;lt;branchname&amp;gt;の追跡情報を設定して、&amp;lt;upstream&amp;gt;が&amp;lt;branchname&amp;gt;の上流ブランチと見なされるようにします。&amp;lt;branchname&amp;gt;が指定されていない場合、デフォルトで現在のブランチになります。</target>
        </trans-unit>
        <trans-unit id="a7d9f42de7103c698b8b04159cb04db5a6d63650" translate="yes" xml:space="preserve">
          <source>Set up a mirror of the source repository. This implies &lt;code&gt;--bare&lt;/code&gt;. Compared to &lt;code&gt;--bare&lt;/code&gt;, &lt;code&gt;--mirror&lt;/code&gt; not only maps local branches of the source to local branches of the target, it maps all refs (including remote-tracking branches, notes etc.) and sets up a refspec configuration such that all these refs are overwritten by a &lt;code&gt;git remote update&lt;/code&gt; in the target repository.</source>
          <target state="translated">ソースリポジトリのミラーをセットアップします。これは &lt;code&gt;--bare&lt;/code&gt; を意味します。比べ &lt;code&gt;--bare&lt;/code&gt; 、 &lt;code&gt;--mirror&lt;/code&gt; だけでなくすることは、ターゲットのローカルブランチに元の支店をマッピングし、それが（リモート追跡ブランチ、ノートなどを含む）すべての引用文献をマッピングし、そのようなすべてのこれらの参照文献そのrefspec構成を設定しますターゲットリポジトリ内の &lt;code&gt;git remote update&lt;/code&gt; によって上書きされます。</target>
        </trans-unit>
        <trans-unit id="7e96219d093661439598475221c87d2588db74a2" translate="yes" xml:space="preserve">
          <source>Sets default options for merging into branch &amp;lt;name&amp;gt;. The syntax and supported options are the same as those of &lt;a href=&quot;git-merge&quot;&gt;git-merge[1]&lt;/a&gt;, but option values containing whitespace characters are currently not supported.</source>
          <target state="translated">ブランチ&amp;lt;name&amp;gt;にマ​​ージするためのデフォルトオプションを設定します。構文とサポートされるオプションは&lt;a href=&quot;git-merge&quot;&gt;git-merge [1]の&lt;/a&gt;ものと同じですが、空白文字を含むオプション値は現在サポートされていません。</target>
        </trans-unit>
        <trans-unit id="ae1bdc4ada17600e4b52aa414b8e4fd8124c824c" translate="yes" xml:space="preserve">
          <source>Sets default options for merging into branch &amp;lt;name&amp;gt;. The syntax and supported options are the same as those of &lt;code&gt;git merge&lt;/code&gt;, but option values containing whitespace characters are currently not supported.</source>
          <target state="translated">ブランチ&amp;lt;name&amp;gt;にマ​​ージするためのデフォルトオプションを設定します。構文とサポートされているオプションは &lt;code&gt;git merge&lt;/code&gt; のものと同じですが、空白文字を含むオプション値は現在サポートされていません。</target>
        </trans-unit>
        <trans-unit id="d284647c4bbe7eed170d8bbd06667eb66997a29f" translate="yes" xml:space="preserve">
          <source>Sets location of common system-wide configuration file.</source>
          <target state="translated">システム全体に共通の設定ファイルの場所を設定します。</target>
        </trans-unit>
        <trans-unit id="b2395ce7c9c6f7832c2a162201b3e7779e8713ae" translate="yes" xml:space="preserve">
          <source>Sets location of fallback system-wide configuration file. This file is read only if per-instance one does not exist.</source>
          <target state="translated">フォールバックシステム全体の設定ファイルの場所を設定します。このファイルは、インスタンスごとの設定ファイルが存在しない場合にのみ読み込まれます。</target>
        </trans-unit>
        <trans-unit id="80c7084a9261d496ded6a154cb1d21190935c2fb" translate="yes" xml:space="preserve">
          <source>Sets location of per-instance configuration file.</source>
          <target state="translated">インスタンス単位の設定ファイルの場所を設定します。</target>
        </trans-unit>
        <trans-unit id="e0e9d645e60e4880815c1beb8a485ff180b9df6b" translate="yes" xml:space="preserve">
          <source>Sets or deletes the default branch (i.e. the target of the symbolic-ref &lt;code&gt;refs/remotes/&amp;lt;name&amp;gt;/HEAD&lt;/code&gt;) for the named remote. Having a default branch for a remote is not required, but allows the name of the remote to be specified in lieu of a specific branch. For example, if the default branch for &lt;code&gt;origin&lt;/code&gt; is set to &lt;code&gt;master&lt;/code&gt;, then &lt;code&gt;origin&lt;/code&gt; may be specified wherever you would normally specify &lt;code&gt;origin/master&lt;/code&gt;.</source>
          <target state="translated">名前付きリモートのデフォルトブランチ（つまり、symbolic-ref &lt;code&gt;refs/remotes/&amp;lt;name&amp;gt;/HEAD&lt;/code&gt; のターゲット）を設定または削除します。リモートにデフォルトのブランチを用意する必要はありませんが、特定のブランチの代わりにリモートの名前を指定できます。たとえば、 &lt;code&gt;origin&lt;/code&gt; のデフォルトのブランチが &lt;code&gt;master&lt;/code&gt; に設定されている場合は、通常 &lt;code&gt;origin/master&lt;/code&gt; を指定する場所に &lt;code&gt;origin&lt;/code&gt; を指定できます。</target>
        </trans-unit>
        <trans-unit id="b2e044e154b8bedcebccbb47c9cffea4e43f05f2" translate="yes" xml:space="preserve">
          <source>Sets service path (--upload-pack, --receive-pack etc.) for next connect. Remote helper may support this option, but must not rely on this option being set before connect request occurs.</source>
          <target state="translated">次の接続のためのサービスパス (--upload-pack,--receive-pack など)を設定します。リモートヘルパーはこのオプションをサポートしているかもしれませんが、接続要求が発生する前にこのオプションが設定されていることに依存してはいけません。</target>
        </trans-unit>
        <trans-unit id="4daf5e09ce23fccb50e846fa35fe9d7420d00620" translate="yes" xml:space="preserve">
          <source>Sets the Subversion property given as the first argument, to the value given as the second argument for the file given as the third argument.</source>
          <target state="translated">第1引数で与えられたSubversionプロパティを、第3引数で与えられたファイルに対して第2引数で与えられた値に設定します。</target>
        </trans-unit>
        <trans-unit id="7bdcb303e2640fa11b5be793f726d7f4d39f5dcd" translate="yes" xml:space="preserve">
          <source>Sets the URL of the specified submodule to &amp;lt;newurl&amp;gt;. Then, it will automatically synchronize the submodule&amp;rsquo;s new remote URL configuration.</source>
          <target state="translated">指定されたサブモジュールのURLを&amp;lt;newurl&amp;gt;に設定します。次に、サブモジュールの新しいリモートURL構成を自動的に同期します。</target>
        </trans-unit>
        <trans-unit id="81149e7775b257084aed4c2f69389cf77384d49e" translate="yes" xml:space="preserve">
          <source>Sets the default for whether to confirm before sending. Must be one of &lt;code&gt;always&lt;/code&gt;, &lt;code&gt;never&lt;/code&gt;, &lt;code&gt;cc&lt;/code&gt;, &lt;code&gt;compose&lt;/code&gt;, or &lt;code&gt;auto&lt;/code&gt;. See &lt;code&gt;--confirm&lt;/code&gt; in the previous section for the meaning of these values.</source>
          <target state="translated">送信前に確認するかどうかのデフォルトを設定します。 &lt;code&gt;always&lt;/code&gt; 、 &lt;code&gt;never&lt;/code&gt; 、 &lt;code&gt;cc&lt;/code&gt; 、 &lt;code&gt;compose&lt;/code&gt; 、 &lt;code&gt;auto&lt;/code&gt; のいずれかである必要があります。これらの値の意味については、前のセクションの &lt;code&gt;--confirm&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="ae96977bcaf8246e51bbdd562c9442e5f847dd67" translate="yes" xml:space="preserve">
          <source>Sets the default remote tracking branch for the submodule. The &lt;code&gt;--branch&lt;/code&gt; option allows the remote branch to be specified. The &lt;code&gt;--default&lt;/code&gt; option removes the submodule.&amp;lt;name&amp;gt;.branch configuration key, which causes the tracking branch to default to &lt;code&gt;master&lt;/code&gt;.</source>
          <target state="translated">サブモジュールのデフォルトのリモート追跡ブランチを設定します。 &lt;code&gt;--branch&lt;/code&gt; オプションは、リモートブランチを指定することができます。 &lt;code&gt;--default&lt;/code&gt; オプションでは、サブモジュールを削除します。追跡ブランチはをデフォルトになり、&amp;lt;名前&amp;gt; .branch設定キー、 &lt;code&gt;master&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bdd403722db4f3bcc819e0b7e2bed5d2da744942" translate="yes" xml:space="preserve">
          <source>Sets the default remote tracking branch for the submodule. The &lt;code&gt;--branch&lt;/code&gt; option allows the remote branch to be specified. The &lt;code&gt;--default&lt;/code&gt; option removes the submodule.&amp;lt;name&amp;gt;.branch configuration key, which causes the tracking branch to default to the remote &lt;code&gt;HEAD&lt;/code&gt;.</source>
          <target state="translated">サブモジュールのデフォルトのリモートトラッキングブランチを設定します。 &lt;code&gt;--branch&lt;/code&gt; オプションは、リモートブランチを指定することができます。 &lt;code&gt;--default&lt;/code&gt; オプションでは、サブモジュールを削除します。追跡ブランチはリモートにデフォルト設定になり、&amp;lt;名前&amp;gt; .branch設定キー、 &lt;code&gt;HEAD&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0ebd0697d4e9cc9507469a589b214100fff93c18" translate="yes" xml:space="preserve">
          <source>Sets the default value of --ignore-submodules. Note that this affects only &lt;code&gt;git diff&lt;/code&gt; Porcelain, and not lower level &lt;code&gt;diff&lt;/code&gt; commands such as &lt;code&gt;git diff-files&lt;/code&gt;. &lt;code&gt;git checkout&lt;/code&gt; and &lt;code&gt;git switch&lt;/code&gt; also honor this setting when reporting uncommitted changes. Setting it to &lt;code&gt;all&lt;/code&gt; disables the submodule summary normally shown by &lt;code&gt;git commit&lt;/code&gt; and &lt;code&gt;git status&lt;/code&gt; when &lt;code&gt;status.submoduleSummary&lt;/code&gt; is set unless it is overridden by using the --ignore-submodules command-line option. The &lt;code&gt;git submodule&lt;/code&gt; commands are not affected by this setting.</source>
          <target state="translated">--ignore-submodulesのデフォルト値を設定します。これは &lt;code&gt;git diff&lt;/code&gt; Porcelainにのみ影響し、 &lt;code&gt;git diff-files&lt;/code&gt; などの低レベルの &lt;code&gt;diff&lt;/code&gt; コマンドには影響しないことに注意してください。 &lt;code&gt;git checkout&lt;/code&gt; と &lt;code&gt;git switch&lt;/code&gt; も、コミットされていない変更を報告するときにこの設定を受け入れます。これを &lt;code&gt;all&lt;/code&gt; 設定 &lt;code&gt;git commit&lt;/code&gt; と、--ignore-submodulesコマンドラインオプションを使用してオーバーライドされない限り、 &lt;code&gt;status.submoduleSummary&lt;/code&gt; が設定されている場合、通常はgit commitと &lt;code&gt;git status&lt;/code&gt; で表示されるサブモジュールの概要が無効になります。 &lt;code&gt;git submodule&lt;/code&gt; コマンドは、この設定の影響を受けません。</target>
        </trans-unit>
        <trans-unit id="223bc7be9fc4d628a9979e3c0b82abe9a693f525" translate="yes" xml:space="preserve">
          <source>Sets the git refspec against which the shelved P4 changelist is compared. Defaults to p4/master.</source>
          <target state="translated">棚上げされた P4 の変更リストを比較するための git refspec を設定します。デフォルトは p4/master です。</target>
        </trans-unit>
        <trans-unit id="b66175dc0e90d1aff6b86be51b6554732d676a1f" translate="yes" xml:space="preserve">
          <source>Sets the line ending type to use in the working directory for files that are marked as text (either by having the &lt;code&gt;text&lt;/code&gt; attribute set, or by having &lt;code&gt;text=auto&lt;/code&gt; and Git auto-detecting the contents as text). Alternatives are &lt;code&gt;lf&lt;/code&gt;, &lt;code&gt;crlf&lt;/code&gt; and &lt;code&gt;native&lt;/code&gt;, which uses the platform&amp;rsquo;s native line ending. The default value is &lt;code&gt;native&lt;/code&gt;. See &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt; for more information on end-of-line conversion. Note that this value is ignored if &lt;code&gt;core.autocrlf&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="translated">テキストとしてマークされているファイルの作業ディレクトリで使用する行末のタイプを設定します（ &lt;code&gt;text&lt;/code&gt; 属性を設定するか、 &lt;code&gt;text=auto&lt;/code&gt; とGitが内容をテキストとして自動検出することによって）。代替は &lt;code&gt;lf&lt;/code&gt; 、 &lt;code&gt;crlf&lt;/code&gt; および &lt;code&gt;native&lt;/code&gt; であり、プラットフォームのネイティブ行末を使用します。デフォルト値は &lt;code&gt;native&lt;/code&gt; です。&lt;a href=&quot;gitattributes&quot;&gt;行末変換の&lt;/a&gt;詳細については、gitattributes [5]を参照してください。 &lt;code&gt;core.autocrlf&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; または &lt;code&gt;input&lt;/code&gt; に設定されている場合、この値は無視されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="767fb38cee626faf4bebc702c67f21f5034dd689" translate="yes" xml:space="preserve">
          <source>Sets the transport helper option &amp;lt;name&amp;gt; to &amp;lt;value&amp;gt;. Outputs a single line containing one of &lt;code&gt;ok&lt;/code&gt; (option successfully set), &lt;code&gt;unsupported&lt;/code&gt; (option not recognized) or &lt;code&gt;error &amp;lt;msg&amp;gt;&lt;/code&gt; (option &amp;lt;name&amp;gt; is supported but &amp;lt;value&amp;gt; is not valid for it). Options should be set before other commands, and may influence the behavior of those commands.</source>
          <target state="translated">トランスポートヘルパーオプション&amp;lt;name&amp;gt;を&amp;lt;value&amp;gt;に設定します。 &lt;code&gt;ok&lt;/code&gt; （オプションが正常に設定された）、 &lt;code&gt;unsupported&lt;/code&gt; （オプションが認識されない）、または &lt;code&gt;error &amp;lt;msg&amp;gt;&lt;/code&gt; （オプション&amp;lt;name&amp;gt;はサポートされていますが、&amp;lt;value&amp;gt;は有効ではありません）のいずれかを含む1行を出力します。オプションは他のコマンドの前に設定する必要があり、それらのコマンドの動作に影響を与える可能性があります。</target>
        </trans-unit>
        <trans-unit id="4361fe164802c15484e2158a7e066e93e95aef1a" translate="yes" xml:space="preserve">
          <source>Sets the version of hook that is to be used when calling fsmonitor. There are currently versions 1 and 2. When this is not set, version 2 will be tried first and if it fails then version 1 will be tried. Version 1 uses a timestamp as input to determine which files have changes since that time but some monitors like watchman have race conditions when used with a timestamp. Version 2 uses an opaque string so that the monitor can return something that can be used to determine what files have changed without race conditions.</source>
          <target state="translated">fsmonitorを呼び出す際に使用するフックのバージョンを設定します。現在、バージョン1と2があります。これが設定されていない場合は、まずバージョン2が試され、失敗した場合はバージョン1が試されます。バージョン1では、タイムスタンプを入力として使用し、その時点からどのファイルが変更されたかを判定していますが、watchmanのようにタイムスタンプを使用すると競合状態になるモニターもあります。バージョン2では不透明な文字列を使用して、競合条件なしでどのファイルが変更されたかを判断するために使用できるようにしています。</target>
        </trans-unit>
        <trans-unit id="38552fb2c7ab669744831fa34346e5ff34c9ae00" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; will be picked up by &lt;a href=&quot;git-fsck&quot;&gt;git-fsck[1]&lt;/a&gt;, but to accept pushes of such data set &lt;code&gt;receive.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; instead, or to clone or fetch it set &lt;code&gt;fetch.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; 設定は&lt;a href=&quot;git-fsck&quot;&gt;git-fsck [1]&lt;/a&gt;によってピックアップされますが、代わりにそのようなデータセット &lt;code&gt;receive.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; プッシュを受け入れるか、それを複製またはフェッチするには &lt;code&gt;fetch.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; 設定します。 &amp;lt;msg-id&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="f8d5bb1f4cfa6fbc6e58411c45908a4ed9f34950" translate="yes" xml:space="preserve">
          <source>Setting an unknown &lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; value will cause fsck to die, but doing the same for &lt;code&gt;receive.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; and &lt;code&gt;fetch.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; will only cause git to warn.</source>
          <target state="translated">未知の設定 &lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; 値はfsckを死なせたが、同じことをやってます &lt;code&gt;receive.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; と &lt;code&gt;fetch.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; のみ警告するgitの原因になります。</target>
        </trans-unit>
        <trans-unit id="ec7eb0199cb3dbce5770abe0a0c2186f2bc8c0a6" translate="yes" xml:space="preserve">
          <source>Setting the &quot;binary&quot; attribute also unsets the &quot;text&quot; and &quot;diff&quot; attributes as above. Note that macro attributes can only be &quot;Set&quot;, though setting one might have the effect of setting or unsetting other attributes or even returning other attributes to the &quot;Unspecified&quot; state.</source>
          <target state="translated">binary &quot;属性を設定すると、上記のように &quot;text &quot;と &quot;diff &quot;属性も解除されます。マクロ属性は &quot;Set &quot;しかできないことに注意してください。しかし、マクロ属性を設定すると、他の属性を設定したり解除したり、他の属性を &quot;Unspecified &quot;の状態に戻す効果があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="c0809d7ae8979681e24885ec19091ca517e2431a" translate="yes" xml:space="preserve">
          <source>Setting the &lt;code&gt;mergetool.keepBackup&lt;/code&gt; configuration variable to &lt;code&gt;false&lt;/code&gt; causes &lt;code&gt;git mergetool&lt;/code&gt; to automatically remove the backup as files are successfully merged.</source>
          <target state="translated">設定 &lt;code&gt;mergetool.keepBackup&lt;/code&gt; のに設定変数を &lt;code&gt;false&lt;/code&gt; 原因 &lt;code&gt;git mergetool&lt;/code&gt; 自動的にファイルとしてバックアップを削除することに成功マージされます。</target>
        </trans-unit>
        <trans-unit id="6f0c93315d42b41cf980b4419425789cdaac4058" translate="yes" xml:space="preserve">
          <source>Setting the &lt;code&gt;text&lt;/code&gt; attribute on a path enables end-of-line normalization and marks the path as a text file. End-of-line conversion takes place without guessing the content type.</source>
          <target state="translated">パスに &lt;code&gt;text&lt;/code&gt; 属性を設定すると、行末の正規化が有効になり、パスがテキストファイルとしてマークされます。コンテンツタイプを推測することなく、行末変換が行われます。</target>
        </trans-unit>
        <trans-unit id="3d1285aa205a15a3a5aafcd8d0c8d4ab4efd4f97" translate="yes" xml:space="preserve">
          <source>Setting the environment variable &lt;code&gt;GITWEB_CONFIG&lt;/code&gt; will tell gitweb to use the named file (i.e. in this example &lt;code&gt;/etc/gitweb.conf&lt;/code&gt;) as a configuration for gitweb. You don&amp;rsquo;t really need it in above example; it is required only if your configuration file is in different place than built-in (during compiling gitweb) &lt;code&gt;gitweb_config.perl&lt;/code&gt; or &lt;code&gt;/etc/gitweb.conf&lt;/code&gt;. See &lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf[5]&lt;/a&gt; for details, especially information about precedence rules.</source>
          <target state="translated">環境変数 &lt;code&gt;GITWEB_CONFIG&lt;/code&gt; を設定すると、指定したファイル（この例では &lt;code&gt;/etc/gitweb.conf&lt;/code&gt; ）をgitwebの構成として使用するようにgitwebに指示します。上記の例では実際には必要ありません。これは、構成ファイルが組み込み（gitwebのコンパイル中） &lt;code&gt;gitweb_config.perl&lt;/code&gt; または &lt;code&gt;/etc/gitweb.conf&lt;/code&gt; とは異なる場所にある場合にのみ必要です。参照してください&lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf [5]&lt;/a&gt;詳細については、優先順位の規則について、特に情報を。</target>
        </trans-unit>
        <trans-unit id="3d285efb6da308c8dd90713d0979acc9d8958228" translate="yes" xml:space="preserve">
          <source>Setting this to 0 disables not only automatic packing based on the number of loose objects, but any other heuristic &lt;code&gt;git gc --auto&lt;/code&gt; will otherwise use to determine if there&amp;rsquo;s work to do, such as &lt;code&gt;gc.autoPackLimit&lt;/code&gt;.</source>
          <target state="translated">これを0に設定すると、ルースオブジェクトの数に基づく自動パッキングだけでなく、 &lt;code&gt;gc.autoPackLimit&lt;/code&gt; など、他のヒューリスティックな &lt;code&gt;git gc --auto&lt;/code&gt; を使用して、実行する作業があるかどうかを判断します。</target>
        </trans-unit>
        <trans-unit id="ab556d3ed86f8d66a38201c818a74d5378c14e11" translate="yes" xml:space="preserve">
          <source>Setting this to a value &amp;lt;vcs&amp;gt; will cause Git to interact with the remote with the git-remote-&amp;lt;vcs&amp;gt; helper.</source>
          <target state="translated">これを値&amp;lt;vcs&amp;gt;に設定すると、Gitはgit-remote- &amp;lt;vcs&amp;gt;ヘルパーを使用してリモートと対話します。</target>
        </trans-unit>
        <trans-unit id="a78325706284f4930016d288e2c051f8a8fd0d2b" translate="yes" xml:space="preserve">
          <source>Setting this value to --no-tags disables automatic tag following when fetching from remote &amp;lt;name&amp;gt;. Setting it to --tags will fetch every tag from remote &amp;lt;name&amp;gt;, even if they are not reachable from remote branch heads. Passing these flags directly to &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt; can override this setting. See options --tags and --no-tags of &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt;.</source>
          <target state="translated">この値を--no-tagsに設定すると、リモート&amp;lt;name&amp;gt;からフェッチするときの自動タグ追跡が無効になります。--tagsに設定すると、リモートのブランチヘッドから到達できない場合でも、リモートの&amp;lt;name&amp;gt;からすべてのタグがフェッチされます。これらのフラグを直接&lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]に&lt;/a&gt;渡すと、この設定を上書きできます。&lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]の&lt;/a&gt;オプション--tagsおよび--no-tagsを参照してください。</target>
        </trans-unit>
        <trans-unit id="842c183b9c42b0c2525b9292639925b0e5a22ce0" translate="yes" xml:space="preserve">
          <source>Setting this variable to &quot;true&quot; is the same as setting the &lt;code&gt;text&lt;/code&gt; attribute to &quot;auto&quot; on all files and core.eol to &quot;crlf&quot;. Set to true if you want to have &lt;code&gt;CRLF&lt;/code&gt; line endings in your working directory and the repository has LF line endings. This variable can be set to &lt;code&gt;input&lt;/code&gt;, in which case no output conversion is performed.</source>
          <target state="translated">この変数を「true」に設定することは、すべてのファイルで &lt;code&gt;text&lt;/code&gt; 属性を「auto」に設定し、core.eolを「crlf」に設定することと同じです。作業ディレクトリーで &lt;code&gt;CRLF&lt;/code&gt; の行末を持ち、リポジトリーにLFの行末がある場合は、trueに設定します。この変数は &lt;code&gt;input&lt;/code&gt; に設定できます。その場合、出力変換は実行されません。</target>
        </trans-unit>
        <trans-unit id="f2485239ca9db9231d9dc605e4c20a0278342cb8" translate="yes" xml:space="preserve">
          <source>Setting this variable to &lt;code&gt;1&lt;/code&gt; will cause Git to treat all pathspecs as case-insensitive.</source>
          <target state="translated">この変数を &lt;code&gt;1&lt;/code&gt; に設定すると、Gitはすべてのパス仕様を大文字と小文字を区別しないものとして扱います。</target>
        </trans-unit>
        <trans-unit id="1ca46b471bd9797687c8acd1761125db08a21576" translate="yes" xml:space="preserve">
          <source>Setting this variable to &lt;code&gt;1&lt;/code&gt; will cause Git to treat all pathspecs as glob patterns (aka &quot;glob&quot; magic).</source>
          <target state="translated">この変数を &lt;code&gt;1&lt;/code&gt; に設定すると、Gitはすべてのパス仕様をグロブパターン（別名「グロブ」マジック）として扱います。</target>
        </trans-unit>
        <trans-unit id="d6f6c7a0196e6bb7bea48f89270c29c4b30ce796" translate="yes" xml:space="preserve">
          <source>Setting this variable to &lt;code&gt;1&lt;/code&gt; will cause Git to treat all pathspecs as literal (aka &quot;literal&quot; magic).</source>
          <target state="translated">この変数を &lt;code&gt;1&lt;/code&gt; に設定すると、Gitはすべてのパス仕様をリテラル（別名「リテラル」マジック）として扱います。</target>
        </trans-unit>
        <trans-unit id="5ca9aa98c8773f3ffdcfb04129c5f9a059aea952" translate="yes" xml:space="preserve">
          <source>Setting this variable to &lt;code&gt;1&lt;/code&gt; will cause Git to treat all pathspecs literally, rather than as glob patterns. For example, running &lt;code&gt;GIT_LITERAL_PATHSPECS=1 git log -- '*.c'&lt;/code&gt; will search for commits that touch the path &lt;code&gt;*.c&lt;/code&gt;, not any paths that the glob &lt;code&gt;*.c&lt;/code&gt; matches. You might want this if you are feeding literal paths to Git (e.g., paths previously given to you by &lt;code&gt;git ls-tree&lt;/code&gt;, &lt;code&gt;--raw&lt;/code&gt; diff output, etc).</source>
          <target state="translated">この変数を &lt;code&gt;1&lt;/code&gt; に設定すると、Gitはすべてのパス仕様をグロブパターンとしてではなく、文字どおりに扱います。たとえば、 &lt;code&gt;GIT_LITERAL_PATHSPECS=1 git log -- '*.c'&lt;/code&gt; すると、glob &lt;code&gt;*.c&lt;/code&gt; が一致するパスではなく、パス &lt;code&gt;*.c&lt;/code&gt; に関連するコミットが検索されます。Gitへのリテラルパス（たとえば、以前に &lt;code&gt;git ls-tree&lt;/code&gt; によって提供されたパス、 &lt;code&gt;--raw&lt;/code&gt; diff出力など）をフィードする場合は、これが必要になることがあります。</target>
        </trans-unit>
        <trans-unit id="d2a80c691de90ce5c2f5bcae0ddb71cd520d2404" translate="yes" xml:space="preserve">
          <source>Setting up a public repository</source>
          <target state="translated">パブリックリポジトリの設定</target>
        </trans-unit>
        <trans-unit id="3d54bc92ce527cc2dc9817e011bfea7d52def59f" translate="yes" xml:space="preserve">
          <source>Setting up a shared repository</source>
          <target state="translated">共有リポジトリの設定</target>
        </trans-unit>
        <trans-unit id="85d7095bad4cc89bf24fcc23e9812d88b70300be" translate="yes" xml:space="preserve">
          <source>Setup and Config</source>
          <target state="translated">セットアップと設定</target>
        </trans-unit>
        <trans-unit id="42bf423e8b49af69779df6afbd52c08e60ab95d8" translate="yes" xml:space="preserve">
          <source>Sharing and Updating Projects</source>
          <target state="translated">プロジェクトの共有と更新</target>
        </trans-unit>
        <trans-unit id="5bd75d5b2b55f503aa568f15ed9baa9da5d8844b" translate="yes" xml:space="preserve">
          <source>Sharing development with others</source>
          <target state="translated">開発を他の人と共有する</target>
        </trans-unit>
        <trans-unit id="7a899aac208ff2bb86fe5c7bc28489c4a1362bac" translate="yes" xml:space="preserve">
          <source>Sharing your changes</source>
          <target state="translated">変更点の共有</target>
        </trans-unit>
        <trans-unit id="bc5ae6560f23ddf791959b3443d3c0070e504dbd" translate="yes" xml:space="preserve">
          <source>Short (shortened to &lt;code&gt;$projects_list_description_width&lt;/code&gt; in the projects list page, which is 25 characters by default; see &lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf[5]&lt;/a&gt;) single line description of a project (of a repository). Plain text file; HTML will be escaped. By default set to</source>
          <target state="translated">短い（プロジェクトリストページの &lt;code&gt;$projects_list_description_width&lt;/code&gt; に短縮されます。デフォルトは25文字です&lt;a href=&quot;gitweb.conf&quot;&gt;。gitweb.conf[5]を&lt;/a&gt;参照してください）プロジェクトの（リポジトリの）1行の説明。プレーンテキストファイル。HTMLはエスケープされます。デフォルトでは</target>
        </trans-unit>
        <trans-unit id="5d86956f14bde9ab427b7b6c31b677817dd478ab" translate="yes" xml:space="preserve">
          <source>Short Format</source>
          <target state="translated">ショートフォーマット</target>
        </trans-unit>
        <trans-unit id="838e7194f933ef4cd0297d8b96a9d80cda6328ea" translate="yes" xml:space="preserve">
          <source>Short for &lt;code&gt;--log-destination=syslog&lt;/code&gt;.</source>
          <target state="translated">用ショート &lt;code&gt;--log-destination=syslog&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5c9f02f4be5538f5a655964a6f76417ed0e96f8f" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;--copy --force&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--copy --force&lt;/code&gt; のショートカット。</target>
        </trans-unit>
        <trans-unit id="56f96ad104be0e60414a9d6fef2d8f4255f1054e" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;--delete --force&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--delete --force&lt;/code&gt; のショートカット。</target>
        </trans-unit>
        <trans-unit id="8ae41f0ca95cbe8106d76bc74825f096a7f244ce" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;--move --force&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--move --force&lt;/code&gt; のショートカット。</target>
        </trans-unit>
        <trans-unit id="48b1cb87c7e9a2d1ef18425956f9eed09b368016" translate="yes" xml:space="preserve">
          <source>Shortcut version for a frequently used remote repository:</source>
          <target state="translated">よく使うリモートリポジトリのショートカット版。</target>
        </trans-unit>
        <trans-unit id="e715fc3eabd70149ca3b2a0c4ae7d6c328c54848" translate="yes" xml:space="preserve">
          <source>Shortlog will attempt to parse each trailer value as a &lt;code&gt;name &amp;lt;email&amp;gt;&lt;/code&gt; identity. If successful, the mailmap is applied and the email is omitted unless the &lt;code&gt;--email&lt;/code&gt; option is specified. If the value cannot be parsed as an identity, it will be taken literally and completely.</source>
          <target state="translated">Shortlogは、各トレーラー値を &lt;code&gt;name &amp;lt;email&amp;gt;&lt;/code&gt; IDとして解析しようとします。成功した場合、mailmapが適用されるとしない限り、電子メールは省略されている &lt;code&gt;--email&lt;/code&gt; オプションが指定されています。値をIDとして解析できない場合は、文字通り完全に取得されます。</target>
        </trans-unit>
        <trans-unit id="6460a14591c54e9d0ad48cc5a6224ee494fca842" translate="yes" xml:space="preserve">
          <source>Show &amp;lt;eolinfo&amp;gt; and &amp;lt;eolattr&amp;gt; of files. &amp;lt;eolinfo&amp;gt; is the file content identification used by Git when the &quot;text&quot; attribute is &quot;auto&quot; (or not set and core.autocrlf is not false). &amp;lt;eolinfo&amp;gt; is either &quot;-text&quot;, &quot;none&quot;, &quot;lf&quot;, &quot;crlf&quot;, &quot;mixed&quot; or &quot;&quot;.</source>
          <target state="translated">ファイルの&amp;lt;eolinfo&amp;gt;と&amp;lt;eolattr&amp;gt;を表示します。&amp;lt;eolinfo&amp;gt;は、「text」属性が「auto」の場合（または設定されておらず、core.autocrlfがfalseでない場合）にGitが使用するファイルコンテンツIDです。&amp;lt;eolinfo&amp;gt;は、「-text」、「none」、「lf」、「crlf」、「mixed」、または「」のいずれかです。</target>
        </trans-unit>
        <trans-unit id="6a8bdc54a2349a127936d3843203ecd6d2eac153" translate="yes" xml:space="preserve">
          <source>Show &amp;lt;num&amp;gt; leading and trailing lines, and place a line containing &lt;code&gt;--&lt;/code&gt; between contiguous groups of matches.</source>
          <target state="translated">&amp;lt;num&amp;gt;の先頭行と末尾行を表示し、連続する一致グループ間に &lt;code&gt;--&lt;/code&gt; を含む行を配置します。</target>
        </trans-unit>
        <trans-unit id="f867e00ffafd6cd49c4546fd923f10e52f747e26" translate="yes" xml:space="preserve">
          <source>Show &amp;lt;num&amp;gt; leading lines, and place a line containing &lt;code&gt;--&lt;/code&gt; between contiguous groups of matches.</source>
          <target state="translated">&amp;lt;num&amp;gt;行の先頭行を表示し、連続する一致グループ間に &lt;code&gt;--&lt;/code&gt; を含む行を配置します。</target>
        </trans-unit>
        <trans-unit id="a761d1fc7e4500bf5753e3c7e973fa02308ed552" translate="yes" xml:space="preserve">
          <source>Show &amp;lt;num&amp;gt; trailing lines, and place a line containing &lt;code&gt;--&lt;/code&gt; between contiguous groups of matches.</source>
          <target state="translated">&amp;lt;num&amp;gt;行の末尾の行を表示し、連続する一致グループ間に &lt;code&gt;--&lt;/code&gt; を含む行を配置します。</target>
        </trans-unit>
        <trans-unit id="ec26d3779318f9118ffbcaac500e06b8c03b82aa" translate="yes" xml:space="preserve">
          <source>Show &lt;code&gt;$GIT_COMMON_DIR&lt;/code&gt; if defined, else &lt;code&gt;$GIT_DIR&lt;/code&gt;.</source>
          <target state="translated">ショー &lt;code&gt;$GIT_COMMON_DIR&lt;/code&gt; 定義され、それ以外の場合は &lt;code&gt;$GIT_DIR&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7091c2825a946a2f8e36c69c5a82c708d938854f" translate="yes" xml:space="preserve">
          <source>Show &lt;code&gt;$GIT_DIR&lt;/code&gt; if defined. Otherwise show the path to the .git directory. The path shown, when relative, is relative to the current working directory.</source>
          <target state="translated">定義されている場合は &lt;code&gt;$GIT_DIR&lt;/code&gt; 表示します。それ以外の場合は、.gitディレクトリへのパスを表示します。表示されるパスは、相対の場合、現在の作業ディレクトリに対する相対パスです。</target>
        </trans-unit>
        <trans-unit id="92bc441ca5dd76e30902fc3cfc432e05960c64fb" translate="yes" xml:space="preserve">
          <source>Show a Git logical variable</source>
          <target state="translated">Git の論理変数を表示する</target>
        </trans-unit>
        <trans-unit id="59a5fc6a75e992fe3955834b9f589f3efdf7f45b" translate="yes" xml:space="preserve">
          <source>Show a browser for the tree of the &lt;code&gt;maint&lt;/code&gt; branch. Files selected in the browser can be viewed with the internal blame viewer.</source>
          <target state="translated">&lt;code&gt;maint&lt;/code&gt; ブランチのツリーのブラウザを表示します。ブラウザーで選択されたファイルは、内部の非難ビューアで表示できます。</target>
        </trans-unit>
        <trans-unit id="51464c06cc3ed971f0047721a669b06e6f8dc753" translate="yes" xml:space="preserve">
          <source>Show a confirmation dialog before actually running the tool.</source>
          <target state="translated">実際にツールを実行する前に確認ダイアログを表示します。</target>
        </trans-unit>
        <trans-unit id="6f525616d2d7c1f4fb302645f1046a33897806da" translate="yes" xml:space="preserve">
          <source>Show a diffstat at the end of the merge. The diffstat is also controlled by the configuration option merge.stat.</source>
          <target state="translated">マージの最後に diffstat を表示します。diffstat は、設定オプション merge.stat によっても制御されます。</target>
        </trans-unit>
        <trans-unit id="328b16c9977fc386d8875a1c0557b3f9bae42a58" translate="yes" xml:space="preserve">
          <source>Show a diffstat of what changed upstream since the last rebase. The diffstat is also controlled by the configuration option rebase.stat.</source>
          <target state="translated">前回のリベース以降に上流側で何が変更されたかの diffstat を表示します。diffstat は、設定オプション rebase.stat によっても制御されます。</target>
        </trans-unit>
        <trans-unit id="89145a6b6d57b54925b2a014779bdd41b63aab6d" translate="yes" xml:space="preserve">
          <source>Show a word diff, using the &amp;lt;mode&amp;gt; to delimit changed words. By default, words are delimited by whitespace; see &lt;code&gt;--word-diff-regex&lt;/code&gt; below. The &amp;lt;mode&amp;gt; defaults to &lt;code&gt;plain&lt;/code&gt;, and must be one of:</source>
          <target state="translated">変更された単語を区切るために&amp;lt;mode&amp;gt;を使用して、単語の相違を表示します。デフォルトでは、単語は空白で区切られています。以下の &lt;code&gt;--word-diff-regex&lt;/code&gt; を参照してください。&amp;lt;mode&amp;gt;のデフォルトは &lt;code&gt;plain&lt;/code&gt; で、次のいずれかでなければなりません。</target>
        </trans-unit>
        <trans-unit id="2104f8f059827e60ca6f3a921f9a667c9ac35df8" translate="yes" xml:space="preserve">
          <source>Show all available formats.</source>
          <target state="translated">利用可能なすべてのフォーマットを表示します。</target>
        </trans-unit>
        <trans-unit id="995122a1c6abd2724409485dae28721d5cc2418d" translate="yes" xml:space="preserve">
          <source>Show all branches, tags, or remote-tracking branches, respectively (i.e., refs found in &lt;code&gt;refs/heads&lt;/code&gt;, &lt;code&gt;refs/tags&lt;/code&gt;, or &lt;code&gt;refs/remotes&lt;/code&gt;, respectively).</source>
          <target state="translated">すべてのブランチ、タグ、またはリモートトラッキングブランチをそれぞれ表示します（つまり、それぞれ &lt;code&gt;refs/heads&lt;/code&gt; 、 &lt;code&gt;refs/tags&lt;/code&gt; 、または &lt;code&gt;refs/remotes&lt;/code&gt; にある参照）。</target>
        </trans-unit>
        <trans-unit id="321f7678ea19c696fd3fd95db6c787353e8f0a5f" translate="yes" xml:space="preserve">
          <source>Show all commits since version &lt;code&gt;v2.6.12&lt;/code&gt; that changed any file in the &lt;code&gt;include/scsi&lt;/code&gt; or &lt;code&gt;drivers/scsi&lt;/code&gt; subdirectories</source>
          <target state="translated">&lt;code&gt;include/scsi&lt;/code&gt; または &lt;code&gt;drivers/scsi&lt;/code&gt; サブディレクトリ内のファイルを変更したバージョン &lt;code&gt;v2.6.12&lt;/code&gt; 以降のすべてのコミットを表示する</target>
        </trans-unit>
        <trans-unit id="d180629218690191e783f9ea37e5d26feab056b5" translate="yes" xml:space="preserve">
          <source>Show all refs (branches, tags, etc.).</source>
          <target state="translated">すべての参照先(ブランチ、タグなど)を表示します。</target>
        </trans-unit>
        <trans-unit id="3e7cf0b7d79082307562ec61629e132b2c74285c" translate="yes" xml:space="preserve">
          <source>Show all refs found in &lt;code&gt;refs/&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;refs/&lt;/code&gt; 見つかったすべての参照を表示します。</target>
        </trans-unit>
        <trans-unit id="05ca74609707b569a39bc5511a1daaae1bd87257" translate="yes" xml:space="preserve">
          <source>Show all refs matching the shell glob pattern &lt;code&gt;pattern&lt;/code&gt;. If the pattern does not start with &lt;code&gt;refs/&lt;/code&gt;, this is automatically prepended. If the pattern does not contain a globbing character (&lt;code&gt;?&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, or &lt;code&gt;[&lt;/code&gt;), it is turned into a prefix match by appending &lt;code&gt;/*&lt;/code&gt;.</source>
          <target state="translated">シェルグロブパターン &lt;code&gt;pattern&lt;/code&gt; に一致するすべての参照を表示します。パターンが &lt;code&gt;refs/&lt;/code&gt; で始まらない場合、これは自動的に付加されます。パターンにグロビング文字（ &lt;code&gt;?&lt;/code&gt; 、 &lt;code&gt;*&lt;/code&gt; 、または &lt;code&gt;[&lt;/code&gt; ）が含まれていない場合は、 &lt;code&gt;/*&lt;/code&gt; を付加することにより、プレフィックス一致に変換されます。</target>
        </trans-unit>
        <trans-unit id="4fa56b2fc9907d1086b87e5377bf4476cff2c390" translate="yes" xml:space="preserve">
          <source>Show as patches the commits since version &lt;code&gt;v2.6.12&lt;/code&gt; that changed any file in the include/scsi or drivers/scsi subdirectories</source>
          <target state="translated">include / scsiまたはdrivers / scsiサブディレクトリ内のファイルを変更したバージョン &lt;code&gt;v2.6.12&lt;/code&gt; 以降のコミットをパッチとして表示</target>
        </trans-unit>
        <trans-unit id="276551039d5a6f576b01b648390b28318eb26dab" translate="yes" xml:space="preserve">
          <source>Show at most 100 changes made to the file &lt;code&gt;Makefile&lt;/code&gt;. Instead of only looking for changes in the current branch look in all branches.</source>
          <target state="translated">&lt;code&gt;Makefile&lt;/code&gt; ファイルに加えられた最大100の変更を表示します。現在のブランチの変更のみを探すのではなく、すべてのブランチを調べます。</target>
        </trans-unit>
        <trans-unit id="cc93fcf462d3cdf3d2aeea5e45651f27c396f5a0" translate="yes" xml:space="preserve">
          <source>Show blank SHA-1 for boundary commits. This can also be controlled via the &lt;code&gt;blame.blankboundary&lt;/code&gt; config option.</source>
          <target state="translated">境界コミットに対して空白のSHA-1を表示します。これは、 &lt;code&gt;blame.blankboundary&lt;/code&gt; 構成オプションを使用して制御することもできます。</target>
        </trans-unit>
        <trans-unit id="eaa41db61e1f1bab3111c0b0f717c116280f3b36" translate="yes" xml:space="preserve">
          <source>Show blank commit object name for boundary commits in &lt;a href=&quot;git-blame&quot;&gt;git-blame[1]&lt;/a&gt;. This option defaults to false.</source>
          <target state="translated">&lt;a href=&quot;git-blame&quot;&gt;git-blame [1]&lt;/a&gt;で境界コミットの空のコミットオブジェクト名を表示します。このオプションのデフォルトはfalseです。</target>
        </trans-unit>
        <trans-unit id="d4cb9ae41338f332d90c61100df1a02ed4371d7a" translate="yes" xml:space="preserve">
          <source>Show both remote-tracking branches and local branches.</source>
          <target state="translated">リモートトラッキングブランチとローカルブランチの両方を表示します。</target>
        </trans-unit>
        <trans-unit id="c2301bc581a2d36c1e5747eb8ae04fffb9591539" translate="yes" xml:space="preserve">
          <source>Show branches and their commits</source>
          <target state="translated">ブランチとそのコミットを表示</target>
        </trans-unit>
        <trans-unit id="d55feca71232703b0c06113161bcc96210d9bd44" translate="yes" xml:space="preserve">
          <source>Show brief usage of interactive git-clean.</source>
          <target state="translated">インタラクティブな git-clean の簡単な使い方を表示します。</target>
        </trans-unit>
        <trans-unit id="233374b02c6c18c443fd85da32c678488395ad01" translate="yes" xml:space="preserve">
          <source>Show cached files in the output (default)</source>
          <target state="translated">出力にキャッシュされたファイルを表示する(デフォルト</target>
        </trans-unit>
        <trans-unit id="ea36f7bdbf7d288541a5d87f6a09bd8649bf7e54" translate="yes" xml:space="preserve">
          <source>Show canonical names and email addresses of contacts</source>
          <target state="translated">連絡先の正規の名前とメールアドレスを表示する</target>
        </trans-unit>
        <trans-unit id="cfb0dd7a634282eef7f2e441b5e77786240e4318" translate="yes" xml:space="preserve">
          <source>Show changes between commits, commit and working tree, etc</source>
          <target state="translated">コミット間の変更、コミットと作業ツリーなどの表示</target>
        </trans-unit>
        <trans-unit id="5a1290ea3e3483a3f5ab5d9ff576cc5a9304f139" translate="yes" xml:space="preserve">
          <source>Show changes between the working tree and the index or a tree, changes between the index and a tree, changes between two trees, changes between two blob objects, or changes between two files on disk.</source>
          <target state="translated">作業ツリーとインデックスまたはツリー間の変更、インデックスとツリー間の変更、2 つのツリー間の変更、2 つの blob オブジェクト間の変更、ディスク上の 2 つのファイル間の変更を表示します。</target>
        </trans-unit>
        <trans-unit id="6189a1046129b02814c474d03dabcd8ea53d41e7" translate="yes" xml:space="preserve">
          <source>Show changes between the working tree and the index or a tree, changes between the index and a tree, changes between two trees, changes resulting from a merge, changes between two blob objects, or changes between two files on disk.</source>
          <target state="translated">作業ツリーとインデックスまたはツリー間の変更、インデックスとツリー間の変更、2 つのツリー間の変更、マージによる変更、2 つの blob オブジェクト間の変更、ディスク上の 2 つのファイル間の変更を表示します。</target>
        </trans-unit>
        <trans-unit id="29297be7cb8a5068699eafedd98e29f9ce3b8ef6" translate="yes" xml:space="preserve">
          <source>Show changes using common diff tools</source>
          <target state="translated">一般的な差分ツールを使用した変更点の表示</target>
        </trans-unit>
        <trans-unit id="e6231251cf44dee07a16dc6977218fd9c6ce32a0" translate="yes" xml:space="preserve">
          <source>Show colored diff. &lt;code&gt;--color&lt;/code&gt; (i.e. without &lt;code&gt;=&amp;lt;when&amp;gt;&lt;/code&gt;) is the same as &lt;code&gt;--color=always&lt;/code&gt;. &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; can be one of &lt;code&gt;always&lt;/code&gt;, &lt;code&gt;never&lt;/code&gt;, or &lt;code&gt;auto&lt;/code&gt;.</source>
          <target state="translated">色付きの差分を表示します。 &lt;code&gt;--color&lt;/code&gt; （つまり &lt;code&gt;=&amp;lt;when&amp;gt;&lt;/code&gt; なし）は &lt;code&gt;--color=always&lt;/code&gt; と同じです。 &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; は、 &lt;code&gt;always&lt;/code&gt; 、 &lt;code&gt;never&lt;/code&gt; 、または &lt;code&gt;auto&lt;/code&gt; のいずれかです。</target>
        </trans-unit>
        <trans-unit id="f57a0260693cc114a660b9cc49bd9ca37b9d97bc" translate="yes" xml:space="preserve">
          <source>Show colored diff. &lt;code&gt;--color&lt;/code&gt; (i.e. without &lt;code&gt;=&amp;lt;when&amp;gt;&lt;/code&gt;) is the same as &lt;code&gt;--color=always&lt;/code&gt;. &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; can be one of &lt;code&gt;always&lt;/code&gt;, &lt;code&gt;never&lt;/code&gt;, or &lt;code&gt;auto&lt;/code&gt;. It can be changed by the &lt;code&gt;color.ui&lt;/code&gt; and &lt;code&gt;color.diff&lt;/code&gt; configuration settings.</source>
          <target state="translated">色付きの差分を表示します。 &lt;code&gt;--color&lt;/code&gt; （つまり &lt;code&gt;=&amp;lt;when&amp;gt;&lt;/code&gt; なし）は &lt;code&gt;--color=always&lt;/code&gt; と同じです。 &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; は、 &lt;code&gt;always&lt;/code&gt; 、 &lt;code&gt;never&lt;/code&gt; 、または &lt;code&gt;auto&lt;/code&gt; のいずれかです。 &lt;code&gt;color.ui&lt;/code&gt; および &lt;code&gt;color.diff&lt;/code&gt; 構成設定によって変更できます。</target>
        </trans-unit>
        <trans-unit id="f1325c8ee6526284b9e19b2d177df5189d833f9f" translate="yes" xml:space="preserve">
          <source>Show colored matches. The value must be always (the default), never, or auto.</source>
          <target state="translated">色付きのマッチを表示します。値は、常に(デフォルト)、決して、または自動のいずれかである必要があります。</target>
        </trans-unit>
        <trans-unit id="ae1799387849e3f0fc844a1cc566a09160bccbf5" translate="yes" xml:space="preserve">
          <source>Show commit logs</source>
          <target state="translated">コミットログの表示</target>
        </trans-unit>
        <trans-unit id="091e7ae4df5348623adddab90ca75314d19e3c27" translate="yes" xml:space="preserve">
          <source>Show commit summary between the given commit (defaults to HEAD) and working tree/index. For a submodule in question, a series of commits in the submodule between the given super project commit and the index or working tree (switched by &lt;code&gt;--cached&lt;/code&gt;) are shown. If the option &lt;code&gt;--files&lt;/code&gt; is given, show the series of commits in the submodule between the index of the super project and the working tree of the submodule (this option doesn&amp;rsquo;t allow to use the &lt;code&gt;--cached&lt;/code&gt; option or to provide an explicit commit).</source>
          <target state="translated">指定されたコミット（デフォルトはHEAD）と作業ツリー/インデックスの間のコミット概要を表示します。問題のサブモジュールの場合、特定のスーパープロジェクトコミットとインデックスまたは作業ツリー（ &lt;code&gt;--cached&lt;/code&gt; によって切り替えられる）の間のサブモジュール内の一連のコミットが表示されます。オプション &lt;code&gt;--files&lt;/code&gt; が指定されている場合、スーパープロジェクトのインデックスとサブモジュールの作業ツリーの間のサブモジュール内の一連のコミットを表示します（このオプションでは、 &lt;code&gt;--cached&lt;/code&gt; オプションを使用したり、明示的に指定したりできませんコミット）。</target>
        </trans-unit>
        <trans-unit id="895d627a1559b0f7b8ffb93987e2fbd111bfab2e" translate="yes" xml:space="preserve">
          <source>Show commits more recent than a specific date.</source>
          <target state="translated">特定の日付よりも新しいコミットを表示します。</target>
        </trans-unit>
        <trans-unit id="10992a126510a25dfd1dd64a15502560e4eb97fe" translate="yes" xml:space="preserve">
          <source>Show commits older than a specific date.</source>
          <target state="translated">特定の日付よりも古いコミットを表示します。</target>
        </trans-unit>
        <trans-unit id="65509170881e19fa232abfecd80c1044bc1bc01b" translate="yes" xml:space="preserve">
          <source>Show conflicts in &quot;diff3&quot; style.</source>
          <target state="translated">diff3」スタイルでコンフリクトを表示する。</target>
        </trans-unit>
        <trans-unit id="a627c4be174c8a5ee15f7fc10aa836495b1089c5" translate="yes" xml:space="preserve">
          <source>Show deleted files in the output</source>
          <target state="translated">削除されたファイルを出力に表示する</target>
        </trans-unit>
        <trans-unit id="84454ab6d9a5866ee531cd5f7e98a88b4117a393" translate="yes" xml:space="preserve">
          <source>Show directions on how to proceed from the current state in the output of &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt;, in the template shown when writing commit messages in &lt;a href=&quot;git-commit&quot;&gt;git-commit[1]&lt;/a&gt;, and in the help message shown by &lt;a href=&quot;git-switch&quot;&gt;git-switch[1]&lt;/a&gt; or &lt;a href=&quot;git-checkout&quot;&gt;git-checkout[1]&lt;/a&gt; when switching branch.</source>
          <target state="translated">&lt;a href=&quot;git-status&quot;&gt;git-status [1]&lt;/a&gt;の出力、&lt;a href=&quot;git-commit&quot;&gt;git-commit [1]&lt;/a&gt;でコミットメッセージを書き込むときに表示されるテンプレート、および&lt;a href=&quot;git-switch&quot;&gt;git-switch [1]&lt;/a&gt;によって表示されるヘルプメッセージに、現在の状態から進む方法の指示を表示しますまたはブランチを切り替えるときに&lt;a href=&quot;git-checkout&quot;&gt;git-checkout [1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5fc1f3cf9452e6039731a7a1df5dffca4ae78ea2" translate="yes" xml:space="preserve">
          <source>Show every object whose name begins with the given prefix. The &amp;lt;prefix&amp;gt; must be at least 4 hexadecimal digits long to avoid listing each and every object in the repository by mistake.</source>
          <target state="translated">名前が指定された接頭辞で始まるすべてのオブジェクトを表示します。&amp;lt;prefix&amp;gt;は、誤ってリポジトリー内のすべてのオブジェクトをリストしないようにするために、少なくとも4桁の16進数でなければなりません。</target>
        </trans-unit>
        <trans-unit id="0d94de8daf12eebfa732214b2af1b9a367d2d94d" translate="yes" xml:space="preserve">
          <source>Show files on the filesystem that need to be removed due to file/directory conflicts for checkout-index to succeed.</source>
          <target state="translated">checkout-indexを成功させるために、ファイル/ディレクトリの競合のために削除する必要のあるファイルをファイルシステム上に表示します。</target>
        </trans-unit>
        <trans-unit id="ad0ababacc675e26eaf1a0889c9c6ef14ce3769a" translate="yes" xml:space="preserve">
          <source>Show given paths which don&amp;rsquo;t match any pattern. This only makes sense when &lt;code&gt;--verbose&lt;/code&gt; is enabled, otherwise it would not be possible to distinguish between paths which match a pattern and those which don&amp;rsquo;t.</source>
          <target state="translated">どのパターンにも一致しない特定のパスを表示します。これは &lt;code&gt;--verbose&lt;/code&gt; が有効な場合にのみ意味があります。そうでない場合、パターンに一致するパスと一致しないパスを区別することはできません。</target>
        </trans-unit>
        <trans-unit id="762aaa5ab5565ca8e2b3774059028eb53b59477c" translate="yes" xml:space="preserve">
          <source>Show help message.</source>
          <target state="translated">ヘルプメッセージを表示します。</target>
        </trans-unit>
        <trans-unit id="838b52958b292fca61c3a5108dd4ee2a3a75c971" translate="yes" xml:space="preserve">
          <source>Show ignored files as well.</source>
          <target state="translated">無視されたファイルも表示します。</target>
        </trans-unit>
        <trans-unit id="e68b8eea48173094c49e93c786ee56fa7184a0b7" translate="yes" xml:space="preserve">
          <source>Show in a format designed for machine consumption.</source>
          <target state="translated">機械消費のために設計されたフォーマットで表示します。</target>
        </trans-unit>
        <trans-unit id="db93b492cc402222428883561395c8e5b81cce1c" translate="yes" xml:space="preserve">
          <source>Show information about files in the index and the working tree</source>
          <target state="translated">インデックスと作業ツリー内のファイルの情報を表示する</target>
        </trans-unit>
        <trans-unit id="d2d64dc76cbd792285e7b6cfa7570beea5afa702" translate="yes" xml:space="preserve">
          <source>Show just what commits would be submitted to p4; do not change state in Git or p4.</source>
          <target state="translated">Git や p4 で状態を変更しないように、p4 に投稿されるコミットだけを表示します。</target>
        </trans-unit>
        <trans-unit id="76fafda4935f99c8dd9af522c6c8e19e60857b59" translate="yes" xml:space="preserve">
          <source>Show logs with difference each commit introduces</source>
          <target state="translated">コミットごとに異なるログを表示</target>
        </trans-unit>
        <trans-unit id="aa7fe52bb648501db2c178df84cc787b4333ba17" translate="yes" xml:space="preserve">
          <source>Show long rev (Default: off).</source>
          <target state="translated">長い回転数を表示する(デフォルトはオフ)。</target>
        </trans-unit>
        <trans-unit id="5e7221f97ed7eacfd8cdc162cdb28622dbce9b38" translate="yes" xml:space="preserve">
          <source>Show modified files in the output</source>
          <target state="translated">出力に変更したファイルを表示する</target>
        </trans-unit>
        <trans-unit id="68201a6a34d181c9493b1441e79fe99724faace5" translate="yes" xml:space="preserve">
          <source>Show no parents before all of its children are shown, and avoid showing commits on multiple lines of history intermixed.</source>
          <target state="translated">すべての子が表示される前に親を表示しないようにし、複数の履歴が混在している場合にコミットを表示しないようにします。</target>
        </trans-unit>
        <trans-unit id="8b60cbbf5a70ba9636b88509153ae8ade5e1cc90" translate="yes" xml:space="preserve">
          <source>Show no parents before all of its children are shown, but otherwise show commits in the author timestamp order.</source>
          <target state="translated">すべての子を表示する前に親を表示しませんが、そうでない場合は作者のタイムスタンプ順にコミットを表示します。</target>
        </trans-unit>
        <trans-unit id="fc0432ce52689cf9d25cd4a23e5fba4317479073" translate="yes" xml:space="preserve">
          <source>Show no parents before all of its children are shown, but otherwise show commits in the commit timestamp order.</source>
          <target state="translated">すべての子を表示する前に親を表示しませんが、そうでなければコミットのタイムスタンプ順に表示します。</target>
        </trans-unit>
        <trans-unit id="f771bb437a0a632ca38fbb772c5f1f11e2687b42" translate="yes" xml:space="preserve">
          <source>Show object size of blob (file) entries.</source>
          <target state="translated">ブロブ(ファイル)エントリのオブジェクトサイズを表示します。</target>
        </trans-unit>
        <trans-unit id="8ab164ff8a8b9e0dee1e1b73990f42cea75d4c17" translate="yes" xml:space="preserve">
          <source>Show only commits in the specified revision range. When no &amp;lt;revision range&amp;gt; is specified, it defaults to &lt;code&gt;HEAD&lt;/code&gt; (i.e. the whole history leading to the current commit). &lt;code&gt;origin..HEAD&lt;/code&gt; specifies all the commits reachable from the current commit (i.e. &lt;code&gt;HEAD&lt;/code&gt;), but not from &lt;code&gt;origin&lt;/code&gt;. For a complete list of ways to spell &amp;lt;revision range&amp;gt;, see the &quot;Specifying Ranges&quot; section of &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions[7]&lt;/a&gt;.</source>
          <target state="translated">指定したリビジョン範囲のコミットのみを表示します。 &amp;lt;revision range&amp;gt;が指定されていない場合、デフォルトは &lt;code&gt;HEAD&lt;/code&gt; （つまり、現在のコミットに至る履歴全体）です。 &lt;code&gt;origin..HEAD&lt;/code&gt; 現在から到達可能なすべてのコミットのコミットを指定（つまり &lt;code&gt;HEAD&lt;/code&gt; ）ではなく、より &lt;code&gt;origin&lt;/code&gt; 。 &amp;lt;revision range&amp;gt;のスペルの完全なリストについては、&lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions [7]の&lt;/a&gt;「範囲の指定」セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="329dbdc2afc2b5cab87309e7fc9f29edaec58da0" translate="yes" xml:space="preserve">
          <source>Show only commits in the specified revision range. When no &amp;lt;revision range&amp;gt; is specified, it defaults to &lt;code&gt;HEAD&lt;/code&gt; (i.e. the whole history leading to the current commit). &lt;code&gt;origin..HEAD&lt;/code&gt; specifies all the commits reachable from the current commit (i.e. &lt;code&gt;HEAD&lt;/code&gt;), but not from &lt;code&gt;origin&lt;/code&gt;. For a complete list of ways to spell &amp;lt;revision range&amp;gt;, see the &lt;code&gt;Specifying Ranges&lt;/code&gt; section of &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions[7]&lt;/a&gt;.</source>
          <target state="translated">指定したリビジョン範囲のコミットのみを表示します。&amp;lt;revision range&amp;gt;が指定されていない場合、デフォルトは &lt;code&gt;HEAD&lt;/code&gt; （つまり、現在のコミットに至る履歴全体）です。 &lt;code&gt;origin..HEAD&lt;/code&gt; 現在から到達可能なすべてのコミットのコミットを指定（つまり &lt;code&gt;HEAD&lt;/code&gt; ）ではなく、より &lt;code&gt;origin&lt;/code&gt; 。&amp;lt;revision range&amp;gt;の綴りの完全なリストについては、&lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions [7]の&lt;/a&gt; &lt;code&gt;Specifying Ranges&lt;/code&gt; の指定のセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="c46a13d2904f8d6c610a867599fe01f9862dd57c" translate="yes" xml:space="preserve">
          <source>Show only commits that are enough to explain how the files that match the specified paths came to be. See &lt;code&gt;History Simplification&lt;/code&gt; below for details and other simplification modes.</source>
          <target state="translated">指定されたパスに一致するファイルがどのようになったかを説明するのに十分なコミットのみを表示します。参照 &lt;code&gt;History Simplification&lt;/code&gt; 詳細や他の簡素化モードの下に。</target>
        </trans-unit>
        <trans-unit id="66430bcd7753c6221125437192d0fae1e7031a91" translate="yes" xml:space="preserve">
          <source>Show only commits which have at least (or at most) that many parent commits. In particular, &lt;code&gt;--max-parents=1&lt;/code&gt; is the same as &lt;code&gt;--no-merges&lt;/code&gt;, &lt;code&gt;--min-parents=2&lt;/code&gt; is the same as &lt;code&gt;--merges&lt;/code&gt;. &lt;code&gt;--max-parents=0&lt;/code&gt; gives all root commits and &lt;code&gt;--min-parents=3&lt;/code&gt; all octopus merges.</source>
          <target state="translated">少なくとも（または多くても）多くの親コミットがあるコミットのみを表示します。特に、内 &lt;code&gt;--max-parents=1&lt;/code&gt; と同じで &lt;code&gt;--no-merges&lt;/code&gt; 、 &lt;code&gt;--min-parents=2&lt;/code&gt; と同じである &lt;code&gt;--merges&lt;/code&gt; 。 &lt;code&gt;--max-parents=0&lt;/code&gt; はすべてのルートコミットを &lt;code&gt;--min-parents=3&lt;/code&gt; 、-min-parents = 3はすべてのタコをマージします。</target>
        </trans-unit>
        <trans-unit id="af5969993dd03043080efc38142a1ed4316038eb" translate="yes" xml:space="preserve">
          <source>Show only ignored files in the output. When showing files in the index, print only those matched by an exclude pattern. When showing &quot;other&quot; files, show only those matched by an exclude pattern. Standard ignore rules are not automatically activated, therefore at least one of the &lt;code&gt;--exclude*&lt;/code&gt; options is required.</source>
          <target state="translated">無視されたファイルのみを出力に表示します。インデックスにファイルを表示する場合、除外パターンに一致するファイルのみを印刷します。「その他」のファイルを表示する場合、除外パターンに一致するファイルのみを表示します。標準の無視ルールは自動的にアクティブ化されないため、 &lt;code&gt;--exclude*&lt;/code&gt; オプションの少なくとも1つが必要です。</target>
        </trans-unit>
        <trans-unit id="002b0d2d59d3dcff4e51f5a87881355bfa57f547" translate="yes" xml:space="preserve">
          <source>Show only modification, rename, and copy, but not addition or deletion.</source>
          <target state="translated">変更、名前変更、コピーのみを表示し、追加や削除は表示しません。</target>
        </trans-unit>
        <trans-unit id="9c49ead1d682188547c7f67234f6eb73a64f21cf" translate="yes" xml:space="preserve">
          <source>Show only names and status of changed files. See the description of the &lt;code&gt;--diff-filter&lt;/code&gt; option on what the status letters mean.</source>
          <target state="translated">変更されたファイルの名前とステータスのみを表示します。ステータス文字の意味については、 &lt;code&gt;--diff-filter&lt;/code&gt; オプションの説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="0ce605c7552a8aba98345c842476a27b2a9c28e4" translate="yes" xml:space="preserve">
          <source>Show only names and the nature of change, but not actual diff output.</source>
          <target state="translated">名前と変更内容のみを表示し、実際の差分出力は表示しません。</target>
        </trans-unit>
        <trans-unit id="835669256cac48c4e209f28cd6e5b641f9186e51" translate="yes" xml:space="preserve">
          <source>Show only names of changed files.</source>
          <target state="translated">変更されたファイル名のみを表示します。</target>
        </trans-unit>
        <trans-unit id="be1dc5236687c9842a30e8f5499d3363ce72f159" translate="yes" xml:space="preserve">
          <source>Show only the named tree entry itself, not its children.</source>
          <target state="translated">指定されたツリーエントリの子ではなく、指定されたツリーエントリ自体のみを表示します。</target>
        </trans-unit>
        <trans-unit id="8c61ca2fb81ac3434e9edecd88dadef66a32e9a7" translate="yes" xml:space="preserve">
          <source>Show only unmerged branches in the &lt;code&gt;revPrompt&lt;/code&gt; subdialog. This is useful for tools similar to merge or rebase, but not for things like checkout or reset.</source>
          <target state="translated">のみマージされていない枝を表示 &lt;code&gt;revPrompt&lt;/code&gt; のサブダイアログ。これは、マージやリベースに似たツールには役立ちますが、チェックアウトやリセットなどには役立ちません。</target>
        </trans-unit>
        <trans-unit id="bcce9ca1424c944de6ae0083c8d4fdfea35ee963" translate="yes" xml:space="preserve">
          <source>Show other (i.e. untracked) files in the output</source>
          <target state="translated">出力に他の(つまりトラックされていない)ファイルを表示する</target>
        </trans-unit>
        <trans-unit id="b66aeda059663e06293f23a26a8d9280cb01bb39" translate="yes" xml:space="preserve">
          <source>Show packed archive index</source>
          <target state="translated">パックされたアーカイブインデックスを表示</target>
        </trans-unit>
        <trans-unit id="867eafced11331f75ab644a43b8e1a6c8a1b09e5" translate="yes" xml:space="preserve">
          <source>Show progress reports on stderr as objects are considered. The &lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt; text will be printed with each progress update.</source>
          <target state="translated">オブジェクトが考慮されているときにstderrの進捗レポートを表示します。 &lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt; テキストは、それぞれの進捗の更新で印刷されます。</target>
        </trans-unit>
        <trans-unit id="f20a140b8853bef6c5df99f49ec5adde7b92f174" translate="yes" xml:space="preserve">
          <source>Show progress reports on stderr as patches are generated.</source>
          <target state="translated">パッチが生成されたときに、標準エラーに進捗状況を表示します。</target>
        </trans-unit>
        <trans-unit id="873f06beb8dcdfdf113f3a3696210210ae4585eb" translate="yes" xml:space="preserve">
          <source>Show progress.</source>
          <target state="translated">進行状況を表示します。</target>
        </trans-unit>
        <trans-unit id="0aa1726b9011fcb05b9b5a738460be2bb61ef6af" translate="yes" xml:space="preserve">
          <source>Show raw timestamp (Default: off).</source>
          <target state="translated">生のタイムスタンプを表示します(デフォルト:off)。</target>
        </trans-unit>
        <trans-unit id="7167725b750724d1668f3392932bcc3766402e73" translate="yes" xml:space="preserve">
          <source>Show recursive diffs.</source>
          <target state="translated">再帰的な差分を表示します。</target>
        </trans-unit>
        <trans-unit id="4a21113a85b9e00a6d43c59bc8a68e2e1734a7de" translate="yes" xml:space="preserve">
          <source>Show references matching one or more patterns. Patterns are matched from the end of the full name, and only complete parts are matched, e.g. &lt;code&gt;master&lt;/code&gt; matches &lt;code&gt;refs/heads/master&lt;/code&gt;, &lt;code&gt;refs/remotes/origin/master&lt;/code&gt;, &lt;code&gt;refs/tags/jedi/master&lt;/code&gt; but not &lt;code&gt;refs/heads/mymaster&lt;/code&gt; or &lt;code&gt;refs/remotes/master/jedi&lt;/code&gt;.</source>
          <target state="translated">1つ以上のパターンに一致する参照を表示します。例えば、パターンは完全な名前の末尾からマッチングされ、そして唯一の完全な部分が一致している &lt;code&gt;master&lt;/code&gt; 試合の &lt;code&gt;refs/heads/master&lt;/code&gt; 、 &lt;code&gt;refs/remotes/origin/master&lt;/code&gt; 、 &lt;code&gt;refs/tags/jedi/master&lt;/code&gt; ではなく、 &lt;code&gt;refs/heads/mymaster&lt;/code&gt; または &lt;code&gt;refs/remotes/master/jedi&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5256f8d763cc4d210c603b98ae747ed57f6b9b37" translate="yes" xml:space="preserve">
          <source>Show repository only if this file exists (in repository). Only effective if this variable evaluates to true. Can be set when building gitweb by setting &lt;code&gt;GITWEB_EXPORT_OK&lt;/code&gt;. This path is relative to &lt;code&gt;GIT_DIR&lt;/code&gt;. git-daemon[1] uses &lt;code&gt;git-daemon-export-ok&lt;/code&gt;, unless started with &lt;code&gt;--export-all&lt;/code&gt;. By default this variable is not set, which means that this feature is turned off.</source>
          <target state="translated">このファイルが（リポジトリ内に）存在する場合にのみ、リポジトリを表示します。この変数がtrueと評価された場合にのみ有効です。GITWEB_EXPORT_OKを設定することで、 &lt;code&gt;GITWEB_EXPORT_OK&lt;/code&gt; 時に設定できます。このパスは &lt;code&gt;GIT_DIR&lt;/code&gt; からの相対パスです。git-daemon [1]は、 &lt;code&gt;git-daemon-export-ok&lt;/code&gt; &lt;code&gt;--export-all&lt;/code&gt; 開始しない限り、git-daemon-export-okを使用します。デフォルトでは、この変数は設定されていません。つまり、この機能はオフになっています。</target>
        </trans-unit>
        <trans-unit id="61630b8887fba0c6ae1f6471c93d4b1ac2d78421" translate="yes" xml:space="preserve">
          <source>Show staged contents' mode bits, object name and stage number in the output.</source>
          <target state="translated">ステージコンテンツのモードビット、オブジェクト名、ステージ番号を出力に表示します。</target>
        </trans-unit>
        <trans-unit id="146391550f639861a0610768d29eef80cf7e2b56" translate="yes" xml:space="preserve">
          <source>Show the HEAD reference, even if it would normally be filtered out.</source>
          <target state="translated">通常はフィルタリングされていなくても、HEAD参照を表示します。</target>
        </trans-unit>
        <trans-unit id="fea0b0dc87e518d09c89e0b3cebe67d85f5ef7a7" translate="yes" xml:space="preserve">
          <source>Show the absolute path of the root of the superproject&amp;rsquo;s working tree (if exists) that uses the current repository as its submodule. Outputs nothing if the current repository is not used as a submodule by any project.</source>
          <target state="translated">現在のリポジトリをサブモジュールとして使用するスーパープロジェクトの作業ツリー（存在する場合）のルートの絶対パスを表示します。現在のリポジトリがプロジェクトでサブモジュールとして使用されていない場合は何も出力しません。</target>
        </trans-unit>
        <trans-unit id="81d568ac49f075957202365490a4c231f9c1f3ac" translate="yes" xml:space="preserve">
          <source>Show the absolute path of the top-level directory of the working tree. If there is no working tree, report an error.</source>
          <target state="translated">作業ツリーのトップレベルディレクトリの絶対パスを表示します。作業ツリーがない場合は、エラーを報告します。</target>
        </trans-unit>
        <trans-unit id="d58575cff5ae50bf5388e0984f120c24ef0b57bb" translate="yes" xml:space="preserve">
          <source>Show the author email instead of author name (Default: off). This can also be controlled via the &lt;code&gt;blame.showEmail&lt;/code&gt; config option.</source>
          <target state="translated">著者名の代わりに著者のメールを表示します（デフォルト：オフ）。これは、 &lt;code&gt;blame.showEmail&lt;/code&gt; 構成オプションで制御することもできます。</target>
        </trans-unit>
        <trans-unit id="2ecb96a53849cc4ea467a6d904be25f5e345a592" translate="yes" xml:space="preserve">
          <source>Show the author email instead of author name in &lt;a href=&quot;git-blame&quot;&gt;git-blame[1]&lt;/a&gt;. This option defaults to false.</source>
          <target state="translated">&lt;a href=&quot;git-blame&quot;&gt;git-blame [1]&lt;/a&gt;に著者名の代わりに著者のメールを表示します。このオプションのデフォルトはfalseです。</target>
        </trans-unit>
        <trans-unit id="4bcbe1ac6c4bdbbf9ea91698126aa20a057ccc2c" translate="yes" xml:space="preserve">
          <source>Show the branch and tracking info even in short-format.</source>
          <target state="translated">ショートフォーマットでも分岐情報や追跡情報を表示します。</target>
        </trans-unit>
        <trans-unit id="a7915b46ed412ee27d561c779d7568440c30d97c" translate="yes" xml:space="preserve">
          <source>Show the changes during the last two weeks to the file &lt;code&gt;gitk&lt;/code&gt;. The &quot;--&quot; is necessary to avoid confusion with the &lt;strong&gt;branch&lt;/strong&gt; named &lt;code&gt;gitk&lt;/code&gt;</source>
          <target state="translated">過去2週間の &lt;code&gt;gitk&lt;/code&gt; ファイルへの変更を表示します。「-」は &lt;code&gt;gitk&lt;/code&gt; という名前の&lt;strong&gt;ブランチ&lt;/strong&gt;との混同を避けるために必要です</target>
        </trans-unit>
        <trans-unit id="a8fc389f3fa0446576124b8d36bfb677216cd040" translate="yes" xml:space="preserve">
          <source>Show the changes during the last two weeks to the file &lt;code&gt;gitk&lt;/code&gt;. The &lt;code&gt;--&lt;/code&gt; is necessary to avoid confusion with the &lt;strong&gt;branch&lt;/strong&gt; named &lt;code&gt;gitk&lt;/code&gt;</source>
          <target state="translated">過去2週間の &lt;code&gt;gitk&lt;/code&gt; ファイルへの変更を表示します。 &lt;code&gt;--&lt;/code&gt; との混同を避ける必要がある&lt;strong&gt;ブランチ&lt;/strong&gt;の名前 &lt;code&gt;gitk&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9eebb0dfcba472cb083099fa0a98ec8bef90962a" translate="yes" xml:space="preserve">
          <source>Show the changes recorded in the stash entry as a diff between the stashed contents and the commit back when the stash entry was first created. By default, the command shows the diffstat, but it will accept any format known to &lt;code&gt;git diff&lt;/code&gt; (e.g., &lt;code&gt;git stash show -p stash@{1}&lt;/code&gt; to view the second most recent entry in patch form). You can use stash.showStat and/or stash.showPatch config variables to change the default behavior.</source>
          <target state="translated">stashエントリに記録された変更を、隠されたコンテンツと、stashエントリが最初に作成されたときのコミットバックとの差分として表示します。デフォルトでは、コマンドはdiffstatを表示しますが、 &lt;code&gt;git diff&lt;/code&gt; で認識されている任意の形式を受け入れます（たとえば、パッチ形式で2番目に新しいエントリを表示するには &lt;code&gt;git stash show -p stash@{1}&lt;/code&gt; ）。stash.showStatおよび/またはstash.showPatch構成変数を使用して、デフォルトの動作を変更できます。</target>
        </trans-unit>
        <trans-unit id="877bab942fc51a3086fcc16e754d1712669dc82e" translate="yes" xml:space="preserve">
          <source>Show the changes recorded in the stash entry as a diff between the stashed contents and the commit back when the stash entry was first created. When no &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; is given, it shows the latest one. By default, the command shows the diffstat, but it will accept any format known to &lt;code&gt;git diff&lt;/code&gt; (e.g., &lt;code&gt;git stash show -p stash@{1}&lt;/code&gt; to view the second most recent entry in patch form). You can use stash.showStat and/or stash.showPatch config variables to change the default behavior.</source>
          <target state="translated">stashエントリーが最初に作成されたとき、stashエントリーに記録された変更を、stashされたコンテンツとコミット間の差分として表示します。 &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; が指定されていない場合は、最新のものを表示します。デフォルトでは、コマンドはdiffstatを表示しますが、 &lt;code&gt;git diff&lt;/code&gt; で認識されている任意のフォーマットを受け入れます（たとえば、パッチ形式で2番目に新しいエントリを表示する &lt;code&gt;git stash show -p stash@{1}&lt;/code&gt; ）。stash.showStatおよび/またはstash.showPatch構成変数を使用して、デフォルトの動作を変更できます。</target>
        </trans-unit>
        <trans-unit id="6dc3c2578e3a9fa987c1a16be4e18cd8d21ed499" translate="yes" xml:space="preserve">
          <source>Show the changes since version &lt;code&gt;v2.6.12&lt;/code&gt; that changed any file in the include/scsi or drivers/scsi subdirectories</source>
          <target state="translated">include / scsiまたはdrivers / scsiサブディレクトリ内のファイルを変更したバージョン &lt;code&gt;v2.6.12&lt;/code&gt; 以降の変更を表示します</target>
        </trans-unit>
        <trans-unit id="59882bbc15f62948be114af14833ad7f6dee5f50" translate="yes" xml:space="preserve">
          <source>Show the commit itself and the commit log message even if the diff itself is empty.</source>
          <target state="translated">diff 自体が空の場合でも、コミット自体とコミットログメッセージを表示します。</target>
        </trans-unit>
        <trans-unit id="8a1797e0ff002e85bbdedc5376243381a92ddebf" translate="yes" xml:space="preserve">
          <source>Show the commit subjects next to the SHA1s.</source>
          <target state="translated">SHA1 の隣にコミット科目を表示します。</target>
        </trans-unit>
        <trans-unit id="13a02f2303b4ed4a2167fcf812fcf1ac53740ea9" translate="yes" xml:space="preserve">
          <source>Show the commits that are in the &quot;test&quot; branch but not yet in the &quot;release&quot; branch, along with the list of paths each commit modifies.</source>
          <target state="translated">test&quot; ブランチにあり、&quot;release&quot; ブランチにはないコミットを、それぞれのコミットが変更したパスの一覧とともに表示します。</target>
        </trans-unit>
        <trans-unit id="724ae33ae952d72a471b3d97f22a84d58cfd2176" translate="yes" xml:space="preserve">
          <source>Show the content as converted by the filters configured in the current working tree for the given &amp;lt;path&amp;gt; (i.e. smudge filters, end-of-line conversion, etc). In this case, &amp;lt;object&amp;gt; has to be of the form &amp;lt;tree-ish&amp;gt;:&amp;lt;path&amp;gt;, or :&amp;lt;path&amp;gt;.</source>
          <target state="translated">指定された&amp;lt;path&amp;gt;の現在の作業ツリーで構成されているフィルターによって変換されたコンテンツを表示します（つまり、スマッジフィルター、行末変換など）。この場合、&amp;lt;object&amp;gt;は&amp;lt;tree-ish&amp;gt;：&amp;lt;path&amp;gt;または：&amp;lt;path&amp;gt;の形式にする必要があります。</target>
        </trans-unit>
        <trans-unit id="be70371f28252f06cf6503a94132408841f759d7" translate="yes" xml:space="preserve">
          <source>Show the content as transformed by a textconv filter. In this case, &amp;lt;object&amp;gt; has to be of the form &amp;lt;tree-ish&amp;gt;:&amp;lt;path&amp;gt;, or :&amp;lt;path&amp;gt; in order to apply the filter to the content recorded in the index at &amp;lt;path&amp;gt;.</source>
          <target state="translated">textconvフィルターによって変換されたコンテンツを表示します。この場合、&amp;lt;object&amp;gt;は、&amp;lt;path&amp;gt;のインデックスに記録されたコンテンツにフィルターを適用するために、&amp;lt;tree-ish&amp;gt;：&amp;lt;path&amp;gt;または：&amp;lt;path&amp;gt;の形式である必要があります。</target>
        </trans-unit>
        <trans-unit id="78813d71262485f1cc698929fd8f6ed3ab93eba8" translate="yes" xml:space="preserve">
          <source>Show the contents of &lt;code&gt;Makefile&lt;/code&gt; in revision &lt;code&gt;v0.99.8&lt;/code&gt; and provide annotations for each line. Unlike the above example the file is read from the object database and not the working directory.</source>
          <target state="translated">&lt;code&gt;Makefile&lt;/code&gt; の内容をリビジョン &lt;code&gt;v0.99.8&lt;/code&gt; で表示し、各行に注釈を付けます。上記の例とは異なり、ファイルは作業データベースではなくオブジェクトデータベースから読み取られます。</target>
        </trans-unit>
        <trans-unit id="5c3c76e526574e694470512f190e4502f8d279a5" translate="yes" xml:space="preserve">
          <source>Show the contents of the file &lt;code&gt;Makefile&lt;/code&gt; in the current working directory, and provide annotations for both the original author of each line, and who moved the line to its current location. The uncommitted file is annotated, and uncommitted changes (if any) are explicitly attributed to &lt;code&gt;Not Yet Committed&lt;/code&gt;.</source>
          <target state="translated">現在の作業ディレクトリにある &lt;code&gt;Makefile&lt;/code&gt; ファイルの内容を表示し、各行の元の作成者と、その行を現在の場所に移動したユーザーの両方に注釈を付けます。コミットされていないファイルには注釈が付けられ、コミットされていない変更（ある場合）は明示的に &lt;code&gt;Not Yet Committed&lt;/code&gt; に起因します。</target>
        </trans-unit>
        <trans-unit id="e218b59d83785be7915643dfc5b6a7b490def489" translate="yes" xml:space="preserve">
          <source>Show the context between diff hunks, up to the specified number of lines, thereby fusing hunks that are close to each other. Defaults to &lt;code&gt;diff.interHunkContext&lt;/code&gt; or 0 if the config option is unset.</source>
          <target state="translated">指定された行数までの差分ハンク間のコンテキストを表示し、それによって互いに近いハンクを融合します。デフォルトは &lt;code&gt;diff.interHunkContext&lt;/code&gt; か、configオプションが設定されていない場合は0です。</target>
        </trans-unit>
        <trans-unit id="738d68d4dedc5068c7659d3b55ae573e291dd6e6" translate="yes" xml:space="preserve">
          <source>Show the context between diff hunks, up to the specified number of lines, thereby fusing the hunks that are close to each other. This value serves as the default for the &lt;code&gt;--inter-hunk-context&lt;/code&gt; command line option.</source>
          <target state="translated">指定された行数までのdiffハンク間のコンテキストを表示し、それによって互いに近いハンクを融合します。この値は、 &lt;code&gt;--inter-hunk-context&lt;/code&gt; コマンドラインオプションのデフォルトとして機能します。</target>
        </trans-unit>
        <trans-unit id="4f70107eeb8997652e58a1d8572c279efb177133" translate="yes" xml:space="preserve">
          <source>Show the current patch in an interactive rebase or when rebase is stopped because of conflicts. This is the equivalent of &lt;code&gt;git show REBASE_HEAD&lt;/code&gt;.</source>
          <target state="translated">インタラクティブなリベースで、または競合のためにリベースが停止したときに、現在のパッチを表示します。これは &lt;code&gt;git show REBASE_HEAD&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="70f379614ad3c3f540d932681a54d5c082f0dab9" translate="yes" xml:space="preserve">
          <source>Show the email address of each author.</source>
          <target state="translated">各著者のメールアドレスを表示します。</target>
        </trans-unit>
        <trans-unit id="7d75f0f1d94f4cb5fb2f3f4826ebeee8b6bd4db1" translate="yes" xml:space="preserve">
          <source>Show the entire e-mail message &quot;git am&quot; has stopped at, because of conflicts.</source>
          <target state="translated">git am&quot; が停止しているメールメッセージ全体を表示します。</target>
        </trans-unit>
        <trans-unit id="172de3da6fec23b745b3f7495e42b18d6ff2e3d5" translate="yes" xml:space="preserve">
          <source>Show the filename above the matches in that file instead of at the start of each shown line.</source>
          <target state="translated">表示される各行の先頭ではなく、そのファイルのマッチの上にファイル名を表示します。</target>
        </trans-unit>
        <trans-unit id="f95469ae696b3f00df813ab275db8edbf948a14b" translate="yes" xml:space="preserve">
          <source>Show the filename in the original commit. By default the filename is shown if there is any line that came from a file with a different name, due to rename detection.</source>
          <target state="translated">元のコミットのファイル名を表示します。デフォルトでは、リネーム検出のために別の名前のファイルから来た行がある場合、ファイル名が表示されます。</target>
        </trans-unit>
        <trans-unit id="3e3d59b4bf16e3f56b771d2e4d942efd80dd4d82" translate="yes" xml:space="preserve">
          <source>Show the full 40-byte hexadecimal commit object name. This negates &lt;code&gt;--abbrev-commit&lt;/code&gt; and those options which imply it such as &quot;--oneline&quot;. It also overrides the &lt;code&gt;log.abbrevCommit&lt;/code&gt; variable.</source>
          <target state="translated">完全な40バイトの16進数のコミットオブジェクト名を表示します。これは、 &lt;code&gt;--abbrev-commit&lt;/code&gt; とそれを意味する &quot;--oneline&quot;などのオプションを無効にします。また、 &lt;code&gt;log.abbrevCommit&lt;/code&gt; 変数もオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="61ee0a84eb604c1f8a4a6a6caa87ed9b0aa485c5" translate="yes" xml:space="preserve">
          <source>Show the full 40-byte hexadecimal commit object name. This negates &lt;code&gt;--abbrev-commit&lt;/code&gt;, either explicit or implied by other options such as &quot;--oneline&quot;. It also overrides the &lt;code&gt;log.abbrevCommit&lt;/code&gt; variable.</source>
          <target state="translated">完全な40バイトの16進コミットオブジェクト名を表示します。これは、明示的または「--oneline」などの他のオプションによって暗示される &lt;code&gt;--abbrev-commit&lt;/code&gt; を無効にします。また、 &lt;code&gt;log.abbrevCommit&lt;/code&gt; 変数をオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="f9a9f3cf0d88f67dc0a2f911b2a17556553b49ba" translate="yes" xml:space="preserve">
          <source>Show the given destination prefix instead of &quot;b/&quot;.</source>
          <target state="translated">b/」ではなく、指定された宛先のプレフィックスを表示します。</target>
        </trans-unit>
        <trans-unit id="4a610521917af2112009fac9ef83beff567eff6c" translate="yes" xml:space="preserve">
          <source>Show the given source prefix instead of &quot;a/&quot;.</source>
          <target state="translated">a/&quot; の代わりに、指定されたソースのプレフィックスを表示します。</target>
        </trans-unit>
        <trans-unit id="77be67edff03e9adcf5b9f00110ef7e89bbf43f4" translate="yes" xml:space="preserve">
          <source>Show the line number in the original commit (Default: off).</source>
          <target state="translated">元のコミットの行番号を表示します (デフォルト:off)。</target>
        </trans-unit>
        <trans-unit id="edc37494876d892fcb3f9e5ed21ef2bd5105c12c" translate="yes" xml:space="preserve">
          <source>Show the message at which &lt;code&gt;git am&lt;/code&gt; has stopped due to conflicts. If &lt;code&gt;raw&lt;/code&gt; is specified, show the raw contents of the e-mail message; if &lt;code&gt;diff&lt;/code&gt;, show the diff portion only. Defaults to &lt;code&gt;raw&lt;/code&gt;.</source>
          <target state="translated">競合が原因で &lt;code&gt;git am&lt;/code&gt; が停止したメッセージを表示します。 &lt;code&gt;raw&lt;/code&gt; が指定されている場合は、電子メールメッセージのrawコンテンツを表示します。場合は &lt;code&gt;diff&lt;/code&gt; のみ差分部分を示しています。デフォルトは &lt;code&gt;raw&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="7fc90bd9d374d0e136811a02e380e22be094fea9" translate="yes" xml:space="preserve">
          <source>Show the notes (see &lt;a href=&quot;git-notes&quot;&gt;git-notes[1]&lt;/a&gt;) that annotate the commit, when showing the commit log message. This is the default for &lt;code&gt;git log&lt;/code&gt;, &lt;code&gt;git show&lt;/code&gt; and &lt;code&gt;git whatchanged&lt;/code&gt; commands when there is no &lt;code&gt;--pretty&lt;/code&gt;, &lt;code&gt;--format&lt;/code&gt;, or &lt;code&gt;--oneline&lt;/code&gt; option given on the command line.</source>
          <target state="translated">コミットログメッセージを表示するときに、コミットに注釈を付けるメモ（&lt;a href=&quot;git-notes&quot;&gt;git-notes [1]を&lt;/a&gt;参照）を表示します。これは、デフォルトで &lt;code&gt;git log&lt;/code&gt; 、 &lt;code&gt;git show&lt;/code&gt; と &lt;code&gt;git whatchanged&lt;/code&gt; 全く存在しないときのコマンドを &lt;code&gt;--pretty&lt;/code&gt; 、 &lt;code&gt;--format&lt;/code&gt; 、または &lt;code&gt;--oneline&lt;/code&gt; コマンドラインで指定したオプション。</target>
        </trans-unit>
        <trans-unit id="5d9c16ddef53da23b241c4981fec0a65a72c29ca" translate="yes" xml:space="preserve">
          <source>Show the notes for a given object (defaults to HEAD).</source>
          <target state="translated">指定されたオブジェクトのノートを表示します(デフォルトは HEAD)。</target>
        </trans-unit>
        <trans-unit id="f0bfdb6e91a5688fc1141d3407d575275f304926" translate="yes" xml:space="preserve">
          <source>Show the number of entries currently stashed away.</source>
          <target state="translated">現在ため込んでいるエントリー数を表示します。</target>
        </trans-unit>
        <trans-unit id="3c9a6685a00f511f81c04581bd599d8474c49f6d" translate="yes" xml:space="preserve">
          <source>Show the object format (hash algorithm) used for the repository for storage inside the &lt;code&gt;.git&lt;/code&gt; directory, input, or output. For input, multiple algorithms may be printed, space-separated. If not specified, the default is &quot;storage&quot;.</source>
          <target state="translated">&lt;code&gt;.git&lt;/code&gt; ディレクトリ内のストレージ、入力、または出力用のリポジトリに使用されるオブジェクト形式（ハッシュアルゴリズム）を表示します。入力の場合、複数のアルゴリズムをスペースで区切って出力できます。指定しない場合、デフォルトは「ストレージ」です。</target>
        </trans-unit>
        <trans-unit id="2065145a8ccf699cb187c308bae854443dde9e61" translate="yes" xml:space="preserve">
          <source>Show the path to the shared index file in split index mode, or empty if not in split-index mode.</source>
          <target state="translated">スプリットインデックスモードでは共有インデックスファイルへのパスを表示し、スプリットインデックスモードでない場合は空のパスを表示します。</target>
        </trans-unit>
        <trans-unit id="fc95b34844d65ed902bda405925620eb3e5a1983" translate="yes" xml:space="preserve">
          <source>Show the porcelain format, but output commit information for each line, not just the first time a commit is referenced. Implies --porcelain.</source>
          <target state="translated">磁器フォーマットを表示しますが、最初のコミットが参照された時だけでなく、各行のコミット情報を出力します。porcelain を意味します。</target>
        </trans-unit>
        <trans-unit id="c81496056d90f54bdff08b7b7019335227bad0b2" translate="yes" xml:space="preserve">
          <source>Show the preceding line that contains the function name of the match, unless the matching line is a function name itself. The name is determined in the same way as &lt;code&gt;git diff&lt;/code&gt; works out patch hunk headers (see &lt;code&gt;Defining a custom hunk-header&lt;/code&gt; in &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt;).</source>
          <target state="translated">一致する行が関数名自体でない限り、一致する関数名を含む前の行を表示します。名前は、 &lt;code&gt;git diff&lt;/code&gt; がパッチハンクヘッダーを&lt;a href=&quot;gitattributes&quot;&gt;計算&lt;/a&gt;するのと同じ方法で決定されます（gitattributes [5]での &lt;code&gt;Defining a custom hunk-header&lt;/code&gt; 参照）。</target>
        </trans-unit>
        <trans-unit id="114a9aa417c57ec620d43a64c520abeb8e1f3f29" translate="yes" xml:space="preserve">
          <source>Show the progress of checking files out.</source>
          <target state="translated">ファイルのチェックアウトの進行状況を表示します。</target>
        </trans-unit>
        <trans-unit id="e5e665e21c64d0029d8257ef6e137aa1376a6118" translate="yes" xml:space="preserve">
          <source>Show the remote-tracking branches.</source>
          <target state="translated">リモートトラッキングのブランチを表示します。</target>
        </trans-unit>
        <trans-unit id="b9c5b299181f4d64f3ea6e8b9c13b148fff537b5" translate="yes" xml:space="preserve">
          <source>Show the result incrementally in a format designed for machine consumption.</source>
          <target state="translated">結果を機械消費用に設計されたフォーマットでインクリメンタルに表示します。</target>
        </trans-unit>
        <trans-unit id="c999f8cbf6fa5c24fdf8b2b9b5596b445f624a80" translate="yes" xml:space="preserve">
          <source>Show the status of the submodules. This will print the SHA-1 of the currently checked out commit for each submodule, along with the submodule path and the output of &lt;code&gt;git describe&lt;/code&gt; for the SHA-1. Each SHA-1 will possibly be prefixed with &lt;code&gt;-&lt;/code&gt; if the submodule is not initialized, &lt;code&gt;+&lt;/code&gt; if the currently checked out submodule commit does not match the SHA-1 found in the index of the containing repository and &lt;code&gt;U&lt;/code&gt; if the submodule has merge conflicts.</source>
          <target state="translated">サブモジュールのステータスを表示します。これにより、各サブモジュールの現在チェックアウトされているコミットのSHA-1が、SHA-1のサブモジュールパスと &lt;code&gt;git describe&lt;/code&gt; の出力とともに出力されます。各SHA-1は、おそらく接頭辞されます &lt;code&gt;-&lt;/code&gt; サブモジュールが初期化されていない場合、 &lt;code&gt;+&lt;/code&gt; 現在チェックアウトサブモジュールが一致していないコミット場合はSHA-1を含むリポジトリとのインデックスで見つかった &lt;code&gt;U&lt;/code&gt; サブモジュールは、マージの競合を持っている場合。</target>
        </trans-unit>
        <trans-unit id="32335b1eb1c0a4fbecaf630b0ab1df57722da3d3" translate="yes" xml:space="preserve">
          <source>Show the surrounding text from the previous line containing a function name up to the one before the next function name, effectively showing the whole function in which the match was found.</source>
          <target state="translated">関数名を含む前の行から次の関数名の前までの周囲のテキストを表示します。</target>
        </trans-unit>
        <trans-unit id="d9ba5793263afde18e073f27493f8db14c55a4c3" translate="yes" xml:space="preserve">
          <source>Show the surrounding text from the previous line containing a function name up to the one before the next function name, effectively showing the whole function in which the match was found. The function names are determined in the same way as &lt;code&gt;git diff&lt;/code&gt; works out patch hunk headers (see &lt;code&gt;Defining a custom hunk-header&lt;/code&gt; in &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt;).</source>
          <target state="translated">関数名を含む前の行から次の関数名の前の行までの周囲のテキストを表示し、一致が見つかった関数全体を効果的に示します。関数名は、 &lt;code&gt;git diff&lt;/code&gt; がパッチハンクヘッダーを処理するのと同じ方法で決定されます（&lt;a href=&quot;gitattributes&quot;&gt;gitattributes [5]&lt;/a&gt;での &lt;code&gt;Defining a custom hunk-header&lt;/code&gt; 参照）。</target>
        </trans-unit>
        <trans-unit id="9511319e5f4aea9984dc4693f8341e94527b78d9" translate="yes" xml:space="preserve">
          <source>Show the tree objects in the diff output.</source>
          <target state="translated">diff出力にツリーオブジェクトを表示します。</target>
        </trans-unit>
        <trans-unit id="ee3926cd6bade9ce34cbcecec5eb956d896d053e" translate="yes" xml:space="preserve">
          <source>Show the tree objects in the diff output. This implies &lt;code&gt;-r&lt;/code&gt;.</source>
          <target state="translated">ツリーオブジェクトをdiff出力に表示します。これは &lt;code&gt;-r&lt;/code&gt; を意味します。</target>
        </trans-unit>
        <trans-unit id="984ffa4d6fa814707b9db0fd0df1de10038cb7e9" translate="yes" xml:space="preserve">
          <source>Show the whole commit history, but skip any merges</source>
          <target state="translated">コミット履歴全体を表示するが、マージはスキップする</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
