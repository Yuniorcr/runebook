<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="phpunit">
    <body>
      <group id="phpunit">
        <trans-unit id="0834c2f1f0aac1f1716e292bcbc16a120c23ed6f" translate="yes" xml:space="preserve">
          <source>Marks the current test as skipped using &lt;code&gt;$message&lt;/code&gt; as an explanatory message.</source>
          <target state="translated">説明メッセージとして &lt;code&gt;$message&lt;/code&gt; を使用して、現在のテストをスキップ済みとしてマークします。</target>
        </trans-unit>
        <trans-unit id="fdc3dac1a5688d504fafe6e63f4bebd84b6d2736" translate="yes" xml:space="preserve">
          <source>Marks the current test as skipped.</source>
          <target state="translated">現在のテストをスキップしたものとしてマークします。</target>
        </trans-unit>
        <trans-unit id="836f70fd7d82393c2699b8755613486047b49b3c" translate="yes" xml:space="preserve">
          <source>Matcher</source>
          <target state="translated">Matcher</target>
        </trans-unit>
        <trans-unit id="19cd7d185cfd95a703e62d43597e9ae28e0646e5" translate="yes" xml:space="preserve">
          <source>Meaning</source>
          <target state="translated">Meaning</target>
        </trans-unit>
        <trans-unit id="88306943fea7e76f9cd57cae0ea6d8b32d2e8434" translate="yes" xml:space="preserve">
          <source>Method</source>
          <target state="translated">Method</target>
        </trans-unit>
        <trans-unit id="607b425901e9136d2ffa37e4cec98ea81601d312" translate="yes" xml:space="preserve">
          <source>Mock Objects</source>
          <target state="translated">モックオブジェクト</target>
        </trans-unit>
        <trans-unit id="d4fa210c46684ae2702c307452165549fb1bea55" translate="yes" xml:space="preserve">
          <source>Mocking Traits and Abstract Classes</source>
          <target state="translated">モッキング形質と抽象クラス</target>
        </trans-unit>
        <trans-unit id="4e5a47b3d7702fd44c158059d205df922e8abfd2" translate="yes" xml:space="preserve">
          <source>Mocking the Filesystem</source>
          <target state="translated">ファイルシステムをモックする</target>
        </trans-unit>
        <trans-unit id="1f7949d4ee91359460471cc2a9ab4ba454f1eba0" translate="yes" xml:space="preserve">
          <source>More complex assertions can be formulated using the &lt;code&gt;PHPUnit\Framework\Constraint&lt;/code&gt; classes. They can be evaluated using the &lt;code&gt;assertThat()&lt;/code&gt; method. &lt;a href=&quot;#appendixes-assertions-assertthat-example&quot;&gt;Example 1.61&lt;/a&gt; shows how the &lt;code&gt;logicalNot()&lt;/code&gt; and &lt;code&gt;equalTo()&lt;/code&gt; constraints can be used to express the same assertion as &lt;code&gt;assertNotEquals()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PHPUnit\Framework\Constraint&lt;/code&gt; クラスを使用して、より複雑なアサーションを作成できます。それらは &lt;code&gt;assertThat()&lt;/code&gt; メソッドを使用して評価できます。&lt;a href=&quot;#appendixes-assertions-assertthat-example&quot;&gt;実施例1.61&lt;/a&gt;方法を示し &lt;code&gt;logicalNot()&lt;/code&gt; と &lt;code&gt;equalTo()&lt;/code&gt; 制約が同じアサーションを表現するために使用することができる &lt;code&gt;assertNotEquals()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1e242a25a18542f296703991379eeb2809fe5996" translate="yes" xml:space="preserve">
          <source>More complex assertions can be formulated using the &lt;code&gt;PHPUnit_Framework_Constraint&lt;/code&gt; classes. They can be evaluated using the &lt;code&gt;assertThat()&lt;/code&gt; method. &lt;a href=&quot;appendixes.assertions#appendixes.assertions.assertThat.example&quot;&gt;Example A.49&lt;/a&gt; shows how the &lt;code&gt;logicalNot()&lt;/code&gt; and &lt;code&gt;equalTo()&lt;/code&gt; constraints can be used to express the same assertion as &lt;code&gt;assertNotEquals()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PHPUnit_Framework_Constraint&lt;/code&gt; クラスを使用して、より複雑なアサーションを作成できます。それらは、 &lt;code&gt;assertThat()&lt;/code&gt; メソッドを使用して評価できます。&lt;a href=&quot;appendixes.assertions#appendixes.assertions.assertThat.example&quot;&gt;実施例A.49の&lt;/a&gt;方法を示し &lt;code&gt;logicalNot()&lt;/code&gt; と &lt;code&gt;equalTo()&lt;/code&gt; 制約が同じアサーションを表現するために使用することができる &lt;code&gt;assertNotEquals()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="54184964137f49b8ce205dde3d468495fdd1cd90" translate="yes" xml:space="preserve">
          <source>More setUp() than tearDown()</source>
          <target state="translated">tearDown()よりも setUp()の方が多いです。</target>
        </trans-unit>
        <trans-unit id="5b7dd78b7622d3256924b8fa67884d9d6a364770" translate="yes" xml:space="preserve">
          <source>More specialized comparisons are used for specific argument types for &lt;code&gt;$expected&lt;/code&gt; and &lt;code&gt;$actual&lt;/code&gt;, see below.</source>
          <target state="translated">&lt;code&gt;$expected&lt;/code&gt; と &lt;code&gt;$actual&lt;/code&gt; 特定の引数型には、より特殊な比較が使用されます。以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="7e0b97669d11883c70ca1d6c831840b8d0c6db11" translate="yes" xml:space="preserve">
          <source>MySQL XML DataSet</source>
          <target state="translated">MySQL XMLデータセット</target>
        </trans-unit>
        <trans-unit id="e5e493522134e6514878526f0a208fcabaaf676e" translate="yes" xml:space="preserve">
          <source>No, PDO is only required for the fixture clean- and set-up and for assertions. You can use whatever database abstraction you want inside your own code.</source>
          <target state="translated">いいえ、PDOが必要なのはフィクスチャのクリーンアップとセットアップとアサーションだけです。自分のコードの中で好きなデータベースの抽象化を使うことができます。</target>
        </trans-unit>
        <trans-unit id="cc9a56db05a59cade262414e414bdb58ff701b90" translate="yes" xml:space="preserve">
          <source>No, PHPUnit requires all database objects to be available when the suite is started. The Database, tables, sequences, triggers and views have to be created before you run the test suite.</source>
          <target state="translated">いいえ、PHPUnit は、スイートの起動時にすべてのデータベースオブジェクトが利用可能である必要があります。データベース、テーブル、シーケンス、トリガー、ビューを作成してからテストスイートを実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="a2b90307b2c5b85bd86677d29a6c59a8c105547f" translate="yes" xml:space="preserve">
          <source>Not all tests can be run in every environment. Consider, for instance, a database abstraction layer that has several drivers for the different database systems it supports. The tests for the MySQL driver can of course only be run if a MySQL server is available.</source>
          <target state="translated">すべてのテストをすべての環境で実行できるわけではありません。例えば、サポートしている異なるデータベースシステム用の複数のドライバを持つデータベース抽象化レイヤを考えてみましょう。MySQL ドライバのテストは、もちろん MySQL サーバが利用可能な場合にのみ実行できます。</target>
        </trans-unit>
        <trans-unit id="d1317169e78545dd95082d40e97e5c40688dfef5" translate="yes" xml:space="preserve">
          <source>Not all tests can be run in every environment. Consider, for instance, a database abstraction layer that has several drivers for the different database systems it supports. The tests for the MySQL driver can only be run if a MySQL server is available.</source>
          <target state="translated">すべてのテストをすべての環境で実行できるわけではありません。例えば、サポートしているさまざまなデータベースシステムに対応した複数のドライバを持つデータベース抽象化レイヤを考えてみましょう。MySQL ドライバのテストは、MySQL サーバが利用可能な場合にのみ実行できます。</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="02b74cfdc96a2867073a8f8c85b54723dc79eaba" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;expectExceptionMessage()&lt;/code&gt; asserts that the &lt;code&gt;$actual&lt;/code&gt; message contains the &lt;code&gt;$expected&lt;/code&gt; message and does not perform an exact string comparison.</source>
          <target state="translated">&lt;code&gt;expectExceptionMessage()&lt;/code&gt; は、 &lt;code&gt;$actual&lt;/code&gt; メッセージに &lt;code&gt;$expected&lt;/code&gt; メッセージが含まれていることを表明し、正確な文字列比較を実行しないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="6f18258ff587bb762420d05f4d4ccf0c2c9f2a78" translate="yes" xml:space="preserve">
          <source>Now we have received a public key for an entity known as &quot;Sebastian Bergmann &amp;lt;sb@sebastian-bergmann.de&amp;gt;&quot;. However, we have no way of verifying this key was created by the person known as Sebastian Bergmann. But, let's try to verify the release signature again.</source>
          <target state="translated">これで、 &quot;Sebastian Bergmann &amp;lt;sb@sebastian-bergmann.de&amp;gt;&quot;というエンティティの公開鍵を受け取りました。ただし、このキーがSebastian Bergmannと呼ばれる人物によって作成されたことを確認する方法はありません。ただし、リリース署名をもう一度確認してみましょう。</target>
        </trans-unit>
        <trans-unit id="302a6063bf3e3040066d1f24debdf7c100096e38" translate="yes" xml:space="preserve">
          <source>Now we have received a public key for an entity known as &amp;ldquo;Sebastian Bergmann &amp;lt;&lt;a href=&quot;mailto:sb%40sebastian-bergmann.de&quot;&gt;sb@sebastian-bergmann.de&lt;/a&gt;&amp;gt;&amp;rdquo;. However, we have no way of verifying this key was created by the person known as Sebastian Bergmann. But, let&amp;rsquo;s try to verify the release signature again.</source>
          <target state="translated">これで、「Sebastian Bergmann &amp;lt; &lt;a href=&quot;mailto:sb%40sebastian-bergmann.de&quot;&gt;sb@sebastian-bergmann.de&lt;/a&gt; &amp;gt;」というエンティティの公開鍵を受け取りました。ただし、このキーがSebastianBergmannとして知られている人物によって作成されたことを確認する方法はありません。ただし、リリース署名をもう一度確認してみましょう。</target>
        </trans-unit>
        <trans-unit id="0e739b615539f89d64a9ebca10039c09a3635d5c" translate="yes" xml:space="preserve">
          <source>Now we have to write the &lt;em&gt;expectedBook.xml&lt;/em&gt; Flat XML file for this assertion:</source>
          <target state="translated">次に、このアサーション用の&lt;em&gt;expectedBook.xml&lt;/em&gt;フラットXMLファイルを記述する必要があります：</target>
        </trans-unit>
        <trans-unit id="934a05bfd7e02cb96be24c39e10595689188cb24" translate="yes" xml:space="preserve">
          <source>Objects of some classes (e.g., &lt;code&gt;PDO&lt;/code&gt;) cannot be serialized and the backup operation will break when such an object is stored e.g. in the &lt;code&gt;$GLOBALS&lt;/code&gt; array.</source>
          <target state="translated">一部のクラス（ &lt;code&gt;PDO&lt;/code&gt; など）のオブジェクトはシリアル化できず、そのようなオブジェクトが &lt;code&gt;$GLOBALS&lt;/code&gt; 配列などに格納されている場合、バックアップ操作は中断します。</target>
        </trans-unit>
        <trans-unit id="977a2dd8b93738347b2ceac837b2b373064723a2" translate="yes" xml:space="preserve">
          <source>Once you get used to writing automated tests, you will likely discover more uses for tests. Here are some examples.</source>
          <target state="translated">自動テストを書くことに慣れてくると、テストの用途がもっと増えるでしょう。ここではいくつかの例を紹介します。</target>
        </trans-unit>
        <trans-unit id="94d0f9b6abbef8485d14875215a50c0a31c5c1b9" translate="yes" xml:space="preserve">
          <source>One of the goals of PHPUnit is that tests should be composable: we want to be able to run any number or combination of tests together, for instance all tests for the whole project, or the tests for all classes of a component that is part of the project, or just the tests for a single class.</source>
          <target state="translated">たとえば、プロジェクト全体のすべてのテストを実行したり、 プロジェクトに含まれるコンポーネントのすべてのクラスのテストを実行したり、 あるいはひとつのクラスのテストだけを実行したりといった具合に、 テストをいくつでも組み合わせて実行できるようにしたいのです。</target>
        </trans-unit>
        <trans-unit id="f6aa24334bfb11b6919d07c1533ad334a8eaa7cd" translate="yes" xml:space="preserve">
          <source>One of the most time-consuming parts of writing tests is writing the code to set the world up in a known state and then return it to its original state when the test is complete. This known state is called the &lt;em&gt;fixture&lt;/em&gt; of the test.</source>
          <target state="translated">テストの記述で最も時間がかかる部分の1つは、コードを記述して世界を既知の状態に設定し、テストが完了すると元の状態に戻すことです。この既知の状態は、テストの&lt;em&gt;フィクスチャ&lt;/em&gt;と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="3785473c2e417009fcc8adf2345e2c232c1b6106" translate="yes" xml:space="preserve">
          <source>Only mock objects generated within the scope of a test will be verified automatically by PHPUnit. Mock objects generated in data providers, for instance, or injected into the test using the &lt;code&gt;@depends&lt;/code&gt; annotation will not be verified automatically by PHPUnit.</source>
          <target state="translated">テストのスコープ内で生成されたモックオブジェクトのみが、PHPUnitによって自動的に検証されます。たとえば、データプロバイダーで生成された、または &lt;code&gt;@depends&lt;/code&gt; アノテーションを使用してテストに注入されたモックオブジェクトは、PHPUnitによって自動的に検証されません。</target>
        </trans-unit>
        <trans-unit id="07d6453ac923f01ee84bea30b298d0c67564330e" translate="yes" xml:space="preserve">
          <source>Only runs tests from the specified group(s). A test can be tagged as belonging to a group using the &lt;code&gt;@group&lt;/code&gt; annotation.</source>
          <target state="translated">指定したグループのテストのみを実行します。 &lt;code&gt;@group&lt;/code&gt; アノテーションを使用して、テストをグループに属するものとしてタグ付けできます。</target>
        </trans-unit>
        <trans-unit id="55778e6fd904e3673a84e3bfae8be1fb0687d70c" translate="yes" xml:space="preserve">
          <source>Only runs tests whose name matches the given regular expression pattern. If the pattern is not enclosed in delimiters, PHPUnit will enclose the pattern in &lt;code&gt;/&lt;/code&gt; delimiters.</source>
          <target state="translated">指定された正規表現パターンに名前が一致するテストのみを実行します。パターンが区切り文字で囲まれていない場合、PHPUnitはパターンを &lt;code&gt;/&lt;/code&gt; 区切り文字で囲みます。</target>
        </trans-unit>
        <trans-unit id="63690d34b7f9e1463eabfc40418e8059caa98c67" translate="yes" xml:space="preserve">
          <source>Only runs the test suite whose name matches the given pattern.</source>
          <target state="translated">名前が指定されたパターンと一致するテストスイートのみを実行します。</target>
        </trans-unit>
        <trans-unit id="7bcc398b4cfdc6466f7524bf87377284eec34f49" translate="yes" xml:space="preserve">
          <source>Only search for test files with specified suffix(es).</source>
          <target state="translated">指定されたサフィックスを持つテストファイルのみを検索します。</target>
        </trans-unit>
        <trans-unit id="0e2a157c1af6da51b45ec5dae657d1b3806d67fc" translate="yes" xml:space="preserve">
          <source>Opcode Coverage</source>
          <target state="translated">オペコードカバレッジ</target>
        </trans-unit>
        <trans-unit id="b48bd1fbcc22a896d98ad77f3a741b6b8b452f61" translate="yes" xml:space="preserve">
          <source>Open a command line (e.g., press &lt;strong&gt;Windows&lt;/strong&gt;+&lt;strong&gt;R&lt;/strong&gt; &amp;raquo; type &lt;strong&gt;&lt;code&gt;cmd&lt;/code&gt;&lt;/strong&gt; &amp;raquo; &lt;strong&gt;ENTER&lt;/strong&gt;)</source>
          <target state="translated">コマンドラインを開きます（たとえば、&lt;strong&gt;Windows&lt;/strong&gt; + &lt;strong&gt;Rを&lt;/strong&gt;押し&lt;strong&gt;ます&lt;/strong&gt; &amp;raquo; &lt;strong&gt; &lt;code&gt;cmd&lt;/code&gt; を入力&lt;/strong&gt; &amp;raquo; &lt;strong&gt;ENTER&lt;/strong&gt;）</target>
        </trans-unit>
        <trans-unit id="3fa08c21e1f16fca09ef1167d8bf4c93c5637fe8" translate="yes" xml:space="preserve">
          <source>Open a new command line and confirm that you can execute PHPUnit from any path:</source>
          <target state="translated">新しいコマンドラインを開き、どのパスからでも PHPUnit を実行できることを確認します。</target>
        </trans-unit>
        <trans-unit id="0b49469465e885468461a55e87c1951d54b869ed" translate="yes" xml:space="preserve">
          <source>Optional packages</source>
          <target state="translated">オプションパッケージ</target>
        </trans-unit>
        <trans-unit id="93eedf8db419535b067dc63bc13e46b7f9079bb7" translate="yes" xml:space="preserve">
          <source>Optionally print to &lt;code&gt;STDERR&lt;/code&gt; instead of &lt;code&gt;STDOUT&lt;/code&gt;.</source>
          <target state="translated">オプションで、 &lt;code&gt;STDOUT&lt;/code&gt; ではなく &lt;code&gt;STDERR&lt;/code&gt; に出力します。</target>
        </trans-unit>
        <trans-unit id="e6a354dd4daa36d8bed8f1f0b56e3ea067509163" translate="yes" xml:space="preserve">
          <source>Optionally, all whitelisted files can be added to the code coverage report by setting &lt;code&gt;addUncoveredFilesFromWhitelist=&quot;true&quot;&lt;/code&gt; in your PHPUnit configuration (see &lt;a href=&quot;appendixes.configuration#appendixes.configuration.whitelisting-files&quot;&gt;the section called &amp;ldquo;Whitelisting Files for Code Coverage&amp;rdquo;&lt;/a&gt;). This allows the inclusion of files that are not tested yet at all. If you want to get information about which lines of such an uncovered file are executable, for instance, you also need to set &lt;code&gt;processUncoveredFilesFromWhitelist=&quot;true&quot;&lt;/code&gt; in your PHPUnit configuration (see &lt;a href=&quot;appendixes.configuration#appendixes.configuration.whitelisting-files&quot;&gt;the section called &amp;ldquo;Whitelisting Files for Code Coverage&amp;rdquo;&lt;/a&gt;).</source>
          <target state="translated">オプションで、PHPUnit構成で &lt;code&gt;addUncoveredFilesFromWhitelist=&quot;true&quot;&lt;/code&gt; を設定することにより、ホワイトリストに登録されたすべてのファイルをコードカバレッジレポートに追加できます（&lt;a href=&quot;appendixes.configuration#appendixes.configuration.whitelisting-files&quot;&gt;「コードカバレッジ用のファイルのホワイトリスト登録」を&lt;/a&gt;参照）。これにより、まだテストされていないファイルを含めることができます。たとえば、そのようなカバーされていないファイルのどの行が実行可能であるかについての情報を取得したい場合は、PHPUnit構成で &lt;code&gt;processUncoveredFilesFromWhitelist=&quot;true&quot;&lt;/code&gt; を設定する必要もあります（&lt;a href=&quot;appendixes.configuration#appendixes.configuration.whitelisting-files&quot;&gt;「コードカバレッジ用のファイルのホワイトリスト」を&lt;/a&gt;参照）</target>
        </trans-unit>
        <trans-unit id="aedce62afc39c753c6d4febed491f439e356aa0d" translate="yes" xml:space="preserve">
          <source>Organizing Tests</source>
          <target state="translated">試験の整理</target>
        </trans-unit>
        <trans-unit id="11fb3c6f3266acb304814fc7de555028d0cd4e0b" translate="yes" xml:space="preserve">
          <source>Other Uses for Tests</source>
          <target state="translated">テストのその他の用途</target>
        </trans-unit>
        <trans-unit id="4feb618a89e34dd77a913063ec353aa76de81daa" translate="yes" xml:space="preserve">
          <source>Output During Test Execution</source>
          <target state="translated">テスト実行中の出力</target>
        </trans-unit>
        <trans-unit id="e8b0d7d3a8310982775ef561d75edeab3c4e3ebe" translate="yes" xml:space="preserve">
          <source>Output debug information such as the name of a test when its execution starts.</source>
          <target state="translated">実行開始時にテスト名などのデバッグ情報を出力します。</target>
        </trans-unit>
        <trans-unit id="ac22e97935e58a934e761573bd1553610da608d5" translate="yes" xml:space="preserve">
          <source>Output more verbose information, for instance the names of tests that were incomplete or have been skipped.</source>
          <target state="translated">不完全なテストやスキップされたテストの名前など、より詳細な情報を出力します。</target>
        </trans-unit>
        <trans-unit id="acfed08e09bba7e326e398b851412548479c3579" translate="yes" xml:space="preserve">
          <source>Overall, integrated unit testing makes the cost and risk of any individual change smaller. It will allow the project to make [...] major architectural improvements [...] quickly and confidently.</source>
          <target state="translated">全体的に、統合されたユニットテストは、個々の変更のコストとリスクを小さくします。これにより、プロジェクトは、主要なアーキテクチャの改善を迅速かつ自信を持って行うことができるようになります。</target>
        </trans-unit>
        <trans-unit id="4717dd8f5dcc1b50f1331d0b6f8035aa6e3baa8f" translate="yes" xml:space="preserve">
          <source>PHP Archive (PHAR)</source>
          <target state="translated">PHP アーカイブ (PHAR)</target>
        </trans-unit>
        <trans-unit id="764faf4bf6b2119b1d6cb008e81ff65fff16698d" translate="yes" xml:space="preserve">
          <source>PHP Arrays can obviously handle &lt;code&gt;NULL&lt;/code&gt; values.</source>
          <target state="translated">PHP配列は明らかに &lt;code&gt;NULL&lt;/code&gt; 値を処理できます。</target>
        </trans-unit>
        <trans-unit id="56b0142d37c776dfefed44f494060fb9bc0d52af" translate="yes" xml:space="preserve">
          <source>PHP&amp;rsquo;s &lt;code&gt;error_reporting&lt;/code&gt; runtime configuration can limit which errors PHPUnit will convert to exceptions. If you are having issues with this feature, be sure PHP is not configured to suppress the type of error you are interested in.</source>
          <target state="translated">PHPの &lt;code&gt;error_reporting&lt;/code&gt; ランタイム構成は、PHPUnitが例外に変換するエラーを制限できます。この機能で問題が発生した場合は、関心のあるタイプのエラーを抑制するようにPHPが構成されていないことを確認してください。</target>
        </trans-unit>
        <trans-unit id="e9cd1c53eff46a933eb5f52645a29cabbaeab710" translate="yes" xml:space="preserve">
          <source>PHP's &lt;code&gt;error_reporting&lt;/code&gt; runtime configuration can limit which errors PHPUnit will convert to exceptions. If you are having issues with this feature, be sure PHP is not configured to suppress the type of errors you're testing.</source>
          <target state="translated">PHPの &lt;code&gt;error_reporting&lt;/code&gt; ランタイム構成により、PHPUnitが例外に変換するエラーを制限できます。この機能で問題が発生している場合は、テストするエラーの種類を抑制するようにPHPが構成されていないことを確認してください。</target>
        </trans-unit>
        <trans-unit id="4d5496118db6229e0d92fed1f34901c2df580a1a" translate="yes" xml:space="preserve">
          <source>PHPUnit</source>
          <target state="translated">PHPUnit</target>
        </trans-unit>
        <trans-unit id="47af5b3ac5246a1d0d93deff7752d5a3978fd7d8" translate="yes" xml:space="preserve">
          <source>PHPUnit 6.5 requires PHP 7; using the latest version of PHP is highly recommended.</source>
          <target state="translated">PHPUnit 6.5 は PHP 7 を必要とします。</target>
        </trans-unit>
        <trans-unit id="5b5daf01ab4a0c62a950fa31fadcc69df616e5a6" translate="yes" xml:space="preserve">
          <source>PHPUnit 9.5 requires PHP 7.3; using the latest version of PHP is highly recommended.</source>
          <target state="translated">PHPUnit 9.5 は PHP 7.3 を必要とします。</target>
        </trans-unit>
        <trans-unit id="512692343f51cf159d3403438dcc74d047ffce99" translate="yes" xml:space="preserve">
          <source>PHPUnit Manual</source>
          <target state="translated">PHPUnit マニュアル</target>
        </trans-unit>
        <trans-unit id="84db6c858fc1bf84fbdeb4f0e9d08d271b7892bd" translate="yes" xml:space="preserve">
          <source>PHPUnit also requires the &lt;a href=&quot;http://php.net/manual/en/pcre.installation.php&quot;&gt;pcre&lt;/a&gt;, &lt;a href=&quot;http://php.net/manual/en/reflection.installation.php&quot;&gt;reflection&lt;/a&gt;, and &lt;a href=&quot;http://php.net/manual/en/spl.installation.php&quot;&gt;spl&lt;/a&gt; extensions. These standard extensions are enabled by default and cannot be disabled without patching PHP&amp;rsquo;s build system and/or C sources.</source>
          <target state="translated">PHPUnitには、&lt;a href=&quot;http://php.net/manual/en/pcre.installation.php&quot;&gt;pcre&lt;/a&gt;、&lt;a href=&quot;http://php.net/manual/en/reflection.installation.php&quot;&gt;reflection&lt;/a&gt;、および&lt;a href=&quot;http://php.net/manual/en/spl.installation.php&quot;&gt;spl&lt;/a&gt;拡張機能も必要です。これらの標準拡張機能はデフォルトで有効になっており、PHPのビルドシステムやCソースにパッチを適用せずに無効にすることはできません。</target>
        </trans-unit>
        <trans-unit id="992bb499e1d5a191503e3acc232859347d5cd1a6" translate="yes" xml:space="preserve">
          <source>PHPUnit also requires the &lt;a href=&quot;http://php.net/manual/en/pcre.installation.php&quot;&gt;pcre&lt;/a&gt;, &lt;a href=&quot;http://php.net/manual/en/reflection.installation.php&quot;&gt;reflection&lt;/a&gt;, and &lt;a href=&quot;http://php.net/manual/en/spl.installation.php&quot;&gt;spl&lt;/a&gt; extensions. These standard extensions are enabled by default and cannot be disabled without patching PHP's build system and/or C sources.</source>
          <target state="translated">PHPUnitには、&lt;a href=&quot;http://php.net/manual/en/pcre.installation.php&quot;&gt;pcre&lt;/a&gt;、&lt;a href=&quot;http://php.net/manual/en/reflection.installation.php&quot;&gt;reflection&lt;/a&gt;、&lt;a href=&quot;http://php.net/manual/en/spl.installation.php&quot;&gt;spl&lt;/a&gt;拡張も必要です。これらの標準拡張機能はデフォルトで有効になっており、PHPのビルドシステムやCソースにパッチを適用せずに無効にすることはできません。</target>
        </trans-unit>
        <trans-unit id="49f9cc016f91ee80263973d6726c7b6dea9f76b5" translate="yes" xml:space="preserve">
          <source>PHPUnit assumes that the database schema with all its tables, triggers, sequences and views is created before a test is run. This means you as developer have to make sure that the database is correctly setup before running the suite.</source>
          <target state="translated">PHPUnit は、テストを実行する前にデータベースのスキーマとそのテーブル、 トリガー、シーケンス、ビューをすべて作成していることを前提としています。つまり、開発者はこのスイートを実行する前にデータベースが正しく設定されていることを確認しなければなりません。</target>
        </trans-unit>
        <trans-unit id="8594c49b19d010ef897e2f081751f61f599cc069" translate="yes" xml:space="preserve">
          <source>PHPUnit can be extended in various ways to make the writing of tests easier and customize the feedback you get from running tests. Here are common starting points to extend PHPUnit.</source>
          <target state="translated">PHPUnit は、さまざまな方法で拡張することができます。 テストの書き方を簡単にしたり、テストを実行したときのフィードバックをカスタマイズしたりすることができます。PHPUnit を拡張するための共通の出発点は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="b8126fb16757e1d8b03a7ba887314a3bc6f1e3fa" translate="yes" xml:space="preserve">
          <source>PHPUnit can be strict about output during tests. This check can be enabled by using the &lt;code&gt;--disallow-test-output&lt;/code&gt; option on the &lt;a href=&quot;textui#textui-clioptions&quot;&gt;command line&lt;/a&gt; or by setting &lt;code&gt;beStrictAboutOutputDuringTests=&quot;true&quot;&lt;/code&gt; in PHPUnit&amp;rsquo;s &lt;a href=&quot;configuration#appendixes-configuration&quot;&gt;configuration file&lt;/a&gt;.</source>
          <target state="translated">PHPUnitは、テスト中の出力について厳密にすることができます。このチェックは、&lt;a href=&quot;textui#textui-clioptions&quot;&gt;コマンドラインで&lt;/a&gt; &lt;code&gt;--disallow-test-output&lt;/code&gt; オプションを使用するか、PHPUnitの&lt;a href=&quot;configuration#appendixes-configuration&quot;&gt;構成ファイル&lt;/a&gt;で &lt;code&gt;beStrictAboutOutputDuringTests=&quot;true&quot;&lt;/code&gt; を設定することで有効にできます。</target>
        </trans-unit>
        <trans-unit id="8fc11ccb5655256bf345f33ea0ad2cfd1e06c9ba" translate="yes" xml:space="preserve">
          <source>PHPUnit can be strict about output during tests. This check can be enabled by using the &lt;code&gt;--disallow-test-output&lt;/code&gt; option on the commandline or by setting &lt;code&gt;beStrictAboutOutputDuringTests=&quot;true&quot;&lt;/code&gt; in PHPUnit's XML configuration file.</source>
          <target state="translated">PHPUnitは、テスト中の出力を厳密にすることができます。このチェックを有効にするには、コマンドラインで &lt;code&gt;--disallow-test-output&lt;/code&gt; オプションを使用するか、PHPUnitのXML設定ファイルで &lt;code&gt;beStrictAboutOutputDuringTests=&quot;true&quot;&lt;/code&gt; を設定します。</target>
        </trans-unit>
        <trans-unit id="efd9237e6e3e36412a2ebcb13fbf8ed0b8137bb3" translate="yes" xml:space="preserve">
          <source>PHPUnit can be strict about tests that do not test anything. This check can be enabled by using the &lt;code&gt;--report-useless-tests&lt;/code&gt; option on the commandline or by setting &lt;code&gt;beStrictAboutTestsThatDoNotTestAnything=&quot;true&quot;&lt;/code&gt; in PHPUnit's XML configuration file.</source>
          <target state="translated">PHPUnitは、何もテストしないテストを厳密にすることができます。このチェックを有効にするには、コマンドラインで &lt;code&gt;--report-useless-tests&lt;/code&gt; オプションを使用するか、PHPUnitのXML構成ファイルで &lt;code&gt;beStrictAboutTestsThatDoNotTestAnything=&quot;true&quot;&lt;/code&gt; を設定します。</target>
        </trans-unit>
        <trans-unit id="c02bf9b7be3d91ac4e60e6ca3d9b6b83a58885d8" translate="yes" xml:space="preserve">
          <source>PHPUnit can be strict about tests that manipulate global state. This check can be enabled by using the &lt;code&gt;--strict-global-state&lt;/code&gt; option on the &lt;a href=&quot;textui#textui-clioptions&quot;&gt;command line&lt;/a&gt; or by setting &lt;code&gt;beStrictAboutChangesToGlobalState=&quot;true&quot;&lt;/code&gt; in PHPUnit&amp;rsquo;s &lt;a href=&quot;configuration#appendixes-configuration&quot;&gt;configuration file&lt;/a&gt;.</source>
          <target state="translated">PHPUnitは、グローバル状態を操作するテストについて厳密にすることができます。このチェックは、&lt;a href=&quot;textui#textui-clioptions&quot;&gt;コマンドラインで&lt;/a&gt; &lt;code&gt;--strict-global-state&lt;/code&gt; オプションを使用するか、PHPUnitの&lt;a href=&quot;configuration#appendixes-configuration&quot;&gt;構成ファイル&lt;/a&gt;で &lt;code&gt;beStrictAboutChangesToGlobalState=&quot;true&quot;&lt;/code&gt; を設定することで有効にできます。</target>
        </trans-unit>
        <trans-unit id="9fda123a31a241b7f985e26c0537929b335f0812" translate="yes" xml:space="preserve">
          <source>PHPUnit can be strict about tests that manipulate global state. This check can be enabled by using the &lt;code&gt;--strict-global-state&lt;/code&gt; option on the commandline or by setting &lt;code&gt;beStrictAboutChangesToGlobalState=&quot;true&quot;&lt;/code&gt; in PHPUnit's XML configuration file.</source>
          <target state="translated">PHPUnitは、グローバルな状態を操作するテストに厳密である場合があります。このチェックを有効にするには、コマンドラインで &lt;code&gt;--strict-global-state&lt;/code&gt; オプションを使用するか、PHPUnitのXML構成ファイルで &lt;code&gt;beStrictAboutChangesToGlobalState=&quot;true&quot;&lt;/code&gt; を設定します。</target>
        </trans-unit>
        <trans-unit id="d3df8f453b0b1e78f98f12d29de4ee61206276bf" translate="yes" xml:space="preserve">
          <source>PHPUnit can be strict about unintentionally covered code. This check can be enabled by using the &lt;code&gt;--strict-coverage&lt;/code&gt; option on the &lt;a href=&quot;textui#textui-clioptions&quot;&gt;command line&lt;/a&gt; or by setting &lt;code&gt;beStrictAboutCoversAnnotation=&quot;true&quot;&lt;/code&gt; in PHPUnit&amp;rsquo;s &lt;a href=&quot;configuration#appendixes-configuration&quot;&gt;configuration file&lt;/a&gt;.</source>
          <target state="translated">PHPUnitは、意図せずにカバーされたコードについて厳密にすることができます。このチェックは、&lt;a href=&quot;textui#textui-clioptions&quot;&gt;コマンドラインで&lt;/a&gt; &lt;code&gt;--strict-coverage&lt;/code&gt; オプションを使用するか、PHPUnitの&lt;a href=&quot;configuration#appendixes-configuration&quot;&gt;構成ファイル&lt;/a&gt;で &lt;code&gt;beStrictAboutCoversAnnotation=&quot;true&quot;&lt;/code&gt; を設定することで有効にできます。</target>
        </trans-unit>
        <trans-unit id="c2fdb7d9e3a7db699728f83d0afcce3d4c3b9254" translate="yes" xml:space="preserve">
          <source>PHPUnit can be strict about unintentionally covered code. This check can be enabled by using the &lt;code&gt;--strict-coverage&lt;/code&gt; option on the commandline or by setting &lt;code&gt;checkForUnintentionallyCoveredCode=&quot;true&quot;&lt;/code&gt; in PHPUnit's XML configuration file.</source>
          <target state="translated">PHPUnitは、意図せずにカバーされたコードに厳密である可能性があります。このチェックを有効にするには、コマンドラインで &lt;code&gt;--strict-coverage&lt;/code&gt; オプションを使用するか、PHPUnitのXML構成ファイルで &lt;code&gt;checkForUnintentionallyCoveredCode=&quot;true&quot;&lt;/code&gt; を設定します。</target>
        </trans-unit>
        <trans-unit id="4b19978e96fe381e362a6d6086a674d932b1b9aa" translate="yes" xml:space="preserve">
          <source>PHPUnit can generate an HTML-based code coverage report as well as XML-based logfiles with code coverage information in various formats (Clover, Crap4J, PHPUnit). Code coverage information can also be reported as text (and printed to STDOUT) and exported as PHP code for further processing.</source>
          <target state="translated">PHPUnit は、HTML ベースのコードカバレッジレポートや XML ベースのログファイルを生成し、 コードカバレッジ情報をさまざまな形式 (Clover,Crap4J,PHPUnit)で出力することができます。コードカバレッジ情報は、テキストで報告したり (STDOUT に出力したり)、 PHP コードとしてエクスポートして処理することもできます。</target>
        </trans-unit>
        <trans-unit id="42100b59815e56cf993a9b667aadefd97d791e0f" translate="yes" xml:space="preserve">
          <source>PHPUnit can optionally backup all global and super-global variables before each test and restore this backup after each test.</source>
          <target state="translated">PHPUnit は、オプションで各テストの前にグローバル変数およびスーパーグローバル変数をすべてバックアップし、 テスト後にバックアップを復元することができます。</target>
        </trans-unit>
        <trans-unit id="7f8db6b699cc6ffeab218229462d9dfd935f148e" translate="yes" xml:space="preserve">
          <source>PHPUnit can optionally backup all static attributes in all declared classes before each test and restore this backup after each test.</source>
          <target state="translated">PHPUnit は、テストの前にすべての宣言済みクラスの静的属性をバックアップし、 テストの後にバックアップを復元することができます。</target>
        </trans-unit>
        <trans-unit id="b60ac4b3e6abda0fb0b33ae8b62675bbcfba6d53" translate="yes" xml:space="preserve">
          <source>PHPUnit can perform the additional checks documented below while it executes the tests.</source>
          <target state="translated">PHPUnit は、テストを実行している間に以下に示す追加のチェックを行うことができます。</target>
        </trans-unit>
        <trans-unit id="ecb8675789febf27cbd002a388bcb0d4b15c7e2f" translate="yes" xml:space="preserve">
          <source>PHPUnit can produce several types of logfiles.</source>
          <target state="translated">PHPUnit は、いくつかの種類のログファイルを作成することができます。</target>
        </trans-unit>
        <trans-unit id="13d7aa477a15e4b4b96b7e12126c6a1df41d9932" translate="yes" xml:space="preserve">
          <source>PHPUnit distinguishes between &lt;em&gt;failures&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt;. A failure is a violated PHPUnit assertion such as a failing &lt;code&gt;assertEquals()&lt;/code&gt; call. An error is an unexpected exception or a PHP error. Sometimes this distinction proves useful since errors tend to be easier to fix than failures. If you have a big list of problems, it is best to tackle the errors first and see if you have any failures left when they are all fixed.</source>
          <target state="translated">PHPUnitは、&lt;em&gt;失敗&lt;/em&gt;と&lt;em&gt;エラーを&lt;/em&gt;区別します。失敗は、失敗した &lt;code&gt;assertEquals()&lt;/code&gt; 呼び出しなどの違反したPHPUnitアサーションです。エラーは、予期しない例外またはPHPエラーです。エラーは失敗より修正が簡単な傾向があるため、この区別が役立つ場合があります。問題の大きなリストがある場合は、最初にエラーに取り組み、すべてが修正されたときにエラーが残っているかどうかを確認することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="3deaf19154fa9055545119d0dabc01a6deed21bd" translate="yes" xml:space="preserve">
          <source>PHPUnit distinguishes between &lt;em&gt;failures&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt;. A failure is a violated PHPUnit assertion such as a failing &lt;code&gt;assertSame()&lt;/code&gt; call. An error is an unexpected exception or a PHP error. Sometimes this distinction proves useful since errors tend to be easier to fix than failures. If you have a big list of problems, it is best to tackle the errors first and see if you have any failures left when they are all fixed.</source>
          <target state="translated">PHPUnitは、&lt;em&gt;失敗&lt;/em&gt;と&lt;em&gt;エラーを&lt;/em&gt;区別します。失敗は、 &lt;code&gt;assertSame()&lt;/code&gt; 呼び出しの失敗など、違反したPHPUnitアサーションです。エラーは、予期しない例外またはPHPエラーです。エラーは失敗よりも修正しやすい傾向があるため、この区別が役立つ場合があります。問題のリストが大きい場合は、最初にエラーに取り組み、すべて修正されたときに障害が残っているかどうかを確認することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="ad7812a3d505b57601956afc9b0cad78cc287161" translate="yes" xml:space="preserve">
          <source>PHPUnit has built-in support for using Prophecy to create test doubles. &lt;a href=&quot;test-doubles#test-doubles.prophecy.examples.SubjectTest.php&quot;&gt;Example 9.17&lt;/a&gt; shows how the same test shown in &lt;a href=&quot;test-doubles#test-doubles.mock-objects.examples.SubjectTest.php&quot;&gt;Example 9.11&lt;/a&gt; can be expressed using Prophecy's philosophy of prophecies and revelations:</source>
          <target state="translated">PHPUnitには、Prophecyを使用してテストdoubleを作成するための組み込みサポートがあります。&lt;a href=&quot;test-doubles#test-doubles.prophecy.examples.SubjectTest.php&quot;&gt;例9.17&lt;/a&gt;は、&lt;a href=&quot;test-doubles#test-doubles.mock-objects.examples.SubjectTest.php&quot;&gt;例9.11&lt;/a&gt;と同じテストを、預言と啓示のProphecyの哲学を使用してどのように表現できるかを示しています。</target>
        </trans-unit>
        <trans-unit id="3579642f826e7959becaf7566fa4f98ff641f8cf" translate="yes" xml:space="preserve">
          <source>PHPUnit is a framework for writing as well as a commandline tool for running tests. Writing and running tests is a development-time activity. There is no reason why PHPUnit should be installed on a webserver.</source>
          <target state="translated">PHPUnit は、テストを書くためのフレームワークであり、 テストを実行するためのコマンドラインツールでもあります。テストを書いたり実行したりすることは、開発時の作業です。PHPUnit をウェブサーバにインストールする理由はありません。</target>
        </trans-unit>
        <trans-unit id="ce3849f7bdc83cb1c356f89ac66469aea0bb4568" translate="yes" xml:space="preserve">
          <source>PHPUnit is by default strict about tests that do not test anything. This check can be disabled by using the &lt;code&gt;--dont-report-useless-tests&lt;/code&gt; option on the &lt;a href=&quot;textui#textui-clioptions&quot;&gt;command line&lt;/a&gt; or by setting &lt;code&gt;beStrictAboutTestsThatDoNotTestAnything=&quot;false&quot;&lt;/code&gt; in PHPUnit&amp;rsquo;s &lt;a href=&quot;configuration#appendixes-configuration&quot;&gt;configuration file&lt;/a&gt;.</source>
          <target state="translated">PHPUnitはデフォルトで、何もテストしないテストに対して厳密です。このチェックは、&lt;a href=&quot;textui#textui-clioptions&quot;&gt;コマンドラインで&lt;/a&gt; &lt;code&gt;--dont-report-useless-tests&lt;/code&gt; オプションを使用するか、PHPUnitの&lt;a href=&quot;configuration#appendixes-configuration&quot;&gt;構成ファイル&lt;/a&gt;で &lt;code&gt;beStrictAboutTestsThatDoNotTestAnything=&quot;false&quot;&lt;/code&gt; を設定することで無効にできます。</target>
        </trans-unit>
        <trans-unit id="3f9bb1f8cfbaa25bdfaaa7032eb1276fe1623ca4" translate="yes" xml:space="preserve">
          <source>PHPUnit requires the &lt;a href=&quot;http://php.net/manual/en/dom.setup.php&quot;&gt;dom&lt;/a&gt; and &lt;a href=&quot;http://php.net/manual/en/json.installation.php&quot;&gt;json&lt;/a&gt; extensions, which are normally enabled by default.</source>
          <target state="translated">PHPUnitには&lt;a href=&quot;http://php.net/manual/en/dom.setup.php&quot;&gt;dom&lt;/a&gt;および&lt;a href=&quot;http://php.net/manual/en/json.installation.php&quot;&gt;json&lt;/a&gt;拡張機能が必要です。これらは通常、デフォルトで有効になっています。</target>
        </trans-unit>
        <trans-unit id="5e4843be44169e2be99b8274cd80bb04fade4208" translate="yes" xml:space="preserve">
          <source>PHPUnit ships with one concrete test decorator: &lt;code&gt;PHPUnit_Extensions_RepeatedTest&lt;/code&gt;. It is used to run a test repeatedly and only count it as a success if all iterations are successful.</source>
          <target state="translated">PHPUnitには、1つの具象テストデコレーター &lt;code&gt;PHPUnit_Extensions_RepeatedTest&lt;/code&gt; が同梱されています。これは、テストを繰り返し実行し、すべての反復が成功した場合にのみ成功としてカウントするために使用されます。</target>
        </trans-unit>
        <trans-unit id="d73279acefc705840d31280dc94ebfe8b9021b58" translate="yes" xml:space="preserve">
          <source>PHPUnit supports different ways of organizing tests and composing them into a test suite. This chapter shows the most commonly used approaches.</source>
          <target state="translated">PHPUnit は、テストを整理してテストスイートにまとめる方法をいろいろとサポートしています。この章では、最もよく使われる方法を紹介します。</target>
        </trans-unit>
        <trans-unit id="e66b75ac2c64c2bd5a57fa295a45b239cadd72f6" translate="yes" xml:space="preserve">
          <source>PHPUnit supports sharing the setup code. Before a test method is run, a template method called &lt;code&gt;setUp()&lt;/code&gt; is invoked. &lt;code&gt;setUp()&lt;/code&gt; is where you create the objects against which you will test. Once the test method has finished running, whether it succeeded or failed, another template method called &lt;code&gt;tearDown()&lt;/code&gt; is invoked. &lt;code&gt;tearDown()&lt;/code&gt; is where you clean up the objects against which you tested.</source>
          <target state="translated">PHPUnitは、セットアップコードの共有をサポートしています。テストメソッドが実行される前に、 &lt;code&gt;setUp()&lt;/code&gt; というテンプレートメソッドが呼び出されます。 &lt;code&gt;setUp()&lt;/code&gt; は、テストするオブジェクトを作成する場所です。テストメソッドの実行が完了すると、成功したか失敗したかにかかわらず、 &lt;code&gt;tearDown()&lt;/code&gt; という別のテンプレートメソッドが呼び出されます。 &lt;code&gt;tearDown()&lt;/code&gt; は、テストしたオブジェクトをクリーンアップする場所です。</target>
        </trans-unit>
        <trans-unit id="d9d368e9a2646997d15f98c01eafec9716710e0d" translate="yes" xml:space="preserve">
          <source>PHPUnit supports the declaration of explicit dependencies between test methods. Such dependencies do not define the order in which the test methods are to be executed but they allow the returning of an instance of the test fixture by a producer and passing it to the dependent consumers.</source>
          <target state="translated">PHPUnit は、テストメソッド間の明示的な依存関係の宣言をサポートしています。このような依存関係は、テストメソッドの実行順序を定義するものではありません。 プロデューサがテストフィクスチャのインスタンスを返し、 それを依存する消費者に渡すことを可能にします。</target>
        </trans-unit>
        <trans-unit id="382050e1ccd96c3d65fa1b04221d6cb2de13b970" translate="yes" xml:space="preserve">
          <source>PHPUnit supports the declaration of explicit dependencies between test methods. Such dependencies do not define the order in which the test methods are to be executed but they allow the returning of an instance of the test fixture by a producer and passing it to the dependent consumers. &lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit-examples-stacktest2-php&quot;&gt;Using the @depends annotation to express dependencies&lt;/a&gt; shows how to use the &lt;code&gt;@depends&lt;/code&gt; annotation to express dependencies between test methods.</source>
          <target state="translated">PHPUnitは、テストメソッド間の明示的な依存関係の宣言をサポートしています。このような依存関係は、テストメソッドが実行される順序を定義しませんが、プロデューサーがテストフィクスチャのインスタンスを返し、それを依存するコンシューマーに渡すことを可能にします。&lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit-examples-stacktest2-php&quot;&gt;@dependsアノテーションを使用して依存関係を表現する&lt;/a&gt;方法は、 &lt;code&gt;@depends&lt;/code&gt; アノテーションを使用してテストメソッド間の依存関係を表現する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="7036b5999c37aa3c4dcf7df35638cd63a316ba4c" translate="yes" xml:space="preserve">
          <source>PHPUnit supports the declaration of explicit dependencies between test methods. Such dependencies do not define the order in which the test methods are to be executed but they allow the returning of an instance of the test fixture by a producer and passing it to the dependent consumers. &lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.examples.StackTest2.php&quot;&gt;Example 2.2&lt;/a&gt; shows how to use the &lt;code&gt;@depends&lt;/code&gt; annotation to express dependencies between test methods.</source>
          <target state="translated">PHPUnitは、テストメソッド間の明示的な依存関係の宣言をサポートしています。このような依存関係は、テストメソッドが実行される順序を定義しませんが、プロデューサーがテストフィクスチャのインスタンスを返し、依存するコンシューマーに渡すことを許可します。&lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.examples.StackTest2.php&quot;&gt;例2.2&lt;/a&gt;は、 &lt;code&gt;@depends&lt;/code&gt; アノテーションを使用してテストメソッド間の依存関係を表現する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="30be616e52c1cae88130b3407f9ca3c5b010ecbf" translate="yes" xml:space="preserve">
          <source>PHPUnit will then iterate over all the fixture rows specified and insert them into their respective tables.</source>
          <target state="translated">PHPUnit は、指定したすべてのフィクスチャの行を反復処理してそれぞれのテーブルに挿入します。</target>
        </trans-unit>
        <trans-unit id="2dd23956efc07cdf875abba7ad9aefabfe0407ca" translate="yes" xml:space="preserve">
          <source>PHPUnit&amp;rsquo;s TestDox functionality looks at a test class and all the test method names and converts them from camel case (or snake_case) PHP names to sentences: &lt;code&gt;testBalanceIsInitiallyZero()&lt;/code&gt; (or &lt;code&gt;test_balance_is_initially_zero()&lt;/code&gt; becomes &amp;ldquo;Balance is initially zero&amp;rdquo;. If there are several test methods whose names only differ in a suffix of one or more digits, such as &lt;code&gt;testBalanceCannotBecomeNegative()&lt;/code&gt; and &lt;code&gt;testBalanceCannotBecomeNegative2()&lt;/code&gt;, the sentence &amp;ldquo;Balance cannot become negative&amp;rdquo; will appear only once, assuming that all of these tests succeed.</source>
          <target state="translated">PHPUnitのTestDox機能は、テストクラスとすべてのテストメソッド名を調べ、それらをキャメルケース（またはスネークケース）のPHP名から文に変換します &lt;code&gt;testBalanceIsInitiallyZero()&lt;/code&gt; （または &lt;code&gt;test_balance_is_initially_zero()&lt;/code&gt; は「バランスは最初はゼロ」になります。複数のテストがある場合 &lt;code&gt;testBalanceCannotBecomeNegative()&lt;/code&gt; や &lt;code&gt;testBalanceCannotBecomeNegative2()&lt;/code&gt; のように、名前が1桁以上のサフィックスのみが異なるメソッドでは、これらのテストがすべて成功したと仮定すると、「バランスを負にすることはできません」という文が1回だけ表示されます。</target>
        </trans-unit>
        <trans-unit id="16ed8b9fbdfe9c33cd579ac9679c493cbf2d06bd" translate="yes" xml:space="preserve">
          <source>PHPUnit&amp;rsquo;s XML configuration file (&lt;a href=&quot;configuration#appendixes-configuration&quot;&gt;The XML Configuration File&lt;/a&gt;) can also be used to compose a test suite. &lt;a href=&quot;#organizing-tests-xml-configuration-examples-phpunit-xml&quot;&gt;Example 5.1&lt;/a&gt; shows a minimal &lt;code&gt;phpunit.xml&lt;/code&gt; file that will add all &lt;code&gt;*Test&lt;/code&gt; classes that are found in &lt;code&gt;*Test.php&lt;/code&gt; files when the &lt;code&gt;tests&lt;/code&gt; directory is recursively traversed.</source>
          <target state="translated">PHPUnitのXML構成ファイル（&lt;a href=&quot;configuration#appendixes-configuration&quot;&gt;XML構成ファイル&lt;/a&gt;）を使用して、テストスイートを作成することもできます。&lt;a href=&quot;#organizing-tests-xml-configuration-examples-phpunit-xml&quot;&gt;例5.1&lt;/a&gt;は、 &lt;code&gt;tests&lt;/code&gt; ディレクトリが再帰的にトラバースされるときに &lt;code&gt;*Test.php&lt;/code&gt; ファイルにあるすべての &lt;code&gt;*Test&lt;/code&gt; クラスを追加する最小限の &lt;code&gt;phpunit.xml&lt;/code&gt; ファイルを示しています。</target>
        </trans-unit>
        <trans-unit id="ef0538080aada159f279a90ff4b48ea4da319a65" translate="yes" xml:space="preserve">
          <source>PHPUnit&amp;rsquo;s assertions are implemented in &lt;code&gt;PHPUnit\Framework\Assert&lt;/code&gt;. &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt; inherits from &lt;code&gt;PHPUnit\Framework\Assert&lt;/code&gt;.</source>
          <target state="translated">PHPUnitのアサーションは、 &lt;code&gt;PHPUnit\Framework\Assert&lt;/code&gt; 実装されています。 &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt; 、 &lt;code&gt;PHPUnit\Framework\Assert&lt;/code&gt; 継承します。</target>
        </trans-unit>
        <trans-unit id="b4e6fa848db2b1f2559cc836fa5da9ba820aebce" translate="yes" xml:space="preserve">
          <source>PHPUnit&amp;rsquo;s test runner can be extended by registering objects that implement one or more of the following interfaces:</source>
          <target state="translated">PHPUnitのテストランナーは、次のインターフェイスの1つ以上を実装するオブジェクトを登録することで拡張できます。</target>
        </trans-unit>
        <trans-unit id="ccaa641eb92b86295c258151a89945da47f94912" translate="yes" xml:space="preserve">
          <source>PHPUnit's TestDox functionality looks at a test class and all the test method names and converts them from camel case PHP names to sentences: &lt;code&gt;testBalanceIsInitiallyZero()&lt;/code&gt; becomes &quot;Balance is initially zero&quot;. If there are several test methods whose names only differ in a suffix of one or more digits, such as &lt;code&gt;testBalanceCannotBecomeNegative()&lt;/code&gt; and &lt;code&gt;testBalanceCannotBecomeNegative2()&lt;/code&gt;, the sentence &quot;Balance cannot become negative&quot; will appear only once, assuming that all of these tests succeed.</source>
          <target state="translated">PHPUnitのTestDox機能は、テストクラスとすべてのテストメソッド名を調べ、それらをキャメルケースのPHP名から文に変換します &lt;code&gt;testBalanceIsInitiallyZero()&lt;/code&gt; は「バランスは最初はゼロです」になります。 &lt;code&gt;testBalanceCannotBecomeNegative()&lt;/code&gt; や &lt;code&gt;testBalanceCannotBecomeNegative2()&lt;/code&gt; のように、名前が1桁以上の接尾辞のみが異なる複数のテストメソッドがある場合、これらのテストがすべて成功すると仮定して、「Balance cannot be negative」という文が1回だけ表示されます。</target>
        </trans-unit>
        <trans-unit id="b4b3896838639f9ea4c1a9e66ed41e43020e6522" translate="yes" xml:space="preserve">
          <source>PHPUnit's XML configuration file (&lt;a href=&quot;appendixes.configuration&quot;&gt;Appendix C&lt;/a&gt;) can also be used to compose a test suite. &lt;a href=&quot;organizing-tests#organizing-tests.xml-configuration.examples.phpunit.xml&quot;&gt;Example 5.1&lt;/a&gt; shows a minimal &lt;code&gt;phpunit.xml&lt;/code&gt; file that will add all &lt;code&gt;*Test&lt;/code&gt; classes that are found in &lt;code&gt;*Test.php&lt;/code&gt; files when the &lt;code&gt;tests&lt;/code&gt; directory is recursively traversed.</source>
          <target state="translated">PHPUnitのXML構成ファイル（&lt;a href=&quot;appendixes.configuration&quot;&gt;付録C&lt;/a&gt;）を使用して、テストスイートを構成することもできます。&lt;a href=&quot;organizing-tests#organizing-tests.xml-configuration.examples.phpunit.xml&quot;&gt;例5.1&lt;/a&gt;は、 &lt;code&gt;tests&lt;/code&gt; ディレクトリが再帰的にトラバースされるときに &lt;code&gt;*Test.php&lt;/code&gt; ファイルにあるすべての &lt;code&gt;*Test&lt;/code&gt; クラスを追加する最小限の &lt;code&gt;phpunit.xml&lt;/code&gt; ファイルを示しています。</target>
        </trans-unit>
        <trans-unit id="642242ac6fa7671cd1fd676ad61a21f76365acc5" translate="yes" xml:space="preserve">
          <source>PHPUnit's assertions are implemented in &lt;code&gt;PHPUnit\Framework\Assert&lt;/code&gt;. &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt; inherits from &lt;code&gt;PHPUnit\Framework\Assert&lt;/code&gt;.</source>
          <target state="translated">PHPUnitのアサーションは、 &lt;code&gt;PHPUnit\Framework\Assert&lt;/code&gt; 実装されています。 &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt; は &lt;code&gt;PHPUnit\Framework\Assert&lt;/code&gt; 継承しています。</target>
        </trans-unit>
        <trans-unit id="10c8b08404629e3bfc3eaef683dacdad13b23def" translate="yes" xml:space="preserve">
          <source>PHP_Invoker</source>
          <target state="translated">PHP_Invoker</target>
        </trans-unit>
        <trans-unit id="ae14dcfd433df221dcfe3839211be3fe2d8f236d" translate="yes" xml:space="preserve">
          <source>Parent element: &lt;code&gt;&amp;lt;coverage&amp;gt;&lt;/code&gt;</source>
          <target state="translated">親要素： &lt;code&gt;&amp;lt;coverage&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e924c37dcf7f96e3e1f3ed9a8832e8ebbea57bf2" translate="yes" xml:space="preserve">
          <source>Parent element: &lt;code&gt;&amp;lt;extension&amp;gt;&lt;/code&gt;</source>
          <target state="translated">親要素： &lt;code&gt;&amp;lt;extension&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1b62e3a4ad7ada0204c1a9aaf05b789f5866fa35" translate="yes" xml:space="preserve">
          <source>Parent element: &lt;code&gt;&amp;lt;extensions&amp;gt;&lt;/code&gt;</source>
          <target state="translated">親要素： &lt;code&gt;&amp;lt;extensions&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f34c0a007643c9dc835b8908eb2e43b1fb42d783" translate="yes" xml:space="preserve">
          <source>Parent element: &lt;code&gt;&amp;lt;listeners&amp;gt;&lt;/code&gt;</source>
          <target state="translated">親要素： &lt;code&gt;&amp;lt;listeners&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3a14604d34d3a5748ff29fce537428f69edcadc6" translate="yes" xml:space="preserve">
          <source>Parent element: &lt;code&gt;&amp;lt;logging&amp;gt;&lt;/code&gt;</source>
          <target state="translated">親要素： &lt;code&gt;&amp;lt;logging&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e0900bd4b801b3093d840cbb521085d649a496f3" translate="yes" xml:space="preserve">
          <source>Parent element: &lt;code&gt;&amp;lt;php&amp;gt;&lt;/code&gt;</source>
          <target state="translated">親要素： &lt;code&gt;&amp;lt;php&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="71130d1b747c27e772f3a6739bf521d5e3476428" translate="yes" xml:space="preserve">
          <source>Parent element: &lt;code&gt;&amp;lt;phpunit&amp;gt;&lt;/code&gt;</source>
          <target state="translated">親要素： &lt;code&gt;&amp;lt;phpunit&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cf6312dafa3ef4b79e66c699a308edade7330d2f" translate="yes" xml:space="preserve">
          <source>Parent element: &lt;code&gt;&amp;lt;report&amp;gt;&lt;/code&gt;</source>
          <target state="translated">親要素： &lt;code&gt;&amp;lt;report&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8d882ed0a179c5fa33fa113de2b6d5cf08b96dc8" translate="yes" xml:space="preserve">
          <source>Parent element: &lt;code&gt;&amp;lt;testsuites&amp;gt;&lt;/code&gt;</source>
          <target state="translated">親要素： &lt;code&gt;&amp;lt;testsuites&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dee6a6dbc03bd410bdccd56f5d909414453f052b" translate="yes" xml:space="preserve">
          <source>Parent elements: &lt;code&gt;&amp;lt;include&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;exclude&amp;gt;&lt;/code&gt;</source>
          <target state="translated">親要素： &lt;code&gt;&amp;lt;include&amp;gt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;exclude&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="48c34c1c4e7c8a3b5308b03440edb97d29e6ea7c" translate="yes" xml:space="preserve">
          <source>Path Coverage</source>
          <target state="translated">パスカバレッジ</target>
        </trans-unit>
        <trans-unit id="2866e7f21fa8136a118911840a2dbbd4b29fd193" translate="yes" xml:space="preserve">
          <source>Please note that &lt;code&gt;createStub()&lt;/code&gt; will automatically and recursively stub return values based on a method&amp;rsquo;s return type. Consider the example shown below:</source>
          <target state="translated">&lt;code&gt;createStub()&lt;/code&gt; は、メソッドの戻り値の型に基づいて、戻り値を自動的かつ再帰的にスタブ化することに注意してください。以下に示す例を検討してください。</target>
        </trans-unit>
        <trans-unit id="09c2eb731ef7ecae18e3b833d644119ba59d97d0" translate="yes" xml:space="preserve">
          <source>Please note that &lt;code&gt;final&lt;/code&gt;, &lt;code&gt;private&lt;/code&gt; and &lt;code&gt;static&lt;/code&gt; methods cannot be stubbed or mocked. They are ignored by PHPUnit's test double functionality and retain their original behavior.</source>
          <target state="translated">&lt;code&gt;final&lt;/code&gt; 、 &lt;code&gt;private&lt;/code&gt; 、および &lt;code&gt;static&lt;/code&gt; メソッドはスタブまたはモック化できないことに注意してください。これらは、PHPUnitのテストダブル機能によって無視され、元の動作を維持します。</target>
        </trans-unit>
        <trans-unit id="00c687b4522edd4a3a7f0ddb209b6f7d0b312307" translate="yes" xml:space="preserve">
          <source>Please note that &lt;code&gt;final&lt;/code&gt;, &lt;code&gt;private&lt;/code&gt;, and &lt;code&gt;static&lt;/code&gt; methods cannot be stubbed or mocked. They are ignored by PHPUnit&amp;rsquo;s test double functionality and retain their original behavior except for &lt;code&gt;static&lt;/code&gt; methods that will be replaced by a method throwing a &lt;code&gt;\PHPUnit\Framework\MockObject\BadMethodCallException&lt;/code&gt; exception.</source>
          <target state="translated">&lt;code&gt;final&lt;/code&gt; 、 &lt;code&gt;private&lt;/code&gt; 、および &lt;code&gt;static&lt;/code&gt; メソッドは、スタブまたはモックできないことに注意してください。これらはPHPUnitのテストダブル機能によって無視され、 &lt;code&gt;\PHPUnit\Framework\MockObject\BadMethodCallException&lt;/code&gt; 例外をスローするメソッドに置き換えられる &lt;code&gt;static&lt;/code&gt; メソッドを除いて元の動作を保持します。</target>
        </trans-unit>
        <trans-unit id="90cce8276942c167a0ba507e23418aab2d6e7152" translate="yes" xml:space="preserve">
          <source>Please note that as of 4.8, options can be put after the argument(s).</source>
          <target state="translated">4.8では、引数の後にオプションを付けることができることに注意してください。</target>
        </trans-unit>
        <trans-unit id="e2600f5d88a355c4d2af5b6828f3727ef7b4b5fe" translate="yes" xml:space="preserve">
          <source>Please note that if you upload PHPUnit to a webserver &amp;ldquo;bad things&amp;rdquo; may happen. &lt;a href=&quot;https://thephp.cc/news/2020/02/phpunit-a-security-risk&quot;&gt;You have been warned.&lt;/a&gt;</source>
          <target state="translated">PHPUnitをWebサーバーにアップロードすると、「悪いことが起こる」可能性があることに注意してください。&lt;a href=&quot;https://thephp.cc/news/2020/02/phpunit-a-security-risk&quot;&gt;あなたは警告されました。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d98377ffa7a808149f245a868268d2f1cef4d290" translate="yes" xml:space="preserve">
          <source>Please note that it is not recommended to install PHPUnit globally, as &lt;code&gt;/usr/bin/phpunit&lt;/code&gt; or &lt;code&gt;/usr/local/bin/phpunit&lt;/code&gt;, for instance.</source>
          <target state="translated">&lt;code&gt;/usr/bin/phpunit&lt;/code&gt; 、/ usr / bin / phpunitや &lt;code&gt;/usr/local/bin/phpunit&lt;/code&gt; のように、PHPUnitをグローバルにインストールすることはお勧めしません。</target>
        </trans-unit>
        <trans-unit id="cc3a4e281c1e2dc2dd268bf7b27a8ab0041694a4" translate="yes" xml:space="preserve">
          <source>Please note that options can be put after the argument(s).</source>
          <target state="translated">オプションは引数の後に付けることができることに注意してください。</target>
        </trans-unit>
        <trans-unit id="d47a9345cc3b234d6fd3ded43bda6cef43983ca2" translate="yes" xml:space="preserve">
          <source>Please note that the &lt;code&gt;PHPUnit\Framework\TestListener&lt;/code&gt; interface is deprecated and will be removed in the future. TestRunner extensions should be used instead of test listeners.</source>
          <target state="translated">&lt;code&gt;PHPUnit\Framework\TestListener&lt;/code&gt; インターフェースは非推奨であり、将来削除されることに注意してください。テストリスナーの代わりにTestRunner拡張機能を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="bc987c3847d269216981968d96d231ed7378ed3d" translate="yes" xml:space="preserve">
          <source>Please note that the loading of sourcecode files that is performed when &lt;code&gt;processUncoveredFilesForCodeCoverageReport=&quot;true&quot;&lt;/code&gt; is set can cause problems when a sourcecode file contains code outside the scope of a class or function, for instance.</source>
          <target state="translated">&lt;code&gt;processUncoveredFilesForCodeCoverageReport=&quot;true&quot;&lt;/code&gt; が設定されているときに実行されるソースコードファイルのロードは、たとえば、ソースコードファイルにクラスまたは関数のスコープ外のコードが含まれている場合に問題を引き起こす可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="2161be476a34b4fa1c186502eb712160d2e21020" translate="yes" xml:space="preserve">
          <source>Please note that the loading of sourcecode files that is performed when &lt;code&gt;processUncoveredFilesFromWhitelist=&quot;true&quot;&lt;/code&gt; is set can cause problems when a sourcecode file contains code outside the scope of a class or function, for instance.</source>
          <target state="translated">たとえば、ソースコードファイルにクラスまたは関数のスコープ外のコードが含まれている場合、processUncoveredFilesFromWhitelist &lt;code&gt;processUncoveredFilesFromWhitelist=&quot;true&quot;&lt;/code&gt; が設定されているときにソースコードファイルのロードが実行されると問題が発生する可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="d1b51b3ad00673230d746bfce4703a438a87a81e" translate="yes" xml:space="preserve">
          <source>Please note that this annotation requires a fully-qualified class name (FQCN). To make this more obvious to the reader, it is recommended to use a leading backslash (even if this is not required for the annotation to work correctly).</source>
          <target state="translated">この注釈では、完全修飾クラス名(FQCN)を必要とすることに注意してください。これを読者にわかりやすくするために、先頭にバックスラッシュを使用することをお勧めします(注釈が正しく動作するためにこれが必要でない場合でも)。</target>
        </trans-unit>
        <trans-unit id="7cc24eaa33396ec86dfabcc9fd8cd90be22b41ff" translate="yes" xml:space="preserve">
          <source>Please note that this annotation requires a fully-qualified class name (FQCN). To make this more obvious to the reader, it is recommended to use a leading backslash (even if this not required for the annotation to work correctly).</source>
          <target state="translated">この注釈では、完全修飾クラス名(FQCN)を必要とすることに注意してください。読者にこれをより分かりやすくするために、先頭にバックスラッシュを使用することをお勧めします(注釈が正しく動作するためにこれが必要でなくても)。</target>
        </trans-unit>
        <trans-unit id="efd2fb61a56474b542ff9e4dd9ae121d97995936" translate="yes" xml:space="preserve">
          <source>Please note that this functionality is only available when the tokenizer and Xdebug extensions are installed.</source>
          <target state="translated">この機能は tokenizer と Xdebug 拡張機能がインストールされている場合にのみ利用できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="b092b192a4d648e172b4a375b0666e778cde5015" translate="yes" xml:space="preserve">
          <source>Please note:</source>
          <target state="translated">ご注意ください。</target>
        </trans-unit>
        <trans-unit id="f2756409bf8359021e00553a9df70e7dfc844e3c" translate="yes" xml:space="preserve">
          <source>Please read &quot;&lt;a href=&quot;http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html&quot;&gt;What Every Computer Scientist Should Know About Floating-Point Arithmetic&lt;/a&gt;&quot; to understand why &lt;code&gt;$delta&lt;/code&gt; is neccessary.</source>
          <target state="translated">&lt;code&gt;$delta&lt;/code&gt; が必要な理由を理解するには、「&lt;a href=&quot;http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html&quot;&gt;すべてのコンピューター科学者が浮動小数点演算について知っておくべきこと&lt;/a&gt;」を読んでください。</target>
        </trans-unit>
        <trans-unit id="bada76dc741d1853eb8c11e6912e390099e80601" translate="yes" xml:space="preserve">
          <source>Please read &amp;ldquo;&lt;a href=&quot;http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html&quot;&gt;What Every Computer Scientist Should Know About Floating-Point Arithmetic&lt;/a&gt;&amp;rdquo; to understand why &lt;code&gt;$delta&lt;/code&gt; is necessary.</source>
          <target state="translated">&lt;code&gt;$delta&lt;/code&gt; が必要な理由を理解するには、「&lt;a href=&quot;http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html&quot;&gt;すべてのコンピューター科学者が浮動小数点演算について知っておくべきこと&lt;/a&gt;」をお読みください。</target>
        </trans-unit>
        <trans-unit id="6658d27b4ed3038a0b084c0d666cea8e96205eaa" translate="yes" xml:space="preserve">
          <source>Please refer to &lt;a href=&quot;textui&quot;&gt;Chapter 3&lt;/a&gt; for a list of commandline switches that control code coverage functionality as well as &lt;a href=&quot;appendixes.configuration#appendixes.configuration.logging&quot;&gt;the section called &amp;ldquo;Logging&amp;rdquo;&lt;/a&gt; for the relevant configuration settings.</source>
          <target state="translated">コードカバレッジ機能を制御するコマンドラインスイッチのリストについては、&lt;a href=&quot;textui&quot;&gt;第3章を&lt;/a&gt;参照してください。関連する構成設定については、&lt;a href=&quot;appendixes.configuration#appendixes.configuration.logging&quot;&gt;「ログ」と呼ばれるセクションを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="66853a18180239ac24433e4a76cfac9a746e039a" translate="yes" xml:space="preserve">
          <source>Please refer to &lt;a href=&quot;textui#textui&quot;&gt;The Command-Line Test Runner&lt;/a&gt; for a list of command line switches that control code coverage functionality as well as &lt;a href=&quot;configuration#appendixes-configuration-logging&quot;&gt;The &amp;lt;logging&amp;gt; Element&lt;/a&gt; for the relevant configuration settings.</source>
          <target state="translated">コードカバレッジ機能を制御するコマンドラインスイッチのリストについてはコマンドライン&lt;a href=&quot;textui#textui&quot;&gt;テストランナー&lt;/a&gt;を、関連する構成設定については&lt;a href=&quot;configuration#appendixes-configuration-logging&quot;&gt;&amp;lt;logging&amp;gt;要素&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="4828f48560fa76f63e10dc490953ebeab6ac6ea4" translate="yes" xml:space="preserve">
          <source>Please refer to the &lt;a href=&quot;https://github.com/phpspec/prophecy#how-to-use-it&quot;&gt;documentation&lt;/a&gt; for Prophecy for further details on how to create, configure, and use stubs, spies, and mocks using this alternative test double framework.</source>
          <target state="translated">この代替テストダブルフレームワークを使用してスタブ、スパイ、モックを作成、構成、使用する方法の詳細については、Prophecy の&lt;a href=&quot;https://github.com/phpspec/prophecy#how-to-use-it&quot;&gt;ドキュメント&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="263105526b2fba43b9e8d5b96765a97bb30eea9a" translate="yes" xml:space="preserve">
          <source>Possible Values</source>
          <target state="translated">可能な値</target>
        </trans-unit>
        <trans-unit id="627f72b844547bdb669cc5f9c64305e0259023af" translate="yes" xml:space="preserve">
          <source>Possible values: &lt;code&gt;'&amp;lt;'&lt;/code&gt;, &lt;code&gt;'lt'&lt;/code&gt;, &lt;code&gt;'&amp;lt;='&lt;/code&gt;, &lt;code&gt;'le'&lt;/code&gt;, &lt;code&gt;'&amp;gt;'&lt;/code&gt;, &lt;code&gt;'gt'&lt;/code&gt;, &lt;code&gt;'&amp;gt;='&lt;/code&gt;, &lt;code&gt;'ge'&lt;/code&gt;, &lt;code&gt;'=='&lt;/code&gt;, &lt;code&gt;'='&lt;/code&gt;, &lt;code&gt;'eq'&lt;/code&gt;, &lt;code&gt;'!='&lt;/code&gt;, &lt;code&gt;'&amp;lt;&amp;gt;'&lt;/code&gt;, &lt;code&gt;'ne'&lt;/code&gt; (default: &lt;code&gt;'&amp;gt;='&lt;/code&gt;)</source>
          <target state="translated">可能な値： &lt;code&gt;'&amp;lt;'&lt;/code&gt; 、 &lt;code&gt;'lt'&lt;/code&gt; 、 &lt;code&gt;'&amp;lt;='&lt;/code&gt; 、 &lt;code&gt;'le'&lt;/code&gt; 、 &lt;code&gt;'&amp;gt;'&lt;/code&gt; 、 &lt;code&gt;'gt'&lt;/code&gt; 、 &lt;code&gt;'&amp;gt;='&lt;/code&gt; 、 &lt;code&gt;'ge'&lt;/code&gt; 、 &lt;code&gt;'=='&lt;/code&gt; 、 &lt;code&gt;'='&lt;/code&gt; 、 &lt;code&gt;'eq'&lt;/code&gt; 、 &lt;code&gt;'!='&lt;/code&gt; 、 &lt;code&gt;'&amp;lt;&amp;gt;'&lt;/code&gt; 、 &lt;code&gt;'ne'&lt;/code&gt; （デフォルト： &lt;code&gt;'&amp;gt;='&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="d3eb31b4f5974a4ca396807b2632904087ce0a8c" translate="yes" xml:space="preserve">
          <source>Possible values: &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;defects&lt;/code&gt;, &lt;code&gt;depends&lt;/code&gt;, &lt;code&gt;no-depends&lt;/code&gt;, &lt;code&gt;duration&lt;/code&gt;, &lt;code&gt;random&lt;/code&gt;, &lt;code&gt;reverse&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;</source>
          <target state="translated">可能な値： &lt;code&gt;default&lt;/code&gt; 、 &lt;code&gt;defects&lt;/code&gt; 、 &lt;code&gt;depends&lt;/code&gt; 、 &lt;code&gt;no-depends&lt;/code&gt; 、 &lt;code&gt;duration&lt;/code&gt; 、 &lt;code&gt;random&lt;/code&gt; 、 &lt;code&gt;reverse&lt;/code&gt; 、 &lt;code&gt;size&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="83178aa2f76796fd6b0c224b92a3ff7a449ef8c7" translate="yes" xml:space="preserve">
          <source>Possible values: &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">可能な値： &lt;code&gt;true&lt;/code&gt; または &lt;code&gt;false&lt;/code&gt; （デフォルト： &lt;code&gt;false&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="f43675467edc2bf4e4fbe3d1af7b2ce15210c150" translate="yes" xml:space="preserve">
          <source>Possible values: &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;)</source>
          <target state="translated">可能な値： &lt;code&gt;true&lt;/code&gt; または &lt;code&gt;false&lt;/code&gt; （デフォルト： &lt;code&gt;true&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="944ccde8d5bc0272b51d020f33cfecb45e20a3ef" translate="yes" xml:space="preserve">
          <source>Possible values: integer (default: &lt;code&gt;0&lt;/code&gt;)</source>
          <target state="translated">可能な値：整数（デフォルト： &lt;code&gt;0&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="5198dc0c8f0f3eeeecd54391efbe73645b848fd4" translate="yes" xml:space="preserve">
          <source>Possible values: integer (default: &lt;code&gt;10&lt;/code&gt;)</source>
          <target state="translated">可能な値：整数（デフォルト： &lt;code&gt;10&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="c54d0b31f3a299ea631a176644237a8899155d36" translate="yes" xml:space="preserve">
          <source>Possible values: integer (default: &lt;code&gt;1&lt;/code&gt;)</source>
          <target state="translated">可能な値：整数（デフォルト： &lt;code&gt;1&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="72260f5bc0605c52e4e4b6d385f194ac9c60c226" translate="yes" xml:space="preserve">
          <source>Possible values: integer (default: &lt;code&gt;50&lt;/code&gt;)</source>
          <target state="translated">可能な値：整数（デフォルト： &lt;code&gt;50&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="6ee1592823bd7c02d4f9c7a4a6f80dcafdaf2ba4" translate="yes" xml:space="preserve">
          <source>Possible values: integer (default: &lt;code&gt;60&lt;/code&gt;)</source>
          <target state="translated">可能な値：整数（デフォルト： &lt;code&gt;60&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="08642d9c6a21f8b010ad42534a77abe2fbeabe11" translate="yes" xml:space="preserve">
          <source>Possible values: integer (default: &lt;code&gt;90&lt;/code&gt;)</source>
          <target state="translated">可能な値：整数（デフォルト： &lt;code&gt;90&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="6928519e0594e532b811fd0950c853682ebbcfd3" translate="yes" xml:space="preserve">
          <source>Possible values: integer or string &lt;code&gt;max&lt;/code&gt; (default: &lt;code&gt;80&lt;/code&gt;)</source>
          <target state="translated">可能な値：整数または &lt;code&gt;max&lt;/code&gt; 文字列（デフォルト： &lt;code&gt;80&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="ffe3a978816b8d9861b621d6d594db415de64920" translate="yes" xml:space="preserve">
          <source>Possible values: string</source>
          <target state="translated">取り得る値:文字列</target>
        </trans-unit>
        <trans-unit id="2844da84955771906a0d877b1cf119363b1f5cab" translate="yes" xml:space="preserve">
          <source>Possible values: string (default: &lt;code&gt;'.php'&lt;/code&gt;)</source>
          <target state="translated">可能な値：文字列（デフォルト： &lt;code&gt;'.php'&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="1643f819018f87137c3f300ebd0256bcad315bfb" translate="yes" xml:space="preserve">
          <source>Prepend PHP&amp;rsquo;s &lt;code&gt;include_path&lt;/code&gt; with given path(s).</source>
          <target state="translated">PHPの &lt;code&gt;include_path&lt;/code&gt; の前に指定されたパスを追加します。</target>
        </trans-unit>
        <trans-unit id="3be7ddab7fc072c083b8c17fdd9d76611bec0037" translate="yes" xml:space="preserve">
          <source>Prepend PHP's &lt;code&gt;include_path&lt;/code&gt; with given path(s).</source>
          <target state="translated">PHPの &lt;code&gt;include_path&lt;/code&gt; に指定のパスを付加します。</target>
        </trans-unit>
        <trans-unit id="7077ef011107ae207735c11aa0ba355ba18a6cfb" translate="yes" xml:space="preserve">
          <source>Prevents a test that performs no assertions from being considered risky.</source>
          <target state="translated">アサーションを行わないテストがリスクがあるとみなされるのを防ぎます。</target>
        </trans-unit>
        <trans-unit id="150192029460dbce4ee668d8d30fa47c25d3420d" translate="yes" xml:space="preserve">
          <source>Printed when an assertion fails while running the test method.</source>
          <target state="translated">テスト・メソッドの実行中にアサーションが失敗した場合に表示されます。</target>
        </trans-unit>
        <trans-unit id="4fe14f961fb1067a3cf5bb2c6557173ac8ba1e78" translate="yes" xml:space="preserve">
          <source>Printed when an error occurs while running the test method.</source>
          <target state="translated">テストメソッドの実行中にエラーが発生した場合に表示されます。</target>
        </trans-unit>
        <trans-unit id="f26a19962fbcc0ead8ef5d2b0673010d4f29374d" translate="yes" xml:space="preserve">
          <source>Printed when the test has been marked as risky (see &lt;a href=&quot;risky-tests&quot;&gt;Chapter 6&lt;/a&gt;).</source>
          <target state="translated">テストが危険とマークされている場合に印刷されます（&lt;a href=&quot;risky-tests&quot;&gt;第6章を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="93e9251c0ea7b915da35461bad6a48bd181ec7b3" translate="yes" xml:space="preserve">
          <source>Printed when the test has been marked as risky (see &lt;a href=&quot;risky-tests#risky-tests&quot;&gt;Risky Tests&lt;/a&gt;).</source>
          <target state="translated">テストが危険としてマークされたときに印刷されます（&lt;a href=&quot;risky-tests#risky-tests&quot;&gt;危険なテストを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="4db0fe64ebd78347ce8fd394c7ea1f2f32ca4046" translate="yes" xml:space="preserve">
          <source>Printed when the test has been skipped (see &lt;a href=&quot;incomplete-and-skipped-tests&quot;&gt;Chapter 7&lt;/a&gt;).</source>
          <target state="translated">テストがスキップされたときに印刷されます（&lt;a href=&quot;incomplete-and-skipped-tests&quot;&gt;第7章を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="b128c3bc86184964c7326fbec61d3f912cb1991f" translate="yes" xml:space="preserve">
          <source>Printed when the test has been skipped (see &lt;a href=&quot;incomplete-and-skipped-tests#incomplete-and-skipped-tests&quot;&gt;Incomplete and Skipped Tests&lt;/a&gt;).</source>
          <target state="translated">テストがスキップされたときに印刷されます（「&lt;a href=&quot;incomplete-and-skipped-tests#incomplete-and-skipped-tests&quot;&gt;不完全なテストとスキップされたテスト&lt;/a&gt;」を参照）。</target>
        </trans-unit>
        <trans-unit id="95ba802335d8720b55472d99964e18ef93d939db" translate="yes" xml:space="preserve">
          <source>Printed when the test is marked as being incomplete or not yet implemented (see &lt;a href=&quot;incomplete-and-skipped-tests&quot;&gt;Chapter 7&lt;/a&gt;).</source>
          <target state="translated">テストが未完了または未実装としてマークされている場合に出力されます（&lt;a href=&quot;incomplete-and-skipped-tests&quot;&gt;第7章を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="afc107612a45afb7a4ddc7ccaa1a4243d312909e" translate="yes" xml:space="preserve">
          <source>Printed when the test is marked as being incomplete or not yet implemented (see &lt;a href=&quot;incomplete-and-skipped-tests#incomplete-and-skipped-tests&quot;&gt;Incomplete and Skipped Tests&lt;/a&gt;).</source>
          <target state="translated">テストが不完全またはまだ実装されていないものとしてマークされている場合に印刷されます（「&lt;a href=&quot;incomplete-and-skipped-tests#incomplete-and-skipped-tests&quot;&gt;不完全なテストとスキップされたテスト&lt;/a&gt;」を参照）。</target>
        </trans-unit>
        <trans-unit id="ba2d6f772530a3465e1a5aec7c5f04c3e6c8b703" translate="yes" xml:space="preserve">
          <source>Printed when the test succeeds.</source>
          <target state="translated">テストが成功したときに印刷されます。</target>
        </trans-unit>
        <trans-unit id="ee44cac8f855d68a2c27e1a224b35d85d0c3736a" translate="yes" xml:space="preserve">
          <source>Prior to PHPUnit 7.0 (due to a bug in the annotation parsing), using the &lt;code&gt;@testdox&lt;/code&gt; annotation also activated the behaviour of the &lt;code&gt;@test&lt;/code&gt; annotation.</source>
          <target state="translated">使用して、（注釈解析のバグが原因）のPHPUnit 7.0の前 &lt;code&gt;@testdox&lt;/code&gt; もの動作活性化アノテーション &lt;code&gt;@test&lt;/code&gt; 注釈。</target>
        </trans-unit>
        <trans-unit id="84e5ab64b778c615157d90ad3f9f29cd40ffc1f9" translate="yes" xml:space="preserve">
          <source>Prior to version 6, by default, PHPUnit ran your tests in a way where changes to global and super-global variables (&lt;code&gt;$GLOBALS&lt;/code&gt;, &lt;code&gt;$_ENV&lt;/code&gt;, &lt;code&gt;$_POST&lt;/code&gt;, &lt;code&gt;$_GET&lt;/code&gt;, &lt;code&gt;$_COOKIE&lt;/code&gt;, &lt;code&gt;$_SERVER&lt;/code&gt;, &lt;code&gt;$_FILES&lt;/code&gt;, &lt;code&gt;$_REQUEST&lt;/code&gt;) do not affect other tests.</source>
          <target state="translated">バージョン6より前は、デフォルトで、PHPUnitはグローバル変数およびスーパーグローバル変数（ &lt;code&gt;$GLOBALS&lt;/code&gt; 、 &lt;code&gt;$_ENV&lt;/code&gt; 、 &lt;code&gt;$_POST&lt;/code&gt; 、 &lt;code&gt;$_GET&lt;/code&gt; 、 &lt;code&gt;$_COOKIE&lt;/code&gt; 、 &lt;code&gt;$_SERVER&lt;/code&gt; 、 &lt;code&gt;$_FILES&lt;/code&gt; 、 &lt;code&gt;$_REQUEST&lt;/code&gt; ）への変更が行われる方法でテストを実行しました他のテストには影響しません。</target>
        </trans-unit>
        <trans-unit id="4efddacca78f222cece1de9ff5fbca133f4da905" translate="yes" xml:space="preserve">
          <source>Probably the easiest way to compose a test suite is to keep all test case source files in a test directory. PHPUnit can automatically discover and run the tests by recursively traversing the test directory.</source>
          <target state="translated">おそらく、テストスイートを作成する最も簡単な方法は、すべてのテストケースのソースファイルを テストディレクトリに保存しておくことでしょう。PHPUnit は、テストディレクトリを再帰的にたどっていくことで 自動的にテストを検出して実行します。</target>
        </trans-unit>
        <trans-unit id="c5a78511945d75d09c26b4c1fb8f05de45a20ece" translate="yes" xml:space="preserve">
          <source>Prophecy</source>
          <target state="translated">Prophecy</target>
        </trans-unit>
        <trans-unit id="70722b664c73140bc8771071166d7ea92ac45976" translate="yes" xml:space="preserve">
          <source>Query (SQL) DataSet</source>
          <target state="translated">クエリ (SQL)データセット</target>
        </trans-unit>
        <trans-unit id="e52aa5d69f53e18e5cd9d9467eb939c9e5ded38d" translate="yes" xml:space="preserve">
          <source>Query-Based DataSet and DataTable</source>
          <target state="translated">クエリベースのデータセットとデータテーブル</target>
        </trans-unit>
        <trans-unit id="06576556d1ad802f247cad11ae748be47b70cd9c" translate="yes" xml:space="preserve">
          <source>R</source>
          <target state="translated">R</target>
        </trans-unit>
        <trans-unit id="20e73682efd2091a4887f17fa4949bf07aafee27" translate="yes" xml:space="preserve">
          <source>Read configuration from XML file. See &lt;a href=&quot;appendixes.configuration&quot;&gt;Appendix C&lt;/a&gt; for more details.</source>
          <target state="translated">XMLファイルから構成を読み取ります。詳細については、&lt;a href=&quot;appendixes.configuration&quot;&gt;付録C&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="0f977f593e654834e8c8cef2e9cbdfa12c4c3985" translate="yes" xml:space="preserve">
          <source>Read configuration from XML file. See &lt;a href=&quot;configuration#appendixes-configuration&quot;&gt;The XML Configuration File&lt;/a&gt; for more details.</source>
          <target state="translated">XMLファイルから構成を読み取ります。詳細については&lt;a href=&quot;configuration#appendixes-configuration&quot;&gt;、XML構成ファイル&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="d5286ff79ed1a8f09b862c3acf5ef3b28a86d14d" translate="yes" xml:space="preserve">
          <source>Remember: all configuration is optional, so make sure your extension either has sane defaults in place, or that it disables itself in case configuration is missing.</source>
          <target state="translated">覚えておいてください:すべての設定は任意ですので、あなたの拡張モジュールに正常なデフォルトが設定されているか、設定がない場合に備えて自分自身を無効にしているかを確認してください。</target>
        </trans-unit>
        <trans-unit id="975633d28e1a4ad6918a2b49a61299f7d37d4c0f" translate="yes" xml:space="preserve">
          <source>Repeatedly runs the test(s) the specified number of times.</source>
          <target state="translated">指定された回数のテストを繰り返し実行します。</target>
        </trans-unit>
        <trans-unit id="5e1798b999b27ffc3f0e8ab26077abe1c4ce1348" translate="yes" xml:space="preserve">
          <source>Replacement DataSet</source>
          <target state="translated">データセットの置き換え</target>
        </trans-unit>
        <trans-unit id="924d60e08dd4b24f08914a73aec4205064256fb5" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$actual&lt;/code&gt; is not an instance of &lt;code&gt;$expected&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$actual&lt;/code&gt; が &lt;code&gt;$expected&lt;/code&gt; インスタンスでない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="078b6f1f4540c3e45b087d08c5adc83e41e64dbb" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$actual&lt;/code&gt; is not empty.</source>
          <target state="translated">&lt;code&gt;$actual&lt;/code&gt; が空でない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="3ebd5be0d370d789dfa7b8ed701271e072a75af6" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$actual&lt;/code&gt; is not equal to &lt;code&gt;$expected&lt;/code&gt; according to &lt;code&gt;$actual-&amp;gt;$method($expected)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$actual&lt;/code&gt; が &lt;code&gt;$actual-&amp;gt;$method($expected)&lt;/code&gt; に従って &lt;code&gt;$expected&lt;/code&gt; と等しくない場合、 &lt;code&gt;$message&lt;/code&gt; によって識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="ad7ba7eceebb89f5bbf23541075b06e1bb34f753" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$actual&lt;/code&gt; is not of the &lt;code&gt;$expected&lt;/code&gt; type.</source>
          <target state="translated">&lt;code&gt;$actual&lt;/code&gt; が &lt;code&gt;$expected&lt;/code&gt; タイプでない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="07e12aad9feb2586dc29ee64b90cfd09a3655ec9" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$actual&lt;/code&gt; is not of type &lt;code&gt;array&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$actual&lt;/code&gt; が &lt;code&gt;array&lt;/code&gt; 型でない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="3b2ffea450862a117b0d5b8d32c8a83f69b72be8" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$actual&lt;/code&gt; is not of type &lt;code&gt;bool&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$actual&lt;/code&gt; が &lt;code&gt;bool&lt;/code&gt; 型でない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="7cabc1b9d89adb68145d548b98fde0356f162f86" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$actual&lt;/code&gt; is not of type &lt;code&gt;callable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$actual&lt;/code&gt; が &lt;code&gt;callable&lt;/code&gt; タイプでない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="709258a65b8c96c0b4c8ba2e243191c0480503d1" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$actual&lt;/code&gt; is not of type &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$actual&lt;/code&gt; が &lt;code&gt;float&lt;/code&gt; 型でない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="923b8e36f921759e2f99839444ec9482c6a8f286" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$actual&lt;/code&gt; is not of type &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$actual&lt;/code&gt; が &lt;code&gt;int&lt;/code&gt; 型でない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="cf1d51be05e96143358c9611508003ec16912836" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$actual&lt;/code&gt; is not of type &lt;code&gt;iterable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$actual&lt;/code&gt; が &lt;code&gt;iterable&lt;/code&gt; 型でない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="29433e49c92445602d930fcabf3c19bcbf3e6a20" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$actual&lt;/code&gt; is not of type &lt;code&gt;numeric&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$actual&lt;/code&gt; が &lt;code&gt;numeric&lt;/code&gt; タイプでない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="18e14627bc060222a7c550f407567efcb441e9db" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$actual&lt;/code&gt; is not of type &lt;code&gt;object&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$actual&lt;/code&gt; が &lt;code&gt;object&lt;/code&gt; 型でない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="e65dc0190a2bc6d9f6dbfe0e237c18e87db9d1c2" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$actual&lt;/code&gt; is not of type &lt;code&gt;resource&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$actual&lt;/code&gt; が &lt;code&gt;resource&lt;/code&gt; タイプでない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="a632d0af23c6a6d2c830608de71779c6e96d81eb" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$actual&lt;/code&gt; is not of type &lt;code&gt;scalar&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$actual&lt;/code&gt; が &lt;code&gt;scalar&lt;/code&gt; 型でない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="2ce936450261d1bf60a2c1a6ade911729c641c43" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$actual&lt;/code&gt; is not of type &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$actual&lt;/code&gt; が &lt;code&gt;string&lt;/code&gt; 型でない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="9e98152f787fdc1d0324cb8c223b67bfb99d763e" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$array&lt;/code&gt; does not contains the &lt;code&gt;$subset&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$array&lt;/code&gt; に &lt;code&gt;$subset&lt;/code&gt; が含まれていない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="71b557ccbaaa7a51c075e4c7db2b8f7650bb97fb" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$array&lt;/code&gt; does not have the &lt;code&gt;$key&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$array&lt;/code&gt; に &lt;code&gt;$key&lt;/code&gt; がない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="6ca0da1ed1e84c5868f60ccdb6b56ce8feaacc8c" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$className::attributeName&lt;/code&gt; does not exist.</source>
          <target state="translated">&lt;code&gt;$className::attributeName&lt;/code&gt; が存在しない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="c536140963660bee37cdd72ecd663108753ca977" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$condition&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$condition&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; の場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="9c4115d702d6b98e99ec860f0cf95a6db164937a" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$condition&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$condition&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; の場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="cc513ca9b015cd5814feb284d42c9cf0de0dc6ad" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$haystack&lt;/code&gt; does not contain only instances of class &lt;code&gt;$classname&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$haystack&lt;/code&gt; にクラス &lt;code&gt;$classname&lt;/code&gt; インスタンスのみが含まれていない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="84fce04f62fd1599677eb73f158abf8b48b05502" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$haystack&lt;/code&gt; does not contain only variables of type &lt;code&gt;$type&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$haystack&lt;/code&gt; &lt;code&gt;$type&lt;/code&gt; 変数のみが含まれていない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="544c20f0a7531533ccce89905d21173c44ed1b1d" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$needle&lt;/code&gt; is not a substring of &lt;code&gt;$haystack&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$needle&lt;/code&gt; が &lt;code&gt;$haystack&lt;/code&gt; サブストリングでない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="2a7b429e45d29e7cb3ea9b762d8a855e23e9fbec" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$needle&lt;/code&gt; is not an element of &lt;code&gt;$haystack&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$needle&lt;/code&gt; が &lt;code&gt;$haystack&lt;/code&gt; 要素でない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="393d7b82ac901e2af8038b1136b0b11b10a85319" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$object-&amp;gt;attributeName&lt;/code&gt; does not exist.</source>
          <target state="translated">&lt;code&gt;$object-&amp;gt;attributeName&lt;/code&gt; が存在しない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="85c71af7ea8b76e35c12e41078b128f762f10ca6" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$string&lt;/code&gt; does not match the regular expression &lt;code&gt;$pattern&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$string&lt;/code&gt; が正規表現 &lt;code&gt;$pattern&lt;/code&gt; 一致しない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="eb4ffc898d3720877e919bb23475e7ba888c3340" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$variable&lt;/code&gt; is not &lt;code&gt;INF&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$variable&lt;/code&gt; が &lt;code&gt;INF&lt;/code&gt; でない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="cd91aa05bc44e856d110d48bd4789ed9a4a768c2" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$variable&lt;/code&gt; is not &lt;code&gt;NAN&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$variable&lt;/code&gt; が &lt;code&gt;NAN&lt;/code&gt; ではない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="8ed3c7fcdfb61a066fbc49285d66021d4dae0700" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$variable&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$variable&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; でない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="77bd044d100c1c700543142b3889b9173e9bfc46" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the &lt;code&gt;$string&lt;/code&gt; does not end with &lt;code&gt;$suffix&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$string&lt;/code&gt; が &lt;code&gt;$suffix&lt;/code&gt; 終わっていない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="086c5446b0c9a38d2f1efa12475b396fb1662835" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the &lt;code&gt;$string&lt;/code&gt; does not match the &lt;code&gt;$format&lt;/code&gt; string.</source>
          <target state="translated">&lt;code&gt;$string&lt;/code&gt; が &lt;code&gt;$format&lt;/code&gt; 文字列と一致しない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="98a6fedabadddcb1108120c9c73eea5c20be0198" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the &lt;code&gt;$string&lt;/code&gt; does not match the contents of the &lt;code&gt;$formatFile&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$string&lt;/code&gt; が &lt;code&gt;$formatFile&lt;/code&gt; 内容と一致しない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="512f125df8f2a6988a4771105eac7f4ba79b7c84" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the &lt;code&gt;$string&lt;/code&gt; does not start with &lt;code&gt;$prefix&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$string&lt;/code&gt; が &lt;code&gt;$prefix&lt;/code&gt; 始まっていない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="09fe110a6d6c6c2a812045f5bd6440b3a1463256" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the &lt;code&gt;$value&lt;/code&gt; does not match the &lt;code&gt;$constraint&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$value&lt;/code&gt; が &lt;code&gt;$constraint&lt;/code&gt; 一致しない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="4ccd61efef40fa853ff83fe68aa0c12747d495b5" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the XML Structure of the DOMElement in &lt;code&gt;$actualElement&lt;/code&gt; is not equal to the XML structure of the DOMElement in &lt;code&gt;$expectedElement&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$actualElement&lt;/code&gt; のXML構造が &lt;code&gt;$expectedElement&lt;/code&gt; DOMElementのXML構造と等しくない場合に、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="8b04410d5387cb65b81bca62b943471ef8469184" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the XML document in &lt;code&gt;$actualFile&lt;/code&gt; is not equal to the XML document in &lt;code&gt;$expectedFile&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$actualFile&lt;/code&gt; のXMLドキュメントが &lt;code&gt;$expectedFile&lt;/code&gt; XMLドキュメントと等しくない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="3a0182ffc5d9d017d2da8255c3dba2d70ccc072d" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the XML document in &lt;code&gt;$actualXml&lt;/code&gt; is not equal to the XML document in &lt;code&gt;$expectedFile&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$actualXml&lt;/code&gt; のXMLドキュメントが &lt;code&gt;$expectedFile&lt;/code&gt; XMLドキュメントと等しくない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="bafb755a1c4add06ae87ccaf6e2df8b223ddbe53" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the XML document in &lt;code&gt;$actualXml&lt;/code&gt; is not equal to the XML document in &lt;code&gt;$expectedXml&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$actualXml&lt;/code&gt; のXMLドキュメントが &lt;code&gt;$expectedXml&lt;/code&gt; XMLドキュメントと等しくない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="d025364684667f27bece52895d5765de417089a2" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the absolute difference between &lt;code&gt;$expected&lt;/code&gt; and &lt;code&gt;$actual&lt;/code&gt; is greater than &lt;code&gt;$delta&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$expected&lt;/code&gt; と &lt;code&gt;$actual&lt;/code&gt; 絶対差が &lt;code&gt;$delta&lt;/code&gt; より大きい場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="11f0506454d65d919a993273bfd9571e82e69672" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the directory specified by &lt;code&gt;$directory&lt;/code&gt; does not exist.</source>
          <target state="translated">&lt;code&gt;$message&lt;/code&gt; directoryで指定され &lt;code&gt;$directory&lt;/code&gt; が存在しない場合、$ messageで識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="ee8a7057ce8765a935dce603cc59a7a46fbe2605" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the directory specified by &lt;code&gt;$directory&lt;/code&gt; is not a directory or is not readable.</source>
          <target state="translated">&lt;code&gt;$message&lt;/code&gt; directoryで指定され &lt;code&gt;$directory&lt;/code&gt; がディレクトリーではないか、読み取り可能でない場合、$ messageで識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="728690575b113a8f02350e19c80190f39d052b0f" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the directory specified by &lt;code&gt;$directory&lt;/code&gt; is not a directory or is not writable.</source>
          <target state="translated">&lt;code&gt;$message&lt;/code&gt; directoryで指定され &lt;code&gt;$directory&lt;/code&gt; がディレクトリーでないか、書き込み可能でない場合、$ messageで識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="3e47f4fd26dcfcba2f73efbe449d34308cbd9660" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the file or directory specified by &lt;code&gt;$filename&lt;/code&gt; is not readable.</source>
          <target state="translated">&lt;code&gt;$filename&lt;/code&gt; 指定されたファイルまたはディレクトリが読み取り可能でない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="38e7d275b237baccf1b03689f9d23f16fd05893d" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the file or directory specified by &lt;code&gt;$filename&lt;/code&gt; is not writable.</source>
          <target state="translated">&lt;code&gt;$filename&lt;/code&gt; 指定されたファイルまたはディレクトリが書き込み可能でない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="55d77040434efa3c373e4945df883a1b2bd7a62c" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the file specified by &lt;code&gt;$expected&lt;/code&gt; does not have the same contents as the file specified by &lt;code&gt;$actual&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$expected&lt;/code&gt; 指定されたファイルが &lt;code&gt;$actual&lt;/code&gt; 指定されたファイルと同じ内容でない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="578fda8dc395bb88e540b77eb87fa3d87feaee2e" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the file specified by &lt;code&gt;$expectedFile&lt;/code&gt; does not have &lt;code&gt;$actualString&lt;/code&gt; as its contents.</source>
          <target state="translated">&lt;code&gt;$expectedFile&lt;/code&gt; 指定されたファイルのコンテンツが &lt;code&gt;$actualString&lt;/code&gt; ない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="d56ad30ea8d3b9f96fc5c8079f620d3ccc615a3d" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the file specified by &lt;code&gt;$filename&lt;/code&gt; does not exist.</source>
          <target state="translated">&lt;code&gt;$filename&lt;/code&gt; 指定されたファイルが存在しない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="dc6ad2067d9ad0155aac5f3d8f47da9b0222c496" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the file specified by &lt;code&gt;$filename&lt;/code&gt; is not a file or is not readable.</source>
          <target state="translated">&lt;code&gt;$filename&lt;/code&gt; 指定されたファイルがファイルではないか、読み取り可能でない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="8291b2b0cf203b6fa6838f2cea8f26063a7a8fe3" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the file specified by &lt;code&gt;$filename&lt;/code&gt; is not a file or is not writable.</source>
          <target state="translated">&lt;code&gt;$filename&lt;/code&gt; 指定されたファイルがファイルでないか、書き込み可能でない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="c12e7387d4c761afca3a9b2ec974011f6be4a1bb" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the number of elements in &lt;code&gt;$haystack&lt;/code&gt; is not &lt;code&gt;$expectedCount&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$haystack&lt;/code&gt; の要素数が &lt;code&gt;$expectedCount&lt;/code&gt; でない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="4080ea0d678b62f44b472ec5e7403a733c8e1fa6" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the two arrays &lt;code&gt;$expected&lt;/code&gt; and &lt;code&gt;$actual&lt;/code&gt; are not equal.</source>
          <target state="translated">2つの配列 &lt;code&gt;$expected&lt;/code&gt; と &lt;code&gt;$actual&lt;/code&gt; が等しくない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="3d8646043332e6a5cd233d90272cf36235d5e92a" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the two floats &lt;code&gt;$expected&lt;/code&gt; and &lt;code&gt;$actual&lt;/code&gt; are not within &lt;code&gt;$delta&lt;/code&gt; of each other.</source>
          <target state="translated">2つのフロート &lt;code&gt;$expected&lt;/code&gt; と &lt;code&gt;$actual&lt;/code&gt; が互いに &lt;code&gt;$delta&lt;/code&gt; 内にない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="3da6ee2026204bec6dccdab9369e1994df40126f" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the two objects &lt;code&gt;$expected&lt;/code&gt; and &lt;code&gt;$actual&lt;/code&gt; do not have equal attribute values.</source>
          <target state="translated">2つのオブジェクト &lt;code&gt;$expected&lt;/code&gt; と &lt;code&gt;$actual&lt;/code&gt; 等しい属性値がない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="8e21322034d6fc096afb08f79236b5d692c36720" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the two variables &lt;code&gt;$expected&lt;/code&gt; and &lt;code&gt;$actual&lt;/code&gt; are not equal.</source>
          <target state="translated">2つの変数 &lt;code&gt;$expected&lt;/code&gt; と &lt;code&gt;$actual&lt;/code&gt; が等しくない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="3cab7e45c1bddba8d5529fea8d75b1a303fc5364" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the two variables &lt;code&gt;$expected&lt;/code&gt; and &lt;code&gt;$actual&lt;/code&gt; do not have the same type and value.</source>
          <target state="translated">2つの変数 &lt;code&gt;$expected&lt;/code&gt; と &lt;code&gt;$actual&lt;/code&gt; 型と値が同じでない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="c94723b2b18047d8e062213732cd10179f2b5dd9" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the two variables &lt;code&gt;$expected&lt;/code&gt; and &lt;code&gt;$actual&lt;/code&gt; do not reference the same object.</source>
          <target state="translated">2つの変数 &lt;code&gt;$expected&lt;/code&gt; と &lt;code&gt;$actual&lt;/code&gt; が同じオブジェクトを参照していない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="7f9cc3596d6c933da5ee9e94ff2d469a2a40040e" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the uncommented canonical form of the XML documents represented by the two DOMDocument objects &lt;code&gt;$expected&lt;/code&gt; and &lt;code&gt;$actual&lt;/code&gt; are not equal.</source>
          <target state="translated">2つのDOMDocumentオブジェクト &lt;code&gt;$expected&lt;/code&gt; と &lt;code&gt;$actual&lt;/code&gt; によって表されるXMLドキュメントのコメント化されていない正規形式が等しくない場合、 &lt;code&gt;$message&lt;/code&gt; によって識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="1249882186142435ead5e58f83c6c8abd0c19b9c" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the value of &lt;code&gt;$actual&lt;/code&gt; is not greater than or equal to the value of &lt;code&gt;$expected&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$actual&lt;/code&gt; の値が &lt;code&gt;$expected&lt;/code&gt; 値以上でない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="595e08c23860647d89901bf9ab8b92336d0f4ffc" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the value of &lt;code&gt;$actual&lt;/code&gt; is not greater than the value of &lt;code&gt;$expected&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$actual&lt;/code&gt; の値が &lt;code&gt;$expected&lt;/code&gt; 値よりも大きくない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="a6c765fa2d55705025d2762d524409fb5bb50e0a" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the value of &lt;code&gt;$actual&lt;/code&gt; is not less than or equal to the value of &lt;code&gt;$expected&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$actual&lt;/code&gt; の値が &lt;code&gt;$expected&lt;/code&gt; 値以下でない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="8ca0ba5a5b58e0585cdb6e1d5e525814facce853" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the value of &lt;code&gt;$actual&lt;/code&gt; is not less than the value of &lt;code&gt;$expected&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$actual&lt;/code&gt; の値が &lt;code&gt;$expected&lt;/code&gt; 値以上の場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="82b463264dc29bb4729bf93137c08b11700af714" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the value of &lt;code&gt;$actualFile&lt;/code&gt; does not match the value of &lt;code&gt;$expectedFile&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$actualFile&lt;/code&gt; の値が &lt;code&gt;$expectedFile&lt;/code&gt; 値と一致しない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="301162802aecaaf8f22c346674fe7f0608bb7436" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the value of &lt;code&gt;$actualJson&lt;/code&gt; does not match the value of &lt;code&gt;$expectedFile&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$actualJson&lt;/code&gt; の値が &lt;code&gt;$expectedFile&lt;/code&gt; 値と一致しない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="18c0ccdc644f837b1a01f2132c19dc72f470bf4b" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the value of &lt;code&gt;$actualJson&lt;/code&gt; does not match the value of &lt;code&gt;$expectedJson&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$actualJson&lt;/code&gt; の値が &lt;code&gt;$expectedJson&lt;/code&gt; 値と一致しない場合、 &lt;code&gt;$message&lt;/code&gt; 識別されるエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="dd616ff006ed7c07c758a188e4ec92b362086afe" translate="yes" xml:space="preserve">
          <source>Reports the test progress as agile documentation. See &lt;a href=&quot;other-uses-for-tests&quot;&gt;Chapter 12&lt;/a&gt; for more details.</source>
          <target state="translated">テストの進行状況をアジャイルなドキュメントとして報告します。詳細については、&lt;a href=&quot;other-uses-for-tests&quot;&gt;第12章を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="de8d936c88e1863800bd8466f0faec889f494042" translate="yes" xml:space="preserve">
          <source>Reports the test progress in TestDox format (see &lt;a href=&quot;#textui-testdox&quot;&gt;TestDox&lt;/a&gt;).</source>
          <target state="translated">TestDox形式でテストの進行状況を報告します（&lt;a href=&quot;#textui-testdox&quot;&gt;TestDoxを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">Requirements</target>
        </trans-unit>
        <trans-unit id="16b5504af778e6e22e6ab413c83558c38de90649" translate="yes" xml:space="preserve">
          <source>Returns a matcher that matches when the method it is evaluated for is executed at least once.</source>
          <target state="translated">評価されたメソッドが少なくとも1回実行されたときにマッチするマッチャーを返します。</target>
        </trans-unit>
        <trans-unit id="120bdc611a5f0e858f90bdbbdc837cc8ceefa27e" translate="yes" xml:space="preserve">
          <source>Returns a matcher that matches when the method it is evaluated for is executed exactly &lt;code&gt;$count&lt;/code&gt; times.</source>
          <target state="translated">評価対象のメソッドが正確に &lt;code&gt;$count&lt;/code&gt; 回実行されたときに一致するマッチャーを返します。</target>
        </trans-unit>
        <trans-unit id="838806f90a6f476915e02b7e79b86fd52d6a8d70" translate="yes" xml:space="preserve">
          <source>Returns a matcher that matches when the method it is evaluated for is executed exactly once.</source>
          <target state="translated">評価されたメソッドが正確に一度だけ実行されたときにマッチするマッチャーを返します。</target>
        </trans-unit>
        <trans-unit id="c9911566320eae9c09315f2b84265dd9c69b6476" translate="yes" xml:space="preserve">
          <source>Returns a matcher that matches when the method it is evaluated for is executed zero or more times.</source>
          <target state="translated">評価されたメソッドが0回以上実行された場合にマッチするマッチャーを返します。</target>
        </trans-unit>
        <trans-unit id="53bab2e7ba0f0396fc0a45e50a1614e9f6fafc8d" translate="yes" xml:space="preserve">
          <source>Returns a matcher that matches when the method it is evaluated for is invoked at the given &lt;code&gt;$index&lt;/code&gt;.</source>
          <target state="translated">評価対象のメソッドが指定された &lt;code&gt;$index&lt;/code&gt; で呼び出されたときに一致するマッチャーを返します。</target>
        </trans-unit>
        <trans-unit id="27915c6e84224125fe3978046e491501197d9c16" translate="yes" xml:space="preserve">
          <source>Returns a matcher that matches when the method it is evaluated for is never executed.</source>
          <target state="translated">評価されたメソッドが実行されなかった場合にマッチするマッチャーを返します。</target>
        </trans-unit>
        <trans-unit id="dc2fb7e0371dfd1aabb9f9a7a640ddddc336ee2d" translate="yes" xml:space="preserve">
          <source>Risky Tests</source>
          <target state="translated">危険な試験</target>
        </trans-unit>
        <trans-unit id="4490c75530f1d398bb9ab74d4a61cad83d14483b" translate="yes" xml:space="preserve">
          <source>Run each test in a separate PHP process.</source>
          <target state="translated">それぞれのテストを別の PHP プロセスで実行します。</target>
        </trans-unit>
        <trans-unit id="5332dfc5aecd6edc7ed9f2a7c823bd3465a3c11c" translate="yes" xml:space="preserve">
          <source>Runs the tests that are provided by the class &lt;code&gt;UnitTest&lt;/code&gt;. This class is expected to be declared in the &lt;code&gt;UnitTest.php&lt;/code&gt; sourcefile.</source>
          <target state="translated">&lt;code&gt;UnitTest&lt;/code&gt; クラスによって提供されるテストを実行します。このクラスは、 &lt;code&gt;UnitTest.php&lt;/code&gt; ソースファイルで宣言されることが期待されています。</target>
        </trans-unit>
        <trans-unit id="eedb7be5dad5b95a566c703f452bd8d531fca9e0" translate="yes" xml:space="preserve">
          <source>Runs the tests that are provided by the class &lt;code&gt;UnitTest&lt;/code&gt;. This class is expected to be declared in the specified sourcefile.</source>
          <target state="translated">&lt;code&gt;UnitTest&lt;/code&gt; クラスによって提供されるテストを実行します。このクラスは、指定されたソースファイルで宣言されることが期待されています。</target>
        </trans-unit>
        <trans-unit id="02aa629c8b16cd17a44f3a0efec2feed43937642" translate="yes" xml:space="preserve">
          <source>S</source>
          <target state="translated">S</target>
        </trans-unit>
        <trans-unit id="531764600c776e25cb023fb3e2bdba0530fd3705" translate="yes" xml:space="preserve">
          <source>Sebastian Bergmann</source>
          <target state="translated">セバスチャン・バーグマン</target>
        </trans-unit>
        <trans-unit id="dfe670253cdc3d62fdd264692dc57385ab7b5973" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#textui-examples-filter-patterns&quot;&gt;Example 3.2&lt;/a&gt; for examples of valid filter patterns.</source>
          <target state="translated">有効なフィルターパターンの例については、&lt;a href=&quot;#textui-examples-filter-patterns&quot;&gt;例3.2&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="92e32fc164770ff6ee0c1dd58074994a2f8d1043" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#textui-examples-filter-shortcuts&quot;&gt;Example 3.3&lt;/a&gt; for some additional shortcuts that are available for matching data providers.</source>
          <target state="translated">マッチングデータプロバイダーに使用できるいくつかの追加のショートカットについては、&lt;a href=&quot;#textui-examples-filter-shortcuts&quot;&gt;例3.3&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="4a2b0e82e311143e9d911ff3b60f31074d1cca43" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;configuration#appendixes-configuration-extensions&quot;&gt;The &amp;lt;extensions&amp;gt; Element&lt;/a&gt; for details on how to register extensions in PHPUnit&amp;rsquo;s XML configuration.</source>
          <target state="translated">参照してください。&lt;a href=&quot;configuration#appendixes-configuration-extensions&quot;&gt;&amp;lt;拡張子&amp;gt;要素&lt;/a&gt;PHPUnitのXML設定で拡張子を登録する方法の詳細については、を。</target>
        </trans-unit>
        <trans-unit id="6443e79f7ce086ba41d829f4766ba52443f9b7f4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;configuration#appendixes-configuration-extensions-extension-arguments&quot;&gt;The &amp;lt;arguments&amp;gt; Element&lt;/a&gt; for details on how to use the &lt;code&gt;arguments&lt;/code&gt; configuration.</source>
          <target state="translated">参照してください。&lt;a href=&quot;configuration#appendixes-configuration-extensions-extension-arguments&quot;&gt;&amp;lt;引数&amp;gt;要素を&lt;/a&gt;使用する方法の詳細については、 &lt;code&gt;arguments&lt;/code&gt; 設定を。</target>
        </trans-unit>
        <trans-unit id="3ffd1d656881256994f1765ad2328a503c15c17e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;fixtures#fixtures-global-state&quot;&gt;Global State&lt;/a&gt; for details.</source>
          <target state="translated">詳細については、&lt;a href=&quot;fixtures#fixtures-global-state&quot;&gt;グローバルステート&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="7448f49a86217992e83be8ae862c71eb04326979" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;fixtures#fixtures.global-state&quot;&gt;the section called &amp;ldquo;Global State&amp;rdquo;&lt;/a&gt; for details.</source>
          <target state="translated">詳細について&lt;a href=&quot;fixtures#fixtures.global-state&quot;&gt;は、「グローバル状態」&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c6c88373f803589d4c186591993ac23e9561abe1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;textui#textui.examples.filter-patterns&quot;&gt;Example 3.2&lt;/a&gt; for examples of valid filter patterns.</source>
          <target state="translated">有効なフィルターパターンの例については、&lt;a href=&quot;textui#textui.examples.filter-patterns&quot;&gt;例3.2&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="100fb61de51efc9275e7d2ec6b05cdbb1fc3dc64" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;textui#textui.examples.filter-shortcuts&quot;&gt;Example 3.3&lt;/a&gt; for some additional shortcuts that are available for matching data providers.</source>
          <target state="translated">一致するデータプロバイダーに使用できるその他のショートカットについては、&lt;a href=&quot;textui#textui.examples.filter-shortcuts&quot;&gt;例3.3&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="6af4cd776126f4cbad3e79a2ce037bdcc2e2a77f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit-data-providers&quot;&gt;Data Providers&lt;/a&gt; for more details.</source>
          <target state="translated">詳細については、&lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit-data-providers&quot;&gt;データプロバイダー&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="26859028ece706bb86bdde0b1cbed6e647d70979" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit-data-providers&quot;&gt;Data Providers&lt;/a&gt; to learn more about passing a set of data to a test.</source>
          <target state="translated">&lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit-data-providers&quot;&gt;データ&lt;/a&gt;セットをテストに渡す方法の詳細については、データプロバイダーを参照してください。</target>
        </trans-unit>
        <trans-unit id="f33376a418bc378efc8cb6c7f7b51362893bd5de" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit-test-dependencies&quot;&gt;Test Dependencies&lt;/a&gt; for more details.</source>
          <target state="translated">詳細については、&lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit-test-dependencies&quot;&gt;依存関係のテストを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="fddb9a07b73cffc561de86d1fff40bac094034ef" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.data-providers&quot;&gt;the section called &amp;ldquo;Data Providers&amp;rdquo;&lt;/a&gt; for more details.</source>
          <target state="translated">詳細について&lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.data-providers&quot;&gt;は、「データプロバイダー」&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="de013037158c2f66306c3e726607540db1c032aa" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.exceptions&quot;&gt;the section called &amp;ldquo;Testing Exceptions&amp;rdquo;&lt;/a&gt; for more details.</source>
          <target state="translated">詳細について&lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.exceptions&quot;&gt;は、「例外のテスト」&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ddc31a0eb2b6c484c3524060686335a03d03c165" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.test-dependencies&quot;&gt;the section called &amp;ldquo;Test Dependencies&amp;rdquo;&lt;/a&gt; for more details.</source>
          <target state="translated">詳細について&lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.test-dependencies&quot;&gt;は、「テストの依存関係」&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="8de526126d0146c132ea71d5dd16bbe19241f244" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;convertErrorsToExceptions&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; to disable this feature.</source>
          <target state="translated">この機能を無効にするには、 &lt;code&gt;convertErrorsToExceptions&lt;/code&gt; を &lt;code&gt;false&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="0323214292a03803b261425be4f52ad8e8737fe2" translate="yes" xml:space="preserve">
          <source>Set up fixture</source>
          <target state="translated">フィクスチャの設定</target>
        </trans-unit>
        <trans-unit id="9447b4135080653abd2e9ad8db0727ace2cc20d3" translate="yes" xml:space="preserve">
          <source>Set up the expectation that the output is equal to an &lt;code&gt;$expectedString&lt;/code&gt;.</source>
          <target state="translated">出力が &lt;code&gt;$expectedString&lt;/code&gt; と等しいという期待を設定します。</target>
        </trans-unit>
        <trans-unit id="160dd02da00e824892e1e71a6b95a3a491a4b93d" translate="yes" xml:space="preserve">
          <source>Set up the expectation that the output matches a &lt;code&gt;$regularExpression&lt;/code&gt;.</source>
          <target state="translated">出力が &lt;code&gt;$regularExpression&lt;/code&gt; 一致するという期待を設定します。</target>
        </trans-unit>
        <trans-unit id="6695262513b33f70308e32dac54d5fbc52e2a308" translate="yes" xml:space="preserve">
          <source>Sets the value of the given PHP configuration option.</source>
          <target state="translated">指定した PHP 設定オプションの値を設定します。</target>
        </trans-unit>
        <trans-unit id="0ee05ccfc38559f342a17e0fe4c74bf30a5dd845" translate="yes" xml:space="preserve">
          <source>Sets up a callback that is used to, for instance, normalize the actual output.</source>
          <target state="translated">例えば、実際の出力を正規化するために使用されるコールバックを設定します。</target>
        </trans-unit>
        <trans-unit id="7c0f524205032e28bf5996cd4e347c13ca5df8e2" translate="yes" xml:space="preserve">
          <source>Setting PHP INI settings, Constants and Global Variables</source>
          <target state="translated">PHP INI の設定、定数、グローバル変数の設定</target>
        </trans-unit>
        <trans-unit id="dfef7651bee340fb2e3dc046136845c86b43482c" translate="yes" xml:space="preserve">
          <source>Setting the &lt;code&gt;$backupGlobalsBlacklist&lt;/code&gt; property inside e.g. the &lt;code&gt;setUp()&lt;/code&gt; method has no effect.</source>
          <target state="translated">設定 &lt;code&gt;$backupGlobalsBlacklist&lt;/code&gt; 例えば内部のプロパティを &lt;code&gt;setUp()&lt;/code&gt; メソッドは効果がありません。</target>
        </trans-unit>
        <trans-unit id="4dc7cd78f12b47c47bdbca3c58f61b7905f4eb97" translate="yes" xml:space="preserve">
          <source>Setting the &lt;code&gt;$backupGlobalsExcludeList&lt;/code&gt; property inside e.g. the &lt;code&gt;setUp()&lt;/code&gt; method has no effect.</source>
          <target state="translated">たとえば、 &lt;code&gt;setUp()&lt;/code&gt; メソッド内で &lt;code&gt;$backupGlobalsExcludeList&lt;/code&gt; プロパティを設定しても、効果はありません。</target>
        </trans-unit>
        <trans-unit id="2f858090d3e7f11e031c74e8319ce049ee3d6c29" translate="yes" xml:space="preserve">
          <source>Setting the &lt;code&gt;$backupStaticAttributesBlacklist&lt;/code&gt; property inside e.g. the &lt;code&gt;setUp()&lt;/code&gt; method has no effect.</source>
          <target state="translated">たとえば &lt;code&gt;setUp()&lt;/code&gt; メソッド内で &lt;code&gt;$backupStaticAttributesBlacklist&lt;/code&gt; プロパティを設定しても効果はありません。</target>
        </trans-unit>
        <trans-unit id="da31fed034799e38eaba9b5870e978906505b080" translate="yes" xml:space="preserve">
          <source>Setting the &lt;code&gt;$backupStaticAttributesExcludeList&lt;/code&gt; property inside e.g. the &lt;code&gt;setUp()&lt;/code&gt; method has no effect.</source>
          <target state="translated">たとえば、 &lt;code&gt;setUp()&lt;/code&gt; メソッド内で &lt;code&gt;$backupStaticAttributesExcludeList&lt;/code&gt; プロパティを設定しても、効果はありません。</target>
        </trans-unit>
        <trans-unit id="0cce9e3fe005c24f82ba7f7c90a1ea850bb9f24a" translate="yes" xml:space="preserve">
          <source>Setting this attribute to &lt;code&gt;false&lt;/code&gt; is equivalent to using the &lt;code&gt;--colors=never&lt;/code&gt; CLI option.</source>
          <target state="translated">この属性を &lt;code&gt;false&lt;/code&gt; に設定することは、 &lt;code&gt;--colors=never&lt;/code&gt; オプションを使用することと同じです。</target>
        </trans-unit>
        <trans-unit id="47db6540045b49655bd90245b88cb8e8a86f503b" translate="yes" xml:space="preserve">
          <source>Setting this attribute to &lt;code&gt;true&lt;/code&gt; is equivalent to using the &lt;code&gt;--colors=auto&lt;/code&gt; CLI option.</source>
          <target state="translated">この属性を &lt;code&gt;true&lt;/code&gt; に設定することは、 &lt;code&gt;--colors=auto&lt;/code&gt; オプションを使用することと同じです。</target>
        </trans-unit>
        <trans-unit id="87d2656321a5a293de452fde10bbd00c1468df69" translate="yes" xml:space="preserve">
          <source>Sharing Fixture</source>
          <target state="translated">器具の共有</target>
        </trans-unit>
        <trans-unit id="48f0b087d596a91559cda64289d67bfa8dbf2790" translate="yes" xml:space="preserve">
          <source>Similarily, if &lt;code&gt;m&lt;/code&gt; had a return type declaration for a scalar type then a return value such as &lt;code&gt;0&lt;/code&gt; (for &lt;code&gt;int&lt;/code&gt;), &lt;code&gt;0.0&lt;/code&gt; (for &lt;code&gt;float&lt;/code&gt;), or &lt;code&gt;[]&lt;/code&gt; (for &lt;code&gt;array&lt;/code&gt;) would be generated.</source>
          <target state="translated">同様に、 &lt;code&gt;m&lt;/code&gt; にスカラー型の戻り値の型宣言がある場合、 &lt;code&gt;0&lt;/code&gt; （ &lt;code&gt;int&lt;/code&gt; の場合）、 &lt;code&gt;0.0&lt;/code&gt; （ &lt;code&gt;float&lt;/code&gt; の場合）、 &lt;code&gt;[]&lt;/code&gt; （ &lt;code&gt;array&lt;/code&gt; ）などの戻り値が生成されます。</target>
        </trans-unit>
        <trans-unit id="4d0c16dbc955b14c2425a814443ff6af2c70b2ff" translate="yes" xml:space="preserve">
          <source>Simply add a (development-time) dependency on &lt;code&gt;phpunit/phpunit&lt;/code&gt; to your project's &lt;code&gt;composer.json&lt;/code&gt; file if you use &lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composer&lt;/a&gt; to manage the dependencies of your project:</source>
          <target state="translated">&lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composer&lt;/a&gt;を使用してプロジェクトの依存関係を管理する場合は、 &lt;code&gt;phpunit/phpunit&lt;/code&gt; の（開発時）依存関係をプロジェクトの &lt;code&gt;composer.json&lt;/code&gt; ファイルに追加するだけです。</target>
        </trans-unit>
        <trans-unit id="1d4b4c5b6c9707bf9214b1cba58ee5615b528385" translate="yes" xml:space="preserve">
          <source>Simply add a dependency on &lt;code&gt;mikey179/vfsStream&lt;/code&gt; to your project's &lt;code&gt;composer.json&lt;/code&gt; file if you use &lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composer&lt;/a&gt; to manage the dependencies of your project. Here is a minimal example of a &lt;code&gt;composer.json&lt;/code&gt; file that just defines a development-time dependency on PHPUnit 4.6 and vfsStream:</source>
          <target state="translated">&lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composer&lt;/a&gt;を使用してプロジェクトの依存関係を管理する場合は、 &lt;code&gt;mikey179/vfsStream&lt;/code&gt; への依存関係をプロジェクトの &lt;code&gt;composer.json&lt;/code&gt; ファイルに追加するだけです。PHPUnit 4.6とvfsStreamへの開発時の依存関係を定義する &lt;code&gt;composer.json&lt;/code&gt; ファイルの最小限の例を次に示します。</target>
        </trans-unit>
        <trans-unit id="8f0f366cccf3bf1ccdf95ff96c358d6ed87801e2" translate="yes" xml:space="preserve">
          <source>Since each test completely cleans the database you are not even required to re-create the database for each test-run. A permanently available database works perfectly.</source>
          <target state="translated">各テストはデータベースを完全にクリーンアップするので、テスト実行のたびにデータベースを再作成する必要はありません。恒久的に利用可能なデータベースは完璧に機能します。</target>
        </trans-unit>
        <trans-unit id="9a559e46e82b636d9ce68b3f4bf619caaf155ab7" translate="yes" xml:space="preserve">
          <source>Since the filesystem operations do not operate on the real filesystem anymore, cleanup operations in a &lt;code&gt;tearDown()&lt;/code&gt; method are no longer required.</source>
          <target state="translated">ファイルシステム操作は実際のファイルシステムでは動作しないため、 &lt;code&gt;tearDown()&lt;/code&gt; メソッドでのクリーンアップ操作は不要になりました。</target>
        </trans-unit>
        <trans-unit id="48b985aa9defb1014767284f29442091a4b1f8f6" translate="yes" xml:space="preserve">
          <source>Since there is always a first test that runs against the database you do not know exactly if there is already data in the tables. PHPUnit will execute a TRUNCATE against all the tables you specified to reset their status to empty.</source>
          <target state="translated">データベースに対して最初のテストを実行するのはいつものことなので、 テーブルにデータがあるかどうかは正確にはわかりません。PHPUnit は、指定したすべてのテーブルに対して TRUNCATE を実行して状態を空に戻します。</target>
        </trans-unit>
        <trans-unit id="9b9e30605cb93848800cb16fd2160fc8c4661110" translate="yes" xml:space="preserve">
          <source>Skipping Tests</source>
          <target state="translated">試験のスキップ</target>
        </trans-unit>
        <trans-unit id="01c53dd387a7008f94c8928fbdcf90905f57e52a" translate="yes" xml:space="preserve">
          <source>Skipping Tests using @requires</source>
          <target state="translated">requires を使ったテストのスキップ</target>
        </trans-unit>
        <trans-unit id="2122aebb6bf94dd0e5179b7fcfb3524929a168a0" translate="yes" xml:space="preserve">
          <source>Software Metrics for Code Coverage</source>
          <target state="translated">コードカバレッジのためのソフトウェアメトリクス</target>
        </trans-unit>
        <trans-unit id="889758f3af7c324b70421a258b74a8bf92644ba1" translate="yes" xml:space="preserve">
          <source>Sometimes a stubbed method should return different values depending on a predefined list of arguments. You can use &lt;code&gt;returnValueMap()&lt;/code&gt; to create a map that associates arguments with corresponding return values. See &lt;a href=&quot;#test-doubles-stubs-examples-stubtest5-php&quot;&gt;Example 8.7&lt;/a&gt; for an example.</source>
          <target state="translated">スタブメソッドは、事前定義された引数のリストに応じて異なる値を返す場合があります。あなたは使用することができます &lt;code&gt;returnValueMap()&lt;/code&gt; に対応する戻り値に関連付け引数というマップを作成します。&lt;a href=&quot;#test-doubles-stubs-examples-stubtest5-php&quot;&gt;例&lt;/a&gt;については、例8.7を参照してください。</target>
        </trans-unit>
        <trans-unit id="a7dada32df447612e3a066daedbf70cc04ef15e6" translate="yes" xml:space="preserve">
          <source>Sometimes a stubbed method should return different values depending on a predefined list of arguments. You can use &lt;code&gt;returnValueMap()&lt;/code&gt; to create a map that associates arguments with corresponding return values. See &lt;a href=&quot;test-doubles#test-doubles.stubs.examples.StubTest5.php&quot;&gt;Example 9.6&lt;/a&gt; for an example.</source>
          <target state="translated">時々、スタブ化されたメソッドは、事前定義された引数のリストに応じて異なる値を返す必要があります。あなたは使用することができます &lt;code&gt;returnValueMap()&lt;/code&gt; に対応する戻り値に関連付け引数というマップを作成します。&lt;a href=&quot;test-doubles#test-doubles.stubs.examples.StubTest5.php&quot;&gt;例&lt;/a&gt;については、例9.6を参照してください。</target>
        </trans-unit>
        <trans-unit id="e8a6a73c794d5c2f69ba8ea31755213bf290e926" translate="yes" xml:space="preserve">
          <source>Sometimes it is just plain hard to test the system under test (SUT) because it depends on other components that cannot be used in the test environment. This could be because they aren&amp;rsquo;t available, they will not return the results needed for the test or because executing them would have undesirable side effects. In other cases, our test strategy requires us to have more control or visibility of the internal behavior of the SUT.</source>
          <target state="translated">テスト環境で使用できない他のコンポーネントに依存しているため、テスト対象システム（SUT）をテストするのが非常に難しい場合があります。これは、それらが利用できない、テストに必要な結果を返さない、またはそれらを実行すると望ましくない副作用が発生するためである可能性があります。その他の場合、テスト戦略では、SUTの内部動作をより詳細に制御または可視化する必要があります。</target>
        </trans-unit>
        <trans-unit id="b237baf52124722804b7ce34390751ccffbc4334" translate="yes" xml:space="preserve">
          <source>Sometimes it is just plain hard to test the system under test (SUT) because it depends on other components that cannot be used in the test environment. This could be because they aren't available, they will not return the results needed for the test or because executing them would have undesirable side effects. In other cases, our test strategy requires us to have more control or visibility of the internal behavior of the SUT.</source>
          <target state="translated">テスト環境で使用できない他のコンポーネントに依存しているため、テスト対象のシステム(SUT)をテストすることが困難な場合があります。これは、それらが利用できない、テストに必要な結果が返ってこない、あるいは、それらを実行すると望ましくない副作用が生じるからかもしれません。他のケースでは、我々のテスト戦略では、SUTの内部動作をより制御したり、可視化したりする必要があります。</target>
        </trans-unit>
        <trans-unit id="dc68851fae68ce39e29663a9544d2ef1c9e62cf9" translate="yes" xml:space="preserve">
          <source>Sometimes you have blocks of code that you cannot test and that you may want to ignore during code coverage analysis. PHPUnit lets you do this using the &lt;code&gt;@codeCoverageIgnore&lt;/code&gt;, &lt;code&gt;@codeCoverageIgnoreStart&lt;/code&gt; and &lt;code&gt;@codeCoverageIgnoreEnd&lt;/code&gt; annotations as shown in &lt;a href=&quot;#code-coverage-analysis-ignoring-code-blocks-examples-sample-php&quot;&gt;Example 9.1&lt;/a&gt;.</source>
          <target state="translated">テストできないコードブロックがあり、コードカバレッジ分析中に無視したい場合があります。PHPUnitでは、&lt;a href=&quot;#code-coverage-analysis-ignoring-code-blocks-examples-sample-php&quot;&gt;例9.1に&lt;/a&gt;示すように、 &lt;code&gt;@codeCoverageIgnoreStart&lt;/code&gt; &lt;code&gt;@codeCoverageIgnore&lt;/code&gt; 、@ codeCoverageIgnoreStart、および &lt;code&gt;@codeCoverageIgnoreEnd&lt;/code&gt; アノテーションを使用してこれを行うことができます。</target>
        </trans-unit>
        <trans-unit id="4dc7e0be92362d6ab972d3a0cc8c56a413712ea4" translate="yes" xml:space="preserve">
          <source>Sometimes you have blocks of code that you cannot test and that you may want to ignore during code coverage analysis. PHPUnit lets you do this using the &lt;code&gt;@codeCoverageIgnore&lt;/code&gt;, &lt;code&gt;@codeCoverageIgnoreStart&lt;/code&gt; and &lt;code&gt;@codeCoverageIgnoreEnd&lt;/code&gt; annotations as shown in &lt;a href=&quot;code-coverage-analysis#code-coverage-analysis.ignoring-code-blocks.examples.Sample.php&quot;&gt;Example 11.1&lt;/a&gt;.</source>
          <target state="translated">テストできないコードブロックがあり、コードカバレッジ分析中に無視したい場合があります。PHPUnitでは、&lt;a href=&quot;code-coverage-analysis#code-coverage-analysis.ignoring-code-blocks.examples.Sample.php&quot;&gt;例11.1に&lt;/a&gt;示すように、 &lt;code&gt;@codeCoverageIgnoreStart&lt;/code&gt; &lt;code&gt;@codeCoverageIgnore&lt;/code&gt; 、@ codeCoverageIgnoreStart、および &lt;code&gt;@codeCoverageIgnoreEnd&lt;/code&gt; アノテーションを使用してこれを行うことができます。</target>
        </trans-unit>
        <trans-unit id="57724334772dfd11f76ce837572f96abaf56a198" translate="yes" xml:space="preserve">
          <source>Sometimes you want to assert that the execution of a method, for instance, generates an expected output (via &lt;code&gt;echo&lt;/code&gt; or &lt;code&gt;print&lt;/code&gt;, for example). The &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt; class uses PHP&amp;rsquo;s &lt;a href=&quot;http://www.php.net/manual/en/ref.outcontrol.php&quot;&gt;Output Buffering&lt;/a&gt; feature to provide the functionality that is necessary for this.</source>
          <target state="translated">たとえば、メソッドの実行によって期待される出力が生成されることを表明したい場合があります（たとえば、 &lt;code&gt;echo&lt;/code&gt; または &lt;code&gt;print&lt;/code&gt; を介して）。 &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt; クラスは、PHPの使用&lt;a href=&quot;http://www.php.net/manual/en/ref.outcontrol.php&quot;&gt;出力バッファリング&lt;/a&gt;このために必要な機能を提供する機能を。</target>
        </trans-unit>
        <trans-unit id="f004dcdd1b53cb8a142518c657d636752efa4edf" translate="yes" xml:space="preserve">
          <source>Sometimes you want to assert that the execution of a method, for instance, generates an expected output (via &lt;code&gt;echo&lt;/code&gt; or &lt;code&gt;print&lt;/code&gt;, for example). The &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt; class uses PHP's &lt;a href=&quot;http://www.php.net/manual/en/ref.outcontrol.php&quot;&gt;Output Buffering&lt;/a&gt; feature to provide the functionality that is necessary for this.</source>
          <target state="translated">たとえば、メソッドの実行が期待される出力を生成することを表明したい場合があります（たとえば、 &lt;code&gt;echo&lt;/code&gt; または &lt;code&gt;print&lt;/code&gt; を介して）。 &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt; クラスは、PHPの使用&lt;a href=&quot;http://www.php.net/manual/en/ref.outcontrol.php&quot;&gt;出力バッファリング&lt;/a&gt;このために必要な機能を提供する機能を。</target>
        </trans-unit>
        <trans-unit id="947027be32b60a8732729f813d638fc3b6223233" translate="yes" xml:space="preserve">
          <source>Sometimes you want to return one of the arguments of a method call (unchanged) as the result of a stubbed method call. &lt;a href=&quot;#test-doubles-stubs-examples-stubtest3-php&quot;&gt;Example 8.5&lt;/a&gt; shows how you can achieve this using &lt;code&gt;returnArgument()&lt;/code&gt; instead of &lt;code&gt;returnValue()&lt;/code&gt;.</source>
          <target state="translated">スタブされたメソッド呼び出しの結果として、メソッド呼び出しの引数の1つ（変更なし）を返したい場合があります。&lt;a href=&quot;#test-doubles-stubs-examples-stubtest3-php&quot;&gt;例8.5&lt;/a&gt;は、 &lt;code&gt;returnArgument()&lt;/code&gt; 代わりに &lt;code&gt;returnValue()&lt;/code&gt; を使用してこれを実現する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="f01ce7eb42c1dfd947d2feaf63974766480fbad0" translate="yes" xml:space="preserve">
          <source>Sometimes you want to return one of the arguments of a method call (unchanged) as the result of a stubbed method call. &lt;a href=&quot;test-doubles#test-doubles.stubs.examples.StubTest3.php&quot;&gt;Example 9.4&lt;/a&gt; shows how you can achieve this using &lt;code&gt;returnArgument()&lt;/code&gt; instead of &lt;code&gt;returnValue()&lt;/code&gt;.</source>
          <target state="translated">スタブされたメソッド呼び出しの結果として、メソッド呼び出しの引数の1つ（変更なし）を返したい場合があります。&lt;a href=&quot;test-doubles#test-doubles.stubs.examples.StubTest3.php&quot;&gt;例9.4&lt;/a&gt;は、 &lt;code&gt;returnArgument()&lt;/code&gt; 代わりに &lt;code&gt;returnValue()&lt;/code&gt; を使用してこれを実現する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="572909ffc6603da2d488956ee0cf668396c497be" translate="yes" xml:space="preserve">
          <source>Specifies an alternative description used when generating the agile documentation sentences.</source>
          <target state="translated">アジャイル文書の文章を生成する際に使用する代替記述を指定します。</target>
        </trans-unit>
        <trans-unit id="a0b943e40ca8b8962535e7b639cf420c561a9720" translate="yes" xml:space="preserve">
          <source>Specifies that the annotated test method covers all methods of a given class and its parent class(es).</source>
          <target state="translated">注釈付きテスト・メソッドが、指定されたクラスとその親クラスのすべてのメソッドをカバーすることを指定します。</target>
        </trans-unit>
        <trans-unit id="dbc9deeadb9733df2d5139f77fac6b7bb3790766" translate="yes" xml:space="preserve">
          <source>Specifies that the annotated test method covers all methods of a given class that are not private.</source>
          <target state="translated">注釈付きテスト・メソッドが、プライベートではない指定されたクラスのすべてのメソッドをカバーすることを指定します。</target>
        </trans-unit>
        <trans-unit id="14db3cffd5fa0ecb24c0c617d34cf83e169bdac2" translate="yes" xml:space="preserve">
          <source>Specifies that the annotated test method covers all methods of a given class that are not protected.</source>
          <target state="translated">注釈付きテスト・メソッドが、保護されていない指定されたクラスのすべてのメソッドをカバーすることを指定します。</target>
        </trans-unit>
        <trans-unit id="f592ef5a4e959fc6006813a2b32000fd2faef03d" translate="yes" xml:space="preserve">
          <source>Specifies that the annotated test method covers all methods of a given class that are not public.</source>
          <target state="translated">注釈付きテスト・メソッドが、パブリックではない指定されたクラスのすべてのメソッドをカバーすることを指定します。</target>
        </trans-unit>
        <trans-unit id="a64f2c5598e00ffa4e55fdf1bcfda44bf7487145" translate="yes" xml:space="preserve">
          <source>Specifies that the annotated test method covers all methods of a given class.</source>
          <target state="translated">注釈付きテスト・メソッドが、指定されたクラスのすべてのメソッドをカバーすることを指定します。</target>
        </trans-unit>
        <trans-unit id="b66e8de7b8ba694bedf044d94bc059858ff34bd6" translate="yes" xml:space="preserve">
          <source>Specifies that the annotated test method covers all private methods of a given class.</source>
          <target state="translated">注釈付きテスト・メソッドが、指定されたクラスのすべてのプライベート・メソッドをカバーすることを指定します。</target>
        </trans-unit>
        <trans-unit id="cf93cfb9230eccc73ee76c4de6db6b412951d737" translate="yes" xml:space="preserve">
          <source>Specifies that the annotated test method covers all protected methods of a given class.</source>
          <target state="translated">注釈付きテスト・メソッドが、指定されたクラスのすべての保護されたメソッドをカバーすることを指定します。</target>
        </trans-unit>
        <trans-unit id="83fc96175a9dd39088ba20dc9ced965ed4973258" translate="yes" xml:space="preserve">
          <source>Specifies that the annotated test method covers all public methods of a given class.</source>
          <target state="translated">注釈付きテスト・メソッドが、指定されたクラスのすべてのパブリック・メソッドをカバーすることを指定します。</target>
        </trans-unit>
        <trans-unit id="c996271ae7ea7cbca14f4750a8133fae4a300ef5" translate="yes" xml:space="preserve">
          <source>Specifies that the annotated test method covers the specified global function.</source>
          <target state="translated">アノテーションされたテスト メソッドが、指定されたグローバル関数をカバーすることを指定します。</target>
        </trans-unit>
        <trans-unit id="747dfb71c626dbded20ce18439ce17a6fc69d31b" translate="yes" xml:space="preserve">
          <source>Specifies that the annotated test method covers the specified method.</source>
          <target state="translated">注釈付きテスト メソッドが指定されたメソッドをカバーすることを指定します。</target>
        </trans-unit>
        <trans-unit id="9a8522512521cd6bbb2ba6838fd137db5d0b90c4" translate="yes" xml:space="preserve">
          <source>Specifies the &lt;code&gt;PHPUnit\Runner\TestSuiteLoader&lt;/code&gt; implementation to use.</source>
          <target state="translated">使用する &lt;code&gt;PHPUnit\Runner\TestSuiteLoader&lt;/code&gt; 実装を指定します。</target>
        </trans-unit>
        <trans-unit id="a256b72d28e9dc0ae291b39cd90018ef934dd727" translate="yes" xml:space="preserve">
          <source>Specifies the &lt;code&gt;PHPUnit_Runner_TestSuiteLoader&lt;/code&gt; implementation to use.</source>
          <target state="translated">使用する &lt;code&gt;PHPUnit_Runner_TestSuiteLoader&lt;/code&gt; 実装を指定します。</target>
        </trans-unit>
        <trans-unit id="783a395d499fcb5444bbfb933871f9c20e3cee6b" translate="yes" xml:space="preserve">
          <source>Specifies the result printer to use. The printer class must extend &lt;code&gt;PHPUnit\Util\Printer&lt;/code&gt; and implement the &lt;code&gt;PHPUnit\Framework\TestListener&lt;/code&gt; interface.</source>
          <target state="translated">使用する結果プリンターを指定します。プリンタークラスは、 &lt;code&gt;PHPUnit\Util\Printer&lt;/code&gt; を拡張し、 &lt;code&gt;PHPUnit\Framework\TestListener&lt;/code&gt; インターフェースを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="ad3ed3a080dc26fa96f085a819c4f579cd64af33" translate="yes" xml:space="preserve">
          <source>Specifies the result printer to use. The printer class must extend &lt;code&gt;PHPUnit_Util_Printer&lt;/code&gt; and implement the &lt;code&gt;PHPUnit\Framework\TestListener&lt;/code&gt; interface.</source>
          <target state="translated">使用する結果プリンターを指定します。プリンタークラスは、 &lt;code&gt;PHPUnit_Util_Printer&lt;/code&gt; を拡張し、 &lt;code&gt;PHPUnit\Framework\TestListener&lt;/code&gt; インターフェイスを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="ed727bba739e8581316eab50b5f960c359a4cbe7" translate="yes" xml:space="preserve">
          <source>Specify one or more tables in your database by table name (actual dataset)</source>
          <target state="translated">データベース内の1つ以上のテーブルをテーブル名で指定する (実際のデータセット)</target>
        </trans-unit>
        <trans-unit id="192e805e289c654000897a49602f0f87a9106b59" translate="yes" xml:space="preserve">
          <source>Specify the expected dataset in your preferred format (YAML, XML, ..)</source>
          <target state="translated">お好みのフォーマット(YAML,XML,...)で、期待するデータセットを指定してください。</target>
        </trans-unit>
        <trans-unit id="4ae42301d536a8378600e878b848c0a18a46458a" translate="yes" xml:space="preserve">
          <source>Specifying Covered Code Parts</source>
          <target state="translated">対象となるコード部品の指定</target>
        </trans-unit>
        <trans-unit id="152c38cebb53cb3cfce38c3ec2bae340b7eee4aa" translate="yes" xml:space="preserve">
          <source>Specifying Covered Methods</source>
          <target state="translated">対象となる方法の指定</target>
        </trans-unit>
        <trans-unit id="ae66f9e53b94aa1d926ef1fe9f0b13ca45b0afcf" translate="yes" xml:space="preserve">
          <source>Static vs. Non-Static Usage of Assertion Methods</source>
          <target state="translated">アサーション・メソッドの静的な使用法と非静的な使用法</target>
        </trans-unit>
        <trans-unit id="fa5e66805e285bd033c817b0caa08e69f5c57bbe" translate="yes" xml:space="preserve">
          <source>Stop execution upon first error or failure.</source>
          <target state="translated">最初のエラーまたは失敗時に実行を停止します。</target>
        </trans-unit>
        <trans-unit id="62b9c1c735c341daae5e08a4bb2c16603d724f6e" translate="yes" xml:space="preserve">
          <source>Stop execution upon first error.</source>
          <target state="translated">最初のエラーが発生した時点で実行を停止します。</target>
        </trans-unit>
        <trans-unit id="37fe4a1127ce0fceff431a3ea857b60d5f207460" translate="yes" xml:space="preserve">
          <source>Stop execution upon first incomplete test.</source>
          <target state="translated">最初の不完全なテストで実行を停止します。</target>
        </trans-unit>
        <trans-unit id="7676f1a62b448fd392d7c5f653745c97268f89df" translate="yes" xml:space="preserve">
          <source>Stop execution upon first risky test.</source>
          <target state="translated">最初のリスキーなテストで実行を停止します。</target>
        </trans-unit>
        <trans-unit id="faf6c0967380807a3610b25a54293422a6f2f059" translate="yes" xml:space="preserve">
          <source>Stop execution upon first skipped test.</source>
          <target state="translated">最初のテストをスキップした時点で実行を停止します。</target>
        </trans-unit>
        <trans-unit id="d368e8bc583521944131c688e267d5d16c878524" translate="yes" xml:space="preserve">
          <source>Stubbing and Mocking Web Services</source>
          <target state="translated">ウェブサービスのスタブとモック</target>
        </trans-unit>
        <trans-unit id="3107408a50c756bdc03dcf7d5aed6d74eb0c9e3e" translate="yes" xml:space="preserve">
          <source>Stubs</source>
          <target state="translated">Stubs</target>
        </trans-unit>
        <trans-unit id="130a26082452b602de072ae244a14d7c656d4205" translate="yes" xml:space="preserve">
          <source>Subclass PHPUnit\Framework\TestCase</source>
          <target state="translated">Subclass PHPUnitFramework</target>
        </trans-unit>
        <trans-unit id="ad01c5f01996376e20d26c236754d61c656c65b9" translate="yes" xml:space="preserve">
          <source>Subclass PHPUnit_Extensions_TestDecorator</source>
          <target state="translated">PHPUnit_Extensions_TestDecorator のサブクラス</target>
        </trans-unit>
        <trans-unit id="c7acd44159798a4d30afd05442f60a36487a3d9d" translate="yes" xml:space="preserve">
          <source>Super-global variables are built-in variables that are always available in all scopes.</source>
          <target state="translated">スーパーグローバル変数は、すべてのスコープで常に使用できる組み込み変数です。</target>
        </trans-unit>
        <trans-unit id="5823fd46abd94efb287392a640ac7d2b2dfd49dd" translate="yes" xml:space="preserve">
          <source>Supported Vendors for Database Testing</source>
          <target state="translated">データベーステストでサポートされているベンダー</target>
        </trans-unit>
        <trans-unit id="751497c7a111ae783226a5c51a2252147106327d" translate="yes" xml:space="preserve">
          <source>Table 1.1 Constraints</source>
          <target state="translated">表1.1 制約事項</target>
        </trans-unit>
        <trans-unit id="20441380e2e00a65f819c14c0ba2e7ffd49070c1" translate="yes" xml:space="preserve">
          <source>Table 2.1 Methods for testing output</source>
          <target state="translated">表 2.1 出力のテスト方法</target>
        </trans-unit>
        <trans-unit id="b475f5a043222840a1c2e9286ab4fd8ca098fbb6" translate="yes" xml:space="preserve">
          <source>Table 2.2 Annotations for specifying which methods are covered by a test</source>
          <target state="translated">表 2.2.2 テストの対象となるメソッドを指定するためのアノテーション</target>
        </trans-unit>
        <trans-unit id="4a605760e7d3883e2c9226c63d51c3684a477c78" translate="yes" xml:space="preserve">
          <source>Table 7.1 API for Incomplete Tests</source>
          <target state="translated">表7.1 不完全試験用API</target>
        </trans-unit>
        <trans-unit id="beb54e43e0ab341c856d4e09eb9933f2d9abb37f" translate="yes" xml:space="preserve">
          <source>Table 7.2 API for Skipping Tests</source>
          <target state="translated">表7.2 テストをスキップするためのAPI</target>
        </trans-unit>
        <trans-unit id="de760843ce8e32c78b51faf77090fc5d0d9b1850" translate="yes" xml:space="preserve">
          <source>Table 7.3 Possible @requires usages</source>
          <target state="translated">表 7.3 考えられる @requires の使用法</target>
        </trans-unit>
        <trans-unit id="75f735f731154e5d080f667c9eb09d49a952fc61" translate="yes" xml:space="preserve">
          <source>Table 8.1 Matchers</source>
          <target state="translated">表 8.1 マッチャ</target>
        </trans-unit>
        <trans-unit id="0b28e087c84f9486e767387a394931771cdb6eca" translate="yes" xml:space="preserve">
          <source>Teardown</source>
          <target state="translated">Teardown</target>
        </trans-unit>
        <trans-unit id="36dd5675667d3929fbc53aebd125834b78fd5711" translate="yes" xml:space="preserve">
          <source>Test Dependencies</source>
          <target state="translated">テストの依存性</target>
        </trans-unit>
        <trans-unit id="8ca46ef63a3cf34638b522cfdf607fca7e78d4c0" translate="yes" xml:space="preserve">
          <source>Test Doubles</source>
          <target state="translated">テストダブルス</target>
        </trans-unit>
        <trans-unit id="60fabbf6eed3616b6ab797cab1b4dbb8648f3e66" translate="yes" xml:space="preserve">
          <source>Test Execution Timeout</source>
          <target state="translated">テスト実行タイムアウト</target>
        </trans-unit>
        <trans-unit id="dddb3d7341ecdc71821fdf432eeb7abfba4bc948" translate="yes" xml:space="preserve">
          <source>Test Listeners</source>
          <target state="translated">テストリスナー</target>
        </trans-unit>
        <trans-unit id="98ade78abe5775e572703302a9d9af51436a6b7a" translate="yes" xml:space="preserve">
          <source>Test Results (XML)</source>
          <target state="translated">テスト結果(XML</target>
        </trans-unit>
        <trans-unit id="d5a326813d73a0152b05ec653cd778de1de65124" translate="yes" xml:space="preserve">
          <source>Test Suites</source>
          <target state="translated">テストスイート</target>
        </trans-unit>
        <trans-unit id="37733d7d69cdf89090c38da2a4832f20c9e04c2d" translate="yes" xml:space="preserve">
          <source>Test code should be as short and precise as possible for several reasons:</source>
          <target state="translated">テストコードは、いくつかの理由から可能な限り短く正確なものにする必要があります。</target>
        </trans-unit>
        <trans-unit id="30f86836586153a2344122ec13684c9be72236d8" translate="yes" xml:space="preserve">
          <source>TestDox</source>
          <target state="translated">TestDox</target>
        </trans-unit>
        <trans-unit id="30271fdd4bbccc7ac4a8a31a93f85e22eadae576" translate="yes" xml:space="preserve">
          <source>TestNamespace\TestCaseClass::testMethod</source>
          <target state="translated">TestNamespace\TestCaseClass::testMethod</target>
        </trans-unit>
        <trans-unit id="47b97dc2236a95b7bf474f628fbbfc6afc41ba53" translate="yes" xml:space="preserve">
          <source>TestNamespace\TestCaseClass::testMethod with data set &quot;my named data&quot;</source>
          <target state="translated">TestNamespaceTestCaseClass::testMethod with data set &quot;my named data&quot;</target>
        </trans-unit>
        <trans-unit id="1486df7a08312babc0ab0c36aaed3a196db1f90c" translate="yes" xml:space="preserve">
          <source>TestNamespace\TestCaseClass::testMethod with data set #0</source>
          <target state="translated">TestNamespaceTestCaseClass::testMethod with data set #0.</target>
        </trans-unit>
        <trans-unit id="40515ef277ef1a89e8fe08934c46dea0238f7ade" translate="yes" xml:space="preserve">
          <source>Testing Exceptions</source>
          <target state="translated">例外のテスト</target>
        </trans-unit>
        <trans-unit id="eb9bc6f37773b470b19307a114b1e5643bc2c22f" translate="yes" xml:space="preserve">
          <source>Testing Output</source>
          <target state="translated">テスト出力</target>
        </trans-unit>
        <trans-unit id="f379bf7dbb840672dcd72036531284a2dc880805" translate="yes" xml:space="preserve">
          <source>Testing PHP Errors</source>
          <target state="translated">PHP のエラーをテストする</target>
        </trans-unit>
        <trans-unit id="ab3b4488f78be97f38374aa3d4c6d6ca4ca4c906" translate="yes" xml:space="preserve">
          <source>Testing PHP Errors, Warnings, and Notices</source>
          <target state="translated">PHP のエラー、警告、通知のテスト</target>
        </trans-unit>
        <trans-unit id="9ac78d923414adf5446f250b21421f16d2ecace7" translate="yes" xml:space="preserve">
          <source>Testing Practices</source>
          <target state="translated">テストの実践</target>
        </trans-unit>
        <trans-unit id="12ca4d589bcd08a7949ab4709614718f1e7b0490" translate="yes" xml:space="preserve">
          <source>Testing gives code authors and reviewers confidence that patches produce the correct results.</source>
          <target state="translated">テストを行うことで、コードの作者やレビュアーは、パッチが正しい結果を生み出すという確信を持つことができます。</target>
        </trans-unit>
        <trans-unit id="985b343175dcc48aa07596ccb6a17f731a90eeeb" translate="yes" xml:space="preserve">
          <source>Testing provides a good way to catch regressions quickly, and to make sure that no regression will be repeated twice.</source>
          <target state="translated">テストを行うことで、回帰を素早くキャッチし、回帰が2回繰り返されないようにするための良い方法を提供します。</target>
        </trans-unit>
        <trans-unit id="3a7d907119da653effcca1ec7c2406dbd8273d84" translate="yes" xml:space="preserve">
          <source>Testing the database requires you to hook into at least the setup and teardown to clean-up and write the required fixture data into your tables. However, the database extension has good reason to revert the four stages in a database test to resemble the following workflow that is executed for each single test:</source>
          <target state="translated">データベースをテストするには、少なくともセットアップとティアダウンにフックしてクリーンアップし、必要なフィクスチャデータをテーブルに書き込む必要があります。しかし、データベース拡張機能には、データベーステストの4つのステージを、単一のテストごとに実行される次のようなワークフローに似せて戻す正当な理由があります。</target>
        </trans-unit>
        <trans-unit id="e889f827f82246ecd04ad1861bc93af8e3385c3f" translate="yes" xml:space="preserve">
          <source>Tests can be selected for execution based on groups using the &lt;code&gt;--group&lt;/code&gt; and &lt;code&gt;--exclude-group&lt;/code&gt; options of the command-line test runner or using the respective directives of the XML configuration file.</source>
          <target state="translated">コマンドラインテストランナーの &lt;code&gt;--group&lt;/code&gt; および &lt;code&gt;--exclude-group&lt;/code&gt; オプションを使用するか、XML構成ファイルのそれぞれのディレクティブを使用して、グループに基づいてテストを実行するように選択できます。</target>
        </trans-unit>
        <trans-unit id="ff8ccced5d49268612f4e12fecd13a3c0ea42964" translate="yes" xml:space="preserve">
          <source>Tests need to be explicitly annotated by either &lt;code&gt;@small&lt;/code&gt;, &lt;code&gt;@medium&lt;/code&gt;, or &lt;code&gt;@large&lt;/code&gt; to enable run time limits.</source>
          <target state="translated">実行時間制限を有効にするには、 &lt;code&gt;@medium&lt;/code&gt; に &lt;code&gt;@small&lt;/code&gt; 、@medium、または &lt;code&gt;@large&lt;/code&gt; のいずれかで明示的に注釈を付ける必要があります。</target>
        </trans-unit>
        <trans-unit id="32b7add19944464840ed23bf15f0db5e22d1c19d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://php.net/manual/en/phar.installation.php&quot;&gt;phar&lt;/a&gt; extension is required for using PHP Archives (PHAR).</source>
          <target state="translated">PHPアーカイブ（PHAR）を使用するには、&lt;a href=&quot;http://php.net/manual/en/phar.installation.php&quot;&gt;phar&lt;/a&gt;拡張モジュールが必要です。</target>
        </trans-unit>
        <trans-unit id="10757842c7f604407097f8e09324720d9e126fa7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.doctrine-project.org&quot;&gt;Doctrine 2 project&lt;/a&gt;'s test suite, for example, currently has a test suite of about 1000 tests where nearly half of them accesses the database and still runs in 15 seconds against a MySQL database on a standard desktop computer.</source>
          <target state="translated">&lt;a href=&quot;http://www.doctrine-project.org&quot;&gt;ドクトリン2プロジェクト&lt;/a&gt;のテストスイートには、例えば、現在のほぼ半分にそれらのデータベースにアクセスし、まだ標準的なデスクトップコンピュータ上のMySQLデータベースに対して15秒で走る約1000回のテストのテストスイートを持っています。</target>
        </trans-unit>
        <trans-unit id="07934fde393c219cfc48b588b42c8f8ae9441980" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$GLOBALS&lt;/code&gt; variable is a so-called &lt;em&gt;super-global&lt;/em&gt; variable.</source>
          <target state="translated">&lt;code&gt;$GLOBALS&lt;/code&gt; 変数は、いわゆるである&lt;em&gt;スーパーグローバル&lt;/em&gt;変数。</target>
        </trans-unit>
        <trans-unit id="d1bebee9626af32056db87fd96fa537b9aeebe76" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$expected&lt;/code&gt; object must be compatible with this declared type</source>
          <target state="translated">&lt;code&gt;$expected&lt;/code&gt; オブジェクトは、この宣言された型と互換性がなければなりません</target>
        </trans-unit>
        <trans-unit id="933793c342aa1368517d8339c85bc25b1e2cd10e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$index&lt;/code&gt; parameter for the &lt;code&gt;at()&lt;/code&gt; matcher refers to the index, starting at zero, in &lt;em&gt;all method invocations&lt;/em&gt; for a given mock object. Exercise caution when using this matcher as it can lead to brittle tests which are too closely tied to specific implementation details.</source>
          <target state="translated">&lt;code&gt;at()&lt;/code&gt; マッチャーの &lt;code&gt;$index&lt;/code&gt; パラメーターは、特定のモックオブジェクトの&lt;em&gt;すべてのメソッド呼び出し&lt;/em&gt;で、ゼロから始まるインデックスを参照します。このマッチャーを使用する場合は、特定の実装の詳細と密接に関連している脆弱なテストにつながる可能性があるため、注意が必要です。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f5d8adc102d09cef0f4e53edc494cc4388b86fc1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;arguments&amp;gt;&lt;/code&gt; Element</source>
          <target state="translated">&lt;code&gt;&amp;lt;arguments&amp;gt;&lt;/code&gt; 要素</target>
        </trans-unit>
        <trans-unit id="85d7f414d4d515b85680ec9205c34778d385e9cd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;arguments&amp;gt;&lt;/code&gt; element can be used to configure a single &lt;code&gt;&amp;lt;extension&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;arguments&amp;gt;&lt;/code&gt; 要素は、単一構成するために使用することができます &lt;code&gt;&amp;lt;extension&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2b4d1a1ab721c2807e3a78c89d44b649bbe89f57" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;clover&amp;gt;&lt;/code&gt; Element</source>
          <target state="translated">&lt;code&gt;&amp;lt;clover&amp;gt;&lt;/code&gt; 要素</target>
        </trans-unit>
        <trans-unit id="0a026763819b08dc2c037f2497da04ec3ddf2f7b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;const&amp;gt;&lt;/code&gt; Element</source>
          <target state="translated">&lt;code&gt;&amp;lt;const&amp;gt;&lt;/code&gt; 要素</target>
        </trans-unit>
        <trans-unit id="139e2f1477b9fb915d899186769d4573432b0b96" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;cookie&amp;gt;&lt;/code&gt; Element</source>
          <target state="translated">&lt;code&gt;&amp;lt;cookie&amp;gt;&lt;/code&gt; 要素</target>
        </trans-unit>
        <trans-unit id="d9b66eb292708ca40288508eb22856962200914e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;coverage&amp;gt;&lt;/code&gt; Element</source>
          <target state="translated">&lt;code&gt;&amp;lt;coverage&amp;gt;&lt;/code&gt; 要素</target>
        </trans-unit>
        <trans-unit id="bc3de955cba5e2a8dde3ba033eccea3d6d363ea0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;coverage&amp;gt;&lt;/code&gt; element and its children can be used to configure code coverage:</source>
          <target state="translated">&lt;code&gt;&amp;lt;coverage&amp;gt;&lt;/code&gt; 要素とその子は、configureのコードカバレッジに使用することができます。</target>
        </trans-unit>
        <trans-unit id="9211f20fa709963065670d3fb38a757251926054" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;crap4j&amp;gt;&lt;/code&gt; Element</source>
          <target state="translated">&lt;code&gt;&amp;lt;crap4j&amp;gt;&lt;/code&gt; 要素</target>
        </trans-unit>
        <trans-unit id="8b523eb6d6e800b3f4620615081d8a51ba5ab6ae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;directory&amp;gt;&lt;/code&gt; Element</source>
          <target state="translated">&lt;code&gt;&amp;lt;directory&amp;gt;&lt;/code&gt; 要素</target>
        </trans-unit>
        <trans-unit id="513644a7c2022044009c43861919c312cc8862d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;env&amp;gt;&lt;/code&gt; Element</source>
          <target state="translated">&lt;code&gt;&amp;lt;env&amp;gt;&lt;/code&gt; 要素</target>
        </trans-unit>
        <trans-unit id="2ffeccc4d27786864bd736dcc1bd63e23543226b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;exclude&amp;gt;&lt;/code&gt; Element</source>
          <target state="translated">&lt;code&gt;&amp;lt;exclude&amp;gt;&lt;/code&gt; 要素</target>
        </trans-unit>
        <trans-unit id="4093aa6b0afa20d5cdd871a180509fff7f29a265" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;extension&amp;gt;&lt;/code&gt; Element</source>
          <target state="translated">&lt;code&gt;&amp;lt;extension&amp;gt;&lt;/code&gt; 要素</target>
        </trans-unit>
        <trans-unit id="03b1595bf3b4128181b814e619caa909dda60680" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;extensions&amp;gt;&lt;/code&gt; Element</source>
          <target state="translated">&lt;code&gt;&amp;lt;extensions&amp;gt;&lt;/code&gt; 要素</target>
        </trans-unit>
        <trans-unit id="540b2b02c5b4e49dba08617edd027f6dd651ed7f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;extensions&amp;gt;&lt;/code&gt; element and its &lt;code&gt;&amp;lt;extension&amp;gt;&lt;/code&gt; children can be used to register test runner extensions.</source>
          <target state="translated">&lt;code&gt;&amp;lt;extensions&amp;gt;&lt;/code&gt; 要素とその &lt;code&gt;&amp;lt;extension&amp;gt;&lt;/code&gt; 子供たちはテストランナー拡張を登録するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="bb60d0cdfb15155297a1801fa10b8489776b318e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; Element</source>
          <target state="translated">&lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; 要素</target>
        </trans-unit>
        <trans-unit id="72390b01283e5418626f23b66ba13e9f2f8b1dc5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;files&amp;gt;&lt;/code&gt; Element</source>
          <target state="translated">&lt;code&gt;&amp;lt;files&amp;gt;&lt;/code&gt; 要素</target>
        </trans-unit>
        <trans-unit id="900d34630e1c1ed1e4b46aec6e78885aa098fd75" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;filter&amp;gt;&lt;/code&gt; element and its children can be used to configure the whitelist for the code coverage reporting.</source>
          <target state="translated">&lt;code&gt;&amp;lt;filter&amp;gt;&lt;/code&gt; 要素とその子は、コードカバレッジレポートのためのホワイトリストを設定するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="a3959c668deb0e146b9b754e28152bdcd7a10ac0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;get&amp;gt;&lt;/code&gt; Element</source>
          <target state="translated">&lt;code&gt;&amp;lt;get&amp;gt;&lt;/code&gt; 要素</target>
        </trans-unit>
        <trans-unit id="e9e6fb8ccd6d14ccfba4eb79c3c0c3c04b805c0a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;groups&amp;gt;&lt;/code&gt; Element</source>
          <target state="translated">&lt;code&gt;&amp;lt;groups&amp;gt;&lt;/code&gt; 要素</target>
        </trans-unit>
        <trans-unit id="a7889cebb07ad03a7434e59e176e1cda83779008" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;groups&amp;gt;&lt;/code&gt; element and its &lt;code&gt;&amp;lt;include&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;exclude&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;group&amp;gt;&lt;/code&gt; children can be used to select groups of tests marked with the &lt;code&gt;@group&lt;/code&gt; annotation (documented in &lt;a href=&quot;annotations#appendixes-annotations-group&quot;&gt;@group&lt;/a&gt;) that should (not) be run:</source>
          <target state="translated">&lt;code&gt;&amp;lt;groups&amp;gt;&lt;/code&gt; 要素とその &lt;code&gt;&amp;lt;include&amp;gt;&lt;/code&gt; の、 &lt;code&gt;&amp;lt;exclude&amp;gt;&lt;/code&gt; 、および &lt;code&gt;&amp;lt;group&amp;gt;&lt;/code&gt; 子供が付いたテストのグループを選択するために使用することができ &lt;code&gt;@group&lt;/code&gt; の（に記載の注釈&lt;a href=&quot;annotations#appendixes-annotations-group&quot;&gt;@group&lt;/a&gt;実行でき（ない）必要があります）：</target>
        </trans-unit>
        <trans-unit id="7d91061b9543b9732b944bf26bfd640c76cd336b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;groups&amp;gt;&lt;/code&gt; element and its &lt;code&gt;&amp;lt;include&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;exclude&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;group&amp;gt;&lt;/code&gt; children can be used to select groups of tests marked with the &lt;code&gt;@group&lt;/code&gt; annotation (documented in &lt;a href=&quot;appendixes.annotations#appendixes.annotations.group&quot;&gt;the section called &amp;ldquo;@group&amp;rdquo;&lt;/a&gt;) that should (not) be run.</source>
          <target state="translated">&lt;code&gt;&amp;lt;groups&amp;gt;&lt;/code&gt; 要素とその &lt;code&gt;&amp;lt;include&amp;gt;&lt;/code&gt; の、 &lt;code&gt;&amp;lt;exclude&amp;gt;&lt;/code&gt; 、および &lt;code&gt;&amp;lt;group&amp;gt;&lt;/code&gt; 子供が付いたテストのグループを選択するために使用することができ &lt;code&gt;@group&lt;/code&gt; の（に記載の注釈&lt;a href=&quot;appendixes.annotations#appendixes.annotations.group&quot;&gt;「@group」と呼ばれるセクションを&lt;/a&gt;）すべき（しません）実行されます。</target>
        </trans-unit>
        <trans-unit id="5a161a715347d23f919215fd6c6d19534e86dca1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; Element</source>
          <target state="translated">&lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; 要素</target>
        </trans-unit>
        <trans-unit id="0984b3ee5da0b663058897e0a56b7e526be6a573" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;include&amp;gt;&lt;/code&gt; Element</source>
          <target state="translated">&lt;code&gt;&amp;lt;include&amp;gt;&lt;/code&gt; の要素</target>
        </trans-unit>
        <trans-unit id="d30684f0bfc64aae3a8c583760b7e28836f122e9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;includePath&amp;gt;&lt;/code&gt; Element</source>
          <target state="translated">&lt;code&gt;&amp;lt;includePath&amp;gt;&lt;/code&gt; 要素</target>
        </trans-unit>
        <trans-unit id="7e02dbbe54c9eedad87c37f5799ecad58254e292" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;ini&amp;gt;&lt;/code&gt; Element</source>
          <target state="translated">&lt;code&gt;&amp;lt;ini&amp;gt;&lt;/code&gt; 要素</target>
        </trans-unit>
        <trans-unit id="0667ca34eca0f2d97ffa721e32563608b34fc651" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;junit&amp;gt;&lt;/code&gt; Element</source>
          <target state="translated">&lt;code&gt;&amp;lt;junit&amp;gt;&lt;/code&gt; 要素</target>
        </trans-unit>
        <trans-unit id="5ec6aa3075fdccb3819205d7291d08aafe998911" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;listener&amp;gt;&lt;/code&gt; Element</source>
          <target state="translated">&lt;code&gt;&amp;lt;listener&amp;gt;&lt;/code&gt; 要素</target>
        </trans-unit>
        <trans-unit id="1f7884d396c363230f0255ab01d1d4231b6e2d6a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;listeners&amp;gt;&lt;/code&gt; Element</source>
          <target state="translated">&lt;code&gt;&amp;lt;listeners&amp;gt;&lt;/code&gt; 要素</target>
        </trans-unit>
        <trans-unit id="508a8036917f62abd4cc4fa2acf1622b228ad0df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;listeners&amp;gt;&lt;/code&gt; element and its &lt;code&gt;&amp;lt;listener&amp;gt;&lt;/code&gt; children can be used to attach additional test listeners to the test execution.</source>
          <target state="translated">&lt;code&gt;&amp;lt;listeners&amp;gt;&lt;/code&gt; 要素とその &lt;code&gt;&amp;lt;listener&amp;gt;&lt;/code&gt; 子どもたちは、テスト実行に追加のテストリスナーを取り付けるために使用することができます。</target>
        </trans-unit>
        <trans-unit id="98fe5b5fb16640c3633cca41c468197217e10904" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;logging&amp;gt;&lt;/code&gt; Element</source>
          <target state="translated">&lt;code&gt;&amp;lt;logging&amp;gt;&lt;/code&gt; 要素</target>
        </trans-unit>
        <trans-unit id="313f204e5017217c537dcdd0d4f6816442884103" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;logging&amp;gt;&lt;/code&gt; element and its &lt;code&gt;&amp;lt;log&amp;gt;&lt;/code&gt; children can be used to configure the logging of the test execution.</source>
          <target state="translated">&lt;code&gt;&amp;lt;logging&amp;gt;&lt;/code&gt; 要素とその &lt;code&gt;&amp;lt;log&amp;gt;&lt;/code&gt; 子供たちは、テスト実行のログを設定するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="c2b76701000bbe3dfb78191de450b144dce12713" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;logging&amp;gt;&lt;/code&gt; element and its children can be used to configure the logging of the test execution.</source>
          <target state="translated">&lt;code&gt;&amp;lt;logging&amp;gt;&lt;/code&gt; 要素とその子は、テスト実行のログを設定するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="ffa8c820126f2d8c8104019e2dc9b714290aa550" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;php&amp;gt;&lt;/code&gt; Element</source>
          <target state="translated">&lt;code&gt;&amp;lt;php&amp;gt;&lt;/code&gt; 要素</target>
        </trans-unit>
        <trans-unit id="0a3c5961dfdad9711e235937fd66a0701353fed3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;php&amp;gt;&lt;/code&gt; element and its children can be used to configure PHP settings, constants, and global variables. It can also be used to prepend the &lt;code&gt;include_path&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;php&amp;gt;&lt;/code&gt; 要素とその子は、configureのPHPの設定、定数、およびグローバル変数に使用することができます。 &lt;code&gt;include_path&lt;/code&gt; の前に付けることもできます。</target>
        </trans-unit>
        <trans-unit id="4e978b01c22c1c05f4c679e7ec109c7ad14b6385" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;phpunit&amp;gt;&lt;/code&gt; Element</source>
          <target state="translated">&lt;code&gt;&amp;lt;phpunit&amp;gt;&lt;/code&gt; 要素</target>
        </trans-unit>
        <trans-unit id="22ccaf3b469277806a92ba947c74e3a3936479b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;post&amp;gt;&lt;/code&gt; Element</source>
          <target state="translated">&lt;code&gt;&amp;lt;post&amp;gt;&lt;/code&gt; 要素</target>
        </trans-unit>
        <trans-unit id="1f3c9cf46314637dac9b05b9be5c41003f3419d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;report&amp;gt;&lt;/code&gt; Element</source>
          <target state="translated">&lt;code&gt;&amp;lt;report&amp;gt;&lt;/code&gt; 要素</target>
        </trans-unit>
        <trans-unit id="d56bf347231b8da63f449d4a6faf0d29b19ae2d1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;request&amp;gt;&lt;/code&gt; Element</source>
          <target state="translated">&lt;code&gt;&amp;lt;request&amp;gt;&lt;/code&gt; 要素</target>
        </trans-unit>
        <trans-unit id="32a37f1f6edbe3be428764a888d2e80f98598417" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;server&amp;gt;&lt;/code&gt; Element</source>
          <target state="translated">&lt;code&gt;&amp;lt;server&amp;gt;&lt;/code&gt; 要素</target>
        </trans-unit>
        <trans-unit id="93d989b950ac436ae297cafcd6c49a06eaece600" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;teamcity&amp;gt;&lt;/code&gt; Element</source>
          <target state="translated">&lt;code&gt;&amp;lt;teamcity&amp;gt;&lt;/code&gt; 要素</target>
        </trans-unit>
        <trans-unit id="85064f796c95ad6a78c851ba76779a62d1a292bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;testdoxGroups&amp;gt;&lt;/code&gt; Element</source>
          <target state="translated">&lt;code&gt;&amp;lt;testdoxGroups&amp;gt;&lt;/code&gt; 要素</target>
        </trans-unit>
        <trans-unit id="2526f58806fb5fb94c05ef7bceb4bc561d1011f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;testdoxHtml&amp;gt;&lt;/code&gt; Element</source>
          <target state="translated">&lt;code&gt;&amp;lt;testdoxHtml&amp;gt;&lt;/code&gt; 要素</target>
        </trans-unit>
        <trans-unit id="b4fef5a31ef2a15792f26f1b2437bda07b3c7782" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;testdoxText&amp;gt;&lt;/code&gt; Element</source>
          <target state="translated">&lt;code&gt;&amp;lt;testdoxText&amp;gt;&lt;/code&gt; 要素</target>
        </trans-unit>
        <trans-unit id="a55cb0a1d7b022203a0609dc030c0fef974014ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;testdoxXml&amp;gt;&lt;/code&gt; Element</source>
          <target state="translated">&lt;code&gt;&amp;lt;testdoxXml&amp;gt;&lt;/code&gt; 要素</target>
        </trans-unit>
        <trans-unit id="9bd6d2e3e98ee678998194175e24029b381a1109" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;testsuite&amp;gt;&lt;/code&gt; Element</source>
          <target state="translated">&lt;code&gt;&amp;lt;testsuite&amp;gt;&lt;/code&gt; 要素</target>
        </trans-unit>
        <trans-unit id="379515331e5e059292c29cfd3f4a3f68e9562bcb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;testsuites&amp;gt;&lt;/code&gt; Element</source>
          <target state="translated">&lt;code&gt;&amp;lt;testsuites&amp;gt;&lt;/code&gt; 要素</target>
        </trans-unit>
        <trans-unit id="471072cbaacaef945753828f7bf3fd63fd5c3688" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;testsuites&amp;gt;&lt;/code&gt; element and its one or more &lt;code&gt;&amp;lt;testsuite&amp;gt;&lt;/code&gt; children can be used to compose a test suite out of test suites and test cases.</source>
          <target state="translated">&lt;code&gt;&amp;lt;testsuites&amp;gt;&lt;/code&gt; 要素とその一つ以上の &lt;code&gt;&amp;lt;testsuite&amp;gt;&lt;/code&gt; 子供たちはテストスイートとテストケースのテストスイートを構成するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="97525d089b9d8b12517446f4cad5c456077b53ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;text&amp;gt;&lt;/code&gt; Element</source>
          <target state="translated">&lt;code&gt;&amp;lt;text&amp;gt;&lt;/code&gt; 要素</target>
        </trans-unit>
        <trans-unit id="997269fbe41e52adce4e979708337b4af77dc7b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;var&amp;gt;&lt;/code&gt; Element</source>
          <target state="translated">&lt;code&gt;&amp;lt;var&amp;gt;&lt;/code&gt; 要素</target>
        </trans-unit>
        <trans-unit id="bce82e98b1f0541a998c4e4b21f6e82ac50341c3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;xml&amp;gt;&lt;/code&gt; Element</source>
          <target state="translated">&lt;code&gt;&amp;lt;xml&amp;gt;&lt;/code&gt; 要素</target>
        </trans-unit>
        <trans-unit id="d0f2e6cb3c3ed4592b98ae36d959efb58d2bcaef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@after&lt;/code&gt; annotation can be used to specify methods that should be called after each test method in a test case class.</source>
          <target state="translated">&lt;code&gt;@after&lt;/code&gt; アノテーションは、テストケースクラスの各試験方法の後に呼び出されるべきメソッドを指定するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="a162271f9e4bdef938cc564e86bd86d787976f52" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@afterClass&lt;/code&gt; annotation can be used to specify static methods that should be called after all test methods in a test class have been run to clean up shared fixtures.</source>
          <target state="translated">&lt;code&gt;@afterClass&lt;/code&gt; 注釈は、テストクラス内のすべてのテストメソッドが共有備品をクリーンアップするために実行された後に呼び出されなければなりません静的メソッドを指定するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="4d5caad0c6940190832666cca3c8613895d1f7be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@author&lt;/code&gt; and &lt;code&gt;@ticket&lt;/code&gt; annotations are aliases for &lt;code&gt;@group&lt;/code&gt; allowing to filter tests based on their authors or their ticket identifiers, respectively.</source>
          <target state="translated">&lt;code&gt;@author&lt;/code&gt; と &lt;code&gt;@ticket&lt;/code&gt; 注釈はの別名です &lt;code&gt;@group&lt;/code&gt; それぞれ、その作者またはそのチケット識別子に基づいてフィルタをテストすることができます。</target>
        </trans-unit>
        <trans-unit id="64a808a6856cca81e00781e3d0145b28340c89d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@author&lt;/code&gt; annotation is an alias for &lt;code&gt;@group&lt;/code&gt; allowing to filter tests based on their authors.</source>
          <target state="translated">&lt;code&gt;@author&lt;/code&gt; の注釈はの別名である &lt;code&gt;@group&lt;/code&gt; その作者に基づいてフィルタをテストすることができます。</target>
        </trans-unit>
        <trans-unit id="51f2d2562271278b5c58d3e5b7a0ca62fcd5995d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@author&lt;/code&gt; annotation is an alias for the &lt;code&gt;@group&lt;/code&gt; annotation (see &lt;a href=&quot;#appendixes-annotations-group&quot;&gt;@group&lt;/a&gt;) and allows to filter tests based on their authors.</source>
          <target state="translated">&lt;code&gt;@author&lt;/code&gt; の注釈はの別名である &lt;code&gt;@group&lt;/code&gt; の注釈（参照&lt;a href=&quot;#appendixes-annotations-group&quot;&gt;@group&lt;/a&gt;）とその作者に基づいてフィルタをテストすることができます。</target>
        </trans-unit>
        <trans-unit id="ab93cce524c64c8c632f83591bb039aa994f8643" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@author&lt;/code&gt; annotation is an alias for the &lt;code&gt;@group&lt;/code&gt; annotation (see &lt;a href=&quot;appendixes.annotations#appendixes.annotations.group&quot;&gt;the section called &amp;ldquo;@group&amp;rdquo;&lt;/a&gt;) and allows to filter tests based on their authors.</source>
          <target state="translated">&lt;code&gt;@author&lt;/code&gt; の注釈はの別名である &lt;code&gt;@group&lt;/code&gt; の注釈（参照&lt;a href=&quot;appendixes.annotations#appendixes.annotations.group&quot;&gt;「@group」と呼ばれるセクションを&lt;/a&gt;）し、その作者に基づいてフィルタをテストすることができます。</target>
        </trans-unit>
        <trans-unit id="b5355fe2c7eaba8c6fa6b863fc6b3a81d64434ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@backupGlobals enabled&lt;/code&gt; annotation can be used on the class level to enable this operation for all tests of a test case class:</source>
          <target state="translated">&lt;code&gt;@backupGlobals enabled&lt;/code&gt; 注釈は、テストケースクラスのすべてのテストのために、この操作を有効にするために、クラスレベルで使用することができます。</target>
        </trans-unit>
        <trans-unit id="4f59f39d78da9339335a72d059e2194688170bc4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@backupGlobals&lt;/code&gt; annotation can also be used on the test method level. This allows for a fine-grained configuration of the backup and restore operations:</source>
          <target state="translated">&lt;code&gt;@backupGlobals&lt;/code&gt; のアノテーションは、テストメソッドレベルで使用することができます。これにより、バックアップおよび復元操作をきめ細かく構成できます。</target>
        </trans-unit>
        <trans-unit id="0f73b1cac0ada1b79c5a82b4a40b641c7e6e28ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@backupGlobals&lt;/code&gt; annotation that is discussed in &lt;a href=&quot;annotations#appendixes-annotations-backupglobals&quot;&gt;@backupGlobals&lt;/a&gt; can be used to control the backup and restore operations for global variables. Alternatively, you can provide a list of global variables that are to be excluded from the backup and restore operations like this</source>
          <target state="translated">&lt;code&gt;@backupGlobals&lt;/code&gt; のに記載されているアノテーション&lt;a href=&quot;annotations#appendixes-annotations-backupglobals&quot;&gt;@backupGlobalsは、&lt;/a&gt;バックアップを制御し、グローバル変数の操作を復元するために使用することができます。または、次のようにバックアップおよび復元操作から除外するグローバル変数のリストを提供することもできます。</target>
        </trans-unit>
        <trans-unit id="dbfd210adf12fc299a71ecbf43a76ffdefd36f21" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@backupGlobals&lt;/code&gt; annotation that is discussed in &lt;a href=&quot;appendixes.annotations#appendixes.annotations.backupGlobals&quot;&gt;the section called &amp;ldquo;@backupGlobals&amp;rdquo;&lt;/a&gt; can be used to control the backup and restore operations for global variables. Alternatively, you can provide a blacklist of global variables that are to be excluded from the backup and restore operations like this</source>
          <target state="translated">&lt;code&gt;@backupGlobals&lt;/code&gt; の中で議論された注釈&lt;a href=&quot;appendixes.annotations#appendixes.annotations.backupGlobals&quot;&gt;「@backupGlobals」と呼ばれるセクションには、&lt;/a&gt;バックアップを制御し、グローバル変数の操作を復元するために使用することができます。または、このようなバックアップおよび復元操作から除外するグローバル変数のブラックリストを提供できます</target>
        </trans-unit>
        <trans-unit id="b8aabc701b483ff1bf4ae7d33581dbc921d989cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@backupStaticAttributes enabled&lt;/code&gt; annotation can be used on the class level to enable this operation for all tests of a test case class:</source>
          <target state="translated">&lt;code&gt;@backupStaticAttributes enabled&lt;/code&gt; 注釈は、テストケースクラスのすべてのテストのために、この操作を有効にするために、クラスレベルで使用することができます。</target>
        </trans-unit>
        <trans-unit id="46a12032f574f8340a5d34941ffb8a5e2e58eec1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@backupStaticAttributes&lt;/code&gt; annotation can also be used on the test method level. This allows for a fine-grained configuration of the backup and restore operations:</source>
          <target state="translated">&lt;code&gt;@backupStaticAttributes&lt;/code&gt; のアノテーションは、テストメソッドレベルで使用することができます。これにより、バックアップおよび復元操作のきめ細かい構成が可能になります。</target>
        </trans-unit>
        <trans-unit id="58ec7678d5fde9d523c43ff7ed92bec70ef81921" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@backupStaticAttributes&lt;/code&gt; annotation can be used to back up all static property values in all declared classes before each test and restore them afterwards. It may be used at the test case class or test method level:</source>
          <target state="translated">&lt;code&gt;@backupStaticAttributes&lt;/code&gt; の注釈は、各テストの前に宣言されたすべてのクラスのすべての静的プロパティ値をバックアップし、その後、それらを復元するために使用することができます。テストケースクラスまたはテストメソッドレベルで使用できます。</target>
        </trans-unit>
        <trans-unit id="8de10976b05707f0abe075ca4badec8aa6ca4932" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@backupStaticAttributes&lt;/code&gt; annotation discussed in &lt;a href=&quot;annotations#appendixes-annotations-backupstaticattributes&quot;&gt;@backupStaticAttributes&lt;/a&gt; can be used to back up all static property values in all declared classes before each test and restore them afterwards.</source>
          <target state="translated">&lt;code&gt;@backupStaticAttributes&lt;/code&gt; 注釈がで議論&lt;a href=&quot;annotations#appendixes-annotations-backupstaticattributes&quot;&gt;@backupStaticAttributesは&lt;/a&gt;、各テストの前に宣言されたすべてのクラスのすべての静的プロパティ値をバックアップし、その後、それらを復元するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="19b6fb8e3e3e474c65b7fb22f9f01b5ad3b92c87" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@backupStaticAttributes&lt;/code&gt; annotation discussed in &lt;a href=&quot;appendixes.annotations#appendixes.annotations.backupStaticAttributes&quot;&gt;the section called &amp;ldquo;@backupStaticAttributes&amp;rdquo;&lt;/a&gt; can be used to back up all static property values in all declared classes before each test and restore them afterwards.</source>
          <target state="translated">&lt;code&gt;@backupStaticAttributes&lt;/code&gt; の中で議論注釈&lt;a href=&quot;appendixes.annotations#appendixes.annotations.backupStaticAttributes&quot;&gt;「@backupStaticAttributes」と呼ばれるセクションは&lt;/a&gt;、各テストの前に宣言されたすべてのクラスのすべての静的プロパティ値をバックアップし、その後、それらを復元するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="3920f5f1e423ff6183e12f236771ab74b374a287" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@backupStaticAttributes&lt;/code&gt; operation is executed before a test method, but only if it is enabled. If a static value was changed by a previously executed test that did not have &lt;code&gt;@backupStaticAttributes&lt;/code&gt; enabled, then that value will be backed up and restored &amp;mdash; not the originally declared default value. PHP does not record the originally declared default value of any static variable.</source>
          <target state="translated">&lt;code&gt;@backupStaticAttributes&lt;/code&gt; の操作は、テストメソッドの前に実行されますが、それが有効な場合のみ。 &lt;code&gt;@backupStaticAttributes&lt;/code&gt; が有効になっていない以前に実行されたテストによって静的な値が変更された場合、その値はバックアップされ、復元されます。最初に宣言されたデフォルト値ではありません。PHPは、静的変数の最初に宣言されたデフォルト値を記録しません。</target>
        </trans-unit>
        <trans-unit id="10135c7a0d20a7937f2ca7b201399b947fdd7b37" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@before&lt;/code&gt; annotation can be used to specify methods that should be called before each test method in a test case class.</source>
          <target state="translated">&lt;code&gt;@before&lt;/code&gt; アノテーションは、テストケースクラス内の各テストメソッドの前に呼び出されるべきメソッドを指定するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="22f032c688f84c9415d233752d94e06e178f4dc7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@beforeClass&lt;/code&gt; annotation can be used to specify static methods that should be called before any test methods in a test class are run to set up shared fixtures.</source>
          <target state="translated">&lt;code&gt;@beforeClass&lt;/code&gt; 注釈は、テストクラス内のすべてのテストメソッドが共有備品を設定するために実行される前に呼び出されなければなりません静的メソッドを指定するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="5173a7aa46cf8222c1771ba4036ebe556abeb571" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@codeCoverageIgnore&lt;/code&gt;, &lt;code&gt;@codeCoverageIgnoreStart&lt;/code&gt; and &lt;code&gt;@codeCoverageIgnoreEnd&lt;/code&gt; annotations can be used to exclude lines of code from the coverage analysis.</source>
          <target state="translated">&lt;code&gt;@codeCoverageIgnore&lt;/code&gt; 、 &lt;code&gt;@codeCoverageIgnoreStart&lt;/code&gt; と &lt;code&gt;@codeCoverageIgnoreEnd&lt;/code&gt; 注釈は、カバレッジ解析からのコードの行を除外するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="7f4dccfa8c4078240d93bb5b8f4bfd5e02da68ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@covers&lt;/code&gt; annotation (see &lt;a href=&quot;appendixes.annotations#appendixes.annotations.covers.tables.annotations&quot;&gt;Table B.1&lt;/a&gt;) can be used in the test code to specify which method(s) a test method wants to test. If provided, only the code coverage information for the specified method(s) will be considered. &lt;a href=&quot;code-coverage-analysis#code-coverage-analysis.specifying-covered-methods.examples.BankAccountTest.php&quot;&gt;Example 11.2&lt;/a&gt; shows an example.</source>
          <target state="translated">&lt;code&gt;@covers&lt;/code&gt; のアノテーション（参照&lt;a href=&quot;appendixes.annotations#appendixes.annotations.covers.tables.annotations&quot;&gt;表B.1の&lt;/a&gt;試験方法は、試験したい方法（複数可）を指定するためのテストコードに使用することができます）。指定した場合、指定したメソッドのコードカバレッジ情報のみが考慮されます。&lt;a href=&quot;code-coverage-analysis#code-coverage-analysis.specifying-covered-methods.examples.BankAccountTest.php&quot;&gt;例11.2に例を&lt;/a&gt;示します。</target>
        </trans-unit>
        <trans-unit id="ac729957f906a0a3292ad278583ef930e5882286" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@covers&lt;/code&gt; annotation (see the &lt;a href=&quot;annotations#appendixes-annotations-covers-tables-annotations&quot;&gt;annotation documentation&lt;/a&gt;) can be used in the test code to specify which code parts a test class (or test method) wants to test. If provided, this effectively filters the code coverage report to include executed code from the referenced code parts only. &lt;a href=&quot;#code-coverage-analysis-specifying-covered-parts-examples-invoicetest-php&quot;&gt;Example 9.2&lt;/a&gt; shows an example.</source>
          <target state="translated">&lt;code&gt;@covers&lt;/code&gt; の注釈は、（参照&lt;a href=&quot;annotations#appendixes-annotations-covers-tables-annotations&quot;&gt;注釈ドキュメントを&lt;/a&gt;）テストクラス（または試験方法）は、テストしたいコードの部分を指定するために、テストコードで使用することができます。提供されている場合、これはコードカバレッジレポートを効果的にフィルタリングして、参照されているコード部分からのみ実行されたコードを含めます。&lt;a href=&quot;#code-coverage-analysis-specifying-covered-parts-examples-invoicetest-php&quot;&gt;例9.2に例を&lt;/a&gt;示します。</target>
        </trans-unit>
        <trans-unit id="c854a797757c5c72b7f476a61b00450a49709e5b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@covers&lt;/code&gt; annotation can be used in the test code to specify which method(s) a test method wants to test:</source>
          <target state="translated">&lt;code&gt;@covers&lt;/code&gt; のアノテーションは、テスト方法は、テストしたい方法（複数可）を指定するためのテストコードで使用することができます。</target>
        </trans-unit>
        <trans-unit id="263eeaa1068dd2b60b1aff2507472a565a6563cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@covers&lt;/code&gt; annotation can be used in the test code to specify which parts of the code it is supposed to test:</source>
          <target state="translated">&lt;code&gt;@covers&lt;/code&gt; の注釈は、それがテストに想定されているコードの部分を指定するために、テストコードで使用することができます。</target>
        </trans-unit>
        <trans-unit id="d7d5bcf722de818e864a17135f1cda5c2861ecb2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@coversDefaultClass&lt;/code&gt; annotation can be used to specify a default namespace or class name. That way long names don&amp;rsquo;t need to be repeated for every &lt;code&gt;@covers&lt;/code&gt; annotation. See &lt;a href=&quot;#appendixes-annotations-examples-coversdefaultclasstest-php&quot;&gt;Example 2.18&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;@coversDefaultClass&lt;/code&gt; の注釈は、デフォルトの名前空間やクラス名を指定するために使用することができます。そうすれば、 &lt;code&gt;@covers&lt;/code&gt; アノテーションごとに長い名前を繰り返す必要がなくなります。&lt;a href=&quot;#appendixes-annotations-examples-coversdefaultclasstest-php&quot;&gt;例2.18を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="0c7409635f4aa8c2cdbaefef11ccc2ab0594b5fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@coversDefaultClass&lt;/code&gt; annotation can be used to specify a default namespace or class name. That way long names don't need to be repeated for every &lt;code&gt;@covers&lt;/code&gt; annotation. See &lt;a href=&quot;appendixes.annotations#appendixes.annotations.examples.CoversDefaultClassTest.php&quot;&gt;Example B.1&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;@coversDefaultClass&lt;/code&gt; の注釈は、デフォルトの名前空間やクラス名を指定するために使用することができます。これにより、 &lt;code&gt;@covers&lt;/code&gt; アノテーションごとに長い名前を繰り返す必要がなくなります。&lt;a href=&quot;appendixes.annotations#appendixes.annotations.examples.CoversDefaultClassTest.php&quot;&gt;例B.1を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="eeb6e1ced584fa86dc65ef7258086b6713ab60c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@coversNothing&lt;/code&gt; annotation can be used in the test code to specify that no code coverage information will be recorded for the annotated test case.</source>
          <target state="translated">&lt;code&gt;@coversNothing&lt;/code&gt; 注釈には、コードカバレッジ情報は、注釈付きテストケースのために記録されないことを指定するために、テストコードで使用することができます。</target>
        </trans-unit>
        <trans-unit id="d0d0d6147c40563f5255921b01f59f4ca39cb8d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@expectedExceptionCode&lt;/code&gt; annotation, in conjunction with the &lt;code&gt;@expectedException&lt;/code&gt; allows making assertions on the error code of a thrown exception thus being able to narrow down a specific exception.</source>
          <target state="translated">&lt;code&gt;@expectedExceptionCode&lt;/code&gt; のと併せて、注釈、 &lt;code&gt;@expectedException&lt;/code&gt; は、従って、特定の例外を絞り込むことができるというスローされた例外のエラーコードにアサーションを行うことを可能にします。</target>
        </trans-unit>
        <trans-unit id="42cfa1ee7a5b14f768050b2cf0fc9bc927b3fa13" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@expectedExceptionMessage&lt;/code&gt; annotation works similar to &lt;code&gt;@expectedExceptionCode&lt;/code&gt; as it lets you make an assertion on the error message of an exception.</source>
          <target state="translated">&lt;code&gt;@expectedExceptionMessage&lt;/code&gt; の注釈は次のように動作します &lt;code&gt;@expectedExceptionCode&lt;/code&gt; それはあなたが例外のエラーメッセージにアサーションを行うことができますよう。</target>
        </trans-unit>
        <trans-unit id="f77bbeb5a691bb9a118361c3456593c3f1bb6c18" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@group&lt;/code&gt; annotation can also be provided for the test class. It is then &amp;ldquo;inherited&amp;rdquo; to all test methods of that test class.</source>
          <target state="translated">&lt;code&gt;@group&lt;/code&gt; の注釈も、テストクラスのために提供することができます。次に、そのテストクラスのすべてのテストメソッドに「継承」されます。</target>
        </trans-unit>
        <trans-unit id="a24520f213fda3f1ebc22a27c479f3e5c535c923" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@large&lt;/code&gt; annotation is an alias for &lt;code&gt;@group large&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;@large&lt;/code&gt; の注釈はの別名です &lt;code&gt;@group large&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="524eb1bc8010ceada6555f13e7c804f3587a642d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@medium&lt;/code&gt; annotation is an alias for &lt;code&gt;@group medium&lt;/code&gt;. A medium test must not depend on a test marked as &lt;code&gt;@large&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;@medium&lt;/code&gt; の注釈はの別名である &lt;code&gt;@group medium&lt;/code&gt; 。中程度のテストは、 &lt;code&gt;@large&lt;/code&gt; とマークされたテストに依存してはなりません。</target>
        </trans-unit>
        <trans-unit id="4210cf68e7cb5df0f98805f63b23b53972d17352" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@requires&lt;/code&gt; annotation can be used to skip tests when common preconditions, like the PHP Version or installed extensions, are not met.</source>
          <target state="translated">&lt;code&gt;@requires&lt;/code&gt; の注釈は、共通の前提条件は、PHPのバージョンやインストールされた拡張機能のように、満たされていないときのテストをスキップするために使用することができます。</target>
        </trans-unit>
        <trans-unit id="cb7ee1473f0e238baa8ff4a6c666e91bf98b5223" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@small&lt;/code&gt; annotation is an alias for &lt;code&gt;@group small&lt;/code&gt;. A small test must not depend on a test marked as &lt;code&gt;@medium&lt;/code&gt; or &lt;code&gt;@large&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;@small&lt;/code&gt; 注釈はの別名です &lt;code&gt;@group small&lt;/code&gt; 。smallテストは、 &lt;code&gt;@medium&lt;/code&gt; または &lt;code&gt;@large&lt;/code&gt; とマークされたテストに依存してはなりません。</target>
        </trans-unit>
        <trans-unit id="113b22af4757ffbaa002d75245aa5c9551e44f03" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@testdox&lt;/code&gt; annotation can be applied to both test classes and test methods.</source>
          <target state="translated">&lt;code&gt;@testdox&lt;/code&gt; の注釈は、テストクラスとテストメソッドの両方に適用することができます。</target>
        </trans-unit>
        <trans-unit id="23006a05e112e97e8c2c14998e0740d6e6fe6c20" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@ticket&lt;/code&gt; annotation is an alias for the &lt;code&gt;@group&lt;/code&gt; annotation (see &lt;a href=&quot;#appendixes-annotations-group&quot;&gt;@group&lt;/a&gt;) and allows to filter tests based on their ticket ID.</source>
          <target state="translated">&lt;code&gt;@ticket&lt;/code&gt; の注釈はの別名である &lt;code&gt;@group&lt;/code&gt; の注釈（参照&lt;a href=&quot;#appendixes-annotations-group&quot;&gt;@group&lt;/a&gt;）とそのチケットIDに基づいてフィルタをテストすることができます。</target>
        </trans-unit>
        <trans-unit id="6086125621e0aa93a949eb49f9321713c29988a4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@uses&lt;/code&gt; annotation specifies code which will be executed by a test, but is not intended to be covered by the test. A good example is a value object which is necessary for testing a unit of code.</source>
          <target state="translated">&lt;code&gt;@uses&lt;/code&gt; テストによって実行されますが、テストによって覆われることが意図されていない注釈指定するコードを。良い例は、コードのユニットをテストするために必要な値オブジェクトです。</target>
        </trans-unit>
        <trans-unit id="950a91e85f37ddff185d1991094f06b46387ef0c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PHPUnit_Framework_Test&lt;/code&gt; interface is narrow and easy to implement. You can write an implementation of &lt;code&gt;PHPUnit_Framework_Test&lt;/code&gt; that is simpler than &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt; and that runs &lt;em&gt;data-driven tests&lt;/em&gt;, for instance.</source>
          <target state="translated">&lt;code&gt;PHPUnit_Framework_Test&lt;/code&gt; のインターフェイスは狭く、実装が容易です。 &lt;code&gt;PHPUnit_Framework_Test&lt;/code&gt; 、 &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt; よりも単純で、&lt;em&gt;データ駆動型テスト&lt;/em&gt;を実行&lt;em&gt;する&lt;/em&gt;PHPUnit_Framework_Testの実装を記述できます。</target>
        </trans-unit>
        <trans-unit id="b2806aabdd2075a7be4e0eb43f87acbd50744245" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;backupGlobals&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;backupGlobals&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="7a6bb8965b1b9a387a7d5253a5ff448520e3fbf5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;backupStaticAttributes&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;backupStaticAttributes&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="567cd19e29d4989123449ac19fa1da7872a2fdf4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;beStrictAboutChangesToGlobalState&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;beStrictAboutChangesToGlobalState&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="7b9ecc6840c306734f1777df3e560bb989db07b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;beStrictAboutCoversAnnotation&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;beStrictAboutCoversAnnotation&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="65b1e8045ec95634ace5f6be5de73858e9310fef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;beStrictAboutOutputDuringTests&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;beStrictAboutOutputDuringTests&lt;/code&gt; 属性</target>
        </trans-unit>
        <trans-unit id="a47ca47c7de1a0cf290b28fe269bb54a2b40ef2e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;beStrictAboutResourceUsageDuringSmallTests&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;beStrictAboutResourceUsageDuringSmallTests&lt;/code&gt; 属性</target>
        </trans-unit>
        <trans-unit id="988155402bb99ab1499d2afa6f3b6f716413ab47" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;beStrictAboutTestsThatDoNotTestAnything&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;beStrictAboutTestsThatDoNotTestAnything&lt;/code&gt; 属性</target>
        </trans-unit>
        <trans-unit id="622f0797651b789451925da28b5c0c10ee839b64" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;beStrictAboutTodoAnnotatedTests&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;beStrictAboutTodoAnnotatedTests&lt;/code&gt; 属性</target>
        </trans-unit>
        <trans-unit id="ef122e74195d257c0dff4cb738c729fcd8948a09" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bootstrap&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;bootstrap&lt;/code&gt; 属性</target>
        </trans-unit>
        <trans-unit id="462f87cc4d17b77108db0b42ea3103c8ba47f175" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cacheDirectory&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;cacheDirectory&lt;/code&gt; 属性</target>
        </trans-unit>
        <trans-unit id="cf011e1a2d60db916cc824ffd3c3ec690d91ea75" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cacheResult&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;cacheResult&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="86aaa27ecbbc3c63792e8cd6bcc4f7ed07ef1a28" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cacheResultFile&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;cacheResultFile&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="a904bd1e6e4187e27f5d2c16c87c9d1acffd7d99" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;callback()&lt;/code&gt; constraint can be used for more complex argument verification. This constraint takes a PHP callback as its only argument. The PHP callback will receive the argument to be verified as its only argument and should return &lt;code&gt;true&lt;/code&gt; if the argument passes verification and &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;callback()&lt;/code&gt; 制約は、より複雑な引数の検証に使用することができます。この制約は、唯一の引数としてPHPコールバックを取ります。PHPコールバックは検証される引数を唯一の引数として受け取り、引数が検証に合格した場合は &lt;code&gt;true&lt;/code&gt; を、そうでない場合は &lt;code&gt;false&lt;/code&gt; を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="c22982bb12832a934501b5fdcd323dd7d514fd32" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;colors&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;colors&lt;/code&gt; 属性</target>
        </trans-unit>
        <trans-unit id="5911241cc61e8de3d4fc71d000a87043ba1d2e3e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;columns&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;columns&lt;/code&gt; 属性</target>
        </trans-unit>
        <trans-unit id="36197eb6e5d1b40e36ce25ce96e7c7bba04954f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;convertDeprecationsToExceptions&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;convertDeprecationsToExceptions&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="525887d70ad7df118b0305c1e7a8e685bdf6671c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;convertErrorsToExceptions&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;convertErrorsToExceptions&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="9d6639f672e9b78e3a12de1197b5bc983d3fcc91" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;convertNoticesToExceptions&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;convertNoticesToExceptions&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="9c588f6b1a540dd849ac4b418dbf6e2ef3183012" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;convertWarningsToExceptions&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;convertWarningsToExceptions&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="202c3266ea8ba4fabd9b5b814eb0b0b73004584c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;createDataSet()&lt;/code&gt; method creates a Database (DB) DataSet as described in the DataSet implementations section.</source>
          <target state="translated">&lt;code&gt;createDataSet()&lt;/code&gt; データセットの実装のセクションで説明した方法は、データベース（DB）データセットを作成します。</target>
        </trans-unit>
        <trans-unit id="96cb14a32952593c11cf3798c4f36e2246dfc5bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;createMock($type)&lt;/code&gt; and &lt;code&gt;getMockBuilder($type)&lt;/code&gt; methods provided by PHPUnit can be used in a test to automatically generate an object that can act as a test double for the specified original type (interface or class name). This test double object can be used in every context where an object of the original type is expected or required.</source>
          <target state="translated">&lt;code&gt;createMock($type)&lt;/code&gt; と &lt;code&gt;getMockBuilder($type)&lt;/code&gt; のPHPUnitによって提供される方法は、自動的に指定された元の型（インターフェースまたはクラス名）のための二重試験として作用することができるオブジェクトを生成するために、試験に使用することができます。この二重テストオブジェクトは、元のタイプのオブジェクトが期待または要求されるすべてのコンテキストで使用できます。</target>
        </trans-unit>
        <trans-unit id="fe3df3bd94e0dd3a8f67ab7980e647c17ba25535" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;createMock($type)&lt;/code&gt; method immediately returns a test double object for the specified type (interface or class). The creation of this test double is performed using best practice defaults (the &lt;code&gt;__construct()&lt;/code&gt; and &lt;code&gt;__clone()&lt;/code&gt; methods of the original class are not executed) and the arguments passed to a method of the test double will not be cloned. If these defaults are not what you need then you can use the &lt;code&gt;getMockBuilder($type)&lt;/code&gt; method to customize the test double generation using a fluent interface.</source>
          <target state="translated">&lt;code&gt;createMock($type)&lt;/code&gt; メソッドは、直ちに指定されたタイプ（インターフェースまたはクラス）用のテストダブルオブジェクトを返します。このテストdoubleの作成は、ベストプラクティスのデフォルトを使用して実行され（元のクラスの &lt;code&gt;__construct()&lt;/code&gt; および &lt;code&gt;__clone()&lt;/code&gt; メソッドは実行されません）、テストdoubleのメソッドに渡される引数は複製されません。これらのデフォルトが必要でない場合は、 &lt;code&gt;getMockBuilder($type)&lt;/code&gt; メソッドを使用して、流れるようなインターフェイスを使用してテストのダブル生成をカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="fc2e07998e9233b8a77ed3de3cb46e852c1a6d70" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;createQueryTable()&lt;/code&gt; method can be used to create instances of a QueryTable, give them a result name and SQL query. This is a handy method when it comes to result/table assertions as will be shown in the next section on the Database Assertions API.</source>
          <target state="translated">&lt;code&gt;createQueryTable()&lt;/code&gt; メソッドは、クエリテーブルのインスタンスを作成し、それらに結果名とSQLクエリを与えるために使用することができます。これは、データベースアサーションAPIの次のセクションで説明するように、結果/テーブルアサーションに関しては便利なメソッドです。</target>
        </trans-unit>
        <trans-unit id="1a219763425a3d65811d326e358ef0a293807136" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;createStub($type)&lt;/code&gt; and &lt;code&gt;createMock($type)&lt;/code&gt; method immediately return a test double object for the specified type (interface or class). The creation of this test double is performed using best practice defaults. The &lt;code&gt;__construct()&lt;/code&gt; and &lt;code&gt;__clone()&lt;/code&gt; methods of the original class are not executed and the arguments passed to a method of the test double will not be cloned. If these defaults are not what you need then you can use the &lt;code&gt;getMockBuilder($type)&lt;/code&gt; method to customize the test double generation using a fluent interface.</source>
          <target state="translated">&lt;code&gt;createStub($type)&lt;/code&gt; と &lt;code&gt;createMock($type)&lt;/code&gt; メソッドは、直ちに指定されたタイプ（インターフェースまたはクラス）のためにテストダブルオブジェクトを返します。このテストダブルの作成は、ベストプラクティスのデフォルトを使用して実行されます。 &lt;code&gt;__construct()&lt;/code&gt; および &lt;code&gt;__clone()&lt;/code&gt; 元のクラスのメソッドが実行されず、二重試験のメソッドに渡される引数は、クローン化されません。これらのデフォルトが必要なものでない場合は、 &lt;code&gt;getMockBuilder($type)&lt;/code&gt; メソッドを使用して、流暢なインターフェイスを使用してテストダブル生成をカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="1160e6917bce9c01de2cf3a226961e6b3640d7e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;createStub($type)&lt;/code&gt;, &lt;code&gt;createMock($type)&lt;/code&gt;, and &lt;code&gt;getMockBuilder($type)&lt;/code&gt; methods provided by PHPUnit can be used in a test to automatically generate an object that can act as a test double for the specified original type (interface or class name). This test double object can be used in every context where an object of the original type is expected or required.</source>
          <target state="translated">&lt;code&gt;createStub($type)&lt;/code&gt; 、 &lt;code&gt;createMock($type)&lt;/code&gt; 、及び &lt;code&gt;getMockBuilder($type)&lt;/code&gt; のPHPUnitによって提供される方法は、自動的に指定された元の型（インターフェースまたはクラスの二重試験として作用することができるオブジェクトを生成するために、試験に使用することができます名前）。このテストダブルオブジェクトは、元のタイプのオブジェクトが期待または必要とされるすべてのコンテキストで使用できます。</target>
        </trans-unit>
        <trans-unit id="c956c5c236bfe28c383d81306ce420213b7d3fd3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;defaultTestSuite&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;defaultTestSuite&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="82ab37ebb6c2f04105b910efd6ef7b729adfb250" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;defaultTimeLimit&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;defaultTimeLimit&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="3d79e69f61c471ef0d8069b26b1a08381b9619b3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;disableCodeCoverageIgnore&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;disableCodeCoverageIgnore&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="1e7c9be8fdb63f731b7b9df9544e3e9b2762fc1a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;enforceTimeLimit&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;enforceTimeLimit&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="a11a473ec1d5942b627dbb76cbb191e916b951e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;executionOrder&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;executionOrder&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="5d2dfbf59e6a778540f1553023f7445bbf40c9bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extensionsDirectory&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;extensionsDirectory&lt;/code&gt; 属性</target>
        </trans-unit>
        <trans-unit id="974a0ded37a283561785045424bd2137c846630a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;failOnRisky&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;failOnRisky&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="f36b5118febb6f8ab9074b3e2eda3ae81daf4b6c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;failOnWarning&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;failOnWarning&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="9bd14303b7554dcf857ef09aaccef0be59f55757" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;forceCoversAnnotation&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;forceCoversAnnotation&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="9bc71c2321b4100a158a657c32ddea3e71dcda9a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getDataSet()&lt;/code&gt; method defines how the initial state of the database should look before each test is executed. The state of a database is abstracted through the concepts DataSet and DataTable both being represented by the interfaces &lt;code&gt;PHPUnit_Extensions_Database_DataSet_IDataSet&lt;/code&gt; and &lt;code&gt;PHPUnit_Extensions_Database_DataSet_IDataTable&lt;/code&gt;. The next section will describe in detail how these concepts work and what the benefits are for using them in database testing.</source>
          <target state="translated">&lt;code&gt;getDataSet()&lt;/code&gt; メソッドは、それぞれのテストが実行される前に、データベースの初期状態がどのように見えるべきか定義します。データベースの状態は、DataSetとDataTableの概念を通じて抽象化され、両方とも &lt;code&gt;PHPUnit_Extensions_Database_DataSet_IDataSet&lt;/code&gt; および &lt;code&gt;PHPUnit_Extensions_Database_DataSet_IDataTable&lt;/code&gt; インターフェースで表されます。次のセクションでは、これらの概念がどのように機能するか、およびデータベースのテストでそれらを使用することの利点について詳しく説明します。</target>
        </trans-unit>
        <trans-unit id="4f04f73e70a7e0224c4bca069e8af15aaa70a3e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getMockForAbstractClass()&lt;/code&gt; method returns a mock object for an abstract class. All abstract methods of the given abstract class are mocked. This allows for testing the concrete methods of an abstract class.</source>
          <target state="translated">&lt;code&gt;getMockForAbstractClass()&lt;/code&gt; メソッドは、抽象クラスのモックオブジェクトを返します。指定された抽象クラスのすべての抽象メソッドはモックされます。これにより、抽象クラスの具象メソッドをテストできます。</target>
        </trans-unit>
        <trans-unit id="f67ec389a5cdc252d240635ac2ffeb2b8c82052b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getMockForTrait()&lt;/code&gt; method returns a mock object that uses a specified trait. All abstract methods of the given trait are mocked. This allows for testing the concrete methods of a trait.</source>
          <target state="translated">&lt;code&gt;getMockForTrait()&lt;/code&gt; メソッドは、指定された形質を使用モックオブジェクトを返します。指定された特性のすべての抽象メソッドはモックされます。これにより、特性の具体的なメソッドをテストできます。</target>
        </trans-unit>
        <trans-unit id="48e220439ed3e811cc4b8b3597fca597ab896d95" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getRowCount()&lt;/code&gt; method is a convienent way to access the number of rows in a table, optionally filtered by an additional where clause. This can be used with a simple equality assertion:</source>
          <target state="translated">&lt;code&gt;getRowCount()&lt;/code&gt; メソッドは、必要に応じて追加のwhere句によってフィルタリング、テーブル内の行の数にアクセスするためのconvienent方法です。これは、単純な等価アサーションで使用できます。</target>
        </trans-unit>
        <trans-unit id="eb9253503ca36e3101ee997995d5ea48b828dd46" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;highLowerBound&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;highLowerBound&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="71d748b767852740cae62a577fcbb0d28924fa74" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ignoreDeprecatedCodeUnits&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;ignoreDeprecatedCodeUnits&lt;/code&gt; 属性</target>
        </trans-unit>
        <trans-unit id="d10e8727e1b15195cecc9fad6f29b1b5a2949cd2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;includeUncoveredFiles&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;includeUncoveredFiles&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="15968e8fa003d770ad62787e9c0c7cc647c9a856" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;includeUncoveredFilesInCodeCoverageReport&lt;/code&gt; and &lt;code&gt;processUncoveredFilesForCodeCoverageReport&lt;/code&gt; configuration settings are available to configure how the filter is used:</source>
          <target state="translated">&lt;code&gt;includeUncoveredFilesInCodeCoverageReport&lt;/code&gt; と &lt;code&gt;processUncoveredFilesForCodeCoverageReport&lt;/code&gt; 構成設定は、フィルタが使用されている方法を設定できます：</target>
        </trans-unit>
        <trans-unit id="8e399a1148c56ae6e7da13b8ec9a2b7f75881b4f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lowUpperBound&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;lowUpperBound&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="a3829ccfd52529ef8a2b57cfa4b7ffa3ed5c7326" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lowUpperBound&lt;/code&gt;, &lt;code&gt;highLowerBound&lt;/code&gt;, &lt;code&gt;logIncompleteSkipped&lt;/code&gt; and &lt;code&gt;showUncoveredFiles&lt;/code&gt; attributes have no equivalent TextUI test runner option.</source>
          <target state="translated">&lt;code&gt;lowUpperBound&lt;/code&gt; 、 &lt;code&gt;highLowerBound&lt;/code&gt; 、 &lt;code&gt;logIncompleteSkipped&lt;/code&gt; と &lt;code&gt;showUncoveredFiles&lt;/code&gt; 属性が全く同等のTextUIテストランナーオプションが用意されていません。</target>
        </trans-unit>
        <trans-unit id="a84e0ddfce6d8fac2a648aba3944c482d6a50c6a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;noInteraction&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;noInteraction&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="26005d50c32b94d8284fe08e783d9eace0653e12" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;outputDirectory&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;outputDirectory&lt;/code&gt; 属性</target>
        </trans-unit>
        <trans-unit id="68e9b4f659d1a5668154d634b9359730ba6f142c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;outputFile&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;outputFile&lt;/code&gt; 属性</target>
        </trans-unit>
        <trans-unit id="5cc80819bc93141cf7752d5b04851a4e908d4d8f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pathCoverage&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;pathCoverage&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="0ae46bd8e1f9a74aa1cad05187251aebfa909d6e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;phpVersion&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;phpVersion&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="c1e9dbc3a2e38551ad5bd38d507b606801f8ef17" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;phpVersionOperator&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;phpVersionOperator&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="0c293b7026d2e277660bfa6a863309870c93f5b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;phpVersionOperator&lt;/code&gt; attribute is optional and defaults to &lt;code&gt;&amp;gt;=&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;phpVersionOperator&lt;/code&gt; の属性はオプションで、デフォルトです &lt;code&gt;&amp;gt;=&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8964e868e9c0a547be837c143cb616f4d8e49025" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;prefix&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;prefix&lt;/code&gt; 属性</target>
        </trans-unit>
        <trans-unit id="5de79adfc7b957d96460def11a970779e5834f88" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;printerClass&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;printerClass&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="9f731e330a8828cc4113b07aac745c4d9b0e3e7b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;printerFile&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;printerFile&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="549dc88c6601a3f7757a2bd144793c3525f5a7f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;processIsolation&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;processIsolation&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="810d2b295d6bebfca04b0e897d8113027be7e293" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;processUncoveredFiles&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;processUncoveredFiles&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="38fadc8b365824a54cc4e32009048dd50597deb4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;registerMockObjectsFromTestArgumentsRecursively&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;registerMockObjectsFromTestArgumentsRecursively&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="93730400a35af591313b1536374d34695623f29b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;resolveDependencies&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;resolveDependencies&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="7476852fc924dadd65680a4e603fdd34b773f9e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reverseDefectList&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;reverseDefectList&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="4f1c42bbe39027f596994d55f5371b020447fb26" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setUp()&lt;/code&gt; and &lt;code&gt;tearDown()&lt;/code&gt; template methods are run once for each test method (and on fresh instances) of the test case class.</source>
          <target state="translated">&lt;code&gt;setUp()&lt;/code&gt; および &lt;code&gt;tearDown()&lt;/code&gt; テンプレートメソッドは、テストケースクラスの各試験方法（及び新鮮なインスタンスに）のために一度実行されます。</target>
        </trans-unit>
        <trans-unit id="d4465cfdf878a9d7cc978eb54e3ccd40c384edc1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;showOnlySummary&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;showOnlySummary&lt;/code&gt; 属性</target>
        </trans-unit>
        <trans-unit id="91bd7fa688e72bda9f96bcc6bf500adab7d2d34b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;showUncoveredFiles&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;showUncoveredFiles&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="76eeb0af4f633513138f6861f4ff5cb553c77b89" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stderr&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;stderr&lt;/code&gt; 属性</target>
        </trans-unit>
        <trans-unit id="251f22f902626f685ea218acdb6a3b5d94e1015d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stopOnDefect&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;stopOnDefect&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="2d46bcc017cca6f402e2130b60849530eae2c081" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stopOnError&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;stopOnError&lt;/code&gt; 属性</target>
        </trans-unit>
        <trans-unit id="fd6e01839a55810fe834ef31c78460272a6ee17c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stopOnFailure&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;stopOnFailure&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="447ac5e96e770e8fa9383ef3a63b06dddbb2f3e0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stopOnIncomplete&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;stopOnIncomplete&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="447c5a8d430c3cfa3a2507e44637fa9a61acaadd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stopOnRisky&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;stopOnRisky&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="73bc41c60b419e8e992e9ccd498eca942f6eb254" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stopOnSkipped&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;stopOnSkipped&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="f6e7bc5ddf67c7edbe9801792dbb934e98146e66" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stopOnWarning&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;stopOnWarning&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="26e066d7999c22ee2b224c2cd87d8bbc2a39f1ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;suffix&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;suffix&lt;/code&gt; 属性</target>
        </trans-unit>
        <trans-unit id="72f51eb15f8d9dc8d0b0b7e4d924804c8ab3e1d5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;testSuiteLoaderClass&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;testSuiteLoaderClass&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="ba7f291056e873dd89654fc5ae6f0b7dab64bda9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;testSuiteLoaderFile&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;testSuiteLoaderFile&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="fb3ac3c76f01c6e00d8b6f28a84bf318aa3c6955" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;testdox&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;testdox&lt;/code&gt; の属性</target>
        </trans-unit>
        <trans-unit id="655248e6dde756d7ba34a978a7e98a5200152abc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;threshold&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;threshold&lt;/code&gt; 属性</target>
        </trans-unit>
        <trans-unit id="adbbaa9c6e0e59eee59ed6f865bb6a936b13cc11" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;timeoutForLargeTests&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;timeoutForLargeTests&lt;/code&gt; 属性</target>
        </trans-unit>
        <trans-unit id="a901c2aad7c2927ea72d12d0c96f5cd6241df171" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;timeoutForMediumTests&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;timeoutForMediumTests&lt;/code&gt; 属性</target>
        </trans-unit>
        <trans-unit id="a0ac98aec59f5ac0b54915f20ddd8de0d9bdefc9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;timeoutForSmallTests&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;timeoutForSmallTests&lt;/code&gt; 属性</target>
        </trans-unit>
        <trans-unit id="597064602c435ded44f39d4a658b2ca4c0c257ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;verbose&lt;/code&gt; Attribute</source>
          <target state="translated">&lt;code&gt;verbose&lt;/code&gt; 属性</target>
        </trans-unit>
        <trans-unit id="2167d6d82afdb47925fad8788a0e668991e223fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;with()&lt;/code&gt; method can take any number of arguments, corresponding to the number of arguments to the method being mocked. You can specify more advanced constraints on the method&amp;rsquo;s arguments than a simple match.</source>
          <target state="translated">&lt;code&gt;with()&lt;/code&gt; メソッドは、モックされるメソッドへの引数の数に対応する、任意の数の引数を取ることができます。単純な一致よりも、メソッドの引数に高度な制約を指定できます。</target>
        </trans-unit>
        <trans-unit id="5d88da73ee25b6088aca5a4fc663aee5ac38ae7d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;with()&lt;/code&gt; method can take any number of arguments, corresponding to the number of arguments to the method being mocked. You can specify more advanced constraints on the method's arguments than a simple match.</source>
          <target state="translated">&lt;code&gt;with()&lt;/code&gt; メソッドは、モックされるメソッドへの引数の数に対応する、任意の数の引数を取ることができます。メソッドの引数には、単純な一致よりも高度な制約を指定できます。</target>
        </trans-unit>
        <trans-unit id="5535c5ea12f13f6f61c70b489f55f06b3dab0790" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;withConsecutive()&lt;/code&gt; method can take any number of arrays of arguments, depending on the calls you want to test against. Each array is a list of constraints corresponding to the arguments of the method being mocked, like in &lt;code&gt;with()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;withConsecutive()&lt;/code&gt; メソッドを使用すると、に対してテストしたいの呼び出しに応じて、引数の配列の任意の数を取ることができます。各配列は、 &lt;code&gt;with()&lt;/code&gt; のように、モックされるメソッドの引数に対応する制約のリストです。</target>
        </trans-unit>
        <trans-unit id="3289d1d490b1211a24481f134ba229a757161fb7" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Branch Coverage&lt;/em&gt; software metric measures whether the boolean expression of each control structure evaluated to both &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; while running the test suite.</source>
          <target state="translated">&lt;em&gt;支店カバレッジ&lt;/em&gt;各制御構造のブール式は両方に、評価するかどうかをソフトウェアメトリクスの措置 &lt;code&gt;true&lt;/code&gt; と &lt;code&gt;false&lt;/code&gt; テストスイートを実行中。</target>
        </trans-unit>
        <trans-unit id="75bd0043f046af43dc02c072fc47f32549185e42" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Change Risk Anti-Patterns (CRAP) Index&lt;/em&gt; is calculated based on the cyclomatic complexity and code coverage of a unit of code. Code that is not too complex and has an adequate test coverage will have a low CRAP index. The CRAP index can be lowered by writing tests and by refactoring the code to lower its complexity.</source>
          <target state="translated">&lt;em&gt;変更リスクアンチパターン（CRAP）インデックスは、&lt;/em&gt;コードのユニットの循環的複雑度とコードカバレッジに基づいて算出されます。複雑すぎず、十分なテストカバレッジを持つコードは、CRAPインデックスが低くなります。CRAPインデックスは、テストを記述し、コードをリファクタリングして複雑さを軽減することにより、下げることができます。</target>
        </trans-unit>
        <trans-unit id="7ca5e556ff470862978361c3f8a4a70ed0418b08" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Class and Trait Coverage&lt;/em&gt; software metric measures whether each method of a class or trait is covered. PHP_CodeCoverage only considers a class or trait as covered when all of its methods are covered.</source>
          <target state="translated">&lt;em&gt;クラスおよび形質カバレッジ・&lt;/em&gt;ソフトウェアメトリクス対策は、クラスまたは形質の各方法が覆われているかどうか。PHP_CodeCoverageは、すべてのメソッドがカバーされている場合にのみ、クラスまたはトレイトがカバーされていると見なします。</target>
        </trans-unit>
        <trans-unit id="0acc8cb2d484ac8e4e537a49be11097acf609490" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Class and Trait Coverage&lt;/em&gt; software metric measures whether each method of a class or trait is covered. php-code-coverage only considers a class or trait as covered when all of its methods are covered.</source>
          <target state="translated">&lt;em&gt;クラスおよび形質カバレッジ・&lt;/em&gt;ソフトウェアメトリクス対策は、クラスまたは形質の各方法が覆われているかどうか。php-code-coverageは、すべてのメソッドがカバーされている場合にのみ、クラスまたはトレイトをカバーされていると見なします。</target>
        </trans-unit>
        <trans-unit id="317ecab3860fdcb769ef4c8135514ad36813753b" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Function and Method Coverage&lt;/em&gt; software metric measures whether each function or method has been invoked. PHP_CodeCoverage only considers a function or method as covered when all of its executable lines are covered.</source>
          <target state="translated">&lt;em&gt;関数およびメソッドのカバレッジ&lt;/em&gt;各関数やメソッドが呼び出されたかどうかをソフトウェアメトリクスの措置。PHP_CodeCoverageは、実行可能なすべての行がカバーされている場合にのみ、関数またはメソッドをカバーされていると見なします。</target>
        </trans-unit>
        <trans-unit id="ddad547e9b0b52afcaa8962c6473cfb9b9419811" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Function and Method Coverage&lt;/em&gt; software metric measures whether each function or method has been invoked. php-code-coverage only considers a function or method as covered when all of its executable lines are covered.</source>
          <target state="translated">&lt;em&gt;関数およびメソッドのカバレッジ&lt;/em&gt;各関数やメソッドが呼び出されたかどうかをソフトウェアメトリクスの措置。php-code-coverageは、実行可能行がすべてカバーされている場合にのみ、関数またはメソッドがカバーされていると見なします。</target>
        </trans-unit>
        <trans-unit id="a3e00b27ed3c8c9e3c913f3e009024ad23ce299a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Line Coverage&lt;/em&gt; software metric measures whether each executable line was executed.</source>
          <target state="translated">&lt;em&gt;ラインカバレッジ・&lt;/em&gt;ソフトウェアの各実行可能行が実行されたかどうかをメトリックの措置。</target>
        </trans-unit>
        <trans-unit id="740d442f8ae7c1731b89853b522e0965ad3cb227" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Opcode Coverage&lt;/em&gt; software metric measures whether each opcode of a function or method has been executed while running the test suite. A line of code usually compiles into more than one opcode. Line Coverage regards a line of code as covered as soon as one of its opcodes is executed.</source>
          <target state="translated">&lt;em&gt;オペコードカバレッジ&lt;/em&gt;ソフトウェアテストスイートの実行中に、関数またはメソッドの各オペコードが実行されたかどうかメトリック測定。コードの行は通常、複数のオペコードにコンパイルされます。行カバレッジは、オペコードの1つが実行されるとすぐにコード行がカバーされたと見なします。</target>
        </trans-unit>
        <trans-unit id="5ae5f41e411de482807718cc752c2300661c9307" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Opcode Coverage&lt;/em&gt;, &lt;em&gt;Branch Coverage&lt;/em&gt;, and &lt;em&gt;Path Coverage&lt;/em&gt; software metrics are not yet supported by PHP_CodeCoverage.</source>
          <target state="translated">&lt;em&gt;オペコードカバレッジ&lt;/em&gt;、&lt;em&gt;支店カバレッジ&lt;/em&gt;、および&lt;em&gt;パスカバレッジ・&lt;/em&gt;ソフトウェアメトリクスは、まだPHP_CodeCoverageによってサポートされていません。</target>
        </trans-unit>
        <trans-unit id="44ceda66b28187bce309b90da1080641efa0ff7d" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Path Coverage&lt;/em&gt; software metric measures whether each of the possible execution paths in a function or method has been followed while running the test suite. An execution path is a unique sequence of branches from the entry of the function or method to its exit.</source>
          <target state="translated">&lt;em&gt;パスカバレッジの&lt;/em&gt;ソフトウェアテストスイートの実行中に、関数またはメソッドで可能な実行パスの各々は続くされているかどうかメトリック測定。実行パスは、関数またはメソッドのエントリからその出口への分岐の一意のシーケンスです。</target>
        </trans-unit>
        <trans-unit id="8e5ac66657c2e1ac2e74cd490e2d0c91dab1ab5f" translate="yes" xml:space="preserve">
          <source>The Command-Line Test Runner</source>
          <target state="translated">コマンドラインのテストランナー</target>
        </trans-unit>
        <trans-unit id="89643cbcfec4ebddcde9f596d3f447b152bceb0f" translate="yes" xml:space="preserve">
          <source>The Connection API</source>
          <target state="translated">接続API</target>
        </trans-unit>
        <trans-unit id="417947145a9ca2e6538cafe6cf0228fbb8fba1a8" translate="yes" xml:space="preserve">
          <source>The DbUnit extension considerably simplifies the setup of a database for testing purposes and allows you to verify the contents of a database after performing a series of operations.</source>
          <target state="translated">DbUnit 拡張モジュールは、テスト用のデータベースの設定を大幅に簡素化し、 一連の操作を行った後にデータベースの内容を検証できるようにします。</target>
        </trans-unit>
        <trans-unit id="6ed4b1d3c8a171e3ca862c0ebeb60eab6f5c4ed4" translate="yes" xml:space="preserve">
          <source>The PHPUnit PHAR can be used immediately after download:</source>
          <target state="translated">PHPUnit PHAR は、ダウンロード後すぐに使用することができます。</target>
        </trans-unit>
        <trans-unit id="c99595fb95da146c7d10826cba92b99d6fe65f8f" translate="yes" xml:space="preserve">
          <source>The PHPUnit command-line test runner can be invoked through the &lt;code&gt;phpunit&lt;/code&gt; command. The following code shows how to run tests with the PHPUnit command-line test runner:</source>
          <target state="translated">PHPUnitコマンドラインテストランナーは、 &lt;code&gt;phpunit&lt;/code&gt; コマンドを使用して呼び出すことができます。次のコードは、PHPUnitコマンドラインテストランナーでテストを実行する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="310f3619cb946a7ab9e348b5998a338fe3b10370" translate="yes" xml:space="preserve">
          <source>The Replacement DataSet is a decorator for an existing dataset and allows you to replace values in any column of the dataset by another replacement value. To get our guestbook example working with NULL values we specify the file like:</source>
          <target state="translated">置換データセットは、既存のデータセットのデコレータであり、データセットの任意の列の値を別の置換値で置き換えることができます。ゲストブックの例では、NULL値で動作するようにするために、次のようなファイルを指定します。</target>
        </trans-unit>
        <trans-unit id="cb8dd646d83fb42929349206c9708f6415294d73" translate="yes" xml:space="preserve">
          <source>The SubSection &amp;ldquo;Use your own Abstract Database TestCase&amp;rdquo; shows how you can prevent this error from happening by using a single cached PDO instance in all your tests.</source>
          <target state="translated">サブセクション「独自の抽象データベースのテストケースを使用する」では、すべてのテストで単一のキャッシュされたPDOインスタンスを使用してこのエラーの発生を防ぐ方法を示しています。</target>
        </trans-unit>
        <trans-unit id="764e63549ba7f657590ece0d4d401c1b245a0bd7" translate="yes" xml:space="preserve">
          <source>The XML Configuration File</source>
          <target state="translated">XML 設定ファイル</target>
        </trans-unit>
        <trans-unit id="228b64dad9196904d05e4eb0ba453e6bcd25efa6" translate="yes" xml:space="preserve">
          <source>The XML configuration above corresponds to attaching the &lt;code&gt;$listener&lt;/code&gt; object (see below) to the test execution:</source>
          <target state="translated">上記のXML構成は、 &lt;code&gt;$listener&lt;/code&gt; オブジェクト（下記参照）をテスト実行にアタッチすることに対応しています。</target>
        </trans-unit>
        <trans-unit id="75818fb49b97cd4fd720df8caad421d4191360b0" translate="yes" xml:space="preserve">
          <source>The XML configuration above corresponds to invoking the TextUI test runner with the following options:</source>
          <target state="translated">上記のXML設定は、以下のオプションでTextUIテストランナーを呼び出すことに対応しています。</target>
        </trans-unit>
        <trans-unit id="a4645a5b0cde6fb40a868281ef35b5ba30a3f1b2" translate="yes" xml:space="preserve">
          <source>The XML configuration above corresponds to the default behaviour of the TextUI test runner documented in &lt;a href=&quot;textui#textui.clioptions&quot;&gt;the section called &amp;ldquo;Command-Line Options&amp;rdquo;&lt;/a&gt;.</source>
          <target state="translated">上記のXML構成は、&lt;a href=&quot;textui#textui.clioptions&quot;&gt;「コマンドラインオプション」というセクションで&lt;/a&gt;説明されているTextUIテストランナーのデフォルトの動作に対応しています。</target>
        </trans-unit>
        <trans-unit id="0d2c27092bc84d0565c7e4b1a8daf95e5cded85f" translate="yes" xml:space="preserve">
          <source>The XML configuration above corresponds to the following PHP code:</source>
          <target state="translated">上記のXML設定は、以下のPHPコードに対応しています。</target>
        </trans-unit>
        <trans-unit id="26031d42845eb0f16ff5084563b8951b2dd38d1d" translate="yes" xml:space="preserve">
          <source>The XML format for code coverage information logging produced by PHPUnit is loosely based upon the one used by &lt;a href=&quot;http://www.atlassian.com/software/clover/&quot;&gt; Clover&lt;/a&gt;. The following example shows the XML logfile generated for the tests in &lt;code&gt;BankAccountTest&lt;/code&gt;:</source>
          <target state="translated">PHPUnitによって生成されるコードカバレッジ情報ロギングのXML形式は、&lt;a href=&quot;http://www.atlassian.com/software/clover/&quot;&gt;Cloverが&lt;/a&gt;使用するものに大まかに基づいています。次の例は、 &lt;code&gt;BankAccountTest&lt;/code&gt; のテスト用に生成されたXMLログファイルを示しています。</target>
        </trans-unit>
        <trans-unit id="cbbdb971258a9c2f1b86b907f07edc9b999f5295" translate="yes" xml:space="preserve">
          <source>The XML logfile for test results produced by PHPUnit is based upon the one used by the &lt;a href=&quot;http://ant.apache.org/manual/Tasks/junit.html&quot;&gt;JUnit task for Apache Ant&lt;/a&gt;. The following example shows the XML logfile generated for the tests in &lt;code&gt;ArrayTest&lt;/code&gt;:</source>
          <target state="translated">PHPUnitによって生成されるテスト結果のXMLログファイルは&lt;a href=&quot;http://ant.apache.org/manual/Tasks/junit.html&quot;&gt;、Apache AntのJUnitタスクで&lt;/a&gt;使用されるものに基づいています。次の例は、 &lt;code&gt;ArrayTest&lt;/code&gt; のテスト用に生成されたXMLログファイルを示しています。</target>
        </trans-unit>
        <trans-unit id="43cb67b01c7336c045798c5c8b1b7bd84b8e98e2" translate="yes" xml:space="preserve">
          <source>The YAML Dataset has no factory method on the Database TestCase currently, so you have to instantiate it manually:</source>
          <target state="translated">YAML Datasetは現在Database TestCaseにファクトリーメソッドを持っていないので、手動でインスタンス化する必要があります。</target>
        </trans-unit>
        <trans-unit id="4001c71f53f3a420ee4920e20a8d4d5f7c188336" translate="yes" xml:space="preserve">
          <source>The adjusted &lt;em&gt;expectedBook.xml&lt;/em&gt; Flat XML file would probably have to look like the following to make the assertion pass:</source>
          <target state="translated">調整&lt;em&gt;されたexpectedBook.xml&lt;/em&gt;フラットXMLファイルは、アサーションパスを作成するために、おそらく次のようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="817fd37fa940844c93a3db87cceac4f92613aaed" translate="yes" xml:space="preserve">
          <source>The annotation can be used on the class and the method level and will override any &lt;code&gt;@covers&lt;/code&gt; tags.</source>
          <target state="translated">アノテーションはクラスおよびメソッドレベルで使用でき、 &lt;code&gt;@covers&lt;/code&gt; タグをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="17ecf26b1f7c08e938f420330b7a07a5cffda992" translate="yes" xml:space="preserve">
          <source>The approach above has several drawbacks:</source>
          <target state="translated">上記のアプローチにはいくつかの欠点があります。</target>
        </trans-unit>
        <trans-unit id="9c4fa902af70096427ee6125f242501b4715270b" translate="yes" xml:space="preserve">
          <source>The assertion methods are declared &lt;code&gt;static&lt;/code&gt; and can be invoked from any context using &lt;code&gt;PHPUnit\Framework\Assert::assertTrue()&lt;/code&gt;, for instance, or using &lt;code&gt;$this-&amp;gt;assertTrue()&lt;/code&gt; or &lt;code&gt;self::assertTrue()&lt;/code&gt;, for instance, in a class that extends &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt;.</source>
          <target state="translated">アサーションメソッドが宣言され &lt;code&gt;static&lt;/code&gt; して使用して、任意のコンテキストから呼び出すことができる &lt;code&gt;PHPUnit\Framework\Assert::assertTrue()&lt;/code&gt; 、例えば、または使用のため &lt;code&gt;$this-&amp;gt;assertTrue()&lt;/code&gt; あるいは &lt;code&gt;self::assertTrue()&lt;/code&gt; 、例えば、Aで &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt; を拡張するクラス。</target>
        </trans-unit>
        <trans-unit id="a374bb3f1d3a96ca1dadaa42e0c5e269cbb6c310" translate="yes" xml:space="preserve">
          <source>The assertion methods are declared static and can be invoked from any context using &lt;code&gt;PHPUnit\Framework\Assert::assertTrue()&lt;/code&gt;, for instance, or using &lt;code&gt;$this-&amp;gt;assertTrue()&lt;/code&gt; or &lt;code&gt;self::assertTrue()&lt;/code&gt;, for instance, in a class that extends &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt;. You can even use global function wrappers such as &lt;code&gt;assertTrue()&lt;/code&gt;.</source>
          <target state="translated">アサーションメソッドは静的に宣言され、使用して任意のコンテキストから呼び出すことができ &lt;code&gt;PHPUnit\Framework\Assert::assertTrue()&lt;/code&gt; 、例えば、または使用のため &lt;code&gt;$this-&amp;gt;assertTrue()&lt;/code&gt; あるいは &lt;code&gt;self::assertTrue()&lt;/code&gt; 、例えば、Aで &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt; を拡張するクラス。 &lt;code&gt;assertTrue()&lt;/code&gt; などのグローバル関数ラッパーを使用することもできます。</target>
        </trans-unit>
        <trans-unit id="f647813f91102b97725ba0cca72a2a6e9d8543d3" translate="yes" xml:space="preserve">
          <source>The attributes of the &lt;code&gt;&amp;lt;phpunit&amp;gt;&lt;/code&gt; element can be used to configure PHPUnit's core functionality.</source>
          <target state="translated">&lt;code&gt;&amp;lt;phpunit&amp;gt;&lt;/code&gt; 要素の属性を使用して、PHPUnitのコア機能を構成できます。</target>
        </trans-unit>
        <trans-unit id="bbb02dc0eb9f8e41a7f3640cc611093c964c82cd" translate="yes" xml:space="preserve">
          <source>The backup and restore operations for global variables and static class attributes use &lt;code&gt;serialize()&lt;/code&gt; and &lt;code&gt;unserialize()&lt;/code&gt;.</source>
          <target state="translated">グローバル変数と静的クラス属性のバックアップおよび復元操作では、 &lt;code&gt;serialize()&lt;/code&gt; および &lt;code&gt;unserialize()&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="e8318516d8bdf70614287e943186b66b21ec6b45" translate="yes" xml:space="preserve">
          <source>The backup and restore operations for global variables can be completely disabled for all tests of a test case class like this</source>
          <target state="translated">グローバル変数のバックアップとリストア操作は、このようなテストケースクラスのすべてのテストに対して完全に無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="89c1027002c8332ef0ed4348559458328c542f5a" translate="yes" xml:space="preserve">
          <source>The code communicates its design principles.</source>
          <target state="translated">コードは、その設計原理を伝えます。</target>
        </trans-unit>
        <trans-unit id="d84402f7d03f44642669bf3b37df6d2c1d3ac5f2" translate="yes" xml:space="preserve">
          <source>The code contains no redundancies.</source>
          <target state="translated">コードには冗長性がありません。</target>
        </trans-unit>
        <trans-unit id="db2f2a3034f57717bc2ab060d56ccb8d8d2918c0" translate="yes" xml:space="preserve">
          <source>The code contains the minimal number of classes and methods.</source>
          <target state="translated">コードには最小限のクラスとメソッドが含まれています。</target>
        </trans-unit>
        <trans-unit id="c8f23824cc6c02b711fa422bddac9ca6317e27df" translate="yes" xml:space="preserve">
          <source>The code coverage report feature requires the &lt;a href=&quot;http://xdebug.org/&quot;&gt;Xdebug&lt;/a&gt; (2.5.0 or later) and &lt;a href=&quot;http://php.net/manual/en/tokenizer.installation.php&quot;&gt;tokenizer&lt;/a&gt; extensions. Generating XML reports requires the &lt;a href=&quot;http://php.net/manual/en/xmlwriter.installation.php&quot;&gt;xmlwriter&lt;/a&gt; extension.</source>
          <target state="translated">コードカバレッジレポート機能が必要と&lt;a href=&quot;http://xdebug.org/&quot;&gt;Xdebugを&lt;/a&gt;（2.5.0以降）と&lt;a href=&quot;http://php.net/manual/en/tokenizer.installation.php&quot;&gt;トークナイザ&lt;/a&gt;拡張子を。XMLレポートを生成するには、&lt;a href=&quot;http://php.net/manual/en/xmlwriter.installation.php&quot;&gt;xmlwriter&lt;/a&gt;拡張機能が必要です。</target>
        </trans-unit>
        <trans-unit id="9daf001126c4dbbe446af2cd2fd90f31ac62d00a" translate="yes" xml:space="preserve">
          <source>The code coverage report feature requires the &lt;a href=&quot;http://xdebug.org/&quot;&gt;Xdebug&lt;/a&gt; (2.7.0 or later) and &lt;a href=&quot;http://php.net/manual/en/tokenizer.installation.php&quot;&gt;tokenizer&lt;/a&gt; extensions. Generating XML reports requires the &lt;a href=&quot;http://php.net/manual/en/xmlwriter.installation.php&quot;&gt;xmlwriter&lt;/a&gt; extension.</source>
          <target state="translated">コードカバレッジレポート機能には、&lt;a href=&quot;http://xdebug.org/&quot;&gt;Xdebug&lt;/a&gt;（2.7.0以降）と&lt;a href=&quot;http://php.net/manual/en/tokenizer.installation.php&quot;&gt;トークナイザー&lt;/a&gt;拡張機能が必要です。XMLレポートを生成するには、&lt;a href=&quot;http://php.net/manual/en/xmlwriter.installation.php&quot;&gt;xmlwriter&lt;/a&gt;拡張機能が必要です。</target>
        </trans-unit>
        <trans-unit id="ae886aff1d4bb7e4623342172c7ee9379e47e356" translate="yes" xml:space="preserve">
          <source>The composite DataSet is very useful for aggregating several already existing datasets into a single dataset. When several datasets contain the same table the rows are appended in the specified order. For example if we have two datasets &lt;em&gt;fixture1.xml&lt;/em&gt;:</source>
          <target state="translated">複合DataSetは、いくつかの既存のデータセットを単一のデータセットに集約するのに非常に役立ちます。複数のデータセットに同じテーブルが含まれている場合、行は指定された順序で追加されます。たとえば、2つのデータセット&lt;em&gt;Fixture1.xml&lt;/em&gt;がある場合：</target>
        </trans-unit>
        <trans-unit id="b6332451e113db2f61123065b0944d013cdb7178" translate="yes" xml:space="preserve">
          <source>The contents of &lt;code&gt;$expected&lt;/code&gt; and &lt;code&gt;$actual&lt;/code&gt; are canonicalized before they are compared. For instance, when the two variables &lt;code&gt;$expected&lt;/code&gt; and &lt;code&gt;$actual&lt;/code&gt; are arrays, then these arrays are sorted before they are compared. When &lt;code&gt;$expected&lt;/code&gt; and &lt;code&gt;$actual&lt;/code&gt; are objects, each object is converted to an array containing all private, protected and public attributes.</source>
          <target state="translated">&lt;code&gt;$expected&lt;/code&gt; と &lt;code&gt;$actual&lt;/code&gt; の内容は、比較される前に正規化されます。たとえば、2つの変数 &lt;code&gt;$expected&lt;/code&gt; と &lt;code&gt;$actual&lt;/code&gt; が配列の場合、これらの配列は比較される前に並べ替えられます。ときに &lt;code&gt;$expected&lt;/code&gt; と &lt;code&gt;$actual&lt;/code&gt; オブジェクトである、各オブジェクトは、すべての保護された、プライベートとパブリックの属性を含む配列に変換されます。</target>
        </trans-unit>
        <trans-unit id="2d4a2061ea6a7410c1f0c4b56781ca6ed4e1dbbb" translate="yes" xml:space="preserve">
          <source>The database schema and tables</source>
          <target state="translated">データベースのスキーマとテーブル</target>
        </trans-unit>
        <trans-unit id="938c178311bb0af6c0d6c5bbea93006d94f5a118" translate="yes" xml:space="preserve">
          <source>The default test name format is the equivalent of using the &lt;code&gt;__METHOD__&lt;/code&gt; magic constant inside the test method.</source>
          <target state="translated">デフォルトのテスト名の形式は、テストメソッド内で &lt;code&gt;__METHOD__&lt;/code&gt; マジック定数を使用することと同等です。</target>
        </trans-unit>
        <trans-unit id="fafe91c1607582fae45ed3f634a7cb69a22ee918" translate="yes" xml:space="preserve">
          <source>The directory to which the HTML report is written.</source>
          <target state="translated">HTMLレポートが書き込まれるディレクトリです。</target>
        </trans-unit>
        <trans-unit id="d65667e89ae4a8477b23a7658764d200f15b9142" translate="yes" xml:space="preserve">
          <source>The directory to which the PHPUnit XML report is written.</source>
          <target state="translated">PHPUnit XML レポートの作成先ディレクトリ。</target>
        </trans-unit>
        <trans-unit id="7bbc1742ec52ef9710087147de4efd64844996a4" translate="yes" xml:space="preserve">
          <source>The easiest way to obtain PHPUnit is to download a &lt;a href=&quot;http://php.net/phar&quot;&gt;PHP Archive (PHAR)&lt;/a&gt; that has all required (as well as some optional) dependencies of PHPUnit bundled in a single file.</source>
          <target state="translated">PHPUnitを取得する最も簡単な方法は、単一のファイルにバンドルされたPHPUnitのすべての必須（および一部のオプション）依存関係を持つ&lt;a href=&quot;http://php.net/phar&quot;&gt;PHPアーカイブ（PHAR）&lt;/a&gt;をダウンロードすることです。</target>
        </trans-unit>
        <trans-unit id="5018197e76b03a766a932461be93a33603fe42cb" translate="yes" xml:space="preserve">
          <source>The effort of implementing the &lt;code&gt;assertTrue()&lt;/code&gt; and &lt;code&gt;isTrue()&lt;/code&gt; methods as well as the &lt;code&gt;PHPUnit\Framework\Constraint\IsTrue&lt;/code&gt; class yields the benefit that &lt;code&gt;assertThat()&lt;/code&gt; automatically takes care of evaluating the assertion and bookkeeping tasks such as counting it for statistics. Furthermore, the &lt;code&gt;isTrue()&lt;/code&gt; method can be used as a matcher when configuring mock objects.</source>
          <target state="translated">&lt;code&gt;isTrue()&lt;/code&gt; メソッドとisTrue（）メソッド、および &lt;code&gt;PHPUnit\Framework\Constraint\IsTrue&lt;/code&gt; クラスを実装する作業により、 &lt;code&gt;assertTrue()&lt;/code&gt; がアサーションの評価と、統計のカウントなどの簿記タスクを自動的に &lt;code&gt;assertThat()&lt;/code&gt; するという利点が得られます。さらに、 &lt;code&gt;isTrue()&lt;/code&gt; メソッドは、モックオブジェクトを構成する際のマッチャーとして使用できます。</target>
        </trans-unit>
        <trans-unit id="71c175c5291b428595e01b5b97f7fd89a34ff5ba" translate="yes" xml:space="preserve">
          <source>The effort of implementing the &lt;code&gt;assertTrue()&lt;/code&gt; and &lt;code&gt;isTrue()&lt;/code&gt; methods as well as the &lt;code&gt;PHPUnit_Framework_Constraint_IsTrue&lt;/code&gt; class yields the benefit that &lt;code&gt;assertThat()&lt;/code&gt; automatically takes care of evaluating the assertion and bookkeeping tasks such as counting it for statistics. Furthermore, the &lt;code&gt;isTrue()&lt;/code&gt; method can be used as a matcher when configuring mock objects.</source>
          <target state="translated">&lt;code&gt;isTrue()&lt;/code&gt; メソッドとisTrue（）メソッド、および &lt;code&gt;PHPUnit_Framework_Constraint_IsTrue&lt;/code&gt; クラスを実装する取り組みにより、 &lt;code&gt;assertTrue()&lt;/code&gt; がアサーションの評価と統計のためのカウントなどの簿記タスクを自動的に &lt;code&gt;assertThat()&lt;/code&gt; するという利点が生まれます。さらに、モックオブジェクトを設定するときに &lt;code&gt;isTrue()&lt;/code&gt; メソッドをマッチャーとして使用できます。</target>
        </trans-unit>
        <trans-unit id="10dfb122a8e8abb204758c4d444cf935f173050e" translate="yes" xml:space="preserve">
          <source>The example below shows all template methods that are available in a test case class.</source>
          <target state="translated">以下の例では、テストケースクラスで利用できるすべてのテンプレートメソッドを示しています。</target>
        </trans-unit>
        <trans-unit id="ebc8411fbb68b74b80f8a4d104ff20348cb03f71" translate="yes" xml:space="preserve">
          <source>The example shown above instructs PHPUnit to include all sourcecode files with &lt;code&gt;.php&lt;/code&gt; suffix in the &lt;code&gt;src&lt;/code&gt; directory and its sub-directories in the code coverage report but exclude all files with &lt;code&gt;.php&lt;/code&gt; suffix in the &lt;code&gt;src/generated&lt;/code&gt; directory and its sub-directories as well as the &lt;code&gt;src/autoload.php&lt;/code&gt; file from the code coverage report(s).</source>
          <target state="translated">上記の例では、PHPUnitに、 &lt;code&gt;src&lt;/code&gt; ディレクトリとそのサブディレクトリに &lt;code&gt;.php&lt;/code&gt; サフィックスが付いたすべてのソースコードファイルをコードカバレッジレポートに含め、 &lt;code&gt;src/generated&lt;/code&gt; ディレクトリとそのサブディレクトリに &lt;code&gt;.php&lt;/code&gt; サフィックスが付いたすべてのファイルを除外するように指示しています。コードカバレッジレポートの &lt;code&gt;src/autoload.php&lt;/code&gt; ファイルとして。</target>
        </trans-unit>
        <trans-unit id="63246d15bea0ca120fc3f58fa644be33610c9fb6" translate="yes" xml:space="preserve">
          <source>The example shown above instructs PHPUnit to include all sourcecode files with &lt;code&gt;.php&lt;/code&gt; suffix in the &lt;code&gt;src&lt;/code&gt; directory and its sub-directories in the code coverage report(s).</source>
          <target state="translated">上記の例では、PHPUnitに、 &lt;code&gt;.php&lt;/code&gt; サフィックスが付いたすべてのソースコードファイルを &lt;code&gt;src&lt;/code&gt; ディレクトリに含め、そのサブディレクトリをコードカバレッジレポートに含めるように指示しています。</target>
        </trans-unit>
        <trans-unit id="8311f6f84172594e6fbf042315b5e7a17f3f4a5f" translate="yes" xml:space="preserve">
          <source>The example shown above is equivalent to invoking the PHPUnit test runner with &lt;code&gt;--group name --exclude-group name&lt;/code&gt;.</source>
          <target state="translated">上記の例は、 &lt;code&gt;--group name --exclude-group name&lt;/code&gt; を使用してPHPUnitテストランナーを呼び出すのと同じです。</target>
        </trans-unit>
        <trans-unit id="f0191eb48825e581046f69f441455b1b4dd7a313" translate="yes" xml:space="preserve">
          <source>The example shown above only works when the original class does not declare a method named &quot;method&quot;.</source>
          <target state="translated">上記の例は、元のクラスが「メソッド」という名前のメソッドを宣言していない場合にのみ動作します。</target>
        </trans-unit>
        <trans-unit id="ffb54c8c4bc00f61d91c6e8d8f2f2b0c794f3f1d" translate="yes" xml:space="preserve">
          <source>The example shown above only works when the original class does not declare a method named &amp;ldquo;method&amp;rdquo;.</source>
          <target state="translated">上記の例は、元のクラスが「method」という名前のメソッドを宣言していない場合にのみ機能します。</target>
        </trans-unit>
        <trans-unit id="542526476171f549cd63c1b482aa12e5ac2e2c5e" translate="yes" xml:space="preserve">
          <source>The expected message can also be specified as a regular expression using the &lt;code&gt;@expectedExceptionMessageRegExp&lt;/code&gt; annotation. This is helpful for situations where a substring is not adequate for matching a given message.</source>
          <target state="translated">予期されるメッセージは、 &lt;code&gt;@expectedExceptionMessageRegExp&lt;/code&gt; アノテーションを使用して正規表現として指定することもできます。これは、特定のメッセージの照合に部分文字列では不十分な場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="3a988d61a0751672aaafde2cf98f863f01cffc3d" translate="yes" xml:space="preserve">
          <source>The expected message can be a substring of the exception Message. This can be useful to only assert that a certain name or parameter that was passed in shows up in the exception and not fixate the whole exception message in the test.</source>
          <target state="translated">期待されるメッセージは例外メッセージの部分文字列にすることができます。これは、渡された特定の名前やパラメータが例外に表示されていることだけを主張し、 テストで例外メッセージ全体を固定化しないようにするのに便利です。</target>
        </trans-unit>
        <trans-unit id="ebe13980050e37eb551b1982f2385ded3cf3de2c" translate="yes" xml:space="preserve">
          <source>The file to which the Clover XML report is written.</source>
          <target state="translated">Clover XML レポートが書き込まれるファイル。</target>
        </trans-unit>
        <trans-unit id="4b5fc43d6d222cc5003a30f3da2202f1d98ae5d0" translate="yes" xml:space="preserve">
          <source>The file to which the Crap4J XML report is written.</source>
          <target state="translated">Crap4J XMLレポートが書き込まれるファイル。</target>
        </trans-unit>
        <trans-unit id="1c4b2cec2fa3106843007d86aacb255be48143fe" translate="yes" xml:space="preserve">
          <source>The file to which the PHP report is written.</source>
          <target state="translated">PHP のレポートが書き込まれるファイル。</target>
        </trans-unit>
        <trans-unit id="71e631337b068928ccec535693f2c65e78fb0afc" translate="yes" xml:space="preserve">
          <source>The file to which the test result logfile in JUnit XML format is written.</source>
          <target state="translated">JUnit XML 形式のテスト結果ログファイルを書き込むファイル。</target>
        </trans-unit>
        <trans-unit id="d6110c246be6b3b6e339bc5a9f084886d7d04320" translate="yes" xml:space="preserve">
          <source>The file to which the test result logfile in TeamCity format is written.</source>
          <target state="translated">TeamCity 形式のテスト結果ログファイルが書き込まれるファイルです。</target>
        </trans-unit>
        <trans-unit id="940fe62d5126d406da7447b21c13af111be86c93" translate="yes" xml:space="preserve">
          <source>The file to which the test result logfile in TestDox HTML format is written.</source>
          <target state="translated">TestDox HTML 形式のテスト結果ログファイルが書き込まれるファイルです。</target>
        </trans-unit>
        <trans-unit id="7835b9e6be87a867b2d2b81f64eab840fc82037f" translate="yes" xml:space="preserve">
          <source>The file to which the test result logfile in TestDox XML format is written.</source>
          <target state="translated">TestDox XML形式のテスト結果ログファイルが書き込まれるファイルです。</target>
        </trans-unit>
        <trans-unit id="80cbc40e557b8f251839fa97c86f6e14fbb025fb" translate="yes" xml:space="preserve">
          <source>The file to which the test result logfile in TestDox text format is written.</source>
          <target state="translated">TestDoxテキスト形式のテスト結果ログファイルを書き込むファイルです。</target>
        </trans-unit>
        <trans-unit id="643df4100d25cdf8eb10f709950767408cd68c96" translate="yes" xml:space="preserve">
          <source>The file to which the test result logfile in text format is written.</source>
          <target state="translated">テキスト形式のテスト結果ログファイルを書き込むファイルです。</target>
        </trans-unit>
        <trans-unit id="6f79f747698176a4ee3fc9b29e27a3e5b2c36786" translate="yes" xml:space="preserve">
          <source>The file to which the text report is written.</source>
          <target state="translated">テキストレポートが書き込まれるファイル。</target>
        </trans-unit>
        <trans-unit id="b14c86bca44a30a200c1de590f23e890b125bbd6" translate="yes" xml:space="preserve">
          <source>The file-based datasets and tables are generally used for the initial fixture and to describe the expected state of the database.</source>
          <target state="translated">ファイルベースのデータセットとテーブルは、一般的に初期フィクスチャに使用され、データベースの期待される状態を記述するために使用されます。</target>
        </trans-unit>
        <trans-unit id="626cef57956337081074e02c6e5a1eb0b1936d64" translate="yes" xml:space="preserve">
          <source>The flat xml dataset makes a crucial assumption now, defining that the attributes on the first defined row of a table define the columns of this table. In the previous example this would mean &amp;ldquo;id&amp;rdquo;, &amp;ldquo;content&amp;rdquo;, &amp;ldquo;user&amp;rdquo; and &amp;ldquo;created&amp;rdquo; are columns of the guestbook table. For the second row where &amp;ldquo;user&amp;rdquo; is not defined a NULL would be inserted into the database.</source>
          <target state="translated">フラットxmlデータセットは、ここで重要な仮定を行い、テーブルの最初に定義された行の属性がこのテーブルの列を定義することを定義します。前の例では、これは「id」、「content」、「user」、「created」がゲストブックテーブルの列であることを意味します。「user」が定義されていない2行目では、NULLがデータベースに挿入されます。</target>
        </trans-unit>
        <trans-unit id="a3c4d50b1b8ad776f60daad1e986542d26adb9dc" translate="yes" xml:space="preserve">
          <source>The following XML logfile was generated for two tests, &lt;code&gt;testFailure&lt;/code&gt; and &lt;code&gt;testError&lt;/code&gt;, of a test case class named &lt;code&gt;FailureErrorTest&lt;/code&gt; and shows how failures and errors are denoted.</source>
          <target state="translated">次のXMLログファイルには、二つの試験のために生成された &lt;code&gt;testFailure&lt;/code&gt; と &lt;code&gt;testError&lt;/code&gt; が名前のテストケースクラスの、 &lt;code&gt;FailureErrorTest&lt;/code&gt; に失敗し、エラーが示されている方法やショー。</target>
        </trans-unit>
        <trans-unit id="8790de6b6ffc9899c041f8b3c0b1bc83bcb28c65" translate="yes" xml:space="preserve">
          <source>The following conditions will help you to improve the code and design of your project, while using unit tests to verify that the refactoring's transformation steps are, indeed, behavior-preserving and do not introduce errors:</source>
          <target state="translated">以下の条件を満たすことで、リファクタリングの変換ステップが実際に動作を維持し、エラーが発生しないことをユニットテストを使って検証しながら、プロジェクトのコードや設計を改善していくことができます。</target>
        </trans-unit>
        <trans-unit id="7a14c0051ef28625d055434f6e70e2ba5f30d65d" translate="yes" xml:space="preserve">
          <source>The following example details how release verification works. We start by downloading &lt;code&gt;phpunit.phar&lt;/code&gt; as well as its detached PGP signature &lt;code&gt;phpunit.phar.asc&lt;/code&gt;:</source>
          <target state="translated">次の例では、リリース検証の仕組みを詳しく説明しています。まず、 &lt;code&gt;phpunit.phar&lt;/code&gt; とその分離されたPGP署名 &lt;code&gt;phpunit.phar.asc&lt;/code&gt; をダウンロードします。</target>
        </trans-unit>
        <trans-unit id="fd363f999dbfcfe8860ed9a825fc223bb6f8583a" translate="yes" xml:space="preserve">
          <source>The following operators are supported for PHP, PHPUnit, and extension version constraints: &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;=&lt;/code&gt;, &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">次の演算子は、PHP、PHPUnit、および拡張バージョンの制約でサポートされています： &lt;code&gt;&amp;lt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;=&lt;/code&gt; 、 &lt;code&gt;&amp;gt;&lt;/code&gt; 、 &lt;code&gt;&amp;gt;=&lt;/code&gt; 、 &lt;code&gt;=&lt;/code&gt; 、 &lt;code&gt;==&lt;/code&gt; 、 &lt;code&gt;!=&lt;/code&gt; 、 &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="35faa202fa98bac6b163bda1061d6c07f0da8283" translate="yes" xml:space="preserve">
          <source>The following optional packages are available:</source>
          <target state="translated">以下のオプションパッケージをご用意しております。</target>
        </trans-unit>
        <trans-unit id="1d21520321aef45cd8063336744f6a70f080fc19" translate="yes" xml:space="preserve">
          <source>The format string may contain the following placeholders:</source>
          <target state="translated">フォーマット文字列には、以下のプレースホルダを含めることができます。</target>
        </trans-unit>
        <trans-unit id="36fcd5239234f2eeefa02f5f9cf6be3da555413c" translate="yes" xml:space="preserve">
          <source>The four stages of a database test</source>
          <target state="translated">データベーステストの4つの段階</target>
        </trans-unit>
        <trans-unit id="c6fd0d0f64f815eb09cc16a7d9bb07a3cf94e58b" translate="yes" xml:space="preserve">
          <source>The handling of NULL values with the flat xml dataset is tedious. A NULL value is different than an empty string value in almost any database (Oracle being an exception), something that is difficult to describe in the flat xml format. You can represent a NULL's value by omitting the attribute from the row specification. If our guestbook would allow anonymous entries represented by a NULL value in the user column, a hypothetical state of the guestbook table could look like:</source>
          <target state="translated">フラット xml データセットでの NULL 値の扱いは面倒です。ほとんどのデータベースでは、NULL値は空の文字列値とは異なります(Oracleも例外です)。NULLの値を表現するには、行の指定から属性を省略します。guestbook が user 列に NULL 値で表現された匿名エントリを許可すると、 guestbook テーブルの仮想的な状態は次のようになります。</target>
        </trans-unit>
        <trans-unit id="57bd8c8c92de2670f3777436235ea33e685a33c0" translate="yes" xml:space="preserve">
          <source>The ignored lines of code (marked as ignored using the annotations) are counted as executed (if they are executable) and will not be highlighted.</source>
          <target state="translated">無視されたコード行(注釈を使用して無視されたものとしてマークされている)は、実行されたものとしてカウントされ(実行可能な場合)、ハイライトされることはありません。</target>
        </trans-unit>
        <trans-unit id="3370507adda7508de3877d98fe776d61a3d785b1" translate="yes" xml:space="preserve">
          <source>The implementation for this Array DataSet is simple and straightforward:</source>
          <target state="translated">このArray DataSetの実装はシンプルで簡単です。</target>
        </trans-unit>
        <trans-unit id="910b25c748bfce9bd36982494ff829905c45729b" translate="yes" xml:space="preserve">
          <source>The lower bound of what should be considered &amp;ldquo;high coverage&amp;rdquo;.</source>
          <target state="translated">「高カバレッジ」と見なされるべきものの下限。</target>
        </trans-unit>
        <trans-unit id="d375f2576760126ca8bf052abe92ae70eef0b705" translate="yes" xml:space="preserve">
          <source>The method must accept exactly one argument</source>
          <target state="translated">メソッドは正確に1つの引数を受け入れなければなりません。</target>
        </trans-unit>
        <trans-unit id="368bf9bf7ea184e002829fd5e6450dba3c436ece" translate="yes" xml:space="preserve">
          <source>The method must have a declared &lt;code&gt;bool&lt;/code&gt; return type</source>
          <target state="translated">メソッドには、宣言された &lt;code&gt;bool&lt;/code&gt; 戻り値の型が必要です</target>
        </trans-unit>
        <trans-unit id="80356cf45180bbaca54f22c4ac08c0fd96e4782f" translate="yes" xml:space="preserve">
          <source>The method you want to test executes a rather large JOIN operation and uses the data to calculate some important results.</source>
          <target state="translated">テストしたいメソッドは、かなり大きなJOIN操作を実行し、データを使っていくつかの重要な結果を計算します。</target>
        </trans-unit>
        <trans-unit id="75562a28741b6a3b377647f6a9875c41d10505ab" translate="yes" xml:space="preserve">
          <source>The most common dataset is called Flat XML. It is a very simple xml format where a tag inside the root node &lt;code&gt;&amp;lt;dataset&amp;gt;&lt;/code&gt; represents exactly one row in the database. The tags name equals the table to insert the row into and an attribute represents the column. An example for a simple guestbook application could look like this:</source>
          <target state="translated">最も一般的なデータセットはフラットXMLと呼ばれます。これは非常に単純なxml形式であり、ルートノード &lt;code&gt;&amp;lt;dataset&amp;gt;&lt;/code&gt; 内のタグはデータベース内の1つの行を表します。タグ名は行を挿入するテーブルと等しく、属性は列を表します。簡単なゲストブックアプリケーションの例は次のようになります。</target>
        </trans-unit>
        <trans-unit id="639459b72517d7801e18b01e6e5da098e53e0d84" translate="yes" xml:space="preserve">
          <source>The most common use case for custom comparators are Value Objects. These objects usually have an &lt;code&gt;equals(self $other): bool&lt;/code&gt; method (or a method just like that but with a different name) for comparing two instances of the Value Object&amp;rsquo;s type. &lt;code&gt;assertObjectEquals()&lt;/code&gt; makes custom comparison of objects convenient for this common use case:</source>
          <target state="translated">カスタムコンパレータの最も一般的な使用例は、値オブジェクトです。これらのオブジェクトには通常、値オブジェクトの型の2つのインスタンスを比較するための &lt;code&gt;equals(self $other): bool&lt;/code&gt; メソッド（またはそのようなメソッドですが、名前が異なります）があります。 &lt;code&gt;assertObjectEquals()&lt;/code&gt; は、オブジェクトのカスタム比較をこの一般的なユースケースに便利にします。</target>
        </trans-unit>
        <trans-unit id="34dd41ead40b9f2efcae6427399d721238a1e269" translate="yes" xml:space="preserve">
          <source>The order in which tests are executed can be made explicit:</source>
          <target state="translated">テストの実行順序を明示することができます。</target>
        </trans-unit>
        <trans-unit id="f88ff1143bb2afe4c9685e63990ed885ac6ab25c" translate="yes" xml:space="preserve">
          <source>The possibility to run the database tests against different database targets easily is very important if you are developing on the development machine. If several developers run the database tests against the same database connection you can easily experience test-failures because of race-conditions.</source>
          <target state="translated">開発マシンで開発している場合、異なるデータベースターゲットに対してデータベーステストを簡単に実行できる可能性は非常に重要です。複数の開発者が同じデータベース接続に対してデータベーステストを実行した場合、 競合条件によるテストの失敗を簡単に経験することができます。</target>
        </trans-unit>
        <trans-unit id="8c8681aef2412cda92eb8cb83b9d88d626b61f48" translate="yes" xml:space="preserve">
          <source>The practice of replacing an object with a test double that (optionally) returns configured return values is referred to as &lt;em&gt;stubbing&lt;/em&gt;. You can use a &lt;em&gt;stub&lt;/em&gt; to &quot;replace a real component on which the SUT depends so that the test has a control point for the indirect inputs of the SUT. This allows the test to force the SUT down paths it might not otherwise execute&quot;.</source>
          <target state="translated">オブジェクトを（オプションで）構成された戻り値を返すテストdoubleで置き換えることは、&lt;em&gt;スタブ&lt;/em&gt;と呼ばれます。&lt;em&gt;スタブ&lt;/em&gt;を使用して、「SUTが依存する実際のコンポーネントを置き換えて、テストにSUTの間接入力用の制御点を持たせることができます。これにより、テストでSUTを強制的にダウンさせることができます」</target>
        </trans-unit>
        <trans-unit id="ae7dad6ad9e9e0744913a3a2bddaead09ebf3d07" translate="yes" xml:space="preserve">
          <source>The practice of replacing an object with a test double that (optionally) returns configured return values is referred to as &lt;em&gt;stubbing&lt;/em&gt;. You can use a &lt;em&gt;stub&lt;/em&gt; to &amp;ldquo;replace a real component on which the SUT depends so that the test has a control point for the indirect inputs of the SUT. This allows the test to force the SUT down paths it might not otherwise execute&amp;rdquo;.</source>
          <target state="translated">オブジェクトを（オプションで）構成された戻り値を返すテストダブルに置き換える方法は、&lt;em&gt;スタブ&lt;/em&gt;と呼ばれます。&lt;em&gt;スタブ&lt;/em&gt;を使用して、「SUTが依存する実際のコンポーネントを置き換えて、テストにSUTの間接入力の制御点を持たせることができます。これにより、テストは、他の方法では実行されない可能性のあるSUTのパスを強制的にダウンさせることができます。」</target>
        </trans-unit>
        <trans-unit id="54b5071b0361e07844192796d42ced7a7792cb89" translate="yes" xml:space="preserve">
          <source>The practice of replacing an object with a test double that verifies expectations, for instance asserting that a method has been called, is referred to as &lt;em&gt;mocking&lt;/em&gt;.</source>
          <target state="translated">たとえば、メソッドが呼び出されたことをアサートするなど、期待を検証するテストdoubleでオブジェクトを置き換えることは、&lt;em&gt;モッキング&lt;/em&gt;と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="17efd3eb9497510cc6dd62322c3bbd3ae8f134f7" translate="yes" xml:space="preserve">
          <source>The previous assertion is helpful, but we surely want to check the actual contents of the table to verify that all the values were written into the correct columns. This can be achieved by a table assertion.</source>
          <target state="translated">前のアサーションは役に立ちますが、実際のテーブルの内容をチェックして、すべての値が正しい列に書き込まれているかどうかを確認したいのは確かです。これはテーブルのアサーションで実現できます。</target>
        </trans-unit>
        <trans-unit id="cc09ba1ece3dc97d6701bd1bdc67d51487577aff" translate="yes" xml:space="preserve">
          <source>The public interface is used internally by the &lt;code&gt;assertDataSetsEqual()&lt;/code&gt; assertion on the Database TestCase to check for dataset quality. From the &lt;code&gt;IteratorAggregate&lt;/code&gt; interface the IDataSet inherits the &lt;code&gt;getIterator()&lt;/code&gt; method to iterate over all tables of the dataset. The reverse iterator allows PHPUnit to truncate tables opposite the order they were created to satisfy foreign key constraints.</source>
          <target state="translated">パブリックインターフェースは、データベースのテストケースの &lt;code&gt;assertDataSetsEqual()&lt;/code&gt; アサーションによって内部的に使用され、データセットの品質をチェックします。 &lt;code&gt;IteratorAggregate&lt;/code&gt; インターフェイスから、IDataSetは &lt;code&gt;getIterator()&lt;/code&gt; メソッドを継承して、データセットのすべてのテーブルを反復処理します。リバースイテレーターにより、PHPUnitは、外部キー制約を満たすために、作成された順序とは逆のテーブルを切り捨てることができます。</target>
        </trans-unit>
        <trans-unit id="030da757e389a28a0de9ae1d0922fb0b60ac245c" translate="yes" xml:space="preserve">
          <source>The respective parameter must have a declared type</source>
          <target state="translated">それぞれのパラメータは、宣言された型</target>
        </trans-unit>
        <trans-unit id="21bb118bcf37992474e6a634e350e7ab89ce4d3c" translate="yes" xml:space="preserve">
          <source>The return value yielded by a producer is passed &quot;as-is&quot; to its consumers by default. This means that when a producer returns an object, a reference to that object is passed to the consumers. When a copy should be used instead of a reference, then &lt;code&gt;@depends clone&lt;/code&gt; should be used instead of &lt;code&gt;@depends&lt;/code&gt;.</source>
          <target state="translated">プロデューサによって生成された戻り値は、デフォルトで「そのまま」コンシューマに渡されます。つまり、プロデューサがオブジェクトを返すと、そのオブジェクトへの参照がコンシューマに渡されます。参照の代わりにコピーを使用する必要がある場合は、 &lt;code&gt;@depends&lt;/code&gt; の代わりに@depends &lt;code&gt;@depends clone&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="f665cf55cbc0cfd1598b8218cdee8c349e824eb9" translate="yes" xml:space="preserve">
          <source>The return value yielded by a producer is passed &amp;ldquo;as-is&amp;rdquo; to its consumers by default. This means that when a producer returns an object, a reference to that object is passed to the consumers. Instead of a reference either (a) a (deep) copy via &lt;code&gt;@depends clone&lt;/code&gt;, or (b) a (normal shallow) clone (based on PHP keyword &lt;code&gt;clone&lt;/code&gt;) via &lt;code&gt;@depends shallowClone&lt;/code&gt; are possible too.</source>
          <target state="translated">プロデューサーによって生成された戻り値は、デフォルトで「現状のまま」コンシューマーに渡されます。これは、プロデューサーがオブジェクトを返すときに、そのオブジェクトへの参照がコンシューマーに渡されることを意味します。参照の代わりに、（a） &lt;code&gt;@depends clone&lt;/code&gt; を介した（深い）コピー、または（b）@dependsshallowCloneを介した（通常の浅い）クローン（PHPキーワード &lt;code&gt;clone&lt;/code&gt; に基づく）の &lt;code&gt;@depends shallowClone&lt;/code&gt; も可能です。</target>
        </trans-unit>
        <trans-unit id="d8ed433389df6f1aa848b4e229268e91f4753c9c" translate="yes" xml:space="preserve">
          <source>The same applies to static properties of classes that were newly loaded/declared within a test. They cannot be reset to their originally declared default value after the test, since that value is unknown. Whichever value is set will leak into subsequent tests.</source>
          <target state="translated">テスト内で新たにロードされた/宣言されたクラスの静的プロパティにも同じことが当てはまります。これらのプロパティは、テスト後に元々宣言されていたデフォルト値にリセットすることはできません。どちらの値が設定されていても、それ以降のテストに漏れてしまいます。</target>
        </trans-unit>
        <trans-unit id="387f8e603eee1f6b84a5322a6f58a36b175c81ac" translate="yes" xml:space="preserve">
          <source>The section &amp;ldquo;Using the Database Connection&amp;rdquo; explains the API of this interface and how you can make the best use of it.</source>
          <target state="translated">「データベース接続の使用」のセクションでは、このインターフェースのAPIと、それを最大限に活用する方法について説明しています。</target>
        </trans-unit>
        <trans-unit id="386cf0125afd518facf71323bdce056937c4e37c" translate="yes" xml:space="preserve">
          <source>The section on Database Assertions will show some more details on how to make use of the Query DataSet.</source>
          <target state="translated">データベースアサーションの項では、クエリデータセットの活用方法をもう少し詳しく説明します。</target>
        </trans-unit>
        <trans-unit id="704a8533261013b9e955453ca24e3993417cc2f0" translate="yes" xml:space="preserve">
          <source>The standard test suite loader will look for the sourcefile in the current working directory and in each directory that is specified in PHP&amp;rsquo;s &lt;code&gt;include_path&lt;/code&gt; configuration directive. A class name such as &lt;code&gt;Project_Package_Class&lt;/code&gt; is mapped to the source filename &lt;code&gt;Project/Package/Class.php&lt;/code&gt;.</source>
          <target state="translated">標準のテストスイートローダーは、現在の作業ディレクトリと、PHPの &lt;code&gt;include_path&lt;/code&gt; 構成ディレクティブで指定されている各ディレクトリでソースファイルを検索します。 &lt;code&gt;Project_Package_Class&lt;/code&gt; などのクラス名は、ソースファイル名 &lt;code&gt;Project/Package/Class.php&lt;/code&gt; マップされます。</target>
        </trans-unit>
        <trans-unit id="dcec9c3dbffecbdff28b777b0cab9c16c4bc9ddf" translate="yes" xml:space="preserve">
          <source>The standard test suite loader will look for the sourcefile in the current working directory and in each directory that is specified in PHP's &lt;code&gt;include_path&lt;/code&gt; configuration directive. A class name such as &lt;code&gt;Project_Package_Class&lt;/code&gt; is mapped to the source filename &lt;code&gt;Project/Package/Class.php&lt;/code&gt;.</source>
          <target state="translated">標準のテストスイートローダーは、現在の作業ディレクトリと、PHPの &lt;code&gt;include_path&lt;/code&gt; 構成ディレクティブで指定されている各ディレクトリでソースファイルを探します。 &lt;code&gt;Project_Package_Class&lt;/code&gt; などのクラス名は、ソースファイル名 &lt;code&gt;Project/Package/Class.php&lt;/code&gt; にマッピングされます。</target>
        </trans-unit>
        <trans-unit id="160f10ea7fc57fe909fba6e6b874175626aac209" translate="yes" xml:space="preserve">
          <source>The table name</source>
          <target state="translated">テーブル名</target>
        </trans-unit>
        <trans-unit id="496c4d74cbcf8bad3b09189b642e3f9fa335dd1f" translate="yes" xml:space="preserve">
          <source>The test itself is more concise.</source>
          <target state="translated">試験自体はもっと簡潔に。</target>
        </trans-unit>
        <trans-unit id="d732cc0f6a73ef9cc4f9019b5cbb997d5650b9f4" translate="yes" xml:space="preserve">
          <source>The test name for a PHPT test is the filesystem path.</source>
          <target state="translated">PHPT テストのテスト名は、ファイルシステムのパスとなります。</target>
        </trans-unit>
        <trans-unit id="1949cf215f75c47db940619879605780b278b8ce" translate="yes" xml:space="preserve">
          <source>The test names to match will be in one of the following formats:</source>
          <target state="translated">一致するテスト名は、以下のいずれかの形式になります。</target>
        </trans-unit>
        <trans-unit id="b7b998caa8ea272cf8d8918c703fe68bbfdb84fa" translate="yes" xml:space="preserve">
          <source>The tests are public methods that are named &lt;code&gt;test*&lt;/code&gt;.</source>
          <target state="translated">テストは &lt;code&gt;test*&lt;/code&gt; という名前のパブリックメソッドです。</target>
        </trans-unit>
        <trans-unit id="067e0acd96063588549c1264f3135b20895c6ea9" translate="yes" xml:space="preserve">
          <source>The tests for a class &lt;code&gt;Class&lt;/code&gt; go into a class &lt;code&gt;ClassTest&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;Class&lt;/code&gt; のテストは &lt;code&gt;ClassTest&lt;/code&gt; クラスに入ります。</target>
        </trans-unit>
        <trans-unit id="437db73904dc79ea7233ea20c436d9401ae81870" translate="yes" xml:space="preserve">
          <source>The upper bound of what should be considered &amp;ldquo;low coverage&amp;rdquo;.</source>
          <target state="translated">「低カバレッジ」と見なされるべきものの上限。</target>
        </trans-unit>
        <trans-unit id="98d0a3d3993a84844e9e3c508fe8766adbac3485" translate="yes" xml:space="preserve">
          <source>There are few good reasons to share fixtures between tests, but in most cases the need to share a fixture between tests stems from an unresolved design problem.</source>
          <target state="translated">テスト間でフィクスチャを共有する正当な理由はほとんどありませんが、ほとんどの場合、フィクスチャをテスト間で共有する必要性は、未解決の設計問題に起因しています。</target>
        </trans-unit>
        <trans-unit id="992e15c23b7d890dda0fdc37581bff07bbc38563" translate="yes" xml:space="preserve">
          <source>There are several means to achieve this pre-condition to database testing.</source>
          <target state="translated">このデータベーステストへの事前条件を実現するためには、いくつかの手段があります。</target>
        </trans-unit>
        <trans-unit id="ac1a8b3fe1b0f81c33c92ba4dbe72abc0fd463fe" translate="yes" xml:space="preserve">
          <source>There are three different types of datasets/datatables:</source>
          <target state="translated">データセット/データテーブルには3つの種類があります。</target>
        </trans-unit>
        <trans-unit id="1528ac79f82c0177f97b41a721280907ad0e8f63" translate="yes" xml:space="preserve">
          <source>There are three interesting methods on the Connection interface which has to be returned from the &lt;code&gt;getConnection()&lt;/code&gt; method on the Database TestCase:</source>
          <target state="translated">Database TestCaseの &lt;code&gt;getConnection()&lt;/code&gt; メソッドから返される必要があるConnectionインターフェースには、3つの興味深いメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="f6cdf1278a971e0beb06b88d9568dcedafe9fcea" translate="yes" xml:space="preserve">
          <source>There are three possible values for this option:</source>
          <target state="translated">このオプションには3つの値があります。</target>
        </trans-unit>
        <trans-unit id="ad75b53f50d95ecf15ca76e50d41d37cf4c24576" translate="yes" xml:space="preserve">
          <source>There is a good reason why all the examples on unit testing do not include interactions with the database: these kind of tests are both complex to setup and maintain. While testing against your database you need to take care of the following variables:</source>
          <target state="translated">ユニットテストのすべての例がデータベースとのインタラクションを含んでいないのには理由があります。データベースに対するテストを行う際には、以下の変数に注意する必要があります。</target>
        </trans-unit>
        <trans-unit id="46fbee926b7a97f002f834163ac5262ffd44ff81" translate="yes" xml:space="preserve">
          <source>There is another more structured XML dataset, which is a bit more verbose to write but avoids the NULL problems of the Flat XML dataset. Inside the root node &lt;code&gt;&amp;lt;dataset&amp;gt;&lt;/code&gt; you can specify &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;column&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;row&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;null /&amp;gt;&lt;/code&gt; tags. An equivalent dataset to the previously defined Guestbook Flat XML looks like:</source>
          <target state="translated">もう少し構造化されたXMLデータセットがあります。これは、書くのが少し冗長ですが、フラットXMLデータセットのNULL問題を回避します。ルートノード &lt;code&gt;&amp;lt;dataset&amp;gt;&lt;/code&gt; 内では、 &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;column&amp;gt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;row&amp;gt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt; 、および &lt;code&gt;&amp;lt;null /&amp;gt;&lt;/code&gt; タグを指定できます。以前に定義されたGuestbook Flat XMLと同等のデータセットは次のようになります。</target>
        </trans-unit>
        <trans-unit id="de8637931631873f6bca7dcced76c5f1a3e3e4a9" translate="yes" xml:space="preserve">
          <source>There is no Array based DataSet in PHPUnit's Database Extension (yet), but we can implement our own easily. Our guestbook example should look like:</source>
          <target state="translated">PHPUnit の Database Extension には (まだ)配列ベースのデータセットはありませんが、 独自のデータセットを簡単に実装することができます。ゲストブックの例は次のようになります。</target>
        </trans-unit>
        <trans-unit id="57bb6b85e5611494208d3bb53e4fa8c13adb2482" translate="yes" xml:space="preserve">
          <source>This abstraction is necessary to compare the actual contents of a database against the expected contents. Expectations can be represented as XML, YAML, CSV files or PHP array for example. The DataSet and DataTable interfaces enable the comparison of these conceptually different sources, emulating relational database storage in a semantically similar approach.</source>
          <target state="translated">この抽象化は、データベースの実際のコンテンツと期待されるコンテンツを比較するために必要です。期待値は、例えばXML、YAML、CSVファイル、PHP配列などで表現することができます。データセットとデータテーブルのインターフェイスは、これらの概念的に異なるソースの比較を可能にし、意味的に類似したアプローチでリレーショナルデータベースのストレージをエミュレートします。</target>
        </trans-unit>
        <trans-unit id="25116ebad8a41f136461b16b04daeb57e9faff46" translate="yes" xml:space="preserve">
          <source>This annotation can be added to the docblock of the test class or the individual test methods. The recommended way is to add the annotation to the docblock of the test class, not to the docblock of the test methods.</source>
          <target state="translated">このアノテーションは、テストクラスのdocblockや個々のテストメソッドに追加することができます。推奨される方法は、テストメソッドのdocblockではなく、テストクラスのdocblockにアノテーションを追加することです。</target>
        </trans-unit>
        <trans-unit id="ed2643748a6d22c79a16e93e5ebc98c26e631756" translate="yes" xml:space="preserve">
          <source>This annotation is especially useful in strict coverage mode where unintentionally covered code will cause a test to fail. See &lt;a href=&quot;risky-tests#risky-tests.unintentionally-covered-code&quot;&gt;the section called &amp;ldquo;Unintentionally Covered Code&amp;rdquo;&lt;/a&gt; for more information regarding strict coverage mode.</source>
          <target state="translated">この注釈は、意図せずにカバーされたコードが原因でテストが失敗する厳密なカバレッジモードで特に役立ちます。厳密なカバレッジモードの詳細については、&lt;a href=&quot;risky-tests#risky-tests.unintentionally-covered-code&quot;&gt;「意図しない&lt;/a&gt;カバレッジコード」を参照してください。</target>
        </trans-unit>
        <trans-unit id="fdda88234f3ad6d83643ee78909fd84e6f7765bc" translate="yes" xml:space="preserve">
          <source>This appendix lists the various assertion methods that are available.</source>
          <target state="translated">この付録では、利用可能なさまざまなアサーション・メソッドをリストアップします。</target>
        </trans-unit>
        <trans-unit id="13feb49855231d6be908a7feeaf57e1daa24472d" translate="yes" xml:space="preserve">
          <source>This appendix shows all the varieties of annotations supported by PHPUnit.</source>
          <target state="translated">この付録では、PHPUnit がサポートしているアノテーションの種類をすべて紹介します。</target>
        </trans-unit>
        <trans-unit id="b98d13b9412fe4d25d8a37a20f86d7dba2004c97" translate="yes" xml:space="preserve">
          <source>This assertion would only pass on exactly one second of the universe though, on &lt;em&gt;2010&amp;ndash;05&amp;ndash;01 21:47:08&lt;/em&gt;. Dates pose a special problem to database testing and we can circumvent the failure by omitting the &amp;ldquo;created&amp;rdquo; column from the assertion.</source>
          <target state="translated">ただし、このアサーションは&lt;em&gt;2010&amp;ndash;05&amp;ndash;01 21:47:08に&lt;/em&gt;、正確に1秒の宇宙を通過するだけ&lt;em&gt;です&lt;/em&gt;。日付はデータベーステストに特別な問題を引き起こし、「作成された」列をアサーションから除外することで失敗を回避できます。</target>
        </trans-unit>
        <trans-unit id="72a59897716fb5d23d8fac3b8ea8bd39bbee50cd" translate="yes" xml:space="preserve">
          <source>This attribute can be used to configure the path to the sourcecode file that declares the class configured with &lt;code&gt;printerClass&lt;/code&gt; in case that class cannot be autoloaded.</source>
          <target state="translated">この属性を使用して、クラスを自動ロードできない場合に、 &lt;code&gt;printerClass&lt;/code&gt; で構成されたクラスを宣言するソースコードファイルへのパスを構成できます。</target>
        </trans-unit>
        <trans-unit id="234ba9a016d5e55d77225f0e8f60dca30ffeee48" translate="yes" xml:space="preserve">
          <source>This attribute can be used to configure the path to the sourcecode file that declares the class configured with &lt;code&gt;testSuiteLoaderClass&lt;/code&gt; in case that class cannot be autoloaded.</source>
          <target state="translated">この属性を使用して、クラスを自動ロードできない場合に、 &lt;code&gt;testSuiteLoaderClass&lt;/code&gt; で構成されたクラスを宣言するソースコードファイルへのパスを構成できます。</target>
        </trans-unit>
        <trans-unit id="8e6bc90c1baa7d35b24700463066c8157101b203" translate="yes" xml:space="preserve">
          <source>This attribute configures the bootstrap script that is loaded before the tests are executed. This script usually only registers the autoloader callback that is used to load the code under test.</source>
          <target state="translated">この属性は、テストが実行される前にロードされるブートストラップスクリプトを設定します。このスクリプトは通常、テスト中のコードをロードするために使用される autoloader コールバックを登録するだけです。</target>
        </trans-unit>
        <trans-unit id="1db445d63709c616ea3d4034e9fde55a65d83f62" translate="yes" xml:space="preserve">
          <source>This attribute configures the caching of test results. This caching is required for certain other features to work.</source>
          <target state="translated">この属性はテスト結果のキャッシュを設定します。このキャッシュは、特定の他の機能が動作するために必要です。</target>
        </trans-unit>
        <trans-unit id="174752ec93c064f71528d7ea3302aa2a6c415586" translate="yes" xml:space="preserve">
          <source>This attribute configures the default time limit (in seconds).</source>
          <target state="translated">この属性は、デフォルトの制限時間を設定します(秒単位)。</target>
        </trans-unit>
        <trans-unit id="4de2310026db62914016919e01cc5b456738d59c" translate="yes" xml:space="preserve">
          <source>This attribute configures the file in which the test result cache (see above) is stored.</source>
          <target state="translated">この属性は、テスト結果キャッシュ(上記参照)が格納されるファイルを設定します。</target>
        </trans-unit>
        <trans-unit id="3789c9bdb612c1a8791257e08d4d32750716a323" translate="yes" xml:space="preserve">
          <source>This attribute configures the name of a class that either is &lt;code&gt;PHPUnit\TextUI\ResultPrinter&lt;/code&gt; or that extends &lt;code&gt;PHPUnit\TextUI\ResultPrinter&lt;/code&gt;. An object of this class is used to print progress and test results.</source>
          <target state="translated">この属性は、いずれかであることを、クラスの名前を設定し &lt;code&gt;PHPUnit\TextUI\ResultPrinter&lt;/code&gt; または拡張すること &lt;code&gt;PHPUnit\TextUI\ResultPrinter&lt;/code&gt; 。このクラスのオブジェクトは、進行状況とテスト結果を出力するために使用されます。</target>
        </trans-unit>
        <trans-unit id="acb451945d93ced5474bf666529675fce2c92156" translate="yes" xml:space="preserve">
          <source>This attribute configures the name of a class that implements the &lt;code&gt;PHPUnit\Runner\TestSuiteLoader&lt;/code&gt; interface. An object of this class is used to load the test suite.</source>
          <target state="translated">この属性は、 &lt;code&gt;PHPUnit\Runner\TestSuiteLoader&lt;/code&gt; インターフェースを実装するクラスの名前を構成します。このクラスのオブジェクトは、テストスイートをロードするために使用されます。</target>
        </trans-unit>
        <trans-unit id="16a5db4c52db8d074f75f0fa2991697e1e150bcc" translate="yes" xml:space="preserve">
          <source>This attribute configures the name of the default test suite.</source>
          <target state="translated">この属性は、デフォルトのテストスイートの名前を設定します。</target>
        </trans-unit>
        <trans-unit id="d58a8d7c74d6a17acae5421960d5e536edc5b5b5" translate="yes" xml:space="preserve">
          <source>This attribute configures the number of columns to use for progress output.</source>
          <target state="translated">この属性は、進行状況の出力に使用する列の数を設定します。</target>
        </trans-unit>
        <trans-unit id="9e0231a8ce8f04908b5b38026f8ccc1ae472337a" translate="yes" xml:space="preserve">
          <source>This attribute configures the order in which tests are executed.</source>
          <target state="translated">この属性は、テストが実行される順序を設定します。</target>
        </trans-unit>
        <trans-unit id="63b9ae5b1fdced1482fe7163b4730a60a38a9f60" translate="yes" xml:space="preserve">
          <source>This attribute configures the time limit for tests annotated with &lt;code&gt;@large&lt;/code&gt; (in seconds).</source>
          <target state="translated">この属性は、 &lt;code&gt;@large&lt;/code&gt; アノテーションが付けられたテストの時間制限（秒単位）を構成します。</target>
        </trans-unit>
        <trans-unit id="3c962e34c7f8b9ef4f513923e827df3fe1c28f98" translate="yes" xml:space="preserve">
          <source>This attribute configures the time limit for tests annotated with &lt;code&gt;@medium&lt;/code&gt; (in seconds).</source>
          <target state="translated">この属性は、 &lt;code&gt;@medium&lt;/code&gt; 注釈が付けられたテストの時間制限（秒単位）を構成します。</target>
        </trans-unit>
        <trans-unit id="0b58aee1d48780550d5c018491c60a4f3931f5de" translate="yes" xml:space="preserve">
          <source>This attribute configures the time limit for tests annotated with &lt;code&gt;@small&lt;/code&gt; (in seconds).</source>
          <target state="translated">この属性は、 &lt;code&gt;@small&lt;/code&gt; アノテーションが付けられたテストの時間制限（秒単位）を構成します。</target>
        </trans-unit>
        <trans-unit id="01e12570f324a523540ff92c3a7e526909424acb" translate="yes" xml:space="preserve">
          <source>This attribute configures this operation for all tests. This configuration can be overridden using the &lt;code&gt;@backupGlobals&lt;/code&gt; annotation on the test case class and test method level.</source>
          <target state="translated">この属性は、すべてのテストに対してこの操作を構成します。この構成は、テストケースクラスおよびテストメソッドレベルで &lt;code&gt;@backupGlobals&lt;/code&gt; アノテーションを使用してオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="bd8e23c598d2e43be6bffaceea62e148341e03db" translate="yes" xml:space="preserve">
          <source>This attribute configures this operation for all tests. This configuration can be overridden using the &lt;code&gt;@backupStaticAttributes&lt;/code&gt; annotation on the test case class and test method level.</source>
          <target state="translated">この属性は、すべてのテストに対してこの操作を構成します。この構成は、テストケースクラスおよびテストメソッドレベルで &lt;code&gt;@backupStaticAttributes&lt;/code&gt; アノテーションを使用してオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="285afe027743ccde5994ed70ac7577fbc50a1ea5" translate="yes" xml:space="preserve">
          <source>This attribute configures whether &lt;code&gt;E_DEPRECATED&lt;/code&gt; and &lt;code&gt;E_USER_DEPRECATED&lt;/code&gt; events triggered by the code under test are converted to an exception (and mark the test as error).</source>
          <target state="translated">この属性は、テスト対象のコードによってトリガーされた &lt;code&gt;E_DEPRECATED&lt;/code&gt; イベントと &lt;code&gt;E_USER_DEPRECATED&lt;/code&gt; イベントを例外に変換する（そしてテストをエラーとしてマークする）かどうかを構成します。</target>
        </trans-unit>
        <trans-unit id="05306eaaf4252e0a0e404d3fd2037f4c2a2e350b" translate="yes" xml:space="preserve">
          <source>This attribute configures whether &lt;code&gt;E_ERROR&lt;/code&gt; and &lt;code&gt;E_USER_ERROR&lt;/code&gt; events triggered by the code under test are converted to an exception (and mark the test as error).</source>
          <target state="translated">かどうか、この属性設定 &lt;code&gt;E_ERROR&lt;/code&gt; と &lt;code&gt;E_USER_ERROR&lt;/code&gt; テスト対象コードによってトリガイベントは例外に変換（およびエラーとしてテストをマーク）されます。</target>
        </trans-unit>
        <trans-unit id="c4c2011928590d2d0bfc99ab711530d492bebef6" translate="yes" xml:space="preserve">
          <source>This attribute configures whether &lt;code&gt;E_STRICT&lt;/code&gt;, &lt;code&gt;E_NOTICE&lt;/code&gt;, and &lt;code&gt;E_USER_NOTICE&lt;/code&gt; events triggered by the code under test are converted to an exception (and mark the test as error).</source>
          <target state="translated">この属性は、テスト対象のコードによってトリガーされた &lt;code&gt;E_STRICT&lt;/code&gt; 、 &lt;code&gt;E_NOTICE&lt;/code&gt; 、および &lt;code&gt;E_USER_NOTICE&lt;/code&gt; イベントを例外に変換する（そしてテストをエラーとしてマークする）かどうかを構成します。</target>
        </trans-unit>
        <trans-unit id="d8f76535fa7fb5fe82b908a18985e2a73401c241" translate="yes" xml:space="preserve">
          <source>This attribute configures whether &lt;code&gt;E_WARNING&lt;/code&gt; and &lt;code&gt;E_USER_WARNING&lt;/code&gt; events triggered by the code under test are converted to an exception (and mark the test as error).</source>
          <target state="translated">この属性は、テスト対象のコードによってトリガーされた &lt;code&gt;E_WARNING&lt;/code&gt; イベントと &lt;code&gt;E_USER_WARNING&lt;/code&gt; イベントを例外に変換する（そしてテストをエラーとしてマークする）かどうかを構成します。</target>
        </trans-unit>
        <trans-unit id="c977dc2e346129dd914eca957cc85839df7b22bc" translate="yes" xml:space="preserve">
          <source>This attribute configures whether PHPUnit should mark a test as risky when global state is manipulated by the code under test (or the test code).</source>
          <target state="translated">この属性は、テスト対象のコード (あるいはテストコード)によってグローバルな状態が操作された場合に PHPUnit がテストを危険なものとみなすかどうかを設定します。</target>
        </trans-unit>
        <trans-unit id="9497eaf5a132d499f4c8599c99dfa3cd5b50c654" translate="yes" xml:space="preserve">
          <source>This attribute configures whether PHPUnit should mark a test as risky when it executes code that is not specified using &lt;code&gt;@covers&lt;/code&gt; or &lt;code&gt;@uses&lt;/code&gt;.</source>
          <target state="translated">この属性は、 &lt;code&gt;@uses&lt;/code&gt; &lt;code&gt;@covers&lt;/code&gt; または@usesを使用して指定されていないコードを実行するときにPHPUnitがテストを危険としてマークするかどうかを構成します。</target>
        </trans-unit>
        <trans-unit id="267340514f03fa6a49e93dbfa1d6bca9bdc7da2a" translate="yes" xml:space="preserve">
          <source>This attribute configures whether PHPUnit should mark a test as risky when it is annotated with &lt;code&gt;@todo&lt;/code&gt;.</source>
          <target state="translated">この属性は、 &lt;code&gt;@todo&lt;/code&gt; アノテーションが付けられたときにPHPUnitがテストを危険としてマークするかどうかを構成します。</target>
        </trans-unit>
        <trans-unit id="0acb312ffad8b03679900a8db1958fe51f5c81d7" translate="yes" xml:space="preserve">
          <source>This attribute configures whether PHPUnit should mark a test as risky when no assertions are performed (expectations are also considered).</source>
          <target state="translated">この属性は、アサーションが実行されていない場合に PHPUnit がテストを危険なものとしてマークするかどうかを設定します (期待値も考慮します)。</target>
        </trans-unit>
        <trans-unit id="423318a4e35a6fb84d857c91541087d0f295278a" translate="yes" xml:space="preserve">
          <source>This attribute configures whether PHPUnit should mark a test as risky when the code under test (or the test code) prints output.</source>
          <target state="translated">この属性は、テスト対象のコード (あるいはテストコード)が出力したときに PHPUnit がテストを危険なものとしてマークするかどうかを設定します。</target>
        </trans-unit>
        <trans-unit id="a9ca8a88235ba14fed56bc49c8cadb14f0c2ce24" translate="yes" xml:space="preserve">
          <source>This attribute configures whether PHPUnit should mark a test that is annotated with &lt;code&gt;@small&lt;/code&gt; as risky when it invokes a PHP built-in function or method that operates on &lt;code&gt;resource&lt;/code&gt; variables.</source>
          <target state="translated">この属性は、PHPUnitが &lt;code&gt;resource&lt;/code&gt; 変数を操作するPHP組み込み関数またはメソッドを呼び出すときに、 &lt;code&gt;@small&lt;/code&gt; アノテーションが付けられたテストを危険としてマークするかどうかを構成します。</target>
        </trans-unit>
        <trans-unit id="9f67cc398288b02c520217c74f741cf8a8cd3c65" translate="yes" xml:space="preserve">
          <source>This attribute configures whether PHPUnit should print its output to &lt;code&gt;stderr&lt;/code&gt; instead of &lt;code&gt;stdout&lt;/code&gt;.</source>
          <target state="translated">この属性は、PHPUnitが出力を &lt;code&gt;stdout&lt;/code&gt; ではなく &lt;code&gt;stderr&lt;/code&gt; に出力するかどうかを構成します。</target>
        </trans-unit>
        <trans-unit id="4499370ea459b59e6382a7cb139c8826a6dc994d" translate="yes" xml:space="preserve">
          <source>This attribute configures whether a test will be marked as risky (see &lt;a href=&quot;risky-tests#risky-tests-unintentionally-covered-code&quot;&gt;Unintentionally Covered Code&lt;/a&gt;) when it does not have a &lt;a href=&quot;annotations#appendixes-annotations-covers&quot;&gt;@covers&lt;/a&gt; annotation.</source>
          <target state="translated">この属性は、テストに&lt;a href=&quot;annotations#appendixes-annotations-covers&quot;&gt;@covers&lt;/a&gt;アノテーションがない場合に、テストを危険としてマークするかどうかを構成します（&lt;a href=&quot;risky-tests#risky-tests-unintentionally-covered-code&quot;&gt;意図せずにカバーされたコードを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="81b422c96cecbb12bdf7358cfb970a7b5a266234" translate="yes" xml:space="preserve">
          <source>This attribute configures whether arrays and object graphs that are passed from one test to another using the &lt;code&gt;@depends&lt;/code&gt; annotation should be recursively scanned for mock objects.</source>
          <target state="translated">この属性は、 &lt;code&gt;@depends&lt;/code&gt; アノテーションを使用して1つのテストから別のテストに渡される配列とオブジェクトグラフを再帰的にスキャンしてモックオブジェクトを探すかどうかを構成します。</target>
        </trans-unit>
        <trans-unit id="3c1de6ac51ff2786b963dac114dbe17052acc605" translate="yes" xml:space="preserve">
          <source>This attribute configures whether code units annotated with &lt;code&gt;@deprecated&lt;/code&gt; should be ignored from code coverage.</source>
          <target state="translated">この属性は、 &lt;code&gt;@deprecated&lt;/code&gt; アノテーションが付けられたコードユニットをコードカバレッジから無視するかどうかを構成します。</target>
        </trans-unit>
        <trans-unit id="74aef2549a19bcda915692b343d67dc61784b845" translate="yes" xml:space="preserve">
          <source>This attribute configures whether colors are used in PHPUnit&amp;rsquo;s output.</source>
          <target state="translated">この属性は、PHPUnitの出力で色を使用するかどうかを構成します。</target>
        </trans-unit>
        <trans-unit id="505e512a5a3938a8b1849537f686a9c8916896b8" translate="yes" xml:space="preserve">
          <source>This attribute configures whether dependencies between tests (expressed using the &lt;code&gt;@depends&lt;/code&gt; annotation) should be resolved.</source>
          <target state="translated">この属性は、テスト間の依存関係（ &lt;code&gt;@depends&lt;/code&gt; アノテーションを使用して表される）を解決する必要があるかどうかを構成します。</target>
        </trans-unit>
        <trans-unit id="7be2764b178f37fa467c470d376a3b103d887ba1" translate="yes" xml:space="preserve">
          <source>This attribute configures whether each test should be run in a separate PHP process for increased isolation.</source>
          <target state="translated">この属性は、分離性を高めるために各テストを別の PHP プロセスで実行するかどうかを設定します。</target>
        </trans-unit>
        <trans-unit id="6faba6e955517c3f0ee4576db5dd9cf298d5260d" translate="yes" xml:space="preserve">
          <source>This attribute configures whether more verbose output should be printed.</source>
          <target state="translated">この属性は、より詳細な出力を印刷するかどうかを設定します。</target>
        </trans-unit>
        <trans-unit id="d9c6ae4da49ea6a2085173ce0197a64006f57a26" translate="yes" xml:space="preserve">
          <source>This attribute configures whether progress should be animated when TestDox format is used, for instance.</source>
          <target state="translated">このアトリビュートは、例えばTestDoxフォーマットが使用されている場合に進捗状況をアニメーション化するかどうかを設定します。</target>
        </trans-unit>
        <trans-unit id="e9c8ccf27b594fe1cbe62f24d66a1eec9f68f406" translate="yes" xml:space="preserve">
          <source>This attribute configures whether tests that are not successful should be printed in reverse order.</source>
          <target state="translated">この属性は、成功しなかったテストを逆順に印刷するかどうかを設定します。</target>
        </trans-unit>
        <trans-unit id="d0d9c541461b86ffa4817629471df465bc8725b9" translate="yes" xml:space="preserve">
          <source>This attribute configures whether the &lt;code&gt;@codeCoverageIgnore*&lt;/code&gt; annotations should be ignored.</source>
          <target state="translated">この属性は、 &lt;code&gt;@codeCoverageIgnore*&lt;/code&gt; アノテーションを無視するかどうかを構成します。</target>
        </trans-unit>
        <trans-unit id="3e03b50b79af48eef09563d1a42ec3df1f30fb45" translate="yes" xml:space="preserve">
          <source>This attribute configures whether the PHPUnit test runner should exit with a shell exit code that indicates failure when all tests are successful but there are tests that had warnings.</source>
          <target state="translated">この属性は、PHPUnit テストランナーがシェル終了コードを使って終了するかどうかを設定します。</target>
        </trans-unit>
        <trans-unit id="455d6da85987edd5a48bac9853eec7b3722d5825" translate="yes" xml:space="preserve">
          <source>This attribute configures whether the PHPUnit test runner should exit with a shell exit code that indicates failure when all tests are successful but there are tests that were marked as risky.</source>
          <target state="translated">この属性は、PHPUnit テストランナーがシェル終了コードを使って終了するかどうかを設定します。</target>
        </trans-unit>
        <trans-unit id="f5a269dc2f6a037298a75301a12a8e6df4135063" translate="yes" xml:space="preserve">
          <source>This attribute configures whether the output should be printed in TestDox format.</source>
          <target state="translated">この属性は、出力をTestDox形式で印刷するかどうかを設定します。</target>
        </trans-unit>
        <trans-unit id="74ba5feda080cde0f73bd3c6645012c3a4bc18c8" translate="yes" xml:space="preserve">
          <source>This attribute configures whether the test suite execution should be stopped after the first test finished with a status &amp;ldquo;error&amp;rdquo;, &amp;ldquo;failure&amp;rdquo;, &amp;ldquo;risky&amp;rdquo; or &amp;ldquo;warning&amp;rdquo;.</source>
          <target state="translated">この属性は、最初のテストがステータス「エラー」、「失敗」、「危険」、または「警告」で終了した後にテストスイートの実行を停止するかどうかを構成します。</target>
        </trans-unit>
        <trans-unit id="ed336334fec4bbfecd31440b05e59dd9b9bff53a" translate="yes" xml:space="preserve">
          <source>This attribute configures whether the test suite execution should be stopped after the first test finished with status &amp;ldquo;error&amp;rdquo;.</source>
          <target state="translated">この属性は、最初のテストがステータス「エラー」で終了した後にテストスイートの実行を停止するかどうかを構成します。</target>
        </trans-unit>
        <trans-unit id="0ee230267e6efaca29706d6a3372f19ff8170bef" translate="yes" xml:space="preserve">
          <source>This attribute configures whether the test suite execution should be stopped after the first test finished with status &amp;ldquo;failure&amp;rdquo;.</source>
          <target state="translated">この属性は、最初のテストがステータス「failure」で終了した後にテストスイートの実行を停止するかどうかを構成します。</target>
        </trans-unit>
        <trans-unit id="b860b0861d498f7b572e0c2a3888eb5727719c1b" translate="yes" xml:space="preserve">
          <source>This attribute configures whether the test suite execution should be stopped after the first test finished with status &amp;ldquo;incomplete&amp;rdquo;.</source>
          <target state="translated">この属性は、最初のテストがステータス「未完了」で終了した後にテストスイートの実行を停止するかどうかを構成します。</target>
        </trans-unit>
        <trans-unit id="f2db02f6e8153e4652cdce5cdd9d278b5eb08bb9" translate="yes" xml:space="preserve">
          <source>This attribute configures whether the test suite execution should be stopped after the first test finished with status &amp;ldquo;risky&amp;rdquo;.</source>
          <target state="translated">この属性は、最初のテストがステータス「risky」で終了した後にテストスイートの実行を停止するかどうかを構成します。</target>
        </trans-unit>
        <trans-unit id="488053c090a589bea8f4bc8fb6fbf14dc11b21ba" translate="yes" xml:space="preserve">
          <source>This attribute configures whether the test suite execution should be stopped after the first test finished with status &amp;ldquo;skipped&amp;rdquo;.</source>
          <target state="translated">この属性は、最初のテストがステータス「スキップ」で終了した後にテストスイートの実行を停止するかどうかを構成します。</target>
        </trans-unit>
        <trans-unit id="3deecc237dc7728c4a490714713bc3d0952522be" translate="yes" xml:space="preserve">
          <source>This attribute configures whether the test suite execution should be stopped after the first test finished with status &amp;ldquo;warning&amp;rdquo;.</source>
          <target state="translated">この属性は、最初のテストがステータス「警告」で終了した後にテストスイートの実行を停止するかどうかを構成します。</target>
        </trans-unit>
        <trans-unit id="33d1f4d9682235126ebf2e383519b38ede1f369a" translate="yes" xml:space="preserve">
          <source>This attribute configures whether time limits should be enforced.</source>
          <target state="translated">この属性は、時間制限を適用するかどうかを設定します。</target>
        </trans-unit>
        <trans-unit id="3c627d36215900d2af0f7536181a274d5d028599" translate="yes" xml:space="preserve">
          <source>This can be used for integration testing. See &lt;a href=&quot;code-coverage-analysis#code-coverage-analysis-specifying-covered-parts-examples-guestbookintegrationtest-php&quot;&gt;A test that specifies that no method should be covered&lt;/a&gt; for an example.</source>
          <target state="translated">これは、統合テストに使用できます。例については、&lt;a href=&quot;code-coverage-analysis#code-coverage-analysis-specifying-covered-parts-examples-guestbookintegrationtest-php&quot;&gt;メソッドをカバー&lt;/a&gt;してはならないことを指定するテストを参照してください。</target>
        </trans-unit>
        <trans-unit id="c251df74abf3228a7572f227758053c8d51e7776" translate="yes" xml:space="preserve">
          <source>This can be used for integration testing. See &lt;a href=&quot;code-coverage-analysis#code-coverage-analysis.specifying-covered-methods.examples.GuestbookIntegrationTest.php&quot;&gt;Example 11.3&lt;/a&gt; for an example.</source>
          <target state="translated">これは、統合テストに使用できます。&lt;a href=&quot;code-coverage-analysis#code-coverage-analysis.specifying-covered-methods.examples.GuestbookIntegrationTest.php&quot;&gt;例&lt;/a&gt;については、例11.3を参照してください。</target>
        </trans-unit>
        <trans-unit id="c1224c28b68da2c5ae6c3fe58a9994bba70d6a87" translate="yes" xml:space="preserve">
          <source>This element can be used to prepend a path to the &lt;code&gt;include_path&lt;/code&gt;.</source>
          <target state="translated">この要素は、 &lt;code&gt;include_path&lt;/code&gt; へのパスを付加するために使用できます。</target>
        </trans-unit>
        <trans-unit id="62b57354854ad6be26a8ccabac6bfd487aa91e14" translate="yes" xml:space="preserve">
          <source>This element can be used to set a PHP configuration setting.</source>
          <target state="translated">この要素を使用して PHP の設定を設定することができます。</target>
        </trans-unit>
        <trans-unit id="cd0aa5ac8528f0633c0f8da652561b7f225ff94c" translate="yes" xml:space="preserve">
          <source>This element can be used to set a global constant.</source>
          <target state="translated">この要素は、グローバル定数を設定するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="b4460a8e7c5c9c63d3f916e7067cfc64d3254143" translate="yes" xml:space="preserve">
          <source>This element can be used to set a global variable.</source>
          <target state="translated">この要素は、グローバル変数を設定するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="bc968047d97eb2428e5937006168106b912893f6" translate="yes" xml:space="preserve">
          <source>This element can be used to set a value in the super-global array &lt;code&gt;$_COOKIE&lt;/code&gt;.</source>
          <target state="translated">この要素を使用して、スーパーグローバル配列 &lt;code&gt;$_COOKIE&lt;/code&gt; 値を設定できます。</target>
        </trans-unit>
        <trans-unit id="3862ea8a56a3d3b07e233910ec338ba6b5f9f4e9" translate="yes" xml:space="preserve">
          <source>This element can be used to set a value in the super-global array &lt;code&gt;$_ENV&lt;/code&gt;.</source>
          <target state="translated">この要素を使用して、スーパーグローバル配列 &lt;code&gt;$_ENV&lt;/code&gt; 値を設定できます。</target>
        </trans-unit>
        <trans-unit id="922f28f2eb12458f5e229bc72091d6b287d7a67c" translate="yes" xml:space="preserve">
          <source>This element can be used to set a value in the super-global array &lt;code&gt;$_FILES&lt;/code&gt;.</source>
          <target state="translated">この要素を使用して、スーパーグローバル配列 &lt;code&gt;$_FILES&lt;/code&gt; 値を設定できます。</target>
        </trans-unit>
        <trans-unit id="4ebf4c2c4a11428d7ee99d5282212ba96b0b2cc8" translate="yes" xml:space="preserve">
          <source>This element can be used to set a value in the super-global array &lt;code&gt;$_GET&lt;/code&gt;.</source>
          <target state="translated">この要素を使用して、スーパーグローバル配列 &lt;code&gt;$_GET&lt;/code&gt; 値を設定できます。</target>
        </trans-unit>
        <trans-unit id="a41bc7deb165078dec9af90fd83f4d16c302b1a3" translate="yes" xml:space="preserve">
          <source>This element can be used to set a value in the super-global array &lt;code&gt;$_POST&lt;/code&gt;.</source>
          <target state="translated">この要素を使用して、スーパーグローバル配列 &lt;code&gt;$_POST&lt;/code&gt; 値を設定できます。</target>
        </trans-unit>
        <trans-unit id="7e52a51b15ae5f4a0c29d8ca5b2ac8523782febb" translate="yes" xml:space="preserve">
          <source>This element can be used to set a value in the super-global array &lt;code&gt;$_REQUEST&lt;/code&gt;.</source>
          <target state="translated">この要素を使用して、スーパーグローバル配列 &lt;code&gt;$_REQUEST&lt;/code&gt; 値を設定できます。</target>
        </trans-unit>
        <trans-unit id="3db9160d9a689e3c98bbb3086a8f20a074a99788" translate="yes" xml:space="preserve">
          <source>This element can be used to set a value in the super-global array &lt;code&gt;$_SERVER&lt;/code&gt;.</source>
          <target state="translated">この要素を使用して、スーパーグローバル配列 &lt;code&gt;$_SERVER&lt;/code&gt; 値を設定できます。</target>
        </trans-unit>
        <trans-unit id="4ef95a0f2f1c8dddd6937931854a71005e02282f" translate="yes" xml:space="preserve">
          <source>This element is the root for one or more &lt;code&gt;&amp;lt;testsuite&amp;gt;&lt;/code&gt; elements that are used to configure the tests that are to be executed.</source>
          <target state="translated">この要素は、実行されるテストを構成するために使用される1つ以上の &lt;code&gt;&amp;lt;testsuite&amp;gt;&lt;/code&gt; 要素のルートです。</target>
        </trans-unit>
        <trans-unit id="fbebb60844250b8630bc0f5677253e70f0f871eb" translate="yes" xml:space="preserve">
          <source>This file can be used in your Database TestCase by calling the &lt;code&gt;createMySQLXMLDataSet($filename)&lt;/code&gt; method:</source>
          <target state="translated">このファイルは、 &lt;code&gt;createMySQLXMLDataSet($filename)&lt;/code&gt; メソッドを呼び出すことにより、データベーステストケースで使用できます。</target>
        </trans-unit>
        <trans-unit id="0214e1ec5357308c35f9d649038202b86ff070b0" translate="yes" xml:space="preserve">
          <source>This has several advantages:</source>
          <target state="translated">これにはいくつかのメリットがあります。</target>
        </trans-unit>
        <trans-unit id="23cbd4cfaac0639512f842e62964bb192515290f" translate="yes" xml:space="preserve">
          <source>This has the database connection hardcoded in the PDO connection though. PHPUnit has another awesome feature that could make this testcase even more generic. If you use the &lt;a href=&quot;appendixes.configuration#appendixes.configuration.php-ini-constants-variables&quot;&gt;XML Configuration&lt;/a&gt; you could make the database connection configurable per test-run. First let's create a &amp;ldquo;phpunit.xml&amp;rdquo; file in our tests/ directory of the application that looks like:</source>
          <target state="translated">ただし、データベース接続はPDO接続にハードコーディングされています。PHPUnitには、このテストケースをさらに汎用的にできる素晴らしい機能があります。&lt;a href=&quot;appendixes.configuration#appendixes.configuration.php-ini-constants-variables&quot;&gt;XML構成&lt;/a&gt;を使用する場合、データベース接続をテスト実行ごとに構成可能にすることができます。まず、アプリケーションのtests /ディレクトリに次のような「phpunit.xml」ファイルを作成します。</target>
        </trans-unit>
        <trans-unit id="6405333adb9b984030af95505c191ef40852e101" translate="yes" xml:space="preserve">
          <source>This interface also has an assertion that checks if two instances of Table Metadata equal each other, which is used by the data-set equality assertion.</source>
          <target state="translated">このインターフェイスは、テーブルメタデータの2つのインスタンスが互いに等しいかどうかをチェックするアサーションも持っており、これはデータセットの平等性アサーションで使用されます。</target>
        </trans-unit>
        <trans-unit id="20da57f85fd84eecf18489dd0dc006c2edbf48fc" translate="yes" xml:space="preserve">
          <source>This is obviously easy to write. Here &lt;code&gt;&amp;lt;guestbook&amp;gt;&lt;/code&gt; is the table name where two rows are inserted into each with four columns &amp;ldquo;id&amp;rdquo;, &amp;ldquo;content&amp;rdquo;, &amp;ldquo;user&amp;rdquo; and &amp;ldquo;created&amp;rdquo; with their respective values.</source>
          <target state="translated">これは明らかに書くのが簡単です。ここで &lt;code&gt;&amp;lt;guestbook&amp;gt;&lt;/code&gt; は、2つの行がそれぞれに挿入されたテーブル名で、4つの列「id」、「content」、「user」、「created」がそれぞれの値とともに挿入されています。</target>
        </trans-unit>
        <trans-unit id="785aef8ff808a171464fc55bb5c25972e90ae8ac" translate="yes" xml:space="preserve">
          <source>This is simple, convient AND it solves the NULL issue that the similar Flat XML dataset has. A NULL in YAML is just the column name without no value specified. An empty string is specified as &lt;code&gt;column1: &quot;&quot;&lt;/code&gt;.</source>
          <target state="translated">これはシンプルで便利であり、同様のフラットXMLデータセットが持つNULLの問題を解決します。YAMLのNULLは、値が指定されていない列名です。空の文字列は &lt;code&gt;column1: &quot;&quot;&lt;/code&gt; として指定されます。</target>
        </trans-unit>
        <trans-unit id="2780fab7e8a832639b40ac03a385d4a0a85c6b82" translate="yes" xml:space="preserve">
          <source>This new XML format is specific to the &lt;a href=&quot;http://www.mysql.com&quot;&gt;MySQL database server&lt;/a&gt;. Support for it was added in PHPUnit 3.5. Files in this format can be generated using the &lt;a href=&quot;http://dev.mysql.com/doc/refman/5.0/en/mysqldump.html&quot;&gt;&lt;code&gt;mysqldump&lt;/code&gt;&lt;/a&gt; utility. Unlike CSV datasets, which &lt;code&gt;mysqldump&lt;/code&gt; also supports, a single file in this XML format can contain data for multiple tables. You can create a file in this format by invoking &lt;code&gt;mysqldump&lt;/code&gt; like so:</source>
          <target state="translated">この新しいXML形式は、&lt;a href=&quot;http://www.mysql.com&quot;&gt;MySQLデータベースサーバーに&lt;/a&gt;固有です。PHPUnit 3.5でサポートが追加されました。この形式のファイルは、&lt;a href=&quot;http://dev.mysql.com/doc/refman/5.0/en/mysqldump.html&quot;&gt; &lt;code&gt;mysqldump&lt;/code&gt; &lt;/a&gt;ユーティリティを使用して生成できます。 &lt;code&gt;mysqldump&lt;/code&gt; もサポートするCSVデータセットとは異なり、このXML形式の単一のファイルには複数のテーブルのデータを含めることができます。次のように &lt;code&gt;mysqldump&lt;/code&gt; を呼び出すことで、この形式のファイルを作成できます。</target>
        </trans-unit>
        <trans-unit id="bed147e67c86fed1996330f07ba68b2072f80879" translate="yes" xml:space="preserve">
          <source>This only happens when using &lt;code&gt;assertEquals()&lt;/code&gt; or other &amp;lsquo;weak&amp;rsquo; comparison functions on arrays or objects.</source>
          <target state="translated">これは、配列またはオブジェクトで &lt;code&gt;assertEquals()&lt;/code&gt; またはその他の「弱い」比較関数を使用する場合にのみ発生します。</target>
        </trans-unit>
        <trans-unit id="7b5902742491789dd48ddafc8ad0e2cee7d86e18" translate="yes" xml:space="preserve">
          <source>This only happens when using assertEquals or other 'weak' comparison functions on arrays or objects.</source>
          <target state="translated">これは、配列やオブジェクトに対して assertEquals やその他の「弱い」比較関数を使用した場合にのみ発生します。</target>
        </trans-unit>
        <trans-unit id="c226405ade73b18110ff28485c3ef78d7e4fee09" translate="yes" xml:space="preserve">
          <source>This package is included in the PHAR distribution of PHPUnit. It can be installed via Composer using the following command:</source>
          <target state="translated">このパッケージは、PHPUnit の PHAR ディストリビューションに含まれています。Composer からインストールするには、次のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="6a4eb86935408edfd9cdaf6c1159bbe2483db04d" translate="yes" xml:space="preserve">
          <source>This package is not included in the PHAR distribution of PHPUnit. It can be installed via Composer using the following command:</source>
          <target state="translated">このパッケージは、PHPUnit の PHAR ディストリビューションには含まれていません。Composer からインストールするには、次のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="ed32c14262af065016892351d1725e08847322bd" translate="yes" xml:space="preserve">
          <source>This section shows noteworthy edge cases that lead to confusing code coverage information.</source>
          <target state="translated">ここでは、コードカバレッジ情報の混乱につながる注目すべきエッジケースを示します。</target>
        </trans-unit>
        <trans-unit id="3105a004b2b3492c8b19b64d14b9c753375ffbe6" translate="yes" xml:space="preserve">
          <source>This work is licensed under the Creative Commons Attribution 3.0 Unported License.</source>
          <target state="translated">この作品は、クリエイティブ・コモンズ 表示 3.0 非移植ライセンスの下でライセンスされています。</target>
        </trans-unit>
        <trans-unit id="e7f18bd25f7016bf109727e49a5c12fd82ded0bf" translate="yes" xml:space="preserve">
          <source>Tip: Use your own Abstract Database TestCase</source>
          <target state="translated">ヒント:独自の抽象データベーステストケースを使用する</target>
        </trans-unit>
        <trans-unit id="731838b2c0adf2a7be75156ee0f58af256ad9c1e" translate="yes" xml:space="preserve">
          <source>To allow the clean-up and fixture loading functionalities to work the PHPUnit Database Extension requires access to a database connection abstracted across vendors through the PDO library. It is important to note that your application does not need to be based on PDO to use PHPUnit's database extension, the connection is merely used for the clean-up and fixture setup.</source>
          <target state="translated">クリーンアップやフィクスチャの読み込み機能を動作させるには、 PHPUnit Database Extension を使用して PDO ライブラリを介してベンダー間で抽象化されたデータベース接続にアクセスする必要があります。重要なのは、アプリケーションが PDO をベースにしていなくても PHPUnit のデータベース拡張モジュールを使うことができるということです。</target>
        </trans-unit>
        <trans-unit id="152b45fae7ec210e936a1c79aa3f6b701092acea" translate="yes" xml:space="preserve">
          <source>To ease testing and reduce duplication a shortcut can be used to specify a class constant as an &lt;code&gt;@expectedExceptionCode&lt;/code&gt; using the &quot;&lt;code&gt;@expectedExceptionCode ClassName::CONST&lt;/code&gt;&quot; syntax.</source>
          <target state="translated">テストを容易にし、重複を減らすために、ショートカットを使用して、 &quot; &lt;code&gt;@expectedExceptionCode ClassName::CONST&lt;/code&gt; &quot;構文を使用してクラス定数を &lt;code&gt;@expectedExceptionCode&lt;/code&gt; として指定できます。</target>
        </trans-unit>
        <trans-unit id="c4dce95019cf5594b670c989434c5c4b98fd6660" translate="yes" xml:space="preserve">
          <source>To ease testing and reduce duplication a shortcut can be used to specify a class constant as an &lt;code&gt;@expectedExceptionMessage&lt;/code&gt; using the &quot;&lt;code&gt;@expectedExceptionMessage ClassName::CONST&lt;/code&gt;&quot; syntax. A sample can be found in &lt;a href=&quot;appendixes.annotations#appendixes.annotations.expectedExceptionCode&quot;&gt;the section called &amp;ldquo;@expectedExceptionCode&amp;rdquo;&lt;/a&gt;.</source>
          <target state="translated">テストを容易にし、重複を減らすために、ショートカットを使用して、 &quot; &lt;code&gt;@expectedExceptionMessage ClassName::CONST&lt;/code&gt; &quot;構文を使用してクラス定数を &lt;code&gt;@expectedExceptionMessage&lt;/code&gt; として指定できます。サンプルは&lt;a href=&quot;appendixes.annotations#appendixes.annotations.expectedExceptionCode&quot;&gt;、「@ expectedExceptionCode」というセクションにあり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="46429fc498e1292e82c066711078712dae0c4db7" translate="yes" xml:space="preserve">
          <source>To globally install the PHAR:</source>
          <target state="translated">PHARをグローバルにインストールするには</target>
        </trans-unit>
        <trans-unit id="5830b3435b63402a3f16f1acee025a965ad4c0d3" translate="yes" xml:space="preserve">
          <source>To input configuration to the extension via XML, the XML configuration file&amp;rsquo;s &lt;code&gt;extensions&lt;/code&gt; section needs to be updated to have configuration values, as shown in &lt;a href=&quot;#extending-phpunit-examples-testrunnerconfigurableextensionconfig&quot;&gt;Example 10.5&lt;/a&gt;:</source>
          <target state="translated">XMLを介して拡張機能に構成を入力するには、&lt;a href=&quot;#extending-phpunit-examples-testrunnerconfigurableextensionconfig&quot;&gt;例10.5に&lt;/a&gt;示すように、XML構成ファイルの &lt;code&gt;extensions&lt;/code&gt; セクションを更新して構成値を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="29f12d91262a1047abe3ae52eb44c453728e8337" translate="yes" xml:space="preserve">
          <source>To localize defects, we want our attention to be focussed on relevant failing tests. This is why PHPUnit skips the execution of a test when a depended-upon test has failed. This improves defect localization by exploiting the dependencies between tests as shown in &lt;a href=&quot;#writing-tests-for-phpunit-examples-dependencyfailuretest-php&quot;&gt;Example 2.3&lt;/a&gt;.</source>
          <target state="translated">欠陥を特定するために、関連する失敗したテストに注意を向けてください。これが、依存テストが失敗したときにPHPUnitがテストの実行をスキップする理由です。これにより、&lt;a href=&quot;#writing-tests-for-phpunit-examples-dependencyfailuretest-php&quot;&gt;例2.3に&lt;/a&gt;示すように、テスト間の依存関係を利用して欠陥の特定が改善されます。</target>
        </trans-unit>
        <trans-unit id="1347127258552b53b73162c50d7f9e4500fe52bf" translate="yes" xml:space="preserve">
          <source>To quickly localize defects, we want our attention to be focussed on relevant failing tests. This is why PHPUnit skips the execution of a test when a depended-upon test has failed. This improves defect localization by exploiting the dependencies between tests as shown in &lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.examples.DependencyFailureTest.php&quot;&gt;Example 2.3&lt;/a&gt;.</source>
          <target state="translated">欠陥を迅速に特定するために、関連する不合格のテストに焦点を当てるようにしてください。これが、依存するテストが失敗したときに、PHPUnitがテストの実行をスキップする理由です。これにより、&lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.examples.DependencyFailureTest.php&quot;&gt;例2.3に&lt;/a&gt;示すように、テスト間の依存関係を利用することで欠陥の特定が改善されます。</target>
        </trans-unit>
        <trans-unit id="052b76b68cfe966c5c79708451eba5f9546bf80c" translate="yes" xml:space="preserve">
          <source>To run all tests for the library we just need to point the PHPUnit command-line test runner to the test directory:</source>
          <target state="translated">ライブラリのすべてのテストを実行するには、PHPUnit コマンドラインのテストランナーを test ディレクトリに指定するだけです。</target>
        </trans-unit>
        <trans-unit id="090d6f7b8618d0d398d13e961b0a567f58fe4565" translate="yes" xml:space="preserve">
          <source>To run all tests for the library we need to point the PHPUnit command-line test runner to the test directory:</source>
          <target state="translated">ライブラリのすべてのテストを実行するには、PHPUnit コマンドラインのテストランナーを test ディレクトリに指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="7e4be0289df3e2278e103388cf01e3bf0475b366" translate="yes" xml:space="preserve">
          <source>To run only the tests that are declared in the &lt;code&gt;CurrencyTest&lt;/code&gt; test case class in &lt;code&gt;tests/CurrencyTest.php&lt;/code&gt; we can use the following command:</source>
          <target state="translated">&lt;code&gt;tests/CurrencyTest.php&lt;/code&gt; の &lt;code&gt;CurrencyTest&lt;/code&gt; テストケースクラスで宣言されているテストのみを実行するには、次のコマンドを使用できます。</target>
        </trans-unit>
        <trans-unit id="4d64a1d49dd9450667397fb8d14be275acf13de5" translate="yes" xml:space="preserve">
          <source>To run the test suite, use the the &lt;code&gt;--testsuite&lt;/code&gt; option:</source>
          <target state="translated">テストスイートを実行するには、 &lt;code&gt;--testsuite&lt;/code&gt; オプションを使用します。</target>
        </trans-unit>
        <trans-unit id="e15ac0a18971f18a613cffe43a3b94b3764c0f3f" translate="yes" xml:space="preserve">
          <source>To understand the internals of DataSets and DataTables, lets have a look at the interface of a DataSet. You can skip this part if you do not plan to implement your own DataSet or DataTable.</source>
          <target state="translated">データセットとデータテーブルの内部を理解するために、データセットのインターフェイスを見てみましょう。独自のデータセットやデータテーブルを実装する予定がない場合は、この部分は読み飛ばしても構いません。</target>
        </trans-unit>
        <trans-unit id="af2e4c2ebedd7493808b9a8ce1195a0b6c4f8fbe" translate="yes" xml:space="preserve">
          <source>To use the Flat XML dataset effectively when NULL values are relevant the first row of each table must not contain any NULL value and only successive rows are allowed to omit attributes. This can be awkward, since the order of the rows is a relevant factor for database assertions.</source>
          <target state="translated">フラット XML データセットを NULL 値が重要な場合に効果的に使用するためには、各テーブルの最初の行に NULL 値を含んではいけません。データベースのアサーションでは、行の順序が重要な要素となるため、これは厄介なことになります。</target>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="c02237c7b02e4b8fe882d91039fd1e35d3cabc4f" translate="yes" xml:space="preserve">
          <source>Typically, in a project that is developed using an agile process, such as Extreme Programming, the documentation cannot keep up with the frequent changes to the project's design and code. Extreme Programming demands &lt;em&gt;collective code ownership&lt;/em&gt;, so all developers need to know how the entire system works. If you are disciplined enough to consequently use &quot;speaking names&quot; for your tests that describe what a class should do, you can use PHPUnit's TestDox functionality to generate automated documentation for your project based on its tests. This documentation gives developers an overview of what each class of the project is supposed to do.</source>
          <target state="translated">通常、Extreme Programmingなどのアジャイルプロセスを使用して開発されたプロジェクトでは、プロジェクトの設計とコードに対する頻繁な変更にドキュメントが対応できません。エクストリームプログラミングでは、&lt;em&gt;コード&lt;/em&gt;全体の&lt;em&gt;所有権が&lt;/em&gt;要求されるため、すべての開発者はシステム全体の動作を知る必要があります。その結果、クラスが何をすべきかを説明するテストに「スピーキング名」を使用するのに十分な規律がある場合は、PHPUnitのTestDox機能を使用して、そのテストに基づいてプロジェクトの自動ドキュメントを生成できます。このドキュメントは、プロジェクトの各クラスが行うことになっていることの概要を開発者に提供します。</target>
        </trans-unit>
        <trans-unit id="b39fccec73003cdda9f4e39a9b8d1f79c5bd35c2" translate="yes" xml:space="preserve">
          <source>Understanding DataSets and DataTables</source>
          <target state="translated">データセットとデータテーブルを理解する</target>
        </trans-unit>
        <trans-unit id="473a1a7ba7d5c6d4f91d2db14aa02df3adf85bc4" translate="yes" xml:space="preserve">
          <source>Unintentionally Covered Code</source>
          <target state="translated">意図せずにカバーされたコード</target>
        </trans-unit>
        <trans-unit id="c16d5f07f74e355b21d87741daea434449781182" translate="yes" xml:space="preserve">
          <source>Unit Tests are primarily written as a good practice to help developers identify and fix bugs, to refactor code and to serve as documentation for a unit of software under test. To achieve these benefits, unit tests ideally should cover all the possible paths in a program. One unit test usually covers one specific path in one function or method. However a test method is not necessarily an encapsulated, independent entity. Often there are implicit dependencies between test methods, hidden in the implementation scenario of a test.</source>
          <target state="translated">ユニットテストは、主に、開発者がバグを特定して修正したり、コードのリファクタリングをしたり、テスト中のソフトウェアのユニットのドキュメントとして機能したりするのを助けるために、良い習慣として書かれています。これらの利点を達成するために、ユニットテストは理想的にはプログラム内のすべての可能なパスをカバーしなければなりません。1つの単体テストは、通常、1つの関数やメソッドの中の1つの特定のパスをカバーします。しかし、テストメソッドは必ずしもカプセル化された独立した実体ではありません。多くの場合、テストメソッド間には、テストの実装シナリオに隠された暗黙の依存関係が存在します。</target>
        </trans-unit>
        <trans-unit id="4fa47641d8db125127eb4e59fac4adb4c27367ef" translate="yes" xml:space="preserve">
          <source>Unit testing offers many advantages:</source>
          <target state="translated">ユニットテストには多くのメリットがあります。</target>
        </trans-unit>
        <trans-unit id="445aba2719a870b6e92645a8ccd5a419539809d0" translate="yes" xml:space="preserve">
          <source>Unit tests provide working examples for how to use an API and can significantly aid documentation efforts.</source>
          <target state="translated">ユニットテストは、API の使用方法の実例を提供し、ドキュメント化の努力を大幅に支援します。</target>
        </trans-unit>
        <trans-unit id="e78d1e8d58204a4228725045ba5ff0aba05d455b" translate="yes" xml:space="preserve">
          <source>Use colors in output. On Windows, use &lt;a href=&quot;https://github.com/adoxa/ansicon&quot;&gt;ANSICON&lt;/a&gt; or &lt;a href=&quot;https://github.com/Maximus5/ConEmu&quot;&gt;ConEmu&lt;/a&gt;.</source>
          <target state="translated">出力に色を使用します。Windowsでは、&lt;a href=&quot;https://github.com/adoxa/ansicon&quot;&gt;ANSICON&lt;/a&gt;または&lt;a href=&quot;https://github.com/Maximus5/ConEmu&quot;&gt;ConEmuを&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="3573b4a4a51e4a7fdce706f212629595077148d5" translate="yes" xml:space="preserve">
          <source>Useless Tests</source>
          <target state="translated">役に立たないテスト</target>
        </trans-unit>
        <trans-unit id="d7548e7169ace6467b1c4023d4a71b3fa1642ded" translate="yes" xml:space="preserve">
          <source>Using multiple values is possible. These need to be separated by &lt;code&gt;,&lt;/code&gt;.</source>
          <target state="translated">複数の値を使用することが可能です。によって分離されるこれらの必要性 &lt;code&gt;,&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="927f9977ea2ebafd827eafa66188862aacda3031" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;phpVersion&lt;/code&gt; and &lt;code&gt;phpVersionOperator&lt;/code&gt; attributes, a required PHP version can be specified. The example below will only add the &lt;code&gt;/path/to/*Test.php&lt;/code&gt; files and &lt;code&gt;/path/to/MyTest.php&lt;/code&gt; file if the PHP version is at least 5.3.0.</source>
          <target state="translated">&lt;code&gt;phpVersion&lt;/code&gt; および &lt;code&gt;phpVersionOperator&lt;/code&gt; 属性を使用して、必要なPHPバージョンを指定できます。以下の例では、PHPのバージョンが5.3.0以上の場合にのみ &lt;code&gt;/path/to/*Test.php&lt;/code&gt; ファイルと &lt;code&gt;/path/to/MyTest.php&lt;/code&gt; ファイルを追加します。</target>
        </trans-unit>
        <trans-unit id="26449b0826bb7a02f35aa468ff05f2b8aaa0094c" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;phpVersion&lt;/code&gt; and &lt;code&gt;phpVersionOperator&lt;/code&gt; attributes, a required PHP version can be specified:</source>
          <target state="translated">使用 &lt;code&gt;phpVersion&lt;/code&gt; と &lt;code&gt;phpVersionOperator&lt;/code&gt; 属性、必要なPHPのバージョンが指定することができます。</target>
        </trans-unit>
        <trans-unit id="d3f6b359741e89cdab7e53453eda4e764da26b20" translate="yes" xml:space="preserve">
          <source>Using the Composite DataSet we can aggregate both fixture files:</source>
          <target state="translated">Composite DataSetを使用して、両方のフィクスチャファイルを集約することができます。</target>
        </trans-unit>
        <trans-unit id="7a4b7a6f06e90f419c8119bdaffc00c67e2166ae" translate="yes" xml:space="preserve">
          <source>Usually when using PHPUnit your testcases would extend the &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt; class in the following way:</source>
          <target state="translated">通常、PHPUnitを使用する場合、テストケースは &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt; クラスを次のように拡張します。</target>
        </trans-unit>
        <trans-unit id="4fba657a2566a29bb2eae7ad600ea97c18865719" translate="yes" xml:space="preserve">
          <source>Variations</source>
          <target state="translated">Variations</target>
        </trans-unit>
        <trans-unit id="a5d747bbb33afd9305aaffa5bfd0514ceefd9a15" translate="yes" xml:space="preserve">
          <source>Various software metrics exist to measure code coverage:</source>
          <target state="translated">コードカバレッジを測定するための様々なソフトウェアメトリクスが存在します。</target>
        </trans-unit>
        <trans-unit id="0d8089893a67ec03da73e4b81bfbe04d0d61b65c" translate="yes" xml:space="preserve">
          <source>Verify outcome</source>
          <target state="translated">結果の検証</target>
        </trans-unit>
        <trans-unit id="968a2dc859429ff332a18fe4f68d1bc3f083b912" translate="yes" xml:space="preserve">
          <source>Verify that you can reproduce the defect.</source>
          <target state="translated">不具合を再現できることを確認してください。</target>
        </trans-unit>
        <trans-unit id="515bca6bd8d57e897b38ffb481f512e10f333f1b" translate="yes" xml:space="preserve">
          <source>Verifying PHPUnit PHAR Releases</source>
          <target state="translated">PHPUnit PHAR リリースの検証</target>
        </trans-unit>
        <trans-unit id="87f6c76b8a2c217f0b522b06bb568e49150522f6" translate="yes" xml:space="preserve">
          <source>Verifying the state of the database after your test has run</source>
          <target state="translated">テスト実行後のデータベースの状態を確認する</target>
        </trans-unit>
        <trans-unit id="ea225c3777756c899e5beac56ead359dfc690949" translate="yes" xml:space="preserve">
          <source>Versions are compared using PHP&amp;rsquo;s &lt;a href=&quot;https://www.php.net/version_compare&quot;&gt;version_compare&lt;/a&gt; function. Among other things, this means that the &lt;code&gt;=&lt;/code&gt; and &lt;code&gt;==&lt;/code&gt; operator can only be used with complete &lt;code&gt;X.Y.Z&lt;/code&gt; version numbers and that just &lt;code&gt;X.Y&lt;/code&gt; will not work.</source>
          <target state="translated">バージョンは、PHPの&lt;a href=&quot;https://www.php.net/version_compare&quot;&gt;version_compare&lt;/a&gt;関数を使用して比較されます。特に、これは、 &lt;code&gt;=&lt;/code&gt; および &lt;code&gt;==&lt;/code&gt; 演算子は、完全な &lt;code&gt;X.Y.Z&lt;/code&gt; バージョン番号でのみ使用でき、 &lt;code&gt;X.Y&lt;/code&gt; だけでは機能しないことを意味します。</target>
        </trans-unit>
        <trans-unit id="4226ba146a6442cd5b7bc379dce83e15dc118e1f" translate="yes" xml:space="preserve">
          <source>We can now modify our test-case to look like:</source>
          <target state="translated">これで、テストケースを以下のように変更することができます。</target>
        </trans-unit>
        <trans-unit id="c74a1403765c15c77c1fa571bc693a220acc9037" translate="yes" xml:space="preserve">
          <source>We can now run the database test suite using different configurations from the command-line interface:</source>
          <target state="translated">これで、コマンドラインインターフェイスから異なる設定を使用してデータベーステストスイートを実行できるようになりました。</target>
        </trans-unit>
        <trans-unit id="2b21b52b04520b644cf0f1fc215000617879b9c8" translate="yes" xml:space="preserve">
          <source>We don&amp;rsquo;t have the release manager&amp;rsquo;s public key (&lt;code&gt;6372C20A&lt;/code&gt;) in our local system. In order to proceed with the verification we need to retrieve the release manager&amp;rsquo;s public key from a key server. One such server is &lt;code&gt;pgp.uni-mainz.de&lt;/code&gt;. The public key servers are linked together, so you should be able to connect to any key server.</source>
          <target state="translated">ローカルシステムにリリースマネージャーの公開鍵（ &lt;code&gt;6372C20A&lt;/code&gt; ）がありません。検証を続行するには、キーサーバーからリリースマネージャーの公開鍵を取得する必要があります。そのようなサーバーの1つが &lt;code&gt;pgp.uni-mainz.de&lt;/code&gt; です。公開鍵サーバーは相互にリンクされているため、任意の鍵サーバーに接続できるはずです。</target>
        </trans-unit>
        <trans-unit id="0bc92c8ed3137ce5da83bf715f291250acbaa082" translate="yes" xml:space="preserve">
          <source>We don't have the release manager's public key (&lt;code&gt;6372C20A&lt;/code&gt;) in our local system. In order to proceed with the verification we need to retrieve the release manager's public key from a key server. One such server is &lt;code&gt;pgp.uni-mainz.de&lt;/code&gt;. The public key servers are linked together, so you should be able to connect to any key server.</source>
          <target state="translated">ローカルシステムにリリースマネージャーの公開キー（ &lt;code&gt;6372C20A&lt;/code&gt; ）がありません。検証を進めるには、リリースマネージャーの公開鍵をキーサーバーから取得する必要があります。そのようなサーバーの1つが &lt;code&gt;pgp.uni-mainz.de&lt;/code&gt; です。公開鍵サーバーは相互にリンクされているため、どの鍵サーバーにも接続できるはずです。</target>
        </trans-unit>
        <trans-unit id="cd4d8f22f33f5d3ca426103163030e842ca48713" translate="yes" xml:space="preserve">
          <source>We first use the &lt;code&gt;createMock()&lt;/code&gt; method that is provided by the &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt; class to set up a mock object for the &lt;code&gt;Observer&lt;/code&gt;.</source>
          <target state="translated">最初に、 &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt; クラスによって提供される &lt;code&gt;createMock()&lt;/code&gt; メソッドを使用して、 &lt;code&gt;Observer&lt;/code&gt; モックオブジェクトを設定します。</target>
        </trans-unit>
        <trans-unit id="d95e979c279f198d114fc1ef2d6062fa2c6b5d1c" translate="yes" xml:space="preserve">
          <source>We first use the &lt;code&gt;getMockBuilder()&lt;/code&gt; method that is provided by the &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt; class to set up a mock object for the &lt;code&gt;Observer&lt;/code&gt;. Since we give an array as the second (optional) parameter for the &lt;code&gt;getMock()&lt;/code&gt; method, only the &lt;code&gt;update()&lt;/code&gt; method of the &lt;code&gt;Observer&lt;/code&gt; class is replaced by a mock implementation.</source>
          <target state="translated">最初に、 &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt; クラスによって提供される &lt;code&gt;getMockBuilder()&lt;/code&gt; メソッドを使用して、 &lt;code&gt;Observer&lt;/code&gt; のモックオブジェクトを設定します。 &lt;code&gt;getMock()&lt;/code&gt; メソッドの2番目（オプション）のパラメーターとして配列を指定しているため、 &lt;code&gt;Observer&lt;/code&gt; クラスの &lt;code&gt;update()&lt;/code&gt; メソッドのみがモック実装に置き換えられています。</target>
        </trans-unit>
        <trans-unit id="fe05c08006ff0a8ce21d34d52ae92caedbb9b25e" translate="yes" xml:space="preserve">
          <source>We have to fix up the Query Table call:</source>
          <target state="translated">クエリテーブルの呼び出しを修正しなければなりません。</target>
        </trans-unit>
        <trans-unit id="3b17a72d479f56ce5347129ab513ff650e8232b2" translate="yes" xml:space="preserve">
          <source>We then wrap the Flat XML DataSet into a Replacement DataSet:</source>
          <target state="translated">次に、フラット XML データセットを置換データセットにラップします。</target>
        </trans-unit>
        <trans-unit id="dc386149087ac76552404444ad67da830bfb5651" translate="yes" xml:space="preserve">
          <source>We want to verify PHPUnit&amp;rsquo;s PHP Archive (&lt;code&gt;phpunit-x.y.phar&lt;/code&gt;) against its detached signature (&lt;code&gt;phpunit-x.y.phar.asc&lt;/code&gt;):</source>
          <target state="translated">PHPUnitのPHPアーカイブ（ &lt;code&gt;phpunit-x.y.phar&lt;/code&gt; ）を、切り離された署名（ &lt;code&gt;phpunit-x.y.phar.asc&lt;/code&gt; ）と照合して検証します。</target>
        </trans-unit>
        <trans-unit id="6521e2d9cf4c4b8c30cee3301b63ec6b1f151d3e" translate="yes" xml:space="preserve">
          <source>We want to verify PHPUnit's PHP Archive (&lt;code&gt;phpunit.phar&lt;/code&gt;) against its detached signature (&lt;code&gt;phpunit.phar.asc&lt;/code&gt;):</source>
          <target state="translated">PHPUnitのPHPアーカイブ（ &lt;code&gt;phpunit.phar&lt;/code&gt; ）を分離された署名（ &lt;code&gt;phpunit.phar.asc&lt;/code&gt; ）と照合して検証します。</target>
        </trans-unit>
        <trans-unit id="08ec43f3df96cefc50ab04e118d795825023e071" translate="yes" xml:space="preserve">
          <source>Webserver</source>
          <target state="translated">Webserver</target>
        </trans-unit>
        <trans-unit id="7912e65563f990d380c3a7b1fe9013f351937498" translate="yes" xml:space="preserve">
          <source>What PHPUnit cannot help you with is the fact that database tests are very slow compared to tests not using the database. Depending on how large the interactions with your database are your tests could run a considerable amount of time. However, if you keep the amount of data used for each test small and try to test as much code using non-database tests you can easily get away in under a minute even for large test suites.</source>
          <target state="translated">PHPUnit が役に立たないのは、データベースを使用していないテストに比べて データベースのテストが非常に遅いという事実です。データベースとのやりとりの規模にもよりますが、テストの実行にはかなりの時間がかかります。しかし、各テストで使用するデータ量を少なめにして、 データベース以外のテストでできるだけ多くのコードをテストしようとすれば、 大規模なテストスイートであっても 1 分以内には簡単に済ませることができます。</target>
        </trans-unit>
        <trans-unit id="ad378f1367aa73f06a572f140feae837a7657f59" translate="yes" xml:space="preserve">
          <source>What about the Database Schema (DDL)?</source>
          <target state="translated">データベーススキーマ(DDL)はどうですか?</target>
        </trans-unit>
        <trans-unit id="115684ae5a4f0ea9d4f32a8dae7dc26e1ca72887" translate="yes" xml:space="preserve">
          <source>What can I do, when I get a &amp;ldquo;Too much Connections&amp;rdquo; Error?</source>
          <target state="translated">「Too much Connections」エラーが発生した場合、どうすればよいですか？</target>
        </trans-unit>
        <trans-unit id="5c83e4a9267735ea2a8a452869dd4e283f9096fa" translate="yes" xml:space="preserve">
          <source>What happens when you have two tests with slightly different setups? There are two possibilities:</source>
          <target state="translated">わずかに異なるセットアップで2つのテストを行った場合はどうなりますか?2つの可能性があります。</target>
        </trans-unit>
        <trans-unit id="93725b738940b2c0445b887a973d77f12a3a4b3e" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;--colors&lt;/code&gt; is used without any value, &lt;code&gt;auto&lt;/code&gt; is the chosen value.</source>
          <target state="translated">場合 &lt;code&gt;--colors&lt;/code&gt; は任意の値なしで使用され、 &lt;code&gt;auto&lt;/code&gt; 選択された値です。</target>
        </trans-unit>
        <trans-unit id="ff78fb67cdcbe6f7a992e23cd36e18068200b853" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;phpunit.phar&lt;/code&gt; is used then this attribute may be used to configure a directory from which all &lt;code&gt;*.phar&lt;/code&gt; files will be loaded as extensions for the PHPUnit test runner.</source>
          <target state="translated">&lt;code&gt;phpunit.phar&lt;/code&gt; を使用する場合、この属性を使用して、すべての &lt;code&gt;*.phar&lt;/code&gt; ファイルがPHPUnitテストランナーの拡張子としてロードされるディレクトリを構成できます。</target>
        </trans-unit>
        <trans-unit id="24c52d1e14412e2cdd24581efb9b8f0c8a891a49" translate="yes" xml:space="preserve">
          <source>When a comparison fails PHPUnit creates textual representations of the input values and compares those. Due to that implementation a diff might show more problems than actually exist.</source>
          <target state="translated">比較に失敗した場合は、PHPUnit は入力値のテキスト表現を作成してそれを比較します。このように実装されているため、差分では実際よりも多くの問題が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="9d7b2b56c3bb7baccf57768f31f22cba6408cce1" translate="yes" xml:space="preserve">
          <source>When a test depends on a test that uses data providers, the depending test will be executed when the test it depends upon is successful for at least one data set. The result of a test that uses data providers cannot be injected into a depending test.</source>
          <target state="translated">テストがデータプロバイダを使用するテストに依存している場合、依存するテストは、依存するテストが少なくとも1つのデータセットに対して成功したときに実行されます。データプロバイダを使用するテストの結果を依存テストに注入することはできません。</target>
        </trans-unit>
        <trans-unit id="d708fdf0d4e99be64a7752b817e49ef3cd1ca3e3" translate="yes" xml:space="preserve">
          <source>When a test has a data provider that uses named sets, each iteration of the data gets the current name appended to the end of the default test name. See &lt;a href=&quot;#textui-examples-testcaseclass-php&quot;&gt;Example 3.1&lt;/a&gt; for an example of named data sets.</source>
          <target state="translated">名前付きセットを使用するデータプロバイダーがテストにある場合、データの各反復は、デフォルトのテスト名の末尾に追加された現在の名前を取得します。名前付きデータセットの例については、&lt;a href=&quot;#textui-examples-testcaseclass-php&quot;&gt;例3.1&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="b83186dd5b2868bce96efb067330d4ec7fd33e75" translate="yes" xml:space="preserve">
          <source>When a test has a data provider that uses named sets, each iteration of the data gets the current name appended to the end of the default test name. See &lt;a href=&quot;textui#textui.examples.TestCaseClass.php&quot;&gt;Example 3.1&lt;/a&gt; for an example of named data sets.</source>
          <target state="translated">テストに名前付きセットを使用するデータプロバイダーがある場合、データの反復ごとに、デフォルトのテスト名の末尾に現在の名前が追加されます。名前付きデータセットの例については、&lt;a href=&quot;textui#textui.examples.TestCaseClass.php&quot;&gt;例3.1&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="9a8d2ea27a9b8d141da38c928ee1911dac9633b2" translate="yes" xml:space="preserve">
          <source>When a test has a data provider, each iteration of the data gets the current index appended to the end of the default test name.</source>
          <target state="translated">テストにデータプロバイダがある場合、データの各反復は、デフォルトのテスト名の末尾に現在のインデックスが付加されます。</target>
        </trans-unit>
        <trans-unit id="928de2897eb690b5e2463dfe5714db6ab366857d" translate="yes" xml:space="preserve">
          <source>When a test is run in a separate process, PHPUnit will attempt to preserve the global state from the parent process by serializing all globals in the parent process and unserializing them in the child process. This can cause problems if the parent process contains globals that are not serializable. To fix this, you can prevent PHPUnit from preserving global state with the &lt;code&gt;@preserveGlobalState&lt;/code&gt; annotation.</source>
          <target state="translated">テストが別のプロセスで実行されると、PHPUnitは親プロセスのすべてのグローバルをシリアル化し、子プロセスでそれらのシリアル化を解除することにより、親プロセスのグローバル状態を保持しようとします。親プロセスにシリアル化できないグローバルが含まれている場合、これにより問題が発生する可能性があります。これを修正するには、 &lt;code&gt;@preserveGlobalState&lt;/code&gt; アノテーションを使用してPHPUnitがグローバル状態を保持しないようにします。</target>
        </trans-unit>
        <trans-unit id="405c880b47d0a413832ae143bb4db686fdbf556f" translate="yes" xml:space="preserve">
          <source>When a test receives input from both a &lt;code&gt;@dataProvider&lt;/code&gt; method and from one or more tests it &lt;code&gt;@depends&lt;/code&gt; on, the arguments from the data provider will come before the ones from depended-upon tests. The arguments from depended-upon tests will be the same for each data set. See &lt;a href=&quot;#writing-tests-for-phpunit-data-providers-examples-dependencyanddataprovidercombo-php&quot;&gt;Example 2.9&lt;/a&gt;</source>
          <target state="translated">試験の両方からの入力を受信した場合 &lt;code&gt;@dataProvider&lt;/code&gt; の方法および1つ以上の試験から、それは &lt;code&gt;@depends&lt;/code&gt; に、データプロバイダからの引数がテストに依存-からのものの前に来ます。依存テストからの引数は、各データセットで同じになります。&lt;a href=&quot;#writing-tests-for-phpunit-data-providers-examples-dependencyanddataprovidercombo-php&quot;&gt;例2.9を&lt;/a&gt;参照してください</target>
        </trans-unit>
        <trans-unit id="b5087899f9ddca43147b61cf42ce219f784ed6d6" translate="yes" xml:space="preserve">
          <source>When a test receives input from both a &lt;code&gt;@dataProvider&lt;/code&gt; method and from one or more tests it &lt;code&gt;@depends&lt;/code&gt; on, the arguments from the data provider will come before the ones from depended-upon tests. The arguments from depended-upon tests will be the same for each data set. See &lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.data-providers.examples.DependencyAndDataProviderCombo.php&quot;&gt;Example 2.9&lt;/a&gt;</source>
          <target state="translated">テストが &lt;code&gt;@dataProvider&lt;/code&gt; メソッドとそれが &lt;code&gt;@depends&lt;/code&gt; する1つ以上のテストの両方から入力を受け取ると、データプロバイダーからの引数は、依存するテストからの引数の前に来ます。依存テストの引数は、各データセットで同じです。&lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.data-providers.examples.DependencyAndDataProviderCombo.php&quot;&gt;例2.9を&lt;/a&gt;参照</target>
        </trans-unit>
        <trans-unit id="41134dd831aeb0bb5259a2f5a6831f7e865c793d" translate="yes" xml:space="preserve">
          <source>When code coverage data is collected and processed, static code analysis is performed to improve reasoning about the covered code. This is an expensive operation, whose result can be cached. When the &lt;code&gt;cacheDirectory&lt;/code&gt; attribute is set, static analysis results will be cached in the specified directory.</source>
          <target state="translated">コードカバレッジデータが収集および処理されると、静的コード分析が実行され、カバーされたコードに関する推論が改善されます。これはコストのかかる操作であり、その結果をキャッシュできます。とき &lt;code&gt;cacheDirectory&lt;/code&gt; 属性が設定され、静的解析結果は、指定したディレクトリにキャッシュされます。</target>
        </trans-unit>
        <trans-unit id="1f39ec370243fced00c1b53d74960cd74dab84f5" translate="yes" xml:space="preserve">
          <source>When invoked as shown above, the PHPUnit command-line test runner will look for a &lt;code&gt;ArrayTest.php&lt;/code&gt; sourcefile in the current working directory, load it, and expect to find a &lt;code&gt;ArrayTest&lt;/code&gt; test case class. It will then execute the tests of that class.</source>
          <target state="translated">上記のように呼び出されると、PHPUnitコマンドラインテストランナーは、現在の作業ディレクトリで &lt;code&gt;ArrayTest.php&lt;/code&gt; ソースファイルを探してロードし、 &lt;code&gt;ArrayTest&lt;/code&gt; テストケースクラスを見つけます。次に、そのクラスのテストを実行します。</target>
        </trans-unit>
        <trans-unit id="24ddded31577eb2fac163a711cb7805b9371aa09" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;false&lt;/code&gt;, only line coverage data will be collected, processed, and reported.</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; に設定すると、ラインカバレッジデータのみが収集、処理、およびレポートされます。</target>
        </trans-unit>
        <trans-unit id="0b8c257df4624e54c7d61c98bf07c4bfb68faef2" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;false&lt;/code&gt;, the error handler installed by &lt;code&gt;convertErrorsToExceptions&lt;/code&gt; will not convert &lt;code&gt;E_NOTICE&lt;/code&gt;, &lt;code&gt;E_USER_NOTICE&lt;/code&gt;, or &lt;code&gt;E_STRICT&lt;/code&gt; errors to exceptions.</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; に設定すると、 &lt;code&gt;convertErrorsToExceptions&lt;/code&gt; によってインストールされるエラーハンドラーは、 &lt;code&gt;E_NOTICE&lt;/code&gt; 、 &lt;code&gt;E_USER_NOTICE&lt;/code&gt; 、または &lt;code&gt;E_STRICT&lt;/code&gt; エラーを例外に変換しません。</target>
        </trans-unit>
        <trans-unit id="002a6f78e7e4d71c9647e3e9d3f68886ae01fde9" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;false&lt;/code&gt;, the error handler installed by &lt;code&gt;convertErrorsToExceptions&lt;/code&gt; will not convert &lt;code&gt;E_WARNING&lt;/code&gt; or &lt;code&gt;E_USER_WARNING&lt;/code&gt; errors to exceptions.</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; に設定すると、 &lt;code&gt;convertErrorsToExceptions&lt;/code&gt; によってインストールされたエラーハンドラーは &lt;code&gt;E_WARNING&lt;/code&gt; または &lt;code&gt;E_USER_WARNING&lt;/code&gt; エラーを例外に変換しません。</target>
        </trans-unit>
        <trans-unit id="78fefefb2e1ebb856757b90963dd4bdef481d50e" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;true&lt;/code&gt;, all sourcecode files that are configured to be considered for code coverage analysis will be included in the code coverage report(s). This includes sourcecode files that are not executed while the tests are running.</source>
          <target state="translated">設定すると &lt;code&gt;true&lt;/code&gt; 、コードカバレッジ解析のために考慮されるように構成されているすべてのソースコードファイルには、コードカバレッジレポート（複数可）に含まれます。これには、テストの実行中に実行されないソースコードファイルが含まれます。</target>
        </trans-unit>
        <trans-unit id="4926a1890c4829263d1f39d309c8169b2865a845" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;true&lt;/code&gt;, all sourcecode files that are configured to be considered for code coverage analysis will be processed. This includes sourcecode files that are not executed while the tests are running.</source>
          <target state="translated">設定すると &lt;code&gt;true&lt;/code&gt; 、コードカバレッジ解析のために考慮されるように構成されているすべてのソースコードファイルが処理されます。これには、テストの実行中に実行されないソースコードファイルが含まれます。</target>
        </trans-unit>
        <trans-unit id="e2d68efc50944e9b615c4e6ed47916965e9a5cea" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;true&lt;/code&gt;, line coverage, branch coverage, and path coverage data will be collected, processed, and reported. This requires a code coverage driver that supports path coverage. Path Coverage is currently only implemented by Xdebug.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; に設定すると、ラインカバレッジ、ブランチカバレッジ、およびパスカバレッジのデータが収集、処理、およびレポートされます。これには、パスカバレッジをサポートするコードカバレッジドライバーが必要です。パスカバレッジは現在、Xdebugによってのみ実装されています。</target>
        </trans-unit>
        <trans-unit id="7762f87faf35f317348e26044ac8f9c8f7f7e8b1" translate="yes" xml:space="preserve">
          <source>When testing a fluent interface, it is sometimes useful to have a stubbed method return a reference to the stubbed object. &lt;a href=&quot;#test-doubles-stubs-examples-stubtest4-php&quot;&gt;Example 8.6&lt;/a&gt; shows how you can use &lt;code&gt;returnSelf()&lt;/code&gt; to achieve this.</source>
          <target state="translated">流暢なインターフェースをテストする場合、スタブメソッドがスタブオブジェクトへの参照を返すようにすると便利な場合があります。&lt;a href=&quot;#test-doubles-stubs-examples-stubtest4-php&quot;&gt;例8.6&lt;/a&gt;は、 &lt;code&gt;returnSelf()&lt;/code&gt; を使用してこれを実現する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="2924e217edcd774dc23569abb58a9b2d78ee16dc" translate="yes" xml:space="preserve">
          <source>When testing a fluent interface, it is sometimes useful to have a stubbed method return a reference to the stubbed object. &lt;a href=&quot;test-doubles#test-doubles.stubs.examples.StubTest4.php&quot;&gt;Example 9.5&lt;/a&gt; shows how you can use &lt;code&gt;returnSelf()&lt;/code&gt; to achieve this.</source>
          <target state="translated">Fluentインターフェイスをテストする場合、スタブメソッドがスタブオブジェクトへの参照を返すようにすると便利な場合があります。&lt;a href=&quot;test-doubles#test-doubles.stubs.examples.StubTest4.php&quot;&gt;例9.5&lt;/a&gt;は、 &lt;code&gt;returnSelf()&lt;/code&gt; を使用してこれを実現する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="87b982bd5efbe2cd01a6dcc7b3fcc25e026e7b8c" translate="yes" xml:space="preserve">
          <source>When testing code that uses PHP built-in functions such as &lt;code&gt;fopen()&lt;/code&gt; that may trigger errors it can sometimes be useful to use error suppression while testing. This allows you to check the return values by suppressing notices that would lead to an exception raised by PHPUnit&amp;rsquo;s error handler.</source>
          <target state="translated">エラーをトリガーする可能性のある &lt;code&gt;fopen()&lt;/code&gt; などのPHP組み込み関数を使用するコードをテストする場合、テスト中にエラー抑制を使用すると便利な場合があります。これにより、PHPUnitのエラーハンドラーによって発生する例外につながる通知を抑制して、戻り値を確認できます。</target>
        </trans-unit>
        <trans-unit id="e2ea43a722b4accbde6ee894dec3f96eb881f12e" translate="yes" xml:space="preserve">
          <source>When testing that relies on php functions that trigger errors like &lt;code&gt;fopen&lt;/code&gt; it can sometimes be useful to use error suppression while testing. This allows you to check the return values by suppressing notices that would lead to a phpunit &lt;code&gt;PHPUnit\Framework\Error\Notice&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fopen&lt;/code&gt; のようなエラーをトリガーするphp関数に依存するテストでは、テスト中にエラー抑制を使用すると便利な場合があります。これにより、phpunit &lt;code&gt;PHPUnit\Framework\Error\Notice&lt;/code&gt; つながる通知を抑制して、戻り値を確認できます。</target>
        </trans-unit>
        <trans-unit id="3b17827b6e3f6202e1bb3973dbef0491f95f413f" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;forceCoversAnnotation&lt;/code&gt; configuration option in the &lt;a href=&quot;configuration#appendixes-configuration&quot;&gt;configuration file&lt;/a&gt; is set to &lt;code&gt;true&lt;/code&gt;, every test method needs to have an associated &lt;code&gt;@covers&lt;/code&gt; annotation (either on the test class or the individual test method).</source>
          <target state="translated">&lt;a href=&quot;configuration#appendixes-configuration&quot;&gt;構成ファイル&lt;/a&gt;の &lt;code&gt;forceCoversAnnotation&lt;/code&gt; 構成オプションが &lt;code&gt;true&lt;/code&gt; に設定されている場合、すべてのテストメソッドに &lt;code&gt;@covers&lt;/code&gt; アノテーションを関連付ける必要があります（テストクラスまたは個々のテストメソッドのいずれか）。</target>
        </trans-unit>
        <trans-unit id="990bfb73867024d395d16a9cdf248f1795bbe0cb" translate="yes" xml:space="preserve">
          <source>When the first guestbook entry is deleted from the dataset only &amp;ldquo;id&amp;rdquo;, &amp;ldquo;content&amp;rdquo; and &amp;ldquo;created&amp;rdquo; would be columns of the guestbook table, since &amp;ldquo;user&amp;rdquo; is not specified.</source>
          <target state="translated">最初のゲストブックエントリがデータセットから削除されると、「user」が指定されていないため、「id」、「content」、「created」のみがゲストブックテーブルの列になります。</target>
        </trans-unit>
        <trans-unit id="fc33515038d480815dce350ef54023bb52c7fc20" translate="yes" xml:space="preserve">
          <source>When the generated output would be long to read PHPUnit will split it up and provide a few lines of context around every difference.</source>
          <target state="translated">生成された出力を読むのに時間がかかる場合は、PHPUnit がそれを分割して数行の文脈を提供します。</target>
        </trans-unit>
        <trans-unit id="47caf862ad652d0974cf356758de0def9543ef70" translate="yes" xml:space="preserve">
          <source>When the stubbed method call should return a calculated value instead of a fixed one (see &lt;code&gt;returnValue()&lt;/code&gt;) or an (unchanged) argument (see &lt;code&gt;returnArgument()&lt;/code&gt;), you can use &lt;code&gt;returnCallback()&lt;/code&gt; to have the stubbed method return the result of a callback function or method. See &lt;a href=&quot;#test-doubles-stubs-examples-stubtest6-php&quot;&gt;Example 8.8&lt;/a&gt; for an example.</source>
          <target state="translated">スタブメソッド呼び出しが固定値（ &lt;code&gt;returnValue()&lt;/code&gt; を参照）または（変更されていない）引数（ &lt;code&gt;returnArgument()&lt;/code&gt; を参照）ではなく計算値を返す必要がある場合、 &lt;code&gt;returnCallback()&lt;/code&gt; を使用してスタブメソッドにコールバック関数またはメソッド。&lt;a href=&quot;#test-doubles-stubs-examples-stubtest6-php&quot;&gt;例&lt;/a&gt;については、例8.8を参照してください。</target>
        </trans-unit>
        <trans-unit id="ea4f1e8bf1982f3bb75b49b47e526b8b0d793935" translate="yes" xml:space="preserve">
          <source>When the stubbed method call should return a calculated value instead of a fixed one (see &lt;code&gt;returnValue()&lt;/code&gt;) or an (unchanged) argument (see &lt;code&gt;returnArgument()&lt;/code&gt;), you can use &lt;code&gt;returnCallback()&lt;/code&gt; to have the stubbed method return the result of a callback function or method. See &lt;a href=&quot;test-doubles#test-doubles.stubs.examples.StubTest6.php&quot;&gt;Example 9.7&lt;/a&gt; for an example.</source>
          <target state="translated">&lt;code&gt;returnValue()&lt;/code&gt; 化されたメソッド呼び出しが固定値（returnValue（）を参照）または（変更されていない）引数（ &lt;code&gt;returnArgument()&lt;/code&gt; を参照）ではなく計算値を返す必要がある場合、 &lt;code&gt;returnCallback()&lt;/code&gt; を使用してスタブ化されたメソッドにコールバック関数またはメソッド。&lt;a href=&quot;test-doubles#test-doubles.stubs.examples.StubTest6.php&quot;&gt;例&lt;/a&gt;については、例9.7を参照してください。</target>
        </trans-unit>
        <trans-unit id="49f8f19211f4e2927067d73b212aa0ebae6a020c" translate="yes" xml:space="preserve">
          <source>When the test execution terminates before the &lt;code&gt;tearDown()&lt;/code&gt; method is invoked the directory will stay in the filesystem.</source>
          <target state="translated">&lt;code&gt;tearDown()&lt;/code&gt; メソッドが呼び出される前にテストの実行が終了すると、ディレクトリはファイルシステムに残ります。</target>
        </trans-unit>
        <trans-unit id="7c94886636c702547a1d7e395b30e5dcfa8ae81e" translate="yes" xml:space="preserve">
          <source>When using a large number of datasets it&amp;rsquo;s useful to name each one with string key instead of default numeric. Output will be more verbose as it&amp;rsquo;ll contain that name of a dataset that breaks a test.</source>
          <target state="translated">多数のデータセットを使用する場合は、デフォルトの数値ではなく文字列キーを使用して各データセットに名前を付けると便利です。テストに失敗するデータセットの名前が含まれるため、出力はより冗長になります。</target>
        </trans-unit>
        <trans-unit id="1be8b46c5b8942250c3eba0b21ebd928f347b844" translate="yes" xml:space="preserve">
          <source>When using a large number of datasets it's useful to name each one with string key instead of default numeric. Output will be more verbose as it'll contain that name of a dataset that breaks a test.</source>
          <target state="translated">多数のデータセットを使う場合は、デフォルトの数値ではなく文字列キーを使ってそれぞれのデータセットに名前をつけると便利です。テストを中断するデータセットの名前が含まれるので、出力はより冗長になります。</target>
        </trans-unit>
        <trans-unit id="23b6a0c0a9735e949f8baaf8093ef4af71c0de5e" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;@testdox&lt;/code&gt; annotation at method level with a &lt;code&gt;@dataProvider&lt;/code&gt; you may use the method parameters as placeholders in your alternative description.</source>
          <target state="translated">使用している場合 &lt;code&gt;@testdox&lt;/code&gt; のとメソッドレベルの注釈を &lt;code&gt;@dataProvider&lt;/code&gt; 、あなたの代わりの説明にプレースホルダとしてメソッドパラメータを使用することができます。</target>
        </trans-unit>
        <trans-unit id="887804c4bdc4fcd158996819380692e091ea6cbc" translate="yes" xml:space="preserve">
          <source>When we are writing a test in which we cannot (or chose not to) use a real depended-on component (DOC), we can replace it with a Test Double. The Test Double doesn&amp;rsquo;t have to behave exactly like the real DOC; it merely has to provide the same API as the real one so that the SUT thinks it is the real one!</source>
          <target state="translated">実際の依存コンポーネント（DOC）を使用できない（または使用しないことを選択した）テストを作成している場合は、それをTestDoubleに置き換えることができます。テストダブルは、実際のDOCとまったく同じように動作する必要はありません。SUTが本物であると見なすために、本物と同じAPIを提供する必要があるだけです。</target>
        </trans-unit>
        <trans-unit id="50169aa0190de9a1300c679d3bcfb09f2855798b" translate="yes" xml:space="preserve">
          <source>When we are writing a test in which we cannot (or chose not to) use a real depended-on component (DOC), we can replace it with a Test Double. The Test Double doesn't have to behave exactly like the real DOC; it merely has to provide the same API as the real one so that the SUT thinks it is the real one!</source>
          <target state="translated">本物の依存型コンポーネント(DOC)を使用できない(または使用しないことを選択した)テストを書いているときは、それをテストダブルで置き換えることができる。Test Doubleは、本物のDOCのように正確に振る舞う必要はない。</target>
        </trans-unit>
        <trans-unit id="d14eabc8542490e0743e02f9afb87367a94b7427" translate="yes" xml:space="preserve">
          <source>When writing custom assertions it is the best practice to follow how PHPUnit&amp;rsquo;s own assertions are implemented. As you can see in &lt;a href=&quot;#extending-phpunit-examples-assert-php&quot;&gt;Example 10.1&lt;/a&gt;, the &lt;code&gt;assertTrue()&lt;/code&gt; method is a wrapper around the &lt;code&gt;isTrue()&lt;/code&gt; and &lt;code&gt;assertThat()&lt;/code&gt; methods: &lt;code&gt;isTrue()&lt;/code&gt; creates a matcher object that is passed on to &lt;code&gt;assertThat()&lt;/code&gt; for evaluation.</source>
          <target state="translated">カスタムアサーションを作成するときは、PHPUnit独自のアサーションがどのように実装されているかに従うことがベストプラクティスです。あなたが見ることができるように&lt;a href=&quot;#extending-phpunit-examples-assert-php&quot;&gt;例10.1&lt;/a&gt;、 &lt;code&gt;assertTrue()&lt;/code&gt; メソッドは、ラッパーです &lt;code&gt;isTrue()&lt;/code&gt; と &lt;code&gt;assertThat()&lt;/code&gt; ：メソッド &lt;code&gt;isTrue()&lt;/code&gt; に渡されるマッチャーオブジェクトを作成 &lt;code&gt;assertThat()&lt;/code&gt; 評価のために。</target>
        </trans-unit>
        <trans-unit id="95e98073b7e27b0f4684172a48b1494f7ed971bf" translate="yes" xml:space="preserve">
          <source>When writing custom assertions it is the best practice to follow how PHPUnit's own assertions are implemented. As you can see in &lt;a href=&quot;extending-phpunit#extending-phpunit.examples.Assert.php&quot;&gt;Example 14.1&lt;/a&gt;, the &lt;code&gt;assertTrue()&lt;/code&gt; method is just a wrapper around the &lt;code&gt;isTrue()&lt;/code&gt; and &lt;code&gt;assertThat()&lt;/code&gt; methods: &lt;code&gt;isTrue()&lt;/code&gt; creates a matcher object that is passed on to &lt;code&gt;assertThat()&lt;/code&gt; for evaluation.</source>
          <target state="translated">カスタムアサーションを作成する場合、PHPUnit独自のアサーションの実装方法に従うことがベストプラクティスです。あなたが見ることができるように&lt;a href=&quot;extending-phpunit#extending-phpunit.examples.Assert.php&quot;&gt;例14.1&lt;/a&gt;、 &lt;code&gt;assertTrue()&lt;/code&gt; メソッドは、単なるラッパーです &lt;code&gt;isTrue()&lt;/code&gt; と &lt;code&gt;assertThat()&lt;/code&gt; ：メソッド &lt;code&gt;isTrue()&lt;/code&gt; に渡されるマッチャーオブジェクトを作成 &lt;code&gt;assertThat()&lt;/code&gt; 評価のために。</target>
        </trans-unit>
        <trans-unit id="b59585f24f15b219823e254de9f0db222aea80f8" translate="yes" xml:space="preserve">
          <source>When you agree on coordinating your activities with the supplier of a package, you can write the tests together. Do this in such a way that the tests reveal as many assumptions as possible. Hidden assumptions are the death of cooperation. With the tests, you document exactly what you expect from the supplied package. The supplier will know the package is complete when all the tests run.</source>
          <target state="translated">パッケージのサプライヤとの活動を調整することに合意したら、一緒にテストを書くことができます。これは、テストが可能な限り多くの仮定を明らかにするような方法で行ってください。隠れた仮定は、協力の死です。テストでは、提供されたパッケージに何を期待しているかを正確に文書化します。すべてのテストが実行されたときに、サプライヤはパッケージが完成していることを知ることができます。</target>
        </trans-unit>
        <trans-unit id="52e12d1d42441315a63147ea08d4f830cf12dc03" translate="yes" xml:space="preserve">
          <source>When you are working on a new test case class, you might want to begin by writing empty test methods such as:</source>
          <target state="translated">新しいテストケースクラスで作業をしているときには、次のような空のテストメソッドを書くことから始めたいと思うかもしれません。</target>
        </trans-unit>
        <trans-unit id="3dc1c81606a083020d621842df8391fd0f600c77" translate="yes" xml:space="preserve">
          <source>When you document assumptions with tests, you own the tests. The supplier of the package -- who you make assumptions about -- knows nothing about your tests. If you want to have a closer relationship with the supplier of a package, you can use the tests to communicate and coordinate your activities.</source>
          <target state="translated">テストで仮定を文書化するときは、あなたがテストを所有していることになります。あなたが仮定を行うパッケージのサプライヤは、あなたのテストについて何も知りません。パッケージのサプライヤとより密接な関係を持ちたい場合は、テストを使ってコミュニケーションを取り、活動を調整することができます。</target>
        </trans-unit>
        <trans-unit id="b227323596cb1d49d216c73d52a59fbd5c9c6c81" translate="yes" xml:space="preserve">
          <source>When you get a defect report, your impulse might be to fix the defect as quickly as possible. Experience shows that this impulse will not serve you well; it is likely that the fix for the defect causes another defect.</source>
          <target state="translated">不具合の報告を受けると、できるだけ早く不具合を修正したいという衝動に駆られるかもしれません。経験上、この衝動はあなたの役に立たないことを示しています。</target>
        </trans-unit>
        <trans-unit id="80af9e23609590d6899ef8d3901fc68097d07e39" translate="yes" xml:space="preserve">
          <source>When you need to add new functionality to the system, write the tests first. Then, you will be done developing when the test runs. This practice will be discussed in detail in the next chapter.</source>
          <target state="translated">システムに新しい機能を追加する必要があるときは、まずテストを書きます。そして、テストが実行されたら開発は終了です。この練習方法については、次の章で詳しく説明します。</target>
        </trans-unit>
        <trans-unit id="c2a06ba48d153db1ee538c313ddd441fa8fc16ee" translate="yes" xml:space="preserve">
          <source>When you need to make a change to the internal structure of the software you are working on to make it easier to understand and cheaper to modify without changing its observable behavior, a test suite is invaluable in applying these so called &lt;a href=&quot;http://martinfowler.com/bliki/DefinitionOfRefactoring.html&quot;&gt;refactorings&lt;/a&gt; safely. Otherwise, you might not notice the system breaking while you are carrying out the restructuring.</source>
          <target state="translated">監視可能な動作を変更せずに、理解しやすく、より安価に変更できるように、作業中のソフトウェアの内部構造を変更する必要がある場合、テストスイートは、これらのいわゆる&lt;a href=&quot;http://martinfowler.com/bliki/DefinitionOfRefactoring.html&quot;&gt;リファクタリングを&lt;/a&gt;安全に適用するために非常に重要です。そうしないと、リストラの実行中にシステムが壊れることに気付かない場合があります。</target>
        </trans-unit>
        <trans-unit id="583d6d83099b223a3e0e57bf2f44ceadc4b6c1fb" translate="yes" xml:space="preserve">
          <source>When your application interacts with a web service you want to test it without actually interacting with the web service. To create stubs and mocks of web services, the &lt;code&gt;getMockFromWsdl()&lt;/code&gt; can be used like &lt;code&gt;getMock()&lt;/code&gt; (see above). The only difference is that &lt;code&gt;getMockFromWsdl()&lt;/code&gt; returns a stub or mock based on a web service description in WSDL and &lt;code&gt;getMock()&lt;/code&gt; returns a stub or mock based on a PHP class or interface.</source>
          <target state="translated">アプリケーションがWebサービスと対話するとき、実際にWebサービスと対話せずにアプリケーションをテストする必要があります。スタブとWebサービスのモックを作成するには、 &lt;code&gt;getMockFromWsdl()&lt;/code&gt; のように使用することができます &lt;code&gt;getMock()&lt;/code&gt; （上記参照）。唯一の違いは、 &lt;code&gt;getMockFromWsdl()&lt;/code&gt; がWSDLのWebサービス記述に基づいてスタブまたはモックを返し、 &lt;code&gt;getMock()&lt;/code&gt; がPHPクラスまたはインターフェースに基づいてスタブまたはモックを返すことです。</target>
        </trans-unit>
        <trans-unit id="dee25f858f8dc07f3b69a592734c66c2c0832323" translate="yes" xml:space="preserve">
          <source>When your application interacts with a web service you want to test it without actually interacting with the web service. To make the stubbing and mocking of web services easy, the &lt;code&gt;getMockFromWsdl()&lt;/code&gt; can be used just like &lt;code&gt;getMock()&lt;/code&gt; (see above). The only difference is that &lt;code&gt;getMockFromWsdl()&lt;/code&gt; returns a stub or mock based on a web service description in WSDL and &lt;code&gt;getMock()&lt;/code&gt; returns a stub or mock based on a PHP class or interface.</source>
          <target state="translated">アプリケーションがWebサービスとやり取りする場合、実際にWebサービスとやり取りせずにテストする必要があります。スタブを作成し、簡単なWebサービスのモックするには、 &lt;code&gt;getMockFromWsdl()&lt;/code&gt; と同じように使用することができます &lt;code&gt;getMock()&lt;/code&gt; （上記参照します）。唯一の違いは、 &lt;code&gt;getMockFromWsdl()&lt;/code&gt; がWSDLのWebサービス記述に基づいてスタブまたはモックを返し、 &lt;code&gt;getMock()&lt;/code&gt; がPHPクラスまたはインターフェースに基づいてスタブまたはモックを返すことです。</target>
        </trans-unit>
        <trans-unit id="7903c1b33bff5cb437ad68da9b2ea5f628df7f7e" translate="yes" xml:space="preserve">
          <source>Whenever a test fails PHPUnit tries its best to provide you with as much context as possible that can help to identify the problem.</source>
          <target state="translated">テストが失敗した場合は、PHPUnit はできるだけ多くの情報を提供して問題の特定に役立てようとします。</target>
        </trans-unit>
        <trans-unit id="0709917e388ac8733124d676879302ae3b1a068d" translate="yes" xml:space="preserve">
          <source>Whenever you are tempted to type something into a &lt;code&gt;print&lt;/code&gt; statement or a debugger expression, write it as a test instead.</source>
          <target state="translated">&lt;code&gt;print&lt;/code&gt; ステートメントまたはデバッガー式に何かを入力したくなったら、代わりにテストとして記述してください。</target>
        </trans-unit>
        <trans-unit id="e937368555fce02eeb1adfa4f2e97ac617a86c71" translate="yes" xml:space="preserve">
          <source>While this is very convenient for editing with Excel or OpenOffice, you cannot specify NULL values with the CSV dataset. An empty column will lead to the database default empty value being inserted into the column.</source>
          <target state="translated">ExcelやOpenOfficeでの編集には非常に便利ですが、CSVデータセットではNULL値を指定することはできません。空の列を指定すると、データベースのデフォルトの空の値が列に挿入されます。</target>
        </trans-unit>
        <trans-unit id="d0bf6edecb4d699b5c1f0cd67b77dbc2e51f71ef" translate="yes" xml:space="preserve">
          <source>Whitelisting Files</source>
          <target state="translated">ファイルのホワイトリスト化</target>
        </trans-unit>
        <trans-unit id="184f652d531056bd963c11d37ccd5526523caa00" translate="yes" xml:space="preserve">
          <source>Whitelisting Files for Code Coverage</source>
          <target state="translated">コードカバレッジのためのファイルのホワイトリスト化</target>
        </trans-unit>
        <trans-unit id="86c7429c642e4aea1befd537be31240728fcb172" translate="yes" xml:space="preserve">
          <source>Will PHPUnit (re-)create the database schema for each test?</source>
          <target state="translated">PHPUnit はテストごとにデータベーススキーマを (再)作成するのでしょうか?</target>
        </trans-unit>
        <trans-unit id="26d9c28d789c254f71ea99a3463b99a7ccc2f4fa" translate="yes" xml:space="preserve">
          <source>Windows</source>
          <target state="translated">Windows</target>
        </trans-unit>
        <trans-unit id="b2d890362b7721a4a0b744a62a04801a95ca52ea" translate="yes" xml:space="preserve">
          <source>Without a virtual filesystem such as vfsStream we cannot test the &lt;code&gt;setDirectory()&lt;/code&gt; method in isolation from external influence (see &lt;a href=&quot;test-doubles#test-doubles.mocking-the-filesystem.examples.ExampleTest.php&quot;&gt;Example 9.22&lt;/a&gt;).</source>
          <target state="translated">vfsStreamなどの仮想ファイルシステムがないと、外部の影響から &lt;code&gt;setDirectory()&lt;/code&gt; メソッドをテストできません（&lt;a href=&quot;test-doubles#test-doubles.mocking-the-filesystem.examples.ExampleTest.php&quot;&gt;例9.22を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="f71680b834fbbe95782fba63d95147a749c8be11" translate="yes" xml:space="preserve">
          <source>Without the error suppression the test would fail reporting &lt;code&gt;fopen(/is-not-writeable/file): failed to open stream:
    No such file or directory&lt;/code&gt;.</source>
          <target state="translated">エラー抑制がないと、テストは失敗し、 &lt;code&gt;fopen(/is-not-writeable/file): failed to open stream: No such file or directory&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dedccc4867405a3471be8233f4ebe9a6a2bb2de6" translate="yes" xml:space="preserve">
          <source>Write all the rows in the data-tables into the database.</source>
          <target state="translated">データテーブルのすべての行をデータベースに書き込みます。</target>
        </trans-unit>
        <trans-unit id="8bbbfaf5377d2e03efa933060317a93421ed5861" translate="yes" xml:space="preserve">
          <source>Write an automated test that fails now but will succeed when the defect is fixed.</source>
          <target state="translated">今は失敗しても、欠陥が修正されれば成功する自動テストを書いてください。</target>
        </trans-unit>
        <trans-unit id="aa0c42ef3cef9d392f3dcac3d09402d1957f6344" translate="yes" xml:space="preserve">
          <source>Write custom assertions</source>
          <target state="translated">カスタムアサーションを書く</target>
        </trans-unit>
        <trans-unit id="f709732b2211c2a981b1be285ece585e168e3822" translate="yes" xml:space="preserve">
          <source>Write custom assertions and utility methods in an abstract subclass of &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt; and derive your test case classes from that class. This is one of the easiest ways to extend PHPUnit.</source>
          <target state="translated">&lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt; 抽象サブクラスにカスタムアサーションとユーティリティメソッドを記述し、そのクラスからテストケースクラスを派生させます。これは、PHPUnitを拡張する最も簡単な方法の1つです。</target>
        </trans-unit>
        <trans-unit id="35a3852a23915596995ef8635dc6fbd161c3dfce" translate="yes" xml:space="preserve">
          <source>Writing Tests for PHPUnit</source>
          <target state="translated">PHPUnit 用のテストの書き方</target>
        </trans-unit>
        <trans-unit id="f063b9902b860031f4c625394b61325a4440e2df" translate="yes" xml:space="preserve">
          <source>XML DataSet</source>
          <target state="translated">XMLデータセット</target>
        </trans-unit>
        <trans-unit id="1a211ee8d43cfaa8129da355009a4dfe2c9d149d" translate="yes" xml:space="preserve">
          <source>Xdebug is not distributed as part of PHPUnit. If you receive a notice while running tests that the Xdebug extension is not loaded, it means that Xdebug is either not installed or not configured properly. Before you can use the code coverage analysis features in PHPUnit, you should read &lt;a href=&quot;http://xdebug.org/docs/install&quot;&gt;the Xdebug installation guide&lt;/a&gt;.</source>
          <target state="translated">XdebugはPHPUnitの一部として配布されていません。テストの実行中にXdebug拡張機能が読み込まれていないという通知を受け取った場合は、Xdebugがインストールされていないか、正しく構成されていないことを意味します。PHPUnitのコードカバレッジ分析機能を使用する前に&lt;a href=&quot;http://xdebug.org/docs/install&quot;&gt;、Xdebugインストールガイドを&lt;/a&gt;読む必要があります。</target>
        </trans-unit>
        <trans-unit id="9ab582c7e8e9b5fe420c617b0de1cf591044edbc" translate="yes" xml:space="preserve">
          <source>YAML DataSet</source>
          <target state="translated">YAMLデータセット</target>
        </trans-unit>
        <trans-unit id="92116dc581c2238ebeff646dd12b48fd3c73d53c" translate="yes" xml:space="preserve">
          <source>You can also assert the result of complex queries with the Query Table approach, just specify a result name with a query and compare it to a dataset:</source>
          <target state="translated">また、クエリテーブルのアプローチで複雑なクエリの結果をアサートすることもでき、クエリで結果名を指定してデータセットと比較するだけです。</target>
        </trans-unit>
        <trans-unit id="bdc5fa00c7042ab0755b71b736e98f12f97c3cb3" translate="yes" xml:space="preserve">
          <source>You can always write more tests. However, you will quickly find that only a fraction of the tests you can imagine are actually useful. What you want is to write tests that fail even though you think they should work, or tests that succeed even though you think they should fail. Another way to think of it is in cost/benefit terms. You want to write tests that will pay you back with information.</source>
          <target state="translated">いつでももっと多くのテストを書くことができます。しかし、あなたが想像できるテストのうち、実際に役に立つのはほんの一部に過ぎないことにすぐに気づくでしょう。あなたが望むのは、機能するはずだと思っていても失敗するテストや、失敗するはずだと思っていても成功するテストを書くことです。もう一つの考え方は、コスト/ベネフィットの観点から考えることです。情報で見返りが得られるテストを書きたいのです。</target>
        </trans-unit>
        <trans-unit id="60bf40934c8d19f05bd4bb90421cf70368100f55" translate="yes" xml:space="preserve">
          <source>You can configure PHPUnit extensions, assuming the extension accepts configuration values.</source>
          <target state="translated">PHPUnit の拡張モジュールを設定することができます。</target>
        </trans-unit>
        <trans-unit id="a078cfc20a1095c008a47b877929c52dcf17f7ba" translate="yes" xml:space="preserve">
          <source>You can construct the DataSet on your own:</source>
          <target state="translated">自分でデータセットを構築することができます。</target>
        </trans-unit>
        <trans-unit id="ac0ece83c2819ca556ba1bbe02db176b21c66ad6" translate="yes" xml:space="preserve">
          <source>You can create a CSV DataSet by calling:</source>
          <target state="translated">呼び出すことでCSVデータセットを作成することができます。</target>
        </trans-unit>
        <trans-unit id="faaae67de0688c386d3951e4268fbd9886d58198" translate="yes" xml:space="preserve">
          <source>You can create a flat xml dataset instance from within your Database TestCase by calling the &lt;code&gt;createFlatXmlDataSet($filename)&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;createFlatXmlDataSet($filename)&lt;/code&gt; メソッドを呼び出すことにより、データベースのテストケース内からフラットなxmlデータセットインスタンスを作成できます。</target>
        </trans-unit>
        <trans-unit id="fd55e47e6f5448be88daf55231adfb811342e4b6" translate="yes" xml:space="preserve">
          <source>You can create a xml dataset instance from within your Database TestCase by calling the &lt;code&gt;createXmlDataSet($filename)&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;createXmlDataSet($filename)&lt;/code&gt; メソッドを呼び出すことにより、データベーステストケース内からxmlデータセットインスタンスを作成できます。</target>
        </trans-unit>
        <trans-unit id="ef1fd4cb18bb341f1f611051d4eb5390bf51f2e1" translate="yes" xml:space="preserve">
          <source>You can either create a dataset for the complete database as shown in &lt;code&gt;testGuestbook()&lt;/code&gt;, or restrict it to a set of specified table names with a whitelist as shown in &lt;code&gt;testFilteredGuestbook()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;testGuestbook()&lt;/code&gt; に示すように完全なデータベースのデータセットを作成するか、または &lt;code&gt;testFilteredGuestbook()&lt;/code&gt; メソッドに示すように、ホワイトリストを使用して特定のテーブル名のセットに制限することができます。</target>
        </trans-unit>
        <trans-unit id="9f7cc1a377c1b4d060eaa2721f4972418ff9fe7b" translate="yes" xml:space="preserve">
          <source>You can hold your impulse in check by doing the following:</source>
          <target state="translated">以下のようなことをすることで、衝動を抑えることができます。</target>
        </trans-unit>
        <trans-unit id="439557ef6ce462ccc9abe19f1c0c6834640046d2" translate="yes" xml:space="preserve">
          <source>You can make use of this by specifying arbitrary queries for your tables, for example restricting rows, column or adding &lt;code&gt;ORDER BY&lt;/code&gt; clauses:</source>
          <target state="translated">これを利用するには、テーブルに任意のクエリを指定します。たとえば、行、列を制限したり、 &lt;code&gt;ORDER BY&lt;/code&gt; 句を追加したりします。</target>
        </trans-unit>
        <trans-unit id="59729c99eefa0308f0c82103df85c243c42ab048" translate="yes" xml:space="preserve">
          <source>You can provide a blacklist of static attributes that are to be excluded from the backup and restore operations:</source>
          <target state="translated">バックアップおよびリストア操作から除外する静的属性のブラックリストを提供することができます。</target>
        </trans-unit>
        <trans-unit id="de4b4b57427e5069699966292b3014e4372410af" translate="yes" xml:space="preserve">
          <source>You can provide a list of static attributes that are to be excluded from the backup and restore operations:</source>
          <target state="translated">バックアップおよびリストア操作から除外する静的属性のリストを提供できます。</target>
        </trans-unit>
        <trans-unit id="237329f4706c8047eb918f75173ecc73be0f89a9" translate="yes" xml:space="preserve">
          <source>You can use a &lt;em&gt;mock object&lt;/em&gt; &quot;as an observation point that is used to verify the indirect outputs of the SUT as it is exercised. Typically, the mock object also includes the functionality of a test stub in that it must return values to the SUT if it hasn't already failed the tests but the emphasis is on the verification of the indirect outputs. Therefore, a mock object is a lot more than just a test stub plus assertions; it is used in a fundamentally different way&quot; (Gerard Meszaros).</source>
          <target state="translated">&lt;em&gt;モックオブジェクトは、&lt;/em&gt;「実行時にSUTの間接出力を検証するために使用される観測ポイントとして使用できます。通常、モックオブジェクトには、テストスタブの機能も含まれています。テストはまだ失敗していませんが、間接出力の検証に重点が置かれています。したがって、モックオブジェクトは、単なるテストスタブとアサーションではなく、根本的に異なる方法で使用されます」（Gerard Meszaros） 。</target>
        </trans-unit>
        <trans-unit id="a61a26f12d83e654acacf2ed7ee86102b44c0752" translate="yes" xml:space="preserve">
          <source>You can use a &lt;em&gt;mock object&lt;/em&gt; &amp;ldquo;as an observation point that is used to verify the indirect outputs of the SUT as it is exercised. Typically, the mock object also includes the functionality of a test stub in that it must return values to the SUT if it hasn&amp;rsquo;t already failed the tests but the emphasis is on the verification of the indirect outputs. Therefore, a mock object is a lot more than just a test stub plus assertions; it is used in a fundamentally different way&amp;rdquo; (Gerard Meszaros).</source>
          <target state="translated">&lt;em&gt;モックオブジェクト&lt;/em&gt;は、実行時にSUTの間接出力を検証するために使用される観測ポイントとして使用できます。通常、モックオブジェクトには、テストにまだ失敗していない場合にSUTに値を返す必要があるという点で、テストスタブの機能も含まれていますが、間接出力の検証に重点が置かれています。したがって、モックオブジェクトは単なるテストスタブとアサーション以上のものです。根本的に異なる方法で使用されています」（GerardMeszaros）。</target>
        </trans-unit>
        <trans-unit id="83a9f9b403d591a5b39991a8cb2753b779d55e93" translate="yes" xml:space="preserve">
          <source>You can use the Database (DB) DataSet from the Connection and compare it to a File-Based DataSet.</source>
          <target state="translated">接続からデータベース(DB)のデータセットを利用して、ファイルベースのデータセットと比較することができます。</target>
        </trans-unit>
        <trans-unit id="5b6ad16fdeaf557b757b56ce17b64851641f61d7" translate="yes" xml:space="preserve">
          <source>You can wrap test cases or test suites in a subclass of &lt;code&gt;PHPUnit_Extensions_TestDecorator&lt;/code&gt; and use the Decorator design pattern to perform some actions before and after the test runs.</source>
          <target state="translated">テストケースまたはテストスイートを &lt;code&gt;PHPUnit_Extensions_TestDecorator&lt;/code&gt; のサブクラスにラップし、Decoratorデザインパターンを使用して、テスト実行の前後にいくつかのアクションを実行できます。</target>
        </trans-unit>
        <trans-unit id="a2b411f985dfd24d4d5a43b3e5fafa146531086a" translate="yes" xml:space="preserve">
          <source>You do not want to modify considerable amount of test code for little changes in your production code.</source>
          <target state="translated">本番用コードのわずかな変更のために、かなりの量のテストコードを変更したくはありません。</target>
        </trans-unit>
        <trans-unit id="a1166c18cc123a82d7f724936aa93187490a0ef4" translate="yes" xml:space="preserve">
          <source>You may also use the downloaded PHAR file directly:</source>
          <target state="translated">ダウンロードしたpharファイルを直接使用することもできます。</target>
        </trans-unit>
        <trans-unit id="28ee9de3287ccffd61d361237d08e22eb63cecfc" translate="yes" xml:space="preserve">
          <source>You need to setup test data in (possibly much) more than two tables to get reasonable initial data for the methods you want to test.</source>
          <target state="translated">テストしたいメソッドの妥当な初期データを取得するためには、2つ以上のテーブルにテストデータを設定する必要があります(おそらく多くの場合)。</target>
        </trans-unit>
        <trans-unit id="605def75161cce7a74547ef770e763d8f697e38f" translate="yes" xml:space="preserve">
          <source>You probably know this scenario from your daily work and projects, where you want to put your fresh or experienced PHPUnit skills to work and get stuck by one of the following problems:</source>
          <target state="translated">日々の仕事やプロジェクトの中で、経験の浅い、あるいは経験豊富な PHPUnit のスキルを活かそうと思っても、次のような問題に行き詰ってしまう、というシナリオをご存知でしょう。</target>
        </trans-unit>
        <trans-unit id="f371634166190eaf82bc041670a87fc6a2dcb00a" translate="yes" xml:space="preserve">
          <source>You should be as specific as possible when testing exceptions. Testing for classes that are too generic might lead to undesirable side-effects. Accordingly, testing for the &lt;code&gt;Exception&lt;/code&gt; class with &lt;code&gt;@expectedException&lt;/code&gt; or &lt;code&gt;setExpectedException()&lt;/code&gt; is no longer permitted.</source>
          <target state="translated">例外をテストするときは、できるだけ具体的にする必要があります。一般的すぎるクラスをテストすると、望ましくない副作用が発生する可能性があります。したがって、 &lt;code&gt;@expectedException&lt;/code&gt; または &lt;code&gt;setExpectedException()&lt;/code&gt; を使用した &lt;code&gt;Exception&lt;/code&gt; クラスのテストは許可されなくなりました。</target>
        </trans-unit>
        <trans-unit id="d2b376e5a6c1ec649252349f9914ce87243a3529" translate="yes" xml:space="preserve">
          <source>You want to be able to read and understand the test code easily, even months after writing it.</source>
          <target state="translated">テストコードを書いてから数ヶ月経っても、簡単に読んで理解できるようになりたいですよね。</target>
        </trans-unit>
        <trans-unit id="f1b013c701ed496ba56f01c975e4081827666f70" translate="yes" xml:space="preserve">
          <source>You won't need additional files for assertions and can specify them directly in the TestCase.</source>
          <target state="translated">アサーション用の追加ファイルは不要で、TestCase で直接指定することができます。</target>
        </trans-unit>
        <trans-unit id="3ede8d917a46c3eb5e5fb6e455b4243b4b94f73d" translate="yes" xml:space="preserve">
          <source>Your business logic performs a mix of SELECT, INSERT, UPDATE and DELETE statements.</source>
          <target state="translated">ビジネスロジックは、SELECT、INSERT、UPDATE、DELETE ステートメントを組み合わせて実行します。</target>
        </trans-unit>
        <trans-unit id="e408787b79a3308258aca3560fbc83d290773a29" translate="yes" xml:space="preserve">
          <source>and &lt;em&gt;fixture2.xml&lt;/em&gt;:</source>
          <target state="translated">そして&lt;em&gt;fixture2.xml&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="a78da1b13adfdedef3f1bdb6aaf4c3e389aad03b" translate="yes" xml:space="preserve">
          <source>assertArrayHasKey()</source>
          <target state="translated">assertArrayHasKey()</target>
        </trans-unit>
        <trans-unit id="2953b43f13241d2e3cd276715de3bff946c20d30" translate="yes" xml:space="preserve">
          <source>assertArraySubset()</source>
          <target state="translated">assertArraySubset()</target>
        </trans-unit>
        <trans-unit id="a0c879edb53ee997bd7d82bd1fbc196e632b95d9" translate="yes" xml:space="preserve">
          <source>assertClassHasAttribute()</source>
          <target state="translated">assertClassHasAttribute()</target>
        </trans-unit>
        <trans-unit id="3c2ab1335fd5a18000ffe25079ed36c51847dd61" translate="yes" xml:space="preserve">
          <source>assertClassHasStaticAttribute()</source>
          <target state="translated">assertClassHasStaticAttribute()</target>
        </trans-unit>
        <trans-unit id="d4d83fecf7ab236a0a17aac75ff7f4dd28930221" translate="yes" xml:space="preserve">
          <source>assertContains()</source>
          <target state="translated">assertContains()</target>
        </trans-unit>
        <trans-unit id="688e3b55f1e31b0801c63033e34994afe7d59380" translate="yes" xml:space="preserve">
          <source>assertContainsOnly()</source>
          <target state="translated">assertContainsOnly()</target>
        </trans-unit>
        <trans-unit id="0c8af844c8fccefb6537fe00845eeea118bbd356" translate="yes" xml:space="preserve">
          <source>assertContainsOnlyInstancesOf()</source>
          <target state="translated">assertContainsOnlyInstancesOf()</target>
        </trans-unit>
        <trans-unit id="961c3e8662def888f4511a97c4f41e3757d19e7f" translate="yes" xml:space="preserve">
          <source>assertCount()</source>
          <target state="translated">assertCount()</target>
        </trans-unit>
        <trans-unit id="96ceb5ab03b2a734958bb1dd795383194a3d95c2" translate="yes" xml:space="preserve">
          <source>assertDirectoryExists()</source>
          <target state="translated">assertDirectoryExists()</target>
        </trans-unit>
        <trans-unit id="4544c145eddcc1b4575bb4cdd70a13848be84f70" translate="yes" xml:space="preserve">
          <source>assertDirectoryIsReadable()</source>
          <target state="translated">assertDirectoryIsReadable()</target>
        </trans-unit>
        <trans-unit id="34a0a31ad30c150a9e5247abc4fb085d7367d1ca" translate="yes" xml:space="preserve">
          <source>assertDirectoryIsWritable()</source>
          <target state="translated">assertDirectoryIsWritable()</target>
        </trans-unit>
        <trans-unit id="174d89589791a9491723378104e29bf46c03dbf6" translate="yes" xml:space="preserve">
          <source>assertEmpty()</source>
          <target state="translated">assertEmpty()</target>
        </trans-unit>
        <trans-unit id="9a5438a52e50bca545784cf7955c28bb2d98442c" translate="yes" xml:space="preserve">
          <source>assertEqualXMLStructure()</source>
          <target state="translated">assertEqualXMLStructure()</target>
        </trans-unit>
        <trans-unit id="23ccb551a3cdb1d2bd5c433b6c1d201359698e8e" translate="yes" xml:space="preserve">
          <source>assertEquals()</source>
          <target state="translated">assertEquals()</target>
        </trans-unit>
        <trans-unit id="600df69fe9887653817287c03ee28a315685a60d" translate="yes" xml:space="preserve">
          <source>assertEqualsCanonicalizing()</source>
          <target state="translated">assertEqualsCanonicalizing()</target>
        </trans-unit>
        <trans-unit id="b1ad940727e9e2c96290a9fc72582bbf4d32a923" translate="yes" xml:space="preserve">
          <source>assertEqualsIgnoringCase()</source>
          <target state="translated">assertEqualsIgnoringCase()</target>
        </trans-unit>
        <trans-unit id="e7e7cbd7713a68eb9c717257197532f790a3584a" translate="yes" xml:space="preserve">
          <source>assertEqualsWithDelta()</source>
          <target state="translated">assertEqualsWithDelta()</target>
        </trans-unit>
        <trans-unit id="6d46d5b6994420e250f3385039725d27ac3ecb42" translate="yes" xml:space="preserve">
          <source>assertFalse()</source>
          <target state="translated">assertFalse()</target>
        </trans-unit>
        <trans-unit id="c20b9f1a89ade2bfc6804ff44de2b0c75c7bda92" translate="yes" xml:space="preserve">
          <source>assertFileEquals()</source>
          <target state="translated">assertFileEquals()</target>
        </trans-unit>
        <trans-unit id="654f4244568f9ec544b303f3e1ed51205d669205" translate="yes" xml:space="preserve">
          <source>assertFileExists()</source>
          <target state="translated">assertFileExists()</target>
        </trans-unit>
        <trans-unit id="58bde623ebc5a2b744a207aa641050ab3fd58f8b" translate="yes" xml:space="preserve">
          <source>assertFileIsReadable()</source>
          <target state="translated">assertFileIsReadable()</target>
        </trans-unit>
        <trans-unit id="c68fa67118b75c3d4a1f0efd62378313d3113816" translate="yes" xml:space="preserve">
          <source>assertFileIsWritable()</source>
          <target state="translated">assertFileIsWritable()</target>
        </trans-unit>
        <trans-unit id="d79190d5b985d820ee4285db5373b9f6e44e3624" translate="yes" xml:space="preserve">
          <source>assertGreaterThan()</source>
          <target state="translated">assertGreaterThan()</target>
        </trans-unit>
        <trans-unit id="d30c28860338bc110c65a0e74fbe208c835a5543" translate="yes" xml:space="preserve">
          <source>assertGreaterThanOrEqual()</source>
          <target state="translated">assertGreaterThanOrEqual()</target>
        </trans-unit>
        <trans-unit id="bcafb217fb4f91be35bb7855a99c304df46f0415" translate="yes" xml:space="preserve">
          <source>assertInfinite()</source>
          <target state="translated">assertInfinite()</target>
        </trans-unit>
        <trans-unit id="f29777c90474ee551ac8002f589576c2d13ed4ff" translate="yes" xml:space="preserve">
          <source>assertInstanceOf()</source>
          <target state="translated">assertInstanceOf()</target>
        </trans-unit>
        <trans-unit id="a14e8e87a44fab357571956b107842d15cc9cd43" translate="yes" xml:space="preserve">
          <source>assertInternalType()</source>
          <target state="translated">assertInternalType()</target>
        </trans-unit>
        <trans-unit id="13efdadd2c21ab219598c54a71edb9736540a9da" translate="yes" xml:space="preserve">
          <source>assertIsArray()</source>
          <target state="translated">assertIsArray()</target>
        </trans-unit>
        <trans-unit id="9e4c133121a823092c56cc92d4e0e712b12a0b6f" translate="yes" xml:space="preserve">
          <source>assertIsBool()</source>
          <target state="translated">assertIsBool()</target>
        </trans-unit>
        <trans-unit id="e5c32b8a4719c61a8a557530e5312afdaf3f3c8f" translate="yes" xml:space="preserve">
          <source>assertIsCallable()</source>
          <target state="translated">assertIsCallable()</target>
        </trans-unit>
        <trans-unit id="dc2d080b033494182eb8ab3449032c384a49051f" translate="yes" xml:space="preserve">
          <source>assertIsFloat()</source>
          <target state="translated">assertIsFloat()</target>
        </trans-unit>
        <trans-unit id="3b9636a390f35c7fca2e571f75495bcbe8b2470d" translate="yes" xml:space="preserve">
          <source>assertIsInt()</source>
          <target state="translated">assertIsInt()</target>
        </trans-unit>
        <trans-unit id="cc72dec3b44eab45f3340c22565eb7367c0fd22e" translate="yes" xml:space="preserve">
          <source>assertIsIterable()</source>
          <target state="translated">assertIsIterable()</target>
        </trans-unit>
        <trans-unit id="0676ec6603f27e6d764c5a1d32189b2b1d50d613" translate="yes" xml:space="preserve">
          <source>assertIsNumeric()</source>
          <target state="translated">assertIsNumeric()</target>
        </trans-unit>
        <trans-unit id="8eb23e5e11a63375b290f9568d0ef8ec8d86ba95" translate="yes" xml:space="preserve">
          <source>assertIsObject()</source>
          <target state="translated">assertIsObject()</target>
        </trans-unit>
        <trans-unit id="ed60d782ca77fcdf5ecb50a50a6b12b4aa21c26b" translate="yes" xml:space="preserve">
          <source>assertIsReadable()</source>
          <target state="translated">assertIsReadable()</target>
        </trans-unit>
        <trans-unit id="51a76d84b5fa1668defbdf5b955f358fcd253009" translate="yes" xml:space="preserve">
          <source>assertIsResource()</source>
          <target state="translated">assertIsResource()</target>
        </trans-unit>
        <trans-unit id="5bf4d1ae57280fa642f0f1ed6de04dc36da95c77" translate="yes" xml:space="preserve">
          <source>assertIsScalar()</source>
          <target state="translated">assertIsScalar()</target>
        </trans-unit>
        <trans-unit id="420eb7b3e9bb613fca71c1b1884e343514f55280" translate="yes" xml:space="preserve">
          <source>assertIsString()</source>
          <target state="translated">assertIsString()</target>
        </trans-unit>
        <trans-unit id="7c70571c21b9c255b3b874ab2c70cb977bcc167c" translate="yes" xml:space="preserve">
          <source>assertIsWritable()</source>
          <target state="translated">assertIsWritable()</target>
        </trans-unit>
        <trans-unit id="fbe7df4f678c83d5efbdf61919cd943803f139f8" translate="yes" xml:space="preserve">
          <source>assertJsonFileEqualsJsonFile()</source>
          <target state="translated">assertJsonFileEqualsJsonFile()</target>
        </trans-unit>
        <trans-unit id="28dbfdff7f46a430978277b473d19ebc0ab18a8a" translate="yes" xml:space="preserve">
          <source>assertJsonStringEqualsJsonFile()</source>
          <target state="translated">assertJsonStringEqualsJsonFile()</target>
        </trans-unit>
        <trans-unit id="b0bf6fda1b66a2c05bd5b4a85fae7a0da44ceef6" translate="yes" xml:space="preserve">
          <source>assertJsonStringEqualsJsonString()</source>
          <target state="translated">assertJsonStringEqualsJsonString()</target>
        </trans-unit>
        <trans-unit id="5ed936b15a579166dd241321758f48de026405b8" translate="yes" xml:space="preserve">
          <source>assertLessThan()</source>
          <target state="translated">assertLessThan()</target>
        </trans-unit>
        <trans-unit id="2ff7c6828a81e20d73b86a95f2bfad68c64eb0b9" translate="yes" xml:space="preserve">
          <source>assertLessThanOrEqual()</source>
          <target state="translated">assertLessThanOrEqual()</target>
        </trans-unit>
        <trans-unit id="c0150e0aff91ba0c8807933a4913644867922b4d" translate="yes" xml:space="preserve">
          <source>assertMatchesRegularExpression()</source>
          <target state="translated">assertMatchesRegularExpression()</target>
        </trans-unit>
        <trans-unit id="cb8ff9ef384b09e12546f6577d926fbe708457a9" translate="yes" xml:space="preserve">
          <source>assertNan()</source>
          <target state="translated">assertNan()</target>
        </trans-unit>
        <trans-unit id="e7bcdbce6f11f87ce1c9b5e0f80ae2686479b45b" translate="yes" xml:space="preserve">
          <source>assertNull()</source>
          <target state="translated">assertNull()</target>
        </trans-unit>
        <trans-unit id="c6c85c03b6737567a2c4d04864825269066ebcaf" translate="yes" xml:space="preserve">
          <source>assertObjectEquals()</source>
          <target state="translated">assertObjectEquals()</target>
        </trans-unit>
        <trans-unit id="daa66dd44d78be88c535a424c886e05f83dfe921" translate="yes" xml:space="preserve">
          <source>assertObjectHasAttribute()</source>
          <target state="translated">assertObjectHasAttribute()</target>
        </trans-unit>
        <trans-unit id="49b69a515c563526ed56083eeaa0b3f5a35dd459" translate="yes" xml:space="preserve">
          <source>assertRegExp()</source>
          <target state="translated">assertRegExp()</target>
        </trans-unit>
        <trans-unit id="df4b41e034cb3fb9cbfb8c7d0282908291bb7729" translate="yes" xml:space="preserve">
          <source>assertSame()</source>
          <target state="translated">assertSame()</target>
        </trans-unit>
        <trans-unit id="78b91739a4a6c915031caa530eef98d9c8bf0940" translate="yes" xml:space="preserve">
          <source>assertStringContainsString()</source>
          <target state="translated">assertStringContainsString()</target>
        </trans-unit>
        <trans-unit id="f4f93e50838af7ba847fbe316c1a5a63441ac363" translate="yes" xml:space="preserve">
          <source>assertStringContainsStringIgnoringCase()</source>
          <target state="translated">assertStringContainsStringIgnoringCase()</target>
        </trans-unit>
        <trans-unit id="5ab4e871ad3cb768ca57420fcff36afc7846db53" translate="yes" xml:space="preserve">
          <source>assertStringEndsWith()</source>
          <target state="translated">assertStringEndsWith()</target>
        </trans-unit>
        <trans-unit id="722ed30f2b6991c0dde3b61a96aaf9a77a963f4b" translate="yes" xml:space="preserve">
          <source>assertStringEqualsFile()</source>
          <target state="translated">assertStringEqualsFile()</target>
        </trans-unit>
        <trans-unit id="d4d11de435f688fc4a15c4086b65541c8ff9576d" translate="yes" xml:space="preserve">
          <source>assertStringMatchesFormat()</source>
          <target state="translated">assertStringMatchesFormat()</target>
        </trans-unit>
        <trans-unit id="ed2b8fe213436da04bb2ec4123a90169f1cb278f" translate="yes" xml:space="preserve">
          <source>assertStringMatchesFormatFile()</source>
          <target state="translated">assertStringMatchesFormatFile()</target>
        </trans-unit>
        <trans-unit id="1cb66de67f876bdbe76e70cce0c9221219d00043" translate="yes" xml:space="preserve">
          <source>assertStringStartsWith()</source>
          <target state="translated">assertStringStartsWith()</target>
        </trans-unit>
        <trans-unit id="040de4ae88cba81c3d3a61b56e2d5a8a6cd4214b" translate="yes" xml:space="preserve">
          <source>assertThat()</source>
          <target state="translated">assertThat()</target>
        </trans-unit>
        <trans-unit id="a1fe128ba75fa817bbdd95449b30363cc8d8e330" translate="yes" xml:space="preserve">
          <source>assertTrue()</source>
          <target state="translated">assertTrue()</target>
        </trans-unit>
        <trans-unit id="16e7c06470e678ce6643bcc65a4a7f292000a02e" translate="yes" xml:space="preserve">
          <source>assertXmlFileEqualsXmlFile()</source>
          <target state="translated">assertXmlFileEqualsXmlFile()</target>
        </trans-unit>
        <trans-unit id="26d75addf4ae3317e3f0ab65664753edab70a8a1" translate="yes" xml:space="preserve">
          <source>assertXmlStringEqualsXmlFile()</source>
          <target state="translated">assertXmlStringEqualsXmlFile()</target>
        </trans-unit>
        <trans-unit id="145b4f7f69ec5df4adba1328742fb5f422e41906" translate="yes" xml:space="preserve">
          <source>assertXmlStringEqualsXmlString()</source>
          <target state="translated">assertXmlStringEqualsXmlString()</target>
        </trans-unit>
        <trans-unit id="978d00dde011c95df5d89a506062e2a7562fb626" translate="yes" xml:space="preserve">
          <source>convertErrorsToExceptions</source>
          <target state="translated">convertErrorsToExceptions</target>
        </trans-unit>
        <trans-unit id="af6864cd9015ff0e9aacd657c2fa2eb4827b59d3" translate="yes" xml:space="preserve">
          <source>convertNoticesToExceptions</source>
          <target state="translated">convertNoticesToExceptions</target>
        </trans-unit>
        <trans-unit id="2429b52a4818bb6fa6ba35442ed1d755d37476b0" translate="yes" xml:space="preserve">
          <source>convertWarningsToExceptions</source>
          <target state="translated">convertWarningsToExceptions</target>
        </trans-unit>
        <trans-unit id="5c1fbc1be607e4191f388fde6043defa3dd9c4db" translate="yes" xml:space="preserve">
          <source>forceCoversAnnotation</source>
          <target state="translated">forceCoversAnnotation</target>
        </trans-unit>
        <trans-unit id="3c1c518262f2ecc3844375807272f6051c4e067a" translate="yes" xml:space="preserve">
          <source>phpunit UnitTest</source>
          <target state="translated">phpunit ユニットテスト</target>
        </trans-unit>
        <trans-unit id="b6dbd075e0264852bf66054810ba76350adbae6f" translate="yes" xml:space="preserve">
          <source>phpunit UnitTest UnitTest.php</source>
          <target state="translated">phpunit UnitTest UnitTest.php</target>
        </trans-unit>
        <trans-unit id="3594ac45a6f4809d908a03c0802a9806d1fc1c36" translate="yes" xml:space="preserve">
          <source>timeoutForLargeTests</source>
          <target state="translated">timeoutForLargeTests</target>
        </trans-unit>
        <trans-unit id="bdc16f7d773e4b7fc038cce005d41d6c52b2345d" translate="yes" xml:space="preserve">
          <source>timeoutForMediumTests</source>
          <target state="translated">timeoutForMediumTests</target>
        </trans-unit>
        <trans-unit id="a6dca61e251aea5eb30244ab82d118c907482e6f" translate="yes" xml:space="preserve">
          <source>timeoutForSmallTests</source>
          <target state="translated">timeoutForSmallTests</target>
        </trans-unit>
        <trans-unit id="2217eb1914a9818f02f68011b30e39d73a3369b8" translate="yes" xml:space="preserve">
          <source>to keep track of the tests that you have to write. The problem with empty test methods is that they are interpreted as a success by the PHPUnit framework. This misinterpretation leads to the test reports being useless &amp;ndash; you cannot see whether a test is actually successful or just not yet implemented. Calling &lt;code&gt;$this-&amp;gt;fail()&lt;/code&gt; in the unimplemented test method does not help either, since then the test will be interpreted as a failure. This would be just as wrong as interpreting an unimplemented test as a success.</source>
          <target state="translated">あなたが書かなければならないテストを追跡するために。空のテストメソッドの問題は、PHPUnitフレームワークによって成功として解釈されることです。この誤解により、テストレポートが役に立たなくなります。テストが実際に成功したのか、まだ実装されていないのかを確認することはできません。実装されていないテストメソッドで &lt;code&gt;$this-&amp;gt;fail()&lt;/code&gt; を呼び出しても、テストは失敗として解釈されるため、役に立ちません。これは、実装されていないテストを成功として解釈するのと同じくらい間違っています。</target>
        </trans-unit>
        <trans-unit id="4ccfdd2606dd6d436bdbce99e9f436a8561c098a" translate="yes" xml:space="preserve">
          <source>to keep track of the tests that you have to write. The problem with empty test methods is that they are interpreted as a success by the PHPUnit framework. This misinterpretation leads to the test reports being useless -- you cannot see whether a test is actually successful or just not yet implemented. Calling &lt;code&gt;$this-&amp;gt;fail()&lt;/code&gt; in the unimplemented test method does not help either, since then the test will be interpreted as a failure. This would be just as wrong as interpreting an unimplemented test as a success.</source>
          <target state="translated">あなたが書かなければならないテストを追跡するため。空のテストメソッドの問題は、PHPUnitフレームワークによって成功と解釈されることです。この誤った解釈により、テストレポートは役に立たなくなります。テストが実際に成功したのか、まだ実装されていないのかはわかりません。実装されていないテストメソッドで &lt;code&gt;$this-&amp;gt;fail()&lt;/code&gt; を呼び出しても、テストは失敗と解釈されるため、効果がありません。これは、実装されていないテストを成功と解釈するのと同じくらい間違っているでしょう。</target>
        </trans-unit>
        <trans-unit id="c6ee72296d42470b3297273534b56130c2b1b8c8" translate="yes" xml:space="preserve">
          <source>vfsStream gives the test developer full control over what the filesystem environment looks like to the tested code.</source>
          <target state="translated">vfsStream は、テストされたコードがどのようなファイルシステム環境にあるかを完全に制御することができます。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
