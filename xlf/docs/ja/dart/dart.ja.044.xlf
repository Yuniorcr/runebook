<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="dart">
    <body>
      <group id="dart">
        <trans-unit id="df6989ede252d9e38c759122bdb504a4e4d469fe" translate="yes" xml:space="preserve">
          <source>HttpHeaders.ALLOW</source>
          <target state="translated">HttpHeaders.ALLOW</target>
        </trans-unit>
        <trans-unit id="d272b31adf475c9e2b3f2a7090b983cbb13f193d" translate="yes" xml:space="preserve">
          <source>HttpHeaders.AUTHORIZATION</source>
          <target state="translated">HttpHeaders.AUTHORIZATION</target>
        </trans-unit>
        <trans-unit id="e7e07d77f0ac8092d4f14ab8e46172625ae25abe" translate="yes" xml:space="preserve">
          <source>HttpHeaders.CACHE_CONTROL</source>
          <target state="translated">HttpHeaders.CACHE_CONTROL</target>
        </trans-unit>
        <trans-unit id="aa3aff3fd8f3eb4f3f3708a39213b5bc91e36299" translate="yes" xml:space="preserve">
          <source>HttpHeaders.CONNECTION</source>
          <target state="translated">HttpHeaders.CONNECTION</target>
        </trans-unit>
        <trans-unit id="6a8a0085f4da393deecc2802e1a7e189db22a895" translate="yes" xml:space="preserve">
          <source>HttpHeaders.CONTENT_ENCODING</source>
          <target state="translated">HttpHeaders.CONTENT_ENCODING</target>
        </trans-unit>
        <trans-unit id="24559d24a3398925b23cef25273c256148684507" translate="yes" xml:space="preserve">
          <source>HttpHeaders.CONTENT_LANGUAGE</source>
          <target state="translated">HttpHeaders.CONTENT_LANGUAGE</target>
        </trans-unit>
        <trans-unit id="bb08d69f3e31d05d367a4afd04608bcfa3a83c88" translate="yes" xml:space="preserve">
          <source>HttpHeaders.CONTENT_LENGTH</source>
          <target state="translated">HttpHeaders.CONTENT_LENGTH</target>
        </trans-unit>
        <trans-unit id="831d9486b2f93eb76a8ddb3e912389c7d9e60b9e" translate="yes" xml:space="preserve">
          <source>HttpHeaders.CONTENT_LOCATION</source>
          <target state="translated">HttpHeaders.CONTENT_LOCATION</target>
        </trans-unit>
        <trans-unit id="f42f638313e6e0d8ac0c08676902baf145577c43" translate="yes" xml:space="preserve">
          <source>HttpHeaders.CONTENT_MD5</source>
          <target state="translated">HttpHeaders.CONTENT_MD5</target>
        </trans-unit>
        <trans-unit id="6a7070c175d2d7283244251dfae19e4c1847ffdc" translate="yes" xml:space="preserve">
          <source>HttpHeaders.CONTENT_RANGE</source>
          <target state="translated">HttpHeaders.CONTENT_RANGE</target>
        </trans-unit>
        <trans-unit id="78e888915732027ec170ddcce640f3d345d20050" translate="yes" xml:space="preserve">
          <source>HttpHeaders.CONTENT_TYPE</source>
          <target state="translated">HttpHeaders.CONTENT_TYPE</target>
        </trans-unit>
        <trans-unit id="56f24d12d9b3cf6a3486882e12850d15d39b1783" translate="yes" xml:space="preserve">
          <source>HttpHeaders.COOKIE</source>
          <target state="translated">HttpHeaders.COOKIE</target>
        </trans-unit>
        <trans-unit id="42d7f388896da897c88680161f4f5d3bc47c0097" translate="yes" xml:space="preserve">
          <source>HttpHeaders.DATE</source>
          <target state="translated">HttpHeaders.DATE</target>
        </trans-unit>
        <trans-unit id="d57ad1422cfb001c17115ed0369f14a41f7c7879" translate="yes" xml:space="preserve">
          <source>HttpHeaders.ENTITY_HEADERS</source>
          <target state="translated">HttpHeaders.ENTITY_HEADERS</target>
        </trans-unit>
        <trans-unit id="431ea6f41661a1e3d7c44058a14f9dd1a5a76d46" translate="yes" xml:space="preserve">
          <source>HttpHeaders.ETAG</source>
          <target state="translated">HttpHeaders.ETAG</target>
        </trans-unit>
        <trans-unit id="e4b7ff8ff8cc04d102e8988460db9fabe45d0446" translate="yes" xml:space="preserve">
          <source>HttpHeaders.EXPECT</source>
          <target state="translated">HttpHeaders.EXPECT</target>
        </trans-unit>
        <trans-unit id="b60706ceffc3a5b2e87d83a1477ef4d60c15a902" translate="yes" xml:space="preserve">
          <source>HttpHeaders.EXPIRES</source>
          <target state="translated">HttpHeaders.EXPIRES</target>
        </trans-unit>
        <trans-unit id="810f0ac7db313f3a2df1cf8016c104fcec6b8bfb" translate="yes" xml:space="preserve">
          <source>HttpHeaders.FROM</source>
          <target state="translated">HttpHeaders.FROM</target>
        </trans-unit>
        <trans-unit id="66c6fc1bd0e6c900709f83c032d0b91389662ef2" translate="yes" xml:space="preserve">
          <source>HttpHeaders.GENERAL_HEADERS</source>
          <target state="translated">HttpHeaders.GENERAL_HEADERS</target>
        </trans-unit>
        <trans-unit id="5a08449bed96cf6668241929f7c797763c7be25b" translate="yes" xml:space="preserve">
          <source>HttpHeaders.HOST</source>
          <target state="translated">HttpHeaders.HOST</target>
        </trans-unit>
        <trans-unit id="6bee199efc015a5ef6601019e9cc24e1872bea35" translate="yes" xml:space="preserve">
          <source>HttpHeaders.HttpHeaders</source>
          <target state="translated">HttpHeaders.HttpHeaders</target>
        </trans-unit>
        <trans-unit id="ab355042e5bd0d2e97974849a5a2b6a428da6dc7" translate="yes" xml:space="preserve">
          <source>HttpHeaders.IF_MATCH</source>
          <target state="translated">HttpHeaders.IF_MATCH</target>
        </trans-unit>
        <trans-unit id="fe0241010b3c77eb623ac0b6946f425e87b4f44a" translate="yes" xml:space="preserve">
          <source>HttpHeaders.IF_MODIFIED_SINCE</source>
          <target state="translated">HttpHeaders.IF_MODIFIED_SINCE</target>
        </trans-unit>
        <trans-unit id="9de224a0fe01cac3efd3ab167a0330a79aaa7b1b" translate="yes" xml:space="preserve">
          <source>HttpHeaders.IF_NONE_MATCH</source>
          <target state="translated">HttpHeaders.IF_NONE_MATCH</target>
        </trans-unit>
        <trans-unit id="eded235e448cd54b8e8ab4294a1058f7c9c3501b" translate="yes" xml:space="preserve">
          <source>HttpHeaders.IF_RANGE</source>
          <target state="translated">HttpHeaders.IF_RANGE</target>
        </trans-unit>
        <trans-unit id="385e884c833fb496cb8c31d5e1b415d7c07dfde3" translate="yes" xml:space="preserve">
          <source>HttpHeaders.IF_UNMODIFIED_SINCE</source>
          <target state="translated">HttpHeaders.IF_UNMODIFIED_SINCE</target>
        </trans-unit>
        <trans-unit id="54cdfa2ffaa5c48bed493466d83d988a69a4eb36" translate="yes" xml:space="preserve">
          <source>HttpHeaders.LAST_MODIFIED</source>
          <target state="translated">HttpHeaders.LAST_MODIFIED</target>
        </trans-unit>
        <trans-unit id="185a5ae677a78a07281f682c58486620fa82a8c3" translate="yes" xml:space="preserve">
          <source>HttpHeaders.LOCATION</source>
          <target state="translated">HttpHeaders.LOCATION</target>
        </trans-unit>
        <trans-unit id="2e06a1c11c54797c0d18486a11e416640a2df9fe" translate="yes" xml:space="preserve">
          <source>HttpHeaders.MAX_FORWARDS</source>
          <target state="translated">HttpHeaders.MAX_FORWARDS</target>
        </trans-unit>
        <trans-unit id="43ae6d506b80240a89633cd6ff24412f105130e7" translate="yes" xml:space="preserve">
          <source>HttpHeaders.PRAGMA</source>
          <target state="translated">HttpHeaders.PRAGMA</target>
        </trans-unit>
        <trans-unit id="2a1d5bfe83905ce7d0ecf031d5bd06a09c9a3539" translate="yes" xml:space="preserve">
          <source>HttpHeaders.PROXY_AUTHENTICATE</source>
          <target state="translated">HttpHeaders.PROXY_AUTHENTICATE</target>
        </trans-unit>
        <trans-unit id="b86ad6579e44a5ac922189b951488638153d74a7" translate="yes" xml:space="preserve">
          <source>HttpHeaders.PROXY_AUTHORIZATION</source>
          <target state="translated">HttpHeaders.PROXY_AUTHORIZATION</target>
        </trans-unit>
        <trans-unit id="8dc420f48179f484c848db7311f6e392f2001912" translate="yes" xml:space="preserve">
          <source>HttpHeaders.RANGE</source>
          <target state="translated">HttpHeaders.RANGE</target>
        </trans-unit>
        <trans-unit id="9a46bc4c87fe96239e721ce07833baf4221aa86c" translate="yes" xml:space="preserve">
          <source>HttpHeaders.REFERER</source>
          <target state="translated">HttpHeaders.REFERER</target>
        </trans-unit>
        <trans-unit id="12198242b9eaaec299d29a71da4816bb82969399" translate="yes" xml:space="preserve">
          <source>HttpHeaders.REQUEST_HEADERS</source>
          <target state="translated">HttpHeaders.REQUEST_HEADERS</target>
        </trans-unit>
        <trans-unit id="ce2175559c681acf36323b2e59bdea54e4989ea6" translate="yes" xml:space="preserve">
          <source>HttpHeaders.RESPONSE_HEADERS</source>
          <target state="translated">HttpHeaders.RESPONSE_HEADERS</target>
        </trans-unit>
        <trans-unit id="1691bcd9b61894b4a90af4853cfab6bd0b976fe7" translate="yes" xml:space="preserve">
          <source>HttpHeaders.RETRY_AFTER</source>
          <target state="translated">HttpHeaders.RETRY_AFTER</target>
        </trans-unit>
        <trans-unit id="9b6ff15e8f4bfe38d29d9b9f4f485f5d0a8390bb" translate="yes" xml:space="preserve">
          <source>HttpHeaders.SERVER</source>
          <target state="translated">HttpHeaders.SERVER</target>
        </trans-unit>
        <trans-unit id="4626807d3d58b924c3ec07abbb1d065b6dca9ffe" translate="yes" xml:space="preserve">
          <source>HttpHeaders.SET_COOKIE</source>
          <target state="translated">HttpHeaders.SET_COOKIE</target>
        </trans-unit>
        <trans-unit id="d390b25c6ee2b8ad0d67286915d6c31e6211499f" translate="yes" xml:space="preserve">
          <source>HttpHeaders.TE</source>
          <target state="translated">HttpHeaders.TE</target>
        </trans-unit>
        <trans-unit id="8a9769cbf86da605de5e44bd6239828717e6c66e" translate="yes" xml:space="preserve">
          <source>HttpHeaders.TRAILER</source>
          <target state="translated">HttpHeaders.TRAILER</target>
        </trans-unit>
        <trans-unit id="7afa53aacf10949f5c5b6ff062ffc11805fc1390" translate="yes" xml:space="preserve">
          <source>HttpHeaders.TRANSFER_ENCODING</source>
          <target state="translated">HttpHeaders.TRANSFER_ENCODING</target>
        </trans-unit>
        <trans-unit id="3608a5ca5ca9314f1fee500760864da315f12b6f" translate="yes" xml:space="preserve">
          <source>HttpHeaders.UPGRADE</source>
          <target state="translated">HttpHeaders.UPGRADE</target>
        </trans-unit>
        <trans-unit id="72381d529e13b5912b0c290b47307868a9deb298" translate="yes" xml:space="preserve">
          <source>HttpHeaders.USER_AGENT</source>
          <target state="translated">HttpHeaders.USER_AGENT</target>
        </trans-unit>
        <trans-unit id="e032302cfeacea1e5c471845b6465b2e508081f7" translate="yes" xml:space="preserve">
          <source>HttpHeaders.VARY</source>
          <target state="translated">HttpHeaders.VARY</target>
        </trans-unit>
        <trans-unit id="bc46dfe3ba908c77b2a98dada8bd0c6e0a1bbebf" translate="yes" xml:space="preserve">
          <source>HttpHeaders.VIA</source>
          <target state="translated">HttpHeaders.VIA</target>
        </trans-unit>
        <trans-unit id="36d3e7b87bd6e36e8a430afeb80fe64e006f8fd3" translate="yes" xml:space="preserve">
          <source>HttpHeaders.WARNING</source>
          <target state="translated">HttpHeaders.WARNING</target>
        </trans-unit>
        <trans-unit id="40f449eaf60b355b5a5e6d38831ca281d69a3091" translate="yes" xml:space="preserve">
          <source>HttpHeaders.WWW_AUTHENTICATE</source>
          <target state="translated">HttpHeaders.WWW_AUTHENTICATE</target>
        </trans-unit>
        <trans-unit id="a649b4c4d3156f4330cc254ff7b34e8174bcf8a8" translate="yes" xml:space="preserve">
          <source>HttpHeaders.acceptCharsetHeader</source>
          <target state="translated">HttpHeaders.acceptCharsetHeader</target>
        </trans-unit>
        <trans-unit id="c0abbb5978e28cf8aaf8fe7dfcaf259785a17761" translate="yes" xml:space="preserve">
          <source>HttpHeaders.acceptEncodingHeader</source>
          <target state="translated">HttpHeaders.acceptEncodingHeader</target>
        </trans-unit>
        <trans-unit id="5979ed6a81c843b1c14a0dc63f92e472ed83d28c" translate="yes" xml:space="preserve">
          <source>HttpHeaders.acceptHeader</source>
          <target state="translated">HttpHeaders.acceptHeader</target>
        </trans-unit>
        <trans-unit id="4e905d714355e37d6ebb31b046bc5a284ed7797d" translate="yes" xml:space="preserve">
          <source>HttpHeaders.acceptLanguageHeader</source>
          <target state="translated">HttpHeaders.acceptLanguageHeader</target>
        </trans-unit>
        <trans-unit id="71c8cd70dd7eb0ee08e6c2ff6dc0f7297a293ff9" translate="yes" xml:space="preserve">
          <source>HttpHeaders.acceptRangesHeader</source>
          <target state="translated">HttpHeaders.acceptRangesHeader</target>
        </trans-unit>
        <trans-unit id="2f81bacb327295e194bed190c519546321edb543" translate="yes" xml:space="preserve">
          <source>HttpHeaders.add</source>
          <target state="translated">HttpHeaders.add</target>
        </trans-unit>
        <trans-unit id="f712c6ff14787a9a7abf68fa09941de83bb310c7" translate="yes" xml:space="preserve">
          <source>HttpHeaders.ageHeader</source>
          <target state="translated">HttpHeaders.ageHeader</target>
        </trans-unit>
        <trans-unit id="6043d63fe3606ce604468d242b82d6e0619be152" translate="yes" xml:space="preserve">
          <source>HttpHeaders.allowHeader</source>
          <target state="translated">HttpHeaders.allowHeader</target>
        </trans-unit>
        <trans-unit id="63c3cf841f13e32e693550fd7a028cccab98df89" translate="yes" xml:space="preserve">
          <source>HttpHeaders.authorizationHeader</source>
          <target state="translated">HttpHeaders.authorizationHeader</target>
        </trans-unit>
        <trans-unit id="282c2af72e477fbafb0ac5777c4cf70395054677" translate="yes" xml:space="preserve">
          <source>HttpHeaders.cacheControlHeader</source>
          <target state="translated">HttpHeaders.cacheControlHeader</target>
        </trans-unit>
        <trans-unit id="382bf7faa2807f898540e3870c0078b5a20b6b10" translate="yes" xml:space="preserve">
          <source>HttpHeaders.chunkedTransferEncoding</source>
          <target state="translated">HttpHeaders.chunkedTransferEncoding</target>
        </trans-unit>
        <trans-unit id="f38c7df6b15ed62db2de8f69691b345817c18eae" translate="yes" xml:space="preserve">
          <source>HttpHeaders.clear</source>
          <target state="translated">HttpHeaders.clear</target>
        </trans-unit>
        <trans-unit id="620823b83461d24c77f929862c639add75fd5b34" translate="yes" xml:space="preserve">
          <source>HttpHeaders.connectionHeader</source>
          <target state="translated">HttpHeaders.connectionHeader</target>
        </trans-unit>
        <trans-unit id="a948928698f6702265a3762ad47abe75993f056a" translate="yes" xml:space="preserve">
          <source>HttpHeaders.contentEncodingHeader</source>
          <target state="translated">HttpHeaders.contentEncodingHeader</target>
        </trans-unit>
        <trans-unit id="83c7d91e7bfc87f5c2b4aed124b4f385db01a5f9" translate="yes" xml:space="preserve">
          <source>HttpHeaders.contentLanguageHeader</source>
          <target state="translated">HttpHeaders.contentLanguageHeader</target>
        </trans-unit>
        <trans-unit id="85799f405f4670093b9777756a160919531e2fd5" translate="yes" xml:space="preserve">
          <source>HttpHeaders.contentLength</source>
          <target state="translated">HttpHeaders.contentLength</target>
        </trans-unit>
        <trans-unit id="c0d0c11830403477d21119553a35f040dcf75ae8" translate="yes" xml:space="preserve">
          <source>HttpHeaders.contentLengthHeader</source>
          <target state="translated">HttpHeaders.contentLengthHeader</target>
        </trans-unit>
        <trans-unit id="bb13b55c71ad33498cc912d193cefbca6859817f" translate="yes" xml:space="preserve">
          <source>HttpHeaders.contentLocationHeader</source>
          <target state="translated">HttpHeaders.contentLocationHeader</target>
        </trans-unit>
        <trans-unit id="4c33eb9466819405739ad6c1197bca1864ac5fd4" translate="yes" xml:space="preserve">
          <source>HttpHeaders.contentMD5Header</source>
          <target state="translated">HttpHeaders.contentMD5Header</target>
        </trans-unit>
        <trans-unit id="d6328645c37462ce55faea22d3c48ce3f358a73c" translate="yes" xml:space="preserve">
          <source>HttpHeaders.contentRangeHeader</source>
          <target state="translated">HttpHeaders.contentRangeHeader</target>
        </trans-unit>
        <trans-unit id="80a9e0d3a258f377b607dccaa64fc1f8abb79f02" translate="yes" xml:space="preserve">
          <source>HttpHeaders.contentType</source>
          <target state="translated">HttpHeaders.contentType</target>
        </trans-unit>
        <trans-unit id="a7b58984ee14682a13a2c9a56e4dd7ebad50662d" translate="yes" xml:space="preserve">
          <source>HttpHeaders.contentTypeHeader</source>
          <target state="translated">HttpHeaders.contentTypeHeader</target>
        </trans-unit>
        <trans-unit id="1638299549c830bfca4f0f2d97513386169e5497" translate="yes" xml:space="preserve">
          <source>HttpHeaders.cookieHeader</source>
          <target state="translated">HttpHeaders.cookieHeader</target>
        </trans-unit>
        <trans-unit id="9899a4a37e13cf170554322653d489242bc09f65" translate="yes" xml:space="preserve">
          <source>HttpHeaders.date</source>
          <target state="translated">HttpHeaders.date</target>
        </trans-unit>
        <trans-unit id="51e50f725e3ead35dfaa2ee5539df159cd3bfb8a" translate="yes" xml:space="preserve">
          <source>HttpHeaders.dateHeader</source>
          <target state="translated">HttpHeaders.dateHeader</target>
        </trans-unit>
        <trans-unit id="38cee3e22a572ffcbd83ef078d1f0db1d35350e5" translate="yes" xml:space="preserve">
          <source>HttpHeaders.entityHeaders</source>
          <target state="translated">HttpHeaders.entityHeaders</target>
        </trans-unit>
        <trans-unit id="6a2efd61348023a0d30f1550cf2728ef0d11a32e" translate="yes" xml:space="preserve">
          <source>HttpHeaders.etagHeader</source>
          <target state="translated">HttpHeaders.etagHeader</target>
        </trans-unit>
        <trans-unit id="74d3bf8f2fc5b7a7ab7df4ca3d8dce7652a6d164" translate="yes" xml:space="preserve">
          <source>HttpHeaders.expectHeader</source>
          <target state="translated">HttpHeaders.expectHeader</target>
        </trans-unit>
        <trans-unit id="bbb60ea269207e26c11ac37b635b71242ad763cb" translate="yes" xml:space="preserve">
          <source>HttpHeaders.expires</source>
          <target state="translated">HttpHeaders.expires</target>
        </trans-unit>
        <trans-unit id="0e9b3fdcc22033957091df0abb3abb3f75f1fb8d" translate="yes" xml:space="preserve">
          <source>HttpHeaders.expiresHeader</source>
          <target state="translated">HttpHeaders.expiresHeader</target>
        </trans-unit>
        <trans-unit id="181c1a5bd6472e79c04670cc38b5bfcdb0ed0667" translate="yes" xml:space="preserve">
          <source>HttpHeaders.forEach</source>
          <target state="translated">HttpHeaders.forEach</target>
        </trans-unit>
        <trans-unit id="66b6f6d8faf038a373e0dfde81af78f9d9cdc1a9" translate="yes" xml:space="preserve">
          <source>HttpHeaders.fromHeader</source>
          <target state="translated">HttpHeaders.fromHeader</target>
        </trans-unit>
        <trans-unit id="1491d5cf53a3ab725c886cf35e61b921d035e3b2" translate="yes" xml:space="preserve">
          <source>HttpHeaders.generalHeaders</source>
          <target state="translated">HttpHeaders.generalHeaders</target>
        </trans-unit>
        <trans-unit id="27443fcadc07aee86ec1dabe8e7c161fa0dec6ae" translate="yes" xml:space="preserve">
          <source>HttpHeaders.host</source>
          <target state="translated">HttpHeaders.host</target>
        </trans-unit>
        <trans-unit id="c0d4bc1bd3a0db9ead48361d14e64ab8ebcabb82" translate="yes" xml:space="preserve">
          <source>HttpHeaders.hostHeader</source>
          <target state="translated">HttpHeaders.hostHeader</target>
        </trans-unit>
        <trans-unit id="915d2a8d4b021b11ad4cfc087d816212133eb348" translate="yes" xml:space="preserve">
          <source>HttpHeaders.ifMatchHeader</source>
          <target state="translated">HttpHeaders.ifMatchHeader</target>
        </trans-unit>
        <trans-unit id="8b4c76c8bb7b180fba9b354bc4a510a2eecf10df" translate="yes" xml:space="preserve">
          <source>HttpHeaders.ifModifiedSince</source>
          <target state="translated">HttpHeaders.ifModifiedSince</target>
        </trans-unit>
        <trans-unit id="9fb96d417390b213a24d79c6a4cf4304abb4e0aa" translate="yes" xml:space="preserve">
          <source>HttpHeaders.ifModifiedSinceHeader</source>
          <target state="translated">HttpHeaders.ifModifiedSinceHeader</target>
        </trans-unit>
        <trans-unit id="e091b7ab93748bee99a9efec5150adeab8985400" translate="yes" xml:space="preserve">
          <source>HttpHeaders.ifNoneMatchHeader</source>
          <target state="translated">HttpHeaders.ifNoneMatchHeader</target>
        </trans-unit>
        <trans-unit id="f5996770014bade0fdeb7332da9f6a1fe2fb8b2d" translate="yes" xml:space="preserve">
          <source>HttpHeaders.ifRangeHeader</source>
          <target state="translated">HttpHeaders.ifRangeHeader</target>
        </trans-unit>
        <trans-unit id="f15274c2da0f39b5a3251a20c2e7b4a519902e25" translate="yes" xml:space="preserve">
          <source>HttpHeaders.ifUnmodifiedSinceHeader</source>
          <target state="translated">HttpHeaders.ifUnmodifiedSinceHeader</target>
        </trans-unit>
        <trans-unit id="4787b108ed642e6766a2930cbcb5bff74f64d2de" translate="yes" xml:space="preserve">
          <source>HttpHeaders.lastModifiedHeader</source>
          <target state="translated">HttpHeaders.lastModifiedHeader</target>
        </trans-unit>
        <trans-unit id="399623f290228688c9b2c126b297497db52b3d76" translate="yes" xml:space="preserve">
          <source>HttpHeaders.locationHeader</source>
          <target state="translated">HttpHeaders.locationHeader</target>
        </trans-unit>
        <trans-unit id="2bc7ec16fe35269af15931199507fa3e35001350" translate="yes" xml:space="preserve">
          <source>HttpHeaders.maxForwardsHeader</source>
          <target state="translated">HttpHeaders.maxForwardsHeader</target>
        </trans-unit>
        <trans-unit id="a9e03995997bf8a5c1a70ca0dd62f807bc99badf" translate="yes" xml:space="preserve">
          <source>HttpHeaders.noFolding</source>
          <target state="translated">HttpHeaders.noFolding</target>
        </trans-unit>
        <trans-unit id="312a05f79abb071879210f59ddf2f8404d86f1de" translate="yes" xml:space="preserve">
          <source>HttpHeaders.operator []</source>
          <target state="translated">HttpHeaders.operator []</target>
        </trans-unit>
        <trans-unit id="72ce015be3e599575cba639dc833def775ffbd49" translate="yes" xml:space="preserve">
          <source>HttpHeaders.persistentConnection</source>
          <target state="translated">HttpHeaders.persistentConnection</target>
        </trans-unit>
        <trans-unit id="25579b916866e6f1401a4bf7d9be3ed0c1b6e6cd" translate="yes" xml:space="preserve">
          <source>HttpHeaders.port</source>
          <target state="translated">HttpHeaders.port</target>
        </trans-unit>
        <trans-unit id="a54d9143fca62cf3b9e00ae46c77914ad5f531dc" translate="yes" xml:space="preserve">
          <source>HttpHeaders.pragmaHeader</source>
          <target state="translated">HttpHeaders.pragmaHeader</target>
        </trans-unit>
        <trans-unit id="400e5749245d43908b02d05018d567ff5beac1aa" translate="yes" xml:space="preserve">
          <source>HttpHeaders.proxyAuthenticateHeader</source>
          <target state="translated">HttpHeaders.proxyAuthenticateHeader</target>
        </trans-unit>
        <trans-unit id="8c273bb503a6287dc32e36dd5e27ca65158d0b2e" translate="yes" xml:space="preserve">
          <source>HttpHeaders.proxyAuthorizationHeader</source>
          <target state="translated">HttpHeaders.proxyAuthorizationHeader</target>
        </trans-unit>
        <trans-unit id="64545ef2327bf14357f1eae5c11bea2b4f1bbfa6" translate="yes" xml:space="preserve">
          <source>HttpHeaders.rangeHeader</source>
          <target state="translated">HttpHeaders.rangeHeader</target>
        </trans-unit>
        <trans-unit id="b4cf221602fb1a6cbe4fb47b72984e693bb868f4" translate="yes" xml:space="preserve">
          <source>HttpHeaders.refererHeader</source>
          <target state="translated">HttpHeaders.refererHeader</target>
        </trans-unit>
        <trans-unit id="85592c75c452623df6380342ec1ade6b095cbb74" translate="yes" xml:space="preserve">
          <source>HttpHeaders.remove</source>
          <target state="translated">HttpHeaders.remove</target>
        </trans-unit>
        <trans-unit id="fed032e4ea36ca13d39ca1c28fa5404f508106b4" translate="yes" xml:space="preserve">
          <source>HttpHeaders.removeAll</source>
          <target state="translated">HttpHeaders.removeAll</target>
        </trans-unit>
        <trans-unit id="428365e6a7ca2ac475f1b4d6f8cf2d0400faa57d" translate="yes" xml:space="preserve">
          <source>HttpHeaders.requestHeaders</source>
          <target state="translated">HttpHeaders.requestHeaders</target>
        </trans-unit>
        <trans-unit id="a043ea69758454cb3c7d2e7e6591711798eb4635" translate="yes" xml:space="preserve">
          <source>HttpHeaders.responseHeaders</source>
          <target state="translated">HttpHeaders.responseHeaders</target>
        </trans-unit>
        <trans-unit id="b1cc2a81f32a9e8d8e77ffa1f6c79d2f15a7a0fe" translate="yes" xml:space="preserve">
          <source>HttpHeaders.retryAfterHeader</source>
          <target state="translated">HttpHeaders.retryAfterHeader</target>
        </trans-unit>
        <trans-unit id="012ee4e88e064ee048001be0b96e47fce3525455" translate="yes" xml:space="preserve">
          <source>HttpHeaders.serverHeader</source>
          <target state="translated">HttpHeaders.serverHeader</target>
        </trans-unit>
        <trans-unit id="93df2981f53d3eb3be7e3a59154f0681061f79b8" translate="yes" xml:space="preserve">
          <source>HttpHeaders.set</source>
          <target state="translated">HttpHeaders.set</target>
        </trans-unit>
        <trans-unit id="1effbf9d4cb758cf70c421270b4dab168dd480a3" translate="yes" xml:space="preserve">
          <source>HttpHeaders.setCookieHeader</source>
          <target state="translated">HttpHeaders.setCookieHeader</target>
        </trans-unit>
        <trans-unit id="944f931e4a2a9d2692b8364616ccddd9df305e24" translate="yes" xml:space="preserve">
          <source>HttpHeaders.teHeader</source>
          <target state="translated">HttpHeaders.teHeader</target>
        </trans-unit>
        <trans-unit id="d2ac668d67376b069b673fda8e7b01ed9d4cbba7" translate="yes" xml:space="preserve">
          <source>HttpHeaders.trailerHeader</source>
          <target state="translated">HttpHeaders.trailerHeader</target>
        </trans-unit>
        <trans-unit id="12e96126b83af9e428de983aa61f5a1c0544c4a8" translate="yes" xml:space="preserve">
          <source>HttpHeaders.transferEncodingHeader</source>
          <target state="translated">HttpHeaders.transferEncodingHeader</target>
        </trans-unit>
        <trans-unit id="dc26a2628c7868ff7b093d3e3d6f7875a26dd9c7" translate="yes" xml:space="preserve">
          <source>HttpHeaders.upgradeHeader</source>
          <target state="translated">HttpHeaders.upgradeHeader</target>
        </trans-unit>
        <trans-unit id="49b1904d2d32bffc8e246e3ec1f239704b736fe2" translate="yes" xml:space="preserve">
          <source>HttpHeaders.userAgentHeader</source>
          <target state="translated">HttpHeaders.userAgentHeader</target>
        </trans-unit>
        <trans-unit id="037c488f8f569e7faa4f86ccb2d386de512d7cf0" translate="yes" xml:space="preserve">
          <source>HttpHeaders.value</source>
          <target state="translated">HttpHeaders.value</target>
        </trans-unit>
        <trans-unit id="318525e990c30454dc826ce8c67b6d078ed686b0" translate="yes" xml:space="preserve">
          <source>HttpHeaders.varyHeader</source>
          <target state="translated">HttpHeaders.varyHeader</target>
        </trans-unit>
        <trans-unit id="fbf314df9494a17a5f917fc11cf63e61edddceba" translate="yes" xml:space="preserve">
          <source>HttpHeaders.viaHeader</source>
          <target state="translated">HttpHeaders.viaHeader</target>
        </trans-unit>
        <trans-unit id="34eb86052813b831ee58cf0257e44401ef03472f" translate="yes" xml:space="preserve">
          <source>HttpHeaders.warningHeader</source>
          <target state="translated">HttpHeaders.warningHeader</target>
        </trans-unit>
        <trans-unit id="aa77bede8a5d8173ca0ef3ed2d2ae5b50a93da2c" translate="yes" xml:space="preserve">
          <source>HttpHeaders.wwwAuthenticateHeader</source>
          <target state="translated">HttpHeaders.wwwAuthenticateHeader</target>
        </trans-unit>
        <trans-unit id="34801f65b3c1ba72877a32c7b2f32559eccbc113" translate="yes" xml:space="preserve">
          <source>HttpOverrides</source>
          <target state="translated">HttpOverrides</target>
        </trans-unit>
        <trans-unit id="d151a34d11428172dfbad7743600bb5cadc0dab4" translate="yes" xml:space="preserve">
          <source>HttpOverrides class</source>
          <target state="translated">HttpOverrides クラス。</target>
        </trans-unit>
        <trans-unit id="0dc1c34c35f9712938a5de2563906f84fbdc835f" translate="yes" xml:space="preserve">
          <source>HttpOverrides class Null safety</source>
          <target state="translated">HttpOverrides クラス Null 安全性</target>
        </trans-unit>
        <trans-unit id="cf67edde63a1d92fb863e71b32a6131d6239f682" translate="yes" xml:space="preserve">
          <source>HttpOverrides constructor</source>
          <target state="translated">HttpOverrides コンストラクタ</target>
        </trans-unit>
        <trans-unit id="a55c0b8042ce7db7207b6d82b074c492f25ce406" translate="yes" xml:space="preserve">
          <source>HttpOverrides constructor Null safety</source>
          <target state="translated">HttpOverrides コンストラクタ Null 安全性</target>
        </trans-unit>
        <trans-unit id="86f203c91740ef38b51077feed648c4dfb8ff159" translate="yes" xml:space="preserve">
          <source>HttpOverrides(</source>
          <target state="translated">HttpOverrides(</target>
        </trans-unit>
        <trans-unit id="734fa5f3741a9824b13b88953845ef65bd016a53" translate="yes" xml:space="preserve">
          <source>HttpOverrides.HttpOverrides</source>
          <target state="translated">HttpOverrides.HttpOverrides</target>
        </trans-unit>
        <trans-unit id="e12850364cc0b2ea4c02d329403cc28174ec028b" translate="yes" xml:space="preserve">
          <source>HttpOverrides.createHttpClient</source>
          <target state="translated">HttpOverrides.createHttpClient</target>
        </trans-unit>
        <trans-unit id="2819c9dec7842866b8aefbe3a3265052798c0342" translate="yes" xml:space="preserve">
          <source>HttpOverrides.current</source>
          <target state="translated">HttpOverrides.current</target>
        </trans-unit>
        <trans-unit id="4d82b4a2dc174ff1d4010fe3b850910b80b06e5c" translate="yes" xml:space="preserve">
          <source>HttpOverrides.findProxyFromEnvironment</source>
          <target state="translated">HttpOverrides.findProxyFromEnvironment</target>
        </trans-unit>
        <trans-unit id="2d67aae51ac3ad30564badc0adc1ebb871ddd9d1" translate="yes" xml:space="preserve">
          <source>HttpOverrides.global</source>
          <target state="translated">HttpOverrides.global</target>
        </trans-unit>
        <trans-unit id="230ea35baee51ce371a48c15f138ee3b0e6c118f" translate="yes" xml:space="preserve">
          <source>HttpOverrides.runWithHttpOverrides&amp;lt;R&amp;gt;</source>
          <target state="translated">HttpOverrides.runWithHttpOverrides&amp;lt;R&amp;gt;</target>
        </trans-unit>
        <trans-unit id="8a7947f43d11e23776c0339063718741a90b6fc2" translate="yes" xml:space="preserve">
          <source>HttpOverrides.runZoned&amp;lt;R&amp;gt;</source>
          <target state="translated">HttpOverrides.runZoned&amp;lt;R&amp;gt;</target>
        </trans-unit>
        <trans-unit id="876884817603f1994832b258f47c862ce8f79db8" translate="yes" xml:space="preserve">
          <source>HttpRequest</source>
          <target state="translated">HttpRequest</target>
        </trans-unit>
        <trans-unit id="f4e64e926198d8ed9989d9419270be38004882c6" translate="yes" xml:space="preserve">
          <source>HttpRequest and HttpClientResponse always have immutable headers.</source>
          <target state="translated">HttpRequest および HttpClientResponse は常に不変のヘッダを持っています。</target>
        </trans-unit>
        <trans-unit id="79a58fa6c7c4f0be66a90ec08de702cf564ae8fb" translate="yes" xml:space="preserve">
          <source>HttpRequest can be used to obtain data from HTTP and FTP protocols, and is useful for AJAX-style page updates.</source>
          <target state="translated">HttpRequestは、HTTPやFTPプロトコルからデータを取得するために使用することができ、AJAXスタイルのページ更新に便利です。</target>
        </trans-unit>
        <trans-unit id="a95ccc4462376e0bd3047581fb76061756fb37a3" translate="yes" xml:space="preserve">
          <source>HttpRequest class</source>
          <target state="translated">HttpRequest クラス</target>
        </trans-unit>
        <trans-unit id="d5f656e8714e3bfb1005c959a2d31b8874cd1385" translate="yes" xml:space="preserve">
          <source>HttpRequest class Null safety</source>
          <target state="translated">HttpRequest クラス Null 安全性</target>
        </trans-unit>
        <trans-unit id="257362bb974cd1103f6a21b8bd9b6b741017a22a" translate="yes" xml:space="preserve">
          <source>HttpRequest constructor</source>
          <target state="translated">HttpRequest のコンストラクタ</target>
        </trans-unit>
        <trans-unit id="0a4baaaa30dd61698724a3ba3bcda1639ba6ac67" translate="yes" xml:space="preserve">
          <source>HttpRequest constructor Null safety</source>
          <target state="translated">HttpRequest コンストラクタ Null 安全性</target>
        </trans-unit>
        <trans-unit id="57e4b3ed3cb082aadab284676a3d66811b6f14b9" translate="yes" xml:space="preserve">
          <source>HttpRequest(</source>
          <target state="translated">HttpRequest(</target>
        </trans-unit>
        <trans-unit id="6bec18dfddede4b828af051ce1026f3f216e577c" translate="yes" xml:space="preserve">
          <source>HttpRequest.DONE</source>
          <target state="translated">HttpRequest.DONE</target>
        </trans-unit>
        <trans-unit id="f3066152e711f620c9701b6f9a4bda895aac1fe7" translate="yes" xml:space="preserve">
          <source>HttpRequest.HEADERS_RECEIVED</source>
          <target state="translated">HttpRequest.HEADERS_RECEIVED</target>
        </trans-unit>
        <trans-unit id="66131f9aee1ae3fbc228b369a2b887d07f795a38" translate="yes" xml:space="preserve">
          <source>HttpRequest.HttpRequest</source>
          <target state="translated">HttpRequest.HttpRequest</target>
        </trans-unit>
        <trans-unit id="758193749439ed25207b745dc4ca22301735dadd" translate="yes" xml:space="preserve">
          <source>HttpRequest.LOADING</source>
          <target state="translated">HttpRequest.LOADING</target>
        </trans-unit>
        <trans-unit id="d2efbf2e087e707f20c3eaafc261b69a6995c728" translate="yes" xml:space="preserve">
          <source>HttpRequest.OPENED</source>
          <target state="translated">HttpRequest.OPENED</target>
        </trans-unit>
        <trans-unit id="29948cb07c5f4946cc2f7950acf3ae2db9662118" translate="yes" xml:space="preserve">
          <source>HttpRequest.UNSENT</source>
          <target state="translated">HttpRequest.UNSENT</target>
        </trans-unit>
        <trans-unit id="9e1362a06b13771308cb64e66be8108bcfc581ce" translate="yes" xml:space="preserve">
          <source>HttpRequest.abort</source>
          <target state="translated">HttpRequest.abort</target>
        </trans-unit>
        <trans-unit id="f1f02e90dd07133276368f5a1d8beb29a6837c2f" translate="yes" xml:space="preserve">
          <source>HttpRequest.certificate</source>
          <target state="translated">HttpRequest.certificate</target>
        </trans-unit>
        <trans-unit id="3a05ec3f51a81f0a6cf1bc07c32b34d74eb748d1" translate="yes" xml:space="preserve">
          <source>HttpRequest.connectionInfo</source>
          <target state="translated">HttpRequest.connectionInfo</target>
        </trans-unit>
        <trans-unit id="28ea83d1ad984c6670d2aad708aaade52892cf67" translate="yes" xml:space="preserve">
          <source>HttpRequest.contentLength</source>
          <target state="translated">HttpRequest.contentLength</target>
        </trans-unit>
        <trans-unit id="d27d8b992016118f6900c51525183abfb4accd9b" translate="yes" xml:space="preserve">
          <source>HttpRequest.cookies</source>
          <target state="translated">HttpRequest.cookies</target>
        </trans-unit>
        <trans-unit id="8a03c2d85084b72cbea3419a1fe39005ec4a3cbd" translate="yes" xml:space="preserve">
          <source>HttpRequest.getAllResponseHeaders</source>
          <target state="translated">HttpRequest.getAllResponseHeaders</target>
        </trans-unit>
        <trans-unit id="d242dd8b83e1d6c81692cf7508027f4fd6f9c597" translate="yes" xml:space="preserve">
          <source>HttpRequest.getResponseHeader</source>
          <target state="translated">HttpRequest.getResponseHeader</target>
        </trans-unit>
        <trans-unit id="73c14d43a2f1db5f2c9fc3f4e4048cc9c4706ff4" translate="yes" xml:space="preserve">
          <source>HttpRequest.getString</source>
          <target state="translated">HttpRequest.getString</target>
        </trans-unit>
        <trans-unit id="598253e2eee80d68289ccf9f98f665a5ce16f3d6" translate="yes" xml:space="preserve">
          <source>HttpRequest.headers</source>
          <target state="translated">HttpRequest.headers</target>
        </trans-unit>
        <trans-unit id="408cb3581b48efe40df05d0ffb87d7e4b888935a" translate="yes" xml:space="preserve">
          <source>HttpRequest.method</source>
          <target state="translated">HttpRequest.method</target>
        </trans-unit>
        <trans-unit id="2ef6aa06d777c00b63cc3a788ef83f568f32fccf" translate="yes" xml:space="preserve">
          <source>HttpRequest.onReadyStateChange</source>
          <target state="translated">HttpRequest.onReadyStateChange</target>
        </trans-unit>
        <trans-unit id="8b1f7c455bc2a0c7b97e817318dbd7308a36f5a2" translate="yes" xml:space="preserve">
          <source>HttpRequest.open</source>
          <target state="translated">HttpRequest.open</target>
        </trans-unit>
        <trans-unit id="4a6206182674382da53f7d7a1438067385b4c103" translate="yes" xml:space="preserve">
          <source>HttpRequest.overrideMimeType</source>
          <target state="translated">HttpRequest.overrideMimeType</target>
        </trans-unit>
        <trans-unit id="0b9eef4d66823262a12bc557966c113a5dc3c8fe" translate="yes" xml:space="preserve">
          <source>HttpRequest.persistentConnection</source>
          <target state="translated">HttpRequest.persistentConnection</target>
        </trans-unit>
        <trans-unit id="b57d9866ada4ec2af7c0205aab3175afe5c6cf44" translate="yes" xml:space="preserve">
          <source>HttpRequest.postFormData</source>
          <target state="translated">HttpRequest.postFormData</target>
        </trans-unit>
        <trans-unit id="25f1aede4878bab55eeac8df8ce774361577a1b1" translate="yes" xml:space="preserve">
          <source>HttpRequest.protocolVersion</source>
          <target state="translated">HttpRequest.protocolVersion</target>
        </trans-unit>
        <trans-unit id="6045467fa9b0c897ce9a3f9e341dd0c3e50e9366" translate="yes" xml:space="preserve">
          <source>HttpRequest.readyState</source>
          <target state="translated">HttpRequest.readyState</target>
        </trans-unit>
        <trans-unit id="da8bef2613d8ed6ffbcae18d916fdacd0f389317" translate="yes" xml:space="preserve">
          <source>HttpRequest.readyStateChangeEvent</source>
          <target state="translated">HttpRequest.readyStateChangeEvent</target>
        </trans-unit>
        <trans-unit id="478292bf1293914c27d44be332ee73125acfd129" translate="yes" xml:space="preserve">
          <source>HttpRequest.request</source>
          <target state="translated">HttpRequest.request</target>
        </trans-unit>
        <trans-unit id="f44b7c760740dbaa8ff7003312565fd012c36152" translate="yes" xml:space="preserve">
          <source>HttpRequest.requestCrossOrigin</source>
          <target state="translated">HttpRequest.requestCrossOrigin</target>
        </trans-unit>
        <trans-unit id="f2b6fe938ab0ca2520657465e410dcef2e884047" translate="yes" xml:space="preserve">
          <source>HttpRequest.requestedUri</source>
          <target state="translated">HttpRequest.requestedUri</target>
        </trans-unit>
        <trans-unit id="30810bacbcea2db9a9ba74f03f74baad6fba908a" translate="yes" xml:space="preserve">
          <source>HttpRequest.response</source>
          <target state="translated">HttpRequest.response</target>
        </trans-unit>
        <trans-unit id="8a2faf0b0e312b8242ae2ce9625531401c53a5fd" translate="yes" xml:space="preserve">
          <source>HttpRequest.responseHeaders</source>
          <target state="translated">HttpRequest.responseHeaders</target>
        </trans-unit>
        <trans-unit id="9f994691fe8adc254f1480f80a3ffbc8dcbea0f2" translate="yes" xml:space="preserve">
          <source>HttpRequest.responseText</source>
          <target state="translated">HttpRequest.responseText</target>
        </trans-unit>
        <trans-unit id="714d7c4f2044e36b264c6a387f74fe3cefb064fe" translate="yes" xml:space="preserve">
          <source>HttpRequest.responseType</source>
          <target state="translated">HttpRequest.responseType</target>
        </trans-unit>
        <trans-unit id="89cbdde84276b18065dd0dab81e20ed3b9c9fb39" translate="yes" xml:space="preserve">
          <source>HttpRequest.responseUrl</source>
          <target state="translated">HttpRequest.responseUrl</target>
        </trans-unit>
        <trans-unit id="f7c8f813532f4014f7a1fd4d1224126b3eca9a5e" translate="yes" xml:space="preserve">
          <source>HttpRequest.responseXml</source>
          <target state="translated">HttpRequest.responseXml</target>
        </trans-unit>
        <trans-unit id="20def581fa242d911e2a23877e89a410b467b589" translate="yes" xml:space="preserve">
          <source>HttpRequest.send</source>
          <target state="translated">HttpRequest.send</target>
        </trans-unit>
        <trans-unit id="c147c82d12cb5bc057dc84ff75386f177fdd1783" translate="yes" xml:space="preserve">
          <source>HttpRequest.session</source>
          <target state="translated">HttpRequest.session</target>
        </trans-unit>
        <trans-unit id="08c7df65365a41d56ff7e0df9630550370885ce8" translate="yes" xml:space="preserve">
          <source>HttpRequest.setRequestHeader</source>
          <target state="translated">HttpRequest.setRequestHeader</target>
        </trans-unit>
        <trans-unit id="b9fee75f36f1366c323b261f3c16be85a97838a9" translate="yes" xml:space="preserve">
          <source>HttpRequest.status</source>
          <target state="translated">HttpRequest.status</target>
        </trans-unit>
        <trans-unit id="06b4342a4e08d0d7cc09666e0d337f7c31f3853e" translate="yes" xml:space="preserve">
          <source>HttpRequest.statusText</source>
          <target state="translated">HttpRequest.statusText</target>
        </trans-unit>
        <trans-unit id="6284f5c24a5c432cc5489ab235d0a36826ab1a87" translate="yes" xml:space="preserve">
          <source>HttpRequest.supportsCrossOrigin</source>
          <target state="translated">HttpRequest.supportsCrossOrigin</target>
        </trans-unit>
        <trans-unit id="0b769cfa2680e27601baaa747920d23c27ec4e4a" translate="yes" xml:space="preserve">
          <source>HttpRequest.supportsLoadEndEvent</source>
          <target state="translated">HttpRequest.supportsLoadEndEvent</target>
        </trans-unit>
        <trans-unit id="1653bb2bf6c49e1dd518dc6f589635a7ac10c96f" translate="yes" xml:space="preserve">
          <source>HttpRequest.supportsOverrideMimeType</source>
          <target state="translated">HttpRequest.supportsOverrideMimeType</target>
        </trans-unit>
        <trans-unit id="69056bd75b502cde7e7f71c10e335b61e68c4d2b" translate="yes" xml:space="preserve">
          <source>HttpRequest.supportsProgressEvent</source>
          <target state="translated">HttpRequest.supportsProgressEvent</target>
        </trans-unit>
        <trans-unit id="5abccd54cefa424eb80a4c500f7d9a6b83ee5cab" translate="yes" xml:space="preserve">
          <source>HttpRequest.timeout</source>
          <target state="translated">HttpRequest.timeout</target>
        </trans-unit>
        <trans-unit id="0f867a97527ba7dc70edfa1abb24c1b5e3742f82" translate="yes" xml:space="preserve">
          <source>HttpRequest.upload</source>
          <target state="translated">HttpRequest.upload</target>
        </trans-unit>
        <trans-unit id="5fe331546594340f5bed8bd13095797692a2e606" translate="yes" xml:space="preserve">
          <source>HttpRequest.uri</source>
          <target state="translated">HttpRequest.uri</target>
        </trans-unit>
        <trans-unit id="d5c6610c8227182fb9c0804a181afedb4e0e6114" translate="yes" xml:space="preserve">
          <source>HttpRequest.withCredentials</source>
          <target state="translated">HttpRequest.withCredentials</target>
        </trans-unit>
        <trans-unit id="0e69493da112e1353c6399d6b4d7c95225d19ecc" translate="yes" xml:space="preserve">
          <source>HttpRequestEventTarget</source>
          <target state="translated">HttpRequestEventTarget</target>
        </trans-unit>
        <trans-unit id="0895609684df98f18cf389bdfafd256906390e0d" translate="yes" xml:space="preserve">
          <source>HttpRequestEventTarget class</source>
          <target state="translated">HttpRequestEventTarget クラス</target>
        </trans-unit>
        <trans-unit id="a58f2ecaa9b06a29dfa2007dd865a121f0976d66" translate="yes" xml:space="preserve">
          <source>HttpRequestEventTarget class Null safety</source>
          <target state="translated">HttpRequestEventTargetクラスNull安全性</target>
        </trans-unit>
        <trans-unit id="c983b4db7ed8da15e1b36a0cb50173a08ceebb77" translate="yes" xml:space="preserve">
          <source>HttpRequestEventTarget.abortEvent</source>
          <target state="translated">HttpRequestEventTarget.abortEvent</target>
        </trans-unit>
        <trans-unit id="1ce08ee63b40bbc787fe2b34bda7ef8e3bc9e016" translate="yes" xml:space="preserve">
          <source>HttpRequestEventTarget.errorEvent</source>
          <target state="translated">HttpRequestEventTarget.errorEvent</target>
        </trans-unit>
        <trans-unit id="52c645e8010197fcbe65ed2299dfd034294864f9" translate="yes" xml:space="preserve">
          <source>HttpRequestEventTarget.loadEndEvent</source>
          <target state="translated">HttpRequestEventTarget.loadEndEvent</target>
        </trans-unit>
        <trans-unit id="d36403bf69d26eac1df48526d9d98fff98629f8a" translate="yes" xml:space="preserve">
          <source>HttpRequestEventTarget.loadEvent</source>
          <target state="translated">HttpRequestEventTarget.loadEvent</target>
        </trans-unit>
        <trans-unit id="d1ce846b0f0d886a4d804d35de2f98826efe0988" translate="yes" xml:space="preserve">
          <source>HttpRequestEventTarget.loadStartEvent</source>
          <target state="translated">HttpRequestEventTarget.loadStartEvent</target>
        </trans-unit>
        <trans-unit id="09caa1ca29d3271e2d4b640675841e9e524e9c5e" translate="yes" xml:space="preserve">
          <source>HttpRequestEventTarget.onAbort</source>
          <target state="translated">HttpRequestEventTarget.onAbort</target>
        </trans-unit>
        <trans-unit id="efad86313033e6de74021c32bbe7a4c2259eed04" translate="yes" xml:space="preserve">
          <source>HttpRequestEventTarget.onError</source>
          <target state="translated">HttpRequestEventTarget.onError</target>
        </trans-unit>
        <trans-unit id="a5f6a7fc462a64ce615854c59bf1472fd24c1bf0" translate="yes" xml:space="preserve">
          <source>HttpRequestEventTarget.onLoad</source>
          <target state="translated">HttpRequestEventTarget.onLoad</target>
        </trans-unit>
        <trans-unit id="34029841f3fbe012483805e2b1a60fa6232577ef" translate="yes" xml:space="preserve">
          <source>HttpRequestEventTarget.onLoadEnd</source>
          <target state="translated">HttpRequestEventTarget.onLoadEnd</target>
        </trans-unit>
        <trans-unit id="b3bd649e72b59e9136c0894a2cdb7ff00e3e9501" translate="yes" xml:space="preserve">
          <source>HttpRequestEventTarget.onLoadStart</source>
          <target state="translated">HttpRequestEventTarget.onLoadStart</target>
        </trans-unit>
        <trans-unit id="366764353509be51ebc6dfcb4122e2127e493f54" translate="yes" xml:space="preserve">
          <source>HttpRequestEventTarget.onProgress</source>
          <target state="translated">HttpRequestEventTarget.onProgress</target>
        </trans-unit>
        <trans-unit id="a8276f72a941dee620ae48f96d94c7118865c876" translate="yes" xml:space="preserve">
          <source>HttpRequestEventTarget.onTimeout</source>
          <target state="translated">HttpRequestEventTarget.onTimeout</target>
        </trans-unit>
        <trans-unit id="82f040be98e343213fb43ba08510dd56e2bee29f" translate="yes" xml:space="preserve">
          <source>HttpRequestEventTarget.progressEvent</source>
          <target state="translated">HttpRequestEventTarget.progressEvent</target>
        </trans-unit>
        <trans-unit id="320f9f108e366fe946d22c78946faafba52fc8f1" translate="yes" xml:space="preserve">
          <source>HttpRequestEventTarget.timeoutEvent</source>
          <target state="translated">HttpRequestEventTarget.timeoutEvent</target>
        </trans-unit>
        <trans-unit id="8926ce66e41a28c7c6a756506c0f3da33434e42e" translate="yes" xml:space="preserve">
          <source>HttpRequestUpload</source>
          <target state="translated">HttpRequestUpload</target>
        </trans-unit>
        <trans-unit id="8d701b17d7d7b6240e5462f340167d7d6c6c0066" translate="yes" xml:space="preserve">
          <source>HttpRequestUpload class</source>
          <target state="translated">HttpRequestUploadクラス</target>
        </trans-unit>
        <trans-unit id="381112de5fb593723f96cf273ba5b038b2d5507a" translate="yes" xml:space="preserve">
          <source>HttpRequestUpload class Null safety</source>
          <target state="translated">HttpRequestUploadクラスNullの安全性</target>
        </trans-unit>
        <trans-unit id="98a81a35f1584d5f5070065dbea832e61fb0bf0f" translate="yes" xml:space="preserve">
          <source>HttpResponse</source>
          <target state="translated">HttpResponse</target>
        </trans-unit>
        <trans-unit id="afd74662d550fa319a5a8bdfa373af67de685bf6" translate="yes" xml:space="preserve">
          <source>HttpResponse and HttpClientRequest have immutable headers from the moment the body is written to.</source>
          <target state="translated">HttpResponseおよびHttpClientRequestには、ボディが書き込まれた瞬間から不変のヘッダがあります。</target>
        </trans-unit>
        <trans-unit id="47eeac3f902acd60eba750fe536b7f4e3165517a" translate="yes" xml:space="preserve">
          <source>HttpResponse class</source>
          <target state="translated">HttpResponse クラス</target>
        </trans-unit>
        <trans-unit id="a0fcc5ac9227d888a82fa320bffb2faac68e8c8c" translate="yes" xml:space="preserve">
          <source>HttpResponse class Null safety</source>
          <target state="translated">HttpResponse クラス Null 安全性</target>
        </trans-unit>
        <trans-unit id="71aabc94647d4a69daa1f4a70726c0e045936bb2" translate="yes" xml:space="preserve">
          <source>HttpResponse constructor</source>
          <target state="translated">HttpResponse のコンストラクタ</target>
        </trans-unit>
        <trans-unit id="36ecb7cabe61b22ae211d34b6d27b3efab723c7e" translate="yes" xml:space="preserve">
          <source>HttpResponse constructor Null safety</source>
          <target state="translated">HttpResponse コンストラクタ Null 安全性</target>
        </trans-unit>
        <trans-unit id="636b4a33429bb7184859df82a754de23c59b8753" translate="yes" xml:space="preserve">
          <source>HttpResponse(</source>
          <target state="translated">HttpResponse(</target>
        </trans-unit>
        <trans-unit id="f44be3207d1837b6227fe90adcc6f807f028348d" translate="yes" xml:space="preserve">
          <source>HttpResponse.HttpResponse</source>
          <target state="translated">HttpResponse.HttpResponse</target>
        </trans-unit>
        <trans-unit id="a33fe426a5a676701c59252dc86f4338b420d1fc" translate="yes" xml:space="preserve">
          <source>HttpResponse.bufferOutput</source>
          <target state="translated">HttpResponse.bufferOutput</target>
        </trans-unit>
        <trans-unit id="f32bd8b873ee965b3e58a1fe956628b9972e53ea" translate="yes" xml:space="preserve">
          <source>HttpResponse.connectionInfo</source>
          <target state="translated">HttpResponse.connectionInfo</target>
        </trans-unit>
        <trans-unit id="50e6b77aab57a0c064ef98b2189a164313d2a076" translate="yes" xml:space="preserve">
          <source>HttpResponse.contentLength</source>
          <target state="translated">HttpResponse.contentLength</target>
        </trans-unit>
        <trans-unit id="ed7946cb6dd6e1556b79d96eeab615825813d571" translate="yes" xml:space="preserve">
          <source>HttpResponse.cookies</source>
          <target state="translated">HttpResponse.cookies</target>
        </trans-unit>
        <trans-unit id="c7e82c9f15313bd1b8a8501155d062a3cc77663b" translate="yes" xml:space="preserve">
          <source>HttpResponse.deadline</source>
          <target state="translated">HttpResponse.deadline</target>
        </trans-unit>
        <trans-unit id="c1b071e741904f16d6cdd4cb55a96f5249864325" translate="yes" xml:space="preserve">
          <source>HttpResponse.detachSocket</source>
          <target state="translated">HttpResponse.detachSocket</target>
        </trans-unit>
        <trans-unit id="73246b6bab78e3795f4cebd550b9ac41141ea1b8" translate="yes" xml:space="preserve">
          <source>HttpResponse.headers</source>
          <target state="translated">HttpResponse.headers</target>
        </trans-unit>
        <trans-unit id="cfa704ec9062cdf69a47f588411425edcd963bab" translate="yes" xml:space="preserve">
          <source>HttpResponse.persistentConnection</source>
          <target state="translated">HttpResponse.persistentConnection</target>
        </trans-unit>
        <trans-unit id="45b529b80010b7f42c49b4277a73ab05b091adbc" translate="yes" xml:space="preserve">
          <source>HttpResponse.reasonPhrase</source>
          <target state="translated">HttpResponse.reasonPhrase</target>
        </trans-unit>
        <trans-unit id="c6827d19b841c0bc2416d100d2f8c00d4b33b3c0" translate="yes" xml:space="preserve">
          <source>HttpResponse.redirect</source>
          <target state="translated">HttpResponse.redirect</target>
        </trans-unit>
        <trans-unit id="ded5b3ceb7b3817a3a4bdf39c37b352a51d769b7" translate="yes" xml:space="preserve">
          <source>HttpResponse.statusCode</source>
          <target state="translated">HttpResponse.statusCode</target>
        </trans-unit>
        <trans-unit id="e2134d6e0f31962fa79c786433336dd6c53fd955" translate="yes" xml:space="preserve">
          <source>HttpServer</source>
          <target state="translated">HttpServer</target>
        </trans-unit>
        <trans-unit id="2b65f44c2951a686006a3ad0519fa7638b5e0463" translate="yes" xml:space="preserve">
          <source>HttpServer and HttpClient</source>
          <target state="translated">HttpServer および HttpClient</target>
        </trans-unit>
        <trans-unit id="de479d527a9df5a21199e683d09c9ffa33077338" translate="yes" xml:space="preserve">
          <source>HttpServer class</source>
          <target state="translated">HttpServer クラス</target>
        </trans-unit>
        <trans-unit id="9470d186d1d81bb37f1dfd99ed43360c53125692" translate="yes" xml:space="preserve">
          <source>HttpServer class Null safety</source>
          <target state="translated">HttpServerクラスNullの安全性</target>
        </trans-unit>
        <trans-unit id="b616db350f741abbbe4bf903dac3b41d99b1fc89" translate="yes" xml:space="preserve">
          <source>HttpServer is a Stream. Refer to the &lt;a href=&quot;../dart-async/stream-class&quot;&gt;Stream&lt;/a&gt; class for information about the streaming qualities of an HttpServer. Pausing the subscription of the stream, pauses at the OS level.</source>
          <target state="translated">HttpServerはストリームです。HttpServerのストリーミング品質については、&lt;a href=&quot;../dart-async/stream-class&quot;&gt;Stream&lt;/a&gt;クラスを参照してください。ストリームのサブスクリプションを一時停止すると、OSレベルで一時停止します。</target>
        </trans-unit>
        <trans-unit id="c89cfc51b66f872877d170b4c2da100eca4983ae" translate="yes" xml:space="preserve">
          <source>HttpServer.HttpServer.listenOn</source>
          <target state="translated">HttpServer.HttpServer.listenOn</target>
        </trans-unit>
        <trans-unit id="d1ce4c7e9b469906ef41babd39a3761ea4251d30" translate="yes" xml:space="preserve">
          <source>HttpServer.address</source>
          <target state="translated">HttpServer.address</target>
        </trans-unit>
        <trans-unit id="8695e13fa00702872e886e6ad658e87da7114ca8" translate="yes" xml:space="preserve">
          <source>HttpServer.autoCompress</source>
          <target state="translated">HttpServer.autoCompress</target>
        </trans-unit>
        <trans-unit id="9762fc93c63d7e94e1ef967602412763b948a591" translate="yes" xml:space="preserve">
          <source>HttpServer.bind</source>
          <target state="translated">HttpServer.bind</target>
        </trans-unit>
        <trans-unit id="7a1c262c0be4947ff66dc727419bd0e819cb1eb5" translate="yes" xml:space="preserve">
          <source>HttpServer.bindSecure</source>
          <target state="translated">HttpServer.bindSecure</target>
        </trans-unit>
        <trans-unit id="a9f20f5872cbd789397f6544d812446760a24a17" translate="yes" xml:space="preserve">
          <source>HttpServer.close</source>
          <target state="translated">HttpServer.close</target>
        </trans-unit>
        <trans-unit id="94b90c3d842f1cc6cbbf5dba6a7009018d313f32" translate="yes" xml:space="preserve">
          <source>HttpServer.connectionsInfo</source>
          <target state="translated">HttpServer.connectionsInfo</target>
        </trans-unit>
        <trans-unit id="82e9958c6c87f8f333ed6de15b74978f6cb18d60" translate="yes" xml:space="preserve">
          <source>HttpServer.defaultResponseHeaders</source>
          <target state="translated">HttpServer.defaultResponseHeaders</target>
        </trans-unit>
        <trans-unit id="e2f792e571c539c8b3605620361dfe229b1ee915" translate="yes" xml:space="preserve">
          <source>HttpServer.idleTimeout</source>
          <target state="translated">HttpServer.idleTimeout</target>
        </trans-unit>
        <trans-unit id="d18a292b69701617c9498af0c170437bf2acee0b" translate="yes" xml:space="preserve">
          <source>HttpServer.listenOn constructor</source>
          <target state="translated">HttpServer.listenOn コンストラクタ</target>
        </trans-unit>
        <trans-unit id="865450b5e29730a335a595296355b63b8d61527d" translate="yes" xml:space="preserve">
          <source>HttpServer.listenOn constructor Null safety</source>
          <target state="translated">HttpServer.listenOn コンストラクタ Null 安全性</target>
        </trans-unit>
        <trans-unit id="525562888221b6c5112555b484d75b1ede1d64a0" translate="yes" xml:space="preserve">
          <source>HttpServer.listenOn(</source>
          <target state="translated">HttpServer.listenOn(</target>
        </trans-unit>
        <trans-unit id="c2087c488e139a6538608c98a1f3e8ec30a3a9e8" translate="yes" xml:space="preserve">
          <source>HttpServer.port</source>
          <target state="translated">HttpServer.port</target>
        </trans-unit>
        <trans-unit id="fb1e309ee00b57d44b26d37021b48374e0ec302b" translate="yes" xml:space="preserve">
          <source>HttpServer.serverHeader</source>
          <target state="translated">HttpServer.serverHeader</target>
        </trans-unit>
        <trans-unit id="95cdef1b54a58255789def3817694bde8b559c72" translate="yes" xml:space="preserve">
          <source>HttpServer.sessionTimeout</source>
          <target state="translated">HttpServer.sessionTimeout</target>
        </trans-unit>
        <trans-unit id="ed11342ec40f4d2d37a220c113516b670adc52bb" translate="yes" xml:space="preserve">
          <source>HttpSession</source>
          <target state="translated">HttpSession</target>
        </trans-unit>
        <trans-unit id="c3bf79cc6b1352a8275c59e4a2ef88057389029d" translate="yes" xml:space="preserve">
          <source>HttpSession class</source>
          <target state="translated">HttpSession クラス</target>
        </trans-unit>
        <trans-unit id="eb5023b76c6475481fe08d3ee77f4919fc4b176f" translate="yes" xml:space="preserve">
          <source>HttpSession class Null safety</source>
          <target state="translated">HttpSession クラス Null 安全性</target>
        </trans-unit>
        <trans-unit id="7d5f00b1eed3779acc9de7656ab19f13f45e6b32" translate="yes" xml:space="preserve">
          <source>HttpSession constructor</source>
          <target state="translated">HttpSession のコンストラクタ</target>
        </trans-unit>
        <trans-unit id="716e1250af8e1e5a124dbc95a8307d16bef6d8a2" translate="yes" xml:space="preserve">
          <source>HttpSession constructor Null safety</source>
          <target state="translated">HttpSession コンストラクタ Null 安全性</target>
        </trans-unit>
        <trans-unit id="6a5b47e396faea377792f55f469a3945cd610faf" translate="yes" xml:space="preserve">
          <source>HttpSession(</source>
          <target state="translated">HttpSession(</target>
        </trans-unit>
        <trans-unit id="bb02248a7582723cbde429a82e9822b2b3fea06f" translate="yes" xml:space="preserve">
          <source>HttpSession.HttpSession</source>
          <target state="translated">HttpSession.HttpSession</target>
        </trans-unit>
        <trans-unit id="adb9cb897d1f8f4d74bfeeaa255c15ef56223c96" translate="yes" xml:space="preserve">
          <source>HttpSession.destroy</source>
          <target state="translated">HttpSession.destroy</target>
        </trans-unit>
        <trans-unit id="5f309eddfcbc8ccce25418596f8c51d9849f0f53" translate="yes" xml:space="preserve">
          <source>HttpSession.id</source>
          <target state="translated">HttpSession.id</target>
        </trans-unit>
        <trans-unit id="9432b2f65905a32ed960e3f215f35a23ec786db8" translate="yes" xml:space="preserve">
          <source>HttpSession.isNew</source>
          <target state="translated">HttpSession.isNew</target>
        </trans-unit>
        <trans-unit id="0a369aaec5f6600e40a4f15fc6f108c5ae95ab15" translate="yes" xml:space="preserve">
          <source>HttpSession.onTimeout</source>
          <target state="translated">HttpSession.onTimeout</target>
        </trans-unit>
        <trans-unit id="69b3dbb3fa898a691ab39e959f707d8839a7cb50" translate="yes" xml:space="preserve">
          <source>HttpStatus</source>
          <target state="translated">HttpStatus</target>
        </trans-unit>
        <trans-unit id="1ec30c54aafe291f295cda32fc2edcf5845bc88c" translate="yes" xml:space="preserve">
          <source>HttpStatus class</source>
          <target state="translated">HttpStatus クラス</target>
        </trans-unit>
        <trans-unit id="7a6d351aef12af26876c950ab2231b9272379af4" translate="yes" xml:space="preserve">
          <source>HttpStatus class Null safety</source>
          <target state="translated">HttpStatus クラス Null 安全性</target>
        </trans-unit>
        <trans-unit id="da6bd930d00c28d20a9f7da0c181af3c4dc64ded" translate="yes" xml:space="preserve">
          <source>HttpStatus constructor</source>
          <target state="translated">HttpStatus コンストラクタ</target>
        </trans-unit>
        <trans-unit id="cc28827b53158797b1559d2a43e4b494b43c677c" translate="yes" xml:space="preserve">
          <source>HttpStatus constructor Null safety</source>
          <target state="translated">HttpStatus コンストラクタ Null 安全性</target>
        </trans-unit>
        <trans-unit id="a2057c9894ddce291842f6f1f3c6abc7a44ec25a" translate="yes" xml:space="preserve">
          <source>HttpStatus(</source>
          <target state="translated">HttpStatus(</target>
        </trans-unit>
        <trans-unit id="6052d482ec4565f5c42600a6742b5ac628f59ef9" translate="yes" xml:space="preserve">
          <source>HttpStatus.ACCEPTED</source>
          <target state="translated">HttpStatus.ACCEPTED</target>
        </trans-unit>
        <trans-unit id="fcbb4907cd6fbc89e2f8ac1231dc57240fcd202b" translate="yes" xml:space="preserve">
          <source>HttpStatus.BAD_GATEWAY</source>
          <target state="translated">HttpStatus.BAD_GATEWAY</target>
        </trans-unit>
        <trans-unit id="3ab3326291ca6f0fa724632fc4942122ab1debf2" translate="yes" xml:space="preserve">
          <source>HttpStatus.BAD_REQUEST</source>
          <target state="translated">HttpStatus.BAD_REQUEST</target>
        </trans-unit>
        <trans-unit id="91c4309edcc577a8d93c0c14607c445f3a9be41f" translate="yes" xml:space="preserve">
          <source>HttpStatus.CONFLICT</source>
          <target state="translated">HttpStatus.CONFLICT</target>
        </trans-unit>
        <trans-unit id="3c86d03db79e58bab5f8223509ee3e1006b2aab1" translate="yes" xml:space="preserve">
          <source>HttpStatus.CONTINUE</source>
          <target state="translated">HttpStatus.CONTINUE</target>
        </trans-unit>
        <trans-unit id="bcc5fbccfc66e870685d867b9d30cbe86a483f35" translate="yes" xml:space="preserve">
          <source>HttpStatus.CREATED</source>
          <target state="translated">HttpStatus.CREATED</target>
        </trans-unit>
        <trans-unit id="eb37d13d39239dae20148d0a31951e2efcfa3b69" translate="yes" xml:space="preserve">
          <source>HttpStatus.EXPECTATION_FAILED</source>
          <target state="translated">HttpStatus.EXPECTATION_FAILED</target>
        </trans-unit>
        <trans-unit id="6c80c16ecdb54d4d1313c35e26da767927d7b6dd" translate="yes" xml:space="preserve">
          <source>HttpStatus.FORBIDDEN</source>
          <target state="translated">HttpStatus.FORBIDDEN</target>
        </trans-unit>
        <trans-unit id="7117ab47f0be3521429607ab14903a1446c8ea69" translate="yes" xml:space="preserve">
          <source>HttpStatus.GATEWAY_TIMEOUT</source>
          <target state="translated">HttpStatus.GATEWAY_TIMEOUT</target>
        </trans-unit>
        <trans-unit id="aa2b18f37cf1741987edbf1d0a546b703be78a43" translate="yes" xml:space="preserve">
          <source>HttpStatus.GONE</source>
          <target state="translated">HttpStatus.GONE</target>
        </trans-unit>
        <trans-unit id="acb64c31f1b10afa486345c03edb50776ba6a1cd" translate="yes" xml:space="preserve">
          <source>HttpStatus.HTTP_VERSION_NOT_SUPPORTED</source>
          <target state="translated">HttpStatus.HTTP_VERSION_NOT_SUPPORTED</target>
        </trans-unit>
        <trans-unit id="f6ce0d423f4a3b5a1370ad79ee8090068e2828d7" translate="yes" xml:space="preserve">
          <source>HttpStatus.HttpStatus</source>
          <target state="translated">HttpStatus.HttpStatus</target>
        </trans-unit>
        <trans-unit id="5391fa86ea86f1f11b999b080988cb6cc46d0371" translate="yes" xml:space="preserve">
          <source>HttpStatus.INTERNAL_SERVER_ERROR</source>
          <target state="translated">HttpStatus.INTERNAL_SERVER_ERROR</target>
        </trans-unit>
        <trans-unit id="9b5a69e232a6e47c36d3e02a78ef0191888ee42c" translate="yes" xml:space="preserve">
          <source>HttpStatus.LENGTH_REQUIRED</source>
          <target state="translated">HttpStatus.LENGTH_REQUIRED</target>
        </trans-unit>
        <trans-unit id="3c549fc360b079ddbe2adbdd9a86b8d227504874" translate="yes" xml:space="preserve">
          <source>HttpStatus.METHOD_NOT_ALLOWED</source>
          <target state="translated">HttpStatus.METHOD_NOT_ALLOWED</target>
        </trans-unit>
        <trans-unit id="2fd6f578f11c4c0b7a82229776df3c948b83a8f2" translate="yes" xml:space="preserve">
          <source>HttpStatus.MOVED_PERMANENTLY</source>
          <target state="translated">HttpStatus.MOVED_PERMANENTLY</target>
        </trans-unit>
        <trans-unit id="ad7df24b0f7f24ff09eb8c3b93dfe1120a9ebe5d" translate="yes" xml:space="preserve">
          <source>HttpStatus.MOVED_TEMPORARILY</source>
          <target state="translated">HttpStatus.MOVED_TEMPORARILY</target>
        </trans-unit>
        <trans-unit id="bff5fb789b46e8f2afa502b113eb4f636507c566" translate="yes" xml:space="preserve">
          <source>HttpStatus.MULTIPLE_CHOICES</source>
          <target state="translated">HttpStatus.MULTIPLE_CHOICES</target>
        </trans-unit>
        <trans-unit id="274d15970cd5ed679d8663ed1e9897a440705bc2" translate="yes" xml:space="preserve">
          <source>HttpStatus.NETWORK_CONNECT_TIMEOUT_ERROR</source>
          <target state="translated">HttpStatus.NETWORK_CONNECT_TIMEOUT_ERROR</target>
        </trans-unit>
        <trans-unit id="adb3f5672153f77d95c0aaa72da999acb7478782" translate="yes" xml:space="preserve">
          <source>HttpStatus.NON_AUTHORITATIVE_INFORMATION</source>
          <target state="translated">HttpStatus.NON_AUTHORITATIVE_INFORMATION</target>
        </trans-unit>
        <trans-unit id="801e394d960e3db43d18322732e4f86138386d4e" translate="yes" xml:space="preserve">
          <source>HttpStatus.NOT_ACCEPTABLE</source>
          <target state="translated">HttpStatus.NOT_ACCEPTABLE</target>
        </trans-unit>
        <trans-unit id="619f081b878d8cbce81d01678fda5659e65a220d" translate="yes" xml:space="preserve">
          <source>HttpStatus.NOT_FOUND</source>
          <target state="translated">HttpStatus.NOT_FOUND</target>
        </trans-unit>
        <trans-unit id="5d538c5e6f0f3e49549e70a294ee2cbaabe06eb1" translate="yes" xml:space="preserve">
          <source>HttpStatus.NOT_IMPLEMENTED</source>
          <target state="translated">HttpStatus.NOT_IMPLEMENTED</target>
        </trans-unit>
        <trans-unit id="1b22e2e71c47709864ac083513f37bc8c2e6341f" translate="yes" xml:space="preserve">
          <source>HttpStatus.NOT_MODIFIED</source>
          <target state="translated">HttpStatus.NOT_MODIFIED</target>
        </trans-unit>
        <trans-unit id="c74f7c0989196618336067e09d475eb8df378733" translate="yes" xml:space="preserve">
          <source>HttpStatus.NO_CONTENT</source>
          <target state="translated">HttpStatus.NO_CONTENT</target>
        </trans-unit>
        <trans-unit id="6caba4180f51a47040756676410001e30bd28352" translate="yes" xml:space="preserve">
          <source>HttpStatus.PARTIAL_CONTENT</source>
          <target state="translated">HttpStatus.PARTIAL_CONTENT</target>
        </trans-unit>
        <trans-unit id="874a10799728387b5ff49080100ae56dde9e584e" translate="yes" xml:space="preserve">
          <source>HttpStatus.PAYMENT_REQUIRED</source>
          <target state="translated">HttpStatus.PAYMENT_REQUIRED</target>
        </trans-unit>
        <trans-unit id="51939c11e7145d2d45a232df36dd19381ab17963" translate="yes" xml:space="preserve">
          <source>HttpStatus.PRECONDITION_FAILED</source>
          <target state="translated">HttpStatus.PRECONDITION_FAILED</target>
        </trans-unit>
        <trans-unit id="07bab5dc769b34dcfc3e4d1cad7b3e5e0d9631aa" translate="yes" xml:space="preserve">
          <source>HttpStatus.PROXY_AUTHENTICATION_REQUIRED</source>
          <target state="translated">HttpStatus.PROXY_AUTHENTICATION_REQUIRED</target>
        </trans-unit>
        <trans-unit id="bfd014d97193db4053dd52761fee33c1426796cb" translate="yes" xml:space="preserve">
          <source>HttpStatus.REQUESTED_RANGE_NOT_SATISFIABLE</source>
          <target state="translated">HttpStatus.REQUESTED_RANGE_NOT_SATISFIABLE</target>
        </trans-unit>
        <trans-unit id="772535b03fc7368c2bf8f9f25d2203812971e566" translate="yes" xml:space="preserve">
          <source>HttpStatus.REQUEST_ENTITY_TOO_LARGE</source>
          <target state="translated">HttpStatus.REQUEST_ENTITY_TOO_LARGE</target>
        </trans-unit>
        <trans-unit id="43aa492fa04087b2d8dad82c2ba14c89dbff8a1d" translate="yes" xml:space="preserve">
          <source>HttpStatus.REQUEST_TIMEOUT</source>
          <target state="translated">HttpStatus.REQUEST_TIMEOUT</target>
        </trans-unit>
        <trans-unit id="34b66c25625cd5911417672daf5a4351aace37db" translate="yes" xml:space="preserve">
          <source>HttpStatus.REQUEST_URI_TOO_LONG</source>
          <target state="translated">HttpStatus.REQUEST_URI_TOO_LONG</target>
        </trans-unit>
        <trans-unit id="6a232447866ef5ca87459214519f74d2c91c9996" translate="yes" xml:space="preserve">
          <source>HttpStatus.RESET_CONTENT</source>
          <target state="translated">HttpStatus.RESET_CONTENT</target>
        </trans-unit>
        <trans-unit id="d7580665d621116d17daeaca620b3953aa970336" translate="yes" xml:space="preserve">
          <source>HttpStatus.SEE_OTHER</source>
          <target state="translated">HttpStatus.SEE_OTHER</target>
        </trans-unit>
        <trans-unit id="2b40803fe54aa40417c00a58be76a0506417360c" translate="yes" xml:space="preserve">
          <source>HttpStatus.SERVICE_UNAVAILABLE</source>
          <target state="translated">HttpStatus.SERVICE_UNAVAILABLE</target>
        </trans-unit>
        <trans-unit id="52863efd03d3189c3637eeda56c44b4504196d5e" translate="yes" xml:space="preserve">
          <source>HttpStatus.SWITCHING_PROTOCOLS</source>
          <target state="translated">HttpStatus.SWITCHING_PROTOCOLS</target>
        </trans-unit>
        <trans-unit id="46bba764e993fb765dd376537546a2ac3f60e631" translate="yes" xml:space="preserve">
          <source>HttpStatus.TEMPORARY_REDIRECT</source>
          <target state="translated">HttpStatus.TEMPORARY_REDIRECT</target>
        </trans-unit>
        <trans-unit id="f8dac21f554c4ba53842f9deade271e489efb8ee" translate="yes" xml:space="preserve">
          <source>HttpStatus.UNAUTHORIZED</source>
          <target state="translated">HttpStatus.UNAUTHORIZED</target>
        </trans-unit>
        <trans-unit id="7deb899650e9974f9b571ba3f2cf2c3976e0f004" translate="yes" xml:space="preserve">
          <source>HttpStatus.UNSUPPORTED_MEDIA_TYPE</source>
          <target state="translated">HttpStatus.UNSUPPORTED_MEDIA_TYPE</target>
        </trans-unit>
        <trans-unit id="9d7ce60eb2fe481974c039a7a0fee3c1124c5057" translate="yes" xml:space="preserve">
          <source>HttpStatus.UPGRADE_REQUIRED</source>
          <target state="translated">HttpStatus.UPGRADE_REQUIRED</target>
        </trans-unit>
        <trans-unit id="1eca6e1eb2ec2b2a4d3bd575bc077d0ddbd11666" translate="yes" xml:space="preserve">
          <source>HttpStatus.USE_PROXY</source>
          <target state="translated">HttpStatus.USE_PROXY</target>
        </trans-unit>
        <trans-unit id="80d6a4ea7d47379e530de218b522828843763da9" translate="yes" xml:space="preserve">
          <source>HttpStatus.alreadyReported</source>
          <target state="translated">HttpStatus.alreadyReported</target>
        </trans-unit>
        <trans-unit id="199b749d1fad0e09bdff96b2272d66d865ef5d77" translate="yes" xml:space="preserve">
          <source>HttpStatus.badGateway</source>
          <target state="translated">HttpStatus.badGateway</target>
        </trans-unit>
        <trans-unit id="2dc3a90ae2f91ba0acfdd320cc2d3ca9622865f1" translate="yes" xml:space="preserve">
          <source>HttpStatus.badRequest</source>
          <target state="translated">HttpStatus.badRequest</target>
        </trans-unit>
        <trans-unit id="dd6ef12355407012e0346efa4c78724cfb34b597" translate="yes" xml:space="preserve">
          <source>HttpStatus.clientClosedRequest</source>
          <target state="translated">HttpStatus.clientClosedRequest</target>
        </trans-unit>
        <trans-unit id="58b4768717382e51bbdc532e170f6d721ce314ae" translate="yes" xml:space="preserve">
          <source>HttpStatus.connectionClosedWithoutResponse</source>
          <target state="translated">HttpStatus.connectionClosedWithoutResponse</target>
        </trans-unit>
        <trans-unit id="c6247aeb414f77ac94cc3acb1eba9e878ce3f5f5" translate="yes" xml:space="preserve">
          <source>HttpStatus.continue_</source>
          <target state="translated">HttpStatus.continue_</target>
        </trans-unit>
        <trans-unit id="58ed2aab30159fd0637fcc112c6e2be317b5466a" translate="yes" xml:space="preserve">
          <source>HttpStatus.expectationFailed</source>
          <target state="translated">HttpStatus.expectationFailed</target>
        </trans-unit>
        <trans-unit id="17309f580ce648bca052f8a4e9c45a11d9cd8a20" translate="yes" xml:space="preserve">
          <source>HttpStatus.failedDependency</source>
          <target state="translated">HttpStatus.failedDependency</target>
        </trans-unit>
        <trans-unit id="544f76da18c4e804924b3d40527afd3432b8b185" translate="yes" xml:space="preserve">
          <source>HttpStatus.found</source>
          <target state="translated">HttpStatus.found</target>
        </trans-unit>
        <trans-unit id="27d8139f4778f863c9198bebbbd743bb8f2234e9" translate="yes" xml:space="preserve">
          <source>HttpStatus.gatewayTimeout</source>
          <target state="translated">HttpStatus.gatewayTimeout</target>
        </trans-unit>
        <trans-unit id="cea010eefa031894e760a608a4d943b8ff8e7a2d" translate="yes" xml:space="preserve">
          <source>HttpStatus.httpVersionNotSupported</source>
          <target state="translated">HttpStatus.httpVersionNotSupported</target>
        </trans-unit>
        <trans-unit id="dcb958364ad6f88e8ee0133867bb73ab6210d5e8" translate="yes" xml:space="preserve">
          <source>HttpStatus.imUsed</source>
          <target state="translated">HttpStatus.imUsed</target>
        </trans-unit>
        <trans-unit id="6d5070f1e01b5b2a74073c3149c96d648a6fe78a" translate="yes" xml:space="preserve">
          <source>HttpStatus.insufficientStorage</source>
          <target state="translated">HttpStatus.insufficientStorage</target>
        </trans-unit>
        <trans-unit id="513d509342373f207531ff2d8ab7372e45da391d" translate="yes" xml:space="preserve">
          <source>HttpStatus.internalServerError</source>
          <target state="translated">HttpStatus.internalServerError</target>
        </trans-unit>
        <trans-unit id="065c7601fc7781393aea81835f0b130e3bbc6f3a" translate="yes" xml:space="preserve">
          <source>HttpStatus.lengthRequired</source>
          <target state="translated">HttpStatus.lengthRequired</target>
        </trans-unit>
        <trans-unit id="baf35b558652a93cfb080c874565786c70519744" translate="yes" xml:space="preserve">
          <source>HttpStatus.locked</source>
          <target state="translated">HttpStatus.locked</target>
        </trans-unit>
        <trans-unit id="873550794c01fb2c6760e86a594b0d21a193f4dd" translate="yes" xml:space="preserve">
          <source>HttpStatus.loopDetected</source>
          <target state="translated">HttpStatus.loopDetected</target>
        </trans-unit>
        <trans-unit id="b6e579251cdaac8168508b382fee33f17f50e244" translate="yes" xml:space="preserve">
          <source>HttpStatus.methodNotAllowed</source>
          <target state="translated">HttpStatus.methodNotAllowed</target>
        </trans-unit>
        <trans-unit id="bc9149b7f3e57ccbbdc4df89e2aaf271c141e823" translate="yes" xml:space="preserve">
          <source>HttpStatus.misdirectedRequest</source>
          <target state="translated">HttpStatus.misdirectedRequest</target>
        </trans-unit>
        <trans-unit id="fd8cc8b46d4bc71abba5f37c17adad1c51c9c2a0" translate="yes" xml:space="preserve">
          <source>HttpStatus.movedPermanently</source>
          <target state="translated">HttpStatus.movedPermanently</target>
        </trans-unit>
        <trans-unit id="f577618027e52398aaf39bb26aa0e243862bde36" translate="yes" xml:space="preserve">
          <source>HttpStatus.movedTemporarily</source>
          <target state="translated">HttpStatus.movedTemporarily</target>
        </trans-unit>
        <trans-unit id="b424477a0a30ad87b6c097d303866a1872852866" translate="yes" xml:space="preserve">
          <source>HttpStatus.multiStatus</source>
          <target state="translated">HttpStatus.multiStatus</target>
        </trans-unit>
        <trans-unit id="3e42882e2b649b59634b25fadd1ca8012e8ca0e6" translate="yes" xml:space="preserve">
          <source>HttpStatus.multipleChoices</source>
          <target state="translated">HttpStatus.multipleChoices</target>
        </trans-unit>
        <trans-unit id="47eac7f8d0ee2297d8185a94a6b6253d2b8478a7" translate="yes" xml:space="preserve">
          <source>HttpStatus.networkAuthenticationRequired</source>
          <target state="translated">HttpStatus.networkAuthenticationRequired</target>
        </trans-unit>
        <trans-unit id="6e596d78619d5d6a747ba93bfda3d10468a51fcb" translate="yes" xml:space="preserve">
          <source>HttpStatus.networkConnectTimeoutError</source>
          <target state="translated">HttpStatus.networkConnectTimeoutError</target>
        </trans-unit>
        <trans-unit id="ff9f02d2340bef8b085a5a27fa4bce02e79823da" translate="yes" xml:space="preserve">
          <source>HttpStatus.noContent</source>
          <target state="translated">HttpStatus.noContent</target>
        </trans-unit>
        <trans-unit id="4d5eb0e396fea4e34425995d0ee37d50e21745c2" translate="yes" xml:space="preserve">
          <source>HttpStatus.nonAuthoritativeInformation</source>
          <target state="translated">HttpStatus.nonAuthoritativeInformation</target>
        </trans-unit>
        <trans-unit id="2184955e0a066e0e38302481b8928312faf45a03" translate="yes" xml:space="preserve">
          <source>HttpStatus.notAcceptable</source>
          <target state="translated">HttpStatus.notAcceptable</target>
        </trans-unit>
        <trans-unit id="2d54961f1e571bc74e2a6cb6b2bb84072c589c62" translate="yes" xml:space="preserve">
          <source>HttpStatus.notExtended</source>
          <target state="translated">HttpStatus.notExtended</target>
        </trans-unit>
        <trans-unit id="f3bb22b23b66cd9ed6035cc599d8b46a2bd76812" translate="yes" xml:space="preserve">
          <source>HttpStatus.notFound</source>
          <target state="translated">HttpStatus.notFound</target>
        </trans-unit>
        <trans-unit id="2f2126068b7ae93649783c20cc697c3c6065e04e" translate="yes" xml:space="preserve">
          <source>HttpStatus.notImplemented</source>
          <target state="translated">HttpStatus.notImplemented</target>
        </trans-unit>
        <trans-unit id="198f126037aa80664a507500e5b36841317cc729" translate="yes" xml:space="preserve">
          <source>HttpStatus.notModified</source>
          <target state="translated">HttpStatus.notModified</target>
        </trans-unit>
        <trans-unit id="e70868b770e592ec7225c5a3e74776da77e3b944" translate="yes" xml:space="preserve">
          <source>HttpStatus.ok</source>
          <target state="translated">HttpStatus.ok</target>
        </trans-unit>
        <trans-unit id="f46ca162685151d2504f7a26e966158dba9c4776" translate="yes" xml:space="preserve">
          <source>HttpStatus.partialContent</source>
          <target state="translated">HttpStatus.partialContent</target>
        </trans-unit>
        <trans-unit id="8b9d489ee4d465ba0cf45c1fca5bccaa08e39fa7" translate="yes" xml:space="preserve">
          <source>HttpStatus.paymentRequired</source>
          <target state="translated">HttpStatus.paymentRequired</target>
        </trans-unit>
        <trans-unit id="d1d926ff98090466a3ab1dcbc53a138e5efe0258" translate="yes" xml:space="preserve">
          <source>HttpStatus.permanentRedirect</source>
          <target state="translated">HttpStatus.permanentRedirect</target>
        </trans-unit>
        <trans-unit id="e0f6d4a1c0eaeaf6e108ce3153a3a90f4c8d7999" translate="yes" xml:space="preserve">
          <source>HttpStatus.preconditionFailed</source>
          <target state="translated">HttpStatus.preconditionFailed</target>
        </trans-unit>
        <trans-unit id="004a283fcb6721b32492da1d1755449204eb18c4" translate="yes" xml:space="preserve">
          <source>HttpStatus.preconditionRequired</source>
          <target state="translated">HttpStatus.preconditionRequired</target>
        </trans-unit>
        <trans-unit id="2e70e9378f96be4505ed07fb6b5521000ef0a652" translate="yes" xml:space="preserve">
          <source>HttpStatus.processing</source>
          <target state="translated">HttpStatus.processing</target>
        </trans-unit>
        <trans-unit id="e1d737f9b27f29e68e746ade6f0cb446f9c99108" translate="yes" xml:space="preserve">
          <source>HttpStatus.proxyAuthenticationRequired</source>
          <target state="translated">HttpStatus.proxyAuthenticationRequired</target>
        </trans-unit>
        <trans-unit id="4e303123b8c8bc323b4b7d79f597c68d8e1e4dee" translate="yes" xml:space="preserve">
          <source>HttpStatus.requestEntityTooLarge</source>
          <target state="translated">HttpStatus.requestEntityTooLarge</target>
        </trans-unit>
        <trans-unit id="b2fd51cb30db2e060a023599c4e5813e61215cfa" translate="yes" xml:space="preserve">
          <source>HttpStatus.requestHeaderFieldsTooLarge</source>
          <target state="translated">HttpStatus.requestHeaderFieldsTooLarge</target>
        </trans-unit>
        <trans-unit id="1cc8d60205e49283e90aa1f428acb1a6d8887069" translate="yes" xml:space="preserve">
          <source>HttpStatus.requestTimeout</source>
          <target state="translated">HttpStatus.requestTimeout</target>
        </trans-unit>
        <trans-unit id="97efea561c62e0032222c132b82e94fbde740dbc" translate="yes" xml:space="preserve">
          <source>HttpStatus.requestUriTooLong</source>
          <target state="translated">HttpStatus.requestUriTooLong</target>
        </trans-unit>
        <trans-unit id="d5a94210a7aad6048a41b58a03610908c6c2f830" translate="yes" xml:space="preserve">
          <source>HttpStatus.requestedRangeNotSatisfiable</source>
          <target state="translated">HttpStatus.requestedRangeNotSatisfiable</target>
        </trans-unit>
        <trans-unit id="2c21731ab62dd5af4b28d4d1fbb03de44f6a7a1d" translate="yes" xml:space="preserve">
          <source>HttpStatus.resetContent</source>
          <target state="translated">HttpStatus.resetContent</target>
        </trans-unit>
        <trans-unit id="9ae487441d7df22f1e576cf88d4d3162f0912366" translate="yes" xml:space="preserve">
          <source>HttpStatus.seeOther</source>
          <target state="translated">HttpStatus.seeOther</target>
        </trans-unit>
        <trans-unit id="b7414efb6794d4becba7178933b814433832dcf1" translate="yes" xml:space="preserve">
          <source>HttpStatus.serviceUnavailable</source>
          <target state="translated">HttpStatus.serviceUnavailable</target>
        </trans-unit>
        <trans-unit id="0d93c8bc08e7af0743e3243419a952306e471bdd" translate="yes" xml:space="preserve">
          <source>HttpStatus.switchingProtocols</source>
          <target state="translated">HttpStatus.switchingProtocols</target>
        </trans-unit>
        <trans-unit id="c71f5dc49bb05068af84e6fc608d3815c3b012e1" translate="yes" xml:space="preserve">
          <source>HttpStatus.temporaryRedirect</source>
          <target state="translated">HttpStatus.temporaryRedirect</target>
        </trans-unit>
        <trans-unit id="d6f8b0b9f457185e57982c14c1e8e644ccede8f1" translate="yes" xml:space="preserve">
          <source>HttpStatus.tooManyRequests</source>
          <target state="translated">HttpStatus.tooManyRequests</target>
        </trans-unit>
        <trans-unit id="9fddede48d4c6769cf56b51b3223399f2f865045" translate="yes" xml:space="preserve">
          <source>HttpStatus.unavailableForLegalReasons</source>
          <target state="translated">HttpStatus.unavailableForLegalReasons</target>
        </trans-unit>
        <trans-unit id="25af7ad6c01b9ddd9bbe2c0198c91599d11bae47" translate="yes" xml:space="preserve">
          <source>HttpStatus.unprocessableEntity</source>
          <target state="translated">HttpStatus.unprocessableEntity</target>
        </trans-unit>
        <trans-unit id="1a149902f8787f03c4049b1521b334085a9f0768" translate="yes" xml:space="preserve">
          <source>HttpStatus.unsupportedMediaType</source>
          <target state="translated">HttpStatus.unsupportedMediaType</target>
        </trans-unit>
        <trans-unit id="a7af55fa43f99678374b5b3fe67346cfee4a497e" translate="yes" xml:space="preserve">
          <source>HttpStatus.upgradeRequired</source>
          <target state="translated">HttpStatus.upgradeRequired</target>
        </trans-unit>
        <trans-unit id="ed686d969afea16b2fe7f60ce516aa010aba7914" translate="yes" xml:space="preserve">
          <source>HttpStatus.useProxy</source>
          <target state="translated">HttpStatus.useProxy</target>
        </trans-unit>
        <trans-unit id="0424c278155d28a6619c07ab6e49b9d85060f47c" translate="yes" xml:space="preserve">
          <source>HttpStatus.variantAlsoNegotiates</source>
          <target state="translated">HttpStatus.variantAlsoNegotiates</target>
        </trans-unit>
        <trans-unit id="d3421eec59fce74a049953527714df83ef465c18" translate="yes" xml:space="preserve">
          <source>Hz method</source>
          <target state="translated">ヘルツ法</target>
        </trans-unit>
        <trans-unit id="95ae03a1ccdbead1adce5eee6ed4c272f7cb9a27" translate="yes" xml:space="preserve">
          <source>Hz method Null safety</source>
          <target state="translated">Hz方式 ヌル安全</target>
        </trans-unit>
        <trans-unit id="ca73ab65568cd125c2d27a22bbd9e863c10b675d" translate="yes" xml:space="preserve">
          <source>I</source>
          <target state="translated">I</target>
        </trans-unit>
        <trans-unit id="06879c201c1cbad1d2073e0854447b6f1bbbca63" translate="yes" xml:space="preserve">
          <source>I constant</source>
          <target state="translated">吾輩定数</target>
        </trans-unit>
        <trans-unit id="cb9598daaddbd973945e9ad79a35dc06c860e2e4" translate="yes" xml:space="preserve">
          <source>I constant Null safety</source>
          <target state="translated">私は一定のヌル安全</target>
        </trans-unit>
        <trans-unit id="d0b7061cf4ff46f6315872f7b8d31c2006cb56c6" translate="yes" xml:space="preserve">
          <source>I/O operations can block a program for some period of time while it waits for the operation to complete. To avoid this, all methods involving I/O have an asynchronous variant which returns a &lt;a href=&quot;../dart-async/future-class&quot;&gt;Future&lt;/a&gt;. This future completes when the I/O operation finishes. While the I/O operation is in progress, the Dart program is not blocked, and can perform other operations.</source>
          <target state="translated">入出力操作は、操作が完了するのを待つ間、プログラムを一定期間ブロックする可能性があります。これを回避するために、I / Oを含むすべてのメソッドには、&lt;a href=&quot;../dart-async/future-class&quot;&gt;Future&lt;/a&gt;を返す非同期バリアントがあります。この未来は、I / O操作が完了すると完了します。 I / O操作の進行中、Dartプログラムはブロックされず、他の操作を実行できます。</target>
        </trans-unit>
        <trans-unit id="ba5a4734f59042fccb7393277b744d304f9ae3e4" translate="yes" xml:space="preserve">
          <source>IDLE constant</source>
          <target state="translated">アイディーエルていすう</target>
        </trans-unit>
        <trans-unit id="9ee0126cc79ab3508067b901c7df92d015f92686" translate="yes" xml:space="preserve">
          <source>IDLE constant Null safety</source>
          <target state="translated">IDLE定数 ヌル安全</target>
        </trans-unit>
        <trans-unit id="fa3b6b254f4c2eeca845b8355bd71e8ee205f8ca" translate="yes" xml:space="preserve">
          <source>IF_MATCH constant</source>
          <target state="translated">イフマッチ定数</target>
        </trans-unit>
        <trans-unit id="63f893b8fd3fc9f869f673bdf1c48205d0a7a19d" translate="yes" xml:space="preserve">
          <source>IF_MATCH constant Null safety</source>
          <target state="translated">IF_MATCH定数 ヌル安全</target>
        </trans-unit>
        <trans-unit id="1cf3da7f0feaac41e9097a6b5afe17020165e18f" translate="yes" xml:space="preserve">
          <source>IF_MODIFIED_SINCE constant</source>
          <target state="translated">IF_MODIFIED_SINCE定数</target>
        </trans-unit>
        <trans-unit id="1861d7463dfda04806b90da255156c9758422e5c" translate="yes" xml:space="preserve">
          <source>IF_MODIFIED_SINCE constant Null safety</source>
          <target state="translated">IF_MODIFIED_SINCE 定数 NULL 安全性</target>
        </trans-unit>
        <trans-unit id="1c519b256f4988e1b0ac92dc0ef5ad404b9763d2" translate="yes" xml:space="preserve">
          <source>IF_NONE_MATCH constant</source>
          <target state="translated">IF_NONE_MATCH定数</target>
        </trans-unit>
        <trans-unit id="097637671823369a20c7e972d583b2f6981a513a" translate="yes" xml:space="preserve">
          <source>IF_NONE_MATCH constant Null safety</source>
          <target state="translated">IF_NONE_MATCH 定数 ヌル安全</target>
        </trans-unit>
        <trans-unit id="c85ed1ebafbdc4552614d8ff94e36a6f4d03aa57" translate="yes" xml:space="preserve">
          <source>IF_RANGE constant</source>
          <target state="translated">イフレンジ定数</target>
        </trans-unit>
        <trans-unit id="a150530dc157e17c8a28f8ef02d8087aaf54657b" translate="yes" xml:space="preserve">
          <source>IF_RANGE constant Null safety</source>
          <target state="translated">IF_RANGE定数 ヌル安全</target>
        </trans-unit>
        <trans-unit id="27d7ac2683d7c5f311d022c157ec6bd5454470fd" translate="yes" xml:space="preserve">
          <source>IF_UNMODIFIED_SINCE constant</source>
          <target state="translated">IF_UNMODIFIED_SINCE定数</target>
        </trans-unit>
        <trans-unit id="4d5dd0c7190aa42182b5b5b044c4121fcb304f49" translate="yes" xml:space="preserve">
          <source>IF_UNMODIFIED_SINCE constant Null safety</source>
          <target state="translated">IF_UNMODIFIED_SINCE 定数 NULL 安全性</target>
        </trans-unit>
        <trans-unit id="3b42fbd4e8be0d31e116eebd4bb26d6bb086a089" translate="yes" xml:space="preserve">
          <source>IFrameElement</source>
          <target state="translated">IFrameElement</target>
        </trans-unit>
        <trans-unit id="4a027815e5a5e1f6d43b3249280e783ba7a9e00c" translate="yes" xml:space="preserve">
          <source>IFrameElement class</source>
          <target state="translated">IFrameElementクラス</target>
        </trans-unit>
        <trans-unit id="7d05d54e6ba42b658df13adc14f0014c516edd58" translate="yes" xml:space="preserve">
          <source>IFrameElement class Null safety</source>
          <target state="translated">IFrameElement クラス Null 安全</target>
        </trans-unit>
        <trans-unit id="396c1fa88550eac121b3589649a3823092f82f79" translate="yes" xml:space="preserve">
          <source>IFrameElement constructor</source>
          <target state="translated">IFrameElement コンストラクタ</target>
        </trans-unit>
        <trans-unit id="6325af7ac2720a96d94f15c68bd6540649365618" translate="yes" xml:space="preserve">
          <source>IFrameElement constructor Null safety</source>
          <target state="translated">IFrameElement コンストラクタ Null 安全</target>
        </trans-unit>
        <trans-unit id="7aa86452320cc7873f4887f8b59a8c5d0291d2eb" translate="yes" xml:space="preserve">
          <source>IFrameElement(</source>
          <target state="translated">IFrameElement(</target>
        </trans-unit>
        <trans-unit id="3ec84feb93fde66f4abbb6cc87d480df66c7d808" translate="yes" xml:space="preserve">
          <source>IFrameElement.IFrameElement</source>
          <target state="translated">IFrameElement.IFrameElement</target>
        </trans-unit>
        <trans-unit id="2c1c4014aa2b9b61ab88f00457cf33a2be8dd8b8" translate="yes" xml:space="preserve">
          <source>IFrameElement.IFrameElement.created</source>
          <target state="translated">IFrameElement.IFrameElement.created</target>
        </trans-unit>
        <trans-unit id="e7b40acab4d160638f7d352a2ac0e5c3ef2b2805" translate="yes" xml:space="preserve">
          <source>IFrameElement.allow</source>
          <target state="translated">IFrameElement.allow</target>
        </trans-unit>
        <trans-unit id="bf228a8a1281147c879424afbf09f2b571b410ba" translate="yes" xml:space="preserve">
          <source>IFrameElement.allowFullscreen</source>
          <target state="translated">IFrameElement.allowFullscreen</target>
        </trans-unit>
        <trans-unit id="b712996bf835b302ab1727063bb7fc2eae7f92f9" translate="yes" xml:space="preserve">
          <source>IFrameElement.allowPaymentRequest</source>
          <target state="translated">IFrameElement.allowPaymentRequest</target>
        </trans-unit>
        <trans-unit id="a9ce22ae2920ea7b87d25da6f0abeb78076996c0" translate="yes" xml:space="preserve">
          <source>IFrameElement.contentWindow</source>
          <target state="translated">IFrameElement.contentWindow</target>
        </trans-unit>
        <trans-unit id="7b21b04567d0152f0816d88ec4b716ba61c8ffb5" translate="yes" xml:space="preserve">
          <source>IFrameElement.created constructor</source>
          <target state="translated">IFrameElement.created コンストラクタ</target>
        </trans-unit>
        <trans-unit id="c8b371a5b278836446df96ec51ef4a391e6f4e87" translate="yes" xml:space="preserve">
          <source>IFrameElement.created constructor Null safety</source>
          <target state="translated">IFrameElement.created コンストラクタ Null 安全性</target>
        </trans-unit>
        <trans-unit id="5b1d5e0d4d0c4e72b3decf237a9acd2bac067064" translate="yes" xml:space="preserve">
          <source>IFrameElement.created(</source>
          <target state="translated">IFrameElement.created(</target>
        </trans-unit>
        <trans-unit id="c909b627242bb4f76dba5181899fa446ebe33fb1" translate="yes" xml:space="preserve">
          <source>IFrameElement.csp</source>
          <target state="translated">IFrameElement.csp</target>
        </trans-unit>
        <trans-unit id="1e14dacc49242f3c8f18b32d92ec70a4ba7c279c" translate="yes" xml:space="preserve">
          <source>IFrameElement.height</source>
          <target state="translated">IFrameElement.height</target>
        </trans-unit>
        <trans-unit id="753020f0c3bb736a80220d18c7935b9dea37a36a" translate="yes" xml:space="preserve">
          <source>IFrameElement.name</source>
          <target state="translated">IFrameElement.name</target>
        </trans-unit>
        <trans-unit id="6e4d4ecdabded817547dd1c4444e8e438e2a09a5" translate="yes" xml:space="preserve">
          <source>IFrameElement.referrerPolicy</source>
          <target state="translated">IFrameElement.referrerPolicy</target>
        </trans-unit>
        <trans-unit id="0a9ddee9e93c88b13b23271ff180baf973d7240e" translate="yes" xml:space="preserve">
          <source>IFrameElement.sandbox</source>
          <target state="translated">IFrameElement.sandbox</target>
        </trans-unit>
        <trans-unit id="7b599e9338c3af8c9c8915ef9d9a8c04fa1bed03" translate="yes" xml:space="preserve">
          <source>IFrameElement.src</source>
          <target state="translated">IFrameElement.src</target>
        </trans-unit>
        <trans-unit id="72d5a45cac38c60082059dd25e660952f4c3a161" translate="yes" xml:space="preserve">
          <source>IFrameElement.srcdoc</source>
          <target state="translated">IFrameElement.srcdoc</target>
        </trans-unit>
        <trans-unit id="5a094c465bfe9d9c684422c9c19eca4653438650" translate="yes" xml:space="preserve">
          <source>IFrameElement.width</source>
          <target state="translated">IFrameElement.width</target>
        </trans-unit>
        <trans-unit id="ce65c157c4cf8510ff79689bc13dbbc2c69a907f" translate="yes" xml:space="preserve">
          <source>IMPLEMENTATION_COLOR_READ_FORMAT constant</source>
          <target state="translated">IMPLEMENTATION_COLOR_READ_FORMAT定数</target>
        </trans-unit>
        <trans-unit id="e3bfce0d01118eb8f610e3e2966f1f7ef05d6dff" translate="yes" xml:space="preserve">
          <source>IMPLEMENTATION_COLOR_READ_FORMAT constant Null safety</source>
          <target state="translated">IMPLEMENTATION_COLOR_READ_FORMAT 定数 ヌル安全</target>
        </trans-unit>
        <trans-unit id="2bbc3538e1a2ad4c078cfc3d86e74aa48e3c381d" translate="yes" xml:space="preserve">
          <source>IMPLEMENTATION_COLOR_READ_TYPE constant</source>
          <target state="translated">IMPLEMENTATION_COLOR_READ_TYPE定数</target>
        </trans-unit>
        <trans-unit id="7ce688b4619eb20248f055449a8dd3fc8ebf88e5" translate="yes" xml:space="preserve">
          <source>IMPLEMENTATION_COLOR_READ_TYPE constant Null safety</source>
          <target state="translated">IMPLEMENTATION_COLOR_READ_TYPE 定数 ヌル安全</target>
        </trans-unit>
        <trans-unit id="58a79d9d655016f5fe8a45e5f121180eaccf09ef" translate="yes" xml:space="preserve">
          <source>IMPORT_RULE constant</source>
          <target state="translated">IMPORT_RULE定数</target>
        </trans-unit>
        <trans-unit id="afb2fc83e3aed423de208497672f9f0cdf434ce2" translate="yes" xml:space="preserve">
          <source>IMPORT_RULE constant Null safety</source>
          <target state="translated">IMPORT_RULE定数 ヌル安全</target>
        </trans-unit>
        <trans-unit id="2663df10ff7ecd1e943bbfe913e0e16cf76527eb" translate="yes" xml:space="preserve">
          <source>INCR constant</source>
          <target state="translated">INCR定数</target>
        </trans-unit>
        <trans-unit id="521f4c996bdb3466a57da15c122dcce7a08e1f1a" translate="yes" xml:space="preserve">
          <source>INCR constant Null safety</source>
          <target state="translated">INCR定数 ヌル安全</target>
        </trans-unit>
        <trans-unit id="ac818b5d5fa3a20b3ab947c19b2f10dd97dbd8c1" translate="yes" xml:space="preserve">
          <source>INCR_WRAP constant</source>
          <target state="translated">INCR_WRAP定数</target>
        </trans-unit>
        <trans-unit id="6d1df1a774aeb654089e148a6349eeaa75a7e121" translate="yes" xml:space="preserve">
          <source>INCR_WRAP constant Null safety</source>
          <target state="translated">INCR_WRAP定数 ヌル安全</target>
        </trans-unit>
        <trans-unit id="80f32c9d2096be43d39b6a5fed0438d4dc731f74" translate="yes" xml:space="preserve">
          <source>INDEX_SIZE constant</source>
          <target state="translated">INDEX_SIZE定数</target>
        </trans-unit>
        <trans-unit id="e07cb4f5bc188e706b291056160f0c355657beb8" translate="yes" xml:space="preserve">
          <source>INDEX_SIZE constant Null safety</source>
          <target state="translated">INDEX_SIZE定数 ヌル安全</target>
        </trans-unit>
        <trans-unit id="0087595bea4a05b56c02d185fb73949ca7e28b26" translate="yes" xml:space="preserve">
          <source>INHERIT_STDIO constant</source>
          <target state="translated">INHERIT_STDIO定数</target>
        </trans-unit>
        <trans-unit id="771a131dd7a669f3245da41fcbd2cbdce319aaea" translate="yes" xml:space="preserve">
          <source>INHERIT_STDIO constant Null safety</source>
          <target state="translated">INHERIT_STDIO定数 ヌル安全</target>
        </trans-unit>
        <trans-unit id="6123cc9aa6a99729f6c2dfc32774e3fc77c05e36" translate="yes" xml:space="preserve">
          <source>INIT constant</source>
          <target state="translated">イニット定数</target>
        </trans-unit>
        <trans-unit id="8f4ea5e2f1acadc4d78b2252202475a94384b220" translate="yes" xml:space="preserve">
          <source>INIT constant Null safety</source>
          <target state="translated">INIT 定数 ヌル安全</target>
        </trans-unit>
        <trans-unit id="90030eb550be7371b2497efaa5f118fc77f683d7" translate="yes" xml:space="preserve">
          <source>INSERT constant</source>
          <target state="translated">インサート定数</target>
        </trans-unit>
        <trans-unit id="5fa61aaffda3e0fd07d101d5dffd169a078cabc1" translate="yes" xml:space="preserve">
          <source>INSERT constant Null safety</source>
          <target state="translated">INSERT定数 ヌル安全</target>
        </trans-unit>
        <trans-unit id="de31d031a5d62626f13d57f94d6e3552a4f32f54" translate="yes" xml:space="preserve">
          <source>INT constant</source>
          <target state="translated">INT定数</target>
        </trans-unit>
        <trans-unit id="bc8df9386cfe051086af31a4f3cdf444d606fa14" translate="yes" xml:space="preserve">
          <source>INT constant Null safety</source>
          <target state="translated">INT 定数 ヌル安全</target>
        </trans-unit>
        <trans-unit id="d3597ad1ad5cc17ec2c003edb6a01385b844d394" translate="yes" xml:space="preserve">
          <source>INTERACTIVE constant</source>
          <target state="translated">インターアクティブ定数</target>
        </trans-unit>
        <trans-unit id="3dc04c45a00897cc2ffee80e3bc0c1b580701fec" translate="yes" xml:space="preserve">
          <source>INTERACTIVE constant Null safety</source>
          <target state="translated">INTERACTIVE定数 ヌル安全</target>
        </trans-unit>
        <trans-unit id="b5e60f2b51777244c511fd7a24b0e099772fb6b2" translate="yes" xml:space="preserve">
          <source>INTERLEAVED_ATTRIBS constant</source>
          <target state="translated">INTERLEAVED_ATTRIBS定数</target>
        </trans-unit>
        <trans-unit id="0cad38047c6de7fd6ba6834a4b2c79db108ff262" translate="yes" xml:space="preserve">
          <source>INTERLEAVED_ATTRIBS constant Null safety</source>
          <target state="translated">INTERLEAVED_ATTRIBS 定数 NULL 安全性</target>
        </trans-unit>
        <trans-unit id="6c51c8f59d89a6fd801b1b76720911d1cf9451de" translate="yes" xml:space="preserve">
          <source>INTERNAL_SERVER_ERROR constant</source>
          <target state="translated">INTERNAL_SERVER_ERROR定数</target>
        </trans-unit>
        <trans-unit id="dbc71e6a6d345ac36400c8edec504e2c597cbada" translate="yes" xml:space="preserve">
          <source>INTERNAL_SERVER_ERROR constant Null safety</source>
          <target state="translated">INTERNAL_SERVER_ERROR 定数 NULL 安全性</target>
        </trans-unit>
        <trans-unit id="084f243ce55f2d453157c35f4139c2cbdff207cc" translate="yes" xml:space="preserve">
          <source>INT_2_10_10_10_REV constant</source>
          <target state="translated">INT_2_10_10_10_10_REV定数</target>
        </trans-unit>
        <trans-unit id="810a4b19105f45cab45b9d683167f190303d89f2" translate="yes" xml:space="preserve">
          <source>INT_2_10_10_10_REV constant Null safety</source>
          <target state="translated">INT_2_10_10_10_10_REV 定数 ヌル安全</target>
        </trans-unit>
        <trans-unit id="c79f3e5880ca712bf42e7b7e6bdf7655bd1b90fc" translate="yes" xml:space="preserve">
          <source>INT_SAMPLER_2D constant</source>
          <target state="translated">INT_SAMPLER_2D定数</target>
        </trans-unit>
        <trans-unit id="a5945aafeaf0584d5a954f9b79c5399ada365ebb" translate="yes" xml:space="preserve">
          <source>INT_SAMPLER_2D constant Null safety</source>
          <target state="translated">INT_SAMPLER_2D 定数 ヌル安全</target>
        </trans-unit>
        <trans-unit id="d6c561981fe7cd42d9d4fa29f316ce2e2640995c" translate="yes" xml:space="preserve">
          <source>INT_SAMPLER_2D_ARRAY constant</source>
          <target state="translated">INT_SAMPLER_2D_ARRAY定数</target>
        </trans-unit>
        <trans-unit id="fc4513cc1b714a13478a9cf68e1b8ab20e97ca64" translate="yes" xml:space="preserve">
          <source>INT_SAMPLER_2D_ARRAY constant Null safety</source>
          <target state="translated">INT_SAMPLER_2D_ARRAY定数 ヌル安全性</target>
        </trans-unit>
        <trans-unit id="a8552f31367240549ddcc00e3cc67879f78eb8c3" translate="yes" xml:space="preserve">
          <source>INT_SAMPLER_3D constant</source>
          <target state="translated">INT_SAMPLER_3D定数</target>
        </trans-unit>
        <trans-unit id="716458777e02161d04ba7e07c70eb704e8610002" translate="yes" xml:space="preserve">
          <source>INT_SAMPLER_3D constant Null safety</source>
          <target state="translated">INT_SAMPLER_3D 定数 ヌル安全</target>
        </trans-unit>
        <trans-unit id="abf0937807195996bd1605205a5a950f75f3e4c3" translate="yes" xml:space="preserve">
          <source>INT_SAMPLER_CUBE constant</source>
          <target state="translated">INT_SAMPLER_CUBE定数</target>
        </trans-unit>
        <trans-unit id="87604226406f00058af5d79d49a7122ece90b935" translate="yes" xml:space="preserve">
          <source>INT_SAMPLER_CUBE constant Null safety</source>
          <target state="translated">INT_SAMPLER_CUBE 定数 ヌル安全</target>
        </trans-unit>
        <trans-unit id="88b009354245eb5f45cbeeffdd472334ce44638e" translate="yes" xml:space="preserve">
          <source>INT_VEC2 constant</source>
          <target state="translated">INT_VEC2定数</target>
        </trans-unit>
        <trans-unit id="2db915e0a5f48b31936f47568e91ea504aee06d1" translate="yes" xml:space="preserve">
          <source>INT_VEC2 constant Null safety</source>
          <target state="translated">INT_VEC2 定数 ヌル安全</target>
        </trans-unit>
        <trans-unit id="f7b21e7ee9d8ebeef5cb3aa64db71a9c1b92d760" translate="yes" xml:space="preserve">
          <source>INT_VEC3 constant</source>
          <target state="translated">INT_VEC3定数</target>
        </trans-unit>
        <trans-unit id="15a57e06c64da38e20c16a4003ddea8c3448a211" translate="yes" xml:space="preserve">
          <source>INT_VEC3 constant Null safety</source>
          <target state="translated">INT_VEC3 定数 ヌル安全</target>
        </trans-unit>
        <trans-unit id="63e552398582878bf5a39dbabee0cd9a166a60fd" translate="yes" xml:space="preserve">
          <source>INT_VEC4 constant</source>
          <target state="translated">INT_VEC4定数</target>
        </trans-unit>
        <trans-unit id="881af40bbf7f7ecdd589b194ab76ac081920aae1" translate="yes" xml:space="preserve">
          <source>INT_VEC4 constant Null safety</source>
          <target state="translated">INT_VEC4定数 ヌル安全</target>
        </trans-unit>
        <trans-unit id="b227479d293a709686d282b90f3b52d0db318820" translate="yes" xml:space="preserve">
          <source>INVALID_ACCESS constant</source>
          <target state="translated">INVALID_ACCESS定数</target>
        </trans-unit>
        <trans-unit id="85de8c05d0e0f5762c11a0e51838a933a3d46093" translate="yes" xml:space="preserve">
          <source>INVALID_ACCESS constant Null safety</source>
          <target state="translated">INVALID_ACCESS 定数 NULL 安全性</target>
        </trans-unit>
        <trans-unit id="4ff1116877582de6d3da11f9c67c4c25073c948b" translate="yes" xml:space="preserve">
          <source>INVALID_CHARACTER constant</source>
          <target state="translated">INVALID_CHARACTER定数</target>
        </trans-unit>
        <trans-unit id="b77de49cbd8ecf85c19d838f3468ba8e334d43fa" translate="yes" xml:space="preserve">
          <source>INVALID_CHARACTER constant Null safety</source>
          <target state="translated">INVALID_CHARACTER 定数 NULL 安全性</target>
        </trans-unit>
        <trans-unit id="2c7b517dfc4b2e78fd58363a28f1eacbd9796ff4" translate="yes" xml:space="preserve">
          <source>INVALID_ENUM constant</source>
          <target state="translated">INVALID_ENUM定数</target>
        </trans-unit>
        <trans-unit id="daed264576997c7745d0cdd47568ae012e4befa8" translate="yes" xml:space="preserve">
          <source>INVALID_ENUM constant Null safety</source>
          <target state="translated">INVALID_ENUM 定数 ヌル安全</target>
        </trans-unit>
        <trans-unit id="0eda238cccd9df1c815b2fdea2cfd76247c4220d" translate="yes" xml:space="preserve">
          <source>INVALID_FRAMEBUFFER_OPERATION constant</source>
          <target state="translated">INVALID_FRAMEBUFFER_OPERATION定数</target>
        </trans-unit>
        <trans-unit id="436edc0aa002ff750de270a0b603f9d819977b73" translate="yes" xml:space="preserve">
          <source>INVALID_FRAMEBUFFER_OPERATION constant Null safety</source>
          <target state="translated">INVALID_FRAMEBUFFER_OPERATION 定数 NULL 安全性</target>
        </trans-unit>
        <trans-unit id="86cb91cc1b2423b57edd54dd3d5e4ea0230a6da1" translate="yes" xml:space="preserve">
          <source>INVALID_FRAME_PAYLOAD_DATA constant</source>
          <target state="translated">INVALID_FRAME_PAYLOAD_DATA定数</target>
        </trans-unit>
        <trans-unit id="1a86bf4985e6dc30e3406555a076edc970790306" translate="yes" xml:space="preserve">
          <source>INVALID_FRAME_PAYLOAD_DATA constant Null safety</source>
          <target state="translated">INVALID_FRAME_PAYLOAD_DATA 定数 NULL 安全性</target>
        </trans-unit>
        <trans-unit id="9290b059c6915b4f515b77d11c936058461ab0c8" translate="yes" xml:space="preserve">
          <source>INVALID_INDEX constant</source>
          <target state="translated">INVALID_INDEX定数</target>
        </trans-unit>
        <trans-unit id="9189d9db01752f931e9e0e1178aae6bad03aadd7" translate="yes" xml:space="preserve">
          <source>INVALID_INDEX constant Null safety</source>
          <target state="translated">INVALID_INDEX定数 ヌル安全</target>
        </trans-unit>
        <trans-unit id="468f7dea00e327d48046e0826efe919b5a4522ed" translate="yes" xml:space="preserve">
          <source>INVALID_MODIFICATION constant</source>
          <target state="translated">INVALID_MODIFICATION定数</target>
        </trans-unit>
        <trans-unit id="f5b337f4cc25484e3ba992628140da89af2046e2" translate="yes" xml:space="preserve">
          <source>INVALID_MODIFICATION constant Null safety</source>
          <target state="translated">INVALID_MODIFICATION 定数 NULL 安全性</target>
        </trans-unit>
        <trans-unit id="3514347f5de13a75502a370898dd69ce3b7c0309" translate="yes" xml:space="preserve">
          <source>INVALID_NODE_TYPE constant</source>
          <target state="translated">INVALID_NODE_TYPE定数</target>
        </trans-unit>
        <trans-unit id="817d90335a055ab2f594ffcad8656f84b95344aa" translate="yes" xml:space="preserve">
          <source>INVALID_NODE_TYPE constant Null safety</source>
          <target state="translated">INVALID_NODE_TYPE 定数 NULL 安全性</target>
        </trans-unit>
        <trans-unit id="01d5636f5df97a2dc6958ff697803f3efbe4bbb4" translate="yes" xml:space="preserve">
          <source>INVALID_OPERATION constant</source>
          <target state="translated">INVALID_OPERATION定数</target>
        </trans-unit>
        <trans-unit id="168df8c2c8cbbafe76158e5333828047195ca2e9" translate="yes" xml:space="preserve">
          <source>INVALID_OPERATION constant Null safety</source>
          <target state="translated">INVALID_OPERATION 定数 ヌル安全</target>
        </trans-unit>
        <trans-unit id="99a396f90bab973cbdcdeb0941cad13affff30d9" translate="yes" xml:space="preserve">
          <source>INVALID_STATE constant</source>
          <target state="translated">INVALID_STATE定数</target>
        </trans-unit>
        <trans-unit id="9e5cf48f670e3af5b2994e96194505b21d938e7d" translate="yes" xml:space="preserve">
          <source>INVALID_STATE constant Null safety</source>
          <target state="translated">INVALID_STATE 定数 NULL 安全性</target>
        </trans-unit>
        <trans-unit id="3e186c5fa70a3e2023e1c5cc230ccd3f634871a6" translate="yes" xml:space="preserve">
          <source>INVALID_VALUE constant</source>
          <target state="translated">INVALID_VALUE定数</target>
        </trans-unit>
        <trans-unit id="e48d5eb134e61985af7b32e8c1068d7d8f8a5928" translate="yes" xml:space="preserve">
          <source>INVALID_VALUE constant Null safety</source>
          <target state="translated">INVALID_VALUE 定数 ヌル安全</target>
        </trans-unit>
        <trans-unit id="887ef5502aa30304f07a787024a74719c66204dd" translate="yes" xml:space="preserve">
          <source>INVERT constant</source>
          <target state="translated">インバート定数</target>
        </trans-unit>
        <trans-unit id="cdfad9c42df028f972bd4e240e1bdd5d40544ab3" translate="yes" xml:space="preserve">
          <source>INVERT constant Null safety</source>
          <target state="translated">INVERT 定数 ヌル安全</target>
        </trans-unit>
        <trans-unit id="319a21ad8b671794467e4935946062d4d1e04338" translate="yes" xml:space="preserve">
          <source>IOException</source>
          <target state="translated">IOException</target>
        </trans-unit>
        <trans-unit id="6daf00b4e6f3ccd54ae607f994d994670e816336" translate="yes" xml:space="preserve">
          <source>IOException class</source>
          <target state="translated">IOException クラス</target>
        </trans-unit>
        <trans-unit id="1cf8d3de9b4cb50cfb490b87169a65b5cb9c33c9" translate="yes" xml:space="preserve">
          <source>IOException class Null safety</source>
          <target state="translated">IOExceptionクラスNullの安全性</target>
        </trans-unit>
        <trans-unit id="974b0c8384b9233f395d376d5624f32b5691a914" translate="yes" xml:space="preserve">
          <source>IOException constructor</source>
          <target state="translated">IOExceptionコンストラクタ</target>
        </trans-unit>
        <trans-unit id="c43e33c37eeed7a530f88cba8bfe2729f3fc6614" translate="yes" xml:space="preserve">
          <source>IOException constructor Null safety</source>
          <target state="translated">IOException コンストラクタ Null 安全性</target>
        </trans-unit>
        <trans-unit id="26dd24427c09cb18484353399777c970523301ba" translate="yes" xml:space="preserve">
          <source>IOException(</source>
          <target state="translated">IOException(</target>
        </trans-unit>
        <trans-unit id="6780091f9c9c2b949e519e813dd8382ef2f8e1be" translate="yes" xml:space="preserve">
          <source>IOException.IOException</source>
          <target state="translated">IOException.IOException</target>
        </trans-unit>
        <trans-unit id="0fb652b1d1a913e6278f7e3cdce70050bf7466ab" translate="yes" xml:space="preserve">
          <source>IOException.toString</source>
          <target state="translated">IOException.toString</target>
        </trans-unit>
        <trans-unit id="6191e53b233f3dd82d534eddf0424e023691180a" translate="yes" xml:space="preserve">
          <source>IOOverrides</source>
          <target state="translated">IOOverrides</target>
        </trans-unit>
        <trans-unit id="84fb77a2a74226d230b98ae9acf3a9972cf67641" translate="yes" xml:space="preserve">
          <source>IOOverrides class</source>
          <target state="translated">IOOverrides クラス</target>
        </trans-unit>
        <trans-unit id="8a48d55a6421185fabcfb69140acaa5874134874" translate="yes" xml:space="preserve">
          <source>IOOverrides class Null safety</source>
          <target state="translated">IOOverrides クラス Null 安全性</target>
        </trans-unit>
        <trans-unit id="f777933e45792faf9d1ea27a9866d61309ca4ebc" translate="yes" xml:space="preserve">
          <source>IOOverrides constructor</source>
          <target state="translated">IOOverrides コンストラクタ</target>
        </trans-unit>
        <trans-unit id="784f4fe28e31fa5267539ffcf995a6afe0901735" translate="yes" xml:space="preserve">
          <source>IOOverrides constructor Null safety</source>
          <target state="translated">IOOverrides コンストラクタ Null 安全性</target>
        </trans-unit>
        <trans-unit id="56c13cc6f4d58abe44fae9d7987904999592474b" translate="yes" xml:space="preserve">
          <source>IOOverrides(</source>
          <target state="translated">IOOverrides(</target>
        </trans-unit>
        <trans-unit id="0f0f12a946a1d994fb358995218ce5810c4f73e0" translate="yes" xml:space="preserve">
          <source>IOOverrides.IOOverrides</source>
          <target state="translated">IOOverrides.IOOverrides</target>
        </trans-unit>
        <trans-unit id="dd24baa19e9c1243b624571b00f1367ea38cff29" translate="yes" xml:space="preserve">
          <source>IOOverrides.createDirectory</source>
          <target state="translated">IOOverrides.createDirectory</target>
        </trans-unit>
        <trans-unit id="82c115469905746be5d81e30cf3c71214e161c62" translate="yes" xml:space="preserve">
          <source>IOOverrides.createFile</source>
          <target state="translated">IOOverrides.createFile</target>
        </trans-unit>
        <trans-unit id="bfb7885e3ae57f35c1d87e4deb7fd9302258c780" translate="yes" xml:space="preserve">
          <source>IOOverrides.createLink</source>
          <target state="translated">IOOverrides.createLink</target>
        </trans-unit>
        <trans-unit id="246cb0fff6810cb536132064b897624eebc3aaf5" translate="yes" xml:space="preserve">
          <source>IOOverrides.current</source>
          <target state="translated">IOOverrides.current</target>
        </trans-unit>
        <trans-unit id="9a0c10c20db08bcdad6224131a3da90f399a8297" translate="yes" xml:space="preserve">
          <source>IOOverrides.fsWatch</source>
          <target state="translated">IOOverrides.fsWatch</target>
        </trans-unit>
        <trans-unit id="ab3918c545b55ef9606e3d5fcf8d0e0cd34ab036" translate="yes" xml:space="preserve">
          <source>IOOverrides.fsWatchIsSupported</source>
          <target state="translated">IOOverrides.fsWatchIsSupported</target>
        </trans-unit>
        <trans-unit id="73fa45d1e8656a78a16ac72096fd0f69dd865d81" translate="yes" xml:space="preserve">
          <source>IOOverrides.fseGetType</source>
          <target state="translated">IOOverrides.fseGetType</target>
        </trans-unit>
        <trans-unit id="fbb708e674c8fa29140c9f96459e184427fc487d" translate="yes" xml:space="preserve">
          <source>IOOverrides.fseGetTypeSync</source>
          <target state="translated">IOOverrides.fseGetTypeSync</target>
        </trans-unit>
        <trans-unit id="65cfd1a7b44ad4c62a3616d1a94d441d46a55fb9" translate="yes" xml:space="preserve">
          <source>IOOverrides.fseIdentical</source>
          <target state="translated">IOOverrides.fseIdentical</target>
        </trans-unit>
        <trans-unit id="eb0e0115afd5dce07d0343a1ad5c00c9d4ea6cdc" translate="yes" xml:space="preserve">
          <source>IOOverrides.fseIdenticalSync</source>
          <target state="translated">IOOverrides.fseIdenticalSync</target>
        </trans-unit>
        <trans-unit id="7d0a529d7a28f1161192f4b5722922b57cf7b9c2" translate="yes" xml:space="preserve">
          <source>IOOverrides.getCurrentDirectory</source>
          <target state="translated">IOOverrides.getCurrentDirectory</target>
        </trans-unit>
        <trans-unit id="7c1b8b53304c45f15014ff00a9aa4f0b68ffb19a" translate="yes" xml:space="preserve">
          <source>IOOverrides.getSystemTempDirectory</source>
          <target state="translated">IOOverrides.getSystemTempDirectory</target>
        </trans-unit>
        <trans-unit id="3e1e261d0a0326d2c0d3c1b02b52ebdb3fbd5ea5" translate="yes" xml:space="preserve">
          <source>IOOverrides.global</source>
          <target state="translated">IOOverrides.global</target>
        </trans-unit>
        <trans-unit id="f70746b56886155869e2ccb4741f9ad716661f6f" translate="yes" xml:space="preserve">
          <source>IOOverrides.runWithIOOverrides&amp;lt;R&amp;gt;</source>
          <target state="translated">IOOverrides.runWithIOOverrides&amp;lt;R&amp;gt;</target>
        </trans-unit>
        <trans-unit id="29708bb5e22c71dec4232cdfc70de4e6c8d366bb" translate="yes" xml:space="preserve">
          <source>IOOverrides.runZoned&amp;lt;R&amp;gt;</source>
          <target state="translated">IOOverrides.runZoned&amp;lt;R&amp;gt;</target>
        </trans-unit>
        <trans-unit id="efea8348901f66c8484248784f1d45019c71424e" translate="yes" xml:space="preserve">
          <source>IOOverrides.setCurrentDirectory</source>
          <target state="translated">IOOverrides.setCurrentDirectory</target>
        </trans-unit>
        <trans-unit id="f8afd7341ffe357f63393d46b1ee4a8f0c5e5645" translate="yes" xml:space="preserve">
          <source>IOOverrides.socketConnect</source>
          <target state="translated">IOOverrides.socketConnect</target>
        </trans-unit>
        <trans-unit id="c67906403d208bd2d8ffdec03ff2a00d914ada40" translate="yes" xml:space="preserve">
          <source>IOOverrides.socketStartConnect</source>
          <target state="translated">IOOverrides.socketStartConnect</target>
        </trans-unit>
        <trans-unit id="dbbc12a877b1b8559507a5a0b1512016141d8e3a" translate="yes" xml:space="preserve">
          <source>IOOverrides.stat</source>
          <target state="translated">IOOverrides.stat</target>
        </trans-unit>
        <trans-unit id="4fc0c0b7bded65bf43cfb830a802a1d21104fd9a" translate="yes" xml:space="preserve">
          <source>IOOverrides.statSync</source>
          <target state="translated">IOOverrides.statSync</target>
        </trans-unit>
        <trans-unit id="d11b3d9235193991956896408d2dc0a3f8f718be" translate="yes" xml:space="preserve">
          <source>IOSink</source>
          <target state="translated">IOSink</target>
        </trans-unit>
        <trans-unit id="81084cc9a973012b8e0a055a4902c2b009ea43cc" translate="yes" xml:space="preserve">
          <source>IOSink class</source>
          <target state="translated">イオシンククラス</target>
        </trans-unit>
        <trans-unit id="7de9e9768f07ae7d10a31412de82e96b7a6e6e50" translate="yes" xml:space="preserve">
          <source>IOSink class Null safety</source>
          <target state="translated">IOSinkクラスのヌル安全</target>
        </trans-unit>
        <trans-unit id="aab266e82cf10d0f244122fb24a5fa0132d17e50" translate="yes" xml:space="preserve">
          <source>IOSink constructor</source>
          <target state="translated">イオシンクコンストラクタ</target>
        </trans-unit>
        <trans-unit id="d6f54efceea1576b4d555be2986c6518beb014a5" translate="yes" xml:space="preserve">
          <source>IOSink constructor Null safety</source>
          <target state="translated">IOSink コンストラクタ ヌルセーフ</target>
        </trans-unit>
        <trans-unit id="2d5da1d494f6f1434593cd3a54e0ef442dadea9c" translate="yes" xml:space="preserve">
          <source>IOSink(</source>
          <target state="translated">IOSink(</target>
        </trans-unit>
        <trans-unit id="6162d0c429aeafbf68a0a79ca7c42d915937a0e8" translate="yes" xml:space="preserve">
          <source>IOSink.IOSink</source>
          <target state="translated">IOSink.IOSink</target>
        </trans-unit>
        <trans-unit id="12d0c72dfc702ab4cbf2023244110882463a86ec" translate="yes" xml:space="preserve">
          <source>IOSink.add</source>
          <target state="translated">IOSink.add</target>
        </trans-unit>
        <trans-unit id="29ec8d19e3865521059e9aa85042a5979fb8fadf" translate="yes" xml:space="preserve">
          <source>IOSink.addError</source>
          <target state="translated">IOSink.addError</target>
        </trans-unit>
        <trans-unit id="0c722cdd8a244ee2b29ceb121c62335afc233c1a" translate="yes" xml:space="preserve">
          <source>IOSink.addStream</source>
          <target state="translated">IOSink.addStream</target>
        </trans-unit>
        <trans-unit id="f7c8742021e242b9c172f12f6f7575dd5b81a487" translate="yes" xml:space="preserve">
          <source>IOSink.close</source>
          <target state="translated">IOSink.close</target>
        </trans-unit>
        <trans-unit id="14a48b54d19e09c7aea58df29be04460d73a236a" translate="yes" xml:space="preserve">
          <source>IOSink.done</source>
          <target state="translated">IOSink.done</target>
        </trans-unit>
        <trans-unit id="3c4d3f76481ece544445a7e7bd737bb3dc7be8ba" translate="yes" xml:space="preserve">
          <source>IOSink.encoding</source>
          <target state="translated">IOSink.encoding</target>
        </trans-unit>
        <trans-unit id="2920ea5d637f6aba762cb03414ce2019ee601322" translate="yes" xml:space="preserve">
          <source>IOSink.flush</source>
          <target state="translated">IOSink.flush</target>
        </trans-unit>
        <trans-unit id="d08665c56bd42dd19db720a0f67497db06597bc9" translate="yes" xml:space="preserve">
          <source>IOSink.write</source>
          <target state="translated">IOSink.write</target>
        </trans-unit>
        <trans-unit id="01ca004506a3d48e6eca109ee24b6ecde6fbe137" translate="yes" xml:space="preserve">
          <source>IOSink.writeAll</source>
          <target state="translated">IOSink.writeAll</target>
        </trans-unit>
        <trans-unit id="2361692cd4fc9c18eebbf53ea5da821485b6ccf7" translate="yes" xml:space="preserve">
          <source>IOSink.writeCharCode</source>
          <target state="translated">IOSink.writeCharCode</target>
        </trans-unit>
        <trans-unit id="fd76c92982e65e41bb7e012e4fdaff055bf43da1" translate="yes" xml:space="preserve">
          <source>IOSink.writeln</source>
          <target state="translated">IOSink.writeln</target>
        </trans-unit>
        <trans-unit id="06fd937d5637988eb79bd7e0421bc05cc99cbcfd" translate="yes" xml:space="preserve">
          <source>IP version 4 any address. Use this address when listening on all adapters IP addresses using IP version 4 (IPv4).</source>
          <target state="translated">IPバージョン4任意のアドレス。IPバージョン4(IPv4)を使用しているすべてのアダプタのIPアドレスでリッスンする場合は、このアドレスを使用します。</target>
        </trans-unit>
        <trans-unit id="e4e5ea7f093804fbe798d8f9c7faa7208a21ab79" translate="yes" xml:space="preserve">
          <source>IP version 4 loopback address. Use this address when listening on or connecting to the loopback adapter using IP version 4 (IPv4).</source>
          <target state="translated">IP バージョン 4 ループバックアドレス。IP バージョン 4 (IPv4)を使用してループバックアダプタをリッスンまたは接続する場合は、このアドレスを使用します。</target>
        </trans-unit>
        <trans-unit id="9a9a2d81ca8331c7318fba468f5efaf056c301c0" translate="yes" xml:space="preserve">
          <source>IP version 6 any address. Use this address when listening on all adapters IP addresses using IP version 6 (IPv6).</source>
          <target state="translated">IPバージョン6任意のアドレス。IPバージョン6(IPv6)を使用しているすべてのアダプタのIPアドレスでリッスンする場合は、このアドレスを使用します。</target>
        </trans-unit>
        <trans-unit id="93ba89ea398299f2850749cffae9914c74349a3b" translate="yes" xml:space="preserve">
          <source>IP version 6 loopback address. Use this address when listening on or connecting to the loopback adapter using IP version 6 (IPv6).</source>
          <target state="translated">IP バージョン 6 ループバックアドレス。IP バージョン 6 (IPv6)を使用してループバックアダプタをリッスンまたは接続する場合は、このアドレスを使用します。</target>
        </trans-unit>
        <trans-unit id="9167e0cbd416cda557029b6972643cf2bac197af" translate="yes" xml:space="preserve">
          <source>IP_V4 constant</source>
          <target state="translated">アイピーブイフォー定数</target>
        </trans-unit>
        <trans-unit id="4660a630311a91d8d34dbd4455ea6ac7eb1c9040" translate="yes" xml:space="preserve">
          <source>IP_V4 constant Null safety</source>
          <target state="translated">IP_V4定数 ヌル安全</target>
        </trans-unit>
        <trans-unit id="5ecf8321d6cc14cd3e534df7e947a613e5bbc2db" translate="yes" xml:space="preserve">
          <source>IP_V6 constant</source>
          <target state="translated">アイピーブイシックス定数</target>
        </trans-unit>
        <trans-unit id="020ded0f06a41a2343cfce23169279977c1e1568" translate="yes" xml:space="preserve">
          <source>IP_V6 constant Null safety</source>
          <target state="translated">IP_V6定数 ヌル安全</target>
        </trans-unit>
        <trans-unit id="8fb24145ea7c3af884c33b9e911d32b2955f9430" translate="yes" xml:space="preserve">
          <source>IPv4 broadcast needs to be enabled by the sender for sending IPv4 broadcast packages. By default IPv4 broadcast is disabled.</source>
          <target state="translated">IPv4ブロードキャストは、IPv4ブロードキャストパッケージを送信するために送信者が有効にする必要があります。デフォルトでは、IPv4ブロードキャストは無効になっています。</target>
        </trans-unit>
        <trans-unit id="84702ef26c0a8e76d3e75727115cca6fee80e0c2" translate="yes" xml:space="preserve">
          <source>IPv4 constant</source>
          <target state="translated">アイピーブイフォー定数</target>
        </trans-unit>
        <trans-unit id="3fc29bdf5f33d35e8f9189d8d349267b18ec4c2d" translate="yes" xml:space="preserve">
          <source>IPv4 constant Null safety</source>
          <target state="translated">IPv4定数 ヌルセーフ</target>
        </trans-unit>
        <trans-unit id="9b85d1fcfc830baca9fe333753861e8d7ee05bc1" translate="yes" xml:space="preserve">
          <source>IPv4MulticastInterface property</source>
          <target state="translated">IPv4MulticastInterfaceプロパティ</target>
        </trans-unit>
        <trans-unit id="1e0e9c808becfd410cccc0989b4e35ffbd62bbe9" translate="yes" xml:space="preserve">
          <source>IPv4MulticastInterface property Null safety</source>
          <target state="translated">IPv4MulticastInterface プロパティ Null 安全性</target>
        </trans-unit>
        <trans-unit id="72ad59ec7922d1dfb4491774628111dc4b11786b" translate="yes" xml:space="preserve">
          <source>IPv6 constant</source>
          <target state="translated">アイピーブイシックス定数</target>
        </trans-unit>
        <trans-unit id="6c0859d527ac193f768c5d25dafc05fe6b8fb5dc" translate="yes" xml:space="preserve">
          <source>IPv6 constant Null safety</source>
          <target state="translated">IPv6定数 ヌルセーフ</target>
        </trans-unit>
        <trans-unit id="20560a4c0355f6d08810c5f52b41033655825bc8" translate="yes" xml:space="preserve">
          <source>IPv6MulticastInterface property</source>
          <target state="translated">IPv6MulticastInterfaceプロパティ</target>
        </trans-unit>
        <trans-unit id="e9c50df76945b78cebdf0848eef8a979c53f507d" translate="yes" xml:space="preserve">
          <source>IPv6MulticastInterface property Null safety</source>
          <target state="translated">IPv6MulticastInterface プロパティ Null 安全性</target>
        </trans-unit>
        <trans-unit id="1fb83868030d440a9e266281ec9d53b751cd13b9" translate="yes" xml:space="preserve">
          <source>IdbFactory</source>
          <target state="translated">IdbFactory</target>
        </trans-unit>
        <trans-unit id="699e0ce1bcf0390b97709c4f462c4e173228ab78" translate="yes" xml:space="preserve">
          <source>IdbFactory class</source>
          <target state="translated">IdbFactory クラス</target>
        </trans-unit>
        <trans-unit id="b97c3fb8f64161388a9c84889da0a9e19357edbe" translate="yes" xml:space="preserve">
          <source>IdbFactory class Null safety</source>
          <target state="translated">IdbFactory クラス Null 安全性</target>
        </trans-unit>
        <trans-unit id="dc4474c88e8f0a90dc46c1868f6c38cae2e9d671" translate="yes" xml:space="preserve">
          <source>IdbFactory.cmp</source>
          <target state="translated">IdbFactory.cmp</target>
        </trans-unit>
        <trans-unit id="108b0e482cbfba7f888862387a0b4adce08d8aa6" translate="yes" xml:space="preserve">
          <source>IdbFactory.deleteDatabase</source>
          <target state="translated">IdbFactory.deleteDatabase</target>
        </trans-unit>
        <trans-unit id="a3ef27eb7c788fb9cdac706b29338da048a138bd" translate="yes" xml:space="preserve">
          <source>IdbFactory.open</source>
          <target state="translated">IdbFactory.open</target>
        </trans-unit>
        <trans-unit id="c73a676bd2c8b825d94da661528b9983e19cc2e5" translate="yes" xml:space="preserve">
          <source>IdbFactory.supported</source>
          <target state="translated">IdbFactory.supported</target>
        </trans-unit>
        <trans-unit id="5015ac1ec6c1678a62ff18c4010c14262e932163" translate="yes" xml:space="preserve">
          <source>IdbFactory.supportsDatabaseNames</source>
          <target state="translated">IdbFactory.supportsDatabaseNames</target>
        </trans-unit>
        <trans-unit id="295fd4cb60a2061652f906b3f43797e930dd78e2" translate="yes" xml:space="preserve">
          <source>Identical to &lt;code&gt;FileStat.stat(this.path)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FileStat.stat(this.path)&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="e78411f4891460acef2c7fc57963441f878323c2" translate="yes" xml:space="preserve">
          <source>Identical to &lt;code&gt;FileStat.statSync(this.path)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FileStat.statSync(this.path)&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="51dc4bdc04ce7e2b0b2cf581bb6e983ccb6cf972" translate="yes" xml:space="preserve">
          <source>IdleDeadline</source>
          <target state="translated">IdleDeadline</target>
        </trans-unit>
        <trans-unit id="ac48b5b124fecfe7fe02a21a51b8015af695f868" translate="yes" xml:space="preserve">
          <source>IdleDeadline class</source>
          <target state="translated">IdleDeadline クラス</target>
        </trans-unit>
        <trans-unit id="8fd20d3bdd8aea4e1743e78153676dee401e386e" translate="yes" xml:space="preserve">
          <source>IdleDeadline class Null safety</source>
          <target state="translated">IdleDeadline クラス Null 安全性</target>
        </trans-unit>
        <trans-unit id="80366f1bf93e0d981287a5b5d1b4ec3e0ca75465" translate="yes" xml:space="preserve">
          <source>IdleDeadline.didTimeout</source>
          <target state="translated">IdleDeadline.didTimeout</target>
        </trans-unit>
        <trans-unit id="9c448c4ba59840c1de022c1032d13d51d3f30ff0" translate="yes" xml:space="preserve">
          <source>IdleDeadline.timeRemaining</source>
          <target state="translated">IdleDeadline.timeRemaining</target>
        </trans-unit>
        <trans-unit id="6de3d1d8064c939894cce256381897f45daf5be8" translate="yes" xml:space="preserve">
          <source>IdleRequestCallback typedef</source>
          <target state="translated">IdleRequestCallback typedef</target>
        </trans-unit>
        <trans-unit id="d9dc5f092e1f79d6e03882c12b53c29c2420def7" translate="yes" xml:space="preserve">
          <source>IdleRequestCallback typedef Null safety</source>
          <target state="translated">IdleRequestCallback typedef Null safety</target>
        </trans-unit>
        <trans-unit id="78eeecc29cd630cd793a69fbe858cf06f673f4e0" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../../dart-core/object/operator_equals&quot;&gt;operator ==&lt;/a&gt; is overridden to use the object state instead, the hash code must also be changed to represent that state.</source>
          <target state="translated">場合&lt;a href=&quot;../../dart-core/object/operator_equals&quot;&gt;、オペレータは==&lt;/a&gt;の代わりにオブジェクトの状態を使用することがオーバーライドされ、ハッシュコードは、その状態を表すように変更されなければなりません。</target>
        </trans-unit>
        <trans-unit id="2e25971ff86a282be249b2b45b95466a7aa3677e" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../filesystementity/path&quot;&gt;path&lt;/a&gt; is a relative path, it will be interpreted relative to the current working directory (see &lt;a href=&quot;../directory/current&quot;&gt;Directory.current&lt;/a&gt;), when used.</source>
          <target state="translated">&lt;a href=&quot;../filesystementity/path&quot;&gt;path&lt;/a&gt;が相対パスの場合、使用すると、現在の作業ディレクトリ（&lt;a href=&quot;../directory/current&quot;&gt;Directory.currentを&lt;/a&gt;参照）を基準にして解釈されます。</target>
        </trans-unit>
        <trans-unit id="41876751f2d5f7f6265b79e94ba455050eaee23a" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../filesystementity/path&quot;&gt;path&lt;/a&gt; is an absolute path, it will be immune to changes to the current working directory.</source>
          <target state="translated">&lt;a href=&quot;../filesystementity/path&quot;&gt;path&lt;/a&gt;が絶対パスの場合、現在の作業ディレクトリへの変更の影響を受けません。</target>
        </trans-unit>
        <trans-unit id="8e22ca27df8f42239d98daa7b9d7543fb29e815f" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../object/operator_equals&quot;&gt;operator ==&lt;/a&gt; is overridden to use the object state instead, the hash code must also be changed to represent that state.</source>
          <target state="translated">場合&lt;a href=&quot;../object/operator_equals&quot;&gt;、オペレータは==&lt;/a&gt;の代わりにオブジェクトの状態を使用することがオーバーライドされ、ハッシュコードは、その状態を表すように変更されなければなりません。</target>
        </trans-unit>
        <trans-unit id="4a0093b7cbafc8d5fb36b93e69fc462acb4bcbee" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../stream-class&quot;&gt;this&lt;/a&gt; is empty or has more than one element, the returned future completes with an error.</source>
          <target state="translated">&lt;a href=&quot;../stream-class&quot;&gt;これ&lt;/a&gt;が空の場合、または複数の要素がある場合、返されたフューチャーはエラーで完了します。</target>
        </trans-unit>
        <trans-unit id="e26aa6cf661c0d13c6af4b834261452766fd6db2" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;cancel&quot;&gt;cancel&lt;/a&gt; is called, the &lt;code&gt;Future&lt;/code&gt; completes with a &lt;a href=&quot;../socketexception-class&quot;&gt;SocketException&lt;/a&gt; error whose message indicates that the connection attempt was cancelled.</source>
          <target state="translated">場合は&lt;a href=&quot;cancel&quot;&gt;、キャンセル&lt;/a&gt;と呼ばれ、 &lt;code&gt;Future&lt;/code&gt; で完了&lt;a href=&quot;../socketexception-class&quot;&gt;のSocketExceptionの&lt;/a&gt;メッセージエラーは、接続の試行がキャンセルされたことを示しています。</target>
        </trans-unit>
        <trans-unit id="66e24a8eb7d83ec3183e11e87b3dcfbb750304bf" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;file/path&quot;&gt;path&lt;/a&gt; is a symbolic link, rather than a file, then the methods of File operate on the ultimate target of the link, except for &lt;a href=&quot;filesystementity/delete&quot;&gt;delete&lt;/a&gt; and &lt;a href=&quot;filesystementity/deletesync&quot;&gt;deleteSync&lt;/a&gt;, which operate on the link.</source>
          <target state="translated">&lt;a href=&quot;file/path&quot;&gt;path&lt;/a&gt;がファイルではなくシンボリックリンクの場合、Fileのメソッドはリンクの最終的なターゲットで動作します。ただし、リンクで動作&lt;a href=&quot;filesystementity/delete&quot;&gt;するdelete&lt;/a&gt;および&lt;a href=&quot;filesystementity/deletesync&quot;&gt;deleteSync&lt;/a&gt;は除きます。</target>
        </trans-unit>
        <trans-unit id="a7ffdcef87e51d743869367938370dd77d105e6b" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;movenext&quot;&gt;moveNext&lt;/a&gt; has been called when the iterator is canceled, its returned future will complete with &lt;code&gt;false&lt;/code&gt; as value, as will all further calls to &lt;a href=&quot;movenext&quot;&gt;moveNext&lt;/a&gt;.</source>
          <target state="translated">場合&lt;a href=&quot;movenext&quot;&gt;MoveNextメソッドは、&lt;/a&gt;反復子がキャンセルされたときに呼ばれてきた、その返された未来はで完了します &lt;code&gt;false&lt;/code&gt; のすべての更なる通話れるように、値として&lt;a href=&quot;movenext&quot;&gt;のMoveNext&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7e4e2a642c087b46bd97fc3fbe65a6898c7edb28" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;operator_equals&quot;&gt;operator ==&lt;/a&gt; is overridden to use the object state instead, the hash code must also be changed to represent that state.</source>
          <target state="translated">場合&lt;a href=&quot;operator_equals&quot;&gt;、オペレータは==&lt;/a&gt;の代わりにオブジェクトの状態を使用することがオーバーライドされ、ハッシュコードは、その状態を表すように変更されなければなりません。</target>
        </trans-unit>
        <trans-unit id="6359ed80bbe1d6df9f508a9067cfcc8d8ec7a80e" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;pausecapability&quot;&gt;pauseCapability&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt;, or it's not the pause capability of the isolate identified by &lt;a href=&quot;controlport&quot;&gt;controlPort&lt;/a&gt;, the pause request is ignored by the receiving isolate.</source>
          <target state="translated">&lt;a href=&quot;pausecapability&quot;&gt;pauseCapability&lt;/a&gt;が &lt;code&gt;null&lt;/code&gt; の場合、または&lt;a href=&quot;controlport&quot;&gt;controlPort&lt;/a&gt;によって識別されたアイソレートの一時停止機能ではない場合、一時停止リクエストは受信側のアイソレートによって無視されます。</target>
        </trans-unit>
        <trans-unit id="23a5465887ffcb0081dc35294784accff6ebe3d8" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;serverheader&quot;&gt;serverHeader&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt;, no &lt;code&gt;Server&lt;/code&gt; header will be added to each response.</source>
          <target state="translated">&lt;a href=&quot;serverheader&quot;&gt;serverHeader&lt;/a&gt;が &lt;code&gt;null&lt;/code&gt; の場合、各応答に &lt;code&gt;Server&lt;/code&gt; ヘッダーは追加されません。</target>
        </trans-unit>
        <trans-unit id="d047b0342610c5da11287d2ea557760a5adecdc6" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;source&quot;&gt;source&lt;/a&gt; is present and is a string, the description will contain (at least a part of) the source. If &lt;a href=&quot;offset&quot;&gt;offset&lt;/a&gt; is also provided, the part of the source included will contain that offset, and the offset will be marked.</source>
          <target state="translated">場合&lt;a href=&quot;source&quot;&gt;源が&lt;/a&gt;存在し、文字列であり、説明はソース（の少なくとも一部）を含有するであろう。場合は&lt;a href=&quot;offset&quot;&gt;オフセットを&lt;/a&gt;も提供され、付属のソースの一部が相殺され、オフセットがマークされることが含まれています。</target>
        </trans-unit>
        <trans-unit id="380d28492396ae4d882387cd7f476f4a00afef48" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;streamconsumer/addstream&quot;&gt;addStream&lt;/a&gt; is called after any of the &lt;a href=&quot;eventsink-class&quot;&gt;EventSink&lt;/a&gt; methods, it'll be delayed until the underlying system has consumed the data added by the &lt;a href=&quot;eventsink-class&quot;&gt;EventSink&lt;/a&gt; methods.</source>
          <target state="translated">&lt;a href=&quot;streamconsumer/addstream&quot;&gt;addStream&lt;/a&gt;がいずれかの&lt;a href=&quot;eventsink-class&quot;&gt;EventSink&lt;/a&gt;メソッドの後に呼び出された場合、基盤となるシステムが&lt;a href=&quot;eventsink-class&quot;&gt;EventSink&lt;/a&gt;メソッドによって追加されたデータを消費するまで遅延されます。</target>
        </trans-unit>
        <trans-unit id="439852aa428a17eb1c51e6191c7bcb0a4ea251a0" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;terminatecapability&quot;&gt;terminateCapability&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt;, or it's not the terminate capability of the isolate identified by &lt;a href=&quot;controlport&quot;&gt;controlPort&lt;/a&gt;, the kill request is ignored by the receiving isolate.</source>
          <target state="translated">&lt;a href=&quot;terminatecapability&quot;&gt;terminateCapability&lt;/a&gt;が &lt;code&gt;null&lt;/code&gt; の場合、または&lt;a href=&quot;controlport&quot;&gt;controlPort&lt;/a&gt;で識別されたアイソレートの終了機能ではない場合、kill要求は受信側のアイソレートによって無視されます。</target>
        </trans-unit>
        <trans-unit id="d9212acb08b7f93a6faae4ab0cd179eba6164741" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;timeout&quot;&gt;timeout&lt;/a&gt; is set to 0, then the request will not time out.</source>
          <target state="translated">&lt;a href=&quot;timeout&quot;&gt;タイムアウト&lt;/a&gt;が0に設定されている場合、リクエストはタイムアウトしません。</target>
        </trans-unit>
        <trans-unit id="ec2580729285e7b3bee47acf3c9f75620dd98fa3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Access-Control-Expose-Headers&lt;/code&gt; has not been set to true, only a subset of all the response headers will be returned when calling &lt;code&gt;getAllRequestHeaders&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;Access-Control-Expose-Headers&lt;/code&gt; trueに設定されていない呼び出すときに、すべてのレスポンスヘッダのサブセットのみが返されます &lt;code&gt;getAllRequestHeaders&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="f481dba2db8526a14ae4f75bb5e6b36ff8178ada" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;a&lt;/code&gt; is equal to zero, the vector (&lt;code&gt;b&lt;/code&gt;,&lt;code&gt;a&lt;/code&gt;) is considered parallel to the x-axis, even if &lt;code&gt;b&lt;/code&gt; is also equal to zero. The sign of &lt;code&gt;b&lt;/code&gt; determines the direction of the vector along the x-axis.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; がゼロに等しい場合、ベクトル（ &lt;code&gt;b&lt;/code&gt; 、 &lt;code&gt;a&lt;/code&gt; ）は、 &lt;code&gt;b&lt;/code&gt; もゼロに等しい場合でも、x軸に平行と見なされます。の兆候 &lt;code&gt;b&lt;/code&gt; 、x軸に沿ったベクトルの方向を決定します。</target>
        </trans-unit>
        <trans-unit id="b23b777d81c6705337af4da0d52f180f45e04809" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;action&lt;/code&gt; throws, the synchronous exception is not caught by the zone's error handler. Use &lt;a href=&quot;runguarded&quot;&gt;runGuarded&lt;/a&gt; to achieve that.</source>
          <target state="translated">場合は &lt;code&gt;action&lt;/code&gt; スロー、同期例外がゾーンのエラーハンドラによってキャッチされていません。&lt;a href=&quot;runguarded&quot;&gt;それ&lt;/a&gt;を実現するには、runGuardedを使用します。</target>
        </trans-unit>
        <trans-unit id="9d6cd0a5664a490962236d8352afd440c9d3c5af" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;allowInvalid&lt;/code&gt; is not provided, it defaults to the value used to create this &lt;a href=&quot;../asciicodec-class&quot;&gt;AsciiCodec&lt;/a&gt;.</source>
          <target state="translated">場合 &lt;code&gt;allowInvalid&lt;/code&gt; が提供されていない、値がデフォルトになりますが、この作成に使用&lt;a href=&quot;../asciicodec-class&quot;&gt;AsciiCodecを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dc8ef1d755745380391a0eae3380fe80a43dbeb7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;allowInvalid&lt;/code&gt; is not provided, it defaults to the value used to create this &lt;a href=&quot;../latin1codec-class&quot;&gt;Latin1Codec&lt;/a&gt;.</source>
          <target state="translated">場合 &lt;code&gt;allowInvalid&lt;/code&gt; が提供されていない、値がデフォルトになりますが、この作成に使用&lt;a href=&quot;../latin1codec-class&quot;&gt;Latin1Codecを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ac10a837d46e8c07f5efd77d0087843f51c35f72" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;allowInvalid&lt;/code&gt; is true, the &lt;a href=&quot;decode&quot;&gt;decode&lt;/a&gt; method and the converter returned by &lt;a href=&quot;decoder&quot;&gt;decoder&lt;/a&gt; will default to allowing invalid values. If allowing invalid values, the values will be decoded into the Unicode Replacement character (U+FFFD). If not, an exception will be thrown. Calls to the &lt;a href=&quot;decode&quot;&gt;decode&lt;/a&gt; method can choose to override this default.</source>
          <target state="translated">場合 &lt;code&gt;allowInvalid&lt;/code&gt; が真である、&lt;a href=&quot;decode&quot;&gt;復号&lt;/a&gt;方法とによって返さコンバータ&lt;a href=&quot;decoder&quot;&gt;デコーダは&lt;/a&gt;無効な値を可能にデフォルト設定されます。無効な値を許可する場合、値はUnicode置換文字（U + FFFD）にデコードされます。そうでない場合は、例外がスローされます。の呼び出し&lt;a href=&quot;decode&quot;&gt;decode&lt;/a&gt;メソッドのこのデフォルトをオーバーライドすることを選択できます。</target>
        </trans-unit>
        <trans-unit id="9889a452a5df6e13885d4ce91199a108a984007c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;allowInvalid&lt;/code&gt; is true, the &lt;a href=&quot;decode&quot;&gt;decode&lt;/a&gt; method and the converter returned by &lt;a href=&quot;decoder&quot;&gt;decoder&lt;/a&gt; will default to allowing invalid values. Invalid values are decoded into the Unicode Replacement character (U+FFFD). Calls to the &lt;a href=&quot;decode&quot;&gt;decode&lt;/a&gt; method can override this default.</source>
          <target state="translated">場合 &lt;code&gt;allowInvalid&lt;/code&gt; が真である、&lt;a href=&quot;decode&quot;&gt;復号&lt;/a&gt;方法とによって返さコンバータ&lt;a href=&quot;decoder&quot;&gt;デコーダは&lt;/a&gt;無効な値を可能にデフォルト設定されます。無効な値はUnicode置換文字（U + FFFD）にデコードされます。&lt;a href=&quot;decode&quot;&gt;decode&lt;/a&gt;メソッドを呼び出すと、このデフォルトをオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="9748adc69fb85a5febf58f580b4887a904d75bf7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;allowMalformed&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; the decoder replaces invalid (or unterminated) character sequences with the Unicode Replacement character &lt;code&gt;U+FFFD&lt;/code&gt; (�). Otherwise it throws a &lt;a href=&quot;../../dart-core/formatexception-class&quot;&gt;FormatException&lt;/a&gt;.</source>
          <target state="translated">場合 &lt;code&gt;allowMalformed&lt;/code&gt; がある &lt;code&gt;true&lt;/code&gt; デコーダは、Unicode置換文字に無効（または終端されていない）文字列置き換え &lt;code&gt;U+FFFD&lt;/code&gt; を（）。それ以外の場合は、&lt;a href=&quot;../../dart-core/formatexception-class&quot;&gt; FormatExceptionを&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="470ce428179db4c65153e00f5495fbeb99af4de5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;allowMalformed&lt;/code&gt; is not given, it defaults to the &lt;code&gt;allowMalformed&lt;/code&gt; that was used to instantiate &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;allowMalformed&lt;/code&gt; が指定されていない場合、デフォルトで、 &lt;code&gt;this&lt;/code&gt; をインスタンス化するために使用された &lt;code&gt;allowMalformed&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="c4400c75aa8febbfc98ea3b4450337abcefc33a9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;b&lt;/code&gt; is positive, this is the same as &lt;code&gt;atan(a/b)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;b&lt;/code&gt; が正の場合、これは &lt;code&gt;atan(a/b)&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="f66bd2d8b2b562568f25efd7fb146a9c59ea696d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;b&lt;/code&gt; is positive, this is the same as &lt;code&gt;atan(b/a)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;b&lt;/code&gt; が正の場合、これは &lt;code&gt;atan(b/a)&lt;/code&gt; と同じですです。</target>
        </trans-unit>
        <trans-unit id="1b66f8c8b18b30d93dec3dc72ab613ce2eb435fc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;bytes&lt;/code&gt; contains values that are not in the range 0 .. 127, the decoder will eventually throw a &lt;a href=&quot;../../dart-core/formatexception-class&quot;&gt;FormatException&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;bytes&lt;/code&gt; に0〜127の範囲外の値が含まれている場合、デコーダーは最終的に&lt;a href=&quot;../../dart-core/formatexception-class&quot;&gt;FormatExceptionを&lt;/a&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="45c3b60208243b408c74a2a46efbc69ae1039a27" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;bytes&lt;/code&gt; contains values that are not in the range 0 .. 255, the decoder will eventually throw a &lt;a href=&quot;../../dart-core/formatexception-class&quot;&gt;FormatException&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;bytes&lt;/code&gt; に0から255の範囲にない値が含まれている場合、デコーダーは最終的に&lt;a href=&quot;../../dart-core/formatexception-class&quot;&gt; FormatExceptionを&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="978e61c2d091440145da7b1de09c70a2f22e1776" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;callback&lt;/code&gt; runs successfully, then &lt;code&gt;successCallback&lt;/code&gt; is called. Otherwise, &lt;code&gt;errorCallback&lt;/code&gt; is called.</source>
          <target state="translated">場合は &lt;code&gt;callback&lt;/code&gt; 正常に実行され、その後、 &lt;code&gt;successCallback&lt;/code&gt; が呼び出されました。それ以外の場合、 &lt;code&gt;errorCallback&lt;/code&gt; が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="579e12b1607e99c32fff6aaed3c11fe2a06cffc6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;cancelOnError&lt;/code&gt; is true, only the first error on &lt;code&gt;source&lt;/code&gt; is forwarded to the controller's stream, and the &lt;code&gt;addStream&lt;/code&gt; ends after this. If &lt;code&gt;cancelOnError&lt;/code&gt; is false, all errors are forwarded and only a done event will end the &lt;code&gt;addStream&lt;/code&gt;. If &lt;code&gt;cancelOnError&lt;/code&gt; is omitted or &lt;code&gt;null&lt;/code&gt;, it defaults to false.</source>
          <target state="translated">場合 &lt;code&gt;cancelOnError&lt;/code&gt; が真である、上の唯一の最初のエラー &lt;code&gt;source&lt;/code&gt; 、コントローラのストリームに転送され、 &lt;code&gt;addStream&lt;/code&gt; は、この後に終了します。 &lt;code&gt;cancelOnError&lt;/code&gt; がfalseの場合、すべてのエラーが転送され、doneイベントのみが &lt;code&gt;addStream&lt;/code&gt; を終了します。場合 &lt;code&gt;cancelOnError&lt;/code&gt; が省略されるかされた &lt;code&gt;null&lt;/code&gt; 、falseにデフォルト設定されます。</target>
        </trans-unit>
        <trans-unit id="c92730f3a077e6a38241892fee911aa19773ef17" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;cancelOnError&lt;/code&gt; is true, only the first error on &lt;code&gt;source&lt;/code&gt; is forwarded to the controller's stream, and the &lt;code&gt;addStream&lt;/code&gt; ends after this. If &lt;code&gt;cancelOnError&lt;/code&gt; is false, all errors are forwarded and only a done event will end the &lt;code&gt;addStream&lt;/code&gt;. If &lt;code&gt;cancelOnError&lt;/code&gt; is omitted, it defaults to false.</source>
          <target state="translated">場合 &lt;code&gt;cancelOnError&lt;/code&gt; が真である、上の唯一の最初のエラー &lt;code&gt;source&lt;/code&gt; 、コントローラのストリームに転送され、 &lt;code&gt;addStream&lt;/code&gt; は、この後に終了します。 &lt;code&gt;cancelOnError&lt;/code&gt; がfalseの場合、すべてのエラーが転送され、doneイベントだけが &lt;code&gt;addStream&lt;/code&gt; を終了します。 &lt;code&gt;cancelOnError&lt;/code&gt; の場合、デフォルトはfalse省略されています。</target>
        </trans-unit>
        <trans-unit id="a0b1d4f899a8e7039bb9f836908ae5ae81b3c383" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;cancelOnError&lt;/code&gt; is true, the subscription is automatically canceled when the first error event is delivered. The default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;cancelOnError&lt;/code&gt; が真である最初のエラーイベントが配信されると、サブスクリプションは自動的にキャンセルされます。デフォルトは &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f5f28e591b7c1a846fa99b5d9ea71d81514a0c68" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;caseSensitive&lt;/code&gt; is disabled, then case is ignored.</source>
          <target state="translated">場合は &lt;code&gt;caseSensitive&lt;/code&gt; 無効になっている、そして場合は無視されます。</target>
        </trans-unit>
        <trans-unit id="c3710ed7132322a026c7d184defb5ae53d88d3ec" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;compression&lt;/code&gt; is provided, the &lt;a href=&quot;../websocket-class&quot;&gt;WebSocket&lt;/a&gt; created will be configured to negotiate with the specified &lt;a href=&quot;../compressionoptions-class&quot;&gt;CompressionOptions&lt;/a&gt;. If none is specified then the &lt;a href=&quot;../websocket-class&quot;&gt;WebSocket&lt;/a&gt; will be created with the default &lt;a href=&quot;../compressionoptions-class&quot;&gt;CompressionOptions&lt;/a&gt;.</source>
          <target state="translated">場合は &lt;code&gt;compression&lt;/code&gt; 提供され、&lt;a href=&quot;../websocket-class&quot;&gt;WebSocketを&lt;/a&gt;作成し、指定と交渉するように構成されます&lt;a href=&quot;../compressionoptions-class&quot;&gt;CompressionOptions&lt;/a&gt;。何も指定されていない場合、&lt;a href=&quot;../websocket-class&quot;&gt;WebSocket&lt;/a&gt;はデフォルトの&lt;a href=&quot;../compressionoptions-class&quot;&gt;CompressionOptionsで&lt;/a&gt;作成されます。</target>
        </trans-unit>
        <trans-unit id="7468fb0a19816027df79608be5052f42687118fb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;computation&lt;/code&gt; is omitted the event values will all be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;computation&lt;/code&gt; 省略されているイベントの値がすべてになります &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1cdcf5ca7ad18339aad13a7d9f1d84e54d4cf192" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;computation&lt;/code&gt; is omitted, it will be treated as if &lt;code&gt;computation&lt;/code&gt; was &lt;code&gt;() =&amp;gt; null&lt;/code&gt;, and the future will eventually complete with the &lt;code&gt;null&lt;/code&gt; value.</source>
          <target state="translated">場合は &lt;code&gt;computation&lt;/code&gt; 省略されている、かのように扱われます &lt;code&gt;computation&lt;/code&gt; した &lt;code&gt;() =&amp;gt; null&lt;/code&gt; 、そして将来は、最終的に完了します &lt;code&gt;null&lt;/code&gt; 値。</target>
        </trans-unit>
        <trans-unit id="51b92679cb2ad9febc9228e30e31522ab039fd71" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;computation&lt;/code&gt; is omitted, it will be treated as if &lt;code&gt;computation&lt;/code&gt; was &lt;code&gt;() =&amp;gt; null&lt;/code&gt;, and the future will eventually complete with the &lt;code&gt;null&lt;/code&gt; value. In that case, &lt;code&gt;T&lt;/code&gt; must be nullable.</source>
          <target state="translated">場合 &lt;code&gt;computation&lt;/code&gt; 省略され、かのように扱われる &lt;code&gt;computation&lt;/code&gt; あった &lt;code&gt;() =&amp;gt; null&lt;/code&gt; 、そして将来は、最終的で完了します &lt;code&gt;null&lt;/code&gt; 値。その場合、 &lt;code&gt;T&lt;/code&gt; はnull許容でなければなりません。</target>
        </trans-unit>
        <trans-unit id="c11a462ba6ded2db7f13516ddd5833d65b8ff695" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;computation&lt;/code&gt; returns a future, the future returned by this constructor will complete with the value or error of that future.</source>
          <target state="translated">&lt;code&gt;computation&lt;/code&gt; ならがフューチャーを返す、このコンストラクターによって返されるフューチャーは、そのフューチャーの値またはエラーで完了します。</target>
        </trans-unit>
        <trans-unit id="3a9070cddf89e7c25306a88447a349404b1767f7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;constructorName&lt;/code&gt; was created from the empty string, then this method will execute the instance creation expression &lt;em&gt;new c(a1, ..., an, k1: v1, ..., km: vm)&lt;/em&gt; in a scope that has access to the private members of &lt;em&gt;c&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;constructorName&lt;/code&gt; が空の文字列から作成された場合、このメソッドはプライベートにアクセスできるスコープでインスタンス作成式&lt;em&gt;new c（a1、...、an、k1：v1、.​​..、km：vm）&lt;/em&gt;を実行します&lt;em&gt;cの&lt;/em&gt;メンバー&lt;em&gt;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="529c11f099f8eeb6664f023951ead2ae529457a4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;copy&lt;/code&gt; is true (the default), the created builder is a &lt;em&gt;copying&lt;/em&gt; builder. A copying builder maintains its own internal buffer and copies the bytes added to it eagerly.</source>
          <target state="translated">場合は &lt;code&gt;copy&lt;/code&gt; true（デフォルト）で、作成したビルダーは、&lt;em&gt;コピー&lt;/em&gt;ビルダー。コピービルダーは、独自の内部バッファーを維持し、それに追加されたバイトを熱心にコピーします。</target>
        </trans-unit>
        <trans-unit id="a9f5b2f84d6f552dd7e5dbe77310006820c7441c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;copy&lt;/code&gt; is true, the data is always copied when added to the list. If it &lt;code&gt;copy&lt;/code&gt; is false, the data is only copied if needed. That means that if the lists are changed after added to the &lt;a href=&quot;../bytesbuilder-class&quot;&gt;BytesBuilder&lt;/a&gt;, it may effect the output. Default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;copy&lt;/code&gt; 真であるリストに追加する場合、データは常にコピーされます。それは場合は &lt;code&gt;copy&lt;/code&gt; 偽で必要に応じて、データのみがコピーされます。つまり、リストが&lt;a href=&quot;../bytesbuilder-class&quot;&gt;BytesBuilder&lt;/a&gt;に追加された後で変更された場合、出力に影響する可能性があります。デフォルトは &lt;code&gt;true&lt;/code&gt; ですです。</target>
        </trans-unit>
        <trans-unit id="4b033a96e124644baed96c63a872d841724581a4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;copy&lt;/code&gt; set to false, the created builder assumes that lists added to it will not change. Any &lt;a href=&quot;../uint8list-class&quot;&gt;Uint8List&lt;/a&gt; added using &lt;a href=&quot;add&quot;&gt;add&lt;/a&gt; is kept until &lt;a href=&quot;tobytes&quot;&gt;toBytes&lt;/a&gt; or &lt;a href=&quot;takebytes&quot;&gt;takeBytes&lt;/a&gt; is called, and only then are their contents copied. A non-&lt;a href=&quot;../uint8list-class&quot;&gt;Uint8List&lt;/a&gt; may be copied eagerly. If only a single &lt;a href=&quot;../uint8list-class&quot;&gt;Uint8List&lt;/a&gt; is added to the builder, that list is returned by &lt;a href=&quot;tobytes&quot;&gt;toBytes&lt;/a&gt; or &lt;a href=&quot;takebytes&quot;&gt;takeBytes&lt;/a&gt; directly, without any copying. A list added to a non-copying builder &lt;em&gt;should not&lt;/em&gt; change its content after being added, and it &lt;em&gt;must not&lt;/em&gt; change its length after being added. (Normal &lt;a href=&quot;../uint8list-class&quot;&gt;Uint8List&lt;/a&gt;s are fixed length lists, but growing lists implementing &lt;a href=&quot;../uint8list-class&quot;&gt;Uint8List&lt;/a&gt; exist.)</source>
          <target state="translated">場合は &lt;code&gt;copy&lt;/code&gt; をfalseに設定し、作成したビルダーが追加リストは変更されないことを前提としています。どれ&lt;a href=&quot;../uint8list-class&quot;&gt;Uint8Listは、&lt;/a&gt;使用して追加&lt;a href=&quot;add&quot;&gt;アドオンが&lt;/a&gt;するまで維持され&lt;a href=&quot;tobytes&quot;&gt;toBytes&lt;/a&gt;または&lt;a href=&quot;takebytes&quot;&gt;takeBytesが&lt;/a&gt;呼ばれ、だけにしてその内容がコピーされます。非&lt;a href=&quot;../uint8list-class&quot;&gt;Uint8Listは&lt;/a&gt;熱心にコピーすることができます。単一の&lt;a href=&quot;../uint8list-class&quot;&gt;Uint8List&lt;/a&gt;のみがビルダーに追加された場合、そのリストはコピーせずに&lt;a href=&quot;tobytes&quot;&gt;toBytes&lt;/a&gt;または&lt;a href=&quot;takebytes&quot;&gt;takeBytes&lt;/a&gt;によって直接返されます。非コピービルダーに追加リストは&lt;em&gt;いけません&lt;/em&gt;追加された後にその内容を変更し、それは&lt;em&gt;してはならない&lt;/em&gt;追加された後、その長さを変更します。 （通常の&lt;a href=&quot;../uint8list-class&quot;&gt;Uint8List&lt;/a&gt;は固定長のリストですが、&lt;a href=&quot;../uint8list-class&quot;&gt;Uint8Listを&lt;/a&gt;実装するリストが増えています。）</target>
        </trans-unit>
        <trans-unit id="d6956700d47f8b76e81cb0d6acb699ef60cf3a68" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;data&lt;/code&gt; is supplied, the key/value pairs are URI encoded with &lt;a href=&quot;../../dart-core/uri/encodequerycomponent&quot;&gt;Uri.encodeQueryComponent&lt;/a&gt; and converted into an HTTP query string.</source>
          <target state="translated">場合 &lt;code&gt;data&lt;/code&gt; 供給され、キー/値のペアでURIエンコードさ&lt;a href=&quot;../../dart-core/uri/encodequerycomponent&quot;&gt;Uri.encodeQueryComponent&lt;/a&gt;とHTTPクエリ文字列に変換されます。</target>
        </trans-unit>
        <trans-unit id="33f4b5e5194273b34c6605446d555bb9535891d2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;debugName&lt;/code&gt; is provided, the spawned &lt;a href=&quot;../isolate-class&quot;&gt;Isolate&lt;/a&gt; will be identifiable by this name in debuggers and logging.</source>
          <target state="translated">場合 &lt;code&gt;debugName&lt;/code&gt; が提供され、生成された&lt;a href=&quot;../isolate-class&quot;&gt;アイソ&lt;/a&gt;デバッガや伐採で、この名前で識別可能になります。</target>
        </trans-unit>
        <trans-unit id="894883372fea3e6683227f3723dc536fe7312334" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;deep&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, then all of this node's children and descendents are copied as well. If &lt;code&gt;deep&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, then only this node is copied.</source>
          <target state="translated">&lt;code&gt;deep&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; の場合、このノードのすべての子と子孫もコピーされます。 &lt;code&gt;deep&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; 場合、このノードのみがコピーされます。</target>
        </trans-unit>
        <trans-unit id="b0d11eb323d7b419978ab0241e06f012efa880e9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;dotAll&lt;/code&gt; is enabled, then the &lt;code&gt;.&lt;/code&gt; pattern will match &lt;em&gt;all&lt;/em&gt; characters, including line terminators.</source>
          <target state="translated">&lt;code&gt;dotAll&lt;/code&gt; が有効な場合、 &lt;code&gt;.&lt;/code&gt; パターンは、行末記号を含む&lt;em&gt;すべての&lt;/em&gt;文字に一致&lt;em&gt;し&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="05a9d8657aac903c67e4a67e41a67c831d8f71fd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;eagerError&lt;/code&gt; is true, the returned future completes with an error immediately on the first error from one of the futures. Otherwise all futures must complete before the returned future is completed (still with the first error; the remaining errors are silently dropped).</source>
          <target state="translated">場合 &lt;code&gt;eagerError&lt;/code&gt; が trueの場合、返された未来は、先物の1からの最初のエラーですぐにエラーで完了します。それ以外の場合は、返されたフューチャーが完了する前にすべてのフューチャーが完了する必要があります（まだ最初のエラーが残り、残りのエラーは通知なしでドロップされます）。</target>
        </trans-unit>
        <trans-unit id="34f5409c52277b34d1c2fe6dd7f3a2cd37c6c452" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;encoding&lt;/code&gt; is not provided and &lt;code&gt;parameters&lt;/code&gt; has a &lt;code&gt;charset&lt;/code&gt; entry, that name is looked up using &lt;a href=&quot;../../dart-convert/encoding/getbyname&quot;&gt;Encoding.getByName&lt;/a&gt;, and if the lookup returns an encoding, that encoding is used to convert &lt;code&gt;content&lt;/code&gt; to bytes. If providing both an &lt;code&gt;encoding&lt;/code&gt; and a charset in &lt;code&gt;parameters&lt;/code&gt;, they should agree, otherwise decoding won't be able to use the charset parameter to determine the encoding.</source>
          <target state="translated">場合 &lt;code&gt;encoding&lt;/code&gt; 設けられていない &lt;code&gt;parameters&lt;/code&gt; 持つ &lt;code&gt;charset&lt;/code&gt; エントリを、その名前を使用して検索され&lt;a href=&quot;../../dart-convert/encoding/getbyname&quot;&gt;Encoding.getByNameを&lt;/a&gt;、ルックアップは、符号化を返す場合、その符号化は、変換のために使用されている &lt;code&gt;content&lt;/code&gt; バイト。 &lt;code&gt;parameters&lt;/code&gt; &lt;code&gt;encoding&lt;/code&gt; と文字セットの両方を提供する場合で、それらは一致する必要があります。そうでない場合、デコードは文字セットパラメータを使用してエンコーディングを決定できません。</target>
        </trans-unit>
        <trans-unit id="e15ce444bf2dd93a408f0a3e155968865946d269" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;end&lt;/code&gt; is omitted, it defaults to the &lt;a href=&quot;../../dart-core/list/length&quot;&gt;length&lt;/a&gt; of this list.</source>
          <target state="translated">場合は &lt;code&gt;end&lt;/code&gt; に、デフォルトを省略された&lt;a href=&quot;../../dart-core/list/length&quot;&gt;長さ&lt;/a&gt;、このリストの。</target>
        </trans-unit>
        <trans-unit id="c89275f93458078348506cf3f45e0ed6b81d5d43" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;end&lt;/code&gt; is omitted, it defaults to the &lt;a href=&quot;length&quot;&gt;length&lt;/a&gt; of this list.</source>
          <target state="translated">場合は &lt;code&gt;end&lt;/code&gt; に、デフォルトを省略された&lt;a href=&quot;length&quot;&gt;長さ&lt;/a&gt;、このリストの。</target>
        </trans-unit>
        <trans-unit id="471a5e122da7d9238e32602e628f06a29710a1b9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;end&lt;/code&gt; is present, &lt;code&gt;end&lt;/code&gt; - &lt;code&gt;start&lt;/code&gt; bytes will be read into &lt;code&gt;buffer&lt;/code&gt;, otherwise up to &lt;code&gt;buffer.length&lt;/code&gt;. If &lt;code&gt;end&lt;/code&gt; == &lt;code&gt;start&lt;/code&gt;, no bytes are read. Returns the number of bytes read.</source>
          <target state="translated">&lt;code&gt;end&lt;/code&gt; が存在する場合、 &lt;code&gt;end&lt;/code&gt; - &lt;code&gt;start&lt;/code&gt; バイトが &lt;code&gt;buffer&lt;/code&gt; に読み込まれ、それ以外の場合は &lt;code&gt;buffer.length&lt;/code&gt; まで読み込まれます。 &lt;code&gt;end&lt;/code&gt; == &lt;code&gt;start&lt;/code&gt; の場合、バイトは読み取られません。読み込まれたバイト数を返します。</target>
        </trans-unit>
        <trans-unit id="739efc9fbcb8f8e4c6e4383f513db9059016925f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;end&lt;/code&gt; is present, only up to byte-index &lt;code&gt;end&lt;/code&gt; will be read. Otherwise, until end of file.</source>
          <target state="translated">&lt;code&gt;end&lt;/code&gt; が存在する場合、最大バイトインデックスの &lt;code&gt;end&lt;/code&gt; のみが読み取られます。それ以外の場合は、ファイルの終わりまで。</target>
        </trans-unit>
        <trans-unit id="b648b208ce9194da04adc50da1ebca9cc4168d9a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;equals&lt;/code&gt; is provided, it is used to compare the keys in the table with new keys. If &lt;code&gt;equals&lt;/code&gt; is omitted, the key's own &lt;a href=&quot;../../dart-core/object/operator_equals&quot;&gt;Object.==&lt;/a&gt; is used instead.</source>
          <target state="translated">&lt;code&gt;equals&lt;/code&gt; が指定されている場合は、それを使用して、テーブル内のキーを新しいキーと比較します。場合は &lt;code&gt;equals&lt;/code&gt; 省略され、キーの独自の&lt;a href=&quot;../../dart-core/object/operator_equals&quot;&gt;オブジェクトが。==&lt;/a&gt;代わりに使用されます。</target>
        </trans-unit>
        <trans-unit id="30eca0fe6c9e0930cdf2eace33fc6703e1642c6d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;equals&lt;/code&gt; or &lt;code&gt;hashCode&lt;/code&gt; are omitted, the set uses the elements' intrinsic &lt;a href=&quot;../../dart-core/object/operator_equals&quot;&gt;Object.==&lt;/a&gt; and &lt;a href=&quot;../../dart-core/object/hashcode&quot;&gt;Object.hashCode&lt;/a&gt;, and &lt;code&gt;isValidKey&lt;/code&gt; is ignored since these operations are assumed to work on all objects.</source>
          <target state="translated">場合は &lt;code&gt;equals&lt;/code&gt; または &lt;code&gt;hashCode&lt;/code&gt; 省略され、セットは、要素の本質的な使用しています&lt;a href=&quot;../../dart-core/object/operator_equals&quot;&gt;。オブジェクトの==&lt;/a&gt;と&lt;a href=&quot;../../dart-core/object/hashcode&quot;&gt;Object.hashCode&lt;/a&gt;、および &lt;code&gt;isValidKey&lt;/code&gt; は、これらの操作は、すべてのオブジェクト上で動作するように想定されているので無視されます。</target>
        </trans-unit>
        <trans-unit id="1b76ccbbb8abe4bb3de92b319297df165e46a0ff" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;equals&lt;/code&gt; or &lt;code&gt;hashCode&lt;/code&gt; are omitted, the set uses the elements' intrinsic &lt;a href=&quot;../../dart-core/object/operator_equals&quot;&gt;Object.==&lt;/a&gt; and &lt;a href=&quot;../../dart-core/object/hashcode&quot;&gt;Object.hashCode&lt;/a&gt;.</source>
          <target state="translated">場合は &lt;code&gt;equals&lt;/code&gt; または &lt;code&gt;hashCode&lt;/code&gt; 省略され、セットは、要素の本質的な使用しています&lt;a href=&quot;../../dart-core/object/operator_equals&quot;&gt;==。オブジェクト&lt;/a&gt;と&lt;a href=&quot;../../dart-core/object/hashcode&quot;&gt;Object.hashCode&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6604db6895d7c5143c27054ca7d7b85391d7c15f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;equals&lt;/code&gt; throws, the data event is replaced by an error event containing the thrown error. The behavior is equivalent to the original stream emitting the error event, and it doesn't change the what the most recently emitted data event is.</source>
          <target state="translated">場合 &lt;code&gt;equals&lt;/code&gt; スロー、データイベントがスローされたエラーを含むエラーイベントに置き換えられています。この動作は、エラーイベントを発行する元のストリームと同等であり、最近発行されたデータイベントの内容は変更されません。</target>
        </trans-unit>
        <trans-unit id="0b391e63b975cb1f78d6af76fce3a3486013fe7c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;error&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, it is replaced by a &lt;a href=&quot;../../dart-core/nullthrownerror-class&quot;&gt;NullThrownError&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;error&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、&lt;a href=&quot;../../dart-core/nullthrownerror-class&quot;&gt;NullThrownErrorに&lt;/a&gt;置き換えられます。</target>
        </trans-unit>
        <trans-unit id="6f1f320a9ae086490654768065c5505191a5b495" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;error&lt;/code&gt; is a &lt;code&gt;Future&lt;/code&gt;, the future itself is used as the error value. If you want to complete with the result of the future, you can use:</source>
          <target state="translated">場合は &lt;code&gt;error&lt;/code&gt; ある &lt;code&gt;Future&lt;/code&gt; 、未来そのものはエラー値として使用されます。将来の結果を完了したい場合は、以下を使用できます。</target>
        </trans-unit>
        <trans-unit id="bc2549db38ab12255bea6adf0eef40aaae4fb85c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;error&lt;/code&gt; is an &lt;a href=&quot;../../dart-core/error-class&quot;&gt;Error&lt;/a&gt; and it has an &lt;a href=&quot;../../dart-core/error/stacktrace&quot;&gt;Error.stackTrace&lt;/a&gt;, that stack trace is returned. If not, the &lt;a href=&quot;../../dart-core/stacktrace/empty-constant&quot;&gt;StackTrace.empty&lt;/a&gt; default stack trace is returned.</source>
          <target state="translated">場合は &lt;code&gt;error&lt;/code&gt; ある&lt;a href=&quot;../../dart-core/error-class&quot;&gt;エラー&lt;/a&gt;と、それは持っている&lt;a href=&quot;../../dart-core/error/stacktrace&quot;&gt;Error.stackTraceを&lt;/a&gt;、そのスタックトレースが返されます。そうでない場合は、&lt;a href=&quot;../../dart-core/stacktrace/empty-constant&quot;&gt;StackTrace.emptyの&lt;/a&gt;デフォルトのスタックトレースが返されます。</target>
        </trans-unit>
        <trans-unit id="5d2262d0a2d2bd98dd6ad8f43360b0231128db7d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;errorsAreFatal&lt;/code&gt; is omitted, the platform may choose a default behavior or inherit the current isolate's behavior.</source>
          <target state="translated">場合 &lt;code&gt;errorsAreFatal&lt;/code&gt; が省略され、プラットフォームはデフォルトの動作を選択するか、現在の分離株の振る舞いを継承することができます。</target>
        </trans-unit>
        <trans-unit id="f4def179b7ae3832db0595794da7b27d08cef80f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;filterKey&lt;/code&gt; is provided, a property named &lt;code&gt;filterKey&lt;/code&gt; will be inserted into the arguments of each event associated with this task. The &lt;code&gt;filterKey&lt;/code&gt; will be set to the value of &lt;code&gt;filterKey&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;filterKey&lt;/code&gt; が指定されている場合、filterKeyという名前の &lt;code&gt;filterKey&lt;/code&gt; が、このタスクに関連付けられている各イベントの引数に挿入されます。 &lt;code&gt;filterKey&lt;/code&gt; はの値に設定されます &lt;code&gt;filterKey&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="75a0af19839c8af04c29f6a0ffc314abee764d46" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;followLinks&lt;/code&gt; is false, then any symbolic links found are reported as &lt;a href=&quot;../link-class&quot;&gt;Link&lt;/a&gt; objects, rather than as directories or files, and are not recursed into.</source>
          <target state="translated">&lt;code&gt;followLinks&lt;/code&gt; がfalseの場合、見つかったシンボリックリンクはディレクトリまたはファイルとしてではなく、&lt;a href=&quot;../link-class&quot;&gt;リンク&lt;/a&gt;オブジェクトとして報告され、再帰されません。</target>
        </trans-unit>
        <trans-unit id="207a7b4ac974ede40b39868a0aa5936cfb787b81" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;followLinks&lt;/code&gt; is true, then working links are reported as directories or files, depending on their type, and links to directories are recursed into. Broken links are reported as &lt;a href=&quot;../link-class&quot;&gt;Link&lt;/a&gt; objects. If a link makes a loop in the file system, then a recursive listing will not follow a link twice in the same recursive descent, but will report it as a &lt;a href=&quot;../link-class&quot;&gt;Link&lt;/a&gt; the second time it is seen.</source>
          <target state="translated">場合 &lt;code&gt;followLinks&lt;/code&gt; が真である場合、作業のリンクは、その種類に応じて、ディレクトリやファイルとして報告され、およびディレクトリへのリンクはに再帰されています。壊れたリンクは、&lt;a href=&quot;../link-class&quot;&gt;リンク&lt;/a&gt;オブジェクトとして報告されます。リンクがファイルシステムでループを形成する場合、再帰的リストは同じ再帰的下降でリンクを2回たどることはありませんが、2回目に&lt;a href=&quot;../link-class&quot;&gt;リンク&lt;/a&gt;として報告されます。</target>
        </trans-unit>
        <trans-unit id="b3a33a0c152bfd23fcb61b9e26078ede765b3301" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;followLinks&lt;/code&gt; is true, then working links are reported as directories or files, depending on their type, and links to directories are recursed into. Broken links are reported as &lt;a href=&quot;../link-class&quot;&gt;Link&lt;/a&gt; objects. If a symbolic link makes a loop in the file system, then a recursive listing will not follow a link twice in the same recursive descent, but will report it as a &lt;a href=&quot;../link-class&quot;&gt;Link&lt;/a&gt; the second time it is seen.</source>
          <target state="translated">場合 &lt;code&gt;followLinks&lt;/code&gt; が真である場合、作業のリンクは、その種類に応じて、ディレクトリやファイルとして報告され、およびディレクトリへのリンクはに再帰されています。壊れたリンクは、&lt;a href=&quot;../link-class&quot;&gt;リンク&lt;/a&gt;オブジェクトとして報告されます。シンボリックリンクがファイルシステムでループを作成する場合、再帰的リストは、同じ再帰的下降でリンクを2回たどることはありませんが、2回目に見られたときに&lt;a href=&quot;../link-class&quot;&gt;リンク&lt;/a&gt;として報告します。</target>
        </trans-unit>
        <trans-unit id="71944e85a57b443b7d03cb1fe9b07ca106d472f7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;followLoops&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, redirect will follow the redirect, even if the URL was already visited. The default value is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;followLoops&lt;/code&gt; がに設定されている &lt;code&gt;true&lt;/code&gt; 、リダイレクトは、URLがすでに訪れた場合でも、リダイレクトに従います。デフォルト値は &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8754377ce8016df64f82715c6c857b6348dd305f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;force&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; (the default) the &lt;a href=&quot;../httpclient-class&quot;&gt;HttpClient&lt;/a&gt; will be kept alive until all active connections are done. If &lt;code&gt;force&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; any active connections will be closed to immediately release all resources. These closed connections will receive an error event to indicate that the client was shut down. In both cases trying to establish a new connection after calling &lt;a href=&quot;close&quot;&gt;close&lt;/a&gt; will throw an exception.</source>
          <target state="translated">場合は &lt;code&gt;force&lt;/code&gt; ある &lt;code&gt;false&lt;/code&gt; （デフォルト）&lt;a href=&quot;../httpclient-class&quot;&gt;のHttpClient&lt;/a&gt;すべてのアクティブな接続が完了するまで生かされます。場合は &lt;code&gt;force&lt;/code&gt; ある &lt;code&gt;true&lt;/code&gt; 任意のアクティブな接続がすぐにすべてのリソースを解放するために閉じられます。これらの閉じられた接続は、クライアントがシャットダウンされたことを示すエラーイベントを受け取ります。どちらの場合も、&lt;a href=&quot;close&quot;&gt;close&lt;/a&gt;を呼び出した後に新しい接続を確立しようとすると、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="23be9aaea52918df17f6e2f695ad2089c0b9eead" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;force&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, active connections will be closed immediately.</source>
          <target state="translated">場合は &lt;code&gt;force&lt;/code&gt; ある &lt;code&gt;true&lt;/code&gt; 、アクティブな接続はすぐに閉じられます。</target>
        </trans-unit>
        <trans-unit id="857e6ab18f993d193bf63be5257066aca7bc3773" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;fractionDigits&lt;/code&gt; equals 0 then the decimal point is omitted. Examples:</source>
          <target state="translated">場合 &lt;code&gt;fractionDigits&lt;/code&gt; が、その後0に等しい小数点が省略されています。例：</target>
        </trans-unit>
        <trans-unit id="1a37306b83e0f9cd84af38f5e2c6fd44e5e06325" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;fractionDigits&lt;/code&gt; is given then it must be an integer satisfying: &lt;code&gt;0 &amp;lt;= fractionDigits &amp;lt;= 20&lt;/code&gt;. In this case the string contains exactly &lt;code&gt;fractionDigits&lt;/code&gt; after the decimal point. Otherwise, without the parameter, the returned string uses the shortest number of digits that accurately represent &lt;a href=&quot;../num-class&quot;&gt;this&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;fractionDigits&lt;/code&gt; を指定する場合は、 &lt;code&gt;0 &amp;lt;= fractionDigits &amp;lt;= 20&lt;/code&gt; を満たす整数である必要があります。この場合、文字列には小数点の後に正確に &lt;code&gt;fractionDigits&lt;/code&gt; が含まれています。それ以外の場合、パラメータなしで、返される文字列は&lt;a href=&quot;../num-class&quot;&gt;this&lt;/a&gt;を正確に表す最短の桁数を使用します。</target>
        </trans-unit>
        <trans-unit id="badee67f3364b4ee191c9f456015cb602c363c1e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;futureValue&lt;/code&gt; is omitted, the value &lt;code&gt;null as E&lt;/code&gt; is used as a default. If &lt;code&gt;E&lt;/code&gt; is not nullable, this will throw immediately when &lt;a href=&quot;asfuture&quot;&gt;asFuture&lt;/a&gt; is called.</source>
          <target state="translated">場合 &lt;code&gt;futureValue&lt;/code&gt; が省略され、値 &lt;code&gt;null as E&lt;/code&gt; デフォルトとして使用されます。 &lt;code&gt;E&lt;/code&gt; がnull許容でない場合、&lt;a href=&quot;asfuture&quot;&gt;asFuture&lt;/a&gt;が呼び出されるとすぐにスローされます。</target>
        </trans-unit>
        <trans-unit id="708a1b1584e6722365dfb09830240cfda35b3238" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;futures&lt;/code&gt; is empty, or if none of its futures complete, the returned future never completes.</source>
          <target state="translated">&lt;code&gt;futures&lt;/code&gt; が空の場合、またはその先物がどれも完了しない場合、返された先物は決して完了しません。</target>
        </trans-unit>
        <trans-unit id="bbebbf69410c975595f141d368198ef7946eb10d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;futures&lt;/code&gt; is empty, the stream closes as soon as possible.</source>
          <target state="translated">場合 &lt;code&gt;futures&lt;/code&gt; 空である、流れはできるだけ早く終了します。</target>
        </trans-unit>
        <trans-unit id="50bc4813c4cb8ad3d30d341df2a8790c7a35dfcd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;generator&lt;/code&gt; is omitted, it defaults to an identity function on integers &lt;code&gt;(int x) =&amp;gt; x&lt;/code&gt;, so it may only be omitted if the type parameter allows integer values. That is, if &lt;code&gt;E&lt;/code&gt; is a super-type of &lt;a href=&quot;../int-class&quot;&gt;int&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;generator&lt;/code&gt; が省略された場合、デフォルトでは整数 &lt;code&gt;(int x) =&amp;gt; x&lt;/code&gt; 恒等関数になるため、typeパラメータで整数値が許可されている場合にのみ省略できます。つまり、 &lt;code&gt;E&lt;/code&gt; が&lt;a href=&quot;../int-class&quot;&gt;intの&lt;/a&gt;スーパータイプである場合。</target>
        </trans-unit>
        <trans-unit id="dad2f8d4c4141e385db22923247592f9f32c2049" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;group&lt;/code&gt; is 0, returns the match of the pattern.</source>
          <target state="translated">&lt;code&gt;group&lt;/code&gt; が0の場合、パターンの一致を返します。</target>
        </trans-unit>
        <trans-unit id="5b7a74186e1a7a758f85760c596c4e6638146dc0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;growable&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, which is the default, the list is a fixed-length list of length zero. If &lt;code&gt;growable&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, the list is growable and equivalent to &lt;code&gt;&amp;lt;E&amp;gt;[]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;growable&lt;/code&gt; がデフォルトである &lt;code&gt;false&lt;/code&gt; の場合、リストは長さがゼロの固定長リストです。場合は &lt;code&gt;growable&lt;/code&gt; ある &lt;code&gt;true&lt;/code&gt; 、リストが成長可能と同等です &lt;code&gt;&amp;lt;E&amp;gt;[]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ed8a4542e18b6447556733f8ba50b4e30f89edd9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;hasReflectedType&lt;/code&gt; returns true, returns the corresponding &lt;a href=&quot;../../dart-core/type-class&quot;&gt;Type&lt;/a&gt;. Otherwise, an &lt;a href=&quot;../../dart-core/unsupportederror-class&quot;&gt;UnsupportedError&lt;/a&gt; is thrown.</source>
          <target state="translated">&lt;code&gt;hasReflectedType&lt;/code&gt; がtrueを返す場合、対応する&lt;a href=&quot;../../dart-core/type-class&quot;&gt;Typeを&lt;/a&gt;返します。それ以外の場合は、&lt;a href=&quot;../../dart-core/unsupportederror-class&quot;&gt;UnsupportedError&lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="d54544964fe4b4249079bded055455785b34d527" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;hasReflectedType&lt;/code&gt; returns true, returns the corresponding &lt;a href=&quot;../dart-core/type-class&quot;&gt;Type&lt;/a&gt;. Otherwise, an &lt;a href=&quot;../dart-core/unsupportederror-class&quot;&gt;UnsupportedError&lt;/a&gt; is thrown.</source>
          <target state="translated">&lt;code&gt;hasReflectedType&lt;/code&gt; がtrueを返す場合、対応する&lt;a href=&quot;../dart-core/type-class&quot;&gt;Typeを&lt;/a&gt;返します。それ以外の場合は、&lt;a href=&quot;../dart-core/unsupportederror-class&quot;&gt;UnsupportedError&lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="2ab1c19a10449624a7ee551706e95d9d82869380" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;headers&lt;/code&gt; is provided, there are a number of headers which are controlled by the WebSocket connection process. These headers are:</source>
          <target state="translated">&lt;code&gt;headers&lt;/code&gt; が提供されている場合、WebSocket接続プロセスによって制御されるヘッダーがいくつかあります。これらのヘッダーは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="cb27ec41fb1b2f4b0eb0b0ec8da007ba8a59bc8d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;includeLinkLocal&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, the list of addresses of the returned &lt;a href=&quot;../networkinterface-class&quot;&gt;NetworkInterface&lt;/a&gt;s, may include link local addresses. Default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;includeLinkLocal&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; の場合、返される&lt;a href=&quot;../networkinterface-class&quot;&gt;NetworkInterface&lt;/a&gt;のアドレスのリストには、リンクローカルアドレスが含まれる場合があります。デフォルトは &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0020b85c00cf92bb58eabe023b4ddf052a06456a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;includeLoopback&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, the returned list will include the loopback device. Default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;includeLoopback&lt;/code&gt; がある &lt;code&gt;true&lt;/code&gt; 、返されたリストには、ループバックデバイスが含まれます。デフォルトは &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="12adad285fdb7c2243cf18a2104dcdae74e7d5b9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;includeParentEnvironment&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, the process's environment will include the parent process's environment, with &lt;code&gt;environment&lt;/code&gt; taking precedence. Default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;includeParentEnvironment&lt;/code&gt; がある &lt;code&gt;true&lt;/code&gt; 、プロセスの環境ではと、親プロセスの環境が含まれます &lt;code&gt;environment&lt;/code&gt; 優先して。デフォルトは &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="600f9bac88875b2c11445a1236b252b09fb035f0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;indent&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, the output is encoded as a single line.</source>
          <target state="translated">場合 &lt;code&gt;indent&lt;/code&gt; ある &lt;code&gt;null&lt;/code&gt; 、出力は、単一のラインとして符号化されます。</target>
        </trans-unit>
        <trans-unit id="a88f9074ea7f7b2a7fc1b7fc11ace2586ffc2748" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;indent&lt;/code&gt; is non-&lt;code&gt;null&lt;/code&gt;, the converter attempts to &quot;pretty-print&quot; the JSON, and uses &lt;code&gt;indent&lt;/code&gt; as the indentation. Otherwise the result has no whitespace outside of string literals. If &lt;code&gt;indent&lt;/code&gt; contains characters that are not valid JSON whitespace characters, the result will not be valid JSON. JSON whitespace characters are space (U+0020), tab (U+0009), line feed (U+000a) and carriage return (U+000d) (&lt;a href=&quot;http://www.ecma-international.org/publications/standards/Ecma-404.htm&quot;&gt;ECMA 404&lt;/a&gt;).</source>
          <target state="translated">もし &lt;code&gt;indent&lt;/code&gt; 非ある &lt;code&gt;null&lt;/code&gt; 、「プリティプリント」JSONに変換しようと、及び使用 &lt;code&gt;indent&lt;/code&gt; インデントとして。それ以外の場合、結果には文字列リテラルの外側に空白はありません。 &lt;code&gt;indent&lt;/code&gt; に有効なJSON空白文字ではない文字が含まれている場合、結果は有効なJSONではなくなります。JSONの空白文字は、スペース（U + 0020）、タブ（U + 0009）、ラインフィード（U + 000a）、キャリッジリターン（U + 000d）（&lt;a href=&quot;http://www.ecma-international.org/publications/standards/Ecma-404.htm&quot;&gt;ECMA 404&lt;/a&gt;）です。</target>
        </trans-unit>
        <trans-unit id="4985e859702a462c1648f39164995679313bd907" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;indent&lt;/code&gt; is non-&lt;code&gt;null&lt;/code&gt;, the converter attempts to &quot;pretty-print&quot; the JSON, and uses &lt;code&gt;indent&lt;/code&gt; as the indentation. Otherwise the result has no whitespace outside of string literals. If &lt;code&gt;indent&lt;/code&gt; contains characters that are not valid JSON whitespace characters, the result will not be valid JSON. JSON whitespace characters are space (U+0020), tab (U+0009), line feed (U+000a) and carriage return (U+000d) (&lt;a href=&quot;https://www.ecma-international.org/publications/standards/Ecma-404.htm&quot;&gt;ECMA 404&lt;/a&gt;).</source>
          <target state="translated">もし &lt;code&gt;indent&lt;/code&gt; 非ある &lt;code&gt;null&lt;/code&gt; 、「プリティプリント」JSONに変換しようと、及び使用 &lt;code&gt;indent&lt;/code&gt; インデントとして。それ以外の場合、結果には文字列リテラルの外側に空白がありません。 &lt;code&gt;indent&lt;/code&gt; に有効なJSON空白文字ではない文字が含まれている場合、結果は有効なJSONではありません。JSON空白文字は、スペース（U + 0020）、タブ（U + 0009）、改行（U + 000a）、およびキャリッジリターン（U + 000d）（&lt;a href=&quot;https://www.ecma-international.org/publications/standards/Ecma-404.htm&quot;&gt;ECMA 404&lt;/a&gt;）です。</target>
        </trans-unit>
        <trans-unit id="9cdd412b1e4ca59d464a89becc183126642e3d5e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;index&lt;/code&gt; is provided, this method checks if the substring starting at that index starts with a match of &lt;code&gt;pattern&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;index&lt;/code&gt; が指定されている場合、このメソッドは、そのインデックスで始まる部分文字列が &lt;code&gt;pattern&lt;/code&gt; の一致で始まるかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="bbb5efbe3c002e264779b32e7e8a4e1a6468f094" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;initialCapacity&lt;/code&gt; is given, prepare the queue for at least that many elements.</source>
          <target state="translated">&lt;code&gt;initialCapacity&lt;/code&gt; が指定されている場合は、少なくともその数の要素のキューを準備します。</target>
        </trans-unit>
        <trans-unit id="982a8aac0753b0d255fd63f71af577fb53e2f530" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;isBroadcast&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, the returned stream's &lt;a href=&quot;isbroadcast&quot;&gt;Stream.isBroadcast&lt;/a&gt; will be &lt;code&gt;true&lt;/code&gt;. This has no effect on the stream behavior, it is up to the &lt;code&gt;onListen&lt;/code&gt; function to act like a broadcast stream if it claims to be one.</source>
          <target state="translated">場合 &lt;code&gt;isBroadcast&lt;/code&gt; がに設定されている &lt;code&gt;true&lt;/code&gt; 、返されたストリームの&lt;a href=&quot;isbroadcast&quot;&gt;Stream.isBroadcastは&lt;/a&gt;なります &lt;code&gt;true&lt;/code&gt; 。これはストリームの動作には影響しません。ブロードキャストストリームであると主張する場合、ブロードキャストストリームのように動作するのは &lt;code&gt;onListen&lt;/code&gt; 関数次第です。</target>
        </trans-unit>
        <trans-unit id="72c0fd26461f98dfcc82776516c9367cf0bd2f49" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;isLast&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; closes &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;isLast&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; の場合、 &lt;code&gt;this&lt;/code&gt; 閉じます。</target>
        </trans-unit>
        <trans-unit id="de680eda993f3e19a498ac0e24978a1d7c39477b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;isUtc&lt;/code&gt; is false then the date is in the local time zone.</source>
          <target state="translated">場合 &lt;code&gt;isUtc&lt;/code&gt; が falseで、日付は現地時間帯です。</target>
        </trans-unit>
        <trans-unit id="45b6437fac6aac5b6e1c363fd7278d7f8b957ea9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;isValidKey&lt;/code&gt; is omitted, it defaults to testing if the object is an &lt;code&gt;E&lt;/code&gt; instance. That means that:</source>
          <target state="translated">場合 &lt;code&gt;isValidKey&lt;/code&gt; が試験に省略され、それはデフォルトオブジェクトがある場合 &lt;code&gt;E&lt;/code&gt; のインスタンス。つまり、</target>
        </trans-unit>
        <trans-unit id="ddf86156aa1d68803b71982d051c2ec9feb21af5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;isValidKey&lt;/code&gt; is provided, only values satisfying &lt;code&gt;isValidKey(other)&lt;/code&gt; are compared using the &lt;code&gt;compare&lt;/code&gt; method in the methods mentioned above. If the &lt;code&gt;isValidKey&lt;/code&gt; function returns false for an object, it is assumed to not be in the set.</source>
          <target state="translated">&lt;code&gt;isValidKey&lt;/code&gt; が指定されている場合、 &lt;code&gt;isValidKey(other)&lt;/code&gt; を満たす値のみが、上記のメソッドの &lt;code&gt;compare&lt;/code&gt; メソッドを使用して比較されます。 &lt;code&gt;isValidKey&lt;/code&gt; 関数がオブジェクトに対してfalseを返す場合、セットに含まれていないと見なされます。</target>
        </trans-unit>
        <trans-unit id="16ee1ac1f1f896691c7fe4b1a528f5a7de3d8195" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;iterable&lt;/code&gt; depends on this list in some other way, no guarantees are made.</source>
          <target state="translated">&lt;code&gt;iterable&lt;/code&gt; が他の方法でこのリストに依存している場合、保証はありません。</target>
        </trans-unit>
        <trans-unit id="31904fbe5f94c3d0b42d43b3314c3286daca5e90" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;iterable&lt;/code&gt; is based on this list, its values may change /during/ the &lt;code&gt;setAll&lt;/code&gt; operation.</source>
          <target state="translated">&lt;code&gt;iterable&lt;/code&gt; がこのリストに基づいている場合、その値は/ &lt;code&gt;setAll&lt;/code&gt; / setAll操作中に変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="2beca22ed1daee964007495474b84d929431b7a2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;iterable&lt;/code&gt; is this list, the operation copies the elements originally in the range from &lt;code&gt;skipCount&lt;/code&gt; to &lt;code&gt;skipCount + (end - start)&lt;/code&gt; to the range &lt;code&gt;start&lt;/code&gt; to &lt;code&gt;end&lt;/code&gt;, even if the two ranges overlap.</source>
          <target state="translated">場合 &lt;code&gt;iterable&lt;/code&gt; 、このリストで、操作コピー本来の範囲内の要素 &lt;code&gt;skipCount&lt;/code&gt; に &lt;code&gt;skipCount + (end - start)&lt;/code&gt; レンジに &lt;code&gt;start&lt;/code&gt; する &lt;code&gt;end&lt;/code&gt; 、二つの範囲が重なっていても。</target>
        </trans-unit>
        <trans-unit id="61b99aecb052dbbe8306b22e785bcf923abf8b50" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;key&lt;/code&gt; is not an instance of &lt;a href=&quot;../dart-core/type-class&quot;&gt;Type&lt;/a&gt;, then this function throws an &lt;a href=&quot;../dart-core/argumenterror-class&quot;&gt;ArgumentError&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; が&lt;a href=&quot;../dart-core/type-class&quot;&gt;Typeの&lt;/a&gt;インスタンスでない場合、この関数は&lt;a href=&quot;../dart-core/argumenterror-class&quot;&gt;ArgumentErrorを&lt;/a&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="066227ba8840006c2a770846316cd11af80469ef" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;key&lt;/code&gt; is not an instance of &lt;a href=&quot;../dart-core/type-class&quot;&gt;Type&lt;/a&gt;, then this function throws an &lt;a href=&quot;../dart-core/argumenterror-class&quot;&gt;ArgumentError&lt;/a&gt;. If &lt;code&gt;key&lt;/code&gt; is the Type for dynamic or a function typedef, throws an &lt;a href=&quot;../dart-core/argumenterror-class&quot;&gt;ArgumentError&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; が&lt;a href=&quot;../dart-core/type-class&quot;&gt;Typeの&lt;/a&gt;インスタンスでない場合、この関数は&lt;a href=&quot;../dart-core/argumenterror-class&quot;&gt;ArgumentErrorを&lt;/a&gt;スローします。場合は &lt;code&gt;key&lt;/code&gt; 動的または関数typedefのタイプがあり、スロー&lt;a href=&quot;../dart-core/argumenterror-class&quot;&gt;例外ArgumentErrorを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2660e7c20f196e4721c60e17f8cf679d5afdc798" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;keys&lt;/code&gt; contains the same object multiple times, the last occurrence overwrites the previous value.</source>
          <target state="translated">&lt;code&gt;keys&lt;/code&gt; に同じオブジェクトが複数回含まれている場合、最後に出現すると以前の値が上書きされます。</target>
        </trans-unit>
        <trans-unit id="e37e0dc97bb55119a1ff32edfa702e4acbe0660d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;length&lt;/code&gt; is provided, it is used as the length of the indexable object, otherwise the length is found as &lt;code&gt;indexable.length&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;length&lt;/code&gt; 提供され、それ以外の長さは以下のように発見され、割出し可能オブジェクトの長さとして使用さ &lt;code&gt;indexable.length&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6b0617b5cae36a1801d3a8de2559ccc66100d78c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;library&lt;/code&gt; is not a &lt;a href=&quot;../librarymirror-class&quot;&gt;LibraryMirror&lt;/a&gt; or if &lt;code&gt;name&lt;/code&gt; is a private identifier and &lt;code&gt;library&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, throws an &lt;a href=&quot;../../dart-core/argumenterror-class&quot;&gt;ArgumentError&lt;/a&gt;. If &lt;code&gt;name&lt;/code&gt; is a private identifier, the symbol returned is with respect to &lt;code&gt;library&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;library&lt;/code&gt; が&lt;a href=&quot;../librarymirror-class&quot;&gt;LibraryMirrorで&lt;/a&gt;はない場合、または &lt;code&gt;name&lt;/code&gt; がプライベート識別子であり、 &lt;code&gt;library&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、&lt;a href=&quot;../../dart-core/argumenterror-class&quot;&gt;ArgumentErrorを&lt;/a&gt;スローします。場合は &lt;code&gt;name&lt;/code&gt; プライベートな識別子であり、返されたシンボルは、に関するものである &lt;code&gt;library&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e5a959292253dd319223d4f33eb11b609e49e932" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;mimeType&lt;/code&gt; and/or &lt;code&gt;parameters&lt;/code&gt; are supplied, they are added to the created URI. If any of these contain characters that are not allowed in the data URI, the character is percent-escaped. If the character is non-ASCII, it is first UTF-8 encoded and then the bytes are percent encoded. An omitted &lt;code&gt;mimeType&lt;/code&gt; in a data URI means &lt;code&gt;text/plain&lt;/code&gt;, just as an omitted &lt;code&gt;charset&lt;/code&gt; parameter defaults to meaning &lt;code&gt;US-ASCII&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;mimeType&lt;/code&gt; および/または &lt;code&gt;parameters&lt;/code&gt; 供給され、それらが作成されたURIに追加されます。これらのいずれかにデータURIで許可されていない文字が含まれている場合、文字はパーセントでエスケープされます。文字が非ASCIIの場合、最初にUTF-8でエンコードされ、次にバイトがパーセントでエンコードされます。データURIで省略された &lt;code&gt;mimeType&lt;/code&gt; は、省略された &lt;code&gt;charset&lt;/code&gt; パラメータがデフォルトで &lt;code&gt;US-ASCII&lt;/code&gt; を意味するように、 &lt;code&gt;text/plain&lt;/code&gt; を意味します。</target>
        </trans-unit>
        <trans-unit id="3178891f98e870b95f35556e9f79c7a6fc44089c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;mode&lt;/code&gt; is &lt;a href=&quot;../filelock/exclusive-constant&quot;&gt;FileLock.exclusive&lt;/a&gt; or &lt;a href=&quot;../filelock/shared-constant&quot;&gt;FileLock.shared&lt;/a&gt;, an error is signaled if the lock cannot be obtained. If &lt;code&gt;mode&lt;/code&gt; is &lt;a href=&quot;../filelock/blockingexclusive-constant&quot;&gt;FileLock.blockingExclusive&lt;/a&gt; or &lt;a href=&quot;../filelock/blockingshared-constant&quot;&gt;FileLock.blockingShared&lt;/a&gt;, the returned &lt;a href=&quot;../../dart-async/future-class&quot;&gt;Future&lt;/a&gt; is resolved only when the lock has been obtained.</source>
          <target state="translated">場合 &lt;code&gt;mode&lt;/code&gt; ある&lt;a href=&quot;../filelock/exclusive-constant&quot;&gt;FileLock.exclusive&lt;/a&gt;又は&lt;a href=&quot;../filelock/shared-constant&quot;&gt;FileLock.shared&lt;/a&gt;ロックが取得できない場合、エラーが通知されます。場合 &lt;code&gt;mode&lt;/code&gt; ある&lt;a href=&quot;../filelock/blockingexclusive-constant&quot;&gt;FileLock.blockingExclusive&lt;/a&gt;または&lt;a href=&quot;../filelock/blockingshared-constant&quot;&gt;FileLock.blockingShared&lt;/a&gt;、返された&lt;a href=&quot;../../dart-async/future-class&quot;&gt;今後は、&lt;/a&gt;ロックが取得されたときにのみ解決されます。</target>
        </trans-unit>
        <trans-unit id="c76db9cf827818f8119dfcc4427f05778270b85e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;mode&lt;/code&gt; is &lt;a href=&quot;../filelock/exclusive-constant&quot;&gt;FileLock.exclusive&lt;/a&gt; or &lt;a href=&quot;../filelock/shared-constant&quot;&gt;FileLock.shared&lt;/a&gt;, an exception is thrown if the lock cannot be obtained. If &lt;code&gt;mode&lt;/code&gt; is &lt;a href=&quot;../filelock/blockingexclusive-constant&quot;&gt;FileLock.blockingExclusive&lt;/a&gt; or &lt;a href=&quot;../filelock/blockingshared-constant&quot;&gt;FileLock.blockingShared&lt;/a&gt;, the call returns only after the lock has been obtained.</source>
          <target state="translated">場合 &lt;code&gt;mode&lt;/code&gt; ある&lt;a href=&quot;../filelock/exclusive-constant&quot;&gt;FileLock.exclusive&lt;/a&gt;か&lt;a href=&quot;../filelock/shared-constant&quot;&gt;FileLock.shared&lt;/a&gt;ロックが取得できない場合、例外がスローされます。場合 &lt;code&gt;mode&lt;/code&gt; ある&lt;a href=&quot;../filelock/blockingexclusive-constant&quot;&gt;FileLock.blockingExclusive&lt;/a&gt;または&lt;a href=&quot;../filelock/blockingshared-constant&quot;&gt;FileLock.blockingShared&lt;/a&gt;、呼び出しがロックが取得された後にのみ返されます。</target>
        </trans-unit>
        <trans-unit id="b8171b52ff86e888339eaa3de6e2735263d13321" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;mode&lt;/code&gt; is &lt;a href=&quot;../processstartmode/detached-constant&quot;&gt;ProcessStartMode.detached&lt;/a&gt; a detached process will be created. A detached process has no connection to its parent, and can keep running on its own when the parent dies. The only information available from a detached process is its &lt;code&gt;pid&lt;/code&gt;. There is no connection to its &lt;code&gt;stdin&lt;/code&gt;, &lt;code&gt;stdout&lt;/code&gt; or &lt;code&gt;stderr&lt;/code&gt;, nor will the process' exit code become available when it terminates.</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; が&lt;a href=&quot;../processstartmode/detached-constant&quot;&gt;ProcessStartMode.detachedの&lt;/a&gt;場合、分離プロセスが作成されます。デタッチされたプロセスは、その親とは接続されておらず、親が死んだときに自力で実行し続けることができます。デタッチされたプロセスから入手できる唯一の情報は、その &lt;code&gt;pid&lt;/code&gt; です。その &lt;code&gt;stdin&lt;/code&gt; 、 &lt;code&gt;stdout&lt;/code&gt; 、または &lt;code&gt;stderr&lt;/code&gt; への接続はなく、プロセスの終了時にプロセスの終了コードが利用可能になることもありません。</target>
        </trans-unit>
        <trans-unit id="27edaca433a4663e1f6720ea97e5dd94028e5d9c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;mode&lt;/code&gt; is &lt;a href=&quot;../processstartmode/detachedwithstdio-constant&quot;&gt;ProcessStartMode.detachedWithStdio&lt;/a&gt; a detached process will be created where the &lt;code&gt;stdin&lt;/code&gt;, &lt;code&gt;stdout&lt;/code&gt; and &lt;code&gt;stderr&lt;/code&gt; are connected. The creator can communicate with the child through these. The detached process will keep running even if these communication channels are closed. The process' exit code will not become available when it terminated.</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; が&lt;a href=&quot;../processstartmode/detachedwithstdio-constant&quot;&gt;ProcessStartMode.detachedWithStdioの&lt;/a&gt;場合は、 &lt;code&gt;stdin&lt;/code&gt; 、 &lt;code&gt;stdout&lt;/code&gt; 、および &lt;code&gt;stderr&lt;/code&gt; が接続されている分離プロセスが作成されます。クリエイターはこれらを通じて子供とコミュニケーションをとることができます。分離されたプロセスは、これらの通信チャネルが閉じている場合でも実行を継続します。プロセスが終了すると、プロセスの終了コードは使用できなくなります。</target>
        </trans-unit>
        <trans-unit id="a8fc948717d6d099a54eb04767b87fd74aca9440" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;mode&lt;/code&gt; is &lt;a href=&quot;../processstartmode/normal-constant&quot;&gt;ProcessStartMode.normal&lt;/a&gt; (the default) a child process will be started with &lt;code&gt;stdin&lt;/code&gt;, &lt;code&gt;stdout&lt;/code&gt; and &lt;code&gt;stderr&lt;/code&gt; connected.</source>
          <target state="translated">場合 &lt;code&gt;mode&lt;/code&gt; ある&lt;a href=&quot;../processstartmode/normal-constant&quot;&gt;ProcessStartMode.normal&lt;/a&gt;（デフォルト）子プロセスがで開始される &lt;code&gt;stdin&lt;/code&gt; 、 &lt;code&gt;stdout&lt;/code&gt; と &lt;code&gt;stderr&lt;/code&gt; に接続します。</target>
        </trans-unit>
        <trans-unit id="0f763f9a99d94ab9f649e8c2a9ff99e78d4d99b0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;mode&lt;/code&gt; is provided as either &lt;a href=&quot;../htmlescapemode/attribute-constant&quot;&gt;HtmlEscapeMode.attribute&lt;/a&gt; or &lt;a href=&quot;../htmlescapemode/element-constant&quot;&gt;HtmlEscapeMode.element&lt;/a&gt;, only the corresponding subset of HTML characters are escaped. The default is to escape all HTML characters.</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; が&lt;a href=&quot;../htmlescapemode/attribute-constant&quot;&gt;HtmlEscapeMode.attribute&lt;/a&gt;または&lt;a href=&quot;../htmlescapemode/element-constant&quot;&gt;HtmlEscapeMode.elementの&lt;/a&gt;いずれかとして提供されている場合、対応するHTML文字のサブセットのみがエスケープされます。デフォルトでは、すべてのHTML文字をエスケープします。</target>
        </trans-unit>
        <trans-unit id="7608451364d912e3ad0dcdeecadd9b9977a7dc6d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;multiLine&lt;/code&gt; is enabled, then &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; will match the beginning and end of a &lt;em&gt;line&lt;/em&gt;, in addition to matching beginning and end of input, respectively.</source>
          <target state="translated">場合は &lt;code&gt;multiLine&lt;/code&gt; 有効になっている、そして &lt;code&gt;^&lt;/code&gt; と &lt;code&gt;$&lt;/code&gt; の先頭と末尾に一致します&lt;em&gt;ラインを&lt;/em&gt;それぞれ、入力の開始と終了をマッチングに加えて、。</target>
        </trans-unit>
        <trans-unit id="b8d530d7d0a8f54cca1deac126797e5f113b8334" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;name&lt;/code&gt; is a single identifier that does not start with an underscore, or it is a qualified identifier, or it is an operator name different from &lt;code&gt;unary-&lt;/code&gt;, then the result of &lt;code&gt;const Symbol(name)&lt;/code&gt; is the same instance that the symbol literal created by prefixing &lt;code&gt;#&lt;/code&gt; to the content of &lt;code&gt;name&lt;/code&gt; would evaluate to.</source>
          <target state="translated">場合 &lt;code&gt;name&lt;/code&gt; アンダースコアで始まらない単一の識別子であり、またはそれは修飾識別子であるか、またはそれからオペレータ名異なる &lt;code&gt;unary-&lt;/code&gt; の、結果 &lt;code&gt;const Symbol(name)&lt;/code&gt; シンボルがリテラル作成した同じインスタンスであります &lt;code&gt;name&lt;/code&gt; のコンテンツの前に &lt;code&gt;#&lt;/code&gt; を付けると、評価されます。</target>
        </trans-unit>
        <trans-unit id="a8b5429402f105587732ce238735cdf5afbd7648" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;name&lt;/code&gt; is not declared in the environment, the result is instead &lt;code&gt;defaultValue&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; が環境で宣言されていない場合、結果は代わりに &lt;code&gt;defaultValue&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="24251526f7723e81b488361ce04e66cfad5aabf3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;name&lt;/code&gt; is supplied, it is used as the parameter name in the error message.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; が指定されている場合は、エラーメッセージのパラメータ名として使用されます。</target>
        </trans-unit>
        <trans-unit id="9c7e0036f4115508cdcb310264e7869b4bd7ba17" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;name&lt;/code&gt; or &lt;code&gt;message&lt;/code&gt; are provided, they are used as the parameter name and message text of the thrown error.</source>
          <target state="translated">場合は &lt;code&gt;name&lt;/code&gt; や &lt;code&gt;message&lt;/code&gt; 提供され、それらを投げ、エラーのパラメータ名とメッセージテキストとして使用されています。</target>
        </trans-unit>
        <trans-unit id="a4c6a39f23b6ba64749ba9cd55a0ceb22aa0101a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;name&lt;/code&gt; or &lt;code&gt;message&lt;/code&gt; are provided, they are used as the parameter name and message text of the thrown error. If &lt;code&gt;name&lt;/code&gt; is omitted, it defaults to &lt;code&gt;&quot;index&quot;&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;name&lt;/code&gt; や &lt;code&gt;message&lt;/code&gt; 提供され、それらを投げ、エラーのパラメータ名とメッセージテキストとして使用されています。場合 &lt;code&gt;name&lt;/code&gt; に省略し、デフォルトである &lt;code&gt;&quot;index&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="264df62dc035fee05c2c4a9ba937a251846a817e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;name&lt;/code&gt; or &lt;code&gt;message&lt;/code&gt; are provided, they are used as the parameter name and message text of the thrown error. If &lt;code&gt;name&lt;/code&gt; is omitted, it defaults to &lt;code&gt;index&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;name&lt;/code&gt; や &lt;code&gt;message&lt;/code&gt; 提供され、それらを投げ、エラーのパラメータ名とメッセージテキストとして使用されています。もし &lt;code&gt;name&lt;/code&gt; に省略し、デフォルトで &lt;code&gt;index&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3bad4384eb2ff021ecc663053a0f4de4a6f4a958" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;newLength&lt;/code&gt; is greater than the current length, entries are initialized to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;newLength&lt;/code&gt; が現在の長さより大きい場合、エントリは &lt;code&gt;null&lt;/code&gt; に初期化されます。</target>
        </trans-unit>
        <trans-unit id="99fa890f4114d4418e6450cad5975b69a8b44740" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;newLength&lt;/code&gt; is greater than the current length, entries are initialized to &lt;code&gt;null&lt;/code&gt;. Increasing the length fails if the element type does not allow &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;newLength&lt;/code&gt; が現在の長さより大きい場合、エントリは &lt;code&gt;null&lt;/code&gt; に初期化されます。要素タイプで &lt;code&gt;null&lt;/code&gt; が許可されていない場合、長さを増やすことはできません。</target>
        </trans-unit>
        <trans-unit id="51332796f04ae1221952a383265a369889a55138" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;newPath&lt;/code&gt; identifies an existing entity of the same type, that entity is replaced. If &lt;code&gt;newPath&lt;/code&gt; identifies an existing entity of a different type, the operation fails and an exception is thrown.</source>
          <target state="translated">&lt;code&gt;newPath&lt;/code&gt; が同じタイプの既存のエンティティを識別する場合、そのエンティティは置き換えられます。 &lt;code&gt;newPath&lt;/code&gt; が異なるタイプの既存のエンティティを識別する場合、操作は失敗し、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="89e3fca4effe76bd4c05eed0d554a3e5762e0167" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;newPath&lt;/code&gt; identifies an existing entity of the same type, that entity is replaced. If &lt;code&gt;newPath&lt;/code&gt; identifies an existing entity of a different type, the operation fails and the future completes with an exception.</source>
          <target state="translated">&lt;code&gt;newPath&lt;/code&gt; が同じタイプの既存のエンティティを識別する場合、そのエンティティは置き換えられます。 &lt;code&gt;newPath&lt;/code&gt; が異なるタイプの既存のエンティティを識別する場合、操作は失敗し、futureは例外で完了します。</target>
        </trans-unit>
        <trans-unit id="703d4706dfcdf542c26a187b77353397feca204d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;newPath&lt;/code&gt; identifies an existing file, that file is replaced. If &lt;code&gt;newPath&lt;/code&gt; identifies an existing directory the operation fails and an exception is thrown.</source>
          <target state="translated">&lt;code&gt;newPath&lt;/code&gt; が既存のファイルを識別する場合、そのファイルは置き換えられます。 &lt;code&gt;newPath&lt;/code&gt; が既存のディレクトリを識別する場合、操作は失敗し、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="57cea46570e02b6d68658270c77e73ae9736f4f9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;newPath&lt;/code&gt; identifies an existing file, that file is replaced. If &lt;code&gt;newPath&lt;/code&gt; identifies an existing directory, the operation fails and the future completes with an exception.</source>
          <target state="translated">&lt;code&gt;newPath&lt;/code&gt; が既存のファイルを識別する場合、そのファイルは置き換えられます。 &lt;code&gt;newPath&lt;/code&gt; が既存のディレクトリを識別する場合、操作は失敗し、futureは例外を伴って完了します。</target>
        </trans-unit>
        <trans-unit id="ea5998bd9f60c8ca2cdc9b9a480d1c6372ed5e00" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;newPath&lt;/code&gt; identifies an existing link, that link is replaced. If &lt;code&gt;newPath&lt;/code&gt; identifies an existing file or directory the operation fails and an exception is thrown.</source>
          <target state="translated">&lt;code&gt;newPath&lt;/code&gt; が既存のリンクを識別する場合、そのリンクは置き換えられます。 &lt;code&gt;newPath&lt;/code&gt; が既存のファイルまたはディレクトリを識別する場合、操作は失敗し、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="be56726c61c0fb2d13903713985b717a2d463250" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;newPath&lt;/code&gt; identifies an existing link, that link is replaced. If &lt;code&gt;newPath&lt;/code&gt; identifies an existing file or directory, the operation fails and the future completes with an exception.</source>
          <target state="translated">&lt;code&gt;newPath&lt;/code&gt; が既存のリンクを識別する場合、そのリンクは置き換えられます。 &lt;code&gt;newPath&lt;/code&gt; が既存のファイルまたはディレクトリを識別する場合、操作は失敗し、futureは例外で完了します。</target>
        </trans-unit>
        <trans-unit id="52c128e6f66f24fae4d5ffcbeb469c7ebf1c116b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;newSet&lt;/code&gt; is provided, it is used to create the new sets returned by &lt;a href=&quot;toset&quot;&gt;toSet&lt;/a&gt;, &lt;a href=&quot;union&quot;&gt;union&lt;/a&gt;, and is also used for &lt;a href=&quot;intersection&quot;&gt;intersection&lt;/a&gt; and &lt;a href=&quot;difference&quot;&gt;difference&lt;/a&gt;. If &lt;code&gt;newSet&lt;/code&gt; is omitted, it defaults to creating a new set using the default &lt;a href=&quot;../set-class&quot;&gt;Set&lt;/a&gt; constructor, and &lt;a href=&quot;intersection&quot;&gt;intersection&lt;/a&gt; and &lt;a href=&quot;difference&quot;&gt;difference&lt;/a&gt; returns an adapted version of calling the same method on the source.</source>
          <target state="translated">&lt;code&gt;newSet&lt;/code&gt; が提供されている場合、これは、&lt;a href=&quot;toset&quot;&gt;toSet&lt;/a&gt;、&lt;a href=&quot;union&quot;&gt;union&lt;/a&gt;によって返される新しいセットを作成するために使用されます。また、&lt;a href=&quot;intersection&quot;&gt;交差&lt;/a&gt;と&lt;a href=&quot;difference&quot;&gt;差分に&lt;/a&gt;も使用されます。 &lt;code&gt;newSet&lt;/code&gt; が省略された場合、デフォルトではデフォルトの&lt;a href=&quot;../set-class&quot;&gt;Set&lt;/a&gt;コンストラクターを使用して新しいセットが作成され、&lt;a href=&quot;intersection&quot;&gt;共通部分&lt;/a&gt;と&lt;a href=&quot;difference&quot;&gt;差分&lt;/a&gt;はソースで同じメソッドを呼び出した適応バージョンを返します。</target>
        </trans-unit>
        <trans-unit id="349280968146ef2fe27a17454da0869b5a49d438" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;null&lt;/code&gt;, the output is encoded as a single line.</source>
          <target state="translated">場合 &lt;code&gt;null&lt;/code&gt; 、出力は、単一のラインとして符号化されます。</target>
        </trans-unit>
        <trans-unit id="dc0b997693df871ae4d7b402a4b564121b8e17d8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;onCancel&lt;/code&gt; is provided, it is called in a similar way to &lt;code&gt;onListen&lt;/code&gt; when the returned stream stops having listener. If it later gets a new listener, the &lt;code&gt;onListen&lt;/code&gt; function is called again.</source>
          <target state="translated">場合 &lt;code&gt;onCancel&lt;/code&gt; が提供され、それはと同様の方法で呼び出された &lt;code&gt;onListen&lt;/code&gt; 返されるストリームは、リスナーを持つ停止したとき。後で新しいリスナーを取得すると、 &lt;code&gt;onListen&lt;/code&gt; 関数が再度呼び出されます。</target>
        </trans-unit>
        <trans-unit id="04bfe564ea8a61b4c204fb71c54a074e06a8e70f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;onError&lt;/code&gt; is not given, and this future completes with an error, the error is forwarded directly to the returned future.</source>
          <target state="translated">場合 &lt;code&gt;onError&lt;/code&gt; 与えられていない、そしてこの将来がエラーで終了し、エラーが返され、将来に直接転送されます。</target>
        </trans-unit>
        <trans-unit id="b046ffd3f231c956e1228788cb163ba7964c75af" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;onError&lt;/code&gt; is provided, and this future completes with an error, the &lt;code&gt;onError&lt;/code&gt; callback is called with that error and its stack trace. The &lt;code&gt;onError&lt;/code&gt; callback must accept either one argument or two arguments where the latter is a &lt;a href=&quot;../../dart-core/stacktrace-class&quot;&gt;StackTrace&lt;/a&gt;. If &lt;code&gt;onError&lt;/code&gt; accepts two arguments, it is called with both the error and the stack trace, otherwise it is called with just the error object. The &lt;code&gt;onError&lt;/code&gt; callback must return a value or future that can be used to complete the returned future, so it must be something assignable to &lt;code&gt;FutureOr&amp;lt;R&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;onError&lt;/code&gt; エラーで完了しており、この将来され、 &lt;code&gt;onError&lt;/code&gt; コールバックは、エラーとそのスタックトレースと呼ばれています。 &lt;code&gt;onError&lt;/code&gt; コールバックは1つの引数または後者は2つの引数のいずれか受け入れなければなりません&lt;a href=&quot;../../dart-core/stacktrace-class&quot;&gt;スタックトレース&lt;/a&gt;。 &lt;code&gt;onError&lt;/code&gt; が 2つの引数を受け入れる場合は、エラーとスタックトレースの両方で呼び出されます。それ以外の場合は、エラーオブジェクトだけで呼び出されます。 &lt;code&gt;onError&lt;/code&gt; それはに何かを割り当て可能でなければなりませんので、コールバックは、返された未来を完了するために使用される値または将来を返さなければなりません &lt;code&gt;FutureOr&amp;lt;R&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f9a238e15dae432466026c0b62efa8deffb2a490" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;onError&lt;/code&gt; is provided, it must have one of the types</source>
          <target state="translated">&lt;code&gt;onError&lt;/code&gt; が提供されている場合、それはタイプの1つでなければなりません</target>
        </trans-unit>
        <trans-unit id="17f11e42a6d08f651f2ef9226776afebe5741e1c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;onListen&lt;/code&gt; is provided, it is called with a subscription-like object that represents the underlying subscription to this stream. It is possible to pause, resume or cancel the subscription during the call to &lt;code&gt;onListen&lt;/code&gt;. It is not possible to change the event handlers, including using &lt;a href=&quot;../streamsubscription/asfuture&quot;&gt;StreamSubscription.asFuture&lt;/a&gt;.</source>
          <target state="translated">場合 &lt;code&gt;onListen&lt;/code&gt; が提供され、それがこのストリームへの根本的なサブスクリプションを表し、サブスクリプションのようなオブジェクトと呼ばれています。 &lt;code&gt;onListen&lt;/code&gt; の呼び出し中にサブスクリプションを一時停止、再開、またはキャンセルすることができます。&lt;a href=&quot;../streamsubscription/asfuture&quot;&gt;StreamSubscription.asFutureの&lt;/a&gt;使用など、イベントハンドラーを変更することはできません。</target>
        </trans-unit>
        <trans-unit id="073d045b20927ed2d827165fbc59f2408c363e92" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;onTimeout&lt;/code&gt; is omitted, a timeout will cause the returned future to complete with a &lt;a href=&quot;../timeoutexception-class&quot;&gt;TimeoutException&lt;/a&gt;.</source>
          <target state="translated">場合 &lt;code&gt;onTimeout&lt;/code&gt; 省略され、タイムアウトが返された未来がで完了するようになります&lt;a href=&quot;../timeoutexception-class&quot;&gt;TimeoutException&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ccff52f4fc05e1ae51b146d9a79b75e1ad7d04f5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;onTimeout&lt;/code&gt; is omitted, a timeout will just put a &lt;a href=&quot;../timeoutexception-class&quot;&gt;TimeoutException&lt;/a&gt; into the error channel of the returned stream. If the call to &lt;code&gt;onTimeout&lt;/code&gt; throws, the error is emitted on the returned stream.</source>
          <target state="translated">場合 &lt;code&gt;onTimeout&lt;/code&gt; 省略され、タイムアウトがちょうど入れます&lt;a href=&quot;../timeoutexception-class&quot;&gt;TimeoutExceptionを&lt;/a&gt;返されたストリームのエラーチャネルに。 &lt;code&gt;onTimeout&lt;/code&gt; の呼び出しがスローすると、返されたストリームでエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="1a77e14728787df3fe6692f552194c473186b9c9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;other&lt;/code&gt; is also a &lt;a href=&quot;../float32x4list-class&quot;&gt;Float32x4List&lt;/a&gt;, the result is a new &lt;a href=&quot;../float32x4list-class&quot;&gt;Float32x4List&lt;/a&gt;, otherwise the result is a normal growable &lt;code&gt;List&amp;lt;Float32x4&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;other&lt;/code&gt; またある&lt;a href=&quot;../float32x4list-class&quot;&gt;Float32x4List&lt;/a&gt;、結果が新しい&lt;a href=&quot;../float32x4list-class&quot;&gt;Float32x4List&lt;/a&gt;、そうでない場合は、結果は正常な成長可能である &lt;code&gt;List&amp;lt;Float32x4&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="10fa9d043a8d1ac872564c47c45abc8167cc0c3a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;other&lt;/code&gt; is also a &lt;a href=&quot;../float64x2list-class&quot;&gt;Float64x2List&lt;/a&gt;, the result is a new &lt;a href=&quot;../float64x2list-class&quot;&gt;Float64x2List&lt;/a&gt;, otherwise the result is a normal growable &lt;code&gt;List&amp;lt;Float64x2&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;other&lt;/code&gt; またある&lt;a href=&quot;../float64x2list-class&quot;&gt;Float64x2List&lt;/a&gt;、結果が新しい&lt;a href=&quot;../float64x2list-class&quot;&gt;Float64x2List&lt;/a&gt;、そうでない場合は、結果は正常な成長可能である &lt;code&gt;List&amp;lt;Float64x2&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1ec27b2cca23bc271d7fb8621ab79c7be981de0e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;other&lt;/code&gt; is also a &lt;a href=&quot;../int32x4list-class&quot;&gt;Int32x4List&lt;/a&gt;, the result is a new &lt;a href=&quot;../int32x4list-class&quot;&gt;Int32x4List&lt;/a&gt;, otherwise the result is a normal growable &lt;code&gt;List&amp;lt;Int32x4&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;other&lt;/code&gt; またある&lt;a href=&quot;../int32x4list-class&quot;&gt;Int32x4List&lt;/a&gt;、結果が新しい&lt;a href=&quot;../int32x4list-class&quot;&gt;Int32x4List&lt;/a&gt;、そうでない場合は、結果は正常な成長可能である &lt;code&gt;List&amp;lt;Int32x4&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fbfbd3f2af0f3f74db39fdc8c49843db15cea454" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;other&lt;/code&gt; is also a typed-data list, then the return list will be a typed data list capable of holding both unsigned 8-bit integers and the elements of &lt;code&gt;other&lt;/code&gt;, otherwise it'll be a normal list of integers.</source>
          <target state="translated">場合は &lt;code&gt;other&lt;/code&gt; また、入力されたデータのリストである、戻りリストは、符号なし8ビット整数との要素の両方保持することが可能な型付きデータリストとなり &lt;code&gt;other&lt;/code&gt; 、それ以外の場合は、整数の通常のリストになるでしょう。</target>
        </trans-unit>
        <trans-unit id="ac152565a5cb129e55db2b66b7d6cc51c10c8fcc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;padding&lt;/code&gt; has length different from 1, the result will not have length &lt;code&gt;width&lt;/code&gt;. This may be useful for cases where the padding is a longer string representing a single character, like &lt;code&gt;&quot;&amp;amp;nbsp;&quot;&lt;/code&gt; or &lt;code&gt;&quot;\u{10002}&lt;/code&gt;&quot;. In that case, the user should make sure that &lt;code&gt;this.length&lt;/code&gt; is the correct measure of the strings length.</source>
          <target state="translated">&lt;code&gt;padding&lt;/code&gt; 長さが1と異なる場合、結果の長さは &lt;code&gt;width&lt;/code&gt; にはなりません。これは、パディングが &lt;code&gt;&quot;&amp;amp;nbsp;&quot;&lt;/code&gt; ように単一の文字を表す長い文字列である場合に役立ちます。または &lt;code&gt;&quot;\u{10002}&lt;/code&gt; 」。その場合、ユーザーは &lt;code&gt;this.length&lt;/code&gt; が文字列の長さの正しい尺度であることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="d6476eb33b4e60236fb2f60fd9f32ce746466015" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;parent&lt;/code&gt; is provided, the parent's task ID is provided as argument 'parentId' when &lt;a href=&quot;start&quot;&gt;start&lt;/a&gt; is called. In DevTools, this argument will result in this &lt;a href=&quot;../timelinetask-class&quot;&gt;TimelineTask&lt;/a&gt; being linked to the &lt;code&gt;parent&lt;/code&gt;&lt;a href=&quot;../timelinetask-class&quot;&gt;TimelineTask&lt;/a&gt;.</source>
          <target state="translated">場合は &lt;code&gt;parent&lt;/code&gt; 提供され、親のタスクIDは、引数「PARENTID」として提供され&lt;a href=&quot;start&quot;&gt;、スタートが&lt;/a&gt;呼ばれています。DevToolsでは、この引数により、この&lt;a href=&quot;../timelinetask-class&quot;&gt;TimelineTask&lt;/a&gt;が &lt;code&gt;parent&lt;/code&gt; &lt;a href=&quot;../timelinetask-class&quot;&gt;TimelineTask&lt;/a&gt;にリンクされます。</target>
        </trans-unit>
        <trans-unit id="7014e83dbe2ed7e27d38ec3eb1465b2a883aafb1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;path&lt;/code&gt; is a relative path, it will be interpreted relative to the current working directory (see &lt;a href=&quot;../directory/current&quot;&gt;Directory.current&lt;/a&gt;), when used.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; が相対パスの場合、使用すると、現在の作業ディレクトリ（&lt;a href=&quot;../directory/current&quot;&gt;Directory.currentを&lt;/a&gt;参照）を基準にして解釈されます。</target>
        </trans-unit>
        <trans-unit id="82c08ab81047d4065778a2a3f65ee61975cb3086" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;path&lt;/code&gt; is a relative path, it will be interpreted relative to the current working directory (see &lt;a href=&quot;current&quot;&gt;Directory.current&lt;/a&gt;), when used.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; が相対パスの場合、使用すると、現在の作業ディレクトリ（&lt;a href=&quot;current&quot;&gt;Directory.currentを&lt;/a&gt;参照）を基準にして解釈されます。</target>
        </trans-unit>
        <trans-unit id="6c30f34fa3b1540fbea136cf40b416a144a7e789" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;path&lt;/code&gt; is an absolute path, it will be immune to changes to the current working directory.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; が絶対パスの場合、現在の作業ディレクトリへの変更の影響を受けません。</target>
        </trans-unit>
        <trans-unit id="b2097cdf8543d1a3e6c8554e597ded106bbd38bc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;path&lt;/code&gt; is not empty, and it doesn't end in a directory separator, then a slash is added to the returned URI's path. In all other cases, the result is the same as returned by &lt;code&gt;Uri.file&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;path&lt;/code&gt; 空ではなく、それは、ディレクトリの区切りでは終わらない、そしてスラッシュが返されたURIのパスに追加されます。その他の場合はすべて、結果は &lt;code&gt;Uri.file&lt;/code&gt; によって返されるものと同じです。</target>
        </trans-unit>
        <trans-unit id="98bfd612ffdf00d77b86bca8055fd96c313b808d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;persistent&lt;/code&gt; is true, the application will request permission from the user to create lasting storage. This storage cannot be freed without the user's permission. Returns a &lt;a href=&quot;../../dart-async/future-class&quot;&gt;Future&lt;/a&gt; whose value stores a reference to the sandboxed file system for use. Because the file system is sandboxed, applications cannot access file systems created in other web pages.</source>
          <target state="translated">場合は &lt;code&gt;persistent&lt;/code&gt; 真である、アプリケーションは永続的なストレージを作成するために、ユーザーからの許可を要求します。このストレージは、ユーザーの許可なしに解放することはできません。使用するためにサンドボックス化されたファイルシステムへの参照を値に格納する&lt;a href=&quot;../../dart-async/future-class&quot;&gt;Future&lt;/a&gt;を返します。ファイルシステムはサンドボックス化されているため、アプリケーションは他のWebページで作成されたファイルシステムにアクセスできません。</target>
        </trans-unit>
        <trans-unit id="1cbac5692aa8703175b0d046fd7c74e3f270bd8d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;port&lt;/code&gt; has the value 0 an ephemeral port will be chosen by the system. The actual port used can be retrieved using the &lt;code&gt;port&lt;/code&gt; getter.</source>
          <target state="translated">&lt;code&gt;port&lt;/code&gt; の値が0の場合、システムによってエフェメラルポートが選択されます。使用される実際のポートは、 &lt;code&gt;port&lt;/code&gt; ゲッターを使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="99f0d15eb5607da79b9207299df06d17b5e5814b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;port&lt;/code&gt; has the value &lt;code&gt;0&lt;/code&gt; an ephemeral port will be chosen by the system. The actual port used can be retrieved using the &lt;code&gt;port&lt;/code&gt; getter.</source>
          <target state="translated">&lt;code&gt;port&lt;/code&gt; の値が &lt;code&gt;0&lt;/code&gt; の場合、一時ポートがシステムによって選択されます。実際に使用される &lt;code&gt;port&lt;/code&gt; は、ポートゲッターを使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="cf80a8ca1c0742b9bad65e7affb57715bfd33aa1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;positionalArguments&lt;/code&gt; is null, it's considered an empty list. If &lt;code&gt;namedArguments&lt;/code&gt; is omitted or null, it is considered an empty map.</source>
          <target state="translated">場合 &lt;code&gt;positionalArguments&lt;/code&gt; が nullの場合、それは空のリストと考えられています。 &lt;code&gt;namedArguments&lt;/code&gt; が省略されているかnullの場合、空のマップと見なされます。</target>
        </trans-unit>
        <trans-unit id="c6364de739d3c45753e739645015a6590011ff8d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;protocolSelector&lt;/code&gt; is provided, &lt;code&gt;protocolSelector&lt;/code&gt; will be called to select what protocol to use, if any were provided by the client. &lt;code&gt;protocolSelector&lt;/code&gt; is should return either a &lt;a href=&quot;../../dart-core/string-class&quot;&gt;String&lt;/a&gt; or a &lt;a href=&quot;../../dart-async/future-class&quot;&gt;Future&lt;/a&gt; completing with a &lt;a href=&quot;../../dart-core/string-class&quot;&gt;String&lt;/a&gt;. The &lt;a href=&quot;../../dart-core/string-class&quot;&gt;String&lt;/a&gt; must exist in the list of protocols.</source>
          <target state="translated">場合 &lt;code&gt;protocolSelector&lt;/code&gt; が提供され、 &lt;code&gt;protocolSelector&lt;/code&gt; は、任意のがクライアントによって提供された場合には、使用にどのようなプロトコルを選択するために呼び出されます。 &lt;code&gt;protocolSelector&lt;/code&gt; は、いずれかを返さなければならないである&lt;a href=&quot;../../dart-core/string-class&quot;&gt;文字列&lt;/a&gt;または&lt;a href=&quot;../../dart-async/future-class&quot;&gt;将来&lt;/a&gt;に完成&lt;a href=&quot;../../dart-core/string-class&quot;&gt;ストリング&lt;/a&gt;。&lt;a href=&quot;../../dart-core/string-class&quot;&gt;文字列は、&lt;/a&gt;プロトコルのリストに存在している必要があります。</target>
        </trans-unit>
        <trans-unit id="a6c0819c0107487bf1c5c0ef28a977e0395ca8c5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;radians&lt;/code&gt; is not a finite number, the result is NaN.</source>
          <target state="translated">&lt;code&gt;radians&lt;/code&gt; が有限数でない場合、結果はNaNになります。</target>
        </trans-unit>
        <trans-unit id="9901a9b20bde16b6a62f1b8374edc1f7f3ed8f48" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;recursive&lt;/code&gt; is false, only the last directory in the path is created. If &lt;code&gt;recursive&lt;/code&gt; is true, all non-existing path components are created. If the directory already exists nothing is done.</source>
          <target state="translated">&lt;code&gt;recursive&lt;/code&gt; がfalseの場合、パスの最後のディレクトリのみが作成されます。場合は &lt;code&gt;recursive&lt;/code&gt; 真である、すべての非既存のパスのコンポーネントが作成されます。ディレクトリがすでに存在する場合、何も行われません。</target>
        </trans-unit>
        <trans-unit id="388b6cbe2933c9fae326bc0becafb29abaf1b422" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;recursive&lt;/code&gt; is false, the default, the file is created only if all directories in the path exist. If &lt;code&gt;recursive&lt;/code&gt; is true, all non-existing path components are created.</source>
          <target state="translated">場合は &lt;code&gt;recursive&lt;/code&gt; 偽で、デフォルト値は、ファイルが作成されている場合にのみ、パスが存在内のすべてのディレクトリ。場合は &lt;code&gt;recursive&lt;/code&gt; 真である、すべての非既存のパスのコンポーネントが作成されます。</target>
        </trans-unit>
        <trans-unit id="699640bd3b0b328f478e18adbc4a54660a0bcef4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;recursive&lt;/code&gt; is false, the default, the link is created only if all directories in its path exist. If &lt;code&gt;recursive&lt;/code&gt; is true, all non-existing path components are created. The directories in the path of &lt;code&gt;target&lt;/code&gt; are not affected, unless they are also in &lt;a href=&quot;../filesystementity/path&quot;&gt;path&lt;/a&gt;.</source>
          <target state="translated">場合は &lt;code&gt;recursive&lt;/code&gt; 偽で、デフォルト値は、リンクが作成されている場合にのみ、そのパスが存在内のすべてのディレクトリ。場合は &lt;code&gt;recursive&lt;/code&gt; 真である、すべての非既存のパスのコンポーネントが作成されます。パス内のディレクトリ &lt;code&gt;target&lt;/code&gt; 彼らはまたない限り、影響はありません&lt;a href=&quot;../filesystementity/path&quot;&gt;パス&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a9b5ee1225c5a466c6575985b3ff3cd4eb1f604c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;recursive&lt;/code&gt; is true, the &lt;a href=&quot;../filesystementity-class&quot;&gt;FileSystemEntity&lt;/a&gt; is deleted even if the type of the &lt;a href=&quot;../filesystementity-class&quot;&gt;FileSystemEntity&lt;/a&gt; doesn't match the content of the file system. This behavior allows &lt;a href=&quot;delete&quot;&gt;delete&lt;/a&gt; to be used to unconditionally delete any file system object.</source>
          <target state="translated">場合は &lt;code&gt;recursive&lt;/code&gt; 真である、&lt;a href=&quot;../filesystementity-class&quot;&gt;FileSystemEntityは&lt;/a&gt;のタイプも削除され&lt;a href=&quot;../filesystementity-class&quot;&gt;FileSystemEntityは、&lt;/a&gt;ファイルシステムの内容と一致していません。この動作により、ファイルシステムオブジェクトを無条件で削除&lt;a href=&quot;delete&quot;&gt;する&lt;/a&gt;ために削除を使用できます。</target>
        </trans-unit>
        <trans-unit id="e0cc2070e5bcaac09b528b086a68279fb42662d4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;recursive&lt;/code&gt; is true, the &lt;a href=&quot;../filesystementity-class&quot;&gt;FileSystemEntity&lt;/a&gt; is deleted even if the type of the &lt;a href=&quot;../filesystementity-class&quot;&gt;FileSystemEntity&lt;/a&gt; doesn't match the content of the file system. This behavior allows &lt;a href=&quot;deletesync&quot;&gt;deleteSync&lt;/a&gt; to be used to unconditionally delete any file system object.</source>
          <target state="translated">場合は &lt;code&gt;recursive&lt;/code&gt; 真である、&lt;a href=&quot;../filesystementity-class&quot;&gt;FileSystemEntityは&lt;/a&gt;のタイプも削除され&lt;a href=&quot;../filesystementity-class&quot;&gt;FileSystemEntityは、&lt;/a&gt;ファイルシステムの内容と一致していません。この動作により、&lt;a href=&quot;deletesync&quot;&gt;deleteSync&lt;/a&gt;を使用して、ファイルシステムオブジェクトを無条件で削除できます。</target>
        </trans-unit>
        <trans-unit id="4a9ba6d20c0f43f3d2569d2e08f9e709362ff57c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;requestClientCertificate&lt;/code&gt; is true, the server will request clients to authenticate with a client certificate. The server will advertise the names of trusted issuers of client certificates, getting them from a &lt;a href=&quot;../securitycontext-class&quot;&gt;SecurityContext&lt;/a&gt;, where they have been set using &lt;a href=&quot;../securitycontext/setclientauthorities&quot;&gt;SecurityContext.setClientAuthorities&lt;/a&gt;.</source>
          <target state="translated">場合 &lt;code&gt;requestClientCertificate&lt;/code&gt; が trueの場合、サーバーは、クライアント証明書で認証するようにクライアントを要求します。サーバーからそれらを取得し、クライアント証明書の信頼された発行者の名前をアドバタイズします&lt;a href=&quot;../securitycontext-class&quot;&gt;SecurityContextが&lt;/a&gt;、彼らが使用して設定されている、&lt;a href=&quot;../securitycontext/setclientauthorities&quot;&gt;SecurityContext.setClientAuthoritiesを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f07265fb5b29e3e34e611dd9c01bdb779a551594" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;resumeSignal&lt;/code&gt; is provided, the stream subscription will undo the pause when the future completes, as if by a call to &lt;a href=&quot;resume&quot;&gt;resume&lt;/a&gt;. If the future completes with an error, the stream will still resume, but the error will be considered unhandled and is passed to &lt;a href=&quot;../zone/handleuncaughterror&quot;&gt;Zone.handleUncaughtError&lt;/a&gt;.</source>
          <target state="translated">場合 &lt;code&gt;resumeSignal&lt;/code&gt; が提供され、将来の完了は、呼び出したかのようにするとき、ストリームのサブスクリプションは、一時停止を取り消します&lt;a href=&quot;resume&quot;&gt;再開する&lt;/a&gt;。futureがエラーで完了した場合でも、ストリームは再開されますが、エラーは未処理と見なされ、&lt;a href=&quot;../zone/handleuncaughterror&quot;&gt;Zone.handleUncaughtErrorに&lt;/a&gt;渡されます。</target>
        </trans-unit>
        <trans-unit id="c06de43b68250166f266385102c5e3470db55cbc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;retainNewlines&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, the returned String will not include the final line terminator. If &lt;code&gt;true&lt;/code&gt;, the returned String will include the line terminator. Default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;retainNewlines&lt;/code&gt; がある &lt;code&gt;false&lt;/code&gt; 、返される文字列は、最終的なラインターミネータは含まれません。場合は &lt;code&gt;true&lt;/code&gt; 、返される文字列は、ラインターミネータが含まれます。デフォルトは &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a85db60e4846c317a6e90cf0c5ca9934cf2fdb74" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;reviver&lt;/code&gt; is omitted, it defaults to returning the value argument.</source>
          <target state="translated">場合 &lt;code&gt;reviver&lt;/code&gt; 値の引数を返すには、デフォルトが省略されています。</target>
        </trans-unit>
        <trans-unit id="52bd0ac1e16bab0b1b34f9bc4f1e07cabcd43346" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;runInShell&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, the process will be spawned through a system shell. On Linux and OS X, &lt;code&gt;/bin/sh&lt;/code&gt; is used, while &lt;code&gt;%WINDIR%\system32\cmd.exe&lt;/code&gt; is used on Windows.</source>
          <target state="translated">場合 &lt;code&gt;runInShell&lt;/code&gt; がある &lt;code&gt;true&lt;/code&gt; 、プロセスは、システムシェルを通じて生み出されます。LinuxおよびOS Xでは &lt;code&gt;/bin/sh&lt;/code&gt; が使用され、Windowsでは &lt;code&gt;%WINDIR%\system32\cmd.exe&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="bbd7e7824ceed2061addd7e97f0e752809f62665" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;runInShell&lt;/code&gt; is true, the process will be spawned through a system shell. On Linux and OS X, &lt;code&gt;/bin/sh&lt;/code&gt; is used, while &lt;code&gt;%WINDIR%\system32\cmd.exe&lt;/code&gt; is used on Windows.</source>
          <target state="translated">場合 &lt;code&gt;runInShell&lt;/code&gt; が真である、プロセスは、システムシェルを通じて生み出されます。LinuxおよびOS Xでは &lt;code&gt;/bin/sh&lt;/code&gt; が使用され、Windowsでは &lt;code&gt;%WINDIR%\system32\cmd.exe&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="22fe3bad794aa086c9fadd47624539224def3f3d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;separator&lt;/code&gt; is provided, a &lt;code&gt;write&lt;/code&gt; with the &lt;code&gt;separator&lt;/code&gt; is performed between any two elements of objects.</source>
          <target state="translated">場合 &lt;code&gt;separator&lt;/code&gt; 設けられている、 &lt;code&gt;write&lt;/code&gt; 付き &lt;code&gt;separator&lt;/code&gt; オブジェクトの任意の二つの要素の間で行われます。</target>
        </trans-unit>
        <trans-unit id="a43d4ba2f5aad44367343310d18de73cd9b5f8bf" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;separator&lt;/code&gt; is provided, a &lt;code&gt;write&lt;/code&gt; with the &lt;code&gt;separator&lt;/code&gt; is performed between any two elements of objects`.</source>
          <target state="translated">場合 &lt;code&gt;separator&lt;/code&gt; 設けられている、 &lt;code&gt;write&lt;/code&gt; 付き &lt;code&gt;separator&lt;/code&gt; objects`の任意の二つの要素の間で行われます。</target>
        </trans-unit>
        <trans-unit id="51a947ef361c99fdc550de103dfe0abc36414813" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;shouldAdd&lt;/code&gt; is true, then we always add that &lt;code&gt;value&lt;/code&gt; to the element. If &lt;code&gt;shouldAdd&lt;/code&gt; is false then we always remove &lt;code&gt;value&lt;/code&gt; from the element.</source>
          <target state="translated">場合 &lt;code&gt;shouldAdd&lt;/code&gt; が真である、我々は常にその追加し &lt;code&gt;value&lt;/code&gt; 要素に。場合 &lt;code&gt;shouldAdd&lt;/code&gt; が falseで、我々は常に削除し &lt;code&gt;value&lt;/code&gt; 要素から。</target>
        </trans-unit>
        <trans-unit id="20adf6ece751009908b78b00ae984d72657b244c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;source&lt;/code&gt; and &lt;code&gt;target&lt;/code&gt; is the same list, overlapping source and target ranges are respected so that the target range ends up containing the initial content of the source range. Otherwise the order of element copying is not guaranteed.</source>
          <target state="translated">&lt;code&gt;source&lt;/code&gt; と &lt;code&gt;target&lt;/code&gt; が同じリストである場合、ソース範囲とターゲット範囲が重複しているため、ターゲット範囲にはソース範囲の初期コンテンツが含まれます。それ以外の場合、要素のコピーの順序は保証されません。</target>
        </trans-unit>
        <trans-unit id="c94f51b2b92e28fa0332082c53f849733483e4b6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; are provided, only split the contents of &lt;code&gt;lines.substring(start, end)&lt;/code&gt;. The &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; values must specify a valid sub-range of &lt;code&gt;lines&lt;/code&gt; (&lt;code&gt;0 &amp;lt;= start &amp;lt;= end &amp;lt;= lines.length&lt;/code&gt;).</source>
          <target state="translated">場合 &lt;code&gt;start&lt;/code&gt; と &lt;code&gt;end&lt;/code&gt; 設けられている、唯一の内容を分割する &lt;code&gt;lines.substring(start, end)&lt;/code&gt; 。 &lt;code&gt;start&lt;/code&gt; および &lt;code&gt;end&lt;/code&gt; の値は、有効なサブ範囲を指定しなければならない &lt;code&gt;lines&lt;/code&gt; （ &lt;code&gt;0 &amp;lt;= start &amp;lt;= end &amp;lt;= lines.length&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="b362645a26dfd3bf5d218824847f3af401a0378f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; are provided, only the sub-list of bytes from &lt;code&gt;start&lt;/code&gt; to &lt;code&gt;end&lt;/code&gt; (&lt;code&gt;end&lt;/code&gt; not inclusive) is used as input to the conversion.</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; と &lt;code&gt;end&lt;/code&gt; が指定されている場合、変換の入力として、 &lt;code&gt;start&lt;/code&gt; から &lt;code&gt;end&lt;/code&gt; バイトのサブリスト（ &lt;code&gt;end&lt;/code&gt; は含まれません）のみが使用されます。</target>
        </trans-unit>
        <trans-unit id="7d0346d8b596408e550afc8bcc24639a18d8b335" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; are provided, only the substring &lt;code&gt;string.substring(start, end)&lt;/code&gt; is converted.</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; と &lt;code&gt;end&lt;/code&gt; が指定されている場合、部分文字列 &lt;code&gt;string.substring(start, end)&lt;/code&gt; が変換されます。</target>
        </trans-unit>
        <trans-unit id="7f2d7ef1e6dadc26eddb988c70ead16d3812aa39" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; are provided, only the substring &lt;code&gt;string.substring(start, end)&lt;/code&gt; is used as input to the conversion.</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; と &lt;code&gt;end&lt;/code&gt; が指定されている場合、substring &lt;code&gt;string.substring(start, end)&lt;/code&gt; のみが変換への入力として使用されます。</target>
        </trans-unit>
        <trans-unit id="cfc5d203ed7fe6751a6c218accc12e500e3454be" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; are provided, they must specify a valid substring of &lt;code&gt;uri&lt;/code&gt;, and only the substring from &lt;code&gt;start&lt;/code&gt; to &lt;code&gt;end&lt;/code&gt; is parsed as a URI.</source>
          <target state="translated">場合は &lt;code&gt;start&lt;/code&gt; と &lt;code&gt;end&lt;/code&gt; 提供され、彼らは有効なストリングを指定しなければならない &lt;code&gt;uri&lt;/code&gt; 、とだけから部分 &lt;code&gt;start&lt;/code&gt; に &lt;code&gt;end&lt;/code&gt; URIとして解析されます。</target>
        </trans-unit>
        <trans-unit id="b3fac8fd4b1e986eddabb8b7964e7f121fa93ff4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; are provided, they must specify a valid substring of &lt;code&gt;uri&lt;/code&gt;, and only the substring from &lt;code&gt;start&lt;/code&gt; to &lt;code&gt;end&lt;/code&gt; is parsed as a URI. The &lt;code&gt;uri&lt;/code&gt; must not be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;start&lt;/code&gt; と &lt;code&gt;end&lt;/code&gt; 提供され、彼らは有効なストリングを指定しなければならない &lt;code&gt;uri&lt;/code&gt; 、とだけから部分 &lt;code&gt;start&lt;/code&gt; に &lt;code&gt;end&lt;/code&gt; URIとして解析されます。 &lt;code&gt;uri&lt;/code&gt; あってはならない &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e1c098ef4af8bcc4471b230fd4bf0e32a0d01d4b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; is provided, only the values of &lt;code&gt;charCodes&lt;/code&gt; at positions from &lt;code&gt;start&lt;/code&gt; to, but not including, &lt;code&gt;end&lt;/code&gt;, are used. The &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; values must satisfy &lt;code&gt;0 &amp;lt;= start &amp;lt;= end &amp;lt;= charCodes.length&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;start&lt;/code&gt; と &lt;code&gt;end&lt;/code&gt; 提供され、唯一の値 &lt;code&gt;charCodes&lt;/code&gt; 位置でから &lt;code&gt;start&lt;/code&gt; するが、含まない、 &lt;code&gt;end&lt;/code&gt; 、使用されています。 &lt;code&gt;start&lt;/code&gt; と &lt;code&gt;end&lt;/code&gt; の値が満たさなければならない &lt;code&gt;0 &amp;lt;= start &amp;lt;= end &amp;lt;= charCodes.length&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fb9b89487f7a65457057100a8dc131a47a40f865" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; is not provided, this method searches from the end of the list.</source>
          <target state="translated">場合 &lt;code&gt;start&lt;/code&gt; 、リストの末尾から、この方法は、検索を提供していません。</target>
        </trans-unit>
        <trans-unit id="5a6f747fccf06a1afdc883d28b50e42b53d7ef96" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; is not provided, this method searches from the end of the list./Returns</source>
          <target state="translated">場合 &lt;code&gt;start&lt;/code&gt; list./Returnsの終わりから、このメソッドの検索を提供されていません</target>
        </trans-unit>
        <trans-unit id="425624196f9ddb40663b42ea73ee45ef776c998d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; is omitted, it defaults to the start of &lt;code&gt;input&lt;/code&gt;. If &lt;code&gt;end&lt;/code&gt; is omitted, it defaults to the end of &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;start&lt;/code&gt; 開始に省略され、それがデフォルトで &lt;code&gt;input&lt;/code&gt; 。場合は &lt;code&gt;end&lt;/code&gt; の終わりに省略され、デフォルト &lt;code&gt;input&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e5e68b0610a72736bbccc68e2295836152a4b590" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; is omitted, search starts from the end of the string. If supplied, &lt;code&gt;start&lt;/code&gt; must be non-negative and not greater than &lt;a href=&quot;length&quot;&gt;length&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; を省略した場合、検索は文字列の末尾から開始されます。指定する場合、 &lt;code&gt;start&lt;/code&gt; は負ではなく、&lt;a href=&quot;length&quot;&gt;長さ&lt;/a&gt;以下である必要があります。</target>
        </trans-unit>
        <trans-unit id="1241061e5bb91ff92aef6458d2466b2622ee0c62" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; is present, the bytes will be filled into &lt;code&gt;buffer&lt;/code&gt; from at index &lt;code&gt;start&lt;/code&gt;, otherwise index 0. If &lt;code&gt;end&lt;/code&gt; is present, the &lt;code&gt;end&lt;/code&gt; - &lt;code&gt;start&lt;/code&gt; bytes will be read into &lt;code&gt;buffer&lt;/code&gt;, otherwise up to &lt;code&gt;buffer.length&lt;/code&gt;. If &lt;code&gt;end&lt;/code&gt; == &lt;code&gt;start&lt;/code&gt; nothing happens.</source>
          <target state="translated">場合 &lt;code&gt;start&lt;/code&gt; が存在している、バイトの中に充填される &lt;code&gt;buffer&lt;/code&gt; のインデックスでから &lt;code&gt;start&lt;/code&gt; 、そうでない場合はインデックス0あれば &lt;code&gt;end&lt;/code&gt; 存在し、 &lt;code&gt;end&lt;/code&gt; - &lt;code&gt;start&lt;/code&gt; バイトに読み込まれる &lt;code&gt;buffer&lt;/code&gt; さもなければまで、 &lt;code&gt;buffer.length&lt;/code&gt; 。 &lt;code&gt;end&lt;/code&gt; == &lt;code&gt;start&lt;/code&gt; の場合、何も起こりません。</target>
        </trans-unit>
        <trans-unit id="a0e6df94f2fbd5c1c94bc9d33ecc8b097026a2ea" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; is present, the file will be read from byte-offset &lt;code&gt;start&lt;/code&gt;. Otherwise from the beginning (index 0).</source>
          <target state="translated">場合は &lt;code&gt;start&lt;/code&gt; 存在する場合、ファイルは、バイトオフセットから読み込まれます &lt;code&gt;start&lt;/code&gt; 。それ以外の場合は最初から（インデックス0）。</target>
        </trans-unit>
        <trans-unit id="5639faa14b65b784c0431a5e843e1cc0e3a9ca28" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; is provided, it must be an integer in the range &lt;code&gt;0&lt;/code&gt; .. &lt;code&gt;string.length&lt;/code&gt;. In that case, this patten is tested against the string at the &lt;code&gt;start&lt;/code&gt; position. That is, a &lt;a href=&quot;../match-class&quot;&gt;Match&lt;/a&gt; is returned if the pattern can match a part of the string starting from position &lt;code&gt;start&lt;/code&gt;. Returns &lt;code&gt;null&lt;/code&gt; if the pattern doesn't match.</source>
          <target state="translated">場合 &lt;code&gt;start&lt;/code&gt; 設けられ、それは、範囲内の整数でなければならない &lt;code&gt;0&lt;/code&gt; .. &lt;code&gt;string.length&lt;/code&gt; 。その場合、このパターンは &lt;code&gt;start&lt;/code&gt; 位置のストリングに対してテストされます。つまり、パターンが文字列の &lt;code&gt;start&lt;/code&gt; から始まる部分に一致する場合、&lt;a href=&quot;../match-class&quot;&gt;Match&lt;/a&gt;が返されます。パターンが一致しない場合は &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="29d6150b730963e556e03ab9ad610ce325c46998" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; is provided, matching will start at that index.</source>
          <target state="translated">場合は &lt;code&gt;start&lt;/code&gt; 提供され、マッチングがそのインデックスから開始されます。</target>
        </trans-unit>
        <trans-unit id="e965a778f7b5f3f86d99a1ed7ed608f8c11c0424" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; is provided, only start looking for matches at &lt;code&gt;start&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; が指定されている場合は、startでのみ一致の検索を &lt;code&gt;start&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="aa5aa3d2d54d7c74b3154defe42f03e788b590ac" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;startIndex&lt;/code&gt; is provided, this method matches only at or after that index:</source>
          <target state="translated">&lt;code&gt;startIndex&lt;/code&gt; が指定されている場合、このメソッドはそのインデックス以降でのみ一致します。</target>
        </trans-unit>
        <trans-unit id="7745f08eb674b388408d7e1f47a6af996ecd31bb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;sync&lt;/code&gt; is false, the event will always be fired at a later time, after the code adding the event has completed. In that case, no guarantees are given with regard to when multiple listeners get the events, except that each listener will get all events in the correct order. Each subscription handles the events individually. If two events are sent on an async controller with two listeners, one of the listeners may get both events before the other listener gets any. A listener must be subscribed both when the event is initiated (that is, when &lt;a href=&quot;add&quot;&gt;add&lt;/a&gt; is called) and when the event is later delivered, in order to receive the event.</source>
          <target state="translated">場合は &lt;code&gt;sync&lt;/code&gt; 偽でイベントを追加するコードが完了した後に、イベントは常に、後で発射されます。その場合、各リスナーがすべてのイベントを正しい順序で取得することを除いて、複数のリスナーがいつイベントを取得するかについては保証されません。各サブスクリプションは、イベントを個別に処理します。2つのイベントが2つのリスナーを持つ非同期コントローラーで送信される場合、リスナーの1つが他のリスナーが取得する前に両方のイベントを取得する場合があります。イベントを受信するには、イベントが開始されたとき（つまり、&lt;a href=&quot;add&quot;&gt;add&lt;/a&gt;が呼び出されたとき）とイベントが後で配信されたときの両方で、リスナーをサブスクライブする必要があります。</target>
        </trans-unit>
        <trans-unit id="6091777d69b78761eb04b9eb21c196dc37853a2b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;sync&lt;/code&gt; is true, events may be fired directly by the stream's subscriptions during an &lt;a href=&quot;add&quot;&gt;add&lt;/a&gt;, &lt;a href=&quot;adderror&quot;&gt;addError&lt;/a&gt; or &lt;a href=&quot;close&quot;&gt;close&lt;/a&gt; call. The returned stream controller is a &lt;a href=&quot;../synchronousstreamcontroller-class&quot;&gt;SynchronousStreamController&lt;/a&gt;, and must be used with the care and attention necessary to not break the &lt;a href=&quot;../stream-class&quot;&gt;Stream&lt;/a&gt; contract. See &lt;a href=&quot;../completer/completer.sync&quot;&gt;Completer.sync&lt;/a&gt; for some explanations on when a synchronous dispatching can be used. If in doubt, keep the controller non-sync.</source>
          <target state="translated">&lt;code&gt;sync&lt;/code&gt; がtrueの場合、&lt;a href=&quot;add&quot;&gt;add&lt;/a&gt;、&lt;a href=&quot;adderror&quot;&gt;addError&lt;/a&gt;または&lt;a href=&quot;close&quot;&gt;closeの&lt;/a&gt;呼び出し中に、ストリームのサブスクリプションによってイベントが直接発生する可能性があります。返されるストリームコントローラは&lt;a href=&quot;../synchronousstreamcontroller-class&quot;&gt;SynchronousStreamController&lt;/a&gt;であり、&lt;a href=&quot;../stream-class&quot;&gt;ストリーム&lt;/a&gt;コントラクトを壊さないように注意して使用する必要があります。同期ディスパッチを使用できる場合の説明については、&lt;a href=&quot;../completer/completer.sync&quot;&gt;Completer.sync&lt;/a&gt;を参照してください。疑わしい場合は、コントローラを非同期のままにします。</target>
        </trans-unit>
        <trans-unit id="bfee25c27eb1cf0ac6c0b98d9d00d29de3d2aacd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;sync&lt;/code&gt; is true, the returned stream controller is a &lt;a href=&quot;../synchronousstreamcontroller-class&quot;&gt;SynchronousStreamController&lt;/a&gt;, and must be used with the care and attention necessary to not break the &lt;a href=&quot;../stream-class&quot;&gt;Stream&lt;/a&gt; contract. If in doubt, use the non-sync version.</source>
          <target state="translated">場合は &lt;code&gt;sync&lt;/code&gt; trueの場合、返されたストリームコントローラがある&lt;a href=&quot;../synchronousstreamcontroller-class&quot;&gt;SynchronousStreamController&lt;/a&gt;、そして壊さないように注意し、必要な注意を払って使用しなければならない&lt;a href=&quot;../stream-class&quot;&gt;ストリーム&lt;/a&gt;の契約を。疑わしい場合は、非同期バージョンを使用してください。</target>
        </trans-unit>
        <trans-unit id="b4cdceefdee8982a059c5d4bbd9b0981b5104896" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;tagName&lt;/code&gt; is not specified then this allows inline styles on all elements. Otherwise tagName limits the styles to the specified elements.</source>
          <target state="translated">&lt;code&gt;tagName&lt;/code&gt; が指定されていない場合は、すべての要素でインラインスタイルが許可されます。それ以外の場合、tagNameはスタイルを指定された要素に制限します。</target>
        </trans-unit>
        <trans-unit id="f25a9a31943eaec96a49106c5ab026112ddd3258" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;test&lt;/code&gt; is omitted, it defaults to a function that always returns true. The &lt;code&gt;test&lt;/code&gt; function should not throw, but if it does, it is handled as if the &lt;code&gt;onError&lt;/code&gt; function had thrown.</source>
          <target state="translated">場合は &lt;code&gt;test&lt;/code&gt; 常に真を返す関数に、デフォルトを省略しています。 &lt;code&gt;test&lt;/code&gt; 機能は投げないはずですが、それがない場合は、それがあるかのように扱われる &lt;code&gt;onError&lt;/code&gt; 関数が投げていました。</target>
        </trans-unit>
        <trans-unit id="dad0597a5af5debacb2dc5d41efb19448b2e9718" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;test&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;onError&lt;/code&gt; is called with the error and possibly stack trace, and the returned future is completed with the result of this call in exactly the same way as for &lt;a href=&quot;then&quot;&gt;then&lt;/a&gt;'s &lt;code&gt;onError&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;test&lt;/code&gt; 返され &lt;code&gt;true&lt;/code&gt; 、 &lt;code&gt;onError&lt;/code&gt; エラーと多分スタックトレースと呼ばれ、そして返された未来をとまったく同じ方法で、この呼び出しの結果で終了し&lt;a href=&quot;then&quot;&gt;、その後&lt;/a&gt;の &lt;code&gt;onError&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="184dfacf5c7ab829a57fa4b5b8b3c114f3707197" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;test&lt;/code&gt; returns false, the exception is not handled by this &lt;code&gt;catchError&lt;/code&gt;, and the returned future completes with the same error and stack trace as this future.</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; がfalseを返す場合、例外はこの &lt;code&gt;catchError&lt;/code&gt; によって処理されず、返されたフューチャーは、このフューチャーと同じエラーおよびスタックトレースで完了します。</target>
        </trans-unit>
        <trans-unit id="32005e2a861163bf8f508748e143fded26457592" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;text&lt;/code&gt; contains characters that are meaningful in regular expressions, the resulting regular expression will match those characters literally. If &lt;code&gt;text&lt;/code&gt; contains no characters that have special meaning in a regular expression, it is returned unmodified.</source>
          <target state="translated">&lt;code&gt;text&lt;/code&gt; に正規表現で意味のある文字が含まれている場合、結果の正規表現はそれらの文字と文字通り一致します。正規表現で特別な意味を持つ文字が &lt;code&gt;text&lt;/code&gt; 含まれていない場合、テキストは変更されずに返されます。</target>
        </trans-unit>
        <trans-unit id="8e4ae78688a36dcbef70a438bf6589e55688ed8a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;this&lt;/code&gt; is not finite (&lt;code&gt;NaN&lt;/code&gt; or infinity), throws an &lt;a href=&quot;../unsupportederror-class&quot;&gt;UnsupportedError&lt;/a&gt;.</source>
          <target state="translated">場合 &lt;code&gt;this&lt;/code&gt; 有限でない（ &lt;code&gt;NaN&lt;/code&gt; のか、無限大）、スロー&lt;a href=&quot;../unsupportederror-class&quot;&gt;UnsupportedErrorを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a45669a842cdfb8fe0789c52ad5052fce53a4c66" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;this&lt;/code&gt; was initialized with a reviver, then the parsing operation invokes the reviver on every object or list property that has been parsed. The arguments are the property name (&lt;a href=&quot;../../dart-core/string-class&quot;&gt;String&lt;/a&gt;) or list index (&lt;a href=&quot;../../dart-core/int-class&quot;&gt;int&lt;/a&gt;), and the value is the parsed value. The return value of the reviver is used as the value of that property instead the parsed value.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; がリバイバーで初期化された場合、解析操作は、解析されたすべてのオブジェクトまたはリストプロパティでリバイバーを呼び出します。引数はプロパティ名（&lt;a href=&quot;../../dart-core/string-class&quot;&gt;String&lt;/a&gt;）またはリストインデックス（&lt;a href=&quot;../../dart-core/int-class&quot;&gt;int&lt;/a&gt;）で、値は解析された値です。そのプロパティの値として、解析された値ではなく、リバイバーの戻り値が使用されます。</target>
        </trans-unit>
        <trans-unit id="a3f1d7e0fcf28f6dd40fce90b7a83dd32c3a792a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;toEncodable&lt;/code&gt; is omitted, it defaults to a function that returns the result of calling &lt;code&gt;.toJson()&lt;/code&gt; on the unencodable object.</source>
          <target state="translated">場合 &lt;code&gt;toEncodable&lt;/code&gt; を呼び出した結果を返す関数に省略され、それがデフォルト &lt;code&gt;.toJson()&lt;/code&gt; unencodableオブジェクト上を。</target>
        </trans-unit>
        <trans-unit id="f45aee4bbdaee2ee831ce66a0796bf253269a54b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;toEncodable&lt;/code&gt; is omitted, it defaults to calling &lt;code&gt;.toJson()&lt;/code&gt; on the object.</source>
          <target state="translated">場合 &lt;code&gt;toEncodable&lt;/code&gt; を呼び出すには、そのデフォルトは省略され &lt;code&gt;.toJson()&lt;/code&gt; オブジェクトの上に。</target>
        </trans-unit>
        <trans-unit id="cb41b24f4f8b5626ac2e5d0179d7d1d157511b0b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;type&lt;/code&gt; is &lt;a href=&quot;../internetaddresstype/ipv4-constant&quot;&gt;InternetAddressType.IPv4&lt;/a&gt;, &lt;code&gt;address&lt;/code&gt; must be a numeric IPv4 address (dotted-decimal notation). If &lt;code&gt;type&lt;/code&gt; is &lt;a href=&quot;../internetaddresstype/ipv6-constant&quot;&gt;InternetAddressType.IPv6&lt;/a&gt;, &lt;code&gt;address&lt;/code&gt; must be a numeric IPv6 address (hexadecimal notation). If &lt;code&gt;type&lt;/code&gt; is &lt;a href=&quot;../internetaddresstype/unix-constant&quot;&gt;InternetAddressType.unix&lt;/a&gt;, &lt;code&gt;address&lt;/code&gt; must be a a valid file path. If &lt;code&gt;type&lt;/code&gt; is omitted, &lt;code&gt;address&lt;/code&gt; must be either a numeric IPv4 or IPv6 address and the type is inferred from the format.</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; が&lt;a href=&quot;../internetaddresstype/ipv4-constant&quot;&gt;InternetAddressType.IPv4の&lt;/a&gt;場合、 &lt;code&gt;address&lt;/code&gt; は数値のIPv4アドレス（ドット付き10進表記）である必要があります。 &lt;code&gt;type&lt;/code&gt; が&lt;a href=&quot;../internetaddresstype/ipv6-constant&quot;&gt;InternetAddressType.IPv6の&lt;/a&gt;場合、 &lt;code&gt;address&lt;/code&gt; は数値のIPv6アドレス（16進表記）である必要があります。 &lt;code&gt;type&lt;/code&gt; が&lt;a href=&quot;../internetaddresstype/unix-constant&quot;&gt;InternetAddressType.unixの&lt;/a&gt;場合、 &lt;code&gt;address&lt;/code&gt; は有効なファイルパスである必要があります。 &lt;code&gt;type&lt;/code&gt; を省略する場合、 &lt;code&gt;address&lt;/code&gt; は数値のIPv4またはIPv6アドレスである必要があり、タイプはフォーマットから推測されます。</target>
        </trans-unit>
        <trans-unit id="8452b8d39f23fe4ff1fc3adcc403c1e8fac6702e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;type&lt;/code&gt; is either &lt;a href=&quot;../internetaddresstype/ipv4-constant&quot;&gt;InternetAddressType.IPv4&lt;/a&gt; or &lt;a href=&quot;../internetaddresstype/ipv6-constant&quot;&gt;InternetAddressType.IPv6&lt;/a&gt; it will only lookup addresses of the specified type. Default is &lt;a href=&quot;../internetaddresstype/any-constant&quot;&gt;InternetAddressType.any&lt;/a&gt;.</source>
          <target state="translated">場合 &lt;code&gt;type&lt;/code&gt; どちらかである&lt;a href=&quot;../internetaddresstype/ipv4-constant&quot;&gt;InternetAddressType.IPv4&lt;/a&gt;または&lt;a href=&quot;../internetaddresstype/ipv6-constant&quot;&gt;InternetAddressType.IPv6&lt;/a&gt;それは、指定されたタイプの唯一のルックアップアドレスになります。デフォルトは&lt;a href=&quot;../internetaddresstype/any-constant&quot;&gt;InternetAddressType.any&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="e24a106998fdf666a934a68aae5ed733f09a3687" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;type&lt;/code&gt; is omitted, the &lt;code&gt;rawAddress&lt;/code&gt; must have a length of either 4 or 16, in which case the type defaults to &lt;a href=&quot;../internetaddresstype/ipv4-constant&quot;&gt;InternetAddressType.IPv4&lt;/a&gt; or &lt;a href=&quot;../internetaddresstype/ipv6-constant&quot;&gt;InternetAddressType.IPv6&lt;/a&gt; respectively.</source>
          <target state="translated">場合 &lt;code&gt;type&lt;/code&gt; 省略され、 &lt;code&gt;rawAddress&lt;/code&gt; は、に場合にタイプのデフォルト、4または16のいずれかの長さを有していなければならない&lt;a href=&quot;../internetaddresstype/ipv4-constant&quot;&gt;InternetAddressType.IPv4&lt;/a&gt;又は&lt;a href=&quot;../internetaddresstype/ipv6-constant&quot;&gt;InternetAddressType.IPv6&lt;/a&gt;それぞれ。</target>
        </trans-unit>
        <trans-unit id="94c5a733eec653b7008acd3d71a0751737c986d0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;typeArguments&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; or empty, the constructor is equivalent to calling &lt;a href=&quot;invocation.method&quot;&gt;Invocation.method&lt;/a&gt; with the remaining arguments. All the individual type arguments must be non-null.</source>
          <target state="translated">場合 &lt;code&gt;typeArguments&lt;/code&gt; がある &lt;code&gt;null&lt;/code&gt; または空、コンストラクタが呼び出すのと同じです&lt;a href=&quot;invocation.method&quot;&gt;Invocation.methodを&lt;/a&gt;、残りの引数を持ちます。個々の型引数はすべてnull以外でなければなりません。</target>
        </trans-unit>
        <trans-unit id="94d8a2a508c65788d2b195561891d008ca524aae" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;unicode&lt;/code&gt; is enabled, then the pattern is treated as a Unicode pattern as described by the ECMAScript standard.</source>
          <target state="translated">&lt;code&gt;unicode&lt;/code&gt; が有効になっている場合、ECMAScript標準で記述されているように、パターンはUnicodeパターンとして扱われます。</target>
        </trans-unit>
        <trans-unit id="5a2eabf21d99725784ad3b5668e3a78dc1abd228" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;uri&lt;/code&gt; cannot reference a directory this throws &lt;a href=&quot;../../dart-core/unsupportederror-class&quot;&gt;UnsupportedError&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;uri&lt;/code&gt; がディレクトリを参照できない場合、&lt;a href=&quot;../../dart-core/unsupportederror-class&quot;&gt;UnsupportedErrorが&lt;/a&gt;スローされます。</target>
        </trans-unit>
        <trans-unit id="1a712971634d5ad52dfeb80764d1005a02742997" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;uri&lt;/code&gt; cannot reference a file this throws &lt;a href=&quot;../../dart-core/unsupportederror-class&quot;&gt;UnsupportedError&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;uri&lt;/code&gt; がファイルを参照できない場合、&lt;a href=&quot;../../dart-core/unsupportederror-class&quot;&gt;UnsupportedErrorが&lt;/a&gt;スローされます。</target>
        </trans-unit>
        <trans-unit id="dee5896cc43ad6b0df031a97b8d86a36cb92811d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is a future, the created future waits for the &lt;code&gt;value&lt;/code&gt; future to complete, and then completes with the same result. Since a &lt;code&gt;value&lt;/code&gt; future can complete with an error, so can the future created by &lt;a href=&quot;future.value&quot;&gt;Future.value&lt;/a&gt;, even if the name suggests otherwise.</source>
          <target state="translated">場合 &lt;code&gt;value&lt;/code&gt; 、将来、作成された将来の待機である &lt;code&gt;value&lt;/code&gt; 完全に将来、その後、同じ結果で完了します。以来 &lt;code&gt;value&lt;/code&gt; 将来がエラーで完了することができ、そうすることによって、将来に作成することができます&lt;a href=&quot;future.value&quot;&gt;Future.value&lt;/a&gt;名前がそう示唆しても、。</target>
        </trans-unit>
        <trans-unit id="91acd19b1eae8195c04d1ba6b3f01ccb7a1d10c0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is not a &lt;a href=&quot;../future-class&quot;&gt;Future&lt;/a&gt;, the created future is completed with the &lt;code&gt;value&lt;/code&gt; value, equivalently to &lt;code&gt;new Future&amp;lt;T&amp;gt;.sync(() =&amp;gt; value)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; が&lt;a href=&quot;../future-class&quot;&gt;Future&lt;/a&gt;でない場合、作成されたfutureは &lt;code&gt;value&lt;/code&gt; valueで完了します。これは、 &lt;code&gt;new Future&amp;lt;T&amp;gt;.sync(() =&amp;gt; value)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="b72e4f1f0c481ac276578db2dff47726f4990eae" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is omitted or &lt;code&gt;null&lt;/code&gt;, it is converted to &lt;code&gt;FutureOr&amp;lt;T&amp;gt;&lt;/code&gt; by &lt;code&gt;value as FutureOr&amp;lt;T&amp;gt;&lt;/code&gt;. If &lt;code&gt;T&lt;/code&gt; is not nullable, then the &lt;code&gt;value&lt;/code&gt; is required, otherwise the construction throws.</source>
          <target state="translated">場合 &lt;code&gt;value&lt;/code&gt; 省略されるかされた &lt;code&gt;null&lt;/code&gt; 、それに変換され &lt;code&gt;FutureOr&amp;lt;T&amp;gt;&lt;/code&gt; により &lt;code&gt;value as FutureOr&amp;lt;T&amp;gt;&lt;/code&gt; 。 &lt;code&gt;T&lt;/code&gt; がNULL可能でない場合は、 &lt;code&gt;value&lt;/code&gt; が必要です。そうでない場合、構文はスローされます。</target>
        </trans-unit>
        <trans-unit id="723e4ae555a34cada2f2f68ac37145fc5ebf816a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;when&lt;/code&gt; is true, stop the program as if a breakpoint were hit at the following statement.</source>
          <target state="translated">場合 &lt;code&gt;when&lt;/code&gt; 真であるブレークポイントが次の文でヒットしているかのように、プログラムを停止します。</target>
        </trans-unit>
        <trans-unit id="b3529b52056fe0493008b7ed1b54f6bbd09dc33a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;when&lt;/code&gt; is true, stop the program as if a breakpoint were hit at the following statement. &lt;a href=&quot;debugger&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">場合 &lt;code&gt;when&lt;/code&gt; 真であるブレークポイントが次の文でヒットしているかのように、プログラムを停止します。&lt;a href=&quot;debugger&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9a78039282cdde63d953277547566a024146e90f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; are zero, the &quot;rectangle&quot; comprises only the single point &lt;code&gt;(left, top)&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;width&lt;/code&gt; と &lt;code&gt;height&lt;/code&gt; ゼロで、「矩形」は、単一点含む &lt;code&gt;(left, top)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cf96e273737dac3af426791a391c4e7b96432a7a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;width&lt;/code&gt; is already smaller than or equal to &lt;code&gt;this.length&lt;/code&gt;, no padding is added. A negative &lt;code&gt;width&lt;/code&gt; is treated as zero.</source>
          <target state="translated">場合 &lt;code&gt;width&lt;/code&gt; に既に以下である &lt;code&gt;this.length&lt;/code&gt; 、パディングが追加されていません。負の &lt;code&gt;width&lt;/code&gt; はゼロとして扱われます。</target>
        </trans-unit>
        <trans-unit id="1ae6a36bce67d3c4b53522d03d0e6d008a5aa401" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;withTrustedRoots&lt;/code&gt; is passed as &lt;code&gt;true&lt;/code&gt;, the &lt;a href=&quot;../securitycontext-class&quot;&gt;SecurityContext&lt;/a&gt; will be seeded by the trusted root certificates provided as explained below. To obtain a &lt;a href=&quot;../securitycontext-class&quot;&gt;SecurityContext&lt;/a&gt; containing trusted root certificates, &lt;a href=&quot;defaultcontext&quot;&gt;SecurityContext.defaultContext&lt;/a&gt; is usually sufficient, and should be used instead. However, if the &lt;a href=&quot;../securitycontext-class&quot;&gt;SecurityContext&lt;/a&gt; containing the trusted root certificates must be modified per-connection, then &lt;code&gt;withTrustedRoots&lt;/code&gt; should be used.</source>
          <target state="translated">場合 &lt;code&gt;withTrustedRoots&lt;/code&gt; をとして渡される &lt;code&gt;true&lt;/code&gt; 、&lt;a href=&quot;../securitycontext-class&quot;&gt;SecurityContextがは、&lt;/a&gt;以下に説明するように提供信頼できるルート証明書によって播種されます。信頼されたルート証明書を含む&lt;a href=&quot;../securitycontext-class&quot;&gt;SecurityContext&lt;/a&gt;を取得するには、通常&lt;a href=&quot;defaultcontext&quot;&gt;SecurityContext.defaultContext&lt;/a&gt;で十分であり、代わりに使用する必要があります。ただし、信頼されたルート証明書を含む&lt;a href=&quot;../securitycontext-class&quot;&gt;SecurityContext&lt;/a&gt;を接続ごとに変更する必要がある場合は、 &lt;code&gt;withTrustedRoots&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="7a7ffe99baea75a3859b3060a8c9a7b7d759d6dc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;writeHeaders&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, the status line and &lt;a href=&quot;headers&quot;&gt;headers&lt;/a&gt; will be written to the socket before it's detached. If &lt;code&gt;false&lt;/code&gt;, the socket is detached immediately, without any data written to the socket. Default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;writeHeaders&lt;/code&gt; がある &lt;code&gt;true&lt;/code&gt; 、ステータス行と&lt;a href=&quot;headers&quot;&gt;ヘッダは、&lt;/a&gt;それが切り離される前ソケットに書き込まれます。場合は &lt;code&gt;false&lt;/code&gt; を、ソケットはソケットに書き込まれたデータなしで、すぐに切り離されます。デフォルトは &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f928bea98a106344c0d4c3be7265d469c7e5f8a8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;x&lt;/code&gt; is an &lt;a href=&quot;../dart-core/int-class&quot;&gt;int&lt;/a&gt; and &lt;code&gt;exponent&lt;/code&gt; is a non-negative &lt;a href=&quot;../dart-core/int-class&quot;&gt;int&lt;/a&gt;, the result is an &lt;a href=&quot;../dart-core/int-class&quot;&gt;int&lt;/a&gt;, otherwise both arguments are converted to doubles first, and the result is a &lt;a href=&quot;../dart-core/double-class&quot;&gt;double&lt;/a&gt;.</source>
          <target state="translated">場合 &lt;code&gt;x&lt;/code&gt; あり&lt;a href=&quot;../dart-core/int-class&quot;&gt;、INT&lt;/a&gt;及び &lt;code&gt;exponent&lt;/code&gt; 非負である&lt;a href=&quot;../dart-core/int-class&quot;&gt;INT&lt;/a&gt;、結果は&lt;a href=&quot;../dart-core/int-class&quot;&gt;INT&lt;/a&gt;、そうでなければ両方の引数は、第一倍に変換され、結果は&lt;a href=&quot;../dart-core/double-class&quot;&gt;ダブル&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d64df907879a86a49e181814a6e528290e538b52" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;../../dart-core/list-class&quot;&gt;List&lt;/a&gt; or &lt;a href=&quot;../../dart-core/map-class&quot;&gt;Map&lt;/a&gt; contains a reference to itself, directly or through other lists or maps, it cannot be serialized and a &lt;a href=&quot;../jsoncyclicerror-class&quot;&gt;JsonCyclicError&lt;/a&gt; is thrown.</source>
          <target state="translated">&lt;a href=&quot;../../dart-core/list-class&quot;&gt;リスト&lt;/a&gt;または&lt;a href=&quot;../../dart-core/map-class&quot;&gt;マップ&lt;/a&gt;に、それ自体への参照が直接または他のリストまたはマップを通じて含まれている場合、それをシリアル化することはできず、&lt;a href=&quot;../jsoncyclicerror-class&quot;&gt;JsonCyclicError&lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="a0017772d01c2ccaef1bfc17f5ad454ee056f145" translate="yes" xml:space="preserve">
          <source>If a bad certificate is received on a connection attempt, the library calls the function that was the value of badCertificateCallback at the time the request is made, even if the value of badCertificateCallback has changed since then.</source>
          <target state="translated">接続試行時に不正な証明書を受信した場合、ライブラリはリクエスト時にbadCertificateCallbackの値が変更されていた場合でも、リクエスト時にbadCertificateCallbackの値であった関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="b4d4ab4f56acb2f628a75ec0dfb0f9cf64811b8e" translate="yes" xml:space="preserve">
          <source>If a call to &lt;code&gt;action&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt; or a &lt;a href=&quot;../future-class&quot;&gt;Future&lt;/a&gt; that completes to &lt;code&gt;false&lt;/code&gt;, iteration ends and the future returned by &lt;a href=&quot;dowhile&quot;&gt;doWhile&lt;/a&gt; is completed with a &lt;code&gt;null&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;action&lt;/code&gt; 呼び出しが &lt;code&gt;false&lt;/code&gt; または &lt;code&gt;false&lt;/code&gt; に完了する&lt;a href=&quot;../future-class&quot;&gt;Future&lt;/a&gt;を返す場合、反復は終了し、&lt;a href=&quot;dowhile&quot;&gt;doWhile&lt;/a&gt;によって返されるfutureは &lt;code&gt;null&lt;/code&gt; 値で完了します。</target>
        </trans-unit>
        <trans-unit id="4549e47b7027525214dc12c8442898d2a7905031" translate="yes" xml:space="preserve">
          <source>If a call to &lt;code&gt;action&lt;/code&gt; throws or a future returned by &lt;code&gt;action&lt;/code&gt; completes with an error, iteration ends and the future returned by &lt;a href=&quot;dowhile&quot;&gt;doWhile&lt;/a&gt; completes with the same error.</source>
          <target state="translated">&lt;code&gt;action&lt;/code&gt; 呼び出しがスローされるか、 &lt;code&gt;action&lt;/code&gt; によって返されるフューチャーがエラーで完了すると、反復が終了し、&lt;a href=&quot;dowhile&quot;&gt;doWhile&lt;/a&gt;によって返されるフューチャーが同じエラーで完了します。</target>
        </trans-unit>
        <trans-unit id="72415f6303e648e97535970d314161f27c3eb0eb" translate="yes" xml:space="preserve">
          <source>If a char-code value is greater than 16-bits, it is decomposed into a surrogate pair:</source>
          <target state="translated">文字コード値が16ビットより大きい場合は、サロゲートペアに分解されます。</target>
        </trans-unit>
        <trans-unit id="80803d2bdac4647241101f1b3452d663540f920b" translate="yes" xml:space="preserve">
          <source>If a class is annotated with &lt;code&gt;@proxy&lt;/code&gt;, or it implements any class that is annotated, then all member accesses are allowed on an object of that type. As such, it is not a static type warning to access any member of the object which is not implemented by the class, or to call a method with a different number of parameters than it is declared with.</source>
          <target state="translated">クラスに &lt;code&gt;@proxy&lt;/code&gt; で注釈が付けられている場合、またはクラスが注釈付きのクラスを実装している場合、そのタイプのオブジェクトですべてのメンバーアクセスが許可されます。そのため、クラスによって実装されていないオブジェクトのメンバーにアクセスしたり、宣言されているのとは異なる数のパラメーターを使用してメソッドを呼び出したりすることは、静的な型の警告ではありません。</target>
        </trans-unit>
        <trans-unit id="7051e0c206c2bd60085d1c3a6b817dbff94b6570" translate="yes" xml:space="preserve">
          <source>If a class is deprecated, so is every member of it.</source>
          <target state="translated">クラスが非推奨になった場合、そのクラスのすべてのメンバーも同様に非推奨になります。</target>
        </trans-unit>
        <trans-unit id="d362837a88dac8a595461d1e47ca0e184fe517d9" translate="yes" xml:space="preserve">
          <source>If a class is not intending to implement the feature, it should throw an &lt;a href=&quot;unsupportederror-class&quot;&gt;UnsupportedError&lt;/a&gt; instead. This error is only intended for use during development.</source>
          <target state="translated">クラスが機能の実装を意図していない場合は、代わりに&lt;a href=&quot;unsupportederror-class&quot;&gt;UnsupportedError&lt;/a&gt;をスローする必要があります。このエラーは、開発中の使用のみを目的としています。</target>
        </trans-unit>
        <trans-unit id="b3f94c1f65b57c1da5926289c1d009ae878b66a5" translate="yes" xml:space="preserve">
          <source>If a done event occurs before the value is found, the future completes with a &lt;a href=&quot;../../dart-core/rangeerror-class&quot;&gt;RangeError&lt;/a&gt;.</source>
          <target state="translated">値が見つかる前にdoneイベントが発生した場合、futureは&lt;a href=&quot;../../dart-core/rangeerror-class&quot;&gt;RangeErrorで&lt;/a&gt;完了します。</target>
        </trans-unit>
        <trans-unit id="4962a2278927a05c55f92795ce5fb674b45e9476" translate="yes" xml:space="preserve">
          <source>If a future does not have a successor when it completes with an error, it forwards the error message to the global error-handler. This behavior makes sure that no error is silently dropped. However, it also means that error handlers should be installed early, so that they are present as soon as a future is completed with an error. The following example demonstrates this potential bug:</source>
          <target state="translated">未来がエラーで完了したときに後継者がいない場合、エラーメッセージをグローバルエラーハンドラに転送します。この動作により、エラーが黙って落とされることはありません。しかし、これはまた、エラーハンドラを早期にインストールして、未来がエラーで完了したときにすぐに存在するようにすべきであることを意味します。次の例は、この潜在的なバグを示しています。</target>
        </trans-unit>
        <trans-unit id="5124fe2ef7ce66398023069efbe53cc99bf10a90" translate="yes" xml:space="preserve">
          <source>If a key of &lt;code&gt;newEntries&lt;/code&gt; is already in this map, the corresponding value is overwritten.</source>
          <target state="translated">&lt;code&gt;newEntries&lt;/code&gt; のキーがすでにこのマップにある場合、対応する値は上書きされます。</target>
        </trans-unit>
        <trans-unit id="f1604fbbdf4912186bae0d852af28f2a22d39b73" translate="yes" xml:space="preserve">
          <source>If a key of &lt;code&gt;other&lt;/code&gt; is already in this map, its value is overwritten.</source>
          <target state="translated">&lt;code&gt;other&lt;/code&gt; のキーがすでにこのマップにある場合、その値は上書きされます。</target>
        </trans-unit>
        <trans-unit id="d91fbccb27219d53d1fc52c433d89a742329642b" translate="yes" xml:space="preserve">
          <source>If a library is deprecated, so is every member of it.</source>
          <target state="translated">ライブラリが非推奨になった場合、そのライブラリのすべてのメンバーも非推奨になります。</target>
        </trans-unit>
        <trans-unit id="ede31f467a779e98b46cc27c5d9e811e2f48c312" translate="yes" xml:space="preserve">
          <source>If a library with the same canonicalized uri has already been loaded, the existing library will be returned. (The isolate will not load a new copy of the library.)</source>
          <target state="translated">同じ正規化されたウリを持つライブラリが既にロードされている場合は、既存のライブラリが返されます。(アイソレートはライブラリの新しいコピーをロードしません)。</target>
        </trans-unit>
        <trans-unit id="547550421e5fe7b0eb7ddb10ed1cc2cceb9943f4" translate="yes" xml:space="preserve">
          <source>If a non-future value is returned, the returned future is completed with that value.</source>
          <target state="translated">非未来値が返された場合、返された未来はその値で完結します。</target>
        </trans-unit>
        <trans-unit id="57c5a14e0824a186091e615d0d22013cd5182cb7" translate="yes" xml:space="preserve">
          <source>If a periodic timer with a non-zero duration is delayed too much, so more than one tick should have happened, all but the last tick in the past are considered &quot;missed&quot;, and no callback is invoked for them. The &lt;a href=&quot;tick&quot;&gt;tick&lt;/a&gt; count reflects the number of durations that have passed and not the number of callback invocations that have happened.</source>
          <target state="translated">ゼロ以外の継続時間の定期的なタイマーの遅延が大きすぎる場合、複数のティックが発生しているはずであり、過去の最後のティックを除くすべてが「欠落」と見なされ、コールバックは呼び出されません。&lt;a href=&quot;tick&quot;&gt;目盛り&lt;/a&gt;カウントが起こったコールバック呼び出しの数を通過していない期間の数を反映しています。</target>
        </trans-unit>
        <trans-unit id="50ff94a0e1e731a1ae693528b6672b15624f5fd9" translate="yes" xml:space="preserve">
          <source>If a proxy requires authentication it is possible to configure the username and password as well. Use the format &lt;code&gt;username:password@hostname:port&lt;/code&gt; to include the username and password. Alternatively the API &lt;a href=&quot;addproxycredentials&quot;&gt;addProxyCredentials&lt;/a&gt; can be used to set credentials for proxies which require authentication.</source>
          <target state="translated">プロキシで認証が​​必要な場合は、ユーザー名とパスワードも設定できます。 &lt;code&gt;username:password@hostname:port&lt;/code&gt; の形式を使用して、ユーザー名とパスワードを含めます。または、API &lt;a href=&quot;addproxycredentials&quot;&gt;addProxyCredentials&lt;/a&gt;を使用して、認証が必要なプロキシの認証情報を設定できます。</target>
        </trans-unit>
        <trans-unit id="1a96c999e62ca99952937ffcd256595c52dedeef" translate="yes" xml:space="preserve">
          <source>If a subclass overrides &lt;a href=&quot;hashcode&quot;&gt;hashCode&lt;/a&gt;, it should override the &lt;a href=&quot;../../dart-core/object/operator_equals&quot;&gt;operator ==&lt;/a&gt; operator as well to maintain consistency.</source>
          <target state="translated">サブクラスが&lt;a href=&quot;hashcode&quot;&gt;hashCodeを&lt;/a&gt;オーバーライドする場合、一貫性を維持するために、&lt;a href=&quot;../../dart-core/object/operator_equals&quot;&gt;演算子==&lt;/a&gt;演算子もオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="9ddf097307e469793c5b0729af7ba9e3f285856f" translate="yes" xml:space="preserve">
          <source>If a subclass overrides &lt;a href=&quot;hashcode&quot;&gt;hashCode&lt;/a&gt;, it should override the &lt;a href=&quot;../object/operator_equals&quot;&gt;operator ==&lt;/a&gt; operator as well to maintain consistency.</source>
          <target state="translated">サブクラスが&lt;a href=&quot;hashcode&quot;&gt;hashCodeを&lt;/a&gt;オーバーライドする場合、一貫性を維持するために、&lt;a href=&quot;../object/operator_equals&quot;&gt;演算子==&lt;/a&gt;演算子もオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="d0ec53f9d29ce2d8024df4c473d3f98acba26055" translate="yes" xml:space="preserve">
          <source>If a subclass overrides &lt;a href=&quot;hashcode&quot;&gt;hashCode&lt;/a&gt;, it should override the &lt;a href=&quot;operator_equals&quot;&gt;operator ==&lt;/a&gt; operator as well to maintain consistency.</source>
          <target state="translated">サブクラスが&lt;a href=&quot;hashcode&quot;&gt;hashCodeを&lt;/a&gt;オーバーライドする場合、一貫性を維持するために、&lt;a href=&quot;operator_equals&quot;&gt;演算子==&lt;/a&gt;演算子もオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="4415259772579cc570842b3c5bba33e9925c5a1c" translate="yes" xml:space="preserve">
          <source>If a subclass overrides the equality operator it should override the &lt;a href=&quot;hashcode&quot;&gt;hashCode&lt;/a&gt; method as well to maintain consistency.</source>
          <target state="translated">サブクラスが等価演算子をオーバーライドする場合は、一貫性を維持するために、&lt;a href=&quot;hashcode&quot;&gt;hashCode&lt;/a&gt;メソッドもオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="9b6664d8677849d6449becdb506e5d74f5c7bf20" translate="yes" xml:space="preserve">
          <source>If a uriPolicy is not specified then the default uriPolicy will be used.</source>
          <target state="translated">uriPolicyが指定されていない場合は、デフォルトのuriPolicyが使用されます。</target>
        </trans-unit>
        <trans-unit id="fbe00c7effd7cbc80c1bb73ac31728822000fcc1" translate="yes" xml:space="preserve">
          <source>If a value is returned, it becomes the result of the original invocation.</source>
          <target state="translated">値が返された場合は、元の呼び出しの結果になります。</target>
        </trans-unit>
        <trans-unit id="20dc6616e6e68f635ab8b7cc25d99c409292376f" translate="yes" xml:space="preserve">
          <source>If a value of any other type is attempted to be serialized, the &lt;code&gt;toEncodable&lt;/code&gt; function provided in the constructor is called with the value as argument. The result, which must be a directly serializable value, is serialized instead of the original value.</source>
          <target state="translated">他のタイプの値をシリアル化しようとすると、コンストラクターで提供される &lt;code&gt;toEncodable&lt;/code&gt; 関数が、その値を引数として呼び出されます。結果は直接シリアライズ可能な値でなければならず、元の値の代わりにシリアライズされます。</target>
        </trans-unit>
        <trans-unit id="c9c9b5b3b3d60596b2e3d621fae841353feb7157" translate="yes" xml:space="preserve">
          <source>If a variable is deprecated, so are its implicit getter and setter.</source>
          <target state="translated">変数が非推奨になった場合、暗黙のゲッターとセッターも同様です。</target>
        </trans-unit>
        <trans-unit id="856f2fe9483be2607d8b83222c325c665b36520f" translate="yes" xml:space="preserve">
          <source>If all accessed elements of &lt;code&gt;source&lt;/code&gt; are actually instances of &lt;code&gt;T&lt;/code&gt;, and if all elements added to the returned set are actually instance of &lt;code&gt;S&lt;/code&gt;, then the returned set can be used as a &lt;code&gt;Set&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;source&lt;/code&gt; のアクセスされたすべての要素が実際に &lt;code&gt;T&lt;/code&gt; のインスタンスであり、返されたセットに追加されたすべての要素が実際に &lt;code&gt;S&lt;/code&gt; のインスタンスである場合、返された &lt;code&gt;Set&amp;lt;T&amp;gt;&lt;/code&gt; はSet &amp;lt;T&amp;gt;として使用できます。</target>
        </trans-unit>
        <trans-unit id="9084a806c0d91d8350d9aed22d81b554b80f69cd" translate="yes" xml:space="preserve">
          <source>If all accessed elements of &lt;code&gt;source&lt;/code&gt; are actually instances of &lt;code&gt;T&lt;/code&gt;, and if all elements stored into the returned list are actually instance of &lt;code&gt;S&lt;/code&gt;, then the returned list can be used as a &lt;code&gt;List&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;source&lt;/code&gt; のアクセスされたすべての要素が実際には &lt;code&gt;T&lt;/code&gt; のインスタンスであり、返されたリストに格納されているすべての要素が実際には &lt;code&gt;S&lt;/code&gt; のインスタンスである場合、返された &lt;code&gt;List&amp;lt;T&amp;gt;&lt;/code&gt; はList &amp;lt;T&amp;gt;として使用できます。</target>
        </trans-unit>
        <trans-unit id="03129eed491f699bec8c7414830279fe06a60458" translate="yes" xml:space="preserve">
          <source>If all accessed elements of &lt;code&gt;source&lt;/code&gt; are actually instances of &lt;code&gt;T&lt;/code&gt;, and if all elements stored into the returned queue are actually instance of &lt;code&gt;S&lt;/code&gt;, then the returned queue can be used as a &lt;code&gt;Queue&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;source&lt;/code&gt; アクセスされたすべての要素が実際に &lt;code&gt;T&lt;/code&gt; のインスタンスであり、返されたキューに格納されているすべての要素が実際に &lt;code&gt;S&lt;/code&gt; のインスタンスである場合、返された &lt;code&gt;Queue&amp;lt;T&amp;gt;&lt;/code&gt; はQueue &amp;lt;T&amp;gt;として使用できます。</target>
        </trans-unit>
        <trans-unit id="598b3b33938b8305ac8c85037955547f78c7fccd" translate="yes" xml:space="preserve">
          <source>If all accessed entries of &lt;code&gt;source&lt;/code&gt; are have &lt;code&gt;K2&lt;/code&gt; keys and &lt;code&gt;V2&lt;/code&gt; values and if all entries added to the returned map have &lt;code&gt;K&lt;/code&gt; keys and &lt;code&gt;V&lt;/code&gt;] values, then the returned map can be used as a &lt;code&gt;Map&amp;lt;K2, V2&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">すべてのアクセスエントリ場合 &lt;code&gt;source&lt;/code&gt; 有する &lt;code&gt;K2&lt;/code&gt; キーと &lt;code&gt;V2&lt;/code&gt; の値と返されたマップに追加されたすべてのエントリを持っている場合に &lt;code&gt;K&lt;/code&gt; のキーと &lt;code&gt;V&lt;/code&gt; ]の値を、戻さマップとして使用することができる &lt;code&gt;Map&amp;lt;K2, V2&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="55e9834e32ab427fb47d126bd508749d11d540e2" translate="yes" xml:space="preserve">
          <source>If an IP version 6 (IPv6) address is used, both IP version 6 (IPv6) and version 4 (IPv4) connections will be accepted. To restrict this to version 6 (IPv6) only, use &lt;code&gt;v6Only&lt;/code&gt; to set version 6 only.</source>
          <target state="translated">IPバージョン6（IPv6）アドレスが使用されている場合、IPバージョン6（IPv6）接続とバージョン4（IPv4）接続の両方が受け入れられます。これをバージョン6（IPv6）のみに制限するには、 &lt;code&gt;v6Only&lt;/code&gt; を使用してバージョン6のみを設定します。</target>
        </trans-unit>
        <trans-unit id="ff3fd52d5bbfebcc69854d6375578d2ce38d2c96" translate="yes" xml:space="preserve">
          <source>If an IP version 6 (IPv6) address is used, both IP version 6 (IPv6) and version 4 (IPv4) connections will be accepted. To restrict this to version 6 (IPv6) only, use &lt;code&gt;v6Only&lt;/code&gt; to set version 6 only. However, if the address is &lt;a href=&quot;../internetaddress/loopbackipv6&quot;&gt;InternetAddress.loopbackIPv6&lt;/a&gt;, only IP version 6 (IPv6) connections will be accepted.</source>
          <target state="translated">IPバージョン6（IPv6）アドレスが使用されている場合、IPバージョン6（IPv6）接続とバージョン4（IPv4）接続の両方が受け入れられます。これをバージョン6（IPv6）のみに制限するには、 &lt;code&gt;v6Only&lt;/code&gt; を使用してバージョン6のみを設定します。ただし、アドレスが&lt;a href=&quot;../internetaddress/loopbackipv6&quot;&gt;InternetAddress.loopbackIPv6の&lt;/a&gt;場合、IPバージョン6（IPv6）接続のみが受け入れられます。</target>
        </trans-unit>
        <trans-unit id="1966364740a1709274c1cfad40ed3a6eb9046fa2" translate="yes" xml:space="preserve">
          <source>If an asynchronous method is pending it is also not possible to call any synchronous methods. This will also throw a &lt;a href=&quot;filesystemexception-class&quot;&gt;FileSystemException&lt;/a&gt;.</source>
          <target state="translated">非同期メソッドが保留中の場合、同期メソッドを呼び出すこともできません。これも&lt;a href=&quot;filesystemexception-class&quot;&gt;FileSystemExceptionを&lt;/a&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="b7a2c102c1c6f7914666a30715a2de18b638e197" translate="yes" xml:space="preserve">
          <source>If an error event occurs before the first data event, the returned future is completed with that error.</source>
          <target state="translated">最初のデータイベントの前にエラーイベントが発生した場合、返された未来はそのエラーで完了します。</target>
        </trans-unit>
        <trans-unit id="4afa3b6424d103bf7bcdb525d2d8dcc53ae73829" translate="yes" xml:space="preserve">
          <source>If an error event occurs before the value is found, the future completes with this error.</source>
          <target state="translated">値が見つかる前にエラーイベントが発生した場合、このエラーで未来は終了します。</target>
        </trans-unit>
        <trans-unit id="634d7714b8e7656a13a76ff2931853646b065111" translate="yes" xml:space="preserve">
          <source>If an error occur when trying to join the multicase group an exception is thrown.</source>
          <target state="translated">マルチケースグループに参加しようとしたときにエラーが発生した場合、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="4ee8427e0bb93356536377029d44db78b6cdb131" translate="yes" xml:space="preserve">
          <source>If an error occur when trying to join the multicast group an exception is thrown.</source>
          <target state="translated">マルチキャストグループに参加しようとしたときにエラーが発生した場合、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="b650013e0096b9b3bf4828e07be823981429d072" translate="yes" xml:space="preserve">
          <source>If an error occurs before the response is available, this future will complete with an error.</source>
          <target state="translated">レスポンスが利用可能になる前にエラーが発生した場合、このフューチャーはエラーで終了します。</target>
        </trans-unit>
        <trans-unit id="ee04e3d831f8042d206f37cd2c84fa8421d4f210" translate="yes" xml:space="preserve">
          <source>If an error occurs synchronously in &lt;code&gt;body&lt;/code&gt;, then throwing in the &lt;code&gt;onError&lt;/code&gt; handler makes the call to &lt;code&gt;runZone&lt;/code&gt; throw that error, and otherwise the call to &lt;code&gt;runZoned&lt;/code&gt; attempt to return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;body&lt;/code&gt; でエラーが同期的に発生した場合、 &lt;code&gt;onError&lt;/code&gt; ハンドラーをスローすると、 &lt;code&gt;runZone&lt;/code&gt; がそのエラーをスローします。それ以外の場合、 &lt;code&gt;runZoned&lt;/code&gt; を呼び出すと &lt;code&gt;null&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="2e13ea0869aa760283f12c739f8509092142ed60" translate="yes" xml:space="preserve">
          <source>If an error occurs synchronously in &lt;code&gt;body&lt;/code&gt;, then throwing in the &lt;code&gt;onError&lt;/code&gt; handler makes the call to &lt;code&gt;runZone&lt;/code&gt; throw that error, and otherwise the call to &lt;code&gt;runZoned&lt;/code&gt; returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;body&lt;/code&gt; で同期的にエラーが発生した場合、 &lt;code&gt;onError&lt;/code&gt; ハンドラーをスローすると、 &lt;code&gt;runZone&lt;/code&gt; の呼び出しでそのエラーがスローされます。それ以外の場合は、 &lt;code&gt;runZoned&lt;/code&gt; の呼び出しで &lt;code&gt;null&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="7f3560dee59b31a3ee413241a3df9a08349484e4" translate="yes" xml:space="preserve">
          <source>If an error occurs synchronously in &lt;code&gt;body&lt;/code&gt;, then throwing in the &lt;code&gt;onError&lt;/code&gt; handler makes the call to &lt;code&gt;runZonedGuarded&lt;/code&gt; throw that error, and otherwise the call to &lt;code&gt;runZonedGuarded&lt;/code&gt; returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;body&lt;/code&gt; でエラーが同期的に発生した場合、 &lt;code&gt;onError&lt;/code&gt; ハンドラーをスローすると、 &lt;code&gt;runZonedGuarded&lt;/code&gt; が呼び出されてそのエラーがスローされます。それ以外の場合、 &lt;code&gt;runZonedGuarded&lt;/code&gt; を呼び出すと &lt;code&gt;null&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="46d0fbd9bd215f5baf521270d33a58b2f306d133" translate="yes" xml:space="preserve">
          <source>If an error occurs, or if this stream ends without finding a match and with no &lt;code&gt;orElse&lt;/code&gt; function provided, the returned future is completed with an error.</source>
          <target state="translated">エラーが発生した場合、または一致が見つからず、 &lt;code&gt;orElse&lt;/code&gt; 関数が提供されていない状態でこのストリームが終了した場合、返されたfutureはエラーで完了します。</target>
        </trans-unit>
        <trans-unit id="e404669c17737d1621864e3ed1172e2559413cb2" translate="yes" xml:space="preserve">
          <source>If an event is added in a setting that isn't known to be another event, it may cause the stream's listener to get that event before the listener is ready to handle it. We promise that after calling &lt;a href=&quot;stream/listen&quot;&gt;Stream.listen&lt;/a&gt;, you won't get any events until the code doing the listen has completed. Calling &lt;a href=&quot;synchronousstreamcontroller/add&quot;&gt;add&lt;/a&gt; in response to a function call of unknown origin may break that promise.</source>
          <target state="translated">別のイベントとして認識されていない設定でイベントが追加された場合、リスナーがイベントを処理する準備ができる前に、ストリームのリスナーがそのイベントを取得する可能性があります。&lt;a href=&quot;stream/listen&quot;&gt;Stream.listen&lt;/a&gt;を呼び出した後は、listenを実行するコードが完了するまでイベントを取得しないことを約束します。呼び出し&lt;a href=&quot;synchronousstreamcontroller/add&quot;&gt;アドオンを&lt;/a&gt;原因不明の関数呼び出しに応じてしても、その約束を破ることがあります。</target>
        </trans-unit>
        <trans-unit id="a2ce3428b2df968a9f93c1904df61db82dc3c904" translate="yes" xml:space="preserve">
          <source>If an exception is thrown while calling &lt;code&gt;f()&lt;/code&gt;, the native function will return &lt;code&gt;exceptionalReturn&lt;/code&gt;, which must be assignable to return type of &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;f()&lt;/code&gt; の呼び出し中に例外がスローされた場合、ネイティブ関数は &lt;code&gt;exceptionalReturn&lt;/code&gt; を返します。これは、 &lt;code&gt;f&lt;/code&gt; の戻り値の型に割り当て可能である必要があります。</target>
        </trans-unit>
        <trans-unit id="e19f510f53abbe430d4dd7bc9b1f89ce2cf94a00" translate="yes" xml:space="preserve">
          <source>If an instance of a class specified in &lt;a href=&quot;metatargets&quot;&gt;metaTargets&lt;/a&gt; is used as metadata annotation on a library, class, field or method, that library, class, field or method is added to the set of targets for reflection.</source>
          <target state="translated">&lt;a href=&quot;metatargets&quot;&gt;metaTargets&lt;/a&gt;で指定されたクラスのインスタンスがライブラリ、クラス、フィールド、またはメソッドのメタデータアノテーションとして使用される場合、そのライブラリ、クラス、フィールド、またはメソッドがリフレクションのターゲットのセットに追加されます。</target>
        </trans-unit>
        <trans-unit id="08037e1e4e4f435abc8c63d75d5a41a4797b0c2f" translate="yes" xml:space="preserve">
          <source>If an isolate is paused more than once using the same capability, only one resume with that capability is needed to end the pause.</source>
          <target state="translated">アイソレートが同じケイパビリティを使用して複数回一時停止された場合、一時停止を終了するには、そのケイパビリティを使用した1回のレジュームのみが必要です。</target>
        </trans-unit>
        <trans-unit id="16ff14744dd32ef83e0107b19d2da5a4019c18e9" translate="yes" xml:space="preserve">
          <source>If an isolate is paused using more than one capability, each pause must be individually ended before the isolate resumes.</source>
          <target state="translated">複数のケイパビリティを使用してアイソレートを一時停止する場合、アイソレートを再開する前に各一時停止を個別に終了させなければなりません。</target>
        </trans-unit>
        <trans-unit id="0bf5a403adec2f5a7a771baf54eea8d678d64212" translate="yes" xml:space="preserve">
          <source>If an object equal to &lt;code&gt;object&lt;/code&gt; is in the set, return it.</source>
          <target state="translated">オブジェクトに等しい &lt;code&gt;object&lt;/code&gt; がセット内にある場合は、それを返します。</target>
        </trans-unit>
        <trans-unit id="da786e5d5468c7e4fb77c6f680a72584915fb63f" translate="yes" xml:space="preserve">
          <source>If an object equal to &lt;code&gt;object&lt;/code&gt; is in the set, return it. &lt;a href=&quot;../dart-core/set/lookup&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">オブジェクトに等しい &lt;code&gt;object&lt;/code&gt; がセット内にある場合は、それを返します。&lt;a href=&quot;../dart-core/set/lookup&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3b093e104e80b947933483d302645403d615768e" translate="yes" xml:space="preserve">
          <source>If an object equal to &lt;code&gt;object&lt;/code&gt; is in the set, return it. &lt;a href=&quot;set/lookup&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">オブジェクトに等しい &lt;code&gt;object&lt;/code&gt; がセット内にある場合は、それを返します。&lt;a href=&quot;set/lookup&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0aec63e35577a5fca3972acee58534fc4dfe14b7" translate="yes" xml:space="preserve">
          <source>If an object equal to &lt;code&gt;object&lt;/code&gt; is in the set, return it. &lt;a href=&quot;setmixin/lookup&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">オブジェクトに等しい &lt;code&gt;object&lt;/code&gt; がセット内にある場合は、それを返します。&lt;a href=&quot;setmixin/lookup&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1ccd13a98a45b8439406e491724290c242afdfec" translate="yes" xml:space="preserve">
          <source>If an object equal to &lt;code&gt;object&lt;/code&gt; is in the set, return it. &lt;a href=&quot;splaytreeset/lookup&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">オブジェクトに等しい &lt;code&gt;object&lt;/code&gt; がセット内にある場合は、それを返します。&lt;a href=&quot;splaytreeset/lookup&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6b8d3ad5314fc38d55cd685517b680ebbe3813c6" translate="yes" xml:space="preserve">
          <source>If an object is serialized more than once, &lt;a href=&quot;convert&quot;&gt;convert&lt;/a&gt; may cache the text for it. In other words, if the content of an object changes after it is first serialized, the new values may not be reflected in the result.</source>
          <target state="translated">オブジェクトが複数回シリアル化されている場合、&lt;a href=&quot;convert&quot;&gt;convert&lt;/a&gt;はそのテキストをキャッシュすることがあります。つまり、オブジェクトが最初にシリアル化された後でコンテンツが変更された場合、新しい値が結果に反映されない可能性があります。</target>
        </trans-unit>
        <trans-unit id="bea05a1180ff8a1d8f8ea68bec2cecb22cb4be4c" translate="yes" xml:space="preserve">
          <source>If an object isn't directly serializable, the serializer calls the &lt;code&gt;toJson&lt;/code&gt; method on the object. If that call fails, the error will be stored in the &lt;a href=&quot;jsonunsupportedobjecterror/cause&quot;&gt;cause&lt;/a&gt; field. If the call returns an object that isn't directly serializable, the &lt;a href=&quot;jsonunsupportedobjecterror/cause&quot;&gt;cause&lt;/a&gt; is null.</source>
          <target state="translated">オブジェクトが直接シリアライズ可能でない場合、シリアライザはオブジェクトの &lt;code&gt;toJson&lt;/code&gt; メソッドを呼び出します。その呼び出しが失敗した場合、エラーは&lt;a href=&quot;jsonunsupportedobjecterror/cause&quot;&gt;原因&lt;/a&gt;フィールドに格納されます。呼び出しが直接シリアル化できないオブジェクトを返す場合、&lt;a href=&quot;jsonunsupportedobjecterror/cause&quot;&gt;原因&lt;/a&gt;はnullです。</target>
        </trans-unit>
        <trans-unit id="bf51f3799572942b937c1ed27188cc04181484f9" translate="yes" xml:space="preserve">
          <source>If any future completes with an error, then the returned future completes with that error. If further futures also complete with errors, those errors are discarded.</source>
          <target state="translated">いずれかの未来がエラーで完了した場合、返された未来はそのエラーで完了します。それ以上の未来もエラーで完了した場合、それらのエラーは破棄されます。</target>
        </trans-unit>
        <trans-unit id="d30968dc7357088aedd8c91ddfe1c7a1ab378344" translate="yes" xml:space="preserve">
          <source>If any of &lt;code&gt;userInfo&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt; or &lt;code&gt;port&lt;/code&gt; are provided, the URI has an authority according to &lt;a href=&quot;hasauthority&quot;&gt;hasAuthority&lt;/a&gt;.</source>
          <target state="translated">いずれかの場合 &lt;code&gt;userInfo&lt;/code&gt; 、 &lt;code&gt;host&lt;/code&gt; または &lt;code&gt;port&lt;/code&gt; 提供され、URIはに応じて権限を有している&lt;a href=&quot;hasauthority&quot;&gt;hasAuthority&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d5795c71cdaf0ef604f73316e9ba009f950f8772" translate="yes" xml:space="preserve">
          <source>If any of the domain policies match &lt;code&gt;host&lt;/code&gt;, the matching policy will make the decision. If multiple policies apply, the top matching policy makes the decision. If none of the domain policies match, the embedder default is used.</source>
          <target state="translated">ドメインポリシーのいずれかが &lt;code&gt;host&lt;/code&gt; と一致する場合、一致するポリシーが決定を下します。複数のポリシーが適用される場合、最も一致するポリシーが決定を下します。どのドメインポリシーも一致しない場合は、埋め込みのデフォルトが使用されます。</target>
        </trans-unit>
        <trans-unit id="31a7b86fbd7ddef447d22b2d6c748aa2676ece35" translate="yes" xml:space="preserve">
          <source>If any of these are passed in the &lt;code&gt;headers&lt;/code&gt; map they will be ignored.</source>
          <target state="translated">これらのいずれかが &lt;code&gt;headers&lt;/code&gt; マップで渡された場合、それらは無視されます。</target>
        </trans-unit>
        <trans-unit id="a41c9b66d762b8a937bf20c01d106134a7b5d258" translate="yes" xml:space="preserve">
          <source>If at end of file, -1 is returned.</source>
          <target state="translated">ファイルの末尾にある場合は-1を返す。</target>
        </trans-unit>
        <trans-unit id="6ccbfc5c8b541d7772fef50cc52d6bd1ecb0b6a3" translate="yes" xml:space="preserve">
          <source>If attributeFilter is specified then attributes must be true.</source>
          <target state="translated">attributeFilterが指定されている場合、属性はtrueでなければなりません。</target>
        </trans-unit>
        <trans-unit id="c2587b011279aa13991a26ec11a3861017b35ddb" translate="yes" xml:space="preserve">
          <source>If attributeOldValue is true then attributes must also be true.</source>
          <target state="translated">attributeOldValueが真であれば、属性も真でなければなりません。</target>
        </trans-unit>
        <trans-unit id="f73b5bbbdfd6bb717c982e3311937cf3349a180a" translate="yes" xml:space="preserve">
          <source>If both &lt;code&gt;query&lt;/code&gt; and &lt;code&gt;queryParameters&lt;/code&gt; are omitted or &lt;code&gt;null&lt;/code&gt;, the URI has no query part.</source>
          <target state="translated">&lt;code&gt;query&lt;/code&gt; と &lt;code&gt;queryParameters&lt;/code&gt; の両方が省略されているか &lt;code&gt;null&lt;/code&gt; の場合、URIにはクエリ部分がありません。</target>
        </trans-unit>
        <trans-unit id="734c9c951c2a3714752c18fed25d14d0d7f41c2c" translate="yes" xml:space="preserve">
          <source>If both &lt;code&gt;this&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt; is zero, the result is also zero.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; と &lt;code&gt;other&lt;/code&gt; 両方がゼロの場合、結果もゼロになります。</target>
        </trans-unit>
        <trans-unit id="1fca44623751d2d1149c71a5513c88d41eb23cc1" translate="yes" xml:space="preserve">
          <source>If both operands are &lt;a href=&quot;../int-class&quot;&gt;int&lt;/a&gt;s then &lt;code&gt;a ~/ b&lt;/code&gt; performs the truncating integer division.</source>
          <target state="translated">両方のオペランドが&lt;a href=&quot;../int-class&quot;&gt;int&lt;/a&gt;の場合、a〜 &lt;code&gt;a ~/ b&lt;/code&gt; は切り捨て整数除算を実行します。</target>
        </trans-unit>
        <trans-unit id="abdf3ebd95a748eedfcd193332a2486f396f0edc" translate="yes" xml:space="preserve">
          <source>If both operands are doubles, they are equal if they have the same representation, except that:</source>
          <target state="translated">両方のオペランドが二重になっている場合、それを除いて同じ表現であれば等しくなります。</target>
        </trans-unit>
        <trans-unit id="a9b4e50467608b3ec5cae8b4b1ee373b139c77a8" translate="yes" xml:space="preserve">
          <source>If both operands are integers, they are equal if they have the same value.</source>
          <target state="translated">両方のオペランドが整数の場合、同じ値を持つ場合は等しくなります。</target>
        </trans-unit>
        <trans-unit id="80ad65c371340ac7b922f8d6c04eaed1d435236a" translate="yes" xml:space="preserve">
          <source>If both operands are negative, the result is negative, otherwise the result is non-negative.</source>
          <target state="translated">両方のオペランドが負の場合、結果は負であり、そうでない場合は非負です。</target>
        </trans-unit>
        <trans-unit id="a53d45524270e80d7395b94b67f289dd638397b4" translate="yes" xml:space="preserve">
          <source>If both operands are non-negative, the result is non-negative, otherwise the result is negative.</source>
          <target state="translated">両方のオペランドが非負であれば、結果は非負であり、そうでなければ結果は負です。</target>
        </trans-unit>
        <trans-unit id="b8ad358a032e96bcca43a8684f328c60734493c2" translate="yes" xml:space="preserve">
          <source>If both operands are non-negative, the result is non-negative, otherwise the result us negative.</source>
          <target state="translated">両方のオペランドが非負であれば、結果は非負であり、そうでなければ結果は負です。</target>
        </trans-unit>
        <trans-unit id="eda29f22e9e16a7897fb5288fd4ed26d601ab8b6" translate="yes" xml:space="preserve">
          <source>If calling &lt;a href=&quot;../../dart-core/iterator/movenext&quot;&gt;Iterator.moveNext&lt;/a&gt; on &lt;code&gt;elements.iterator&lt;/code&gt; throws, the stream emits that error and then it closes. If reading &lt;a href=&quot;../../dart-core/iterator/current&quot;&gt;Iterator.current&lt;/a&gt; on &lt;code&gt;elements.iterator&lt;/code&gt; throws, the stream emits that error, but keeps iterating.</source>
          <target state="translated">&lt;code&gt;elements.iterator&lt;/code&gt; で&lt;a href=&quot;../../dart-core/iterator/movenext&quot;&gt;Iterator.moveNext&lt;/a&gt;を呼び出すと、ストリームがそのエラーを発行して閉じます。 &lt;code&gt;elements.iterator&lt;/code&gt; で&lt;a href=&quot;../../dart-core/iterator/current&quot;&gt;Iterator.current&lt;/a&gt;を読み取ると、スローすると、ストリームはそのエラーを発行しますが、繰り返し続けます。</target>
        </trans-unit>
        <trans-unit id="cde68b82b66b78c1ba0e73e43f2c020990d2095a" translate="yes" xml:space="preserve">
          <source>If calling &lt;code&gt;computation&lt;/code&gt; returns a &lt;a href=&quot;../future-class&quot;&gt;Future&lt;/a&gt;, completion of the created future will wait until the returned future completes, and will then complete with the same result.</source>
          <target state="translated">呼び出しの &lt;code&gt;computation&lt;/code&gt; が&lt;a href=&quot;../future-class&quot;&gt;Futureを&lt;/a&gt;返す場合、作成されたfutureの完了は、返されたfutureが完了するまで待機し、その後同じ結果で完了します。</target>
        </trans-unit>
        <trans-unit id="6e1457b98c400ee283b788859f70eefc42cca912" translate="yes" xml:space="preserve">
          <source>If calling &lt;code&gt;computation&lt;/code&gt; returns a &lt;code&gt;Future&amp;lt;T&amp;gt;&lt;/code&gt;, that future is returned.</source>
          <target state="translated">呼び出しの &lt;code&gt;computation&lt;/code&gt; が &lt;code&gt;Future&amp;lt;T&amp;gt;&lt;/code&gt; 返す場合、そのフューチャーが返されます。</target>
        </trans-unit>
        <trans-unit id="4fdcf6284a6c6dcb0bbd12b72a1a3b1ff011e156" translate="yes" xml:space="preserve">
          <source>If calling &lt;code&gt;computation&lt;/code&gt; returns a non-future value, a future is returned which has been completed with that value.</source>
          <target state="translated">&lt;code&gt;computation&lt;/code&gt; 呼び出すと将来の値が返されない場合、その値で完了したフューチャーが返されます。</target>
        </trans-unit>
        <trans-unit id="7213442183aeb918d71480ab56cc45cb52e7f281" translate="yes" xml:space="preserve">
          <source>If calling &lt;code&gt;computation&lt;/code&gt; returns a non-future value, the returned future is completed with that value.</source>
          <target state="translated">呼び出しの &lt;code&gt;computation&lt;/code&gt; が将来の値以外を返す場合、返されたフューチャーはその値で完了します。</target>
        </trans-unit>
        <trans-unit id="87b2f31b5c0be8cab14d78600769fa495fce92e9" translate="yes" xml:space="preserve">
          <source>If calling &lt;code&gt;computation&lt;/code&gt; throws, the created future will complete with the error.</source>
          <target state="translated">呼び出し &lt;code&gt;computation&lt;/code&gt; スローする場合、作成されたフューチャーはエラーで完了します。</target>
        </trans-unit>
        <trans-unit id="a4b2eb34bf0455deab39f3a941df9b0a5699d617" translate="yes" xml:space="preserve">
          <source>If calling &lt;code&gt;computation&lt;/code&gt; throws, the returned future is completed with the error.</source>
          <target state="translated">呼び出し &lt;code&gt;computation&lt;/code&gt; スローすると、返されたフューチャーはエラーで完了します。</target>
        </trans-unit>
        <trans-unit id="1fffdd901cef1aede38cf3043c360dfca27451f4" translate="yes" xml:space="preserve">
          <source>If character set is not supported &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">文字セットがサポートされていない場合は、 &lt;code&gt;null&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="3629d90a73ecaacaa27aa2be741183cc17f54fe4" translate="yes" xml:space="preserve">
          <source>If characterDataOldValue is true then characterData must be true.</source>
          <target state="translated">characterDataOldValueがtrueの場合、characterDataはtrueでなければなりません。</target>
        </trans-unit>
        <trans-unit id="3a07ca2f8629061ec85676329659bf5aee02fb93" translate="yes" xml:space="preserve">
          <source>If data comes in as bytes, they can be converted to &lt;code&gt;ByteData&lt;/code&gt; by sharing the same buffer.</source>
          <target state="translated">データがバイトとして入ってくる場合、同じバッファを共有することでそれらを &lt;code&gt;ByteData&lt;/code&gt; に変換できます。</target>
        </trans-unit>
        <trans-unit id="7d31a444e50e1b291d840c2bfc07eaf510793e0d" translate="yes" xml:space="preserve">
          <source>If disabled, input from to console will not be echoed.</source>
          <target state="translated">無効にした場合、コンソールへの入力はエコーされません。</target>
        </trans-unit>
        <trans-unit id="382eb33890106c811295975b541f1c74fdb3885c" translate="yes" xml:space="preserve">
          <source>If either number is non-zero, the result is the numerically greatest integer dividing both &lt;code&gt;this&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;.</source>
          <target state="translated">いずれかの数値がゼロ以外の場合、結果は &lt;code&gt;this&lt;/code&gt; と &lt;code&gt;other&lt;/code&gt; の両方を除算した数値的に最大の整数になります。</target>
        </trans-unit>
        <trans-unit id="d67f55ed29c9de27fe97856b75a8923601e08375" translate="yes" xml:space="preserve">
          <source>If either operand is a &lt;a href=&quot;../double-class&quot;&gt;double&lt;/a&gt; then the result of the truncating division &lt;code&gt;a ~/ b&lt;/code&gt; is equivalent to &lt;code&gt;(a / b).truncate().toInt()&lt;/code&gt;.</source>
          <target state="translated">一方のオペランドである場合&lt;a href=&quot;../double-class&quot;&gt;、二重&lt;/a&gt;切り捨て除算のその結果 &lt;code&gt;a ~/ b&lt;/code&gt; と同等である &lt;code&gt;(a / b).truncate().toInt()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="24e5f6edd7c45b437566f1152f7ed578c180797f" translate="yes" xml:space="preserve">
          <source>If enabled, characters are delayed until a new-line character is entered. If disabled, characters will be available as typed.</source>
          <target state="translated">有効にすると、改行文字が入力されるまで文字が遅延します。無効にすると、文字は入力された通りに利用可能になります。</target>
        </trans-unit>
        <trans-unit id="28fd8b57db06cb3fea8f09df3a5022ffd6922863" translate="yes" xml:space="preserve">
          <source>If end-of-file is reached after any bytes have been read from stdin, that data is returned without a line terminator. Returns &lt;code&gt;null&lt;/code&gt; if no bytes preceded the end of input.</source>
          <target state="translated">stdinからバイトが読み取られた後でファイルの終わりに達した場合、そのデータは行末記号なしで返されます。入力の終わりの前にバイトがない場合は、 &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="42d7fc3ac9f4bbcefa4c122e752ba48e4f71a2f6" translate="yes" xml:space="preserve">
          <source>If errors are fatal, any uncaught error will terminate the isolate event loop and shut down the isolate.</source>
          <target state="translated">エラーが致命的な場合、捕捉できなかったエラーはisolateイベントループを終了し、isolateをシャットダウンします。</target>
        </trans-unit>
        <trans-unit id="3c816d0eafdc3b3ba1bd8b8a9afee60ab2bad5db" translate="yes" xml:space="preserve">
          <source>If evaluating any of &lt;em&gt;c1, ..., cn&lt;/em&gt; would cause a compilation error the effect is the same as if a non-reflective compilation error had been encountered.</source>
          <target state="translated">&lt;em&gt;c1、...、cnの&lt;/em&gt;いずれかを評価するとコンパイルエラーが発生する場合、その効果は非反射コンパイルエラーが発生した場合と同じです。</target>
        </trans-unit>
        <trans-unit id="2deb93a9ac2dd4b9c226e36c4518de820f9faa16" translate="yes" xml:space="preserve">
          <source>If evaluating the expression causes a compilation error, the effect is the same as if a non-reflective compilation error had been encountered.</source>
          <target state="translated">式を評価することでコンパイルエラーが発生した場合、反射的ではないコンパイルエラーが発生した場合と同じ効果が得られます。</target>
        </trans-unit>
        <trans-unit id="d5bff3731f3661a3ff04e6e76221ab806055ed52" translate="yes" xml:space="preserve">
          <source>If evaluating the expression throws an exception &lt;em&gt;e&lt;/em&gt; (that it does not catch), this method throws &lt;em&gt;e&lt;/em&gt;.</source>
          <target state="translated">式を評価すると例外&lt;em&gt;e&lt;/em&gt;（スローされない）がスローされる場合、このメソッドは&lt;em&gt;eを&lt;/em&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="b2397f23d11145f0cbcd6ab61e884c549ef09566" translate="yes" xml:space="preserve">
          <source>If executing &lt;code&gt;computation&lt;/code&gt; throws, the returned future is completed with the thrown error.</source>
          <target state="translated">&lt;code&gt;computation&lt;/code&gt; スローを実行すると、返されたフューチャーはスローされたエラーで完了します。</target>
        </trans-unit>
        <trans-unit id="5be1e8659520d8c6672c4e7b62fcf70fb8991f4f" translate="yes" xml:space="preserve">
          <source>If input is a string, the &lt;a href=&quot;tostring&quot;&gt;toString&lt;/a&gt; method may represent this offset as a line and character position. The offset should be inside the string, or at the end of the string.</source>
          <target state="translated">入力が文字列の場合、&lt;a href=&quot;tostring&quot;&gt;toString&lt;/a&gt;メソッドはこのオフセットを行と文字の位置として表すことができます。オフセットは、文字列の内部または文字列の最後にある必要があります。</target>
        </trans-unit>
        <trans-unit id="095a95416ae1f9297f8ca38f7876ecaa246f56c1" translate="yes" xml:space="preserve">
          <source>If it is &lt;code&gt;true&lt;/code&gt; (and not overridden at the method invocation) &lt;a href=&quot;decode&quot;&gt;decode&lt;/a&gt; and the &lt;a href=&quot;decoder&quot;&gt;decoder&lt;/a&gt; replace invalid (or unterminated) octet sequences with the Unicode Replacement character &lt;code&gt;U+FFFD&lt;/code&gt; (�). Otherwise they throw a &lt;a href=&quot;../../dart-core/formatexception-class&quot;&gt;FormatException&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; の場合（メソッドの呼び出し時にオーバーライドされない場合）、&lt;a href=&quot;decode&quot;&gt;デコード&lt;/a&gt;と&lt;a href=&quot;decoder&quot;&gt;デコーダーは&lt;/a&gt;、無効な（または終了していない）オクテットシーケンスをUnicode置換文字 &lt;code&gt;U+FFFD&lt;/code&gt; （）に置き換えます。それ以外の場合は、&lt;a href=&quot;../../dart-core/formatexception-class&quot;&gt;FormatException&lt;/a&gt;をスローします。</target>
        </trans-unit>
        <trans-unit id="d5adbf48e5175318e41f1587de394e766d37f8bf" translate="yes" xml:space="preserve">
          <source>If it is &lt;code&gt;true&lt;/code&gt;, &lt;a href=&quot;convert&quot;&gt;convert&lt;/a&gt; replaces invalid bytes with the Unicode Replacement character &lt;code&gt;U+FFFD&lt;/code&gt; (�). Otherwise it throws a &lt;a href=&quot;../../dart-core/formatexception-class&quot;&gt;FormatException&lt;/a&gt;.</source>
          <target state="translated">もしそうであれば &lt;code&gt;true&lt;/code&gt; 、&lt;a href=&quot;convert&quot;&gt;変換は&lt;/a&gt; Unicodeの置換文字に無効なバイトを置き換え &lt;code&gt;U+FFFD&lt;/code&gt; （）。それ以外の場合は、&lt;a href=&quot;../../dart-core/formatexception-class&quot;&gt;FormatExceptionを&lt;/a&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="33fac95623d997fae12f9c017c9819536f81e052" translate="yes" xml:space="preserve">
          <source>If it is &lt;code&gt;true&lt;/code&gt;&lt;a href=&quot;convert&quot;&gt;convert&lt;/a&gt; replaces invalid (or unterminated) character sequences with the Unicode Replacement character &lt;code&gt;U+FFFD&lt;/code&gt; (�). Otherwise it throws a &lt;a href=&quot;../../dart-core/formatexception-class&quot;&gt;FormatException&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; の場合、&lt;a href=&quot;convert&quot;&gt;convert&lt;/a&gt;は無効な（または終了しない）文字シーケンスをUnicode置換文字 &lt;code&gt;U+FFFD&lt;/code&gt; （）に置き換えます。それ以外の場合は、&lt;a href=&quot;../../dart-core/formatexception-class&quot;&gt;FormatExceptionを&lt;/a&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="8169e731b364dd289084efad1b2c943c25104031" translate="yes" xml:space="preserve">
          <source>If it is known that the remote server requires authentication for all requests, it is advisable to use &lt;a href=&quot;addcredentials&quot;&gt;addCredentials&lt;/a&gt; directly, or manually set the &lt;code&gt;'authorization'&lt;/code&gt; header on the request to avoid the overhead of a failed request, or issues due to missing request payload on retried request.</source>
          <target state="translated">リモートサーバーがすべてのリクエストに対して認証を必要とすることがわかっている場合は、&lt;a href=&quot;addcredentials&quot;&gt;addCredentialsを&lt;/a&gt;直接使用するか、リクエストに &lt;code&gt;'authorization'&lt;/code&gt; ヘッダーを手動で設定して、失敗したリクエストのオーバーヘッドやリクエストペイロードの欠落による問題を回避することをお勧めしますリクエストを再試行しました。</target>
        </trans-unit>
        <trans-unit id="8c11f3348fbb19baf0e7dc64413ffe0a49b6a85c" translate="yes" xml:space="preserve">
          <source>If multiple &lt;code&gt;entries&lt;/code&gt; have the same key, later occurrences overwrite the earlier ones.</source>
          <target state="translated">複数の &lt;code&gt;entries&lt;/code&gt; が同じキーを持っている場合、後で発生すると、前のエントリが上書きされます。</target>
        </trans-unit>
        <trans-unit id="7de01bc9ad819e29c449397685bb349e17da04cc" translate="yes" xml:space="preserve">
          <source>If neither &lt;code&gt;equals&lt;/code&gt;, &lt;code&gt;hashCode&lt;/code&gt;, nor &lt;code&gt;isValidKey&lt;/code&gt; is provided, the default &lt;code&gt;isValidKey&lt;/code&gt; instead accepts all keys. The default equality and hashcode operations are assumed to work on all objects.</source>
          <target state="translated">&lt;code&gt;equals&lt;/code&gt; 、 &lt;code&gt;hashCode&lt;/code&gt; 、 &lt;code&gt;isValidKey&lt;/code&gt; のいずれも指定されていない場合、デフォルトの &lt;code&gt;isValidKey&lt;/code&gt; は代わりにすべてのキーを受け入れます。デフォルトの等価操作とハッシュコード操作は、すべてのオブジェクトで機能すると想定されています。</target>
        </trans-unit>
        <trans-unit id="95a3fa5071f6162ee724b4d885447ba0dd0b0df8" translate="yes" xml:space="preserve">
          <source>If neither &lt;code&gt;equals&lt;/code&gt;, &lt;code&gt;hashCode&lt;/code&gt;, nor &lt;code&gt;isValidKey&lt;/code&gt; is provided, the default &lt;code&gt;isValidKey&lt;/code&gt; instead accepts all values. The default equality and hashcode operations are assumed to work on all objects.</source>
          <target state="translated">&lt;code&gt;equals&lt;/code&gt; 、 &lt;code&gt;hashCode&lt;/code&gt; 、 &lt;code&gt;isValidKey&lt;/code&gt; のいずれも指定されていない場合、デフォルトの &lt;code&gt;isValidKey&lt;/code&gt; は代わりにすべての値を受け入れます。デフォルトの等価操作とハッシュコード操作は、すべてのオブジェクトで機能すると想定されています。</target>
        </trans-unit>
        <trans-unit id="a7122fbc04b4040def169fc67896b585b3c497a9" translate="yes" xml:space="preserve">
          <source>If newPath identifies an existing directory, that directory is replaced. If newPath identifies an existing file the operation fails and an exception is thrown.</source>
          <target state="translated">newPath が既存のディレクトリを特定した場合は、そのディレクトリを置換します。newPath が既存のファイルを識別した場合、操作は失敗し、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="c8034979fb74fefab5b38858eebf9baab2ba3cc4" translate="yes" xml:space="preserve">
          <source>If newPath identifies an existing directory, that directory is replaced. If newPath identifies an existing file, the operation fails and the future completes with an exception.</source>
          <target state="translated">newPath が既存のディレクトリを識別した場合は、そのディレクトリが置換されます。newPath が既存のファイルを識別した場合、操作は失敗し、例外を除いて将来は完了します。</target>
        </trans-unit>
        <trans-unit id="c4215676feb28ddda52a57fb2f83f9605c762bf8" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;onError&lt;/code&gt; is supplied, it defaults to a function that throws a &lt;a href=&quot;../formatexception-class&quot;&gt;FormatException&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;onError&lt;/code&gt; が指定されていない場合、デフォルトで&lt;a href=&quot;../formatexception-class&quot;&gt;FormatException&lt;/a&gt;をスローする関数になります。</target>
        </trans-unit>
        <trans-unit id="8ee06e89272cc185d825245a19a970a66c6df977" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;radix&lt;/code&gt; is given then it defaults to 10. In this case, the &lt;code&gt;source&lt;/code&gt; digits may also start with &lt;code&gt;0x&lt;/code&gt;, in which case the number is interpreted as a hexadecimal integer literal, When &lt;code&gt;int&lt;/code&gt; is implemented by 64-bit signed integers, hexadecimal integer literals may represent values larger than 2&lt;sup&gt;63&lt;/sup&gt;, in which case the value is parsed as if it is an &lt;em&gt;unsigned&lt;/em&gt; number, and the resulting value is the corresponding signed integer value.</source>
          <target state="translated">&lt;code&gt;radix&lt;/code&gt; が指定されていない場合、デフォルトは10です。この場合、 &lt;code&gt;source&lt;/code&gt; 数字も &lt;code&gt;0x&lt;/code&gt; で始まることがあります。この場合、数値は16進整数リテラルとして解釈されます &lt;code&gt;int&lt;/code&gt; が64ビット符号付き整数で実装されている場合、16進整数リテラルは2 &lt;sup&gt;63&lt;/sup&gt;より大きい値を表す場合があります。その場合、値は&lt;em&gt;符号なしの&lt;/em&gt;数値であるかのように解析され、結果の値は対応する符号付き整数値になります。</target>
        </trans-unit>
        <trans-unit id="1070ad12b669f7c131790a3ed3b9b7fc7a474c7d" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;radix&lt;/code&gt; is given then it defaults to 10. In this case, the &lt;code&gt;source&lt;/code&gt; digits may also start with &lt;code&gt;0x&lt;/code&gt;, in which case the number is interpreted as a hexadecimal literal, which effectively means that the &lt;code&gt;0x&lt;/code&gt; is ignored and the radix is instead set to 16.</source>
          <target state="translated">&lt;code&gt;radix&lt;/code&gt; が指定されていない場合、デフォルトは10です。この場合、 &lt;code&gt;source&lt;/code&gt; 数字も &lt;code&gt;0x&lt;/code&gt; で始まる場合があります。この場合、数値は16進リテラルとして解釈されます。これは、実質的に &lt;code&gt;0x&lt;/code&gt; が無視され、基数が代わりに設定されることを意味します16に。</target>
        </trans-unit>
        <trans-unit id="87f0b670b59624ead1d50623b8c19cbcb2029c48" translate="yes" xml:space="preserve">
          <source>If no charset is provided the default of ISO-8859-1 (Latin 1) is be used.</source>
          <target state="translated">文字セットが指定されていない場合は、デフォルトのISO-8859-1 (Latin 1)が使用されます。</target>
        </trans-unit>
        <trans-unit id="974f363331aaf46c5b50b243925583924e92be4c" translate="yes" xml:space="preserve">
          <source>If no charset is provided the default of ISO-8859-1 (Latin 1) will be used.</source>
          <target state="translated">文字セットが指定されていない場合は、デフォルトの ISO-8859-1 (Latin 1)が使用されます。</target>
        </trans-unit>
        <trans-unit id="f97defea6fa0146a468a7534d9b3fb0f9f28f749" translate="yes" xml:space="preserve">
          <source>If no element satisfies &lt;code&gt;test&lt;/code&gt;, the result of invoking the &lt;code&gt;orElse&lt;/code&gt; function is returned. If &lt;code&gt;orElse&lt;/code&gt; is omitted, it defaults to throwing a &lt;a href=&quot;../../dart-core/stateerror-class&quot;&gt;StateError&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; を満たす要素がない場合は、 &lt;code&gt;orElse&lt;/code&gt; 関数を呼び出した結果が返されます。場合 &lt;code&gt;orElse&lt;/code&gt; は投げがデフォルト省略され&lt;a href=&quot;../../dart-core/stateerror-class&quot;&gt;StateErrorを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="04e09cfc74493e3e2a1161d070a6a0b65456d0e1" translate="yes" xml:space="preserve">
          <source>If no element satisfies &lt;code&gt;test&lt;/code&gt;, the result of invoking the &lt;code&gt;orElse&lt;/code&gt; function is returned. If &lt;code&gt;orElse&lt;/code&gt; is omitted, it defaults to throwing a &lt;a href=&quot;../stateerror-class&quot;&gt;StateError&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; を満たす要素がない場合は、 &lt;code&gt;orElse&lt;/code&gt; 関数を呼び出した結果が返されます。場合 &lt;code&gt;orElse&lt;/code&gt; は投げがデフォルト省略され&lt;a href=&quot;../stateerror-class&quot;&gt;StateErrorを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2ea4a58d4e9186a779c28d5fc69ca0bbe2fb3a61" translate="yes" xml:space="preserve">
          <source>If no functions are specified for &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; the default is to use the iterable value itself.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; と &lt;code&gt;value&lt;/code&gt; 関数が指定されていない場合、デフォルトでは反復可能な値自体が使用されます。</target>
        </trans-unit>
        <trans-unit id="b6c40a4baf9ba02119788d267a1673d6f3de012e" translate="yes" xml:space="preserve">
          <source>If no options are specified then this will attempt to scroll the minimum amount needed to bring the element into view.</source>
          <target state="translated">オプションが指定されていない場合は、要素を表示するのに必要な最小限のスクロールを試みます。</target>
        </trans-unit>
        <trans-unit id="a34bfd5d1733819c19b2b2f032358d283849a772" translate="yes" xml:space="preserve">
          <source>If no padding exists, add correct padding if necessary and possible.</source>
          <target state="translated">パディングがない場合は、必要に応じて正しいパディングを追加します。</target>
        </trans-unit>
        <trans-unit id="62a83b57e95c7bb976155bc7d6c3cd79e02fa414" translate="yes" xml:space="preserve">
          <source>If no reason phrase is explicitly set, a default reason phrase is provided.</source>
          <target state="translated">理由フレーズが明示的に設定されていない場合は、デフォルトの理由フレーズが提供されます。</target>
        </trans-unit>
        <trans-unit id="ec19753b4c05a2ff71d930b3b96cf868bf14d8b3" translate="yes" xml:space="preserve">
          <source>If no such element is found before this stream is done, and a &lt;code&gt;orElse&lt;/code&gt; function is provided, the result of calling &lt;code&gt;orElse&lt;/code&gt; becomes the value of the future. If &lt;code&gt;orElse&lt;/code&gt; throws, the returned future is completed with that error.</source>
          <target state="translated">このストリームが完了する前にそのような要素が見つからず、 &lt;code&gt;orElse&lt;/code&gt; 関数が提供されている場合、 &lt;code&gt;orElse&lt;/code&gt; を呼び出した結果がfutureの値になります。場合 &lt;code&gt;orElse&lt;/code&gt; はスロー、返された未来は、そのエラーで終了しました。</target>
        </trans-unit>
        <trans-unit id="865c874cca3bc7efd7860c4dec350eab58c1c604" translate="yes" xml:space="preserve">
          <source>If no terminal is attached to stdout, a &lt;a href=&quot;../stdoutexception-class&quot;&gt;StdoutException&lt;/a&gt; is thrown. See &lt;a href=&quot;hasterminal&quot;&gt;hasTerminal&lt;/a&gt; for more info.</source>
          <target state="translated">端末がstdoutに接続されていない場合、&lt;a href=&quot;../stdoutexception-class&quot;&gt;StdoutException&lt;/a&gt;がスローされます。詳細については、&lt;a href=&quot;hasterminal&quot;&gt;hasTerminal&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="68ce72caa3f4300f7192f22af1c1cb3a7bb0ac83" translate="yes" xml:space="preserve">
          <source>If no unique library exists, an error is thrown.</source>
          <target state="translated">ユニークなライブラリが存在しない場合、エラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="ef967af46533a609fb26d2f7bbf9c4d0602c349c" translate="yes" xml:space="preserve">
          <source>If no values are specified for &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; the default is the identity function.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; と &lt;code&gt;value&lt;/code&gt; 値が指定されていない場合、デフォルトは恒等関数です。</target>
        </trans-unit>
        <trans-unit id="b285cd58f5e0a431661e334aae34621fc6cc5bdc" translate="yes" xml:space="preserve">
          <source>If noone listens to a non-broadcast stream, or the listener pauses and never resumes, the done event will not be sent and this future will never complete.</source>
          <target state="translated">誰もブロードキャスト以外のストリームを聞かない場合や、リスナーが一時停止して再開しない場合は、完了したイベントは送信されず、この未来は決して完了しません。</target>
        </trans-unit>
        <trans-unit id="a5aa1449553cb49c0019084da047f29fb5774126" translate="yes" xml:space="preserve">
          <source>If not enabled, the remaining fields have no effect, and the &lt;a href=&quot;compressionoff-constant&quot;&gt;compressionOff&lt;/a&gt; instance can, and should, be reused instead of creating a new instance with compression disabled.</source>
          <target state="translated">有効にしない場合、残りのフィールドは効果がなく、圧縮を無効にして新しいインスタンスを作成する代わりに、&lt;a href=&quot;compressionoff-constant&quot;&gt;compressionOff&lt;/a&gt;インスタンスを再利用できます。</target>
        </trans-unit>
        <trans-unit id="b113471eba3857e19bbb50688e4dd1167e730bf8" translate="yes" xml:space="preserve">
          <source>If omitted, &lt;code&gt;start&lt;/code&gt; defaults to zero and &lt;code&gt;end&lt;/code&gt; to &lt;em&gt;elementCount&lt;/em&gt;.</source>
          <target state="translated">省略した場合、 &lt;code&gt;start&lt;/code&gt; デフォルトでゼロになり、 &lt;code&gt;end&lt;/code&gt; は&lt;em&gt;elementCountになり&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="c5365beab610ef19d3d8473ef4d51767da738974" translate="yes" xml:space="preserve">
          <source>If omitted, the &lt;code&gt;isValidKey&lt;/code&gt; function defaults to checking against the type parameter: &lt;code&gt;other is E&lt;/code&gt;.</source>
          <target state="translated">省略した場合、 &lt;code&gt;isValidKey&lt;/code&gt; 関数はデフォルトでtypeパラメーターをチェックします。other &lt;code&gt;other is E&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="2605ed51e85c88ce066e921822c38370c272234c" translate="yes" xml:space="preserve">
          <source>If one operand is a double and the other is an int, they are equal if the double has an integer value (finite with no fractional part) and &lt;code&gt;identical(doubleValue.toInt(), intValue)&lt;/code&gt; is true.</source>
          <target state="translated">一方のオペランドがdoubleで、もう一方がintの場合、doubleに整数値（小数部なしの有限 &lt;code&gt;identical(doubleValue.toInt(), intValue)&lt;/code&gt; がtrueであれば、それらは等しくなります。</target>
        </trans-unit>
        <trans-unit id="c124d68043987c060ecc3f9ff28b1c177048adaf" translate="yes" xml:space="preserve">
          <source>If other is also a typed-data floating point number list, the returned list will be a type-data float list capable of containing all the elements of this list and of &lt;code&gt;other&lt;/code&gt;. Otherwise the returned list will be a normal growable &lt;code&gt;List&amp;lt;double&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">otherも型付きデータの浮動小数点数リストである場合、返されるリストは、このリストと &lt;code&gt;other&lt;/code&gt; のすべての要素を含むことができる型データの浮動小数点リストになります。それ以外の場合、返されるリストは通常​​の拡張可能な &lt;code&gt;List&amp;lt;double&amp;gt;&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="180a7c6c09d8c40cddd80c595c8ca8a53f665787" translate="yes" xml:space="preserve">
          <source>If other is also a typed-data integer list, the returned list will be a type-data integer list capable of containing all the elements of this list and of &lt;code&gt;other&lt;/code&gt;. Otherwise the returned list will be a normal growable &lt;code&gt;List&amp;lt;int&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">otherも型付きデータ整数リストの場合、返されるリストは、このリストと &lt;code&gt;other&lt;/code&gt; のすべての要素を含むことができる型データ整数リストになります。それ以外の場合、返されるリストは通常​​の拡張可能な &lt;code&gt;List&amp;lt;int&amp;gt;&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="cc276c461628a800e2e4cdbabd49efe43da6d946" translate="yes" xml:space="preserve">
          <source>If path is a link</source>
          <target state="translated">パスがリンクの場合</target>
        </trans-unit>
        <trans-unit id="c2c321ccc83139a05b761aa1d15091635fff1e6c" translate="yes" xml:space="preserve">
          <source>If present, it specifies a file describing how Dart packages are looked up.</source>
          <target state="translated">存在する場合、Dart パッケージがどのように検索されるかを記述したファイルを指定します。</target>
        </trans-unit>
        <trans-unit id="700dba153bca4ad7890cb96b75b96da83e31b13e" translate="yes" xml:space="preserve">
          <source>If provided, &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; must satisfy</source>
          <target state="translated">提供されている場合、 &lt;code&gt;start&lt;/code&gt; と &lt;code&gt;end&lt;/code&gt; は満たす必要があります</target>
        </trans-unit>
        <trans-unit id="ae7f02a78b0e51db2e4d769864ece6f4a88eb62d" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;null&lt;/code&gt;, the client has no preference, and the compression can use up to its default maximum window size of 15 bits depending on the server's preference.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; に設定されている場合、クライアントには設定がなく、サーバーの設定に応じて、圧縮はデフォルトの最大ウィンドウサイズである15ビットまで使用できます。</target>
        </trans-unit>
        <trans-unit id="ef23de7cd484bfb9a989f2ef13de0f63e9ffe787" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;null&lt;/code&gt;, the server has no preference, and the compression can use up to its default maximum window size of 15 bits depending on the client's preference.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; に設定されている場合、サーバーには設定がなく、クライアントの設定に応じて、圧縮ではデフォルトの最大ウィンドウサイズである15ビットまで使用できます。</target>
        </trans-unit>
        <trans-unit id="a45df85950df727b96e193c280b8e6d14367065a" translate="yes" xml:space="preserve">
          <source>If several listeners want to listen to a single subscription stream, use &lt;a href=&quot;stream/asbroadcaststream&quot;&gt;asBroadcastStream&lt;/a&gt; to create a broadcast stream on top of the non-broadcast stream.</source>
          <target state="translated">複数のリスナーが単一のサブスクリプションストリームをリッスンする場合は、&lt;a href=&quot;stream/asbroadcaststream&quot;&gt;asBroadcastStream&lt;/a&gt;を使用して、非ブロードキャストストリームの上にブロードキャストストリームを作成します。</target>
        </trans-unit>
        <trans-unit id="07b748de0a3addea6ec769ff931143482777dbdc" translate="yes" xml:space="preserve">
          <source>If so, &lt;a href=&quot;positionalarguments&quot;&gt;positionalArguments&lt;/a&gt; has exactly one positional argument, &lt;a href=&quot;namedarguments&quot;&gt;namedArguments&lt;/a&gt; is empty, and typeArguments is empty.</source>
          <target state="translated">その場合、&lt;a href=&quot;positionalarguments&quot;&gt;positionalArgumentsに&lt;/a&gt;は位置引数が1つだけあり、&lt;a href=&quot;namedarguments&quot;&gt;namedArguments&lt;/a&gt;は空で、typeArgumentsは空です。</target>
        </trans-unit>
        <trans-unit id="c6557992f2e4a0ec89e3ff5a4897a49603835c62" translate="yes" xml:space="preserve">
          <source>If some futures have already completed when &lt;code&gt;Stream.fromFutures&lt;/code&gt; is called, their results will be emitted in some unspecified order.</source>
          <target state="translated">&lt;code&gt;Stream.fromFutures&lt;/code&gt; が呼び出されたときにいくつかのフューチャーがすでに完了している場合、その結果は不特定の順序で出力されます。</target>
        </trans-unit>
        <trans-unit id="6ba34e56c0eb33b33a8af91698e8ae7d7061e8a2" translate="yes" xml:space="preserve">
          <source>If some of the data of the TLS handshake has already been read from the socket this data can be passed in the &lt;code&gt;bufferedData&lt;/code&gt; parameter. This data will be processed before any other data available on the socket.</source>
          <target state="translated">TLSハンドシェイクのデータの一部がすでにソケットから読み取られている場合、このデータを &lt;code&gt;bufferedData&lt;/code&gt; パラメータに渡すことができます。このデータは、ソケットで使用可能な他のデータの前に処理されます。</target>
        </trans-unit>
        <trans-unit id="6011685493b9dc41930b395654170a0f6e43aa7f" translate="yes" xml:space="preserve">
          <source>If specified, &lt;code&gt;responseType&lt;/code&gt; sets the desired response format for the request. By default it is &lt;a href=&quot;../../dart-core/string-class&quot;&gt;String&lt;/a&gt;, but can also be 'arraybuffer', 'blob', 'document', 'json', or 'text'. See also &lt;a href=&quot;responsetype&quot;&gt;HttpRequest.responseType&lt;/a&gt; for more information.</source>
          <target state="translated">指定した場合、 &lt;code&gt;responseType&lt;/code&gt; は要求に必要な応答形式を設定します。デフォルトでは&lt;a href=&quot;../../dart-core/string-class&quot;&gt;String&lt;/a&gt;ですが、「arraybuffer」、「blob」、「document」、「json」、または「text」にすることもできます。詳細については、&lt;a href=&quot;responsetype&quot;&gt;HttpRequest.responseType&lt;/a&gt;もご覧ください。</target>
        </trans-unit>
        <trans-unit id="4209b1fbe4ac1eae5d41d93c12f0517a05436cd5" translate="yes" xml:space="preserve">
          <source>If specified, &lt;code&gt;sendData&lt;/code&gt; will send data in the form of a &lt;a href=&quot;../../dart-typed_data/bytebuffer-class&quot;&gt;ByteBuffer&lt;/a&gt;, &lt;a href=&quot;../blob-class&quot;&gt;Blob&lt;/a&gt;, &lt;a href=&quot;../document-class&quot;&gt;Document&lt;/a&gt;, &lt;a href=&quot;../../dart-core/string-class&quot;&gt;String&lt;/a&gt;, or &lt;a href=&quot;../formdata-class&quot;&gt;FormData&lt;/a&gt; along with the HttpRequest.</source>
          <target state="translated">指定した場合、 &lt;code&gt;sendData&lt;/code&gt; はHttpRequestとともに&lt;a href=&quot;../../dart-typed_data/bytebuffer-class&quot;&gt;ByteBuffer&lt;/a&gt;、&lt;a href=&quot;../blob-class&quot;&gt;Blob&lt;/a&gt;、&lt;a href=&quot;../document-class&quot;&gt;Document&lt;/a&gt;、&lt;a href=&quot;../../dart-core/string-class&quot;&gt;String&lt;/a&gt;、または&lt;a href=&quot;../formdata-class&quot;&gt;FormData&lt;/a&gt;の形式でデータを送信します。</target>
        </trans-unit>
        <trans-unit id="b3bf20613709c9c793d631dfcb8a5c435435f93b" translate="yes" xml:space="preserve">
          <source>If that call throws, the error is emitted on the returned stream.</source>
          <target state="translated">その呼び出しがスローされると、返されたストリームにエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="784327f035e52659c47f2dd8773e2267a8499778" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../../dart-async/future-class&quot;&gt;Future&lt;/a&gt; completes with &lt;code&gt;true&lt;/code&gt; the request will be retried using the updated credentials, however, the retried request will not carry the original request payload. Otherwise response processing will continue normally.</source>
          <target state="translated">場合は&lt;a href=&quot;../../dart-async/future-class&quot;&gt;将来&lt;/a&gt;で完了 &lt;code&gt;true&lt;/code&gt; 要求が更新された資格情報を使用して再試行されます、しかし、再試行要求は、元の要求ペイロードを運ぶことはありません。それ以外の場合、応答処理は通常どおり続行されます。</target>
        </trans-unit>
        <trans-unit id="0fa0db025c7df9fa40eafd486eb5bd5068c996f9" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../../dart-async/future-class&quot;&gt;Future&lt;/a&gt; completes with &lt;code&gt;true&lt;/code&gt; the request will be retried using the updated credentials. Otherwise response processing will continue normally.</source>
          <target state="translated">場合は&lt;a href=&quot;../../dart-async/future-class&quot;&gt;未来&lt;/a&gt;で完了 &lt;code&gt;true&lt;/code&gt; 要求は、更新された資格情報を使用して再試行されます。それ以外の場合、応答処理は通常どおり続行されます。</target>
        </trans-unit>
        <trans-unit id="ed5c6f8f6f0588b44632f64cb9c7d9db63f7390c" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../dart-async/future-class&quot;&gt;Future&lt;/a&gt; completes normally, its result is returned. If the &lt;a href=&quot;../dart-async/future-class&quot;&gt;Future&lt;/a&gt; completes with an error, the error and stack trace are wrapped in an &lt;a href=&quot;../dart-async/asyncerror-class&quot;&gt;AsyncError&lt;/a&gt; and thrown. If a microtask or message handler run during this call results in an unhandled exception, that exception will be propagated as though the microtask or message handler was the only Dart invocation on the stack. That is, unhandled exceptions in a microtask or message handler will skip over stacks suspended in a call to &lt;a href=&quot;waitfor&quot;&gt;waitFor&lt;/a&gt;.</source>
          <target state="translated">場合&lt;a href=&quot;../dart-async/future-class&quot;&gt;今後は&lt;/a&gt;正常に完了し、その結果が返されます。&lt;a href=&quot;../dart-async/future-class&quot;&gt;Futureが&lt;/a&gt;エラーで完了した場合、エラーとスタックトレースは&lt;a href=&quot;../dart-async/asyncerror-class&quot;&gt;AsyncErrorに&lt;/a&gt;ラップされてスローされます。この呼び出し中にマイクロタスクまたはメッセージハンドラーが実行されて未処理の例外が発生した場合、その例外は、マイクロタスクまたはメッセージハンドラーがスタック上の唯一のDart呼び出しであるかのように伝達されます。すなわち、マイクロタスクまたはメッセージハンドラで未処理の例外はへの呼び出しに懸濁スタックスキップされます&lt;a href=&quot;waitfor&quot;&gt;のwaitForを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2269f8f71f2d06fa6c1cfbdc1bba0f6221e3caf7" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../filesystementity-class&quot;&gt;FileSystemEntity&lt;/a&gt; is a directory, and if &lt;code&gt;recursive&lt;/code&gt; is false, the directory must be empty. Otherwise, if &lt;code&gt;recursive&lt;/code&gt; is true, the directory and all sub-directories and files in the directories are deleted. Links are not followed when deleting recursively. Only the link is deleted, not its target.</source>
          <target state="translated">場合&lt;a href=&quot;../filesystementity-class&quot;&gt;FileSystemEntityは&lt;/a&gt;ディレクトリで、あれば &lt;code&gt;recursive&lt;/code&gt; 偽である、ディレクトリが空でなければなりません。それ以外の場合、 &lt;code&gt;recursive&lt;/code&gt; がtrueの場合、ディレクトリとそのディレクトリ内のすべてのサブディレクトリおよびファイルが削除されます。再帰的に削除するとリンクはたどられません。リンクのみが削除され、ターゲットは削除されません。</target>
        </trans-unit>
        <trans-unit id="316f8fe47246030117f05cb699050bb491a77451" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../instancemirror-class&quot;&gt;InstanceMirror&lt;/a&gt; reflects an instance it is meaningful to have a local reference to, we provide access to the actual instance here.</source>
          <target state="translated">場合&lt;a href=&quot;../instancemirror-class&quot;&gt;InstanceMirrorが&lt;/a&gt;、へのローカル参照を持っている意味があるインスタンスを反映して、我々はここで、実際のインスタンスへのアクセスを提供します。</target>
        </trans-unit>
        <trans-unit id="6d992b7745de91daf58a73625c6c31cb2a5bc628" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../stopwatch-class&quot;&gt;Stopwatch&lt;/a&gt; is currently running, then calling start does nothing.</source>
          <target state="translated">&lt;a href=&quot;../stopwatch-class&quot;&gt;ストップウォッチ&lt;/a&gt;が現在実行中の場合、startを呼び出しても何も起こりません。</target>
        </trans-unit>
        <trans-unit id="6f3c8265d9413588304c445b55d1d83c42da6d66" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;contentlength&quot;&gt;contentLength&lt;/a&gt; of the body isn't 0, and the body isn't being read, any write calls on the &lt;a href=&quot;../httpresponse-class&quot;&gt;HttpResponse&lt;/a&gt; automatically drain the request body.</source>
          <target state="translated">場合&lt;a href=&quot;contentlength&quot;&gt;ん。ContentLength&lt;/a&gt;体のが0ではない、と体が読み込まれていないが、上の任意の書き込み呼び出し&lt;a href=&quot;../httpresponse-class&quot;&gt;HttpResponseには、&lt;/a&gt;自動的にリクエストボディを排出します。</target>
        </trans-unit>
        <trans-unit id="2a05b9b56d9a725be18cab45db44edfbbc6086d3" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;done&quot;&gt;done&lt;/a&gt; future has already completed, aborting has no effect.</source>
          <target state="translated">場合&lt;a href=&quot;done&quot;&gt;完了&lt;/a&gt;未来はすでに完了している、強制終了しても効果はありません。</target>
        </trans-unit>
        <trans-unit id="1465825e0964056bdb72835e0938b535ce4cb928" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;instancemirror-class&quot;&gt;InstanceMirror&lt;/a&gt; reflects an instance it is meaningful to have a local reference to, we provide access to the actual instance here. &lt;a href=&quot;instancemirror/reflectee&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">場合&lt;a href=&quot;instancemirror-class&quot;&gt;InstanceMirrorが&lt;/a&gt;、へのローカル参照を持っている意味があるインスタンスを反映して、我々はここで、実際のインスタンスへのアクセスを提供します。&lt;a href=&quot;instancemirror/reflectee&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f3a2c7fe07530e3a6ced7c0b3343618dc5e23d30" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Server&lt;/code&gt; header is added here and the &lt;code&gt;serverHeader&lt;/code&gt; is set as well then the value of &lt;code&gt;serverHeader&lt;/code&gt; takes precedence.</source>
          <target state="translated">場合 &lt;code&gt;Server&lt;/code&gt; ヘッダーはここに追加され、 &lt;code&gt;serverHeader&lt;/code&gt; はそれではの値として設定されている &lt;code&gt;serverHeader&lt;/code&gt; が優先されます。</target>
        </trans-unit>
        <trans-unit id="60847f1107d30bb01e8273622b50b65e16f5c302" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;StreamSink&lt;/code&gt; fails with an error, perhaps in response to adding events using &lt;a href=&quot;../eventsink/add&quot;&gt;add&lt;/a&gt;, &lt;a href=&quot;../eventsink/adderror&quot;&gt;addError&lt;/a&gt; or &lt;a href=&quot;close&quot;&gt;close&lt;/a&gt;, the &lt;a href=&quot;done&quot;&gt;done&lt;/a&gt; future will complete with that error.</source>
          <target state="translated">&lt;code&gt;StreamSink&lt;/code&gt; がエラーで失敗した場合、おそらく&lt;a href=&quot;../eventsink/add&quot;&gt;add&lt;/a&gt;、&lt;a href=&quot;../eventsink/adderror&quot;&gt;addError、&lt;/a&gt;または&lt;a href=&quot;close&quot;&gt;close&lt;/a&gt;を使用してイベントを追加したことに応答して、&lt;a href=&quot;done&quot;&gt;done&lt;/a&gt;フューチャーはそのエラーで完了します。</target>
        </trans-unit>
        <trans-unit id="134efee1cd3f10e2156045364687510ffbf0b943" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;automaticPackageResolution&lt;/code&gt; parameter is provided, then the location of the package sources in the spawned isolate is automatically determined.</source>
          <target state="translated">&lt;code&gt;automaticPackageResolution&lt;/code&gt; パラメーターが指定されている場合、生成された分離内のパッケージソースの場所は自動的に決定されます。</target>
        </trans-unit>
        <trans-unit id="87ae4f2e8da5373a11b2378b314a07753ef9e83e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;charCode&lt;/code&gt; can be represented by a single UTF-16 code unit, the new string contains a single code unit. Otherwise, the &lt;a href=&quot;length&quot;&gt;length&lt;/a&gt; is 2 and the code units form a surrogate pair. See documentation for &lt;a href=&quot;string.fromcharcodes&quot;&gt;fromCharCodes&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;charCode&lt;/code&gt; が単一のUTF-16コード単位で表現できる場合、新しい文字列には単一のコード単位が含まれます。それ以外の場合、&lt;a href=&quot;length&quot;&gt;長さ&lt;/a&gt;は2で、コード単位はサロゲートペアを形成します。&lt;a href=&quot;string.fromcharcodes&quot;&gt;fromCharCodesの&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="55a439c2c4e1a837db2e55b684e8508ea825ce71" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;checked&lt;/code&gt; parameter is set to &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, the new isolate will run code in checked mode (enabling asserts and type checks), respectively in production mode (disabling asserts and type checks), if possible. If the parameter is omitted, the new isolate will inherit the value from the current isolate.</source>
          <target state="translated">&lt;code&gt;checked&lt;/code&gt; パラメーターが &lt;code&gt;true&lt;/code&gt; または &lt;code&gt;false&lt;/code&gt; に設定されている場合、可能であれば、新しいアイソレートはチェックモード（アサートとタイプチェックを有効にする）、プロダクションモード（アサートとタイプチェックを無効にする）でコードを実行します。パラメータを省略すると、新しい分離菌は現在の分離菌から値を継承します。</target>
        </trans-unit>
        <trans-unit id="05845dab9a079b10e81cff9bf5e8ad9632291c2f" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;codeUnits&lt;/code&gt; start with the encoding of a &lt;a href=&quot;../unicodebomcharacterrune-constant&quot;&gt;unicodeBomCharacterRune&lt;/a&gt;, that character is discarded.</source>
          <target state="translated">場合 &lt;code&gt;codeUnits&lt;/code&gt; はのエンコーディングで始まる&lt;a href=&quot;../unicodebomcharacterrune-constant&quot;&gt;unicodeBomCharacterRune&lt;/a&gt;、その文字は破棄されます。</target>
        </trans-unit>
        <trans-unit id="8564a1b617d768aee4a0676779da84b8c1736cd7" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;compare&lt;/code&gt; function is omitted, it defaults to &lt;a href=&quot;../../dart-core/comparable/compare&quot;&gt;Comparable.compare&lt;/a&gt;, and the elements must be comparable.</source>
          <target state="translated">場合は &lt;code&gt;compare&lt;/code&gt; 機能が省略され、そのデフォルト&lt;a href=&quot;../../dart-core/comparable/compare&quot;&gt;Comparable.compare&lt;/a&gt;、および要素は同等でなければなりません。</target>
        </trans-unit>
        <trans-unit id="787738c7bbb7b347bb28fcdf19817f332d6dbdb5" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;errorsAreFatal&lt;/code&gt;, &lt;code&gt;onExit&lt;/code&gt; and/or &lt;code&gt;onError&lt;/code&gt; parameters are provided, the isolate will act as if, respectively, &lt;a href=&quot;seterrorsfatal&quot;&gt;setErrorsFatal&lt;/a&gt;, &lt;a href=&quot;addonexitlistener&quot;&gt;addOnExitListener&lt;/a&gt; and &lt;a href=&quot;adderrorlistener&quot;&gt;addErrorListener&lt;/a&gt; were called with the corresponding parameter and was processed before the isolate starts running.</source>
          <target state="translated">&lt;code&gt;errorsAreFatal&lt;/code&gt; 、 &lt;code&gt;onExit&lt;/code&gt; 、 &lt;code&gt;onError&lt;/code&gt; 、またはその両方のパラメータが指定されている場合、&lt;a href=&quot;adderrorlistener&quot;&gt;アイソレート&lt;/a&gt;はそれぞれ、&lt;a href=&quot;seterrorsfatal&quot;&gt;setErrorsFatal&lt;/a&gt;、&lt;a href=&quot;addonexitlistener&quot;&gt;addOnExitListener&lt;/a&gt;、addErrorListenerが対応するパラメータで呼び出され、分離が実行を開始する前に処理されたかのように動作します。</target>
        </trans-unit>
        <trans-unit id="d84275773a18d6de6c6e01b91d853407b7298b44" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;flush&lt;/code&gt; argument is set to &lt;code&gt;true&lt;/code&gt; data written will be flushed to the file system before returning.</source>
          <target state="translated">場合は &lt;code&gt;flush&lt;/code&gt; 引数に設定されて &lt;code&gt;true&lt;/code&gt; 書き込まれたデータを返す前に、ファイルシステムにフラッシュされます。</target>
        </trans-unit>
        <trans-unit id="d59dfc7a648c7ac9ea79b94eac2d863253dd712b" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;host&lt;/code&gt; argument is passed it will be used as the host name for the TLS handshake. If &lt;code&gt;host&lt;/code&gt; is not passed the host name from the &lt;code&gt;socket&lt;/code&gt; will be used. The &lt;code&gt;host&lt;/code&gt; can be either a &lt;a href=&quot;../../dart-core/string-class&quot;&gt;String&lt;/a&gt; or an &lt;a href=&quot;../internetaddress-class&quot;&gt;InternetAddress&lt;/a&gt;.</source>
          <target state="translated">場合は &lt;code&gt;host&lt;/code&gt; 引数が渡され、それは、TLSハンドシェイクのホスト名として使用されます。 &lt;code&gt;host&lt;/code&gt; が渡されない場合、 &lt;code&gt;socket&lt;/code&gt; からのホスト名が使用されます。 &lt;code&gt;host&lt;/code&gt; いずれかになります&lt;a href=&quot;../../dart-core/string-class&quot;&gt;文字列&lt;/a&gt;または&lt;a href=&quot;../internetaddress-class&quot;&gt;たInternetAddress&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="628ac81e865af8937f2203b25900282a1f89ea35" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;packageConfig&lt;/code&gt; parameter is provided, then it is used to find the location of a package resolution configuration file for the spawned isolate.</source>
          <target state="translated">場合 &lt;code&gt;packageConfig&lt;/code&gt; のパラメータが提供され、生成された単離するためのパッケージ解決設定ファイルの場所を見つけるために使用されます。</target>
        </trans-unit>
        <trans-unit id="f3d71c539f3ea414606cb2155a42940cb0b9a2a7" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;paused&lt;/code&gt; parameter is set to &lt;code&gt;true&lt;/code&gt;, the isolate will start up in a paused state, as if by an initial call of &lt;code&gt;isolate.pause(isolate.pauseCapability)&lt;/code&gt;. To resume the isolate, call &lt;code&gt;isolate.resume(isolate.pauseCapability)&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;paused&lt;/code&gt; パラメータがに設定されている &lt;code&gt;true&lt;/code&gt; 、分離株は、最初の呼び出したかのように、一時停止状態で起動します &lt;code&gt;isolate.pause(isolate.pauseCapability)&lt;/code&gt; 。分離を再開するには、 &lt;code&gt;isolate.resume(isolate.pauseCapability)&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="6b0884c431da5b144625853063068c2bba2eda86" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;paused&lt;/code&gt; parameter is set to &lt;code&gt;true&lt;/code&gt;, the isolate will start up in a paused state, just before calling the &lt;code&gt;entryPoint&lt;/code&gt; function with the &lt;code&gt;message&lt;/code&gt;, as if by an initial call of &lt;code&gt;isolate.pause(isolate.pauseCapability)&lt;/code&gt;. To resume the isolate, call &lt;code&gt;isolate.resume(isolate.pauseCapability)&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;paused&lt;/code&gt; パラメータがに設定されている &lt;code&gt;true&lt;/code&gt; 、分離株は、単に呼び出す前に、一時停止状態で起動します &lt;code&gt;entryPoint&lt;/code&gt; を持つ関数を &lt;code&gt;message&lt;/code&gt; の最初の呼び出しによってかのように、 &lt;code&gt;isolate.pause(isolate.pauseCapability)&lt;/code&gt; 。分離を再開するには、 &lt;code&gt;isolate.resume(isolate.pauseCapability)&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="aff6bd514f2a679dbf5b3996a8f42483de9e54b9" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;resumeCapability&lt;/code&gt; is not one that has previously been used to pause the isolate, or it has already been used to resume from that pause, the resume call has no effect.</source>
          <target state="translated">&lt;code&gt;resumeCapability&lt;/code&gt; が以前に分離を一時停止するために使用されたものではない場合、またはその一時停止から再開するためにすでに使用されている場合、resume呼び出しは効果がありません。</target>
        </trans-unit>
        <trans-unit id="33f796192c266336b658ba9ebd728d00c8790d50" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;socket&lt;/code&gt; already has a subscription, pass the existing subscription in the &lt;code&gt;subscription&lt;/code&gt; parameter. The &lt;a href=&quot;secure&quot;&gt;secure&lt;/a&gt; operation will take over the subscription by replacing the handlers with it own secure processing. The caller must not touch this subscription anymore. Passing a paused subscription is an error.</source>
          <target state="translated">&lt;code&gt;socket&lt;/code&gt; すでにサブスクリプションを持っている場合は、 &lt;code&gt;subscription&lt;/code&gt; パラメータで既存のサブスクリプションを渡します。&lt;a href=&quot;secure&quot;&gt;安全な&lt;/a&gt;操作は、それ自身のセキュアな処理でハンドラを置き換えることによって、サブスクリプションを引き継ぎます。発信者は、このサブスクリプションに触れないでください。一時停止したサブスクリプションを渡すとエラーになります。</target>
        </trans-unit>
        <trans-unit id="6d189e5b47f367ceb36e6c0c83dbceff6558fa25" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;socket&lt;/code&gt; already has a subscription, pass the existing subscription in the &lt;code&gt;subscription&lt;/code&gt; parameter. The &lt;a href=&quot;secureserver&quot;&gt;secureServer&lt;/a&gt; operation will take over the subscription by replacing the handlers with it own secure processing. The caller must not touch this subscription anymore. Passing a paused subscription is an error.</source>
          <target state="translated">&lt;code&gt;socket&lt;/code&gt; すでにサブスクリプションを持っている場合は、 &lt;code&gt;subscription&lt;/code&gt; パラメータで既存のサブスクリプションを渡します。&lt;a href=&quot;secureserver&quot;&gt;secureServerの&lt;/a&gt;操作は、それ自身のセキュアな処理でハンドラを置き換えることによって、サブスクリプションを引き継ぎます。発信者は、このサブスクリプションに触れないでください。一時停止したサブスクリプションを渡すとエラーになります。</target>
        </trans-unit>
        <trans-unit id="79ad9ce4cebd294d5b446e2fcf7f538d1a449479" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;socket&lt;/code&gt; already has a subscription, this subscription will no longer receive and events. In most cases calling &lt;code&gt;pause&lt;/code&gt; on this subscription before starting TLS handshake is the right thing to do.</source>
          <target state="translated">&lt;code&gt;socket&lt;/code&gt; すでにサブスクリプションを持っている場合、このサブスクリプションはイベントを受信しなくなります。ほとんどの場合、TLSハンドシェイクを開始する前に、このサブスクリプションで &lt;code&gt;pause&lt;/code&gt; を呼び出すことは正しいことです。</target>
        </trans-unit>
        <trans-unit id="d1920c2d147245aef5cb56ced7eb21c97a1ac97d" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;source&lt;/code&gt; string does not contain a valid integer literal, optionally prefixed by a sign, a &lt;a href=&quot;../formatexception-class&quot;&gt;FormatException&lt;/a&gt; is thrown (unless the deprecated &lt;code&gt;onError&lt;/code&gt; parameter is used, see below).</source>
          <target state="translated">場合 &lt;code&gt;source&lt;/code&gt; 文字列が有効な整数リテラルを含まない任意に記号を前置、&lt;a href=&quot;../formatexception-class&quot;&gt;FormatExceptionは&lt;/a&gt;（推奨されない限り、スローされる &lt;code&gt;onError&lt;/code&gt; パラメーターが使用され、以下を参照のこと）。</target>
        </trans-unit>
        <trans-unit id="2ed610f3f0ac3929378b593fdb239dc06b277f31" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;source&lt;/code&gt; string is not a valid double literal, the &lt;code&gt;onError&lt;/code&gt; is called with the &lt;code&gt;source&lt;/code&gt; as argument, and its return value is used instead. If no &lt;code&gt;onError&lt;/code&gt; is provided, a &lt;a href=&quot;../formatexception-class&quot;&gt;FormatException&lt;/a&gt; is thrown instead.</source>
          <target state="translated">&lt;code&gt;source&lt;/code&gt; 文字列が有効なdoubleリテラルではない場合、 &lt;code&gt;onError&lt;/code&gt; は &lt;code&gt;source&lt;/code&gt; を引数として呼び出され、代わりにその戻り値が使用されます。 &lt;code&gt;onError&lt;/code&gt; が指定されていない場合は、代わりに&lt;a href=&quot;../formatexception-class&quot;&gt;FormatException&lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="bf45bcf40b505be2c64001cb700b530c07fb46ca" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;test&lt;/code&gt; function throws, the data event is dropped and the error is emitted on the returned stream instead.</source>
          <target state="translated">場合 &lt;code&gt;test&lt;/code&gt; 関数はスロー、データイベントは廃棄され、エラーが代わりに返されたストリームに放出されます。</target>
        </trans-unit>
        <trans-unit id="76c8f8f7c8b8285340f74c007367e767a98ec83a" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;type&lt;/code&gt; is &lt;a href=&quot;../internetaddresstype/ipv4-constant&quot;&gt;InternetAddressType.IPv4&lt;/a&gt;, the &lt;code&gt;rawAddress&lt;/code&gt; must have length 4. If the &lt;code&gt;type&lt;/code&gt; is &lt;a href=&quot;../internetaddresstype/ipv6-constant&quot;&gt;InternetAddressType.IPv6&lt;/a&gt;, the &lt;code&gt;rawAddress&lt;/code&gt; must have length 16. If the &lt;code&gt;type&lt;/code&gt; is &lt;a href=&quot;../internetaddresstype/ipv4-constant&quot;&gt;InternetAddressType.IPv4&lt;/a&gt;, the &lt;code&gt;rawAddress&lt;/code&gt; must be a valid UTF-8 encoded file path.</source>
          <target state="translated">場合は &lt;code&gt;type&lt;/code&gt; ある&lt;a href=&quot;../internetaddresstype/ipv4-constant&quot;&gt;InternetAddressType.IPv4&lt;/a&gt;、 &lt;code&gt;rawAddress&lt;/code&gt; は長さ4を持たなければならない場合は &lt;code&gt;type&lt;/code&gt; ある&lt;a href=&quot;../internetaddresstype/ipv6-constant&quot;&gt;InternetAddressType.IPv6&lt;/a&gt;、 &lt;code&gt;rawAddress&lt;/code&gt; は長さ16を有していなければならない場合は &lt;code&gt;type&lt;/code&gt; ある&lt;a href=&quot;../internetaddresstype/ipv4-constant&quot;&gt;InternetAddressType.IPv4&lt;/a&gt;、 &lt;code&gt;rawAddress&lt;/code&gt; は有効なUTF-8でエンコードされたファイルのパスでなければなりません。</target>
        </trans-unit>
        <trans-unit id="161da963d6e0fe5105bc4ff148b594e95b425d09" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;url&lt;/code&gt; contains user information this will be passed as basic authentication when setting up the connection.</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; にユーザー情報が含まれている場合、これは接続の設定時に基本認証として渡されます。</target>
        </trans-unit>
        <trans-unit id="3ba9fcbe8dd5bffcd7f8fca82d5327799ca55057" translate="yes" xml:space="preserve">
          <source>If the MIME type representation in the URI text contains URI escapes, they are unescaped in the returned string.</source>
          <target state="translated">URI テキストの MIME タイプ表現に URI エスケープが含まれている場合、返される文字列ではそれらはエスケープされません。</target>
        </trans-unit>
        <trans-unit id="28474efb5e156634e85bc6b3d2ae90375073386d" translate="yes" xml:space="preserve">
          <source>If the RPC was successful, use &lt;a href=&quot;serviceextensionresponse/result&quot;&gt;ServiceExtensionResponse.result&lt;/a&gt;, otherwise use &lt;a href=&quot;serviceextensionresponse/serviceextensionresponse.error&quot;&gt;ServiceExtensionResponse.error&lt;/a&gt;.</source>
          <target state="translated">RPCが成功した場合は、使用&lt;a href=&quot;serviceextensionresponse/result&quot;&gt;ServiceExtensionResponse.result&lt;/a&gt;、そうでない場合は使用&lt;a href=&quot;serviceextensionresponse/serviceextensionresponse.error&quot;&gt;ServiceExtensionResponse.errorを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="257df6e3e06a69436280394fad226d3181e990c4" translate="yes" xml:space="preserve">
          <source>If the URI cannot be converted to a file path calling this throws &lt;a href=&quot;../unsupportederror-class&quot;&gt;UnsupportedError&lt;/a&gt;.</source>
          <target state="translated">URIを呼び出してファイルパスに変換できない場合、これは&lt;a href=&quot;../unsupportederror-class&quot;&gt;UnsupportedErrorを&lt;/a&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="b9c278becdcc63214dfbb91d3d64a33d493b8c28" translate="yes" xml:space="preserve">
          <source>If the URI ends with a slash (i.e. the last path component is empty) the returned file path will also end with a slash.</source>
          <target state="translated">URIがスラッシュで終わる場合(つまり最後のパスコンポーネントが空の場合)、返されるファイルパスもスラッシュで終わります。</target>
        </trans-unit>
        <trans-unit id="511a2e421cca3fa4ed5b446777c30d476cfd1a3b" translate="yes" xml:space="preserve">
          <source>If the URI is absolute the path starts with a path separator unless Windows semantics is used and the first path segment is a drive letter. When Windows semantics is used a host component in the uri in interpreted as a file server and a UNC path is returned.</source>
          <target state="translated">URIが絶対パスの場合、Windowsセマンティクスが使用され、最初のパスセグメントがドライブレターでない限り、パスはパスセパレータで始まります。Windowsセマンティクスが使用されている場合、URIのホストコンポーネントはファイルサーバとして解釈され、UNCパスが返されます。</target>
        </trans-unit>
        <trans-unit id="d7ae3f190d12d4f25604935e3c7482a196cac360" translate="yes" xml:space="preserve">
          <source>If the URI is not a file URI calling this throws &lt;a href=&quot;../unsupportederror-class&quot;&gt;UnsupportedError&lt;/a&gt;.</source>
          <target state="translated">URIがファイルURIを呼び出していない場合、これは&lt;a href=&quot;../unsupportederror-class&quot;&gt;UnsupportedErrorを&lt;/a&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="51a706b576bf65ee21e4550409c44995647ad1ff" translate="yes" xml:space="preserve">
          <source>If the absolute value of &lt;code&gt;this&lt;/code&gt; is greater or equal to &lt;code&gt;10^21&lt;/code&gt; then this methods returns an exponential representation computed by &lt;code&gt;this.toStringAsExponential()&lt;/code&gt;. Otherwise the result is the closest string representation with exactly &lt;code&gt;fractionDigits&lt;/code&gt; digits after the decimal point. If &lt;code&gt;fractionDigits&lt;/code&gt; equals 0 then the decimal point is omitted.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; の絶対値が &lt;code&gt;10^21&lt;/code&gt; 以上の場合、このメソッドは &lt;code&gt;this.toStringAsExponential()&lt;/code&gt; によって計算された指数表現を返します。それ以外の場合、結果は小数点の後にちょうど &lt;code&gt;fractionDigits&lt;/code&gt; 桁を持つ最も近い文字列表現になります。場合 &lt;code&gt;fractionDigits&lt;/code&gt; が、その後0に等しい小数点が省略されています。</target>
        </trans-unit>
        <trans-unit id="393ea8be203a5aad680039095d7a08f9b4e2ab2d" translate="yes" xml:space="preserve">
          <source>If the address in &lt;code&gt;address&lt;/code&gt; is not a numeric IPv4 (dotted-decimal notation) or IPv6 (hexadecimal representation). address &lt;a href=&quot;../../dart-core/argumenterror-class&quot;&gt;ArgumentError&lt;/a&gt; is thrown.</source>
          <target state="translated">アドレス場合 &lt;code&gt;address&lt;/code&gt; 数字のIPv4（ドット付き十進表記）またはIPv6（16進表記）ではありません。アドレス&lt;a href=&quot;../../dart-core/argumenterror-class&quot;&gt;ArgumentError&lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="a84daa06cf058c779e89bfda639282d0287faf3e" translate="yes" xml:space="preserve">
          <source>If the argument &lt;code&gt;flush&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, the data written will be flushed to the file system before the returned future completes.</source>
          <target state="translated">引数 &lt;code&gt;flush&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; に設定されている場合、書き込まれたデータは、返されたfutureが完了する前にファイルシステムにフラッシュされます。</target>
        </trans-unit>
        <trans-unit id="932a10b6024864568482519b11918f2e0d04f809" translate="yes" xml:space="preserve">
          <source>If the attributes cannot be set, throws a &lt;a href=&quot;../filesystemexception-class&quot;&gt;FileSystemException&lt;/a&gt;.</source>
          <target state="translated">属性を設定できない場合は、&lt;a href=&quot;../filesystemexception-class&quot;&gt;FileSystemExceptionを&lt;/a&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="140b1a9a632136a0480f464713d91a27c85e3cff" translate="yes" xml:space="preserve">
          <source>If the call fails, completes the future with a &lt;a href=&quot;../filestat-class&quot;&gt;FileStat&lt;/a&gt; object with &lt;code&gt;.type&lt;/code&gt; set to &lt;a href=&quot;../filesystementitytype/notfound-constant&quot;&gt;FileSystemEntityType.notFound&lt;/a&gt; and the other fields invalid.</source>
          <target state="translated">呼び出しが失敗した場合、 &lt;code&gt;.type&lt;/code&gt; が&lt;a href=&quot;../filesystementitytype/notfound-constant&quot;&gt;FileSystemEntityType.notFoundに&lt;/a&gt;設定され、他のフィールドが無効な&lt;a href=&quot;../filestat-class&quot;&gt;FileStat&lt;/a&gt;オブジェクトでフューチャを完了します。</target>
        </trans-unit>
        <trans-unit id="157c6e604cac25be562e2fa7cf5e6b9c73882d4b" translate="yes" xml:space="preserve">
          <source>If the call fails, returns a &lt;a href=&quot;../filestat-class&quot;&gt;FileStat&lt;/a&gt; object with &lt;code&gt;.type&lt;/code&gt; set to &lt;a href=&quot;../filesystementitytype/notfound-constant&quot;&gt;FileSystemEntityType.notFound&lt;/a&gt; and the other fields invalid.</source>
          <target state="translated">呼び出しが失敗した場合、 &lt;code&gt;.type&lt;/code&gt; が&lt;a href=&quot;../filesystementitytype/notfound-constant&quot;&gt;FileSystemEntityType.notFoundに&lt;/a&gt;設定され、その他のフィールドが無効な&lt;a href=&quot;../filestat-class&quot;&gt;FileStat&lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="e31554fb180a8b583cd972833a985cafc2515207" translate="yes" xml:space="preserve">
          <source>If the call returns &lt;code&gt;null&lt;/code&gt;, no further action is taken for the elements.</source>
          <target state="translated">呼び出しが &lt;code&gt;null&lt;/code&gt; を返す場合、要素に対してそれ以上のアクションは実行されません。</target>
        </trans-unit>
        <trans-unit id="338cdcaf4407d56de44b596dcceca0d9170feed4" translate="yes" xml:space="preserve">
          <source>If the call to &lt;code&gt;action&lt;/code&gt; returns a &lt;a href=&quot;../future-class&quot;&gt;Future&lt;/a&gt;, &lt;code&gt;f2&lt;/code&gt;, then completion of &lt;code&gt;f&lt;/code&gt; is delayed until &lt;code&gt;f2&lt;/code&gt; completes. If &lt;code&gt;f2&lt;/code&gt; completes with an error, that will be the result of &lt;code&gt;f&lt;/code&gt; too. The value of &lt;code&gt;f2&lt;/code&gt; is always ignored.</source>
          <target state="translated">呼び出した場合は &lt;code&gt;action&lt;/code&gt; 返す&lt;a href=&quot;../future-class&quot;&gt;の未来を&lt;/a&gt;、 &lt;code&gt;f2&lt;/code&gt; は、その後の完成 &lt;code&gt;f&lt;/code&gt; がするまで延期される &lt;code&gt;f2&lt;/code&gt; 完了します。 &lt;code&gt;f2&lt;/code&gt; がエラーで完了した場合、それも &lt;code&gt;f&lt;/code&gt; の結果です。 &lt;code&gt;f2&lt;/code&gt; の値は常に無視されます。</target>
        </trans-unit>
        <trans-unit id="dc1efc4e769571b02211fcab7cad5ab85bcd455f" translate="yes" xml:space="preserve">
          <source>If the call to &lt;code&gt;action&lt;/code&gt; throws, then &lt;code&gt;f&lt;/code&gt; is completed with the thrown error.</source>
          <target state="translated">&lt;code&gt;action&lt;/code&gt; の呼び出しがスローされた場合、 &lt;code&gt;f&lt;/code&gt; はスローされたエラーで完了します。</target>
        </trans-unit>
        <trans-unit id="1fd565379f6bf25591c6b844f35ee0d5feae7c92" translate="yes" xml:space="preserve">
          <source>If the callback returns a &lt;a href=&quot;../future-class&quot;&gt;Future&lt;/a&gt;, the future returned by &lt;code&gt;then&lt;/code&gt; will be completed with the same result as the future returned by the callback.</source>
          <target state="translated">コールバックが&lt;a href=&quot;../future-class&quot;&gt;Futureを&lt;/a&gt;返す場合、 &lt;code&gt;then&lt;/code&gt; によって返されたフューチャーは、コールバックによって返されたフューチャーと同じ結果で完了します。</target>
        </trans-unit>
        <trans-unit id="83b97101cff88aaac942fb075d4ed7347b77c4a8" translate="yes" xml:space="preserve">
          <source>If the callback returns true, the secure connection is accepted and the &lt;code&gt;Future&amp;lt;HttpClientRequest&amp;gt;&lt;/code&gt; that was returned from the call making the request completes with a valid HttpRequest object. If the callback returns false, the &lt;code&gt;Future&amp;lt;HttpClientRequest&amp;gt;&lt;/code&gt; completes with an exception.</source>
          <target state="translated">コールバックがtrueを返す場合、安全な接続が受け入れられ、要求を行う呼び出しから返された &lt;code&gt;Future&amp;lt;HttpClientRequest&amp;gt;&lt;/code&gt; が有効なHttpRequestオブジェクトで完了します。コールバックがfalseを返す場合、 &lt;code&gt;Future&amp;lt;HttpClientRequest&amp;gt;&lt;/code&gt; は例外を出して完了します。</target>
        </trans-unit>
        <trans-unit id="0d314d0bc420620258f7f84a9dd99162046d23d6" translate="yes" xml:space="preserve">
          <source>If the caller wishes to manually uncompress the body of the response, it should consult the value of the &lt;code&gt;Content-Encoding&lt;/code&gt; HTTP header to see what type of compression has been applied. See &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-14.11&quot;&gt;tools.ietf.org/html/rfc2616#section-14.11&lt;/a&gt; for more information.</source>
          <target state="translated">呼び出し元が手動で応答の本文を解凍する場合は、 &lt;code&gt;Content-Encoding&lt;/code&gt; HTTPヘッダーの値を調べて、適用されている圧縮の種類を確認する必要があります。詳細については、&lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-14.11&quot;&gt;tools.ietf.org / html / rfc2616＃section-14.11&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="9fcb85bc8d850c0416716cc857d23224218ce11b" translate="yes" xml:space="preserve">
          <source>If the cleanup throws, which it really shouldn't, the returned future completes with that error.</source>
          <target state="translated">クリーンアップがスローされた場合、本当にすべきではないのですが、返された未来はそのエラーで終了します。</target>
        </trans-unit>
        <trans-unit id="c9a0efdb8f1789b15351cbac3e442b8f9abaca6e" translate="yes" xml:space="preserve">
          <source>If the conditions are not detectable before calling a function, the called function should not throw an &lt;code&gt;Error&lt;/code&gt;. It may still throw a value, but the caller will have to catch the thrown value, effectively making it an alternative result rather than an error. The thrown object can choose to implement &lt;a href=&quot;exception-class&quot;&gt;Exception&lt;/a&gt; to document that it represents an exceptional, but not erroneous, occurrence, but it has no other effect than documentation.</source>
          <target state="translated">関数を呼び出す前に条件が検出できない場合、呼び出された関数は &lt;code&gt;Error&lt;/code&gt; をスローしてはなりません。それでも値をスローする場合がありますが、呼び出し側はスローされた値をキャッチする必要があるため、エラーではなく代替結果になります。スローされたオブジェクトは、&lt;a href=&quot;exception-class&quot;&gt;例外&lt;/a&gt;を実装することを選択して、それが例外ではあるが誤った発生ではないことを文書化できますが、文書化以外の効果はありません。</target>
        </trans-unit>
        <trans-unit id="ac90459d37421d93bb2be12395313ea1cc5c33cc" translate="yes" xml:space="preserve">
          <source>If the connection has not yet completed, the request is aborted and the &lt;a href=&quot;done&quot;&gt;done&lt;/a&gt; future (also returned by &lt;a href=&quot;close&quot;&gt;close&lt;/a&gt;) is completed with the provided &lt;code&gt;exception&lt;/code&gt; and &lt;code&gt;stackTrace&lt;/code&gt;. If &lt;code&gt;exception&lt;/code&gt; is omitted, it defaults to an &lt;a href=&quot;../httpexception-class&quot;&gt;HttpException&lt;/a&gt;, and if &lt;code&gt;stackTrace&lt;/code&gt; is omitted, it defaults to &lt;a href=&quot;../../dart-core/stacktrace/empty-constant&quot;&gt;StackTrace.empty&lt;/a&gt;.</source>
          <target state="translated">接続がまだ完了していない場合、要求は中止され、提供された &lt;code&gt;exception&lt;/code&gt; と &lt;code&gt;stackTrace&lt;/code&gt; を使用して、&lt;a href=&quot;done&quot;&gt;done&lt;/a&gt; future（&lt;a href=&quot;close&quot;&gt;close&lt;/a&gt;によっても返されます）が完了します。 &lt;code&gt;exception&lt;/code&gt; を省略した場合、デフォルトで&lt;a href=&quot;../httpexception-class&quot;&gt;HttpException&lt;/a&gt;になり、 &lt;code&gt;stackTrace&lt;/code&gt; を省略した場合、デフォルトで&lt;a href=&quot;../../dart-core/stacktrace/empty-constant&quot;&gt;StackTrace.emptyになり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="126d894c11e0729aa0d82fcb22c3b20afd5a4901" translate="yes" xml:space="preserve">
          <source>If the consumer stops listening because of some error preventing it from continuing, it may report this error in the returned future, otherwise it will just complete the future with &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">エラーのためにコンシューマーがリッスンを停止して続行できない場合、コンシューマーは返されたフューチャーでこのエラーを報告する場合があり &lt;code&gt;null&lt;/code&gt; 。それ以外の場合は、フューチャーがnullで完了するだけです。</target>
        </trans-unit>
        <trans-unit id="406d10a803028bfc3d6512614dc00cffdbd5b461" translate="yes" xml:space="preserve">
          <source>If the content is Base64 encoded, it will be decoded to bytes and then decoded to a string using &lt;code&gt;encoding&lt;/code&gt;. If encoding is omitted, the value of a &lt;code&gt;charset&lt;/code&gt; parameter is used if it is recognized by &lt;a href=&quot;../../dart-convert/encoding/getbyname&quot;&gt;Encoding.getByName&lt;/a&gt;, otherwise it defaults to the &lt;a href=&quot;../../dart-convert/ascii-constant&quot;&gt;ascii&lt;/a&gt; encoding, which is the default encoding for data URIs that do not specify an encoding.</source>
          <target state="translated">コンテンツがBase64でエンコードされている場合、バイトにデコードされてから、 &lt;code&gt;encoding&lt;/code&gt; を使用して文字列にデコードされます。エンコーディングが省略されている場合、&lt;a href=&quot;../../dart-convert/encoding/getbyname&quot;&gt;Encoding.getByName&lt;/a&gt;によって認識されると &lt;code&gt;charset&lt;/code&gt; パラメータの値が使用されます。それ以外の場合は、デフォルトで&lt;a href=&quot;../../dart-convert/ascii-constant&quot;&gt;ASCII&lt;/a&gt;エンコーディングに設定されます。これは、エンコーディングを指定しないデータURIのデフォルトのエンコーディングです。</target>
        </trans-unit>
        <trans-unit id="064bfca7a604d029636a7004d8a225fc96645b52" translate="yes" xml:space="preserve">
          <source>If the content is not Base64 encoded, it will first have percent-escapes converted to bytes and then the character codes and byte values are decoded using &lt;code&gt;encoding&lt;/code&gt;.</source>
          <target state="translated">コンテンツがBase64でエンコードされていない場合、最初にパーセントエスケープがバイトに変換され、次に &lt;code&gt;encoding&lt;/code&gt; を使用して文字コードとバイト値がデコードされます。</target>
        </trans-unit>
        <trans-unit id="86a7adabc10aabd96971adbb176b3aeae0afb375" translate="yes" xml:space="preserve">
          <source>If the content length needs to be set, it must be set before the body is written to. Setting the content length after writing to the body will throw a &lt;code&gt;StateError&lt;/code&gt;.</source>
          <target state="translated">コンテンツの長さを設定する必要がある場合は、本文を書き込む前に設定する必要があります。本文への書き込み後にコンテンツの長さを設定すると、 &lt;code&gt;StateError&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="aad31bc853e81022c3a90dab28608711a81384b0" translate="yes" xml:space="preserve">
          <source>If the content was changed and not only the attributes, &lt;a href=&quot;contentchanged&quot;&gt;contentChanged&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">属性だけでなくコンテンツが変更された場合、&lt;a href=&quot;contentchanged&quot;&gt;contentChanged&lt;/a&gt;は &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b7a8c6199ffe410724dbd229e7a32a0331d714a3" translate="yes" xml:space="preserve">
          <source>If the content was changed and not only the attributes, &lt;a href=&quot;filesystemmodifyevent/contentchanged&quot;&gt;contentChanged&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">属性だけでなくコンテンツが変更された場合、&lt;a href=&quot;filesystemmodifyevent/contentchanged&quot;&gt;contentChanged&lt;/a&gt;は &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="fa1c45d7b26672502f16a936c5937e5ea7044da2" translate="yes" xml:space="preserve">
          <source>If the context where the text will be inserted is known in more detail, it's possible to omit escaping some characters (like quotes when not inside an attribute value).</source>
          <target state="translated">テキストが挿入される文脈がより詳細に分かっている場合は、一部の文字(属性値の中にない場合の引用符のようなもの)をエスケープすることを省略することができます。</target>
        </trans-unit>
        <trans-unit id="6e328dae0b1cbe999c0302d61791fb59c4d2668b" translate="yes" xml:space="preserve">
          <source>If the controller is closed, the &quot;done&quot; event might not have been delivered yet, but it has been scheduled, and it is too late to add more events.</source>
          <target state="translated">コントローラが閉じている場合、「完了した」イベントはまだ配信されていないかもしれませんが、スケジュールされていて、イベントを追加するには遅すぎます。</target>
        </trans-unit>
        <trans-unit id="517648577c1e489f52905c1545de38fd78265431" translate="yes" xml:space="preserve">
          <source>If the conversion throws, or returns a value that is not directly serializable, a &lt;a href=&quot;../jsonunsupportedobjecterror-class&quot;&gt;JsonUnsupportedObjectError&lt;/a&gt; exception is thrown. If the call throws, the error is caught and stored in the &lt;a href=&quot;../jsonunsupportedobjecterror-class&quot;&gt;JsonUnsupportedObjectError&lt;/a&gt;'s &lt;code&gt;cause&lt;/code&gt; field.</source>
          <target state="translated">変換がスローするか、直接シリアル化できない値を返す場合、&lt;a href=&quot;../jsonunsupportedobjecterror-class&quot;&gt;JsonUnsupportedObjectError&lt;/a&gt;例外がスローされます。呼び出しがスローすると、エラーがキャッチされ、&lt;a href=&quot;../jsonunsupportedobjecterror-class&quot;&gt;JsonUnsupportedObjectError&lt;/a&gt;の &lt;code&gt;cause&lt;/code&gt; フィールドに格納されます。</target>
        </trans-unit>
        <trans-unit id="19177a0434532064ce856631dd6dafe2ee56c669" translate="yes" xml:space="preserve">
          <source>If the data is Base64 encoded, it will be decoded to bytes.</source>
          <target state="translated">データがBase64エンコードされている場合は、バイトにデコードされます。</target>
        </trans-unit>
        <trans-unit id="058bc39e38542e095dcf8c82b560a3f531e64628" translate="yes" xml:space="preserve">
          <source>If the data is not Base64 encoded, it will be decoded by unescaping percent-escaped characters and returning byte values of each unescaped character. The bytes will not be, e.g., UTF-8 decoded.</source>
          <target state="translated">データがBase64エンコードされていない場合は、パーセントエスケープされた文字をアンエスケープし、各アンエスケープされた文字のバイト値を返すことでデコードされます。バイトは、例えば UTF-8 デコードされたものではありません。</target>
        </trans-unit>
        <trans-unit id="5148d5f4af1ddee616b26f4d26d880114c4b6635" translate="yes" xml:space="preserve">
          <source>If the default validation behavior is too restrictive then a new NodeValidator should be created, either extending or wrapping a default validator and overriding the validation APIs.</source>
          <target state="translated">デフォルトのバリデーションの動作があまりにも制限されている場合は、新しいノードバリデータを作成し、デフォルトのバリデータを拡張するかラップしてバリデーションAPIをオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="d180cf1519d829408109a45697f947823cd22454" translate="yes" xml:space="preserve">
          <source>If the deprecated use is inside a library, class or method which is itself deprecated, the tool should not bother the user about it. A deprecated feature is expected to use other deprecated features.</source>
          <target state="translated">非推奨の使用が、それ自体が非推奨のライブラリ、クラス、メソッドの中にある場合、ツールはそれについてユーザを悩ませるべきではありません。非推奨の機能は、他の非推奨の機能を使うことが期待されます。</target>
        </trans-unit>
        <trans-unit id="2b2f366dffc131bf441ce2b1faa165ae87a7eb7c" translate="yes" xml:space="preserve">
          <source>If the directory cannot be created an exception is thrown.</source>
          <target state="translated">ディレクトリを作成できない場合は例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="40230ae10fcedfa285853c9b24a7b0ce48ec345a" translate="yes" xml:space="preserve">
          <source>If the distance between &lt;code&gt;a.x&lt;/code&gt; and &lt;code&gt;b.x&lt;/code&gt; is not representable (which can happen if one or both is a double), the actual right edge might be slightly off from &lt;code&gt;max(a.x, b.x)&lt;/code&gt;. Similar for the y-coordinates and the bottom edge.</source>
          <target state="translated">&lt;code&gt;a.x&lt;/code&gt; と &lt;code&gt;b.x&lt;/code&gt; 間の距離が表現できない場合（一方または両方がdoubleの場合に発生する可能性があります）、実際の右端が &lt;code&gt;max(a.x, b.x)&lt;/code&gt; からわずかにずれている可能性があります。Y座標と下端についても同様です。</target>
        </trans-unit>
        <trans-unit id="bb04b3974748fff8d8433aec016c37d7fdf30040" translate="yes" xml:space="preserve">
          <source>If the duration is 0 or less, it completes no sooner than in the next event-loop iteration, after all microtasks have run.</source>
          <target state="translated">持続時間が0以下の場合は、すべてのマイクロタスクが実行された後、次のイベントループの反復よりも早く終了しません。</target>
        </trans-unit>
        <trans-unit id="9bea27b6d6f02b28c1315e93ffff94f2add95ea3" translate="yes" xml:space="preserve">
          <source>If the element type is not nullable, &lt;code&gt;length&lt;/code&gt; must not be greater than zero.</source>
          <target state="translated">要素タイプがNULL可能でない場合、 &lt;code&gt;length&lt;/code&gt; はゼロより大きくてはなりません。</target>
        </trans-unit>
        <trans-unit id="8cc7c458440843c85fc8554ccf93ca98587d255c" translate="yes" xml:space="preserve">
          <source>If the element type is not nullable, omitting &lt;code&gt;fillValue&lt;/code&gt; or passing &lt;code&gt;null&lt;/code&gt; as &lt;code&gt;fillValue&lt;/code&gt; will make the &lt;code&gt;fillRange&lt;/code&gt; fail.</source>
          <target state="translated">要素タイプがnull許容でない場合、 &lt;code&gt;fillValue&lt;/code&gt; を省略するか、 &lt;code&gt;fillRange&lt;/code&gt; として &lt;code&gt;null&lt;/code&gt; を &lt;code&gt;fillValue&lt;/code&gt; と、fillRangeが失敗します。</target>
        </trans-unit>
        <trans-unit id="8cbfb0bc0cb83acdb01390c9d515053e7c1eb370" translate="yes" xml:space="preserve">
          <source>If the encoding is standardized, this is the lower-case version of one of the IANA official names for the character set (see &lt;a href=&quot;http://www.iana.org/assignments/character-sets/character-sets.xml&quot;&gt;http://www.iana.org/assignments/character-sets/character-sets.xml&lt;/a&gt;)</source>
          <target state="translated">エンコーディングが標準化されている場合、これは文字セットのIANA公式名の1つを小文字にしたものです（&lt;a href=&quot;http://www.iana.org/assignments/character-sets/character-sets.xml&quot;&gt;http://www.iana.org/assignments/character-sets/character-sets.xmlを参照&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="a8b7073960adf69cc906f74e26bd9ffd912a3297" translate="yes" xml:space="preserve">
          <source>If the encoding is standardized, this is the lower-case version of one of the IANA official names for the character set (see &lt;a href=&quot;https://www.iana.org/assignments/character-sets/character-sets.xml&quot;&gt;http://www.iana.org/assignments/character-sets/character-sets.xml&lt;/a&gt;)</source>
          <target state="translated">エンコーディングが標準化されている場合、これは文字セットのIANA公式名の1つの小文字バージョンです（&lt;a href=&quot;https://www.iana.org/assignments/character-sets/character-sets.xml&quot;&gt;http://www.iana.org/assignments/character-sets/character-sets.xmlを参照&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="ab926b9571934e69344f3f0b90f553e9f8155cb4" translate="yes" xml:space="preserve">
          <source>If the equality operator and &lt;a href=&quot;comparable/compareto&quot;&gt;compareTo&lt;/a&gt; disagree, the comparison operators should follow the equality operator, and will likely also disagree with &lt;a href=&quot;comparable/compareto&quot;&gt;compareTo&lt;/a&gt;. Otherwise they should match the &lt;a href=&quot;comparable/compareto&quot;&gt;compareTo&lt;/a&gt; method, so that &lt;code&gt;a &amp;lt; b&lt;/code&gt; iff &lt;code&gt;a.compareTo(b) &amp;lt; 0&lt;/code&gt;.</source>
          <target state="translated">等値演算子と&lt;a href=&quot;comparable/compareto&quot;&gt;compareToが&lt;/a&gt;一致しない場合、比較演算子は等値演算子の後に続く必要があり、&lt;a href=&quot;comparable/compareto&quot;&gt;compareTo&lt;/a&gt;とも一致しない可能性があります。それ以外の場合は、&lt;a href=&quot;comparable/compareto&quot;&gt;compareTo&lt;/a&gt;メソッドと一致する必要があるため、 &lt;code&gt;a &amp;lt; b&lt;/code&gt; iff &lt;code&gt;a.compareTo(b) &amp;lt; 0&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="257d799e66da54e0404672a4896362b5958484ff" translate="yes" xml:space="preserve">
          <source>If the equality relation used by the set is not identity, then the returned object may not be &lt;em&gt;identical&lt;/em&gt; to &lt;code&gt;object&lt;/code&gt;. Some set implementations may not be able to implement this method. If the &lt;a href=&quot;contains&quot;&gt;contains&lt;/a&gt; method is computed, rather than being based on an actual object instance, then there may not be a specific object instance representing the set element.</source>
          <target state="translated">セットで使用する等号関係がアイデンティティでない場合は、返されるオブジェクトは、できない場合があり&lt;em&gt;、同一&lt;/em&gt;の &lt;code&gt;object&lt;/code&gt; 。一部のセット実装では、このメソッドを実装できない場合があります。場合&lt;a href=&quot;contains&quot;&gt;含ま&lt;/a&gt;方法ではなく、実際のオブジェクトのインスタンスに基づいてされるよりも、計算され、次いで、セット要素を表す特定のオブジェクトインスタンスが存在しなくてもよいです。</target>
        </trans-unit>
        <trans-unit id="9ffb70ea0978a6589a07e568e80810763067896a" translate="yes" xml:space="preserve">
          <source>If the error is intercepted, the &lt;code&gt;onError&lt;/code&gt; function can decide what to do with it. It can throw if it wants to raise a new (or the same) error, or simply return to make this stream forget the error. If the received &lt;code&gt;error&lt;/code&gt; value is thrown again by the &lt;code&gt;onError&lt;/code&gt; function, it acts like a &lt;code&gt;rethrow&lt;/code&gt; and it is emitted along with its original stack trace, not the stack trace of the &lt;code&gt;throw&lt;/code&gt; inside &lt;code&gt;onError&lt;/code&gt;.</source>
          <target state="translated">エラーがインターセプトされた場合、 &lt;code&gt;onError&lt;/code&gt; 関数はそれをどう処理するかを決定できます。新しい（または同じ）エラーを発生させたい場合はスローするか、単に戻ってこのストリームにエラーを忘れさせます。受信した場合 &lt;code&gt;error&lt;/code&gt; 値は、再びスローさ &lt;code&gt;onError&lt;/code&gt; 機能、それはのような役割を果たし &lt;code&gt;rethrow&lt;/code&gt; し、それを元のスタックトレース、ないのスタックトレースと一緒に放出される &lt;code&gt;throw&lt;/code&gt; 内部 &lt;code&gt;onError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="466506800b166f395f0684d7769ae63ce0f1d24e" translate="yes" xml:space="preserve">
          <source>If the event is an error event or a done event, it is emitted directly by the returned stream.</source>
          <target state="translated">イベントがエラーイベントや完了イベントの場合は、返されたストリームから直接出力されます。</target>
        </trans-unit>
        <trans-unit id="9800e7ee977b2ed4fd6019e8ff49d4583ccde8e9" translate="yes" xml:space="preserve">
          <source>If the executable environment does not support &lt;a href=&quot;script&quot;&gt;script&lt;/a&gt;, the URI is empty.</source>
          <target state="translated">実行可能環境が&lt;a href=&quot;script&quot;&gt;scriptを&lt;/a&gt;サポートしていない場合、URIは空です。</target>
        </trans-unit>
        <trans-unit id="f836b951baca2c8b813d91fd2b928394d55c1013" translate="yes" xml:space="preserve">
          <source>If the expression evaluates to a result &lt;em&gt;r&lt;/em&gt;, this method returns the result of calling &lt;a href=&quot;../reflect&quot;&gt;reflect&lt;/a&gt;(&lt;em&gt;r&lt;/em&gt;).</source>
          <target state="translated">式が結果&lt;em&gt;rに&lt;/em&gt;評価される場合、このメソッドは、&lt;a href=&quot;../reflect&quot;&gt;reflect&lt;/a&gt;（&lt;em&gt;r&lt;/em&gt;）を呼び出した結果を返します。</target>
        </trans-unit>
        <trans-unit id="cda0c09089f2dac38ea7fcd0bc35e1d8cf3a4838" translate="yes" xml:space="preserve">
          <source>If the first event is an error, the returned future is completed with that error.</source>
          <target state="translated">最初のイベントがエラーの場合、返された未来はそのエラーで終了します。</target>
        </trans-unit>
        <trans-unit id="57eb70b3e2ccbeb3694d878bf4fb9d8f8a780637" translate="yes" xml:space="preserve">
          <source>If the first part of the data URI is empty, it defaults to &lt;code&gt;text/plain&lt;/code&gt;.</source>
          <target state="translated">データURIの最初の部分が空の場合、デフォルトは &lt;code&gt;text/plain&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4e3cbec8144140b64d992ee4552ad8018ffe6d0c" translate="yes" xml:space="preserve">
          <source>If the future never completes, the stream will not produce any events.</source>
          <target state="translated">未来が完成しなければ、ストリームではイベントは発生しません。</target>
        </trans-unit>
        <trans-unit id="5a036de858604409f7441944491ce7de4a9529b2" translate="yes" xml:space="preserve">
          <source>If the height or width of this canvas element is 0, then 'data:' is returned, representing no data.</source>
          <target state="translated">この canvas 要素の高さまたは幅が 0 の場合は、データがないことを表す 'data:' が返されます。</target>
        </trans-unit>
        <trans-unit id="9b497fb32bfd99060ba9c02efd52665452b136c3" translate="yes" xml:space="preserve">
          <source>If the hint can be parameterized, an extra &lt;a href=&quot;pragma/options&quot;&gt;options&lt;/a&gt; object can be added as well.</source>
          <target state="translated">ヒントをパラメーター化できる場合は、追加の&lt;a href=&quot;pragma/options&quot;&gt;オプション&lt;/a&gt;オブジェクトも追加できます。</target>
        </trans-unit>
        <trans-unit id="37c430a29af14f0256cf16c079d7dfe99a121001" translate="yes" xml:space="preserve">
          <source>If the host is an IP version 6 address, the surrounding &lt;code&gt;[&lt;/code&gt; and &lt;code&gt;]&lt;/code&gt; is removed.</source>
          <target state="translated">ホストがIPバージョン6アドレスの場合、周囲の &lt;code&gt;[&lt;/code&gt; および &lt;code&gt;]&lt;/code&gt; が削除されます。</target>
        </trans-unit>
        <trans-unit id="4a48113e333c1ecb67207d2b6519fa68ba7e28e2" translate="yes" xml:space="preserve">
          <source>If the image is larger than canvas will allow, the image will be clipped to fit the available space.</source>
          <target state="translated">画像がキャンバスの許容範囲よりも大きい場合は、画像は利用可能なスペースに合わせて切り取られます。</target>
        </trans-unit>
        <trans-unit id="83f1892bd08df7e44406b93e113ba647cec637c0" translate="yes" xml:space="preserve">
          <source>If the input fits in &lt;code&gt;width&lt;/code&gt; bits without truncation, the result is the same as the input. The minimum width needed to avoid truncation of &lt;code&gt;x&lt;/code&gt; is given by &lt;code&gt;x.bitLength&lt;/code&gt;, i.e.</source>
          <target state="translated">入力が切り捨てなしで &lt;code&gt;width&lt;/code&gt; ビットに収まる場合、結果は入力と同じです。 &lt;code&gt;x&lt;/code&gt; の切り捨てを回避するために必要な最小幅は、 &lt;code&gt;x.bitLength&lt;/code&gt; によって指定されます。つまり、</target>
        </trans-unit>
        <trans-unit id="b0bf247dd2c946af55e0e4614e193946b269b60a" translate="yes" xml:space="preserve">
          <source>If the input value fits in &lt;code&gt;width&lt;/code&gt; bits without truncation, the result is the same as the input. The minimum width needed to avoid truncation of &lt;code&gt;x&lt;/code&gt; is &lt;code&gt;x.bitLength + 1&lt;/code&gt;, i.e.</source>
          <target state="translated">入力値が切り捨てられずに &lt;code&gt;width&lt;/code&gt; ビットに収まる場合、結果は入力と同じです。 &lt;code&gt;x&lt;/code&gt; の切り捨てを回避するために必要な最小の幅は &lt;code&gt;x.bitLength + 1&lt;/code&gt; 。つまり、</target>
        </trans-unit>
        <trans-unit id="8b472a807395b535075d4c49e0a303ba3000ee74" translate="yes" xml:space="preserve">
          <source>If the invocation causes a compilation error the effect is the same as if a non-reflective compilation error had been encountered.</source>
          <target state="translated">呼び出しによってコンパイルエラーが発生した場合は、反射的ではないコンパイルエラーが発生した場合と同じ効果が得られます。</target>
        </trans-unit>
        <trans-unit id="38a243f1746755be72c50453290822b6baab2045" translate="yes" xml:space="preserve">
          <source>If the invocation causes a compilation error, the effect is the same as if a non-reflective compilation error had been encountered.</source>
          <target state="translated">呼び出しによってコンパイルエラーが発生した場合は、反射的ではないコンパイルエラーが発生した場合と同じ効果が得られます。</target>
        </trans-unit>
        <trans-unit id="f18c09ff63b4f1a61980447297699318bef37647" translate="yes" xml:space="preserve">
          <source>If the invocation returns a result &lt;em&gt;r&lt;/em&gt;, this method returns the result of calling &lt;a href=&quot;../reflect&quot;&gt;reflect&lt;/a&gt;(&lt;code&gt;value&lt;/code&gt;).</source>
          <target state="translated">呼び出しが結果&lt;em&gt;rを&lt;/em&gt;返す場合、このメソッドは、&lt;a href=&quot;../reflect&quot;&gt;reflect&lt;/a&gt;（ &lt;code&gt;value&lt;/code&gt; ）を呼び出した結果を返します。</target>
        </trans-unit>
        <trans-unit id="fa3e1b15b198fdc3a864112481cfd27624ed0344" translate="yes" xml:space="preserve">
          <source>If the invocation returns a result &lt;em&gt;r&lt;/em&gt;, this method returns the result of calling &lt;a href=&quot;../reflect&quot;&gt;reflect&lt;/a&gt;(&lt;em&gt;r&lt;/em&gt;).</source>
          <target state="translated">呼び出しが結果&lt;em&gt;rを&lt;/em&gt;返す場合、このメソッドは、&lt;a href=&quot;../reflect&quot;&gt;reflect&lt;/a&gt;（&lt;em&gt;r&lt;/em&gt;）を呼び出した結果を返します。</target>
        </trans-unit>
        <trans-unit id="e9620d99e5e8716a0d61577c5478f036ae046ac3" translate="yes" xml:space="preserve">
          <source>If the invocation throws an exception &lt;em&gt;e&lt;/em&gt; (that it does not catch) this method throws &lt;em&gt;e&lt;/em&gt;.</source>
          <target state="translated">呼び出しが例外&lt;em&gt;e&lt;/em&gt;（スローしない）をスローした場合、このメソッドは&lt;em&gt;eを&lt;/em&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="af3404d2a08237b04d42c799e32be415d47ec4f6" translate="yes" xml:space="preserve">
          <source>If the invocation throws an exception &lt;em&gt;e&lt;/em&gt; (that it does not catch), this method throws &lt;em&gt;e&lt;/em&gt;.</source>
          <target state="translated">呼び出しが例外&lt;em&gt;e&lt;/em&gt;（スローしない）をスローした場合、このメソッドは&lt;em&gt;eを&lt;/em&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="608c66f8af37fbf7f7c159f2ba0b1ef3d3abbf7c" translate="yes" xml:space="preserve">
          <source>If the invoked callback throws, the returned future is completed with the thrown error and a stack trace for the error. In the case of &lt;code&gt;onError&lt;/code&gt;, if the exception thrown is &lt;code&gt;identical&lt;/code&gt; to the error argument to &lt;code&gt;onError&lt;/code&gt;, the throw is considered a rethrow, and the original stack trace is used instead.</source>
          <target state="translated">呼び出されたコールバックがスローすると、返されたフューチャーはスローされたエラーとエラーのスタックトレースで完了します。以下の場合 &lt;code&gt;onError&lt;/code&gt; スローされた例外がある場合は、 &lt;code&gt;identical&lt;/code&gt; にエラー引数 &lt;code&gt;onError&lt;/code&gt; 、スローが再スローとみなされ、元のスタックトレースが代わりに使用されます。</target>
        </trans-unit>
        <trans-unit id="3e26fc733825800800fb548bbc0c6ca4062b40b0" translate="yes" xml:space="preserve">
          <source>If the isolate has terminated before it can receive this request, no exit message will be sent.</source>
          <target state="translated">このリクエストを受信する前にアイソレートが終了した場合、終了メッセージは送信されません。</target>
        </trans-unit>
        <trans-unit id="34e7d279664b164260bd6a903fc76aaa5fbb65c0" translate="yes" xml:space="preserve">
          <source>If the isolate is alive, it will eventually send &lt;code&gt;response&lt;/code&gt; (defaulting to &lt;code&gt;null&lt;/code&gt;) on the response port.</source>
          <target state="translated">アイソレートが生きている場合、最終的には応答ポートで &lt;code&gt;response&lt;/code&gt; （デフォルトでは &lt;code&gt;null&lt;/code&gt; ）を送信します。</target>
        </trans-unit>
        <trans-unit id="1fa7daa8e92bb4205c9f5d476f62a6d45ae23db8" translate="yes" xml:space="preserve">
          <source>If the isolate is spawned in a paused state, use this capability as argument to the &lt;a href=&quot;resume&quot;&gt;resume&lt;/a&gt; method in order to resume the paused isolate.</source>
          <target state="translated">分離が一時停止状態で生成された場合、この機能を&lt;a href=&quot;resume&quot;&gt;resume&lt;/a&gt;メソッドの引数として使用して、一時停止した分離を再開します。</target>
        </trans-unit>
        <trans-unit id="aaac39c8fb2d5c150cf749a049cb802f96e1baa6" translate="yes" xml:space="preserve">
          <source>If the isolate is using a &lt;a href=&quot;packageroot&quot;&gt;packageRoot&lt;/a&gt; or the isolate has not been setup for package resolution, this getter returns &lt;code&gt;null&lt;/code&gt;, otherwise it returns the package config URI.</source>
          <target state="translated">分離&lt;a href=&quot;packageroot&quot;&gt;プログラムがpackageRoot&lt;/a&gt;を使用しているか、分離プログラムがパッケージ解決用にセットアップされていない場合、このゲッターは &lt;code&gt;null&lt;/code&gt; を返します。それ以外の場合は、パッケージ構成URIを返します。</target>
        </trans-unit>
        <trans-unit id="be584f581af143b8010faf728e409736ca33f5b8" translate="yes" xml:space="preserve">
          <source>If the iterator has not yet been moved to the first element (&lt;a href=&quot;movenext&quot;&gt;moveNext&lt;/a&gt; has not been called yet), or if the iterator has been moved past the last element of the &lt;a href=&quot;../../dart-core/iterable-class&quot;&gt;Iterable&lt;/a&gt; (&lt;a href=&quot;movenext&quot;&gt;moveNext&lt;/a&gt; has returned false), then &lt;a href=&quot;current&quot;&gt;current&lt;/a&gt; is unspecified. An &lt;a href=&quot;../../dart-core/iterator-class&quot;&gt;Iterator&lt;/a&gt; may either throw or return an iterator specific default value in that case.</source>
          <target state="translated">イテレータがまだ最初の要素に移動されていない場合（&lt;a href=&quot;movenext&quot;&gt;moveNext&lt;/a&gt;がまだ呼び出されていない場合）、またはイテレータが&lt;a href=&quot;../../dart-core/iterable-class&quot;&gt;Iterableの&lt;/a&gt;最後の要素を超えて移動されている場合（&lt;a href=&quot;movenext&quot;&gt;moveNext&lt;/a&gt;がfalseを返している場合）、&lt;a href=&quot;current&quot;&gt;current&lt;/a&gt;は指定されていません。アン&lt;a href=&quot;../../dart-core/iterator-class&quot;&gt;イテレータは、&lt;/a&gt;どちらか投げるか、その場合にはイテレータ特定のデフォルト値を返すことがあります。</target>
        </trans-unit>
        <trans-unit id="a60d695f22499bed39f6538fba7e63c265e57320" translate="yes" xml:space="preserve">
          <source>If the iterator has not yet been moved to the first element (&lt;a href=&quot;movenext&quot;&gt;moveNext&lt;/a&gt; has not been called yet), or if the iterator has been moved past the last element of the &lt;a href=&quot;../iterable-class&quot;&gt;Iterable&lt;/a&gt; (&lt;a href=&quot;movenext&quot;&gt;moveNext&lt;/a&gt; has returned false), then &lt;a href=&quot;current&quot;&gt;current&lt;/a&gt; is unspecified. An &lt;a href=&quot;../iterator-class&quot;&gt;Iterator&lt;/a&gt; may either throw or return an iterator specific default value in that case.</source>
          <target state="translated">イテレータがまだ最初の要素に移動されていない場合（&lt;a href=&quot;movenext&quot;&gt;moveNext&lt;/a&gt;がまだ呼び出されていない場合）、またはイテレータが&lt;a href=&quot;../iterable-class&quot;&gt;Iterableの&lt;/a&gt;最後の要素を超えて移動されている場合（&lt;a href=&quot;movenext&quot;&gt;moveNext&lt;/a&gt;がfalseを返している場合）、&lt;a href=&quot;current&quot;&gt;current&lt;/a&gt;は指定されていません。アン&lt;a href=&quot;../iterator-class&quot;&gt;イテレータは、&lt;/a&gt;どちらか投げるか、その場合にはイテレータ特定のデフォルト値を返すことがあります。</target>
        </trans-unit>
        <trans-unit id="83faccf62b1a0f33cc06206e1ac8447c8991f45a" translate="yes" xml:space="preserve">
          <source>If the key is not present and &lt;code&gt;ifAbsent&lt;/code&gt; is provided, calls &lt;code&gt;ifAbsent&lt;/code&gt; and adds the key with the returned value to the map.</source>
          <target state="translated">キーが存在せず、 &lt;code&gt;ifAbsent&lt;/code&gt; が指定されている場合、 &lt;code&gt;ifAbsent&lt;/code&gt; を呼び出し、戻り値を含むキーをマップに追加します。</target>
        </trans-unit>
        <trans-unit id="bcd31e6bf8da3ef093b7df043835ee3c56b0a431" translate="yes" xml:space="preserve">
          <source>If the key is present, invokes &lt;code&gt;update&lt;/code&gt; with the current value and stores the new value in the map.</source>
          <target state="translated">キーが存在する場合、現在の値で &lt;code&gt;update&lt;/code&gt; を呼び出し、新しい値をマップに格納します。</target>
        </trans-unit>
        <trans-unit id="e4553146a41023139d6de122fa057484176c52ad" translate="yes" xml:space="preserve">
          <source>If the key was already in the map, its associated value is changed. Otherwise the key/value pair is added to the map.</source>
          <target state="translated">キーがすでにマップ内にある場合は、そのキーに関連付けられた値が変更されます。それ以外の場合は、キーと値のペアがマップに追加されます。</target>
        </trans-unit>
        <trans-unit id="0990e8387c2e430b3d4b2eaa6c0f667375afe091" translate="yes" xml:space="preserve">
          <source>If the library fails to load, the Future will complete with a DeferredLoadException.</source>
          <target state="translated">ライブラリのロードに失敗した場合、FutureはDeferredLoadExceptionで終了します。</target>
        </trans-unit>
        <trans-unit id="0f08c7d7a7cffb72d0482a98a157e7559f09ea9c" translate="yes" xml:space="preserve">
          <source>If the link does not exist, or is not a link, the future completes with a FileSystemException.</source>
          <target state="translated">リンクが存在しない場合や、リンクでない場合は、FileSystemExceptionで未来が終了します。</target>
        </trans-unit>
        <trans-unit id="c040048a286efde0ca0056822c3b3e6e06885e23" translate="yes" xml:space="preserve">
          <source>If the link does not exist, or is not a link, throws a FileSystemException.</source>
          <target state="translated">リンクが存在しない場合、またはリンクでない場合は、FileSystemExceptionをスローします。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
