<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="dart">
    <body>
      <group id="dart">
        <trans-unit id="4f48e811a81a1b7a287d49cbd850ec15525f8a96" translate="yes" xml:space="preserve">
          <source>TextAreaElement.name</source>
          <target state="translated">TextAreaElement.name</target>
        </trans-unit>
        <trans-unit id="42d153bb9e78e5ff1d8c92faf83d07c8005a8f3f" translate="yes" xml:space="preserve">
          <source>TextAreaElement.placeholder</source>
          <target state="translated">TextAreaElement.placeholder</target>
        </trans-unit>
        <trans-unit id="ec29a9f13843c80c745433dcd1bd4f1f2af02487" translate="yes" xml:space="preserve">
          <source>TextAreaElement.readOnly</source>
          <target state="translated">TextAreaElement.readOnly</target>
        </trans-unit>
        <trans-unit id="95ca9774b292ab8a8e876d4e98f7c000f4149705" translate="yes" xml:space="preserve">
          <source>TextAreaElement.reportValidity</source>
          <target state="translated">TextAreaElement.reportValidity</target>
        </trans-unit>
        <trans-unit id="d594026d658b15ee0b4eea4898d27b7fb7900921" translate="yes" xml:space="preserve">
          <source>TextAreaElement.required</source>
          <target state="translated">TextAreaElement.required</target>
        </trans-unit>
        <trans-unit id="d67f2669741295082df2fb43211070f0cb0d50b9" translate="yes" xml:space="preserve">
          <source>TextAreaElement.rows</source>
          <target state="translated">TextAreaElement.rows</target>
        </trans-unit>
        <trans-unit id="10735d1ed4af9ec820428ce01732d97edccb6e27" translate="yes" xml:space="preserve">
          <source>TextAreaElement.select</source>
          <target state="translated">TextAreaElement.select</target>
        </trans-unit>
        <trans-unit id="bf2f161a5353695cc1fab42acc708c9be6d80ade" translate="yes" xml:space="preserve">
          <source>TextAreaElement.selectionDirection</source>
          <target state="translated">TextAreaElement.selectionDirection</target>
        </trans-unit>
        <trans-unit id="195b5e83deb9a4048869fbc51bb52ce4252d1742" translate="yes" xml:space="preserve">
          <source>TextAreaElement.selectionEnd</source>
          <target state="translated">TextAreaElement.selectionEnd</target>
        </trans-unit>
        <trans-unit id="0206b051c5a8831b545a8915f97614f455e5af26" translate="yes" xml:space="preserve">
          <source>TextAreaElement.selectionStart</source>
          <target state="translated">TextAreaElement.selectionStart</target>
        </trans-unit>
        <trans-unit id="ec0f1fe0a8e63b3f653743fe4fb66e725cf76854" translate="yes" xml:space="preserve">
          <source>TextAreaElement.setCustomValidity</source>
          <target state="translated">TextAreaElement.setCustomValidity</target>
        </trans-unit>
        <trans-unit id="a5de110052df640e6cbd18ee0a9d15eebcefc885" translate="yes" xml:space="preserve">
          <source>TextAreaElement.setRangeText</source>
          <target state="translated">TextAreaElement.setRangeText</target>
        </trans-unit>
        <trans-unit id="66e584e6b99e4e00e3bfd0dfa40e856eff9fcdd2" translate="yes" xml:space="preserve">
          <source>TextAreaElement.setSelectionRange</source>
          <target state="translated">TextAreaElement.setSelectionRange</target>
        </trans-unit>
        <trans-unit id="dd48988172eae06380c649526eef3fae8ae122ae" translate="yes" xml:space="preserve">
          <source>TextAreaElement.textLength</source>
          <target state="translated">TextAreaElement.textLength</target>
        </trans-unit>
        <trans-unit id="afa6e1406a8bc8bc4b511305ad5b608ca4b5a332" translate="yes" xml:space="preserve">
          <source>TextAreaElement.type</source>
          <target state="translated">TextAreaElement.type</target>
        </trans-unit>
        <trans-unit id="eb401b6f53bdc5b5b5b917e013b573317cc9e3b8" translate="yes" xml:space="preserve">
          <source>TextAreaElement.validationMessage</source>
          <target state="translated">TextAreaElement.validationMessage</target>
        </trans-unit>
        <trans-unit id="8fa85f9c7f407b25770256d1990867617f0240c1" translate="yes" xml:space="preserve">
          <source>TextAreaElement.validity</source>
          <target state="translated">TextAreaElement.validity</target>
        </trans-unit>
        <trans-unit id="661611117efda66568aa45091cc7b329ff312464" translate="yes" xml:space="preserve">
          <source>TextAreaElement.value</source>
          <target state="translated">TextAreaElement.value</target>
        </trans-unit>
        <trans-unit id="cb47a26fd760ec08a6cf2e51a69908f4b5cf065b" translate="yes" xml:space="preserve">
          <source>TextAreaElement.willValidate</source>
          <target state="translated">TextAreaElement.willValidate</target>
        </trans-unit>
        <trans-unit id="e4e854a8a572572a794eabaf236be823ca980d87" translate="yes" xml:space="preserve">
          <source>TextAreaElement.wrap</source>
          <target state="translated">TextAreaElement.wrap</target>
        </trans-unit>
        <trans-unit id="3bb9e95b8112017920b5005ccf86da7f8051f880" translate="yes" xml:space="preserve">
          <source>TextContentElement</source>
          <target state="translated">TextContentElement</target>
        </trans-unit>
        <trans-unit id="7af59fdb98b83b60b53c9071534da84707644049" translate="yes" xml:space="preserve">
          <source>TextContentElement class</source>
          <target state="translated">TextContentElementクラス</target>
        </trans-unit>
        <trans-unit id="0af0ae6c366b0eba73e2d3030607419f10328ea2" translate="yes" xml:space="preserve">
          <source>TextContentElement class Null safety</source>
          <target state="translated">TextContentElement クラス Null 安全</target>
        </trans-unit>
        <trans-unit id="e1a06719f7b4d319b456f6685253dde5eec44f4f" translate="yes" xml:space="preserve">
          <source>TextContentElement.LENGTHADJUST_SPACING</source>
          <target state="translated">TextContentElement.LENGTHADJUST_SPACING</target>
        </trans-unit>
        <trans-unit id="e21806989fadee3ba09aad02a0c46e8fed289404" translate="yes" xml:space="preserve">
          <source>TextContentElement.LENGTHADJUST_SPACINGANDGLYPHS</source>
          <target state="translated">TextContentElement.LENGTHADJUST_SPACINGANDGLYPHS</target>
        </trans-unit>
        <trans-unit id="7746291c6c8ee417ad1ceb2792b40e3a8f39442c" translate="yes" xml:space="preserve">
          <source>TextContentElement.LENGTHADJUST_UNKNOWN</source>
          <target state="translated">TextContentElement.LENGTHADJUST_UNKNOWN</target>
        </trans-unit>
        <trans-unit id="07799e3dcfaa8eabfbcbd0c132202ee8f680c3a4" translate="yes" xml:space="preserve">
          <source>TextContentElement.TextContentElement.created</source>
          <target state="translated">TextContentElement.TextContentElement.created</target>
        </trans-unit>
        <trans-unit id="d05205e0940070b10aeeae1d972cd0d2318a5f57" translate="yes" xml:space="preserve">
          <source>TextContentElement.created constructor</source>
          <target state="translated">TextContentElement.created コンストラクタ</target>
        </trans-unit>
        <trans-unit id="03a04a2f99e40536a387843c14a8f63a6b08d373" translate="yes" xml:space="preserve">
          <source>TextContentElement.created constructor Null safety</source>
          <target state="translated">TextContentElement.created コンストラクタ Null 安全性</target>
        </trans-unit>
        <trans-unit id="da08bede3e72618e646e76a39aa09d8cd6ddd619" translate="yes" xml:space="preserve">
          <source>TextContentElement.created(</source>
          <target state="translated">TextContentElement.created(</target>
        </trans-unit>
        <trans-unit id="f2146532a4e239d6f42302ced0607137c7fd4843" translate="yes" xml:space="preserve">
          <source>TextContentElement.getCharNumAtPosition</source>
          <target state="translated">TextContentElement.getCharNumAtPosition</target>
        </trans-unit>
        <trans-unit id="38d8d3594f0540a3bddc5acbbf2fb37eeceff86d" translate="yes" xml:space="preserve">
          <source>TextContentElement.getComputedTextLength</source>
          <target state="translated">TextContentElement.getComputedTextLength</target>
        </trans-unit>
        <trans-unit id="35d41946e42e111ed0f36ba5047173643f1b22d9" translate="yes" xml:space="preserve">
          <source>TextContentElement.getEndPositionOfChar</source>
          <target state="translated">TextContentElement.getEndPositionOfChar</target>
        </trans-unit>
        <trans-unit id="c8b2736ee2059b270bff82c3fb70d18fd9312566" translate="yes" xml:space="preserve">
          <source>TextContentElement.getExtentOfChar</source>
          <target state="translated">TextContentElement.getExtentOfChar</target>
        </trans-unit>
        <trans-unit id="44fd40edeea2397d2e5be6aba4613761249ea226" translate="yes" xml:space="preserve">
          <source>TextContentElement.getNumberOfChars</source>
          <target state="translated">TextContentElement.getNumberOfChars</target>
        </trans-unit>
        <trans-unit id="51cafd907029590202a05dbda0dc38f16f3d0325" translate="yes" xml:space="preserve">
          <source>TextContentElement.getRotationOfChar</source>
          <target state="translated">TextContentElement.getRotationOfChar</target>
        </trans-unit>
        <trans-unit id="98c2a1518ae6b52189b1fb7bc4adc46d383c494b" translate="yes" xml:space="preserve">
          <source>TextContentElement.getStartPositionOfChar</source>
          <target state="translated">TextContentElement.getStartPositionOfChar</target>
        </trans-unit>
        <trans-unit id="b091b51f03d169763af45abddd6555a48bc5e04e" translate="yes" xml:space="preserve">
          <source>TextContentElement.getSubStringLength</source>
          <target state="translated">TextContentElement.getSubStringLength</target>
        </trans-unit>
        <trans-unit id="166f05bd76b98e74a395ec6cb474dfbd2f349599" translate="yes" xml:space="preserve">
          <source>TextContentElement.lengthAdjust</source>
          <target state="translated">TextContentElement.lengthAdjust</target>
        </trans-unit>
        <trans-unit id="06ee4a2f071a6927e5e23d5b5856284ecadb05fa" translate="yes" xml:space="preserve">
          <source>TextContentElement.selectSubString</source>
          <target state="translated">TextContentElement.selectSubString</target>
        </trans-unit>
        <trans-unit id="a976b131a586288522869c2d82ab406806d14e07" translate="yes" xml:space="preserve">
          <source>TextContentElement.textLength</source>
          <target state="translated">TextContentElement.textLength</target>
        </trans-unit>
        <trans-unit id="1f9c843675b421bd0e65e3049cf9a494e34a5b8c" translate="yes" xml:space="preserve">
          <source>TextDetector</source>
          <target state="translated">TextDetector</target>
        </trans-unit>
        <trans-unit id="ab0adcfbc1aeb245fb6946c3312fe17dfa23b06e" translate="yes" xml:space="preserve">
          <source>TextDetector class</source>
          <target state="translated">TextDetector クラス</target>
        </trans-unit>
        <trans-unit id="5fbdf30b29bfa2e4f7ba2b32e5f23af6467fde7f" translate="yes" xml:space="preserve">
          <source>TextDetector class Null safety</source>
          <target state="translated">TextDetector クラス Null 安全性</target>
        </trans-unit>
        <trans-unit id="8fe7610992d6679e684a3f173381efe7d30c22ef" translate="yes" xml:space="preserve">
          <source>TextDetector constructor</source>
          <target state="translated">TextDetector コンストラクタ</target>
        </trans-unit>
        <trans-unit id="10cc071349e0d46aad334b2f3ce17fcac612cba0" translate="yes" xml:space="preserve">
          <source>TextDetector constructor Null safety</source>
          <target state="translated">TextDetector コンストラクタ Null 安全性</target>
        </trans-unit>
        <trans-unit id="d5e49e88350e497b0a56e8d107727f75896b791c" translate="yes" xml:space="preserve">
          <source>TextDetector(</source>
          <target state="translated">TextDetector(</target>
        </trans-unit>
        <trans-unit id="cd37892738bbddb208793adf7d9257ad7cc10248" translate="yes" xml:space="preserve">
          <source>TextDetector.TextDetector</source>
          <target state="translated">TextDetector.TextDetector</target>
        </trans-unit>
        <trans-unit id="d7c56c176facbab17f4f3236ad82cbd7b5e97aa5" translate="yes" xml:space="preserve">
          <source>TextDetector.detect</source>
          <target state="translated">TextDetector.detect</target>
        </trans-unit>
        <trans-unit id="123d74f97a268500684c9fe231bd1e9c51afc4da" translate="yes" xml:space="preserve">
          <source>TextElement</source>
          <target state="translated">TextElement</target>
        </trans-unit>
        <trans-unit id="0925dfeba4940d53c425182e413c9a2d466ba313" translate="yes" xml:space="preserve">
          <source>TextElement class</source>
          <target state="translated">TextElement クラス</target>
        </trans-unit>
        <trans-unit id="89ebc03f5eb2752089fff598df5f55c2bb5e8fa6" translate="yes" xml:space="preserve">
          <source>TextElement class Null safety</source>
          <target state="translated">TextElement クラス Null 安全性</target>
        </trans-unit>
        <trans-unit id="b06313511e190249847103181a6ef321344c7914" translate="yes" xml:space="preserve">
          <source>TextElement constructor</source>
          <target state="translated">テキスト要素のコンストラクタ</target>
        </trans-unit>
        <trans-unit id="4e5a10dd3555e8d2d57ea4fd6f31814de86eaf80" translate="yes" xml:space="preserve">
          <source>TextElement constructor Null safety</source>
          <target state="translated">TextElement コンストラクタ Null 安全性</target>
        </trans-unit>
        <trans-unit id="1bf3f6dad90b605d94103d09336fb0de4d627d66" translate="yes" xml:space="preserve">
          <source>TextElement(</source>
          <target state="translated">TextElement(</target>
        </trans-unit>
        <trans-unit id="ba46b82f05cf851d815b629c4084c787d668cf5d" translate="yes" xml:space="preserve">
          <source>TextElement.TextElement</source>
          <target state="translated">TextElement.TextElement</target>
        </trans-unit>
        <trans-unit id="22873cd9b5a1d95f9a62946122c4b9083b60466e" translate="yes" xml:space="preserve">
          <source>TextElement.TextElement.created</source>
          <target state="translated">TextElement.TextElement.created</target>
        </trans-unit>
        <trans-unit id="ad0c0eb69767bd2fd6cadcc01ec27b72f19c8078" translate="yes" xml:space="preserve">
          <source>TextElement.created constructor</source>
          <target state="translated">TextElement.created コンストラクタ</target>
        </trans-unit>
        <trans-unit id="6fe79e52efae010ec4942653094610ad13dfa25a" translate="yes" xml:space="preserve">
          <source>TextElement.created constructor Null safety</source>
          <target state="translated">TextElement.created コンストラクタ Null 安全</target>
        </trans-unit>
        <trans-unit id="4fec9052bdbeea968d68f90da1325cdaf6426deb" translate="yes" xml:space="preserve">
          <source>TextElement.created(</source>
          <target state="translated">TextElement.created(</target>
        </trans-unit>
        <trans-unit id="80694b2807ac275fa1b332f2b5daf26e73cbdaf5" translate="yes" xml:space="preserve">
          <source>TextEvent</source>
          <target state="translated">TextEvent</target>
        </trans-unit>
        <trans-unit id="ffea3106f0a91b50e55fabecc55e3a453ef4ba70" translate="yes" xml:space="preserve">
          <source>TextEvent class</source>
          <target state="translated">TextEventクラス</target>
        </trans-unit>
        <trans-unit id="1a7fdecf6fb22c40ba15c019bc33ae7215925733" translate="yes" xml:space="preserve">
          <source>TextEvent class Null safety</source>
          <target state="translated">TextEvent クラス Null の安全性</target>
        </trans-unit>
        <trans-unit id="69f941db6bcff161f5dbe8a9b961b65162db106d" translate="yes" xml:space="preserve">
          <source>TextEvent constructor</source>
          <target state="translated">TextEvent コンストラクタ</target>
        </trans-unit>
        <trans-unit id="a8f65baa72e89533b41235e324e88506588a107c" translate="yes" xml:space="preserve">
          <source>TextEvent constructor Null safety</source>
          <target state="translated">TextEvent コンストラクタ Null 安全性</target>
        </trans-unit>
        <trans-unit id="bf189317ade0e261f172101c7345742a6204e2be" translate="yes" xml:space="preserve">
          <source>TextEvent(</source>
          <target state="translated">TextEvent(</target>
        </trans-unit>
        <trans-unit id="16c61ae4e5511332a4f183aee8038fcfea9088f1" translate="yes" xml:space="preserve">
          <source>TextEvent.TextEvent</source>
          <target state="translated">TextEvent.TextEvent</target>
        </trans-unit>
        <trans-unit id="bed7fe314f2c025a95395be5119fa2a106186c48" translate="yes" xml:space="preserve">
          <source>TextEvent.data</source>
          <target state="translated">TextEvent.data</target>
        </trans-unit>
        <trans-unit id="1226d087bbb6619e5521b963ae96248dbd51016d" translate="yes" xml:space="preserve">
          <source>TextInputElement</source>
          <target state="translated">TextInputElement</target>
        </trans-unit>
        <trans-unit id="103a8427d3df703055207b918924882fb6dcddde" translate="yes" xml:space="preserve">
          <source>TextInputElement class</source>
          <target state="translated">TextInputElement クラス</target>
        </trans-unit>
        <trans-unit id="c47db73f0c6ec23f6f236eb88a83d3cf0f34c7ee" translate="yes" xml:space="preserve">
          <source>TextInputElement class Null safety</source>
          <target state="translated">TextInputElement クラス Null 安全</target>
        </trans-unit>
        <trans-unit id="0645b7332cc0933886cb7122e0b15c6437d22836" translate="yes" xml:space="preserve">
          <source>TextInputElement constructor</source>
          <target state="translated">TextInputElementのコンストラクタ</target>
        </trans-unit>
        <trans-unit id="393bf7771270780607df575cba93302e3bb78a2a" translate="yes" xml:space="preserve">
          <source>TextInputElement constructor Null safety</source>
          <target state="translated">TextInputElement コンストラクタ Null 安全性</target>
        </trans-unit>
        <trans-unit id="a23d50d668ea0ce9209536ecccbd93c1cc38af2b" translate="yes" xml:space="preserve">
          <source>TextInputElement(</source>
          <target state="translated">TextInputElement(</target>
        </trans-unit>
        <trans-unit id="969aff55c08bb63643fa9b3322d580e054597976" translate="yes" xml:space="preserve">
          <source>TextInputElement.TextInputElement</source>
          <target state="translated">TextInputElement.TextInputElement</target>
        </trans-unit>
        <trans-unit id="b77809362b90f3733017aa73f4c5b9f80e2b09cc" translate="yes" xml:space="preserve">
          <source>TextInputElement.dirName</source>
          <target state="translated">TextInputElement.dirName</target>
        </trans-unit>
        <trans-unit id="ca3859e630038bb8818ca5ac88077d93a5251e02" translate="yes" xml:space="preserve">
          <source>TextInputElement.list</source>
          <target state="translated">TextInputElement.list</target>
        </trans-unit>
        <trans-unit id="476e3b2e637dcb1136165c9c299ea48b7ea32f0a" translate="yes" xml:space="preserve">
          <source>TextInputElementBase</source>
          <target state="translated">TextInputElementBase</target>
        </trans-unit>
        <trans-unit id="37de018cd1ac819e888385aba10342c28417269e" translate="yes" xml:space="preserve">
          <source>TextInputElementBase class</source>
          <target state="translated">TextInputElementBaseクラス</target>
        </trans-unit>
        <trans-unit id="1741d2e1ef4c2e608d504efcfe4073fe52b8a70e" translate="yes" xml:space="preserve">
          <source>TextInputElementBase class Null safety</source>
          <target state="translated">TextInputElementBase クラス Null 安全</target>
        </trans-unit>
        <trans-unit id="3daf021c19fb6afa2181d7071cd95c5589b5010b" translate="yes" xml:space="preserve">
          <source>TextInputElementBase constructor</source>
          <target state="translated">TextInputElementBase コンストラクタ</target>
        </trans-unit>
        <trans-unit id="c4d9f79a995fc1069076a5071eb3a267db628913" translate="yes" xml:space="preserve">
          <source>TextInputElementBase constructor Null safety</source>
          <target state="translated">TextInputElementBase コンストラクタ Null 安全性</target>
        </trans-unit>
        <trans-unit id="5975954b4a81bc60df92bbaac24a250c2f44e992" translate="yes" xml:space="preserve">
          <source>TextInputElementBase(</source>
          <target state="translated">TextInputElementBase(</target>
        </trans-unit>
        <trans-unit id="04141b983f667f814ece825d5a72da2ee68d2d68" translate="yes" xml:space="preserve">
          <source>TextInputElementBase.TextInputElementBase</source>
          <target state="translated">TextInputElementBase.TextInputElementBase</target>
        </trans-unit>
        <trans-unit id="d7f178d95fd4676c624e9e929c5645e11ff77d85" translate="yes" xml:space="preserve">
          <source>TextInputElementBase.autocomplete</source>
          <target state="translated">TextInputElementBase.autocomplete</target>
        </trans-unit>
        <trans-unit id="1747c0cd5ec0290d75c20c79a966e3758f87a22c" translate="yes" xml:space="preserve">
          <source>TextInputElementBase.maxLength</source>
          <target state="translated">TextInputElementBase.maxLength</target>
        </trans-unit>
        <trans-unit id="4493290e72d4d279b5876b74c20513fb630a1234" translate="yes" xml:space="preserve">
          <source>TextInputElementBase.pattern</source>
          <target state="translated">TextInputElementBase.pattern</target>
        </trans-unit>
        <trans-unit id="7201b14c723cce4efcfe488e54feba3e48374033" translate="yes" xml:space="preserve">
          <source>TextInputElementBase.placeholder</source>
          <target state="translated">TextInputElementBase.placeholder</target>
        </trans-unit>
        <trans-unit id="b34f12c5347db58b5ef0e0c45f523d3e318e33f6" translate="yes" xml:space="preserve">
          <source>TextInputElementBase.readOnly</source>
          <target state="translated">TextInputElementBase.readOnly</target>
        </trans-unit>
        <trans-unit id="af94cec87b48495a1353a483300539bca8e24345" translate="yes" xml:space="preserve">
          <source>TextInputElementBase.required</source>
          <target state="translated">TextInputElementBase.required</target>
        </trans-unit>
        <trans-unit id="c83ef55be0ac753f5ac0d60d59576a97c82ea195" translate="yes" xml:space="preserve">
          <source>TextInputElementBase.select</source>
          <target state="translated">TextInputElementBase.select</target>
        </trans-unit>
        <trans-unit id="19b1ebf81610ad404e6801137bc2e961d2f78375" translate="yes" xml:space="preserve">
          <source>TextInputElementBase.selectionDirection</source>
          <target state="translated">TextInputElementBase.selectionDirection</target>
        </trans-unit>
        <trans-unit id="e69fcd745432eb26efcd4ff1b02411102cff27f6" translate="yes" xml:space="preserve">
          <source>TextInputElementBase.selectionEnd</source>
          <target state="translated">TextInputElementBase.selectionEnd</target>
        </trans-unit>
        <trans-unit id="202788a310c6921b1a554ffb337c83aeb33a5845" translate="yes" xml:space="preserve">
          <source>TextInputElementBase.selectionStart</source>
          <target state="translated">TextInputElementBase.selectionStart</target>
        </trans-unit>
        <trans-unit id="b3bcb52a26306522e4588adf472515da8bbb601b" translate="yes" xml:space="preserve">
          <source>TextInputElementBase.setSelectionRange</source>
          <target state="translated">TextInputElementBase.setSelectionRange</target>
        </trans-unit>
        <trans-unit id="06ec2323348011ec895fc8ea9759b87387e58c01" translate="yes" xml:space="preserve">
          <source>TextInputElementBase.size</source>
          <target state="translated">TextInputElementBase.size</target>
        </trans-unit>
        <trans-unit id="06d4a26dfeb6fe515c1bd30f6921c66e729ad5b4" translate="yes" xml:space="preserve">
          <source>TextMetrics</source>
          <target state="translated">TextMetrics</target>
        </trans-unit>
        <trans-unit id="75e3dfdfcf06a145ba8dfc75f11e4939186d9aa2" translate="yes" xml:space="preserve">
          <source>TextMetrics class</source>
          <target state="translated">TextMetrics クラス</target>
        </trans-unit>
        <trans-unit id="8c298b1c7d367b433e2658bf7809dff10968eba8" translate="yes" xml:space="preserve">
          <source>TextMetrics class Null safety</source>
          <target state="translated">TextMetrics クラス Null 安全性</target>
        </trans-unit>
        <trans-unit id="1d180a6bd802326a343a9dec172ad00d1bd63cd4" translate="yes" xml:space="preserve">
          <source>TextMetrics.actualBoundingBoxAscent</source>
          <target state="translated">TextMetrics.actualBoundingBoxAscent</target>
        </trans-unit>
        <trans-unit id="fd203de64e48eed835f71537f9d7cfdbae52c8ee" translate="yes" xml:space="preserve">
          <source>TextMetrics.actualBoundingBoxDescent</source>
          <target state="translated">TextMetrics.actualBoundingBoxDescent</target>
        </trans-unit>
        <trans-unit id="cafbe2170fdceed47de2d5ea654ae857f9626e93" translate="yes" xml:space="preserve">
          <source>TextMetrics.actualBoundingBoxLeft</source>
          <target state="translated">TextMetrics.actualBoundingBoxLeft</target>
        </trans-unit>
        <trans-unit id="c73a20980b7f95ea1698aefd53a862efae2917a1" translate="yes" xml:space="preserve">
          <source>TextMetrics.actualBoundingBoxRight</source>
          <target state="translated">TextMetrics.actualBoundingBoxRight</target>
        </trans-unit>
        <trans-unit id="7ba9e8d7c6e3d714cd190d1ecfc1ef35a79728d2" translate="yes" xml:space="preserve">
          <source>TextMetrics.alphabeticBaseline</source>
          <target state="translated">TextMetrics.alphabeticBaseline</target>
        </trans-unit>
        <trans-unit id="d19ccbc45e424907c9ee28933618e60b20b5bb08" translate="yes" xml:space="preserve">
          <source>TextMetrics.emHeightAscent</source>
          <target state="translated">TextMetrics.emHeightAscent</target>
        </trans-unit>
        <trans-unit id="84201db8615367e34ddc417b9618f486300b2635" translate="yes" xml:space="preserve">
          <source>TextMetrics.emHeightDescent</source>
          <target state="translated">TextMetrics.emHeightDescent</target>
        </trans-unit>
        <trans-unit id="7c08498f8967ae918c77d78cdf48a141a781d055" translate="yes" xml:space="preserve">
          <source>TextMetrics.fontBoundingBoxAscent</source>
          <target state="translated">TextMetrics.fontBoundingBoxAscent</target>
        </trans-unit>
        <trans-unit id="53e567eb9aa47859b163b503a4a3b90b9c78fbe6" translate="yes" xml:space="preserve">
          <source>TextMetrics.fontBoundingBoxDescent</source>
          <target state="translated">TextMetrics.fontBoundingBoxDescent</target>
        </trans-unit>
        <trans-unit id="fb21ac3df438bd7833a2ee766de108ae2b04d572" translate="yes" xml:space="preserve">
          <source>TextMetrics.hangingBaseline</source>
          <target state="translated">TextMetrics.hangingBaseline</target>
        </trans-unit>
        <trans-unit id="afb50595ee45198639a30e1676900c2a1dfc90a2" translate="yes" xml:space="preserve">
          <source>TextMetrics.ideographicBaseline</source>
          <target state="translated">TextMetrics.ideographicBaseline</target>
        </trans-unit>
        <trans-unit id="455c83ef2b76f0a9f28b7ab7e1380b025cd4178c" translate="yes" xml:space="preserve">
          <source>TextMetrics.width</source>
          <target state="translated">TextMetrics.width</target>
        </trans-unit>
        <trans-unit id="ac450731b131a99f0997923cef7dae4f7cdefbed" translate="yes" xml:space="preserve">
          <source>TextPathElement</source>
          <target state="translated">TextPathElement</target>
        </trans-unit>
        <trans-unit id="cb04a14d29c2ec9f7ab926ab3dd9638b1bbb4f71" translate="yes" xml:space="preserve">
          <source>TextPathElement class</source>
          <target state="translated">TextPathElement クラス</target>
        </trans-unit>
        <trans-unit id="12620e5e4ba21a9ad374c24bda9c3221dec1c0e8" translate="yes" xml:space="preserve">
          <source>TextPathElement class Null safety</source>
          <target state="translated">TextPathElement クラス Null 安全</target>
        </trans-unit>
        <trans-unit id="1bfeb86eb421192d7e937631d11bc284f5c6fcda" translate="yes" xml:space="preserve">
          <source>TextPathElement.TEXTPATH_METHODTYPE_ALIGN</source>
          <target state="translated">TextPathElement.TEXTPATH_METHODTYPE_ALIGN</target>
        </trans-unit>
        <trans-unit id="398ad9d9c4b57ea28ba3d4c8af71ea12caee890e" translate="yes" xml:space="preserve">
          <source>TextPathElement.TEXTPATH_METHODTYPE_STRETCH</source>
          <target state="translated">TextPathElement.TEXTPATH_METHODTYPE_STRETCH</target>
        </trans-unit>
        <trans-unit id="2f012f5534c9e741ddc1dd20e6ba18c0dccb1cb2" translate="yes" xml:space="preserve">
          <source>TextPathElement.TEXTPATH_METHODTYPE_UNKNOWN</source>
          <target state="translated">TextPathElement.TEXTPATH_METHODTYPE_UNKNOWN</target>
        </trans-unit>
        <trans-unit id="0a8349b07b073a2c51d1a5435af16eca19e6855b" translate="yes" xml:space="preserve">
          <source>TextPathElement.TEXTPATH_SPACINGTYPE_AUTO</source>
          <target state="translated">TextPathElement.TEXTPATH_SPACINGTYPE_AUTO</target>
        </trans-unit>
        <trans-unit id="698247aeebf9d06948f9ff1b4bd4d0180c9cfe32" translate="yes" xml:space="preserve">
          <source>TextPathElement.TEXTPATH_SPACINGTYPE_EXACT</source>
          <target state="translated">TextPathElement.TEXTPATH_SPACINGTYPE_EXACT</target>
        </trans-unit>
        <trans-unit id="4e8aa5d6e8897f8ef0c96155a86e7415476db523" translate="yes" xml:space="preserve">
          <source>TextPathElement.TEXTPATH_SPACINGTYPE_UNKNOWN</source>
          <target state="translated">TextPathElement.TEXTPATH_SPACINGTYPE_UNKNOWN</target>
        </trans-unit>
        <trans-unit id="be7114c51e365063c3659280d6d03b848b039ba6" translate="yes" xml:space="preserve">
          <source>TextPathElement.TextPathElement.created</source>
          <target state="translated">TextPathElement.TextPathElement.created</target>
        </trans-unit>
        <trans-unit id="49b76cfafbe2145e5f7a6e53d5c72f35fbbb57d9" translate="yes" xml:space="preserve">
          <source>TextPathElement.created constructor</source>
          <target state="translated">TextPathElement.created コンストラクタ</target>
        </trans-unit>
        <trans-unit id="463ba027a4f6d9c88396cd44cd0d2e512d8e9db9" translate="yes" xml:space="preserve">
          <source>TextPathElement.created constructor Null safety</source>
          <target state="translated">TextPathElement.created コンストラクタ Null 安全性</target>
        </trans-unit>
        <trans-unit id="d59e8ca26c5cfa12a3f201169173c8f4f9cffdd3" translate="yes" xml:space="preserve">
          <source>TextPathElement.created(</source>
          <target state="translated">TextPathElement.created(</target>
        </trans-unit>
        <trans-unit id="73df7622095e478deb87b8cda0da56ec5368f048" translate="yes" xml:space="preserve">
          <source>TextPathElement.href</source>
          <target state="translated">TextPathElement.href</target>
        </trans-unit>
        <trans-unit id="1e231a023f51fb19f17aca05a0ac594126670d66" translate="yes" xml:space="preserve">
          <source>TextPathElement.method</source>
          <target state="translated">TextPathElement.method</target>
        </trans-unit>
        <trans-unit id="fcbfdd919379a11223faa3fc0b58a2a85b39245f" translate="yes" xml:space="preserve">
          <source>TextPathElement.spacing</source>
          <target state="translated">TextPathElement.spacing</target>
        </trans-unit>
        <trans-unit id="0eacdeab36e1ab5f673e085ed30c825b91d97e20" translate="yes" xml:space="preserve">
          <source>TextPathElement.startOffset</source>
          <target state="translated">TextPathElement.startOffset</target>
        </trans-unit>
        <trans-unit id="98513889f3760db4255c4fb144ba683a33d65937" translate="yes" xml:space="preserve">
          <source>TextPositioningElement</source>
          <target state="translated">TextPositioningElement</target>
        </trans-unit>
        <trans-unit id="89542701c652a6788d51992b10b05acf8b041440" translate="yes" xml:space="preserve">
          <source>TextPositioningElement class</source>
          <target state="translated">TextPositioningElementクラス</target>
        </trans-unit>
        <trans-unit id="0830be1b221713d2fc4ecf4ffc63945c35ce6615" translate="yes" xml:space="preserve">
          <source>TextPositioningElement class Null safety</source>
          <target state="translated">TextPositioningElement クラス Null 安全</target>
        </trans-unit>
        <trans-unit id="c5507a8e703a0696dd1984ae387e970c912e4a3b" translate="yes" xml:space="preserve">
          <source>TextPositioningElement.TextPositioningElement.created</source>
          <target state="translated">TextPositioningElement.TextPositioningElement.created</target>
        </trans-unit>
        <trans-unit id="14417835a7c8d7575ee55be173b8fe7973c7f7ea" translate="yes" xml:space="preserve">
          <source>TextPositioningElement.created constructor</source>
          <target state="translated">TextPositioningElement.created コンストラクタ</target>
        </trans-unit>
        <trans-unit id="0d01ed693de5abd59219d3f50421be4999080fae" translate="yes" xml:space="preserve">
          <source>TextPositioningElement.created constructor Null safety</source>
          <target state="translated">TextPositioningElement.created コンストラクタ Null 安全性</target>
        </trans-unit>
        <trans-unit id="97c804e762a231579ff00b2d56cb01d465044576" translate="yes" xml:space="preserve">
          <source>TextPositioningElement.created(</source>
          <target state="translated">TextPositioningElement.created(</target>
        </trans-unit>
        <trans-unit id="deebe0a2378c1ee12a51b328d40a7581a095a381" translate="yes" xml:space="preserve">
          <source>TextPositioningElement.dx</source>
          <target state="translated">TextPositioningElement.dx</target>
        </trans-unit>
        <trans-unit id="12c5f4d2a36c73e7aa6d93b612f2667b3baa1a85" translate="yes" xml:space="preserve">
          <source>TextPositioningElement.dy</source>
          <target state="translated">TextPositioningElement.dy</target>
        </trans-unit>
        <trans-unit id="af6a8eb9514c3a7e1b0298c2ae9f33c82e1e6f02" translate="yes" xml:space="preserve">
          <source>TextPositioningElement.rotate</source>
          <target state="translated">TextPositioningElement.rotate</target>
        </trans-unit>
        <trans-unit id="fc578c954b453a64ba9330d19f6c8513cfaacf8d" translate="yes" xml:space="preserve">
          <source>TextPositioningElement.x</source>
          <target state="translated">TextPositioningElement.x</target>
        </trans-unit>
        <trans-unit id="988798c6435aa7772eab160c874a811953d18a48" translate="yes" xml:space="preserve">
          <source>TextPositioningElement.y</source>
          <target state="translated">TextPositioningElement.y</target>
        </trans-unit>
        <trans-unit id="8bbddfa7a66f14d6d967a24e549d97335b814ef7" translate="yes" xml:space="preserve">
          <source>TextTrack</source>
          <target state="translated">TextTrack</target>
        </trans-unit>
        <trans-unit id="7d7acbb06bf6a0bce5d7438b99e987ef700d0fb0" translate="yes" xml:space="preserve">
          <source>TextTrack class</source>
          <target state="translated">テキストトラッククラス</target>
        </trans-unit>
        <trans-unit id="584784a7dc4dceaaf62c76c261d3925bf48c9586" translate="yes" xml:space="preserve">
          <source>TextTrack class Null safety</source>
          <target state="translated">TextTrackクラスNullの安全性</target>
        </trans-unit>
        <trans-unit id="57d16790a8d6a8dde7c0d0b1901a730a89f47cc7" translate="yes" xml:space="preserve">
          <source>TextTrack.activeCues</source>
          <target state="translated">TextTrack.activeCues</target>
        </trans-unit>
        <trans-unit id="ac181735bba249870d02bd7b4b5c326f8252df90" translate="yes" xml:space="preserve">
          <source>TextTrack.addCue</source>
          <target state="translated">TextTrack.addCue</target>
        </trans-unit>
        <trans-unit id="e8627a09923a347bca098b2ea94b2b6aa13df6e5" translate="yes" xml:space="preserve">
          <source>TextTrack.cueChangeEvent</source>
          <target state="translated">TextTrack.cueChangeEvent</target>
        </trans-unit>
        <trans-unit id="5532f222c6a5a22893b5eb96b6941968e56414c1" translate="yes" xml:space="preserve">
          <source>TextTrack.cues</source>
          <target state="translated">TextTrack.cues</target>
        </trans-unit>
        <trans-unit id="b440d711448dd0ceb1d385a89e6f54d39af55701" translate="yes" xml:space="preserve">
          <source>TextTrack.id</source>
          <target state="translated">TextTrack.id</target>
        </trans-unit>
        <trans-unit id="1ea2baef734c5562da160c9f2c7d9874af119723" translate="yes" xml:space="preserve">
          <source>TextTrack.kind</source>
          <target state="translated">TextTrack.kind</target>
        </trans-unit>
        <trans-unit id="7651d565784ccb3c80bc52207efd284f688338d7" translate="yes" xml:space="preserve">
          <source>TextTrack.label</source>
          <target state="translated">TextTrack.label</target>
        </trans-unit>
        <trans-unit id="f71bd18cf3211c7cfefbb86b5c084e9a5ceb1490" translate="yes" xml:space="preserve">
          <source>TextTrack.language</source>
          <target state="translated">TextTrack.language</target>
        </trans-unit>
        <trans-unit id="2a5d3d9df1b6a4502e654ad9559dc8b170215125" translate="yes" xml:space="preserve">
          <source>TextTrack.mode</source>
          <target state="translated">TextTrack.mode</target>
        </trans-unit>
        <trans-unit id="d310f3ba16b53b8bdbb1a8d4d02dea14fca0e5d0" translate="yes" xml:space="preserve">
          <source>TextTrack.onCueChange</source>
          <target state="translated">TextTrack.onCueChange</target>
        </trans-unit>
        <trans-unit id="7aeceff8f14e131ca220182da956f0620bb2ab19" translate="yes" xml:space="preserve">
          <source>TextTrack.removeCue</source>
          <target state="translated">TextTrack.removeCue</target>
        </trans-unit>
        <trans-unit id="44dd580697bf26d1d8d5bf3ad0bfd661986a9866" translate="yes" xml:space="preserve">
          <source>TextTrackCue</source>
          <target state="translated">TextTrackCue</target>
        </trans-unit>
        <trans-unit id="7e1f121d1d6d4c22ae2cc2190e5c4199771f77b0" translate="yes" xml:space="preserve">
          <source>TextTrackCue class</source>
          <target state="translated">TextTrackCue クラス</target>
        </trans-unit>
        <trans-unit id="a77dc9e56aa552853e628e4dd8f20f5532fff7b1" translate="yes" xml:space="preserve">
          <source>TextTrackCue class Null safety</source>
          <target state="translated">TextTrackCue クラス Null 安全性</target>
        </trans-unit>
        <trans-unit id="b3cd0b7e3beec39a43ae9067a81877b82c704c47" translate="yes" xml:space="preserve">
          <source>TextTrackCue.endTime</source>
          <target state="translated">TextTrackCue.endTime</target>
        </trans-unit>
        <trans-unit id="92a321c873d9d78220f6a17da4ad1bb93f576438" translate="yes" xml:space="preserve">
          <source>TextTrackCue.enterEvent</source>
          <target state="translated">TextTrackCue.enterEvent</target>
        </trans-unit>
        <trans-unit id="6330f46689ba2cfbfc8011a0cf5d668b88cba978" translate="yes" xml:space="preserve">
          <source>TextTrackCue.exitEvent</source>
          <target state="translated">TextTrackCue.exitEvent</target>
        </trans-unit>
        <trans-unit id="1609bc70dc3e0255463afe9821089e24e71e2231" translate="yes" xml:space="preserve">
          <source>TextTrackCue.id</source>
          <target state="translated">TextTrackCue.id</target>
        </trans-unit>
        <trans-unit id="97c81cf108207b3d520995292d800a3ea2410288" translate="yes" xml:space="preserve">
          <source>TextTrackCue.onEnter</source>
          <target state="translated">TextTrackCue.onEnter</target>
        </trans-unit>
        <trans-unit id="8d19bda2a82a62b4fe122758207e7c77319118f8" translate="yes" xml:space="preserve">
          <source>TextTrackCue.onExit</source>
          <target state="translated">TextTrackCue.onExit</target>
        </trans-unit>
        <trans-unit id="323eef5a4a58b397ef8fc887f0819709bfe71475" translate="yes" xml:space="preserve">
          <source>TextTrackCue.pauseOnExit</source>
          <target state="translated">TextTrackCue.pauseOnExit</target>
        </trans-unit>
        <trans-unit id="c0ac7a19b1ef07f808af457edc55b88836721fce" translate="yes" xml:space="preserve">
          <source>TextTrackCue.startTime</source>
          <target state="translated">TextTrackCue.startTime</target>
        </trans-unit>
        <trans-unit id="12c3fe04c322870a449ae9f053b336d77810a5e5" translate="yes" xml:space="preserve">
          <source>TextTrackCue.track</source>
          <target state="translated">TextTrackCue.track</target>
        </trans-unit>
        <trans-unit id="0c0a3e3c79ed645faf27df5d40c7372e38f10e27" translate="yes" xml:space="preserve">
          <source>TextTrackCueList</source>
          <target state="translated">TextTrackCueList</target>
        </trans-unit>
        <trans-unit id="02201dc1d32a938c63b3aaaf308de028fba195fd" translate="yes" xml:space="preserve">
          <source>TextTrackCueList class</source>
          <target state="translated">TextTrackCueList クラス</target>
        </trans-unit>
        <trans-unit id="01f683c04b30794479708eac8075eb79fb7b65bc" translate="yes" xml:space="preserve">
          <source>TextTrackCueList class Null safety</source>
          <target state="translated">TextTrackCueList クラス Null 安全性</target>
        </trans-unit>
        <trans-unit id="9e46a3211a3e0debe1ba33857cbfebe1ce35ac93" translate="yes" xml:space="preserve">
          <source>TextTrackCueList.elementAt</source>
          <target state="translated">TextTrackCueList.elementAt</target>
        </trans-unit>
        <trans-unit id="d63f64fe3b5d17133935cc7bc9436448b907eb2a" translate="yes" xml:space="preserve">
          <source>TextTrackCueList.first</source>
          <target state="translated">TextTrackCueList.first</target>
        </trans-unit>
        <trans-unit id="7ca0bc03b5736e0c6f32487371d75d4035de69f6" translate="yes" xml:space="preserve">
          <source>TextTrackCueList.getCueById</source>
          <target state="translated">TextTrackCueList.getCueById</target>
        </trans-unit>
        <trans-unit id="703b1f39e190832560af8d049f423ab52fa936c5" translate="yes" xml:space="preserve">
          <source>TextTrackCueList.last</source>
          <target state="translated">TextTrackCueList.last</target>
        </trans-unit>
        <trans-unit id="1018339b499fb401028fefe122554a7d42d789cb" translate="yes" xml:space="preserve">
          <source>TextTrackCueList.length</source>
          <target state="translated">TextTrackCueList.length</target>
        </trans-unit>
        <trans-unit id="4504a644ed0c097be3431913b29aecc4d33cbc22" translate="yes" xml:space="preserve">
          <source>TextTrackCueList.operator []</source>
          <target state="translated">TextTrackCueList.operator []</target>
        </trans-unit>
        <trans-unit id="62b801e934ab0e0c392838ca6c95e862cbcc5452" translate="yes" xml:space="preserve">
          <source>TextTrackCueList.operator []=</source>
          <target state="translated">TextTrackCueList.operator []=</target>
        </trans-unit>
        <trans-unit id="f7db3d8699ec939afc22925bec7f9d228df7b9a7" translate="yes" xml:space="preserve">
          <source>TextTrackCueList.single</source>
          <target state="translated">TextTrackCueList.single</target>
        </trans-unit>
        <trans-unit id="b78226e90fe077a9f1354f7f27409bd755d851f7" translate="yes" xml:space="preserve">
          <source>TextTrackList</source>
          <target state="translated">TextTrackList</target>
        </trans-unit>
        <trans-unit id="43c7b10fd6301556ab1ec7a93e1da1f0768d0c54" translate="yes" xml:space="preserve">
          <source>TextTrackList class</source>
          <target state="translated">TextTrackList クラス</target>
        </trans-unit>
        <trans-unit id="b814385e34231d86ee0af95f6df3908f2a1aa847" translate="yes" xml:space="preserve">
          <source>TextTrackList class Null safety</source>
          <target state="translated">TextTrackList クラス Null 安全性</target>
        </trans-unit>
        <trans-unit id="1c94815d0fd0030593e25b64f572d2e2d95a0375" translate="yes" xml:space="preserve">
          <source>TextTrackList.addTrackEvent</source>
          <target state="translated">TextTrackList.addTrackEvent</target>
        </trans-unit>
        <trans-unit id="3e0b8d00f17313faf92201ab9e789a62e12531f1" translate="yes" xml:space="preserve">
          <source>TextTrackList.changeEvent</source>
          <target state="translated">TextTrackList.changeEvent</target>
        </trans-unit>
        <trans-unit id="46171309f0491f68d4785c7ceaa0513a333a60f2" translate="yes" xml:space="preserve">
          <source>TextTrackList.elementAt</source>
          <target state="translated">TextTrackList.elementAt</target>
        </trans-unit>
        <trans-unit id="9133ac871e963913c8582041dd72f45f1e9c2b4e" translate="yes" xml:space="preserve">
          <source>TextTrackList.first</source>
          <target state="translated">TextTrackList.first</target>
        </trans-unit>
        <trans-unit id="ad23104741f2445f5414546b6e01739a0bab6614" translate="yes" xml:space="preserve">
          <source>TextTrackList.getTrackById</source>
          <target state="translated">TextTrackList.getTrackById</target>
        </trans-unit>
        <trans-unit id="e1c1c81a9fc1dca66ad5014c5a2b1045a216be5c" translate="yes" xml:space="preserve">
          <source>TextTrackList.last</source>
          <target state="translated">TextTrackList.last</target>
        </trans-unit>
        <trans-unit id="e040f7c5d120a425d7e9969dd517964e84af6f46" translate="yes" xml:space="preserve">
          <source>TextTrackList.length</source>
          <target state="translated">TextTrackList.length</target>
        </trans-unit>
        <trans-unit id="2389a1c855c1098dc0bccf9181db6968024201f6" translate="yes" xml:space="preserve">
          <source>TextTrackList.onAddTrack</source>
          <target state="translated">TextTrackList.onAddTrack</target>
        </trans-unit>
        <trans-unit id="6eb2c6158b1f04c7460dd9ab91be65b1c3b77951" translate="yes" xml:space="preserve">
          <source>TextTrackList.onChange</source>
          <target state="translated">TextTrackList.onChange</target>
        </trans-unit>
        <trans-unit id="9c7a9022ec0776700e8e407a6cbf1182ffa518b5" translate="yes" xml:space="preserve">
          <source>TextTrackList.operator []</source>
          <target state="translated">TextTrackList.operator []</target>
        </trans-unit>
        <trans-unit id="e01c1717f668a08175755431af0f73ee124bce35" translate="yes" xml:space="preserve">
          <source>TextTrackList.operator []=</source>
          <target state="translated">TextTrackList.operator []=</target>
        </trans-unit>
        <trans-unit id="636fc03dec31d8383dce77a4edf82083ebad5ca8" translate="yes" xml:space="preserve">
          <source>TextTrackList.single</source>
          <target state="translated">TextTrackList.single</target>
        </trans-unit>
        <trans-unit id="7e9afd079fbdf71164bdb6f9c818f655c7cfb394" translate="yes" xml:space="preserve">
          <source>Texture</source>
          <target state="translated">Texture</target>
        </trans-unit>
        <trans-unit id="026bd707c61e8bd64bd6d3d20f07e3a9260a9a3c" translate="yes" xml:space="preserve">
          <source>Texture class</source>
          <target state="translated">テクスチャクラス</target>
        </trans-unit>
        <trans-unit id="24f04bdfd615c30e6d755474df83dc663cd7d997" translate="yes" xml:space="preserve">
          <source>Texture class Null safety</source>
          <target state="translated">テクスチャクラス ヌル安全</target>
        </trans-unit>
        <trans-unit id="951c836cd92e7c3a1008428e799bf35a09893bf6" translate="yes" xml:space="preserve">
          <source>Texture.lastUploadedVideoFrameWasSkipped</source>
          <target state="translated">Texture.lastUploadedVideoFrameWasSkipped</target>
        </trans-unit>
        <trans-unit id="a76c835603c00e1560d0e66c9c931bfe1b37630f" translate="yes" xml:space="preserve">
          <source>Texture.lastUploadedVideoHeight</source>
          <target state="translated">Texture.lastUploadedVideoHeight</target>
        </trans-unit>
        <trans-unit id="ea945be3bba2951b662759e813e6f07d872b05da" translate="yes" xml:space="preserve">
          <source>Texture.lastUploadedVideoTimestamp</source>
          <target state="translated">Texture.lastUploadedVideoTimestamp</target>
        </trans-unit>
        <trans-unit id="3f40369535d09bdf56b7214c895356ad84cf84f2" translate="yes" xml:space="preserve">
          <source>Texture.lastUploadedVideoWidth</source>
          <target state="translated">Texture.lastUploadedVideoWidth</target>
        </trans-unit>
        <trans-unit id="9f34195ff63d706944fbdc9a2635987531f0b7fe" translate="yes" xml:space="preserve">
          <source>That is, for each object of the element type, the object is either considered to be in the set, or to &lt;em&gt;not&lt;/em&gt; be in the set.</source>
          <target state="translated">すなわち、要素タイプの各オブジェクトについて、オブジェクトがいずれかのセットであると考えられるか、またはすることが&lt;em&gt;ない&lt;/em&gt;セットであること。</target>
        </trans-unit>
        <trans-unit id="f353358afc0e164b3c3012b811226efedadbf174" translate="yes" xml:space="preserve">
          <source>That is, that the comment is either enclosed in &lt;code&gt;/** ... */&lt;/code&gt; or starts with &lt;code&gt;///&lt;/code&gt;.</source>
          <target state="translated">つまり、コメントは &lt;code&gt;/** ... */&lt;/code&gt; 囲まれるか、 &lt;code&gt;///&lt;/code&gt; で始まります。</target>
        </trans-unit>
        <trans-unit id="7047e9004f8fa2d45d7837b095afd253eee6fb51" translate="yes" xml:space="preserve">
          <source>That is, the returned set contains all the elements of this &lt;a href=&quot;../../dart-core/set-class&quot;&gt;Set&lt;/a&gt; and all the elements of &lt;code&gt;other&lt;/code&gt;.</source>
          <target state="translated">つまり、返されるセットには、この&lt;a href=&quot;../../dart-core/set-class&quot;&gt;セットの&lt;/a&gt;すべての要素と、 &lt;code&gt;other&lt;/code&gt; すべての要素が含まれます。</target>
        </trans-unit>
        <trans-unit id="d12eb5ee84533c55bcc2e9a5d2781dd7025a49aa" translate="yes" xml:space="preserve">
          <source>That is, the returned set contains all the elements of this &lt;a href=&quot;../../dart-core/set-class&quot;&gt;Set&lt;/a&gt; that are also elements of &lt;code&gt;other&lt;/code&gt; according to &lt;code&gt;other.contains&lt;/code&gt;.</source>
          <target state="translated">つまり、返されるセットは、このすべての要素が含まれ&lt;a href=&quot;../../dart-core/set-class&quot;&gt;セット&lt;/a&gt;もの要素である &lt;code&gt;other&lt;/code&gt; によると &lt;code&gt;other.contains&lt;/code&gt; が。</target>
        </trans-unit>
        <trans-unit id="ef2495d7ea42242dc80ee5efd0d815cec0088c0a" translate="yes" xml:space="preserve">
          <source>That is, the returned set contains all the elements of this &lt;a href=&quot;../../dart-core/set-class&quot;&gt;Set&lt;/a&gt; that are not elements of &lt;code&gt;other&lt;/code&gt; according to &lt;code&gt;other.contains&lt;/code&gt;.</source>
          <target state="translated">つまり、返されたセットには、 &lt;code&gt;other.contains&lt;/code&gt; に従って &lt;code&gt;other&lt;/code&gt; の要素ではないこの&lt;a href=&quot;../../dart-core/set-class&quot;&gt;セットの&lt;/a&gt;すべての要素が含まれています。</target>
        </trans-unit>
        <trans-unit id="46be56978477864e1e0f00ff30279f2d78c1069b" translate="yes" xml:space="preserve">
          <source>That is, the returned set contains all the elements of this &lt;a href=&quot;../set-class&quot;&gt;Set&lt;/a&gt; and all the elements of &lt;code&gt;other&lt;/code&gt;.</source>
          <target state="translated">つまり、返されるセットには、この&lt;a href=&quot;../set-class&quot;&gt;セットの&lt;/a&gt;すべての要素と、 &lt;code&gt;other&lt;/code&gt; すべての要素が含まれます。</target>
        </trans-unit>
        <trans-unit id="f7b89f2b4d807921e6435bf07ce07897bf6540bf" translate="yes" xml:space="preserve">
          <source>That is, the returned set contains all the elements of this &lt;a href=&quot;../set-class&quot;&gt;Set&lt;/a&gt; that are also elements of &lt;code&gt;other&lt;/code&gt; according to &lt;code&gt;other.contains&lt;/code&gt;.</source>
          <target state="translated">つまり、返されるセットは、このすべての要素が含まれ&lt;a href=&quot;../set-class&quot;&gt;セット&lt;/a&gt;もの要素である &lt;code&gt;other&lt;/code&gt; によると &lt;code&gt;other.contains&lt;/code&gt; が。</target>
        </trans-unit>
        <trans-unit id="5386209df12ebb54e3df063635d049a69e01b2d2" translate="yes" xml:space="preserve">
          <source>That is, the returned set contains all the elements of this &lt;a href=&quot;../set-class&quot;&gt;Set&lt;/a&gt; that are not elements of &lt;code&gt;other&lt;/code&gt; according to &lt;code&gt;other.contains&lt;/code&gt;.</source>
          <target state="translated">つまり、返されたセットには、 &lt;code&gt;other.contains&lt;/code&gt; に従って &lt;code&gt;other&lt;/code&gt; の要素ではないこの&lt;a href=&quot;../set-class&quot;&gt;セットの&lt;/a&gt;すべての要素が含まれています。</target>
        </trans-unit>
        <trans-unit id="2d266ac886f45ed180b1bc9fae68b3a9e7bee58a" translate="yes" xml:space="preserve">
          <source>The 'set-cookie' header has folding disabled by default.</source>
          <target state="translated">set-cookie' ヘッダーはデフォルトで折り畳みを無効にしています。</target>
        </trans-unit>
        <trans-unit id="b5e27773352e4c492492b1a34c05d5b90f5f99f4" translate="yes" xml:space="preserve">
          <source>The 1-based column number for this source location.</source>
          <target state="translated">このソース位置の1ベースのカラム番号。</target>
        </trans-unit>
        <trans-unit id="8dbd43f36c5168eee5657326299835087bea1775" translate="yes" xml:space="preserve">
          <source>The 1-based column number for this source location. &lt;a href=&quot;sourcelocation/column&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このソースの場所の1から始まる列番号。&lt;a href=&quot;sourcelocation/column&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d5bf12229875193938239dcd2cb3063592fde592" translate="yes" xml:space="preserve">
          <source>The 1-based line number for this source location.</source>
          <target state="translated">このソース位置の1ベースの行番号。</target>
        </trans-unit>
        <trans-unit id="c8b35354fdaec8867883f4dbcf5d4620a91bfaa1" translate="yes" xml:space="preserve">
          <source>The 1-based line number for this source location. &lt;a href=&quot;sourcelocation/line&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このソースの場所の1から始まる行番号。&lt;a href=&quot;sourcelocation/line&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e5de5a15b522d4d75759d0c5a1c3e2a0a266b4f3" translate="yes" xml:space="preserve">
          <source>The 16-bit two's complement integer at &lt;code&gt;address + 2 * index&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;address + 2 * index&lt;/code&gt; 16ビットの2の補数整数。</target>
        </trans-unit>
        <trans-unit id="ae6b792f5ed2bec51d9d998f1f4188718cf00cdb" translate="yes" xml:space="preserve">
          <source>The 16-bit two's complement integer at &lt;code&gt;address + 2 * index&lt;/code&gt;. &lt;a href=&quot;int16pointer/operator_get&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;address + 2 * index&lt;/code&gt; 16ビットの2の補数整数。&lt;a href=&quot;int16pointer/operator_get&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="681ab8d548605a5199e7083d4b33a639523b9e9b" translate="yes" xml:space="preserve">
          <source>The 16-bit two's complement integer at &lt;code&gt;address + 2 * index&lt;/code&gt;. &lt;a href=&quot;int16pointer/operator_put&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;address + 2 * index&lt;/code&gt; 16ビットの2の補数整数。&lt;a href=&quot;int16pointer/operator_put&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="434d81290647fc490ae9aad7eb4feb22115276a0" translate="yes" xml:space="preserve">
          <source>The 16-bit two's complement integer at &lt;code&gt;address&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt; 16ビットの2の補数整数。</target>
        </trans-unit>
        <trans-unit id="c47562e2c33ba0bc7bada471b68ff87294e5fd0f" translate="yes" xml:space="preserve">
          <source>The 16-bit two's complement integer at &lt;code&gt;address&lt;/code&gt;. &lt;a href=&quot;int16pointer/value&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt; 16ビットの2の補数整数。&lt;a href=&quot;int16pointer/value&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e12aad4ed3801ac83aea6ec73acb7b84cd06538a" translate="yes" xml:space="preserve">
          <source>The 16-bit unsigned integer at &lt;code&gt;address + 2 * index&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;address + 2 * index&lt;/code&gt; の16ビット符号なし整数。</target>
        </trans-unit>
        <trans-unit id="0ddee3d993dd7acb2b7f427102233c8b86f6f036" translate="yes" xml:space="preserve">
          <source>The 16-bit unsigned integer at &lt;code&gt;address + 2 * index&lt;/code&gt;. &lt;a href=&quot;uint16pointer/operator_get&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;address + 2 * index&lt;/code&gt; の16ビット符号なし整数。&lt;a href=&quot;uint16pointer/operator_get&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="79fc0556497c753092ef1bd5fd8f0d343cb28a79" translate="yes" xml:space="preserve">
          <source>The 16-bit unsigned integer at &lt;code&gt;address + 2 * index&lt;/code&gt;. &lt;a href=&quot;uint16pointer/operator_put&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;address + 2 * index&lt;/code&gt; の16ビット符号なし整数。&lt;a href=&quot;uint16pointer/operator_put&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7fad5af2ccb6cc4f4758bcdefcbe1dac9d6adc57" translate="yes" xml:space="preserve">
          <source>The 16-bit unsigned integer at &lt;code&gt;address&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt; 16ビットの符号なし整数。</target>
        </trans-unit>
        <trans-unit id="8b85f044df41812c6f682fdb1aa793d8a2b29b19" translate="yes" xml:space="preserve">
          <source>The 16-bit unsigned integer at &lt;code&gt;address&lt;/code&gt;. &lt;a href=&quot;uint16pointer/value&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt; 16ビットの符号なし整数。&lt;a href=&quot;uint16pointer/value&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="233c27c55376e61c5ca610ea551e0eefc1b8d9b4" translate="yes" xml:space="preserve">
          <source>The 32 or 64-bit two's complement integer at &lt;code&gt;address + (4 or 8) * index&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;address + (4 or 8) * index&lt;/code&gt; 32ビットまたは64ビットの2の補数整数。</target>
        </trans-unit>
        <trans-unit id="91e6feac5af79727437260a5b0ed1b4dea32b6ff" translate="yes" xml:space="preserve">
          <source>The 32 or 64-bit two's complement integer at &lt;code&gt;address + (4 or 8) * index&lt;/code&gt;. &lt;a href=&quot;intptrpointer/operator_get&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;address + (4 or 8) * index&lt;/code&gt; 32ビットまたは64ビットの2の補数整数。&lt;a href=&quot;intptrpointer/operator_get&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8c298dbdd404aeaca105b316265fc98d65248699" translate="yes" xml:space="preserve">
          <source>The 32 or 64-bit two's complement integer at &lt;code&gt;address + (4 or 8) * index&lt;/code&gt;. &lt;a href=&quot;intptrpointer/operator_put&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;address + (4 or 8) * index&lt;/code&gt; 32ビットまたは64ビットの2の補数整数。&lt;a href=&quot;intptrpointer/operator_put&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4a5f4700892bbe492ccee9da0dbb9bb5462e6a79" translate="yes" xml:space="preserve">
          <source>The 32 or 64-bit two's complement integer at &lt;code&gt;address&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt; 32ビットまたは64ビットの2の補数整数。</target>
        </trans-unit>
        <trans-unit id="54ba8c3c998decff099fae044ba0f5c90ef9d223" translate="yes" xml:space="preserve">
          <source>The 32 or 64-bit two's complement integer at &lt;code&gt;address&lt;/code&gt;. &lt;a href=&quot;intptrpointer/value&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt; 32ビットまたは64ビットの2の補数整数。&lt;a href=&quot;intptrpointer/value&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3927323af21b32efb17112a32d0194eb5b2dad39" translate="yes" xml:space="preserve">
          <source>The 32-bit two's complement integer at &lt;code&gt;address + 4 * index&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;address + 4 * index&lt;/code&gt; 32ビットの2の補数整数。</target>
        </trans-unit>
        <trans-unit id="df8b91b03be20db3805319ffd1b402feeb03f565" translate="yes" xml:space="preserve">
          <source>The 32-bit two's complement integer at &lt;code&gt;address + 4 * index&lt;/code&gt;. &lt;a href=&quot;int32pointer/operator_get&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;address + 4 * index&lt;/code&gt; 32ビットの2の補数整数。&lt;a href=&quot;int32pointer/operator_get&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9223ac8d9485771c3fbd1065760aaa2e8c7174e4" translate="yes" xml:space="preserve">
          <source>The 32-bit two's complement integer at &lt;code&gt;address + 4 * index&lt;/code&gt;. &lt;a href=&quot;int32pointer/operator_put&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;address + 4 * index&lt;/code&gt; 32ビットの2の補数整数。&lt;a href=&quot;int32pointer/operator_put&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="012350245290c5a1c006e6303db29184b798e31d" translate="yes" xml:space="preserve">
          <source>The 32-bit two's complement integer at &lt;code&gt;address&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt; 32ビットの2の補数整数。</target>
        </trans-unit>
        <trans-unit id="0027bf0459097a2997d40759998d5dfd6dc94926" translate="yes" xml:space="preserve">
          <source>The 32-bit two's complement integer at &lt;code&gt;address&lt;/code&gt;. &lt;a href=&quot;int32pointer/value&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt; 32ビットの2の補数整数。&lt;a href=&quot;int32pointer/value&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dd6b2a88e5032b2571e45d9f5638e68d1cda9f37" translate="yes" xml:space="preserve">
          <source>The 32-bit unsigned integer at &lt;code&gt;address + 4 * index&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;address + 4 * index&lt;/code&gt; 32ビットの符号なし整数。</target>
        </trans-unit>
        <trans-unit id="a2e6d9f57c12e37ad6a649f52ee6337357a2db29" translate="yes" xml:space="preserve">
          <source>The 32-bit unsigned integer at &lt;code&gt;address + 4 * index&lt;/code&gt;. &lt;a href=&quot;uint32pointer/operator_get&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;address + 4 * index&lt;/code&gt; 32ビットの符号なし整数。&lt;a href=&quot;uint32pointer/operator_get&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="42f74008be8d153f837b724bccae3d0b0577b9cb" translate="yes" xml:space="preserve">
          <source>The 32-bit unsigned integer at &lt;code&gt;address + 4 * index&lt;/code&gt;. &lt;a href=&quot;uint32pointer/operator_put&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;address + 4 * index&lt;/code&gt; 32ビットの符号なし整数。&lt;a href=&quot;uint32pointer/operator_put&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8c9d37ec12a79ef237919b618743ea733e54fa90" translate="yes" xml:space="preserve">
          <source>The 32-bit unsigned integer at &lt;code&gt;address&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt; 32ビットの符号なし整数。</target>
        </trans-unit>
        <trans-unit id="604e0871d94b3c087f0ce8d8db58d710dae49d38" translate="yes" xml:space="preserve">
          <source>The 32-bit unsigned integer at &lt;code&gt;address&lt;/code&gt;. &lt;a href=&quot;uint32pointer/value&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt; 32ビットの符号なし整数。&lt;a href=&quot;uint32pointer/value&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="016d718e7c97ca5dcc7a17485c986ac64297d858" translate="yes" xml:space="preserve">
          <source>The 64-bit two's complement integer at &lt;code&gt;address + 8 * index&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;address + 8 * index&lt;/code&gt; 64ビットの2の補数整数。</target>
        </trans-unit>
        <trans-unit id="e7c173ba8a25f03d1d9f45e68d1fa767b31fa9c1" translate="yes" xml:space="preserve">
          <source>The 64-bit two's complement integer at &lt;code&gt;address + 8 * index&lt;/code&gt;. &lt;a href=&quot;int64pointer/operator_get&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;address + 8 * index&lt;/code&gt; 64ビットの2の補数整数。&lt;a href=&quot;int64pointer/operator_get&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="50fff4d023c3262773b178ffae6edb6119f4d624" translate="yes" xml:space="preserve">
          <source>The 64-bit two's complement integer at &lt;code&gt;address + 8 * index&lt;/code&gt;. &lt;a href=&quot;int64pointer/operator_put&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;address + 8 * index&lt;/code&gt; 64ビットの2の補数整数。&lt;a href=&quot;int64pointer/operator_put&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="78921e430dc440ca445c12d15b8867225764f466" translate="yes" xml:space="preserve">
          <source>The 64-bit two's complement integer at &lt;code&gt;address&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt; 64ビットの2の補数整数。</target>
        </trans-unit>
        <trans-unit id="52d591fd44e49fd188d25bfe379c7a0f578741bf" translate="yes" xml:space="preserve">
          <source>The 64-bit two's complement integer at &lt;code&gt;address&lt;/code&gt;. &lt;a href=&quot;int64pointer/value&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt; 64ビットの2の補数整数。&lt;a href=&quot;int64pointer/value&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0311a53d93fe1240c7c5eb87e0a16147e9063cb8" translate="yes" xml:space="preserve">
          <source>The 64-bit unsigned integer at &lt;code&gt;address + 8 * index&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;address + 8 * index&lt;/code&gt; の64ビット符号なし整数。</target>
        </trans-unit>
        <trans-unit id="f3ee19cec63548dcbd5f08bf5e07685b1546fb54" translate="yes" xml:space="preserve">
          <source>The 64-bit unsigned integer at &lt;code&gt;address + 8 * index&lt;/code&gt;. &lt;a href=&quot;uint64pointer/operator_get&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;address + 8 * index&lt;/code&gt; の64ビット符号なし整数。&lt;a href=&quot;uint64pointer/operator_get&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="69c8722cf1dd642179cd15540ebecdf3b03e5567" translate="yes" xml:space="preserve">
          <source>The 64-bit unsigned integer at &lt;code&gt;address + 8 * index&lt;/code&gt;. &lt;a href=&quot;uint64pointer/operator_put&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;address + 8 * index&lt;/code&gt; の64ビット符号なし整数。&lt;a href=&quot;uint64pointer/operator_put&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6e61ebeadc8885b32383f0ae7f503f257fcdbee1" translate="yes" xml:space="preserve">
          <source>The 64-bit unsigned integer at &lt;code&gt;address&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt; 64ビットの符号なし整数。</target>
        </trans-unit>
        <trans-unit id="b4103490da342b75ab06a44bd89dc78874de4bcb" translate="yes" xml:space="preserve">
          <source>The 64-bit unsigned integer at &lt;code&gt;address&lt;/code&gt;. &lt;a href=&quot;uint64pointer/value&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt; 64ビットの符号なし整数。&lt;a href=&quot;uint64pointer/value&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="645cfa78c6c6fa96c24d365cf3f2b0491c83ac3f" translate="yes" xml:space="preserve">
          <source>The 8-bit two's complement integer at &lt;code&gt;address + index&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;address + index&lt;/code&gt; の8ビット2の補数整数。</target>
        </trans-unit>
        <trans-unit id="102800df5502225d86add28c3107c075af86b3fc" translate="yes" xml:space="preserve">
          <source>The 8-bit two's complement integer at &lt;code&gt;address + index&lt;/code&gt;. &lt;a href=&quot;int8pointer/operator_get&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;address + index&lt;/code&gt; の8ビット2の補数整数。&lt;a href=&quot;int8pointer/operator_get&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a95b85f182fbf6aeba63a52c751f07bebcc46d52" translate="yes" xml:space="preserve">
          <source>The 8-bit two's complement integer at &lt;code&gt;address + index&lt;/code&gt;. &lt;a href=&quot;int8pointer/operator_put&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;address + index&lt;/code&gt; の8ビット2の補数整数。&lt;a href=&quot;int8pointer/operator_put&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f247ec79e2575acb603064976a2adde90abd25fa" translate="yes" xml:space="preserve">
          <source>The 8-bit two's complement integer at &lt;code&gt;address&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt; 8ビットの2の補数整数。</target>
        </trans-unit>
        <trans-unit id="c1951aee91048b1e7ab3658fb81fee2b7e79b5b1" translate="yes" xml:space="preserve">
          <source>The 8-bit two's complement integer at &lt;code&gt;address&lt;/code&gt;. &lt;a href=&quot;int8pointer/value&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt; 8ビットの2の補数整数。&lt;a href=&quot;int8pointer/value&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e4d10426ae66f4ff145c74e4a5adb40c0f94fd05" translate="yes" xml:space="preserve">
          <source>The 8-bit unsigned integer at &lt;code&gt;address + index&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;address + index&lt;/code&gt; の8ビット符号なし整数。</target>
        </trans-unit>
        <trans-unit id="2238036194d90772c1748e6dabe22662a47eb3f0" translate="yes" xml:space="preserve">
          <source>The 8-bit unsigned integer at &lt;code&gt;address + index&lt;/code&gt;. &lt;a href=&quot;uint8pointer/operator_get&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;address + index&lt;/code&gt; の8ビット符号なし整数。&lt;a href=&quot;uint8pointer/operator_get&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b52aa29462d509a4c866e13e5d1a27a5f5e6a538" translate="yes" xml:space="preserve">
          <source>The 8-bit unsigned integer at &lt;code&gt;address + index&lt;/code&gt;. &lt;a href=&quot;uint8pointer/operator_put&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;address + index&lt;/code&gt; の8ビット符号なし整数。&lt;a href=&quot;uint8pointer/operator_put&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0ced577ddea531eb0417da4f707a7d7bd3f80c92" translate="yes" xml:space="preserve">
          <source>The 8-bit unsigned integer at &lt;code&gt;address&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt; 8ビットの符号なし整数。</target>
        </trans-unit>
        <trans-unit id="bf125aa8d9ac7712d16a54b9d6e4c9050ff52968" translate="yes" xml:space="preserve">
          <source>The 8-bit unsigned integer at &lt;code&gt;address&lt;/code&gt;. &lt;a href=&quot;uint8pointer/value&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt; 8ビットの符号なし整数。&lt;a href=&quot;uint8pointer/value&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="33179a5bf8397e2b4ca1d9a9488d04345dcf4881" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../dart-async/future-class&quot;&gt;Future&lt;/a&gt; completes to a timestamp that represents a floating point value of the number of milliseconds that have elapsed since the page started to load (which is also the timestamp at this call to animationFrame).</source>
          <target state="translated">&lt;a href=&quot;../../dart-async/future-class&quot;&gt;今後は&lt;/a&gt;（もanimationFrameにこの呼び出しでタイムスタンプである）負荷に開始ページから経過したミリ秒数の浮動小数点値を表しているタイムスタンプに完了します。</target>
        </trans-unit>
        <trans-unit id="5820b111db23bfd52fb9204e4ba07fae235e0469" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../dart-async/stream-class&quot;&gt;Stream&lt;/a&gt; is canceled, e.g. by calling &lt;code&gt;cancel&lt;/code&gt; on the &lt;a href=&quot;../../dart-async/streamsubscription-class&quot;&gt;StreamSubscription&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../dart-async/stream-class&quot;&gt;ストリームは、&lt;/a&gt;呼び出しによって例えば、キャンセルされ &lt;code&gt;cancel&lt;/code&gt; に&lt;a href=&quot;../../dart-async/streamsubscription-class&quot;&gt;StreamSubscription&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f13c529d13ae699516a354de457c6bf09b3cf65d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../dart-async/streamtransformer-class&quot;&gt;StreamTransformer&lt;/a&gt; interface is completely generic, so it cannot say what subclasses do. Each &lt;a href=&quot;../../dart-async/streamtransformer-class&quot;&gt;StreamTransformer&lt;/a&gt; should document clearly how it transforms the stream (on the class or variable used to access the transformer), as well as any differences from the following typical behavior:</source>
          <target state="translated">&lt;a href=&quot;../../dart-async/streamtransformer-class&quot;&gt;StreamTransformerの&lt;/a&gt;それは、サブクラスが何をするかと言うことはできませんので、インターフェースは、完全に汎用的です。各&lt;a href=&quot;../../dart-async/streamtransformer-class&quot;&gt;StreamTransformer&lt;/a&gt;は、（トランスフォーマーへのアクセスに使用されるクラスまたは変数で）ストリームを変換する方法と、次の一般的な動作との違いを明確に文書化する必要があります。</target>
        </trans-unit>
        <trans-unit id="6975a76b2a016aab6a35d565c0c80deb8ab33b7e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../dart-convert/encoding-class&quot;&gt;Encoding&lt;/a&gt; used when writing strings. Depending on the underlying consumer this property might be mutable.</source>
          <target state="translated">&lt;a href=&quot;../../dart-convert/encoding-class&quot;&gt;エンコーディングは&lt;/a&gt;、文字列を書き込むときに使用しました。基礎となるコンシューマーによっては、このプロパティは変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="5e161e380268b45dbc889a73e3c28a68638f55b6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../contenttype-class&quot;&gt;ContentType&lt;/a&gt; of the &lt;a href=&quot;contenttypeheader-constant&quot;&gt;contentTypeHeader&lt;/a&gt; header, if any.</source>
          <target state="translated">&lt;a href=&quot;contenttypeheader-constant&quot;&gt;contentTypeHeader&lt;/a&gt;ヘッダーの&lt;a href=&quot;../contenttype-class&quot;&gt;ContentType&lt;/a&gt;（ある場合）。</target>
        </trans-unit>
        <trans-unit id="de8cbfaf4fd877233483ad2b23dea4e52b573288" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../dart-async/stream-class&quot;&gt;Stream&lt;/a&gt; interface of this class provides event notification about when a certain change has happened, for example when data has become available (&lt;a href=&quot;rawsocketevent/read-constant&quot;&gt;RawSocketEvent.read&lt;/a&gt;) or when the remote end has stopped listening (&lt;code&gt;RawSocketEvent.close&lt;/code&gt;).</source>
          <target state="translated">&lt;a href=&quot;../dart-async/stream-class&quot;&gt;ストリーム&lt;/a&gt;データが利用可能になったとき、このクラスのインタフェースは、例えば、特定の変更が発生した場合について、イベント通知を提供する（&lt;a href=&quot;rawsocketevent/read-constant&quot;&gt;RawSocketEvent.read&lt;/a&gt;）またはリモートエンドが停止したリスニング（ &lt;code&gt;RawSocketEvent.close&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="0f747c6f496bdb7ecbd70a8d91056aba6ed85db9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../dart-convert/encoding-class&quot;&gt;Encoding&lt;/a&gt; used when writing strings. Depending on the underlying consumer this property might be mutable.</source>
          <target state="translated">&lt;a href=&quot;../dart-convert/encoding-class&quot;&gt;エンコーディングは&lt;/a&gt;、文字列を書き込むときに使用しました。基礎となるコンシューマーによっては、このプロパティは変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="6f8554ad853c52894325ab3400fdfeca425c061d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../dart-indexed_db/dart-indexed_db-library&quot;&gt;dart:indexed_db&lt;/a&gt; APIs is a recommended alternatives.</source>
          <target state="translated">&lt;a href=&quot;../dart-indexed_db/dart-indexed_db-library&quot;&gt;ダーツ：indexed_db&lt;/a&gt; APIは推奨代替案です。</target>
        </trans-unit>
        <trans-unit id="9e26d7b62db9b6c034be58850240869ff1fa4e9e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../filesystementity-class&quot;&gt;FileSystemEntity&lt;/a&gt; being watched, is deleted.</source>
          <target state="translated">&lt;a href=&quot;../filesystementity-class&quot;&gt;FileSystemEntityが&lt;/a&gt;見られて、削除されます。</target>
        </trans-unit>
        <trans-unit id="cb316a691e1b9b206db7dc194a38395ab5780d92" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../filesystementity-class&quot;&gt;FileSystemEntity&lt;/a&gt; being watches, is deleted.</source>
          <target state="translated">&lt;a href=&quot;../filesystementity-class&quot;&gt;FileSystemEntity&lt;/a&gt;時計であることが、削除されます。</target>
        </trans-unit>
        <trans-unit id="499c18a58ab60d6bff732a9789faf5aad27b0f42" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../htmlescapemode-class&quot;&gt;HtmlEscapeMode&lt;/a&gt; used by the converter.</source>
          <target state="translated">&lt;a href=&quot;../htmlescapemode-class&quot;&gt;HtmlEscapeMode&lt;/a&gt;コンバータにより使用。</target>
        </trans-unit>
        <trans-unit id="6227f7332049916c9a10a175176768c6cedb13f5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../httpoverrides-class&quot;&gt;HttpOverrides&lt;/a&gt; to use in the root &lt;a href=&quot;../../dart-async/zone-class&quot;&gt;Zone&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../httpoverrides-class&quot;&gt;HttpOverridesは、&lt;/a&gt;ルートで使用する&lt;a href=&quot;../../dart-async/zone-class&quot;&gt;ゾーン&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="36db36d8d3a562fe0fdacf6fbca1f9e280264956" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../httpresponse-class&quot;&gt;HttpResponse&lt;/a&gt; object, used for sending back the response to the client.</source>
          <target state="translated">&lt;a href=&quot;../httpresponse-class&quot;&gt;HttpResponse&lt;/a&gt;クライアントへの応答を返送するために使用されるオブジェクト、。</target>
        </trans-unit>
        <trans-unit id="6408eccd366c162649120f3db67df19d2d9a3c3c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../internetaddress-class&quot;&gt;InternetAddress&lt;/a&gt; used to connect this socket.</source>
          <target state="translated">&lt;a href=&quot;../internetaddress-class&quot;&gt;たInternetAddressは&lt;/a&gt;このソケットを接続するために使用されます。</target>
        </trans-unit>
        <trans-unit id="86d4499e907184dcb324b654734d943fff12f087" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../iooverrides-class&quot;&gt;IOOverrides&lt;/a&gt; to use in the root &lt;a href=&quot;../../dart-async/zone-class&quot;&gt;Zone&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../iooverrides-class&quot;&gt;IOOverridesは、&lt;/a&gt;ルートで使用する&lt;a href=&quot;../../dart-async/zone-class&quot;&gt;ゾーン&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8f7a8195e745e84befc413c6d8566d2eac05039f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../iterator-class&quot;&gt;Iterator&lt;/a&gt; of &lt;code&gt;elements&lt;/code&gt; provides the order of the elements.</source>
          <target state="translated">&lt;code&gt;elements&lt;/code&gt; の&lt;a href=&quot;../iterator-class&quot;&gt;イテレータ&lt;/a&gt;は、要素の順序を提供します。</target>
        </trans-unit>
        <trans-unit id="9e7e0f5d2c28a3f238e580e9bb3a6c19948546a8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mirrorsused-class&quot;&gt;MirrorsUsed&lt;/a&gt; annotation specifies &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;aField&lt;/code&gt; from library &lt;code&gt;my.library.one&lt;/code&gt; as targets. This will mark the class &lt;code&gt;A&lt;/code&gt; as a reflective target. The target specification for &lt;code&gt;aField&lt;/code&gt; has no effect, as there is no target in &lt;code&gt;my.library.one&lt;/code&gt; with that name.</source>
          <target state="translated">&lt;a href=&quot;../mirrorsused-class&quot;&gt;MirrorsUsedの&lt;/a&gt;注釈は、指定 &lt;code&gt;A&lt;/code&gt; をして &lt;code&gt;aField&lt;/code&gt; ライブラリから &lt;code&gt;my.library.one&lt;/code&gt; 対象とします。これにより、クラス &lt;code&gt;A&lt;/code&gt; が反射ターゲットとしてマークされます。 &lt;code&gt;my.library.one&lt;/code&gt; にはその名前のターゲットがないため、 &lt;code&gt;aField&lt;/code&gt; のターゲット指定は無効です。</target>
        </trans-unit>
        <trans-unit id="076a897a572e4e5387db348c27ddc7c4c422f1fc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../multistreamcontroller-class&quot;&gt;MultiStreamController&lt;/a&gt; does not support reading its &lt;a href=&quot;../streamcontroller/stream&quot;&gt;StreamController.stream&lt;/a&gt;. Setting its &lt;a href=&quot;../streamcontroller/onlisten&quot;&gt;StreamController.onListen&lt;/a&gt; has no effect since the &lt;code&gt;onListen&lt;/code&gt; callback is called instead, and the &lt;a href=&quot;../streamcontroller/onlisten&quot;&gt;StreamController.onListen&lt;/a&gt; won't be called later. The controller acts like an asynchronous controller, but provides extra methods for delivering events synchronously.</source>
          <target state="translated">&lt;a href=&quot;../multistreamcontroller-class&quot;&gt;MultiStreamControllerは、&lt;/a&gt;その読み込みをサポートしていません&lt;a href=&quot;../streamcontroller/stream&quot;&gt;StreamController.streamを&lt;/a&gt;。代わりに &lt;code&gt;onListen&lt;/code&gt; コールバックが呼び出されるため、&lt;a href=&quot;../streamcontroller/onlisten&quot;&gt;StreamController.onListen&lt;/a&gt;を設定しても効果はなく、&lt;a href=&quot;../streamcontroller/onlisten&quot;&gt;StreamController.onListen&lt;/a&gt;は後で呼び出されません。コントローラーは非同期コントローラーのように機能しますが、イベントを同期的に配信するための追加のメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="32808b1344aa79f536a6e99098f16ed1c1d059d9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../stream-class&quot;&gt;Stream&lt;/a&gt; returned by &lt;a href=&quot;stream&quot;&gt;stream&lt;/a&gt; is a broadcast stream. It can be listened to more than once.</source>
          <target state="translated">&lt;a href=&quot;../stream-class&quot;&gt;ストリーム&lt;/a&gt;によって返され&lt;a href=&quot;stream&quot;&gt;たストリームは、&lt;/a&gt;放送ストリームです。複数回聞くことができます。</target>
        </trans-unit>
        <trans-unit id="0dbf879d93009c3654130710ec24cf70712e4eb2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../streamtransformer-class&quot;&gt;StreamTransformer&lt;/a&gt; interface is completely generic, so it cannot say what subclasses do. Each &lt;a href=&quot;../streamtransformer-class&quot;&gt;StreamTransformer&lt;/a&gt; should document clearly how it transforms the stream (on the class or variable used to access the transformer), as well as any differences from the following typical behavior:</source>
          <target state="translated">&lt;a href=&quot;../streamtransformer-class&quot;&gt;StreamTransformerの&lt;/a&gt;それは、サブクラスが何をするかと言うことはできませんので、インターフェースは、完全に汎用的です。各&lt;a href=&quot;../streamtransformer-class&quot;&gt;StreamTransformer&lt;/a&gt;は、（トランスフォーマーへのアクセスに使用されるクラスまたは変数で）ストリームを変換する方法と、次の一般的な動作との違いを明確に文書化する必要があります。</target>
        </trans-unit>
        <trans-unit id="f422c2aae505f6c876b6fbe1e67cd828eec4eb43" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../transferabletypeddata-class&quot;&gt;TransferableTypedData&lt;/a&gt; is a cross-isolate single-use resource. This method must not be called more than once on the same underlying transferable bytes, even if the calls occur in different isolates.</source>
          <target state="translated">&lt;a href=&quot;../transferabletypeddata-class&quot;&gt;TransferableTypedDataは&lt;/a&gt;クロス単離使い捨てリソースです。このメソッドは、呼び出しが異なるアイソレートで発生した場合でも、同じ転送可能なバイトで2回以上呼び出さないでください。</target>
        </trans-unit>
        <trans-unit id="38f5071a607707df6bd0181e1ec0aca5766ed26b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../uri-class&quot;&gt;Uri&lt;/a&gt; that this &lt;code&gt;UriData&lt;/code&gt; is giving access to.</source>
          <target state="translated">&lt;a href=&quot;../uri-class&quot;&gt;ウリは&lt;/a&gt;このことを &lt;code&gt;UriData&lt;/code&gt; はへのアクセス権を与えています。</target>
        </trans-unit>
        <trans-unit id="5b975cd274a41afa89910171bcfa1d0d23e0920c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;add&quot;&gt;add&lt;/a&gt; method must not be called after this method.</source>
          <target state="translated">&lt;a href=&quot;add&quot;&gt;追加&lt;/a&gt;方法は、このメソッドの後に呼び出されてはいけません。</target>
        </trans-unit>
        <trans-unit id="9e90fdceae8f377074837390ae0b1d9ab75c5b21" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;byteconversionsink-class&quot;&gt;ByteConversionSink&lt;/a&gt; provides an interface for converters to efficiently transmit byte data.</source>
          <target state="translated">&lt;a href=&quot;byteconversionsink-class&quot;&gt;ByteConversionSinkは&lt;/a&gt;効率的に送信バイトデータに変換するためのインタフェースを提供します。</target>
        </trans-unit>
        <trans-unit id="3b15bf0a21c1772ca323dbfe2626c2eccac026c5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;byteconversionsink-class&quot;&gt;ByteConversionSink&lt;/a&gt; provides an interface for converters to efficiently transmit byte data. &lt;a href=&quot;byteconversionsink-class&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;byteconversionsink-class&quot;&gt;ByteConversionSinkは&lt;/a&gt;効率的に送信バイトデータに変換するためのインタフェースを提供します。&lt;a href=&quot;byteconversionsink-class&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8c421de8d353a624af51d82c7e50cefd23f8e6e4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;comparable-class&quot;&gt;Comparable&lt;/a&gt; interface does not imply the existence of the comparison operators &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;gt;=&lt;/code&gt;. These should only be defined if the ordering is a less-than/greater-than ordering, that is, an ordering where you would naturally use the words &quot;less than&quot; about the order of two elements.</source>
          <target state="translated">&lt;a href=&quot;comparable-class&quot;&gt;匹敵&lt;/a&gt;インターフェイスは、比較演算子が存在することを意味するものではない &lt;code&gt;&amp;lt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;=&lt;/code&gt; 、 &lt;code&gt;&amp;gt;&lt;/code&gt; および &lt;code&gt;&amp;gt;=&lt;/code&gt; 。これらは、順序が次の順序よりも小さい/大きい場合、つまり、2つの要素の順序について「以下」という単語を自然に使用する順序である場合にのみ定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="612c8d71d19f65d9fa7106d78dfdd9e9742d82f7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;comparable-class&quot;&gt;Comparable&lt;/a&gt; interface should be used for the natural ordering of a type. If a type can be ordered in more than one way, and none of them is the obvious natural ordering, then it might be better not to use the &lt;a href=&quot;comparable-class&quot;&gt;Comparable&lt;/a&gt; interface, and to provide separate &lt;a href=&quot;comparator&quot;&gt;Comparator&lt;/a&gt;s instead.</source>
          <target state="translated">&lt;a href=&quot;comparable-class&quot;&gt;同等の&lt;/a&gt;インターフェースは、タイプの自然順序付けを使用する必要があります。型が複数の方法で順序付けでき、それらのいずれも明白な自然順序付けではない場合、&lt;a href=&quot;comparable-class&quot;&gt;Comparable&lt;/a&gt;インターフェースを使用せず、代わりに別個の&lt;a href=&quot;comparator&quot;&gt;Comparator&lt;/a&gt;を提供する方がよいでしょう。</target>
        </trans-unit>
        <trans-unit id="e38d1411b81276fb491651c74b27297ccd95de21" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;comparable/compareto&quot;&gt;compareTo&lt;/a&gt; operation defines a total ordering of objects, which can be used for ordering and sorting.</source>
          <target state="translated">&lt;a href=&quot;comparable/compareto&quot;&gt;compareToの&lt;/a&gt;動作が順序およびソートするために使用できるオブジェクトの全順序を定義します。</target>
        </trans-unit>
        <trans-unit id="bb2f700b075cd039207739b781b90b22b2532ae4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;contenttype-class&quot;&gt;ContentType&lt;/a&gt; of the &lt;a href=&quot;httpheaders/contenttypeheader-constant&quot;&gt;contentTypeHeader&lt;/a&gt; header, if any.</source>
          <target state="translated">&lt;a href=&quot;httpheaders/contenttypeheader-constant&quot;&gt;contentTypeHeader&lt;/a&gt;ヘッダーの&lt;a href=&quot;contenttype-class&quot;&gt;ContentType&lt;/a&gt;（ある場合）。</target>
        </trans-unit>
        <trans-unit id="32f3772b15169b74a4de69bff9d5151ec14b6116" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetime-class&quot;&gt;DateTime&lt;/a&gt; class has no comparison operators, instead it has the more precisely named &lt;a href=&quot;datetime/isbefore&quot;&gt;DateTime.isBefore&lt;/a&gt; and &lt;a href=&quot;datetime/isafter&quot;&gt;DateTime.isAfter&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;datetime-class&quot;&gt;日時&lt;/a&gt;クラスではなく、それがより正確に指名した、いかなる比較演算子を持っていない&lt;a href=&quot;datetime/isbefore&quot;&gt;DateTime.isBefore&lt;/a&gt;と&lt;a href=&quot;datetime/isafter&quot;&gt;DateTime.isAfter&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="edac67965029fe0b55d1bf6b14ce656d2876f726" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;deadline&quot;&gt;deadline&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt; by default.</source>
          <target state="translated">の &lt;a href=&quot;deadline&quot;&gt;&lt;/a&gt;デフォルトでは期限は &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8210bf8b77fbf12a31014e40c545c143a59e5a76" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;divelement-class&quot;&gt;DivElement&lt;/a&gt; is a block-level element, as opposed to &lt;a href=&quot;spanelement-class&quot;&gt;SpanElement&lt;/a&gt;, which is an inline-level element.</source>
          <target state="translated">の &lt;a href=&quot;divelement-class&quot;&gt;DivElementは&lt;/a&gt;とは対照的に、ブロックレベル要素である&lt;a href=&quot;spanelement-class&quot;&gt;のSpanElement&lt;/a&gt;インラインレベル要素です。</target>
        </trans-unit>
        <trans-unit id="e872f332ce7511103dc0b34795433d2a35c38601" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;divelement-class&quot;&gt;DivElement&lt;/a&gt; is a generic container and does not have any semantic significance. It is functionally similar to &lt;a href=&quot;spanelement-class&quot;&gt;SpanElement&lt;/a&gt;.</source>
          <target state="translated">の &lt;a href=&quot;divelement-class&quot;&gt;DivElementは&lt;/a&gt;、一般的なコンテナであり、いかなる意味的な重要性を持っていません。機能的には&lt;a href=&quot;spanelement-class&quot;&gt;SpanElementに&lt;/a&gt;似ています。</target>
        </trans-unit>
        <trans-unit id="5d8bc17446766628ce43b39f11ecaf902cdcf26c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;double-class&quot;&gt;double&lt;/a&gt; class defines comparison operators that are compatible with equality. The operators differ from &lt;code&gt;double.compareTo&lt;/code&gt; on -0.0 and NaN.</source>
          <target state="translated">の &lt;a href=&quot;double-class&quot;&gt;二重の&lt;/a&gt;クラスは、平等と互換性のある比較演算子を定義します。演算子は、-0.0およびNaNの &lt;code&gt;double.compareTo&lt;/code&gt; とは異なります。</target>
        </trans-unit>
        <trans-unit id="a63b43a2c5d0648bb1f51e2ed4d27cf9138276a5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;double-class&quot;&gt;double&lt;/a&gt; type is contagious. Operations on &lt;a href=&quot;double-class&quot;&gt;double&lt;/a&gt;s return &lt;a href=&quot;double-class&quot;&gt;double&lt;/a&gt; results.</source>
          <target state="translated">&lt;a href=&quot;double-class&quot;&gt;ダブル&lt;/a&gt;タイプは伝染性です。の操作&lt;a href=&quot;double-class&quot;&gt;ダブル&lt;/a&gt; sが返す&lt;a href=&quot;double-class&quot;&gt;二重の&lt;/a&gt;結果を。</target>
        </trans-unit>
        <trans-unit id="62981f93bdf7aef08557d32563165ce474bb9304" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;duration-class&quot;&gt;Duration&lt;/a&gt; is the sum of all individual parts. This means that individual parts can be larger than the next-bigger unit. For example, &lt;a href=&quot;duration/inminutes&quot;&gt;inMinutes&lt;/a&gt; can be greater than 59.</source>
          <target state="translated">の &lt;a href=&quot;duration-class&quot;&gt;所要時間は&lt;/a&gt;、すべての個々の部品の合計です。これは、個々のパーツが次に大きいユニットよりも大きくなる可能性があることを意味します。たとえば、&lt;a href=&quot;duration/inminutes&quot;&gt;inMinutes&lt;/a&gt;は59より大きい場合があります。</target>
        </trans-unit>
        <trans-unit id="ff544fad1598c9c7a6b14604eed3951bf4ae6180" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;elapsed&quot;&gt;elapsed&lt;/a&gt; count is increasing monotonically. If the &lt;a href=&quot;../stopwatch-class&quot;&gt;Stopwatch&lt;/a&gt; has been stopped, then calling start again restarts it without resetting the &lt;a href=&quot;elapsed&quot;&gt;elapsed&lt;/a&gt; count.</source>
          <target state="translated">&lt;a href=&quot;elapsed&quot;&gt;経過&lt;/a&gt;カウントが単調に増加しています。&lt;a href=&quot;../stopwatch-class&quot;&gt;ストップウォッチの&lt;/a&gt;場合が停止している startを再度呼び出すと、&lt;a href=&quot;elapsed&quot;&gt;経過&lt;/a&gt;カウントをリセットせずにが再起動します。</target>
        </trans-unit>
        <trans-unit id="12d1e9ac871d2eabaa1a828a7c15d09ed71295e8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;elapsedticks&quot;&gt;elapsedTicks&lt;/a&gt; count stops increasing after this call. If the &lt;a href=&quot;../stopwatch-class&quot;&gt;Stopwatch&lt;/a&gt; is currently not running, then calling this method has no effect.</source>
          <target state="translated">&lt;a href=&quot;elapsedticks&quot;&gt;elapsedTicks&lt;/a&gt;この呼び出しの後に増加カウント停止。&lt;a href=&quot;../stopwatch-class&quot;&gt;ストップウォッチ&lt;/a&gt;が現在実行されていない場合、このメソッドを呼び出しても効果はありません。</target>
        </trans-unit>
        <trans-unit id="06662ec0b62f33f11fb9538a87489c7fa11f880a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;elapsedticks&quot;&gt;elapsedTicks&lt;/a&gt; counter converted to a &lt;a href=&quot;../duration-class&quot;&gt;Duration&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;elapsedticks&quot;&gt;elapsedTicks&lt;/a&gt;カウンターに変換&lt;a href=&quot;../duration-class&quot;&gt;所要時間&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bf7d60400da7e338fba27542488491d6bc217691" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;elapsedticks&quot;&gt;elapsedTicks&lt;/a&gt; counter converted to microseconds.</source>
          <target state="translated">の &lt;a href=&quot;elapsedticks&quot;&gt;elapsedTicksの&lt;/a&gt;カウンタは、マイクロ秒に変換します。</target>
        </trans-unit>
        <trans-unit id="4f2f42345107e86e7c95afbca11a1cab487194f1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;elapsedticks&quot;&gt;elapsedTicks&lt;/a&gt; counter converted to milliseconds.</source>
          <target state="translated">の &lt;a href=&quot;elapsedticks&quot;&gt;elapsedTicksの&lt;/a&gt;カウンターは、ミリ秒に変換されます。</target>
        </trans-unit>
        <trans-unit id="7d70e3f2c18f4a59c7cad12d86d891c42f072b43" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;encoder&quot;&gt;encoder&lt;/a&gt; and &lt;a href=&quot;decoder&quot;&gt;decoder&lt;/a&gt; of the resulting codec are swapped.</source>
          <target state="translated">&lt;a href=&quot;encoder&quot;&gt;エンコーダ&lt;/a&gt;と&lt;a href=&quot;decoder&quot;&gt;&lt;/a&gt;結果のコーデックデコーダが入れ替わります。</target>
        </trans-unit>
        <trans-unit id="119e1d5e27c0529a2271b1a0845c3dc338d744ed" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;encoding&quot;&gt;encoding&lt;/a&gt; does not apply to this method, and the &lt;code&gt;data&lt;/code&gt; list is passed directly to the target consumer as a stream event.</source>
          <target state="translated">&lt;a href=&quot;encoding&quot;&gt;エンコードは、&lt;/a&gt;この方法には適用せず、 &lt;code&gt;data&lt;/code&gt; リストは、ストリームイベントとしてターゲット消費者に直接渡されます。</target>
        </trans-unit>
        <trans-unit id="5c38e81211301baa05eefe76a0b0b9554d0ce799" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;error-class&quot;&gt;Error&lt;/a&gt; class represents the occurrence of an error during runtime. Subclasses of this class represent specific kinds of errors.</source>
          <target state="translated">の &lt;a href=&quot;error-class&quot;&gt;エラー&lt;/a&gt;クラスは、実行時にエラーが発生したことを表しています。このクラスのサブクラスは、特定の種類のエラーを表します。</target>
        </trans-unit>
        <trans-unit id="04379483e72ca21330b11251182cc8a64b96693d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;event/type&quot;&gt;type&lt;/a&gt; of the event identifies what kind of interaction occurred.</source>
          <target state="translated">の &lt;a href=&quot;event/type&quot;&gt;&lt;/a&gt;イベントタイプは、発生した相互作用の種類を識別します。</target>
        </trans-unit>
        <trans-unit id="0141bbc8230b8fa9683f5d9caf93a108929990a0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;eventsink-class&quot;&gt;EventSink&lt;/a&gt; has been designed to handle asynchronous events from &lt;a href=&quot;stream-class&quot;&gt;Stream&lt;/a&gt;s. See, for example, &lt;a href=&quot;stream/stream.eventtransformed&quot;&gt;Stream.eventTransformed&lt;/a&gt; which uses &lt;code&gt;EventSink&lt;/code&gt;s to transform events.</source>
          <target state="translated">&lt;a href=&quot;eventsink-class&quot;&gt;EventSinkは&lt;/a&gt;からの非同期イベント処理するように設計された&lt;a href=&quot;stream-class&quot;&gt;ストリーム&lt;/a&gt;秒。たとえば、&lt;a href=&quot;stream/stream.eventtransformed&quot;&gt;次&lt;/a&gt;を使用するStream.eventTransformedを参照してください &lt;code&gt;EventSink&lt;/code&gt; イベントを変換するのを。</target>
        </trans-unit>
        <trans-unit id="1ec3cb6fb49dcd8857c6c8b671f80b19a8c1d9fc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;eventsink-class&quot;&gt;EventSink&lt;/a&gt; methods can't be used while the &lt;a href=&quot;streamconsumer/addstream&quot;&gt;addStream&lt;/a&gt; is called. As soon as the &lt;a href=&quot;streamconsumer/addstream&quot;&gt;addStream&lt;/a&gt;'s &lt;a href=&quot;future-class&quot;&gt;Future&lt;/a&gt; completes with a value, the &lt;a href=&quot;eventsink-class&quot;&gt;EventSink&lt;/a&gt; methods can be used again.</source>
          <target state="translated">&lt;a href=&quot;eventsink-class&quot;&gt;EventSinkの&lt;/a&gt;間、方法を使用することはできません&lt;a href=&quot;streamconsumer/addstream&quot;&gt;addStreamが&lt;/a&gt;呼ばれています。&lt;a href=&quot;streamconsumer/addstream&quot;&gt;addStream&lt;/a&gt;の&lt;a href=&quot;future-class&quot;&gt;Future&lt;/a&gt;が値で完了するとすぐに、&lt;a href=&quot;eventsink-class&quot;&gt;EventSink&lt;/a&gt;メソッドを再び使用できます。</target>
        </trans-unit>
        <trans-unit id="6086920164835442b22a64875292506d68a16235" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;gzipcodec-class&quot;&gt;GZipCodec&lt;/a&gt; encodes raw bytes to GZip compressed bytes and decodes GZip compressed bytes to raw bytes.</source>
          <target state="translated">&lt;a href=&quot;gzipcodec-class&quot;&gt;GZipCodecは&lt;/a&gt; gzipで圧縮されたバイトに生のバイトを符号化し、復号gzipで圧縮されたバイト生バイト。</target>
        </trans-unit>
        <trans-unit id="94be2b5adb452a4ceef3955d3b4ee11c9c73e37b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;gzipcodec-class&quot;&gt;GZipCodec&lt;/a&gt; encodes raw bytes to GZip compressed bytes and decodes GZip compressed bytes to raw bytes. &lt;a href=&quot;gzipcodec-class&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;gzipcodec-class&quot;&gt;GZipCodecは&lt;/a&gt; gzipで圧縮されたバイトに生のバイトを符号化し、復号gzipで圧縮されたバイト生バイト。&lt;a href=&quot;gzipcodec-class&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="be65a17ab3c1c439eb90a034161731202b784a9b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;hasnextiterator-class&quot;&gt;HasNextIterator&lt;/a&gt; class wraps an &lt;a href=&quot;../dart-core/iterator-class&quot;&gt;Iterator&lt;/a&gt; and provides methods to iterate over an object using &lt;code&gt;hasNext&lt;/code&gt; and &lt;code&gt;next&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;hasnextiterator-class&quot;&gt;HasNextIteratorの&lt;/a&gt;クラスは、ラップ&lt;a href=&quot;../dart-core/iterator-class&quot;&gt;イテレータを&lt;/a&gt;し、使用してオブジェクトを繰り返し処理する方法を提供する &lt;code&gt;hasNext&lt;/code&gt; および &lt;code&gt;next&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3456ca825afa2b7eb0e5d9b1af6291b2d24663d9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;hasnextiterator-class&quot;&gt;HasNextIterator&lt;/a&gt; class wraps an &lt;a href=&quot;../dart-core/iterator-class&quot;&gt;Iterator&lt;/a&gt; and provides methods to iterate over an object using &lt;code&gt;hasNext&lt;/code&gt; and &lt;code&gt;next&lt;/code&gt;. &lt;a href=&quot;hasnextiterator-class&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;hasnextiterator-class&quot;&gt;HasNextIteratorの&lt;/a&gt;クラスは、ラップ&lt;a href=&quot;../dart-core/iterator-class&quot;&gt;イテレータを&lt;/a&gt;し、使用してオブジェクトを反復処理するための方法を提供 &lt;code&gt;hasNext&lt;/code&gt; と &lt;code&gt;next&lt;/code&gt; 。&lt;a href=&quot;hasnextiterator-class&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="80f9bdddc2c2d5bc35efdd243108d319a7efd96b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;htmlescapemode-class&quot;&gt;HtmlEscapeMode&lt;/a&gt; used by the converter.</source>
          <target state="translated">&lt;a href=&quot;htmlescapemode-class&quot;&gt;HtmlEscapeMode&lt;/a&gt;コンバータにより使用。</target>
        </trans-unit>
        <trans-unit id="613a0e07e2985cd30eee01758e4f5ad6fa69b945" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.dartlang.org/docs/spec/&quot;&gt;Dart Language Specification&lt;/a&gt; provides technical details.</source>
          <target state="translated">&lt;a href=&quot;http://www.dartlang.org/docs/spec/&quot;&gt;ダート言語仕様&lt;/a&gt;技術的な詳細を提供します。</target>
        </trans-unit>
        <trans-unit id="63503be3f756e9013dea3c95c634a60e67066e4e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;httpoverrides-class&quot;&gt;HttpOverrides&lt;/a&gt; to use in the root &lt;a href=&quot;../dart-async/zone-class&quot;&gt;Zone&lt;/a&gt;. &lt;a href=&quot;httpoverrides/global&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;httpoverrides-class&quot;&gt;HttpOverridesは、&lt;/a&gt;ルートで使用する&lt;a href=&quot;../dart-async/zone-class&quot;&gt;ゾーン&lt;/a&gt;。&lt;a href=&quot;httpoverrides/global&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0abf8545a5f82df8ff42cf7a0744d1d3d38b148c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;httpresponse-class&quot;&gt;HttpResponse&lt;/a&gt; object, used for sending back the response to the client. &lt;a href=&quot;httprequest/response&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;httpresponse-class&quot;&gt;HttpResponse&lt;/a&gt;クライアントへの応答を返送するために使用されるオブジェクト、。&lt;a href=&quot;httprequest/response&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="66cc175a0aac81c9849119c570ecde9914ebe653" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://dart.dev/guides/language/spec&quot;&gt;Dart Language Specification&lt;/a&gt; provides technical details.</source>
          <target state="translated">&lt;a href=&quot;https://dart.dev/guides/language/spec&quot;&gt;ダート言語仕様は、&lt;/a&gt;技術的な詳細を提供します。</target>
        </trans-unit>
        <trans-unit id="3595c0992c5a8f19ac2f030238a31120d80f6348" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://dart.dev/guides/libraries/library-tour#dartasync---asynchronous-programming&quot;&gt;dart:async section of the library tour&lt;/a&gt;: A brief overview of asynchronous programming.</source>
          <target state="translated">&lt;a href=&quot;https://dart.dev/guides/libraries/library-tour#dartasync---asynchronous-programming&quot;&gt;ライブラリツアー&lt;/a&gt;のdart：asyncセクション：非同期プログラミングの概要。</target>
        </trans-unit>
        <trans-unit id="bbf54a507c7b3ee80c649e47a35f15204a7f96d0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://dart.dev/guides/libraries/library-tour#files-and-directories&quot;&gt;Files and directories&lt;/a&gt; section of the library tour.</source>
          <target state="translated">ライブラリツアーの&lt;a href=&quot;https://dart.dev/guides/libraries/library-tour#files-and-directories&quot;&gt;ファイルとディレクトリの&lt;/a&gt;セクション。</target>
        </trans-unit>
        <trans-unit id="47e736657d9efa1949bded380ec8b93661b70cb8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://pub.dartlang.org/packages/shelf&quot;&gt;shelf&lt;/a&gt; package on pub.dartlang.org contains a set of high-level classes that, together with this class, makes it easy to provide content through HTTP servers.</source>
          <target state="translated">の &lt;a href=&quot;https://pub.dartlang.org/packages/shelf&quot;&gt;&lt;/a&gt;pub.dartlang.orgシェルフパッケージには、このクラスとともに、HTTPサーバーを介してコンテンツを簡単に提供できるようにする一連の高レベルクラスが含まれています。</target>
        </trans-unit>
        <trans-unit id="389bcb85c24c983d7c0704afb53bd0aab737f529" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://pub.dev/packages/shelf&quot;&gt;shelf&lt;/a&gt; package on pub.dev contains a set of high-level classes that, together with this class, makes it easy to provide content through HTTP servers.</source>
          <target state="translated">pub.devの&lt;a href=&quot;https://pub.dev/packages/shelf&quot;&gt;シェルフ&lt;/a&gt;パッケージには、このクラスと一緒にHTTPサーバーを介してコンテンツを簡単に提供できるようにする一連の高レベルクラスが含まれています。</target>
        </trans-unit>
        <trans-unit id="d98480981c954b7047642a8cfb3161fe05e174eb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.dartlang.org/docs/dart-up-and-running/ch03.html#dartasync---asynchronous-programming&quot;&gt;dart:async section of the library tour&lt;/a&gt;: A brief overview of asynchronous programming.</source>
          <target state="translated">&lt;a href=&quot;https://www.dartlang.org/docs/dart-up-and-running/ch03.html#dartasync---asynchronous-programming&quot;&gt;ライブラリツアー&lt;/a&gt;のdart：asyncセクション：非同期プログラミングの概要。</target>
        </trans-unit>
        <trans-unit id="6dcb95447891ad55b7d22aa4babe8cd617dbfa5c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;httpserver-class&quot;&gt;HttpServer&lt;/a&gt; class provides the basic functionality for implementing an HTTP server. For some higher-level building-blocks, we recommend that you try the &lt;a href=&quot;https://pub.dartlang.org/packages/shelf&quot;&gt;shelf&lt;/a&gt; pub package, which contains a set of high-level classes that, together with the &lt;a href=&quot;httpserver-class&quot;&gt;HttpServer&lt;/a&gt; class in this library, make it easier to implement HTTP servers.</source>
          <target state="translated">&lt;a href=&quot;httpserver-class&quot;&gt;HttpServerをする&lt;/a&gt;クラスは、HTTPサーバを実装するための基本的な機能を提供します。一部の高レベルのビルディングブロックについては、&lt;a href=&quot;httpserver-class&quot;&gt;HttpServer&lt;/a&gt;とともに高レベルクラスのセットを含む&lt;a href=&quot;https://pub.dartlang.org/packages/shelf&quot;&gt;シェルフ&lt;/a&gt;パブパッケージを試すことをお勧めします、このライブラリのクラス HTTPサーバーの実装を容易にます。</target>
        </trans-unit>
        <trans-unit id="3e433929e640db44186090b16f1f2d182e388579" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;httpserver-class&quot;&gt;HttpServer&lt;/a&gt; class provides the basic functionality for implementing an HTTP server. For some higher-level building-blocks, we recommend that you try the &lt;a href=&quot;https://pub.dev/packages/shelf&quot;&gt;shelf&lt;/a&gt; pub package, which contains a set of high-level classes that, together with the &lt;a href=&quot;httpserver-class&quot;&gt;HttpServer&lt;/a&gt; class in this library, make it easier to implement HTTP servers.</source>
          <target state="translated">&lt;a href=&quot;httpserver-class&quot;&gt;HttpServerをする&lt;/a&gt;クラスは、HTTPサーバを実装するための基本的な機能を提供します。いくつかのより高いレベルのビルディング・ブロックのために、我々はあなたが試すことをお勧め&lt;a href=&quot;https://pub.dev/packages/shelf&quot;&gt;棚&lt;/a&gt;と共に、高レベルのクラスのセットが含まパブパッケージ、&lt;a href=&quot;httpserver-class&quot;&gt;HttpServerを&lt;/a&gt;このライブラリのクラス、それが簡単にHTTPサーバを実装するために行うことを。</target>
        </trans-unit>
        <trans-unit id="16a28dbce85b90f847f824dc04611d41f8cae33d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;internetaddress-class&quot;&gt;InternetAddress&lt;/a&gt; used to connect this socket.</source>
          <target state="translated">&lt;a href=&quot;internetaddress-class&quot;&gt;たInternetAddress&lt;/a&gt;このソケットを接続するために使用されます。</target>
        </trans-unit>
        <trans-unit id="da7728acd558c6631cc5edea6f3c6093c31b805b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;internetaddress-class&quot;&gt;InternetAddress&lt;/a&gt; used to connect this socket. &lt;a href=&quot;socket/address&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;internetaddress-class&quot;&gt;たInternetAddressは&lt;/a&gt;このソケットを接続するために使用されます。&lt;a href=&quot;socket/address&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f2848e133e611885130aa898057920128e9ce098" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;internetaddress/type&quot;&gt;type&lt;/a&gt; of the &lt;a href=&quot;internetaddress-class&quot;&gt;InternetAddress&lt;/a&gt; specified what IP protocol.</source>
          <target state="translated">&lt;a href=&quot;internetaddress/type&quot;&gt;タイプ&lt;/a&gt;の&lt;a href=&quot;internetaddress-class&quot;&gt;たInternetAddress&lt;/a&gt;どのIPプロトコルを指定しました。</target>
        </trans-unit>
        <trans-unit id="85f3a2d9fbf941db5031d1a9727cca98781ecd51" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;iooverrides-class&quot;&gt;IOOverrides&lt;/a&gt; to use in the root &lt;a href=&quot;../dart-async/zone-class&quot;&gt;Zone&lt;/a&gt;. &lt;a href=&quot;iooverrides/global&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;iooverrides-class&quot;&gt;IOOverridesは、&lt;/a&gt;ルートで使用する&lt;a href=&quot;../dart-async/zone-class&quot;&gt;ゾーン&lt;/a&gt;。&lt;a href=&quot;iooverrides/global&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8f514911dc29654409196c3ed126e53efc76f1b5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;isolate/controlport&quot;&gt;controlPort&lt;/a&gt; identifies and gives access to controlling the isolate, and the &lt;a href=&quot;isolate/pausecapability&quot;&gt;pauseCapability&lt;/a&gt; and &lt;a href=&quot;isolate/terminatecapability&quot;&gt;terminateCapability&lt;/a&gt; guard access to some control operations. For example, calling &lt;a href=&quot;isolate/pause&quot;&gt;pause&lt;/a&gt; on an &lt;code&gt;Isolate&lt;/code&gt; object created without a &lt;a href=&quot;isolate/pausecapability&quot;&gt;pauseCapability&lt;/a&gt;, has no effect.</source>
          <target state="translated">&lt;a href=&quot;isolate/controlport&quot;&gt;controlPortの&lt;/a&gt;識別および単離を制御へのアクセスを与え、&lt;a href=&quot;isolate/pausecapability&quot;&gt;pauseCapability&lt;/a&gt;と&lt;a href=&quot;isolate/terminatecapability&quot;&gt;terminateCapability&lt;/a&gt;いくつかの制御動作にガードアクセス。たとえば、&lt;a href=&quot;isolate/pausecapability&quot;&gt;pauseCapability&lt;/a&gt;なしで作成された &lt;code&gt;Isolate&lt;/code&gt; オブジェクトで&lt;a href=&quot;isolate/pause&quot;&gt;pause&lt;/a&gt;を呼び出しても効果はありません。</target>
        </trans-unit>
        <trans-unit id="509ddd86fef74d5c95f063ed7e2effc192f7cb59" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;iterator/current&quot;&gt;current&lt;/a&gt; value must not be accessed before calling &lt;a href=&quot;iterator/movenext&quot;&gt;moveNext&lt;/a&gt; or after a call to &lt;a href=&quot;iterator/movenext&quot;&gt;moveNext&lt;/a&gt; has returned false.</source>
          <target state="translated">&lt;a href=&quot;iterator/current&quot;&gt;現在の&lt;/a&gt;値は、呼び出す前にアクセスしてはいけない&lt;a href=&quot;iterator/movenext&quot;&gt;のMoveNext&lt;/a&gt;またはの呼び出し後&lt;a href=&quot;iterator/movenext&quot;&gt;のMoveNextは&lt;/a&gt;falseを返しました。</target>
        </trans-unit>
        <trans-unit id="170fd473a15569730fa83511c6d21689dd7bfc96" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;jsonunsupportedobjecterror/unsupportedobject&quot;&gt;unsupportedObject&lt;/a&gt; field holds that object that failed to be serialized.</source>
          <target state="translated">&lt;a href=&quot;jsonunsupportedobjecterror/unsupportedobject&quot;&gt;unsupportedObject&lt;/a&gt;フィールドがシリアライズに失敗し、そのオブジェクトを保持しています。</target>
        </trans-unit>
        <trans-unit id="3c9af7508402911ca60fba79deaca82645007a56" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;list-class&quot;&gt;List&lt;/a&gt; and &lt;a href=&quot;set-class&quot;&gt;Set&lt;/a&gt; classes are both &lt;code&gt;Iterable&lt;/code&gt;, as are most classes in the &lt;code&gt;dart:collection&lt;/code&gt; library.</source>
          <target state="translated">&lt;a href=&quot;list-class&quot;&gt;リスト&lt;/a&gt;と&lt;a href=&quot;set-class&quot;&gt;セットの&lt;/a&gt;クラスは両方とも &lt;code&gt;Iterable&lt;/code&gt; などのほとんどのクラスです、 &lt;code&gt;dart:collection&lt;/code&gt; ライブラリは。</target>
        </trans-unit>
        <trans-unit id="8f338272ef591eeaf4cc1ac335b918dd05068eee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;platform/environment&quot;&gt;environment&lt;/a&gt; getter returns a the names and values of environment variables in a &lt;a href=&quot;../dart-core/map-class&quot;&gt;Map&lt;/a&gt; that contains key-value pairs of strings. The Map is unmodifiable. This sample shows how to get the value of the &lt;code&gt;PATH&lt;/code&gt; environment variable.</source>
          <target state="translated">&lt;a href=&quot;platform/environment&quot;&gt;環境&lt;/a&gt;内の名前と環境変数の値を返すゲッター&lt;a href=&quot;../dart-core/map-class&quot;&gt;地図&lt;/a&gt;の文字列のキーと値のペアが含まれています。マップは変更できません。このサンプルは、 &lt;code&gt;PATH&lt;/code&gt; 環境変数の値を取得する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="137f68b2e53da247b3e8a69f10e67f824ffd9816" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;process-class&quot;&gt;Process&lt;/a&gt; class provides a way to run a process on the native machine. For example, the following code spawns a process that recursively lists the files under &lt;code&gt;web&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;process-class&quot;&gt;プロセスの&lt;/a&gt;クラスは、ネイティブのマシン上でプロセスを実行する方法を提供します。たとえば、次のコードは、 &lt;code&gt;web&lt;/code&gt; の下のファイルを再帰的にリストするプロセスを生成します。</target>
        </trans-unit>
        <trans-unit id="42069053a378f9e5cab78f2618385899b9e993a6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;rawsocketoption-class&quot;&gt;RawSocketOption&lt;/a&gt; is used as a parameter to &lt;a href=&quot;socket/setrawoption&quot;&gt;Socket.setRawOption&lt;/a&gt; and &lt;a href=&quot;rawsocket/setrawoption&quot;&gt;RawSocket.setRawOption&lt;/a&gt; to set customize the behaviour of the underlying socket.</source>
          <target state="translated">&lt;a href=&quot;rawsocketoption-class&quot;&gt;RawSocketOptionを&lt;/a&gt;パラメータとして使用され&lt;a href=&quot;socket/setrawoption&quot;&gt;Socket.setRawOption&lt;/a&gt;と&lt;a href=&quot;rawsocket/setrawoption&quot;&gt;RawSocket.setRawOption&lt;/a&gt;セットカスタマイズするために、基本的なソケットの振る舞い。</target>
        </trans-unit>
        <trans-unit id="9b78c27199e75edcfb768dceb6c303e0340a35a4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;rawsocketoption-class&quot;&gt;RawSocketOption&lt;/a&gt; is used as a parameter to &lt;a href=&quot;socket/setrawoption&quot;&gt;Socket.setRawOption&lt;/a&gt; and &lt;a href=&quot;rawsocket/setrawoption&quot;&gt;RawSocket.setRawOption&lt;/a&gt; to set customize the behaviour of the underlying socket. &lt;a href=&quot;rawsocketoption-class&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;rawsocketoption-class&quot;&gt;RawSocketOptionは&lt;/a&gt;パラメータとして使用され&lt;a href=&quot;socket/setrawoption&quot;&gt;Socket.setRawOption&lt;/a&gt;と&lt;a href=&quot;rawsocket/setrawoption&quot;&gt;RawSocket.setRawOption&lt;/a&gt;セットカスタマイズするために、基本的なソケットの振る舞い。&lt;a href=&quot;rawsocketoption-class&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bd5402462da8723362af4140195b332fa0371a0b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;rawzlibfilter-class&quot;&gt;RawZLibFilter&lt;/a&gt; class provides a low-level interface to zlib.</source>
          <target state="translated">&lt;a href=&quot;rawzlibfilter-class&quot;&gt;RawZLibFilterの&lt;/a&gt;クラスは、ZLIBを低レベルのインタフェースを提供します。</target>
        </trans-unit>
        <trans-unit id="a1d058a9d266d2bfbfd01b6e4ac75376ac562c03" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;secureserversocket-class&quot;&gt;SecureServerSocket&lt;/a&gt; is a server socket, providing a stream of high-level &lt;a href=&quot;socket-class&quot;&gt;Socket&lt;/a&gt;s.</source>
          <target state="translated">&lt;a href=&quot;secureserversocket-class&quot;&gt;SecureServerSocketは、&lt;/a&gt;ハイレベルのストリーム提供サーバソケットで&lt;a href=&quot;socket-class&quot;&gt;ソケット&lt;/a&gt;秒。</target>
        </trans-unit>
        <trans-unit id="9a1c7bbc6dd5bf36a799ea94b3cf69005fad91ec" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;secureserversocket-class&quot;&gt;SecureServerSocket&lt;/a&gt; is a server socket, providing a stream of high-level &lt;a href=&quot;socket-class&quot;&gt;Socket&lt;/a&gt;s. &lt;a href=&quot;secureserversocket-class&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;secureserversocket-class&quot;&gt;SecureServerSocketは、&lt;/a&gt;ハイレベルのストリーム提供サーバソケットで&lt;a href=&quot;socket-class&quot;&gt;ソケット&lt;/a&gt;秒。&lt;a href=&quot;secureserversocket-class&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2320583b9c81abba6314e757c4362b6b534d09d4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;securesocket-class&quot;&gt;SecureSocket&lt;/a&gt; and &lt;a href=&quot;secureserversocket-class&quot;&gt;SecureServerSocket&lt;/a&gt; classes take a SecurityContext as an argument to their connect and bind methods.</source>
          <target state="translated">&lt;a href=&quot;securesocket-class&quot;&gt;SecureSocket&lt;/a&gt;と&lt;a href=&quot;secureserversocket-class&quot;&gt;SecureServerSocket&lt;/a&gt;クラスはその接続とバインドメソッドの引数としてSecurityContextがを取ります。</target>
        </trans-unit>
        <trans-unit id="9eac28da7bbb61b84de316f5a21488149b2f749c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;socket-class&quot;&gt;Socket&lt;/a&gt; exposes both a &lt;a href=&quot;../dart-async/stream-class&quot;&gt;Stream&lt;/a&gt; and a &lt;a href=&quot;iosink-class&quot;&gt;IOSink&lt;/a&gt; interface, making it ideal for using together with other &lt;a href=&quot;../dart-async/stream-class&quot;&gt;Stream&lt;/a&gt;s.</source>
          <target state="translated">&lt;a href=&quot;socket-class&quot;&gt;ソケットは、&lt;/a&gt;両方の露出さ&lt;a href=&quot;../dart-async/stream-class&quot;&gt;ストリーム&lt;/a&gt;と&lt;a href=&quot;iosink-class&quot;&gt;IOSinkの&lt;/a&gt;他と共に使用するための理想的なを行う、インターフェースを&lt;a href=&quot;../dart-async/stream-class&quot;&gt;ストリーム&lt;/a&gt; S。</target>
        </trans-unit>
        <trans-unit id="3d9766b13179eb90bd042ecb27eb790c97b2b3ff" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;socketdirection-class&quot;&gt;SocketDirection&lt;/a&gt; is used as a parameter to &lt;a href=&quot;socket/close&quot;&gt;Socket.close&lt;/a&gt; and &lt;a href=&quot;rawsocket/close&quot;&gt;RawSocket.close&lt;/a&gt; to close a socket in the specified direction(s).</source>
          <target state="translated">&lt;a href=&quot;socketdirection-class&quot;&gt;SocketDirectionが&lt;/a&gt;パラメータとして使用され&lt;a href=&quot;socket/close&quot;&gt;Socket.close&lt;/a&gt;と&lt;a href=&quot;rawsocket/close&quot;&gt;RawSocket.close&lt;/a&gt;指定方向（S）にソケットを閉じ。</target>
        </trans-unit>
        <trans-unit id="2754195dbcc91a93bf15d5be3e78391fa2a10bf1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;socketoption-class&quot;&gt;SocketOption&lt;/a&gt; is used as a parameter to &lt;a href=&quot;socket/setoption&quot;&gt;Socket.setOption&lt;/a&gt; and &lt;a href=&quot;rawsocket/setoption&quot;&gt;RawSocket.setOption&lt;/a&gt; to set customize the behaviour of the underlying socket.</source>
          <target state="translated">&lt;a href=&quot;socketoption-class&quot;&gt;SocketOptionは&lt;/a&gt;パラメータとして使用され&lt;a href=&quot;socket/setoption&quot;&gt;Socket.setOption&lt;/a&gt;と&lt;a href=&quot;rawsocket/setoption&quot;&gt;RawSocket.setOption&lt;/a&gt;セットカスタマイズするために、基本的なソケットの振る舞い。</target>
        </trans-unit>
        <trans-unit id="43d1bdc59b235768677fcd4733abdb10f74f21d3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;stdout/adderror&quot;&gt;addError&lt;/a&gt; API is inherited from &lt;a href=&quot;../dart-async/streamsink-class&quot;&gt;StreamSink&lt;/a&gt; and calling it will result in an unhandled asynchronous error unless there is an error handler on &lt;a href=&quot;stdout/done&quot;&gt;done&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;stdout/adderror&quot;&gt;addErrorの&lt;/a&gt; APIから継承され&lt;a href=&quot;../dart-async/streamsink-class&quot;&gt;StreamSink&lt;/a&gt;と上のエラーハンドラがない限り、それは未処理の非同期エラーになります呼び出し&lt;a href=&quot;stdout/done&quot;&gt;完了を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="24f450b47dff9434184e4ca6407701fde0447726" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;stopwatch/elapsedticks&quot;&gt;elapsedTicks&lt;/a&gt; counter converted to a &lt;a href=&quot;duration-class&quot;&gt;Duration&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;stopwatch/elapsedticks&quot;&gt;elapsedTicksは&lt;/a&gt;カウンターに変換&lt;a href=&quot;duration-class&quot;&gt;所要時間&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0c7360d061cfdac1da4f13df415883a43382212e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;stopwatch/elapsedticks&quot;&gt;elapsedTicks&lt;/a&gt; counter converted to microseconds.</source>
          <target state="translated">&lt;a href=&quot;stopwatch/elapsedticks&quot;&gt;elapsedTicksの&lt;/a&gt;カウンタは、マイクロ秒に変換します。</target>
        </trans-unit>
        <trans-unit id="380cd9d84a6b747f5fe04cade39694675dc47c00" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;stopwatch/elapsedticks&quot;&gt;elapsedTicks&lt;/a&gt; counter converted to milliseconds.</source>
          <target state="translated">&lt;a href=&quot;stopwatch/elapsedticks&quot;&gt;elapsedTicksの&lt;/a&gt;カウンターは、ミリ秒に変換されます。</target>
        </trans-unit>
        <trans-unit id="8c822e0b1ab2d8957523024d3da9ccefb36d0d33" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;stream/pipe&quot;&gt;Stream.pipe&lt;/a&gt; accepts a &lt;code&gt;StreamConsumer&lt;/code&gt; and will pass the stream to the consumer's &lt;a href=&quot;streamconsumer/addstream&quot;&gt;addStream&lt;/a&gt; method. When that completes, it will call &lt;a href=&quot;streamconsumer/close&quot;&gt;close&lt;/a&gt; and then complete its own returned future.</source>
          <target state="translated">&lt;a href=&quot;stream/pipe&quot;&gt;Stream.pipeは&lt;/a&gt;受け入れ &lt;code&gt;StreamConsumer&lt;/code&gt; をし、消費者のにストリームを渡します&lt;a href=&quot;streamconsumer/addstream&quot;&gt;addStreamの&lt;/a&gt;方法。それが完了すると、それは&lt;a href=&quot;streamconsumer/close&quot;&gt;close&lt;/a&gt;を呼び出してから、返された未来を完了します。</target>
        </trans-unit>
        <trans-unit id="dceb48df6e94b1ee7431b5aedba7f9145455ee4f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;transferabletypeddata-class&quot;&gt;TransferableTypedData&lt;/a&gt; can be moved between isolates, so sending it through a send port will only take constant time.</source>
          <target state="translated">&lt;a href=&quot;transferabletypeddata-class&quot;&gt;TransferableTypedDataは、&lt;/a&gt;分離株の間で移動することができるので、送信ポートを介して、それを送信するだけで、一定の時間がかかります。</target>
        </trans-unit>
        <trans-unit id="4f13ede51708e6395992ff05b4c970b21f7086bb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;type&quot;&gt;type&lt;/a&gt; of the &lt;a href=&quot;../internetaddress-class&quot;&gt;InternetAddress&lt;/a&gt; specified what IP protocol.</source>
          <target state="translated">&lt;a href=&quot;../internetaddress-class&quot;&gt;InternetAddress&lt;/a&gt;の&lt;a href=&quot;type&quot;&gt;タイプ&lt;/a&gt;は、どのIPプロトコルを指定しました。</target>
        </trans-unit>
        <trans-unit id="88825b4ac62e215c750f9e8b54206dbb11d2720a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;uri-class&quot;&gt;Uri&lt;/a&gt; that this &lt;code&gt;UriData&lt;/code&gt; is giving access to. &lt;a href=&quot;uridata/uri&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;uri-class&quot;&gt;ウリは&lt;/a&gt;このことを &lt;code&gt;UriData&lt;/code&gt; はへのアクセス権を与えています。&lt;a href=&quot;uridata/uri&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4c5e330b1620b587cb427820a2502fa7855fe1b5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;websocket-class&quot;&gt;WebSocket&lt;/a&gt; class provides support for the web socket protocol. This allows full-duplex communications between client and server applications.</source>
          <target state="translated">&lt;a href=&quot;websocket-class&quot;&gt;WebSocket&lt;/a&gt;クラスは、Webソケットプロトコルのサポートを提供します。これにより、クライアントアプリケーションとサーバーアプリケーション間の全二重通信が可能になります。</target>
        </trans-unit>
        <trans-unit id="ea508defca1eac8d486fef886962e9639ff495af" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;websockettransformer-class&quot;&gt;WebSocketTransformer&lt;/a&gt; provides the ability to upgrade a &lt;a href=&quot;httprequest-class&quot;&gt;HttpRequest&lt;/a&gt; to a &lt;a href=&quot;websocket-class&quot;&gt;WebSocket&lt;/a&gt; connection. It supports both upgrading a single &lt;a href=&quot;httprequest-class&quot;&gt;HttpRequest&lt;/a&gt; and upgrading a stream of &lt;a href=&quot;httprequest-class&quot;&gt;HttpRequest&lt;/a&gt;s.</source>
          <target state="translated">&lt;a href=&quot;websockettransformer-class&quot;&gt;WebSocketTransformerは、&lt;/a&gt;アップグレードする機能を提供&lt;a href=&quot;httprequest-class&quot;&gt;にHttpRequestを&lt;/a&gt;する&lt;a href=&quot;websocket-class&quot;&gt;のWebSocket&lt;/a&gt;接続を。単一の&lt;a href=&quot;httprequest-class&quot;&gt;HttpRequestの&lt;/a&gt;アップグレードと&lt;a href=&quot;httprequest-class&quot;&gt;HttpRequest&lt;/a&gt;のストリームのアップグレードの両方をサポートしています。</target>
        </trans-unit>
        <trans-unit id="1d5a279bdf77c4798c0c5f28009777c4daac7786" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;websockettransformer-class&quot;&gt;WebSocketTransformer&lt;/a&gt; provides the ability to upgrade a &lt;a href=&quot;httprequest-class&quot;&gt;HttpRequest&lt;/a&gt; to a &lt;a href=&quot;websocket-class&quot;&gt;WebSocket&lt;/a&gt; connection. It supports both upgrading a single &lt;a href=&quot;httprequest-class&quot;&gt;HttpRequest&lt;/a&gt; and upgrading a stream of &lt;a href=&quot;httprequest-class&quot;&gt;HttpRequest&lt;/a&gt;s. &lt;a href=&quot;websockettransformer-class&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;websockettransformer-class&quot;&gt;WebSocketTransformerは、&lt;/a&gt;アップグレードする機能を提供&lt;a href=&quot;httprequest-class&quot;&gt;にHttpRequestを&lt;/a&gt;する&lt;a href=&quot;websocket-class&quot;&gt;のWebSocket&lt;/a&gt;接続を。単一の&lt;a href=&quot;httprequest-class&quot;&gt;HttpRequestの&lt;/a&gt;アップグレードと&lt;a href=&quot;httprequest-class&quot;&gt;HttpRequest&lt;/a&gt;のストリームのアップグレードの両方をサポートしています。&lt;a href=&quot;websockettransformer-class&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f69d725b16d29abd000ee4748e45644b10cc41d0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;zlibcodec-class&quot;&gt;ZLibCodec&lt;/a&gt; encodes raw bytes to ZLib compressed bytes and decodes ZLib compressed bytes to raw bytes.</source>
          <target state="translated">&lt;a href=&quot;zlibcodec-class&quot;&gt;ZLibCodecは、&lt;/a&gt; ZLIB圧縮されたバイトに生のバイトを符号化し、復号ZLIB圧縮バイト生バイト。</target>
        </trans-unit>
        <trans-unit id="e89e3561a0026bcdbf734831ee66a168731e5cea" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;zlibdecoder-class&quot;&gt;ZLibDecoder&lt;/a&gt; is used by &lt;a href=&quot;zlibcodec-class&quot;&gt;ZLibCodec&lt;/a&gt; and &lt;a href=&quot;gzipcodec-class&quot;&gt;GZipCodec&lt;/a&gt; to decompress data.</source>
          <target state="translated">&lt;a href=&quot;zlibdecoder-class&quot;&gt;ZLibDecoderは&lt;/a&gt;で使用され&lt;a href=&quot;zlibcodec-class&quot;&gt;ZLibCodec&lt;/a&gt;と&lt;a href=&quot;gzipcodec-class&quot;&gt;GZipCodec&lt;/a&gt;解凍データに。</target>
        </trans-unit>
        <trans-unit id="84d15e6c3b74f1cc82c1985708512a3e3b5fa5e9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;zlibencoder-class&quot;&gt;ZLibEncoder&lt;/a&gt; encoder is used by &lt;a href=&quot;zlibcodec-class&quot;&gt;ZLibCodec&lt;/a&gt; and &lt;a href=&quot;gzipcodec-class&quot;&gt;GZipCodec&lt;/a&gt; to compress data.</source>
          <target state="translated">&lt;a href=&quot;zlibencoder-class&quot;&gt;ZLibEncoderの&lt;/a&gt;エンコーダがで使用され&lt;a href=&quot;zlibcodec-class&quot;&gt;ZLibCodec&lt;/a&gt;と&lt;a href=&quot;gzipcodec-class&quot;&gt;GZipCodec&lt;/a&gt;圧縮データに。</target>
        </trans-unit>
        <trans-unit id="43389597353efc738d3af46e823e8a533dcd0fbc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;zone-class&quot;&gt;Zone&lt;/a&gt; class is not subclassable, but users can provide custom zones by forking an existing zone (usually &lt;a href=&quot;zone/current&quot;&gt;Zone.current&lt;/a&gt;) with a &lt;a href=&quot;zonespecification-class&quot;&gt;ZoneSpecification&lt;/a&gt;. This is similar to creating a new class that extends the base &lt;code&gt;Zone&lt;/code&gt; class and that overrides some methods, except without actually creating a new class. Instead the overriding methods are provided as functions that explicitly take the equivalent of their own class, the &quot;super&quot; class and the &lt;code&gt;this&lt;/code&gt; object as parameters.</source>
          <target state="translated">&lt;a href=&quot;zone-class&quot;&gt;ゾーン&lt;/a&gt;クラスがサブクラス化ではなく、ユーザーが既存のゾーン（通常はフォークでカスタムゾーンを提供することができます&lt;a href=&quot;zone/current&quot;&gt;Zone.currentを&lt;/a&gt;持つ）&lt;a href=&quot;zonespecification-class&quot;&gt;ZoneSpecification&lt;/a&gt;。これは、実際に新しいクラスを作成しないことを除いて、基本 &lt;code&gt;Zone&lt;/code&gt; クラスを拡張し、いくつかのメソッドをオーバーライドする新しいクラスを作成するのと似ています。代わりに、オーバーライドメソッドは、独自のクラス、「スーパー」クラス、および &lt;code&gt;this&lt;/code&gt; オブジェクトに相当するものをパラメーターとして明示的に受け取る関数として提供されます。</target>
        </trans-unit>
        <trans-unit id="061593d9715cdc9fe9ed342b8e3904caa74e9e97" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--packages&lt;/code&gt; flag passed to the executable used to run the script in this isolate.</source>
          <target state="translated">&lt;code&gt;--packages&lt;/code&gt; この分離株でスクリプトを実行するために使用される実行可能ファイルに渡されるフラグです。</target>
        </trans-unit>
        <trans-unit id="7043af1a4b44c41f03fa85b9dbd79394fbe739d1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--packages&lt;/code&gt; flag passed to the executable used to run the script in this isolate. &lt;a href=&quot;platform/packageconfig&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;--packages&lt;/code&gt; この分離株でスクリプトを実行するために使用される実行可能ファイルに渡されるフラグです。&lt;a href=&quot;platform/packageconfig&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="815f6125cca48a342281360b2b8b2bae2279fde6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@Deprecated&lt;/code&gt; annotation applies to libraries, top-level declarations (variables, getters, setters, functions, classes and typedefs), class-level declarations (variables, getters, setters, methods, operators or constructors, whether static or not), named optional arguments and trailing optional positional parameters.</source>
          <target state="translated">&lt;code&gt;@Deprecated&lt;/code&gt; 注釈は、名前の（静的かどうか、変数、ゲッター、セッター、メソッド、演算子またはコンストラクタ）ライブラリは、トップレベルの宣言（変数、ゲッター、セッター、関数、クラスと型定義）、クラスレベルの宣言に適用されますオプションの引数と後続のオプションの位置パラメータ。</target>
        </trans-unit>
        <trans-unit id="28ecae0dcb7f8d5b17346a84ce9d198d5a13ece9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt; header of &lt;code&gt;url&lt;/code&gt; must be set to true.</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; の &lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt; ヘッダーをtrueに設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="fa4ac39b56c92671f8ce6a023760d836fce540c8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; header of &lt;code&gt;url&lt;/code&gt; cannot contain a wildcard (*).</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; の &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; ヘッダーにワイルドカード（*）を含めることはできません。</target>
        </trans-unit>
        <trans-unit id="e7aaf1fb4b79ad4b7f017c7c5ce841a4a98ba437" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FutureOr&amp;lt;int&amp;gt;&lt;/code&gt; type is actually the &quot;type union&quot; of the types &lt;code&gt;int&lt;/code&gt; and &lt;code&gt;Future&amp;lt;int&amp;gt;&lt;/code&gt;. This type union is defined in such a way that &lt;code&gt;FutureOr&amp;lt;Object&amp;gt;&lt;/code&gt; is both a super- and sub-type of &lt;code&gt;Object&lt;/code&gt; (sub-type because &lt;code&gt;Object&lt;/code&gt; is one of the types of the union, super-type because &lt;code&gt;Object&lt;/code&gt; is a super-type of both of the types of the union). Together it means that &lt;code&gt;FutureOr&amp;lt;Object&amp;gt;&lt;/code&gt; is equivalent to &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FutureOr&amp;lt;int&amp;gt;&lt;/code&gt; タイプは、実際にタイプの「タイプ組合」である &lt;code&gt;int&lt;/code&gt; 型と &lt;code&gt;Future&amp;lt;int&amp;gt;&lt;/code&gt; 。このタイプの組合は、そのように定義されて &lt;code&gt;FutureOr&amp;lt;Object&amp;gt;&lt;/code&gt; スーパーとのサブタイプの両方である &lt;code&gt;Object&lt;/code&gt; ので（サブタイプ &lt;code&gt;Object&lt;/code&gt; ので、スーパータイプ、組合のタイプのいずれかである &lt;code&gt;Object&lt;/code&gt; スーパータイプであります組合の両方のタイプの）。一緒にそれがあることを意味 &lt;code&gt;FutureOr&amp;lt;Object&amp;gt;&lt;/code&gt; と等価である &lt;code&gt;Object&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0ab68df5fc200fb157d430b6b52c81a336b440c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Host&lt;/code&gt; header for the request will be set to the value &lt;a href=&quot;../../dart-core/uri/host&quot;&gt;Uri.host&lt;/a&gt;:&lt;a href=&quot;../../dart-core/uri/port&quot;&gt;Uri.port&lt;/a&gt; from &lt;code&gt;url&lt;/code&gt; (if &lt;code&gt;url.host&lt;/code&gt; is an IP address, it will still be used in the &lt;code&gt;Host&lt;/code&gt; header). This can be overridden through the &lt;a href=&quot;../httpclientrequest-class&quot;&gt;HttpClientRequest&lt;/a&gt; interface before the request is sent.</source>
          <target state="translated">&lt;code&gt;Host&lt;/code&gt; リクエストのヘッダの値に設定される&lt;a href=&quot;../../dart-core/uri/host&quot;&gt;Uri.host&lt;/a&gt;：&lt;a href=&quot;../../dart-core/uri/port&quot;&gt;Uri.port&lt;/a&gt;から &lt;code&gt;url&lt;/code&gt; （場合 &lt;code&gt;url.host&lt;/code&gt; は IPアドレスであり、それはまだで使用される &lt;code&gt;Host&lt;/code&gt; ヘッダー）。これは、リクエストが送信される前に&lt;a href=&quot;../httpclientrequest-class&quot;&gt;HttpClientRequest&lt;/a&gt;インターフェイスを介してオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="d581f27e8b35639ead760118e29271ac9bc2a236" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Host&lt;/code&gt; header for the request will be set to the value &lt;code&gt;host&lt;/code&gt;:&lt;code&gt;port&lt;/code&gt; (if &lt;code&gt;host&lt;/code&gt; is an IP address, it will still be used in the &lt;code&gt;Host&lt;/code&gt; header). This can be overridden through the &lt;a href=&quot;../httpclientrequest-class&quot;&gt;HttpClientRequest&lt;/a&gt; interface before the request is sent.</source>
          <target state="translated">リクエストの &lt;code&gt;Host&lt;/code&gt; ヘッダーは値 &lt;code&gt;host&lt;/code&gt; ： &lt;code&gt;port&lt;/code&gt; に設定されます（ &lt;code&gt;host&lt;/code&gt; がIPアドレスの場合、 &lt;code&gt;Host&lt;/code&gt; ヘッダーで引き続き使用されます）。これは、リクエストが送信される前に&lt;a href=&quot;../httpclientrequest-class&quot;&gt;HttpClientRequest&lt;/a&gt;インターフェイスを介してオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="faa1aebe49c779834ba1439f139be6524f487ffb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Isolate&lt;/code&gt; object provided by a spawn operation will have the control port and capabilities needed to control the isolate. New isolate objects can be created without some of these capabilities if necessary, using the &lt;a href=&quot;isolate/isolate&quot;&gt;Isolate.Isolate&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;code&gt;Isolate&lt;/code&gt; 産卵操作によって提供されるオブジェクトは、制御ポートおよび分離株を制御するために必要な能力を持っています。&lt;a href=&quot;isolate/isolate&quot;&gt;Isolate.Isolate&lt;/a&gt;コンストラクターを使用すると、必要に応じてこれらの機能の一部を使用せずに新しい分離オブジェクトを作成できます。</target>
        </trans-unit>
        <trans-unit id="d757fe73fb4321d14d86304afc0bd1fc19d252ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Iterator&lt;/code&gt; is initially positioned before the first element. Before accessing the first element the iterator must thus be advanced using &lt;a href=&quot;iterator/movenext&quot;&gt;moveNext&lt;/a&gt; to point to the first element. If no element is left, then &lt;a href=&quot;iterator/movenext&quot;&gt;moveNext&lt;/a&gt; returns false, &lt;a href=&quot;iterator/current&quot;&gt;current&lt;/a&gt; returns &lt;code&gt;null&lt;/code&gt;, and all further calls to &lt;a href=&quot;iterator/movenext&quot;&gt;moveNext&lt;/a&gt; will also return false.</source>
          <target state="translated">&lt;code&gt;Iterator&lt;/code&gt; 最初に、最初の要素の前に配置されています。したがって、最初の要素にアクセスする前に、&lt;a href=&quot;iterator/movenext&quot;&gt;moveNext&lt;/a&gt;を使用して最初の要素を指すようにイテレータを進める必要があります。要素が残っていない場合、&lt;a href=&quot;iterator/movenext&quot;&gt;moveNext&lt;/a&gt;はfalseを返し、&lt;a href=&quot;iterator/current&quot;&gt;current&lt;/a&gt;は &lt;code&gt;null&lt;/code&gt; を返し、&lt;a href=&quot;iterator/movenext&quot;&gt;moveNext&lt;/a&gt;への以降のすべての呼び出しもfalseを返します。</target>
        </trans-unit>
        <trans-unit id="57dfd52805e10ae07e25da97de55baa71f796b84" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Iterator&lt;/code&gt; is initially positioned before the first element. Before accessing the first element the iterator must thus be advanced using &lt;a href=&quot;iterator/movenext&quot;&gt;moveNext&lt;/a&gt; to point to the first element. If no element is left, then &lt;a href=&quot;iterator/movenext&quot;&gt;moveNext&lt;/a&gt; returns false, and all further calls to &lt;a href=&quot;iterator/movenext&quot;&gt;moveNext&lt;/a&gt; will also return false.</source>
          <target state="translated">&lt;code&gt;Iterator&lt;/code&gt; 最初に、最初の要素の前に配置されています。したがって、最初の要素にアクセスする前に、&lt;a href=&quot;iterator/movenext&quot;&gt;moveNext&lt;/a&gt;を使用してイテレータを進め、最初の要素を指す必要があります。どの要素が残っていない場合は、&lt;a href=&quot;iterator/movenext&quot;&gt;MoveNextメソッドは&lt;/a&gt;偽を返し、すべての更なる通話&lt;a href=&quot;iterator/movenext&quot;&gt;MoveNextメソッドは&lt;/a&gt;また、偽を返します。</target>
        </trans-unit>
        <trans-unit id="6a5a585dad252ea214cdface397cdc7516fe21dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LinkedHashSet&lt;/code&gt; also keep track of the order that elements were inserted in, and iteration happens in first-to-last insertion order.</source>
          <target state="translated">&lt;code&gt;LinkedHashSet&lt;/code&gt; のはまた、要素が中に挿入された順序を追跡し、そして反復は最初から最後オーダーで起こります。</target>
        </trans-unit>
        <trans-unit id="30b766396c112ca65249e2985b2ce6f1e7cf185f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;action&lt;/code&gt; function can use methods on &lt;a href=&quot;../doublelinkedqueueentry-class&quot;&gt;DoubleLinkedQueueEntry&lt;/a&gt; to remove the entry or it can insert elements before or after then entry. If the current entry is removed, iteration continues with the entry that was following the current entry when &lt;code&gt;action&lt;/code&gt; was called. Any elements inserted after the current element before it is removed will not be visited by the iteration.</source>
          <target state="translated">&lt;code&gt;action&lt;/code&gt; 機能は、上のメソッドを使用することができます&lt;a href=&quot;../doublelinkedqueueentry-class&quot;&gt;DoubleLinkedQueueEntry&lt;/a&gt;エントリを削除するか、それは前またはその後、エントリの後に要素を挿入することができます。現在のエントリが削除された場合、 &lt;code&gt;action&lt;/code&gt; が呼び出されたときに現在のエントリに続いていたエントリから反復が続行されます。削除される前に現在の要素の後に挿入された要素は、反復によってアクセスされません。</target>
        </trans-unit>
        <trans-unit id="19b7fb08a53b8719840a829248eb9a503069a995" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;action&lt;/code&gt; function is called when this future completes, whether it does so with a value or with an error.</source>
          <target state="translated">&lt;code&gt;action&lt;/code&gt; この未来が完了したときの機能は、それが値を持つか、エラーでそうするかどうか、と呼ばれています。</target>
        </trans-unit>
        <trans-unit id="43370da195fce961d718bff2e4ec4cc5a1d95820" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;action&lt;/code&gt; function is called with each header's name and a list of the header's values. The casing of the name string is determined by the last &lt;a href=&quot;add&quot;&gt;add&lt;/a&gt; or &lt;a href=&quot;set&quot;&gt;set&lt;/a&gt; operation for that particular header, which defaults to lower-casing the header name unless explicitly set to preserve the case.</source>
          <target state="translated">&lt;code&gt;action&lt;/code&gt; 機能は、各ヘッダの名前とヘッダの値のリストと呼ばれています。名前文字列の大文字と小文字は、その特定のヘッダーの最後の&lt;a href=&quot;add&quot;&gt;追加&lt;/a&gt;または&lt;a href=&quot;set&quot;&gt;集合&lt;/a&gt;演算によって決定されます。大文字と小文字を区別するように明示的に設定されていない限り、デフォルトではヘッダー名は小文字になります。</target>
        </trans-unit>
        <trans-unit id="5f7b10dd9e99d3dfc044e91aa7987b6ef1d6f320" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;action&lt;/code&gt; may be either synchronous or asynchronous.</source>
          <target state="translated">&lt;code&gt;action&lt;/code&gt; 同期または非同期のいずれであってもよいです。</target>
        </trans-unit>
        <trans-unit id="49136e8eaebec14f18ab24d60f5da69da5adf300" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;addError&lt;/code&gt; API is inherited from &lt;code&gt;StreamSink&lt;/code&gt; and calling it will result in an unhandled asynchronous error unless there is an error handler on &lt;code&gt;done&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;addError&lt;/code&gt; の APIから継承され &lt;code&gt;StreamSink&lt;/code&gt; と上のエラーハンドラがない限り、それは未処理の非同期エラーになります呼び出し &lt;code&gt;done&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4d762bcec0552c806ecdc42eb1f1d13663b42993" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;address&lt;/code&gt; can either be a &lt;a href=&quot;../../dart-core/string-class&quot;&gt;String&lt;/a&gt; or an &lt;a href=&quot;../internetaddress-class&quot;&gt;InternetAddress&lt;/a&gt;. If &lt;code&gt;address&lt;/code&gt; is a &lt;a href=&quot;../../dart-core/string-class&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;bind&quot;&gt;bind&lt;/a&gt; will perform a &lt;a href=&quot;../internetaddress/lookup&quot;&gt;InternetAddress.lookup&lt;/a&gt; and use the first value in the list. To listen on the loopback adapter, which will allow only incoming connections from the local host, use the value &lt;a href=&quot;../internetaddress/loopbackipv4&quot;&gt;InternetAddress.loopbackIPv4&lt;/a&gt; or &lt;a href=&quot;../internetaddress/loopbackipv6&quot;&gt;InternetAddress.loopbackIPv6&lt;/a&gt;. To allow for incoming connection from the network use either one of the values &lt;a href=&quot;../internetaddress/anyipv4&quot;&gt;InternetAddress.anyIPv4&lt;/a&gt; or &lt;a href=&quot;../internetaddress/anyipv6&quot;&gt;InternetAddress.anyIPv6&lt;/a&gt; to bind to all interfaces or the IP address of a specific interface.</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt; いずれかになります&lt;a href=&quot;../../dart-core/string-class&quot;&gt;文字列&lt;/a&gt;または&lt;a href=&quot;../internetaddress-class&quot;&gt;たInternetAddress&lt;/a&gt;。 &lt;code&gt;address&lt;/code&gt; が&lt;a href=&quot;../../dart-core/string-class&quot;&gt;Stringの&lt;/a&gt;場合、&lt;a href=&quot;bind&quot;&gt;bind&lt;/a&gt;は&lt;a href=&quot;../internetaddress/lookup&quot;&gt;InternetAddress.lookup&lt;/a&gt;を実行し、リストの最初の値を使用します。ローカルホストからの着信接続のみを許可するループバックアダプターをリッスンするには、値&lt;a href=&quot;../internetaddress/loopbackipv4&quot;&gt;InternetAddress.loopbackIPv4&lt;/a&gt;または&lt;a href=&quot;../internetaddress/loopbackipv6&quot;&gt;InternetAddress.loopbackIPv6を&lt;/a&gt;使用します。ネットワークからの着信接続を許可するには、&lt;a href=&quot;../internetaddress/anyipv4&quot;&gt;InternetAddress.anyIPv4&lt;/a&gt;または&lt;a href=&quot;../internetaddress/anyipv6&quot;&gt;InternetAddress.anyIPv6の&lt;/a&gt;いずれかの値を使用して、すべてのインターフェースまたは特定のインターフェースのIPアドレスにバインドします。</target>
        </trans-unit>
        <trans-unit id="464b342cd7bbaf02aed2ccaf9c54ba15ed14ac79" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;address&lt;/code&gt; can either be a &lt;a href=&quot;../dart-core/string-class&quot;&gt;String&lt;/a&gt; or an &lt;a href=&quot;internetaddress-class&quot;&gt;InternetAddress&lt;/a&gt;. If &lt;code&gt;address&lt;/code&gt; is a &lt;a href=&quot;../dart-core/string-class&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;httpserver/bind&quot;&gt;bind&lt;/a&gt; will perform a &lt;a href=&quot;internetaddress/lookup&quot;&gt;InternetAddress.lookup&lt;/a&gt; and use the first value in the list. To listen on the loopback adapter, which will allow only incoming connections from the local host, use the value &lt;a href=&quot;internetaddress/loopbackipv4&quot;&gt;InternetAddress.loopbackIPv4&lt;/a&gt; or &lt;a href=&quot;internetaddress/loopbackipv6&quot;&gt;InternetAddress.loopbackIPv6&lt;/a&gt;. To allow for incoming connection from the network use either one of the values &lt;a href=&quot;internetaddress/anyipv4&quot;&gt;InternetAddress.anyIPv4&lt;/a&gt; or &lt;a href=&quot;internetaddress/anyipv6&quot;&gt;InternetAddress.anyIPv6&lt;/a&gt; to bind to all interfaces or the IP address of a specific interface. &lt;a href=&quot;httpserver/bindsecure&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt; いずれかになります&lt;a href=&quot;../dart-core/string-class&quot;&gt;文字列&lt;/a&gt;または&lt;a href=&quot;internetaddress-class&quot;&gt;たInternetAddress&lt;/a&gt;。 &lt;code&gt;address&lt;/code&gt; が&lt;a href=&quot;../dart-core/string-class&quot;&gt;Stringの&lt;/a&gt;場合、&lt;a href=&quot;httpserver/bind&quot;&gt;bind&lt;/a&gt;は&lt;a href=&quot;internetaddress/lookup&quot;&gt;InternetAddress.lookup&lt;/a&gt;を実行し、リストの最初の値を使用します。ローカルホストからの着信接続のみを許可するループバックアダプターをリッスンするには、値&lt;a href=&quot;internetaddress/loopbackipv4&quot;&gt;InternetAddress.loopbackIPv4&lt;/a&gt;または&lt;a href=&quot;internetaddress/loopbackipv6&quot;&gt;InternetAddress.loopbackIPv6を&lt;/a&gt;使用します。ネットワークからの着信接続を許可するには、&lt;a href=&quot;internetaddress/anyipv4&quot;&gt;InternetAddress.anyIPv4&lt;/a&gt;または&lt;a href=&quot;internetaddress/anyipv6&quot;&gt;InternetAddress.anyIPv6の&lt;/a&gt;いずれかの値を使用して、すべてのインターフェースまたは特定のインターフェースのIPアドレスにバインドします。&lt;a href=&quot;httpserver/bindsecure&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="68eebc1eb441b21ca167a9c609112a35ad6b6ec6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;address&lt;/code&gt; must be 2-byte aligned.</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt; 2バイトを整列させる必要があります。</target>
        </trans-unit>
        <trans-unit id="ef889ab4bd92fe947f67f0d0134b6ba84877b865" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;address&lt;/code&gt; must be 4-byte aligned.</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt; 4バイトを整列させる必要があります。</target>
        </trans-unit>
        <trans-unit id="c98e538372dc50f72a98aeb0be3fbff77fb89ca9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;address&lt;/code&gt; must be 8-byte aligned.</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt; 8バイトを整列させる必要があります。</target>
        </trans-unit>
        <trans-unit id="dd2aa70e40c9a45f1ed49bdee833b791514abec7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;address&lt;/code&gt; must be aligned according to the struct alignment rules of the platform.</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt; プラットフォームの構造体の位置合わせ規則に従って整列されなければなりません。</target>
        </trans-unit>
        <trans-unit id="01686236f0b5a3d340df3061121e5023ad159e6b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bufferSize&lt;/code&gt; is the size of the internal buffers used to collect UTF-8 code units. If using &lt;a href=&quot;startchunkedconversion&quot;&gt;startChunkedConversion&lt;/a&gt;, it will be the size of the chunks.</source>
          <target state="translated">&lt;code&gt;bufferSize&lt;/code&gt; 収集UTF-8コード・ユニットに使用される内部バッファのサイズです。&lt;a href=&quot;startchunkedconversion&quot;&gt;startChunkedConversion&lt;/a&gt;を使用する場合は、チャンクのサイズになります。</target>
        </trans-unit>
        <trans-unit id="7ea7bf10c605460e6304f89b0bb7e244b2c8e177" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;byte&lt;/code&gt; will be bit-representation truncated to the range 0 .. 255.</source>
          <target state="translated">&lt;code&gt;byte&lt;/code&gt; 0 .. 255の範囲に切り捨てビット表現になります。</target>
        </trans-unit>
        <trans-unit id="60febc9fca5f25c1cee1f648ec325961432a78df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;byte&lt;/code&gt; will be truncated to an 8-bit value in the range 0 .. 255.</source>
          <target state="translated">&lt;code&gt;byte&lt;/code&gt; 範囲0 .. 255の8ビット値に切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="25841d544d6e668ef8f01e1cac0731d3ade369f7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bytes&lt;/code&gt; should be valid UTF-8 encoded Unicode characters. If they are not, the receiving end will close the connection.</source>
          <target state="translated">&lt;code&gt;bytes&lt;/code&gt; 有効なUTF-8でエンコードされたUnicode文字でなければなりません。そうでない場合、受信側は接続を閉じます。</target>
        </trans-unit>
        <trans-unit id="52f8c5ea709d64b196747b9e0f89fcb3f94120a7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;callback&lt;/code&gt; function is invoked after the given &lt;code&gt;duration&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; 関数は、与えられた後に呼び出される &lt;code&gt;duration&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2ef7d65bc7109922e7c5fac9517a4fa842d70694" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;callback&lt;/code&gt; is invoked repeatedly with &lt;code&gt;duration&lt;/code&gt; intervals until canceled with the &lt;a href=&quot;cancel&quot;&gt;cancel&lt;/a&gt; function.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; で繰り返し呼び出された &lt;code&gt;duration&lt;/code&gt; でキャンセルされるまでの間隔&lt;a href=&quot;cancel&quot;&gt;キャンセル&lt;/a&gt;機能。</target>
        </trans-unit>
        <trans-unit id="46d5c47d88e02a70cf3bd2d7a4cff53e37196071" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;charCodes&lt;/code&gt; can be UTF-16 code units or runes. If a char-code value is 16-bit, it is copied verbatim:</source>
          <target state="translated">&lt;code&gt;charCodes&lt;/code&gt; は、 UTF-16コード単位又はルーンとすることができます。文字コード値が16ビットの場合、そのままコピーされます。</target>
        </trans-unit>
        <trans-unit id="01c3e7d9f5c179912ee3417c0018a981955ebc59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;compare&lt;/code&gt; function must act as a &lt;a href=&quot;../../dart-core/comparator&quot;&gt;Comparator&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;compare&lt;/code&gt; 関数は、として機能しなければならない&lt;a href=&quot;../../dart-core/comparator&quot;&gt;コンパレータ&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4c7dbae21ba6d23cc5a18a7da55e8977e1f806fe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;compare&lt;/code&gt; function must act as a &lt;a href=&quot;../comparator&quot;&gt;Comparator&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;compare&lt;/code&gt; 関数は、として機能しなければならない&lt;a href=&quot;../comparator&quot;&gt;コンパレータ&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1b0159b698110bf1155f7dc2586e0a95cd6aa900" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;computation&lt;/code&gt; must not be omitted if the event type &lt;code&gt;T&lt;/code&gt; does not allow &lt;code&gt;null&lt;/code&gt; as a value.</source>
          <target state="translated">&lt;code&gt;computation&lt;/code&gt; イベントタイプ場合は省略してはならない &lt;code&gt;T&lt;/code&gt; が許可されない &lt;code&gt;null&lt;/code&gt; 値として。</target>
        </trans-unit>
        <trans-unit id="e708f1110048e7518e235ce7a93a05df02ef6618" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;computation&lt;/code&gt; will be executed after the given &lt;code&gt;duration&lt;/code&gt; has passed, and the future is completed with the result of the computation.</source>
          <target state="translated">&lt;code&gt;computation&lt;/code&gt; 与えられた後に実行される &lt;code&gt;duration&lt;/code&gt; 経過し、かつ将来の計算の結果で終了します。</target>
        </trans-unit>
        <trans-unit id="bee32a8da2474cf59e1a2bb127b256c67bd6fed4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;count&lt;/code&gt; must not be negative.</source>
          <target state="translated">&lt;code&gt;count&lt;/code&gt; 負であってはなりません。</target>
        </trans-unit>
        <trans-unit id="69e4f92fb789215c1fa32d11a8d208abcfddb82f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;current&lt;/code&gt; getter should keep its value until the next call to &lt;a href=&quot;movenext&quot;&gt;moveNext&lt;/a&gt;, even if an underlying collection changes. After a successful call to &lt;code&gt;moveNext&lt;/code&gt;, the user doesn't need to cache the current value, but can keep reading it from the iterator.</source>
          <target state="translated">&lt;code&gt;current&lt;/code&gt; ゲッターは、次の呼び出しまでその値を維持する必要があり&lt;a href=&quot;movenext&quot;&gt;MoveNextメソッド&lt;/a&gt;基になるコレクションが変化しても、。 &lt;code&gt;moveNext&lt;/code&gt; の呼び出しが成功した後、ユーザーは現在の値をキャッシュする必要はありませんが、イテレータから値を読み続けることができます。</target>
        </trans-unit>
        <trans-unit id="7b7ba781b9ca48bfddd440ca0566a753d9fce035" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;environment&lt;/code&gt; is a mapping from strings to strings which the spawned isolate uses when looking up &lt;a href=&quot;../../dart-core/string/string.fromenvironment&quot;&gt;String.fromEnvironment&lt;/a&gt; values. The system may add its own entries to environment as well. If &lt;code&gt;environment&lt;/code&gt; is omitted, the spawned isolate has the same environment declarations as the spawning isolate.</source>
          <target state="translated">&lt;code&gt;environment&lt;/code&gt; 生み出された分離株の用途が見上げ文字列への文字列からマッピングされ&lt;a href=&quot;../../dart-core/string/string.fromenvironment&quot;&gt;String.fromEnvironment&lt;/a&gt;値を。システムは、独自のエントリを環境にも追加する場合があります。場合は &lt;code&gt;environment&lt;/code&gt; 省略され、生成された分離株は産卵分離株と同じ環境宣言を持っています。</target>
        </trans-unit>
        <trans-unit id="b556704d0ec15b07e4485ddfd2f84c6b58e4baef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;exponent&lt;/code&gt; must be non-negative and &lt;code&gt;modulus&lt;/code&gt; must be positive.</source>
          <target state="translated">&lt;code&gt;exponent&lt;/code&gt; 非負でなければならず、 &lt;code&gt;modulus&lt;/code&gt; 正でなければなりません。</target>
        </trans-unit>
        <trans-unit id="127a3747538f6e583e4e04d2ecf228b78dc2c8e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;exponent&lt;/code&gt; must otherwise be positive.</source>
          <target state="translated">そうでなければ、 &lt;code&gt;exponent&lt;/code&gt; は正でなければなりません。</target>
        </trans-unit>
        <trans-unit id="f890b74e4ab5a3a4edd0e5e6047e9a6f36618bc9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;formattedString&lt;/code&gt; must not be &lt;code&gt;null&lt;/code&gt;. Throws a &lt;a href=&quot;../formatexception-class&quot;&gt;FormatException&lt;/a&gt; if the input string cannot be parsed.</source>
          <target state="translated">&lt;code&gt;formattedString&lt;/code&gt; はあってはならない &lt;code&gt;null&lt;/code&gt; 。入力文字列を解析できない場合は、&lt;a href=&quot;../formatexception-class&quot;&gt;FormatExceptionをスロー&lt;/a&gt;します。</target>
        </trans-unit>
        <trans-unit id="7f15200d4c2af7d36f6fabf05636714b1900ca90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;frames&lt;/code&gt; parameter is an Iterable</source>
          <target state="translated">&lt;code&gt;frames&lt;/code&gt; パラメータは、反復処理可能です</target>
        </trans-unit>
        <trans-unit id="4c4848c2b600eea31353ff7be26d2280d4df0d42" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;futureValue&lt;/code&gt; must not be omitted if &lt;code&gt;null&lt;/code&gt; is not assignable to &lt;code&gt;E&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; を &lt;code&gt;E&lt;/code&gt; に割り当てられない場合は、 &lt;code&gt;futureValue&lt;/code&gt; を省略しないでください。</target>
        </trans-unit>
        <trans-unit id="2318d8eff78e4788e8eb50377675d3525e372ad8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;handleData&lt;/code&gt; function is called for each element of the stream after this function is called. If &lt;code&gt;handleData&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, further elements are ignored.</source>
          <target state="translated">この関数が呼び出された後、 &lt;code&gt;handleData&lt;/code&gt; 関数がストリームの各要素に対して呼び出されます。 &lt;code&gt;handleData&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、それ以上の要素は無視されます。</target>
        </trans-unit>
        <trans-unit id="c1cba5beba179b65067639127494212fdfe6e6c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;handleDone&lt;/code&gt; function is called when the stream closes. The value may be &lt;code&gt;null&lt;/code&gt;, in which case no function is called.</source>
          <target state="translated">&lt;code&gt;handleDone&lt;/code&gt; のストリームが閉じたときに関数が呼び出されます。値は &lt;code&gt;null&lt;/code&gt; の場合があります。その場合、関数は呼び出されません。</target>
        </trans-unit>
        <trans-unit id="706b4b32ae63d6623b3c825ca19fb13808f094dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;handleError&lt;/code&gt; argument may be &lt;code&gt;null&lt;/code&gt;, in which case further error events are considered unhandled, and will be reported to &lt;a href=&quot;../zone/handleuncaughterror&quot;&gt;Zone.handleUncaughtError&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;handleError&lt;/code&gt; のの引数とすることができる &lt;code&gt;null&lt;/code&gt; さらにエラーイベントが未処理とみなされ、およびに報告される場合には、&lt;a href=&quot;../zone/handleuncaughterror&quot;&gt;Zone.handleUncaughtError&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bbee9c8fb97575e7a93d9811245087e6b5712317" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;handleError&lt;/code&gt; function must be able to be called with either one positional argument, or with two positional arguments where the seconds is always a &lt;a href=&quot;../../dart-core/stacktrace-class&quot;&gt;StackTrace&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;handleError&lt;/code&gt; のの機能は、どちらか一方の位置引数を指定して、または秒は常に2つの位置の引数で呼び出すことができなければなりません&lt;a href=&quot;../../dart-core/stacktrace-class&quot;&gt;のStackTrace&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="13474aa99e3924480e5de5fb611b63bdcfb511ac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;headers&lt;/code&gt; argument is specifying additional HTTP headers for setting up the connection. This would typically be the &lt;code&gt;Origin&lt;/code&gt; header and potentially cookies. The keys of the map are the header fields and the values are either String or List</source>
          <target state="translated">&lt;code&gt;headers&lt;/code&gt; 引数は、接続を設定するための追加のHTTPヘッダを指定しています。これは通常、 &lt;code&gt;Origin&lt;/code&gt; ヘッダーであり、Cookieである可能性があります。マップのキーはヘッダーフィールドであり、値は文字列またはリストのいずれかです</target>
        </trans-unit>
        <trans-unit id="5a9822bca221843290ad8bacc91a1b8247d78189" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;host&lt;/code&gt; can either be a &lt;a href=&quot;../../dart-core/string-class&quot;&gt;String&lt;/a&gt; or an &lt;a href=&quot;../internetaddress-class&quot;&gt;InternetAddress&lt;/a&gt;. If &lt;code&gt;host&lt;/code&gt; is a &lt;a href=&quot;../../dart-core/string-class&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;bind&quot;&gt;bind&lt;/a&gt; will perform a &lt;a href=&quot;../internetaddress/lookup&quot;&gt;InternetAddress.lookup&lt;/a&gt; and use the first value in the list. To listen on the loopback interface, which will allow only incoming connections from the local host, use the value &lt;a href=&quot;../internetaddress/loopbackipv4&quot;&gt;InternetAddress.loopbackIPv4&lt;/a&gt; or &lt;a href=&quot;../internetaddress/loopbackipv6&quot;&gt;InternetAddress.loopbackIPv6&lt;/a&gt;. To allow for incoming connection from any network use either one of the values &lt;a href=&quot;../internetaddress/anyipv4&quot;&gt;InternetAddress.anyIPv4&lt;/a&gt; or &lt;a href=&quot;../internetaddress/anyipv6&quot;&gt;InternetAddress.anyIPv6&lt;/a&gt; to bind to all interfaces, or use the IP address of a specific interface.</source>
          <target state="translated">&lt;code&gt;host&lt;/code&gt; いずれかになります&lt;a href=&quot;../../dart-core/string-class&quot;&gt;文字列&lt;/a&gt;または&lt;a href=&quot;../internetaddress-class&quot;&gt;たInternetAddress&lt;/a&gt;。 &lt;code&gt;host&lt;/code&gt; が&lt;a href=&quot;../../dart-core/string-class&quot;&gt;文字列の&lt;/a&gt;場合、&lt;a href=&quot;bind&quot;&gt;bind&lt;/a&gt;は&lt;a href=&quot;../internetaddress/lookup&quot;&gt;InternetAddress.lookup&lt;/a&gt;を実行し、リストの最初の値を使用します。ローカルホストからの着信接続のみを許可するループバックインターフェイスでリッスンするには、値&lt;a href=&quot;../internetaddress/loopbackipv4&quot;&gt;InternetAddress.loopbackIPv4&lt;/a&gt;または&lt;a href=&quot;../internetaddress/loopbackipv6&quot;&gt;InternetAddress.loopbackIPv6を&lt;/a&gt;使用します。任意のネットワークからの着信接続を許可するには、値&lt;a href=&quot;../internetaddress/anyipv4&quot;&gt;InternetAddress.anyIPv4&lt;/a&gt;または&lt;a href=&quot;../internetaddress/anyipv6&quot;&gt;InternetAddress.anyIPv6の&lt;/a&gt;いずれかを使用してすべてのインターフェースにバインドするか、特定のインターフェースのIPアドレスを使用します。</target>
        </trans-unit>
        <trans-unit id="879f5d316345f663e0c4c87eec963e4dfc6242fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;index&lt;/code&gt; must be in the range &lt;code&gt;0 &amp;le; index &amp;lt; length&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;index&lt;/code&gt; 範囲内になければならない &lt;code&gt;0 &amp;le; index &amp;lt; length&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2ee95e575c29dd5fc91e01ae9ade2bd1074aa528" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;index&lt;/code&gt; must be non-negative and less than &lt;a href=&quot;../../dart-core/list/length&quot;&gt;length&lt;/a&gt;. Index zero represents the first element (so &lt;code&gt;iterable.elementAt(0)&lt;/code&gt; is equivalent to &lt;code&gt;iterable.first&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;index&lt;/code&gt; 負でないと未満でなければならない&lt;a href=&quot;../../dart-core/list/length&quot;&gt;長さ&lt;/a&gt;。インデックス0は最初の要素を表します（つまり、 &lt;code&gt;iterable.elementAt(0)&lt;/code&gt; は &lt;code&gt;iterable.first&lt;/code&gt; と同等です）。</target>
        </trans-unit>
        <trans-unit id="e5b6285ecaa2e9d191a3d70f952588609f41445d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;index&lt;/code&gt; must be non-negative and less than &lt;a href=&quot;length&quot;&gt;length&lt;/a&gt;. Index zero represents the first element (so &lt;code&gt;iterable.elementAt(0)&lt;/code&gt; is equivalent to &lt;code&gt;iterable.first&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;index&lt;/code&gt; 負でないと未満でなければならない&lt;a href=&quot;length&quot;&gt;長さ&lt;/a&gt;。インデックス0は最初の要素を表します（つまり、 &lt;code&gt;iterable.elementAt(0)&lt;/code&gt; は &lt;code&gt;iterable.first&lt;/code&gt; と同等です）。</target>
        </trans-unit>
        <trans-unit id="1d14f7b94ed511091cdd7a0afcfa0501777574e6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;index&lt;/code&gt; must be non-negative and no greater than &lt;a href=&quot;../../dart-core/list/length&quot;&gt;length&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;index&lt;/code&gt; 負でないと超えないでなければならない&lt;a href=&quot;../../dart-core/list/length&quot;&gt;長さ&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3befdbf8608670162d9f2cf8e5360da0fe502243" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;index&lt;/code&gt; must be non-negative and no greater than &lt;a href=&quot;length&quot;&gt;length&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;index&lt;/code&gt; 負でないと超えないでなければならない&lt;a href=&quot;length&quot;&gt;長さ&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1efc6f4d51930569f76a6b0c4104ec132c6ba442" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;index&lt;/code&gt; position must not be in the middle of a surrogate pair.</source>
          <target state="translated">&lt;code&gt;index&lt;/code&gt; 位置は、サロゲートペアの途中であってはなりません。</target>
        </trans-unit>
        <trans-unit id="dc507e14c28264d6a3ad536dcda2a2031390e16d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;invocation&lt;/code&gt; represents the method call that failed. It should not be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;invocation&lt;/code&gt; 失敗したメソッド呼び出しを表します。 &lt;code&gt;null&lt;/code&gt; であってはなりません。</target>
        </trans-unit>
        <trans-unit id="1c17a431dbe768967403281c9c3964da67b5a58a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;iterable&lt;/code&gt; must have enough objects to fill the range from &lt;code&gt;start&lt;/code&gt; to &lt;code&gt;end&lt;/code&gt; after skipping &lt;code&gt;skipCount&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;iterable&lt;/code&gt; 範囲を満たすのに十分なオブジェクト持っている必要があります &lt;code&gt;start&lt;/code&gt; に &lt;code&gt;end&lt;/code&gt; スキップした後 &lt;code&gt;skipCount&lt;/code&gt; オブジェクトを。</target>
        </trans-unit>
        <trans-unit id="115dafbc599641c1c111dc017d76e6ccb2395529" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;iterable&lt;/code&gt; must not have more elements than what can fit from &lt;code&gt;index&lt;/code&gt; to &lt;a href=&quot;../../dart-core/list/length&quot;&gt;length&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;iterable&lt;/code&gt; 必見から合うことができるものよりも多くの要素を持っていない &lt;code&gt;index&lt;/code&gt; に&lt;a href=&quot;../../dart-core/list/length&quot;&gt;長さを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="40ee7809c9f8964ac9d69e4b371715d7ef6611d5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;iterable&lt;/code&gt; must not have more elements than what can fit from &lt;code&gt;index&lt;/code&gt; to &lt;a href=&quot;length&quot;&gt;length&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;iterable&lt;/code&gt; 必見から合うことができるものよりも多くの要素を持っていない &lt;code&gt;index&lt;/code&gt; に&lt;a href=&quot;length&quot;&gt;長さを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7a322287c6c4e126c8d17df0cfec59e12c29e087" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;keys&lt;/code&gt; iterable should have efficient &lt;a href=&quot;../dart-core/iterable/length&quot;&gt;Iterable.length&lt;/a&gt; and &lt;a href=&quot;../dart-core/iterable/contains&quot;&gt;Iterable.contains&lt;/a&gt; operations, and it should catch concurrent modifications of the keys while iterating.</source>
          <target state="translated">&lt;code&gt;keys&lt;/code&gt; 反復可能で、効率的な持っている必要があり&lt;a href=&quot;../dart-core/iterable/length&quot;&gt;Iterable.length&lt;/a&gt;と&lt;a href=&quot;../dart-core/iterable/contains&quot;&gt;Iterable.contains&lt;/a&gt;操作をし、反復しながら、それがキーの同時変更をキャッチする必要があります。</target>
        </trans-unit>
        <trans-unit id="2552639a1e4f9819e0c1d95bde719319a1ee994f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;keys&lt;/code&gt; iterable should have efficient &lt;a href=&quot;mapmixin/length&quot;&gt;Iterable.length&lt;/a&gt; and &lt;a href=&quot;../dart-core/iterable/contains&quot;&gt;Iterable.contains&lt;/a&gt; operations, and it should catch concurrent modifications of the keys while iterating.</source>
          <target state="translated">&lt;code&gt;keys&lt;/code&gt; 反復可能で、効率的な持っている必要があり&lt;a href=&quot;mapmixin/length&quot;&gt;Iterable.length&lt;/a&gt;と&lt;a href=&quot;../dart-core/iterable/contains&quot;&gt;Iterable.contains&lt;/a&gt;操作をし、反復しながら、それがキーの同時変更をキャッチする必要があります。</target>
        </trans-unit>
        <trans-unit id="f2eb7b584a9385ab4fc6438f27f8f9248b2d4127" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;length&lt;/code&gt; is the length of &lt;code&gt;indexable&lt;/code&gt; at the time of the error. If &lt;code&gt;length&lt;/code&gt; is omitted, it defaults to &lt;code&gt;indexable.length&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;length&lt;/code&gt; 長さである &lt;code&gt;indexable&lt;/code&gt; エラーの時。もし &lt;code&gt;length&lt;/code&gt; に、それデフォルトは省略されている &lt;code&gt;indexable.length&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a9ea55e7713842c405bf739ebc42b61aa6edaecd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;length&lt;/code&gt; must be a non-negative integer.</source>
          <target state="translated">&lt;code&gt;length&lt;/code&gt; 非負の整数でなければなりません。</target>
        </trans-unit>
        <trans-unit id="b8436fef1adfe3e49700fd7213db5cf0e05ed076" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;length&lt;/code&gt; must be non-negative.</source>
          <target state="translated">&lt;code&gt;length&lt;/code&gt; 非負でなければなりません。</target>
        </trans-unit>
        <trans-unit id="0901fdf810e15cb03fceda7124d457a4867a86ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;length&lt;/code&gt; must not be negative or null, if it is provided.</source>
          <target state="translated">&lt;code&gt;length&lt;/code&gt; 、それが提供される場合、負またはnullであってはなりません。</target>
        </trans-unit>
        <trans-unit id="83aafbcaf8db806d3c00a7f500357753b00611b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;memberName&lt;/code&gt; is a &lt;a href=&quot;../symbol-class&quot;&gt;Symbol&lt;/a&gt; representing the name of the called method or accessor. It should not be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;memberName&lt;/code&gt; には、ある&lt;a href=&quot;../symbol-class&quot;&gt;シンボル&lt;/a&gt;と呼ばれる方法やアクセサの名前を表します。 &lt;code&gt;null&lt;/code&gt; であってはなりません。</target>
        </trans-unit>
        <trans-unit id="bbcb938c947437b5ebd106042e0e8e9cbbd661cd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;message&lt;/code&gt; argument should be readable by programmers, and should state an alternative feature (if available) as well as when an annotated feature is expected to be removed.</source>
          <target state="translated">&lt;code&gt;message&lt;/code&gt; 引数は、プログラマによって読み取り可能であるべきであり、注釈付きの機能が削除されることが予想されている場合だけでなく、別の特徴（使用可能な場合）を明記してください。</target>
        </trans-unit>
        <trans-unit id="5d79a4edfb42a8c53bbfc716c5fe5cf813ac46e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;message&lt;/code&gt; describes the erroneous argument.</source>
          <target state="translated">&lt;code&gt;message&lt;/code&gt; 誤った引数を説明しています。</target>
        </trans-unit>
        <trans-unit id="3bf73bcaedeaab330bc6bb04b9352917981a3559" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;message&lt;/code&gt; describes the erroneous argument. &lt;a href=&quot;argumenterror/argumenterror&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;message&lt;/code&gt; 誤った引数を説明しています。&lt;a href=&quot;argumenterror/argumenterror&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e6d45b71ac86b6bb4f447b939e725e5c29711330" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;modulus&lt;/code&gt; must be positive.</source>
          <target state="translated">&lt;code&gt;modulus&lt;/code&gt; 正でなければなりません。</target>
        </trans-unit>
        <trans-unit id="d71b1b578815f725dcf0060d3167bc68d94e694f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; must be the name of a named capture group in the regular expression creating this match (that is, the name must be in &lt;a href=&quot;groupnames&quot;&gt;groupNames&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; （名前がでなければなりません、である。この試合を作成する正規表現の名前付きキャプチャグループの名前でなければなりません&lt;a href=&quot;groupnames&quot;&gt;groupNames&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="cb43490dee89c0d4c8d89d9fa5c603a8a089f35b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; passed is case insensitive.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 渡された場合に鈍感です。</target>
        </trans-unit>
        <trans-unit id="3d4bb0d1fee3979fabd4fc6aea7d497f67e2bbde" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; should match the argument name of the function, but if the function is a method implementing an interface, and its argument names differ from the interface, it might be more useful to use the interface method's argument name (or just rename arguments to match).</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 、関数の引数名と一致する必要がありますが、機能は、インターフェイスを実装する方法であり、その引数名は、インターフェイスと異なる場合、インターフェイスメソッドの引数名を使用する（あるいは単に試合への引数の名前を変更する方が便利かもしれません）。</target>
        </trans-unit>
        <trans-unit id="a3e88b150252b091838bec29821e2957776f6450" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;namedArguments&lt;/code&gt; is a map from &lt;a href=&quot;../symbol-class&quot;&gt;Symbol&lt;/a&gt;s to the values of named arguments that the method was called with.</source>
          <target state="translated">&lt;code&gt;namedArguments&lt;/code&gt; はからマップである&lt;a href=&quot;../symbol-class&quot;&gt;シンボル&lt;/a&gt;メソッドを使って呼び出された名前付き引数の値に秒。</target>
        </trans-unit>
        <trans-unit id="563069ae4bc8cd38fa70f6917bf9d16761832655" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;namedArguments&lt;/code&gt; is a map from &lt;a href=&quot;../symbol-class&quot;&gt;Symbol&lt;/a&gt;s to the values of named arguments that the method was called with. If null, it is considered equivalent to the empty map.</source>
          <target state="translated">&lt;code&gt;namedArguments&lt;/code&gt; はからマップである&lt;a href=&quot;../symbol-class&quot;&gt;シンボル&lt;/a&gt;メソッドを使って呼び出された名前付き引数の値に秒。nullの場合、空のマップと同等と見なされます。</target>
        </trans-unit>
        <trans-unit id="2dc28d7e75a7f658dfa594538cff69bd23ec9021" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;offset&lt;/code&gt; can range between 0.0 and 1.0.</source>
          <target state="translated">&lt;code&gt;offset&lt;/code&gt; 0.0と1.0の間の範囲であり得ます。</target>
        </trans-unit>
        <trans-unit id="bb35bfc49370c51ff378e8734e8a9876a23465ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onDone&lt;/code&gt; handler will be called when the stream closes. The stream closes when &lt;a href=&quot;close&quot;&gt;close&lt;/a&gt; is called.</source>
          <target state="translated">&lt;code&gt;onDone&lt;/code&gt; のストリームが閉じたときにハンドラが呼び出されます。&lt;a href=&quot;close&quot;&gt;close&lt;/a&gt;が呼び出されると、ストリームは閉じます。</target>
        </trans-unit>
        <trans-unit id="12d2286de64a4e3fc5768bdea22cba22e4b2b802" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onError&lt;/code&gt; callback must be of type &lt;code&gt;void onError(Object error)&lt;/code&gt; or &lt;code&gt;void onError(Object error, StackTrace stackTrace)&lt;/code&gt;. If &lt;code&gt;onError&lt;/code&gt; accepts two arguments it is called with the error object and the stack trace (which could be &lt;code&gt;null&lt;/code&gt; if this stream itself received an error without stack trace). Otherwise it is called with just the error object. If &lt;code&gt;onError&lt;/code&gt; is omitted, any errors on this stream are considered unhandled, and will be passed to the current &lt;a href=&quot;../../dart-async/zone-class&quot;&gt;Zone&lt;/a&gt;'s error handler. By default unhandled async errors are treated as if they were uncaught top-level errors.</source>
          <target state="translated">&lt;code&gt;onError&lt;/code&gt; コールバック型でなければならない &lt;code&gt;void onError(Object error)&lt;/code&gt; 又は &lt;code&gt;void onError(Object error, StackTrace stackTrace)&lt;/code&gt; 。 &lt;code&gt;onError&lt;/code&gt; が2つの引数を受け入れる場合、エラーオブジェクトとスタックトレースで呼び出されます（このストリーム自体がスタックトレースなしでエラーを受け取った場合は &lt;code&gt;null&lt;/code&gt; になる可能性があります）。それ以外の場合は、エラーオブジェクトのみで呼び出されます。場合 &lt;code&gt;onError&lt;/code&gt; 省略され、このストリーム上の任意のエラーが未処理とみなされ、そして現在に渡される&lt;a href=&quot;../../dart-async/zone-class&quot;&gt;ゾーン&lt;/a&gt;のエラーハンドラ。デフォルトでは、未処理の非同期エラーは、キャッチされていないトップレベルエラーであるかのように扱われます。</target>
        </trans-unit>
        <trans-unit id="f58870ea0c043528c856de3969b895fbf5e0f9cd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onError&lt;/code&gt; callback must be of type &lt;code&gt;void onError(Object error)&lt;/code&gt; or &lt;code&gt;void onError(Object error, StackTrace stackTrace)&lt;/code&gt;. If &lt;code&gt;onError&lt;/code&gt; accepts two arguments it is called with the error object and the stack trace (which could be &lt;code&gt;null&lt;/code&gt; if this stream itself received an error without stack trace). Otherwise it is called with just the error object. If &lt;code&gt;onError&lt;/code&gt; is omitted, any errors on this stream are considered unhandled, and will be passed to the current &lt;a href=&quot;../zone-class&quot;&gt;Zone&lt;/a&gt;'s error handler. By default unhandled async errors are treated as if they were uncaught top-level errors.</source>
          <target state="translated">&lt;code&gt;onError&lt;/code&gt; コールバック型でなければならない &lt;code&gt;void onError(Object error)&lt;/code&gt; 又は &lt;code&gt;void onError(Object error, StackTrace stackTrace)&lt;/code&gt; 。 &lt;code&gt;onError&lt;/code&gt; が2つの引数を受け入れる場合、エラーオブジェクトとスタックトレースで呼び出されます（このストリーム自体がスタックトレースなしでエラーを受け取った場合は &lt;code&gt;null&lt;/code&gt; になる可能性があります）。それ以外の場合は、エラーオブジェクトのみで呼び出されます。場合 &lt;code&gt;onError&lt;/code&gt; 省略され、このストリーム上の任意のエラーが未処理とみなされ、そして現在に渡される&lt;a href=&quot;../zone-class&quot;&gt;ゾーン&lt;/a&gt;のエラーハンドラ。デフォルトでは、未処理の非同期エラーは、キャッチされていないトップレベルエラーであるかのように扱われます。</target>
        </trans-unit>
        <trans-unit id="b2baf939f9172b9f986a05ca6898818672b9c2db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onError&lt;/code&gt; callback must be of type &lt;code&gt;void onError(Object error)&lt;/code&gt; or &lt;code&gt;void onError(Object error, StackTrace stackTrace)&lt;/code&gt;. The function type determines whether &lt;code&gt;onError&lt;/code&gt; is invoked with a stack trace argument. The stack trace argument may be &lt;code&gt;null&lt;/code&gt; if this stream received an error without a stack trace.</source>
          <target state="translated">&lt;code&gt;onError&lt;/code&gt; コールバック型でなければならない &lt;code&gt;void onError(Object error)&lt;/code&gt; 又は &lt;code&gt;void onError(Object error, StackTrace stackTrace)&lt;/code&gt; 。関数型は、 &lt;code&gt;onError&lt;/code&gt; がスタックトレース引数で呼び出されるかどうかを決定します。このストリームがスタックトレースなしでエラーを受信した場合、スタックトレース引数は &lt;code&gt;null&lt;/code&gt; になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="11827ef89a2d0b9f7efa56d0cfe54e62aa834418" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onError&lt;/code&gt; callback must be of type &lt;code&gt;void onError(error)&lt;/code&gt; or &lt;code&gt;void onError(error, StackTrace stackTrace)&lt;/code&gt;. If &lt;code&gt;onError&lt;/code&gt; accepts two arguments it is called with the error object and the stack trace (which could be &lt;code&gt;null&lt;/code&gt; if this stream itself received an error without stack trace). Otherwise it is called with just the error object. If &lt;code&gt;onError&lt;/code&gt; is omitted, any errors on this stream are considered unhandled, and will be passed to the current &lt;a href=&quot;../../dart-async/zone-class&quot;&gt;Zone&lt;/a&gt;'s error handler. By default unhandled async errors are treated as if they were uncaught top-level errors.</source>
          <target state="translated">&lt;code&gt;onError&lt;/code&gt; コールバックは型でなければならない &lt;code&gt;void onError(error)&lt;/code&gt; または &lt;code&gt;void onError(error, StackTrace stackTrace)&lt;/code&gt; 。 &lt;code&gt;onError&lt;/code&gt; が 2つの引数を受け入れる場合は、エラーオブジェクトとスタックトレースで呼び出されます（このストリーム自体がスタックトレースなしでエラーを受け取った場合、 &lt;code&gt;null&lt;/code&gt; になる可能性があります）。それ以外の場合は、エラーオブジェクトだけで呼び出されます。場合 &lt;code&gt;onError&lt;/code&gt; 省略され、このストリーム上の任意のエラーが未処理とみなされ、そして現在に渡される&lt;a href=&quot;../../dart-async/zone-class&quot;&gt;ゾーン&lt;/a&gt;のエラーハンドラ。デフォルトでは、未処理の非同期エラーは、キャッチされていないトップレベルエラーであるかのように扱われます。</target>
        </trans-unit>
        <trans-unit id="854afb0a7e5427704e69d28247e001bee0fccbb7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onError&lt;/code&gt; callback must be of type &lt;code&gt;void onError(error)&lt;/code&gt; or &lt;code&gt;void onError(error, StackTrace stackTrace)&lt;/code&gt;. If &lt;code&gt;onError&lt;/code&gt; accepts two arguments it is called with the error object and the stack trace (which could be &lt;code&gt;null&lt;/code&gt; if this stream itself received an error without stack trace). Otherwise it is called with just the error object. If &lt;code&gt;onError&lt;/code&gt; is omitted, any errors on this stream are considered unhandled, and will be passed to the current &lt;a href=&quot;../zone-class&quot;&gt;Zone&lt;/a&gt;'s error handler. By default unhandled async errors are treated as if they were uncaught top-level errors.</source>
          <target state="translated">&lt;code&gt;onError&lt;/code&gt; コールバックは型でなければならない &lt;code&gt;void onError(error)&lt;/code&gt; または &lt;code&gt;void onError(error, StackTrace stackTrace)&lt;/code&gt; 。 &lt;code&gt;onError&lt;/code&gt; が 2つの引数を受け入れる場合は、エラーオブジェクトとスタックトレースで呼び出されます（このストリーム自体がスタックトレースなしでエラーを受け取った場合、 &lt;code&gt;null&lt;/code&gt; になる可能性があります）。それ以外の場合は、エラーオブジェクトだけで呼び出されます。場合 &lt;code&gt;onError&lt;/code&gt; 省略され、このストリーム上の任意のエラーが未処理とみなされ、そして現在に渡される&lt;a href=&quot;../zone-class&quot;&gt;ゾーン&lt;/a&gt;のエラーハンドラ。デフォルトでは、未処理の非同期エラーは、キャッチされていないトップレベルエラーであるかのように扱われます。</target>
        </trans-unit>
        <trans-unit id="e06c7c37168e42757d99b0e7d6ea4896cf42ac02" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onError&lt;/code&gt; callback must be of type &lt;code&gt;void onError(error)&lt;/code&gt; or &lt;code&gt;void onError(error, StackTrace stackTrace)&lt;/code&gt;. The function type determines whether &lt;code&gt;onError&lt;/code&gt; is invoked with a stack trace argument. The stack trace argument may be &lt;code&gt;null&lt;/code&gt; if this stream received an error without a stack trace.</source>
          <target state="translated">&lt;code&gt;onError&lt;/code&gt; コールバックは型でなければならない &lt;code&gt;void onError(error)&lt;/code&gt; または &lt;code&gt;void onError(error, StackTrace stackTrace)&lt;/code&gt; 。関数タイプは、 &lt;code&gt;onError&lt;/code&gt; がスタックトレース引数で呼び出されるかどうかを決定します。このストリームがスタックトレースなしでエラーを受け取った場合、スタックトレース引数は &lt;code&gt;null&lt;/code&gt; になることがあります。</target>
        </trans-unit>
        <trans-unit id="9f7cdf6f5e12623b36139340e79ae58474f940c1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onError&lt;/code&gt; function is only invoked if &lt;code&gt;source&lt;/code&gt; is a &lt;a href=&quot;../string-class&quot;&gt;String&lt;/a&gt; with an invalid format. It is not invoked if &lt;code&gt;source&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;onError&lt;/code&gt; 場合、この関数にのみ呼び出される &lt;code&gt;source&lt;/code&gt; ある&lt;a href=&quot;../string-class&quot;&gt;文字列の&lt;/a&gt;無効な形式を持ちます。 &lt;code&gt;source&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合は呼び出されません。</target>
        </trans-unit>
        <trans-unit id="6dbeb76e6bf0c2f58f3a61331bae2d87cacd3108" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onError&lt;/code&gt; function is used &lt;em&gt;both&lt;/em&gt; to handle asynchronous errors by overriding &lt;a href=&quot;zonespecification/handleuncaughterror&quot;&gt;ZoneSpecification.handleUncaughtError&lt;/a&gt; in &lt;code&gt;zoneSpecification&lt;/code&gt;, if any, &lt;em&gt;and&lt;/em&gt; to handle errors thrown synchronously by the call to &lt;code&gt;body&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;onError&lt;/code&gt; 関数が使用され&lt;em&gt;、両方を&lt;/em&gt;オーバーライドすることで、非同期エラーを処理するために&lt;a href=&quot;zonespecification/handleuncaughterror&quot;&gt;ZoneSpecification.handleUncaughtErrorを&lt;/a&gt;して &lt;code&gt;zoneSpecification&lt;/code&gt; があれば、&lt;em&gt;と&lt;/em&gt;の呼び出しによって同期スローハンドルエラーに &lt;code&gt;body&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7aaec9314d23a609e3d4d0838d6b30ebf12ff94a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onError&lt;/code&gt; parameter is deprecated and will be removed. Instead of &lt;code&gt;double.parse(string, (string) { ... })&lt;/code&gt;, you should use &lt;code&gt;double.tryParse(string) ?? (...)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;onError&lt;/code&gt; パラメータは廃止され、削除されます。 &lt;code&gt;double.parse(string, (string) { ... })&lt;/code&gt; 代わりに、double.tryParse（string）を使用する必要があります &lt;code&gt;double.tryParse(string) ?? (...)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d4b195d0bbffdbcd7e7c13270b327e8744dedd34" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onError&lt;/code&gt; parameter is deprecated and will be removed. Instead of &lt;code&gt;int.parse(string, onError: (string) =&amp;gt; ...)&lt;/code&gt;, you should use &lt;code&gt;int.tryParse(string) ?? (...)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;onError&lt;/code&gt; パラメータは廃止され、削除されます。 &lt;code&gt;int.parse(string, onError: (string) =&amp;gt; ...)&lt;/code&gt; 代わりに、int.tryParse（string）を使用する必要があります &lt;code&gt;int.tryParse(string) ?? (...)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="255be98355b589109fa6c70bdc5dfe05c5ee50bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onError&lt;/code&gt; parameter is deprecated and will be removed. Instead of &lt;code&gt;num.parse(string, (string) { ... })&lt;/code&gt;, you should use &lt;code&gt;num.tryParse(string) ?? (...)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;onError&lt;/code&gt; パラメータは廃止され、削除されます。 &lt;code&gt;num.parse(string, (string) { ... })&lt;/code&gt; 代わりに、num.tryParse（string）を使用する必要があります &lt;code&gt;num.tryParse(string) ?? (...)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="00bfeb0002526da116dea71578adb0717e847632" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onListen&lt;/code&gt; callback does &lt;em&gt;not&lt;/em&gt; receive the handlers that were passed to &lt;a href=&quot;../stream/listen&quot;&gt;Stream.listen&lt;/a&gt;. These are automatically set after the call to the &lt;code&gt;onListen&lt;/code&gt; callback (using &lt;a href=&quot;../streamsubscription/ondata&quot;&gt;StreamSubscription.onData&lt;/a&gt;, &lt;a href=&quot;../streamsubscription/onerror&quot;&gt;StreamSubscription.onError&lt;/a&gt; and &lt;a href=&quot;../streamsubscription/ondone&quot;&gt;StreamSubscription.onDone&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;onListen&lt;/code&gt; コールバックはない&lt;em&gt;ではない&lt;/em&gt;に渡されたハンドラ受け取る&lt;a href=&quot;../stream/listen&quot;&gt;Stream.listenを&lt;/a&gt;。これらは &lt;code&gt;onListen&lt;/code&gt; コールバックの呼び出し後に自動的に設定されます（&lt;a href=&quot;../streamsubscription/ondata&quot;&gt;StreamSubscription.onData&lt;/a&gt;、&lt;a href=&quot;../streamsubscription/onerror&quot;&gt;StreamSubscription.onError&lt;/a&gt;および&lt;a href=&quot;../streamsubscription/ondone&quot;&gt;StreamSubscription.onDoneを使用&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="c8d30668cec11e2a143453a48f44272fb0f6ec6b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onListen&lt;/code&gt; callback is called when the first listener is subscribed, and the &lt;code&gt;onCancel&lt;/code&gt; is called when there are no longer any active listeners. If a listener is added again later, after the &lt;code&gt;onCancel&lt;/code&gt; was called, the &lt;code&gt;onListen&lt;/code&gt; will be called again.</source>
          <target state="translated">&lt;code&gt;onListen&lt;/code&gt; 最初のリスナーが登録されたときにコールバックが呼び出され、 &lt;code&gt;onCancel&lt;/code&gt; は、任意のアクティブなリスナーがもはや存在しているときに呼び出されません。リスナーが後で再び追加された場合後、 &lt;code&gt;onCancel&lt;/code&gt; が呼ばれた、 &lt;code&gt;onListen&lt;/code&gt; が再び呼び出されます。</target>
        </trans-unit>
        <trans-unit id="8767a14d8a12935fb8adf676353b8651d0ad81db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onListen&lt;/code&gt; callback is called when the stream receives its listener and &lt;code&gt;onCancel&lt;/code&gt; when the listener ends its subscription. If &lt;code&gt;onCancel&lt;/code&gt; needs to perform an asynchronous operation, &lt;code&gt;onCancel&lt;/code&gt; should return a future that completes when the cancel operation is done.</source>
          <target state="translated">&lt;code&gt;onListen&lt;/code&gt; ストリームがそのリスナーと受信したときにコールバックが呼び出され &lt;code&gt;onCancel&lt;/code&gt; をリスナーがそのサブスクリプションを終了したとき。 &lt;code&gt;onCancel&lt;/code&gt; が非同期操作を実行する必要がある場合、 &lt;code&gt;onCancel&lt;/code&gt; はキャンセル操作が完了したときに完了するfutureを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="eb09aaadf453d5dbfd576eef0c509017e8bc2e48" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onPause&lt;/code&gt; function is called when the stream becomes paused. &lt;code&gt;onResume&lt;/code&gt; is called when the stream resumed.</source>
          <target state="translated">&lt;code&gt;onPause&lt;/code&gt; のストリームが一時停止になったときに関数が呼び出されます。 &lt;code&gt;onResume&lt;/code&gt; は、ストリームが再開されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="df86d716b8ce3edafeb173299122107db6cef736" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onTimeout&lt;/code&gt; function is called with one argument: an &lt;a href=&quot;../eventsink-class&quot;&gt;EventSink&lt;/a&gt; that allows putting events into the returned stream. This &lt;code&gt;EventSink&lt;/code&gt; is only valid during the call to &lt;code&gt;onTimeout&lt;/code&gt;. Calling &lt;a href=&quot;../eventsink/close&quot;&gt;EventSink.close&lt;/a&gt; on the sink passed to &lt;code&gt;onTimeout&lt;/code&gt; closes the returned stream, and no further events are processed.</source>
          <target state="translated">&lt;code&gt;onTimeout&lt;/code&gt; ：関数は一つの引数で呼び出された&lt;a href=&quot;../eventsink-class&quot;&gt;EventSink&lt;/a&gt;返さストリームにイベントを置くことができます。この &lt;code&gt;EventSink&lt;/code&gt; は、 &lt;code&gt;onTimeout&lt;/code&gt; の呼び出し中にのみ有効です。 &lt;code&gt;onTimeout&lt;/code&gt; に渡されたシンクで&lt;a href=&quot;../eventsink/close&quot;&gt;EventSink.close&lt;/a&gt;を呼び出すと、返されたストリームが閉じ、それ以降のイベントは処理されません。</target>
        </trans-unit>
        <trans-unit id="83f4c44ff214a48c100681b557a44466944e1536" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;other&lt;/code&gt; argument must be a value that is comparable to this object.</source>
          <target state="translated">&lt;code&gt;other&lt;/code&gt; 引数は、このオブジェクトに匹敵する値でなければなりません。</target>
        </trans-unit>
        <trans-unit id="3d4927419487c3a50f7d97404d8058b8a8c93185" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;path&lt;/code&gt; component is set from the &lt;code&gt;unencodedPath&lt;/code&gt; argument. The path passed must not be encoded as this constructor encodes the path.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 成分は、以下から設定されている &lt;code&gt;unencodedPath&lt;/code&gt; の引数。このコンストラクタはパスをエンコードするため、渡されるパスはエンコードしないでください。</target>
        </trans-unit>
        <trans-unit id="9f0e5bfa4133335e89e6b5ccdfcb93528d721aaf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;period&lt;/code&gt; must a non-negative &lt;a href=&quot;../../dart-core/duration-class&quot;&gt;Duration&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;period&lt;/code&gt; 、負でない必要があり&lt;a href=&quot;../../dart-core/duration-class&quot;&gt;持続時間&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c7647f9e51fe8777d1251c76ab71380ae29aa9aa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;positionalArguments&lt;/code&gt; is a list of the positional arguments that the method was called with. If &lt;code&gt;null&lt;/code&gt;, it is considered equivalent to the empty list.</source>
          <target state="translated">&lt;code&gt;positionalArguments&lt;/code&gt; は、メソッドが呼び出されました位置引数のリストです。 &lt;code&gt;null&lt;/code&gt; の場合、空のリストと同等と見なされます。</target>
        </trans-unit>
        <trans-unit id="606d844ddab4587fe3a33a33c85e9a1f8028cc32" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;priority&lt;/code&gt; must be one of &lt;a href=&quot;immediate-constant&quot;&gt;immediate&lt;/a&gt; or &lt;a href=&quot;beforenextevent-constant&quot;&gt;beforeNextEvent&lt;/a&gt;. The response is sent at different times depending on the ping type:</source>
          <target state="translated">&lt;code&gt;priority&lt;/code&gt; のいずれかでなければなりません&lt;a href=&quot;immediate-constant&quot;&gt;即時&lt;/a&gt;または&lt;a href=&quot;beforenextevent-constant&quot;&gt;beforeNextEvent&lt;/a&gt;。応答は、pingタイプに応じて異なるタイミングで送信されます。</target>
        </trans-unit>
        <trans-unit id="4f04998f2ccd9d1a7c7a5161a4c0d6aa87d8c050" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;priority&lt;/code&gt;, when provided, must be one of &lt;a href=&quot;immediate-constant&quot;&gt;immediate&lt;/a&gt; or &lt;a href=&quot;beforenextevent-constant&quot;&gt;beforeNextEvent&lt;/a&gt; (the default). The shutdown is performed at different times depending on the priority:</source>
          <target state="translated">&lt;code&gt;priority&lt;/code&gt; 、提供された場合、のいずれかでなければなりません&lt;a href=&quot;immediate-constant&quot;&gt;即時&lt;/a&gt;または&lt;a href=&quot;beforenextevent-constant&quot;&gt;beforeNextEvent&lt;/a&gt;（デフォルト）。シャットダウンは、優先度に応じてさまざまなタイミングで実行されます。</target>
        </trans-unit>
        <trans-unit id="8c268c2fbb51b159c8c53922f14f664d5b359ccf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;protocols&lt;/code&gt; argument is specifying the subprotocols the client is willing to speak.</source>
          <target state="translated">&lt;code&gt;protocols&lt;/code&gt; 引数は、クライアントが話すことを喜んでサブプロトコルを指定しています。</target>
        </trans-unit>
        <trans-unit id="06ec42950fdf9b401ede2ce69bd24433ad81c020" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;query&lt;/code&gt; component is set from the optional &lt;code&gt;queryParameters&lt;/code&gt; argument.</source>
          <target state="translated">&lt;code&gt;query&lt;/code&gt; コンポーネントは、オプションから設定されている &lt;code&gt;queryParameters&lt;/code&gt; の引数。</target>
        </trans-unit>
        <trans-unit id="4048287eaf7c47554896f7046596b1260e10d050" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;radix&lt;/code&gt; argument must be an integer in the range 2 to 36.</source>
          <target state="translated">&lt;code&gt;radix&lt;/code&gt; 引数には、36の範囲2の整数でなければなりません。</target>
        </trans-unit>
        <trans-unit id="552e7aec1edff85b4b21504d1f5ea3dab18463a7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;radix&lt;/code&gt; must be in the range 2..36. The digits used are first the decimal digits 0..9, and then the letters 'a'..'z' with values 10 through 35. Also accepts upper-case letters with the same values as the lower-case ones.</source>
          <target state="translated">&lt;code&gt;radix&lt;/code&gt; 範囲2..36でなければなりません。使用される数字は、最初に10進数字0..9であり、次に10〜35の値を持つ文字「a」..「z」です。小文字と同じ値を持つ大文字も受け入れます。</target>
        </trans-unit>
        <trans-unit id="f97b579dc16d59d2327c88d4a7e0e3aa0ccd0b30" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rawIndex&lt;/code&gt; must be non-negative and no greater than &lt;code&gt;string.length&lt;/code&gt;. It must also not be the index of the trailing surrogate of a surrogate pair.</source>
          <target state="translated">&lt;code&gt;rawIndex&lt;/code&gt; は非負と超えないでなければなりません &lt;code&gt;string.length&lt;/code&gt; 。また、サロゲートペアの後続サロゲートのインデックスであってはなりません。</target>
        </trans-unit>
        <trans-unit id="e31f8b12c2575c7af5d54f264b45ee28024c31e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;receiver&lt;/code&gt; is the receiver of the method call. That is, the object on which the method was attempted called.</source>
          <target state="translated">&lt;code&gt;receiver&lt;/code&gt; メソッド呼び出しの受信機です。つまり、メソッドが呼び出されたオブジェクトが呼び出されました。</target>
        </trans-unit>
        <trans-unit id="920f0ec5942aaa6da4a25f826b7b7aa425a7a381" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;receiver&lt;/code&gt; is the receiver of the method call. That is, the object on which the method was attempted called. If the receiver is &lt;code&gt;null&lt;/code&gt;, it is interpreted as a call to a top-level function of a library.</source>
          <target state="translated">&lt;code&gt;receiver&lt;/code&gt; メソッド呼び出しの受信機です。つまり、メソッドが呼び出されたオブジェクトが呼び出されました。レシーバーが &lt;code&gt;null&lt;/code&gt; の場合、ライブラリーのトップレベル関数の呼び出しとして解釈されます。</target>
        </trans-unit>
        <trans-unit id="69c48164b14d1ea4df21a777a70126491c3b1495" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;replace&lt;/code&gt; function is called with the &lt;a href=&quot;../match-class&quot;&gt;Match&lt;/a&gt; generated by the pattern, and its result is used as replacement.</source>
          <target state="translated">&lt;code&gt;replace&lt;/code&gt; 機能を使って呼び出される&lt;a href=&quot;../match-class&quot;&gt;マッチ&lt;/a&gt;パターンによって生成され、その結果が代替として使用されています。</target>
        </trans-unit>
        <trans-unit id="08365c44bf47a98f4cb1fbc3ca59b2f9614e5f4c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;response&lt;/code&gt; object must follow the same restrictions as enforced by &lt;a href=&quot;../sendport/send&quot;&gt;SendPort.send&lt;/a&gt;. It is recommended to only use simple values that can be sent to all isolates, like &lt;code&gt;null&lt;/code&gt;, booleans, numbers or strings.</source>
          <target state="translated">&lt;code&gt;response&lt;/code&gt; によって強制などのオブジェクトは、同じ制限に従わなければなりません&lt;a href=&quot;../sendport/send&quot;&gt;SendPort.send&lt;/a&gt;。 &lt;code&gt;null&lt;/code&gt; 、ブール値、数値、文字列など、すべての分離株に送信できる単純な値のみを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="d53a99f4fe52019caed69889c6f6f38cf8999672" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;resumeCapability&lt;/code&gt; is used to identity the pause, and must be used again to end the pause using &lt;a href=&quot;resume&quot;&gt;resume&lt;/a&gt;. If &lt;code&gt;resumeCapability&lt;/code&gt; is omitted, a new capability object is created and used instead.</source>
          <target state="translated">&lt;code&gt;resumeCapability&lt;/code&gt; はアイデンティティに一時停止を使用し、使用して一時停止を終了するために再使用されなければならない&lt;a href=&quot;resume&quot;&gt;履歴書を&lt;/a&gt;。場合 &lt;code&gt;resumeCapability&lt;/code&gt; が省略され、新しい機能オブジェクトが作成され、代わりに使用されます。</target>
        </trans-unit>
        <trans-unit id="25273f8befa9b1389e5e36fe93aed7b4548bdccc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reuseAddress&lt;/code&gt; should be set for all listeners that bind to the same address. Otherwise, it will fail with a &lt;a href=&quot;../socketexception-class&quot;&gt;SocketException&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;reuseAddress&lt;/code&gt; はそのバインド同じアドレスにすべてのリスナーのために設定する必要があります。それ以外の場合は、&lt;a href=&quot;../socketexception-class&quot;&gt;SocketExceptionで&lt;/a&gt;失敗します。</target>
        </trans-unit>
        <trans-unit id="91d19c59704ae184b913a339ca9d4fbfca9d65ac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reusePort&lt;/code&gt; specifies whether the port can be reused.</source>
          <target state="translated">&lt;code&gt;reusePort&lt;/code&gt; は、ポートが再利用できるかどうかを指定します。</target>
        </trans-unit>
        <trans-unit id="cf6252ae02508d8eb8f4a65d7e03974eb403075c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reviver&lt;/code&gt; function is called during decoding. It is invoked once for each object or list property that has been parsed. The &lt;code&gt;key&lt;/code&gt; argument is either the integer list index for a list property, the string map key for object properties, or &lt;code&gt;null&lt;/code&gt; for the final result.</source>
          <target state="translated">&lt;code&gt;reviver&lt;/code&gt; 機能は、デコード時に呼び出されます。これは、解析されたオブジェクトまたはリストプロパティごとに1回呼び出されます。 &lt;code&gt;key&lt;/code&gt; 引数がリストプロパティの整数リストインデックス、オブジェクトのプロパティ、または文字列マップのキーのいずれかである &lt;code&gt;null&lt;/code&gt; 最終結果のために。</target>
        </trans-unit>
        <trans-unit id="b730c05575ff59a3235ecd7f049953d4e5d216c8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reviver&lt;/code&gt; function is called once for each object or list property that has been parsed during decoding. The &lt;code&gt;key&lt;/code&gt; argument is either the integer list index for a list property, the string map key for object properties, or &lt;code&gt;null&lt;/code&gt; for the final result.</source>
          <target state="translated">&lt;code&gt;reviver&lt;/code&gt; 機能は、復号化時解析された各オブジェクトまたはリストプロパティに一度呼び出されます。 &lt;code&gt;key&lt;/code&gt; 引数がリストプロパティの整数リストインデックス、オブジェクトのプロパティ、または文字列マップのキーのいずれかである &lt;code&gt;null&lt;/code&gt; 最終結果のために。</target>
        </trans-unit>
        <trans-unit id="c6be43374362ae18d06242571c5c0d556b4f1f10" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reviver&lt;/code&gt; may be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;reviver&lt;/code&gt; かもしれ &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8d6f9c2fe3d99c02035f11485dd9462fcfe2ece0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;scheme&lt;/code&gt; is always set to &lt;code&gt;http&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;scheme&lt;/code&gt; 常にに設定されてい &lt;code&gt;http&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d6fb58862b0f2a53851020f549dab13352789010" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;scheme&lt;/code&gt; should be the same as the one returned by &lt;a href=&quot;scheme&quot;&gt;Uri.scheme&lt;/a&gt;, but doesn't have to be case-normalized to lower-case characters.</source>
          <target state="translated">&lt;code&gt;scheme&lt;/code&gt; によって返されるものと同じでなければならない&lt;a href=&quot;scheme&quot;&gt;Uri.scheme&lt;/a&gt;が、文字ケースを低下させる場合、正規化する必要はありません。</target>
        </trans-unit>
        <trans-unit id="bbe4e63f63198970edc5c7c6650aa439146709a0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;source&lt;/code&gt; must be a non-empty sequence of base-&lt;code&gt;radix&lt;/code&gt; digits, optionally prefixed with a minus or plus sign ('-' or '+').</source>
          <target state="translated">&lt;code&gt;source&lt;/code&gt; 塩基の非空のシーケンスでなければならない &lt;code&gt;radix&lt;/code&gt; （「 - 」または「+」）必要に応じてマイナスまたはプラス記号が付い桁。</target>
        </trans-unit>
        <trans-unit id="b4d3ab60abaf0b14e2f5539ceab082f312bf9c9c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;source&lt;/code&gt; must be a non-empty sequence of base-&lt;code&gt;radix&lt;/code&gt; digits, optionally prefixed with a minus or plus sign ('-' or '+'). It must not be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;source&lt;/code&gt; 塩基の非空のシーケンスでなければならない &lt;code&gt;radix&lt;/code&gt; （「 - 」または「+」）必要に応じてマイナスまたはプラス記号が付い桁。 &lt;code&gt;null&lt;/code&gt; であってはなりません。</target>
        </trans-unit>
        <trans-unit id="80d8b0d16341c4b174b151e6091edfd7232e8476" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;source&lt;/code&gt; of the elements may be a &lt;a href=&quot;../../dart-core/list-class&quot;&gt;List&lt;/a&gt; or any &lt;a href=&quot;../../dart-core/iterable-class&quot;&gt;Iterable&lt;/a&gt; with efficient &lt;a href=&quot;../../dart-core/iterable/length&quot;&gt;Iterable.length&lt;/a&gt; and &lt;a href=&quot;../../dart-core/iterable/elementat&quot;&gt;Iterable.elementAt&lt;/a&gt;.</source>
          <target state="translated">要素の &lt;code&gt;source&lt;/code&gt; は、&lt;a href=&quot;../../dart-core/list-class&quot;&gt;List&lt;/a&gt;または効率的な&lt;a href=&quot;../../dart-core/iterable/length&quot;&gt;Iterable.length&lt;/a&gt;および&lt;a href=&quot;../../dart-core/iterable/elementat&quot;&gt;Iterable.elementAtを&lt;/a&gt;持つ任意の&lt;a href=&quot;../../dart-core/iterable-class&quot;&gt;Iterable&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="f8635e964fcbee56a5ca7140dffb6bb8c3a017bf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;source&lt;/code&gt; of the elements may be a &lt;a href=&quot;../../dart-core/list-class&quot;&gt;List&lt;/a&gt; or any &lt;a href=&quot;../../dart-core/iterable-class&quot;&gt;Iterable&lt;/a&gt; with efficient &lt;a href=&quot;length&quot;&gt;Iterable.length&lt;/a&gt; and &lt;a href=&quot;../listmixin/elementat&quot;&gt;Iterable.elementAt&lt;/a&gt;.</source>
          <target state="translated">要素の &lt;code&gt;source&lt;/code&gt; は、&lt;a href=&quot;../../dart-core/list-class&quot;&gt;リスト&lt;/a&gt;または効率的な&lt;a href=&quot;length&quot;&gt;Iterable.length&lt;/a&gt;および&lt;a href=&quot;../listmixin/elementat&quot;&gt;Iterable.elementAtを&lt;/a&gt;持つ任意の&lt;a href=&quot;../../dart-core/iterable-class&quot;&gt;Iterable &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="3f8f089a063dc168965bb47d9fb83944c9e9481b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stackTraceString&lt;/code&gt; can be a string returned by some other stack trace, or it can be any string at all. If the string doesn't look like a stack trace, code that interprets stack traces is likely to fail, so fake stack traces should be used with care.</source>
          <target state="translated">&lt;code&gt;stackTraceString&lt;/code&gt; は、他のいくつかのスタックトレースによって返される文字列にすることも、すべての任意の文字列を指定できます。文字列がスタックトレースのように見えない場合、スタックトレースを解釈するコードは失敗する可能性が高いので、偽のスタックトレースは注意して使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="37856aad57882932df33d1370daa50033b396e86" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; indices must specify a valid range of this string. That is &lt;code&gt;0 &amp;lt;= start &amp;lt;= end &amp;lt;= this.length&lt;/code&gt;. If &lt;code&gt;end&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, it defaults to &lt;a href=&quot;length&quot;&gt;length&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; と &lt;code&gt;end&lt;/code&gt; インデックスは、この文字列の有効範囲を指定する必要があります。つまり、 &lt;code&gt;0 &amp;lt;= start &amp;lt;= end &amp;lt;= this.length&lt;/code&gt; です。 &lt;code&gt;end&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、デフォルトは&lt;a href=&quot;length&quot;&gt;length&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="1501cee6a4a3bbce45615bbccf3e9b3217e2ca8b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; positions must satisfy the relations 0 &amp;le; &lt;code&gt;start&lt;/code&gt; &amp;le; &lt;code&gt;end&lt;/code&gt; &amp;le; &lt;code&gt;this.length&lt;/code&gt; If &lt;code&gt;end&lt;/code&gt; is equal to &lt;code&gt;start&lt;/code&gt;, then the returned list is empty.</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; と &lt;code&gt;end&lt;/code&gt; の位置は関係0を満たさなければならない&amp;le; &lt;code&gt;start&lt;/code&gt; &amp;le; &lt;code&gt;end&lt;/code&gt; &amp;le; &lt;code&gt;this.length&lt;/code&gt; をした場合 &lt;code&gt;end&lt;/code&gt; に等しい &lt;code&gt;start&lt;/code&gt; 、その後、返されたリストが空です。</target>
        </trans-unit>
        <trans-unit id="09d3e74a62f832a9a3c054416ab670cc99881f04" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;start&lt;/code&gt; must be non-negative and not greater than &lt;a href=&quot;length&quot;&gt;length&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; 非負と以下でなければならない&lt;a href=&quot;length&quot;&gt;長さ&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="96bf3f673de4db4504e348b878a14cd87ebdb837" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;startName&lt;/code&gt; and &lt;code&gt;endName&lt;/code&gt; defaults to &lt;code&gt;&quot;start&quot;&lt;/code&gt; and &lt;code&gt;&quot;end&quot;&lt;/code&gt;, respectively.</source>
          <target state="translated">&lt;code&gt;startName&lt;/code&gt; と &lt;code&gt;endName&lt;/code&gt; デフォルトは &lt;code&gt;&quot;start&quot;&lt;/code&gt; と &lt;code&gt;&quot;end&quot;&lt;/code&gt; それぞれ。</target>
        </trans-unit>
        <trans-unit id="5fec7f07362aa24981c78e37988eda6829c1e1a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;streamTransformer&lt;/code&gt; can return any stream. Whether the returned stream is a broadcast stream or not, and which elements it will contain, is entirely up to the transformation.</source>
          <target state="translated">&lt;code&gt;streamTransformer&lt;/code&gt; は、任意のストリームを返すことができます。返されるストリームがブロードキャストストリームであるかどうか、およびどのストリームに含まれるかは、完全に変換次第です。</target>
        </trans-unit>
        <trans-unit id="d537a7a6b49520bd86b0e1026057496ed9f82d4a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;test&lt;/code&gt; call is considered failing if it returns a non-&lt;code&gt;true&lt;/code&gt; value or if it throws. If the &lt;code&gt;test&lt;/code&gt; call throws, the error is emitted as the last event on the returned streams.</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; が非返す場合、呼び出しは失敗であると考えられる &lt;code&gt;true&lt;/code&gt; 値か、スロー。場合は &lt;code&gt;test&lt;/code&gt; コールスロー、エラーが返されたストリーム上の最後のイベントとして放出されます。</target>
        </trans-unit>
        <trans-unit id="c9ef7431e396957ecf2c12039d5532662f62ec37" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;test&lt;/code&gt; function must not throw or modify the queue.</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; 機能は、スローまたはキューを変更してはいけません。</target>
        </trans-unit>
        <trans-unit id="969ef0f138240ed20e7dbe3c953165d5fa3311e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toEncodable&lt;/code&gt; function is used during encoding. It is invoked for values that are not directly encodable to a string (a value that is not a number, boolean, string, null, list or a map with string keys). The function must return an object that is directly encodable. The elements of a returned list and values of a returned map do not need to be directly encodable, and if they aren't, &lt;code&gt;toEncodable&lt;/code&gt; will be used on them as well. Please notice that it is possible to cause an infinite recursive regress in this way, by effectively creating an infinite data structure through repeated call to &lt;code&gt;toEncodable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;toEncodable&lt;/code&gt; 関数は、符号化時に使用されます。文字列に直接エンコードできない値（数値、ブール値、文字列、null、リスト、または文字列キーを持つマップではない値）に対して呼び出されます。この関数は、直接エンコード可能なオブジェクトを返す必要があります。返されるリストの要素と返されるマップの値は、直接エンコード可能である必要はありません。そうでない場合は、 &lt;code&gt;toEncodable&lt;/code&gt; もそれらで使用されます。 &lt;code&gt;toEncodable&lt;/code&gt; を繰り返し呼び出すことで効果的に無限データ構造を作成することにより、この方法で無限再帰回帰を引き起こすことが可能であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="3bd1a4e89e25af39b10eca3a1d152adeba2623e2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ttl&lt;/code&gt; sets &lt;code&gt;time to live&lt;/code&gt; of a datagram sent on the socket.</source>
          <target state="translated">&lt;code&gt;ttl&lt;/code&gt; は、ソケットで送信されたデータグラムの存続 &lt;code&gt;time to live&lt;/code&gt; 設定します。</target>
        </trans-unit>
        <trans-unit id="afc7aed82eda5f9f1e83d7b1b79be36924b66670" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;uri&lt;/code&gt; must have scheme &lt;code&gt;data&lt;/code&gt; and no authority or fragment, and the path (concatenated with the query, if there is one) must be valid as data URI content with the same rules as &lt;a href=&quot;parse&quot;&gt;parse&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;uri&lt;/code&gt; 有していなければならない方式 &lt;code&gt;data&lt;/code&gt; 及び無権限又は断片、及び（存在する場合、クエリに連結された）パスが同じルールでデータURIコンテンツとして有効でなければならない&lt;a href=&quot;parse&quot;&gt;解析&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9d004923d9eee9046ba410fa931aa54628a31d49" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;uri&lt;/code&gt; must not be &lt;code&gt;null&lt;/code&gt;. If the &lt;code&gt;uri&lt;/code&gt; string is not valid as a URI or URI reference, a &lt;a href=&quot;../formatexception-class&quot;&gt;FormatException&lt;/a&gt; is thrown.</source>
          <target state="translated">&lt;code&gt;uri&lt;/code&gt; あってはならない &lt;code&gt;null&lt;/code&gt; 。場合は &lt;code&gt;uri&lt;/code&gt; 文字列がURIまたはURI参照として有効ではありません、&lt;a href=&quot;../formatexception-class&quot;&gt;FormatExceptionが&lt;/a&gt;スローされます。</target>
        </trans-unit>
        <trans-unit id="736522b69715a4285841d4b392c7b32867b1e6d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;userInfo&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt; and &lt;code&gt;port&lt;/code&gt; components are set from the &lt;code&gt;authority&lt;/code&gt; argument. If &lt;code&gt;authority&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; or empty, the created &lt;code&gt;Uri&lt;/code&gt; has no authority, and isn't directly usable as an HTTP URL, which must have a non-empty host.</source>
          <target state="translated">&lt;code&gt;userInfo&lt;/code&gt; 、 &lt;code&gt;host&lt;/code&gt; と &lt;code&gt;port&lt;/code&gt; の構成要素は以下から設定された &lt;code&gt;authority&lt;/code&gt; 引数。場合は &lt;code&gt;authority&lt;/code&gt; ある &lt;code&gt;null&lt;/code&gt; または空、作成した &lt;code&gt;Uri&lt;/code&gt; 何の権限を持っていない、と非空のホストを持っている必要がありますHTTP URLとして直接使用できません。</target>
        </trans-unit>
        <trans-unit id="9f63fecad45f3a69b64d230360ac3095f2fe13d7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;where&lt;/code&gt; parameter indicates where to insert the HTML fragment:</source>
          <target state="translated">&lt;code&gt;where&lt;/code&gt; HTMLフラグメントを挿入する場所をパラメータが示しています。</target>
        </trans-unit>
        <trans-unit id="0435445564e42a2add420eeaea1327b74c2539d7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; should be non-negative. If &lt;code&gt;width&lt;/code&gt; or &lt;code&gt;height&lt;/code&gt; are negative, they are clamped to zero.</source>
          <target state="translated">&lt;code&gt;width&lt;/code&gt; と &lt;code&gt;height&lt;/code&gt; 非負でなければなりません。場合は &lt;code&gt;width&lt;/code&gt; または &lt;code&gt;height&lt;/code&gt; 否定され、彼らはゼロにクランプされています。</target>
        </trans-unit>
        <trans-unit id="54bfe9d8bfb5aef8e0436d9fad1af30de2e04c26" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;withCredentials&lt;/code&gt; parameter specified that credentials such as a cookie (already) set in the header or &lt;a href=&quot;http://tools.ietf.org/html/rfc1945#section-10.2&quot;&gt;authorization headers&lt;/a&gt; should be specified for the request. Details to keep in mind when using credentials:</source>
          <target state="translated">&lt;code&gt;withCredentials&lt;/code&gt; 例えばヘッダ又はにおけるクッキー（すでに）セットとしてその認証情報を指定されたパラメータ&lt;a href=&quot;http://tools.ietf.org/html/rfc1945#section-10.2&quot;&gt;の許可ヘッダーは&lt;/a&gt;、要求に指定されなければなりません。資格情報を使用する際の注意事項：</target>
        </trans-unit>
        <trans-unit id="7529778083573a608b13f2f2e41eedb2afcea4f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;withCredentials&lt;/code&gt; parameter specified that credentials such as a cookie (already) set in the header or &lt;a href=&quot;https://tools.ietf.org/html/rfc1945#section-10.2&quot;&gt;authorization headers&lt;/a&gt; should be specified for the request. Details to keep in mind when using credentials:</source>
          <target state="translated">&lt;code&gt;withCredentials&lt;/code&gt; 例えばヘッダ又はにおけるクッキー（すでに）セットとしてその認証情報を指定されたパラメータ&lt;a href=&quot;https://tools.ietf.org/html/rfc1945#section-10.2&quot;&gt;の許可ヘッダーは&lt;/a&gt;、要求に指定されなければなりません。資格情報を使用する際に留意すべき詳細：</target>
        </trans-unit>
        <trans-unit id="1f51307e9af0fae933280fc00db03a2df8942d7d" translate="yes" xml:space="preserve">
          <source>The ANSI color selection is generally supported.</source>
          <target state="translated">ANSIカラーの選択が一般的にサポートされています。</target>
        </trans-unit>
        <trans-unit id="bb37e828d125d2bb5f555a78d3c17c76e8be5632" translate="yes" xml:space="preserve">
          <source>The DER encoded bytes of the certificate.</source>
          <target state="translated">証明書のDERエンコードバイト。</target>
        </trans-unit>
        <trans-unit id="7f3af2e568b9efe78549afbf1b1c6213304ddf90" translate="yes" xml:space="preserve">
          <source>The Dart specification requires this error to be thrown when control reaches the end of a switch case (except the last case of a switch) without meeting a break or similar end of the control flow.</source>
          <target state="translated">Dart仕様では、制御が制御フローのブレークまたはそれに類する終了を満たさずにスイッチケース(スイッチの最後のケースを除く)の終了に到達した場合に、このエラーがスローされることが要求されています。</target>
        </trans-unit>
        <trans-unit id="5c246479b4150ffeabad66eeab10d16cfb942983" translate="yes" xml:space="preserve">
          <source>The DateTime class contains several handy methods, such as &lt;a href=&quot;datetime/isafter&quot;&gt;isAfter&lt;/a&gt;, &lt;a href=&quot;datetime/isbefore&quot;&gt;isBefore&lt;/a&gt;, and &lt;a href=&quot;datetime/isatsamemomentas&quot;&gt;isAtSameMomentAs&lt;/a&gt;, for comparing DateTime objects.</source>
          <target state="translated">DateTimeクラスは、次のようないくつかの便利なメソッドが含まれ&lt;a href=&quot;datetime/isafter&quot;&gt;isAfter&lt;/a&gt;、&lt;a href=&quot;datetime/isbefore&quot;&gt;isBefore&lt;/a&gt;、および&lt;a href=&quot;datetime/isatsamemomentas&quot;&gt;isAtSameMomentAsを&lt;/a&gt; DateTimeオブジェクトを比較するため、。</target>
        </trans-unit>
        <trans-unit id="68ec70580611644df89ffd4e5eade5e73aa3bca8" translate="yes" xml:space="preserve">
          <source>The DateTime class does not provide internationalization. To internationalize your code, use the &lt;a href=&quot;https://pub.dartlang.org/packages/intl&quot;&gt;intl&lt;/a&gt; package.</source>
          <target state="translated">DateTimeクラスは国際化を提供しません。コードを国際化するには、&lt;a href=&quot;https://pub.dartlang.org/packages/intl&quot;&gt;intl&lt;/a&gt;パッケージを使用します。</target>
        </trans-unit>
        <trans-unit id="af55175cb21036b7758f18dfb1c445d2c5482bb8" translate="yes" xml:space="preserve">
          <source>The DateTime class does not provide internationalization. To internationalize your code, use the &lt;a href=&quot;https://pub.dev/packages/intl&quot;&gt;intl&lt;/a&gt; package.</source>
          <target state="translated">DateTimeクラスは国際化を提供しません。コードを国際化するには、&lt;a href=&quot;https://pub.dev/packages/intl&quot;&gt;intl&lt;/a&gt;パッケージを使用します。</target>
        </trans-unit>
        <trans-unit id="c4173a6304f7f59d06a0dfad41172dc8f0ed3a20" translate="yes" xml:space="preserve">
          <source>The Euclidean division is only defined for integers, but can be easily extended to work with doubles. In that case &lt;code&gt;r&lt;/code&gt; may have a non-integer value, but it still verifies &lt;code&gt;0 &amp;lt;= r &amp;lt; |b|&lt;/code&gt;.</source>
          <target state="translated">ユークリッド除算は整数に対してのみ定義されますが、倍精度浮動小数点演算で機能するように簡単に拡張できます。その場合、 &lt;code&gt;r&lt;/code&gt; は整数以外の値を持つ可能性がありますが、それでも &lt;code&gt;0 &amp;lt;= r &amp;lt; |b|&lt;/code&gt; 検証します。。</target>
        </trans-unit>
        <trans-unit id="6122522703e2f6ceb035496e66feef7428ced29e" translate="yes" xml:space="preserve">
          <source>The File class contains methods for manipulating files and their contents. Using methods in this class, you can open and close files, read to and write from them, create and delete them, and check for their existence.</source>
          <target state="translated">Fileクラスには、ファイルやその内容を操作するためのメソッドが含まれています。このクラスのメソッドを使用すると、ファイルを開いたり閉じたり、ファイルから読み書きしたり、ファイルを作成したり削除したり、ファイルの存在を確認したりすることができます。</target>
        </trans-unit>
        <trans-unit id="2df236eea20b26aaf920df86ee12bb78bf80ed06" translate="yes" xml:space="preserve">
          <source>The Future is completed when the response is available.</source>
          <target state="translated">対応が可能になった時点で未来は完成しています。</target>
        </trans-unit>
        <trans-unit id="f2f53e0f9d5c1f554c9b4e7003f9173cbf6ce17b" translate="yes" xml:space="preserve">
          <source>The HTML fragment is parsed as if it occurred within the context of a &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; tag, this means that special elements such as &lt;code&gt;&amp;lt;caption&amp;gt;&lt;/code&gt; which must be parsed within the scope of a &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; element will be dropped. Use &lt;a href=&quot;createfragment&quot;&gt;createFragment&lt;/a&gt; to parse contextual HTML fragments.</source>
          <target state="translated">HTMLフラグメントは、 &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; タグのコンテキスト内で発生したかのように解析されます。これは、 &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; 要素のスコープ内で解析する必要がある &lt;code&gt;&amp;lt;caption&amp;gt;&lt;/code&gt; などの特別な要素が削除されることを意味します。&lt;a href=&quot;createfragment&quot;&gt;createFragment&lt;/a&gt;を使用して、コンテキストHTMLフラグメントを解析します。</target>
        </trans-unit>
        <trans-unit id="6b4a382d5f8cb90cfb644c280f5bb704e8524b7c" translate="yes" xml:space="preserve">
          <source>The HTML fragment should contain only one single root element, any leading or trailing text nodes will be removed.</source>
          <target state="translated">HTMLフラグメントは、1つのルート要素のみを含むべきであり、先頭または末尾のテキストノードは削除されます。</target>
        </trans-unit>
        <trans-unit id="7cd5a26b58821ef76cd4a18b209b35f2990ee3b5" translate="yes" xml:space="preserve">
          <source>The HTTP method is specified in &lt;code&gt;method&lt;/code&gt; and the URL to use in &lt;code&gt;url&lt;/code&gt;.</source>
          <target state="translated">HTTPメソッドがで指定されている &lt;code&gt;method&lt;/code&gt; とで使用するURL &lt;code&gt;url&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5c0edca5340a4d3f9b01bf5963fc5b22e473af6b" translate="yes" xml:space="preserve">
          <source>The HTTP method to use is specified in &lt;code&gt;method&lt;/code&gt;, the server is specified using &lt;code&gt;host&lt;/code&gt; and &lt;code&gt;port&lt;/code&gt;, and the path (including a possible query) is specified using &lt;code&gt;path&lt;/code&gt;. The path may also contain a URI fragment, which will be ignored.</source>
          <target state="translated">使用するHTTPメソッドは &lt;code&gt;method&lt;/code&gt; で指定され、サーバーは &lt;code&gt;host&lt;/code&gt; および &lt;code&gt;port&lt;/code&gt; を使用して指定され、パス（可能なクエリを含む）はpathを使用して指定され &lt;code&gt;path&lt;/code&gt; 。パスには、無視されるURIフラグメントも含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="988ccb9ee93543040400a8debc464ecfcad5d0e7" translate="yes" xml:space="preserve">
          <source>The HTTP protocol version used in the request, either &quot;1.0&quot; or &quot;1.1&quot;.</source>
          <target state="translated">リクエストで使用されたHTTPプロトコルのバージョン、&quot;1.0 &quot;または &quot;1.1&quot;。</target>
        </trans-unit>
        <trans-unit id="37809cb81faa4b30caf7a3d18e0b86e5af064342" translate="yes" xml:space="preserve">
          <source>The HTTP result code from the request (200, 404, etc). See also: &lt;a href=&quot;http://en.wikipedia.org/wiki/List_of_HTTP_status_codes&quot;&gt;HTTP Status Codes&lt;/a&gt;</source>
          <target state="translated">リクエストからのHTTP結果コード（200、404など）。参照：&lt;a href=&quot;http://en.wikipedia.org/wiki/List_of_HTTP_status_codes&quot;&gt;HTTPステータスコード&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bdcbedfc44cd13d0ed31a2c3ce388d3654ee22ec" translate="yes" xml:space="preserve">
          <source>The HTTP result code from the request (200, 404, etc). See also: &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_HTTP_status_codes&quot;&gt;HTTP Status Codes&lt;/a&gt;</source>
          <target state="translated">リクエストからのHTTP結果コード（200、404など）。参照：&lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_HTTP_status_codes&quot;&gt;HTTPステータスコード&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2b447c028a020688961b3c4dbd2219457ec1cb89" translate="yes" xml:space="preserve">
          <source>The HttpClient supports persistent connections and caches network connections to reuse them for multiple requests whenever possible. This means that network connections can be kept open for some time after a request has completed. Use HttpClient.close to force the HttpClient object to shut down and to close the idle network connections.</source>
          <target state="translated">HttpClientは永続的な接続をサポートし、可能な限り複数のリクエストで再利用するためにネットワーク接続をキャッシュします。これは、リクエストが完了した後も、ネットワーク接続をしばらくの間開いたままにしておくことができることを意味します。HttpClient.close を使用して、HttpClient オブジェクトを強制的にシャットダウンし、アイドル状態のネットワーク接続を閉じます。</target>
        </trans-unit>
        <trans-unit id="d22c4e75c99f113fa8f07e0f202148cbcfcae815" translate="yes" xml:space="preserve">
          <source>The HttpRequest exposes the request headers and provides the request body, if it exists, as a Stream of data. If the body is unread, it is drained when the server writes to the HttpResponse or closes it.</source>
          <target state="translated">HttpRequest は、リクエスト・ヘッダを公開し、リクエスト・ボディが存在する場合は、データのストリームとして提供します。ボディが未読の場合、サーバが HttpResponse に書き込むか閉じると、ボディは削除されます。</target>
        </trans-unit>
        <trans-unit id="8666fce9a9853fa82e4ffba82597998d6d5b1a48" translate="yes" xml:space="preserve">
          <source>The HttpResponse object has a number of properties for setting up the HTTP headers of the response. When writing string data through the IOSink, the encoding used is determined from the &quot;charset&quot; parameter of the &quot;Content-Type&quot; header.</source>
          <target state="translated">HttpResponseオブジェクトには、レスポンスのHTTPヘッダを設定するためのいくつかのプロパティがあります。IOSinkを介して文字列データを書き込む場合、使用されるエンコーディングは &quot;Content-Type &quot;ヘッダの &quot;charset &quot;パラメータから決定されます。</target>
        </trans-unit>
        <trans-unit id="3a488e9819aaf11022cb1a74662bc7f82144b5a3" translate="yes" xml:space="preserve">
          <source>The HttpServer is a &lt;a href=&quot;../dart-async/stream-class&quot;&gt;Stream&lt;/a&gt; that provides &lt;a href=&quot;httprequest-class&quot;&gt;HttpRequest&lt;/a&gt; objects. Each HttpRequest has an associated &lt;a href=&quot;httpresponse-class&quot;&gt;HttpResponse&lt;/a&gt; object. The server responds to a request by writing to that HttpResponse object. The following example shows how to bind an HttpServer to an IPv6 &lt;a href=&quot;internetaddress-class&quot;&gt;InternetAddress&lt;/a&gt; on port 80 (the standard port for HTTP servers) and how to listen for requests. Port 80 is the default HTTP port. However, on most systems accessing this requires super-user privileges. For local testing consider using a non-reserved port (1024 and above).</source>
          <target state="translated">HttpServerは、&lt;a href=&quot;httprequest-class&quot;&gt;HttpRequest&lt;/a&gt;オブジェクトを提供する&lt;a href=&quot;../dart-async/stream-class&quot;&gt;ストリーム&lt;/a&gt;です。各HttpRequestには、関連付けられた&lt;a href=&quot;httpresponse-class&quot;&gt;HttpResponse&lt;/a&gt;オブジェクトがあります。サーバーはそのHttpResponseオブジェクトに書き込むことでリクエストに応答します。次の例は、HttpServerをポート80（HTTPサーバーの標準ポート）でIPv6 &lt;a href=&quot;internetaddress-class&quot;&gt;InternetAddress&lt;/a&gt;にバインドする方法と、要求を待機する方法を示しています。ポート80がデフォルトのHTTPポートです。ただし、これにアクセスするほとんどのシステムでは、スーパーユーザー権限が必要です。ローカルテストでは、予約されていないポート（1024以上）の使用を検討してください。</target>
        </trans-unit>
        <trans-unit id="3bd30d8f95337990618e633dc93b08390b4e1f97" translate="yes" xml:space="preserve">
          <source>The JSON encoder handles numbers, strings, booleans, null, lists and maps directly.</source>
          <target state="translated">JSON エンコーダは、数値、文字列、ブーリアン、NULL、リスト、マップを直接処理します。</target>
        </trans-unit>
        <trans-unit id="b52aa35d3bc8c6703fdd6c76f77bd351ef2b499d" translate="yes" xml:space="preserve">
          <source>The JSON encoder handles numbers, strings, booleans, null, lists and maps with string keys directly.</source>
          <target state="translated">JSON エンコーダは、文字列キーを持つ数値、文字列、ブーリアン、NULL、リスト、マップを直接処理します。</target>
        </trans-unit>
        <trans-unit id="4454984904d478fae8a41bb412ee25cc1df9fda5" translate="yes" xml:space="preserve">
          <source>The JavaScript global object, usually &lt;code&gt;window&lt;/code&gt;.</source>
          <target state="translated">JavaScriptグローバルオブジェクト、通常は &lt;code&gt;window&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="39b6bf7c430651a2752cddaafb9ea7af1bc0401f" translate="yes" xml:space="preserve">
          <source>The MIME type of the data URI.</source>
          <target state="translated">データURIのMIMEタイプ。</target>
        </trans-unit>
        <trans-unit id="a63fd38851189c969ec65f2636c6d20c52064b4a" translate="yes" xml:space="preserve">
          <source>The MIME type of the data URI. &lt;a href=&quot;uridata/mimetype&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">データURIのMIMEタイプ。&lt;a href=&quot;uridata/mimetype&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8ebdeef9f19f1297c0d14f5868044842269ab387" translate="yes" xml:space="preserve">
          <source>The PEM encoded String of the certificate.</source>
          <target state="translated">証明書のPEMエンコードされた文字列。</target>
        </trans-unit>
        <trans-unit id="769c26442cdbc9ac1573124028bb78886ab42704" translate="yes" xml:space="preserve">
          <source>The PI constant.</source>
          <target state="translated">PI定数です。</target>
        </trans-unit>
        <trans-unit id="fd35aee76b00eafd2a49a8f697a9991b8db1730e" translate="yes" xml:space="preserve">
          <source>The RawSecureServerSocket is a server socket, providing a stream of low-level &lt;a href=&quot;rawsecuresocket-class&quot;&gt;RawSecureSocket&lt;/a&gt;s.</source>
          <target state="translated">RawSecureServerSocketはサーバーソケットで、低レベルの&lt;a href=&quot;rawsecuresocket-class&quot;&gt;RawSecureSocket&lt;/a&gt;のストリームを提供します。</target>
        </trans-unit>
        <trans-unit id="198858a60a463fbf430917ca6522adc5d245c647" translate="yes" xml:space="preserve">
          <source>The RawSecureServerSocket is a server socket, providing a stream of low-level &lt;a href=&quot;rawsecuresocket-class&quot;&gt;RawSecureSocket&lt;/a&gt;s. &lt;a href=&quot;rawsecureserversocket-class&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">RawSecureServerSocketはサーバーソケットで、低レベルの&lt;a href=&quot;rawsecuresocket-class&quot;&gt;RawSecureSocket&lt;/a&gt;のストリームを提供します。&lt;a href=&quot;rawsecureserversocket-class&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8b1bd5d1c5aff5741191297509d0ce895859569b" translate="yes" xml:space="preserve">
          <source>The SHA1 hash of the certificate.</source>
          <target state="translated">証明書の SHA1 ハッシュ。</target>
        </trans-unit>
        <trans-unit id="10d28499b1eb32dbbc725fa120b15eaffed2edf9" translate="yes" xml:space="preserve">
          <source>The String and StringBuffer classes implement string concatenation, interpolation, and other string manipulation features.</source>
          <target state="translated">String および StringBuffer クラスは、文字列の連結、補間、およびその他の文字列操作機能を実装します。</target>
        </trans-unit>
        <trans-unit id="db7eb45de34a3994c48a0f1b7d1d5f2c57353336" translate="yes" xml:space="preserve">
          <source>The String class can not be extended or implemented. Attempting to do so yields a compile-time error.</source>
          <target state="translated">Stringクラスは拡張も実装もできません。そのようにしようとすると、コンパイル時のエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="44ce0deafcc9112c96f0f59c78e694e05d366103" translate="yes" xml:space="preserve">
          <source>The URI for the request.</source>
          <target state="translated">リクエストのURI。</target>
        </trans-unit>
        <trans-unit id="8b06841c5f157c144683367693bd174d61cbab2e" translate="yes" xml:space="preserve">
          <source>The URI for the request. &lt;a href=&quot;httprequest/uri&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">リクエストのURI。&lt;a href=&quot;httprequest/uri&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="189f35682b23d3d095f86af09699e4b15af9826e" translate="yes" xml:space="preserve">
          <source>The URI in &lt;code&gt;location&lt;/code&gt; should be absolute, but there are no checks to enforce that.</source>
          <target state="translated">&lt;code&gt;location&lt;/code&gt; のURIは絶対でなければなりませんが、それを強制するチェックはありません。</target>
        </trans-unit>
        <trans-unit id="bf7d5f44b0a9736b07c8d4ddad4e7a02991e5698" translate="yes" xml:space="preserve">
          <source>The URL to use is specified in &lt;code&gt;url&lt;/code&gt;.</source>
          <target state="translated">使用するURLは &lt;code&gt;url&lt;/code&gt; で指定されます。</target>
        </trans-unit>
        <trans-unit id="5f9c254e9956912a4987fea0527effc1e1cac536" translate="yes" xml:space="preserve">
          <source>The Unicode Byte Order Marker (BOM) character &lt;code&gt;U+FEFF&lt;/code&gt;.</source>
          <target state="translated">Unicode Byte Order Marker（BOM）文字 &lt;code&gt;U+FEFF&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5aa7c8e808bee853115519593460f011f10321b0" translate="yes" xml:space="preserve">
          <source>The Unicode Replacement character &lt;code&gt;U+FFFD&lt;/code&gt; (�).</source>
          <target state="translated">Unicode置換文字 &lt;code&gt;U+FFFD&lt;/code&gt; （）。</target>
        </trans-unit>
        <trans-unit id="40a71aefdfa2143d18ebc9cc265e6e11ca4c5ac3" translate="yes" xml:space="preserve">
          <source>The Uri to access the service. If the web server is not running, this will be null.</source>
          <target state="translated">サービスにアクセスするための Uri。Web サーバーが動作していない場合は null になります。</target>
        </trans-unit>
        <trans-unit id="1075a4fcd5ae6fda997aaec4b3f8b3dd1f10b513" translate="yes" xml:space="preserve">
          <source>The UriPolicy can be used to restrict the locations the images may be loaded from. By default this will use the default &lt;a href=&quot;../uripolicy-class&quot;&gt;UriPolicy&lt;/a&gt;.</source>
          <target state="translated">UriPolicyを使用して、画像の読み込み元の場所を制限できます。デフォルトでは、これはデフォルトの&lt;a href=&quot;../uripolicy-class&quot;&gt;UriPolicy&lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="660110c40bf28bad76c32ab7c9a748c20582e572" translate="yes" xml:space="preserve">
          <source>The UriPolicy can be used to restrict the locations the navigation elements are allowed to direct to. By default this will use the default &lt;a href=&quot;../uripolicy-class&quot;&gt;UriPolicy&lt;/a&gt;.</source>
          <target state="translated">UriPolicyを使用して、ナビゲーション要素が誘導できる場所を制限できます。デフォルトでは、これはデフォルトの&lt;a href=&quot;../uripolicy-class&quot;&gt;UriPolicy&lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="c26742b412261dd2b12a860d45ebf1ffb6bcc19d" translate="yes" xml:space="preserve">
          <source>The absolute URI of the script being run in this isolate.</source>
          <target state="translated">このアイソレートで実行されているスクリプトの絶対URI。</target>
        </trans-unit>
        <trans-unit id="3f39e61a5ce4f1389539c96766c8f9b13d53143a" translate="yes" xml:space="preserve">
          <source>The absolute URI of the script being run in this isolate. &lt;a href=&quot;platform/script&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">この分離内で実行されているスクリプトの絶対URI。&lt;a href=&quot;platform/script&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d837f47b46472475cafc349d5f09c6089a85e0c1" translate="yes" xml:space="preserve">
          <source>The absolute path is computed by prefixing a relative path with the current working directory, and returning an absolute path unchanged.</source>
          <target state="translated">絶対パスは、相対パスの前に現在の作業ディレクトリを付けて計算され、絶対パスは変更されずに返されます。</target>
        </trans-unit>
        <trans-unit id="b01e917d3fd5c4bff72b2d3e74498e33370ddfc3" translate="yes" xml:space="preserve">
          <source>The absolute uri of the library.</source>
          <target state="translated">ライブラリの絶対URI。</target>
        </trans-unit>
        <trans-unit id="3fac2b5770f05383fd755b5116799ef4afd082fe" translate="yes" xml:space="preserve">
          <source>The accepted inputs are currently:</source>
          <target state="translated">受け入れられた入力は、現在のところ</target>
        </trans-unit>
        <trans-unit id="c7a3ac5512f9bbb61e1eacd10f7511e1e76baf14" translate="yes" xml:space="preserve">
          <source>The actual bytes of the message.</source>
          <target state="translated">メッセージの実際のバイト数。</target>
        </trans-unit>
        <trans-unit id="cc216e66749ff7b61b99ad66ac32ee32c7d59f62" translate="yes" xml:space="preserve">
          <source>The actual error object and stackTraces will not necessarily be the same object types as in the actual isolate, but they will always have the same &lt;a href=&quot;../../dart-core/object/tostring&quot;&gt;Object.toString&lt;/a&gt; result.</source>
          <target state="translated">実際のエラーオブジェクトとstackTracesは、必ずしも実際の分離オブジェクトと同じオブジェクトタイプであるとは限りませんが、常に同じ&lt;a href=&quot;../../dart-core/object/tostring&quot;&gt;Object.toString&lt;/a&gt;結果になります。</target>
        </trans-unit>
        <trans-unit id="9d3940281f638d0259e28544164989fe0734fe68" translate="yes" xml:space="preserve">
          <source>The actual escape sequence support may differ between terminals, with some terminals supporting more escape sequences than others, and some terminals even differing in behavior for the same escape sequence.</source>
          <target state="translated">実際のエスケープシーケンスのサポートは端末間で異なる場合があり、ある端末は他の端末よりも多くのエスケープシーケンスをサポートし、ある端末は同じエスケープシーケンスに対する動作が異なる場合さえあります。</target>
        </trans-unit>
        <trans-unit id="8f3fafc3a3965234caee54dd20ec7c8033d19915" translate="yes" xml:space="preserve">
          <source>The actual source input which caused the error.</source>
          <target state="translated">エラーの原因となった実際のソース入力。</target>
        </trans-unit>
        <trans-unit id="8372eb8dd84a3965cae64f3b887eb5d81a337650" translate="yes" xml:space="preserve">
          <source>The actual source input which caused the error. &lt;a href=&quot;formatexception/source&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">エラーの原因となった実際のソース入力。&lt;a href=&quot;formatexception/source&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5287ea5d19757eb1f82eabad2c47928f3b21fb54" translate="yes" xml:space="preserve">
          <source>The address family of the &lt;a href=&quot;../internetaddress-class&quot;&gt;InternetAddress&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../internetaddress-class&quot;&gt;InternetAddress&lt;/a&gt;のアドレスファミリ。</target>
        </trans-unit>
        <trans-unit id="da5b7b5e5d6c417344689949e902c17be00a7ecf" translate="yes" xml:space="preserve">
          <source>The address family of the &lt;a href=&quot;internetaddress-class&quot;&gt;InternetAddress&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;internetaddress-class&quot;&gt;InternetAddress&lt;/a&gt;のアドレスファミリ。</target>
        </trans-unit>
        <trans-unit id="72af390a2f19c2994a60ebdec3742fce430317ab" translate="yes" xml:space="preserve">
          <source>The address of the socket giving rise to the exception.</source>
          <target state="translated">例外が発生したソケットのアドレス。</target>
        </trans-unit>
        <trans-unit id="71d65b1c79d54e6b611e8c5618f08b40ace35c90" translate="yes" xml:space="preserve">
          <source>The address of the socket giving rise to the exception. &lt;a href=&quot;socketexception/address&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">例外を発生させるソケットのアドレス。&lt;a href=&quot;socketexception/address&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="521c48566fd3af61553ef2531487c051dcf5616a" translate="yes" xml:space="preserve">
          <source>The address of the socket which sends the data.</source>
          <target state="translated">データを送信するソケットのアドレス。</target>
        </trans-unit>
        <trans-unit id="e997ca138600cb8ec2a9b60c7fcd363077edd5e3" translate="yes" xml:space="preserve">
          <source>The address that the server is listening on.</source>
          <target state="translated">サーバーがリッスンしているアドレス。</target>
        </trans-unit>
        <trans-unit id="ae563f1b99bd5e1b0bf8343ff5e4d0d29f46f740" translate="yes" xml:space="preserve">
          <source>The address that the server is listening on. &lt;a href=&quot;httpserver/address&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">サーバーがリッスンしているアドレス。&lt;a href=&quot;httpserver/address&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5545f8a5c0c2407e39a327c6354d0ebdfc7e930c" translate="yes" xml:space="preserve">
          <source>The algorithm &quot;Transform Reference&quot; for resolving a reference is described in &lt;a href=&quot;http://tools.ietf.org/html/rfc3986#section-5&quot;&gt;RFC-3986 Section 5&lt;/a&gt;.</source>
          <target state="translated">参照を解決するためのアルゴリズム「変換参照」は、&lt;a href=&quot;http://tools.ietf.org/html/rfc3986#section-5&quot;&gt;RFC-3986セクション5で&lt;/a&gt;説明されています。</target>
        </trans-unit>
        <trans-unit id="9ccb4935ab0291c7f7ec71a8b57748cbf4d1dbf1" translate="yes" xml:space="preserve">
          <source>The algorithm &quot;Transform Reference&quot; for resolving a reference is described in &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-5&quot;&gt;RFC-3986 Section 5&lt;/a&gt;.</source>
          <target state="translated">参照を解決するためのアルゴリズム「参照の変換」は、&lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-5&quot;&gt;RFC-3986セクション5で&lt;/a&gt;説明されています。</target>
        </trans-unit>
        <trans-unit id="b28dd061c169dea193d0c98ab81f1215260a127e" translate="yes" xml:space="preserve">
          <source>The allowed characters in a &lt;code&gt;token&lt;/code&gt; are the visible ASCII characters, U+0021 (&lt;code&gt;!&lt;/code&gt;) through U+007E (&lt;code&gt;~&lt;/code&gt;), except the separator characters: &lt;code&gt;(&lt;/code&gt;, &lt;code&gt;)&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;@&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;;&lt;/code&gt;, &lt;code&gt;:&lt;/code&gt;, &lt;code&gt;\&lt;/code&gt;, &lt;code&gt;&quot;&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;]&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;=&lt;/code&gt;, &lt;code&gt;{&lt;/code&gt;, and &lt;code&gt;}&lt;/code&gt;.</source>
          <target state="translated">で使用できる文字 &lt;code&gt;token&lt;/code&gt; （可視ASCII文字、U + 0021です &lt;code&gt;!&lt;/code&gt; ）U + 007E（スルー &lt;code&gt;~&lt;/code&gt; 区切り文字を除きます）、： （ 、）、 &lt;code&gt;)&lt;/code&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; 、 &lt;code&gt;&amp;gt;&lt;/code&gt; 、 &lt;code&gt;@&lt;/code&gt; 、 &lt;code&gt;,&lt;/code&gt; 、 &lt;code&gt;;&lt;/code&gt; 、 &lt;code&gt;:&lt;/code&gt; 、 &lt;code&gt;\&lt;/code&gt; 、 &lt;code&gt;&quot;&lt;/code&gt; 、 &lt;code&gt;/&lt;/code&gt; 、 &lt;code&gt;[&lt;/code&gt; 、 &lt;code&gt;]&lt;/code&gt; 、 &lt;code&gt;?&lt;/code&gt; 、 &lt;code&gt;=&lt;/code&gt; 、 &lt;code&gt;{&lt;/code&gt; 、 &lt;code&gt;}&lt;/code&gt; 。 &lt;code&gt;(&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e55a2137201c11958a24e65a5ebb25a273f551ec" translate="yes" xml:space="preserve">
          <source>The allowed characters in a cookie value are the visible ASCII characters, U+0021 (&lt;code&gt;!&lt;/code&gt;) through U+007E (&lt;code&gt;~&lt;/code&gt;) except the characters: &lt;code&gt;&quot;&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;;&lt;/code&gt; and &lt;code&gt;\&lt;/code&gt;. Cookie values may be wrapped in a single pair of double quotes (U+0022, &lt;code&gt;&quot;&lt;/code&gt;).</source>
          <target state="translated">クッキーの値で許可された文字が見えるASCII文字で、U + 0021（ &lt;code&gt;!&lt;/code&gt; U + 007E（経由） &lt;code&gt;~&lt;/code&gt; 文字を除く）： &lt;code&gt;&quot;&lt;/code&gt; 、 &lt;code&gt;,&lt;/code&gt; 、 &lt;code&gt;;&lt;/code&gt; および &lt;code&gt;\&lt;/code&gt; Cookieの値は、二重引用符の単一のペアに包まれていてもよいです。 （U + 0022、 &lt;code&gt;&quot;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="6d80e899b266fe3f2b02797315b841c8a89646f5" translate="yes" xml:space="preserve">
          <source>The allowed range is from &lt;code&gt;minValue&lt;/code&gt; to &lt;code&gt;maxValue&lt;/code&gt;, inclusive. If &lt;code&gt;minValue&lt;/code&gt; or &lt;code&gt;maxValue&lt;/code&gt; are &lt;code&gt;null&lt;/code&gt;, the range is infinite in that direction.</source>
          <target state="translated">許容範囲は &lt;code&gt;minValue&lt;/code&gt; から &lt;code&gt;maxValue&lt;/code&gt; までです。 &lt;code&gt;minValue&lt;/code&gt; または &lt;code&gt;maxValue&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、その方向の範囲は無限です。</target>
        </trans-unit>
        <trans-unit id="11002434031f55e11813b50d6f5839864a8e2d57" translate="yes" xml:space="preserve">
          <source>The amount that is expected to scroll horizontally, in units determined by &lt;a href=&quot;deltamode&quot;&gt;deltaMode&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;deltamode&quot;&gt;deltaMode&lt;/a&gt;によって決定される単位で、水平方向にスクロールすると予想される量。</target>
        </trans-unit>
        <trans-unit id="a71438f32cc039da5e1de7032b6a86f06e748357" translate="yes" xml:space="preserve">
          <source>The amount that is expected to scroll horizontally, in units determined by &lt;a href=&quot;wheelevent/deltamode&quot;&gt;deltaMode&lt;/a&gt;. &lt;a href=&quot;wheelevent/deltax&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;wheelevent/deltamode&quot;&gt;deltaMode&lt;/a&gt;によって決定される単位で、水平方向にスクロールすると予想される量。&lt;a href=&quot;wheelevent/deltax&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2b81fd3535d4e801e8c0c2065621e3148db92354" translate="yes" xml:space="preserve">
          <source>The amount that is expected to scroll vertically, in units determined by &lt;a href=&quot;deltamode&quot;&gt;deltaMode&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;deltamode&quot;&gt;deltaMode&lt;/a&gt;によって決定される単位で、垂直方向にスクロールすると予想される量。</target>
        </trans-unit>
        <trans-unit id="a9842807148f7a885e5622709c057b838f230c0b" translate="yes" xml:space="preserve">
          <source>The amount that is expected to scroll vertically, in units determined by &lt;a href=&quot;wheelevent/deltamode&quot;&gt;deltaMode&lt;/a&gt;. &lt;a href=&quot;wheelevent/deltay&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;wheelevent/deltamode&quot;&gt;deltaMode&lt;/a&gt;によって決定される単位で、垂直方向にスクロールすると予想される量。&lt;a href=&quot;wheelevent/deltay&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="185c64c72b71f23f05644b90a211b105755715b1" translate="yes" xml:space="preserve">
          <source>The annotation &lt;a href=&quot;deprecated-constant&quot;&gt;deprecated&lt;/a&gt; is a shorthand for deprecating until an unspecified &quot;next release&quot; without migration instructions.</source>
          <target state="translated">&lt;a href=&quot;deprecated-constant&quot;&gt;非推奨&lt;/a&gt;のアノテーションは、移行の指示がない、未指定の「次のリリース」まで非推奨にするための省略形です。</target>
        </trans-unit>
        <trans-unit id="da2da33634fe7b246e5bfd4b9bbb512bd684848a" translate="yes" xml:space="preserve">
          <source>The annotation &lt;code&gt;@Deprecated('migration')&lt;/code&gt; marks a feature as deprecated.</source>
          <target state="translated">アノテーション &lt;code&gt;@Deprecated('migration')&lt;/code&gt; は、機能を非推奨としてマークします。</target>
        </trans-unit>
        <trans-unit id="b7db2e6b8a22e4d4989adfed2ac83ecde2003dcb" translate="yes" xml:space="preserve">
          <source>The annotation &lt;code&gt;@Deprecated('migration')&lt;/code&gt; marks a feature as deprecated. &lt;a href=&quot;deprecated-class&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">アノテーション &lt;code&gt;@Deprecated('migration')&lt;/code&gt; は、機能を非推奨としてマークします。&lt;a href=&quot;deprecated-class&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ecff042753fc2466211be07e91b706e64e8fa469" translate="yes" xml:space="preserve">
          <source>The annotation &lt;code&gt;@override&lt;/code&gt; marks an instance member as overriding a superclass member with the same name.</source>
          <target state="translated">アノテーション &lt;code&gt;@override&lt;/code&gt; は、インスタンスメンバーを同じ名前のスーパークラスメンバーをオーバーライドするものとしてマークします。</target>
        </trans-unit>
        <trans-unit id="4ae95a559fcd1174fca857eb241e7a4f3a785b94" translate="yes" xml:space="preserve">
          <source>The annotation &lt;code&gt;@override&lt;/code&gt; marks an instance member as overriding a superclass member with the same name. &lt;a href=&quot;override-constant&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">アノテーション &lt;code&gt;@override&lt;/code&gt; は、インスタンスメンバーを同じ名前のスーパークラスメンバーをオーバーライドするものとしてマークします。&lt;a href=&quot;override-constant&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c2c23999f665848c206494fc4efaecac2133fde4" translate="yes" xml:space="preserve">
          <source>The annotation &lt;code&gt;@proxy&lt;/code&gt; marks a class as implementing members dynamically through &lt;code&gt;noSuchMethod&lt;/code&gt;.</source>
          <target state="translated">注釈 &lt;code&gt;@proxy&lt;/code&gt; を通じて動的にメンバーを実装するとしてマーククラス &lt;code&gt;noSuchMethod&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d909db89e96df00a7a3b90332a56caa376200977" translate="yes" xml:space="preserve">
          <source>The annotation applies to any class. It is inherited by subclasses from both superclass and interfaces.</source>
          <target state="translated">アノテーションは、任意のクラスに適用されます。スーパークラスとインターフェイスの両方からサブクラスに継承されます。</target>
        </trans-unit>
        <trans-unit id="2853d8149bf250b5f95b3da3b68f275a14d2425c" translate="yes" xml:space="preserve">
          <source>The annotation applies to instance methods, getters and setters, and to instance fields, where it means that the implicit getter and setter of the field is marked as overriding, but the field itself is not.</source>
          <target state="translated">このアノテーションは、インスタンスメソッド、ゲッターとセッター、インスタンスフィールドに適用され、フィールドの暗黙のゲッターとセッターがオーバーライドとしてマークされているが、フィールド自体はオーバーライドされていないことを意味します。</target>
        </trans-unit>
        <trans-unit id="461538ba24029019ec770c38b925ad4ae8804a48" translate="yes" xml:space="preserve">
          <source>The annotation does not change which classes the annotated class implements, and does not prevent static warnings for assigning an object to a variable with a static type not implemented by the object.</source>
          <target state="translated">アノテーションは、アノテーションされたクラスがどのクラスを実装しているかを変更するものではなく、オブジェクトが実装していない静的型を持つ変数にオブジェクトを代入することによる静的警告を防ぐものではありません。</target>
        </trans-unit>
        <trans-unit id="226e50000bc454ee03b3e8e15e17bdfc9d6d6106" translate="yes" xml:space="preserve">
          <source>The application cache for this window.</source>
          <target state="translated">このウィンドウのアプリケーションキャッシュ。</target>
        </trans-unit>
        <trans-unit id="5623708609fa5d08c236605b10e4efe2e71c176b" translate="yes" xml:space="preserve">
          <source>The application cache for this window. &lt;a href=&quot;window/applicationcache&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このウィンドウのアプリケーションキャッシュ。&lt;a href=&quot;window/applicationcache&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="76e6f9e557d3eaaf7934dfdf11431747d40c2770" translate="yes" xml:space="preserve">
          <source>The argument &lt;code&gt;entryPoint&lt;/code&gt; specifies the initial function to call in the spawned isolate. The entry-point function is invoked in the new isolate with &lt;code&gt;message&lt;/code&gt; as the only argument.</source>
          <target state="translated">引数 &lt;code&gt;entryPoint&lt;/code&gt; は、生成された分離内で呼び出す初期関数を指定します。エントリー・ポイント関数は、 &lt;code&gt;message&lt;/code&gt; を唯一の引数として使用して、新しい分離で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="3c234f2531b784f5a3385c392737020a5f35e3aa" translate="yes" xml:space="preserve">
          <source>The argument &lt;code&gt;sink&lt;/code&gt; will receive byte lists in sizes depending on the &lt;code&gt;bufferSize&lt;/code&gt; passed to the constructor when creating this encoder.</source>
          <target state="translated">引数 &lt;code&gt;sink&lt;/code&gt; は、このエンコーダーの作成時にコンストラクターに渡された &lt;code&gt;bufferSize&lt;/code&gt; に応じたサイズのバイトリストを受け取ります。</target>
        </trans-unit>
        <trans-unit id="c074eaeb169d369e3a2825412a25cdb26c1406e9" translate="yes" xml:space="preserve">
          <source>The argument &lt;code&gt;sourceAddress&lt;/code&gt; can be used to specify the local address to bind when making the connection. &lt;code&gt;sourceAddress&lt;/code&gt; can either be a &lt;code&gt;String&lt;/code&gt; or an &lt;code&gt;InternetAddress&lt;/code&gt;. If a &lt;code&gt;String&lt;/code&gt; is passed it must hold a numeric IP address.</source>
          <target state="translated">引数 &lt;code&gt;sourceAddress&lt;/code&gt; を使用して、接続を確立するときにバインドするローカルアドレスを指定できます。 &lt;code&gt;sourceAddress&lt;/code&gt; は、 &lt;code&gt;String&lt;/code&gt; または &lt;code&gt;InternetAddress&lt;/code&gt; のいずれかです。 &lt;code&gt;String&lt;/code&gt; が渡された場合、数値のIPアドレスを保持する必要があります。</target>
        </trans-unit>
        <trans-unit id="2b3c213d8ae926da2f1990d9c6ef079878c32730" translate="yes" xml:space="preserve">
          <source>The argument &lt;code&gt;timeout&lt;/code&gt; is used to specify the maximum allowed time to wait for a connection to be established. If &lt;code&gt;timeout&lt;/code&gt; is longer than the system level timeout duration, a timeout may occur sooner than specified in &lt;code&gt;timeout&lt;/code&gt;. On timeout, a &lt;a href=&quot;../socketexception-class&quot;&gt;SocketException&lt;/a&gt; is thrown and all ongoing connection attempts to &lt;code&gt;host&lt;/code&gt; are cancelled.</source>
          <target state="translated">引数 &lt;code&gt;timeout&lt;/code&gt; は、接続が確立されるのを待つ最大許容時間を指定するために使用されます。場合 &lt;code&gt;timeout&lt;/code&gt; 長いシステム・レベルのタイムアウト時間よりも、タイムアウトで指定されたよりも早く発生することが &lt;code&gt;timeout&lt;/code&gt; 。タイムアウトになると、&lt;a href=&quot;../socketexception-class&quot;&gt;SocketException&lt;/a&gt;がスローされ、 &lt;code&gt;host&lt;/code&gt; への進行中のすべての接続試行がキャンセルされます。</target>
        </trans-unit>
        <trans-unit id="7b651dc52d1def1089e449d437c16e4299545c95" translate="yes" xml:space="preserve">
          <source>The argument must be a &lt;a href=&quot;../dart-core/map-class&quot;&gt;Map&lt;/a&gt; or &lt;a href=&quot;../dart-core/iterable-class&quot;&gt;Iterable&lt;/a&gt;, the contents of which are also deeply converted. Maps are converted into JavaScript objects. Iterables are converted into arrays. Strings, numbers, bools, and &lt;code&gt;@JS()&lt;/code&gt; annotated objects are passed through unmodified. Dart objects are also passed through unmodified, but their members aren't usable from JavaScript.</source>
          <target state="translated">引数は&lt;a href=&quot;../dart-core/map-class&quot;&gt;Map&lt;/a&gt;または&lt;a href=&quot;../dart-core/iterable-class&quot;&gt;Iterable&lt;/a&gt;である必要があり、その内容も深く変換されます。マップはJavaScriptオブジェクトに変換されます。反復可能オブジェクトは配列に変換されます。文字列、数値、bool、および &lt;code&gt;@JS()&lt;/code&gt; アノテーションが付けられたオブジェクトは、変更されずに渡されます。Dartオブジェクトも変更されずに渡されますが、そのメンバーはJavaScriptから使用できません。</target>
        </trans-unit>
        <trans-unit id="92001e413ba8ed92a32d9cd578e44f28cd4f921d" translate="yes" xml:space="preserve">
          <source>The arguments &lt;code&gt;lowerLimit&lt;/code&gt; and &lt;code&gt;upperLimit&lt;/code&gt; must form a valid range where &lt;code&gt;lowerLimit.compareTo(upperLimit) &amp;lt;= 0&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;lowerLimit&lt;/code&gt; および &lt;code&gt;upperLimit&lt;/code&gt; は、 &lt;code&gt;lowerLimit.compareTo(upperLimit) &amp;lt;= 0&lt;/code&gt; である有効な範囲を形成する必要があります。</target>
        </trans-unit>
        <trans-unit id="ee981589578636a13111cee9f2ca934724b3f4db" translate="yes" xml:space="preserve">
          <source>The arguments are the same as for &lt;code&gt;Process.run&lt;/code&gt;.</source>
          <target state="translated">引数は &lt;code&gt;Process.run&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="fafb979853e5deb596b59d7e0643be24638d8ac7" translate="yes" xml:space="preserve">
          <source>The attributeName parameter will always be in lowercase.</source>
          <target state="translated">attributeName パラメータは常に小文字になります。</target>
        </trans-unit>
        <trans-unit id="18c3507f33a661a66f4317911ce204db3f610323" translate="yes" xml:space="preserve">
          <source>The authority is formatted from the &lt;a href=&quot;userinfo&quot;&gt;userInfo&lt;/a&gt;, &lt;a href=&quot;host&quot;&gt;host&lt;/a&gt; and &lt;a href=&quot;port&quot;&gt;port&lt;/a&gt; parts.</source>
          <target state="translated">権限は&lt;a href=&quot;userinfo&quot;&gt;userInfo&lt;/a&gt;、&lt;a href=&quot;host&quot;&gt;host&lt;/a&gt;、および&lt;a href=&quot;port&quot;&gt;portの&lt;/a&gt;部分からフォーマットされます。</target>
        </trans-unit>
        <trans-unit id="eeea19dc1c368a0f54fdb8df2ea1172882e5589b" translate="yes" xml:space="preserve">
          <source>The base class for all Dart objects.</source>
          <target state="translated">すべての Dart オブジェクトの基底クラスです。</target>
        </trans-unit>
        <trans-unit id="1064c05c5eefa87b47491d73fe87dc1865123b1f" translate="yes" xml:space="preserve">
          <source>The base class for all Dart objects. &lt;a href=&quot;object-class&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">すべてのDartオブジェクトの基本クラス。&lt;a href=&quot;object-class&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="87b9b12767b0e28078f837dde6919033344f54f1" translate="yes" xml:space="preserve">
          <source>The base class for all documents.</source>
          <target state="translated">すべてのドキュメントの基底クラス。</target>
        </trans-unit>
        <trans-unit id="7dc6fbc2e7458581448e5b8f82d3706f3e6c91ad" translate="yes" xml:space="preserve">
          <source>The base class for all documents. &lt;a href=&quot;document-class&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">すべてのドキュメントの基本クラス。&lt;a href=&quot;document-class&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d0a7f982c8247a1e0e9f8373705957de3b9548a7" translate="yes" xml:space="preserve">
          <source>The base class for all function types.</source>
          <target state="translated">すべての関数型の基底クラスです。</target>
        </trans-unit>
        <trans-unit id="da407361cffad59aab2fa9f8ec849295bc244c73" translate="yes" xml:space="preserve">
          <source>The base class for all function types. &lt;a href=&quot;function-class&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">すべての関数タイプの基本クラス。&lt;a href=&quot;function-class&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2ab0d5e37c117b94ae8a62562fc246f421a7420b" translate="yes" xml:space="preserve">
          <source>The basic &lt;code&gt;ChunkedConversionSink&lt;/code&gt; is just a &lt;a href=&quot;../dart-core/sink-class&quot;&gt;Sink&lt;/a&gt;, and converters should work with a plain &lt;code&gt;Sink&lt;/code&gt;, but may work more efficiently with certain specialized types of &lt;code&gt;ChunkedConversionSink&lt;/code&gt;.</source>
          <target state="translated">基本的な &lt;code&gt;ChunkedConversionSink&lt;/code&gt; は単なる&lt;a href=&quot;../dart-core/sink-class&quot;&gt;シンク&lt;/a&gt;であり、コンバーターはプレーン &lt;code&gt;Sink&lt;/code&gt; で動作する必要がありますが、特定の特殊なタイプの &lt;code&gt;ChunkedConversionSink&lt;/code&gt; でより効率的に動作する可能性があります。</target>
        </trans-unit>
        <trans-unit id="d8135564dae04f4af7b6ac9c902f7898506859ba" translate="yes" xml:space="preserve">
          <source>The bit-wise and operator.</source>
          <target state="translated">ビットワイズと演算子。</target>
        </trans-unit>
        <trans-unit id="04ff7fcddebb203b5c715ecb3e60e77c3a6b4d00" translate="yes" xml:space="preserve">
          <source>The bit-wise negate operator.</source>
          <target state="translated">ビット単位の否定演算子です。</target>
        </trans-unit>
        <trans-unit id="d3b703d5f7c5c41e3adf4817a96354986523bd22" translate="yes" xml:space="preserve">
          <source>The bit-wise negate operator. &lt;a href=&quot;bigint/operator_bitwise_negate&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">ビット単位の否定演算子。&lt;a href=&quot;bigint/operator_bitwise_negate&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="548ff0dc82357b8916ca321041f30768f163db13" translate="yes" xml:space="preserve">
          <source>The bit-wise negate operator. &lt;a href=&quot;int/operator_bitwise_negate&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">ビット単位の否定演算子。&lt;a href=&quot;int/operator_bitwise_negate&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4fbbc08cb7db2f3a3c7a7013df1ad47f6e33dcbd" translate="yes" xml:space="preserve">
          <source>The bit-wise or operator.</source>
          <target state="translated">ビットワイズか演算子。</target>
        </trans-unit>
        <trans-unit id="a77a7dcfc3e186d04f168c323eb60cd081ed0a4b" translate="yes" xml:space="preserve">
          <source>The bit-wise xor operator.</source>
          <target state="translated">ビット単位の xor 演算子。</target>
        </trans-unit>
        <trans-unit id="fed0daf9d394a72c9d81d5a21ab363820f015875" translate="yes" xml:space="preserve">
          <source>The body of a &lt;a href=&quot;httpclientresponse-class&quot;&gt;HttpClientResponse&lt;/a&gt; object is a &lt;a href=&quot;../dart-async/stream-class&quot;&gt;Stream&lt;/a&gt; of data from the server. Listen to the body to handle the data and be notified when the entire body is received.</source>
          <target state="translated">&lt;a href=&quot;httpclientresponse-class&quot;&gt;HttpClientResponse&lt;/a&gt;オブジェクトの本体は、サーバーからのデータの&lt;a href=&quot;../dart-async/stream-class&quot;&gt;ストリーム&lt;/a&gt;です。ボディを聞いてデータを処理し、ボディ全体が受信されたときに通知を受けます。</target>
        </trans-unit>
        <trans-unit id="acd5a08159084acf6d240f1badfdb9688e2bf172" translate="yes" xml:space="preserve">
          <source>The body of an HTTP response can be compressed. In most situations providing the un-compressed body is most convenient. Therefore the default behavior is to un-compress the body. However in some situations (e.g. implementing a transparent proxy) keeping the uncompressed stream is required.</source>
          <target state="translated">HTTP レスポンスのボディは圧縮することができます。ほとんどの状況では、圧縮されていないボディを提供することが最も便利です。そのため、デフォルトの動作はボディの圧縮を解除することです。しかし、状況によっては (透過的なプロキシの実装など)圧縮されていないストリームを保持する必要があります。</target>
        </trans-unit>
        <trans-unit id="652b29f56b02f5d8e658cb66b37d742a62f9b299" translate="yes" xml:space="preserve">
          <source>The body of the HTTP response contains compressed bytes.</source>
          <target state="translated">HTTP レスポンスのボディには圧縮されたバイトが含まれています。</target>
        </trans-unit>
        <trans-unit id="363019aa502d81960225dee7fe067d0df9bd369f" translate="yes" xml:space="preserve">
          <source>The body of the HTTP response was originally compressed, but by virtue of the &lt;a href=&quot;httpclient/autouncompress&quot;&gt;HttpClient.autoUncompress&lt;/a&gt; configuration option, it has been automatically uncompressed.</source>
          <target state="translated">HTTP応答の本体は元々圧縮されていましたが、&lt;a href=&quot;httpclient/autouncompress&quot;&gt;HttpClient.autoUncompress&lt;/a&gt;構成オプションにより、自動的に圧縮解除されました。</target>
        </trans-unit>
        <trans-unit id="c452402fae7f2a80c451c580fe9d65bd6921177c" translate="yes" xml:space="preserve">
          <source>The body of the HTTP response was received and remains in an uncompressed state.</source>
          <target state="translated">HTTP レスポンスのボディを受信しましたが、圧縮されていない状態のままです。</target>
        </trans-unit>
        <trans-unit id="2957fdca2eb1a8fd4228ff35debc217b373d295e" translate="yes" xml:space="preserve">
          <source>The boolean value of the declaration is &lt;code&gt;true&lt;/code&gt; if the declared value is the string &lt;code&gt;&quot;true&quot;&lt;/code&gt;, and &lt;code&gt;false&lt;/code&gt; if the value is &lt;code&gt;&quot;false&quot;&lt;/code&gt;.</source>
          <target state="translated">宣言のブール値は &lt;code&gt;true&lt;/code&gt; 宣言された値が文字列であれば &lt;code&gt;&quot;true&quot;&lt;/code&gt; 、および &lt;code&gt;false&lt;/code&gt; 値であれば &lt;code&gt;&quot;false&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="205a7f97e824111ee72603123037f11044fd0f07" translate="yes" xml:space="preserve">
          <source>The call to &lt;code&gt;cleanUp&lt;/code&gt; should not throw. If it does, the error will be an uncaught asynchronous error.</source>
          <target state="translated">&lt;code&gt;cleanUp&lt;/code&gt; の呼び出しはスローされません。存在する場合、エラーはキャッチされない非同期エラーになります。</target>
        </trans-unit>
        <trans-unit id="6f0f42aa1c58b86bc7100f93e793439b14718047" translate="yes" xml:space="preserve">
          <source>The callback may return either &lt;code&gt;void&lt;/code&gt; or a future.</source>
          <target state="translated">コールバックは、 &lt;code&gt;void&lt;/code&gt; またはfutureを返します。</target>
        </trans-unit>
        <trans-unit id="6477dc292af7528109e0575b0c34c65ffd4e8c75" translate="yes" xml:space="preserve">
          <source>The callback which is called when the stream is canceled.</source>
          <target state="translated">ストリームがキャンセルされたときに呼び出されるコールバック。</target>
        </trans-unit>
        <trans-unit id="820c1b2e5a1c2c74f80eca66d7ee9b2a1965c907" translate="yes" xml:space="preserve">
          <source>The callback which is called when the stream is canceled. &lt;a href=&quot;streamcontroller/oncancel&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">ストリームがキャンセルされたときに呼び出されるコールバック。&lt;a href=&quot;streamcontroller/oncancel&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3907ddb41608810f7143091bd845752fc84cbe9d" translate="yes" xml:space="preserve">
          <source>The callback which is called when the stream is listened to.</source>
          <target state="translated">ストリームを聞いたときに呼び出されるコールバック。</target>
        </trans-unit>
        <trans-unit id="d2167542b8d6b7b32ea56513447e85ebce18ed33" translate="yes" xml:space="preserve">
          <source>The callback which is called when the stream is listened to. &lt;a href=&quot;streamcontroller/onlisten&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">ストリームがリッスンされるときに呼び出されるコールバック。&lt;a href=&quot;streamcontroller/onlisten&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3845d80b0e25af2effe47004ce4c47171ec4ef98" translate="yes" xml:space="preserve">
          <source>The callback which is called when the stream is paused.</source>
          <target state="translated">ストリームが一時停止されたときに呼び出されるコールバック。</target>
        </trans-unit>
        <trans-unit id="361138b38610c763ee1118f6cc64e833dc19c9b4" translate="yes" xml:space="preserve">
          <source>The callback which is called when the stream is paused. &lt;a href=&quot;streamcontroller/onpause&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">ストリームが一時停止したときに呼び出されるコールバック。&lt;a href=&quot;streamcontroller/onpause&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6132e61a03273fbe60a81b16df18f68f3e6b254c" translate="yes" xml:space="preserve">
          <source>The callback which is called when the stream is resumed.</source>
          <target state="translated">ストリームが再開されたときに呼び出されるコールバック。</target>
        </trans-unit>
        <trans-unit id="b3f717c0d35459f5a51636692f9052274c7f91b9" translate="yes" xml:space="preserve">
          <source>The callback which is called when the stream is resumed. &lt;a href=&quot;streamcontroller/onresume&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">ストリームが再開されたときに呼び出されるコールバック。&lt;a href=&quot;streamcontroller/onresume&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="30d46d01d80d199b450c6c9b2d37e68b84aee172" translate="yes" xml:space="preserve">
          <source>The calling conventions in Dart2Js differ from JavaScript and so, by default, it is not possible to call a Dart function directly. Wrapping with &lt;code&gt;allowInterop&lt;/code&gt; creates a function that can be called from JavaScript or Dart. The semantics of the wrapped function are still more strict than JavaScript, and the function will throw if called with too many or too few arguments.</source>
          <target state="translated">Dart2Jの呼び出し規約はJavaScriptとは異なるため、デフォルトでは、Dart関数を直接呼び出すことはできません。 &lt;code&gt;allowInterop&lt;/code&gt; でラップすると、JavaScriptまたはDartから呼び出すことができる関数が作成されます。ラップされた関数のセマンティクスはJavaScriptよりもさらに厳密であり、引数が多すぎたり少なすぎたりして呼び出された場合、関数はスローされます。</target>
        </trans-unit>
        <trans-unit id="ac80fbfa9f1dd3b0570f4ef52da534459af9693f" translate="yes" xml:space="preserve">
          <source>The capabilities should be the subset of the capabilities that are available to the original isolate. Capabilities of an isolate are locked to that isolate, and have no effect anywhere else, so the capabilities should come from the same isolate as the control port.</source>
          <target state="translated">能力は、元のアイソレートで利用可能な能力のサブセットでなければなりません。アイソレートの能力はそのアイソレートにロックされ、他のどこにも影響を与えないので、能力はコントロールポートと同じアイソレートから来るべきです。</target>
        </trans-unit>
        <trans-unit id="5bba76c8051641925aaedd8dec0302e127d793c7" translate="yes" xml:space="preserve">
          <source>The certificate provided by the server is checked using the trusted certificates set in the SecurityContext object If a certificate and key are set on the client, using &lt;a href=&quot;../securitycontext/usecertificatechain&quot;&gt;SecurityContext.useCertificateChain&lt;/a&gt; and &lt;a href=&quot;../securitycontext/useprivatekey&quot;&gt;SecurityContext.usePrivateKey&lt;/a&gt;, and the server asks for a client certificate, then that client certificate is sent to the server.</source>
          <target state="translated">サーバーによって提供される証明書は、SecurityContextオブジェクトに設定された信頼できる証明書を使用してチェックされます。証明書とキーが&lt;a href=&quot;../securitycontext/usecertificatechain&quot;&gt;SecurityContext.useCertificateChain&lt;/a&gt;と&lt;a href=&quot;../securitycontext/useprivatekey&quot;&gt;SecurityContext.usePrivateKey&lt;/a&gt;を使用してクライアントに設定され、サーバーがクライアント証明書を要求すると、そのクライアント証明書サーバーに送信されます。</target>
        </trans-unit>
        <trans-unit id="d99c6f4a2b38200d43ebfa43396f0a0eaf3a64af" translate="yes" xml:space="preserve">
          <source>The certificate provided by the server is checked using the trusted certificates set in the SecurityContext object. The default SecurityContext object contains a built-in set of trusted root certificates for well-known certificate authorities.</source>
          <target state="translated">サーバが提供する証明書は、SecurityContext オブジェクトに設定された信頼できる証明書を使用してチェックされます。既定の SecurityContext オブジェクトには、有名な証明書局の信頼できるルート証明書のビルトインセットが含まれています。</target>
        </trans-unit>
        <trans-unit id="551c8518a741d80012de66292f1d29903a115794" translate="yes" xml:space="preserve">
          <source>The certificates and keys are PEM files, which can be created and managed with the tools in OpenSSL.</source>
          <target state="translated">証明書と鍵はPEMファイルで、OpenSSLのツールで作成・管理することができます。</target>
        </trans-unit>
        <trans-unit id="9f1d981bb7ad41f8ca083cd688e02699ef4f37ac" translate="yes" xml:space="preserve">
          <source>The characters of a string are encoded in UTF-16. Decoding UTF-16, which combines surrogate pairs, yields Unicode code points. Following a similar terminology to Go, we use the name 'rune' for an integer representing a Unicode code point. Use the &lt;a href=&quot;string/runes&quot;&gt;runes&lt;/a&gt; property to get the runes of a string:</source>
          <target state="translated">文字列の文字はUTF-16でエンコードされます。サロゲートペアを組み合わせたUTF-16をデコードすると、Unicodeコードポイントが生成されます。Goと同様の用語に従って、Unicodeコードポイントを表す整数に「rune」という名前を使用します。文字列のルーン文字を取得するには、&lt;a href=&quot;string/runes&quot;&gt;runes&lt;/a&gt;プロパティを使用します。</target>
        </trans-unit>
        <trans-unit id="89f9924dbb90dfaf93993e50cdcd99f9b7edc47b" translate="yes" xml:space="preserve">
          <source>The characters that have special meaning in regular expressions are: &lt;code&gt;(&lt;/code&gt;, &lt;code&gt;)&lt;/code&gt;, &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;]&lt;/code&gt;, &lt;code&gt;{&lt;/code&gt;, &lt;code&gt;}&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;^&lt;/code&gt;, &lt;code&gt;$&lt;/code&gt;, &lt;code&gt;|&lt;/code&gt; and &lt;code&gt;\&lt;/code&gt;.</source>
          <target state="translated">正規表現で特別な意味を持つ文字は次のとおりですか。 &lt;code&gt;(&lt;/code&gt; 、 &lt;code&gt;)&lt;/code&gt; 、 &lt;code&gt;[&lt;/code&gt; 、 &lt;code&gt;]&lt;/code&gt; 、 &lt;code&gt;{&lt;/code&gt; 、 &lt;code&gt;}&lt;/code&gt; 、 &lt;code&gt;*&lt;/code&gt; 、 &lt;code&gt;+&lt;/code&gt; 、 &lt;code&gt;?&lt;/code&gt; 、 &lt;code&gt;.&lt;/code&gt; 、 &lt;code&gt;^&lt;/code&gt; 、 &lt;code&gt;$&lt;/code&gt; 、 &lt;code&gt;|&lt;/code&gt; と &lt;code&gt;\&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3341150cabb344b8ef01597e10b0acf982a848eb" translate="yes" xml:space="preserve">
          <source>The characters that need escaping in HTML are:</source>
          <target state="translated">HTMLでエスケープが必要な文字は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="34d59e3fe3a7f3c46504a737b42d516bc69b9369" translate="yes" xml:space="preserve">
          <source>The charset parameter of the media type.</source>
          <target state="translated">メディアタイプのcharsetパラメータ。</target>
        </trans-unit>
        <trans-unit id="0a54a2bfe4b614054dee7684e751bb6c04cf5a70" translate="yes" xml:space="preserve">
          <source>The charset parameter of the media type. &lt;a href=&quot;uridata/charset&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">メディアタイプの文字セットパラメータ。&lt;a href=&quot;uridata/charset&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a309c623e4fc88cae1349b278270621caba6d1a" translate="yes" xml:space="preserve">
          <source>The class being registered must either subclass HtmlElement or SvgElement. If they subclass these directly then they can be used as:</source>
          <target state="translated">登録されているクラスは、HtmlElementかSvgElementをサブクラス化しなければなりません。これらを直接サブクラス化している場合は、それらを</target>
        </trans-unit>
        <trans-unit id="e9fd119eae7817305b859b3c40a51ec1b2544dd5" translate="yes" xml:space="preserve">
          <source>The classes &lt;a href=&quot;httpserver-class&quot;&gt;HttpServer&lt;/a&gt; and &lt;a href=&quot;httpclient-class&quot;&gt;HttpClient&lt;/a&gt; provide HTTP server and HTTP client functionality.</source>
          <target state="translated">クラス&lt;a href=&quot;httpserver-class&quot;&gt;HttpServer&lt;/a&gt;と&lt;a href=&quot;httpclient-class&quot;&gt;HttpClientは&lt;/a&gt;、HTTPサーバーとHTTPクライアントの機能を提供します。</target>
        </trans-unit>
        <trans-unit id="9f2769b87515be4ef1c98f3680289ec1387b1402" translate="yes" xml:space="preserve">
          <source>The classes in this library provide an interface to the browser's IndexedDB, if it has one. To use this library in your code:</source>
          <target state="translated">このライブラリのクラスは、ブラウザの IndexedDB へのインターフェイスを提供します。このライブラリをコードで使用するには</target>
        </trans-unit>
        <trans-unit id="13ebcb91f6f503cc7cf10f50bf96d8988b5dfd57" translate="yes" xml:space="preserve">
          <source>The client certificate of the client making the request.</source>
          <target state="translated">リクエストを行ったクライアントのクライアント証明書。</target>
        </trans-unit>
        <trans-unit id="1410c06bf7d8feec770969f83c6b4b6ff6d98fef" translate="yes" xml:space="preserve">
          <source>The client certificate of the client making the request. &lt;a href=&quot;httprequest/certificate&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">リクエストを行っているクライアントのクライアント証明書。&lt;a href=&quot;httprequest/certificate&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="047a2b7de113599077bb875024bca25d1c95da20" translate="yes" xml:space="preserve">
          <source>The client connects to the WebSocket using the &lt;code&gt;connect()&lt;/code&gt; method and a URI that uses the Web Socket protocol. The client can write to the WebSocket with the &lt;code&gt;add()&lt;/code&gt; method. For example,</source>
          <target state="translated">クライアントは、 &lt;code&gt;connect()&lt;/code&gt; メソッドとWebソケットプロトコルを使用するURIを使用してWebSocketに接続します。クライアントは、 &lt;code&gt;add()&lt;/code&gt; メソッドを使用してWebSocketに書き込むことができます。例えば、</target>
        </trans-unit>
        <trans-unit id="c29bbbc5c70b62c9d6b06074c83484e399b40a08" translate="yes" xml:space="preserve">
          <source>The client request headers can be modified until the client request body is written to or closed. After that they become immutable.</source>
          <target state="translated">クライアントリクエストヘッダは、クライアントリクエストボディが書き込まれるかクローズされるまで変更することができます。その後は不変となります。</target>
        </trans-unit>
        <trans-unit id="5146b0505198e8e6d04b2017a4ae0dc1bb7456e3" translate="yes" xml:space="preserve">
          <source>The client response headers are immutable.</source>
          <target state="translated">クライアント応答ヘッダは不変です。</target>
        </trans-unit>
        <trans-unit id="995ce22e777d317a297fa33a92208e1454208b31" translate="yes" xml:space="preserve">
          <source>The close code set when the WebSocket connection is closed. If there is no close code available this property will be &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">WebSocket接続が閉じられるときに設定される終了コード。利用可能な終了コードがない場合、このプロパティは &lt;code&gt;null&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="ad60a9fda569b537147e14771534e277a7fb025f" translate="yes" xml:space="preserve">
          <source>The close reason set when the WebSocket connection is closed. If there is no close reason available this property will be &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">WebSocket接続が閉じられるときに設定される終了理由。利用できる近い理由がない場合、このプロパティは &lt;code&gt;null&lt;/code&gt; になります</target>
        </trans-unit>
        <trans-unit id="3a266585b7c55ef456c8f4bdaac0bb27b9654659" translate="yes" xml:space="preserve">
          <source>The comment text as written in the source text.</source>
          <target state="translated">原文に書かれている通りのコメント文。</target>
        </trans-unit>
        <trans-unit id="f7f39fa08e02de384a10a89e3e661d6e3eb881fa" translate="yes" xml:space="preserve">
          <source>The comment text without the start, end, and padding text.</source>
          <target state="translated">開始、終了、パディングテキストを含まないコメントテキスト。</target>
        </trans-unit>
        <trans-unit id="90c1bde7274cd76fa8e095e3aa8d7519d16b39cf" translate="yes" xml:space="preserve">
          <source>The comment text without the start, end, and padding text. &lt;a href=&quot;comment/trimmedtext&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">開始、終了、およびパディングテキストのないコメントテキスト。&lt;a href=&quot;comment/trimmedtext&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5737024aee8056e5b8d67deb24ccc385382344ad" translate="yes" xml:space="preserve">
          <source>The common super class for &lt;a href=&quot;file-class&quot;&gt;File&lt;/a&gt;, &lt;a href=&quot;directory-class&quot;&gt;Directory&lt;/a&gt;, and &lt;a href=&quot;link-class&quot;&gt;Link&lt;/a&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;file-class&quot;&gt;File&lt;/a&gt;、&lt;a href=&quot;directory-class&quot;&gt;Directory&lt;/a&gt;、および&lt;a href=&quot;link-class&quot;&gt;Link&lt;/a&gt;オブジェクトの共通のスーパークラス。</target>
        </trans-unit>
        <trans-unit id="91fe99dd974cd3b7bd69f72957e45d4efcb03c66" translate="yes" xml:space="preserve">
          <source>The common super class for &lt;a href=&quot;file-class&quot;&gt;File&lt;/a&gt;, &lt;a href=&quot;directory-class&quot;&gt;Directory&lt;/a&gt;, and &lt;a href=&quot;link-class&quot;&gt;Link&lt;/a&gt; objects. &lt;a href=&quot;filesystementity-class&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;file-class&quot;&gt;File&lt;/a&gt;、&lt;a href=&quot;directory-class&quot;&gt;Directory&lt;/a&gt;、および&lt;a href=&quot;link-class&quot;&gt;Link&lt;/a&gt;オブジェクトの共通のスーパークラス。&lt;a href=&quot;filesystementity-class&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0c587a9e19814d4d1376a33d09a25cb58b023be9" translate="yes" xml:space="preserve">
          <source>The comparison is done using &lt;a href=&quot;compareto&quot;&gt;compareTo&lt;/a&gt; and therefore takes &lt;code&gt;-0.0&lt;/code&gt; into account. This also implies that &lt;a href=&quot;../double/nan-constant&quot;&gt;double.nan&lt;/a&gt; is treated as the maximal double value.</source>
          <target state="translated">比較は&lt;a href=&quot;compareto&quot;&gt;compareTo&lt;/a&gt;を使用して行われるため、 &lt;code&gt;-0.0&lt;/code&gt; が考慮されます。これは、&lt;a href=&quot;../double/nan-constant&quot;&gt;double.nan&lt;/a&gt;が最大のdouble値として扱われることも意味します。</target>
        </trans-unit>
        <trans-unit id="1a0d46749879f9d97cca737e32e27b7dc612276d" translate="yes" xml:space="preserve">
          <source>The comparison is independent of whether the time is in UTC or in the local time zone.</source>
          <target state="translated">この比較は、時間がUTCかローカルタイムゾーンかに関係なく行われます。</target>
        </trans-unit>
        <trans-unit id="7a6ff4e8917efe6d68bda2bdb9e5561e81ba3359" translate="yes" xml:space="preserve">
          <source>The completer completes the future asynchronously. That means that callbacks registered on the future are not called immediately when &lt;a href=&quot;complete&quot;&gt;complete&lt;/a&gt; or &lt;a href=&quot;completeerror&quot;&gt;completeError&lt;/a&gt; is called. Instead the callbacks are delayed until a later microtask.</source>
          <target state="translated">コンプリーターは未来を非同期的に完了します。つまり、&lt;a href=&quot;complete&quot;&gt;complete&lt;/a&gt;または&lt;a href=&quot;completeerror&quot;&gt;completeError&lt;/a&gt;が呼び出されても、将来登録されるコールバックはすぐには呼び出されません。代わりに、コールバックは後のマイクロタスクまで遅延されます。</target>
        </trans-unit>
        <trans-unit id="5509bbf392f366e0b30d556ee9bb48eeefd3887e" translate="yes" xml:space="preserve">
          <source>The component is first encoded to bytes using &lt;code&gt;encoding&lt;/code&gt;. The default is to use &lt;a href=&quot;../../dart-convert/utf8-constant&quot;&gt;utf8&lt;/a&gt; encoding, which preserves all the characters that don't need encoding.</source>
          <target state="translated">コンポーネントは、最初に &lt;code&gt;encoding&lt;/code&gt; を使用してバイトにエンコードされます。デフォルトでは&lt;a href=&quot;../../dart-convert/utf8-constant&quot;&gt;utf8&lt;/a&gt;エンコーディングが使用され、エンコーディングを必要としないすべての文字が保持されます。</target>
        </trans-unit>
        <trans-unit id="24472a6bbddad0ac6e38042f90f048448a1c0e3d" translate="yes" xml:space="preserve">
          <source>The compression state of the response.</source>
          <target state="translated">レスポンスの圧縮状態。</target>
        </trans-unit>
        <trans-unit id="0398caa2732ebe5cd9b20a471cdcd3961ab4265c" translate="yes" xml:space="preserve">
          <source>The compression state of the response. &lt;a href=&quot;httpclientresponse/compressionstate&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">応答の圧縮状態。&lt;a href=&quot;httpclientresponse/compressionstate&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ac2d77f5b5d7c57c2dc57ef145395f0184b959ae" translate="yes" xml:space="preserve">
          <source>The compression-&lt;a href=&quot;gzipcodec/level&quot;&gt;level&lt;/a&gt; can be set in the range of &lt;code&gt;-1..9&lt;/code&gt;, with &lt;code&gt;6&lt;/code&gt; being the default compression level. Levels above &lt;code&gt;6&lt;/code&gt; will have higher compression rates at the cost of more CPU and memory usage. Levels below &lt;code&gt;6&lt;/code&gt; will use less CPU and memory at the cost of lower compression rates.</source>
          <target state="translated">圧縮- &lt;a href=&quot;gzipcodec/level&quot;&gt;レベル&lt;/a&gt;の範囲内に設定することができる &lt;code&gt;-1..9&lt;/code&gt; で、 &lt;code&gt;6&lt;/code&gt; はデフォルト圧縮レベルです。 &lt;code&gt;6&lt;/code&gt; を超えるレベルでは、CPUとメモリの使用量が増えますが、圧縮率が高くなります。 &lt;code&gt;6&lt;/code&gt; 未満のレベルでは、CPUとメモリの使用量が少なくなりますが、圧縮率は低くなります。</target>
        </trans-unit>
        <trans-unit id="791c5ac04ed179effb6d07ea3b74fc593e0cff00" translate="yes" xml:space="preserve">
          <source>The compression-&lt;a href=&quot;level&quot;&gt;level&lt;/a&gt; can be set in the range of &lt;code&gt;-1..9&lt;/code&gt;, with &lt;code&gt;6&lt;/code&gt; being the default compression level. Levels above &lt;code&gt;6&lt;/code&gt; will have higher compression rates at the cost of more CPU and memory usage. Levels below &lt;code&gt;6&lt;/code&gt; will use less CPU and memory at the cost of lower compression rates.</source>
          <target state="translated">圧縮- &lt;a href=&quot;level&quot;&gt;レベル&lt;/a&gt;の範囲内に設定することができる &lt;code&gt;-1..9&lt;/code&gt; で、 &lt;code&gt;6&lt;/code&gt; はデフォルト圧縮レベルです。 &lt;code&gt;6&lt;/code&gt; を超えるレベルでは、CPUとメモリの使用量が増えますが、圧縮率が高くなります。 &lt;code&gt;6&lt;/code&gt; 未満のレベルでは、CPUとメモリの使用量が少なくなりますが、圧縮率は低くなります。</target>
        </trans-unit>
        <trans-unit id="659ac17c3ddd73e8417c139fb780ed458a3edee3" translate="yes" xml:space="preserve">
          <source>The compression-&lt;a href=&quot;zlibcodec/level&quot;&gt;level&lt;/a&gt; can be set in the range of &lt;code&gt;-1..9&lt;/code&gt;, with &lt;code&gt;6&lt;/code&gt; being the default compression level. Levels above &lt;code&gt;6&lt;/code&gt; will have higher compression rates at the cost of more CPU and memory usage. Levels below &lt;code&gt;6&lt;/code&gt; will use less CPU and memory at the cost of lower compression rates.</source>
          <target state="translated">圧縮- &lt;a href=&quot;zlibcodec/level&quot;&gt;レベル&lt;/a&gt;の範囲内に設定することができる &lt;code&gt;-1..9&lt;/code&gt; で、 &lt;code&gt;6&lt;/code&gt; はデフォルト圧縮レベルです。 &lt;code&gt;6&lt;/code&gt; を超えるレベルでは、CPUとメモリの使用量が増えますが、圧縮率が高くなります。 &lt;code&gt;6&lt;/code&gt; 未満のレベルでは、CPUとメモリの使用量が少なくなりますが、圧縮率は低くなります。</target>
        </trans-unit>
        <trans-unit id="fbbda938f5742ff116861d2213ca71f5e9d365b4" translate="yes" xml:space="preserve">
          <source>The compression-&lt;a href=&quot;zlibencoder/level&quot;&gt;level&lt;/a&gt; can be set in the range of &lt;code&gt;-1..9&lt;/code&gt;, with &lt;code&gt;6&lt;/code&gt; being the default compression level. Levels above &lt;code&gt;6&lt;/code&gt; will have higher compression rates at the cost of more CPU and memory usage. Levels below &lt;code&gt;6&lt;/code&gt; will use less CPU and memory at the cost of lower compression rates.</source>
          <target state="translated">圧縮- &lt;a href=&quot;zlibencoder/level&quot;&gt;レベル&lt;/a&gt;の範囲内に設定することができる &lt;code&gt;-1..9&lt;/code&gt; で、 &lt;code&gt;6&lt;/code&gt; はデフォルト圧縮レベルです。 &lt;code&gt;6&lt;/code&gt; を超えるレベルでは、CPUとメモリの使用量が増えますが、圧縮率が高くなります。 &lt;code&gt;6&lt;/code&gt; 未満のレベルでは、CPUとメモリの使用量が少なくなりますが、圧縮率は低くなります。</target>
        </trans-unit>
        <trans-unit id="109760a349c051318fd4d569702ba5132929506b" translate="yes" xml:space="preserve">
          <source>The computedStyle contains values that are inherited from other sources, such as parent elements or stylesheets. This differs from the &lt;a href=&quot;style&quot;&gt;style&lt;/a&gt; property, which contains only the values specified directly on this element.</source>
          <target state="translated">ComputedStyleには、親要素やスタイルシートなどの他のソースから継承された値が含まれています。これは、この要素で直接指定された値のみを含む&lt;a href=&quot;style&quot;&gt;スタイル&lt;/a&gt;プロパティとは異なります。</target>
        </trans-unit>
        <trans-unit id="fb89fa4444e3c7308635a865368c6014921d5a20" translate="yes" xml:space="preserve">
          <source>The constructed &lt;a href=&quot;../datetime-class&quot;&gt;DateTime&lt;/a&gt; represents 1970-01-01T00:00:00Z + &lt;code&gt;microsecondsSinceEpoch&lt;/code&gt; us in the given time zone (local or UTC).</source>
          <target state="translated">構築し&lt;a href=&quot;../datetime-class&quot;&gt;たDateTimeは&lt;/a&gt; 1970-01-01T00を表し：00：00Z + &lt;code&gt;microsecondsSinceEpoch&lt;/code&gt; 指定されたタイムゾーンの私たち（ローカルまたはUTC）。</target>
        </trans-unit>
        <trans-unit id="ca4366fccd9ba9a8b177204d31ce637c13395add" translate="yes" xml:space="preserve">
          <source>The constructed &lt;a href=&quot;../datetime-class&quot;&gt;DateTime&lt;/a&gt; represents 1970-01-01T00:00:00Z + &lt;code&gt;millisecondsSinceEpoch&lt;/code&gt; ms in the given time zone (local or UTC).</source>
          <target state="translated">構築された&lt;a href=&quot;../datetime-class&quot;&gt;DateTime&lt;/a&gt;は、1970-01-01T00：00：00Z + &lt;code&gt;millisecondsSinceEpoch&lt;/code&gt; msを指定されたタイムゾーン（ローカルまたはUTC）で表します。</target>
        </trans-unit>
        <trans-unit id="340df2f562f78fb93f8e1aee2474bdd65416376a" translate="yes" xml:space="preserve">
          <source>The constructor name for named constructors and factory methods.</source>
          <target state="translated">名前付きコンストラクタとファクトリーメソッドのコンストラクタ名。</target>
        </trans-unit>
        <trans-unit id="e7bf3fd75979caa2e7069ab9758590b30437a9e3" translate="yes" xml:space="preserve">
          <source>The constructor name for named constructors and factory methods. &lt;a href=&quot;methodmirror/constructorname&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">名前付きコンストラクタとファクトリメソッドのコンストラクタ名。&lt;a href=&quot;methodmirror/constructorname&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ce01126bdf233a1fc14a1b2a3199c5b40bb84a03" translate="yes" xml:space="preserve">
          <source>The consumer may stop listening to the stream after an error, it may consume all the errors and only stop at a done event, or it may be canceled early if the receiver don't want any further events.</source>
          <target state="translated">コンシューマは、エラーが発生した後にストリームを聞くのを止めるかもしれないし、すべてのエラーを消費して、完了したイベントでのみ停止するかもしれないし、受信者がそれ以上のイベントを望まない場合には、早期にキャンセルするかもしれない。</target>
        </trans-unit>
        <trans-unit id="06848e70d49a4679cd709bd496f78f2ad567d67e" translate="yes" xml:space="preserve">
          <source>The content can only be compressed when the response is using chunked Transfer-Encoding and the incoming request has &lt;code&gt;gzip&lt;/code&gt; as an accepted encoding in the Accept-Encoding header.</source>
          <target state="translated">コンテンツを圧縮できるのは、応答がチャンクされたTransfer-Encodingを使用していて、受信リクエストがAccept-Encodingヘッダーで受け入れられるエンコードとして &lt;code&gt;gzip&lt;/code&gt; を使用している場合のみです。</target>
        </trans-unit>
        <trans-unit id="126fec41ca6dd042fd9ea033c4b553ea23b210df" translate="yes" xml:space="preserve">
          <source>The content length of the request body.</source>
          <target state="translated">リクエストボディの内容の長さ。</target>
        </trans-unit>
        <trans-unit id="455dba8298e7bc49884942720af01f4b43581efd" translate="yes" xml:space="preserve">
          <source>The content length of the request body. &lt;a href=&quot;httprequest/contentlength&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">リクエスト本文のコンテンツの長さ。&lt;a href=&quot;httprequest/contentlength&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="59931dff9fe54d57aa8db273a99853ae3ca20762" translate="yes" xml:space="preserve">
          <source>The content of &lt;code&gt;message&lt;/code&gt; can be: primitive values (null, num, bool, double, String), instances of &lt;a href=&quot;../sendport-class&quot;&gt;SendPort&lt;/a&gt;, and lists and maps whose elements are any of these. List and maps are also allowed to be cyclic.</source>
          <target state="translated">&lt;code&gt;message&lt;/code&gt; のコンテンツは、プリミティブ値（null、num、bool、double、String）、&lt;a href=&quot;../sendport-class&quot;&gt;SendPortの&lt;/a&gt;インスタンス、およびこれらのいずれかの要素を持つリストとマップです。リストとマップは循環することもできます。</target>
        </trans-unit>
        <trans-unit id="c1733dd129ead2b810c0764c603644c83ec7e82f" translate="yes" xml:space="preserve">
          <source>The content part of the data URI as bytes.</source>
          <target state="translated">データURIの内容部分をバイトで表します。</target>
        </trans-unit>
        <trans-unit id="13dcdb0c96025c7c75da668ef8d6746b278826bc" translate="yes" xml:space="preserve">
          <source>The content part of the data URI as bytes. &lt;a href=&quot;uridata/contentasbytes&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">バイトとしてのデータURIのコンテンツ部分。&lt;a href=&quot;uridata/contentasbytes&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="65f13bb1108dc2d8b9355d5678a8d663fbebc82a" translate="yes" xml:space="preserve">
          <source>The content part of the data URI, as its actual representation.</source>
          <target state="translated">実際の表現としてのデータURIの内容部分。</target>
        </trans-unit>
        <trans-unit id="0b1b689a20234293abebcffacf24e3d11f3a8219" translate="yes" xml:space="preserve">
          <source>The content part of the data URI, as its actual representation. &lt;a href=&quot;uridata/contenttext&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">実際の表現としての、データURIのコンテンツ部分。&lt;a href=&quot;uridata/contenttext&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="72adde121cb9492a5270c62fd83f865973c53a00" translate="yes" xml:space="preserve">
          <source>The control port identifies the isolate.</source>
          <target state="translated">コントロールポートはアイソレートを識別します。</target>
        </trans-unit>
        <trans-unit id="fbcbaab1e0121c348316954cbefae0c4b9ee93d2" translate="yes" xml:space="preserve">
          <source>The controller becomes closed by calling the &lt;a href=&quot;close&quot;&gt;close&lt;/a&gt; method. New events cannot be added, by calling &lt;a href=&quot;add&quot;&gt;add&lt;/a&gt; or &lt;a href=&quot;adderror&quot;&gt;addError&lt;/a&gt;, to a closed controller.</source>
          <target state="translated">コントローラは、&lt;a href=&quot;close&quot;&gt;close&lt;/a&gt;メソッドを呼び出すことによって閉じられます。&lt;a href=&quot;add&quot;&gt;add&lt;/a&gt;または&lt;a href=&quot;adderror&quot;&gt;addErrorを&lt;/a&gt;呼び出して、閉じたコントローラーに新しいイベントを追加することはできません。</target>
        </trans-unit>
        <trans-unit id="9e0cdf6cd5cd60bb10d977d99313638b0d9eae72" translate="yes" xml:space="preserve">
          <source>The controller buffers all incoming events until a subscriber is registered, but this feature should only be used in rare circumstances.</source>
          <target state="translated">コントローラは、加入者が登録されるまで、すべての受信イベントをバッファリングするが、この機能はまれな状況でのみ使用されるべきである。</target>
        </trans-unit>
        <trans-unit id="15788b3a853717f916872d8453e8b98b767ccc3b" translate="yes" xml:space="preserve">
          <source>The controller distributes any events to all currently subscribed listeners at the time when &lt;a href=&quot;add&quot;&gt;add&lt;/a&gt;, &lt;a href=&quot;adderror&quot;&gt;addError&lt;/a&gt; or &lt;a href=&quot;close&quot;&gt;close&lt;/a&gt; is called. It is not allowed to call &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;addError&lt;/code&gt;, or &lt;code&gt;close&lt;/code&gt; before a previous call has returned. The controller does not have any internal queue of events, and if there are no listeners at the time the event is added, it will just be dropped, or, if it is an error, be reported as uncaught.</source>
          <target state="translated">コントローラは、&lt;a href=&quot;add&quot;&gt;add&lt;/a&gt;、&lt;a href=&quot;adderror&quot;&gt;addError&lt;/a&gt;または&lt;a href=&quot;close&quot;&gt;close&lt;/a&gt;が呼び出されたときに、現在サブスクライブされているすべてのリスナーにイベントを配信します。前の呼び出しが戻る前に、 &lt;code&gt;add&lt;/code&gt; 、 &lt;code&gt;addError&lt;/code&gt; 、または &lt;code&gt;close&lt;/code&gt; を呼び出すことはできません。コントローラーにはイベントの内部キューがありません。イベントが追加されたときにリスナーがいない場合は、単にドロップされるか、エラーの場合はキャッチされなかったと報告されます。</target>
        </trans-unit>
        <trans-unit id="92bcc896b572c5a2d8e6842ca0160dd4cac64121" translate="yes" xml:space="preserve">
          <source>The conversion is guaranteed to not throw, so it won't use the object's toString method.</source>
          <target state="translated">変換はthrowしないことが保証されているので、オブジェクトのtoStringメソッドを使用しません。</target>
        </trans-unit>
        <trans-unit id="51dd49de86509e973528b888cc10a860381e820e" translate="yes" xml:space="preserve">
          <source>The conversion may omit calling &lt;code&gt;toString&lt;/code&gt; on some elements if they are known to not occur in the output, and it may stop iterating after a hundred elements.</source>
          <target state="translated">一部の要素が出力で発生しないことがわかっている場合、変換によって &lt;code&gt;toString&lt;/code&gt; の呼び出しが省略され、100要素の後に反復が停止する場合があります。</target>
        </trans-unit>
        <trans-unit id="a11a475af701a66f331575985a7360c70e295033" translate="yes" xml:space="preserve">
          <source>The converter finds characters that are significant in HTML source and replaces them with corresponding HTML entities.</source>
          <target state="translated">コンバータは、HTMLソース内の重要な文字を見つけ、対応するHTMLエンティティに置き換えます。</target>
        </trans-unit>
        <trans-unit id="3c861720ea93b4e1c391126121a57aa47f3ef99c" translate="yes" xml:space="preserve">
          <source>The converter works more efficiently if the given &lt;code&gt;sink&lt;/code&gt; is a &lt;a href=&quot;../byteconversionsink-class&quot;&gt;ByteConversionSink&lt;/a&gt;.</source>
          <target state="translated">指定された &lt;code&gt;sink&lt;/code&gt; が&lt;a href=&quot;../byteconversionsink-class&quot;&gt;ByteConversionSinkの&lt;/a&gt;場合、コンバーターはより効率的に機能します。</target>
        </trans-unit>
        <trans-unit id="0aa011e8d9da690eb1dbf7823a19b884e027fbf5" translate="yes" xml:space="preserve">
          <source>The converter works more efficiently if the given &lt;code&gt;sink&lt;/code&gt; is a &lt;a href=&quot;../stringconversionsink-class&quot;&gt;StringConversionSink&lt;/a&gt;.</source>
          <target state="translated">指定された &lt;code&gt;sink&lt;/code&gt; が&lt;a href=&quot;../stringconversionsink-class&quot;&gt;StringConversionSinkである&lt;/a&gt;場合、コンバーターはより効率的に機能します。</target>
        </trans-unit>
        <trans-unit id="76edd81b774f65225e7287e81ae0c50f3fc38744" translate="yes" xml:space="preserve">
          <source>The cookies in the request, from the &quot;Cookie&quot; headers.</source>
          <target state="translated">リクエスト中のクッキー、「クッキー」ヘッダから。</target>
        </trans-unit>
        <trans-unit id="3b0340ebaf47cb99d4696826adc5c199a3b1b754" translate="yes" xml:space="preserve">
          <source>The cookies in the request, from the Cookie headers.</source>
          <target state="translated">リクエストに含まれるクッキーは、クッキーヘッダから。</target>
        </trans-unit>
        <trans-unit id="87cb0851db04ecbe82a850bfe247801358e7b4ed" translate="yes" xml:space="preserve">
          <source>The coordinates of the mouse pointer in target node coordinates.</source>
          <target state="translated">ターゲットノード座標でのマウスポインタの座標。</target>
        </trans-unit>
        <trans-unit id="6c9fcc882d60d63a79fa857ff2fe6099a9c49a17" translate="yes" xml:space="preserve">
          <source>The coordinates of the mouse pointer in target node coordinates. &lt;a href=&quot;mouseevent/offset&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">ターゲットノード座標でのマウスポインターの座標。&lt;a href=&quot;mouseevent/offset&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c4ba459e2b29b13a93263904a8aef8ca8d763c24" translate="yes" xml:space="preserve">
          <source>The countdown doesn't start until the returned stream is listened to. The countdown is reset every time an event is forwarded from this stream, or when this stream is paused and resumed.</source>
          <target state="translated">カウントダウンは、返されたストリームがリッスンされるまで開始されません。カウントダウンは、このストリームからイベントが転送されるたび、またはこのストリームが一時停止して再開されるたびにリセットされます。</target>
        </trans-unit>
        <trans-unit id="49a3988a3c41dccc52f2aa8c72f6e78ff34b0cd2" translate="yes" xml:space="preserve">
          <source>The created &lt;a href=&quot;../set-class&quot;&gt;Set&lt;/a&gt; is a &lt;a href=&quot;../../dart-collection/linkedhashset-class&quot;&gt;LinkedHashSet&lt;/a&gt; that uses identity as equality relation.</source>
          <target state="translated">作成された&lt;a href=&quot;../set-class&quot;&gt;セット&lt;/a&gt;は、等価関係としてアイデンティティを使用する&lt;a href=&quot;../../dart-collection/linkedhashset-class&quot;&gt;LinkedHashSet&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="b487b34b74236272c15c67939e01768600ec193c" translate="yes" xml:space="preserve">
          <source>The created &lt;a href=&quot;../set-class&quot;&gt;Set&lt;/a&gt; is a &lt;a href=&quot;../../dart-collection/linkedhashset-class&quot;&gt;LinkedHashSet&lt;/a&gt;. As such, it considers elements that are equal (using &lt;a href=&quot;../object/operator_equals&quot;&gt;operator ==&lt;/a&gt;) to be indistinguishable, and requires them to have a compatible &lt;a href=&quot;../object/hashcode&quot;&gt;Object.hashCode&lt;/a&gt; implementation.</source>
          <target state="translated">作成された&lt;a href=&quot;../set-class&quot;&gt;セット&lt;/a&gt;は&lt;a href=&quot;../../dart-collection/linkedhashset-class&quot;&gt;LinkedHashSet&lt;/a&gt;です。そのため、（&lt;a href=&quot;../object/operator_equals&quot;&gt;演算子==&lt;/a&gt;を使用して）等しい要素は区別できないものと見なされ、互換性のある&lt;a href=&quot;../object/hashcode&quot;&gt;Object.hashCode&lt;/a&gt;実装が必要です。</target>
        </trans-unit>
        <trans-unit id="a8c034347f495c8b3490e4d965f699e8c9e817e7" translate="yes" xml:space="preserve">
          <source>The created &lt;a href=&quot;../set-class&quot;&gt;Set&lt;/a&gt; is a plain &lt;a href=&quot;../../dart-collection/linkedhashset-class&quot;&gt;LinkedHashSet&lt;/a&gt;. As such, it considers elements that are equal (using &lt;a href=&quot;../object/operator_equals&quot;&gt;operator ==&lt;/a&gt;) to be indistinguishable, and requires them to have a compatible &lt;a href=&quot;../object/hashcode&quot;&gt;Object.hashCode&lt;/a&gt; implementation.</source>
          <target state="translated">作成された&lt;a href=&quot;../set-class&quot;&gt;セット&lt;/a&gt;はプレーンな&lt;a href=&quot;../../dart-collection/linkedhashset-class&quot;&gt;LinkedHashSet&lt;/a&gt;です。そのため、（&lt;a href=&quot;../object/operator_equals&quot;&gt;演算子==&lt;/a&gt;を使用して）等しい要素は区別できないものと見なされ、互換性のある&lt;a href=&quot;../object/hashcode&quot;&gt;Object.hashCode&lt;/a&gt;実装が必要です。</target>
        </trans-unit>
        <trans-unit id="abde7c0d54fb54ebd5cf510996689bb501fbcb83" translate="yes" xml:space="preserve">
          <source>The created future will be completed with an error in a future microtask. This allows enough time for someone to add an error handler on the future. If an error handler isn't added before the future completes, the error will be considered unhandled.</source>
          <target state="translated">作成された未来は、未来のマイクロタスクのエラーで完了します。これにより、誰かがフューチャーにエラーハンドラを追加するのに十分な時間を確保することができます。未来が完了する前にエラーハンドラが追加されなかった場合、エラーは未処理とみなされます。</target>
        </trans-unit>
        <trans-unit id="9343dc028a09035a42619f6d636d6a4ce930929a" translate="yes" xml:space="preserve">
          <source>The created instance overrides &lt;a href=&quot;../object/operator_equals&quot;&gt;Object.==&lt;/a&gt;.</source>
          <target state="translated">作成されたインスタンスは&lt;a href=&quot;../object/operator_equals&quot;&gt;Object。==を&lt;/a&gt;オーバーライドします。</target>
        </trans-unit>
        <trans-unit id="4ea085c557d506664de60f29bad0d0a2bd77caa9" translate="yes" xml:space="preserve">
          <source>The created instance overrides &lt;a href=&quot;operator_equals&quot;&gt;Object.==&lt;/a&gt;.</source>
          <target state="translated">作成されたインスタンスは&lt;a href=&quot;operator_equals&quot;&gt;Object。==を&lt;/a&gt;オーバーライドします。</target>
        </trans-unit>
        <trans-unit id="28347424838316da2295bae5a7a795dccaac12e8" translate="yes" xml:space="preserve">
          <source>The created list is fixed-length if &lt;code&gt;growable&lt;/code&gt; is false (the default) and growable if &lt;code&gt;growable&lt;/code&gt; is true. If the list is growable, changing its length will not initialize new entries with &lt;code&gt;fill&lt;/code&gt;. After being created and filled, the list is no different from any other growable or fixed-length list created using &lt;a href=&quot;../list-class&quot;&gt;List&lt;/a&gt;.</source>
          <target state="translated">作成されるリストは、 &lt;code&gt;growable&lt;/code&gt; がfalse（デフォルト）の場合は固定長で、 &lt;code&gt;growable&lt;/code&gt; がtrueの場合は拡張可能です。リストが拡張可能な場合、その長さを変更しても、 &lt;code&gt;fill&lt;/code&gt; で新しいエントリが初期化されません。作成および入力された後のリストは、&lt;a href=&quot;../list-class&quot;&gt;List&lt;/a&gt;を使用して作成された他の拡張可能または固定長のリストと何の違いもありません。</target>
        </trans-unit>
        <trans-unit id="d07e2c84ed04794b03b45f238040d8ba7cb18c13" translate="yes" xml:space="preserve">
          <source>The created list is fixed-length if &lt;code&gt;growable&lt;/code&gt; is set to false.</source>
          <target state="translated">&lt;code&gt;growable&lt;/code&gt; がfalseに設定されている場合、作成されるリストは固定長です。</target>
        </trans-unit>
        <trans-unit id="2972a3fca45f19280f71990e31555dcc2bb43fa5" translate="yes" xml:space="preserve">
          <source>The created list is fixed-length if &lt;code&gt;length&lt;/code&gt; is provided.</source>
          <target state="translated">&lt;code&gt;length&lt;/code&gt; が指定されている場合、作成されるリストは固定長です。</target>
        </trans-unit>
        <trans-unit id="f799dfa64cd8e2dfc6f548f1122cd6e0c0d44bff" translate="yes" xml:space="preserve">
          <source>The created list is fixed-length unless &lt;code&gt;growable&lt;/code&gt; is true.</source>
          <target state="translated">&lt;code&gt;growable&lt;/code&gt; がtrueでない限り、作成されるリストは固定長です。</target>
        </trans-unit>
        <trans-unit id="b1e3eb86a6be902d3190117ca40f28b48b59f4cd" translate="yes" xml:space="preserve">
          <source>The created map is a &lt;a href=&quot;../../dart-collection/linkedhashmap-class&quot;&gt;LinkedHashMap&lt;/a&gt;. A &lt;code&gt;LinkedHashMap&lt;/code&gt; requires the keys to implement compatible &lt;code&gt;operator==&lt;/code&gt; and &lt;code&gt;hashCode&lt;/code&gt;, and it allows null as a key. It iterates in key insertion order.</source>
          <target state="translated">作成されたマップは&lt;a href=&quot;../../dart-collection/linkedhashmap-class&quot;&gt;LinkedHashMap&lt;/a&gt;です。A &lt;code&gt;LinkedHashMap&lt;/code&gt; 互換性を実装するためにキーを必要とする &lt;code&gt;operator==&lt;/code&gt; と &lt;code&gt;hashCode&lt;/code&gt; 、それがキーとしてnullを可能にします。キーの挿入順に反復します。</target>
        </trans-unit>
        <trans-unit id="6114963d25da45af314dd79f1c61cdeeb549852a" translate="yes" xml:space="preserve">
          <source>The created map is not ordered in any way. When iterating the keys or values, the iteration order is unspecified except that it will stay the same as long as the map isn't changed.</source>
          <target state="translated">作成されたマップには順序はありません。キーまたは値を繰り返し処理する場合、マップが変更されない限り、繰り返しの順序は変わらないということを除いて、繰り返しの順序は指定されていません。</target>
        </trans-unit>
        <trans-unit id="49b3b4f11caca4fe7388ec4e018484f456b2d252" translate="yes" xml:space="preserve">
          <source>The created stack trace will have a &lt;code&gt;toString&lt;/code&gt; method returning &lt;code&gt;stackTraceString&lt;/code&gt;.</source>
          <target state="translated">作成されたスタックトレースには、 &lt;code&gt;stackTraceString&lt;/code&gt; を返す &lt;code&gt;toString&lt;/code&gt; メソッドが含まれます。</target>
        </trans-unit>
        <trans-unit id="b7e3e3755f70c74e57c90c986743cd50a4fd6205" translate="yes" xml:space="preserve">
          <source>The current case of the a header name is that of the name used by the last &lt;a href=&quot;set&quot;&gt;set&lt;/a&gt; or &lt;a href=&quot;add&quot;&gt;add&lt;/a&gt; call for that header.</source>
          <target state="translated">ヘッダー名の現在のケースは、そのヘッダーの最後の&lt;a href=&quot;set&quot;&gt;セット&lt;/a&gt;または&lt;a href=&quot;add&quot;&gt;追加&lt;/a&gt;呼び出しで使用された名前のケースです。</target>
        </trans-unit>
        <trans-unit id="f9fc5a08340c1c4f2df7937318423ca5a14a27d4" translate="yes" xml:space="preserve">
          <source>The current contents are discarded and this builder becomes empty.</source>
          <target state="translated">現在の内容は破棄され、このビルダは空になります。</target>
        </trans-unit>
        <trans-unit id="6a9e70cb6cb975afc3062726bdf50909ac5e8f48" translate="yes" xml:space="preserve">
          <source>The current isolate for code using &lt;a href=&quot;current&quot;&gt;current&lt;/a&gt; is the isolate running the code.</source>
          <target state="translated">コード使用するための現在の単離&lt;a href=&quot;current&quot;&gt;電流が&lt;/a&gt;コードを実行している単離物です。</target>
        </trans-unit>
        <trans-unit id="e1f0ec402116431cea1a0f0a86b8a8106051945d" translate="yes" xml:space="preserve">
          <source>The current location of this window.</source>
          <target state="translated">このウィンドウの現在位置。</target>
        </trans-unit>
        <trans-unit id="1749a7f94990f6017a86f924602736b330d6c390" translate="yes" xml:space="preserve">
          <source>The current location of this window. &lt;a href=&quot;window/location&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このウィンドウの現在の場所。&lt;a href=&quot;window/location&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0d59185e08b56dd90683805426d21038e9bacd52" translate="yes" xml:space="preserve">
          <source>The current location of this window. &lt;a href=&quot;windowbase/location&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このウィンドウの現在の場所。&lt;a href=&quot;windowbase/location&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f7e2c6ea5b4fcf1f2cded65913a663adc437d7a1" translate="yes" xml:space="preserve">
          <source>The current resident set size of memory for the process.</source>
          <target state="translated">プロセスのメモリの現在の常駐セットサイズ。</target>
        </trans-unit>
        <trans-unit id="8099954e737cd415d2b9e48e1aa10f9ab9c36748" translate="yes" xml:space="preserve">
          <source>The current resident set size of memory for the process. &lt;a href=&quot;processinfo/currentrss&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">プロセスのメモリの現在の常駐セットサイズ。&lt;a href=&quot;processinfo/currentrss&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="86fec438b88fe519728b3a4cc3aa5ccd1abdcc72" translate="yes" xml:space="preserve">
          <source>The current session history for this window's newest document.</source>
          <target state="translated">このウィンドウの最新ドキュメントの現在のセッション履歴。</target>
        </trans-unit>
        <trans-unit id="5a41061f83f7f9778e402391bf113aabfa4ee3a2" translate="yes" xml:space="preserve">
          <source>The current session history for this window's newest document. &lt;a href=&quot;window/history&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このウィンドウの最新のドキュメントの現在のセッション履歴。&lt;a href=&quot;window/history&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aa29b8cd60dafe84a26e3140bdcf313fd8d0c8b9" translate="yes" xml:space="preserve">
          <source>The current session history for this window.</source>
          <target state="translated">このウィンドウの現在のセッション履歴。</target>
        </trans-unit>
        <trans-unit id="656b00746a1b5ffa7abd22d5e281c9bb2fe0795d" translate="yes" xml:space="preserve">
          <source>The current session history for this window. &lt;a href=&quot;windowbase/history&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このウィンドウの現在のセッション履歴。&lt;a href=&quot;windowbase/history&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ea5f3f0b6ad1dfae9302f2852d63b510a44934d7" translate="yes" xml:space="preserve">
          <source>The current system encoding.</source>
          <target state="translated">現在のシステムのエンコーディング。</target>
        </trans-unit>
        <trans-unit id="bbc95abb9d8603e85e7ed0b48a8d0526efd94441" translate="yes" xml:space="preserve">
          <source>The current system encoding. &lt;a href=&quot;systemencoding-constant&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">現在のシステムエンコーディング。&lt;a href=&quot;systemencoding-constant&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8332170e3e4c8f5ecdfbaea95924787534d28381" translate="yes" xml:space="preserve">
          <source>The current time stamp from the clock used by the timeline. Units are microseconds.</source>
          <target state="translated">タイムラインで使用されている時計の現在のタイムスタンプ。単位はマイクロ秒です。</target>
        </trans-unit>
        <trans-unit id="9b3d59158f3f5128543c8728f3ff6bfc0d224227" translate="yes" xml:space="preserve">
          <source>The current time stamp from the clock used by the timeline. Units are microseconds. &lt;a href=&quot;timeline/now&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">タイムラインで使用されている時計の現在のタイムスタンプ。単位はマイクロ秒です。&lt;a href=&quot;timeline/now&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="66ab46532b4dc34fab545f128639107d1efff9f3" translate="yes" xml:space="preserve">
          <source>The current value of the stream.</source>
          <target state="translated">ストリームの現在値。</target>
        </trans-unit>
        <trans-unit id="900dbab04fff832be3f75c9cb9fcd937a3d03fe1" translate="yes" xml:space="preserve">
          <source>The current value of the stream. &lt;a href=&quot;streamiterator/current&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">ストリームの現在の値。&lt;a href=&quot;streamiterator/current&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="75b576358a176611a80b85215b546d5e563866ae" translate="yes" xml:space="preserve">
          <source>The current window.</source>
          <target state="translated">現在のウィンドウ。</target>
        </trans-unit>
        <trans-unit id="6275184208189a019f7cc32035477691093db07f" translate="yes" xml:space="preserve">
          <source>The current window. &lt;a href=&quot;window/self&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">現在のウィンドウ。&lt;a href=&quot;window/self&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8b9efe5fb4cee2722ab626714755b40462604fe4" translate="yes" xml:space="preserve">
          <source>The current window. &lt;a href=&quot;window/window&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">現在のウィンドウ。&lt;a href=&quot;window/window&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="340f2154ceef14481e0185e2f7610d6c0cb57554" translate="yes" xml:space="preserve">
          <source>The currently registered target for this event.</source>
          <target state="translated">現在登録されている対象者。</target>
        </trans-unit>
        <trans-unit id="fb147857b8446e003f70b12091d331df62056dc2" translate="yes" xml:space="preserve">
          <source>The custom element can also be instantiated via HTML using the syntax &lt;code&gt;&amp;lt;x-foo&amp;gt;&amp;lt;/x-foo&amp;gt;&lt;/code&gt;</source>
          <target state="translated">カスタム要素は、構文 &lt;code&gt;&amp;lt;x-foo&amp;gt;&amp;lt;/x-foo&amp;gt;&lt;/code&gt; を使用してHTMLでインスタンス化することもできます</target>
        </trans-unit>
        <trans-unit id="0ada3f0d0c369a9ba2c76ef6f353bf3188154db8" translate="yes" xml:space="preserve">
          <source>The dart:core library provides basic collections, such as &lt;a href=&quot;list-class&quot;&gt;List&lt;/a&gt;, &lt;a href=&quot;map-class&quot;&gt;Map&lt;/a&gt;, and &lt;a href=&quot;set-class&quot;&gt;Set&lt;/a&gt;.</source>
          <target state="translated">dart：coreライブラリは、&lt;a href=&quot;list-class&quot;&gt;List&lt;/a&gt;、&lt;a href=&quot;map-class&quot;&gt;Map&lt;/a&gt;、&lt;a href=&quot;set-class&quot;&gt;Set&lt;/a&gt;などの基本的なコレクションを提供します。</target>
        </trans-unit>
        <trans-unit id="3d64cb83d6cc4f92e74df5af8cf857de65613a98" translate="yes" xml:space="preserve">
          <source>The dart:mirrors library is unstable and its API might change slightly as a result of user feedback. This library is platform dependent and therefore it has implementations for both dart2js and the Dart VM. Both are under development and may not support all operations yet.</source>
          <target state="translated">dart:mirrors ライブラリは不安定であり、ユーザーからのフィードバックの結果として API が若干変更される可能性があります。このライブラリはプラットフォームに依存しているため、dart2jsとDart VMの両方に実装されています。両方とも開発中であり、まだすべての操作をサポートしていない可能性があります。</target>
        </trans-unit>
        <trans-unit id="cf6a9871c2b8cd1a399fc214b52d8d36cf68ed0d" translate="yes" xml:space="preserve">
          <source>The data could be in the form of a &lt;a href=&quot;../../dart-core/string-class&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../../dart-typed_data/bytebuffer-class&quot;&gt;ByteBuffer&lt;/a&gt;, &lt;a href=&quot;../document-class&quot;&gt;Document&lt;/a&gt;, &lt;a href=&quot;../blob-class&quot;&gt;Blob&lt;/a&gt;, or json (also a &lt;a href=&quot;../../dart-core/string-class&quot;&gt;String&lt;/a&gt;). &lt;code&gt;null&lt;/code&gt; indicates request failure.</source>
          <target state="translated">データは、&lt;a href=&quot;../../dart-core/string-class&quot;&gt;String&lt;/a&gt;、&lt;a href=&quot;../../dart-typed_data/bytebuffer-class&quot;&gt;ByteBuffer&lt;/a&gt;、&lt;a href=&quot;../document-class&quot;&gt;Document&lt;/a&gt;、&lt;a href=&quot;../blob-class&quot;&gt;Blob&lt;/a&gt;、またはjson（これも&lt;a href=&quot;../../dart-core/string-class&quot;&gt;String&lt;/a&gt;）の形式にすることができます。 &lt;code&gt;null&lt;/code&gt; はリクエストの失敗を示します。</target>
        </trans-unit>
        <trans-unit id="63dba93086075109f8ad5cd3e7ad367e360100a9" translate="yes" xml:space="preserve">
          <source>The data list should not be modified after it has been passed to &lt;code&gt;add&lt;/code&gt;.</source>
          <target state="translated">データリストは、 &lt;code&gt;add&lt;/code&gt; に渡された後は変更しないでください。</target>
        </trans-unit>
        <trans-unit id="e68d55ba33f04563783925266ec4843acae5249a" translate="yes" xml:space="preserve">
          <source>The data received as a reponse from the request.</source>
          <target state="translated">リクエストの返信として受信したデータ。</target>
        </trans-unit>
        <trans-unit id="1e3a7589535725f3014fd714b12a82536c9f3a84" translate="yes" xml:space="preserve">
          <source>The data received as a reponse from the request. &lt;a href=&quot;httprequest/response&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">リクエストからの応答として受信したデータ。&lt;a href=&quot;httprequest/response&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7fef2d9e103f3a36bd0cac7eda49145a26211862" translate="yes" xml:space="preserve">
          <source>The date and time specified by the &lt;a href=&quot;expiresheader-constant&quot;&gt;expiresHeader&lt;/a&gt; header, if any.</source>
          <target state="translated">存在する場合、&lt;a href=&quot;expiresheader-constant&quot;&gt;expiresHeader&lt;/a&gt;ヘッダーで指定された日付と時刻。</target>
        </trans-unit>
        <trans-unit id="cedf14dbf4bc1f16422f7a62e73364f0bc555687" translate="yes" xml:space="preserve">
          <source>The date and time specified by the &lt;a href=&quot;httpheaders/expiresheader-constant&quot;&gt;expiresHeader&lt;/a&gt; header, if any.</source>
          <target state="translated">存在する場合、&lt;a href=&quot;httpheaders/expiresheader-constant&quot;&gt;expiresHeader&lt;/a&gt;ヘッダーで指定された日付と時刻。</target>
        </trans-unit>
        <trans-unit id="230e3562384b5da1fbde0b435b531dac2bec3fcd" translate="yes" xml:space="preserve">
          <source>The date and time specified by the &lt;a href=&quot;httpheaders/ifmodifiedsinceheader-constant&quot;&gt;ifModifiedSinceHeader&lt;/a&gt; header, if any.</source>
          <target state="translated">&lt;a href=&quot;httpheaders/ifmodifiedsinceheader-constant&quot;&gt;ifModifiedSinceHeader&lt;/a&gt;ヘッダーで指定された日付と時刻（存在する場合）。</target>
        </trans-unit>
        <trans-unit id="05924116c17e632b7e0d017e0855ae4c5503f6a0" translate="yes" xml:space="preserve">
          <source>The date and time specified by the &lt;a href=&quot;ifmodifiedsinceheader-constant&quot;&gt;ifModifiedSinceHeader&lt;/a&gt; header, if any.</source>
          <target state="translated">&lt;a href=&quot;ifmodifiedsinceheader-constant&quot;&gt;ifModifiedSinceHeader&lt;/a&gt;ヘッダーで指定された日付と時刻（存在する場合）。</target>
        </trans-unit>
        <trans-unit id="a2403187764f16e4da91a6a713ba27faeeb41f5a" translate="yes" xml:space="preserve">
          <source>The date specified by the &lt;a href=&quot;dateheader-constant&quot;&gt;dateHeader&lt;/a&gt; header, if any.</source>
          <target state="translated">&lt;a href=&quot;dateheader-constant&quot;&gt;dateHeader&lt;/a&gt;ヘッダーで指定された日付（存在する場合）。</target>
        </trans-unit>
        <trans-unit id="7aa51b15fdccbf39a393dfb796a0f639327b5e07" translate="yes" xml:space="preserve">
          <source>The date specified by the &lt;a href=&quot;httpheaders/dateheader-constant&quot;&gt;dateHeader&lt;/a&gt; header, if any.</source>
          <target state="translated">&lt;a href=&quot;httpheaders/dateheader-constant&quot;&gt;dateHeader&lt;/a&gt;ヘッダーで指定された日付（存在する場合）。</target>
        </trans-unit>
        <trans-unit id="b0c729bcd7322ecf9191a5443fcc0760c4af9c3b" translate="yes" xml:space="preserve">
          <source>The day of the month &lt;code&gt;1..31&lt;/code&gt;.</source>
          <target state="translated">月の日 &lt;code&gt;1..31&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f7dfc2a143f3fab12a20eec14817a3ef2fe6cad5" translate="yes" xml:space="preserve">
          <source>The day of the month &lt;code&gt;1..31&lt;/code&gt;. &lt;a href=&quot;datetime/day&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">月の日 &lt;code&gt;1..31&lt;/code&gt; 。&lt;a href=&quot;datetime/day&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4cc8a6ce33f8bfcb35a5bfe1dd46027aa317a6f3" translate="yes" xml:space="preserve">
          <source>The day of the week &lt;a href=&quot;datetime/monday-constant&quot;&gt;monday&lt;/a&gt;..&lt;a href=&quot;datetime/sunday-constant&quot;&gt;sunday&lt;/a&gt;. &lt;a href=&quot;datetime/weekday&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">曜日.. &lt;a href=&quot;datetime/monday-constant&quot;&gt;月曜日&lt;/a&gt; .. &lt;a href=&quot;datetime/sunday-constant&quot;&gt;日曜日&lt;/a&gt;。&lt;a href=&quot;datetime/weekday&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0998e7c7012a9c44ebfebb87cd2fec3a86777d77" translate="yes" xml:space="preserve">
          <source>The day of the week &lt;a href=&quot;monday-constant&quot;&gt;monday&lt;/a&gt;..&lt;a href=&quot;sunday-constant&quot;&gt;sunday&lt;/a&gt;.</source>
          <target state="translated">曜日.. &lt;a href=&quot;monday-constant&quot;&gt;月曜日&lt;/a&gt; .. &lt;a href=&quot;sunday-constant&quot;&gt;日曜日&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ed1dffdc34ee71245af4f4044b911ce01674fa39" translate="yes" xml:space="preserve">
          <source>The debugging console for this window.</source>
          <target state="translated">このウィンドウのデバッグコンソール。</target>
        </trans-unit>
        <trans-unit id="595c88bf845a80e6dc46be7c2d90d80df06dfcd4" translate="yes" xml:space="preserve">
          <source>The default &lt;a href=&quot;../usertag-class&quot;&gt;UserTag&lt;/a&gt; with label 'Default'.</source>
          <target state="translated">ラベルが「デフォルト」のデフォルトの&lt;a href=&quot;../usertag-class&quot;&gt;UserTag&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4008332f8e1b8d4ec2b98c348b07763020a733b4" translate="yes" xml:space="preserve">
          <source>The default &lt;a href=&quot;set-class&quot;&gt;Set&lt;/a&gt; implementation, &lt;a href=&quot;../dart-collection/linkedhashset-class&quot;&gt;LinkedHashSet&lt;/a&gt;, considers objects indistinguishable if they are equal with regard to operator &lt;a href=&quot;object/operator_equals&quot;&gt;Object.==&lt;/a&gt;.</source>
          <target state="translated">デフォルトの&lt;a href=&quot;set-class&quot;&gt;Set&lt;/a&gt;実装である&lt;a href=&quot;../dart-collection/linkedhashset-class&quot;&gt;LinkedHashSetは&lt;/a&gt;、演算子&lt;a href=&quot;object/operator_equals&quot;&gt;Object。==&lt;/a&gt;に関して等しいオブジェクトを区別できないと見なします。</target>
        </trans-unit>
        <trans-unit id="f9a2ca8738eb11ca699ad38316a8c18dde81fd97" translate="yes" xml:space="preserve">
          <source>The default &lt;a href=&quot;usertag-class&quot;&gt;UserTag&lt;/a&gt; with label 'Default'.</source>
          <target state="translated">ラベルが「デフォルト」のデフォルトの&lt;a href=&quot;usertag-class&quot;&gt;UserTag&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="15bb468ce8a4f248bcea09154173fe76cc46dd57" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;reviver&lt;/code&gt; (when not provided) is the identity function.</source>
          <target state="translated">デフォルトの &lt;code&gt;reviver&lt;/code&gt; （提供されていない場合）は、識別関数です。</target>
        </trans-unit>
        <trans-unit id="0c9f9ff220180bece8da8872f5f043ce12b2615a" translate="yes" xml:space="preserve">
          <source>The default List implementations use &lt;a href=&quot;../../dart-core/comparable/compare&quot;&gt;Comparable.compare&lt;/a&gt; if &lt;code&gt;compare&lt;/code&gt; is omitted.</source>
          <target state="translated">デフォルトのList実装は、 &lt;code&gt;compare&lt;/code&gt; が省略されている場合、&lt;a href=&quot;../../dart-core/comparable/compare&quot;&gt;Comparable.compareを&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="cfdf7ed8e04bd7de8bd3aa9f2216572f83cd9386" translate="yes" xml:space="preserve">
          <source>The default List implementations use &lt;a href=&quot;../comparable/compare&quot;&gt;Comparable.compare&lt;/a&gt; if &lt;code&gt;compare&lt;/code&gt; is omitted.</source>
          <target state="translated">デフォルトのList実装は、 &lt;code&gt;compare&lt;/code&gt; が省略されている場合、&lt;a href=&quot;../comparable/compare&quot;&gt;Comparable.compareを&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="b8e76f48baa4589cbd71e8549b5e9081cea76394" translate="yes" xml:space="preserve">
          <source>The default behavior for all &lt;a href=&quot;../../dart-core/object-class&quot;&gt;Object&lt;/a&gt;s is to return true if and only if &lt;code&gt;this&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt; are the same object.</source>
          <target state="translated">すべての&lt;a href=&quot;../../dart-core/object-class&quot;&gt;Object&lt;/a&gt;のデフォルトの動作は、 &lt;code&gt;this&lt;/code&gt; と &lt;code&gt;other&lt;/code&gt; オブジェクトが同じオブジェクトである場合にのみtrueを返すことです。</target>
        </trans-unit>
        <trans-unit id="d40d5f8fa5a2ade49043dc693904bb4caeb2b359" translate="yes" xml:space="preserve">
          <source>The default behavior for all &lt;a href=&quot;../object-class&quot;&gt;Object&lt;/a&gt;s is to return true if and only if &lt;code&gt;this&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt; are the same object.</source>
          <target state="translated">すべての&lt;a href=&quot;../object-class&quot;&gt;Object&lt;/a&gt;のデフォルトの動作は、 &lt;code&gt;this&lt;/code&gt; と &lt;code&gt;other&lt;/code&gt; オブジェクトが同じオブジェクトである場合にのみtrueを返すことです。</target>
        </trans-unit>
        <trans-unit id="2e94108fedb4a6e9693b0af0ace7e9269c0923a6" translate="yes" xml:space="preserve">
          <source>The default behavior is to return a normal growable list. Some list types may choose to return a list of the same type as themselves (see &lt;a href=&quot;../../dart-typed_data/uint8list/operator_plus&quot;&gt;Uint8List.+&lt;/a&gt;);</source>
          <target state="translated">デフォルトの動作では、通常の拡張可能なリストが返されます。一部のリストタイプは、それ自体と同じタイプのリストを返すことを選択する場合があります（&lt;a href=&quot;../../dart-typed_data/uint8list/operator_plus&quot;&gt;Uint8List。+を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="3321d8a23893933cd2c67477d890addab472fd55" translate="yes" xml:space="preserve">
          <source>The default behavior is to return a normal growable list. Some list types may choose to return a list of the same type as themselves (see &lt;a href=&quot;operator_plus&quot;&gt;Uint8List.+&lt;/a&gt;);</source>
          <target state="translated">デフォルトの動作では、通常の拡張可能なリストが返されます。一部のリストタイプは、それ自体と同じタイプのリストを返すことを選択する場合があります（&lt;a href=&quot;operator_plus&quot;&gt;Uint8List。+を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="c9677c766a8fd39c68d8844114c2f53a9e62ddeb" translate="yes" xml:space="preserve">
          <source>The default behavior is to throw a &lt;a href=&quot;../nosuchmethoderror-class&quot;&gt;NoSuchMethodError&lt;/a&gt;.</source>
          <target state="translated">デフォルトの動作は、&lt;a href=&quot;../nosuchmethoderror-class&quot;&gt;NoSuchMethodError&lt;/a&gt;をスローすることです。</target>
        </trans-unit>
        <trans-unit id="a5181440ec221edbe183dc76c0054e432873c649" translate="yes" xml:space="preserve">
          <source>The default for whether to use Windows or non-Windows semantics determined from the platform Dart is running on. When running in the standalone VM this is detected by the VM based on the operating system. When running in a browser non-Windows semantics is always used.</source>
          <target state="translated">Windowsセマンティクスを使用するかどうかのデフォルトは、Dartが実行されているプラットフォームから決定されます。スタンドアロン VM で実行している場合、これはオペレーティングシステムに基づいて VM によって検出されます。ブラウザで実行している場合は、Windows以外のセマンティクスが常に使用されます。</target>
        </trans-unit>
        <trans-unit id="75928a3a750714a618fef647e9520d83fdfac940" translate="yes" xml:space="preserve">
          <source>The default for whether to use Windows or non-Windows semantics determined from the platform Dart is running on. When running in the standalone VM, this is detected by the VM based on the operating system. When running in a browser non-Windows semantics is always used.</source>
          <target state="translated">Dartが実行されているプラットフォームから決定されるWindowsセマンティクスを使用するか非Windowsセマンティクスを使用するかのデフォルト。スタンドアロンVMで実行している場合は、オペレーティングシステムに基づいてVMによって検出されます。ブラウザで実行している場合は、Windows以外のセマンティクスが常に使用されます。</target>
        </trans-unit>
        <trans-unit id="785a855698634d9708951ca2c635e8fae82e0d9e" translate="yes" xml:space="preserve">
          <source>The default growable list, as created by &lt;code&gt;[]&lt;/code&gt;, keeps an internal buffer, and grows that buffer when necessary. This guarantees that a sequence of &lt;a href=&quot;list/add&quot;&gt;add&lt;/a&gt; operations will each execute in amortized constant time. Setting the length directly may take time proportional to the new length, and may change the internal capacity so that a following add operation will need to immediately increase the buffer capacity. Other list implementations may have different performance behavior.</source>
          <target state="translated">&lt;code&gt;[]&lt;/code&gt; によって作成されたデフォルトの拡張可能リストは、内部バッファーを保持し、必要に応じてそのバッファーを拡張します。これにより、一連の&lt;a href=&quot;list/add&quot;&gt;追加&lt;/a&gt;操作がそれぞれ償却された一定時間で実行されることが保証されます。長さを直接設定すると、新しい長さに比例して時間がかかり、内部容量が変更される可能性があるため、次の追加操作でバッファ容量をすぐに増やす必要があります。他のリスト実装では、パフォーマンスの動作が異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="3632f46e1e9f41a2421ddb7c6b3609f0e3c31dfc" translate="yes" xml:space="preserve">
          <source>The default growable list, as returned by &lt;code&gt;new List()&lt;/code&gt; or &lt;code&gt;[]&lt;/code&gt;, keeps an internal buffer, and grows that buffer when necessary. This guarantees that a sequence of &lt;a href=&quot;list/add&quot;&gt;add&lt;/a&gt; operations will each execute in amortized constant time. Setting the length directly may take time proportional to the new length, and may change the internal capacity so that a following add operation will need to immediately increase the buffer capacity. Other list implementations may have different performance behavior.</source>
          <target state="translated">&lt;code&gt;new List()&lt;/code&gt; または &lt;code&gt;[]&lt;/code&gt; によって返されるデフォルトの拡張可能リストは、内部バッファーを保持し、必要に応じてそのバッファーを拡張します。これにより、一連の&lt;a href=&quot;list/add&quot;&gt;追加&lt;/a&gt;操作がそれぞれ償却された一定時間内に実行されることが保証されます。長さを直接設定すると、新しい長さに比例して時間がかかる場合があり、内部容量が変更される可能性があるため、次の追加操作でバッファ容量をすぐに増やす必要があります。他のリストの実装では、パフォーマンスの動作が異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="f109c9e50021259cb42f7f68d0f869e8717cd6ea" translate="yes" xml:space="preserve">
          <source>The default implementation of &lt;a href=&quot;stream/isbroadcast&quot;&gt;isBroadcast&lt;/a&gt; returns false. A broadcast stream inheriting from &lt;a href=&quot;stream-class&quot;&gt;Stream&lt;/a&gt; must override &lt;a href=&quot;stream/isbroadcast&quot;&gt;isBroadcast&lt;/a&gt; to return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;stream/isbroadcast&quot;&gt;isBroadcast&lt;/a&gt;のデフォルト実装はfalseを返します。&lt;a href=&quot;stream-class&quot;&gt;Streamを&lt;/a&gt;継承するブロードキャストストリームは、 &lt;code&gt;true&lt;/code&gt; を返すために&lt;a href=&quot;stream/isbroadcast&quot;&gt;isBroadcast&lt;/a&gt;をオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="2ec639ebf17f4f1411e3d38be417177157ba9c7c" translate="yes" xml:space="preserve">
          <source>The default implementation of &lt;code&gt;Uri&lt;/code&gt; always normalizes paths, so calling this function has no effect.</source>
          <target state="translated">&lt;code&gt;Uri&lt;/code&gt; のデフォルト実装は常にパスを正規化するため、この関数を呼び出しても効果はありません。</target>
        </trans-unit>
        <trans-unit id="4034ad32a38a8979080386b72bec6bbd30c88f46" translate="yes" xml:space="preserve">
          <source>The default implementation of &lt;code&gt;int&lt;/code&gt; is 64-bit two's complement integers with operations that wrap to that range on overflow.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; のデフォルトの実装は64ビットの2の補数の整数で、オーバーフロー時にその範囲にラップする演算が含まれます。</target>
        </trans-unit>
        <trans-unit id="e3a67753904c1b38d8249074d44709ab5f355ae1" translate="yes" xml:space="preserve">
          <source>The default implementation supplies a stream of pseudo-random bits that are not suitable for cryptographic purposes.</source>
          <target state="translated">デフォルトの実装では、暗号化に適していない擬似乱数ビットのストリームを提供します。</target>
        </trans-unit>
        <trans-unit id="2dbcd64623e3560e41440e826f74977bd4e932b9" translate="yes" xml:space="preserve">
          <source>The default representation always contains the first three elements. If there are less than a hundred elements in the iterable, it also contains the last two elements.</source>
          <target state="translated">デフォルトの表現は常に最初の3つの要素を含みます。イテレート可能な要素が100個以下の場合は、最後の2つの要素も含まれます。</target>
        </trans-unit>
        <trans-unit id="b99a4ff01e1e8abf98776823398181c56713a7d8" translate="yes" xml:space="preserve">
          <source>The default timeout is 20 minutes.</source>
          <target state="translated">デフォルトのタイムアウトは20分です。</target>
        </trans-unit>
        <trans-unit id="bc3ef558c428de989423ee2a29a5078cfbb34c46" translate="yes" xml:space="preserve">
          <source>The default value for &lt;code&gt;mode&lt;/code&gt; is &lt;code&gt;ProcessStartMode.normal&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; のデフォルト値は &lt;code&gt;ProcessStartMode.normal&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="56c08b31c4febaf38a57a837cfce151655187d29" translate="yes" xml:space="preserve">
          <source>The default value for &lt;code&gt;offset&lt;/code&gt; is 0, and the default value for &lt;code&gt;count&lt;/code&gt; is &lt;code&gt;buffer.length - offset&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;offset&lt;/code&gt; のデフォルト値は0で、 &lt;code&gt;count&lt;/code&gt; のデフォルト値は &lt;code&gt;buffer.length - offset&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="fa2ccf2a85466d1707cb25b7f14922a2b7573ce9" translate="yes" xml:space="preserve">
          <source>The default value is 15 seconds.</source>
          <target state="translated">デフォルト値は15秒です。</target>
        </trans-unit>
        <trans-unit id="2bab3a1eadce6e0d5dfcb6bb0d5c3e5abe6ebe21" translate="yes" xml:space="preserve">
          <source>The default value is 5.</source>
          <target state="translated">デフォルト値は5です。</target>
        </trans-unit>
        <trans-unit id="5c305811ef9e6821d99c41559431a66b2b4ea3f1" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;Dart/&amp;lt;version&amp;gt; (dart:io)&lt;/code&gt;.</source>
          <target state="translated">デフォルト値は &lt;code&gt;Dart/&amp;lt;version&amp;gt; (dart:io)&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="7717f79db2d1fdef90f0f12e8fe86f5889c42d63" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;false&lt;/code&gt; (compression disabled). To enable, set &lt;code&gt;autoCompress&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">デフォルト値は &lt;code&gt;false&lt;/code&gt; （圧縮無効）です。有効にするには、 &lt;code&gt;autoCompress&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="164cde1373477bbc1a7ef81a68599082b7803a5a" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">デフォルト値は &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="af976fa886c4f7b664fc57e291778fd6b49e246c" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">デフォルト値は &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9ccc5a550eeb0339821d24f06cba14650b35a7e7" translate="yes" xml:space="preserve">
          <source>The defining type for this typedef.</source>
          <target state="translated">この typedef の定義型。</target>
        </trans-unit>
        <trans-unit id="8437835a01b6b40fcb880e72d18dc2d90f967eb8" translate="yes" xml:space="preserve">
          <source>The defining type for this typedef. &lt;a href=&quot;typedefmirror/referent&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このtypedefの定義タイプ。&lt;a href=&quot;typedefmirror/referent&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="380be21e887932818882cf6fb9815d211bd0be0d" translate="yes" xml:space="preserve">
          <source>The description always contains the &lt;a href=&quot;message&quot;&gt;message&lt;/a&gt;.</source>
          <target state="translated">説明には常に&lt;a href=&quot;message&quot;&gt;メッセージ&lt;/a&gt;が含まれます。</target>
        </trans-unit>
        <trans-unit id="d9ee1b935855f290c2a443caf65abcf5a30ef254" translate="yes" xml:space="preserve">
          <source>The details of a failed service protocol extension RPC.</source>
          <target state="translated">失敗したサービスプロトコル拡張RPCの詳細。</target>
        </trans-unit>
        <trans-unit id="1e301488dfa97efc0b52fd237e7562a4db8be6a2" translate="yes" xml:space="preserve">
          <source>The difference between &lt;a href=&quot;zlibcodec-class&quot;&gt;ZLibCodec&lt;/a&gt; and &lt;a href=&quot;gzipcodec-class&quot;&gt;GZipCodec&lt;/a&gt; is that the &lt;a href=&quot;gzipcodec-class&quot;&gt;GZipCodec&lt;/a&gt; wraps the &lt;code&gt;ZLib&lt;/code&gt; compressed bytes in &lt;code&gt;GZip&lt;/code&gt; frames.</source>
          <target state="translated">差&lt;a href=&quot;zlibcodec-class&quot;&gt;ZLibCodec&lt;/a&gt;と&lt;a href=&quot;gzipcodec-class&quot;&gt;GZipCodecは、&lt;/a&gt;ということである&lt;a href=&quot;gzipcodec-class&quot;&gt;GZipCodecは&lt;/a&gt;ラップ &lt;code&gt;ZLib&lt;/code&gt; で圧縮されたバイト &lt;code&gt;GZip&lt;/code&gt; フレーム。</target>
        </trans-unit>
        <trans-unit id="4ca6af55a91cec719aabdb6140e0f739530b7dbd" translate="yes" xml:space="preserve">
          <source>The difference between two dates in different time zones is just the number of nanoseconds between the two points in time. It doesn't take calendar days into account. That means that the difference between two midnights in local time may be less than 24 hours times the number of days between them, if there is a daylight saving change in between. If the difference above is calculated using Australian local time, the difference is 7415 days and 23 hours, which is only 7415 whole days as reported by &lt;code&gt;inDays&lt;/code&gt;.</source>
          <target state="translated">異なるタイムゾーンの2つの日付の違いは、2つの時点間のナノ秒数です。暦日は考慮されません。つまり、夏時間の変更がある場合、現地時間の2つの真夜中の差は、それらの間の日数の24時間&amp;times;24時間未満になる可能性があります。上記の差がオーストラリアの現地時間を使用して計算された場合、差は7415日と23時間であり、これはinDaysによって報告される &lt;code&gt;inDays&lt;/code&gt; 丸日のみです。</target>
        </trans-unit>
        <trans-unit id="d2e911e5018b687d1dfc722026b080b9c60f43e0" translate="yes" xml:space="preserve">
          <source>The difference is measured in seconds and fractions of seconds. The difference above counts the number of fractional seconds between midnight at the beginning of those dates. If the dates above had been in local time, not UTC, then the difference between two midnights may not be a multiple of 24 hours due to daylight saving differences.</source>
          <target state="translated">前記差は、秒単位、端数秒単位で計測される。上記の差は、それらの日付の開始時の真夜中の間の端数秒をカウントします。上記の日付がUTCではなく現地時間であった場合、真夜中の差はサマータイムの違いにより24時間の倍数にならない可能性があります。</target>
        </trans-unit>
        <trans-unit id="2afa3212556f518096507c8cddd00d9da27e418b" translate="yes" xml:space="preserve">
          <source>The directory containing &lt;a href=&quot;../filesystementity-class&quot;&gt;this&lt;/a&gt;.</source>
          <target state="translated">含むディレクトリ&lt;a href=&quot;../filesystementity-class&quot;&gt;これを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="aad836b65b5839092fec6a2e9342863577f7672c" translate="yes" xml:space="preserve">
          <source>The directory containing &lt;a href=&quot;directory-class&quot;&gt;this&lt;/a&gt;.</source>
          <target state="translated">含むディレクトリ&lt;a href=&quot;directory-class&quot;&gt;これを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c01c18228aea359550b812c60825fefd2f81cc96" translate="yes" xml:space="preserve">
          <source>The directory containing &lt;a href=&quot;file-class&quot;&gt;this&lt;/a&gt;.</source>
          <target state="translated">含むディレクトリ&lt;a href=&quot;file-class&quot;&gt;これを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f36c3d89df5a06e8c0e4d04bd35e67f1a0b1549a" translate="yes" xml:space="preserve">
          <source>The directory containing &lt;a href=&quot;filesystementity-class&quot;&gt;this&lt;/a&gt;.</source>
          <target state="translated">含むディレクトリ&lt;a href=&quot;filesystementity-class&quot;&gt;これを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="89455e0cc1a55088c35099b0ef45c9f9cde1223e" translate="yes" xml:space="preserve">
          <source>The directory containing &lt;a href=&quot;link-class&quot;&gt;this&lt;/a&gt;.</source>
          <target state="translated">含むディレクトリ&lt;a href=&quot;link-class&quot;&gt;これを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4a30e46a7ebaf51f29dfb46a498d5ec8e10f79ce" translate="yes" xml:space="preserve">
          <source>The distance from the left side of the screen to the left side of this window.</source>
          <target state="translated">からこの窓の左側までの距離。</target>
        </trans-unit>
        <trans-unit id="9887cfb67a818298911034ae0528e2c8d47c2962" translate="yes" xml:space="preserve">
          <source>The distance from the left side of the screen to the left side of this window. &lt;a href=&quot;window/screenleft&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">画面の左側からこのウィンドウの左側までの距離。&lt;a href=&quot;window/screenleft&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c2926af98e69d88bc0031bea95e7e89ee9eb1f0b" translate="yes" xml:space="preserve">
          <source>The distance from the left side of the screen to the mouse pointer.</source>
          <target state="translated">画面左側からマウスポインタまでの距離。</target>
        </trans-unit>
        <trans-unit id="6e86c57f8f4f80d7a19b7ebfcc2a3d5a61af09c0" translate="yes" xml:space="preserve">
          <source>The distance from the left side of the screen to the mouse pointer. &lt;a href=&quot;window/screenx&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">画面の左側からマウスポインタまでの距離。&lt;a href=&quot;window/screenx&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4ca9fe14aa8d5a1f6d2d3fd242401df8b106958c" translate="yes" xml:space="preserve">
          <source>The distance from the top of the screen to the mouse pointer.</source>
          <target state="translated">画面上部からマウスポインタまでの距離。</target>
        </trans-unit>
        <trans-unit id="7ab517da50a86095a0b8fae9b9d5715e03aca478" translate="yes" xml:space="preserve">
          <source>The distance from the top of the screen to the mouse pointer. &lt;a href=&quot;window/screeny&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">画面上部からマウスポインターまでの距離。&lt;a href=&quot;window/screeny&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="52181abd9105547fbdc3ed809e9b7caeaa1d4f17" translate="yes" xml:space="preserve">
          <source>The distance from the top of the screen to the top of this window.</source>
          <target state="translated">画面上部からこの窓の上部までの距離。</target>
        </trans-unit>
        <trans-unit id="f435e7d6bffdb1461e1ce69c654411cb717e9949" translate="yes" xml:space="preserve">
          <source>The distance from the top of the screen to the top of this window. &lt;a href=&quot;window/screentop&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">画面上部からこのウィンドウ上部までの距離。&lt;a href=&quot;window/screentop&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cec71de980f7406fcbfb5bb3edd5f8faf998b0fa" translate="yes" xml:space="preserve">
          <source>The distance this window has been scrolled horizontally.</source>
          <target state="translated">このウィンドウが水平方向にスクロールされた距離。</target>
        </trans-unit>
        <trans-unit id="862f51a18a3f86acd11be71724baf4583713c5bd" translate="yes" xml:space="preserve">
          <source>The distance this window has been scrolled horizontally. &lt;a href=&quot;window/scrollx&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このウィンドウが水平方向にスクロールされた距離。&lt;a href=&quot;window/scrollx&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3ad8a461f31159ef3c6efe6929c6aa034c4d7dbd" translate="yes" xml:space="preserve">
          <source>The distance this window has been scrolled vertically.</source>
          <target state="translated">このウィンドウが縦にスクロールされた距離。</target>
        </trans-unit>
        <trans-unit id="c2de5752bbb8b33a017b57c0ce144fec34b41790" translate="yes" xml:space="preserve">
          <source>The distance this window has been scrolled vertically. &lt;a href=&quot;window/scrolly&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このウィンドウが垂直にスクロールされた距離。&lt;a href=&quot;window/scrolly&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0f703cd1eae8b983f2c3d80eb0c36203e5193c63" translate="yes" xml:space="preserve">
          <source>The document this node belongs to.</source>
          <target state="translated">このノードが属するドキュメント。</target>
        </trans-unit>
        <trans-unit id="51f9daad7bcc7006d5ac3e4979c80cdee4d9f1b7" translate="yes" xml:space="preserve">
          <source>The document this node belongs to. &lt;a href=&quot;../dart-html/node/ownerdocument&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このノードが属するドキュメント。&lt;a href=&quot;../dart-html/node/ownerdocument&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2325e9a932889e5922f8d39d5503721e9d841fc8" translate="yes" xml:space="preserve">
          <source>The document this node belongs to. &lt;a href=&quot;node/ownerdocument&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このノードが属するドキュメント。&lt;a href=&quot;node/ownerdocument&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7d64e9a21d3fec509f25aedd0e8401058f1ab045" translate="yes" xml:space="preserve">
          <source>The documentation frequently abuses notation with Dart pseudo-code such as &lt;code&gt;o.x(a)&lt;/code&gt;, where o and a are defined to be objects; what is actually meant in these cases is &lt;code&gt;o'.x(a')&lt;/code&gt; where &lt;em&gt;o'&lt;/em&gt; and &lt;em&gt;a'&lt;/em&gt; are Dart variables bound to &lt;em&gt;o&lt;/em&gt; and &lt;em&gt;a&lt;/em&gt; respectively. Furthermore, &lt;em&gt;o'&lt;/em&gt; and &lt;em&gt;a'&lt;/em&gt; are assumed to be fresh variables (meaning that they are distinct from any other variables in the program).</source>
          <target state="translated">ドキュメントでは、o &lt;code&gt;o.x(a)&lt;/code&gt; がオブジェクトとして定義されているox（a）などのDart疑似コードを使用して表記法を頻繁に乱用しています。これらの場合に実際に意味されるのは &lt;code&gt;o'.x(a')&lt;/code&gt; で、&lt;em&gt;o'&lt;/em&gt;と&lt;em&gt;a '&lt;/em&gt;はそれぞれ&lt;em&gt;o&lt;/em&gt;と&lt;em&gt;aに&lt;/em&gt;バインドされたDart変数です。さらに、&lt;em&gt;o '&lt;/em&gt;と&lt;em&gt;a'&lt;/em&gt;は新しい変数であると見なされます（つまり、プログラム内の他の変数とは区別されます）。</target>
        </trans-unit>
        <trans-unit id="b7da2e29f27b5bfe6dd310206fe91dee62b014f6" translate="yes" xml:space="preserve">
          <source>The domain that the cookie applies to.</source>
          <target state="translated">クッキーが適用されるドメイン。</target>
        </trans-unit>
        <trans-unit id="870a0da3c7795d4f9726f43e64f2ca3272f53d8f" translate="yes" xml:space="preserve">
          <source>The domain the cookie applies to.</source>
          <target state="translated">クッキーが適用されるドメイン。</target>
        </trans-unit>
        <trans-unit id="abd07b309bbb2041bc7ed6f9df90ae1a19b14a4d" translate="yes" xml:space="preserve">
          <source>The double at &lt;code&gt;address + 8 * index&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;address + 8 * index&lt;/code&gt; のdouble 。</target>
        </trans-unit>
        <trans-unit id="f7cacb8558196b53d63599316ad99f83e30bb717" translate="yes" xml:space="preserve">
          <source>The double at &lt;code&gt;address + 8 * index&lt;/code&gt;. &lt;a href=&quot;doublepointer/operator_get&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;address + 8 * index&lt;/code&gt; のdouble 。&lt;a href=&quot;doublepointer/operator_get&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b02fc0e50ff560cbfbed8ab2f98ff2a50287d855" translate="yes" xml:space="preserve">
          <source>The double at &lt;code&gt;address + 8 * index&lt;/code&gt;. &lt;a href=&quot;doublepointer/operator_put&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;address + 8 * index&lt;/code&gt; のdouble 。&lt;a href=&quot;doublepointer/operator_put&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="556aa281523e60e1f7ef28e82c24c8efa904cd27" translate="yes" xml:space="preserve">
          <source>The double at &lt;code&gt;address&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt; のdouble 。</target>
        </trans-unit>
        <trans-unit id="514fa3dcbda38f40ee76e0ffa232589853d90737" translate="yes" xml:space="preserve">
          <source>The double at &lt;code&gt;address&lt;/code&gt;. &lt;a href=&quot;doublepointer/value&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt; のdouble 。&lt;a href=&quot;doublepointer/value&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e85c30a88eed9b4ffecca36df95cdfd21d03d1ce" translate="yes" xml:space="preserve">
          <source>The duration that was exceeded.</source>
          <target state="translated">超えた期間。</target>
        </trans-unit>
        <trans-unit id="00a76b69f045e4456e2d54d53510eb24c1a4541f" translate="yes" xml:space="preserve">
          <source>The editor, or a similar tool aimed at the programmer, may report if no declaration of an annotated member is inherited by the class from either a superclass or an interface.</source>
          <target state="translated">エディタやプログラマ向けの同様のツールは、注釈付きメンバーの宣言がスーパークラスやインターフェイスからクラスに継承されていない場合に報告することができます。</target>
        </trans-unit>
        <trans-unit id="bbb53d3cbb0e0443a32c8121e7486efef3007f7f" translate="yes" xml:space="preserve">
          <source>The elapsed number of clock ticks increases by &lt;a href=&quot;frequency&quot;&gt;frequency&lt;/a&gt; every second.</source>
          <target state="translated">クロックティックの経過数は、&lt;a href=&quot;frequency&quot;&gt;周波数&lt;/a&gt;ごとに1秒ごとに増加します。</target>
        </trans-unit>
        <trans-unit id="40b5c19e5537408ce186b43303e3dd1e6279aa0d" translate="yes" xml:space="preserve">
          <source>The elapsed number of clock ticks since calling &lt;a href=&quot;start&quot;&gt;start&lt;/a&gt; while the &lt;a href=&quot;../stopwatch-class&quot;&gt;Stopwatch&lt;/a&gt; is running.</source>
          <target state="translated">&lt;a href=&quot;../stopwatch-class&quot;&gt;ストップウォッチの&lt;/a&gt;実行中に&lt;a href=&quot;start&quot;&gt;start&lt;/a&gt;を呼び出してからの経過クロック数。</target>
        </trans-unit>
        <trans-unit id="a26224ec56e6f73de09e572ece5faafd7ebfbf85" translate="yes" xml:space="preserve">
          <source>The elapsed number of clock ticks since calling &lt;a href=&quot;stopwatch/start&quot;&gt;start&lt;/a&gt; while the &lt;a href=&quot;stopwatch-class&quot;&gt;Stopwatch&lt;/a&gt; is running. &lt;a href=&quot;stopwatch/elapsedticks&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;stopwatch-class&quot;&gt;ストップウォッチの&lt;/a&gt;実行中に&lt;a href=&quot;stopwatch/start&quot;&gt;start&lt;/a&gt;を呼び出してからの経過クロック数。&lt;a href=&quot;stopwatch/elapsedticks&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5ace8c6ed5509caf3379cb881ad00df3ac6e2307" translate="yes" xml:space="preserve">
          <source>The element can also define an uninteractive region of the map.</source>
          <target state="translated">要素は、マップの非インタラクティブ領域を定義することもできます。</target>
        </trans-unit>
        <trans-unit id="37414bee83d0ed4712ed099c71c9d7aed0feb2e4" translate="yes" xml:space="preserve">
          <source>The element in the queue.</source>
          <target state="translated">キュー内の要素。</target>
        </trans-unit>
        <trans-unit id="611fb0e408c2eabd59a8c19d98e296b4f49503c8" translate="yes" xml:space="preserve">
          <source>The element order in the queue is as if the elements were added using &lt;a href=&quot;addlast&quot;&gt;addLast&lt;/a&gt; in the order provided by &lt;code&gt;elements.iterator&lt;/code&gt;.</source>
          <target state="translated">キュー内の要素の順序は、要素が &lt;code&gt;elements.iterator&lt;/code&gt; によって提供された順序で&lt;a href=&quot;addlast&quot;&gt;addLast&lt;/a&gt;を使用して追加されたかのようです。</target>
        </trans-unit>
        <trans-unit id="6dab1a05e3dcd275ddddd552f6ac4c61cfe17d06" translate="yes" xml:space="preserve">
          <source>The elements are added to the queue, as by &lt;a href=&quot;addlast&quot;&gt;addLast&lt;/a&gt;, in the order given by &lt;code&gt;elements.iterator&lt;/code&gt;.</source>
          <target state="translated">要素は、&lt;a href=&quot;addlast&quot;&gt;addLast&lt;/a&gt;によって、 &lt;code&gt;elements.iterator&lt;/code&gt; によって指定された順序でキューに追加されます。</target>
        </trans-unit>
        <trans-unit id="7171553564398c81a69b04f6845c2547de01d1f8" translate="yes" xml:space="preserve">
          <source>The elements are in iteration order. The list is fixed-length if &lt;code&gt;growable&lt;/code&gt; is false.</source>
          <target state="translated">要素は反復順になっています。 &lt;code&gt;growable&lt;/code&gt; がfalseの場合、リストは固定長です。</target>
        </trans-unit>
        <trans-unit id="c2b09a7f9dde9aba8f715c90b9bd45156b7d85b8" translate="yes" xml:space="preserve">
          <source>The elements are iterated in insertion order.</source>
          <target state="translated">要素は挿入順に反復されます。</target>
        </trans-unit>
        <trans-unit id="43921e2efd6d91fea3c490cfec9ee0c54c9707cd" translate="yes" xml:space="preserve">
          <source>The elements can be computed by stepping through &lt;a href=&quot;../../dart-core/iterable/iterator&quot;&gt;iterator&lt;/a&gt; until &lt;code&gt;count&lt;/code&gt; elements have been seen.</source>
          <target state="translated">要素は、 &lt;code&gt;count&lt;/code&gt; 要素が&lt;a href=&quot;../../dart-core/iterable/iterator&quot;&gt;見つかる&lt;/a&gt;までイテレータをステップ実行して計算できます。</target>
        </trans-unit>
        <trans-unit id="fab372605d1704f2e3d3eceb8e2dc768b05e3762" translate="yes" xml:space="preserve">
          <source>The elements can be computed by stepping through &lt;a href=&quot;../../dart-core/iterable/iterator&quot;&gt;iterator&lt;/a&gt; until an element is found where &lt;code&gt;test(element)&lt;/code&gt; is false. At that point, the returned iterable stops (its &lt;code&gt;moveNext()&lt;/code&gt; returns false).</source>
          <target state="translated">要素は、 &lt;code&gt;test(element)&lt;/code&gt; がfalse である要素が見つかるまで&lt;a href=&quot;../../dart-core/iterable/iterator&quot;&gt;イテレータを&lt;/a&gt;ステップ実行して計算できます。その時点で、返された &lt;code&gt;moveNext()&lt;/code&gt; 停止します（そのmoveNext（）はfalseを返します）。</target>
        </trans-unit>
        <trans-unit id="18f29bd1d58d00d94eb7957de1ce9b6fbd628f4d" translate="yes" xml:space="preserve">
          <source>The elements can be computed by stepping through &lt;a href=&quot;iterator&quot;&gt;iterator&lt;/a&gt; until &lt;code&gt;count&lt;/code&gt; elements have been seen.</source>
          <target state="translated">要素は、 &lt;code&gt;count&lt;/code&gt; 要素が&lt;a href=&quot;iterator&quot;&gt;見つかる&lt;/a&gt;までイテレータをステップ実行して計算できます。</target>
        </trans-unit>
        <trans-unit id="7ed86a4a36f5bdb3e91b5033f8b71279b20a3652" translate="yes" xml:space="preserve">
          <source>The elements can be computed by stepping through &lt;a href=&quot;iterator&quot;&gt;iterator&lt;/a&gt; until an element is found where &lt;code&gt;test(element)&lt;/code&gt; is false. At that point, the returned iterable stops (its &lt;code&gt;moveNext()&lt;/code&gt; returns false).</source>
          <target state="translated">要素は、 &lt;code&gt;test(element)&lt;/code&gt; がfalse である要素が見つかるまで&lt;a href=&quot;iterator&quot;&gt;イテレータを&lt;/a&gt;ステップ実行して計算できます。その時点で、返された &lt;code&gt;moveNext()&lt;/code&gt; 停止します（そのmoveNext（）はfalseを返します）。</target>
        </trans-unit>
        <trans-unit id="7d36cef38d385bbf015c1887277d85342bf74476" translate="yes" xml:space="preserve">
          <source>The elements of &lt;code&gt;source&lt;/code&gt; are written into &lt;code&gt;target&lt;/code&gt; from position &lt;code&gt;at&lt;/code&gt;. The &lt;code&gt;source&lt;/code&gt; must not contain more elements after writing the last position of &lt;code&gt;target&lt;/code&gt;.</source>
          <target state="translated">元素 &lt;code&gt;source&lt;/code&gt; 書き込まれている &lt;code&gt;target&lt;/code&gt; 位置から &lt;code&gt;at&lt;/code&gt; 。 &lt;code&gt;source&lt;/code&gt; 最後の位置書いた後より多くの要素を含んではならない &lt;code&gt;target&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="482ffb2c9205d09df07071fa9166e744359a15e9" translate="yes" xml:space="preserve">
          <source>The elements of a &lt;code&gt;HashSet&lt;/code&gt; must have consistent equality and hashCode implementations. This means that the equals operation must define a stable equivalence relation on the elements (reflexive, symmetric, transitive, and consistent over time), and that the hashCode must consistent with equality, so that the same for objects that are considered equal.</source>
          <target state="translated">&lt;code&gt;HashSet&lt;/code&gt; の要素には、一貫性のある等価性とhashCode実装が必要です。これは、equals操作が要素の安定した同値関係（再帰的、対称的、推移的、および経時的に一貫性がある）を定義する必要があること、およびhashCodeが同等性と一致している必要があることを意味します。</target>
        </trans-unit>
        <trans-unit id="718a850d45eeb3561e384b579beaee0160edf181" translate="yes" xml:space="preserve">
          <source>The elements of a &lt;code&gt;LinkedHashSet&lt;/code&gt; must have consistent &lt;a href=&quot;../dart-core/object/operator_equals&quot;&gt;Object.==&lt;/a&gt; and &lt;a href=&quot;../dart-core/object/hashcode&quot;&gt;Object.hashCode&lt;/a&gt; implementations. This means that the &lt;code&gt;==&lt;/code&gt; operator must define a stable equivalence relation on the elements (reflexive, symmetric, transitive, and consistent over time), and that &lt;code&gt;hashCode&lt;/code&gt; must be the same for objects that are considered equal by &lt;code&gt;==&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LinkedHashSet&lt;/code&gt; の要素には、一貫した&lt;a href=&quot;../dart-core/object/operator_equals&quot;&gt;Object。==&lt;/a&gt;および&lt;a href=&quot;../dart-core/object/hashcode&quot;&gt;Object.hashCode&lt;/a&gt;実装が必要です。これは、 &lt;code&gt;==&lt;/code&gt; 演算子が要素に安定した同値関係（再帰的、対称的、推移的、および経時的に一貫性がある）を定義する必要があり、 &lt;code&gt;hashCode&lt;/code&gt; が &lt;code&gt;==&lt;/code&gt; と等しいと見なされるオブジェクトで同じでなければならないことを意味します。</target>
        </trans-unit>
        <trans-unit id="b551211bb0a47b3112b7cc2f1c0daa3b6a591d88" translate="yes" xml:space="preserve">
          <source>The elements of the iterable are accessed by getting an &lt;a href=&quot;iterator-class&quot;&gt;Iterator&lt;/a&gt; using the &lt;a href=&quot;iterable/iterator&quot;&gt;iterator&lt;/a&gt; getter, and using it to step through the values. Stepping with the iterator is done by calling &lt;a href=&quot;iterator/movenext&quot;&gt;Iterator.moveNext&lt;/a&gt;, and if the call returns &lt;code&gt;true&lt;/code&gt;, the iterator has now moved to the next element, which is then available as &lt;a href=&quot;iterator/current&quot;&gt;Iterator.current&lt;/a&gt;. If the call returns &lt;code&gt;false&lt;/code&gt;, there are no more elements, and &lt;code&gt;iterator.current&lt;/code&gt; returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">反復可能の要素を取得することによってアクセスされる&lt;a href=&quot;iterator-class&quot;&gt;イテレータを&lt;/a&gt;使用して、&lt;a href=&quot;iterable/iterator&quot;&gt;イテレータ&lt;/a&gt;ゲッター、および値を介してステップにそれを使用します。イテレーターのステップ実行は、&lt;a href=&quot;iterator/movenext&quot;&gt;Iterator.moveNext&lt;/a&gt;を呼び出すことによって行われ、呼び出しが &lt;code&gt;true&lt;/code&gt; を返す場合、イテレーターは次の要素に移動しており、次の要素は&lt;a href=&quot;iterator/current&quot;&gt;Iterator.current&lt;/a&gt;として使用できます。呼び出しが &lt;code&gt;false&lt;/code&gt; を返す場合、要素はなくなり、 &lt;code&gt;iterator.current&lt;/code&gt; は &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="6625dda71621f1e304076aa1c6c3acef7843919d" translate="yes" xml:space="preserve">
          <source>The elements of the iterable are accessed by getting an &lt;a href=&quot;iterator-class&quot;&gt;Iterator&lt;/a&gt; using the &lt;a href=&quot;iterable/iterator&quot;&gt;iterator&lt;/a&gt; getter, and using it to step through the values. Stepping with the iterator is done by calling &lt;a href=&quot;iterator/movenext&quot;&gt;Iterator.moveNext&lt;/a&gt;, and if the call returns &lt;code&gt;true&lt;/code&gt;, the iterator has now moved to the next element, which is then available as &lt;a href=&quot;iterator/current&quot;&gt;Iterator.current&lt;/a&gt;. If the call returns &lt;code&gt;false&lt;/code&gt;, there are no more elements. The &lt;a href=&quot;iterator/current&quot;&gt;Iterator.current&lt;/a&gt; value must only be used when the most recent call to &lt;a href=&quot;iterator/movenext&quot;&gt;Iterator.moveNext&lt;/a&gt; has returned &lt;code&gt;true&lt;/code&gt;. If it is used before calling &lt;a href=&quot;iterator/movenext&quot;&gt;Iterator.moveNext&lt;/a&gt; the first time on an iterator, or after a call has returned false or has thrown an error, reading &lt;a href=&quot;iterator/current&quot;&gt;Iterator.current&lt;/a&gt; may throw or may return an arbitrary value.</source>
          <target state="translated">&lt;a href=&quot;iterator-class&quot;&gt;イテレータ&lt;/a&gt;の要素にアクセスするには、&lt;a href=&quot;iterable/iterator&quot;&gt;イテレータ&lt;/a&gt;ゲッタを使用してイテレータを取得し、それを使用して値をステップスルーします。イテレータを使用したステップは、&lt;a href=&quot;iterator/movenext&quot;&gt;Iterator.moveNext&lt;/a&gt;を呼び出すことによって実行され、呼び出しが &lt;code&gt;true&lt;/code&gt; を返す場合、イテレータは次の要素に移動し、&lt;a href=&quot;iterator/current&quot;&gt;Iterator.current&lt;/a&gt;として使用できます。呼び出しが &lt;code&gt;false&lt;/code&gt; を返す場合、それ以上の要素はありません。&lt;a href=&quot;iterator/current&quot;&gt;Iterator.currentの&lt;/a&gt;への最新の呼び出し時にのみ値が使用されている必要があり&lt;a href=&quot;iterator/movenext&quot;&gt;Iterator.moveNextが&lt;/a&gt;戻ってきた &lt;code&gt;true&lt;/code&gt; 。&lt;a href=&quot;iterator/movenext&quot;&gt;Iterator.moveNextを&lt;/a&gt;呼び出す前に使用された場合イテレータで初めて、または呼び出しがfalseを返した後、またはエラーをスローした後、&lt;a href=&quot;iterator/current&quot;&gt;Iterator.currentを&lt;/a&gt;読み取ると、任意の値がスローまたは返される場合があります。</target>
        </trans-unit>
        <trans-unit id="55deff8058a5274c1088a9cf9f5ffe943859ef79" translate="yes" xml:space="preserve">
          <source>The empty iterable has no elements, and iterating it always stops immediately.</source>
          <target state="translated">空のイテレータブルは要素を持たず、反復処理は常に即座に停止します。</target>
        </trans-unit>
        <trans-unit id="279ff1b86db5c00dc9abe279e5a380f39dc1e927" translate="yes" xml:space="preserve">
          <source>The empty symbol is the name of libraries with no library declaration, and the base-name of the unnamed constructor.</source>
          <target state="translated">空のシンボルは、ライブラリ宣言のないライブラリの名前であり、名前のないコンストラクタのベース名です。</target>
        </trans-unit>
        <trans-unit id="4a62fb1476dd120230232e3befd3124bb789422d" translate="yes" xml:space="preserve">
          <source>The empty symbol.</source>
          <target state="translated">空の記号。</target>
        </trans-unit>
        <trans-unit id="901fd056bb3a53b49c4f86f2e9feead92f0b7bda" translate="yes" xml:space="preserve">
          <source>The empty symbol. &lt;a href=&quot;symbol/empty-constant&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">空のシンボル。&lt;a href=&quot;symbol/empty-constant&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5674e290fd33c349845979b9dae1f33a6300cea5" translate="yes" xml:space="preserve">
          <source>The encoding is required to be properly padded.</source>
          <target state="translated">エンコードには適切なパディングが必要です。</target>
        </trans-unit>
        <trans-unit id="b853dccc5408f57cc0893ef3175cb053c0ca443a" translate="yes" xml:space="preserve">
          <source>The encoding of elements of lists and maps are indented and put on separate lines. The &lt;code&gt;indent&lt;/code&gt; string is prepended to these elements, once for each level of indentation.</source>
          <target state="translated">リストとマップの要素のエンコーディングはインデントされ、別々の行に配置されます。 &lt;code&gt;indent&lt;/code&gt; インデントのレベルごとに一度文字列は、これらの要素の前に付加されます。</target>
        </trans-unit>
        <trans-unit id="a1abcb882c9460f2f23665e6fbeea510f689fb12" translate="yes" xml:space="preserve">
          <source>The encoding used for decoding &lt;code&gt;stdout&lt;/code&gt; and &lt;code&gt;stderr&lt;/code&gt; into text is controlled through &lt;code&gt;stdoutEncoding&lt;/code&gt; and &lt;code&gt;stderrEncoding&lt;/code&gt;. The default encoding is &lt;a href=&quot;../systemencoding-constant&quot;&gt;systemEncoding&lt;/a&gt;. If &lt;code&gt;null&lt;/code&gt; is used no decoding will happen and the &lt;a href=&quot;../processresult-class&quot;&gt;ProcessResult&lt;/a&gt; will hold binary data.</source>
          <target state="translated">&lt;code&gt;stdout&lt;/code&gt; および &lt;code&gt;stderr&lt;/code&gt; をテキストにデコードするために使用されるエンコーディングは、 &lt;code&gt;stdoutEncoding&lt;/code&gt; および &lt;code&gt;stderrEncoding&lt;/code&gt; によって制御されます。デフォルトのエンコーディングは&lt;a href=&quot;../systemencoding-constant&quot;&gt;systemEncoding&lt;/a&gt;です。場合は &lt;code&gt;null&lt;/code&gt; が使用されて何のデコードは起こりませんし、&lt;a href=&quot;../processresult-class&quot;&gt;ProcessResultは、&lt;/a&gt;バイナリデータを保持します。</target>
        </trans-unit>
        <trans-unit id="138febf9c8194f681410510adff41302b32e4989" translate="yes" xml:space="preserve">
          <source>The entire image from &lt;code&gt;source&lt;/code&gt; will be drawn to this context with its top left corner at the point (&lt;code&gt;destX&lt;/code&gt;, &lt;code&gt;destY&lt;/code&gt;). If the image is larger than canvas will allow, the image will be clipped to fit the available space.</source>
          <target state="translated">&lt;code&gt;source&lt;/code&gt; からの画像全体が、ポイント（ &lt;code&gt;destX&lt;/code&gt; 、 &lt;code&gt;destY&lt;/code&gt; ）を左上隅としてこのコンテキストに描画されます。画像がキャンバスで許容されるよりも大きい場合、画像は使用可能なスペースに合わせて切り取られます。</target>
        </trans-unit>
        <trans-unit id="3587b1ce19f651e708a039062873bf0ae28f5d94" translate="yes" xml:space="preserve">
          <source>The entry must currently be in a linked list when this method is called.</source>
          <target state="translated">このメソッドが呼び出されたとき、エントリは現在リンクされたリスト内にある必要があります。</target>
        </trans-unit>
        <trans-unit id="cbc4f4e6aac2a00a5f05790ab76e0af2e98972a5" translate="yes" xml:space="preserve">
          <source>The entry object of the first element in the queue.</source>
          <target state="translated">キューの最初の要素のエントリオブジェクト。</target>
        </trans-unit>
        <trans-unit id="ea49f8f43d421ae0df8f6c8215ebb7c64021a7be" translate="yes" xml:space="preserve">
          <source>The entry object of the first element in the queue. &lt;a href=&quot;doublelinkedqueue/firstentry&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">キューの最初の要素のエントリオブジェクト。&lt;a href=&quot;doublelinkedqueue/firstentry&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aa382b86e2e60a1a64bd84a27271cab44d9898d2" translate="yes" xml:space="preserve">
          <source>The entry object of the last element in the queue.</source>
          <target state="translated">キューの最後の要素のエントリオブジェクト。</target>
        </trans-unit>
        <trans-unit id="e5e1aa0198154863369bb2c27e3ab3ed1d94db47" translate="yes" xml:space="preserve">
          <source>The entry object of the last element in the queue. &lt;a href=&quot;doublelinkedqueue/lastentry&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">キューの最後の要素のエントリオブジェクト。&lt;a href=&quot;doublelinkedqueue/lastentry&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d1b4611a3222fc8a577ce580bb2079b77f13db1b" translate="yes" xml:space="preserve">
          <source>The entry objects can also be accessed using &lt;a href=&quot;firstentry&quot;&gt;firstEntry&lt;/a&gt; and &lt;a href=&quot;lastentry&quot;&gt;lastEntry&lt;/a&gt;, and iterated using &lt;a href=&quot;../doublelinkedqueueentry/nextentry&quot;&gt;DoubleLinkedQueueEntry.nextEntry()&lt;/a&gt; and &lt;a href=&quot;../doublelinkedqueueentry/previousentry&quot;&gt;DoubleLinkedQueueEntry.previousEntry()&lt;/a&gt;.</source>
          <target state="translated">エントリオブジェクトには、&lt;a href=&quot;firstentry&quot;&gt;firstEntry&lt;/a&gt;および&lt;a href=&quot;lastentry&quot;&gt;lastEntry&lt;/a&gt;を使用してアクセスしたり、&lt;a href=&quot;../doublelinkedqueueentry/nextentry&quot;&gt;DoubleLinkedQueueEntry.nextEntry（）&lt;/a&gt;および&lt;a href=&quot;../doublelinkedqueueentry/previousentry&quot;&gt;DoubleLinkedQueueEntry.previousEntry（）&lt;/a&gt;を使用して反復したりすることもできます。</target>
        </trans-unit>
        <trans-unit id="68f4cb12ceecae8788e330a56ff5b1c40e496463" translate="yes" xml:space="preserve">
          <source>The entry objects can also be accessed using &lt;a href=&quot;firstentry&quot;&gt;firstEntry&lt;/a&gt;, and they can be iterated using &lt;a href=&quot;../doublelinkedqueueentry/nextentry&quot;&gt;DoubleLinkedQueueEntry.nextEntry()&lt;/a&gt; and &lt;a href=&quot;../doublelinkedqueueentry/previousentry&quot;&gt;DoubleLinkedQueueEntry.previousEntry()&lt;/a&gt;.</source>
          <target state="translated">エントリオブジェクトは&lt;a href=&quot;firstentry&quot;&gt;firstEntry&lt;/a&gt;を使用してアクセスすることもでき、&lt;a href=&quot;../doublelinkedqueueentry/nextentry&quot;&gt;DoubleLinkedQueueEntry.nextEntry（）&lt;/a&gt;および&lt;a href=&quot;../doublelinkedqueueentry/previousentry&quot;&gt;DoubleLinkedQueueEntry.previousEntry（）&lt;/a&gt;を使用して反復できます。</target>
        </trans-unit>
        <trans-unit id="512f5b0b5355827ee4983f44f418538136f49e4b" translate="yes" xml:space="preserve">
          <source>The entry objects can also be accessed using &lt;a href=&quot;firstentry&quot;&gt;firstEntry&lt;/a&gt;, and they can be iterated using &lt;a href=&quot;../doublelinkedqueueentry/nextentry&quot;&gt;DoubleLinkedQueueEntry.nextEntry&lt;/a&gt; and &lt;a href=&quot;../doublelinkedqueueentry/previousentry&quot;&gt;DoubleLinkedQueueEntry.previousEntry&lt;/a&gt;.</source>
          <target state="translated">エントリオブジェクトには&lt;a href=&quot;firstentry&quot;&gt;firstEntry&lt;/a&gt;を使用してアクセスすることもでき、&lt;a href=&quot;../doublelinkedqueueentry/nextentry&quot;&gt;DoubleLinkedQueueEntry.nextEntry&lt;/a&gt;および&lt;a href=&quot;../doublelinkedqueueentry/previousentry&quot;&gt;DoubleLinkedQueueEntry.previousEntry&lt;/a&gt;を使用して繰り返すことができます。</target>
        </trans-unit>
        <trans-unit id="8fec9b6707bc2485845f89550a5b30d16e6fc32d" translate="yes" xml:space="preserve">
          <source>The entry objects can also be accessed using &lt;a href=&quot;lastentry&quot;&gt;lastEntry&lt;/a&gt;, and they can be iterated using &lt;a href=&quot;../doublelinkedqueueentry/nextentry&quot;&gt;DoubleLinkedQueueEntry.nextEntry()&lt;/a&gt; and &lt;a href=&quot;../doublelinkedqueueentry/previousentry&quot;&gt;DoubleLinkedQueueEntry.previousEntry()&lt;/a&gt;.</source>
          <target state="translated">エントリオブジェクトは&lt;a href=&quot;lastentry&quot;&gt;lastEntry&lt;/a&gt;を使用してアクセスすることもでき、&lt;a href=&quot;../doublelinkedqueueentry/nextentry&quot;&gt;DoubleLinkedQueueEntry.nextEntry（）&lt;/a&gt;および&lt;a href=&quot;../doublelinkedqueueentry/previousentry&quot;&gt;DoubleLinkedQueueEntry.previousEntry（）&lt;/a&gt;を使用して反復できます。</target>
        </trans-unit>
        <trans-unit id="cf5a8a686bc59481e45074ac792f111d7d731288" translate="yes" xml:space="preserve">
          <source>The entry objects can also be accessed using &lt;a href=&quot;lastentry&quot;&gt;lastEntry&lt;/a&gt;, and they can be iterated using &lt;a href=&quot;../doublelinkedqueueentry/nextentry&quot;&gt;DoubleLinkedQueueEntry.nextEntry&lt;/a&gt; and &lt;a href=&quot;../doublelinkedqueueentry/previousentry&quot;&gt;DoubleLinkedQueueEntry.previousEntry&lt;/a&gt;.</source>
          <target state="translated">エントリオブジェクトには、&lt;a href=&quot;lastentry&quot;&gt;lastEntry&lt;/a&gt;を使用してアクセスすることもでき、&lt;a href=&quot;../doublelinkedqueueentry/nextentry&quot;&gt;DoubleLinkedQueueEntry.nextEntry&lt;/a&gt;および&lt;a href=&quot;../doublelinkedqueueentry/previousentry&quot;&gt;DoubleLinkedQueueEntry.previousEntry&lt;/a&gt;を使用して繰り返すことができます。</target>
        </trans-unit>
        <trans-unit id="bd242ff242eb16e96207e565b639e77a506043fe" translate="yes" xml:space="preserve">
          <source>The environment for this process as a map from string key to string value.</source>
          <target state="translated">文字列キーから文字列値へのマップとしての処理環境。</target>
        </trans-unit>
        <trans-unit id="3d6252a20bbb79c0fde67e93c8ca6cec1431f156" translate="yes" xml:space="preserve">
          <source>The environment for this process as a map from string key to string value. &lt;a href=&quot;platform/environment&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">文字列キーから文字列値へのマップとしてのこのプロセスの環境。&lt;a href=&quot;platform/environment&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9afad3d326e6d3a75c818990dfd6cc602a08a8e4" translate="yes" xml:space="preserve">
          <source>The equality holds if and only if</source>
          <target state="translated">等価性は以下の場合にのみ成立します。</target>
        </trans-unit>
        <trans-unit id="b3d4b8f01426e5a06b9ed09d96f7a33c8e0b2896" translate="yes" xml:space="preserve">
          <source>The equality operator.</source>
          <target state="translated">等価演算子です。</target>
        </trans-unit>
        <trans-unit id="d508a64ed7c51394fcda428b60c4838c62743d38" translate="yes" xml:space="preserve">
          <source>The equality operator. &lt;a href=&quot;../dart-core/list/operator_equals&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">等価演算子。&lt;a href=&quot;../dart-core/list/operator_equals&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="93bee1034b60a3b987a68ebdbac84817187c91a0" translate="yes" xml:space="preserve">
          <source>The equality operator. &lt;a href=&quot;../dart-core/object/operator_equals&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">等価演算子。&lt;a href=&quot;../dart-core/object/operator_equals&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0cce5822b8f257c1ed0be93df20c96a598bbdb33" translate="yes" xml:space="preserve">
          <source>The equality operator. &lt;a href=&quot;cssrect/operator_equals&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">等価演算子。&lt;a href=&quot;cssrect/operator_equals&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cfe7e2eb42caa2ded79cac385c2da0373b76e575" translate="yes" xml:space="preserve">
          <source>The equality operator. &lt;a href=&quot;domrectreadonly/operator_equals&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">等価演算子。&lt;a href=&quot;domrectreadonly/operator_equals&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3b60d0b2a727ba26a0b1bf28039ea9d7cbbc27db" translate="yes" xml:space="preserve">
          <source>The equality operator. &lt;a href=&quot;jsobject/operator_equals&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">等価演算子。&lt;a href=&quot;jsobject/operator_equals&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e46c3dbeee00323161712f0de4c0c873c62d94a0" translate="yes" xml:space="preserve">
          <source>The equality operator. &lt;a href=&quot;object/operator_equals&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">等価演算子。&lt;a href=&quot;object/operator_equals&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2a5828a9d7970a2ea3cb8e71aa606a7ba09e68a1" translate="yes" xml:space="preserve">
          <source>The equality operator. &lt;a href=&quot;rectangle/operator_equals&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">等価演算子。&lt;a href=&quot;rectangle/operator_equals&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8be1a59481d82cb5d6fdf625ff5f92e1661a2bac" translate="yes" xml:space="preserve">
          <source>The equality used to determine whether &lt;code&gt;element&lt;/code&gt; is equal to an element of the iterable defaults to the &lt;a href=&quot;../../dart-core/object/operator_equals&quot;&gt;Object.==&lt;/a&gt; of the element.</source>
          <target state="translated">&lt;code&gt;element&lt;/code&gt; がイテラブルの要素と等しいかどうかを決定するために使用される等価性は、デフォルトで要素の&lt;a href=&quot;../../dart-core/object/operator_equals&quot;&gt;Object。==&lt;/a&gt;になります。</target>
        </trans-unit>
        <trans-unit id="867ca0d012edeadffcc617d71eb7403a30524c71" translate="yes" xml:space="preserve">
          <source>The equality used to determine whether &lt;code&gt;element&lt;/code&gt; is equal to an element of the iterable defaults to the &lt;a href=&quot;../object/operator_equals&quot;&gt;Object.==&lt;/a&gt; of the element.</source>
          <target state="translated">&lt;code&gt;element&lt;/code&gt; がイテラブルの要素と等しいかどうかを決定するために使用される等価性は、デフォルトで要素の&lt;a href=&quot;../object/operator_equals&quot;&gt;Object。==&lt;/a&gt;になります。</target>
        </trans-unit>
        <trans-unit id="b0d97394fd4d8dcba6ffca8413ca710fd9141906" translate="yes" xml:space="preserve">
          <source>The error code associated with a failed service protocol extension RPC.</source>
          <target state="translated">失敗したサービスプロトコル拡張RPCに関連するエラーコード。</target>
        </trans-unit>
        <trans-unit id="873270236e77be9ac0ae3c8bfb2582804c21fea1" translate="yes" xml:space="preserve">
          <source>The error zone is the one that is responsible for dealing with uncaught errors.</source>
          <target state="translated">捕まえられなかったエラーを処理する責任があるのは、エラーゾーンです。</target>
        </trans-unit>
        <trans-unit id="321482818fe8c486da5d5d2fe11ddcb179ed1f98" translate="yes" xml:space="preserve">
          <source>The error zone is the one that is responsible for dealing with uncaught errors. &lt;a href=&quot;zone/errorzone&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">エラーゾーンは、キャッチされていないエラーの処理を担当するゾーンです。&lt;a href=&quot;zone/errorzone&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="649a6e900bbfbc4f5d01ce99f4751b9d623d081a" translate="yes" xml:space="preserve">
          <source>The errors are sent back as two elements lists. The first element is a &lt;code&gt;String&lt;/code&gt; representation of the error, usually created by calling &lt;code&gt;toString&lt;/code&gt; on the error. The second element is a &lt;code&gt;String&lt;/code&gt; representation of an accompanying stack trace, or &lt;code&gt;null&lt;/code&gt; if no stack trace was provided. To convert this back to a &lt;a href=&quot;../../dart-core/stacktrace-class&quot;&gt;StackTrace&lt;/a&gt; object, use &lt;a href=&quot;../../dart-core/stacktrace/stacktrace.fromstring&quot;&gt;StackTrace.fromString&lt;/a&gt;.</source>
          <target state="translated">エラーは2つの要素リストとして返送されます。最初の要素はエラーの &lt;code&gt;String&lt;/code&gt; 表現で、通常はエラー時に &lt;code&gt;toString&lt;/code&gt; を呼び出すことで作成されます。2番目の要素は、付随するスタックトレースの &lt;code&gt;String&lt;/code&gt; 表現、またはスタックトレースが提供されなかった場合は &lt;code&gt;null&lt;/code&gt; です。このバック変換するには&lt;a href=&quot;../../dart-core/stacktrace-class&quot;&gt;スタックトレース&lt;/a&gt;オブジェクトを使用&lt;a href=&quot;../../dart-core/stacktrace/stacktrace.fromstring&quot;&gt;StackTrace.fromStringを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c479691ecd45d8652d9375416e72556025fd3f38" translate="yes" xml:space="preserve">
          <source>The escaped text should only be used inside quoted HTML attributes values or as text content of a normal element. Using the escaped text inside a tag, but not inside a quoted attribute value, is still dangerous.</source>
          <target state="translated">エスケープされたテキストは、引用符で囲まれたHTMLの属性値の内部か、通常の要素のテキスト内容としてのみ使用されるべきです。エスケープされたテキストをタグ内で使用しても、引用符で囲まれた属性値の中ではなく、タグ内で使用するのはやはり危険です。</target>
        </trans-unit>
        <trans-unit id="f8c81d47af2a9208c7645d84e20fc0c16d5fc8dc" translate="yes" xml:space="preserve">
          <source>The escaping only works for elements with normal HTML content, and not for, for example, script or style element content, which require escapes matching their particular content syntax.</source>
          <target state="translated">エスケープは通常のHTMLコンテンツを持つ要素に対してのみ機能し、例えばスクリプトやスタイル要素のコンテンツに対しては機能しません。</target>
        </trans-unit>
        <trans-unit id="04a2820bdac71813b61268b5f73c21362e5a0c58" translate="yes" xml:space="preserve">
          <source>The event key is in the left key location.</source>
          <target state="translated">イベントキーは左キーの位置にあります。</target>
        </trans-unit>
        <trans-unit id="e247d7c4e852153b1f64c17d1771a5ff84a84745" translate="yes" xml:space="preserve">
          <source>The event key is in the right key location.</source>
          <target state="translated">イベントキーの位置が合っています。</target>
        </trans-unit>
        <trans-unit id="0a5016edf906758555d6bb11167d6ec5233c0848" translate="yes" xml:space="preserve">
          <source>The event key is not distinguished as the left or right version of the key, and did not originate from the numeric keypad (or did not originate with a virtual key corresponding to the numeric keypad).</source>
          <target state="translated">イベントキーは、左右版キーとして区別されず、テンキーに由来するものではない(またはテンキーに対応する仮想キーに由来するものではない)。</target>
        </trans-unit>
        <trans-unit id="58eebda6e3feaa565a2688eae1c6e5a3840c8acb" translate="yes" xml:space="preserve">
          <source>The event key originated on a game controller or a joystick on a mobile device.</source>
          <target state="translated">イベントキーは、ゲームコントローラまたはモバイルデバイスのジョイスティックで発生したものです。</target>
        </trans-unit>
        <trans-unit id="088b1b161a598f7f8f94a0891c789b194f51153d" translate="yes" xml:space="preserve">
          <source>The event key originated on a mobile device, either on a physical keypad or a virtual keyboard.</source>
          <target state="translated">イベントキーは、物理キーパッドまたは仮想キーボードのいずれかのモバイルデバイス上で発生します。</target>
        </trans-unit>
        <trans-unit id="aad0d4e6a335faf14a8da7b92ecaa00da277c990" translate="yes" xml:space="preserve">
          <source>The event key originated on the numeric keypad or with a virtual key corresponding to the numeric keypad.</source>
          <target state="translated">イベントキーはテンキーまたはテンキーに対応する仮想キーで発生します。</target>
        </trans-unit>
        <trans-unit id="cc0eb09be7e76d48ff8d7baf7d49b21bcc25031e" translate="yes" xml:space="preserve">
          <source>The event values are computed by invoking &lt;code&gt;computation&lt;/code&gt;. The argument to this callback is an integer that starts with 0 and is incremented for every event.</source>
          <target state="translated">イベント値は、計算を呼び出して &lt;code&gt;computation&lt;/code&gt; されます。このコールバックの引数は、0から始まり、イベントごとに増分される整数です。</target>
        </trans-unit>
        <trans-unit id="73416777c1821c29629cb6796f38741e95164fb5" translate="yes" xml:space="preserve">
          <source>The exact format of the string representation is not final.</source>
          <target state="translated">文字列表現の正確なフォーマットは最終的なものではありません。</target>
        </trans-unit>
        <trans-unit id="51755c1e6d7011c0126bbbf62ef89b456ddb3878" translate="yes" xml:space="preserve">
          <source>The exact timing depends on the underlying timer implementation. No more than &lt;code&gt;n&lt;/code&gt; callbacks will be made in &lt;code&gt;duration * n&lt;/code&gt; time, but the time between two consecutive callbacks can be shorter and longer than &lt;code&gt;duration&lt;/code&gt;.</source>
          <target state="translated">正確なタイミングは、基礎となるタイマーの実装によって異なります。 &lt;code&gt;duration * n&lt;/code&gt; 時間内に行われるコールバックの数は &lt;code&gt;n&lt;/code&gt; 以下ですが、2つの連続するコールバック間の時間は、 &lt;code&gt;duration&lt;/code&gt; より短くても長くてもかまいません。</target>
        </trans-unit>
        <trans-unit id="9e5f9c14e66edb2478391cf4b3ed3974c363f27d" translate="yes" xml:space="preserve">
          <source>The example below creates a new Map from a List. The keys of &lt;code&gt;map&lt;/code&gt; are &lt;code&gt;list&lt;/code&gt; values converted to strings, and the values of the &lt;code&gt;map&lt;/code&gt; are the squares of the &lt;code&gt;list&lt;/code&gt; values:</source>
          <target state="translated">以下の例では、リストから新しいマップを作成します。キー &lt;code&gt;map&lt;/code&gt; あり &lt;code&gt;list&lt;/code&gt; 値を文字列に変換し、値の &lt;code&gt;map&lt;/code&gt; の正方形で &lt;code&gt;list&lt;/code&gt; 値：</target>
        </trans-unit>
        <trans-unit id="692f21646684f86334ae7a3b1aac058b261d9928" translate="yes" xml:space="preserve">
          <source>The exception thrown when trying to convert the object.</source>
          <target state="translated">オブジェクトを変換しようとしたときにスローされる例外。</target>
        </trans-unit>
        <trans-unit id="6475e267db49fb611e9168d5a756e6ecf50888a7" translate="yes" xml:space="preserve">
          <source>The exit code is global for the Dart VM and the last assignment to exitCode from any isolate determines the exit code of the Dart VM on normal termination.</source>
          <target state="translated">終了コードはDart VMのグローバルなもので、任意のアイソレートからexitCodeに最後に割り当てられたものが、通常の終了時のDart VMの終了コードを決定します。</target>
        </trans-unit>
        <trans-unit id="522f76a5490270a950468e69cd7a5630d1bb6c44" translate="yes" xml:space="preserve">
          <source>The extensions property is initially the empty string. After the WebSocket connection is established this string reflects the extensions used by the server.</source>
          <target state="translated">extensions プロパティは、最初は空の文字列です。WebSocket 接続が確立されると、この文字列にはサーバで使用される拡張子が反映されます。</target>
        </trans-unit>
        <trans-unit id="07877e8b4f58251e21b16f3cfcbe314ae8b77eb1" translate="yes" xml:space="preserve">
          <source>The file path is passed in &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">ファイルパスはpathに渡され &lt;code&gt;path&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="74eb3b0933a86dec368cd44d18131ce987313011" translate="yes" xml:space="preserve">
          <source>The file system path on which the error occurred. Can be &lt;code&gt;null&lt;/code&gt; if the exception does not relate directly to a file system path.</source>
          <target state="translated">エラーが発生したファイルシステムのパス。例外がファイルシステムパスに直接関連していない場合は &lt;code&gt;null&lt;/code&gt; になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="67c73d5c7d9cbbb24db326506adfd822b6c35c51" translate="yes" xml:space="preserve">
          <source>The filtering happens lazily. Every new &lt;a href=&quot;../../dart-core/iterator-class&quot;&gt;Iterator&lt;/a&gt; of the returned iterable iterates over all elements of &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">フィルタリングは遅延して行われます。返される反復可能オブジェクトのすべての新しい&lt;a href=&quot;../../dart-core/iterator-class&quot;&gt;Iterator&lt;/a&gt;は、 &lt;code&gt;this&lt;/code&gt; のすべての要素を反復処理します。</target>
        </trans-unit>
        <trans-unit id="c4394149144427066d49933a0e8b00ae009faa74" translate="yes" xml:space="preserve">
          <source>The filtering happens lazily. Every new &lt;a href=&quot;../iterator-class&quot;&gt;Iterator&lt;/a&gt; of the returned iterable iterates over all elements of &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">フィルタリングは遅延して行われます。返される反復可能オブジェクトのすべての新しい&lt;a href=&quot;../iterator-class&quot;&gt;Iterator&lt;/a&gt;は、 &lt;code&gt;this&lt;/code&gt; のすべての要素を反復処理します。</target>
        </trans-unit>
        <trans-unit id="7afba8340566ec2a11dfe008e1857c0c31be5eab" translate="yes" xml:space="preserve">
          <source>The filtering happens lazily. Every new iterator of the returned iterable starts iterating over the elements of &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">フィルタリングは遅延して行われます。返された反復可能オブジェクトの新しい反復子はすべて、 &lt;code&gt;this&lt;/code&gt; の要素の反復を開始します。</target>
        </trans-unit>
        <trans-unit id="eaabb9f00e50f3bf7294302ed9e39cca04a5618c" translate="yes" xml:space="preserve">
          <source>The first child of this node.</source>
          <target state="translated">このノードの最初の子。</target>
        </trans-unit>
        <trans-unit id="5205ffbe5cc4d81d123957ee65dc1a594fefd7d6" translate="yes" xml:space="preserve">
          <source>The first child of this node. &lt;a href=&quot;../dart-html/node/firstchild&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このノードの最初の子。&lt;a href=&quot;../dart-html/node/firstchild&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="69e95cc786edb2ddc0941ca979b6218f29c6edb2" translate="yes" xml:space="preserve">
          <source>The first child of this node. &lt;a href=&quot;node/firstchild&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このノードの最初の子。&lt;a href=&quot;node/firstchild&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="40f6a41ef8cf121d363a0ef6a6526b124278f721" translate="yes" xml:space="preserve">
          <source>The first element of this stream.</source>
          <target state="translated">このストリームの最初の要素。</target>
        </trans-unit>
        <trans-unit id="793570ca12060e1247e2b45e2232edc3b5b8e830" translate="yes" xml:space="preserve">
          <source>The first element of this stream. &lt;a href=&quot;../dart-async/stream/first&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このストリームの最初の要素。&lt;a href=&quot;../dart-async/stream/first&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4e0356f239d8f47cf652c4b157b3adb30a8c4b27" translate="yes" xml:space="preserve">
          <source>The first element of this stream. &lt;a href=&quot;stream/first&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このストリームの最初の要素。&lt;a href=&quot;stream/first&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8cf2ebe4b651125d644b60ea1b326900ae38c60d" translate="yes" xml:space="preserve">
          <source>The first object that was detected as part of a cycle.</source>
          <target state="translated">サイクルの一部として検出された最初の物体。</target>
        </trans-unit>
        <trans-unit id="8abb4b967763c47c24b7f57bc504aa8aff083ee7" translate="yes" xml:space="preserve">
          <source>The first string encodes '&amp;eacute;' as a single unicode code unit (also a single rune), whereas the second string encodes it as 'e' with the combining accent character '◌́'.</source>
          <target state="translated">最初の文字列は '&amp;eacute;'を単一のユニコードコード単位（これも単一のルーン）としてエンコードしますが、2番目の文字列はそれを 'e'として結合アクセント文字 '◌́'でエンコードします。</target>
        </trans-unit>
        <trans-unit id="84ce3d7f0a6f48988e302cea06333073dfbf728b" translate="yes" xml:space="preserve">
          <source>The first time an object &lt;code&gt;o&lt;/code&gt; is encountered so that &lt;code&gt;o == element&lt;/code&gt;, the index of &lt;code&gt;o&lt;/code&gt; is returned.</source>
          <target state="translated">オブジェクトの最初の時間 &lt;code&gt;o&lt;/code&gt; はそのように発生した &lt;code&gt;o == element&lt;/code&gt; 、のインデックス &lt;code&gt;o&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="df8618183127319740c55f3f090ad66430dd5218" translate="yes" xml:space="preserve">
          <source>The flags passed to the executable used to run the script in this isolate.</source>
          <target state="translated">このアイソレートでスクリプトを実行するための実行ファイルに渡されるフラグです。</target>
        </trans-unit>
        <trans-unit id="d346caba8780dcd42c6929d846d7548ba3944853" translate="yes" xml:space="preserve">
          <source>The flags passed to the executable used to run the script in this isolate. &lt;a href=&quot;platform/executablearguments&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">この分離内でスクリプトを実行するために使用される実行可能ファイルに渡されるフラグ。&lt;a href=&quot;platform/executablearguments&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c7f1ed026390961b91d5d1f70a9f070bf6522fa5" translate="yes" xml:space="preserve">
          <source>The float at &lt;code&gt;address + 4 * index&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;address + 4 * index&lt;/code&gt; のフロート。</target>
        </trans-unit>
        <trans-unit id="8e9f233438099294711a820939ccc739f144b162" translate="yes" xml:space="preserve">
          <source>The float at &lt;code&gt;address + 4 * index&lt;/code&gt;. &lt;a href=&quot;floatpointer/operator_get&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;address + 4 * index&lt;/code&gt; のフロート。&lt;a href=&quot;floatpointer/operator_get&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="877f195a17766adbfc5ac503bc1268788cb252f3" translate="yes" xml:space="preserve">
          <source>The float at &lt;code&gt;address + 4 * index&lt;/code&gt;. &lt;a href=&quot;floatpointer/operator_put&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;address + 4 * index&lt;/code&gt; のフロート。&lt;a href=&quot;floatpointer/operator_put&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d5e66f6c5df574938799c090528120691f00f353" translate="yes" xml:space="preserve">
          <source>The float at &lt;code&gt;address&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt; のフロート。</target>
        </trans-unit>
        <trans-unit id="1d167ac12a0dd96e03f410918cf2500e10841547" translate="yes" xml:space="preserve">
          <source>The float at &lt;code&gt;address&lt;/code&gt;. &lt;a href=&quot;floatpointer/value&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt; のフロート。&lt;a href=&quot;floatpointer/value&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5970b7eddb7a076813270d1de28fdd03d6ef9544" translate="yes" xml:space="preserve">
          <source>The flow id of the flow event.</source>
          <target state="translated">フローイベントのフローID。</target>
        </trans-unit>
        <trans-unit id="c288f854efb775f9b050bb5d81304fb8036018a3" translate="yes" xml:space="preserve">
          <source>The following &lt;a href=&quot;../processsignal-class&quot;&gt;ProcessSignal&lt;/a&gt;s can be listened to:</source>
          <target state="translated">次の&lt;a href=&quot;../processsignal-class&quot;&gt;ProcessSignalを&lt;/a&gt;リッスンできます。</target>
        </trans-unit>
        <trans-unit id="1de792d92d51fe83e53a9885e0d39dfa5b0865a5" translate="yes" xml:space="preserve">
          <source>The following code illustrates that some List implementations support only a subset of the API.</source>
          <target state="translated">次のコードは、一部のリスト実装が API のサブセットのみをサポートしていることを示しています。</target>
        </trans-unit>
        <trans-unit id="7a90bce8ba9367caf97563b1ab26b97b9fc5c932" translate="yes" xml:space="preserve">
          <source>The following code sample creates a directory using the &lt;a href=&quot;directory/create&quot;&gt;create&lt;/a&gt; method. By setting the &lt;code&gt;recursive&lt;/code&gt; parameter to true, you can create the named directory and all its necessary parent directories, if they do not already exist.</source>
          <target state="translated">次のコードサンプルは、&lt;a href=&quot;directory/create&quot;&gt;create&lt;/a&gt;メソッドを使用してディレクトリを作成します。 &lt;code&gt;recursive&lt;/code&gt; パラメータをtrueに設定することにより、名前付きディレクトリと必要なすべての親ディレクトリがまだ存在しない場合は、それらを作成できます。</target>
        </trans-unit>
        <trans-unit id="0e816a0915ba3c50f735158d1efd69780598986f" translate="yes" xml:space="preserve">
          <source>The following code sample reads the entire contents from a file as a string using the asynchronous &lt;a href=&quot;file/readasstring&quot;&gt;readAsString&lt;/a&gt; method:</source>
          <target state="translated">次のコードサンプルは、非同期の&lt;a href=&quot;file/readasstring&quot;&gt;readAsString&lt;/a&gt;メソッドを使用して、ファイルからコンテンツ全体を文字列として読み取ります。</target>
        </trans-unit>
        <trans-unit id="2903ff7e1a79d91ed566479ae5336bc7a82ca94c" translate="yes" xml:space="preserve">
          <source>The following code sample uses the run method to create a process that runs the UNIX command &lt;code&gt;ls&lt;/code&gt;, which lists the contents of a directory. The run method completes with a &lt;a href=&quot;processresult-class&quot;&gt;ProcessResult&lt;/a&gt; object when the process terminates. This provides access to the output and exit code from the process. The run method does not return a Process object; this prevents your code from interacting with the running process.</source>
          <target state="translated">次のコードサンプルは、runメソッドを使用して、ディレクトリの内容をリストするUNIXコマンド &lt;code&gt;ls&lt;/code&gt; を実行するプロセスを作成します。runメソッドは、プロセスが終了すると&lt;a href=&quot;processresult-class&quot;&gt;ProcessResult&lt;/a&gt;オブジェクトで完了します。これにより、プロセスへの出力および終了コードへのアクセスが提供されます。runメソッドはProcessオブジェクトを返しません。これにより、コードが実行中のプロセスとやり取りするのを防ぎます。</target>
        </trans-unit>
        <trans-unit id="c2a935834f83fa1df20998b83eab20d64a2ffb74" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;Process.run&lt;/code&gt; to grep for &lt;code&gt;main&lt;/code&gt; in the file &lt;code&gt;test.dart&lt;/code&gt; on Linux.</source>
          <target state="translated">次のコードは、 &lt;code&gt;Process.run&lt;/code&gt; を使用して、Linuxの &lt;code&gt;test.dart&lt;/code&gt; ファイルで &lt;code&gt;main&lt;/code&gt; をgrepします。</target>
        </trans-unit>
        <trans-unit id="ced1748be6cbed628e32b2d924634d1aa61ccfb3" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;Process.start&lt;/code&gt; to grep for &lt;code&gt;main&lt;/code&gt; in the file &lt;code&gt;test.dart&lt;/code&gt; on Linux.</source>
          <target state="translated">次のコードでは、 &lt;code&gt;Process.start&lt;/code&gt; を使用して、Linuxの &lt;code&gt;test.dart&lt;/code&gt; ファイルで &lt;code&gt;main&lt;/code&gt; をgrepしています。</target>
        </trans-unit>
        <trans-unit id="957ace33b3f28d88d35bd616852fb8165085388b" translate="yes" xml:space="preserve">
          <source>The following environment variables are taken into account:</source>
          <target state="translated">以下の環境変数を考慮しています。</target>
        </trans-unit>
        <trans-unit id="8fc567ea6ee978d8d0ef368377f2aa2d217e80ce" translate="yes" xml:space="preserve">
          <source>The following example finds all matches of a &lt;a href=&quot;regexp-class&quot;&gt;RegExp&lt;/a&gt; in a &lt;a href=&quot;string-class&quot;&gt;String&lt;/a&gt; and iterates through the returned iterable of Match objects.</source>
          <target state="translated">次の例では、&lt;a href=&quot;string-class&quot;&gt;文字列&lt;/a&gt;内の&lt;a href=&quot;regexp-class&quot;&gt;RegExpの&lt;/a&gt;すべての一致を検索し、返されたMatchオブジェクトの反復可能オブジェクトを反復処理します。</target>
        </trans-unit>
        <trans-unit id="aebcb9e173de1517ffe1442d7e43fb8c9b5baca0" translate="yes" xml:space="preserve">
          <source>The following example finds all matches of a regular expression in a string.</source>
          <target state="translated">次の例は、文字列内の正規表現のすべてのマッチを検出します。</target>
        </trans-unit>
        <trans-unit id="a896c9dbdf08bb5291f80e86d392950320608475" translate="yes" xml:space="preserve">
          <source>The following example shows an alert dialog via a JavaScript call to the global function &lt;code&gt;alert()&lt;/code&gt;:</source>
          <target state="translated">次の例は、グローバル関数 &lt;code&gt;alert()&lt;/code&gt; へのJavaScript呼び出しによるアラートダイアログを示しています。</target>
        </trans-unit>
        <trans-unit id="10d2dcdbf3acf09c3204fa5a55b865e4d9cfc958" translate="yes" xml:space="preserve">
          <source>The following example shows how to start a &lt;a href=&quot;../stopwatch-class&quot;&gt;Stopwatch&lt;/a&gt; immediately after allocation.</source>
          <target state="translated">次の例は、割り当て直後に&lt;a href=&quot;../stopwatch-class&quot;&gt;ストップウォッチ&lt;/a&gt;を開始する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="bbe48000fb42e8c5789b64ba912e9d495e8bc9c7" translate="yes" xml:space="preserve">
          <source>The following example uses start to create the process. The start method returns a &lt;a href=&quot;../dart-async/future-class&quot;&gt;Future&lt;/a&gt; for a Process object. When the future completes the process is started and your code can interact with the Process: writing to stdin, listening to stdout, and so on.</source>
          <target state="translated">次の例では、startを使用してプロセスを作成しています。startメソッドは、Processオブジェクトの&lt;a href=&quot;../dart-async/future-class&quot;&gt;Future&lt;/a&gt;を返します。将来が完了すると、プロセスが開始され、コードがプロセスと対話できます（標準入力への書き込み、標準出力のリスニングなど）。</target>
        </trans-unit>
        <trans-unit id="d05b42e556fba8f6c535332f07b6109a5385689d" translate="yes" xml:space="preserve">
          <source>The following expression creates a new JavaScript object with the properties &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; defined:</source>
          <target state="translated">次の式は、プロパティ &lt;code&gt;a&lt;/code&gt; および &lt;code&gt;b&lt;/code&gt; が定義された新しいJavaScriptオブジェクトを作成します。</target>
        </trans-unit>
        <trans-unit id="02af21ad98709db96381a34994637429bc888a52" translate="yes" xml:space="preserve">
          <source>The following is equivalent to the &lt;a href=&quot;getstring&quot;&gt;getString&lt;/a&gt; sample above:</source>
          <target state="translated">以下は、上記の&lt;a href=&quot;getstring&quot;&gt;getString&lt;/a&gt;サンプルに相当します。</target>
        </trans-unit>
        <trans-unit id="9f6a3266ca95109ef572da1686a8186cd7da4f32" translate="yes" xml:space="preserve">
          <source>The following sample starts the UNIX &lt;code&gt;cat&lt;/code&gt; utility, which when given no command-line arguments, echos its input. The program writes to the process's standard input stream and prints data from its standard output stream.</source>
          <target state="translated">次のサンプルは、UNIXの &lt;code&gt;cat&lt;/code&gt; ユーティリティを起動します。コマンドライン引数を指定しないと、その入力がエコーされます。プログラムはプロセスの標準入力ストリームに書き込み、その標準出力ストリームからデータを出力します。</target>
        </trans-unit>
        <trans-unit id="6edda8992946c78ab7d3287acdf60a4cfac36cc2" translate="yes" xml:space="preserve">
          <source>The following text is non-normative:</source>
          <target state="translated">以下の文章は非正規です。</target>
        </trans-unit>
        <trans-unit id="8000de6e24ef808ec6185fa811b7d1ebb390c4fe" translate="yes" xml:space="preserve">
          <source>The following types are transferred directly and not proxied:</source>
          <target state="translated">以下のタイプは直接転送され、プロキシされません。</target>
        </trans-unit>
        <trans-unit id="647c879d6edf0f5e813f77db6dc1a1ecbbe05867" translate="yes" xml:space="preserve">
          <source>The for-in construct transparently uses &lt;code&gt;Iterator&lt;/code&gt; to test for the end of the iteration, and to get each item (or &lt;em&gt;element&lt;/em&gt;).</source>
          <target state="translated">for-inコンストラクトは透過的に &lt;code&gt;Iterator&lt;/code&gt; を使用して、反復の終了をテストし、各アイテム（または&lt;em&gt;element&lt;/em&gt;）を取得します。</target>
        </trans-unit>
        <trans-unit id="edf1b31d67490347cbb6ae1f9185fdbbf85f595f" translate="yes" xml:space="preserve">
          <source>The format for specifying the list of classes is the same as used for specifying &lt;a href=&quot;targets&quot;&gt;targets&lt;/a&gt;. However, as a library cannot be used as a metadata annotation in Dart, adding a library to the list of &lt;a href=&quot;metatargets&quot;&gt;metaTargets&lt;/a&gt; has no effect. In particular, adding a library to &lt;a href=&quot;metatargets&quot;&gt;metaTargets&lt;/a&gt; does not make the library's classes valid metadata annotations to enable reflection.</source>
          <target state="translated">クラスのリストを指定するためのフォーマットは、&lt;a href=&quot;targets&quot;&gt;ターゲット&lt;/a&gt;を指定するために使用されるものと同じです。ただし、ライブラリはDartのメタデータアノテーションとして使用できないため、ライブラリを&lt;a href=&quot;metatargets&quot;&gt;metaTargets&lt;/a&gt;のリストに追加しても効果はありません。特に、&lt;a href=&quot;metatargets&quot;&gt;metaTargetsに&lt;/a&gt;ライブラリを追加しても、リフレクションを有効にするためにライブラリのクラスが有効なメタデータアノテーションになりません。</target>
        </trans-unit>
        <trans-unit id="7462ed2a28dd491d4103362efab302d6ceb2d5a9" translate="yes" xml:space="preserve">
          <source>The format is &lt;code&gt;yyyy-MM-ddTHH:mm:ss.mmmuuuZ&lt;/code&gt; for UTC time, and &lt;code&gt;yyyy-MM-ddTHH:mm:ss.mmmuuu&lt;/code&gt; (no trailing &quot;Z&quot;) for local/non-UTC time, where:</source>
          <target state="translated">フォーマットは &lt;code&gt;yyyy-MM-ddTHH:mm:ss.mmmuuuZ&lt;/code&gt; UTC時間のため、および &lt;code&gt;yyyy-MM-ddTHH:mm:ss.mmmuuu&lt;/code&gt; ローカル/非UTC時間、のための（末尾&quot;Z&quot;）。</target>
        </trans-unit>
        <trans-unit id="c6ea7c584d7964db8fa93b8aff98cfca858f8b74" translate="yes" xml:space="preserve">
          <source>The fragment component is set through &lt;code&gt;fragment&lt;/code&gt;. It should be a valid URI fragment, but invalid characters other than general delimiters, are escaped if necessary. If &lt;code&gt;fragment&lt;/code&gt; is omitted or &lt;code&gt;null&lt;/code&gt;, the URI has no fragment part.</source>
          <target state="translated">フラグメントコンポーネントは、 &lt;code&gt;fragment&lt;/code&gt; によって設定されます。有効なURIフラグメントである必要がありますが、一般的な区切り文字以外の無効な文字は、必要に応じてエスケープされます。場合 &lt;code&gt;fragment&lt;/code&gt; 省略されるかされた &lt;code&gt;null&lt;/code&gt; 、URIにはフラグメントの部分を持っていません。</target>
        </trans-unit>
        <trans-unit id="b591aa3d22b6ef32b710908d3ff20b6f8e190dbc" translate="yes" xml:space="preserve">
          <source>The fully-qualified name for this Dart language entity.</source>
          <target state="translated">このDart言語エンティティの完全修飾名。</target>
        </trans-unit>
        <trans-unit id="1218793048e8b31020e423545475b1513b3768b2" translate="yes" xml:space="preserve">
          <source>The fully-qualified name for this Dart language entity. &lt;a href=&quot;declarationmirror/qualifiedname&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このDart言語エンティティの完全修飾名。&lt;a href=&quot;declarationmirror/qualifiedname&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5c5719059aaf0a7811a9c1b6bbbf746d3aa10ea4" translate="yes" xml:space="preserve">
          <source>The function associated with an implicit closure of a function is that function.</source>
          <target state="translated">関数の暗黙のクロージャに関連付けられた関数がその関数です。</target>
        </trans-unit>
        <trans-unit id="0220d24198a0ef1a8295041004c21de710972214" translate="yes" xml:space="preserve">
          <source>The function associated with an instance of a class that has a &lt;code&gt;call&lt;/code&gt; method is that &lt;code&gt;call&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;call&lt;/code&gt; メソッドを持つクラスのインスタンスに関連付けられている関数は、その &lt;code&gt;call&lt;/code&gt; メソッドです。</target>
        </trans-unit>
        <trans-unit id="5abc957d40dd50144d407475e4dd26a8c60ed47e" translate="yes" xml:space="preserve">
          <source>The function defined below converts each word in a string to simplified 'pig latin' using &lt;a href=&quot;replaceallmapped&quot;&gt;replaceAllMapped&lt;/a&gt;:</source>
          <target state="translated">以下で定義する関数は、&lt;a href=&quot;replaceallmapped&quot;&gt;replaceAllMapped&lt;/a&gt;を使用して、文字列内の各単語を単純化された「豚のラテン語」に変換します。</target>
        </trans-unit>
        <trans-unit id="5791016e025fd6696a4985062f00d7baa70e89a3" translate="yes" xml:space="preserve">
          <source>The function must be a top-level function or a static method that can be called with a single argument, that is, a compile-time constant function value which accepts at least one positional parameter and has at most one required positional parameter. The function may accept any number of optional parameters, as long as it &lt;em&gt;can&lt;/em&gt; be called with just a single argument. The function must not be the value of a function expression or an instance method tear-off.</source>
          <target state="translated">関数は、単一の引数で呼び出すことができるトップレベル関数または静的メソッド、つまり、少なくとも1つの定位置パラメーターを受け入れ、最大で1つの必須の定位置パラメーターを持つコンパイル時の定数関数値でなければなりません。この関数は、引数を1つだけ指定して呼び出すこと&lt;em&gt;ができる&lt;/em&gt;限り、任意の数のオプションパラメーターを受け入れること&lt;em&gt;ができ&lt;/em&gt;ます。関数は、関数式またはインスタンスメソッドのティアオフの値であってはなりません。</target>
        </trans-unit>
        <trans-unit id="2d29eea4bd00b64e69236ab4af313a57f7b94546" translate="yes" xml:space="preserve">
          <source>The function must not be called again until the future returned by a previous call is completed.</source>
          <target state="translated">この関数は、前回の呼び出しで返された未来が完了するまで、再度呼び出されてはいけません。</target>
        </trans-unit>
        <trans-unit id="7970b93f0ca8407e807a14a3b8052c9b45d74817" translate="yes" xml:space="preserve">
          <source>The function parses a subset of ISO 8601 which includes the subset accepted by RFC 3339.</source>
          <target state="translated">この関数は、RFC 3339 で受け入れられているサブセットを含む ISO 8601 のサブセットを解析します。</target>
        </trans-unit>
        <trans-unit id="bccf64ab9b1553ce192ec214742a82064a22d00a" translate="yes" xml:space="preserve">
          <source>The function returns a &lt;a href=&quot;../../dart-async/future-class&quot;&gt;Future&lt;/a&gt; which should complete when the authentication has been resolved. If credentials cannot be provided the &lt;a href=&quot;../../dart-async/future-class&quot;&gt;Future&lt;/a&gt; should complete with &lt;code&gt;false&lt;/code&gt;. If credentials are available the function should add these using &lt;a href=&quot;addcredentials&quot;&gt;addCredentials&lt;/a&gt; before completing the &lt;a href=&quot;../../dart-async/future-class&quot;&gt;Future&lt;/a&gt; with the value &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">この関数は、認証が解決されると完了する&lt;a href=&quot;../../dart-async/future-class&quot;&gt;Future&lt;/a&gt;を返します。資格情報を提供できない場合、&lt;a href=&quot;../../dart-async/future-class&quot;&gt;Future&lt;/a&gt;は &lt;code&gt;false&lt;/code&gt; で完了する必要があります。資格情報が利用可能な場合、関数は、値 &lt;code&gt;true&lt;/code&gt; で&lt;a href=&quot;../../dart-async/future-class&quot;&gt;Future&lt;/a&gt;を完了する前に&lt;a href=&quot;addcredentials&quot;&gt;addCredentials&lt;/a&gt;を使用してこれらを追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="1e3623b182e130d04bb8d0a68351d50feaf95ac7" translate="yes" xml:space="preserve">
          <source>The function returns a &lt;a href=&quot;../../dart-async/future-class&quot;&gt;Future&lt;/a&gt; which should complete when the authentication has been resolved. If credentials cannot be provided the &lt;a href=&quot;../../dart-async/future-class&quot;&gt;Future&lt;/a&gt; should complete with &lt;code&gt;false&lt;/code&gt;. If credentials are available the function should add these using &lt;a href=&quot;addproxycredentials&quot;&gt;addProxyCredentials&lt;/a&gt; before completing the &lt;a href=&quot;../../dart-async/future-class&quot;&gt;Future&lt;/a&gt; with the value &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">この関数は、認証が解決されると完了する&lt;a href=&quot;../../dart-async/future-class&quot;&gt;Future&lt;/a&gt;を返します。資格情報を提供できない場合、&lt;a href=&quot;../../dart-async/future-class&quot;&gt;Future&lt;/a&gt;は &lt;code&gt;false&lt;/code&gt; で完了する必要があります。資格情報が使用可能な場合、関数は値 &lt;code&gt;true&lt;/code&gt; で&lt;a href=&quot;../../dart-async/future-class&quot;&gt;Future&lt;/a&gt;を完了する前に&lt;a href=&quot;addproxycredentials&quot;&gt;addProxyCredentials&lt;/a&gt;を使用してこれらを追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="15477cd57fc70afb56fe1d3297f285f8e43c8551" translate="yes" xml:space="preserve">
          <source>The future for &lt;a href=&quot;httpclientrequest-class&quot;&gt;HttpClientRequest&lt;/a&gt; is created by methods such as &lt;a href=&quot;httpclient/geturl&quot;&gt;getUrl&lt;/a&gt; and &lt;a href=&quot;httpclient/open&quot;&gt;open&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;httpclientrequest-class&quot;&gt;HttpClientRequest&lt;/a&gt;の未来は、&lt;a href=&quot;httpclient/geturl&quot;&gt;getUrl&lt;/a&gt;や&lt;a href=&quot;httpclient/open&quot;&gt;open&lt;/a&gt;などのメソッドによって作成されます。。</target>
        </trans-unit>
        <trans-unit id="89fa8b1adfaed174d059d3d94902efa5a8620bfc" translate="yes" xml:space="preserve">
          <source>The future returned by this call, &lt;code&gt;f&lt;/code&gt;, will complete the same way as this future unless an error occurs in the &lt;code&gt;action&lt;/code&gt; call, or in a &lt;a href=&quot;../future-class&quot;&gt;Future&lt;/a&gt; returned by the &lt;code&gt;action&lt;/code&gt; call. If the call to &lt;code&gt;action&lt;/code&gt; does not return a future, its return value is ignored.</source>
          <target state="translated">この呼び出しによって返されるフューチャー &lt;code&gt;f&lt;/code&gt; は、 &lt;code&gt;action&lt;/code&gt; コールまたは &lt;code&gt;action&lt;/code&gt; コールによって返される&lt;a href=&quot;../future-class&quot;&gt;Futureで&lt;/a&gt;エラーが発生しない限り、このフューチャーと同じ方法で完了します。 &lt;code&gt;action&lt;/code&gt; を促すフレーズがフューチャーを返さない場合、その戻り値は無視されます。</target>
        </trans-unit>
        <trans-unit id="a8774224de13d045950ab3e1b9aa118245ccac3f" translate="yes" xml:space="preserve">
          <source>The future that is completed by this completer.</source>
          <target state="translated">この完成者が完成させた未来。</target>
        </trans-unit>
        <trans-unit id="8c0976303cb5e6337bccd3670d2afb80f100de01" translate="yes" xml:space="preserve">
          <source>The future that is completed by this completer. &lt;a href=&quot;completer/future&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このコンプリーターで完成する未来。&lt;a href=&quot;completer/future&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="63f3b8f159851fceef6d71fa33f0233707ce2341" translate="yes" xml:space="preserve">
          <source>The future that is completed when &lt;a href=&quot;complete&quot;&gt;complete&lt;/a&gt; or &lt;a href=&quot;completeerror&quot;&gt;completeError&lt;/a&gt; is called.</source>
          <target state="translated">&lt;a href=&quot;complete&quot;&gt;complete&lt;/a&gt;または&lt;a href=&quot;completeerror&quot;&gt;completeError&lt;/a&gt;が呼び出されたときに完了する future 。</target>
        </trans-unit>
        <trans-unit id="eee102959a8f124731be8422d9f82ac1e430f27d" translate="yes" xml:space="preserve">
          <source>The future will error if an error occurrs on the transaction or if the transaction is aborted.</source>
          <target state="translated">トランザクションでエラーが発生したり、トランザクションが中断されたりすると、未来はエラーになります。</target>
        </trans-unit>
        <trans-unit id="a821a406c1f811e425dacb537d64f50aec3c2adc" translate="yes" xml:space="preserve">
          <source>The general converter escapes all characters that are meaningful in HTML attributes or normal element context. Elements with special content types (like CSS or JavaScript) may need a more specialized escaping that understands that content type.</source>
          <target state="translated">一般的なコンバータは、HTML属性や通常の要素のコンテキストで意味のあるすべての文字をエスケープします。特殊なコンテンツタイプ (CSS や JavaScript など)を持つ要素は、そのコンテンツタイプを理解するために、より特殊なエスケープが必要になることがあります。</target>
        </trans-unit>
        <trans-unit id="8e9744f3657ed7900b6f3db9f9e1a0f0b38f9bd1" translate="yes" xml:space="preserve">
          <source>The general workflow for creating a new future is to 1) create a new completer, 2) hand out its future, and, at a later point, 3) invoke either &lt;a href=&quot;complete&quot;&gt;complete&lt;/a&gt; or &lt;a href=&quot;completeerror&quot;&gt;completeError&lt;/a&gt;.</source>
          <target state="translated">新しいフューチャーを作成するための一般的なワークフローは、1）新しいコンプリーターを作成し、2）フューチャーを渡し、後で3）&lt;a href=&quot;complete&quot;&gt;complete&lt;/a&gt;または&lt;a href=&quot;completeerror&quot;&gt;completeErrorを&lt;/a&gt;呼び出すことです。</target>
        </trans-unit>
        <trans-unit id="8b3330c0e2dc8b84c7217eb0a2690121d48e48ab" translate="yes" xml:space="preserve">
          <source>The generated iterable has &lt;code&gt;count&lt;/code&gt; elements, and the element at index &lt;code&gt;n&lt;/code&gt; is computed by calling &lt;code&gt;generator(n)&lt;/code&gt;. Values are not cached, so each iteration computes the values again.</source>
          <target state="translated">生成されたイテラブルには &lt;code&gt;count&lt;/code&gt; 個の要素があり、インデックス &lt;code&gt;n&lt;/code&gt; の要素は &lt;code&gt;generator(n)&lt;/code&gt; を呼び出すことによって計算されますます。値はキャッシュされないため、反復ごとに値が再計算されます。</target>
        </trans-unit>
        <trans-unit id="fca64b57ea32801e9d1822a4c619ed6aea451c85" translate="yes" xml:space="preserve">
          <source>The getter achieves this without throwing, except on platforms that have no other way to get a stack trace.</source>
          <target state="translated">ゲッターは、スタックトレースを取得するための他の方法がないプラットフォームを除いて、これをスローせずに実現します。</target>
        </trans-unit>
        <trans-unit id="de47f17997f910bf4d7c0a18f3e38947e285e7f6" translate="yes" xml:space="preserve">
          <source>The getter can be the implicit getter for a field or a user-defined getter method.</source>
          <target state="translated">ゲッターは、フィールドの暗黙のゲッター、またはユーザー定義のゲッターメソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="d517ee1dec67d374cf863b78718905af10fcde2f" translate="yes" xml:space="preserve">
          <source>The given &lt;code&gt;mapSink&lt;/code&gt; closure is invoked when the returned stream is listened to. All events from the &lt;code&gt;source&lt;/code&gt; are added into the event sink that is returned from the invocation. The transformation puts all transformed events into the sink the &lt;code&gt;mapSink&lt;/code&gt; closure received during its invocation. Conceptually the &lt;code&gt;mapSink&lt;/code&gt; creates a transformation pipe with the input sink being the returned &lt;a href=&quot;../eventsink-class&quot;&gt;EventSink&lt;/a&gt; and the output sink being the sink it received.</source>
          <target state="translated">指定された &lt;code&gt;mapSink&lt;/code&gt; クロージャーは、返されたストリームがリッスンされるときに呼び出されます。 &lt;code&gt;source&lt;/code&gt; からのすべてのイベントは、呼び出しから返されるイベントシンクに追加されます。変換により、変換されたすべてのイベントが、呼び出し中に &lt;code&gt;mapSink&lt;/code&gt; クロージャーが受け取ったシンクに配置されます。概念的には、 &lt;code&gt;mapSink&lt;/code&gt; は変換パイプを作成します。入力シンクは返された&lt;a href=&quot;../eventsink-class&quot;&gt;EventSinkで&lt;/a&gt;あり、出力シンクは受信したシンクです。</target>
        </trans-unit>
        <trans-unit id="870448e09a0499000cbfdb8b05847c6b8a419f50" translate="yes" xml:space="preserve">
          <source>The given &lt;code&gt;socket&lt;/code&gt; is closed and may not be used anymore.</source>
          <target state="translated">指定された &lt;code&gt;socket&lt;/code&gt; は閉じため、使用できません。</target>
        </trans-unit>
        <trans-unit id="232494bfebd3c4c03a275bf06832674935121eb3" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;print&lt;/code&gt; function delegates to the current zone's &lt;a href=&quot;print&quot;&gt;print&lt;/a&gt; function which makes it possible to intercept printing.</source>
          <target state="translated">グローバル &lt;code&gt;print&lt;/code&gt; 機能は、現在のゾーンのプリント機能に委任します。これにより、&lt;a href=&quot;print&quot;&gt;プリントの&lt;/a&gt;インターセプトが可能になります。</target>
        </trans-unit>
        <trans-unit id="638e54b3210175b376b629073bb91238f1c764c3" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;scheduleMicrotask&lt;/code&gt; delegates to the current zone's &lt;a href=&quot;schedulemicrotask&quot;&gt;scheduleMicrotask&lt;/a&gt;. The root zone's implementation interacts with the underlying system to schedule the given callback as a microtask.</source>
          <target state="translated">グローバル &lt;code&gt;scheduleMicrotask&lt;/code&gt; の現在のゾーンのに委譲&lt;a href=&quot;schedulemicrotask&quot;&gt;scheduleMicrotask&lt;/a&gt;。ルートゾーンの実装は、基になるシステムと対話して、特定のコールバックをマイクロタスクとしてスケジュールします。</target>
        </trans-unit>
        <trans-unit id="3aef6d68786a00d12d597257162427e360d278f6" translate="yes" xml:space="preserve">
          <source>The greatest common divisor is independent of the order, so &lt;code&gt;x.gcd(y)&lt;/code&gt; is always the same as &lt;code&gt;y.gcd(x)&lt;/code&gt;.</source>
          <target state="translated">最大公約数は順序に依存しないため、 &lt;code&gt;x.gcd(y)&lt;/code&gt; は常に &lt;code&gt;y.gcd(x)&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="e2454a35e428fcb3e63a3e00226e08aada50ec41" translate="yes" xml:space="preserve">
          <source>The handle to the dynamic library.</source>
          <target state="translated">動的ライブラリのハンドル。</target>
        </trans-unit>
        <trans-unit id="b3e218e12f6421267dba0c6f2322d5b6e8e9aa48" translate="yes" xml:space="preserve">
          <source>The handler is invoked in the root-zone (&lt;a href=&quot;../../dart-async/zone/root-constant&quot;&gt;Zone.root&lt;/a&gt;).</source>
          <target state="translated">ハンドラーはルートゾーン（&lt;a href=&quot;../../dart-async/zone/root-constant&quot;&gt;Zone.root&lt;/a&gt;）で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="46701e6007d474ef2e92cd58d2523a75f173e551" translate="yes" xml:space="preserve">
          <source>The handler of the given &lt;code&gt;rawPort&lt;/code&gt; is overwritten during the construction of the result.</source>
          <target state="translated">指定された &lt;code&gt;rawPort&lt;/code&gt; のハンドラー、結果の構築中に上書きされます。</target>
        </trans-unit>
        <trans-unit id="c2cd0f6c30673c6644e75455ca59f8e38905ced1" translate="yes" xml:space="preserve">
          <source>The handling of exit codes is platform specific.</source>
          <target state="translated">終了コードの取り扱いはプラットフォーム固有のものです。</target>
        </trans-unit>
        <trans-unit id="865b2125b7af7d1a8b32813ebea8936ab7c5a8e5" translate="yes" xml:space="preserve">
          <source>The hash code for a DynamicLibrary only depends on the loaded library</source>
          <target state="translated">DynamicLibrary のハッシュコードは、ロードされたライブラリにのみ依存します。</target>
        </trans-unit>
        <trans-unit id="812ee382c6eeebb840f126f18f6b346a243f9091" translate="yes" xml:space="preserve">
          <source>The hash code for a Pointer only depends on its address.</source>
          <target state="translated">ポインタのハッシュコードはアドレスにのみ依存します。</target>
        </trans-unit>
        <trans-unit id="3b194e9d560f5cddfd096e6f9648b0e4e135dd7b" translate="yes" xml:space="preserve">
          <source>The hash code for this object.</source>
          <target state="translated">このオブジェクトのハッシュコード。</target>
        </trans-unit>
        <trans-unit id="a9dc5eff368db942375fbe3e5af3383595d29128" translate="yes" xml:space="preserve">
          <source>The hash code for this object. &lt;a href=&quot;../dart-core/object/hashcode&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このオブジェクトのハッシュコード。&lt;a href=&quot;../dart-core/object/hashcode&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="276b63118269b0528d6482c6dbc7cd54a5f1b7c2" translate="yes" xml:space="preserve">
          <source>The hash code for this object. &lt;a href=&quot;bool/hashcode&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このオブジェクトのハッシュコード。&lt;a href=&quot;bool/hashcode&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d320fe014bb5010c974920ccb1b0ac9100350418" translate="yes" xml:space="preserve">
          <source>The hash code for this object. &lt;a href=&quot;cssrect/hashcode&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このオブジェクトのハッシュコード。&lt;a href=&quot;cssrect/hashcode&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="58a9efb4652c89918c7a1edf5988e2c51b2f8b55" translate="yes" xml:space="preserve">
          <source>The hash code for this object. &lt;a href=&quot;datetime/hashcode&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このオブジェクトのハッシュコード。&lt;a href=&quot;datetime/hashcode&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d262675c2bdee07217820d01eec0cf3d42c41102" translate="yes" xml:space="preserve">
          <source>The hash code for this object. &lt;a href=&quot;domrectreadonly/hashcode&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このオブジェクトのハッシュコード。&lt;a href=&quot;domrectreadonly/hashcode&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4b9e2c3d02cc1f2ad88806082f029786faa5b38b" translate="yes" xml:space="preserve">
          <source>The hash code for this object. &lt;a href=&quot;duration/hashcode&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このオブジェクトのハッシュコード。&lt;a href=&quot;duration/hashcode&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="71d6e2886c41ca148bc5e342bb56a881572a643a" translate="yes" xml:space="preserve">
          <source>The hash code for this object. &lt;a href=&quot;javascriptobject/hashcode&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このオブジェクトのハッシュコード。&lt;a href=&quot;javascriptobject/hashcode&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2b05f8bb6066c041dae62d6f713537083480b365" translate="yes" xml:space="preserve">
          <source>The hash code for this object. &lt;a href=&quot;jsobject/hashcode&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このオブジェクトのハッシュコード。&lt;a href=&quot;jsobject/hashcode&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5300ac93b76a3fa078c4906f2bf6f399c0b07525" translate="yes" xml:space="preserve">
          <source>The hash code for this object. &lt;a href=&quot;null/hashcode&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このオブジェクトのハッシュコード。&lt;a href=&quot;null/hashcode&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c83b1351d9d81e48f2deb17fe6f1fa9a3175af88" translate="yes" xml:space="preserve">
          <source>The hash code for this object. &lt;a href=&quot;object/hashcode&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このオブジェクトのハッシュコード。&lt;a href=&quot;object/hashcode&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1a29c519cda24daf0bbc3e02908e6a5f6f9a0320" translate="yes" xml:space="preserve">
          <source>The hash code for this object. &lt;a href=&quot;point/hashcode&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このオブジェクトのハッシュコード。&lt;a href=&quot;point/hashcode&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="38be0607af0c20ed27e82a3e44faf263368803c1" translate="yes" xml:space="preserve">
          <source>The hash code for this object. &lt;a href=&quot;rectangle/hashcode&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このオブジェクトのハッシュコード。&lt;a href=&quot;rectangle/hashcode&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dd9869d5be1b16532b341ef3e5a238e3587bf001" translate="yes" xml:space="preserve">
          <source>The hash code is compatible with equality. It returns the same value for an &lt;a href=&quot;../int-class&quot;&gt;int&lt;/a&gt; and a &lt;a href=&quot;../double-class&quot;&gt;double&lt;/a&gt; with the same numerical value, and therefore the same value for the doubles zero and minus zero.</source>
          <target state="translated">ハッシュコードは等価性と互換性があります。これは、同じ数値を持つ&lt;a href=&quot;../int-class&quot;&gt;int&lt;/a&gt;と&lt;a href=&quot;../double-class&quot;&gt;doubleに&lt;/a&gt;同じ値を返すため、doubleゼロと​​マイナスゼロに同じ値を返します。</target>
        </trans-unit>
        <trans-unit id="526a23f52761b93d7c34dee33b4f702e29ca09b8" translate="yes" xml:space="preserve">
          <source>The header named &lt;code&gt;name&lt;/code&gt; will have a string value derived from &lt;code&gt;value&lt;/code&gt; added to its list of values.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; という名前のヘッダーには、値のリストに追加された &lt;code&gt;value&lt;/code&gt; から派生した文字列値が含まれます。</target>
        </trans-unit>
        <trans-unit id="b97eb42b7c3a2fbaf31af36133b9a6ee10c1058c" translate="yes" xml:space="preserve">
          <source>The height must be non-negative. If a negative height is supplied, it is clamped to zero.</source>
          <target state="translated">高さは負でないものでなければなりません。負の高さが与えられた場合、それはゼロにクランプされます。</target>
        </trans-unit>
        <trans-unit id="f3f89b66b27439feb607543cae6644682a6ffb7e" translate="yes" xml:space="preserve">
          <source>The height of the rectangle.</source>
          <target state="translated">矩形の高さ。</target>
        </trans-unit>
        <trans-unit id="6b514bd4927db71995c2c69d1fbc8823095cd4a4" translate="yes" xml:space="preserve">
          <source>The height of the viewport including scrollbars.</source>
          <target state="translated">スクロールバーを含むビューポートの高さ。</target>
        </trans-unit>
        <trans-unit id="8486824f601198eb412b858964df15796708ca1b" translate="yes" xml:space="preserve">
          <source>The height of the viewport including scrollbars. &lt;a href=&quot;window/innerheight&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">スクロールバーを含むビューポートの高さ。&lt;a href=&quot;window/innerheight&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="409d462949270a7794658751c6d6197c5141de65" translate="yes" xml:space="preserve">
          <source>The height of this canvas element in CSS pixels.</source>
          <target state="translated">この canvas 要素の高さを CSS ピクセルで指定します。</target>
        </trans-unit>
        <trans-unit id="dc54a5c63ad0b0e7f1baba668f7b91764aa0eb16" translate="yes" xml:space="preserve">
          <source>The height of this rectangle.</source>
          <target state="translated">この矩形の高さ。</target>
        </trans-unit>
        <trans-unit id="f5c83a2ed336bab0c6a6fc817d8659fa743934cf" translate="yes" xml:space="preserve">
          <source>The height of this rectangle. &lt;a href=&quot;cssrect/height&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">この長方形の高さ。&lt;a href=&quot;cssrect/height&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ca878ed1e20b7c6ee2a595c03522d6881fe5d451" translate="yes" xml:space="preserve">
          <source>The height of this window including all user interface elements.</source>
          <target state="translated">すべてのユーザーインターフェース要素を含むこのウィンドウの高さ。</target>
        </trans-unit>
        <trans-unit id="d0e0cc16d406475620163e58a9f45abcba39ec32" translate="yes" xml:space="preserve">
          <source>The height of this window including all user interface elements. &lt;a href=&quot;window/outerheight&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">すべてのユーザーインターフェイス要素を含むこのウィンドウの高さ。&lt;a href=&quot;window/outerheight&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4fb70f2551ffb0a620cbe12ac0519af46fc7ca48" translate="yes" xml:space="preserve">
          <source>The high-watermark in bytes for the resident set size of memory for the process.</source>
          <target state="translated">プロセスの常駐設定メモリサイズのバイト単位のハイ・ウォーターマーク。</target>
        </trans-unit>
        <trans-unit id="43d381dc0917e05b66a1d5fd05dd14720d52df0d" translate="yes" xml:space="preserve">
          <source>The high-watermark in bytes for the resident set size of memory for the process. &lt;a href=&quot;processinfo/maxrss&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">プロセスのメモリの常駐セットサイズのバイト単位の最高水準点。&lt;a href=&quot;processinfo/maxrss&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f7f031527d9b4dd328221ba2b3851e55c9888f99" translate="yes" xml:space="preserve">
          <source>The host part of the authority component is set through &lt;code&gt;host&lt;/code&gt;. The host can either be a hostname, an IPv4 address or an IPv6 address, contained in '&lt;code&gt;' and '&lt;/code&gt;'. If the host contains a ':' character, the '&lt;code&gt;' and '&lt;/code&gt;' are added if not already provided. The host is normalized to all lowercase letters.</source>
          <target state="translated">権限コンポーネントのホスト部分は、 &lt;code&gt;host&lt;/code&gt; を介して設定されます。ホストは、「 &lt;code&gt;' and '&lt;/code&gt; 」に含まれるホスト名、IPv4アドレス、またはIPv6アドレスのいずれかです。ホストに「：」文字が含まれている場合、「 &lt;code&gt;' and '&lt;/code&gt; まだ提供されていなければ」が追加されます。ホストはすべて小文字に正規化されます。</target>
        </trans-unit>
        <trans-unit id="8b337701d30f7e0b9f6cafe873fe1fc62b49dff2" translate="yes" xml:space="preserve">
          <source>The host string is case-insensitive. The returned host name is canonicalized to lower-case with upper-case percent-escapes.</source>
          <target state="translated">ホスト文字列は大文字小文字を区別しません。返されたホスト名は、大文字のパーセンテージエスケープで小文字に正規化されます。</target>
        </trans-unit>
        <trans-unit id="1c1815234d2e791e8210be1be7569902da452616" translate="yes" xml:space="preserve">
          <source>The host used to lookup the address.</source>
          <target state="translated">アドレスの検索に使用されたホスト。</target>
        </trans-unit>
        <trans-unit id="5d86e87b2c74a14230d8b9f83ffd186cf28c992c" translate="yes" xml:space="preserve">
          <source>The host used to lookup the address. &lt;a href=&quot;internetaddress/host&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">アドレスの検索に使用されるホスト。&lt;a href=&quot;internetaddress/host&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ece190a3b05ee6ac2a3eb09ee0fa6cdcb2171c21" translate="yes" xml:space="preserve">
          <source>The host used to lookup the address. If there is no host associated with the address this returns the numeric address.</source>
          <target state="translated">アドレスの検索に使用されたホスト。アドレスに関連付けられたホストがない場合は、数値のアドレスを返します。</target>
        </trans-unit>
        <trans-unit id="0bd64d0586b068be8049a2799e41ed7354840e5a" translate="yes" xml:space="preserve">
          <source>The hour of the day, expressed as in a 24-hour clock &lt;code&gt;0..23&lt;/code&gt;.</source>
          <target state="translated">24時間制 &lt;code&gt;0..23&lt;/code&gt; で表される日の時間。</target>
        </trans-unit>
        <trans-unit id="a8db61e7de325276153a69fcc691f4d48860f069" translate="yes" xml:space="preserve">
          <source>The hour of the day, expressed as in a 24-hour clock &lt;code&gt;0..23&lt;/code&gt;. &lt;a href=&quot;datetime/hour&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">24時間制 &lt;code&gt;0..23&lt;/code&gt; で表される日の時間。&lt;a href=&quot;datetime/hour&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="940277a485589cdd6ed3bd78fa92c94d903e6a74" translate="yes" xml:space="preserve">
          <source>The id of the current session.</source>
          <target state="translated">現在のセッションのID。</target>
        </trans-unit>
        <trans-unit id="7f62506d0dfe954960918830a7bf5825c29fff48" translate="yes" xml:space="preserve">
          <source>The image drawn to the canvas depends on the type of this object:</source>
          <target state="translated">キャンバスに描画される画像は、このオブジェクトの種類によって異なります。</target>
        </trans-unit>
        <trans-unit id="6b3dcc7e6d975943eb3e46cbcd12864765f79393" translate="yes" xml:space="preserve">
          <source>The image is a region of &lt;code&gt;source&lt;/code&gt; that is &lt;code&gt;sourceWidth&lt;/code&gt; wide and &lt;code&gt;destHeight&lt;/code&gt; tall with top left corner at (&lt;code&gt;sourceX&lt;/code&gt;, &lt;code&gt;sourceY&lt;/code&gt;). The image will be drawn to this context with its top left corner at the point (&lt;code&gt;destX&lt;/code&gt;, &lt;code&gt;destY&lt;/code&gt;) and will be scaled to be &lt;code&gt;destWidth&lt;/code&gt; wide and &lt;code&gt;destHeight&lt;/code&gt; tall.</source>
          <target state="translated">画像は領域である &lt;code&gt;source&lt;/code&gt; で &lt;code&gt;sourceWidth&lt;/code&gt; ワイド及び &lt;code&gt;destHeight&lt;/code&gt; （AT左上隅と背の高い &lt;code&gt;sourceX&lt;/code&gt; 、 &lt;code&gt;sourceY&lt;/code&gt; ）。画像は、このコンテキスト（左上隅がポイント（ &lt;code&gt;destX&lt;/code&gt; 、 &lt;code&gt;destY&lt;/code&gt; ））でこのコンテキストに描画され、幅が &lt;code&gt;destHeight&lt;/code&gt; 高さが &lt;code&gt;destWidth&lt;/code&gt; なるようにスケーリングされます。</target>
        </trans-unit>
        <trans-unit id="554adeca548747148fc038bffa2922a8c58021d5" translate="yes" xml:space="preserve">
          <source>The image will be drawn to an area of this canvas defined by &lt;code&gt;destRect&lt;/code&gt;. &lt;code&gt;sourceRect&lt;/code&gt; defines the region of the source image that is drawn. If &lt;code&gt;sourceRect&lt;/code&gt; is not provided, then the entire rectangular image from &lt;code&gt;source&lt;/code&gt; will be drawn to this context.</source>
          <target state="translated">画像は、 &lt;code&gt;destRect&lt;/code&gt; で定義されたこのキャンバスの領域に描画されます。 &lt;code&gt;sourceRect&lt;/code&gt; は、描画されるソース画像の領域を定義します。場合 &lt;code&gt;sourceRect&lt;/code&gt; が設けられておらず、その後の全体矩形画像 &lt;code&gt;source&lt;/code&gt; 、このコンテキストに描画されます。</target>
        </trans-unit>
        <trans-unit id="21cbf69b42f7ab244c810254851171f137387603" translate="yes" xml:space="preserve">
          <source>The image will be drawn to this context with its top left corner at the point (&lt;code&gt;destX&lt;/code&gt;, &lt;code&gt;destY&lt;/code&gt;) and will be scaled to be &lt;code&gt;destWidth&lt;/code&gt; wide and &lt;code&gt;destHeight&lt;/code&gt; tall.</source>
          <target state="translated">画像はこのコンテキストに描画され、左上隅がポイント（ &lt;code&gt;destX&lt;/code&gt; 、 &lt;code&gt;destY&lt;/code&gt; ））で幅が &lt;code&gt;destHeight&lt;/code&gt; 高さが &lt;code&gt;destWidth&lt;/code&gt; なるようにスケーリングされます。</target>
        </trans-unit>
        <trans-unit id="d12faa3f2206da68dab6a059827751048456dec3" translate="yes" xml:space="preserve">
          <source>The implementation uses platform-dependent event-based APIs for receiving file-system notifications, thus behavior depends on the platform.</source>
          <target state="translated">実装では、ファイルシステムの通知を受信するためにプラットフォームに依存したイベントベースのAPIを使用しているため、動作はプラットフォームに依存します。</target>
        </trans-unit>
        <trans-unit id="c8fadd9c0a921a1fc4440e95a725a083237822fe" translate="yes" xml:space="preserve">
          <source>The indexable object that &lt;a href=&quot;../argumenterror/invalidvalue&quot;&gt;invalidValue&lt;/a&gt; was not a valid index into.</source>
          <target state="translated">&lt;a href=&quot;../argumenterror/invalidvalue&quot;&gt;invalidValue&lt;/a&gt;が有効なインデックスではなかったインデックス可能なオブジェクト。</target>
        </trans-unit>
        <trans-unit id="33bdc1502fa7055e83caffed8793491fd4b00a52" translate="yes" xml:space="preserve">
          <source>The indexable object that &lt;a href=&quot;argumenterror/invalidvalue&quot;&gt;invalidValue&lt;/a&gt; was not a valid index into.</source>
          <target state="translated">&lt;a href=&quot;argumenterror/invalidvalue&quot;&gt;invalidValue&lt;/a&gt;が有効なインデックスではなかったインデックス可能なオブジェクト。</target>
        </trans-unit>
        <trans-unit id="001bc55e5aad28092e038285661a7c8bfdda0330" translate="yes" xml:space="preserve">
          <source>The initial WebSocket handshake must have occurred prior to this call. A WebSocket client can automatically perform the handshake using &lt;a href=&quot;connect&quot;&gt;WebSocket.connect&lt;/a&gt;, while a server can do so using &lt;a href=&quot;../websockettransformer/upgrade&quot;&gt;WebSocketTransformer.upgrade&lt;/a&gt;. To manually upgrade an &lt;a href=&quot;../httprequest-class&quot;&gt;HttpRequest&lt;/a&gt;, &lt;a href=&quot;../httpresponse/detachsocket&quot;&gt;HttpResponse.detachSocket&lt;/a&gt; may be called.</source>
          <target state="translated">最初のWebSocketハンドシェイクは、この呼び出しの前に発生している必要があります。WebSocketクライアントが自動的に使用してハンドシェイクを実行することができます&lt;a href=&quot;connect&quot;&gt;WebSocket.connectを&lt;/a&gt;サーバが使用してそうすることができる一方で、&lt;a href=&quot;../websockettransformer/upgrade&quot;&gt; WebSocketTransformer.upgradeを&lt;/a&gt;。&lt;a href=&quot;../httprequest-class&quot;&gt;HttpRequest&lt;/a&gt;を手動でアップグレードするには、&lt;a href=&quot;../httpresponse/detachsocket&quot;&gt;HttpResponse.detachSocket&lt;/a&gt;を呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="a5e5bbc27d92d7c9052b6b650d440965d2783d5a" translate="yes" xml:space="preserve">
          <source>The input is decoded as if by &lt;code&gt;decoder.convert&lt;/code&gt;.</source>
          <target state="translated">入力は、 &lt;code&gt;decoder.convert&lt;/code&gt; のようにデコードされます。</target>
        </trans-unit>
        <trans-unit id="48f39ce161a39c45dbe2322cd9eb143e38c467a0" translate="yes" xml:space="preserve">
          <source>The input is encoded as if by &lt;code&gt;encoder.convert&lt;/code&gt;.</source>
          <target state="translated">入力は、 &lt;code&gt;encoder.convert&lt;/code&gt; のようにエンコードされます。</target>
        </trans-unit>
        <trans-unit id="c1238de8b34d9217ca8a6a71c19283050e6b5bcd" translate="yes" xml:space="preserve">
          <source>The insertion order of keys is remembered, and keys are iterated in the order they were inserted into the map. Values are iterated in their corresponding key's order. Changing a key's value, when the key is already in the map, does not change the iteration order, but removing the key and adding it again will make it be last in the iteration order.</source>
          <target state="translated">キーの挿入順が記憶され、キーはマップに挿入された順にイテレーションされます。値は、対応するキーの順序で繰り返し処理されます。キーがすでにマップ内にあるときにキーの値を変更しても、反復順序は変更されませんが、キーを削除して再度追加すると、そのキーが反復順序の最後になります。</target>
        </trans-unit>
        <trans-unit id="711f8307d72a631857ed1ab54bf9323219aae75e" translate="yes" xml:space="preserve">
          <source>The integer index of this enum.</source>
          <target state="translated">この列挙の整数インデックス。</target>
        </trans-unit>
        <trans-unit id="425b2405e415050f2dab85e7c9f625bc9d1ba2ec" translate="yes" xml:space="preserve">
          <source>The intent is to capture those members that constitute the API of a class. Hence fields are not included, but the getters and setters implicitly introduced by fields are included.</source>
          <target state="translated">この意図は、クラスのAPIを構成するメンバーを捕捉することにあります。したがって、フィールドは含まれませんが、フィールドによって暗黙的に導入されるゲッターとセッターは含まれます。</target>
        </trans-unit>
        <trans-unit id="90c14a6a7b3e118c9038329f5246c92f93f9ccf8" translate="yes" xml:space="preserve">
          <source>The intent is to capture those members that constitute the API of an instance. Hence fields are not included, but the getters and setters implicitly introduced by fields are included. The map includes methods, getters and setters that are inherited as well as those introduced by the class itself.</source>
          <target state="translated">この意図は、インスタンスのAPIを構成するメンバーを捕捉することにあります。したがって、フィールドは含まれませんが、フィールドによって暗黙的に導入されるゲッターやセッターは含まれます。このマップには、継承されたメソッド、ゲッター、セッターのほか、クラス自体が導入したものも含まれます。</target>
        </trans-unit>
        <trans-unit id="612b8cdc9d89a33f1f5f3d7b2299771d61a183c6" translate="yes" xml:space="preserve">
          <source>The intent of the &lt;code&gt;@Deprecated&lt;/code&gt; annotation is to inform users of a feature that they should change their code, even if it is currently still working correctly.</source>
          <target state="translated">の意図 &lt;code&gt;@Deprecated&lt;/code&gt; アノテーション現在正しく機能している場合でも、コードを変更する必要があることをユーザーに通知することです。</target>
        </trans-unit>
        <trans-unit id="a76b4b323537a0bf126b00689e08de7f093707d2" translate="yes" xml:space="preserve">
          <source>The intent of the &lt;code&gt;@override&lt;/code&gt; notation is to catch situations where a superclass renames a member, and an independent subclass which used to override the member, could silently continue working using the superclass implementation.</source>
          <target state="translated">の意図 &lt;code&gt;@override&lt;/code&gt; 表記スーパークラスがメンバーの名前を変更する状況、およびメンバーのオーバーライドに使用されていた独立したサブクラスが、スーパークラスの実装を使用して静かに作業を継続できる状況をキャッチすることです。</target>
        </trans-unit>
        <trans-unit id="824f631b361d76391a4ded0b4d7eb95e1c2eb558" translate="yes" xml:space="preserve">
          <source>The intent of the &lt;code&gt;@proxy&lt;/code&gt; notation is to create objects that implement a type (or multiple types) that are not known at compile time. If the types are known at compile time, a class can be written that implements these types.</source>
          <target state="translated">の意図 &lt;code&gt;@proxy&lt;/code&gt; 表記コンパイル時に不明なタイプ（または複数のタイプ）を実装するオブジェクトを作成することです。コンパイル時に型がわかっている場合は、これらの型を実装するクラスを作成できます。</target>
        </trans-unit>
        <trans-unit id="c822e200699ca0d989bed447f0e9638568f3facf" translate="yes" xml:space="preserve">
          <source>The intersection of two axis-aligned rectangles, if any, is always another axis-aligned rectangle.</source>
          <target state="translated">2つの軸を揃えた長方形の交点がある場合、その交点は常に別の軸を揃えた長方形になります。</target>
        </trans-unit>
        <trans-unit id="e7a507c921a4a6971ce9f48069536dd609a65bb4" translate="yes" xml:space="preserve">
          <source>The interval between ping signals.</source>
          <target state="translated">ping信号の間隔。</target>
        </trans-unit>
        <trans-unit id="cd8f4a15c3f695b2708924797520d61dda337514" translate="yes" xml:space="preserve">
          <source>The interval between ping signals. &lt;a href=&quot;websocket/pinginterval&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">ping信号間の間隔。&lt;a href=&quot;websocket/pinginterval&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bcb2601d9b81dcf3b4d8d064e3863701e11e79f6" translate="yes" xml:space="preserve">
          <source>The invalid value.</source>
          <target state="translated">無効な値です。</target>
        </trans-unit>
        <trans-unit id="4fa02d77bb5d10e016d24f007eda19c877583ccb" translate="yes" xml:space="preserve">
          <source>The isolate is requested to terminate itself. The &lt;code&gt;priority&lt;/code&gt; argument specifies when this must happen.</source>
          <target state="translated">分離株はそれ自体を終了するように要求されます。の &lt;code&gt;priority&lt;/code&gt; これが起こる必要がある場合に引数が指定されます。</target>
        </trans-unit>
        <trans-unit id="b75adb43a6e1e1f3957e3765f8f2d0a9ea832c20" translate="yes" xml:space="preserve">
          <source>The isolate object provides the capabilities required to inspect, pause or kill the isolate, and allows granting these capabilities to others.</source>
          <target state="translated">アイソレートオブジェクトは、アイソレートの検査、一時停止、終了に必要な機能を提供し、他の人にその機能を付与することができます。</target>
        </trans-unit>
        <trans-unit id="2ba415c9cb40404c8256b6914ea9690b3f14d860" translate="yes" xml:space="preserve">
          <source>The isolate starts executing the top-level &lt;code&gt;main&lt;/code&gt; function of the library with the given URI.</source>
          <target state="translated">アイソレートはトップレベルの実行を開始します &lt;code&gt;main&lt;/code&gt; 、指定されたURIを使用してライブラリメイン関数のます。</target>
        </trans-unit>
        <trans-unit id="5f1c4af815c8699479faa38a2d7dfe4bf3b1fec6" translate="yes" xml:space="preserve">
          <source>The isolate will send &lt;code&gt;response&lt;/code&gt; as a message on &lt;code&gt;responsePort&lt;/code&gt; as the last thing before it terminates. It will run no further code after the message has been sent.</source>
          <target state="translated">隔離はメッセージとして &lt;code&gt;response&lt;/code&gt; を送信します &lt;code&gt;responsePort&lt;/code&gt; 、それが終了する前の最後のものとして、responsePortでします。メッセージが送信された後、それ以上のコードは実行されません。</target>
        </trans-unit>
        <trans-unit id="005f9e578c5c5fae8f9f41152eceebf4a50e29b2" translate="yes" xml:space="preserve">
          <source>The iterable is iterated when the stream receives a listener, and stops iterating if the listener cancels the subscription, or if the &lt;a href=&quot;../../dart-core/iterator/movenext&quot;&gt;Iterator.moveNext&lt;/a&gt; method returns &lt;code&gt;false&lt;/code&gt; or throws. Iteration is suspended while the stream subscription is paused.</source>
          <target state="translated">ストリームがリスナーを受信すると、反復可能オブジェクトが反復され、リスナーがサブスクリプションをキャンセルした場合、または&lt;a href=&quot;../../dart-core/iterator/movenext&quot;&gt;Iterator.moveNext&lt;/a&gt;メソッドが &lt;code&gt;false&lt;/code&gt; を返した場合、またはスローされた場合は、反復が停止します。ストリームのサブスクリプションが一時停止している間、反復は一時停止されます。</target>
        </trans-unit>
        <trans-unit id="48bd9d71f118f9bdcbaa0b706a3ecfa48736866e" translate="yes" xml:space="preserve">
          <source>The iterable must have at least one element. If it has only one element, that element is returned.</source>
          <target state="translated">iterableは少なくとも1つの要素を持っていなければなりません。要素が1つしかない場合は、その要素が返されます。</target>
        </trans-unit>
        <trans-unit id="b8407dd5f0ead87f30e1d8cc1b962c55a8b728e9" translate="yes" xml:space="preserve">
          <source>The iteration order of the set is not specified and depends on the hashcodes of the provided elements. However, the order is stable: multiple iterations over the same set produce the same order, as long as the set is not modified.</source>
          <target state="translated">セットの繰り返し順序は指定されておらず,提供された要素のハッシュコードに依存します.しかし,順序は安定しています:同じ集合に対する複数回の反復は,集合が変更されない限り,同じ順序を生成します.</target>
        </trans-unit>
        <trans-unit id="5a5ff5f1132f7a574a5ffd6980421d61793fadbe" translate="yes" xml:space="preserve">
          <source>The key of the entry.</source>
          <target state="translated">エントリーのキーです。</target>
        </trans-unit>
        <trans-unit id="21ea8de3e2e4479e97386365e5eb94bfc592ae53" translate="yes" xml:space="preserve">
          <source>The keys computed by the source &lt;code&gt;iterable&lt;/code&gt; do not need to be unique. The last occurrence of a key will simply overwrite any previous value.</source>
          <target state="translated">ソースによって計算されたキー &lt;code&gt;iterable&lt;/code&gt; 一意である必要はありません。キーの最後の出現は、以前の値を上書きするだけです。</target>
        </trans-unit>
        <trans-unit id="812d1ef6fa3e7be29f52cbe5549273f187ad4f5e" translate="yes" xml:space="preserve">
          <source>The keys for the map must follow these rules:</source>
          <target state="translated">地図の鍵は、これらのルールに従わなければなりません。</target>
        </trans-unit>
        <trans-unit id="55c0781b51af5cfd0cfca15aaf8a09eaf1afaa5a" translate="yes" xml:space="preserve">
          <source>The keys must all be instances of &lt;code&gt;K&lt;/code&gt; and the values of &lt;code&gt;V&lt;/code&gt;. The &lt;code&gt;other&lt;/code&gt; map itself can have any type.</source>
          <target state="translated">キーはすべて &lt;code&gt;K&lt;/code&gt; のインスタンスと &lt;code&gt;V&lt;/code&gt; の値でなければなりません。の &lt;code&gt;other&lt;/code&gt; マップ自体は、任意の型を持つことができます。</target>
        </trans-unit>
        <trans-unit id="ba9fbdefd964779a526eb99175e81c521f300bc6" translate="yes" xml:space="preserve">
          <source>The keys must all be instances of &lt;code&gt;K&lt;/code&gt; and the values to &lt;code&gt;V&lt;/code&gt;. The &lt;code&gt;other&lt;/code&gt; map itself can have any type.</source>
          <target state="translated">キーはすべて &lt;code&gt;K&lt;/code&gt; のインスタンスと &lt;code&gt;V&lt;/code&gt; の値でなければなりません。の &lt;code&gt;other&lt;/code&gt; マップ自体は、任意の型を持つことができます。</target>
        </trans-unit>
        <trans-unit id="0d96c8a66417786506a92c08448b542cc5197801" translate="yes" xml:space="preserve">
          <source>The keys of &lt;a href=&quot;../audioparammap-class&quot;&gt;this&lt;/a&gt;.</source>
          <target state="translated">の鍵 &lt;a href=&quot;../audioparammap-class&quot;&gt;これ&lt;/a&gt;。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
