<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="babel">
    <body>
      <group id="babel">
        <trans-unit id="5ddf4838a0c64778f8e3aee44f840fb1fbfeefb3" translate="yes" xml:space="preserve">
          <source>&quot;auto&quot; will set the value by evaluating &lt;code&gt;code.length &amp;gt; 500_000&lt;/code&gt;</source>
          <target state="translated">「auto」は、 &lt;code&gt;code.length &amp;gt; 500_000&lt;/code&gt; 評価することによって値を設定します</target>
        </trans-unit>
        <trans-unit id="b6701ba4cc7880e48f11530cbcd5673a5d56929d" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2018 Sebastian McKenzie</source>
          <target state="translated">&amp;copy;2018セバスチャンマッケンジー</target>
        </trans-unit>
        <trans-unit id="5de7a45028190beff630d842f090bc7e99c53a4f" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2020 Sebastian McKenzie</source>
          <target state="translated">&amp;copy;2020セバスチャンマッケンジー</target>
        </trans-unit>
        <trans-unit id="ee8ce9e42ad8dc9ff0c1f6529e4c3d790bbcc814" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Changes to the language are developed by way of a process which provides guidelines for evolving an addition from an idea to a fully specified feature&amp;rdquo;</source>
          <target state="translated">「言語の変更は、アイデアから完全に指定された機能への追加を進化させるためのガイドラインを提供するプロセスによって開発されます。」</target>
        </trans-unit>
        <trans-unit id="361f27e769f6ae2dbf0c74badcc8e98d9afe791c" translate="yes" xml:space="preserve">
          <source>(eg. &lt;code&gt;process.env.NODE_ENV === &quot;development&quot;&lt;/code&gt;) then statically evaluate and replace it.</source>
          <target state="translated">（たとえば、 &lt;code&gt;process.env.NODE_ENV === &quot;development&quot;&lt;/code&gt; ）を静的に評価して置き換えます。</target>
        </trans-unit>
        <trans-unit id="bb519c34e0bd7309cec43f79758e55c36f6b6d9e" translate="yes" xml:space="preserve">
          <source>(examples are from proposal)</source>
          <target state="translated">（例は提案から）</target>
        </trans-unit>
        <trans-unit id="bcac7464521b8c19a2372c739f6dc9e9ab7dfc80" translate="yes" xml:space="preserve">
          <source>.babelrc</source>
          <target state="translated">.babelrc</target>
        </trans-unit>
        <trans-unit id="37f752e35541e9b3c3cf11adb2f8199c3bde9d4a" translate="yes" xml:space="preserve">
          <source>.babelrc.js</source>
          <target state="translated">.babelrc.js</target>
        </trans-unit>
        <trans-unit id="70e0340e91888729c313f9bc661a9186cf5ee90c" translate="yes" xml:space="preserve">
          <source>1-1 mapping with plugin</source>
          <target state="translated">1-1 プラグインによるマッピング</target>
        </trans-unit>
        <trans-unit id="9d9551d6fe9822935217ff923d50742fe0e00810" translate="yes" xml:space="preserve">
          <source>6.x vs 7.x &lt;code&gt;.babelrc&lt;/code&gt; loading</source>
          <target state="translated">6.xと &lt;code&gt;.babelrc&lt;/code&gt; 読み込み</target>
        </trans-unit>
        <trans-unit id="0aeeea7d81a87ac2c06e793b3eca72b3a781dbd3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#configitem-type&quot;&gt;&lt;code&gt;ConfigItem&lt;/code&gt;&lt;/a&gt; instances expose properties to introspect the values, but each item should be treated as immutable. If changes are desired, the item should be removed from the list and replaced with either a normal Babel config value, or with a replacement item created by &lt;code&gt;babel.createConfigItem&lt;/code&gt;. See that function for information about &lt;code&gt;ConfigItem&lt;/code&gt; fields.</source>
          <target state="translated">&lt;a href=&quot;#configitem-type&quot;&gt; &lt;code&gt;ConfigItem&lt;/code&gt; &lt;/a&gt;インスタンスは、値をイントロスペクトするプロパティを公開しますが、各アイテムは不変として扱われる必要があります。変更が必要な場合は、アイテムをリストから削除して、通常のBabel構成値、または &lt;code&gt;babel.createConfigItem&lt;/code&gt; によって作成された置換アイテムに置き換える必要があります。 &lt;code&gt;ConfigItem&lt;/code&gt; フィールドについては、その関数を参照してください。</target>
        </trans-unit>
        <trans-unit id="d4075c3562df0bb13bf857bef9050bea06611d15" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../transform-class-constructor-call/index&quot;&gt;transform-class-constructor-call&lt;/a&gt; (Deprecated)</source>
          <target state="translated">&lt;a href=&quot;../transform-class-constructor-call/index&quot;&gt;transform-class-constructor-call&lt;/a&gt;（非推奨）</target>
        </trans-unit>
        <trans-unit id="478686b930eec52fb7172bb096367c3ad40bf7cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../usage/babel-register/index&quot;&gt;Babel-register&lt;/a&gt;: The require hook will bind itself to node&amp;rsquo;s require and automatically compile files on the fly.</source>
          <target state="translated">&lt;a href=&quot;../usage/babel-register/index&quot;&gt;Babel-register&lt;/a&gt;：requireフックはノードのrequireにバインドし、ファイルをその場で自動的にコンパイルします。</target>
        </trans-unit>
        <trans-unit id="12d07f2f1f4970333df6f79da1ec1182ba79889d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;babel-code-frame/index&quot;&gt;Babel-code-frame&lt;/a&gt;: Generate errors that contain a code frame that point to source locations</source>
          <target state="translated">&lt;a href=&quot;babel-code-frame/index&quot;&gt;Babel-code-frame&lt;/a&gt;：ソースの場所を指すコードフレームを含むエラーを生成します</target>
        </trans-unit>
        <trans-unit id="3a64759d6b348651263e119a44ceb66ecc56f212" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;babel-helpers/index&quot;&gt;Babel-helpers&lt;/a&gt;: Collection of helper functions used by Babel transforms</source>
          <target state="translated">&lt;a href=&quot;babel-helpers/index&quot;&gt;Babel-helpers&lt;/a&gt;：Babel変換で使用されるヘルパー関数のコレクション</target>
        </trans-unit>
        <trans-unit id="00dfe1eb986fcf5d3d089368ad6dd09eeb91237d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;babel-template/index&quot;&gt;Babel-template&lt;/a&gt;: Generate an AST from a string template</source>
          <target state="translated">&lt;a href=&quot;babel-template/index&quot;&gt;Babel-template&lt;/a&gt;：文字列テンプレートからASTを生成します</target>
        </trans-unit>
        <trans-unit id="928d70485b59394943e197b8df42679a303b2f20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;babel-types/index&quot;&gt;Babel-types&lt;/a&gt;: Babel Types is a Lodash-esque utility library for AST nodes</source>
          <target state="translated">&lt;a href=&quot;babel-types/index&quot;&gt;Babel-types&lt;/a&gt;：Babel Typesは、ASTノード用のLodash-esqueユーティリティライブラリです。</target>
        </trans-unit>
        <trans-unit id="790525e4454a6c33e302db7caf07983810496016" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;babylon/index&quot;&gt;Babylon&lt;/a&gt;: Babylon is a JavaScript parser used in Babel</source>
          <target state="translated">&lt;a href=&quot;babylon/index&quot;&gt;バビロン&lt;/a&gt;：バビロンはバベルで使用されるJavaScriptパーサーです</target>
        </trans-unit>
        <trans-unit id="4f59ff544d64718604a1f1b7c79239d525c87eaa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/babel/babel-preset-env/blob/master/data/built-in-features.js&quot;&gt;Built-ins&lt;/a&gt;, such as &lt;code&gt;map&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;, or &lt;code&gt;object.assign&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/babel/babel-preset-env/blob/master/data/built-in-features.js&quot;&gt;&lt;/a&gt; &lt;code&gt;map&lt;/code&gt; 、 &lt;code&gt;set&lt;/code&gt; 、 &lt;code&gt;object.assign&lt;/code&gt; などのビルトイン。</target>
        </trans-unit>
        <trans-unit id="1530cb30a295e695e989adf7e0d1c22a3f460626" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/babel/babel-preset-env/blob/master/data/plugin-features.js&quot;&gt;Babel plugins&lt;/a&gt; - both with (&lt;code&gt;babel-plugin-transform-es2015-spread&lt;/code&gt;) and without prefix (&lt;code&gt;transform-es2015-spread&lt;/code&gt;) are supported.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/babel/babel-preset-env/blob/master/data/plugin-features.js&quot;&gt;Babelプラグイン&lt;/a&gt; -（ &lt;code&gt;babel-plugin-transform-es2015-spread&lt;/code&gt; ）ありとプレフィックスなし（ &lt;code&gt;transform-es2015-spread&lt;/code&gt; ）の両方がサポートされています。</target>
        </trans-unit>
        <trans-unit id="e1342b7bbb7e1f828942933f529333d40b6fbbfb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/babel/babel/blob/master/packages/babel-compat-data/scripts/data/plugin-features.js&quot;&gt;Babel plugins&lt;/a&gt; - both with (&lt;code&gt;@babel/plugin-transform-spread&lt;/code&gt;) and without prefix (&lt;code&gt;plugin-transform-spread&lt;/code&gt;) are supported.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/babel/babel/blob/master/packages/babel-compat-data/scripts/data/plugin-features.js&quot;&gt;Babelプラグイン&lt;/a&gt;-プレフィックス付き（ &lt;code&gt;@babel/plugin-transform-spread&lt;/code&gt; ）とプレフィックスなし（ &lt;code&gt;plugin-transform-spread&lt;/code&gt; ）の両方がサポートされています。</target>
        </trans-unit>
        <trans-unit id="5e03d9254184e22c0e2b93550276261e0817180d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/babel/babel/tree/main/packages/babel-parser/ast/spec.md#classmethod&quot;&gt;ClassMethod&lt;/a&gt;, &lt;a href=&quot;https://github.com/babel/babel/tree/main/packages/babel-parser/ast/spec.md#objectproperty&quot;&gt;ObjectProperty&lt;/a&gt;, and &lt;a href=&quot;https://github.com/babel/babel/tree/main/packages/babel-parser/ast/spec.md#objectmethod&quot;&gt;ObjectMethod&lt;/a&gt; value property's properties in &lt;a href=&quot;https://github.com/babel/babel/tree/main/packages/babel-parser/ast/spec.md#functionexpression&quot;&gt;FunctionExpression&lt;/a&gt; is coerced/brought into the main method node.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/babel/babel/tree/main/packages/babel-parser/ast/spec.md#classmethod&quot;&gt;です。ClassMethod&lt;/a&gt;、&lt;a href=&quot;https://github.com/babel/babel/tree/main/packages/babel-parser/ast/spec.md#objectproperty&quot;&gt;OBJECTPROPERTY&lt;/a&gt;、および&lt;a href=&quot;https://github.com/babel/babel/tree/main/packages/babel-parser/ast/spec.md#objectmethod&quot;&gt;ObjectMethodの&lt;/a&gt;中の値のプロパティのプロパティ&lt;a href=&quot;https://github.com/babel/babel/tree/main/packages/babel-parser/ast/spec.md#functionexpression&quot;&gt;FunctionExpressionは&lt;/a&gt;メインメソッドノードに持ち込ま/強制されます。</target>
        </trans-unit>
        <trans-unit id="f579560149cae246de04ac51491c853f1e7bbd3d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/babel/babel/tree/main/packages/babel-parser/ast/spec.md#programs&quot;&gt;Program&lt;/a&gt; and &lt;a href=&quot;https://github.com/babel/babel/tree/main/packages/babel-parser/ast/spec.md#blockstatement&quot;&gt;BlockStatement&lt;/a&gt; contain additional &lt;code&gt;directives&lt;/code&gt; field with &lt;a href=&quot;https://github.com/babel/babel/tree/main/packages/babel-parser/ast/spec.md#directive&quot;&gt;Directive&lt;/a&gt; and &lt;a href=&quot;https://github.com/babel/babel/tree/main/packages/babel-parser/ast/spec.md#directiveliteral&quot;&gt;DirectiveLiteral&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/babel/babel/tree/main/packages/babel-parser/ast/spec.md#programs&quot;&gt;Program&lt;/a&gt;と&lt;a href=&quot;https://github.com/babel/babel/tree/main/packages/babel-parser/ast/spec.md#blockstatement&quot;&gt;BlockStatementに&lt;/a&gt;は、&lt;a href=&quot;https://github.com/babel/babel/tree/main/packages/babel-parser/ast/spec.md#directive&quot;&gt;Directive&lt;/a&gt;と&lt;a href=&quot;https://github.com/babel/babel/tree/main/packages/babel-parser/ast/spec.md#directiveliteral&quot;&gt;DirectiveLiteral&lt;/a&gt;を含む追加の &lt;code&gt;directives&lt;/code&gt; フィールドが含まれています</target>
        </trans-unit>
        <trans-unit id="d343a4b3ee48347b8c4af595b004f7560f6192bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/estree/estree/blob/master/es2015.md#methoddefinition&quot;&gt;MethodDefinition&lt;/a&gt; is replaced with &lt;a href=&quot;https://github.com/babel/babel/tree/main/packages/babel-parser/ast/spec.md#classmethod&quot;&gt;ClassMethod&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/estree/estree/blob/master/es2015.md#methoddefinition&quot;&gt;MethodDefinition&lt;/a&gt;は&lt;a href=&quot;https://github.com/babel/babel/tree/main/packages/babel-parser/ast/spec.md#classmethod&quot;&gt;ClassMethodに&lt;/a&gt;置き換えられました</target>
        </trans-unit>
        <trans-unit id="2113234e825a98e99be3919712292792048b15a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/estree/estree/blob/master/es2020.md#chainexpression&quot;&gt;ChainExpression&lt;/a&gt; is replaced with &lt;a href=&quot;https://github.com/babel/babel/blob/main/packages/babel-parser/ast/spec.md#optionalmemberexpression&quot;&gt;OptionalMemberExpression&lt;/a&gt; and &lt;a href=&quot;https://github.com/babel/babel/blob/main/packages/babel-parser/ast/spec.md#optionalcallexpression&quot;&gt;OptionalCallExpression&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/estree/estree/blob/master/es2020.md#chainexpression&quot;&gt;ChainExpression&lt;/a&gt;は、&lt;a href=&quot;https://github.com/babel/babel/blob/main/packages/babel-parser/ast/spec.md#optionalmemberexpression&quot;&gt;OptionalMemberExpression&lt;/a&gt;および&lt;a href=&quot;https://github.com/babel/babel/blob/main/packages/babel-parser/ast/spec.md#optionalcallexpression&quot;&gt;OptionalCallExpressionに&lt;/a&gt;置き換えられます</target>
        </trans-unit>
        <trans-unit id="7e5e9942fa9ecef1e27f575ab1cb35d3ae86d425" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/estree/estree/blob/master/es2020.md#importexpression&quot;&gt;ImportExpression&lt;/a&gt; is replaced with a &lt;a href=&quot;https://github.com/babel/babel/blob/main/packages/babel-parser/ast/spec.md#callexpression&quot;&gt;CallExpression&lt;/a&gt; whose &lt;code&gt;callee&lt;/code&gt; is an &lt;a href=&quot;https://github.com/babel/babel/blob/main/packages/babel-parser/ast/spec.md#import&quot;&gt;Import&lt;/a&gt; node.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/estree/estree/blob/master/es2020.md#importexpression&quot;&gt;ImportExpression&lt;/a&gt;は、 &lt;code&gt;callee&lt;/code&gt; が&lt;a href=&quot;https://github.com/babel/babel/blob/main/packages/babel-parser/ast/spec.md#import&quot;&gt;インポート&lt;/a&gt;ノードである&lt;a href=&quot;https://github.com/babel/babel/blob/main/packages/babel-parser/ast/spec.md#callexpression&quot;&gt;CallExpressionに&lt;/a&gt;置き換えられます。</target>
        </trans-unit>
        <trans-unit id="5e945ceb08c47dc5cf8006b86ab8399c47f8ee11" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/estree/estree/blob/master/es5.md#literal&quot;&gt;Literal&lt;/a&gt; token is replaced with &lt;a href=&quot;https://github.com/babel/babel/tree/main/packages/babel-parser/ast/spec.md#stringliteral&quot;&gt;StringLiteral&lt;/a&gt;, &lt;a href=&quot;https://github.com/babel/babel/tree/main/packages/babel-parser/ast/spec.md#numericliteral&quot;&gt;NumericLiteral&lt;/a&gt;, &lt;a href=&quot;https://github.com/babel/babel/tree/main/packages/babel-parser/ast/spec.md#bigintliteral&quot;&gt;BigIntLiteral&lt;/a&gt;, &lt;a href=&quot;https://github.com/babel/babel/tree/main/packages/babel-parser/ast/spec.md#booleanliteral&quot;&gt;BooleanLiteral&lt;/a&gt;, &lt;a href=&quot;https://github.com/babel/babel/tree/main/packages/babel-parser/ast/spec.md#nullliteral&quot;&gt;NullLiteral&lt;/a&gt;, &lt;a href=&quot;https://github.com/babel/babel/tree/main/packages/babel-parser/ast/spec.md#regexpliteral&quot;&gt;RegExpLiteral&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/estree/estree/blob/master/es5.md#literal&quot;&gt;リテラル&lt;/a&gt;トークンは、&lt;a href=&quot;https://github.com/babel/babel/tree/main/packages/babel-parser/ast/spec.md#stringliteral&quot;&gt;StringLiteral&lt;/a&gt;、&lt;a href=&quot;https://github.com/babel/babel/tree/main/packages/babel-parser/ast/spec.md#numericliteral&quot;&gt;NumericLiteral&lt;/a&gt;、&lt;a href=&quot;https://github.com/babel/babel/tree/main/packages/babel-parser/ast/spec.md#bigintliteral&quot;&gt;BigIntLiteral&lt;/a&gt;、&lt;a href=&quot;https://github.com/babel/babel/tree/main/packages/babel-parser/ast/spec.md#booleanliteral&quot;&gt;BooleanLiteral&lt;/a&gt;、&lt;a href=&quot;https://github.com/babel/babel/tree/main/packages/babel-parser/ast/spec.md#nullliteral&quot;&gt;NullLiteral&lt;/a&gt;、&lt;a href=&quot;https://github.com/babel/babel/tree/main/packages/babel-parser/ast/spec.md#regexpliteral&quot;&gt;RegExpLiteralに&lt;/a&gt;置き換えられます。</target>
        </trans-unit>
        <trans-unit id="c1683c7ad8a3fe585e848a5db2ebd9cc34a0951f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/estree/estree/blob/master/es5.md#property&quot;&gt;Property&lt;/a&gt; token is replaced with &lt;a href=&quot;https://github.com/babel/babel/tree/main/packages/babel-parser/ast/spec.md#objectproperty&quot;&gt;ObjectProperty&lt;/a&gt; and &lt;a href=&quot;https://github.com/babel/babel/tree/main/packages/babel-parser/ast/spec.md#objectmethod&quot;&gt;ObjectMethod&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/estree/estree/blob/master/es5.md#property&quot;&gt;プロパティ&lt;/a&gt;トークンは&lt;a href=&quot;https://github.com/babel/babel/tree/main/packages/babel-parser/ast/spec.md#objectproperty&quot;&gt;ObjectProperty&lt;/a&gt;と&lt;a href=&quot;https://github.com/babel/babel/tree/main/packages/babel-parser/ast/spec.md#objectmethod&quot;&gt;ObjectMethodに&lt;/a&gt;置き換えられます</target>
        </trans-unit>
        <trans-unit id="fc9fc668cd45f63a7044af67c94b2a2bd8e1274c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/tc39/proposal-global&quot;&gt;esnext.global-this&lt;/a&gt; (only supported by &lt;code&gt;core-js@3&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;https://github.com/tc39/proposal-global&quot;&gt;esnext.global-this&lt;/a&gt;（ &lt;code&gt;core-js@3&lt;/code&gt; のみサポートされます）</target>
        </trans-unit>
        <trans-unit id="f7a7c3641e085e387e9927d371f548db9989c95a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/tc39/proposal-string-matchall&quot;&gt;esnext.string.match-all&lt;/a&gt; (only supported by &lt;code&gt;core-js@3&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;https://github.com/tc39/proposal-string-matchall&quot;&gt;esnext.string.match-all&lt;/a&gt;（ &lt;code&gt;core-js@3&lt;/code&gt; のみサポートされます）</target>
        </trans-unit>
        <trans-unit id="6e4486384ffc2119ced5feb2922fe181a8fae597" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://reactjs.org/docs/fragments.html&quot;&gt;Fragments&lt;/a&gt; are a feature available in React 16.2.0+.</source>
          <target state="translated">&lt;a href=&quot;https://reactjs.org/docs/fragments.html&quot;&gt;フラグメント&lt;/a&gt;はReact16.2.0以降で利用可能な機能です。</target>
        </trans-unit>
        <trans-unit id="e9a13826f8975a6841f5cab9ac2837e676657428" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;preset-stage-0/index&quot;&gt;Stage 0&lt;/a&gt; - Strawman: just an idea, possible Babel plugin.</source>
          <target state="translated">&lt;a href=&quot;preset-stage-0/index&quot;&gt;ステージ0&lt;/a&gt; -Strawman：単なるアイデアであり、可能なBabelプラグイン。</target>
        </trans-unit>
        <trans-unit id="5ce873de280d417683dcd11cc67016c48bc05fa4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;preset-stage-1/index&quot;&gt;Stage 1&lt;/a&gt; - Proposal: this is worth working on.</source>
          <target state="translated">&lt;a href=&quot;preset-stage-1/index&quot;&gt;ステージ1-&lt;/a&gt;提案：これは取り組む価値があります。</target>
        </trans-unit>
        <trans-unit id="554d2c0779fe603eb81bcb3ae6b8646c82a8210a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;preset-stage-2/index&quot;&gt;Stage 2&lt;/a&gt; - Draft: initial spec.</source>
          <target state="translated">&lt;a href=&quot;preset-stage-2/index&quot;&gt;ステージ2-&lt;/a&gt;ドラフト：初期仕様。</target>
        </trans-unit>
        <trans-unit id="472b10c73346c7f252358c9379f60f94ffe73b92" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;preset-stage-3/index&quot;&gt;Stage 3&lt;/a&gt; - Candidate: complete spec and initial browser implementations.</source>
          <target state="translated">&lt;a href=&quot;preset-stage-3/index&quot;&gt;ステージ3-&lt;/a&gt;候補：完全な仕様と初期ブラウザー実装。</target>
        </trans-unit>
        <trans-unit id="cb2add8206d7465ab8192fdf044031e85d73a826" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syntax-async-functions/index&quot;&gt;async-functions&lt;/a&gt; (since babylon &lt;a href=&quot;https://github.com/babel/babylon/releases/tag/v6.9.1&quot;&gt;6.9.1&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;syntax-async-functions/index&quot;&gt;async-functions&lt;/a&gt;（babylon &lt;a href=&quot;https://github.com/babel/babylon/releases/tag/v6.9.1&quot;&gt;6.9.1&lt;/a&gt;以降）</target>
        </trans-unit>
        <trans-unit id="817abf96dbef9f3e0bfd9f6032b9d4e3dce51472" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syntax-exponentiation-operator/index&quot;&gt;exponentiation-operator&lt;/a&gt; (since babylon &lt;a href=&quot;https://github.com/babel/babylon/releases/tag/v6.9.1&quot;&gt;6.9.1&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;syntax-exponentiation-operator/index&quot;&gt;指数演算子&lt;/a&gt;（バビロン&lt;a href=&quot;https://github.com/babel/babylon/releases/tag/v6.9.1&quot;&gt;6.9.1&lt;/a&gt;以降）</target>
        </trans-unit>
        <trans-unit id="988a25123406cbab95cd68bd148e157da2163823" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syntax-trailing-function-commas/index&quot;&gt;trailing-function-commas&lt;/a&gt; (since babylon &lt;a href=&quot;https://github.com/babel/babylon/releases/tag/v6.9.1&quot;&gt;6.9.1&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;syntax-trailing-function-commas/index&quot;&gt;trailing-function-commas&lt;/a&gt;（babylon &lt;a href=&quot;https://github.com/babel/babylon/releases/tag/v6.9.1&quot;&gt;6.9.1&lt;/a&gt;以降）</target>
        </trans-unit>
        <trans-unit id="4642f11b2105c3f3375e2bbb964c42a01215c5d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;transform-class-constructor-call/index&quot;&gt;class-constructor-call&lt;/a&gt; (deprecated)</source>
          <target state="translated">&lt;a href=&quot;transform-class-constructor-call/index&quot;&gt;class-constructor-call&lt;/a&gt;（非推奨）</target>
        </trans-unit>
        <trans-unit id="431058a2491fcbde34064009eece9653a8f5b829" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Example&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;Example&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="7ddac590ef16da66bc81dcfd629d46129f62c73b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;amd&quot; | &quot;umd&quot; | &quot;systemjs&quot; | &quot;commonjs&quot; | &quot;cjs&quot; | &quot;auto&quot; | false&lt;/code&gt;, defaults to &lt;code&gt;&quot;auto&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;amd&quot; | &quot;umd&quot; | &quot;systemjs&quot; | &quot;commonjs&quot; | &quot;cjs&quot; | &quot;auto&quot; | false&lt;/code&gt; 、デフォルトは &lt;code&gt;&quot;auto&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8ce8108da801bcc0a2a1bf3a428c1c226c914475" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;amd&quot; | &quot;umd&quot; | &quot;systemjs&quot; | &quot;commonjs&quot; | false&lt;/code&gt;, defaults to &lt;code&gt;&quot;commonjs&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;amd&quot; | &quot;umd&quot; | &quot;systemjs&quot; | &quot;commonjs&quot; | false&lt;/code&gt; 、デフォルトは &lt;code&gt;&quot;commonjs&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c94caf28aec34f4faecc92ad294fe9907a5b235" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;both&quot;&lt;/code&gt; is the same as inline, but will include the map in the result object.</source>
          <target state="translated">&lt;code&gt;&quot;both&quot;&lt;/code&gt; はインラインと同じですが、結果オブジェクトにマップが含まれます。</target>
        </trans-unit>
        <trans-unit id="616848c4a0af5f6594aa720a72f04e10f6b21512" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;both&quot;&lt;/code&gt; will write the file with a &lt;code&gt;data:&lt;/code&gt; URL and &lt;em&gt;also&lt;/em&gt; a &lt;code&gt;.map&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;both&quot;&lt;/code&gt; でファイル書きます &lt;code&gt;data:&lt;/code&gt; URLと&lt;em&gt;も&lt;/em&gt; &lt;code&gt;.map&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ba43998729c6610d0ec88794eddfdf7e6a610766" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;commonjs&quot;&lt;/code&gt; or &lt;code&gt;&quot;cjs&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&quot;commonjs&quot;&lt;/code&gt; または &lt;code&gt;&quot;cjs&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="706ba92b49341fe619362da9d66e269bfc8098a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;fsharp&quot;&lt;/code&gt; - &lt;a href=&quot;https://github.com/valtech-nyc/proposal-fsharp-pipelines&quot;&gt;F#-Style Pipeline&lt;/a&gt; - Added in &lt;code&gt;v7.5.0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&quot;fsharp&quot;&lt;/code&gt; - &lt;a href=&quot;https://github.com/valtech-nyc/proposal-fsharp-pipelines&quot;&gt;F＃-Styleパイプライン&lt;/a&gt;-に追加しました &lt;code&gt;v7.5.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="716492a8848eb1739014feed58d73e05555629cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;inline&quot;&lt;/code&gt; to generate a sourcemap and append it as a data URL to the end of the code, but not include it in the result object.</source>
          <target state="translated">&lt;code&gt;&quot;inline&quot;&lt;/code&gt; ソースマップを生成し、データURLとしてコードの最後に追加しますが、結果オブジェクトには含めません。</target>
        </trans-unit>
        <trans-unit id="af8f0269ecfc2f3cac23172d6bef6baf299491c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;inline&quot;&lt;/code&gt; will write the file directly, so it will have a &lt;code&gt;data:&lt;/code&gt; containing the map</source>
          <target state="translated">&lt;code&gt;&quot;inline&quot;&lt;/code&gt; はファイルを直接書き込むため、 &lt;code&gt;data:&lt;/code&gt; 含まれます：マップを含む</target>
        </trans-unit>
        <trans-unit id="52a5afb5f420d2da600b0fef8ca7bff1a783d2bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;minimal&quot;&lt;/code&gt; &amp;ndash; &lt;a href=&quot;https://github.com/tc39/proposal-pipeline-operator/&quot;&gt;Minimal Pipeline&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&quot;minimal&quot;&lt;/code&gt; &amp;ndash;&lt;a href=&quot;https://github.com/tc39/proposal-pipeline-operator/&quot;&gt;最小限のパイプライン&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a4cbbae777d7fc1d01f7e25da8d4997b2385d74a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;module&quot;&lt;/code&gt; - Parse the file using the ECMAScript Module grammar. Files are automatically strict, and &lt;code&gt;import&lt;/code&gt;/&lt;code&gt;export&lt;/code&gt; statements are allowed.</source>
          <target state="translated">&lt;code&gt;&quot;module&quot;&lt;/code&gt; -ECMAScriptモジュール文法を使用してファイルを解析します。ファイルは自動的に厳密になり、 &lt;code&gt;import&lt;/code&gt; / &lt;code&gt;export&lt;/code&gt; ステートメントが許可されます。</target>
        </trans-unit>
        <trans-unit id="0c6819382d7cd372ea9ae93ce905bbaafd99eff7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;root&quot;&lt;/code&gt; - Passes the &lt;a href=&quot;#root&quot;&gt;&lt;code&gt;&quot;root&quot;&lt;/code&gt;&lt;/a&gt; value through as unchanged.</source>
          <target state="translated">&lt;code&gt;&quot;root&quot;&lt;/code&gt; - &lt;a href=&quot;#root&quot;&gt; &lt;code&gt;&quot;root&quot;&lt;/code&gt; &lt;/a&gt;値を変更せずに渡します。</target>
        </trans-unit>
        <trans-unit id="43f6073a2c9383c57920e2e5c847b885ad8e80b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;root&quot;&lt;/code&gt; is the default mode because it avoids the risk that Babel will accidentally load a &lt;code&gt;babel.config.json&lt;/code&gt; that is entirely outside of the current project folder. If you use &lt;code&gt;&quot;upward-optional&quot;&lt;/code&gt;, be aware that it will walk up the directory structure all the way to the filesystem root, and it is always possible that someone will have a forgotten &lt;code&gt;babel.config.json&lt;/code&gt; in their home directory, which could cause unexpected errors in your builds.</source>
          <target state="translated">&lt;code&gt;&quot;root&quot;&lt;/code&gt; は、Babelが現在のプロジェクトフォルダーの完全に外側にある &lt;code&gt;babel.config.json&lt;/code&gt; を誤ってロードするリスクを回避するため、デフォルトのモードです。 &lt;code&gt;&quot;upward-optional&quot;&lt;/code&gt; を使用する場合は、ディレクトリ構造がファイルシステムのルートまで &lt;code&gt;babel.config.json&lt;/code&gt; してください。ホームディレクトリにbabel.config.jsonを忘れてしまう可能性が常にあります。ビルドで予期しないエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="b306e570dc5975c8c3aab9372529a77457fb06cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;script&quot;&lt;/code&gt; - Parse the file using the ECMAScript Script grammar. No &lt;code&gt;import&lt;/code&gt;/&lt;code&gt;export&lt;/code&gt; statements allowed, and files are not in strict mode.</source>
          <target state="translated">&lt;code&gt;&quot;script&quot;&lt;/code&gt; -ECMAScriptスクリプト文法を使用してファイルを解析します。いいえ &lt;code&gt;import&lt;/code&gt; / &lt;code&gt;export&lt;/code&gt; 文は許されない、とのファイルがstrictモードではありません。</target>
        </trans-unit>
        <trans-unit id="adc40ff25fd697b044cf3c9f178d46222f776bd5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;smart&quot;&lt;/code&gt; - &lt;a href=&quot;https://github.com/js-choi/proposal-smart-pipelines&quot;&gt;Smart Pipeline&lt;/a&gt; - Added in &lt;code&gt;v7.3.0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&quot;smart&quot;&lt;/code&gt; -&lt;a href=&quot;https://github.com/js-choi/proposal-smart-pipelines&quot;&gt;スマートパイプライン&lt;/a&gt; &lt;code&gt;v7.3.0&lt;/code&gt; 追加</target>
        </trans-unit>
        <trans-unit id="a17a11353150970c9cce90e42fa22a6b4a0dc667" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;unambiguous&quot;&lt;/code&gt; - Consider the file a &quot;module&quot; if &lt;code&gt;import&lt;/code&gt;/&lt;code&gt;export&lt;/code&gt; statements are present, or else consider it a &quot;script&quot;.</source>
          <target state="translated">&lt;code&gt;&quot;unambiguous&quot;&lt;/code&gt; - &lt;code&gt;import&lt;/code&gt; / &lt;code&gt;export&lt;/code&gt; ステートメントが存在する場合はファイルを「モジュール」と見なすか、それ以外の場合は「スクリプト」と見なします。</target>
        </trans-unit>
        <trans-unit id="8f7f879856e88b7994f1417fb9cc2e38369686ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;upward&quot;&lt;/code&gt; - Walks upward from the &lt;a href=&quot;#root&quot;&gt;&lt;code&gt;&quot;root&quot;&lt;/code&gt;&lt;/a&gt; directory, looking for a directory containing a &lt;a href=&quot;../config-files/index#project-wide-configuration&quot;&gt;&lt;code&gt;babel.config.json&lt;/code&gt;&lt;/a&gt; file, and throws an error if a &lt;a href=&quot;../config-files/index#project-wide-configuration&quot;&gt;&lt;code&gt;babel.config.json&lt;/code&gt;&lt;/a&gt; is not found.</source>
          <target state="translated">&lt;code&gt;&quot;upward&quot;&lt;/code&gt; - &lt;a href=&quot;#root&quot;&gt; &lt;code&gt;&quot;root&quot;&lt;/code&gt; &lt;/a&gt;ディレクトリから上に移動して、&lt;a href=&quot;../config-files/index#project-wide-configuration&quot;&gt; &lt;code&gt;babel.config.json&lt;/code&gt; &lt;/a&gt;ファイルを含むディレクトリを探し、&lt;a href=&quot;../config-files/index#project-wide-configuration&quot;&gt; &lt;code&gt;babel.config.json&lt;/code&gt; &lt;/a&gt;が見つからない場合はエラーをスローします。</target>
        </trans-unit>
        <trans-unit id="6e9bbbfa1cdc912d6a7fbae35d3bb0ef36fa68dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;upward-optional&quot;&lt;/code&gt; - Walk upward from the &lt;a href=&quot;#root&quot;&gt;&lt;code&gt;&quot;root&quot;&lt;/code&gt;&lt;/a&gt; directory, looking for a directory containing a &lt;a href=&quot;../config-files/index#project-wide-configuration&quot;&gt;&lt;code&gt;babel.config.json&lt;/code&gt;&lt;/a&gt; file, and falls back to &lt;a href=&quot;#root&quot;&gt;&lt;code&gt;&quot;root&quot;&lt;/code&gt;&lt;/a&gt; if a &lt;a href=&quot;../config-files/index#project-wide-configuration&quot;&gt;&lt;code&gt;babel.config.json&lt;/code&gt;&lt;/a&gt; is not found.</source>
          <target state="translated">&lt;code&gt;&quot;upward-optional&quot;&lt;/code&gt; - &lt;a href=&quot;#root&quot;&gt; &lt;code&gt;&quot;root&quot;&lt;/code&gt; &lt;/a&gt;ディレクトリから上に移動して、&lt;a href=&quot;../config-files/index#project-wide-configuration&quot;&gt; &lt;code&gt;babel.config.json&lt;/code&gt; &lt;/a&gt;ファイルを含むディレクトリを探し、&lt;a href=&quot;../config-files/index#project-wide-configuration&quot;&gt; &lt;code&gt;babel.config.json&lt;/code&gt; &lt;/a&gt;が見つからない場合は&lt;a href=&quot;#root&quot;&gt; &lt;code&gt;&quot;root&quot;&lt;/code&gt; &lt;/a&gt;フォールバックします。</target>
        </trans-unit>
        <trans-unit id="beba15f674dae1143d22459ab2ae8dbeb549b556" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;usage&quot;&lt;/code&gt; | &lt;code&gt;&quot;entry&quot;&lt;/code&gt; | &lt;code&gt;false&lt;/code&gt;, defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;usage&quot;&lt;/code&gt; | &lt;code&gt;&quot;entry&quot;&lt;/code&gt; | &lt;code&gt;false&lt;/code&gt; 、デフォルトは &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="2d7512f8d0d09f439e3b6bf714132d9b354b6088" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#{x: 1}&lt;/code&gt;, &lt;code&gt;#[1, 2]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;#{x: 1}&lt;/code&gt; 、 &lt;code&gt;#[1, 2]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3f3e2d87b08288a08bb46ac417fccf93b0228647" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(filename: string | void, context: { caller: { name: string } | void, envName: string, dirname: string }) =&amp;gt; boolean&lt;/code&gt; is a general callback that should return a boolean to indicate whether it is a match or not. The function is passed the filename or &lt;code&gt;undefined&lt;/code&gt; if one was not given to Babel. It is also passed the current &lt;code&gt;envName&lt;/code&gt; and &lt;code&gt;caller&lt;/code&gt; options that were specified by the top-level call to Babel and &lt;code&gt;dirname&lt;/code&gt; that is either a directory of the configuration file or the current working directory (if the transformation was called programmatically).</source>
          <target state="translated">&lt;code&gt;(filename: string | void, context: { caller: { name: string } | void, envName: string, dirname: string }) =&amp;gt; boolean&lt;/code&gt; は、一致するかどうかを示すブール値を返す必要がある一般的なコールバックです。 。関数にはファイル名が渡されるか、Babelにファイル名が渡されなかった場合は &lt;code&gt;undefined&lt;/code&gt; なります。また、Babelへのトップレベル呼び出しによって指定された現在の &lt;code&gt;envName&lt;/code&gt; および &lt;code&gt;caller&lt;/code&gt; オプションと、構成ファイルのディレクトリまたは現在の作業ディレクトリ（変換がプログラムで呼び出された場合）のいずれかである &lt;code&gt;dirname&lt;/code&gt; も渡されます。</target>
        </trans-unit>
        <trans-unit id="f07647d4cbd6f43d69600769dc454c78a0ba298b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(string) =&amp;gt; boolean&lt;/code&gt; - Pass a callback that will be called to decide if a given source string should be lazy-loaded.</source>
          <target state="translated">&lt;code&gt;(string) =&amp;gt; boolean&lt;/code&gt; 指定されたソース文字列を遅延読み込みするかどうかを決定するために呼び出されるコールバックを渡します。</target>
        </trans-unit>
        <trans-unit id="3d92dbe5638a7b42c5e25bcb2fda4e67ebf07d79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;---importsNotUsedAsValues&lt;/code&gt; You can use the &lt;code&gt;onlyRemoveTypeImports&lt;/code&gt; option to replicate this behavior. &lt;code&gt;onlyRemoveTypeImports: true&lt;/code&gt; is equivalent to &lt;code&gt;importsNotUsedAsValues: preserve&lt;/code&gt;, while &lt;code&gt;onlyRemoveTypeImports: false&lt;/code&gt; is equivalent to &lt;code&gt;importsNotUsedAsValues: remove&lt;/code&gt;. There is no equivalent for &lt;code&gt;importsNotUsedAsValues: error&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;---importsNotUsedAsValues&lt;/code&gt; &lt;code&gt;onlyRemoveTypeImports&lt;/code&gt; オプションを使用して、この動作を複製できます。 &lt;code&gt;onlyRemoveTypeImports: true&lt;/code&gt; は &lt;code&gt;importsNotUsedAsValues: preserve&lt;/code&gt; と同等ですが、 &lt;code&gt;onlyRemoveTypeImports: false&lt;/code&gt; は &lt;code&gt;importsNotUsedAsValues: remove&lt;/code&gt; と同等です。 &lt;code&gt;importsNotUsedAsValues: error&lt;/code&gt; 相当するものはありません：error。</target>
        </trans-unit>
        <trans-unit id="2f58efe63fb207501739feba1c071e5405b2e807" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--alwaysStrict&lt;/code&gt; You can use the &lt;code&gt;strictMode&lt;/code&gt;&lt;a href=&quot;../babel-parser/index#options&quot;&gt;parser option&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;--alwaysStrict&lt;/code&gt; を使用でき &lt;code&gt;strictMode&lt;/code&gt; の&lt;a href=&quot;../babel-parser/index#options&quot;&gt;パーサのオプションを&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="de3886e29f2658979cf3074fc1b33857e5807052" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--downlevelIteration&lt;/code&gt; You can use the &lt;code&gt;@babel/plugin-transform-for-of&lt;/code&gt; plugin. If you are using &lt;code&gt;@babel/preset-env&lt;/code&gt;, &lt;code&gt;for...of&lt;/code&gt; is already transpiled using iterators when it isn't supported by your compilation target(s).</source>
          <target state="translated">&lt;code&gt;--downlevelIteration&lt;/code&gt; &lt;code&gt;@babel/plugin-transform-for-of&lt;/code&gt; プラグインを使用できます。 &lt;code&gt;@babel/preset-env&lt;/code&gt; preset -envを使用している場合、 &lt;code&gt;for...of&lt;/code&gt; は、コンパイルターゲットでサポートされていない場合、イテレータを使用してすでにトランスパイルされています。</target>
        </trans-unit>
        <trans-unit id="f23d1e26efc366f263e5bbcd2c9de56920cc7e38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--emitDecoratorMetadata&lt;/code&gt; This option isn't supported by an official Babel package since it is a TypeScript-specific addition and not part of the decorators proposal. If you rely on this feature, you can use the community plugin &lt;a href=&quot;https://github.com/leonardfactory/babel-plugin-transform-typescript-metadata#readme&quot;&gt;babel-plugin-transform-typescript-metadata&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;--emitDecoratorMetadata&lt;/code&gt; このオプションは、TypeScript固有の追加であり、デコレータ提案の一部ではないため、公式のBabelパッケージではサポートされていません。この機能に依存している場合は、コミュニティプラグイン&lt;a href=&quot;https://github.com/leonardfactory/babel-plugin-transform-typescript-metadata#readme&quot;&gt;babel-plugin-transform-typescript-metadata&lt;/a&gt;を使用できます。</target>
        </trans-unit>
        <trans-unit id="a9b320817483afd6ba5a97c178a60d5593bfab09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--esModuleInterop&lt;/code&gt; This is the default behavior of Babel when transpiling ECMAScript modules.</source>
          <target state="translated">&lt;code&gt;--esModuleInterop&lt;/code&gt; これは、ECMAScriptモジュールをトランスパイルするときのBabelのデフォルトの動作です。</target>
        </trans-unit>
        <trans-unit id="349f8bbe28396aa35d4e53bb8fc2e9bf680f4712" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--experimentalDecorators&lt;/code&gt; This option enables support for the &quot;legacy&quot; decorator proposal. You can enable it in Babel using the &lt;code&gt;@babel/plugin-proposal-decorators&lt;/code&gt; plugin, but please be aware, there are some minor differences.</source>
          <target state="translated">&lt;code&gt;--experimentalDecorators&lt;/code&gt; このオプションは、「レガシー」デコレータ提案のサポートを有効にします。 &lt;code&gt;@babel/plugin-proposal-decorators&lt;/code&gt; プラグインを使用してBabelで有効にすることができますが、いくつかの小さな違いがあることに注意してください。</target>
        </trans-unit>
        <trans-unit id="c445bd4e1357729a10553d3ab3717e915f3d153f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--importHelpers&lt;/code&gt; This is the equivalent of the &lt;code&gt;@babel/plugin-transform-runtime&lt;/code&gt; package.</source>
          <target state="translated">&lt;code&gt;--importHelpers&lt;/code&gt; これは、 &lt;code&gt;@babel/plugin-transform-runtime&lt;/code&gt; パッケージと同等です。</target>
        </trans-unit>
        <trans-unit id="ec0540fa8cf5d7792841a88e22b3e76ab2eb8a96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--inlineSourceMap&lt;/code&gt; You can set the &lt;a href=&quot;../options/index#sourcemaps&quot;&gt;&lt;code&gt;sourceMaps: &quot;inline&quot;&lt;/code&gt;&lt;/a&gt; option in your &lt;code&gt;babel.config.json&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;--inlineSourceMap&lt;/code&gt; あなたは設定することができ&lt;a href=&quot;../options/index#sourcemaps&quot;&gt; &lt;code&gt;sourceMaps: &quot;inline&quot;&lt;/code&gt; &lt;/a&gt;あなたにオプションを &lt;code&gt;babel.config.json&lt;/code&gt; のファイル。</target>
        </trans-unit>
        <trans-unit id="467638580497bb79a016b718aba0675bc6a583b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--isolatedModules&lt;/code&gt; This is the default Babel behavior, and it can't be turned off because Babel doesn't support cross-file analysis.</source>
          <target state="translated">&lt;code&gt;--isolatedModules&lt;/code&gt; これはデフォルトのBabelの動作であり、Babelはクロスファイル分析をサポートしていないため、オフにすることはできません。</target>
        </trans-unit>
        <trans-unit id="d5cb99bdd868443d3d48d3ac30487e7a8f2eea32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--jsx&lt;/code&gt; JSX support is provided using another plugin. If you want your output to contains JSX code (i.e. &lt;code&gt;--jsx preserve&lt;/code&gt;), you need the &lt;code&gt;@babel/plugin-syntax-jsx&lt;/code&gt; plugin; if you want to transpile it to standard JavaScript (i.e. &lt;code&gt;--jsx react&lt;/code&gt; or &lt;code&gt;--jsx react-native&lt;/code&gt;), you should use the &lt;code&gt;@babel/plugin-transform-react-jsx&lt;/code&gt; plugin.</source>
          <target state="translated">&lt;code&gt;--jsx&lt;/code&gt; JSXサポートは、別のプラグインを使用して提供されます。出力にJSXコード（つまり、 &lt;code&gt;--jsx preserve&lt;/code&gt; ）を含める場合は、 &lt;code&gt;@babel/plugin-syntax-jsx&lt;/code&gt; プラグインが必要です。標準のJavaScript（つまり、 &lt;code&gt;--jsx react&lt;/code&gt; または &lt;code&gt;--jsx react-native&lt;/code&gt; ）にトランスパイルする場合は、 &lt;code&gt;@babel/plugin-transform-react-jsx&lt;/code&gt; プラグインを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="11c35076a1e88911956f19c302f59b4ccd9a0deb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--jsxFactory&lt;/code&gt; It can be customized using the &lt;a href=&quot;../babel-plugin-transform-react-jsx/index#pragma&quot;&gt;&lt;code&gt;pragma&lt;/code&gt; option&lt;/a&gt; of the &lt;code&gt;@babel/plugin-transform-react-jsx&lt;/code&gt; package. You also need to set the &lt;code&gt;jsxPragma&lt;/code&gt; option of this plugin.</source>
          <target state="translated">&lt;code&gt;--jsxFactory&lt;/code&gt; &lt;code&gt;@babel/plugin-transform-react-jsx&lt;/code&gt; パッケージの&lt;a href=&quot;../babel-plugin-transform-react-jsx/index#pragma&quot;&gt; &lt;code&gt;pragma&lt;/code&gt; オプション&lt;/a&gt;を使用してカスタマイズできます。このプラグインの &lt;code&gt;jsxPragma&lt;/code&gt; オプションも設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="abfd22f073413f1459caa5ea9f4670c2f4868f4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--module&lt;/code&gt;, &lt;code&gt;-m&lt;/code&gt; If you are using a bundler (Webpack or Rollup), this option is set automatically. If you are using &lt;code&gt;@babel/preset-env&lt;/code&gt;, you can use the &lt;a href=&quot;../babel-preset-env/index#modules&quot;&gt;&lt;code&gt;modules&lt;/code&gt; option&lt;/a&gt;; otherwise you can load the specific plugin.</source>
          <target state="translated">&lt;code&gt;--module&lt;/code&gt; 、 &lt;code&gt;-m&lt;/code&gt; バンドラー（WebpackまたはRollup）を使用している場合、このオプションは自動的に設定されます。あなたが使用している場合は &lt;code&gt;@babel/preset-env&lt;/code&gt; 、あなたが使用することができ&lt;a href=&quot;../babel-preset-env/index#modules&quot;&gt; &lt;code&gt;modules&lt;/code&gt; オプションを&lt;/a&gt;、それ以外の場合は、特定のプラグインをロードできます。</target>
        </trans-unit>
        <trans-unit id="e4367fa11aa00961db228898a8377bde0c696a6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--outDir&lt;/code&gt; When using &lt;code&gt;@babel/cli&lt;/code&gt;, you can set the &lt;a href=&quot;../babel-cli/index#compile-directories&quot;&gt;&lt;code&gt;--out-dir&lt;/code&gt; option&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;--outDir&lt;/code&gt; &lt;code&gt;@babel/cli&lt;/code&gt; を使用する場合、-out &lt;a href=&quot;../babel-cli/index#compile-directories&quot;&gt; &lt;code&gt;--out-dir&lt;/code&gt; オプションを&lt;/a&gt;設定できます。</target>
        </trans-unit>
        <trans-unit id="f2ba4b94add63dbc65eb8c8ad0b334fe5c26b63b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--outFile&lt;/code&gt; Babel doesn't support concatenating output files: you should use a bundler (like Webpack, Rollup or Parcel) for that. When using &lt;code&gt;@babel/cli&lt;/code&gt;, you can compile a single file using the &lt;a href=&quot;../babel-cli/index#compile-files&quot;&gt;&lt;code&gt;--out-file&lt;/code&gt; option&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;--outFile&lt;/code&gt; Babelは、出力ファイルの連結をサポートしていません。そのためには、バンドラー（Webpack、Rollup、Parcelなど）を使用する必要があります。 &lt;code&gt;@babel/cli&lt;/code&gt; を使用する場合、&lt;a href=&quot;../babel-cli/index#compile-files&quot;&gt; &lt;code&gt;--out-file&lt;/code&gt; オプション&lt;/a&gt;を使用して単一のファイルをコンパイルできます。</target>
        </trans-unit>
        <trans-unit id="a3195c73e8e5ea792225b622db2751656bec9b6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--sourceMap&lt;/code&gt; You can use the top-level &lt;a href=&quot;../options/index#sourcemaps&quot;&gt;&lt;code&gt;sourceMaps: true&lt;/code&gt; option&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;--sourceMap&lt;/code&gt; トップレベルの&lt;a href=&quot;../options/index#sourcemaps&quot;&gt; &lt;code&gt;sourceMaps: true&lt;/code&gt; オプション&lt;/a&gt;を使用できます。</target>
        </trans-unit>
        <trans-unit id="0efa685747faf71f5aed4ef7b8839d75f5dda898" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--target&lt;/code&gt; Babel doesn't support targeting a specific version of the language, but you can choose which engines you want to target using &lt;a href=&quot;../babel-preset-env/index&quot;&gt;&lt;code&gt;@babel/preset-env&lt;/code&gt;&lt;/a&gt;. If you prefer, you can enable &lt;a href=&quot;../plugins/index&quot;&gt;individual plugins&lt;/a&gt; for every ECMAScript feature.</source>
          <target state="translated">&lt;code&gt;--target&lt;/code&gt; Babelは、特定のバージョンの言語のターゲティングをサポートしていませんが、&lt;a href=&quot;../babel-preset-env/index&quot;&gt; &lt;code&gt;@babel/preset-env&lt;/code&gt; &lt;/a&gt;を使用してターゲティングするエンジンを選択できます。必要に&lt;a href=&quot;../plugins/index&quot;&gt;応じ&lt;/a&gt;て、ECMAScript機能ごとに個別のプラグインを有効にすることができます。</target>
        </trans-unit>
        <trans-unit id="929f4054a95d751df8e1e8f7a4c3cf0632b824fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--useDefineForClassFields&lt;/code&gt; You can use the &lt;code&gt;onlyRemoveTypeImports&lt;/code&gt; option to replicate this behavior.</source>
          <target state="translated">&lt;code&gt;--useDefineForClassFields&lt;/code&gt; &lt;code&gt;onlyRemoveTypeImports&lt;/code&gt; オプションを使用して、この動作を複製できます。</target>
        </trans-unit>
        <trans-unit id="56d952dee2cf71f93102ef71b0fdd90356cb429a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--watch&lt;/code&gt;, &lt;code&gt;-w&lt;/code&gt; When using &lt;code&gt;@babel/cli&lt;/code&gt;, you can specify the &lt;a href=&quot;../babel-cli/index#compile-files&quot;&gt;&lt;code&gt;--watch&lt;/code&gt; option&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;--watch&lt;/code&gt; 、 &lt;code&gt;-w&lt;/code&gt; &lt;code&gt;@babel/cli&lt;/code&gt; を使用する場合、&lt;a href=&quot;../babel-cli/index#compile-files&quot;&gt; &lt;code&gt;--watch&lt;/code&gt; オプションを&lt;/a&gt;指定できます。</target>
        </trans-unit>
        <trans-unit id="8c67e8bb80ff412d06cc3ca9ad888bf38a74016a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.babelrc.json&lt;/code&gt; files &lt;em&gt;only&lt;/em&gt; apply to files within their own package</source>
          <target state="translated">&lt;code&gt;.babelrc.json&lt;/code&gt; ファイル&lt;em&gt;は&lt;/em&gt;、独自のパッケージ内のファイルに&lt;em&gt;のみ&lt;/em&gt;適用されます</target>
        </trans-unit>
        <trans-unit id="dfba1517724064cf23b630745f89ac656a211c5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.babelrc.json&lt;/code&gt; files in packages that aren't Babel's 'root' are ignored unless you opt in with &lt;a href=&quot;../options/index#babelrcroots&quot;&gt;&quot;babelrcRoots&quot;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.babelrc.json&lt;/code&gt; &lt;a href=&quot;../options/index#babelrcroots&quot;&gt;「babelrcRoots」で&lt;/a&gt;オプトインしない限り、Babelの「root」ではないパッケージ内の.babelrc.jsonファイルは無視されます。</target>
        </trans-unit>
        <trans-unit id="b40348327b166a4c69949fea298ac2ce27745141" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.babelrc.json&lt;/code&gt; files, with the different extensions (&lt;code&gt;.babelrc&lt;/code&gt;, &lt;code&gt;.js&lt;/code&gt;, &lt;code&gt;.cjs&lt;/code&gt;, &lt;code&gt;.mjs&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;.babelrc.json&lt;/code&gt; 拡張子が異なる.babelrc.jsonファイル（ &lt;code&gt;.babelrc&lt;/code&gt; 、 &lt;code&gt;.js&lt;/code&gt; 、 &lt;code&gt;.cjs&lt;/code&gt; 、 &lt;code&gt;.mjs&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="a950ecbf901eb48f4a4b12c95f998e6ec28c2d06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.babelrc.json&lt;/code&gt; or &lt;code&gt;.babelrc&lt;/code&gt; files are loaded relative to the file being compiled. If this option is omitted, Babel will behave as if &lt;code&gt;babelrc: false&lt;/code&gt; has been set.</source>
          <target state="translated">&lt;code&gt;.babelrc.json&lt;/code&gt; または &lt;code&gt;.babelrc&lt;/code&gt; ファイルは、コンパイルされるファイルに関連してロードされます。このオプションを省略すると、Babelは &lt;code&gt;babelrc: false&lt;/code&gt; が設定されているかのように動作します。</target>
        </trans-unit>
        <trans-unit id="e5d281a3bc0a36500c2d7910b557671859359a9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.babelrc&lt;/code&gt; files &lt;em&gt;failed&lt;/em&gt; to apply to symlinked &lt;code&gt;node_modules&lt;/code&gt; when people expected them to behave like normal dependencies.</source>
          <target state="translated">&lt;code&gt;.babelrc&lt;/code&gt; ファイル&lt;em&gt;は&lt;/em&gt;、通常の依存関係のように動作することが期待されていたため、シンボリック &lt;code&gt;node_modules&lt;/code&gt; されたnode_modulesに適用でき&lt;em&gt;ませんでし&lt;/em&gt;た。</target>
        </trans-unit>
        <trans-unit id="ddb9e1f547d693718e1ff1e6631730948c6555ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.babelrc&lt;/code&gt; files &lt;em&gt;in&lt;/em&gt;&lt;code&gt;node_modules&lt;/code&gt; dependencies would be detected, even though the plugins and presets inside they were generally not installed, and may not even be valid in the version of Babel compiling the file.</source>
          <target state="translated">&lt;code&gt;.babelrc&lt;/code&gt; のファイル&lt;em&gt;で&lt;/em&gt; &lt;code&gt;node_modules&lt;/code&gt; の依存関係は、彼らの内部のプラグインとプリセットは、一般的にインストールされていない、とさえファイルをコンパイルバベルのバージョンでは有効でない場合でも、検出されます。</target>
        </trans-unit>
        <trans-unit id="85513e53faa014f04b1e38898ce9f704bcefccc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.babelrc&lt;/code&gt; files applied to &lt;code&gt;node_modules&lt;/code&gt; dependencies, often unexpectedly.</source>
          <target state="translated">&lt;code&gt;.babelrc&lt;/code&gt; ファイルが &lt;code&gt;node_modules&lt;/code&gt; の依存関係に適用され、多くの場合予期せずに適用されます。</target>
        </trans-unit>
        <trans-unit id="3a64aed4ca2cf83c86c06e51f078515d4fa58936" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;2&lt;/code&gt;, &lt;code&gt;3&lt;/code&gt; or &lt;code&gt;{ version: 2 | 3, proposals: boolean }&lt;/code&gt;, defaults to &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;2&lt;/code&gt; 、 &lt;code&gt;3&lt;/code&gt; 又は &lt;code&gt;{ version: 2 | 3, proposals: boolean }&lt;/code&gt; 、デフォルトは &lt;code&gt;2&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ccd0718c1a7e0c4d63b55739a7544b3085bf1c00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@babel/cli&lt;/code&gt; overloads some of these to also affect how maps are written to disk:</source>
          <target state="translated">&lt;code&gt;@babel/cli&lt;/code&gt; はこれらのいくつかをオーバーロードしてマップのディスクへの書き込み方法にも影響を与えます。</target>
        </trans-unit>
        <trans-unit id="eba79092e1de8ff252fe005ad2789aa7df9feaae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@babel/plugin-transform-literals&lt;/code&gt; is already included in &lt;a href=&quot;../babel-preset-env/index&quot;&gt;@babel/preset-env&lt;/a&gt; and @babel/preset-es2015.</source>
          <target state="translated">&lt;code&gt;@babel/plugin-transform-literals&lt;/code&gt; はすでに@babel / preset &lt;a href=&quot;../babel-preset-env/index&quot;&gt;-env&lt;/a&gt;と@babel / preset-es2015に含まれています。</target>
        </trans-unit>
        <trans-unit id="fd6cd62e5d2f77bf015952fae52d0636d4839950" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@babel/preset-env&lt;/code&gt; is a smart preset that allows you to use the latest JavaScript without needing to micromanage which syntax transforms (and optionally, browser polyfills) are needed by your target environment(s). This both makes your life easier and JavaScript bundles smaller!</source>
          <target state="translated">&lt;code&gt;@babel/preset-env&lt;/code&gt; はスマートプリセットであり、ターゲット環境で必要な構文変換（およびオプションでブラウザーポリフィル）を細かく管理することなく、最新のJavaScriptを使用できます。これにより、作業が楽になり、JavaScriptバンドルが小さくなります。</target>
        </trans-unit>
        <trans-unit id="4c4be7d5926cf13338c39fefde4f679f0d2ae34d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@babel/preset-env&lt;/code&gt; takes any &lt;a href=&quot;#targets&quot;&gt;target environments you've specified&lt;/a&gt; and checks them against its mappings to compile a list of plugins and passes it to Babel.</source>
          <target state="translated">&lt;code&gt;@babel/preset-env&lt;/code&gt; は、&lt;a href=&quot;#targets&quot;&gt;指定したターゲット環境を取得し&lt;/a&gt;、それらをマッピングと照合してプラグインのリストをコンパイルし、Babelに渡します。</target>
        </trans-unit>
        <trans-unit id="f3f77d90a8baa68dd9354e6bd0f4ff2facc16571" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@babel/preset-env&lt;/code&gt; would not be possible if not for a number of awesome open-source projects, like &lt;a href=&quot;https://github.com/browserslist/browserslist&quot;&gt;&lt;code&gt;browserslist&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/kangax/compat-table&quot;&gt;&lt;code&gt;compat-table&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://github.com/Kilian/electron-to-chromium&quot;&gt;&lt;code&gt;electron-to-chromium&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;@babel/preset-env&lt;/code&gt; 素晴らしいオープンソースプロジェクトの数のない場合と同様に、可能ではないであろう&lt;a href=&quot;https://github.com/browserslist/browserslist&quot;&gt; &lt;code&gt;browserslist&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://github.com/kangax/compat-table&quot;&gt; &lt;code&gt;compat-table&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;https://github.com/Kilian/electron-to-chromium&quot;&gt; &lt;code&gt;electron-to-chromium&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="78edec3a8e604b02677959ce9792b49e7a415138" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@babel/register&lt;/code&gt; uses Node's &lt;code&gt;require()&lt;/code&gt; hook system to compile files on the fly when they are loaded. While this is quite helpful overall, it means that there can be confusing cases where code within a &lt;code&gt;require()&lt;/code&gt; hook causes &lt;em&gt;more&lt;/em&gt; calls to &lt;code&gt;require&lt;/code&gt;, causing a dependency cycle. In Babel's case for instance, this could mean that in the process of Babel trying to compile a user's file, Babel could end up trying to compile itself &lt;em&gt;as it is loading&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;@babel/register&lt;/code&gt; は、ノードの &lt;code&gt;require()&lt;/code&gt; フックシステムを使用して、ファイルがロードされたときにその場でファイルをコンパイルします。これは全体的に非常に役立ちますが、 &lt;code&gt;require()&lt;/code&gt; フック内のコードにより、&lt;em&gt;より多くの&lt;/em&gt;呼び出しが &lt;code&gt;require&lt;/code&gt; になり、依存関係のサイクルが発生するという混乱を招く可能性があることを意味します。たとえば、Babelの場合、これは、Babelがユーザーのファイルをコンパイルしようとする過程で、Babel&lt;em&gt;がロード中に&lt;/em&gt;自分自身をコンパイルしようとする可能性があることを意味する可能性があります。</target>
        </trans-unit>
        <trans-unit id="7ed8dece1b6e4972914f7990d0e4ea7ebbdb23ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@babel/runtime-corejs2&lt;/code&gt; is a library that contain's Babel modular runtime helpers and a version of &lt;code&gt;regenerator-runtime&lt;/code&gt; as well as &lt;a href=&quot;https://github.com/zloirock/core-js&quot;&gt;&lt;code&gt;core-js&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;@babel/runtime-corejs2&lt;/code&gt; は、のBabelモジュラーランタイムヘルパーと、&lt;a href=&quot;https://github.com/zloirock/core-js&quot;&gt; &lt;code&gt;core-js&lt;/code&gt; &lt;/a&gt;だけでなく &lt;code&gt;regenerator-runtime&lt;/code&gt; のバージョンを含むライブラリです。</target>
        </trans-unit>
        <trans-unit id="f6235f2b922c6a85d463938f3d7a5f2b722b9a9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@babel/runtime-corejs2&lt;/code&gt; is just the package that contains the implementations of the functions in a modular way.</source>
          <target state="translated">&lt;code&gt;@babel/runtime-corejs2&lt;/code&gt; は、モジュール方式で関数の実装を含む単なるパッケージです。</target>
        </trans-unit>
        <trans-unit id="a0866a4ddb508fe97eebdbc6811f56e3bfd2b7b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@babel/runtime&lt;/code&gt; is a library that contains Babel modular runtime helpers and a version of &lt;code&gt;regenerator-runtime&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;@babel/runtime&lt;/code&gt; は、Babelモジュラーランタイムヘルパーとバージョンの &lt;code&gt;regenerator-runtime&lt;/code&gt; を含むライブラリです。</target>
        </trans-unit>
        <trans-unit id="9b12cff317818fb8bd828fc2dd71169821c36f01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@babel/runtime&lt;/code&gt; is just the package that contains the implementations of the functions in a modular way.</source>
          <target state="translated">&lt;code&gt;@babel/runtime&lt;/code&gt; は、モジュール方式で関数の実装を含む単なるパッケージです。</target>
        </trans-unit>
        <trans-unit id="7952e77aac4646f824dbff5c3cb45c1c2579b4e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@babel/template&lt;/code&gt; accepts all of the options from &lt;a href=&quot;../babel-parser/index#options&quot;&gt;Babel Parser&lt;/a&gt;, and specifies some defaults of its own:</source>
          <target state="translated">&lt;code&gt;@babel/template&lt;/code&gt; は、&lt;a href=&quot;../babel-parser/index#options&quot;&gt;Babel Parserの&lt;/a&gt;すべてのオプションを受け入れ、独自のデフォルトをいくつか指定します。</target>
        </trans-unit>
        <trans-unit id="349c15bcd980243afdc0fbe239f1b6b75bd43971" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Array&amp;lt;string&amp;gt;&lt;/code&gt; - Lazy-initialize all imports with source matching one of the given strings.</source>
          <target state="translated">&lt;code&gt;Array&amp;lt;string&amp;gt;&lt;/code&gt; -指定された文字列の1つに一致するソースを使用してすべてのインポートを遅延初期化します。</target>
        </trans-unit>
        <trans-unit id="db1a153f5cef43ee92e025d1efe7de97ddfe43ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Array&amp;lt;string&amp;gt;&lt;/code&gt;, defaults to &lt;code&gt;[]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Array&amp;lt;string&amp;gt;&lt;/code&gt; 、デフォルトは &lt;code&gt;[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="38466d50fd093abd4f9d89d8a16bc3a0bae05e92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Array&amp;lt;string&amp;gt;&lt;/code&gt;, defaults to &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Array&amp;lt;string&amp;gt;&lt;/code&gt; 、デフォルトは &lt;code&gt;[]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8722dba1f2a3ee289cc8e1d321616f7a1494bc6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Array&amp;lt;string|RegExp&amp;gt;&lt;/code&gt;, defaults to &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Array&amp;lt;string|RegExp&amp;gt;&lt;/code&gt; 、デフォルトは &lt;code&gt;[]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0a20de20fe5b7445e26dfc9a5c5086fdbfca757d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ConfigItem&lt;/code&gt; - A plugin configuration item created by &lt;code&gt;babel.createConfigItem()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ConfigItem&lt;/code&gt; - &lt;code&gt;babel.createConfigItem()&lt;/code&gt; によって作成されたプラグイン構成アイテム。</target>
        </trans-unit>
        <trans-unit id="aff0399e77e03f1fdd26abb5ca20eed7a39eb0eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ConfigItem&lt;/code&gt; type</source>
          <target state="translated">&lt;code&gt;ConfigItem&lt;/code&gt; タイプ</target>
        </trans-unit>
        <trans-unit id="a4445ba264fd26777bd7ff7a5fc66d86d5e78922" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ES6&lt;/code&gt; or &lt;code&gt;ES2015&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ES6&lt;/code&gt; または &lt;code&gt;ES2015&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="95b698c347f29157af86b6aac0b8fb77b106180c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EntryTarget&lt;/code&gt; - Individual plugin</source>
          <target state="translated">&lt;code&gt;EntryTarget&lt;/code&gt; -個別のプラグイン</target>
        </trans-unit>
        <trans-unit id="1162e8899a1a38ce21b624f891ef448db725dfa7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Plugin&lt;/code&gt; instances aren't meant to be manipulated directly, but often callers will serialize this &lt;code&gt;opts&lt;/code&gt; to JSON to use it as a cache key representing the options Babel has received. Caching on this isn't 100% guaranteed to invalidate properly, but it is the best we have at the moment.</source>
          <target state="translated">&lt;code&gt;Plugin&lt;/code&gt; のインスタンスを直接操作することを意味するものではないが、多くの場合、発信者は、このシリアライズされます &lt;code&gt;opts&lt;/code&gt; バベルは、受信したオプションを表すキャッシュキーとして使用するJSONに。これをキャッシュしても、100％正しく無効になるとは限りませんが、現時点で最高です。</target>
        </trans-unit>
        <trans-unit id="40fb94a5044f3e43fa4465d922ca5bceefdf8449" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PluginEntry&lt;/code&gt; / &lt;code&gt;PresetEntry&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;PluginEntry&lt;/code&gt; / &lt;code&gt;PresetEntry&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6b882d640e1eff12cb13efa3ed30be3a60667184" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RegExp&lt;/code&gt; - A regular expression to match against the normalized filename. On POSIX the path RegExp will run against a &lt;code&gt;/&lt;/code&gt;-separated path, and on Windows it will be on a &lt;code&gt;\&lt;/code&gt;-separated path.</source>
          <target state="translated">&lt;code&gt;RegExp&lt;/code&gt; -正規化されたファイル名と照合する正規表現。POSIXでは、パスRegExpは &lt;code&gt;/&lt;/code&gt; で区切られたパスに対して実行され、Windowsでは、パスは &lt;code&gt;\&lt;/code&gt; で区切られたパス上にあります。</target>
        </trans-unit>
        <trans-unit id="a4fbc99df5c5aee02f8a9151dc4df1319b4afeac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RegExp&lt;/code&gt; Object: &lt;code&gt;/^transform-.*$/&lt;/code&gt; or &lt;code&gt;new RegExp(&quot;^transform-modules-.*&quot;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;RegExp&lt;/code&gt; オブジェクト： &lt;code&gt;/^transform-.*$/&lt;/code&gt; &lt;code&gt;new RegExp(&quot;^transform-modules-.*&quot;)&lt;/code&gt; $ /またはnew RegExp（ &quot;^ transform-modules-。*&quot;）</target>
        </trans-unit>
        <trans-unit id="2ceed709cee19e50415e5455420908c875b0b459" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Symbol&lt;/code&gt;, &lt;code&gt;prototype[Symbol.iterator]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Symbol&lt;/code&gt; 、 &lt;code&gt;prototype[Symbol.iterator]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="33c255a404a1259ed925e58839a888c34f40bc96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[EntryTarget, EntryOptions, string]&lt;/code&gt; - Individual plugin with options and name (see &lt;a href=&quot;#merging&quot;&gt;merging&lt;/a&gt; for more info on names)</source>
          <target state="translated">&lt;code&gt;[EntryTarget, EntryOptions, string]&lt;/code&gt; -オプションと名前を持つ個々のプラグイン（名前の詳細については、&lt;a href=&quot;#merging&quot;&gt;マージ&lt;/a&gt;を参照してください）</target>
        </trans-unit>
        <trans-unit id="43e2b087fbdac9ba721cf510164ad52e952f8fd9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[EntryTarget, EntryOptions]&lt;/code&gt; - Individual plugin w/ options</source>
          <target state="translated">&lt;code&gt;[EntryTarget, EntryOptions]&lt;/code&gt; -オプション付きの個別のプラグイン</target>
        </trans-unit>
        <trans-unit id="af87c2d30ec842d791b4c99c5e0959cc56893d42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a::b&lt;/code&gt;, &lt;code&gt;::console.log&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a::b&lt;/code&gt; 、 &lt;code&gt;::console.log&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c6868487934d6468b4d3baebf0de1c57507d4447" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;abstract&lt;/code&gt;: &lt;code&gt;boolean&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;abstract&lt;/code&gt; ： &lt;code&gt;boolean&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="dcb96343fe75a42f5bc888ffbc93222a40a3e32e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;access&lt;/code&gt;: &lt;code&gt;&quot;public&quot; | &quot;private&quot; | &quot;protected&quot;&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;access&lt;/code&gt; ： &lt;code&gt;&quot;public&quot; | &quot;private&quot; | &quot;protected&quot;&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="428de0d5e3b6f9ffd47a54e048dbcb234d75e84f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;accessibility&lt;/code&gt;: &lt;code&gt;&quot;public&quot; | &quot;private&quot; | &quot;protected&quot;&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;accessibility&lt;/code&gt; ： &lt;code&gt;&quot;public&quot; | &quot;private&quot; | &quot;protected&quot;&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="fec28d94d7ebe87972c1b6f4d08d04fc1f6cb9bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;all&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;, default: &lt;code&gt;false&lt;/code&gt;) Some code has different meaning in Flow and in vanilla JavaScript. For example, &lt;code&gt;foo&amp;lt;T&amp;gt;(x)&lt;/code&gt; is parsed as a call expression with a type argument in Flow, but as a comparison (&lt;code&gt;foo &amp;lt; T &amp;gt; x&lt;/code&gt;) accordingly to the ECMAScript specification. By default, &lt;code&gt;babel-parser&lt;/code&gt; parses those ambiguous constructs as Flow types only if the file starts with a &lt;code&gt;// @flow&lt;/code&gt; pragma. Set this option to &lt;code&gt;true&lt;/code&gt; to always parse files as if &lt;code&gt;// @flow&lt;/code&gt; was specified.</source>
          <target state="translated">&lt;code&gt;all&lt;/code&gt; （ &lt;code&gt;boolean&lt;/code&gt; 、default： &lt;code&gt;false&lt;/code&gt; ）一部のコードは、フローとバニラJavaScriptで異なる意味を持ちます。たとえば、 &lt;code&gt;foo&amp;lt;T&amp;gt;(x)&lt;/code&gt; は、Flowではtype引数を持つ呼び出し式として解析されますが、ECMAScript仕様に従って比較（ &lt;code&gt;foo &amp;lt; T &amp;gt; x&lt;/code&gt; ）として解析されます。デフォルトでは、 &lt;code&gt;babel-parser&lt;/code&gt; は、ファイルが &lt;code&gt;// @flow&lt;/code&gt; プラグマで始まる場合にのみ、これらのあいまいな構造をフロータイプとして解析します。 &lt;code&gt;// @flow&lt;/code&gt; が指定されているかのようにファイルを常に解析するには、このオプションを &lt;code&gt;true&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="0c7f4ac3b28f5324d2597a0fd021bb626a5623c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allowReturnOutsideFunction&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt; by default.</source>
          <target state="translated">&lt;code&gt;allowReturnOutsideFunction&lt;/code&gt; はデフォルトで &lt;code&gt;true&lt;/code&gt; に設定されています。</target>
        </trans-unit>
        <trans-unit id="f56e73163ed0fd4d9c9554a237e277625689faa0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allowSuperOutsideMethod&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt; by default.</source>
          <target state="translated">&lt;code&gt;allowSuperOutsideMethod&lt;/code&gt; はデフォルトで &lt;code&gt;true&lt;/code&gt; に設定されています。</target>
        </trans-unit>
        <trans-unit id="46cb457c50c465dbf2c134cac37361e1096a0b1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alternate&lt;/code&gt;: &lt;code&gt;Expression&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;alternate&lt;/code&gt; ： &lt;code&gt;Expression&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="2682082ac4f374c746959f3b23d7d94d5c2df76b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alternate&lt;/code&gt;: &lt;code&gt;Statement&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;alternate&lt;/code&gt; ： &lt;code&gt;Statement&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="aca5dba98df931f4c65276437ce6806f378eed8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;api.cache(false)&lt;/code&gt; - Same as &lt;code&gt;api.cache.never()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;api.cache(false)&lt;/code&gt; &lt;code&gt;api.cache.never()&lt;/code&gt; 同じ</target>
        </trans-unit>
        <trans-unit id="b331f5120ea01f1908b7ff15d76478da74751a3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;api.cache(true)&lt;/code&gt; - Same as &lt;code&gt;api.cache.forever()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;api.cache(true)&lt;/code&gt; &lt;code&gt;api.cache.forever()&lt;/code&gt; 同じ</target>
        </trans-unit>
        <trans-unit id="52bdbe9ddc0faac7453a595e5aad0d390cf2e555" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;api.cache.forever()&lt;/code&gt; - Permacache the computed config and never call the function again.</source>
          <target state="translated">&lt;code&gt;api.cache.forever()&lt;/code&gt; -計算された構成をPermacacheし、関数を再度呼び出すことはありません。</target>
        </trans-unit>
        <trans-unit id="f778c365956ce772fbfee0a30ca9c640cfb89ab2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;api.cache.invalidate(() =&amp;gt; process.env.NODE_ENV)&lt;/code&gt; - Cache based on the value of &lt;code&gt;NODE_ENV&lt;/code&gt;. Any time the &lt;code&gt;using&lt;/code&gt; callback returns a value other than the one that was expected, the overall config function will be called again and all entries in the cache will be replaced with the result.</source>
          <target state="translated">&lt;code&gt;api.cache.invalidate(() =&amp;gt; process.env.NODE_ENV)&lt;/code&gt; &lt;code&gt;NODE_ENV&lt;/code&gt; の値に基づいてキャッシュします。 &lt;code&gt;using&lt;/code&gt; コールバックが予期された値以外の値を返すたびに、構成関数全体が再度呼び出され、キャッシュ内のすべてのエントリが結果に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="5db6525ee04c5dc0f0029fa3d18522ba064e6dff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;api.cache.never()&lt;/code&gt; - Do not cache this config, and re-execute the function every time.</source>
          <target state="translated">&lt;code&gt;api.cache.never()&lt;/code&gt; -この構成をキャッシュせず、毎回関数を再実行します。</target>
        </trans-unit>
        <trans-unit id="1cb2f3dd6c425fe8298b0d0df399a49687c85c1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;api.cache.using(() =&amp;gt; process.env.NODE_ENV)&lt;/code&gt; - Cache based on the value of &lt;code&gt;NODE_ENV&lt;/code&gt;. Any time the &lt;code&gt;using&lt;/code&gt; callback returns a value other than the one that was expected, the overall config function will be called again and a new entry will be added to the cache.</source>
          <target state="translated">&lt;code&gt;api.cache.using(() =&amp;gt; process.env.NODE_ENV)&lt;/code&gt; &lt;code&gt;NODE_ENV&lt;/code&gt; の値に基づいてキャッシュします。 &lt;code&gt;using&lt;/code&gt; コールバックが予期された値以外の値を返すときはいつでも、全体的なconfig関数が再度呼び出され、新しいエントリがキャッシュに追加されます。</target>
        </trans-unit>
        <trans-unit id="ec08f6b904e5061156e8938bd99d7a3fadb7205d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;api.env(&quot;production&quot;)&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;envName === &quot;production&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;api.env(&quot;production&quot;)&lt;/code&gt; は、 &lt;code&gt;envName === &quot;production&quot;&lt;/code&gt; 場合に &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="7848ad9341b45193f697351e707f3227a641da37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;api.env()&lt;/code&gt; returns the current &lt;code&gt;envName&lt;/code&gt; string.</source>
          <target state="translated">&lt;code&gt;api.env()&lt;/code&gt; は、現在の &lt;code&gt;envName&lt;/code&gt; 文字列を返します。</target>
        </trans-unit>
        <trans-unit id="5fb0b6793c2cce40f01fd1d529898fff4bed6b4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;api.env([&quot;development&quot;, &quot;test&quot;])&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;[&quot;development&quot;, &quot;test&quot;].includes(envName)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;api.env([&quot;development&quot;, &quot;test&quot;])&lt;/code&gt; は、 &lt;code&gt;[&quot;development&quot;, &quot;test&quot;].includes(envName)&lt;/code&gt; 場合に &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="5859bc04fc53d37c2f3e9326724969967cb4fb6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;api.env(envName =&amp;gt; envName.startsWith(&quot;test-&quot;))&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; if the env starts with &quot;test-&quot;.</source>
          <target state="translated">&lt;code&gt;api.env(envName =&amp;gt; envName.startsWith(&quot;test-&quot;))&lt;/code&gt; は、envが &quot;test-&quot;で始まる場合、 &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f82741504d2e5230106ccad9489a90aaead3c38b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;argument&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;argument&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="ef0fdbde627b00801c6c5d8e427c35ac2ea78b26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;argument&lt;/code&gt;: &lt;code&gt;Expression&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;argument&lt;/code&gt; ： &lt;code&gt;Expression&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="7b85b50617e7c6844ac21df6991c25b150ec6849" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;argument&lt;/code&gt;: &lt;code&gt;Expression&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;argument&lt;/code&gt; ： &lt;code&gt;Expression&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="7edbe9c143fea9ff7a5259e0bac3fa021b4c2f79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;argument&lt;/code&gt;: &lt;code&gt;FlowType&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;argument&lt;/code&gt; ： &lt;code&gt;FlowType&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="3f66f45720efa23fdc59e27bd0ecba0f46a97f54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;argument&lt;/code&gt;: &lt;code&gt;LVal&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;argument&lt;/code&gt; ： &lt;code&gt;LVal&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="f0867b8bb19ee5b0fcc68b2aeaaf48cc2b197da7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arguments&lt;/code&gt;: &lt;code&gt;Array&amp;lt;Expression | SpreadElement | JSXNamespacedName&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;arguments&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;Expression | SpreadElement | JSXNamespacedName&amp;gt;&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="972f9e2e3f3678acd653828cc3b1d1d05add95bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arguments&lt;/code&gt;: &lt;code&gt;Array&amp;lt;Expression | SpreadElement&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;arguments&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;Expression | SpreadElement&amp;gt;&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="120d263f39ba7e0b0d773a5d2d475a3a0105d66f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;array&lt;/code&gt; - prevent plugin from minifying arrays</source>
          <target state="translated">&lt;code&gt;array&lt;/code&gt; -アレイの縮小化からプラグイン防ぎます</target>
        </trans-unit>
        <trans-unit id="52f9cf7995df1b2026da54df3b519f1f6c2a382b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;async function*() {}&lt;/code&gt;, &lt;code&gt;for await (let a of b) {}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;async function*() {}&lt;/code&gt; 、 &lt;code&gt;for await (let a of b) {}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f903064764fc85f48372713aea009a7779469d3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;async&lt;/code&gt;: &lt;code&gt;boolean&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;async&lt;/code&gt; ： &lt;code&gt;boolean&lt;/code&gt; （デフォルト： &lt;code&gt;false&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="813416957c5142519fde90affed19c3d80bc0f09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asyncGenerators&lt;/code&gt; (&lt;a href=&quot;https://github.com/tc39/proposal-async-iteration&quot;&gt;proposal&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;asyncGenerators&lt;/code&gt; （&lt;a href=&quot;https://github.com/tc39/proposal-async-iteration&quot;&gt;提案&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="70304d7be634382c4682ee3f752858e10eb1db0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attributes&lt;/code&gt;: &lt;code&gt;Array&amp;lt;JSXAttribute | JSXSpreadAttribute&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;attributes&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;JSXAttribute | JSXSpreadAttribute&amp;gt;&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="1da5957105a8457ce4039aded11a46165a654e84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;automatic&lt;/code&gt; auto imports the functions that JSX transpiles to. &lt;code&gt;classic&lt;/code&gt; does not automatic import anything.</source>
          <target state="translated">&lt;code&gt;automatic&lt;/code&gt; 自動インポートは、JSXが発生する関数です。 &lt;code&gt;classic&lt;/code&gt; は何も自動インポートしません。</target>
        </trans-unit>
        <trans-unit id="2e86db40368c7418c77b38dcac79f1b2e77fc422" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;automatic&lt;/code&gt; auto imports the functions that JSX transpiles to. &lt;code&gt;classic&lt;/code&gt; does not automatically import anything.</source>
          <target state="translated">&lt;code&gt;automatic&lt;/code&gt; 自動インポートは、JSXが発生する関数です。 &lt;code&gt;classic&lt;/code&gt; は自動的に何もインポートしません。</target>
        </trans-unit>
        <trans-unit id="f9d83d66363d2ea67bbf1feca721c488e9d3d9d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await promise&lt;/code&gt; in modules</source>
          <target state="translated">&lt;code&gt;await promise&lt;/code&gt; モジュールで約束を待つ</target>
        </trans-unit>
        <trans-unit id="81700dc83f0080e37fb3f39d9182fb881187b5ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;: &lt;code&gt;boolean&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt; ： &lt;code&gt;boolean&lt;/code&gt; （デフォルト： &lt;code&gt;false&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="c5646c285277c14e815affc190679ac84a14fe4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;babel-plugin-&lt;/code&gt;/&lt;code&gt;babel-preset-&lt;/code&gt; will be injected as a prefix any &lt;code&gt;@&lt;/code&gt;-scoped package that doesn't have it &lt;em&gt;anywhere&lt;/em&gt; in their name.</source>
          <target state="translated">&lt;code&gt;babel-plugin-&lt;/code&gt; / &lt;code&gt;babel-preset-&lt;/code&gt; は、名前の&lt;em&gt;どこにも含ま&lt;/em&gt;れていない &lt;code&gt;@&lt;/code&gt; スコープのパッケージのプレフィックスとして挿入されます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="193c35992f3bc154c9bd409ee01327d17a0638af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;babel-plugin-&lt;/code&gt;/&lt;code&gt;babel-preset-&lt;/code&gt; will be injected as a prefix any unscoped package that doesn't have it as a prefix.</source>
          <target state="translated">&lt;code&gt;babel-plugin-&lt;/code&gt; / &lt;code&gt;babel-preset-&lt;/code&gt; は、プレフィックスとしてそれを持たないスコープ外のパッケージにはプレフィックスとして挿入されます。</target>
        </trans-unit>
        <trans-unit id="a5e2cad6bfce2ed9e976a02d76068c41108dd0d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;babel-plugin&lt;/code&gt;/&lt;code&gt;babel-preset&lt;/code&gt; will be injected as the package name if only the &lt;code&gt;@&lt;/code&gt;-scope name is given.</source>
          <target state="translated">&lt;code&gt;babel-plugin&lt;/code&gt; &lt;code&gt;@&lt;/code&gt; -scope名のみが指定されている場合、babel-plugin / &lt;code&gt;babel-preset&lt;/code&gt; presetがパッケージ名として挿入されます。</target>
        </trans-unit>
        <trans-unit id="c92422079e860d62ef3807adb806b78b15b39266" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;babel-template&lt;/code&gt; accepts all of the options from &lt;a href=&quot;https://github.com/babel/babylon#options&quot;&gt;babylon&lt;/a&gt;, and specifies some defaults of its own:</source>
          <target state="translated">&lt;code&gt;babel-template&lt;/code&gt; からオプションをすべて受け入れ&lt;a href=&quot;https://github.com/babel/babylon#options&quot;&gt;バビロンを&lt;/a&gt;し、自身のいくつかのデフォルト値を指定します。</target>
        </trans-unit>
        <trans-unit id="4832fcf49c96c4b76968fe1c35ae5a8129868f06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;babel-template&lt;/code&gt; returns a &lt;code&gt;function&lt;/code&gt; which is invoked with an optional object of replacements. See the usage section for an example.</source>
          <target state="translated">&lt;code&gt;babel-template&lt;/code&gt; は、置換のオプションのオブジェクトで呼び出される &lt;code&gt;function&lt;/code&gt; を返します。例については、使用法のセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="2e2d875ffa819c491f654f07c1cce2d9be7382c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;babel.config.cjs&lt;/code&gt; and &lt;code&gt;.babelrc.cjs&lt;/code&gt; allow you to define your configuration as CommonJS, using &lt;code&gt;module.exports&lt;/code&gt;. They have been supported since &lt;code&gt;v7.7.0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;babel.config.cjs&lt;/code&gt; と &lt;code&gt;.babelrc.cjs&lt;/code&gt; を使用して、あなたはCommonJSとしてご使用の構成を定義することができ &lt;code&gt;module.exports&lt;/code&gt; はを。これらは &lt;code&gt;v7.7.0&lt;/code&gt; 以降でサポートされています。</target>
        </trans-unit>
        <trans-unit id="5c2a4b9b38ddc2d7ec030c27fc02b09e669c3000" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;babel.config.js&lt;/code&gt; and &lt;code&gt;.babelrc.js&lt;/code&gt; behave like the &lt;code&gt;.mjs&lt;/code&gt; equivalents when your &lt;code&gt;package.json&lt;/code&gt; file contains the &lt;a href=&quot;https://nodejs.org/api/esm.html#esm_code_package_json_code_code_type_code_field&quot;&gt;&lt;code&gt;&quot;type&quot;: &quot;module&quot;&lt;/code&gt;&lt;/a&gt; option, otherwise they are exactly the same as the &lt;code&gt;.cjs&lt;/code&gt; files.</source>
          <target state="translated">&lt;code&gt;babel.config.js&lt;/code&gt; と &lt;code&gt;.babelrc.js&lt;/code&gt; はのように振る舞う &lt;code&gt;.mjs&lt;/code&gt; のあなたの時に相当 &lt;code&gt;package.json&lt;/code&gt; のファイルが含まれている&lt;a href=&quot;https://nodejs.org/api/esm.html#esm_code_package_json_code_code_type_code_field&quot;&gt; &lt;code&gt;&quot;type&quot;: &quot;module&quot;&lt;/code&gt; &lt;/a&gt;オプションをそれ以外の場合は、全く同じです、 &lt;code&gt;.cjs&lt;/code&gt; のファイル。</target>
        </trans-unit>
        <trans-unit id="46c56af368758c93a3c5c659b592c9224674cff4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;babel.config.json&lt;/code&gt; and &lt;code&gt;.babelrc.json&lt;/code&gt; are parsed as JSON5 and should contain an object matching the &lt;a href=&quot;../options/index&quot;&gt;options&lt;/a&gt; format that Babel accepts. They have been supported since &lt;code&gt;v7.7.0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;babel.config.json&lt;/code&gt; と &lt;code&gt;.babelrc.json&lt;/code&gt; はJSON5として解析され、Babelが受け入れる&lt;a href=&quot;../options/index&quot;&gt;オプション&lt;/a&gt;形式に一致するオブジェクトが含まれている必要があります。これらは &lt;code&gt;v7.7.0&lt;/code&gt; 以降でサポートされています。</target>
        </trans-unit>
        <trans-unit id="c86715fe8743d3408b9a9cba77d1c3851a1e4d63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;babel.config.json&lt;/code&gt; files, with the different extensions (&lt;code&gt;.js&lt;/code&gt;, &lt;code&gt;.cjs&lt;/code&gt;, &lt;code&gt;.mjs&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;babel.config.json&lt;/code&gt; 拡張子が異なるbabel.config.jsonファイル（ &lt;code&gt;.js&lt;/code&gt; 、 &lt;code&gt;.cjs&lt;/code&gt; 、 &lt;code&gt;.mjs&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="8bcb6730470a2ed564d577a002f7d1ea0f8b91ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;babel.config.mjs&lt;/code&gt; and &lt;code&gt;.babelrc.mjs&lt;/code&gt; use native ECMAScript modules. They are supported by Node.js 13.2+ (or older versions via the &lt;code&gt;--experimental-modules&lt;/code&gt; flag). Please remember that native ECMAScript modules are asynchronous (that's why &lt;code&gt;import()&lt;/code&gt; always returns a promise!): for this reason, &lt;code&gt;.mjs&lt;/code&gt; config files will throw when calling Babel synchronously. They have been supported since &lt;code&gt;v7.8.0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;babel.config.mjs&lt;/code&gt; と &lt;code&gt;.babelrc.mjs&lt;/code&gt; は、ネイティブECMAScriptモジュールを使用します。これらは、Node.js 13.2+（または &lt;code&gt;--experimental-modules&lt;/code&gt; フラグを介した古いバージョン）でサポートされています。ネイティブECMAScriptモジュールは非同期であることに注意してください（そのため、 &lt;code&gt;import()&lt;/code&gt; は常にpromiseを返します！）：このため、Babelを同期的に呼び出すと &lt;code&gt;.mjs&lt;/code&gt; 構成ファイルがスローされます。これらは &lt;code&gt;v7.8.0&lt;/code&gt; 以降サポートされています。</target>
        </trans-unit>
        <trans-unit id="41f5a41816011d3c655dd9460c3c4901935a2727" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;babelignore: string | void&lt;/code&gt; - The path of the &lt;code&gt;.babelignore&lt;/code&gt; file, if there was one.</source>
          <target state="translated">&lt;code&gt;babelignore: string | void&lt;/code&gt; - &lt;code&gt;.babelignore&lt;/code&gt; ファイルがある場合はそのパス。</target>
        </trans-unit>
        <trans-unit id="d796a220b2afcd8983c11db407c579a38f06f5a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;babelrc: string | void&lt;/code&gt; - The path of the &lt;a href=&quot;../config-files/index#file-relative-configuration&quot;&gt;file-relative configuration&lt;/a&gt; file, if there was one.</source>
          <target state="translated">&lt;code&gt;babelrc: string | void&lt;/code&gt; &lt;a href=&quot;../config-files/index#file-relative-configuration&quot;&gt;ファイル相対構成&lt;/a&gt;ファイルのパス（存在する場合）。</target>
        </trans-unit>
        <trans-unit id="f04ea3b58ff8bf1e601d434df2ed425fedda522a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bigInt&lt;/code&gt; (&lt;a href=&quot;https://github.com/tc39/proposal-bigint&quot;&gt;proposal&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;bigInt&lt;/code&gt; （&lt;a href=&quot;https://github.com/tc39/proposal-bigint&quot;&gt;提案&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="e63c60e9a4734df5b0b908687efa99071f391bb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;block&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;block&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="2dfa935afa36fe0f7b261e7ac5a294cbe8eaec9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;block&lt;/code&gt;: &lt;code&gt;BlockStatement&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;block&lt;/code&gt; ： &lt;code&gt;BlockStatement&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="613f1a0b292cd58175dfa24f83bafa013e7667e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;body&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;body&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="3a5548ba408eee8f1268bb3b8e92051d54380d3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;body&lt;/code&gt;: &lt;code&gt;Array&amp;lt;ClassMethod | ClassProperty | ClassPrivateProperty | TSDeclareMethod | TSIndexSignature&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;body&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;ClassMethod | ClassProperty | ClassPrivateProperty | TSDeclareMethod | TSIndexSignature&amp;gt;&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="1a7caeb869617f006c07ade78603b3fb42f92c71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;body&lt;/code&gt;: &lt;code&gt;Array&amp;lt;ClassMethod | ClassProperty&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;body&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;ClassMethod | ClassProperty&amp;gt;&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="18e7ca814fd9cd3eb44276b83e9282be500894b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;body&lt;/code&gt;: &lt;code&gt;Array&amp;lt;Statement&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;body&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;Statement&amp;gt;&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="cc3a07b82aee19de1b047bde3ef3103283f84677" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;body&lt;/code&gt;: &lt;code&gt;Array&amp;lt;TSTypeElement&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;body&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;TSTypeElement&amp;gt;&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="c6425ff98adcac2f772b16ecbbc4f5358df57ae5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;body&lt;/code&gt;: &lt;code&gt;BlockStatement | Expression&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;body&lt;/code&gt; ： &lt;code&gt;BlockStatement | Expression&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="ef2edd59a06b2794ee0db19e5fd496f03451c458" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;body&lt;/code&gt;: &lt;code&gt;BlockStatement | Statement&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;body&lt;/code&gt; ： &lt;code&gt;BlockStatement | Statement&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="d79e682fb6df562666f11fbddca6f58d12a1453f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;body&lt;/code&gt;: &lt;code&gt;BlockStatement&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;body&lt;/code&gt; ： &lt;code&gt;BlockStatement&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="b85644fcbf99c68564f6558b273c91ff265ae7aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;body&lt;/code&gt;: &lt;code&gt;BlockStatement&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;body&lt;/code&gt; ： &lt;code&gt;BlockStatement&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="1127816c20ec6f89b9315e5b2bb1f349e3a435bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;body&lt;/code&gt;: &lt;code&gt;ClassBody&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;body&lt;/code&gt; ： &lt;code&gt;ClassBody&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="2c08e793b499273d3903995b6ee2af76acff437b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;body&lt;/code&gt;: &lt;code&gt;ObjectTypeAnnotation&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;body&lt;/code&gt; ： &lt;code&gt;ObjectTypeAnnotation&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="50836ba7d5baeba555e940a3c5996ba5e3e466e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;body&lt;/code&gt;: &lt;code&gt;Statement&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;body&lt;/code&gt; ： &lt;code&gt;Statement&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="a62b28be5bdbceab0248b00f9f6099fe59119929" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;body&lt;/code&gt;: &lt;code&gt;TSInterfaceBody&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;body&lt;/code&gt; ： &lt;code&gt;TSInterfaceBody&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="42d8131dc7674e79ebd798020ae65b833ff86ef4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;body&lt;/code&gt;: &lt;code&gt;TSModuleBlock | TSModuleDeclaration&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;body&lt;/code&gt; ： &lt;code&gt;TSModuleBlock | TSModuleDeclaration&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="984484ef27c3de63e18b2cf22f6093cfd354c2c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt; - prevent plugin from minifying booleans</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; -ブール値を縮小化からプラグイン防ぎます</target>
        </trans-unit>
        <trans-unit id="441ffe1c0808cd81f66b17580e7ce62d098fd115" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt; or &lt;code&gt;string&lt;/code&gt;, defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; または &lt;code&gt;string&lt;/code&gt; 。デフォルトは &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a5e747b5ca5638358a5e6b7c9905f38a905f641d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;, &lt;code&gt;Array&amp;lt;string&amp;gt;&lt;/code&gt;, or &lt;code&gt;(string) =&amp;gt; boolean&lt;/code&gt;, defaults to &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; 、 &lt;code&gt;Array&amp;lt;string&amp;gt;&lt;/code&gt; 、または &lt;code&gt;(string) =&amp;gt; boolean&lt;/code&gt; 、デフォルトは &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="62050108876d02cbba9a86f6fc6b36822dc5819e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;, defaults to &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; 、デフォルトは &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cca5ebd485d0d288bd3e681e46aa4ffec17105e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;, defaults to &lt;code&gt;false&lt;/code&gt; but will default to &lt;code&gt;true&lt;/code&gt; in the &lt;a href=&quot;https://github.com/babel/notes/blob/master/2019/05/21.md#prs&quot;&gt;future&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; 、デフォルトは &lt;code&gt;false&lt;/code&gt; &lt;code&gt;true&lt;/code&gt; が、&lt;a href=&quot;https://github.com/babel/notes/blob/master/2019/05/21.md#prs&quot;&gt;将来的に&lt;/a&gt;はデフォルトでtrueになります。</target>
        </trans-unit>
        <trans-unit id="ec655026db0625d7b1ef3c77e525c1798b951a07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;, defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; 。デフォルトは &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5f203d7875241579af5b375f251bb3ad74dd66fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;, defaults to &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; 、デフォルトは &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a9b7161a3589a194f35af949f6565a1be38b490e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;, defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; 、デフォルトは &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c38b908e61b4f59982173d19df047ed02ffa15e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;, uses the default set by &lt;a href=&quot;../babel-plugin-transform-typescript/index#allownamespaces&quot;&gt;&lt;code&gt;@babel/plugin-transform-typescript&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; は、&lt;a href=&quot;../babel-plugin-transform-typescript/index#allownamespaces&quot;&gt; &lt;code&gt;@babel/plugin-transform-typescript&lt;/code&gt; &lt;/a&gt;によって設定されたデフォルトを使用します。</target>
        </trans-unit>
        <trans-unit id="68fddf0af79df24c159209cd8f4c9f7d7d576f72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="d9cd7e1e7cdadf7295201a81971834bdc6bc3338" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bound&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;bound&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="e819de6dc8ffda28fdf01ad82ad4b7e0e3947e62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bound&lt;/code&gt;: &lt;code&gt;TypeAnnotation&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;bound&lt;/code&gt; ： &lt;code&gt;TypeAnnotation&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="5161574a086a64e7f691ebe46fc4381bdb6a5f33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callProperties&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;callProperties&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="3bd5e9dc7e0bd37ca880733c0176e6ff08fe34f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callProperties&lt;/code&gt;: &lt;code&gt;Array&amp;lt;ObjectTypeCallProperty&amp;gt;&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;callProperties&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;ObjectTypeCallProperty&amp;gt;&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="f6ad321099dda7c5733fa5f37686c6966c025fa5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callee&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;callee&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="e3c5179c12881daf5015526b726d4d3b80a678e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callee&lt;/code&gt;: &lt;code&gt;Expression&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;callee&lt;/code&gt; ： &lt;code&gt;Expression&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="ea451c46fd90acc34804212ca756705a213f0b89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cases&lt;/code&gt;: &lt;code&gt;Array&amp;lt;SwitchCase&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;cases&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;SwitchCase&amp;gt;&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="8d8995f3e4fa26d66341efd0e86623d31cfdd110" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;checkType&lt;/code&gt;: &lt;code&gt;TSType&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;checkType&lt;/code&gt; ： &lt;code&gt;TSType&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="cd8f528a8727a6186afd2f4f12d77d195e60a54e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;children&lt;/code&gt;: &lt;code&gt;Array&amp;lt;JSXText | JSXExpressionContainer | JSXSpreadChild | JSXElement | JSXFragment&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;children&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;JSXText | JSXExpressionContainer | JSXSpreadChild | JSXElement | JSXFragment&amp;gt;&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="daa75db46a858721b8a9c52f875865ac228ab776" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;children&lt;/code&gt;: &lt;code&gt;Array&amp;lt;JSXText | JSXExpressionContainer | JSXSpreadChild | JSXElement&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;children&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;JSXText | JSXExpressionContainer | JSXSpreadChild | JSXElement&amp;gt;&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="1fb463d36aa5028668264f793ef0435519421ea0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;classPrivateMethods&lt;/code&gt; (&lt;a href=&quot;https://github.com/tc39/proposal-private-methods&quot;&gt;proposal&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;classPrivateMethods&lt;/code&gt; （&lt;a href=&quot;https://github.com/tc39/proposal-private-methods&quot;&gt;提案&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="fde4035ea0d09d4615123a54db65dbb31f80f9fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;classPrivateProperties&lt;/code&gt; (&lt;a href=&quot;https://github.com/tc39/proposal-private-fields&quot;&gt;proposal&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;classPrivateProperties&lt;/code&gt; （&lt;a href=&quot;https://github.com/tc39/proposal-private-fields&quot;&gt;提案&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="0bf1f04401600dce1f0c2f81e880052d91a7f419" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;classProperties&lt;/code&gt; (&lt;a href=&quot;https://github.com/tc39/proposal-class-public-fields&quot;&gt;proposal&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;classProperties&lt;/code&gt; （&lt;a href=&quot;https://github.com/tc39/proposal-class-public-fields&quot;&gt;提案&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="f440c5bbfd1a1a0e2d77f40f2fc7330a56353748" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;classStaticBlock&lt;/code&gt; (&lt;a href=&quot;https://github.com/tc39/proposal-class-static-block&quot;&gt;proposal&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;classStaticBlock&lt;/code&gt; （&lt;a href=&quot;https://github.com/tc39/proposal-class-static-block&quot;&gt;提案&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="32d7998f27c4eec191cb6af25b28bdf1ed2ad890" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;classic | automatic&lt;/code&gt;, defaults to &lt;code&gt;classic&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;classic | automatic&lt;/code&gt; 、デフォルトは &lt;code&gt;classic&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0879dccca2a9f86db2dd295a006b5da292241935" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;closingElement&lt;/code&gt;: &lt;code&gt;JSXClosingElement&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;closingElement&lt;/code&gt; ： &lt;code&gt;JSXClosingElement&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="8b7c606d5b2875a704c314bd41484a555233687e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;closingFragment&lt;/code&gt;: &lt;code&gt;JSXClosingFragment&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;closingFragment&lt;/code&gt; ： &lt;code&gt;JSXClosingFragment&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="101c9f568c5516bb9dcb29a5ddf1bb839bd1c31a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;comments&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;comments&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="f73ca4faf6075df39b77d00bcebc685705b040d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;computed&lt;/code&gt;: &lt;code&gt;boolean&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;computed&lt;/code&gt; ： &lt;code&gt;boolean&lt;/code&gt; （デフォルト： &lt;code&gt;false&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="cb3f3ee48bcf87a0aeb4833b60f1ec4f6743ebb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;computed&lt;/code&gt;: &lt;code&gt;boolean&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;computed&lt;/code&gt; ： &lt;code&gt;boolean&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="21f27a8ffe446ae2c5ce394e849784df3eb7615f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config: string | void&lt;/code&gt; - The path of the &lt;a href=&quot;../config-files/index#project-wide-configuration&quot;&gt;project-wide config file&lt;/a&gt; file, if there was one.</source>
          <target state="translated">&lt;code&gt;config: string | void&lt;/code&gt; &lt;a href=&quot;../config-files/index#project-wide-configuration&quot;&gt;プロジェクト全体の構成ファイル&lt;/a&gt;ファイルのパス（存在する場合）。</target>
        </trans-unit>
        <trans-unit id="187ef42ea0bb0cea01254462c7c0f487305a43cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;consequent&lt;/code&gt;: &lt;code&gt;Array&amp;lt;Statement&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;consequent&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;Statement&amp;gt;&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="3cc6f17f152e15035114ed9d6b3ffe7edd323b8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;consequent&lt;/code&gt;: &lt;code&gt;Expression&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;consequent&lt;/code&gt; ： &lt;code&gt;Expression&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="e74b5f5b0b5368e0975f8a01590478d3ad74614b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;consequent&lt;/code&gt;: &lt;code&gt;Statement&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;consequent&lt;/code&gt; ： &lt;code&gt;Statement&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="f7ed6f0cd602f743449dca254ce8605e702e8090" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const&lt;/code&gt;: &lt;code&gt;boolean&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;const&lt;/code&gt; ： &lt;code&gt;boolean&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="4bc7536594ab2ee5b87fb9bce7a2b4ad5c8be83a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;constraint&lt;/code&gt;: &lt;code&gt;TSType&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;constraint&lt;/code&gt; ： &lt;code&gt;TSType&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="5e31ab47506c8a1a09fe8ae1d1af5e097b9a1844" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;core-js&lt;/code&gt; aliasing</source>
          <target state="translated">&lt;code&gt;core-js&lt;/code&gt; エイリアシング</target>
        </trans-unit>
        <trans-unit id="3728e785ce345235216eec9c2443b836f6f860e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;corejs&lt;/code&gt; option</source>
          <target state="translated">&lt;code&gt;corejs&lt;/code&gt; オプション</target>
        </trans-unit>
        <trans-unit id="5b89f6d7489d2ed6457c7f6fe85757c69b7c230c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decimal&lt;/code&gt; (&lt;a href=&quot;https://github.com/tc39/proposal-decimal&quot;&gt;proposal&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;decimal&lt;/code&gt; （&lt;a href=&quot;https://github.com/tc39/proposal-decimal&quot;&gt;提案&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="8c0e7c9b322df1d69393e3aaee7c0c241b4f68a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;declaration&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;declaration&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="d7f9291ca9e9ffd8fd80aa96cd712679da21f355" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;declaration&lt;/code&gt;: &lt;code&gt;Declaration&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;declaration&lt;/code&gt; ： &lt;code&gt;Declaration&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="fba319def3e0f4647f86b2a6cea1f05f9f2cef95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;declaration&lt;/code&gt;: &lt;code&gt;Flow&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;declaration&lt;/code&gt; ： &lt;code&gt;Flow&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="0231941caca035b4bde72277cfd3575945fe4506" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;declaration&lt;/code&gt;: &lt;code&gt;FunctionDeclaration | ClassDeclaration | Expression&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;declaration&lt;/code&gt; ： &lt;code&gt;FunctionDeclaration | ClassDeclaration | Expression&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="2ffcb5f66eee2de335f94ab82d7e10c11b76ed1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;declaration&lt;/code&gt;: &lt;code&gt;FunctionDeclaration | TSDeclareFunction | ClassDeclaration | Expression&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;declaration&lt;/code&gt; ： &lt;code&gt;FunctionDeclaration | TSDeclareFunction | ClassDeclaration | Expression&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="95cccb25b8a5556cb848d1d2c110c08ce618fbce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;declarations&lt;/code&gt;: &lt;code&gt;Array&amp;lt;VariableDeclarator&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;declarations&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;VariableDeclarator&amp;gt;&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="e9303b7c98c5e33e525d47d9a4921226db7c9fb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;declare&lt;/code&gt;: &lt;code&gt;boolean&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;declare&lt;/code&gt; ： &lt;code&gt;boolean&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="42a03029d8552d6f94192d62780ccad62b2d6a34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decorators&lt;/code&gt; (&lt;a href=&quot;https://github.com/tc39/proposal-decorators&quot;&gt;proposal&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;decorators&lt;/code&gt; （&lt;a href=&quot;https://github.com/tc39/proposal-decorators&quot;&gt;提案&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="42e7c853e919fd7a958f46e0f179416595fcd858" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decorators&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;decorators&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="cc90cf625a6acb569d781d4afc0053ebb29d4a91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decorators&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;decorators&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="350d936e339488a2a993c11f5389a5ff4ace5ed9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decorators&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;decorators&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="bd23644bf9e6b3dd3e6bdde68a3f0afc88bfba4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decorators&lt;/code&gt;: &lt;code&gt;Array&amp;lt;Decorator&amp;gt;&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;decorators&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;Decorator&amp;gt;&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="b50b465813893e206800aec27e58edc480f5bcd9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decorators&lt;/code&gt;: &lt;code&gt;Array&amp;lt;Decorator&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;decorators&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;Decorator&amp;gt;&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="4366d99a1eace31392529873af681d978f9f3237" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decoratorsBeforeExport&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;decoratorsBeforeExport&lt;/code&gt; （ &lt;code&gt;boolean&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="3ff87298336f8e074da1ad216517f63e358e1589" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decoratorsBeforeExport&lt;/code&gt; must be specified. Before that it defaults to &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;decoratorsBeforeExport&lt;/code&gt; 指定する必要があります。その前は、デフォルトで &lt;code&gt;false&lt;/code&gt; になっています</target>
        </trans-unit>
        <trans-unit id="4a21fe1ae9e5962c4dfb1c93e0e15568de65d54e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default&lt;/code&gt;: &lt;code&gt;FlowType&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;default&lt;/code&gt; ： &lt;code&gt;FlowType&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="b655b420b15586088ba3a9d5187594dab3921869" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default&lt;/code&gt;: &lt;code&gt;TSType&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;default&lt;/code&gt; ： &lt;code&gt;TSType&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="6645d6f97e34e49a475f12aad78178a40ae34698" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default&lt;/code&gt;: &lt;code&gt;boolean&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;default&lt;/code&gt; ： &lt;code&gt;boolean&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="970b440300f5105d5d7ea71f594cfb9ff2acde65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;definite&lt;/code&gt;: &lt;code&gt;boolean&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;definite&lt;/code&gt; ： &lt;code&gt;boolean&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="6dfbe2717a33b401bfb185947d413bbe4ab67ad0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;delegate&lt;/code&gt;: &lt;code&gt;boolean&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;delegate&lt;/code&gt; ： &lt;code&gt;boolean&lt;/code&gt; （デフォルト： &lt;code&gt;false&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="6c6c14bd2068c713c514051932b77b2cf6c2b861" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;directives&lt;/code&gt;: &lt;code&gt;Array&amp;lt;Directive&amp;gt;&lt;/code&gt; (default: &lt;code&gt;[]&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;directives&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;Directive&amp;gt;&lt;/code&gt; （デフォルト： &lt;code&gt;[]&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="e8a7162d263d0f9da601dbdce6aa745fe1350732" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dirname: string&lt;/code&gt; - The path that the options are relative to.</source>
          <target state="translated">&lt;code&gt;dirname: string&lt;/code&gt; オプションの相対パス。</target>
        </trans-unit>
        <trans-unit id="673e774fcbe235df87a57bbae788430d9a69ef04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;discriminant&lt;/code&gt;: &lt;code&gt;Expression&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;discriminant&lt;/code&gt; ： &lt;code&gt;Expression&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="d9d15fb87508ebf24baccbfaa9e28a80ba2136f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;doExpressions&lt;/code&gt; (&lt;a href=&quot;https://github.com/tc39/proposal-do-expressions&quot;&gt;proposal&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;doExpressions&lt;/code&gt; （&lt;a href=&quot;https://github.com/tc39/proposal-do-expressions&quot;&gt;提案&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="d1ef7965ce34cd2bd16ff61307dfdccfcdc382a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;document.querySelectorAll&lt;/code&gt; returns a &lt;code&gt;NodeList&lt;/code&gt; element which is not a plain array, so you normally can&amp;rsquo;t use the &lt;code&gt;map&lt;/code&gt; function on it, and have to use it this way: &lt;code&gt;Array.prototype.map.call(document.querySelectorAll(...), node =&amp;gt; { ... })&lt;/code&gt;. The above code using the &lt;code&gt;::&lt;/code&gt; will work because it is equivalent to:</source>
          <target state="translated">&lt;code&gt;document.querySelectorAll&lt;/code&gt; は、単純な配列ではない &lt;code&gt;NodeList&lt;/code&gt; 要素を返すため、通常はその &lt;code&gt;map&lt;/code&gt; 関数を使用できず、次のように使用する必要があります： &lt;code&gt;Array.prototype.map.call(document.querySelectorAll(...), node =&amp;gt; { ... })&lt;/code&gt; 。 &lt;code&gt;::&lt;/code&gt; を使用する上記のコードは、以下と同等であるため機能します。</target>
        </trans-unit>
        <trans-unit id="3851a2b29392c1bbd350bcafa61e8d44f8680a8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;document.querySelectorAll&lt;/code&gt; returns a &lt;code&gt;NodeList&lt;/code&gt; element which is not a plain array, so you normally can't use the &lt;code&gt;map&lt;/code&gt; function on it, and have to use it this way: &lt;code&gt;Array.prototype.map.call(document.querySelectorAll(...), node =&amp;gt; { ... })&lt;/code&gt;. The above code using the &lt;code&gt;::&lt;/code&gt; will work because it is equivalent to:</source>
          <target state="translated">&lt;code&gt;document.querySelectorAll&lt;/code&gt; は、プレーン配列ではない &lt;code&gt;NodeList&lt;/code&gt; 要素を返すため、通常はその要素で &lt;code&gt;map&lt;/code&gt; 関数を使用できず、次のように使用する必要があります &lt;code&gt;Array.prototype.map.call(document.querySelectorAll(...), node =&amp;gt; { ... })&lt;/code&gt; 。 &lt;code&gt;::&lt;/code&gt; を使用する上記のコードは、次と同等であるため機能します。</target>
        </trans-unit>
        <trans-unit id="364733066d6991bd400c9270dc9283e1f3248560" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dynamicImport&lt;/code&gt; (&lt;a href=&quot;https://github.com/tc39/proposal-dynamic-import&quot;&gt;proposal&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;dynamicImport&lt;/code&gt; （&lt;a href=&quot;https://github.com/tc39/proposal-dynamic-import&quot;&gt;提案&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="4c06c14f7d6e7ada002673b1af907f72e49f8ad5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;elementType&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;elementType&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="b17bd59a5f653359f53791df9e1193251aaf3689" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;elementType&lt;/code&gt;: &lt;code&gt;FlowType&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;elementType&lt;/code&gt; ： &lt;code&gt;FlowType&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="7648eaa14f3d7846d129daaa5c33dc1ba5636cba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;elementType&lt;/code&gt;: &lt;code&gt;TSType&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;elementType&lt;/code&gt; ： &lt;code&gt;TSType&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="b382c0f20862642cc63c4bf4ffe93994a9646927" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;elementTypes&lt;/code&gt;: &lt;code&gt;Array&amp;lt;TSType&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;elementTypes&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;TSType&amp;gt;&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="d8a5f91ac244a8552c47bbf2b9f354f86ed4daea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;elements&lt;/code&gt;: &lt;code&gt;Array&amp;lt;Identifier | Pattern | RestElement&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;elements&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;Identifier | Pattern | RestElement&amp;gt;&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="dbfc95fa8558cf6e320bbddfbcddf1b80407f80d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;elements&lt;/code&gt;: &lt;code&gt;Array&amp;lt;PatternLike&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;elements&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;PatternLike&amp;gt;&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="9cb51c69f61a007e81734047cd99b76e3aeff7e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;elements&lt;/code&gt;: &lt;code&gt;Array&amp;lt;null | Expression | SpreadElement&amp;gt;&lt;/code&gt; (default: &lt;code&gt;[]&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;elements&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;null | Expression | SpreadElement&amp;gt;&lt;/code&gt; （デフォルト： &lt;code&gt;[]&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="2ddf38d3a3458505aadb087e22216994b0f56408" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;env&lt;/code&gt; option</source>
          <target state="translated">&lt;code&gt;env&lt;/code&gt; オプション</target>
        </trans-unit>
        <trans-unit id="e54ef68426ed13cb851fe68798c896e9bf77ce45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;estree&lt;/code&gt; (&lt;a href=&quot;https://github.com/estree/estree&quot;&gt;repo&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;estree&lt;/code&gt; （&lt;a href=&quot;https://github.com/estree/estree&quot;&gt;レポ&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="83052aec090500782ba8e1b8cc0f260ba5bbfd4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eval&lt;/code&gt; - mangle identifiers in scopes accessible by eval</source>
          <target state="translated">&lt;code&gt;eval&lt;/code&gt; - evalでアクセス可能なスコープ内の識別子をマングルします</target>
        </trans-unit>
        <trans-unit id="9b7ca599f2e0db6fd231390bb549d818a3b57844" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eval&lt;/code&gt; - mangle identifiers in scopes accessible by eval (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;eval&lt;/code&gt; - evalでアクセス可能なスコープ内のマングル識別子（デフォルト： &lt;code&gt;false&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="443668f2fae1e98a1b99da926055d58f3b711d59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exact&lt;/code&gt;: &lt;code&gt;boolean&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;exact&lt;/code&gt; ： &lt;code&gt;boolean&lt;/code&gt; （デフォルト： &lt;code&gt;false&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="8f77a2ee325df0c1edd6319c191bd0f32e3b3876" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exclude&lt;/code&gt; - A plain JS Object with keys as identifier names and values indicating whether to exclude</source>
          <target state="translated">&lt;code&gt;exclude&lt;/code&gt; -除外するかどうかを示す識別子名と値としてのキーを持つプレーンJSオブジェクト</target>
        </trans-unit>
        <trans-unit id="89a11684043e889c4402cd070a074daf37152631" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exclude&lt;/code&gt; - A plain JS Object with keys as identifier names and values indicating whether to exclude (default: &lt;code&gt;{}&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;exclude&lt;/code&gt; -識別子名としてキーを持ち、除外するかどうかを示す値を持つプレーンなJSオブジェクト（デフォルト： &lt;code&gt;{}&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="a927bfe8154f707ae963129a5a24a40507c915cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exclude&lt;/code&gt; - An array of console methods to exclude from removal.</source>
          <target state="translated">&lt;code&gt;exclude&lt;/code&gt; -削除から除外するコンソールメソッドの配列。</target>
        </trans-unit>
        <trans-unit id="4dd2ef5355d62cc328398300d70c4cad7dd2025f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exclude&lt;/code&gt; - array of environment variables to exclude</source>
          <target state="translated">&lt;code&gt;exclude&lt;/code&gt; -除外する環境変数の配列</target>
        </trans-unit>
        <trans-unit id="168c1ad7cc66eedd0dbedad1219a6785f6b9d178" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;export&lt;/code&gt;ing a variable using &lt;code&gt;var&lt;/code&gt; or &lt;code&gt;let&lt;/code&gt; in a &lt;code&gt;namespace&lt;/code&gt; will result in an error: &lt;em&gt;&quot;Namespaces exporting non-const are not supported by Babel. Change to const or ...&quot;&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;export&lt;/code&gt; 使用して変数をINGの &lt;code&gt;var&lt;/code&gt; か &lt;code&gt;let&lt;/code&gt; に &lt;code&gt;namespace&lt;/code&gt; ：エラーが発生します&lt;em&gt;「のconstと非constをエクスポートする名前空間がバベルでサポートされていない変更または...。」&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="94eeb6747e70e407c59ccf6a59ef9e40308ec99b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exportDefaultFrom&lt;/code&gt; (&lt;a href=&quot;https://github.com/tc39/ecmascript-export-default-from&quot;&gt;proposal&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;exportDefaultFrom&lt;/code&gt; （&lt;a href=&quot;https://github.com/tc39/ecmascript-export-default-from&quot;&gt;提案&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="78080d99f5fb0acc8fa5ab56ba5d6fd2d48f08f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exportKind&lt;/code&gt;: &lt;code&gt;[&quot;type&quot;,&quot;value&quot;]&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;exportKind&lt;/code&gt; ： &lt;code&gt;[&quot;type&quot;,&quot;value&quot;]&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="29992bc47008ebfb07c3acae4f79fe4cdfd29ea2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exportNamespaceFrom&lt;/code&gt; (&lt;a href=&quot;https://github.com/leebyron/ecmascript-export-ns-from&quot;&gt;proposal&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;exportNamespaceFrom&lt;/code&gt; （&lt;a href=&quot;https://github.com/leebyron/ecmascript-export-ns-from&quot;&gt;提案&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="afab85e358f52c76b89d58fc610472982fb9f8f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exported&lt;/code&gt;: &lt;code&gt;Identifier&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;exported&lt;/code&gt; ： &lt;code&gt;Identifier&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="894c51426755b31f0ca8a59fc234a42c98dd2150" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exprName&lt;/code&gt;: &lt;code&gt;TSEntityName&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;exprName&lt;/code&gt; ： &lt;code&gt;TSEntityName&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="c49f7bb94937492b3273d7d5dfd1809fcb1be911" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expression&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;expression&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="d473adb6f447447f0ebefc39a39cb776eb3894ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expression&lt;/code&gt;: &lt;code&gt;Expression&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;expression&lt;/code&gt; ： &lt;code&gt;Expression&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="fb15ec30944febc9bbb69b2b1721675e8e92e835" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expression&lt;/code&gt;: &lt;code&gt;StringLiteral&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;expression&lt;/code&gt; ： &lt;code&gt;StringLiteral&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="8e8a6852d8bbe9cf41713febd879561f6bb42ef2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expression&lt;/code&gt;: &lt;code&gt;TSEntityName&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;expression&lt;/code&gt; ： &lt;code&gt;TSEntityName&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="c9f58deffd87abf391ec9974215df954df7db4c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expression&lt;/code&gt;: &lt;code&gt;boolean&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;expression&lt;/code&gt; ： &lt;code&gt;boolean&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="c55fcf8a22adf1d0873f947848182e460c7f839f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expressions&lt;/code&gt;: &lt;code&gt;Array&amp;lt;Expression&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;expressions&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;Expression&amp;gt;&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="91f235896d8062e4b313ffeddb96420ef3e1bf1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extends&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;extends&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="b07ed56320e40bdb2aec6f7c8bd1c480b9eb515a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extends&lt;/code&gt;: &lt;code&gt;Array&amp;lt;InterfaceExtends&amp;gt;&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;extends&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;InterfaceExtends&amp;gt;&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="3725539d51aa82c7f84f876c61941b7e150be27c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extends&lt;/code&gt;: &lt;code&gt;Array&amp;lt;TSExpressionWithTypeArguments&amp;gt;&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;extends&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;TSExpressionWithTypeArguments&amp;gt;&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="93a6939c8fc16934bfb67819fa1409724decea52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extendsType&lt;/code&gt;: &lt;code&gt;TSType&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;extendsType&lt;/code&gt; ： &lt;code&gt;TSType&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="46856ef841874f5ab69a89a39eca5783ec69118f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; - No lazy initialization of any imported module.</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; -インポートされたモジュールの遅延初期化はありません。</target>
        </trans-unit>
        <trans-unit id="19db6c03447e9faab65539bf0217a4499cb18223" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; - disable plugin</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; -無効化プラグイン</target>
        </trans-unit>
        <trans-unit id="045c3c6eff644f0a7253172473fe8643eebd994e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; indicates that an entry is entirely disabled. This can be useful in contexts where ordering is important, but a separate condition is needed to decide if something is enabled. For instance:</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; は、エントリが完全に無効になっていることを示します。これは、順序付けが重要であるが、何かが有効になっているかどうかを判断するために別の条件が必要な状況で役立ちます。例えば：</target>
        </trans-unit>
        <trans-unit id="bb5bfe2ae8487d12654d59a615b7fdb45d8404fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;3&lt;/code&gt; or &lt;code&gt;{ version: 2 | 3, proposals: boolean }&lt;/code&gt;, defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; 、 &lt;code&gt;2&lt;/code&gt; 、 &lt;code&gt;3&lt;/code&gt; または &lt;code&gt;{ version: 2 | 3, proposals: boolean }&lt;/code&gt; 、デフォルトは &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2dd76459e38a406f8059965eb8cefb83fe812ae2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;falseType&lt;/code&gt;: &lt;code&gt;TSType&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;falseType&lt;/code&gt; ： &lt;code&gt;TSType&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="3d0cf5f376e9cd5f9aa97f263e7c00137cf069e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file: Object | void&lt;/code&gt; - Information about the plugin's file, if Babel knows it.</source>
          <target state="translated">&lt;code&gt;file: Object | void&lt;/code&gt; -Babelが知っている場合は、プラグインのファイルに関する情報。</target>
        </trans-unit>
        <trans-unit id="94c3fef5c5387352884659284e790b30fd797df3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fileHandling&lt;/code&gt; - This is set to &lt;code&gt;&quot;transpile&quot;&lt;/code&gt;, &lt;code&gt;&quot;ignored&quot;&lt;/code&gt;, or &lt;code&gt;&quot;unsupported&quot;&lt;/code&gt; to indicate to the caller what to do with this file.</source>
          <target state="translated">&lt;code&gt;fileHandling&lt;/code&gt; -これは &lt;code&gt;&quot;transpile&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;ignored&quot;&lt;/code&gt; 、または &lt;code&gt;&quot;unsupported&quot;&lt;/code&gt; に設定され、このファイルをどう処理するかを呼び出し元に示します。</target>
        </trans-unit>
        <trans-unit id="426d29e39e652e52f2675f314805ea027504541d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;files&lt;/code&gt; - A &lt;code&gt;Set&lt;/code&gt; of file paths that were read to build the resulting config, including project wide config files, local config files, extended config files, ignore files, etc. Useful for implementing watch mode or cache invalidation.</source>
          <target state="translated">&lt;code&gt;files&lt;/code&gt; - A &lt;code&gt;Set&lt;/code&gt; ウォッチモードまたはキャッシュの無効化を実装するための有用なプロジェクトの広い設定ファイル、ローカル設定ファイル、拡張設定ファイル、ファイルを無視する、などを含めた設定を、構築するために読み込まれたファイルパスの。</target>
        </trans-unit>
        <trans-unit id="652621a9390381f023c30e2a89ded6c4ebc7162e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;finalizer&lt;/code&gt;: &lt;code&gt;BlockStatement&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;finalizer&lt;/code&gt; ： &lt;code&gt;BlockStatement&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="88d767d5b18a5e0a7c76726ba3de9eed230f4bab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flags&lt;/code&gt;: &lt;code&gt;string&lt;/code&gt; (default: &lt;code&gt;''&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; ： &lt;code&gt;string&lt;/code&gt; （デフォルト： &lt;code&gt;''&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="8ca1b3f6c11809c45171b9b6e338cd72b03ef778" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flow&lt;/code&gt; (&lt;a href=&quot;https://github.com/facebook/flow&quot;&gt;repo&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;flow&lt;/code&gt; （&lt;a href=&quot;https://github.com/facebook/flow&quot;&gt;レポ&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="a1e88d5c45146c8094102849c708d8da8ce0d24b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flow&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;flow&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="3f48a00f5693e248557dab1e75dfcc54de6fad28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flowComments&lt;/code&gt; (&lt;a href=&quot;https://flow.org/en/docs/types/comments/&quot;&gt;docs&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;flowComments&lt;/code&gt; （&lt;a href=&quot;https://flow.org/en/docs/types/comments/&quot;&gt;ドキュメント&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="fcd49b33de735429314475e226a388aa183cf67a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn&lt;/code&gt; is the visitor function itself.</source>
          <target state="translated">&lt;code&gt;fn&lt;/code&gt; はビジター関数そのものです。</target>
        </trans-unit>
        <trans-unit id="c98fb5e8b438e877c7f2384145784e8c912af960" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;functionBind&lt;/code&gt; (&lt;a href=&quot;https://github.com/zenparsing/es-function-bind&quot;&gt;proposal&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;functionBind&lt;/code&gt; （&lt;a href=&quot;https://github.com/zenparsing/es-function-bind&quot;&gt;提案&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="9e3df392192d3a48427e8466f3f1f88dc9aea479" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;functionSent&lt;/code&gt; (&lt;a href=&quot;https://github.com/tc39/proposal-function.sent&quot;&gt;proposal&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;functionSent&lt;/code&gt; （&lt;a href=&quot;https://github.com/tc39/proposal-function.sent&quot;&gt;提案&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="ef2df656cc23c5750885d75397416b479e13874a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;generator&lt;/code&gt;: &lt;code&gt;boolean&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;generator&lt;/code&gt; ： &lt;code&gt;boolean&lt;/code&gt; （デフォルト： &lt;code&gt;false&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="eb8ec7b57068ecef974ef7b5dc18530d468f8744" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;generatorOpts&lt;/code&gt; objects are merged, rather than replaced, using the same logic as top-level options.</source>
          <target state="translated">&lt;code&gt;generatorOpts&lt;/code&gt; オブジェクトは、トップレベルオプションと同じロジックを使用して、置き換えられるのではなくマージされます。</target>
        </trans-unit>
        <trans-unit id="9e1bc2198f346c943a87dd04a263a8bbb4f85e97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;global&lt;/code&gt; output format sets helpers as global variable by adding &lt;code&gt;babelHelpers&lt;/code&gt; to &lt;code&gt;global&lt;/code&gt; or &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;global&lt;/code&gt; 出力フォーマットは、 &lt;code&gt;babelHelpers&lt;/code&gt; を &lt;code&gt;global&lt;/code&gt; または &lt;code&gt;self&lt;/code&gt; に追加することにより、ヘルパーをグローバル変数として設定します。</target>
        </trans-unit>
        <trans-unit id="972c54a0cf3fa191c88ee0220366fe80a0b3c8c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;global&lt;/code&gt;: &lt;code&gt;boolean&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;global&lt;/code&gt; ： &lt;code&gt;boolean&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="cc8144a5a05751fe0d4b3f0417e5d3f3c90e9325" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;handler&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;handler&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="958d79a3bded1b98a176af805b16a95ded6fd741" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;handler&lt;/code&gt;: &lt;code&gt;CatchClause&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;handler&lt;/code&gt; ： &lt;code&gt;CatchClause&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="e122f7d965178a333369cb64b5eb9fc10d76a846" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hasFilesystemConfig(): boolean&lt;/code&gt; - Check if the resolved config loaded any settings from the filesystem.</source>
          <target state="translated">&lt;code&gt;hasFilesystemConfig(): boolean&lt;/code&gt; 解決された構成がファイルシステムから設定をロードしたかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="7958d455f782a9daea5704012bf110d3ab100b98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="065b854d48cfda957d05d3a7df8b1802d261bd05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt;: &lt;code&gt;Identifier | StringLiteral&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; ： &lt;code&gt;Identifier | StringLiteral&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="20f1726b5b684e330bd1c8fd824dbd6a31f328fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt;: &lt;code&gt;Identifier&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; ： &lt;code&gt;Identifier&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="e29e6104ce72fdbdfb49569f377ac1293ef9c3ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt;: &lt;code&gt;Identifier&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; ： &lt;code&gt;Identifier&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="f63d767316180aa58a7d414296ee1a9604ad6108" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt;: &lt;code&gt;LVal&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; ： &lt;code&gt;LVal&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="e106f3518dc4683b7cee876ddd17de4f603d129d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;implements&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;implements&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="b6df1c11661e7968c9baacb15f6bc822df100635" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;implements&lt;/code&gt;: &lt;code&gt;Array&amp;lt;ClassImplements&amp;gt;&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;implements&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;ClassImplements&amp;gt;&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="07dd08b18462b572ad229c97dfa6479773bd90e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;implements&lt;/code&gt;: &lt;code&gt;Array&amp;lt;TSExpressionWithTypeArguments | ClassImplements&amp;gt;&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;implements&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;TSExpressionWithTypeArguments | ClassImplements&amp;gt;&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="0293ad90d205377b19cf08cd1a18c22ba2a6d04b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impltype&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;impltype&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="5dcb5de21b7b462d505b91c07f5a1d2016dcdb2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impltype&lt;/code&gt;: &lt;code&gt;FlowType&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;impltype&lt;/code&gt; : &lt;code&gt;FlowType&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="3ccc7d037e9b691eb48aa7c8e94f5b439b379e41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;importAssertions&lt;/code&gt; (&lt;a href=&quot;https://github.com/tc39/proposal-import-assertions&quot;&gt;proposal&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;importAssertions&lt;/code&gt; (&lt;a href=&quot;https://github.com/tc39/proposal-import-assertions&quot;&gt;proposal&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="9a57d6a3423a3b4a0b7af6743beaa5845a3a0c74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;importKind&lt;/code&gt;: &lt;code&gt;null | &quot;type&quot; | &quot;typeof&quot;&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;importKind&lt;/code&gt; : &lt;code&gt;null | &quot;type&quot; | &quot;typeof&quot;&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="06b520e9841e724f8dd46a25f351b6cce6528d61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;importKind&lt;/code&gt;: &lt;code&gt;null | 'type' | 'typeof'&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;importKind&lt;/code&gt; ： &lt;code&gt;null | 'type' | 'typeof'&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="1feb2219bd6dd00d6b197756e939a0f4c25e700e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imported&lt;/code&gt;: &lt;code&gt;Identifier&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;imported&lt;/code&gt; ： &lt;code&gt;Identifier&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="07a478a4e8be7cdc6e87a5577bff60ee92fe6295" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;include&lt;/code&gt; - array of environment variables to include</source>
          <target state="translated">&lt;code&gt;include&lt;/code&gt; -含める環境変数の配列</target>
        </trans-unit>
        <trans-unit id="6fbd9275caf1e4d7a6f068d29f8a23cb43c5b25b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indexType&lt;/code&gt;: &lt;code&gt;TSType&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;indexType&lt;/code&gt; : &lt;code&gt;TSType&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="2863f863ab14ae92eb1ba45414a5e7be477eab81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indexers&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;indexers&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="208e36fbdd01036a75bb757ceffd098c68cd13f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indexers&lt;/code&gt;: &lt;code&gt;Array&amp;lt;ObjectTypeIndexer&amp;gt;&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;indexers&lt;/code&gt; : &lt;code&gt;Array&amp;lt;ObjectTypeIndexer&amp;gt;&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="15686ca50248bba305bc6c7b58f5af146bb74af9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&lt;/code&gt;: &lt;code&gt;Expression&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;init&lt;/code&gt; ： &lt;code&gt;Expression&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="a72583956c8d44df30fdab1f5008780496430cf5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&lt;/code&gt;: &lt;code&gt;VariableDeclaration | Expression&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;init&lt;/code&gt; ： &lt;code&gt;VariableDeclaration | Expression&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="39d37f6ca9639ddb84c23e6b6f2b58b1f6b71c7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;initializer&lt;/code&gt;: &lt;code&gt;Expression&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;initializer&lt;/code&gt; : &lt;code&gt;Expression&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="3fa01222ddbd6ff77367126a502499d1b8ec8fe2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;internalSlots&lt;/code&gt;: &lt;code&gt;Array&amp;lt;ObjectTypeInternalSlot&amp;gt;&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;internalSlots&lt;/code&gt; : &lt;code&gt;Array&amp;lt;ObjectTypeInternalSlot&amp;gt;&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="358dae4697e2bdd8028ee2964cdbe7794409d560" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;interpreter&lt;/code&gt;: &lt;code&gt;InterpreterDirective&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;interpreter&lt;/code&gt; : &lt;code&gt;InterpreterDirective&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="c098b3dadcbc77b9f3704d623eff2cdf8ec8c99c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;isExport&lt;/code&gt;: &lt;code&gt;boolean&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;isExport&lt;/code&gt; : &lt;code&gt;boolean&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="90c3f6ec7c58cbff311dae63509efcc3536a3704" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;jsx&lt;/code&gt; (&lt;a href=&quot;https://facebook.github.io/jsx/&quot;&gt;repo&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;jsx&lt;/code&gt; (&lt;a href=&quot;https://facebook.github.io/jsx/&quot;&gt;repo&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="338e6d4e5e14e4c9c07f1d9840085446eafecc80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keepClassName&lt;/code&gt; - prevent mangler from altering class names (default: &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;keepClassName&lt;/code&gt; - prevent mangler from altering class names (default: &lt;code&gt;false&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="0ee574d53308ff902e3a5533fab329d1873f5b1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keepClassName&lt;/code&gt; - prevent mangler from altering class names.</source>
          <target state="translated">&lt;code&gt;keepClassName&lt;/code&gt; -マングラーがクラス名を変更しないようにします。</target>
        </trans-unit>
        <trans-unit id="921088ed488830af37bdf1d107d176a9b0917c7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keepClassName&lt;/code&gt; - prevent plugin from removing class name. Useful for code depending on &lt;code&gt;cls.name&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;keepClassName&lt;/code&gt; -プラグインがクラス名を削除しないようにします。 &lt;code&gt;cls.name&lt;/code&gt; に依存するコードに役立ちます</target>
        </trans-unit>
        <trans-unit id="3443a50fa68ccae6b0b79902a26018d4e56c8831" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keepFnArgs&lt;/code&gt; - prevent plugin from removing function args. Useful for code depending on &lt;code&gt;fn.length&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;keepFnArgs&lt;/code&gt; -プラグインが関数の引数を削除しないようにします。 &lt;code&gt;fn.length&lt;/code&gt; に依存するコードに役立ちます</target>
        </trans-unit>
        <trans-unit id="bc2f09c6541cb584d7097b60b2c20b598eca821b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keepFnName&lt;/code&gt; - prevent mangler from altering function names. Useful for code depending on &lt;code&gt;fn.name&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;keepFnName&lt;/code&gt; -マングラーが関数名を変更できないようにします。 &lt;code&gt;fn.name&lt;/code&gt; に依存するコードに役立ちます</target>
        </trans-unit>
        <trans-unit id="055ecf3c24c6c1f465204457684557d90312e6ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keepFnName&lt;/code&gt; - prevent mangler from altering function names. Useful for code depending on &lt;code&gt;fn.name&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;keepFnName&lt;/code&gt; - prevent mangler from altering function names. Useful for code depending on &lt;code&gt;fn.name&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="64b356dd9bc6c68246f7370eff55e96dc92a0f7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keepFnName&lt;/code&gt; - prevent plugin from removing function name. Useful for code depending on &lt;code&gt;fn.name&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;keepFnName&lt;/code&gt; -プラグインが関数名を削除しないようにします。 &lt;code&gt;fn.name&lt;/code&gt; に依存するコードに役立ちます</target>
        </trans-unit>
        <trans-unit id="97c1ef0974d8016eae7e6916e8d7c65568b027c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="512c35d9985d3e9abcfded35ffbe2ea5591d2f3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt; is a simple opaque string that represents the plugin being executed.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; is a simple opaque string that represents the plugin being executed.</target>
        </trans-unit>
        <trans-unit id="adeea6b8bf5bd0d27507aab1ed50055568de51c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt;: &lt;code&gt;Expression&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; : &lt;code&gt;Expression&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="e020fc398f155adb24f4558e94911cf0e01002cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt;: &lt;code&gt;FlowType&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; : &lt;code&gt;FlowType&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="a9548c0efac3e257fc81282ed19e9d79d7c72675" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt;: &lt;code&gt;Identifier | StringLiteral | NumericLiteral | Expression&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; : &lt;code&gt;Identifier | StringLiteral | NumericLiteral | Expression&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="7a9276f57ab755eae658ed53af822b1b484eaf04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt;: &lt;code&gt;Identifier | StringLiteral&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; : &lt;code&gt;Identifier | StringLiteral&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="dabc237dd4394f4087893f04e9be55b4b48e03a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt;: &lt;code&gt;PrivateName&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; : &lt;code&gt;PrivateName&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="9b1b576741ef332b3d01ccf163e702336994558c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt;: if computed then &lt;code&gt;Expression&lt;/code&gt; else &lt;code&gt;Identifier | Literal&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; : if computed then &lt;code&gt;Expression&lt;/code&gt; else &lt;code&gt;Identifier | Literal&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="046f139b626b25ffb0c11bf782083d386558b377" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt;if computed then &lt;code&gt;Expression&lt;/code&gt; else &lt;code&gt;Identifier | Literal&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 計算された場合はキー、それ以外の場合は &lt;code&gt;Expression&lt;/code&gt; 、 &lt;code&gt;Identifier | Literal&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="315673df0c12429e2de8b86aac4dca0198766e43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kind&lt;/code&gt;: &lt;code&gt;&quot;CommonJS&quot; | &quot;ES&quot;&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;kind&lt;/code&gt; : &lt;code&gt;&quot;CommonJS&quot; | &quot;ES&quot;&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="0adaa42b5ed1f9175d71a2de76f09d090c00a9f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kind&lt;/code&gt;: &lt;code&gt;&quot;get&quot; | &quot;set&quot; | &quot;method&quot; | &quot;constructor&quot;&lt;/code&gt; (default: &lt;code&gt;'method'&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;kind&lt;/code&gt; ： &lt;code&gt;&quot;get&quot; | &quot;set&quot; | &quot;method&quot; | &quot;constructor&quot;&lt;/code&gt; （デフォルト： &lt;code&gt;'method'&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="71cf45ec41699b8660e7bc6e895555a64182de28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kind&lt;/code&gt;: &lt;code&gt;&quot;init&quot; | &quot;get&quot; | &quot;set&quot;&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;kind&lt;/code&gt; : &lt;code&gt;&quot;init&quot; | &quot;get&quot; | &quot;set&quot;&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="dacafa119e5dc9083dc9ecacf108e87e69df8e4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kind&lt;/code&gt;: &lt;code&gt;&quot;method&quot; | &quot;get&quot; | &quot;set&quot;&lt;/code&gt; (default: &lt;code&gt;'method'&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;kind&lt;/code&gt; ： &lt;code&gt;&quot;method&quot; | &quot;get&quot; | &quot;set&quot;&lt;/code&gt; （デフォルト： &lt;code&gt;'method'&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="da33be23aac5db2812ccc1350520b99addee764e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kind&lt;/code&gt;: &lt;code&gt;&quot;minus&quot; | &quot;plus&quot;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;kind&lt;/code&gt; : &lt;code&gt;&quot;minus&quot; | &quot;plus&quot;&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="b03984d3f1d4d8b102d55124bcf931c1e0850a39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kind&lt;/code&gt;: &lt;code&gt;&quot;var&quot; | &quot;let&quot; | &quot;const&quot;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;kind&lt;/code&gt; ： &lt;code&gt;&quot;var&quot; | &quot;let&quot; | &quot;const&quot;&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="cf12f1a5c75dc2ef8cce31e83694cfeffba59f16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;label&lt;/code&gt;: &lt;code&gt;Identifier&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;label&lt;/code&gt; ： &lt;code&gt;Identifier&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="1e65c2ea4c42c05ac381b11cd565e3082b9ea8f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;label&lt;/code&gt;: &lt;code&gt;Identifier&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;label&lt;/code&gt; ： &lt;code&gt;Identifier&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="49955e27605dc77bf21441ca7527f33b23c92c45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;left&lt;/code&gt;: &lt;code&gt;Expression&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;left&lt;/code&gt; ： &lt;code&gt;Expression&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="840a3355271c709d2e448164402a1e49dd71edb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;left&lt;/code&gt;: &lt;code&gt;Identifier | ObjectPattern | ArrayPattern&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;left&lt;/code&gt; : &lt;code&gt;Identifier | ObjectPattern | ArrayPattern&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="a4d4a22a85f641fb76b5be1524cbaf22e662c1d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;left&lt;/code&gt;: &lt;code&gt;Identifier&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;left&lt;/code&gt; ： &lt;code&gt;Identifier&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="87de91f0dff91e77f01a35fbc15809c363bcefa4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;left&lt;/code&gt;: &lt;code&gt;LVal&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;left&lt;/code&gt; ： &lt;code&gt;LVal&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="74c247cbe3fe60cffe1ebd5ceeecec195892616b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;left&lt;/code&gt;: &lt;code&gt;TSEntityName&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;left&lt;/code&gt; : &lt;code&gt;TSEntityName&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="0f2e1f1d85c11be86ff2f33c4d690953c51b174f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;left&lt;/code&gt;: &lt;code&gt;VariableDeclaration | LVal&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;left&lt;/code&gt; ： &lt;code&gt;VariableDeclaration | LVal&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="65ef1401b5ba7df70d3d0a27f0cfd9c30ba794bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;literal&lt;/code&gt;: &lt;code&gt;NumericLiteral | StringLiteral | BooleanLiteral&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;literal&lt;/code&gt; : &lt;code&gt;NumericLiteral | StringLiteral | BooleanLiteral&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="e393b6b8c43dbf1cecf13e777445546ef52a8d5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;local&lt;/code&gt;: &lt;code&gt;Identifier&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;local&lt;/code&gt; ： &lt;code&gt;Identifier&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="542da8f1dee620aca5a9d1b20fb42de561520c44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logicalAssignment&lt;/code&gt; (&lt;a href=&quot;https://github.com/tc39/proposal-logical-assignment&quot;&gt;proposal&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;logicalAssignment&lt;/code&gt; (&lt;a href=&quot;https://github.com/tc39/proposal-logical-assignment&quot;&gt;proposal&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="41741ae0299a5e3a88a9edaf03923b2ab23939bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;members&lt;/code&gt;: &lt;code&gt;Array&amp;lt;TSEnumMember&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;members&lt;/code&gt; : &lt;code&gt;Array&amp;lt;TSEnumMember&amp;gt;&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="78cec0715e6829299dc449468c7610c64dd97cda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;members&lt;/code&gt;: &lt;code&gt;Array&amp;lt;TSTypeElement&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;members&lt;/code&gt; : &lt;code&gt;Array&amp;lt;TSTypeElement&amp;gt;&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="fb4a8289650e011d357d067a9e881b8be8a6898c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;meta&lt;/code&gt;: &lt;code&gt;Identifier&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;meta&lt;/code&gt; : &lt;code&gt;Identifier&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="cb85968d066a3cac83e819997aaf9604ad87b953" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;meta&lt;/code&gt;: &lt;code&gt;string&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;meta&lt;/code&gt; ： &lt;code&gt;string&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="0587ee8803bd717711a49d1af2fbe65ef415eb43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;method&lt;/code&gt;: &lt;code&gt;boolean&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;method&lt;/code&gt; : &lt;code&gt;boolean&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="ab5ff54c320bc7681bca2ff920f78f0435dc068b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mixins&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;mixins&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="dbbe2cb2aac702d8453b68ee6aec608080751605" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mixins&lt;/code&gt;: &lt;code&gt;Array&amp;lt;InterfaceExtends&amp;gt;&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;mixins&lt;/code&gt; : &lt;code&gt;Array&amp;lt;InterfaceExtends&amp;gt;&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="1cb8ff95ef6f5e879dd913c0b6a5db4db3f3604d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;moduleReference&lt;/code&gt;: &lt;code&gt;TSEntityName | TSExternalModuleReference&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;moduleReference&lt;/code&gt; : &lt;code&gt;TSEntityName | TSExternalModuleReference&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="f4fc01dbf792770811a2b6f5d4c134557f6a1428" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;moduleStringNames&lt;/code&gt; (&lt;a href=&quot;https://github.com/tc39/ecma262/pull/2154&quot;&gt;proposal&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;moduleStringNames&lt;/code&gt; (&lt;a href=&quot;https://github.com/tc39/ecma262/pull/2154&quot;&gt;proposal&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="0916772d149b6ee9c5e11f669dfe668d4f7a5374" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name: string | void&lt;/code&gt; - The name that the user gave the plugin instance, e.g. &lt;code&gt;plugins: [ ['env', {}, 'my-env'] ]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;name: string | void&lt;/code&gt; - The name that the user gave the plugin instance, e.g. &lt;code&gt;plugins: [ ['env', {}, 'my-env'] ]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f000eb64ee1407f70bcda1df907a163a920c0830" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="ca3b7eadfc12b38d94495faee826eeb44fed334c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt;: &lt;code&gt;Identifier&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; : &lt;code&gt;Identifier&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="7522bcece06fc96c412d444541499f9600169c36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt;: &lt;code&gt;JSXIdentifier | JSXMemberExpression&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; ： &lt;code&gt;JSXIdentifier | JSXMemberExpression&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="006bb30d2adbed79f58e6281ef82f71ca7101ffb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt;: &lt;code&gt;JSXIdentifier | JSXNamespacedName&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; ： &lt;code&gt;JSXIdentifier | JSXNamespacedName&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="b2e0e36e390afa148b1b44f1e9f63b22bae467ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt;: &lt;code&gt;JSXIdentifier&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; ： &lt;code&gt;JSXIdentifier&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="347780fbbf195cbca823abb916e984601febced8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt;: &lt;code&gt;string&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; : &lt;code&gt;string&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="4f9ca69aacf90f35914db4447313d1e0202d4562" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt;: &lt;code&gt;string&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; ： &lt;code&gt;string&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="e37164bdeadcf8ebabb49e381ca894a239456438" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt;&lt;code&gt;string&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; &lt;code&gt;string&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="dd3d6ac3b06ec55e66aed29e5e820080ddf42a3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;namespace&lt;/code&gt;: &lt;code&gt;JSXIdentifier&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;namespace&lt;/code&gt; ： &lt;code&gt;JSXIdentifier&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="c3ac76eb7530e37a80962030be13d9a621187ed5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;namespace&lt;/code&gt;s will not share their scope. In TypeScript, it is valid to refer to contextual items that a &lt;code&gt;namespace&lt;/code&gt; extends without qualifying them, and the compiler will add the qualifier. In Babel, there is no type-model, and it is impossible to dynamically change references to match the established type of the parent object.</source>
          <target state="translated">&lt;code&gt;namespace&lt;/code&gt; s will not share their scope. In TypeScript, it is valid to refer to contextual items that a &lt;code&gt;namespace&lt;/code&gt; extends without qualifying them, and the compiler will add the qualifier. In Babel, there is no type-model, and it is impossible to dynamically change references to match the established type of the parent object.</target>
        </trans-unit>
        <trans-unit id="2177313748adbb5e8b9f24530bcd0f476045b0c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;namespaces&lt;/code&gt;s not marked with &lt;code&gt;declare&lt;/code&gt; are experimental and disabled by default. Not enabling will result in an error: &lt;em&gt;&quot;Namespace not marked type-only declare. Non-declarative namespaces are only supported experimentally in Babel.&quot;&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;namespaces&lt;/code&gt; s not marked with &lt;code&gt;declare&lt;/code&gt; are experimental and disabled by default. Not enabling will result in an error: &lt;em&gt;&quot;Namespace not marked type-only declare. Non-declarative namespaces are only supported experimentally in Babel.&quot;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c2b952e0d4bbcc9bffb656de309ab9ee5733ccee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nodeType&lt;/code&gt; is the type of AST node currently being visited.</source>
          <target state="translated">&lt;code&gt;nodeType&lt;/code&gt; is the type of AST node currently being visited.</target>
        </trans-unit>
        <trans-unit id="4920bbd4b46be72a28a2fd795d97018de93cc3c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nullishCoalescingOperator&lt;/code&gt; (&lt;a href=&quot;https://github.com/babel/proposals/issues/14&quot;&gt;proposal&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;nullishCoalescingOperator&lt;/code&gt; (&lt;a href=&quot;https://github.com/babel/proposals/issues/14&quot;&gt;proposal&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="7a077752d4afbd13d83629901d5ed40bf7cd8318" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;number&lt;/code&gt; &amp;mdash; prevent plugin from minifying numbers</source>
          <target state="translated">&lt;code&gt;number&lt;/code&gt; &amp;mdash;プラグインが数値を縮小できないようにします</target>
        </trans-unit>
        <trans-unit id="c109f7544e4906ad513cd7eb73e6fb7a8a49548f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;number&lt;/code&gt;, defaults to &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;number&lt;/code&gt; 。デフォルトは &lt;code&gt;2&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="22bdb4071c9512c77a5b00cea6b9c264f9de2884" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;number&lt;/code&gt;, defaults to &lt;code&gt;3&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;number&lt;/code&gt; 。デフォルトは &lt;code&gt;3&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="7c989262165d4e3f145afccdfd3e8cd6bfdbc8f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;numericSeparator&lt;/code&gt; (&lt;a href=&quot;https://github.com/samuelgoto/proposal-numeric-separator&quot;&gt;proposal&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;numericSeparator&lt;/code&gt; (&lt;a href=&quot;https://github.com/samuelgoto/proposal-numeric-separator&quot;&gt;proposal&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="3651c9e090fe6f1ea9a66b3d5f1e542fb38bd8ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;object&lt;/code&gt; &amp;mdash; prevent plugin from minifying objects</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; &amp;mdash;プラグインがオブジェクトを縮小できないようにします</target>
        </trans-unit>
        <trans-unit id="181fb74d1094b4b665cdca27aa55e8603914b26c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;object&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="d145e3a9e6371b156149cc25dbc82ad2a410acb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;object&lt;/code&gt;: &lt;code&gt;Expression&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; ： &lt;code&gt;Expression&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="bad015ab521089b0386f4e0b94f88d985306186f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;object&lt;/code&gt;: &lt;code&gt;JSXMemberExpression | JSXIdentifier&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; ： &lt;code&gt;JSXMemberExpression | JSXIdentifier&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="62c1dc9b569d038701e6adaf8638818671b729bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;objectRestSpread&lt;/code&gt; (&lt;a href=&quot;https://github.com/tc39/proposal-object-rest-spread&quot;&gt;proposal&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;objectRestSpread&lt;/code&gt; (&lt;a href=&quot;https://github.com/tc39/proposal-object-rest-spread&quot;&gt;proposal&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="330b12ccef76ece0f99d2554f7486b6adf720ed6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;objectType&lt;/code&gt;: &lt;code&gt;TSType&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;objectType&lt;/code&gt; : &lt;code&gt;TSType&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="f1537b02d09000506bd4bd72102c821f0863e7b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;openingElement&lt;/code&gt;: &lt;code&gt;JSXOpeningElement&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;openingElement&lt;/code&gt; ： &lt;code&gt;JSXOpeningElement&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="b582c552c7147a76c3652ab9f7d3c7dfd6eab8cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;openingFragment&lt;/code&gt;: &lt;code&gt;JSXOpeningFragment&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;openingFragment&lt;/code&gt; : &lt;code&gt;JSXOpeningFragment&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="2e26dd41238a6d2fa93700e3e43e39bcd045ff00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operator&lt;/code&gt;: &lt;code&gt;&quot;+&quot; | &quot;-&quot; | &quot;/&quot; | &quot;%&quot; | &quot;*&quot; | &quot;**&quot; | &quot;&amp;amp;&quot; | &quot;|&quot; | &quot;&amp;gt;&amp;gt;&quot; | &quot;&amp;gt;&amp;gt;&amp;gt;&quot; | &quot;&amp;lt;&amp;lt;&quot; | &quot;^&quot; | &quot;==&quot; | &quot;===&quot; | &quot;!=&quot; | &quot;!==&quot; | &quot;in&quot; | &quot;instanceof&quot; | &quot;&amp;gt;&quot; | &quot;&amp;lt;&quot; | &quot;&amp;gt;=&quot; | &quot;&amp;lt;=&quot;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;operator&lt;/code&gt; : &lt;code&gt;&quot;+&quot; | &quot;-&quot; | &quot;/&quot; | &quot;%&quot; | &quot;*&quot; | &quot;**&quot; | &quot;&amp;amp;&quot; | &quot;|&quot; | &quot;&amp;gt;&amp;gt;&quot; | &quot;&amp;gt;&amp;gt;&amp;gt;&quot; | &quot;&amp;lt;&amp;lt;&quot; | &quot;^&quot; | &quot;==&quot; | &quot;===&quot; | &quot;!=&quot; | &quot;!==&quot; | &quot;in&quot; | &quot;instanceof&quot; | &quot;&amp;gt;&quot; | &quot;&amp;lt;&quot; | &quot;&amp;gt;=&quot; | &quot;&amp;lt;=&quot;&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="a57190c51cba2558f13e7b0ca18f14a71ef3651e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operator&lt;/code&gt;: &lt;code&gt;&quot;++&quot; | &quot;--&quot;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;operator&lt;/code&gt; : &lt;code&gt;&quot;++&quot; | &quot;--&quot;&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="e99f2e1ee4e1fb6735f882af8df59b6b7eb38a77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operator&lt;/code&gt;: &lt;code&gt;&quot;void&quot; | &quot;throw&quot; | &quot;delete&quot; | &quot;!&quot; | &quot;+&quot; | &quot;-&quot; | &quot;~&quot; | &quot;typeof&quot;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;operator&lt;/code&gt; : &lt;code&gt;&quot;void&quot; | &quot;throw&quot; | &quot;delete&quot; | &quot;!&quot; | &quot;+&quot; | &quot;-&quot; | &quot;~&quot; | &quot;typeof&quot;&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="c47eb46c3c92db1e24e108aeb3394146d2e719f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operator&lt;/code&gt;: &lt;code&gt;&quot;||&quot; | &quot;&amp;amp;&amp;amp;&quot; | &quot;??&quot;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;operator&lt;/code&gt; : &lt;code&gt;&quot;||&quot; | &quot;&amp;amp;&amp;amp;&quot; | &quot;??&quot;&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="93142854dae108ed8046e3d27ebb49b01aeece7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operator&lt;/code&gt;: &lt;code&gt;'+' | '-' | '/' | '%' | '*' | '**' | '&amp;amp;' | '|' | '&amp;gt;&amp;gt;' | '&amp;gt;&amp;gt;&amp;gt;' | '&amp;lt;&amp;lt;' | '^' | '==' | '===' | '!=' | '!==' | 'in' | 'instanceof' | '&amp;gt;' | '&amp;lt;' | '&amp;gt;=' | '&amp;lt;='&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;operator&lt;/code&gt; ： &lt;code&gt;'+' | '-' | '/' | '%' | '*' | '**' | '&amp;amp;' | '|' | '&amp;gt;&amp;gt;' | '&amp;gt;&amp;gt;&amp;gt;' | '&amp;lt;&amp;lt;' | '^' | '==' | '===' | '!=' | '!==' | 'in' | 'instanceof' | '&amp;gt;' | '&amp;lt;' | '&amp;gt;=' | '&amp;lt;='&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="82855f88572caca76431a6372c975d38c42b0757" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operator&lt;/code&gt;: &lt;code&gt;'++' | '--'&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;operator&lt;/code&gt; ： &lt;code&gt;'++' | '--'&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="4269585a10924d2d76ebc7ca12b855eaa6823855" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operator&lt;/code&gt;: &lt;code&gt;'void' | 'delete' | '!' | '+' | '-' | '++' | '--' | '~' | 'typeof'&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;operator&lt;/code&gt; ： &lt;code&gt;'void' | 'delete' | '!' | '+' | '-' | '++' | '--' | '~' | 'typeof'&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="5efeb21484f9ec5bfb0fddd0029bdd3877cf365e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operator&lt;/code&gt;: &lt;code&gt;'||' | '&amp;amp;&amp;amp;'&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;operator&lt;/code&gt; ： &lt;code&gt;'||' | '&amp;amp;&amp;amp;'&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="7558981a9347627e7ddbd44e17fb6e8027698f52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operator&lt;/code&gt;: &lt;code&gt;string&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;operator&lt;/code&gt; : &lt;code&gt;string&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="911a13675a79f228c5eb5dc23b664a100fc5f279" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operator&lt;/code&gt;: &lt;code&gt;string&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;operator&lt;/code&gt; ： &lt;code&gt;string&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="f35fe9d976645dd74b5c78408516d903d0b094a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optional&lt;/code&gt;: &lt;code&gt;boolean&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;optional&lt;/code&gt; : &lt;code&gt;boolean&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="a91e83e7314147538f20f0eece388b90bdd77d4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optional&lt;/code&gt;: &lt;code&gt;boolean&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;optional&lt;/code&gt; : &lt;code&gt;boolean&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="6a53fe55c91c08b6e65e407a97d6a54dd5842fac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optional&lt;/code&gt;: &lt;code&gt;true | false&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;optional&lt;/code&gt; : &lt;code&gt;true | false&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="f6ce78913e5b62041a1aeb9b17d6ceeeafdcc123" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optionalCatchBinding&lt;/code&gt; (&lt;a href=&quot;https://github.com/babel/proposals/issues/7&quot;&gt;proposal&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;optionalCatchBinding&lt;/code&gt; (&lt;a href=&quot;https://github.com/babel/proposals/issues/7&quot;&gt;proposal&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="514d2eb400e392b50312cfff0c35e166e721cf3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optionalChaining&lt;/code&gt; (&lt;a href=&quot;https://github.com/tc39/proposal-optional-chaining&quot;&gt;proposal&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;optionalChaining&lt;/code&gt; (&lt;a href=&quot;https://github.com/tc39/proposal-optional-chaining&quot;&gt;proposal&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="14f2afce187cc346b6a02b64740e80ca9c9a18bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options: ValidatedOptions&lt;/code&gt; - The partially resolved options, which can be manipulated and passed back to Babel again.</source>
          <target state="translated">&lt;code&gt;options: ValidatedOptions&lt;/code&gt; - The partially resolved options, which can be manipulated and passed back to Babel again.</target>
        </trans-unit>
        <trans-unit id="f98efdda318c0017c7fc08d47a1579ad0be8b1f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options: {} | void&lt;/code&gt; - The options object passed to the plugin.</source>
          <target state="translated">&lt;code&gt;options: {} | void&lt;/code&gt; - The options object passed to the plugin.</target>
        </trans-unit>
        <trans-unit id="66bed3a1793e5ee71774558e190ea76ad9d72df4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;opts.plugins&lt;/code&gt; is a full list of &lt;code&gt;Plugin&lt;/code&gt; instances.</source>
          <target state="translated">&lt;code&gt;opts.plugins&lt;/code&gt; is a full list of &lt;code&gt;Plugin&lt;/code&gt; instances.</target>
        </trans-unit>
        <trans-unit id="4eef88daba7dd098d7239192576a2b3834e25761" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;opts.presets&lt;/code&gt; is empty and all presets are flattened into &lt;code&gt;opts&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;opts.presets&lt;/code&gt; is empty and all presets are flattened into &lt;code&gt;opts&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b974f222d8e01e4bbacd3e6aedcd1826df177088" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;package.json&lt;/code&gt; files with a &lt;code&gt;&quot;babel&quot;&lt;/code&gt; key</source>
          <target state="translated">&lt;code&gt;package.json&lt;/code&gt; files with a &lt;code&gt;&quot;babel&quot;&lt;/code&gt; key</target>
        </trans-unit>
        <trans-unit id="073fb8f287ab165514fd7795b4c8fbb797810c8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;param&lt;/code&gt;: &lt;code&gt;Identifier&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;param&lt;/code&gt; : &lt;code&gt;Identifier&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="575829778300d0064d5856a189a4ddf06e16177c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;param&lt;/code&gt;: &lt;code&gt;Identifier&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;param&lt;/code&gt; ： &lt;code&gt;Identifier&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="9f39d4930b8b993db6b813b95532bdc00e68490e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parameter&lt;/code&gt;: &lt;code&gt;Identifier | AssignmentPattern&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;parameter&lt;/code&gt; : &lt;code&gt;Identifier | AssignmentPattern&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="30b9e0633ec479bf2b42121f4cf32e0d5e205da6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parameterName&lt;/code&gt;: &lt;code&gt;Identifier | TSThisType&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;parameterName&lt;/code&gt; : &lt;code&gt;Identifier | TSThisType&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="d69ee8b59f797b833104c2feff2737f77d20ab12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parameters&lt;/code&gt;: &lt;code&gt;Array&amp;lt;Identifier | RestElement&amp;gt;&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;parameters&lt;/code&gt; : &lt;code&gt;Array&amp;lt;Identifier | RestElement&amp;gt;&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="af7f09a8482de67683f328ffd829e1b32723b4ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parameters&lt;/code&gt;: &lt;code&gt;Array&amp;lt;Identifier&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;parameters&lt;/code&gt; : &lt;code&gt;Array&amp;lt;Identifier&amp;gt;&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="d29723f16de7f570009404f2ed12dfd25af90ae5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;params&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="55131cdd3a863da7572973c55b01c5e18701d555" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;params&lt;/code&gt;: &lt;code&gt;Array&amp;lt;FlowType&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; : &lt;code&gt;Array&amp;lt;FlowType&amp;gt;&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="3c0d64f12dadb3fbe7ea7d365d91018ad12796e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;params&lt;/code&gt;: &lt;code&gt;Array&amp;lt;FunctionTypeParam&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; : &lt;code&gt;Array&amp;lt;FunctionTypeParam&amp;gt;&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="92af6bc54c8c2f9513c0e4ac3017f4d58d677ccb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;params&lt;/code&gt;: &lt;code&gt;Array&amp;lt;LVal&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;LVal&amp;gt;&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="7429a02ed2eeabf926def13ca036c730e8f3d699" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;params&lt;/code&gt;: &lt;code&gt;Array&amp;lt;TSType&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; : &lt;code&gt;Array&amp;lt;TSType&amp;gt;&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="6ef97e0f887c484718bc3ede3f28c2b91a6cab46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;params&lt;/code&gt;: &lt;code&gt;Array&amp;lt;TSTypeParameter&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; : &lt;code&gt;Array&amp;lt;TSTypeParameter&amp;gt;&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="26d8e9c336b63d907205f815cc1f5e1c42eb5c39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;params&lt;/code&gt;: &lt;code&gt;Array&amp;lt;TypeParameter&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; : &lt;code&gt;Array&amp;lt;TypeParameter&amp;gt;&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="c79d22a0a3a7d64ff94f3bb2cb6b6c6848178442" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parse()&lt;/code&gt; parses the provided &lt;code&gt;code&lt;/code&gt; as an entire ECMAScript program, while &lt;code&gt;parseExpression()&lt;/code&gt; tries to parse a single Expression with performance in mind. When in doubt, use &lt;code&gt;.parse()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;parse()&lt;/code&gt; parses the provided &lt;code&gt;code&lt;/code&gt; as an entire ECMAScript program, while &lt;code&gt;parseExpression()&lt;/code&gt; tries to parse a single Expression with performance in mind. When in doubt, use &lt;code&gt;.parse()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5864773319d4a70c876e51132008546ef7791d7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parserOpts&lt;/code&gt; objects are merged, rather than replaced, using the same logic as top-level options.</source>
          <target state="translated">&lt;code&gt;parserOpts&lt;/code&gt; objects are merged, rather than replaced, using the same logic as top-level options.</target>
        </trans-unit>
        <trans-unit id="5d06cbaa719ab5d63bc34e3b9af7f0dfe5c1a96c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;partialApplication&lt;/code&gt; (&lt;a href=&quot;https://github.com/babel/proposals/issues/32&quot;&gt;proposal&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;partialApplication&lt;/code&gt; (&lt;a href=&quot;https://github.com/babel/proposals/issues/32&quot;&gt;proposal&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="09ba7418fd27fbbfc80c9c26b608d66c1b0da649" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pattern&lt;/code&gt;: &lt;code&gt;string&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;pattern&lt;/code&gt; ： &lt;code&gt;string&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="cb0b5b179fadbedb2e5c054e2efea29a935f9172" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pipelineOperator&lt;/code&gt; (&lt;a href=&quot;https://github.com/babel/proposals/issues/29&quot;&gt;proposal&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;pipelineOperator&lt;/code&gt; (&lt;a href=&quot;https://github.com/babel/proposals/issues/29&quot;&gt;proposal&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="137287621a813cb527445beb3af9f05d92dc68e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pipelineOperator&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;pipelineOperator&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="0f79932fc609e53798f27d8bfc5464a6cc7875c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;plugin-&lt;/code&gt;/&lt;code&gt;preset-&lt;/code&gt; will be injected at the start of any &lt;code&gt;@babel&lt;/code&gt;-scoped package that doesn't have it as a prefix.</source>
          <target state="translated">&lt;code&gt;plugin-&lt;/code&gt; / &lt;code&gt;preset-&lt;/code&gt; will be injected at the start of any &lt;code&gt;@babel&lt;/code&gt; -scoped package that doesn't have it as a prefix.</target>
        </trans-unit>
        <trans-unit id="3a94e8efcae8a9c44e19d373e67f63deee821678" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;plugins: Array&amp;lt;ConfigItem&amp;gt;&lt;/code&gt; - See below.</source>
          <target state="translated">&lt;code&gt;plugins: Array&amp;lt;ConfigItem&amp;gt;&lt;/code&gt; - See below.</target>
        </trans-unit>
        <trans-unit id="e678aa460305b8c0ff9d3e004098a10960705058" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;plugins&lt;/code&gt; and &lt;code&gt;presets&lt;/code&gt; are replaced based on the identity of the plugin/preset object/function itself combined with the name of the entry.</source>
          <target state="translated">&lt;code&gt;plugins&lt;/code&gt; and &lt;code&gt;presets&lt;/code&gt; are replaced based on the identity of the plugin/preset object/function itself combined with the name of the entry.</target>
        </trans-unit>
        <trans-unit id="0509c4c5e3d7b705c02c23a19c1a67ef73187873" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;predicate&lt;/code&gt;: &lt;code&gt;DeclaredPredicate&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;predicate&lt;/code&gt; : &lt;code&gt;DeclaredPredicate&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="7ff3d10f4c4063c5f76ceac9610fd1e587c2f96e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prefix&lt;/code&gt;: &lt;code&gt;boolean&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;prefix&lt;/code&gt; ： &lt;code&gt;boolean&lt;/code&gt; （デフォルト： &lt;code&gt;false&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="07cc2485cdae78a76ca569fbfde7dc4948575bef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prefix&lt;/code&gt;: &lt;code&gt;boolean&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;prefix&lt;/code&gt; ： &lt;code&gt;boolean&lt;/code&gt; （デフォルト： &lt;code&gt;true&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="e0750054734bcaf76ef30db5d4ef60ffa351dcce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;presets: Array&amp;lt;ConfigItem&amp;gt;&lt;/code&gt; - See below.</source>
          <target state="translated">&lt;code&gt;presets: Array&amp;lt;ConfigItem&amp;gt;&lt;/code&gt; - See below.</target>
        </trans-unit>
        <trans-unit id="65350de9b12a47e7ae309eb50297dbac0bd48f18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;privateIn&lt;/code&gt; (&lt;a href=&quot;https://github.com/tc39/proposal-private-fields-in-in&quot;&gt;proposal&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;privateIn&lt;/code&gt; (&lt;a href=&quot;https://github.com/tc39/proposal-private-fields-in-in&quot;&gt;proposal&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="0e7f0adeb917aba33e433e98d6af6820ea4575c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;program&lt;/code&gt;: &lt;code&gt;Program&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;program&lt;/code&gt; ： &lt;code&gt;Program&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="7b3afd422ad26f13a99f07257b50bf149820e636" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;properties&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;properties&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="4854ee67f8f098ff5f486d1667fca9161503e213" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;properties&lt;/code&gt;: &lt;code&gt;Array&amp;lt;ObjectMethod | ObjectProperty | SpreadElement&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;properties&lt;/code&gt; : &lt;code&gt;Array&amp;lt;ObjectMethod | ObjectProperty | SpreadElement&amp;gt;&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="267b79e353eb942fdfc9f0b86f8b8aaf84600ce2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;properties&lt;/code&gt;: &lt;code&gt;Array&amp;lt;ObjectMethod | ObjectProperty | SpreadProperty&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;properties&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;ObjectMethod | ObjectProperty | SpreadProperty&amp;gt;&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="7e34d89e34defc75b9b55a5400704db0cbd7812f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;properties&lt;/code&gt;: &lt;code&gt;Array&amp;lt;ObjectTypeProperty | ObjectTypeSpreadProperty&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;properties&lt;/code&gt; : &lt;code&gt;Array&amp;lt;ObjectTypeProperty | ObjectTypeSpreadProperty&amp;gt;&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="75f24829f8aaa534465bf5184c0e5fbcbbb42ae8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;properties&lt;/code&gt;: &lt;code&gt;Array&amp;lt;RestElement | ObjectProperty&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;properties&lt;/code&gt; : &lt;code&gt;Array&amp;lt;RestElement | ObjectProperty&amp;gt;&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="12e5c4d890e2deeac6b834f107e7ee8c72ac65c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;properties&lt;/code&gt;: &lt;code&gt;Array&amp;lt;RestProperty | Property&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;properties&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;RestProperty | Property&amp;gt;&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="b947ef2c7e1cf525b5aa8269c2c8a5b960362aac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;property&lt;/code&gt;: &lt;code&gt;Identifier&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;property&lt;/code&gt; : &lt;code&gt;Identifier&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="7cbbe3cdd289d256b08d91a7f7145fc1384a4cfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;property&lt;/code&gt;: &lt;code&gt;JSXIdentifier&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;property&lt;/code&gt; ： &lt;code&gt;JSXIdentifier&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="a3a66ffd5f3ccdcf17e88a58f659b721305f6a04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;property&lt;/code&gt;: &lt;code&gt;any&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;property&lt;/code&gt; : &lt;code&gt;any&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="782bafc2dfb9cbacc69107d3b04d58974d16b7f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;property&lt;/code&gt;: &lt;code&gt;string&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;property&lt;/code&gt; ： &lt;code&gt;string&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="2ec025f0e3109a2164c8708d71d94ccca311340c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;property&lt;/code&gt;: if computed then &lt;code&gt;Expression&lt;/code&gt; else &lt;code&gt;Identifier&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;property&lt;/code&gt; : if computed then &lt;code&gt;Expression&lt;/code&gt; else &lt;code&gt;Identifier&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="c829fc85f3b72c29be7f50f0a79446577d37f9f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;property&lt;/code&gt;if computed then &lt;code&gt;Expression&lt;/code&gt; else &lt;code&gt;Identifier&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;property&lt;/code&gt; 計算その後、もし &lt;code&gt;Expression&lt;/code&gt; 他の &lt;code&gt;Identifier&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="6bf0d349ac3b683cc1c3a39874badc605a02a0c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;proposal&lt;/code&gt; (required, accepted values: &lt;code&gt;minimal&lt;/code&gt;, &lt;code&gt;smart&lt;/code&gt;, &lt;code&gt;fsharp&lt;/code&gt;) There are different proposals for the pipeline operator. This option allows to choose which one to use. See &lt;a href=&quot;https://babeljs.io/blog/2018/07/19/whats-happening-with-the-pipeline-proposal&quot;&gt;What's Happening With the Pipeline (|&amp;gt;) Proposal?&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;proposal&lt;/code&gt; (required, accepted values: &lt;code&gt;minimal&lt;/code&gt; , &lt;code&gt;smart&lt;/code&gt; , &lt;code&gt;fsharp&lt;/code&gt; ) There are different proposals for the pipeline operator. This option allows to choose which one to use. See &lt;a href=&quot;https://babeljs.io/blog/2018/07/19/whats-happening-with-the-pipeline-proposal&quot;&gt;What's Happening With the Pipeline (|&amp;gt;) Proposal?&lt;/a&gt; for more information.</target>
        </trans-unit>
        <trans-unit id="cbe2ec12700a474f74f51bd6f4fc985788887a99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;proto&lt;/code&gt;: &lt;code&gt;boolean&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;proto&lt;/code&gt; : &lt;code&gt;boolean&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="4c916d58a911f979d8d5f81c2a543809e5d5b439" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;qualification&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;qualification&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="4c63766b45af146249f45b7a46f46eb0361339c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;qualification&lt;/code&gt;: &lt;code&gt;Identifier | QualifiedTypeIdentifier&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;qualification&lt;/code&gt; : &lt;code&gt;Identifier | QualifiedTypeIdentifier&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="70434397dcc414d9737a9034216893101c048274" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;quasi&lt;/code&gt;: &lt;code&gt;TemplateLiteral&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;quasi&lt;/code&gt; ： &lt;code&gt;TemplateLiteral&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="df2c8dff739dd3d5c1ba135844b5035ecc3d9d84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;quasis&lt;/code&gt;: &lt;code&gt;Array&amp;lt;TemplateElement&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;quasis&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;TemplateElement&amp;gt;&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="a313f38e282cee4509fbf5342758cd3cdc189312" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;readonly&lt;/code&gt;: &lt;code&gt;boolean&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;readonly&lt;/code&gt; : &lt;code&gt;boolean&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="58831e3e0af2c388e63bf6dd26de33e7cefccc03" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;recordAndTuple&lt;/code&gt; (&lt;a href=&quot;https://github.com/tc39/proposal-record-tuple&quot;&gt;proposal&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;recordAndTuple&lt;/code&gt; (&lt;a href=&quot;https://github.com/tc39/proposal-record-tuple&quot;&gt;proposal&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="772a3d2d22daed4bd47ef25df0b3da934387cb11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;recordAndtuple&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;recordAndtuple&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="eeb8324424ed031110d27621062c6bcb17884dac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;request: string&lt;/code&gt; - The file that the user requested, e.g. &lt;code&gt;&quot;@babel/env&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;request: string&lt;/code&gt; - The file that the user requested, e.g. &lt;code&gt;&quot;@babel/env&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="690d527014ad615e17887e136216be56ea34734b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resolved: string&lt;/code&gt; - The full path of the resolved file, e.g. &lt;code&gt;&quot;/tmp/node_modules/@babel/preset-env/lib/index.js&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;resolved: string&lt;/code&gt; - The full path of the resolved file, e.g. &lt;code&gt;&quot;/tmp/node_modules/@babel/preset-env/lib/index.js&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="091f5ee71d7cf04375cb07119f68ad51fa69191f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rest&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;rest&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="f82df653206dc158e10c784fee04235cd3fc0437" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rest&lt;/code&gt;: &lt;code&gt;FunctionTypeParam&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;rest&lt;/code&gt; : &lt;code&gt;FunctionTypeParam&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="85a3d7b5071fc5f10486cb4ed6a3f930eda5ec72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;returnType&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;returnType&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="b949db16c252a1e299a652ab8c027aec720a0ee0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;returnType&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;returnType&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="8adbd8fe1e027b3dc79ef9a6fb61cc61134a56fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;returnType&lt;/code&gt;: &lt;code&gt;FlowType&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;returnType&lt;/code&gt; : &lt;code&gt;FlowType&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="c8611c82bd7db10d6a7dd89a0438371f1b6578ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;returnType&lt;/code&gt;: &lt;code&gt;TSTypeAnnotation | Noop&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;returnType&lt;/code&gt; : &lt;code&gt;TSTypeAnnotation | Noop&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="99c77d8a9310d2df6d40bb375ec37f21246de7e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;returnType&lt;/code&gt;: &lt;code&gt;TypeAnnotation | TSTypeAnnotation | Noop&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;returnType&lt;/code&gt; : &lt;code&gt;TypeAnnotation | TSTypeAnnotation | Noop&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="6b050eb19c851fcae669f03baec310efcf6a8d3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;right&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;right&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="91f391d624e801876baaad74e215973d38e7ade7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;right&lt;/code&gt;: &lt;code&gt;Expression&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;right&lt;/code&gt; ： &lt;code&gt;Expression&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="fcd1ba18a7821bd70076ac28dacd2d10db44515f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;right&lt;/code&gt;: &lt;code&gt;FlowType&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;right&lt;/code&gt; : &lt;code&gt;FlowType&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="bb2f5bb80717ef0068ad6453d6c8213b2bf9522d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;right&lt;/code&gt;: &lt;code&gt;Identifier&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;right&lt;/code&gt; : &lt;code&gt;Identifier&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="29df5a972486b890b089aa87c3c504610e85d314" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;selfClosing&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;selfClosing&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="4c7d536103c7264ea476e66f0d0f6e582c4efdf9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;selfClosing&lt;/code&gt;: &lt;code&gt;boolean&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;selfClosing&lt;/code&gt; ： &lt;code&gt;boolean&lt;/code&gt; （デフォルト： &lt;code&gt;false&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="da5a86261597e2303c3ea71ced8a862f9f4dc1fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shorthand&lt;/code&gt;: &lt;code&gt;boolean&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;shorthand&lt;/code&gt; ： &lt;code&gt;boolean&lt;/code&gt; （デフォルト： &lt;code&gt;false&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="2c4f1eb484d2bf86538a25dacfd28862190d3745" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;source&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;source&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="002844a76314310f300596497e15b0faa341643d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;source&lt;/code&gt;: &lt;code&gt;StringLiteral&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;source&lt;/code&gt; ： &lt;code&gt;StringLiteral&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="042e34a5c741825c52a7b2be00b9f85d67f8a11c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;source&lt;/code&gt;: &lt;code&gt;StringLiteral&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;source&lt;/code&gt; ： &lt;code&gt;StringLiteral&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="dafd40dcc035789825def40faa7e721e89255fed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sourceFile&lt;/code&gt;: &lt;code&gt;string&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;sourceFile&lt;/code&gt; : &lt;code&gt;string&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="ddd65d38eb618d6c8bc2ca7bc6f4a04154abbd6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sourceType&lt;/code&gt; is set to &lt;code&gt;module&lt;/code&gt; by default.</source>
          <target state="translated">&lt;code&gt;sourceType&lt;/code&gt; is set to &lt;code&gt;module&lt;/code&gt; by default.</target>
        </trans-unit>
        <trans-unit id="4533210bb90dcaf06d346903d3ce646932d8b7cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sourceType&lt;/code&gt;: &lt;code&gt;&quot;script&quot; | &quot;module&quot;&lt;/code&gt; (default: &lt;code&gt;'script'&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;sourceType&lt;/code&gt; : &lt;code&gt;&quot;script&quot; | &quot;module&quot;&lt;/code&gt; (default: &lt;code&gt;'script'&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="956e5e9afcd57d78408ae198513f4910d1d1495a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;specifiers&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;specifiers&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="687f0ec27746f4d8c4088ce824343ec87ccbea5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;specifiers&lt;/code&gt;: &lt;code&gt;Array&amp;lt;ExportSpecifier | ExportDefaultSpecifier | ExportNamespaceSpecifier&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;specifiers&lt;/code&gt; : &lt;code&gt;Array&amp;lt;ExportSpecifier | ExportDefaultSpecifier | ExportNamespaceSpecifier&amp;gt;&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="0b1f35aa33f6371309f909ab03f8126c9b71e0a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;specifiers&lt;/code&gt;: &lt;code&gt;Array&amp;lt;ExportSpecifier | ExportNamespaceSpecifier&amp;gt;&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;specifiers&lt;/code&gt; : &lt;code&gt;Array&amp;lt;ExportSpecifier | ExportNamespaceSpecifier&amp;gt;&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="6bdd991f81318295372c006cca0090767e5970ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;specifiers&lt;/code&gt;: &lt;code&gt;Array&amp;lt;ExportSpecifier&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;specifiers&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;ExportSpecifier&amp;gt;&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="1b52fda361f19bf8fac55241b3cb3dfb94889514" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;specifiers&lt;/code&gt;: &lt;code&gt;Array&amp;lt;ImportSpecifier | ImportDefaultSpecifier | ImportNamespaceSpecifier&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;specifiers&lt;/code&gt; ： &lt;code&gt;Array&amp;lt;ImportSpecifier | ImportDefaultSpecifier | ImportNamespaceSpecifier&amp;gt;&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="18d3a74ae860500b93890c890bc037c859701d78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;static&lt;/code&gt;: &lt;code&gt;boolean&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;static&lt;/code&gt; ： &lt;code&gt;boolean&lt;/code&gt; （デフォルト： &lt;code&gt;false&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="b38621365b5c922244cf8c892bcd8514987d23a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;static&lt;/code&gt;: &lt;code&gt;boolean&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;static&lt;/code&gt; : &lt;code&gt;boolean&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="d7ff5d300f9cd7a9b108df1cb7b92ced172c8482" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;static&lt;/code&gt;: &lt;code&gt;boolean&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;static&lt;/code&gt; : &lt;code&gt;boolean&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="cf51f52fef22e95d6a0289dfabf54f021a4509b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string | &quot;current&quot; | true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;string | &quot;current&quot; | true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="26c436c5e852a46ebdd310db840da5441a398683" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string | &quot;tp&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;string | &quot;tp&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c766dbada35769d5d053b1ab6cc15dd0bf66678b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string | Array&amp;lt;string&amp;gt; | { [string]: string }&lt;/code&gt;, defaults to &lt;code&gt;{}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;string | Array&amp;lt;string&amp;gt; | { [string]: string }&lt;/code&gt; , defaults to &lt;code&gt;{}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="90bba75c046b2df28acfcdbbfadb03720f737f7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string | Array&amp;lt;string&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;string | Array&amp;lt;string&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3c8477b26b7d78e631ac3e07d4b31a1d98371421" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt; &amp;mdash; prevent plugin from minifying strings</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; &amp;mdash;プラグインが文字列を縮小できないようにします</target>
        </trans-unit>
        <trans-unit id="dbd026c4717b7df3645484703c5996221e2ea033" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt; - A &lt;code&gt;require&lt;/code&gt;-style path or plugin/preset identifier. Identifiers will be passed through &lt;a href=&quot;#name-normalization&quot;&gt;name normalization&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; - A &lt;code&gt;require&lt;/code&gt; -style path or plugin/preset identifier. Identifiers will be passed through &lt;a href=&quot;#name-normalization&quot;&gt;name normalization&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="fc7aa5e1759976cbeda976d233581c60b9d4f5c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt; - A file path with simple support for &lt;code&gt;*&lt;/code&gt; and &lt;code&gt;**&lt;/code&gt; as full slug matches. Any file or parent folder matching the pattern counts as a match. The path follow's Node's normal path logic, so on POSIX is must be &lt;code&gt;/&lt;/code&gt;-separated, but on Windows both &lt;code&gt;/&lt;/code&gt; and &lt;code&gt;\&lt;/code&gt; are supported.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; - A file path with simple support for &lt;code&gt;*&lt;/code&gt; and &lt;code&gt;**&lt;/code&gt; as full slug matches. Any file or parent folder matching the pattern counts as a match. The path follow's Node's normal path logic, so on POSIX is must be &lt;code&gt;/&lt;/code&gt; -separated, but on Windows both &lt;code&gt;/&lt;/code&gt; and &lt;code&gt;\&lt;/code&gt; are supported.</target>
        </trans-unit>
        <trans-unit id="821854cfac0ef6faf7587981623381c868787b2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;, defaults to &lt;code&gt;&quot;babel-runtime&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; 、デフォルトは &lt;code&gt;&quot;babel-runtime&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="64b52298d7c3627297a9e0f0d4ea6a70cac2a213" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;, defaults to &lt;code&gt;React.Fragment&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; , defaults to &lt;code&gt;React.Fragment&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="254116f8a68cd99bf0548459caf6e0931b7ff748" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;, defaults to &lt;code&gt;React.createElement&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; 。デフォルトは &lt;code&gt;React.createElement&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="86aa2276eded050175eb36178187286505167693" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;, defaults to &lt;code&gt;React&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; , defaults to &lt;code&gt;React&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f7af23755db18c7c3c0f52f6661df9a2ca41503f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;, defaults to &lt;code&gt;process.cwd()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; , defaults to &lt;code&gt;process.cwd()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="41d1dd35b6f96e7187fad5eb7ae01d65cc151f65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;, defaults to &lt;code&gt;react&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; , defaults to &lt;code&gt;react&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f8c348c9ca6b8f72318b3c82a941f9459e4b9b33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;, otherwise nothing</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; , otherwise nothing</target>
        </trans-unit>
        <trans-unit id="21b74eb7900998a6b69fd9031b893569e0cd5ec9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;superClass&lt;/code&gt;: &lt;code&gt;Expression&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;superClass&lt;/code&gt; ： &lt;code&gt;Expression&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="08e9d215d506cf1998252c489539161607ac0e67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;superTypeParameters&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;superTypeParameters&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="0e87edebf1130e93e96838af9a07104ad051840b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;superTypeParameters&lt;/code&gt;: &lt;code&gt;TypeParameterInstantiation | TSTypeParameterInstantiation&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;superTypeParameters&lt;/code&gt; : &lt;code&gt;TypeParameterInstantiation | TSTypeParameterInstantiation&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="36cc9f90e4e5f3e10a4f9842effbd174acc87220" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;supertype&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;supertype&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="d5846eb9a38a4f6bc3960ff50cd087f55d5cad91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;supertype&lt;/code&gt;: &lt;code&gt;FlowType&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;supertype&lt;/code&gt; : &lt;code&gt;FlowType&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="816a3318727db919ebf002b05e519609e379707a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;syntaxType&lt;/code&gt; (required, accepted values: &lt;code&gt;hash&lt;/code&gt;, &lt;code&gt;bar&lt;/code&gt;) There are two syntax variants for &lt;code&gt;recordAndTuple&lt;/code&gt;. They share exactly same runtime semantics.</source>
          <target state="translated">&lt;code&gt;syntaxType&lt;/code&gt; (required, accepted values: &lt;code&gt;hash&lt;/code&gt; , &lt;code&gt;bar&lt;/code&gt; ) There are two syntax variants for &lt;code&gt;recordAndTuple&lt;/code&gt; . They share exactly same runtime semantics.</target>
        </trans-unit>
        <trans-unit id="9915c8567b3460985ff83821c29e1460580da2fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tag&lt;/code&gt;: &lt;code&gt;Expression&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;tag&lt;/code&gt; ： &lt;code&gt;Expression&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="4f14f9176d595b64f23aee5bec828064256fb1c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tail&lt;/code&gt;: &lt;code&gt;boolean&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;tail&lt;/code&gt; ： &lt;code&gt;boolean&lt;/code&gt; （デフォルト： &lt;code&gt;false&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="774b9f818958835dc929fa8659fd4e12cd5245d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tdz&lt;/code&gt; - Account for TDZ (Temporal Dead Zone)</source>
          <target state="translated">&lt;code&gt;tdz&lt;/code&gt; -TDZ（一時的なデッドゾーン）のアカウント</target>
        </trans-unit>
        <trans-unit id="192040f46c1638c51980abdf14eb8015c7ef4107" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tdz&lt;/code&gt; - Detect usages before declaration/initialization in let/const(throws) and var(void 0)</source>
          <target state="translated">&lt;code&gt;tdz&lt;/code&gt; - Detect usages before declaration/initialization in let/const(throws) and var(void 0)</target>
        </trans-unit>
        <trans-unit id="9849fd2ffe940091ad8abddd9ba3459d79ef751b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;template.expression(&quot;foo&quot;)()&lt;/code&gt; returns the expression node.</source>
          <target state="translated">&lt;code&gt;template.expression(&quot;foo&quot;)()&lt;/code&gt; returns the expression node.</target>
        </trans-unit>
        <trans-unit id="35dcdbc68a5432b419a6b7d9c88fa614ed99bb29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;template.program(&quot;foo;&quot;)()&lt;/code&gt; returns the &lt;code&gt;Program&lt;/code&gt; node for the template.</source>
          <target state="translated">&lt;code&gt;template.program(&quot;foo;&quot;)()&lt;/code&gt; returns the &lt;code&gt;Program&lt;/code&gt; node for the template.</target>
        </trans-unit>
        <trans-unit id="f21692b4f2a3a417ca7aca0a1345812983305df7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;template.statement(&quot;foo;&quot;)()&lt;/code&gt; returns a single statement node, and throw an exception if the result is anything but a single statement.</source>
          <target state="translated">&lt;code&gt;template.statement(&quot;foo;&quot;)()&lt;/code&gt; returns a single statement node, and throw an exception if the result is anything but a single statement.</target>
        </trans-unit>
        <trans-unit id="439d1f2846b134031f52aff31f77230549d7bc5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;template.statements(&quot;foo;foo;&quot;)()&lt;/code&gt; returns an array of statement nodes.</source>
          <target state="translated">&lt;code&gt;template.statements(&quot;foo;foo;&quot;)()&lt;/code&gt; returns an array of statement nodes.</target>
        </trans-unit>
        <trans-unit id="7f8d6cfada36cfa7f42e478f0e787828ea357584" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;template&lt;/code&gt; returns either a single statement, or an array of statements, depending on the parsed result.</source>
          <target state="translated">&lt;code&gt;template&lt;/code&gt; returns either a single statement, or an array of statements, depending on the parsed result.</target>
        </trans-unit>
        <trans-unit id="dc20b6859992d5c1f0f21e698fae6f17c180f091" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test&lt;/code&gt;: &lt;code&gt;Expression&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; ： &lt;code&gt;Expression&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="fadba23d5ef0628e9ede824d6a7d74baf23ce09e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test&lt;/code&gt;: &lt;code&gt;Expression&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; ： &lt;code&gt;Expression&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="72f87bf889cbaf2eb77582988231188bc6aa7f27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;throwExpressions&lt;/code&gt; (&lt;a href=&quot;https://github.com/babel/proposals/issues/23&quot;&gt;proposal&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;throwExpressions&lt;/code&gt; (&lt;a href=&quot;https://github.com/babel/proposals/issues/23&quot;&gt;proposal&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="e754d2bbc1b647ef956efd86d199b922abfd6132" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tokens&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;tokens&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="9cdc7c153afa094f93450f09458e87b076edf15d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;topLevel&lt;/code&gt; - mangle topLevel Identifiers</source>
          <target state="translated">&lt;code&gt;topLevel&lt;/code&gt; -topLevel識別子をマングルします。</target>
        </trans-unit>
        <trans-unit id="986686beb6107b4b6d34f4867dd4965af23f8715" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;topLevel&lt;/code&gt; - mangle topLevel Identifiers (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;topLevel&lt;/code&gt; - mangle topLevel Identifiers (default: &lt;code&gt;false&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="43689525da83d44c9a27f0451f22193e6e26ed28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;topLevelAwait&lt;/code&gt; (&lt;a href=&quot;https://github.com/tc39/proposal-top-level-await/&quot;&gt;proposal&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;topLevelAwait&lt;/code&gt; (&lt;a href=&quot;https://github.com/tc39/proposal-top-level-await/&quot;&gt;proposal&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="4bd24f367f86a5be6b31b884f3f927ce54fb3f4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; - Do not lazy-initialize local &lt;code&gt;./foo&lt;/code&gt; imports, but lazy-init &lt;code&gt;foo&lt;/code&gt; dependencies.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; - Do not lazy-initialize local &lt;code&gt;./foo&lt;/code&gt; imports, but lazy-init &lt;code&gt;foo&lt;/code&gt; dependencies.</target>
        </trans-unit>
        <trans-unit id="72275ece9d0aa781851f373fb3a03f1ea6faf6cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; - enable plugin</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; - enable plugin</target>
        </trans-unit>
        <trans-unit id="0d3f612aeda9cc90401a53ce6024f994440b4156" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; to generate a sourcemap for the code and include it in the result object.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; to generate a sourcemap for the code and include it in the result object.</target>
        </trans-unit>
        <trans-unit id="bb5d54ddcf7fc71bb6339a7ad5c7a1b01ffff9c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; will attempt to load an input sourcemap from the file itself, if it contains a &lt;code&gt;//# sourceMappingURL=...&lt;/code&gt; comment. If no map is found, or the map fails to load and parse, it will be silently discarded.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; will attempt to load an input sourcemap from the file itself, if it contains a &lt;code&gt;//# sourceMappingURL=...&lt;/code&gt; comment. If no map is found, or the map fails to load and parse, it will be silently discarded.</target>
        </trans-unit>
        <trans-unit id="bdf1954d5861bb502ba09dc869d545b4abe19f95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; will enable searching for &lt;a href=&quot;../config-files/index#file-relative-configuration&quot;&gt;configuration files&lt;/a&gt; relative to the &lt;a href=&quot;#filename&quot;&gt;&lt;code&gt;&quot;filename&quot;&lt;/code&gt;&lt;/a&gt; provided to Babel.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; will enable searching for &lt;a href=&quot;../config-files/index#file-relative-configuration&quot;&gt;configuration files&lt;/a&gt; relative to the &lt;a href=&quot;#filename&quot;&gt; &lt;code&gt;&quot;filename&quot;&lt;/code&gt; &lt;/a&gt; provided to Babel.</target>
        </trans-unit>
        <trans-unit id="926985cff23a7340860be0192acbc0a8537592f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; will write the map to a &lt;code&gt;.map&lt;/code&gt; file on disk</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; will write the map to a &lt;code&gt;.map&lt;/code&gt; file on disk</target>
        </trans-unit>
        <trans-unit id="76ea840256c77a026c7a1701289289d6744ac6a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;trueType&lt;/code&gt;: &lt;code&gt;TSType&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;trueType&lt;/code&gt; : &lt;code&gt;TSType&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="ef9270417533d32ee3e71732f56f06be3d726a9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typeAnnotation&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;typeAnnotation&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="b77573ecf48a915598c6ee098b927ecc6593a046" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typeAnnotation&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;typeAnnotation&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="173e3a972f69c664f085322434d448c12bf6afe9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typeAnnotation&lt;/code&gt;: &lt;code&gt;FlowType&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;typeAnnotation&lt;/code&gt; : &lt;code&gt;FlowType&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="bc2a463acaba63267565de7600734346a9b865a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typeAnnotation&lt;/code&gt;: &lt;code&gt;TSType&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;typeAnnotation&lt;/code&gt; : &lt;code&gt;TSType&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="604e323f72b1e95f03f9fa32eae0e5374bed42ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typeAnnotation&lt;/code&gt;: &lt;code&gt;TSType&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;typeAnnotation&lt;/code&gt; : &lt;code&gt;TSType&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="8109c12c27a59d251c281e0210bd66f67584a778" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typeAnnotation&lt;/code&gt;: &lt;code&gt;TSTypeAnnotation&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;typeAnnotation&lt;/code&gt; : &lt;code&gt;TSTypeAnnotation&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="c36efbc8e1d33ab3743a9ceec510b35f2d9f6eb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typeAnnotation&lt;/code&gt;: &lt;code&gt;TSTypeAnnotation&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;typeAnnotation&lt;/code&gt; : &lt;code&gt;TSTypeAnnotation&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="79e098cd21ba7e869d56c7c8ba478d4702d61b1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typeAnnotation&lt;/code&gt;: &lt;code&gt;TypeAnnotation | TSTypeAnnotation | Noop&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;typeAnnotation&lt;/code&gt; : &lt;code&gt;TypeAnnotation | TSTypeAnnotation | Noop&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="eb9a7f457af1161f71e96402c8741f4a17665da4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typeAnnotation&lt;/code&gt;: &lt;code&gt;TypeAnnotation&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;typeAnnotation&lt;/code&gt; : &lt;code&gt;TypeAnnotation&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="bcf566f54be8d4d461312299bb6c22681cdb1bb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typeArguments&lt;/code&gt;: &lt;code&gt;TypeParameterInstantiation&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;typeArguments&lt;/code&gt; : &lt;code&gt;TypeParameterInstantiation&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="9351b783bb7ee528d9dab78618e5e6342e76557c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typeName&lt;/code&gt;: &lt;code&gt;TSEntityName&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;typeName&lt;/code&gt; : &lt;code&gt;TSEntityName&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="4450c735c4b316030ab0907bf1bcd7d044b11c5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typeParameter&lt;/code&gt;: &lt;code&gt;TSTypeParameter&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;typeParameter&lt;/code&gt; : &lt;code&gt;TSTypeParameter&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="8058d3f2e7baae8b02f8e8f8caf936194e2bdd96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typeParameters&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;typeParameters&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="0f861d3b07a1fc3987cf08c6a8c48e671ff64fab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typeParameters&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;typeParameters&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="98e8b94ce4d94228b500a77993d1e302645c3c32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typeParameters&lt;/code&gt;: &lt;code&gt;TSTypeParameterDeclaration | Noop&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;typeParameters&lt;/code&gt; : &lt;code&gt;TSTypeParameterDeclaration | Noop&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="147c844f64f92a96ad060fd51bc4b6875c4b8e4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typeParameters&lt;/code&gt;: &lt;code&gt;TSTypeParameterDeclaration&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;typeParameters&lt;/code&gt; : &lt;code&gt;TSTypeParameterDeclaration&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="c94d60a4a688a91f2dcc0f06419dfc4a09b5c97b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typeParameters&lt;/code&gt;: &lt;code&gt;TSTypeParameterInstantiation&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;typeParameters&lt;/code&gt; : &lt;code&gt;TSTypeParameterInstantiation&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="f93a39de55626c809676a47944c7b6987775d24d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typeParameters&lt;/code&gt;: &lt;code&gt;TypeParameterDeclaration | TSTypeParameterDeclaration | Noop&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;typeParameters&lt;/code&gt; : &lt;code&gt;TypeParameterDeclaration | TSTypeParameterDeclaration | Noop&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="9cf51061bbbee344d7a14e395f939f5c529d31df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typeParameters&lt;/code&gt;: &lt;code&gt;TypeParameterDeclaration&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;typeParameters&lt;/code&gt; : &lt;code&gt;TypeParameterDeclaration&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="3e3a9b7a986422724643a10bee5c5efb194a52c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typeParameters&lt;/code&gt;: &lt;code&gt;TypeParameterInstantiation&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;typeParameters&lt;/code&gt; : &lt;code&gt;TypeParameterInstantiation&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="6e7890ea54fdfa488d1e0bc7892db57fb7ef6e88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;types&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;types&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="3158973ef2ecb0b0bd103d100da584ef27be2474" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;types&lt;/code&gt;: &lt;code&gt;Array&amp;lt;FlowType&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;types&lt;/code&gt; : &lt;code&gt;Array&amp;lt;FlowType&amp;gt;&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="86577697da039d6f1c352d2d9ee561501e87f76d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;types&lt;/code&gt;: &lt;code&gt;Array&amp;lt;TSType&amp;gt;&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;types&lt;/code&gt; : &lt;code&gt;Array&amp;lt;TSType&amp;gt;&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="f8b1bd3845f45c70330df90f087f485329c1b93f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typescript&lt;/code&gt; (&lt;a href=&quot;https://github.com/Microsoft/TypeScript&quot;&gt;repo&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;typescript&lt;/code&gt; (&lt;a href=&quot;https://github.com/Microsoft/TypeScript&quot;&gt;repo&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="688edb4e7c0e11afa8cf9cbcdbeb23864b65101c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;umd&lt;/code&gt; output format wraps helpers in UMD compatible with browsers, CommonJS and AMD.</source>
          <target state="translated">&lt;code&gt;umd&lt;/code&gt; 出力フォーマットは、ブラウザー、CommonJSおよびAMDと互換性のあるUMDのヘルパーをラップします。</target>
        </trans-unit>
        <trans-unit id="718dcf16816e7f24323a431952bc331f7aa90d0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unambiguous&lt;/code&gt; can be quite useful in contexts where the type is unknown, but it can lead to false matches because it's perfectly valid to have a module file that does not use &lt;code&gt;import&lt;/code&gt;/&lt;code&gt;export&lt;/code&gt; statements.</source>
          <target state="translated">&lt;code&gt;unambiguous&lt;/code&gt; can be quite useful in contexts where the type is unknown, but it can lead to false matches because it's perfectly valid to have a module file that does not use &lt;code&gt;import&lt;/code&gt; / &lt;code&gt;export&lt;/code&gt; statements.</target>
        </trans-unit>
        <trans-unit id="24c8e25563a74525851ec618568db1d8275033cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;update&lt;/code&gt;: &lt;code&gt;Expression&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;update&lt;/code&gt; ： &lt;code&gt;Expression&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="65d4b4d2922e10e70c345e09853cf978e35c6298" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;useUnicodeFlag&lt;/code&gt; (defaults to &lt;code&gt;true&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;useUnicodeFlag&lt;/code&gt; (defaults to &lt;code&gt;true&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="f019631684f82cff2dae7140b7770e90b08fc008" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value: {} | Function&lt;/code&gt; - The resolved value of the plugin.</source>
          <target state="translated">&lt;code&gt;value: {} | Function&lt;/code&gt; - The resolved value of the plugin.</target>
        </trans-unit>
        <trans-unit id="7affcfcb636de8428781af261b84448a1e2b8c29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="316154d8654e1eb4e11ad4ffa5839b30972ca2e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt;: &lt;code&gt;DirectiveLiteral&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; ： &lt;code&gt;DirectiveLiteral&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="79a741cfec4ed61619b80ac4ef8215cca2204026" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt;: &lt;code&gt;Expression | Pattern | RestElement&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; ： &lt;code&gt;Expression | Pattern | RestElement&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="bab10777436d61c1fa959698a56975f437a24d48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt;: &lt;code&gt;Expression | PatternLike&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; : &lt;code&gt;Expression | PatternLike&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="496879dc8503817160b6e588ca5ebc91d3683626" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt;: &lt;code&gt;Expression&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; : &lt;code&gt;Expression&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="8401aef032cdb84974de214ec6a2369815d39fb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt;: &lt;code&gt;Flow&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; : &lt;code&gt;Flow&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="7f180ea920b569c53941cd6938ebbe33fd194d26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt;: &lt;code&gt;FlowType&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; : &lt;code&gt;FlowType&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="387725c96e4eaf57d44bb8e07bda9da7a55a3689" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt;: &lt;code&gt;JSXElement | JSXFragment | StringLiteral | JSXExpressionContainer&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; : &lt;code&gt;JSXElement | JSXFragment | StringLiteral | JSXExpressionContainer&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="39451b51417fdbe3af73c2883030592b9f12c5a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt;: &lt;code&gt;JSXElement | StringLiteral | JSXExpressionContainer&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; ： &lt;code&gt;JSXElement | StringLiteral | JSXExpressionContainer&lt;/code&gt; （デフォルト： &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="dc1ba02c250d2f28edf7ef86543565eba7fb287b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt;: &lt;code&gt;boolean&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; ： &lt;code&gt;boolean&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="0aa845a79570ba73ea37c973502c98575a563817" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt;: &lt;code&gt;number&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; ： &lt;code&gt;number&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="2adc6d388f8413505159d3f84aa2a3ceae15c619" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt;: &lt;code&gt;string&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; ： &lt;code&gt;string&lt;/code&gt; （必須）</target>
        </trans-unit>
        <trans-unit id="1ab16f3134fe0382b024553a09834feba44ea757" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt;: &lt;code&gt;{ raw: string, cooked: string }&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; : &lt;code&gt;{ raw: string, cooked: string }&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="0a5cf473fb12ac3b133de392f5335787a920cf65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;var&lt;/code&gt; outputs variable &lt;code&gt;babelHelpers&lt;/code&gt; (&lt;code&gt;var babelHelpers = {}&lt;/code&gt;) and helpers are assigned to it. This output format is suitable for additional processing.</source>
          <target state="translated">&lt;code&gt;var&lt;/code&gt; は変数 &lt;code&gt;babelHelpers&lt;/code&gt; （ &lt;code&gt;var babelHelpers = {}&lt;/code&gt; ）を出力し、それにヘルパーが割り当てられます。この出力フォーマットは、追加の処理に適しています。</target>
        </trans-unit>
        <trans-unit id="efc78a30c91f97517e9288961edc52d834763230" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;variance&lt;/code&gt;: &lt;code&gt;Variance&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;variance&lt;/code&gt; : &lt;code&gt;Variance&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="5a197dc5a17b2a3af3205653962bb1ddc48f4c4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ ...pluginOpts }&lt;/code&gt; - enable plugin and pass pluginOpts to plugin</source>
          <target state="translated">&lt;code&gt;{ ...pluginOpts }&lt;/code&gt; - enable plugin and pass pluginOpts to plugin</target>
        </trans-unit>
        <trans-unit id="86c892db97015e908ef4c54aa83ce2240dd1ef18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{[string]:number|string}&lt;/code&gt;, defaults to &lt;code&gt;{}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{[string]:number|string}&lt;/code&gt; 、デフォルトは &lt;code&gt;{}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4981e3ceaabb76d761d8597199fffaab06a8001a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{} | Function&lt;/code&gt; - An actual plugin/preset object or function after it has been &lt;code&gt;require()&lt;/code&gt;ed.</source>
          <target state="translated">&lt;code&gt;{} | Function&lt;/code&gt; - An actual plugin/preset object or function after it has been &lt;code&gt;require()&lt;/code&gt; ed.</target>
        </trans-unit>
        <trans-unit id="2a74756bf405febab1715d2ebe849e549bec2523" translate="yes" xml:space="preserve">
          <source>&lt;del&gt;&lt;a href=&quot;../transform-decorators/index&quot;&gt;transform-decorators&lt;/a&gt;&lt;/del&gt; &amp;ndash; &lt;em&gt;disabled pending proposal update&lt;/em&gt; (can use the &lt;a href=&quot;https://github.com/loganfsmyth/babel-plugin-transform-decorators-legacy&quot;&gt;legacy&lt;/a&gt; transform in the meantime)</source>
          <target state="translated">&lt;del&gt;&lt;a href=&quot;../transform-decorators/index&quot;&gt;トランスフォームデコレータ&lt;/a&gt;&lt;/del&gt;&amp;ndash; &lt;em&gt;保留中のプロポーザル更新を無効にします&lt;/em&gt;（当面は&lt;a href=&quot;https://github.com/loganfsmyth/babel-plugin-transform-decorators-legacy&quot;&gt;従来の&lt;/a&gt;変換を使用できます）</target>
        </trans-unit>
        <trans-unit id="5d6ba8c543c9b5791167a74a645f57166e071932" translate="yes" xml:space="preserve">
          <source>&lt;del&gt;&lt;a href=&quot;https://github.com/leebyron/ecmascript-more-export-from&quot;&gt;Proposal: Additional export-from statements in ES7&lt;/a&gt;&lt;/del&gt; (Withdrawn)</source>
          <target state="translated">&lt;del&gt;&lt;a href=&quot;https://github.com/leebyron/ecmascript-more-export-from&quot;&gt;提案：ES7での追加のexport-fromステートメント&lt;/a&gt;&lt;/del&gt; （引きこもった）</target>
        </trans-unit>
        <trans-unit id="cd782857cbf9d4c45f9ec2cf3619d9932e7230f3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;First&lt;/em&gt;, this transform uses the &lt;a href=&quot;https://en.wikipedia.org/wiki/Basename&quot;&gt;basename&lt;/a&gt; of each import to generate the global names in the UMD output. This means that if you&amp;rsquo;re importing multiple modules with the same basename, like:</source>
          <target state="translated">&lt;em&gt;最初に&lt;/em&gt;、この変換は各インポートの&lt;a href=&quot;https://en.wikipedia.org/wiki/Basename&quot;&gt;ベース名&lt;/a&gt;を使用して、UMD出力でグローバル名を生成します。つまり、次のように、同じベース名を持つ複数のモジュールをインポートする場合、</target>
        </trans-unit>
        <trans-unit id="6fb51691e56c49b21775c15a051a2727d114f04e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;First&lt;/em&gt;, this transform uses the &lt;a href=&quot;https://en.wikipedia.org/wiki/Basename&quot;&gt;basename&lt;/a&gt; of each import to generate the global names in the UMD output. This means that if you're importing multiple modules with the same basename, like:</source>
          <target state="translated">&lt;em&gt;First&lt;/em&gt;, this transform uses the &lt;a href=&quot;https://en.wikipedia.org/wiki/Basename&quot;&gt;basename&lt;/a&gt; of each import to generate the global names in the UMD output. This means that if you're importing multiple modules with the same basename, like:</target>
        </trans-unit>
        <trans-unit id="627d3d6a3a02963b0bd64d58ad18d6deeb2d2b42" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Please note&lt;/em&gt;: when specifying the esmodules target, browsers targets will be ignored.</source>
          <target state="translated">&lt;em&gt;Please note&lt;/em&gt;: when specifying the esmodules target, browsers targets will be ignored.</target>
        </trans-unit>
        <trans-unit id="97608a7ea44f9f08dd1258f88d59b2b918696d72" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Second&lt;/em&gt;, the specified override will still be passed to the &lt;code&gt;toIdentifier&lt;/code&gt; function in &lt;a href=&quot;https://github.com/babel/babel/blob/master/packages/babel-types/src/converters.js&quot;&gt;babel-types/src/converters&lt;/a&gt;. This means that if you specify an override as a member expression like:</source>
          <target state="translated">&lt;em&gt;次に&lt;/em&gt;、指定されたオーバーライドは、&lt;a href=&quot;https://github.com/babel/babel/blob/master/packages/babel-types/src/converters.js&quot;&gt;babel-types / src / converters&lt;/a&gt;の &lt;code&gt;toIdentifier&lt;/code&gt; 関数に渡されます。つまり、次のようなメンバー式としてオーバーライドを指定すると、</target>
        </trans-unit>
        <trans-unit id="ce6ccdee51801cca68a16504263c1276729575d6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Third&lt;/em&gt;, you cannot override the exported global name.</source>
          <target state="translated">&lt;em&gt;3番目に&lt;/em&gt;、エクスポートされたグローバル名を上書きすることはできません。</target>
        </trans-unit>
        <trans-unit id="872b7c11807cb55dcdf83d2872e70bc8de68584c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;hand wave emoji&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;hand wave emoji&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8b2ba67f53e732c726e415db139f3b3f961783b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;.babelrc&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;.babelrc&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="83525650c0aedc96e7adcc018c9f3346833bf002" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;--module&lt;/code&gt; value&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;--module&lt;/code&gt; value&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4edbb9806489c7cc2eac499df0211918d45f8bc5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;@babel/preset-env&lt;/code&gt;'s &lt;code&gt;modules&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;@babel/preset-env&lt;/code&gt; 's &lt;code&gt;modules&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a7b78cd8128fae705e8631036ed8b47890481b4c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;In&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;In&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f302399e9391a8974eb40897f8082f59bed2468f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Out&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;Out&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="958dfc1a07a6ce9f27374b43b9a7359d331adb07" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A&lt;/strong&gt;: The TypeScript compiler dynamically changes how these variables are used depending on whether or not the value is mutated. Ultimately, this depends on a type-model and is outside the scope of Babel. A best-effort implementation would transform context-dependent usages of the variable to always use the &lt;code&gt;Namespace.Value&lt;/code&gt; version instead of &lt;code&gt;Value&lt;/code&gt;, in case it was mutated outside of the current file. Allowing &lt;code&gt;var&lt;/code&gt; or &lt;code&gt;let&lt;/code&gt; from Babel (as the transform is not-yet-written) is therefore is more likely than not to present itself as a bug when used as-if it was not &lt;code&gt;const&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;A&lt;/strong&gt;: The TypeScript compiler dynamically changes how these variables are used depending on whether or not the value is mutated. Ultimately, this depends on a type-model and is outside the scope of Babel. A best-effort implementation would transform context-dependent usages of the variable to always use the &lt;code&gt;Namespace.Value&lt;/code&gt; version instead of &lt;code&gt;Value&lt;/code&gt; , in case it was mutated outside of the current file. Allowing &lt;code&gt;var&lt;/code&gt; or &lt;code&gt;let&lt;/code&gt; from Babel (as the transform is not-yet-written) is therefore is more likely than not to present itself as a bug when used as-if it was not &lt;code&gt;const&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d23a339570d422fb0e1108bad913120fd80d8c1d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Builtins&lt;/strong&gt; injected when using &lt;code&gt;useBuiltIns: &quot;usage&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Builtins&lt;/strong&gt; injected when using &lt;code&gt;useBuiltIns: &quot;usage&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="acfb0397053d35564a05f0df5e3ed43dfdd473ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deopt&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Deopt&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2c9e90b666f7ee5ee14bd0412d3648d439149d99" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deopts&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Deopts&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bd2d64bf3c2e6c47b6dc3f828dba9b13763f6e7c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example Usage&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;使用例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4168878b06eaa6917a0f012585506612f5054ea6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bce3f4a409dc0c67054a7e806ad3eecf69f742f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5c3d140c8e464f134cec3b0eebd38bf683f55d62" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Examples&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="533616d8543a0514115aabefebaed2b06ff667be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Features&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Features&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8ec4549def0ba3610b36e92c1f06dd56fb34af4a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;In&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;In&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="940c1db4eab9272b2501c6e2841774fdf05f521e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Mutable Properties&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Mutable Properties&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c29b759c9f0048402951fc46a4ca9e7d2cc6cb8b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE - Production vs. development dependencies&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注-プロダクションと開発の依存関係&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3885f1d4b124a8e7553a12d5793a36ca225f9d88" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt; By default all requires to &lt;code&gt;node_modules&lt;/code&gt; will be ignored. You can override this by passing an ignore regex via:</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;デフォルトでは、 &lt;code&gt;node_modules&lt;/code&gt; に必要なものはすべて無視されます。これを無視するには、次のようにして無視正規表現を渡します。</target>
        </trans-unit>
        <trans-unit id="024d7af3de2775bf9690ad26fa65540909f79fb3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt; Do not &lt;code&gt;require&lt;/code&gt; this via browserify etc, use &lt;code&gt;@babel/polyfill&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;NOTE:&lt;/strong&gt; Do not &lt;code&gt;require&lt;/code&gt; this via browserify etc, use &lt;code&gt;@babel/polyfill&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b2ad7a845275d3420c3cf66be814a7b5f5959686" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt; Do not &lt;code&gt;require&lt;/code&gt; this via browserify etc, use &lt;code&gt;babel-polyfill&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; browserifyなどを介してこれを &lt;code&gt;require&lt;/code&gt; しない場合は、 &lt;code&gt;babel-polyfill&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="7952384f07f84bebeb9946cc08e31bd7d50e127e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt; Instance methods such as &lt;code&gt;&quot;foobar&quot;.includes(&quot;foo&quot;)&lt;/code&gt; will &lt;strong&gt;not&lt;/strong&gt; work.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; &lt;code&gt;&quot;foobar&quot;.includes(&quot;foo&quot;)&lt;/code&gt; などのインスタンスメソッドは機能し&lt;strong&gt;ません&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="81155b73e52f937b59756c800cadf35883400afd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt; Instance methods such as &lt;code&gt;&quot;foobar&quot;.includes(&quot;foo&quot;)&lt;/code&gt; will only work when using &lt;code&gt;corejs: 3&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;NOTE:&lt;/strong&gt; Instance methods such as &lt;code&gt;&quot;foobar&quot;.includes(&quot;foo&quot;)&lt;/code&gt; will only work when using &lt;code&gt;corejs: 3&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="90746b3379c8d518ad16d126746ea91bfa1fb744" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt; There are some caveats when using this plugin, see the &lt;a href=&quot;../babel-plugin-transform-proto-to-assign/index&quot;&gt;&lt;code&gt;@babel/plugin-transform-proto-to-assign&lt;/code&gt;&lt;/a&gt; docs for more information.</source>
          <target state="translated">&lt;strong&gt;NOTE:&lt;/strong&gt; There are some caveats when using this plugin, see the &lt;a href=&quot;../babel-plugin-transform-proto-to-assign/index&quot;&gt; &lt;code&gt;@babel/plugin-transform-proto-to-assign&lt;/code&gt; &lt;/a&gt; docs for more information.</target>
        </trans-unit>
        <trans-unit id="84cec7b44745685582db0104afd2c79a80e413ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt; There are some caveats when using this plugin, see the &lt;a href=&quot;https://github.com/babel/babel/tree/master/packages/babel-plugin-transform-proto-to-assign&quot;&gt;&lt;code&gt;babel-plugin-transform-proto-to-assign&lt;/code&gt; README&lt;/a&gt; for more information..</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;このプラグインを使用する場合、いくつかの注意事項があります。詳細については、&lt;a href=&quot;https://github.com/babel/babel/tree/master/packages/babel-plugin-transform-proto-to-assign&quot;&gt; &lt;code&gt;babel-plugin-transform-proto-to-assign&lt;/code&gt; README&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="6cc70c3e839a30941258a077a62e12a4e2e7ece5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt; We cannot use &lt;code&gt;!= null&lt;/code&gt; here because &lt;code&gt;document.all == null&lt;/code&gt; and &lt;code&gt;document.all&lt;/code&gt; has been deemed not &quot;nullish&quot;.</source>
          <target state="translated">&lt;strong&gt;NOTE:&lt;/strong&gt; We cannot use &lt;code&gt;!= null&lt;/code&gt; here because &lt;code&gt;document.all == null&lt;/code&gt; and &lt;code&gt;document.all&lt;/code&gt; has been deemed not &quot;nullish&quot;.</target>
        </trans-unit>
        <trans-unit id="7f9debe6b9d3741889cfd7db26f9ac3137835291" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt;&lt;code&gt;__proto__&lt;/code&gt; is not supported on IE &amp;lt;= 10 so static properties &lt;strong&gt;will not&lt;/strong&gt; be inherited. See the &lt;a href=&quot;../../plugins/transform-proto-to-assign/index&quot;&gt;protoToAssign&lt;/a&gt; for a possible work around.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; &lt;code&gt;__proto__&lt;/code&gt; はIE &amp;lt;= 10ではサポートされていないため、静的プロパティ&lt;strong&gt;は&lt;/strong&gt;継承&lt;strong&gt;されませ&lt;/strong&gt;ん。可能な&lt;a href=&quot;../../plugins/transform-proto-to-assign/index&quot;&gt;回避策&lt;/a&gt;については、protoToAssignを参照してください。</target>
        </trans-unit>
        <trans-unit id="d561a7c5343c444cacb735e881fec47a09f65eac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: This package is only meant to be used by the packages included in this repository. There is currently no way for third-party plugins to define a helper.</source>
          <target state="translated">&lt;strong&gt;NOTE&lt;/strong&gt;: This package is only meant to be used by the packages included in this repository. There is currently no way for third-party plugins to define a helper.</target>
        </trans-unit>
        <trans-unit id="9d600b54ba5fa8282ec5be6e4a7f1bf6c68f0077" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: This plugin is included in &lt;code&gt;@babel/preset-env&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;NOTE&lt;/strong&gt;: This plugin is included in &lt;code&gt;@babel/preset-env&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2c018ec421a1a50537dd6b2d5dbbf3f91dc0477e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you do not have a &lt;code&gt;package.json&lt;/code&gt;, create one before installing. This will ensure proper interaction with the &lt;code&gt;npx&lt;/code&gt; command.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; &lt;code&gt;package.json&lt;/code&gt; がない場合は、インストールする前に作成してください。これにより、 &lt;code&gt;npx&lt;/code&gt; コマンドとの適切な相互作用が保証されます。</target>
        </trans-unit>
        <trans-unit id="56a73eded1f3d1879f9e0b11fb82e204302b4fca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Please install &lt;code&gt;@babel/cli&lt;/code&gt; and &lt;code&gt;@babel/core&lt;/code&gt; first before &lt;code&gt;npx babel&lt;/code&gt;, otherwise &lt;code&gt;npx&lt;/code&gt; will install out-of-dated &lt;code&gt;babel&lt;/code&gt; 6.x. Other than &lt;a href=&quot;https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b&quot;&gt;npx&lt;/a&gt;, you can also drop it inside of an &lt;a href=&quot;https://docs.npmjs.com/cli/run-script&quot;&gt;npm run script&lt;/a&gt; or you may instead execute with the relative path instead. &lt;code&gt;./node_modules/.bin/babel&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Note:&lt;/strong&gt; Please install &lt;code&gt;@babel/cli&lt;/code&gt; and &lt;code&gt;@babel/core&lt;/code&gt; first before &lt;code&gt;npx babel&lt;/code&gt; , otherwise &lt;code&gt;npx&lt;/code&gt; will install out-of-dated &lt;code&gt;babel&lt;/code&gt; 6.x. Other than &lt;a href=&quot;https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b&quot;&gt;npx&lt;/a&gt;, you can also drop it inside of an &lt;a href=&quot;https://docs.npmjs.com/cli/run-script&quot;&gt;npm run script&lt;/a&gt; or you may instead execute with the relative path instead. &lt;code&gt;./node_modules/.bin/babel&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="701e3c2f21517b04a56de8d0598b9ad1a32c4561" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; These instructions use the excellent &lt;a href=&quot;https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b&quot;&gt;npx&lt;/a&gt; command to run the locally installed executables. You can drop it inside of an &lt;a href=&quot;https://docs.npmjs.com/cli/run-script&quot;&gt;npm run script&lt;/a&gt; or you may instead execute with the relative path instead. &lt;code&gt;./node_modules/.bin/babel&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;これらの手順では、優れた&lt;a href=&quot;https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b&quot;&gt;npx&lt;/a&gt;コマンドを使用して、ローカルにインストールされた実行可能ファイルを実行します。&lt;a href=&quot;https://docs.npmjs.com/cli/run-script&quot;&gt;npm runスクリプト&lt;/a&gt;内にドロップするか、代わりに相対パスで実行することができます。 &lt;code&gt;./node_modules/.bin/babel&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="440adfd4ac7d9679c5b29689b4804fe7fa9bd396" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This also works for the other preset-year options below.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;これは、以下の他のプリセット年オプションでも機能します。</target>
        </trans-unit>
        <trans-unit id="4d45661f932646e8ef0dce1f3ae15a5e6480bcd0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This function internally makes use of &lt;a href=&quot;#apicache&quot;&gt;&lt;code&gt;api.cache&lt;/code&gt;&lt;/a&gt; mentioned above to ensure that Babel is aware that this build depends on a specific &lt;code&gt;envName&lt;/code&gt;. You should not use it alongside with &lt;code&gt;api.cache.forever()&lt;/code&gt; or &lt;code&gt;api.cache.never()&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Note:&lt;/strong&gt; This function internally makes use of &lt;a href=&quot;#apicache&quot;&gt; &lt;code&gt;api.cache&lt;/code&gt; &lt;/a&gt; mentioned above to ensure that Babel is aware that this build depends on a specific &lt;code&gt;envName&lt;/code&gt; . You should not use it alongside with &lt;code&gt;api.cache.forever()&lt;/code&gt; or &lt;code&gt;api.cache.never()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f8cfa5eceadf4d85c9bff7da80b38368d453b925" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;@babel/register&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; support compiling native Node.js ES modules on the fly, since currently there is no stable API for intercepting ES modules loading.</source>
          <target state="translated">&lt;strong&gt;Note:&lt;/strong&gt; &lt;code&gt;@babel/register&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; support compiling native Node.js ES modules on the fly, since currently there is no stable API for intercepting ES modules loading.</target>
        </trans-unit>
        <trans-unit id="1884cdfa60ba48980b662b025f75e0ba67f99cbb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Options&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Options&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="48ef28a28db132add06834ec1f9ba844b3da6090" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Out (different based on environment)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;アウト（環境によって異なる）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="00adbfe07e375bea326090e91d816f7e98826cac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Out (if environment doesn't support it)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Out (if environment doesn't support it)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e284c24b2cccc74550dd90de5cb1975fd708f99d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Out (if environment supports it)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Out (if environment supports it)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2032588791ecedbcb24ab9392b080190cd628ef6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Out with options&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Out with options&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="784cd952bf9a2af0d16a6848e341718dd703b3fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Out&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Out&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="01f5812725a835b302ed17f2457a2d76e56cefac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Q&lt;/strong&gt;: Why doesn't Babel allow export of a &lt;code&gt;var&lt;/code&gt; or &lt;code&gt;let&lt;/code&gt;?</source>
          <target state="translated">&lt;strong&gt;Q&lt;/strong&gt;: Why doesn't Babel allow export of a &lt;code&gt;var&lt;/code&gt; or &lt;code&gt;let&lt;/code&gt; ?</target>
        </trans-unit>
        <trans-unit id="2d6f091283bd06c75ce0959653bd234e127b806d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reference&lt;/strong&gt;: &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty#Internet_Explorer_8_specific_notes&quot;&gt;MDN&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;参照&lt;/strong&gt;：&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty#Internet_Explorer_8_specific_notes&quot;&gt;MDN&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e6f5729e90e264b8561584a2e46f37be5bb395fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Refs&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Refs&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c88dc34ad65d29648dfdcc27824cdf4c4d7b3177" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Single plugin&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Single plugin&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="069981d30201062f1d84fba6839814bb616c2097" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source map&lt;/strong&gt; support so you can debug your compiled code with ease.</source>
          <target state="translated">&lt;strong&gt;Source map&lt;/strong&gt; support so you can debug your compiled code with ease.</target>
        </trans-unit>
        <trans-unit id="cbe66b6d76fa373039836d3ae3dcbe08340d9b06" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Spread Operator&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;スプレッドオペレーター&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6c3355553ac691ee526afb2db196e0c6c440b3c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Stage 1&lt;/strong&gt;: proposal</source>
          <target state="translated">&lt;strong&gt;ステージ1&lt;/strong&gt;：提案</target>
        </trans-unit>
        <trans-unit id="1ec3a1796628206a14bd80c76c14c47a131e6637" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Stage 2:&lt;/strong&gt; draft</source>
          <target state="translated">&lt;strong&gt;ステージ2：&lt;/strong&gt;ドラフト</target>
        </trans-unit>
        <trans-unit id="70d03937f785ff4516a3323b3ee1c8ff116175c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Stage 3&lt;/strong&gt;: candidate</source>
          <target state="translated">&lt;strong&gt;ステージ3&lt;/strong&gt;：候補者</target>
        </trans-unit>
        <trans-unit id="57552505bbaf1203868ac7ee94a0bc41f69133fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Syntax&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Syntax&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cbf6ef6ca9711721143cd5451d0f837c178c88ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip:&lt;/strong&gt; Use &lt;code&gt;rlwrap&lt;/code&gt; to get a REPL with input history</source>
          <target state="translated">&lt;strong&gt;ヒント：&lt;/strong&gt;入力履歴を含むREPLを取得するには、 &lt;code&gt;rlwrap&lt;/code&gt; を使用します</target>
        </trans-unit>
        <trans-unit id="c49a02d9bd480f41790fe2bfcf7ed769fe466aac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unix&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Unix&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7e4b44373dbcb3c573be341ec468c8f0ab9a76ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What is it?&lt;/strong&gt; A first version of what will be in the specification. At this point, an eventual inclusion of the feature in the standard is likely.</source>
          <target state="translated">&lt;strong&gt;それは何ですか？&lt;/strong&gt;仕様に含まれるものの最初のバージョン。この時点で、最終的に標準に機能が含まれる可能性があります。</target>
        </trans-unit>
        <trans-unit id="731fc6b5b09a9283b44e71e7fdb600fecf130ab3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What is it?&lt;/strong&gt; A formal proposal for the feature.</source>
          <target state="translated">&lt;strong&gt;それは何ですか？&lt;/strong&gt;機能の正式な提案。</target>
        </trans-unit>
        <trans-unit id="d98add4a8c6f3e26990f3bfa97fef0db14890ddd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What is it?&lt;/strong&gt; The proposal is mostly finished and now needs feedback from implementations and users to progress further.</source>
          <target state="translated">&lt;strong&gt;それは何ですか？&lt;/strong&gt;提案はほとんど完了しており、さらに進めるには実装とユーザーからのフィードバックが必要です。</target>
        </trans-unit>
        <trans-unit id="ab731607a969b9cb117a790463dcbd854bcbd143" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What&amp;rsquo;s next?&lt;/strong&gt; By accepting a proposal for stage 1, TC39 declares its willingness to examine, discuss and contribute to the proposal. Going forward, major changes to the proposal are expected</source>
          <target state="translated">&lt;strong&gt;次は何ですか？&lt;/strong&gt;ステージ1の提案を受け入れることにより、TC39はその提案を調査、議論、および貢献する意思があることを宣言します。今後、提案に大きな変更が加えられる予定です</target>
        </trans-unit>
        <trans-unit id="0e416823d481dd956847812b418667bbe73a7841" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What&amp;rsquo;s next?&lt;/strong&gt; Henceforth, changes should only be made in response to critical issues raised by the implementations and their use.</source>
          <target state="translated">&lt;strong&gt;次は何ですか？&lt;/strong&gt;今後、変更は、実装とその使用によって発生した重大な問題に対応する場合にのみ行う必要があります。</target>
        </trans-unit>
        <trans-unit id="88e4f7710e30120f9a9f19c87ff7824cc518a8c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What&amp;rsquo;s next?&lt;/strong&gt; Only incremental changes are expected from now on.</source>
          <target state="translated">&lt;strong&gt;次は何ですか？&lt;/strong&gt;今後は、増分変更のみが予想されます。</target>
        </trans-unit>
        <trans-unit id="3a36466fb6c6213dba26580e4b1a9c449186d358" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What&amp;rsquo;s required?&lt;/strong&gt; A so-called champion must be identified who is responsible for the proposal. Either the champion or a co-champion must be a member of TC39 (source). The problem solved by the proposal must be described in prose. The solution must be described via examples, an API and a discussion of semantics and algorithms. Lastly, potential obstacles for the proposal must be identified, such as interactions with other features and implementation challenges. Implementation-wise, polyfills and demos are needed.</source>
          <target state="translated">&lt;strong&gt;何が必要ですか？&lt;/strong&gt;提案を担当するいわゆるチャンピオンを特定する必要があります。チャンピオンまたは共同チャンピオンのいずれかがTC39（ソース）のメンバーである必要があります。提案によって解決された問題は散文で記述されなければなりません。ソリューションは、例、API、およびセマンティクスとアルゴリズムの説明を通じて説明する必要があります。最後に、他の機能との相互作用や実装の課題など、提案の潜在的な障害を特定する必要があります。実装に関しては、ポリフィルとデモが必要です。</target>
        </trans-unit>
        <trans-unit id="8f4c809f6dfeb6f0dc4480aaf2b07274e2eac728" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What&amp;rsquo;s required?&lt;/strong&gt; The proposal must now additionally have a formal description of the syntax and semantics of the feature (using the formal language of the ECMAScript specification). The description should be as complete as possible, but can contain todos and placeholders. Two experimental implementations of the feature are needed, but one of them can be in a transpiler such as Babel.</source>
          <target state="translated">&lt;strong&gt;何が必要ですか？&lt;/strong&gt;提案には、機能の構文とセマンティクスの正式な説明が追加されている必要があります（ECMAScript仕様の正式な言語を使用）。説明はできるだけ完全にする必要がありますが、ToDoやプレースホルダーを含めることができます。この機能の2つの実験的な実装が必要ですが、そのうちの1つはBabelなどのトランスパイラーに含めることができます。</target>
        </trans-unit>
        <trans-unit id="07722e0b863d54d226cde832815b692cd3700ace" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What&amp;rsquo;s required?&lt;/strong&gt; The spec text must be complete. Designated reviewers (appointed by TC39, not by the champion) and the ECMAScript spec editor must sign off on the spec text. There must be at least two spec-compliant implementations (which don&amp;rsquo;t have to be enabled by default).</source>
          <target state="translated">&lt;strong&gt;何が必要ですか？&lt;/strong&gt;仕様テキストは完全でなければなりません。指定レビュアー（チャンピオンではなくTC39が任命）とECMAScript仕様エディターは、仕様テキストを承認する必要があります。少なくとも2つの仕様に準拠した実装が必要です（デフォルトで有効にする必要はありません）。</target>
        </trans-unit>
        <trans-unit id="2e7058bdb64fc275154ed0654de3318580ea49ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Windows&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Windows&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="caeb05f51f3591bf695bdeedf4f63e51cde2df9b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Workaround&lt;/strong&gt;: Enable the &lt;code&gt;allowNamespaces&lt;/code&gt; option.</source>
          <target state="translated">&lt;strong&gt;Workaround&lt;/strong&gt;: Enable the &lt;code&gt;allowNamespaces&lt;/code&gt; option.</target>
        </trans-unit>
        <trans-unit id="c4d2ed28f6fae4a93ff7c5dd7b3d73b91de7dfff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Workaround&lt;/strong&gt;: Explicitly refer to values not in the same namespace definition, even if they would be in the scope according to TypeScript. Examples:</source>
          <target state="translated">&lt;strong&gt;Workaround&lt;/strong&gt;: Explicitly refer to values not in the same namespace definition, even if they would be in the scope according to TypeScript. Examples:</target>
        </trans-unit>
        <trans-unit id="137a5df410d127888a80a1d4861753a7575c5840" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Workaround&lt;/strong&gt;: Use &lt;code&gt;const&lt;/code&gt;. If some form of mutation is required, explicitly use an object with internal mutability.</source>
          <target state="translated">&lt;strong&gt;Workaround&lt;/strong&gt;: Use &lt;code&gt;const&lt;/code&gt; . If some form of mutation is required, explicitly use an object with internal mutability.</target>
        </trans-unit>
        <trans-unit id="7d1927fe01d74e3310177a01805934ecba42c38a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Workarounds&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Workarounds&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="2c40a5c20882f7b33c247f445809d3907de2c408" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;allowAwaitOutsideFunction&lt;/strong&gt;: By default, &lt;code&gt;await&lt;/code&gt; use is only allowed inside of an async function or, when the &lt;code&gt;topLevelAwait&lt;/code&gt; plugin is enabled, in the top-level scope of modules. Set this to &lt;code&gt;true&lt;/code&gt; to also accept it in the top-level scope of scripts. This option is discouraged in favor of &lt;code&gt;topLevelAwait&lt;/code&gt; plugin.</source>
          <target state="translated">&lt;strong&gt;allowAwaitOutsideFunction&lt;/strong&gt;: By default, &lt;code&gt;await&lt;/code&gt; use is only allowed inside of an async function or, when the &lt;code&gt;topLevelAwait&lt;/code&gt; plugin is enabled, in the top-level scope of modules. Set this to &lt;code&gt;true&lt;/code&gt; to also accept it in the top-level scope of scripts. This option is discouraged in favor of &lt;code&gt;topLevelAwait&lt;/code&gt; plugin.</target>
        </trans-unit>
        <trans-unit id="8f61363b11dcd91bd77fb00e058fdd3a7206d721" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;allowImportExportEverywhere&lt;/strong&gt;: By default, &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;export&lt;/code&gt; declarations can only appear at a program's top level. Setting this option to &lt;code&gt;true&lt;/code&gt; allows them anywhere where a statement is allowed.</source>
          <target state="translated">&lt;strong&gt;allowImportExportEverywhere&lt;/strong&gt;: By default, &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;export&lt;/code&gt; declarations can only appear at a program's top level. Setting this option to &lt;code&gt;true&lt;/code&gt; allows them anywhere where a statement is allowed.</target>
        </trans-unit>
        <trans-unit id="769832b80d27d23c5320f51c3416ecdf86d9b955" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;allowReturnOutsideFunction&lt;/strong&gt;: By default, a return statement at the top level raises an error. Set this to &lt;code&gt;true&lt;/code&gt; to accept such code.</source>
          <target state="translated">&lt;strong&gt;allowReturnOutsideFunction&lt;/strong&gt;: By default, a return statement at the top level raises an error. Set this to &lt;code&gt;true&lt;/code&gt; to accept such code.</target>
        </trans-unit>
        <trans-unit id="cf9fcb0362ee7b7d8315feb6b3ee2393b62573f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;allowSuperOutsideMethod&lt;/strong&gt;: By default, &lt;code&gt;super&lt;/code&gt; use is not allowed outside of class and object methods. Set this to &lt;code&gt;true&lt;/code&gt; to accept such code.</source>
          <target state="translated">&lt;strong&gt;allowSuperOutsideMethod&lt;/strong&gt;: By default, &lt;code&gt;super&lt;/code&gt; use is not allowed outside of class and object methods. Set this to &lt;code&gt;true&lt;/code&gt; to accept such code.</target>
        </trans-unit>
        <trans-unit id="599f4dfdcc40539e9b2e2a520bf2853e38a818b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;allowUndeclaredExports&lt;/strong&gt;: By default, exporting an identifier that was not declared in the current module scope will raise an error. While this behavior is required by the ECMAScript modules specification, Babel's parser cannot anticipate transforms later in the plugin pipeline that might insert the appropriate declarations, so it is sometimes important to set this option to &lt;code&gt;true&lt;/code&gt; to prevent the parser from prematurely complaining about undeclared exports that will be added later.</source>
          <target state="translated">&lt;strong&gt;allowUndeclaredExports&lt;/strong&gt;: By default, exporting an identifier that was not declared in the current module scope will raise an error. While this behavior is required by the ECMAScript modules specification, Babel's parser cannot anticipate transforms later in the plugin pipeline that might insert the appropriate declarations, so it is sometimes important to set this option to &lt;code&gt;true&lt;/code&gt; to prevent the parser from prematurely complaining about undeclared exports that will be added later.</target>
        </trans-unit>
        <trans-unit id="207d2d20f740a249c216fa142e0e96fd9bc76332" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;browserslist&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;browserslist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9e05ff48eade0c92b871063a7cdf98c8f3bbb782" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;createParenthesizedExpressions&lt;/strong&gt;: By default, the parser sets &lt;code&gt;extra.parenthesized&lt;/code&gt; on the expression nodes. When this option is set to &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;ParenthesizedExpression&lt;/code&gt; AST nodes are created instead.</source>
          <target state="translated">&lt;strong&gt;createParenthesizedExpressions&lt;/strong&gt;: By default, the parser sets &lt;code&gt;extra.parenthesized&lt;/code&gt; on the expression nodes. When this option is set to &lt;code&gt;true&lt;/code&gt; , &lt;code&gt;ParenthesizedExpression&lt;/code&gt; AST nodes are created instead.</target>
        </trans-unit>
        <trans-unit id="645a8ed433fae4d856ea197a6f90f44059c1c1d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;errorRecovery&lt;/strong&gt;: By default, Babel always throws an error when it finds some invalid code. When this option is set to &lt;code&gt;true&lt;/code&gt;, it will store the parsing error and try to continue parsing the invalid input file. The resulting AST will have an &lt;code&gt;errors&lt;/code&gt; property representing an array of all the parsing errors. Note that even when this option is enabled, &lt;code&gt;@babel/parser&lt;/code&gt; could throw for unrecoverable errors.</source>
          <target state="translated">&lt;strong&gt;errorRecovery&lt;/strong&gt;: By default, Babel always throws an error when it finds some invalid code. When this option is set to &lt;code&gt;true&lt;/code&gt; , it will store the parsing error and try to continue parsing the invalid input file. The resulting AST will have an &lt;code&gt;errors&lt;/code&gt; property representing an array of all the parsing errors. Note that even when this option is enabled, &lt;code&gt;@babel/parser&lt;/code&gt; could throw for unrecoverable errors.</target>
        </trans-unit>
        <trans-unit id="d89e6d9d943b8b2ed21fbfd1825f07263c7eb5fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;package.json&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;package.json&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6998375ee3ae6a1ff5927b172f51f101e74d4299" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;plugins&lt;/strong&gt;: Array containing the plugins that you want to enable.</source>
          <target state="translated">&lt;strong&gt;plugins&lt;/strong&gt;: Array containing the plugins that you want to enable.</target>
        </trans-unit>
        <trans-unit id="44c221c38e640bea9e524cf7d21505e89c61aaea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ranges&lt;/strong&gt;: Adds a &lt;code&gt;range&lt;/code&gt; property to each node: &lt;code&gt;[node.start, node.end]&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;範囲&lt;/strong&gt;：各ノードに &lt;code&gt;range&lt;/code&gt; プロパティを追加します： &lt;code&gt;[node.start, node.end]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9b5a5d8ed240be4f085df47bb762ba111d75ebc2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;sourceFilename&lt;/strong&gt;: Correlate output AST nodes with their source filename. Useful when generating code and source maps from the ASTs of multiple input files.</source>
          <target state="translated">&lt;strong&gt;sourceFilename&lt;/strong&gt;：出力ASTノードをそれらのソースファイル名と相関させます。複数の入力ファイルのASTからコードとソースマップを生成するときに便利です。</target>
        </trans-unit>
        <trans-unit id="6278138bd99b9d6affa36ad2b1bc728ed608eaa3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;sourceType&lt;/strong&gt;: Indicate the mode the code should be parsed in. Can be one of &lt;code&gt;&quot;script&quot;&lt;/code&gt;, &lt;code&gt;&quot;module&quot;&lt;/code&gt;, or &lt;code&gt;&quot;unambiguous&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;script&quot;&lt;/code&gt;. &lt;code&gt;&quot;unambiguous&quot;&lt;/code&gt; will make @babel/parser attempt to &lt;em&gt;guess&lt;/em&gt;, based on the presence of ES6 &lt;code&gt;import&lt;/code&gt; or &lt;code&gt;export&lt;/code&gt; statements. Files with ES6 &lt;code&gt;import&lt;/code&gt;s and &lt;code&gt;export&lt;/code&gt;s are considered &lt;code&gt;&quot;module&quot;&lt;/code&gt; and are otherwise &lt;code&gt;&quot;script&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;sourceType&lt;/strong&gt;：コードを解析するモードを示します。 &lt;code&gt;&quot;script&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;module&quot;&lt;/code&gt; 、または &lt;code&gt;&quot;unambiguous&quot;&lt;/code&gt; いずれかになります。デフォルトは &lt;code&gt;&quot;script&quot;&lt;/code&gt; です。 &lt;code&gt;&quot;unambiguous&quot;&lt;/code&gt; は、ES6の &lt;code&gt;import&lt;/code&gt; または &lt;code&gt;export&lt;/code&gt; ステートメントの存在に基づいて、@ babel / parserが&lt;em&gt;推測を&lt;/em&gt;試みるようにします。 ES6の &lt;code&gt;import&lt;/code&gt; と &lt;code&gt;export&lt;/code&gt; ファイルは &lt;code&gt;&quot;module&quot;&lt;/code&gt; と見なされ、それ以外の場合は &lt;code&gt;&quot;script&quot;&lt;/code&gt; と見なされます。</target>
        </trans-unit>
        <trans-unit id="c4a7dbf76422efabd4e653a30b251e2da9119a7a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;startLine&lt;/strong&gt;: By default, the first line of code parsed is treated as line 1. You can provide a line number to alternatively start with. Useful for integration with other source tools.</source>
          <target state="translated">&lt;strong&gt;startLine&lt;/strong&gt;：デフォルトでは、解析されたコードの最初の行は1行目として扱われます。代わりに開始する行番号を指定できます。他のソースツールとの統合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="1ff4671abc1b246aa41adcd6b173893f5ff44aee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;stdout&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;stdout&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9290bd1a8fa37005cedcf67fa6fd382f40f0ae6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;strictMode&lt;/strong&gt;: By default, ECMAScript code is parsed as strict only if a &lt;code&gt;&quot;use strict&quot;;&lt;/code&gt; directive is present or if the parsed file is an ECMAScript module. Set this option to &lt;code&gt;true&lt;/code&gt; to always parse files in strict mode.</source>
          <target state="translated">&lt;strong&gt;strictMode&lt;/strong&gt;：デフォルトでは、ECMAScriptコードは &lt;code&gt;&quot;use strict&quot;;&lt;/code&gt; &lt;strong&gt;usestrict &lt;/strong&gt;」の場合にのみstrictとして解析されます。ディレクティブが存在するか、解析されたファイルがECMAScriptモジュールの場合。このオプションを &lt;code&gt;true&lt;/code&gt; に設定すると、ファイルは常に厳密モードで解析されます。</target>
        </trans-unit>
        <trans-unit id="1dadb2e1e61160ca8a1c6a851cb745930827ed81" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tokens&lt;/strong&gt;: Adds all parsed tokens to a &lt;code&gt;tokens&lt;/code&gt; property on the &lt;code&gt;File&lt;/code&gt; node</source>
          <target state="translated">&lt;strong&gt;tokens&lt;/strong&gt;：解析されたすべてのトークンを &lt;code&gt;File&lt;/code&gt; ノードの &lt;code&gt;tokens&lt;/code&gt; プロパティに追加します</target>
        </trans-unit>
        <trans-unit id="59e8842b88bd2bab6059a02e005320507a95ae97" translate="yes" xml:space="preserve">
          <source>@babel/cli</source>
          <target state="translated">@babel/cli</target>
        </trans-unit>
        <trans-unit id="ea2b4f20278e6201156991026977a25b46cbce6a" translate="yes" xml:space="preserve">
          <source>@babel/code-frame</source>
          <target state="translated">@babel/code-frame</target>
        </trans-unit>
        <trans-unit id="9ad38b6faf7056b3fe3c1a2387b7e07f0974fa67" translate="yes" xml:space="preserve">
          <source>@babel/core</source>
          <target state="translated">@babel/core</target>
        </trans-unit>
        <trans-unit id="eec057cebef010e0c04926937e98d170b1cb476a" translate="yes" xml:space="preserve">
          <source>@babel/generator</source>
          <target state="translated">@babel/generator</target>
        </trans-unit>
        <trans-unit id="1f5922f60250feddb4977d17cc8ace0fb564de65" translate="yes" xml:space="preserve">
          <source>@babel/helpers</source>
          <target state="translated">@babel/helpers</target>
        </trans-unit>
        <trans-unit id="cc6b13a61c3aa0115b90b6a51b11fb02f658eaee" translate="yes" xml:space="preserve">
          <source>@babel/parser</source>
          <target state="translated">@babel/parser</target>
        </trans-unit>
        <trans-unit id="5e43044b122a168918752837bcadad2320027614" translate="yes" xml:space="preserve">
          <source>@babel/plugin-external-helpers</source>
          <target state="translated">@babel/plugin-external-helpers</target>
        </trans-unit>
        <trans-unit id="aa1c9fc7974628b03bdcdbcea4e66bbcc039d600" translate="yes" xml:space="preserve">
          <source>@babel/plugin-proposal-async-generator-functions</source>
          <target state="translated">@babel/plugin-proposal-async-generator-functions</target>
        </trans-unit>
        <trans-unit id="e5603fa1d20c01b683325364608db0914d996667" translate="yes" xml:space="preserve">
          <source>@babel/plugin-proposal-class-properties</source>
          <target state="translated">@babel/plugin-proposal-class-properties</target>
        </trans-unit>
        <trans-unit id="88cd87d240195253f1bb72f4002f6f0b2f93224f" translate="yes" xml:space="preserve">
          <source>@babel/plugin-proposal-class-static-block</source>
          <target state="translated">@babel/plugin-proposal-class-static-block</target>
        </trans-unit>
        <trans-unit id="66d2fc7accce8ab84361584b252d72321f09a64c" translate="yes" xml:space="preserve">
          <source>@babel/plugin-proposal-decorators</source>
          <target state="translated">@babel/plugin-proposal-decorators</target>
        </trans-unit>
        <trans-unit id="6fbb87eb8195b3c692912d5b2a58d7cb8e50f2de" translate="yes" xml:space="preserve">
          <source>@babel/plugin-proposal-do-expressions</source>
          <target state="translated">@babel/plugin-proposal-do-expressions</target>
        </trans-unit>
        <trans-unit id="c38b6b88a7432c0858cbf5b5a7e244b0e03d9f1f" translate="yes" xml:space="preserve">
          <source>@babel/plugin-proposal-export-default-from</source>
          <target state="translated">@babel/plugin-proposal-export-default-from</target>
        </trans-unit>
        <trans-unit id="d6b38982c292f2c06e1ed31bb811d4ba02339471" translate="yes" xml:space="preserve">
          <source>@babel/plugin-proposal-export-namespace-from</source>
          <target state="translated">@babel/plugin-proposal-export-namespace-from</target>
        </trans-unit>
        <trans-unit id="7d26e4cbbc8c38a5628a3ea6ab40f97641f0711b" translate="yes" xml:space="preserve">
          <source>@babel/plugin-proposal-function-bind</source>
          <target state="translated">@babel/plugin-proposal-function-bind</target>
        </trans-unit>
        <trans-unit id="7e10b3835d05976f17074628d30c4ac73cd16dc2" translate="yes" xml:space="preserve">
          <source>@babel/plugin-proposal-function-sent</source>
          <target state="translated">@babel/plugin-proposal-function-sent</target>
        </trans-unit>
        <trans-unit id="53e2925c2d21c624b4ae296bffe0969bb3941f54" translate="yes" xml:space="preserve">
          <source>@babel/plugin-proposal-logical-assignment-operators</source>
          <target state="translated">@babel/plugin-proposal-logical-assignment-operators</target>
        </trans-unit>
        <trans-unit id="a429445068c6ddb567392ab838bc8ff183144f22" translate="yes" xml:space="preserve">
          <source>@babel/plugin-proposal-nullish-coalescing-operator</source>
          <target state="translated">@babel/plugin-proposal-nullish-coalescing-operator</target>
        </trans-unit>
        <trans-unit id="6e1d8119c82bad9f89e5190751b073c059528d9a" translate="yes" xml:space="preserve">
          <source>@babel/plugin-proposal-numeric-separator</source>
          <target state="translated">@babel/plugin-proposal-numeric-separator</target>
        </trans-unit>
        <trans-unit id="618b7bf4c8f03455a2f80e0f794738600eb45a61" translate="yes" xml:space="preserve">
          <source>@babel/plugin-proposal-object-rest-spread</source>
          <target state="translated">@babel/plugin-proposal-object-rest-spread</target>
        </trans-unit>
        <trans-unit id="d1abcb154f975fdb5536a65579880ea26f3c012d" translate="yes" xml:space="preserve">
          <source>@babel/plugin-proposal-optional-catch-binding</source>
          <target state="translated">@babel/plugin-proposal-optional-catch-binding</target>
        </trans-unit>
        <trans-unit id="6d039c0ce2a824d3767432ae5c6c82a0105fc708" translate="yes" xml:space="preserve">
          <source>@babel/plugin-proposal-optional-chaining</source>
          <target state="translated">@babel/plugin-proposal-optional-chaining</target>
        </trans-unit>
        <trans-unit id="afeda4fc01a77cc5c1cc9abdaf3f8a961d78a971" translate="yes" xml:space="preserve">
          <source>@babel/plugin-proposal-partial-application</source>
          <target state="translated">@babel/plugin-proposal-partial-application</target>
        </trans-unit>
        <trans-unit id="a2aefe87d679fcc77d2306052d99525c81c6842e" translate="yes" xml:space="preserve">
          <source>@babel/plugin-proposal-pipeline-operator</source>
          <target state="translated">@babel/plugin-proposal-pipeline-operator</target>
        </trans-unit>
        <trans-unit id="22ae76a84fb8cd3addfc93dbe42509ed49bc157d" translate="yes" xml:space="preserve">
          <source>@babel/plugin-proposal-private-methods</source>
          <target state="translated">@babel/plugin-proposal-private-methods</target>
        </trans-unit>
        <trans-unit id="0fd82ac1f7cc2b9f15271adbbb7fb14801882098" translate="yes" xml:space="preserve">
          <source>@babel/plugin-proposal-private-property-in-object</source>
          <target state="translated">@babel/plugin-proposal-private-property-in-object</target>
        </trans-unit>
        <trans-unit id="6a51e5890b9ae2e11a581b89069fe64ed9f43093" translate="yes" xml:space="preserve">
          <source>@babel/plugin-proposal-throw-expressions</source>
          <target state="translated">@babel/plugin-proposal-throw-expressions</target>
        </trans-unit>
        <trans-unit id="67c8e88007869298f841b20bd2745a8136268caa" translate="yes" xml:space="preserve">
          <source>@babel/plugin-proposal-unicode-property-regex</source>
          <target state="translated">@babel/plugin-proposal-unicode-property-regex</target>
        </trans-unit>
        <trans-unit id="59aa98537133c98579275563fb590c6743d4d018" translate="yes" xml:space="preserve">
          <source>@babel/plugin-syntax-dynamic-import</source>
          <target state="translated">@babel/plugin-syntax-dynamic-import</target>
        </trans-unit>
        <trans-unit id="539b32607060fc5b6fd8fc3b7120263b92ba98ec" translate="yes" xml:space="preserve">
          <source>@babel/plugin-syntax-jsx</source>
          <target state="translated">@babel/plugin-syntax-jsx</target>
        </trans-unit>
        <trans-unit id="2d1c9015bd47327d83321bc4720a1a89d7a511c6" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-arrow-functions</source>
          <target state="translated">@babel/plugin-transform-arrow-functions</target>
        </trans-unit>
        <trans-unit id="184a1d6de215232f353d3eef5c35bb19c418bce5" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-async-to-generator</source>
          <target state="translated">@babel/plugin-transform-async-to-generator</target>
        </trans-unit>
        <trans-unit id="4d846bf8c3fb0458c0fb7d2220a14a24760f1615" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-block-scoped-functions</source>
          <target state="translated">@babel/plugin-transform-block-scoped-functions</target>
        </trans-unit>
        <trans-unit id="451ef59dad0f0f981fa1a5c6a7e6a03bd7ec692d" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-block-scoping</source>
          <target state="translated">@babel/plugin-transform-block-scoping</target>
        </trans-unit>
        <trans-unit id="333101aebed5ec25f48e50e80315a7413a496674" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-classes</source>
          <target state="translated">@babel/plugin-transform-classes</target>
        </trans-unit>
        <trans-unit id="19e2763c86b6ee217585829c52a97672bcf9002e" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-computed-properties</source>
          <target state="translated">@babel/plugin-transform-computed-properties</target>
        </trans-unit>
        <trans-unit id="23553f6f3a3f300b53cb05d4cbb1e03859c05ab2" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-destructuring</source>
          <target state="translated">@babel/plugin-transform-destructuring</target>
        </trans-unit>
        <trans-unit id="8f433c6ef0e4fc89626e779bb2aa58cdefa0729a" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-dotall-regex</source>
          <target state="translated">@babel/plugin-transform-dotall-regex</target>
        </trans-unit>
        <trans-unit id="59a555d8c6cb5ec7cecd33622518ce3cf162af1f" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-duplicate-keys</source>
          <target state="translated">@babel/plugin-transform-duplicate-keys</target>
        </trans-unit>
        <trans-unit id="b2c77299d23823baa1b27247d0a98b74fa2d6e27" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-exponentiation-operator</source>
          <target state="translated">@babel/plugin-transform-exponentiation-operator</target>
        </trans-unit>
        <trans-unit id="0cb8791162bf449fa71bd367a3e1b10c9732ea9c" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-flow-strip-types</source>
          <target state="translated">@babel/plugin-transform-flow-strip-types</target>
        </trans-unit>
        <trans-unit id="cca15ef57fdc967aef56fdb7fad6013462326df6" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-for-of</source>
          <target state="translated">@babel/plugin-transform-for-of</target>
        </trans-unit>
        <trans-unit id="163ee158de2dd1ec027364aa31ec673bd06d8be6" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-function-name</source>
          <target state="translated">@babel/plugin-transform-function-name</target>
        </trans-unit>
        <trans-unit id="c26e6f9dc80b3d87f672bce4eef71cd90acc45cf" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-inline-consecutive-adds</source>
          <target state="translated">@babel/plugin-transform-inline-consecutive-adds</target>
        </trans-unit>
        <trans-unit id="d804f565d825e7d660350f4731d4b9fdf9889400" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-instanceof</source>
          <target state="translated">@babel/plugin-transform-instanceof</target>
        </trans-unit>
        <trans-unit id="fbf849b9202616602e871b882452e5564a08db88" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-jscript</source>
          <target state="translated">@babel/plugin-transform-jscript</target>
        </trans-unit>
        <trans-unit id="50528d8cae7cc0f7a527706c2c8fc17ed8eb4620" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-literals</source>
          <target state="translated">@babel/plugin-transform-literals</target>
        </trans-unit>
        <trans-unit id="8936361fd288347660fd9a426e02b2efa7750738" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-member-expression-literals</source>
          <target state="translated">@babel/plugin-transform-member-expression-literals</target>
        </trans-unit>
        <trans-unit id="85b5f0b31260220c297b2a4575822e112351479f" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-modules-amd</source>
          <target state="translated">@babel/plugin-transform-modules-amd</target>
        </trans-unit>
        <trans-unit id="d166584910b0e87d415125b214364493421d722b" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-modules-commonjs</source>
          <target state="translated">@babel/plugin-transform-modules-commonjs</target>
        </trans-unit>
        <trans-unit id="9a70f17d6fee8e09f8f2d5023997c0e902dd66b4" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-modules-systemjs</source>
          <target state="translated">@babel/plugin-transform-modules-systemjs</target>
        </trans-unit>
        <trans-unit id="938272a6d12b8184b42ce7019875214030a06b77" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-modules-umd</source>
          <target state="translated">@babel/plugin-transform-modules-umd</target>
        </trans-unit>
        <trans-unit id="db5061c6b2da09ee139bddab97172422248fb41c" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-named-capturing-groups-regex</source>
          <target state="translated">@babel/plugin-transform-named-capturing-groups-regex</target>
        </trans-unit>
        <trans-unit id="22e96e5effe325d5e5acdf3a7669a77d3be10cd1" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-new-target</source>
          <target state="translated">@babel/plugin-transform-new-target</target>
        </trans-unit>
        <trans-unit id="2b1e799250c16fce62fd0440ba3b1102bedc4e2e" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-object-assign</source>
          <target state="translated">@babel/plugin-transform-object-assign</target>
        </trans-unit>
        <trans-unit id="cf4c5cb8258f6a5f7660da77437d3e2b13511cbc" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-object-set-prototype-of-to-assign</source>
          <target state="translated">@babel/plugin-transform-object-set-prototype-of-to-assign</target>
        </trans-unit>
        <trans-unit id="06c9c3f5ecd4cb84713e0f132cc8ca5985ee4f32" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-object-super</source>
          <target state="translated">@babel/plugin-transform-object-super</target>
        </trans-unit>
        <trans-unit id="07d10a95ba7c17e8e73b22adac8c6618da43a53a" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-parameters</source>
          <target state="translated">@babel/plugin-transform-parameters</target>
        </trans-unit>
        <trans-unit id="b81bc79957d9ba19407563d962a458dcf2e5e613" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-property-literals</source>
          <target state="translated">@babel/plugin-transform-property-literals</target>
        </trans-unit>
        <trans-unit id="ec4b082ba8d6f3aa7c6bd619dbdac78f8ee0c6b3" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-property-mutators</source>
          <target state="translated">@babel/plugin-transform-property-mutators</target>
        </trans-unit>
        <trans-unit id="8f9c1cb1d7a213196b6c378c388f6e4c86355c54" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-proto-to-assign</source>
          <target state="translated">@babel/plugin-transform-proto-to-assign</target>
        </trans-unit>
        <trans-unit id="3626ba6677f85ee064edf4dbebb745766525fe5f" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-react-constant-elements</source>
          <target state="translated">@babel/plugin-transform-react-constant-elements</target>
        </trans-unit>
        <trans-unit id="7ea10db3dbc88fa23bd237005dc7f8291c1baa4d" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-react-display-name</source>
          <target state="translated">@babel/plugin-transform-react-display-name</target>
        </trans-unit>
        <trans-unit id="bd5e3e2a586637d310f461670006c16af57bbd54" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-react-inline-elements</source>
          <target state="translated">@babel/plugin-transform-react-inline-elements</target>
        </trans-unit>
        <trans-unit id="2997d0549ae676359669641072389f3bc58a30d2" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-react-jsx</source>
          <target state="translated">@babel/plugin-transform-react-jsx</target>
        </trans-unit>
        <trans-unit id="347bd888a3b96ba2028233dde6f1208768b53559" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-react-jsx-compat</source>
          <target state="translated">@babel/plugin-transform-react-jsx-compat</target>
        </trans-unit>
        <trans-unit id="8fd9165b5683fd216d9c44121750ad19ee6c2995" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-react-jsx-self</source>
          <target state="translated">@babel/plugin-transform-react-jsx-self</target>
        </trans-unit>
        <trans-unit id="b8098921396612f460af104164d73eb78ef41b00" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-react-jsx-source</source>
          <target state="translated">@babel/plugin-transform-react-jsx-source</target>
        </trans-unit>
        <trans-unit id="842e7239955b23cc541702281f8921aa684fb42a" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-regenerator</source>
          <target state="translated">@babel/plugin-transform-regenerator</target>
        </trans-unit>
        <trans-unit id="085f91100ee568203cc4993ca2bd4d00f8965752" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-reserved-words</source>
          <target state="translated">@babel/plugin-transform-reserved-words</target>
        </trans-unit>
        <trans-unit id="89f7b98bc54b6df4e7b8bdc29214fed6bbba1097" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-runtime</source>
          <target state="translated">@babel/plugin-transform-runtime</target>
        </trans-unit>
        <trans-unit id="37dd53c8ab02ff36d10b623577cf04348b8e5ea2" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-shorthand-properties</source>
          <target state="translated">@babel/plugin-transform-shorthand-properties</target>
        </trans-unit>
        <trans-unit id="ef7d89e968cfbeb07a71d54e9446a33b92e1e726" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-spread</source>
          <target state="translated">@babel/plugin-transform-spread</target>
        </trans-unit>
        <trans-unit id="0e52af39cd68335039d0dab16f63b67a8bea0f15" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-sticky-regex</source>
          <target state="translated">@babel/plugin-transform-sticky-regex</target>
        </trans-unit>
        <trans-unit id="0ef21e82ee49f42c5eadd29c01a9300cd3ef7d38" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-strict-mode</source>
          <target state="translated">@babel/plugin-transform-strict-mode</target>
        </trans-unit>
        <trans-unit id="125f1bbbfcdee7dbc3815a63db8f69a873f4b940" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-template-literals</source>
          <target state="translated">@babel/plugin-transform-template-literals</target>
        </trans-unit>
        <trans-unit id="380fce300e61b985821fb837b2af2729843d5721" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-typeof-symbol</source>
          <target state="translated">@babel/plugin-transform-typeof-symbol</target>
        </trans-unit>
        <trans-unit id="0516ae0966c0487716f9f448d637497694e099b1" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-typescript</source>
          <target state="translated">@babel/plugin-transform-typescript</target>
        </trans-unit>
        <trans-unit id="2f4e7c26b13412a39ce288b99dadcf02c674c89b" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-unicode-escapes</source>
          <target state="translated">@babel/plugin-transform-unicode-escapes</target>
        </trans-unit>
        <trans-unit id="982922550f3f7e5b6328bd10f25a63216b8a30c6" translate="yes" xml:space="preserve">
          <source>@babel/plugin-transform-unicode-regex</source>
          <target state="translated">@babel/plugin-transform-unicode-regex</target>
        </trans-unit>
        <trans-unit id="8e9f056ac21597fd93229ac0e0b12eda61bf4ad0" translate="yes" xml:space="preserve">
          <source>@babel/polyfill</source>
          <target state="translated">@babel/polyfill</target>
        </trans-unit>
        <trans-unit id="94bcfc88a756e23839b601edf0e07fd42e9cd84f" translate="yes" xml:space="preserve">
          <source>@babel/preset-env</source>
          <target state="translated">@babel/preset-env</target>
        </trans-unit>
        <trans-unit id="02f70ced672f730fbd9bf25939abab23d3fe3eda" translate="yes" xml:space="preserve">
          <source>@babel/preset-flow</source>
          <target state="translated">@babel/preset-flow</target>
        </trans-unit>
        <trans-unit id="4535fe9ac0b7b558a7e92b96dc290feab0da6bb0" translate="yes" xml:space="preserve">
          <source>@babel/preset-react</source>
          <target state="translated">@babel/preset-react</target>
        </trans-unit>
        <trans-unit id="2dd10482b538ff00e1b4c703724bc4a5256d6cef" translate="yes" xml:space="preserve">
          <source>@babel/preset-stage-3</source>
          <target state="translated">@babel/preset-stage-3</target>
        </trans-unit>
        <trans-unit id="2a36ca77aa36b817d7257af95e1d3877cb634b2d" translate="yes" xml:space="preserve">
          <source>@babel/preset-typescript</source>
          <target state="translated">@babel/preset-typescript</target>
        </trans-unit>
        <trans-unit id="2810089f5492504ec7f00bd81630f7aadac243b6" translate="yes" xml:space="preserve">
          <source>@babel/register</source>
          <target state="translated">@babel/register</target>
        </trans-unit>
        <trans-unit id="410505898848540a479f8b798c3bc1fd6d746160" translate="yes" xml:space="preserve">
          <source>@babel/runtime</source>
          <target state="translated">@babel/runtime</target>
        </trans-unit>
        <trans-unit id="526b477d50d68ae2ed618fe82a0e30f11cd2b63e" translate="yes" xml:space="preserve">
          <source>@babel/runtime-corejs2</source>
          <target state="translated">@babel/runtime-corejs2</target>
        </trans-unit>
        <trans-unit id="f0f451fdf2dc9b4c3bab29f536d42846dfed188c" translate="yes" xml:space="preserve">
          <source>@babel/template</source>
          <target state="translated">@babel/template</target>
        </trans-unit>
        <trans-unit id="125468756c65ac0be9ecd2ea8f482fc4334fc453" translate="yes" xml:space="preserve">
          <source>@babel/traverse</source>
          <target state="translated">@babel/traverse</target>
        </trans-unit>
        <trans-unit id="73be35d5bdb080d36775ff9f664d3750b1924638" translate="yes" xml:space="preserve">
          <source>@babel/types</source>
          <target state="translated">@babel/types</target>
        </trans-unit>
        <trans-unit id="187d9e582e50006b5b78614b2eec3fdef6a5f2cc" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://github.com/isaacs/minimatch&quot;&gt;glob&lt;/a&gt;, regex, or mixed array of both, matching paths to &lt;strong&gt;only&lt;/strong&gt; compile. Can also be an array of arrays containing paths to explicitly match. When attempting to compile a non-matching file it&amp;rsquo;s returned verbatim.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/isaacs/minimatch&quot;&gt;グロブ&lt;/a&gt;へのパスと一致する両方の、正規表現、または混合配列、&lt;strong&gt;のみ&lt;/strong&gt;コンパイル。明示的に一致するパスを含む配列の配列にすることもできます。一致しないファイルをコンパイルしようとすると、そのまま返されます。</target>
        </trans-unit>
        <trans-unit id="09b27b29808a9b315870e49cb874d3614a702f08" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;babelrc&lt;/code&gt; value passed in the programmatic options will override one set within a configuration file.</source>
          <target state="translated">&lt;code&gt;babelrc&lt;/code&gt; のプログラム的なオプションに渡された値は、構成ファイル内の1セットを上書きします。</target>
        </trans-unit>
        <trans-unit id="bc59f2f02bd201d07ed8fb05d80351032739902d" translate="yes" xml:space="preserve">
          <source>A JavaScript parser (used in Babel)</source>
          <target state="translated">JavaScript パーサー (Babel で使用)</target>
        </trans-unit>
        <trans-unit id="0f4e2538aeb8eadf79c425b053b6ba11443a1d3b" translate="yes" xml:space="preserve">
          <source>A class with a static block will be transformed into a static private property, whose initializer is the static block wrapped in an IIAFE (immediate invoked arrow function expression).</source>
          <target state="translated">静的ブロックを持つクラスは静的プライベート・プロパティに変換され、そのイニシャライザは静的ブロックをIIAFE(即時に呼び出される矢印関数式)で包んだものになります。</target>
        </trans-unit>
        <trans-unit id="0d9bc96b702d2826c98e026f2a91e4a68ed71d91" translate="yes" xml:space="preserve">
          <source>A date implementation could be:</source>
          <target state="translated">日付の実装は、可能性があります。</target>
        </trans-unit>
        <trans-unit id="d45993e4e3404590d1d2fcbe51fd1ad790bc68d7" translate="yes" xml:space="preserve">
          <source>A function that can decide whether a given comment should be included in the output code from Babel.</source>
          <target state="translated">与えられたコメントを Babel からの出力コードに含めるかどうかを決めることができる関数。</target>
        </trans-unit>
        <trans-unit id="969aa1c5c1e2d33b13b4bcfb1c2f123f8f690bc2" translate="yes" xml:space="preserve">
          <source>A hard-coded ID to use for the module. Cannot be used alongside &lt;code&gt;getModuleId&lt;/code&gt;.</source>
          <target state="translated">モジュールに使用するハードコードされたID。 &lt;code&gt;getModuleId&lt;/code&gt; と一緒に使用することはできません。</target>
        </trans-unit>
        <trans-unit id="7af35fcbfaf0d4ae66581d8e16f238c6ccf4ae15" translate="yes" xml:space="preserve">
          <source>A list of default extensions supported by babel (&quot;.js&quot;, &quot;.jsx&quot;, &quot;.es6&quot;, &quot;.es&quot;, &quot;.mjs&quot;). This list is used by @babel/register and @babel/cli to determine which files need transpiling. Extending this list isn't possible, however @babel/cli does provide ways to support other extensions with &lt;code&gt;--extensions&lt;/code&gt;.</source>
          <target state="translated">babelでサポートされているデフォルトの拡張子のリスト（ &quot;.js&quot;、 &quot;。jsx&quot;、 &quot;。es6&quot;、 &quot;。es&quot;、 &quot;。mjs&quot;）。このリストは、@ babel / registerと@babel / cliが、トランスパイルが必要なファイルを判別するために使用します。このリストを拡張することはできませんが、@ babel / cliは &lt;code&gt;--extensions&lt;/code&gt; を使用して他の拡張機能をサポートする方法を提供します。</target>
        </trans-unit>
        <trans-unit id="bdddccaf06877be94230211fbcbb27d53bd159fd" translate="yes" xml:space="preserve">
          <source>A path to an &lt;code&gt;.babelrc&lt;/code&gt; file to extend</source>
          <target state="translated">拡張する &lt;code&gt;.babelrc&lt;/code&gt; ファイルへのパス</target>
        </trans-unit>
        <trans-unit id="a9443d91cfea30cc6c5859f24ac13eecc5c93c0c" translate="yes" xml:space="preserve">
          <source>A pattern to search for when looking for Identifier and StringLiteral nodes that should be considered placeholders. 'false' will disable placeholder searching entirely, leaving only the 'placeholderWhitelist' value to find placeholders.</source>
          <target state="translated">プレースホルダとみなされるべき Identifier ノードおよび StringLiteral ノードを探す際に検索するパターン。false' を指定すると、プレースホルダの検索を完全に無効にし、'placeholderWhitelist' の値のみを使用してプレースホルダを検索します。</target>
        </trans-unit>
        <trans-unit id="cc9bd0fdd07c1c2fb24611b4113a5eff5a1e2f57" translate="yes" xml:space="preserve">
          <source>A plugin that enables the re-use of Babel's injected helper code to save on codesize.</source>
          <target state="translated">Babelの注入されたヘルパーコードを再利用してコードサイズを節約できるようにするプラグインです。</target>
        </trans-unit>
        <trans-unit id="5272f6ddd75fb8881f08003481fe5a569f11899d" translate="yes" xml:space="preserve">
          <source>A plugin/preset target can come from a few different sources:</source>
          <target state="translated">プラグイン/プリセットのターゲットは、いくつかの異なるソースから来ることができます。</target>
        </trans-unit>
        <trans-unit id="5575491f4cd781d59a200abdab210b7e19e78631" translate="yes" xml:space="preserve">
          <source>A query to select browsers (ex: last 2 versions, &amp;gt; 5%) using &lt;a href=&quot;https://github.com/ai/browserslist&quot;&gt;browserslist&lt;/a&gt;.</source>
          <target state="translated">クエリは、ブラウザ（例：過去2つのバージョン、&amp;gt; 5％）を選択するために使用して&lt;a href=&quot;https://github.com/ai/browserslist&quot;&gt;browserslistを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="71896cdd86a75ac2221f2ddbd0265b72682df734" translate="yes" xml:space="preserve">
          <source>A query to select browsers (ex: last 2 versions, &amp;gt; 5%, safari tp) using &lt;a href=&quot;https://github.com/ai/browserslist&quot;&gt;browserslist&lt;/a&gt;.</source>
          <target state="translated">使用：ブラウザ（最後の2つのバージョン、&amp;gt; 5％、サファリTP EX）を選択するクエリ&lt;a href=&quot;https://github.com/ai/browserslist&quot;&gt;browserslistを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4e05441a4be5f3e677b704bdceda984462180d1b" translate="yes" xml:space="preserve">
          <source>A root for all relative URLs in the source map</source>
          <target state="translated">ソース マップ内のすべての相対 URL のルート</target>
        </trans-unit>
        <trans-unit id="17bf52f330c0e65a5771d74dae6853bc68efed42" translate="yes" xml:space="preserve">
          <source>A root path to include on generated module names.</source>
          <target state="translated">生成されたモジュール名に含めるルートパス。</target>
        </trans-unit>
        <trans-unit id="e4059dc370f99c8439614cdf2677b4a5ad50acb4" translate="yes" xml:space="preserve">
          <source>A set of placeholder names to automatically accept. Items in this list do not need to match the given placeholder pattern.</source>
          <target state="translated">自動的に受け入れるプレースホルダ名のセット。このリストの項目は、指定されたプレースホルダパターンと一致する必要はありません。</target>
        </trans-unit>
        <trans-unit id="a906bc0a9c9d6d1310bcd421d643609a9ddec2e9" translate="yes" xml:space="preserve">
          <source>A source map object that the output source map will be based on.</source>
          <target state="translated">出力ソース マップのベースとなるソース マップ オブジェクト。</target>
        </trans-unit>
        <trans-unit id="1dbba9bfee442f2c70e6925aa61e50ef67926fa6" translate="yes" xml:space="preserve">
          <source>A way to apply &lt;code&gt;babel-preset-env&lt;/code&gt; for polyfills (via &amp;ldquo;babel-polyfill&amp;rdquo;).</source>
          <target state="translated">ポリフィルにbabel-preset &lt;code&gt;babel-preset-env&lt;/code&gt; を適用する方法（「babel-polyfill」を使用）。</target>
        </trans-unit>
        <trans-unit id="cd964f025cbb45c6aa9935c99dd9e23bb085574c" translate="yes" xml:space="preserve">
          <source>AMD / UMD / SystemJS module options</source>
          <target state="translated">AMD/UMD/SystemJSモジュールオプション</target>
        </trans-unit>
        <trans-unit id="90399428ebe34dc12d19dbdb5b44bf7a15262017" translate="yes" xml:space="preserve">
          <source>AMD / UMD / SystemJS options</source>
          <target state="translated">AMD/UMD/SystemJSオプション</target>
        </trans-unit>
        <trans-unit id="c38b49d2e79d38adcd8c243a81884a9847a7527f" translate="yes" xml:space="preserve">
          <source>ANSI highlight syntax error code frames</source>
          <target state="translated">ANSIハイライト構文エラーコードフレーム</target>
        </trans-unit>
        <trans-unit id="d93d10ff0fbef1b4aa0ddc24e10e907746d3c85a" translate="yes" xml:space="preserve">
          <source>API</source>
          <target state="translated">API</target>
        </trans-unit>
        <trans-unit id="2e2831468742fcd6c4cd319d17911c4ed1effa9d" translate="yes" xml:space="preserve">
          <source>AST for JSX code is based on &lt;a href=&quot;https://github.com/facebook/jsx/blob/master/AST.md&quot;&gt;Facebook JSX AST&lt;/a&gt;.</source>
          <target state="translated">JSXコードのASTは、&lt;a href=&quot;https://github.com/facebook/jsx/blob/master/AST.md&quot;&gt;Facebook JSXASTに&lt;/a&gt;基づいています。</target>
        </trans-unit>
        <trans-unit id="dddd06acd9991a82d0e70e1a095becddeeada303" translate="yes" xml:space="preserve">
          <source>AST from Multiple Sources</source>
          <target state="translated">複数のソースからのAST</target>
        </trans-unit>
        <trans-unit id="6b61fc189ffecb78f9a850322ce8f767da86ca91" translate="yes" xml:space="preserve">
          <source>AST results</source>
          <target state="translated">AST結果</target>
        </trans-unit>
        <trans-unit id="908839201b7ae218df8dc4c5ace189a145a97b02" translate="yes" xml:space="preserve">
          <source>Abrupt completions</source>
          <target state="translated">突然の完成</target>
        </trans-unit>
        <trans-unit id="5f1c409a78883e510744c2c89ea9682c20fdbe67" translate="yes" xml:space="preserve">
          <source>Absolute paths pass through untouched.</source>
          <target state="translated">絶対的な道は、手つかずの状態で通過します。</target>
        </trans-unit>
        <trans-unit id="5d2fbe23b9fc2c0e441773d5d45c4265f0596d8e" translate="yes" xml:space="preserve">
          <source>Acceptable inputs:</source>
          <target state="translated">受け入れ可能な入力。</target>
        </trans-unit>
        <trans-unit id="8a147db9305ca3c2f2e6e0e0486031c940621f24" translate="yes" xml:space="preserve">
          <source>Accessing deeply nested properties</source>
          <target state="translated">深い入れ子になっているプロパティへのアクセス</target>
        </trans-unit>
        <trans-unit id="3b1f23f264ca0c479262505f72d671a7ded23fa2" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;displayName&lt;/code&gt; to &lt;code&gt;React.createClass&lt;/code&gt; calls</source>
          <target state="translated">&lt;code&gt;React.createClass&lt;/code&gt; 呼び出しに &lt;code&gt;displayName&lt;/code&gt; を追加します。</target>
        </trans-unit>
        <trans-unit id="05fa4d936c0f51e96908101b1e0399440a82d163" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;supportsDynamicImport&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;supportsDynamicImport&lt;/code&gt; 追加DynamicImport</target>
        </trans-unit>
        <trans-unit id="335861a25cbb382a989b61649e7fcdb4998081b8" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;supportsExportNamespaceFrom&lt;/code&gt;</source>
          <target state="translated">supportExportNamespaceFromを追加 &lt;code&gt;supportsExportNamespaceFrom&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c24551a2c72b54c1c09864546f1ae70e0e6ebfc9" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;supportsTopLevelAwait&lt;/code&gt;</source>
          <target state="translated">supportTopLevelAwaitを追加 &lt;code&gt;supportsTopLevelAwait&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f7cfbf1beefd13dc5ba401644ef0e209c1f4e6c9" translate="yes" xml:space="preserve">
          <source>Add a runtime check to ensure the functions are not instantiated.</source>
          <target state="translated">関数がインスタンス化されていないことを確認するためのランタイムチェックを追加します。</target>
        </trans-unit>
        <trans-unit id="13f24149cf353cda48e251dc6e70d1cbe4ce9f6f" translate="yes" xml:space="preserve">
          <source>Add displayName to React.createClass calls.</source>
          <target state="translated">React.createClassの呼び出しにdisplayNameを追加します。</target>
        </trans-unit>
        <trans-unit id="1d3cfb315440352b6cf8ed31da117be81985536b" translate="yes" xml:space="preserve">
          <source>Add names to arrow functions.</source>
          <target state="translated">矢印関数に名前を追加します。</target>
        </trans-unit>
        <trans-unit id="0b0c297dadd1f7d3c99cc987506c3f9ab8e3fec3" translate="yes" xml:space="preserve">
          <source>Add the following line to your &lt;code&gt;.babelrc&lt;/code&gt; file:</source>
          <target state="translated">&lt;code&gt;.babelrc&lt;/code&gt; ファイルに次の行を追加します。</target>
        </trans-unit>
        <trans-unit id="9e5791b2719a81dcc43ae9de2d19c787078f2ab7" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;--copy-ignored&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--copy-ignored&lt;/code&gt; を追加しました</target>
        </trans-unit>
        <trans-unit id="104abea96cb0ca6f0312acf485a9e85a1e8db32e" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;allowUndeclaredExports&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;allowUndeclaredExports&lt;/code&gt; を追加しました</target>
        </trans-unit>
        <trans-unit id="7aa1ac991832622cc439563bb5b678270ea6b58f" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;classPrivateMethods&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;classPrivateMethods&lt;/code&gt; を追加しました</target>
        </trans-unit>
        <trans-unit id="87d457c7e8f863853de7fff0dcaa04c0efc73756" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;classStaticBlock&lt;/code&gt;, &lt;code&gt;moduleStringNames&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;classStaticBlock&lt;/code&gt; 、 &lt;code&gt;moduleStringNames&lt;/code&gt; を追加しました</target>
        </trans-unit>
        <trans-unit id="6ac968f2d1f1ed0c223c86e29ac383404f6a99ac" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;createParenthesizedExpressions&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;createParenthesizedExpressions&lt;/code&gt; を追加しました</target>
        </trans-unit>
        <trans-unit id="23c2d0a156417122426d809a3b1b356a77994dda" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;decimal&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;decimal&lt;/code&gt; 追加</target>
        </trans-unit>
        <trans-unit id="bec8cd8ffac5475440897a9e5495776b41e664a1" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;errorRecovery&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;errorRecovery&lt;/code&gt; を追加しました</target>
        </trans-unit>
        <trans-unit id="5b7ed58bb82a3eeb0abd47550ed17ead8cb75597" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;partialApplication&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;partialApplication&lt;/code&gt; を追加しました</target>
        </trans-unit>
        <trans-unit id="5ab35cf31e70f100469218698e2e3dafdca8d0eb" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;privateIn&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;privateIn&lt;/code&gt; を追加しました</target>
        </trans-unit>
        <trans-unit id="a180de26808ebcaf428c6145f74a1630e3ad07c6" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;recordAndTuple&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;recordAndTuple&lt;/code&gt; を追加しました</target>
        </trans-unit>
        <trans-unit id="b040f5a429c312aee61235be88ec973df7b0b97a" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;topLevelAwait&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;topLevelAwait&lt;/code&gt; を追加しました</target>
        </trans-unit>
        <trans-unit id="4db80a6c6caa088a9d6e80d95c16cc191686d6df" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;v8intrinsic&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;v8intrinsic&lt;/code&gt; を追加しました</target>
        </trans-unit>
        <trans-unit id="15a3f142463adc8862a7a7ed28bc9963a8819b06" translate="yes" xml:space="preserve">
          <source>Added in &lt;code&gt;v7.11.0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;v7.11.0&lt;/code&gt; で追加</target>
        </trans-unit>
        <trans-unit id="6dfe1482cba785fe0fccb0d60f6f6f3011af889e" translate="yes" xml:space="preserve">
          <source>Added in &lt;code&gt;v7.7.0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;v7.7.0&lt;/code&gt; で追加</target>
        </trans-unit>
        <trans-unit id="4701863d1a7bb241f94c0e9f9d956ba1c96b5285" translate="yes" xml:space="preserve">
          <source>Added in: &lt;code&gt;v7.1.0&lt;/code&gt;</source>
          <target state="translated">追加： &lt;code&gt;v7.1.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fac46e5bd8fb27f8a99d1263034b384f0fe4a9a7" translate="yes" xml:space="preserve">
          <source>Added in: &lt;code&gt;v7.10.0&lt;/code&gt;</source>
          <target state="translated">追加： &lt;code&gt;v7.10.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0986306e4ce9698199b4e5ba5b96e4d85943ca34" translate="yes" xml:space="preserve">
          <source>Added in: &lt;code&gt;v7.10.0&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;, defaults to &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">追加： &lt;code&gt;v7.10.0&lt;/code&gt; &lt;code&gt;string&lt;/code&gt; 、デフォルトは &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aceda3f7accc05f29fdf97f2abc564239ce25682" translate="yes" xml:space="preserve">
          <source>Added in: &lt;code&gt;v7.2.0&lt;/code&gt;</source>
          <target state="translated">追加： &lt;code&gt;v7.2.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4b2de22e6f71ca7ecd538e60713a5c269bd7bc7e" translate="yes" xml:space="preserve">
          <source>Added in: &lt;code&gt;v7.4.0&lt;/code&gt;</source>
          <target state="translated">追加： &lt;code&gt;v7.4.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="26a608f497c3c6dedf32e93e1cdaa22333c0487a" translate="yes" xml:space="preserve">
          <source>Added in: &lt;code&gt;v7.5.0&lt;/code&gt;</source>
          <target state="translated">追加： &lt;code&gt;v7.5.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="34b56ee30ce134670cd14944704fe93019f9ed07" translate="yes" xml:space="preserve">
          <source>Added in: &lt;code&gt;v7.6.0&lt;/code&gt;</source>
          <target state="translated">追加： &lt;code&gt;v7.6.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c15434efb3102db495748442d49cfe254e7d0cad" translate="yes" xml:space="preserve">
          <source>Added in: &lt;code&gt;v7.7.0&lt;/code&gt;</source>
          <target state="translated">追加： &lt;code&gt;v7.7.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="07835af2b92282de50cd7ed2dfe51aaf3a9076de" translate="yes" xml:space="preserve">
          <source>Added in: &lt;code&gt;v7.8.0&lt;/code&gt;</source>
          <target state="translated">追加： &lt;code&gt;v7.8.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="285518630d179e92955a9bd8b6e4597481006e6c" translate="yes" xml:space="preserve">
          <source>Added in: &lt;code&gt;v7.9.0&lt;/code&gt;</source>
          <target state="translated">追加： &lt;code&gt;v7.9.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="20c125229e32d5e629a6ec93c83aa778343139e3" translate="yes" xml:space="preserve">
          <source>Adding a new parameter would only change one line in the function declaration and one line for each usage:</source>
          <target state="translated">新しいパラメータを追加すると、関数宣言の1行だけが変更され、使用法ごとに1行だけが変更されます。</target>
        </trans-unit>
        <trans-unit id="ecfe29ef8fcfc7c6552fb9793fd0884a7b9c0a8b" translate="yes" xml:space="preserve">
          <source>Additional Information</source>
          <target state="translated">追加情報</target>
        </trans-unit>
        <trans-unit id="248f4b1d5f1fbf2c751d265cb6d00b9909f20801" translate="yes" xml:space="preserve">
          <source>Additionally, this plugin cannot transform all &lt;code&gt;Reflect.construct&lt;/code&gt; cases when using &lt;code&gt;newTarget&lt;/code&gt; with ES5 function classes (transformed ES6 classes).</source>
          <target state="translated">さらに、このプラグインは、ES5関数クラス（変換されたES6クラス）で &lt;code&gt;newTarget&lt;/code&gt; を使用する場合、すべての &lt;code&gt;Reflect.construct&lt;/code&gt; ケースを変換することはできません。</target>
        </trans-unit>
        <trans-unit id="2ce124842e3dc745e2ac51220e9a8f7101332c9e" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;__self&lt;/code&gt; prop to JSX elements, which React will use to generate some runtime warnings.</source>
          <target state="translated">&lt;code&gt;__self&lt;/code&gt; プロパティをJSX要素に追加します。Reactはこれを使用して、いくつかのランタイム警告を生成します。</target>
        </trans-unit>
        <trans-unit id="f001b198d447257e61c21416980c1078aedf770a" translate="yes" xml:space="preserve">
          <source>Adds __self prop to JSX elements, which React will use to generate some runtime warnings.</source>
          <target state="translated">JSX要素に__selfプロップを追加し、Reactがいくつかの実行時警告を生成するために使用します。</target>
        </trans-unit>
        <trans-unit id="039067cd0efd1b5d71a2ab2a313f7ceb90a2e99a" translate="yes" xml:space="preserve">
          <source>Adds source file and line number to JSX elements.</source>
          <target state="translated">JSX要素にソースファイルと行番号を追加します。</target>
        </trans-unit>
        <trans-unit id="b4f7ccc4b96d5dbff4114ebaeec78f6e069f05bb" translate="yes" xml:space="preserve">
          <source>Adds specific imports for polyfills when they are used in each file. We take advantage of the fact that a bundler will load the same polyfill only once.</source>
          <target state="translated">各ファイルでポリフィルを使用する際に、ポリフィルの特定のインポートを追加します。バンドラが同じポリフィルを一度だけ読み込むという事実を利用しています。</target>
        </trans-unit>
        <trans-unit id="9d10a7ec5a67294fdc53a8d82e7eb1f2ec2e3641" translate="yes" xml:space="preserve">
          <source>Adjust the number of lines to show above the error.</source>
          <target state="translated">エラーの上に表示する行数を調整します。</target>
        </trans-unit>
        <trans-unit id="5470d07a181dff91be0fd1079229bf30646cb89a" translate="yes" xml:space="preserve">
          <source>Adjust the number of lines to show below the error.</source>
          <target state="translated">エラーの下に表示する行数を調整します。</target>
        </trans-unit>
        <trans-unit id="7fed357d53f5eec945c93058292f44bea8707d5c" translate="yes" xml:space="preserve">
          <source>Advanced APIs</source>
          <target state="translated">高度なAPI</target>
        </trans-unit>
        <trans-unit id="ec9c1eee60a6c8d412e86494c4538774b81ce815" translate="yes" xml:space="preserve">
          <source>Advanced Usage</source>
          <target state="translated">高度な使用法</target>
        </trans-unit>
        <trans-unit id="7bda5857b1dc502720a3f60e07ed43ae1c72d4e6" translate="yes" xml:space="preserve">
          <source>After that finishes installing, your &lt;code&gt;package.json&lt;/code&gt; file should include:</source>
          <target state="translated">インストールが完了すると、 &lt;code&gt;package.json&lt;/code&gt; ファイルに次のものが含まれます。</target>
        </trans-unit>
        <trans-unit id="18968001fc9a3d00e669d34628d14b4d265ea6a1" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Binary&lt;/code&gt;, &lt;code&gt;Expression&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Binary&lt;/code&gt; 、 &lt;code&gt;Expression&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="50b23430018931edb10420b615f76cf58a86e1fb" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Expression&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Expression&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="60f01b0d1f2906aca933ca8725bee84758c37767" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Expression&lt;/code&gt;, &lt;code&gt;Conditional&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Expression&lt;/code&gt; 、 &lt;code&gt;Conditional&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e425c77667f844a1fa8e5c94c84eac69cdaa5004" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Expression&lt;/code&gt;, &lt;code&gt;ExpressionWrapper&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Expression&lt;/code&gt; 、 &lt;code&gt;ExpressionWrapper&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="80dc86530842af7d9b0b1f402a9496cc1e350ab2" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Expression&lt;/code&gt;, &lt;code&gt;LVal&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Expression&lt;/code&gt; 、 &lt;code&gt;LVal&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0b0780acdbd9ac60e1eb385c84237743ae01c869" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Expression&lt;/code&gt;, &lt;code&gt;Literal&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Expression&lt;/code&gt; 、 &lt;code&gt;Literal&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b725b6583b3203a17694c028ee710bcadba551e2" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Expression&lt;/code&gt;, &lt;code&gt;PatternLike&lt;/code&gt;, &lt;code&gt;LVal&lt;/code&gt;, &lt;code&gt;TSEntityName&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Expression&lt;/code&gt; 、 &lt;code&gt;PatternLike&lt;/code&gt; 、 &lt;code&gt;LVal&lt;/code&gt; 、 &lt;code&gt;TSEntityName&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5720806fbd77f7735ede96d092ad6877a1d677d0" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Expression&lt;/code&gt;, &lt;code&gt;Pureish&lt;/code&gt;, &lt;code&gt;Literal&lt;/code&gt;, &lt;code&gt;Immutable&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Expression&lt;/code&gt; 、 &lt;code&gt;Pureish&lt;/code&gt; 、 &lt;code&gt;Literal&lt;/code&gt; 、 &lt;code&gt;Immutable&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fc0f65607fe5437f146027319aa58724f7a2415a" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Expression&lt;/code&gt;, &lt;code&gt;Terminatorless&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Expression&lt;/code&gt; 、 &lt;code&gt;Terminatorless&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5dd70b739181ee3691f0f8575e75e922eff7456d" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Flow&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Flow&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2a6fd3402e3bd1e3f01d2d847440ae7331e9b322" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Flow&lt;/code&gt;, &lt;code&gt;ExpressionWrapper&lt;/code&gt;, &lt;code&gt;Expression&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Flow&lt;/code&gt; 、 &lt;code&gt;ExpressionWrapper&lt;/code&gt; 、 &lt;code&gt;Expression&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2b54158114b937257cf5316775d646e4224f684c" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Flow&lt;/code&gt;, &lt;code&gt;FlowBaseAnnotation&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Flow&lt;/code&gt; 、 &lt;code&gt;FlowBaseAnnotation&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="64f0122a45ba3e394da3196f93d87d6915318ac7" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Flow&lt;/code&gt;, &lt;code&gt;FlowDeclaration&lt;/code&gt;, &lt;code&gt;Statement&lt;/code&gt;, &lt;code&gt;Declaration&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Flow&lt;/code&gt; 、 &lt;code&gt;FlowDeclaration&lt;/code&gt; 、 &lt;code&gt;Statement&lt;/code&gt; 、 &lt;code&gt;Declaration&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="580699e19f930a2fbb1b1a90c1add564f8331e05" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Flow&lt;/code&gt;, &lt;code&gt;FlowPredicate&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Flow&lt;/code&gt; 、 &lt;code&gt;FlowPredicate&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="57ecec5f20c8380c92de0d372bd5a69f1f7b0222" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Flow&lt;/code&gt;, &lt;code&gt;FlowType&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Flow&lt;/code&gt; 、 &lt;code&gt;FlowType&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e1e8d50d5ee2e2e01098a4bbeda6684bd062b955" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Flow&lt;/code&gt;, &lt;code&gt;FlowType&lt;/code&gt;, &lt;code&gt;FlowBaseAnnotation&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Flow&lt;/code&gt; 、 &lt;code&gt;FlowType&lt;/code&gt; 、 &lt;code&gt;FlowBaseAnnotation&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2b0f9cbe624c2aeaec60ec18a9b3d9e67274a1ce" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Flow&lt;/code&gt;, &lt;code&gt;UserWhitespacable&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Flow&lt;/code&gt; 、 &lt;code&gt;UserWhitespacable&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e4f4b857cb65b67c2400c564641361ef7bc9c476" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Function&lt;/code&gt;, &lt;code&gt;Scopable&lt;/code&gt;, &lt;code&gt;BlockParent&lt;/code&gt;, &lt;code&gt;FunctionParent&lt;/code&gt;, &lt;code&gt;Method&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Function&lt;/code&gt; 、 &lt;code&gt;Scopable&lt;/code&gt; 、 &lt;code&gt;BlockParent&lt;/code&gt; 、 &lt;code&gt;FunctionParent&lt;/code&gt; 、 &lt;code&gt;Method&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7b937414ba8f0075da1a2c9d82355cba31aa266f" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;JSX&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;JSX&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3355df046826eca24cc92d5de6026d8e0121af50" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;JSX&lt;/code&gt;, &lt;code&gt;Expression&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;JSX&lt;/code&gt; 、 &lt;code&gt;Expression&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c0fb96c14ce6ea9077b98bbfd3c80d24f7c666f1" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;JSX&lt;/code&gt;, &lt;code&gt;Immutable&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;JSX&lt;/code&gt; 、 &lt;code&gt;Immutable&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4123217a5fb19bcfc19ec44a357dcb9833ca0866" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;JSX&lt;/code&gt;, &lt;code&gt;Immutable&lt;/code&gt;, &lt;code&gt;Expression&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;JSX&lt;/code&gt; 、 &lt;code&gt;Immutable&lt;/code&gt; 、 &lt;code&gt;Expression&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7538f875cb08e51e63ab9df9290b33e4ac83808b" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;LVal&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;LVal&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d1544483812b276b9fa2b7f0dc33f0a5f9b68414" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;LVal&lt;/code&gt;, &lt;code&gt;PatternLike&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;LVal&lt;/code&gt; 、 &lt;code&gt;PatternLike&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="689a07b489be73b61309904cf351e5795217d0f9" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;ModuleSpecifier&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;ModuleSpecifier&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ad5047b63ca72ad35a54fe0476791ad3cc16355d" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Pattern&lt;/code&gt;, &lt;code&gt;LVal&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Pattern&lt;/code&gt; 、 &lt;code&gt;LVal&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0c5495314429fa481f0f293b8a6ee91f2444948e" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Pattern&lt;/code&gt;, &lt;code&gt;PatternLike&lt;/code&gt;, &lt;code&gt;LVal&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Pattern&lt;/code&gt; 、 &lt;code&gt;PatternLike&lt;/code&gt; 、 &lt;code&gt;LVal&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="65c2905c15c395a450742419a39d49d4e117e676" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Private&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Private&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dcca6050c0a1d505d98dc0dc04eab1c7f3c197e2" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Property&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Property&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="747e6be41e08883fa4bbe5370c90d7237a9b0666" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Property&lt;/code&gt;, &lt;code&gt;Private&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Property&lt;/code&gt; 、 &lt;code&gt;Private&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4d8d8a18b2df226d06bd34d8645d32039dd4ccb2" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Scopable&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Scopable&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="faca8c2b1e65c359234eecbe617aceccfa91eb7c" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Scopable&lt;/code&gt;, &lt;code&gt;BlockParent&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Scopable&lt;/code&gt; 、 &lt;code&gt;BlockParent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="56151f8853106c21840ba21f766801c7c16f9691" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Scopable&lt;/code&gt;, &lt;code&gt;BlockParent&lt;/code&gt;, &lt;code&gt;Block&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Scopable&lt;/code&gt; 、 &lt;code&gt;BlockParent&lt;/code&gt; 、 &lt;code&gt;Block&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f06a13b6651d06c3d44c7cdf5e477d8bb9ba5ca8" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Scopable&lt;/code&gt;, &lt;code&gt;BlockParent&lt;/code&gt;, &lt;code&gt;Block&lt;/code&gt;, &lt;code&gt;FunctionParent&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Scopable&lt;/code&gt; 、 &lt;code&gt;BlockParent&lt;/code&gt; 、 &lt;code&gt;Block&lt;/code&gt; 、 &lt;code&gt;FunctionParent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9486acd827f3910c3f4b539348a72d0f26b046a8" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Scopable&lt;/code&gt;, &lt;code&gt;BlockParent&lt;/code&gt;, &lt;code&gt;Block&lt;/code&gt;, &lt;code&gt;Statement&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Scopable&lt;/code&gt; 、 &lt;code&gt;BlockParent&lt;/code&gt; 、 &lt;code&gt;Block&lt;/code&gt; 、 &lt;code&gt;Statement&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="21e0acb7e324ff5fc06fc2d95262cfd43aa91d61" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Scopable&lt;/code&gt;, &lt;code&gt;Class&lt;/code&gt;, &lt;code&gt;Expression&lt;/code&gt;, &lt;code&gt;Pureish&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Scopable&lt;/code&gt; 、 &lt;code&gt;Class&lt;/code&gt; 、 &lt;code&gt;Expression&lt;/code&gt; 、 &lt;code&gt;Pureish&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="017f86029677055610248177b0246b8ed752b819" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Scopable&lt;/code&gt;, &lt;code&gt;Class&lt;/code&gt;, &lt;code&gt;Statement&lt;/code&gt;, &lt;code&gt;Declaration&lt;/code&gt;, &lt;code&gt;Pureish&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Scopable&lt;/code&gt; 、 &lt;code&gt;Class&lt;/code&gt; 、 &lt;code&gt;Statement&lt;/code&gt; 、 &lt;code&gt;Declaration&lt;/code&gt; 、 &lt;code&gt;Pureish&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e77af6f8432a3b23ddf27880694464d30b5e1a94" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Scopable&lt;/code&gt;, &lt;code&gt;Function&lt;/code&gt;, &lt;code&gt;BlockParent&lt;/code&gt;, &lt;code&gt;FunctionParent&lt;/code&gt;, &lt;code&gt;Expression&lt;/code&gt;, &lt;code&gt;Pureish&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Scopable&lt;/code&gt; 、 &lt;code&gt;Function&lt;/code&gt; 、 &lt;code&gt;BlockParent&lt;/code&gt; 、 &lt;code&gt;FunctionParent&lt;/code&gt; 、 &lt;code&gt;Expression&lt;/code&gt; 、 &lt;code&gt;Pureish&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c5689d8c534635569f99a2b840322414b0b578b0" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Scopable&lt;/code&gt;, &lt;code&gt;Function&lt;/code&gt;, &lt;code&gt;BlockParent&lt;/code&gt;, &lt;code&gt;FunctionParent&lt;/code&gt;, &lt;code&gt;Statement&lt;/code&gt;, &lt;code&gt;Pureish&lt;/code&gt;, &lt;code&gt;Declaration&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Scopable&lt;/code&gt; 、 &lt;code&gt;Function&lt;/code&gt; 、 &lt;code&gt;BlockParent&lt;/code&gt; 、 &lt;code&gt;FunctionParent&lt;/code&gt; 、 &lt;code&gt;Statement&lt;/code&gt; 、 &lt;code&gt;Pureish&lt;/code&gt; 、 &lt;code&gt;Declaration&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0ecc9971af13f81408f442712b832477e41632d4" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Scopable&lt;/code&gt;, &lt;code&gt;Statement&lt;/code&gt;, &lt;code&gt;For&lt;/code&gt;, &lt;code&gt;BlockParent&lt;/code&gt;, &lt;code&gt;Loop&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Scopable&lt;/code&gt; 、 &lt;code&gt;Statement&lt;/code&gt; 、 &lt;code&gt;For&lt;/code&gt; 、 &lt;code&gt;BlockParent&lt;/code&gt; 、 &lt;code&gt;Loop&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5832b134f112d154eb3c365ffe84a4d1e39f7cf3" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Scopable&lt;/code&gt;, &lt;code&gt;Statement&lt;/code&gt;, &lt;code&gt;For&lt;/code&gt;, &lt;code&gt;BlockParent&lt;/code&gt;, &lt;code&gt;Loop&lt;/code&gt;, &lt;code&gt;ForXStatement&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Scopable&lt;/code&gt; 、 &lt;code&gt;Statement&lt;/code&gt; 、 &lt;code&gt;For&lt;/code&gt; 、 &lt;code&gt;BlockParent&lt;/code&gt; 、 &lt;code&gt;Loop&lt;/code&gt; 、 &lt;code&gt;ForXStatement&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dff7c515813b7b792d390a811f51ddc04eaaa1fc" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Statement&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Statement&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9ba7e8ab3d705ddf1508540e5ba2f8efd9cb4583" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Statement&lt;/code&gt;, &lt;code&gt;BlockParent&lt;/code&gt;, &lt;code&gt;Loop&lt;/code&gt;, &lt;code&gt;While&lt;/code&gt;, &lt;code&gt;Scopable&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Statement&lt;/code&gt; 、 &lt;code&gt;BlockParent&lt;/code&gt; 、 &lt;code&gt;Loop&lt;/code&gt; 、 &lt;code&gt;While&lt;/code&gt; 、 &lt;code&gt;Scopable&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="724440885d73c5a2867d7d70dd798df91253f9d2" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Statement&lt;/code&gt;, &lt;code&gt;BlockParent&lt;/code&gt;, &lt;code&gt;Scopable&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Statement&lt;/code&gt; 、 &lt;code&gt;BlockParent&lt;/code&gt; 、 &lt;code&gt;Scopable&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b22b70eeee13ce14b91324b71aac49929e7a7ae0" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Statement&lt;/code&gt;, &lt;code&gt;Conditional&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Statement&lt;/code&gt; 、 &lt;code&gt;Conditional&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="59473f679e4a63665d9d1f060224e94327b3012c" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Statement&lt;/code&gt;, &lt;code&gt;Declaration&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Statement&lt;/code&gt; 、 &lt;code&gt;Declaration&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa89669ee4ee8cdcfa9c21495cbf06a394ba9c6f" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Statement&lt;/code&gt;, &lt;code&gt;Declaration&lt;/code&gt;, &lt;code&gt;ModuleDeclaration&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Statement&lt;/code&gt; 、 &lt;code&gt;Declaration&lt;/code&gt; 、 &lt;code&gt;ModuleDeclaration&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0dca113de29e50d4cbe795ee2075160530ddc969" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Statement&lt;/code&gt;, &lt;code&gt;Declaration&lt;/code&gt;, &lt;code&gt;ModuleDeclaration&lt;/code&gt;, &lt;code&gt;ExportDeclaration&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Statement&lt;/code&gt; 、 &lt;code&gt;Declaration&lt;/code&gt; 、 &lt;code&gt;ModuleDeclaration&lt;/code&gt; 、 &lt;code&gt;ExportDeclaration&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe11d57ed043766e98cc12cb02fd14d0351615fa" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Statement&lt;/code&gt;, &lt;code&gt;ExpressionWrapper&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Statement&lt;/code&gt; 、 &lt;code&gt;ExpressionWrapper&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f24e2f0290c23ef3fb5d8cce0cf7c7dcfdbff6ea" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;Statement&lt;/code&gt;, &lt;code&gt;Terminatorless&lt;/code&gt;, &lt;code&gt;CompletionStatement&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;Statement&lt;/code&gt; 、 &lt;code&gt;Terminatorless&lt;/code&gt; 、 &lt;code&gt;CompletionStatement&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d38637521b6a4801e32ab782fbf31e3b05297037" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;TSEntityName&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;TSEntityName&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="febe4a04c92bd768ef0bda8ba22854919b8f5187" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;TSType&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;TSType&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4bf5845efd5305ec30b13f71897d6db8dca8374d" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;TSTypeElement&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;TSTypeElement&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="75ae579943b98a816b65517110aaca75079d1175" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;UnaryLike&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;UnaryLike&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ac76b0f94659b6dcad7551f9c22aa4c4b55499ba" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;UnaryLike&lt;/code&gt;, &lt;code&gt;Expression&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;UnaryLike&lt;/code&gt; 、 &lt;code&gt;Expression&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="91d920337dc040f2a55715fa86020d6cdd905558" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;UserWhitespacable&lt;/code&gt;, &lt;code&gt;Function&lt;/code&gt;, &lt;code&gt;Scopable&lt;/code&gt;, &lt;code&gt;BlockParent&lt;/code&gt;, &lt;code&gt;FunctionParent&lt;/code&gt;, &lt;code&gt;Method&lt;/code&gt;, &lt;code&gt;ObjectMember&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;UserWhitespacable&lt;/code&gt; 、 &lt;code&gt;Function&lt;/code&gt; 、 &lt;code&gt;Scopable&lt;/code&gt; 、 &lt;code&gt;BlockParent&lt;/code&gt; 、 &lt;code&gt;FunctionParent&lt;/code&gt; 、 &lt;code&gt;Method&lt;/code&gt; 、 &lt;code&gt;ObjectMember&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b7e85f699b1501d0fe3d40e7bceea8277fca3ede" translate="yes" xml:space="preserve">
          <source>Aliases: &lt;code&gt;UserWhitespacable&lt;/code&gt;, &lt;code&gt;Property&lt;/code&gt;, &lt;code&gt;ObjectMember&lt;/code&gt;</source>
          <target state="translated">エイリアス： &lt;code&gt;UserWhitespacable&lt;/code&gt; 、 &lt;code&gt;Property&lt;/code&gt; 、 &lt;code&gt;ObjectMember&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6454117b9397e87e38b714a5d75cfa44b2aae95e" translate="yes" xml:space="preserve">
          <source>Aliases: none</source>
          <target state="translated">エイリアス:なし</target>
        </trans-unit>
        <trans-unit id="0ed6cd542f6521d2632dd18b5076afb21c2b8415" translate="yes" xml:space="preserve">
          <source>All Babel API &lt;a href=&quot;../api/index&quot;&gt;options&lt;/a&gt; except the callbacks are allowed (because &lt;code&gt;.babelrc&lt;/code&gt; files are serialized as &lt;a href=&quot;https://github.com/json5/json5&quot;&gt;JSON5&lt;/a&gt;).</source>
          <target state="translated">コールバックを除くすべてのBabel API &lt;a href=&quot;../api/index&quot;&gt;オプション&lt;/a&gt;が許可されます（ &lt;code&gt;.babelrc&lt;/code&gt; ファイルは&lt;a href=&quot;https://github.com/json5/json5&quot;&gt;JSON5&lt;/a&gt;としてシリアル化されるため）。</target>
        </trans-unit>
        <trans-unit id="7ffc47d3efd68bb4a2a8dc2c589c53006ccb6e59" translate="yes" xml:space="preserve">
          <source>All of these behaviors can limit the flexibility of the &lt;code&gt;globals&lt;/code&gt; map. To remove these limitations, you can set the &lt;code&gt;exactGlobals&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt;. Doing this instructs the plugin to:</source>
          <target state="translated">これらの動作はすべて、 &lt;code&gt;globals&lt;/code&gt; マップの柔軟性を制限する可能性があります。これらの制限を取り除くには、 &lt;code&gt;exactGlobals&lt;/code&gt; オプションを &lt;code&gt;true&lt;/code&gt; に設定します。これを行うと、プラグインは次のようになります。</target>
        </trans-unit>
        <trans-unit id="7d928e2caa11515c10651f78b3e6e394fd829b5a" translate="yes" xml:space="preserve">
          <source>All optional newlines and whitespace will be omitted when generating code in compact mode.</source>
          <target state="translated">コンパクトモードでコードを生成する際には、すべてのオプションの改行と空白は省略されます。</target>
        </trans-unit>
        <trans-unit id="83c702ba1319d5c79659b22dceaf37fe44c64b8c" translate="yes" xml:space="preserve">
          <source>All subsequent files required by node with the extensions &lt;code&gt;.es6&lt;/code&gt;, &lt;code&gt;.es&lt;/code&gt;, &lt;code&gt;.jsx&lt;/code&gt; and &lt;code&gt;.js&lt;/code&gt; will be transformed by Babel.</source>
          <target state="translated">拡張子が &lt;code&gt;.es6&lt;/code&gt; 、 &lt;code&gt;.es&lt;/code&gt; 、 &lt;code&gt;.jsx&lt;/code&gt; 、 &lt;code&gt;.js&lt;/code&gt; のノードが必要とする後続のすべてのファイルは、Babelによって変換されます。</target>
        </trans-unit>
        <trans-unit id="1fe02ac96558730dd7f111eea79e3e2db34d0cfb" translate="yes" xml:space="preserve">
          <source>All subsequent files required by node with the extensions &lt;code&gt;.es6&lt;/code&gt;, &lt;code&gt;.es&lt;/code&gt;, &lt;code&gt;.jsx&lt;/code&gt;, &lt;code&gt;.mjs&lt;/code&gt;, and &lt;code&gt;.js&lt;/code&gt; will be transformed by Babel.</source>
          <target state="translated">拡張子が &lt;code&gt;.es6&lt;/code&gt; 、 &lt;code&gt;.es&lt;/code&gt; 、 &lt;code&gt;.jsx&lt;/code&gt; 、 &lt;code&gt;.mjs&lt;/code&gt; 、および &lt;code&gt;.js&lt;/code&gt; のノードに必要な後続のすべてのファイルは、Babelによって変換されます。</target>
        </trans-unit>
        <trans-unit id="706d4e01d1f1edcc420c9c9d5722ec1df62c5408" translate="yes" xml:space="preserve">
          <source>All transformations will use your local &lt;a href=&quot;../config-files/index&quot;&gt;configuration files&lt;/a&gt;.</source>
          <target state="translated">すべての変換は、ローカル&lt;a href=&quot;../config-files/index&quot;&gt;構成ファイル&lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="c2a9a10235ce198e433f3a3117b56d355c70a03f" translate="yes" xml:space="preserve">
          <source>All transformations will use your local configuration files (.babelrc or in package.json). See &lt;a href=&quot;#options&quot;&gt;options&lt;/a&gt; to disable it.</source>
          <target state="translated">すべての変換は、ローカル構成ファイル（.babelrcまたはpackage.json内）を使用します。それを無効にする&lt;a href=&quot;#options&quot;&gt;オプション&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="01460b5d03ad4c1f71352649015866ee54b5f259" translate="yes" xml:space="preserve">
          <source>All you need to compile what's in ES2015+</source>
          <target state="translated">ES2015+に入っているものをコンパイルするのに必要なものばかり</target>
        </trans-unit>
        <trans-unit id="e5fcbe96df9a4ec9e17d6233e9d4525666dd5bc6" translate="yes" xml:space="preserve">
          <source>All you need to use stage 0 (and greater) plugins</source>
          <target state="translated">ステージ0(以上)のプラグインを使用するために必要なすべてのもの</target>
        </trans-unit>
        <trans-unit id="da96c9a79449ff8902d86629143fa88e65d995c3" translate="yes" xml:space="preserve">
          <source>All you need to use stage 1 (and greater) plugins</source>
          <target state="translated">ステージ1(以上)のプラグインを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="ad17e362c99e7ea9e8547e0b3b4fa46d84b2f47f" translate="yes" xml:space="preserve">
          <source>All you need to use stage 2 (and greater) plugins</source>
          <target state="translated">ステージ2(以上)のプラグインを使用するために必要なもの</target>
        </trans-unit>
        <trans-unit id="31305f437ff608e906b53488bbbf3f0760b75378" translate="yes" xml:space="preserve">
          <source>All you need to use stage 3 plugins</source>
          <target state="translated">ステージ3のプラグインを使うために必要なもの</target>
        </trans-unit>
        <trans-unit id="3bc19438d12715227ba181d41db536c75d9cf6aa" translate="yes" xml:space="preserve">
          <source>Allow parsing of JSX syntax</source>
          <target state="translated">JSX 構文の解析を許可する</target>
        </trans-unit>
        <trans-unit id="3b9997b39b5ccd1078729ade661a9d1b8912e778" translate="yes" xml:space="preserve">
          <source>Allow parsing of call constructors.</source>
          <target state="translated">呼び出しコンストラクタの解析を許可します。</target>
        </trans-unit>
        <trans-unit id="538fcfd8eefea4efcde289a1ad1def7e9cb94bf6" translate="yes" xml:space="preserve">
          <source>Allow parsing of import()</source>
          <target state="translated">import()のパースを許可する</target>
        </trans-unit>
        <trans-unit id="10ce1036dfd5733d35e63335c6a210bd7d765bc7" translate="yes" xml:space="preserve">
          <source>Allow parsing of the flow syntax</source>
          <target state="translated">フロー構文の解析を許可する</target>
        </trans-unit>
        <trans-unit id="bb3ce3f0a98d916699c0e70b684524e9fd3f7e8f" translate="yes" xml:space="preserve">
          <source>Allows build tooling to create and cache config items up front. If this function is called multiple times for a given plugin, Babel will call the plugin's function itself multiple times. If you have a clear set of expected plugins and presets to inject, pre-constructing the config items would be recommended.</source>
          <target state="translated">ビルドツールが前もって設定項目を作成してキャッシュすることを可能にします。この関数が与えられたプラグインに対して複数回呼び出された場合、Babel はプラグインの関数自体を複数回呼び出します。インジェクションするプラグインやプリセットが明確に決まっている場合は、コンフィグアイテムを事前に構築しておくことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="f1e3e0c02085c09367635ee5603b983c6bfa723b" translate="yes" xml:space="preserve">
          <source>Allows for entire nested configuration options that will only be enabled if the &lt;code&gt;envKey&lt;/code&gt; matches the &lt;code&gt;envName&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;envKey&lt;/code&gt; が &lt;code&gt;envName&lt;/code&gt; オプションと一致する場合にのみ有効になる、ネストされた構成オプション全体を許可します。</target>
        </trans-unit>
        <trans-unit id="65ecf7b13fb8292bfcd5c5ba08ddbfa30aa3738b" translate="yes" xml:space="preserve">
          <source>Allows specifying a prefix comment to insert after pieces of code that were not present in the original file.</source>
          <target state="translated">元のファイルに存在しないコードの後に挿入するプレフィックスコメントを指定できるようにしました。</target>
        </trans-unit>
        <trans-unit id="37fe6e98b2b72562b7fb468db6f80bb08e020b99" translate="yes" xml:space="preserve">
          <source>Allows specifying a prefix comment to insert before pieces of code that were not present in the original file.</source>
          <target state="translated">元のファイルに存在しないコードの前に挿入するプレフィックスコメントを指定できるようになりました。</target>
        </trans-unit>
        <trans-unit id="929b6d53906609dc80672d2767aae302a38114dc" translate="yes" xml:space="preserve">
          <source>Allows users to add a wrapper on each visitor in order to inspect the visitor process as Babel executes the plugins.</source>
          <target state="translated">Babelがプラグインを実行する際に、各訪問者にラッパーを追加して訪問者のプロセスを検査することができます。</target>
        </trans-unit>
        <trans-unit id="595828049c90f8416c80a27f968211b30766c6df" translate="yes" xml:space="preserve">
          <source>Allows users to provide an array of options that will be &lt;a href=&quot;#merging&quot;&gt;merged&lt;/a&gt; into the current configuration one at a time. This feature is best used alongside the &lt;a href=&quot;#test&quot;&gt;&lt;code&gt;&quot;test&quot;&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;#include&quot;&gt;&lt;code&gt;&quot;include&quot;&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;#exclude&quot;&gt;&lt;code&gt;&quot;exclude&quot;&lt;/code&gt;&lt;/a&gt; options to provide conditions for which an override should apply. For example:</source>
          <target state="translated">ユーザーが、現在の構成に一度に1つずつ&lt;a href=&quot;#merging&quot;&gt;マージ&lt;/a&gt;される一連のオプションを提供できるようにします。この機能は、&lt;a href=&quot;#test&quot;&gt; &lt;code&gt;&quot;test&quot;&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;#include&quot;&gt; &lt;code&gt;&quot;include&quot;&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;#exclude&quot;&gt; &lt;code&gt;&quot;exclude&quot;&lt;/code&gt; &lt;/a&gt;オプションと一緒に使用して、オーバーライドを適用する条件を提供するのに最適です。例えば：</target>
        </trans-unit>
        <trans-unit id="7688a5f4934c6bf765171e8fd9faf11659ed3242" translate="yes" xml:space="preserve">
          <source>Also checkout &lt;a href=&quot;https://jasonformat.com/wtf-is-jsx/&quot;&gt;WTF is JSX&lt;/a&gt; for an explanation of the syntax and how it&amp;rsquo;s just a sugar for function calls.</source>
          <target state="translated">また、構文の説明と、それが関数呼び出しの単なるシュガーになる方法については、&lt;a href=&quot;https://jasonformat.com/wtf-is-jsx/&quot;&gt;WTFをJSX&lt;/a&gt;でチェックアウトしてください。</target>
        </trans-unit>
        <trans-unit id="4bb1bb180f3eb9b64552fb785f7312e58b6802d2" translate="yes" xml:space="preserve">
          <source>Also, we can target particular &lt;a href=&quot;../babel-types/index#api&quot;&gt;&lt;strong&gt;node types&lt;/strong&gt;&lt;/a&gt; in the Syntax Tree</source>
          <target state="translated">また、構文ツリーで特定の&lt;a href=&quot;../babel-types/index#api&quot;&gt;&lt;strong&gt;ノードタイプ&lt;/strong&gt;&lt;/a&gt;をターゲットにすることもでき&lt;strong&gt;ます&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0a570bb3f92027b2d563a7816dc9eafdc7f728e6" translate="yes" xml:space="preserve">
          <source>Alternatively, you can also provide any &lt;a href=&quot;../babel-parser/index#plugins&quot;&gt;&lt;code&gt;plugins&lt;/code&gt; option&lt;/a&gt; from the Babel parser:</source>
          <target state="translated">または、Babelパーサーから&lt;a href=&quot;../babel-parser/index#plugins&quot;&gt; &lt;code&gt;plugins&lt;/code&gt; オプション&lt;/a&gt;を提供することもできます。</target>
        </trans-unit>
        <trans-unit id="f4c0cbbc57405e860f85ef71f7ccd50e58e074ae" translate="yes" xml:space="preserve">
          <source>An array of plugins to activate when processing this file. For more information on how individual entries interact, especially when used across multiple nested &lt;a href=&quot;#env&quot;&gt;&lt;code&gt;&quot;env&quot;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#overrides&quot;&gt;&lt;code&gt;&quot;overrides&quot;&lt;/code&gt;&lt;/a&gt; configs, see &lt;a href=&quot;#merging&quot;&gt;merging&lt;/a&gt;.</source>
          <target state="translated">このファイルを処理するときにアクティブ化するプラグインの配列。個々のエントリがどのように相互作用するか、特にネストされた複数の&lt;a href=&quot;#env&quot;&gt; &lt;code&gt;&quot;env&quot;&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#overrides&quot;&gt; &lt;code&gt;&quot;overrides&quot;&lt;/code&gt; &lt;/a&gt;構成で使用される場合の詳細については、&lt;a href=&quot;#merging&quot;&gt;マージを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f3ec7c98b3eba3c5318032f42ce82330484b671a" translate="yes" xml:space="preserve">
          <source>An array of plugins to always exclude/remove.</source>
          <target state="translated">常に除外/削除するプラグインの配列。</target>
        </trans-unit>
        <trans-unit id="eae3cdc20ff73734a3455079e4d6ce1863dfda1a" translate="yes" xml:space="preserve">
          <source>An array of plugins to always include.</source>
          <target state="translated">常に含めるプラグインの配列。</target>
        </trans-unit>
        <trans-unit id="d048d501bdc2a3eddf1f388b7057db95cb5a0463" translate="yes" xml:space="preserve">
          <source>An array of presets to activate when processing this file. For more information on how individual entries interact, especially when used across multiple nested &lt;a href=&quot;#env&quot;&gt;&lt;code&gt;&quot;env&quot;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#overrides&quot;&gt;&lt;code&gt;&quot;overrides&quot;&lt;/code&gt;&lt;/a&gt; configs, see &lt;a href=&quot;#merging&quot;&gt;merging&lt;/a&gt;.</source>
          <target state="translated">このファイルを処理するときにアクティブにするプリセットの配列。個々のエントリがどのように相互作用するか、特にネストされた複数の&lt;a href=&quot;#env&quot;&gt; &lt;code&gt;&quot;env&quot;&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#overrides&quot;&gt; &lt;code&gt;&quot;overrides&quot;&lt;/code&gt; &lt;/a&gt;構成で使用される場合の詳細については、&lt;a href=&quot;#merging&quot;&gt;マージを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="244cb4b1e89905dc4392ecb44de1a73a89f46916" translate="yes" xml:space="preserve">
          <source>An array-like object is an object with a &lt;code&gt;length&lt;/code&gt; property: for example, &lt;code&gt;{ 0: &quot;a&quot;, 1: &quot;b&quot;, length: 2 }&lt;/code&gt;. Note that, like real arrays, array-like objects can have &quot;holes&quot;: &lt;code&gt;{ 1: &quot;a&quot;, length: 3 }&lt;/code&gt; is equivalent to &lt;code&gt;[ (hole), &quot;a&quot;, (hole) ]&lt;/code&gt;.</source>
          <target state="translated">配列のようなオブジェクトは、 &lt;code&gt;length&lt;/code&gt; プロパティを持つオブジェクトです。たとえば、 &lt;code&gt;{ 0: &quot;a&quot;, 1: &quot;b&quot;, length: 2 }&lt;/code&gt; 。実際の配列と同様に、配列のようなオブジェクトは「穴」を持つことができることに注意してください： &lt;code&gt;{ 1: &quot;a&quot;, length: 3 }&lt;/code&gt; は &lt;code&gt;[ (hole), &quot;a&quot;, (hole) ]&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="257d2fb1363413214f881d461c66ce6cd8fb1dfd" translate="yes" xml:space="preserve">
          <source>An object containing the options to be passed down to the babel code generator, babel-generator</source>
          <target state="translated">バベルコードジェネレータに渡すオプションを含むオブジェクト、babel-generator</target>
        </trans-unit>
        <trans-unit id="51bebf4e838301ebd34c2f8bd0f2dc4b25ec9477" translate="yes" xml:space="preserve">
          <source>An object containing the options to be passed down to the babel parser, babylon</source>
          <target state="translated">バベルパーサーであるbabylonに渡されるオプションを含むオブジェクト。</target>
        </trans-unit>
        <trans-unit id="fb10c0ba001909cfa5a6d66bb2410843d04bef15" translate="yes" xml:space="preserve">
          <source>An opaque object containing options to pass through to the code generator being used. See &lt;a href=&quot;#code-generator-options&quot;&gt;Code Generator Options&lt;/a&gt; for most used options.</source>
          <target state="translated">使用されているコードジェネレーターに渡すオプションを含む不透明なオブジェクト。最もよく使用されるオプションについては、&lt;a href=&quot;#code-generator-options&quot;&gt;コードジェネレータオプション&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="54200a47d5a78f3319b7f6ae70020c574f287643" translate="yes" xml:space="preserve">
          <source>An opaque object containing options to pass through to the parser being used.</source>
          <target state="translated">使用するパーサに渡すオプションを含む不透明なオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="8cd5186f8ec70bce5a41e35e00fe11ff2f597ec9" translate="yes" xml:space="preserve">
          <source>An optional callback that can be used to wrap visitor methods. &lt;strong&gt;NOTE:&lt;/strong&gt; This is useful for things like introspection, and not really needed for implementing anything. Called as &lt;code&gt;wrapPluginVisitorMethod(pluginAlias, visitorType, callback)&lt;/code&gt;.</source>
          <target state="translated">ビジターメソッドをラップするために使用できるオプションのコールバック。&lt;strong&gt;注：&lt;/strong&gt;これはイントロスペクションなどの場合に役立ち、実際には何も実装する必要はありません。 &lt;code&gt;wrapPluginVisitorMethod(pluginAlias, visitorType, callback)&lt;/code&gt; として呼び出されます。</target>
        </trans-unit>
        <trans-unit id="04df74d80ab5018590d7e8e99fb98938c243260e" translate="yes" xml:space="preserve">
          <source>An optional callback that controls whether a comment should be output or not. Called as &lt;code&gt;shouldPrintComment(commentContents)&lt;/code&gt;. &lt;strong&gt;NOTE:&lt;/strong&gt; This overrides the &lt;code&gt;comment&lt;/code&gt; option when used.</source>
          <target state="translated">コメントを出力するかどうかを制御するオプションのコールバック。 &lt;code&gt;shouldPrintComment(commentContents)&lt;/code&gt; として呼び出されます。&lt;strong&gt;注：&lt;/strong&gt;これを使用すると、 &lt;code&gt;comment&lt;/code&gt; オプションが上書きされます。</target>
        </trans-unit>
        <trans-unit id="c0d125da291da1e9962d74052f528af4a4835849" translate="yes" xml:space="preserve">
          <source>And all plugins from presets:</source>
          <target state="translated">そして、プリセットからすべてのプラグイン。</target>
        </trans-unit>
        <trans-unit id="8ba9ebfb6a6a1c74b95f545d04e534564470966f" translate="yes" xml:space="preserve">
          <source>And by default, when using exports with babel a non-enumerable &lt;code&gt;__esModule&lt;/code&gt; property is exported.</source>
          <target state="translated">また、デフォルトでは、babelでエクスポートを使用すると、列挙 &lt;code&gt;__esModule&lt;/code&gt; ない__esModuleプロパティがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="8a0a2e862171fd7eba93f6338d2d085974965473" translate="yes" xml:space="preserve">
          <source>And if you set the plugin options to:</source>
          <target state="translated">そして、プラグインのオプションを設定すると</target>
        </trans-unit>
        <trans-unit id="f0898413551e7b63a397c14df07fe3089cf544d6" translate="yes" xml:space="preserve">
          <source>And more! (check out these &lt;a href=&quot;https://babeljs.io/videos.html&quot;&gt;videos&lt;/a&gt; for inspiration)</source>
          <target state="translated">もっと！（インスピレーションを得るためにこれらの&lt;a href=&quot;https://babeljs.io/videos.html&quot;&gt;ビデオ&lt;/a&gt;をチェックしてください）</target>
        </trans-unit>
        <trans-unit id="f0f86e7485a3ed057a3ca9cb621011ed6255256e" translate="yes" xml:space="preserve">
          <source>And with the &lt;code&gt;development&lt;/code&gt; option:</source>
          <target state="translated">そして &lt;code&gt;development&lt;/code&gt; オプションで：</target>
        </trans-unit>
        <trans-unit id="5c5909b929313c0c4cdcc344ca4c069f6ba68fed" translate="yes" xml:space="preserve">
          <source>And, with it enabled:</source>
          <target state="translated">そして、それを有効にした状態で。</target>
        </trans-unit>
        <trans-unit id="aa55ea14da29c1ea0b15503828a8aae4b6ef6311" translate="yes" xml:space="preserve">
          <source>Another purpose of this transformer is to create a sandboxed environment for your code. If you directly import &lt;a href=&quot;https://github.com/zloirock/core-js&quot;&gt;core-js&lt;/a&gt; or &lt;a href=&quot;../babel-polyfill/index&quot;&gt;@babel/polyfill&lt;/a&gt; and the built-ins it provides such as &lt;code&gt;Promise&lt;/code&gt;, &lt;code&gt;Set&lt;/code&gt; and &lt;code&gt;Map&lt;/code&gt;, those will pollute the global scope. While this might be ok for an app or a command line tool, it becomes a problem if your code is a library which you intend to publish for others to use or if you can't exactly control the environment in which your code will run.</source>
          <target state="translated">このトランスフォーマーのもう1つの目的は、コード用のサンドボックス環境を作成することです。&lt;a href=&quot;https://github.com/zloirock/core-js&quot;&gt;core-js&lt;/a&gt;または&lt;a href=&quot;../babel-polyfill/index&quot;&gt;@babel / polyfill&lt;/a&gt;と、それが提供する &lt;code&gt;Promise&lt;/code&gt; 、 &lt;code&gt;Set&lt;/code&gt; 、 &lt;code&gt;Map&lt;/code&gt; などの組み込みを直接インポートすると、グローバルスコープが汚染されます。これはアプリやコマンドラインツールでは問題ないかもしれませんが、コードが他のユーザーが使用できるように公開する予定のライブラリである場合、またはコードが実行される環境を正確に制御できない場合は問題になります。</target>
        </trans-unit>
        <trans-unit id="e6e90639678f6630ae1d791f94877b9d6aeba033" translate="yes" xml:space="preserve">
          <source>Another purpose of this transformer is to create a sandboxed environment for your code. If you use &lt;a href=&quot;../../usage/polyfill/index&quot;&gt;babel-polyfill&lt;/a&gt; and the built-ins it provides such as &lt;code&gt;Promise&lt;/code&gt;, &lt;code&gt;Set&lt;/code&gt; and &lt;code&gt;Map&lt;/code&gt;, those will pollute the global scope. While this might be ok for an app or a command line tool, it becomes a problem if your code is a library which you intend to publish for others to use or if you can&amp;rsquo;t exactly control the environment in which your code will run.</source>
          <target state="translated">このトランスフォーマーのもう1つの目的は、コード用のサンドボックス環境を作成することです。&lt;a href=&quot;../../usage/polyfill/index&quot;&gt;babel-polyfill&lt;/a&gt;とそれが提供する &lt;code&gt;Promise&lt;/code&gt; 、 &lt;code&gt;Set&lt;/code&gt; 、 &lt;code&gt;Map&lt;/code&gt; などの組み込みを使用する場合、これらはグローバルスコープを汚染します。これはアプリやコマンドラインツールでは問題ないかもしれませんが、コードが他のユーザーが使用するために公開する予定のライブラリである場合、またはコードが実行される環境を正確に制御できない場合は問題になります。</target>
        </trans-unit>
        <trans-unit id="95fcddab0e68a32d1607211f0826cb7b38a2466a" translate="yes" xml:space="preserve">
          <source>Any identifier prefixed with &lt;code&gt;module:&lt;/code&gt; will have the prefix removed but otherwise be untouched.</source>
          <target state="translated">&lt;code&gt;module:&lt;/code&gt; のプレフィックスが付いた識別子は、プレフィックスが削除されますが、それ以外は変更されません。</target>
        </trans-unit>
        <trans-unit id="53f25b66606948f991915c8d158dd8e4c1e2b52c" translate="yes" xml:space="preserve">
          <source>Any transforms in stage-x presets are changes to the language that haven&amp;rsquo;t been approved to be part of a release of Javascript (such as ES6/ES2015).</source>
          <target state="translated">stage-xプリセットの変換は、Javascriptのリリース（ES6 / ES2015など）の一部として承認されていない言語への変更です。</target>
        </trans-unit>
        <trans-unit id="c3a46a8f43a5649622a3b88560131393721f9354" translate="yes" xml:space="preserve">
          <source>Apply ES2015 function.name semantics to all functions</source>
          <target state="translated">ES2015 の function.name セマンティクスをすべての関数に適用する</target>
        </trans-unit>
        <trans-unit id="41e71eca5b6ee6a2ee38deb094739a0f9e6d7afb" translate="yes" xml:space="preserve">
          <source>Array destructuring, For Of</source>
          <target state="translated">配列の破壊、For</target>
        </trans-unit>
        <trans-unit id="0f63cdc2cd2a3702b2be6a1b9abfa4a557a8352d" translate="yes" xml:space="preserve">
          <source>As Babel doesn't understand the type of &lt;code&gt;N&lt;/code&gt;, the reference to &lt;code&gt;V&lt;/code&gt; will be &lt;code&gt;undefined&lt;/code&gt; resulting in an error.</source>
          <target state="translated">Babelは &lt;code&gt;N&lt;/code&gt; のタイプを理解していないため、 &lt;code&gt;V&lt;/code&gt; への参照は &lt;code&gt;undefined&lt;/code&gt; なり、エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="f38e9c4de37671ae99f0cad14dcc73e2013aa2e4" translate="yes" xml:space="preserve">
          <source>As an example, consider a config with:</source>
          <target state="translated">例として、以下のような設定を考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="2c6c175ae10c539d819f1b18e6083c382291b739" translate="yes" xml:space="preserve">
          <source>As of Babel v7, all the stage presets have been deprecated. Check &lt;a href=&quot;https://babeljs.io/blog/2018/07/27/removing-babels-stage-presets&quot;&gt;the blog post&lt;/a&gt; for more information.</source>
          <target state="translated">Babel v7の時点で、すべてのステージプリセットは非推奨になりました。詳細について&lt;a href=&quot;https://babeljs.io/blog/2018/07/27/removing-babels-stage-presets&quot;&gt;は、ブログ投稿&lt;/a&gt;を確認してください。</target>
        </trans-unit>
        <trans-unit id="31d63f92c4c4818f74021f6ae5d62350966406ca" translate="yes" xml:space="preserve">
          <source>As per the spec, &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;export&lt;/code&gt; are only allowed to be used at the top level. When in loose mode these are allowed to be used anywhere.</source>
          <target state="translated">仕様に従って、 &lt;code&gt;import&lt;/code&gt; と &lt;code&gt;export&lt;/code&gt; はトップレベルでのみ使用できます。ルーズモードの場合、これらはどこでも使用できます。</target>
        </trans-unit>
        <trans-unit id="98a10d97fe88ca1c2f413a9aa39f51983966dab7" translate="yes" xml:space="preserve">
          <source>Assigning VS. defining properties</source>
          <target state="translated">割り当てVS.プロパティの定義</target>
        </trans-unit>
        <trans-unit id="ebd23642b32aadc2ef4a9d2f3d248236028b7afd" translate="yes" xml:space="preserve">
          <source>Assuming you've already gotten your &lt;a href=&quot;#project-wide-configuration&quot;&gt;&lt;code&gt;babel.config.json&lt;/code&gt;&lt;/a&gt; file loaded properly as discussed above, Babel will only process &lt;a href=&quot;#file-relative-configuration&quot;&gt;&lt;code&gt;.babelrc.json&lt;/code&gt;&lt;/a&gt; files inside that root package (and not subpackages), so given for instance</source>
          <target state="translated">上記のように&lt;a href=&quot;#project-wide-configuration&quot;&gt; &lt;code&gt;babel.config.json&lt;/code&gt; &lt;/a&gt;ファイルがすでに適切にロードされていると仮定すると、Babelはそのルートパッケージ内の&lt;a href=&quot;#file-relative-configuration&quot;&gt; &lt;code&gt;.babelrc.json&lt;/code&gt; &lt;/a&gt;ファイルのみを処理します（サブパッケージは処理しません）。</target>
        </trans-unit>
        <trans-unit id="a81a3b5470a9d6ed6845c99a7c2a35d3971383eb" translate="yes" xml:space="preserve">
          <source>Async function to module method transform</source>
          <target state="translated">非同期関数からモジュールメソッドへの変換</target>
        </trans-unit>
        <trans-unit id="5ef2ec7c086db048016785067a80b5c302021dc3" translate="yes" xml:space="preserve">
          <source>Async functions</source>
          <target state="translated">非同期関数</target>
        </trans-unit>
        <trans-unit id="3a55a016a176ccf31c329a78b6fc145a00c07ed3" translate="yes" xml:space="preserve">
          <source>Async functions, Generators</source>
          <target state="translated">非同期関数、ジェネレータ</target>
        </trans-unit>
        <trans-unit id="e8b00d2cc61471e87ef9e3659ca260b87cbfed48" translate="yes" xml:space="preserve">
          <source>Async to generator transform</source>
          <target state="translated">非同期からジェネレータ変換</target>
        </trans-unit>
        <trans-unit id="4c94a5a230828a6f30c1a3676ba7be344aa1ff1e" translate="yes" xml:space="preserve">
          <source>Asynchronous Module Definition (AMD)</source>
          <target state="translated">非同期モジュール定義(AMD</target>
        </trans-unit>
        <trans-unit id="6b33f79e8123c2a54434eeb38f1594af25fcb609" translate="yes" xml:space="preserve">
          <source>Asynchronously transforms the entire contents of a file.</source>
          <target state="translated">ファイルの内容全体を非同期に変換します。</target>
        </trans-unit>
        <trans-unit id="7140e6aa3c8544b76e0ee971a54c0768ae5a804e" translate="yes" xml:space="preserve">
          <source>At the start of a command:</source>
          <target state="translated">コマンドの開始時に</target>
        </trans-unit>
        <trans-unit id="5c28c2ff8eab8f53818b27909a882f4992505e34" translate="yes" xml:space="preserve">
          <source>Attach a comment after all non-user injected code.</source>
          <target state="translated">ユーザー以外のインジェクションされたコードの後にコメントを付けてください。</target>
        </trans-unit>
        <trans-unit id="44e0229adbe1fae9902109fbf0a2ebbbd91d78d7" translate="yes" xml:space="preserve">
          <source>Attach a comment before all non-user injected code.</source>
          <target state="translated">ユーザー以外のインジェクションされたコードの前にコメントを付けてください。</target>
        </trans-unit>
        <trans-unit id="eeadeb39fae9a7ec1e62fd45f40cd95d91bb1ce8" translate="yes" xml:space="preserve">
          <source>Attempt to use the same line numbers in the output code as in the source code (helps preserve stack traces)</source>
          <target state="translated">出力コードではソースコードと同じ行番号を使用するようにしてください (スタックトレースを保存するのに役立ちます)</target>
        </trans-unit>
        <trans-unit id="5fda23d62015b99fb2a9f86b38bcdf2bdf7609c8" translate="yes" xml:space="preserve">
          <source>Author</source>
          <target state="translated">Author</target>
        </trans-unit>
        <trans-unit id="8c35e5cbff1d40bad2836c4629ea4f597f585721" translate="yes" xml:space="preserve">
          <source>Auto self binding</source>
          <target state="translated">自動セルフバインディング</target>
        </trans-unit>
        <trans-unit id="12686f094fdcd89b08183c5642a48a960c89f456" translate="yes" xml:space="preserve">
          <source>Automatic runtime (since &lt;code&gt;v7.9.0&lt;/code&gt;) adds the functionality for these plugins automatically when the &lt;code&gt;development&lt;/code&gt; option is enabled. If you have automatic runtime enabled, adding &lt;a href=&quot;../babel-plugin-transform-react-jsx-self/index&quot;&gt;@babel/plugin-transform-react-jsx-self&lt;/a&gt; or &lt;a href=&quot;../babel-plugin-transform-react-jsx-source/index&quot;&gt;@babel/plugin-transform-react-jsx-source&lt;/a&gt; will error.</source>
          <target state="translated">自動ランタイム（ &lt;code&gt;v7.9.0&lt;/code&gt; 以降）は、 &lt;code&gt;development&lt;/code&gt; オプションが有効になっている場合、これらのプラグインの機能を自動的に追加します。自動ランタイムを有効にしている場合、&lt;a href=&quot;../babel-plugin-transform-react-jsx-self/index&quot;&gt;@ babel / plugin-transform-react-jsx-self&lt;/a&gt;または@babel &lt;a href=&quot;../babel-plugin-transform-react-jsx-source/index&quot;&gt;/ plugin-transform-react-jsx-source&lt;/a&gt;を追加するとエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="11e1187b6343552c54ae5b52d2cf784129c90343" translate="yes" xml:space="preserve">
          <source>Automatic runtime is a feature added in &lt;code&gt;v7.9.0&lt;/code&gt;. With this runtime enabled, the functions that JSX compiles to will be imported automatically.</source>
          <target state="translated">自動ランタイムは、 &lt;code&gt;v7.9.0&lt;/code&gt; で追加された機能です。このランタイムを有効にすると、JSXがコンパイルされる関数が自動的にインポートされます。</target>
        </trans-unit>
        <trans-unit id="01c2ada263ada32ec416efa46971371283496124" translate="yes" xml:space="preserve">
          <source>Automatically removes the inline Babel helpers and uses the module &lt;code&gt;@babel/runtime/helpers&lt;/code&gt; instead (toggleable with the &lt;code&gt;helpers&lt;/code&gt; option).</source>
          <target state="translated">インラインのBabelヘルパーを自動的に削除し、代わりにモジュール &lt;code&gt;@babel/runtime/helpers&lt;/code&gt; helpersを使用します（ &lt;code&gt;helpers&lt;/code&gt; オプションと切り替え可能）。</target>
        </trans-unit>
        <trans-unit id="1de864f5b618ec792d8317330d9ecf4f45dfde52" translate="yes" xml:space="preserve">
          <source>Automatically requires &lt;code&gt;@babel/runtime/regenerator&lt;/code&gt; when you use generators/async functions (toggleable with the &lt;code&gt;regenerator&lt;/code&gt; option).</source>
          <target state="translated">ジェネレーター/非同期関数を使用 &lt;code&gt;@babel/runtime/regenerator&lt;/code&gt; 場合は、@ babel / runtime / regeneratorが自動的に必要になります（ &lt;code&gt;regenerator&lt;/code&gt; オプションと切り替え可能）。</target>
        </trans-unit>
        <trans-unit id="03979a3142e24c6564ec23a93dddde609b60b576" translate="yes" xml:space="preserve">
          <source>Automatically requires &lt;code&gt;babel-runtime/core-js&lt;/code&gt; and maps ES6 static methods and built-ins.</source>
          <target state="translated">自動的に &lt;code&gt;babel-runtime/core-js&lt;/code&gt; を必要とし、ES6静的メソッドと組み込みをマップします。</target>
        </trans-unit>
        <trans-unit id="2301a7722e3a9cf35080e58cb41beca06cdd96fb" translate="yes" xml:space="preserve">
          <source>Automatically requires &lt;code&gt;babel-runtime/regenerator&lt;/code&gt; when you use generators/async functions.</source>
          <target state="translated">ジェネレーター/非同期関数を使用 &lt;code&gt;babel-runtime/regenerator&lt;/code&gt; 、自動的にbabel-runtime / regeneratorが必要になります。</target>
        </trans-unit>
        <trans-unit id="49a8f99838195ff84f6a6945486de3aab7135929" translate="yes" xml:space="preserve">
          <source>Available from the &lt;code&gt;dist/polyfill.js&lt;/code&gt; file within a &lt;code&gt;@babel/polyfill&lt;/code&gt; npm release. This needs to be included &lt;strong&gt;before&lt;/strong&gt; all your compiled Babel code. You can either prepend it to your compiled code or include it in a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; before it.</source>
          <target state="translated">&lt;code&gt;@babel/polyfill&lt;/code&gt; リリース内の &lt;code&gt;dist/polyfill.js&lt;/code&gt; ファイルから入手できます。これは、コンパイルされたすべてのBabelコードの&lt;strong&gt;前&lt;/strong&gt;に含める必要があります。コンパイルしたコードの前に付けるか、その前の &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; に含めることができます。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="198f7714fbab31b5c050b32ff4d2db6129251056" translate="yes" xml:space="preserve">
          <source>Available from the &lt;code&gt;dist/polyfill.js&lt;/code&gt; file within a &lt;code&gt;babel-polyfill&lt;/code&gt; npm release. This needs to be included &lt;strong&gt;before&lt;/strong&gt; all your compiled Babel code. You can either prepend it to your compiled code or include it in a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; before it.</source>
          <target state="translated">&lt;code&gt;babel-polyfill&lt;/code&gt; npmリリース内の &lt;code&gt;dist/polyfill.js&lt;/code&gt; ファイルから入手できます。これは、コンパイルされたすべてのBabelコードの&lt;strong&gt;前&lt;/strong&gt;に含める必要があります。コンパイル済みコードの前に追加するか、またはその前の &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; に含めることができます。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d933fbedcb0673e941bfd9814d0a28d01812fe2d" translate="yes" xml:space="preserve">
          <source>BABEL_CACHE_PATH</source>
          <target state="translated">BABEL_CACHE_PATH</target>
        </trans-unit>
        <trans-unit id="8d668b498c59cd9da4da9fe25cd9107def1d0651" translate="yes" xml:space="preserve">
          <source>BABEL_DISABLE_CACHE</source>
          <target state="translated">BABEL_DISABLE_CACHE</target>
        </trans-unit>
        <trans-unit id="f3bf8dee016caf43ae3970fbea5f976d54898ed9" translate="yes" xml:space="preserve">
          <source>Babel</source>
          <target state="translated">Babel</target>
        </trans-unit>
        <trans-unit id="cd9988e5107598907e6b7f9198736126e79002e8" translate="yes" xml:space="preserve">
          <source>Babel 6 Changes</source>
          <target state="translated">バベル6の変更点</target>
        </trans-unit>
        <trans-unit id="392392141b52d7446717fdec1520a15b89811b36" translate="yes" xml:space="preserve">
          <source>Babel 6 changed some behavior by not doing &lt;code&gt;module.exports = exports['default']&lt;/code&gt; anymore in the modules transforms.</source>
          <target state="translated">Babel 6 は、モジュール変換で &lt;code&gt;module.exports = exports['default']&lt;/code&gt; 実行しないことにより、いくつかの動作を変更しました。</target>
        </trans-unit>
        <trans-unit id="2d3c6f8342fd0463c2ac10bb40b68719e6281661" translate="yes" xml:space="preserve">
          <source>Babel Blog: Function Bind Syntax</source>
          <target state="translated">バベルブログ。関数バインド構文</target>
        </trans-unit>
        <trans-unit id="500b37e81412bb9e4f0f22e279ce949f52099b8a" translate="yes" xml:space="preserve">
          <source>Babel CLI</source>
          <target state="translated">バベルCLI</target>
        </trans-unit>
        <trans-unit id="c1196b4acee92fa0917dfc887902cf0b37bdd7da" translate="yes" xml:space="preserve">
          <source>Babel Types is a Lodash-esque utility library for AST nodes</source>
          <target state="translated">Babel TypesはASTノードのためのLodash風のユーティリティライブラリです。</target>
        </trans-unit>
        <trans-unit id="76418bf719061e930deebf18d388038e6eaa14c4" translate="yes" xml:space="preserve">
          <source>Babel can be configured using any file extension natively supported by Node.js: you can use &lt;code&gt;.json&lt;/code&gt;, &lt;code&gt;.js&lt;/code&gt;, &lt;code&gt;.cjs&lt;/code&gt; and &lt;code&gt;.mjs&lt;/code&gt;, both for &lt;code&gt;babel.config.json&lt;/code&gt; and &lt;code&gt;.babelrc.json&lt;/code&gt; files.</source>
          <target state="translated">バベルは、ネイティブのNode.jsでサポートされている任意のファイル拡張子を使用して設定することができます：あなたが使用することができます &lt;code&gt;.json&lt;/code&gt; 、 &lt;code&gt;.js&lt;/code&gt; ファイル、 &lt;code&gt;.cjs&lt;/code&gt; と &lt;code&gt;.mjs&lt;/code&gt; の両方のために、 &lt;code&gt;babel.config.json&lt;/code&gt; と &lt;code&gt;.babelrc.json&lt;/code&gt; ファイル。</target>
        </trans-unit>
        <trans-unit id="43055d49c780ccaf9eb682e5c8dea97eb3d10d6b" translate="yes" xml:space="preserve">
          <source>Babel can convert JSX syntax! Check out our &lt;a href=&quot;babel-preset-react/index&quot;&gt;React preset&lt;/a&gt; to get started. Use it together with the &lt;a href=&quot;https://github.com/babel/babel-sublime&quot;&gt;babel-sublime&lt;/a&gt; package to bring syntax highlighting to a whole new level.</source>
          <target state="translated">BabelはJSX構文を変換できます！開始するには、&lt;a href=&quot;babel-preset-react/index&quot;&gt;Reactプリセット&lt;/a&gt;を確認してください。これを&lt;a href=&quot;https://github.com/babel/babel-sublime&quot;&gt;babel-sublime&lt;/a&gt;パッケージと一緒に使用して、構文の強調表示をまったく新しいレベルに引き上げます。</target>
        </trans-unit>
        <trans-unit id="970b7a9465622e9261c64d3b5ecdedd065d6f5f1" translate="yes" xml:space="preserve">
          <source>Babel can strip out type annotations! Check out either our &lt;a href=&quot;babel-preset-flow/index&quot;&gt;Flow preset&lt;/a&gt; or &lt;a href=&quot;babel-preset-typescript/index&quot;&gt;TypeScript preset&lt;/a&gt; to get started. Keep in mind that &lt;strong&gt;Babel doesn't do type checking&lt;/strong&gt;; you'll still have to install and use Flow or TypeScript to check types.</source>
          <target state="translated">Babelは型の注釈を取り除くことができます！開始するには、&lt;a href=&quot;babel-preset-flow/index&quot;&gt;Flowプリセット&lt;/a&gt;または&lt;a href=&quot;babel-preset-typescript/index&quot;&gt;TypeScriptプリセットの&lt;/a&gt;いずれかを確認してください。&lt;strong&gt;Babelは型チェックを行わない&lt;/strong&gt;ことに&lt;strong&gt;注意してください&lt;/strong&gt;。タイプをチェックするには、FlowまたはTypeScriptをインストールして使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="9ffef49ef7fc0eb5f630b346e3d63e61336b6c5c" translate="yes" xml:space="preserve">
          <source>Babel code-frame</source>
          <target state="translated">バベルコードフレーム</target>
        </trans-unit>
        <trans-unit id="2445c363afd8f4f8ea91eef776400e14827499bf" translate="yes" xml:space="preserve">
          <source>Babel comes with a built-in CLI which can be used to compile files from the command line.</source>
          <target state="translated">BabelにはコマンドラインからファイルをコンパイルするためのCLIが組み込まれています。</target>
        </trans-unit>
        <trans-unit id="5c85171ab9e3722a2d05addc214eb158df999a60" translate="yes" xml:space="preserve">
          <source>Babel has a few helper functions that&amp;rsquo;ll be placed at the top of the generated code if needed so it&amp;rsquo;s not inlined multiple times throughout that file. This may become an issue if you have multiple files, especially when you&amp;rsquo;re sending them to the browser. gzip alleviates most of this concern but it&amp;rsquo;s still not ideal.</source>
          <target state="translated">Babelには、必要に応じて生成されたコードの上部に配置されるいくつかのヘルパー関数があるため、そのファイル全体で複数回インライン化されません。複数のファイルがある場合、特にブラウザに送信する場合は、これが問題になることがあります。gzipはこの懸念のほとんどを軽減しますが、それでもまだ理想的ではありません。</target>
        </trans-unit>
        <trans-unit id="1ea5a611f420cb69d1df568a86bf5108024568db" translate="yes" xml:space="preserve">
          <source>Babel has support for the latest version of JavaScript through syntax transformers.</source>
          <target state="translated">Babelは、構文変換器を介して最新版のJavaScriptをサポートしています。</target>
        </trans-unit>
        <trans-unit id="4f74c5b35cbb28343aab1eb64643efb0953c75e8" translate="yes" xml:space="preserve">
          <source>Babel has two parallel config file formats, which can be used together, or independently.</source>
          <target state="translated">Babelには2つのパラレルコンフィグファイル形式があり、一緒に使用することも、独立して使用することもできます。</target>
        </trans-unit>
        <trans-unit id="a93404320de66654908e0ce426e1fe5a286eca74" translate="yes" xml:space="preserve">
          <source>Babel helpers</source>
          <target state="translated">バベルの助っ人</target>
        </trans-unit>
        <trans-unit id="101560a9d1454597b98ff870d33f05ddd0778692" translate="yes" xml:space="preserve">
          <source>Babel includes a &lt;a href=&quot;https://en.wikipedia.org/wiki/Polyfill_(programming)&quot;&gt;polyfill&lt;/a&gt; that includes a custom &lt;a href=&quot;https://github.com/facebook/regenerator/blob/master/packages/regenerator-runtime/runtime.js&quot;&gt;regenerator runtime&lt;/a&gt; and &lt;a href=&quot;https://github.com/zloirock/core-js&quot;&gt;core-js&lt;/a&gt;.</source>
          <target state="translated">Babelには、カスタム&lt;a href=&quot;https://github.com/facebook/regenerator/blob/master/packages/regenerator-runtime/runtime.js&quot;&gt;再生器ランタイム&lt;/a&gt;と&lt;a href=&quot;https://github.com/zloirock/core-js&quot;&gt;core-js&lt;/a&gt;を含む&lt;a href=&quot;https://en.wikipedia.org/wiki/Polyfill_(programming)&quot;&gt;ポリフィル&lt;/a&gt;が含まれています。</target>
        </trans-unit>
        <trans-unit id="07f2ee5306cdea4edc2cbf4a0a9dc07e1755f9a6" translate="yes" xml:space="preserve">
          <source>Babel is a JavaScript compiler</source>
          <target state="translated">BabelはJavaScriptのコンパイラ</target>
        </trans-unit>
        <trans-unit id="90a939f66cdccb3e18977ecd4c7a2b7abcff2878" translate="yes" xml:space="preserve">
          <source>Babel is a compiler (source code =&amp;gt; output code). Like many other compilers it runs in 3 stages: parsing, transforming, and printing.</source>
          <target state="translated">Babelはコンパイラです（ソースコード=&amp;gt;出力コード）。他の多くのコンパイラと同様に、解析、変換、印刷の3つの段階で実行されます。</target>
        </trans-unit>
        <trans-unit id="f050ac05d1180f45448b3a90d97a741accacd4dc" translate="yes" xml:space="preserve">
          <source>Babel is a compiler. At a high level, it has 3 stages that it runs code in: parsing, transforming, and generation (like many other compilers).</source>
          <target state="translated">Babel はコンパイラです。高いレベルでは、コードを実行するための3つのステージがあります:解析、変換、生成 (他の多くのコンパイラのように)。</target>
        </trans-unit>
        <trans-unit id="363e110b446db798348fea6ed2041dc52a778541" translate="yes" xml:space="preserve">
          <source>Babel is a toolchain that is mainly used to convert ECMAScript 2015+ code into a backwards compatible version of JavaScript in current and older browsers or environments. Here are the main things Babel can do for you:</source>
          <target state="translated">Babelは主にECMAScript 2015+のコードを現在および古いブラウザや環境でJavaScriptの下位互換版に変換するために使用するツールチェーンです。ここでは、Babelでできる主なことを紹介します。</target>
        </trans-unit>
        <trans-unit id="3de6502119c38bcc1d02315fb7af9920f1627af2" translate="yes" xml:space="preserve">
          <source>Babel is built out of plugins. Compose your own transformation pipeline using existing plugins or write your own. Easily use a set of plugins by using or creating a &lt;a href=&quot;plugins/index#presets&quot;&gt;preset&lt;/a&gt;. &lt;a href=&quot;plugins/index&quot;&gt;Learn more &amp;rarr;&lt;/a&gt;</source>
          <target state="translated">Babelはプラグインで構成されています。既存のプラグインを使用して独自の変換パイプラインを作成するか、独自のプラグインを作成します。&lt;a href=&quot;plugins/index#presets&quot;&gt;プリセット&lt;/a&gt;を使用または作成することで、プラグインのセットを簡単に使用できます。&lt;a href=&quot;plugins/index&quot;&gt;詳細&amp;rarr;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b3a94f019ec020091a68b720ddfc3b6d3970129e" translate="yes" xml:space="preserve">
          <source>Babel loads &lt;code&gt;.babelrc.json&lt;/code&gt; files, or an equivalent one using the &lt;a href=&quot;#supported-file-extensions&quot;&gt;supported extensions&lt;/a&gt;, by searching up the directory structure starting from the &lt;a href=&quot;../options/index#filename&quot;&gt;&quot;filename&quot;&lt;/a&gt; being compiled (limited by the caveats below). This can be powerful because it allows you to create independent configurations for subsections of a package. File-relative configurations are also &lt;a href=&quot;../options/index#merging&quot;&gt;merged&lt;/a&gt; over top of project-wide config values, making them potentially useful for specific overrides, though that can also be accomplished through &lt;a href=&quot;../options/index#overrides&quot;&gt;&quot;overrides&quot;&lt;/a&gt;.</source>
          <target state="translated">Babelは、コンパイル中の&lt;a href=&quot;../options/index#filename&quot;&gt;「ファイル名」&lt;/a&gt;からディレクトリ構造を検索することにより、 &lt;code&gt;.babelrc.json&lt;/code&gt; ファイル、または&lt;a href=&quot;#supported-file-extensions&quot;&gt;サポートされている拡張子&lt;/a&gt;を使用した同等のファイルをロードします（以下の注意事項によって制限されます）。これにより、パッケージのサブセクションに独立した構成を作成できるため、強力な場合があります。ファイル相対構成もプロジェクト全体の構成値の上に&lt;a href=&quot;../options/index#merging&quot;&gt;マージさ&lt;/a&gt;れるため、特定のオーバーライドに役立つ可能性がありますが、これは&lt;a href=&quot;../options/index#overrides&quot;&gt;「オーバーライド」&lt;/a&gt;によっても実行できます。</target>
        </trans-unit>
        <trans-unit id="64481bdf84bbd424c7e6167aaf1fc71ca5ac3e47" translate="yes" xml:space="preserve">
          <source>Babel needs to statically know if you are extending a built-in class. For this reason, the &quot;mixin pattern&quot; doesn't work:</source>
          <target state="translated">Babel は、組み込みクラスを拡張しているかどうかを静的に知る必要があります。このため、&quot;mixinパターン &quot;は機能しません。</target>
        </trans-unit>
        <trans-unit id="dfbdcf0a8779eaf89505ac9a16a50c98c9768e61" translate="yes" xml:space="preserve">
          <source>Babel preset for all Flow plugins</source>
          <target state="translated">すべてのFlowプラグイン用のBabelプリセット</target>
        </trans-unit>
        <trans-unit id="47b5f16633b3e2231426c30b7d760bd37cef03a4" translate="yes" xml:space="preserve">
          <source>Babel preset that automatically determines the Babel plugins you need based on your supported environments. Uses compat-table</source>
          <target state="translated">対応環境に応じて必要なBabelプラグインを自動的に決定するBabelプリセット。互換性のある</target>
        </trans-unit>
        <trans-unit id="c5fe9bbe8d785dceca9845542acfa24c34ba3433" translate="yes" xml:space="preserve">
          <source>Babel register</source>
          <target state="translated">バベルレジスタ</target>
        </trans-unit>
        <trans-unit id="186efd88b322ce8a028a34e3588fcf244b3d0ea4" translate="yes" xml:space="preserve">
          <source>Babel template</source>
          <target state="translated">バベルテンプレート</target>
        </trans-unit>
        <trans-unit id="8d6763d7c13c1d1e88194389b5af9cadb307fc85" translate="yes" xml:space="preserve">
          <source>Babel transpiles classes using &lt;code&gt;SuperClass.apply(/* ... */)&lt;/code&gt;, but native classes aren't callable and thus throw in this case.</source>
          <target state="translated">Babelは &lt;code&gt;SuperClass.apply(/* ... */)&lt;/code&gt; を使用してクラスをトランスパイルしますが、ネイティブクラスは呼び出せないため、この場合はスローされます。</target>
        </trans-unit>
        <trans-unit id="1fa76874fb8eeb0611ab54076f87b00090a448be" translate="yes" xml:space="preserve">
          <source>Babel tries to stay true to the ECMAScript standard, as much as reasonably possible. It may also have specific options to be more spec compliant as a tradeoff to performance.</source>
          <target state="translated">Babel は、合理的に可能な限り ECMAScript 標準に忠実であろうとします。また、パフォーマンスとのトレードオフとして、より仕様に準拠した特定のオプションを持つこともあります。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
