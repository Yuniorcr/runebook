<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="javascript">
    <body>
      <group id="javascript">
        <trans-unit id="76148a8be4937c540522d77295f49c36a2ff2e71" translate="yes" xml:space="preserve">
          <source>With ES2015 class</source>
          <target state="translated">ES2015クラスで</target>
        </trans-unit>
        <trans-unit id="301715ae6b7228a153bd7e168c071c7fec1346fc" translate="yes" xml:space="preserve">
          <source>With a &lt;code&gt;Proxy&lt;/code&gt;, you can easily validate the passed value for an object. This example uses the &lt;a href=&quot;proxy/handler/set&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; handler.</source>
          <target state="translated">&lt;code&gt;Proxy&lt;/code&gt; を使用すると、オブジェクトに渡された値を簡単に検証できます。この例では、&lt;a href=&quot;proxy/handler/set&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt;ハンドラーを使用します。</target>
        </trans-unit>
        <trans-unit id="b91d803d8cd43a7d68f990e7a03f38d48afe2ae4" translate="yes" xml:space="preserve">
          <source>With a &lt;code&gt;Proxy&lt;/code&gt;, you can easily validate the passed value for an object. This example uses the &lt;a href=&quot;proxy/proxy/set&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; handler.</source>
          <target state="translated">&lt;code&gt;Proxy&lt;/code&gt; 使用すると、オブジェクトに渡された値を簡単に検証できます。この例では、&lt;a href=&quot;proxy/proxy/set&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt;ハンドラーを使用しています。</target>
        </trans-unit>
        <trans-unit id="b1c94aa05c602efbdace5e668eef77ebfd585dd0" translate="yes" xml:space="preserve">
          <source>With a &lt;code&gt;static name()&lt;/code&gt; method &lt;code&gt;Foo.name&lt;/code&gt; no longer holds the actual class name but a reference to the &lt;code&gt;name()&lt;/code&gt; function object. Above class definition in ES2015 syntax will behave in Chrome or Firefox similar to the following snippet in ES5 syntax:</source>
          <target state="translated">&lt;code&gt;static name()&lt;/code&gt; メソッド &lt;code&gt;Foo.name&lt;/code&gt; は、もはや実際のクラス名が、参照保持していない &lt;code&gt;name()&lt;/code&gt; 関数オブジェクト。ES2015構文の上記のクラス定義は、ES5構文の次のスニペットと同様にChromeまたはFirefoxで動作します。</target>
        </trans-unit>
        <trans-unit id="43a24571efa208867f78ea53b0a4d6b6f97505ab" translate="yes" xml:space="preserve">
          <source>With a generator</source>
          <target state="translated">発電機付き</target>
        </trans-unit>
        <trans-unit id="e8aa534268a6bf3faa2f5f9fcf2ff6cbb39b52a8" translate="yes" xml:space="preserve">
          <source>With default parameters in ES2015, checks in the function body are no longer necessary. Now, you can assign &lt;code&gt;1&lt;/code&gt; as the default value for &lt;code&gt;&lt;var&gt;b&lt;/var&gt;&lt;/code&gt; in the function head:</source>
          <target state="translated">ES2015のデフォルトのパラメーターを使用すると、関数本体のチェックは不要になります。これで、関数ヘッドの &lt;code&gt;&lt;var&gt;b&lt;/var&gt;&lt;/code&gt; のデフォルト値として &lt;code&gt;1&lt;/code&gt; を割り当てることができます。</target>
        </trans-unit>
        <trans-unit id="0f2af496262cde0123f388a957d1188d79d0c2dd" translate="yes" xml:space="preserve">
          <source>With default parameters in ES2015, checks in the function body are no longer necessary. Now, you can assign &lt;code&gt;1&lt;/code&gt; as the default value for &lt;code&gt;b&lt;/code&gt; in the function head:</source>
          <target state="translated">ES2015のデフォルトのパラメーターでは、関数本体のチェックは不要になりました。これで、関数ヘッドで &lt;code&gt;b&lt;/code&gt; のデフォルト値として &lt;code&gt;1&lt;/code&gt; を割り当てることができます。</target>
        </trans-unit>
        <trans-unit id="49157682a2a04166387b93d1bf3b06b1a1c69d1e" translate="yes" xml:space="preserve">
          <source>With nested structures, it is possible to use optional chaining multiple times:</source>
          <target state="translated">入れ子構造では、オプションのチェーニングを複数回使用することができます。</target>
        </trans-unit>
        <trans-unit id="beebce2a469011c72eb7976a24235029f0f0aadc" translate="yes" xml:space="preserve">
          <source>With one argument, &lt;code&gt;Math.hypot()&lt;/code&gt; is equivalent to &lt;code&gt;Math.abs()&lt;/code&gt;.</source>
          <target state="translated">1引数を指定すると、 &lt;code&gt;Math.hypot()&lt;/code&gt; と同等です &lt;code&gt;Math.abs()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0e1e0413f23354897f0b1c7e30e766ce5af8131a" translate="yes" xml:space="preserve">
          <source>With one argument, &lt;code&gt;Math.hypot()&lt;/code&gt; returns the same as &lt;code&gt;Math.abs()&lt;/code&gt;.</source>
          <target state="translated">1引数を指定すると、 &lt;code&gt;Math.hypot()&lt;/code&gt; と同じ返し &lt;code&gt;Math.abs()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="70550e7319b2c0e94bdf20a146474f81364c8b19" translate="yes" xml:space="preserve">
          <source>With proper input, this should usually look like something like this:</source>
          <target state="translated">適切に入力すると、通常はこのようになります。</target>
        </trans-unit>
        <trans-unit id="8e1f40baa92517329c8ee43fa85ab153667a695f" translate="yes" xml:space="preserve">
          <source>With spread syntax the above can be written as:</source>
          <target state="translated">スプレッド構文を使えば、上記のように書くことができます。</target>
        </trans-unit>
        <trans-unit id="20929631a904f8d75efe524326c904b941485b97" translate="yes" xml:space="preserve">
          <source>With spread syntax this becomes [Note, however, that this creates a new &lt;code&gt;arr1&lt;/code&gt; array. Unlike &lt;a href=&quot;../global_objects/array/unshift&quot;&gt;&lt;code&gt;Array.unshift&lt;/code&gt;&lt;/a&gt;, it does not modify the original &lt;code&gt;arr1&lt;/code&gt; array in-place]:</source>
          <target state="translated">スプレッド構文を使用すると、これは[ただし、これにより新しい &lt;code&gt;arr1&lt;/code&gt; 配列が作成されることに注意してください。&lt;a href=&quot;../global_objects/array/unshift&quot;&gt; &lt;code&gt;Array.unshift&lt;/code&gt; &lt;/a&gt;とは異なり、元の &lt;code&gt;arr1&lt;/code&gt; 配列は変更されません]：</target>
        </trans-unit>
        <trans-unit id="c90a20c93dc80b5d0737c80aa42eac756eff7b6c" translate="yes" xml:space="preserve">
          <source>With spread syntax this becomes:</source>
          <target state="translated">スプレッド構文ではこれになります。</target>
        </trans-unit>
        <trans-unit id="41cbd3ba2c1501ca13a86479218ff5f5b8e9c346" translate="yes" xml:space="preserve">
          <source>With spread syntax, this becomes:</source>
          <target state="translated">スプレッドシンタックスでは、これになります。</target>
        </trans-unit>
        <trans-unit id="8755635a68a9ff9addf24ee9057b72bcbe3c63af" translate="yes" xml:space="preserve">
          <source>With the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style&quot;&gt;&lt;code&gt;element.style&lt;/code&gt;&lt;/a&gt; object you can get the element's &lt;code&gt;style&lt;/code&gt; attribute and manipulate it more generically, for example:</source>
          <target state="translated">では&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style&quot;&gt; &lt;code&gt;element.style&lt;/code&gt; &lt;/a&gt;オブジェクトあなたは、要素の取得することができ &lt;code&gt;style&lt;/code&gt; 属性をし、例えば、より一般的にそれを操作します：</target>
        </trans-unit>
        <trans-unit id="1a6a46e24355764539ccf91a6e81daaf2ae9450f" translate="yes" xml:space="preserve">
          <source>With the &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style&quot;&gt;&lt;code&gt;element.style&lt;/code&gt;&lt;/a&gt; object you can get the element's &lt;code&gt;style&lt;/code&gt; attribute and manipulate it more generically, for example:</source>
          <target state="translated">では&lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style&quot;&gt; &lt;code&gt;element.style&lt;/code&gt; &lt;/a&gt;オブジェクトあなたは、要素の取得することができ &lt;code&gt;style&lt;/code&gt; 属性をし、例えば、より一般的にそれを操作します：</target>
        </trans-unit>
        <trans-unit id="3b2cd2f1a3e338cc2a4f82547b4f75047f7f79db" translate="yes" xml:space="preserve">
          <source>With the JavaScript field declaration syntax, the above example can be written as:</source>
          <target state="translated">JavaScriptのフィールド宣言構文を使えば、上の例は次のように書くことができます。</target>
        </trans-unit>
        <trans-unit id="7c2343c28b3229ff7f26995d60e72095120a44c1" translate="yes" xml:space="preserve">
          <source>With the global flag &lt;code&gt;g&lt;/code&gt;, all 6 digits would be matched, not just 3.</source>
          <target state="translated">グローバルフラグ &lt;code&gt;g&lt;/code&gt; を使用すると、3桁だけでなく、6桁すべてが一致します。</target>
        </trans-unit>
        <trans-unit id="6bbe389c6a8efdc9326707ad0a603f42ba9f4ee9" translate="yes" xml:space="preserve">
          <source>With the help of the &lt;a href=&quot;reflect&quot;&gt;&lt;code&gt;Reflect&lt;/code&gt;&lt;/a&gt; class we can give some accessors the original behavior and redefine others:</source>
          <target state="translated">&lt;a href=&quot;reflect&quot;&gt; &lt;code&gt;Reflect&lt;/code&gt; &lt;/a&gt;クラスの助けを借りて、一部のアクセサーに元の動作を与え、他のアクセサーを再定義することができます。</target>
        </trans-unit>
        <trans-unit id="fca824eaf280c8c96cff3cd68b1b8df202a1468d" translate="yes" xml:space="preserve">
          <source>With the help of the &lt;code&gt;Symbol.toPrimitive&lt;/code&gt; property (used as a function value), an object can be converted to a primitive value. The function is called with a string argument &lt;code&gt;hint&lt;/code&gt;, which specifies the preferred type of the result primitive value. The &lt;code&gt;hint&lt;/code&gt; argument can be one of &lt;code&gt;&quot;&lt;em&gt;number&lt;/em&gt;&quot;&lt;/code&gt;, &lt;code&gt;&quot;&lt;em&gt;string&lt;/em&gt;&quot;&lt;/code&gt;, and &lt;code&gt;&quot;&lt;em&gt;default&lt;/em&gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">助けを借りて &lt;code&gt;Symbol.toPrimitive&lt;/code&gt; （関数値として使用される）プロパティ、オブジェクトは、プリミティブ値に変換することができます。関数は、結果のプリミティブ値の推奨されるタイプを指定する文字列引数 &lt;code&gt;hint&lt;/code&gt; で呼び出されます。 &lt;code&gt;hint&lt;/code&gt; 引数は、のいずれかになります。 &lt;code&gt;&quot;&lt;em&gt;number&lt;/em&gt;&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;&lt;em&gt;string&lt;/em&gt;&quot;&lt;/code&gt; 、および &lt;code&gt;&quot;&lt;em&gt;default&lt;/em&gt;&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aeb84dfe796e4fdfa99c5788706f1f6d67269b5d" translate="yes" xml:space="preserve">
          <source>With the optional chaining operator (&lt;code&gt;?.&lt;/code&gt;), however, you don't have to explicitly test and short-circuit based on the state of &lt;code&gt;obj.first&lt;/code&gt; before trying to access &lt;code&gt;obj.first.second&lt;/code&gt;:</source>
          <target state="translated">（オプションの連鎖演算子で &lt;code&gt;?.&lt;/code&gt; ）、しかし、あなたは明示的にテストおよび短絡の状態に基づいてする必要はありません &lt;code&gt;obj.first&lt;/code&gt; アクセスしようとする前に &lt;code&gt;obj.first.second&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="d98c6b3de20142ff113bde69906707fe61b23ea9" translate="yes" xml:space="preserve">
          <source>With the preceding code in place, any time &lt;code&gt;theDog&lt;/code&gt; is used in a string context, JavaScript automatically calls the &lt;code&gt;dogToString()&lt;/code&gt; function, which returns the following string:</source>
          <target state="translated">上記のコードを配置すると、 &lt;code&gt;theDog&lt;/code&gt; が文字列コンテキストで使用されるたびに、JavaScriptが自動的に &lt;code&gt;dogToString()&lt;/code&gt; 関数を呼び出し、次の文字列を返します。</target>
        </trans-unit>
        <trans-unit id="5d71fa4f2c457478f838302121e00b2ac8d68010" translate="yes" xml:space="preserve">
          <source>With the preceding code in place, any time an object of type &lt;code&gt;MyNumberType&lt;/code&gt; is used in a context where it is to be represented as a primitive value, JavaScript automatically calls the function defined in the preceding code.</source>
          <target state="translated">上記のコードを配置すると、 &lt;code&gt;MyNumberType&lt;/code&gt; タイプのオブジェクトがプリミティブ値として表されるコンテキストで使用されると、JavaScriptは自動的に前のコードで定義された関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="d6cdb12bb0f42674e0ed606506ce7502dde03562" translate="yes" xml:space="preserve">
          <source>With the sticky flag &lt;code&gt;y&lt;/code&gt;, the next match has to happen at the &lt;code&gt;lastIndex&lt;/code&gt; position, while with the global flag &lt;code&gt;g&lt;/code&gt;, the match can happen at the &lt;code&gt;lastIndex&lt;/code&gt; position or later:</source>
          <target state="translated">スティッキーフラグ &lt;code&gt;y&lt;/code&gt; の場合、次の一致は &lt;code&gt;lastIndex&lt;/code&gt; 位置で発生する必要がありますが、グローバルフラグ &lt;code&gt;g&lt;/code&gt; の場合、一致は &lt;code&gt;lastIndex&lt;/code&gt; 位置以降で発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="b56bbc66c4a30e752c8eced78369fe41462374b5" translate="yes" xml:space="preserve">
          <source>With these two headers set, &lt;code&gt;postMessage()&lt;/code&gt; will no longer throw for &lt;code&gt;SharedArrayBuffer&lt;/code&gt; objects and shared memory across threads is therefore available.</source>
          <target state="translated">これらの2つのヘッダーが設定されると、 &lt;code&gt;postMessage()&lt;/code&gt; は &lt;code&gt;SharedArrayBuffer&lt;/code&gt; オブジェクトをスローしなくなり、スレッド間で共有メモリを使用できるようになります。</target>
        </trans-unit>
        <trans-unit id="793f0afb28999d5030e6dd1cc89bcd540f4cb9c4" translate="yes" xml:space="preserve">
          <source>With this change, rather than return unpaired surrogate code points as single UTF-16 code units, &lt;code&gt;JSON.stringify&lt;/code&gt; represents them with JSON escape sequences:</source>
          <target state="translated">この変更により、対になっていないサロゲートコードポイントを単一のUTF-16コード単位として返すのではなく、 &lt;code&gt;JSON.stringify&lt;/code&gt; はJSONエスケープシーケンスでそれらを表します。</target>
        </trans-unit>
        <trans-unit id="f273894e8ce1e6aef2a84b8f1fd3af13fc038910" translate="yes" xml:space="preserve">
          <source>Within a &lt;a href=&quot;switch&quot;&gt;&lt;code&gt;switch&lt;/code&gt;&lt;/a&gt; statement:</source>
          <target state="translated">&lt;a href=&quot;switch&quot;&gt; &lt;code&gt;switch&lt;/code&gt; &lt;/a&gt;ステートメント内：</target>
        </trans-unit>
        <trans-unit id="3ce3219e33b27aedb2e6752bd53d467776e6a5d5" translate="yes" xml:space="preserve">
          <source>Within a class constructor, &lt;code&gt;this&lt;/code&gt; is a regular object. All non-static methods within the class are added to the prototype of &lt;code&gt;this&lt;/code&gt;:</source>
          <target state="translated">クラスコンストラクター内では、 &lt;code&gt;this&lt;/code&gt; は通常のオブジェクトです。クラス内のすべての非静的メソッドは、 &lt;code&gt;this&lt;/code&gt; プロトタイプに追加されます。</target>
        </trans-unit>
        <trans-unit id="791d7a41964cf0f31d9ba752416d11a7e1508cf0" translate="yes" xml:space="preserve">
          <source>Without destructuring assignment, swapping two values requires a temporary variable (or, in some low-level languages, the &lt;a href=&quot;https://en.wikipedia.org/wiki/XOR_swap_algorithm&quot;&gt;XOR-swap trick&lt;/a&gt;).</source>
          <target state="translated">代入を破壊せずに2つの値を交換するには、一時変数が必要です（または、一部の低レベル言語では、&lt;a href=&quot;https://en.wikipedia.org/wiki/XOR_swap_algorithm&quot;&gt;XOR交換トリック&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="8d416f5099c0e2565de012ea83e9bd876843b41d" translate="yes" xml:space="preserve">
          <source>Without special care, however, the original object is usually lost. Creating a bound function from the function, using the original object, neatly solves this problem:</source>
          <target state="translated">しかし、特別な注意を払わなければ、元のオブジェクトは通常失われてしまいます。元のオブジェクトを使って、関数からバインド関数を作成することで、この問題をきれいに解決することができます。</target>
        </trans-unit>
        <trans-unit id="69bdc0b9a6c8a7c5d335b017115cc93a7312eabf" translate="yes" xml:space="preserve">
          <source>Without spread syntax, to create a new array using an existing array as one part of it, the array literal syntax is no longer sufficient and imperative code must be used instead using a combination of &lt;a href=&quot;../global_objects/array/push&quot;&gt;&lt;code&gt;push()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/array/splice&quot;&gt;&lt;code&gt;splice()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/array/concat&quot;&gt;&lt;code&gt;concat()&lt;/code&gt;&lt;/a&gt;, etc. With spread syntax this becomes much more succinct:</source>
          <target state="translated">スプレッド構文がないと、既存の配列をその一部として使用して新しい配列を作成するには、配列リテラル構文では不十分であり、代わりに&lt;a href=&quot;../global_objects/array/push&quot;&gt; &lt;code&gt;push()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../global_objects/array/splice&quot;&gt; &lt;code&gt;splice()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../global_objects/array/concat&quot;&gt; &lt;code&gt;concat()&lt;/code&gt; &lt;/a&gt;、の組み合わせを使用して命令型コードを使用する必要があります。など。spread構文を使用すると、これははるかに簡潔になります。</target>
        </trans-unit>
        <trans-unit id="ff2d3cf2cfeac0b6bc4fa73f8673d839ddd8eaaa" translate="yes" xml:space="preserve">
          <source>Without spread syntax, to create a new array using an existing array as one part of it, the array literal syntax is no longer sufficient and imperative code must be used instead using a combination of &lt;code&gt;push&lt;/code&gt;, &lt;code&gt;splice&lt;/code&gt;, &lt;code&gt;concat&lt;/code&gt;, etc. With spread syntax this becomes much more succinct:</source>
          <target state="translated">スプレッド構文がない場合、既存の配列をその一部として使用して新しい配列を作成するには、配列リテラル構文では不十分で、代わりに &lt;code&gt;push&lt;/code&gt; 、 &lt;code&gt;splice&lt;/code&gt; 、 &lt;code&gt;concat&lt;/code&gt; などを組み合わせて使用​​する命令コードを使用する必要があります。スプレッド構文では、はるかに簡潔になります：</target>
        </trans-unit>
        <trans-unit id="dd81953275e4c603fc6e296163f16395c6ee5da7" translate="yes" xml:space="preserve">
          <source>Working Draft</source>
          <target state="translated">ワーキングドラフト</target>
        </trans-unit>
        <trans-unit id="b42dbd14c3773a01ab60fc95836663cedbdae39a" translate="yes" xml:space="preserve">
          <source>Wraps a &lt;code&gt;BigInt&lt;/code&gt; value to a signed integer between &lt;code&gt;-2&lt;var&gt;&lt;sup&gt;width&lt;/sup&gt;&lt;/var&gt;&lt;sup&gt;-1&lt;/sup&gt;&lt;/code&gt; and &lt;code&gt;2&lt;var&gt;&lt;sup&gt;width&lt;/sup&gt;&lt;/var&gt;&lt;sup&gt;-1&lt;/sup&gt;&amp;nbsp;-&amp;nbsp;1&lt;/code&gt;.</source>
          <target state="translated">ラップ &lt;code&gt;BigInt&lt;/code&gt; 符号付きの整数に値を &lt;code&gt;-2&lt;var&gt;&lt;sup&gt;width&lt;/sup&gt;&lt;/var&gt;&lt;sup&gt;-1&lt;/sup&gt;&lt;/code&gt; 及び &lt;code&gt;2&lt;var&gt;&lt;sup&gt;width&lt;/sup&gt;&lt;/var&gt;&lt;sup&gt;-1&lt;/sup&gt;&amp;nbsp;-&amp;nbsp;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="68bb210133f654d67954b3e8c11f996a49d261b6" translate="yes" xml:space="preserve">
          <source>Wraps a &lt;code&gt;BigInt&lt;/code&gt; value to an unsigned integer between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;2&lt;var&gt;&lt;sup&gt;width&lt;/sup&gt;&lt;/var&gt;&amp;nbsp;-&amp;nbsp;1&lt;/code&gt;.</source>
          <target state="translated">ラップ &lt;code&gt;BigInt&lt;/code&gt; 間の符号なし整数に値を &lt;code&gt;0&lt;/code&gt; と &lt;code&gt;2&lt;var&gt;&lt;sup&gt;width&lt;/sup&gt;&lt;/var&gt;&amp;nbsp;-&amp;nbsp;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dd35487a2eb7da40332f7fc41452378d92a72445" translate="yes" xml:space="preserve">
          <source>Writable</source>
          <target state="translated">Writable</target>
        </trans-unit>
        <trans-unit id="6dd905bf19c036bc34f8dc2c351d91b4824501c7" translate="yes" xml:space="preserve">
          <source>Writable attribute</source>
          <target state="translated">書き込み可能属性</target>
        </trans-unit>
        <trans-unit id="4a48932789d199bbed709777e2d743ca2bafdc6c" translate="yes" xml:space="preserve">
          <source>Write</source>
          <target state="translated">Write</target>
        </trans-unit>
        <trans-unit id="91df764b6cdf2f5a560a7b7674bfde65bfd7574d" translate="yes" xml:space="preserve">
          <source>Write map using reduce</source>
          <target state="translated">reduceを使って地図を書く</target>
        </trans-unit>
        <trans-unit id="013eb748dc1cdddfbedd69ae793734611d5ef616" translate="yes" xml:space="preserve">
          <source>Write your code as strict and make sure no strict-only errors (from the above &quot;New runtime errors&quot; section) are thrown.</source>
          <target state="translated">コードを厳密に書き、(上記の &quot;新しいランタイムエラー &quot;セクションの)厳密なエラーのみが発生しないことを確認してください。</target>
        </trans-unit>
        <trans-unit id="f61f58bdd318401d67190392d7b2253d9196aabd" translate="yes" xml:space="preserve">
          <source>Writing &lt;code&gt;return processDataInWorker(v)&lt;/code&gt; would have caused the &lt;a href=&quot;../global_objects/promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; returned by the function to reject, instead of resolving to &lt;code&gt;null&lt;/code&gt; if &lt;code&gt;processDataInWorker(v)&lt;/code&gt; rejects.</source>
          <target state="translated">書き込み &lt;code&gt;return processDataInWorker(v)&lt;/code&gt; 発生していた&lt;a href=&quot;../global_objects/promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;代わりに解決する、拒否する関数によって返された &lt;code&gt;null&lt;/code&gt; の場合 &lt;code&gt;processDataInWorker(v)&lt;/code&gt; を拒否します。</target>
        </trans-unit>
        <trans-unit id="a9641e671b1e5c5e6ac46e0941ff681bc99d042e" translate="yes" xml:space="preserve">
          <source>Wrong scope</source>
          <target state="translated">範囲を間違えた</target>
        </trans-unit>
        <trans-unit id="d767a29312ec15e631d600bc69302c3d1fa55d7a" translate="yes" xml:space="preserve">
          <source>X.prototype.y called on incompatible type</source>
          <target state="translated">X.prototype.y は互換性のない型で呼び出されました。</target>
        </trans-unit>
        <trans-unit id="e25e71e17327915076582515865d03ff632a13ee" translate="yes" xml:space="preserve">
          <source>Year, as four or more digits with leading zeroes if required</source>
          <target state="translated">年号は4桁以上の数字で、必要に応じて先頭にゼロを付けてください。</target>
        </trans-unit>
        <trans-unit id="4067f598e5b4150371a45f7ce91365099f1ef632" translate="yes" xml:space="preserve">
          <source>Year: 4 digit year, e.g. &quot;2018&quot;</source>
          <target state="translated">年号です。4桁の年、例:&quot;2018&quot;</target>
        </trans-unit>
        <trans-unit id="74a0ddcfa52b08c01d4e509007dd4df7101a4ff5" translate="yes" xml:space="preserve">
          <source>Years above 1999</source>
          <target state="translated">1999年より上の年</target>
        </trans-unit>
        <trans-unit id="a48519263e2585e305adb27d4c0a583359831927" translate="yes" xml:space="preserve">
          <source>Years below 1900</source>
          <target state="translated">1900年以下の年</target>
        </trans-unit>
        <trans-unit id="1452ffdb9676209ff8b084ec6a468085a7bd7d47" translate="yes" xml:space="preserve">
          <source>Years between 0 and 99 are converted to a year in the 20th century &lt;code&gt;(1900 + year)&lt;/code&gt;; for example, 95 is converted to the year 1995.</source>
          <target state="translated">0から99までの年は、20世紀の &lt;code&gt;(1900 + year)&lt;/code&gt; 変換されます。たとえば、95は1995年に変換されます。</target>
        </trans-unit>
        <trans-unit id="2f4c6d5c81cab6c57bd4a73227e4bcecffe434a6" translate="yes" xml:space="preserve">
          <source>Years between 1900 and 1999</source>
          <target state="translated">1900年から1999年までの年月</target>
        </trans-unit>
        <trans-unit id="0b4f4985566f06eb0578abe775ed8d2560532234" translate="yes" xml:space="preserve">
          <source>Years between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;99&lt;/code&gt; are converted to a year in the 20&lt;sup&gt;th&lt;/sup&gt; century &lt;code&gt;(1900 + year)&lt;/code&gt;. For example, &lt;code&gt;95&lt;/code&gt; is converted to the year &lt;code&gt;1995&lt;/code&gt;.</source>
          <target state="translated">間の年 &lt;code&gt;0&lt;/code&gt; と &lt;code&gt;99&lt;/code&gt; は20年に変換されている&lt;sup&gt;番目の&lt;/sup&gt;世紀 &lt;code&gt;(1900 + year)&lt;/code&gt; 。たとえば、 &lt;code&gt;95&lt;/code&gt; は &lt;code&gt;1995&lt;/code&gt; 年に変換されます。</target>
        </trans-unit>
        <trans-unit id="5397e0583f14f6c88de06b1ef28f460a1fb5b0ae" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="translated">Yes</target>
        </trans-unit>
        <trans-unit id="55f484b4349e7320b9bfe8cd196d265c530e217d" translate="yes" xml:space="preserve">
          <source>Yes, you can! JavaScript will drop you back to the &lt;code&gt;default&lt;/code&gt; if it can't find a match:</source>
          <target state="translated">はい、できます！一致するものが見つからない場合、JavaScriptは &lt;code&gt;default&lt;/code&gt; 戻ります。</target>
        </trans-unit>
        <trans-unit id="c2d74147ee1ca9945f3548c1823e8be4942136c3" translate="yes" xml:space="preserve">
          <source>Yes, you can! JavaScript will drop you back to the default if it can't find a match:</source>
          <target state="translated">はい、できます! 一致するものが見つからない場合、JavaScriptはデフォルトの状態に戻します。</target>
        </trans-unit>
        <trans-unit id="7368014e444decf6e59436d4a3ed98d5c7458cdd" translate="yes" xml:space="preserve">
          <source>You &lt;strong&gt;cannot&lt;/strong&gt; declare properties of an object or array with a &lt;code&gt;var&lt;/code&gt; declaration.</source>
          <target state="translated">オブジェクトまたは配列のプロパティを &lt;code&gt;var&lt;/code&gt; 宣言で宣言すること&lt;strong&gt;はできません&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="521c7e03836a957ade6452f4ac7902372805c2b9" translate="yes" xml:space="preserve">
          <source>You Don't Know JS: Scope &amp;amp; Closures: Chapter 3: Function vs. Block Scope</source>
          <target state="translated">JS：スコープとクロージャー：第3章：関数とブロックスコープの違い</target>
        </trans-unit>
        <trans-unit id="cccb9814f77bd21b665216fa1db8fd5d062e8d3c" translate="yes" xml:space="preserve">
          <source>You are also able to call super on &lt;a href=&quot;../classes/static&quot;&gt;static&lt;/a&gt; methods.</source>
          <target state="translated">&lt;a href=&quot;../classes/static&quot;&gt;静的&lt;/a&gt;メソッドでスーパーを呼び出すこともできます。</target>
        </trans-unit>
        <trans-unit id="2480d740f3c4be1fd67a36cd51644e06284eff5c" translate="yes" xml:space="preserve">
          <source>You are now able to shorten this to:</source>
          <target state="translated">に短縮できるようになりました。</target>
        </trans-unit>
        <trans-unit id="8ee7e0036a4736846cecef2fbec33a4fd9ce22fd" translate="yes" xml:space="preserve">
          <source>You can add a shared property to a previously defined object type by using the &lt;code&gt;&lt;a href=&quot;../global_objects/function&quot;&gt;Function.prototype&lt;/a&gt;&lt;/code&gt; property. This defines a property that is shared by all objects created with that function, rather than by just one instance of the object type. The following code adds a color property with value &lt;code&gt;&quot;original color&quot;&lt;/code&gt; to all objects of type &lt;code&gt;Car&lt;/code&gt;, and then overwrites that value with the string &quot;&lt;code&gt;black&lt;/code&gt;&quot; only in the instance object &lt;code&gt;car1&lt;/code&gt;. For more information, see &lt;a href=&quot;../global_objects/function&quot;&gt;prototype&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../global_objects/function&quot;&gt;Function.prototype&lt;/a&gt;&lt;/code&gt; プロパティを使用して、以前に定義したオブジェクトタイプに共有プロパティを追加できます。これは、オブジェクトタイプの1つのインスタンスだけでなく、その関数で作成されたすべてのオブジェクトによって共有されるプロパティを定義します。次のコードは、 &lt;code&gt;Car&lt;/code&gt; タイプのすべてのオブジェクトに値 &lt;code&gt;&quot;original color&quot;&lt;/code&gt; colorプロパティを追加し、インスタンスオブジェクト &lt;code&gt;car1&lt;/code&gt; でのみその値を文字列「 &lt;code&gt;black&lt;/code&gt; 」で上書きします。詳細については、&lt;a href=&quot;../global_objects/function&quot;&gt;プロトタイプを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="865bb16ff57dc01af75233ec9067dc26d2ba1d0a" translate="yes" xml:space="preserve">
          <source>You can add a shared property to a previously defined object type by using the &lt;code&gt;&lt;a href=&quot;../global_objects/function/prototype&quot;&gt;Function.prototype&lt;/a&gt;&lt;/code&gt; property. This defines a property that is shared by all objects created with that function, rather than by just one instance of the object type. The following code adds a color property with value &lt;code&gt;&quot;original color&quot;&lt;/code&gt; to all objects of type &lt;code&gt;Car&lt;/code&gt;, and then overwrites that value with the string &quot;&lt;code&gt;black&lt;/code&gt;&quot; only in the instance object &lt;code&gt;car1&lt;/code&gt;. For more information, see &lt;a href=&quot;../global_objects/function/prototype&quot;&gt;prototype&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../global_objects/function/prototype&quot;&gt;Function.prototype&lt;/a&gt;&lt;/code&gt; プロパティを使用して、以前に定義したオブジェクトタイプに共有プロパティを追加できます。これは、オブジェクトタイプの1つのインスタンスだけではなく、その関数で作成されたすべてのオブジェクトによって共有されるプロパティを定義します。次のコードは、値が &lt;code&gt;&quot;original color&quot;&lt;/code&gt; の colorプロパティを &lt;code&gt;Car&lt;/code&gt; 型のすべてのオブジェクトに追加し、インスタンスオブジェクト &lt;code&gt;car1&lt;/code&gt; の文字列 &quot; &lt;code&gt;black&lt;/code&gt; &quot;でその値を上書きします。詳細については、&lt;a href=&quot;../global_objects/function/prototype&quot;&gt;プロトタイプを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d542dc4e491f32d0775f4ec27414ea9c20acd262" translate="yes" xml:space="preserve">
          <source>You can also define a class using a &lt;a href=&quot;../operators/class&quot;&gt;class expression&lt;/a&gt;. But unlike a class expression, a class declaration doesn't allow an existing class to be declared again and will throw a &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; if attempted.</source>
          <target state="translated">&lt;a href=&quot;../operators/class&quot;&gt;クラス式&lt;/a&gt;を使用してクラスを定義することもできます。ただし、クラス式とは異なり、クラス宣言では既存のクラスを再度宣言することはできず、試行すると&lt;a href=&quot;../global_objects/syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="3bdb85bcafe6623fb9a964cb277d7f723afcbc0e" translate="yes" xml:space="preserve">
          <source>You can also define a class using a &lt;a href=&quot;../operators/class&quot;&gt;class expression&lt;/a&gt;. But unlike the class expression, the class declaration doesn't allow an existing class to be declared again and will throw a type error if attempted.</source>
          <target state="translated">&lt;a href=&quot;../operators/class&quot;&gt;クラス式&lt;/a&gt;を使用してクラスを定義することもできます。ただし、クラス式とは異なり、クラス宣言では既存のクラスを再度宣言することはできず、試行すると型エラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="7bcbd995abfea623a89661e6991b90487ab0834a" translate="yes" xml:space="preserve">
          <source>You can also define async functions using an &lt;a href=&quot;../operators/async_function&quot;&gt;async function expression&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../operators/async_function&quot;&gt;非同期関数式&lt;/a&gt;を使用して非同期関数を定義することもできます。</target>
        </trans-unit>
        <trans-unit id="1889b1940970680ea5462b0b2f87ea62a3c19a3f" translate="yes" xml:space="preserve">
          <source>You can also define async functions using an &lt;a href=&quot;../statements/async_function&quot;&gt;async function statement&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../statements/async_function&quot;&gt;非同期関数ステートメント&lt;/a&gt;を使用して、非同期関数を定義することもできます。</target>
        </trans-unit>
        <trans-unit id="ecaf9336e4ca3c1e5da4e0ccb0aab02f8877d562" translate="yes" xml:space="preserve">
          <source>You can also define functions using the &lt;a href=&quot;../global_objects/function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; constructor and a &lt;a href=&quot;../operators/function&quot;&gt;&lt;code&gt;function expression&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../global_objects/function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt;コンストラクターと&lt;a href=&quot;../operators/function&quot;&gt; &lt;code&gt;function expression&lt;/code&gt; &lt;/a&gt;を使用して関数を定義することもできます。</target>
        </trans-unit>
        <trans-unit id="e5c09816275c31982a7797826a0275978cd9c056" translate="yes" xml:space="preserve">
          <source>You can also define functions using the &lt;a href=&quot;../global_objects/function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; constructor and a &lt;a href=&quot;../operators/function&quot;&gt;function expression&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../global_objects/function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt;コンストラクターと&lt;a href=&quot;../operators/function&quot;&gt;関数式&lt;/a&gt;を使用して関数を定義することもできます。</target>
        </trans-unit>
        <trans-unit id="98d7deaccf80e0fb44c209b467ebb5e745c88275" translate="yes" xml:space="preserve">
          <source>You can also define functions using the &lt;a href=&quot;../global_objects/function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; constructor and a &lt;a href=&quot;../statements/function&quot;&gt;&lt;code&gt;function declaration&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../global_objects/function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt;コンストラクタと&lt;a href=&quot;../statements/function&quot;&gt; &lt;code&gt;function declaration&lt;/code&gt; &lt;/a&gt;を使用して関数を定義することもできます。</target>
        </trans-unit>
        <trans-unit id="f6a586314ae1cf5e1c9fd686769476a36b9a20f0" translate="yes" xml:space="preserve">
          <source>You can also define functions using the &lt;a href=&quot;../global_objects/function/function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; constructor and a &lt;a href=&quot;../statements/function&quot;&gt;function declaration&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../global_objects/function/function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt;コンストラクターと&lt;a href=&quot;../statements/function&quot;&gt;関数宣言&lt;/a&gt;を使用して関数を定義することもできます。</target>
        </trans-unit>
        <trans-unit id="6077552aaf0a08750bcb38c51cf9a2a38f305b95" translate="yes" xml:space="preserve">
          <source>You can also define generator functions using the &lt;a href=&quot;../global_objects/generatorfunction&quot;&gt;&lt;code&gt;GeneratorFunction&lt;/code&gt;&lt;/a&gt; constructor, or the function expression syntax.</source>
          <target state="translated">&lt;a href=&quot;../global_objects/generatorfunction&quot;&gt; &lt;code&gt;GeneratorFunction&lt;/code&gt; &lt;/a&gt;コンストラクターまたは関数式構文を使用してジェネレーター関数を定義することもできます。</target>
        </trans-unit>
        <trans-unit id="4f1c1ffd9bf18b1349f61e21a931b5d8035ac46f" translate="yes" xml:space="preserve">
          <source>You can also ignore all returned values:</source>
          <target state="translated">返された値をすべて無視することもできます。</target>
        </trans-unit>
        <trans-unit id="cf2a0433ae777e2314ed73be75951166ddeb865f" translate="yes" xml:space="preserve">
          <source>You can also iterate over &lt;a href=&quot;function*&quot;&gt;generators&lt;/a&gt;, i.e. functions generating an iterable object:</source>
          <target state="translated">&lt;a href=&quot;function*&quot;&gt;ジェネレータ&lt;/a&gt;、つまり反復可能なオブジェクトを生成する関数を反復処理することもできます。</target>
        </trans-unit>
        <trans-unit id="a3cf5dbe02881cba571a6421055082ba7359f626" translate="yes" xml:space="preserve">
          <source>You can also iterate over an object that explicitly implements &lt;a href=&quot;../iteration_protocols#iterable&quot;&gt;iterable&lt;/a&gt; protocol:</source>
          <target state="translated">&lt;a href=&quot;../iteration_protocols#iterable&quot;&gt;反復可能な&lt;/a&gt;プロトコルを明示的に実装するオブジェクトを反復処理することもできます。</target>
        </trans-unit>
        <trans-unit id="f6ce22181a3f713a43890d656e294b89b1ce38b0" translate="yes" xml:space="preserve">
          <source>You can also iterate over an object that explicitly implements async iterable protocol:</source>
          <target state="translated">また、非同期反復可能なプロトコルを明示的に実装したオブジェクトに対して反復処理を行うこともできます。</target>
        </trans-unit>
        <trans-unit id="5d513ce36b38df144ced2ba076a630d3ceb0d704" translate="yes" xml:space="preserve">
          <source>You can also iterate over an object that explicitly implements the &lt;a href=&quot;../iteration_protocols#iterable&quot;&gt;iterable&lt;/a&gt; protocol:</source>
          <target state="translated">&lt;a href=&quot;../iteration_protocols#iterable&quot;&gt;反復可能な&lt;/a&gt;プロトコルを明示的に実装するオブジェクトを反復処理することもできます。</target>
        </trans-unit>
        <trans-unit id="255faffda5a342702c7e7f58d40956a9b09915bf" translate="yes" xml:space="preserve">
          <source>You can also make multiple-line comments, like this:</source>
          <target state="translated">こんな感じで複数行コメントもできます。</target>
        </trans-unit>
        <trans-unit id="dd534f9a5a01a83afffe5371b4b4c8323d6e0ccf" translate="yes" xml:space="preserve">
          <source>You can also omit all three blocks. Again, make sure to use a &lt;a href=&quot;break&quot;&gt;&lt;code&gt;break&lt;/code&gt;&lt;/a&gt; statement to end the loop and also modify (increase) a variable, so that the condition for the break statement is true at some point.</source>
          <target state="translated">3つのブロックすべてを省略することもできます。繰り返しになりますが、必ず&lt;a href=&quot;break&quot;&gt; &lt;code&gt;break&lt;/code&gt; &lt;/a&gt;ステートメントを使用してループを終了し、変数を変更（増加）して、breakステートメントの条件がある時点で真になるようにしてください。</target>
        </trans-unit>
        <trans-unit id="3faf010605143904e37593dfcaff0f1c31473ee9" translate="yes" xml:space="preserve">
          <source>You can also omit all three blocks. Again, make sure to use a &lt;code&gt;&lt;a href=&quot;break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; statement to end the loop and also modify (increase) a variable, so that the condition for the break statement is true at some point.</source>
          <target state="translated">3つのブロックすべてを省略することもできます。繰り返しますが、 &lt;code&gt;&lt;a href=&quot;break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; ステートメントを使用してループを終了し、変数を変更（増加）して、breakステートメントの条件がどこかでtrueになるようにします。</target>
        </trans-unit>
        <trans-unit id="71c3f991d053597638c5a98e2d8b1a96c2d7d009" translate="yes" xml:space="preserve">
          <source>You can also provide an &lt;a href=&quot;../../functions/arrow_functions&quot;&gt;Arrow Function&lt;/a&gt; in lieu of a full function. The code below will produce the same output as the code in the block above:</source>
          <target state="translated">完全な関数の代わりに&lt;a href=&quot;../../functions/arrow_functions&quot;&gt;アロー関数&lt;/a&gt;を提供することもできます。以下のコードは、上記のブロックのコードと同じ出力を生成します。</target>
        </trans-unit>
        <trans-unit id="a14228e69bb19da0cd9a3be9cc3e64feacb645a8" translate="yes" xml:space="preserve">
          <source>You can also provide an &lt;a href=&quot;../../functions/arrow_functions&quot;&gt;Arrow Function&lt;/a&gt; instead of a full function. The code below will produce the same output as the code in the block above:</source>
          <target state="translated">全機能の代わりに&lt;a href=&quot;../../functions/arrow_functions&quot;&gt;矢印機能を&lt;/a&gt;提供することもできます。以下のコードは、上記のブロックのコードと同じ出力を生成します。</target>
        </trans-unit>
        <trans-unit id="6bb6bd0ac16c125ccf36ee160dfe09e554f6fee2" translate="yes" xml:space="preserve">
          <source>You can also rename named exports to avoid naming conflicts:</source>
          <target state="translated">また、名前の競合を避けるために、名前付きエクスポートの名前を変更することもできます。</target>
        </trans-unit>
        <trans-unit id="a50b6cdf7d9918315973deaa6376a9968a88b7af" translate="yes" xml:space="preserve">
          <source>You can also send a value with next(value) into the generator. 'step' evaluates as a return value in this syntax [&lt;var&gt;rv&lt;/var&gt;] = &lt;strong&gt;yield&lt;/strong&gt; [&lt;var&gt;expression&lt;/var&gt;]</source>
          <target state="translated">next（value）を使用して値をジェネレーターに送信することもできます。'step'は、この構文の戻り値として評価されます[ &lt;var&gt;rv&lt;/var&gt; ] = &lt;strong&gt;yield&lt;/strong&gt; [ &lt;var&gt;expression&lt;/var&gt; ]</target>
        </trans-unit>
        <trans-unit id="2d7ba734ed94c6f67a4cf021f739fd82965a9ab8" translate="yes" xml:space="preserve">
          <source>You can also set &lt;code&gt;unscopables&lt;/code&gt; for your own objects.</source>
          <target state="translated">独自のオブジェクトに &lt;code&gt;unscopables&lt;/code&gt; を設定することもできます。</target>
        </trans-unit>
        <trans-unit id="f2cdd45f02385fc58254e8491afbb4ed3962e025" translate="yes" xml:space="preserve">
          <source>You can also take the approach of wrapping the entire contents of a script in a function and having that outer function use strict mode. This eliminates the concatenation problem and it means that you have to explicitly export any shared variables out of the function scope.</source>
          <target state="translated">スクリプトの内容全体を関数でラップし、その外側の関数で strict モードを使用するという方法もあります。これにより連結の問題がなくなり、共有変数を明示的に関数スコープ外にエクスポートしなければならなくなります。</target>
        </trans-unit>
        <trans-unit id="5199f41868572e36f4d068ccaff4400a4999a82d" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;../../functions/arguments&quot;&gt;&lt;code&gt;arguments&lt;/code&gt;&lt;/a&gt; for the &lt;code&gt;&lt;var&gt;argsArray&lt;/var&gt;&lt;/code&gt; parameter. &lt;a href=&quot;../../functions/arguments&quot;&gt;&lt;code&gt;arguments&lt;/code&gt;&lt;/a&gt; is a local variable of a function. It can be used for all unspecified arguments of the called object. Thus, you do not have to know the arguments of the called object when you use the &lt;code&gt;apply&lt;/code&gt; method. You can use &lt;code&gt;arguments&lt;/code&gt; to pass all the arguments to the called object. The called object is then responsible for handling the arguments.</source>
          <target state="translated">&lt;code&gt;&lt;var&gt;argsArray&lt;/var&gt;&lt;/code&gt; パラメーターに&lt;a href=&quot;../../functions/arguments&quot;&gt; &lt;code&gt;arguments&lt;/code&gt; &lt;/a&gt;を使用することもできます。&lt;a href=&quot;../../functions/arguments&quot;&gt; &lt;code&gt;arguments&lt;/code&gt; &lt;/a&gt;は関数のローカル変数です。呼び出されたオブジェクトの指定されていないすべての引数に使用できます。したがって、 &lt;code&gt;apply&lt;/code&gt; メソッドを使用するときに、呼び出されたオブジェクトの引数を知る必要はありません。 &lt;code&gt;arguments&lt;/code&gt; を使用して、呼び出されたオブジェクトにすべての引数を渡すことができます。呼び出されたオブジェクトは、引数の処理を担当します。</target>
        </trans-unit>
        <trans-unit id="bebbaa8bf1d2f63cccc00451f13d856ef387cde8" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;../../functions/arguments&quot;&gt;&lt;code&gt;arguments&lt;/code&gt;&lt;/a&gt; for the &lt;code&gt;argsArray&lt;/code&gt; parameter. &lt;code&gt;arguments&lt;/code&gt; is a local variable of a function. It can be used for all unspecified arguments of the called object. Thus, you do not have to know the arguments of the called object when you use the &lt;code&gt;apply&lt;/code&gt; method. You can use &lt;code&gt;arguments&lt;/code&gt; to pass all the arguments to the called object. The called object is then responsible for handling the arguments.</source>
          <target state="translated">&lt;code&gt;argsArray&lt;/code&gt; パラメーターの&lt;a href=&quot;../../functions/arguments&quot;&gt; &lt;code&gt;arguments&lt;/code&gt; &lt;/a&gt;を使用することもできます。 &lt;code&gt;arguments&lt;/code&gt; は関数のローカル変数です。呼び出されたオブジェクトの指定されていないすべての引数に使用できます。したがって、 &lt;code&gt;apply&lt;/code&gt; メソッドを使用するときに、呼び出されたオブジェクトの引数を知っている必要はありません。 &lt;code&gt;arguments&lt;/code&gt; を使用して、呼び出されたオブジェクトにすべての引数を渡すことができます。呼び出されたオブジェクトは、引数の処理を担当します。</target>
        </trans-unit>
        <trans-unit id="6d0c9347f08fcde5ba1987568129958f977464d6" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;exec()&lt;/code&gt; without creating a &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; object explicitly:</source>
          <target state="translated">&lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt;オブジェクトを明示的に作成せずに &lt;code&gt;exec()&lt;/code&gt; を使用することもできます。</target>
        </trans-unit>
        <trans-unit id="f63f23ed07fe9b2462f2eee493c03be6771c9ff8" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;exec()&lt;/code&gt; without creating a &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; object:</source>
          <target state="translated">&lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt;オブジェクトを作成せずに &lt;code&gt;exec()&lt;/code&gt; を使用することもできます。</target>
        </trans-unit>
        <trans-unit id="ced97e741b187e16c412523874adb4d04d2f1b7e" translate="yes" xml:space="preserve">
          <source>You can also use chaining to implement one function with a Promise-based API on top of another such function.</source>
          <target state="translated">また、PromiseベースのAPIを持つ関数を別の関数の上に実装するために、チェーニングを使用することもできます。</target>
        </trans-unit>
        <trans-unit id="d6cce9a1b9a8aa8d5eea9d7f30b51f243db51d90" translate="yes" xml:space="preserve">
          <source>You can also use it in the middle of a line, if you wish, although this can make your code harder to read so it should be used with caution:</source>
          <target state="translated">必要であれば、行の途中で使用することもできますが、これはコードを読みにくくする可能性があるので、注意して使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="6561e6bc8858cc817c7be9188b11e575df2a7c42" translate="yes" xml:space="preserve">
          <source>You can also use one or more conditional &lt;code&gt;catch&lt;/code&gt; clauses to handle specific exceptions. In this case, the appropriate &lt;code&gt;catch&lt;/code&gt; clause is entered when the specified exception is thrown. In the following example, code in the &lt;code&gt;try&lt;/code&gt; block can potentially throw three exceptions: &lt;a href=&quot;../global_objects/typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../global_objects/evalerror&quot;&gt;&lt;code&gt;EvalError&lt;/code&gt;&lt;/a&gt;. When an exception occurs, control transfers to the appropriate &lt;code&gt;catch&lt;/code&gt; clause. If the exception is not one of the specified exceptions and an unconditional &lt;code&gt;catch&lt;/code&gt; clause is found, control transfers to that &lt;code&gt;catch&lt;/code&gt; clause.</source>
          <target state="translated">1つ以上の条件付き &lt;code&gt;catch&lt;/code&gt; 句を使用して、特定の例外を処理することもできます。この場合、指定された例外がスローされると、適切な &lt;code&gt;catch&lt;/code&gt; 句が入力されます。次の例では、 &lt;code&gt;try&lt;/code&gt; ブロックのコードは、3つの例外&lt;a href=&quot;../global_objects/typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../global_objects/rangeerror&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../global_objects/evalerror&quot;&gt; &lt;code&gt;EvalError&lt;/code&gt; を&lt;/a&gt;スローする可能性があります。例外が発生すると、制御は適切な &lt;code&gt;catch&lt;/code&gt; 句に移ります。例外が指定された例外の1つではなく、無条件の &lt;code&gt;catch&lt;/code&gt; 節が見つかった場合、制御はその &lt;code&gt;catch&lt;/code&gt; 節に移ります。</target>
        </trans-unit>
        <trans-unit id="00d44125d6700a81bd54270ac174bcb908e4753d" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;try&lt;/code&gt; statement to handle JavaScript exceptions. See the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide&quot;&gt;JavaScript Guide&lt;/a&gt; for more information on JavaScript exceptions.</source>
          <target state="translated">&lt;code&gt;try&lt;/code&gt; ステートメントを使用して、JavaScript例外を処理することもできます。JavaScript例外の詳細については、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide&quot;&gt;JavaScriptガイド&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="08252b79d8866c504c7b33c3df0a210810df20e1" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;try&lt;/code&gt; statement to handle JavaScript exceptions. See the &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide&quot;&gt;JavaScript Guide&lt;/a&gt; for more information on JavaScript exceptions.</source>
          <target state="translated">&lt;code&gt;try&lt;/code&gt; ステートメントを使用してJavaScript例外を処理することもできます。JavaScriptの例外の詳細については、&lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide&quot;&gt;JavaScriptガイド&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="a174aaf128ed9afa731aba482a1d7aa874be5857" translate="yes" xml:space="preserve">
          <source>You can also use the optional chaining operator when accessing properties with an expression using &lt;a href=&quot;property_accessors#Bracket_notation&quot;&gt;the bracket notation of the property accessor&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;property_accessors#Bracket_notation&quot;&gt;プロパティアクセサの角かっこ表記を&lt;/a&gt;使用した式でプロパティにアクセスする場合は、オプションの連鎖演算子を使用することもできます。</target>
        </trans-unit>
        <trans-unit id="12cef56b5433eb1bb760eef03f503e5213aef4c8" translate="yes" xml:space="preserve">
          <source>You can always add a property to a previously defined object. For example, the statement &lt;code&gt;car1.color = &quot;black&quot;&lt;/code&gt; adds a property &lt;code&gt;color&lt;/code&gt; to &lt;code&gt;car1&lt;/code&gt;, and assigns it a value of &quot;&lt;code&gt;black&lt;/code&gt;&quot;. However, this does not affect any other objects. To add the new property to all objects of the same type, you must add the property to the definition of the &lt;code&gt;Car&lt;/code&gt; object type.</source>
          <target state="translated">以前に定義したオブジェクトにいつでもプロパティを追加できます。たとえば、ステートメント &lt;code&gt;car1.color = &quot;black&quot;&lt;/code&gt; は、プロパティ &lt;code&gt;color&lt;/code&gt; を &lt;code&gt;car1&lt;/code&gt; に追加し、それに値 &quot; &lt;code&gt;black&lt;/code&gt; &quot; を割り当てます。ただし、これは他のオブジェクトには影響しません。同じタイプのすべてのオブジェクトに新しいプロパティを追加するには、 &lt;code&gt;Car&lt;/code&gt; オブジェクトタイプの定義にプロパティを追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="c070684b091e32b97102448e68d16ac612e5cafe" translate="yes" xml:space="preserve">
          <source>You can assign a different &lt;code&gt;this&lt;/code&gt; object when calling an existing function. &lt;code&gt;this&lt;/code&gt; refers to the current object (the calling object). With &lt;code&gt;apply&lt;/code&gt;, you can write a method once, and then inherit it in another object, without having to rewrite the method for the new object.</source>
          <target state="translated">既存の関数を呼び出すときに、別の &lt;code&gt;this&lt;/code&gt; オブジェクトを割り当てることができます。 &lt;code&gt;this&lt;/code&gt; は、現在のオブジェクト（呼び出し元オブジェクト）を参照します。 &lt;code&gt;apply&lt;/code&gt; を使用すると、メソッドを1回記述してから、新しいオブジェクトのメソッドを書き直すことなく、別のオブジェクトに継承できます。</target>
        </trans-unit>
        <trans-unit id="d578746defee9a0518a4542680c0d000e3a60b05" translate="yes" xml:space="preserve">
          <source>You can assign a different &lt;code&gt;this&lt;/code&gt; object when calling an existing function. &lt;code&gt;this&lt;/code&gt; refers to the current object, the calling object. With &lt;code&gt;apply&lt;/code&gt;, you can write a method once and then inherit it in another object, without having to rewrite the method for the new object.</source>
          <target state="translated">既存の関数を呼び出すときに、別の &lt;code&gt;this&lt;/code&gt; オブジェクトを割り当てることができます。 &lt;code&gt;this&lt;/code&gt; は、現在のオブジェクト、つまり呼び出しオブジェクトを指します。 &lt;code&gt;apply&lt;/code&gt; を使用すると、メソッドを1回記述して、それを別のオブジェクトに継承できます。新しいオブジェクトのメソッドを書き直す必要はありません。</target>
        </trans-unit>
        <trans-unit id="88eab70f08ec5b9e42e7f6cb3c63ef544686cd07" translate="yes" xml:space="preserve">
          <source>You can choose to handle only specific error types by testing the error type with the error's &lt;a href=&quot;object/constructor&quot;&gt;&lt;code&gt;constructor&lt;/code&gt;&lt;/a&gt; property or, if you're writing for modern JavaScript engines, &lt;a href=&quot;../operators/instanceof&quot;&gt;&lt;code&gt;instanceof&lt;/code&gt;&lt;/a&gt; keyword:</source>
          <target state="translated">エラーの&lt;a href=&quot;object/constructor&quot;&gt; &lt;code&gt;constructor&lt;/code&gt; &lt;/a&gt;プロパティを使用してエラータイプをテストすることにより、特定のエラータイプのみを処理することを選択できます。また、最新のJavaScriptエンジン用に作成している&lt;a href=&quot;../operators/instanceof&quot;&gt; &lt;code&gt;instanceof&lt;/code&gt; &lt;/a&gt;、instanceofキーワードを使用できます。</target>
        </trans-unit>
        <trans-unit id="77c3ce40fd4c4194b472c4cc13874707e165dbd5" translate="yes" xml:space="preserve">
          <source>You can correct the &lt;code&gt;log&lt;/code&gt; call by adding the &quot;&lt;code&gt;+&lt;/code&gt;&quot; operator:</source>
          <target state="translated">「 &lt;code&gt;+&lt;/code&gt; 」演算子を追加して、 &lt;code&gt;log&lt;/code&gt; 呼び出しを修正できます。</target>
        </trans-unit>
        <trans-unit id="2d47b11d905b7e8e347e93eea226162b9eb15dad" translate="yes" xml:space="preserve">
          <source>You can correct the code by adding a * operator:</source>
          <target state="translated">演算子を追加することでコードを修正することができます。</target>
        </trans-unit>
        <trans-unit id="02fb5626f00bf27e534b02347173be08753d58a0" translate="yes" xml:space="preserve">
          <source>You can correct the code by adding a &lt;code&gt;*&lt;/code&gt; operator:</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; 演算子を追加することで、コードを修正できます。</target>
        </trans-unit>
        <trans-unit id="766ee719fcb6384327fbffbba22b33263df880f5" translate="yes" xml:space="preserve">
          <source>You can create &quot;Conditional &lt;code&gt;catch&lt;/code&gt;-blocks&quot; by combining &lt;code&gt;try...catch&lt;/code&gt; blocks with &lt;code&gt;if...else if...else&lt;/code&gt; structures, like this:</source>
          <target state="translated">次のように、 &lt;code&gt;try...catch&lt;/code&gt; ブロックを &lt;code&gt;if...else if...else&lt;/code&gt; 構造体と組み合わせることで、「条件付き &lt;code&gt;catch&lt;/code&gt; ブロック」を作成できます。</target>
        </trans-unit>
        <trans-unit id="48caf0ee01b5ca7ab8102c4d8f32bd7265631396" translate="yes" xml:space="preserve">
          <source>You can create a function to be called in place of the default &lt;code&gt;toString()&lt;/code&gt; method. The &lt;code&gt;toString()&lt;/code&gt; method takes no arguments and should return a string. The &lt;code&gt;toString()&lt;/code&gt; method you create can be any value you want, but it will be most useful if it carries information about the object.</source>
          <target state="translated">デフォルトの &lt;code&gt;toString()&lt;/code&gt; メソッドの代わりに呼び出される関数を作成できます。 &lt;code&gt;toString()&lt;/code&gt; メソッドは引数を取りませんし、文字列を返す必要があります。 &lt;code&gt;toString()&lt;/code&gt; は、作成方法は、あなたが望む任意の値を指定できますが、それはオブジェクトに関する情報を伝えるのが最も有用であろう。</target>
        </trans-unit>
        <trans-unit id="b54b9cf6be7d32bae64b4fec9882c64efa21ea4d" translate="yes" xml:space="preserve">
          <source>You can create a function to be called in place of the default &lt;code&gt;valueOf&lt;/code&gt; method. Your function must take no arguments.</source>
          <target state="translated">デフォルトの &lt;code&gt;valueOf&lt;/code&gt; メソッドの代わりに呼び出される関数を作成できます。関数は引数を取ってはなりません。</target>
        </trans-unit>
        <trans-unit id="d4de9a391f33f24797dd5017d2847898c49f510b" translate="yes" xml:space="preserve">
          <source>You can create any number of &lt;code&gt;car&lt;/code&gt; objects by calls to &lt;code&gt;new&lt;/code&gt;. For example:</source>
          <target state="translated">&lt;code&gt;new&lt;/code&gt; を呼び出すことで、 &lt;code&gt;car&lt;/code&gt; オブジェクトをいくつでも作成できます。例えば：</target>
        </trans-unit>
        <trans-unit id="b751a924648432df6f99c1b8aaf11266eb11ec63" translate="yes" xml:space="preserve">
          <source>You can create multiple masks from a set of &lt;code&gt;&lt;a href=&quot;../global_objects/boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/code&gt; values, like this:</source>
          <target state="translated">次のように、 &lt;code&gt;&lt;a href=&quot;../global_objects/boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/code&gt; 値のセットから複数のマスクを作成できます。</target>
        </trans-unit>
        <trans-unit id="b2979b701f7b255728e6d776f2e2c5a70218a2b4" translate="yes" xml:space="preserve">
          <source>You can define a function with a name in a &lt;a href=&quot;../../operators/function&quot;&gt;function expression&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;../../operators/function&quot;&gt;関数式に&lt;/a&gt;名前を付けて関数を定義できます。</target>
        </trans-unit>
        <trans-unit id="02e9c413fdb49da942454c27f0bc5610cff6673b" translate="yes" xml:space="preserve">
          <source>You can define getters (accessor methods) and setters (mutator methods) on any standard built-in object or user-defined object that supports the addition of new properties. The syntax for defining getters and setters uses the object literal syntax.</source>
          <target state="translated">ゲッター (アクセサメソッド)とセッター (ミューテータメソッド)は、新しいプロパティの追加をサポートする標準の組み込みオブジェクトまたはユーザー定義オブジェクト上で定義できます。ゲッターとセッターを定義する構文は、オブジェクトリテラル構文を使用します。</target>
        </trans-unit>
        <trans-unit id="98a77fa0ac05626c0e5e36229f38e74d3d527a78" translate="yes" xml:space="preserve">
          <source>You can define your own async iterable by setting the &lt;code&gt;[Symbol.asyncIterator]&lt;/code&gt; property on an object.</source>
          <target state="translated">オブジェクトに &lt;code&gt;[Symbol.asyncIterator]&lt;/code&gt; プロパティを設定することで、独自の非同期イテラブルを定義できます。</target>
        </trans-unit>
        <trans-unit id="c0f5bf037fc21f7dc91dec9aea53c656f556ff41" translate="yes" xml:space="preserve">
          <source>You can determine whether a function exists by using the &lt;code&gt;typeof&lt;/code&gt; operator. In the following example, a test is performed to determine if the &lt;code&gt;window&lt;/code&gt; object has a property called &lt;code&gt;noFunc&lt;/code&gt; that is a function. If so, it is used; otherwise, some other action is taken.</source>
          <target state="translated">&lt;code&gt;typeof&lt;/code&gt; 演算子を使用して、関数が存在するかどうかを判別できます。次の例では、テストが実行され、 &lt;code&gt;window&lt;/code&gt; オブジェクトに関数である &lt;code&gt;noFunc&lt;/code&gt; と呼ばれるプロパティがあるかどうかが確認されます。その場合、それが使用されます。それ以外の場合は、他のアクションが実行されます。</target>
        </trans-unit>
        <trans-unit id="cd25f19d145ebf16f9e5027a666b54a865331abe" translate="yes" xml:space="preserve">
          <source>You can even use this method to access descendant properties. Using &lt;code&gt;eval()&lt;/code&gt; this would look like:</source>
          <target state="translated">このメソッドを使用して、子孫のプロパティにアクセスすることもできます。 &lt;code&gt;eval()&lt;/code&gt; を使用すると、次のようになります。</target>
        </trans-unit>
        <trans-unit id="dbafe11ecd22563272e4730650686c7e8ba2a236" translate="yes" xml:space="preserve">
          <source>You can fix this by setting &lt;a href=&quot;../global_objects/null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; as the prototype, for example:</source>
          <target state="translated">これを修正するには、プロトタイプとして&lt;a href=&quot;../global_objects/null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;を設定します。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="f2fffdf635670bcef55191c76c0996c618be7ff1" translate="yes" xml:space="preserve">
          <source>You can get the size of a &lt;code&gt;Map&lt;/code&gt; easily with the &lt;code&gt;size&lt;/code&gt; property, while the number of properties in an &lt;code&gt;Object&lt;/code&gt; must be determined manually.</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt; のプロパティの数は手動で決定する必要がありますが、 &lt;code&gt;size&lt;/code&gt; プロパティを使用すると &lt;code&gt;Map&lt;/code&gt; のサイズを簡単に取得できます。</target>
        </trans-unit>
        <trans-unit id="568f30787964ffc267883b92579ca50710eb20a0" translate="yes" xml:space="preserve">
          <source>You can ignore return values that you're not interested in:</source>
          <target state="translated">興味のない戻り値を無視することができます。</target>
        </trans-unit>
        <trans-unit id="7157dad59b90e85a3b3f419977b9c7ec7ad7e48a" translate="yes" xml:space="preserve">
          <source>You can iterate over the &lt;a href=&quot;../functions/arguments&quot;&gt;&lt;code&gt;arguments&lt;/code&gt;&lt;/a&gt; object to examine all of the parameters passed into a JavaScript function:</source>
          <target state="translated">&lt;a href=&quot;../functions/arguments&quot;&gt; &lt;code&gt;arguments&lt;/code&gt; &lt;/a&gt;オブジェクトを反復処理して、JavaScript関数に渡されたすべてのパラメーターを調べることができます。</target>
        </trans-unit>
        <trans-unit id="eef87aabccbb7260ab1aedd0f49eeb376d83bbaa" translate="yes" xml:space="preserve">
          <source>You can learn more about &lt;code&gt;WeakMap&lt;/code&gt;s in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Keyed_collections#WeakMap_object&quot;&gt;WeakMap object&lt;/a&gt; guide (under &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Keyed_collections&quot;&gt;Keyed collections&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;WeakMap&lt;/code&gt; の詳細については、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Keyed_collections#WeakMap_object&quot;&gt;WeakMapオブジェクト&lt;/a&gt;ガイド（&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Keyed_collections&quot;&gt;Keyedコレクションの&lt;/a&gt;下）を参照してください。</target>
        </trans-unit>
        <trans-unit id="a02f731a617113de512770227df1c80e5982f308" translate="yes" xml:space="preserve">
          <source>You can learn more about &lt;code&gt;WeakMap&lt;/code&gt;s in the section &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Keyed_collections#WeakMap_object&quot;&gt;WeakMap object&lt;/a&gt; in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Keyed_collections&quot;&gt;Keyed collections&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;WeakMap&lt;/code&gt; の詳細については、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Keyed_collections&quot;&gt;Keyedコレクションの&lt;/a&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Keyed_collections#WeakMap_object&quot;&gt;WeakMapオブジェクト&lt;/a&gt;のセクションをご覧ください。</target>
        </trans-unit>
        <trans-unit id="a8d6302a186b812911fa0fd69a25166f68355494" translate="yes" xml:space="preserve">
          <source>You can learn more about &lt;code&gt;WeakMap&lt;/code&gt;s in the section &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Keyed_collections#WeakMap_object&quot;&gt;WeakMap object&lt;/a&gt; in &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Keyed_collections&quot;&gt;Keyed collections&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;WeakMap&lt;/code&gt; の詳細については、&lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Keyed_collections&quot;&gt;Keyedコレクションの&lt;/a&gt;&lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Keyed_collections#WeakMap_object&quot;&gt;WeakMapオブジェクト&lt;/a&gt;のセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="290e001372a9b578bb3308eed8d62ac4455ff3a0" translate="yes" xml:space="preserve">
          <source>You can make your own iterables like this:</source>
          <target state="translated">こんな感じで自分でイテラブルを作ることができます。</target>
        </trans-unit>
        <trans-unit id="2668fedb84d9dd61e22ecd7eb9cbaaa53ef7746b" translate="yes" xml:space="preserve">
          <source>You can nest one or more &lt;code&gt;try&lt;/code&gt; statements. If an inner &lt;code&gt;try&lt;/code&gt; statement does not have a &lt;code&gt;catch&lt;/code&gt; clause, the enclosing &lt;code&gt;try&lt;/code&gt; statement's &lt;code&gt;catch&lt;/code&gt; clause is entered.</source>
          <target state="translated">1つ以上の &lt;code&gt;try&lt;/code&gt; ステートメントをネストできます。内部の &lt;code&gt;try&lt;/code&gt; ステートメントに &lt;code&gt;catch&lt;/code&gt; 句がない場合は、囲んでいる &lt;code&gt;try&lt;/code&gt; ステートメントの &lt;code&gt;catch&lt;/code&gt; 句が入力されます。</target>
        </trans-unit>
        <trans-unit id="7ceb36fd46ae3caaafcded1955881c450f7f01d7" translate="yes" xml:space="preserve">
          <source>You can nest one or more &lt;code&gt;try&lt;/code&gt; statements. If an inner &lt;code&gt;try&lt;/code&gt; statement does not have a &lt;code&gt;catch&lt;/code&gt;-block, the enclosing &lt;code&gt;try&lt;/code&gt; statement's &lt;code&gt;catch&lt;/code&gt;-block is used instead.</source>
          <target state="translated">1つ以上の &lt;code&gt;try&lt;/code&gt; ステートメントをネストできます。内部の &lt;code&gt;try&lt;/code&gt; ステートメントに &lt;code&gt;catch&lt;/code&gt; - blockがない場合は、代わりに、それを囲む &lt;code&gt;try&lt;/code&gt; ステートメントの &lt;code&gt;catch&lt;/code&gt; - blockが使用されます。</target>
        </trans-unit>
        <trans-unit id="72f80efa346346bf14528b366958a2e11db8b504" translate="yes" xml:space="preserve">
          <source>You can now either use the &lt;a href=&quot;../global_objects/date/tolocaledatestring&quot;&gt;&lt;code&gt;Date.prototype.toLocaleDateString&lt;/code&gt;&lt;/a&gt; method if you just want to format one date.</source>
          <target state="translated">1つの日付のみをフォーマットする場合は、&lt;a href=&quot;../global_objects/date/tolocaledatestring&quot;&gt; &lt;code&gt;Date.prototype.toLocaleDateString&lt;/code&gt; &lt;/a&gt;メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="a9768f0f2f468470d5b6ee3a458bc4fe10981ab9" translate="yes" xml:space="preserve">
          <source>You can now use the standard &lt;a href=&quot;../statements/for...in&quot;&gt;&lt;code&gt;for...in&lt;/code&gt;&lt;/a&gt; loop to iterate over specified object keys, and get each value inside the loop:</source>
          <target state="translated">これで、標準の&lt;a href=&quot;../statements/for...in&quot;&gt; &lt;code&gt;for...in&lt;/code&gt; &lt;/a&gt;ループを使用して、指定したオブジェクトキーを反復処理し、ループ内の各値を取得できます。</target>
        </trans-unit>
        <trans-unit id="90b6a7f3f327d8ae368fd7dbefbfe64b84000a34" translate="yes" xml:space="preserve">
          <source>You can partially work around this by inserting the following code at the beginning of your scripts, allowing use of much of the functionality of &lt;code&gt;bind()&lt;/code&gt; in implementations that do not natively support it.</source>
          <target state="translated">スクリプトの最初に次のコードを挿入することにより、これを部分的に回避できます。ネイティブでサポートしていない実装で &lt;code&gt;bind()&lt;/code&gt; の機能の多くを使用できます。</target>
        </trans-unit>
        <trans-unit id="4fed377714620dcd5b8215decb17002669bfbb68" translate="yes" xml:space="preserve">
          <source>You can partially work around this by inserting the following code at the beginning of your scripts, allowing use of much of the functionality of &lt;code&gt;from()&lt;/code&gt; in implementations that do not natively support it.</source>
          <target state="translated">スクリプトの先頭に次のコードを挿入することで、これを部分的に回避できます。これにより、ネイティブでサポートされていない実装で &lt;code&gt;from()&lt;/code&gt; の機能の多くを使用できるようになります。</target>
        </trans-unit>
        <trans-unit id="0d9c67f0cf4b685bdf8c0858020dc7898772549e" translate="yes" xml:space="preserve">
          <source>You can partially work around this by inserting the following code at the beginning of your scripts, allowing use of much of the functionality of from() in implementations that do not natively support it.</source>
          <target state="translated">これを部分的に回避するには、以下のコードをスクリプトの最初に挿入することで、ネイティブにはサポートされていない実装でも from()の機能の多くを使用できるようにします。</target>
        </trans-unit>
        <trans-unit id="a569d7c0b8f9812d8691bb0fe4f87d6d1e148733" translate="yes" xml:space="preserve">
          <source>You can partially work around this by inserting the following code at the beginning of your scripts, allowing use of much of the functionality of transfer() in browsers that do not natively support it. This is not the exact equivalent of this API because browsers that natively support it are be able to internally use the C++ function realloc() which extends the length of the memory and only copies it to a new location as-needed as opposed to the following pollyfill which always copies the whole thing to a new space of memory, but this function transfers data from one ArrayBuffer to another ArrayBuffer.</source>
          <target state="translated">これを部分的に回避するには、スクリプトの最初に以下のコードを挿入して、ネイティブにサポートされていないブラウザでも transfer()の機能の多くを使用できるようにします。これは、ネイティブにサポートされているブラウザが内部的にメモリの長さを拡張し、必要に応じて新しい場所にのみコピーするC++関数realloc()を使用することができるため、このAPIの正確な等価物ではありませんが、次のpollyfillは常に全体を新しいメモリ空間にコピーしますが、この関数は、1つのArrayBufferから別のArrayBufferにデータを転送しています。</target>
        </trans-unit>
        <trans-unit id="ad5411059d3c48d8362f7f45665fcc625dcc8a43" translate="yes" xml:space="preserve">
          <source>You can pass any number of arguments to this function, and it adds each argument as a list item to a list of the type indicated. For example:</source>
          <target state="translated">この関数には任意の数の引数を渡すことができ、各引数をリスト項目として指定された型のリストに追加します。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="7812a71871fa0bc7b22a78700973f32509d338e9" translate="yes" xml:space="preserve">
          <source>You can pass as many arguments as you like to this function. It returns a string list using each argument in the list:</source>
          <target state="translated">この関数には、好きなだけ引数を渡すことができます。この関数は、リスト内の各引数を使用して文字列リストを返します。</target>
        </trans-unit>
        <trans-unit id="876f639c27064158a0ecd7c20aef1da9a51d6a93" translate="yes" xml:space="preserve">
          <source>You can redefine the iteration behavior by supplying our own &lt;code&gt;@@iterator&lt;/code&gt;:</source>
          <target state="translated">独自の &lt;code&gt;@@iterator&lt;/code&gt; 提供することで、反復動作を再定義できます。</target>
        </trans-unit>
        <trans-unit id="f0e9625fea41da60cd583ddd9477134bfbbf8bdd" translate="yes" xml:space="preserve">
          <source>You can refer to a function's arguments within the function by using the &lt;code&gt;arguments&lt;/code&gt; object. See &lt;a href=&quot;functions/arguments&quot;&gt;arguments&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;arguments&lt;/code&gt; オブジェクトを使用すると、関数内で関数の引数を参照できます。&lt;a href=&quot;functions/arguments&quot;&gt;引数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e8a436e5298fcec5e549858ece5538b1398b4a1f" translate="yes" xml:space="preserve">
          <source>You can reference elements in the array using standard array index syntax (that is, using bracket notation). However, getting or setting indexed properties on typed arrays will not search in the prototype chain for this property, even when the indices are out of bound. Indexed properties will consult the &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; and will never look at object properties. You can still use named properties, just like with all objects.</source>
          <target state="translated">標準の配列インデックス構文を使用して（つまり、ブラケット表記を使用して）配列内の要素を参照できます。ただし、型付き配列のインデックス付きプロパティを取得または設定しても、インデックスが範囲外であっても、プロトタイプチェーンでこのプロパティが検索されません。インデックス付きプロパティは&lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;を参照し、オブジェクトプロパティを参照することはありません。すべてのオブジェクトと同様に、名前付きプロパティを引き続き使用できます。</target>
        </trans-unit>
        <trans-unit id="83ebcf9d071ea5b1e80e47711db81ed5b95d9b0e" translate="yes" xml:space="preserve">
          <source>You can remove the initializer (&lt;code&gt;i = 0&lt;/code&gt;) in the head of the for-in loop.</source>
          <target state="translated">for-inループの先頭にある初期化子（ &lt;code&gt;i = 0&lt;/code&gt; ）を削除できます。</target>
        </trans-unit>
        <trans-unit id="0173094e57c42a4341074bd7febf103c99a1d244" translate="yes" xml:space="preserve">
          <source>You can rename an export when importing it. For example, this inserts &lt;code&gt;shortName&lt;/code&gt; into the current scope.</source>
          <target state="translated">インポート時にエクスポートの名前を変更できます。たとえば、これは現在のスコープに &lt;code&gt;shortName&lt;/code&gt; を挿入します。</target>
        </trans-unit>
        <trans-unit id="2a6c917f8f0ba476ea36cda8782a860d7456f21c" translate="yes" xml:space="preserve">
          <source>You can set the &lt;code&gt;length&lt;/code&gt; property to truncate an array at any time. When you extend an array by changing its &lt;code&gt;length&lt;/code&gt; property, the number of actual elements increases; for example, if you set &lt;code&gt;length&lt;/code&gt; to 3 when it is currently 2, the array now contains 3 elements, which causes the third element to be &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;length&lt;/code&gt; プロパティを設定して、いつでも配列を切り捨てることができます。 &lt;code&gt;length&lt;/code&gt; プロパティを変更して配列を拡張すると、実際の要素の数が増加します。たとえば、現在2であるときに &lt;code&gt;length&lt;/code&gt; を3に設定した場合、配列には3つの要素が含まれるため、3番目の要素が &lt;code&gt;undefined&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="1014fc6aaefc8caccb7652ef2a73b9a541349f01" translate="yes" xml:space="preserve">
          <source>You can set the &lt;code&gt;length&lt;/code&gt; property to truncate an array at any time. When you extend an array by changing its &lt;code&gt;length&lt;/code&gt; property, the number of actual elements increases; for example, if you set &lt;code&gt;length&lt;/code&gt; to 3 when it is currently 2, the array now contains 3 elements, which causes the third element to be a non-iterable empty slot.</source>
          <target state="translated">&lt;code&gt;length&lt;/code&gt; プロパティを設定して、いつでも配列を切り捨てることができます。 &lt;code&gt;length&lt;/code&gt; プロパティを変更して配列を拡張すると、実際の要素の数が増えます。たとえば、現在2の &lt;code&gt;length&lt;/code&gt; を3に設定すると、配列に3つの要素が含まれるようになり、3番目の要素が反復不可能な空のスロットになります。</target>
        </trans-unit>
        <trans-unit id="192209d79932042e27555749562d972ff8c7443f" translate="yes" xml:space="preserve">
          <source>You can specify &lt;code&gt;&quot;NFC&quot;&lt;/code&gt; to get the &lt;strong&gt;composed&lt;/strong&gt; canonical form, in which multiple code points are replaced with single code points where possible. The composed canonical form for &lt;code&gt;&quot;&amp;ntilde;&quot;&lt;/code&gt; is &lt;code&gt;&quot;\u00F1&quot;&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&quot;NFC&quot;&lt;/code&gt; を指定して、可能な場合は複数のコードポイントが単一のコードポイントに置き換えられる、&lt;strong&gt;合成された&lt;/strong&gt;正規形式を取得できます。 &lt;code&gt;&quot;&amp;ntilde;&quot;&lt;/code&gt; の構成された正規形式は &lt;code&gt;&quot;\u00F1&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5eaa8cb377ab9fa5bf6752d15f324cd966c1cad4" translate="yes" xml:space="preserve">
          <source>You can specify a function as the second parameter. In this case, the function will be invoked after the match has been performed. The function's result (return value) will be used as the replacement string. (&lt;strong&gt;Note:&lt;/strong&gt; The above-mentioned special replacement patterns do &lt;em&gt;not&lt;/em&gt; apply in this case.)</source>
          <target state="translated">2番目のパラメーターとして関数を指定できます。この場合、関数は一致が実行された後に呼び出されます。関数の結果（戻り値）が置換文字列として使用されます。（&lt;strong&gt;注：&lt;/strong&gt;この場合、上記の特別な交換パターンは適用されませ&lt;em&gt;ん&lt;/em&gt;。）</target>
        </trans-unit>
        <trans-unit id="6f95c37adecc2c4f5d5dac3883277ed51cd11fb9" translate="yes" xml:space="preserve">
          <source>You can specify a function as the second parameter. In this case, the function will be invoked after the match has been performed. The function's result (return value) will be used as the replacement string. (Note: the above-mentioned special replacement patterns do &lt;em&gt;not&lt;/em&gt; apply in this case.) Note that the function will be invoked multiple times for each full match to be replaced if the regular expression in the first parameter is global.</source>
          <target state="translated">2番目のパラメーターとして関数を指定できます。この場合、一致が実行された後に関数が呼び出されます。関数の結果（戻り値）は、置換文字列として使用されます。（注：この場合、上記の特別な置換パターンは適用されませ&lt;em&gt;ん&lt;/em&gt;。）最初のパラメーターの正規表現がグローバルである場合、完全一致が置換されるたびに関数が複数回呼び出されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="b1fdebe5fcb894f19808905ffb2d4a971ac93afb" translate="yes" xml:space="preserve">
          <source>You can specify an object when you throw an exception. You can then reference the object's properties in the &lt;code&gt;catch&lt;/code&gt; block. The following example creates an object of type &lt;code&gt;UserException&lt;/code&gt; and uses it in a &lt;code&gt;throw&lt;/code&gt; statement.</source>
          <target state="translated">例外をスローするときにオブジェクトを指定できます。その後、 &lt;code&gt;catch&lt;/code&gt; ブロックでオブジェクトのプロパティを参照できます。次の例では、タイプ &lt;code&gt;UserException&lt;/code&gt; のオブジェクトを作成し、それを &lt;code&gt;throw&lt;/code&gt; ステートメントで使用します。</target>
        </trans-unit>
        <trans-unit id="880b41debaa2b053cea98a0b1ceeddaf19608595" translate="yes" xml:space="preserve">
          <source>You can test both algorithms at the same time&amp;hellip;</source>
          <target state="translated">両方のアルゴリズムを同時にテストできます&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="8218a410bdaf517869e6f160b30c68f16d4b5d0c" translate="yes" xml:space="preserve">
          <source>You can then call these functions with the arguments you like:</source>
          <target state="translated">そして、これらの関数を好きな引数で呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="982a7ce7238adc648f56181afac8937e3d2377d5" translate="yes" xml:space="preserve">
          <source>You can then grow the table by 1 with the following:</source>
          <target state="translated">そして、以下のようにして表を1つずつ成長させていきます。</target>
        </trans-unit>
        <trans-unit id="53fcc05426701d2e2d38c28950ae2e8a2b1512ce" translate="yes" xml:space="preserve">
          <source>You can think of the returned object as an &quot;interpreter&quot; of the array buffer of bytes &amp;mdash; it knows how to convert numbers to fit within the buffer correctly, both when reading and writing to it. This means handling integer and float conversion, endianness, and other details of representing numbers in binary form.</source>
          <target state="translated">返されたオブジェクトは、バイトの配列バッファーの「インタープリター」と考えることができます。これは、バッファーへの読み取り時と書き込み時の両方で、バッファー内に収まるように数値を変換する方法を知っています。これは、整数と浮動小数点の変換、エンディアン、およびバイナリ形式で数値を表現するその他の詳細の処理を意味します。</target>
        </trans-unit>
        <trans-unit id="6adbdcee3bf45296f4d29b9081f40e092b497c0e" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;arguments/length&quot;&gt;&lt;code&gt;arguments.length&lt;/code&gt;&lt;/a&gt; to count how many arguments the function was called with. If you instead want to count how many parameters a function is declared to accept, inspect that function's &lt;a href=&quot;../global_objects/function/length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">&lt;a href=&quot;arguments/length&quot;&gt; &lt;code&gt;arguments.length&lt;/code&gt; &lt;/a&gt;を使用して、関数が呼び出された引数の数を数えることができます。代わりに、関数が受け入れるように宣言されているパラメーターの数をカウントする場合は、その関数の&lt;a href=&quot;../global_objects/function/length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt;プロパティを調べてください。</target>
        </trans-unit>
        <trans-unit id="412d31e7fa161aacf982259298fb584c4aa6c72c" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;const&quot;&gt;&lt;code&gt;const&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;let&quot;&gt;&lt;code&gt;let&lt;/code&gt;&lt;/a&gt; too, if you don't reassign the variable inside the block.</source>
          <target state="translated">ブロック内で変数を再割り当てしない場合は、&lt;a href=&quot;let&quot;&gt; &lt;code&gt;let&lt;/code&gt; の&lt;/a&gt;代わりに&lt;a href=&quot;const&quot;&gt; &lt;code&gt;const&lt;/code&gt; &lt;/a&gt;を使用できます。</target>
        </trans-unit>
        <trans-unit id="636ff3bc1b78a2e8426d3c2894566249314c2e0a" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;let&quot;&gt;&lt;code&gt;let&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;const&quot;&gt;&lt;code&gt;const&lt;/code&gt;&lt;/a&gt; too, if you reassign the variable inside the block.</source>
          <target state="translated">ブロック内で変数を再割り当てする場合は、&lt;a href=&quot;const&quot;&gt; &lt;code&gt;const&lt;/code&gt; の&lt;/a&gt;代わりに&lt;a href=&quot;let&quot;&gt; &lt;code&gt;let&lt;/code&gt; &lt;/a&gt;を使用することもできます。</target>
        </trans-unit>
        <trans-unit id="b89a92de1606fa745e6625e2bb7cb39bb11f284f" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;&lt;a href=&quot;arguments/length&quot;&gt;arguments.length&lt;/a&gt;&lt;/code&gt; to count how many arguments the function was called with. If you instead want to count how many parameters a function is declared to accept, inspect that function's &lt;code&gt;&lt;a href=&quot;../global_objects/function/length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; property.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;arguments/length&quot;&gt;arguments.length&lt;/a&gt;&lt;/code&gt; を使用して、関数が呼び出されたときの引数の数を数えることができます。代わりに、関数が受け入れると宣言されているパラメーターの数を数える場合は、その関数の &lt;code&gt;&lt;a href=&quot;../global_objects/function/length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; プロパティを調べます。</target>
        </trans-unit>
        <trans-unit id="24f8936ffb594dd189623b868ee83be36605c952" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;Intl&lt;/code&gt; to format dates and numbers in a form that's conventional for a specific language and region:</source>
          <target state="translated">&lt;code&gt;Intl&lt;/code&gt; を使用して、特定の言語と地域で一般的な形式で日付と数値をフォーマットできます。</target>
        </trans-unit>
        <trans-unit id="b8e13dada15adddbb5da6951dca11f1bdd092c1a" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;apply&lt;/code&gt; to chain &lt;a href=&quot;../../operators/new&quot;&gt;constructors&lt;/a&gt; for an object (similar to Java).</source>
          <target state="translated">オブジェクトのチェーン&lt;a href=&quot;../../operators/new&quot;&gt;コンストラクターに&lt;/a&gt; &lt;code&gt;apply&lt;/code&gt; を使用できます（Javaと同様）。</target>
        </trans-unit>
        <trans-unit id="d70680cf68dd06bf6d9d84477abcb14a645a2cc3" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;apply&lt;/code&gt; to chain &lt;a href=&quot;../../operators/new&quot;&gt;constructors&lt;/a&gt; for an object, similar to Java. In the following example we will create a global &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; method called &lt;code&gt;construct&lt;/code&gt;, which will enable you to use an array-like object with a constructor instead of an arguments list.</source>
          <target state="translated">Javaと同様に、 &lt;code&gt;apply&lt;/code&gt; を使用してオブジェクトのチェーン&lt;a href=&quot;../../operators/new&quot;&gt;コンストラクター&lt;/a&gt;を作成できます。次の例では、 &lt;code&gt;construct&lt;/code&gt; と呼ばれるグローバルな&lt;a href=&quot;../function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt;メソッドを作成します。これにより、引数リストの代わりにコンストラクターを使用して配列のようなオブジェクトを使用できます。</target>
        </trans-unit>
        <trans-unit id="e1de2ceebd9222ba7c58eec96eef8f4251af6288" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;call&lt;/code&gt; to chain constructors for an object (similar to Java).</source>
          <target state="translated">オブジェクトのコンストラクターをチェーンするための &lt;code&gt;call&lt;/code&gt; を使用できます（Javaと同様）。</target>
        </trans-unit>
        <trans-unit id="0a22149b54ca97b6d7cb345e41275e84da84c360" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;call&lt;/code&gt; to chain constructors for an object, similar to Java. In the following example, the constructor for the &lt;code&gt;Product&lt;/code&gt; object is defined with two parameters, &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;price&lt;/code&gt;. Two other functions &lt;code&gt;Food&lt;/code&gt; and &lt;code&gt;Toy&lt;/code&gt; invoke &lt;code&gt;Product&lt;/code&gt; passing &lt;code&gt;this&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;price&lt;/code&gt;. Product initializes the properties &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;price&lt;/code&gt;, both specialized functions define the &lt;code&gt;category&lt;/code&gt;.</source>
          <target state="translated">Javaと同様に、 &lt;code&gt;call&lt;/code&gt; を使用してオブジェクトのコンストラクターをチェーンできます。次の例では、 &lt;code&gt;Product&lt;/code&gt; オブジェクトのコンストラクターが2つのパラメーター &lt;code&gt;name&lt;/code&gt; と &lt;code&gt;price&lt;/code&gt; で定義されています。他の2つの関数 &lt;code&gt;Food&lt;/code&gt; および &lt;code&gt;Toy&lt;/code&gt; は、 &lt;code&gt;this&lt;/code&gt; と &lt;code&gt;name&lt;/code&gt; および &lt;code&gt;price&lt;/code&gt; を渡して &lt;code&gt;Product&lt;/code&gt; を呼び出します。製品はプロパティ &lt;code&gt;name&lt;/code&gt; と &lt;code&gt;price&lt;/code&gt; 初期化し &lt;code&gt;category&lt;/code&gt; 。どちらの特殊な関数もカテゴリを定義します。</target>
        </trans-unit>
        <trans-unit id="0455b306a02a94dc2e2d69c63d0224499e678fa3" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;normalize()&lt;/code&gt; using the &lt;code&gt;&quot;NFD&quot;&lt;/code&gt; or &lt;code&gt;&quot;NFC&quot;&lt;/code&gt; arguments to produce a form of the string that will be the same for all canonically equivalent strings. In the example below we normalize two representations of the character &lt;code&gt;&quot;&amp;ntilde;&quot;&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&quot;NFD&quot;&lt;/code&gt; または &lt;code&gt;&quot;NFC&quot;&lt;/code&gt; 引数を使用して &lt;code&gt;normalize()&lt;/code&gt; を使用すると、正規に等価なすべての文字列で同じ形式の文字列を生成できます。以下の例では、文字 &lt;code&gt;&quot;&amp;ntilde;&quot;&lt;/code&gt; 2つの表現を正規化します。</target>
        </trans-unit>
        <trans-unit id="7402195a83a73ee80e156f7baa3503a377a771fa" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;normalize()&lt;/code&gt; using the &lt;code&gt;&quot;NFKD&quot;&lt;/code&gt; or &lt;code&gt;&quot;NFKC&quot;&lt;/code&gt; arguments to produce a form of the string that will be the same for all compatible strings:</source>
          <target state="translated">&lt;code&gt;&quot;NFKD&quot;&lt;/code&gt; または &lt;code&gt;&quot;NFKC&quot;&lt;/code&gt; 引数を使用して &lt;code&gt;normalize()&lt;/code&gt; を使用すると、互換性のあるすべての文字列で同じ形式の文字列を生成できます。</target>
        </trans-unit>
        <trans-unit id="8ab637261e59cb82430239192fc807adb7614b1b" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;obj.constructor.name&lt;/code&gt; to check the &quot;class&quot; of an object (but be sure to read the warnings below):</source>
          <target state="translated">&lt;code&gt;obj.constructor.name&lt;/code&gt; を使用してオブジェクトの「クラス」を確認できます（ただし、以下の警告を必ずお読みください）。</target>
        </trans-unit>
        <trans-unit id="e2590c8cd5c99327cbfaa5449528eda24cc31879" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;push&lt;/code&gt; to append an element to an array. And, because &lt;code&gt;push&lt;/code&gt; accepts a variable number of arguments, you can also push multiple elements at once.</source>
          <target state="translated">&lt;code&gt;push&lt;/code&gt; を使用して、要素を配列に追加できます。また、 &lt;code&gt;push&lt;/code&gt; は可変数の引数を受け入れるため、一度に複数の要素をプッシュすることもできます。</target>
        </trans-unit>
        <trans-unit id="5f866fc79602a0dfeea409f24e451b76b674ad43" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;throw&lt;/code&gt; to rethrow an exception after you catch it. The following example catches an exception with a numeric value and rethrows it if the value is over 50. The rethrown exception propagates up to the enclosing function or to the top level so that the user sees it.</source>
          <target state="translated">例外をキャッチした後で、 &lt;code&gt;throw&lt;/code&gt; を使用して例外を再スローできます。次の例では、数値を使用して例外をキャッチし、値が50を超えている場合は例外を再スローします。再スローされた例外は、ユーザーが見ることができるように、囲んでいる関数または最上位まで伝播します。</target>
        </trans-unit>
        <trans-unit id="1ed0d29dc358cd9fffe7a1749c0b4d3215a3cb81" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;undefined&lt;/code&gt; and the strict equality and inequality operators to determine whether a variable has a value. In the following code, the variable &lt;code&gt;x&lt;/code&gt; is not defined, and the &lt;code&gt;if&lt;/code&gt; statement evaluates to true.</source>
          <target state="translated">あなたは使用することができ &lt;code&gt;undefined&lt;/code&gt; の変数が値を持っているかどうかを判断するために厳格な平等と不平等演算子を。次のコードでは、変数 &lt;code&gt;x&lt;/code&gt; は定義されておらず、 &lt;code&gt;if&lt;/code&gt; ステートメントはtrueと評価されます。</target>
        </trans-unit>
        <trans-unit id="ae8c4b12476c9e6ed31c329c99927ecb11ac70b1" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;undefined&lt;/code&gt; and the strict equality and inequality operators to determine whether a variable has a value. In the following code, the variable &lt;code&gt;x&lt;/code&gt; is not initialized, and the &lt;code&gt;if&lt;/code&gt; statement evaluates to true.</source>
          <target state="translated">あなたは使用することができ &lt;code&gt;undefined&lt;/code&gt; の変数が値を持っているかどうかを判断するために厳格な平等と不平等演算子を。次のコードでは、変数 &lt;code&gt;x&lt;/code&gt; は初期化されず、 &lt;code&gt;if&lt;/code&gt; ステートメントはtrueと評価されます。</target>
        </trans-unit>
        <trans-unit id="babb811832c225dfe18270ac844077d76f34b11c" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;valueOf&lt;/code&gt; within your own code to convert a built-in object into a primitive value. When you create a custom object, you can override &lt;code&gt;Object.prototype.valueOf()&lt;/code&gt; to call a custom method instead of the default &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">独自のコード内で &lt;code&gt;valueOf&lt;/code&gt; を使用して、組み込みオブジェクトをプリミティブ値に変換できます。カスタムオブジェクトを作成するときに、 &lt;code&gt;Object.prototype.valueOf()&lt;/code&gt; をオーバーライドして、デフォルトの&lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;メソッドの代わりにカスタムメソッドを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="3a98c5a0a2f2bae8b2f10e6201c7224bd664896a" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;watch&lt;/code&gt; to test any assignment to an object's properties. This example ensures that every Person always has a valid name and an age between 0 and 200.</source>
          <target state="translated">&lt;code&gt;watch&lt;/code&gt; を使用して、オブジェクトのプロパティへの割り当てをテストできます。この例では、すべての個人が常に有効な名前と0〜200の年齢を持っていることを確認します。</target>
        </trans-unit>
        <trans-unit id="b7fa3cb872411b2530986b056c49dfa860257589" translate="yes" xml:space="preserve">
          <source>You can use a &lt;a href=&quot;../operators/function&quot;&gt;function expression&lt;/a&gt; (assignment) instead:</source>
          <target state="translated">代わりに&lt;a href=&quot;../operators/function&quot;&gt;関数式&lt;/a&gt;（代入）を使用できます。</target>
        </trans-unit>
        <trans-unit id="d53f5b375e12b4f4423388672f3498c3b8dd5d4b" translate="yes" xml:space="preserve">
          <source>You can use a label to identify a loop, and then use the &lt;code&gt;break&lt;/code&gt; or &lt;code&gt;continue&lt;/code&gt; statements to indicate whether a program should interrupt the loop or continue its execution.</source>
          <target state="translated">ラベルを使用してループを識別し、 &lt;code&gt;break&lt;/code&gt; または &lt;code&gt;continue&lt;/code&gt; ステートメントを使用して、プログラムがループを中断するか、実行を継続するかを指定できます。</target>
        </trans-unit>
        <trans-unit id="026585d209a85d4657f35baf2d4fb41e219dac7d" translate="yes" xml:space="preserve">
          <source>You can use default value assignment with the &lt;a href=&quot;../operators/destructuring_assignment&quot;&gt;destructuring assignment&lt;/a&gt; notation:</source>
          <target state="translated">&lt;a href=&quot;../operators/destructuring_assignment&quot;&gt;分解代入&lt;/a&gt;表記法でデフォルト値代入を使用できます。</target>
        </trans-unit>
        <trans-unit id="da107e47110084bbf0a6887f2fc8f6d2b2cd0134" translate="yes" xml:space="preserve">
          <source>You can use double quotes, or escape the apostrophe:</source>
          <target state="translated">二重引用符を使用するか、アポストロフィをエスケープしてください。</target>
        </trans-unit>
        <trans-unit id="a5e579c93fc2da62d31bd7842478a0aaffe1270c" translate="yes" xml:space="preserve">
          <source>You can use labels within simple blocks, but only &lt;code&gt;break&lt;/code&gt; statements can make use of non-loop labels.</source>
          <target state="translated">単純なブロック内でラベルを使用できますが、非ループラベルを使用できるのは &lt;code&gt;break&lt;/code&gt; ステートメントだけです。</target>
        </trans-unit>
        <trans-unit id="7f5cf5e8a06a1dddf62e0c86bea142f71f3e4966" translate="yes" xml:space="preserve">
          <source>You can use optional chaining when attempting to call a method which may not exist. This can be helpful, for example, when using an API in which a method might be unavailable, either due to the age of the implementation or because of a feature which isn't available on the user's device.</source>
          <target state="translated">存在しない可能性のあるメソッドを呼び出そうとする場合、オプションのチェーニングを使用することができます。これは、例えば、実装が古くなっていたり、ユーザーのデバイスでは利用できない機能のために、メソッドが利用できない可能性のあるAPIを使用している場合などに役立ちます。</target>
        </trans-unit>
        <trans-unit id="e8b8a25e6dd08c4847aa0b15b35ba9bf45e0da4b" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;../operators/addition&quot;&gt;+&lt;/a&gt; operator to append multiple strings together, like this:</source>
          <target state="translated">&lt;a href=&quot;../operators/addition&quot;&gt;+&lt;/a&gt;演算子を使用して、次のように複数の文字列を一緒に追加できます。</target>
        </trans-unit>
        <trans-unit id="f07968fbf5519b539e7ae19bf37330c4f2c4909e" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;../operators/arithmetic_operators#Addition_()&quot;&gt;+&lt;/a&gt; operator to append multiple strings together, like this:</source>
          <target state="translated">&lt;a href=&quot;../operators/arithmetic_operators#Addition_()&quot;&gt;+&lt;/a&gt;演算子を使用して、次のように複数の文字列を一緒に追加できます。</target>
        </trans-unit>
        <trans-unit id="619f1ffa11e81ab074af908a0f9e462d11604d45" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;finally&lt;/code&gt; clause to make your script fail gracefully when an exception occurs; for example, to do general cleanup, you may need to release a resource that your script has tied up.</source>
          <target state="translated">&lt;code&gt;finally&lt;/code&gt; 節を使用して、例外が発生したときにスクリプトを適切に失敗させることができます。たとえば、一般的なクリーンアップを行うには、スクリプトが結び付けたリソースを解放する必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="b78ae992cf0cc93d5ea958c6df5efd164c240ea6" translate="yes" xml:space="preserve">
          <source>You can use the backslash character (&lt;code&gt;\&lt;/code&gt;) at the end of each line to indicate that the string will continue on the next line. Make sure there is no space or any other character after the backslash (except for a line break), or as an indent; otherwise it will not work.</source>
          <target state="translated">各行の終わりに円記号（ &lt;code&gt;\&lt;/code&gt; ）を使用して、文字列が次の行に続くことを示すことができます。バックスラッシュの後に（改行を除く）、またはインデントとしてスペースやその他の文字がないことを確認してください。そうしないと機能しません。</target>
        </trans-unit>
        <trans-unit id="317a8f66d2786e357ed707301781693f16d9e65d" translate="yes" xml:space="preserve">
          <source>You can use the comma operator when you want to include multiple expressions in a location that requires a single expression. The most common usage of this operator is to supply multiple parameters in a &lt;code&gt;for&lt;/code&gt; loop.</source>
          <target state="translated">単一の式が必要な場所に複数の式を含める場合は、カンマ演算子を使用できます。この演算子の最も一般的な使用法は、 &lt;code&gt;for&lt;/code&gt; ループで複数のパラメーターを指定することです。</target>
        </trans-unit>
        <trans-unit id="2e21711833232d72cacd53f5637e57865a69a1e8" translate="yes" xml:space="preserve">
          <source>You can use this function to determine whether a number is a finite number. The &lt;code&gt;isFinite&lt;/code&gt; function examines the number in its argument. If the argument is &lt;code&gt;NaN&lt;/code&gt;, positive infinity, or negative infinity, this method returns &lt;code&gt;false&lt;/code&gt;; otherwise, it returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">この関数を使用して、数値が有限数であるかどうかを判別できます。 &lt;code&gt;isFinite&lt;/code&gt; の関数は引数に数値を調べます。引数が &lt;code&gt;NaN&lt;/code&gt; 、正の無限大、または負の無限大の場合、このメソッドは &lt;code&gt;false&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="a1cf9c3cec34c89c057a1947c5e82be3a4be1b6a" translate="yes" xml:space="preserve">
          <source>You can use this method to help assign a date and time to another &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object. This method is functionally equivalent to the &lt;a href=&quot;valueof&quot;&gt;&lt;code&gt;valueOf()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このメソッドを使用して、日付と時刻を別の&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;オブジェクトに割り当てることができます。このメソッドは、機能的には&lt;a href=&quot;valueof&quot;&gt; &lt;code&gt;valueOf()&lt;/code&gt; &lt;/a&gt;メソッドと同等です。</target>
        </trans-unit>
        <trans-unit id="9bc13dc4e9ed8e67bdbdaec51c0d8b47713a505a" translate="yes" xml:space="preserve">
          <source>You can use this, for example, to test whether an argument to a function is arithmetically processable (usable &quot;like&quot; a number), or if it's not and you have to provide a default value or something else. This way you can have a function that makes use of the full versatility JavaScript provides by implicitly converting values depending on context.</source>
          <target state="translated">例えば、関数の引数が算術的に処理可能かどうか(数値のように「使える」かどうか)をテストしたり、そうでない場合にデフォルト値や何か他のものを提供する必要があるかどうかをテストするために使用することができます。このようにして、コンテキストに応じて暗黙のうちに値を変換することで、JavaScriptが提供する汎用性をフルに活用した関数を持つことができます。</target>
        </trans-unit>
        <trans-unit id="ddd2922a461b2926ffb93c51c09e525def451fa7" translate="yes" xml:space="preserve">
          <source>You can work around this by inserting the following code at the beginning of your scripts, allowing use of &lt;code&gt;Array.from()&lt;/code&gt; in implementations that don't natively support it.</source>
          <target state="translated">これを回避するには、スクリプトの先頭に次のコードを挿入して、ネイティブでサポートされていない実装で &lt;code&gt;Array.from()&lt;/code&gt; を使用できるようにします。</target>
        </trans-unit>
        <trans-unit id="d2dbcfba03c9f112e77073302af6c9e7adb31431" translate="yes" xml:space="preserve">
          <source>You can work around this by inserting the following code at the beginning of your scripts, allowing use of &lt;code&gt;filter()&lt;/code&gt; in ECMA-262 implementations which do not natively support it. This algorithm is exactly equivalent to the one specified in ECMA-262, 5th edition, assuming that &lt;code&gt;fn.call&lt;/code&gt; evaluates to the original value of &lt;a href=&quot;../function/bind&quot;&gt;&lt;code&gt;Function.prototype.bind()&lt;/code&gt;&lt;/a&gt;, and that &lt;a href=&quot;push&quot;&gt;&lt;code&gt;Array.prototype.push()&lt;/code&gt;&lt;/a&gt; has its original value.</source>
          <target state="translated">これを回避するには、スクリプトの先頭に次のコードを挿入して、ネイティブでサポートされていないECMA-262実装で &lt;code&gt;filter()&lt;/code&gt; を使用できるようにします。このアルゴリズムは、 &lt;code&gt;fn.call&lt;/code&gt; が&lt;a href=&quot;../function/bind&quot;&gt; &lt;code&gt;Function.prototype.bind()&lt;/code&gt; の&lt;/a&gt;元の値に評価され、&lt;a href=&quot;push&quot;&gt; &lt;code&gt;Array.prototype.push()&lt;/code&gt; &lt;/a&gt;が元の値を持っていると仮定すると、ECMA-262、第5版で指定されたものとまったく同じです。</target>
        </trans-unit>
        <trans-unit id="475bd966151853e6dc6b4eac659596216840a8d6" translate="yes" xml:space="preserve">
          <source>You can work around this by inserting the following code at the beginning of your scripts, allowing use of &lt;code&gt;map&lt;/code&gt; in implementations which do not natively support it. This algorithm is exactly the one specified in ECMA-262, 5th edition, assuming &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; have their original values and that &lt;code&gt;callback.call&lt;/code&gt; evaluates to the original value of &lt;code&gt;&lt;a href=&quot;../function/call&quot;&gt;&lt;code&gt;Function.prototype.call&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">スクリプトの先頭に次のコードを挿入して、ネイティブでサポートされていない実装で &lt;code&gt;map&lt;/code&gt; を使用できるようにすることで、これを回避できます。このアルゴリズムは、&lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;が元の値を持ち、 &lt;code&gt;callback.call&lt;/code&gt; が &lt;code&gt;&lt;a href=&quot;../function/call&quot;&gt;&lt;code&gt;Function.prototype.call&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; の元の値に評価されると仮定すると、ECMA-262、第5版で指定されたものとまったく同じです。</target>
        </trans-unit>
        <trans-unit id="e32dbc053f55eb07f3103010b093c867e0ed46ee" translate="yes" xml:space="preserve">
          <source>You can work around this limitation in a generic fashion by using &lt;code&gt;toString()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;toString()&lt;/code&gt; を使用すると、この制限を一般的な方法で回避できます。</target>
        </trans-unit>
        <trans-unit id="d7dba08a77bf7846cd79df09bf682dbeb8d92449" translate="yes" xml:space="preserve">
          <source>You can't create empty properties like this:</source>
          <target state="translated">こんな感じで空のプロパティは作れません。</target>
        </trans-unit>
        <trans-unit id="f9a76c3a2becb68d2eaf88340674f43466fc546f" translate="yes" xml:space="preserve">
          <source>You can't run JS modules via a &lt;code&gt;file://&lt;/code&gt; URL &amp;mdash; you'll get &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS&quot;&gt;CORS&lt;/a&gt; errors. You need to run it via an HTTP server.</source>
          <target state="translated">&lt;code&gt;file://&lt;/code&gt; URLを介してJSモジュールを実行することはできません&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS&quot;&gt;&amp;mdash;CORS&lt;/a&gt;エラーが発生します。HTTPサーバー経由で実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="b22d504155865fec103eee7f76e6b0a736b4e36f" translate="yes" xml:space="preserve">
          <source>You can't split a string across multiple lines like this in JavaScript:</source>
          <target state="translated">JavaScriptでは、このように複数行に渡って文字列を分割することはできません。</target>
        </trans-unit>
        <trans-unit id="913fb2c129b5053febffe5e8ba2615316011ea52" translate="yes" xml:space="preserve">
          <source>You cannot call this method on &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; (via &lt;code&gt;Function.prototype.call&lt;/code&gt;, for example) , if you do, a &lt;code&gt;TypeError&lt;/code&gt; will be thrown.</source>
          <target state="translated">このメソッドを &lt;code&gt;null&lt;/code&gt; または &lt;code&gt;undefined&lt;/code&gt; （たとえば、 &lt;code&gt;Function.prototype.call&lt;/code&gt; を介して）で呼び出すことはできません。呼び出すと、 &lt;code&gt;TypeError&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="7f18587e9922b80a8474ea53d8bbb55824d129cb" translate="yes" xml:space="preserve">
          <source>You cannot change the name of a function, this property is read-only:</source>
          <target state="translated">関数名を変更することはできません。</target>
        </trans-unit>
        <trans-unit id="17215b9fb1a7609abdf552127fedb3f005a6b8e7" translate="yes" xml:space="preserve">
          <source>You cannot change the target of a &lt;code&gt;WeakRef&lt;/code&gt;, it will always only ever be the original target object or &lt;code&gt;undefined&lt;/code&gt; when that target has been reclaimed.</source>
          <target state="translated">&lt;code&gt;WeakRef&lt;/code&gt; のターゲットを変更することはできません。常に元のターゲットオブジェクトになるか、そのターゲットが再利用されたときに &lt;code&gt;undefined&lt;/code&gt; なります。</target>
        </trans-unit>
        <trans-unit id="f5bd0c333ece534ddcab3372988e172539c11088" translate="yes" xml:space="preserve">
          <source>You cannot change this property directly.</source>
          <target state="translated">このプロパティを直接変更することはできません。</target>
        </trans-unit>
        <trans-unit id="78ec854087b07b9694daa44e389e4b5e84f29ee2" translate="yes" xml:space="preserve">
          <source>You cannot change this property directly. It is read-only.</source>
          <target state="translated">このプロパティを直接変更することはできません。読み取り専用です。</target>
        </trans-unit>
        <trans-unit id="7d737b87e793a6a6369e3fd1f0fc4f408a066736" translate="yes" xml:space="preserve">
          <source>You cannot use leading zeros, like 01, and decimal points must be followed by at least one digit.</source>
          <target state="translated">01 のように先頭のゼロを使用することはできず、小数点の後には最低 1 桁の数字を付ける必要があります。</target>
        </trans-unit>
        <trans-unit id="a2437fa6d924ccdbf76b10be37cf8f08224f8de1" translate="yes" xml:space="preserve">
          <source>You cannot use single-quotes around properties, like 'foo'.</source>
          <target state="translated">foo' のように、プロパティをシングルクォートで囲むことはできません。</target>
        </trans-unit>
        <trans-unit id="c654f1adebc1b467ec4102e66d502dca9b3fe1e2" translate="yes" xml:space="preserve">
          <source>You cannot use the &lt;a href=&quot;delete&quot;&gt;delete operator&lt;/a&gt; and &lt;code&gt;super.prop&lt;/code&gt; or &lt;code&gt;super[expr]&lt;/code&gt; to delete a parent class' property, it will throw a &lt;a href=&quot;../global_objects/referenceerror&quot;&gt;&lt;code&gt;ReferenceError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;delete&quot;&gt;削除演算子&lt;/a&gt;と &lt;code&gt;super.prop&lt;/code&gt; または &lt;code&gt;super[expr]&lt;/code&gt; を使用して親クラスのプロパティを削除することはできません。これは&lt;a href=&quot;../global_objects/referenceerror&quot;&gt; &lt;code&gt;ReferenceError&lt;/code&gt; &lt;/a&gt;をスローします。</target>
        </trans-unit>
        <trans-unit id="653a30be3788ccc85c03c48adade3f1590b9df33" translate="yes" xml:space="preserve">
          <source>You could implement your custom &lt;code&gt;instanceof&lt;/code&gt; behavior like this, for example:</source>
          <target state="translated">たとえば、次のようなカスタム &lt;code&gt;instanceof&lt;/code&gt; 動作を実装できます。</target>
        </trans-unit>
        <trans-unit id="d20c373c30666f094f10d4e5015bd19347cb0ecf" translate="yes" xml:space="preserve">
          <source>You create the registry passing in the callback:</source>
          <target state="translated">コールバックで渡すレジストリを作成します。</target>
        </trans-unit>
        <trans-unit id="4506a651a35fb4ed386eb314c8b525cb2399b070" translate="yes" xml:space="preserve">
          <source>You do not have to create a &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; object to access this static property (use &lt;code&gt;Number.EPSILON&lt;/code&gt;).</source>
          <target state="translated">この静的プロパティにアクセスするために&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt;オブジェクトを作成する必要はありません（ &lt;code&gt;Number.EPSILON&lt;/code&gt; を使用）。</target>
        </trans-unit>
        <trans-unit id="d46bc4e4fafb1ec71a9a790cf30f896e3c3c0910" translate="yes" xml:space="preserve">
          <source>You do not have to create a &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; object to access this static property (use &lt;code&gt;Number.NEGATIVE_INFINITY&lt;/code&gt;).</source>
          <target state="translated">この静的プロパティにアクセスするために&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt;オブジェクトを作成する必要はありません（ &lt;code&gt;Number.NEGATIVE_INFINITY&lt;/code&gt; を使用）。</target>
        </trans-unit>
        <trans-unit id="6d1fcc507e2c8d83dbcdbc5214fdfb2a2203cb6e" translate="yes" xml:space="preserve">
          <source>You do not have to create a &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; object to access this static property (use &lt;code&gt;Number.NaN&lt;/code&gt;).</source>
          <target state="translated">この静的プロパティにアクセスするために&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt;オブジェクトを作成する必要はありません（ &lt;code&gt;Number.NaN&lt;/code&gt; を使用）。</target>
        </trans-unit>
        <trans-unit id="baf1f37a5f52cfd0b1c1c34da534f9e662b7c57f" translate="yes" xml:space="preserve">
          <source>You do not have to create a &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; object to access this static property (use &lt;code&gt;Number.POSITIVE_INFINITY&lt;/code&gt;).</source>
          <target state="translated">この静的プロパティにアクセスするために&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt;オブジェクトを作成する必要はありません（ &lt;code&gt;Number.POSITIVE_INFINITY&lt;/code&gt; を使用）。</target>
        </trans-unit>
        <trans-unit id="1a7b47683b6212ede8025f5ae1b64fb99b46df73" translate="yes" xml:space="preserve">
          <source>You either need to remove the &lt;a href=&quot;../global_objects/object/seal&quot;&gt;&lt;code&gt;Object.seal()&lt;/code&gt;&lt;/a&gt; call, or make a copy of it. In case of a copy, shortening the copy of the array does not modify the original array length.</source>
          <target state="translated">&lt;a href=&quot;../global_objects/object/seal&quot;&gt; &lt;code&gt;Object.seal()&lt;/code&gt; &lt;/a&gt;呼び出しを削除するか、そのコピーを作成する必要があります。コピーの場合、配列のコピーを短くしても、元の配列の長さは変更されません。</target>
        </trans-unit>
        <trans-unit id="8c22dcee70c7cdbbdeed369253dbefc3755c0bb8" translate="yes" xml:space="preserve">
          <source>You may also see from the ES5 syntax example that in Chrome or Firefox our static definition of &lt;code&gt;Foo.name&lt;/code&gt; becomes &lt;em&gt;writable&lt;/em&gt;. The built-in definition in the absence of a custom static definition is &lt;em&gt;read-only&lt;/em&gt;:</source>
          <target state="translated">ES5の構文例から、ChromeまたはFirefoxで &lt;code&gt;Foo.name&lt;/code&gt; の静的定義が&lt;em&gt;書き込み可能に&lt;/em&gt;なることもわかります。カスタム静的定義がない場合の組み込み定義は&lt;em&gt;読み取り専用&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="23d190278c086815032de534445fd5f8b76472cf" translate="yes" xml:space="preserve">
          <source>You may encounter errors in &lt;a href=&quot;switch&quot;&gt;&lt;code&gt;switch&lt;/code&gt;&lt;/a&gt; statements because there is only one block.</source>
          <target state="translated">ブロックが1つしかないため、&lt;a href=&quot;switch&quot;&gt; &lt;code&gt;switch&lt;/code&gt; &lt;/a&gt;ステートメントでエラーが発生する場合があります。</target>
        </trans-unit>
        <trans-unit id="275ac0efd2f9b8ff66945f93a265c4c3b843f137" translate="yes" xml:space="preserve">
          <source>You may make use of generator, async, and async generator functions.</source>
          <target state="translated">ジェネレーター機能、非同期ジェネレーター機能、非同期ジェネレーター機能を利用することができます。</target>
        </trans-unit>
        <trans-unit id="4d0aaf529b514934c0264946353865c975da7a15" translate="yes" xml:space="preserve">
          <source>You might use the &lt;code&gt;Number.NEGATIVE_INFINITY&lt;/code&gt; property to indicate an error condition that returns a finite number in case of success. Note, however, that &lt;a href=&quot;../isfinite&quot;&gt;&lt;code&gt;isFinite&lt;/code&gt;&lt;/a&gt; would be more appropriate in such a case.</source>
          <target state="translated">&lt;code&gt;Number.NEGATIVE_INFINITY&lt;/code&gt; プロパティを使用して、成功した場合に有限数を返すエラー条件を示すことができます。ただし、そのような場合は&lt;a href=&quot;../isfinite&quot;&gt; &lt;code&gt;isFinite&lt;/code&gt; の&lt;/a&gt;方が適切です。</target>
        </trans-unit>
        <trans-unit id="298b4c1c6284ab3cd9fbcf546ba7d8b594ba3758" translate="yes" xml:space="preserve">
          <source>You might use the &lt;code&gt;Number.POSITIVE_INFINITY&lt;/code&gt; property to indicate an error condition that returns a finite number in case of success. Note, however, that &lt;a href=&quot;../isfinite&quot;&gt;&lt;code&gt;isFinite&lt;/code&gt;&lt;/a&gt; would be more appropriate in such a case.</source>
          <target state="translated">&lt;code&gt;Number.POSITIVE_INFINITY&lt;/code&gt; プロパティを使用して、成功した場合に有限数を返すエラー条件を示すことができます。ただし、そのような場合は&lt;a href=&quot;../isfinite&quot;&gt; &lt;code&gt;isFinite&lt;/code&gt; の&lt;/a&gt;方が適切です。</target>
        </trans-unit>
        <trans-unit id="53cc2d00f819bd4b34f85ff2d880d8f6680edb6f" translate="yes" xml:space="preserve">
          <source>You might want to define your own error types deriving from &lt;code&gt;Error&lt;/code&gt; to be able to &lt;code&gt;throw new MyError()&lt;/code&gt; and use &lt;code&gt;instanceof MyError&lt;/code&gt; to check the kind of error in the exception handler. This results in cleaner and more consistent error handling code.</source>
          <target state="translated">&lt;code&gt;throw new MyError()&lt;/code&gt; をスローできるように、 &lt;code&gt;Error&lt;/code&gt; から派生した独自のエラータイプを定義し、 &lt;code&gt;instanceof MyError&lt;/code&gt; を使用して、例外ハンドラーのエラーの種類を確認することをお勧めします。これにより、よりクリーンで一貫性のあるエラー処理コードが得られます。</target>
        </trans-unit>
        <trans-unit id="6e76e6401303e6a52c236b6ed5db72fd096badc1" translate="yes" xml:space="preserve">
          <source>You might want to define your own error types deriving from &lt;code&gt;Error&lt;/code&gt; to be able to &lt;code&gt;throw new MyError()&lt;/code&gt; and use &lt;code&gt;instanceof MyError&lt;/code&gt; to check the kind of error in the exception handler. This results in cleaner and more consistent error handling code. See &lt;a href=&quot;http://stackoverflow.com/questions/1382107/whats-a-good-way-to-extend-error-in-javascript&quot;&gt;&quot;What's a good way to extend Error in JavaScript?&quot;&lt;/a&gt; on StackOverflow for an in-depth discussion.</source>
          <target state="translated">&lt;code&gt;Error&lt;/code&gt; から派生する独自のエラータイプを定義して、 &lt;code&gt;throw new MyError()&lt;/code&gt; をスローし、 &lt;code&gt;instanceof MyError&lt;/code&gt; を使用して例外ハンドラーでエラーの種類を確認することができます。これにより、よりクリーンで一貫性のあるエラー処理コードが生成されます。&lt;a href=&quot;http://stackoverflow.com/questions/1382107/whats-a-good-way-to-extend-error-in-javascript&quot;&gt;「JavaScriptでエラーを拡張する良い方法は何ですか？」を&lt;/a&gt;参照してください。詳細については、StackOverflowを参照してください。</target>
        </trans-unit>
        <trans-unit id="6e0361158708dba60a2489ecf949281b03c0a302" translate="yes" xml:space="preserve">
          <source>You might want to return &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; objects in your derived array class &lt;code&gt;MyArray&lt;/code&gt;. For example, when using methods such as &lt;a href=&quot;../array/map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; that return the default constructor, you want these methods to return a parent &lt;code&gt;Array&lt;/code&gt; object, instead of the &lt;code&gt;MyArray&lt;/code&gt; object. The species symbol lets you do this:</source>
          <target state="translated">派生した配列クラス &lt;code&gt;MyArray&lt;/code&gt; で&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;オブジェクトを返すことができます。たとえば、デフォルトのコンストラクタを返す&lt;a href=&quot;../array/map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; &lt;/a&gt;などのメソッドを使用する場合、これらのメソッドが &lt;code&gt;MyArray&lt;/code&gt; オブジェクトではなく親の &lt;code&gt;Array&lt;/code&gt; オブジェクトを返すようにする必要があります。種のシンボルでこれを行うことができます：</target>
        </trans-unit>
        <trans-unit id="0996f3e938be1afaf2acb086f8277e77cf342e53" translate="yes" xml:space="preserve">
          <source>You might want to return &lt;a href=&quot;global_objects/array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; objects in your derived array class &lt;code&gt;MyArray&lt;/code&gt;. The species pattern lets you override default constructors.</source>
          <target state="translated">派生した配列クラス &lt;code&gt;MyArray&lt;/code&gt; で&lt;a href=&quot;global_objects/array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;オブジェクトを返すことができます。種パターンを使用すると、デフォルトのコンストラクターをオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="808d49fd8aee0ef22adb06b25588b4c45fa03c44" translate="yes" xml:space="preserve">
          <source>You must only use the &lt;code&gt;#!&lt;/code&gt; comment style to specify a JavaScript interpreter. In all other cases just use a &lt;code&gt;//&lt;/code&gt; comment (or mulitiline comment).</source>
          <target state="translated">&lt;code&gt;#!&lt;/code&gt; のみを使用する必要があります！JavaScriptインタープリターを指定するコメントスタイル。他のすべての場合は、 &lt;code&gt;//&lt;/code&gt; コメント（またはマルチラインコメント）を使用してください。</target>
        </trans-unit>
        <trans-unit id="6b638af216dd81467874f8cff442f2677a4b0288" translate="yes" xml:space="preserve">
          <source>You must specify an object on the right side of the &lt;code&gt;in&lt;/code&gt; operator. For example, you can specify a string created with the &lt;code&gt;String&lt;/code&gt; constructor, but you cannot specify a string literal.</source>
          <target state="translated">&lt;code&gt;in&lt;/code&gt; 演算子の右側にオブジェクトを指定する必要があります。たとえば、 &lt;code&gt;String&lt;/code&gt; コンストラクタで作成された文字列を指定できますが、文字列リテラルは指定できません。</target>
        </trans-unit>
        <trans-unit id="85b7abea44b55dd46070c1d495271f5133225743" translate="yes" xml:space="preserve">
          <source>You must wrap the object literal in parentheses:</source>
          <target state="translated">オブジェクトリテラルを括弧で囲む必要があります。</target>
        </trans-unit>
        <trans-unit id="870d8471dfa2346c2aa9713956e688a471ff02f9" translate="yes" xml:space="preserve">
          <source>You need to include this script in your HTML with a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script&quot;&gt;&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;&lt;/a&gt; element of type=&quot;module&quot;, so that it gets recognised as a module and dealt with appropriately.</source>
          <target state="translated">このスクリプトをHTMLにtype = &quot;module&quot;の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script&quot;&gt; &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; &lt;/a&gt;要素とともに含めて、モジュールとして認識され、適切に処理されるようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="99c201dcda792a5d054ba1a684299adb13b412de" translate="yes" xml:space="preserve">
          <source>You need to remove the initializer (&lt;code&gt;value = 50&lt;/code&gt;) in the head of the &lt;code&gt;for-of&lt;/code&gt; loop. Maybe you intended to make 50 an offset value, in that case you could add it to the loop body, for example.</source>
          <target state="translated">&lt;code&gt;for-of&lt;/code&gt; ループの先頭にある初期化子（ &lt;code&gt;value = 50&lt;/code&gt; ）を削除する必要があります。たぶん、あなたは50をオフセット値にするつもりだったかもしれません。その場合、例えばそれをループ本体に追加することができます。</target>
        </trans-unit>
        <trans-unit id="762884038e07a57e733dc6f3173b6bca9855dbf1" translate="yes" xml:space="preserve">
          <source>You should not use &lt;code&gt;eval()&lt;/code&gt; to convert property names into properties. Consider the following example where the property of the object to be accessed is not known until the code is executed. This can be done with &lt;code&gt;eval()&lt;/code&gt;:</source>
          <target state="translated">プロパティ名をプロパティに変換するために &lt;code&gt;eval()&lt;/code&gt; を使用しないでください。コードが実行されるまでアクセスされるオブジェクトのプロパティがわからない次の例について考えてみます。これは &lt;code&gt;eval()&lt;/code&gt; で行うことができます：</target>
        </trans-unit>
        <trans-unit id="d1b752658f545e55c88df12e8b525477fd18cf36" translate="yes" xml:space="preserve">
          <source>You should not use &lt;code&gt;eval()&lt;/code&gt; to convert property names into properties. Consider the following example where the property of the object to be accessed is not known until the code is executed. This can be done with eval:</source>
          <target state="translated">プロパティ名をプロパティに変換するために &lt;code&gt;eval()&lt;/code&gt; を使用しないでください。アクセスするオブジェクトのプロパティがコードが実行されるまでわからない次の例を考えてみましょう。これはevalで実行できます：</target>
        </trans-unit>
        <trans-unit id="1c5ba47c3fcd37fa683a7d002c8dca9167c2eb7a" translate="yes" xml:space="preserve">
          <source>You shouldn't be using &lt;code&gt;map&lt;/code&gt; if:</source>
          <target state="translated">次の場合は、 &lt;code&gt;map&lt;/code&gt; を使用しないでください。</target>
        </trans-unit>
        <trans-unit id="5cd6fa95efe1fee6c51e18710284f1fba945c4d4" translate="yes" xml:space="preserve">
          <source>You will need to rename your variable to avoid the leading number.</source>
          <target state="translated">先頭の数字を避けるために、変数の名前を変更する必要があります。</target>
        </trans-unit>
        <trans-unit id="4678dcb59f94d73b0a20f1f473b2113b7a9cae41" translate="yes" xml:space="preserve">
          <source>You will need to set the &quot;foo&quot; property to configurable, if you intend to redefine it later in the code.</source>
          <target state="translated">コードの中で後から再定義する場合は、&quot;foo &quot;プロパティを設定可能にする必要があります。</target>
        </trans-unit>
        <trans-unit id="f4cce5fc02be850507860bba1e2878e49169d85d" translate="yes" xml:space="preserve">
          <source>You will need to set the elements as configurable, if you intend to shorten the array.</source>
          <target state="translated">配列を短くしたい場合は、要素を設定可能に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="bfa90df40ebf5882c9672339cf5515ee31ed5d7c" translate="yes" xml:space="preserve">
          <source>You will need to use identifiers in function declarations:</source>
          <target state="translated">関数宣言では識別子を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="88823782271c88f08f0da2e756e32615ad25d88f" translate="yes" xml:space="preserve">
          <source>You'll need to rename these variables.</source>
          <target state="translated">これらの変数の名前を変更する必要があります。</target>
        </trans-unit>
        <trans-unit id="b7b9e38fe1ee40622456da02198f08ba29ea37ef" translate="yes" xml:space="preserve">
          <source>Your &lt;code&gt;( ... )&lt;/code&gt; expression needs to be preceded by a semicolon or it may be used to execute a function on the previous line.</source>
          <target state="translated">あなたの &lt;code&gt;( ... )&lt;/code&gt; 式は、セミコロンが先行する必要があるか、前の行の機能を実行するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="4f6c03948938de597aa9e99602e6aff53b391f91" translate="yes" xml:space="preserve">
          <source>Your &lt;strong&gt;reducer&lt;/strong&gt; function's returned value is assigned to the accumulator, whose value is remembered across each iteration throughout the array and ultimately becomes the final, single resulting value.</source>
          <target state="translated">あなたの&lt;strong&gt;減速&lt;/strong&gt;関数の戻り値は、その値がアレイ全体の各反復を横切って記憶され、最終的に最終的な、単一の結果として生じる値となるアキュムレータに割り当てられます。</target>
        </trans-unit>
        <trans-unit id="22fb106c094118611b3048144d45bd9fe29023ce" translate="yes" xml:space="preserve">
          <source>Your &lt;strong&gt;reducer&lt;/strong&gt; function's returned value is assigned to the accumulator, whose value is remembered across each iteration throughout the array, and ultimately becomes the final, single resulting value.</source>
          <target state="translated">あなたの&lt;strong&gt;減速&lt;/strong&gt;関数の戻り値は、その値がアレイ全体の各反復を横切って記憶され、そして最終的に最終的な、単一の結果として生じる値となるアキュムレータに割り当てられます。</target>
        </trans-unit>
        <trans-unit id="fe9e1a7227002ef7cb50f908c18cc7eb8027b8c1" translate="yes" xml:space="preserve">
          <source>Zero based index at which to copy the sequence to. If negative, &lt;code&gt;target&lt;/code&gt; will be counted from the end.</source>
          <target state="translated">シーケンスのコピー先のゼロから始まるインデックス。負の場合、 &lt;code&gt;target&lt;/code&gt; は最後からカウントされます。</target>
        </trans-unit>
        <trans-unit id="99021283237579f65a14c6c9680f260532e1124a" translate="yes" xml:space="preserve">
          <source>Zero based index at which to end copying elements from. &lt;code&gt;copyWithin&lt;/code&gt; copies up to but not including &lt;code&gt;end&lt;/code&gt;. If negative, &lt;code&gt;end&lt;/code&gt; will be counted from the end.</source>
          <target state="translated">要素のコピーを終了するゼロから始まるインデックス。 &lt;code&gt;copyWithin&lt;/code&gt; は、 &lt;code&gt;end&lt;/code&gt; までを含みますが、endは含みません。負の場合、 &lt;code&gt;end&lt;/code&gt; は終了からカウントされます。</target>
        </trans-unit>
        <trans-unit id="8fb9fa89f1e05a8c144f6cfdbafa6e198f77d02f" translate="yes" xml:space="preserve">
          <source>Zero based index at which to start copying elements from. If negative, &lt;code&gt;start&lt;/code&gt; will be counted from the end.</source>
          <target state="translated">要素のコピーを開始するゼロから始まるインデックス。負の場合、 &lt;code&gt;start&lt;/code&gt; は終了からカウントされます。</target>
        </trans-unit>
        <trans-unit id="df692dbe43cc0d47d23ef8dbb26ab82cf058a032" translate="yes" xml:space="preserve">
          <source>Zero multiplied by &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; is &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; をゼロ倍すると&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; になり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="bfd8b6b021aa67895f3efb7a6f6a3a13da717f9d" translate="yes" xml:space="preserve">
          <source>Zero multiplied by &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; is &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; を乗算したゼロは&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="4bc5f0a5d18af0082b8b2c47152f3d5bb00c5d3e" translate="yes" xml:space="preserve">
          <source>Zero or more names to be used by the function as formal argument names. Each must be a string that conforms to the rules for a valid JavaScript identifier or a list of such strings separated with a comma; for example &quot;&lt;code&gt;x&lt;/code&gt;&quot;, &quot;&lt;code&gt;theValue&lt;/code&gt;&quot;, or &quot;&lt;code&gt;a,b&lt;/code&gt;&quot;.</source>
          <target state="translated">関数が仮引数名として使用する0個以上の名前。それぞれは、有効なJavaScript識別子の規則に準拠する文字列、またはコンマで区切られたそのような文字列のリストである必要があります。たとえば、 &quot; &lt;code&gt;x&lt;/code&gt; &quot;、 &quot; &lt;code&gt;theValue&lt;/code&gt; &quot;、または &quot; &lt;code&gt;a,b&lt;/code&gt; &quot;。</target>
        </trans-unit>
        <trans-unit id="0e087a39305c3d3cd89823f9cafac2e0d7ee304c" translate="yes" xml:space="preserve">
          <source>Zero or more names to be used by the function as formal parameters. Each must be a proper JavaScript identifier.</source>
          <target state="translated">関数が正式なパラメータとして使用する0個以上の名前。それぞれ適切な JavaScript の識別子でなければなりません。</target>
        </trans-unit>
        <trans-unit id="8536ab931d32402634315187334dd48c231602f6" translate="yes" xml:space="preserve">
          <source>Zero or more numbers among which the lowest value will be selected and returned.</source>
          <target state="translated">0 個以上の数値のうち、最も低い値が選択されて返されます。</target>
        </trans-unit>
        <trans-unit id="a04e570234639850dad203c97f0d979896bacd84" translate="yes" xml:space="preserve">
          <source>Zero width joiner</source>
          <target state="translated">ゼロ幅ジョイナー</target>
        </trans-unit>
        <trans-unit id="719ab1fed068e86b607de276b022e4365c5842a3" translate="yes" xml:space="preserve">
          <source>Zero width non-joiner</source>
          <target state="translated">ゼロ幅ノンジョイナー</target>
        </trans-unit>
        <trans-unit id="01027a193761df63d914404164d9009a633a3474" translate="yes" xml:space="preserve">
          <source>Zero-based byte index at which to begin slicing.</source>
          <target state="translated">スライスを開始するゼロベースのバイトインデックス。</target>
        </trans-unit>
        <trans-unit id="06aef85847b7db93d2b9324db844f154f50fc5b7" translate="yes" xml:space="preserve">
          <source>Zero-based index &lt;em&gt;before&lt;/em&gt; which to end extraction. &lt;code&gt;slice&lt;/code&gt; extracts up to but not including &lt;code&gt;&lt;var&gt;end&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">抽出を終了する&lt;em&gt;前の&lt;/em&gt;ゼロベースのインデックス。 &lt;code&gt;slice&lt;/code&gt; &lt;code&gt;&lt;var&gt;end&lt;/var&gt;&lt;/code&gt; まで抽出しますが、endは含まれません。</target>
        </trans-unit>
        <trans-unit id="0167410897a3c8f994695799926a91808602e503" translate="yes" xml:space="preserve">
          <source>Zero-based index &lt;em&gt;before&lt;/em&gt; which to end extraction. &lt;code&gt;slice&lt;/code&gt; extracts up to but not including &lt;code&gt;&lt;var&gt;end&lt;/var&gt;&lt;/code&gt;. For example, &lt;code&gt;slice(1,4)&lt;/code&gt; extracts the second element through the fourth element (elements indexed 1, 2, and 3).</source>
          <target state="translated">抽出を終了する&lt;em&gt;前の&lt;/em&gt;ゼロベースのインデックス。 &lt;code&gt;slice&lt;/code&gt; &lt;code&gt;&lt;var&gt;end&lt;/var&gt;&lt;/code&gt; まで抽出しますが、endは含まれません。たとえば、 &lt;code&gt;slice(1,4)&lt;/code&gt; は、2番目の要素から4番目の要素（インデックスが1、2、および3の要素）までを抽出します。</target>
        </trans-unit>
        <trans-unit id="6998569c3f5e8a7357930dca11be5b95612acdc8" translate="yes" xml:space="preserve">
          <source>Zero-based index &lt;em&gt;before&lt;/em&gt; which to end extraction. &lt;code&gt;slice&lt;/code&gt; extracts up to but not including &lt;code&gt;end&lt;/code&gt;.</source>
          <target state="translated">抽出を終了する&lt;em&gt;前の&lt;/em&gt;ゼロベースのインデックス。 &lt;code&gt;slice&lt;/code&gt; &lt;code&gt;end&lt;/code&gt; までの抽出を含みます。</target>
        </trans-unit>
        <trans-unit id="6dd927581a87ea8eb3772d1cdf40c7665ff58247" translate="yes" xml:space="preserve">
          <source>Zero-based index at which to begin extraction.</source>
          <target state="translated">抽出を開始するゼロベースのインデックス。</target>
        </trans-unit>
        <trans-unit id="d670e684eb13b6907194224c14d6b1444deae216" translate="yes" xml:space="preserve">
          <source>Zero-based index at which to copy the sequence to. If negative, &lt;code&gt;target&lt;/code&gt; will be counted from the end.</source>
          <target state="translated">シーケンスのコピー先のゼロベースのインデックス。負の場合、 &lt;code&gt;target&lt;/code&gt; は最後からカウントされます。</target>
        </trans-unit>
        <trans-unit id="81c31073787c09c4564d231d90edcbf92a2e64fd" translate="yes" xml:space="preserve">
          <source>Zero-based index at which to end copying elements from. &lt;code&gt;copyWithin&lt;/code&gt; copies up to but not including &lt;code&gt;end&lt;/code&gt;. If negative, &lt;code&gt;end&lt;/code&gt; will be counted from the end.</source>
          <target state="translated">要素のコピーを終了するゼロベースのインデックス。 &lt;code&gt;copyWithin&lt;/code&gt; は、 &lt;code&gt;end&lt;/code&gt; までのコピーですが、endは含まれません。負の場合、 &lt;code&gt;end&lt;/code&gt; は終了からカウントされます。</target>
        </trans-unit>
        <trans-unit id="31231562df798d7ac5465c05df0616f834786081" translate="yes" xml:space="preserve">
          <source>Zero-based index at which to start copying elements from. If negative, &lt;code&gt;start&lt;/code&gt; will be counted from the end.</source>
          <target state="translated">要素のコピーを開始するゼロベースのインデックス。負の場合、 &lt;code&gt;start&lt;/code&gt; は終了からカウントされます。</target>
        </trans-unit>
        <trans-unit id="30e140b373e2f8f7174f762e480807d08de60ec7" translate="yes" xml:space="preserve">
          <source>Zero-based index at which to start extraction.</source>
          <target state="translated">抽出を開始するゼロベースのインデックス。</target>
        </trans-unit>
        <trans-unit id="484190f04e674861f1477336c43aac56a427eb76" translate="yes" xml:space="preserve">
          <source>Zero-fill right shift</source>
          <target state="translated">ゼロフィル右シフト</target>
        </trans-unit>
        <trans-unit id="731fc3d9721eb64f0e6364f129b81a5ea1c2fcc0" translate="yes" xml:space="preserve">
          <source>Zombie Compartments</source>
          <target state="translated">ゾンビコンパートメント</target>
        </trans-unit>
        <trans-unit id="1dca92a3ee93c3f3642a370be2aef0f7c3748413" translate="yes" xml:space="preserve">
          <source>[-\pi, \pi]</source>
          <target state="translated">[-\ pi、\ pi]</target>
        </trans-unit>
        <trans-unit id="6bc0eea0da040bf28d0a69e81680d3335eb7e3c9" translate="yes" xml:space="preserve">
          <source>[1]: bB</source>
          <target state="translated">[1]：bB</target>
        </trans-unit>
        <trans-unit id="67118d6dc6916244016b8630391a58db4a55ef65" translate="yes" xml:space="preserve">
          <source>[2]: d</source>
          <target state="translated">[2]：d</target>
        </trans-unit>
        <trans-unit id="9b7ae0b26345772bd8388bec178b2543b89edf07" translate="yes" xml:space="preserve">
          <source>[Blog Post] Deprecation of __defineGetter__ and __defineSetter__</source>
          <target state="translated">[ブログ投稿] __defineGetter__と__defineSetter__の廃止</target>
        </trans-unit>
        <trans-unit id="c31acd7fdc3fbb0491980df74b9726fb5cf6e61c" translate="yes" xml:space="preserve">
          <source>[[Configurable]]</source>
          <target state="translated">[[Configurable]]</target>
        </trans-unit>
        <trans-unit id="bf72dd4244e733375fc696e157d8c40d742f5963" translate="yes" xml:space="preserve">
          <source>[[key]]</source>
          <target state="translated">[[key]]</target>
        </trans-unit>
        <trans-unit id="18e0232e4569307b7e131f2c26321107b848fcfe" translate="yes" xml:space="preserve">
          <source>[[symbol]]</source>
          <target state="translated">[[symbol]]</target>
        </trans-unit>
        <trans-unit id="794a729d2e4ffbb094fec03ae9b3acd219371385" translate="yes" xml:space="preserve">
          <source>\f</source>
          <target state="translated">\f</target>
        </trans-unit>
        <trans-unit id="4a355996e39545eb14916fe3ba063e40ae37aa34" translate="yes" xml:space="preserve">
          <source>\forall x &amp;gt; -1, \mathtt{\operatorname{Math.log1p}(x)} = \ln(1 + x)</source>
          <target state="translated">\ forall x&amp;gt; -1、\ mathtt {\ operatorname {Math.log1p}（x）} = \ ln（1 + x）</target>
        </trans-unit>
        <trans-unit id="1ad56e6557924a158ef6917e42c4a80ebe6a31a0" translate="yes" xml:space="preserve">
          <source>\forall x &amp;gt; 0, \mathtt{\operatorname{Math.log10}(x)} = \log_10(x) = \text{the unique} \; y \; \text{such that} \; 10^y = x</source>
          <target state="translated">\ forall x&amp;gt; 0、\ mathtt {\ operatorname {Math.log10}（x）} = \ log_10（x）= \ text {the unique} \; y \; \ text {そのような} \; 10 ^ y = x</target>
        </trans-unit>
        <trans-unit id="7943af984bdfb309efd9e242943339b3089f4ed9" translate="yes" xml:space="preserve">
          <source>\forall x &amp;gt; 0, \mathtt{\operatorname{Math.log2}(x)} = \log_2(x) = \text{the unique} \; y \; \text{such that} \; 2^y = x</source>
          <target state="translated">\ forall x&amp;gt; 0、\ mathtt {\ operatorname {Math.log2}（x）} = \ log_2（x）= \ text {the unique} \; y \; \ text {そのような} \; 2 ^ y = x</target>
        </trans-unit>
        <trans-unit id="b7e6e148b6dc898e9bfb57e4e90188349fe377ba" translate="yes" xml:space="preserve">
          <source>\forall x &amp;gt; 0, \mathtt{\operatorname{Math.log}(x)} = \ln(x) = \text{the unique} \; y \; \text{such that} \; e^y = x</source>
          <target state="translated">\ forall x&amp;gt; 0、\ mathtt {\ operatorname {Math.log}（x）} = \ ln（x）= \ text {the unique} \; y \; \ text {そのような} \; e ^ y = x</target>
        </trans-unit>
        <trans-unit id="58d3e7a00d7cd044cc5eefbb4b4a2b40a4731c30" translate="yes" xml:space="preserve">
          <source>\forall x \geq 0, \mathtt{Math.sqrt(x)} = \sqrt{x} = \text{the unique} \; y \geq 0 \; \text{such that} \; y^2 = x</source>
          <target state="translated">\ forall x \ geq 0、\ mathtt {Math.sqrt（x）} = \ sqrt {x} = \ text {the unique} \; y \ geq 0 \; \ text {そのような} \; y ^ 2 = x</target>
        </trans-unit>
        <trans-unit id="541716ae81367f1047a40714616503836a9a2bbb" translate="yes" xml:space="preserve">
          <source>\forall x \geq 1, \mathtt{\operatorname{Math.acosh}(x)} = \operatorname{arcosh}(x) = \text{ the unique } \; y \geq 0 \; \text{such that} \; \cosh(y) = x</source>
          <target state="translated">\ forall x \ geq 1、\ mathtt {\ operatorname {Math.acosh}（x）} = \ operatorname {arcosh}（x）= \ text {the unique} \; y \ geq 0 \; \ text {そのような} \; \ cosh（y）= x</target>
        </trans-unit>
        <trans-unit id="13f1f8bdcb6cae8466c42e38db38012de257d76d" translate="yes" xml:space="preserve">
          <source>\forall x \in [{-1};1],\;\mathtt{\operatorname{Math.acos}(x)} = \arccos(x) = \text{ the unique } \; y \in [0; \pi] \, \text{such that} \; \cos(y) = x</source>
          <target state="translated">\ forall x \ in [{-1}; 1]、\; \ mathtt {\ operatorname {Math.acos}（x）} = \ arccos（x）= \ text {一意の} \; y \ in [0; \ pi] \、\ text {そのような} \; \ cos（y）= x</target>
        </trans-unit>
        <trans-unit id="f789409660e5da4b80bd55e218bc6f94822d3de6" translate="yes" xml:space="preserve">
          <source>\forall x \in [{-1};1],\;\mathtt{\operatorname{Math.asin}(x)} = \arcsin(x) = \text{ the unique } \; y \in \left[-\frac{\pi}{2}; \frac{\pi}{2}\right] \, \text{such that} \; \sin(y) = x</source>
          <target state="translated">\ forall x \ in [{-1}; 1]、\; \ mathtt {\ operatorname {Math.asin}（x）} = \ arcsin（x）= \ text {一意の} \; y \ in \ left [-\ frac {\ pi} {2}; \ frac {\ pi} {2} \ right] \、\ text {such that} \; \ sin（y）= x</target>
        </trans-unit>
        <trans-unit id="3267e90b8d919fa0e5af09b6b8703fac47bfa9c7" translate="yes" xml:space="preserve">
          <source>\forall x \in \left( -1, 1 \right), \mathtt{\operatorname{Math.atanh}(x)} = \operatorname{arctanh}(x) = \text{ the unique } \; y \; \text{such that} \; \tanh(y) = x</source>
          <target state="translated">\ forall x \ in \ left（-1、1 \ right）、\ mathtt {\ operatorname {Math.atanh}（x）} = \ operatorname {arctanh}（x）= \ text {一意の} \; y \; \ text {そのような} \; \ tanh（y）= x</target>
        </trans-unit>
        <trans-unit id="7813100388622a69c767d297b453832a9df166fb" translate="yes" xml:space="preserve">
          <source>\frac{\pi}{2}</source>
          <target state="translated">\frac{\pi}{2}</target>
        </trans-unit>
        <trans-unit id="17541a47c936cf884548598e8752a145c28dce90" translate="yes" xml:space="preserve">
          <source>\left|x\right| &amp;lt; 1</source>
          <target state="translated">\ left | x \ right | &amp;lt;1</target>
        </trans-unit>
        <trans-unit id="ccfaf278d87a5e0a83fda1525fd05b3d98dbf104" translate="yes" xml:space="preserve">
          <source>\log_x y</source>
          <target state="translated">\ log_x y</target>
        </trans-unit>
        <trans-unit id="6a4c10a9a1173acaf895ef7903d8786939a39c93" translate="yes" xml:space="preserve">
          <source>\mathtt{Math.cbrt(x)} = \sqrt[3]{x} = \text{the unique} \; y \; \text{such that} \; y^3 = x</source>
          <target state="translated">\ mathtt {Math.cbrt（x）} = \ sqrt [3] {x} = \ text {the unique} \; y \; \ text {そのような} \; y ^ 3 = x</target>
        </trans-unit>
        <trans-unit id="65200609721f41be52dde61ad0d0679b0b827375" translate="yes" xml:space="preserve">
          <source>\mathtt{\mi{Math.E}} = e \approx 2.718</source>
          <target state="translated">\ mathtt {\ mi {Math.E}} = e \約2.718</target>
        </trans-unit>
        <trans-unit id="428865482a061ddb4f1452d190ebf87cbc3d0323" translate="yes" xml:space="preserve">
          <source>\mathtt{\mi{Math.LN10}} = \ln(10) \approx 2.302</source>
          <target state="translated">\ mathtt {\ mi {Math.LN10}} = \ ln（10）\約2.302</target>
        </trans-unit>
        <trans-unit id="dfd6c67b8e58b0b3e739a0d247372cf70f727b62" translate="yes" xml:space="preserve">
          <source>\mathtt{\mi{Math.LN2}} = \ln(2) \approx 0.693</source>
          <target state="translated">\ mathtt {\ mi {Math.LN2}} = \ ln（2）\約0.693</target>
        </trans-unit>
        <trans-unit id="db0459fb7a578b217530e43df4f0c6b4729de049" translate="yes" xml:space="preserve">
          <source>\mathtt{\mi{Math.LOG10E}} = \log_10(e) \approx 0.434</source>
          <target state="translated">\ mathtt {\ mi {Math.LOG10E}} = \ log_10（e）\約0.434</target>
        </trans-unit>
        <trans-unit id="7247542bd5ab40610828210be6f73598d1582808" translate="yes" xml:space="preserve">
          <source>\mathtt{\mi{Math.LOG2E}} = \log_2(e) \approx 1.442</source>
          <target state="translated">\ mathtt {\ mi {Math.LOG2E}} = \ log_2（e）\約1.442</target>
        </trans-unit>
        <trans-unit id="085ad7c0678af9149e3e9a25484a68c9084168ed" translate="yes" xml:space="preserve">
          <source>\mathtt{\mi{Math.PI}} = \pi \approx 3.14159</source>
          <target state="translated">\ mathtt {\ mi {Math.PI}} = \ pi \約3.14159</target>
        </trans-unit>
        <trans-unit id="4109c0a0ee9fae4dd39c884dfe7f0bb2209db0ca" translate="yes" xml:space="preserve">
          <source>\mathtt{\mi{Math.SQRT1_2}} = \sqrt{\frac{1}{2}} = \frac{1}{\sqrt{2}} \approx 0.707</source>
          <target state="translated">\ mathtt {\ mi {Math.SQRT1_2}} = \ sqrt {\ frac {1} {2}} = \ frac {1} {\ sqrt {2}} \約0.707</target>
        </trans-unit>
        <trans-unit id="6a9c08aac0d9e25b79985536fd0b06baca4adcca" translate="yes" xml:space="preserve">
          <source>\mathtt{\mi{Math.SQRT2}} = \sqrt{2} \approx 1.414</source>
          <target state="translated">\ mathtt {\ mi {Math.SQRT2}} = \ sqrt {2} \約1.414</target>
        </trans-unit>
        <trans-unit id="671e95ab5a7a00f7df2ac7a5d8b22991bc3542f2" translate="yes" xml:space="preserve">
          <source>\mathtt{\operatorname{Math.asinh}(x)} = \operatorname{arsinh}(x) = \text{ the unique } \; y \; \text{such that} \; \sinh(y) = x</source>
          <target state="translated">\ mathtt {\ operatorname {Math.asinh}（x）} = \ operatorname {arsinh}（x）= \ text {一意の} \; y \; \ text {そのような} \; \ sinh（y）= x</target>
        </trans-unit>
        <trans-unit id="052d76a84a10875bb7b2b56acbe4e1a5b3e64fe7" translate="yes" xml:space="preserve">
          <source>\mathtt{\operatorname{Math.atan}(x)} = \arctan(x) = \text{ the unique } \; y \in \left[-\frac{\pi}{2}; \frac{\pi}{2}\right] \, \text{such that} \; \tan(y) = x</source>
          <target state="translated">\ mathtt {\ operatorname {Math.atan}（x）} = \ arctan（x）= \ text {the unique} \; y \ in \ left [-\ frac {\ pi} {2}; \ frac {\ pi} {2} \ right] \、\ text {such that} \; \ tan（y）= x</target>
        </trans-unit>
        <trans-unit id="4cd6ad005bf8f0a8fcd2129b0d4d3bb2e2d1c049" translate="yes" xml:space="preserve">
          <source>\mathtt{\operatorname{Math.cosh(x)}} = \frac{e^x + e^{-x}}{2}</source>
          <target state="translated">\ mathtt {\ operatorname {Math.cosh（x）}} = \ frac {e ^ x + e ^ {-x}} {2}</target>
        </trans-unit>
        <trans-unit id="380594b71db4eff73c74696241ccd358995fde4d" translate="yes" xml:space="preserve">
          <source>\mathtt{\operatorname{Math.hypot}(v_1, v_2, \dots, v_n)} = \sqrt{\sum_{i=1}^n v_i^2} = \sqrt{v_1^2 + v_2^2 + \dots + v_n^2}</source>
          <target state="translated">\ mathtt {\ operatorname {Math.hypot}（v_1、v_2、\ dots、v_n）} = \ sqrt {\ sum_ {i = 1} ^ n v_i ^ 2} = \ sqrt {v_1 ^ 2 + v_2 ^ 2 + \ dots + v_n ^ 2}</target>
        </trans-unit>
        <trans-unit id="fc39700a5e77c4edc4023c5d2f76c89094dfcf89" translate="yes" xml:space="preserve">
          <source>\mathtt{\operatorname{Math.sinh(x)}} = \frac{e^x - e^{-x}}{2}</source>
          <target state="translated">\ mathtt {\ operatorname {Math.sinh（x）}} = \ frac {e ^ x-e ^ {-x}} {2}</target>
        </trans-unit>
        <trans-unit id="ef7e6794ca9c6a06b54b66f279237fb8daaaeea8" translate="yes" xml:space="preserve">
          <source>\n</source>
          <target state="translated">\n</target>
        </trans-unit>
        <trans-unit id="88065bfec9802e1a08b608019156f5ae15e94fd0" translate="yes" xml:space="preserve">
          <source>\operatorname {arcosh} (x) = \ln \left(x + \sqrt{x^{2} - 1} \right)</source>
          <target state="translated">\ operatorname {arcosh}（x）= \ ln \ left（x + \ sqrt {x ^ {2}-1} \ right）</target>
        </trans-unit>
        <trans-unit id="841c48cfa1d62844530356c8275f344d0f0ca458" translate="yes" xml:space="preserve">
          <source>\operatorname {arsinh} (x) = \ln \left(x + \sqrt{x^{2} + 1} \right)</source>
          <target state="translated">\ operatorname {arsinh}（x）= \ ln \ left（x + \ sqrt {x ^ {2} + 1} \ right）</target>
        </trans-unit>
        <trans-unit id="fa1b251db3378948f5edd0cec4e81572698999f1" translate="yes" xml:space="preserve">
          <source>\operatorname {artanh} (x) = \frac{1}{2}\ln \left( \frac{1 + x}{1 - x} \right)</source>
          <target state="translated">\ operatorname {artanh}（x）= \ frac {1} {2} \ ln \ left（\ frac {1 + x} {1-x} \ right）</target>
        </trans-unit>
        <trans-unit id="f12c84902108895980702c88db900ceea2d2ec01" translate="yes" xml:space="preserve">
          <source>\r</source>
          <target state="translated">\r</target>
        </trans-unit>
        <trans-unit id="607f1e81b7cc6e0785cccdb30c7939576319a9de" translate="yes" xml:space="preserve">
          <source>\sqrt[3]{x} = x^{1/3}</source>
          <target state="translated">\ sqrt [3] {x} = x ^ {1/3}</target>
        </trans-unit>
        <trans-unit id="8bf81043e29dfc96a6fe1f30f7116f552de6e7d7" translate="yes" xml:space="preserve">
          <source>\t</source>
          <target state="translated">\t</target>
        </trans-unit>
        <trans-unit id="4c057ee290e6a6395ad2e2db15386b4db73891bd" translate="yes" xml:space="preserve">
          <source>\tanh x = \frac{\sinh x}{\cosh x} = \frac {e^x - e^{-x}} {e^x + e^{-x}} = \frac{e^{2x} - 1}{e^{2x}+1}</source>
          <target state="translated">\ tanh x = \ frac {\ sinh x} {\ cosh x} = \ frac {e ^ x-e ^ {-x}} {e ^ x + e ^ {-x}} = \ frac {e ^ { 2x}-1} {e ^ {2x} +1}</target>
        </trans-unit>
        <trans-unit id="d5d0ebb2740b3e81b5cce512a169118a280bb8cb" translate="yes" xml:space="preserve">
          <source>\v</source>
          <target state="translated">\v</target>
        </trans-unit>
        <trans-unit id="5e6f80a34a9798cafc6a5db96cc57ba4c4db59c2" translate="yes" xml:space="preserve">
          <source>^</source>
          <target state="translated">^</target>
        </trans-unit>
        <trans-unit id="9d0127b37ec6844d7f0e1d411d61277c6c2cfedd" translate="yes" xml:space="preserve">
          <source>^ (Bitwise XOR)</source>
          <target state="translated">^（ビットごとのXOR）</target>
        </trans-unit>
        <trans-unit id="fc264e823132707b28a2e05d6f649139818963c9" translate="yes" xml:space="preserve">
          <source>^=</source>
          <target state="translated">^=</target>
        </trans-unit>
        <trans-unit id="7e15bb5c01e7dd56499e37c634cf791d3a519aee" translate="yes" xml:space="preserve">
          <source>`</source>
          <target state="translated">`</target>
        </trans-unit>
        <trans-unit id="86f7e437faa5a7fce15d1ddcb9eaeaea377667b8" translate="yes" xml:space="preserve">
          <source>a</source>
          <target state="translated">a</target>
        </trans-unit>
        <trans-unit id="80ca295afa62179494a2eeb542ae3a0f59d25da0" translate="yes" xml:space="preserve">
          <source>a AND b</source>
          <target state="translated">エーアンドビー</target>
        </trans-unit>
        <trans-unit id="f858b649a4c59f620bd15d96c4f7f888b9e3a933" translate="yes" xml:space="preserve">
          <source>a OR b</source>
          <target state="translated">エーオーエルビー</target>
        </trans-unit>
        <trans-unit id="4e53eb26014ab34b2844317f62855abeb9fcc4ec" translate="yes" xml:space="preserve">
          <source>a XOR b</source>
          <target state="translated">aXOR b</target>
        </trans-unit>
        <trans-unit id="0c68f5fbff7e66d00077c9bf3115d4b0314e3833" translate="yes" xml:space="preserve">
          <source>a demonstration implementation of &lt;code&gt;Object.entries&lt;/code&gt; in the &lt;a href=&quot;https://github.com/tc39/proposal-object-values-entries&quot;&gt;tc39/proposal-object-values-entries&lt;/a&gt; (if you don't need any support for IE);</source>
          <target state="translated">デモ実施 &lt;code&gt;Object.entries&lt;/code&gt; で&lt;a href=&quot;https://github.com/tc39/proposal-object-values-entries&quot;&gt;TC39 /提案型のオブジェクト値-エントリ&lt;/a&gt;（あなたがIEのためにあらゆるサポートを必要としない場合）。</target>
        </trans-unit>
        <trans-unit id="3dc2ea12faa8380561e966afb7899f0277213c99" translate="yes" xml:space="preserve">
          <source>a language code,</source>
          <target state="translated">言語コードです。</target>
        </trans-unit>
        <trans-unit id="b3cf43a8a8e737ebbdadadecbb656198fe254c84" translate="yes" xml:space="preserve">
          <source>a length,</source>
          <target state="translated">の長さです。</target>
        </trans-unit>
        <trans-unit id="ae632e21a83b8ef4203437e36a4230d96435627d" translate="yes" xml:space="preserve">
          <source>a polyfill in the &lt;a href=&quot;https://github.com/es-shims/Object.entries&quot;&gt;es-shims/Object.entries&lt;/a&gt; repositories;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/es-shims/Object.entries&quot;&gt;es-&lt;/a&gt; shims /Object.entriesリポジトリのポリフィル。</target>
        </trans-unit>
        <trans-unit id="7d1dd83e391008394510425e1a12f74ff6dd3f92" translate="yes" xml:space="preserve">
          <source>adjacent</source>
          <target state="translated">adjacent</target>
        </trans-unit>
        <trans-unit id="6ac8ff0d8a1e578eed1526d6fd5ecb810721cec6" translate="yes" xml:space="preserve">
          <source>adlm</source>
          <target state="translated">adlm</target>
        </trans-unit>
        <trans-unit id="405906c9d5be6ae5393ca65fb0e7c38e0d585ecb" translate="yes" xml:space="preserve">
          <source>after</source>
          <target state="translated">after</target>
        </trans-unit>
        <trans-unit id="08f72007b0037818a9d660a11e7aaa3ae3ab14bb" translate="yes" xml:space="preserve">
          <source>ahom</source>
          <target state="translated">ahom</target>
        </trans-unit>
        <trans-unit id="4284d60fae6a0eb5632337dc7e4d316bc1962467" translate="yes" xml:space="preserve">
          <source>an &lt;a href=&quot;../global_objects/arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; object</source>
          <target state="translated">&lt;a href=&quot;../global_objects/arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; の&lt;/a&gt;オブジェクト</target>
        </trans-unit>
        <trans-unit id="93d306fc8497f338beb0b107fc3968eb9488403d" translate="yes" xml:space="preserve">
          <source>an &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; excluding &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Primitive#Primitive_wrapper_objects_in_JavaScript&quot;&gt;primitive wrapper objects&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;を除く&lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Primitive#Primitive_wrapper_objects_in_JavaScript&quot;&gt;プリミティブラッパーオブジェクト&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="22ef42a254ed1ac06fdaab9ebf05d82ec65afb1b" translate="yes" xml:space="preserve">
          <source>an empty string if &lt;code&gt;JSON.stringify()&lt;/code&gt; was directly called on this object</source>
          <target state="translated">このオブジェクトで &lt;code&gt;JSON.stringify()&lt;/code&gt; が直接呼び出された場合は空の文字列</target>
        </trans-unit>
        <trans-unit id="fd39e0bdc9849be9016819f5422a21df2780757d" translate="yes" xml:space="preserve">
          <source>an octal Latin-1 character.</source>
          <target state="translated">8進数のラテン1文字。</target>
        </trans-unit>
        <trans-unit id="65a359479d956458800eb0af811bd7abc437af2f" translate="yes" xml:space="preserve">
          <source>an operand or argument passed to a function is incompatible with the type expected by that operator or function; or</source>
          <target state="translated">関数に渡されたオペランドや引数が、その演算子や関数が期待する型とは互換性がありません。</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="3ab2a18326439db1c12cc082e0d9e95a209dd241" translate="yes" xml:space="preserve">
          <source>and U+000A &amp;lt;LF&amp;gt;.</source>
          <target state="translated">およびU + 000A &amp;lt;LF&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="4f630df2296cacc487a8c8be24661795d1ebe762" translate="yes" xml:space="preserve">
          <source>and is part of ECMAScript 2015 (its purpose is modularization of globals). Please see &lt;a href=&quot;../parseint&quot;&gt;&lt;code&gt;parseInt()&lt;/code&gt;&lt;/a&gt; for more detail and examples.</source>
          <target state="translated">ECMAScript 2015の一部です（その目的はグローバルのモジュール化です）。詳細と例については、&lt;a href=&quot;../parseint&quot;&gt; &lt;code&gt;parseInt()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="2bf9c593d4e6048e1cf0e0285bd36480848a1cb3" translate="yes" xml:space="preserve">
          <source>and same for big integers</source>
          <target state="translated">大整数も同じ</target>
        </trans-unit>
        <trans-unit id="ecc4ae4ce10861d045216b662b62d6ec139200af" translate="yes" xml:space="preserve">
          <source>and send us a pull request.</source>
          <target state="translated">とプルリクエストを送ってください。</target>
        </trans-unit>
        <trans-unit id="c5d81b3ce5c3750364f79febc5200b16db9b321b" translate="yes" xml:space="preserve">
          <source>and so this can be emulated with the following function:</source>
          <target state="translated">となっているので、これは以下の関数でエミュレートできます。</target>
        </trans-unit>
        <trans-unit id="89b719078fc199afd8391393c61df1765e3390b0" translate="yes" xml:space="preserve">
          <source>another typed array,</source>
          <target state="translated">別の型付き配列を使用します。</target>
        </trans-unit>
        <trans-unit id="f9d71ef2ba7245fd0bd52ecd0cfbb7e0607471e1" translate="yes" xml:space="preserve">
          <source>arab</source>
          <target state="translated">arab</target>
        </trans-unit>
        <trans-unit id="dafbca52fca84d2ebef60a97f92153eae8665678" translate="yes" xml:space="preserve">
          <source>arabext</source>
          <target state="translated">arabext</target>
        </trans-unit>
        <trans-unit id="cae61c5b2aefca4a2c40ab59951f02e1020c2631" translate="yes" xml:space="preserve">
          <source>arccos</source>
          <target state="translated">arccos</target>
        </trans-unit>
        <trans-unit id="53c39d6de543305bc881b529f81b64848810e84c" translate="yes" xml:space="preserve">
          <source>arcosh</source>
          <target state="translated">arcosh</target>
        </trans-unit>
        <trans-unit id="89168789657bbdcd3219b2186fe9d083e26b44a3" translate="yes" xml:space="preserve">
          <source>arcsin</source>
          <target state="translated">arcsin</target>
        </trans-unit>
        <trans-unit id="91050c4ad35dcd08585768a226ebf7d00ca493f6" translate="yes" xml:space="preserve">
          <source>arctan</source>
          <target state="translated">arctan</target>
        </trans-unit>
        <trans-unit id="078c479c033d5a046cee04a57114153e647e7d83" translate="yes" xml:space="preserve">
          <source>arctanh</source>
          <target state="translated">arctanh</target>
        </trans-unit>
        <trans-unit id="536f158f6dfd529865dcb865a97bb16804e34d70" translate="yes" xml:space="preserve">
          <source>arguments</source>
          <target state="translated">arguments</target>
        </trans-unit>
        <trans-unit id="fdf39f1e5229913b5d9b76b59b087679558fb9f7" translate="yes" xml:space="preserve">
          <source>arguments.@@iterator</source>
          <target state="translated">arguments.@@iterator</target>
        </trans-unit>
        <trans-unit id="07573a1feceae5a57c09a030a44d9c90013abb39" translate="yes" xml:space="preserve">
          <source>arguments.callee</source>
          <target state="translated">arguments.callee</target>
        </trans-unit>
        <trans-unit id="1fbce324faead6465c9f9ea2ed620d35ddaddc2a" translate="yes" xml:space="preserve">
          <source>arguments.caller</source>
          <target state="translated">arguments.caller</target>
        </trans-unit>
        <trans-unit id="f8fe8e6cebe033bd130bda23eb057ad9da5b47b9" translate="yes" xml:space="preserve">
          <source>arguments.length</source>
          <target state="translated">arguments.length</target>
        </trans-unit>
        <trans-unit id="73b903547f441f30626701d28a05a31d3e499a1a" translate="yes" xml:space="preserve">
          <source>argumentsList</source>
          <target state="translated">argumentsList</target>
        </trans-unit>
        <trans-unit id="1ed6ee2ce3e44078b897c36f43a9421447100e35" translate="yes" xml:space="preserve">
          <source>armn</source>
          <target state="translated">armn</target>
        </trans-unit>
        <trans-unit id="99d649932e8357c40e3bbc938fc69d1b47cc5b07" translate="yes" xml:space="preserve">
          <source>armnlow</source>
          <target state="translated">armnlow</target>
        </trans-unit>
        <trans-unit id="19edc1210777ba4d45049c29280d9cc5e1064c25" translate="yes" xml:space="preserve">
          <source>array</source>
          <target state="translated">array</target>
        </trans-unit>
        <trans-unit id="d40292530159cf43117bc1bf0dda82ded8d89fb9" translate="yes" xml:space="preserve">
          <source>array-like objects (objects with a &lt;code&gt;length&lt;/code&gt; property and indexed elements) or</source>
          <target state="translated">配列のようなオブジェクト（ &lt;code&gt;length&lt;/code&gt; プロパティとインデックス付き要素を持つオブジェクト）または</target>
        </trans-unit>
        <trans-unit id="5e0da99c5879b4e6bccbf5e04a1312b30930602e" translate="yes" xml:space="preserve">
          <source>array-like objects (objects with a &lt;code&gt;length&lt;/code&gt; property and indexed elements); or</source>
          <target state="translated">配列のようなオブジェクト（ &lt;code&gt;length&lt;/code&gt; プロパティとインデックス付き要素を持つオブジェクト）; または</target>
        </trans-unit>
        <trans-unit id="9fed4a24127abf8cac4f47a1e0be851fd6769667" translate="yes" xml:space="preserve">
          <source>array-like objects,</source>
          <target state="translated">配列のようなオブジェクト。</target>
        </trans-unit>
        <trans-unit id="faa7e9f372da5477bc9b9a669d74e8427fd5842c" translate="yes" xml:space="preserve">
          <source>array.@@iterator</source>
          <target state="translated">array.@@iterator</target>
        </trans-unit>
        <trans-unit id="a87bad4cdde923a8b54a97983a461f292b4c4cf0" translate="yes" xml:space="preserve">
          <source>array.@@unscopables</source>
          <target state="translated">array.@@unscopables</target>
        </trans-unit>
        <trans-unit id="5e7a7b3fbb42c26682dc53c6c7464dde4f51fa0b" translate="yes" xml:space="preserve">
          <source>array.concat</source>
          <target state="translated">array.concat</target>
        </trans-unit>
        <trans-unit id="f56db07b29f2c59cf64c826315eb7ac55ac83008" translate="yes" xml:space="preserve">
          <source>array.copyWithin</source>
          <target state="translated">array.copyWithin</target>
        </trans-unit>
        <trans-unit id="6a619cb8b96135aad4dc476b3a126d174caff2d9" translate="yes" xml:space="preserve">
          <source>array.entries</source>
          <target state="translated">array.entries</target>
        </trans-unit>
        <trans-unit id="7b0842a33b0beefcb61f3a596e1bd23d38074aab" translate="yes" xml:space="preserve">
          <source>array.every</source>
          <target state="translated">array.every</target>
        </trans-unit>
        <trans-unit id="38374e5c30e1cbaa444731ab76410dfc62443802" translate="yes" xml:space="preserve">
          <source>array.fill</source>
          <target state="translated">array.fill</target>
        </trans-unit>
        <trans-unit id="fa5547b33dfec2a15afd331c40d20dd1246c7339" translate="yes" xml:space="preserve">
          <source>array.filter</source>
          <target state="translated">array.filter</target>
        </trans-unit>
        <trans-unit id="ab0b3e715f772a3ee97072696456df5ceb8ea7bc" translate="yes" xml:space="preserve">
          <source>array.find</source>
          <target state="translated">array.find</target>
        </trans-unit>
        <trans-unit id="edda204b27a2d639c7c19902b5b2b44be167973b" translate="yes" xml:space="preserve">
          <source>array.findIndex</source>
          <target state="translated">array.findIndex</target>
        </trans-unit>
        <trans-unit id="3e1e06069e02712cb6f47d32bb4af07a07e25931" translate="yes" xml:space="preserve">
          <source>array.flat</source>
          <target state="translated">array.flat</target>
        </trans-unit>
        <trans-unit id="37e05d3107fb2d36e66bcbb97d54d35c8ac3bbc8" translate="yes" xml:space="preserve">
          <source>array.flatMap</source>
          <target state="translated">array.flatMap</target>
        </trans-unit>
        <trans-unit id="798bfd06493540ef623294a2ecd4ebf8e7918716" translate="yes" xml:space="preserve">
          <source>array.forEach</source>
          <target state="translated">array.forEach</target>
        </trans-unit>
        <trans-unit id="989352caf67ac5d682f7538c7d62345225d4ab76" translate="yes" xml:space="preserve">
          <source>array.includes</source>
          <target state="translated">array.includes</target>
        </trans-unit>
        <trans-unit id="c3b94991b9f03da69048cba5c7af7c8125a32c0b" translate="yes" xml:space="preserve">
          <source>array.indexOf</source>
          <target state="translated">array.indexOf</target>
        </trans-unit>
        <trans-unit id="aaa11b212e80928567de6540a3076bb0af3752fb" translate="yes" xml:space="preserve">
          <source>array.join</source>
          <target state="translated">array.join</target>
        </trans-unit>
        <trans-unit id="b19e410bc294ae774e4d8eca51fd0ed083424b6b" translate="yes" xml:space="preserve">
          <source>array.keys</source>
          <target state="translated">array.keys</target>
        </trans-unit>
        <trans-unit id="f804bad4ae26c1c0f1317516b48eb6fc7744f7d7" translate="yes" xml:space="preserve">
          <source>array.lastIndexOf</source>
          <target state="translated">array.lastIndexOf</target>
        </trans-unit>
        <trans-unit id="60018c80e3c3144028a0735e69e28bbd14949791" translate="yes" xml:space="preserve">
          <source>array.length</source>
          <target state="translated">array.length</target>
        </trans-unit>
        <trans-unit id="4011142bf1a7c30e804b6c1e9a7d424e64a07132" translate="yes" xml:space="preserve">
          <source>array.map</source>
          <target state="translated">array.map</target>
        </trans-unit>
        <trans-unit id="992dbf9bb298103aa1076b103cd364b084536527" translate="yes" xml:space="preserve">
          <source>array.pop</source>
          <target state="translated">array.pop</target>
        </trans-unit>
        <trans-unit id="119abac9c76c1ecc3ef732a8a5a48153e14f12fd" translate="yes" xml:space="preserve">
          <source>array.push</source>
          <target state="translated">array.push</target>
        </trans-unit>
        <trans-unit id="94ce1b54142094cd6ea187306d4a205c2cbe780c" translate="yes" xml:space="preserve">
          <source>array.reduce</source>
          <target state="translated">array.reduce</target>
        </trans-unit>
        <trans-unit id="78aaa82b1d54e67b54fb844e8d4390d558238cbe" translate="yes" xml:space="preserve">
          <source>array.reduceRight</source>
          <target state="translated">array.reduceRight</target>
        </trans-unit>
        <trans-unit id="69a6c0dbf6b5dcde7a0727109c95b7355984c7f0" translate="yes" xml:space="preserve">
          <source>array.reverse</source>
          <target state="translated">array.reverse</target>
        </trans-unit>
        <trans-unit id="aaa2fdad154d62f0da281e7dbf4e66e2c70ce08e" translate="yes" xml:space="preserve">
          <source>array.shift</source>
          <target state="translated">array.shift</target>
        </trans-unit>
        <trans-unit id="5e1b3b815582ad8a52f552cc2824175aa9688ed1" translate="yes" xml:space="preserve">
          <source>array.slice</source>
          <target state="translated">array.slice</target>
        </trans-unit>
        <trans-unit id="8132cf49b1ebf43ea9e3ef5cf2798e0cd40f0ddc" translate="yes" xml:space="preserve">
          <source>array.some</source>
          <target state="translated">array.some</target>
        </trans-unit>
        <trans-unit id="628344bead9c82d49f5f01b49bcc92955bc870c4" translate="yes" xml:space="preserve">
          <source>array.sort</source>
          <target state="translated">array.sort</target>
        </trans-unit>
        <trans-unit id="fd1a1ad1d7f854b5d62a8869789ee2ed961e1187" translate="yes" xml:space="preserve">
          <source>array.splice</source>
          <target state="translated">array.splice</target>
        </trans-unit>
        <trans-unit id="0b2319f5355b8a57989b5a7182b1b5fdd8351b3a" translate="yes" xml:space="preserve">
          <source>array.toLocaleString</source>
          <target state="translated">array.toLocaleString</target>
        </trans-unit>
        <trans-unit id="da581a8deb73ec31f0ef9595c975e0958bf3adb3" translate="yes" xml:space="preserve">
          <source>array.toString</source>
          <target state="translated">array.toString</target>
        </trans-unit>
        <trans-unit id="7b5c190fc763436767220d4ea087c72388491d4a" translate="yes" xml:space="preserve">
          <source>array.unshift</source>
          <target state="translated">array.unshift</target>
        </trans-unit>
        <trans-unit id="f5d27fe02d181e2d165ef58488440f16544a7f25" translate="yes" xml:space="preserve">
          <source>array.values</source>
          <target state="translated">array.values</target>
        </trans-unit>
        <trans-unit id="b27039185bde5b26ddf103ce97d2a848ffa92f51" translate="yes" xml:space="preserve">
          <source>arrayBuffer.byteLength</source>
          <target state="translated">arrayBuffer.byteLength</target>
        </trans-unit>
        <trans-unit id="eaf3f1a2b47b227b10259d2bcc560af6296fd38c" translate="yes" xml:space="preserve">
          <source>arrayBuffer.slice</source>
          <target state="translated">arrayBuffer.slice</target>
        </trans-unit>
        <trans-unit id="fbdedff2ba5b4288c637090b8983d49f4e67b645" translate="yes" xml:space="preserve">
          <source>arrayBuffer.transfer</source>
          <target state="translated">arrayBuffer.transfer</target>
        </trans-unit>
        <trans-unit id="19dac970491c8339a06b85f922b9385fcf065435" translate="yes" xml:space="preserve">
          <source>arsinh</source>
          <target state="translated">arsinh</target>
        </trans-unit>
        <trans-unit id="2ef067e3e889445e160a9e72240a758d3ced2474" translate="yes" xml:space="preserve">
          <source>artanh</source>
          <target state="translated">artanh</target>
        </trans-unit>
        <trans-unit id="8fc0baacbe4fd74ef020ac4213268568189b10ab" translate="yes" xml:space="preserve">
          <source>as the first line of your function</source>
          <target state="translated">を関数の最初の行として</target>
        </trans-unit>
        <trans-unit id="36a309fee964158bd838e34c63c3e2127e7056ba" translate="yes" xml:space="preserve">
          <source>async function</source>
          <target state="translated">非同期関数</target>
        </trans-unit>
        <trans-unit id="e6bebdb8b8691ed2bffb903220099cffbc914f35" translate="yes" xml:space="preserve">
          <source>async function expression</source>
          <target state="translated">非同期関数式</target>
        </trans-unit>
        <trans-unit id="8e60ed83daa9f1a7a7ce3c49bf7cc7f943fcff93" translate="yes" xml:space="preserve">
          <source>async function function</source>
          <target state="translated">非同期関数関数</target>
        </trans-unit>
        <trans-unit id="03b9fb027443c8b4634a6ec64c15e01a1cb51460" translate="yes" xml:space="preserve">
          <source>async iterators</source>
          <target state="translated">非同期イテレータ</target>
        </trans-unit>
        <trans-unit id="30118aa1aa8a06fa5365743b3a5db69fc62b9760" translate="yes" xml:space="preserve">
          <source>await</source>
          <target state="translated">await</target>
        </trans-unit>
        <trans-unit id="18adac820686b4fe3eb4948e93337026727485e5" translate="yes" xml:space="preserve">
          <source>await and parallelism</source>
          <target state="translated">待機と並進</target>
        </trans-unit>
        <trans-unit id="e9d71f5ee7c92d6dc9e92ffdad17b8bd49418f98" translate="yes" xml:space="preserve">
          <source>b</source>
          <target state="translated">b</target>
        </trans-unit>
        <trans-unit id="3853072116a861ff4c871d3e96a9cac7da78b7d2" translate="yes" xml:space="preserve">
          <source>backslash</source>
          <target state="translated">backslash</target>
        </trans-unit>
        <trans-unit id="4930eb3f60df3a6a61e8d44178feb2b8f820a153" translate="yes" xml:space="preserve">
          <source>backspace</source>
          <target state="translated">backspace</target>
        </trans-unit>
        <trans-unit id="8a826f597b6d6fae2e9a0c118284a25761fdb3de" translate="yes" xml:space="preserve">
          <source>bali</source>
          <target state="translated">bali</target>
        </trans-unit>
        <trans-unit id="4aa8f17e96247407cd8b8eb3d6b35d55f2538b73" translate="yes" xml:space="preserve">
          <source>becomes part of an expression</source>
          <target state="translated">となる</target>
        </trans-unit>
        <trans-unit id="51de2b835bd35a67eb32dbcd3d77d4b96e5aa39d" translate="yes" xml:space="preserve">
          <source>before</source>
          <target state="translated">before</target>
        </trans-unit>
        <trans-unit id="7365c563c859e55a5697fffb20955a2966993294" translate="yes" xml:space="preserve">
          <source>begin Optional</source>
          <target state="translated">開始 オプション</target>
        </trans-unit>
        <trans-unit id="8bd85d4cedcb15ab90c2f7e7da65adf4fdc067ee" translate="yes" xml:space="preserve">
          <source>beng</source>
          <target state="translated">beng</target>
        </trans-unit>
        <trans-unit id="726eab547f2285d4c6cf60a8f423fd272ba90f29" translate="yes" xml:space="preserve">
          <source>bhks</source>
          <target state="translated">bhks</target>
        </trans-unit>
        <trans-unit id="0034795862183cb9ad5b2eb0edb0406622371317" translate="yes" xml:space="preserve">
          <source>big5han</source>
          <target state="translated">big5han</target>
        </trans-unit>
        <trans-unit id="9fc03496c0a98462567e2b7727b3e0f03ba09f8c" translate="yes" xml:space="preserve">
          <source>bigInt.toLocaleString</source>
          <target state="translated">bigInt.toLocaleString</target>
        </trans-unit>
        <trans-unit id="e652ddaeae26771ceba93614562da38b86c4ba18" translate="yes" xml:space="preserve">
          <source>bigInt.toString</source>
          <target state="translated">bigInt.toString</target>
        </trans-unit>
        <trans-unit id="6fe1f65ab3023f7cdd27bf4c84714e98aaef08ec" translate="yes" xml:space="preserve">
          <source>bigInt.valueOf</source>
          <target state="translated">bigInt.valueOf</target>
        </trans-unit>
        <trans-unit id="0214b4b355d11ca8f2ce45a968c264651bdfbf83" translate="yes" xml:space="preserve">
          <source>block</source>
          <target state="translated">block</target>
        </trans-unit>
        <trans-unit id="35893a19696416dab217c7eb188f71f7887b4063" translate="yes" xml:space="preserve">
          <source>boolean.toString</source>
          <target state="translated">boolean.toString</target>
        </trans-unit>
        <trans-unit id="3b424b0bc99c45c8df2afd0ed4089ca8bb1bfdd7" translate="yes" xml:space="preserve">
          <source>boolean.valueOf</source>
          <target state="translated">boolean.valueOf</target>
        </trans-unit>
        <trans-unit id="62694ed6d3115822562649c72a722732c906fac3" translate="yes" xml:space="preserve">
          <source>both &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">両方の&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c890e5e646311ee1ac02e7c03f0dcb854728b150" translate="yes" xml:space="preserve">
          <source>both &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">どちらも&lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b8abc73a051df5cc7ed6401213b125f0d23ed85c" translate="yes" xml:space="preserve">
          <source>both &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">どちらも&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="01a758a4361431dfcc7897bf8ea632344a48ccf8" translate="yes" xml:space="preserve">
          <source>both &lt;code&gt;+0&lt;/code&gt;</source>
          <target state="translated">両方 &lt;code&gt;+0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a20e9684c0a7a0f54d5284972b786447972b7f3e" translate="yes" xml:space="preserve">
          <source>both &lt;code&gt;-0&lt;/code&gt;</source>
          <target state="translated">両方 &lt;code&gt;-0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b56af8238496f3de4c2d2e23a59e7ab2f64b2776" translate="yes" xml:space="preserve">
          <source>both &lt;code&gt;true&lt;/code&gt; or both &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">どちらも &lt;code&gt;true&lt;/code&gt; または両方が &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="043f26ccc3d2d8ab7fe38d090e6643ad9b05c73f" translate="yes" xml:space="preserve">
          <source>both numbers and</source>
          <target state="translated">すうじとも</target>
        </trans-unit>
        <trans-unit id="4f8e5f3e59a5b55da337c64f308d702adb488230" translate="yes" xml:space="preserve">
          <source>both strings of the same length with the same characters in the same order</source>
          <target state="translated">同じ長さの同じ文字列を同じ順番で並べたもの</target>
        </trans-unit>
        <trans-unit id="4fb198a8e031a939ddd91e3b42bfb5dcf0025cc6" translate="yes" xml:space="preserve">
          <source>both the same object</source>
          <target state="translated">両者とも</target>
        </trans-unit>
        <trans-unit id="5a8d1926820e80c88e6561c656b7eec3c7e7894d" translate="yes" xml:space="preserve">
          <source>both the same object (means both object have same reference)</source>
          <target state="translated">両者共</target>
        </trans-unit>
        <trans-unit id="902ac56d14e382cdb3f393ade19939037cd781fb" translate="yes" xml:space="preserve">
          <source>brah</source>
          <target state="translated">brah</target>
        </trans-unit>
        <trans-unit id="4f9cac8dbc4c67a388b8379dcc126c90c7c5e72a" translate="yes" xml:space="preserve">
          <source>break</source>
          <target state="translated">break</target>
        </trans-unit>
        <trans-unit id="8516ecf094f2ee6a8ee900f65be093e6dba1eb64" translate="yes" xml:space="preserve">
          <source>break in labeled blocks</source>
          <target state="translated">ラベルブロックの区切り</target>
        </trans-unit>
        <trans-unit id="de3051949970b206aa73662e3969e48674de8712" translate="yes" xml:space="preserve">
          <source>break in labeled blocks that throw</source>
          <target state="translated">投げられるラベル付きブロックでのブレーク</target>
        </trans-unit>
        <trans-unit id="0bd5b192242bf00e4baf21dac934082847b5de3c" translate="yes" xml:space="preserve">
          <source>break in switch statements</source>
          <target state="translated">スイッチ文のブレーク</target>
        </trans-unit>
        <trans-unit id="c3efdee86331095488b0f909bcd11f271c7030b8" translate="yes" xml:space="preserve">
          <source>break in while loop</source>
          <target state="translated">ブレークインしながらループ</target>
        </trans-unit>
        <trans-unit id="bb09d8432ab4f9a70831936b7aa6cf6567be13ec" translate="yes" xml:space="preserve">
          <source>break within functions</source>
          <target state="translated">機能内破れ</target>
        </trans-unit>
        <trans-unit id="847e8c5812c216d6415d80df65659c0516fa85a2" translate="yes" xml:space="preserve">
          <source>buffer, byteOffset, length</source>
          <target state="translated">バッファ、byteOffset、長さ</target>
        </trans-unit>
        <trans-unit id="9984f5992b5ee6279c25f69c44557960d29e4131" translate="yes" xml:space="preserve">
          <source>bug 647423</source>
          <target state="translated">不具合647423</target>
        </trans-unit>
        <trans-unit id="b94da3599274cc93c9ee4f4d4dce4fea875b2503" translate="yes" xml:space="preserve">
          <source>but:</source>
          <target state="translated">but:</target>
        </trans-unit>
        <trans-unit id="1e8ecccfed3bdec23aeeb15da97d5dd3cba5570d" translate="yes" xml:space="preserve">
          <source>byteOffset</source>
          <target state="translated">byteOffset</target>
        </trans-unit>
        <trans-unit id="84a516841ba77a5b4648de2cd0dfcb30ea46dbb4" translate="yes" xml:space="preserve">
          <source>c</source>
          <target state="translated">c</target>
        </trans-unit>
        <trans-unit id="fa18f64670628ad11e5c499f69366aa0bdcde439" translate="yes" xml:space="preserve">
          <source>cakm</source>
          <target state="translated">cakm</target>
        </trans-unit>
        <trans-unit id="2e783051dac465e9a0ad8a9bd354be3a1fc9da18" translate="yes" xml:space="preserve">
          <source>call, apply and bind</source>
          <target state="translated">呼び出し・適用・結合</target>
        </trans-unit>
        <trans-unit id="2475450c675663c8601581f83364af42e3267595" translate="yes" xml:space="preserve">
          <source>can be exactly represented as an IEEE-754 double precision number, and</source>
          <target state="translated">は、正確にはIEEE-754の倍精度の数値として表すことができます。</target>
        </trans-unit>
        <trans-unit id="6e9f192b79a14968d26f70ab1aa8e21b65e3df64" translate="yes" xml:space="preserve">
          <source>carriage return</source>
          <target state="translated">キャリッジリターン</target>
        </trans-unit>
        <trans-unit id="c75dd1f941784e76531c1bce0ac38192c0a3bb10" translate="yes" xml:space="preserve">
          <source>cdbBdbsbz</source>
          <target state="translated">cdbBdbsbz</target>
        </trans-unit>
        <trans-unit id="b0a8ee5c5bad6ac0064dabfa431a41a73186ce4a" translate="yes" xml:space="preserve">
          <source>cham</source>
          <target state="translated">cham</target>
        </trans-unit>
        <trans-unit id="8d767bf5b72373d12f0efd4406677e9ed076f592" translate="yes" xml:space="preserve">
          <source>class</source>
          <target state="translated">class</target>
        </trans-unit>
        <trans-unit id="e9e268783f07030ce425e26b704995eb4fdadabf" translate="yes" xml:space="preserve">
          <source>class declaration</source>
          <target state="translated">クラス宣言</target>
        </trans-unit>
        <trans-unit id="268d2a6e3f4edaefea41339ad76d97116504d28a" translate="yes" xml:space="preserve">
          <source>class expression</source>
          <target state="translated">クラス式</target>
        </trans-unit>
        <trans-unit id="551c77789bf6336e9d5f6165d07c948561f7b8f8" translate="yes" xml:space="preserve">
          <source>colon</source>
          <target state="translated">colon</target>
        </trans-unit>
        <trans-unit id="d3c71389c982e44d9cfe237942b8cd548d2a190c" translate="yes" xml:space="preserve">
          <source>compat</source>
          <target state="translated">compat</target>
        </trans-unit>
        <trans-unit id="6f24215ca92940a906964eae091931e5da861533" translate="yes" xml:space="preserve">
          <source>compiles a &lt;a href=&quot;webassembly/module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; directly from a streamed underlying source, leaving instantiation as a separate step.</source>
          <target state="translated">ストリーム化された基になるソースから直接&lt;a href=&quot;webassembly/module&quot;&gt; &lt;code&gt;WebAssembly.Module&lt;/code&gt; &lt;/a&gt;をコンパイルし、インスタンス化を別のステップとして残します。</target>
        </trans-unit>
        <trans-unit id="034f5d68c772a39afc146d3080a278e9be4fbac5" translate="yes" xml:space="preserve">
          <source>computed &lt;code&gt;timeZone&lt;/code&gt;</source>
          <target state="translated">計算された &lt;code&gt;timeZone&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fb996269eff67c0452e0538cc0f31775fb604799" translate="yes" xml:space="preserve">
          <source>conditional operator</source>
          <target state="translated">条件演算子</target>
        </trans-unit>
        <trans-unit id="b42f3f6f796fa3cfcb6b1b8d49c7bcccc3a7164c" translate="yes" xml:space="preserve">
          <source>const</source>
          <target state="translated">const</target>
        </trans-unit>
        <trans-unit id="eb68c7623971e0c73b3cb3bbc3d26872fa7e23c9" translate="yes" xml:space="preserve">
          <source>const also works on objects and arrays.</source>
          <target state="translated">constはオブジェクトや配列に対しても動作します。</target>
        </trans-unit>
        <trans-unit id="a83662ac2c4c8b7bcffe24b6f1aa65c21fa73097" translate="yes" xml:space="preserve">
          <source>const in objects and arrays</source>
          <target state="translated">オブジェクトと配列の定数</target>
        </trans-unit>
        <trans-unit id="77ac72efac6ef60487d0349b98a5c623f12ffbd6" translate="yes" xml:space="preserve">
          <source>const needs to be initialized</source>
          <target state="translated">const を初期化する必要があります。</target>
        </trans-unit>
        <trans-unit id="8a1c1339801686eb9bf9a9ac5b4719b8c8b8fc9b" translate="yes" xml:space="preserve">
          <source>constructor</source>
          <target state="translated">constructor</target>
        </trans-unit>
        <trans-unit id="eee0bbba4ff92adbeb038a77df0466d660f15716" translate="yes" xml:space="preserve">
          <source>continue</source>
          <target state="translated">continue</target>
        </trans-unit>
        <trans-unit id="5bcc2c4d81811ed80bdd75460668f2bc84ab2137" translate="yes" xml:space="preserve">
          <source>cos</source>
          <target state="translated">cos</target>
        </trans-unit>
        <trans-unit id="a2feafc74f88dca754a5ba43c50a85d79a767e72" translate="yes" xml:space="preserve">
          <source>cosh</source>
          <target state="translated">cosh</target>
        </trans-unit>
        <trans-unit id="001517ee5d3d0c7f4481ec2cd77c6aefd2fa802e" translate="yes" xml:space="preserve">
          <source>currency</source>
          <target state="translated">currency</target>
        </trans-unit>
        <trans-unit id="2c75a582a9ad5455d96c2c8b15796d0d31e23f67" translate="yes" xml:space="preserve">
          <source>cyrl</source>
          <target state="translated">cyrl</target>
        </trans-unit>
        <trans-unit id="9e19410fd6b86b7320f47997f031c1debfa9996f" translate="yes" xml:space="preserve">
          <source>dataView.buffer</source>
          <target state="translated">dataView.buffer</target>
        </trans-unit>
        <trans-unit id="81c430731492f24af6b12d773fbc86dfb9981d86" translate="yes" xml:space="preserve">
          <source>dataView.byteLength</source>
          <target state="translated">dataView.byteLength</target>
        </trans-unit>
        <trans-unit id="d156945b7e1c991ad54e5b17f1924bfa6f4ee9ff" translate="yes" xml:space="preserve">
          <source>dataView.byteOffset</source>
          <target state="translated">dataView.byteOffset</target>
        </trans-unit>
        <trans-unit id="9e6de295e64f05cad6969f6fb3c42e50d3bb0b43" translate="yes" xml:space="preserve">
          <source>dataView.getBigInt64</source>
          <target state="translated">dataView.getBigInt64</target>
        </trans-unit>
        <trans-unit id="9c95f8293e50fa62a4ade12b43ec4b6365fc2483" translate="yes" xml:space="preserve">
          <source>dataView.getBigUint64</source>
          <target state="translated">dataView.getBigUint64</target>
        </trans-unit>
        <trans-unit id="4f295fc7bd92b56c1569e4fa733c63ec0e262d2b" translate="yes" xml:space="preserve">
          <source>dataView.getFloat32</source>
          <target state="translated">dataView.getFloat32</target>
        </trans-unit>
        <trans-unit id="a70abd597c18ce91e725cd99f58f75d66da4ecf5" translate="yes" xml:space="preserve">
          <source>dataView.getFloat64</source>
          <target state="translated">dataView.getFloat64</target>
        </trans-unit>
        <trans-unit id="3f6844aa2368098a877d7e6cc31e91edf43d3298" translate="yes" xml:space="preserve">
          <source>dataView.getInt16</source>
          <target state="translated">dataView.getInt16</target>
        </trans-unit>
        <trans-unit id="87850a75ed22f33a4b29976ee0cac99ca7433fa6" translate="yes" xml:space="preserve">
          <source>dataView.getInt32</source>
          <target state="translated">dataView.getInt32</target>
        </trans-unit>
        <trans-unit id="df26be171f7c4db85fc2c5c8f862a64323b7092f" translate="yes" xml:space="preserve">
          <source>dataView.getInt8</source>
          <target state="translated">dataView.getInt8</target>
        </trans-unit>
        <trans-unit id="df01e784fbed47581df5c2d2630ea679c426bcd1" translate="yes" xml:space="preserve">
          <source>dataView.getUint16</source>
          <target state="translated">dataView.getUint16</target>
        </trans-unit>
        <trans-unit id="2ab6c25e7dc4f08f82b7a14e2e0129e3b4da780d" translate="yes" xml:space="preserve">
          <source>dataView.getUint32</source>
          <target state="translated">dataView.getUint32</target>
        </trans-unit>
        <trans-unit id="c189eedcf6b601cca32b7da93f33be5be37e1a71" translate="yes" xml:space="preserve">
          <source>dataView.getUint8</source>
          <target state="translated">dataView.getUint8</target>
        </trans-unit>
        <trans-unit id="80a8d465cd048ff0ca98cd9529c383e873218553" translate="yes" xml:space="preserve">
          <source>dataView.setBigInt64</source>
          <target state="translated">dataView.setBigInt64</target>
        </trans-unit>
        <trans-unit id="c8542c309b69666f0fa56dcafc2f2f86f63a4127" translate="yes" xml:space="preserve">
          <source>dataView.setBigUint64</source>
          <target state="translated">dataView.setBigUint64</target>
        </trans-unit>
        <trans-unit id="5327d682b04ee12593a77f58d06baade515717b7" translate="yes" xml:space="preserve">
          <source>dataView.setFloat32</source>
          <target state="translated">dataView.setFloat32</target>
        </trans-unit>
        <trans-unit id="fcb72f72765011eb0af21b527b2164f66809c6db" translate="yes" xml:space="preserve">
          <source>dataView.setFloat64</source>
          <target state="translated">dataView.setFloat64</target>
        </trans-unit>
        <trans-unit id="8779da19676090a5df5132e508542bf945e1043a" translate="yes" xml:space="preserve">
          <source>dataView.setInt16</source>
          <target state="translated">dataView.setInt16</target>
        </trans-unit>
        <trans-unit id="e0b49b783e9047af6ffba59fba9d7a00ae7a70b4" translate="yes" xml:space="preserve">
          <source>dataView.setInt32</source>
          <target state="translated">dataView.setInt32</target>
        </trans-unit>
        <trans-unit id="b19eb9a3087ebdb4f9188bf34563103c6baa3a1d" translate="yes" xml:space="preserve">
          <source>dataView.setInt8</source>
          <target state="translated">dataView.setInt8</target>
        </trans-unit>
        <trans-unit id="e038c590e849b52229780169d2fea35634e9aab0" translate="yes" xml:space="preserve">
          <source>dataView.setUint16</source>
          <target state="translated">dataView.setUint16</target>
        </trans-unit>
        <trans-unit id="1b863b718b9287569c051468cf266b1dcda39172" translate="yes" xml:space="preserve">
          <source>dataView.setUint32</source>
          <target state="translated">dataView.setUint32</target>
        </trans-unit>
        <trans-unit id="d8b08733125fb4864fc09a7c57e43cf554eff4e3" translate="yes" xml:space="preserve">
          <source>dataView.setUint8</source>
          <target state="translated">dataView.setUint8</target>
        </trans-unit>
        <trans-unit id="ae7d2c0c6aa9f15441c6eb5069339a7afe50c593" translate="yes" xml:space="preserve">
          <source>date.@@toPrimitive</source>
          <target state="translated">date.@@toPrimitive</target>
        </trans-unit>
        <trans-unit id="603c5424fae378ea1c9ed5767b77b0118f988d6b" translate="yes" xml:space="preserve">
          <source>date.getDate</source>
          <target state="translated">date.getDate</target>
        </trans-unit>
        <trans-unit id="4119a8c20ca959826072b6e9444403344e00bf05" translate="yes" xml:space="preserve">
          <source>date.getDay</source>
          <target state="translated">date.getDay</target>
        </trans-unit>
        <trans-unit id="1c1a4ba7f0ad53cc18943e703a92ea8a83edb15b" translate="yes" xml:space="preserve">
          <source>date.getFullYear</source>
          <target state="translated">date.getFullYear</target>
        </trans-unit>
        <trans-unit id="0d20ccd50508913d8a11daeb52417e5faeca0c25" translate="yes" xml:space="preserve">
          <source>date.getHours</source>
          <target state="translated">date.getHours</target>
        </trans-unit>
        <trans-unit id="fd1750dedc472f80d7cd9aaed8656b4283bc8099" translate="yes" xml:space="preserve">
          <source>date.getMilliseconds</source>
          <target state="translated">date.getMilliseconds</target>
        </trans-unit>
        <trans-unit id="379cddb3762d26e82f4f9fdbe4b00a0e0d2bdfce" translate="yes" xml:space="preserve">
          <source>date.getMinutes</source>
          <target state="translated">date.getMinutes</target>
        </trans-unit>
        <trans-unit id="d5d54f7ee09d9bd2f81eaa58a13452308bff3a2e" translate="yes" xml:space="preserve">
          <source>date.getMonth</source>
          <target state="translated">date.getMonth</target>
        </trans-unit>
        <trans-unit id="42ffac8a7bfc242013518f2aec9c465ade19d1ed" translate="yes" xml:space="preserve">
          <source>date.getSeconds</source>
          <target state="translated">date.getSeconds</target>
        </trans-unit>
        <trans-unit id="08263cb802de095c8dfcc748f29606cd52c354b9" translate="yes" xml:space="preserve">
          <source>date.getTime</source>
          <target state="translated">date.getTime</target>
        </trans-unit>
        <trans-unit id="4982eef37ec3b00726dd9a9eefc975d913a2b751" translate="yes" xml:space="preserve">
          <source>date.getTimezoneOffset</source>
          <target state="translated">date.getTimezoneOffset</target>
        </trans-unit>
        <trans-unit id="0ff973cb708cc0b7fcd6958e2759bd0e8eba5307" translate="yes" xml:space="preserve">
          <source>date.getUTCDate</source>
          <target state="translated">date.getUTCDate</target>
        </trans-unit>
        <trans-unit id="ea837d09b655984ca03a7e5fb82b7014e959a6aa" translate="yes" xml:space="preserve">
          <source>date.getUTCDay</source>
          <target state="translated">date.getUTCDay</target>
        </trans-unit>
        <trans-unit id="854162d8ec2e6b74440a582ebe639ed7210e4ccd" translate="yes" xml:space="preserve">
          <source>date.getUTCFullYear</source>
          <target state="translated">date.getUTCFullYear</target>
        </trans-unit>
        <trans-unit id="27771c3ccc6fd39783d441f111333014b8c3be5d" translate="yes" xml:space="preserve">
          <source>date.getUTCHours</source>
          <target state="translated">date.getUTCHours</target>
        </trans-unit>
        <trans-unit id="e586e4855ca719f3ea1cb240049f64424486e85c" translate="yes" xml:space="preserve">
          <source>date.getUTCMilliseconds</source>
          <target state="translated">date.getUTCMilliseconds</target>
        </trans-unit>
        <trans-unit id="ef32fda1520b42fc1df30fb593a9934298aacb52" translate="yes" xml:space="preserve">
          <source>date.getUTCMinutes</source>
          <target state="translated">date.getUTCMinutes</target>
        </trans-unit>
        <trans-unit id="2dec75011b24c7ac3f27096bcc4c5f8ad70e2315" translate="yes" xml:space="preserve">
          <source>date.getUTCMonth</source>
          <target state="translated">date.getUTCMonth</target>
        </trans-unit>
        <trans-unit id="b132d2694d938164646e55d30b5229dfd8d587c0" translate="yes" xml:space="preserve">
          <source>date.getUTCSeconds</source>
          <target state="translated">date.getUTCSeconds</target>
        </trans-unit>
        <trans-unit id="fc168a7cfe2f8b2f36490767da9797a89dceef6e" translate="yes" xml:space="preserve">
          <source>date.getYear</source>
          <target state="translated">date.getYear</target>
        </trans-unit>
        <trans-unit id="d56b07cc13914e5f7b5dcc72907501394094b638" translate="yes" xml:space="preserve">
          <source>date.setDate</source>
          <target state="translated">date.setDate</target>
        </trans-unit>
        <trans-unit id="3b9d504da96fbffb740f1df095dfd44c7244e976" translate="yes" xml:space="preserve">
          <source>date.setFullYear</source>
          <target state="translated">date.setFullYear</target>
        </trans-unit>
        <trans-unit id="59ebb9a9ff642187536ec1b671569d758ce072b7" translate="yes" xml:space="preserve">
          <source>date.setHours</source>
          <target state="translated">date.setHours</target>
        </trans-unit>
        <trans-unit id="8a53d5857ffb1ff5e88aa5e51330f8b1fdaeeba8" translate="yes" xml:space="preserve">
          <source>date.setMilliseconds</source>
          <target state="translated">date.setMilliseconds</target>
        </trans-unit>
        <trans-unit id="815e289b2f3920b18fc75ed97899d0800aff2abe" translate="yes" xml:space="preserve">
          <source>date.setMinutes</source>
          <target state="translated">date.setMinutes</target>
        </trans-unit>
        <trans-unit id="f45048d1d17742956609e9aeefaae6248cb4f5d9" translate="yes" xml:space="preserve">
          <source>date.setMonth</source>
          <target state="translated">date.setMonth</target>
        </trans-unit>
        <trans-unit id="3beb7973e5e3621ca5d1d9cfd61cca8085b9353f" translate="yes" xml:space="preserve">
          <source>date.setSeconds</source>
          <target state="translated">date.setSeconds</target>
        </trans-unit>
        <trans-unit id="a9880d307e07056dcd2df2db0b64aea96d008a6d" translate="yes" xml:space="preserve">
          <source>date.setTime</source>
          <target state="translated">date.setTime</target>
        </trans-unit>
        <trans-unit id="f2210fecb4b909010ac5fe7a51d772a05b4c0cef" translate="yes" xml:space="preserve">
          <source>date.setUTCDate</source>
          <target state="translated">date.setUTCDate</target>
        </trans-unit>
        <trans-unit id="a8e8635defb4635cce146fba02f7801680f3298f" translate="yes" xml:space="preserve">
          <source>date.setUTCFullYear</source>
          <target state="translated">date.setUTCFullYear</target>
        </trans-unit>
        <trans-unit id="856b43fcc33ca8392724cd797e83529c8986b832" translate="yes" xml:space="preserve">
          <source>date.setUTCHours</source>
          <target state="translated">date.setUTCHours</target>
        </trans-unit>
        <trans-unit id="9843cff7fff7bfa20f034950a73f1e56c59221c4" translate="yes" xml:space="preserve">
          <source>date.setUTCMilliseconds</source>
          <target state="translated">date.setUTCMilliseconds</target>
        </trans-unit>
        <trans-unit id="2be427c45de49cc6a96759026563cacf37e32ff9" translate="yes" xml:space="preserve">
          <source>date.setUTCMinutes</source>
          <target state="translated">date.setUTCMinutes</target>
        </trans-unit>
        <trans-unit id="589814adbe7ecc63605b15fbcbf8dc5e3d2aa3f1" translate="yes" xml:space="preserve">
          <source>date.setUTCMonth</source>
          <target state="translated">date.setUTCMonth</target>
        </trans-unit>
        <trans-unit id="e93d42e90b3a8dc88fe08f1749e35ba24b88e54f" translate="yes" xml:space="preserve">
          <source>date.setUTCSeconds</source>
          <target state="translated">date.setUTCSeconds</target>
        </trans-unit>
        <trans-unit id="83024ebd9954817f0f04102f32856a6ae84b92f5" translate="yes" xml:space="preserve">
          <source>date.setYear</source>
          <target state="translated">date.setYear</target>
        </trans-unit>
        <trans-unit id="e5c2508e8855067a369a67aee330bd211675cf7f" translate="yes" xml:space="preserve">
          <source>date.toDateString</source>
          <target state="translated">date.toDateString</target>
        </trans-unit>
        <trans-unit id="db7680a9c8332b4452fe83dde5d27df03b06a794" translate="yes" xml:space="preserve">
          <source>date.toGMTString</source>
          <target state="translated">date.toGMTString</target>
        </trans-unit>
        <trans-unit id="53374d16bb2d82608cfeebc33408dfe637c82ad8" translate="yes" xml:space="preserve">
          <source>date.toISOString</source>
          <target state="translated">date.toISOString</target>
        </trans-unit>
        <trans-unit id="e0f8da29d394251daabaef21578dfb0f13ba1a3f" translate="yes" xml:space="preserve">
          <source>date.toJSON</source>
          <target state="translated">date.toJSON</target>
        </trans-unit>
        <trans-unit id="210158c7df770197c51ca0ae829e6c368932105a" translate="yes" xml:space="preserve">
          <source>date.toLocaleDateString</source>
          <target state="translated">date.toLocaleDateString</target>
        </trans-unit>
        <trans-unit id="0f2731bf30dd441fe86f29f24604172110699baa" translate="yes" xml:space="preserve">
          <source>date.toLocaleString</source>
          <target state="translated">date.toLocaleString</target>
        </trans-unit>
        <trans-unit id="f4b85bb1470da3fdadec83562c60f437d185defa" translate="yes" xml:space="preserve">
          <source>date.toLocaleTimeString</source>
          <target state="translated">date.toLocaleTimeString</target>
        </trans-unit>
        <trans-unit id="212fd910c8e0426390e46ac06308dab3620eb027" translate="yes" xml:space="preserve">
          <source>date.toString</source>
          <target state="translated">date.toString</target>
        </trans-unit>
        <trans-unit id="e51150a8fc18255a6098a392dff99eb985bf4807" translate="yes" xml:space="preserve">
          <source>date.toTimeString</source>
          <target state="translated">date.toTimeString</target>
        </trans-unit>
        <trans-unit id="f8b83128cfc4b1feb3f24af2748fc996ad6a3d8a" translate="yes" xml:space="preserve">
          <source>date.toUTCString</source>
          <target state="translated">date.toUTCString</target>
        </trans-unit>
        <trans-unit id="49aeefc59d6585c2418cf392d9bb0cfb929bdefe" translate="yes" xml:space="preserve">
          <source>date.valueOf</source>
          <target state="translated">date.valueOf</target>
        </trans-unit>
        <trans-unit id="a2620cbc10f5198dd03e3f5a1569eb5dcf9a6a87" translate="yes" xml:space="preserve">
          <source>day</source>
          <target state="translated">day</target>
        </trans-unit>
        <trans-unit id="7b8ffdad96c6e7db0907d1449bc77c1a88d31174" translate="yes" xml:space="preserve">
          <source>dayPeriod</source>
          <target state="translated">dayPeriod</target>
        </trans-unit>
        <trans-unit id="0c6a8195309382f542f022e01c1a2a6e474589aa" translate="yes" xml:space="preserve">
          <source>dbBd</source>
          <target state="translated">dbBd</target>
        </trans-unit>
        <trans-unit id="5fbd02245cf700ea94d638c8d76924ecca52d330" translate="yes" xml:space="preserve">
          <source>debugger</source>
          <target state="translated">debugger</target>
        </trans-unit>
        <trans-unit id="45932d6fa98f39c5cd3f08cd951d8dc70fc5f7de" translate="yes" xml:space="preserve">
          <source>decimal</source>
          <target state="translated">decimal</target>
        </trans-unit>
        <trans-unit id="0fb30b35b78a270573c4fb44b701255d83dd753a" translate="yes" xml:space="preserve">
          <source>decodeURI</source>
          <target state="translated">decodeURI</target>
        </trans-unit>
        <trans-unit id="6815f5c4c2c85463a49d08c7b7806ae19c16df34" translate="yes" xml:space="preserve">
          <source>decodeURIComponent</source>
          <target state="translated">decodeURIComponent</target>
        </trans-unit>
        <trans-unit id="e4ff76cb5a098bbd7bebac3f972c2706e9fbce19" translate="yes" xml:space="preserve">
          <source>decodeURIComponent cannot be used directly to parse query parameters from a URL. It needs a bit of preparation.</source>
          <target state="translated">decodeURIComponentは、URLからのクエリパラメータを解析するために直接使用することはできません。ちょっとした準備が必要です。</target>
        </trans-unit>
        <trans-unit id="7505d64a54e061b7acd54ccd58b49dc43500b635" translate="yes" xml:space="preserve">
          <source>default</source>
          <target state="translated">default</target>
        </trans-unit>
        <trans-unit id="9485989ff514b5106b7738850fd73c23e8c1e3f7" translate="yes" xml:space="preserve">
          <source>delete</source>
          <target state="translated">delete</target>
        </trans-unit>
        <trans-unit id="819529646364483be507e2ec1673a52e16b8e604" translate="yes" xml:space="preserve">
          <source>delete operator</source>
          <target state="translated">削除演算子</target>
        </trans-unit>
        <trans-unit id="79a28991090b2f40e9ebd14751875dd22c3d2cc0" translate="yes" xml:space="preserve">
          <source>deva</source>
          <target state="translated">deva</target>
        </trans-unit>
        <trans-unit id="76e94348139b788d21edc7b9cd011af238d0de03" translate="yes" xml:space="preserve">
          <source>dict</source>
          <target state="translated">dict</target>
        </trans-unit>
        <trans-unit id="507f64f56678978778e41a780d93ac43ca159e2c" translate="yes" xml:space="preserve">
          <source>did not. To get around this &lt;code&gt;arguments.callee&lt;/code&gt; was added so you could do</source>
          <target state="translated">しませんでした。この &lt;code&gt;arguments.callee&lt;/code&gt; を回避するためにあなたができるように追加されました</target>
        </trans-unit>
        <trans-unit id="24a1733ca8bb0ae45a3ffd1eeddc926b2fc5841f" translate="yes" xml:space="preserve">
          <source>direct</source>
          <target state="translated">direct</target>
        </trans-unit>
        <trans-unit id="5e237c5d8a1f67e8d8e7ac457fd53faa91d8f42f" translate="yes" xml:space="preserve">
          <source>do...while</source>
          <target state="translated">do...while</target>
        </trans-unit>
        <trans-unit id="c51a8f9ddbbd9e828f4da2afb9784d8158072653" translate="yes" xml:space="preserve">
          <source>document.all willful violation of the standard</source>
          <target state="translated">標準のすべての故意の違反を文書化します。</target>
        </trans-unit>
        <trans-unit id="c21ad69d7caaaeb210a3c2b4c29d2039ea87dfa6" translate="yes" xml:space="preserve">
          <source>doesn't return anything, the promise returned by &lt;code&gt;then&lt;/code&gt; gets resolved with an &lt;code&gt;undefined&lt;/code&gt; value.</source>
          <target state="translated">何も返さない、で返される約束 &lt;code&gt;then&lt;/code&gt; で解決さ &lt;code&gt;undefined&lt;/code&gt; 値。</target>
        </trans-unit>
        <trans-unit id="05d1bb848c0fa09bb63d75d275d614bf7bc8f14b" translate="yes" xml:space="preserve">
          <source>doesn't return anything, the promise returned by &lt;code&gt;then&lt;/code&gt; gets resolved with an &lt;code&gt;undefined&lt;/code&gt; value;</source>
          <target state="translated">何も返さない、 &lt;code&gt;then&lt;/code&gt; に返されたpromiseは &lt;code&gt;undefined&lt;/code&gt; 値で解決されます。</target>
        </trans-unit>
        <trans-unit id="5554bff0e540b930596ca569f631433f1f953645" translate="yes" xml:space="preserve">
          <source>double quote</source>
          <target state="translated">ダブルクォート</target>
        </trans-unit>
        <trans-unit id="58b3b76db41714f4098c7771564945a565d90747" translate="yes" xml:space="preserve">
          <source>ducet</source>
          <target state="translated">ducet</target>
        </trans-unit>
        <trans-unit id="58e6b3a414a1e090dfc6029add0f3555ccba127f" translate="yes" xml:space="preserve">
          <source>e</source>
          <target state="translated">e</target>
        </trans-unit>
        <trans-unit id="4e50d33173685e07c813321d49d13c8ed7f3c338" translate="yes" xml:space="preserve">
          <source>emoji</source>
          <target state="translated">emoji</target>
        </trans-unit>
        <trans-unit id="5aa8824fe58ca9c24499eb9a0d21e84b27b32c4f" translate="yes" xml:space="preserve">
          <source>empty statement</source>
          <target state="translated">空文</target>
        </trans-unit>
        <trans-unit id="db40dd0fe64a3b5be48ff7942804271ee42775c2" translate="yes" xml:space="preserve">
          <source>empty string (&lt;code&gt;&quot;&quot;&lt;/code&gt; or &lt;code&gt;''&lt;/code&gt; or &lt;code&gt;``&lt;/code&gt;);</source>
          <target state="translated">空の文字列（ &lt;code&gt;&quot;&quot;&lt;/code&gt; または &lt;code&gt;''&lt;/code&gt; または &lt;code&gt;``&lt;/code&gt; ）;</target>
        </trans-unit>
        <trans-unit id="454bd749fb11befaab5fd6d98cfe66e2141841d7" translate="yes" xml:space="preserve">
          <source>encodeURI</source>
          <target state="translated">encodeURI</target>
        </trans-unit>
        <trans-unit id="338b9b6729dc28b50b277df645d6fba810799005" translate="yes" xml:space="preserve">
          <source>encodeURI differs from &lt;a href=&quot;encodeuricomponent&quot;&gt;&lt;code&gt;encodeURIComponent&lt;/code&gt;&lt;/a&gt; as follows:</source>
          <target state="translated">encodeURIは、&lt;a href=&quot;encodeuricomponent&quot;&gt; &lt;code&gt;encodeURIComponent&lt;/code&gt; &lt;/a&gt;と次のように異なります。</target>
        </trans-unit>
        <trans-unit id="bc7919b5c60eccc672eb85fdfaaa7d4c8b51df4b" translate="yes" xml:space="preserve">
          <source>encodeURI vs encodeURIComponent</source>
          <target state="translated">encodeURI と encodeURIComponent の比較</target>
        </trans-unit>
        <trans-unit id="454eccb7a902ca6d96dbd79c5aa7c8432f9a70d4" translate="yes" xml:space="preserve">
          <source>encodeURIComponent</source>
          <target state="translated">encodeURIComponent</target>
        </trans-unit>
        <trans-unit id="49e3cd58cdfac0555038999fe1c3b33b59a91e80" translate="yes" xml:space="preserve">
          <source>end Optional</source>
          <target state="translated">エンド オプション</target>
        </trans-unit>
        <trans-unit id="fab6323dff3b1bba309a6baf39e9a920cc7fbc4e" translate="yes" xml:space="preserve">
          <source>eor</source>
          <target state="translated">eor</target>
        </trans-unit>
        <trans-unit id="281f09155c96bf1277ed70fab0b043322f873f41" translate="yes" xml:space="preserve">
          <source>era</source>
          <target state="translated">era</target>
        </trans-unit>
        <trans-unit id="36cdc651708919d9a830acb2c742b325fd23aeb5" translate="yes" xml:space="preserve">
          <source>error.message</source>
          <target state="translated">error.message</target>
        </trans-unit>
        <trans-unit id="2bfd91b6b40021fdfd6dd1e7fe1a87f59918ba93" translate="yes" xml:space="preserve">
          <source>error.name</source>
          <target state="translated">error.name</target>
        </trans-unit>
        <trans-unit id="207dc6e734a9da20efa2bf3a1b0f05372b49d752" translate="yes" xml:space="preserve">
          <source>error.toString</source>
          <target state="translated">error.toString</target>
        </trans-unit>
        <trans-unit id="8e344bffc8bfe663597e9859eae41b932cad19ab" translate="yes" xml:space="preserve">
          <source>ethi</source>
          <target state="translated">ethi</target>
        </trans-unit>
        <trans-unit id="822bc13e2d55b402eb4233cb23c9d414a7a03bc1" translate="yes" xml:space="preserve">
          <source>eval</source>
          <target state="translated">eval</target>
        </trans-unit>
        <trans-unit id="b58d80edf0d9a5f19d17ce43b0b4205bab0262a4" translate="yes" xml:space="preserve">
          <source>example:</source>
          <target state="translated">example:</target>
        </trans-unit>
        <trans-unit id="520c4b928b35b0a12dfc3fe1f5cd9ef5ec40c719" translate="yes" xml:space="preserve">
          <source>except that it does not create an intermediate array.</source>
          <target state="translated">は、中間配列を作成しないことを除いては、次のようになります。</target>
        </trans-unit>
        <trans-unit id="b1033ae408cacd21f6b306f88a50bf6e8654cd4f" translate="yes" xml:space="preserve">
          <source>executor</source>
          <target state="translated">executor</target>
        </trans-unit>
        <trans-unit id="51713409935576d63d066e104eb1ad0e37137da7" translate="yes" xml:space="preserve">
          <source>export</source>
          <target state="translated">export</target>
        </trans-unit>
        <trans-unit id="ec9814396ba26fa02dc3261046ba55a3b4bb32a6" translate="yes" xml:space="preserve">
          <source>expression</source>
          <target state="translated">expression</target>
        </trans-unit>
        <trans-unit id="2b781ff8e3327e3e897ec571fa02fec12242e7dd" translate="yes" xml:space="preserve">
          <source>extends</source>
          <target state="translated">extends</target>
        </trans-unit>
        <trans-unit id="8688f99b37b4693215ba8ef113bba2d5b5ab7588" translate="yes" xml:space="preserve">
          <source>fifth call</source>
          <target state="translated">五番勝負</target>
        </trans-unit>
        <trans-unit id="4d640cd67307dcf42c417c3bce5d5f4f076a69f9" translate="yes" xml:space="preserve">
          <source>files must have suffix .mjs, not .js</source>
          <target state="translated">ファイルの接尾辞は .js ではなく .mjs でなければなりません。</target>
        </trans-unit>
        <trans-unit id="d00b91168796f142b2d68ed5af3a1282e2b1e392" translate="yes" xml:space="preserve">
          <source>finalizationRegistry.register</source>
          <target state="translated">finalizationRegistry.register</target>
        </trans-unit>
        <trans-unit id="81c3eb59800b216e3953ccb79fc187435d33d281" translate="yes" xml:space="preserve">
          <source>finalizationRegistry.unregister</source>
          <target state="translated">finalizationRegistry.unregister</target>
        </trans-unit>
        <trans-unit id="a1cf62af599e2c2403cd6542a3bbe8f828511be8" translate="yes" xml:space="preserve">
          <source>finance</source>
          <target state="translated">finance</target>
        </trans-unit>
        <trans-unit id="50ac64f7abf4d1b1d4c07540bd049c517d638698" translate="yes" xml:space="preserve">
          <source>first call</source>
          <target state="translated">ファーストコール</target>
        </trans-unit>
        <trans-unit id="897671e2aab479ab8329b5db94b275d2329c06b8" translate="yes" xml:space="preserve">
          <source>flag A is true (we have an ant problem);</source>
          <target state="translated">フラグAが真である(アリの問題がある)。</target>
        </trans-unit>
        <trans-unit id="63520230a644c0991733ab99f71c130fca06d6a2" translate="yes" xml:space="preserve">
          <source>flag A: we have an ant problem</source>
          <target state="translated">フラグA:アリの問題があります</target>
        </trans-unit>
        <trans-unit id="ec3d10fca7e0a062fc9f7e8d4f48e08b2d307a3f" translate="yes" xml:space="preserve">
          <source>flag B is false (we don't own a bat);</source>
          <target state="translated">フラグBは偽(バットを所有していない)。</target>
        </trans-unit>
        <trans-unit id="da1131c862bd60520b15dcd490b40a9916fd846f" translate="yes" xml:space="preserve">
          <source>flag B: we own a bat</source>
          <target state="translated">旗B:コウモリを所有している</target>
        </trans-unit>
        <trans-unit id="7469c764e07cc16bc9ab45bcb26d6e870faf9999" translate="yes" xml:space="preserve">
          <source>flag C is true (we own a cat);</source>
          <target state="translated">フラグCが真である(猫を飼っている)。</target>
        </trans-unit>
        <trans-unit id="c0096b1b3df8a0e5893e2edfcf597b6952d49f72" translate="yes" xml:space="preserve">
          <source>flag C: we own a cat</source>
          <target state="translated">旗C:猫を飼っています</target>
        </trans-unit>
        <trans-unit id="5fca1f80e62492b5075830a1e7aaedc70e94094c" translate="yes" xml:space="preserve">
          <source>flag D is false (we don't own a duck);</source>
          <target state="translated">フラグDは偽(カモを所有していない)。</target>
        </trans-unit>
        <trans-unit id="d9056e563e121843b5563f3f5ddb53b2356a3129" translate="yes" xml:space="preserve">
          <source>flag D: we own a duck</source>
          <target state="translated">旗D:鴨を飼っています</target>
        </trans-unit>
        <trans-unit id="46b2f18e1abc011438c462aebc8b708399e9565c" translate="yes" xml:space="preserve">
          <source>foo is NaN or not 1, 2, 3, 4, 5 or 0</source>
          <target state="translated">foo が NaN であるかどうか 1,2,3,4,5,0 であるかどうか</target>
        </trans-unit>
        <trans-unit id="43eef9a62abb8b1e1654f8a890aae054abffa82b" translate="yes" xml:space="preserve">
          <source>for</source>
          <target state="translated">for</target>
        </trans-unit>
        <trans-unit id="05143e5abbf5050708a536dcc25328cf6879a957" translate="yes" xml:space="preserve">
          <source>for await... of</source>
          <target state="translated">待ちに待った...</target>
        </trans-unit>
        <trans-unit id="d570c3e3b95ae6a97c6c7e70e826e6b0be6976da" translate="yes" xml:space="preserve">
          <source>for each...in</source>
          <target state="translated">それぞれに</target>
        </trans-unit>
        <trans-unit id="e3de3df2d61c639c20871fd3737ab1faa205ad50" translate="yes" xml:space="preserve">
          <source>for exponentiation, but JavaScript uses that symbol for the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators#Bitwise_XOR&quot;&gt;bitwise logical XOR operator&lt;/a&gt;.</source>
          <target state="translated">べき乗のためですが、JavaScriptは&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators#Bitwise_XOR&quot;&gt;ビット単位の論理XOR演算子に&lt;/a&gt;その記号を使用します。</target>
        </trans-unit>
        <trans-unit id="2ace686918f3200b44a6e29cb9797ff040407d7e" translate="yes" xml:space="preserve">
          <source>for loop</source>
          <target state="translated">フォーループ</target>
        </trans-unit>
        <trans-unit id="2af977e849204334837de1bb07b6dcfcf20623a8" translate="yes" xml:space="preserve">
          <source>for&amp;hellip;of</source>
          <target state="translated">for&amp;hellip;of</target>
        </trans-unit>
        <trans-unit id="a7713c3308eee47568c7915496096777160e57b8" translate="yes" xml:space="preserve">
          <source>for-await...of</source>
          <target state="translated">for-await...of</target>
        </trans-unit>
        <trans-unit id="a322e6279b56630d74c2f61ab6f17d39615f1029" translate="yes" xml:space="preserve">
          <source>for...in</source>
          <target state="translated">for...in</target>
        </trans-unit>
        <trans-unit id="13c922d0a4878c3092e2e6b4b5fcfcb68ab15e07" translate="yes" xml:space="preserve">
          <source>for...of</source>
          <target state="translated">for...of</target>
        </trans-unit>
        <trans-unit id="2e4cf2adf660f2c82fd1427101a2d3823ec2f350" translate="yes" xml:space="preserve">
          <source>forEach expects a synchronous function</source>
          <target state="translated">forEachは同期関数を期待しています。</target>
        </trans-unit>
        <trans-unit id="cacfbd40505fff5a97d7effce15468bbc881b94d" translate="yes" xml:space="preserve">
          <source>form feed</source>
          <target state="translated">フォームフィード</target>
        </trans-unit>
        <trans-unit id="9f8f7eec5dea5ac43738721939c120318cbff1df" translate="yes" xml:space="preserve">
          <source>four</source>
          <target state="translated">four</target>
        </trans-unit>
        <trans-unit id="37c192ebf725b6216f1c01a33ec486ebb9c2e431" translate="yes" xml:space="preserve">
          <source>fourth call</source>
          <target state="translated">四番勝負</target>
        </trans-unit>
        <trans-unit id="ca3ad46f5661e96d2e1ef3d978d23729f84f2efd" translate="yes" xml:space="preserve">
          <source>fraction</source>
          <target state="translated">fraction</target>
        </trans-unit>
        <trans-unit id="9a401104880fc57357dc1442ff99726494c41b76" translate="yes" xml:space="preserve">
          <source>fractionalSecond</source>
          <target state="translated">fractionalSecond</target>
        </trans-unit>
        <trans-unit id="3ae15d9126b59019dc676ead936611277445db8c" translate="yes" xml:space="preserve">
          <source>fullwide</source>
          <target state="translated">fullwide</target>
        </trans-unit>
        <trans-unit id="c218e39efa2e1aae69f39d2054528369ce1e1f46" translate="yes" xml:space="preserve">
          <source>function</source>
          <target state="translated">function</target>
        </trans-unit>
        <trans-unit id="0443e8a73d1fe864b368d8fc3fd526f8a3dd7a8b" translate="yes" xml:space="preserve">
          <source>function expression</source>
          <target state="translated">かんすうしき</target>
        </trans-unit>
        <trans-unit id="24a85b15c151b25cc70ff0c376fd946d7f558b17" translate="yes" xml:space="preserve">
          <source>function statement</source>
          <target state="translated">関数文</target>
        </trans-unit>
        <trans-unit id="7ca5650dbe1760274e5e956ec056a547f88a2087" translate="yes" xml:space="preserve">
          <source>function*</source>
          <target state="translated">function*</target>
        </trans-unit>
        <trans-unit id="4e1c8da9275505864a1f08f8d29a5209fec39f0a" translate="yes" xml:space="preserve">
          <source>function* expression</source>
          <target state="translated">関数*式</target>
        </trans-unit>
        <trans-unit id="51349736693ebc4246c79550b1dad389964caaff" translate="yes" xml:space="preserve">
          <source>function* function</source>
          <target state="translated">関数*関数</target>
        </trans-unit>
        <trans-unit id="72891a95d3d42aea0ae512735422087041b9ffd8" translate="yes" xml:space="preserve">
          <source>function* statement</source>
          <target state="translated">関数*文</target>
        </trans-unit>
        <trans-unit id="5520dd31900752ef29bbb656103368ac7120312e" translate="yes" xml:space="preserve">
          <source>function.apply</source>
          <target state="translated">function.apply</target>
        </trans-unit>
        <trans-unit id="b1e568b0ca0dbee95b36b9dc9826265e03ae7f8b" translate="yes" xml:space="preserve">
          <source>function.arguments</source>
          <target state="translated">function.arguments</target>
        </trans-unit>
        <trans-unit id="c7ad3b500ef0f83a67b61e5b8ad488780ec83593" translate="yes" xml:space="preserve">
          <source>function.bind</source>
          <target state="translated">function.bind</target>
        </trans-unit>
        <trans-unit id="fd6ddd5c95a0b467b06579ed16d4d755cafcfd7c" translate="yes" xml:space="preserve">
          <source>function.call</source>
          <target state="translated">function.call</target>
        </trans-unit>
        <trans-unit id="b1d9529d3f5a136e2921334054062ee5e8d9e63e" translate="yes" xml:space="preserve">
          <source>function.caller</source>
          <target state="translated">function.caller</target>
        </trans-unit>
        <trans-unit id="f889f9bdcd6a92984966b642b34667f998f72ebe" translate="yes" xml:space="preserve">
          <source>function.name</source>
          <target state="translated">function.name</target>
        </trans-unit>
        <trans-unit id="d2f90a570d3073429157b62dde11cb9956eeb5e4" translate="yes" xml:space="preserve">
          <source>function.toString</source>
          <target state="translated">function.toString</target>
        </trans-unit>
        <trans-unit id="d5b282f9e0985a627e00269669f80c57d7457b77" translate="yes" xml:space="preserve">
          <source>gb2312</source>
          <target state="translated">gb2312</target>
        </trans-unit>
        <trans-unit id="3c43666c29f954ecf3907f93321a8331d075b854" translate="yes" xml:space="preserve">
          <source>generator.next</source>
          <target state="translated">generator.next</target>
        </trans-unit>
        <trans-unit id="b9e055d883e893e22e5e2e9f1fd6350c1ebd3081" translate="yes" xml:space="preserve">
          <source>generator.return</source>
          <target state="translated">generator.return</target>
        </trans-unit>
        <trans-unit id="2b939be57be0a39b30ff9f659f71c1a2dead6801" translate="yes" xml:space="preserve">
          <source>generator.throw</source>
          <target state="translated">generator.throw</target>
        </trans-unit>
        <trans-unit id="c6f5e4cf08e4a200a344ac68363ae64972eb1740" translate="yes" xml:space="preserve">
          <source>generators</source>
          <target state="translated">generators</target>
        </trans-unit>
        <trans-unit id="fcb117fc468275fb44784025dfe4386dc6123dfb" translate="yes" xml:space="preserve">
          <source>geor</source>
          <target state="translated">geor</target>
        </trans-unit>
        <trans-unit id="783923e57ba5e8f1044632c31fd806ee24814bb5" translate="yes" xml:space="preserve">
          <source>get</source>
          <target state="translated">get</target>
        </trans-unit>
        <trans-unit id="9f91620773d32735b30371bac791c95c071c5625" translate="yes" xml:space="preserve">
          <source>getter</source>
          <target state="translated">getter</target>
        </trans-unit>
        <trans-unit id="b797d0ec4c48cb366239c6002eb80cda1e1fe25a" translate="yes" xml:space="preserve">
          <source>global match</source>
          <target state="translated">グローバルマッチ</target>
        </trans-unit>
        <trans-unit id="eeadf85428c89574093577d1ff81e50060d1a540" translate="yes" xml:space="preserve">
          <source>global match; find all matches rather than stopping after the first match</source>
          <target state="translated">グローバルマッチ;最初のマッチで停止するのではなく、すべてのマッチを検索します。</target>
        </trans-unit>
        <trans-unit id="fdb2a613330b4179e63d32aee9f5659a9234561d" translate="yes" xml:space="preserve">
          <source>globalThis</source>
          <target state="translated">globalThis</target>
        </trans-unit>
        <trans-unit id="370f8692e4e25f0f9686332e10a7890782ff7f74" translate="yes" xml:space="preserve">
          <source>gong</source>
          <target state="translated">gong</target>
        </trans-unit>
        <trans-unit id="8ea9b4cf91b7862c1c7df8d7dd17e8c3a7b5edde" translate="yes" xml:space="preserve">
          <source>gonm</source>
          <target state="translated">gonm</target>
        </trans-unit>
        <trans-unit id="94bb8817547ff482e058944c32407075c017c605" translate="yes" xml:space="preserve">
          <source>grek</source>
          <target state="translated">grek</target>
        </trans-unit>
        <trans-unit id="9b072d32033dbaf34cc2bdc97a31a825f495a39f" translate="yes" xml:space="preserve">
          <source>greklow</source>
          <target state="translated">greklow</target>
        </trans-unit>
        <trans-unit id="64292b1c2b2e13ead8788fc8a2b8edc8c1db4ecd" translate="yes" xml:space="preserve">
          <source>group</source>
          <target state="translated">group</target>
        </trans-unit>
        <trans-unit id="91d70049c13049f8dbc2d38986b5a04a7e112312" translate="yes" xml:space="preserve">
          <source>gujr</source>
          <target state="translated">gujr</target>
        </trans-unit>
        <trans-unit id="a1872e333d0e52644f6125da2276530f7ebe5e77" translate="yes" xml:space="preserve">
          <source>guru</source>
          <target state="translated">guru</target>
        </trans-unit>
        <trans-unit id="27d5482eebd075de44389774fce28c69f45c8a75" translate="yes" xml:space="preserve">
          <source>h</source>
          <target state="translated">h</target>
        </trans-unit>
        <trans-unit id="31a81ec93db3740ee3984fc40e34a60b0412643d" translate="yes" xml:space="preserve">
          <source>handler</source>
          <target state="translated">handler</target>
        </trans-unit>
        <trans-unit id="298df5921951d27bd97e2e87fcd7f7797257d360" translate="yes" xml:space="preserve">
          <source>hanidays</source>
          <target state="translated">hanidays</target>
        </trans-unit>
        <trans-unit id="c13e23c6baf22f3b738d123b36509fd014d26f4d" translate="yes" xml:space="preserve">
          <source>hanidec</source>
          <target state="translated">hanidec</target>
        </trans-unit>
        <trans-unit id="8800578b51f022c8d8adb9606a8b3db4fedbdac6" translate="yes" xml:space="preserve">
          <source>hans</source>
          <target state="translated">hans</target>
        </trans-unit>
        <trans-unit id="80a4112742ff6f1426ad2680c7540ab4f15a0527" translate="yes" xml:space="preserve">
          <source>hansfin</source>
          <target state="translated">hansfin</target>
        </trans-unit>
        <trans-unit id="0e4a81e3fca3b62a4a92bd8767a130d27b50f9c4" translate="yes" xml:space="preserve">
          <source>hant</source>
          <target state="translated">hant</target>
        </trans-unit>
        <trans-unit id="5ebcd3a319b76f4a6eec7158cf41a1c4b257eaad" translate="yes" xml:space="preserve">
          <source>hantfin</source>
          <target state="translated">hantfin</target>
        </trans-unit>
        <trans-unit id="78df7e04c74eb196f28bc09620df313265735cba" translate="yes" xml:space="preserve">
          <source>has the same result as &lt;code&gt;Array.from(&lt;var&gt;obj&lt;/var&gt;).map(&lt;var&gt;mapFn&lt;/var&gt;, &lt;var&gt;thisArg&lt;/var&gt;)&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;Array.from(&lt;var&gt;obj&lt;/var&gt;).map(&lt;var&gt;mapFn&lt;/var&gt;, &lt;var&gt;thisArg&lt;/var&gt;)&lt;/code&gt; 、と同じ結果になります。</target>
        </trans-unit>
        <trans-unit id="6c8a506b422215288ea5b70a2d2e2314dca3997c" translate="yes" xml:space="preserve">
          <source>hebr</source>
          <target state="translated">hebr</target>
        </trans-unit>
        <trans-unit id="cb1e9f99301ba935ee0c4f311250ee00e51d6f36" translate="yes" xml:space="preserve">
          <source>hmng</source>
          <target state="translated">hmng</target>
        </trans-unit>
        <trans-unit id="a988309bcdfbcbee18205e9c71b78219af4950fe" translate="yes" xml:space="preserve">
          <source>hmnp</source>
          <target state="translated">hmnp</target>
        </trans-unit>
        <trans-unit id="af7fa0fd9515ec9863b7ff77d6ca2ce342815ebc" translate="yes" xml:space="preserve">
          <source>hoisting</source>
          <target state="translated">hoisting</target>
        </trans-unit>
        <trans-unit id="52ab86a87214a453d9f82538264f190854915247" translate="yes" xml:space="preserve">
          <source>hour</source>
          <target state="translated">hour</target>
        </trans-unit>
        <trans-unit id="1b90e38f70d0e1760e934c9cf553912cc59659ac" translate="yes" xml:space="preserve">
          <source>hypotenuse</source>
          <target state="translated">hypotenuse</target>
        </trans-unit>
        <trans-unit id="042dc4512fa3d391c5170cf3aa61e6a638f84342" translate="yes" xml:space="preserve">
          <source>i</source>
          <target state="translated">i</target>
        </trans-unit>
        <trans-unit id="285ee276a061f3e61631c19895f00dd8d96a145d" translate="yes" xml:space="preserve">
          <source>iOS Safari</source>
          <target state="translated">アイオーエスサファリ</target>
        </trans-unit>
        <trans-unit id="958f57f57d72a30f329ee5538f21b0257a49a46e" translate="yes" xml:space="preserve">
          <source>if</source>
          <target state="translated">if</target>
        </trans-unit>
        <trans-unit id="620b2cf5681acd00543057caa6a3be2b3acf0ad7" translate="yes" xml:space="preserve">
          <source>if it is in an array, the index in the array, as a string</source>
          <target state="translated">配列の中にある場合は、配列のインデックスを文字列で表します。</target>
        </trans-unit>
        <trans-unit id="2b1e4d2fd5184e4c3384679d4c5c493a2c0e3b6b" translate="yes" xml:space="preserve">
          <source>if statement</source>
          <target state="translated">if文</target>
        </trans-unit>
        <trans-unit id="2d50ee3f761815004c0b84a52ad3fbdb0a18543f" translate="yes" xml:space="preserve">
          <source>if the &lt;code&gt;g&lt;/code&gt; flag is not used, only the first complete match and its related capturing groups are returned. In this case, the returned item will have additional properties as described below.</source>
          <target state="translated">&lt;code&gt;g&lt;/code&gt; フラグが使用されていない場合、最初の完全一致とそれに関連するキャプチャグループのみが返されます。この場合、返されるアイテムには、以下に説明する追加のプロパティがあります。</target>
        </trans-unit>
        <trans-unit id="3ab0e61dc78ef245bae0f78a1c713edb4ec8d47b" translate="yes" xml:space="preserve">
          <source>if the values in the array changed the array iterator object values change too.</source>
          <target state="translated">配列の値が変更された場合、配列のイテレータオブジェクトの値も変更されます。</target>
        </trans-unit>
        <trans-unit id="152f960b4d85a9642212c356b68e94fa5ef699ea" translate="yes" xml:space="preserve">
          <source>if this object is a property value, the property name</source>
          <target state="translated">このオブジェクトがプロパティ値の場合、プロパティ名</target>
        </trans-unit>
        <trans-unit id="cb90b175bbf486161e27c5926504c6e389fcf874" translate="yes" xml:space="preserve">
          <source>if you want to obtain capture groups and the global flag is set, you need to use &lt;a href=&quot;../regexp/exec&quot;&gt;&lt;code&gt;RegExp.exec()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">キャプチャグループを取得する必要があり、グローバルフラグが設定されている場合は、代わりに&lt;a href=&quot;../regexp/exec&quot;&gt; &lt;code&gt;RegExp.exec()&lt;/code&gt; &lt;/a&gt;を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="c856d90969d036ec3fcb8633f8cbbaca74e81a89" translate="yes" xml:space="preserve">
          <source>if...else</source>
          <target state="translated">if...else</target>
        </trans-unit>
        <trans-unit id="cf2878d95c414aa6f3af789a535e7827bf5dc114" translate="yes" xml:space="preserve">
          <source>ignore case</source>
          <target state="translated">宅地不明</target>
        </trans-unit>
        <trans-unit id="20357dc25aa9064b7851387e11064e11b7038d5a" translate="yes" xml:space="preserve">
          <source>ignore case; if &lt;code&gt;u&lt;/code&gt; flag is also enabled, use Unicode case folding</source>
          <target state="translated">大文字と小文字を区別しない。場合は &lt;code&gt;u&lt;/code&gt; フラグは、Unicodeケースフォールディングを使用し、また、有効になっています</target>
        </trans-unit>
        <trans-unit id="62fdfbd55d19b2a4671102ad7bca17d875f8207a" translate="yes" xml:space="preserve">
          <source>import</source>
          <target state="translated">import</target>
        </trans-unit>
        <trans-unit id="9edacc8d4e92ad967cf0cdff669d815849ea8f0b" translate="yes" xml:space="preserve">
          <source>import.meta</source>
          <target state="translated">import.meta</target>
        </trans-unit>
        <trans-unit id="af10ef20dd9060bbeead0afbc55381a66af442ef" translate="yes" xml:space="preserve">
          <source>in</source>
          <target state="translated">in</target>
        </trans-unit>
        <trans-unit id="f7706613fdad757d3608ae648abb0dd2c73c3eb3" translate="yes" xml:space="preserve">
          <source>in JavaScript consists of either a string-valued name or a &lt;a href=&quot;../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; and a property descriptor. Further information about property descriptor types and their attributes can be found in &lt;a href=&quot;defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">JavaScriptでは、文字列値の名前または&lt;a href=&quot;../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt;とプロパティ記述子で構成されます。プロパティ記述子のタイプとその属性の詳細については、&lt;a href=&quot;defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty()&lt;/code&gt; を参照してください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="413ba1f0942c1a132eb894f51897583107dbcf31" translate="yes" xml:space="preserve">
          <source>in operator no object</source>
          <target state="translated">演算子内オブジェクトなし</target>
        </trans-unit>
        <trans-unit id="3e6d2e4fabaff9d21f238fee11f3b15872a538cd" translate="yes" xml:space="preserve">
          <source>includes() used as a generic method</source>
          <target state="translated">一般的なメソッドとして使用されるincludes()</target>
        </trans-unit>
        <trans-unit id="42d2821ae9839f3abf8353db7237da128378e35f" translate="yes" xml:space="preserve">
          <source>indexes that have never been set;</source>
          <target state="translated">一度も設定されていないインデックスを</target>
        </trans-unit>
        <trans-unit id="ccfc4a45b6bc06fd8185d86a59c037f27f0e50f5" translate="yes" xml:space="preserve">
          <source>indexes which have been deleted.</source>
          <target state="translated">インデックスを削除しました。</target>
        </trans-unit>
        <trans-unit id="0c4c6b12888e68a0828006f4e252af0b387cc357" translate="yes" xml:space="preserve">
          <source>infinity</source>
          <target state="translated">infinity</target>
        </trans-unit>
        <trans-unit id="ca3abd987362882d19836b9db6894ba4e5a84e8d" translate="yes" xml:space="preserve">
          <source>initial definition.</source>
          <target state="translated">初期定義。</target>
        </trans-unit>
        <trans-unit id="d5845f52f72cdd0a224349f90b9df42a2b0e0e02" translate="yes" xml:space="preserve">
          <source>instanceof</source>
          <target state="translated">instanceof</target>
        </trans-unit>
        <trans-unit id="342110c65522b304d5a399ff0d43d50fb56a48f9" translate="yes" xml:space="preserve">
          <source>instanceof vs typeof</source>
          <target state="translated">インスタンスオブ対タイプオブ</target>
        </trans-unit>
        <trans-unit id="1178cafbd64bbbfa77f5ac0a9d5032ed88162781" translate="yes" xml:space="preserve">
          <source>integer</source>
          <target state="translated">integer</target>
        </trans-unit>
        <trans-unit id="ffca1ac7221e7a44ecc6970824101d5f940567f3" translate="yes" xml:space="preserve">
          <source>invalid right hand side instanceof operand</source>
          <target state="translated">無効なオペランドの右辺のインスタンス</target>
        </trans-unit>
        <trans-unit id="a1ef8fa104fd0d8419241b0364c74ae88c67c2a6" translate="yes" xml:space="preserve">
          <source>is a record with some of the following attributes:</source>
          <target state="translated">は、以下の属性のいくつかを持つレコードです。</target>
        </trans-unit>
        <trans-unit id="1775a2ce97105823d182808fd8d74396dc8a1a1c" translate="yes" xml:space="preserve">
          <source>is always equal to:</source>
          <target state="translated">は常に等しくなります。</target>
        </trans-unit>
        <trans-unit id="0c90f752b5dcfdbfb0c8ffa1e62851d056988765" translate="yes" xml:space="preserve">
          <source>is no longer a &quot;source element&quot; of a function or the script itself. A &quot;source element&quot; is a non-nested statement in the script or a function body:</source>
          <target state="translated">は、もはや関数やスクリプト自体の「ソース要素」ではありません。source 要素」とは、スクリプトまたは関数本体の中の入れ子になっていない文のことです。</target>
        </trans-unit>
        <trans-unit id="6e4afef413c104012a5641cef7934fdf75d3fdbe" translate="yes" xml:space="preserve">
          <source>is not iterable</source>
          <target state="translated">は反復可能ではない</target>
        </trans-unit>
        <trans-unit id="8b32c9794cf4f2a768c9284972d0974a69d9cf82" translate="yes" xml:space="preserve">
          <source>is too big for a 32-bit float, so &lt;code&gt;Infinity&lt;/code&gt; is returned:</source>
          <target state="translated">32ビットfloatには大きすぎるため、 &lt;code&gt;Infinity&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="b67fdbdd42c9c77e341a369021fccc5af5d7f442" translate="yes" xml:space="preserve">
          <source>is transformed by ASI into:</source>
          <target state="translated">はASIで変換されます。</target>
        </trans-unit>
        <trans-unit id="979741cc47e4c601e36f5be3b17222cfe9f52192" translate="yes" xml:space="preserve">
          <source>isFinite</source>
          <target state="translated">isFinite</target>
        </trans-unit>
        <trans-unit id="4c0727d5ef0748bc50009840248ead63f7046a1d" translate="yes" xml:space="preserve">
          <source>isNaN</source>
          <target state="translated">isNaN</target>
        </trans-unit>
        <trans-unit id="a19bd25491cbec6252aa6cdb94662db18ed41820" translate="yes" xml:space="preserve">
          <source>it can be rewritten with a single &lt;code&gt;async&lt;/code&gt; function as follows:</source>
          <target state="translated">次のように、単一の &lt;code&gt;async&lt;/code&gt; 関数で書き換えることができます。</target>
        </trans-unit>
        <trans-unit id="b7400f3dc6286258b8582b52af7b1450755191d4" translate="yes" xml:space="preserve">
          <source>it can be rewritten with a single async function as follows:</source>
          <target state="translated">のように単一の非同期関数で書き換えることができます。</target>
        </trans-unit>
        <trans-unit id="3c49d8f7e49a64bf08b8289179f8c01a62b9e4aa" translate="yes" xml:space="preserve">
          <source>it does not create a variable in the outer scope (&lt;a href=&quot;http://kangax.github.io/nfe/#example_1_function_expression_identifier_leaks_into_an_enclosing_scope&quot;&gt;except for IE 8 and below&lt;/a&gt;)</source>
          <target state="translated">外部スコープに変数を作成しません（&lt;a href=&quot;http://kangax.github.io/nfe/#example_1_function_expression_identifier_leaks_into_an_enclosing_scope&quot;&gt;IE 8以下を除く&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="d33b37d6e0904a907f57bd08f81393b370620320" translate="yes" xml:space="preserve">
          <source>it has better performance than accessing the arguments object</source>
          <target state="translated">は引数オブジェクトにアクセスするよりもパフォーマンスが良いです。</target>
        </trans-unit>
        <trans-unit id="9751000ae5cd125f1118e592914c6dc56226ef53" translate="yes" xml:space="preserve">
          <source>it is converted to a &lt;a href=&quot;boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt;: via the &lt;a href=&quot;boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; function;</source>
          <target state="translated">それがに変換される&lt;a href=&quot;boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;：経由&lt;a href=&quot;boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;機能。</target>
        </trans-unit>
        <trans-unit id="9dd94c6934186333a00e635592ff461c9140c174" translate="yes" xml:space="preserve">
          <source>iterable</source>
          <target state="translated">iterable</target>
        </trans-unit>
        <trans-unit id="002d2635e2a861770336211237bce6c8c8ec190c" translate="yes" xml:space="preserve">
          <source>iterable objects or</source>
          <target state="translated">反復可能オブジェクトまたは</target>
        </trans-unit>
        <trans-unit id="7a08948ba6dfdb8d1bffce04174ab3251992f545" translate="yes" xml:space="preserve">
          <source>iterable protocol</source>
          <target state="translated">逐次接続可能なプロトコル</target>
        </trans-unit>
        <trans-unit id="23524be9dba14bc2f1975b37f95c3381771595c8" translate="yes" xml:space="preserve">
          <source>java</source>
          <target state="translated">java</target>
        </trans-unit>
        <trans-unit id="6f9175492bc8ebc6b0474425c3862f485297c96d" translate="yes" xml:space="preserve">
          <source>jpan</source>
          <target state="translated">jpan</target>
        </trans-unit>
        <trans-unit id="d925fbfeb2d69e41757df0ab6dfda1ebca86c275" translate="yes" xml:space="preserve">
          <source>jpanfin</source>
          <target state="translated">jpanfin</target>
        </trans-unit>
        <trans-unit id="29617581f0d8a88d7b760304d0efd07a82e2c7ef" translate="yes" xml:space="preserve">
          <source>jpanyear</source>
          <target state="translated">jpanyear</target>
        </trans-unit>
        <trans-unit id="e7e971e55af10f713238780785ec5e63720509f0" translate="yes" xml:space="preserve">
          <source>kali</source>
          <target state="translated">kali</target>
        </trans-unit>
        <trans-unit id="a62f2225bf70bfaccbc7f1ef2a397836717377de" translate="yes" xml:space="preserve">
          <source>key</source>
          <target state="translated">key</target>
        </trans-unit>
        <trans-unit id="8c8ce60b4b79e3e5cc4e1ff81aa307aa8be7b37b" translate="yes" xml:space="preserve">
          <source>khmr</source>
          <target state="translated">khmr</target>
        </trans-unit>
        <trans-unit id="9ff90d55fe8cb0a36f64a85569872027d1152958" translate="yes" xml:space="preserve">
          <source>knda</source>
          <target state="translated">knda</target>
        </trans-unit>
        <trans-unit id="64c65374dbab6fe3762748196d9d3a9610e2e5a9" translate="yes" xml:space="preserve">
          <source>label</source>
          <target state="translated">label</target>
        </trans-unit>
        <trans-unit id="cbf61ffd8cce5db2050cb305480c6655f8de74d6" translate="yes" xml:space="preserve">
          <source>lana</source>
          <target state="translated">lana</target>
        </trans-unit>
        <trans-unit id="4c8e1fb677989dbe9c6b4674ec6759e80a418713" translate="yes" xml:space="preserve">
          <source>lanatham</source>
          <target state="translated">lanatham</target>
        </trans-unit>
        <trans-unit id="29dabb1b2c9179384843d2ee2ce3750243af0cc2" translate="yes" xml:space="preserve">
          <source>laoo</source>
          <target state="translated">laoo</target>
        </trans-unit>
        <trans-unit id="f0349fbd95fdc64fc6261e2ce4bc8b783ceb713e" translate="yes" xml:space="preserve">
          <source>latn</source>
          <target state="translated">latn</target>
        </trans-unit>
        <trans-unit id="cb438812d37306f392891b4743c7aecd28c90ce3" translate="yes" xml:space="preserve">
          <source>left-to-right</source>
          <target state="translated">left-to-right</target>
        </trans-unit>
        <trans-unit id="3d54973f528b01019a58a52d34d518405a01b891" translate="yes" xml:space="preserve">
          <source>length</source>
          <target state="translated">length</target>
        </trans-unit>
        <trans-unit id="3aba06427214f4a0bdaff116a2c6002760e6139f" translate="yes" xml:space="preserve">
          <source>lepc</source>
          <target state="translated">lepc</target>
        </trans-unit>
        <trans-unit id="0262f9bb6ecbef4efbae97193c08ec335698a205" translate="yes" xml:space="preserve">
          <source>let</source>
          <target state="translated">let</target>
        </trans-unit>
        <trans-unit id="69f0e8cdc8522d3dad423273146b2e0464621b37" translate="yes" xml:space="preserve">
          <source>limb</source>
          <target state="translated">limb</target>
        </trans-unit>
        <trans-unit id="ef6866ce0a7d40aa9a2c8ad0c3ee75d3b586ab68" translate="yes" xml:space="preserve">
          <source>literal</source>
          <target state="translated">literal</target>
        </trans-unit>
        <trans-unit id="5774df3cfcd6861095884f85f3f9a640539446f2" translate="yes" xml:space="preserve">
          <source>littleEndian</source>
          <target state="translated">littleEndian</target>
        </trans-unit>
        <trans-unit id="3c01627cf1f82343852c754d030ad8d0be18a589" translate="yes" xml:space="preserve">
          <source>ln</source>
          <target state="translated">ln</target>
        </trans-unit>
        <trans-unit id="a8ef94b8490d1705606124b37abd444a64486b3c" translate="yes" xml:space="preserve">
          <source>locales argument</source>
          <target state="translated">ロケール引数</target>
        </trans-unit>
        <trans-unit id="7babc233de26ab19ead1b9c278128d5c434910ee" translate="yes" xml:space="preserve">
          <source>log</source>
          <target state="translated">log</target>
        </trans-unit>
        <trans-unit id="2d0001e1012fb3fee3cfb7e7650b97d1b92a19cb" translate="yes" xml:space="preserve">
          <source>lookbehind assertions (&lt;code&gt;(?&amp;lt;= )&lt;/code&gt; and &lt;code&gt;(?&amp;lt;! )&lt;/code&gt;)</source>
          <target state="translated">後読みアサーション（ &lt;code&gt;(?&amp;lt;= )&lt;/code&gt; および &lt;code&gt;(?&amp;lt;! )&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="6b0d31c0d563223024da45691584643ac78c96e8" translate="yes" xml:space="preserve">
          <source>m</source>
          <target state="translated">m</target>
        </trans-unit>
        <trans-unit id="0f89000aa19d476d42688ea13c42ee8040e514b6" translate="yes" xml:space="preserve">
          <source>map.@@iterator</source>
          <target state="translated">map.@@iterator</target>
        </trans-unit>
        <trans-unit id="3415d133f9f10b81970136490b1596bc40cf36a8" translate="yes" xml:space="preserve">
          <source>map.@@toStringTag</source>
          <target state="translated">map.@@toStringTag</target>
        </trans-unit>
        <trans-unit id="9f6b518cd910bd294bc7ffba8c6a4aef35279274" translate="yes" xml:space="preserve">
          <source>map.clear</source>
          <target state="translated">map.clear</target>
        </trans-unit>
        <trans-unit id="c25dc4e32d4e1b2cfb4f57fca7f03bd0a834a830" translate="yes" xml:space="preserve">
          <source>map.delete</source>
          <target state="translated">map.delete</target>
        </trans-unit>
        <trans-unit id="732cf61bc3086bd138b7e3a18fc85505cbe13cd4" translate="yes" xml:space="preserve">
          <source>map.entries</source>
          <target state="translated">map.entries</target>
        </trans-unit>
        <trans-unit id="58eac27d33040714bfce00a1aa1afb9b8b71b5ea" translate="yes" xml:space="preserve">
          <source>map.forEach</source>
          <target state="translated">map.forEach</target>
        </trans-unit>
        <trans-unit id="44df930ff77ebf9ef05dcf98c8eae39463b130c2" translate="yes" xml:space="preserve">
          <source>map.get</source>
          <target state="translated">map.get</target>
        </trans-unit>
        <trans-unit id="d7f3fad3f4052734d89eb0ff748ab8470dbce6e6" translate="yes" xml:space="preserve">
          <source>map.has</source>
          <target state="translated">map.has</target>
        </trans-unit>
        <trans-unit id="f308a63dc2ffcabe0a721b8e4405aa8b53daf2e5" translate="yes" xml:space="preserve">
          <source>map.keys</source>
          <target state="translated">map.keys</target>
        </trans-unit>
        <trans-unit id="b9bf774208cfa7abb7e2c693eba6a96842c7a8f6" translate="yes" xml:space="preserve">
          <source>map.set</source>
          <target state="translated">map.set</target>
        </trans-unit>
        <trans-unit id="30387e135ef1736c83426e81b7c839e2aa90f7c6" translate="yes" xml:space="preserve">
          <source>map.size</source>
          <target state="translated">map.size</target>
        </trans-unit>
        <trans-unit id="62463d33478f360315e9837b5cf5f1cc00b3e3d6" translate="yes" xml:space="preserve">
          <source>map.values</source>
          <target state="translated">map.values</target>
        </trans-unit>
        <trans-unit id="0c67a8a28822f9313f7688a27f6b54149d6dd1a0" translate="yes" xml:space="preserve">
          <source>mathbold</source>
          <target state="translated">mathbold</target>
        </trans-unit>
        <trans-unit id="5c64a8ac0e07340597d21d3c5155b3756d32a7e5" translate="yes" xml:space="preserve">
          <source>mathdbl</source>
          <target state="translated">mathdbl</target>
        </trans-unit>
        <trans-unit id="860f37d9844042b8127f44fbcc309ba39b533c5e" translate="yes" xml:space="preserve">
          <source>mathmono</source>
          <target state="translated">mathmono</target>
        </trans-unit>
        <trans-unit id="766832a7b5c4d76e844332984f02ae0274167e6a" translate="yes" xml:space="preserve">
          <source>mathsanb</source>
          <target state="translated">mathsanb</target>
        </trans-unit>
        <trans-unit id="10a328c031997f2a50401861a10ebe283227db21" translate="yes" xml:space="preserve">
          <source>mathsans</source>
          <target state="translated">mathsans</target>
        </trans-unit>
        <trans-unit id="5d818da2c6b0162a305ff2f71dfe561c429b0981" translate="yes" xml:space="preserve">
          <source>may be compressed to:</source>
          <target state="translated">に圧縮されることがあります。</target>
        </trans-unit>
        <trans-unit id="9e59e8616eb4be3becf5b8125f947a1e92f95847" translate="yes" xml:space="preserve">
          <source>may be used directly for a coarse emulation by the following function:</source>
          <target state="translated">は、以下の関数で直接粗いエミュレーションを行うことができます。</target>
        </trans-unit>
        <trans-unit id="51a3d0e8cec7bbba9fb634e5766e301e01d6c6e4" translate="yes" xml:space="preserve">
          <source>may be written as this</source>
          <target state="translated">こう書くかもしれません</target>
        </trans-unit>
        <trans-unit id="fb5b3f496437a69ccc8c6d6ee8111f5c6c74897a" translate="yes" xml:space="preserve">
          <source>minusSign</source>
          <target state="translated">minusSign</target>
        </trans-unit>
        <trans-unit id="04987fcab72ade3a87a64267b02a2ad9f8f22484" translate="yes" xml:space="preserve">
          <source>minute</source>
          <target state="translated">minute</target>
        </trans-unit>
        <trans-unit id="a4c79ff3ab76b9702607bc4be14ae560e1bc30b1" translate="yes" xml:space="preserve">
          <source>mlym</source>
          <target state="translated">mlym</target>
        </trans-unit>
        <trans-unit id="494e30accf1811464768f999a4914db9f6306969" translate="yes" xml:space="preserve">
          <source>modi</source>
          <target state="translated">modi</target>
        </trans-unit>
        <trans-unit id="138947b8405b9dd2813d9d824b224eac42f45c70" translate="yes" xml:space="preserve">
          <source>mong</source>
          <target state="translated">mong</target>
        </trans-unit>
        <trans-unit id="021710fa7866431c1dacaa6cd31eeeb47dce64b6" translate="yes" xml:space="preserve">
          <source>month</source>
          <target state="translated">month</target>
        </trans-unit>
        <trans-unit id="fa64a4b4f4c1ff9fed59796a9c15a6377aaa7a74" translate="yes" xml:space="preserve">
          <source>mroo</source>
          <target state="translated">mroo</target>
        </trans-unit>
        <trans-unit id="9235a52b17db18cb3866eb3fe3cc1faff507e710" translate="yes" xml:space="preserve">
          <source>mtei</source>
          <target state="translated">mtei</target>
        </trans-unit>
        <trans-unit id="f175a3a1d2070365c0d5af29619547419e6b037b" translate="yes" xml:space="preserve">
          <source>multiline; treat beginning and end characters (^ and $) as working over multiple lines (i.e., match the beginning or end of &lt;em&gt;each&lt;/em&gt; line (delimited by \n or \r), not only the very beginning or end of the whole input string)</source>
          <target state="translated">複数行; 開始文字と終了文字（^と$）を複数行にわたって機能するものとして扱います（つまり、入力文字列全体の最初または最後だけでなく、&lt;em&gt;各行の&lt;/em&gt;最初または最後（\ nまたは\ rで区切られ&lt;em&gt;ます）&lt;/em&gt;と一致します）</target>
        </trans-unit>
        <trans-unit id="67a9ff9c7d14e9a6544b44e81cb2bd4eb661c2f2" translate="yes" xml:space="preserve">
          <source>mymr</source>
          <target state="translated">mymr</target>
        </trans-unit>
        <trans-unit id="cfd98fd8e162c1bf334c3426cbbc5985ee96ad04" translate="yes" xml:space="preserve">
          <source>mymrshan</source>
          <target state="translated">mymrshan</target>
        </trans-unit>
        <trans-unit id="5eed8f8dbab98d3b11075df28a060dbdca2b8765" translate="yes" xml:space="preserve">
          <source>mymrtlng</source>
          <target state="translated">mymrtlng</target>
        </trans-unit>
        <trans-unit id="d1854cae891ec7b29161ccaf79a24b00c274bdaa" translate="yes" xml:space="preserve">
          <source>n</source>
          <target state="translated">n</target>
        </trans-unit>
        <trans-unit id="50f013532a9770a2c2cfdc38b7581dd01df69b70" translate="yes" xml:space="preserve">
          <source>n/a</source>
          <target state="translated">n/a</target>
        </trans-unit>
        <trans-unit id="11e623a37e87cf7995c466723ec99688d55cae8c" translate="yes" xml:space="preserve">
          <source>nan</source>
          <target state="translated">nan</target>
        </trans-unit>
        <trans-unit id="6f5b01580ce43822444ae4c79edcd0dc789028f1" translate="yes" xml:space="preserve">
          <source>native</source>
          <target state="translated">native</target>
        </trans-unit>
        <trans-unit id="c2a6b03f190dfb2b4aa91f8af8d477a9bc3401dc" translate="yes" xml:space="preserve">
          <source>new</source>
          <target state="translated">new</target>
        </trans-unit>
        <trans-unit id="a1df60e515e43a763502a78924680994655fc1f9" translate="yes" xml:space="preserve">
          <source>new Symbol(...)</source>
          <target state="translated">新しいシンボル(...)</target>
        </trans-unit>
        <trans-unit id="e453d1d3e45b46f4624613d0ed41283e8121317d" translate="yes" xml:space="preserve">
          <source>new line</source>
          <target state="translated">しんせん</target>
        </trans-unit>
        <trans-unit id="c36a44bd8fb5428cef817d9f6c5aaf0f02ee9f66" translate="yes" xml:space="preserve">
          <source>new%2Etarget</source>
          <target state="translated">new%2Etarget</target>
        </trans-unit>
        <trans-unit id="46778fb1d7618dbe69cb264c67cfa8a0d2c207bc" translate="yes" xml:space="preserve">
          <source>new.target</source>
          <target state="translated">new.target</target>
        </trans-unit>
        <trans-unit id="5217796045fd967a4f49f8423950e7a9ef924113" translate="yes" xml:space="preserve">
          <source>new.target in constructors</source>
          <target state="translated">コンストラクタのnew.target</target>
        </trans-unit>
        <trans-unit id="123178658c88042e5eaee22ee1999b2da81e2cb9" translate="yes" xml:space="preserve">
          <source>new.target in function calls</source>
          <target state="translated">関数呼び出しのnew.target</target>
        </trans-unit>
        <trans-unit id="396c7eeeed9524f9181ab73a92406351e9c61872" translate="yes" xml:space="preserve">
          <source>newByteLength</source>
          <target state="translated">newByteLength</target>
        </trans-unit>
        <trans-unit id="d0b375332b596ff81fa6809f06b298ace56efbd7" translate="yes" xml:space="preserve">
          <source>newa</source>
          <target state="translated">newa</target>
        </trans-unit>
        <trans-unit id="3585711c9863b7e6b2e95ed3a7a294ecfabdde48" translate="yes" xml:space="preserve">
          <source>nkoo</source>
          <target state="translated">nkoo</target>
        </trans-unit>
        <trans-unit id="fd1286353570c5703799ba76999323b7c7447b06" translate="yes" xml:space="preserve">
          <source>no</source>
          <target state="translated">no</target>
        </trans-unit>
        <trans-unit id="8e15589a76cb4011f57b152764c711ba4ccda19d" translate="yes" xml:space="preserve">
          <source>non-generator method definitions may not contain the &lt;code&gt;yield&lt;/code&gt; keyword. This means that &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/Legacy_generator_function&quot;&gt;legacy generator functions&lt;/a&gt; won't work either and will throw a &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt;. Always use &lt;code&gt;yield&lt;/code&gt; in conjunction with the asterisk (*).</source>
          <target state="translated">非ジェネレーターメソッドの定義には、 &lt;code&gt;yield&lt;/code&gt; キーワードを含めることはできません。つまり、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/Legacy_generator_function&quot;&gt;レガシージェネレーター関数も機能&lt;/a&gt;せず、&lt;a href=&quot;../global_objects/syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;がスローされます。常に &lt;code&gt;yield&lt;/code&gt; をアスタリスク（*）と組み合わせて使用します。</target>
        </trans-unit>
        <trans-unit id="2be88ca4242c76e8253ac62474851065032d6833" translate="yes" xml:space="preserve">
          <source>null</source>
          <target state="translated">null</target>
        </trans-unit>
        <trans-unit id="af6f73ffa39b50cfadb77d7fcce71ffe9d03c151" translate="yes" xml:space="preserve">
          <source>null and undefined have no properties</source>
          <target state="translated">null および未定義にはプロパティがありません。</target>
        </trans-unit>
        <trans-unit id="761e76901dd50d8d3fdcd0948e27c1a2cc2d2144" translate="yes" xml:space="preserve">
          <source>number.toExponential</source>
          <target state="translated">number.toExponential</target>
        </trans-unit>
        <trans-unit id="ffee047ff2769f774eb638ac1ba348ca156f62a4" translate="yes" xml:space="preserve">
          <source>number.toFixed</source>
          <target state="translated">number.toFixed</target>
        </trans-unit>
        <trans-unit id="5aeeaabe99cfc100a58afd630aaf03555696a76d" translate="yes" xml:space="preserve">
          <source>number.toLocaleString</source>
          <target state="translated">number.toLocaleString</target>
        </trans-unit>
        <trans-unit id="ed19aca201efe9dcf85f90e4677d0ff6cdf7deae" translate="yes" xml:space="preserve">
          <source>number.toPrecision</source>
          <target state="translated">number.toPrecision</target>
        </trans-unit>
        <trans-unit id="515d3896e9dde9eaf974e83086574e748707e7bf" translate="yes" xml:space="preserve">
          <source>number.toString</source>
          <target state="translated">number.toString</target>
        </trans-unit>
        <trans-unit id="c61d535a68ff7165609f7df3d86222d40aceca74" translate="yes" xml:space="preserve">
          <source>number.valueOf</source>
          <target state="translated">number.valueOf</target>
        </trans-unit>
        <trans-unit id="1615307cc4523f183e777df67f168c86908e8007" translate="yes" xml:space="preserve">
          <source>object</source>
          <target state="translated">object</target>
        </trans-unit>
        <trans-unit id="3f571094289a54633127b5d5caf5f29085689f8f" translate="yes" xml:space="preserve">
          <source>object.__defineGetter__</source>
          <target state="translated">object.__defineGetter__</target>
        </trans-unit>
        <trans-unit id="4bf8bb329bd0981327f260d6d57c63d7a7a2e849" translate="yes" xml:space="preserve">
          <source>object.__defineSetter__</source>
          <target state="translated">object.__defineSetter__</target>
        </trans-unit>
        <trans-unit id="e0ec1254d279d51e3cc4e8ce680617c44d69413f" translate="yes" xml:space="preserve">
          <source>object.__lookupGetter__</source>
          <target state="translated">object.__lookupGetter__</target>
        </trans-unit>
        <trans-unit id="d9970df936321d14be6b69291ae833d170269f4f" translate="yes" xml:space="preserve">
          <source>object.__lookupSetter__</source>
          <target state="translated">object.__lookupSetter__</target>
        </trans-unit>
        <trans-unit id="dd9c87f3be7516886c163aa53425a686888eac3f" translate="yes" xml:space="preserve">
          <source>object.constructor</source>
          <target state="translated">object.constructor</target>
        </trans-unit>
        <trans-unit id="0a22d3a78bdc047d09eeefec070d040a91b14a7c" translate="yes" xml:space="preserve">
          <source>object.hasOwnProperty</source>
          <target state="translated">object.hasOwnProperty</target>
        </trans-unit>
        <trans-unit id="3139a4634597326eab02f8c7b350e46f7a0453a2" translate="yes" xml:space="preserve">
          <source>object.isPrototypeOf</source>
          <target state="translated">object.isPrototypeOf</target>
        </trans-unit>
        <trans-unit id="077529b21c94032be1e1d38c701c05ac83850da8" translate="yes" xml:space="preserve">
          <source>object.propertyIsEnumerable</source>
          <target state="translated">object.propertyIsEnumerable</target>
        </trans-unit>
        <trans-unit id="beefef8b8597915489af87ad135e65d8accc176a" translate="yes" xml:space="preserve">
          <source>object.toLocaleString</source>
          <target state="translated">object.toLocaleString</target>
        </trans-unit>
        <trans-unit id="1a53104bdfadb7a1edc2623e97e0bf9d23274ad4" translate="yes" xml:space="preserve">
          <source>object.toString</source>
          <target state="translated">object.toString</target>
        </trans-unit>
        <trans-unit id="e54387fc2d1d5064118d3b8b3796cee785cfc1f2" translate="yes" xml:space="preserve">
          <source>object.unwatch</source>
          <target state="translated">object.unwatch</target>
        </trans-unit>
        <trans-unit id="b213d3a03f155be6a7f702bad9563f6815a99172" translate="yes" xml:space="preserve">
          <source>object.valueOf</source>
          <target state="translated">object.valueOf</target>
        </trans-unit>
        <trans-unit id="1b43b5e8dcce50a3c0da5dd0a2f8c3bb26d2e9f7" translate="yes" xml:space="preserve">
          <source>object.watch</source>
          <target state="translated">object.watch</target>
        </trans-unit>
        <trans-unit id="4f0e088853eb2ffb7e5fc5f12e63002ed59d7b19" translate="yes" xml:space="preserve">
          <source>offset Optional</source>
          <target state="translated">オフセット オプション</target>
        </trans-unit>
        <trans-unit id="5a2f2cfa2727638341a87cf4bf50c1348166fca0" translate="yes" xml:space="preserve">
          <source>olck</source>
          <target state="translated">olck</target>
        </trans-unit>
        <trans-unit id="c76b8ad00e8f1b960fe8658c67fe13f333a40526" translate="yes" xml:space="preserve">
          <source>onRejected</source>
          <target state="translated">onRejected</target>
        </trans-unit>
        <trans-unit id="fe05bcdcdc4928012781a5f1a2a77cbb5398e106" translate="yes" xml:space="preserve">
          <source>one</source>
          <target state="translated">one</target>
        </trans-unit>
        <trans-unit id="2f38e231a6dc57f63d50c2a35e06be35382a1061" translate="yes" xml:space="preserve">
          <source>options argument</source>
          <target state="translated">オプション引数</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="39e41ba9f242d6b62666a4c9141da2c330fa597d" translate="yes" xml:space="preserve">
          <source>or &lt;code&gt;&quot;auto&quot;&lt;/code&gt; (e.g., &lt;code&gt;yesterday&lt;/code&gt;). The &lt;code&gt;&quot;auto&quot;&lt;/code&gt; value allows to not always have to use numeric values in the output.</source>
          <target state="translated">または &lt;code&gt;&quot;auto&quot;&lt;/code&gt; （例： &lt;code&gt;yesterday&lt;/code&gt; ）。 &lt;code&gt;&quot;auto&quot;&lt;/code&gt; 値は常に出力に数値を使用する必要はありませんすることができます。</target>
        </trans-unit>
        <trans-unit id="777f7c30e7bb31b2cbf7c4bcd91d14358266c6e0" translate="yes" xml:space="preserve">
          <source>or &lt;code&gt;&quot;narrow&quot;&lt;/code&gt; (e.g., &lt;code&gt;in 1 mo.&lt;/code&gt;). The narrow style could be similar to the short style for some locales.</source>
          <target state="translated">または &lt;code&gt;&quot;narrow&quot;&lt;/code&gt; （たとえば、 &lt;code&gt;in 1 mo.&lt;/code&gt; ）。狭いスタイルは、一部のロケールの短いスタイルに似ている可能性があります。</target>
        </trans-unit>
        <trans-unit id="b3116f9fa8b5011a82cfff9565f4c37468a7eced" translate="yes" xml:space="preserve">
          <source>or assign parent constructor identifier to a separate property on the Child constructor function and access it via that property:</source>
          <target state="translated">または、親コンストラクタの識別子を子コンストラクタ関数の別のプロパティに代入し、そのプロパティを介してアクセスします。</target>
        </trans-unit>
        <trans-unit id="2b0653885764eb3d9e41eaae3ec3044092c6da8b" translate="yes" xml:space="preserve">
          <source>or both non-zero and both not &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; and both have the same value</source>
          <target state="translated">または、両方ともゼロではなく、両方とも&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;ではなく、両方とも同じ値を持っている</target>
        </trans-unit>
        <trans-unit id="9be8aae540f313b51e3f77df7a3bdf0e8099c36e" translate="yes" xml:space="preserve">
          <source>or using only one call to the &lt;a href=&quot;exp&quot;&gt;&lt;code&gt;Math.exp()&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">または、&lt;a href=&quot;exp&quot;&gt; &lt;code&gt;Math.exp()&lt;/code&gt; &lt;/a&gt;関数の呼び出しを1つだけ使用します。</target>
        </trans-unit>
        <trans-unit id="ad346d0eff7445e360cf4253f51a33e501187089" translate="yes" xml:space="preserve">
          <source>or, you can use the simple, ready-to-deploy polyfill listed below:</source>
          <target state="translated">または、以下に記載されているシンプルですぐに展開可能なポリフィルを使用することができます。</target>
        </trans-unit>
        <trans-unit id="1d9ad0addee82809659247e9008e6f9e82aa9000" translate="yes" xml:space="preserve">
          <source>or:</source>
          <target state="translated">or:</target>
        </trans-unit>
        <trans-unit id="c74cd6410ee5fb19d684869f75d0d9bc8f612100" translate="yes" xml:space="preserve">
          <source>orya</source>
          <target state="translated">orya</target>
        </trans-unit>
        <trans-unit id="f773dd0f1939c9b74276623fc22c70976fb21f0b" translate="yes" xml:space="preserve">
          <source>osma</source>
          <target state="translated">osma</target>
        </trans-unit>
        <trans-unit id="69a127ba66dfcff9225a313eb24ba263816184d9" translate="yes" xml:space="preserve">
          <source>own property</source>
          <target state="translated">持ち家</target>
        </trans-unit>
        <trans-unit id="8b69d539e6cae18c0e8fbf5a4a45fb495beaef6f" translate="yes" xml:space="preserve">
          <source>parseFloat</source>
          <target state="translated">parseFloat</target>
        </trans-unit>
        <trans-unit id="917acb49e91741568c4f99f7f570a1722f605547" translate="yes" xml:space="preserve">
          <source>parseInt</source>
          <target state="translated">parseInt</target>
        </trans-unit>
        <trans-unit id="f0be3e8a943b4791d7f0ce1da9b9c156b732e6c8" translate="yes" xml:space="preserve">
          <source>passing a value that is not one of the allowed string values to &lt;a href=&quot;string/normalize&quot;&gt;&lt;code&gt;String.prototype.normalize()&lt;/code&gt;&lt;/a&gt;, or</source>
          <target state="translated">許可された文字列値の1つではない値を&lt;a href=&quot;string/normalize&quot;&gt; &lt;code&gt;String.prototype.normalize()&lt;/code&gt; &lt;/a&gt;に渡す、または</target>
        </trans-unit>
        <trans-unit id="445d327f43b2d1c57aafcde4d4167880e20c57ca" translate="yes" xml:space="preserve">
          <source>percentSign</source>
          <target state="translated">percentSign</target>
        </trans-unit>
        <trans-unit id="39239c79a30dd711064b38d91a4e0fa44a7a64b4" translate="yes" xml:space="preserve">
          <source>phonebk</source>
          <target state="translated">phonebk</target>
        </trans-unit>
        <trans-unit id="6b721b3d42266d5ce3901b4fe22bed75cf296534" translate="yes" xml:space="preserve">
          <source>phonetic</source>
          <target state="translated">phonetic</target>
        </trans-unit>
        <trans-unit id="beca9bd1d341bf69cd9df2487d6ec5fdbd5568e8" translate="yes" xml:space="preserve">
          <source>pinyin</source>
          <target state="translated">pinyin</target>
        </trans-unit>
        <trans-unit id="1e5a97a3a98d370c9a58a1b90a37e1d0a31dbf09" translate="yes" xml:space="preserve">
          <source>pluralRules.resolvedOptions</source>
          <target state="translated">pluralRules.resolvedOptions</target>
        </trans-unit>
        <trans-unit id="490539abdf359b87735b867814985f951b46c24a" translate="yes" xml:space="preserve">
          <source>pluralRules.select</source>
          <target state="translated">pluralRules.select</target>
        </trans-unit>
        <trans-unit id="b29b38bead792757f1923931bbf9d39a7242cae1" translate="yes" xml:space="preserve">
          <source>plusSign</source>
          <target state="translated">plusSign</target>
        </trans-unit>
        <trans-unit id="9756bf34197685c9e3b6079acb251c421037a957" translate="yes" xml:space="preserve">
          <source>primitive</source>
          <target state="translated">primitive</target>
        </trans-unit>
        <trans-unit id="c80b3c99de8b6b5cf1bb1bfeda688e55ac49bd53" translate="yes" xml:space="preserve">
          <source>promise.catch</source>
          <target state="translated">promise.catch</target>
        </trans-unit>
        <trans-unit id="f9d07ab8cc58db82a47ae8f71f64b443c7f3d541" translate="yes" xml:space="preserve">
          <source>promise.finally</source>
          <target state="translated">promise.finally</target>
        </trans-unit>
        <trans-unit id="f3151d3e17f3deffd878eb2559aff8409cf0b28e" translate="yes" xml:space="preserve">
          <source>promise.then</source>
          <target state="translated">promise.then</target>
        </trans-unit>
        <trans-unit id="269fe3733d17108a2c6f28ff0aaeaf65f4705adc" translate="yes" xml:space="preserve">
          <source>property</source>
          <target state="translated">property</target>
        </trans-unit>
        <trans-unit id="4993986ccb84fe6b784e1cda07553d2dce6c49c9" translate="yes" xml:space="preserve">
          <source>property accessors</source>
          <target state="translated">プロパティアクセサ</target>
        </trans-unit>
        <trans-unit id="a4234d09ee53dddfd545889d05400af4c784f26d" translate="yes" xml:space="preserve">
          <source>property descriptor</source>
          <target state="translated">プロパティ記述子</target>
        </trans-unit>
        <trans-unit id="22ea1c649c82946aa6e479e1ffd321e4a318b1b0" translate="yes" xml:space="preserve">
          <source>q</source>
          <target state="translated">q</target>
        </trans-unit>
        <trans-unit id="4dc7c9ec434ed06502767136789763ec11d2c4b7" translate="yes" xml:space="preserve">
          <source>r</source>
          <target state="translated">r</target>
        </trans-unit>
        <trans-unit id="606c032d8d356a8fa42f14d29a7ff1b7594acb62" translate="yes" xml:space="preserve">
          <source>radians for &lt;code&gt;x&lt;/code&gt; between -1 and 1. If the value of &lt;code&gt;x&lt;/code&gt; is outside this range, it returns &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">用ラジアン &lt;code&gt;x&lt;/code&gt; の値との間の場合-1から1 &lt;code&gt;x&lt;/code&gt; がこの範囲外であり、それは返し&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="faf44d3bcf26b08408b3f6b45e2f50bdede16cc5" translate="yes" xml:space="preserve">
          <source>radians for &lt;var&gt;x&lt;/var&gt; between -1 and 1. If the value of &lt;var&gt;x&lt;/var&gt; is outside this range, it returns &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">用ラジアン &lt;var&gt;x&lt;/var&gt; の値との間の場合-1から1 &lt;var&gt;x&lt;/var&gt; がこの範囲外であり、それは返し&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5cb9d9632e1fa210fd910c620d5ed485bb170455" translate="yes" xml:space="preserve">
          <source>radians.</source>
          <target state="translated">radians.</target>
        </trans-unit>
        <trans-unit id="7947e92e3c8e49d85a930b90886dfbfd756ad636" translate="yes" xml:space="preserve">
          <source>reason</source>
          <target state="translated">reason</target>
        </trans-unit>
        <trans-unit id="8029e7aeed18f84687c0f56483371e53eb6d6a22" translate="yes" xml:space="preserve">
          <source>receiver</source>
          <target state="translated">receiver</target>
        </trans-unit>
        <trans-unit id="bcb3e639adab2743bbeab3c7bc4b6005c977c06e" translate="yes" xml:space="preserve">
          <source>receiver Optional</source>
          <target state="translated">受信機 オプション</target>
        </trans-unit>
        <trans-unit id="e8fa77dffcb04a7e2bc93bac841bb2ddcc3e5f70" translate="yes" xml:space="preserve">
          <source>reduce + concat + isArray + recursivity</source>
          <target state="translated">reduce+concat+isArray+recursivity</target>
        </trans-unit>
        <trans-unit id="e0a69da09aea1ad67bc9cc0e1d45933862933b4c" translate="yes" xml:space="preserve">
          <source>reduce and concat</source>
          <target state="translated">縮合</target>
        </trans-unit>
        <trans-unit id="df27871ab4418b55f3456743fd57c1901e9fa9f2" translate="yes" xml:space="preserve">
          <source>reformed</source>
          <target state="translated">reformed</target>
        </trans-unit>
        <trans-unit id="3243628cf6a6e3641fe06cbe07c538ed179aa317" translate="yes" xml:space="preserve">
          <source>regExp.@@match</source>
          <target state="translated">regExp.@@match</target>
        </trans-unit>
        <trans-unit id="490f0a7af389dc73b98e79c4c2d0a7070b1d6bfd" translate="yes" xml:space="preserve">
          <source>regExp.@@matchAll</source>
          <target state="translated">regExp.@@matchAll</target>
        </trans-unit>
        <trans-unit id="349743864d44f619b513e1b7a2592e8e864ff9cf" translate="yes" xml:space="preserve">
          <source>regExp.@@replace</source>
          <target state="translated">regExp.@@replace</target>
        </trans-unit>
        <trans-unit id="7a6b36aa8d529e4200eb1ebc44ceb94eab835479" translate="yes" xml:space="preserve">
          <source>regExp.@@search</source>
          <target state="translated">regExp.@@search</target>
        </trans-unit>
        <trans-unit id="987c4556c7ffba35844a9869c5738aaad2093c90" translate="yes" xml:space="preserve">
          <source>regExp.@@split</source>
          <target state="translated">regExp.@@split</target>
        </trans-unit>
        <trans-unit id="670092a568166b0f27be201db3be7d2d0dbb8923" translate="yes" xml:space="preserve">
          <source>regExp.compile</source>
          <target state="translated">regExp.compile</target>
        </trans-unit>
        <trans-unit id="4bac72f469a2a5d761eee94eea951134cc18d2b0" translate="yes" xml:space="preserve">
          <source>regExp.dotAll</source>
          <target state="translated">regExp.dotAll</target>
        </trans-unit>
        <trans-unit id="625ddc14e1b0b3f640653bf3383ac3db5ee57cd4" translate="yes" xml:space="preserve">
          <source>regExp.exec</source>
          <target state="translated">regExp.exec</target>
        </trans-unit>
        <trans-unit id="53ddeffffeea926b26e74d951ba97b5b3fe4380e" translate="yes" xml:space="preserve">
          <source>regExp.flags</source>
          <target state="translated">regExp.flags</target>
        </trans-unit>
        <trans-unit id="3ea3c311490614c38e689d80d9cfb84f51462eb7" translate="yes" xml:space="preserve">
          <source>regExp.global</source>
          <target state="translated">regExp.global</target>
        </trans-unit>
        <trans-unit id="e14dcef3e3f0bf75e1e344c01bd4fbe8da67cb01" translate="yes" xml:space="preserve">
          <source>regExp.ignoreCase</source>
          <target state="translated">regExp.ignoreCase</target>
        </trans-unit>
        <trans-unit id="e67e6458812a91381087a903e39295eb8de833b5" translate="yes" xml:space="preserve">
          <source>regExp.lastIndex</source>
          <target state="translated">regExp.lastIndex</target>
        </trans-unit>
        <trans-unit id="5b42a1ff3d6283a16e525e8001ca4be4bd879306" translate="yes" xml:space="preserve">
          <source>regExp.multiline</source>
          <target state="translated">regExp.multiline</target>
        </trans-unit>
        <trans-unit id="eee7438e7be8c6ade122972e5ff6c2f520f6fbe7" translate="yes" xml:space="preserve">
          <source>regExp.source</source>
          <target state="translated">regExp.source</target>
        </trans-unit>
        <trans-unit id="8c5b7c198ca745c13055d3c0b8eed97bc91c80a5" translate="yes" xml:space="preserve">
          <source>regExp.sticky</source>
          <target state="translated">regExp.sticky</target>
        </trans-unit>
        <trans-unit id="b8a3cd83de0e737038e470faa2331a8a87cd34bc" translate="yes" xml:space="preserve">
          <source>regExp.test</source>
          <target state="translated">regExp.test</target>
        </trans-unit>
        <trans-unit id="3e91edc3e5568860bf2b5a52dc4c5cca769aff87" translate="yes" xml:space="preserve">
          <source>regExp.toString</source>
          <target state="translated">regExp.toString</target>
        </trans-unit>
        <trans-unit id="5e33c7bc7fb3c997441fc20621d5b920269f1d25" translate="yes" xml:space="preserve">
          <source>regExp.unicode</source>
          <target state="translated">regExp.unicode</target>
        </trans-unit>
        <trans-unit id="6e3988f50980a9340c7dd39b899953243099e772" translate="yes" xml:space="preserve">
          <source>relatedYear</source>
          <target state="translated">relatedYear</target>
        </trans-unit>
        <trans-unit id="bc2e97ff3466052ef2bda65201b84eab9fc4189b" translate="yes" xml:space="preserve">
          <source>replacementValue</source>
          <target state="translated">replacementValue</target>
        </trans-unit>
        <trans-unit id="8c9e0cc2c3e56059facc06eaa8e642723d873428" translate="yes" xml:space="preserve">
          <source>rest parameters</source>
          <target state="translated">休止パラメータ</target>
        </trans-unit>
        <trans-unit id="97c54b0ec60874eab6c023520f4e23c0c8febb1e" translate="yes" xml:space="preserve">
          <source>rest parameters are only the ones that haven't been given a separate name (i.e. formally defined in function expression), while the &lt;code&gt;arguments&lt;/code&gt; object contains all arguments passed to the function;</source>
          <target state="translated">残りのパラメーターは、別の名前が付けられていない（つまり、関数式で正式に定義されていない）パラメーターのみですが、 &lt;code&gt;arguments&lt;/code&gt; オブジェクトには、関数に渡されるすべての引数が含まれます。</target>
        </trans-unit>
        <trans-unit id="63143b6f8007b98c53ca2149822777b3566f9241" translate="yes" xml:space="preserve">
          <source>return</source>
          <target state="translated">return</target>
        </trans-unit>
        <trans-unit id="090ea0bea2c1e4e46048f9fb3d7cebb353632a5c" translate="yes" xml:space="preserve">
          <source>return await promiseValue vs. return promiseValue</source>
          <target state="translated">return await promiseValue と return promiseValue の比較</target>
        </trans-unit>
        <trans-unit id="4b673e3d91d15533a711320f5074c0c3f2029959" translate="yes" xml:space="preserve">
          <source>return value</source>
          <target state="translated">戻り値</target>
        </trans-unit>
        <trans-unit id="4620b1acfe485995d56ad6cdd0da1e5d99a7c41a" translate="yes" xml:space="preserve">
          <source>returns a value, the promise returned by &lt;code&gt;then&lt;/code&gt; gets resolved with the returned value as its value.</source>
          <target state="translated">値を返します。 &lt;code&gt;then&lt;/code&gt; によって返されるpromiseは、戻り値を値として解決されます。</target>
        </trans-unit>
        <trans-unit id="0bde6f41d6c6c4ce20c117c8b5c7386dcf1b1d8a" translate="yes" xml:space="preserve">
          <source>returns a value, the promise returned by &lt;code&gt;then&lt;/code&gt; gets resolved with the returned value as its value;</source>
          <target state="translated">値を返します。 &lt;code&gt;then&lt;/code&gt; に返されたpromiseは、返された値を値として解決されます。</target>
        </trans-unit>
        <trans-unit id="0d51153783709114ecf3d718b8d2c5a276b69dc9" translate="yes" xml:space="preserve">
          <source>returns an already fulfilled promise, the promise returned by &lt;code&gt;then&lt;/code&gt; gets fulfilled with that promise's value as its value.</source>
          <target state="translated">すでに履行された約束を返します。 &lt;code&gt;then&lt;/code&gt; に返された約束は、その約束の値をその値として履行されます。</target>
        </trans-unit>
        <trans-unit id="5941a3703b85dcb97ac5b632ae5311a45d765559" translate="yes" xml:space="preserve">
          <source>returns an already rejected promise, the promise returned by &lt;code&gt;then&lt;/code&gt; gets rejected with that promise's value as its value.</source>
          <target state="translated">すでに拒否されたプロミスを返します。 &lt;code&gt;then&lt;/code&gt; に返されたプロミスは、そのプロミスの値を値として拒否されます。</target>
        </trans-unit>
        <trans-unit id="b642cfbd27b0ccaa59eced67e580b6fc541e73be" translate="yes" xml:space="preserve">
          <source>returns an already rejected promise, the promise returned by &lt;code&gt;then&lt;/code&gt; gets rejected with that promise's value as its value;</source>
          <target state="translated">すでに拒否されたpromiseを返します。 &lt;code&gt;then&lt;/code&gt; に返されたpromiseは、そのpromiseの値を値として拒否されます。</target>
        </trans-unit>
        <trans-unit id="f08d7e745e920893c59bf28da45117f2c9de7c01" translate="yes" xml:space="preserve">
          <source>returns an already resolved promise, the promise returned by &lt;code&gt;then&lt;/code&gt; gets resolved with that promise's value as its value;</source>
          <target state="translated">すでに解決されたpromiseを返します。 &lt;code&gt;then&lt;/code&gt; に返されたpromiseは、そのpromiseの値を値として解決されます。</target>
        </trans-unit>
        <trans-unit id="339251834fbfa8024ac8cff609a2241b3c21dbfa" translate="yes" xml:space="preserve">
          <source>returns another &lt;strong&gt;pending&lt;/strong&gt; promise object, the resolution/rejection of the promise returned by &lt;code&gt;then&lt;/code&gt; will be subsequent to the resolution/rejection of the promise returned by the handler. Also, the resolved value of the promise returned by &lt;code&gt;then&lt;/code&gt; will be the same as the resolved value of the promise returned by the handler.</source>
          <target state="translated">別の&lt;strong&gt;保留中の&lt;/strong&gt;promiseオブジェクトを返します。それまでに返されたpromiseの解決/拒否は、ハンドラーによって返されたpromiseの解決/拒否の &lt;code&gt;then&lt;/code&gt; なります。また、 &lt;code&gt;then&lt;/code&gt; までに返されるPromiseの解決済みの値は、ハンドラーによって返されるPromiseの解決済みの値と同じになります。</target>
        </trans-unit>
        <trans-unit id="0b9f913ea9e3bb74f59b34089620f3c1a7f80702" translate="yes" xml:space="preserve">
          <source>returns another &lt;strong&gt;pending&lt;/strong&gt; promise object, the resolution/rejection of the promise returned by &lt;code&gt;then&lt;/code&gt; will be subsequent to the resolution/rejection of the promise returned by the handler. Also, the value of the promise returned by &lt;code&gt;then&lt;/code&gt; will be the same as the value of the promise returned by the handler.</source>
          <target state="translated">戻って別の&lt;strong&gt;保留中の&lt;/strong&gt;約束のオブジェクトによって返された約束の解像度/拒否 &lt;code&gt;then&lt;/code&gt; 、ハンドラによって返された約束の解像度/拒否の後になります。また、 &lt;code&gt;then&lt;/code&gt; によって返されるpromise の値は、ハンドラーによって返されるpromiseの値と同じになります。</target>
        </trans-unit>
        <trans-unit id="7f59019f30d6106110473eb53ad0ea0ba9063180" translate="yes" xml:space="preserve">
          <source>right-to-left</source>
          <target state="translated">right-to-left</target>
        </trans-unit>
        <trans-unit id="40d222a4a8b5f17a8fdade5cfa49f7f0355af055" translate="yes" xml:space="preserve">
          <source>rohg</source>
          <target state="translated">rohg</target>
        </trans-unit>
        <trans-unit id="238a1843d81dd7fbe80b5c1b99515c4ba8c94d0d" translate="yes" xml:space="preserve">
          <source>roman</source>
          <target state="translated">roman</target>
        </trans-unit>
        <trans-unit id="a04945e78e754e8ecf65182ea7e72b0334dc7fca" translate="yes" xml:space="preserve">
          <source>romanlow</source>
          <target state="translated">romanlow</target>
        </trans-unit>
        <trans-unit id="a0f1490a20d0211c997b44bc357e1972deab8ae3" translate="yes" xml:space="preserve">
          <source>s</source>
          <target state="translated">s</target>
        </trans-unit>
        <trans-unit id="d97908f36dc40b0e3d41859dc40b3c5a6288a8d8" translate="yes" xml:space="preserve">
          <source>safe integer</source>
          <target state="translated">安全整数</target>
        </trans-unit>
        <trans-unit id="147e806861dff05690910baf72a088a8580bdb1e" translate="yes" xml:space="preserve">
          <source>saur</source>
          <target state="translated">saur</target>
        </trans-unit>
        <trans-unit id="3559d7accf00360971961ca18989adc0614089c0" translate="yes" xml:space="preserve">
          <source>search</source>
          <target state="translated">search</target>
        </trans-unit>
        <trans-unit id="219ea1c8de5fb0f52a74f827e9407ba80651ef39" translate="yes" xml:space="preserve">
          <source>searchjl</source>
          <target state="translated">searchjl</target>
        </trans-unit>
        <trans-unit id="352f7829a2384b001cc12b0c2613c756454a1f6a" translate="yes" xml:space="preserve">
          <source>second</source>
          <target state="translated">second</target>
        </trans-unit>
        <trans-unit id="0910a2285d14fbdae466673ddd477152d952cf36" translate="yes" xml:space="preserve">
          <source>second call</source>
          <target state="translated">再召集</target>
        </trans-unit>
        <trans-unit id="65c10dc3549fe07424148a8a4790a3341ecbc253" translate="yes" xml:space="preserve">
          <source>set</source>
          <target state="translated">set</target>
        </trans-unit>
        <trans-unit id="881d05e43191d1fbc6ecf319b7341ce5da4f4c8f" translate="yes" xml:space="preserve">
          <source>set.@@iterator</source>
          <target state="translated">set.@@iterator</target>
        </trans-unit>
        <trans-unit id="52d3c1c4f13de43506ea67933db5222b11b62533" translate="yes" xml:space="preserve">
          <source>set.add</source>
          <target state="translated">set.add</target>
        </trans-unit>
        <trans-unit id="ae8a428f16d3058c0ef681ceece84374a14135b5" translate="yes" xml:space="preserve">
          <source>set.clear</source>
          <target state="translated">set.clear</target>
        </trans-unit>
        <trans-unit id="3c230db741e3e88118988adb913d93f84d87a7e1" translate="yes" xml:space="preserve">
          <source>set.delete</source>
          <target state="translated">set.delete</target>
        </trans-unit>
        <trans-unit id="cc6186ede7e3f0008fe0cbf6c63d38570ac3dd44" translate="yes" xml:space="preserve">
          <source>set.entries</source>
          <target state="translated">set.entries</target>
        </trans-unit>
        <trans-unit id="32a39fb8526ac8774411f7523d10262d9ac80434" translate="yes" xml:space="preserve">
          <source>set.forEach</source>
          <target state="translated">set.forEach</target>
        </trans-unit>
        <trans-unit id="36f202f1729bbb061103015b1f9eca7840f5c4f1" translate="yes" xml:space="preserve">
          <source>set.has</source>
          <target state="translated">set.has</target>
        </trans-unit>
        <trans-unit id="d8c508e3f3bdd679aacaec1d6dacda4956b4f360" translate="yes" xml:space="preserve">
          <source>set.size</source>
          <target state="translated">set.size</target>
        </trans-unit>
        <trans-unit id="a77b65f46ef50bdfb7fa0a658e0b771e5a621d5b" translate="yes" xml:space="preserve">
          <source>set.values</source>
          <target state="translated">set.values</target>
        </trans-unit>
        <trans-unit id="02ac648906a6828f331d73e868fceca24e06da77" translate="yes" xml:space="preserve">
          <source>setter</source>
          <target state="translated">setter</target>
        </trans-unit>
        <trans-unit id="1ce1b79108137320100f5a565f4d1ef59f7b9f94" translate="yes" xml:space="preserve">
          <source>shared &lt;em&gt;Optional&lt;/em&gt;</source>
          <target state="translated">共有&lt;em&gt;オプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e28aaa882db1b53544f98c7df8da8a076cfe5055" translate="yes" xml:space="preserve">
          <source>sharedArrayBuffer.byteLength</source>
          <target state="translated">sharedArrayBuffer.byteLength</target>
        </trans-unit>
        <trans-unit id="82312f6caf7e17af71e38945ee6cc0028e3c5481" translate="yes" xml:space="preserve">
          <source>sharedArrayBuffer.slice</source>
          <target state="translated">sharedArrayBuffer.slice</target>
        </trans-unit>
        <trans-unit id="1c060580ebceb0589a3ed8a86dec67c5ca32f6a0" translate="yes" xml:space="preserve">
          <source>shrd</source>
          <target state="translated">shrd</target>
        </trans-unit>
        <trans-unit id="7d14c04a713a160cb60e929cea38887511c6bbc4" translate="yes" xml:space="preserve">
          <source>sin</source>
          <target state="translated">sin</target>
        </trans-unit>
        <trans-unit id="7377a06f3bdb0cdd25764c691dfc99d517a3b4c8" translate="yes" xml:space="preserve">
          <source>sind</source>
          <target state="translated">sind</target>
        </trans-unit>
        <trans-unit id="44817ac90b4676f63ab6aa851d0d68fe7668eb1d" translate="yes" xml:space="preserve">
          <source>single quote</source>
          <target state="translated">シングルクォート</target>
        </trans-unit>
        <trans-unit id="688cfd5ead85788c8aadc47c592b985a6022dc06" translate="yes" xml:space="preserve">
          <source>sinh</source>
          <target state="translated">sinh</target>
        </trans-unit>
        <trans-unit id="eb1e99dc61096414b23d2aefb10ef18ffa92975b" translate="yes" xml:space="preserve">
          <source>so if you tried to get the stack trace in the &lt;code&gt;stop()&lt;/code&gt; function like this:</source>
          <target state="translated">したがって、次のように &lt;code&gt;stop()&lt;/code&gt; 関数でスタックトレースを取得しようとした場合：</target>
        </trans-unit>
        <trans-unit id="02b6080771e13cba132660d309ab04aad7fc5849" translate="yes" xml:space="preserve">
          <source>so this can be emulated by the following function:</source>
          <target state="translated">であるため、これは次の関数でエミュレートすることができます。</target>
        </trans-unit>
        <trans-unit id="05d3fe3905f98ae89213fefee6827df133f2b2a1" translate="yes" xml:space="preserve">
          <source>sora</source>
          <target state="translated">sora</target>
        </trans-unit>
        <trans-unit id="0803df4ff1650933d2ffe6be04d4b21432134252" translate="yes" xml:space="preserve">
          <source>space</source>
          <target state="translated">space</target>
        </trans-unit>
        <trans-unit id="f410e0466ae4b065bfa4d9010ad6056864ed4e50" translate="yes" xml:space="preserve">
          <source>standard</source>
          <target state="translated">standard</target>
        </trans-unit>
        <trans-unit id="a381562afa0e16c5548e829b2f1a659a8c2e7c11" translate="yes" xml:space="preserve">
          <source>static</source>
          <target state="translated">static</target>
        </trans-unit>
        <trans-unit id="f516225e2192ae0cfbcbe5c4dc336ec0c8d5196d" translate="yes" xml:space="preserve">
          <source>sticky; matches only from the index indicated by the &lt;code&gt;lastIndex&lt;/code&gt; property of this regular expression in the target string (and does not attempt to match from any later indexes).</source>
          <target state="translated">粘着性; ターゲット文字列内のこの正規表現の &lt;code&gt;lastIndex&lt;/code&gt; プロパティで示されるインデックスからのみ一致します（以降のインデックスからは一致しません）。</target>
        </trans-unit>
        <trans-unit id="ccd61439ca7a8d2fb2175b1a1430a7b56182afd3" translate="yes" xml:space="preserve">
          <source>string.@@iterator</source>
          <target state="translated">string.@@iterator</target>
        </trans-unit>
        <trans-unit id="0bd903e28fbe8fcd26b0fc4ed9790f4263e7b4e6" translate="yes" xml:space="preserve">
          <source>string.anchor</source>
          <target state="translated">string.anchor</target>
        </trans-unit>
        <trans-unit id="46ec8795a53ce3bb104ca9e11ca9cb51c11aaa5a" translate="yes" xml:space="preserve">
          <source>string.big</source>
          <target state="translated">string.big</target>
        </trans-unit>
        <trans-unit id="59ba0485601e01c820a7fc3a6e77025d5a2760ed" translate="yes" xml:space="preserve">
          <source>string.blink</source>
          <target state="translated">string.blink</target>
        </trans-unit>
        <trans-unit id="a5d485d8198d1ec0bb9e9aa3d102b73e6198cabf" translate="yes" xml:space="preserve">
          <source>string.bold</source>
          <target state="translated">string.bold</target>
        </trans-unit>
        <trans-unit id="59b229115d8e46081166dd3b5eb4add134bcff04" translate="yes" xml:space="preserve">
          <source>string.charAt</source>
          <target state="translated">string.charAt</target>
        </trans-unit>
        <trans-unit id="c4c2ed594ae8247332f5d52494a1ddcc4fe59ec6" translate="yes" xml:space="preserve">
          <source>string.charCodeAt</source>
          <target state="translated">string.charCodeAt</target>
        </trans-unit>
        <trans-unit id="cd2f0eaaee9f11a16804500ffe13ce21891a6c5f" translate="yes" xml:space="preserve">
          <source>string.codePointAt</source>
          <target state="translated">string.codePointAt</target>
        </trans-unit>
        <trans-unit id="923370f3be84a603b7cb9e5426c3729f8c411478" translate="yes" xml:space="preserve">
          <source>string.concat</source>
          <target state="translated">string.concat</target>
        </trans-unit>
        <trans-unit id="f91a49edcdb2a2df72f5e435caf335644746900a" translate="yes" xml:space="preserve">
          <source>string.endsWith</source>
          <target state="translated">string.endsWith</target>
        </trans-unit>
        <trans-unit id="0d0b8efa447aa2aa82c686b2ad53d55853d6cec3" translate="yes" xml:space="preserve">
          <source>string.fixed</source>
          <target state="translated">string.fixed</target>
        </trans-unit>
        <trans-unit id="fd0663e5c8f34fe69089f9e0b3308db472042acc" translate="yes" xml:space="preserve">
          <source>string.fontcolor</source>
          <target state="translated">string.fontcolor</target>
        </trans-unit>
        <trans-unit id="d953b4dce0106fe5aae41007607827eac8687749" translate="yes" xml:space="preserve">
          <source>string.fontsize</source>
          <target state="translated">string.fontsize</target>
        </trans-unit>
        <trans-unit id="86bd2e54d5a0fad56f60858d3b596872b42b9cc7" translate="yes" xml:space="preserve">
          <source>string.includes</source>
          <target state="translated">string.includes</target>
        </trans-unit>
        <trans-unit id="13cbaf02e7907772b3f391d59bb26810c0dd81ef" translate="yes" xml:space="preserve">
          <source>string.indexOf</source>
          <target state="translated">string.indexOf</target>
        </trans-unit>
        <trans-unit id="d10e3637702a0f9dd3e1441fb36064ce441a62a8" translate="yes" xml:space="preserve">
          <source>string.italics</source>
          <target state="translated">string.italics</target>
        </trans-unit>
        <trans-unit id="fbc05a68da609c593d47558ad5eff6aaab1a3845" translate="yes" xml:space="preserve">
          <source>string.lastIndexOf</source>
          <target state="translated">string.lastIndexOf</target>
        </trans-unit>
        <trans-unit id="22af05c7accbcc89acc98abd33dab1fd3ed979bf" translate="yes" xml:space="preserve">
          <source>string.length</source>
          <target state="translated">string.length</target>
        </trans-unit>
        <trans-unit id="ccaf74a540b15e97c79f3a392062d27eec116a5f" translate="yes" xml:space="preserve">
          <source>string.link</source>
          <target state="translated">string.link</target>
        </trans-unit>
        <trans-unit id="227024bd5243eedee2af675b9a8d652bb2c97ea1" translate="yes" xml:space="preserve">
          <source>string.localeCompare</source>
          <target state="translated">string.localeCompare</target>
        </trans-unit>
        <trans-unit id="436a40cc52d7b45642038daf2d67c36fe3b68922" translate="yes" xml:space="preserve">
          <source>string.match</source>
          <target state="translated">string.match</target>
        </trans-unit>
        <trans-unit id="d0318a8780b9124a57b0751e0ce7024f83d9c316" translate="yes" xml:space="preserve">
          <source>string.matchAll</source>
          <target state="translated">string.matchAll</target>
        </trans-unit>
        <trans-unit id="7b8382fceeb0231f10ed4e0f65713faf8ddeabd1" translate="yes" xml:space="preserve">
          <source>string.normalize</source>
          <target state="translated">string.normalize</target>
        </trans-unit>
        <trans-unit id="eedcafda8c40cc1e302800f68c064b3a4b9d724b" translate="yes" xml:space="preserve">
          <source>string.padEnd</source>
          <target state="translated">string.padEnd</target>
        </trans-unit>
        <trans-unit id="8afdb57f45bf749d6893280dd1189c7a8a554cce" translate="yes" xml:space="preserve">
          <source>string.padStart</source>
          <target state="translated">string.padStart</target>
        </trans-unit>
        <trans-unit id="6291bfce8c9daeb5c870f9e29fa881ac9435313d" translate="yes" xml:space="preserve">
          <source>string.repeat</source>
          <target state="translated">string.repeat</target>
        </trans-unit>
        <trans-unit id="b529513b9eb4e90acf4f82d36919cb5b8dc26edb" translate="yes" xml:space="preserve">
          <source>string.replace</source>
          <target state="translated">string.replace</target>
        </trans-unit>
        <trans-unit id="8b0cd48baab9014c5462e7a780f3dece3bdddbf8" translate="yes" xml:space="preserve">
          <source>string.replaceAll</source>
          <target state="translated">string.replaceAll</target>
        </trans-unit>
        <trans-unit id="40b7dff5c1b685bf2290c6de23fc24635e310bc4" translate="yes" xml:space="preserve">
          <source>string.search</source>
          <target state="translated">string.search</target>
        </trans-unit>
        <trans-unit id="6695b53c3d0441a69b7b3a1d0d31e01314ab1d78" translate="yes" xml:space="preserve">
          <source>string.slice</source>
          <target state="translated">string.slice</target>
        </trans-unit>
        <trans-unit id="4bfdd00be6ba5626147cf07ec63cc665069983ce" translate="yes" xml:space="preserve">
          <source>string.small</source>
          <target state="translated">string.small</target>
        </trans-unit>
        <trans-unit id="c1b72a1aa537445baf9d53af80fcf7630cf80aaa" translate="yes" xml:space="preserve">
          <source>string.split</source>
          <target state="translated">string.split</target>
        </trans-unit>
        <trans-unit id="d4ce140815ce81a4e9182c1bbc971cbccd456433" translate="yes" xml:space="preserve">
          <source>string.startsWith</source>
          <target state="translated">string.startsWith</target>
        </trans-unit>
        <trans-unit id="417deb672adccfbc9a0c7d7db947ce0454a7d019" translate="yes" xml:space="preserve">
          <source>string.strike</source>
          <target state="translated">string.strike</target>
        </trans-unit>
        <trans-unit id="3af83cb171e463fae0a4d8c6d92e4c66da89927e" translate="yes" xml:space="preserve">
          <source>string.sub</source>
          <target state="translated">string.sub</target>
        </trans-unit>
        <trans-unit id="3393c427439a0575f0ac76b2592d403ddc8b1459" translate="yes" xml:space="preserve">
          <source>string.substr</source>
          <target state="translated">string.substr</target>
        </trans-unit>
        <trans-unit id="502a2b537780c1fe5d78e5d55206b3d4fd76141a" translate="yes" xml:space="preserve">
          <source>string.substring</source>
          <target state="translated">string.substring</target>
        </trans-unit>
        <trans-unit id="92c5d4c7fe321ed0422338b39144e5409a031439" translate="yes" xml:space="preserve">
          <source>string.sup</source>
          <target state="translated">string.sup</target>
        </trans-unit>
        <trans-unit id="828b4fabbd7b19a632573e2b67cc60c4f880d407" translate="yes" xml:space="preserve">
          <source>string.toLocaleLowerCase</source>
          <target state="translated">string.toLocaleLowerCase</target>
        </trans-unit>
        <trans-unit id="62237b25af27348e34c04216b1e309ade50b73d8" translate="yes" xml:space="preserve">
          <source>string.toLocaleUpperCase</source>
          <target state="translated">string.toLocaleUpperCase</target>
        </trans-unit>
        <trans-unit id="7beede47e763938459d72ea7442c3444a9b8e56a" translate="yes" xml:space="preserve">
          <source>string.toLowerCase</source>
          <target state="translated">string.toLowerCase</target>
        </trans-unit>
        <trans-unit id="01116b2a10ac4e7d3833c74521818abbd3047231" translate="yes" xml:space="preserve">
          <source>string.toString</source>
          <target state="translated">string.toString</target>
        </trans-unit>
        <trans-unit id="dd61bd6d78c4fc9252603d4c18e7650ee9aefb84" translate="yes" xml:space="preserve">
          <source>string.toUpperCase</source>
          <target state="translated">string.toUpperCase</target>
        </trans-unit>
        <trans-unit id="dcaf73dca0473e4baa6b9e70d12201ab04329956" translate="yes" xml:space="preserve">
          <source>string.trim</source>
          <target state="translated">string.trim</target>
        </trans-unit>
        <trans-unit id="cdcf9090995beb53f5e127a835e0204a6886f5c0" translate="yes" xml:space="preserve">
          <source>string.trimEnd</source>
          <target state="translated">string.trimEnd</target>
        </trans-unit>
        <trans-unit id="83231489029c0d993c41b3b36f66a79bf5040562" translate="yes" xml:space="preserve">
          <source>string.trimStart</source>
          <target state="translated">string.trimStart</target>
        </trans-unit>
        <trans-unit id="a3bba7a3c02db86c503dad46b674eee020832272" translate="yes" xml:space="preserve">
          <source>string.valueOf</source>
          <target state="translated">string.valueOf</target>
        </trans-unit>
        <trans-unit id="fa2a4fd4647fad8f06bf432ed86671ae860fc08c" translate="yes" xml:space="preserve">
          <source>stroke</source>
          <target state="translated">stroke</target>
        </trans-unit>
        <trans-unit id="fdca81ff0033bd52e01e0c38528c9264aeefc4ea" translate="yes" xml:space="preserve">
          <source>such that</source>
          <target state="translated">ほどに</target>
        </trans-unit>
        <trans-unit id="008982259a816ad72afc0c0293758dfbe5fa190f" translate="yes" xml:space="preserve">
          <source>sund</source>
          <target state="translated">sund</target>
        </trans-unit>
        <trans-unit id="8451ba8a14d79753d34cb33b51ba46b4b025eb81" translate="yes" xml:space="preserve">
          <source>super</source>
          <target state="translated">super</target>
        </trans-unit>
        <trans-unit id="722425f6241d81573d2c69bac795807c4cbd710c" translate="yes" xml:space="preserve">
          <source>super()</source>
          <target state="translated">super()</target>
        </trans-unit>
        <trans-unit id="01ba7992f85de477e8e630428eb5ed14769f9155" translate="yes" xml:space="preserve">
          <source>switch</source>
          <target state="translated">switch</target>
        </trans-unit>
        <trans-unit id="46d31bfac7db6a0e608e9ab4dc0c486c8e779c66" translate="yes" xml:space="preserve">
          <source>sym</source>
          <target state="translated">sym</target>
        </trans-unit>
        <trans-unit id="0000ae9ee7ae5cf32675128d0790beaff68fba0f" translate="yes" xml:space="preserve">
          <source>symbol.@@toPrimitive</source>
          <target state="translated">symbol.@@toPrimitive</target>
        </trans-unit>
        <trans-unit id="2aa7952f718902eec6ae0c1fe89581d89458e91e" translate="yes" xml:space="preserve">
          <source>symbol.description</source>
          <target state="translated">symbol.description</target>
        </trans-unit>
        <trans-unit id="cbb49602fee93f05b226dcc0b50d77744f19eccd" translate="yes" xml:space="preserve">
          <source>symbol.toString</source>
          <target state="translated">symbol.toString</target>
        </trans-unit>
        <trans-unit id="ad59dcc641677fb9d2710b700df36316c83113fe" translate="yes" xml:space="preserve">
          <source>symbol.valueOf</source>
          <target state="translated">symbol.valueOf</target>
        </trans-unit>
        <trans-unit id="8efd86fb78a56a5145ed7739dcb00c78581c5375" translate="yes" xml:space="preserve">
          <source>t</source>
          <target state="translated">t</target>
        </trans-unit>
        <trans-unit id="e974602114f14fbf55401c109937e173b1b23220" translate="yes" xml:space="preserve">
          <source>tab</source>
          <target state="translated">tab</target>
        </trans-unit>
        <trans-unit id="68552d719901d1eea60ccb957a8f4541e0e62cc0" translate="yes" xml:space="preserve">
          <source>takr</source>
          <target state="translated">takr</target>
        </trans-unit>
        <trans-unit id="d70bd03e8d1c9ef7b5fa5b5916638d250ae2f487" translate="yes" xml:space="preserve">
          <source>talu</source>
          <target state="translated">talu</target>
        </trans-unit>
        <trans-unit id="fd8cf33b4ef101abba736ca1000b4faa0bc69ab2" translate="yes" xml:space="preserve">
          <source>taml</source>
          <target state="translated">taml</target>
        </trans-unit>
        <trans-unit id="d36dee3ca04daa55b0cb48002b3b598109ae6d02" translate="yes" xml:space="preserve">
          <source>tamldec</source>
          <target state="translated">tamldec</target>
        </trans-unit>
        <trans-unit id="35ca8cf12ff7ebe96d1bd7602a1968f756f4af33" translate="yes" xml:space="preserve">
          <source>tan</source>
          <target state="translated">tan</target>
        </trans-unit>
        <trans-unit id="e37dc0a85458fdbc0ea7fb77366938eb01e6db4b" translate="yes" xml:space="preserve">
          <source>tanh</source>
          <target state="translated">tanh</target>
        </trans-unit>
        <trans-unit id="0e8a3ad980ec179856012b7eecf4327e99cd44cd" translate="yes" xml:space="preserve">
          <source>target</source>
          <target state="translated">target</target>
        </trans-unit>
        <trans-unit id="016ffd66e354ed6777915f579ec5ef1da6e09d77" translate="yes" xml:space="preserve">
          <source>targetObject</source>
          <target state="translated">targetObject</target>
        </trans-unit>
        <trans-unit id="2e26a3ce27f300a7ded9a140c3d4a2bcec1defda" translate="yes" xml:space="preserve">
          <source>telu</source>
          <target state="translated">telu</target>
        </trans-unit>
        <trans-unit id="e71223abaadfe7c7d69b345880e88a73c5a6d122" translate="yes" xml:space="preserve">
          <source>thai</source>
          <target state="translated">thai</target>
        </trans-unit>
        <trans-unit id="6c830cbc94f04f6957a63959b78329300e911ea1" translate="yes" xml:space="preserve">
          <source>that will always be false (&lt;code&gt;!mycar&lt;/code&gt; will be treated before &lt;code&gt;instanceof&lt;/code&gt;, so you always try to know if a boolean is an instance of &lt;code&gt;Car&lt;/code&gt;).</source>
          <target state="translated">これは常にfalseになります（ &lt;code&gt;!mycar&lt;/code&gt; は &lt;code&gt;instanceof&lt;/code&gt; の前に処理されるため、ブール値が &lt;code&gt;Car&lt;/code&gt; のインスタンスかどうかを常に確認しようとします）。</target>
        </trans-unit>
        <trans-unit id="445c01cbfe0b87ab006232b2407a49612389de6f" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;&lt;var&gt;radix&lt;/var&gt;&lt;/code&gt; is smaller than &lt;code&gt;2&lt;/code&gt; or bigger than &lt;code&gt;36&lt;/code&gt;, or</source>
          <target state="translated">&lt;code&gt;&lt;var&gt;radix&lt;/var&gt;&lt;/code&gt; よりも小さい &lt;code&gt;2&lt;/code&gt; 以上又はより大きい &lt;code&gt;36&lt;/code&gt; 、または</target>
        </trans-unit>
        <trans-unit id="36f636fbef6eebb0171723506275d0d81f7918f7" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;Map&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Map&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="36e5826ae16e022513d121326a125f3676a427a2" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;Map&lt;/code&gt; being traversed</source>
          <target state="translated">&lt;code&gt;Map&lt;/code&gt; 横断しています</target>
        </trans-unit>
        <trans-unit id="5b912de4932f0ad8e64840207e3c05ffa2212510" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;Set&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Set&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="73f7df65254be133ce52e98b1504ea112da16b61" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;arguments&lt;/code&gt; object has additional functionality specific to itself (like the &lt;code&gt;callee&lt;/code&gt; property).</source>
          <target state="translated">&lt;code&gt;arguments&lt;/code&gt; オブジェクトは、（のような自体に追加機能の特定を持って &lt;code&gt;callee&lt;/code&gt; プロパティ）。</target>
        </trans-unit>
        <trans-unit id="279cf93d57d4d622336d270914d00d7e39925b5c" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;arguments&lt;/code&gt; object is not a real array, while rest parameters are &lt;a href=&quot;../global_objects/array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; instances, meaning methods like &lt;a href=&quot;../global_objects/array/sort&quot;&gt;&lt;code&gt;sort&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/array/map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/array/foreach&quot;&gt;&lt;code&gt;forEach&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/array/pop&quot;&gt;&lt;code&gt;pop&lt;/code&gt;&lt;/a&gt; can be applied on it directly;</source>
          <target state="translated">&lt;code&gt;arguments&lt;/code&gt; 残りのパラメータがある一方で、オブジェクトは、実際の配列ではない&lt;a href=&quot;../global_objects/array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;のような方法を意味し、インスタンス&lt;a href=&quot;../global_objects/array/sort&quot;&gt; &lt;code&gt;sort&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../global_objects/array/map&quot;&gt; &lt;code&gt;map&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../global_objects/array/foreach&quot;&gt; &lt;code&gt;forEach&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;../global_objects/array/pop&quot;&gt; &lt;code&gt;pop&lt;/code&gt; &lt;/a&gt;直接に適用することができます。</target>
        </trans-unit>
        <trans-unit id="ee3a283eb6142cc47d2b41a2fd4c5a597fe189ae" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;function*&lt;/code&gt; documentation</source>
          <target state="translated">&lt;code&gt;function*&lt;/code&gt; ドキュメント</target>
        </trans-unit>
        <trans-unit id="c5e1ea5528ac2af87238a66ed2e989a71be307c3" translate="yes" xml:space="preserve">
          <source>the &lt;strong&gt;array being traversed&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;配列を横断しています&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="14a7eefc5367df2f2ab09561f07defe36d33b165" translate="yes" xml:space="preserve">
          <source>the &lt;strong&gt;element index&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;要素インデックス&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0fa208f175050e8e28edf6e61906044f58802c5d" translate="yes" xml:space="preserve">
          <source>the &lt;strong&gt;element key&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;要素キー&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fc3dc73268f725f08a779c2f54f7d99fa69b1fdc" translate="yes" xml:space="preserve">
          <source>the &lt;strong&gt;element value&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;要素の値&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8c53b122fe93d4fa1ee71c9018040e054c1201c4" translate="yes" xml:space="preserve">
          <source>the &lt;strong&gt;typed array being traversed&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;横断中の型指定された配列&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="520829ff956bd65b45e768b5f7734ee22a0533b0" translate="yes" xml:space="preserve">
          <source>the Array object being traversed</source>
          <target state="translated">走査される配列オブジェクト</target>
        </trans-unit>
        <trans-unit id="a05e601b4963ef3542b6b064ab0460529a093b2b" translate="yes" xml:space="preserve">
          <source>the Latin-1 character</source>
          <target state="translated">欧文一文字</target>
        </trans-unit>
        <trans-unit id="a24592334a6ae91d51fa26c4e9bf40aee8680c60" translate="yes" xml:space="preserve">
          <source>the array</source>
          <target state="translated">配列</target>
        </trans-unit>
        <trans-unit id="4d954f87a91ec5cce4b865238f6d3b214b81da1c" translate="yes" xml:space="preserve">
          <source>the asterisk (*) in the shorthand syntax must be before the generator property name. That is, &lt;code&gt;* g(){}&lt;/code&gt; will work but &lt;code&gt;g *(){}&lt;/code&gt; will not;</source>
          <target state="translated">省略構文のアスタリスク（*）は、ジェネレータープロパティ名の前になければなりません。つまり、 &lt;code&gt;* g(){}&lt;/code&gt; は機能しますが、 &lt;code&gt;g *(){}&lt;/code&gt; は機能しません。</target>
        </trans-unit>
        <trans-unit id="c2a4b88be385f8410c0a34a4217d4163baf64478" translate="yes" xml:space="preserve">
          <source>the code point U+24B9 represents the symbol &lt;code&gt;&quot;Ⓓ&quot;&lt;/code&gt;. It is compatible with the U+0044 code point (&lt;code&gt;&quot;D&quot;&lt;/code&gt;).</source>
          <target state="translated">コードポイントU + 24B9は、記号 &lt;code&gt;&quot;Ⓓ&quot;&lt;/code&gt; 表します。U + 0044コードポイント（ &lt;code&gt;&quot;D&quot;&lt;/code&gt; ）と互換性があります。</target>
        </trans-unit>
        <trans-unit id="98dba0e964eea1611b77517e1f2754a06e8d3f66" translate="yes" xml:space="preserve">
          <source>the code point U+FB00 represents the &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Ligature&quot;&gt;ligature&lt;/a&gt;&lt;code&gt;&quot;ﬀ&quot;&lt;/code&gt;. It is compatible with two consecutive U+0066 code points (&lt;code&gt;&quot;ff&quot;&lt;/code&gt;).</source>
          <target state="translated">コードポイントU + FB00は、&lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Ligature&quot;&gt;合字&lt;/a&gt; &lt;code&gt;&quot;ﬀ&quot;&lt;/code&gt; 表します。これは、2つの連続するU + 0066コードポイント（ &lt;code&gt;&quot;ff&quot;&lt;/code&gt; ）と互換性があります。</target>
        </trans-unit>
        <trans-unit id="d6b41caa177eb6dca39a5573dd4329849a7b530e" translate="yes" xml:space="preserve">
          <source>the element</source>
          <target state="translated">素子</target>
        </trans-unit>
        <trans-unit id="4aeda3e08ee1d1861197afe96403d23dc26fbcdc" translate="yes" xml:space="preserve">
          <source>the entry's &lt;code&gt;&lt;var&gt;key&lt;/var&gt;&lt;/code&gt;</source>
          <target state="translated">エントリの &lt;code&gt;&lt;var&gt;key&lt;/var&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d320f197b138d06162679d481619bddfa325cbb0" translate="yes" xml:space="preserve">
          <source>the entry's &lt;code&gt;&lt;var&gt;value&lt;/var&gt;&lt;/code&gt;</source>
          <target state="translated">エントリの &lt;code&gt;&lt;var&gt;value&lt;/var&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ab90fbaa1400039b0946feb95c7a20271e0947a6" translate="yes" xml:space="preserve">
          <source>the first non-whitespace character cannot be converted to a number.</source>
          <target state="translated">最初の空白以外の文字を数値に変換することはできません。</target>
        </trans-unit>
        <trans-unit id="abf9a3d818286c253dc212e4687564515ae09c25" translate="yes" xml:space="preserve">
          <source>the following operation involving Booleans:</source>
          <target state="translated">ブーリアンを含む次の操作を行います。</target>
        </trans-unit>
        <trans-unit id="aebcd67b75f9c776b950b767f971cd2fc59edc2a" translate="yes" xml:space="preserve">
          <source>the function can be called like any other from inside your code</source>
          <target state="translated">関数はコードの中から他のものと同じように呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="92bdfd962a1e6011df32c7853f7880fc811ec1b6" translate="yes" xml:space="preserve">
          <source>the index</source>
          <target state="translated">しすう</target>
        </trans-unit>
        <trans-unit id="11d7ae9de8a17183b8c6e5dd640ebe224192e3a9" translate="yes" xml:space="preserve">
          <source>the index of the element</source>
          <target state="translated">要素のインデックス</target>
        </trans-unit>
        <trans-unit id="6664b90b37c472d74b26e341e2645186eda514fe" translate="yes" xml:space="preserve">
          <source>the loop would never stop.</source>
          <target state="translated">ループが止まることはありませんでした。</target>
        </trans-unit>
        <trans-unit id="add93deb1efcc5eb4a80e1d4ce26d6c9c2127ee7" translate="yes" xml:space="preserve">
          <source>the typed array object being traversed</source>
          <target state="translated">走査される型付き配列オブジェクト</target>
        </trans-unit>
        <trans-unit id="2ddaba14717069ea1c3b104c3afff97f59b94729" translate="yes" xml:space="preserve">
          <source>the unique</source>
          <target state="translated">一点物</target>
        </trans-unit>
        <trans-unit id="dc5a029190ca01eb4175d1d29d0e117c7d52f5f9" translate="yes" xml:space="preserve">
          <source>the value of the element</source>
          <target state="translated">要素の値</target>
        </trans-unit>
        <trans-unit id="99312c874d54fa6dedb99267461d9a87b7292231" translate="yes" xml:space="preserve">
          <source>third call</source>
          <target state="translated">サードコール</target>
        </trans-unit>
        <trans-unit id="c2543fff3bfa6f144c2f06a7de6cd10c0b650cae" translate="yes" xml:space="preserve">
          <source>this</source>
          <target state="translated">this</target>
        </trans-unit>
        <trans-unit id="389ab777bfa8b11ef14e075b9b52720127bc6b57" translate="yes" xml:space="preserve">
          <source>this and object conversion</source>
          <target state="translated">これとオブジェクト変換</target>
        </trans-unit>
        <trans-unit id="8ca70974800069ecdaa4b8b22a581d86a52cd770" translate="yes" xml:space="preserve">
          <source>this in classes</source>
          <target state="translated">これを授業で</target>
        </trans-unit>
        <trans-unit id="dea701166bb95799bc63099fc4b018568aa89970" translate="yes" xml:space="preserve">
          <source>this in function contexts</source>
          <target state="translated">これは関数コンテキストでは</target>
        </trans-unit>
        <trans-unit id="05de74d2dcaad6ab3528643f09bd02bdf0601a3c" translate="yes" xml:space="preserve">
          <source>thisArgument</source>
          <target state="translated">thisArgument</target>
        </trans-unit>
        <trans-unit id="f793522355b5ef88da6d4d202946d3f8289dc953" translate="yes" xml:space="preserve">
          <source>throw</source>
          <target state="translated">throw</target>
        </trans-unit>
        <trans-unit id="29b241be5244e3db06d491eac03aa3f52dda7960" translate="yes" xml:space="preserve">
          <source>throws an error, the promise returned by &lt;code&gt;then&lt;/code&gt; gets rejected with the thrown error as its value.</source>
          <target state="translated">エラーがスローされます、で返される約束 &lt;code&gt;then&lt;/code&gt; その値としてスローされたエラーで拒否されます。</target>
        </trans-unit>
        <trans-unit id="e516d2ad85ee253ed8a0f1ead8950c10d0e3bdcb" translate="yes" xml:space="preserve">
          <source>throws an error, the promise returned by &lt;code&gt;then&lt;/code&gt; gets rejected with the thrown error as its value;</source>
          <target state="translated">エラーをスローし、 &lt;code&gt;then&lt;/code&gt; によって返されたpromiseは、スローされたエラーを値として拒否されます。</target>
        </trans-unit>
        <trans-unit id="147d3452e709ee7f387de4e3d3d9bb831840fe10" translate="yes" xml:space="preserve">
          <source>tibt</source>
          <target state="translated">tibt</target>
        </trans-unit>
        <trans-unit id="edacf86486fa698be789e041a7d4297da6a5b43a" translate="yes" xml:space="preserve">
          <source>timeZoneName</source>
          <target state="translated">timeZoneName</target>
        </trans-unit>
        <trans-unit id="79a171e9cee30510e3b572f58ae17fa20b04b1a8" translate="yes" xml:space="preserve">
          <source>tirh</source>
          <target state="translated">tirh</target>
        </trans-unit>
        <trans-unit id="9090b2b2f8bec8aa09f048741d04663ff1ee6491" translate="yes" xml:space="preserve">
          <source>to create a new typed array. Other constructor arguments will not create a valid typed array.</source>
          <target state="translated">を使用して新しい型付き配列を作成します。他のコンストラクタの引数は有効な型付き配列を作成しません。</target>
        </trans-unit>
        <trans-unit id="349dd5ed0187cd4e233b02d7943e678f3b0db320" translate="yes" xml:space="preserve">
          <source>toJSON() behavior</source>
          <target state="translated">toJSON()の動作</target>
        </trans-unit>
        <trans-unit id="8a3600f22640a9d9ea7ef1a15a13b149958c3357" translate="yes" xml:space="preserve">
          <source>toStringTag available on all DOM prototype objects</source>
          <target state="translated">すべての DOM プロトタイプオブジェクトで利用可能な toStringTag</target>
        </trans-unit>
        <trans-unit id="d64ed5d226918d410a7607b6f0b240e3e5ae9146" translate="yes" xml:space="preserve">
          <source>top level module: consuming the exports of &lt;code&gt;parentModule.js&lt;/code&gt;</source>
          <target state="translated">トップレベルモジュール： &lt;code&gt;parentModule.js&lt;/code&gt; のエクスポートを消費します</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
