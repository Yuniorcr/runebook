<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="javascript">
    <body>
      <group id="javascript">
        <trans-unit id="9a8b77bae4bc6d8a32b6a9eeaef79f0605e7f2a9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;WebAssembly.Instance&lt;/code&gt; object is a stateful, executable instance of a &lt;a href=&quot;module&quot;&gt;WebAssembly.Module&lt;/a&gt;. &lt;code&gt;Instance&lt;/code&gt; objects contain all the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAssembly/Exported_functions&quot;&gt;Exported WebAssembly functions&lt;/a&gt; that allow calling into WebAssembly code from JavaScript.</source>
          <target state="translated">&lt;code&gt;WebAssembly.Instance&lt;/code&gt; のオブジェクトは、ステートフル、実行インスタンスである&lt;a href=&quot;module&quot;&gt;WebAssembly.Module&lt;/a&gt;。 &lt;code&gt;Instance&lt;/code&gt; オブジェクトには、JavaScriptからWebAssemblyコードを呼び出すことができるすべての&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAssembly/Exported_functions&quot;&gt;エクスポートされたWebAssembly関数&lt;/a&gt;が含まれています。</target>
        </trans-unit>
        <trans-unit id="d9b53c5ca15925bc96030bb264b3179de6ff17b7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;WebAssembly.Module&lt;/code&gt; object contains stateless WebAssembly code that has already been compiled by the browser &amp;mdash; this can be efficiently &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage&quot;&gt;shared with Workers&lt;/a&gt;, and instantiated multiple times.</source>
          <target state="translated">&lt;code&gt;WebAssembly.Module&lt;/code&gt; のオブジェクトは、すでにブラウザでコンパイルされているステートレスWebAssemblyコードが含まれている-これを効率的にすることができます&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage&quot;&gt;労働者で共有さ&lt;/a&gt;れ、複数回インスタンス化。</target>
        </trans-unit>
        <trans-unit id="921fca7011f27002aa157c2ec7c9c36f16b699b0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;WebAssembly.Module&lt;/code&gt; object contains stateless WebAssembly code that has already been compiled by the browser and can be efficiently &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage&quot;&gt;shared with Workers&lt;/a&gt;, and instantiated multiple times. To instantiate the module, call &lt;a href=&quot;instantiate#Secondary_overload_%E2%80%94_taking_a_module_object_instance&quot;&gt;the secondary overload of &lt;code&gt;WebAssembly.instantiate()&lt;/code&gt;&lt;/a&gt;.   The &lt;code&gt;WebAssembly.Module()&lt;/code&gt; constructor function can be called to synchronously compile given WebAssembly binary code. However, the primary way to get a &lt;code&gt;Module&lt;/code&gt; is through an asynchronous compilation function like &lt;a href=&quot;compile&quot;&gt;&lt;code&gt;WebAssembly.compile()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;WebAssembly.Module&lt;/code&gt; のオブジェクトが既にブラウザによってコンパイルされており、効率的にすることができるステートレスWebAssemblyコード含ま&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage&quot;&gt;労働者と共有し&lt;/a&gt;、そして複数回インスタンス化します。モジュールをインスタンス化するに&lt;a href=&quot;instantiate#Secondary_overload_%E2%80%94_taking_a_module_object_instance&quot;&gt;は、 &lt;code&gt;WebAssembly.instantiate()&lt;/code&gt; の&lt;/a&gt; 2次オーバーロードを呼び出します。 &lt;code&gt;WebAssembly.Module()&lt;/code&gt; コンストラクタ関数は同期所与WebAssemblyバイナリコードをコンパイルするために呼び出すことができます。ただし、 &lt;code&gt;Module&lt;/code&gt; を取得する主な方法は、&lt;a href=&quot;compile&quot;&gt; &lt;code&gt;WebAssembly.compile()&lt;/code&gt; の&lt;/a&gt;ような非同期コンパイル関数を使用することです。</target>
        </trans-unit>
        <trans-unit id="eba41b0201e452f630459374c806c98a1297ee1f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;break&lt;/code&gt; statement, with or without a following label, cannot be used within the body of a function that is itself nested within the current loop, switch, or label statement that the &lt;code&gt;break&lt;/code&gt; statement is intended to break out of.</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; 、次のラベルの有無にかかわらず文は、それ自体が電流ループ、スイッチ、またはそのラベルステートメント内でネストされた関数の本体内で使用することはできません &lt;code&gt;break&lt;/code&gt; 文はから抜け出すことを意図しています。</target>
        </trans-unit>
        <trans-unit id="d8f1d4b7d032a1d93e3cbb95a9a48bfb94f971b7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;case&lt;/code&gt; clause used to match against &lt;code&gt;&lt;var&gt;expression&lt;/var&gt;&lt;/code&gt;. If the &lt;code&gt;&lt;var&gt;expression&lt;/var&gt;&lt;/code&gt; matches the specified &lt;code&gt;&lt;var&gt;valueN&lt;/var&gt;&lt;/code&gt;, the statements inside the &lt;code&gt;case&lt;/code&gt; clause are executed until either the end of the &lt;code&gt;switch&lt;/code&gt; statement or a &lt;code&gt;break&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;case&lt;/code&gt; 句は、照合に使用される &lt;code&gt;&lt;var&gt;expression&lt;/var&gt;&lt;/code&gt; 。場合は &lt;code&gt;&lt;var&gt;expression&lt;/var&gt;&lt;/code&gt; 指定された一致する &lt;code&gt;&lt;var&gt;valueN&lt;/var&gt;&lt;/code&gt; 、内部の文 &lt;code&gt;case&lt;/code&gt; 句は、のいずれかの端まで実行されている &lt;code&gt;switch&lt;/code&gt; 文または &lt;code&gt;break&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bdadf50dbb9e369f4ca563534df20d38ecd7fb6e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;case&lt;/code&gt; clause used to match against &lt;code&gt;expression&lt;/code&gt;. If the &lt;code&gt;expression&lt;/code&gt; matches the specified &lt;code&gt;valueN&lt;/code&gt;, the statements inside the case clause are executed until either the end of the &lt;code&gt;switch&lt;/code&gt; statement or a &lt;code&gt;break&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;case&lt;/code&gt; 句は、照合に使用される &lt;code&gt;expression&lt;/code&gt; 。場合は &lt;code&gt;expression&lt;/code&gt; 指定された一致する &lt;code&gt;valueN&lt;/code&gt; 、ケース節内のステートメントは、のいずれかの端まで実行されている &lt;code&gt;switch&lt;/code&gt; 文または &lt;code&gt;break&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ffb5782aae7b78d5a8ea5e6a7841ff66f48e5e13" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;catch&lt;/code&gt; clause contains statements that specify what to do if an exception is thrown in the &lt;code&gt;try&lt;/code&gt; block. That is, you want the &lt;code&gt;try&lt;/code&gt; block to succeed, and if it does not succeed, you want to pass control to the &lt;code&gt;catch&lt;/code&gt; block. If any statement within the &lt;code&gt;try&lt;/code&gt; block (or in a function called from within the &lt;code&gt;try&lt;/code&gt; block) throws an exception, control is immediately shifted to the &lt;code&gt;catch&lt;/code&gt; clause. If no exception is thrown in the &lt;code&gt;try&lt;/code&gt; block, the &lt;code&gt;catch&lt;/code&gt; clause is skipped.</source>
          <target state="translated">&lt;code&gt;catch&lt;/code&gt; 句は、例外がスローにされた場合にどうするかを指定するステートメントが含ま &lt;code&gt;try&lt;/code&gt; ブロックを。つまり、 &lt;code&gt;try&lt;/code&gt; ブロックを成功させ、成功しない場合は、 &lt;code&gt;catch&lt;/code&gt; ブロックに制御を渡す必要があります。内の任意のステートメント場合は &lt;code&gt;try&lt;/code&gt; （または内から呼び出された関数内のブロック &lt;code&gt;try&lt;/code&gt; ブロック）が例外をスローし、制御がすぐにシフトしている &lt;code&gt;catch&lt;/code&gt; 句。 &lt;code&gt;try&lt;/code&gt; ブロックで例外がスローされない場合、 &lt;code&gt;catch&lt;/code&gt; 句はスキップされます。</target>
        </trans-unit>
        <trans-unit id="7ac5daa259da06953ce04249d18b35a67de15ce3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;catch&lt;/code&gt;-block contains statements that specify what to do if an exception is thrown in the &lt;code&gt;try&lt;/code&gt;-block. If any statement within the &lt;code&gt;try&lt;/code&gt;-block (or in a function called from within the &lt;code&gt;try&lt;/code&gt;-block) throws an exception, control is immediately shifted to the &lt;code&gt;catch&lt;/code&gt;-block. If no exception is thrown in the &lt;code&gt;try&lt;/code&gt;-block, the &lt;code&gt;catch&lt;/code&gt;-block is skipped.</source>
          <target state="translated">A &lt;code&gt;catch&lt;/code&gt; -block contains statements that specify what to do if an exception is thrown in the &lt;code&gt;try&lt;/code&gt; -block. If any statement within the &lt;code&gt;try&lt;/code&gt; -block (or in a function called from within the &lt;code&gt;try&lt;/code&gt; -block) throws an exception, control is immediately shifted to the &lt;code&gt;catch&lt;/code&gt; -block. If no exception is thrown in the &lt;code&gt;try&lt;/code&gt; -block, the &lt;code&gt;catch&lt;/code&gt; -block is skipped.</target>
        </trans-unit>
        <trans-unit id="af83d81a5845efd10fc2e84376ca846d8a819db5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;default&lt;/code&gt; clause; if provided, this clause is executed if the value of &lt;code&gt;&lt;var&gt;expression&lt;/var&gt;&lt;/code&gt; doesn't match any of the &lt;code&gt;case&lt;/code&gt; clauses.</source>
          <target state="translated">A &lt;code&gt;default&lt;/code&gt; clause; if provided, this clause is executed if the value of &lt;code&gt;&lt;var&gt;expression&lt;/var&gt;&lt;/code&gt; doesn't match any of the &lt;code&gt;case&lt;/code&gt; clauses.</target>
        </trans-unit>
        <trans-unit id="02e8d04e469b5bcbf21433a4012b82c5bfc9ce85" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;default&lt;/code&gt; clause; if provided, this clause is executed if the value of &lt;code&gt;expression&lt;/code&gt; doesn't match any of the &lt;code&gt;case&lt;/code&gt; clauses.</source>
          <target state="translated">&lt;code&gt;default&lt;/code&gt; 句。指定した場合、 &lt;code&gt;expression&lt;/code&gt; の値がどの &lt;code&gt;case&lt;/code&gt; 句とも一致しない場合、この句が実行されます。</target>
        </trans-unit>
        <trans-unit id="1f6391784764ff523273fba5cceddabeec206abf" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;finally&lt;/code&gt; callback will not receive any argument, since there's no reliable means of determining if the promise was fulfilled or rejected. This use case is for precisely when you &lt;em&gt;do not care&lt;/em&gt; about the rejection reason, or the fulfillment value, and so there's no need to provide it.</source>
          <target state="translated">&lt;code&gt;finally&lt;/code&gt; 約束が果たさまたは拒否されたかどうかを決定する信頼できる手段はありませんので、コールバックは、任意の引数を受け取ることができません。このユースケースは、あなたが正確にするときのためにある&lt;em&gt;気にしない&lt;/em&gt;拒絶理由、または履行価値について、そしてそれを提供する必要はありません。</target>
        </trans-unit>
        <trans-unit id="7b01a5ed1da627d8d67501b2095f08aede166668" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;finally&lt;/code&gt; callback will not receive any argument, since there's no reliable means of determining if the promise was fulfilled or rejected. This use case is for precisely when you &lt;em&gt;do not care&lt;/em&gt; about the rejection reason, or the fulfillment value, and so there's no need to provide it. So for example:</source>
          <target state="translated">A &lt;code&gt;finally&lt;/code&gt; callback will not receive any argument, since there's no reliable means of determining if the promise was fulfilled or rejected. This use case is for precisely when you &lt;em&gt;do not care&lt;/em&gt; about the rejection reason, or the fulfillment value, and so there's no need to provide it. So for example:</target>
        </trans-unit>
        <trans-unit id="5c85fa7f0722fca7a5c029123284b0bf3d6b17a3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;for...in&lt;/code&gt; loop iterates over the properties of an object in an arbitrary order (see the &lt;a href=&quot;../operators/delete&quot;&gt;&lt;code&gt;delete&lt;/code&gt;&lt;/a&gt; operator for more on why one cannot depend on the seeming orderliness of iteration, at least in a cross-browser setting).</source>
          <target state="translated">A &lt;code&gt;for...in&lt;/code&gt; 任意の順序でオブジェクトのプロパティをループ反復（参照&lt;a href=&quot;../operators/delete&quot;&gt; &lt;code&gt;delete&lt;/code&gt; &lt;/a&gt;一方は少なくともクロスブラウザの設定で、反復の見せかけの秩序に依存することができない理由の詳細について演算子）。</target>
        </trans-unit>
        <trans-unit id="7daf5d7bbf2123562d6d346b537a06d3d3f2bd90" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;for...in&lt;/code&gt; loop only iterates over enumerable, non-Symbol properties. Objects created from built&amp;ndash;in constructors like &lt;code&gt;Array&lt;/code&gt; and &lt;code&gt;Object&lt;/code&gt; have inherited non&amp;ndash;enumerable properties from &lt;code&gt;Object.prototype&lt;/code&gt; and &lt;code&gt;String.prototype&lt;/code&gt;, such as &lt;a href=&quot;../global_objects/string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;'s &lt;a href=&quot;../global_objects/string/indexof&quot;&gt;&lt;code&gt;indexOf()&lt;/code&gt;&lt;/a&gt; method or &lt;a href=&quot;../global_objects/object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;'s &lt;a href=&quot;../global_objects/object/tostring&quot;&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/a&gt; method. The loop will iterate over all enumerable properties of the object itself and those the object inherits from its constructor's prototype (properties closer to the object in the prototype chain override prototypes' properties).</source>
          <target state="translated">&lt;code&gt;for...in&lt;/code&gt; ループのみ列挙、非シンボルのプロパティを介して反復します。 &lt;code&gt;Array&lt;/code&gt; や &lt;code&gt;Object&lt;/code&gt; などの組み込みコンストラクタから作成されたオブジェクトは、&lt;a href=&quot;../global_objects/string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;の&lt;a href=&quot;../global_objects/string/indexof&quot;&gt; &lt;code&gt;indexOf()&lt;/code&gt; &lt;/a&gt;メソッドや&lt;a href=&quot;../global_objects/object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;の&lt;a href=&quot;../global_objects/object/tostring&quot;&gt; &lt;code&gt;toString()&lt;/code&gt; &lt;/a&gt;メソッドなど、列挙不可能なプロパティを &lt;code&gt;Object.prototype&lt;/code&gt; および &lt;code&gt;String.prototype&lt;/code&gt; から継承します。ループは、オブジェクト自体の列挙可能なすべてのプロパティと、オブジェクトがコンストラクターのプロトタイプから継承するプロパティ（プロトタイプチェーンのオブジェクトに近いプロパティがプロトタイプのプロパティをオーバーライドする）を反復します。</target>
        </trans-unit>
        <trans-unit id="f493c685e2af3c36b9e9a0ad27b2e26084f56baf" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;for...in&lt;/code&gt; loop only iterates over enumerable, non-Symbol properties. Objects created from built&amp;ndash;in constructors like &lt;code&gt;Array&lt;/code&gt; and &lt;code&gt;Object&lt;/code&gt; have inherited non&amp;ndash;enumerable properties from &lt;code&gt;Object.prototype&lt;/code&gt; and &lt;code&gt;String.prototype&lt;/code&gt;, such as &lt;a href=&quot;../global_objects/string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;'s &lt;a href=&quot;../global_objects/string/indexof&quot;&gt;&lt;code&gt;indexOf()&lt;/code&gt;&lt;/a&gt; method or &lt;a href=&quot;../global_objects/object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;'s &lt;a href=&quot;../global_objects/object/tostring&quot;&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/a&gt; method. The loop will iterate over all enumerable properties of the object itself and those the object inherits from its prototype chain (properties of nearer prototypes take precedence over those of prototypes further away from the object in its prototype chain).</source>
          <target state="translated">A &lt;code&gt;for...in&lt;/code&gt; loop only iterates over enumerable, non-Symbol properties. Objects created from built&amp;ndash;in constructors like &lt;code&gt;Array&lt;/code&gt; and &lt;code&gt;Object&lt;/code&gt; have inherited non&amp;ndash;enumerable properties from &lt;code&gt;Object.prototype&lt;/code&gt; and &lt;code&gt;String.prototype&lt;/code&gt; , such as &lt;a href=&quot;../global_objects/string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;'s &lt;a href=&quot;../global_objects/string/indexof&quot;&gt; &lt;code&gt;indexOf()&lt;/code&gt; &lt;/a&gt; method or &lt;a href=&quot;../global_objects/object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;'s &lt;a href=&quot;../global_objects/object/tostring&quot;&gt; &lt;code&gt;toString()&lt;/code&gt; &lt;/a&gt; method. The loop will iterate over all enumerable properties of the object itself and those the object inherits from its prototype chain (properties of nearer prototypes take precedence over those of prototypes further away from the object in its prototype chain).</target>
        </trans-unit>
        <trans-unit id="e7396441d91b985770db10dbd377efee8986b41f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;function*&lt;/code&gt; expression is very similar to and has almost the same syntax as a &lt;a href=&quot;../statements/function*&quot;&gt;&lt;code&gt;function* statement&lt;/code&gt;&lt;/a&gt;. The main difference between a &lt;code&gt;function*&lt;/code&gt; expression and a &lt;code&gt;function*&lt;/code&gt; statement is the &lt;em&gt;function name,&lt;/em&gt; which can be omitted in &lt;code&gt;function*&lt;/code&gt; expressions to create &lt;em&gt;anonymous&lt;/em&gt; generator functions. See also the chapter about &lt;a href=&quot;../functions&quot;&gt;functions&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;function*&lt;/code&gt; 式は非常によく似ているとほぼ同じ構文を持っている&lt;a href=&quot;../statements/function*&quot;&gt; &lt;code&gt;function* statement&lt;/code&gt; &lt;/a&gt;。 &lt;code&gt;function*&lt;/code&gt; 式と &lt;code&gt;function*&lt;/code&gt; ステートメントの主な違いは、&lt;em&gt;関数名&lt;/em&gt;です。&lt;em&gt;無名&lt;/em&gt;ジェネレーター関数を作成するために &lt;code&gt;function*&lt;/code&gt; 式で省略できます。詳細については、&lt;a href=&quot;../functions&quot;&gt;関数&lt;/a&gt;に関する章も参照してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0ae3ae7fdbd64d8870a1b57b02926c41a8502678" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;function*&lt;/code&gt; expression is very similar to and has almost the same syntax as a &lt;a href=&quot;../statements/function*&quot;&gt;function* statement&lt;/a&gt;. The main difference between a &lt;code&gt;function*&lt;/code&gt; expression and a &lt;code&gt;function*&lt;/code&gt; statement is the &lt;em&gt;function name&lt;/em&gt;, which can be omitted in &lt;code&gt;function*&lt;/code&gt; expressions to create &lt;em&gt;anonymous&lt;/em&gt; generator functions. See also the chapter about &lt;a href=&quot;../functions&quot;&gt;&lt;code&gt;functions&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">A &lt;code&gt;function*&lt;/code&gt; expression is very similar to and has almost the same syntax as a &lt;a href=&quot;../statements/function*&quot;&gt;function* statement&lt;/a&gt;. The main difference between a &lt;code&gt;function*&lt;/code&gt; expression and a &lt;code&gt;function*&lt;/code&gt; statement is the &lt;em&gt;function name&lt;/em&gt;, which can be omitted in &lt;code&gt;function*&lt;/code&gt; expressions to create &lt;em&gt;anonymous&lt;/em&gt; generator functions. See also the chapter about &lt;a href=&quot;../functions&quot;&gt; &lt;code&gt;functions&lt;/code&gt; &lt;/a&gt; for more information.</target>
        </trans-unit>
        <trans-unit id="0885aa60cec60add5a4d742590d720ff4f54a24c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;return&lt;/code&gt; statement in a generator, when executed, will make the generator finish (i.e. the &lt;code&gt;done&lt;/code&gt; property of the object returned by it will be set to &lt;code&gt;true&lt;/code&gt;). If a value is returned, it will be set as the &lt;code&gt;value&lt;/code&gt; property of the object returned by the generator.</source>
          <target state="translated">A &lt;code&gt;return&lt;/code&gt; statement in a generator, when executed, will make the generator finish (i.e. the &lt;code&gt;done&lt;/code&gt; property of the object returned by it will be set to &lt;code&gt;true&lt;/code&gt; ). If a value is returned, it will be set as the &lt;code&gt;value&lt;/code&gt; property of the object returned by the generator.</target>
        </trans-unit>
        <trans-unit id="161855917ba8e27cb251bc7e0ab15523733382a4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;return&lt;/code&gt; statement in a generator, when executed, will make the generator finished (i.e the &lt;code&gt;done&lt;/code&gt; property of the object returned by it will be set to &lt;code&gt;true&lt;/code&gt;). If a value is returned, it will be set as the &lt;code&gt;value&lt;/code&gt; property of the object returned by the generator.</source>
          <target state="translated">&lt;code&gt;return&lt;/code&gt; ジェネレータ内のステートメントは、実行されると、（つまり、発電機が終了になります &lt;code&gt;done&lt;/code&gt; 、それによって返されたオブジェクトのプロパティがに設定されます &lt;code&gt;true&lt;/code&gt; ）。値が返された &lt;code&gt;value&lt;/code&gt; 、ジェネレーターによって返されたオブジェクトのvalueプロパティとして設定されます。</target>
        </trans-unit>
        <trans-unit id="4474a11d6a0cb1e47f81f7e84e9294ccdcb77ffb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;switch&lt;/code&gt; statement first evaluates its expression. It then looks for the first &lt;code&gt;case&lt;/code&gt; clause whose expression evaluates to the same value as the result of the input expression (using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators&quot;&gt;strict comparison&lt;/a&gt;, &lt;code&gt;===&lt;/code&gt;) and transfers control to that clause, executing the associated statements. (If multiple &lt;code&gt;case&lt;/code&gt;s match the provided value, the first &lt;code&gt;case&lt;/code&gt; that matches is selected, even if the &lt;code&gt;case&lt;/code&gt;s are not equal to each other.)</source>
          <target state="translated">A &lt;code&gt;switch&lt;/code&gt; statement first evaluates its expression. It then looks for the first &lt;code&gt;case&lt;/code&gt; clause whose expression evaluates to the same value as the result of the input expression (using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators&quot;&gt;strict comparison&lt;/a&gt;, &lt;code&gt;===&lt;/code&gt; ) and transfers control to that clause, executing the associated statements. (If multiple &lt;code&gt;case&lt;/code&gt; s match the provided value, the first &lt;code&gt;case&lt;/code&gt; that matches is selected, even if the &lt;code&gt;case&lt;/code&gt; s are not equal to each other.)</target>
        </trans-unit>
        <trans-unit id="553b384fbb6585ba773d28d758f9f429de0314f4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;then&lt;/code&gt; call will return a rejected promise if the function throws an error or returns a rejected Promise.</source>
          <target state="translated">&lt;code&gt;then&lt;/code&gt; 関数がエラーをスローまたは拒否の約束を返す場合、コールは拒否約束を返します。</target>
        </trans-unit>
        <trans-unit id="f85669998c43af1d574900f10da9c77e5f1b39dd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;this&lt;/code&gt; behaves a little differently in JavaScript compared to other languages. It also has some differences between &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt; and non-strict mode.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; 、異なるJavaScriptで少しは他の言語に比べて動作します。&lt;a href=&quot;../strict_mode&quot;&gt;厳格モード&lt;/a&gt;と非厳格モードの間にもいくつかの違いがあります。</target>
        </trans-unit>
        <trans-unit id="e736d0f4e065e89736483a5edb09020c00eb2377" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;yield&lt;/code&gt;, which causes the generator to once again pause and return the generator's new value. The next time &lt;code&gt;next()&lt;/code&gt; is called, execution resumes with the statement immediately after the &lt;code&gt;yield&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;yield&lt;/code&gt; ジェネレータは再び一時停止し、発電機の新しい値を返すようになり、。次に &lt;code&gt;next()&lt;/code&gt; が呼び出されると、 &lt;code&gt;yield&lt;/code&gt; の直後のステートメントから実行が再開されます。</target>
        </trans-unit>
        <trans-unit id="cf024d343332c9a271ae80fcae03d8a4d750816d" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;&lt;a href=&quot;../statements/function&quot;&gt;function statement&lt;/a&gt;&lt;/em&gt; (or &lt;em&gt;function declaration&lt;/em&gt;) requires a name, this won't work:</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../statements/function&quot;&gt;function文&lt;/a&gt;&lt;/em&gt;（または&lt;em&gt;関数宣言は&lt;/em&gt;）名前を必要とし、これは動作しません。</target>
        </trans-unit>
        <trans-unit id="3778b81b203c21ee19e5a64392e174588d725865" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;bitmask&lt;/em&gt; is a sequence of bits that can manipulate and/or read flags. Typically, a &quot;primitive&quot; bitmask for each flag is defined:</source>
          <target state="translated">&lt;em&gt;ビットマスクは、&lt;/em&gt;操作および/またはフラグを読み取ることができるビットのシーケンスです。通常、各フラグの「プリミティブ」ビットマスクが定義されています。</target>
        </trans-unit>
        <trans-unit id="616c71df006301f0a75f6e4ff7f05b356e995341" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;function declaration&lt;/em&gt; of a function named &lt;code&gt;multiply&lt;/code&gt;:</source>
          <target state="translated">&lt;em&gt;関数宣言&lt;/em&gt;という名前の関数の &lt;code&gt;multiply&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="35894eb871c6c979df3d1ba81e1c6ca6f8e00686" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;function expression&lt;/em&gt; of a function named &lt;code&gt;func_name&lt;/code&gt; assigned to the variable &lt;code&gt;multiply:&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;関数式&lt;/em&gt;関数という名前の &lt;code&gt;func_name&lt;/code&gt; 変数に代入 &lt;code&gt;multiply:&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a16b80918021826a12c3ca2b99b7b638286b8d63" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;function expression&lt;/em&gt; of an anonymous function assigned to the variable &lt;code&gt;multiply:&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;関数式&lt;/em&gt;の変数に割り当てられた匿名関数の &lt;code&gt;multiply:&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="263df47ad71e670e4e970b2ffa6cfa62611acb65" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;second&lt;/em&gt; decimal point also stops parsing (characters up to that point will still be parsed).</source>
          <target state="translated">A &lt;em&gt;second&lt;/em&gt; decimal point also stops parsing (characters up to that point will still be parsed).</target>
        </trans-unit>
        <trans-unit id="4cecb0627284110016a4476607f97b3720e6e60d" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;&lt;em&gt;TypedArray&lt;/em&gt;&lt;/strong&gt; object describes an array-like view of an underlying &lt;a href=&quot;arraybuffer&quot;&gt;binary data buffer&lt;/a&gt;. There is no global property named &lt;code&gt;TypedArray&lt;/code&gt;, nor is there a directly visible &lt;code&gt;TypedArray&lt;/code&gt; constructor. Instead, there are a number of different global properties, whose values are typed array constructors for specific element types, listed below. On the following pages you will find common properties and methods that can be used with any typed array containing elements of any type.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;TypedArrayの&lt;/em&gt;&lt;/strong&gt;オブジェクトは、アレイ状の基礎となるのビューについて説明&lt;a href=&quot;arraybuffer&quot;&gt;バイナリデータバッファ&lt;/a&gt;。 &lt;code&gt;TypedArray&lt;/code&gt; という名前のグローバルプロパティはなく、直接表示される &lt;code&gt;TypedArray&lt;/code&gt; コンストラクターもありません。代わりに、いくつかの異なるグローバルプロパティがあり、それらの値は、以下にリストされている特定の要素タイプの型付き配列コンストラクターです。次のページでは、任意の型の要素を含む任意の型付き配列で使用できる一般的なプロパティとメソッドを見つけます。</target>
        </trans-unit>
        <trans-unit id="aa579d21ba2bdc16457e925ebb2e998ff9990548" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;block statement&lt;/strong&gt; (or &lt;strong&gt;compound statement&lt;/strong&gt; in other languages) is used to group zero or more statements. The block is delimited by a pair of braces (&quot;curly brackets&quot;) and may optionally be &lt;a href=&quot;label&quot;&gt;labelled&lt;/a&gt;:</source>
          <target state="translated">A &lt;strong&gt;block statement&lt;/strong&gt; (or &lt;strong&gt;compound statement&lt;/strong&gt; in other languages) is used to group zero or more statements. The block is delimited by a pair of braces (&quot;curly brackets&quot;) and may optionally be &lt;a href=&quot;label&quot;&gt;labelled&lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="4ffdaf43db80d9813eafb43fcb11b04b02619eba" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;class expression&lt;/strong&gt; is another way to define a class. Class expressions can be named or unnamed. The name given to a named class expression is local to the class's body. (it can be retrieved through the class's (not an instance's) &lt;a href=&quot;global_objects/function/name&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; property, though).</source>
          <target state="translated">&lt;strong&gt;クラス式は&lt;/strong&gt;クラスを定義する別の方法です。クラス式は、名前を付けても付けなくてもかまいません。名前付きクラス式に付けられた名前は、クラスの本体に対してローカルです。（ただし、（インスタンスではなく）クラスの&lt;a href=&quot;global_objects/function/name&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;プロパティを通じて取得できます）。</target>
        </trans-unit>
        <trans-unit id="9c1b743d74412b9ac364209d49648bddc1c6251b" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;data descriptor&lt;/strong&gt; also has the following optional keys:</source>
          <target state="translated">A &lt;strong&gt;data descriptor&lt;/strong&gt; also has the following optional keys:</target>
        </trans-unit>
        <trans-unit id="41cc14d5e989fd9438ef1827b2a97307e749c2da" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;negative&lt;/strong&gt; number if &lt;code&gt;&lt;var&gt;referenceStr&lt;/var&gt;&lt;/code&gt; occurs before &lt;code&gt;&lt;var&gt;compareString&lt;/var&gt;&lt;/code&gt;; &lt;strong&gt;positive&lt;/strong&gt; if the &lt;code&gt;&lt;var&gt;referenceStr&lt;/var&gt;&lt;/code&gt; occurs after &lt;code&gt;&lt;var&gt;compareString&lt;/var&gt;&lt;/code&gt;; &lt;code&gt;0&lt;/code&gt; if they are equivalent.</source>
          <target state="translated">A &lt;strong&gt;negative&lt;/strong&gt; number if &lt;code&gt;&lt;var&gt;referenceStr&lt;/var&gt;&lt;/code&gt; occurs before &lt;code&gt;&lt;var&gt;compareString&lt;/var&gt;&lt;/code&gt; ; &lt;strong&gt;positive&lt;/strong&gt; if the &lt;code&gt;&lt;var&gt;referenceStr&lt;/var&gt;&lt;/code&gt; occurs after &lt;code&gt;&lt;var&gt;compareString&lt;/var&gt;&lt;/code&gt; ; &lt;code&gt;0&lt;/code&gt; if they are equivalent.</target>
        </trans-unit>
        <trans-unit id="e1828be1ceabd01ec290c6d2e59d9a92810744db" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;negative&lt;/strong&gt; number if the reference string occurs before the compare string; &lt;strong&gt;positive&lt;/strong&gt; if the reference string occurs after the compare string; &lt;strong&gt;0&lt;/strong&gt; if they are equivalent.</source>
          <target state="translated">&lt;strong&gt;陰性&lt;/strong&gt;参照ストリングを比較する文字列の前に発生した場合の数; 参照文字列が比較文字列の後にある場合は&lt;strong&gt;正&lt;/strong&gt;。同等の場合は&lt;strong&gt;0&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="df1fd9e80de43273a6485b1a24756946a1ea7ac2" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;pending&lt;/strong&gt;&lt;a href=&quot;../promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; in all other cases. This returned promise is then resolved/rejected &lt;strong&gt;asynchronously&lt;/strong&gt; (as soon as the stack is empty) when all the promises in the given &lt;var&gt;iterable&lt;/var&gt; have resolved, or if any of the promises reject. See the example about &quot;Asynchronicity or synchronicity of Promise.all&quot; below. Returned values will be in order of the Promises passed, regardless of completion order.</source>
          <target state="translated">&lt;strong&gt;保留&lt;/strong&gt;&lt;a href=&quot;../promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;他のすべての場合インチ この返されたpromiseは、指定された &lt;var&gt;iterable&lt;/var&gt; 内のすべてのpromiseが解決されたとき、またはいずれかのpromiseが拒否されたときに、&lt;strong&gt;非同期に&lt;/strong&gt;（スタックが空になると）解決/拒否され&lt;strong&gt;ます&lt;/strong&gt;。下記の「Promise.allの非同期性または同期性」の例を参照してください。戻り値は、完了順序に関係なく、渡されたPromiseの順序になります。</target>
        </trans-unit>
        <trans-unit id="25ad8a62b7513322b403e0f619eb8a058805f04f" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;pending&lt;/strong&gt;&lt;a href=&quot;../promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that &lt;strong&gt;asynchronously &lt;/strong&gt;yields the value of first promise in the given iterable to resolve or reject.</source>
          <target state="translated">解決または拒否する指定されたイテラブルの最初のプロミスの値を&lt;strong&gt;非同期で&lt;/strong&gt;生成する&lt;strong&gt;保留中の&lt;/strong&gt;&lt;a href=&quot;../promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="625e738b61d0756180f999c1af256acfeeb1f296" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;pending&lt;/strong&gt;&lt;a href=&quot;../promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that &lt;strong&gt;asynchronously&lt;/strong&gt; yields the value of the first promise in the given iterable to fulfill or reject.</source>
          <target state="translated">A &lt;strong&gt;pending&lt;/strong&gt;&lt;a href=&quot;../promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt; that &lt;strong&gt;asynchronously&lt;/strong&gt; yields the value of the first promise in the given iterable to fulfill or reject.</target>
        </trans-unit>
        <trans-unit id="02a0219c38d84676f5da6ee3322b83dba7383620" translate="yes" xml:space="preserve">
          <source>A BCP 47 language tag defines a language and minimally contains a primary language code. In its most common form it can contain, in order: a language code, a script code, and a country or region code, all separated by hyphens. While the tag is not case sensitive, it is recommended to use title case for script code, upper case for country and region codes and lower case for everything else.</source>
          <target state="translated">BCP 47言語タグは、言語を定義し、最小限のプライマリ言語コードを含む。最も一般的な形式では、言語コード、スクリプトコード、国または地域コードの順にハイフンで区切られています。このタグは大文字と小文字を区別しませんが、スクリプトコードにはタイトルケース、国コードと地域コードには大文字、それ以外のものには小文字を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="43804a4a9aa6352b15786146999b141dd3cea0a4" translate="yes" xml:space="preserve">
          <source>A Boolean value indicating if an object should be flattened to its array elements. Used by &lt;a href=&quot;array/concat&quot;&gt;&lt;code&gt;Array.prototype.concat()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">オブジェクトを配列要素にフラット化する必要があるかどうかを示すブール値。&lt;a href=&quot;array/concat&quot;&gt; &lt;code&gt;Array.prototype.concat()&lt;/code&gt; &lt;/a&gt;によって使用されます。</target>
        </trans-unit>
        <trans-unit id="73c4fecc39afe3b7d7ff135a3c3914a49616975e" translate="yes" xml:space="preserve">
          <source>A JSON string representing the given value.</source>
          <target state="translated">与えられた値を表すJSON文字列。</target>
        </trans-unit>
        <trans-unit id="75d1f145db781ec7a8306c0f9c1ded681ab8f7b5" translate="yes" xml:space="preserve">
          <source>A JavaScript array is initialized with the given elements, except in the case where a single argument is passed to the &lt;code&gt;Array&lt;/code&gt; constructor and that argument is a number (see the arrayLength parameter below). Note that this special case only applies to JavaScript arrays created with the &lt;code&gt;Array&lt;/code&gt; constructor, not array literals created with the bracket syntax.</source>
          <target state="translated">JavaScript配列は、単一の引数が &lt;code&gt;Array&lt;/code&gt; コンストラクターに渡され、その引数が数値である場合を除いて、指定された要素で初期化されます（以下のarrayLengthパラメーターを参照）。この特殊なケースは、 &lt;code&gt;Array&lt;/code&gt; コンストラクターで作成されたJavaScript配列にのみ適用され、ブラケット構文で作成された配列リテラルには適用されないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="ff4a510909cc8b2aa54304f2098fbad0fe842875" translate="yes" xml:space="preserve">
          <source>A JavaScript array's &lt;a href=&quot;array/length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; property and numerical properties are connected.</source>
          <target state="translated">A JavaScript array's &lt;a href=&quot;array/length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt; property and numerical properties are connected.</target>
        </trans-unit>
        <trans-unit id="687c3ed1334648e979e3b2e6e75ba3934e437431" translate="yes" xml:space="preserve">
          <source>A JavaScript array's &lt;a href=&quot;array/length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; property and numerical properties are connected. Several of the built-in array methods (e.g., &lt;a href=&quot;array/join&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array/slice&quot;&gt;&lt;code&gt;slice()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array/indexof&quot;&gt;&lt;code&gt;indexOf()&lt;/code&gt;&lt;/a&gt;, etc.) take into account the value of an array's &lt;a href=&quot;array/length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; property when they're called. Other methods (e.g., &lt;a href=&quot;array/push&quot;&gt;&lt;code&gt;push()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array/splice&quot;&gt;&lt;code&gt;splice()&lt;/code&gt;&lt;/a&gt;, etc.) also result in updates to an array's &lt;a href=&quot;array/length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">JavaScript配列の&lt;a href=&quot;array/length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt;プロパティと数値プロパティが関連付けられています。組み込みの配列メソッドのいくつか（例：&lt;a href=&quot;array/join&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;array/slice&quot;&gt; &lt;code&gt;slice()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;array/indexof&quot;&gt; &lt;code&gt;indexOf()&lt;/code&gt; &lt;/a&gt;など）は、呼び出されたときに配列の&lt;a href=&quot;array/length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt;プロパティの値を考慮します。他のメソッド（例：&lt;a href=&quot;array/push&quot;&gt; &lt;code&gt;push()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;array/splice&quot;&gt; &lt;code&gt;splice()&lt;/code&gt; &lt;/a&gt;など）も、配列の&lt;a href=&quot;array/length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt;プロパティを更新します。</target>
        </trans-unit>
        <trans-unit id="cb52e4cfe7c5d42da42a787ab6827707d82ffdc4" translate="yes" xml:space="preserve">
          <source>A JavaScript date is fundamentally specified as the number of milliseconds that have elapsed since midnight on January 1, 1970, UTC. This date and time are not the same as the &lt;strong&gt;UNIX epoch &lt;/strong&gt;(the number of seconds that have elapsed since midnight on January 1, 1970, UTC), which is the predominant base value for computer-recorded date and time values.</source>
          <target state="translated">A JavaScript date is fundamentally specified as the number of milliseconds that have elapsed since midnight on January 1, 1970, UTC. This date and time are not the same as the &lt;strong&gt;UNIX epoch &lt;/strong&gt;(the number of seconds that have elapsed since midnight on January 1, 1970, UTC), which is the predominant base value for computer-recorded date and time values.</target>
        </trans-unit>
        <trans-unit id="f8252cb059d152f4c5282ca286dd2eac86683b49" translate="yes" xml:space="preserve">
          <source>A JavaScript expression or statement.</source>
          <target state="translated">JavaScript の式または文。</target>
        </trans-unit>
        <trans-unit id="b7baf04c55848a7dee60b6538de0c81bba6f8335" translate="yes" xml:space="preserve">
          <source>A JavaScript identifier must start with a letter, underscore (_), or dollar sign ($). They can't start with a digit! Only subsequent characters can be digits (0-9).</source>
          <target state="translated">JavaScript の識別子は、文字、アンダースコア (_)、またはドル記号 ($)で始まらなければなりません。数字で始まることはできません。それ以降の文字は、数字 (0-9)のみにすることができます。</target>
        </trans-unit>
        <trans-unit id="436105a2e47eb8b6b91a0f5ffa9c533a30bfd6f8" translate="yes" xml:space="preserve">
          <source>A JavaScript statement. &lt;code&gt;break&lt;/code&gt; can be used with any labeled statement, and &lt;code&gt;continue&lt;/code&gt; can be used with looping labeled statements.</source>
          <target state="translated">JavaScriptステートメント。 &lt;code&gt;break&lt;/code&gt; は任意のラベル付きステートメントで使用でき、 &lt;code&gt;continue&lt;/code&gt; はラベル付きステートメントのループで使用できます。</target>
        </trans-unit>
        <trans-unit id="f06db2b9d1c09f3e2c77889d9d3b0c6ac22d6231" translate="yes" xml:space="preserve">
          <source>A Proxy object created with &lt;code&gt;new Proxy(target, handler)&lt;/code&gt; call.</source>
          <target state="translated">&lt;code&gt;new Proxy(target, handler)&lt;/code&gt; 呼び出しで作成されたProxyオブジェクト。</target>
        </trans-unit>
        <trans-unit id="8e4136f228dfc977ef8108eb316e1654ad369597" translate="yes" xml:space="preserve">
          <source>A Taste of JavaScript&amp;rsquo;s New Parallel Primitives &amp;ndash; Mozilla Hacks</source>
          <target state="translated">JavaScriptの新しい並列プリミティブの味&amp;ndash; Mozillaハック</target>
        </trans-unit>
        <trans-unit id="3da9f02c82de99b82051356f307c7c476167dd0e" translate="yes" xml:space="preserve">
          <source>A Unicode BCP 47 locale identifier consists of</source>
          <target state="translated">Unicode BCP 47 ロケール識別子は、以下のように構成されます。</target>
        </trans-unit>
        <trans-unit id="c4aecde4d6fdca34ead5a48a782644f5bd00c362" translate="yes" xml:space="preserve">
          <source>A Unicode code point escape consists of &lt;code&gt;\u{&lt;/code&gt;, followed by a code point in hexadecimal base, followed by &lt;code&gt;}&lt;/code&gt;. The value of the hexadecimal digits must be in the range 0 and 0x10FFFF inclusive. Code points in the range U+10000 to U+10FFFF do not need to be represented as a surrogate pair. Code point escapes were added to JavaScript in ECMAScript 2015 (ES6).</source>
          <target state="translated">Unicodeコードポイントエスケープは、 &lt;code&gt;\u{&lt;/code&gt; 、16進数ベースのコードポイント、 &lt;code&gt;}&lt;/code&gt; で構成されます。16進数の値は、0から0x10FFFFまでの範囲でなければなりません。U + 10000からU + 10FFFFの範囲のコードポイントは、サロゲートペアとして表す必要はありません。ECMAScript 2015（ES6）のJavaScriptにコードポイントエスケープが追加されました。</target>
        </trans-unit>
        <trans-unit id="83c551c83eb732fea88b2681ba8c3ba07f268b35" translate="yes" xml:space="preserve">
          <source>A Unicode escape sequence consists of exactly four hexadecimal digits following &lt;code&gt;\u&lt;/code&gt;. It represents a code unit in the UTF-16 encoding. For code points U+0000 to U+FFFF, the code unit is equal to the code point. Code points U+10000 to U+10FFFF require two escape sequences representing the two code units (a surrogate pair) used to encode the character; the surrogate pair is distinct from the code point.</source>
          <target state="translated">Unicodeエスケープシーケンスは、 &lt;code&gt;\u&lt;/code&gt; 続く4桁の16進数で構成されます。これは、UTF-16エンコーディングのコード単位を表します。コードポイントU + 0000〜U + FFFFの場合、コード単位はコードポイントと同じです。コードポイントU + 10000〜U + 10FFFFには、文字のエンコードに使用される2つのコード単位（サロゲートペア）を表す2つのエスケープシーケンスが必要です。サロゲートペアはコードポイントとは異なります。</target>
        </trans-unit>
        <trans-unit id="0aa411b19c7b113c3f6431bfadad85e7d602cfb8" translate="yes" xml:space="preserve">
          <source>A basic usage of &lt;code&gt;toDateString()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;toDateString()&lt;/code&gt; の基本的な使用法</target>
        </trans-unit>
        <trans-unit id="f2adaab87823eb11e318653dbb7524a3415a8bbc" translate="yes" xml:space="preserve">
          <source>A basic usage of &lt;code&gt;toTimeString()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;toTimeString()&lt;/code&gt; の基本的な使用法</target>
        </trans-unit>
        <trans-unit id="8946dbb80ecbd78b3caec10ad76c220aca0abd3f" translate="yes" xml:space="preserve">
          <source>A basic usage of toDateString()</source>
          <target state="translated">toDateString()の基本的な使い方</target>
        </trans-unit>
        <trans-unit id="5541d1609024d0f0f41b5168fb0ef4739dc4e923" translate="yes" xml:space="preserve">
          <source>A basic usage of toTimeString()</source>
          <target state="translated">toTimeString()の基本的な使い方</target>
        </trans-unit>
        <trans-unit id="3e5e2bb2fff74dd2824727799dc53fdbdf26d42d" translate="yes" xml:space="preserve">
          <source>A basic use of &lt;code&gt;propertyIsEnumerable&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;propertyIsEnumerable&lt;/code&gt; の基本的な使用法</target>
        </trans-unit>
        <trans-unit id="c3d28ecde68257b2160cddfa287b4ca4597e80f2" translate="yes" xml:space="preserve">
          <source>A better method for replacing strings is as follows:</source>
          <target state="translated">文字列を置き換えるより良い方法は以下のようになります。</target>
        </trans-unit>
        <trans-unit id="d891a2194b452ecf93acc6c1566c1656cc91ed7f" translate="yes" xml:space="preserve">
          <source>A better way to concatenate arrays</source>
          <target state="translated">配列を連結するより良い方法</target>
        </trans-unit>
        <trans-unit id="4f9620050291138aff1d61b1756309b0d6ca9fea" translate="yes" xml:space="preserve">
          <source>A bitmask with multiple set flags acts like an &quot;either/or&quot;. For example, the following two are equivalent:</source>
          <target state="translated">複数のセットフラグを持つビットマスクは、&quot;どちらか一方 &quot;のように動作します。例えば、以下の2つは等価です。</target>
        </trans-unit>
        <trans-unit id="e5158c94a77d08d4208572b614ef2e4231f2f8b8" translate="yes" xml:space="preserve">
          <source>A block statement is used to group zero or more statements. The block is delimited by a pair of curly brackets.</source>
          <target state="translated">ブロック文は、0個以上の文をグループ化するために使用されます。ブロックは一組の中括弧で区切られます。</target>
        </trans-unit>
        <trans-unit id="91851f30b1a551d659f6525abe80e9d7be51f491" translate="yes" xml:space="preserve">
          <source>A boolean that specifies whether &lt;code&gt;bufferSource&lt;/code&gt; is valid wasm code (&lt;code&gt;true&lt;/code&gt;) or not (&lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;bufferSource&lt;/code&gt; が有効なwasmコードであるか（ &lt;code&gt;true&lt;/code&gt; ）、否か（ &lt;code&gt;false&lt;/code&gt; ）を指定するブール値。</target>
        </trans-unit>
        <trans-unit id="96907b702b7de254e4bd62aa2a7b5f4e95c8e6bd" translate="yes" xml:space="preserve">
          <source>A bound function has the following internal properties:</source>
          <target state="translated">バインド関数は、以下の内部特性を持っています。</target>
        </trans-unit>
        <trans-unit id="d47a697b7604504f78dbe75d9483a21473f34c7d" translate="yes" xml:space="preserve">
          <source>A bound function may also be constructed using the &lt;a href=&quot;../../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. Doing so acts as though the target function had instead been constructed. The provided &lt;code&gt;this&lt;/code&gt; value is ignored, while prepended arguments are provided to the emulated function.</source>
          <target state="translated">A bound function may also be constructed using the &lt;a href=&quot;../../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; operator. Doing so acts as though the target function had instead been constructed. The provided &lt;code&gt;this&lt;/code&gt; value is ignored, while prepended arguments are provided to the emulated function.</target>
        </trans-unit>
        <trans-unit id="ee1ad7b74d0c975ebc4417e9a80894a26b0bfe7e" translate="yes" xml:space="preserve">
          <source>A bound function may also be constructed using the &lt;a href=&quot;../../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator: doing so acts as though the target function had instead been constructed. The provided &lt;code&gt;this&lt;/code&gt; value is ignored, while prepended arguments are provided to the emulated function.</source>
          <target state="translated">バインドされた関数は、&lt;a href=&quot;../../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt;演算子を使用して作成することもできます。そうすることで、ターゲット関数が作成されたかのように動作します。提供された &lt;code&gt;this&lt;/code&gt; 値は無視されますが、前に追加された引数はエミュレートされた関数に提供されます。</target>
        </trans-unit>
        <trans-unit id="66756ce407f56ad7efaf31208c3ddd69a72b610d" translate="yes" xml:space="preserve">
          <source>A callback function that produces an element of the new typed array, taking three arguments:</source>
          <target state="translated">3つの引数を取り、新しい型付き配列の要素を生成するコールバック関数。</target>
        </trans-unit>
        <trans-unit id="8a5913715a114a560d95c181d3ab1214153cb231" translate="yes" xml:space="preserve">
          <source>A car constructor</source>
          <target state="translated">カーコンストラクター</target>
        </trans-unit>
        <trans-unit id="e259aa87721071e379d123997ab81127c59fa545" translate="yes" xml:space="preserve">
          <source>A character set. Matches any one of the enclosed characters. You can specify a range of characters by using a hyphen, but if the hyphen appears as the first or last character enclosed in the square brackets it is taken as a literal hyphen to be included in the character set as a normal character. It is also possible to include a character class in a character set.</source>
          <target state="translated">文字セットです。囲まれた文字のいずれかにマッチします。ハイフンを使って文字の範囲を指定することもできますが、角括弧で囲まれた最初の文字または最後の文字としてハイフンが現れた場合は、リテラルハイフンとして扱われ、通常の文字として文字セットに含まれます。文字集合に文字クラスを含めることも可能です。</target>
        </trans-unit>
        <trans-unit id="d9454cf43a106d619fb8d537cadb084a577d879a" translate="yes" xml:space="preserve">
          <source>A check that works in all hosts, including those supporting ECMA-262 prior to ed 5.1, is to test for the features specified in ECMA-402 that are required to support regional options for &lt;code&gt;Number.prototype.toLocaleString&lt;/code&gt; directly:</source>
          <target state="translated">ed 5.1より前のECMA-262をサポートするホストを含​​むすべてのホストで機能するチェックは、 &lt;code&gt;Number.prototype.toLocaleString&lt;/code&gt; の地域オプションを直接サポートするために必要なECMA-402で指定された機能をテストすることです。</target>
        </trans-unit>
        <trans-unit id="8954517a37b49c35126e9399936b6f4eee8e1309" translate="yes" xml:space="preserve">
          <source>A class can't be redefined. Attempting to do so produces a &lt;code&gt;SyntaxError&lt;/code&gt;.</source>
          <target state="translated">A class can't be redefined. Attempting to do so produces a &lt;code&gt;SyntaxError&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5481a904921a8ba55f21919a323f8932aefcb6b5" translate="yes" xml:space="preserve">
          <source>A class can't be redefined. If you're playing with code in Scratchpad (Firefox menu Tools &amp;gt; Web Developer &amp;gt; Scratchpad) and you 'Run' a definition of a class with the same name twice, you'll get a confusing SyntaxError: redeclaration of let &amp;lt;class-name&amp;gt;.</source>
          <target state="translated">クラスは再定義できません。Scratchpad（Firefoxメニューの[ツール]&amp;gt; [Web Developer]&amp;gt; [Scratchpad]）でコードを操作していて、同じ名前のクラスの定義を2回「実行」すると、混乱するSyntaxErrorが発生します：let &amp;lt;class-nameの再宣言&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="881d7438ac790aaff1335b8c41281f9c452e5865" translate="yes" xml:space="preserve">
          <source>A class expression has a similar syntax to a &lt;a href=&quot;../statements/class&quot;&gt;class declaration (statement)&lt;/a&gt;. As with &lt;code&gt;class&lt;/code&gt; statements, the body of a &lt;code&gt;class&lt;/code&gt; expression is executed in &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt;.</source>
          <target state="translated">A class expression has a similar syntax to a &lt;a href=&quot;../statements/class&quot;&gt;class declaration (statement)&lt;/a&gt;. As with &lt;code&gt;class&lt;/code&gt; statements, the body of a &lt;code&gt;class&lt;/code&gt; expression is executed in &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="affc3fe240c869d7d085cacb21c50814994b6abb" translate="yes" xml:space="preserve">
          <source>A class expression has a similar syntax to a &lt;a href=&quot;../statements/class&quot;&gt;class statement (declaration)&lt;/a&gt;. However, with class expressions, you are able to omit the class name (&quot;binding identifier&quot;), which you can't with class statements. Additionally, class expressions allow you to redefine/re-declare classes and &lt;strong&gt;don't throw&lt;/strong&gt; any type errors like &lt;a href=&quot;../statements/class&quot;&gt;class declaration&lt;/a&gt;. The constructor property is optional. And, &lt;em&gt;typeof &lt;/em&gt;the classes generated using this keyword will always be &quot;function&quot;.</source>
          <target state="translated">クラス式の構文は、&lt;a href=&quot;../statements/class&quot;&gt;クラスステートメント（宣言）&lt;/a&gt;と似ています。ただし、クラス式を使用すると、クラス名（「バインディング識別子」）を省略できます。これは、クラスステートメントでは省略できません。さらに、クラス式を使用すると、クラスを再定義/再宣言でき、&lt;a href=&quot;../statements/class&quot;&gt;クラス宣言の&lt;/a&gt;ような型エラーを&lt;strong&gt;スローしません&lt;/strong&gt;。コンストラクターのプロパティーはオプションです。また、このキーワードを使用して生成されたクラスの&lt;em&gt;typeof&lt;/em&gt;は常に「関数」になります。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4be35b651f0a568e026b94e6fff7951293ac21ab" translate="yes" xml:space="preserve">
          <source>A class or function that specifies the type of the object instance.</source>
          <target state="translated">オブジェクトインスタンスの型を指定するクラスまたは関数。</target>
        </trans-unit>
        <trans-unit id="e5ce69bdc537a6d92bff50bc86be8f5ac0f7b9fd" translate="yes" xml:space="preserve">
          <source>A class that uses these mix-ins can then be written like this:</source>
          <target state="translated">これらのミックスインを使用するクラスは、次のように書くことができます。</target>
        </trans-unit>
        <trans-unit id="39aaecfaf4564f23bf1246c8fede726db2847066" translate="yes" xml:space="preserve">
          <source>A combination of &lt;code&gt;Object.getPrototypeOf()&lt;/code&gt; and &lt;a href=&quot;proto&quot;&gt;&lt;code&gt;Object.prototype.__proto__&lt;/code&gt;&lt;/a&gt; permits appending a whole prototype chain to a new prototype object:</source>
          <target state="translated">組み合わせ &lt;code&gt;Object.getPrototypeOf()&lt;/code&gt; と&lt;a href=&quot;proto&quot;&gt; &lt;code&gt;Object.prototype.__proto__&lt;/code&gt; &lt;/a&gt;新しいプロトタイプオブジェクトに全体プロトタイプチェーンを追加可能にします。</target>
        </trans-unit>
        <trans-unit id="9febb3c4a50f8e1846c173f2387eca03a1fbda22" translate="yes" xml:space="preserve">
          <source>A common mistake for new JavaScript programmers is to extract a method from an object, then to later call that function and expect it to use the original object as its &lt;code&gt;this&lt;/code&gt; (e.g., by using the method in callback-based code).</source>
          <target state="translated">A common mistake for new JavaScript programmers is to extract a method from an object, then to later call that function and expect it to use the original object as its &lt;code&gt;this&lt;/code&gt; (e.g., by using the method in callback-based code).</target>
        </trans-unit>
        <trans-unit id="faa291ba7a2e493ee6bfef6afbda140c57994e62" translate="yes" xml:space="preserve">
          <source>A common use case for this is to only catch (and silence) a small subset of expected errors, and then re-throw the error in other cases:</source>
          <target state="translated">このための一般的な使用例は、予想されるエラーの小さなサブセットだけをキャッチして(そして無音にして)、他のケースではエラーを再スローするというものです。</target>
        </trans-unit>
        <trans-unit id="a0680f546a962c0507483054c967152075246ace" translate="yes" xml:space="preserve">
          <source>A comparison operator compares its operands and returns a &lt;code&gt;Boolean&lt;/code&gt; value based on whether the comparison is true.</source>
          <target state="translated">比較演算子は、そのオペランドを比較し、比較が真であるかどうかに基づいて &lt;code&gt;Boolean&lt;/code&gt; 値を返します。</target>
        </trans-unit>
        <trans-unit id="2a5e6d6b9cc37e9b7fcf09def0cba9b52979fb68" translate="yes" xml:space="preserve">
          <source>A complete &lt;code&gt;traps&lt;/code&gt; list example</source>
          <target state="translated">完全な &lt;code&gt;traps&lt;/code&gt; リストの例</target>
        </trans-unit>
        <trans-unit id="8990573b378d4d033dba5042aa1d247500d60c05" translate="yes" xml:space="preserve">
          <source>A complete URI.</source>
          <target state="translated">完全なURIです。</target>
        </trans-unit>
        <trans-unit id="a78fab145b5ed6d4fb7c08eddc013013f7b82918" translate="yes" xml:space="preserve">
          <source>A complete Uniform Resource Identifier.</source>
          <target state="translated">完全な統一リソース識別子。</target>
        </trans-unit>
        <trans-unit id="6b20b13a4fc8de6ca62360304babadde81fa794c" translate="yes" xml:space="preserve">
          <source>A complete, encoded Uniform Resource Identifier.</source>
          <target state="translated">完全にエンコードされたユニフォームリソース識別子。</target>
        </trans-unit>
        <trans-unit id="b2fe7cd29d98cfab312d2e5517380b9c369153c0" translate="yes" xml:space="preserve">
          <source>A conditional expression.</source>
          <target state="translated">条件式です。</target>
        </trans-unit>
        <trans-unit id="f6632e5f5bd9abe4dc368b9d415998f5911b7f4e" translate="yes" xml:space="preserve">
          <source>A constant cannot share its name with a function or a variable in the same scope.</source>
          <target state="translated">定数は、同じスコープ内の関数や変数と名前を共有することはできません。</target>
        </trans-unit>
        <trans-unit id="d13dd078dfced5a0df52d91a69a56bcb59726aa3" translate="yes" xml:space="preserve">
          <source>A constant is a value that cannot be altered by the program during normal execution. It cannot change through re-assignment, and it can't be redeclared. In JavaScript, constants are declared using the &lt;code&gt;&lt;a href=&quot;../statements/const&quot;&gt;const&lt;/a&gt;&lt;/code&gt; keyword.</source>
          <target state="translated">定数は、通常の実行中にプログラムによって変更できない値です。再割り当てによって変更することはできず、再宣言することもできません。JavaScriptでは、定数は &lt;code&gt;&lt;a href=&quot;../statements/const&quot;&gt;const&lt;/a&gt;&lt;/code&gt; キーワードを使用して宣言されます。</target>
        </trans-unit>
        <trans-unit id="db4315ea0ad8def4cff6a9eaa03fe9fdab3d790a" translate="yes" xml:space="preserve">
          <source>A constant is a value that cannot be altered by the program during normal execution. It cannot change through re-assignment, and it can't be redeclared. In JavaScript, constants are declared using the &lt;code&gt;&lt;a href=&quot;../statements/const&quot;&gt;const&lt;/a&gt;&lt;/code&gt; keyword. An initializer for a constant is required; that is, you must specify its value in the same statement in which it's declared (which makes sense, given that it can't be changed later).</source>
          <target state="translated">定数は、通常の実行中にプログラムによって変更できない値です。再割り当てによって変更することはできず、再宣言することもできません。JavaScriptでは、定数は &lt;code&gt;&lt;a href=&quot;../statements/const&quot;&gt;const&lt;/a&gt;&lt;/code&gt; キーワードを使用して宣言されます。定数の初期化子が必要です。つまり、その値は宣言されているのと同じステートメントで指定する必要があります（後で変更できないことを考えると、これは理にかなっています）。</target>
        </trans-unit>
        <trans-unit id="dad3a1b62d9a269bab8c384da4c6f6cbee044610" translate="yes" xml:space="preserve">
          <source>A constructor can use the &lt;code&gt;super&lt;/code&gt; keyword to call the constructor of a parent class.</source>
          <target state="translated">コンストラクターは、 &lt;code&gt;super&lt;/code&gt; キーワードを使用して、親クラスのコンストラクターを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="b371450f5e927216cb5bae14c7dd9abde627d023" translate="yes" xml:space="preserve">
          <source>A constructor can use the &lt;code&gt;super&lt;/code&gt; keyword to call the constructor of the super class.</source>
          <target state="translated">コンストラクターは、 &lt;code&gt;super&lt;/code&gt; キーワードを使用して、スーパークラスのコンストラクターを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="31f37e8c5e9a803cbb19715e0e43277308713142" translate="yes" xml:space="preserve">
          <source>A constructor enables you to provide any custom initialization that must be done before any other methods can be called on an instantiated object.</source>
          <target state="translated">コンストラクタを使用すると、インスタンス化されたオブジェクトに対して他のメソッドを呼び出す前に行う必要のあるカスタムの初期化を提供することができます。</target>
        </trans-unit>
        <trans-unit id="5575539fb8cb6172defee6ff00cdfdd128c54198" translate="yes" xml:space="preserve">
          <source>A constructor function that is used to create derived objects.</source>
          <target state="translated">派生オブジェクトを作成するためのコンストラクタ関数です。</target>
        </trans-unit>
        <trans-unit id="1602adfb08375a1aa14a51a5a997c17b0400dee0" translate="yes" xml:space="preserve">
          <source>A copy of the given function with the specified &lt;code&gt;this&lt;/code&gt; value and initial arguments.</source>
          <target state="translated">指定された &lt;code&gt;this&lt;/code&gt; 値と初期引数を持つ指定された関数のコピー。</target>
        </trans-unit>
        <trans-unit id="75143598e058298ee16cda7e5f76309cd7b1233f" translate="yes" xml:space="preserve">
          <source>A copy of the given function with the specified &lt;code&gt;this&lt;/code&gt; value, and initial arguments (if provided).</source>
          <target state="translated">A copy of the given function with the specified &lt;code&gt;this&lt;/code&gt; value, and initial arguments (if provided).</target>
        </trans-unit>
        <trans-unit id="93e270056c460ab5484131c44e909202de08b384" translate="yes" xml:space="preserve">
          <source>A copy of the search string.</source>
          <target state="translated">検索文字列のコピー。</target>
        </trans-unit>
        <trans-unit id="b0ab4090880d85d1b8d21b29b371027f6371260b" translate="yes" xml:space="preserve">
          <source>A couple of additions to ECMAScript 2015 aren't new built-ins or syntax, but protocols. These protocols can be implemented by any object respecting some conventions.</source>
          <target state="translated">ECMAScript 2015 に追加されたいくつかの機能は、新しいビルドインや構文ではなく、プロトコルです。これらのプロトコルは、いくつかの規約を尊重した任意のオブジェクトによって実装することができます。</target>
        </trans-unit>
        <trans-unit id="ddfad6a3c7b6aad43e7acf467e08fcfd6fa7bb2b" translate="yes" xml:space="preserve">
          <source>A data descriptor also has the following optional keys:</source>
          <target state="translated">データ記述子には、以下のオプションキーもあります。</target>
        </trans-unit>
        <trans-unit id="ba3481983d617cfd725ce9600ae17fdcf8da4ec1" translate="yes" xml:space="preserve">
          <source>A different property name is assigned to &lt;code&gt;&lt;var&gt;variable&lt;/var&gt;&lt;/code&gt; on each iteration.</source>
          <target state="translated">A different property name is assigned to &lt;code&gt;&lt;var&gt;variable&lt;/var&gt;&lt;/code&gt; on each iteration.</target>
        </trans-unit>
        <trans-unit id="d9318c3e645dd03eab39853306667eb56567ba0b" translate="yes" xml:space="preserve">
          <source>A different property name is assigned to &lt;em&gt;variable&lt;/em&gt; on each iteration.</source>
          <target state="translated">反復ごとに異なるプロパティ名が&lt;em&gt;変数&lt;/em&gt;に割り当てられます。</target>
        </trans-unit>
        <trans-unit id="01b279d2f4044b93f6800de33326ee0eeb4ed13a" translate="yes" xml:space="preserve">
          <source>A few identifiers have a special meaning in some contexts without being keywords of any kind. They include:</source>
          <target state="translated">いくつかの識別子は、文脈によってはキーワードでなくても特別な意味を持つものがあります。これには以下のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="2ac339db0910563774342c530ee05a9df754ba7c" translate="yes" xml:space="preserve">
          <source>A fix was proposed for ECMAScript (via an opt-in), but &lt;a href=&quot;https://web.archive.org/web/20160331031419/http://wiki.ecmascript.org:80/doku.php?id=harmony:typeof_null&quot;&gt;was rejected&lt;/a&gt;. It would have resulted in &lt;code&gt;typeof null === 'null'&lt;/code&gt;.</source>
          <target state="translated">（オプトイン経由で）ECMAScriptの修正が提案されました&lt;a href=&quot;https://web.archive.org/web/20160331031419/http://wiki.ecmascript.org:80/doku.php?id=harmony:typeof_null&quot;&gt;が、拒否されました&lt;/a&gt;。これは、中に生じるであろう &lt;code&gt;typeof null === 'null'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="812ac40c0e2f39ba3493336253465f4574fd0e3d" translate="yes" xml:space="preserve">
          <source>A floating point number parsed from the given &lt;code&gt;&lt;var&gt;string&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">A floating point number parsed from the given &lt;code&gt;&lt;var&gt;string&lt;/var&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b097560e17532f6278cd5f83e7f51aaf658edd28" translate="yes" xml:space="preserve">
          <source>A floating point number parsed from the given value. If the value cannot be converted to a number, &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">指定された値から解析された浮動小数点数。値を数値に変換できない場合、&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;が返されます。</target>
        </trans-unit>
        <trans-unit id="371c34e437934d420382c99d5285ca1f3bc53b30" translate="yes" xml:space="preserve">
          <source>A floating point number parsed from the given value. If the value cannot be converted to a number, &lt;a href=&quot;nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">指定された値から解析された浮動小数点数。値を数値に変換できない場合、&lt;a href=&quot;nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;が返されます。</target>
        </trans-unit>
        <trans-unit id="9b79ec39be95b3e0d250c0a633a3d32fb77deeab" translate="yes" xml:space="preserve">
          <source>A floating-point, pseudo-random number between &lt;code&gt;0&lt;/code&gt; (inclusive) and 1 (exclusive).</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; （両端を含む）から1（両端を含まない）までの浮動小数点の疑似乱数。</target>
        </trans-unit>
        <trans-unit id="7cafb6830f1d478c5941713a168e8fb7bbd5c08d" translate="yes" xml:space="preserve">
          <source>A full year.</source>
          <target state="translated">充実した一年。</target>
        </trans-unit>
        <trans-unit id="0d6e94450b453029b22684eb10d9d61439880bfa" translate="yes" xml:space="preserve">
          <source>A function can also be created using an expression (see &lt;a href=&quot;../operators/function&quot;&gt;&lt;code&gt;function expression&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">関数は、式を使用して作成することもできます（&lt;a href=&quot;../operators/function&quot;&gt; &lt;code&gt;function expression&lt;/code&gt; &lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="7f4c4a4ba312fa870d6915115145b3bba81abfbf" translate="yes" xml:space="preserve">
          <source>A function can also be created using an expression (see &lt;a href=&quot;../operators/function&quot;&gt;function expression&lt;/a&gt;).</source>
          <target state="translated">A function can also be created using an expression (see &lt;a href=&quot;../operators/function&quot;&gt;function expression&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="d9429efc6b1da6d1491d22425f8bad0d0e863f80" translate="yes" xml:space="preserve">
          <source>A function created with a function declaration is a &lt;code&gt;Function&lt;/code&gt; object and has all the properties, methods and behavior of &lt;code&gt;Function&lt;/code&gt; objects. See &lt;a href=&quot;../global_objects/function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; for detailed information on functions.</source>
          <target state="translated">関数宣言で作成された関数は、 &lt;code&gt;Function&lt;/code&gt; オブジェクトとすべてのプロパティ、メソッドの挙動有する &lt;code&gt;Function&lt;/code&gt; オブジェクトを。&lt;a href=&quot;../global_objects/function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt;の詳細については、関数を参照してください。</target>
        </trans-unit>
        <trans-unit id="1f97df21b5d4705d8cbdc1803f6da41b206ef6b7" translate="yes" xml:space="preserve">
          <source>A function declaration is very easily (and often unintentionally) turned into a function expression. A function declaration ceases to be one when it either:</source>
          <target state="translated">関数宣言は非常に簡単に(多くの場合、意図せずに)関数式に変換されてしまいます。関数宣言は、以下のいずれかになったときに、関数宣言であることをやめます。</target>
        </trans-unit>
        <trans-unit id="5b9ad1827d86af32055f8e3c9330866ce3f9a55c" translate="yes" xml:space="preserve">
          <source>A function defined by '&lt;code&gt;new Function'&lt;/code&gt; does not have a function name. However, in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey&quot;&gt;SpiderMonkey&lt;/a&gt; JavaScript engine, the serialized form of the function shows as if it has the name &quot;anonymous&quot;. For example, &lt;code&gt;alert(new Function())&lt;/code&gt; outputs:</source>
          <target state="translated">' &lt;code&gt;new Function'&lt;/code&gt; で定義された関数には関数名がありません。ただし、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey&quot;&gt;SpiderMonkey&lt;/a&gt; JavaScriptエンジンでは、関数のシリアル化された形式は、 &quot;匿名&quot;という名前のように表示されます。たとえば、 &lt;code&gt;alert(new Function())&lt;/code&gt; の出力は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="2039983d80f032b9b1ec023b7efd6e091b1ae60a" translate="yes" xml:space="preserve">
          <source>A function defined by '&lt;code&gt;new Function'&lt;/code&gt; does not have a function name. However, in the &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey&quot;&gt;SpiderMonkey&lt;/a&gt; JavaScript engine, the serialized form of the function shows as if it has the name &quot;anonymous&quot;. For example, &lt;code&gt;alert(new Function())&lt;/code&gt; outputs:</source>
          <target state="translated">A function defined by ' &lt;code&gt;new Function'&lt;/code&gt; does not have a function name. However, in the &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey&quot;&gt;SpiderMonkey&lt;/a&gt; JavaScript engine, the serialized form of the function shows as if it has the name &quot;anonymous&quot;. For example, &lt;code&gt;alert(new Function())&lt;/code&gt; outputs:</target>
        </trans-unit>
        <trans-unit id="0cb46d8b075c75dc3c16ff480fba2c741b276607" translate="yes" xml:space="preserve">
          <source>A function defined by a function expression or by a function declaration inherits the current scope. That is, the function forms a closure. On the other hand, a function defined by a &lt;code&gt;Function&lt;/code&gt; constructor does not inherit any scope other than the global scope (which all functions inherit).</source>
          <target state="translated">関数式または関数宣言によって定義された関数は、現在のスコープを継承します。つまり、関数はクロージャを形成します。一方、 &lt;code&gt;Function&lt;/code&gt; コンストラクターによって定義された関数は、（すべての関数が継承する）グローバルスコープ以外のスコープを継承しません。</target>
        </trans-unit>
        <trans-unit id="ca4d420f7642859685b17cc1f8ae4ff6bb561dd9" translate="yes" xml:space="preserve">
          <source>A function defined with the &lt;code&gt;Function&lt;/code&gt;&lt;em&gt;constructor&lt;/em&gt; assigned to the variable &lt;code&gt;multiply:&lt;/code&gt;</source>
          <target state="translated">変数 &lt;code&gt;multiply:&lt;/code&gt; 割り当てられた &lt;code&gt;Function&lt;/code&gt; &lt;em&gt;コンストラクターで&lt;/em&gt;定義された関数：</target>
        </trans-unit>
        <trans-unit id="73be31de4adcba2da7225bb0f4a9b968444b1010" translate="yes" xml:space="preserve">
          <source>A function expression can use yet another workaround:</source>
          <target state="translated">関数式は別の回避策を使うことができます。</target>
        </trans-unit>
        <trans-unit id="c2dfdb97125ee4e9962a399a5366ed00c280da16" translate="yes" xml:space="preserve">
          <source>A function expression is similar to and has the same syntax as a function declaration (see &lt;a href=&quot;operators/function&quot;&gt;function expression&lt;/a&gt; for details). A function expression may be a part of a larger expression. One can define &quot;named&quot; function expressions (where the name of the expression might be used in the call stack for example) or &quot;anonymous&quot; function expressions. Function expressions are not &lt;em&gt;hoisted&lt;/em&gt; onto the beginning of the scope, therefore they cannot be used before they appear in the code.</source>
          <target state="translated">関数式は、関数宣言に似ており、構文は同じです（詳細は&lt;a href=&quot;operators/function&quot;&gt;関数式&lt;/a&gt;を参照）。関数式は、より大きな式の一部である場合があります。 「名前付き」関数式（たとえば、式の名前がコールスタックで使用される場合があります）または「無名」関数式を定義できます。関数式はスコープの先頭に&lt;em&gt;巻き上げられ&lt;/em&gt;ないため、コードに表示されるまで使用できません。</target>
        </trans-unit>
        <trans-unit id="762156365b25192b70dea7d2e7d95fb4d5f739af" translate="yes" xml:space="preserve">
          <source>A function expression is very similar to and has almost the same syntax as a function declaration (see &lt;a href=&quot;../statements/function&quot;&gt;&lt;code&gt;function&lt;/code&gt;&lt;/a&gt; statement for details). The main difference between a function expression and a function declaration is the &lt;em&gt;function name&lt;/em&gt;, which can be omitted in function expressions to create &lt;em&gt;anonymous&lt;/em&gt; functions. A function expression can be used as an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/IIFE&quot;&gt;IIFE (Immediately Invoked Function Expression)&lt;/a&gt; which runs as soon as it is defined. See also the chapter about &lt;a href=&quot;../functions&quot;&gt;functions&lt;/a&gt; for more information.</source>
          <target state="translated">A function expression is very similar to and has almost the same syntax as a function declaration (see &lt;a href=&quot;../statements/function&quot;&gt; &lt;code&gt;function&lt;/code&gt; &lt;/a&gt; statement for details). The main difference between a function expression and a function declaration is the &lt;em&gt;function name&lt;/em&gt;, which can be omitted in function expressions to create &lt;em&gt;anonymous&lt;/em&gt; functions. A function expression can be used as an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/IIFE&quot;&gt;IIFE (Immediately Invoked Function Expression)&lt;/a&gt; which runs as soon as it is defined. See also the chapter about &lt;a href=&quot;../functions&quot;&gt;functions&lt;/a&gt; for more information.</target>
        </trans-unit>
        <trans-unit id="9abc2a0360bc3eff25939fd5a04b7a5d63268a33" translate="yes" xml:space="preserve">
          <source>A function expression is very similar to and has almost the same syntax as a function statement (see &lt;a href=&quot;../statements/function&quot;&gt;function statement&lt;/a&gt; for details). The main difference between a function expression and a function statement is the &lt;em&gt;function name,&lt;/em&gt; which can be omitted in function expressions to create &lt;em&gt;anonymous&lt;/em&gt; functions. A function expression can be used as a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/IIFE&quot;&gt;IIFE (Immediately Invoked Function Expression)&lt;/a&gt; which runs as soon as it is defined. See also the chapter about &lt;a href=&quot;../functions&quot;&gt;functions&lt;/a&gt; for more information.</source>
          <target state="translated">関数式は、関数ステートメントとよく似ており、構文はほとんど同じです（詳細については、&lt;a href=&quot;../statements/function&quot;&gt;関数ステートメント&lt;/a&gt;を参照してください）。関数式と関数ステートメントの主な違いは&lt;em&gt;関数名&lt;/em&gt;です。&lt;em&gt;関数名&lt;/em&gt;は、&lt;em&gt;無名&lt;/em&gt;関数を作成するために関数式で省略できます。関数式は、定義されるとすぐに実行される&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/IIFE&quot;&gt;IIFE（Immediately Invoked Function Expression）&lt;/a&gt;として使用できます。詳細については、&lt;a href=&quot;../functions&quot;&gt;関数&lt;/a&gt;に関する章も参照してください。</target>
        </trans-unit>
        <trans-unit id="ff9fdc82d293a9e0612ffb777123c2e0f2b27c41" translate="yes" xml:space="preserve">
          <source>A function immediately stops at the point where &lt;code&gt;return&lt;/code&gt; is called.</source>
          <target state="translated">関数は、 &lt;code&gt;return&lt;/code&gt; が呼び出された時点ですぐに停止します。</target>
        </trans-unit>
        <trans-unit id="9113c2beb8118cfebd7f2423d05b81d9bd9ab1e3" translate="yes" xml:space="preserve">
          <source>A function proxy could easily extend a constructor with a new constructor. This example uses the &lt;a href=&quot;proxy/handler/construct&quot;&gt;&lt;code&gt;construct&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;proxy/handler/apply&quot;&gt;&lt;code&gt;apply&lt;/code&gt;&lt;/a&gt; handlers.</source>
          <target state="translated">関数プロキシは、コンストラクタを新しいコンストラクタで簡単に拡張できます。この例では、&lt;a href=&quot;proxy/handler/construct&quot;&gt; &lt;code&gt;construct&lt;/code&gt; &lt;/a&gt;ハンドラーと&lt;a href=&quot;proxy/handler/apply&quot;&gt; &lt;code&gt;apply&lt;/code&gt; &lt;/a&gt;ハンドラーを使用しています。</target>
        </trans-unit>
        <trans-unit id="2b489bf10451063886857c690376fc3b33f461c5" translate="yes" xml:space="preserve">
          <source>A function proxy could easily extend a constructor with a new constructor. This example uses the &lt;a href=&quot;proxy/proxy/construct&quot;&gt;&lt;code&gt;construct&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;proxy/proxy/apply&quot;&gt;&lt;code&gt;apply&lt;/code&gt;&lt;/a&gt; handlers.</source>
          <target state="translated">A function proxy could easily extend a constructor with a new constructor. This example uses the &lt;a href=&quot;proxy/proxy/construct&quot;&gt; &lt;code&gt;construct&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;proxy/proxy/apply&quot;&gt; &lt;code&gt;apply&lt;/code&gt; &lt;/a&gt; handlers.</target>
        </trans-unit>
        <trans-unit id="03ecf4283b466c176658b3d18ca5e2c126bc74ce" translate="yes" xml:space="preserve">
          <source>A function reference &amp;mdash; this is an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAssembly/Exported_functions&quot;&gt;exported WebAssembly function&lt;/a&gt;, a JavaScript wrapper for an underlying wasm function.</source>
          <target state="translated">関数リファレンス&amp;mdash;これは、基礎となるwasm関数のJavaScriptラッパーである&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAssembly/Exported_functions&quot;&gt;エクスポートされたWebAssembly&lt;/a&gt;関数です。</target>
        </trans-unit>
        <trans-unit id="5e5c4fffb128c6cce6a933c4af34737d98882d5d" translate="yes" xml:space="preserve">
          <source>A function reference &amp;mdash; this is an &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/WebAssembly/Exported_functions&quot;&gt;exported WebAssembly function&lt;/a&gt;, a JavaScript wrapper for an underlying wasm function.</source>
          <target state="translated">A function reference &amp;mdash; this is an &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/WebAssembly/Exported_functions&quot;&gt;exported WebAssembly function&lt;/a&gt;, a JavaScript wrapper for an underlying wasm function.</target>
        </trans-unit>
        <trans-unit id="24f59d4c4c95c1049fcd13959c6de8f665314a9a" translate="yes" xml:space="preserve">
          <source>A function that alters the behavior of the stringification process, or an array of &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; objects that serve as a whitelist for selecting/filtering the properties of the value object to be included in the JSON string. If this value is &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; or not provided, all properties of the object are included in the resulting JSON string.</source>
          <target state="translated">文字列化プロセスの動作を変更する関数、またはJSON文字列に含める値オブジェクトのプロパティを選択/フィルタリングするためのホワイトリストとして機能する&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt;オブジェクトの配列。この値が&lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;または指定されていない場合、オブジェクトのすべてのプロパティが結果のJSON文字列に含まれます。</target>
        </trans-unit>
        <trans-unit id="4d683643d77791ba4f8ae5b61c9d6f9f303e8d44" translate="yes" xml:space="preserve">
          <source>A function that alters the behavior of the stringification process, or an array of &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; that serve as an allowlist for selecting/filtering the properties of the value object to be included in the JSON string. If this value is &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; or not provided, all properties of the object are included in the resulting JSON string.</source>
          <target state="translated">A function that alters the behavior of the stringification process, or an array of &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt; that serve as an allowlist for selecting/filtering the properties of the value object to be included in the JSON string. If this value is &lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; or not provided, all properties of the object are included in the resulting JSON string.</target>
        </trans-unit>
        <trans-unit id="cbf9a56251fbfd535a60ddc310525241b709af50" translate="yes" xml:space="preserve">
          <source>A function that assigns values to properties. Returns a &lt;a href=&quot;boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; that is &lt;code&gt;true&lt;/code&gt; if the update was successful.</source>
          <target state="translated">プロパティに値を割り当てる関数。更新が成功した場合に &lt;code&gt;true&lt;/code&gt; となる&lt;a href=&quot;boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="43a45f41c9933a06a919a5f30a6c4b8a591fcbf1" translate="yes" xml:space="preserve">
          <source>A function that calls itself is called a &lt;em&gt;recursive function&lt;/em&gt;. In some ways, recursion is analogous to a loop. Both execute the same code multiple times, and both require a condition (to avoid an infinite loop, or rather, infinite recursion in this case). When there is too much or infinite recursion, JavaScript will throw this error.</source>
          <target state="translated">自分自身を呼び出す関数は、&lt;em&gt;再帰関数&lt;/em&gt;と呼ばれ&lt;em&gt;ます&lt;/em&gt;。いくつかの点で、再帰はループに似ています。どちらも同じコードを複数回実行し、どちらも条件を必要とします（この場合、無限ループ、つまり無限再帰を回避するため）。再帰が多すぎるか無限である場合、JavaScriptはこのエラーをスローします。</target>
        </trans-unit>
        <trans-unit id="3e1986ef310848a74499cde3b27dd435102de6f9" translate="yes" xml:space="preserve">
          <source>A function that calls itself is called a &lt;em&gt;recursive function&lt;/em&gt;. Once a condition is met, the function stops calling itself. This is called a &lt;em&gt;base case&lt;/em&gt;.</source>
          <target state="translated">A function that calls itself is called a &lt;em&gt;recursive function&lt;/em&gt;. Once a condition is met, the function stops calling itself. This is called a &lt;em&gt;base case&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="98c6f6efac918d9322c51f018dbf9171795c0701" translate="yes" xml:space="preserve">
          <source>A function that is passed with the arguments &lt;code&gt;resolve&lt;/code&gt; and &lt;code&gt;reject&lt;/code&gt;. The &lt;code&gt;executor&lt;/code&gt; function is executed immediately by the Promise implementation, passing &lt;code&gt;resolve&lt;/code&gt; and &lt;code&gt;reject&lt;/code&gt; functions (the executor is called before the &lt;code&gt;Promise&lt;/code&gt; constructor even returns the created object). The &lt;code&gt;resolve&lt;/code&gt; and &lt;code&gt;reject&lt;/code&gt; functions, when called, resolve or reject the promise, respectively. The executor normally initiates some asynchronous work, and then, once that completes, either calls the &lt;code&gt;resolve&lt;/code&gt; function to resolve the promise or else rejects it if an error occurred. If an error is thrown in the executor function, the promise is rejected. The return value of the executor is ignored.</source>
          <target state="translated">引数とともに渡される関数は &lt;code&gt;resolve&lt;/code&gt; および &lt;code&gt;reject&lt;/code&gt; です。 &lt;code&gt;executor&lt;/code&gt; 機能を渡して、約束の実装により、直ちに実行され &lt;code&gt;resolve&lt;/code&gt; し、 &lt;code&gt;reject&lt;/code&gt; （前エグゼキュータが呼び出される関数を &lt;code&gt;Promise&lt;/code&gt; コンストラクタも作成したオブジェクトを返します）。 &lt;code&gt;resolve&lt;/code&gt; と &lt;code&gt;reject&lt;/code&gt; 機能を、それぞれ、決意、と呼ばれるか、約束を拒否します。エグゼキューターは通常、いくつかの非同期作業を開始し、それが完了すると、 &lt;code&gt;resolve&lt;/code&gt; 呼び出します。エラーが発生した場合、promiseを解決するか、それ以外の場合は拒否します。executor関数でエラーがスローされた場合、promiseは拒否されます。executorの戻り値は無視されます。</target>
        </trans-unit>
        <trans-unit id="3b6c202c664ab096ab553b1c07d2b8262458dce1" translate="yes" xml:space="preserve">
          <source>A function that returns the value of properties.</source>
          <target state="translated">プロパティの値を返す関数です。</target>
        </trans-unit>
        <trans-unit id="bfc1bad3cbaa4d13d2233d0206c2b2ffdce21b37" translate="yes" xml:space="preserve">
          <source>A function that sets the prototype of an object.</source>
          <target state="translated">オブジェクトのプロトタイプを設定する関数です。</target>
        </trans-unit>
        <trans-unit id="4fbbfcadefb72ac3afd207fefd0e5471b4fd5b28" translate="yes" xml:space="preserve">
          <source>A function that sets the prototype of an object. Returns a &lt;a href=&quot;boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; that is &lt;code&gt;true&lt;/code&gt; if the update was successful.</source>
          <target state="translated">A function that sets the prototype of an object. Returns a &lt;a href=&quot;boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; that is &lt;code&gt;true&lt;/code&gt; if the update was successful.</target>
        </trans-unit>
        <trans-unit id="749223692f1b9574f5d04f324a2ad9a5a8006310" translate="yes" xml:space="preserve">
          <source>A function to be bound to a lookup of the specified property.</source>
          <target state="translated">指定されたプロパティのルックアップにバインドされる関数。</target>
        </trans-unit>
        <trans-unit id="a289508c6acb9cb862a0ee6fb20a78e65eedf75f" translate="yes" xml:space="preserve">
          <source>A function to be called when there is an attempt to set the specified property. This function takes the form</source>
          <target state="translated">指定されたプロパティを設定しようとしたときに呼び出される関数。この関数の形式は</target>
        </trans-unit>
        <trans-unit id="bd6e9049875171dc90ba9c224cd4288a2520cd71" translate="yes" xml:space="preserve">
          <source>A function to be invoked to create the new substring to be used to replace the matches to the given &lt;code&gt;&lt;var&gt;regexp&lt;/var&gt;&lt;/code&gt; or &lt;code&gt;&lt;var&gt;substr&lt;/var&gt;&lt;/code&gt;. The arguments supplied to this function are described in the &quot;&lt;a href=&quot;#Specifying_a_function_as_a_parameter&quot;&gt;Specifying a function as a parameter&lt;/a&gt;&quot; section below.</source>
          <target state="translated">A function to be invoked to create the new substring to be used to replace the matches to the given &lt;code&gt;&lt;var&gt;regexp&lt;/var&gt;&lt;/code&gt; or &lt;code&gt;&lt;var&gt;substr&lt;/var&gt;&lt;/code&gt; . The arguments supplied to this function are described in the &quot;&lt;a href=&quot;#Specifying_a_function_as_a_parameter&quot;&gt;Specifying a function as a parameter&lt;/a&gt;&quot; section below.</target>
        </trans-unit>
        <trans-unit id="00dcfc0d78a91dc0676b4f68e3f1d1b4a0ea76cc" translate="yes" xml:space="preserve">
          <source>A function to be invoked to create the new substring to be used to replace the matches to the given &lt;code&gt;regexp&lt;/code&gt; or &lt;code&gt;substr&lt;/code&gt;. The arguments supplied to this function are described in the &quot;&lt;a href=&quot;#Specifying_a_function_as_a_parameter&quot;&gt;Specifying a function as a parameter&lt;/a&gt;&quot; section below.</source>
          <target state="translated">指定された &lt;code&gt;regexp&lt;/code&gt; または &lt;code&gt;substr&lt;/code&gt; への一致を置き換えるために使用される新しい部分文字列を作成するために呼び出される関数。この関数に提供される引数は、以下の「&lt;a href=&quot;#Specifying_a_function_as_a_parameter&quot;&gt;パラメーターとしての関数の指定&lt;/a&gt;」セクションで説明されています。</target>
        </trans-unit>
        <trans-unit id="2afba9c676a8752b7ae50bd8ffdc32d33f55bebc" translate="yes" xml:space="preserve">
          <source>A function to be invoked to create the new substring. The arguments supplied to this function are described in the &lt;a href=&quot;../string/replace#Specifying_a_function_as_a_parameter&quot;&gt;Specifying a function as a parameter&lt;/a&gt; section in &lt;a href=&quot;../string/replace&quot;&gt;&lt;code&gt;String.prototype.replace()&lt;/code&gt;&lt;/a&gt; page.</source>
          <target state="translated">新しい部分文字列を作成するために呼び出される関数。この関数に提供される引数は、&lt;a href=&quot;../string/replace&quot;&gt; &lt;code&gt;String.prototype.replace()&lt;/code&gt; &lt;/a&gt;ページの&lt;a href=&quot;../string/replace#Specifying_a_function_as_a_parameter&quot;&gt;パラメーターとしての関数&lt;/a&gt;の指定セクションで説明されています。</target>
        </trans-unit>
        <trans-unit id="cd2c6d1daab487bf2bc3a4db4c6aedcd71e0304f" translate="yes" xml:space="preserve">
          <source>A function to call when the specified property's value changes.</source>
          <target state="translated">指定したプロパティの値が変更されたときに呼び出す関数です。</target>
        </trans-unit>
        <trans-unit id="2baf4439e1f6571545222579b46ce96e0d440b28" translate="yes" xml:space="preserve">
          <source>A function to execute on each element in the array (except for the first, if no &lt;code&gt;&lt;var&gt;initialValue&lt;/var&gt;&lt;/code&gt; is supplied).</source>
          <target state="translated">A function to execute on each element in the array (except for the first, if no &lt;code&gt;&lt;var&gt;initialValue&lt;/var&gt;&lt;/code&gt; is supplied).</target>
        </trans-unit>
        <trans-unit id="1b7fcc059eeb3929883ca949682bfc67d6a2af49" translate="yes" xml:space="preserve">
          <source>A function to execute on each value in the array until the function returns &lt;code&gt;true&lt;/code&gt;, indicating that the satisfying element was found.</source>
          <target state="translated">A function to execute on each value in the array until the function returns &lt;code&gt;true&lt;/code&gt; , indicating that the satisfying element was found.</target>
        </trans-unit>
        <trans-unit id="22d9ab9255feb90b92b12e451f5f8037ec3c4743" translate="yes" xml:space="preserve">
          <source>A function to execute on each value in the array until the function returns &lt;code&gt;true&lt;/code&gt;, indicating the desired element was found. It takes 3 arguments:</source>
          <target state="translated">目的の要素が見つかったことを示す &lt;code&gt;true&lt;/code&gt; が返されるまで、配列の各値に対して実行する関数。3つの引数を取ります。</target>
        </trans-unit>
        <trans-unit id="e7fef09593c6d4e1ecf25198a0051cea0265622e" translate="yes" xml:space="preserve">
          <source>A function to test for each element, taking three arguments:</source>
          <target state="translated">3つの引数を取り、各要素をテストする関数。</target>
        </trans-unit>
        <trans-unit id="caf9c76381db8f213d75e9d4e54dd17095857c5d" translate="yes" xml:space="preserve">
          <source>A function value (see &quot;Methods&quot; above) can not be assigned to a value in JSON.</source>
          <target state="translated">関数の値(上記の「メソッド」を参照)は、JSONの値に代入することはできません。</target>
        </trans-unit>
        <trans-unit id="2ecb79c1465a221cd233921d61186d139a11615f" translate="yes" xml:space="preserve">
          <source>A function which serves as a getter for the property, or &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if there is no getter (accessor descriptors only).</source>
          <target state="translated">プロパティのゲッターとして機能する関数、またはゲッターがない場合は&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;（アクセサー記述子のみ）。</target>
        </trans-unit>
        <trans-unit id="2599f25d2eac390c558c42cb2e5d6afad0749e53" translate="yes" xml:space="preserve">
          <source>A function which serves as a getter for the property, or &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if there is no getter. The function's return value will be used as the value of the property.</source>
          <target state="translated">プロパティのゲッターとして機能する関数、またはゲッターがない場合は&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;。関数の戻り値は、プロパティの値として使用されます。</target>
        </trans-unit>
        <trans-unit id="18fd3c42f5a068421cc4b5d622b0ecd5d9c6e35c" translate="yes" xml:space="preserve">
          <source>A function which serves as a getter for the property, or &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if there is no getter. When the property is accessed, this function is called without arguments and with &lt;code&gt;this&lt;/code&gt; set to the object through which the property is accessed (this may not be the object on which the property is defined due to inheritance). The return value will be used as the value of the property.</source>
          <target state="translated">プロパティのゲッターとして機能する関数、またはゲッターがない場合は&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;。プロパティがアクセスされると、この関数は、引数なしとして呼び出され &lt;code&gt;this&lt;/code&gt; プロパティがアクセスされ、それを通してオブジェクトに設定（このプロパティは、継承による定義されているオブジェクトでなくてもよいです）。戻り値は、プロパティの値として使用されます。</target>
        </trans-unit>
        <trans-unit id="5ef0023834d5aa96e315794374390f76299405a8" translate="yes" xml:space="preserve">
          <source>A function which serves as a setter for the property, or &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if there is no setter (accessor descriptors only).</source>
          <target state="translated">プロパティのセッターとして機能する関数、またはセッターがない場合は&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;（アクセサー記述子のみ）。</target>
        </trans-unit>
        <trans-unit id="1d55127172ebe4e888c89041b33e167af3ac2236" translate="yes" xml:space="preserve">
          <source>A function which serves as a setter for the property, or &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if there is no setter. The function will receive as its only argument the new value being assigned to the property.</source>
          <target state="translated">プロパティのセッターとして機能する関数。セッターがない場合は&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;。関数は、プロパティに割り当てられている新しい値を唯一の引数として受け取ります。</target>
        </trans-unit>
        <trans-unit id="942da11064ceb4eab856dd316d799b9b8d4ffbfd" translate="yes" xml:space="preserve">
          <source>A function which serves as a setter for the property, or &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if there is no setter. When the property is assigned to, this function is called with one argument (the value being assigned to the property) and with &lt;code&gt;this&lt;/code&gt; set to the object through which the property is assigned.</source>
          <target state="translated">プロパティのセッターとして機能する関数。セッターがない場合は&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;。プロパティが割り当てられている場合、この関数は一つの引数（プロパティに割り当てられている値）とし、と呼ばれ &lt;code&gt;this&lt;/code&gt; プロパティが割り当てられ、それを通してオブジェクトに設定。</target>
        </trans-unit>
        <trans-unit id="1588809a27b8b89dc2f75ce0c34acb681887aad3" translate="yes" xml:space="preserve">
          <source>A function which serves as a setter for the property, or &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if there is no setter. When the property is assigned, this function is called with one argument (the value being assigned to the property) and with &lt;code&gt;this&lt;/code&gt; set to the object through which the property is assigned.</source>
          <target state="translated">A function which serves as a setter for the property, or &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; if there is no setter. When the property is assigned, this function is called with one argument (the value being assigned to the property) and with &lt;code&gt;this&lt;/code&gt; set to the object through which the property is assigned.</target>
        </trans-unit>
        <trans-unit id="98c89ec5c4ecc3d5ed3f390345dc66fbcc2f3a46" translate="yes" xml:space="preserve">
          <source>A function with a superclass as input and a subclass extending that superclass as output can be used to implement mix-ins in ECMAScript:</source>
          <target state="translated">スーパークラスを入力として、そのスーパークラスを拡張したサブクラスを出力として持つ関数を使用して、ECMAScript でミックスインを実装することができます。</target>
        </trans-unit>
        <trans-unit id="c750fd129f1e265e479295ff61493b4ea1228cc3" translate="yes" xml:space="preserve">
          <source>A function with no argument to invalidate (switch off) the &lt;code&gt;proxy&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;proxy&lt;/code&gt; を無効にする（スイッチを切る）引数のない関数。</target>
        </trans-unit>
        <trans-unit id="ac3420bfe252e7fb76cf0f98cb41ee33a9b11d27" translate="yes" xml:space="preserve">
          <source>A function's last parameter can be prefixed with &lt;code&gt;...&lt;/code&gt; which will cause all remaining (user supplied) arguments to be placed within a &quot;standard&quot; JavaScript array.</source>
          <target state="translated">A function's last parameter can be prefixed with &lt;code&gt;...&lt;/code&gt; which will cause all remaining (user supplied) arguments to be placed within a &quot;standard&quot; JavaScript array.</target>
        </trans-unit>
        <trans-unit id="0bc1f6bc7c5b2ce42ed618693d37fce2d9aa05e1" translate="yes" xml:space="preserve">
          <source>A function's last parameter can be prefixed with &lt;code&gt;...&lt;/code&gt; which will cause all remaining (user supplied) arguments to be placed within a &quot;standard&quot; javascript array. Only the last parameter can be a &quot;rest parameter&quot;.</source>
          <target state="translated">関数の最後のパラメーターの前に &lt;code&gt;...&lt;/code&gt; を付けることができます。これにより、残りのすべての（ユーザー指定の）引数が「標準」のJavaScript配列内に配置されます。最後のパラメーターのみが「残りのパラメーター」になることができます。</target>
        </trans-unit>
        <trans-unit id="ea55966c6f3f6211c07d03a32a8bcf8e2437408f" translate="yes" xml:space="preserve">
          <source>A generator function expression is similar to and has the same syntax as a generator function declaration (see &lt;a href=&quot;operators/function*&quot;&gt;&lt;code&gt;function* expression&lt;/code&gt;&lt;/a&gt; for details):</source>
          <target state="translated">ジェネレーター関数の式は、ジェネレーター関数の宣言と似ており、構文も同じです（詳細は&lt;a href=&quot;operators/function*&quot;&gt; &lt;code&gt;function* expression&lt;/code&gt; &lt;/a&gt;を参照）。</target>
        </trans-unit>
        <trans-unit id="f93172b59d0434275a525299048055510d37d19c" translate="yes" xml:space="preserve">
          <source>A getter can be removed using the &lt;code&gt;&lt;a href=&quot;../operators/delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt; operator.</source>
          <target state="translated">getterは、 &lt;code&gt;&lt;a href=&quot;../operators/delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt; 演算子を使用して削除できます。</target>
        </trans-unit>
        <trans-unit id="8c21f7c718218b0fabfc90729d7549638c61d121" translate="yes" xml:space="preserve">
          <source>A good solution for the missing object-methods is not immediately apparent.</source>
          <target state="translated">欠けているオブジェクト・メソッドのための良い解決策は、すぐには明らかになりません。</target>
        </trans-unit>
        <trans-unit id="9e2a6ac7ec5957726087098f3078f1e71ee52eab" translate="yes" xml:space="preserve">
          <source>A hashbang comment behaves exactly like a single line-only (&lt;code&gt;//&lt;/code&gt;) comment. Instead, it begins with &lt;code&gt;#!&lt;/code&gt; and &lt;strong&gt;is only valid at the absolute start of a script or module&lt;/strong&gt;. Note also that no whitespace of any kind is permitted before the &lt;code&gt;#!&lt;/code&gt;. The comment consists of all the characters after &lt;code&gt;#!&lt;/code&gt; up to the end of the first line; only one such comment is permitted.</source>
          <target state="translated">A hashbang comment behaves exactly like a single line-only ( &lt;code&gt;//&lt;/code&gt; ) comment. Instead, it begins with &lt;code&gt;#!&lt;/code&gt; and &lt;strong&gt;is only valid at the absolute start of a script or module&lt;/strong&gt;. Note also that no whitespace of any kind is permitted before the &lt;code&gt;#!&lt;/code&gt; . The comment consists of all the characters after &lt;code&gt;#!&lt;/code&gt; up to the end of the first line; only one such comment is permitted.</target>
        </trans-unit>
        <trans-unit id="402a38a12748d1373c4f6039b2ee5012310a6af8" translate="yes" xml:space="preserve">
          <source>A high-low pair is ok. For example:</source>
          <target state="translated">ハイローペアでもOKです。例えば</target>
        </trans-unit>
        <trans-unit id="3ff5b7d0d6d0af0eca0e8bb5827eb12187e93b20" translate="yes" xml:space="preserve">
          <source>A lexical variable was accessed before it was initialized. This happens within any block statement, when &lt;code&gt;&lt;a href=&quot;../statements/let&quot;&gt;let&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../statements/const&quot;&gt;const&lt;/a&gt;&lt;/code&gt; declarations are accessed before they are defined.</source>
          <target state="translated">字句変数が初期化される前にアクセスされました。とき、これは、任意のブロック文の中で起こっ &lt;code&gt;&lt;a href=&quot;../statements/let&quot;&gt;let&lt;/a&gt;&lt;/code&gt; か、 &lt;code&gt;&lt;a href=&quot;../statements/const&quot;&gt;const&lt;/a&gt;&lt;/code&gt; それらが定義される前に宣言がアクセスされます。</target>
        </trans-unit>
        <trans-unit id="4485423a6485cd02f45a5566ae926e0ce685bdfc" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; values for which to get the canonical locale names.</source>
          <target state="translated">正規ロケール名を取得する&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;値のリスト。</target>
        </trans-unit>
        <trans-unit id="4bdf6c0f6fa66811f204ee6037ddd3d10c23b287" translate="yes" xml:space="preserve">
          <source>A list of values that the &lt;code&gt;&lt;var&gt;constructor&lt;/var&gt;&lt;/code&gt; will be called with.</source>
          <target state="translated">A list of values that the &lt;code&gt;&lt;var&gt;constructor&lt;/var&gt;&lt;/code&gt; will be called with.</target>
        </trans-unit>
        <trans-unit id="91a5a1c0b7abfeead316c53f5d1f2b1731a18ffc" translate="yes" xml:space="preserve">
          <source>A list of values that the &lt;code&gt;constructor&lt;/code&gt; will be called with.</source>
          <target state="translated">&lt;code&gt;constructor&lt;/code&gt; で呼び出される値のリスト。</target>
        </trans-unit>
        <trans-unit id="b12e357a414238397bb0b9e3e9221382bdd0ea85" translate="yes" xml:space="preserve">
          <source>A list of values whose elements are used as the first arguments to any call to the wrapped function.</source>
          <target state="translated">その要素が、ラップされた関数を呼び出す際の最初の引数として使用される値のリスト。</target>
        </trans-unit>
        <trans-unit id="434ec934a69d699fd762e6feb47419eaf588cd8a" translate="yes" xml:space="preserve">
          <source>A map API &lt;em&gt;could&lt;/em&gt; be implemented in JavaScript with two arrays (one for keys, one for values) shared by the four API methods. Setting elements on this map would involve pushing a key and value onto the end of each of those arrays simultaneously. As a result, the indices of the key and value would correspond to both arrays. Getting values from the map would involve iterating through all keys to find a match, then using the index of this match to retrieve the corresponding value from the array of values.</source>
          <target state="translated">A map API &lt;em&gt;could&lt;/em&gt; be implemented in JavaScript with two arrays (one for keys, one for values) shared by the four API methods. Setting elements on this map would involve pushing a key and value onto the end of each of those arrays simultaneously. As a result, the indices of the key and value would correspond to both arrays. Getting values from the map would involve iterating through all keys to find a match, then using the index of this match to retrieve the corresponding value from the array of values.</target>
        </trans-unit>
        <trans-unit id="8eea163af25923fbee0560f02571b8c923037409" translate="yes" xml:space="preserve">
          <source>A map API could be implemented in JavaScript with two arrays (one for keys, one for values) shared by the four API methods. Setting elements on this map would involve pushing a key and value onto the end of each of those arrays simultaneously. As a result, the indices of the key and value would correspond to both arrays. Getting values from the map would involve iterating through all keys to find a match, then using the index of this match to retrieve the corresponding value from the array of values.</source>
          <target state="translated">4 つの API メソッドで共有される 2 つの配列 (1 つはキー用、もう 1 つは値用)を使用して、マップ API を JavaScript で実装することができます。このマップに要素を設定するには、キーと値をそれぞれの配列の端に同時に押し込む必要があります。その結果、キーと値のインデックスは両方の配列に対応します。マップから値を取得するには、すべてのキーを繰り返し処理して一致する値を見つけ、この一致した値のインデックスを使用して値の配列から対応する値を取得します。</target>
        </trans-unit>
        <trans-unit id="3b17fbb796e9e516962f9207b281c639617542a1" translate="yes" xml:space="preserve">
          <source>A memory created by JavaScript or in WebAssembly code will be accessible and mutable from both JavaScript and WebAssembly.</source>
          <target state="translated">JavaScriptやWebAssemblyのコードで作成されたメモリは、JavaScriptとWebAssemblyの両方からアクセス可能で、変更可能になります。</target>
        </trans-unit>
        <trans-unit id="6ae56e21e0d05b9b39077e54c5fd373f0882e6da" translate="yes" xml:space="preserve">
          <source>A meta-property exposing context-specific metadata to a JavaScript module.</source>
          <target state="translated">コンテキスト固有のメタデータを JavaScript モジュールに公開するメタプロパティ。</target>
        </trans-unit>
        <trans-unit id="4020f123d501eba8c8b785a8fed6a2766a94c6be" translate="yes" xml:space="preserve">
          <source>A method converting an object to a primitive value.</source>
          <target state="translated">オブジェクトをプリミティブ値に変換するメソッド。</target>
        </trans-unit>
        <trans-unit id="5688deddaf4d11bb720fddf64840a3811d31ee17" translate="yes" xml:space="preserve">
          <source>A method determining if a constructor object recognizes an object as its instance. Used by &lt;a href=&quot;../operators/instanceof&quot;&gt;&lt;code&gt;instanceof&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">コンストラクターオブジェクトがオブジェクトをインスタンスとして認識するかどうかを決定するメソッド。&lt;a href=&quot;../operators/instanceof&quot;&gt; &lt;code&gt;instanceof&lt;/code&gt; &lt;/a&gt;によって使用されます。</target>
        </trans-unit>
        <trans-unit id="c38757f8f459644b54ec537af8be30b75985250e" translate="yes" xml:space="preserve">
          <source>A method is not bound to the object that it is a method of. Specifically, &lt;code&gt;this&lt;/code&gt; is not fixed in a method, i.e., &lt;code&gt;this&lt;/code&gt; does not necessarily refer to an object containing the method. &lt;code&gt;this&lt;/code&gt; is instead &quot;passed&quot; by the function call. See &lt;a href=&quot;this#Method_binding&quot;&gt;method binding&lt;/a&gt;.</source>
          <target state="translated">メソッドは、それがメソッドであるオブジェクトにバインドされていません。具体的には、 &lt;code&gt;this&lt;/code&gt; 方法で固定されていない、すなわち、 &lt;code&gt;this&lt;/code&gt; 必ずしもメソッドを含むオブジェクトを参照していません。代わりに、 &lt;code&gt;this&lt;/code&gt; は関数呼び出しによって「渡されます」。&lt;a href=&quot;this#Method_binding&quot;&gt;メソッドのバインディングを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1ebcb2f7d88de021c08aad7ccd91148026bd685d" translate="yes" xml:space="preserve">
          <source>A method is not bound to the object that it is a method of. Specifically, &lt;code&gt;this&lt;/code&gt; is not fixed in a method. Put another way, &lt;code&gt;this&lt;/code&gt; does not necessarily refer to the object containing a method. Instead, &lt;code&gt;this&lt;/code&gt; is &quot;passed&quot; by the function call. See &lt;a href=&quot;this#Method_binding&quot;&gt;method binding&lt;/a&gt;.</source>
          <target state="translated">A method is not bound to the object that it is a method of. Specifically, &lt;code&gt;this&lt;/code&gt; is not fixed in a method. Put another way, &lt;code&gt;this&lt;/code&gt; does not necessarily refer to the object containing a method. Instead, &lt;code&gt;this&lt;/code&gt; is &quot;passed&quot; by the function call. See &lt;a href=&quot;this#Method_binding&quot;&gt;method binding&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="68f3f78bd28ff78ae3da4393f5de4b311c78fdaa" translate="yes" xml:space="preserve">
          <source>A method returning the canonical locale names.</source>
          <target state="translated">正規のロケール名を返すメソッド。</target>
        </trans-unit>
        <trans-unit id="dadd338c8c1c2e7b5c10d87afaa027380d3634f3" translate="yes" xml:space="preserve">
          <source>A method returning the default iterator for an object. Used by &lt;a href=&quot;../statements/for...of&quot;&gt;&lt;code&gt;for...of&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">オブジェクトのデフォルトのイテレータを返すメソッド。&lt;a href=&quot;../statements/for...of&quot;&gt; &lt;code&gt;for...of&lt;/code&gt; &lt;/a&gt;によって使用されます。</target>
        </trans-unit>
        <trans-unit id="d448a2044295b3d89e5449ecc23bbe4699613812" translate="yes" xml:space="preserve">
          <source>A method that matches against a string, also used to determine if an object may be used as a regular expression. Used by &lt;a href=&quot;string/match&quot;&gt;&lt;code&gt;String.prototype.match()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">文字列と照合するメソッド。オブジェクトを正規表現として使用できるかどうかを判断するためにも使用されます。&lt;a href=&quot;string/match&quot;&gt; &lt;code&gt;String.prototype.match()&lt;/code&gt; &lt;/a&gt;によって使用されます。</target>
        </trans-unit>
        <trans-unit id="fc5bca6ad7ba18ef6f0f323e4bc3ead96338c022" translate="yes" xml:space="preserve">
          <source>A method that replaces matched substrings of a string. Used by &lt;a href=&quot;string/replace&quot;&gt;&lt;code&gt;String.prototype.replace()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">文字列の一致した部分文字列を置き換えるメソッド。&lt;a href=&quot;string/replace&quot;&gt; &lt;code&gt;String.prototype.replace()&lt;/code&gt; &lt;/a&gt;によって使用されます。</target>
        </trans-unit>
        <trans-unit id="19d174e2c89ed8f308981e976ee2bbfefc3e7cbc" translate="yes" xml:space="preserve">
          <source>A method that returns an iterator, that yields matches of the regular expression against a string. Used by &lt;a href=&quot;string/matchall&quot;&gt;&lt;code&gt;String.prototype.matchAll()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">A method that returns an iterator, that yields matches of the regular expression against a string. Used by &lt;a href=&quot;string/matchall&quot;&gt; &lt;code&gt;String.prototype.matchAll()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="2de7119fd3a7791f00d71f241fff9955077d5d12" translate="yes" xml:space="preserve">
          <source>A method that returns the default AsyncIterator for an object. Used by &lt;a href=&quot;../statements/for-await...of&quot;&gt;&lt;code&gt;for await...of&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">A method that returns the default AsyncIterator for an object. Used by &lt;a href=&quot;../statements/for-await...of&quot;&gt; &lt;code&gt;for await...of&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="de5a61e2d2a25d9acb7ce52c105c5320cee97041" translate="yes" xml:space="preserve">
          <source>A method that returns the default AsyncIterator for an object. Used by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await-of&quot;&gt;&lt;code&gt;for await of&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">オブジェクトのデフォルトのAsyncIteratorを返すメソッド。の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await-of&quot;&gt; &lt;code&gt;for await of&lt;/code&gt; &lt;/a&gt;使用されます。</target>
        </trans-unit>
        <trans-unit id="4315adad342e639519993beb815ff8269fd3c4af" translate="yes" xml:space="preserve">
          <source>A method that returns the index within a string that matches the regular expression. Used by &lt;a href=&quot;string/search&quot;&gt;&lt;code&gt;String.prototype.search()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">正規表現に一致する文字列内のインデックスを返すメソッド。&lt;a href=&quot;string/search&quot;&gt; &lt;code&gt;String.prototype.search()&lt;/code&gt; &lt;/a&gt;によって使用されます。</target>
        </trans-unit>
        <trans-unit id="42fa96aa3a1b5a03150d78fb2c59e409f9c4ad91" translate="yes" xml:space="preserve">
          <source>A method that splits a string at the indices that match a regular expression. Used by &lt;a href=&quot;string/split&quot;&gt;&lt;code&gt;String.prototype.split()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">正規表現に一致するインデックスで文字列を分割するメソッド。&lt;a href=&quot;string/split&quot;&gt; &lt;code&gt;String.prototype.split()&lt;/code&gt; &lt;/a&gt;によって使用されます。</target>
        </trans-unit>
        <trans-unit id="74368224c70489f70db851c462c64ccf2ea9627a" translate="yes" xml:space="preserve">
          <source>A more advanced form of template literals are &lt;em&gt;tagged&lt;/em&gt; templates.</source>
          <target state="translated">A more advanced form of template literals are &lt;em&gt;tagged&lt;/em&gt; templates.</target>
        </trans-unit>
        <trans-unit id="d7bc79d695e0d555a19bc377ca68d9432fb9cfc0" translate="yes" xml:space="preserve">
          <source>A more advanced form of template literals are &lt;em&gt;tagged&lt;/em&gt; templates. Tags allow you to parse template literals with a function. The first argument of a tag function contains an array of string values. The remaining arguments are related to the expressions. In the end, your function can return your manipulated string (or it can return something completely different as described in the next example). The name of the function used for the tag can be whatever you want.</source>
          <target state="translated">テンプレートリテラルのより高度な形式は、&lt;em&gt;タグ付き&lt;/em&gt;テンプレートです。タグを使用すると、関数を使用してテンプレートリテラルを解析できます。タグ関数の最初の引数には、文字列値の配列が含まれています。残りの引数は式に関連しています。最後に、関数は操作された文字列を返すことができます（または次の例で説明するように、まったく異なるものを返すことができます）。タグに使用される関数の名前は、好きな名前にすることができます。</target>
        </trans-unit>
        <trans-unit id="e28b2de5c004d0f1bcbf2226d41b5cb7acfc81b8" translate="yes" xml:space="preserve">
          <source>A more powerful array literal</source>
          <target state="translated">より強力な配列リテラル</target>
        </trans-unit>
        <trans-unit id="a0437fbd66ef802c9b4fafafcf5e82e5389f4db6" translate="yes" xml:space="preserve">
          <source>A more robust (fully ES2015 specification compliant), but less performant and compact, Polyfill is available &lt;a href=&quot;https://github.com/mathiasbynens/String.prototype.startsWith&quot;&gt;on GitHub by Mathias Bynens&lt;/a&gt;.</source>
          <target state="translated">より堅牢（ES2015仕様に完全に準拠）ですが、パフォーマンスとコンパクト性が劣ります。Polyfillは&lt;a href=&quot;https://github.com/mathiasbynens/String.prototype.startsWith&quot;&gt;Mathias BynensによってGitHub&lt;/a&gt;で入手できます。</target>
        </trans-unit>
        <trans-unit id="c6efe3b3c64c2a95dfddfe137bd4b47884875fc2" translate="yes" xml:space="preserve">
          <source>A naive approach that does not handle overflow/underflow issues:</source>
          <target state="translated">オーバーフロー/アンダーフローの問題を処理しないナイーブなアプローチ。</target>
        </trans-unit>
        <trans-unit id="36b76709f992dd56b853500e8c8b994505b38649" translate="yes" xml:space="preserve">
          <source>A negated or complemented character set. That is, it matches anything that is not enclosed in the brackets. You can specify a range of characters by using a hyphen, but if the hyphen appears as the first or last character enclosed in the square brackets it is taken as a literal hyphen to be included in the character set as a normal character.</source>
          <target state="translated">否定された文字セットまたは補完された文字セット。つまり、角括弧で囲まれていないものと一致します。ハイフンを使って文字の範囲を指定することもできますが、角括弧で囲まれた最初の文字または最後の文字としてハイフンが現れた場合は、リテラルハイフンとして扱われ、通常の文字として文字セットに含まれます。</target>
        </trans-unit>
        <trans-unit id="6be66e03dfaaf431382f1c04bc8d296aff96dac6" translate="yes" xml:space="preserve">
          <source>A negative index can be used, indicating an offset from the end of the sequence. &lt;code&gt;slice(-2)&lt;/code&gt; extracts the last two elements in the sequence.</source>
          <target state="translated">シーケンスの最後からのオフセットを示す負のインデックスを使用できます。 &lt;code&gt;slice(-2)&lt;/code&gt; は、シーケンスの最後の2つの要素を抽出します。</target>
        </trans-unit>
        <trans-unit id="51349d68b4f5429cae5cd0cbad56369759fd2e84" translate="yes" xml:space="preserve">
          <source>A negative index can be used, indicating an offset from the end of the sequence. &lt;code&gt;slice(2,-1)&lt;/code&gt; extracts the third element through the second-to-last element in the sequence.</source>
          <target state="translated">シーケンスの最後からのオフセットを示す負のインデックスを使用できます。 &lt;code&gt;slice(2,-1)&lt;/code&gt; は、シーケンスの最後から2番目の要素から3番目の要素を抽出します。</target>
        </trans-unit>
        <trans-unit id="4f808e631894a2f90d32972afc49f6cf0bc89233" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">新しい&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;インスタンス。</target>
        </trans-unit>
        <trans-unit id="c613d15c15713ae6ef520c64a0e2f7b52fb882f9" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; iterator object.</source>
          <target state="translated">新しい&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;反復子オブジェクト。</target>
        </trans-unit>
        <trans-unit id="af4691486d2f4ed8411729f237ce0aa590543717" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">A new &lt;a href=&quot;../arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; object.</target>
        </trans-unit>
        <trans-unit id="dddcda30be4b44e7477dd0da7e339278482b989c" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; iterator object.</source>
          <target state="translated">新しい&lt;a href=&quot;../map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt;イテレータオブジェクト。</target>
        </trans-unit>
        <trans-unit id="b62d4cd178fda37545db715a45a0690a5e3b5874" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../sharedarraybuffer&quot;&gt;&lt;code&gt;SharedArrayBuffer&lt;/code&gt;&lt;/a&gt; containing the extracted elements.</source>
          <target state="translated">抽出された要素を含む新しい&lt;a href=&quot;../sharedarraybuffer&quot;&gt; &lt;code&gt;SharedArrayBuffer&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fe0eaed7d1c68a1dc40a87f16446263af8eb0d84" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../typedarray&quot;&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">新しい&lt;a href=&quot;../typedarray&quot;&gt; &lt;code&gt;TypedArray&lt;/code&gt; &lt;/a&gt;インスタンス。</target>
        </trans-unit>
        <trans-unit id="a921a3d19f82d5a6c0c65b32d92f861cf5fff0ba" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../typedarray&quot;&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">新しい&lt;a href=&quot;../typedarray&quot;&gt; &lt;code&gt;TypedArray&lt;/code&gt; &lt;/a&gt;オブジェクト。</target>
        </trans-unit>
        <trans-unit id="dce6da36aa5925d7e4811de3dc26ad15d4382fea" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;&lt;strong&gt;Array Iterator&lt;/strong&gt;&lt;/code&gt; object.</source>
          <target state="translated">新しい &lt;code&gt;&lt;strong&gt;Array Iterator&lt;/strong&gt;&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="3e9337d09562a5cbe3357148f2a5f1ce88ff3b5f" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;&lt;strong&gt;Iterator&lt;/strong&gt;&lt;/code&gt; object containing the values for each element in the given &lt;code&gt;Set&lt;/code&gt;, in insertion order.</source>
          <target state="translated">指定された &lt;code&gt;Set&lt;/code&gt; の各要素の値を挿入順に含む新しい &lt;code&gt;&lt;strong&gt;Iterator&lt;/strong&gt;&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="d092a85b0972c791283dea133f4084b9eb7a4d13" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;ArrayBuffer&lt;/code&gt; object of the specified size. Its contents are initialized to 0.</source>
          <target state="translated">指定されたサイズの新しい &lt;code&gt;ArrayBuffer&lt;/code&gt; オブジェクト。その内容は0に初期化されます。</target>
        </trans-unit>
        <trans-unit id="30629af8f3caeb3b4d959a5aad34712b09eb1ddc" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;ArrayBuffer&lt;/code&gt; object.</source>
          <target state="translated">新しい &lt;code&gt;ArrayBuffer&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="c8e65b2fa1a5c678261f39d4adea123f7fb5c007" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;DataView&lt;/code&gt; object representing the specified data buffer. (That probably wasn't a very helpful description.)</source>
          <target state="translated">指定されたデータバッファーを表す新しい &lt;code&gt;DataView&lt;/code&gt; オブジェクト。（それはおそらくあまり役​​立つ説明ではなかったでしょう。）</target>
        </trans-unit>
        <trans-unit id="71dbaf10825f1f38baee8654d68d22d120a02a7f" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;Iterator&lt;/code&gt; object that contains an array of &lt;code&gt;[value, value]&lt;/code&gt; for each element in the given &lt;code&gt;Set&lt;/code&gt;, in insertion order.</source>
          <target state="translated">指定された &lt;code&gt;Set&lt;/code&gt; の各要素の &lt;code&gt;[value, value]&lt;/code&gt; 配列を挿入順に含む新しい &lt;code&gt;Iterator&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="7131b3be3d17f94f071839d848fe3e6bf217caa6" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;Iterator&lt;/code&gt; object.</source>
          <target state="translated">新しい &lt;code&gt;Iterator&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="e32931d7616e63386fb65a2a46d23e8311baaf5f" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;Set&lt;/code&gt; object.</source>
          <target state="translated">新しい &lt;code&gt;Set&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="03debe9eecb0427cc04fc999f860dfa1b7891656" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;SharedArrayBuffer&lt;/code&gt; object of the specified size. Its contents are initialized to 0.</source>
          <target state="translated">指定されたサイズの新しい &lt;code&gt;SharedArrayBuffer&lt;/code&gt; オブジェクト。その内容は0に初期化されます。</target>
        </trans-unit>
        <trans-unit id="82e9bec1fbb9e139886d35c44a9d20812037a729" translate="yes" xml:space="preserve">
          <source>A new array containing the extracted elements.</source>
          <target state="translated">抽出された要素を含む新しい配列。</target>
        </trans-unit>
        <trans-unit id="0261785a07602d2e1bbe3b46aecc558f6c85855b" translate="yes" xml:space="preserve">
          <source>A new array with each element being the result of the callback function and flattened to a depth of 1.</source>
          <target state="translated">各要素はコールバック関数の結果であり,深さが1になるように平坦化された新しい配列.</target>
        </trans-unit>
        <trans-unit id="15880a072d65b5cde36dd14b9f8264a5fa3afd4f" translate="yes" xml:space="preserve">
          <source>A new array with each element being the result of the callback function.</source>
          <target state="translated">各要素がコールバック関数の結果となる新しい配列。</target>
        </trans-unit>
        <trans-unit id="787331af089954494bf14f34517127e9edfd92a7" translate="yes" xml:space="preserve">
          <source>A new array with the elements that pass the test. If no elements pass the test, an empty array will be returned.</source>
          <target state="translated">テストに合格した要素を含む新しい配列。テストに合格する要素がない場合は、空の配列が返されます。</target>
        </trans-unit>
        <trans-unit id="d087a51bb36101028d4dabf78ec77f2f27cceeea" translate="yes" xml:space="preserve">
          <source>A new array with the sub-array elements concatenated into it.</source>
          <target state="translated">部分配列の要素を連結した新しい配列。</target>
        </trans-unit>
        <trans-unit id="f5ca4a1104c8b2cbac137ba94ff5526d27bbc9a7" translate="yes" xml:space="preserve">
          <source>A new instance of &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt; (or &lt;code&gt;&lt;var&gt;newTarget&lt;/var&gt;&lt;/code&gt;, if present), initialized by &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt; as a constructor with the given &lt;code&gt;&lt;var&gt;argumentsList&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">A new instance of &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt; (or &lt;code&gt;&lt;var&gt;newTarget&lt;/var&gt;&lt;/code&gt; , if present), initialized by &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt; as a constructor with the given &lt;code&gt;&lt;var&gt;argumentsList&lt;/var&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1f23e49ea228e5477d3ecb3b4ba5080edda53b87" translate="yes" xml:space="preserve">
          <source>A new instance of &lt;code&gt;target&lt;/code&gt; (or &lt;code&gt;newTarget&lt;/code&gt;, if present), initialized by &lt;code&gt;target&lt;/code&gt; as a constructor with the given arguments.</source>
          <target state="translated">指定された引数を持つコンストラクターとして &lt;code&gt;target&lt;/code&gt; によって初期化された、 &lt;code&gt;target&lt;/code&gt; （または存在する場合は &lt;code&gt;newTarget&lt;/code&gt; ）の新しいインスタンス。</target>
        </trans-unit>
        <trans-unit id="54108cbfc21fe08718d6cbd8c6e9a27caa4630a8" translate="yes" xml:space="preserve">
          <source>A new iterator object containing the values for each element in the given &lt;code&gt;Set&lt;/code&gt;, in insertion order.</source>
          <target state="translated">A new iterator object containing the values for each element in the given &lt;code&gt;Set&lt;/code&gt; , in insertion order.</target>
        </trans-unit>
        <trans-unit id="f8e76faf159ebbe1d5fa5e1c569e069aab695162" translate="yes" xml:space="preserve">
          <source>A new object created from a completely custom object (especially one created from the &lt;code&gt;null&lt;/code&gt; object, which is basically a custom object with NO members) can behave in unexpected ways. This is especially true when debugging, since common object-property converting/detecting utility functions may generate errors, or simply lose information (especially if using silent error-traps that ignore errors). For example, here are two objects:</source>
          <target state="translated">完全にカスタムオブジェクトから作成された新しいオブジェクト（特に &lt;code&gt;null&lt;/code&gt; オブジェクトから作成されたオブジェクト、基本的にはメンバーのないカスタムオブジェクト）は、予期しない動作をする可能性があります。一般的なオブジェクトプロパティの変換/検出ユーティリティ関数がエラーを生成するか、単に情報を失う可能性があるため（特に、エラーを無視するサイレントエラートラップを使用している場合）、これはデバッグ時に特に当てはまります。たとえば、次の2つのオブジェクトがあります。</target>
        </trans-unit>
        <trans-unit id="2d8101d5af7e72ba3918b74c1d5d67842ac5ec4d" translate="yes" xml:space="preserve">
          <source>A new object is created, inheriting from &lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;.prototype&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;.prototype&lt;/code&gt; から継承した新しいオブジェクトが作成されます。</target>
        </trans-unit>
        <trans-unit id="f300f7a8a11e41b5a4d9b1b5854806567bf69dc0" translate="yes" xml:space="preserve">
          <source>A new object whose properties are given by the entries of the iterable.</source>
          <target state="translated">プロパティがイテレート可能なエントリによって与えられる新しいオブジェクト。</target>
        </trans-unit>
        <trans-unit id="45822e75325d21731d5124edc960068164d7b2a1" translate="yes" xml:space="preserve">
          <source>A new object with properties reflecting the locale and collation options computed during the initialization of the given &lt;a href=&quot;../collator&quot;&gt;&lt;code&gt;Collator&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">指定された&lt;a href=&quot;../collator&quot;&gt; &lt;code&gt;Collator&lt;/code&gt; &lt;/a&gt;オブジェクトの初期化中に計算されたロケールと照合オプションを反映するプロパティを持つ新しいオブジェクト。</target>
        </trans-unit>
        <trans-unit id="7f62cd1bbf76a677946cc7b2f177ad8c113906f1" translate="yes" xml:space="preserve">
          <source>A new object with properties reflecting the locale and date and time formatting options computed during the initialization of the given &lt;a href=&quot;../datetimeformat&quot;&gt;&lt;code&gt;DateTimeFormat&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">指定された&lt;a href=&quot;../datetimeformat&quot;&gt; &lt;code&gt;DateTimeFormat&lt;/code&gt; &lt;/a&gt;オブジェクトの初期化中に計算されたロケールと日付と時刻のフォーマットオプションを反映するプロパティを持つ新しいオブジェクト。</target>
        </trans-unit>
        <trans-unit id="e9f66c91a77e9f32bda81c6f3cf03db94cc0f64e" translate="yes" xml:space="preserve">
          <source>A new object with properties reflecting the locale and number formatting options computed during the initialization of the given &lt;a href=&quot;../numberformat&quot;&gt;&lt;code&gt;NumberFormat&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">指定された&lt;a href=&quot;../numberformat&quot;&gt; &lt;code&gt;NumberFormat&lt;/code&gt; &lt;/a&gt;オブジェクトの初期化中に計算されたロケールおよび数値フォーマットオプションを反映するプロパティを持つ新しいオブジェクト。</target>
        </trans-unit>
        <trans-unit id="296f793f8cc501d86171b337ca076906a04bb7eb" translate="yes" xml:space="preserve">
          <source>A new object with properties reflecting the locale and plural formatting options computed during the initialization of the given &lt;a href=&quot;../pluralrules&quot;&gt;&lt;code&gt;PluralRules&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">指定された&lt;a href=&quot;../pluralrules&quot;&gt; &lt;code&gt;PluralRules&lt;/code&gt; &lt;/a&gt;オブジェクトの初期化中に計算されたロケールと複数のフォーマットオプションを反映するプロパティを持つ新しいオブジェクト。</target>
        </trans-unit>
        <trans-unit id="08f627000a3c7055f8024f0439e70da3b07b277f" translate="yes" xml:space="preserve">
          <source>A new object with the specified prototype object and properties.</source>
          <target state="translated">指定されたプロトタイプオブジェクトとプロパティを持つ新しいオブジェクト。</target>
        </trans-unit>
        <trans-unit id="a769655fdedcb1408f3478f52d7c8df981a9fc0e" translate="yes" xml:space="preserve">
          <source>A new string containing the combined text of the strings provided.</source>
          <target state="translated">提供された文字列を組み合わせたテキストを含む新しい文字列。</target>
        </trans-unit>
        <trans-unit id="adc7344e5f5ef2ee7e786e09acc8279e5cf0f2e5" translate="yes" xml:space="preserve">
          <source>A new string containing the extracted section of the string.</source>
          <target state="translated">文字列の抽出された部分を含む新しい文字列。</target>
        </trans-unit>
        <trans-unit id="ef1730dad85af52ee53a5c327c3154cf0baba829" translate="yes" xml:space="preserve">
          <source>A new string containing the specified number of copies of the given string.</source>
          <target state="translated">与えられた文字列の指定されたコピー数を含む新しい文字列。</target>
        </trans-unit>
        <trans-unit id="d201988be0242c8883ea1fb8502cfa099697c2b8" translate="yes" xml:space="preserve">
          <source>A new string containing the specified part of the given string.</source>
          <target state="translated">与えられた文字列の指定された部分を含む新しい文字列。</target>
        </trans-unit>
        <trans-unit id="e3c3b03b8355b7081e0f314eb410a7eee0c95fe3" translate="yes" xml:space="preserve">
          <source>A new string representing the &lt;code&gt;&lt;var&gt;str&lt;/var&gt;&lt;/code&gt; stripped of whitespace from both ends.</source>
          <target state="translated">A new string representing the &lt;code&gt;&lt;var&gt;str&lt;/var&gt;&lt;/code&gt; stripped of whitespace from both ends.</target>
        </trans-unit>
        <trans-unit id="28ac369c445d0d041e9c6a702a99ff04b225837a" translate="yes" xml:space="preserve">
          <source>A new string representing the calling string converted to lower case, according to any locale-specific case mappings.</source>
          <target state="translated">呼び出し元の文字列を表す新しい文字列を、ロケール固有の大文字小文字のマッピングに従って小文字に変換したもの。</target>
        </trans-unit>
        <trans-unit id="6e96e2746d988d9bcba551eed7288e58dd62aae5" translate="yes" xml:space="preserve">
          <source>A new string representing the calling string converted to lower case.</source>
          <target state="translated">呼び出し元の文字列を表す新しい文字列を小文字に変換したもの。</target>
        </trans-unit>
        <trans-unit id="b7088d53a8622cb159f94cefb3726228f1cc8842" translate="yes" xml:space="preserve">
          <source>A new string representing the calling string converted to upper case, according to any locale-specific case mappings.</source>
          <target state="translated">呼び出し元の文字列を表す新しい文字列で、ロケール固有の大文字小文字のマッピングに従って大文字に変換されます。</target>
        </trans-unit>
        <trans-unit id="85c20ad1902c44362264377b04a030dae8f37e24" translate="yes" xml:space="preserve">
          <source>A new string representing the calling string converted to upper case.</source>
          <target state="translated">呼び出し文字列を表す新しい文字列を大文字に変換したもの。</target>
        </trans-unit>
        <trans-unit id="aa6c42713d9b878488ae5dba64a73fa2a0d70247" translate="yes" xml:space="preserve">
          <source>A new string representing the calling string stripped of whitespace from both ends.</source>
          <target state="translated">呼び出し元の文字列を表す新しい文字列で、両端から空白を取り除いたもの。</target>
        </trans-unit>
        <trans-unit id="b28d7ed1422364783e7ea352a5c543e815cef386" translate="yes" xml:space="preserve">
          <source>A new string representing the calling string stripped of whitespace from its (right) end.</source>
          <target state="translated">呼び出し元の文字列を表す新しい文字列で、その(右端の)文字列から空白を取り除いたもの。</target>
        </trans-unit>
        <trans-unit id="b81950a82c2c1eec35e85fa59d60e9fd0b2763d5" translate="yes" xml:space="preserve">
          <source>A new string representing the calling string stripped of whitespace from its beginning (left end).</source>
          <target state="translated">呼び出し元の文字列を表す新しい文字列で、その先頭(左端)から空白を取り除いたもの。</target>
        </trans-unit>
        <trans-unit id="8021a38ffc9bd0cf0c5822c3c12811137d33f805" translate="yes" xml:space="preserve">
          <source>A new string representing the decoded version of the given encoded Uniform Resource Identifier (URI) component.</source>
          <target state="translated">与えられたエンコードされたUniform Resource Identifier (URI)コンポーネントのデコードされたバージョンを表す新しい文字列。</target>
        </trans-unit>
        <trans-unit id="0a0b09a84ec85855ca0096c76c0a1ef8925e332f" translate="yes" xml:space="preserve">
          <source>A new string representing the provided string encoded as a URI component.</source>
          <target state="translated">URIコンポーネントとしてエンコードされた、提供された文字列を表す新しい文字列。</target>
        </trans-unit>
        <trans-unit id="16f51bb051c615c33d20ebbcc6208ed6f05faf6e" translate="yes" xml:space="preserve">
          <source>A new string representing the provided string encoded as a URI.</source>
          <target state="translated">URIとしてエンコードされた、提供された文字列を表す新しい文字列。</target>
        </trans-unit>
        <trans-unit id="0070c590794d620c343cc9f55fbda91526443db5" translate="yes" xml:space="preserve">
          <source>A new string representing the provided string encoded as a Uniform Resource Identifier (URI) component.</source>
          <target state="translated">Uniform Resource Identifier (URI)コンポーネントとしてエンコードされた、提供された文字列を表す新しい文字列。</target>
        </trans-unit>
        <trans-unit id="042974e32f133b133949bb8c15c058dfcbd137de" translate="yes" xml:space="preserve">
          <source>A new string representing the provided string encoded as a Uniform Resource Identifier (URI).</source>
          <target state="translated">URI(Uniform Resource Identifier)としてエンコードされた、提供された文字列を表す新しい文字列。</target>
        </trans-unit>
        <trans-unit id="864526c93d5ca1a276dd7e86fd8a170db237b73a" translate="yes" xml:space="preserve">
          <source>A new string representing the unencoded version of the given encoded Uniform Resource Identifier (URI).</source>
          <target state="translated">与えられたエンコードされたUniform Resource Identifier (URI)のエンコードされていないバージョンを表す新しい文字列。</target>
        </trans-unit>
        <trans-unit id="dea5e189df4e81121928c3571817453eb201cf91" translate="yes" xml:space="preserve">
          <source>A new string with some or all matches of a pattern replaced by a replacement.</source>
          <target state="translated">パターンの一部またはすべてのマッチした文字列が置換された新しい文字列。</target>
        </trans-unit>
        <trans-unit id="5e2180aedb8c47b5b96f25c27c15bd1b060df4b0" translate="yes" xml:space="preserve">
          <source>A new string, with some or all matches of a pattern replaced by a replacement.</source>
          <target state="translated">パターンの一部またはすべてのマッチした文字列が置換された新しい文字列。</target>
        </trans-unit>
        <trans-unit id="97d3688bacf36efa4f12e7387732d8be529503af" translate="yes" xml:space="preserve">
          <source>A new typed array containing the extracted elements.</source>
          <target state="translated">抽出された要素を含む新しい型付き配列。</target>
        </trans-unit>
        <trans-unit id="9b7ee4ada01f7b0909767c6a955b91cc62eca450" translate="yes" xml:space="preserve">
          <source>A new typed array with the elements that pass the test.</source>
          <target state="translated">テストに合格した要素を持つ新しい型付き配列。</target>
        </trans-unit>
        <trans-unit id="9b2b934ce7cc04e3d5bf5209be8fb87e0bcb42b7" translate="yes" xml:space="preserve">
          <source>A new typed array.</source>
          <target state="translated">新しい型付き配列。</target>
        </trans-unit>
        <trans-unit id="5c300330a68d98e6ed6c7b5c69b499ac19266faa" translate="yes" xml:space="preserve">
          <source>A newer function has been proposed to simplify matching multiple parts of a string (with capture groups): &lt;a href=&quot;../string/matchall&quot;&gt;&lt;code&gt;String.prototype.matchAll()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">A newer function has been proposed to simplify matching multiple parts of a string (with capture groups): &lt;a href=&quot;../string/matchall&quot;&gt; &lt;code&gt;String.prototype.matchAll()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a980deccc4f134900e4659e48e5aefb323aca20f" translate="yes" xml:space="preserve">
          <source>A newly created revocable &lt;code&gt;Proxy&lt;/code&gt; object is returned.</source>
          <target state="translated">新しく作成された取り消し可能な &lt;code&gt;Proxy&lt;/code&gt; オブジェクトが返されます。</target>
        </trans-unit>
        <trans-unit id="41ff4abadbaa900e09a934a97c156d8a74fa6ec6" translate="yes" xml:space="preserve">
          <source>A non-RegExp object as the parameter</source>
          <target state="translated">パラメータとしてRegExp以外のオブジェクト</target>
        </trans-unit>
        <trans-unit id="92f0b60e53c2dda5a405b219ca8bdddaaa479d83" translate="yes" xml:space="preserve">
          <source>A non-extensible object's prototype is immutable:</source>
          <target state="translated">拡張不可能なオブジェクトのプロトタイプは不変です。</target>
        </trans-unit>
        <trans-unit id="29aa5a7b384226b8f01ebed97e32f2c7185c981a" translate="yes" xml:space="preserve">
          <source>A non-negative integer specifying a limit on the number of substrings to be included in the array. If provided, splits the string at each occurrence of the specified &lt;code&gt;&lt;var&gt;separator&lt;/var&gt;&lt;/code&gt;, but stops when &lt;code&gt;&lt;var&gt;limit&lt;/var&gt;&lt;/code&gt; entries have been placed in the array. Any leftover text is not included in the array at all.</source>
          <target state="translated">A non-negative integer specifying a limit on the number of substrings to be included in the array. If provided, splits the string at each occurrence of the specified &lt;code&gt;&lt;var&gt;separator&lt;/var&gt;&lt;/code&gt; , but stops when &lt;code&gt;&lt;var&gt;limit&lt;/var&gt;&lt;/code&gt; entries have been placed in the array. Any leftover text is not included in the array at all.</target>
        </trans-unit>
        <trans-unit id="e93e509184c0dd9921caf055cad963dc5a761ae5" translate="yes" xml:space="preserve">
          <source>A non-standard &lt;strong&gt;V8&lt;/strong&gt; function that creates the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error/stack&quot;&gt;&lt;code&gt;stack&lt;/code&gt;&lt;/a&gt; property on an Error instance.</source>
          <target state="translated">A non-standard &lt;strong&gt;V8&lt;/strong&gt; function that creates the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error/stack&quot;&gt; &lt;code&gt;stack&lt;/code&gt; &lt;/a&gt; property on an Error instance.</target>
        </trans-unit>
        <trans-unit id="e87f7c78be5f86c687cc5a74846573f306c194fe" translate="yes" xml:space="preserve">
          <source>A non-standard Microsoft property for an error number.</source>
          <target state="translated">エラー番号のための非標準のMicrosoftプロパティ。</target>
        </trans-unit>
        <trans-unit id="d2ae7d66ff628e85087e8528b42e41ca55e64644" translate="yes" xml:space="preserve">
          <source>A non-standard Microsoft property for the error description. Similar to &lt;a href=&quot;error/message&quot;&gt;&lt;code&gt;message&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">A non-standard Microsoft property for the error description. Similar to &lt;a href=&quot;error/message&quot;&gt; &lt;code&gt;message&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="b1426fd730c4d2be182629f1995ce033c99300bf" translate="yes" xml:space="preserve">
          <source>A non-standard Mozilla property for a stack trace.</source>
          <target state="translated">スタックトレースのための非標準の Mozilla プロパティ。</target>
        </trans-unit>
        <trans-unit id="52b70e26c77c9f3d66913cc2637d1f4114328a82" translate="yes" xml:space="preserve">
          <source>A non-standard Mozilla property for the column number in the line that raised this error.</source>
          <target state="translated">このエラーを発生させた行の列番号に対する非標準の Mozilla プロパティです。</target>
        </trans-unit>
        <trans-unit id="1f8c34e627537f136c33ef28e4341c7821dfc6bd" translate="yes" xml:space="preserve">
          <source>A non-standard Mozilla property for the line number in the file that raised this error.</source>
          <target state="translated">このエラーを発生させたファイルの行番号のための非標準の Mozilla プロパティです。</target>
        </trans-unit>
        <trans-unit id="542f2fd947a9106d982b8c10c765f4473ddf1ca0" translate="yes" xml:space="preserve">
          <source>A non-standard Mozilla property for the path to the file that raised this error.</source>
          <target state="translated">このエラーを発生させたファイルへのパスのための非標準の Mozilla プロパティです。</target>
        </trans-unit>
        <trans-unit id="866f75f22b1e2f8cc39b203958191e20ccc4ae2e" translate="yes" xml:space="preserve">
          <source>A number (given in radians).</source>
          <target state="translated">数(ラジアン単位で与えられる)。</target>
        </trans-unit>
        <trans-unit id="33b8bf0b19804a30e81dfa4f88a4afa62b1a772e" translate="yes" xml:space="preserve">
          <source>A number between 0 and 999, representing the milliseconds.</source>
          <target state="translated">0 から 999 の間の数値で、ミリ秒を表します。</target>
        </trans-unit>
        <trans-unit id="1ab9293c976e98a3fcdd69dc7264e14bbcc79c9b" translate="yes" xml:space="preserve">
          <source>A number corresponding to the year of the given date, according to local time.</source>
          <target state="translated">現地時間に応じて、指定された日付の年に対応する番号。</target>
        </trans-unit>
        <trans-unit id="5591478262cd392cc4f46ee3bb26aaf71f3c6467" translate="yes" xml:space="preserve">
          <source>A number literal like &lt;code&gt;37&lt;/code&gt; in JavaScript code is a floating-point value, not an integer. There is no separate integer type in common everyday use. (JavaScript now has a &lt;a href=&quot;bigint&quot;&gt;&lt;code&gt;BigInt&lt;/code&gt;&lt;/a&gt; type, but it was not designed to replace Number for everyday uses. &lt;code&gt;37&lt;/code&gt; is still a Number, not a BigInt.)</source>
          <target state="translated">A number literal like &lt;code&gt;37&lt;/code&gt; in JavaScript code is a floating-point value, not an integer. There is no separate integer type in common everyday use. (JavaScript now has a &lt;a href=&quot;bigint&quot;&gt; &lt;code&gt;BigInt&lt;/code&gt; &lt;/a&gt; type, but it was not designed to replace Number for everyday uses. &lt;code&gt;37&lt;/code&gt; is still a Number, not a BigInt.)</target>
        </trans-unit>
        <trans-unit id="c6394a8a6b36364c1881bf24f0f7260429def9b5" translate="yes" xml:space="preserve">
          <source>A number of woken up agents.</source>
          <target state="translated">覚醒した工作員が多数。</target>
        </trans-unit>
        <trans-unit id="c075416f0cfc5d6433aba3d5a426908dbcf1ac55" translate="yes" xml:space="preserve">
          <source>A number representing &lt;code&gt;e&lt;sup&gt;&lt;var&gt;x&lt;/var&gt;&lt;/sup&gt;&lt;/code&gt;, where &lt;code&gt;e&lt;/code&gt; is &lt;a href=&quot;e&quot;&gt;Euler's number&lt;/a&gt; and &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&lt;/code&gt; is the argument.</source>
          <target state="translated">A number representing &lt;code&gt;e&lt;sup&gt;&lt;var&gt;x&lt;/var&gt;&lt;/sup&gt;&lt;/code&gt; , where &lt;code&gt;e&lt;/code&gt; is &lt;a href=&quot;e&quot;&gt;Euler's number&lt;/a&gt; and &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&lt;/code&gt; is the argument.</target>
        </trans-unit>
        <trans-unit id="e346a469255ac8b3f428891afc3b37da3169a46a" translate="yes" xml:space="preserve">
          <source>A number representing &lt;code&gt;e&lt;sup&gt;x&lt;/sup&gt; - 1&lt;/code&gt;, where &lt;code&gt;e&lt;/code&gt; is &lt;a href=&quot;e&quot;&gt;Euler's number&lt;/a&gt; and &lt;code&gt;x&lt;/code&gt; is the argument.</source>
          <target state="translated">代表番号 &lt;code&gt;e&lt;sup&gt;x&lt;/sup&gt; - 1&lt;/code&gt; 、 &lt;code&gt;e&lt;/code&gt; はである&lt;a href=&quot;e&quot;&gt;オイラー数&lt;/a&gt;と &lt;code&gt;x&lt;/code&gt; が引数です。</target>
        </trans-unit>
        <trans-unit id="320583e2aa41cd69454f31d51139ca63b04f0465" translate="yes" xml:space="preserve">
          <source>A number representing &lt;code&gt;e&lt;sup&gt;x&lt;/sup&gt;&lt;/code&gt;, where &lt;code&gt;e&lt;/code&gt; is &lt;a href=&quot;e&quot;&gt;Euler's number&lt;/a&gt; and &lt;code&gt;x&lt;/code&gt; is the argument.</source>
          <target state="translated">代表番号 &lt;code&gt;e&lt;sup&gt;x&lt;/sup&gt;&lt;/code&gt; 、 &lt;code&gt;e&lt;/code&gt; はある&lt;a href=&quot;e&quot;&gt;オイラー数&lt;/a&gt;と &lt;code&gt;x&lt;/code&gt; は引数です。</target>
        </trans-unit>
        <trans-unit id="4085d9d0ae49cd7571a3b8e0a41de2b4fa98a2fe" translate="yes" xml:space="preserve">
          <source>A number representing a cosine, where &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&lt;/code&gt; is between &lt;code&gt;-1&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">A number representing a cosine, where &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&lt;/code&gt; is between &lt;code&gt;-1&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9c51ce7fa2e9a3b589c1f44496f3aed4944d8f2f" translate="yes" xml:space="preserve">
          <source>A number representing an angle in radians.</source>
          <target state="translated">角度をラジアン単位で表す数値。</target>
        </trans-unit>
        <trans-unit id="b4f192f6f10c0409f13dc7f0f7c8706484ddd6fa" translate="yes" xml:space="preserve">
          <source>A number representing the UTF-16 code unit value of the character at the given &lt;code&gt;&lt;var&gt;index&lt;/var&gt;&lt;/code&gt;. If &lt;code&gt;&lt;var&gt;index&lt;/var&gt;&lt;/code&gt; is out of range, &lt;code&gt;charCodeAt()&lt;/code&gt; returns &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">A number representing the UTF-16 code unit value of the character at the given &lt;code&gt;&lt;var&gt;index&lt;/var&gt;&lt;/code&gt; . If &lt;code&gt;&lt;var&gt;index&lt;/var&gt;&lt;/code&gt; is out of range, &lt;code&gt;charCodeAt()&lt;/code&gt; returns &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="8fd6e43b7783552058a65ed8605c2e3bcc50189e" translate="yes" xml:space="preserve">
          <source>A number representing the UTF-16 code unit value of the character at the given index; &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;index&lt;/code&gt; is out of range.</source>
          <target state="translated">指定されたインデックスにある文字のUTF-16コード単位値を表す数値。 &lt;code&gt;index&lt;/code&gt; が範囲外の場合は&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fbb7e2a9d42e3701f765553c62a11e69054ddc3e" translate="yes" xml:space="preserve">
          <source>A number representing the code point value of the character at the given &lt;code&gt;&lt;var&gt;pos&lt;/var&gt;&lt;/code&gt;. If there is no element at &lt;code&gt;pos&lt;/code&gt;, returns &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">A number representing the code point value of the character at the given &lt;code&gt;&lt;var&gt;pos&lt;/var&gt;&lt;/code&gt; . If there is no element at &lt;code&gt;pos&lt;/code&gt; , returns &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="19dfcc30e32bee411afb3e0cd2d738b242ef5813" translate="yes" xml:space="preserve">
          <source>A number representing the code point value of the character at the given index; &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if there is no element at &lt;code&gt;pos&lt;/code&gt;.</source>
          <target state="translated">指定されたインデックスにある文字のコードポイント値を表す数値。 &lt;code&gt;pos&lt;/code&gt; に要素がない場合は&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1f3fa03a067fb17357799a6fad9a3cf0cfd38bdd" translate="yes" xml:space="preserve">
          <source>A number representing the given base taken to the power of the given exponent.</source>
          <target state="translated">指定された基底を表す数値を、指定された指数の累乗で表したもの。</target>
        </trans-unit>
        <trans-unit id="eeffbd6a40f2f1560827f097477009728e35e3a4" translate="yes" xml:space="preserve">
          <source>A number representing the largest integer less than or equal to the specified number.</source>
          <target state="translated">指定された数値以下の最大の整数を表す数値。</target>
        </trans-unit>
        <trans-unit id="c85077afce4c00cc243f168ecfdfdeb51271f37e" translate="yes" xml:space="preserve">
          <source>A number representing the milliseconds elapsed between 1 January 1970 00:00:00 UTC and the given date.</source>
          <target state="translated">1970年1月1日 00:00:00:00 UTCから指定された日付までの経過時間をミリ秒単位で表した数値。</target>
        </trans-unit>
        <trans-unit id="3959e82cf74fe8f21cae7d239e4881d9e242874f" translate="yes" xml:space="preserve">
          <source>A number representing the milliseconds elapsed since January 1, 1970, 00:00:00 UTC and the date obtained by parsing the given string representation of a date. If the argument doesn't represent a valid date, &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">1970年1月1日00:00:00 UTCから経過したミリ秒を表す数値、および日付の指定された文字列表現を解析して取得した日付。引数が有効な日付を表していない場合、&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;が返されます。</target>
        </trans-unit>
        <trans-unit id="bbec7b01f1d137f427f8a03887d75e72d96e2a3f" translate="yes" xml:space="preserve">
          <source>A number representing the number of milliseconds for the given date since January 1, 1970, 00:00:00, UTC.</source>
          <target state="translated">1970年1月1日午前0時00分00秒(UTC)からの指定された日付のミリ秒数を表す数値。</target>
        </trans-unit>
        <trans-unit id="2de4476eb25f39be7fd0ec6899f52ec4cf3653cb" translate="yes" xml:space="preserve">
          <source>A number representing the primitive value of the specified &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">指定された&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt;オブジェクトのプリミティブ値を表す数値。</target>
        </trans-unit>
        <trans-unit id="29a02110eaa008ff87ed2535bf2b89acf72cf41f" translate="yes" xml:space="preserve">
          <source>A number representing the sign of the given argument. If the argument is a positive number, negative number, positive zero or negative zero, the function will return &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;-1&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;-0&lt;/code&gt; respectively. Otherwise, &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">指定された引数の符号を表す数値。引数が正の数、負の数、正のゼロまたは負のゼロの場合、関数は戻ります &lt;code&gt;1&lt;/code&gt; 、 &lt;code&gt;-1&lt;/code&gt; 、 &lt;code&gt;0&lt;/code&gt; または &lt;code&gt;-0&lt;/code&gt; それぞれ。それ以外の場合は、&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;が返されます。</target>
        </trans-unit>
        <trans-unit id="2458d0686c16481015c91a19f396f2bae4460342" translate="yes" xml:space="preserve">
          <source>A number representing the sign of the given argument:</source>
          <target state="translated">与えられた引数の符号を表す数値。</target>
        </trans-unit>
        <trans-unit id="c0ea0ff05072d5d43f31331c60e2ec0547f19535" translate="yes" xml:space="preserve">
          <source>A number representing the time-zone offset, in minutes, from the date based on current host system settings to UTC.</source>
          <target state="translated">現在のホストシステムの設定に基づく日付からUTCまでの時間帯のオフセット(分単位)を表す数値。</target>
        </trans-unit>
        <trans-unit id="136ee8eaff7c938674408c51762470e45721a247" translate="yes" xml:space="preserve">
          <source>A number representing the year in the given date according to universal time.</source>
          <target state="translated">普遍的な時間にしたがって、指定された日付の中の年を表す数字。</target>
        </trans-unit>
        <trans-unit id="3c1ea39354a2e2238fa968d55e87378d62a41e02" translate="yes" xml:space="preserve">
          <source>A number, between 0 and 999, representing the milliseconds for the given date according to local time.</source>
          <target state="translated">0から999の間の数値で、現地時間に基づく指定した日付のミリ秒を表します。</target>
        </trans-unit>
        <trans-unit id="7ed3c373d108b1b5e682a0caaea0fb68c8d2e5a0" translate="yes" xml:space="preserve">
          <source>A number.</source>
          <target state="translated">数です。</target>
        </trans-unit>
        <trans-unit id="b2e40c994650403a819c34c056e9c4b9eff01316" translate="yes" xml:space="preserve">
          <source>A number. If this argument is not a &lt;code&gt;number&lt;/code&gt;, it is implicitly converted to one.</source>
          <target state="translated">A number. If this argument is not a &lt;code&gt;number&lt;/code&gt; , it is implicitly converted to one.</target>
        </trans-unit>
        <trans-unit id="d64a2ab5b7361529a3d0f8cbe32c407164fb3696" translate="yes" xml:space="preserve">
          <source>A pending promise can either be &lt;em&gt;fulfilled&lt;/em&gt; with a value or &lt;em&gt;rejected&lt;/em&gt; with a reason (error). When either of these options happens, the associated handlers queued up by a promise's &lt;code&gt;then&lt;/code&gt; method are called. If the promise has already been fulfilled or rejected when a corresponding handler is attached, the handler will be called, so there is no race condition between an asynchronous operation completing and its handlers being attached.</source>
          <target state="translated">A pending promise can either be &lt;em&gt;fulfilled&lt;/em&gt; with a value or &lt;em&gt;rejected&lt;/em&gt; with a reason (error). When either of these options happens, the associated handlers queued up by a promise's &lt;code&gt;then&lt;/code&gt; method are called. If the promise has already been fulfilled or rejected when a corresponding handler is attached, the handler will be called, so there is no race condition between an asynchronous operation completing and its handlers being attached.</target>
        </trans-unit>
        <trans-unit id="6bfa57bff8461cf0df0af44f35e9e38fbc5eaf43" translate="yes" xml:space="preserve">
          <source>A pending promise can either be &lt;em&gt;fulfilled&lt;/em&gt; with a value, or &lt;em&gt;rejected&lt;/em&gt; with a reason (error). When either of these options happens, the associated handlers queued up by a promise's &lt;code&gt;then&lt;/code&gt; method are called. (If the promise has already been fulfilled or rejected when a corresponding handler is attached, the handler will be called, so there is no race condition between an asynchronous operation completing and its handlers being attached.)</source>
          <target state="translated">保留中の約束は、値で&lt;em&gt;満たさ&lt;/em&gt;れるか、理由（エラー）で&lt;em&gt;拒否され&lt;/em&gt;ます。これらのオプションのいずれかが発生すると、promiseの &lt;code&gt;then&lt;/code&gt; メソッドによってキューに入れられた関連ハンドラーが呼び出されます。（対応するハンドラーがアタッチされたときにpromiseがすでに満たされているか拒否されている場合、ハンドラーが呼び出されるため、非同期操作の完了とそのハンドラーがアタッチされている間に競合状態はありません。）</target>
        </trans-unit>
        <trans-unit id="b3226275484ea18a77201e6aee0a1c537280bebd" translate="yes" xml:space="preserve">
          <source>A placeholder property named &lt;code&gt;@@iterator&lt;/code&gt; is used.</source>
          <target state="translated">&lt;code&gt;@@iterator&lt;/code&gt; という名前のプレースホルダープロパティが使用されます。</target>
        </trans-unit>
        <trans-unit id="35dcb8f7eb7086bf817764b2a5823e55523f89c8" translate="yes" xml:space="preserve">
          <source>A placeholder property named &lt;code&gt;iterator&lt;/code&gt; is used.</source>
          <target state="translated">&lt;code&gt;iterator&lt;/code&gt; という名前のプレースホルダープロパティが使用されます。</target>
        </trans-unit>
        <trans-unit id="ad553e784e43de2031c209b9636cc3ae49ce76d9" translate="yes" xml:space="preserve">
          <source>A polyfill</source>
          <target state="translated">ポリフィル</target>
        </trans-unit>
        <trans-unit id="797ee696694a0a3a8c95b40f03ad3788a1f5d981" translate="yes" xml:space="preserve">
          <source>A polyfill for &lt;code&gt;isNaN&lt;/code&gt; would be (the polyfill leverages the unique never-equal-to-itself characteristic of &lt;code&gt;NaN&lt;/code&gt;):</source>
          <target state="translated">&lt;code&gt;isNaN&lt;/code&gt; のポリフィルは次のようになります（ポリフィルは、 &lt;code&gt;NaN&lt;/code&gt; に固有の決して等しくないという特性を活用します）。</target>
        </trans-unit>
        <trans-unit id="0ac2db2f4012edd96917557a5359b7d82c950825" translate="yes" xml:space="preserve">
          <source>A polyfill for this feature is available in the &lt;a href=&quot;https://github.com/zbraniecki/proposal-intl-formatToParts&quot;&gt;proposal repository&lt;/a&gt;.</source>
          <target state="translated">この機能のポリフィルは、&lt;a href=&quot;https://github.com/zbraniecki/proposal-intl-formatToParts&quot;&gt;提案リポジトリにあります&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="524333b95fae4bfe9aa20007f5674f444d211ac1" translate="yes" xml:space="preserve">
          <source>A polyfill that avoids underflows and overflows:</source>
          <target state="translated">アンダーフローやオーバーフローを回避するポリフィル。</target>
        </trans-unit>
        <trans-unit id="9f5c3f24f8c410cae3911898d74dc6db80ee95f5" translate="yes" xml:space="preserve">
          <source>A possible workaround is to use &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">A possible workaround is to use &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; instead.</target>
        </trans-unit>
        <trans-unit id="c7411075f7f43a8bb768198f65a74746630e60ed" translate="yes" xml:space="preserve">
          <source>A potential &quot;downside&quot; of moving strict code to strict mode is that the semantics may be different in legacy browsers which do not implement strict mode. In some rare occasions (like bad concatenation or minification), your code also may not run in the mode you wrote and tested it in. Here are the rules to make your code strictness-neutral:</source>
          <target state="translated">厳密なコードを厳密なモードに移行することの潜在的な「欠点」は、厳密なモードを実装していないレガシーブラウザではセマンティクスが異なる可能性があることです。まれなケースでは (連結やミニ化の失敗など)、あなたのコードはあなたが書いてテストしたモードでは動作しないかもしれません。ここでは、コードを strictness-neutral にするためのルールを紹介します。</target>
        </trans-unit>
        <trans-unit id="e2d80a3ed62894d6d4cc8d9ac7f6e4fb50bb4fe9" translate="yes" xml:space="preserve">
          <source>A promise can participate in more than one nesting. For the following code, the transition of &lt;code&gt;promiseA&lt;/code&gt; into a &quot;settled&quot; state will cause both instances of &lt;code&gt;.then()&lt;/code&gt; to be invoked.</source>
          <target state="translated">A promise can participate in more than one nesting. For the following code, the transition of &lt;code&gt;promiseA&lt;/code&gt; into a &quot;settled&quot; state will cause both instances of &lt;code&gt;.then()&lt;/code&gt; to be invoked.</target>
        </trans-unit>
        <trans-unit id="bafd8d8c5f5c780af0df2c3bd53ddefb2063b9ba" translate="yes" xml:space="preserve">
          <source>A property can be both</source>
          <target state="translated">プロパティは、両方の可能性があります。</target>
        </trans-unit>
        <trans-unit id="7cef6daa9184b3ffcb088f3bfba29a8f29e5b55c" translate="yes" xml:space="preserve">
          <source>A property can be both 1) unpacked from an object and assigned to a variable with a different name and 2) assigned a default value in case the unpacked value is &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">プロパティは、1）オブジェクトからアンパックして別の名前の変数に割り当てることも、2）アンパックした値が &lt;code&gt;undefined&lt;/code&gt; 場合にデフォルト値を割り当てることもできます。</target>
        </trans-unit>
        <trans-unit id="82be02990f1ff9f24ca4e15675d549bb21ccc212" translate="yes" xml:space="preserve">
          <source>A property can be unpacked from an object and assigned to a variable with a different name than the object property.</source>
          <target state="translated">プロパティは、オブジェクトから展開して、オブジェクトのプロパティとは異なる名前の変数に代入することができます。</target>
        </trans-unit>
        <trans-unit id="2bcfba5371861c7981fe69a021e20870135674ed" translate="yes" xml:space="preserve">
          <source>A property cannot be added as or modified to be non-configurable, if it does not exists as a non-configurable own property of the target object.</source>
          <target state="translated">プロパティは、ターゲット・オブジェクトの非構成可能な自身のプロパティとして存在しない場合、非構成可能なプロパティとして追加したり、変更したりすることはできません。</target>
        </trans-unit>
        <trans-unit id="2e04530278a649f014a11c499ebb449c693ba214" translate="yes" xml:space="preserve">
          <source>A property cannot be added, if the target object is not extensible.</source>
          <target state="translated">対象となるオブジェクトが拡張可能でない場合、プロパティを追加することはできません。</target>
        </trans-unit>
        <trans-unit id="cfd7ea6ee7e2e1c263f5302a1c512f5a8ee38d74" translate="yes" xml:space="preserve">
          <source>A property cannot be deleted, if it exists as a non-configurable own property of the target object.</source>
          <target state="translated">プロパティは、ターゲット・オブジェクトの構成不可能な自身のプロパティとして存在する場合、削除することはできません。</target>
        </trans-unit>
        <trans-unit id="0846ddf6b5a46670bf4f9ddb9fd8b6890ffe20f7" translate="yes" xml:space="preserve">
          <source>A property cannot be reported as existent, if it does not exists as an own property of the target object and the target object is not extensible.</source>
          <target state="translated">プロパティは、ターゲット・オブジェクトの自身のプロパティとして存在せず、ターゲット・オブジェクトが拡張可能でない場合、存在していると報告することはできません。</target>
        </trans-unit>
        <trans-unit id="8ebf50c0307940fe5801235019034d6961173cf7" translate="yes" xml:space="preserve">
          <source>A property cannot be reported as non-configurable, if it does not exists as an own property of the target object or if it exists as a configurable own property of the target object.</source>
          <target state="translated">プロパティは、ターゲット・オブジェクトの自身のプロパティとして存在しない場合、またはターゲット・オブジェクトの構成可能な自身のプロパティとして存在する場合は、構成不可能として報告することはできません。</target>
        </trans-unit>
        <trans-unit id="88e9d157bd35141804b76df597e560bf5ef95d48" translate="yes" xml:space="preserve">
          <source>A property cannot be reported as non-existent, if it exists as a non-configurable own property of the target object.</source>
          <target state="translated">プロパティは、ターゲット・オブジェクトの設定不可能な自身のプロパティとして存在する場合、存在しないと報告することはできません。</target>
        </trans-unit>
        <trans-unit id="badcbd6294ee5e29488a5d21fa2443b50b556f20" translate="yes" xml:space="preserve">
          <source>A property cannot be reported as non-existent, if it exists as an own property of the target object and the target object is not extensible.</source>
          <target state="translated">プロパティは、ターゲット・オブジェクトの自身のプロパティとして存在し、ターゲット・オブジェクトが拡張可能ではない場合、存在しないと報告することはできません。</target>
        </trans-unit>
        <trans-unit id="2d2a3707ca6bfa4e4394a230e378f2e9ae76a2e8" translate="yes" xml:space="preserve">
          <source>A property definition of the form &lt;code&gt;__proto__: value&lt;/code&gt; or &lt;code&gt;&quot;__proto__&quot;: value&lt;/code&gt; does not create a property with the name &lt;code&gt;__proto__&lt;/code&gt;. Instead, if the provided value is an object or &lt;a href=&quot;../global_objects/null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;, it changes the &lt;code&gt;[[Prototype]]&lt;/code&gt; of the created object to that value. (If the value is not an object or &lt;code&gt;null&lt;/code&gt;, the object is not changed.)</source>
          <target state="translated">A property definition of the form &lt;code&gt;__proto__: value&lt;/code&gt; or &lt;code&gt;&quot;__proto__&quot;: value&lt;/code&gt; does not create a property with the name &lt;code&gt;__proto__&lt;/code&gt; . Instead, if the provided value is an object or &lt;a href=&quot;../global_objects/null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;, it changes the &lt;code&gt;[[Prototype]]&lt;/code&gt; of the created object to that value. (If the value is not an object or &lt;code&gt;null&lt;/code&gt; , the object is not changed.)</target>
        </trans-unit>
        <trans-unit id="d37873543ac1180b5625b0693c0652776e41513d" translate="yes" xml:space="preserve">
          <source>A property definition of the form &lt;code&gt;__proto__: value&lt;/code&gt; or &lt;code&gt;&quot;__proto__&quot;: value&lt;/code&gt; does not create a property with the name &lt;code&gt;__proto__&lt;/code&gt;. Instead, if the provided value is an object or &lt;a href=&quot;../global_objects/null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;, it changes the &lt;code&gt;[[Prototype]]&lt;/code&gt; of the created object to that value. (If the value is not an object or null, the object is not changed.)</source>
          <target state="translated">フォームのプロパティ定義 &lt;code&gt;__proto__: value&lt;/code&gt; または &lt;code&gt;&quot;__proto__&quot;: value&lt;/code&gt; 名前付きプロパティを作成しません &lt;code&gt;__proto__&lt;/code&gt; を。代わりに、提供された値がオブジェクトまたは&lt;a href=&quot;../global_objects/null&quot;&gt; &lt;code&gt;null&lt;/code&gt; の&lt;/a&gt;場合、作成されたオブジェクトの &lt;code&gt;[[Prototype]]&lt;/code&gt; をその値に変更します。（値がオブジェクトまたはnullでない場合、オブジェクトは変更されません。）</target>
        </trans-unit>
        <trans-unit id="2c6caa854ab7d32c0f909d5466df5c76cdc4ec8b" translate="yes" xml:space="preserve">
          <source>A property descriptor object if the property exists in &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt; object; otherwise, &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">A property descriptor object if the property exists in &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt; object; otherwise, &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="fc0775db0766a26736241f2163280bafa3ce93de" translate="yes" xml:space="preserve">
          <source>A property descriptor object if the property exists in the given target object; otherwise, &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">プロパティが特定のターゲットオブジェクトに存在する場合、プロパティ記述子オブジェクト。それ以外の場合は&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="12b8c0bddec1b93be72144228de4bb068f82c2e7" translate="yes" xml:space="preserve">
          <source>A property descriptor of the given property if it exists on the object, &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; otherwise.</source>
          <target state="translated">指定されたプロパティがオブジェクトに存在する場合はそのプロパティ記述子、それ以外の場合は&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1251c13eeceec96bdc2abe1f799429c7ddbeb11c" translate="yes" xml:space="preserve">
          <source>A property may not be non-configurable, if a corresponding configurable property of the target object exists.</source>
          <target state="translated">ターゲット・オブジェクトの対応する設定可能なプロパティが存在する場合、プロパティは非設定可能ではありません。</target>
        </trans-unit>
        <trans-unit id="262a68d11aaf1b3cc6cb73689e9aadb12824bb03" translate="yes" xml:space="preserve">
          <source>A property of an execution context (global, function or eval) that, in non&amp;ndash;strict mode, is always a reference to an object and in strict mode can be any value.</source>
          <target state="translated">A property of an execution context (global, function or eval) that, in non&amp;ndash;strict mode, is always a reference to an object and in strict mode can be any value.</target>
        </trans-unit>
        <trans-unit id="6175702d4b908c8983502b8e8b3619359ecedeaf" translate="yes" xml:space="preserve">
          <source>A property of an object can also refer to a &lt;a href=&quot;../functions&quot;&gt;function&lt;/a&gt; or a &lt;a href=&quot;../functions/get&quot;&gt;getter&lt;/a&gt; or &lt;a href=&quot;../functions/set&quot;&gt;setter&lt;/a&gt; method.</source>
          <target state="translated">オブジェクトのプロパティは、&lt;a href=&quot;../functions&quot;&gt;関数&lt;/a&gt;または&lt;a href=&quot;../functions/get&quot;&gt;ゲッター&lt;/a&gt;または&lt;a href=&quot;../functions/set&quot;&gt;セッター&lt;/a&gt;メソッドを参照することもできます。</target>
        </trans-unit>
        <trans-unit id="f99e727736e50c312224e12da97929ee2d5745cd" translate="yes" xml:space="preserve">
          <source>A read-only element that specifies the last matched characters.</source>
          <target state="translated">最後にマッチした文字を指定する読み取り専用の要素。</target>
        </trans-unit>
        <trans-unit id="787c95e0758676812dad54fc3efae04a04e5c1e0" translate="yes" xml:space="preserve">
          <source>A read-only property that is the zero-based index of the match in the string.</source>
          <target state="translated">文字列内のマッチのゼロベースのインデックスである読み取り専用のプロパティ。</target>
        </trans-unit>
        <trans-unit id="ca40b6e67b70a23ebbf760fa1b1a82230fc604cb" translate="yes" xml:space="preserve">
          <source>A read-only property that reflects the original string against which the regular expression was matched.</source>
          <target state="translated">正規表現がマッチした元の文字列を反映する読み取り専用のプロパティです。</target>
        </trans-unit>
        <trans-unit id="730458589a52cf9b82c89704cc9fbdda5aa6828c" translate="yes" xml:space="preserve">
          <source>A read-only string containing the description of the symbol.</source>
          <target state="translated">シンボルの説明を含む読み取り専用の文字列。</target>
        </trans-unit>
        <trans-unit id="64102081d8ac27a0b3d334d82feac1d6b074c1da" translate="yes" xml:space="preserve">
          <source>A reading thread is sleeping and waiting on location 0 which is expected to be 0. As long as that is true, it will not go on. However, once the writing thread has stored a new value, it will be notified by the writing thread and return the new value (123).</source>
          <target state="translated">読み込みスレッドはスリープ状態で、0であると予想される場所0で待機しています。 それが本当である限り、スレッドは進みません。しかし、書き込みスレッドが新しい値を格納すると、書き込みスレッドから通知があり、新しい値(123)を返します。</target>
        </trans-unit>
        <trans-unit id="6633c50b2d15b5ea052bd2cf883fb21f72a167f8" translate="yes" xml:space="preserve">
          <source>A reading thread is sleeping and waiting on location 0 which is expected to be 0. As long as that is true, it will not go on. However, once the writing thread has stored a new value, it will be woken up by the writing thread and return the new value (123).</source>
          <target state="translated">読み込みスレッドはスリープ状態で、0であると予想される場所0で待機しています。 それが本当である限り、スレッドは進みません。しかし、書き込みスレッドが新しい値を格納すると、書き込みスレッドに起こされて新しい値(123)を返します。</target>
        </trans-unit>
        <trans-unit id="6004e3146eef4ca752c4d06a8ef6aebcdbecfa99" translate="yes" xml:space="preserve">
          <source>A record in the global symbol registry</source>
          <target state="translated">グローバルシンボルレジストリのレコード</target>
        </trans-unit>
        <trans-unit id="3952ae589c24ccd58caf50364ba04b8aa25e0490" translate="yes" xml:space="preserve">
          <source>A recursive function must be able to refer to itself. Typically, a function refers to itself by its name. However, an anonymous function (which can be created by a &lt;a href=&quot;../../operators/function&quot;&gt;function expression&lt;/a&gt; or the &lt;a href=&quot;../../global_objects/function&quot;&gt;&lt;code&gt;Function&lt;/code&gt; constructor&lt;/a&gt;) does not have a name. Therefore if there is no accessible variable referring to it, the only way the function can refer to itself is by &lt;code&gt;arguments.callee&lt;/code&gt;.</source>
          <target state="translated">再帰関数はそれ自体を参照できなければなりません。通常、関数はそれ自体をその名前で参照します。ただし、無名関数（&lt;a href=&quot;../../operators/function&quot;&gt;関数式&lt;/a&gt;または&lt;a href=&quot;../../global_objects/function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; コンストラクター&lt;/a&gt;で作成できる）には名前がありません。したがって、それを参照するアクセス可能な変数がない場合、関数がそれ自体を参照できる唯一の方法は、 &lt;code&gt;arguments.callee&lt;/code&gt; によるものです。</target>
        </trans-unit>
        <trans-unit id="6a1215e7af059f28ad2effa06d3994af298752fc" translate="yes" xml:space="preserve">
          <source>A reference to &lt;a href=&quot;../collator&quot;&gt;&lt;code&gt;Intl.Collator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../collator&quot;&gt; &lt;code&gt;Intl.Collator&lt;/code&gt; &lt;/a&gt;への参照。</target>
        </trans-unit>
        <trans-unit id="fead2f20f45c2ca00a351d9dfac88e5f29757cd2" translate="yes" xml:space="preserve">
          <source>A reference to &lt;a href=&quot;../datetimeformat&quot;&gt;&lt;code&gt;Intl.DateTimeFormat&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../datetimeformat&quot;&gt; &lt;code&gt;Intl.DateTimeFormat&lt;/code&gt; &lt;/a&gt;への参照。</target>
        </trans-unit>
        <trans-unit id="645b0911c2178e55ee4e148c4418035e836ea6ed" translate="yes" xml:space="preserve">
          <source>A reference to &lt;a href=&quot;collator&quot;&gt;&lt;code&gt;Intl.Collator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;collator&quot;&gt; &lt;code&gt;Intl.Collator&lt;/code&gt; &lt;/a&gt;への参照。</target>
        </trans-unit>
        <trans-unit id="dd2787042865ffaea6ef24de5b37f662ed711e7d" translate="yes" xml:space="preserve">
          <source>A reference to &lt;a href=&quot;datetimeformat&quot;&gt;&lt;code&gt;Intl.DateTimeFormat&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;datetimeformat&quot;&gt; &lt;code&gt;Intl.DateTimeFormat&lt;/code&gt; &lt;/a&gt;への参照。</target>
        </trans-unit>
        <trans-unit id="826f72073177c0d1c0308286baa370878ae70e04" translate="yes" xml:space="preserve">
          <source>A reference to &lt;code&gt;Intl.NumberFormat&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Intl.NumberFormat&lt;/code&gt; への参照。</target>
        </trans-unit>
        <trans-unit id="fd62f12019b9406a7cede5399f8eb706d80bb9d2" translate="yes" xml:space="preserve">
          <source>A reference to &lt;code&gt;Intl.PluralRules&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Intl.PluralRules&lt;/code&gt; への参照。</target>
        </trans-unit>
        <trans-unit id="3de827fc6569a85c1cee19477812fe98708dca7e" translate="yes" xml:space="preserve">
          <source>A regular expression object.</source>
          <target state="translated">正規表現オブジェクト。</target>
        </trans-unit>
        <trans-unit id="b14b4d3af20ec453f94c95d9cf1f5471eb56d6e7" translate="yes" xml:space="preserve">
          <source>A regular expression object. If a non-RegExp object &lt;code&gt;obj&lt;/code&gt; is passed, it is implicitly converted to a &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; by using &lt;code&gt;new RegExp(obj)&lt;/code&gt;.</source>
          <target state="translated">正規表現オブジェクト。RegExp以外のオブジェクト &lt;code&gt;obj&lt;/code&gt; が渡された場合、それは &lt;code&gt;new RegExp(obj)&lt;/code&gt; を使用して暗黙的に&lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; に&lt;/a&gt;変換されます。</target>
        </trans-unit>
        <trans-unit id="6af9dcae600f92a537eab39a4f0ef60a85d9bfa8" translate="yes" xml:space="preserve">
          <source>A regular expression object. If a non-RegExp object &lt;code&gt;obj&lt;/code&gt; is passed, it is implicitly converted to a &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; by using &lt;code&gt;new RegExp(obj)&lt;/code&gt;. If you don't give any parameter and use the match() method directly, you will get an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; with an empty string:[&quot;&quot;].</source>
          <target state="translated">正規表現オブジェクト。RegExp以外のオブジェクト &lt;code&gt;obj&lt;/code&gt; が渡されると、 &lt;code&gt;new RegExp(obj)&lt;/code&gt; を使用して暗黙的に&lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; に&lt;/a&gt;変換されます。パラメータを指定せずにmatch（）メソッドを直接使用すると、空の文字列：[&quot;&quot;]の&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;が取得されます。</target>
        </trans-unit>
        <trans-unit id="aaba0ae4b7af561e5502607c074cef2e112205b5" translate="yes" xml:space="preserve">
          <source>A revocable &lt;code&gt;Proxy&lt;/code&gt; is an object with following two properties &lt;code&gt;{proxy: proxy, revoke: revoke}&lt;/code&gt;.</source>
          <target state="translated">取り消し可能な &lt;code&gt;Proxy&lt;/code&gt; は、次の2つのプロパティ &lt;code&gt;{proxy: proxy, revoke: revoke}&lt;/code&gt; 持つオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="4f39d457b1eda7365f2b249a3b851f81d79d236e" translate="yes" xml:space="preserve">
          <source>A safe integer is an integer that</source>
          <target state="translated">安全な整数とは</target>
        </trans-unit>
        <trans-unit id="98ae50e3f46c01960a05f68ae16ebf2a6e65f77f" translate="yes" xml:space="preserve">
          <source>A safer way to define functions conditionally is to assign a function expression to a variable:</source>
          <target state="translated">条件付きで関数を定義するより安全な方法は、関数式を変数に代入することです。</target>
        </trans-unit>
        <trans-unit id="94a49979b4f82d59d26824b08ef6077682a866b7" translate="yes" xml:space="preserve">
          <source>A sequence of code points.</source>
          <target state="translated">コードポイントのシーケンス。</target>
        </trans-unit>
        <trans-unit id="961e96d7aadc89a7406fc5bff68c413fb0945328" translate="yes" xml:space="preserve">
          <source>A sequence of numbers that are UTF-16 code units. The range is between 0 and 65535 (0xFFFF). Numbers greater than 0xFFFF are truncated. No validity checks are performed.</source>
          <target state="translated">UTF-16のコード単位である数字の列。範囲は0~65535(0xFFFF)。0xFFFFより大きい数値は切り捨てられます。有効性のチェックは行いません。</target>
        </trans-unit>
        <trans-unit id="9c57459a6fa63187857cbdab473be9af398b8252" translate="yes" xml:space="preserve">
          <source>A sequence of numbers that are UTF-16 code units. The range is between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;65535&lt;/code&gt; (&lt;code&gt;0xFFFF&lt;/code&gt;). Numbers greater than &lt;code&gt;0xFFFF&lt;/code&gt; are truncated. No validity checks are performed.</source>
          <target state="translated">A sequence of numbers that are UTF-16 code units. The range is between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;65535&lt;/code&gt; ( &lt;code&gt;0xFFFF&lt;/code&gt; ). Numbers greater than &lt;code&gt;0xFFFF&lt;/code&gt; are truncated. No validity checks are performed.</target>
        </trans-unit>
        <trans-unit id="1d120207d33f71b14fac5fd1daf6ea9ad3f6617e" translate="yes" xml:space="preserve">
          <source>A setter can be removed using the &lt;a href=&quot;../operators/delete&quot;&gt;&lt;code&gt;delete&lt;/code&gt;&lt;/a&gt; operator.</source>
          <target state="translated">セッターは、&lt;a href=&quot;../operators/delete&quot;&gt; &lt;code&gt;delete&lt;/code&gt; &lt;/a&gt;演算子を使用して削除できます。</target>
        </trans-unit>
        <trans-unit id="a43b6979efc421a51bb34618f3f716ef7c680397" translate="yes" xml:space="preserve">
          <source>A shared &lt;a href=&quot;../int32array&quot;&gt;&lt;code&gt;Int32Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">共有&lt;a href=&quot;../int32array&quot;&gt; &lt;code&gt;Int32Array&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2d0317a114534b8be470ff17d0bddad0b14c5f27" translate="yes" xml:space="preserve">
          <source>A shared integer typed array. One of &lt;a href=&quot;../int8array&quot;&gt;&lt;code&gt;Int8Array&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../uint8array&quot;&gt;&lt;code&gt;Uint8Array&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../int16array&quot;&gt;&lt;code&gt;Int16Array&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../uint16array&quot;&gt;&lt;code&gt;Uint16Array&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../int32array&quot;&gt;&lt;code&gt;Int32Array&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../uint32array&quot;&gt;&lt;code&gt;Uint32Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">共有整数型付き配列。一つ&lt;a href=&quot;../int8array&quot;&gt; &lt;code&gt;Int8Array&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../uint8array&quot;&gt; &lt;code&gt;Uint8Array&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../int16array&quot;&gt; &lt;code&gt;Int16Array&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../uint16array&quot;&gt; &lt;code&gt;Uint16Array&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../int32array&quot;&gt; &lt;code&gt;Int32Array&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;../uint32array&quot;&gt; &lt;code&gt;Uint32Array&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="52889c6327b8a14978336c28d8988fb139ed6fd4" translate="yes" xml:space="preserve">
          <source>A side effect of such call is that you can use &lt;code&gt;xpcomInterface&lt;/code&gt;'s properties on &lt;code&gt;&lt;var&gt;obj&lt;/var&gt;&lt;/code&gt; after a successful &lt;code&gt;instanceof&lt;/code&gt; test. Unlike standard JavaScript globals, the test &lt;code&gt;&lt;var&gt;obj&lt;/var&gt; instanceof &lt;var&gt;xpcomInterface&lt;/var&gt;&lt;/code&gt; works as expected, even if &lt;code&gt;&lt;var&gt;obj&lt;/var&gt;&lt;/code&gt; is from a different scope.</source>
          <target state="translated">A side effect of such call is that you can use &lt;code&gt;xpcomInterface&lt;/code&gt; 's properties on &lt;code&gt;&lt;var&gt;obj&lt;/var&gt;&lt;/code&gt; after a successful &lt;code&gt;instanceof&lt;/code&gt; test. Unlike standard JavaScript globals, the test &lt;code&gt;&lt;var&gt;obj&lt;/var&gt; instanceof &lt;var&gt;xpcomInterface&lt;/var&gt;&lt;/code&gt; works as expected, even if &lt;code&gt;&lt;var&gt;obj&lt;/var&gt;&lt;/code&gt; is from a different scope.</target>
        </trans-unit>
        <trans-unit id="c8df0882bca9a687b9140e41812fc9aaccc57a5d" translate="yes" xml:space="preserve">
          <source>A signed 16-bit integer number.</source>
          <target state="translated">符号付き16ビット整数値。</target>
        </trans-unit>
        <trans-unit id="706f50d9a48d0c59e8b452a5b35c3ff3a1bdc90f" translate="yes" xml:space="preserve">
          <source>A signed 32-bit float number.</source>
          <target state="translated">符号付き32ビットの浮動小数点数。</target>
        </trans-unit>
        <trans-unit id="3ea92d52219d63d683595e0c616072c73cc86e26" translate="yes" xml:space="preserve">
          <source>A signed 32-bit integer number.</source>
          <target state="translated">符号付き32ビット整数値。</target>
        </trans-unit>
        <trans-unit id="71e7538b008897b24f463feea45c322d7c49138b" translate="yes" xml:space="preserve">
          <source>A signed 64-bit float number.</source>
          <target state="translated">符号付き64ビットの浮動小数点数。</target>
        </trans-unit>
        <trans-unit id="885ff284d1780f10da2e38f4585b4776fe6e244b" translate="yes" xml:space="preserve">
          <source>A signed 8-bit integer number.</source>
          <target state="translated">符号付き8ビット整数値。</target>
        </trans-unit>
        <trans-unit id="622e0ae943e82a2002d105a9ba130181bac973d2" translate="yes" xml:space="preserve">
          <source>A similar result can be achieved using the &lt;a href=&quot;string/localecompare&quot;&gt;&lt;code&gt;localeCompare()&lt;/code&gt;&lt;/a&gt; method inherited by &lt;code&gt;String&lt;/code&gt; instances.</source>
          <target state="translated">同様の結果は、 &lt;code&gt;String&lt;/code&gt; インスタンスによって継承された&lt;a href=&quot;string/localecompare&quot;&gt; &lt;code&gt;localeCompare()&lt;/code&gt; &lt;/a&gt;メソッドを使用して実現できます。</target>
        </trans-unit>
        <trans-unit id="68f70a3f686145621e3e953d8e5f195288341bb1" translate="yes" xml:space="preserve">
          <source>A simple &lt;a href=&quot;../../statements/for&quot;&gt;for&lt;/a&gt; loop</source>
          <target state="translated">A simple &lt;a href=&quot;../../statements/for&quot;&gt;for&lt;/a&gt; loop</target>
        </trans-unit>
        <trans-unit id="4bc28ad3e72ba68d8cf81a60c620e0a5af88cf38" translate="yes" xml:space="preserve">
          <source>A simple class declaration</source>
          <target state="translated">簡単なクラス宣言</target>
        </trans-unit>
        <trans-unit id="be6da88607b4e805d6a435a71c844f0a4e76e44b" translate="yes" xml:space="preserve">
          <source>A simple class expression</source>
          <target state="translated">簡単なクラス表現</target>
        </trans-unit>
        <trans-unit id="40cf8919ea34c404a49fa4a02115691af647ed4f" translate="yes" xml:space="preserve">
          <source>A simple example</source>
          <target state="translated">簡単な例</target>
        </trans-unit>
        <trans-unit id="8e839688e01ba01e9dfe145feb09335f1aa963d0" translate="yes" xml:space="preserve">
          <source>A simple example:</source>
          <target state="translated">簡単な例です。</target>
        </trans-unit>
        <trans-unit id="8489270c852390ea6b9de9174327430c8b26f4f8" translate="yes" xml:space="preserve">
          <source>A simple loop</source>
          <target state="translated">シンプルなループ</target>
        </trans-unit>
        <trans-unit id="f4c0555e72c74dee716dad5376bb1622baa52b2e" translate="yes" xml:space="preserve">
          <source>A source map has been specified more than once for a given JavaScript source.</source>
          <target state="translated">指定された JavaScript ソースに対して、ソース マップが複数回指定されています。</target>
        </trans-unit>
        <trans-unit id="9b184b07701b8fb31f34e2cb63f82768ace5891e" translate="yes" xml:space="preserve">
          <source>A space before bracket notation is allowed.</source>
          <target state="translated">大括弧表記の前にスペースを入れることができます。</target>
        </trans-unit>
        <trans-unit id="650d94e113b2e33d8ec7c69a08b05c9e4aabd692" translate="yes" xml:space="preserve">
          <source>A specialized third comment syntax, the &lt;strong&gt;hashbang comment&lt;/strong&gt;, is in the process of being standardized in ECMAScript (see the &lt;a href=&quot;https://github.com/tc39/proposal-hashbang&quot;&gt;Hashbang Grammar proposal&lt;/a&gt;).</source>
          <target state="translated">A specialized third comment syntax, the &lt;strong&gt;hashbang comment&lt;/strong&gt;, is in the process of being standardized in ECMAScript (see the &lt;a href=&quot;https://github.com/tc39/proposal-hashbang&quot;&gt;Hashbang Grammar proposal&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="ad946f7b8e83d55ed9869009cd035be585910e88" translate="yes" xml:space="preserve">
          <source>A specific language construct was expected, but something else was provided. This might be a simple typo.</source>
          <target state="translated">特定の言語構成が期待されていましたが、何か他のものが提供されていました。これは単純なタイプミスかもしれません。</target>
        </trans-unit>
        <trans-unit id="9a33db5b89e156b54b88e9df50b9312712f79b69" translate="yes" xml:space="preserve">
          <source>A statement that is executed as long as the condition evaluates to true. To execute multiple statements within the loop, use a &lt;a href=&quot;block&quot;&gt;block&lt;/a&gt; statement (&lt;code&gt;{ ... }&lt;/code&gt;) to group those statements. To execute no statement within the loop, use an &lt;a href=&quot;empty&quot;&gt;empty&lt;/a&gt; statement (&lt;code&gt;;&lt;/code&gt;).</source>
          <target state="translated">条件がtrueと評価される限り実行されるステートメント。ループ内で複数のステートメントを実行するには、&lt;a href=&quot;block&quot;&gt;ブロック&lt;/a&gt;ステートメント（ &lt;code&gt;{ ... }&lt;/code&gt; ）を使用して、それらのステートメントをグループ化します。ループ内でステートメントを実行しない場合は、&lt;a href=&quot;empty&quot;&gt;空の&lt;/a&gt;ステートメント（ &lt;code&gt;;&lt;/code&gt; ）を使用します。</target>
        </trans-unit>
        <trans-unit id="aef327f62f00288b84ce0d5a9ee5cd26bf655f63" translate="yes" xml:space="preserve">
          <source>A statement that is executed at least once and is re-executed each time the condition evaluates to true. To execute multiple statements within the loop, use a &lt;a href=&quot;block&quot;&gt;&lt;code&gt;block&lt;/code&gt;&lt;/a&gt; statement (&lt;code&gt;{ ... }&lt;/code&gt;) to group those statements.</source>
          <target state="translated">少なくとも1回実行され、条件がtrueと評価されるたびに再実行されるステートメント。ループ内で複数のステートメントを実行するには、&lt;a href=&quot;block&quot;&gt; &lt;code&gt;block&lt;/code&gt; &lt;/a&gt;ステートメント（ &lt;code&gt;{ ... }&lt;/code&gt; ）を使用して、それらのステートメントをグループ化します。</target>
        </trans-unit>
        <trans-unit id="100394f55c41b8876bf196d2570e6855a738c097" translate="yes" xml:space="preserve">
          <source>A statement that is executed at least once and is re-executed each time the condition evaluates to true. To execute multiple statements within the loop, use a &lt;a href=&quot;block&quot;&gt;block&lt;/a&gt; statement (&lt;code&gt;{ ... }&lt;/code&gt;) to group those statements.</source>
          <target state="translated">A statement that is executed at least once and is re-executed each time the condition evaluates to true. To execute multiple statements within the loop, use a &lt;a href=&quot;block&quot;&gt;block&lt;/a&gt; statement ( &lt;code&gt;{ ... }&lt;/code&gt; ) to group those statements.</target>
        </trans-unit>
        <trans-unit id="6eecb97f6ef9305b517fa96d9c46076699ed6107" translate="yes" xml:space="preserve">
          <source>A statement to execute for each property. To execute multiple statements within the loop, use a &lt;a href=&quot;block&quot;&gt;block&lt;/a&gt; statement (&lt;code&gt;{ ... }&lt;/code&gt;) to group those statements.</source>
          <target state="translated">各プロパティに対して実行するステートメント。ループ内で複数のステートメントを実行するには、&lt;a href=&quot;block&quot;&gt;ブロック&lt;/a&gt;ステートメント（ &lt;code&gt;{ ... }&lt;/code&gt; ）を使用して、それらのステートメントをグループ化します。</target>
        </trans-unit>
        <trans-unit id="e962b27f500b22c745f065461212bdfade91281a" translate="yes" xml:space="preserve">
          <source>A strict-mode-only warning that a &lt;a href=&quot;../global_objects/referenceerror&quot;&gt;&lt;code&gt;ReferenceError&lt;/code&gt;&lt;/a&gt; occurred. JavaScript execution won't be halted.</source>
          <target state="translated">&lt;a href=&quot;../global_objects/referenceerror&quot;&gt; &lt;code&gt;ReferenceError&lt;/code&gt; &lt;/a&gt;が発生したという厳格モードのみの警告。JavaScriptの実行は停止されません。</target>
        </trans-unit>
        <trans-unit id="3576341a0c51d1186f6c01433f210a6c20f5e828" translate="yes" xml:space="preserve">
          <source>A stricter parse function</source>
          <target state="translated">より厳格なパース関数</target>
        </trans-unit>
        <trans-unit id="f0c7fd909667162d7bf71c18b3c1c64a4b510f95" translate="yes" xml:space="preserve">
          <source>A string beginning with an &lt;code&gt;&amp;lt;a name=&quot;&lt;var&gt;name&lt;/var&gt;&quot;&amp;gt;&lt;/code&gt; start tag, then the text &lt;var&gt;str&lt;/var&gt;, and then an &lt;code&gt;&amp;lt;/a&amp;gt;&lt;/code&gt; end tag</source>
          <target state="translated">A string beginning with an &lt;code&gt;&amp;lt;a name=&quot;&lt;var&gt;name&lt;/var&gt;&quot;&amp;gt;&lt;/code&gt; start tag, then the text &lt;var&gt;str&lt;/var&gt; , and then an &lt;code&gt;&amp;lt;/a&amp;gt;&lt;/code&gt; end tag</target>
        </trans-unit>
        <trans-unit id="c5be257dc67a409c94dc4468613d1b77d00fabab" translate="yes" xml:space="preserve">
          <source>A string containing a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/b&quot;&gt;&lt;code&gt;&amp;lt;b&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/b&quot;&gt; &lt;code&gt;&amp;lt;b&amp;gt;&lt;/code&gt; &lt;/a&gt; HTML要素を含む文字列。</target>
        </trans-unit>
        <trans-unit id="f12462db5702ef9de56d6688cc3229d24a6822f4" translate="yes" xml:space="preserve">
          <source>A string containing a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/big&quot;&gt;&lt;code&gt;&amp;lt;big&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/big&quot;&gt; &lt;code&gt;&amp;lt;big&amp;gt;&lt;/code&gt; &lt;/a&gt; HTML要素を含む文字列。</target>
        </trans-unit>
        <trans-unit id="ebc2489d09aaf80b5f3d4329140b21beae60ffad" translate="yes" xml:space="preserve">
          <source>A string containing a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blink&quot;&gt;&lt;code&gt;&amp;lt;blink&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blink&quot;&gt; &lt;code&gt;&amp;lt;blink&amp;gt;&lt;/code&gt; &lt;/a&gt; HTML要素を含む文字列。</target>
        </trans-unit>
        <trans-unit id="ec7ad51106a4c18c42f006349c05da5d70f3e509" translate="yes" xml:space="preserve">
          <source>A string containing a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/font&quot;&gt;&lt;code&gt;&amp;lt;font&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/font&quot;&gt; &lt;code&gt;&amp;lt;font&amp;gt;&lt;/code&gt; &lt;/a&gt; HTML要素を含む文字列。</target>
        </trans-unit>
        <trans-unit id="f8c391aaa399b04ba0a7a0785a3f6a45ff5edf9e" translate="yes" xml:space="preserve">
          <source>A string containing a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/i&quot;&gt;&lt;code&gt;&amp;lt;i&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/i&quot;&gt; &lt;code&gt;&amp;lt;i&amp;gt;&lt;/code&gt; &lt;/a&gt; HTML要素を含む文字列。</target>
        </trans-unit>
        <trans-unit id="4b37254c20cb4322dddec6edfdd4a59a8749c619" translate="yes" xml:space="preserve">
          <source>A string containing a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/small&quot;&gt;&lt;code&gt;&amp;lt;small&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/small&quot;&gt; &lt;code&gt;&amp;lt;small&amp;gt;&lt;/code&gt; &lt;/a&gt; HTML要素を含む文字列。</target>
        </trans-unit>
        <trans-unit id="7a20e76995e89e307af6f89319a0706e4ba3e00d" translate="yes" xml:space="preserve">
          <source>A string containing a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strike&quot;&gt;&lt;code&gt;&amp;lt;strike&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strike&quot;&gt; &lt;code&gt;&amp;lt;strike&amp;gt;&lt;/code&gt; &lt;/a&gt; HTML要素を含む文字列。</target>
        </trans-unit>
        <trans-unit id="1ddf5983ed53b29b0a2acb22b989e0a467380d41" translate="yes" xml:space="preserve">
          <source>A string containing a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sub&quot;&gt;&lt;code&gt;&amp;lt;sub&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sub&quot;&gt; &lt;code&gt;&amp;lt;sub&amp;gt;&lt;/code&gt; &lt;/a&gt; HTML要素を含む文字列。</target>
        </trans-unit>
        <trans-unit id="4306846ca234ae1382c39998ecba39890e1fd00b" translate="yes" xml:space="preserve">
          <source>A string containing a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sup&quot;&gt;&lt;code&gt;&amp;lt;sup&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sup&quot;&gt; &lt;code&gt;&amp;lt;sup&amp;gt;&lt;/code&gt; &lt;/a&gt; HTML要素を含む文字列。</target>
        </trans-unit>
        <trans-unit id="3336bc2ec1d0c8cda1387b9c22269456b6a7bca3" translate="yes" xml:space="preserve">
          <source>A string containing a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/b&quot;&gt;&lt;code&gt;&amp;lt;b&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element.</source>
          <target state="translated">A string containing a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/b&quot;&gt; &lt;code&gt;&amp;lt;b&amp;gt;&lt;/code&gt; &lt;/a&gt; HTML element.</target>
        </trans-unit>
        <trans-unit id="4d802c06077239b42a8cb9577fa83b01c8321be9" translate="yes" xml:space="preserve">
          <source>A string containing a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/big&quot;&gt;&lt;code&gt;&amp;lt;big&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element.</source>
          <target state="translated">A string containing a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/big&quot;&gt; &lt;code&gt;&amp;lt;big&amp;gt;&lt;/code&gt; &lt;/a&gt; HTML element.</target>
        </trans-unit>
        <trans-unit id="8c852cf8336514bfcb05ea9f7a426e9a4eeea30b" translate="yes" xml:space="preserve">
          <source>A string containing a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/blink&quot;&gt;&lt;code&gt;&amp;lt;blink&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element.</source>
          <target state="translated">A string containing a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/blink&quot;&gt; &lt;code&gt;&amp;lt;blink&amp;gt;&lt;/code&gt; &lt;/a&gt; HTML element.</target>
        </trans-unit>
        <trans-unit id="acdaca5868d2404d4a7a78a6ea2ccc7b8f4190d5" translate="yes" xml:space="preserve">
          <source>A string containing a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/font&quot;&gt;&lt;code&gt;&amp;lt;font&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element.</source>
          <target state="translated">A string containing a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/font&quot;&gt; &lt;code&gt;&amp;lt;font&amp;gt;&lt;/code&gt; &lt;/a&gt; HTML element.</target>
        </trans-unit>
        <trans-unit id="e81c53ce3e495a5043b2005011f8862bc45bbf19" translate="yes" xml:space="preserve">
          <source>A string containing a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/i&quot;&gt;&lt;code&gt;&amp;lt;i&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element.</source>
          <target state="translated">A string containing a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/i&quot;&gt; &lt;code&gt;&amp;lt;i&amp;gt;&lt;/code&gt; &lt;/a&gt; HTML element.</target>
        </trans-unit>
        <trans-unit id="4e4b02784d785d893c8129632252ddecc2b53c01" translate="yes" xml:space="preserve">
          <source>A string containing a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/small&quot;&gt;&lt;code&gt;&amp;lt;small&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element.</source>
          <target state="translated">A string containing a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/small&quot;&gt; &lt;code&gt;&amp;lt;small&amp;gt;&lt;/code&gt; &lt;/a&gt; HTML element.</target>
        </trans-unit>
        <trans-unit id="d9fac2be5f328ff993cf72ef5e23dd814b7dfdec" translate="yes" xml:space="preserve">
          <source>A string containing a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/strike&quot;&gt;&lt;code&gt;&amp;lt;strike&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element.</source>
          <target state="translated">A string containing a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/strike&quot;&gt; &lt;code&gt;&amp;lt;strike&amp;gt;&lt;/code&gt; &lt;/a&gt; HTML element.</target>
        </trans-unit>
        <trans-unit id="44523d9ad21444479947795d9ff04bc192bd1bf1" translate="yes" xml:space="preserve">
          <source>A string containing a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/sub&quot;&gt;&lt;code&gt;&amp;lt;sub&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element.</source>
          <target state="translated">&lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/sub&quot;&gt; &lt;code&gt;&amp;lt;sub&amp;gt;&lt;/code&gt; &lt;/a&gt; HTML要素を含む文字列。</target>
        </trans-unit>
        <trans-unit id="c3209588d63e393bc9e82ccc494c8646a244a02b" translate="yes" xml:space="preserve">
          <source>A string containing a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/sup&quot;&gt;&lt;code&gt;&amp;lt;sup&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element.</source>
          <target state="translated">&lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/sup&quot;&gt; &lt;code&gt;&amp;lt;sup&amp;gt;&lt;/code&gt; &lt;/a&gt; HTML要素を含む文字列。</target>
        </trans-unit>
        <trans-unit id="51de888e8e9b13df3e647799710c993ee4efd9ce" translate="yes" xml:space="preserve">
          <source>A string containing an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a&quot;&gt;&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a&quot;&gt; &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; &lt;/a&gt; HTML要素を含む文字列。</target>
        </trans-unit>
        <trans-unit id="8f44025d1a42ce64a1556a9ae9fe26f14e8ce235" translate="yes" xml:space="preserve">
          <source>A string containing an &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/a&quot;&gt;&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element.</source>
          <target state="translated">&lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/a&quot;&gt; &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; &lt;/a&gt; HTML要素を含む文字列。</target>
        </trans-unit>
        <trans-unit id="abe9e0cf511aef2167e97d8008c18e49b5c48eec" translate="yes" xml:space="preserve">
          <source>A string containing the JavaScript statements comprising the function body.</source>
          <target state="translated">関数本体を構成するJavaScript文を含む文字列。</target>
        </trans-unit>
        <trans-unit id="38d61b47da781175f39c0ce0ce74496ca36281c3" translate="yes" xml:space="preserve">
          <source>A string containing the JavaScript statements comprising the function definition.</source>
          <target state="translated">関数定義を構成するJavaScript文を含む文字列。</target>
        </trans-unit>
        <trans-unit id="76ab2020f08dc24275ba16863402a30ec1a282de" translate="yes" xml:space="preserve">
          <source>A string containing the Unicode Normalization Form of the given string.</source>
          <target state="translated">与えられた文字列の Unicode 正規化形式を含む文字列。</target>
        </trans-unit>
        <trans-unit id="e3e98e4cc796765cd4f1b36dfc48bd45a5a8f037" translate="yes" xml:space="preserve">
          <source>A string containing the name of the property to be bound to the given function.</source>
          <target state="translated">与えられた関数にバインドされるプロパティの名前を含む文字列。</target>
        </trans-unit>
        <trans-unit id="c4a276b31a6d267ea98ce2254e8a3d7b9ba63144" translate="yes" xml:space="preserve">
          <source>A string containing the name of the property to bind to the given function.</source>
          <target state="translated">与えられた関数にバインドするプロパティの名前を含む文字列。</target>
        </trans-unit>
        <trans-unit id="cf46dbdb642416ee5553d0fcefb91c75bfde7711" translate="yes" xml:space="preserve">
          <source>A string created by using the specified sequence of code points.</source>
          <target state="translated">指定されたコードポイントのシーケンスを使用して作成された文字列。</target>
        </trans-unit>
        <trans-unit id="145134fffe30f647881f6800617d58d07ab6d93c" translate="yes" xml:space="preserve">
          <source>A string expressing the color as a hexadecimal RGB triplet or as a string literal. String literals for color names are listed in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/color_value&quot;&gt;CSS color reference&lt;/a&gt;.</source>
          <target state="translated">16進数のRGB 3成分または文字列リテラルとして色を表す文字列。色名の文字列リテラルは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/color_value&quot;&gt;CSSカラーリファレンスに&lt;/a&gt;リストされています。</target>
        </trans-unit>
        <trans-unit id="8f4edbab8a29599c9fa97a2f58b31572bae53931" translate="yes" xml:space="preserve">
          <source>A string expressing the color as a hexadecimal RGB triplet or as a string literal. String literals for color names are listed in the &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/CSS/color_value&quot;&gt;CSS color reference&lt;/a&gt;.</source>
          <target state="translated">色を16進数のRGBトリプレットまたは文字列リテラルとして表す文字列。色名の文字列リテラルは、&lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/CSS/color_value&quot;&gt;CSSカラーリファレンスに&lt;/a&gt;リストされています。</target>
        </trans-unit>
        <trans-unit id="b973e9b0d98fb7a711707960f9a13ff27cb14416" translate="yes" xml:space="preserve">
          <source>A string key used to identify a symbol.</source>
          <target state="translated">シンボルを識別するために使用される文字列キー。</target>
        </trans-unit>
        <trans-unit id="c4ba502455dbe95cd2c6eb5283a1c02f3545e525" translate="yes" xml:space="preserve">
          <source>A string leading to an invalid date has been provided to &lt;a href=&quot;../global_objects/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/date/parse&quot;&gt;&lt;code&gt;Date.parse()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">無効な日付につながる文字列が&lt;a href=&quot;../global_objects/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../global_objects/date/parse&quot;&gt; &lt;code&gt;Date.parse()&lt;/code&gt; に&lt;/a&gt;提供されました。</target>
        </trans-unit>
        <trans-unit id="f2134306d88850caca46971ddc5dc90adf6e606a" translate="yes" xml:space="preserve">
          <source>A string literal is zero or more Unicode code points enclosed in single or double quotes. Unicode code points may also be represented by an escape sequence. All code points may appear literally in a string literal except for these closing quote code points:</source>
          <target state="translated">文字列リテラルは、 ゼロ個以上の Unicode コ ー ド 点を一重引用符ま たは二重引用符で囲んだものです。Unicode コード点は、 エスケープシーケンスで表すこともできます。文字列リテラルの中では、これらの閉じ引用符で囲まれたコードポイントを除いて、すべてのコードポイントが文字通りに現れることがあります。</target>
        </trans-unit>
        <trans-unit id="5ac33925a3b34d167477d5f4e59967a5cff70eb4" translate="yes" xml:space="preserve">
          <source>A string made out of the characters &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt; and &lt;code&gt;_&lt;/code&gt;</source>
          <target state="translated">文字 &lt;code&gt;x&lt;/code&gt; 、 &lt;code&gt;-&lt;/code&gt; 、および &lt;code&gt;_&lt;/code&gt; で構成される文字列</target>
        </trans-unit>
        <trans-unit id="05860dec7b27558fe1283e64fc5d43655722e8fa" translate="yes" xml:space="preserve">
          <source>A string of length &lt;code&gt;&lt;var&gt;N&lt;/var&gt;&lt;/code&gt; consisting of the &lt;code&gt;&lt;var&gt;N&lt;/var&gt;&lt;/code&gt; specified UTF-16 code units.</source>
          <target state="translated">&lt;code&gt;&lt;var&gt;N&lt;/var&gt;&lt;/code&gt; 個の指定されたUTF-16コード単位で構成される長さ &lt;code&gt;&lt;var&gt;N&lt;/var&gt;&lt;/code&gt; の文字列。</target>
        </trans-unit>
        <trans-unit id="de8ec3b2242ce2b8ec5db8f1df700c63a8886a5d" translate="yes" xml:space="preserve">
          <source>A string of length N consisting of the N specified UTF-16 code units.</source>
          <target state="translated">UTF-16 のコード単位を N 個指定した長さ N の文字列。</target>
        </trans-unit>
        <trans-unit id="5b81bc68802330b0cc8615d6ff27b54ac4650e9c" translate="yes" xml:space="preserve">
          <source>A string or symbol representing a property name or array index (non-symbols will be coerced to strings).</source>
          <target state="translated">プロパティ名または配列インデックスを表す文字列または記号(記号以外のものは強制的に文字列になります)。</target>
        </trans-unit>
        <trans-unit id="a18c7400718bfc639f4c116a3e19d59b2744892d" translate="yes" xml:space="preserve">
          <source>A string representation of the given date.</source>
          <target state="translated">指定した日付の文字列表現。</target>
        </trans-unit>
        <trans-unit id="34b98cadabcecaa39551d2ef324a7512e6ba5cba" translate="yes" xml:space="preserve">
          <source>A string representing &lt;a href=&quot;#Date_Time_String_Format&quot;&gt; a simplification of the ISO 8601 calendar date extended format&lt;/a&gt;. (Other formats may be used, but results are implementation-dependent.)</source>
          <target state="translated">&lt;a href=&quot;#Date_Time_String_Format&quot;&gt;ISO8601カレンダー日付拡張形式の簡略化を&lt;/a&gt;表す文字列。（他の形式を使用することもできますが、結果は実装によって異なります。）</target>
        </trans-unit>
        <trans-unit id="08a2428925659a7efc79a81666d56ab1b23ac8bd" translate="yes" xml:space="preserve">
          <source>A string representing a &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; object in fixed-point or exponential notation rounded to &lt;code&gt;precision&lt;/code&gt; significant digits. See the discussion of rounding in the description of the &lt;a href=&quot;tofixed&quot;&gt;&lt;code&gt;Number.prototype.toFixed()&lt;/code&gt;&lt;/a&gt; method, which also applies to &lt;code&gt;toPrecision()&lt;/code&gt;.</source>
          <target state="translated">表す文字列&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt;固定小数点または指数表記の目的は、に丸め &lt;code&gt;precision&lt;/code&gt; 有効桁。説明に丸めの議論を参照&lt;a href=&quot;tofixed&quot;&gt; &lt;code&gt;Number.prototype.toFixed()&lt;/code&gt; &lt;/a&gt;も適用方法、 &lt;code&gt;toPrecision()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0e30f03797e3869c4ecd88c8bf859d4c16eb311c" translate="yes" xml:space="preserve">
          <source>A string representing a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tt&quot;&gt;&lt;code&gt;&amp;lt;tt&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tt&quot;&gt; &lt;code&gt;&amp;lt;tt&amp;gt;&lt;/code&gt; &lt;/a&gt; HTML要素を表す文字列。</target>
        </trans-unit>
        <trans-unit id="5196f9a40d56c060157244c877b4373a0665a143" translate="yes" xml:space="preserve">
          <source>A string representing a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/tt&quot;&gt;&lt;code&gt;&amp;lt;tt&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element.</source>
          <target state="translated">&lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/tt&quot;&gt; &lt;code&gt;&amp;lt;tt&amp;gt;&lt;/code&gt; &lt;/a&gt; HTML要素を表す文字列。</target>
        </trans-unit>
        <trans-unit id="b765c808e9044a0fc26fc5f5c8be40b21c25c477" translate="yes" xml:space="preserve">
          <source>A string representing a &lt;code&gt;name&lt;/code&gt; value to put into the generated &lt;code&gt;&amp;lt;a name=&quot;...&quot;&amp;gt;&lt;/code&gt; start tag.</source>
          <target state="translated">生成された &lt;code&gt;&amp;lt;a name=&quot;...&quot;&amp;gt;&lt;/code&gt; 開始タグに入れる &lt;code&gt;name&lt;/code&gt; 値を表す文字列。</target>
        </trans-unit>
        <trans-unit id="0e01b8f1781e759022defb07600f62cd42344aa0" translate="yes" xml:space="preserve">
          <source>A string representing a JavaScript expression, statement, or sequence of statements. The expression can include variables and properties of existing objects.</source>
          <target state="translated">JavaScript の式、文、または一連の文を表す文字列。式には、変数や既存のオブジェクトのプロパティを含めることができます。</target>
        </trans-unit>
        <trans-unit id="f9254bb11ce7fa09e680aac2d18a191122d1c881" translate="yes" xml:space="preserve">
          <source>A string representing an &lt;a href=&quot;http://tools.ietf.org/html/rfc2822#section-3.3&quot;&gt;RFC2822&lt;/a&gt; or (a variant of) ISO 8601 date (other formats may be used, but results may be unexpected).</source>
          <target state="translated">&lt;a href=&quot;http://tools.ietf.org/html/rfc2822#section-3.3&quot;&gt;RFC2822&lt;/a&gt;またはISO 8601日付（の変形）を表す文字列（他の形式が使用されることもありますが、予期しない結果になる場合があります）。</target>
        </trans-unit>
        <trans-unit id="6244d4a905fd37ba6f6d50a55c6bb8f4e5b6c4d7" translate="yes" xml:space="preserve">
          <source>A string representing the &lt;code&gt;name&lt;/code&gt; attribute of the a tag to be created.</source>
          <target state="translated">作成するaタグの &lt;code&gt;name&lt;/code&gt; 属性を表す文字列。</target>
        </trans-unit>
        <trans-unit id="cfef5b02c603941cad9446222899fb11356af21f" translate="yes" xml:space="preserve">
          <source>A string representing the calling object.</source>
          <target state="translated">呼び出し元のオブジェクトを表す文字列。</target>
        </trans-unit>
        <trans-unit id="973da79f75a4a483c8ce5238020379258dbec5ba" translate="yes" xml:space="preserve">
          <source>A string representing the character (exactly one UTF-16 code unit) at the specified &lt;code&gt;&lt;var&gt;index&lt;/var&gt;&lt;/code&gt;. If &lt;code&gt;&lt;var&gt;index&lt;/var&gt;&lt;/code&gt; is out of range, &lt;code&gt;charAt()&lt;/code&gt; returns an empty string.</source>
          <target state="translated">指定された &lt;code&gt;&lt;var&gt;index&lt;/var&gt;&lt;/code&gt; の文字（正確に1つのUTF-16コードユニット）を表す文字列。 &lt;code&gt;&lt;var&gt;index&lt;/var&gt;&lt;/code&gt; が範囲外の場合、 &lt;code&gt;charAt()&lt;/code&gt; は空の文字列を返します。</target>
        </trans-unit>
        <trans-unit id="cfc79f0e7924f2faa05b9dd03bc2ba62bd8be7f2" translate="yes" xml:space="preserve">
          <source>A string representing the character (exactly one UTF-16 code unit) at the specified index; empty string if &lt;code&gt;index&lt;/code&gt; is out of range.</source>
          <target state="translated">指定されたインデックスの文字（正確には1つのUTF-16コード単位）を表す文字列。 &lt;code&gt;index&lt;/code&gt; が範囲外の場合は空の文字列。</target>
        </trans-unit>
        <trans-unit id="bce925e4236a8a7f459800d14b769e67fd668383" translate="yes" xml:space="preserve">
          <source>A string representing the date portion of the given &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; instance according to language-specific conventions.</source>
          <target state="translated">言語固有の規則に従って、指定された&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;インスタンスの日付部分を表す文字列。</target>
        </trans-unit>
        <trans-unit id="6c9697396de5d4178a0436aa1919cd3a843bcdda" translate="yes" xml:space="preserve">
          <source>A string representing the date portion of the given &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object in human readable form in American English.</source>
          <target state="translated">指定された&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;オブジェクトの日付部分を、アメリカ英語で人間が読める形式で表す文字列。</target>
        </trans-unit>
        <trans-unit id="31fbb75fd7862006e0dddf6d27751050628a1c9d" translate="yes" xml:space="preserve">
          <source>A string representing the date portion of the given &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object in human readable form in English.</source>
          <target state="translated">指定された&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;オブジェクトの日付部分を人間が読める形式で英語で表す文字列。</target>
        </trans-unit>
        <trans-unit id="93885e8efffe8ca22cde3b3103a348ebf2fcb896" translate="yes" xml:space="preserve">
          <source>A string representing the elements of the array.</source>
          <target state="translated">配列の要素を表す文字列.</target>
        </trans-unit>
        <trans-unit id="701ca4745ebe954e81d4c94ac49ec3b0b11338d2" translate="yes" xml:space="preserve">
          <source>A string representing the elements of the typed array.</source>
          <target state="translated">型付き配列の要素を表す文字列.</target>
        </trans-unit>
        <trans-unit id="04f0a9918594d1b07b71f32e22be51defdb30455" translate="yes" xml:space="preserve">
          <source>A string representing the given &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; object in exponential notation with one digit before the decimal point, rounded to &lt;code&gt;&lt;var&gt;fractionDigits&lt;/var&gt;&lt;/code&gt; digits after the decimal point.</source>
          <target state="translated">指定された&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt;オブジェクトを、小数点の前に1桁の指数表記で表し、小数点の後に &lt;code&gt;&lt;var&gt;fractionDigits&lt;/var&gt;&lt;/code&gt; 桁に丸められる文字列。</target>
        </trans-unit>
        <trans-unit id="694c9b223fd1d55490540acabfbd260b93f3ff7d" translate="yes" xml:space="preserve">
          <source>A string representing the given &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; object in exponential notation with one digit before the decimal point, rounded to &lt;code&gt;fractionDigits&lt;/code&gt; digits after the decimal point.</source>
          <target state="translated">小数点の前に1桁の指数表記で指定された&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt;オブジェクトを表す文字列。小数点以下は &lt;code&gt;fractionDigits&lt;/code&gt; 桁に丸められます。</target>
        </trans-unit>
        <trans-unit id="d6a9a7d6acfe9f8529cddf686faa5be06a13dacd" translate="yes" xml:space="preserve">
          <source>A string representing the given date according to language-specific conventions.</source>
          <target state="translated">言語固有の規則に従って、指定された日付を表す文字列。</target>
        </trans-unit>
        <trans-unit id="bc72a865054e5fa7915f4960d0747b66252825d6" translate="yes" xml:space="preserve">
          <source>A string representing the given date in the &lt;a href=&quot;http://en.wikipedia.org/wiki/ISO_8601&quot;&gt;ISO 8601&lt;/a&gt; format according to universal time.</source>
          <target state="translated">指定された日付を&lt;a href=&quot;http://en.wikipedia.org/wiki/ISO_8601&quot;&gt;ISO 8601&lt;/a&gt;形式で世界時に従って表す文字列。</target>
        </trans-unit>
        <trans-unit id="04bf0fc613a10ee67bb8b0f5cb52862ada0176fd" translate="yes" xml:space="preserve">
          <source>A string representing the given date in the &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_8601&quot;&gt;ISO 8601&lt;/a&gt; format according to universal time.</source>
          <target state="translated">世界時に従って&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_8601&quot;&gt;ISO8601&lt;/a&gt;形式で指定された日付を表す文字列。</target>
        </trans-unit>
        <trans-unit id="64a69f15ed616bdd4d91437822d386ddaf433d06" translate="yes" xml:space="preserve">
          <source>A string representing the given date using the UTC time zone.</source>
          <target state="translated">UTC タイムゾーンを使用して指定した日付を表す文字列。</target>
        </trans-unit>
        <trans-unit id="168956bbaa8e1f9f6875a4e8d5b9ee1d635883e8" translate="yes" xml:space="preserve">
          <source>A string representing the given date.</source>
          <target state="translated">指定した日付を表す文字列。</target>
        </trans-unit>
        <trans-unit id="ffbe6ab9f29a627c561f25e1d22a21bbafc5486b" translate="yes" xml:space="preserve">
          <source>A string representing the given number using fixed-point notation.</source>
          <target state="translated">固定小数点表記を用いて与えられた数値を表す文字列。</target>
        </trans-unit>
        <trans-unit id="23e944223688a40ac8cb9c8008ea32555e40451b" translate="yes" xml:space="preserve">
          <source>A string representing the given object.</source>
          <target state="translated">与えられたオブジェクトを表す文字列。</target>
        </trans-unit>
        <trans-unit id="ac2bb9c5fd42d8c226c061ffc6074803f916b703" translate="yes" xml:space="preserve">
          <source>A string representing the key for the given symbol if one is found on the global registry; otherwise, &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">グローバルレジストリで見つかった場合、指定されたシンボルのキーを表す文字列。それ以外の場合は&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="667b912c4ed8d3e3093de093469f68a12c07850a" translate="yes" xml:space="preserve">
          <source>A string representing the object.</source>
          <target state="translated">オブジェクトを表す文字列。</target>
        </trans-unit>
        <trans-unit id="990d392ee905bf2438c03975619b9f3b89227271" translate="yes" xml:space="preserve">
          <source>A string representing the primitive value of a given &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">指定された&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;オブジェクトのプリミティブ値を表す文字列。</target>
        </trans-unit>
        <trans-unit id="ebfda157488c0e43d59991005141b47bd2618063" translate="yes" xml:space="preserve">
          <source>A string representing the source code of the function.</source>
          <target state="translated">関数のソースコードを表す文字列。</target>
        </trans-unit>
        <trans-unit id="c3e0e160beabc70b9ccc2f0947f69ebc84c8de74" translate="yes" xml:space="preserve">
          <source>A string representing the source code of the given Object.</source>
          <target state="translated">与えられたオブジェクトのソースコードを表す文字列。</target>
        </trans-unit>
        <trans-unit id="e87087e3b7c93062c82f502c485f3c8053121e71" translate="yes" xml:space="preserve">
          <source>A string representing the specified &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">指定された&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;オブジェクトを表す文字列。</target>
        </trans-unit>
        <trans-unit id="b33ca901b06ca2547079b023d6415a900fbbe78a" translate="yes" xml:space="preserve">
          <source>A string representing the specified &lt;a href=&quot;../error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">指定された&lt;a href=&quot;../error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;オブジェクトを表す文字列。</target>
        </trans-unit>
        <trans-unit id="952876e6d59e7e29a62c3ddd5855937975967682" translate="yes" xml:space="preserve">
          <source>A string representing the specified &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">指定された&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt;オブジェクトを表す文字列。</target>
        </trans-unit>
        <trans-unit id="b35316e186539e1e03a1985888302b2c59d358b8" translate="yes" xml:space="preserve">
          <source>A string representing the specified &lt;a href=&quot;../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">指定された&lt;a href=&quot;../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt;オブジェクトを表す文字列。</target>
        </trans-unit>
        <trans-unit id="db046c0e034f78ea98d34e4760eeed28ae241d71" translate="yes" xml:space="preserve">
          <source>A string representing the time portion of the given &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; instance according to language-specific conventions.</source>
          <target state="translated">言語固有の規則に従って、指定された&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;インスタンスの時刻部分を表す文字列。</target>
        </trans-unit>
        <trans-unit id="61f9cb13ac776ca3611c0b60732436e06749eebe" translate="yes" xml:space="preserve">
          <source>A string representing the time portion of the given date in human readable form in American English.</source>
          <target state="translated">指定された日付の時間部分を、アメリカ英語で人間が読める形式で表す文字列。</target>
        </trans-unit>
        <trans-unit id="93198d4265eb1fd0334586d89a9e89e8fb0dbdb5" translate="yes" xml:space="preserve">
          <source>A string representing the time portion of the given date in human readable form in English.</source>
          <target state="translated">指定された日付の時間部分を、人間が読める形で英語で表現した文字列。</target>
        </trans-unit>
        <trans-unit id="3f0dcfc8cc35afe6bb0ed02631a89116727bc9c4" translate="yes" xml:space="preserve">
          <source>A string representing the type of value to be stored in the table. At the moment this can only have a value of &lt;code&gt;&quot;anyfunc&quot;&lt;/code&gt; (functions).</source>
          <target state="translated">テーブルに格納される値のタイプを表す文字列。現時点では、これは &lt;code&gt;&quot;anyfunc&quot;&lt;/code&gt; （関数）の値のみを持つことができます。</target>
        </trans-unit>
        <trans-unit id="030d4e4fabacf5a3d7ad01b972f183ecff65034b" translate="yes" xml:space="preserve">
          <source>A string representing the value to search for.</source>
          <target state="translated">検索する値を表す文字列。</target>
        </trans-unit>
        <trans-unit id="9206807e1299d721fddc7ad547692916d3be78b7" translate="yes" xml:space="preserve">
          <source>A string representing the value to search for. If &lt;code&gt;&lt;var&gt;searchValue&lt;/var&gt;&lt;/code&gt; is an empty string, then &lt;code&gt;&lt;var&gt;fromIndex&lt;/var&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">検索する値を表す文字列。場合 &lt;code&gt;&lt;var&gt;searchValue&lt;/var&gt;&lt;/code&gt; が空の文字列で、その後、 &lt;code&gt;&lt;var&gt;fromIndex&lt;/var&gt;&lt;/code&gt; のが返されます。</target>
        </trans-unit>
        <trans-unit id="48b62b6aa9e258b2815ec9128f214b6becbe0640" translate="yes" xml:space="preserve">
          <source>A string representing the value to search for. If &lt;code&gt;searchValue&lt;/code&gt; is an empty string, then &lt;code&gt;fromIndex&lt;/code&gt; is returned.</source>
          <target state="translated">検索する値を表す文字列。場合 &lt;code&gt;searchValue&lt;/code&gt; が空の文字列で、その後、 &lt;code&gt;fromIndex&lt;/code&gt; のが返されます。</target>
        </trans-unit>
        <trans-unit id="3ff1f8ff6ca06064eab0e4356c8d2a105d2d09ab" translate="yes" xml:space="preserve">
          <source>A string that contains the flags of the &lt;code&gt;RegExp&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;RegExp&lt;/code&gt; オブジェクトのフラグを含む文字列。</target>
        </trans-unit>
        <trans-unit id="5817264bac76ff2eb209a8f6ba40876e2f47d047" translate="yes" xml:space="preserve">
          <source>A string to be searched for within &lt;code&gt;&lt;var&gt;str&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;var&gt;str&lt;/var&gt;&lt;/code&gt; 内で検索される文字列。</target>
        </trans-unit>
        <trans-unit id="8c48800076146dbe970f29dc9bf319cfdbded902" translate="yes" xml:space="preserve">
          <source>A string to be searched for within this string.</source>
          <target state="translated">この文字列の中で検索する文字列。</target>
        </trans-unit>
        <trans-unit id="8b24c133d1238ece438133be89a181d28dca5fe8" translate="yes" xml:space="preserve">
          <source>A string value used for the default description of an object. Used by &lt;a href=&quot;object/tostring&quot;&gt;&lt;code&gt;Object.prototype.toString()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">オブジェクトのデフォルトの説明に使用される文字列値。&lt;a href=&quot;object/tostring&quot;&gt; &lt;code&gt;Object.prototype.toString()&lt;/code&gt; &lt;/a&gt;によって使用されます。</target>
        </trans-unit>
        <trans-unit id="6760093f4bcbf79d2c817e61959154edea1c9473" translate="yes" xml:space="preserve">
          <source>A string which is either &quot;&lt;code&gt;ok&lt;/code&gt;&quot;, &quot;&lt;code&gt;not-equal&lt;/code&gt;&quot;, or &quot;&lt;code&gt;timed-out&lt;/code&gt;&quot;.</source>
          <target state="translated">「 &lt;code&gt;ok&lt;/code&gt; 」、「 &lt;code&gt;not-equal&lt;/code&gt; 」、または「 &lt;code&gt;timed-out&lt;/code&gt; 」のいずれかの文字列。</target>
        </trans-unit>
        <trans-unit id="cfc08b80d01ebf250b441770b1bebd6b67e94014" translate="yes" xml:space="preserve">
          <source>A string with a BCP 47 language tag, or an array of such strings. For the general form and interpretation of the &lt;code&gt;locales&lt;/code&gt; argument, see the &lt;a href=&quot;../intl&quot;&gt;&lt;code&gt;Intl&lt;/code&gt;&lt;/a&gt; page.</source>
          <target state="translated">BCP 47言語タグを含む文字列、またはそのような文字列の配列。 &lt;code&gt;locales&lt;/code&gt; 引数の一般的な形式と解釈については、&lt;a href=&quot;../intl&quot;&gt; &lt;code&gt;Intl&lt;/code&gt; &lt;/a&gt;ページを参照してください。</target>
        </trans-unit>
        <trans-unit id="bd1fda3a4fc0dc9e9f5a778e58cc41240c583e81" translate="yes" xml:space="preserve">
          <source>A string with a BCP 47 language tag, or an array of such strings. For the general form of the &lt;code&gt;locales&lt;/code&gt; argument, see the &lt;a href=&quot;../intl#Locale_identification_and_negotiation&quot;&gt;Intl page&lt;/a&gt;.</source>
          <target state="translated">BCP 47言語タグを含む文字列、またはそのような文字列の配列。 &lt;code&gt;locales&lt;/code&gt; 引数の一般的な形式については、&lt;a href=&quot;../intl#Locale_identification_and_negotiation&quot;&gt;Intlページを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="04ec703ab3361b962aaf358db865119109228132" translate="yes" xml:space="preserve">
          <source>A string with a language-sensitive representation of the given number.</source>
          <target state="translated">指定された数値を言語に応じて表現した文字列。</target>
        </trans-unit>
        <trans-unit id="9540e4c01c9b518ddb013e0b730154a0bbb14fc8" translate="yes" xml:space="preserve">
          <source>A string with all array elements joined.</source>
          <target state="translated">すべての配列要素を結合した文字列。</target>
        </trans-unit>
        <trans-unit id="be6c9aeda83fe92c774caf7e86683ef417b1db55" translate="yes" xml:space="preserve">
          <source>A string with all array elements joined. If &lt;code&gt;&lt;em&gt;arr&lt;/em&gt;.length&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt;, the empty string is returned.</source>
          <target state="translated">すべての配列要素が結合された文字列。場合 &lt;code&gt;&lt;em&gt;arr&lt;/em&gt;.length&lt;/code&gt; ある &lt;code&gt;0&lt;/code&gt; 、空の文字列が返されます。</target>
        </trans-unit>
        <trans-unit id="3a4e7454db84038abc27af6304fc8e28d1349ecb" translate="yes" xml:space="preserve">
          <source>A switch statement first evaluates its expression. It then looks for the first &lt;code&gt;case&lt;/code&gt; clause whose expression evaluates to the same value as the result of the input expression (using the &lt;a href=&quot;../operators/comparison_operators&quot;&gt;strict comparison&lt;/a&gt;, &lt;code&gt;===&lt;/code&gt;) and transfers control to that clause, executing the associated statements. (If multiple cases match the provided value, the first case that matches is selected, even if the cases are not equal to each other.)</source>
          <target state="translated">switchステートメントは、最初にその式を評価します。次に、式が入力式の結果と同じ値に評価される最初の &lt;code&gt;case&lt;/code&gt; 句を探し（&lt;a href=&quot;../operators/comparison_operators&quot;&gt;厳密な比較&lt;/a&gt;、 &lt;code&gt;===&lt;/code&gt; を使用）、その句に制御を移して、関連するステートメントを実行します。（複数のケースが指定された値と一致する場合、ケースが互いに等しくなくても、最初に一致するケースが選択されます。）</target>
        </trans-unit>
        <trans-unit id="1d4ca9cf27426f95690bc98ac8a774845f8c6e4d" translate="yes" xml:space="preserve">
          <source>A symbol containing property names to exclude from a &lt;a href=&quot;../statements/with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; binding scope.</source>
          <target state="translated">プロパティ名を含むシンボルから除外する&lt;a href=&quot;../statements/with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;範囲を結合します。</target>
        </trans-unit>
        <trans-unit id="02423ce5fb8b86d888d30d8d64bcf73a9af82d5c" translate="yes" xml:space="preserve">
          <source>A symbol containing property names to exclude from a &lt;code&gt;&lt;a href=&quot;../../statements/with&quot;&gt;with&lt;/a&gt;&lt;/code&gt; binding scope.</source>
          <target state="translated">バインディングスコープを &lt;code&gt;&lt;a href=&quot;../../statements/with&quot;&gt;with&lt;/a&gt;&lt;/code&gt; から除外するプロパティ名を含むシンボル。</target>
        </trans-unit>
        <trans-unit id="37eb349389fccc1b0c1676c6b0a7744cf03a9c12" translate="yes" xml:space="preserve">
          <source>A symbol containing property names to exclude from a &lt;code&gt;&lt;a href=&quot;../statements/with&quot;&gt;with&lt;/a&gt;&lt;/code&gt; binding scope.</source>
          <target state="translated">バインディングスコープを &lt;code&gt;&lt;a href=&quot;../statements/with&quot;&gt;with&lt;/a&gt;&lt;/code&gt; から除外するプロパティ名を含むシンボル。</target>
        </trans-unit>
        <trans-unit id="468bc722d85e2f6acf095f7491f98edd491f1ee7" translate="yes" xml:space="preserve">
          <source>A symbol that is stored globally.</source>
          <target state="translated">グローバルに保存されるシンボル。</target>
        </trans-unit>
        <trans-unit id="f714a352d072866d3fb308a4778400ba2c07a9d0" translate="yes" xml:space="preserve">
          <source>A target object to wrap with &lt;code&gt;Proxy&lt;/code&gt;. It can be any sort of object, including a native array, a function or even another proxy.</source>
          <target state="translated">&lt;code&gt;Proxy&lt;/code&gt; でラップするターゲットオブジェクト。これは、ネイティブ配列、関数、または別のプロキシを含む、あらゆる種類のオブジェクトにすることができます。</target>
        </trans-unit>
        <trans-unit id="2b085d2e9f1595a6ce1ac29b9ef7635a88d32d34" translate="yes" xml:space="preserve">
          <source>A target object to wrap with &lt;code&gt;Proxy&lt;/code&gt;. It can be any sort of object, including a native array, a function, or even another proxy.</source>
          <target state="translated">&lt;code&gt;Proxy&lt;/code&gt; でラップするターゲットオブジェクト。ネイティブ配列、関数、さらには別のプロキシなど、あらゆる種類のオブジェクトにすることができます。</target>
        </trans-unit>
        <trans-unit id="ca85face59c27157fe435bbdb6b7093a86e68119" translate="yes" xml:space="preserve">
          <source>A trap for &lt;a href=&quot;../object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../object/defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty&lt;/code&gt; &lt;/a&gt;のトラップ。</target>
        </trans-unit>
        <trans-unit id="79eab3aabd52f88978f67220e7bda2206962e0be" translate="yes" xml:space="preserve">
          <source>A trap for &lt;a href=&quot;../object/getownpropertydescriptor&quot;&gt;&lt;code&gt;Object.getOwnPropertyDescriptor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../object/getownpropertydescriptor&quot;&gt; &lt;code&gt;Object.getOwnPropertyDescriptor&lt;/code&gt; &lt;/a&gt;のトラップ。</target>
        </trans-unit>
        <trans-unit id="352d1375fd75c144e78cf196a0f04491e2fe9150" translate="yes" xml:space="preserve">
          <source>A trap for &lt;a href=&quot;../object/getownpropertynames&quot;&gt;&lt;code&gt;Object.getOwnPropertyNames&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../object/getownpropertysymbols&quot;&gt;&lt;code&gt;Object.getOwnPropertySymbols&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../object/getownpropertynames&quot;&gt; &lt;code&gt;Object.getOwnPropertyNames&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../object/getownpropertysymbols&quot;&gt; &lt;code&gt;Object.getOwnPropertySymbols&lt;/code&gt; の&lt;/a&gt;トラップ。</target>
        </trans-unit>
        <trans-unit id="e9758c3b7b5478c4ddefcaaf78160de0dfedefbd" translate="yes" xml:space="preserve">
          <source>A trap for &lt;a href=&quot;../object/getprototypeof&quot;&gt;&lt;code&gt;Object.getPrototypeOf&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../object/getprototypeof&quot;&gt; &lt;code&gt;Object.getPrototypeOf&lt;/code&gt; &lt;/a&gt;のトラップ。</target>
        </trans-unit>
        <trans-unit id="5b1fd4a8eb9d4ddc23aa3162d2bcab35b3c110fa" translate="yes" xml:space="preserve">
          <source>A trap for &lt;a href=&quot;../object/isextensible&quot;&gt;&lt;code&gt;Object.isExtensible&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../object/isextensible&quot;&gt; &lt;code&gt;Object.isExtensible&lt;/code&gt; &lt;/a&gt;のトラップ。</target>
        </trans-unit>
        <trans-unit id="08e4e941d26b8d998800802578dd7417b3ca1c74" translate="yes" xml:space="preserve">
          <source>A trap for &lt;a href=&quot;../object/preventextensions&quot;&gt;&lt;code&gt;Object.preventExtensions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../object/preventextensions&quot;&gt; &lt;code&gt;Object.preventExtensions&lt;/code&gt; &lt;/a&gt;のトラップ。</target>
        </trans-unit>
        <trans-unit id="da25e5e73af05bed88747f5aac3c15754a99faab" translate="yes" xml:space="preserve">
          <source>A trap for &lt;a href=&quot;../object/setprototypeof&quot;&gt;&lt;code&gt;Object.setPrototypeOf&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../object/setprototypeof&quot;&gt; &lt;code&gt;Object.setPrototypeOf&lt;/code&gt; &lt;/a&gt;のトラップ。</target>
        </trans-unit>
        <trans-unit id="8e204fa2387a2c7372bf9ca5e595b8012bbf963d" translate="yes" xml:space="preserve">
          <source>A trap for &lt;a href=&quot;object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;object/defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty&lt;/code&gt; &lt;/a&gt;のトラップ。</target>
        </trans-unit>
        <trans-unit id="a0edc28232e9b68e8c4f19d67b089473bf164015" translate="yes" xml:space="preserve">
          <source>A trap for &lt;a href=&quot;object/getownpropertydescriptor&quot;&gt;&lt;code&gt;Object.getOwnPropertyDescriptor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;object/getownpropertydescriptor&quot;&gt; &lt;code&gt;Object.getOwnPropertyDescriptor&lt;/code&gt; &lt;/a&gt;のトラップ。</target>
        </trans-unit>
        <trans-unit id="27a8eece55c73898d2863967593b02efbf033598" translate="yes" xml:space="preserve">
          <source>A trap for &lt;a href=&quot;object/getownpropertynames&quot;&gt;&lt;code&gt;Object.getOwnPropertyNames&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;object/getownpropertysymbols&quot;&gt;&lt;code&gt;Object.getOwnPropertySymbols&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;object/getownpropertynames&quot;&gt; &lt;code&gt;Object.getOwnPropertyNames&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;object/getownpropertysymbols&quot;&gt; &lt;code&gt;Object.getOwnPropertySymbols&lt;/code&gt; の&lt;/a&gt;トラップ。</target>
        </trans-unit>
        <trans-unit id="9b69cd465eac589a6fdd89e2f9adfcb39e2e948c" translate="yes" xml:space="preserve">
          <source>A trap for &lt;a href=&quot;object/getprototypeof&quot;&gt;&lt;code&gt;Object.getPrototypeOf&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;object/getprototypeof&quot;&gt; &lt;code&gt;Object.getPrototypeOf&lt;/code&gt; &lt;/a&gt;のトラップ。</target>
        </trans-unit>
        <trans-unit id="a380a9832aa75b61c220704b8d533924aa31e11d" translate="yes" xml:space="preserve">
          <source>A trap for &lt;a href=&quot;object/isextensible&quot;&gt;&lt;code&gt;Object.isExtensible&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;object/isextensible&quot;&gt; &lt;code&gt;Object.isExtensible&lt;/code&gt; &lt;/a&gt;のトラップ。</target>
        </trans-unit>
        <trans-unit id="2d4a1dfdb9c96ff3bd17e42c78d835d472faa90d" translate="yes" xml:space="preserve">
          <source>A trap for &lt;a href=&quot;object/preventextensions&quot;&gt;&lt;code&gt;Object.preventExtensions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;object/preventextensions&quot;&gt; &lt;code&gt;Object.preventExtensions&lt;/code&gt; &lt;/a&gt;のトラップ。</target>
        </trans-unit>
        <trans-unit id="3e88181b49d9bf7bab9df8d07b14a75d4bf8ffd7" translate="yes" xml:space="preserve">
          <source>A trap for &lt;a href=&quot;object/setprototypeof&quot;&gt;&lt;code&gt;Object.setPrototypeOf&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;object/setprototypeof&quot;&gt; &lt;code&gt;Object.setPrototypeOf&lt;/code&gt; &lt;/a&gt;のトラップ。</target>
        </trans-unit>
        <trans-unit id="4dd6e535c6f8e139282c480461a1caa98a498a12" translate="yes" xml:space="preserve">
          <source>A trap for a function call.</source>
          <target state="translated">関数呼び出しの罠。</target>
        </trans-unit>
        <trans-unit id="1a2ad834b888b660da429f550b49f77378b9d80a" translate="yes" xml:space="preserve">
          <source>A trap for getting property values.</source>
          <target state="translated">プロパティ値を取得するための罠。</target>
        </trans-unit>
        <trans-unit id="52f6f55d2bd80afee7ddc290daa3ef909f014f36" translate="yes" xml:space="preserve">
          <source>A trap for setting property values.</source>
          <target state="translated">プロパティ値を設定するための罠。</target>
        </trans-unit>
        <trans-unit id="c779c4d34b90d4c6e386ddb236ed9f256bdfd210" translate="yes" xml:space="preserve">
          <source>A trap for the &lt;a href=&quot;../../operators/delete&quot;&gt;&lt;code&gt;delete&lt;/code&gt;&lt;/a&gt; operator.</source>
          <target state="translated">&lt;a href=&quot;../../operators/delete&quot;&gt; &lt;code&gt;delete&lt;/code&gt; &lt;/a&gt;演算子のトラップ。</target>
        </trans-unit>
        <trans-unit id="7728c929fd5bd7fba3e8a74fb6e4692b5d193946" translate="yes" xml:space="preserve">
          <source>A trap for the &lt;a href=&quot;../../operators/in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt; operator.</source>
          <target state="translated">&lt;a href=&quot;../../operators/in&quot;&gt; &lt;code&gt;in&lt;/code&gt; &lt;/a&gt;演算子のトラップ。</target>
        </trans-unit>
        <trans-unit id="98a0e1ae38f5f24bd810829acf85618abf72a845" translate="yes" xml:space="preserve">
          <source>A trap for the &lt;a href=&quot;../../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator.</source>
          <target state="translated">&lt;a href=&quot;../../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt;オペレーターのトラップ。</target>
        </trans-unit>
        <trans-unit id="1febd86af2a203f90a11436c1a18e68c099d707e" translate="yes" xml:space="preserve">
          <source>A trap for the &lt;a href=&quot;../operators/delete&quot;&gt;&lt;code&gt;delete&lt;/code&gt;&lt;/a&gt; operator.</source>
          <target state="translated">&lt;a href=&quot;../operators/delete&quot;&gt; &lt;code&gt;delete&lt;/code&gt; &lt;/a&gt;演算子のトラップ。</target>
        </trans-unit>
        <trans-unit id="7cea200be4a9c2b8f1c9cc9bbcccfda58d1074d3" translate="yes" xml:space="preserve">
          <source>A trap for the &lt;a href=&quot;../operators/in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt; operator.</source>
          <target state="translated">&lt;a href=&quot;../operators/in&quot;&gt; &lt;code&gt;in&lt;/code&gt; &lt;/a&gt;演算子のトラップ。</target>
        </trans-unit>
        <trans-unit id="8654b706fa6b9af0ed7032618303a93a642cf06b" translate="yes" xml:space="preserve">
          <source>A trap for the &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator.</source>
          <target state="translated">&lt;a href=&quot;../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt;オペレーターのトラップ。</target>
        </trans-unit>
        <trans-unit id="a69c5ae1758c60cb2ef6ec31a59400ca878c1428" translate="yes" xml:space="preserve">
          <source>A typical way of creating a subclass is to define the subclass, set its prototype to an instance of the superclass, and then define properties on that instance. This can get awkward especially for getters and setters. Instead, you can use this code to set the prototype:</source>
          <target state="translated">典型的なサブクラスの作成方法は、サブクラスを定義し、そのプロトタイプをスーパークラスのインスタンスに設定し、そのインスタンスにプロパティを定義することです。これは特にゲッターとセッターの場合は厄介です。代わりに、以下のコードを使用してプロトタイプを設定することができます。</target>
        </trans-unit>
        <trans-unit id="6c2991084e6569f2ed88f6e399acf601ae83c1a5" translate="yes" xml:space="preserve">
          <source>A typo in the function name</source>
          <target state="translated">関数名のタイプミス</target>
        </trans-unit>
        <trans-unit id="3d0ce29170ec5349f499b1bce1c4c9e236da391a" translate="yes" xml:space="preserve">
          <source>A unary operation is operation with only one operand.</source>
          <target state="translated">単項演算とは、オペランドが1つしかない演算のことです。</target>
        </trans-unit>
        <trans-unit id="d7669d85b1f450361ac91fc523c430ae2974bb01" translate="yes" xml:space="preserve">
          <source>A use of &lt;code&gt;arguments.callee&lt;/code&gt; with no good alternative</source>
          <target state="translated">良い代替手段のない &lt;code&gt;arguments.callee&lt;/code&gt; の使用</target>
        </trans-unit>
        <trans-unit id="65c6cda8f8472b4358be95653eeaab24da63771b" translate="yes" xml:space="preserve">
          <source>A valid property descriptor object might look like this:</source>
          <target state="translated">有効なプロパティ記述子オブジェクトは次のようになります。</target>
        </trans-unit>
        <trans-unit id="d7d2e3da806cea4b9265271a0e7d9bbe8c61cb87" translate="yes" xml:space="preserve">
          <source>A value has been assigned to an undeclared variable. In other words, there was an assignment without the &lt;code&gt;var&lt;/code&gt; keyword. There are some differences between declared and undeclared variables, which might lead to unexpected results and that's why JavaScript presents an error in strict mode.</source>
          <target state="translated">宣言されていない変数に値が割り当てられました。つまり、 &lt;code&gt;var&lt;/code&gt; キーワードのない割り当てがありました。宣言された変数と宣言されていない変数の間にはいくつかの違いがあり、予期しない結果が生じる可能性があります。そのため、JavaScriptは厳密モードでエラーを表示します。</target>
        </trans-unit>
        <trans-unit id="c3aa9c025eda639e03b29c469fd28461ee4a9efc" translate="yes" xml:space="preserve">
          <source>A value has been assigned to an undeclared variable. In other words, there was an assignment without the var keyword. There are some differences between declared and undeclared variables, which might lead to unexpected results and that's why JavaScript presents an error in strict mode.</source>
          <target state="translated">値が宣言されていない変数に代入されました。言い換えれば、var キーワードなしの代入があったということです。宣言された変数と未宣言の変数にはいくつかの違いがあり、それが予期せぬ結果をもたらす可能性があり、それがJavaScriptが厳密モードでエラーを提示する理由です。</target>
        </trans-unit>
        <trans-unit id="7aa2030027d9d974ffa76da27911686f24263fee" translate="yes" xml:space="preserve">
          <source>A value in the array if an element passes the test; otherwise, &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">要素がテストに合格した場合の配列の値。それ以外の場合は&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="ac2916a2d6df864428a10d5be6afc4ef8217277e" translate="yes" xml:space="preserve">
          <source>A value passed as the radix argument is coerced to a Number (if necessary), then if the value is 0, &lt;code&gt;NaN&lt;/code&gt; or &lt;code&gt;Infinity&lt;/code&gt; (undefined is coerced to &lt;code&gt;NaN&lt;/code&gt;), JavaScript assumes the following:</source>
          <target state="translated">基数引数として渡された値は（必要に応じて）数値に強制され、値が0、 &lt;code&gt;NaN&lt;/code&gt; 、または &lt;code&gt;Infinity&lt;/code&gt; （未定義は &lt;code&gt;NaN&lt;/code&gt; に強制されます）の場合、JavaScriptは次のことを想定します。</target>
        </trans-unit>
        <trans-unit id="a5c3366efd0c881d31ada8bb6cf411b81a4a7292" translate="yes" xml:space="preserve">
          <source>A value to use as &lt;code&gt;this&lt;/code&gt; when executing &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; 実行するときに &lt;code&gt;this&lt;/code&gt; として使用する値。</target>
        </trans-unit>
        <trans-unit id="bf01a3693f58fc6267969057c200f7e81b104403" translate="yes" xml:space="preserve">
          <source>A value to use as the first argument to the first call of the &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt;. If no &lt;code&gt;&lt;var&gt;initialValue&lt;/var&gt;&lt;/code&gt; is supplied, the first element in the array will be used as the initial &lt;code&gt;&lt;var&gt;accumulator&lt;/var&gt;&lt;/code&gt; value and skipped as &lt;code&gt;&lt;var&gt;currentValue&lt;/var&gt;&lt;/code&gt;. Calling &lt;code&gt;reduce()&lt;/code&gt; on an empty array without an &lt;code&gt;&lt;var&gt;initialValue&lt;/var&gt;&lt;/code&gt; will throw a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; 最初の呼び出しの最初の引数として使用する値。 &lt;code&gt;&lt;var&gt;initialValue&lt;/var&gt;&lt;/code&gt; が指定されていない場合、配列の最初の要素が初期 &lt;code&gt;&lt;var&gt;accumulator&lt;/var&gt;&lt;/code&gt; 値として使用され、 &lt;code&gt;&lt;var&gt;currentValue&lt;/var&gt;&lt;/code&gt; としてスキップされます。 &lt;code&gt;&lt;var&gt;initialValue&lt;/var&gt;&lt;/code&gt; を指定せずに空の配列で &lt;code&gt;reduce()&lt;/code&gt; を呼び出すと、&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="0a283d93356f400d76dfe3bca82f82577b120c85" translate="yes" xml:space="preserve">
          <source>A variable can be assigned a default, in the case that the value unpacked from the array is &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">配列からアンパックされた値が &lt;code&gt;undefined&lt;/code&gt; である場合、変数にデフォルトを割り当てることができます。</target>
        </trans-unit>
        <trans-unit id="90b0625816e4bdec40f6e6bc2f1aa97d5d2e44a9" translate="yes" xml:space="preserve">
          <source>A variable can be assigned a default, in the case that the value unpacked from the object is &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">オブジェクトからアンパックされた値が &lt;code&gt;undefined&lt;/code&gt; である場合、変数にデフォルトを割り当てることができます。</target>
        </trans-unit>
        <trans-unit id="de639cf85e7f18e2d70873594c11082ac458b0cb" translate="yes" xml:space="preserve">
          <source>A variable can be assigned its value via destructuring separate from the variable's declaration.</source>
          <target state="translated">変数の宣言とは別に、デストラクチャリングによって変数の値を代入することができます。</target>
        </trans-unit>
        <trans-unit id="cd63eedf5f9a239ec856355af38580e43b4e42b7" translate="yes" xml:space="preserve">
          <source>A variable can be assigned its value with destructuring separate from its declaration.</source>
          <target state="translated">変数には、宣言とは別にデストラクチャリングで値を代入することができます。</target>
        </trans-unit>
        <trans-unit id="5491aecbb4c5aaf727cda68822d865466815a1b8" translate="yes" xml:space="preserve">
          <source>A variable is missing a name. This is likely due to a syntax error in your code. Probably a comma is wrong somewhere or you struggled with coming up with a name. Totally understandable! Naming things is so hard.</source>
          <target state="translated">変数に名前がありません。これは、コードの構文エラーが原因である可能性が高いです。おそらくカンマがどこかで間違っているか、名前をつけるのに苦労しているのでしょう。まったくもって理解できます。物事に名前をつけるのはとても難しいです。</target>
        </trans-unit>
        <trans-unit id="1b060c9344e9b5bc650248ac5ff1dfc17c0e70ac" translate="yes" xml:space="preserve">
          <source>A variable needs to be available in the current context of execution. Variables defined inside a &lt;a href=&quot;../functions&quot;&gt;function&lt;/a&gt; cannot be accessed from anywhere outside the function, because the variable is defined only in the scope of the function</source>
          <target state="translated">変数は、実行の現在のコンテキストで使用できる必要があります。&lt;a href=&quot;../functions&quot;&gt;関数&lt;/a&gt;内で定義された変数は、関数のスコープ内でのみ定義されているため、関数の外部からはアクセスできません。</target>
        </trans-unit>
        <trans-unit id="2f3ee6328d3ac70130def5023584d42630445e2b" translate="yes" xml:space="preserve">
          <source>A variable that has not been assigned a value is of type &lt;code&gt;undefined&lt;/code&gt;. A method or statement also returns &lt;code&gt;undefined&lt;/code&gt; if the variable that is being evaluated does not have an assigned value. A function returns &lt;code&gt;undefined&lt;/code&gt; if a value was not &lt;a href=&quot;../statements/return&quot;&gt;&lt;code&gt;returned&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">値が割り当てられていない変数のタイプは &lt;code&gt;undefined&lt;/code&gt; です。評価されている変数に値が割り当てられていない場合も、メソッドまたはステートメントは &lt;code&gt;undefined&lt;/code&gt; 返します。関数が返すは &lt;code&gt;undefined&lt;/code&gt; 値がされなかった場合は&lt;a href=&quot;../statements/return&quot;&gt; &lt;code&gt;returned&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1a701b5ba9e24b2d5d6ecd8f6bb4daf2b6958bb6" translate="yes" xml:space="preserve">
          <source>A variable that has not been assigned a value is of type undefined. A method or statement also returns &lt;code&gt;undefined&lt;/code&gt; if the variable that is being evaluated does not have an assigned value. A function returns &lt;code&gt;undefined&lt;/code&gt; if a value was not &lt;a href=&quot;../statements/return&quot;&gt;&lt;code&gt;returned&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">値が割り当てられていない変数のタイプは未定義です。評価される変数に値が割り当てられていない場合も、メソッドまたはステートメントは &lt;code&gt;undefined&lt;/code&gt; を返します。値が&lt;a href=&quot;../statements/return&quot;&gt; &lt;code&gt;returned&lt;/code&gt; &lt;/a&gt;れなかった場合、関数は &lt;code&gt;undefined&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="c2e71e7b83c180f05766211460b6c2813e8f3c2c" translate="yes" xml:space="preserve">
          <source>A warning that a &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; occurred. JavaScript execution won't be halted.</source>
          <target state="translated">&lt;a href=&quot;../global_objects/syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;が発生したという警告。JavaScriptの実行は停止されません。</target>
        </trans-unit>
        <trans-unit id="99744caee1d8cf688028147e8f13bf4215490db3" translate="yes" xml:space="preserve">
          <source>A warning. JavaScript execution won't be halted.</source>
          <target state="translated">警告です。JavaScriptの実行は停止しません。</target>
        </trans-unit>
        <trans-unit id="e5c736c5bbec75ae99418480a199602066f656a9" translate="yes" xml:space="preserve">
          <source>A wasm module is comprised of a sequence of &lt;strong&gt;sections&lt;/strong&gt;. Most of these sections are fully specified and validated by the wasm spec, but modules can also contain &lt;strong&gt;custom sections&lt;/strong&gt; that are ignored and skipped over during validation. (Read &lt;a href=&quot;https://github.com/WebAssembly/design/blob/master/BinaryEncoding.md#high-level-structure&quot;&gt;High level structure&lt;/a&gt; for information on section structures, and how normal sections (&quot;known sections&quot;) and custom sections are distinguished.)</source>
          <target state="translated">wasmモジュールは、一連の&lt;strong&gt;セクションで&lt;/strong&gt;構成され&lt;strong&gt;ます&lt;/strong&gt;。これらのセクションのほとんどはwasm仕様によって完全に指定および検証されますが、モジュールは、検証中に無視されてスキップされる&lt;strong&gt;カスタムセクション&lt;/strong&gt;を含むこともできます。（セクション構造、および通常のセクション（「既知のセクション」）とカスタムセクションの区別方法については、&lt;a href=&quot;https://github.com/WebAssembly/design/blob/master/BinaryEncoding.md#high-level-structure&quot;&gt;高レベルの構造&lt;/a&gt;を参照してください。）</target>
        </trans-unit>
        <trans-unit id="4aa4697b07a8611e189489ab6199d641cd76a747" translate="yes" xml:space="preserve">
          <source>A writing thread stores a new value and notifies the waiting thread once it has written:</source>
          <target state="translated">書き込みスレッドは新しい値を格納し、書き込みが完了すると待機スレッドに通知します。</target>
        </trans-unit>
        <trans-unit id="4cbabdffbd1bab0cae3fc1a0019839f4544586ac" translate="yes" xml:space="preserve">
          <source>A writing thread stores a new value and wakes up the waiting thread once it has written:</source>
          <target state="translated">書き込みスレッドは新しい値を格納し、書き込みが完了すると待機スレッドをウェイクアップします。</target>
        </trans-unit>
        <trans-unit id="1f654f3786d387f1f667073d19e8d50ab6c1f52e" translate="yes" xml:space="preserve">
          <source>A zero arguments function that returns an object with at least the following two properties:</source>
          <target state="translated">少なくとも以下の2つのプロパティを持つオブジェクトを返すゼロ引数関数。</target>
        </trans-unit>
        <trans-unit id="5d928152252c91fba65904f459694ecdebac2687" translate="yes" xml:space="preserve">
          <source>A zero arguments function that returns an object, conforming to the &lt;a href=&quot;#The_iterator_protocol&quot;&gt;iterator protocol&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#The_iterator_protocol&quot;&gt;反復子プロトコルに&lt;/a&gt;準拠したオブジェクトを返すゼロ引数関数。</target>
        </trans-unit>
        <trans-unit id="31d51d7b6b07ebc8651c5cee4e418b342e414a03" translate="yes" xml:space="preserve">
          <source>A zero-argument function that returns an object with at least the following two properties:</source>
          <target state="translated">少なくとも以下の2つのプロパティを持つオブジェクトを返すゼロ引数関数。</target>
        </trans-unit>
        <trans-unit id="8d2193ff2c773755f90ea7ce18c81208b3504e45" translate="yes" xml:space="preserve">
          <source>A zero-argument function that returns an object, conforming to the &lt;a href=&quot;#The_iterator_protocol&quot;&gt;iterator protocol&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#The_iterator_protocol&quot;&gt;イテレータプロトコルに&lt;/a&gt;準拠して、オブジェクトを返す引数なしの関数。</target>
        </trans-unit>
        <trans-unit id="558d64bb7cb05ef658d473a1cee0daf811ae3225" translate="yes" xml:space="preserve">
          <source>A zero-based integer representing the month of the year offset from the start of the year. So, 0 represents January, 11 represents December, -1 represents December of the previous year, and 12 represents January of the following year.</source>
          <target state="translated">年の始まりからオフセットした年の月を表すゼロベースの整数。つまり、0は1月、11は12月、-1は前年の12月、12は翌年の1月を表します。</target>
        </trans-unit>
        <trans-unit id="a75dcd16586fb5f6c8c69b71a7481aad1b6a67e8" translate="yes" xml:space="preserve">
          <source>A&lt;strong&gt; BF&lt;/strong&gt; has the following internal properties:</source>
          <target state="translated">&lt;strong&gt;BFは&lt;/strong&gt;、以下の内部プロパティがあります。</target>
        </trans-unit>
        <trans-unit id="49878dce2f16a74d7033987811c35e5b95550873" translate="yes" xml:space="preserve">
          <source>A&lt;strong&gt; block statement&lt;/strong&gt; (or &lt;strong&gt;compound statement&lt;/strong&gt; in other languages) is used to group zero or more statements. The block is delimited by a pair of curly brackets and may optionally be &lt;a href=&quot;label&quot;&gt;&lt;code&gt;labelled&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;strong&gt;ブロック文&lt;/strong&gt;（または&lt;strong&gt;化合物ステートメント&lt;/strong&gt;他の言語）は、グループゼロ個以上のステートメントに使用されます。ブロックは中括弧のペアで区切られ、オプションで&lt;a href=&quot;label&quot;&gt; &lt;code&gt;labelled&lt;/code&gt; &lt;/a&gt;ことができます。</target>
        </trans-unit>
        <trans-unit id="ee015445526035af29c93b90202949b4587400d7" translate="yes" xml:space="preserve">
          <source>APIs accepting &lt;code&gt;SharedArrayBuffer&lt;/code&gt; objects</source>
          <target state="translated">&lt;code&gt;SharedArrayBuffer&lt;/code&gt; オブジェクトを受け入れるAPI</target>
        </trans-unit>
        <trans-unit id="d593ea6479d4e24d609e9dc69d0159bdcda5a84f" translate="yes" xml:space="preserve">
          <source>APIs which use SharedArrayBuffer objects</source>
          <target state="translated">SharedArrayBuffer オブジェクトを使用する API</target>
        </trans-unit>
        <trans-unit id="cd437865cbac7655f8b86519aea764f378093804" translate="yes" xml:space="preserve">
          <source>Abbreviation</source>
          <target state="translated">Abbreviation</target>
        </trans-unit>
        <trans-unit id="6b21fb791ac05170893860c248401cd24a59b732" translate="yes" xml:space="preserve">
          <source>About</source>
          <target state="translated">About</target>
        </trans-unit>
        <trans-unit id="7886ac36df688ed13a786b2bb5bd2ba298c50a1a" translate="yes" xml:space="preserve">
          <source>About functions</source>
          <target state="translated">機能について</target>
        </trans-unit>
        <trans-unit id="1b83b79a48463cd6711e8e01351644b0ad5e88de" translate="yes" xml:space="preserve">
          <source>About the stability of the algorithm used by V8 engine</source>
          <target state="translated">V8エンジンで使用するアルゴリズムの安定性について</target>
        </trans-unit>
        <trans-unit id="0106715cf835b611d90eb91937826ff982f2dcf2" translate="yes" xml:space="preserve">
          <source>Abstract subclasses or &lt;em&gt;mix-ins&lt;/em&gt; are templates for classes. An ECMAScript class can only have a single superclass, so multiple inheritance from tooling classes, for example, is not possible. The functionality must be provided by the superclass.</source>
          <target state="translated">抽象サブクラスまたは&lt;em&gt;ミックスイン&lt;/em&gt;は、クラスのテンプレートです。ECMAScriptクラスは単一のスーパークラスしか持つことができないため、たとえばツールクラスからの複数の継承は不可能です。機能はスーパークラスによって提供される必要があります。</target>
        </trans-unit>
        <trans-unit id="3937ab6a9745e6450cbda489364a520653416591" translate="yes" xml:space="preserve">
          <source>Accepts the same parameters as the longest form of the constructor (i.e. 2 to 7) and returns the number of milliseconds since January 1, 1970, 00:00:00 UTC, with leap seconds ignored.</source>
          <target state="translated">コンストラクタの最長形式 (2 から 7)と同じパラメータを受け取り、1970 年 1 月 1 日 00:00:00 UTC からのミリ秒数を返します。</target>
        </trans-unit>
        <trans-unit id="64c2fdaf0d7d7c4b1a130edea5168f8bf4acc6fd" translate="yes" xml:space="preserve">
          <source>Accessing &lt;code&gt;arguments.callee&lt;/code&gt;, &lt;code&gt;arguments.caller&lt;/code&gt;, &lt;code&gt;anyFunction.caller&lt;/code&gt;, or &lt;code&gt;anyFunction.arguments&lt;/code&gt; throws an error in strict mode. The only legitimate use case would be to reuse a function as in:</source>
          <target state="translated">&lt;code&gt;arguments.callee&lt;/code&gt; 、 &lt;code&gt;arguments.caller&lt;/code&gt; 、 &lt;code&gt;anyFunction.caller&lt;/code&gt; 、または &lt;code&gt;anyFunction.arguments&lt;/code&gt; にアクセスすると、strictモードでエラーがスローされます。正当なユースケースは、次のように関数を再利用することだけです。</target>
        </trans-unit>
        <trans-unit id="824a6b7e82da608ad646aa497bfb65acd8b51615" translate="yes" xml:space="preserve">
          <source>Accessing array elements</source>
          <target state="translated">配列要素へのアクセス</target>
        </trans-unit>
        <trans-unit id="f4fd2f3b1b3cdcb020eafc4382f368f8a830f384" translate="yes" xml:space="preserve">
          <source>Accessing member properties</source>
          <target state="translated">メンバーのプロパティへのアクセス</target>
        </trans-unit>
        <trans-unit id="90d1447dd9b06b8c521f2215a9bb4355c02cffef" translate="yes" xml:space="preserve">
          <source>Accessing properties</source>
          <target state="translated">プロパティへのアクセス</target>
        </trans-unit>
        <trans-unit id="6867f0cae96b79e846c62315ef900c88de7d2a6e" translate="yes" xml:space="preserve">
          <source>Accessor function &amp;mdash; gets a reference stored at a given index.</source>
          <target state="translated">アクセサ関数&amp;mdash;指定されたインデックスに格納されている参照を取得します。</target>
        </trans-unit>
        <trans-unit id="ade5bed3fb09f083a64d835c6b9ecf57df10652c" translate="yes" xml:space="preserve">
          <source>Accessor function &amp;mdash; gets the element stored at a given index.</source>
          <target state="translated">アクセサ関数&amp;mdash;指定されたインデックスに格納されている要素を取得します。</target>
        </trans-unit>
        <trans-unit id="de8cfb885ac1a5a0e5b7e1f0d2484547278be5e3" translate="yes" xml:space="preserve">
          <source>Accessor methods</source>
          <target state="translated">アクセス方法</target>
        </trans-unit>
        <trans-unit id="ff706ee1c864bc180515bbb295d99a86fce07e4c" translate="yes" xml:space="preserve">
          <source>Accidental Keys</source>
          <target state="translated">アクシデンタルキー</target>
        </trans-unit>
        <trans-unit id="ef6278157dee40276c5c781db7fadee935415924" translate="yes" xml:space="preserve">
          <source>According to this &lt;a href=&quot;https://jsperf.com/concat-vs-plus-vs-join&quot;&gt;performance test&lt;/a&gt;, the &lt;a href=&quot;../../operators/assignment_operators&quot;&gt;assignment operators&lt;/a&gt; are several times faster.</source>
          <target state="translated">この&lt;a href=&quot;https://jsperf.com/concat-vs-plus-vs-join&quot;&gt;パフォーマンステストに&lt;/a&gt;よると、&lt;a href=&quot;../../operators/assignment_operators&quot;&gt;代入演算子&lt;/a&gt;は数倍高速です。</target>
        </trans-unit>
        <trans-unit id="d286bd60d1641da1c7062798cab10270ede5e970" translate="yes" xml:space="preserve">
          <source>Accumulator (&lt;code&gt;&lt;var&gt;acc&lt;/var&gt;&lt;/code&gt;)</source>
          <target state="translated">アキュムレータ（ &lt;code&gt;&lt;var&gt;acc&lt;/var&gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="50877128d69d59f89659d1e25a6b10ddb9053f08" translate="yes" xml:space="preserve">
          <source>Accumulator (acc)</source>
          <target state="translated">アキュムレータ(acc)</target>
        </trans-unit>
        <trans-unit id="62e19ea87b1293ece74c3e4fee0220843ffdab91" translate="yes" xml:space="preserve">
          <source>Add the missing quote for &lt;code&gt;&lt;strong&gt;'&lt;/strong&gt;#333'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;'&lt;/strong&gt;#333'&lt;/code&gt; の欠落した引用を追加します。</target>
        </trans-unit>
        <trans-unit id="be466766a475ae99956857e8ded4b641203d4b64" translate="yes" xml:space="preserve">
          <source>Added &lt;a href=&quot;https://github.com/rwaldron/exponentiation-operator&quot;&gt;Exponentiation operator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/rwaldron/exponentiation-operator&quot;&gt;指数演算子を&lt;/a&gt;追加しました。</target>
        </trans-unit>
        <trans-unit id="081033e37447cd5c8275074df2111507c50bba4d" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;flags&lt;/code&gt;, &lt;code&gt;sticky&lt;/code&gt; and &lt;code&gt;unicode&lt;/code&gt; properties.</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; 、 &lt;code&gt;sticky&lt;/code&gt; 、および &lt;code&gt;unicode&lt;/code&gt; プロパティを追加しました。</target>
        </trans-unit>
        <trans-unit id="03edf84fdf4ff936001433aef81408483109d06e" translate="yes" xml:space="preserve">
          <source>Added Intl.getCanonicalLocales in the 4th edition.</source>
          <target state="translated">第4版にIntl.getCanonicalLocalesを追加しました。</target>
        </trans-unit>
        <trans-unit id="6198579f91f6ebf0e39f9c05ac3c0fdd323f6f46" translate="yes" xml:space="preserve">
          <source>Added Object.assign, Object.getOwnPropertySymbols, Object.setPrototypeOf, Object.is</source>
          <target state="translated">Object.assign、Object.getOwnPropertySymbols、Object.setPrototypeOf、Object.isを追加しました。</target>
        </trans-unit>
        <trans-unit id="565c28277f8ab4aa36c6befbda0b5ffe98901ba6" translate="yes" xml:space="preserve">
          <source>Added Object.entries, Object.values and Object.getOwnPropertyDescriptors.</source>
          <target state="translated">Object.entry、Object.value、Object.getOwnPropertyDescriptorsを追加しました。</target>
        </trans-unit>
        <trans-unit id="acc641a6a63fdaa9095940bfc4092e77317cd4de" translate="yes" xml:space="preserve">
          <source>Added computed property names.</source>
          <target state="translated">計算されたプロパティ名を追加しました。</target>
        </trans-unit>
        <trans-unit id="04ac351a37ff69d1126505d24be9022c7f9095fa" translate="yes" xml:space="preserve">
          <source>Added definition for escaping behavior and &quot;(?:)&quot; for empty regular expressions.</source>
          <target state="translated">エスケープ動作の定義と、空の正規表現に対する&quot;(?:)の定義を追加しました。</target>
        </trans-unit>
        <trans-unit id="8fe86aba93bfcf5da4cc9423895c7511abe20830" translate="yes" xml:space="preserve">
          <source>Added more specific requirements for the string representation.</source>
          <target state="translated">文字列表現について、より具体的な要件を追加しました。</target>
        </trans-unit>
        <trans-unit id="e47e350e79384f15ad0903691d895fcc672cc4aa" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;copyWithin()&lt;/code&gt;, &lt;code&gt;fill()&lt;/code&gt;, &lt;code&gt;entries()&lt;/code&gt;, &lt;code&gt;keys()&lt;/code&gt;, &lt;code&gt;values()&lt;/code&gt;, &lt;code&gt;find()&lt;/code&gt;, &lt;code&gt;findIndex()&lt;/code&gt; methods.</source>
          <target state="translated">&lt;code&gt;copyWithin()&lt;/code&gt; 、 &lt;code&gt;fill()&lt;/code&gt; 、 &lt;code&gt;entries()&lt;/code&gt; 、 &lt;code&gt;keys()&lt;/code&gt; 、 &lt;code&gt;values()&lt;/code&gt; 、 &lt;code&gt;find()&lt;/code&gt; 、 &lt;code&gt;findIndex()&lt;/code&gt; メソッドを追加しました。</target>
        </trans-unit>
        <trans-unit id="ff7e52004e25fccb0871c726ae07f6e3411d165c" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;includes()&lt;/code&gt; method.</source>
          <target state="translated">include &lt;code&gt;includes()&lt;/code&gt; メソッドが追加されました。</target>
        </trans-unit>
        <trans-unit id="a699dee10b3262c22ca39a65e377e4bbfd7c4bff" translate="yes" xml:space="preserve">
          <source>Added: Binary and Octal Numeric literals, Unicode code point escapes, Templates</source>
          <target state="translated">追加:2進数と8進数リテラル、Unicodeコードポイントエスケープ、テンプレート</target>
        </trans-unit>
        <trans-unit id="8ddce2a6ecdbbe64c867534f006a7dc2eb9c5275" translate="yes" xml:space="preserve">
          <source>Adding a constant value</source>
          <target state="translated">定数値の追加</target>
        </trans-unit>
        <trans-unit id="6195706b26c4a1059f6d8d57886c26fe734c5c7a" translate="yes" xml:space="preserve">
          <source>Adding a new property to the object</source>
          <target state="translated">オブジェクトに新しいプロパティを追加する</target>
        </trans-unit>
        <trans-unit id="5e011f6d2c921b5a7434b91375a3527384e167c0" translate="yes" xml:space="preserve">
          <source>Adding elements to an array</source>
          <target state="translated">配列に要素を追加する</target>
        </trans-unit>
        <trans-unit id="5af2897e15395736a3355d169105e862aa7d39a4" translate="yes" xml:space="preserve">
          <source>Adding new properties to a non-extensible objects</source>
          <target state="translated">拡張性のないオブジェクトに新しいプロパティを追加する</target>
        </trans-unit>
        <trans-unit id="28d00bdf6d557f92fe07f66cf6334c2ed6adfdd5" translate="yes" xml:space="preserve">
          <source>Adding properties and default values</source>
          <target state="translated">プロパティとデフォルト値の追加</target>
        </trans-unit>
        <trans-unit id="3bebabe6f8df15e6124145d881a13fe674a1c2b5" translate="yes" xml:space="preserve">
          <source>Adding the missing object-method by using the standard-objectas new object's prototype does not work either:</source>
          <target state="translated">標準オブジェクトの新しいオブジェクトのプロトタイプを使用して、欠落しているオブジェクトメソッドを追加しても動作しません。</target>
        </trans-unit>
        <trans-unit id="5a44cd7495b7d1e4d2ae6a89ccde2d33b55c69d0" translate="yes" xml:space="preserve">
          <source>Adding the missing object-method directly from the standard-object does NOT work:</source>
          <target state="translated">欠けているobject-methodを標準オブジェクトから直接追加してもうまくいきません。</target>
        </trans-unit>
        <trans-unit id="d0fedff1bfb8c8c51e933f04bb5e7ca7abe77aa1" translate="yes" xml:space="preserve">
          <source>Adding the missing object-method directly to new object's &quot;prototype&quot; does not work either, since new object does not have a real prototype (which is really the cause of ALL these problems) and one cannot be &lt;strong&gt;directly&lt;/strong&gt; added:</source>
          <target state="translated">欠落しているオブジェクトメソッドを新しいオブジェクトの「プロトタイプ」に直接追加しても機能しません。新しいオブジェクトには実際のプロトタイプがなく（これが実際にこれらすべての問題の原因です）、&lt;strong&gt;直接&lt;/strong&gt;追加することはできません。</target>
        </trans-unit>
        <trans-unit id="f106b66858d059caf64941907db1b4514400913b" translate="yes" xml:space="preserve">
          <source>Adding the missing object-method directly to new object's &quot;prototype&quot; does not work either, since the new object does not have a real prototype (which is really the cause of ALL these problems) and one cannot be &lt;strong&gt;directly&lt;/strong&gt; added:</source>
          <target state="translated">新しいオブジェクトには実際のプロトタイプがなく（これがこれらすべての問題の実際の原因です）、&lt;strong&gt;直接&lt;/strong&gt;追加できないため、欠落しているobject-methodを新しいオブジェクトの「プロトタイプ」に&lt;strong&gt;直接&lt;/strong&gt;追加することもできません。</target>
        </trans-unit>
        <trans-unit id="8e8428e85c661f03dd33db8f12b20a010ab5be5e" translate="yes" xml:space="preserve">
          <source>Addition</source>
          <target state="translated">Addition</target>
        </trans-unit>
        <trans-unit id="2b3085ab4111799609b3d1b2ae064d441e5dc2b4" translate="yes" xml:space="preserve">
          <source>Addition (+)</source>
          <target state="translated">追加 (+)</target>
        </trans-unit>
        <trans-unit id="b06ee1a3cd7c4bb384bc0c22bec9a026b58008c8" translate="yes" xml:space="preserve">
          <source>Addition (&lt;code&gt;+&lt;/code&gt;)</source>
          <target state="translated">加算（ &lt;code&gt;+&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="c8217392646c4b940c031f95cbb65a4bfa731556" translate="yes" xml:space="preserve">
          <source>Addition assignment</source>
          <target state="translated">追加課題</target>
        </trans-unit>
        <trans-unit id="2197493642f65b3bdf38cf7c3658b6188942d641" translate="yes" xml:space="preserve">
          <source>Addition assignment (&lt;code&gt;x += y&lt;/code&gt;)</source>
          <target state="translated">加算割り当て（ &lt;code&gt;x += y&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="7cd34bf7acae990dca0b859d97d34f0f52815b8c" translate="yes" xml:space="preserve">
          <source>Addition assignment.</source>
          <target state="translated">追加課題。</target>
        </trans-unit>
        <trans-unit id="f74e0ac9ed8d7f7a1030f46628e0a04f3905aadc" translate="yes" xml:space="preserve">
          <source>Addition operator.</source>
          <target state="translated">加算演算子。</target>
        </trans-unit>
        <trans-unit id="f7dbbdb06bc5b7af48f53c6973901edba4fed30f" translate="yes" xml:space="preserve">
          <source>Additional &lt;code&gt;Object.defineProperty&lt;/code&gt; examples</source>
          <target state="translated">追加の &lt;code&gt;Object.defineProperty&lt;/code&gt; の例</target>
        </trans-unit>
        <trans-unit id="911a0b354b810ade1b41221cd419095a4767144e" translate="yes" xml:space="preserve">
          <source>Additional information</source>
          <target state="translated">追加情報</target>
        </trans-unit>
        <trans-unit id="b8fa8f396968cf07c534b5548f1985c9e3971ccb" translate="yes" xml:space="preserve">
          <source>Additional properties</source>
          <target state="translated">その他の物件</target>
        </trans-unit>
        <trans-unit id="be908ec79718378d45598abccb61f8210ba488f3" translate="yes" xml:space="preserve">
          <source>Additional reference pages</source>
          <target state="translated">追加の参考ページ</target>
        </trans-unit>
        <trans-unit id="5dcec27d93fa520d335354add2ea3952d790294b" translate="yes" xml:space="preserve">
          <source>Additionally, modern javascript interpreters convert javascript to machine code. This means that any concept of variable naming gets obliterated. Thus, any use of &lt;code&gt;eval()&lt;/code&gt; will force the browser to do long expensive variable name lookups to figure out where the variable exists in the machine code and set its value. Additonally, new things can be introduced to that variable through &lt;code&gt;eval()&lt;/code&gt; such as changing the type of that variable, forcing the browser to re-evaluate all of the generated machine code to compensate.</source>
          <target state="translated">さらに、最新のjavascriptインタープリターは、javascriptをマシンコードに変換します。これは、変数の命名の概念がすべて消滅することを意味します。したがって、 &lt;code&gt;eval()&lt;/code&gt; を使用すると、ブラウザは、マシンコード内のどこに変数が存在するかを把握し、その値を設定するために、長くて費用のかかる変数名のルックアップを実行する必要があります。さらに、 &lt;code&gt;eval()&lt;/code&gt; を介して、その変数のタイプを変更したり、ブラウザーに生成されたすべてのマシンコードを再評価させて補正したりするなど、新しいことをその変数に導入できます。</target>
        </trans-unit>
        <trans-unit id="852c24fb4a79414daaa05219e1717dabb5052630" translate="yes" xml:space="preserve">
          <source>Additionally, modern javascript interpreters convert javascript to machine code. This means that any concept of variable naming gets obliterated. Thus, any use of eval will force the browser to do long expensive variable name lookups to figure out where the variable exists in the machine code and set it's value. Additonally, new things can be introduced to that variable through &lt;code&gt;eval()&lt;/code&gt; such as changing the type of that variable, forcing the browser to reevaluate all of the generated machine code to compensate. However, there (thankfully) exists a very good alternative to eval: simply using &lt;a href=&quot;function&quot;&gt;window.Function&lt;/a&gt;. As an example of how you convert code using evil &lt;code&gt;eval()&lt;/code&gt; to using &lt;code&gt;Function&lt;/code&gt;&lt;code&gt;()&lt;/code&gt;, see below.</source>
          <target state="translated">さらに、最新のJavaScriptインタープリターはJavaScriptをマシンコードに変換します。これは、変数の命名の概念がすべてなくなることを意味します。したがって、evalを使用すると、ブラウザーは負荷の高い変数名のルックアップを実行して、変数がマシンコードのどこに存在するかを突き止め、その値を設定します。さらに、 &lt;code&gt;eval()&lt;/code&gt; を使用して、変数の型を変更したり、ブラウザーに生成されたすべてのマシンコードを再評価して補正したりするなど、新しい変数を変数に導入できます。ただし、（ありがたいことに）evalの非常に優れた代替手段が存在し&lt;a href=&quot;function&quot;&gt;ます&lt;/a&gt;。単にwindow.Functionを使用することです。 evil &lt;code&gt;eval()&lt;/code&gt; を使用してコードを &lt;code&gt;Function&lt;/code&gt; &lt;code&gt;()&lt;/code&gt; に変換する方法の例として、以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="b343b887d33923ffb478bdc28647c9bbddcca185" translate="yes" xml:space="preserve">
          <source>Additionally, some array methods cannot find &lt;code&gt;NaN&lt;/code&gt;, while others can.</source>
          <target state="translated">さらに、一部の配列メソッドは &lt;code&gt;NaN&lt;/code&gt; を見つけることができませんが、他のメソッドは見つけることができます。</target>
        </trans-unit>
        <trans-unit id="e8053ee0e50e553070719c314d845c016311d928" translate="yes" xml:space="preserve">
          <source>Additionally, the literals &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt;, and &lt;code&gt;false&lt;/code&gt; cannot be used as identifiers in ECMAScript.</source>
          <target state="translated">さらに、リテラル &lt;code&gt;null&lt;/code&gt; 、 &lt;code&gt;true&lt;/code&gt; 、および &lt;code&gt;false&lt;/code&gt; は、ECMAScriptの識別子として使用できません。</target>
        </trans-unit>
        <trans-unit id="fcbcb3a77e9537f438a0efbbd0e5cbe719ffc2a1" translate="yes" xml:space="preserve">
          <source>Additions to the ECMAScript core for language-sensitive functionalities.</source>
          <target state="translated">言語に依存した機能のためのECMAScriptコアへの追加。</target>
        </trans-unit>
        <trans-unit id="4759351ba4b9fbdd878a8502549bdde6e6923394" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;===&lt;/code&gt; and &lt;code&gt;!==&lt;/code&gt; operators. Implemented in JavaScript 1.3</source>
          <target state="translated">&lt;code&gt;===&lt;/code&gt; および &lt;code&gt;!==&lt;/code&gt; 演算子を追加します。JavaScript 1.3で実装</target>
        </trans-unit>
        <trans-unit id="5ad7711e1148d74b0574ef7c2c37d9dd45ad4aaf" translate="yes" xml:space="preserve">
          <source>Adds a watchpoint to a property of the object.</source>
          <target state="translated">オブジェクトのプロパティにウォッチポイントを追加します。</target>
        </trans-unit>
        <trans-unit id="657731d749e2d6a9de60168f33a23f9ddd368b65" translate="yes" xml:space="preserve">
          <source>Adds and/or removes elements from an array.</source>
          <target state="translated">配列の要素を追加または削除します.</target>
        </trans-unit>
        <trans-unit id="a18c0515b1e699cb7c620dcd2adef158b3ef3b8b" translate="yes" xml:space="preserve">
          <source>Adds one or more elements to the end of an array and returns the new length of the array.</source>
          <target state="translated">配列の末尾に1つ以上の要素を追加し、配列の新しい長さを返します。</target>
        </trans-unit>
        <trans-unit id="e43d90febf48d3becf77da329c384b1fec1f355d" translate="yes" xml:space="preserve">
          <source>Adds one or more elements to the end of an array, and returns the new &lt;code&gt;length&lt;/code&gt; of the array.</source>
          <target state="translated">配列の最後に1つ以上の要素を追加し、配列の新しい &lt;code&gt;length&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f61ad7270a14415923e0081811abfc1f769cd27c" translate="yes" xml:space="preserve">
          <source>Adds one or more elements to the front of an array and returns the new length of the array.</source>
          <target state="translated">配列の先頭に1つ以上の要素を追加し、配列の新しい長さを返します。</target>
        </trans-unit>
        <trans-unit id="2615c3556ef2abd794b469779cadb3b2bc77cf5d" translate="yes" xml:space="preserve">
          <source>Adds one or more elements to the front of an array, and returns the new &lt;code&gt;length&lt;/code&gt; of the array.</source>
          <target state="translated">配列の前に1つ以上の要素を追加し、配列の新しい &lt;code&gt;length&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="8b83e6e18d048c7488a23f2caaef73b9035ab330" translate="yes" xml:space="preserve">
          <source>Adds the given expression to the scope chain used when evaluating the statement. The parentheses around the expression are required.</source>
          <target state="translated">指定した式を、文を評価する際に使用するスコープチェインに追加します。式の周りの括弧は必須です。</target>
        </trans-unit>
        <trans-unit id="bf12230e6a49b89bccaf853c9216a46d38756e70" translate="yes" xml:space="preserve">
          <source>Adds the named properties described by the given descriptors to an object.</source>
          <target state="translated">与えられたディスクリプタによって記述された名前付きプロパティをオブジェクトに追加します。</target>
        </trans-unit>
        <trans-unit id="fe84fd43eeafd8f05fa1e59828812e7eb63265a5" translate="yes" xml:space="preserve">
          <source>Adds the named property described by a given descriptor to an object.</source>
          <target state="translated">指定された記述子によって記述された名前付きプロパティをオブジェクトに追加します。</target>
        </trans-unit>
        <trans-unit id="bdb5a2a4ee884959b1358bbd357d218e98ec277a" translate="yes" xml:space="preserve">
          <source>Adds the provided value to the existing value at the specified index of the array. Returns the old value at that index.</source>
          <target state="translated">指定したインデックスの既存の値に、指定した値を追加します。そのインデックスの古い値を返します。</target>
        </trans-unit>
        <trans-unit id="000686381772b360b63718c19087e068cf26960a" translate="yes" xml:space="preserve">
          <source>Admittedly the wording in the error message is slightly strange. &quot;Formal parameter&quot; is a fancy way of saying &quot;function argument&quot;. And we use the word &quot;malformed&quot; because all Firefox engineers are huge fans of 19th-century Gothic horror novels.</source>
          <target state="translated">確かに、エラーメッセージの文言が少しおかしいですね。&quot;Formal parameter&quot; は &quot;function argument&quot; の言い回しです。そして、Firefox のエンジニアはみんな 19 世紀のゴシックホラー小説の大ファンだから、&quot;malformed&quot; という言葉を使っています。</target>
        </trans-unit>
        <trans-unit id="66931511954ef5ba588177fe993eecfba55f8306" translate="yes" xml:space="preserve">
          <source>Advanced Example</source>
          <target state="translated">高度な例</target>
        </trans-unit>
        <trans-unit id="fd594fc50ea0d0145d9eb66000d129d1ca222693" translate="yes" xml:space="preserve">
          <source>Advanced syntax</source>
          <target state="translated">高度な構文</target>
        </trans-unit>
        <trans-unit id="ca22c48b305b0efd0dce190f66b1c0367120b685" translate="yes" xml:space="preserve">
          <source>Affecting Initial Array (modifying, appending and deleting)</source>
          <target state="translated">初期配列への影響(変更、追加、削除</target>
        </trans-unit>
        <trans-unit id="f3aac015e23b9728cfb71fd9d570a55beb7c6663" translate="yes" xml:space="preserve">
          <source>Affecting Initial Array (modifying, appending, and deleting)</source>
          <target state="translated">初期配列への影響(変更、追加、削除</target>
        </trans-unit>
        <trans-unit id="ca966786da2f248e896d291e87c5ffa79dcb8e20" translate="yes" xml:space="preserve">
          <source>After completing the third pass, the condition &lt;code&gt;n&lt;/code&gt; &amp;lt; 3 is no longer true, so the loop terminates.</source>
          <target state="translated">3番目のパスを完了すると、条件 &lt;code&gt;n&lt;/code&gt; &amp;lt;3は真ではなくなり、ループは終了します。</target>
        </trans-unit>
        <trans-unit id="24afd16cb86cfb1a82a3c2149fe1b3cef4992c68" translate="yes" xml:space="preserve">
          <source>After fetching some WebAssembly bytecode using fetch, we compile and instantiate the module using the &lt;a href=&quot;../instantiatestreaming&quot;&gt;&lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt;&lt;/a&gt; function, importing a JavaScript function into the WebAssembly Module in the process. We then call an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAssembly/Exported_functions&quot;&gt;Exported WebAssembly function&lt;/a&gt; that is exported by the &lt;code&gt;Instance&lt;/code&gt;.</source>
          <target state="translated">フェッチを使用していくつかのWebAssemblyバイトコードをフェッチした後、&lt;a href=&quot;../instantiatestreaming&quot;&gt; &lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt; &lt;/a&gt;関数を使用してモジュールをコンパイルおよびインスタンス化し、プロセスのJavaScript関数をWebAssemblyモジュールにインポートします。次に、 &lt;code&gt;Instance&lt;/code&gt; によってエクスポートされる&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAssembly/Exported_functions&quot;&gt;Exported WebAssembly関数&lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="7e49f1e46e3eb5a3cf7f37a16a8c750f1d019695" translate="yes" xml:space="preserve">
          <source>After fetching some WebAssembly bytecode using fetch, we compile and instantiate the module using the &lt;a href=&quot;../instantiatestreaming&quot;&gt;&lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt;&lt;/a&gt; function, importing a JavaScript function into the WebAssembly Module in the process. We then call an &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/WebAssembly/Exported_functions&quot;&gt;Exported WebAssembly function&lt;/a&gt; that is exported by the &lt;code&gt;Instance&lt;/code&gt;.</source>
          <target state="translated">fetchを使用してWebAssemblyバイトコードをフェッチした後、&lt;a href=&quot;../instantiatestreaming&quot;&gt; &lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt; &lt;/a&gt;関数を使用してモジュールをコンパイルおよびインスタンス化し、その過程でJavaScript関数をWebAssemblyモジュールにインポートします。次に、 &lt;code&gt;Instance&lt;/code&gt; によってエクスポートされる&lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/WebAssembly/Exported_functions&quot;&gt;ExportedWebAssembly関数&lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="d8663f20224c8efc2c6ecb4d69de68214261ca31" translate="yes" xml:space="preserve">
          <source>After fetching some WebAssembly bytecode using fetch, we compile and instantiate the module using the &lt;a href=&quot;instantiate&quot;&gt;&lt;code&gt;WebAssembly.instantiate()&lt;/code&gt;&lt;/a&gt; function, importing a JavaScript function into the WebAssembly Module in the process. We then call an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAssembly/Exported_functions&quot;&gt;Exported WebAssembly function&lt;/a&gt; that is exported by the &lt;code&gt;Instance&lt;/code&gt;.</source>
          <target state="translated">fetchを使用してWebAssemblyバイトコードをフェッチした後、&lt;a href=&quot;instantiate&quot;&gt; &lt;code&gt;WebAssembly.instantiate()&lt;/code&gt; &lt;/a&gt;関数を使用してモジュールをコンパイルおよびインスタンス化し、プロセスのJavaScript関数をWebAssemblyモジュールにインポートします。次に、 &lt;code&gt;Instance&lt;/code&gt; によってエクスポートされる&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAssembly/Exported_functions&quot;&gt;Exported WebAssembly関数&lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="74a0234170fcf334423579a950523051e28699cd" translate="yes" xml:space="preserve">
          <source>After fetching some WebAssembly bytecode using fetch, we compile and instantiate the module using the &lt;a href=&quot;instantiate&quot;&gt;&lt;code&gt;WebAssembly.instantiate()&lt;/code&gt;&lt;/a&gt; function, importing a JavaScript function into the WebAssembly Module in the process. We then call an &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/WebAssembly/Exported_functions&quot;&gt;Exported WebAssembly function&lt;/a&gt; that is exported by the &lt;code&gt;Instance&lt;/code&gt;.</source>
          <target state="translated">fetchを使用してWebAssemblyバイトコードをフェッチした後、&lt;a href=&quot;instantiate&quot;&gt; &lt;code&gt;WebAssembly.instantiate()&lt;/code&gt; &lt;/a&gt;関数を使用してモジュールをコンパイルおよびインスタンス化し、その過程でJavaScript関数をWebAssemblyモジュールにインポートします。次に、 &lt;code&gt;Instance&lt;/code&gt; によってエクスポートされる&lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/WebAssembly/Exported_functions&quot;&gt;ExportedWebAssembly関数&lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="a8d3778312e67a0dbf038e761562279b877500cc" translate="yes" xml:space="preserve">
          <source>After the first pass: &lt;code&gt;n&lt;/code&gt; = 1 and &lt;code&gt;x&lt;/code&gt; = 1</source>
          <target state="translated">最初のパスの後： &lt;code&gt;n&lt;/code&gt; = 1および &lt;code&gt;x&lt;/code&gt; = 1</target>
        </trans-unit>
        <trans-unit id="12a12943aaf89ee22083f3f484cff84a2064bc3b" translate="yes" xml:space="preserve">
          <source>After the second pass: &lt;code&gt;n&lt;/code&gt; = 2 and &lt;code&gt;x&lt;/code&gt; = 3</source>
          <target state="translated">2回目のパスの後： &lt;code&gt;n&lt;/code&gt; = 2および &lt;code&gt;x&lt;/code&gt; = 3</target>
        </trans-unit>
        <trans-unit id="c6e80ccbd220312b22d98f0367fdf7c0ae2d26a5" translate="yes" xml:space="preserve">
          <source>After the third pass: &lt;code&gt;n&lt;/code&gt; = 3 and &lt;code&gt;x&lt;/code&gt; = 6</source>
          <target state="translated">3番目のパスの後： &lt;code&gt;n&lt;/code&gt; = 3および &lt;code&gt;x&lt;/code&gt; = 6</target>
        </trans-unit>
        <trans-unit id="e9dfdd5f79f94c7a0ae608406de5ef5f9ef9983d" translate="yes" xml:space="preserve">
          <source>Again, adding the missing object-method directly from the &lt;strong&gt;standard-object &lt;/strong&gt;does NOT work. However, adding the &lt;strong&gt;generic&lt;/strong&gt; method directly, DOES:</source>
          <target state="translated">繰り返しますが、不足しているオブジェクトメソッドを&lt;strong&gt;標準オブジェクト&lt;/strong&gt;から直接追加しても機能しません。ただし、&lt;strong&gt;ジェネリック&lt;/strong&gt;メソッドを直接追加すると、</target>
        </trans-unit>
        <trans-unit id="5ffa625a3f6e38f230794c1057ba393d92a61974" translate="yes" xml:space="preserve">
          <source>Again, note that this implementation aims for absolute compatibility with &lt;code&gt;lastIndexOf&lt;/code&gt; in Firefox and the SpiderMonkey JavaScript engine, including in several cases which are arguably edge cases. If you intend to use this in real-world applications, you may be able to calculate &lt;code&gt;from&lt;/code&gt; with less complicated code if you ignore those cases.</source>
          <target state="translated">繰り返しになりますが、この実装は、Firefoxの &lt;code&gt;lastIndexOf&lt;/code&gt; およびSpiderMonkey JavaScriptエンジンとの完全な互換性を目的としていることに注意してください。これを実際のアプリケーションで使用する場合、これらのケースを無視すれば、複雑でないコードで &lt;code&gt;from&lt;/code&gt; 計算できる可能性があります。</target>
        </trans-unit>
        <trans-unit id="c8d893483b669531f685ab1a19e3a923338615e6" translate="yes" xml:space="preserve">
          <source>Again, the input form is not preserved, so we have to use &lt;a href=&quot;../global_objects/array/join&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt; to revert back to a string.</source>
          <target state="translated">この場合も、入力フォームは保持されないため、&lt;a href=&quot;../global_objects/array/join&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt;を使用して文字列に戻す必要があります。</target>
        </trans-unit>
        <trans-unit id="37d5985620801a4205aba92553a9d8524277fb16" translate="yes" xml:space="preserve">
          <source>Again, the same notion holds true when a function is invoked from a getter or a setter. A function used as getter or setter has its &lt;code&gt;this&lt;/code&gt; bound to the object from which the property is being set or gotten.</source>
          <target state="translated">繰り返しになりますが、関数がゲッターまたはセッターから呼び出された場合も同じ考え方が当てはまります。getterまたはsetterとして使用される関数は、 &lt;code&gt;this&lt;/code&gt; がプロパティの設定または取得元のオブジェクトにバインドされています。</target>
        </trans-unit>
        <trans-unit id="f8321eb891fa924b9dc262d42e8371d91e746d33" translate="yes" xml:space="preserve">
          <source>Aliasing</source>
          <target state="translated">Aliasing</target>
        </trans-unit>
        <trans-unit id="6358bde33ab8dcdc66484b4354fed8b792df34ab" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; instances and instances of &lt;a href=&quot;../error#Error_types&quot;&gt;non-generic errors&lt;/a&gt; inherit from &lt;code&gt;Error.prototype&lt;/code&gt;. As with all constructor functions, you can use the prototype of the constructor to add properties or methods to all instances created with that constructor.</source>
          <target state="translated">すべての&lt;a href=&quot;../error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;インスタンスおよび&lt;a href=&quot;../error#Error_types&quot;&gt;非一般的なエラーの&lt;/a&gt;インスタンスは、 &lt;code&gt;Error.prototype&lt;/code&gt; から継承します。すべてのコンストラクター関数と同様に、コンストラクターのプロトタイプを使用して、そのコンストラクターで作成されたすべてのインスタンスにプロパティまたはメソッドを追加できます。</target>
        </trans-unit>
        <trans-unit id="003664c44c4d51f07c612369f57d65687cf17925" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../evalerror&quot;&gt;&lt;code&gt;EvalError&lt;/code&gt;&lt;/a&gt; instances inherit from &lt;code&gt;EvalError.prototype&lt;/code&gt;. You can use the prototype to add properties or methods to all instances.</source>
          <target state="translated">すべての&lt;a href=&quot;../evalerror&quot;&gt; &lt;code&gt;EvalError&lt;/code&gt; &lt;/a&gt;インスタンスは &lt;code&gt;EvalError.prototype&lt;/code&gt; を継承します。プロトタイプを使用して、すべてのインスタンスにプロパティまたはメソッドを追加できます。</target>
        </trans-unit>
        <trans-unit id="6fb32009d509e25121605ddb50f9c91ffa887ec9" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../global&quot;&gt;&lt;code&gt;WebAssembly.Global&lt;/code&gt;&lt;/a&gt; instances inherit from &lt;code&gt;Global.prototype&lt;/code&gt;. The prototype object of the &lt;a href=&quot;../global&quot;&gt;&lt;code&gt;WebAssembly.Global()&lt;/code&gt;&lt;/a&gt; constructor can be modified to affect all &lt;a href=&quot;../global&quot;&gt;&lt;code&gt;WebAssembly.Global&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">すべての&lt;a href=&quot;../global&quot;&gt; &lt;code&gt;WebAssembly.Global&lt;/code&gt; &lt;/a&gt;インスタンスは &lt;code&gt;Global.prototype&lt;/code&gt; から継承します。&lt;a href=&quot;../global&quot;&gt; &lt;code&gt;WebAssembly.Global()&lt;/code&gt; &lt;/a&gt;コンストラクターのプロトタイプオブジェクトを変更して、すべての&lt;a href=&quot;../global&quot;&gt; &lt;code&gt;WebAssembly.Global&lt;/code&gt; &lt;/a&gt;インスタンスに影響を与えることができます。</target>
        </trans-unit>
        <trans-unit id="69283658782a98fd7a7ddf8b2e0c51354c399c96" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../instance&quot;&gt;&lt;code&gt;WebAssembly.Instance&lt;/code&gt;&lt;/a&gt; instances inherit from &lt;code&gt;Instance.prototype&lt;/code&gt;. The prototype object of the &lt;a href=&quot;../instance&quot;&gt;&lt;code&gt;WebAssembly.Instance()&lt;/code&gt;&lt;/a&gt; constructor can be modified to affect all &lt;a href=&quot;../instance&quot;&gt;&lt;code&gt;WebAssembly.Instance&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">すべての&lt;a href=&quot;../instance&quot;&gt; &lt;code&gt;WebAssembly.Instance&lt;/code&gt; &lt;/a&gt;インスタンスは &lt;code&gt;Instance.prototype&lt;/code&gt; から継承します。&lt;a href=&quot;../instance&quot;&gt; &lt;code&gt;WebAssembly.Instance()&lt;/code&gt; &lt;/a&gt;コンストラクターのプロトタイプオブジェクトは、すべての&lt;a href=&quot;../instance&quot;&gt; &lt;code&gt;WebAssembly.Instance&lt;/code&gt; &lt;/a&gt;インスタンスに影響を与えるように変更できます。</target>
        </trans-unit>
        <trans-unit id="026aba02796b01ec2190782b2e646184cba1aff5" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../memory&quot;&gt;&lt;code&gt;WebAssembly.Memory&lt;/code&gt;&lt;/a&gt; instances inherit from &lt;code&gt;Memory.prototype&lt;/code&gt;. The prototype object of the &lt;a href=&quot;../memory&quot;&gt;&lt;code&gt;WebAssembly.Memory()&lt;/code&gt;&lt;/a&gt; constructor can be modified to affect all &lt;a href=&quot;../memory&quot;&gt;&lt;code&gt;WebAssembly.Memory&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">すべての&lt;a href=&quot;../memory&quot;&gt; &lt;code&gt;WebAssembly.Memory&lt;/code&gt; &lt;/a&gt;インスタンスは、 &lt;code&gt;Memory.prototype&lt;/code&gt; から継承します。&lt;a href=&quot;../memory&quot;&gt; &lt;code&gt;WebAssembly.Memory()&lt;/code&gt; &lt;/a&gt;コンストラクターのプロトタイプオブジェクトを変更して、すべての&lt;a href=&quot;../memory&quot;&gt; &lt;code&gt;WebAssembly.Memory&lt;/code&gt; &lt;/a&gt;インスタンスに影響を与えることができます。</target>
        </trans-unit>
        <trans-unit id="bdbd486bbe2eca50d04f45d362234cb26edca450" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; instances inherit from &lt;code&gt;Module.prototype&lt;/code&gt;. The prototype object of the &lt;a href=&quot;../module&quot;&gt;&lt;code&gt;WebAssembly.Module()&lt;/code&gt;&lt;/a&gt; constructor can be modified to affect all &lt;a href=&quot;../module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">すべての&lt;a href=&quot;../module&quot;&gt; &lt;code&gt;WebAssembly.Module&lt;/code&gt; &lt;/a&gt;インスタンスは &lt;code&gt;Module.prototype&lt;/code&gt; を継承します。&lt;a href=&quot;../module&quot;&gt; &lt;code&gt;WebAssembly.Module()&lt;/code&gt; &lt;/a&gt;コンストラクターのプロトタイプオブジェクトを変更して、すべての&lt;a href=&quot;../module&quot;&gt; &lt;code&gt;WebAssembly.Module&lt;/code&gt; &lt;/a&gt;インスタンスに影響を与えることができます。</target>
        </trans-unit>
        <trans-unit id="5a7606f79343725422babc5e51f5f05428465adb" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; instances inherit from &lt;code&gt;Number.prototype&lt;/code&gt;. The prototype object of the &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; constructor can be modified to affect all &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">すべての&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt;インスタンスは &lt;code&gt;Number.prototype&lt;/code&gt; から継承します。&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt;コンストラクターのプロトタイプオブジェクトを変更して、すべての&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt;インスタンスに影響を与えることができます。</target>
        </trans-unit>
        <trans-unit id="ab75216f661369242189ce5698757797261f4a5a" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; instances inherit from &lt;code&gt;RangeError.prototype&lt;/code&gt;. You can use the prototype to add properties or methods to all instances.</source>
          <target state="translated">すべての&lt;a href=&quot;../rangeerror&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; &lt;/a&gt;インスタンスは &lt;code&gt;RangeError.prototype&lt;/code&gt; から継承します。プロトタイプを使用して、すべてのインスタンスにプロパティまたはメソッドを追加できます。</target>
        </trans-unit>
        <trans-unit id="3124aaaa5b8d30fdd2b704d4d37baa9a93f43bf8" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../referenceerror&quot;&gt;&lt;code&gt;ReferenceError&lt;/code&gt;&lt;/a&gt; instances inherit from &lt;code&gt;ReferenceError.prototype&lt;/code&gt;. You can use the prototype to add properties or methods to all instances.</source>
          <target state="translated">すべての&lt;a href=&quot;../referenceerror&quot;&gt; &lt;code&gt;ReferenceError&lt;/code&gt; &lt;/a&gt;インスタンスは &lt;code&gt;ReferenceError.prototype&lt;/code&gt; を継承します。プロトタイプを使用して、すべてのインスタンスにプロパティまたはメソッドを追加できます。</target>
        </trans-unit>
        <trans-unit id="730a2904d7e3af2e4ca1b8eaeca44006776372e6" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; instances inherit from &lt;code&gt;String.prototype&lt;/code&gt;. Changes to the &lt;code&gt;String&lt;/code&gt; prototype object are propagated to all &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">すべての&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;インスタンスは &lt;code&gt;String.prototype&lt;/code&gt; から継承します。 &lt;code&gt;String&lt;/code&gt; プロトタイプオブジェクトへの変更は、すべての&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;インスタンスに伝達されます。</target>
        </trans-unit>
        <trans-unit id="1e9965f82f41d604119d450352eb79a4fca3b1bd" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt;-keyed properties will be completely ignored, even when using the &lt;code&gt;&lt;var&gt;replacer&lt;/var&gt;&lt;/code&gt; function.</source>
          <target state="translated">すべての&lt;a href=&quot;../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt;使用しても、性質が完全に無視されます-keyed &lt;code&gt;&lt;var&gt;replacer&lt;/var&gt;&lt;/code&gt; 機能を。</target>
        </trans-unit>
        <trans-unit id="96a802d8f83091635d056b8369ae89ba4071f7e6" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt;-keyed properties will be completely ignored, even when using the &lt;code&gt;replacer&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;replacer&lt;/code&gt; 関数を使用している場合でも、すべての&lt;a href=&quot;../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt;キー設定プロパティは完全に無視されます。</target>
        </trans-unit>
        <trans-unit id="95eae42823cc777fcabbd7d0f175778cdb0b1cfb" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; instances inherit from &lt;code&gt;SyntaxError.prototype&lt;/code&gt;. You can use the prototype to add properties or methods to all instances.</source>
          <target state="translated">すべての&lt;a href=&quot;../syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;インスタンスは &lt;code&gt;SyntaxError.prototype&lt;/code&gt; を継承します。プロトタイプを使用して、すべてのインスタンスにプロパティまたはメソッドを追加できます。</target>
        </trans-unit>
        <trans-unit id="3aaad887af8d724ee1c08026b6c732d015470607" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../table&quot;&gt;&lt;code&gt;WebAssembly.Table&lt;/code&gt;&lt;/a&gt; instances inherit from &lt;code&gt;Table.prototype&lt;/code&gt;. The prototype object of the &lt;a href=&quot;../table&quot;&gt;&lt;code&gt;WebAssembly.Table()&lt;/code&gt;&lt;/a&gt; constructor can be modified to affect all &lt;a href=&quot;../table&quot;&gt;&lt;code&gt;WebAssembly.Table&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">すべての&lt;a href=&quot;../table&quot;&gt; &lt;code&gt;WebAssembly.Table&lt;/code&gt; &lt;/a&gt;インスタンスは &lt;code&gt;Table.prototype&lt;/code&gt; から継承します。&lt;a href=&quot;../table&quot;&gt; &lt;code&gt;WebAssembly.Table()&lt;/code&gt; &lt;/a&gt;コンストラクターのプロトタイプオブジェクトは、すべての&lt;a href=&quot;../table&quot;&gt; &lt;code&gt;WebAssembly.Table&lt;/code&gt; &lt;/a&gt;インスタンスに影響を与えるように変更できます。</target>
        </trans-unit>
        <trans-unit id="58b0a143dc9269530ada70bbcc4d492ec9376fc6" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; instances inherit from &lt;code&gt;TypeError.prototype&lt;/code&gt;. You can use the prototype to add properties or methods to all instances.</source>
          <target state="translated">すべての&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;インスタンスは継承 &lt;code&gt;TypeError.prototype&lt;/code&gt; 。プロトタイプを使用して、すべてのインスタンスにプロパティまたはメソッドを追加できます。</target>
        </trans-unit>
        <trans-unit id="0b9680b7440871a892887aad70fc650f673d8dfc" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../urierror&quot;&gt;&lt;code&gt;URIError&lt;/code&gt;&lt;/a&gt; instances inherit from &lt;code&gt;URIError.prototype&lt;/code&gt;. You can use the prototype to add properties or methods to all instances.</source>
          <target state="translated">すべての&lt;a href=&quot;../urierror&quot;&gt; &lt;code&gt;URIError&lt;/code&gt; &lt;/a&gt;インスタンスは &lt;code&gt;URIError.prototype&lt;/code&gt; から継承します。プロトタイプを使用して、すべてのインスタンスにプロパティまたはメソッドを追加できます。</target>
        </trans-unit>
        <trans-unit id="8e319ff6d53fa4b1c841170a0e3c1a0e3f3f15f5" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; instances and instances of &lt;a href=&quot;error#Error_types&quot;&gt;non-generic errors&lt;/a&gt; inherit from &lt;code&gt;Error.prototype&lt;/code&gt;. As with all constructor functions, you can use the prototype of the constructor to add properties or methods to all instances created with that constructor.</source>
          <target state="translated">すべての&lt;a href=&quot;error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;インスタンスおよび&lt;a href=&quot;error#Error_types&quot;&gt;非一般的なエラーの&lt;/a&gt;インスタンスは、 &lt;code&gt;Error.prototype&lt;/code&gt; から継承します。すべてのコンストラクター関数と同様に、コンストラクターのプロトタイプを使用して、そのコンストラクターで作成されたすべてのインスタンスにプロパティまたはメソッドを追加できます。</target>
        </trans-unit>
        <trans-unit id="0e436abe6e4d4f882028e1a9675830fb5556a5a7" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Array&lt;/code&gt; instances inherit from &lt;a href=&quot;array/prototype&quot;&gt;&lt;code&gt;Array.prototype&lt;/code&gt;&lt;/a&gt;. The prototype object of the &lt;code&gt;Array&lt;/code&gt; constructor can be modified to affect all &lt;code&gt;Array&lt;/code&gt; instances.</source>
          <target state="translated">すべての &lt;code&gt;Array&lt;/code&gt; インスタンスは&lt;a href=&quot;array/prototype&quot;&gt; &lt;code&gt;Array.prototype&lt;/code&gt; &lt;/a&gt;から継承します。 &lt;code&gt;Array&lt;/code&gt; コンストラクターのプロトタイプオブジェクトを変更して、すべての &lt;code&gt;Array&lt;/code&gt; インスタンスに影響を与えることができます。</target>
        </trans-unit>
        <trans-unit id="9875ccea55d3a842975e91d390a3af939e3eed15" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;ArrayBuffer&lt;/code&gt; instances inherit from &lt;a href=&quot;arraybuffer/prototype&quot;&gt;&lt;code&gt;ArrayBuffer.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">すべての &lt;code&gt;ArrayBuffer&lt;/code&gt; インスタンスは&lt;a href=&quot;arraybuffer/prototype&quot;&gt; &lt;code&gt;ArrayBuffer.prototype&lt;/code&gt; &lt;/a&gt;から継承します。</target>
        </trans-unit>
        <trans-unit id="effb93a4c8da4ec0f1be72e2ae211ce6afbd6ec1" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Boolean&lt;/code&gt; instances inherit from &lt;a href=&quot;boolean/prototype&quot;&gt;&lt;code&gt;Boolean.prototype&lt;/code&gt;&lt;/a&gt;. As with all constructors, the prototype object dictates instances' inherited properties and methods.</source>
          <target state="translated">すべての &lt;code&gt;Boolean&lt;/code&gt; インスタンスは&lt;a href=&quot;boolean/prototype&quot;&gt; &lt;code&gt;Boolean.prototype&lt;/code&gt; &lt;/a&gt;から継承します。すべてのコンストラクターと同様に、プロトタイプオブジェクトはインスタンスの継承されたプロパティとメソッドを指示します。</target>
        </trans-unit>
        <trans-unit id="9e5c1e0761e4549ba2ba127e71b4382782167566" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;DataView&lt;/code&gt; instances inherit from &lt;a href=&quot;dataview/prototype&quot;&gt;&lt;code&gt;DataView.prototype&lt;/code&gt;&lt;/a&gt; and allows the addition of properties to all DataView objects.</source>
          <target state="translated">すべての &lt;code&gt;DataView&lt;/code&gt; インスタンスは&lt;a href=&quot;dataview/prototype&quot;&gt; &lt;code&gt;DataView.prototype&lt;/code&gt; &lt;/a&gt;を継承し、すべてのDataViewオブジェクトにプロパティを追加できます。</target>
        </trans-unit>
        <trans-unit id="7949a720ec3735ecbd32753ffb251c0c01c4eecb" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Date&lt;/code&gt; instances inherit from &lt;a href=&quot;date/prototype&quot;&gt;&lt;code&gt;Date.prototype&lt;/code&gt;&lt;/a&gt;. The prototype object of the &lt;code&gt;Date&lt;/code&gt; constructor can be modified to affect all &lt;code&gt;Date&lt;/code&gt; instances.</source>
          <target state="translated">すべての &lt;code&gt;Date&lt;/code&gt; インスタンスは&lt;a href=&quot;date/prototype&quot;&gt; &lt;code&gt;Date.prototype&lt;/code&gt; &lt;/a&gt;から継承します。 &lt;code&gt;Date&lt;/code&gt; コンストラクターのプロトタイプオブジェクトを変更して、すべての &lt;code&gt;Date&lt;/code&gt; インスタンスに影響を与えることができます。</target>
        </trans-unit>
        <trans-unit id="93f6e3b5a646650e518df9a5f613e848adf58793" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Float32Array&lt;/code&gt; objects inherit from &lt;a href=&quot;typedarray/prototype&quot;&gt;&lt;code&gt;%TypedArray%.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">すべての &lt;code&gt;Float32Array&lt;/code&gt; オブジェクトは&lt;a href=&quot;typedarray/prototype&quot;&gt; &lt;code&gt;%TypedArray%.prototype&lt;/code&gt; &lt;/a&gt;から継承します。</target>
        </trans-unit>
        <trans-unit id="1de04b213dff12d54337a9a721e7fe285440cf11" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Float64Array&lt;/code&gt; objects inherit from &lt;a href=&quot;typedarray/prototype&quot;&gt;&lt;code&gt;%TypedArray%.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">すべての &lt;code&gt;Float64Array&lt;/code&gt; オブジェクトは&lt;a href=&quot;typedarray/prototype&quot;&gt; &lt;code&gt;%TypedArray%.prototype&lt;/code&gt; &lt;/a&gt;から継承します。</target>
        </trans-unit>
        <trans-unit id="2dd9f64884449e5acb404600b96fc39b07ce7de0" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Global&lt;/code&gt; instances inherit from the &lt;code&gt;Global()&lt;/code&gt; constructor's &lt;a href=&quot;global/prototype&quot;&gt;prototype object&lt;/a&gt; &amp;mdash; this can be modified to affect all &lt;code&gt;Global&lt;/code&gt; instances.</source>
          <target state="translated">すべての &lt;code&gt;Global&lt;/code&gt; インスタンスは、 &lt;code&gt;Global()&lt;/code&gt; コンストラクターの&lt;a href=&quot;global/prototype&quot;&gt;プロトタイプオブジェクトを&lt;/a&gt;継承します。これは、すべての &lt;code&gt;Global&lt;/code&gt; インスタンスに影響を与えるように変更できます。</target>
        </trans-unit>
        <trans-unit id="0182fa46889fbdbe76e515c86fb7648f44ce2925" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Global&lt;/code&gt; instances inherit from the &lt;code&gt;Global()&lt;/code&gt; constructor's prototype object &amp;mdash; this can be modified to affect all &lt;code&gt;Global&lt;/code&gt; instances.</source>
          <target state="translated">すべての &lt;code&gt;Global&lt;/code&gt; インスタンスは、 &lt;code&gt;Global()&lt;/code&gt; コンストラクターのプロトタイプオブジェクトを継承します&amp;mdash;これはすべての &lt;code&gt;Global&lt;/code&gt; インスタンスに影響を与えるように変更できます。</target>
        </trans-unit>
        <trans-unit id="85fdb82a9af0f7d7a41549cf8cfec19ab332d72d" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Instance&lt;/code&gt; instances inherit from the &lt;code&gt;Instance()&lt;/code&gt; constructor's &lt;a href=&quot;instance/prototype&quot;&gt;prototype object&lt;/a&gt; &amp;mdash; this can be modified to affect all &lt;code&gt;Instance&lt;/code&gt; instances.</source>
          <target state="translated">すべての &lt;code&gt;Instance&lt;/code&gt; インスタンスは、 &lt;code&gt;Instance()&lt;/code&gt; コンストラクターの&lt;a href=&quot;instance/prototype&quot;&gt;プロトタイプオブジェクト&lt;/a&gt;から継承します。これは、すべての &lt;code&gt;Instance&lt;/code&gt; インスタンスに影響を与えるように変更できます。</target>
        </trans-unit>
        <trans-unit id="23ba1926f10576f9c862c3f14c437e2319ccafd8" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Int16Array&lt;/code&gt; objects inherit from &lt;a href=&quot;typedarray/prototype&quot;&gt;&lt;code&gt;%TypedArray%.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">すべての &lt;code&gt;Int16Array&lt;/code&gt; オブジェクトは&lt;a href=&quot;typedarray/prototype&quot;&gt; &lt;code&gt;%TypedArray%.prototype&lt;/code&gt; &lt;/a&gt;から継承します。</target>
        </trans-unit>
        <trans-unit id="4033578758464d6cb1ee6c3dfaf8d6386c4928de" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Int32Array&lt;/code&gt; objects inherit from &lt;a href=&quot;typedarray/prototype&quot;&gt;&lt;code&gt;%TypedArray%.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">すべての &lt;code&gt;Int32Array&lt;/code&gt; オブジェクトは&lt;a href=&quot;typedarray/prototype&quot;&gt; &lt;code&gt;%TypedArray%.prototype&lt;/code&gt; &lt;/a&gt;から継承します。</target>
        </trans-unit>
        <trans-unit id="8f72ba2b7a060cad9f2f8ea3e11a008c69d0b604" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Int8Array&lt;/code&gt; objects inherit from &lt;a href=&quot;typedarray/prototype&quot;&gt;&lt;code&gt;%TypedArray%.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">すべての &lt;code&gt;Int8Array&lt;/code&gt; オブジェクトは&lt;a href=&quot;typedarray/prototype&quot;&gt; &lt;code&gt;%TypedArray%.prototype&lt;/code&gt; &lt;/a&gt;から継承します。</target>
        </trans-unit>
        <trans-unit id="47343a390d48b780d6c94bd37e3e38ea5037f9d5" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Map&lt;/code&gt; instances inherit from &lt;a href=&quot;map/prototype&quot;&gt;&lt;code&gt;Map.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">すべての &lt;code&gt;Map&lt;/code&gt; インスタンスは&lt;a href=&quot;map/prototype&quot;&gt; &lt;code&gt;Map.prototype&lt;/code&gt; を&lt;/a&gt;継承します。</target>
        </trans-unit>
        <trans-unit id="a0d6d6f0e1a1182028c9cacf782249a77dd7f3ac" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Memory&lt;/code&gt; instances inherit from the &lt;code&gt;Memory()&lt;/code&gt; constructor's &lt;a href=&quot;memory/prototype&quot;&gt;prototype object&lt;/a&gt; &amp;mdash; this can be modified to affect all &lt;code&gt;Memory&lt;/code&gt; instances.</source>
          <target state="translated">すべての &lt;code&gt;Memory&lt;/code&gt; インスタンスは、 &lt;code&gt;Memory()&lt;/code&gt; コンストラクターの&lt;a href=&quot;memory/prototype&quot;&gt;プロトタイプオブジェクトを&lt;/a&gt;継承します。これは、すべての &lt;code&gt;Memory&lt;/code&gt; インスタンスに影響を与えるように変更できます。</target>
        </trans-unit>
        <trans-unit id="d8de8e11841fcd0f40e2e6f809507d914001a9f6" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Module&lt;/code&gt; instances inherit from the &lt;code&gt;Module()&lt;/code&gt; constructor's &lt;a href=&quot;module/prototype&quot;&gt;prototype object&lt;/a&gt; &amp;mdash; this can be modified to affect all &lt;code&gt;Module&lt;/code&gt; instances.</source>
          <target state="translated">すべての &lt;code&gt;Module&lt;/code&gt; インスタンスは、 &lt;code&gt;Module()&lt;/code&gt; コンストラクターの&lt;a href=&quot;module/prototype&quot;&gt;プロトタイプオブジェクトを&lt;/a&gt;継承します。これを変更して、すべての &lt;code&gt;Module&lt;/code&gt; インスタンスに影響を与えることができます。</target>
        </trans-unit>
        <trans-unit id="b529e8c037124fb41a7c05015d75c9dc6f60ac78" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Number&lt;/code&gt; instances inherit from &lt;a href=&quot;number/prototype&quot;&gt;&lt;code&gt;Number.prototype&lt;/code&gt;&lt;/a&gt;. The prototype object of the &lt;code&gt;Number&lt;/code&gt; constructor can be modified to affect all &lt;code&gt;Number&lt;/code&gt; instances.</source>
          <target state="translated">すべての &lt;code&gt;Number&lt;/code&gt; インスタンスは&lt;a href=&quot;number/prototype&quot;&gt; &lt;code&gt;Number.prototype&lt;/code&gt; &lt;/a&gt;から継承します。 &lt;code&gt;Number&lt;/code&gt; コンストラクターのプロトタイプオブジェクトを変更して、すべての &lt;code&gt;Number&lt;/code&gt; インスタンスに影響を与えることができます。</target>
        </trans-unit>
        <trans-unit id="36ba8126511e1d5ab6eecd05ea63a9cb58a8ad47" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Set&lt;/code&gt; instances inherit from &lt;a href=&quot;set/prototype&quot;&gt;&lt;code&gt;Set.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">すべての &lt;code&gt;Set&lt;/code&gt; インスタンスは&lt;a href=&quot;set/prototype&quot;&gt; &lt;code&gt;Set.prototype&lt;/code&gt; &lt;/a&gt;から継承します。</target>
        </trans-unit>
        <trans-unit id="69dcf5e51ee99d45ced5b550867dc499e1f2c001" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;SharedArrayBuffer&lt;/code&gt; instances inherit from &lt;a href=&quot;sharedarraybuffer/prototype&quot;&gt;&lt;code&gt;SharedArrayBuffer.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">すべての &lt;code&gt;SharedArrayBuffer&lt;/code&gt; インスタンスは&lt;a href=&quot;sharedarraybuffer/prototype&quot;&gt; &lt;code&gt;SharedArrayBuffer.prototype&lt;/code&gt; &lt;/a&gt;から継承します。</target>
        </trans-unit>
        <trans-unit id="d0856930c7b24eece989c7e44897b900e6e6b13a" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Table&lt;/code&gt; instances inherit from the &lt;code&gt;Table()&lt;/code&gt; constructor's &lt;a href=&quot;table/prototype&quot;&gt;prototype object&lt;/a&gt; &amp;mdash; this can be modified to affect all &lt;code&gt;Table&lt;/code&gt; instances.</source>
          <target state="translated">すべての &lt;code&gt;Table&lt;/code&gt; インスタンスは、 &lt;code&gt;Table()&lt;/code&gt; コンストラクターの&lt;a href=&quot;table/prototype&quot;&gt;プロトタイプオブジェクトを&lt;/a&gt;継承します。これは、すべての &lt;code&gt;Table&lt;/code&gt; インスタンスに影響を与えるように変更できます。</target>
        </trans-unit>
        <trans-unit id="94bd2c86992033f0377d0c21c8fe73b71bb3b195" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Uint16Array&lt;/code&gt; objects inherit from &lt;a href=&quot;typedarray/prototype&quot;&gt;&lt;code&gt;%TypedArray%.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">すべての &lt;code&gt;Uint16Array&lt;/code&gt; オブジェクトは&lt;a href=&quot;typedarray/prototype&quot;&gt; &lt;code&gt;%TypedArray%.prototype&lt;/code&gt; &lt;/a&gt;から継承します。</target>
        </trans-unit>
        <trans-unit id="8365dc0b586830cba52bef8f423c0ac17ba2adee" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Uint32Array&lt;/code&gt; objects inherit from &lt;a href=&quot;typedarray/prototype&quot;&gt;&lt;code&gt;%TypedArray%.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">すべての &lt;code&gt;Uint32Array&lt;/code&gt; オブジェクトは&lt;a href=&quot;typedarray/prototype&quot;&gt; &lt;code&gt;%TypedArray%.prototype&lt;/code&gt; &lt;/a&gt;から継承します。</target>
        </trans-unit>
        <trans-unit id="32b01b1e0ef7e366df1812aaea2b5977ac71f593" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Uint8Array&lt;/code&gt; objects inherit from &lt;a href=&quot;typedarray/prototype&quot;&gt;&lt;code&gt;%TypedArray%.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">すべての &lt;code&gt;Uint8Array&lt;/code&gt; オブジェクトは&lt;a href=&quot;typedarray/prototype&quot;&gt; &lt;code&gt;%TypedArray%.prototype&lt;/code&gt; &lt;/a&gt;から継承します。</target>
        </trans-unit>
        <trans-unit id="e8eeb59d90c2645f29ab383b71fe81f08ece4ebc" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Uint8ClampedArray&lt;/code&gt; objects inherit from &lt;a href=&quot;typedarray/prototype&quot;&gt;&lt;code&gt;%TypedArray%.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">すべての &lt;code&gt;Uint8ClampedArray&lt;/code&gt; オブジェクトは&lt;a href=&quot;typedarray/prototype&quot;&gt; &lt;code&gt;%TypedArray%.prototype&lt;/code&gt; &lt;/a&gt;から継承します。</target>
        </trans-unit>
        <trans-unit id="e1f0d6a3b70717b6884f3c0b629108efe8aac90d" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;WeakMap&lt;/code&gt; instances inherit from &lt;a href=&quot;weakmap/prototype&quot;&gt;&lt;code&gt;WeakMap.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">すべての &lt;code&gt;WeakMap&lt;/code&gt; インスタンスは&lt;a href=&quot;weakmap/prototype&quot;&gt; &lt;code&gt;WeakMap.prototype&lt;/code&gt; を&lt;/a&gt;継承します。</target>
        </trans-unit>
        <trans-unit id="1b324f1c300abf08690cf5fdf478fe517ff63837" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;WeakSet&lt;/code&gt; instances inherit from &lt;a href=&quot;weakset/prototype&quot;&gt;&lt;code&gt;WeakSet.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">すべての &lt;code&gt;WeakSet&lt;/code&gt; インスタンスは&lt;a href=&quot;weakset/prototype&quot;&gt; &lt;code&gt;WeakSet.prototype&lt;/code&gt; を&lt;/a&gt;継承します。</target>
        </trans-unit>
        <trans-unit id="caa9e24df156cfdb4d142799282e384df8bdf1ec" translate="yes" xml:space="preserve">
          <source>All &lt;em&gt;TypedArray&lt;/em&gt;s inherit from &lt;a href=&quot;typedarray/prototype&quot;&gt;&lt;code&gt;TypedArray.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">すべての&lt;em&gt;TypedArrayはTypedArray.prototypeを&lt;/em&gt;継承し&lt;a href=&quot;typedarray/prototype&quot;&gt; &lt;code&gt;TypedArray.prototype&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ad4018e90e91778c9569e25b4567b87d75de52e7" translate="yes" xml:space="preserve">
          <source>All Symbols inherit from &lt;a href=&quot;symbol/prototype&quot;&gt;&lt;code&gt;Symbol.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">すべてのシンボルは&lt;a href=&quot;symbol/prototype&quot;&gt; &lt;code&gt;Symbol.prototype&lt;/code&gt; を&lt;/a&gt;継承します。</target>
        </trans-unit>
        <trans-unit id="fd9684a5b331be670cc7330c87f856a795e01ea9" translate="yes" xml:space="preserve">
          <source>All arguments passed to the function are treated as the names of the identifiers of the parameters in the function to be created, in the order in which they are passed.</source>
          <target state="translated">関数に渡されるすべての引数は、渡された順に、作成される関数内のパラメータの識別子の名前として扱われます。</target>
        </trans-unit>
        <trans-unit id="e65b4b0f9e7a51b92543a2c43ace8586d351969f" translate="yes" xml:space="preserve">
          <source>All canonically equivalent sequences are also compatible, but not vice versa.</source>
          <target state="translated">すべての正準的に等価な配列も互換性がありますが、その逆はありません。</target>
        </trans-unit>
        <trans-unit id="f87878419880ebfb221478583e3502dd7be47233" translate="yes" xml:space="preserve">
          <source>All current browsers expose a non-standard host object &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/all&quot;&gt;&lt;code&gt;document.all&lt;/code&gt;&lt;/a&gt; with type &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">現在のすべてのブラウザーは、タイプが &lt;code&gt;undefined&lt;/code&gt; の非標準のホストオブジェクト&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/all&quot;&gt; &lt;code&gt;document.all&lt;/code&gt; &lt;/a&gt;を公開しています。</target>
        </trans-unit>
        <trans-unit id="8a60f92f14391d3ef42817178f1a69b22b04f98f" translate="yes" xml:space="preserve">
          <source>All descendents of &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; inherit the &lt;code&gt;hasOwnProperty&lt;/code&gt; method. This method can be used to determine whether an object has the specified property as a direct property of that object; unlike the &lt;a href=&quot;../../operators/in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt; operator, this method does not check for a property in the object's prototype chain. If an &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; is an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;hasOwnProperty&lt;/code&gt; method can check whether an index exists.</source>
          <target state="translated">&lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; の&lt;/a&gt;すべての子孫は、 &lt;code&gt;hasOwnProperty&lt;/code&gt; メソッドを継承します。このメソッドを使用して、オブジェクトがそのオブジェクトの直接プロパティとして指定されたプロパティを持っているかどうかを判断できます。&lt;a href=&quot;../../operators/in&quot;&gt; &lt;code&gt;in&lt;/code&gt; &lt;/a&gt;演算子とは異なり、このメソッドはオブジェクトのプロトタイプチェーン内のプロパティをチェックしません。&lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;が&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;場合、 &lt;code&gt;hasOwnProperty&lt;/code&gt; メソッドはインデックスが存在するかどうかを確認できます。</target>
        </trans-unit>
        <trans-unit id="4ddf64f681f98ace44ef31c3c44d029ce8b8aa76" translate="yes" xml:space="preserve">
          <source>All do approximately the same thing, with a few subtle differences:</source>
          <target state="translated">どれもほぼ同じことをしていますが、微妙な違いがあります。</target>
        </trans-unit>
        <trans-unit id="eada20faad2740b207a20c3958a4f8c58106dcb5" translate="yes" xml:space="preserve">
          <source>All method definitions are not constructors and will throw a &lt;a href=&quot;../global_objects/typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; if you try to instantiate them.</source>
          <target state="translated">すべてのメソッド定義はコンストラクターではなく、インスタンス化しようとすると&lt;a href=&quot;../global_objects/typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;をスローします。</target>
        </trans-unit>
        <trans-unit id="f9a8c4b74f272211073c0883e9598c87ec2758b0" translate="yes" xml:space="preserve">
          <source>All objects (with the exception of objects created with &lt;code&gt;Object.create(null)&lt;/code&gt;) will have a &lt;code&gt;constructor&lt;/code&gt; property. Objects created without the explicit use of a constructor function (i.e. the object and array literals) will have a &lt;code&gt;constructor&lt;/code&gt; property that points to the Fundamental Object constructor type for that object.</source>
          <target state="translated">すべてのオブジェクト（ &lt;code&gt;Object.create(null)&lt;/code&gt; で作成されたオブジェクトを除く）には、 &lt;code&gt;constructor&lt;/code&gt; プロパティがあります。コンストラクター関数を明示的に使用せずに作成されたオブジェクト（つまり、オブジェクトおよび配列リテラル）には、そのオブジェクトのFundamental Objectコンストラクタータイプを指す &lt;code&gt;constructor&lt;/code&gt; プロパティがあります。</target>
        </trans-unit>
        <trans-unit id="b8920cb3fb725887965bd7b28be3e874cb37b081" translate="yes" xml:space="preserve">
          <source>All objects (with the exception of objects created with &lt;code&gt;Object.create(null)&lt;/code&gt;) will have a &lt;code&gt;constructor&lt;/code&gt; property. Objects created without the explicit use of a constructor function (such as object- and array-literals) will have a &lt;code&gt;constructor&lt;/code&gt; property that points to the Fundamental Object constructor type for that object.</source>
          <target state="translated">すべてのオブジェクト（ &lt;code&gt;Object.create(null)&lt;/code&gt; で作成されたオブジェクトを除く）には、 &lt;code&gt;constructor&lt;/code&gt; プロパティがあります。コンストラクター関数を明示的に使用せずに作成されたオブジェクト（オブジェクトリテラルや配列リテラルなど）には、そのオブジェクトの基本オブジェクトコンストラクタータイプを指す &lt;code&gt;constructor&lt;/code&gt; プロパティがあります。</target>
        </trans-unit>
        <trans-unit id="444960ec895393920d3db668733cfbaee3f9c2a2" translate="yes" xml:space="preserve">
          <source>All objects in JavaScript are descended from &lt;code&gt;Object&lt;/code&gt;; all objects inherit methods and properties from &lt;a href=&quot;object/prototype&quot;&gt;&lt;code&gt;Object.prototype&lt;/code&gt;&lt;/a&gt;, although they may be overridden. For example, other constructors' prototypes override the &lt;code&gt;constructor&lt;/code&gt; property and provide their own &lt;code&gt;toString()&lt;/code&gt; methods. Changes to the &lt;code&gt;Object&lt;/code&gt; prototype object are propagated to all objects unless the properties and methods subject to those changes are overridden further along the prototype chain.</source>
          <target state="translated">JavaScriptのすべてのオブジェクトは &lt;code&gt;Object&lt;/code&gt; の子孫です。すべてのオブジェクトは&lt;a href=&quot;object/prototype&quot;&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;/a&gt;からメソッドとプロパティを継承しますが、オーバーライドされる場合があります。たとえば、他のコンストラクタのプロトタイプは &lt;code&gt;constructor&lt;/code&gt; プロパティをオーバーライドし、独自の &lt;code&gt;toString()&lt;/code&gt; メソッドを提供します。変更 &lt;code&gt;Object&lt;/code&gt; これらの変更にプロパティとメソッド対象がプロトタイプチェーンに沿ってさらに上書きされない限り、プロトタイプオブジェクトは、すべてのオブジェクトに伝播されます。</target>
        </trans-unit>
        <trans-unit id="3646e478adad247d51b764539759b6a5f4bb568d" translate="yes" xml:space="preserve">
          <source>All other &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt; rules apply normally.</source>
          <target state="translated">他のすべての&lt;a href=&quot;../strict_mode&quot;&gt;厳密モード&lt;/a&gt;ルールは通常どおり適用されます。</target>
        </trans-unit>
        <trans-unit id="91efbc8b0a75bcb0ae918c1eadca08aaf8dd6772" translate="yes" xml:space="preserve">
          <source>All other strict mode rules apply normally.</source>
          <target state="translated">他のすべての厳格なモードの規則は通常適用されます。</target>
        </trans-unit>
        <trans-unit id="64e90da879b7d16f2b54d5d083109a378542a86a" translate="yes" xml:space="preserve">
          <source>All the considerations about the &quot;&lt;a href=&quot;let#Temporal_dead_zone&quot;&gt;temporal dead zone&lt;/a&gt;&quot; apply to both &lt;a href=&quot;let&quot;&gt;&lt;code&gt;let&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;const&lt;/code&gt;.</source>
          <target state="translated">「&lt;a href=&quot;let#Temporal_dead_zone&quot;&gt;一時的なデッドゾーン&lt;/a&gt;」に関するすべての考慮事項は、&lt;a href=&quot;let&quot;&gt; &lt;code&gt;let&lt;/code&gt; &lt;/a&gt;と &lt;code&gt;const&lt;/code&gt; の両方に適用されます。</target>
        </trans-unit>
        <trans-unit id="d25c2dda8d69854969d118bb70768bda490ac5d2" translate="yes" xml:space="preserve">
          <source>All the considerations about the &quot;&lt;a href=&quot;let#Temporal_dead_zone&quot;&gt;temporal dead zone&lt;/a&gt;&quot; apply to both &lt;code&gt;&lt;a href=&quot;let&quot;&gt;let&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt;.</source>
          <target state="translated">「&lt;a href=&quot;let#Temporal_dead_zone&quot;&gt;一時的なデッドゾーン&lt;/a&gt;」に関するすべての考慮事項は、 &lt;code&gt;&lt;a href=&quot;let&quot;&gt;let&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;const&lt;/code&gt; の両方に適用されます。</target>
        </trans-unit>
        <trans-unit id="7443631fd99cc8363c877fe55426401cba7849e3" translate="yes" xml:space="preserve">
          <source>All the other &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; instances (including &lt;a href=&quot;../map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../weakmap&quot;&gt;&lt;code&gt;WeakMap&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../weakset&quot;&gt;&lt;code&gt;WeakSet&lt;/code&gt;&lt;/a&gt;) will have only their enumerable properties serialized.</source>
          <target state="translated">他のすべての&lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;インスタンス（&lt;a href=&quot;../map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../weakmap&quot;&gt; &lt;code&gt;WeakMap&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../weakset&quot;&gt; &lt;code&gt;WeakSet&lt;/code&gt; を含む&lt;/a&gt;）では、列挙可能なプロパティのみがシリアル化されます。</target>
        </trans-unit>
        <trans-unit id="b559f400933c46f64da8e0e36f0e1b38620d2843" translate="yes" xml:space="preserve">
          <source>All three expressions in the head of the &lt;code&gt;for&lt;/code&gt; loop are optional.</source>
          <target state="translated">&lt;code&gt;for&lt;/code&gt; ループの先頭にある3つの式はすべてオプションです。</target>
        </trans-unit>
        <trans-unit id="a7f313e4caae01c6a7db9baf6465d18a4d65a50a" translate="yes" xml:space="preserve">
          <source>All traps are optional. If a trap has not been defined, the default behavior is to forward the operation to the target.</source>
          <target state="translated">すべてのトラップはオプションです。トラップが定義されていない場合、デフォルトの動作は操作をターゲットに転送することです。</target>
        </trans-unit>
        <trans-unit id="03c835b94e39ac017fcb8628d5781029d67298cd" translate="yes" xml:space="preserve">
          <source>Allocating and sharing memory</source>
          <target state="translated">メモリの割り当てと共有</target>
        </trans-unit>
        <trans-unit id="ab245396f4f89aec19c4a9a60c5bca3c9cf40621" translate="yes" xml:space="preserve">
          <source>Allow &lt;code&gt;.&lt;/code&gt; to match newlines (added in ECMAScript 2018)</source>
          <target state="translated">許可し &lt;code&gt;.&lt;/code&gt; 改行に一致させる（ECMAScript 2018で追加）</target>
        </trans-unit>
        <trans-unit id="501b33cc6854193606c0c70639ab25f97d0382a3" translate="yes" xml:space="preserve">
          <source>Allowed in sloppy mode</source>
          <target state="translated">スロッピーモードで許可されている</target>
        </trans-unit>
        <trans-unit id="375fcddc8bcc6bd74e08a786aa331a7ad79e9796" translate="yes" xml:space="preserve">
          <source>Allows a function to be defined that will be executed when an undefined object member is called as a method.</source>
          <target state="translated">未定義のオブジェクト・メンバがメソッドとして呼び出されたときに実行される関数の定義を許可します。</target>
        </trans-unit>
        <trans-unit id="c3e863389db44883a7db40578eaa7bacba367e5f" translate="yes" xml:space="preserve">
          <source>Allows the addition of properties to &lt;code&gt;Error&lt;/code&gt; instances.</source>
          <target state="translated">&lt;code&gt;Error&lt;/code&gt; インスタンスにプロパティを追加できます。</target>
        </trans-unit>
        <trans-unit id="59308717a2c094d78a0055308752447499b03524" translate="yes" xml:space="preserve">
          <source>Allows the addition of properties to a &lt;code&gt;Number&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;Number&lt;/code&gt; オブジェクトにプロパティを追加できます。</target>
        </trans-unit>
        <trans-unit id="4c29e82f98df1205c50185b2d7f53bf3b906c117" translate="yes" xml:space="preserve">
          <source>Allows the addition of properties to a &lt;code&gt;String&lt;/code&gt; object.</source>
          <target state="translated">プロパティを &lt;code&gt;String&lt;/code&gt; オブジェクトに追加できます。</target>
        </trans-unit>
        <trans-unit id="39081b8b6d9226bb3ffb8ac2e2567282d5cef7ce" translate="yes" xml:space="preserve">
          <source>Allows the addition of properties to a &lt;code&gt;SyntaxError&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;SyntaxError&lt;/code&gt; オブジェクトにプロパティを追加できます。</target>
        </trans-unit>
        <trans-unit id="9771e19a4f361cfab1b0f73cd9a0dc6d95e933b3" translate="yes" xml:space="preserve">
          <source>Allows the addition of properties to a &lt;code&gt;TypeError&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;TypeError&lt;/code&gt; オブジェクトにプロパティを追加できます。</target>
        </trans-unit>
        <trans-unit id="42d07e4163f2b424ff96ef9db80036f247a8891d" translate="yes" xml:space="preserve">
          <source>Allows the addition of properties to a &lt;code&gt;URIError&lt;/code&gt; object.</source>
          <target state="translated">プロパティを &lt;code&gt;URIError&lt;/code&gt; オブジェクトに追加できるようにします。</target>
        </trans-unit>
        <trans-unit id="0f4da43936ff925553a2a194df57b18e14e0864b" translate="yes" xml:space="preserve">
          <source>Allows the addition of properties to a JavaScript &lt;code&gt;Date&lt;/code&gt; object.</source>
          <target state="translated">JavaScript &lt;code&gt;Date&lt;/code&gt; オブジェクトにプロパティを追加できます。</target>
        </trans-unit>
        <trans-unit id="82f4d6ddde49f3576570ad4ccaa29a9284cb7e4b" translate="yes" xml:space="preserve">
          <source>Allows the addition of properties to all &lt;code&gt;ArrayBuffer&lt;/code&gt; objects.</source>
          <target state="translated">すべての &lt;code&gt;ArrayBuffer&lt;/code&gt; オブジェクトにプロパティを追加できます。</target>
        </trans-unit>
        <trans-unit id="4cc5e7f6fc0322fba2c517e5b5c258c47d7eb103" translate="yes" xml:space="preserve">
          <source>Allows the addition of properties to all &lt;code&gt;SharedArrayBuffer&lt;/code&gt; objects.</source>
          <target state="translated">すべての &lt;code&gt;SharedArrayBuffer&lt;/code&gt; オブジェクトにプロパティを追加できます。</target>
        </trans-unit>
        <trans-unit id="6488d256740fc3d126254f03c1c1a7336698fd3a" translate="yes" xml:space="preserve">
          <source>Allows the addition of properties to all array objects.</source>
          <target state="translated">すべての配列オブジェクトにプロパティを追加できるようにします。</target>
        </trans-unit>
        <trans-unit id="dbcd5ac942385db0cc7c8fa02a9f979de7eef33f" translate="yes" xml:space="preserve">
          <source>Allows the addition of properties to all async function objects.</source>
          <target state="translated">すべての非同期関数オブジェクトにプロパティを追加できるようにします。</target>
        </trans-unit>
        <trans-unit id="aa91d04417c2e9afa11118cbca6409f7ca5af35b" translate="yes" xml:space="preserve">
          <source>Allows the addition of properties to all generator function objects.</source>
          <target state="translated">すべてのジェネレータ関数オブジェクトにプロパティを追加できるようにします。</target>
        </trans-unit>
        <trans-unit id="0b4d6eb0217a375c85d87e78f2ba33b9c018199d" translate="yes" xml:space="preserve">
          <source>Allows the addition of properties to all objects of type Object.</source>
          <target state="translated">Object型のすべてのオブジェクトにプロパティを追加できるようにします。</target>
        </trans-unit>
        <trans-unit id="09b156dd07f2c2455b21b1ba2c0057f8f87d93b6" translate="yes" xml:space="preserve">
          <source>Allows the addition of properties to all objects.</source>
          <target state="translated">すべてのオブジェクトにプロパティを追加することができます。</target>
        </trans-unit>
        <trans-unit id="b36dad40952402b264f187628e35495f5b4c384c" translate="yes" xml:space="preserve">
          <source>Allows the addition of properties to an &lt;code&gt;EvalError&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;EvalError&lt;/code&gt; オブジェクトにプロパティを追加できます。</target>
        </trans-unit>
        <trans-unit id="57c12820597bbcc9de60b5f548ec897d46e4dbbc" translate="yes" xml:space="preserve">
          <source>Allows the addition of properties to an &lt;code&gt;RangeError&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;RangeError&lt;/code&gt; オブジェクトにプロパティを追加できるようにします。</target>
        </trans-unit>
        <trans-unit id="6ac1610eaa935d834161476d645a070e31701a38" translate="yes" xml:space="preserve">
          <source>Allows the addition of properties to an &lt;code&gt;ReferenceError&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;ReferenceError&lt;/code&gt; オブジェクトにプロパティを追加できるようにします。</target>
        </trans-unit>
        <trans-unit id="afe5a3d5c32faed222acd600172df57d6ffca30e" translate="yes" xml:space="preserve">
          <source>Allows the addition of properties to the &lt;code&gt;Number&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;Number&lt;/code&gt; オブジェクトにプロパティを追加できます。</target>
        </trans-unit>
        <trans-unit id="1d8beaf13822aabc5dd9c2425099584aade0fc84" translate="yes" xml:space="preserve">
          <source>Already has pragma</source>
          <target state="translated">すでにプラグマを持っている</target>
        </trans-unit>
        <trans-unit id="886c9e7779c740f4ed58e8ac8564475d6a676d3c" translate="yes" xml:space="preserve">
          <source>Also note that if one wishes to follow the more recent &lt;a href=&quot;http://tools.ietf.org/html/rfc3986&quot;&gt;RFC3986&lt;/a&gt; for URLs, which makes square brackets reserved (for IPv6) and thus not encoded when forming something which could be part of a URL (such as a host), the following code snippet may help:</source>
          <target state="translated">また、URLの最新の&lt;a href=&quot;http://tools.ietf.org/html/rfc3986&quot;&gt;RFC3986&lt;/a&gt;に従って、角かっこが予約され（IPv6の場合）、URLの一部となる可能性のあるもの（ホストなど）を形成するときにエンコードされない場合、次のコードスニペットが助けて：</target>
        </trans-unit>
        <trans-unit id="44aaa7e2f07613634bd606fcf151829ad848af49" translate="yes" xml:space="preserve">
          <source>Also note that the &lt;code&gt;throw&lt;/code&gt; statement is affected by &lt;a href=&quot;../lexical_grammar#Automatic_semicolon_insertion&quot;&gt;automatic semicolon insertion (ASI)&lt;/a&gt; as no line terminator between the &lt;code&gt;throw&lt;/code&gt; keyword and the expression is allowed.</source>
          <target state="translated">また、 &lt;code&gt;throw&lt;/code&gt; ステートメントは、 &lt;code&gt;throw&lt;/code&gt; キーワードと式の間の行終了&lt;a href=&quot;../lexical_grammar#Automatic_semicolon_insertion&quot;&gt;文字&lt;/a&gt;が許可されていないため、自動セミコロン挿入（ASI）の影響を受けることに注意してください。</target>
        </trans-unit>
        <trans-unit id="a190b20bed3e51ce14093300961fd4b596dc80da" translate="yes" xml:space="preserve">
          <source>Also note that this is creating a new view on the existing buffer; changes to the new object's contents will impact the original object and vice versa.</source>
          <target state="translated">また、これは既存のバッファに新しいビューを作成するものであり、新しいオブジェクトの内容を変更すると元のオブジェクトに影響を与えます。</target>
        </trans-unit>
        <trans-unit id="9634a42ed3f2b30027f314284994277dc76358bf" translate="yes" xml:space="preserve">
          <source>Also notice that conversion is not necessarily a 1:1 character mapping, as some characters might result in two (or even more) characters when transformed to upper-case. Therefore the length of the result string can differ from the input length. This also implies that the conversion is not stable, so i.E. the following can return &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">また、一部の文字は大文字に変換されると2つ（またはそれ以上）の文字になる可能性があるため、変換は必ずしも1：1文字マッピングではないことに注意してください。したがって、結果の文字列の長さは入力の長さと異なる場合があります。これは、変換が安定していないことも意味するため、次の場合は &lt;code&gt;false&lt;/code&gt; を返すことがあります。</target>
        </trans-unit>
        <trans-unit id="22654a7e5ebe06cd3b2ff3d692862b4b4e9908e1" translate="yes" xml:space="preserve">
          <source>Also see &lt;a href=&quot;global_objects/promise/all&quot;&gt;&lt;code&gt;Promise.all(iterable)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;global_objects/promise/race&quot;&gt;&lt;code&gt;Promise.race(iterable)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;global_objects/array/from&quot;&gt;&lt;code&gt;Array.from()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;global_objects/promise/all&quot;&gt; &lt;code&gt;Promise.all(iterable)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;global_objects/promise/race&quot;&gt; &lt;code&gt;Promise.race(iterable)&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;global_objects/array/from&quot;&gt; &lt;code&gt;Array.from()&lt;/code&gt; &lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="bd8342b555d8838875394ea5e29c358b31b39980" translate="yes" xml:space="preserve">
          <source>Also supported in Internet Explorer 8, but only on DOM objects and with some non-standard behaviors.</source>
          <target state="translated">Internet Explorer 8 でもサポートされていますが、DOM オブジェクトのみで、いくつかの非標準的な動作をします。</target>
        </trans-unit>
        <trans-unit id="7240bfc6e7a3b195bf0463cb2d757f8098c06b35" translate="yes" xml:space="preserve">
          <source>Also supported in Safari 5, but not on DOM objects.</source>
          <target state="translated">Safari 5 でもサポートされていますが、DOM オブジェクトではサポートされていません。</target>
        </trans-unit>
        <trans-unit id="fb25235cce3e6d3d998f0007febfaef976db7f71" translate="yes" xml:space="preserve">
          <source>Also supported in Safari for iOS 4.2, but not on DOM objects.</source>
          <target state="translated">iOS 4.2のSafariでもサポートされていますが、DOMオブジェクトではサポートされていません。</target>
        </trans-unit>
        <trans-unit id="e71aa5eaf431721abfe793237d22c0717904cfd7" translate="yes" xml:space="preserve">
          <source>Also, &lt;code&gt;NaN&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt; can also be stored in a Set. &lt;code&gt;NaN&lt;/code&gt; is considered the same as &lt;code&gt;NaN&lt;/code&gt; (even though &lt;code&gt;NaN !== NaN&lt;/code&gt;).</source>
          <target state="translated">また、 &lt;code&gt;NaN&lt;/code&gt; および &lt;code&gt;undefined&lt;/code&gt; もSetに格納できます。 &lt;code&gt;NaN&lt;/code&gt; は同じと考えられている &lt;code&gt;NaN&lt;/code&gt; （たとえ &lt;code&gt;NaN !== NaN&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="f59d9a1e0d5169058a635af2587d0104acc71315" translate="yes" xml:space="preserve">
          <source>Also, be sure that the global flag (&quot;&lt;code&gt;g&lt;/code&gt;&quot;) is set, or it will also cause an infinite loop.</source>
          <target state="translated">また、グローバルフラグ（ &quot; &lt;code&gt;g&lt;/code&gt; &quot;）が設定されていることを確認してください。設定されていないと、無限ループが発生します。</target>
        </trans-unit>
        <trans-unit id="b93c01e4f75dec68dae71fa7bb6210643be13e3e" translate="yes" xml:space="preserve">
          <source>Also, certain methods, such as &lt;a href=&quot;../global_objects/object/create&quot;&gt;&lt;code&gt;Object.create()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/symbol/keyfor&quot;&gt;&lt;code&gt;Symbol.keyFor()&lt;/code&gt;&lt;/a&gt;, require a specific type, that must be provided.</source>
          <target state="translated">また、&lt;a href=&quot;../global_objects/object/create&quot;&gt; &lt;code&gt;Object.create()&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;../global_objects/symbol/keyfor&quot;&gt; &lt;code&gt;Symbol.keyFor()&lt;/code&gt; &lt;/a&gt;などの特定のメソッドは、提供する必要がある特定のタイプを必要とします。</target>
        </trans-unit>
        <trans-unit id="fd0dfcc3a3cd12124e00748bc6aa31768abfdfd7" translate="yes" xml:space="preserve">
          <source>Also, check your syntax when using callbacks. Brackets and commas can get difficult easily.</source>
          <target state="translated">また、コールバックを使用する際には構文をチェックしてください。括弧とカンマは簡単に難しくなる可能性があります。</target>
        </trans-unit>
        <trans-unit id="5b04c7a5831dedb851aed975f051c1cac400682e" translate="yes" xml:space="preserve">
          <source>Alternation</source>
          <target state="translated">Alternation</target>
        </trans-unit>
        <trans-unit id="3b74e96e489cf616e54374e5e92ff3290101f441" translate="yes" xml:space="preserve">
          <source>Alternative</source>
          <target state="translated">Alternative</target>
        </trans-unit>
        <trans-unit id="5c4643987233045b798981975d91bef3917972f2" translate="yes" xml:space="preserve">
          <source>Alternative URI encoding scheme is Base62x, which has been ported into NPM.</source>
          <target state="translated">代替のURIエンコーディング方式としてBase62xがありますが、これはNPMに移植されています。</target>
        </trans-unit>
        <trans-unit id="66e43821463119922caa2a3f2d670aa183764fad" translate="yes" xml:space="preserve">
          <source>Alternative iteration</source>
          <target state="translated">代替イテレーション</target>
        </trans-unit>
        <trans-unit id="27c5ad050b554e2ceb89c360fc83e65cd724c40f" translate="yes" xml:space="preserve">
          <source>Alternative standard syntax</source>
          <target state="translated">代替標準構文</target>
        </trans-unit>
        <trans-unit id="927d823c46c4f09b7d355ef52e10f95d67521db8" translate="yes" xml:space="preserve">
          <source>Alternative standard syntax using Date methods</source>
          <target state="translated">Dateメソッドを使用した代替の標準構文</target>
        </trans-unit>
        <trans-unit id="8e7367387d4a21b8391d0907ab087058608214ad" translate="yes" xml:space="preserve">
          <source>Alternative standard syntax using the ECMAScript Intl API</source>
          <target state="translated">ECMAScript Intl API を使用した代替標準構文</target>
        </trans-unit>
        <trans-unit id="5bd59819542ae350dbb9ee6ff1577fe49af883ef" translate="yes" xml:space="preserve">
          <source>Alternatively written with an arrow function:</source>
          <target state="translated">また、矢印関数を使って書くこともできます。</target>
        </trans-unit>
        <trans-unit id="26b6739998f2a62f72de88d5a8efe1cb484a7ca8" translate="yes" xml:space="preserve">
          <source>Alternatively, &lt;a href=&quot;../operators/typeof&quot;&gt;&lt;code&gt;typeof&lt;/code&gt;&lt;/a&gt; can be used:</source>
          <target state="translated">または、&lt;a href=&quot;../operators/typeof&quot;&gt; &lt;code&gt;typeof&lt;/code&gt; &lt;/a&gt;を使用することもできます。</target>
        </trans-unit>
        <trans-unit id="d4ff16c9a90b8e9758ad7e5b9a70d6dedd029a0e" translate="yes" xml:space="preserve">
          <source>Alternatively, a &lt;a href=&quot;../global_objects/function/bind&quot;&gt;bound function&lt;/a&gt; could be created so that a preassigned &lt;code&gt;this&lt;/code&gt; value would be passed to the bound target function (the &lt;code&gt;growUp()&lt;/code&gt; function in the example above).</source>
          <target state="translated">または、&lt;a href=&quot;../global_objects/function/bind&quot;&gt;バインドされた関数&lt;/a&gt;を作成して、事前に割り当てられた &lt;code&gt;this&lt;/code&gt; 値がバインドされたターゲット関数（上記の例では &lt;code&gt;growUp()&lt;/code&gt; 関数）に渡されるようにすることもできます。</target>
        </trans-unit>
        <trans-unit id="fd66b7bec1b72fba1b7aff09ea92acd8e014a5b6" translate="yes" xml:space="preserve">
          <source>Alternatively, if you need full 64-bit range, you can create a &lt;a href=&quot;bigint&quot;&gt;&lt;code&gt;BigInt&lt;/code&gt;&lt;/a&gt;. Further, although native BigInts are much faster than user-land library equivalents, BigInts will always be much slower than 32-bit integers in JavaScript due to the nature of their variable size.</source>
          <target state="translated">または、64ビット範囲全体が必要な場合は、&lt;a href=&quot;bigint&quot;&gt; &lt;code&gt;BigInt&lt;/code&gt; &lt;/a&gt;を作成できます。さらに、ネイティブBigIntは、ユーザーランドライブラリの同等のものよりもはるかに高速ですが、BigIntは、可変サイズの性質上、JavaScriptの32ビット整数よりも常にはるかに低速になります。</target>
        </trans-unit>
        <trans-unit id="c2884d41947058d4e3ffdbc5353f5e1fa693787a" translate="yes" xml:space="preserve">
          <source>Alternatively, the &lt;a href=&quot;../operators/destructuring_assignment&quot;&gt;Destructuring Assignment &lt;/a&gt;syntax can also be used to declare variables.</source>
          <target state="translated">または、&lt;a href=&quot;../operators/destructuring_assignment&quot;&gt;DestructuringAssignment&lt;/a&gt;構文を使用して変数を宣言することもできます。</target>
        </trans-unit>
        <trans-unit id="70393d2730698e5a1714b97dc6f746ef40d4111f" translate="yes" xml:space="preserve">
          <source>Alternatively, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment&quot;&gt;Destructuring Assignment &lt;/a&gt;syntax can also be used to declare variables.</source>
          <target state="translated">または、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment&quot;&gt;DestructuringAssignment&lt;/a&gt;構文を使用して変数を宣言することもできます。</target>
        </trans-unit>
        <trans-unit id="00d5207d6428c3fadad5b655770cb668cbf00390" translate="yes" xml:space="preserve">
          <source>Alternatively, written with an arrow function:</source>
          <target state="translated">または、矢印関数を使って書く。</target>
        </trans-unit>
        <trans-unit id="59900b700e7f1680e65a6db2c48f71aebf87123b" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use &lt;a href=&quot;../functions/arrow_functions&quot;&gt;arrow functions&lt;/a&gt;:</source>
          <target state="translated">または、&lt;a href=&quot;../functions/arrow_functions&quot;&gt;矢印関数&lt;/a&gt;を使用できます。</target>
        </trans-unit>
        <trans-unit id="3a4be7155bcffba0850c80a370bc5c6b34c37e74" translate="yes" xml:space="preserve">
          <source>Alternatives</source>
          <target state="translated">Alternatives</target>
        </trans-unit>
        <trans-unit id="04343d04daa907e29635a443e8bc5dea7deffd8d" translate="yes" xml:space="preserve">
          <source>Although &lt;a href=&quot;../string&quot;&gt;strings&lt;/a&gt; are native, Array-like objects, they are not suitable in applications of this method, as strings are immutable. Similarly for the native, Array-like object &lt;a href=&quot;../../functions/arguments&quot;&gt;arguments&lt;/a&gt;.</source>
          <target state="translated">が、&lt;a href=&quot;../string&quot;&gt;文字列は&lt;/a&gt;ネイティブ、アレイのようなオブジェクトである文字列は不変で、彼らは、この方法の用途には適していません。同様に、ネイティブの配列のようなオブジェクト&lt;a href=&quot;../../functions/arguments&quot;&gt;引数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c2083a9390d250b358c522453db1a47a2a6ce349" translate="yes" xml:space="preserve">
          <source>Although &lt;a href=&quot;https://en.wikipedia.org/wiki/Byte_order_mark&quot;&gt;BOM&lt;/a&gt; before hashbang comment will work in a browser it is not advised to use BOM in a script with hasbang. BOM will not work when you try to run the script in Unix/Linux. So use UTF-8 without BOM if you want to run scripts directly from shell.</source>
          <target state="translated">けれども&lt;a href=&quot;https://en.wikipedia.org/wiki/Byte_order_mark&quot;&gt;BOM&lt;/a&gt; hashbangコメントは、hasbangとスクリプトでBOMを使用することをお勧めされていないブラウザで動作する前に。Unix / Linuxでスクリプトを実行しようとすると、BOMは機能しません。したがって、シェルから直接スクリプトを実行する場合は、BOMなしでUTF-8を使用してください。</target>
        </trans-unit>
        <trans-unit id="f2db97b3e031b9d9e85bb466a7476dc6f765df58" translate="yes" xml:space="preserve">
          <source>Although ECMAScript makes iteration order of objects implementation-dependent, it may appear that all major browsers support an iteration order based on the earliest added property coming first (at least for properties not on the prototype). However, in the case of Internet Explorer, when one uses &lt;code&gt;delete&lt;/code&gt; on a property, some confusing behavior results, preventing other browsers from using simple objects like object literals as ordered associative arrays. In Explorer, while the property &lt;em&gt;value&lt;/em&gt; is indeed set to &lt;code&gt;undefined&lt;/code&gt;, if one later adds back a property with the same name, the property will be iterated in its &lt;em&gt;old&lt;/em&gt; position--not at the end of the iteration sequence as one might expect after having deleted the property and then added it back.</source>
          <target state="translated">ECMAScriptはオブジェクトの反復順序を実装に依存させますが、すべての主要なブラウザーは、最初に追加された最初のプロパティに基づいて反復順序をサポートしているように見える場合があります（少なくともプロトタイプにないプロパティの場合）。ただし、Internet Explorerの場合、プロパティで &lt;code&gt;delete&lt;/code&gt; を使用すると、混乱を招く動作が発生し、他のブラウザがオブジェクトリテラルなどの単純なオブジェクトを順序付けられた連想配列として使用できなくなります。Explorerでは、プロパティ&lt;em&gt;値&lt;/em&gt;は実際には &lt;code&gt;undefined&lt;/code&gt; に設定されていますが、後で同じ名前のプロパティを追加し直すと、そのプロパティは&lt;em&gt;古い&lt;/em&gt;もので繰り返されます。&lt;em&gt;&lt;/em&gt; 位置-プロパティを削除してから再度追加した後に予想されるように、反復シーケンスの最後ではありません。</target>
        </trans-unit>
        <trans-unit id="328b8e5ce667becc8fa587f48ab12b9cf6842be4" translate="yes" xml:space="preserve">
          <source>Although ECMAScript makes iteration order of objects implementation-dependent, it may appear that all major browsers support an iteration order based on the earliest added property coming first (at least for properties not on the prototype). However, in the case of Internet Explorer, when one uses &lt;code&gt;delete&lt;/code&gt; on a property, some confusing behavior results, preventing other browsers from using simple objects like object literals as ordered associative arrays. In Explorer, while the property &lt;em&gt;value&lt;/em&gt; is indeed set to undefined, if one later adds back a property with the same name, the property will be iterated in its &lt;em&gt;old&lt;/em&gt; position--not at the end of the iteration sequence as one might expect after having deleted the property and then added it back.</source>
          <target state="translated">ECMAScriptはオブジェクトの反復順序を実装に依存しますが、すべての主要なブラウザーは、最初に追加される最も早いプロパティに基づいて反復順序をサポートしているように見えることがあります（少なくともプロトタイプにないプロパティの場合）。ただし、Internet Explorerの場合、プロパティで &lt;code&gt;delete&lt;/code&gt; を使用すると、混乱を招く動作が発生し、他のブラウザーがオブジェクトリテラルなどの単純なオブジェクトを順序付き連想配列として使用できなくなります。エクスプローラーでは、プロパティ&lt;em&gt;値&lt;/em&gt;は確かにundefinedに設定されていますが、後で同じ名前のプロパティを追加すると、プロパティは&lt;em&gt;古い&lt;/em&gt;シーケンスで繰り返されます-繰り返しシーケンスの最後ではなく、プロパティを削除して、再度追加しました。</target>
        </trans-unit>
        <trans-unit id="df611df78cbb5fc9f13c1bd69cd88218180c8dba" translate="yes" xml:space="preserve">
          <source>Although discouraged by ECMAScript 3 and forbidden by ECMAScript 5, many implementations interpret a numeric string beginning with a leading &lt;code&gt;0&lt;/code&gt; as octal. The following may have an octal result, or it may have a decimal result. &lt;code&gt;&lt;var&gt;radix&lt;/var&gt;&lt;/code&gt;</source>
          <target state="translated">ECMAScript 3では推奨されておらず、ECMAScript 5では禁止されていますが、多くの実装では、先頭の &lt;code&gt;0&lt;/code&gt; で始まる数値文字列を8進数として解釈します。以下は、8進数の結果になる場合と、10進数の結果になる場合があります。 &lt;code&gt;&lt;var&gt;radix&lt;/var&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1f2ff42eeaabd4a54d8ef5d9fc28c814839b4216" translate="yes" xml:space="preserve">
          <source>Although discouraged by ECMAScript 3 and forbidden by ECMAScript 5, many implementations interpret a numeric string beginning with a leading &lt;code&gt;0&lt;/code&gt; as octal. The following may have an octal result, or it may have a decimal result. &lt;strong&gt;Always specify a radix to avoid this unreliable behavior.&lt;/strong&gt;</source>
          <target state="translated">ECMAScript 3では推奨されておらず、ECMAScript 5では禁止されていますが、多くの実装では、先頭の &lt;code&gt;0&lt;/code&gt; で始まる数値文字列を8進数として解釈します。次の結果は8進数の結果になる場合と、10進数の結果になる場合があります。&lt;strong&gt;この信頼できない動作を回避するために、常に基数を指定してください。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0e546fa6a556e999400a21488ad947d7ca555cc0" translate="yes" xml:space="preserve">
          <source>Although host objects (such as DOM objects) are not required by spec to follow the Mozilla behavior when converted by &lt;code&gt;Array.prototype.slice&lt;/code&gt; and IE &amp;lt; 9 does not do so, versions of IE starting with version 9 do allow this. &amp;ldquo;Shimming&amp;rdquo; it can allow reliable cross-browser behavior. As long as other modern browsers continue to support this ability, as currently do IE, Mozilla, Chrome, Safari, and Opera, developers reading (DOM-supporting) slice code relying on this shim will not be misled by the semantics; they can safely rely on the semantics to provide the now apparently &lt;em&gt;de facto&lt;/em&gt; standard behavior. (The shim also fixes IE to work with the second argument of &lt;code&gt;slice()&lt;/code&gt; being an explicit &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; value as earlier versions of IE also did not allow but all modern browsers, including IE &amp;gt;= 9, now do.)</source>
          <target state="translated">ホストオブジェクト（DOMオブジェクトなど）は、 &lt;code&gt;Array.prototype.slice&lt;/code&gt; によって変換されたときのMozillaの動作に従う必要はなく、IE &amp;lt;9でもそうではありませんが、バージョン9以降のIEのバージョンではこれが可能です。 「シミング」は、信頼できるクロスブラウザ動作を可能にします。現在IE、Mozilla、Chrome、Safari、Operaと同様に、他の最新のブラウザーがこの機能をサポートしている限り、このシムに依存する（DOMをサポートする）スライスコードを読み取る開発者は、セマンティクスに惑わされることはありません。彼らは安全にセマンティクスに依存して、現在は明らかに&lt;em&gt;事実上の&lt;/em&gt;標準的な動作を提供できます。 （シムは、IEが &lt;code&gt;slice()&lt;/code&gt; の 2番目の引数が明示的な&lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;も動作するように修正します 以前のバージョンのIEも許可していませんでしたが、IE&amp;gt; = 9を含むすべての最新のブラウザーでは許可されています）。</target>
        </trans-unit>
        <trans-unit id="677f3d7595a2ad40aa5a76dea236adc2d8d4b9f4" translate="yes" xml:space="preserve">
          <source>Although most common Unicode values can be represented with one 16-bit number (as expected early on during JavaScript standardization) and &lt;code&gt;fromCharCode()&lt;/code&gt; can be used to return a single character for the most common values (i.e., UCS-2 values which are the subset of UTF-16 with the most common characters), in order to deal with ALL legal Unicode values (up to 21 bits), &lt;code&gt;fromCharCode()&lt;/code&gt; alone is inadequate. Since the higher code point characters use two (lower value) &quot;surrogate&quot; numbers to form a single character, &lt;a href=&quot;fromcodepoint&quot;&gt;&lt;code&gt;String.fromCodePoint()&lt;/code&gt;&lt;/a&gt; (part of the ES2015 standard) can be used to return such a pair and thus adequately represent these higher valued characters.</source>
          <target state="translated">最も一般的なUnicode値は1つの16ビット数で表すことができますが（JavaScript標準化の初期の段階で予想される &lt;code&gt;fromCharCode()&lt;/code&gt; ）、fromCharCode（）を使用して最も一般的な値（つまり、UCS-2値であるUCS-2値）を返すことができます最も一般的な文字を含むUTF-16のサブセット）、すべての正当なUnicode値（最大21ビット）を処理するには、 &lt;code&gt;fromCharCode()&lt;/code&gt; だけでは不十分です。高いコードポイント文字は2つの（低い値）「代理」番号を使用して単一の文字を形成するため、&lt;a href=&quot;fromcodepoint&quot;&gt; &lt;code&gt;String.fromCodePoint()&lt;/code&gt; &lt;/a&gt;（ES2015標準の一部）を使用してそのようなペアを返し、これらの高い値の文字を適切に表すことができます。 。</target>
        </trans-unit>
        <trans-unit id="fafc754b4e1f1a6abde2232b1dfb74cc16e07223" translate="yes" xml:space="preserve">
          <source>Although the &lt;a href=&quot;../evalerror&quot;&gt;&lt;code&gt;EvalError&lt;/code&gt;&lt;/a&gt; prototype object does not contain any methods of its own, &lt;a href=&quot;../evalerror&quot;&gt;&lt;code&gt;EvalError&lt;/code&gt;&lt;/a&gt; instances do inherit some methods through the prototype chain.</source>
          <target state="translated">が&lt;a href=&quot;../evalerror&quot;&gt; &lt;code&gt;EvalError&lt;/code&gt; の&lt;/a&gt;プロトタイプオブジェクトが自分自身のいずれかの方法を含んでいない、&lt;a href=&quot;../evalerror&quot;&gt; &lt;code&gt;EvalError&lt;/code&gt; の&lt;/a&gt;インスタンスはプロトタイプチェーンを通じて継承にいくつかの方法を実行します。</target>
        </trans-unit>
        <trans-unit id="3c4831a007000b96eb848de60d92020501941170" translate="yes" xml:space="preserve">
          <source>Although the &lt;a href=&quot;../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; prototype object does not contain any methods of its own, &lt;a href=&quot;../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; instances do inherit some methods through the prototype chain.</source>
          <target state="translated">が&lt;a href=&quot;../rangeerror&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; &lt;/a&gt;プロトタイプオブジェクトが自分自身のいずれかの方法を含んでいない、&lt;a href=&quot;../rangeerror&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; &lt;/a&gt;インスタンスはプロトタイプチェーンを通していくつかのメソッドを継承します。</target>
        </trans-unit>
        <trans-unit id="d92a5719e2fe25bf2728cd1c78c468fd8c46af67" translate="yes" xml:space="preserve">
          <source>Although the &lt;a href=&quot;../referenceerror&quot;&gt;&lt;code&gt;ReferenceError&lt;/code&gt;&lt;/a&gt; prototype object does not contain any methods of its own, &lt;a href=&quot;../referenceerror&quot;&gt;&lt;code&gt;ReferenceError&lt;/code&gt;&lt;/a&gt; instances do inherit some methods through the prototype chain.</source>
          <target state="translated">けれども&lt;a href=&quot;../referenceerror&quot;&gt; &lt;code&gt;ReferenceError&lt;/code&gt; &lt;/a&gt;プロトタイプオブジェクトが自分自身のいずれかの方法を含んでいない、&lt;a href=&quot;../referenceerror&quot;&gt; &lt;code&gt;ReferenceError&lt;/code&gt; &lt;/a&gt;インスタンスはプロトタイプチェーンを通じて継承にいくつかの方法を実行します。</target>
        </trans-unit>
        <trans-unit id="c2a69757a0f96d3d2cf4f6cf73c6af0caae6f12f" translate="yes" xml:space="preserve">
          <source>Although the &lt;a href=&quot;../syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; prototype object does not contain any methods of its own, &lt;a href=&quot;../syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; instances do inherit some methods through the prototype chain.</source>
          <target state="translated">けれども&lt;a href=&quot;../syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;プロトタイプオブジェクトが自分自身のいずれかの方法を含んでいない、&lt;a href=&quot;../syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;インスタンスはプロトタイプチェーンを通じて継承にいくつかの方法を実行します。</target>
        </trans-unit>
        <trans-unit id="2acdacdb34fc633b27ece5839ed9e2ab1df04b80" translate="yes" xml:space="preserve">
          <source>Although the &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; prototype object does not contain any methods of its own, &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; instances do inherit some methods through the prototype chain.</source>
          <target state="translated">が、&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;プロトタイプオブジェクトが自分自身のいずれかの方法を含んでいない、&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; 例外の&lt;/a&gt;インスタンスはプロトタイプチェーンを通していくつかのメソッドを継承します。</target>
        </trans-unit>
        <trans-unit id="1f03aefc5ea645d10ba9840a1cb282430fb58ff9" translate="yes" xml:space="preserve">
          <source>Although the &lt;a href=&quot;../urierror&quot;&gt;&lt;code&gt;URIError&lt;/code&gt;&lt;/a&gt; prototype object does not contain any methods of its own, &lt;a href=&quot;../urierror&quot;&gt;&lt;code&gt;URIError&lt;/code&gt;&lt;/a&gt; instances do inherit some methods through the prototype chain.</source>
          <target state="translated">が&lt;a href=&quot;../urierror&quot;&gt; &lt;code&gt;URIError&lt;/code&gt; の&lt;/a&gt;プロトタイプオブジェクトが自分自身のいずれかの方法を含んでいない、&lt;a href=&quot;../urierror&quot;&gt; &lt;code&gt;URIError&lt;/code&gt; の&lt;/a&gt;インスタンスはプロトタイプチェーンを通じて継承にいくつかの方法を実行します。</target>
        </trans-unit>
        <trans-unit id="266ec2a96c1bd291182ec8f1ea68bd537baff4d0" translate="yes" xml:space="preserve">
          <source>Although the &lt;a href=&quot;evalerror&quot;&gt;&lt;code&gt;EvalError&lt;/code&gt;&lt;/a&gt; prototype object does not contain any methods of its own, &lt;a href=&quot;evalerror&quot;&gt;&lt;code&gt;EvalError&lt;/code&gt;&lt;/a&gt; instances do inherit some methods through the prototype chain.</source>
          <target state="translated">が&lt;a href=&quot;evalerror&quot;&gt; &lt;code&gt;EvalError&lt;/code&gt; の&lt;/a&gt;プロトタイプオブジェクトが自分自身のいずれかの方法を含んでいない、&lt;a href=&quot;evalerror&quot;&gt; &lt;code&gt;EvalError&lt;/code&gt; の&lt;/a&gt;インスタンスはプロトタイプチェーンを通じて継承にいくつかの方法を実行します。</target>
        </trans-unit>
        <trans-unit id="884cd0ce185093baffafa4f40619abb1549b7bb2" translate="yes" xml:space="preserve">
          <source>Although the &lt;a href=&quot;rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; prototype object does not contain any methods of its own, &lt;a href=&quot;rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; instances do inherit some methods through the prototype chain.</source>
          <target state="translated">が&lt;a href=&quot;rangeerror&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; &lt;/a&gt;プロトタイプオブジェクトが自分自身のいずれかの方法を含んでいない、&lt;a href=&quot;rangeerror&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; &lt;/a&gt;インスタンスはプロトタイプチェーンを通していくつかのメソッドを継承します。</target>
        </trans-unit>
        <trans-unit id="84f42a7b014bc014883bc4094f392c1d2ce76a19" translate="yes" xml:space="preserve">
          <source>Although the &lt;a href=&quot;referenceerror&quot;&gt;&lt;code&gt;ReferenceError&lt;/code&gt;&lt;/a&gt; prototype object does not contain any methods of its own, &lt;a href=&quot;referenceerror&quot;&gt;&lt;code&gt;ReferenceError&lt;/code&gt;&lt;/a&gt; instances do inherit some methods through the prototype chain.</source>
          <target state="translated">けれども&lt;a href=&quot;referenceerror&quot;&gt; &lt;code&gt;ReferenceError&lt;/code&gt; &lt;/a&gt;プロトタイプオブジェクトが自分自身のいずれかの方法を含んでいない、&lt;a href=&quot;referenceerror&quot;&gt; &lt;code&gt;ReferenceError&lt;/code&gt; &lt;/a&gt;インスタンスはプロトタイプチェーンを通じて継承にいくつかの方法を実行します。</target>
        </trans-unit>
        <trans-unit id="ddb9448464c98e6d812bfeed973d2389d2b1893d" translate="yes" xml:space="preserve">
          <source>Although the &lt;a href=&quot;syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; prototype object does not contain any methods of its own, &lt;a href=&quot;syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; instances do inherit some methods through the prototype chain.</source>
          <target state="translated">けれども&lt;a href=&quot;syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;プロトタイプオブジェクトが自分自身のいずれかの方法を含んでいない、&lt;a href=&quot;syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;インスタンスはプロトタイプチェーンを通じて継承にいくつかの方法を実行します。</target>
        </trans-unit>
        <trans-unit id="83458f1de95a00f961550d6dc892f06c5b650573" translate="yes" xml:space="preserve">
          <source>Although the &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; prototype object does not contain any methods of its own, &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; instances do inherit some methods through the prototype chain.</source>
          <target state="translated">が、&lt;a href=&quot;typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;プロトタイプオブジェクトが自分自身のいずれかの方法を含んでいない、&lt;a href=&quot;typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; 例外の&lt;/a&gt;インスタンスはプロトタイプチェーンを通していくつかのメソッドを継承します。</target>
        </trans-unit>
        <trans-unit id="c4f3a2858e493804909a70d1e337183d9006e690" translate="yes" xml:space="preserve">
          <source>Although the &lt;a href=&quot;urierror&quot;&gt;&lt;code&gt;URIError&lt;/code&gt;&lt;/a&gt; prototype object does not contain any methods of its own, &lt;a href=&quot;urierror&quot;&gt;&lt;code&gt;URIError&lt;/code&gt;&lt;/a&gt; instances do inherit some methods through the prototype chain.</source>
          <target state="translated">が&lt;a href=&quot;urierror&quot;&gt; &lt;code&gt;URIError&lt;/code&gt; の&lt;/a&gt;プロトタイプオブジェクトが自分自身のいずれかの方法を含んでいない、&lt;a href=&quot;urierror&quot;&gt; &lt;code&gt;URIError&lt;/code&gt; の&lt;/a&gt;インスタンスはプロトタイプチェーンを通じて継承にいくつかの方法を実行します。</target>
        </trans-unit>
        <trans-unit id="d449a8319004d48cb02ff0d15a7ea572fe5785fc" translate="yes" xml:space="preserve">
          <source>Although the arrow in an arrow function is not an operator, arrow functions have special parsing rules that interact differently with &lt;a href=&quot;../operators/operator_precedence&quot;&gt;operator precedence&lt;/a&gt; compared to regular functions.</source>
          <target state="translated">アロー関数のアローは演算子ではありませんが、アロー関数には、通常の関数と比較して&lt;a href=&quot;../operators/operator_precedence&quot;&gt;演算子の優先順位&lt;/a&gt;とは異なる方法で相互作用する特別な解析規則があります。</target>
        </trans-unit>
        <trans-unit id="35b6d3925177a2722ac72ca4338608faa6012f1e" translate="yes" xml:space="preserve">
          <source>Although the keys of an ordinary &lt;code&gt;Object&lt;/code&gt; are ordered now, they didn't used to be, and the order is complex. As a result, it's best not to rely on property order.</source>
          <target state="translated">通常の &lt;code&gt;Object&lt;/code&gt; キーは現在順序付けられていますが、以前は順序付けられておらず、順序は複雑です。結果として、プロパティの順序に依存しないことが最善です。</target>
        </trans-unit>
        <trans-unit id="9ee2ed9d8a6534cc88e49b1a823010ed05b9590e" translate="yes" xml:space="preserve">
          <source>Although the specification allows custom type tags for non-standard exotic objects, it requires those type tags to be different from the predefined ones. The case of &lt;code&gt;document.all&lt;/code&gt; having type &lt;code&gt;'undefined'&lt;/code&gt; is classified in the web standards as a &quot;willful violation&quot; of the original ECMA JavaScript standard.</source>
          <target state="translated">仕様では、非標準のエキゾチックオブジェクトのカスタムタイプタグが許可されていますが、これらのタイプタグは事前定義されたものとは異なる必要があります。タイプが &lt;code&gt;'undefined'&lt;/code&gt; の &lt;code&gt;document.all&lt;/code&gt; のケースは、Web標準では元のECMA JavaScript標準の「故意の違反」として分類されます。</target>
        </trans-unit>
        <trans-unit id="f2fed62b1ff8db7cfc94e680e62f79c05a7033e5" translate="yes" xml:space="preserve">
          <source>Always display the currency for the strings and numbers in the &lt;code&gt;prices&lt;/code&gt; array:</source>
          <target state="translated">常に文字列と数値の通貨を &lt;code&gt;prices&lt;/code&gt; 配列に表示します。</target>
        </trans-unit>
        <trans-unit id="b34a1498036c9217b403724da797c02ef21661c3" translate="yes" xml:space="preserve">
          <source>Always use the new operator to create a SharedArrayBuffer</source>
          <target state="translated">常に新しい演算子を使用して SharedArrayBuffer を作成します。</target>
        </trans-unit>
        <trans-unit id="de344142ebe59faa564c70aee1d3036521d494c3" translate="yes" xml:space="preserve">
          <source>Ambiguity contra</source>
          <target state="translated">曖昧さの禁則</target>
        </trans-unit>
        <trans-unit id="758f3bda62509c3e851edde04e493f8364a35817" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../../iteration_protocols#The_iterable_protocol&quot;&gt;iterable&lt;/a&gt; object such as an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;などの&lt;a href=&quot;../../iteration_protocols#The_iterable_protocol&quot;&gt;反復可能な&lt;/a&gt;オブジェクト。</target>
        </trans-unit>
        <trans-unit id="8cdcfe60dc9ba0c10bd4657fa2faeae582572dfc" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../../iteration_protocols#The_iterable_protocol&quot;&gt;iterable&lt;/a&gt; object such as an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;などの&lt;a href=&quot;../../iteration_protocols#The_iterable_protocol&quot;&gt;反復可能な&lt;/a&gt;オブジェクト。</target>
        </trans-unit>
        <trans-unit id="6404b312ad7915d95e80ce14e58e764300a869c2" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; containing substrings as its elements.</source>
          <target state="translated">&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;の要素としてストリングを含みます。</target>
        </trans-unit>
        <trans-unit id="0e9dedc62d10f465d5626a637b0c88c5237852e9" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; containing the entire match result and any parentheses-captured matched results, or &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; if there were no matches.</source>
          <target state="translated">&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;全体の一致結果および任意含有一致結果、または括弧は捕捉&lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;全く一致が存在しない場合。</target>
        </trans-unit>
        <trans-unit id="0903607cf4bfee31ccf89993f3cacdf41e7d64e5" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of objects containing the formatted date in parts.</source>
          <target state="translated">部分的にフォーマットされた日付を含むオブジェクトの&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5ba9f97d3e017eca251db2467034301d110c9b45" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of objects containing the formatted number in parts.</source>
          <target state="translated">フォーマットされた数値を部分的に含むオブジェクトの&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6f919f6fbefb61e93d063e3c123e6529b7649369" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of plural rules used by the given language.</source>
          <target state="translated">指定された言語で使用される複数の規則の&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b4f7be06c4d9ae792255ebc0250f2b2640e62ce1" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of strings split at each point where the separator occurs in the given string.</source>
          <target state="translated">指定された文字列でセパレータが発生する各ポイントで分割される文字列の&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ac0f90ad101d6c46f839605274cec934b2b37b8b" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of strings, split at each point where the &lt;code&gt;&lt;var&gt;separator&lt;/var&gt;&lt;/code&gt; occurs in the given string.</source>
          <target state="translated">指定された文字列で &lt;code&gt;&lt;var&gt;separator&lt;/var&gt;&lt;/code&gt; が発生する各ポイントで分割された文字列の&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8fd83602883e4241d6c28fa7240f8ee67a39577d" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of the &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt; object's own property keys.</source>
          <target state="translated">&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;の &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt; オブジェクト自身のプロパティキー。</target>
        </trans-unit>
        <trans-unit id="b6783311dffe802f4a992de2529c1f746e8576d9" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of the &lt;code&gt;target&lt;/code&gt; object's own property keys.</source>
          <target state="translated">&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;の &lt;code&gt;target&lt;/code&gt; オブジェクト自身のプロパティキー。</target>
        </trans-unit>
        <trans-unit id="c2cc22b09fb25f028b1cc8c631aabc8169bde3a5" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; whose contents depend on the presence or absence of the global (&lt;code&gt;g&lt;/code&gt;) flag, or &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; if no matches are found.</source>
          <target state="translated">内容がグローバル（ &lt;code&gt;g&lt;/code&gt; ）フラグの有無に依存する&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;、または一致するものが見つからない場合は&lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d1ff45237a73749bc79cec7236b4fa98e13289eb" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; object from which to transfer.</source>
          <target state="translated">転送元の&lt;a href=&quot;../arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;オブジェクト。</target>
        </trans-unit>
        <trans-unit id="f8a28c6de0d09f25f28c1bf6c7e720447e370203" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; with two properties:</source>
          <target state="translated">&lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;二つの性質を持ちます：</target>
        </trans-unit>
        <trans-unit id="6b8ff625c2201a9d73ca060be123ef05f8533d5a" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; or other &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/iterable&quot;&gt;iterable&lt;/a&gt; object whose elements are key-value pairs (arrays with two elements, e.g. &lt;code&gt;[[ 1, 'one' ],[ 2, 'two' ]]&lt;/code&gt;). Each key-value pair is added to the new &lt;code&gt;Map&lt;/code&gt;; &lt;code&gt;null&lt;/code&gt; values are treated as &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;または他の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/iterable&quot;&gt;反復可能な&lt;/a&gt;要素が、キーと値のペア（二つの要素、例えばて配列されているオブジェクト &lt;code&gt;[[ 1, 'one' ],[ 2, 'two' ]]&lt;/code&gt; ）。キーと値の各ペアが新しい &lt;code&gt;Map&lt;/code&gt; に追加されます。 &lt;code&gt;null&lt;/code&gt; 値は &lt;code&gt;undefined&lt;/code&gt; として扱われます。</target>
        </trans-unit>
        <trans-unit id="cb51764372fd9fd0f63d909fe7db0bc8d3cc4874" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ArrayBufferView&quot;&gt;&lt;code&gt;ArrayBufferView&lt;/code&gt;&lt;/a&gt; with elements will cause a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, as they are views over memory and will definitely cause other possible issues:</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ArrayBufferView&quot;&gt; &lt;code&gt;ArrayBufferView&lt;/code&gt; &lt;/a&gt;要素を持つが原因となります&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;、彼らはメモリの景色があるとして、間違いなく他の可能性のある問題が発生します：</target>
        </trans-unit>
        <trans-unit id="67afce71a388ef0eb6c0cac3db9777304b18b55e" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#Expressions&quot;&gt;expression&lt;/a&gt; that is considered to be either &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/truthy&quot;&gt;truthy&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/falsy&quot;&gt;falsy&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#Expressions&quot;&gt;表現&lt;/a&gt;のいずれかであると考えられて&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/truthy&quot;&gt;truthy&lt;/a&gt;または&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/falsy&quot;&gt;falsy&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="eddf32b00953adfd2d1de1f50238906851377293" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/API/ArrayBufferView&quot;&gt;&lt;code&gt;ArrayBufferView&lt;/code&gt;&lt;/a&gt; with elements will cause a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, as they are views over memory and will definitely cause other possible issues:</source>
          <target state="translated">&lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/API/ArrayBufferView&quot;&gt; &lt;code&gt;ArrayBufferView&lt;/code&gt; &lt;/a&gt;要素を持つが原因となります&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;、彼らはメモリの景色があるとして、間違いなく他の可能性のある問題が発生します：</target>
        </trans-unit>
        <trans-unit id="99a64171ebbadc044217933d169a65f447d61205" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;urierror&quot;&gt;&lt;code&gt;URIError&lt;/code&gt;&lt;/a&gt; will be thrown if one attempts to encode a surrogate which is not part of a high-low pair, e.g.,</source>
          <target state="translated">AN &lt;a href=&quot;urierror&quot;&gt; &lt;code&gt;URIError&lt;/code&gt; は&lt;/a&gt;1つの試みは高低ペアの一部ではないサロゲートをコードする場合、例えば、スローされます</target>
        </trans-unit>
        <trans-unit id="0d078a62ea5093a92723f41b7d34180773fcbb9d" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;../object&quot;&gt;Object&lt;/a&gt;&lt;/code&gt; with two properties:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../object&quot;&gt;Object&lt;/a&gt;&lt;/code&gt; 二つの性質を持ちます：</target>
        </trans-unit>
        <trans-unit id="479dc78df9547d7f706cceed83e1dfde41f5c7f5" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Object&lt;/code&gt; has a prototype, so it contains default keys that could collide with your own keys if you're not careful.</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt; のプロトタイプを持っているので、それはあなたが注意しないなら、あなた自身の鍵と衝突する可能性があり、デフォルトのキーが含まれています。</target>
        </trans-unit>
        <trans-unit id="2abe3f4617f7bbbed2cf60e57170354c81a50555" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Object&lt;/code&gt; has a prototype, so there are default keys in the map that could collide with your keys if you're not careful. As of ES5 this can be bypassed by using &lt;code&gt;map = Object.create(null)&lt;/code&gt;, but this is seldom done.</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt; のプロトタイプを持っているので、注意しないなら、あなたの鍵と衝突する可能性がマップ内のデフォルトのキーがあります。 ES5 以降、これは &lt;code&gt;map = Object.create(null)&lt;/code&gt; を使用してバイパスできますが、これが行われることはほとんどありません。</target>
        </trans-unit>
        <trans-unit id="06a7d772c6f306b21c08de902dd9ee6804b69ae2" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;async function&lt;/code&gt; expression is very similar to, and has almost the same syntax as, an &lt;a href=&quot;../statements/async_function&quot;&gt;&lt;code&gt;async function statement&lt;/code&gt;&lt;/a&gt;. The main difference between an async &lt;code&gt;function&lt;/code&gt; expression and an async &lt;code&gt;function&lt;/code&gt; statement is the &lt;em&gt;function name,&lt;/em&gt; which can be omitted in &lt;code&gt;async function&lt;/code&gt; expressions to create &lt;em&gt;anonymous&lt;/em&gt; functions. An &lt;code&gt;async function&lt;/code&gt; expression can be used as an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/IIFE&quot;&gt;IIFE&lt;/a&gt; (Immediately Invoked Function Expression) which runs as soon as it is defined. See also the chapter about &lt;a href=&quot;../functions&quot;&gt;functions&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;async function&lt;/code&gt; 式は非常によく似ている、と、とほぼ同じ構文を持つ&lt;a href=&quot;../statements/async_function&quot;&gt; &lt;code&gt;async function statement&lt;/code&gt; &lt;/a&gt;。非同期 &lt;code&gt;function&lt;/code&gt; 式と非同期 &lt;code&gt;function&lt;/code&gt; ステートメントの主な違いは、&lt;em&gt;関数名です。&lt;/em&gt;これは、 &lt;code&gt;async function&lt;/code&gt; 式で省略して&lt;em&gt;無名&lt;/em&gt;関数を作成できます。 &lt;code&gt;async function&lt;/code&gt; 式はとして使用することができます&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/IIFE&quot;&gt;生命維持&lt;/a&gt;とすぐに、それが定義されているとして実行（すぐに呼び出される関数式）。詳細については、&lt;a href=&quot;../functions&quot;&gt;関数&lt;/a&gt;に関する章も参照してください。</target>
        </trans-unit>
        <trans-unit id="116918ef344c610716a3ee47a1e459197bc22b39" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;async function&lt;/code&gt; expression is very similar to, and has almost the same syntax as, an &lt;a href=&quot;../statements/async_function&quot;&gt;&lt;code&gt;async function statement&lt;/code&gt;&lt;/a&gt;. The main difference between an async &lt;code&gt;function&lt;/code&gt; expression and an async &lt;code&gt;function&lt;/code&gt; statement is the &lt;em&gt;function name&lt;/em&gt;, which can be omitted in &lt;code&gt;async function&lt;/code&gt; expressions to create &lt;em&gt;anonymous&lt;/em&gt; functions. An &lt;code&gt;async function&lt;/code&gt; expression can be used as an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/IIFE&quot;&gt;IIFE&lt;/a&gt; (Immediately Invoked Function Expression) which runs as soon as it is defined. See also the chapter about &lt;a href=&quot;../functions&quot;&gt;functions&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;async function&lt;/code&gt; 式は非常によく似ている、と、とほぼ同じ構文を持つ&lt;a href=&quot;../statements/async_function&quot;&gt; &lt;code&gt;async function statement&lt;/code&gt; &lt;/a&gt;。非同期 &lt;code&gt;function&lt;/code&gt; 式と非同期 &lt;code&gt;function&lt;/code&gt; ステートメントの主な違いは、&lt;em&gt;関数名です&lt;/em&gt;。これは、&lt;em&gt;匿名&lt;/em&gt;関数を作成するために &lt;code&gt;async function&lt;/code&gt; 式で省略できます。 &lt;code&gt;async function&lt;/code&gt; 式はとして使用することができます&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/IIFE&quot;&gt;生命維持&lt;/a&gt;とすぐに、それが定義されているとして実行（すぐに呼び出される関数式）。詳細については、&lt;a href=&quot;../functions&quot;&gt;関数&lt;/a&gt;に関する章も参照してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="749fa5b9e60f6364ec3fa81094279ac9d284d736" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;async&lt;/code&gt; function can contain an &lt;a href=&quot;../operators/await&quot;&gt;&lt;code&gt;await&lt;/code&gt;&lt;/a&gt; expression that pauses the execution of the async function and waits for the passed &lt;code&gt;Promise&lt;/code&gt;'s resolution, and then resumes the &lt;code&gt;async&lt;/code&gt; function's execution and returns the resolved value.</source>
          <target state="translated">&lt;code&gt;async&lt;/code&gt; 関数を含むことができる&lt;a href=&quot;../operators/await&quot;&gt; &lt;code&gt;await&lt;/code&gt; &lt;/a&gt;通過用非同期関数を待つの実行一時停止発現 &lt;code&gt;Promise&lt;/code&gt; の解像度を、その後再開 &lt;code&gt;async&lt;/code&gt; 関数の実行と戻る解決された値を。</target>
        </trans-unit>
        <trans-unit id="ac1ce78e135e21359237637224d46c6ece13dffb" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;await&lt;/code&gt; splits execution flow, allowing the caller of the async function to resume execution. After the &lt;code&gt;await&lt;/code&gt; defers the continuation of the async function, execution of subsequent statements ensues. If this &lt;code&gt;await&lt;/code&gt; is the last expression executed by its function execution continues by returning to the function's caller a pending &lt;code&gt;Promise&lt;/code&gt; for completion of the &lt;code&gt;await&lt;/code&gt;'s function and resuming execution of that caller.</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt; 分割実行フロー、非同期関数の呼び出し側が実行を再開することができます。 &lt;code&gt;await&lt;/code&gt; が非同期関数の継続を延期した後、後続のステートメントが実行されます。この場合 &lt;code&gt;await&lt;/code&gt; その機能の実行によって実行された最後の表現で、関数の呼び出し側保留に戻って続けて &lt;code&gt;Promise&lt;/code&gt; の完了を &lt;code&gt;await&lt;/code&gt; の機能とその呼び出し側の実行を再開する。</target>
        </trans-unit>
        <trans-unit id="33e7718d5863736c83b4179d782c6eab44dcf9e3" translate="yes" xml:space="preserve">
          <source>An &lt;strong&gt;accessor descriptor&lt;/strong&gt; also has the following optional keys:</source>
          <target state="translated">&lt;strong&gt;アクセサ記述子は&lt;/strong&gt;また、次の任意のキーがあります。</target>
        </trans-unit>
        <trans-unit id="7d6e5cba73fe7c67ccfb97f3daaecf839a1c2e1a" translate="yes" xml:space="preserve">
          <source>An &lt;strong&gt;already resolved&lt;/strong&gt;&lt;a href=&quot;../promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; if the &lt;var&gt;iterable&lt;/var&gt; passed is empty.</source>
          <target state="translated">&lt;strong&gt;すでに解決&lt;/strong&gt;&lt;a href=&quot;../promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;場合 &lt;var&gt;iterable&lt;/var&gt; 渡さは空です。</target>
        </trans-unit>
        <trans-unit id="fdaf841e34b58dc92bf429e752b673bd9e8bb718" translate="yes" xml:space="preserve">
          <source>An &lt;strong&gt;arrow function expression&lt;/strong&gt; has a shorter syntax than a &lt;a href=&quot;../operators/function&quot;&gt;function expression&lt;/a&gt; and does not have its own &lt;code&gt;&lt;a href=&quot;../operators/this&quot;&gt;this&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;arguments&quot;&gt;arguments&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../operators/super&quot;&gt;super&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;../operators/new.target&quot;&gt;new.target&lt;/a&gt;&lt;/code&gt;. These function expressions are best suited for non-method functions, and they cannot be used as constructors.</source>
          <target state="translated">&lt;strong&gt;矢印の関数式は、&lt;/strong&gt;より短い構文は&lt;a href=&quot;../operators/function&quot;&gt;関数式を&lt;/a&gt;、独自の持っていない &lt;code&gt;&lt;a href=&quot;../operators/this&quot;&gt;this&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;arguments&quot;&gt;arguments&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;../operators/super&quot;&gt;super&lt;/a&gt;&lt;/code&gt; 、または &lt;code&gt;&lt;a href=&quot;../operators/new.target&quot;&gt;new.target&lt;/a&gt;&lt;/code&gt; を。これらの関数式はメソッド以外の関数に最適であり、コンストラクターとして使用することはできません。</target>
        </trans-unit>
        <trans-unit id="dc71f7514eedbed3ceb94ad5c83afcda03734c72" translate="yes" xml:space="preserve">
          <source>An &lt;strong&gt;arrow function expression&lt;/strong&gt; is a compact alternative to a traditional &lt;a href=&quot;../operators/function&quot;&gt;function expression&lt;/a&gt;, but is limited and can't be used in all situations.</source>
          <target state="translated">&lt;strong&gt;矢印関数式は&lt;/strong&gt;伝統的に、コンパクトな代替である&lt;a href=&quot;../operators/function&quot;&gt;関数式&lt;/a&gt;が、制限されており、すべての状況で使用することはできません。</target>
        </trans-unit>
        <trans-unit id="607e4dc315b484ba61d20fbbf5614a0760b2cdba" translate="yes" xml:space="preserve">
          <source>An &lt;strong&gt;assignment operator&lt;/strong&gt; assigns a value to its left operand based on the value of its right operand.</source>
          <target state="translated">&lt;strong&gt;代入演算子は&lt;/strong&gt;その右のオペランドの値に基づいて、その左のオペランドに値を代入します。</target>
        </trans-unit>
        <trans-unit id="904d5976b308e2cf370f1501613cd8846c61e3a2" translate="yes" xml:space="preserve">
          <source>An &lt;strong&gt;asynchronously resolved&lt;/strong&gt;&lt;a href=&quot;../promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; if the &lt;var&gt;iterable&lt;/var&gt; passed contains no promises. Note, Google Chrome 58 returns an &lt;strong&gt;already resolved&lt;/strong&gt; promise in this case.</source>
          <target state="translated">&lt;strong&gt;非同期的解決&lt;/strong&gt;&lt;a href=&quot;../promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;かの &lt;var&gt;iterable&lt;/var&gt; 合格には約束が含まれていません。この場合、Google Chrome 58は&lt;strong&gt;解決済みの&lt;/strong&gt;プロミスを返します。</target>
        </trans-unit>
        <trans-unit id="a767f92ce194f1873bd322c68f31bfd6943db581" translate="yes" xml:space="preserve">
          <source>An &lt;strong&gt;empty statement&lt;/strong&gt; is used to provide no statement, although the JavaScript syntax would expect one.</source>
          <target state="translated">&lt;strong&gt;空のステートメントは、&lt;/strong&gt; JavaScriptの構文は1を期待するだろうが、何の声明を提供しないために使用されます。</target>
        </trans-unit>
        <trans-unit id="c41d3a52802b697a3a0ec9387f2f4b7e944f5a03" translate="yes" xml:space="preserve">
          <source>An API that returns a &lt;a href=&quot;../global_objects/promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; will result in a promise chain, and it splits the function into many parts. Consider the following code:</source>
          <target state="translated">&lt;a href=&quot;../global_objects/promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;を返すAPIは、Promiseチェーンを作成し、関数を多くの部分に分割します。次のコードを検討してください。</target>
        </trans-unit>
        <trans-unit id="d6e1fb977cb0563ff8d5c19996560538d0a19f3d" translate="yes" xml:space="preserve">
          <source>An accessor descriptor also has the following optional keys:</source>
          <target state="translated">アクセサ記述子には、以下のオプションキーもあります。</target>
        </trans-unit>
        <trans-unit id="c6ba2736be15ee34c7ec5d427128a154ec58e802" translate="yes" xml:space="preserve">
          <source>An accessor property that returns the buffer contained in the memory.</source>
          <target state="translated">メモリに含まれるバッファを返すアクセサプロパティ。</target>
        </trans-unit>
        <trans-unit id="aa3a67a4c0526a53a8eea043d8576001f4b1c120" translate="yes" xml:space="preserve">
          <source>An action can be assigned to an already &quot;settled&quot; promise. In that case, the action (if appropriate) will be performed at the first asynchronous opportunity. Note that promises are guaranteed to be asynchronous. Therefore, an action for an already &quot;settled&quot; promise will occur only after the stack has cleared and a clock-tick has passed. The effect is much like that of &lt;code&gt;setTimeout(action,10)&lt;/code&gt;.</source>
          <target state="translated">アクションは、すでに「解決された」約束に割り当てることができます。その場合、アクション（適切な場合）は最初の非同期の機会に実行されます。 promiseは非同期であることが保証されていることに注意してください。したがって、すでに「解決された」プロミスに対するアクションは、スタックがクリアされ、クロックティックが経過した後にのみ発生します。効果は &lt;code&gt;setTimeout(action,10)&lt;/code&gt; の効果とよく似ています。</target>
        </trans-unit>
        <trans-unit id="cb4daa3d3786043af0c5a93f620d2482f66c1bdc" translate="yes" xml:space="preserve">
          <source>An additional optimization technique to lazify or delay the calculation of a property value and cache it for later access are &lt;strong&gt;smart (or &quot;&lt;a href=&quot;https://en.wikipedia.org/wiki/Memoization&quot;&gt;memoized&lt;/a&gt;&quot;) getters&lt;/strong&gt;. The value is calculated the first time the getter is called, and is then cached so subsequent accesses return the cached value without recalculating it. This is useful in the following situations:</source>
          <target state="translated">プロパティ値の計算を遅延または遅延させ、後でアクセスできるようにキャッシュするための追加の最適化手法は、&lt;strong&gt;スマートな（または「&lt;a href=&quot;https://en.wikipedia.org/wiki/Memoization&quot;&gt;メモ化された&lt;/a&gt;」）ゲッター&lt;/strong&gt;です。値は、ゲッターが最初に呼び出されたときに計算され、その後キャッシュされるため、以降のアクセスでは、キャッシュされた値が再計算されずに返されます。これは、次の状況で役立ちます。</target>
        </trans-unit>
        <trans-unit id="a03499d49258efd7b96ce9fc262e5c83ec924074" translate="yes" xml:space="preserve">
          <source>An additional optimization technique to lazify or delay the calculation of a property value and cache it for later access are&lt;strong&gt; smart or &lt;a href=&quot;https://en.wikipedia.org/wiki/Memoization&quot;&gt;memoized&lt;/a&gt; getters&lt;/strong&gt;. The value is calculated the first time the getter is called, and is then cached so subsequent accesses return the cached value without recalculating it. This is useful in the following situations:</source>
          <target state="translated">プロパティ値の計算を遅延または遅延させ、後でアクセスできるようにキャッシュするための追加の最適化手法は、&lt;strong&gt;スマートまたは&lt;a href=&quot;https://en.wikipedia.org/wiki/Memoization&quot;&gt;メモ化された&lt;/a&gt;ゲッター&lt;/strong&gt;です。値は、getterが最初に呼び出されたときに計算され、次にキャッシュされるため、以降のアクセスでは、再計算されずにキャッシュされた値が返されます。これは、次の状況で役立ちます。</target>
        </trans-unit>
        <trans-unit id="93110263f3a02ef2acddc832bccbe4d1ee2d6b6c" translate="yes" xml:space="preserve">
          <source>An alias for the variable that holds the value attempted to be assigned to &lt;code&gt;&lt;var&gt;prop&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;var&gt;prop&lt;/var&gt;&lt;/code&gt; に割り当てようとした値を保持する変数のエイリアス。</target>
        </trans-unit>
        <trans-unit id="5c0089cf4fd6d504691e8dd3f3f6007a79efc218" translate="yes" xml:space="preserve">
          <source>An alias for the variable that holds the value attempted to be assigned to &lt;code&gt;prop.&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;prop.&lt;/code&gt; うとした値を保持する変数のエイリアス。</target>
        </trans-unit>
        <trans-unit id="d6016719702c59ad00b3edb04713bfcc42f7a2e2" translate="yes" xml:space="preserve">
          <source>An alias for the variable that holds the value attempted to be assigned to &lt;code&gt;prop&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prop&lt;/code&gt; に割り当てようとした値を保持する変数のエイリアス。</target>
        </trans-unit>
        <trans-unit id="f756a12b0c4869514c34f124ff122238e13e61af" translate="yes" xml:space="preserve">
          <source>An anonymous function is created and called:</source>
          <target state="translated">匿名の関数が作成され、呼び出されます。</target>
        </trans-unit>
        <trans-unit id="400e6951bed505cfb4c59c0c2736981c28198b92" translate="yes" xml:space="preserve">
          <source>An array containing objects representing the exported functions of the given module.</source>
          <target state="translated">指定したモジュールのエクスポートされた関数を表すオブジェクトを含む配列。</target>
        </trans-unit>
        <trans-unit id="6c7fc74f35e37d771379bedc3096bf6ec8a27b18" translate="yes" xml:space="preserve">
          <source>An array containing objects representing the imported functions of the given module.</source>
          <target state="translated">指定したモジュールのインポートされた関数を表すオブジェクトを含む配列。</target>
        </trans-unit>
        <trans-unit id="3ee0359ece94b819bf8999821d7a29e0c97c39e9" translate="yes" xml:space="preserve">
          <source>An array containing the canonical locale names.</source>
          <target state="translated">正規ロケール名を含む配列。</target>
        </trans-unit>
        <trans-unit id="294c063efbd9732c4ca28f74c4def4da64e7a34e" translate="yes" xml:space="preserve">
          <source>An array containing the deleted elements.</source>
          <target state="translated">削除された要素を含む配列。</target>
        </trans-unit>
        <trans-unit id="b8c6ddda445db591cd5ad81d4db8de771f6936fb" translate="yes" xml:space="preserve">
          <source>An array containing the deleted elements. If only one element is removed, an array of one element is returned. If no elements are removed, an empty array is returned.</source>
          <target state="translated">削除された要素を含む配列。1 つの要素だけが削除された場合は、1 つの要素の配列が返されます。削除された要素がない場合は、空の配列が返されます。</target>
        </trans-unit>
        <trans-unit id="83a6b9d1167655fd7e1912a34148467ca61399c7" translate="yes" xml:space="preserve">
          <source>An array containing the given object's own enumerable property values.</source>
          <target state="translated">与えられたオブジェクト自身の列挙可能なプロパティ値を含む配列。</target>
        </trans-unit>
        <trans-unit id="cf644f932140ad032f297a3500f2f5be55f1e595" translate="yes" xml:space="preserve">
          <source>An array corresponding to the arguments passed to a function.</source>
          <target state="translated">関数に渡された引数に対応する配列。</target>
        </trans-unit>
        <trans-unit id="0ef0fc75dc31886b468c867697291158b56e92dd" translate="yes" xml:space="preserve">
          <source>An array corresponding to the arguments passed to a function. This is deprecated as property of &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt;. Use the &lt;a href=&quot;../../functions/arguments&quot;&gt;&lt;code&gt;arguments&lt;/code&gt;&lt;/a&gt; object available within the function instead.</source>
          <target state="translated">関数に渡された引数に対応する配列。これは&lt;a href=&quot;../function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; の&lt;/a&gt;プロパティとしては非推奨です。代わりに、関数内で使用可能な&lt;a href=&quot;../../functions/arguments&quot;&gt; &lt;code&gt;arguments&lt;/code&gt; &lt;/a&gt;オブジェクトを使用してください。</target>
        </trans-unit>
        <trans-unit id="2392b3a79dbcf85997c3e946ba81b7bb00504726" translate="yes" xml:space="preserve">
          <source>An array corresponding to the arguments passed to a function. This is deprecated as property of &lt;a href=&quot;function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt;. Use the &lt;a href=&quot;../functions/arguments&quot;&gt;&lt;code&gt;arguments&lt;/code&gt;&lt;/a&gt; object available within the function instead.</source>
          <target state="translated">関数に渡された引数に対応する配列。これは&lt;a href=&quot;function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; の&lt;/a&gt;プロパティとしては非推奨です。代わりに、関数内で使用可能な&lt;a href=&quot;../functions/arguments&quot;&gt; &lt;code&gt;arguments&lt;/code&gt; &lt;/a&gt;オブジェクトを使用してください。</target>
        </trans-unit>
        <trans-unit id="17f84c99cc1e709b7e2e7cc25e68a800f6787203" translate="yes" xml:space="preserve">
          <source>An array of all symbol properties found directly upon the given object.</source>
          <target state="translated">指定されたオブジェクトに直接適用されるすべてのシンボルプロパティの配列。</target>
        </trans-unit>
        <trans-unit id="939875be84425baa86f4e27e35e5c37a64400d8e" translate="yes" xml:space="preserve">
          <source>An array of objects. An &lt;code&gt;'x'&lt;/code&gt; denotes an &lt;code&gt;'on'&lt;/code&gt; state, a &lt;code&gt;'-'&lt;/code&gt; (hyphen) denotes an &lt;code&gt;'off'&lt;/code&gt; state and an &lt;code&gt;'_'&lt;/code&gt; (underscore) denotes the length of an &lt;code&gt;'on'&lt;/code&gt; state.</source>
          <target state="translated">オブジェクトの配列。 &lt;code&gt;'x'&lt;/code&gt; 表す &lt;code&gt;'on'&lt;/code&gt; 状態、 &lt;code&gt;'-'&lt;/code&gt; （ハイフン）である &lt;code&gt;'off'&lt;/code&gt; 状態と &lt;code&gt;'_'&lt;/code&gt; （アンダースコア）の長表す &lt;code&gt;'on'&lt;/code&gt; 状態。</target>
        </trans-unit>
        <trans-unit id="5f1aa483a622265e16e21ae55475c37ff5942623" translate="yes" xml:space="preserve">
          <source>An array of strings representing a subset of the given locale tags that are supported in collation without having to fall back to the runtime's default locale.</source>
          <target state="translated">指定したロケールタグのサブセットを表す文字列の配列で、ランタイムのデフォルトロケールに戻さなくても照合に対応しています。</target>
        </trans-unit>
        <trans-unit id="8c38f432bd1ddfdeee6fa4d76387b78d4ffffeb8" translate="yes" xml:space="preserve">
          <source>An array of strings representing a subset of the given locale tags that are supported in date and time formatting without having to fall back to the runtime's default locale.</source>
          <target state="translated">指定したロケールタグのサブセットを表す文字列の配列で、 ランタイムのデフォルトのロケールに戻ることなく、日付と時刻の書式設定をサポートします。</target>
        </trans-unit>
        <trans-unit id="dff512279d3e3d7747a9029073cc81b1abeb136c" translate="yes" xml:space="preserve">
          <source>An array of strings representing a subset of the given locale tags that are supported in number formatting without having to fall back to the runtime's default locale.</source>
          <target state="translated">指定したロケールタグのサブセットを表す文字列の配列で、 ランタイムのデフォルトロケールに戻さなくても数値フォーマットでサポートされています。</target>
        </trans-unit>
        <trans-unit id="d3525b867e17bc9965be4e0986238be5396a0ea2" translate="yes" xml:space="preserve">
          <source>An array of strings representing a subset of the given locale tags that are supported in plural formatting without having to fall back to the runtime's default locale.</source>
          <target state="translated">指定したロケールタグのサブセットを表す文字列の配列で、 ランタイムのデフォルトのロケールに戻さなくても複数の書式をサポートしています。</target>
        </trans-unit>
        <trans-unit id="9ecd22a069ff40a7adba2fb22eb682e921f7fa56" translate="yes" xml:space="preserve">
          <source>An array of strings that correspond to the properties found directly upon the given object.</source>
          <target state="translated">与えられたオブジェクトのプロパティに直接対応する文字列の配列。</target>
        </trans-unit>
        <trans-unit id="82c7ff8ecc238b0a2ed408eaf35a1b64aff96df1" translate="yes" xml:space="preserve">
          <source>An array of strings that corresponds to the properties found directly in the given object.</source>
          <target state="translated">与えられたオブジェクトの中で直接見つかったプロパティに対応する文字列の配列。</target>
        </trans-unit>
        <trans-unit id="6fcf73071464349321076ab6e25b38ccba0fc11a" translate="yes" xml:space="preserve">
          <source>An array of strings that represent all the enumerable properties of the given object.</source>
          <target state="translated">与えられたオブジェクトのすべての列挙可能なプロパティを表す文字列の配列。</target>
        </trans-unit>
        <trans-unit id="95dc172965791e059f6fdf61cfca3b8552eb577f" translate="yes" xml:space="preserve">
          <source>An array of the given object's own enumerable property &lt;code&gt;[key, value]&lt;/code&gt; pairs.</source>
          <target state="translated">指定されたオブジェクト自体の列挙可能なプロパティ &lt;code&gt;[key, value]&lt;/code&gt; ペアの配列。</target>
        </trans-unit>
        <trans-unit id="552d66072a8804f7950ce81da141922f241ea639" translate="yes" xml:space="preserve">
          <source>An array of the given object's own enumerable string-keyed property &lt;code&gt;[&lt;var&gt;key&lt;/var&gt;, &lt;var&gt;value&lt;/var&gt;]&lt;/code&gt; pairs.</source>
          <target state="translated">指定されたオブジェクト自体の列挙可能な文字列キープロパティ &lt;code&gt;[&lt;var&gt;key&lt;/var&gt;, &lt;var&gt;value&lt;/var&gt;]&lt;/code&gt; ペアの配列。</target>
        </trans-unit>
        <trans-unit id="c6a8b51bfc275b75e67018d696417d3e4f98e4d2" translate="yes" xml:space="preserve">
          <source>An array-like object specifying the arguments with which &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt; should be called.</source>
          <target state="translated">&lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt; を呼び出すための引数を指定する配列のようなオブジェクト。</target>
        </trans-unit>
        <trans-unit id="96149a7cfd499334d51399dbd236c11d242d951e" translate="yes" xml:space="preserve">
          <source>An array-like object specifying the arguments with which &lt;code&gt;target&lt;/code&gt; should be called.</source>
          <target state="translated">&lt;code&gt;target&lt;/code&gt; を呼び出すときに使用する引数を指定する配列のようなオブジェクト。</target>
        </trans-unit>
        <trans-unit id="0a91c45330077c858d10f57c59493882d5804c68" translate="yes" xml:space="preserve">
          <source>An array-like object specifying the arguments with which &lt;em&gt;&lt;code&gt;target&lt;/code&gt;&lt;/em&gt; should be called.</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;target&lt;/code&gt; &lt;/em&gt;を呼び出すときに使用する引数を指定する配列のようなオブジェクト。</target>
        </trans-unit>
        <trans-unit id="10e533ce8e823a791dbf3c43de2c8bc55b3892b0" translate="yes" xml:space="preserve">
          <source>An array-like object, specifying the arguments with which &lt;code&gt;&lt;var&gt;func&lt;/var&gt;&lt;/code&gt; should be called, or &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if no arguments should be provided to the function.</source>
          <target state="translated">&lt;code&gt;&lt;var&gt;func&lt;/var&gt;&lt;/code&gt; を呼び出すための引数を指定する配列のようなオブジェクト、または関数に引数を指定し&lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;場合は&lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;またはundefined。</target>
        </trans-unit>
        <trans-unit id="7ea85a520a76e8b6050148f34da2b543b6c31c03" translate="yes" xml:space="preserve">
          <source>An array-like or iterable object to convert to a typed array.</source>
          <target state="translated">型付き配列に変換する配列ライクな、あるいはイテレート可能なオブジェクト。</target>
        </trans-unit>
        <trans-unit id="fa9c92f2822babf9db63226c903eadbff9d44c70" translate="yes" xml:space="preserve">
          <source>An array-like or iterable object to convert to an array.</source>
          <target state="translated">配列に変換する配列のような、あるいは反復可能なオブジェクト。</target>
        </trans-unit>
        <trans-unit id="14e7a38fb60f213081bdec62d8f9c549f8cb262a" translate="yes" xml:space="preserve">
          <source>An array-like structure representing a WebAssembly Table, which stores function references.</source>
          <target state="translated">WebAssembly テーブルを表す配列のような構造体で、関数の参照を格納します。</target>
        </trans-unit>
        <trans-unit id="420291fda6a2df1379755dfd0f020d225443c84b" translate="yes" xml:space="preserve">
          <source>An arrow function cannot contain a line break between its parameters and its arrow.</source>
          <target state="translated">矢印関数は、そのパラメータと矢印の間に改行を含めることはできません。</target>
        </trans-unit>
        <trans-unit id="30f3b9d9b9373d50159a57406f2ffef27133479a" translate="yes" xml:space="preserve">
          <source>An arrow function does not have its own &lt;code&gt;this;&lt;/code&gt; the &lt;code&gt;this&lt;/code&gt; value of the enclosing lexical context is used i.e. Arrow functions follow the normal variable lookup rules. So while searching for &lt;code&gt;this&lt;/code&gt; which is not present in current scope they end up finding &lt;code&gt;this&lt;/code&gt; from its enclosing scope . Thus, in the following code, the &lt;code&gt;this&lt;/code&gt; within the function that is passed to &lt;code&gt;setInterval&lt;/code&gt; has the same value as &lt;code&gt;this&lt;/code&gt; in the lexically enclosing function:</source>
          <target state="translated">アロー関数には独自の &lt;code&gt;this;&lt;/code&gt; はありません。囲んでいる字句コンテキストの &lt;code&gt;this&lt;/code&gt; 値が使用されます。つまり、矢印関数は通常の変数ルックアップルールに従います。そのため、現在のスコープに存在しない &lt;code&gt;this&lt;/code&gt; を検索している間、それらは、それを包含するスコープから &lt;code&gt;this&lt;/code&gt; を見つけることになります。したがって、次のコードに、 &lt;code&gt;this&lt;/code&gt; に渡される関数内 &lt;code&gt;setInterval&lt;/code&gt; 同じ値を有し &lt;code&gt;this&lt;/code&gt; 字句的に取り囲む関数で：</target>
        </trans-unit>
        <trans-unit id="2903f4c76b6a87245b422e2b51c264e5b423df7a" translate="yes" xml:space="preserve">
          <source>An arrow function expression has a shorter syntax and lexically binds its &lt;code&gt;this&lt;/code&gt; value (see &lt;a href=&quot;functions/arrow_functions&quot;&gt;arrow functions&lt;/a&gt; for details):</source>
          <target state="translated">アロー関数式は構文が短く、レキシカルに &lt;code&gt;this&lt;/code&gt; 値をバインドします（詳細は&lt;a href=&quot;functions/arrow_functions&quot;&gt;アロー関数&lt;/a&gt;を参照）：</target>
        </trans-unit>
        <trans-unit id="71f86c59a91631ee3cae0ebff0097fde924961e4" translate="yes" xml:space="preserve">
          <source>An assignment operator assigns a value to its left operand based on the value of its right operand.</source>
          <target state="translated">代入演算子は、右オペランドの値に基づいて左オペランドに値を代入します。</target>
        </trans-unit>
        <trans-unit id="ba4e1651e560d06f9979af37172776e0f825aec6" translate="yes" xml:space="preserve">
          <source>An async function is a function declared with the &lt;code&gt;async&lt;/code&gt;keyword&lt;strong&gt;. &lt;/strong&gt;Async functions are instances of the &lt;a href=&quot;../global_objects/asyncfunction&quot;&gt;&lt;code&gt;AsyncFunction&lt;/code&gt;&lt;/a&gt; constructor, and the &lt;code&gt;await&lt;/code&gt; keyword is permitted within them. The &lt;code&gt;async&lt;/code&gt; and &lt;code&gt;await&lt;/code&gt; keywords enable asynchronous, promise-based behavior to be written in a cleaner style, avoiding the need to explicitly configure promise chains.</source>
          <target state="translated">非同期関数は、 &lt;code&gt;async&lt;/code&gt; キーワードで宣言された関数&lt;strong&gt;です。&lt;/strong&gt;非同期関数は&lt;a href=&quot;../global_objects/asyncfunction&quot;&gt; &lt;code&gt;AsyncFunction&lt;/code&gt; &lt;/a&gt;コンストラクターのインスタンスであり、 &lt;code&gt;await&lt;/code&gt; キーワードはそれらの中で許可されています。 &lt;code&gt;async&lt;/code&gt; と &lt;code&gt;await&lt;/code&gt; キーワードは、非同期、約束に基づく行動を明示的に設定し約束チェーンへの必要性を回避、クリーンなスタイルで書かれたことを可能にします。</target>
        </trans-unit>
        <trans-unit id="037a62a87dd303931bc8001559f23982efa44685" translate="yes" xml:space="preserve">
          <source>An easier way would be the &lt;a href=&quot;from&quot;&gt;&lt;code&gt;Array.from()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">より簡単な方法は、&lt;a href=&quot;from&quot;&gt; &lt;code&gt;Array.from()&lt;/code&gt; &lt;/a&gt;メソッドです。</target>
        </trans-unit>
        <trans-unit id="a07a0b90f394a5ae03e3e7fc5cb3ba0b9b17e65f" translate="yes" xml:space="preserve">
          <source>An easy way to understand array comprehension syntax, is to compare it with the Array &lt;a href=&quot;../global_objects/array/map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../global_objects/array/filter&quot;&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/a&gt; methods:</source>
          <target state="translated">配列内包構文を理解する簡単な方法は、それを配列&lt;a href=&quot;../global_objects/array/map&quot;&gt; &lt;code&gt;map&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../global_objects/array/filter&quot;&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/a&gt;メソッドと比較することです。</target>
        </trans-unit>
        <trans-unit id="fe7a92abe9d32ff8c428c25cb1f273210959e120" translate="yes" xml:space="preserve">
          <source>An empty iterable causes the returned promise to be forever pending:</source>
          <target state="translated">空のイテレータブルは、返されたプロミスを永遠に保留にします。</target>
        </trans-unit>
        <trans-unit id="a5bebd2c7d7a5684a19483fa34674022fb01ee9d" translate="yes" xml:space="preserve">
          <source>An empty object with no properties can be created like this:</source>
          <target state="translated">このように、プロパティを持たない空のオブジェクトを作成することができます。</target>
        </trans-unit>
        <trans-unit id="b06616016d285a37f2dcd931812ca40b58e483f7" translate="yes" xml:space="preserve">
          <source>An empty statement is used to provide no statement, although the JavaScript syntax would expect one.</source>
          <target state="translated">空のステートメントは、JavaScriptの構文ではステートメントを期待していますが、ステートメントを提供しないために使用されます。</target>
        </trans-unit>
        <trans-unit id="0c5a07aa537b0c3a1f53a56833d025dadd80c880" translate="yes" xml:space="preserve">
          <source>An empty string &lt;code&gt;&lt;var&gt;searchValue&lt;/var&gt;&lt;/code&gt; produces strange results. With no &lt;code&gt;&lt;var&gt;fromIndex&lt;/var&gt;&lt;/code&gt; value, or any &lt;code&gt;&lt;var&gt;fromIndex&lt;/var&gt;&lt;/code&gt; value lower than the string's &lt;code&gt;length&lt;/code&gt;, the returned value is the same as the &lt;code&gt;&lt;var&gt;fromIndex&lt;/var&gt;&lt;/code&gt; value:</source>
          <target state="translated">空の文字列 &lt;code&gt;&lt;var&gt;searchValue&lt;/var&gt;&lt;/code&gt; は、奇妙な結果を生成します。 &lt;code&gt;&lt;var&gt;fromIndex&lt;/var&gt;&lt;/code&gt; 値がない場合、または文字列の &lt;code&gt;length&lt;/code&gt; よりも &lt;code&gt;&lt;var&gt;fromIndex&lt;/var&gt;&lt;/code&gt; fromIndex値がない場合、戻り値は &lt;code&gt;&lt;var&gt;fromIndex&lt;/var&gt;&lt;/code&gt; 値と同じになります。</target>
        </trans-unit>
        <trans-unit id="5ca461869e539ecb37f26c5baeae262972b6ec88" translate="yes" xml:space="preserve">
          <source>An empty string &lt;var&gt;searchValue&lt;/var&gt; will match at any index between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;str.length&lt;/code&gt;</source>
          <target state="translated">空の文字列 &lt;var&gt;searchValue&lt;/var&gt; は、 &lt;code&gt;0&lt;/code&gt; と &lt;code&gt;str.length&lt;/code&gt; の間の任意のインデックスで一致します</target>
        </trans-unit>
        <trans-unit id="71431f94615d62f369cba3d7202b3350d88fcd31" translate="yes" xml:space="preserve">
          <source>An encoded component of a Uniform Resource Identifier.</source>
          <target state="translated">統一リソース識別子のエンコードされたコンポーネント。</target>
        </trans-unit>
        <trans-unit id="d4a3f0492dc0b390e0f5420e8372f08bc5000ff9" translate="yes" xml:space="preserve">
          <source>An example helpers library (&lt;code&gt;helpers.js&lt;/code&gt;)</source>
          <target state="translated">ヘルパーライブラリの例（ &lt;code&gt;helpers.js&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="7a1706e59c3de8fdea8b2a592f30d78f262a80bc" translate="yes" xml:space="preserve">
          <source>An existing &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;sharedarraybuffer&quot;&gt;&lt;code&gt;SharedArrayBuffer&lt;/code&gt;&lt;/a&gt;  to use as the storage backing the new &lt;code&gt;DataView&lt;/code&gt; object.</source>
          <target state="translated">新しい &lt;code&gt;DataView&lt;/code&gt; オブジェクトのバッキングストレージとして使用する既存の&lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;sharedarraybuffer&quot;&gt; &lt;code&gt;SharedArrayBuffer&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7ef7aef358560ebdb0055bca9a1bae446c97504f" translate="yes" xml:space="preserve">
          <source>An existing symbol with the given key if found; otherwise, a new symbol is created and returned.</source>
          <target state="translated">与えられたキーを持つ既存のシンボルが見つかった場合は、そのシンボルを返します。</target>
        </trans-unit>
        <trans-unit id="7dac3affe4df2a3ef9b4685334a7f50105251705" translate="yes" xml:space="preserve">
          <source>An explanation of why the name &quot;&lt;strong&gt;let&lt;/strong&gt;&quot; was chosen can be found &lt;a href=&quot;https://stackoverflow.com/questions/37916940/why-was-the-name-let-chosen-for-block-scoped-variable-declarations-in-javascri&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">「&lt;strong&gt;let&lt;/strong&gt;」という名前が選ばれた理由の説明は、&lt;a href=&quot;https://stackoverflow.com/questions/37916940/why-was-the-name-let-chosen-for-block-scoped-variable-declarations-in-javascri&quot;&gt;ここにあります&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6aa298faee5ff12e2f3e180256594d43024e29a5" translate="yes" xml:space="preserve">
          <source>An expression (including assignment expressions) or variable declaration evaluated once before the loop begins. Typically used to initialize a counter variable. This expression may optionally declare new variables with &lt;code&gt;var&lt;/code&gt; or &lt;code&gt;let&lt;/code&gt; keywords. Variables declared with &lt;code&gt;var&lt;/code&gt; are not local to the loop, i.e. they are in the same scope the &lt;code&gt;for&lt;/code&gt; loop is in. Variables declared with &lt;code&gt;let&lt;/code&gt; are local to the statement.</source>
          <target state="translated">ループが始まる前に1回評価される式（代入式を含む）または変数宣言。通常、カウンタ変数を初期化するために使用されます。この式は、オプションで &lt;code&gt;var&lt;/code&gt; または &lt;code&gt;let&lt;/code&gt; キーワードを使用して新しい変数を宣言できます。宣言された変数 &lt;code&gt;var&lt;/code&gt; がすなわち、それらは同じスコープ内にある、ループにローカルでない &lt;code&gt;for&lt;/code&gt; 変数はして宣言。ループはである &lt;code&gt;let&lt;/code&gt; ステートメントにローカルです。</target>
        </trans-unit>
        <trans-unit id="563b165e57203ba22b381e63a88f80ffaf862cb4" translate="yes" xml:space="preserve">
          <source>An expression (including assignment expressions) or variable declaration. Typically used to initialize a counter variable. This expression may optionally declare new variables with &lt;code&gt;var&lt;/code&gt; or let keywords. Variables declared with &lt;code&gt;var&lt;/code&gt; are not local to the loop, i.e. they are in the same scope the &lt;code&gt;for&lt;/code&gt; loop is in. Variables declared with let are local to the statement.</source>
          <target state="translated">式（代入式を含む）または変数宣言。通常、カウンタ変数を初期化するために使用されます。この式は、オプションで、 &lt;code&gt;var&lt;/code&gt; またはletキーワードを使用して新しい変数を宣言できます。 &lt;code&gt;var&lt;/code&gt; で宣言された変数はループに対してローカルではありません。つまり、 &lt;code&gt;for&lt;/code&gt; ループと同じスコープ内にあります。letで宣言された変数は、ステートメントに対してローカルです。</target>
        </trans-unit>
        <trans-unit id="7fbd88784f3cf214b9daf916b8f03307c6f230f6" translate="yes" xml:space="preserve">
          <source>An expression comparing Objects is only true if the operands reference the same Object.</source>
          <target state="translated">オブジェクトを比較する式は、オペランドが同じオブジェクトを参照している場合にのみ真となります。</target>
        </trans-unit>
        <trans-unit id="d96fbf68c0b8026b43dbb2becb94876cf06f5c77" translate="yes" xml:space="preserve">
          <source>An expression evaluated after each pass through the loop. If &lt;code&gt;condition&lt;/code&gt; evaluates to true, the &lt;code&gt;statement&lt;/code&gt; is re-executed. When &lt;code&gt;condition&lt;/code&gt; evaluates to false, control passes to the statement following the &lt;code&gt;do...while&lt;/code&gt;.</source>
          <target state="translated">ループを通過するたびに評価される式。場合は &lt;code&gt;condition&lt;/code&gt; trueと評価され、 &lt;code&gt;statement&lt;/code&gt; 再実行されます。場合は &lt;code&gt;condition&lt;/code&gt; はfalseと評価され、制御は次の文に渡さ &lt;code&gt;do...while&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="65648dd53962c19787343d60effc1f5cb5a1a68c" translate="yes" xml:space="preserve">
          <source>An expression evaluated before each pass through the loop. If this condition evaluates to true, &lt;code&gt;&lt;var&gt;statement&lt;/var&gt;&lt;/code&gt; is executed. When condition evaluates to false, execution continues with the statement after the &lt;code&gt;while&lt;/code&gt; loop.</source>
          <target state="translated">各ループを通過する前に評価される式。この条件がtrueと評価された場合、 &lt;code&gt;&lt;var&gt;statement&lt;/var&gt;&lt;/code&gt; が実行されます。条件がfalseと評価されると、 &lt;code&gt;while&lt;/code&gt; ループの後のステートメントから実行が続行されます。</target>
        </trans-unit>
        <trans-unit id="a4694def79a9e78b30c8c4a5a47247c0399309b4" translate="yes" xml:space="preserve">
          <source>An expression evaluated before each pass through the loop. If this condition evaluates to true, &lt;code&gt;statement&lt;/code&gt; is executed. When condition evaluates to false, execution continues with the statement after the &lt;code&gt;while&lt;/code&gt; loop.</source>
          <target state="translated">ループを通過する前に評価される式。この条件がtrueと評価された場合、 &lt;code&gt;statement&lt;/code&gt; が実行されます。条件がfalseと評価されると、 &lt;code&gt;while&lt;/code&gt; ループの後のステートメントから実行が続行されます。</target>
        </trans-unit>
        <trans-unit id="def975c74255559c1f7477823bd32eb09004bc31" translate="yes" xml:space="preserve">
          <source>An expression representing the object or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Primitive&quot;&gt;primitive&lt;/a&gt; whose type is to be returned.</source>
          <target state="translated">型が返されるオブジェクトまたは&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Primitive&quot;&gt;プリミティブ&lt;/a&gt;を表す式。</target>
        </trans-unit>
        <trans-unit id="a660b1a15463458ef45fe32fec4465966c30369c" translate="yes" xml:space="preserve">
          <source>An expression to be evaluated at the end of each loop iteration. This occurs before the next evaluation of &lt;code&gt;&lt;var&gt;condition&lt;/var&gt;&lt;/code&gt;. Generally used to update or increment the counter variable.</source>
          <target state="translated">各ループ反復の最後に評価される式。これは、次の &lt;code&gt;&lt;var&gt;condition&lt;/var&gt;&lt;/code&gt; 評価の前に発生します。通常、カウンタ変数を更新またはインクリメントするために使用されます。</target>
        </trans-unit>
        <trans-unit id="1d77c0bc243558a100ea011b2ee0d834472948bf" translate="yes" xml:space="preserve">
          <source>An expression to be evaluated at the end of each loop iteration. This occurs before the next evaluation of &lt;code&gt;condition&lt;/code&gt;. Generally used to update or increment the counter variable.</source>
          <target state="translated">各ループ反復の終わりに評価される式。これは、 &lt;code&gt;condition&lt;/code&gt; の次の評価の前に発生します。通常、カウンタ変数を更新または増分するために使用されます。</target>
        </trans-unit>
        <trans-unit id="b02a03e1661f4d2b7f2c20763540987093de4367" translate="yes" xml:space="preserve">
          <source>An expression to be evaluated before each loop iteration. If this expression evaluates to true, &lt;code&gt;&lt;var&gt;statement&lt;/var&gt;&lt;/code&gt; is executed. This conditional test is optional. If omitted, the condition always evaluates to true. If the expression evaluates to false, execution skips to the first expression following the &lt;code&gt;for&lt;/code&gt; construct.</source>
          <target state="translated">各ループ反復の前に評価される式。この式がtrueと評価された場合、 &lt;code&gt;&lt;var&gt;statement&lt;/var&gt;&lt;/code&gt; が実行されます。この条件付きテストはオプションです。省略した場合、条件は常にtrueと評価されます。式がfalseと評価された場合、実行は &lt;code&gt;for&lt;/code&gt; 構文に続く最初の式にスキップします。</target>
        </trans-unit>
        <trans-unit id="f6c6980cf583ad644d4313f43c90fa74393d4f55" translate="yes" xml:space="preserve">
          <source>An expression to be evaluated before each loop iteration. If this expression evaluates to true, &lt;code&gt;statement&lt;/code&gt; is executed. This conditional test is optional. If omitted, the condition always evaluates to true. If the expression evaluates to false, execution skips to the first expression following the &lt;code&gt;for&lt;/code&gt; construct.</source>
          <target state="translated">各ループ反復の前に評価される式。この式の評価がtrueの場合、 &lt;code&gt;statement&lt;/code&gt; が実行されます。この条件付きテストはオプションです。省略した場合、条件は常にtrueと評価されます。式の評価がfalseの場合、実行は &lt;code&gt;for&lt;/code&gt; 構文に続く最初の式にスキップします。</target>
        </trans-unit>
        <trans-unit id="35ba1c7d434c3faa3b57f94ed7a6d9c3f43bdbf0" translate="yes" xml:space="preserve">
          <source>An expression which is evaluated if the &lt;code&gt;&lt;var&gt;condition&lt;/var&gt;&lt;/code&gt; evaluates to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/truthy&quot;&gt;truthy&lt;/a&gt; value (one which equals or can be converted to &lt;code&gt;true&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;var&gt;condition&lt;/var&gt;&lt;/code&gt; が&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/truthy&quot;&gt;真の&lt;/a&gt;値（ &lt;code&gt;true&lt;/code&gt; に等しいかtrueに変換できる値）に評価された場合に評価される式。</target>
        </trans-unit>
        <trans-unit id="441a9804aa307a8ae123fd4ee45c3052920b8afb" translate="yes" xml:space="preserve">
          <source>An expression which is executed if the &lt;code&gt;&lt;var&gt;condition&lt;/var&gt;&lt;/code&gt; is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/falsy&quot;&gt;falsy&lt;/a&gt; (that is, has a value which can be converted to &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;var&gt;condition&lt;/var&gt;&lt;/code&gt; が&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/falsy&quot;&gt;偽の&lt;/a&gt;場合（つまり、 &lt;code&gt;false&lt;/code&gt; に変換できる値を持つ場合）に実行される式。</target>
        </trans-unit>
        <trans-unit id="bbf04a8ac56a18b3c5ca4ecba6b36bf41f3502fa" translate="yes" xml:space="preserve">
          <source>An expression whose result is matched against each &lt;code&gt;case&lt;/code&gt; clause.</source>
          <target state="translated">結果が各 &lt;code&gt;case&lt;/code&gt; 句と一致する式。</target>
        </trans-unit>
        <trans-unit id="096f81052c204301bb39461a515e3a197f8ba0a9" translate="yes" xml:space="preserve">
          <source>An expression whose result is matched against each case clause.</source>
          <target state="translated">結果が各 case 節に対してマッチする式。</target>
        </trans-unit>
        <trans-unit id="a5cf0224face5193db610e7ed4df9111dbb244de" translate="yes" xml:space="preserve">
          <source>An expression whose value is used as a condition.</source>
          <target state="translated">値が条件として使用される式。</target>
        </trans-unit>
        <trans-unit id="ce72caeca8acacc91dc374028b95f508257f68d6" translate="yes" xml:space="preserve">
          <source>An identifier to hold an exception object for the associated &lt;code&gt;catch&lt;/code&gt; clause.</source>
          <target state="translated">関連する &lt;code&gt;catch&lt;/code&gt; 句の例外オブジェクトを保持する識別子。</target>
        </trans-unit>
        <trans-unit id="49041670d07ea7557ebf2d3541054989a1d8c947" translate="yes" xml:space="preserve">
          <source>An implementation dependent string representation of the timezone, which might be an abbreviation or full name (there is no standard for names or abbreviations of timezones), e.g. &quot;Line Islands Time&quot; or &quot;LINT&quot;</source>
          <target state="translated">タイムゾーンの省略形やフルネーム(タイムゾーンの名前や省略形は標準的ではありません)など、実装に依存したタイムゾーンの文字列表現。</target>
        </trans-unit>
        <trans-unit id="bddcb716532f5813789510c630398489b6f527aa" translate="yes" xml:space="preserve">
          <source>An important difference between &lt;strong&gt;function declarations&lt;/strong&gt; and &lt;strong&gt;class declarations&lt;/strong&gt; is that function declarations are &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Hoisting&quot;&gt;hoisted&lt;/a&gt; and class declarations are not. You first need to declare your class and then access it, otherwise code like the following will throw a &lt;a href=&quot;global_objects/referenceerror&quot;&gt;&lt;code&gt;ReferenceError&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;strong&gt;関数宣言&lt;/strong&gt;と&lt;strong&gt;クラス宣言&lt;/strong&gt;の重要な違いは、関数宣言は&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Hoisting&quot;&gt;巻き上げられ&lt;/a&gt;、クラス宣言は巻き上げられないことです。最初にクラスを宣言してからアクセスする必要があります。そうしないと、次のようなコードで&lt;a href=&quot;global_objects/referenceerror&quot;&gt; &lt;code&gt;ReferenceError&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="f2118abfd81bf472d819615a6ea6e791a3d7c3f0" translate="yes" xml:space="preserve">
          <source>An important difference between &lt;strong&gt;function declarations&lt;/strong&gt; and &lt;strong&gt;class declarations&lt;/strong&gt; is that function declarations are &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Hoisting&quot;&gt;hoisted&lt;/a&gt; and class declarations are not. You first need to declare your class and then access it, otherwise code like the following will throw a &lt;a href=&quot;global_objects/referenceerror&quot;&gt;&lt;code&gt;ReferenceError&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;strong&gt;関数宣言&lt;/strong&gt;と&lt;strong&gt;クラス宣言&lt;/strong&gt;の重要な違いは、関数宣言は&lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Hoisting&quot;&gt;引き上げられ&lt;/a&gt;、クラス宣言は引き上げられないことです。最初にクラスを宣言してからアクセスする必要があります。そうしないと、次のようなコードで&lt;a href=&quot;global_objects/referenceerror&quot;&gt; &lt;code&gt;ReferenceError&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="03cf9802975b2140faf4b1e02522092a10522a90" translate="yes" xml:space="preserve">
          <source>An index in the array if an element passes the test; otherwise, &lt;strong&gt;-1&lt;/strong&gt;.</source>
          <target state="translated">要素がテストに合格した場合の配列のインデックス。それ以外の場合は&lt;strong&gt;-1&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="45068698e9e35e33334c7424a76962254dd1cef2" translate="yes" xml:space="preserve">
          <source>An infinite iterator</source>
          <target state="translated">無限のイテレータ</target>
        </trans-unit>
        <trans-unit id="8f7da3fcdbd9e76635a6c3870e9c23199a2cb3cc" translate="yes" xml:space="preserve">
          <source>An initializer for a constant is required. You must specify its value in the same statement in which it's declared. (This makes sense, given that it can't be changed later.)</source>
          <target state="translated">定数のイニシャライザが必要です。その値は、宣言されたのと同じ文の中で指定しなければなりません。(後から変更できないことを考えると、これは理にかなっています)。</target>
        </trans-unit>
        <trans-unit id="a6549ca8166686b21d0cc0acb269a9dee4d5211f" translate="yes" xml:space="preserve">
          <source>An integer between 0 and +&amp;infin;: [0, +&amp;infin;), indicating the number of times to repeat the string in the newly-created string that is to be returned.</source>
          <target state="translated">0から+&amp;infin;までの整数：[0、+&amp;infin;）、返される新しく作成された文字列で文字列を繰り返す回数を示します。</target>
        </trans-unit>
        <trans-unit id="c371a876965041f9229c3513e6ca693cd937b671" translate="yes" xml:space="preserve">
          <source>An integer between 0 and 1-less-than the length of the string. If no index is provided, the default is 0, so the first character in the string is returned.</source>
          <target state="translated">文字列の長さよりも短い 0 から 1 の間の整数。インデックスが指定されていない場合、デフォルトは 0 で、文字列の最初の文字が返されます。</target>
        </trans-unit>
        <trans-unit id="106b9efaffaff775ad822a58e16c5ef2bf962e75" translate="yes" xml:space="preserve">
          <source>An integer between 0 and 11 representing the month.</source>
          <target state="translated">月を表す0~11の整数。</target>
        </trans-unit>
        <trans-unit id="0340f4b68be3264af2a2b8b4b46f968a655877fa" translate="yes" xml:space="preserve">
          <source>An integer between 0 and 11, representing the months January through December.</source>
          <target state="translated">0 から 11 までの整数で、1 月から 12 月までの月を表します。</target>
        </trans-unit>
        <trans-unit id="c307e319633b22dc9f4154c242880723be84dfbf" translate="yes" xml:space="preserve">
          <source>An integer between 0 and 23, representing the hour.</source>
          <target state="translated">0 から 23 までの整数で、時間を表します。</target>
        </trans-unit>
        <trans-unit id="1d8603477473538026a144a65d91cf5cfbe173c1" translate="yes" xml:space="preserve">
          <source>An integer between 0 and 59, representing the minutes.</source>
          <target state="translated">0 から 59 までの整数で、分を表します。</target>
        </trans-unit>
        <trans-unit id="8cd81723e643cac2becb26e41b4e0d2ec22b36f6" translate="yes" xml:space="preserve">
          <source>An integer between 0 and 59, representing the seconds.</source>
          <target state="translated">0 から 59 までの整数で、秒数を表します。</target>
        </trans-unit>
        <trans-unit id="3877ba4370f4d8fc75db580b793f879f937eef5f" translate="yes" xml:space="preserve">
          <source>An integer between 1 and 7, a string representing a signed integer between 1 and 7.</source>
          <target state="translated">1から7までの整数、1から7までの符号付き整数を表す文字列。</target>
        </trans-unit>
        <trans-unit id="08822b1556747f82a5e4057749ea2d5932291a56" translate="yes" xml:space="preserve">
          <source>An integer between 2 and 36 that represents the &lt;var&gt;radix&lt;/var&gt; (the base in mathematical numeral systems) of the above mentioned string.</source>
          <target state="translated">上記の文字列の &lt;var&gt;radix&lt;/var&gt; （数値システムにおける基数）を表す2〜36の整数。</target>
        </trans-unit>
        <trans-unit id="2c73b13d5099afde06b1c29ec287db4d342cb15f" translate="yes" xml:space="preserve">
          <source>An integer between &lt;code&gt;0&lt;/code&gt; (January) and &lt;code&gt;11&lt;/code&gt; (December) representing the month. &lt;em&gt;(Up through ECMAScript 2016, &lt;code&gt;&lt;var&gt;month&lt;/var&gt;&lt;/code&gt; was a required parameter. As of ES2017, it no longer is.)&lt;/em&gt;</source>
          <target state="translated">月を表す &lt;code&gt;0&lt;/code&gt; （1月）から &lt;code&gt;11&lt;/code&gt; （12月）までの整数。&lt;em&gt;（ECMAScript 2016までは、 &lt;code&gt;&lt;var&gt;month&lt;/var&gt;&lt;/code&gt; は必須パラメーターでした。ES2017以降、月は必須パラメーターではなくなりました。）&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5dd835e1ba108b3c5843cccda3330a950fe36b09" translate="yes" xml:space="preserve">
          <source>An integer between &lt;code&gt;0&lt;/code&gt; and &lt;a href=&quot;../number/positive_infinity&quot;&gt;&lt;code&gt;+Infinity&lt;/code&gt;&lt;/a&gt;, indicating the number of times to repeat the string.</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; から&lt;a href=&quot;../number/positive_infinity&quot;&gt; &lt;code&gt;+Infinity&lt;/code&gt; &lt;/a&gt;までの整数で、文字列を繰り返す回数を示します。</target>
        </trans-unit>
        <trans-unit id="c8d8b197e5c5620f77acf23c8f0787a484dc9bef" translate="yes" xml:space="preserve">
          <source>An integer between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;23&lt;/code&gt; representing the hours. If omitted, defaults to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">時間を表す &lt;code&gt;0&lt;/code&gt; から &lt;code&gt;23&lt;/code&gt; までの整数。省略した場合、デフォルトは &lt;code&gt;0&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9207d72cfc3b6cd49e9edd908ee6e6a8d3904c9d" translate="yes" xml:space="preserve">
          <source>An integer between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;59&lt;/code&gt; representing the minutes. If omitted, defaults to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">An integer between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;59&lt;/code&gt; representing the minutes. If omitted, defaults to &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a697324efdab03d0d2c66a847302af1d4c25b285" translate="yes" xml:space="preserve">
          <source>An integer between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;59&lt;/code&gt; representing the seconds. If omitted, defaults to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">An integer between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;59&lt;/code&gt; representing the seconds. If omitted, defaults to &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="26478d9a3f8d53efcaf0c9e44df7b28e48cf1325" translate="yes" xml:space="preserve">
          <source>An integer between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;999&lt;/code&gt; representing the milliseconds. If omitted, defaults to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">An integer between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;999&lt;/code&gt; representing the milliseconds. If omitted, defaults to &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c257002ebd243d8ab43aa0408fa65716a7d1f464" translate="yes" xml:space="preserve">
          <source>An integer between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;&lt;var&gt;str&lt;/var&gt;.length - 1&lt;/code&gt;. If the &lt;code&gt;&lt;var&gt;index&lt;/var&gt;&lt;/code&gt; cannot be converted to the integer or no &lt;code&gt;&lt;var&gt;index&lt;/var&gt;&lt;/code&gt; is provided, the default is &lt;code&gt;0&lt;/code&gt;, so the first character of &lt;code&gt;&lt;var&gt;str&lt;/var&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">An integer between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;&lt;var&gt;str&lt;/var&gt;.length - 1&lt;/code&gt; . If the &lt;code&gt;&lt;var&gt;index&lt;/var&gt;&lt;/code&gt; cannot be converted to the integer or no &lt;code&gt;&lt;var&gt;index&lt;/var&gt;&lt;/code&gt; is provided, the default is &lt;code&gt;0&lt;/code&gt; , so the first character of &lt;code&gt;&lt;var&gt;str&lt;/var&gt;&lt;/code&gt; is returned.</target>
        </trans-unit>
        <trans-unit id="3d35f1e124435ebc992ea4a691d77a18c6956a1a" translate="yes" xml:space="preserve">
          <source>An integer between &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;31&lt;/code&gt; representing the day of the month. If omitted, defaults to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">An integer between &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;31&lt;/code&gt; representing the day of the month. If omitted, defaults to &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="574d03b5326d390cae6bca671dce60c618242818" translate="yes" xml:space="preserve">
          <source>An integer between &lt;code&gt;2&lt;/code&gt; and &lt;code&gt;36&lt;/code&gt; that represents the &lt;em&gt;radix&lt;/em&gt; (the base in mathematical numeral systems) of the &lt;code&gt;&lt;var&gt;string&lt;/var&gt;&lt;/code&gt;. Be careful&amp;mdash;this does &lt;strong&gt;&lt;em&gt;not&lt;/em&gt;&lt;/strong&gt; default to &lt;code&gt;10&lt;/code&gt;!</source>
          <target state="translated">An integer between &lt;code&gt;2&lt;/code&gt; and &lt;code&gt;36&lt;/code&gt; that represents the &lt;em&gt;radix&lt;/em&gt; (the base in mathematical numeral systems) of the &lt;code&gt;&lt;var&gt;string&lt;/var&gt;&lt;/code&gt; . Be careful&amp;mdash;this does &lt;strong&gt;&lt;em&gt;not&lt;/em&gt;&lt;/strong&gt; default to &lt;code&gt;10&lt;/code&gt; !</target>
        </trans-unit>
        <trans-unit id="4e0430deadf1418adbf98f4175e7f4b66e2194b8" translate="yes" xml:space="preserve">
          <source>An integer between &lt;code&gt;2&lt;/code&gt; and &lt;code&gt;36&lt;/code&gt; that represents the &lt;em&gt;radix&lt;/em&gt; (the base in mathematical numeral systems) of the &lt;code&gt;&lt;var&gt;string&lt;/var&gt;&lt;/code&gt;. Be careful&amp;mdash;this does &lt;strong&gt;&lt;em&gt;not&lt;/em&gt;&lt;/strong&gt; default to &lt;code&gt;10&lt;/code&gt;! If the radix value is not of the &lt;code&gt;Number&lt;/code&gt; type it will be coerced to a &lt;code&gt;Number&lt;/code&gt;</source>
          <target state="translated">An integer between &lt;code&gt;2&lt;/code&gt; and &lt;code&gt;36&lt;/code&gt; that represents the &lt;em&gt;radix&lt;/em&gt; (the base in mathematical numeral systems) of the &lt;code&gt;&lt;var&gt;string&lt;/var&gt;&lt;/code&gt; . Be careful&amp;mdash;this does &lt;strong&gt;&lt;em&gt;not&lt;/em&gt;&lt;/strong&gt; default to &lt;code&gt;10&lt;/code&gt; ! If the radix value is not of the &lt;code&gt;Number&lt;/code&gt; type it will be coerced to a &lt;code&gt;Number&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="052febdc911896d49cc022792c614d939102b8be" translate="yes" xml:space="preserve">
          <source>An integer from 1 to 31, representing the day of the month.</source>
          <target state="translated">1 から 31 までの整数で、月の曜日を表します。</target>
        </trans-unit>
        <trans-unit id="da1ff9a222f12671689bb808ba1d5a230e68ce18" translate="yes" xml:space="preserve">
          <source>An integer greater than or equal to 0 and less than the length of the string; if it is not a number, it defaults to 0.</source>
          <target state="translated">0以上で文字列の長さ以下の整数。</target>
        </trans-unit>
        <trans-unit id="32dcc771f58aac0e49bb1d347d0542a9b3129077" translate="yes" xml:space="preserve">
          <source>An integer greater than or equal to &lt;code&gt;0&lt;/code&gt; and less than the &lt;code&gt;length&lt;/code&gt; of the string. If &lt;code&gt;&lt;var&gt;index&lt;/var&gt;&lt;/code&gt; is not a number, it defaults to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">An integer greater than or equal to &lt;code&gt;0&lt;/code&gt; and less than the &lt;code&gt;length&lt;/code&gt; of the string. If &lt;code&gt;&lt;var&gt;index&lt;/var&gt;&lt;/code&gt; is not a number, it defaults to &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="23b96f0fe9c9ae7c1c08269b2edbd7ca0b69489b" translate="yes" xml:space="preserve">
          <source>An integer in the range &lt;code&gt;2&lt;/code&gt; through &lt;code&gt;36&lt;/code&gt; specifying the base to use for representing numeric values.</source>
          <target state="translated">An integer in the range &lt;code&gt;2&lt;/code&gt; through &lt;code&gt;36&lt;/code&gt; specifying the base to use for representing numeric values.</target>
        </trans-unit>
        <trans-unit id="cfbee8fb07a8deec24b19c6ae7c40817f11bce1a" translate="yes" xml:space="preserve">
          <source>An integer indicating the number of elements in the array to remove from &lt;code&gt;&lt;var&gt;start&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">An integer indicating the number of elements in the array to remove from &lt;code&gt;&lt;var&gt;start&lt;/var&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="23933916916af0d0a3a44b6ae90cbc769c6eedc8" translate="yes" xml:space="preserve">
          <source>An integer indicating the number of old array elements to remove.</source>
          <target state="translated">削除する古い配列要素の数を示す整数。</target>
        </trans-unit>
        <trans-unit id="0b33fad11117904307c5cbf907a0aa9d62fff1be" translate="yes" xml:space="preserve">
          <source>An integer number corresponding to the day of the week for the given date, according to local time: 0 for Sunday, 1 for Monday, 2 for Tuesday, and so on.</source>
          <target state="translated">現地時間に応じて、指定された日付の曜日に対応する整数値。</target>
        </trans-unit>
        <trans-unit id="35fba568ed1f420669a64b07f09439a349e74cb8" translate="yes" xml:space="preserve">
          <source>An integer number corresponding to the day of the week for the given date, according to universal time: 0 for Sunday, 1 for Monday, 2 for Tuesday, and so on.</source>
          <target state="translated">普遍的な時間に応じて、指定された日付の曜日に対応する整数値。</target>
        </trans-unit>
        <trans-unit id="36496561c417a8ee96420e2a90e6e6dca58c7829" translate="yes" xml:space="preserve">
          <source>An integer number parsed from the given string. If the first character cannot be converted to a number, &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">指定された文字列から解析された整数。最初の文字を数値に変換できない場合、&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;が返されます。</target>
        </trans-unit>
        <trans-unit id="754f84fe6eda6fbcfd66a5c2dd8aaf4e612c3728" translate="yes" xml:space="preserve">
          <source>An integer number parsed from the given string. If the first character cannot be converted to a number, &lt;a href=&quot;nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">指定された文字列から解析された整数。最初の文字を数値に変換できない場合、&lt;a href=&quot;nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt;が返されます。</target>
        </trans-unit>
        <trans-unit id="ab8c56e50c7700a4eb35860fbd58da65a55be76f" translate="yes" xml:space="preserve">
          <source>An integer number ranging from 1 to 31 representing day of month for the given date, according to universal time.</source>
          <target state="translated">普遍的な時間に従って、指定された日付の月の日を表す1から31までの整数。</target>
        </trans-unit>
        <trans-unit id="f7b92fee5e3d728be9bd92c3fb91adbf123124fa" translate="yes" xml:space="preserve">
          <source>An integer number, between 0 and 11, corresponding to the month of the given date according to universal time. 0 for January, 1 for February, 2 for March, and so on.</source>
          <target state="translated">0から11までの整数で、普遍的な時間で指定された日付の月に対応します。1月は0、2月は1、3月は2など。</target>
        </trans-unit>
        <trans-unit id="bdf2d721e24be76b4cd146e44c2452bba742c120" translate="yes" xml:space="preserve">
          <source>An integer number, between 0 and 11, representing the month in the given date according to local time. 0 corresponds to January, 1 to February, and so on.</source>
          <target state="translated">0 から 11 までの整数値で、現地時間に応じて指定された日付の月を表します。0 は 1 月、1 は 2 月に対応します。</target>
        </trans-unit>
        <trans-unit id="a983a5c51a13d3fd93ae6a301548ecf77e2a434d" translate="yes" xml:space="preserve">
          <source>An integer number, between 0 and 23, representing the hour for the given date according to local time.</source>
          <target state="translated">0 から 23 までの整数値で、現地時間による指定した日付の時間を表します。</target>
        </trans-unit>
        <trans-unit id="b1325856017b7684f529e31d370b53200f228761" translate="yes" xml:space="preserve">
          <source>An integer number, between 0 and 23, representing the hours in the given date according to universal time.</source>
          <target state="translated">0から23までの整数値で、普遍的な時間に従った指定された日付の時間を表します。</target>
        </trans-unit>
        <trans-unit id="c70225ce44d32316849eb9b0a8f260dc07b6d33f" translate="yes" xml:space="preserve">
          <source>An integer number, between 0 and 59, representing the minutes in the given date according to local time.</source>
          <target state="translated">0 から 59 までの整数値で、現地時間による指定した日付の分数を表します。</target>
        </trans-unit>
        <trans-unit id="1de535437e5b03a40105100e65959b20cf5746c1" translate="yes" xml:space="preserve">
          <source>An integer number, between 0 and 59, representing the minutes in the given date according to universal time.</source>
          <target state="translated">0 から 59 までの整数値で、普遍的な時刻に従った指定された日付の分を表します。</target>
        </trans-unit>
        <trans-unit id="e8f4e1a7a43f1bbe013ac8cf5bf6a20bd20529e1" translate="yes" xml:space="preserve">
          <source>An integer number, between 0 and 59, representing the seconds in the given date according to local time.</source>
          <target state="translated">0 から 59 までの整数値で、現地時間による指定された日付の秒数を表します。</target>
        </trans-unit>
        <trans-unit id="04050712c56a2a403dfbf471a090ea88b43e9813" translate="yes" xml:space="preserve">
          <source>An integer number, between 0 and 59, representing the seconds in the given date according to universal time.</source>
          <target state="translated">0から59までの整数値で、普遍的な時刻に従った指定された日付の秒数を表します。</target>
        </trans-unit>
        <trans-unit id="938cd26196813e1d928d61a97441625f390776c8" translate="yes" xml:space="preserve">
          <source>An integer number, between 0 and 6, corresponding to the day of the week for the given date, according to local time: 0 for Sunday, 1 for Monday, 2 for Tuesday, and so on.</source>
          <target state="translated">0 から 6 までの整数値で、現地時間に応じて指定した日付の曜日に対応します。</target>
        </trans-unit>
        <trans-unit id="6a5d3e71c52e9c6c55bf879a8f3240b43592ef22" translate="yes" xml:space="preserve">
          <source>An integer number, between 0 and 999, representing the milliseconds in the given date according to universal time.</source>
          <target state="translated">0から999までの整数値で、普遍的な時間に従った日付のミリ秒を表します。</target>
        </trans-unit>
        <trans-unit id="c4231138e078d6640fb02c9c25d9896be84a001a" translate="yes" xml:space="preserve">
          <source>An integer number, between 0 and 999, representing the milliseconds portion of the given date object. This method is a companion to the other UTC based methods that give hour portion, minute portion, etc.; this method gives milliseconds portion.</source>
          <target state="translated">0 から 999 までの整数値で、指定した日付オブジェクトのミリ秒部分を表します。このメソッドは、時の部分、分の部分などを指定する他の UTC ベースのメソッドの補完的なもので、このメソッドはミリ秒の部分を指定します。</target>
        </trans-unit>
        <trans-unit id="b365bdcc543e89595531fa9a1b8aa86a13679615" translate="yes" xml:space="preserve">
          <source>An integer number, between 1 and 31, representing the day of the month for the given date according to local time.</source>
          <target state="translated">1 から 31 までの整数値で、現地時間で指定された日付の月の日を表します。</target>
        </trans-unit>
        <trans-unit id="2f08d00e1b173f560b35429c221a4caaf7baac5f" translate="yes" xml:space="preserve">
          <source>An integer number, between 1 and 31, representing the day of the month in the given date according to universal time.</source>
          <target state="translated">普遍的な時間にしたがって、指定された日付の月の日を表す1~31の整数。</target>
        </trans-unit>
        <trans-unit id="7e5ee2460e6d16d876ed9e6ade87f029dabab2d3" translate="yes" xml:space="preserve">
          <source>An integer parsed from the given &lt;code&gt;&lt;var&gt;string&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">An integer parsed from the given &lt;code&gt;&lt;var&gt;string&lt;/var&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="17ddd4175df2c1bb6050443d893c9febc839b102" translate="yes" xml:space="preserve">
          <source>An integer representing the day of the month.</source>
          <target state="translated">月の曜日を表す整数。</target>
        </trans-unit>
        <trans-unit id="647f4f4862274d7e0970767ba9be02ae17cd4bbf" translate="yes" xml:space="preserve">
          <source>An integer representing the index at which to start the search. Defaults to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">An integer representing the index at which to start the search. Defaults to &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f35f4daf059f1c306117b1bfaa6ea2c0b629f0f3" translate="yes" xml:space="preserve">
          <source>An integer representing the index at which to start the search; the default value is &lt;code&gt;0&lt;/code&gt;. For &lt;code&gt;fromIndex&lt;/code&gt; values lower than &lt;code&gt;0&lt;/code&gt; or greater than &lt;code&gt;str.length&lt;/code&gt;, the search starts at index &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;str.length&lt;/code&gt; respectively.</source>
          <target state="translated">検索を開始するインデックスを表す整数。デフォルト値は &lt;code&gt;0&lt;/code&gt; です。ため &lt;code&gt;fromIndex&lt;/code&gt; の場合よりも低い値 &lt;code&gt;0&lt;/code&gt; より以上 &lt;code&gt;str.length&lt;/code&gt; 、検索インデックスで始まり &lt;code&gt;0&lt;/code&gt; と &lt;code&gt;str.length&lt;/code&gt; それぞれ。</target>
        </trans-unit>
        <trans-unit id="209a9c0e9cc009c55d6958232eb29f3e5a9d99d7" translate="yes" xml:space="preserve">
          <source>An integer representing the number of milliseconds since 1 January 1970, 00:00:00 UTC.</source>
          <target state="translated">1970 年 1 月 1 日 00:00:00 UTC からのミリ秒数を表す整数。</target>
        </trans-unit>
        <trans-unit id="6e21f096c448ce606f47e63face34d6309b8df22" translate="yes" xml:space="preserve">
          <source>An integer specifying the number of significant digits.</source>
          <target state="translated">有効桁数を指定する整数。</target>
        </trans-unit>
        <trans-unit id="dcd6dd9cd13569033c0915a39e4d5a0f9941080f" translate="yes" xml:space="preserve">
          <source>An integer specifying the numeric value of the year, for example, 1995.</source>
          <target state="translated">年の数値を指定する整数、例えば1995年など。</target>
        </trans-unit>
        <trans-unit id="5aea6935c1bbb2f34ac703e6e0140659572669f1" translate="yes" xml:space="preserve">
          <source>An integer typed array. One of &lt;a href=&quot;../int8array&quot;&gt;&lt;code&gt;Int8Array&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../uint8array&quot;&gt;&lt;code&gt;Uint8Array&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../int16array&quot;&gt;&lt;code&gt;Int16Array&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../uint16array&quot;&gt;&lt;code&gt;Uint16Array&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../int32array&quot;&gt;&lt;code&gt;Int32Array&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../uint32array&quot;&gt;&lt;code&gt;Uint32Array&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../bigint64array&quot;&gt;&lt;code&gt;BigInt64Array&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../biguint64array&quot;&gt;&lt;code&gt;BigUint64Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">An integer typed array. One of &lt;a href=&quot;../int8array&quot;&gt; &lt;code&gt;Int8Array&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;../uint8array&quot;&gt; &lt;code&gt;Uint8Array&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;../int16array&quot;&gt; &lt;code&gt;Int16Array&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;../uint16array&quot;&gt; &lt;code&gt;Uint16Array&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;../int32array&quot;&gt; &lt;code&gt;Int32Array&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;../uint32array&quot;&gt; &lt;code&gt;Uint32Array&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;../bigint64array&quot;&gt; &lt;code&gt;BigInt64Array&lt;/code&gt; &lt;/a&gt;, or &lt;a href=&quot;../biguint64array&quot;&gt; &lt;code&gt;BigUint64Array&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="dc997dad4494439606eb480415acf8f1c0c6b05c" translate="yes" xml:space="preserve">
          <source>An invalid array length might appear in these situations:</source>
          <target state="translated">このような状況では、無効な配列長が表示されることがあります。</target>
        </trans-unit>
        <trans-unit id="506ee6e30644d516e304fc8dfc1b1805e6799886" translate="yes" xml:space="preserve">
          <source>An iterable object, such as an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;../../iteration_protocols#The_iterable_protocol&quot;&gt;iterable&lt;/a&gt;.</source>
          <target state="translated">An iterable object, such as an &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;. See &lt;a href=&quot;../../iteration_protocols#The_iterable_protocol&quot;&gt;iterable&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="072ebc4cb51d3e0446dbaaf95877eb99fb472cf5" translate="yes" xml:space="preserve">
          <source>An iterable object, such as an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/iterable&quot;&gt;iterable&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;などの反復可能なオブジェクト。&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/iterable&quot;&gt;iterableを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f149abfff83b66c7ebbfb81fbb14f51ec0ef4ce9" translate="yes" xml:space="preserve">
          <source>An iterable such as &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; or other objects implementing the &lt;a href=&quot;../../iteration_protocols#The_iterable_protocol&quot;&gt;iterable protocol&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;../map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt;などの反復可能オブジェクト、または&lt;a href=&quot;../../iteration_protocols#The_iterable_protocol&quot;&gt;反復可能プロトコルを&lt;/a&gt;実装するその他のオブジェクト。</target>
        </trans-unit>
        <trans-unit id="5f2ede100cbd0f6ec44df1183f037c33e90c448d" translate="yes" xml:space="preserve">
          <source>An object containing all own property descriptors of an object. Might be an empty object, if there are no properties.</source>
          <target state="translated">あるオブジェクトのすべての自身のプロパティ記述子を含むオブジェクト。プロパティがない場合は空のオブジェクトかもしれません。</target>
        </trans-unit>
        <trans-unit id="46ea25370eaef0407e8dc3262ed647ebe09efdb1" translate="yes" xml:space="preserve">
          <source>An object containing the values to be imported into the newly-created &lt;code&gt;Instance&lt;/code&gt;, such as functions or &lt;a href=&quot;memory&quot;&gt;&lt;code&gt;WebAssembly.Memory&lt;/code&gt;&lt;/a&gt; objects. There must be one matching property for each declared import of &lt;code&gt;module&lt;/code&gt; or else a &lt;a href=&quot;linkerror&quot;&gt;&lt;code&gt;WebAssembly.LinkError&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">An object containing the values to be imported into the newly-created &lt;code&gt;Instance&lt;/code&gt; , such as functions or &lt;a href=&quot;memory&quot;&gt; &lt;code&gt;WebAssembly.Memory&lt;/code&gt; &lt;/a&gt; objects. There must be one matching property for each declared import of &lt;code&gt;module&lt;/code&gt; or else a &lt;a href=&quot;linkerror&quot;&gt; &lt;code&gt;WebAssembly.LinkError&lt;/code&gt; &lt;/a&gt; is thrown.</target>
        </trans-unit>
        <trans-unit id="3bec7bd7024bb97b0837a10deb648b4045bc8dac" translate="yes" xml:space="preserve">
          <source>An object containing the values to be imported into the newly-created &lt;code&gt;Instance&lt;/code&gt;, such as functions or &lt;a href=&quot;memory&quot;&gt;&lt;code&gt;WebAssembly.Memory&lt;/code&gt;&lt;/a&gt; objects. There must be one matching property for each declared import of &lt;code&gt;module&lt;/code&gt; or else a &lt;a href=&quot;linkerror&quot;&gt;WebAssembly.LinkError&lt;/a&gt; is thrown.</source>
          <target state="translated">関数や&lt;a href=&quot;memory&quot;&gt; &lt;code&gt;WebAssembly.Memory&lt;/code&gt; &lt;/a&gt;オブジェクトなど、新しく作成された &lt;code&gt;Instance&lt;/code&gt; にインポートされる値を含むオブジェクト。 &lt;code&gt;module&lt;/code&gt; 宣言されたインポートごとに1つの一致するプロパティが必要です。一致しない場合、&lt;a href=&quot;linkerror&quot;&gt;WebAssembly.LinkError&lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="e19b4618b39c0485290c2d5d07e27010bca56f33" translate="yes" xml:space="preserve">
          <source>An object containing the values to be imported into the newly-created &lt;code&gt;Instance&lt;/code&gt;, such as functions or &lt;a href=&quot;memory&quot;&gt;&lt;code&gt;WebAssembly.Memory&lt;/code&gt;&lt;/a&gt; objects. There must be one matching property for each declared import of the compiled module or else a &lt;a href=&quot;linkerror&quot;&gt;&lt;code&gt;WebAssembly.LinkError&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">An object containing the values to be imported into the newly-created &lt;code&gt;Instance&lt;/code&gt; , such as functions or &lt;a href=&quot;memory&quot;&gt; &lt;code&gt;WebAssembly.Memory&lt;/code&gt; &lt;/a&gt; objects. There must be one matching property for each declared import of the compiled module or else a &lt;a href=&quot;linkerror&quot;&gt; &lt;code&gt;WebAssembly.LinkError&lt;/code&gt; &lt;/a&gt; is thrown.</target>
        </trans-unit>
        <trans-unit id="66b1d73c63f41dfe35f11e6718cabf1dcc6a7ea7" translate="yes" xml:space="preserve">
          <source>An object containing the values to be imported into the newly-created &lt;code&gt;Instance&lt;/code&gt;, such as functions or &lt;a href=&quot;memory&quot;&gt;&lt;code&gt;WebAssembly.Memory&lt;/code&gt;&lt;/a&gt; objects. There must be one matching property for each declared import of the compiled module or else a &lt;a href=&quot;linkerror&quot;&gt;WebAssembly.LinkError&lt;/a&gt; is thrown.</source>
          <target state="translated">関数や&lt;a href=&quot;memory&quot;&gt; &lt;code&gt;WebAssembly.Memory&lt;/code&gt; &lt;/a&gt;オブジェクトなど、新しく作成された &lt;code&gt;Instance&lt;/code&gt; にインポートされる値を含むオブジェクト。コンパイルされたモジュールの宣言されたインポートごとに1つの一致するプロパティが必要です。一致しない場合、&lt;a href=&quot;linkerror&quot;&gt;WebAssembly.LinkError&lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="e9dabc0f328f544b71e23a30a35dc738a1b13d4e" translate="yes" xml:space="preserve">
          <source>An object containing the values to be imported into the newly-created &lt;code&gt;Instance&lt;/code&gt;, such as functions or &lt;a href=&quot;memory&quot;&gt;&lt;code&gt;WebAssembly.Memory&lt;/code&gt;&lt;/a&gt; objects. There must be one matching property for each declared import of the compiled module or else a &lt;code&gt;&lt;a href=&quot;linkerror&quot;&gt;WebAssembly.LinkError&lt;/a&gt;&lt;/code&gt; is thrown.</source>
          <target state="translated">An object containing the values to be imported into the newly-created &lt;code&gt;Instance&lt;/code&gt; , such as functions or &lt;a href=&quot;memory&quot;&gt; &lt;code&gt;WebAssembly.Memory&lt;/code&gt; &lt;/a&gt; objects. There must be one matching property for each declared import of the compiled module or else a &lt;code&gt;&lt;a href=&quot;linkerror&quot;&gt;WebAssembly.LinkError&lt;/a&gt;&lt;/code&gt; is thrown.</target>
        </trans-unit>
        <trans-unit id="ed4554d3a9bfe10fc9274f6580e3a99041e44b73" translate="yes" xml:space="preserve">
          <source>An object copy function</source>
          <target state="translated">オブジェクトコピー機能</target>
        </trans-unit>
        <trans-unit id="f2bb3dbcab4a3947fe5e075642972a91b8ef5b99" translate="yes" xml:space="preserve">
          <source>An object initializer is an expression that describes the initialization of an &lt;a href=&quot;../global_objects/object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;. Objects consist of &lt;em&gt;properties&lt;/em&gt;, which are used to describe an object. The values of object properties can either contain &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/primitive&quot;&gt;primitive&lt;/a&gt; data types or other objects.</source>
          <target state="translated">An object initializer is an expression that describes the initialization of an &lt;a href=&quot;../global_objects/object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;. Objects consist of &lt;em&gt;properties&lt;/em&gt;, which are used to describe an object. The values of object properties can either contain &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/primitive&quot;&gt;primitive&lt;/a&gt; data types or other objects.</target>
        </trans-unit>
        <trans-unit id="69c8c102247f74c4759a203869bb7774da7adb9b" translate="yes" xml:space="preserve">
          <source>An object initializer is an expression that describes the initialization of an &lt;a href=&quot;../global_objects/object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;. Objects consist of &lt;em&gt;properties&lt;/em&gt;, which are used to describe an object. Values of object properties can either contain &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/primitive&quot;&gt;primitive&lt;/a&gt; data types or other objects.</source>
          <target state="translated">オブジェクトの初期化子は、初期記述する式である&lt;a href=&quot;../global_objects/object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;。オブジェクトは、オブジェクトの説明に使用される&lt;em&gt;プロパティ&lt;/em&gt;で構成されています。オブジェクトプロパティの値には、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/primitive&quot;&gt;プリミティブ&lt;/a&gt;データ型または他のオブジェクトを含めることができます。</target>
        </trans-unit>
        <trans-unit id="99a621d988e485ace47a397128dc8e8d287136fd" translate="yes" xml:space="preserve">
          <source>An object is an iterator when it implements a &lt;code&gt;&lt;strong&gt;next()&lt;/strong&gt;&lt;/code&gt; method with the following semantics:</source>
          <target state="translated">オブジェクトは、次のセマンティクスで &lt;code&gt;&lt;strong&gt;next()&lt;/strong&gt;&lt;/code&gt; メソッドを実装するときのイテレータです。</target>
        </trans-unit>
        <trans-unit id="f11c3f8e12b5acf0a8a11cbec820f5fa06996f30" translate="yes" xml:space="preserve">
          <source>An object is expected somewhere and wasn't provided. &lt;a href=&quot;../global_objects/null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; is not an object and won't work. You must provide a proper object in the given situation.</source>
          <target state="translated">オブジェクトはどこかで予期され、提供されませんでした。&lt;a href=&quot;../global_objects/null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;はオブジェクトではないため、機能しません。特定の状況では、適切なオブジェクトを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="f4dbcd9a5cf0ba1654890be421a68b53eed3db69" translate="yes" xml:space="preserve">
          <source>An object is extensible if new properties can be added to it. &lt;code&gt;Object.preventExtensions()&lt;/code&gt; marks an object as no longer extensible, so that it will never have properties beyond the ones it had at the time it was marked as non-extensible. Note that the properties of a non-extensible object, in general, may still be &lt;em&gt;deleted&lt;/em&gt;. Attempting to add new properties to a non-extensible object will fail, either silently or by throwing a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; (most commonly, but not exclusively, when in &lt;a href=&quot;../../strict_mode&quot;&gt;strict mode&lt;/a&gt;).</source>
          <target state="translated">An object is extensible if new properties can be added to it. &lt;code&gt;Object.preventExtensions()&lt;/code&gt; marks an object as no longer extensible, so that it will never have properties beyond the ones it had at the time it was marked as non-extensible. Note that the properties of a non-extensible object, in general, may still be &lt;em&gt;deleted&lt;/em&gt;. Attempting to add new properties to a non-extensible object will fail, either silently or by throwing a &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; (most commonly, but not exclusively, when in &lt;a href=&quot;../../strict_mode&quot;&gt;strict mode&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="4436066d53f46a0d1753452787cf7af4d3ecb195" translate="yes" xml:space="preserve">
          <source>An object is extensible if new properties can be added to it. &lt;code&gt;Object.preventExtensions()&lt;/code&gt; marks an object as no longer extensible, so that it will never have properties beyond the ones it had at the time it was marked as non-extensible. Note that the properties of a non-extensible object, in general, may still be &lt;em&gt;deleted&lt;/em&gt;. Attempting to add new properties to a non-extensible object will fail, either silently or by throwing a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; (most commonly, but not exclusively, when in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode&quot;&gt;strict mode&lt;/a&gt;).</source>
          <target state="translated">新しいプロパティを追加できる場合、オブジェクトは拡張可能です。 &lt;code&gt;Object.preventExtensions()&lt;/code&gt; は、オブジェクトを拡張不可能としてマークします。そのため、オブジェクトは、拡張不可能としてマークされたときのプロパティを超えるプロパティを持つことはありません。一般に、拡張不可能なオブジェクトのプロパティは引き続き&lt;em&gt;削除さ&lt;/em&gt;れる可能性があることに注意してください。拡張できないオブジェクトに新しいプロパティを追加しようとすると、&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;、またはTypeErrorをスローすることで失敗します（&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode&quot;&gt;厳密モードでは&lt;/a&gt;、最も一般的ですが、これに限定されません）。</target>
        </trans-unit>
        <trans-unit id="cf3070f43e03d203dcef8fb9469bdfb447fa49f1" translate="yes" xml:space="preserve">
          <source>An object is frozen if and only if it is not &lt;a href=&quot;isextensible&quot;&gt;extensible&lt;/a&gt;, all its properties are non-configurable, and all its data properties (that is, properties which are not accessor properties with getter or setter components) are non-writable.</source>
          <target state="translated">オブジェクトがフリーズされるのは、それが&lt;a href=&quot;isextensible&quot;&gt;拡張可能&lt;/a&gt;ではなく、そのすべてのプロパティが構成不可能であり、そのすべてのデータプロパティ（つまり、getterまたはsetterコンポーネントのアクセサープロパティではないプロパティ）が書き込み不可の場合のみです。</target>
        </trans-unit>
        <trans-unit id="712ffe697d71b130ef3239945df80e1a6a9491bb" translate="yes" xml:space="preserve">
          <source>An object of named capturing groups whose keys are the names and values are the capturing groups or &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if no named capturing groups were defined. See &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Groups_and_Ranges&quot;&gt;Groups and Ranges&lt;/a&gt; for more information.</source>
          <target state="translated">An object of named capturing groups whose keys are the names and values are the capturing groups or &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; if no named capturing groups were defined. See &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Groups_and_Ranges&quot;&gt;Groups and Ranges&lt;/a&gt; for more information.</target>
        </trans-unit>
        <trans-unit id="6df81df7baba66915feda74646cf84534079038b" translate="yes" xml:space="preserve">
          <source>An object that can contain the following members:</source>
          <target state="translated">以下のメンバを含むことができるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="f02100f32e5bcd97721742e5813decce92bc3c34" translate="yes" xml:space="preserve">
          <source>An object value of whose own and inherited property names are excluded from the &lt;code&gt;&lt;a href=&quot;../statements/with&quot;&gt;with&lt;/a&gt;&lt;/code&gt; environment bindings of the associated object.</source>
          <target state="translated">その自身と継承されたプロパティ名のオブジェクトの値は対象から除外されている &lt;code&gt;&lt;a href=&quot;../statements/with&quot;&gt;with&lt;/a&gt;&lt;/code&gt; 、関連するオブジェクトの環境のバインディング。</target>
        </trans-unit>
        <trans-unit id="85a731bb400404166a455c869da7701f54ab8f37" translate="yes" xml:space="preserve">
          <source>An object whose &lt;a href=&quot;webassembly/memory/buffer&quot;&gt;&lt;code&gt;buffer&lt;/code&gt;&lt;/a&gt; property is a resizable &lt;a href=&quot;arraybuffer&quot;&gt;ArrayBuffer&lt;/a&gt; that holds the raw bytes of memory accessed by a WebAssembly &lt;code&gt;Instance&lt;/code&gt;.</source>
          <target state="translated">An object whose &lt;a href=&quot;webassembly/memory/buffer&quot;&gt; &lt;code&gt;buffer&lt;/code&gt; &lt;/a&gt; property is a resizable &lt;a href=&quot;arraybuffer&quot;&gt;ArrayBuffer&lt;/a&gt; that holds the raw bytes of memory accessed by a WebAssembly &lt;code&gt;Instance&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2817a49d74f07b9fbbb93dc2e97b4df5f01eb5f0" translate="yes" xml:space="preserve">
          <source>An object whose keys represent the names of properties to be defined or modified and whose values are objects describing those properties. Each value in &lt;code&gt;props&lt;/code&gt; must be either a data descriptor or an accessor descriptor; it cannot be both (see &lt;a href=&quot;defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt; for more details).</source>
          <target state="translated">An object whose keys represent the names of properties to be defined or modified and whose values are objects describing those properties. Each value in &lt;code&gt;props&lt;/code&gt; must be either a data descriptor or an accessor descriptor; it cannot be both (see &lt;a href=&quot;defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty()&lt;/code&gt; &lt;/a&gt; for more details).</target>
        </trans-unit>
        <trans-unit id="820a8026ea9b80267138c0a0b12726227ac4c231" translate="yes" xml:space="preserve">
          <source>An object whose own enumerable properties constitute descriptors for the properties to be defined or modified. Property descriptors present in objects come in two main flavors: data descriptors and accessor descriptors (see &lt;a href=&quot;defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt; for more details). Descriptors have the following keys:</source>
          <target state="translated">独自の列挙可能なプロパティが定義または変更されるプロパティの記述子を構成するオブジェクト。オブジェクトに存在するプロパティ記述子には、データ記述子とアクセサー記述子の2つの主要な種類があります（詳細については、&lt;a href=&quot;defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty()&lt;/code&gt; &lt;/a&gt;を参照してください）。記述子には次のキーがあります。</target>
        </trans-unit>
        <trans-unit id="ff96a012649da26d6ad3f16cf10c95ceaed68e32" translate="yes" xml:space="preserve">
          <source>An object whose properties are functions define the behavior of proxy &lt;code&gt;&lt;var&gt;p&lt;/var&gt;&lt;/code&gt; when an operation is performed on it.</source>
          <target state="translated">An object whose properties are functions define the behavior of proxy &lt;code&gt;&lt;var&gt;p&lt;/var&gt;&lt;/code&gt; when an operation is performed on it.</target>
        </trans-unit>
        <trans-unit id="9a03bc5e160e766a9ed1913bb0e172b19eaac291" translate="yes" xml:space="preserve">
          <source>An object whose properties are functions which define the behavior of the proxy when an operation is performed on it.</source>
          <target state="translated">プロキシに対して操作が行われたときのプロキシの動作を定義する関数をプロパ ティとするオブジェクト。</target>
        </trans-unit>
        <trans-unit id="9ef63f5b81d4a82352600a7b952ee57872f7bdd2" translate="yes" xml:space="preserve">
          <source>An object with configuration properties, for numbers see &lt;a href=&quot;../number/tolocalestring&quot;&gt;&lt;code&gt;Number.prototype.toLocaleString()&lt;/code&gt;&lt;/a&gt;, and for dates see &lt;a href=&quot;../date/tolocalestring&quot;&gt;&lt;code&gt;Date.prototype.toLocaleString()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">設定プロパティを持つオブジェクト。数値については&lt;a href=&quot;../number/tolocalestring&quot;&gt; &lt;code&gt;Number.prototype.toLocaleString()&lt;/code&gt; を&lt;/a&gt;、日付については&lt;a href=&quot;../date/tolocalestring&quot;&gt; &lt;code&gt;Date.prototype.toLocaleString()&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8c49c8fdfe03520a4f22227a3dace23aa8bffea7" translate="yes" xml:space="preserve">
          <source>An object's &lt;code&gt;valueOf&lt;/code&gt; method is usually invoked by JavaScript, but you can invoke it yourself as follows:</source>
          <target state="translated">オブジェクトの &lt;code&gt;valueOf&lt;/code&gt; メソッドは通常JavaScriptによって呼び出されますが、次のように自分で呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="f5bff02f5b42f7bb4a8dfe66ea44ca7d8395fddc" translate="yes" xml:space="preserve">
          <source>An optimization primitive that can be used to determine whether to use locks or atomic operations. Returns &lt;code&gt;true&lt;/code&gt; if an atomic operation on arrays of the given element size will be implemented using a hardware atomic operation (as opposed to a lock). Experts only.</source>
          <target state="translated">An optimization primitive that can be used to determine whether to use locks or atomic operations. Returns &lt;code&gt;true&lt;/code&gt; if an atomic operation on arrays of the given element size will be implemented using a hardware atomic operation (as opposed to a lock). Experts only.</target>
        </trans-unit>
        <trans-unit id="d3a29c22a80dd52034e9d0a6bb8b02f51cbeb8da" translate="yes" xml:space="preserve">
          <source>An optimization primitive that can be used to determine whether to use locks or atomic operations. Returns &lt;code&gt;true&lt;/code&gt;, if an atomic operation on arrays of the given element size will be implemented using a hardware atomic operation (as opposed to a lock). Experts only.</source>
          <target state="translated">ロックまたはアトミック操作を使用するかどうかを決定するために使用できる最適化プリミティブ。指定された要素サイズの配列に対するアトミック操作がハードウェアアトミック操作（ロックではなく）を使用して実装される場合は、 &lt;code&gt;true&lt;/code&gt; を返します。専門家のみ。</target>
        </trans-unit>
        <trans-unit id="d99abf3c44aeed951d4777d64be8fdd61de202ff" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;label&quot;&gt;&lt;code&gt;label&lt;/code&gt;&lt;/a&gt; for visual identification or as a target for &lt;a href=&quot;break&quot;&gt;&lt;code&gt;break&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">視覚的識別のための、または&lt;a href=&quot;break&quot;&gt; &lt;code&gt;break&lt;/code&gt; &lt;/a&gt;ターゲットとしてのオプションの&lt;a href=&quot;label&quot;&gt; &lt;code&gt;label&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1f476a0b44d763ae55a8605a52e48c6f66b3cef7" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;label&quot;&gt;label&lt;/a&gt; for visual identification or as a target for &lt;a href=&quot;break&quot;&gt;&lt;code&gt;break&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">An optional &lt;a href=&quot;label&quot;&gt;label&lt;/a&gt; for visual identification or as a target for &lt;a href=&quot;break&quot;&gt; &lt;code&gt;break&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="d74c34f0ecf7dc3de3b2a7be41d3c4d58b0914c6" translate="yes" xml:space="preserve">
          <source>An optional identifier to hold an exception object for the associated &lt;code&gt;catch&lt;/code&gt;-block.</source>
          <target state="translated">An optional identifier to hold an exception object for the associated &lt;code&gt;catch&lt;/code&gt; -block.</target>
        </trans-unit>
        <trans-unit id="3f70d39f14cbc68c1cd5c4b7aa65ac0f905c0522" translate="yes" xml:space="preserve">
          <source>An optional statement that is executed as long as the condition evaluates to true. To execute multiple statements within the loop, use a &lt;a href=&quot;block&quot;&gt;block&lt;/a&gt; statement (&lt;code&gt;{ ... }&lt;/code&gt;) to group those statements.</source>
          <target state="translated">条件がtrueと評価される限り実行されるオプションのステートメント。ループ内で複数のステートメントを実行するには、&lt;a href=&quot;block&quot;&gt;ブロック&lt;/a&gt;ステートメント（ &lt;code&gt;{ ... }&lt;/code&gt; ）を使用してそれらのステートメントをグループ化します。</target>
        </trans-unit>
        <trans-unit id="24819c5ddedcfe55fcfd455595e135fef10eea7f" translate="yes" xml:space="preserve">
          <source>An unsigned 16-bit integer number.</source>
          <target state="translated">符号なし16ビットの整数値。</target>
        </trans-unit>
        <trans-unit id="ce504bc3d402213305047f30718c8aa5119f3d78" translate="yes" xml:space="preserve">
          <source>An unsigned 32-bit integer number.</source>
          <target state="translated">符号なし32ビット整数。</target>
        </trans-unit>
        <trans-unit id="c4c36bd8b8247e9a2a43a0269db5cfa41e5b9762" translate="yes" xml:space="preserve">
          <source>An unsigned 8-bit integer number.</source>
          <target state="translated">符号なし8ビットの整数値。</target>
        </trans-unit>
        <trans-unit id="8e31e6e045f0d9d021bd59af5b2b59d92a760712" translate="yes" xml:space="preserve">
          <source>Anchored sticky flag</source>
          <target state="translated">アンカー付箋旗</target>
        </trans-unit>
        <trans-unit id="f9078d8fbf9d47370364306bfc30567e70f7b2f5" translate="yes" xml:space="preserve">
          <source>Anchored sticky flag behavior per ES2015</source>
          <target state="translated">ES2015に基づくアンカー付きスティッキーフラッグの挙動</target>
        </trans-unit>
        <trans-unit id="b108963d124df70a2f67339c2de1882421596e6a" translate="yes" xml:space="preserve">
          <source>Anchors created with the &lt;code&gt;anchor()&lt;/code&gt; method become elements in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/anchors&quot;&gt;&lt;code&gt;document.anchors&lt;/code&gt;&lt;/a&gt; array.</source>
          <target state="translated">&lt;code&gt;anchor()&lt;/code&gt; メソッドで作成されたアンカーは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/anchors&quot;&gt; &lt;code&gt;document.anchors&lt;/code&gt; &lt;/a&gt;配列の要素になります。</target>
        </trans-unit>
        <trans-unit id="2adfedf85e6eb6b155c99d184553081314d22ff9" translate="yes" xml:space="preserve">
          <source>And also:</source>
          <target state="translated">とかも。</target>
        </trans-unit>
        <trans-unit id="a9158d219a6ae1568e116122989b29c295fb483b" translate="yes" xml:space="preserve">
          <source>And finally, for &lt;strong&gt;named functions&lt;/strong&gt; we treat arrow expressions like variables</source>
          <target state="translated">And finally, for &lt;strong&gt;named functions&lt;/strong&gt; we treat arrow expressions like variables</target>
        </trans-unit>
        <trans-unit id="d29c3e2888737fa5cb456b54f6811f8aa4029364" translate="yes" xml:space="preserve">
          <source>And if you were to provide an &lt;code&gt;&lt;var&gt;initialValue&lt;/var&gt;&lt;/code&gt;, the result would look like this:</source>
          <target state="translated">And if you were to provide an &lt;code&gt;&lt;var&gt;initialValue&lt;/var&gt;&lt;/code&gt; , the result would look like this:</target>
        </trans-unit>
        <trans-unit id="a7480d2aeec56676be28d36508a4c39dd4fe7bdb" translate="yes" xml:space="preserve">
          <source>And if you were to provide an &lt;code&gt;initialValue&lt;/code&gt;, the result would look like this:</source>
          <target state="translated">また、 &lt;code&gt;initialValue&lt;/code&gt; を指定した場合、結果は次のようになります。</target>
        </trans-unit>
        <trans-unit id="6cf4b1ce40c89b2855c5fbfaf193e6fc17095989" translate="yes" xml:space="preserve">
          <source>And now, let's re-throw the error.</source>
          <target state="translated">そして、今度はエラーを再投してみましょう。</target>
        </trans-unit>
        <trans-unit id="a2a432eee98ed07f9acd2295f1515c76ea6f6efb" translate="yes" xml:space="preserve">
          <source>And now, let's rethrow the error.</source>
          <target state="translated">そして、今度はエラーを投げ直してみましょう。</target>
        </trans-unit>
        <trans-unit id="e133533c62c20c49e00f259c00bce75deb9562ab" translate="yes" xml:space="preserve">
          <source>And then instantiate two new &lt;code&gt;Person&lt;/code&gt; objects as follows:</source>
          <target state="translated">And then instantiate two new &lt;code&gt;Person&lt;/code&gt; objects as follows:</target>
        </trans-unit>
        <trans-unit id="9e40ca491b5dc7bb4160c2cc168b1951a8bcd2fb" translate="yes" xml:space="preserve">
          <source>And then instantiate two new &lt;code&gt;person&lt;/code&gt; objects as follows:</source>
          <target state="translated">次に、2つの新しい &lt;code&gt;person&lt;/code&gt; オブジェクトを次のようにインスタンス化します。</target>
        </trans-unit>
        <trans-unit id="a5b93109d2910f83b46a8f8b84565a2b90f04e8f" translate="yes" xml:space="preserve">
          <source>Android webview</source>
          <target state="translated">Android ウェブビュー</target>
        </trans-unit>
        <trans-unit id="a41a56fc235abdf7386b1d8797eb97d0da88f3a0" translate="yes" xml:space="preserve">
          <source>Anonymous function expression</source>
          <target state="translated">匿名関数式</target>
        </trans-unit>
        <trans-unit id="2fa2afa4021d3c7afb706a67d2f9a41524ab1bba" translate="yes" xml:space="preserve">
          <source>Anonymous function expressions that were created using the keyword &lt;code&gt;function&lt;/code&gt; or arrow functions would have &lt;code&gt;&quot;&quot;&lt;/code&gt; (an empty string) as their name.</source>
          <target state="translated">Anonymous function expressions that were created using the keyword &lt;code&gt;function&lt;/code&gt; or arrow functions would have &lt;code&gt;&quot;&quot;&lt;/code&gt; (an empty string) as their name.</target>
        </trans-unit>
        <trans-unit id="4d9e238257091e7b815453db1e7f955856aac944" translate="yes" xml:space="preserve">
          <source>Another Example: An &lt;a href=&quot;if...else&quot;&gt;&lt;code&gt;if...else&lt;/code&gt;&lt;/a&gt; statement without curly braces (&lt;code&gt;{}&lt;/code&gt;). If &lt;code&gt;three&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, nothing will happen, &lt;code&gt;four&lt;/code&gt; does not matter, and also the &lt;code&gt;launchRocket()&lt;/code&gt; function in the &lt;code&gt;else&lt;/code&gt; case will not be executed.</source>
          <target state="translated">別の例：中括弧（ &lt;code&gt;{}&lt;/code&gt; ）のない&lt;a href=&quot;if...else&quot;&gt; &lt;code&gt;if...else&lt;/code&gt; &lt;/a&gt;ステートメント。場合は &lt;code&gt;three&lt;/code&gt; あり &lt;code&gt;true&lt;/code&gt; 、何も、起こりません &lt;code&gt;four&lt;/code&gt; 問題ではない、とも &lt;code&gt;launchRocket()&lt;/code&gt; 関数 &lt;code&gt;else&lt;/code&gt; 場合は実行されません。</target>
        </trans-unit>
        <trans-unit id="7e1638d3363efdfbe5466eef1db2d2342c31fe3e" translate="yes" xml:space="preserve">
          <source>Another example</source>
          <target state="translated">別の例</target>
        </trans-unit>
        <trans-unit id="38aefb666b7ab2db7e6b6eb0f628cc7c37e33e6e" translate="yes" xml:space="preserve">
          <source>Another example of temporal dead zone combined with lexical scoping</source>
          <target state="translated">時間的不感帯と語彙的スコーピングを組み合わせた別の例</target>
        </trans-unit>
        <trans-unit id="5ab1c822e9b3b96cbfa2bd5e2a0b2913a89156c6" translate="yes" xml:space="preserve">
          <source>Another example of throwing an object</source>
          <target state="translated">オブジェクトを投げる別の例</target>
        </trans-unit>
        <trans-unit id="db2f210ea05881fd5ef1b241094fcad01c62cbe2" translate="yes" xml:space="preserve">
          <source>Another example that one could make with comma operator is processing before returning. As stated, only the last element will be returned but all others are going to be evaluated as well. So, one could do:</source>
          <target state="translated">カンマ演算子を使ったもう一つの例は、返す前の処理です。このように、最後の要素だけが返されますが、他のすべての要素も同様に評価されます。そこで、次のようなことができます。</target>
        </trans-unit>
        <trans-unit id="29729dc342f0f212d34bf555bf46a096e78104b3" translate="yes" xml:space="preserve">
          <source>Another feature that was deprecated was &lt;code&gt;arguments.callee.caller&lt;/code&gt;, or more specifically &lt;code&gt;Function.caller&lt;/code&gt;. Why is this? Well, at any point in time you can find the deepest caller of any function on the stack, and as I said above looking at the call stack has one single major effect: it makes a large number of optimizations impossible, or much much more difficult. For example, if you cannot guarantee that a function &lt;code&gt;f&lt;/code&gt; will not call an unknown function, it is not possible to inline &lt;code&gt;f&lt;/code&gt;. Basically it means that any call site that may have been trivially inlinable accumulates a large number of guards:</source>
          <target state="translated">非推奨となったもう1つの機能は、 &lt;code&gt;arguments.callee.caller&lt;/code&gt; 、より具体的には &lt;code&gt;Function.caller&lt;/code&gt; でした。どうしてこれなの？ええと、いつでもスタック上の任意の関数の最も深い呼び出し元を見つけることができます。前述のように、呼び出しスタックを確認すると、1つの大きな効果があります。それは、多数の最適化を不可能にするか、はるかに困難にします。 。あなたが機能することを保証できない場合たとえば、 &lt;code&gt;f&lt;/code&gt; は未知の機能を呼び出すことはありません、それはインラインすることはできません &lt;code&gt;f&lt;/code&gt; 。基本的に、それは自明である可能性がある呼び出しサイトが多数のガードを蓄積することを意味します：</target>
        </trans-unit>
        <trans-unit id="76fc00cfc08f8f3c2a4610681b74ef7a539ad447" translate="yes" xml:space="preserve">
          <source>Another option for this use case might be to use a &lt;a href=&quot;../global_objects/map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この使用例のもう1つのオプションは、&lt;a href=&quot;../global_objects/map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="659dd4787a10ee95228f3a766583c861c4376858" translate="yes" xml:space="preserve">
          <source>Another possibility is to use &lt;a href=&quot;../template_literals&quot;&gt;template literals&lt;/a&gt;, which are supported in ECMAScript 2015 environments:</source>
          <target state="translated">もう1つの可能性は、ECMAScript 2015環境でサポートされている&lt;a href=&quot;../template_literals&quot;&gt;テンプレートリテラル&lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="678fdef9c1a3fde8a191396e515b2108c7749a62" translate="yes" xml:space="preserve">
          <source>Another simple example using &lt;code&gt;Promise&lt;/code&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; to load an image is available at the MDN GitHub &lt;a href=&quot;https://github.com/mdn/js-examples/tree/master/promises-test&quot;&gt;js-examples&lt;/a&gt; repository. You can also &lt;a href=&quot;https://mdn.github.io/js-examples/promises-test/&quot;&gt;see it in action&lt;/a&gt;. Each step is commented and allows you to follow the Promise and XHR architecture closely.</source>
          <target state="translated">&lt;code&gt;Promise&lt;/code&gt; と&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; &lt;/a&gt;を使用して画像を読み込む別の簡単な例は、MDN GitHub &lt;a href=&quot;https://github.com/mdn/js-examples/tree/master/promises-test&quot;&gt;js-examples&lt;/a&gt;リポジトリにあります。&lt;a href=&quot;https://mdn.github.io/js-examples/promises-test/&quot;&gt;実際に見る&lt;/a&gt;こともできます。各ステップにはコメントが付けられており、PromiseとXHRのアーキテクチャに厳密に従うことができます。</target>
        </trans-unit>
        <trans-unit id="c8c04e1867e064b47ad4b2221b9c4a319b967c39" translate="yes" xml:space="preserve">
          <source>Another simple example using &lt;code&gt;Promise&lt;/code&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; to load an image is available at the MDN GitHub &lt;a href=&quot;https://github.com/mdn/js-examples/tree/master/promises-test&quot;&gt;js-examples&lt;/a&gt; repository. You can also &lt;a href=&quot;https://mdn.github.io/js-examples/promises-test/&quot;&gt;see it in action&lt;/a&gt;. Each step is commented on and allows you to follow the Promise and XHR architecture closely.</source>
          <target state="translated">Another simple example using &lt;code&gt;Promise&lt;/code&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; &lt;/a&gt; to load an image is available at the MDN GitHub &lt;a href=&quot;https://github.com/mdn/js-examples/tree/master/promises-test&quot;&gt;js-examples&lt;/a&gt; repository. You can also &lt;a href=&quot;https://mdn.github.io/js-examples/promises-test/&quot;&gt;see it in action&lt;/a&gt;. Each step is commented on and allows you to follow the Promise and XHR architecture closely.</target>
        </trans-unit>
        <trans-unit id="a181e40979db43208338191d57acf6b1b4ca1ece" translate="yes" xml:space="preserve">
          <source>Another way would be two to handle the empty case, either before calling &lt;code&gt;reduce&lt;/code&gt;, or in the callback after adding an unexpected dummy initial value.</source>
          <target state="translated">もう1つの方法は、 &lt;code&gt;reduce&lt;/code&gt; を呼び出す前、または予期しないダミーの初期値を追加した後のコールバックで、空のケースを処理する2つです。</target>
        </trans-unit>
        <trans-unit id="65dbba8190c1c78cee3f235dda797321e96cf16c" translate="yes" xml:space="preserve">
          <source>Anurag Majumdar - Super &amp;amp; Extends in JavaScript</source>
          <target state="translated">Anurag Majumdar-JavaScriptでのスーパーと拡張</target>
        </trans-unit>
        <trans-unit id="8fe5105a977c4769f1bd28eaa84cc7507432091d" translate="yes" xml:space="preserve">
          <source>Any JavaScript identifier that is not a reserved word.</source>
          <target state="translated">予約語ではないJavaScriptの識別子。</target>
        </trans-unit>
        <trans-unit id="d37f0c77a82b0dc9c48652775d8c0df86c964a7e" translate="yes" xml:space="preserve">
          <source>Any JavaScript value returned by the iterator. Can be omitted when &lt;code&gt;done&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Any JavaScript value returned by the iterator. Can be omitted when &lt;code&gt;done&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="120ebc47eb19aed84fe0fa9335c2121c4d28cc38" translate="yes" xml:space="preserve">
          <source>Any argument in the argument list can use spread syntax and it can be used multiple times.</source>
          <target state="translated">引数リスト内の任意の引数はスプレッド構文を使用することができ、複数回使用することができます。</target>
        </trans-unit>
        <trans-unit id="9f8b562bb735f4067dc9da1e62b0ed53a2464a7a" translate="yes" xml:space="preserve">
          <source>Any argument in the argument list can use spread syntax, and the spread syntax can be used multiple times.</source>
          <target state="translated">引数リスト内の任意の引数はスプレッド構文を使用することができ、スプレッド構文は複数回使用することができます。</target>
        </trans-unit>
        <trans-unit id="d297acf05987414a38f19277e26e954c347bdc8c" translate="yes" xml:space="preserve">
          <source>Any argument value that is &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; is treated as if it were &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">Any argument value that is &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; is treated as if it were &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4d8022bc7c6ecc3f95235e0126a70f61a8dc946a" translate="yes" xml:space="preserve">
          <source>Any argument value that is less than 0 or greater than &lt;code&gt;stringName.length&lt;/code&gt; is treated as if it were 0 and &lt;code&gt;stringName.length&lt;/code&gt; respectively. Any argument value that is &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; is treated as if it were 0.</source>
          <target state="translated">0未満または &lt;code&gt;stringName.length&lt;/code&gt; より大きい引数値は、それぞれ0および &lt;code&gt;stringName.length&lt;/code&gt; であるかのように扱われます。&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; の&lt;/a&gt;引数値は、0であるかのように扱われます。</target>
        </trans-unit>
        <trans-unit id="f1703017d123e905663da479f61f12f8aa24fc77" translate="yes" xml:space="preserve">
          <source>Any argument value that is less than &lt;code&gt;0&lt;/code&gt; or greater than &lt;code&gt;stringName.length&lt;/code&gt; is treated as if it were &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;stringName.length&lt;/code&gt;, respectively.</source>
          <target state="translated">Any argument value that is less than &lt;code&gt;0&lt;/code&gt; or greater than &lt;code&gt;stringName.length&lt;/code&gt; is treated as if it were &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;stringName.length&lt;/code&gt; , respectively.</target>
        </trans-unit>
        <trans-unit id="462f06d1e073cd86185bb9aaf55b870129c25321" translate="yes" xml:space="preserve">
          <source>Any code points may appear in the form of an escape sequence. String literals evaluate to ECMAScript String values. When generating these String values Unicode code points are UTF-16 encoded.</source>
          <target state="translated">任意のコードポイントは、エスケープシーケンスの形で表示されることがあります。文字列リテラルは、ECMAScript の文字列値に評価されます。これらの String 値を生成する際には、Unicode コードポイントは UTF-16 でエンコードされます。</target>
        </trans-unit>
        <trans-unit id="e0172cb97961cdda062ca7ce8fac8d0a39efa7ea" translate="yes" xml:space="preserve">
          <source>Any expressions.</source>
          <target state="translated">どんな表現でも。</target>
        </trans-unit>
        <trans-unit id="c94601c41a96ba46ae20815dea8dbb4c8727e4c6" translate="yes" xml:space="preserve">
          <source>Any function.</source>
          <target state="translated">どんな機能でも</target>
        </trans-unit>
        <trans-unit id="88f4c0bee8a7ff7d3a4343d95829f783a371620f" translate="yes" xml:space="preserve">
          <source>Any given exception will be caught only once by the nearest enclosing &lt;code&gt;catch&lt;/code&gt;-block unless it is rethrown. Of course, any new exceptions raised in the &quot;inner&quot; block (because the code in &lt;code&gt;catch&lt;/code&gt;-block may do something that throws), will be caught by the &quot;outer&quot; block.</source>
          <target state="translated">Any given exception will be caught only once by the nearest enclosing &lt;code&gt;catch&lt;/code&gt; -block unless it is rethrown. Of course, any new exceptions raised in the &quot;inner&quot; block (because the code in &lt;code&gt;catch&lt;/code&gt; -block may do something that throws), will be caught by the &quot;outer&quot; block.</target>
        </trans-unit>
        <trans-unit id="1df0363b66ad832b2d5de41b91505b4cfbc96ff0" translate="yes" xml:space="preserve">
          <source>Any given exception will be caught only once by the nearest enclosing catch-block unless it is re-thrown. Of course, any new exceptions raised in the &quot;inner&quot; block (because the code in catch-block may do something that throws), will be caught by the &quot;outer&quot; block.</source>
          <target state="translated">与えられた例外は、それが再スローされない限り、最も近くにあるキャッチブロックによって一度だけ捕捉されます。もちろん、&quot;inner&quot; ブロックで発生した新しい例外は、(キャッチブロック内のコードがスローするようなことをするかもしれないので)&quot;external&quot; ブロックでキャッチされます。</target>
        </trans-unit>
        <trans-unit id="c57c6045ba537d4f4071760d6b3efdb563da7e55" translate="yes" xml:space="preserve">
          <source>Any literal strings or whitespace in the formatted number.</source>
          <target state="translated">フォーマットされた数値のリテラル文字列または空白。</target>
        </trans-unit>
        <trans-unit id="dd90c15ad5e32e40f3250e0b9c1cf1a64b4485f1" translate="yes" xml:space="preserve">
          <source>Any negative number divided by &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; is negative Zero.</source>
          <target state="translated">&lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; で除算された負の数値は、負のゼロです。</target>
        </trans-unit>
        <trans-unit id="f4f9a99f13863877ce756b248ebeab1f32f415e6" translate="yes" xml:space="preserve">
          <source>Any negative value divided by &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; is positive zero.</source>
          <target state="translated">&lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; で除算された負の値は正のゼロです。</target>
        </trans-unit>
        <trans-unit id="69d70aab2b2c68be24f0e61566d853801ee81d21" translate="yes" xml:space="preserve">
          <source>Any negative value, including &lt;a href=&quot;negative_infinity&quot;&gt;&lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt;&lt;/a&gt;, multiplied by &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; is &lt;a href=&quot;negative_infinity&quot;&gt;&lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">含む任意の負の値、&lt;a href=&quot;negative_infinity&quot;&gt; &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; &lt;/a&gt;を掛け、 &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; がある&lt;a href=&quot;negative_infinity&quot;&gt; &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="93ed4a42f1477dc2202345409410952854ed731b" translate="yes" xml:space="preserve">
          <source>Any negative value, including &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt;, multiplied by &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; is &lt;a href=&quot;positive_infinity&quot;&gt;&lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">含む任意の負の値、 &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; を掛け、 &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; がある&lt;a href=&quot;positive_infinity&quot;&gt; &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="549464df94eb314d9570aedac15d470cd515adce" translate="yes" xml:space="preserve">
          <source>Any newline characters inserted in the source are part of the template literal.</source>
          <target state="translated">ソースに挿入された改行文字はすべてテンプレートリテラルの一部です。</target>
        </trans-unit>
        <trans-unit id="02c4a209de2c2fadc72815c6a463bb88e0037e90" translate="yes" xml:space="preserve">
          <source>Any newline characters inserted in the source are part of the template literal. Using normal strings, you would have to use the following syntax in order to get multi-line strings:</source>
          <target state="translated">ソースに挿入された改行文字はすべてテンプレートリテラルの一部です。通常の文字列を使用すると、複数行の文字列を取得するには以下の構文を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="e783679a6e6d3b22ceca2b95d8f69e073f1687ca" translate="yes" xml:space="preserve">
          <source>Any object of which the value is not &lt;a href=&quot;undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;, including a &lt;code&gt;Boolean&lt;/code&gt; object whose value is &lt;code&gt;false&lt;/code&gt;, evaluates to &lt;code&gt;true&lt;/code&gt; when passed to a conditional statement. For example, the condition in the following &lt;a href=&quot;../statements/if...else&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; statement evaluates to &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">値が&lt;a href=&quot;undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;でないオブジェクト（値が &lt;code&gt;false&lt;/code&gt; の &lt;code&gt;Boolean&lt;/code&gt; オブジェクトを含む）は、条件ステートメントに渡されると &lt;code&gt;true&lt;/code&gt; と評価されます。たとえば、次の&lt;a href=&quot;../statements/if...else&quot;&gt; &lt;code&gt;if&lt;/code&gt; &lt;/a&gt;ステートメントの条件は &lt;code&gt;true&lt;/code&gt; と評価されます。</target>
        </trans-unit>
        <trans-unit id="738a0c7a56a0cdf7441e37fe93cb49a261cc5c7d" translate="yes" xml:space="preserve">
          <source>Any operation that involves a string and is not an addition operation (e.g. &lt;code&gt;&quot;foo&quot; / 3&lt;/code&gt;)</source>
          <target state="translated">Any operation that involves a string and is not an addition operation (e.g. &lt;code&gt;&quot;foo&quot; / 3&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="baae159e1bc05db0ccfaa73f09024f70815a9c63" translate="yes" xml:space="preserve">
          <source>Any other object</source>
          <target state="translated">その他のオブジェクト</target>
        </trans-unit>
        <trans-unit id="3d870d35221986484377d8371800209cb672221c" translate="yes" xml:space="preserve">
          <source>Any positive number divided by &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; is positive Zero.</source>
          <target state="translated">&lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; で割った正の数は正のゼロです。</target>
        </trans-unit>
        <trans-unit id="8f2ef7716332780d4cbeb4b02ca293197d780a28" translate="yes" xml:space="preserve">
          <source>Any positive value divided by &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; is negativezero.</source>
          <target state="translated">&lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; で割った正の値はすべて負のゼロです。</target>
        </trans-unit>
        <trans-unit id="71c63b188472aeb3bb2c19b931773ffeb14e9541" translate="yes" xml:space="preserve">
          <source>Any positive value, including &lt;a href=&quot;positive_infinity&quot;&gt;&lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;&lt;/a&gt;, multiplied by &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; is &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt;.</source>
          <target state="translated">含む任意の正の値、&lt;a href=&quot;positive_infinity&quot;&gt; &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; &lt;/a&gt;を掛け、 &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; がある &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="40663bd051e9eb26e11a76943aa7901805b6a7f7" translate="yes" xml:space="preserve">
          <source>Any positive value, including &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;, multiplied by &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; is &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;.</source>
          <target state="translated">含む任意の正の値、 &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; を掛け、 &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; がある &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9f36b58843a66d33558d0519080bc582d8b84843" translate="yes" xml:space="preserve">
          <source>Any property declared with &lt;a href=&quot;../statements/let&quot;&gt;&lt;code&gt;let&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../statements/const&quot;&gt;&lt;code&gt;const&lt;/code&gt;&lt;/a&gt; cannot be deleted from the scope within which they were defined.</source>
          <target state="translated">&lt;a href=&quot;../statements/let&quot;&gt; &lt;code&gt;let&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../statements/const&quot;&gt; &lt;code&gt;const&lt;/code&gt; で&lt;/a&gt;宣言されたプロパティは、それらが定義されたスコープから削除できません。</target>
        </trans-unit>
        <trans-unit id="d250a3d163c089daaf861c1b6281450a1214fbee" translate="yes" xml:space="preserve">
          <source>Any property declared with &lt;a href=&quot;../statements/var&quot;&gt;&lt;code&gt;var&lt;/code&gt;&lt;/a&gt; cannot be deleted from the global scope or from a function's scope.</source>
          <target state="translated">&lt;a href=&quot;../statements/var&quot;&gt; &lt;code&gt;var&lt;/code&gt; で&lt;/a&gt;宣言されたプロパティは、グローバルスコープまたは関数のスコープから削除できません。</target>
        </trans-unit>
        <trans-unit id="fe1b3703f73f75fe58f81e1ed59799544c6a1b63" translate="yes" xml:space="preserve">
          <source>Any statement. To execute multiple statements, use a &lt;a href=&quot;block&quot;&gt;block&lt;/a&gt; statement ({ ... }) to group those statements.</source>
          <target state="translated">任意のステートメント。複数のステートメントを実行するには、&lt;a href=&quot;block&quot;&gt;ブロック&lt;/a&gt;ステートメント（{...}）を使用してそれらのステートメントをグループ化します。</target>
        </trans-unit>
        <trans-unit id="1ce2652c4b040238e06008189496237a246ca32b" translate="yes" xml:space="preserve">
          <source>Any string that specifies the &lt;code&gt;href&lt;/code&gt; attribute of the &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tag; it should be a valid URL (relative or absolute), with any &lt;code&gt;&amp;amp;&lt;/code&gt; characters escaped as &lt;code&gt;&amp;amp;amp;&lt;/code&gt;, and any &lt;code&gt;&quot;&lt;/code&gt; characters escaped as &lt;code&gt;&amp;amp;quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; タグの &lt;code&gt;href&lt;/code&gt; 属性を指定する任意の文字列。 &lt;code&gt;&amp;amp;&lt;/code&gt; 文字が &lt;code&gt;&amp;amp;amp;&lt;/code&gt; としてエスケープされた有効なURL（相対または絶対）である必要があります。、および &lt;code&gt;&quot;&lt;/code&gt; 文字は &lt;code&gt;&amp;amp;quot;&lt;/code&gt; としてエスケープされます。</target>
        </trans-unit>
        <trans-unit id="0731bcf6e4efb427019a6c5d202f52547a23214e" translate="yes" xml:space="preserve">
          <source>Any valid expression.</source>
          <target state="translated">どんな有効な表現でも</target>
        </trans-unit>
        <trans-unit id="f8a80c1d8b906a18596a29b844aca28794484214" translate="yes" xml:space="preserve">
          <source>Any value.</source>
          <target state="translated">どんな値でも</target>
        </trans-unit>
        <trans-unit id="79e875b09fd179b1df32cb6b33825331f219f1bd" translate="yes" xml:space="preserve">
          <source>Any variable defined with &lt;code&gt;var&lt;/code&gt; is marked as non-configurable. In the following example, &lt;code&gt;salary&lt;/code&gt; is non-configurable and cannot be deleted. In non-strict mode, the &lt;code&gt;delete&lt;/code&gt; operation will return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;var&lt;/code&gt; で定義された変数は、構成不可としてマークされます。次の例では、 &lt;code&gt;salary&lt;/code&gt; は構成できず、削除できません。非厳密モードでは、 &lt;code&gt;delete&lt;/code&gt; 操作は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="7a84a609481880e442128a873df9896371e4a486" translate="yes" xml:space="preserve">
          <source>Anything to be converted to a string.</source>
          <target state="translated">文字列に変換されるものは何でもいい。</target>
        </trans-unit>
        <trans-unit id="d3e109750a4efd5f9de22e23d078725de8858fd9" translate="yes" xml:space="preserve">
          <source>Anyway, it can be simplified using &lt;a href=&quot;../function/bind&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Anyway, it can be simplified using &lt;a href=&quot;../function/bind&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="236c6d96d1396da47fb718c1c70cbd3dd681a57d" translate="yes" xml:space="preserve">
          <source>Appending Prototype Chains</source>
          <target state="translated">プロトタイプチェーンの追加</target>
        </trans-unit>
        <trans-unit id="806aee0e4633c8e7750f3f2812362738aa8d8af0" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;&lt;var&gt;value&lt;/var&gt;&lt;/code&gt; to the &lt;code&gt;Set&lt;/code&gt; object. Returns the &lt;code&gt;Set&lt;/code&gt; object.</source>
          <target state="translated">Appends &lt;code&gt;&lt;var&gt;value&lt;/var&gt;&lt;/code&gt; to the &lt;code&gt;Set&lt;/code&gt; object. Returns the &lt;code&gt;Set&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="3e1c96547e09ee6d604882e24ff555a931b56bd4" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;&lt;var&gt;value&lt;/var&gt;&lt;/code&gt; to the &lt;code&gt;WeakSet&lt;/code&gt; object.</source>
          <target state="translated">Appends &lt;code&gt;&lt;var&gt;value&lt;/var&gt;&lt;/code&gt; to the &lt;code&gt;WeakSet&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="433e9e96e0b07f8c286dea4d11f453f49714ebe6" translate="yes" xml:space="preserve">
          <source>Appends a handler to the promise, and returns a new promise that is resolved when the original promise is resolved. The handler is called when the promise is settled, whether fulfilled or rejected.</source>
          <target state="translated">ハンドラを約束に追加し、元の約束が解決されたときに解決された新しい約束を返します。ハンドラは、約束が履行されたか拒否されたかに関わらず、約束が解決されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="e665300e918d74332b2742b941327096ebc4e41d" translate="yes" xml:space="preserve">
          <source>Appends a handler to the promise, and returns a new promise which is resolved when the original promise is resolved. The handler is called when the promise is settled, whether fulfilled or rejected.</source>
          <target state="translated">ハンドラを約束に追加し、元の約束が解決されたときに解決された新しい約束を返します。ハンドラは、約束が履行されたか拒否されたかに関わらず、約束が解決されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="a1410ae34999bd4955a8e78f8882063187d204fd" translate="yes" xml:space="preserve">
          <source>Appends a new element with the given value to the &lt;code&gt;Set&lt;/code&gt; object. Returns the &lt;code&gt;Set&lt;/code&gt; object.</source>
          <target state="translated">指定された値を持つ新しい要素を &lt;code&gt;Set&lt;/code&gt; オブジェクトに追加します。 &lt;code&gt;Set&lt;/code&gt; オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="a38b2c6702934be92b08ef81b626db7ffc599942" translate="yes" xml:space="preserve">
          <source>Appends a new object with the given value to the &lt;code&gt;WeakSet&lt;/code&gt; object.</source>
          <target state="translated">指定された値を持つ新しいオブジェクトを &lt;code&gt;WeakSet&lt;/code&gt; オブジェクトに追加します。</target>
        </trans-unit>
        <trans-unit id="1766991edca7f510f676e6a40b7fe16f16608e46" translate="yes" xml:space="preserve">
          <source>Appends a rejection handler callback to the promise, and returns a new promise resolving to the return value of the callback if it is called, or to its original fulfillment value if the promise is instead fulfilled.</source>
          <target state="translated">拒否ハンドラのコールバックをプロミスに追加し、コールバックが呼ばれた場合はコールバックの戻り値、代わりに約束が履行された場合は元の履行値に解決した新しいプロミスを返します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
