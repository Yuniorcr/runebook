<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="yarn">
    <body>
      <group id="yarn">
        <trans-unit id="34ee7e9b49edb2c7ce2339a4edbd94599088a9d5" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2016&amp;ndash;present Yarn Contributors</source>
          <target state="translated">&amp;copy;2016&amp;ndash;現在の糸の貢献者</target>
        </trans-unit>
        <trans-unit id="07a9022273a28981e5618aac4eaaa19264392698" translate="yes" xml:space="preserve">
          <source>1 for INFO</source>
          <target state="translated">1 for INFO</target>
        </trans-unit>
        <trans-unit id="be865f68e00a8c393d76f55431341fc67ca36dd2" translate="yes" xml:space="preserve">
          <source>1. Configuration</source>
          <target state="translated">1.構成</target>
        </trans-unit>
        <trans-unit id="4629ccdd494bf85410eb4b30d0da25bf0f03d01a" translate="yes" xml:space="preserve">
          <source>1. Configuring an Offline Mirror</source>
          <target state="translated">1.オフラインミラーの設定</target>
        </trans-unit>
        <trans-unit id="54d5ce86a3ca226f5e38e0a2289b56c955aa3603" translate="yes" xml:space="preserve">
          <source>1. Creating a Package</source>
          <target state="translated">1.パッケージの作成</target>
        </trans-unit>
        <trans-unit id="e91fb43beb560e30ac718a4a645f7ac8cf4ed462" translate="yes" xml:space="preserve">
          <source>1. Dependencies and versions</source>
          <target state="translated">1.依存関係とバージョン</target>
        </trans-unit>
        <trans-unit id="8a3ebd597aa6ddd4ae095da01e4b2309e2192675" translate="yes" xml:space="preserve">
          <source>1. Getting Started</source>
          <target state="translated">1.はじめに</target>
        </trans-unit>
        <trans-unit id="e2e92a22801adcc38f3b5926d989665ae5a09a37" translate="yes" xml:space="preserve">
          <source>1. Migrating from npm</source>
          <target state="translated">1.npmからの移行</target>
        </trans-unit>
        <trans-unit id="4a0ab3bf371766a011aeec8dab96140796667719" translate="yes" xml:space="preserve">
          <source>1. Overview</source>
          <target state="translated">1.概要</target>
        </trans-unit>
        <trans-unit id="b34e601a1a7b3bfdcbc423d51dd4d3b9c5266ea1" translate="yes" xml:space="preserve">
          <source>1. The Yarn Workflow</source>
          <target state="translated">1.ヤーンワークフロー</target>
        </trans-unit>
        <trans-unit id="601e678f9249c203de15b8bdd15b3aeee71397bd" translate="yes" xml:space="preserve">
          <source>1. Workspaces</source>
          <target state="translated">1.ワークスペース</target>
        </trans-unit>
        <trans-unit id="7b7a6066f570737472b5d17802d31faef96b29f5" translate="yes" xml:space="preserve">
          <source>16 for CRITICAL</source>
          <target state="translated">16 for CRITICAL</target>
        </trans-unit>
        <trans-unit id="0937122e5777f3202eb8fc67f0e483b6b4ebc2cc" translate="yes" xml:space="preserve">
          <source>2 for LOW</source>
          <target state="translated">2名様(LOW</target>
        </trans-unit>
        <trans-unit id="f42338c5c11b701d66eb3c89181805d1da84eae6" translate="yes" xml:space="preserve">
          <source>2. Creating a new project</source>
          <target state="translated">2.新規プロジェクトの作成</target>
        </trans-unit>
        <trans-unit id="dbc8b357691409e9c4daf2c6428dbe68446dc47c" translate="yes" xml:space="preserve">
          <source>2. Getting Started</source>
          <target state="translated">2.はじめに</target>
        </trans-unit>
        <trans-unit id="f9ae98809b7a68e739c63d59af2f36e3a9c7a758" translate="yes" xml:space="preserve">
          <source>2. Installation</source>
          <target state="translated">2.2.インストール</target>
        </trans-unit>
        <trans-unit id="04801cdf4e5399cfc1b3c952ee4ae2aa65ad5de3" translate="yes" xml:space="preserve">
          <source>2. Pruning an Offline Mirror</source>
          <target state="translated">2.オフラインミラーの剪定</target>
        </trans-unit>
        <trans-unit id="0521c237c4e59b2f636a46c24cd5e6531a1e286e" translate="yes" xml:space="preserve">
          <source>2. Publishing a Package</source>
          <target state="translated">2.パッケージの発行</target>
        </trans-unit>
        <trans-unit id="39fdfcb7756a7d3bae9089765d0dbd50516954e0" translate="yes" xml:space="preserve">
          <source>2. Types of dependencies</source>
          <target state="translated">2.依存関係の種類</target>
        </trans-unit>
        <trans-unit id="5c3896deda7ec59b3b08e4b8ad298b961684061c" translate="yes" xml:space="preserve">
          <source>2. package.json</source>
          <target state="translated">2.package.json</target>
        </trans-unit>
        <trans-unit id="9a81d2c7a1160b974c795be4ce7b3d0221f2f141" translate="yes" xml:space="preserve">
          <source>3. Managing dependencies</source>
          <target state="translated">3.依存関係の管理</target>
        </trans-unit>
        <trans-unit id="64d7e40230ff27d484a8509e79123e3a7a7a83f7" translate="yes" xml:space="preserve">
          <source>3. Troubleshooting</source>
          <target state="translated">3.トラブルシューティング</target>
        </trans-unit>
        <trans-unit id="ab43373ca8484d204f0972ae954ad7f05f8575c8" translate="yes" xml:space="preserve">
          <source>3. Usage</source>
          <target state="translated">3.使用方法</target>
        </trans-unit>
        <trans-unit id="0c6d0ea4436ec59815984df74a9a346f64712243" translate="yes" xml:space="preserve">
          <source>3. Versions of dependencies</source>
          <target state="translated">3.依存関係のバージョン</target>
        </trans-unit>
        <trans-unit id="c1232e63973ebce196064d6ec8745d019fc51d93" translate="yes" xml:space="preserve">
          <source>3. envvars</source>
          <target state="translated">3.エンバーズ</target>
        </trans-unit>
        <trans-unit id="3351e59926ff1bc1f224b78015c74c10f6e2741b" translate="yes" xml:space="preserve">
          <source>4 for MODERATE</source>
          <target state="translated">4 for MODERATE</target>
        </trans-unit>
        <trans-unit id="d9a133517d00dea9d0df5b128a3b05fdabaccb4b" translate="yes" xml:space="preserve">
          <source>4. .yarnrc</source>
          <target state="translated">4.</target>
        </trans-unit>
        <trans-unit id="754fc245b635f74588d0e3e179df25066d116bd7" translate="yes" xml:space="preserve">
          <source>4. Installing dependencies</source>
          <target state="translated">4.依存関係のインストール</target>
        </trans-unit>
        <trans-unit id="5a48db28ebe9fcd22a7db2d407dc175a3e1ef91c" translate="yes" xml:space="preserve">
          <source>4. Selective dependency resolutions</source>
          <target state="translated">4.選択的な依存関係の解決</target>
        </trans-unit>
        <trans-unit id="48e3725d7d09e7559df23f87ee08886924a3b9d0" translate="yes" xml:space="preserve">
          <source>5. Working with version control</source>
          <target state="translated">5.バージョン管理との連携</target>
        </trans-unit>
        <trans-unit id="ed8c9b5d3a4b51ca29e0526a250a2f7532065f25" translate="yes" xml:space="preserve">
          <source>5. yarn.lock</source>
          <target state="translated">5.yarn.lock</target>
        </trans-unit>
        <trans-unit id="50187204447f123cb022fe2f179ef1151791cfaf" translate="yes" xml:space="preserve">
          <source>6. Continuous Integration</source>
          <target state="translated">6.継続的インテグレーション</target>
        </trans-unit>
        <trans-unit id="01946e74bd0fdcfa8f61858451edbc7ab277b97f" translate="yes" xml:space="preserve">
          <source>8 for HIGH</source>
          <target state="translated">8 for HIGH</target>
        </trans-unit>
        <trans-unit id="28e2a505bb975e5fbc82c15c22f15ef9cee17bad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;add&quot;&gt;&lt;code&gt;yarn add&lt;/code&gt;&lt;/a&gt;: add a package to use in your current package.</source>
          <target state="translated">&lt;a href=&quot;add&quot;&gt; &lt;code&gt;yarn add&lt;/code&gt; &lt;/a&gt;：現在のパッケージで使用するパッケージを追加します。</target>
        </trans-unit>
        <trans-unit id="62586cb01d5825e8400714b0df9ae8a254995c75" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bin&quot;&gt;&lt;code&gt;yarn bin&lt;/code&gt;&lt;/a&gt;: displays the location of the yarn bin folder.</source>
          <target state="translated">&lt;a href=&quot;bin&quot;&gt; &lt;code&gt;yarn bin&lt;/code&gt; &lt;/a&gt;：糸ビンフォルダーの場所を表示します。</target>
        </trans-unit>
        <trans-unit id="dc7b5867f23abffeff8c9ef3aa146c5ee56e9d8f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cli/add&quot;&gt;&lt;code&gt;yarn add&lt;/code&gt;&lt;/a&gt;: adds a package to use in your current package.</source>
          <target state="translated">&lt;a href=&quot;cli/add&quot;&gt; &lt;code&gt;yarn add&lt;/code&gt; &lt;/a&gt;：現在のパッケージで使用するパッケージを追加します。</target>
        </trans-unit>
        <trans-unit id="81619d64fa19aa35776b18050d6d518f8380704f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cli/init&quot;&gt;&lt;code&gt;yarn init&lt;/code&gt;&lt;/a&gt;: initializes the development of a package.</source>
          <target state="translated">&lt;a href=&quot;cli/init&quot;&gt; &lt;code&gt;yarn init&lt;/code&gt; &lt;/a&gt;化：パッケージの開発を初期化します。</target>
        </trans-unit>
        <trans-unit id="12009b779382cb5544790a38a7e8457534a7476a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cli/install&quot;&gt;&lt;code&gt;yarn install&lt;/code&gt;&lt;/a&gt; is used to install all dependencies for a project. The dependencies are retrieved from your project&amp;rsquo;s &lt;code&gt;package.json&lt;/code&gt; file, and stored in the &lt;code&gt;yarn.lock&lt;/code&gt; file.</source>
          <target state="translated">&lt;a href=&quot;cli/install&quot;&gt; &lt;code&gt;yarn install&lt;/code&gt; &lt;/a&gt;は、プロジェクトのすべての依存関係をインストールするために使用されます。依存関係はプロジェクトの &lt;code&gt;package.json&lt;/code&gt; ファイルから取得され、 &lt;code&gt;yarn.lock&lt;/code&gt; ファイルに保存されます。</target>
        </trans-unit>
        <trans-unit id="b99aab83fee6478d7a74b5c75956642ea4c98871" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cli/install&quot;&gt;&lt;code&gt;yarn install&lt;/code&gt;&lt;/a&gt;: installs all the dependencies defined in a &lt;code&gt;package.json&lt;/code&gt; file.</source>
          <target state="translated">&lt;a href=&quot;cli/install&quot;&gt; &lt;code&gt;yarn install&lt;/code&gt; &lt;/a&gt;： &lt;code&gt;package.json&lt;/code&gt; ファイルで定義されているすべての依存関係をインストールします。</target>
        </trans-unit>
        <trans-unit id="cbd4a471f03313edd598188adbb2cac5bfbdcf6d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cli/publish&quot;&gt;&lt;code&gt;yarn publish&lt;/code&gt;&lt;/a&gt;: publishes a package to a package manager.</source>
          <target state="translated">&lt;a href=&quot;cli/publish&quot;&gt; &lt;code&gt;yarn publish&lt;/code&gt; &lt;/a&gt;：パッケージマネージャーにパッケージを発行します。</target>
        </trans-unit>
        <trans-unit id="32ca557a458bfc763973f8ff62fb922e28e7cb17" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cli/remove&quot;&gt;&lt;code&gt;yarn remove&lt;/code&gt;&lt;/a&gt;: removes an unused package from your current package.</source>
          <target state="translated">&lt;a href=&quot;cli/remove&quot;&gt; &lt;code&gt;yarn remove&lt;/code&gt; &lt;/a&gt;：現在のパッケージから未使用のパッケージを削除します。</target>
        </trans-unit>
        <trans-unit id="188a852feeee10d920be109bcf524e9fb9e3f7c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://scoop.sh&quot;&gt;Scoop&lt;/a&gt; is a command-line installer for Windows. You can install Scoop by following &lt;a href=&quot;https://github.com/lukesampson/scoop/wiki/Quick-Start&quot;&gt;these instructions&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://scoop.sh&quot;&gt;Scoop&lt;/a&gt;は、Windows用のコマンドラインインストーラーです。以下&lt;a href=&quot;https://github.com/lukesampson/scoop/wiki/Quick-Start&quot;&gt;の手順&lt;/a&gt;に従って、 Scoopをインストールできます。</target>
        </trans-unit>
        <trans-unit id="a7d80225cc187dc7386f1dab0a9bbb86e24d1a96" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://chocolatey.org/&quot;&gt;Chocolatey&lt;/a&gt; is a package manager for Windows. You can install Chocolatey by following &lt;a href=&quot;https://chocolatey.org/install&quot;&gt;these instructions&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://chocolatey.org/&quot;&gt;Chocolatey&lt;/a&gt;はWindows用のパッケージマネージャーです。以下&lt;a href=&quot;https://chocolatey.org/install&quot;&gt;の手順に従って&lt;/a&gt; Chocolateyをインストールできます。</target>
        </trans-unit>
        <trans-unit id="3a4a64288020f0827f7e455e75f5f0a71fdbd52f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://circleci.com/&quot;&gt;CircleCI&lt;/a&gt; provides documentation for Yarn. You can get up and running by following their &lt;a href=&quot;https://circleci.com/docs/2.0/yarn/&quot;&gt;Yarn documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://circleci.com/&quot;&gt;CircleCI&lt;/a&gt;はYarnのドキュメントを提供します。&lt;a href=&quot;https://circleci.com/docs/2.0/yarn/&quot;&gt;Yarnのドキュメント&lt;/a&gt;に従って、起動して実行できます。</target>
        </trans-unit>
        <trans-unit id="7322b7c0daa98837fa0fbfb778bafaca66b862fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://codefresh.io/docs/docs/configure-ci-cd-pipeline/introduction-to-codefresh-pipelines/&quot;&gt;Codefresh pipelines&lt;/a&gt; use Docker images in all their steps so it is very easy to use any &lt;a href=&quot;https://hub.docker.com/_/node/&quot;&gt;Yarn version&lt;/a&gt; in any pipeline.</source>
          <target state="translated">&lt;a href=&quot;https://codefresh.io/docs/docs/configure-ci-cd-pipeline/introduction-to-codefresh-pipelines/&quot;&gt;Codefreshパイプライン&lt;/a&gt;はすべてのステップでDockerイメージを使用するため、どのパイプラインでもどの&lt;a href=&quot;https://hub.docker.com/_/node/&quot;&gt;バージョンのYarn&lt;/a&gt;も非常に簡単に使用できます。</target>
        </trans-unit>
        <trans-unit id="e2d6cc609c9b77f6532bcc94d2f7d2d48b5fb55a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/yarnpkg/yarn/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue%20is%3Aopen%20%22Installation%20Problem%22%20in%3Atitle%20&quot;&gt;Search for an existing issue&lt;/a&gt; &amp;middot; &lt;a href=&quot;https://github.com/yarnpkg/yarn/issues/new?title=Installation%20Problem:%20%5Btitle%5D&amp;amp;body=%0A**Which%20operating%20system%20are%20you%20using:**%0A%0A%0A**Please%20describe%20the%20steps%20you%20took%20when%20trying%20to%20install%20Yarn%20and%20what%20went%20wrong:**%0A%0A&quot;&gt;Open a new issue&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/yarnpkg/yarn/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue%20is%3Aopen%20%22Installation%20Problem%22%20in%3Atitle%20&quot;&gt;既存の問題を検索する&lt;/a&gt;・&lt;a href=&quot;https://github.com/yarnpkg/yarn/issues/new?title=Installation%20Problem:%20%5Btitle%5D&amp;amp;body=%0A**Which%20operating%20system%20are%20you%20using:**%0A%0A%0A**Please%20describe%20the%20steps%20you%20took%20when%20trying%20to%20install%20Yarn%20and%20what%20went%20wrong:**%0A%0A&quot;&gt;新しい問題を開く&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cd3c16ecdd8e03768afc26cae148d0ed3f6cefe3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://semaphoreci.com/&quot;&gt;Semaphore&lt;/a&gt; has Yarn pre-installed for all supported Node.js versions, and no user interaction is required for the Yarn cache to work.</source>
          <target state="translated">&lt;a href=&quot;https://semaphoreci.com/&quot;&gt;&lt;/a&gt;サポートされているすべてのNode.jsバージョンにセマフォにはYarnがプリインストールされており、Yarnキャッシュが機能するためにユーザーの操作は必要ありません。</target>
        </trans-unit>
        <trans-unit id="b52fdc8d99f0cf6996fde4fd26d1af4f3edfcdb6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis CI&lt;/a&gt; detects the use of Yarn by the presence of &lt;code&gt;yarn.lock&lt;/code&gt; in the repository root. If it is available, Travis CI will install &lt;code&gt;yarn&lt;/code&gt; if necessary, and execute &lt;code&gt;yarn&lt;/code&gt; as the default install command.</source>
          <target state="translated">&lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis CI&lt;/a&gt;は、リポジトリルート内の &lt;code&gt;yarn.lock&lt;/code&gt; の存在によってYarnの使用を検出します。使用可能な場合、Travis CIは必要に応じて &lt;code&gt;yarn&lt;/code&gt; をインストールし、デフォルトのインストールコマンドとして &lt;code&gt;yarn&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="5665e013e47f19b463e0a5ab5a15d33be8d61d31" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://yarnpkg.com/en/package/enhanced-resolve&quot;&gt;&lt;code&gt;enhanced-resolve&lt;/code&gt;&lt;/a&gt; is the second biggest one. You probably use it but might never have heard about it: it&amp;rsquo;s the resolver used by Webpack. We do support this resolver through the &lt;a href=&quot;https://github.com/arcanis/pnp-webpack-plugin&quot;&gt;pnp-webpack-plugin&lt;/a&gt; addon.</source>
          <target state="translated">&lt;a href=&quot;https://yarnpkg.com/en/package/enhanced-resolve&quot;&gt; &lt;code&gt;enhanced-resolve&lt;/code&gt; &lt;/a&gt;は2番目に大きいものです。あなたはおそらくそれを使用しますが、聞いたことがないかもしれません。それはWebpackが使用するリゾルバです。&lt;a href=&quot;https://github.com/arcanis/pnp-webpack-plugin&quot;&gt;pnp-webpack-plugin&lt;/a&gt;アドオンを通じて、このリゾルバーをサポートしています。</target>
        </trans-unit>
        <trans-unit id="598963254063dcd935730996b2ba9501f7a35191" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://yarnpkg.com/en/package/resolve&quot;&gt;&lt;code&gt;resolve&lt;/code&gt;&lt;/a&gt; is the main one, and is supported out-of-the-box thanks to the help of &lt;a href=&quot;https://github.com/ljharb&quot;&gt;Jordan Harband&lt;/a&gt;. Every package using &lt;code&gt;resolve&lt;/code&gt; (and that includes things you might have heard of like Babel or Gulp) now works without further configuration.</source>
          <target state="translated">&lt;a href=&quot;https://yarnpkg.com/en/package/resolve&quot;&gt; &lt;code&gt;resolve&lt;/code&gt; &lt;/a&gt;が主なものであり、&lt;a href=&quot;https://github.com/ljharb&quot;&gt; Jordan Harbandの&lt;/a&gt;助けを借りてすぐにサポートされます。 &lt;code&gt;resolve&lt;/code&gt; を使用するすべてのパッケージ（および、BabelやGulpなどの聞いたことがあるものを含む）は、追加の構成なしで動作するようになりました。</target>
        </trans-unit>
        <trans-unit id="e5b11fc0f898020e56e8cb4e216e52f53c0bb7e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://yarnpkg.com/latest.msi&quot;&gt;Download Installer&lt;/a&gt;&lt;a href=&quot;https://yarnpkg.com/latest-rc.msi&quot;&gt;Download Installer (RC)&lt;/a&gt;&lt;a href=&quot;https://nightly.yarnpkg.com/latest.msi&quot;&gt;Download Installer (Nightly)&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://yarnpkg.com/latest.msi&quot;&gt;ダウンロードインストーラー&lt;/a&gt;&lt;a href=&quot;https://yarnpkg.com/latest-rc.msi&quot;&gt;ダウンロードインストーラー（RC）&lt;/a&gt;&lt;a href=&quot;https://nightly.yarnpkg.com/latest.msi&quot;&gt;ダウンロードインストーラー（夜間）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5e2d141270d29b5fa16aaec8b7dece16e9f8c0d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;link&quot;&gt;&lt;code&gt;yarn link&lt;/code&gt;&lt;/a&gt;: symlink a package for local development.</source>
          <target state="translated">&lt;a href=&quot;link&quot;&gt; &lt;code&gt;yarn link&lt;/code&gt; &lt;/a&gt;：ローカル開発用のパッケージのシンボリックリンク。</target>
        </trans-unit>
        <trans-unit id="f173a1b06b6d7b262ca7f8b984c42bb13ff5e816" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;list&quot;&gt;&lt;code&gt;yarn list&lt;/code&gt;&lt;/a&gt;: list installed packages.</source>
          <target state="translated">&lt;a href=&quot;list&quot;&gt; &lt;code&gt;yarn list&lt;/code&gt; &lt;/a&gt;：インストールされたパッケージのリスト。</target>
        </trans-unit>
        <trans-unit id="34860fb6960910f28119aa89daab26b7d0b700aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;remove&quot;&gt;&lt;code&gt;yarn remove&lt;/code&gt;&lt;/a&gt;: remove a package that will no longer be used in your current package.</source>
          <target state="translated">&lt;a href=&quot;remove&quot;&gt; &lt;code&gt;yarn remove&lt;/code&gt; &lt;/a&gt;：現在のパッケージで使用されなくなったパッケージを削除します。</target>
        </trans-unit>
        <trans-unit id="7a2eb32aa2f38105ffd453abe67be048bbfb4636" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;unlink&quot;&gt;&lt;code&gt;yarn unlink&lt;/code&gt;&lt;/a&gt;: unlink a linked package.</source>
          <target state="translated">&lt;a href=&quot;unlink&quot;&gt; &lt;code&gt;yarn unlink&lt;/code&gt; &lt;/a&gt;：リンクされたパッケージのリンクを解除します。</target>
        </trans-unit>
        <trans-unit id="93470934688f926279ae7058f75df673d3b4403b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;upgrade&quot;&gt;&lt;code&gt;yarn upgrade&lt;/code&gt;&lt;/a&gt;: upgrade packages to their latest version based on the specified range.</source>
          <target state="translated">&lt;a href=&quot;upgrade&quot;&gt; &lt;code&gt;yarn upgrade&lt;/code&gt; &lt;/a&gt;：パッケージを指定された範囲に基づいて最新バージョンにアップグレードします。</target>
        </trans-unit>
        <trans-unit id="66d1feb6a6f8ad1881200d1e60ab93d4c23f4c43" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;upgrade-interactive&quot;&gt;&lt;code&gt;yarn upgrade-interactive&lt;/code&gt;&lt;/a&gt;: similar to &lt;code&gt;upgrade&lt;/code&gt; command, but display the outdated packages before performing any upgrade, allowing the user to select which packages to upgrade.</source>
          <target state="translated">&lt;a href=&quot;upgrade-interactive&quot;&gt; &lt;code&gt;yarn upgrade-interactive&lt;/code&gt; &lt;/a&gt;： &lt;code&gt;upgrade&lt;/code&gt; コマンドに似ていますが、アップグレードを実行する前に古いパッケージを表示し、ユーザーがアップグレードするパッケージを選択できるようにします。</target>
        </trans-unit>
        <trans-unit id="40f923ecf88e0c805af4fa13a747d934a7023a7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;=0.0.0&lt;/code&gt; (any version)</source>
          <target state="translated">&lt;code&gt;&amp;gt;=0.0.0&lt;/code&gt; （すべてのバージョン）</target>
        </trans-unit>
        <trans-unit id="3cc14fd90952eb256eb9aaf7fb5723d52f203bf3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;=2.0.0 &amp;lt;3.0.0&lt;/code&gt; (match major version)</source>
          <target state="translated">&lt;code&gt;&amp;gt;=2.0.0 &amp;lt;3.0.0&lt;/code&gt; （メジャーバージョンと一致）</target>
        </trans-unit>
        <trans-unit id="46e4646348bc9e920af64fa61cdd6dac5236bdf6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;=3.1.0 &amp;lt;3.2.0&lt;/code&gt; (match major and minor version)</source>
          <target state="translated">&lt;code&gt;&amp;gt;=3.1.0 &amp;lt;3.2.0&lt;/code&gt; （メジャーバージョンとマイナーバージョンを一致）</target>
        </trans-unit>
        <trans-unit id="bf625accd212e1e2fd3c4ce4780645c063426a92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt; or &lt;code&gt;&amp;gt;=0.0.0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; または &lt;code&gt;&amp;gt;=0.0.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7ae9107a176020f12a6c1b3cef6776e7e6e42684" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--ignore-engines&lt;/code&gt; : This flag can be used to skip the engines check.</source>
          <target state="translated">&lt;code&gt;--ignore-engines&lt;/code&gt; ：このフラグを使用して、エンジンチェックをスキップできます。</target>
        </trans-unit>
        <trans-unit id="d788b4d243aaa2092c132c1349885282273d2ea9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--latest&lt;/code&gt; : Ignores the version range specified in &lt;code&gt;package.json&lt;/code&gt;. Instead, the version specified by the &lt;code&gt;latest&lt;/code&gt; tag will be used (potentially upgrading the packages across major versions).</source>
          <target state="translated">&lt;code&gt;--latest&lt;/code&gt; ： &lt;code&gt;package.json&lt;/code&gt; で指定されたバージョン範囲を無視します。代わりに、 &lt;code&gt;latest&lt;/code&gt; タグで指定されたバージョンが使用されます（メジャーバージョン間でパッケージをアップグレードする可能性があります）。</target>
        </trans-unit>
        <trans-unit id="29643819f9a7aee62917d8aa419477914d329886" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--latest&lt;/code&gt; : This flag tells yarn to ignore the specified version ranges in &lt;code&gt;package.json&lt;/code&gt; and instead use the version tagged &lt;code&gt;latest&lt;/code&gt; in the registry.</source>
          <target state="translated">&lt;code&gt;--latest&lt;/code&gt; ：このフラグは、 &lt;code&gt;package.json&lt;/code&gt; で指定されたバージョン範囲を無視して、代わりにレジストリで &lt;code&gt;latest&lt;/code&gt; タグが付けられたバージョンを使用するように、yarnに指示します。</target>
        </trans-unit>
        <trans-unit id="5e72e53a3597a0b126dc47912c410fab8a9249ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--scope @scope&lt;/code&gt; : When a scope is specified, only packages that begin with that scope will be upgraded. A scope must begin with &amp;lsquo;@&amp;rsquo;.</source>
          <target state="translated">&lt;code&gt;--scope @scope&lt;/code&gt; ：スコープを指定すると、そのスコープで始まるパッケージのみがアップグレードされます。スコープは「@」で始まる必要があります。</target>
        </trans-unit>
        <trans-unit id="045560c6cd1ead667d60596174ac15d441cc8c70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-F/--force&lt;/code&gt; : If a &lt;code&gt;.yarnclean&lt;/code&gt; file exists, run the clean process. If the file does not exist, do nothing.</source>
          <target state="translated">&lt;code&gt;-F/--force&lt;/code&gt; &lt;code&gt;.yarnclean&lt;/code&gt; ファイルが存在する場合は、クリーンプロセスを実行します。ファイルが存在しない場合は、何もしません。</target>
        </trans-unit>
        <trans-unit id="d29751c0b89421a3f25f54cfbeef578d1dc01f6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-I/--init&lt;/code&gt; : Creates the &lt;code&gt;.yarnclean&lt;/code&gt; file if it does not exist, and adds the default entries. This file should then be reviewed and edited to customize which files will be cleaned. If the file already exists, it will not be overwritten.</source>
          <target state="translated">&lt;code&gt;-I/--init&lt;/code&gt; &lt;code&gt;.yarnclean&lt;/code&gt; ファイルが存在しない場合は作成し、デフォルトのエントリを追加します。次に、このファイルを確認および編集して、クリーニングするファイルをカスタマイズする必要があります。ファイルがすでに存在する場合は、上書きされません。</target>
        </trans-unit>
        <trans-unit id="1418e37e4d867f7fe55aa9d1726d361e3499ed10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.yarnrc&lt;/code&gt; files allow you to configure additional Yarn features. The &lt;a href=&quot;cli/config&quot;&gt;&lt;code&gt;config&lt;/code&gt; command&lt;/a&gt; may also be used to set these options. Yarn will merge &lt;code&gt;.yarnrc&lt;/code&gt; files up the file tree.</source>
          <target state="translated">&lt;code&gt;.yarnrc&lt;/code&gt; ファイルを使用すると、追加のYarn機能を構成できます。&lt;a href=&quot;cli/config&quot;&gt; &lt;code&gt;config&lt;/code&gt; コマンドは&lt;/a&gt;また、これらのオプションを設定するために使用することができます。Yarnは &lt;code&gt;.yarnrc&lt;/code&gt; ファイルをファイルツリーにマージします。</target>
        </trans-unit>
        <trans-unit id="71b78444c37edb74c73f4db19b02d1d22424ac45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;2.x.x&lt;/code&gt; or &lt;code&gt;&amp;gt;=2.0.0 &amp;lt;3.0.0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;2.x.x&lt;/code&gt; または &lt;code&gt;&amp;gt;=2.0.0 &amp;lt;3.0.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d025e43d5ed2d36e8065e4b7c124f0294f2918dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;3.1.x&lt;/code&gt; or &lt;code&gt;&amp;gt;=3.1.0 &amp;lt;3.2.0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;3.1.x&lt;/code&gt; または &lt;code&gt;&amp;gt;=3.1.0 &amp;lt;3.2.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="76e56d31da39d0e2a06e887c74b19a1815741a75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;3.x&lt;/code&gt; or &lt;code&gt;&amp;gt;=3.0.0 &amp;lt;4.0.0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;3.x&lt;/code&gt; または &lt;code&gt;&amp;gt;=3.0.0 &amp;lt;4.0.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f7c5762ae90dec44e7be4fb57e76b318bf78d378" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[package@tag]&lt;/code&gt; : When a specified package contains a tag then the specified tag will be upgraded to. &lt;a href=&quot;tag#toc-what-are-tags&quot;&gt;Tag&lt;/a&gt; names are chosen by project maintainers, typically you use this command to install an experimental or long term support release of an actively developed package. The tag you choose will be the version that appears in your &lt;code&gt;package.json&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;[package@tag]&lt;/code&gt; ：指定したパッケージにタグが含まれている場合、指定したタグがアップグレードされます。&lt;a href=&quot;tag#toc-what-are-tags&quot;&gt;タグ&lt;/a&gt;名はプロジェクトのメンテナーによって選択されます。通常、このコマンドを使用して、活発に開発されているパッケージの試験的または長期的なサポートリリースをインストールします。選択したタグは、 &lt;code&gt;package.json&lt;/code&gt; ファイルに表示されるバージョンになります。</target>
        </trans-unit>
        <trans-unit id="9eb81410ca4254ea46574061578764129707730d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[package@version]&lt;/code&gt; : When a specified package contains a version then the specified version will be upgraded to. The &lt;code&gt;package.json&lt;/code&gt; dependency reference will also be changed to match this specified version. You can use any &lt;a href=&quot;../dependency-versions#toc-semantic-versioning&quot;&gt;SemVer&lt;/a&gt; version number or range.</source>
          <target state="translated">&lt;code&gt;[package@version]&lt;/code&gt; ：指定したパッケージにバージョンが含まれている場合、指定したバージョンにアップグレードされます。 &lt;code&gt;package.json&lt;/code&gt; の依存関係の参照も、この指定されたバージョンと一致するように変更されます。任意の&lt;a href=&quot;../dependency-versions#toc-semantic-versioning&quot;&gt;SemVer&lt;/a&gt;バージョン番号または範囲を使用できます。</target>
        </trans-unit>
        <trans-unit id="7f5a36a1efa5940920f9a4177a6dac3634699207" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[package]&lt;/code&gt; : When a specified package is only a name then the latest patching version of this package will be upgraded to.</source>
          <target state="translated">&lt;code&gt;[package]&lt;/code&gt; ：指定されたパッケージが名前のみの場合、このパッケージの最新のパッチバージョンがアップグレードされます。</target>
        </trans-unit>
        <trans-unit id="4a2df91ed5d628ad401157af9a701e2f3a915213" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[script]&lt;/code&gt; can also be any locally installed executable that is inside &lt;code&gt;node_modules/.bin/&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[script]&lt;/code&gt; は、 &lt;code&gt;node_modules/.bin/&lt;/code&gt; 内にあるローカルにインストールされた実行可能ファイルにすることもできます。</target>
        </trans-unit>
        <trans-unit id="28406bad5766d26d12d022947945ebab41f6aefc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;beta&lt;/code&gt;: A release before becoming latest and/or stable, used to share upcoming changes before they are finished.</source>
          <target state="translated">&lt;code&gt;beta&lt;/code&gt; ：最新または安定版になる前のリリース。変更が完了する前に今後の変更を共有するために使用されます。</target>
        </trans-unit>
        <trans-unit id="6df11354f5d3c9d63aeb13385ef11338896c9386" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;canary&lt;/code&gt;: A &amp;ldquo;nightly&amp;rdquo; or pre-beta release, if your project is frequently updated and depended on by many people you may use this to share even earlier code.</source>
          <target state="translated">&lt;code&gt;canary&lt;/code&gt; ：「毎晩」またはベータ前のリリース。プロジェクトが頻繁に更新され、多くの人々に依存している場合、これを使用して以前のコードを共有することもできます。</target>
        </trans-unit>
        <trans-unit id="d5845b611b43b3d491568c0327cb8ad9c6b6940f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dev&lt;/code&gt;: Sometimes you want to be able to test out a single revision through the registry while you&amp;rsquo;re still working on things, this is useful for that.</source>
          <target state="translated">&lt;code&gt;dev&lt;/code&gt; ：作業を続けている間に、レジストリを介して1つのリビジョンをテストできるようにしたい場合があります。これは、そのために役立ちます。</target>
        </trans-unit>
        <trans-unit id="fe9af65c3627ac1ea6a435343acb0ed18522f680" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;latest&lt;/code&gt;: The current version of the package</source>
          <target state="translated">&lt;code&gt;latest&lt;/code&gt; ：パッケージの現在のバージョン</target>
        </trans-unit>
        <trans-unit id="8fedd3d4af99fe283bb79b9c29a6d00a609a9ccd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;package.json&lt;/code&gt;: This has all the current dependencies for your package.</source>
          <target state="translated">&lt;code&gt;package.json&lt;/code&gt; ：これには、パッケージの現在の依存関係がすべて含まれています。</target>
        </trans-unit>
        <trans-unit id="84c24aad5c9821904ee7c8c76aa83c809b111312" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stable&lt;/code&gt;: The latest stable release of the package, normally the same as latest unless you have Long-term Support (LTS)</source>
          <target state="translated">&lt;code&gt;stable&lt;/code&gt; ：パッケージの最新の安定版リリース。通常、長期サポート（LTS）がない限り、最新と同じです。</target>
        </trans-unit>
        <trans-unit id="231fe9c180a119b889b0f1b85cf62d891cf2a564" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yarn add &amp;lt;git remote url&amp;gt;#&amp;lt;branch/commit/tag&amp;gt;&lt;/code&gt; installs a package from a remote git repository at specific git branch, git commit or git tag.</source>
          <target state="translated">&lt;code&gt;yarn add &amp;lt;git remote url&amp;gt;#&amp;lt;branch/commit/tag&amp;gt;&lt;/code&gt; は、特定のgitブランチ、git commitまたはgitタグでリモートgitリポジトリからパッケージをインストールします。</target>
        </trans-unit>
        <trans-unit id="210add60b4e9125ad70f90f35e9b3e8c3e10ff99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yarn add &amp;lt;git remote url&amp;gt;&lt;/code&gt; installs a package from a remote git repository.</source>
          <target state="translated">&lt;code&gt;yarn add &amp;lt;git remote url&amp;gt;&lt;/code&gt; は、リモートgitリポジトリからパッケージをインストールします。</target>
        </trans-unit>
        <trans-unit id="4109c4230d35f1e45f9bb73fec2fd9e20e9d07d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yarn add --dev&lt;/code&gt; to add to &lt;code&gt;devDependencies&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;yarn add --dev&lt;/code&gt; に追加する &lt;code&gt;devDependencies&lt;/code&gt; add --dev</target>
        </trans-unit>
        <trans-unit id="2de2110482dc8acef501577dc8df580935c97f91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yarn add --optional&lt;/code&gt; to add to &lt;code&gt;optionalDependencies&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;yarn add --optional&lt;/code&gt; Dependenciesに追加する &lt;code&gt;optionalDependencies&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b2f72700af05dabc4c1501941960bc09a91c25d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yarn add --peer&lt;/code&gt; to add to &lt;code&gt;peerDependencies&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;yarn add --peer&lt;/code&gt; をpeerDependenciesに追加し &lt;code&gt;peerDependencies&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c72718fd9749dae05d80cd0ba4f4cf837ce9647b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yarn add file:/path/to/local/folder&lt;/code&gt; installs a package that is on your local file system. This is useful to test out other packages of yours that haven&amp;rsquo;t been published to the registry.</source>
          <target state="translated">&lt;code&gt;yarn add file:/path/to/local/folder&lt;/code&gt; は、ローカルファイルシステムにあるパッケージをインストールします。これは、レジストリに公開されていない他のパッケージをテストするのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="b9f81c416305f466f1735d04c3316e3fb4641ec0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yarn add file:/path/to/local/tarball.tgz&lt;/code&gt; installs a package from a gzipped tarball which could be used to share a package before publishing it.</source>
          <target state="translated">&lt;code&gt;yarn add file:/path/to/local/tarball.tgz&lt;/code&gt; は、パッケージを公開する前に共有するために使用できるgzipされたtarballからパッケージをインストールします。</target>
        </trans-unit>
        <trans-unit id="6b57f4988fe340f7de7a84b2fe7d5cfff3ba986a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yarn add https://my-project.org/package.tgz&lt;/code&gt; installs a package from a remote gzipped tarball.</source>
          <target state="translated">&lt;code&gt;yarn add https://my-project.org/package.tgz&lt;/code&gt; は、リモートのgzip圧縮されたtarballからパッケージをインストールします。</target>
        </trans-unit>
        <trans-unit id="4bdd6f91b6981f56c1e5cf650c61c68235f31968" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yarn add package-name&lt;/code&gt; installs the &amp;ldquo;latest&amp;rdquo; version of the package.</source>
          <target state="translated">&lt;code&gt;yarn add package-name&lt;/code&gt; は、パッケージの「最新」バージョンをインストールします。</target>
        </trans-unit>
        <trans-unit id="62c43cd5334b87dabefa45c27c9f527a91603d70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yarn add package-name&lt;/code&gt; installs the package from the &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm registry&lt;/a&gt; unless you have specified another one in your &lt;code&gt;package.json&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;yarn add package-name&lt;/code&gt; は、 &lt;code&gt;package.json&lt;/code&gt; で別のパッケージを指定していない限り、&lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npmレジストリ&lt;/a&gt;からパッケージをインストールします。</target>
        </trans-unit>
        <trans-unit id="a5e22981882139143c25ee44619491848cc007e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yarn add package-name@1.2.3&lt;/code&gt; installs a specific version of a package from the registry.</source>
          <target state="translated">&lt;code&gt;yarn add package-name@1.2.3&lt;/code&gt; は、レジストリからパッケージの特定のバージョンをインストールします。</target>
        </trans-unit>
        <trans-unit id="e6363cbb82e3762dffd3b8745188a75cae12744d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yarn add package-name@tag&lt;/code&gt; installs a specific &lt;a href=&quot;tag&quot;&gt;&amp;ldquo;tag&amp;rdquo;&lt;/a&gt; (e.g. &lt;code&gt;beta&lt;/code&gt;, &lt;code&gt;next&lt;/code&gt;, or &lt;code&gt;latest&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;yarn add package-name@tag&lt;/code&gt; は特定の&lt;a href=&quot;tag&quot;&gt;「タグ」を&lt;/a&gt;インストールします（例： &lt;code&gt;beta&lt;/code&gt; 、 &lt;code&gt;next&lt;/code&gt; 、 &lt;code&gt;latest&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="627a6e70038f5d0a6ce4aedcfc63629eafa641c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yarn bin &amp;lt;executable&amp;gt;&lt;/code&gt; will print the path to the executable file.</source>
          <target state="translated">&lt;code&gt;yarn bin &amp;lt;executable&amp;gt;&lt;/code&gt; は、実行可能ファイルへのパスを出力します。</target>
        </trans-unit>
        <trans-unit id="31634429122db169bfaefdf4c79c2a1c1d715623" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yarn bin&lt;/code&gt; will print the folder where yarn will install executable files for your package. An example of an executable may be a script that you have defined for your package that can be executed via &lt;a href=&quot;run&quot;&gt;&lt;code&gt;yarn run&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;yarn bin&lt;/code&gt; は、ヤーンがパッケージの実行可能ファイルをインストールするフォルダーを印刷します。実行可能ファイルの例としては、&lt;a href=&quot;run&quot;&gt; &lt;code&gt;yarn run&lt;/code&gt; を&lt;/a&gt;介して実行できるパッケージ用に定義したスクリプトがあります。</target>
        </trans-unit>
        <trans-unit id="e6d2ece1e235577e92caf2e209f0aac961c83103" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yarn cache list --pattern &amp;lt;pattern&amp;gt;&lt;/code&gt; will print out every cached package that matches the pattern provided.</source>
          <target state="translated">&lt;code&gt;yarn cache list --pattern &amp;lt;pattern&amp;gt;&lt;/code&gt; は、指定されたパターンに一致するすべてのキャッシュされたパッケージを出力します。</target>
        </trans-unit>
        <trans-unit id="b4c07e8077789b160b8c6c510d5b0cbcba3cf92f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yarn global bin&lt;/code&gt; will output the location where Yarn will install symlinks to your installed executables. You can configure the base location with &lt;code&gt;yarn config set prefix &amp;lt;filepath&amp;gt;&lt;/code&gt;. For example, &lt;code&gt;yarn config set prefix ~/.yarn&lt;/code&gt; will ensure all global packages will have their executables installed to &lt;code&gt;~/.yarn/bin&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;yarn global bin&lt;/code&gt; は、ヤーンがインストールされた実行可能ファイルへのシンボリックリンクをインストールする場所を出力します。ベースの場所は、 &lt;code&gt;yarn config set prefix &amp;lt;filepath&amp;gt;&lt;/code&gt; 構成できます。たとえば、 &lt;code&gt;yarn config set prefix ~/.yarn&lt;/code&gt; は、すべてのグローバルパッケージの実行可能ファイルが &lt;code&gt;~/.yarn/bin&lt;/code&gt; インストールされるようにします。</target>
        </trans-unit>
        <trans-unit id="f00f50e160ab109a17592e223bc787c21e83fb13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yarn global dir&lt;/code&gt; will print the output of the global installation folder that houses the global &lt;code&gt;node_modules&lt;/code&gt;. By default that will be: &lt;code&gt;~/.config/yarn/global&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;yarn global dir&lt;/code&gt; は、グローバル &lt;code&gt;node_modules&lt;/code&gt; を格納するグローバルインストールフォルダーの出力を印刷します。デフォルトでは、 &lt;code&gt;~/.config/yarn/global&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="9b4961f22c0cd1386da791841c262e20d60241ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yarn global&lt;/code&gt; is a prefix used for a number of commands like &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;bin&lt;/code&gt;, &lt;code&gt;list&lt;/code&gt; and &lt;code&gt;remove&lt;/code&gt;. They behave identically to their normal versions except that they use a global directory to store packages. The &lt;code&gt;global&lt;/code&gt; command makes executables available to use on your operating system.</source>
          <target state="translated">&lt;code&gt;yarn global&lt;/code&gt; は、 &lt;code&gt;add&lt;/code&gt; 、 &lt;code&gt;bin&lt;/code&gt; 、 &lt;code&gt;list&lt;/code&gt; 、 &lt;code&gt;remove&lt;/code&gt; などのいくつかのコマンドに使用されるプレフィックスです。これらは、パッケージを格納するためにグローバルディレクトリを使用することを除いて、通常のバージョンと同じように動作します。 &lt;code&gt;global&lt;/code&gt; コマンドは、ご使用のオペレーティング・システム上で使用する実行ファイルを利用できるようになります。</target>
        </trans-unit>
        <trans-unit id="22bbaf3308a35420c63089c187b5354124219802" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yarn import&lt;/code&gt; aims to alleviate this challenge by generating a &lt;code&gt;yarn.lock&lt;/code&gt; file in one of two ways:</source>
          <target state="translated">&lt;code&gt;yarn import&lt;/code&gt; は、 &lt;code&gt;yarn.lock&lt;/code&gt; の2つの方法のいずれかで、yarn.lockファイルを生成することにより、この課題を軽減することを目的としています。</target>
        </trans-unit>
        <trans-unit id="433df3cbd012825f16ba859e276c85b500f795ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yarn install&lt;/code&gt; is used to install all dependencies for a project. This is most commonly used when you have just checked out code for a project, or when another developer on the project has added a new dependency that you need to pick up.</source>
          <target state="translated">&lt;code&gt;yarn install&lt;/code&gt; は、プロジェクトのすべての依存関係をインストールするために使用されます。これは、プロジェクトのコードをチェックアウトした直後、またはプロジェクトの別の開発者が取得する必要のある新しい依存関係を追加したときに最もよく使用されます。</target>
        </trans-unit>
        <trans-unit id="6aa1ced798769605c6599b88ddc585faa369e65a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yarn link&lt;/code&gt; (in package you want to link)</source>
          <target state="translated">&lt;code&gt;yarn link&lt;/code&gt; （リンクするパッケージ内）</target>
        </trans-unit>
        <trans-unit id="95928d8f65d09032b4e9bef98fca8b67f1fa5239" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yarn list --pattern &amp;lt;pattern&amp;gt;&lt;/code&gt; will filter the list of dependencies by the pattern flag.</source>
          <target state="translated">&lt;code&gt;yarn list --pattern &amp;lt;pattern&amp;gt;&lt;/code&gt; は、依存関係のリストをパターンフラグでフィルタリングします。</target>
        </trans-unit>
        <trans-unit id="c0d8e8fdf695598b6f4716735f273b778668ae3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yarn policies set-version '^1.12.0'&lt;/code&gt; will download the latest minor</source>
          <target state="translated">&lt;code&gt;yarn policies set-version '^1.12.0'&lt;/code&gt; は最新のマイナーをダウンロードします</target>
        </trans-unit>
        <trans-unit id="181ce2f971667a5277c21d320d02228351f6552b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yarn policies set-version --rc&lt;/code&gt; will download the latest rc release</source>
          <target state="translated">&lt;code&gt;yarn policies set-version --rc&lt;/code&gt; は最新のrcリリースをダウンロードします</target>
        </trans-unit>
        <trans-unit id="22f8300e6481d82ac53ef933b689d9601a753550" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yarn policies set-version 1.13.0&lt;/code&gt; will download a specific version</source>
          <target state="translated">&lt;code&gt;yarn policies set-version 1.13.0&lt;/code&gt; は特定のバージョンをダウンロードします</target>
        </trans-unit>
        <trans-unit id="61f3483f5490c1c232c40a4d9b5f2ae8920401f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yarn policies set-version&lt;/code&gt; will download the latest stable release</source>
          <target state="translated">&lt;code&gt;yarn policies set-version&lt;/code&gt; は最新の安定版リリースをダウンロードします</target>
        </trans-unit>
        <trans-unit id="86ba84c1b968bcdb12fdf3aadb3684925ef49dd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yarn test&lt;/code&gt; is also a shortcut for &lt;code&gt;yarn run test&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;yarn test&lt;/code&gt; は &lt;code&gt;yarn run test&lt;/code&gt; ショートカットでもあります。</target>
        </trans-unit>
        <trans-unit id="f1da97d70471cdd8e78062718161c6669d8c6510" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yarn upgrade --pattern &amp;lt;pattern&amp;gt;&lt;/code&gt; will upgrade all packages that match the pattern.</source>
          <target state="translated">&lt;code&gt;yarn upgrade --pattern &amp;lt;pattern&amp;gt;&lt;/code&gt; は、パターンに一致するすべてのパッケージをアップグレードします。</target>
        </trans-unit>
        <trans-unit id="41ade01c9b907a08185a67ac4c7ba81c2d90fdd3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yarn.lock&lt;/code&gt;: This stores the exact versions of each dependency for your package.</source>
          <target state="translated">&lt;code&gt;yarn.lock&lt;/code&gt; ：これは、パッケージの各依存関係の正確なバージョンを格納します。</target>
        </trans-unit>
        <trans-unit id="e61e2cc0e41e958fc87de7a8d0400d9fa56dfacc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: &lt;code&gt;self-update&lt;/code&gt; is not available. See &lt;a href=&quot;https://yarnpkg.com/lang/en/docs/cli/policies/#toc-policies-set-version&quot;&gt;policies&lt;/a&gt; for enforcing versions within a project&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;注： &lt;code&gt;self-update&lt;/code&gt; は利用できません。参照&lt;a href=&quot;https://yarnpkg.com/lang/en/docs/cli/policies/#toc-policies-set-version&quot;&gt;ポリシーを&lt;/a&gt;プロジェクト内のバージョンを施行するため&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3efbd4adbf192893da166c38e47f871c8337d1a7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: This command is considered for advanced use cases only. Unless you are experiencing issues with the amount of files that are installed as part of &lt;code&gt;node_modules&lt;/code&gt; it is not recommended to use this command. It will permanently delete files in &lt;code&gt;node_modules&lt;/code&gt; which could cause packages to stop working.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;注：このコマンドは、高度な使用例でのみ考慮されます。 &lt;code&gt;node_modules&lt;/code&gt; の一部としてインストールされるファイルの量に関する問題が発生していない限り、このコマンドを使用することはお勧めしません。パッケージが機能し &lt;code&gt;node_modules&lt;/code&gt; なる可能性のあるnode_modules内のファイルを完全に削除します。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1d9caca827bcc0bc2ee19fad2bda8d9fd7ff0ff2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: This command is considered for advanced use-cases and tooling only. It generates a lock file entry given the current &lt;code&gt;package.json&lt;/code&gt; manifest file.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;注：このコマンドは、高度なユースケースとツールのみを対象としています。現在の &lt;code&gt;package.json&lt;/code&gt; マニフェストファイルを指定すると、ロックファイルエントリが生成されます。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="66dc213a79390dcea4b2fdb46386aea125d1f838" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: Unlike the &lt;code&gt;--global&lt;/code&gt; flag in npm, &lt;code&gt;global&lt;/code&gt; is a command which must immediately follow &lt;code&gt;yarn&lt;/code&gt;. Entering &lt;code&gt;yarn add global package-name&lt;/code&gt; will add the packages named &lt;code&gt;global&lt;/code&gt; and &lt;code&gt;package-name&lt;/code&gt; locally instead of adding &lt;code&gt;package-name&lt;/code&gt; globally.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;注：npm の &lt;code&gt;--global&lt;/code&gt; フラグとは異なり、 &lt;code&gt;global&lt;/code&gt; は &lt;code&gt;yarn&lt;/code&gt; の直後に続く必要があるコマンドです。入力する &lt;code&gt;yarn add global package-name&lt;/code&gt; という名前のパッケージを追加します &lt;code&gt;global&lt;/code&gt; と &lt;code&gt;package-name&lt;/code&gt; 代わりに追加のローカル &lt;code&gt;package-name&lt;/code&gt; 世界的に。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8d939fa5bb0fc3ac43174035c72878a186af3f45" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: don&amp;rsquo;t look for &lt;code&gt;/node_modules/workspace-b&lt;/code&gt;. It won&amp;rsquo;t be there unless some other package use it as a dependency.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;注： &lt;code&gt;/node_modules/workspace-b&lt;/code&gt; を検索しないでください。他のパッケージが依存関係として使用しない限り、そこにはありません。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4d8aba87ef2a65d01a7a23c210b3513d59786fe1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This error message is not generated by Plug&amp;rsquo;n&amp;rsquo;Play.&lt;/em&gt; Ever. If you get it, it very likely means that your application is not running with the PnP resolver, meaning that your require calls won&amp;rsquo;t be able to load files from your dependencies (since the &lt;code&gt;node_modules&lt;/code&gt; needed for the regular Node resolution won&amp;rsquo;t have been generated). Make sure to either run your code using &lt;code&gt;NODE_OPTIONS=&quot;--require /path/to/.pnp.js&quot;&lt;/code&gt; or to call it using &lt;code&gt;yarn node&lt;/code&gt; which does the right thing transparently (whether you&amp;rsquo;re using PnP or not).</source>
          <target state="translated">&lt;em&gt;このエラーメッセージは、プラグアンドプレイでは生成されません。&lt;/em&gt;ずっと。これを取得した場合、それはおそらくアプリケーションがPnPリゾルバーで実行されていないことを意味します。つまり、require呼び出しは依存関係からファイルをロードできません（通常のノード解決に必要な &lt;code&gt;node_modules&lt;/code&gt; には生成された）。 &lt;code&gt;NODE_OPTIONS=&quot;--require /path/to/.pnp.js&quot;&lt;/code&gt; を使用してコードを実行するか、（PnPを使用しているかどうかに関係なく）透過的に適切な処理を行う &lt;code&gt;yarn node&lt;/code&gt; を使用してコードを呼び出すようにしてください。</target>
        </trans-unit>
        <trans-unit id="ba4feb4f4574f5ba928a1659a56f61fb0136d48b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;(N/A)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;(N/A)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="631e9e3ba97c233034d9379feded6fa111437135" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Adding a dependency to different categories of dependencies&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;依存関係のさまざまなカテゴリへの依存関係の追加&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3830a6cf5b7b311f87e24534324d49e01f96fed6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Adding a dependency&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;依存関係を追加する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fa7750962dcb36000cafc9a54c56e1bb6f0f5cde" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Defaults:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Defaults:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4168878b06eaa6917a0f012585506612f5054ea6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="957dddeb8a4235641c64fa82788f375532d62c7c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;If you are experiencing issues with the audit command&lt;/strong&gt; please run with the &lt;code&gt;--verbose&lt;/code&gt; flag, which will output the JSON data that yarn sends to the npm registry as well as the response data, and open an issue on GitHub that includes this data.</source>
          <target state="translated">&lt;strong&gt;監査コマンドで問題が発生している場合は&lt;/strong&gt;、 &lt;code&gt;--verbose&lt;/code&gt; フラグを指定して実行してください。これは、yarnがnpmレジストリに送信するJSONデータと応答データを出力し、このデータを含む問題をGitHubで開きます。</target>
        </trans-unit>
        <trans-unit id="7b0dbc748a6197558a0858c0c413363e5af89a3f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Installing all the dependencies of project&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;プロジェクトのすべての依存関係をインストールする&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f41c16afcebee8f90d8b4d228e7b509c182ed196" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Must be one of the following:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;次のいずれかである必要があります。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="61cc1418484a156f5e981e2396c2479c9d48af60" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; By default when you run &lt;code&gt;yarn add [package-name]&lt;/code&gt; it will use a caret range.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;デフォルトでは、 &lt;code&gt;yarn add [package-name]&lt;/code&gt; を実行すると、キャレット範囲が使用されます。</target>
        </trans-unit>
        <trans-unit id="1eac6e3820fa6b58fbf19430ccd1dcbb6ae3f3f6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you want to follow along with this guide, be sure to first install &lt;a href=&quot;https://git-scm.com/book/en/v2/Getting-Started-Installing-Git&quot;&gt;git&lt;/a&gt; and &lt;a href=&quot;install&quot;&gt;Yarn&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;このガイドを使用する場合は、まず&lt;a href=&quot;https://git-scm.com/book/en/v2/Getting-Started-Installing-Git&quot;&gt;git&lt;/a&gt;と&lt;a href=&quot;install&quot;&gt;Yarnを&lt;/a&gt;インストールしてください。</target>
        </trans-unit>
        <trans-unit id="83b269dd0508add543747202af13a85c9b6e6e6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Installation of Yarn via npm is generally not recommended. When installing Yarn with Node-based package managers, the package is not signed, and the only integrity check performed is a basic SHA1 hash, which is a security risk when installing system-wide apps.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; npmを介してYarnをインストールすることは、一般的には推奨されません。ノードベースのパッケージマネージャーでYarnをインストールする場合、パッケージは署名されず、実行される唯一の整合性チェックは基本的なSHA1ハッシュです。これは、システム全体のアプリをインストールするときのセキュリティリスクです。</target>
        </trans-unit>
        <trans-unit id="6fe70d794c69f33bcd10e1e74307be14a3cd14b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Specifying pre-releases in tilde ranges will only match pre-releases in that same full version. For example, the version range &lt;code&gt;~3.1.4-beta.2&lt;/code&gt; would match against &lt;code&gt;3.1.4-beta.4&lt;/code&gt; but not &lt;code&gt;3.1.5-beta.2&lt;/code&gt; because the &lt;code&gt;major.minor.patch&lt;/code&gt; version is different.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;チルダの範囲でプレリリースを指定すると、同じフルバージョンのプレリリースのみが一致します。たとえば、 &lt;code&gt;major.minor.patch&lt;/code&gt; &lt;code&gt;3.1.5-beta.2&lt;/code&gt; バージョンが異なるため、バージョン範囲 &lt;code&gt;~3.1.4-beta.2&lt;/code&gt; は3.1.4-beta.4と一致し &lt;code&gt;3.1.4-beta.4&lt;/code&gt; が、3.1.5-beta.2とは一致しません。</target>
        </trans-unit>
        <trans-unit id="d706763ea5219b2daf16611a7c3956a5122d45b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The new version you enter must be a valid &lt;a href=&quot;../dependency-versions#toc-semantic-versioning&quot;&gt;SemVer&lt;/a&gt; version.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;入力する新しいバージョンは、有効な&lt;a href=&quot;../dependency-versions#toc-semantic-versioning&quot;&gt;SemVer&lt;/a&gt;バージョンである必要があります。</target>
        </trans-unit>
        <trans-unit id="6a530542b31b8ae93fa4b6c9a3087230980f5e2c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; There are also sometimes &amp;ldquo;labels&amp;rdquo; or &amp;ldquo;extensions&amp;rdquo; to the semver format that mark things like pre-releases or betas (e.g. &lt;code&gt;2.0.0-beta.3&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;プレリリース版やベータ版などのマークを付けるsemver形式の「ラベル」または「拡張機能」もあります（例： &lt;code&gt;2.0.0-beta.3&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="5709fa463509c29fbbf452599f77c60254325fd1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; You do not need to delete a tag before moving it to another version in the package. It&amp;rsquo;s better not to.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;パッケージ内の別のバージョンに移動する前にタグを削除する必要はありません。しない方がいいです。</target>
        </trans-unit>
        <trans-unit id="a02491356e59380d25b6d162e43fd18f9fe12e0b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;code&gt;yarn remove &amp;lt;package&amp;gt; --&amp;lt;flag&amp;gt;&lt;/code&gt; uses the same &lt;code&gt;flag&lt;/code&gt;s as &lt;code&gt;yarn install&lt;/code&gt; command.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;： &lt;code&gt;yarn remove &amp;lt;package&amp;gt; --&amp;lt;flag&amp;gt;&lt;/code&gt; は、 &lt;code&gt;yarn install&lt;/code&gt; コマンドと同じ &lt;code&gt;flag&lt;/code&gt; sを使用します。</target>
        </trans-unit>
        <trans-unit id="d9f8308f2f5c4abec82588c6dd6cf407410f9167" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;code&gt;yarn remove&lt;/code&gt; will always update your &lt;code&gt;package.json&lt;/code&gt; and &lt;code&gt;yarn.lock&lt;/code&gt;. This ensures that different developers on the same project get the same set of dependencies. It is not possible to disable this behavior.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;： &lt;code&gt;yarn remove&lt;/code&gt; と、常に &lt;code&gt;package.json&lt;/code&gt; と &lt;code&gt;yarn.lock&lt;/code&gt; が更新されます。これにより、同じプロジェクトの異なる開発者が同じ依存関係のセットを取得することが保証されます。この動作を無効にすることはできません。</target>
        </trans-unit>
        <trans-unit id="fd6615b73e226a2bf6094167fee4e881299b181d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Due to the use of &lt;code&gt;nodejs&lt;/code&gt; instead of &lt;code&gt;node&lt;/code&gt; name in some distros, &lt;code&gt;yarn&lt;/code&gt; might complain about &lt;code&gt;node&lt;/code&gt; not being installed. A workaround for this is to add an alias in your &lt;code&gt;.bashrc&lt;/code&gt; file, like so: &lt;code&gt;alias node=nodejs&lt;/code&gt;. This will point &lt;code&gt;yarn&lt;/code&gt; to whatever version of &lt;code&gt;node&lt;/code&gt; you decide to use.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：一部のディストリビューションでは &lt;code&gt;node&lt;/code&gt; 名の代わりに &lt;code&gt;nodejs&lt;/code&gt; を使用しているため、 &lt;code&gt;yarn&lt;/code&gt; は &lt;code&gt;node&lt;/code&gt; がインストールされていないというメッセージを出すことがあります。これの回避策は、次のように &lt;code&gt;.bashrc&lt;/code&gt; ファイルにエイリアスを追加することです： &lt;code&gt;alias node=nodejs&lt;/code&gt; 。これは指します &lt;code&gt;yarn&lt;/code&gt; のどんなバージョンに &lt;code&gt;node&lt;/code&gt; あなたが使用することを決定しました。</target>
        </trans-unit>
        <trans-unit id="b70a460a25a5c809643da112172dcaafa7bd861b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: If no operator is specified, then &lt;code&gt;=&lt;/code&gt; is assumed in the version range. So the &lt;code&gt;=&lt;/code&gt; operator is effectively optional.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：演算子が指定されていない場合、バージョン範囲では &lt;code&gt;=&lt;/code&gt; が想定されます。したがって、 &lt;code&gt;=&lt;/code&gt; 演算子は事実上オプションです。</target>
        </trans-unit>
        <trans-unit id="db8bb2859db121829132c4acd97556021125e87d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: If you do not want your project to be licensed as an open source project, you should be explicit about what the licensing is or if it is unlicensed.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：プロジェクトをオープンソースプロジェクトとしてライセンスしたくない場合は、ライセンスが何であるか、またはライセンスされていないことを明示する必要があります。</target>
        </trans-unit>
        <trans-unit id="a44223f5bb9be16b6c2b20d45599db63b4e1d18b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Ubuntu 17.04 comes with &lt;code&gt;cmdtest&lt;/code&gt; installed by default. If you&amp;rsquo;re getting errors from installing &lt;code&gt;yarn&lt;/code&gt;, you may want to run &lt;code&gt;sudo apt remove cmdtest&lt;/code&gt; first. Refer to &lt;a href=&quot;https://github.com/yarnpkg/yarn/issues/2821&quot;&gt;this&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：Ubuntu 17.04には、デフォルトで &lt;code&gt;cmdtest&lt;/code&gt; がインストールされています。 &lt;code&gt;yarn&lt;/code&gt; インストールでエラーが発生した場合は、最初に &lt;code&gt;sudo apt remove cmdtest&lt;/code&gt; を実行することをお勧めします。詳細については、&lt;a href=&quot;https://github.com/yarnpkg/yarn/issues/2821&quot;&gt;これ&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="e9a1ba730f94f62335c6f9a6cbcf307da048ab33" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Notes:&lt;/strong&gt;&lt;code&gt;--production&lt;/code&gt; is the same as &lt;code&gt;--production=true&lt;/code&gt;. &lt;code&gt;--prod&lt;/code&gt; is an alias of &lt;code&gt;--production&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注：-- &lt;/strong&gt; &lt;code&gt;--production&lt;/code&gt; は &lt;code&gt;--production=true&lt;/code&gt; と同じです。 &lt;code&gt;--prod&lt;/code&gt; の別名である &lt;code&gt;--production&lt;/code&gt; が。</target>
        </trans-unit>
        <trans-unit id="c0c66dcd3481b91f56c00e2d1b50b24f04ae952b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Options:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Options:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c818a15a6bfd39c99de5d6d71edae527145f42e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Problems?&lt;/strong&gt; If you are unable to install Yarn with any of these installers, please search through GitHub for an existing issue or open a new one.</source>
          <target state="translated">&lt;strong&gt;問題？&lt;/strong&gt;これらのインストーラーでYarnをインストールできない場合は、GitHubで既存の問題を検索するか、新しい問題を開いてください。</target>
        </trans-unit>
        <trans-unit id="b89f8d8898eb4db1bfbe72c3fd5fa13f2a6bcca4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Removing a dependency&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;依存関係を削除する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f0519e43d7008c1fbebee2946f64bc2152b33dfe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Rules&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Rules&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d219a16fe00379bf5c1cf15a7bc41758d4db804e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Starting a new project&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;新しいプロジェクトを始める&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a6ee695af239c942a378be570e8d1f8b9d43ba58" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip:&lt;/strong&gt; If you want to use the defaults for everything you can also run &lt;code&gt;yarn init --yes&lt;/code&gt; and it will skip all the questions.</source>
          <target state="translated">&lt;strong&gt;ヒント：&lt;/strong&gt;すべてにデフォルトを使用する場合は、 &lt;code&gt;yarn init --yes&lt;/code&gt; を実行することもできます。そうすると、すべての質問がスキップされます。</target>
        </trans-unit>
        <trans-unit id="34491ea44f00a8101ddbecfe562de7e8a3d0abd0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tips&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Tips&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3b90a36c1543175702426d59ce9b95818b599b1f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Upgrading a dependency&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;依存関係のアップグレード&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a44c631f4679a62009b854ccdc0f3bc9c2063272" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;You can use both the &lt;code&gt;yes&lt;/code&gt; and the &lt;code&gt;private&lt;/code&gt; flags at the same time&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;yes&lt;/code&gt; フラグと &lt;code&gt;private&lt;/code&gt; フラグの両方を同時に使用できます&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="22763ff5ea3cc4f3f56e79f33f13cf3d7ec168b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;author&lt;/strong&gt; is the creator or maintainer of a package. It follows the format &lt;code&gt;&quot;Your Name &amp;lt;you@example.com&amp;gt; (https://your-website.com)&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;著者&lt;/strong&gt;はパッケージの作成者またはメンテナーです。 &lt;code&gt;&quot;Your Name &amp;lt;you@example.com&amp;gt; (https://your-website.com)&quot;&lt;/code&gt; の形式に従います。</target>
        </trans-unit>
        <trans-unit id="2fb8ac2f5ce2fa1a1031f2243da91e0310d5b763" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;bin&lt;/strong&gt; is a mapping of cli commands (binaries) for Yarn to create for the package when installing it.</source>
          <target state="translated">&lt;strong&gt;bin&lt;/strong&gt;は、インストール時にパッケージ用にYarnが作成するcliコマンド（バイナリ）のマッピングです。</target>
        </trans-unit>
        <trans-unit id="64425782e2e72aa6ad10c8d834511205a6ee85c6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;bugs&lt;/strong&gt; is a url to point users of your package to if they discover an issue with your package.</source>
          <target state="translated">&lt;strong&gt;bugs&lt;/strong&gt;は、パッケージのユーザーがパッケージの問題を発見した場合に、そのユーザーを指すURLです。</target>
        </trans-unit>
        <trans-unit id="870ebcb613ac8cefeaa7e44d7621c55fa4613c58" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;contributors&lt;/strong&gt; is a list of contributors to the package. If there are other people involved in your project, you can specify them here.</source>
          <target state="translated">&lt;strong&gt;contributors&lt;/strong&gt;は、パッケージへの貢献者のリストです。プロジェクトに他の人が関与している場合は、ここで指定できます。</target>
        </trans-unit>
        <trans-unit id="fa08a0fa9f2ff78aad29247dc720b2c052231687" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;description&lt;/strong&gt; is an optional but recommended field that gets used by other Yarn users to search for and understand your project.</source>
          <target state="translated">&lt;strong&gt;説明&lt;/strong&gt;はオプションですが、他のYarnユーザーがプロジェクトを検索して理解するために使用する推奨フィールドです。</target>
        </trans-unit>
        <trans-unit id="fb4b6dbf445cd68f2e545c9c95afd16250e7111b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;files&lt;/strong&gt; is a list of files that should be included in your package when published and installed. If unspecified Yarn will include every file.</source>
          <target state="translated">&lt;strong&gt;files&lt;/strong&gt;は、公開およびインストール時にパッケージに含める必要があるファイルのリストです。指定されていない場合、ヤーンはすべてのファイルを含みます。</target>
        </trans-unit>
        <trans-unit id="c8b931134f6cb28ab3c56a9f1ccc7bcddaf3e2ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;homepage&lt;/strong&gt; is a url to point users to a website that informs them on the package with an introduction, documentations, and links to additional resources.</source>
          <target state="translated">&lt;strong&gt;ホームページ&lt;/strong&gt;は、パッケージを紹介し、ドキュメント、追加リソースへのリンクをユーザーに知らせるWebサイトをユーザーに示すためのURLです。</target>
        </trans-unit>
        <trans-unit id="0a9846b878811f238c287201db0f64e92b81f92c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;keywords&lt;/strong&gt; is a list of terms that other developers can search for to find your package or related packages.</source>
          <target state="translated">&lt;strong&gt;キーワード&lt;/strong&gt;は、他の開発者がパッケージまたは関連パッケージを見つけるために検索できる用語のリストです。</target>
        </trans-unit>
        <trans-unit id="6fa3c0d737e0d695963487a1a56cea63ac6af979" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;license&lt;/strong&gt; is the published legal terms of your package and what is the allowed usage of the code in your package.</source>
          <target state="translated">&lt;strong&gt;ライセンス&lt;/strong&gt;は、パッケージの公開された法的条件であり、パッケージ内のコードの許可された使用法は何ですか。</target>
        </trans-unit>
        <trans-unit id="0ad7883a76ffd110c74dde77adb655471aa7666e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;main&lt;/strong&gt; is used to define the entry point of your code used by programs like Node.js. If unspecified it will default to &lt;code&gt;index.js&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;main&lt;/strong&gt;は、Node.jsなどのプログラムで使用されるコードのエントリポイントを定義するために使用されます。指定しない場合、デフォルトで &lt;code&gt;index.js&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="47424672793b1519b4a267ecf536fb3ee69e7c0a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; is the identifier of your package, if you are going to publish it to the global registry, you need to be sure that it is unique.</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt;はパッケージの識別子です。パッケージをグローバルレジストリに公開する場合は、一意であることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="d89e6d9d943b8b2ed21fbfd1825f07263c7eb5fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;package.json&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;package.json&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="087b0394d597cd55f13fd30c6458bf9b5651abf8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;repository&lt;/strong&gt; is another optional but recommended field that helps users of your package find the source code to contribute back.</source>
          <target state="translated">&lt;strong&gt;リポジトリ&lt;/strong&gt;は、オプションの推奨フィールドですが、パッケージのユーザーが貢献するソースコードを見つけるのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="23a622cde0c7c2b3cd9d1f7c4c2d3c4d6c6dabcf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;version&lt;/strong&gt; is the semver-compatible version of your package, you can publish a package as much as you want but they must have new versions.</source>
          <target state="translated">&lt;strong&gt;version&lt;/strong&gt;は、パッケージのsemver互換バージョンです。パッケージは好きなだけ公開できますが、新しいバージョンでなければなりません。</target>
        </trans-unit>
        <trans-unit id="c1431bd97b7ee0853bccef35520a17b003b0990f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;workspace-a/package.json:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;workspace-a/package.json:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5be4a0d64523343dd3019d5c53884858bde2d991" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;workspace-b/package.json:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;workspace-b/package.json:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c84ab86eb0435265e834339701de7a04e0702821" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SEE LICENSE IN &amp;lt;filename&amp;gt;&lt;/code&gt; string that points to a &lt;code&gt;&amp;lt;filename&amp;gt;&lt;/code&gt; in the top level of your package if you are using a non-standard license.</source>
          <target state="translated">&lt;code&gt;SEE LICENSE IN &amp;lt;filename&amp;gt;&lt;/code&gt; をポイントする文字列 &lt;code&gt;&amp;lt;filename&amp;gt;&lt;/code&gt; パッケージのトップレベルにあるが、あなたは非標準のライセンスを使用している場合。</target>
        </trans-unit>
        <trans-unit id="685d107911cb1b012ff9438dd258420b877a83b8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;UNLICENSED&lt;/code&gt; string if you do not want to grant others the right to use a private or unpublished package under any terms.</source>
          <target state="translated">他の &lt;code&gt;UNLICENSED&lt;/code&gt; 任意の条件で非公開または非公開のパッケージを使用する権利を与えたくない場合は、UNLICENSED文字列。</target>
        </trans-unit>
        <trans-unit id="4b706b1b439f5b3c88288f772982d671d292fb1c" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;package&lt;/strong&gt; is a directory with some code and a &lt;code&gt;package.json&lt;/code&gt; file that provides information to Yarn about your package.</source>
          <target state="translated">&lt;strong&gt;パッケージには、&lt;/strong&gt;いくつかのコードとを持つディレクトリである &lt;code&gt;package.json&lt;/code&gt; のパッケージについての糸に情報を提供するファイル。</target>
        </trans-unit>
        <trans-unit id="4d996a9f0bfd1c74a47257919e50259eda3f2eab" translate="yes" xml:space="preserve">
          <source>A full version range can include a &lt;strong&gt;union&lt;/strong&gt; of multiple comparator sets joined together by &lt;code&gt;||&lt;/code&gt;. If either side of the union is satisfied, then the whole version range is satisfied. For example, the version range &lt;code&gt;&amp;lt;2.0.0 || &amp;gt;3.1.4&lt;/code&gt; means &lt;em&gt;&amp;ldquo;Less than &lt;code&gt;2.0.0&lt;/code&gt; &lt;strong&gt;or&lt;/strong&gt; greater than &lt;code&gt;3.1.4&lt;/code&gt;&amp;ldquo;&lt;/em&gt;.</source>
          <target state="translated">フルバージョンの範囲には、 &lt;code&gt;||&lt;/code&gt; で結合された複数のコンパレータセットの&lt;strong&gt;和集合&lt;/strong&gt;を含めることができます。。ユニオンのいずれかの側が満たされている場合、バージョン範囲全体が満たされます。たとえば、バージョン範囲 &lt;code&gt;&amp;lt;2.0.0 || &amp;gt;3.1.4&lt;/code&gt; &amp;gt; 3.1.4手段&lt;em&gt;「未満&lt;/em&gt;&lt;em&gt; &lt;code&gt;2.0.0&lt;/code&gt; &lt;/em&gt;&lt;em&gt;&lt;strong&gt;または&lt;/strong&gt;&lt;/em&gt;&lt;em&gt;より大きい&lt;/em&gt;&lt;em&gt; &lt;code&gt;3.1.4&lt;/code&gt; &lt;/em&gt;&lt;em&gt;「&lt;/em&gt;。&lt;em&gt; &lt;strong&gt;&lt;/strong&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f6a696229168d3820f94098e1734074f6ec4300e" translate="yes" xml:space="preserve">
          <source>A package &amp;ldquo;owner&amp;rdquo; in the registry is a user that has access to make changes to a package. A single package can have as many owners as you want.</source>
          <target state="translated">レジストリ内のパッケージの「所有者」は、パッケージを変更するためのアクセス権を持つユーザーです。1つのパッケージに、必要な数の所有者を含めることができます。</target>
        </trans-unit>
        <trans-unit id="a7401dc8ca4e0c97be6c18e086da02a5456663a6" translate="yes" xml:space="preserve">
          <source>A sub-dependency of your project got an important security update and you don&amp;rsquo;t want to wait for your direct-dependency to issue a minimum version update.</source>
          <target state="translated">プロジェクトのサブ依存関係に重要なセキュリティアップデートがあり、直接依存関係が最小バージョンアップデートを発行するのを待ちたくない。</target>
        </trans-unit>
        <trans-unit id="f496ae127bc72c5d12a0194a418b6acc499263be" translate="yes" xml:space="preserve">
          <source>A valid &lt;a href=&quot;https://spdx.org/licenses/&quot;&gt;SPDX license identifier&lt;/a&gt; if you are using a standard license.</source>
          <target state="translated">標準ライセンスを使用している場合は、有効な&lt;a href=&quot;https://spdx.org/licenses/&quot;&gt;SPDXライセンス識別子&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f45e1730e91fb8260dac194419f35909fee5e758" translate="yes" xml:space="preserve">
          <source>A valid &lt;a href=&quot;https://www.npmjs.com/package/spdx&quot;&gt;SPDX license expression syntax 2.0 expression&lt;/a&gt; if you are using multiple standard licenses.</source>
          <target state="translated">複数の標準ライセンスを使用している場合、有効な&lt;a href=&quot;https://www.npmjs.com/package/spdx&quot;&gt;SPDXライセンス式構文2.0式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d2085a7ac5199a5860803c0d02ad642316d7dd5b" translate="yes" xml:space="preserve">
          <source>Accessing your package</source>
          <target state="translated">パッケージへのアクセス</target>
        </trans-unit>
        <trans-unit id="648ec4fa9abecbbbc6597949cd11cb5aa3e2e5bd" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;set PATH=%PATH%;C:\.yarn\bin&lt;/code&gt; to your shell environment.</source>
          <target state="translated">シェル環境に &lt;code&gt;set PATH=%PATH%;C:\.yarn\bin&lt;/code&gt; を追加します。</target>
        </trans-unit>
        <trans-unit id="b7e2323ff8f69f3b85723a840fd06a451a3b676f" translate="yes" xml:space="preserve">
          <source>Add a &lt;code&gt;resolutions&lt;/code&gt; field to your &lt;code&gt;package.json&lt;/code&gt; file and define your version overrides:</source>
          <target state="translated">&lt;code&gt;resolutions&lt;/code&gt; フィールドを &lt;code&gt;package.json&lt;/code&gt; ファイルに追加し、バージョンのオーバーライドを定義します。</target>
        </trans-unit>
        <trans-unit id="e0d9b0c74a79b00964a73c2574ea395d59eb1529" translate="yes" xml:space="preserve">
          <source>Add a tag named &lt;code&gt;&amp;lt;tag&amp;gt;&lt;/code&gt; for a specific &lt;code&gt;&amp;lt;version&amp;gt;&lt;/code&gt; of a &lt;code&gt;&amp;lt;package&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;package&amp;gt;&lt;/code&gt; の特定の &lt;code&gt;&amp;lt;version&amp;gt;&lt;/code&gt; に &lt;code&gt;&amp;lt;tag&amp;gt;&lt;/code&gt; という名前のタグを追加します。</target>
        </trans-unit>
        <trans-unit id="362e167f54b56410915976d4fdceebb4dd552bb3" translate="yes" xml:space="preserve">
          <source>Add a user to an existing team.</source>
          <target state="translated">既存のチームにユーザーを追加します。</target>
        </trans-unit>
        <trans-unit id="1ea7f4e762b90b4cde206424d8109fca685213a4" translate="yes" xml:space="preserve">
          <source>Add or remove other owners of the package</source>
          <target state="translated">パッケージの他の所有者を追加または削除する</target>
        </trans-unit>
        <trans-unit id="384e51dd3442e5ee69f9f6c3dc5df511acf57e89" translate="yes" xml:space="preserve">
          <source>Add the following in a &lt;code&gt;package.json&lt;/code&gt; file. Starting from now on, we&amp;rsquo;ll call this directory the &amp;ldquo;workspace root&amp;rdquo;:</source>
          <target state="translated">以下を &lt;code&gt;package.json&lt;/code&gt; ファイルに追加します。これ以降、このディレクトリを「ワークスペースルート」と呼びます。</target>
        </trans-unit>
        <trans-unit id="7a93ed3d4524b622f96bb63d5597afe4471be4c0" translate="yes" xml:space="preserve">
          <source>Add this to your profile: &lt;code&gt;export PATH=&quot;$PATH:/opt/yarn-[version]/bin&quot;&lt;/code&gt; (the path may vary depending on where you extracted Yarn to)</source>
          <target state="translated">これをプロファイルに追加します： &lt;code&gt;export PATH=&quot;$PATH:/opt/yarn-[version]/bin&quot;&lt;/code&gt; （パスはYarnを抽出した場所によって異なる場合があります）</target>
        </trans-unit>
        <trans-unit id="bdc2197305a70c44ebf2992323089a5d6092c3bb" translate="yes" xml:space="preserve">
          <source>Add to &lt;code&gt;devDependencies&lt;/code&gt;, &lt;code&gt;peerDependencies&lt;/code&gt;, and &lt;code&gt;optionalDependencies&lt;/code&gt; respectively:</source>
          <target state="translated">&lt;code&gt;devDependencies&lt;/code&gt; 、 &lt;code&gt;peerDependencies&lt;/code&gt; 、および &lt;code&gt;optionalDependencies&lt;/code&gt; にそれぞれ追加します。</target>
        </trans-unit>
        <trans-unit id="460ebe37e930cd3b3c26e7f261983e44786606af" translate="yes" xml:space="preserve">
          <source>Add, remove, or list tags on a package.</source>
          <target state="translated">パッケージにタグを追加、削除、またはリストアップします。</target>
        </trans-unit>
        <trans-unit id="d247ba8b046d473556e095bee7a2907c882ef7cc" translate="yes" xml:space="preserve">
          <source>Adding a dependency</source>
          <target state="translated">依存関係の追加</target>
        </trans-unit>
        <trans-unit id="4f9517274a1469e28c5c98183ae9f9ad230e00f6" translate="yes" xml:space="preserve">
          <source>Adding dependencies</source>
          <target state="translated">依存関係の追加</target>
        </trans-unit>
        <trans-unit id="0211416b73216f54a5586f0f6a8afd0c882bf04b" translate="yes" xml:space="preserve">
          <source>Adding the install location to your PATH</source>
          <target state="translated">インストール先をPATHに追加する</target>
        </trans-unit>
        <trans-unit id="b313b11ff44f9c7803305ee982b3bcf2c36d36cb" translate="yes" xml:space="preserve">
          <source>Adding/updating/removing dependencies</source>
          <target state="translated">依存関係の追加・更新・削除</target>
        </trans-unit>
        <trans-unit id="417648353be8ff9b24135c3982fd9baf86bf6502" translate="yes" xml:space="preserve">
          <source>Additional fields</source>
          <target state="translated">追加フィールド</target>
        </trans-unit>
        <trans-unit id="893b06d4f016b2af2255eca25e5f0336e5627a62" translate="yes" xml:space="preserve">
          <source>Adds an identifier specified by &lt;code&gt;&amp;lt;pre-identifier&amp;gt;&lt;/code&gt; to be used to prefix premajor, preminor, prepatch or prerelease version increments.</source>
          <target state="translated">&lt;code&gt;&amp;lt;pre-identifier&amp;gt;&lt;/code&gt; で指定された識別子を追加して、プレメジャー、プレマイナー、プレパッチ、またはプレリリースバージョンの増分のプレフィックスとして使用します。</target>
        </trans-unit>
        <trans-unit id="e438bbd64d9996e2b345488242560a078732a150" translate="yes" xml:space="preserve">
          <source>Adds the &lt;code&gt;&amp;lt;user&amp;gt;&lt;/code&gt; as an owner of the &lt;code&gt;&amp;lt;package&amp;gt;&lt;/code&gt;. You must already be an owner of the &lt;code&gt;&amp;lt;package&amp;gt;&lt;/code&gt; in order to run this command.</source>
          <target state="translated">&lt;code&gt;&amp;lt;user&amp;gt;&lt;/code&gt; を &lt;code&gt;&amp;lt;package&amp;gt;&lt;/code&gt; の所有者として追加します。このコマンドを実行するには、すでに &lt;code&gt;&amp;lt;package&amp;gt;&lt;/code&gt; の所有者である必要があります。</target>
        </trans-unit>
        <trans-unit id="f205eb172e51f2f017e2f6c3281575a9ba2d7738" translate="yes" xml:space="preserve">
          <source>Advanced version ranges</source>
          <target state="translated">アドバンスドバージョンの範囲</target>
        </trans-unit>
        <trans-unit id="c9fa5a1a7fbc92cb6c2869e591fe888326279800" translate="yes" xml:space="preserve">
          <source>After an &lt;code&gt;add&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;add&lt;/code&gt; 後</target>
        </trans-unit>
        <trans-unit id="9f6320e533ed5f9f5f47a478928e1400fba20e82" translate="yes" xml:space="preserve">
          <source>After an &lt;code&gt;install&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;install&lt;/code&gt; 後</target>
        </trans-unit>
        <trans-unit id="64cf3ef971b056ab8312df809a6abe24bf5dbb58" translate="yes" xml:space="preserve">
          <source>After this both the remote repository should reflect the updated version and the package should be published under the same version.</source>
          <target state="translated">この後、リモートリポジトリには更新されたバージョンが反映され、パッケージは同じバージョンで公開されなければなりません。</target>
        </trans-unit>
        <trans-unit id="a71b6f784b64cff634eadd9580fcda0ee86435c9" translate="yes" xml:space="preserve">
          <source>After this file has been created, create two new subfolders named &lt;code&gt;workspace-a&lt;/code&gt; and &lt;code&gt;workspace-b&lt;/code&gt;. In each of them, create another &lt;code&gt;package.json&lt;/code&gt; file with the following content:</source>
          <target state="translated">このファイルが作成された後、という名前の2つの新しいサブフォルダを作成 &lt;code&gt;workspace-a&lt;/code&gt; および &lt;code&gt;workspace-b&lt;/code&gt; 。それらのそれぞれで、次の内容で別の &lt;code&gt;package.json&lt;/code&gt; ファイルを作成します。</target>
        </trans-unit>
        <trans-unit id="0636f3cb40fd93f3c33c5ee12ffaef8ea0a83543" translate="yes" xml:space="preserve">
          <source>After you configure your offline mirror, Yarn will automatically add new package tarballs to the mirror. However, it does not automatically remove tarballs that are no longer referenced in &lt;code&gt;yarn.lock&lt;/code&gt;. For example, if you &lt;code&gt;$ yarn remove&lt;/code&gt; a dependency, the tarball will remain in the mirror, even if no other dependencies have it as a sub-dependency. This behavior can be desirable in a setting where many projects share the same mirror, but when that is not the case, you may want to have Yarn remove unnecessary tarballs.</source>
          <target state="translated">オフラインミラーを構成すると、Yarnは自動的に新しいパッケージtarballをミラーに追加します。ただし、 &lt;code&gt;yarn.lock&lt;/code&gt; で参照されなくなったtarballは自動的には削除されません。たとえば、 &lt;code&gt;$ yarn remove&lt;/code&gt; が依存関係を削除すると、他の依存関係にサブ依存関係がない場合でも、tarballはミラーに残ります。この動作は、多くのプロジェクトが同じミラーを共有する設定で望ましい場合がありますが、そうでない場合は、Yarnに不要なtarballを削除させることができます。</target>
        </trans-unit>
        <trans-unit id="1f8f7d82f1852fae9d73d9ea9b53a29b5b6fb13d" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;yarn.lock&lt;/code&gt; files should be checked into source control (e.g. git or mercurial). This allows Yarn to install the same exact dependency tree across all machines, whether it be your coworker&amp;rsquo;s laptop or a CI server.</source>
          <target state="translated">すべての &lt;code&gt;yarn.lock&lt;/code&gt; ファイルをソース管理にチェックインする必要があります（gitやmercurialなど）。これにより、Yarnは、同僚のラップトップでもCIサーバーでも、すべてのマシンにまったく同じ依存関係ツリーをインストールできます。</target>
        </trans-unit>
        <trans-unit id="afc0dede775e68d1f862085913f86515612e0b9b" translate="yes" xml:space="preserve">
          <source>All packages should specify a license so that users know how they are permitted to use it and any restrictions that you are placing on it.</source>
          <target state="translated">すべてのパッケージはライセンスを指定して、どのように使用を許可されているのか、また制限事項があるのかをユーザにわかるようにしてください。</target>
        </trans-unit>
        <trans-unit id="8d7fd6c265ab2ce4105707aa485f7e2c4e14df1f" translate="yes" xml:space="preserve">
          <source>All those problems and more are solved by Plug&amp;rsquo;n&amp;rsquo;Play.</source>
          <target state="translated">これらすべての問題やその他の問題は、プラグアンドプレイによって解決されます。</target>
        </trans-unit>
        <trans-unit id="371fafa1ec2726c4e0ade952713bcb1d128db20e" translate="yes" xml:space="preserve">
          <source>All your project dependencies will be installed together, giving Yarn more latitude to better optimize them.</source>
          <target state="translated">すべてのプロジェクトの依存関係が一緒にインストールされるので、Yarnはより良い最適化を行うことができます。</target>
        </trans-unit>
        <trans-unit id="e998d8de38f1adf815376e78e8c93b67848aad05" translate="yes" xml:space="preserve">
          <source>Allow changes that do not modify the first non-zero digit in the version, either the &lt;code&gt;3&lt;/code&gt; in &lt;code&gt;3.1.4&lt;/code&gt; or the &lt;code&gt;4&lt;/code&gt; in &lt;code&gt;0.4.2&lt;/code&gt;.</source>
          <target state="translated">バージョンの最初のゼロ以外の桁（ &lt;code&gt;3&lt;/code&gt; in &lt;code&gt;3.1.4&lt;/code&gt; または &lt;code&gt;4&lt;/code&gt; in &lt;code&gt;0.4.2&lt;/code&gt; )を変更しない変更を許可します。</target>
        </trans-unit>
        <trans-unit id="fd0025fdc0a72f3ec17e7603a7ab16e8559d0f30" translate="yes" xml:space="preserve">
          <source>Allows you to override a version of a particular nested dependency. See &lt;a href=&quot;https://github.com/yarnpkg/rfcs/blob/master/implemented/0000-selective-versions-resolutions.md&quot;&gt;the Selective Versions Resolutions RFC&lt;/a&gt; for the full spec.</source>
          <target state="translated">特定のネストされた依存関係のバージョンをオーバーライドできます。完全な仕様について&lt;a href=&quot;https://github.com/yarnpkg/rfcs/blob/master/implemented/0000-selective-versions-resolutions.md&quot;&gt;は、Selective Versions Resolutions RFC&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="846e22b7b6ff29db006275cdcf6279fbf8a7fe24" translate="yes" xml:space="preserve">
          <source>Alpine</source>
          <target state="translated">Alpine</target>
        </trans-unit>
        <trans-unit id="9bdbe2f75d8a437d3e53f8494061f32cb6f2b7a1" translate="yes" xml:space="preserve">
          <source>Also be careful of what packages you are depending on, prefer smaller dependencies unless you have a good reason not to. Be certain that you aren&amp;rsquo;t accidentally depending on something massive.</source>
          <target state="translated">また、依存しているパッケージに注意し、十分な理由がない限り、依存関係を小さくすることをお勧めします。あなたが誤って巨大なものに依存していないことを確認してください。</target>
        </trans-unit>
        <trans-unit id="aa855f9ba4cde9a2842bd3fc97af3045ad2e00c0" translate="yes" xml:space="preserve">
          <source>Also see:</source>
          <target state="translated">も参照してください。</target>
        </trans-unit>
        <trans-unit id="3a4be7155bcffba0850c80a370bc5c6b34c37e74" translate="yes" xml:space="preserve">
          <source>Alternatives</source>
          <target state="translated">Alternatives</target>
        </trans-unit>
        <trans-unit id="cbd5e0fcd8055a9b107d16b3e154f3c19bfc943d" translate="yes" xml:space="preserve">
          <source>Although these are widely considered the &amp;ldquo;standard&amp;rdquo; tags, the only one that has any real meaning is &lt;code&gt;latest&lt;/code&gt; which is used for determining which version to install when no version is specified.</source>
          <target state="translated">これらは「標準」タグと広く見なされていますが、本当の意味を持つ唯一のものは、バージョンが指定されていない場合にインストールするバージョンを決定するために使用される &lt;code&gt;latest&lt;/code&gt; ものです。</target>
        </trans-unit>
        <trans-unit id="08aead8317e613bcaaddc5651380e1a3df2e2d3e" translate="yes" xml:space="preserve">
          <source>An example configuration for the &lt;code&gt;pet-kitten&lt;/code&gt; package, which would be found at &lt;code&gt;pet-kitten/package.json&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;pet-kitten/package.json&lt;/code&gt; にある &lt;code&gt;pet-kitten&lt;/code&gt; パッケージの構成例：</target>
        </trans-unit>
        <trans-unit id="fe9a4743f049f9e2e5d4d77cf870fd2d8ba8bff8" translate="yes" xml:space="preserve">
          <source>And that&amp;rsquo;s it! Requiring &lt;code&gt;workspace-a&lt;/code&gt; from a file located in &lt;code&gt;workspace-b&lt;/code&gt; will now use the exact code currently located inside your project rather than what is published on npm, and the &lt;code&gt;cross-env&lt;/code&gt; package has been correctly deduped and put at the root of your project to be used by both &lt;code&gt;workspace-a&lt;/code&gt; and &lt;code&gt;workspace-b&lt;/code&gt;.</source>
          <target state="translated">以上です！ &lt;code&gt;workspace-b&lt;/code&gt; にあるファイルから &lt;code&gt;workspace-a&lt;/code&gt; を要求すると、npmで公開されているコードではなく、現在プロジェクト内にある正確なコードが使用されるようになり、 &lt;code&gt;cross-env&lt;/code&gt; 環境パッケージが正しく重複排除され、プロジェクトのルートに配置されます。 &lt;code&gt;workspace-a&lt;/code&gt; と &lt;code&gt;workspace-b&lt;/code&gt; の両方で使用されます。</target>
        </trans-unit>
        <trans-unit id="c61c2e2c4f8d90dc2af5b996755cdfb3ede77149" translate="yes" xml:space="preserve">
          <source>Another developer on the project has added a new dependency that you need to pick up.</source>
          <target state="translated">プロジェクトの別の開発者が、あなたがピックアップする必要がある新しい依存関係を追加しました。</target>
        </trans-unit>
        <trans-unit id="645ccd8d6f8da5a10544ae4178dd1b96684b7b1e" translate="yes" xml:space="preserve">
          <source>Any of &lt;code&gt;X&lt;/code&gt;, &lt;code&gt;x&lt;/code&gt;, or &lt;code&gt;*&lt;/code&gt; can be used to leave part or all of a version unspecified.</source>
          <target state="translated">任意の &lt;code&gt;X&lt;/code&gt; は、 &lt;code&gt;x&lt;/code&gt; 、または &lt;code&gt;*&lt;/code&gt; 一部または不特定のバージョンのすべてを残すために使用することができます。</target>
        </trans-unit>
        <trans-unit id="baab56c3cf7a73e479388f36d8f025e1663dbd2b" translate="yes" xml:space="preserve">
          <source>Any tag that can also be used as a valid semver range will be rejected. For example, you cannot have a tag named &lt;code&gt;v2.3&lt;/code&gt; because in semver it means &lt;code&gt;&amp;gt;=2.3.0 &amp;lt;2.4.0&lt;/code&gt;.</source>
          <target state="translated">有効なサーバー範囲としても使用できるタグはすべて拒否されます。たとえば、タグ命名することはできません &lt;code&gt;v2.3&lt;/code&gt; semverで、それが意味するので &lt;code&gt;&amp;gt;=2.3.0 &amp;lt;2.4.0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a87a90354d1753d73e66e55fd75cce38bf7dcf77" translate="yes" xml:space="preserve">
          <source>Any version that is &lt;strong&gt;&lt;em&gt;equal to&lt;/em&gt;&lt;/strong&gt;&lt;code&gt;4.6.6&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;4.6.6&lt;/code&gt; に&lt;strong&gt;&lt;em&gt;等しい&lt;/em&gt;&lt;/strong&gt;バージョン</target>
        </trans-unit>
        <trans-unit id="43740fcc881c484fb1dc1d2f2866cf128fd69d82" translate="yes" xml:space="preserve">
          <source>Any version that is &lt;strong&gt;&lt;em&gt;greater than or equal to&lt;/em&gt;&lt;/strong&gt;&lt;code&gt;2.7.1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;2.7.1&lt;/code&gt; &lt;strong&gt;&lt;em&gt;以降の&lt;/em&gt;&lt;/strong&gt;バージョン</target>
        </trans-unit>
        <trans-unit id="9c580203a53f7828b051f68b1358098ef2033863" translate="yes" xml:space="preserve">
          <source>Any version that is &lt;strong&gt;&lt;em&gt;greater than&lt;/em&gt;&lt;/strong&gt;&lt;code&gt;0.4.2&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;0.4.2&lt;/code&gt; &lt;strong&gt;&lt;em&gt;より大きい&lt;/em&gt;&lt;/strong&gt;バージョン</target>
        </trans-unit>
        <trans-unit id="ad920afd5980e21ad4a70ecdc5e094070aa763ca" translate="yes" xml:space="preserve">
          <source>Any version that is &lt;strong&gt;&lt;em&gt;less than or equal to&lt;/em&gt;&lt;/strong&gt;&lt;code&gt;3.1.4&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;3.1.4&lt;/code&gt; &lt;strong&gt;&lt;em&gt;以下の&lt;/em&gt;&lt;/strong&gt;バージョン</target>
        </trans-unit>
        <trans-unit id="a89e7486afeb4fa685ec49a3637bbed991e4abfa" translate="yes" xml:space="preserve">
          <source>Any version that is &lt;strong&gt;&lt;em&gt;less than&lt;/em&gt;&lt;/strong&gt;&lt;code&gt;2.0.0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;2.0.0&lt;/code&gt; &lt;strong&gt;&lt;em&gt;より前の&lt;/em&gt;&lt;/strong&gt;バージョン</target>
        </trans-unit>
        <trans-unit id="d69f5338bf9291b0633d3eae68c1565675981350" translate="yes" xml:space="preserve">
          <source>Apache License 2.0</source>
          <target state="translated">Apacheライセンス2.0</target>
        </trans-unit>
        <trans-unit id="386f5d952cbb9f387419e965093745d5d81527f6" translate="yes" xml:space="preserve">
          <source>Append &lt;code&gt;@[version]&lt;/code&gt; to the package argument to provide information specific to that version:</source>
          <target state="translated">アペンド &lt;code&gt;@[version]&lt;/code&gt; そのバージョンに情報の特定を提供するために、パッケージの引数：</target>
        </trans-unit>
        <trans-unit id="0b0cc9af400a8d47e31823530c1615168c07d194" translate="yes" xml:space="preserve">
          <source>Applying the level flag will limit the audit table to vulnerabilities of the corresponding level and above. It will &lt;em&gt;not&lt;/em&gt; affect the exit code of the command.</source>
          <target state="translated">レベルフラグを適用すると、監査テーブルが対応するレベル以上の脆弱性に制限されます。それはなり&lt;em&gt;ません&lt;/em&gt;、コマンドの終了コードに影響を与えます。</target>
        </trans-unit>
        <trans-unit id="0a89342e9fcb31a038f4068e38847b411ea691af" translate="yes" xml:space="preserve">
          <source>Arch Linux</source>
          <target state="translated">アーチリナックス</target>
        </trans-unit>
        <trans-unit id="5dc6c6d94d16368d7764aa05c2f4179da2dc2fff" translate="yes" xml:space="preserve">
          <source>Array of package names that will be bundled when publishing the package.</source>
          <target state="translated">パッケージを公開する際にバンドルされるパッケージ名の配列。</target>
        </trans-unit>
        <trans-unit id="e972423590de78c8b95ece50d00621a9810fe716" translate="yes" xml:space="preserve">
          <source>As of Yarn 1.7.0, you can &lt;a href=&quot;https://yarnpkg.com/blog/2018/06/04/yarn-import-package-lock/&quot;&gt;import your package-lock.json&lt;/a&gt; state, generated by &lt;code&gt;npm&lt;/code&gt; to Yarn, by using &lt;code&gt;yarn import&lt;/code&gt;.</source>
          <target state="translated">Yarn 1.7.0以降では、 &lt;code&gt;npm&lt;/code&gt; によって生成された&lt;a href=&quot;https://yarnpkg.com/blog/2018/06/04/yarn-import-package-lock/&quot;&gt;package-lock.json&lt;/a&gt;状態を、 &lt;code&gt;yarn import&lt;/code&gt; を使用してYarnにインポートできます。</target>
        </trans-unit>
        <trans-unit id="948794d25ec486a529d15a2386af4595681c2940" translate="yes" xml:space="preserve">
          <source>Autoclean functionality is &lt;strong&gt;disabled&lt;/strong&gt; by default. To enable it, manually create a &lt;code&gt;.yarnclean&lt;/code&gt; file, or run &lt;code&gt;yarn autoclean --init&lt;/code&gt; to create the file with default entries. The &lt;code&gt;.yarnclean&lt;/code&gt; file should be added to version control.</source>
          <target state="translated">自動クリーニング機能はデフォルトで&lt;strong&gt;無効になっ&lt;/strong&gt;ています。これを有効にするには、 &lt;code&gt;.yarnclean&lt;/code&gt; ファイルを手動で作成するか、 &lt;code&gt;yarn autoclean --init&lt;/code&gt; を実行してデフォルトのエントリでファイルを作成します。 &lt;code&gt;.yarnclean&lt;/code&gt; ファイルはバージョン管理に追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="ae279dcca24dd75ec0c9c7a374f99f3f27ab2aeb" translate="yes" xml:space="preserve">
          <source>Be careful when publishing packages in a workspace. If you are preparing your next release and you decided to use a new dependency but forgot to declare it in the &lt;code&gt;package.json&lt;/code&gt; file, your tests might still pass locally if another package already downloaded that dependency into the workspace root. However, it will be broken for consumers that pull it from a registry, since the dependency list is now incomplete so they have no way to download the new dependency. Currently there is no way to throw a warning in this scenario.</source>
          <target state="translated">ワークスペースでパッケージを公開するときは注意してください。次のリリースを準備していて、新しい依存関係を使用することを決めたが、 &lt;code&gt;package.json&lt;/code&gt; ファイルで宣言するのを忘れた場合、別のパッケージがすでにその依存関係をワークスペースルートにダウンロードしている場合、テストはローカルでパスする可能性があります。ただし、依存関係リストが不完全になり、新しい依存関係をダウンロードする方法がないため、レジストリからプルするコンシューマーにとっては問題になります。現在、このシナリオで警告をスローする方法はありません。</target>
        </trans-unit>
        <trans-unit id="af460d0a4eeb9457873f944d9325276175335c83" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;https://about.gitlab.com/product/continuous-integration/&quot;&gt;GitLab CI&lt;/a&gt; uses docker in the background, you can specify an image with yarn pre-installed.</source>
          <target state="translated">&lt;a href=&quot;https://about.gitlab.com/product/continuous-integration/&quot;&gt;GitLab CI&lt;/a&gt;はバックグラウンドでdockerを使用するため、糸がプリインストールされたイメージを指定できます。</target>
        </trans-unit>
        <trans-unit id="8155160669bd0b6b6c870691ad7b77714dd676cc" translate="yes" xml:space="preserve">
          <source>Because Node has no concept of &amp;ldquo;package&amp;rdquo;, it doesn&amp;rsquo;t know whether a file is &lt;em&gt;meant&lt;/em&gt; to be accessed, on top of being available. It&amp;rsquo;s entirely possible that code you wrote will work in development but break in production because you forgot to list one of your dependencies in your &lt;code&gt;package.json&lt;/code&gt; - and you won&amp;rsquo;t know it until it becomes a problem and you lose a day investigating the issue.</source>
          <target state="translated">Nodeには「パッケージ」の概念がないため、ファイルが利用可能である&lt;em&gt;ことに加え&lt;/em&gt;て、ファイルへのアクセスが&lt;em&gt;意図さ&lt;/em&gt;れているかどうかはわかりません。記述したコードが開発では機能するが、 &lt;code&gt;package.json&lt;/code&gt; に依存関係の1つをリストするのを忘れたために本番環境で機能しなくなる可能性は十分にあります。 。</target>
        </trans-unit>
        <trans-unit id="3504a4b5255934e81ff3eb470ab611bb5e7df99e" translate="yes" xml:space="preserve">
          <source>Before extracting Yarn, it is recommended that you verify the tarball using GPG:</source>
          <target state="translated">Yarnを取り出す前に、GPGを使ってtarballを確認することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="5af5b44946a3c1b2088a59654f32b2551d382e2b" translate="yes" xml:space="preserve">
          <source>Before you start using Yarn, you'll first need to install it on your system. There are a growing number of different ways to install Yarn:</source>
          <target state="translated">Yarn を使い始める前に、まずシステムにインストールする必要があります。Yarn をインストールする方法はどんどん増えてきています。</target>
        </trans-unit>
        <trans-unit id="a98885cf6cc04a5dbc575d31a7da2d73d1fb95be" translate="yes" xml:space="preserve">
          <source>Bitbucket</source>
          <target state="translated">Bitbucket</target>
        </trans-unit>
        <trans-unit id="f9953cc7ed9cd3b15abbd027954f3e1a42184a30" translate="yes" xml:space="preserve">
          <source>Bundled dependencies are an array of package names that will be bundled together when publishing your package.</source>
          <target state="translated">バンドルされた依存関係は、パッケージを公開する際にバンドルされるパッケージ名の配列です。</target>
        </trans-unit>
        <trans-unit id="7448de6db678898706fe3e89dc5f28785d33c66b" translate="yes" xml:space="preserve">
          <source>Bundled dependencies should be inside your project. The functionality is basically the same as normal dependencies. They will also be packed when running &lt;code&gt;yarn pack&lt;/code&gt;.</source>
          <target state="translated">バンドルされた依存関係はプロジェクト内にある必要があります。機能は基本的に通常の依存関係と同じです。 &lt;code&gt;yarn pack&lt;/code&gt; 実行すると、それらもパックされます。</target>
        </trans-unit>
        <trans-unit id="85ab4894786e24544995d03802bd115a8f16bc0f" translate="yes" xml:space="preserve">
          <source>By default, all packages and their dependencies will be displayed. To restrict the depth of the dependencies, you can add a flag, &lt;code&gt;--depth&lt;/code&gt;, along with the desired level to the &lt;code&gt;list&lt;/code&gt; command.</source>
          <target state="translated">デフォルトでは、すべてのパッケージとその依存関係が表示されます。依存関係の深さを制限するには、フラグ &lt;code&gt;--depth&lt;/code&gt; を目的のレベルとともに &lt;code&gt;list&lt;/code&gt; コマンドに追加します。</target>
        </trans-unit>
        <trans-unit id="c53879a5982f6afdddda669a2586198b66855b5e" translate="yes" xml:space="preserve">
          <source>By default, if answer given to &lt;code&gt;question private&lt;/code&gt; is passed in as empty, the &lt;code&gt;private&lt;/code&gt; key will not be added to &lt;code&gt;package.json&lt;/code&gt;</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;question private&lt;/code&gt; に対する回答が空の場合、 &lt;code&gt;private&lt;/code&gt; 鍵は &lt;code&gt;package.json&lt;/code&gt; に追加されません。</target>
        </trans-unit>
        <trans-unit id="34b2b186e6cee8052be93f7705df02c09e21a826" translate="yes" xml:space="preserve">
          <source>Bypasses running commit hooks when committing the new version.</source>
          <target state="translated">新しいバージョンをコミットする際のコミットフックの実行をバイパスします。</target>
        </trans-unit>
        <trans-unit id="700b401ca52b1bd3071dc838bf11be9cdb19fc5f" translate="yes" xml:space="preserve">
          <source>CLI</source>
          <target state="translated">CLI</target>
        </trans-unit>
        <trans-unit id="acbb4b73f95bada54b37ed5bbd4fe52f109cb99a" translate="yes" xml:space="preserve">
          <source>CLI Commands</source>
          <target state="translated">CLIコマンド</target>
        </trans-unit>
        <trans-unit id="2c9fe3f73207b8cba45fb3d72e46d6df3470d3ac" translate="yes" xml:space="preserve">
          <source>CLI Introduction</source>
          <target state="translated">CLIの紹介</target>
        </trans-unit>
        <trans-unit id="d3c396c1c6d0300c726553d95f91d0b5c61ddae9" translate="yes" xml:space="preserve">
          <source>CLI arguments</source>
          <target state="translated">CLI引数</target>
        </trans-unit>
        <trans-unit id="c9c0ed40b05d38aedb0eeb4521e49215e648dc60" translate="yes" xml:space="preserve">
          <source>CLI commands comparison</source>
          <target state="translated">CLIコマンドの比較</target>
        </trans-unit>
        <trans-unit id="607ccf03c921ae78ab4c1aaaee8e9b2d3ed153fc" translate="yes" xml:space="preserve">
          <source>Caret Ranges</source>
          <target state="translated">キャレットレンジ</target>
        </trans-unit>
        <trans-unit id="bcaa33a7ae44bd5042c37a9cdbea7f843b1cf7c8" translate="yes" xml:space="preserve">
          <source>Caveats</source>
          <target state="translated">Caveats</target>
        </trans-unit>
        <trans-unit id="981bf93ef15a4e84fab1f565ec02331d126dc158" translate="yes" xml:space="preserve">
          <source>CentOS / Fedora / RHEL</source>
          <target state="translated">CentOS/Fedora/RHEL</target>
        </trans-unit>
        <trans-unit id="0b0d8a1eabc875caf7183974e34073a2d4fd326e" translate="yes" xml:space="preserve">
          <source>Certain edge-cases may not work properly since this is a fairly new feature.</source>
          <target state="translated">これはかなり新しい機能なので、一部のエッジケースが正しく動作しない場合があります。</target>
        </trans-unit>
        <trans-unit id="57bd682c57ddd7ea5a626dfb8fe18c3ed1427800" translate="yes" xml:space="preserve">
          <source>Certain script names are special. If defined, the &lt;code&gt;preinstall&lt;/code&gt; script is called by yarn before your package is installed. For compatibility reasons, scripts called &lt;code&gt;install&lt;/code&gt;, &lt;code&gt;postinstall&lt;/code&gt;, &lt;code&gt;prepublish&lt;/code&gt;, and &lt;code&gt;prepare&lt;/code&gt; will all be called after your package has finished installing.</source>
          <target state="translated">特定のスクリプト名は特別です。定義されている場合、パッケージがインストールされる前に、 &lt;code&gt;preinstall&lt;/code&gt; スクリプトがyarnによって呼び出されます。互換性の理由から、パッケージのインストールが完了した後で、 &lt;code&gt;install&lt;/code&gt; 、 &lt;code&gt;postinstall&lt;/code&gt; 、 &lt;code&gt;prepublish&lt;/code&gt; 、および &lt;code&gt;prepare&lt;/code&gt; と呼ばれるスクリプトがすべて呼び出されます。</target>
        </trans-unit>
        <trans-unit id="1da16947047612505642176dc70919a5885e928f" translate="yes" xml:space="preserve">
          <source>Change metadata for a package</source>
          <target state="translated">パッケージのメタデータを変更する</target>
        </trans-unit>
        <trans-unit id="1bddf327bbc441ec1276389eee3b8565c7317d83" translate="yes" xml:space="preserve">
          <source>Change the cache path for yarn</source>
          <target state="translated">yarnのキャッシュパスを変更する</target>
        </trans-unit>
        <trans-unit id="540a87cbecf62c625043266de7ec22d03a0170e0" translate="yes" xml:space="preserve">
          <source>Check into source control</source>
          <target state="translated">ソース制御にチェックを入れる</target>
        </trans-unit>
        <trans-unit id="85ae1983a12988f6832d3f5ce55b491c36d11887" translate="yes" xml:space="preserve">
          <source>Check out the &lt;a href=&quot;https://github.com/yarnpkg/example-yarn-package&quot;&gt;Yarn Example Package&lt;/a&gt; for the minimum requirements necessary for a Yarn package.</source>
          <target state="translated">糸のパッケージに必要な最小要件については、&lt;a href=&quot;https://github.com/yarnpkg/example-yarn-package&quot;&gt;糸のサンプルパッケージ&lt;/a&gt;を確認してください。</target>
        </trans-unit>
        <trans-unit id="d6174e036558394a15319c6714418c2799831670" translate="yes" xml:space="preserve">
          <source>Checks for known security issues with the installed packages. A count of found issues will be added to the output. Use the &lt;code&gt;yarn audit&lt;/code&gt; command for additional details.</source>
          <target state="translated">インストールされたパッケージの既知のセキュリティ問題をチェックします。見つかった問題の数が出力に追加されます。詳細については、 &lt;code&gt;yarn audit&lt;/code&gt; コマンドを使用してください。</target>
        </trans-unit>
        <trans-unit id="d587a5d636300404b706f946090a69da6cf4bce1" translate="yes" xml:space="preserve">
          <source>Checks for known security issues with the installed packages. A count of found issues will be added to the output. Use the &lt;code&gt;yarn audit&lt;/code&gt; command for additional details. Unlike npm, which automatically runs an audit on every install, yarn will only do so when requested. (This may change in a later update as the feature is proven to be stable.)</source>
          <target state="translated">インストールされたパッケージの既知のセキュリティ問題をチェックします。見つかった問題の数が出力に追加されます。詳細については、 &lt;code&gt;yarn audit&lt;/code&gt; コマンドを使用してください。インストールごとに自動的に監査を実行するnpmとは異なり、yarnは要求されたときにのみ実行します。（これは、機能が安定していることが証明されているため、今後のアップデートで変更される可能性があります。）</target>
        </trans-unit>
        <trans-unit id="d69a1ab09f656a54fd0c1c14f8946d3292d5387a" translate="yes" xml:space="preserve">
          <source>Checks for known security issues with the installed packages. The output is a list of known issues.</source>
          <target state="translated">インストールされているパッケージの既知のセキュリティ問題をチェックします。出力は既知の問題のリストです。</target>
        </trans-unit>
        <trans-unit id="c83633de501f48d6a2dcd3959ce3f79262960f09" translate="yes" xml:space="preserve">
          <source>Checks for outdated package dependencies.</source>
          <target state="translated">古いパッケージの依存関係をチェックします。</target>
        </trans-unit>
        <trans-unit id="f52fcd8d34a22f780498e5367700f17627c288b6" translate="yes" xml:space="preserve">
          <source>Cleans and removes unnecessary files from package dependencies.</source>
          <target state="translated">パッケージの依存関係から不要なファイルをクリーンアップして削除します。</target>
        </trans-unit>
        <trans-unit id="8d56247b521a6df9e813ade1cac23823edfc58b8" translate="yes" xml:space="preserve">
          <source>Clear registry username and email.</source>
          <target state="translated">レジストリのユーザー名と電子メールをクリアします。</target>
        </trans-unit>
        <trans-unit id="450831fe37a4f167c03d556148f1f0b59a9dbb31" translate="yes" xml:space="preserve">
          <source>Code is shared through something called a &lt;strong&gt;package&lt;/strong&gt; (sometimes referred to as a &lt;strong&gt;module&lt;/strong&gt;). A package contains all the code being shared as well as a &lt;code&gt;package.json&lt;/code&gt; file which describes the package.</source>
          <target state="translated">コードは、&lt;strong&gt;パッケージ&lt;/strong&gt;と呼ばれるもの（&lt;strong&gt;モジュール&lt;/strong&gt;と呼ばれることもあり&lt;strong&gt;ます&lt;/strong&gt;）を介して共有され&lt;strong&gt;ます&lt;/strong&gt;。パッケージには、共有されているすべてのコードと、パッケージを説明する &lt;code&gt;package.json&lt;/code&gt; ファイルが含まれています。</target>
        </trans-unit>
        <trans-unit id="2e320ff02763b760e307879c5667db10227b3408" translate="yes" xml:space="preserve">
          <source>Code sharing</source>
          <target state="translated">コードの共有</target>
        </trans-unit>
        <trans-unit id="45e5f3f72e961cb70134ba35f7a27a9620e515f7" translate="yes" xml:space="preserve">
          <source>Commands</source>
          <target state="translated">Commands</target>
        </trans-unit>
        <trans-unit id="bd5dc2ff43c21afc00e56a2f75cce397b8506026" translate="yes" xml:space="preserve">
          <source>Comparator</source>
          <target state="translated">Comparator</target>
        </trans-unit>
        <trans-unit id="0b6e7f187dedea7ab4d57e02a6a477c3df4b3f04" translate="yes" xml:space="preserve">
          <source>Comparators</source>
          <target state="translated">Comparators</target>
        </trans-unit>
        <trans-unit id="0fd236bfc671834213e8937fabf83f2627508575" translate="yes" xml:space="preserve">
          <source>Comparators can be joined by whitespace to create a &lt;strong&gt;comparator set&lt;/strong&gt;. This creates an &lt;strong&gt;intersection&lt;/strong&gt; of the comparators it includes. For example, the comparator set &lt;code&gt;&amp;gt;=2.0.0 &amp;lt;3.1.4&lt;/code&gt; means &lt;em&gt;&amp;ldquo;Greater than or equal to &lt;code&gt;2.0.0&lt;/code&gt; &lt;strong&gt;and&lt;/strong&gt; less than &lt;code&gt;3.1.4&lt;/code&gt;&amp;ldquo;&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;コンパレーターを&lt;/strong&gt;空白で結合して、&lt;strong&gt;コンパレーターセット&lt;/strong&gt;を作成できます。これにより、含まれるコンパレータの&lt;strong&gt;共通&lt;/strong&gt;部分が作成されます。例えば、コンパレータセットは &lt;code&gt;&amp;gt;=2.0.0 &amp;lt;3.1.4&lt;/code&gt; 手段&lt;em&gt;「より大きいか等しい &lt;code&gt;2.0.0&lt;/code&gt; &lt;strong&gt;及び&lt;/strong&gt;以下 &lt;code&gt;3.1.4&lt;/code&gt; 「&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="9186498f7b1099e68388e8efb8ed4dd84c466a4c" translate="yes" xml:space="preserve">
          <source>Complete example, assuming two project folders &lt;code&gt;react&lt;/code&gt; and &lt;code&gt;react-relay&lt;/code&gt; next to each other:</source>
          <target state="translated">2つのプロジェクトフォルダーが互いに隣り合って &lt;code&gt;react&lt;/code&gt; 、 &lt;code&gt;react-relay&lt;/code&gt; であると想定した完全な例：</target>
        </trans-unit>
        <trans-unit id="2330add85bf07ddd7393c9bac41f9afa391564df" translate="yes" xml:space="preserve">
          <source>Concurrency and &lt;code&gt;--mutex&lt;/code&gt;</source>
          <target state="translated">同時実行性と &lt;code&gt;--mutex&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">Configuration</target>
        </trans-unit>
        <trans-unit id="d5589f9c60ced14c00cd1ed87f2bfa3febc5e3ba" translate="yes" xml:space="preserve">
          <source>Configuration options or parameters used in your scripts.</source>
          <target state="translated">スクリプトで使用する設定オプションまたはパラメータ。</target>
        </trans-unit>
        <trans-unit id="5514975e462b3afe70d0ca7329fc77cbc2328406" translate="yes" xml:space="preserve">
          <source>Configuring an Offline Mirror</source>
          <target state="translated">オフラインミラーの設定</target>
        </trans-unit>
        <trans-unit id="3d07cf982b8b9029917d989b5b3013014761579a" translate="yes" xml:space="preserve">
          <source>Configuring your package</source>
          <target state="translated">パッケージの設定</target>
        </trans-unit>
        <trans-unit id="c30247f0271090285309fe7f5ac01bd04747a84e" translate="yes" xml:space="preserve">
          <source>Continued example from the &lt;a href=&quot;link&quot;&gt;&lt;code&gt;yarn link&lt;/code&gt;&lt;/a&gt; documentation: assume two folders &lt;code&gt;react&lt;/code&gt; and &lt;code&gt;react-relay&lt;/code&gt; that are located next to each other with &lt;code&gt;react&lt;/code&gt; linked into the &lt;code&gt;react-relay&lt;/code&gt; project:</source>
          <target state="translated">続く例&lt;a href=&quot;link&quot;&gt; &lt;code&gt;yarn link&lt;/code&gt; &lt;/a&gt;資料：2つのフォルダを想定 &lt;code&gt;react&lt;/code&gt; と &lt;code&gt;react-relay&lt;/code&gt; と隣同士に配置されて &lt;code&gt;react&lt;/code&gt; に連結 &lt;code&gt;react-relay&lt;/code&gt; プロジェクト：</target>
        </trans-unit>
        <trans-unit id="7a302c3f9cf2b3cec42c41ee9b6ddfb04d9516a9" translate="yes" xml:space="preserve">
          <source>Continuous Integration</source>
          <target state="translated">継続的インテグレーション</target>
        </trans-unit>
        <trans-unit id="447746f6ad29a4c7f63b5332d376db8d503701ff" translate="yes" xml:space="preserve">
          <source>Control automatic pruning of the offline mirror. &lt;a href=&quot;prune-offline-mirror&quot;&gt;Find more information here&lt;/a&gt;.</source>
          <target state="translated">オフラインミラーの自動プルーニングを制御します。&lt;a href=&quot;prune-offline-mirror&quot;&gt;詳細については、こちらをご覧ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7a457a5128a8e103983ad8b30badf0a56fb98da7" translate="yes" xml:space="preserve">
          <source>Controls the number of child processes run in parallel to build node modules.</source>
          <target state="translated">ノードモジュールを構築するために並行して実行する子プロセスの数を制御します。</target>
        </trans-unit>
        <trans-unit id="6580fc694be7ccb8ebaa1bd775dee364897c59a9" translate="yes" xml:space="preserve">
          <source>Controls the number of child processes run parallely to build node modules.</source>
          <target state="translated">ノードモジュールを構築するために並列に実行する子プロセスの数を制御します。</target>
        </trans-unit>
        <trans-unit id="fb6fca1fdb80945741a0f06668c1b1770bcf75ce" translate="yes" xml:space="preserve">
          <source>Create a new team.</source>
          <target state="translated">新しいチームを作る。</target>
        </trans-unit>
        <trans-unit id="87ad27599e7698347c49afeab612b49de7134b43" translate="yes" xml:space="preserve">
          <source>Create a new version using an interactive session to prompt you for a new version.</source>
          <target state="translated">対話型セッションを使用して、新しいバージョンを作成してください。</target>
        </trans-unit>
        <trans-unit id="9f4f47b1c5d9d141daca6e416a47f1afd2ca11e7" translate="yes" xml:space="preserve">
          <source>Create hardlinks to the repeated modules in node_modules.</source>
          <target state="translated">node_modulesの中に、繰り返されるモジュールへのハードリンクを作成します。</target>
        </trans-unit>
        <trans-unit id="655011fa9be049888a79f043a551d384b0db60a7" translate="yes" xml:space="preserve">
          <source>Creates a compressed gzip archive of package dependencies and names the file &lt;em&gt;filename&lt;/em&gt;.</source>
          <target state="translated">パッケージの依存関係の圧縮gzipアーカイブを作成し、ファイルに&lt;em&gt;filename&lt;/em&gt;という名前を付け&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="39fe816341628ec0fefa0c018674ddc9b57fe9d2" translate="yes" xml:space="preserve">
          <source>Creates a compressed gzip archive of package dependencies.</source>
          <target state="translated">パッケージの依存関係を圧縮した gzip アーカイブを作成します。</target>
        </trans-unit>
        <trans-unit id="5a793505fccdf7ad28f60424b02092481e2749a9" translate="yes" xml:space="preserve">
          <source>Creates a new prerelease version by incrementing the major, minor, or patch number of the current version and adding a prerelease number.</source>
          <target state="translated">現在のバージョンのメジャー、マイナー、またはパッチ番号をインクリメントし、プレリリース番号を追加することで、新しいプレリリースバージョンを作成します。</target>
        </trans-unit>
        <trans-unit id="e6743cce5fb5319378dc7fbedfda884a0646a5a7" translate="yes" xml:space="preserve">
          <source>Creates a new version by incrementing the major, minor, or patch number of the current version.</source>
          <target state="translated">現在のバージョンのメジャー、マイナー、パッチ番号をインクリメントして新しいバージョンを作成します。</target>
        </trans-unit>
        <trans-unit id="85ffc3a29651b33e452adc6b66c3ee3db4c7ae27" translate="yes" xml:space="preserve">
          <source>Creates a new version specified by &lt;code&gt;&amp;lt;version&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;version&amp;gt;&lt;/code&gt; で指定された新しいバージョンを作成します。</target>
        </trans-unit>
        <trans-unit id="abf4f70fc8bbe5f543e77992500898ac559bfb3d" translate="yes" xml:space="preserve">
          <source>Creates a new version without creating a git tag.</source>
          <target state="translated">git タグを作成せずに新しいバージョンを作成します。</target>
        </trans-unit>
        <trans-unit id="adfe4f188fd77b72d14245078fdf3d683e95c81a" translate="yes" xml:space="preserve">
          <source>Creates new projects from any &lt;code&gt;create-*&lt;/code&gt; starter kits.</source>
          <target state="translated">&lt;code&gt;create-*&lt;/code&gt; スターターキットから新しいプロジェクトを作成します。</target>
        </trans-unit>
        <trans-unit id="0f75bb2c5d8bae830089deae9b9c38771f2b5480" translate="yes" xml:space="preserve">
          <source>Creating a Package</source>
          <target state="translated">パッケージの作成</target>
        </trans-unit>
        <trans-unit id="5779ce31675e4f49452cfd03428b18f0bba00725" translate="yes" xml:space="preserve">
          <source>Creating a new project</source>
          <target state="translated">新規プロジェクトの作成</target>
        </trans-unit>
        <trans-unit id="88771b883fcb4bf7a1949b29d515a9f7fd55ddb3" translate="yes" xml:space="preserve">
          <source>Creating and publishing a yarn package can be done with just a few commands and configuration settings, leaving you to focus on your actual code.</source>
          <target state="translated">yarnパッケージの作成と公開は、いくつかのコマンドと設定を行うだけで、実際のコードに集中することができます。</target>
        </trans-unit>
        <trans-unit id="14827f6d8e165c25e5ac317f99b87b852bbf17bb" translate="yes" xml:space="preserve">
          <source>Creating your first package</source>
          <target state="translated">最初のパッケージを作成する</target>
        </trans-unit>
        <trans-unit id="0d508843749426b58ad6f86009c888c5a4b4a374" translate="yes" xml:space="preserve">
          <source>Current package only</source>
          <target state="translated">現在のパッケージのみ</target>
        </trans-unit>
        <trans-unit id="a457ad099d9052ecf046782ba100c8ea31d4f887" translate="yes" xml:space="preserve">
          <source>Currently, there are no Alpine packages available for RC or nightly builds of Yarn. Please use the tarball:</source>
          <target state="translated">現在、ヤーンのRCビルドや夜間ビルドで利用できるアルパインパッケージはありません。タールボールをご利用ください。</target>
        </trans-unit>
        <trans-unit id="dd5d34aad333773d85a63f74d96888bad6d597c0" translate="yes" xml:space="preserve">
          <source>Currently, there are no Arch packages available for RC or nightly builds of Yarn. Please use the tarball:</source>
          <target state="translated">現在、Yarn の RC ビルドやナイトリービルドで利用できる Arch パッケージはありません。tarball を使ってください。</target>
        </trans-unit>
        <trans-unit id="999721d75b5a737d6607a61b9e251259be55ff72" translate="yes" xml:space="preserve">
          <source>Currently, there are no Gentoo packages available for RC or nightly builds of Yarn. Please use the tarball:</source>
          <target state="translated">現在のところ、Yarn の RC ビルドやナイトリービルドで利用できる Gentoo パッケージはありません。tarball を使ってください。</target>
        </trans-unit>
        <trans-unit id="0232ae7489bb336b9b1e4866883cdee53bc21169" translate="yes" xml:space="preserve">
          <source>Currently, there are no Homebrew or MacPorts packages available for RC or nightly builds of Yarn. Please use the tarball:</source>
          <target state="translated">現在のところ、Yarn の RC やナイトリービルドで利用できる Homebrew や MacPorts のパッケージはありません。tarballをご利用ください。</target>
        </trans-unit>
        <trans-unit id="d44252594eb6bae8afb1dd1983a189cb15c9102d" translate="yes" xml:space="preserve">
          <source>Currently, there are no RPM packages available for RC or nightly builds of Yarn. Please use the tarball:</source>
          <target state="translated">現在、YarnのRCビルドやナイトリービルドで利用できるRPMパッケージはありません。タールボールをご利用ください。</target>
        </trans-unit>
        <trans-unit id="41cf34f395b2311d24af1a7e3a382b6ed7826e87" translate="yes" xml:space="preserve">
          <source>Currently, there are no Solus packages available for RC or nightly builds of Yarn. Please use the tarball:</source>
          <target state="translated">現在、YarnのRCビルドやナイトリービルドで利用できるSolusパッケージはありません。tarballをご利用ください。</target>
        </trans-unit>
        <trans-unit id="574b0119e6378e38de313c4c2a1d46c9783e7b9c" translate="yes" xml:space="preserve">
          <source>Debian / Ubuntu</source>
          <target state="translated">Debian/Ubuntu</target>
        </trans-unit>
        <trans-unit id="4bc1d059b9826d872ee2ba7f2a2446e0658821cf" translate="yes" xml:space="preserve">
          <source>Default Command</source>
          <target state="translated">デフォルトコマンド</target>
        </trans-unit>
        <trans-unit id="c8a6429678517770dfec5f011d04bd87267c1cd2" translate="yes" xml:space="preserve">
          <source>Defines project-wide policies for your project.</source>
          <target state="translated">プロジェクト全体のポリシーを定義します。</target>
        </trans-unit>
        <trans-unit id="bda02397f0db14e3e08a95acae72a7cef9228646" translate="yes" xml:space="preserve">
          <source>Defining install location</source>
          <target state="translated">インストール場所の定義</target>
        </trans-unit>
        <trans-unit id="09912950f2366936e3ebf0f198bd76887c92133e" translate="yes" xml:space="preserve">
          <source>Deletes a given &lt;code&gt;key&lt;/code&gt; from the config.</source>
          <target state="translated">指定された &lt;code&gt;key&lt;/code&gt; から削除します。</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">Dependencies</target>
        </trans-unit>
        <trans-unit id="4490fdc9de586441482cc470e9e857f3b3fe1c5c" translate="yes" xml:space="preserve">
          <source>Dependencies &amp;amp; Versions</source>
          <target state="translated">依存関係とバージョン</target>
        </trans-unit>
        <trans-unit id="bc5a4a5b81220c8866363e020ad87636fc85cd4e" translate="yes" xml:space="preserve">
          <source>Dependencies and versions</source>
          <target state="translated">依存関係とバージョン</target>
        </trans-unit>
        <trans-unit id="2335acd1685c078fd9079a8d2d554d142f955b06" translate="yes" xml:space="preserve">
          <source>Dependencies serve many different purposes. Some dependencies are needed to build your project, others are needed when you&amp;rsquo;re running your program. As such there are a number of different types of dependencies that you can have (e.g. &lt;code&gt;dependencies&lt;/code&gt;, &lt;code&gt;devDependencies&lt;/code&gt;, and &lt;code&gt;peerDependencies&lt;/code&gt;).</source>
          <target state="translated">依存関係にはさまざまな目的があります。プロジェクトをビルドするために必要な依存関係もあれば、プログラムを実行するときに必要な依存関係もあります。このように、さまざまなタイプの依存関係（たとえば、 &lt;code&gt;dependencies&lt;/code&gt; 、 &lt;code&gt;devDependencies&lt;/code&gt; 、および &lt;code&gt;peerDependencies&lt;/code&gt; ）を使用できます。</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="36d9f02132aad8b73badb8a703a1844927f693cb" translate="yes" xml:space="preserve">
          <source>Destroys an existing team.</source>
          <target state="translated">既存のチームを破壊する。</target>
        </trans-unit>
        <trans-unit id="dc3decbb93847518f1a049dcf49d0d7c6560bcc6" translate="yes" xml:space="preserve">
          <source>Details</source>
          <target state="translated">Details</target>
        </trans-unit>
        <trans-unit id="43d965239f20b4d894d44da4295082ff22de9b78" translate="yes" xml:space="preserve">
          <source>Different tags have different meanings:</source>
          <target state="translated">異なるタグには異なる意味があります。</target>
        </trans-unit>
        <trans-unit id="625d165a42dc4c2010669e1a2e20319d0f2b411e" translate="yes" xml:space="preserve">
          <source>Disable interactive prompts, like when there&amp;rsquo;s an invalid version of a dependency.</source>
          <target state="translated">無効なバージョンの依存関係がある場合など、対話型プロンプトを無効にします。</target>
        </trans-unit>
        <trans-unit id="0d75aeb637330b3c7a3f1c104785334ca292f3f0" translate="yes" xml:space="preserve">
          <source>Displays help information.</source>
          <target state="translated">ヘルプ情報を表示します。</target>
        </trans-unit>
        <trans-unit id="b49448d2f01bd9227b243c3bebbc998fbbd9f46a" translate="yes" xml:space="preserve">
          <source>Displays the current configuration.</source>
          <target state="translated">現在の設定を表示します。</target>
        </trans-unit>
        <trans-unit id="140beb09022cdd4480f12a03c4dc0232ccc74de2" translate="yes" xml:space="preserve">
          <source>Displays the location of the yarn &lt;code&gt;bin&lt;/code&gt; folder.</source>
          <target state="translated">糸 &lt;code&gt;bin&lt;/code&gt; フォルダーの場所を表示します。</target>
        </trans-unit>
        <trans-unit id="9b6f4a6775748527669d62bbde7699085d2003c1" translate="yes" xml:space="preserve">
          <source>Displays version information of the currently installed Yarn, Node.js, and its dependencies.</source>
          <target state="translated">現在インストールされているYarn、Node.js、およびその依存関係のバージョン情報を表示します。</target>
        </trans-unit>
        <trans-unit id="751d254789c83d5ff4ae050f06f36d52c5d42c4b" translate="yes" xml:space="preserve">
          <source>Distribution tags (or dist-tags) are a way of marking published versions of your package with a label. Users of your package can install it using this label instead of a version number.</source>
          <target state="translated">ディストリビューションタグ (または dist-tag)は、公開されているバージョンのパッケージをラベルで表示する方法です。あなたのパッケージのユーザは、バージョン番号の代わりにこのラベルを使ってインストールすることができます。</target>
        </trans-unit>
        <trans-unit id="2d95dc39cb832ab8b401ae3fe0155a1877bd7830" translate="yes" xml:space="preserve">
          <source>Do not execute any scripts defined in the project package.json and its dependencies.</source>
          <target state="translated">プロジェクトの package.json とその依存関係で定義されているスクリプトを実行しないでください。</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">Documentation</target>
        </trans-unit>
        <trans-unit id="7bf15b4b9958eda0ee1bed1e841929b0d5886175" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t generate a &lt;code&gt;yarn.lock&lt;/code&gt; lockfile and fail if an update is needed.</source>
          <target state="translated">更新が必要な場合は、 &lt;code&gt;yarn.lock&lt;/code&gt; ロックファイルを生成せず、失敗しないようにしてください。</target>
        </trans-unit>
        <trans-unit id="cc15c7ad2cb7cb8497796f30c36e8ef60df63ca4" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t generate a &lt;code&gt;yarn.lock&lt;/code&gt; lockfile.</source>
          <target state="translated">&lt;code&gt;yarn.lock&lt;/code&gt; ロックファイルを生成しないでください。</target>
        </trans-unit>
        <trans-unit id="f1604a7bd59a73b2e2adfd113d003a570f050887" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t install optional dependencies.</source>
          <target state="translated">オプションの依存関係をインストールしないでください。</target>
        </trans-unit>
        <trans-unit id="e9c4c4e95c99919ab20cfa7097c131e3dd5a8a91" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t put &lt;code&gt;js&lt;/code&gt; or &lt;code&gt;node&lt;/code&gt; in the name.</source>
          <target state="translated">名前に &lt;code&gt;js&lt;/code&gt; または &lt;code&gt;node&lt;/code&gt; を含めないでください。</target>
        </trans-unit>
        <trans-unit id="36d3ce561cfd702cb91655cb418be2a344bfe406" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t read or generate a &lt;code&gt;yarn.lock&lt;/code&gt; lockfile.</source>
          <target state="translated">&lt;code&gt;yarn.lock&lt;/code&gt; ロックファイルを読み取ったり生成したりしないでください。</target>
        </trans-unit>
        <trans-unit id="3b1d19f5d1d5909ed290d9dc57b3e46009be0223" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use the same name as a core Node.js module</source>
          <target state="translated">コアNode.jsモジュールと同じ名前を使用しないでください</target>
        </trans-unit>
        <trans-unit id="cb9b50b9c1047c9479db7279ecdc2c9b96ab0406" translate="yes" xml:space="preserve">
          <source>Download the installer</source>
          <target state="translated">インストーラーのダウンロード</target>
        </trans-unit>
        <trans-unit id="50dbed93cabadf6330f45b148bb8abb25c6f93ee" translate="yes" xml:space="preserve">
          <source>During install Yarn will only use the top-level &lt;code&gt;yarn.lock&lt;/code&gt; file and will ignore any &lt;code&gt;yarn.lock&lt;/code&gt; files that exist within dependencies. The top-level &lt;code&gt;yarn.lock&lt;/code&gt; file includes everything Yarn needs to lock the versions of all packages in the entire dependency tree.</source>
          <target state="translated">インストール中、Yarnはトップレベルの &lt;code&gt;yarn.lock&lt;/code&gt; ファイルのみを使用し、依存関係内に存在する如何なる &lt;code&gt;yarn.lock&lt;/code&gt; ファイルも無視します。最上位の &lt;code&gt;yarn.lock&lt;/code&gt; ファイルには、Yarnが依存関係ツリー全体のすべてのパッケージのバージョンをロックするために必要なすべてのものが含まれています。</target>
        </trans-unit>
        <trans-unit id="470ea1876e2d9d603e179d2fbede2161ac088212" translate="yes" xml:space="preserve">
          <source>Each command will automatically update your &lt;a href=&quot;package-json&quot;&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;yarn-lock&quot;&gt;&lt;code&gt;yarn.lock&lt;/code&gt;&lt;/a&gt; files.</source>
          <target state="translated">各コマンドは、&lt;a href=&quot;package-json&quot;&gt; &lt;code&gt;package.json&lt;/code&gt; &lt;/a&gt;ファイルと&lt;a href=&quot;yarn-lock&quot;&gt; &lt;code&gt;yarn.lock&lt;/code&gt; &lt;/a&gt;ファイルを自動的に更新します。</target>
        </trans-unit>
        <trans-unit id="660d14d1f065ff82b145212b6cb05d2fcd85fb03" translate="yes" xml:space="preserve">
          <source>Each time you want to publish a new version of your package you can follow this same flow.</source>
          <target state="translated">パッケージの新しいバージョンを公開するたびに、同じ流れに従うことができます。</target>
        </trans-unit>
        <trans-unit id="30f759c478ec947cbd68ca73417187f43e8b10c5" translate="yes" xml:space="preserve">
          <source>Each version range is made up of &lt;strong&gt;comparators&lt;/strong&gt;. These comparators are simply an &lt;em&gt;operator&lt;/em&gt; followed by a &lt;em&gt;version&lt;/em&gt;. Here are some of the basic operators:</source>
          <target state="translated">各バージョン範囲は&lt;strong&gt;コンパレータで&lt;/strong&gt;構成されています。これらのコンパレータは、&lt;em&gt;演算子と&lt;/em&gt;それに続く&lt;em&gt;バージョン&lt;/em&gt;です。基本的な演算子の一部を以下に示します。</target>
        </trans-unit>
        <trans-unit id="a0b5a3d5577db3a795db726895ec12f08339c0a1" translate="yes" xml:space="preserve">
          <source>Echoes the value for a given &lt;code&gt;key&lt;/code&gt; to &lt;code&gt;stdout&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;key&lt;/code&gt; 値を &lt;code&gt;stdout&lt;/code&gt; にエコーします。</target>
        </trans-unit>
        <trans-unit id="6a0ce9b98e0bb2ed2cd6d0d6638ca1e69e12eec8" translate="yes" xml:space="preserve">
          <source>Either the code has to be modified so that the user becomes responsible for calling &lt;code&gt;require.resolve(`jest-environment-jsdom`)&lt;/code&gt; (and then Jest can simply do &lt;code&gt;require(config.environment)&lt;/code&gt;)</source>
          <target state="translated">ユーザーが &lt;code&gt;require.resolve(`jest-environment-jsdom`)&lt;/code&gt; を呼び出す責任を持つようにコードを変更する &lt;code&gt;require(config.environment)&lt;/code&gt; があります（そしてJestは単純にrequire（config.environment）を実行できます）</target>
        </trans-unit>
        <trans-unit id="dea9f985c380e1a11c36a4b8b2c31c3f8b4e29e6" translate="yes" xml:space="preserve">
          <source>Enforcing Yarn&amp;rsquo;s version across your project</source>
          <target state="translated">プロジェクト全体でYarnのバージョンを適用する</target>
        </trans-unit>
        <trans-unit id="174adab45b2138c996eb672aa6422bd494dc44f1" translate="yes" xml:space="preserve">
          <source>Environment variables defined in &lt;code&gt;process.env&lt;/code&gt; allow you to configure additional Yarn features.</source>
          <target state="translated">&lt;code&gt;process.env&lt;/code&gt; で定義された環境変数を使用すると、追加のYarn機能を構成できます。</target>
        </trans-unit>
        <trans-unit id="06580f39a051b4e6ef99253897a370dadc16359c" translate="yes" xml:space="preserve">
          <source>Essentials</source>
          <target state="translated">Essentials</target>
        </trans-unit>
        <trans-unit id="8a62dddb114e117d0b0b73fb423acf7106ac73f8" translate="yes" xml:space="preserve">
          <source>Even at runtime, the Node resolution needs to make a bunch of &lt;code&gt;stat&lt;/code&gt; and &lt;code&gt;readdir&lt;/code&gt; calls in order to figure out where should a resolution end up. It&amp;rsquo;s extremely wasteful, and is part of the reason why booting a Node application takes so much time - before even starting executing it, Node has to spend its time querying the filesystem for information that Yarn could have given it already.</source>
          <target state="translated">実行時であっても、ノードの解決では、解決がどこに終わるのかを把握するために、 &lt;code&gt;readdir&lt;/code&gt; の &lt;code&gt;stat&lt;/code&gt; およびreaddir呼び出しを行う必要があります。これは非常に無駄であり、Nodeアプリケーションの起動に非常に時間がかかる理由の1つです。実行を開始する前に、Nodeはファイルシステムを照会して、Yarnがすでに提供している可能性がある情報を取得する必要があります。</target>
        </trans-unit>
        <trans-unit id="e11895e8b0e4fd9700bfd1eef21691b78b345f1b" translate="yes" xml:space="preserve">
          <source>Example 2:</source>
          <target state="translated">例2.</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="e1040032d9d627e34709786470425c1f2b1a1c9f" translate="yes" xml:space="preserve">
          <source>Executable files included with your project that will be installed.</source>
          <target state="translated">インストールされるプロジェクトに含まれる実行ファイル。</target>
        </trans-unit>
        <trans-unit id="2d3a347fe88265df29a0a3ff1d69b3e020dbafdc" translate="yes" xml:space="preserve">
          <source>Expanded version range</source>
          <target state="translated">バージョンアップ範囲の拡大</target>
        </trans-unit>
        <trans-unit id="6ce6c512ea433a7fc5c8841628e7696cd0ff7f2b" translate="yes" xml:space="preserve">
          <source>Files</source>
          <target state="translated">Files</target>
        </trans-unit>
        <trans-unit id="99719ccd0bd5e1f201663cfb404b5726a34d30d8" translate="yes" xml:space="preserve">
          <source>Finally, Yarn will publish the package and revoke your session token.</source>
          <target state="translated">最後に、Yarnはパッケージを公開し、セッショントークンを失効させます。</target>
        </trans-unit>
        <trans-unit id="8f5714a20fa31f7098f2c49bbf185f01f66e8d1e" translate="yes" xml:space="preserve">
          <source>Finally, run &lt;code&gt;yarn install&lt;/code&gt; somewhere, ideally inside the workspace root. If everything works well, you should now have a similar file hierarchy:</source>
          <target state="translated">最後に、 &lt;code&gt;yarn install&lt;/code&gt; をどこか、理想的にはワークスペースのルート内で実行します。すべてが適切に機能している場合は、同様のファイル階層があるはずです。</target>
        </trans-unit>
        <trans-unit id="755cf5fdb6d4edfe632b14f221f51cc3864293f2" translate="yes" xml:space="preserve">
          <source>Finally, the very design of the &lt;code&gt;node_modules&lt;/code&gt; folder is impractical in that it doesn&amp;rsquo;t allow to dedupe packages as efficiently as one would hope. Because two packages with the same name but different versions cannot coexist in the same directory, we can&amp;rsquo;t guarantee a perfect hoisting. Similarly, because the &lt;code&gt;node_modules&lt;/code&gt; are deeply nested in a way that depend on the project dependencies, they cannot be shared from one project to the other.</source>
          <target state="translated">最後に、 &lt;code&gt;node_modules&lt;/code&gt; フォルダーの設計そのものは、希望するほど効率的にパッケージを重複排除することができないため、非現実的です。名前が同じでバージョンが異なる2つのパッケージを同じディレクトリに共存させることはできないため、完全なホイストを保証することはできません。同様に、 &lt;code&gt;node_modules&lt;/code&gt; は、プロジェクトの依存関係に依存する方法で深くネストされているため、プロジェクト間で共有することはできません。</target>
        </trans-unit>
        <trans-unit id="a2c10ae821ec3ca8831b6bd9218a7c743a31dfe3" translate="yes" xml:space="preserve">
          <source>First you will be asked to enter a new version to publish:</source>
          <target state="translated">最初に新しいバージョンを入力して公開します。</target>
        </trans-unit>
        <trans-unit id="15b2ad6af9505ba68112ae16e296f89cbf54941e" translate="yes" xml:space="preserve">
          <source>Follow &lt;a href=&quot;https://yarnpkg.com/blog/2016/11/24/offline-mirror/&quot;&gt;this blog post&lt;/a&gt; to configure an offline mirror.</source>
          <target state="translated">&lt;a href=&quot;https://yarnpkg.com/blog/2016/11/24/offline-mirror/&quot;&gt;このブログ投稿&lt;/a&gt;に従って、オフラインミラーを構成してください。</target>
        </trans-unit>
        <trans-unit id="3222b00d670058a83ebeddc7de5f80d4c0aa9c01" translate="yes" xml:space="preserve">
          <source>For a complete list of all the &lt;code&gt;package.json&lt;/code&gt; fields and more details about each of the above fields please see the &lt;a href=&quot;package-json&quot;&gt;&lt;code&gt;package.json&lt;/code&gt; documentation&lt;/a&gt;.</source>
          <target state="translated">すべての &lt;code&gt;package.json&lt;/code&gt; フィールドの完全なリストと、上記の各フィールドの詳細については、&lt;a href=&quot;package-json&quot;&gt; &lt;code&gt;package.json&lt;/code&gt; のドキュメント&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="9a2856f35337bd0e65f6322efbc436e0fc3620ba" translate="yes" xml:space="preserve">
          <source>For a full specification of how this versioning system works see the &lt;a href=&quot;https://github.com/npm/node-semver&quot;&gt;&lt;code&gt;node-semver&lt;/code&gt; README&lt;/a&gt;.</source>
          <target state="translated">このバージョン管理システムの動作の完全な仕様については、&lt;a href=&quot;https://github.com/npm/node-semver&quot;&gt; &lt;code&gt;node-semver&lt;/code&gt; READMEを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ee7d74c01e567d05e37a2ecd546c21ec783e2934" translate="yes" xml:space="preserve">
          <source>For backward compatibility with &lt;code&gt;npm&lt;/code&gt;, Yarn allows passing down &lt;code&gt;npm&lt;/code&gt; configuration via environment variables. For instance, the &lt;code&gt;--build-from-source&lt;/code&gt;&lt;code&gt;npm&lt;/code&gt; CLI flag becomes: &lt;code&gt;npm_config_build_from_source=true&lt;/code&gt;. For more information on configuring &lt;code&gt;npm&lt;/code&gt;, refer to the &lt;a href=&quot;https://docs.npmjs.com/misc/config&quot;&gt;npm-config&lt;/a&gt; page.</source>
          <target state="translated">&lt;code&gt;npm&lt;/code&gt; との下位互換性のために、Yarnでは環境変数を介して &lt;code&gt;npm&lt;/code&gt; 構成を渡すことができます。たとえば、 &lt;code&gt;--build-from-source&lt;/code&gt; &lt;code&gt;npm_config_build_from_source=true&lt;/code&gt; -from-source &lt;code&gt;npm&lt;/code&gt; CLIフラグはnpm_config_build_from_source = trueになります。 &lt;code&gt;npm&lt;/code&gt; の構成の詳細については、&lt;a href=&quot;https://docs.npmjs.com/misc/config&quot;&gt;npm-config&lt;/a&gt;ページを参照してください。</target>
        </trans-unit>
        <trans-unit id="239ee49d2ef28bf64532dccb110738c427b94b4f" translate="yes" xml:space="preserve">
          <source>For development, a package can be linked into another project. This is often useful to test out new features or when trying to debug an issue in a package that manifests itself in another project.</source>
          <target state="translated">開発では、パッケージを別のプロジェクトにリンクすることができます。これは、新機能をテストしたり、別のプロジェクトに現れたパッケージの問題をデバッグしようとするときに便利です。</target>
        </trans-unit>
        <trans-unit id="dae38107b5031df6a2e0db4f6ecca3b35e6b2ef3" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;yarn create react-app my-app&lt;/code&gt; is equivalent to:</source>
          <target state="translated">たとえば、 &lt;code&gt;yarn create react-app my-app&lt;/code&gt; は次と同等です。</target>
        </trans-unit>
        <trans-unit id="31427e841fe44514d470be6bb0897b71c18ccdcb" translate="yes" xml:space="preserve">
          <source>For example, if only INFO and MODERATE vulnerabilities were found, then the exit code will be &lt;code&gt;1 + 4 = 5&lt;/code&gt;</source>
          <target state="translated">たとえば、INFOとMODERATEの脆弱性のみが見つかった場合、終了コードは &lt;code&gt;1 + 4 = 5&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="16407bee64e35c102fe0ff39e0ab434b96a7b1b3" translate="yes" xml:space="preserve">
          <source>For example, if you had a &lt;strong&gt;stable&lt;/strong&gt; release channel and a &lt;strong&gt;canary&lt;/strong&gt; release channel, you could use tags as a way to allow the user to type:</source>
          <target state="translated">たとえば、&lt;strong&gt;安定した&lt;/strong&gt;リリースチャネルと&lt;strong&gt;カナリア&lt;/strong&gt;リリースチャネルがある場合、ユーザーが入力できるようにする方法としてタグを使用できます。</target>
        </trans-unit>
        <trans-unit id="1977b32cd448635a648c3d86b24376f485e1ae87" translate="yes" xml:space="preserve">
          <source>For example, if you have a bash script in your package, &lt;code&gt;scripts/test&lt;/code&gt;:</source>
          <target state="translated">たとえば、パッケージにbashスクリプトがある場合、 &lt;code&gt;scripts/test&lt;/code&gt; は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="da3bfd9a619cac96232a3b1e5befaa066212ffef" translate="yes" xml:space="preserve">
          <source>For example, say your &lt;code&gt;package.json&lt;/code&gt; has the following dependencies listed:</source>
          <target state="translated">たとえば、 &lt;code&gt;package.json&lt;/code&gt; に次の依存関係がリストされているとします。</target>
        </trans-unit>
        <trans-unit id="17ac796b1744338e2a14abc4eefe44935fec1f98" translate="yes" xml:space="preserve">
          <source>For example, starting with this package.json &lt;code&gt;package.json&lt;/code&gt;:</source>
          <target state="translated">たとえば、次のpackage.json &lt;code&gt;package.json&lt;/code&gt; から始めます。</target>
        </trans-unit>
        <trans-unit id="27931005c81cf238997b2cb62c93199d353541eb" translate="yes" xml:space="preserve">
          <source>For example, the range &lt;code&gt;&amp;gt;=3.1.4-beta.2&lt;/code&gt; would match &lt;code&gt;3.1.4-beta.2&lt;/code&gt; or &lt;code&gt;3.1.4-beta.12&lt;/code&gt;, but would &lt;em&gt;not&lt;/em&gt; match &lt;code&gt;3.1.5-beta.1&lt;/code&gt; even though it is &lt;em&gt;technically&lt;/em&gt; &amp;ldquo;greater than or equal to&amp;rdquo; (&lt;code&gt;&amp;gt;=&lt;/code&gt;) the &lt;code&gt;3.1.4-beta.2&lt;/code&gt; version.</source>
          <target state="translated">たとえば、 &lt;code&gt;&amp;gt;=3.1.4-beta.2&lt;/code&gt; 範囲は &lt;code&gt;3.1.4-beta.2&lt;/code&gt; または &lt;code&gt;3.1.4-beta.12&lt;/code&gt; に一致しますが、&lt;em&gt;技術的には&lt;/em&gt;「より優れていますが、 &lt;code&gt;3.1.5-beta.1&lt;/code&gt; に&lt;em&gt;は&lt;/em&gt;一致し&lt;em&gt;ません。&lt;/em&gt; &lt;code&gt;3.1.4-beta.2&lt;/code&gt; バージョン以上（ &lt;code&gt;&amp;gt;=&lt;/code&gt; ）。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="83a50fc74ade42a2aa642e96767cd5fee451e6d6" translate="yes" xml:space="preserve">
          <source>For more details see &lt;a href=&quot;https://codefresh.io/docs/docs/learn-by-example/nodejs/react/&quot;&gt;a complete pipeline with Yarn&lt;/a&gt;.</source>
          <target state="translated">詳細については&lt;a href=&quot;https://codefresh.io/docs/docs/learn-by-example/nodejs/react/&quot;&gt;、Yarn&lt;/a&gt;を使用した完全なパイプラインを参照してください。</target>
        </trans-unit>
        <trans-unit id="4e307ba5f853bca46922a6a4fce963d9debb7c2f" translate="yes" xml:space="preserve">
          <source>For more information, check out the &lt;a href=&quot;https://yarnpkg.com/blog/2017/05/12/introducing-yarn/&quot;&gt;relevant blog entry&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://yarnpkg.com/blog/2017/05/12/introducing-yarn/&quot;&gt;関連するブログエントリを&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="d78e944be7850bba0391dcfed39a7c6ddd28f5b9" translate="yes" xml:space="preserve">
          <source>For scripting purposes, &lt;code&gt;yarn audit&lt;/code&gt; also supports the &lt;code&gt;--json&lt;/code&gt; flag, which will output the details for the issues in JSON-lines format (one JSON object per line) instead of plain text.</source>
          <target state="translated">スクリプティングの目的で、 &lt;code&gt;yarn audit&lt;/code&gt; は &lt;code&gt;--json&lt;/code&gt; フラグもサポートします。これは、プレーンテキストではなく、JSON-lines形式（1行に1つのJSONオブジェクト）で問題の詳細を出力します。</target>
        </trans-unit>
        <trans-unit id="b09f1f5d29861c9c46d750b633b7613424d3155e" translate="yes" xml:space="preserve">
          <source>For the example &lt;code&gt;package.json&lt;/code&gt; shown previously, you should see the following output when checking one of the dependencies:</source>
          <target state="translated">例として &lt;code&gt;package.json&lt;/code&gt; 前に示したpackage.jsonでは、依存関係の1つを確認すると、次の出力が表示されます。</target>
        </trans-unit>
        <trans-unit id="3e2dbc2c350a5bc6979fd40f140f7444f7a2a057" translate="yes" xml:space="preserve">
          <source>For the vast majority of packages it is considered a bad practice to have global dependencies because they are implicit. It is much better to add all of your dependencies locally so that they are explicit and anyone else using your project gets the same set of dependencies.</source>
          <target state="translated">大多数のパッケージでは、グローバルな依存関係を持つことは、暗黙のうちにできてしまうため、よくないことだと考えられています。すべての依存関係をローカルに追加して明示的にし、プロジェクトを使っている他の誰もが同じ依存関係を得られるようにする方がずっと良いでしょう。</target>
        </trans-unit>
        <trans-unit id="314dd5966ab6cea20a84d47404fdff9c75654851" translate="yes" xml:space="preserve">
          <source>For these reasons, it is highly recommended that you install Yarn through the installation method best suited to your operating system.</source>
          <target state="translated">これらの理由から、お使いのオペレーティングシステムに最適なインストール方法でヤーンをインストールすることを強くお勧めします。</target>
        </trans-unit>
        <trans-unit id="53c7632e0712d223ae9f634b899996d1d98c7fc5" translate="yes" xml:space="preserve">
          <source>Forcing a re-download of all packages: &lt;code&gt;yarn install --force&lt;/code&gt;</source>
          <target state="translated">すべてのパッケージの再ダウンロードを強制する： &lt;code&gt;yarn install --force&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="96c8b6c16fb6955888393fd35ef77245c7a15fe2" translate="yes" xml:space="preserve">
          <source>Framework and library authors should also check &lt;code&gt;yarn.lock&lt;/code&gt; into source control. Don&amp;rsquo;t worry about publishing the &lt;code&gt;yarn.lock&lt;/code&gt; file as it won&amp;rsquo;t have any effect on users of the library.</source>
          <target state="translated">フレームワークとライブラリの作成者は、ソース管理に &lt;code&gt;yarn.lock&lt;/code&gt; もチェックする必要があります。ライブラリのユーザーには何の影響もないので、 &lt;code&gt;yarn.lock&lt;/code&gt; ファイルの公開については心配しないでください。</target>
        </trans-unit>
        <trans-unit id="ae68ab0ee29f7c88b3b47afea6094bb14393ba63" translate="yes" xml:space="preserve">
          <source>From now on each time you&amp;rsquo;ll run &lt;code&gt;yarn install&lt;/code&gt; Yarn will create a single file named &lt;code&gt;.pnp.js&lt;/code&gt; instead of the &lt;code&gt;node_modules&lt;/code&gt; megafolder. You can try it right now by running &lt;code&gt;yarn --pnp&lt;/code&gt; in your project, which will enable the settings and run the install in the same pass!</source>
          <target state="translated">今後、 &lt;code&gt;yarn install&lt;/code&gt; を実行する &lt;code&gt;.pnp.js&lt;/code&gt; に、 &lt;code&gt;node_modules&lt;/code&gt; はnode_modulesメガフォルダーではなく、.pnp.jsという名前の単一のファイルを作成します。プロジェクトで &lt;code&gt;yarn --pnp&lt;/code&gt; を実行することで、今すぐ試すことができます。これにより、設定が有効になり、同じパスでインストールが実行されます。</target>
        </trans-unit>
        <trans-unit id="3d5f9bd225116af5c765e5f0ee6b48aaa2ccce8a" translate="yes" xml:space="preserve">
          <source>GNU General Public License 3.0</source>
          <target state="translated">GNU一般公衆ライセンス 3.0</target>
        </trans-unit>
        <trans-unit id="64fe1dce55b32cb493fdb1dc3b063e2c83d757c1" translate="yes" xml:space="preserve">
          <source>Generates &lt;code&gt;yarn.lock&lt;/code&gt; from an npm &lt;code&gt;package-lock.json&lt;/code&gt; file in the same location or an existing npm-installed &lt;code&gt;node_modules&lt;/code&gt; folder.</source>
          <target state="translated">同じ場所にあるnpm &lt;code&gt;package-lock.json&lt;/code&gt; ファイルまたは既存のnpmがインストールされたファイルから、 &lt;code&gt;yarn.lock&lt;/code&gt; を生成します。 &lt;code&gt;node_modules&lt;/code&gt; のフォルダ。</target>
        </trans-unit>
        <trans-unit id="03ecd03ba224f40c53e740678bce3773bdc98e98" translate="yes" xml:space="preserve">
          <source>Generates a lock file entry.</source>
          <target state="translated">ロックファイルエントリを生成します。</target>
        </trans-unit>
        <trans-unit id="a29aaefba1f99e97c9400a873f5c70e93126e37b" translate="yes" xml:space="preserve">
          <source>Gentoo Linux</source>
          <target state="translated">ジェントゥーリナックス</target>
        </trans-unit>
        <trans-unit id="010b85ad56b34c34c7c2a3b2436c740e30428ed5" translate="yes" xml:space="preserve">
          <source>Getting Started</source>
          <target state="translated">はじめに</target>
        </trans-unit>
        <trans-unit id="add6560c0b3c8a675d777a7bb44e230b91804365" translate="yes" xml:space="preserve">
          <source>Getting started with Plug&amp;rsquo;n&amp;rsquo;Play isn&amp;rsquo;t difficult - at its basis it just involves enabling one tiny settings in your &lt;code&gt;package.json&lt;/code&gt; file: &lt;code&gt;installConfig.pnp&lt;/code&gt;.</source>
          <target state="translated">Plug'n'Playを使い始めるのは難しくありません。基本的には、 &lt;code&gt;package.json&lt;/code&gt; ファイルで小さな設定を1つ有効にするだけです &lt;code&gt;installConfig.pnp&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4165b7286c0a18f4938d0bc2ec4e655a5e27bc93" translate="yes" xml:space="preserve">
          <source>Git tags</source>
          <target state="translated">Git タグ</target>
        </trans-unit>
        <trans-unit id="5442e2b64fa09764b9f593867e59a97292c84059" translate="yes" xml:space="preserve">
          <source>GitHub</source>
          <target state="translated">GitHub</target>
        </trans-unit>
        <trans-unit id="9a9b09d909186a1ea088b925aea4172596fea7db" translate="yes" xml:space="preserve">
          <source>GitLab</source>
          <target state="translated">GitLab</target>
        </trans-unit>
        <trans-unit id="8600139c543048af1c063c11de812acaea138ee7" translate="yes" xml:space="preserve">
          <source>Good documentation is defined by giving users all the knowledge they&amp;rsquo;ll need to get started with your project and continued use of it. Think about the questions someone who knows nothing about your project will have. Describe things accurately and as detailed as necessary, but also try to keep it brief and easy to read. &lt;strong&gt;Projects with high quality documentation are far more successful.&lt;/strong&gt;</source>
          <target state="translated">優れたドキュメントは、プロジェクトを開始して継続的に使用するために必要なすべての知識をユーザーに提供することによって定義されます。あなたのプロジェクトについて何も知らない誰かが持つであろう質問について考えてください。必要に応じて正確かつ詳細に説明しますが、簡潔で読みやすいものにしてください。&lt;strong&gt;高品質のドキュメントを備えたプロジェクトは、はるかに成功しています。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="742cbd11e2025266cf355f44e8869df210ca512c" translate="yes" xml:space="preserve">
          <source>Having a peer dependency means that your package needs a dependency that is the same exact dependency as the person installing your package. This is useful for packages like &lt;code&gt;react&lt;/code&gt; that need to have a single copy of &lt;code&gt;react-dom&lt;/code&gt; that is also used by the person installing it.</source>
          <target state="translated">ピア依存関係があるということは、パッケージをインストールする人とまったく同じ依存関係がパッケージに必要であることを意味します。これは、 &lt;code&gt;react&lt;/code&gt; のような、単一のコピーが必要なパッケージに役立ちます。 &lt;code&gt;react-dom&lt;/code&gt; 、それをインストールする人も使用するreact-domの。</target>
        </trans-unit>
        <trans-unit id="881a24769637088e3b5ba797168c680280022c1f" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example &lt;code&gt;.gitlab-ci.yml&lt;/code&gt; file using yarn to run a testing suite. Just save this file to the root of your project and GitLab&amp;rsquo;s CI will pick up the jobs.</source>
          <target state="translated">これが &lt;code&gt;.gitlab-ci.yml&lt;/code&gt; の例です yarnを使用してテストスイートを実行するファイルの。このファイルをプロジェクトのルートに保存するだけで、GitLabのCIがジョブを取得します。</target>
        </trans-unit>
        <trans-unit id="89272e5a7555126af15a902aa64d60ed726c932e" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of running the command inside of a directory named &lt;code&gt;testdir&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;testdir&lt;/code&gt; という名前のディレクトリ内でコマンドを実行する例を次に示します。</target>
        </trans-unit>
        <trans-unit id="b24cd4dd561003744f6839bba6f0b01af01e9c66" translate="yes" xml:space="preserve">
          <source>Homebrew</source>
          <target state="translated">Homebrew</target>
        </trans-unit>
        <trans-unit id="371d7af71c8811f27ae31a4920189d014ff2e41a" translate="yes" xml:space="preserve">
          <source>How do I use Yarn? There are basic workflows for both creating and consuming Yarn packages that will help you get productive quickly.</source>
          <target state="translated">Yarnはどのように使うのですか?Yarnのパッケージを作成したり、消費したりするための基本的なワークフローがありますので、すぐに生産性を上げることができます。</target>
        </trans-unit>
        <trans-unit id="5c1abd5a45eccc0f7c06b4ac028674dd712dc4cc" translate="yes" xml:space="preserve">
          <source>How does it compare to Lerna?</source>
          <target state="translated">レルナと比べてどうですか?</target>
        </trans-unit>
        <trans-unit id="5a3af79b01e7f107ad0671c6788a469b93f8e1ad" translate="yes" xml:space="preserve">
          <source>How to use it?</source>
          <target state="translated">どうやって使うの?</target>
        </trans-unit>
        <trans-unit id="d7ae097f772ee5572132d8de2d4b3f6e55b12552" translate="yes" xml:space="preserve">
          <source>Hyphen Ranges</source>
          <target state="translated">ハイパーの範囲</target>
        </trans-unit>
        <trans-unit id="ac110d7ab3b9bf659c7fbc25203d3d581e62a499" translate="yes" xml:space="preserve">
          <source>Hyphen ranges (e.g. &lt;code&gt;2.0.0 - 3.1.4&lt;/code&gt;) specify an &lt;em&gt;inclusive&lt;/em&gt; set. If part of the version is left out (e.g. &lt;code&gt;0.4&lt;/code&gt; or &lt;code&gt;2&lt;/code&gt;) then they are filled in with zeroes.</source>
          <target state="translated">ハイフンの範囲（たとえば &lt;code&gt;2.0.0 - 3.1.4&lt;/code&gt; ）は、&lt;em&gt;包括的な&lt;/em&gt;セットを指定します。バージョンの一部が省略されている場合（例： &lt;code&gt;0.4&lt;/code&gt; または &lt;code&gt;2&lt;/code&gt; ）、それらはゼロで埋められます。</target>
        </trans-unit>
        <trans-unit id="2e1a657b369a9e78b14b533a7c982ef043c15369" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; is not installed, scoop will give you a suggestion to install it. Example:</source>
          <target state="translated">&lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js&lt;/a&gt;がインストールされていない場合、scoopはそれをインストールするように提案します。例：</target>
        </trans-unit>
        <trans-unit id="d039cf1fb8db111807bb8a2542732ec094f04534" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;yarn autoclean --force&lt;/code&gt; is run</source>
          <target state="translated">&lt;code&gt;yarn autoclean --force&lt;/code&gt; が実行された場合</target>
        </trans-unit>
        <trans-unit id="ae86a66e2d334275f039e78fc8407b052c25fb90" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;yarn.lock&lt;/code&gt; is absent, or is &lt;em&gt;not&lt;/em&gt; enough to satisfy all the dependencies listed in &lt;code&gt;package.json&lt;/code&gt; (for example, if you manually add a dependency to &lt;code&gt;package.json&lt;/code&gt;), Yarn looks for the newest versions available that satisfy the constraints in &lt;code&gt;package.json&lt;/code&gt;. The results are written to &lt;code&gt;yarn.lock&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;yarn.lock&lt;/code&gt; が存在しない、またはある&lt;em&gt;ない&lt;/em&gt;に記載されているすべての依存関係を満たすのに十分な &lt;code&gt;package.json&lt;/code&gt; を（たとえば、あなたが手動に依存関係を追加した場合 &lt;code&gt;package.json&lt;/code&gt; ）、糸は内を満たすには制約が利用可能、最新のバージョンを探します &lt;code&gt;package.json&lt;/code&gt; 。結果は、 &lt;code&gt;yarn.lock&lt;/code&gt; に書き込まれます。。</target>
        </trans-unit>
        <trans-unit id="11471e8d095b97dd23159af228f918c10b60640b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;yarn.lock&lt;/code&gt; is present and is enough to satisfy all the dependencies listed in &lt;code&gt;package.json&lt;/code&gt;, the exact versions recorded in &lt;code&gt;yarn.lock&lt;/code&gt; are installed, and &lt;code&gt;yarn.lock&lt;/code&gt; will be unchanged. Yarn will not check for newer versions.</source>
          <target state="translated">場合 &lt;code&gt;yarn.lock&lt;/code&gt; が存在し、中に記載されているすべての依存関係を満たすのに十分である &lt;code&gt;package.json&lt;/code&gt; を、に記録正確なバージョン &lt;code&gt;yarn.lock&lt;/code&gt; がインストールされている、と &lt;code&gt;yarn.lock&lt;/code&gt; は変更されません。糸は新しいバージョンをチェックしません。</target>
        </trans-unit>
        <trans-unit id="ed10fe6e2603ef3232add019c5807608f6b7bd4b" translate="yes" xml:space="preserve">
          <source>If Yarn is not found in your PATH, follow these steps to add it and allow it to be run from anywhere.</source>
          <target state="translated">もしYarnがPATHにない場合は、以下の手順で追加し、どこからでも実行できるようにしてください。</target>
        </trans-unit>
        <trans-unit id="658c37cb54d9669ccd248e7716fa65aacb2998e3" translate="yes" xml:space="preserve">
          <source>If no such file exists, using the versions found inside &lt;code&gt;node_modules&lt;/code&gt; according to normal &lt;code&gt;require.resolve()&lt;/code&gt; resolution rules.</source>
          <target state="translated">そのようなファイルが存在しない場合は、通常の &lt;code&gt;require.resolve()&lt;/code&gt; に従って &lt;code&gt;node_modules&lt;/code&gt; 内にあるバージョンを使用します解決規則。</target>
        </trans-unit>
        <trans-unit id="5410ee54b5df3068af2406ddd8e1880a6ee3cc67" translate="yes" xml:space="preserve">
          <source>If part of a version is left out, it is assumed to be an x-range.</source>
          <target state="translated">バージョンの一部が抜けている場合は、xレンジとします。</target>
        </trans-unit>
        <trans-unit id="8b52f313d1215ba1d06c6f903c4787a8fd32c26e" translate="yes" xml:space="preserve">
          <source>If part of the version is left out, the missing parts are filled in with zeroes. However, they will still allow for that value to be changed.</source>
          <target state="translated">バージョンの一部が抜けている場合、抜けている部分はゼロで埋められます。しかし、その値を変更することは可能です。</target>
        </trans-unit>
        <trans-unit id="1304750027e0e2e3d638ae599c57ae6253b6aeea" translate="yes" xml:space="preserve">
          <source>If performed on an organization name, will return a list of existing teams under that organization. If performed on a team, it will instead return a list of all users belonging to that particular team.</source>
          <target state="translated">場合は、組織名で実行すると、その組織の下にある既存のチームのリストを返します。チームで実行された場合、それは代わりに、その特定のチームに属するすべてのユーザーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="7f5d6e0310dbd9b6301f0b332d03c1f629525e6e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;private&lt;/code&gt; flag is set, the &lt;code&gt;private&lt;/code&gt; key will be automatically set to &lt;code&gt;true&lt;/code&gt; and you still complete the rest of the init process.</source>
          <target state="translated">場合は &lt;code&gt;private&lt;/code&gt; フラグが設定され、 &lt;code&gt;private&lt;/code&gt; キーは自動的に設定され &lt;code&gt;true&lt;/code&gt; とあなたはまだinitプロセスの残りの部分を完了します。</target>
        </trans-unit>
        <trans-unit id="d266a9d49661d3f5f285c8fc1452366a96320b0f" translate="yes" xml:space="preserve">
          <source>If the optional field argument is provided, then only that part of the tree is returned.</source>
          <target state="translated">オプションのフィールド引数が与えられた場合は、ツリーのその部分のみが返されます。</target>
        </trans-unit>
        <trans-unit id="b5cf9368f111cd3f3ae692ff9d09041e5f0fa7fb" translate="yes" xml:space="preserve">
          <source>If the specified field is in turn a nested object, the child tree is returned:</source>
          <target state="translated">指定したフィールドが入れ子になっている場合は、子ツリーが返されます。</target>
        </trans-unit>
        <trans-unit id="4bf34c4323b5d904c465ef9fe9d72f99776977fe" translate="yes" xml:space="preserve">
          <source>If using &lt;code&gt;nvm&lt;/code&gt; you can avoid the &lt;code&gt;node&lt;/code&gt; installation by doing:</source>
          <target state="translated">&lt;code&gt;nvm&lt;/code&gt; を使用している場合は、次のようにして &lt;code&gt;node&lt;/code&gt; インストールを回避できます。</target>
        </trans-unit>
        <trans-unit id="ed11571647ab7e5fec70cc4a881348d264fa1dc0" translate="yes" xml:space="preserve">
          <source>If you already have an existing &lt;code&gt;package.json&lt;/code&gt; file, then it will use the file&amp;rsquo;s entries as defaults.</source>
          <target state="translated">既に既存の &lt;code&gt;package.json&lt;/code&gt; ファイルがある場合は、ファイルのエントリがデフォルトとして使用されます。</target>
        </trans-unit>
        <trans-unit id="9ef46568b660fe88ce751d57fc99a4c0f28c2bde" translate="yes" xml:space="preserve">
          <source>If you are &lt;a href=&quot;managing-dependencies#toc-adding-a-dependency&quot;&gt;adding dependencies&lt;/a&gt; for your project, then those dependencies are automatically installed during that process.</source>
          <target state="translated">プロジェクトの&lt;a href=&quot;managing-dependencies#toc-adding-a-dependency&quot;&gt;依存関係&lt;/a&gt;を追加する場合、それらの依存関係はそのプロセス中に自動的にインストールされます。</target>
        </trans-unit>
        <trans-unit id="c65aa4b0a868f0c611869bba2c37414270ca50bc" translate="yes" xml:space="preserve">
          <source>If you are trying to use a CLI tool that has a &lt;code&gt;bin&lt;/code&gt; you can access these in your &lt;code&gt;./node_modules/.bin&lt;/code&gt; directory. You can also use the &lt;a href=&quot;global&quot;&gt;&lt;code&gt;global&lt;/code&gt;&lt;/a&gt; command:</source>
          <target state="translated">&lt;code&gt;bin&lt;/code&gt; が含まれているCLIツールを使用する場合は、。 &lt;code&gt;./node_modules/.bin&lt;/code&gt; ディレクトリーにあるこれらにアクセスできます。&lt;a href=&quot;global&quot;&gt; &lt;code&gt;global&lt;/code&gt; &lt;/a&gt;使用することもできますコマンドを。</target>
        </trans-unit>
        <trans-unit id="8ef4d9d24a42e3baad0d1075e9b55285ec5507ba" translate="yes" xml:space="preserve">
          <source>If you are used to using npm you might be expecting to use &lt;code&gt;--save&lt;/code&gt; or &lt;code&gt;--save-dev&lt;/code&gt;. These have been replaced by &lt;code&gt;yarn add&lt;/code&gt; and &lt;code&gt;yarn add --dev&lt;/code&gt;. For more information, see &lt;a href=&quot;add&quot;&gt;the &lt;code&gt;yarn add&lt;/code&gt; documentation&lt;/a&gt;.</source>
          <target state="translated">npmの使用に慣れている場合は、 &lt;code&gt;--save-dev&lt;/code&gt; &lt;code&gt;--save&lt;/code&gt; または--save-devの使用を期待している可能性があります。これらは、 &lt;code&gt;yarn add&lt;/code&gt; と &lt;code&gt;yarn add --dev&lt;/code&gt; に置き換えられました。詳細については&lt;a href=&quot;add&quot;&gt;、 &lt;code&gt;yarn add&lt;/code&gt; のドキュメントを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c72922539c80972df964979c48d443c87a059672" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;https://pages.codeship.com/docker&quot;&gt;Codeship Pro&lt;/a&gt; (with Docker), it is recommended to install Yarn via &lt;a href=&quot;install#linux-tab&quot;&gt;our Debian/Ubuntu package&lt;/a&gt; instead.</source>
          <target state="translated">&lt;a href=&quot;https://pages.codeship.com/docker&quot;&gt;Codeship Pro&lt;/a&gt;（Docker付き）を使用している場合は、代わりに&lt;a href=&quot;install#linux-tab&quot;&gt;、Debian / Ubuntuパッケージを&lt;/a&gt;介して Yarnをインストールすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="bb78236a70ce626a05073aa5db1a0c75f6f6d4b5" translate="yes" xml:space="preserve">
          <source>If you are using an &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; file right now, be aware that you may end up with a different set of dependencies. Yarn does not support npm shrinkwrap files as they don&amp;rsquo;t have enough information in them to power Yarn&amp;rsquo;s more deterministic algorithm. If you are using a shrinkwrap file it may be easier to convert everyone working on the project to use Yarn at the same time. Simply remove your existing &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; file and check in the newly created &lt;code&gt;yarn.lock&lt;/code&gt; file.</source>
          <target state="translated">現在 &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; ファイルを使用している場合は、異なる依存関係のセットになる可能性があることに注意してください。Yarnは、npmのシュリンクラップファイルをサポートしていません。これは、Yarnのより確定的なアルゴリズムを強化するのに十分な情報が含まれていないためです。シュリンクラップファイルを使用している場合、プロジェクトで作業している全員を同時にYarnを使用するように変換する方が簡単な場合があります。既存の &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; ファイルを削除し、新しく作成されたyarn.lockファイルをチェックインする &lt;code&gt;yarn.lock&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ca2c256d5d2468f26cbd3e932b9390e5300caa8d" translate="yes" xml:space="preserve">
          <source>If you are using another OS or one of the other options specific to your OS will not work for you, there are a couple of alternatives. You will need to &lt;a href=&quot;https://nodejs.org/&quot;&gt;install Node.js&lt;/a&gt; if you don&amp;rsquo;t already have it installed.</source>
          <target state="translated">別のOSを使用している場合、またはOSに固有のその他のオプションの1つが機能しない場合は、いくつかの代替策があります。&lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.jsを&lt;/a&gt;まだインストールしていない場合は、インストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="588c0e99fe045e3f088de4c7ea478237215904be" translate="yes" xml:space="preserve">
          <source>If you discover the autoclean process is deleting files that are needed for a package to work properly, then you should remove the corresponding entry from the &lt;code&gt;.yarnclean&lt;/code&gt; file.</source>
          <target state="translated">autocleanプロセスが、パッケージが正しく機能するために必要なファイルを削除していることを発見した場合は、対応するエントリを &lt;code&gt;.yarnclean&lt;/code&gt; から削除する必要があります。ファイルます。</target>
        </trans-unit>
        <trans-unit id="6c6768e0cfdd4fa726922dcb497b2483d7f11c6f" translate="yes" xml:space="preserve">
          <source>If you do not already have Node.js installed, you should also configure &lt;a href=&quot;https://nodejs.org/en/download/package-manager/#enterprise-linux-and-fedora&quot;&gt;the NodeSource repository&lt;/a&gt;:</source>
          <target state="translated">Node.jsをまだインストールしていない場合は&lt;a href=&quot;https://nodejs.org/en/download/package-manager/#enterprise-linux-and-fedora&quot;&gt;、NodeSourceリポジトリー&lt;/a&gt;も構成する必要があります。</target>
        </trans-unit>
        <trans-unit id="36475867dd98cf6a2e1718366a88e582924ad531" translate="yes" xml:space="preserve">
          <source>If you do not specify a script to the &lt;code&gt;yarn run&lt;/code&gt; command, the &lt;code&gt;run&lt;/code&gt; command will list all of the scripts available to run for a package.</source>
          <target state="translated">&lt;code&gt;yarn run&lt;/code&gt; コマンドにスクリプトを指定しない場合、 &lt;code&gt;run&lt;/code&gt; コマンドは、パッケージで実行できるすべてのスクリプトをリストします。</target>
        </trans-unit>
        <trans-unit id="76b625e8aef7004aa1261516e995f6bdbbc0b743" translate="yes" xml:space="preserve">
          <source>If you do not want your package published in a package manager, set this to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">パッケージマネージャーでパッケージを公開したくない場合は、これを &lt;code&gt;true&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="3058870db6626f970f50d825a41b90560bee2305" translate="yes" xml:space="preserve">
          <source>If you get an error, please check for an existing issue or report it to the &lt;a href=&quot;https://github.com/yarnpkg/yarn/issues&quot;&gt;Yarn issue tracker&lt;/a&gt;.</source>
          <target state="translated">エラーが発生した場合は、既存の問題を確認するか、&lt;a href=&quot;https://github.com/yarnpkg/yarn/issues&quot;&gt;Yarnの問題トラッカーに&lt;/a&gt;報告してください。</target>
        </trans-unit>
        <trans-unit id="33b48145a15406cd9af33434b691d857826b25fc" translate="yes" xml:space="preserve">
          <source>If you have defined a &lt;code&gt;scripts&lt;/code&gt; object in your package, this command will run the specified &lt;code&gt;[script]&lt;/code&gt;. For example:</source>
          <target state="translated">パッケージに &lt;code&gt;scripts&lt;/code&gt; オブジェクトを定義している場合、このコマンドは指定された &lt;code&gt;[script]&lt;/code&gt; を実行します。例えば：</target>
        </trans-unit>
        <trans-unit id="eb73dd67e94c1788c3faec118c3865dd417828df" translate="yes" xml:space="preserve">
          <source>If you have defined a &lt;code&gt;scripts&lt;/code&gt; object in your package, this command will run the specified &lt;code&gt;test&lt;/code&gt; script.</source>
          <target state="translated">パッケージに &lt;code&gt;scripts&lt;/code&gt; オブジェクトを定義している場合、このコマンドは指定された &lt;code&gt;test&lt;/code&gt; スクリプトを実行します。</target>
        </trans-unit>
        <trans-unit id="cf6f937abe8df4640cddb76dbe7f9cbc91ae6c7d" translate="yes" xml:space="preserve">
          <source>If you have just checked out a package from &lt;a href=&quot;version-control&quot;&gt;version control&lt;/a&gt;, you will need to install those dependencies.</source>
          <target state="translated">&lt;a href=&quot;version-control&quot;&gt;バージョン管理&lt;/a&gt;からパッケージをチェックアウトしたばかりの場合は、それらの依存関係をインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="ee0d2a72453b6ec0fa13677ed529c66d983e086e" translate="yes" xml:space="preserve">
          <source>If you have man pages associated with your project, add them here.</source>
          <target state="translated">あなたのプロジェクトに関連するマンページがあれば、ここに追加してください。</target>
        </trans-unit>
        <trans-unit id="328ecb048cb1f007f16ee777c7038dfc3f9ed304" translate="yes" xml:space="preserve">
          <source>If you have used a package manager like npm previously, you may be looking for how to add global dependencies.</source>
          <target state="translated">以前に npm のようなパッケージマネージャを使ったことがある人は、グローバルな依存関係を追加する方法を探しているかもしれません。</target>
        </trans-unit>
        <trans-unit id="4e520f1818fffe33277dd6c6b49057a5d283b9a2" translate="yes" xml:space="preserve">
          <source>If you haven&amp;rsquo;t already, you&amp;rsquo;ll first need to &lt;a href=&quot;https://www.npmjs.com/signup&quot;&gt;create an npm account&lt;/a&gt;. Once you&amp;rsquo;ve done that you can setup your username and email in Yarn.</source>
          <target state="translated">まだ&lt;a href=&quot;https://www.npmjs.com/signup&quot;&gt;作成し&lt;/a&gt;ていない場合は、最初にnpmアカウントを作成する必要があります。完了したら、Yarnでユーザー名とメールアドレスを設定できます。</target>
        </trans-unit>
        <trans-unit id="33e88510e336b55bcba19e37f9d61945532e4e5f" translate="yes" xml:space="preserve">
          <source>If you need reproducible dependencies, which is usually the case with the continuous integration systems, you should pass &lt;code&gt;--frozen-lockfile&lt;/code&gt; flag.</source>
          <target state="translated">通常、継続的インテグレーションシステムの場合のように、再現可能な依存関係が必要な場合は、 &lt;code&gt;--frozen-lockfile&lt;/code&gt; フラグを渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="377a02aa23ddc3dec98d81f6969e81b9e377031c" translate="yes" xml:space="preserve">
          <source>If you run &lt;code&gt;yarn version&lt;/code&gt; within a Git repository an &lt;a href=&quot;https://git-scm.com/book/en/v2/Git-Basics-Tagging&quot;&gt;annotated Git tag&lt;/a&gt; will be created by default following the format &lt;code&gt;v0.0.0&lt;/code&gt;.</source>
          <target state="translated">Gitリポジトリ内で &lt;code&gt;yarn version&lt;/code&gt; を実行すると、&lt;a href=&quot;https://git-scm.com/book/en/v2/Git-Basics-Tagging&quot;&gt;注釈付きのGitタグ&lt;/a&gt;がデフォルトで &lt;code&gt;v0.0.0&lt;/code&gt; という形式で作成されます。</target>
        </trans-unit>
        <trans-unit id="6dcd9af2b5ffff61df45481a37ed7984173c72fd" translate="yes" xml:space="preserve">
          <source>If you use &lt;a href=&quot;https://github.com/creationix/nvm&quot;&gt;nvm&lt;/a&gt; or similar, you should ensure that your &lt;code&gt;PATH&lt;/code&gt; lists nvm&amp;rsquo;s shims before the version of Node.js installed by Homebrew.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/creationix/nvm&quot;&gt;nvm&lt;/a&gt;または類似のものを使用する場合、HomebrewによってインストールされたNode.jsのバージョンの前に、 &lt;code&gt;PATH&lt;/code&gt; がnvmのシムをリストすることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="4a816b46d47cced43c81b4fc821fc1bcd10c0bfa" translate="yes" xml:space="preserve">
          <source>If you use the installer you will first need to install &lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js&lt;/a&gt;.</source>
          <target state="translated">インストーラーを使用する場合は、最初に&lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js&lt;/a&gt;をインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="112728d557f7bfc77764572820d0fe98820963e7" translate="yes" xml:space="preserve">
          <source>If you want more options, you can get &lt;a href=&quot;https://choosealicense.com/licenses/&quot;&gt;a more complete list here&lt;/a&gt;.</source>
          <target state="translated">さらにオプションが必要な場合は&lt;a href=&quot;https://choosealicense.com/licenses/&quot;&gt;、ここでより完全なリストを&lt;/a&gt;取得できます。</target>
        </trans-unit>
        <trans-unit id="5411abad8fa9af8a1bd7eee848873fed11c1b49c" translate="yes" xml:space="preserve">
          <source>If you want to ensure &lt;code&gt;yarn.lock&lt;/code&gt; is not updated, use &lt;code&gt;--frozen-lockfile&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;yarn.lock&lt;/code&gt; が更新されないようにするには、 &lt;code&gt;--frozen-lockfile&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="7ed02176fb3eff915d2292db8759ffaad1b426c6" translate="yes" xml:space="preserve">
          <source>If you want to override this command, you can do so by defining your own &lt;code&gt;&quot;env&quot;&lt;/code&gt; script in &lt;code&gt;package.json&lt;/code&gt;.</source>
          <target state="translated">このコマンドを上書きしたい場合は、 &lt;code&gt;package.json&lt;/code&gt; で独自の &lt;code&gt;&quot;env&quot;&lt;/code&gt; スクリプトを定義することで実行できます。。</target>
        </trans-unit>
        <trans-unit id="c562c96ff1198a6eacab849db52c4895b81d49ac" translate="yes" xml:space="preserve">
          <source>If you want to remove a package:</source>
          <target state="translated">パッケージを削除したい場合</target>
        </trans-unit>
        <trans-unit id="8f828478610951bcfc9a1e502dc53a1de60aa342" translate="yes" xml:space="preserve">
          <source>If you want to try Yarn out on your existing npm project, just try running:</source>
          <target state="translated">既存の npm プロジェクトで Yarn を試したい場合は、実行してみてください。</target>
        </trans-unit>
        <trans-unit id="b589adaef214d5cf57a53fdc4d3e2c4d354bafec" translate="yes" xml:space="preserve">
          <source>If you want to use another package, you first need to add it as a dependency. In order to do that you should run:</source>
          <target state="translated">他のパッケージを使いたい場合は、まずそのパッケージを依存関係として追加する必要があります。そのためには</target>
        </trans-unit>
        <trans-unit id="8a7e7aad02cdb49785c9910c16e49cc80e579019" translate="yes" xml:space="preserve">
          <source>If you would like to stop git commit hooks from running, you can disable them using &lt;code&gt;version-commit-hooks&lt;/code&gt;:</source>
          <target state="translated">git commitフックの実行を停止したい場合は、 &lt;code&gt;version-commit-hooks&lt;/code&gt; を使用して無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="17ef3e1925a20911867c89210f63d2c82296bc90" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re only making changes to a single workspace, use &lt;a href=&quot;https://yarnpkg.com/blog/2018/05/18/focused-workspaces&quot;&gt;&amp;ndash;focus&lt;/a&gt; to quickly install sibling dependencies from the registry rather than building all of them from scratch.</source>
          <target state="translated">単一のワークスペースにのみ変更を加える場合は、&lt;a href=&quot;https://yarnpkg.com/blog/2018/05/18/focused-workspaces&quot;&gt;-focus&lt;/a&gt;を使用して、兄弟依存関係をすべてゼロから構築するのではなく、レジストリからすばやくインストールします。</target>
        </trans-unit>
        <trans-unit id="984f66f44b45cdc7f43ae2ae923ba45837275ff2" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using a docker image that doesn&amp;rsquo;t come with yarn pre-installed you can still install it after the container has loaded.</source>
          <target state="translated">糸がプリインストールされていないDockerイメージを使用している場合でも、コンテナーが読み込まれた後にインストールできます。</target>
        </trans-unit>
        <trans-unit id="5125f7a740ca02673634770e69c7a86166ee1d66" translate="yes" xml:space="preserve">
          <source>If your install phase requires more, it is necessary to install Yarn yourself until it is pre-installed on build images.</source>
          <target state="translated">インストールフェーズでさらに必要な場合は、ビルドイメージにプレインストールされるまでYarnを自分でインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="42e2fc24470f1d49a5ff67a18415213c4db9c596" translate="yes" xml:space="preserve">
          <source>If your package only allows one version of a given dependency, and you&amp;rsquo;d like to enforce the same behavior as &lt;a href=&quot;cli/install#toc-yarn-install-flat&quot;&gt;&lt;code&gt;yarn install --flat&lt;/code&gt;&lt;/a&gt; on the command line, set this to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">パッケージで特定の依存関係の1つのバージョンのみが許可されており、コマンドラインで&lt;a href=&quot;cli/install#toc-yarn-install-flat&quot;&gt; &lt;code&gt;yarn install --flat&lt;/code&gt; &lt;/a&gt;と同じ動作を強制する場合は、これを &lt;code&gt;true&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="3ce91e59f606f2c44e5f362c9b80ca49e7093e48" translate="yes" xml:space="preserve">
          <source>Ignore engines check.</source>
          <target state="translated">エンジンチェックは無視してください。</target>
        </trans-unit>
        <trans-unit id="70b86e5124358cb371898cd08a953077ef0c1d36" translate="yes" xml:space="preserve">
          <source>In case you find something not working, consult the Troubleshooting section for some tips, then open an issue if things still are problematic. We really want PnP to become the de-facto installation strategy for Javascript packages and finally put &lt;code&gt;node_modules&lt;/code&gt; behind us once and for all.</source>
          <target state="translated">動作しないものがある場合は、トラブルシューティングのセクションでいくつかのヒントを確認し、問題が解決しない場合は問題を開いてください。私たちは本当にPnPをJavascriptパッケージの事実上のインストール戦略にして、最後に &lt;code&gt;node_modules&lt;/code&gt; を置くことを望んでいますています。</target>
        </trans-unit>
        <trans-unit id="7c4389b68de596a57c7b90f0cd1253f29eb10419" translate="yes" xml:space="preserve">
          <source>In cases where the Yarn resolution mechanism can&amp;rsquo;t satisfy the existing dependency tree identically, alerts will be made so that you may manually review the changes. The existing &lt;code&gt;node_modules&lt;/code&gt; tree will be checked for validity beforehand (if not importing from &lt;code&gt;package-lock.json&lt;/code&gt;), and the resultant lockfile should be &lt;code&gt;yarn install&lt;/code&gt;able without any surprises (failed compatibility, unresolvable dependencies, auto-dedupes, etc.)</source>
          <target state="translated">糸の解決メカニズムが既存の依存関係ツリーを完全に満たすことができない場合は、アラートが作成され、手動で変更を確認できます。既存の &lt;code&gt;node_modules&lt;/code&gt; ツリーの妥当性が事前にチェックされ（ &lt;code&gt;package-lock.json&lt;/code&gt; からインポートしていない場合）、結果として得られるロックファイルは、予期せず（互換性の失敗、解決できない依存関係、自動重複排除など）なしで &lt;code&gt;yarn install&lt;/code&gt; できるはずです。</target>
        </trans-unit>
        <trans-unit id="d2ad63f1725fc49f53b2b92c575dc1434c000924" translate="yes" xml:space="preserve">
          <source>In either case, it&amp;rsquo;s good practice to cache your &lt;code&gt;node_modules&lt;/code&gt; and &lt;code&gt;.yarn&lt;/code&gt; folders as well to speed up your builds.</source>
          <target state="translated">どちらの場合も、 &lt;code&gt;node_modules&lt;/code&gt; と &lt;code&gt;.yarn&lt;/code&gt; をキャッシュすることをお勧めしますフォルダーして、ビルドを高速化することをおます。</target>
        </trans-unit>
        <trans-unit id="9adf69763041af868fe9db61b34fb6aefaebb9f6" translate="yes" xml:space="preserve">
          <source>In general, a package is simply a folder with code and a &lt;code&gt;package.json&lt;/code&gt; file that describes the contents. When you want to use another package, you first need to add it to your dependencies. This means running &lt;code&gt;yarn add [package-name]&lt;/code&gt; to install it into your project.</source>
          <target state="translated">一般に、パッケージは、コードとその内容を説明する &lt;code&gt;package.json&lt;/code&gt; ファイルを含むフォルダーです。別のパッケージを使用する場合は、まずそれを依存関係に追加する必要があります。つまり、 &lt;code&gt;yarn add [package-name]&lt;/code&gt; を実行してプロジェクトにインストールします。</target>
        </trans-unit>
        <trans-unit id="97ddcab9b2c157bd2e73555a1453ab2f88842268" translate="yes" xml:space="preserve">
          <source>In general, avoid using tags that look like versions, they typically only confuse people anyways.</source>
          <target state="translated">一般的に、バージョンのように見えるタグの使用は避けましょう。</target>
        </trans-unit>
        <trans-unit id="2942da9d97b354dbe6dd664d3305cb0cf95fa303" translate="yes" xml:space="preserve">
          <source>In most cases, running &lt;code&gt;yarn&lt;/code&gt; or &lt;code&gt;yarn add&lt;/code&gt; for the first time will just work. In some cases, the information in a &lt;code&gt;package.json&lt;/code&gt; file is not explicit enough to eliminate dependencies, and the deterministic way that Yarn chooses dependencies will run into dependency conflicts. This is especially likely to happen in larger projects where sometimes &lt;code&gt;npm install&lt;/code&gt; does not work and developers are frequently removing &lt;code&gt;node_modules&lt;/code&gt; and rebuilding from scratch. If this happens, try using &lt;code&gt;npm&lt;/code&gt; to make the versions of dependencies more explicit, before converting to Yarn.</source>
          <target state="translated">ほとんどの場合、最初に実行中の &lt;code&gt;yarn&lt;/code&gt; または &lt;code&gt;yarn add&lt;/code&gt; します。場合によっては、 &lt;code&gt;package.json&lt;/code&gt; ファイルの情報は依存関係を排除するのに十分明示的ではなく、Yarnが依存関係を選択する決定論的な方法は依存関係の競合に遭遇します。これは特に、 &lt;code&gt;npm install&lt;/code&gt; が機能せず、開発者が &lt;code&gt;node_modules&lt;/code&gt; を頻繁に削除してゼロから再構築することが多い大規模なプロジェクトで発生する可能性があります。これが発生した場合、Yarnに変換する前に、 &lt;code&gt;npm&lt;/code&gt; を使用して依存関係のバージョンをより明確にしてください。</target>
        </trans-unit>
        <trans-unit id="4affb6f00cc16c2c7777ebe4e624f9055b3dfcff" translate="yes" xml:space="preserve">
          <source>In order for code to be open source it needs to have an open source license. There are many open source licenses to choose from, here are a couple of common ones:</source>
          <target state="translated">コードをオープンソースにするためには、オープンソースライセンスが必要です。多くのオープンソースライセンスがありますが、ここでは一般的なライセンスをいくつか紹介します。</target>
        </trans-unit>
        <trans-unit id="10fcd46780ab9a94aaa4122111d2a6662d341f3c" translate="yes" xml:space="preserve">
          <source>In order to alleviate this issue, you can specify the required Yarn version inside the &lt;code&gt;package.json&lt;/code&gt; file, which will prompt your colleagues to use the same version as you. Unfortunately, while technically strong, this technique adds an unwanted burden on them - given that the Yarn binary is typically global, switching from a branch to another might be particularly annoying if they change the version.</source>
          <target state="translated">この問題を軽減するために、 &lt;code&gt;package.json&lt;/code&gt; 内で必要なYarnバージョンを指定できますファイル。これにより、同僚と同じバージョンを使用するように求められます。残念ながら、技術的には強力ですが、Yarnバイナリは通常グローバルであることを考えると、この手法は不要な負担をそれらに追加します。バージョンを変更すると、ブランチから別のブランチへの切り替えは特に煩わしいかもしれません。</target>
        </trans-unit>
        <trans-unit id="d0847f9f727d1b813ab433add660a1f33e915647" translate="yes" xml:space="preserve">
          <source>In order to create teams and manage team membership, you &lt;em&gt;must be a team admin&lt;/em&gt; under the given organization. Listing teams and team memberships may be done by any member of the organizations.</source>
          <target state="translated">チームを作成してチームメンバーシップを&lt;em&gt;管理&lt;/em&gt;するには、指定された組織の&lt;em&gt;チーム管理者&lt;/em&gt;である&lt;em&gt;必要があります&lt;/em&gt;。チームとチームメンバーシップの一覧表示は、組織の任意のメンバーが行うことができます。</target>
        </trans-unit>
        <trans-unit id="7e7844460be25e850971cf276e700662e00d1c40" translate="yes" xml:space="preserve">
          <source>In order to create your first package, open up your system terminal/console and run the following commands:</source>
          <target state="translated">最初のパッケージを作成するには、システムのターミナル/コンソールを開き、以下のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="836ac81c04c90079dbbeaeadb4afbd6178435c12" translate="yes" xml:space="preserve">
          <source>In order to get consistent installs across machines, Yarn needs more information than the dependencies you configure in your &lt;code&gt;package.json&lt;/code&gt;. Yarn needs to store exactly which versions of each dependency were installed.</source>
          <target state="translated">マシン間で一貫したインストールを行うために、Yarnは、 &lt;code&gt;package.json&lt;/code&gt; で構成する依存関係よりも多くの情報を必要とします。Yarnは、インストールされた各依存関係のどのバージョンを正確に格納する必要があります。</target>
        </trans-unit>
        <trans-unit id="4811c5c25e36a62057798a8efb44b6cbd6b81b10" translate="yes" xml:space="preserve">
          <source>In order to share your package with other developers around the world through Yarn, you&amp;rsquo;ll first need to publish it.</source>
          <target state="translated">Yarnを介してパッケージを世界中の他の開発者と共有するには、まずパッケージを公開する必要があります。</target>
        </trans-unit>
        <trans-unit id="896d5bdce6ab330183fa8f3275a6ab7b665c8b54" translate="yes" xml:space="preserve">
          <source>In order to update your version of Yarn, run &lt;code&gt;curl --compressed -o- -L https://yarnpkg.com/install.sh | bash&lt;/code&gt;</source>
          <target state="translated">Yarnのバージョンを更新するには、 &lt;code&gt;curl --compressed -o- -L https://yarnpkg.com/install.sh | bash&lt;/code&gt; 実行します。バッシュ</target>
        </trans-unit>
        <trans-unit id="653fa03abe0468947b1ace5a599ac72da17fdb59" translate="yes" xml:space="preserve">
          <source>In the example above, if &lt;code&gt;workspace-b&lt;/code&gt; depends on a different version than the one referenced in &lt;code&gt;workspace-a&lt;/code&gt;&amp;rsquo;s package.json, the dependency will be installed from npm rather than linked from your local filesystem. This is because some packages actually need to use the previous versions in order to build the new ones (Babel is one of them).</source>
          <target state="translated">場合は、上記の例では、 &lt;code&gt;workspace-b&lt;/code&gt; で参照1とは異なるバージョンに依存し &lt;code&gt;workspace-a&lt;/code&gt; のpackage.json、依存性はNPMからインストールされるのではなく、ローカルのファイルシステムからリンクされています。これは、新しいパッケージをビルドするために一部のパッケージが以前のバージョンを実際に使用する必要があるためです（Babelもその1つです）。</target>
        </trans-unit>
        <trans-unit id="5ff90c667c98e8afc560289cf61a37bb7b5cee8c" translate="yes" xml:space="preserve">
          <source>In the terminal, log in and log out for the changes to take effect</source>
          <target state="translated">ターミナルでは、変更が有効になるようにログインしてログアウトします。</target>
        </trans-unit>
        <trans-unit id="15216ed81e0a62a7021c16d607fd9db031328f59" translate="yes" xml:space="preserve">
          <source>In these scripts you also get some handy environment variables, e.g. &lt;code&gt;npm_package_version&lt;/code&gt; will in the &lt;code&gt;preversion&lt;/code&gt; script hold the version before the version change, and in the &lt;code&gt;postversion&lt;/code&gt; script it will hold the version after the version change.</source>
          <target state="translated">これらのスクリプトでは、あなたはまた、いくつかの便利な環境変数を取得し、例えば &lt;code&gt;npm_package_version&lt;/code&gt; になります &lt;code&gt;preversion&lt;/code&gt; のスクリプトバージョンの変更前のバージョンを保持し、中 &lt;code&gt;postversion&lt;/code&gt; のスクリプト、それはバージョン変更後のバージョンを保持します。</target>
        </trans-unit>
        <trans-unit id="3d9ca2dab696607034e132f539357b1520a92a4b" translate="yes" xml:space="preserve">
          <source>In your terminal/console in the directory that you want to add Yarn (which should almost always be the root of your project), run the following command:</source>
          <target state="translated">Yarn を追加したいディレクトリ(ほとんどの場合、プロジェクトのルートになるはずです)のターミナル/コンソールで、以下のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="79a06bf5e01b446e4d39f7288933e942754d4adb" translate="yes" xml:space="preserve">
          <source>Increment &lt;code&gt;major&lt;/code&gt; when you make a &lt;strong&gt;breaking&lt;/strong&gt; or &lt;strong&gt;incompatible&lt;/strong&gt; change to the API of a package.</source>
          <target state="translated">インクリメント &lt;code&gt;major&lt;/code&gt; あなたは作る際に&lt;strong&gt;破壊&lt;/strong&gt;または&lt;strong&gt;互換性のない&lt;/strong&gt;パッケージのAPIに変更を。</target>
        </trans-unit>
        <trans-unit id="285e7cde525bf1d666c575a1186017278d54670d" translate="yes" xml:space="preserve">
          <source>Increment &lt;code&gt;minor&lt;/code&gt; when you add &lt;strong&gt;new functionality&lt;/strong&gt; while staying &lt;strong&gt;backwards-compatible&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;下位互換性を維持し&lt;/strong&gt;ながら、&lt;strong&gt;新しい機能&lt;/strong&gt;を追加するときに &lt;code&gt;minor&lt;/code&gt; 増分する&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b8e33b44d963f3852c2402cfbe8d09e45268bbd6" translate="yes" xml:space="preserve">
          <source>Increment &lt;code&gt;patch&lt;/code&gt; when you make &lt;strong&gt;bug fixes&lt;/strong&gt; while staying &lt;strong&gt;backwards-compatible&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;下位互換性を維持し&lt;/strong&gt;ながら&lt;strong&gt;バグ修正&lt;/strong&gt;を行うときに &lt;code&gt;patch&lt;/code&gt; 増分する&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f3f61bd275af950432ae1dc9f18207df7a847ba5" translate="yes" xml:space="preserve">
          <source>Increments the prerelease version number keeping the main version.</source>
          <target state="translated">メインバージョンを維持したまま、プレリリース版のバージョン番号を増加させます。</target>
        </trans-unit>
        <trans-unit id="4b631f69842530d659306c8f06dbad594a6b1807" translate="yes" xml:space="preserve">
          <source>Info</source>
          <target state="translated">Info</target>
        </trans-unit>
        <trans-unit id="420f289877c9a77a47fe52f79930cc0086417b45" translate="yes" xml:space="preserve">
          <source>Information for a specific version</source>
          <target state="translated">特定バージョンの情報</target>
        </trans-unit>
        <trans-unit id="58b6c46a03325fc3c143280d237386a9467700b6" translate="yes" xml:space="preserve">
          <source>Install &lt;code&gt;create-&amp;lt;starter-kit-package&amp;gt;&lt;/code&gt; globally, or update the package to the latest version if it already exists</source>
          <target state="translated">&lt;code&gt;create-&amp;lt;starter-kit-package&amp;gt;&lt;/code&gt; をグローバルにインストールするか、すでに存在する場合はパッケージを最新バージョンに更新します</target>
        </trans-unit>
        <trans-unit id="5738752c2ef9d49205456dadaa0c9cfe25ad3a30" translate="yes" xml:space="preserve">
          <source>Install all the dependencies listed within &lt;code&gt;package.json&lt;/code&gt; in the local &lt;code&gt;node_modules&lt;/code&gt; folder.</source>
          <target state="translated">ローカルの &lt;code&gt;node_modules&lt;/code&gt; フォルダーの &lt;code&gt;package.json&lt;/code&gt; にリストされているすべての依存関係をインストールします。</target>
        </trans-unit>
        <trans-unit id="0686c19dcebba3d679ba4e6e02f8018fa73e138d" translate="yes" xml:space="preserve">
          <source>Install all the dependencies, but only allow one version for each package. On the first run this will prompt you to choose a single version for each package that is depended on at multiple version ranges. These will be added to your &lt;code&gt;package.json&lt;/code&gt; under a &lt;code&gt;resolutions&lt;/code&gt; field.</source>
          <target state="translated">すべての依存関係をインストールしますが、パッケージごとに1つのバージョンのみを許可します。初回の実行時には、複数のバージョン範囲で依存している各パッケージに対して単一のバージョンを選択するように求められます。これらは、 &lt;code&gt;resolutions&lt;/code&gt; フィールドの下の &lt;code&gt;package.json&lt;/code&gt; に追加されます。</target>
        </trans-unit>
        <trans-unit id="4bbb41a2e0b13dd2e4be6355a8a81bdbd96e61a6" translate="yes" xml:space="preserve">
          <source>Install packages globally on your operating system.</source>
          <target state="translated">オペレーティングシステムにグローバルにパッケージをインストールします。</target>
        </trans-unit>
        <trans-unit id="3bd549c86c5ca53cacacf1a89959cb80669ec42d" translate="yes" xml:space="preserve">
          <source>Install via Chocolatey</source>
          <target state="translated">Chocolatey経由でインストール</target>
        </trans-unit>
        <trans-unit id="1a1ad49eb1cfbe654a567b47d58407b53f2650b3" translate="yes" xml:space="preserve">
          <source>Install via Scoop</source>
          <target state="translated">スクープ経由でインストール</target>
        </trans-unit>
        <trans-unit id="32c3d136140c6353d2a82a5fa7be18c8583cbc61" translate="yes" xml:space="preserve">
          <source>Install via npm</source>
          <target state="translated">npm経由でインストール</target>
        </trans-unit>
        <trans-unit id="00af58b2d22781691ff44d4e83fd19036f2cdf56" translate="yes" xml:space="preserve">
          <source>Install your projects in a safer and faster way.</source>
          <target state="translated">より安全で迅速な方法でプロジェクトをインストールします。</target>
        </trans-unit>
        <trans-unit id="ad1f6ffa9ca0d6e1ad6eec69d96fdb26d49adfbd" translate="yes" xml:space="preserve">
          <source>Installation Script</source>
          <target state="translated">インストールスクリプト</target>
        </trans-unit>
        <trans-unit id="52906dd7851baf383c7407adf363aced7d3356af" translate="yes" xml:space="preserve">
          <source>Installing Dependencies</source>
          <target state="translated">依存関係のインストール</target>
        </trans-unit>
        <trans-unit id="4115bc84dae4265d365540b90c19c108c58b931f" translate="yes" xml:space="preserve">
          <source>Installing Options</source>
          <target state="translated">オプションのインストール</target>
        </trans-unit>
        <trans-unit id="838bddc0bc17827c437faad5a2c2be636f4676eb" translate="yes" xml:space="preserve">
          <source>Installing all dependencies: &lt;code&gt;yarn&lt;/code&gt; or &lt;code&gt;yarn install&lt;/code&gt;</source>
          <target state="translated">すべての依存関係のインストール： &lt;code&gt;yarn&lt;/code&gt; または &lt;code&gt;yarn install&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e9068e31380dc391c84f8d89146d11b048c64940" translate="yes" xml:space="preserve">
          <source>Installing one and only one version of a package: &lt;code&gt;yarn install --flat&lt;/code&gt;</source>
          <target state="translated">パッケージのバージョンを1つだけ &lt;code&gt;yarn install --flat&lt;/code&gt; ：yarn install --flat</target>
        </trans-unit>
        <trans-unit id="67ab7709bf63c0a28e4ddd5fbf951b8c3b5ef09b" translate="yes" xml:space="preserve">
          <source>Installing only production dependencies: &lt;code&gt;yarn install --production&lt;/code&gt;</source>
          <target state="translated">プロダクションの依存関係のみをインストールする： &lt;code&gt;yarn install --production&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3f1eb6559103de535b9e4e0da4243ab87cfb21e6" translate="yes" xml:space="preserve">
          <source>Installing/reinstalling your dependencies</source>
          <target state="translated">依存関係のインストール/インストール</target>
        </trans-unit>
        <trans-unit id="8ced644df33356c11e799d262408d87b4ef15a4d" translate="yes" xml:space="preserve">
          <source>Installs a package and any packages that it depends on.</source>
          <target state="translated">パッケージとそれに依存するパッケージをインストールします。</target>
        </trans-unit>
        <trans-unit id="e86b0648a905b937eb73fdda7b49e76a4f6cdc8c" translate="yes" xml:space="preserve">
          <source>Instructs yarn to defer to another Yarn binary for execution. Useful if you want to bundle Yarn into your repository and have everyone use the same version for consistency. This was introduced in Yarn 1.0, so all developers must have Yarn &amp;gt;= 1.0 installed.</source>
          <target state="translated">実行のために別のYarnバイナリを遅延するようにyarnに指示します。Yarnをリポジトリにバンドルし、一貫性を保つために全員に同じバージョンを使用させる場合に役立ちます。これはYarn 1.0で導入されたため、すべての開発者はYarn&amp;gt; = 1.0がインストールされている必要があります。</target>
        </trans-unit>
        <trans-unit id="49ace6d3ede28ef38fbcf382e5719426b867429f" translate="yes" xml:space="preserve">
          <source>Interactively creates or updates a package.json file.</source>
          <target state="translated">対話的に package.json ファイルを作成または更新します。</target>
        </trans-unit>
        <trans-unit id="564a9241fc2a9fe2599b22267f67a36231a5fd3e" translate="yes" xml:space="preserve">
          <source>Intersections</source>
          <target state="translated">Intersections</target>
        </trans-unit>
        <trans-unit id="09c37d73d02d2e5f2d373e3c934738f3e591c5fc" translate="yes" xml:space="preserve">
          <source>Introducing a package manager into your project introduces a new workflow around dependencies. Yarn tries its best to stay out of your way and make each step of this workflow simple to understand.</source>
          <target state="translated">プロジェクトにパッケージマネージャを導入すると、依存関係に関する新しいワークフローが導入されます。Yarn は、あなたの邪魔にならないように最善を尽くし、このワークフローの各ステップをシンプルに理解できるようにします。</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="3b038b30e6c489f8a9c5575c67d9d27e908f7d66" translate="yes" xml:space="preserve">
          <source>Is the same running &lt;code&gt;yarn install --check-files&lt;/code&gt;</source>
          <target state="translated">同じ実行中の &lt;code&gt;yarn install --check-files&lt;/code&gt; です</target>
        </trans-unit>
        <trans-unit id="15bc05859a3741cf5512e2f8df185dbc215b9006" translate="yes" xml:space="preserve">
          <source>It doesn&amp;rsquo;t matter if you have an existing repository/directory of code, or if you are starting a completely new project, adding Yarn works the same way every time.</source>
          <target state="translated">コードの既存のリポジトリ/ディレクトリがあるかどうか、または完全に新しいプロジェクトを開始している場合は、Yarnを追加しても毎回同じように機能します。</target>
        </trans-unit>
        <trans-unit id="23aab7e3cd964ac871e1f27aa826904a91817546" translate="yes" xml:space="preserve">
          <source>It is &lt;strong&gt;highly recommended&lt;/strong&gt; that you manually review the default entries in &lt;code&gt;.yarnclean&lt;/code&gt; and customize them to fit your needs.</source>
          <target state="translated">&lt;code&gt;.yarnclean&lt;/code&gt; のデフォルトエントリを手動で確認し、ニーズに合わせてカスタマイズすることを&lt;strong&gt;強くお勧め&lt;/strong&gt;します。</target>
        </trans-unit>
        <trans-unit id="34e84ed40cc1b16006b20c0e73ca3074b092620c" translate="yes" xml:space="preserve">
          <source>It is recommended that you lock in a specific version of Yarn, so that all your builds use the same version of Yarn, and you can test new Yarn releases before switching over. You can do this by adding the version number to the &lt;code&gt;apt-get install&lt;/code&gt; call:</source>
          <target state="translated">すべてのビルドが同じバージョンのYarnを使用するように、特定のバージョンのYarnにロックインすることをお勧めします。また、切り替える前に新しいYarnリリースをテストできます。これを行うには、 &lt;code&gt;apt-get install&lt;/code&gt; 呼び出しにバージョン番号を追加します。</target>
        </trans-unit>
        <trans-unit id="630cbfdd9ebca4467dde4e208d9eb14e0b36fa46" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s also possible to leave out the &lt;code&gt;run&lt;/code&gt; in this command, each script can be executed with its name:</source>
          <target state="translated">このコマンドの &lt;code&gt;run&lt;/code&gt; を省略することも可能です。各スクリプトはその名前で実行できます。</target>
        </trans-unit>
        <trans-unit id="1612f9280403a9e97ee65bd6650232121d987b5d" translate="yes" xml:space="preserve">
          <source>Keep in mind, levels are zero-indexed.</source>
          <target state="translated">レベルはゼロインデックスになっていることを覚えておいてください。</target>
        </trans-unit>
        <trans-unit id="6de46dd0e814eded06ee21b66ed9c47a0072eb2a" translate="yes" xml:space="preserve">
          <source>Keep names short and descriptive. You want people to understand what it is from the name, but it will also be used in &lt;code&gt;require()&lt;/code&gt; calls.</source>
          <target state="translated">名前は短くわかりやすいものにしてください。名前からそれが何であるかを人々に理解してもらいたいが、 &lt;code&gt;require()&lt;/code&gt; 呼び出しでも使用されます。</target>
        </trans-unit>
        <trans-unit id="9c3c37ae38725c26b80f629f16f759540f9bbd12" translate="yes" xml:space="preserve">
          <source>Keep packages small</source>
          <target state="translated">パッケージを小さく保つ</target>
        </trans-unit>
        <trans-unit id="c4d85cbaf19817609858a53aa3280dcedd822e75" translate="yes" xml:space="preserve">
          <source>Keywords are an array of strings that are useful when searching for packages in a package manager.</source>
          <target state="translated">キーワードは、パッケージマネージャでパッケージを検索する際に便利な文字列の配列です。</target>
        </trans-unit>
        <trans-unit id="601b7dc6461c3c065ece3af6e5eb083671348b7b" translate="yes" xml:space="preserve">
          <source>Later, if you decide that Yarn is not for you, you can just go back to using &lt;code&gt;npm&lt;/code&gt; without making any particular changes. You can delete your old &lt;code&gt;yarn.lock&lt;/code&gt; file if nobody on the project is using Yarn any more but it&amp;rsquo;s not necessary.</source>
          <target state="translated">後で、Yarnが自分に合わないと判断した場合は、特別な変更を加えることなく、 &lt;code&gt;npm&lt;/code&gt; の使用に戻ることができます。プロジェクトの誰もがYarnを使用しなくなった場合は、古い &lt;code&gt;yarn.lock&lt;/code&gt; ファイルを削除できますが、必要はありません。</target>
        </trans-unit>
        <trans-unit id="c3934d9b6734da6969934cd21415833cc6f964b5" translate="yes" xml:space="preserve">
          <source>Learn how to use package.json to configure your packages and dependencies.</source>
          <target state="translated">package.json を使ってパッケージと依存関係を設定する方法を学びます。</target>
        </trans-unit>
        <trans-unit id="ce381167293dd5bfd07db0355111dcdc50bcb903" translate="yes" xml:space="preserve">
          <source>Learn more about focused workspaces.</source>
          <target state="translated">フォーカスされたワークスペースについてはこちらをご覧ください。</target>
        </trans-unit>
        <trans-unit id="f8c9d067cdcfc772472711b2239483cf953c94d8" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s go through some additional &lt;code&gt;package.json&lt;/code&gt; fields you might want to add.</source>
          <target state="translated">追加したいかもしれないいくつかの追加の &lt;code&gt;package.json&lt;/code&gt; フィールドを見ていきましょう。</target>
        </trans-unit>
        <trans-unit id="cc5b2a062f05dd148b4ef24c76639416ebcc59f3" translate="yes" xml:space="preserve">
          <source>Licensed under the BSD License.</source>
          <target state="translated">BSDライセンスの下でライセンスされています。</target>
        </trans-unit>
        <trans-unit id="3b0724b48b3f9d33946855e3f1f25ff419d54af7" translate="yes" xml:space="preserve">
          <source>Licensing and open source</source>
          <target state="translated">ライセンスとオープンソース</target>
        </trans-unit>
        <trans-unit id="59b86486aed4edafd59a372a9da15c32460385f0" translate="yes" xml:space="preserve">
          <source>Like this:</source>
          <target state="translated">こんな感じで。</target>
        </trans-unit>
        <trans-unit id="7f01aa0ab8716cc470fbebc4587731042b9c9038" translate="yes" xml:space="preserve">
          <source>Limitations &amp;amp; Caveats</source>
          <target state="translated">制限と警告</target>
        </trans-unit>
        <trans-unit id="99b101fc411819028a0cd6abdaf36a54f16b0d34" translate="yes" xml:space="preserve">
          <source>Link together your projects for easier maintenance.</source>
          <target state="translated">プロジェクトをリンクしてメンテナンスを容易にします。</target>
        </trans-unit>
        <trans-unit id="014bcd654c60d5250fad2123b073b9c0ac3340f6" translate="yes" xml:space="preserve">
          <source>Links</source>
          <target state="translated">Links</target>
        </trans-unit>
        <trans-unit id="3e0e89b57cfcb59a994688bf45b22ee256ab0446" translate="yes" xml:space="preserve">
          <source>List all of the tags for a &lt;code&gt;&amp;lt;package&amp;gt;&lt;/code&gt;. If unspecified &lt;code&gt;&amp;lt;package&amp;gt;&lt;/code&gt; will default to the package you&amp;rsquo;re currently inside the directory of.</source>
          <target state="translated">&lt;code&gt;&amp;lt;package&amp;gt;&lt;/code&gt; のすべてのタグをリストします。指定されていない場合、 &lt;code&gt;&amp;lt;package&amp;gt;&lt;/code&gt; はデフォルトで現在ディレクトリ内にあるパッケージになります。</target>
        </trans-unit>
        <trans-unit id="90e7b5cc7728f3ef6300b73b866011c9d941b97b" translate="yes" xml:space="preserve">
          <source>List installed packages.</source>
          <target state="translated">インストールされているパッケージを一覧表示します。</target>
        </trans-unit>
        <trans-unit id="4f771bc9db8cc3ffa8fadc5c176c239b43c5f23e" translate="yes" xml:space="preserve">
          <source>List licenses for installed packages.</source>
          <target state="translated">インストールされているパッケージのライセンスを一覧表示します。</target>
        </trans-unit>
        <trans-unit id="ffb85069cdf01cc90568f139d25b5eef7f33f59d" translate="yes" xml:space="preserve">
          <source>Lists all of the owners of a &lt;code&gt;&amp;lt;package&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;package&amp;gt;&lt;/code&gt; のすべての所有者をリストします。</target>
        </trans-unit>
        <trans-unit id="f899b746999f77ff96db5b554d21da290d298007" translate="yes" xml:space="preserve">
          <source>Lists version information for all package dependencies. This information includes the currently installed version, the desired version based on semver, and the latest available version.</source>
          <target state="translated">すべてのパッケージの依存関係のバージョン情報を一覧表示します。この情報には、現在インストールされているバージョン、semver に基づいた希望のバージョン、最新の利用可能なバージョンが含まれます。</target>
        </trans-unit>
        <trans-unit id="f3411655e0175481eb39ebfb585ed9e1d3621d87" translate="yes" xml:space="preserve">
          <source>Lists version information for one or more package dependencies.</source>
          <target state="translated">1 つ以上のパッケージの依存関係のバージョン情報を一覧表示します。</target>
        </trans-unit>
        <trans-unit id="8673a1397e96cc16617ce5830a6084d28d1566ba" translate="yes" xml:space="preserve">
          <source>Locally installed CLIs</source>
          <target state="translated">ローカルにインストールされたCLI</target>
        </trans-unit>
        <trans-unit id="c86dfc9f402417b48d5f9174743cbba307ad3f75" translate="yes" xml:space="preserve">
          <source>Logging into npm</source>
          <target state="translated">npmへのログイン</target>
        </trans-unit>
        <trans-unit id="1268d8430d1cc4eaf25ffcf75692120dd998be54" translate="yes" xml:space="preserve">
          <source>MIT License</source>
          <target state="translated">MITライセンス</target>
        </trans-unit>
        <trans-unit id="07a4d61f0acbbb95318a8a2d2e1f3a3b76934273" translate="yes" xml:space="preserve">
          <source>MacPorts</source>
          <target state="translated">MacPorts</target>
        </trans-unit>
        <trans-unit id="1591d78a9c8e601d4a50df6ed46dad04e6e82bcf" translate="yes" xml:space="preserve">
          <source>Maintain offline copies of your packages for more repeatable and reliable builds.</source>
          <target state="translated">より再現性と信頼性の高いビルドのために、パッケージのオフラインコピーを管理します。</target>
        </trans-unit>
        <trans-unit id="da16d838a1c9bb2079b8b53cbc3dc85a1036ab9d" translate="yes" xml:space="preserve">
          <source>Maintain offline copies of your packages for more repeatable and reliable builds. &lt;a href=&quot;offline-mirror&quot;&gt;Find more information here&lt;/a&gt;.</source>
          <target state="translated">パッケージのオフラインコピーを維持して、再現性と信頼性の高いビルドを実現します。&lt;a href=&quot;offline-mirror&quot;&gt;詳細については、こちらをご覧ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0b29029c4c6a2a5a2d9128e2c55731323e0591fe" translate="yes" xml:space="preserve">
          <source>Maintain team memberships</source>
          <target state="translated">チームメンバーの維持</target>
        </trans-unit>
        <trans-unit id="5ce563e21b8be07e4d9e4006d6894792ae6105a5" translate="yes" xml:space="preserve">
          <source>Maintainers</source>
          <target state="translated">Maintainers</target>
        </trans-unit>
        <trans-unit id="b503ab3d2fe020fd3b90a5b6dc2b174fc93ab891" translate="yes" xml:space="preserve">
          <source>Make sure that there isn&amp;rsquo;t something in the &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;registry&lt;/a&gt; with the same name.</source>
          <target state="translated">&lt;a href=&quot;https://www.npmjs.com/&quot;&gt;レジストリ&lt;/a&gt;に同じ名前のものが存在しないことを確認してください。</target>
        </trans-unit>
        <trans-unit id="a79705d655bef1bb08805959e88d87ac783dc6fd" translate="yes" xml:space="preserve">
          <source>Manage package owners.</source>
          <target state="translated">パッケージの所有者を管理します。</target>
        </trans-unit>
        <trans-unit id="ffea3e8e781af94522468e92bbe183f1d0d56bb0" translate="yes" xml:space="preserve">
          <source>Manage teams in organizations, and change team memberships.</source>
          <target state="translated">組織内のチームを管理し、チームメンバーを変更する。</target>
        </trans-unit>
        <trans-unit id="f90c493e3b105db9020948a9bcd78d2387f8045f" translate="yes" xml:space="preserve">
          <source>Managed by Yarn</source>
          <target state="translated">糸で管理</target>
        </trans-unit>
        <trans-unit id="b3619d50cbefa5c9de6d56324468436d6e27259b" translate="yes" xml:space="preserve">
          <source>Manages the yarn configuration files.</source>
          <target state="translated">糸の設定ファイルを管理します。</target>
        </trans-unit>
        <trans-unit id="8e096fda113df401ca04027b2cb21515b898c3da" translate="yes" xml:space="preserve">
          <source>Manual Install via tarball</source>
          <target state="translated">tarballを使った手動インストール</target>
        </trans-unit>
        <trans-unit id="02b003f6e5b993c98df42c5eafc1598108356f14" translate="yes" xml:space="preserve">
          <source>Many projects currently use &lt;code&gt;package-lock.json&lt;/code&gt; or check their &lt;code&gt;node_modules&lt;/code&gt; into source control because they have fragile dependency trees. These projects can&amp;rsquo;t easily migrate to Yarn, because &lt;code&gt;yarn install&lt;/code&gt; could produce a wildly different logical dependency tree. Not all trees can be represented by Yarn&amp;rsquo;s &lt;code&gt;yarn.lock&lt;/code&gt;, and some valid trees will be automatically deduped upon install. These nuances and others present a significant barrier to manual migration.</source>
          <target state="translated">多くのプロジェクトは現在、 &lt;code&gt;package-lock.json&lt;/code&gt; を使用するか、それらの &lt;code&gt;node_modules&lt;/code&gt; をソース管理にチェックインします。これは、依存関係ツリーが壊れやすいためです。これらのプロジェクトをYarnに簡単に移行することはできません。これは、 &lt;code&gt;yarn install&lt;/code&gt; により、大きく異なる論理依存関係ツリーが生成される可能性があるためです。すべてのツリーをYarnの &lt;code&gt;yarn.lock&lt;/code&gt; で表すことができるわけではなく、一部の有効なツリーはインストール時に自動的に重複排除されます。これらのニュアンスや他のニュアンスは、手動の移行に対する大きな障壁を提示します。</target>
        </trans-unit>
        <trans-unit id="cc3caafa2951f339229073743fc07a29274b1263" translate="yes" xml:space="preserve">
          <source>Many small packages are a great model of package management. Often this leads to smaller download sizes because you aren&amp;rsquo;t bundling massive dependencies and only using a small piece of it.</source>
          <target state="translated">多くの小さなパッケージは、パッケージ管理の優れたモデルです。多くの場合、これによりダウンロードサイズが小さくなります。これは、大規模な依存関係をバンドルせず、その一部のみを使用するためです。</target>
        </trans-unit>
        <trans-unit id="eb06a477d0f0f7f42198bf6e7924b8796ec7dce0" translate="yes" xml:space="preserve">
          <source>Migrating from npm</source>
          <target state="translated">npmからの移行</target>
        </trans-unit>
        <trans-unit id="d6ef5373f0149f4297319987f3cb140d37e1ef49" translate="yes" xml:space="preserve">
          <source>Migrating from npm client</source>
          <target state="translated">npmクライアントからの移行</target>
        </trans-unit>
        <trans-unit id="f603251ade728de750c08952817632551a66784f" translate="yes" xml:space="preserve">
          <source>Migrating from npm should be a fairly easy process for most users. Yarn can consume the same &lt;code&gt;package.json&lt;/code&gt; format as npm, and can install any package from the npm registry.</source>
          <target state="translated">npmからの移行は、ほとんどのユーザーにとってかなり簡単なプロセスです。Yarnはnpm と同じ &lt;code&gt;package.json&lt;/code&gt; 形式を使用でき、npmレジストリから任意のパッケージをインストールできます。</target>
        </trans-unit>
        <trans-unit id="e8aca5968693813c39a533150c579c3ad807e8c3" translate="yes" xml:space="preserve">
          <source>More resources</source>
          <target state="translated">その他のリソース</target>
        </trans-unit>
        <trans-unit id="48dc30be559951cb99e1530c244a9807a6e35810" translate="yes" xml:space="preserve">
          <source>Most packages use some kind of version control system. The most common one is git but Yarn doesn&amp;rsquo;t mind whatever one you choose to use. For this guide, our examples are going to use git.</source>
          <target state="translated">ほとんどのパッケージは、ある種のバージョン管理システムを使用しています。最も一般的なものはgitですが、Yarnは使用するものを気にしません。このガイドでは、例でgitを使用します。</target>
        </trans-unit>
        <trans-unit id="16c6e549df719c1903ec08d4233ff78d30f7e4bc" translate="yes" xml:space="preserve">
          <source>Most packages will be installed from the &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm registry&lt;/a&gt; and referred to by simply their package name. For example, &lt;code&gt;yarn add react&lt;/code&gt; will install the &lt;a href=&quot;https://www.npmjs.com/package/react&quot;&gt;&lt;code&gt;react&lt;/code&gt;&lt;/a&gt; package from the npm registry.</source>
          <target state="translated">ほとんどのパッケージは&lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npmレジストリ&lt;/a&gt;からインストールされ、単にパッケージ名で参照されます。たとえば、 &lt;code&gt;yarn add react&lt;/code&gt; は、npmレジストリから&lt;a href=&quot;https://www.npmjs.com/package/react&quot;&gt; &lt;code&gt;react&lt;/code&gt; &lt;/a&gt;パッケージをインストールします。</target>
        </trans-unit>
        <trans-unit id="40985a47cac6e03ca351598302b8683e99d90aab" translate="yes" xml:space="preserve">
          <source>Most people only have &lt;code&gt;dependencies&lt;/code&gt; and &lt;code&gt;devDependencies&lt;/code&gt;, but each of these are important to understand.</source>
          <target state="translated">ほとんどの人は &lt;code&gt;dependencies&lt;/code&gt; と &lt;code&gt;devDependencies&lt;/code&gt; しか持っていませんが、これらはそれぞれ理解することが重要です。</target>
        </trans-unit>
        <trans-unit id="d6a06199cc127e571d3588aef63c79108675eabc" translate="yes" xml:space="preserve">
          <source>Motivation</source>
          <target state="translated">Motivation</target>
        </trans-unit>
        <trans-unit id="d942f28296de8d0e4a857224ef4fd53a476502e6" translate="yes" xml:space="preserve">
          <source>Must be less than or equal to 214 characters (including the &lt;code&gt;@scope/&lt;/code&gt; for scoped packages).</source>
          <target state="translated">214文字以下にする必要があります（スコープパッケージの &lt;code&gt;@scope/&lt;/code&gt; を含む）。</target>
        </trans-unit>
        <trans-unit id="869fdf3485be8c8df49e0cd339c406a0e874c69c" translate="yes" xml:space="preserve">
          <source>Must be run inside an individual workspace in a workspaces project. Can not be run in a non-workspaces project or at the root of a workspaces project.</source>
          <target state="translated">ワークスペース プロジェクト内の個々のワークスペース内で実行する必要があります。ワークスペース以外のプロジェクトまたはワークスペース プロジェクトのルートでは実行できません。</target>
        </trans-unit>
        <trans-unit id="0bf668d9502a9658b4f33b9954c450e0c8a6773b" translate="yes" xml:space="preserve">
          <source>Must not have an uppercase letter in the name.</source>
          <target state="translated">名前に大文字が入っていないこと。</target>
        </trans-unit>
        <trans-unit id="c35121df9c06d6a36a3843c11e78473b3e5e7987" translate="yes" xml:space="preserve">
          <source>Must not start with a dot (&lt;code&gt;.&lt;/code&gt;) or an underscore (&lt;code&gt;_&lt;/code&gt;).</source>
          <target state="translated">ドット（ &lt;code&gt;.&lt;/code&gt; ）またはアンダースコア（ &lt;code&gt;_&lt;/code&gt; ）で始めることはできません。</target>
        </trans-unit>
        <trans-unit id="2a161307e8ea4824a3046865873400fb09e5fc24" translate="yes" xml:space="preserve">
          <source>Must use only URL-safe characters.</source>
          <target state="translated">URLセーフ文字のみを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="1e6be7df20a0347eac1199f1b1be43592a233745" translate="yes" xml:space="preserve">
          <source>Nested packages may not work properly.</source>
          <target state="translated">ネストされたパッケージが正しく動作しない場合があります。</target>
        </trans-unit>
        <trans-unit id="508df4306b3b873df7c7e47de65c722d40f3dffc" translate="yes" xml:space="preserve">
          <source>Nested workspaces are not supported at this time.</source>
          <target state="translated">入れ子になっているワークスペースは、現時点ではサポートされていません。</target>
        </trans-unit>
        <trans-unit id="ab38385a80d1d140d563b0f742df4c0618d5ed6c" translate="yes" xml:space="preserve">
          <source>Never used a package manager before or just new to Yarn? Let's get you up and running in just a couple of minutes.</source>
          <target state="translated">パッケージマネージャを使ったことがありませんか?数分で使えるようにしましょう。</target>
        </trans-unit>
        <trans-unit id="00baec6cd6c6da61634c3ec27c46c68a2e4f420d" translate="yes" xml:space="preserve">
          <source>Next you will be asked to enter your npm password:</source>
          <target state="translated">次にnpmのパスワードの入力を求められます。</target>
        </trans-unit>
        <trans-unit id="53fa6b599c47a59e59bda14c69bc967dea49d114" translate="yes" xml:space="preserve">
          <source>Nightly builds of Yarn are not available via npm.</source>
          <target state="translated">Yarn の夜間ビルドは npm からは利用できません。</target>
        </trans-unit>
        <trans-unit id="64a5a7965583395ec7007bd2128391f9e9fa1060" translate="yes" xml:space="preserve">
          <source>Normal dependencies are usually installed from the npm registry. Bundled dependencies are useful in cases normal dependencies are not sufficient:</source>
          <target state="translated">通常の依存関係は通常 npm レジストリからインストールされます。バンドルされた依存関係は、通常の依存関係では不十分な場合に便利です。</target>
        </trans-unit>
        <trans-unit id="738d196eaa093af753b81d896100c055b1c85b9f" translate="yes" xml:space="preserve">
          <source>Note that by default, &lt;code&gt;yarn info&lt;/code&gt; will not return the &lt;code&gt;readme&lt;/code&gt; field (since it is often very long). To explicitly request that field, use the second argument:</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;yarn info&lt;/code&gt; は &lt;code&gt;readme&lt;/code&gt; フィールドを返さないことに注意してください（多くの場合非常に長いため）。そのフィールドを明示的に要求するには、2番目の引数を使用します。</target>
        </trans-unit>
        <trans-unit id="bab32aef00015f111a0624c2de647e75c2fb6d19" translate="yes" xml:space="preserve">
          <source>Note that if your &lt;code&gt;package.json&lt;/code&gt; contains &lt;code&gt;&quot;flat&quot;: true&lt;/code&gt; and other packages depend on yours (e.g. you are building a library rather than an application), those other packages will also need &lt;code&gt;&quot;flat&quot;: true&lt;/code&gt; in their &lt;code&gt;package.json&lt;/code&gt; or be installed with &lt;code&gt;yarn install --flat&lt;/code&gt; on the command line.</source>
          <target state="translated">あなたの場合は注意することを &lt;code&gt;package.json&lt;/code&gt; が含まれている &lt;code&gt;&quot;flat&quot;: true&lt;/code&gt; と他のパッケージは、（例えば、アプリケーションではなくライブラリを構築している）あなたに依存し、それらの他のパッケージも必要になります &lt;code&gt;&quot;flat&quot;: true&lt;/code&gt; 自分で &lt;code&gt;package.json&lt;/code&gt; または可能コマンドラインで &lt;code&gt;yarn install --flat&lt;/code&gt; を使用してインストールされます。</target>
        </trans-unit>
        <trans-unit id="9a576d7e2e168ec0b787bac1fb1696d0ff8a69ec" translate="yes" xml:space="preserve">
          <source>Note that installing dependencies via &lt;a href=&quot;cli/install#toc-yarn-install-flat&quot;&gt;&lt;code&gt;yarn install --flat&lt;/code&gt;&lt;/a&gt; will automatically add a &lt;code&gt;resolutions&lt;/code&gt; block to your &lt;code&gt;package.json&lt;/code&gt; file.</source>
          <target state="translated">&lt;a href=&quot;cli/install#toc-yarn-install-flat&quot;&gt; &lt;code&gt;yarn install --flat&lt;/code&gt; &lt;/a&gt;を使用して依存関係をインストールすると、 &lt;code&gt;resolutions&lt;/code&gt; ブロックが &lt;code&gt;package.json&lt;/code&gt; ファイルに自動的に追加されます。</target>
        </trans-unit>
        <trans-unit id="230dc5e2b512b0ea02c7a787f60d2f175521e264" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;private: true&lt;/code&gt; is required! Workspaces are not meant to be published, so we&amp;rsquo;ve added this safety measure to make sure that nothing can accidentally expose them.</source>
          <target state="translated">&lt;code&gt;private: true&lt;/code&gt; が必要であることに注意してください！ワークスペースは公開することを意図していないため、偶然にワークスペースが公開されることがないように、この安全対策を追加しました。</target>
        </trans-unit>
        <trans-unit id="ca3550e0c681fc8137ca54868796d859e754bacc" translate="yes" xml:space="preserve">
          <source>Note that this command also is the preferred way to upgrade Yarn - it will work no matter how you originally installed it, which might sometimes prove difficult to figure out otherwise.</source>
          <target state="translated">このコマンドは Yarn をアップグレードするための好ましい方法でもあることに注意してください-元々どのようにインストールしたかに関係なく動作します。</target>
        </trans-unit>
        <trans-unit id="2f2ed21523c15dfa52d6415566bc2a7e482f9ac0" translate="yes" xml:space="preserve">
          <source>Note: your profile may be in your &lt;code&gt;.profile&lt;/code&gt;, &lt;code&gt;.bash_profile&lt;/code&gt;, &lt;code&gt;.bashrc&lt;/code&gt;, &lt;code&gt;.zshrc&lt;/code&gt;, etc.</source>
          <target state="translated">注：プロファイルは &lt;code&gt;.profile&lt;/code&gt; 、 &lt;code&gt;.bash_profile&lt;/code&gt; 、 &lt;code&gt;.bashrc&lt;/code&gt; 、 &lt;code&gt;.zshrc&lt;/code&gt; などにある場合があります。</target>
        </trans-unit>
        <trans-unit id="5256fffffb868a37e07fc3a3a770a754b7273025" translate="yes" xml:space="preserve">
          <source>Notice</source>
          <target state="translated">Notice</target>
        </trans-unit>
        <trans-unit id="a6b77df32d4d7711376d16b5eae28f375ff9a84f" translate="yes" xml:space="preserve">
          <source>Notice that it is possible to use any version of node/yarn that exists in &lt;a href=&quot;https://hub.docker.com/_/node/?tab=tags&quot;&gt;Dockerhub&lt;/a&gt;. In this case we use version 11 for running tests and version 8.6 for packaging the application. You can also use any private docker image that includes &lt;code&gt;yarn&lt;/code&gt; and any other tools you need in your pipeline.</source>
          <target state="translated">&lt;a href=&quot;https://hub.docker.com/_/node/?tab=tags&quot;&gt;Dockerhubに&lt;/a&gt;存在する任意のバージョンのnode / yarnを使用できることに注意してください。この場合、テストの実行にはバージョン11を使用し、アプリケーションのパッケージ化にはバージョン8.6を使用します。パイプラインで必要な &lt;code&gt;yarn&lt;/code&gt; やその他のツールを含むプライベートDockerイメージを使用することもできます。</target>
        </trans-unit>
        <trans-unit id="c0962067bfac5a0056cf1a1b7e605740526aec45" translate="yes" xml:space="preserve">
          <source>Now that you have Yarn &lt;a href=&quot;install&quot;&gt;installed&lt;/a&gt;, you can start using Yarn. Here are some of the most common commands you&amp;rsquo;ll need.</source>
          <target state="translated">Yarnが&lt;a href=&quot;install&quot;&gt;インストールされた&lt;/a&gt;ので、Yarnの使用を開始できます。以下は、必要になる最も一般的なコマンドの一部です。</target>
        </trans-unit>
        <trans-unit id="e607f9946ac3f60ef19138c98c55dbe5f8ea2a77" translate="yes" xml:space="preserve">
          <source>Now you should have a &lt;code&gt;package.json&lt;/code&gt; that looks similar to this:</source>
          <target state="translated">これで、次のような &lt;code&gt;package.json&lt;/code&gt; ができました。</target>
        </trans-unit>
        <trans-unit id="6be8fd340c33e2be68b585fb258f8e46f29ca94d" translate="yes" xml:space="preserve">
          <source>Now, tarballs will be removed when appropriate. The end result is that &lt;code&gt;package.json&lt;/code&gt;, &lt;code&gt;node_modules&lt;/code&gt;, &lt;code&gt;yarn.lock&lt;/code&gt;, and the offline mirror should all remain perfectly in sync whenever you change your project&amp;rsquo;s dependencies.</source>
          <target state="translated">現在、tarballは適切なときに削除されます。最終結果は、プロジェクトの依存関係を変更するたびに、 &lt;code&gt;package.json&lt;/code&gt; 、 &lt;code&gt;node_modules&lt;/code&gt; 、 &lt;code&gt;yarn.lock&lt;/code&gt; 、およびオフラインミラーがすべて完全に同期したままになることです。</target>
        </trans-unit>
        <trans-unit id="c2db2bff2d12e8a1b43ad7adb69c6b211242c02f" translate="yes" xml:space="preserve">
          <source>Offline Mirror</source>
          <target state="translated">オフラインミラー</target>
        </trans-unit>
        <trans-unit id="784111f70733ca4946f5225273d307a341f3aa1b" translate="yes" xml:space="preserve">
          <source>On Alpine Linux (3.6+), you can install Yarn with apk.</source>
          <target state="translated">Alpine Linux (3.6+)では、 apkでYarnをインストールすることができます。</target>
        </trans-unit>
        <trans-unit id="4d616fe9f338d618ee2fec6874eab0b2ecbc9623" translate="yes" xml:space="preserve">
          <source>On Arch Linux, Yarn can be installed through the official package manager.</source>
          <target state="translated">Arch Linux では、Yarn は公式のパッケージマネージャからインストールできます。</target>
        </trans-unit>
        <trans-unit id="5142e0f120ba286800f49afabe26b88976d185e7" translate="yes" xml:space="preserve">
          <source>On CentOS, Fedora and RHEL, you can install Yarn via our RPM package repository.</source>
          <target state="translated">CentOS,Fedora,RHELでは、私たちのRPMパッケージリポジトリからYarnをインストールすることができます。</target>
        </trans-unit>
        <trans-unit id="9e2e969f81743badff3d6e4fcd863183c50c07d1" translate="yes" xml:space="preserve">
          <source>On Debian or Ubuntu Linux, you can install Yarn via our Debian package repository. You will first need to configure the repository:</source>
          <target state="translated">Debian や Ubuntu Linux では、Debian パッケージリポジトリから Yarn をインストールすることができます。まず、リポジトリを設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="f59c44095fea90c06182a50ebcd16d38a135e3aa" translate="yes" xml:space="preserve">
          <source>On Gentoo Linux, you can install Yarn with portage.</source>
          <target state="translated">Gentoo LinuxではportageでYarnをインストールすることができます。</target>
        </trans-unit>
        <trans-unit id="a490cd486ae89c7c648a574659887f93aade09b3" translate="yes" xml:space="preserve">
          <source>On Solus, you can install yarn via the Solus repository.</source>
          <target state="translated">Solus上では、Solusリポジトリ経由でyarnをインストールすることができます。</target>
        </trans-unit>
        <trans-unit id="267315e852935c7818f4cf83563ce11d72e2e67e" translate="yes" xml:space="preserve">
          <source>On Ubuntu 16.04 or below and Debian Stable, you will also need to configure &lt;a href=&quot;https://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions&quot;&gt;the NodeSource repository&lt;/a&gt; to get a new enough version of Node.js.</source>
          <target state="translated">Ubuntu 16.04 &lt;a href=&quot;https://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions&quot;&gt;以前&lt;/a&gt;とDebian Stableでは、NodeSourceリポジトリを構成して、十分に新しいバージョンのNode.jsを取得する必要もあります。</target>
        </trans-unit>
        <trans-unit id="ba7271a65791f88be92bd81a82450751c375ebdd" translate="yes" xml:space="preserve">
          <source>On common Linux distributions such as Debian, Ubuntu and CentOS, it is recommended to install Yarn via our packages instead.</source>
          <target state="translated">Debian、Ubuntu、CentOSなどの一般的なLinuxディストリビューションでは、代わりに私たちのパッケージを使ってYarnをインストールすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="ab6fe7a9dde767d38da4028fdfce1b886cd75186" translate="yes" xml:space="preserve">
          <source>Once a package is published, you can never modify that specific version, so take care before publishing.</source>
          <target state="translated">一度公開されたパッケージは、その特定のバージョンを変更することはできませんので、公開する前に注意してください。</target>
        </trans-unit>
        <trans-unit id="dc291eabc0c24d05cfc50574fc936f07e744d210" translate="yes" xml:space="preserve">
          <source>Once you have Chocolatey installed, you may install yarn by running the following code in your console:</source>
          <target state="translated">Chocolateyをインストールしたら、コンソールで以下のコードを実行することでyarnをインストールすることができます。</target>
        </trans-unit>
        <trans-unit id="d9a53fc2a9cf1251b7fc2a384cdbcd23daa277b3" translate="yes" xml:space="preserve">
          <source>Once you have Scoop installed, you may install yarn by running the following code in your console:</source>
          <target state="translated">Scoopをインストールしたら、コンソールで以下のコードを実行することでyarnをインストールすることができます。</target>
        </trans-unit>
        <trans-unit id="1bb70e5927d915b88e096f277cab8e032602466e" translate="yes" xml:space="preserve">
          <source>Once you have npm installed you can run:</source>
          <target state="translated">npmをインストールしたら実行します。</target>
        </trans-unit>
        <trans-unit id="9a2245a8c96c54cc9c35e284e36395a2b1d3d4db" translate="yes" xml:space="preserve">
          <source>Once you have written all the code in your package, tested it out and you are ready to publish you can kick things off:</source>
          <target state="translated">パッケージ内のすべてのコードを書き、テストを行い、公開する準備ができたら、物事をキックオフすることができます。</target>
        </trans-unit>
        <trans-unit id="094f0b2fc649cae8576c5cd5dc96636bc45c7f20" translate="yes" xml:space="preserve">
          <source>One of the easiest ways to install Yarn on macOS and generic Unix environments is via our shell script. You can install Yarn by running the following code in your terminal:</source>
          <target state="translated">macOS と一般的な Unix 環境に Yarn をインストールする最も簡単な方法の一つは、シェルスクリプトを使用することです。ターミナルで以下のコードを実行することで Yarn をインストールすることができます。</target>
        </trans-unit>
        <trans-unit id="b1c4145de4b11b538d8d734331791a63489d477c" translate="yes" xml:space="preserve">
          <source>Optional dependencies are just that: optional. If they fail to install, Yarn will still say the install process was successful.</source>
          <target state="translated">オプションの依存関係は、あくまでもオプションです。インストールに失敗しても、Yarn はインストールに成功したと表示します。</target>
        </trans-unit>
        <trans-unit id="49edd458a66d43218e6aa0d5c06fffdd18c2538d" translate="yes" xml:space="preserve">
          <source>Optional dependencies can be used with your package, but are not required. If the optional package is not found, installation still continues.</source>
          <target state="translated">オプションの依存関係は、パッケージと一緒に使用することができますが、必須ではありません。オプションのパッケージが見つからない場合でも、インストールは継続されます。</target>
        </trans-unit>
        <trans-unit id="787ff826363b2b64853aa02e24057ae098e7cf41" translate="yes" xml:space="preserve">
          <source>Optionally, one or more package names can be specified. When package names are specified, only those packages will be upgraded. When no package names are specified, all dependencies will be upgraded.</source>
          <target state="translated">オプションで、1 つ以上のパッケージ名を指定できます。パッケージ名を指定すると、そのパッケージのみがアップグレードされます。パッケージ名を指定しない場合は、すべての依存関係がアップグレードされます。</target>
        </trans-unit>
        <trans-unit id="28574d7bfd869af33d125e3716af97d1fb5666ba" translate="yes" xml:space="preserve">
          <source>Or the code has to be modified in order to use the &lt;code&gt;paths&lt;/code&gt; option from &lt;code&gt;require.resolve&lt;/code&gt;: &lt;code&gt;require(require.resolve(`jest-environment-${config.environment}`, {paths:[config.projectPath]}))&lt;/code&gt; (note that this is the recommended option, being unintrusive for users and a good idea in general)</source>
          <target state="translated">または、 &lt;code&gt;require.resolve&lt;/code&gt; からの &lt;code&gt;paths&lt;/code&gt; オプションを使用するためにコードを変更する &lt;code&gt;require(require.resolve(`jest-environment-${config.environment}`, {paths:[config.projectPath]}))&lt;/code&gt; ます：require（require.resolve（ `jest-environment-$ {config.environment}`、{paths：[config.projectPath]}））（これは推奨されるオプションであり、ユーザーには邪魔にならず、一般的には良いアイデアです。</target>
        </trans-unit>
        <trans-unit id="31a16bca9c92e08b5f1f29ad6ee908d5dc621042" translate="yes" xml:space="preserve">
          <source>Or to check versions available:</source>
          <target state="translated">または、利用可能なバージョンを確認することができます。</target>
        </trans-unit>
        <trans-unit id="2e13c09776cb2ea127c188c72f180bc1e8c377f0" translate="yes" xml:space="preserve">
          <source>Or you can change the git message using &lt;code&gt;version-git-message&lt;/code&gt; where &lt;code&gt;%s&lt;/code&gt; is the version string:</source>
          <target state="translated">または、 &lt;code&gt;version-git-message&lt;/code&gt; を使用してgitメッセージを変更できます。 &lt;code&gt;%s&lt;/code&gt; はバージョン文字列です。</target>
        </trans-unit>
        <trans-unit id="fa00e7e2aecc85c7f850e9730757e2675b563ab3" translate="yes" xml:space="preserve">
          <source>Or, finally, the &lt;code&gt;jest-environment-jsdom&lt;/code&gt; package can be specified as dependency of the top-level package - usually your own. In those circumstances, Yarn will allow Jest to access it even if it isn&amp;rsquo;t declared in its dependencies (we do this because this is the only case where this is safe: it isn&amp;rsquo;t possible for the top-level dependencies to be ambiguous).</source>
          <target state="translated">または、最後に、 &lt;code&gt;jest-environment-jsdom&lt;/code&gt; パッケージをトップレベルパッケージ（通常は独自のパッケージ）の依存関係として指定できます。そのような状況では、Yarnは依存関係で宣言されていなくてもJestがそれにアクセスできるようにします（これが安全な唯一のケースであるため、これを行います：トップレベルの依存関係があいまいになることはありません。 ）。</target>
        </trans-unit>
        <trans-unit id="ec36f9f002af6edf704e23c2c2def3dfbe38a9d8" translate="yes" xml:space="preserve">
          <source>Organization creation and management of team admins and organization members is done through the npm website, not the CLI.</source>
          <target state="translated">チームの管理者や組織メンバーの組織作成や管理は、CLIではなくnpmのWebサイトから行います。</target>
        </trans-unit>
        <trans-unit id="ef37ee527733d7f89ef08b1b81b5f3b3bb0daff8" translate="yes" xml:space="preserve">
          <source>Other developers on the project can keep using &lt;code&gt;npm&lt;/code&gt;, so you don&amp;rsquo;t need to get everyone on your project to convert at the same time. The developers using &lt;code&gt;yarn&lt;/code&gt; will all get exactly the same configuration as each other, and the developers using &lt;code&gt;npm&lt;/code&gt; may get slightly different configurations, which is the intended behavior of &lt;code&gt;npm&lt;/code&gt;.</source>
          <target state="translated">プロジェクトの他の開発者は &lt;code&gt;npm&lt;/code&gt; を使い続けることができるため、プロジェクトの全員を同時に変換する必要はありません。 &lt;code&gt;yarn&lt;/code&gt; を使用する開発者はすべてまったく同じ構成を取得し、 &lt;code&gt;npm&lt;/code&gt; を使用する開発者はわずかに異なる構成を取得する場合があります。これは &lt;code&gt;npm&lt;/code&gt; の意図された動作です。</target>
        </trans-unit>
        <trans-unit id="b9e691608c287e56cecbec2ff95fd22352113827" translate="yes" xml:space="preserve">
          <source>Other developers working on the project can run &lt;code&gt;yarn install&lt;/code&gt; to sync their own &lt;code&gt;node_modules&lt;/code&gt; directories with the updated set of dependencies.</source>
          <target state="translated">プロジェクトに取り組んでいる他の開発者は、 &lt;code&gt;yarn install&lt;/code&gt; を実行して、独自の &lt;code&gt;node_modules&lt;/code&gt; ディレクトリを更新された一連の依存関係と同期できます。</target>
        </trans-unit>
        <trans-unit id="751cdfa99396621012010d23d2d49333bfeafd44" translate="yes" xml:space="preserve">
          <source>Outputs an &lt;a href=&quot;https://en.wikipedia.org/wiki/.har&quot;&gt;HTTP archive&lt;/a&gt; from all the network requests performed during the installation. HAR files are commonly used to investigate network performance, and can be analyzed with tools such as &lt;a href=&quot;https://toolbox.googleapps.com/apps/har_analyzer/&quot;&gt;Google&amp;rsquo;s HAR Analyzer&lt;/a&gt; or &lt;a href=&quot;http://www.softwareishard.com/blog/har-viewer/&quot;&gt;HAR Viewer&lt;/a&gt;.</source>
          <target state="translated">インストール中に実行されたすべてのネットワーク要求から&lt;a href=&quot;https://en.wikipedia.org/wiki/.har&quot;&gt;HTTPアーカイブ&lt;/a&gt;を出力します。HARファイルは一般にネットワークパフォーマンスの調査に使用され、&lt;a href=&quot;https://toolbox.googleapps.com/apps/har_analyzer/&quot;&gt;GoogleのHARアナライザー&lt;/a&gt;や&lt;a href=&quot;http://www.softwareishard.com/blog/har-viewer/&quot;&gt;HARビューア&lt;/a&gt;などのツールで分析できます。</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="a0617402e3c416ffa34f547dd71233eb970ac08d" translate="yes" xml:space="preserve">
          <source>Owners have permission to do the following tasks:</source>
          <target state="translated">所有者は、以下の作業を行うことを許可されています。</target>
        </trans-unit>
        <trans-unit id="4a5972896f364612b9859fc70643d536cc262e1f" translate="yes" xml:space="preserve">
          <source>Package author information. An author is one person.</source>
          <target state="translated">パッケージの作者情報。著者は一人の人間です。</target>
        </trans-unit>
        <trans-unit id="a0965966b71d415ade9599037f0085c0297b0227" translate="yes" xml:space="preserve">
          <source>Package dependencies are critical to the success of a package. When you develop the functionality of your package, you will very likely use existing code defined in other packages. Those packages then become dependencies to your project.</source>
          <target state="translated">パッケージの依存関係は、パッケージを成功させるために非常に重要です。パッケージの機能を開発する際には、他のパッケージで定義された既存のコードを使用する可能性が高いでしょう。これらのパッケージはプロジェクトの依存関係になります。</target>
        </trans-unit>
        <trans-unit id="cc7d39b844da1ca9ef438fbe78f518c114165874" translate="yes" xml:space="preserve">
          <source>Packages in Yarn follow &lt;a href=&quot;http://semver.org/&quot;&gt;Semantic Versioning&lt;/a&gt;, also known as &amp;ldquo;semver&amp;rdquo;. When you install a new package from the registry it will be added to your &lt;code&gt;package.json&lt;/code&gt; with a semver version range.</source>
          <target state="translated">Yarnのパッケージは、「semver」としても知られる&lt;a href=&quot;http://semver.org/&quot;&gt;Semantic Versioning&lt;/a&gt;に従います。レジストリから新しいパッケージをインストールすると、semverのバージョン範囲で &lt;code&gt;package.json&lt;/code&gt; に追加されます。</target>
        </trans-unit>
        <trans-unit id="94d7007623a80d954270e99101662b07a2e2ac36" translate="yes" xml:space="preserve">
          <source>Path Setup</source>
          <target state="translated">パス設定</target>
        </trans-unit>
        <trans-unit id="f5003640ed2d07ebd2f5946b450f190485abdf52" translate="yes" xml:space="preserve">
          <source>Peer dependencies allow you to state compatibility of your package with versions of other packages.</source>
          <target state="translated">ピア依存関係では、あなたのパッケージと他のパッケージのバージョンとの互換性を示すことができます。</target>
        </trans-unit>
        <trans-unit id="4edc6b352b540cb0e8d4ab2c027d8515c3dc1f30" translate="yes" xml:space="preserve">
          <source>Peer dependencies are a special type of dependency that would only ever come up if you were publishing your own package.</source>
          <target state="translated">ピア依存関係は特殊なタイプの依存関係で、独自のパッケージを公開している場合にしか出てこないでしょう。</target>
        </trans-unit>
        <trans-unit id="41e1c522e4cd114c3ad708578e3246170017a101" translate="yes" xml:space="preserve">
          <source>Perform a vulnerability audit against the installed packages.</source>
          <target state="translated">インストールされているパッケージに対する脆弱性監査を実行します。</target>
        </trans-unit>
        <trans-unit id="d91a0ac1d0464e7989bb32cd113438b605fccdf1" translate="yes" xml:space="preserve">
          <source>Please note the fact that &lt;code&gt;/workspace-a&lt;/code&gt; is aliased as &lt;code&gt;/node_modules/workspace-a&lt;/code&gt; via a symlink. That&amp;rsquo;s the trick that allows you to require the package as if it was a normal one! You also need to know that the &lt;code&gt;/workspace-a/package.json#name&lt;/code&gt; field is used and not the folder name. This means that if the &lt;code&gt;/workspace-a/package.json&lt;/code&gt;&lt;code&gt;name&lt;/code&gt; field was &lt;code&gt;&quot;pkg-a&quot;&lt;/code&gt;, the alias will be the following: &lt;code&gt;/node_modules/pkg-a -&amp;gt; /workspace-a&lt;/code&gt; and you will be able to import code from &lt;code&gt;/workspace-a&lt;/code&gt; with &lt;code&gt;const pkgA = require(&quot;pkg-a&quot;);&lt;/code&gt; (or maybe &lt;code&gt;import pkgA from &quot;pkg-a&quot;;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;/workspace-a&lt;/code&gt; はシンボリックリンクを介して &lt;code&gt;/node_modules/workspace-a&lt;/code&gt; としてエイリアスされていることに注意してください。これが、通常のパッケージのようにパッケージを要求できるようにするトリックです。また、フォルダー名ではなく、 &lt;code&gt;/workspace-a/package.json#name&lt;/code&gt; フィールドが使用されていることも知っておく必要があります。つまり、 &lt;code&gt;/node_modules/pkg-a -&amp;gt; /workspace-a&lt;/code&gt; &lt;code&gt;/workspace-a/package.json&lt;/code&gt; &lt;code&gt;name&lt;/code&gt; フィールドが &lt;code&gt;&quot;pkg-a&quot;&lt;/code&gt; の場合、エイリアスは次のようになります。/ node_modules / pkg-a-&amp;gt; / workspace-aからコードをインポートできるようになります &lt;code&gt;/workspace-a&lt;/code&gt; with &lt;code&gt;const pkgA = require(&quot;pkg-a&quot;);&lt;/code&gt; （または &lt;code&gt;import pkgA from &quot;pkg-a&quot;;&lt;/code&gt; かもしれません;）。</target>
        </trans-unit>
        <trans-unit id="e8a7eb4418794b2720d91c802de9e286535c4956" translate="yes" xml:space="preserve">
          <source>Please whitelist your project folder and the Yarn cache directory (%LocalAppData%\Yarn) in your antivirus software, otherwise installing packages will be significantly slower as every single file will be scanned as it&amp;rsquo;s written to disk.</source>
          <target state="translated">ウイルス対策ソフトウェアのプロジェクトフォルダーとYarnキャッシュディレクトリ（％LocalAppData％\ Yarn）をホワイトリストに登録してください。そうしないと、ディスクに書き込まれるときにすべてのファイルがスキャンされるため、パッケージのインストールが大幅に遅くなります。</target>
        </trans-unit>
        <trans-unit id="f68f356e8de958aae16b5b3961395153122af7f8" translate="yes" xml:space="preserve">
          <source>Plug&amp;rsquo;n&amp;rsquo;Play is an alternative installation strategy unveiled in September 2018. It presents interesting characteristics that make suitable for a large panel of projects, and is designed for compatibility with the current ecosystem.</source>
          <target state="translated">Plug'n'Playは、2018年9月に発表された代替インストール戦略です。これは、プロジェクトの大規模なパネルに適した興味深い特性を示し、現在のエコシステムとの互換性のために設計されています。</target>
        </trans-unit>
        <trans-unit id="96c1fc56042a8391d4b78ed7731414d3bc1e14da" translate="yes" xml:space="preserve">
          <source>Plug'n'Play</source>
          <target state="translated">Plug'n'Play</target>
        </trans-unit>
        <trans-unit id="013a509fc95f4b7b2c12f1c9316e374da69a9cbd" translate="yes" xml:space="preserve">
          <source>Pre-release tags</source>
          <target state="translated">プレリリースタグ</target>
        </trans-unit>
        <trans-unit id="e8598dd83e01f87c6b66d57d0ab6b4e76a7c63d8" translate="yes" xml:space="preserve">
          <source>Pre-releases tend to contain accidental breaking changes and usually you do not want to match pre-releases outside of the version you have specified so this behavior is useful.</source>
          <target state="translated">プレリリースは偶発的な変更を含む傾向があり、通常は指定したバージョン以外のプレリリースをマッチさせたくないので、この動作は便利です。</target>
        </trans-unit>
        <trans-unit id="05f7aa2d99fe5516f73432f1eeafce733f98aee0" translate="yes" xml:space="preserve">
          <source>Prevent yarn from creating symlinks for any binaries the package might contain.</source>
          <target state="translated">yarn がパッケージに含まれる可能性のあるバイナリのシンボリックリンクを作成しないようにします。</target>
        </trans-unit>
        <trans-unit id="734ebfb6510b7fecd6de41d43b4c2e39b19bb43c" translate="yes" xml:space="preserve">
          <source>Providing a tag to &lt;code&gt;yarn publish&lt;/code&gt; lets you publish packages with a specific tag. For example, if you do a &lt;code&gt;yarn publish --tag beta&lt;/code&gt;, and your package is named &lt;code&gt;blorp&lt;/code&gt;, then someone else can install that package with &lt;code&gt;yarn add blorp@beta&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;yarn publish&lt;/code&gt; タグを提供すると、特定のタグを持つパッケージを発行できます。たとえば、 &lt;code&gt;yarn publish --tag beta&lt;/code&gt; を実行し、パッケージの名前が &lt;code&gt;blorp&lt;/code&gt; である場合、他の誰かが &lt;code&gt;yarn add blorp@beta&lt;/code&gt; を使用してそのパッケージをインストールできます。</target>
        </trans-unit>
        <trans-unit id="1a73e3cbe58458dcece6f1c275693ea4b15dc83a" translate="yes" xml:space="preserve">
          <source>Publish new versions of the package</source>
          <target state="translated">パッケージの新バージョンを発行する</target>
        </trans-unit>
        <trans-unit id="93c13f13f67718dbd2c38cb34de7749ae96bde39" translate="yes" xml:space="preserve">
          <source>Publishes a package to the npm registry.</source>
          <target state="translated">npm レジストリにパッケージを公開します。</target>
        </trans-unit>
        <trans-unit id="9e4d9b16942d5b75bdd5f354526f4db3341ccc2b" translate="yes" xml:space="preserve">
          <source>Publishes the package contained in the specified folder. &lt;code&gt;&amp;lt;folder&amp;gt;/package.json&lt;/code&gt; should specify the package details.</source>
          <target state="translated">指定したフォルダーに含まれるパッケージを公開します。 &lt;code&gt;&amp;lt;folder&amp;gt;/package.json&lt;/code&gt; はパッケージの詳細を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="1f91508b5fffcaf04faabbc44343be4bd5cecc92" translate="yes" xml:space="preserve">
          <source>Publishes the package defined by a &lt;code&gt;.tgz&lt;/code&gt; gzipped tarball.</source>
          <target state="translated">&lt;code&gt;.tgz&lt;/code&gt; gzipped tarballで定義されたパッケージを公開します。</target>
        </trans-unit>
        <trans-unit id="7284067ffc06016892596227693e10f5ad187023" translate="yes" xml:space="preserve">
          <source>Publishes the package defined by the &lt;code&gt;package.json&lt;/code&gt; in the current directory.</source>
          <target state="translated">&lt;code&gt;package.json&lt;/code&gt; で定義されたパッケージを現在のディレクトリに公開します。</target>
        </trans-unit>
        <trans-unit id="338b45a6751558a0e49cb2d757f64736adc58f12" translate="yes" xml:space="preserve">
          <source>Publishing</source>
          <target state="translated">Publishing</target>
        </trans-unit>
        <trans-unit id="ec5a5c4535a32a0f51364b08a7b62982d5da8cd1" translate="yes" xml:space="preserve">
          <source>Publishing your package</source>
          <target state="translated">パッケージの公開</target>
        </trans-unit>
        <trans-unit id="5233d2320e67e5ad94cfece20e1d867460ba26d5" translate="yes" xml:space="preserve">
          <source>Query argument</source>
          <target state="translated">クエリ引数</target>
        </trans-unit>
        <trans-unit id="ad086cf55b834c375e209972840f1342401d8c41" translate="yes" xml:space="preserve">
          <source>Read more</source>
          <target state="translated">続きを読む</target>
        </trans-unit>
        <trans-unit id="10bbcf127bd443b91da28c03c0fbfc9d1999b7d4" translate="yes" xml:space="preserve">
          <source>Read more about the commands that can be used together with &lt;code&gt;yarn global&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;yarn global&lt;/code&gt; と一緒に使用できるコマンドについての詳細を読んでください：</target>
        </trans-unit>
        <trans-unit id="e7e1b13c285b30bb628be4b798f3d8280c21a9bf" translate="yes" xml:space="preserve">
          <source>Recursively verifies that the dependencies in &lt;code&gt;package.json&lt;/code&gt; are present in &lt;code&gt;node_modules&lt;/code&gt; and have the right version. This check does not consider &lt;code&gt;yarn.lock&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;package.json&lt;/code&gt; の依存関係が &lt;code&gt;node_modules&lt;/code&gt; に存在し、正しいバージョンであることを再帰的に確認します。このチェックでは、 &lt;code&gt;yarn.lock&lt;/code&gt; は考慮されません。</target>
        </trans-unit>
        <trans-unit id="26beafa22d80d51e24c242e50abf8d0f02a949cb" translate="yes" xml:space="preserve">
          <source>Remove a tag named &lt;code&gt;&amp;lt;tag&amp;gt;&lt;/code&gt; from a &lt;code&gt;&amp;lt;package&amp;gt;&lt;/code&gt; that is no longer in use.</source>
          <target state="translated">使用されなくなった &lt;code&gt;&amp;lt;package&amp;gt;&lt;/code&gt; から &lt;code&gt;&amp;lt;tag&amp;gt;&lt;/code&gt; という名前のタグを削除します。</target>
        </trans-unit>
        <trans-unit id="b7c9e1195862e9e8c8fed0e0d7e1507a5458c2ce" translate="yes" xml:space="preserve">
          <source>Remove a user from a team they belong to.</source>
          <target state="translated">所属するチームからユーザーを削除します。</target>
        </trans-unit>
        <trans-unit id="6a6c9e581a3ca2c04edb6ce476477441f1bf3edc" translate="yes" xml:space="preserve">
          <source>Removes the &lt;code&gt;&amp;lt;user&amp;gt;&lt;/code&gt; as an owner of the &lt;code&gt;&amp;lt;package&amp;gt;&lt;/code&gt;. You must already be an owner of the &lt;code&gt;&amp;lt;package&amp;gt;&lt;/code&gt; in order to run this command.</source>
          <target state="translated">&lt;code&gt;&amp;lt;package&amp;gt;&lt;/code&gt; の所有者として &lt;code&gt;&amp;lt;user&amp;gt;&lt;/code&gt; を削除します。このコマンドを実行するには、すでに &lt;code&gt;&amp;lt;package&amp;gt;&lt;/code&gt; の所有者である必要があります。</target>
        </trans-unit>
        <trans-unit id="23fa995a782aa7a87e1bc8e96cb87fc3bef1f505" translate="yes" xml:space="preserve">
          <source>Removing a dependency</source>
          <target state="translated">依存関係の削除</target>
        </trans-unit>
        <trans-unit id="176fbfe28afc416cf6645f53deffadd58fd432c0" translate="yes" xml:space="preserve">
          <source>Required Files</source>
          <target state="translated">必要なファイル</target>
        </trans-unit>
        <trans-unit id="1b0a0f761d29d555d4e1287b0a549f255a560d97" translate="yes" xml:space="preserve">
          <source>Results in the following defaults during the interactive session:</source>
          <target state="translated">対話型セッションでは、以下のデフォルト値が表示されます。</target>
        </trans-unit>
        <trans-unit id="150edca55abf8319e36b5150e153d616180a8a85" translate="yes" xml:space="preserve">
          <source>Retrieving the readme field</source>
          <target state="translated">readmeフィールドの取得</target>
        </trans-unit>
        <trans-unit id="9aae220d500bac9b3996ff2f7d0520dd236d7952" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;yarn unlink&lt;/code&gt; in the folder that was previously used to create a link.</source>
          <target state="translated">以前にリンクを作成するために使用されていたフォルダー内で &lt;code&gt;yarn unlink&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="269b1775304bb2ec44c9c2d50a529a18c59c9371" translate="yes" xml:space="preserve">
          <source>Run the executable located in the &lt;code&gt;bin&lt;/code&gt; field of the starter kit&amp;rsquo;s &lt;code&gt;package.json&lt;/code&gt;, forwarding any &lt;code&gt;&amp;lt;args&amp;gt;&lt;/code&gt; to it</source>
          <target state="translated">スターターキットの &lt;code&gt;package.json&lt;/code&gt; の &lt;code&gt;bin&lt;/code&gt; フィールドにある実行可能ファイルを実行し、 &lt;code&gt;&amp;lt;args&amp;gt;&lt;/code&gt; を転送します。</target>
        </trans-unit>
        <trans-unit id="3972b993f135ad3fffdabc2aa6a17510919ab57b" translate="yes" xml:space="preserve">
          <source>Run yarn install in offline mode.</source>
          <target state="translated">オフラインモードでyarnのインストールを実行します。</target>
        </trans-unit>
        <trans-unit id="fc648c4a3467eb7ddeb9ba174ffdec6ade0f6f07" translate="yes" xml:space="preserve">
          <source>Run yarn install without printing installation log.</source>
          <target state="translated">インストールログを印刷せずに yarn install を実行する。</target>
        </trans-unit>
        <trans-unit id="fd07da7185b2d7607b18df47c1ed35b2f5222ab0" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;yarn &amp;lt;command&amp;gt; --verbose&lt;/code&gt; will print verbose info for the execution (creating directories, copying files, HTTP requests, etc.).</source>
          <target state="translated">実行中の &lt;code&gt;yarn &amp;lt;command&amp;gt; --verbose&lt;/code&gt; 実行するための情報VERBOSE印刷します（ファイル等、HTTPリクエストを、コピーし、ディレクトリを作成）。</target>
        </trans-unit>
        <trans-unit id="04e788a49456be379397e20cfc34e4f44348acef" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;yarn &amp;lt;command&amp;gt; [&amp;lt;args&amp;gt;]&lt;/code&gt; will run the command, if it is matching a locally installed CLI. So you don&amp;rsquo;t need to setup user-defined scripts for simple use cases.</source>
          <target state="translated">実行中の &lt;code&gt;yarn &amp;lt;command&amp;gt; [&amp;lt;args&amp;gt;]&lt;/code&gt; 、それがローカルにインストールCLIを照合した場合、コマンドを実行します。したがって、簡単な使用例のためにユーザー定義のスクリプトを設定する必要はありません。</target>
        </trans-unit>
        <trans-unit id="e5e484a0f96d878b16531743d2511ec78a30a66f" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;yarn &amp;lt;script&amp;gt; [&amp;lt;args&amp;gt;]&lt;/code&gt; will run a user-defined &lt;code&gt;script&lt;/code&gt;. See &lt;a href=&quot;cli/run&quot;&gt;&lt;code&gt;yarn run&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">実行中の &lt;code&gt;yarn &amp;lt;script&amp;gt; [&amp;lt;args&amp;gt;]&lt;/code&gt; ユーザ定義実行する &lt;code&gt;script&lt;/code&gt; 。&lt;a href=&quot;cli/run&quot;&gt; &lt;code&gt;yarn run&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4cf21f04814426a5625c82236c4645da7cbd6321" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;yarn cache dir&lt;/code&gt; will print out the path where yarn&amp;rsquo;s global cache is currently stored.</source>
          <target state="translated">&lt;code&gt;yarn cache dir&lt;/code&gt; を実行すると、糸のグローバルキャッシュが現在格納されているパスが出力されます。</target>
        </trans-unit>
        <trans-unit id="518d9baf3eee4b7898a8b75351c2950f56bbc761" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;yarn remove foo&lt;/code&gt; will remove the package named &lt;code&gt;foo&lt;/code&gt; from your direct dependencies updating your &lt;code&gt;package.json&lt;/code&gt; and &lt;code&gt;yarn.lock&lt;/code&gt; files in the process.</source>
          <target state="translated">実行中の &lt;code&gt;yarn remove foo&lt;/code&gt; という名前のパッケージが削除されます &lt;code&gt;foo&lt;/code&gt; のあなたの更新あなたの直接の依存関係から &lt;code&gt;package.json&lt;/code&gt; と &lt;code&gt;yarn.lock&lt;/code&gt; プロセス内のファイルを。</target>
        </trans-unit>
        <trans-unit id="f0a67aef2e2dce7ec1facc47922c3c04f0740610" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;yarn version&lt;/code&gt; would look something like this:</source>
          <target state="translated">実行中の &lt;code&gt;yarn version&lt;/code&gt; は次のようになります。</target>
        </trans-unit>
        <trans-unit id="bc4872eddd5013e940bab511f110b020cfcaf478" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;yarn&lt;/code&gt; with no command will run &lt;code&gt;yarn install&lt;/code&gt;, passing through any provided flags.</source>
          <target state="translated">実行中の &lt;code&gt;yarn&lt;/code&gt; なしコマンドでは、実行される &lt;code&gt;yarn install&lt;/code&gt; 任意の提供のフラグを通過し、。</target>
        </trans-unit>
        <trans-unit id="bd6c4d45b1b1315692c70ccc54260b904381a19c" translate="yes" xml:space="preserve">
          <source>Running this command will clear the global cache. It will be populated again the next time &lt;code&gt;yarn&lt;/code&gt; or &lt;code&gt;yarn install&lt;/code&gt; is run. Additionally, you can specify one or more packages that you want to clean.</source>
          <target state="translated">このコマンドを実行すると、グローバルキャッシュがクリアされます。次回に &lt;code&gt;yarn&lt;/code&gt; または &lt;code&gt;yarn install&lt;/code&gt; が実行されたときに、再度設定されます。さらに、クリーンアップするパッケージを1つ以上指定できます。</target>
        </trans-unit>
        <trans-unit id="ccc924790ad3fad10682003cc3af220e2bbe6428" translate="yes" xml:space="preserve">
          <source>Running this command will do the same as &lt;code&gt;yarn run test -o --watch&lt;/code&gt;. Note that built-in cli commands will have preference over your scripts, so you shouldn&amp;rsquo;t always rely on this shortcut in other scripts</source>
          <target state="translated">このコマンドを実行すると、 &lt;code&gt;yarn run test -o --watch&lt;/code&gt; と同じことが行われます。組み込みのcliコマンドはスクリプトよりも優先されることに注意してください。そのため、他のスクリプトでは常にこのショートカットに依存するべきではありません。</target>
        </trans-unit>
        <trans-unit id="921be2eb636ad082b775903d257792f2ad76cc99" translate="yes" xml:space="preserve">
          <source>Running this command will execute &lt;code&gt;jest -o --watch&lt;/code&gt;.</source>
          <target state="translated">このコマンドを実行すると、 &lt;code&gt;jest -o --watch&lt;/code&gt; が実行されます。</target>
        </trans-unit>
        <trans-unit id="6a1411222809482e10d1fae58221b9c650e7364e" translate="yes" xml:space="preserve">
          <source>Running this command will execute the script named &lt;code&gt;&quot;test&quot;&lt;/code&gt; in your &lt;code&gt;package.json&lt;/code&gt;.</source>
          <target state="translated">このコマンドを実行すると、 &lt;code&gt;package.json&lt;/code&gt; 内の &lt;code&gt;&quot;test&quot;&lt;/code&gt; という名前のスクリプトが実行されます。</target>
        </trans-unit>
        <trans-unit id="ce8c0c954fc1ec3c2367b3696d440fabeeb4714c" translate="yes" xml:space="preserve">
          <source>Running this command will list environment variables available to the scripts at runtime.</source>
          <target state="translated">このコマンドを実行すると、実行時にスクリプトで利用可能な環境変数が一覧表示されます。</target>
        </trans-unit>
        <trans-unit id="66744c1f5fb1755ebf416faac319605f983e155a" translate="yes" xml:space="preserve">
          <source>Running this command will list, in alphabetical order all of the packages that were installed by &lt;code&gt;yarn&lt;/code&gt; or &lt;code&gt;yarn install&lt;/code&gt;, and give you the license (and URL to the source code) associated with each package.</source>
          <target state="translated">このコマンドを実行 &lt;code&gt;yarn install&lt;/code&gt; 、 &lt;code&gt;yarn&lt;/code&gt; またはyarn installによってインストールされたすべてのパッケージがアルファベット順に一覧表示され、各パッケージに関連付けられているライセンス（およびソースコードへのURL）が提供されます。</target>
        </trans-unit>
        <trans-unit id="e94af1fff940a759aab6d8a310417a42734fc7ca" translate="yes" xml:space="preserve">
          <source>Running this command will prompt you for your username and email for the &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm registry&lt;/a&gt;. It will &lt;strong&gt;not&lt;/strong&gt; ask for your password. Later when you run a command that requires authentication such as &lt;a href=&quot;publish&quot;&gt;&lt;code&gt;yarn publish&lt;/code&gt;&lt;/a&gt;, you will have to enter your password to do so.</source>
          <target state="translated">このコマンドを実行すると、ユーザー名と&lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npmレジストリの&lt;/a&gt;電子メールが要求されます。それはなり&lt;strong&gt;ません&lt;/strong&gt;パスワードの入力をお願いします。後で、&lt;a href=&quot;publish&quot;&gt; &lt;code&gt;yarn publish&lt;/code&gt; &lt;/a&gt;などの認証を必要とするコマンドを実行するときは、パスワードを入力する必要があります。</target>
        </trans-unit>
        <trans-unit id="562907945926a542e6ba765b66bd18f91a4f64f8" translate="yes" xml:space="preserve">
          <source>Running this command will return a sorted list of licenses from all the packages you have installed to the &lt;code&gt;stdout&lt;/code&gt;.</source>
          <target state="translated">このコマンドを実行すると、インストールしたすべてのパッケージから &lt;code&gt;stdout&lt;/code&gt; にライセンスのソートされたリストが返されます。</target>
        </trans-unit>
        <trans-unit id="5bf2977f04c4c1cf251f1a8ab3fb6b54c0afe3b9" translate="yes" xml:space="preserve">
          <source>Runs a defined package script.</source>
          <target state="translated">定義されたパッケージスクリプトを実行します。</target>
        </trans-unit>
        <trans-unit id="3eea9ff4f22a04e55278559b8f5ae5baff0c6b3f" translate="yes" xml:space="preserve">
          <source>Runs the test script defined by the package.</source>
          <target state="translated">パッケージで定義されたテストスクリプトを実行します。</target>
        </trans-unit>
        <trans-unit id="63c2d0c65feb17ef982b4c1d4cc31d0ec288424e" translate="yes" xml:space="preserve">
          <source>Scripts are a great way of automating tasks related to your package, such as simple build processes or development tools. Using the &lt;code&gt;&quot;scripts&quot;&lt;/code&gt; field, you can define various scripts to be run as &lt;code&gt;yarn run &amp;lt;script&amp;gt;&lt;/code&gt;. For example, the &lt;code&gt;build-project&lt;/code&gt; script above can be invoked with &lt;code&gt;yarn run build-project&lt;/code&gt; and will run &lt;code&gt;node build-project.js&lt;/code&gt;.</source>
          <target state="translated">スクリプトは、単純なビルドプロセスや開発ツールなど、パッケージに関連するタスクを自動化する優れた方法です。 &lt;code&gt;&quot;scripts&quot;&lt;/code&gt; フィールドを使用すると、 &lt;code&gt;yarn run &amp;lt;script&amp;gt;&lt;/code&gt; として実行されるさまざまなスクリプトを定義できます。たとえば、上記の &lt;code&gt;build-project&lt;/code&gt; スクリプトは、 &lt;code&gt;yarn run build-project&lt;/code&gt; で呼び出すことができ、 &lt;code&gt;node build-project.js&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="0b9be4d6b752408b28609d91b3621bf6ac5d6560" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;cli/install&quot;&gt;the full list&lt;/a&gt; of flags you can pass to &lt;code&gt;yarn install&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;yarn install&lt;/code&gt; 渡すことができるフラグ&lt;a href=&quot;cli/install&quot;&gt;の完全なリスト&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="f8ba8bea47b60e36721d1c8ef5c154a3c1de6c13" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/yarnpkg/rfcs/blob/master/implemented/0000-selective-versions-resolutions.md&quot;&gt;the Selective Versions Resolutions RFC&lt;/a&gt; for the full spec.</source>
          <target state="translated">完全な仕様について&lt;a href=&quot;https://github.com/yarnpkg/rfcs/blob/master/implemented/0000-selective-versions-resolutions.md&quot;&gt;は、Selective Versions Resolutions RFC&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="1b7bb94cde8d28c71e7a84f3c2b23543b86dc456" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/yarnpkg/yarn/releases&quot;&gt;the releases&lt;/a&gt; for possible versions.</source>
          <target state="translated">可能なバージョンについて&lt;a href=&quot;https://github.com/yarnpkg/yarn/releases&quot;&gt;は、リリース&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="8639741458b2d87ece146b82879edc8a0a5f06db" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://yarnpkg.com/blog/2016/11/24/lockfiles-for-all/&quot;&gt;https://yarnpkg.com/blog/2016/11/24/lockfiles-for-all/&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://yarnpkg.com/blog/2016/11/24/lockfiles-for-all/&quot;&gt;https://yarnpkg.com/blog/2016/11/24/lockfiles-for-all/を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="0e2c082c3fc42d2c4ffb99056d179a9d0c7e0321" translate="yes" xml:space="preserve">
          <source>Selecting specific fields</source>
          <target state="translated">特定のフィールドを選択する</target>
        </trans-unit>
        <trans-unit id="ca4f83624a3e9252e342549b6518f1fce66ee332" translate="yes" xml:space="preserve">
          <source>Semantic Versioning</source>
          <target state="translated">セマンティックバージョニング</target>
        </trans-unit>
        <trans-unit id="cc4ba39bfd43910a27396f01d3bd32565a947f95" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;cache-folder&lt;/code&gt; config value to configure the cache directory.</source>
          <target state="translated">セット &lt;code&gt;cache-folder&lt;/code&gt; キャッシュディレクトリを設定するための設定値。</target>
        </trans-unit>
        <trans-unit id="fb042a078d65d59190316b56e3209d13ff4d877b" translate="yes" xml:space="preserve">
          <source>Sets the config &lt;code&gt;key&lt;/code&gt; to a certain &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">設定 &lt;code&gt;key&lt;/code&gt; を特定の &lt;code&gt;value&lt;/code&gt; 設定します。</target>
        </trans-unit>
        <trans-unit id="d369fe5f4f28bde00ee8369f505a61ae6da434a4" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;--&amp;lt;command&amp;gt;.&amp;lt;flag&amp;gt; &amp;lt;value&amp;gt;&lt;/code&gt; in .yarnrc would be the same as running &lt;code&gt;yarn &amp;lt;command&amp;gt; --&amp;lt;flag&amp;gt; &amp;lt;value&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">設定 &lt;code&gt;--&amp;lt;command&amp;gt;.&amp;lt;flag&amp;gt; &amp;lt;value&amp;gt;&lt;/code&gt; .yarnrcが実行するのと同じであろうに &lt;code&gt;yarn &amp;lt;command&amp;gt; --&amp;lt;flag&amp;gt; &amp;lt;value&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6305015518db8e345b2fbf6b210588aed8e447e4" translate="yes" xml:space="preserve">
          <source>Setting defaults for &lt;code&gt;yarn init&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;yarn init&lt;/code&gt; デフォルトの設定</target>
        </trans-unit>
        <trans-unit id="85303644263bf3e70bf97c0b89c9e7f989085480" translate="yes" xml:space="preserve">
          <source>Setting this number to 1 will cause the node modules to be built sequentially which can avoid linker errors on windows with node-gyp.</source>
          <target state="translated">この数値を1に設定すると、ノードモジュールが順次ビルドされるようになり、node-gypを使用しているウィンドウでのリンカエラーを回避することができます。</target>
        </trans-unit>
        <trans-unit id="defed1017b0539abca3648a3c40d6b76de191e19" translate="yes" xml:space="preserve">
          <source>Setting this to &lt;code&gt;false&lt;/code&gt; will enable the &lt;code&gt;yarn.lock&lt;/code&gt; checksum migration (enabling sha512 support). Causes lockfile format change. This will be the default starting from version &lt;code&gt;2.0&lt;/code&gt;.</source>
          <target state="translated">これを &lt;code&gt;false&lt;/code&gt; に設定すると、 &lt;code&gt;yarn.lock&lt;/code&gt; チェックサムの移行が有効になります（sha512サポートが有効になります）。ロックファイルのフォーマットを変更します。これは、バージョン &lt;code&gt;2.0&lt;/code&gt; 以降のデフォルトになります。</target>
        </trans-unit>
        <trans-unit id="6547cc0a898c4e739faac0ba9645fddbf6351fbf" translate="yes" xml:space="preserve">
          <source>Shallowly installs a package&amp;rsquo;s sibling workspace dependencies underneath its &lt;code&gt;node_modules&lt;/code&gt; folder. This allows you to run that workspace without building the other workspaces it depends on.</source>
          <target state="translated">パッケージの兄弟ワークスペースの依存関係を、 &lt;code&gt;node_modules&lt;/code&gt; フォルダーの下に浅くインストールします。これにより、依存する他のワークスペースを構築せずに、そのワークスペースを実行できます。</target>
        </trans-unit>
        <trans-unit id="f23d93e854bf1177e3b54caf79cc1f62ebff292a" translate="yes" xml:space="preserve">
          <source>Show information about a package.</source>
          <target state="translated">パッケージの情報を表示します。</target>
        </trans-unit>
        <trans-unit id="10ad4c4873cdc77277e413c0e33fd5f378c39225" translate="yes" xml:space="preserve">
          <source>Show information about why a package is installed.</source>
          <target state="translated">パッケージがインストールされている理由についての情報を表示します。</target>
        </trans-unit>
        <trans-unit id="d659b0db44cbb741ee592afb7de0494f04ca18ad" translate="yes" xml:space="preserve">
          <source>Show information about your workspaces.</source>
          <target state="translated">ワークスペースの情報を表示します。</target>
        </trans-unit>
        <trans-unit id="2a6d28c0082943d13c623ab7ba52ec1184c00753" translate="yes" xml:space="preserve">
          <source>Skips the prompt for new version by using the value of &lt;code&gt;version&lt;/code&gt; instead.</source>
          <target state="translated">代わりに &lt;code&gt;version&lt;/code&gt; の値を使用して、新しいバージョンのプロンプトをスキップします。</target>
        </trans-unit>
        <trans-unit id="9f2cc5f2ccd1d92c4d976da78c2cdf893b3723d5" translate="yes" xml:space="preserve">
          <source>So enabling PnP isn&amp;rsquo;t complicated at all - what might be an issue are third-party packages that reimplement the Node resolution themselves. Three major implementations exist, more might also hide from a project to another:</source>
          <target state="translated">したがって、PnPを有効にすることはまったく複雑ではありません-問題となる可能性があるのは、ノード解決自体を再実装するサードパーティパッケージです。3つの主要な実装が存在し、さらに多くのものがプロジェクトから別のプロジェクトに隠れている場合もあります。</target>
        </trans-unit>
        <trans-unit id="afca97234e23b7aa14e6480d13ad234044329797" translate="yes" xml:space="preserve">
          <source>Solus</source>
          <target state="translated">Solus</target>
        </trans-unit>
        <trans-unit id="044ab1680efc57bc4d758e5f881bc4921dd7d98e" translate="yes" xml:space="preserve">
          <source>Some projects will make up their own tags as they see appropriate or in place of one of the more standard ones. Such as &lt;code&gt;next&lt;/code&gt; which is used the same as &lt;code&gt;beta&lt;/code&gt;.</source>
          <target state="translated">一部のプロジェクトは、適切であるか、より標準的なタグの代わりに、独自のタグを作成します。 &lt;code&gt;beta&lt;/code&gt; と同じように使用される &lt;code&gt;next&lt;/code&gt; ような。</target>
        </trans-unit>
        <trans-unit id="357cb99534dccf249a2c762ef752d49d606aa65d" translate="yes" xml:space="preserve">
          <source>Specifies an alternate location for the &lt;code&gt;node_modules&lt;/code&gt; directory, instead of the default &lt;code&gt;./node_modules&lt;/code&gt;.</source>
          <target state="translated">デフォルトの &lt;code&gt;./node_modules&lt;/code&gt; の代わりに、 &lt;code&gt;node_modules&lt;/code&gt; ディレクトリの代替の場所を指定します。</target>
        </trans-unit>
        <trans-unit id="635c2c33d3317b3970cc78310c69075c61c032c9" translate="yes" xml:space="preserve">
          <source>Store registry username and email.</source>
          <target state="translated">レジストリのユーザー名と電子メールを保存します。</target>
        </trans-unit>
        <trans-unit id="bf92cb89e90128d7b50f6639c8d248880a7fd4bb" translate="yes" xml:space="preserve">
          <source>Symlink a package folder during development.</source>
          <target state="translated">開発中にパッケージフォルダをシンリンクします。</target>
        </trans-unit>
        <trans-unit id="bc0792d8dc81e8aa30b987246a5ce97c40cd6833" translate="yes" xml:space="preserve">
          <source>System</source>
          <target state="translated">System</target>
        </trans-unit>
        <trans-unit id="090ec5f560fc50377fcd95e5cda128e91b276e98" translate="yes" xml:space="preserve">
          <source>Tasks</source>
          <target state="translated">Tasks</target>
        </trans-unit>
        <trans-unit id="2095dcddc32d0867eb3dae617694afe78763cb6d" translate="yes" xml:space="preserve">
          <source>Test out this versioning system on actual packages using the &lt;a href=&quot;https://semver.npmjs.com/&quot;&gt;npm semver calculator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://semver.npmjs.com/&quot;&gt;npm semver計算機&lt;/a&gt;を使用して、実際のパッケージでこのバージョン管理システムをテストしてください。</target>
        </trans-unit>
        <trans-unit id="1f7ed4f7c7b6f572b85c62e60857fb621c6ea36e" translate="yes" xml:space="preserve">
          <source>Test that Yarn is installed by running:</source>
          <target state="translated">実行してYarnがインストールされていることをテストします。</target>
        </trans-unit>
        <trans-unit id="33c87adb23589926c156016f36ce0a67569db15e" translate="yes" xml:space="preserve">
          <source>That being said, it might happen that the use is pseudo-legitimate. For example, Jest does something similar to &lt;code&gt;require(`jest-environment-${config.environment}`)&lt;/code&gt; - in this circumstances the intent is obviously to use the package as provided by the package setting up the package configuration. Still, this is an unsafe behavior that must be fixed in one of three ways:</source>
          <target state="translated">そうは言っても、その使用は疑似正当なものである可能性があります。たとえば、Jestは &lt;code&gt;require(`jest-environment-${config.environment}`)&lt;/code&gt; と同様のことを行います-この状況では、パッケージ構成をセットアップするパッケージによって提供されるパッケージを使用することが明らかに意図されています。それでも、これは危険な動作であり、次の3つの方法のいずれかで修正する必要があります。</target>
        </trans-unit>
        <trans-unit id="a7f2ef062728df3334d7f0368a2d4c8dd841bd4b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--access&lt;/code&gt; flag controls whether the npm registry publishes this package as a public package, or restricted.</source>
          <target state="translated">&lt;code&gt;--access&lt;/code&gt; フラグコントロールNPMレジストリは、公開パッケージとしてこのパッケージを公開する、または制限するかどうか。</target>
        </trans-unit>
        <trans-unit id="1d9499c28dea251e873283ab8ef53ed168bcca31" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[version]&lt;/code&gt; or &lt;code&gt;[tag]&lt;/code&gt; will be what gets added to your &lt;code&gt;package.json&lt;/code&gt; and then resolved against when installing the dependency.</source>
          <target state="translated">&lt;code&gt;[version]&lt;/code&gt; または &lt;code&gt;[tag]&lt;/code&gt; 、あなたに追加されますどのようになります &lt;code&gt;package.json&lt;/code&gt; して、依存関係をインストールするときに対して解決します。</target>
        </trans-unit>
        <trans-unit id="a8d05cdb0ae8e70d4dd0bff2889115c756ba650b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;autoclean&lt;/code&gt; command frees up space by removing unnecessary files and folders from dependencies. It reduces the number of files in your project&amp;rsquo;s &lt;code&gt;node_modules&lt;/code&gt; folder which is useful in an environment where packages are checked into version control directly.</source>
          <target state="translated">&lt;code&gt;autoclean&lt;/code&gt; コマンドは、依存関係から不要なファイルやフォルダを削除することでスペースを解放します。これにより、プロジェクトの &lt;code&gt;node_modules&lt;/code&gt; フォルダー内のファイルの数が減り、パッケージがバージョン管理に直接チェックインされる環境で役立ちます。</target>
        </trans-unit>
        <trans-unit id="7ac195077d3b5caa220b98c0ffb0234410e90a66" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;node_modules&lt;/code&gt; directory contains a gargantuan amount of files. Generating it makes up for more than 70% of the time needed to run &lt;code&gt;yarn install&lt;/code&gt; with a hot cache. Because the copy is I/O bound, it&amp;rsquo;s not like package managers can really optimize it either - we can use hardlinks or copy-on-write, but even then we still need to make a bunch of syscalls that slow us down dramatically.</source>
          <target state="translated">&lt;code&gt;node_modules&lt;/code&gt; のディレクトリは、ファイルの巨大な量が含まれています。これを生成 &lt;code&gt;yarn install&lt;/code&gt; と、ホットキャッシュを使用して糸のインストールを実行するのに必要な時間の70％以上を占めます。コピーはI / Oバウンドであるため、パッケージマネージャーが実際に最適化できるようなものではありません。ハードリンクやコピーオンライトを使用できますが、それでも、劇的に速度を低下させる一連のシステムコールを作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="e04e70ed742bdc4dc81270d3958768d0aea75a97" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;package.json&lt;/code&gt; file will be updated to reflect the latest version range. By default, the existing range specifier in &lt;code&gt;package.json&lt;/code&gt; will be reused if it is one of: ^, ~, &amp;lt;=, &amp;gt;, or an exact version. Otherwise, it will be changed to a caret (^). One of the flags &lt;code&gt;--caret&lt;/code&gt;, &lt;code&gt;--tilde&lt;/code&gt; or &lt;code&gt;--exact&lt;/code&gt; can be used to explicitly specify a range.</source>
          <target state="translated">&lt;code&gt;package.json&lt;/code&gt; のファイルには、最新バージョンの範囲を反映するように更新されます。デフォルトでは、 &lt;code&gt;package.json&lt;/code&gt; の既存の範囲指定子は、^、〜、&amp;lt;=、&amp;gt;、または正確なバージョンのいずれかである場合に再利用されます。それ以外の場合は、キャレット（^）に変更されます。フラグ &lt;code&gt;--caret&lt;/code&gt; 、 &lt;code&gt;--tilde&lt;/code&gt; tilde、または &lt;code&gt;--exact&lt;/code&gt; のいずれかを使用して、範囲を明示的に指定できます。</target>
        </trans-unit>
        <trans-unit id="879aea733179c3db0c0f7c08e40aab183779e1b2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;start&lt;/code&gt; script value defaults to &lt;code&gt;node server.js&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; へのスクリプト値のデフォルト &lt;code&gt;node server.js&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c0b689ca381cb494eee1d46f1b9c1bd10babce97" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;upgrade --latest&lt;/code&gt; command upgrades packages the same as the &lt;code&gt;upgrade&lt;/code&gt; command, but ignores the version range specified in &lt;code&gt;package.json&lt;/code&gt;. Instead, the version specified by the &lt;code&gt;latest&lt;/code&gt; tag will be used (potentially upgrading the packages across major versions).</source>
          <target state="translated">&lt;code&gt;upgrade --latest&lt;/code&gt; コマンドのアップグレードパッケージと同じ &lt;code&gt;upgrade&lt;/code&gt; コマンドが、はで指定されたバージョンの範囲無視 &lt;code&gt;package.json&lt;/code&gt; を。代わりに、 &lt;code&gt;latest&lt;/code&gt; タグで指定されたバージョンが使用されます（メジャーバージョン間でパッケージをアップグレードする可能性があります）。</target>
        </trans-unit>
        <trans-unit id="7501ec1e52cfb19a7d4f99d186e5dfc38daced10" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;upgrade-interactive&lt;/code&gt; command takes the same parameters as, and functions the same as the base &lt;code&gt;upgrade&lt;/code&gt; command. This command will display the outdated packages before performing any upgrade, allowing the user to select which packages to upgrade. Yarn will respect the version ranges in &lt;code&gt;package.json&lt;/code&gt; when determining the version to upgrade to.</source>
          <target state="translated">&lt;code&gt;upgrade-interactive&lt;/code&gt; コマンドは、同じパラメータを受け取り、ベースとして機能する同じ &lt;code&gt;upgrade&lt;/code&gt; コマンド。このコマンドは、アップグレードを実行する前に古いパッケージを表示し、ユーザーはアップグレードするパッケージを選択できます。Yarnは、アップグレードするバージョンを決定するときに、 &lt;code&gt;package.json&lt;/code&gt; のバージョン範囲を尊重します。</target>
        </trans-unit>
        <trans-unit id="79d1727deec1067b545588731f0dfcb109e29653" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;workspaces&lt;/code&gt; field is an array containing the paths to each workspace. Since it might be tedious to keep track of each of them, this field also accepts glob patterns! For example, Babel reference all of their packages through a single &lt;code&gt;packages/*&lt;/code&gt; directive.</source>
          <target state="translated">&lt;code&gt;workspaces&lt;/code&gt; フィールドは、各ワークスペースへのパスを含む配列です。それぞれを追跡するのは面倒な場合があるため、このフィールドはグロブパターンも受け入れます。たとえば、Babelは単一の &lt;code&gt;packages/*&lt;/code&gt; ディレクティブを介してすべてのパッケージを参照します。</target>
        </trans-unit>
        <trans-unit id="c03abef2f862dbf11fe0259858486fdc1e2c2ac3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;yarn list&lt;/code&gt; command mimics the expected Unix behavior of listing. In Yarn, the &lt;code&gt;list&lt;/code&gt; command lists all dependencies for the current working directory by referencing all package manager meta data files, which includes a project&amp;rsquo;s dependencies.</source>
          <target state="translated">&lt;code&gt;yarn list&lt;/code&gt; コマンドを模倣リストの予想Unixの振る舞い。Yarnでは、 &lt;code&gt;list&lt;/code&gt; コマンドは、プロジェクトの依存関係を含むすべてのパッケージマネージャーメタデータファイルを参照することにより、現在の作業ディレクトリのすべての依存関係をリストします。</target>
        </trans-unit>
        <trans-unit id="da577870c2d4a509053f334b1274eff3640b83e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;yarn.lock&lt;/code&gt; file is utilized as follows:</source>
          <target state="translated">&lt;code&gt;yarn.lock&lt;/code&gt; の次のようにファイルが利用されています：</target>
        </trans-unit>
        <trans-unit id="29368d75acf2e645e317dc68bc0f713583279b44" translate="yes" xml:space="preserve">
          <source>The URL to your project&amp;rsquo;s issue tracker. This can also be something like an email address as well. It provides users a way to find out where to send issues with your package.</source>
          <target state="translated">プロジェクトの課題追跡へのURL。これは、メールアドレスのようなものにすることもできます。これにより、ユーザーはパッケージの問題をどこに送信するかを見つけることができます。</target>
        </trans-unit>
        <trans-unit id="bc67cf2e7661c1de620475fb393dd15a55b02f78" translate="yes" xml:space="preserve">
          <source>The Yarn Workflow</source>
          <target state="translated">ヤーンワークフロー</target>
        </trans-unit>
        <trans-unit id="5a2cafc88ede3f6c75601d8b845acb66735420e3" translate="yes" xml:space="preserve">
          <source>The Yarn organization is a collaboration of many companies and individuals dedicated to improving your package management experience.</source>
          <target state="translated">ヤーン組織は、多くの企業や個人が協力して、お客様のパッケージ管理の経験を向上させることを目的としています。</target>
        </trans-unit>
        <trans-unit id="a508fde40d72545c7cbc61c92c96cdf37c11a4cb" translate="yes" xml:space="preserve">
          <source>The actual source code that provides the functionality for your package.</source>
          <target state="translated">パッケージの機能を提供する実際のソースコードです。</target>
        </trans-unit>
        <trans-unit id="4112298ed4c969c27046e8a1b6617bcabba61457" translate="yes" xml:space="preserve">
          <source>The clean is performed by reading each line of the &lt;code&gt;.yarnclean&lt;/code&gt; file and using each as a glob pattern of files to delete.</source>
          <target state="translated">クリーンアップは、 &lt;code&gt;.yarnclean&lt;/code&gt; ファイルの各行を読み取り、削除するファイルのグロブパターンとしてそれぞれを使用して実行されます。</target>
        </trans-unit>
        <trans-unit id="10405b9af377b32da79512d4109e3f51571b7a21" translate="yes" xml:space="preserve">
          <source>The command accepts various ways to set which version you want to use:</source>
          <target state="translated">コマンドは、どのバージョンを使用するかを設定するための様々な方法を受け付けています。</target>
        </trans-unit>
        <trans-unit id="ad2dfeddf1ce736ea5b8d541eb590d8adf3ca7be" translate="yes" xml:space="preserve">
          <source>The command run should look something like this:</source>
          <target state="translated">コマンド実行は以下のようになっているはずです。</target>
        </trans-unit>
        <trans-unit id="9ca0bfc051fb39c5c5ab40ae12cb55ea7dac8881" translate="yes" xml:space="preserve">
          <source>The command will exit with a non-0 exit code if there are issues of any severity found. The exit code will be a mask of the severities.</source>
          <target state="translated">重大度の問題が見つかった場合、コマンドは0以外の終了コードで終了します。終了コードは重大度のマスクになります。</target>
        </trans-unit>
        <trans-unit id="2bccc945d18f3d1d1d9872e176434726cb270bd6" translate="yes" xml:space="preserve">
          <source>The current version of your package.</source>
          <target state="translated">お使いのパッケージの現在のバージョンです。</target>
        </trans-unit>
        <trans-unit id="9d10b424b104a0e73bd1e7adecc24f41cff6ab8a" translate="yes" xml:space="preserve">
          <source>The dedupe command isn&amp;rsquo;t necessary. &lt;code&gt;yarn install&lt;/code&gt; will already dedupe.</source>
          <target state="translated">重複排除コマンドは必要ありません。 &lt;code&gt;yarn install&lt;/code&gt; はすでに重複排除されます。</target>
        </trans-unit>
        <trans-unit id="7fd2d0858d2f77f913a9110716db992d030f07f5" translate="yes" xml:space="preserve">
          <source>The default reporting style for this command is a single-quoted serialization. To emit lines of valid JSON, use the standard &lt;code&gt;--json&lt;/code&gt; flag:</source>
          <target state="translated">このコマンドのデフォルトのレポートスタイルは、単一引用符で囲まれたシリアル化です。有効なJSONの行を出力するには、標準の &lt;code&gt;--json&lt;/code&gt; フラグを使用します。</target>
        </trans-unit>
        <trans-unit id="8c3ffe7b35c28b6091bd43aa7266be0d277597e1" translate="yes" xml:space="preserve">
          <source>The description is just a string that helps people understand the purpose of the package. It can be used when searching for packages in a package manager as well.</source>
          <target state="translated">説明文は、パッケージの目的を理解するのに役立つ文字列にすぎません。パッケージマネージャでパッケージを検索するときにも使えます。</target>
        </trans-unit>
        <trans-unit id="287635fc28bb4d0f9a1461a9aecf89868620a524" translate="yes" xml:space="preserve">
          <source>The engines specify versions of clients that must be used with your package. This checks against &lt;code&gt;process.versions&lt;/code&gt; as well as the current version of yarn.</source>
          <target state="translated">エンジンは、パッケージで使用する必要があるクライアントのバージョンを指定します。これにより、 &lt;code&gt;process.versions&lt;/code&gt; と現在のバージョンのヤーンがチェックされます。</target>
        </trans-unit>
        <trans-unit id="dbce691d2eb4f44688e36e1fac077962bdff3d90" translate="yes" xml:space="preserve">
          <source>The example above would remove &lt;code&gt;some-package&lt;/code&gt; from &lt;code&gt;packages/web-project/package.json&lt;/code&gt;.</source>
          <target state="translated">上記の例では、 &lt;code&gt;packages/web-project/package.json&lt;/code&gt; から &lt;code&gt;some-package&lt;/code&gt; を削除します。</target>
        </trans-unit>
        <trans-unit id="1ecdbc9d96a2d6d9786e3f49fe9c8f1fdfcd3cc3" translate="yes" xml:space="preserve">
          <source>The fields you see in the &lt;code&gt;package.json&lt;/code&gt; have the following meanings:</source>
          <target state="translated">&lt;code&gt;package.json&lt;/code&gt; に表示されるフィールドには、次の意味があります。</target>
        </trans-unit>
        <trans-unit id="b9926c0754b6b5dc482577a7c0e2176c10c2c18d" translate="yes" xml:space="preserve">
          <source>The file locations can also be absolute.</source>
          <target state="translated">また、ファイルの場所は絶対値にすることもできます。</target>
        </trans-unit>
        <trans-unit id="a410a8127ce87b8b0d685a06e84638d7fd3c3848" translate="yes" xml:space="preserve">
          <source>The following &lt;a href=&quot;config&quot;&gt;config&lt;/a&gt; variables can be used to customize the defaults for &lt;code&gt;yarn init&lt;/code&gt;:</source>
          <target state="translated">以下の&lt;a href=&quot;config&quot;&gt;設定&lt;/a&gt;変数は、のデフォルト値をカスタマイズするために使用することができ &lt;code&gt;yarn init&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="f4a2bdb1a0b99e69b7f7f85bd4ef3b18d617313f" translate="yes" xml:space="preserve">
          <source>The following existing &lt;code&gt;package.json&lt;/code&gt;:</source>
          <target state="translated">次の既存の &lt;code&gt;package.json&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="5a96ab3973f5244c485434a4a51851f4f0e3a398" translate="yes" xml:space="preserve">
          <source>The following files must be checked into source control for anyone to be able to manage your package:</source>
          <target state="translated">以下のファイルは、誰もがパッケージを管理できるようにするためにソースコントロールにチェックを入れなければなりません。</target>
        </trans-unit>
        <trans-unit id="1400aa530eb7497da80cc5196ed20ef6b6a514b6" translate="yes" xml:space="preserve">
          <source>The homepage is the URL to the landing page or documentation for your package.</source>
          <target state="translated">ホームページは、あなたのパッケージのランディングページやドキュメントへのURLです。</target>
        </trans-unit>
        <trans-unit id="5d39ea365d15b31f8f9575b3680e9bbc135ce6f2" translate="yes" xml:space="preserve">
          <source>The installation process includes verifying a GPG signature. &lt;a href=&quot;https://github.com/yarnpkg/website/blob/master/install.sh&quot;&gt;View the source on GitHub&lt;/a&gt;</source>
          <target state="translated">インストールプロセスには、GPG署名の検証が含まれます。&lt;a href=&quot;https://github.com/yarnpkg/website/blob/master/install.sh&quot;&gt;GitHubでソースを表示する&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="30c53ef078ec52619ca62888017fd0f847439683" translate="yes" xml:space="preserve">
          <source>The lockfile command isn&amp;rsquo;t necessary. &lt;code&gt;yarn install&lt;/code&gt; will produce a lockfile.</source>
          <target state="translated">lockfileコマンドは必要ありません。 &lt;code&gt;yarn install&lt;/code&gt; はロックファイルを生成します。</target>
        </trans-unit>
        <trans-unit id="d3e2ecc10e40f1fbb73c28d00c0f66284b1c714c" translate="yes" xml:space="preserve">
          <source>The maintainers of your project.</source>
          <target state="translated">あなたのプロジェクトのメンテナーです。</target>
        </trans-unit>
        <trans-unit id="de9b9446f97c30e96b38378bb9c095d58cec62f0" translate="yes" xml:space="preserve">
          <source>The mandatory query argument for &lt;code&gt;yarn why&lt;/code&gt; can be any of:</source>
          <target state="translated">&lt;code&gt;yarn why&lt;/code&gt; の必須クエリ引数は、次のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="3096827d9832e56c9fa92076b6ce7983a2969d52" translate="yes" xml:space="preserve">
          <source>The package layout will be different between your workspace and what your users will get (the workspace dependencies will be hoisted higher into the filesystem hierarchy). Making assumptions about this layout was already hazardous since the hoisting process is not standardized, so theoretically nothing new here. If you encounter issues, try using &lt;a href=&quot;https://yarnpkg.com/blog/2018/02/15/nohoist/&quot;&gt;the &lt;code&gt;nohoist&lt;/code&gt; option&lt;/a&gt;</source>
          <target state="translated">パッケージレイアウトは、ワークスペースとユーザーが取得するものとでは異なります（ワークスペースの依存関係はファイルシステム階層の上位に引き上げられます）。吊り上げプロセスは標準化されていないため、このレイアウトについての仮定はすでに危険でした。問題が発生した場合は&lt;a href=&quot;https://yarnpkg.com/blog/2018/02/15/nohoist/&quot;&gt;、&lt;/a&gt; &lt;code&gt;nohoist&lt;/code&gt; オプションを使用してみてください</target>
        </trans-unit>
        <trans-unit id="549f7f9ea0914ce7bcf5be7b0139f18d35193004" translate="yes" xml:space="preserve">
          <source>The prune command isn&amp;rsquo;t necessary. &lt;code&gt;yarn install&lt;/code&gt; will prune extraneous packages.</source>
          <target state="translated">pruneコマンドは必要ありません。 &lt;code&gt;yarn install&lt;/code&gt; は無関係なパッケージを取り除きます。</target>
        </trans-unit>
        <trans-unit id="80c47f4c5101433baee61199d199fa0cf5bd5b8c" translate="yes" xml:space="preserve">
          <source>The purpose of a version range is to specify which versions of a dependency will work for your code.</source>
          <target state="translated">バージョン範囲の目的は、どのバージョンの依存関係があなたのコードで動作するかを指定することです。</target>
        </trans-unit>
        <trans-unit id="8fd204d4e43b8d19d91c24e9cae59f6e185eb274" translate="yes" xml:space="preserve">
          <source>The repository is the location where the actual code for your package lives.</source>
          <target state="translated">リポジトリは、パッケージの実際のコードが存在する場所です。</target>
        </trans-unit>
        <trans-unit id="e45dce406fa901864eccd85caad42226fd4dc9e0" translate="yes" xml:space="preserve">
          <source>The switches &lt;code&gt;--integrity&lt;/code&gt; and &lt;code&gt;--verify-tree&lt;/code&gt; are mutually exclusive.</source>
          <target state="translated">スイッチ &lt;code&gt;--integrity&lt;/code&gt; および &lt;code&gt;--verify-tree&lt;/code&gt; は相互に排他的です。</target>
        </trans-unit>
        <trans-unit id="7dff61546b87496b4628447592bfa66a0a5ab5c7" translate="yes" xml:space="preserve">
          <source>The third option is typically meant as a way to unblock yourself, but please report it on the repository of the affected package and link them to this documentation (feel free to ping &lt;a href=&quot;https://github.com/arcanis&quot;&gt;@arcanis&lt;/a&gt; as well so that we can track those problems).</source>
          <target state="translated">3番目のオプションは、通常、自分のブロックを解除する方法として意図されていますが、影響を受けるパッケージのリポジトリで報告し、それらをこのドキュメントにリンクしてください（これらの問題を追跡できるように、&lt;a href=&quot;https://github.com/arcanis&quot;&gt;@ arcanis&lt;/a&gt;にもpingしてください）。</target>
        </trans-unit>
        <trans-unit id="e511fb09b1ed618cbb859cc20f4afcd599547186" translate="yes" xml:space="preserve">
          <source>The two most important fields in your &lt;code&gt;package.json&lt;/code&gt; are &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;version&lt;/code&gt;, without them your package won&amp;rsquo;t be able to install. The &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;version&lt;/code&gt; fields are used together to create a unique id.</source>
          <target state="translated">&lt;code&gt;package.json&lt;/code&gt; の最も重要な2つのフィールドは &lt;code&gt;name&lt;/code&gt; と &lt;code&gt;version&lt;/code&gt; です。これらのフィールドがないと、パッケージをインストールできません。 &lt;code&gt;name&lt;/code&gt; と &lt;code&gt;version&lt;/code&gt; のフィールドは一意のIDを作成するために一緒に使用されています。</target>
        </trans-unit>
        <trans-unit id="e2613c84af347653119b02bd2d31cc2a3e239b10" translate="yes" xml:space="preserve">
          <source>The way regular installs work is simple: Yarn generates a &lt;code&gt;node_modules&lt;/code&gt; directory that Node is then able to consume. In this context, Node doesn&amp;rsquo;t know the first thing about what a package is: it only reasons in terms of files. &amp;ldquo;Does this file exist here? No? Let&amp;rsquo;s look in the parent &lt;code&gt;node_modules&lt;/code&gt; then. Does it exist here? Still no? Too bad&amp;hellip; parent folder it is!&amp;rdquo; - and it does this until it matches something that matches one of the possibilities. That&amp;rsquo;s vastly inefficient.</source>
          <target state="translated">通常のインストールの動作は簡単です &lt;code&gt;node_modules&lt;/code&gt; はnode_modulesディレクトリを生成し、Nodeはこのディレクトリを使用できます。この文脈では、Nodeはパッケージが何であるかについての最初のことを知りません：それはファイルの観点からの理由だけです。「このファイルはここにありますか？番号？次に、親の &lt;code&gt;node_modules&lt;/code&gt; を見てみましょう。ここに存在しますか？まだ違いますか？残念です&amp;hellip;親フォルダです！」-そして、可能性の1つと一致するものと一致するまで、これを実行します。それは非常に非効率的です。</target>
        </trans-unit>
        <trans-unit id="2b11930ee86531d8448df6004472d4bd581ece3d" translate="yes" xml:space="preserve">
          <source>Then run &lt;code&gt;yarn install&lt;/code&gt;.</source>
          <target state="translated">次に、 &lt;code&gt;yarn install&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="3e29c44a1ec788676160c432af7e7bc58aa75295" translate="yes" xml:space="preserve">
          <source>Then you can simply:</source>
          <target state="translated">ならば、単純に</target>
        </trans-unit>
        <trans-unit id="d4605db636895e5672bda30443dd3cd24dc0e56e" translate="yes" xml:space="preserve">
          <source>There are a few things you should know about the basic workflow:</source>
          <target state="translated">基本的なワークフローについて知っておくべきことがいくつかあります。</target>
        </trans-unit>
        <trans-unit id="40400dd78d367943b85e93424f8589e013c4bbcf" translate="yes" xml:space="preserve">
          <source>There are many options for installing dependencies, including:</source>
          <target state="translated">依存関係をインストールするには、以下のような選択肢があります。</target>
        </trans-unit>
        <trans-unit id="e137943c88ecd6da5da5abcf00fc063efda46b97" translate="yes" xml:space="preserve">
          <source>There are three options for installing Yarn on Windows.</source>
          <target state="translated">WindowsにYarnをインストールするには3つの方法があります。</target>
        </trans-unit>
        <trans-unit id="59ef5dc28ba27a70203f46bda7934112e2f7a717" translate="yes" xml:space="preserve">
          <source>There are two commands to facilitate this workflow:</source>
          <target state="translated">このワークフローを容易にするために、2つのコマンドがあります。</target>
        </trans-unit>
        <trans-unit id="cd91403fb5d75dd8612dd29a71141a4f20194599" translate="yes" xml:space="preserve">
          <source>There aren&amp;rsquo;t any other levels of access at this time. All users can either modify a package or they cannot. In the future, there may be more types of roles, but not at this time.</source>
          <target state="translated">現在、他のアクセスレベルはありません。すべてのユーザーがパッケージを変更できるか、またはできません。将来的には、より多くのタイプのロールが存在する可能性がありますが、現時点ではありません。</target>
        </trans-unit>
        <trans-unit id="d107992cb5dca8da44fab1257dbf29b4ee1684e4" translate="yes" xml:space="preserve">
          <source>There is no need for any special caching directives as Codefresh automatically caches the current workdir with all its folders (such as &lt;code&gt;node_modules&lt;/code&gt;).</source>
          <target state="translated">Codefreshは現在のワークディレクトリをそのすべてのフォルダー（ &lt;code&gt;node_modules&lt;/code&gt; など）と共に自動的にキャッシュするため、特別なキャッシュディレクティブは必要ありません。</target>
        </trans-unit>
        <trans-unit id="7909ae0c02c79be9f7123f6a510836699b3bf7aa" translate="yes" xml:space="preserve">
          <source>These are dependencies that are required in both development and production for your package.</source>
          <target state="translated">これらは、パッケージの開発と運用の両方で必要とされる依存関係です。</target>
        </trans-unit>
        <trans-unit id="0be9057456a59db83a3128fff2dc001a0a431097" translate="yes" xml:space="preserve">
          <source>These are files that are included in your project. You can specify single files, whole directories or use wildcards to include files that meet a certain criteria.</source>
          <target state="translated">これらは、プロジェクトに含まれるファイルです。単一のファイル、ディレクトリ全体を指定したり、ワイルドカードを使用して特定の条件を満たすファイルを含めることができます。</target>
        </trans-unit>
        <trans-unit id="b73edeec482f816d2f750f3c2e68086387a77102" translate="yes" xml:space="preserve">
          <source>These are packages that are only required when developing your package but will not be installed in production.</source>
          <target state="translated">これらのパッケージは、パッケージを開発する際にのみ必要ですが、本番環境にはインストールされません。</target>
        </trans-unit>
        <trans-unit id="5ccef680d459093fd062b587d22bf46e7dd9cda7" translate="yes" xml:space="preserve">
          <source>These are your development dependencies. Dependencies that you need at some point in the development workflow but not while running your code (e.g. Babel or Flow).</source>
          <target state="translated">これらは、あなたの開発依存関係です。開発ワークフローのどこかの時点で必要になるが、コードを実行している間は必要ない依存関係(例:BabelやFlow)。</target>
        </trans-unit>
        <trans-unit id="0f69930b920a832933d7c68c95b7880047babd0a" translate="yes" xml:space="preserve">
          <source>These are your normal dependencies, or rather ones that you need when running your code (e.g. React or ImmutableJS).</source>
          <target state="translated">これらは通常の依存関係というか、コードを実行する際に必要な依存関係です(ReactやImmutableJSなど)。</target>
        </trans-unit>
        <trans-unit id="54a4e5b8d6e08ace48568a385af1b1f37353579d" translate="yes" xml:space="preserve">
          <source>These configuration values will be used when publishing your package. You can tag your package, for example.</source>
          <target state="translated">これらの設定値は、パッケージを公開する際に使用されます。例えば、パッケージにタグを付けることができます。</target>
        </trans-unit>
        <trans-unit id="80384b31330fb9cabf468661ddf590f63bb47619" translate="yes" xml:space="preserve">
          <source>These sites will allow your users to see your code, report issues, and contribute back. Once you have your code up somewhere you should add the following fields to your &lt;code&gt;package.json&lt;/code&gt;:</source>
          <target state="translated">これらのサイトにより、ユーザーはコードを確認し、問題を報告し、貢献することができます。コードをどこかに配置したら、 &lt;code&gt;package.json&lt;/code&gt; に次のフィールドを追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="e655625e94dbd83acb6eda5400a79da9f171e9a4" translate="yes" xml:space="preserve">
          <source>These versions are broken down into &lt;code&gt;major.minor.patch&lt;/code&gt; and looks like one of these: &lt;code&gt;3.14.1&lt;/code&gt;, &lt;code&gt;0.42.0&lt;/code&gt;, &lt;code&gt;2.7.18&lt;/code&gt;. Each part of the version gets incremented at various times:</source>
          <target state="translated">これらのバージョンは、に分けられ &lt;code&gt;major.minor.patch&lt;/code&gt; ：これらのいずれかのようなルックスと &lt;code&gt;3.14.1&lt;/code&gt; 、 &lt;code&gt;0.42.0&lt;/code&gt; 、 &lt;code&gt;2.7.18&lt;/code&gt; 。バージョンの各部分は、さまざまなタイミングで増分されます。</target>
        </trans-unit>
        <trans-unit id="ddc620c258dba8ac514e17112566d4bc6dfe2fd2" translate="yes" xml:space="preserve">
          <source>This becomes useful when using yarn with git to publish new tags. Here is an example of what a package.json file could look like:</source>
          <target state="translated">これは、git と一緒に yarn を使って新しいタグを公開するときに便利です。以下は、package.json ファイルがどのようなものになるかの例です。</target>
        </trans-unit>
        <trans-unit id="e1da0738e7be77080ad6eb7ed6e199b8e984e6fc" translate="yes" xml:space="preserve">
          <source>This check follows normal semver rules with one exception. It allows prerelease versions to match semvers that do not explicitly specify a prerelease. For example, &lt;code&gt;1.4.0-rc.0&lt;/code&gt; matches &lt;code&gt;&amp;gt;=1.3.0&lt;/code&gt;, while it would not match a typical semver check.</source>
          <target state="translated">このチェックは、1つの例外を除いて、通常のサーバールールに従います。これにより、プレリリースバージョンを、プレリリースを明示的に指定しないサーバーと一致させることができます。例えば、 &lt;code&gt;1.4.0-rc.0&lt;/code&gt; のマッチ &lt;code&gt;&amp;gt;=1.3.0&lt;/code&gt; 、それは典型的semverチェックが一致しないだろうが。</target>
        </trans-unit>
        <trans-unit id="136622c21b8e8be4e83fc263bfc51f266a8a109b" translate="yes" xml:space="preserve">
          <source>This command assists the migration of projects currently relying on &lt;code&gt;package-lock.json&lt;/code&gt;, minimizing the differences between the lockfile and the existing dependency tree as best as it can.</source>
          <target state="translated">このコマンドは、現在 &lt;code&gt;package-lock.json&lt;/code&gt; に依存しているプロジェクトの移行を支援し、ロックファイルと既存の依存関係ツリーとの違いをできるだけ最小限に抑えます。</target>
        </trans-unit>
        <trans-unit id="3cba4afc6afd7d70f79dd8e21c8b241593eac188" translate="yes" xml:space="preserve">
          <source>This command is a shorthand that helps you do two things at once:</source>
          <target state="translated">このコマンドは、一度に2つのことを行うのに役立つ速記法です。</target>
        </trans-unit>
        <trans-unit id="56d3d2cd40dd22f6da0f6ebadc2613cc12d95964" translate="yes" xml:space="preserve">
          <source>This command is run in the package folder you&amp;rsquo;d like to link. For example if you are working on &lt;code&gt;react&lt;/code&gt; and would like to use your local version to debug a problem in &lt;code&gt;react-relay&lt;/code&gt;, simply run &lt;code&gt;yarn link&lt;/code&gt; inside of the &lt;code&gt;react&lt;/code&gt; project.</source>
          <target state="translated">このコマンドは、リンクするパッケージフォルダーで実行されます。たとえば、 &lt;code&gt;react&lt;/code&gt; に取り組んでいて、ローカルバージョンを使用して &lt;code&gt;react-relay&lt;/code&gt; の問題をデバッグする場合は、 &lt;code&gt;react&lt;/code&gt; プロジェクトの内部で &lt;code&gt;yarn link&lt;/code&gt; を実行するだけです。</target>
        </trans-unit>
        <trans-unit id="b89bc6e798ba2606360fe82485a065283d82863d" translate="yes" xml:space="preserve">
          <source>This command shows a list of available commands and flags, each with a brief explanation on what it does.</source>
          <target state="translated">このコマンドは、利用可能なコマンドとフラグの一覧を表示します。</target>
        </trans-unit>
        <trans-unit id="1e0c086b6e65e5864e6aa5b8b80e192797f4535b" translate="yes" xml:space="preserve">
          <source>This command skips the interactive session mentioned above and generates a &lt;code&gt;package.json&lt;/code&gt; based on your defaults. Some defaults may be modified changing &lt;code&gt;init-*&lt;/code&gt; config settings like mentioned above. For example, given a fresh install of Yarn and inside a &lt;code&gt;yarn-example&lt;/code&gt; directory:</source>
          <target state="translated">このコマンドは、上記のインタラクティブセッションをスキップし、デフォルトに基づいて &lt;code&gt;package.json&lt;/code&gt; を生成します。いくつかのデフォルトは、上記のように &lt;code&gt;init-*&lt;/code&gt; 構成設定を変更して変更される場合があります。たとえば、Yarnのフレッシュインストールがあり、 &lt;code&gt;yarn-example&lt;/code&gt; ディレクトリ内にあるとします。</target>
        </trans-unit>
        <trans-unit id="1a6b7f12d2d5031ede0f3b786e94df620ff18a2c" translate="yes" xml:space="preserve">
          <source>This command updates dependencies to their latest version based on the version range specified in the &lt;code&gt;package.json&lt;/code&gt; file. The &lt;code&gt;yarn.lock&lt;/code&gt; file will be recreated as well.</source>
          <target state="translated">このコマンドは、 &lt;code&gt;package.json&lt;/code&gt; ファイルで指定されたバージョン範囲に基づいて、依存関係を最新バージョンに更新します。 &lt;code&gt;yarn.lock&lt;/code&gt; のファイルがうまくとして再作成されます。</target>
        </trans-unit>
        <trans-unit id="750ec8608a60f93741edcf52d678d784cb3ac901" translate="yes" xml:space="preserve">
          <source>This command walks you through an interactive session to create a &lt;code&gt;package.json&lt;/code&gt; file. Some defaults such as the license and initial version are found in yarn&amp;rsquo;s &lt;code&gt;init-*&lt;/code&gt; config settings.</source>
          <target state="translated">このコマンドは、対話型のセッションを通じて、 &lt;code&gt;package.json&lt;/code&gt; ファイルを作成します。ライセンスや初期バージョンなどの一部のデフォルトは、yarnの &lt;code&gt;init-*&lt;/code&gt; 構成設定にあります。</target>
        </trans-unit>
        <trans-unit id="ad340e22cbedb0501856dcee594dec7131ed6a27" translate="yes" xml:space="preserve">
          <source>This command will display the workspace dependency tree of your current project.</source>
          <target state="translated">このコマンドは、現在のプロジェクトのワークスペース依存関係ツリーを表示します。</target>
        </trans-unit>
        <trans-unit id="bec43d77cf02dbefbeb1381d9d3e644a16866640" translate="yes" xml:space="preserve">
          <source>This command will fetch information about a package and return it in a tree format. The package does not have to have been installed locally.</source>
          <target state="translated">このコマンドは、パッケージに関する情報を取得し、ツリー形式で返します。パッケージはローカルにインストールされている必要はありません。</target>
        </trans-unit>
        <trans-unit id="69d6e71963d88645f30f2cd9aa4d8f1b00c1142f" translate="yes" xml:space="preserve">
          <source>This command will identify why a package has been installed, detailing which other packages depend upon it, for example, or whether it was explicitly marked as a dependency in the &lt;code&gt;package.json&lt;/code&gt; manifest.</source>
          <target state="translated">このコマンドは、パッケージがインストールされた理由、たとえば依存する他のパッケージの詳細、または &lt;code&gt;package.json&lt;/code&gt; マニフェストで依存関係として明示的にマークされているかどうかを識別します。</target>
        </trans-unit>
        <trans-unit id="1a8a06d51c3554998f9d8491f29e021d886fb5f3" translate="yes" xml:space="preserve">
          <source>This error message means that Plug&amp;rsquo;n&amp;rsquo;Play was able to locate the &lt;em&gt;package&lt;/em&gt; part of the require (so for example it understood that &lt;code&gt;foo&lt;/code&gt; should be resolved into &lt;code&gt;/usr/cache/yarn/foo-1.0.0&lt;/code&gt;), but couldn&amp;rsquo;t resolve the &lt;em&gt;file&lt;/em&gt; part of the resolution (to use the same example, it couldn&amp;rsquo;t find an &lt;code&gt;index.js&lt;/code&gt; file in &lt;code&gt;/usr/cache/yarn/foo-1.0.0/&lt;/code&gt;). This problem typically isn&amp;rsquo;t caused by Plug&amp;rsquo;n&amp;rsquo;Play itself, but rather by your application requiring something that doesn&amp;rsquo;t exist (under non-PnP mode you&amp;rsquo;d likely have a generic &amp;ldquo;Cannot find module&amp;rdquo; error).</source>
          <target state="translated">このエラーメッセージは、Plug'n'Playがrequireの&lt;em&gt;パッケージ&lt;/em&gt;部分を見つけられたことを意味します（たとえば、 &lt;code&gt;foo&lt;/code&gt; が &lt;code&gt;/usr/cache/yarn/foo-1.0.0&lt;/code&gt; に解決される必要があることを理解しました）が、解決の&lt;em&gt;ファイル&lt;/em&gt;部分を解決し&lt;em&gt;ます&lt;/em&gt;（同じ例を使用するために、 &lt;code&gt;/usr/cache/yarn/foo-1.0.0/&lt;/code&gt; で &lt;code&gt;index.js&lt;/code&gt; ファイルを見つけることができませんでした）。この問題は通常、Plug'n'Play自体が原因ではなく、存在しないものを必要とするアプリケーションが原因です（非PnPモードでは、一般的な「モジュールが見つかりません」エラーが発生する可能性があります）。</target>
        </trans-unit>
        <trans-unit id="d728fc4b08de383638bc071bd7cb985baf9ed155" translate="yes" xml:space="preserve">
          <source>This error simply means that the specified package is requiring something without explicitly declaring it in its dependencies. Since this behavior is unsafe and relies on the hoisting being done a certain way, Plug&amp;rsquo;n&amp;rsquo;Play doesn&amp;rsquo;t allow it.</source>
          <target state="translated">このエラーは単に、指定されたパッケージが依存関係で明示的に宣言せずに何かを必要としていることを意味します。この動作は安全ではなく、吊り上げが特定の方法で行われることに依存しているため、プラグアンドプレイでは許可されていません。</target>
        </trans-unit>
        <trans-unit id="03f1c96ccb918444b4477ab5f2a9e9f3dcaa958b" translate="yes" xml:space="preserve">
          <source>This is comparable to lockfiles in other package managers like Bundler or Cargo. It&amp;rsquo;s similar to npm&amp;rsquo;s &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt;, however it&amp;rsquo;s not lossy and it creates reproducible results.</source>
          <target state="translated">これは、BundlerやCargoなどの他のパッケージマネージャーのロックファイルに相当します。これはnpmの &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; に似ていますが、不可逆ではなく、再現可能な結果を​​作成します。</target>
        </trans-unit>
        <trans-unit id="c62ca9976228fc329cc7f38c27e4273f7e8fe43e" translate="yes" xml:space="preserve">
          <source>This is going to create a new git repository, put you inside of it, and then open up an interactive form for creating a new yarn project with the following questions:</source>
          <target state="translated">これは新しい git リポジトリを作成し、その中にあなたを入れて、次のような質問で新しい yarn プロジェクトを作成するための対話形式のフォームを開きます。</target>
        </trans-unit>
        <trans-unit id="c52641cc6dda3660d42bb9da7ab28ed19a2e9801" translate="yes" xml:space="preserve">
          <source>This is similar to npm-check interactive update mode. It provides an easy way to update outdated packages.</source>
          <target state="translated">これは npm-check インタラクティブアップデートモードに似ています。これは古いパッケージを簡単に更新する方法を提供します。</target>
        </trans-unit>
        <trans-unit id="6c1e5b15ea58a7b8645ccb04ceaa357a6317ff56" translate="yes" xml:space="preserve">
          <source>This is the name of your package. It gets used in URLs, as an argument on the command line, and as the directory name inside &lt;code&gt;node_modules&lt;/code&gt;.</source>
          <target state="translated">これはパッケージの名前です。これは、URL、コマンドラインの引数、および &lt;code&gt;node_modules&lt;/code&gt; 内のディレクトリ名として使用されます。</target>
        </trans-unit>
        <trans-unit id="ac64a1250425b348f63d9d1736a1aef50509e0fd" translate="yes" xml:space="preserve">
          <source>This is the primary entry point for the functionality for your project.</source>
          <target state="translated">これは、プロジェクトの機能性のための主要なエントリーポイントです。</target>
        </trans-unit>
        <trans-unit id="405ce175af489e9b401d076eeb8e54e227e6e51e" translate="yes" xml:space="preserve">
          <source>This is useful for dependencies that won&amp;rsquo;t necessarily work on every machine and you have a fallback plan in case they are not installed (e.g. Watchman).</source>
          <target state="translated">これは、必ずしもすべてのマシンで機能するとは限らない依存関係や、インストールされていない場合のフォールバック計画（Watchmanなど）に役立ちます。</target>
        </trans-unit>
        <trans-unit id="6f4845846cc949e23d3f97295d375793379040b8" translate="yes" xml:space="preserve">
          <source>This is useful for developer tooling that is not part of any individual project but instead is used for local commands. One such example is &lt;a href=&quot;https://github.com/facebookincubator/create-react-app&quot;&gt;create-react-app&lt;/a&gt; which can be installed globally like this:</source>
          <target state="translated">これは、個々のプロジェクトの一部ではなく、ローカルコマンドに使用される開発者ツールに役立ちます。このような例の1つは&lt;a href=&quot;https://github.com/facebookincubator/create-react-app&quot;&gt;、次の&lt;/a&gt;ようにグローバルにインストールできるcreate-react-appです。</target>
        </trans-unit>
        <trans-unit id="a5de9ae808934ee160fa76c13fbb9a949553f9e8" translate="yes" xml:space="preserve">
          <source>This pipeline &lt;a href=&quot;https://codefresh.io/docs/docs/codefresh-yaml/steps/git-clone/&quot;&gt;checks out&lt;/a&gt; the source code and then runs &lt;code&gt;yarn&lt;/code&gt; with two &lt;a href=&quot;https://codefresh.io/docs/docs/codefresh-yaml/steps/freestyle/&quot;&gt;freestyle steps&lt;/a&gt;.</source>
          <target state="translated">このパイプライン&lt;a href=&quot;https://codefresh.io/docs/docs/codefresh-yaml/steps/git-clone/&quot;&gt;は&lt;/a&gt;、ソースコードをチェックアウトし、2つの&lt;a href=&quot;https://codefresh.io/docs/docs/codefresh-yaml/steps/freestyle/&quot;&gt;フリースタイルのステップで&lt;/a&gt; &lt;code&gt;yarn&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="dda40f36f0527bce676d52b90a6b438bb17e5bdf" translate="yes" xml:space="preserve">
          <source>This refetches all packages, even ones that were previously installed.</source>
          <target state="translated">これは、以前にインストールされていたパッケージも含めて、すべてのパッケージをリフェッチします。</target>
        </trans-unit>
        <trans-unit id="84c9d2762fdb0fc31659070a11fc9bf1cf4f5231" translate="yes" xml:space="preserve">
          <source>This results in the following &lt;code&gt;package.json&lt;/code&gt;:</source>
          <target state="translated">これにより、次の &lt;code&gt;package.json&lt;/code&gt; が生成されます。</target>
        </trans-unit>
        <trans-unit id="90946031e7a1a94ccdf359a2b3a6a71591babb2b" translate="yes" xml:space="preserve">
          <source>This specifies operating system compatibility for your package. It checks against &lt;code&gt;process.platform&lt;/code&gt;.</source>
          <target state="translated">これは、パッケージのオペレーティングシステムの互換性を指定します。 &lt;code&gt;process.platform&lt;/code&gt; に対してチェックします。</target>
        </trans-unit>
        <trans-unit id="d8e86b43190904d1432a7a9eaea548654062ed1b" translate="yes" xml:space="preserve">
          <source>This will add &lt;code&gt;react&lt;/code&gt; and &lt;code&gt;react-dom&lt;/code&gt; as &lt;code&gt;devDependencies&lt;/code&gt; in your &lt;code&gt;packages/awesome-package/package.json&lt;/code&gt;.</source>
          <target state="translated">これにより、 &lt;code&gt;packages/awesome-package/package.json&lt;/code&gt; の &lt;code&gt;devDependencies&lt;/code&gt; として &lt;code&gt;react&lt;/code&gt; と &lt;code&gt;react-dom&lt;/code&gt; が追加されます。</target>
        </trans-unit>
        <trans-unit id="057790a9b5f3fa55f03e8c6ef1e773f0911beecb" translate="yes" xml:space="preserve">
          <source>This will also ensure that you have &lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; installed.</source>
          <target state="translated">これにより、&lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.jsが&lt;/a&gt;インストールされていることも確認できます。</target>
        </trans-unit>
        <trans-unit id="1d61f40134d24b4b26190c1c018ab591d13a8909" translate="yes" xml:space="preserve">
          <source>This will also pass forward flags and can be useful for CI processes.</source>
          <target state="translated">また、これはフォワードフラグを渡すことになり、CIプロセスに便利です。</target>
        </trans-unit>
        <trans-unit id="757a8308aee4cd844dd2cabf442a21298eef73b4" translate="yes" xml:space="preserve">
          <source>This will also update your &lt;code&gt;package.json&lt;/code&gt; and your &lt;code&gt;yarn.lock&lt;/code&gt; so that other developers working on the project will get the same dependencies as you when they run &lt;code&gt;yarn&lt;/code&gt; or &lt;code&gt;yarn install&lt;/code&gt;.</source>
          <target state="translated">これにより、 &lt;code&gt;package.json&lt;/code&gt; と &lt;code&gt;yarn.lock&lt;/code&gt; も更新されるので、プロジェクトで作業している他の開発者は、 &lt;code&gt;yarn&lt;/code&gt; または &lt;code&gt;yarn install&lt;/code&gt; を実行したときと同じ依存関係を取得できます。</target>
        </trans-unit>
        <trans-unit id="882b0ace41b969573b09f6fc5796c9ce48a7bcd7" translate="yes" xml:space="preserve">
          <source>This will automatically add the &lt;code&gt;[package]&lt;/code&gt; to your dependencies in your &lt;code&gt;package.json&lt;/code&gt;. It will also update your &lt;code&gt;yarn.lock&lt;/code&gt; to reflect the change.</source>
          <target state="translated">これにより、 &lt;code&gt;package.json&lt;/code&gt; の依存関係に &lt;code&gt;[package]&lt;/code&gt; が自動的に追加されます。また、 &lt;code&gt;yarn.lock&lt;/code&gt; を更新して変更を反映します。</target>
        </trans-unit>
        <trans-unit id="850bd1a7684703bde172092eea672e5caf48afc1" translate="yes" xml:space="preserve">
          <source>This will create a symlink named &lt;code&gt;react-relay/node_modules/react&lt;/code&gt; that links to your local copy of the &lt;code&gt;react&lt;/code&gt; project.</source>
          <target state="translated">これにより、 &lt;code&gt;react&lt;/code&gt; プロジェクトのローカルコピーにリンクする &lt;code&gt;react-relay/node_modules/react&lt;/code&gt; という名前のシンボリックリンクが作成されます。</target>
        </trans-unit>
        <trans-unit id="a263385f87324fcf1540a84234b60f065ec69c65" translate="yes" xml:space="preserve">
          <source>This will give you a &lt;code&gt;.msi&lt;/code&gt; file that when run will walk you through installing Yarn on Windows.</source>
          <target state="translated">これにより、実行時にWindowsにYarnをインストールする &lt;code&gt;.msi&lt;/code&gt; を説明する.msiファイルが得られます。</target>
        </trans-unit>
        <trans-unit id="60ae821df369a6ed6eb6d9f4b82442736eb4c7f0" translate="yes" xml:space="preserve">
          <source>This will install a package under a custom alias. Aliasing, allows multiple versions of the same dependency to be installed, each referenced via the &lt;em&gt;alias-package&lt;/em&gt; name given. For example, &lt;code&gt;yarn add my-foo@npm:foo&lt;/code&gt; will install the package &lt;code&gt;foo&lt;/code&gt; (at the latest version) in your &lt;a href=&quot;../dependency-types#toc-dependencies&quot;&gt;&lt;code&gt;dependencies&lt;/code&gt;&lt;/a&gt; under the specified alias &lt;code&gt;my-foo&lt;/code&gt;. Also, &lt;code&gt;yarn add my-foo@npm:foo@1.0.1&lt;/code&gt; allows a specific version of &lt;code&gt;foo&lt;/code&gt; to be installed.</source>
          <target state="translated">これにより、カスタムエイリアスの下にパッケージがインストールされます。エイリアスを使用すると、同じ依存関係の複数のバージョンをインストールでき、それぞれが指定された&lt;em&gt;エイリアスパッケージ&lt;/em&gt;名を介して参照され&lt;em&gt;ます&lt;/em&gt;。たとえば、 &lt;code&gt;yarn add my-foo@npm:foo&lt;/code&gt; は、パッケージ &lt;code&gt;foo&lt;/code&gt; （最新バージョン）を指定したエイリアス &lt;code&gt;my-foo&lt;/code&gt; の下の&lt;a href=&quot;../dependency-types#toc-dependencies&quot;&gt; &lt;code&gt;dependencies&lt;/code&gt; &lt;/a&gt;インストールします。また、 &lt;code&gt;yarn add my-foo@npm:foo@1.0.1&lt;/code&gt; 使用すると、特定のバージョンの &lt;code&gt;foo&lt;/code&gt; をインストールできます。</target>
        </trans-unit>
        <trans-unit id="5607dfebb9a7768e051495b0cce0daa848bb2856" translate="yes" xml:space="preserve">
          <source>This will install one or more packages in your &lt;a href=&quot;../dependency-types#toc-dependencies&quot;&gt;&lt;code&gt;dependencies&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これにより、&lt;a href=&quot;../dependency-types#toc-dependencies&quot;&gt; &lt;code&gt;dependencies&lt;/code&gt; &lt;/a&gt; 1つ以上のパッケージがインストールされます。</target>
        </trans-unit>
        <trans-unit id="baf07d6d25547d40cc501118cb1f360263270f79" translate="yes" xml:space="preserve">
          <source>This will invoke the test script for each workspace.</source>
          <target state="translated">これにより、各ワークスペースのテストスクリプトが起動されます。</target>
        </trans-unit>
        <trans-unit id="c4fa45a7229e662ee23dbf9cff0a9b4500c5b7ca" translate="yes" xml:space="preserve">
          <source>This will lay out your &lt;code&gt;node_modules&lt;/code&gt; folder using Yarn&amp;rsquo;s resolution algorithm that is compatible with the &lt;a href=&quot;https://nodejs.org/api/modules.html#modules_all_together&quot;&gt;node.js module resolution algorithm&lt;/a&gt;.</source>
          <target state="translated">これにより、&lt;a href=&quot;https://nodejs.org/api/modules.html#modules_all_together&quot;&gt;node.jsモジュール解決アルゴリズム&lt;/a&gt;と互換性のあるYarnの解決アルゴリズムを使用して、 &lt;code&gt;node_modules&lt;/code&gt; フォルダーがレイアウトされます。</target>
        </trans-unit>
        <trans-unit id="8bd994eba67f59bda703ec5de468c3a29f315434" translate="yes" xml:space="preserve">
          <source>This will open up an interactive form for creating a new yarn project with the following questions:</source>
          <target state="translated">これは、以下の質問で新しい糸のプロジェクトを作成するための対話形式のフォームを開きます。</target>
        </trans-unit>
        <trans-unit id="c6f8ee1ccf386ce70c01cb19f4cf74efa61e23bc" translate="yes" xml:space="preserve">
          <source>This will prompt you for your username and email. However, it will not ask you for your password. Yarn does not hold onto your password or any sessions. When you go to publish or modify something on npm, you will need to enter your password then.</source>
          <target state="translated">これにより、ユーザー名とメールアドレスの入力を求められます。ただし、パスワードの入力は求められません。Yarn がパスワードやセッションを保持することはありません。npm で何かを公開したり修正したりするときには、パスワードを入力する必要があります。</target>
        </trans-unit>
        <trans-unit id="2c0feaaa1d00502b4df5901026644c13b20ae172" translate="yes" xml:space="preserve">
          <source>This will remove your stored username and email for the &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm registry&lt;/a&gt; as setup by &lt;a href=&quot;login&quot;&gt;&lt;code&gt;yarn login&lt;/code&gt;&lt;/a&gt;. You do need to run this to de-authenticate, registry actions are individually authenticated.</source>
          <target state="translated">これにより、保存されたユーザー名と&lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npmレジストリの&lt;/a&gt;メールが、&lt;a href=&quot;login&quot;&gt; &lt;code&gt;yarn login&lt;/code&gt; &lt;/a&gt;によるセットアップとして削除されます。認証を解除するには、これを実行する必要があります。レジストリアクションは個別に認証されます。</target>
        </trans-unit>
        <trans-unit id="7b87c5c514f954e06ed392424f417a6a8df56fbf" translate="yes" xml:space="preserve">
          <source>This will run the chosen Yarn command in each workspace.</source>
          <target state="translated">これにより、各ワークスペースで選択したヤーンコマンドが実行されます。</target>
        </trans-unit>
        <trans-unit id="bc7ddf946d5ca617ee77dd843b61c976d7123248" translate="yes" xml:space="preserve">
          <source>This will run the chosen Yarn command in the selected workspace.</source>
          <target state="translated">選択したワークスペースで選択したヤーンコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="c8d805a9f87a6366c609dcfaadfff37192f35acf" translate="yes" xml:space="preserve">
          <source>This will update your &lt;code&gt;package.json&lt;/code&gt; and your &lt;code&gt;yarn.lock&lt;/code&gt; file.</source>
          <target state="translated">これにより、 &lt;code&gt;package.json&lt;/code&gt; と &lt;code&gt;yarn.lock&lt;/code&gt; ファイルが更新されます。</target>
        </trans-unit>
        <trans-unit id="2e18c5c78e9563d21a4df94b5e2c4c51171c5112" translate="yes" xml:space="preserve">
          <source>This will upgrade your &lt;code&gt;package.json&lt;/code&gt; and your &lt;code&gt;yarn.lock&lt;/code&gt; file.</source>
          <target state="translated">これにより、 &lt;code&gt;package.json&lt;/code&gt; と &lt;code&gt;yarn.lock&lt;/code&gt; ファイルがアップグレードされます。</target>
        </trans-unit>
        <trans-unit id="25113d4ac9b0f5803fc03adbd6adf21a5b35813b" translate="yes" xml:space="preserve">
          <source>Those that have contributed to your package. Contributors are an array of people.</source>
          <target state="translated">あなたのパッケージに貢献してくれた人たち。貢献者とは、様々な人の配列のことです。</target>
        </trans-unit>
        <trans-unit id="1ab4cee331b4a736fa8c1205f068e050a1036549" translate="yes" xml:space="preserve">
          <source>Tilde Ranges</source>
          <target state="translated">ティルデレンジ</target>
        </trans-unit>
        <trans-unit id="e96f3984eaaf637764ee32773288dabcc604bf6b" translate="yes" xml:space="preserve">
          <source>Tips &amp;amp; Tricks</source>
          <target state="translated">ヒントとコツ</target>
        </trans-unit>
        <trans-unit id="1d274f8cd402fa3445a8a3069a221e617083158c" translate="yes" xml:space="preserve">
          <source>To assure that your local Yarn version matches the one on Semaphore, add the lines below to your setup commands, in Project Settings.</source>
          <target state="translated">あなたのローカルのヤーンのバージョンがセマフォのバージョンと一致するように、プロジェクト設定のセットアップコマンドに以下の行を追加してください。</target>
        </trans-unit>
        <trans-unit id="133f4dd722ecf80e0ce65b6e9b22a81889a06c3a" translate="yes" xml:space="preserve">
          <source>To change the prefix of the git tag you can use &lt;code&gt;version-tag-prefix&lt;/code&gt;:</source>
          <target state="translated">gitタグのプレフィックスを変更するには、 &lt;code&gt;version-tag-prefix&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="612a4c6531881190efc7f97c760faab792d13dfb" translate="yes" xml:space="preserve">
          <source>To do this Yarn uses a &lt;code&gt;yarn.lock&lt;/code&gt; file in the root of your project. These &amp;ldquo;lockfiles&amp;rdquo; look like this:</source>
          <target state="translated">これを行うために、Yarnはプロジェクトのルートで &lt;code&gt;yarn.lock&lt;/code&gt; ファイルを使用します。これらの「ロックファイル」は次のようになります。</target>
        </trans-unit>
        <trans-unit id="16cd1a2a05345f898e88e51611710ae5ff88ee72" translate="yes" xml:space="preserve">
          <source>To fix that, &lt;code&gt;yarn policies set-version&lt;/code&gt; offers a simple way to &lt;strong&gt;check in your Yarn release within your repository.&lt;/strong&gt; Once you run it, your configuration will be updated in such a way that anyone running a Yarn command inside the project will always use the version you set - and this transparently.</source>
          <target state="translated">これを修正するために、 &lt;code&gt;yarn policies set-version&lt;/code&gt; は、&lt;strong&gt;リポジトリ内のYarnリリース&lt;/strong&gt;を&lt;strong&gt;チェックイン&lt;/strong&gt;する簡単な方法を提供し&lt;strong&gt;ます。&lt;/strong&gt;これを実行すると、プロジェクト内でYarnコマンドを実行する人は常に、設定したバージョンを使用するように構成が更新されます。これは透過的に行われます。</target>
        </trans-unit>
        <trans-unit id="d7acb2353eb501956091fb6cbb6eedf1759e508a" translate="yes" xml:space="preserve">
          <source>To have access to Yarn&amp;rsquo;s executables globally, you will need to set up the &lt;code&gt;PATH&lt;/code&gt; environment variable in your terminal. To do this, add &lt;code&gt;export PATH=&quot;$PATH:`yarn global bin`&quot;&lt;/code&gt; to your profile, or &lt;code&gt;set PATH $PATH (yarn global bin)&lt;/code&gt; in the &lt;code&gt;~/.config/fish/config.fish&lt;/code&gt; file if you use Fish shell.</source>
          <target state="translated">Yarnの実行可能ファイルにグローバルにアクセスするには、ターミナルで &lt;code&gt;PATH&lt;/code&gt; 環境変数を設定する必要があります。これを行うには、 &lt;code&gt;export PATH=&quot;$PATH:`yarn global bin`&quot;&lt;/code&gt; をプロファイルに &lt;code&gt;~/.config/fish/config.fish&lt;/code&gt; するか、Fishシェルを使用する場合は〜/ .config / fish / config.fishファイルで &lt;code&gt;set PATH $PATH (yarn global bin)&lt;/code&gt; を設定します。</target>
        </trans-unit>
        <trans-unit id="fd5b5f495342abcc74657e273f7f269f60e84341" translate="yes" xml:space="preserve">
          <source>To have people successfully develop or use your package, you need to ensure that all the necessary files are checked into your source control system.</source>
          <target state="translated">あなたのパッケージを開発したり使用したりするためには、必要なファイルがすべてソース管理システムにチェックされていることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="66ebe2c60e40c1278c358448c278f1fb87fb2ed5" translate="yes" xml:space="preserve">
          <source>To learn more about workspaces, check these links:</source>
          <target state="translated">ワークスペースについて詳しく知りたい方は、以下のリンクをチェックしてみてください。</target>
        </trans-unit>
        <trans-unit id="f10e9b1e0feff51cafd21f1031d41e59ae71df0c" translate="yes" xml:space="preserve">
          <source>To make sure your app works consistently, &lt;strong&gt;you should always save the &lt;code&gt;yarn.lock&lt;/code&gt; file in your code repository.&lt;/strong&gt;</source>
          <target state="translated">アプリが一貫して動作することを確認するには、&lt;strong&gt;常にコードリポジトリに &lt;code&gt;yarn.lock&lt;/code&gt; ファイルを保存する必要があります。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9a18f9796bb31ddbf9d28884b361a2065bf3cb71" translate="yes" xml:space="preserve">
          <source>To remove a symlinked package created with &lt;a href=&quot;link&quot;&gt;&lt;code&gt;yarn link&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;yarn unlink&lt;/code&gt; can be used.</source>
          <target state="translated">&lt;a href=&quot;link&quot;&gt; &lt;code&gt;yarn link&lt;/code&gt; &lt;/a&gt;で作成されたシンボリックリンクされたパッケージを削除するには、ヤーンアン &lt;code&gt;yarn unlink&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="9430c49964f681c2a2800ca6cc2e0dd78423fcb2" translate="yes" xml:space="preserve">
          <source>To reverse this process, simply use &lt;code&gt;yarn unlink&lt;/code&gt; or &lt;code&gt;yarn unlink [package]&lt;/code&gt;. Also see:</source>
          <target state="translated">このプロセスを逆にするには、 &lt;code&gt;yarn unlink&lt;/code&gt; または &lt;code&gt;yarn unlink [package]&lt;/code&gt; を使用するだけです。こちらもご覧ください：</target>
        </trans-unit>
        <trans-unit id="3534b4ca1d574d564c7d10aa1a65dd85c383c823" translate="yes" xml:space="preserve">
          <source>To speed up your builds, you can cache Yarn&amp;rsquo;s cache folder by adding this to your &lt;code&gt;appveyor.yml&lt;/code&gt;:</source>
          <target state="translated">ビルドを高速化するには、これを &lt;code&gt;appveyor.yml&lt;/code&gt; に追加して、Yarnのキャッシュフォルダーをキャッシュします。</target>
        </trans-unit>
        <trans-unit id="6bf3977b186a4c8ea9d2f4a84f2840484123ad0c" translate="yes" xml:space="preserve">
          <source>To turn on automating pruning, set &lt;code&gt;yarn-offline-mirror-pruning&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; in your &lt;code&gt;.yarnrc&lt;/code&gt;:</source>
          <target state="translated">剪定の自動化をオンにするには、 &lt;code&gt;.yarnrc&lt;/code&gt; で &lt;code&gt;yarn-offline-mirror-pruning&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="71c1d7f581f6270df73bab8a152d1823a684d34c" translate="yes" xml:space="preserve">
          <source>To unlink a package that was symlinked during development in your project, simply run &lt;code&gt;yarn unlink [package]&lt;/code&gt;. You will need to run &lt;code&gt;yarn&lt;/code&gt; or &lt;code&gt;yarn install&lt;/code&gt; to re-install the package that was linked.</source>
          <target state="translated">プロジェクトの開発中にシンボリックリンクされたパッケージのリンクを解除するには、 &lt;code&gt;yarn unlink [package]&lt;/code&gt; を実行するだけです。リンクされたパッケージを再インストールするには、 &lt;code&gt;yarn&lt;/code&gt; または &lt;code&gt;yarn install&lt;/code&gt; を実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="9b3d6cda054fffaedaae8e4b1839a88aa62caa37" translate="yes" xml:space="preserve">
          <source>To use teams to manage permissions on packages belonging to your organization, use the yarn access command to grant or revoke the appropriate permissions.</source>
          <target state="translated">チームを使用して組織に属するパッケージのパーミッションを管理するには、yarn access コマンドを使用して適切なパーミッションを付与したり取り消したりします。</target>
        </trans-unit>
        <trans-unit id="54e93f38edf9580a49a6fc1b61fb444f18d3bc0c" translate="yes" xml:space="preserve">
          <source>To use the installed packages, the install location has to be added to the PATH environment variable of your shell. For bash for example, you can add this line at the end of your .bashrc:</source>
          <target state="translated">インストールされたパッケージを使うには、インストール先をシェルの PATH 環境変数に追加しなければなりません。例えば bash の場合、.bashrc の最後に以下の行を追加することができます。</target>
        </trans-unit>
        <trans-unit id="2ec9b8ac12c10ccb53815359de6379d6987cc75c" translate="yes" xml:space="preserve">
          <source>TypeScript uses its own resolver as well. In this case the situation is a bit more complex - the TS team has some concerns about &lt;a href=&quot;https://github.com/Microsoft/TypeScript/issues/18896&quot;&gt;allowing third-party hooks&lt;/a&gt; inside the &lt;code&gt;tsc&lt;/code&gt; compiler, meaning that we can&amp;rsquo;t work with it at the moment. That being said, TypeScript isn&amp;rsquo;t only &lt;code&gt;tsc&lt;/code&gt; and as such we&amp;rsquo;ve been able to add PnP support to the popular &lt;a href=&quot;https://yarnpkg.com/en/package/ts-loader&quot;&gt;&lt;code&gt;ts-loader&lt;/code&gt;&lt;/a&gt; - meaning that as long as you compile your TypeScript through Webpack, everything works well! Consult the dedicated &lt;a href=&quot;https://github.com/arcanis/pnp-webpack-plugin#ts-loader-integration&quot;&gt;section&lt;/a&gt; about it for more information.</source>
          <target state="translated">TypeScriptも独自のリゾルバを使用します。この場合、状況は少し複雑になります。TSチームは、 &lt;code&gt;tsc&lt;/code&gt; コンパイラ内で&lt;a href=&quot;https://github.com/Microsoft/TypeScript/issues/18896&quot;&gt;サードパーティのフックを許可すること&lt;/a&gt;について懸念を抱いています。つまり、現時点ではそれを処理できません。そうは言っても、TypeScriptは &lt;code&gt;tsc&lt;/code&gt; だけではなく、PnPサポートを人気のある&lt;a href=&quot;https://yarnpkg.com/en/package/ts-loader&quot;&gt; &lt;code&gt;ts-loader&lt;/code&gt; &lt;/a&gt;に追加できました。つまり、Webpackを介してTypeScriptをコンパイルする限り、すべてがうまく機能します！詳細については、専用&lt;a href=&quot;https://github.com/arcanis/pnp-webpack-plugin#ts-loader-integration&quot;&gt;セクションを参照&lt;/a&gt;してください。</target>
        </trans-unit>
        <trans-unit id="747340c9d2e24643a269bf540cab1fa0bd53f202" translate="yes" xml:space="preserve">
          <source>Under the hood, the command will simply download the single-file release from the GitHub repository, store it inside your project (inside the &lt;code&gt;.yarn/releases&lt;/code&gt; folder), then finally update your configuration to point to the new file (using &lt;code&gt;yarn-path&lt;/code&gt;).</source>
          <target state="translated">内部的には、コマンドはGitHubリポジトリから単一ファイルのリリースをダウンロードし、プロジェクト内（ &lt;code&gt;.yarn/releases&lt;/code&gt; フォルダー内）に保存し、最後に構成を更新して（ &lt;code&gt;yarn-path&lt;/code&gt; を使用して）新しいファイルをポイントします）。</target>
        </trans-unit>
        <trans-unit id="00002b164c08859d5a15579e55c8f17ce6478546" translate="yes" xml:space="preserve">
          <source>Unions</source>
          <target state="translated">Unions</target>
        </trans-unit>
        <trans-unit id="1171119fcf5b4cc6ff6c14a6447942e890e1969a" translate="yes" xml:space="preserve">
          <source>Unix/Linux/macOS</source>
          <target state="translated">Unix/Linux/macOS</target>
        </trans-unit>
        <trans-unit id="d85f0c1adb5e3f413b96761aaec988d65cf7688c" translate="yes" xml:space="preserve">
          <source>Unlink a previously created symlink for a package.</source>
          <target state="translated">パッケージのために以前に作成されたシンボリックリンクのリンクを解除します。</target>
        </trans-unit>
        <trans-unit id="007ca5d5d8c83dbc4fbeb3801c4603ca74a69f85" translate="yes" xml:space="preserve">
          <source>Update checksums in the &lt;code&gt;yarn.lock&lt;/code&gt; lockfile if there&amp;rsquo;s a mismatch between them and their package&amp;rsquo;s checksum.</source>
          <target state="translated">それらとパッケージのチェックサムの間に不一致がある場合、 &lt;code&gt;yarn.lock&lt;/code&gt; ロックファイルのチェックサムを更新します。</target>
        </trans-unit>
        <trans-unit id="1b4984f515e17a13007111899777018bbf4d0fb1" translate="yes" xml:space="preserve">
          <source>Updates Yarn to the latest version.</source>
          <target state="translated">ヤーンを最新バージョンに更新します。</target>
        </trans-unit>
        <trans-unit id="751019264e840282eb724344d5371ec66bee175d" translate="yes" xml:space="preserve">
          <source>Updates the package version.</source>
          <target state="translated">パッケージのバージョンを更新します。</target>
        </trans-unit>
        <trans-unit id="04b78737c47cc3a43396b86624ad7ef487806503" translate="yes" xml:space="preserve">
          <source>Updating versions</source>
          <target state="translated">バージョンの更新</target>
        </trans-unit>
        <trans-unit id="fd43b6a2dd1386dd4a5e3b5bc6badf5edf267ada" translate="yes" xml:space="preserve">
          <source>Upgrade Yarn</source>
          <target state="translated">アップグレード糸</target>
        </trans-unit>
        <trans-unit id="f790cbde9c0a44a70762b4c2a94f1cd599b2f452" translate="yes" xml:space="preserve">
          <source>Upgrades packages to their latest version based on the specified range.</source>
          <target state="translated">指定した範囲に基づいてパッケージを最新バージョンにアップグレードします。</target>
        </trans-unit>
        <trans-unit id="2cc87f5f4eb2bab803f0711ee7341c32e9c65ee0" translate="yes" xml:space="preserve">
          <source>Upgrading a dependency</source>
          <target state="translated">依存関係のアップグレード</target>
        </trans-unit>
        <trans-unit id="5ed71424c9ed55955d9da6f242b8c24ad2e7a86c" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;yarn link [package]&lt;/code&gt; to link another package that you&amp;rsquo;d like to test into your current project. To follow the above example, in the &lt;code&gt;react-relay&lt;/code&gt; project, you&amp;rsquo;d run &lt;code&gt;yarn link react&lt;/code&gt; to use your local version of &lt;code&gt;react&lt;/code&gt; that you previously linked.</source>
          <target state="translated">&lt;code&gt;yarn link [package]&lt;/code&gt; を使用して、テストする別のパッケージを現在のプロジェクトにリンクします。上記の例に従うと、 &lt;code&gt;react-relay&lt;/code&gt; プロジェクトで、 &lt;code&gt;yarn link react&lt;/code&gt; ローカルバージョンの &lt;code&gt;react&lt;/code&gt; を使用するためにyarn link reactを実行します。</target>
        </trans-unit>
        <trans-unit id="81077669b72518ca90102e9658a0d6dd80441698" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;yarn.lock&lt;/code&gt; to pin your dependencies</source>
          <target state="translated">依存関係を固定するには、 &lt;code&gt;yarn.lock&lt;/code&gt; を使用してください</target>
        </trans-unit>
        <trans-unit id="2700dfc5df383bde8e7b254b3a16251637f4f021" translate="yes" xml:space="preserve">
          <source>Use this to specify your package will only run on certain CPU architectures. This checks against &lt;code&gt;process.arch&lt;/code&gt;.</source>
          <target state="translated">これを使用して、パッケージが特定のCPUアーキテクチャでのみ実行されることを指定します。これにより、 &lt;code&gt;process.arch&lt;/code&gt; がチェックされます。</target>
        </trans-unit>
        <trans-unit id="5d4593dcbb24ffb8af6ecea711d54d436e72d02b" translate="yes" xml:space="preserve">
          <source>User-defined scripts</source>
          <target state="translated">ユーザー定義スクリプト</target>
        </trans-unit>
        <trans-unit id="4b3001e1e335286eb8e8d13dd18b9dd59edd812d" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;logout&quot;&gt;&lt;code&gt;yarn logout&lt;/code&gt;&lt;/a&gt; you can delete your username and email.</source>
          <target state="translated">使用する&lt;a href=&quot;logout&quot;&gt; &lt;code&gt;yarn logout&lt;/code&gt; &lt;/a&gt;、あなたのユーザ名と電子メールを削除することができます。</target>
        </trans-unit>
        <trans-unit id="a7393e605bc0726d9b3af5b8afa944125c9c0ac8" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;--dev&lt;/code&gt; or &lt;code&gt;-D&lt;/code&gt; will install one or more packages in your &lt;a href=&quot;../dependency-types#toc-dev-dependencies&quot;&gt;&lt;code&gt;devDependencies&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;--dev&lt;/code&gt; または &lt;code&gt;-D&lt;/code&gt; を使用すると、1つ以上のパッケージが&lt;a href=&quot;../dependency-types#toc-dev-dependencies&quot;&gt; &lt;code&gt;devDependencies&lt;/code&gt; に&lt;/a&gt;インストールされます。</target>
        </trans-unit>
        <trans-unit id="f69a4d765751f2f66f28ca0311b37c6740cce59d" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;--exact&lt;/code&gt; or &lt;code&gt;-E&lt;/code&gt; installs the packages as exact versions. The default is to use the most recent release with the same major version. For example, &lt;code&gt;yarn add foo@1.2.3&lt;/code&gt; would accept version &lt;code&gt;1.9.1&lt;/code&gt;, but &lt;code&gt;yarn add foo@1.2.3 --exact&lt;/code&gt; would only accept version &lt;code&gt;1.2.3&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--exact&lt;/code&gt; または &lt;code&gt;-E&lt;/code&gt; を使用すると、パッケージが正確なバージョンとしてインストールされます。デフォルトでは、同じメジャーバージョンの最新リリースを使用します。たとえば、 &lt;code&gt;yarn add foo@1.2.3&lt;/code&gt; はバージョン &lt;code&gt;1.9.1&lt;/code&gt; を受け入れますが、 &lt;code&gt;yarn add foo@1.2.3 --exact&lt;/code&gt; はバージョン &lt;code&gt;1.2.3&lt;/code&gt; のみを受け入れます。</target>
        </trans-unit>
        <trans-unit id="da465e113d6676914f1fb3412ba49544904f9550" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;--ignore-workspace-root-check&lt;/code&gt; or &lt;code&gt;-W&lt;/code&gt; allows a package to be installed at the workspaces root. This tends not to be desired behaviour, as dependencies are generally expected to be part of a workspace. For example &lt;code&gt;yarn add lerna --ignore-workspace-root-check --dev&lt;/code&gt; at the workspaces root would allow lerna to be used within the scripts of the root package.json</source>
          <target state="translated">使用 &lt;code&gt;--ignore-workspace-root-check&lt;/code&gt; または &lt;code&gt;-W&lt;/code&gt; は、パッケージには、ワークスペースのルートに設置することができます。依存関係は一般的にワークスペースの一部であると予想されるため、これは望ましい動作ではない傾向があります。たとえば、workspaces rootで &lt;code&gt;yarn add lerna --ignore-workspace-root-check --dev&lt;/code&gt; を使用すると、lernaをルートパッケージのスクリプト内で使用できます。json</target>
        </trans-unit>
        <trans-unit id="95ab1ba969ea54dab75adadee194541861bc2801" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;--optional&lt;/code&gt; or &lt;code&gt;-O&lt;/code&gt; will install one or more packages in your &lt;a href=&quot;../dependency-types#toc-optional-dependencies&quot;&gt;&lt;code&gt;optionalDependencies&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用 &lt;code&gt;--optional&lt;/code&gt; または &lt;code&gt;-O&lt;/code&gt; はあなたに1つ以上のパッケージをインストールします&lt;a href=&quot;../dependency-types#toc-optional-dependencies&quot;&gt; &lt;code&gt;optionalDependencies&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="063905951f9c91f76e41198443b06bb6517509b5" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;--peer&lt;/code&gt; or &lt;code&gt;-P&lt;/code&gt; will install one or more packages in your &lt;a href=&quot;../dependency-types#toc-peer-dependencies&quot;&gt;&lt;code&gt;peerDependencies&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用 &lt;code&gt;--peer&lt;/code&gt; または &lt;code&gt;-P&lt;/code&gt; はあなたに1つ以上のパッケージをインストールします&lt;a href=&quot;../dependency-types#toc-peer-dependencies&quot;&gt; &lt;code&gt;peerDependencies&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9bf64cf8c24e5cfac05644dc7a5dc766c1a1a1b6" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;--tilde&lt;/code&gt; or &lt;code&gt;-T&lt;/code&gt; installs the most recent release of the packages that have the same minor version. The default is to use the most recent release with the same major version. For example, &lt;code&gt;yarn add foo@1.2.3 --tilde&lt;/code&gt; would accept &lt;code&gt;1.2.9&lt;/code&gt; but not &lt;code&gt;1.3.0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--tilde&lt;/code&gt; または &lt;code&gt;-T&lt;/code&gt; を使用すると、同じマイナーバージョンを持つパッケージの最新リリースがインストールされます。デフォルトでは、同じメジャーバージョンの最新リリースを使用します。たとえば、 &lt;code&gt;yarn add foo@1.2.3 --tilde&lt;/code&gt; は &lt;code&gt;1.2.9&lt;/code&gt; を受け入れますが、 &lt;code&gt;1.3.0&lt;/code&gt; は受け入れません。</target>
        </trans-unit>
        <trans-unit id="192ed8ef1f4098bbb43a2d0943c2e67d528eb42e" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;~&lt;/code&gt; with a minor version specified allows &lt;code&gt;patch&lt;/code&gt; changes. Using &lt;code&gt;~&lt;/code&gt; with only major version specified will allow &lt;code&gt;minor&lt;/code&gt; changes.</source>
          <target state="translated">マイナーバージョンを指定して &lt;code&gt;~&lt;/code&gt; を使用すると、 &lt;code&gt;patch&lt;/code&gt; 変更できます。メジャーバージョンのみを指定して &lt;code&gt;~&lt;/code&gt; を使用すると、 &lt;code&gt;minor&lt;/code&gt; 変更が可能になります。</target>
        </trans-unit>
        <trans-unit id="b2123abe3d83fe5d688bff79b8601789a0e3ab21" translate="yes" xml:space="preserve">
          <source>Using Yarn you'll be working with dependencies all the time. Let's go through the different types and versions of dependencies.</source>
          <target state="translated">Yarn を使うと、常に依存関係を扱うことになります。依存関係の種類とバージョンを見ていきましょう。</target>
        </trans-unit>
        <trans-unit id="e5d88410429f7cfcb1aa8925832233dcd2c5c2e9" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;yarn version&lt;/code&gt; command you can update the version of your package via the command line.</source>
          <target state="translated">&lt;code&gt;yarn version&lt;/code&gt; コマンドを使用すると、コマンドラインからパッケージのバージョンを更新できます。</target>
        </trans-unit>
        <trans-unit id="3516a1061a2b064260c81d7d15a4cdbdbc1c2b65" translate="yes" xml:space="preserve">
          <source>Using the dependency tree in an existing &lt;code&gt;package-lock.json&lt;/code&gt; file created by &lt;code&gt;npm install&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;npm install&lt;/code&gt; で作成された既存の &lt;code&gt;package-lock.json&lt;/code&gt; ファイルの依存関係ツリーを使用する</target>
        </trans-unit>
        <trans-unit id="2fb9d4aa632f7bd3cc43fe6bfce9e6c023815090" translate="yes" xml:space="preserve">
          <source>Value must be a boolean, defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">値はブール値でなければならず、デフォルトは &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4e846a5f1e6d430e778017bf0dc49d0fa48d1892" translate="yes" xml:space="preserve">
          <source>Value must be a relative file path, or &lt;code&gt;false&lt;/code&gt; to disable (default).</source>
          <target state="translated">値は相対ファイルパスであるか、無効にする場合は &lt;code&gt;false&lt;/code&gt; にする必要があります（デフォルト）。</target>
        </trans-unit>
        <trans-unit id="46162ca4c9dd9e0132f71ebc34e28d86e9a325d5" translate="yes" xml:space="preserve">
          <source>Value must be a relative file path, or &lt;code&gt;false&lt;/code&gt; to disable the mirror (default).</source>
          <target state="translated">値は相対ファイルパスであるか、ミラーを無効にする場合は &lt;code&gt;false&lt;/code&gt; にする必要があります（デフォルト）。</target>
        </trans-unit>
        <trans-unit id="1022b9e64a96f38344428baafbff3b8a4ec98913" translate="yes" xml:space="preserve">
          <source>Various links to documentation, places to file issues and where your package code actually lives.</source>
          <target state="translated">ドキュメントへの様々なリンク、問題をファイルする場所、パッケージコードが実際に存在する場所など。</target>
        </trans-unit>
        <trans-unit id="64002125b088b31c4e622418c9f5054d25fc6074" translate="yes" xml:space="preserve">
          <source>Verbose output with &lt;code&gt;--verbose&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--verbose&lt;/code&gt; を使用した詳細出力</target>
        </trans-unit>
        <trans-unit id="429f7c1ce1732135663d5c500aa11a21da3ca318" translate="yes" xml:space="preserve">
          <source>Verifies that already installed files in &lt;code&gt;node_modules&lt;/code&gt; did not get removed.</source>
          <target state="translated">&lt;code&gt;node_modules&lt;/code&gt; に既にインストールされているファイルが削除されていないことを確認します。</target>
        </trans-unit>
        <trans-unit id="99b4b1dd20352caff1b9b99ec390749f4a69e2dc" translate="yes" xml:space="preserve">
          <source>Verifies that versions and hashed values of the package contents in the project&amp;rsquo;s &lt;code&gt;package.json&lt;/code&gt; match those in yarn&amp;rsquo;s lock file. This helps to verify that the package dependencies have not been altered.</source>
          <target state="translated">プロジェクトの &lt;code&gt;package.json&lt;/code&gt; 内のパッケージコンテンツのバージョンとハッシュ値が、yarnのロックファイル内のものと一致することを確認します。これは、パッケージの依存関係が変更されていないことを確認するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="3e298cb17ae9918aa448f573e68581bb76c6bf74" translate="yes" xml:space="preserve">
          <source>Verifies that versions of the package dependencies in the current project&amp;rsquo;s &lt;code&gt;package.json&lt;/code&gt; match those in yarn&amp;rsquo;s lock file.</source>
          <target state="translated">現在のプロジェクトの &lt;code&gt;package.json&lt;/code&gt; のパッケージ依存関係のバージョンが、yarnのロックファイルのバージョンと一致することを確認します。</target>
        </trans-unit>
        <trans-unit id="c3030707dc3d725f47618f6390a3008b8084fe4c" translate="yes" xml:space="preserve">
          <source>Version lifecycle methods</source>
          <target state="translated">バージョンライフサイクルの方法</target>
        </trans-unit>
        <trans-unit id="39cdb929710bc7fa6490df1be7c1d7ad0b6d36d6" translate="yes" xml:space="preserve">
          <source>Version range</source>
          <target state="translated">バージョン範囲</target>
        </trans-unit>
        <trans-unit id="235378c2994f9bb0717b5e84d82d34e8d1ccf39e" translate="yes" xml:space="preserve">
          <source>Version ranges</source>
          <target state="translated">バージョン範囲</target>
        </trans-unit>
        <trans-unit id="3e2945da84dd983138a54c2b5f18f12ee8df050b" translate="yes" xml:space="preserve">
          <source>Versions can also have &lt;strong&gt;pre-release tags&lt;/strong&gt; (e.g. &lt;code&gt;3.1.4-beta.2&lt;/code&gt;). If a comparator includes a version with a pre-release tag it will only match against versions that have the same &lt;code&gt;major.minor.patch&lt;/code&gt; version.</source>
          <target state="translated">バージョンには、&lt;strong&gt;プレリリースタグを付ける&lt;/strong&gt;こともでき&lt;strong&gt;ます&lt;/strong&gt;（例 &lt;code&gt;3.1.4-beta.2&lt;/code&gt; ）。コンパレーターにプレリリースタグが付いたバージョンが含まれている場合、 &lt;code&gt;major.minor.patch&lt;/code&gt; と同じバージョンのメジャーとのみ一致します。</target>
        </trans-unit>
        <trans-unit id="441130d91191e86b1dab5901fe453b8ed29241e0" translate="yes" xml:space="preserve">
          <source>We will get this updated &lt;code&gt;package.json&lt;/code&gt;:</source>
          <target state="translated">この更新された &lt;code&gt;package.json&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="676b3efa13c5aec558ba01a79812e69d628c5b27" translate="yes" xml:space="preserve">
          <source>What are tags?</source>
          <target state="translated">タグとは?</target>
        </trans-unit>
        <trans-unit id="52c5f2b368d02de3f6f2afbdfd601b1770494b8d" translate="yes" xml:space="preserve">
          <source>What is a package owner?</source>
          <target state="translated">パッケージオーナーとは?</target>
        </trans-unit>
        <trans-unit id="3ec313c6f0b22579389ceb0606a589cfe8383a7d" translate="yes" xml:space="preserve">
          <source>What is a workspace?</source>
          <target state="translated">ワークスペースとは?</target>
        </trans-unit>
        <trans-unit id="5c17be909a035d6e69a62004d599eb83933dcd7d" translate="yes" xml:space="preserve">
          <source>When creating Yarn packages, you are encouraged to keep them small and simple. Break large packages into many small ones if it makes sense to do so. This is highly encouraged as Yarn is capable of installing hundreds or even thousands of packages very efficiently.</source>
          <target state="translated">ヤーンのパッケージを作るときは、小さくてシンプルなものにすることをお勧めします。大きなパッケージをいくつかの小さなパッケージに分割してください。Yarn は何百、何千ものパッケージを非常に効率的にインストールすることができるので、これを強くお勧めします。</target>
        </trans-unit>
        <trans-unit id="ed7da7777004d3ebeb39a0c7dbb420cdcfaf9670" translate="yes" xml:space="preserve">
          <source>When developers talk about two semver versions being &amp;ldquo;compatible&amp;rdquo; with one another they are referring to the &lt;strong&gt;backwards-compatible&lt;/strong&gt; changes (&lt;code&gt;minor&lt;/code&gt; and &lt;code&gt;patch&lt;/code&gt;).</source>
          <target state="translated">開発者が2つのsemverバージョンが互いに「互換性がある」と話すとき、それらは&lt;strong&gt;下位互換性のある&lt;/strong&gt;変更（ &lt;code&gt;minor&lt;/code&gt; と &lt;code&gt;patch&lt;/code&gt; ）を指します。</target>
        </trans-unit>
        <trans-unit id="2816738ec0efdf7e1564e4582f637b5df710d71f" translate="yes" xml:space="preserve">
          <source>When developing a package, installing dependencies is most commonly done after:</source>
          <target state="translated">パッケージを開発する際には、依存関係のインストールは後回しにするのが一般的です。</target>
        </trans-unit>
        <trans-unit id="b147536d5af981f241982e4e7a3a7db86da3e010" translate="yes" xml:space="preserve">
          <source>When installing packages, Yarn will provide upgrade instructions if you have an outdated CLI installation. You can disable this check here.</source>
          <target state="translated">パッケージをインストールする際に、古いCLIがインストールされている場合、Yarnはアップグレードの指示を出します。このチェックはここで無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="1d1a49222e26621fd414ee60ec0bae35e8185c8f" translate="yes" xml:space="preserve">
          <source>When installing your package, you can specify exact locations to put binary files, man pages, documentation, examples, etc.</source>
          <target state="translated">パッケージをインストールする際に、バイナリファイル、マニュアルページ、ドキュメント、サンプルなどを正確に配置する場所を指定することができます。</target>
        </trans-unit>
        <trans-unit id="47481b4192caaa3adcc77b0404582f031cc50a7d" translate="yes" xml:space="preserve">
          <source>When running multiple instances of yarn as the same user on the same server, you can ensure only one instance runs at any given time (and avoid conflicts) by passing the global flag &lt;code&gt;--mutex&lt;/code&gt; followed by &lt;code&gt;file&lt;/code&gt; or &lt;code&gt;network&lt;/code&gt;.</source>
          <target state="translated">糸の複数のインスタンスを同じサーバーで同じユーザーとして実行する場合、グローバルフラグ &lt;code&gt;--mutex&lt;/code&gt; に続けて &lt;code&gt;file&lt;/code&gt; または &lt;code&gt;network&lt;/code&gt; を渡すことにより、常に 1つのインスタンスのみが実行されるように（競合を回避）できます。</target>
        </trans-unit>
        <trans-unit id="577855d8d75e29528caa7589696a4304cf2bae87" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;.yarnclean&lt;/code&gt; file exists in a package, autoclean functionality will be enabled. The clean will be performed:</source>
          <target state="translated">&lt;code&gt;.yarnclean&lt;/code&gt; ファイルがパッケージに存在する場合、autoclean機能が有効になります。クリーンアップが実行されます：</target>
        </trans-unit>
        <trans-unit id="e7043b74c0ee85d72db32ffb8df7e175b140ead3" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;yarn autoclean --init&lt;/code&gt; command is used to create a &lt;code&gt;.yarnclean&lt;/code&gt; file, it will be pre-populated with a set of default items for deletion. This default list is a guess at what is likely not needed. It is impossible to predict all directories and files that are actually unnecessary for all existing and future NPM packages, so this default list may cause a package to no longer work.</source>
          <target state="translated">ときに &lt;code&gt;yarn autoclean --init&lt;/code&gt; コマンドを作成するために使用される &lt;code&gt;.yarnclean&lt;/code&gt; ファイルを、それが削除のデフォルトアイテムのセットが事前に取り込まれます。このデフォルトのリストは、おそらく必要ないものを推測したものです。既存および将来のすべてのNPMパッケージに実際に不要なすべてのディレクトリーおよびファイルを予測することは不可能であるため、このデフォルトのリストにより、パッケージが機能しなくなる可能性があります。</target>
        </trans-unit>
        <trans-unit id="ac1166843017326b0e1b697a5cd2bef915b6bc33" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;yarn version&lt;/code&gt; command is run it will also run the usual lifecycle methods in the following order:</source>
          <target state="translated">ときに &lt;code&gt;yarn version&lt;/code&gt; コマンドが実行され、それはまた、次の順序で通常のライフサイクルメソッドを実行します：</target>
        </trans-unit>
        <trans-unit id="039b2d4cbf918de68dd5d577635cc89b4afe2b16" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;file&lt;/code&gt; Yarn will write/read a mutex file &lt;code&gt;.yarn-single-instance&lt;/code&gt; in the current working directory by default. You can also specify an alternate or global filename.</source>
          <target state="translated">&lt;code&gt;file&lt;/code&gt; を使用すると、 Yarnはデフォルトで現在の作業ディレクトリにミューテックスファイル &lt;code&gt;.yarn-single-instance&lt;/code&gt; を書き込み/読み取ります。代替ファイル名またはグローバルファイル名を指定することもできます。</target>
        </trans-unit>
        <trans-unit id="19064a303f02256689f2e376980fa7810a6b96bd" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;network&lt;/code&gt; Yarn will create a server at port &lt;code&gt;31997&lt;/code&gt; by default. You can also specify an alternate port.</source>
          <target state="translated">&lt;code&gt;network&lt;/code&gt; を使用する場合、Yarnはデフォルトでポート &lt;code&gt;31997&lt;/code&gt; にサーバーを作成します。代替ポートを指定することもできます。</target>
        </trans-unit>
        <trans-unit id="57edc8cd60bd5f94c331e890ad1c781fd9c11744" translate="yes" xml:space="preserve">
          <source>When we run the &lt;code&gt;yarn version&lt;/code&gt; command:</source>
          <target state="translated">&lt;code&gt;yarn version&lt;/code&gt; コマンドを実行すると：</target>
        </trans-unit>
        <trans-unit id="7b2a300a21a6c620da45ecdf3b125b65b8624d97" translate="yes" xml:space="preserve">
          <source>When working inside a team, you usually end up in the situation where one of your colleagues uses a different version of Yarn than you. While usually inconsequential, it might sometimes cause subtle and hard to debug issues - for example your colleague might be on a version of Yarn that doesn&amp;rsquo;t support a feature you rely on, such as the workspaces.</source>
          <target state="translated">チーム内で作業する場合、通常、同僚の1人があなたとは異なるバージョンの糸を使用している状況に陥ります。通常は重要ではありませんが、場合によっては微妙でデバッグが困難な問題が発生することがあります。たとえば、ワークスペースなど、依存している機能をサポートしていないバージョンのYarnを同僚が使用している場合があります。</target>
        </trans-unit>
        <trans-unit id="59d1a69eb08fa1e75090c5ee41e2049f1b6034c5" translate="yes" xml:space="preserve">
          <source>When you publish a package with Yarn it goes onto the &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm registry&lt;/a&gt; which is used to distribute packages globally.</source>
          <target state="translated">Yarnでパッケージを公開すると、パッケージはグローバルに配布するために使用される&lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npmレジストリに&lt;/a&gt;移動します。</target>
        </trans-unit>
        <trans-unit id="6df089f3e849e91deaae418b04620a371d37b2bc" translate="yes" xml:space="preserve">
          <source>When you remove a package, it is removed from all types of dependencies: &lt;code&gt;dependencies&lt;/code&gt;, &lt;code&gt;devDependencies&lt;/code&gt;, etc.</source>
          <target state="translated">パッケージを削除すると、依存関係のすべてのタイプ（依存 &lt;code&gt;dependencies&lt;/code&gt; 、 &lt;code&gt;devDependencies&lt;/code&gt; など）から削除されます。</target>
        </trans-unit>
        <trans-unit id="a9822a2035fd2307674cc5f3a0025666481fe191" translate="yes" xml:space="preserve">
          <source>When you run &lt;code&gt;yarn init&lt;/code&gt;, all it is doing is creating this file, nothing happens in the background. You can feel free to edit this file as much as you want.</source>
          <target state="translated">&lt;code&gt;yarn init&lt;/code&gt; を実行すると、このファイルが作成されるだけで、バックグラウンドでは何も起こりません。このファイルは自由に編集してかまいません。</target>
        </trans-unit>
        <trans-unit id="1d27be2f4806441f7fee0b43f2a407d6aa0a4900" translate="yes" xml:space="preserve">
          <source>When you run &lt;code&gt;yarn init&lt;/code&gt;, all it is doing is creating this file. Nothing happens in the background. You can feel free to edit this file as much as you want.</source>
          <target state="translated">&lt;code&gt;yarn init&lt;/code&gt; を実行すると、このファイルを作成するだけです。バックグラウンドでは何も起こりません。このファイルは自由に編集してかまいません。</target>
        </trans-unit>
        <trans-unit id="295d12774c501b1097324ff6fcd38720c23b191d" translate="yes" xml:space="preserve">
          <source>When you run either &lt;code&gt;yarn&lt;/code&gt; or &lt;code&gt;yarn add &amp;lt;package&amp;gt;&lt;/code&gt;, Yarn will generate a &lt;code&gt;yarn.lock&lt;/code&gt; file within the root directory of your package. You don&amp;rsquo;t need to read or understand this file - just check it into source control. When other people start using Yarn instead of &lt;code&gt;npm&lt;/code&gt;, the &lt;code&gt;yarn.lock&lt;/code&gt; file will ensure that they get precisely the same dependencies as you have.</source>
          <target state="translated">&lt;code&gt;yarn&lt;/code&gt; または &lt;code&gt;yarn add &amp;lt;package&amp;gt;&lt;/code&gt; を実行すると、糸はパッケージのルートディレクトリ内に糸。 &lt;code&gt;yarn.lock&lt;/code&gt; ファイルを生成します。このファイルを読んだり理解したりする必要はありません。ソース管理にチェックインするだけです。他の人が &lt;code&gt;npm&lt;/code&gt; の代わりにYarnを使い始めると、 &lt;code&gt;yarn.lock&lt;/code&gt; ファイルは、あなたが持っているのとまったく同じ依存関係を確実に得るようにします。</target>
        </trans-unit>
        <trans-unit id="7c28c96d970b2bd16390831548545005cc4473fd" translate="yes" xml:space="preserve">
          <source>When you select an open source license for your package, be sure to add a &lt;code&gt;LICENSE&lt;/code&gt; file in the root of your package with the license text and update your &lt;code&gt;package.json&lt;/code&gt;&lt;code&gt;license&lt;/code&gt; field.</source>
          <target state="translated">パッケージのオープンソースライセンスを選択する場合は、ライセンステキストを含むパッケージのルートに &lt;code&gt;LICENSE&lt;/code&gt; ファイルを追加し、 &lt;code&gt;package.json&lt;/code&gt; &lt;code&gt;license&lt;/code&gt; フィールドを更新してください。</target>
        </trans-unit>
        <trans-unit id="54632cd651fdea553f6ae90c55af521f128f2289" translate="yes" xml:space="preserve">
          <source>When you think about it, Yarn knows everything about your dependency tree - it evens installs it! So why is Node tasked with locating your packages on the disk? Why don&amp;rsquo;t we simply query Yarn, and let it tell us where to look for a package X required by a package Y? That&amp;rsquo;s what Plug&amp;rsquo;n&amp;rsquo;Play (abbreviated PnP) is. Instead of generating a &lt;code&gt;node_modules&lt;/code&gt; directory and leaving the resolution to Node, we now generate a single &lt;code&gt;.pnp.js&lt;/code&gt; file and let Yarn tell us where to find our packages. Doing this provides a lot of benefits:</source>
          <target state="translated">あなたがそれについて考えるとき、ヤーンはあなたの依存関係ツリーについてすべてを知っています-それはそれをインストールさえします！では、なぜNodeはパッケージをディスク上に配置する必要があるのでしょうか。Yarnにクエリを実行して、パッケージYに必要なパッケージXを探す場所を教えてみませんか？それがPlug'n'Play（略称PnP）です。 &lt;code&gt;node_modules&lt;/code&gt; ディレクトリを生成して解決をNodeに任せる代わりに、単一の &lt;code&gt;.pnp.js&lt;/code&gt; ファイルを生成して、Yarnにパッケージの場所を通知させます。これを行うことには多くの利点があります：</target>
        </trans-unit>
        <trans-unit id="dcdf747758bf632207350ac1637b9d298a63c8a4" translate="yes" xml:space="preserve">
          <source>When you want to add, upgrade, or remove dependencies there are a couple of different commands you need to know.</source>
          <target state="translated">依存関係を追加したり、アップグレードしたり、削除したりするときには、いくつかの異なるコマンドを知っておく必要があります。</target>
        </trans-unit>
        <trans-unit id="4372664b2906ccbc429ec285fb84aea82de1f2be" translate="yes" xml:space="preserve">
          <source>When you want to distribute some files with your module.</source>
          <target state="translated">モジュールでいくつかのファイルを配布したい場合。</target>
        </trans-unit>
        <trans-unit id="66925272903262cf409623f8e8216693c2d289de" translate="yes" xml:space="preserve">
          <source>When you want to re-use a third party library that doesn&amp;rsquo;t come from the npm registry or that was modified.</source>
          <target state="translated">npmレジストリに含まれていない、または変更されたサードパーティライブラリを再利用する場合。</target>
        </trans-unit>
        <trans-unit id="a773b99cd83345a83268afe7bbfed1155b04538b" translate="yes" xml:space="preserve">
          <source>When you want to re-use your own projects as modules.</source>
          <target state="translated">自分のプロジェクトをモジュールとして再利用したい場合。</target>
        </trans-unit>
        <trans-unit id="5ff09d91677cc0811393dedecec111d9064cf25a" translate="yes" xml:space="preserve">
          <source>When you want to specify a dependency you specify its name and a &lt;strong&gt;version range&lt;/strong&gt; in your &lt;code&gt;package.json&lt;/code&gt; like one of these:</source>
          <target state="translated">依存関係を指定する場合は、次のいずれかのように、 &lt;code&gt;package.json&lt;/code&gt; でその名前と&lt;strong&gt;バージョン範囲&lt;/strong&gt;を指定します。</target>
        </trans-unit>
        <trans-unit id="50918d50d50417fcfef69ae0cae82b164def35c5" translate="yes" xml:space="preserve">
          <source>Which produces the following &lt;code&gt;package.json&lt;/code&gt;:</source>
          <target state="translated">これにより、次の &lt;code&gt;package.json&lt;/code&gt; が生成されます。</target>
        </trans-unit>
        <trans-unit id="080d26ba9a6a9550d6b04ef3c86f7698f515415e" translate="yes" xml:space="preserve">
          <source>While all of the available commands are provided here, in alphabetical order, some of the more popular commands are:</source>
          <target state="translated">ここでは利用可能なすべてのコマンドをアルファベット順に紹介していますが、より一般的なコマンドとしては以下のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="35efe1bf901befd684efe6e539691c60801154d6" translate="yes" xml:space="preserve">
          <source>While we do our best to make Plug&amp;rsquo;n&amp;rsquo;Play a delightful experience, sometimes things might go wrong. The following page describes some common scenario one should be aware of, and provides some guidance to fix them.</source>
          <target state="translated">Plug'n'Playを楽しいエクスペリエンスにするために最善を尽くしていますが、場合によっては問題が発生することもあります。次のページでは、知っておくべきいくつかの一般的なシナリオについて説明し、それらを修正するためのガイダンスを提供します。</target>
        </trans-unit>
        <trans-unit id="a7014ccea6bb022c5f39ac04cab20fe903828898" translate="yes" xml:space="preserve">
          <source>Why would you want to do this?</source>
          <target state="translated">なぜこんなことをしたいのか?</target>
        </trans-unit>
        <trans-unit id="26d9c28d789c254f71ea99a3463b99a7ccc2f4fa" translate="yes" xml:space="preserve">
          <source>Windows</source>
          <target state="translated">Windows</target>
        </trans-unit>
        <trans-unit id="ce4c15a7b48ee210337f3788456fa4018d7edd35" translate="yes" xml:space="preserve">
          <source>Working with version control (e.g. git)</source>
          <target state="translated">バージョン管理の作業 (git など)</target>
        </trans-unit>
        <trans-unit id="205b4561ed36923d5a51de1b34c70044bf82e111" translate="yes" xml:space="preserve">
          <source>Workspaces</source>
          <target state="translated">Workspaces</target>
        </trans-unit>
        <trans-unit id="3f9cf077c984b89dcf2c908563a54ea4dda065e0" translate="yes" xml:space="preserve">
          <source>Workspaces are a new way to setup your package architecture that&amp;rsquo;s available by default starting from Yarn 1.0. It allows you to setup multiple packages in such a way that you only need to run &lt;code&gt;yarn install&lt;/code&gt; once to install all of them in a single pass.</source>
          <target state="translated">ワークスペースは、Yarn 1.0以降、デフォルトで利用可能なパッケージアーキテクチャをセットアップする新しい方法です。これにより、 &lt;code&gt;yarn install&lt;/code&gt; を 1回実行するだけですべてのパッケージを1回のパスでインストールできるように、複数のパッケージをセットアップできます。</target>
        </trans-unit>
        <trans-unit id="1b4a4311596a64df2da56b93e59523682b2a4277" translate="yes" xml:space="preserve">
          <source>Workspaces are stable enough to be used in large-scale applications and shouldn&amp;rsquo;t change anything from the way the regular installs work, but if you think they&amp;rsquo;re breaking something, you can disable them by adding the following line into your Yarnrc file:</source>
          <target state="translated">ワークスペースは十分に安定しており、大規模なアプリケーションで使用でき、通常のインストールの動作から何も変更すべきではありませんが、何かが壊れていると思われる場合は、Yarnrcファイルに次の行を追加することでワークスペースを無効にできます。</target>
        </trans-unit>
        <trans-unit id="093040017d5b682ad9ab874d539919d828ce9fec" translate="yes" xml:space="preserve">
          <source>Workspaces in Yarn</source>
          <target state="translated">糸のワークスペース</target>
        </trans-unit>
        <trans-unit id="f39735721870c05ebf1d5c0247a66202c63f7780" translate="yes" xml:space="preserve">
          <source>Workspaces must be descendants of the workspace root in terms of folder hierarchy. You cannot and must not reference a workspace that is located outside of this filesystem hierarchy.</source>
          <target state="translated">ワークスペースは、フォルダ階層の点でワークスペース ルートの子孫でなければなりません。このファイルシステム階層の外側にあるワークスペースを参照することはできませんし、してはいけません。</target>
        </trans-unit>
        <trans-unit id="bfa4849e2b7c751ef008c571486fc36a2a2202c2" translate="yes" xml:space="preserve">
          <source>X-Ranges</source>
          <target state="translated">X-Ranges</target>
        </trans-unit>
        <trans-unit id="4de67a4d313139fb2f1d0ad9d2c13d0921ddb131" translate="yes" xml:space="preserve">
          <source>Yarn</source>
          <target state="translated">Yarn</target>
        </trans-unit>
        <trans-unit id="48aff78be0722cf6df522de5d2db3c33fb5dd5fb" translate="yes" xml:space="preserve">
          <source>Yarn Organization</source>
          <target state="translated">ヤーンの構成</target>
        </trans-unit>
        <trans-unit id="07982e951803d01d781cbe1cde499aa0d85f4a21" translate="yes" xml:space="preserve">
          <source>Yarn allows you to use other developers&amp;rsquo; solutions to different problems, making it easier for you to develop your software. If you have problems, you can report issues or contribute back, and when the problem is fixed, you can use Yarn to keep it all up to date.</source>
          <target state="translated">Yarnを使用すると、さまざまな問題に対する他の開発者のソリューションを使用できるため、ソフトウェアの開発が容易になります。問題がある場合は、問題を報告したり、貢献したりできます。問題が修正されたら、Yarnを使用してすべてを最新の状態に保つことができます。</target>
        </trans-unit>
        <trans-unit id="d0d3d9fe5ec35126345c8c7323080598b1ad5287" translate="yes" xml:space="preserve">
          <source>Yarn also uses a &lt;code&gt;yarn.lock&lt;/code&gt; file in the root of your project to make dependency resolution fast and reliable. You never need to touch this file- yarn owns it and will change it when managing dependencies.</source>
          <target state="translated">Yarnはまた、プロジェクトのルートに &lt;code&gt;yarn.lock&lt;/code&gt; ファイルを使用して、依存関係の解決を高速で信頼性の高いものにします。このファイルに触れる必要はありません。ファイルを所有し、依存関係を管理するときに変更します。</target>
        </trans-unit>
        <trans-unit id="2cde9337dd92b3d3d15eb878e80c8e291c9b6537" translate="yes" xml:space="preserve">
          <source>Yarn can easily be used in various continuous integration systems. To speed up builds, the Yarn cache directory can be saved across builds.</source>
          <target state="translated">Yarnは様々な継続的インテグレーションシステムで簡単に利用することができます。ビルドを高速化するために、Yarn のキャッシュディレクトリをビルド間で保存することができます。</target>
        </trans-unit>
        <trans-unit id="ae19f65fa04149b8842499f83225f78409ebc7a9" translate="yes" xml:space="preserve">
          <source>Yarn interops directly with many features of npm, including its package metadata format, allowing for a painless migration.</source>
          <target state="translated">Yarn は、パッケージのメタデータ形式を含む npm の多くの機能と直接相互運用することができるので、苦痛のない移行を可能にします。</target>
        </trans-unit>
        <trans-unit id="e35d851d79ea42c43a4c0957df12aac0fbc2757e" translate="yes" xml:space="preserve">
          <source>Yarn is &lt;a href=&quot;https://www.appveyor.com/updates/2016/11/01/&quot;&gt;preinstalled on AppVeyor&lt;/a&gt;, so you don&amp;rsquo;t need to do anything extra in order to use it as part of your build.</source>
          <target state="translated">Yarnは&lt;a href=&quot;https://www.appveyor.com/updates/2016/11/01/&quot;&gt;AppVeyor&lt;/a&gt;にプリインストールされているため、ビルドの一部として使用するために追加の操作を行う必要はありません。</target>
        </trans-unit>
        <trans-unit id="674b818b1806860d789dadbf56793ead05159627" translate="yes" xml:space="preserve">
          <source>Yarn is a package manager for your code. It allows you to use and share code with other developers from around the world. Yarn does this quickly, securely, and reliably so you don&amp;rsquo;t ever have to worry.</source>
          <target state="translated">糸はあなたのコードのパッケージマネージャーです。コードを使用して、世界中の他の開発者と共有できます。糸はこれを迅速、安全、確実に行うので、心配する必要はありません。</target>
        </trans-unit>
        <trans-unit id="baeee06d643d76d9e4d106ed93c4fd6c1561d072" translate="yes" xml:space="preserve">
          <source>Yarn is executed through a rich set of commands allowing package installation, administration, publishing, and more.</source>
          <target state="translated">Yarnは、パッケージのインストール、管理、公開などを可能にする豊富なコマンドセットを通して実行されます。</target>
        </trans-unit>
        <trans-unit id="f9e747c9274077b1b3c99ecf3c36d5506707d54d" translate="yes" xml:space="preserve">
          <source>Yarn is pre-installed &lt;a href=&quot;https://codeship.com/features/basic&quot;&gt;Codeship Basic&lt;/a&gt;.</source>
          <target state="translated">糸は&lt;a href=&quot;https://codeship.com/features/basic&quot;&gt;Codeship Basic&lt;/a&gt;がプリインストールされています。</target>
        </trans-unit>
        <trans-unit id="ea6b561f365dd1cfe190c42768f5140d9c22285d" translate="yes" xml:space="preserve">
          <source>Yarn is pre-installed on &lt;a href=&quot;https://www.solanolabs.com/&quot;&gt;SolanoCI&lt;/a&gt;. You can quickly get up and running by following their &lt;a href=&quot;https://docs.solanolabs.com/ConfiguringLanguage/nodejs/#configuration&quot;&gt;Yarn documentation&lt;/a&gt;. For an example configuration file, check out one of &lt;a href=&quot;https://github.com/solanolabs/express/blob/master/solano.yml&quot;&gt;their sample configuration files&lt;/a&gt;.</source>
          <target state="translated">糸は&lt;a href=&quot;https://www.solanolabs.com/&quot;&gt;SolanoCIに&lt;/a&gt;プリインストールされています。&lt;a href=&quot;https://docs.solanolabs.com/ConfiguringLanguage/nodejs/#configuration&quot;&gt;Yarnのドキュメントに&lt;/a&gt;従うことで、すぐに立ち上げて実行できます。構成ファイルの例については&lt;a href=&quot;https://github.com/solanolabs/express/blob/master/solano.yml&quot;&gt;、サンプル構成ファイルの&lt;/a&gt; 1つを確認してください。</target>
        </trans-unit>
        <trans-unit id="9b72bae99a116bc4ac67b0aabe685d81978e9074" translate="yes" xml:space="preserve">
          <source>Yarn looks for &lt;code&gt;package.json&lt;/code&gt; files to identify each package and configure the behavior of yarn while running inside that package.</source>
          <target state="translated">Yarnは、 &lt;code&gt;package.json&lt;/code&gt; ファイルを探して各パッケージを識別し、そのパッケージ内で実行中のyarnの動作を構成します。</target>
        </trans-unit>
        <trans-unit id="8470d27690b92f9f533704fb16a7624ffd95b099" translate="yes" xml:space="preserve">
          <source>Yarn packages are generally encouraged to be &lt;a href=&quot;https://opensource.org/definition&quot;&gt;open source&lt;/a&gt;, however it&amp;rsquo;s important to note that they aren&amp;rsquo;t inherently open source by simply publishing them.</source>
          <target state="translated">糸のパッケージは一般に&lt;a href=&quot;https://opensource.org/definition&quot;&gt;オープンソース&lt;/a&gt;であることが推奨されますが、単に公開するだけでは本質的にオープンソースではないことに注意することが重要です。</target>
        </trans-unit>
        <trans-unit id="7d01745a2d523338f45c0b935ba21b86c86070a2" translate="yes" xml:space="preserve">
          <source>Yarn provides a rich set of command-line commands to help you with various aspects of your Yarn package, including installation, administration, publishing, etc.</source>
          <target state="translated">Yarn は、インストール、管理、公開など、Yarn パッケージの様々な面で役立つ豊富なコマンドラインコマンドを提供しています。</target>
        </trans-unit>
        <trans-unit id="ea7e4b114800f82be34e10277e30b3e77cf0aa87" translate="yes" xml:space="preserve">
          <source>Yarn stores every package in a global cache in your user directory on the file system. &lt;code&gt;yarn cache list&lt;/code&gt; will print out every cached package.</source>
          <target state="translated">Yarnはすべてのパッケージをファイルシステムのユーザーディレクトリのグローバルキャッシュに保存します。 &lt;code&gt;yarn cache list&lt;/code&gt; は、キャッシュされたすべてのパッケージを出力します。</target>
        </trans-unit>
        <trans-unit id="f5a7e6d4437ab9d89e6c848c18ee09de1ef5a4af" translate="yes" xml:space="preserve">
          <source>Yarn supports selective version resolutions, which lets you define custom package versions or ranges inside your dependencies through the &lt;code&gt;resolutions&lt;/code&gt; field in your &lt;a href=&quot;https://yarnpkg.com/docs/package-json&quot;&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;/a&gt; file. Normally, this would require manual edits in the &lt;code&gt;yarn.lock&lt;/code&gt; file.</source>
          <target state="translated">Yarnは選択的なバージョン解決をサポートしています。これにより、&lt;a href=&quot;https://yarnpkg.com/docs/package-json&quot;&gt; &lt;code&gt;package.json&lt;/code&gt; &lt;/a&gt;ファイルの &lt;code&gt;resolutions&lt;/code&gt; フィールドを使用して、依存関係内のカスタムパッケージバージョンまたは範囲を定義できます。通常、これには、 &lt;code&gt;yarn.lock&lt;/code&gt; ファイルを手動で編集する必要があります。</target>
        </trans-unit>
        <trans-unit id="2df3078c54381702c1de6643ceeaab059bc23551" translate="yes" xml:space="preserve">
          <source>Yarn will also respect &lt;code&gt;cache=&amp;lt;path&amp;gt;&lt;/code&gt; in &lt;code&gt;.npmrc&lt;/code&gt; for compatibility with npm.</source>
          <target state="translated">Yarnは、npmとの互換性のために &lt;code&gt;.npmrc&lt;/code&gt; の &lt;code&gt;cache=&amp;lt;path&amp;gt;&lt;/code&gt; も考慮します。</target>
        </trans-unit>
        <trans-unit id="7f8a9004b11fa02c7065a84f52282a105f48f79e" translate="yes" xml:space="preserve">
          <source>Yarn will not install any package listed in &lt;code&gt;devDependencies&lt;/code&gt; if the &lt;code&gt;NODE_ENV&lt;/code&gt; environment variable is set to &lt;code&gt;production&lt;/code&gt;. Use this flag to instruct Yarn to ignore &lt;code&gt;NODE_ENV&lt;/code&gt; and take its production-or-not status from this flag instead.</source>
          <target state="translated">糸は、に記載されているすべてのパッケージはインストールされません &lt;code&gt;devDependencies&lt;/code&gt; を場合 &lt;code&gt;NODE_ENV&lt;/code&gt; の環境変数がに設定されている &lt;code&gt;production&lt;/code&gt; 。このフラグを使用してYarnに &lt;code&gt;NODE_ENV&lt;/code&gt; を無視し、代わりにこのフラグからその生産か否かのステータスを取得するように指示します。</target>
        </trans-unit>
        <trans-unit id="041dca82178adb88bf869e92711c51898c611c51" translate="yes" xml:space="preserve">
          <source>Yarn will use a single lockfile rather than a different one for each project, which means fewer conflicts and easier reviews.</source>
          <target state="translated">Yarnはプロジェクトごとに異なるロックファイルを使用するのではなく、1つのロックファイルを使用するので、競合が少なく、レビューが容易になります。</target>
        </trans-unit>
        <trans-unit id="6635985e3cd8f272aa179338d49d18416eb6591a" translate="yes" xml:space="preserve">
          <source>Yarn will warn you if a new version is available. To upgrade Yarn, you can do so with Homebrew.</source>
          <target state="translated">Yarnは新しいバージョンが利用可能になると警告します。Yarnをアップグレードするには、Homebrewで行います。</target>
        </trans-unit>
        <trans-unit id="dfe12a92f9ca38a7f5047b105f41dca321760737" translate="yes" xml:space="preserve">
          <source>Yarn&amp;rsquo;s workspaces are the low-level primitives that tools like Lerna can (and &lt;a href=&quot;https://github.com/lerna/lerna/pull/899&quot;&gt;do&lt;/a&gt;!) use. They will never try to support the high-level feature that Lerna offers, but by implementing the core logic of the resolution and linking steps inside Yarn itself we hope to enable new usages and improve performance.</source>
          <target state="translated">糸のワークスペースはレルナのようなツールは（とができることを、低レベルのプリミティブで&lt;a href=&quot;https://github.com/lerna/lerna/pull/899&quot;&gt;やる&lt;/a&gt;！）を使用します。彼らはLernaが提供する高レベルの機能をサポートしようとはしませんが、Yarn自体の内部に解決のコアロジックとリンク手順を実装することで、新しい使用法を有効にし、パフォーマンスを向上させたいと考えています。</target>
        </trans-unit>
        <trans-unit id="a0b0304ecf77c438c5d3ae117f9f5c0ada56bc81" translate="yes" xml:space="preserve">
          <source>You are encouraged to use an Open Source (&lt;a href=&quot;https://opensource.org/licenses/alphabetical&quot;&gt;OSI-approved&lt;/a&gt;) license unless you have a specific reason not to. If you built your package as part of your job it&amp;rsquo;s likely best to check with your company before deciding on a license.</source>
          <target state="translated">特別な理由がない限り、オープンソース（&lt;a href=&quot;https://opensource.org/licenses/alphabetical&quot;&gt;OSI承認&lt;/a&gt;）ライセンスを使用することをお勧めします。仕事の一環としてパッケージを作成した場合は、ライセンスを決定する前に会社に確認することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="28cdf36b5ad3f06b39ebe51288f39f261b76cb15" translate="yes" xml:space="preserve">
          <source>You are relying on an unmaintained but working package and one of its dependencies got upgraded. You know the upgrade would not break things and you also don&amp;rsquo;t want to fork the package you are relying on, just to update a minor dependency.</source>
          <target state="translated">メンテナンスされていないが機能しているパッケージに依存していて、その依存関係の1つがアップグレードされました。アップグレードによって問題が発生することはなく、依存関係を更新するために、依存しているパッケージをforkする必要もありません。</target>
        </trans-unit>
        <trans-unit id="737795f6ac2aedfa2cc96bd6cedf69b56a8f8c87" translate="yes" xml:space="preserve">
          <source>You can also add other &lt;a href=&quot;dependency-types&quot;&gt;types of dependencies&lt;/a&gt; using flags:</source>
          <target state="translated">フラグを使用して他の&lt;a href=&quot;dependency-types&quot;&gt;タイプの依存関係&lt;/a&gt;を追加することもできます。</target>
        </trans-unit>
        <trans-unit id="02b5995292508bb1dcd161a055f6f762efb541d8" translate="yes" xml:space="preserve">
          <source>You can also install Yarn through the &lt;a href=&quot;https://npmjs.org/&quot;&gt;npm package manager&lt;/a&gt; if you already have it installed. If you already have &lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; installed then you should already have npm.</source>
          <target state="translated">すでにインストールされている場合は、&lt;a href=&quot;https://npmjs.org/&quot;&gt;npmパッケージマネージャ&lt;/a&gt;からYarnをインストールすることもできます。&lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js&lt;/a&gt;がすでにインストールされている場合は、npmがすでにあるはずです。</target>
        </trans-unit>
        <trans-unit id="16f78fa2d16b14a2479f795fe4c628367cacfa2b" translate="yes" xml:space="preserve">
          <source>You can also see all the info in the npm registry:</source>
          <target state="translated">npmのレジストリでも全ての情報を見ることができます。</target>
        </trans-unit>
        <trans-unit id="90c9b67da769862561675d84142001a6c12b69fb" translate="yes" xml:space="preserve">
          <source>You can also specify a version by running the following code in your terminal:</source>
          <target state="translated">また、ターミナルで以下のコードを実行してバージョンを指定することもできます。</target>
        </trans-unit>
        <trans-unit id="fb481d0d6208e0aa721db64ff2e8fb6ca68f9c5e" translate="yes" xml:space="preserve">
          <source>You can also specify packages from different locations:</source>
          <target state="translated">また、別の場所からパッケージを指定することもできます。</target>
        </trans-unit>
        <trans-unit id="ae38af7ee824fb13c2b28dd474330dcd85a8f380" translate="yes" xml:space="preserve">
          <source>You can also specify the cache directory by environment variable &lt;code&gt;YARN_CACHE_FOLDER&lt;/code&gt;:</source>
          <target state="translated">環境変数 &lt;code&gt;YARN_CACHE_FOLDER&lt;/code&gt; でキャッシュディレクトリを指定することもできます。</target>
        </trans-unit>
        <trans-unit id="076aaee48a0e8a5b55bbca1f5674f72c3b302c46" translate="yes" xml:space="preserve">
          <source>You can also specify the cache directory by flag &lt;code&gt;--cache-folder&lt;/code&gt;:</source>
          <target state="translated">フラグ &lt;code&gt;--cache-folder&lt;/code&gt; でキャッシュディレクトリを指定することもできます。</target>
        </trans-unit>
        <trans-unit id="f285805d433d7a39c4f75c4fb87b6ab2fbc1dc2a" translate="yes" xml:space="preserve">
          <source>You can also turn signing git tags on or off using &lt;code&gt;version-sign-git-tag&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;version-sign-git-tag&lt;/code&gt; を使用して、gitタグへの署名をオンまたはオフにすることもできます。</target>
        </trans-unit>
        <trans-unit id="2bc32fe69ca24412f12759050d66abd94d12ffcd" translate="yes" xml:space="preserve">
          <source>You can customize the git tag that is created or disable this behavior by using &lt;code&gt;yarn config set&lt;/code&gt;.</source>
          <target state="translated">作成されるgitタグをカスタマイズするか、 &lt;code&gt;yarn config set&lt;/code&gt; を使用してこの動作を無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="81f7597d6d03467b6daf74651eff603d10e698ac" translate="yes" xml:space="preserve">
          <source>You can even enable or disable the git tagging behavior entirely by using &lt;code&gt;version-git-tag&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;version-git-tag&lt;/code&gt; を使用して、gitタグ付け動作を完全に有効または無効にすることもできます。</target>
        </trans-unit>
        <trans-unit id="a0083cb96ea98d86d678b2147039587302479158" translate="yes" xml:space="preserve">
          <source>You can install Yarn by &lt;a href=&quot;https://yarnpkg.com/latest.tar.gz&quot;&gt;downloading a tarball&lt;/a&gt; and extracting it anywhere.</source>
          <target state="translated">Yarnをインストールするには&lt;a href=&quot;https://yarnpkg.com/latest.tar.gz&quot;&gt;、tarball&lt;/a&gt;をダウンロードして、どこかに解凍します。</target>
        </trans-unit>
        <trans-unit id="1fda35a5dd9528dc6e90777b396bef2ea22bac90" translate="yes" xml:space="preserve">
          <source>You can install Yarn through &lt;a href=&quot;https://www.macports.org/&quot;&gt;MacPorts&lt;/a&gt;. This will also install Node.js if it is not already installed.</source>
          <target state="translated">Yarnは&lt;a href=&quot;https://www.macports.org/&quot;&gt;MacPorts&lt;/a&gt;からインストールできます。Node.jsがまだインストールされていない場合は、これもインストールされます。</target>
        </trans-unit>
        <trans-unit id="8861b4e43d580f1e536abc23f9cedd07e86afaac" translate="yes" xml:space="preserve">
          <source>You can install Yarn through the &lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew package manager&lt;/a&gt;. This will also install Node.js if it is not already installed.</source>
          <target state="translated">Yarnは&lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrewパッケージマネージャー&lt;/a&gt;からインストールできます。Node.jsがまだインストールされていない場合は、これもインストールされます。</target>
        </trans-unit>
        <trans-unit id="44e0b15df1b7cab87786bda990f932c9d313060c" translate="yes" xml:space="preserve">
          <source>You can pass additional arguments to your script by passing them after the script name.</source>
          <target state="translated">スクリプト名の後に引数を渡すことで、スクリプトに追加の引数を渡すことができます。</target>
        </trans-unit>
        <trans-unit id="ab2ddc7e094d7b3e71cf1c2fc6a6f28d3a04acae" translate="yes" xml:space="preserve">
          <source>You can provide system-level information associated with your package, such as operating system compatibility, etc.</source>
          <target state="translated">オペレーティングシステムの互換性など、パッケージに関連するシステムレベルの情報を提供することができます。</target>
        </trans-unit>
        <trans-unit id="4bd827a7e1a79e015f68e4ef88d948111ceb3ce3" translate="yes" xml:space="preserve">
          <source>You can specify an exact version, a minimum version (e.g., &lt;code&gt;&amp;gt;=&lt;/code&gt;) or a range of versions (e.g. &lt;code&gt;&amp;gt;= ... &amp;lt;&lt;/code&gt;).</source>
          <target state="translated">正確なバージョン、最小バージョン（例： &lt;code&gt;&amp;gt;=&lt;/code&gt; ）、またはバージョンの範囲（例 &lt;code&gt;&amp;gt;= ... &amp;lt;&lt;/code&gt; ）を指定できます。</target>
        </trans-unit>
        <trans-unit id="09e08418eae43812616d2e4e372dbe18c760effa" translate="yes" xml:space="preserve">
          <source>You can specify files that will be included in your project, along with the main entry point for your project.</source>
          <target state="translated">プロジェクトのメインエントリーポイントと一緒に、プロジェクトに含まれるファイルを指定することができます。</target>
        </trans-unit>
        <trans-unit id="896b731aad4a84221f96a2d3bcced42c7fd3e2b0" translate="yes" xml:space="preserve">
          <source>You can specify versions using one of these:</source>
          <target state="translated">これらのいずれかを使用してバージョンを指定することができます。</target>
        </trans-unit>
        <trans-unit id="4b5d23e8ee07dc347b20abf428930fb89cca0579" translate="yes" xml:space="preserve">
          <source>You can specify which version of a package you want to install by specifying either a &lt;a href=&quot;dependency-versions&quot;&gt;dependency version&lt;/a&gt; or a &lt;a href=&quot;cli/tag&quot;&gt;tag&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;dependency-versions&quot;&gt;依存関係のバージョン&lt;/a&gt;または&lt;a href=&quot;cli/tag&quot;&gt;タグを&lt;/a&gt;指定して、インストールするパッケージのバージョンを指定できます。</target>
        </trans-unit>
        <trans-unit id="25afa25858f7d8d8c032e843e0f7ff9a1453b906" translate="yes" xml:space="preserve">
          <source>You can think of &lt;code&gt;yarn upgrade-interactive&lt;/code&gt; as a combination of the &lt;code&gt;yarn outdated&lt;/code&gt; and &lt;code&gt;yarn upgrade [package...]&lt;/code&gt; commands. Where &lt;code&gt;yarn outdated&lt;/code&gt; displays the list of outdated packages and &lt;code&gt;yarn upgrade [package...]&lt;/code&gt; can then be used to upgrade desired packages, &lt;code&gt;yarn upgrade-interactive&lt;/code&gt; displays the same outdated package list and lets you immediately chose which to upgrade.</source>
          <target state="translated">&lt;code&gt;yarn upgrade-interactive&lt;/code&gt; は、 &lt;code&gt;yarn outdated&lt;/code&gt; &lt;code&gt;yarn upgrade [package...]&lt;/code&gt; と糸のアップグレード[パッケージ...]コマンドの組み合わせと考えることができます。最新の &lt;code&gt;yarn outdated&lt;/code&gt; が古いパッケージのリストを表示し、 &lt;code&gt;yarn upgrade [package...]&lt;/code&gt; を使用して目的のパッケージをアップグレードできる場合、 &lt;code&gt;yarn upgrade-interactive&lt;/code&gt; は同じ古いパッケージリストを表示し、アップグレードするものをすぐに選択できます。</target>
        </trans-unit>
        <trans-unit id="255a2b302590272c31e11c135d75bb7cde05875d" translate="yes" xml:space="preserve">
          <source>You can type answers for each of these or you can just hit enter/return to use the default or leave it blank.</source>
          <target state="translated">あなたは、これらのそれぞれのための答えを入力することができますまたはあなただけのデフォルトを使用するか、またはそれを空白のままにするには、Enter/Returnを押すことができます。</target>
        </trans-unit>
        <trans-unit id="b9600151b0e9781312acf43b80b5c6c87b559829" translate="yes" xml:space="preserve">
          <source>You cannot use tags that match potential version numbers since they share a namespace:</source>
          <target state="translated">名前空間を共有しているため、潜在的なバージョン番号に一致するタグは使用できません。</target>
        </trans-unit>
        <trans-unit id="92ea092cb8034c8f7e9fd1723491c704093c9a1a" translate="yes" xml:space="preserve">
          <source>You decide all YAML and Markdown files in all your dependencies installed in &lt;code&gt;node_modules&lt;/code&gt; can be safely deleted. You make a &lt;code&gt;.yarnclean&lt;/code&gt; file containing:</source>
          <target state="translated">&lt;code&gt;node_modules&lt;/code&gt; にインストールされているすべての依存関係のすべてのYAMLファイルとMarkdownファイルを安全に削除できると判断しました。以下を含む &lt;code&gt;.yarnclean&lt;/code&gt; ファイルを作成します。</target>
        </trans-unit>
        <trans-unit id="8e59cf7cdb22797d817a3622003c5a3b325a673b" translate="yes" xml:space="preserve">
          <source>You have just checked out code for a project that needs these dependencies to function.</source>
          <target state="translated">あなたは、これらの依存関係を必要とするプロジェクトのコードをチェックアウトしました。</target>
        </trans-unit>
        <trans-unit id="6b164304713a944b7d58f1b2c695f7efebd64e8f" translate="yes" xml:space="preserve">
          <source>You may be depending on a package that is not updated frequently, which depends on another package that got an important upgrade. In this case, if the version range specified by your direct dependency does not cover the new sub-dependency version, you are stuck waiting for the author.</source>
          <target state="translated">頻繁に更新されないパッケージに依存していて、重要なアップグレードを受けた別のパッケージに依存しているかもしれません。この場合、直接の依存関係で指定したバージョン範囲が新しいサブ依存関係のバージョンをカバーしていないと、作者を待つのに行き詰ってしまいます。</target>
        </trans-unit>
        <trans-unit id="2be09877435a4d9717eefe6046c5b54f6781f4e0" translate="yes" xml:space="preserve">
          <source>You may define &lt;a href=&quot;../package-json#toc-scripts&quot;&gt;&lt;code&gt;scripts&lt;/code&gt;&lt;/a&gt; in your &lt;a href=&quot;../package-json&quot;&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;/a&gt; file.</source>
          <target state="translated">&lt;a href=&quot;../package-json#toc-scripts&quot;&gt; &lt;code&gt;scripts&lt;/code&gt; &lt;/a&gt;は、&lt;a href=&quot;../package-json&quot;&gt; &lt;code&gt;package.json&lt;/code&gt; &lt;/a&gt;ファイルで定義できます。</target>
        </trans-unit>
        <trans-unit id="836f6f7e5858660b3925efb6f3e56e7b7068b16c" translate="yes" xml:space="preserve">
          <source>You must be online to perform the audit. The audit will be skipped if the &lt;code&gt;--offline&lt;/code&gt; general flag is specified.</source>
          <target state="translated">監査を実行するには、オンラインである必要があります。 &lt;code&gt;--offline&lt;/code&gt; 一般フラグが指定されている場合、監査はスキップされます。</target>
        </trans-unit>
        <trans-unit id="99f3d965ce9eba6390141e3029dfe57b55e3c00d" translate="yes" xml:space="preserve">
          <source>You should also consider the contents of your package. Make sure you aren&amp;rsquo;t accidentally distributing your tests or any other files that aren&amp;rsquo;t necessary for using your package (build scripts, images, etc).</source>
          <target state="translated">パッケージの内容も考慮する必要があります。パッケージやビルドスクリプト、イメージなどの使用に不要なテストやその他のファイルを誤って配布していないことを確認してください。</target>
        </trans-unit>
        <trans-unit id="bc71b02ca319731a824cf11668a848bc2f1edc23" translate="yes" xml:space="preserve">
          <source>You should ideally write your documentation before you go publishing your package. At a minimum you should write a &lt;code&gt;README.md&lt;/code&gt; file in the root of your project that introduces your package and documents the public API.</source>
          <target state="translated">パッケージを公開する前に、ドキュメントを書くのが理想的です。少なくとも、プロジェクトのルートに &lt;code&gt;README.md&lt;/code&gt; ファイルを記述して、パッケージを紹介し、パブリックAPIを文書化する必要があります。</target>
        </trans-unit>
        <trans-unit id="2ab0fb2c7eb9396ee340bf353d13749ef482aae9" translate="yes" xml:space="preserve">
          <source>You then run &lt;code&gt;yarn install&lt;/code&gt; or &lt;code&gt;yarn autoclean --force&lt;/code&gt;. The clean process will delete all &lt;code&gt;*.yaml&lt;/code&gt; and &lt;code&gt;*.md&lt;/code&gt; files within &lt;code&gt;node_modules/&lt;/code&gt; recursively (including nested transitive dependencies).</source>
          <target state="translated">次に、 &lt;code&gt;yarn install&lt;/code&gt; または &lt;code&gt;yarn autoclean --force&lt;/code&gt; を実行します。クリーンプロセスは、 &lt;code&gt;node_modules/&lt;/code&gt; 内のすべての &lt;code&gt;*.yaml&lt;/code&gt; ファイルと &lt;code&gt;*.md&lt;/code&gt; ファイルを再帰的に削除します（ネストされた推移的な依存関係を含む）。</target>
        </trans-unit>
        <trans-unit id="b9380d85fe50bf3778912b45381073f3e8d47233" translate="yes" xml:space="preserve">
          <source>You will likely want to allow users of your package to be able to access your source code and have a way to report issues. There are a couple of popular websites for hosting your code:</source>
          <target state="translated">あなたのパッケージのユーザーがあなたのソースコードにアクセスできるようにして、問題を報告する方法を持っていることを許可したいと思うでしょう。コードをホスティングするための人気のあるウェブサイトがいくつかあります。</target>
        </trans-unit>
        <trans-unit id="7b898986009ceed397b64421f450a6314d912b76" translate="yes" xml:space="preserve">
          <source>You will need to set up the &lt;code&gt;PATH&lt;/code&gt; environment variable in your terminal to have access to Yarn&amp;rsquo;s binaries globally.</source>
          <target state="translated">Yarnのバイナリにグローバルにアクセスするには、ターミナルで &lt;code&gt;PATH&lt;/code&gt; 環境変数を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="510bb8f8f4d5209c8c271bb17d72a23459d7c413" translate="yes" xml:space="preserve">
          <source>You will receive a warning if you define an invalid resolution (such as with an invalid package name)</source>
          <target state="translated">無効な解決策を定義した場合 (無効なパッケージ名など)、警告が表示されます。</target>
        </trans-unit>
        <trans-unit id="15cf5a97d5d10da902abbb5363b887b303373def" translate="yes" xml:space="preserve">
          <source>You will receive a warning if your resolution version or range is not compatible with the original version range.</source>
          <target state="translated">解像度のバージョンや範囲が元のバージョン範囲と互換性がない場合は警告が表示されます。</target>
        </trans-unit>
        <trans-unit id="30c0cc58a8ee0fa3405ba9488095439a8ac36844" translate="yes" xml:space="preserve">
          <source>You will receive a warning if your resolution version or range is not valid.</source>
          <target state="translated">解像度のバージョンや範囲が有効でない場合は警告が表示されます。</target>
        </trans-unit>
        <trans-unit id="bd440724f0149e3ee58cd4397001b6942f13ae5f" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll notice that we have a bunch of characters separate from the version. These characters, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;^&lt;/code&gt;, and &lt;code&gt;~&lt;/code&gt;, are &lt;strong&gt;operators&lt;/strong&gt; and they are used to specify &lt;strong&gt;version ranges&lt;/strong&gt;.</source>
          <target state="translated">バージョンとは別のキャラクターがたくさんあることに気づくでしょう。これらの文字 &lt;code&gt;&amp;gt;=&lt;/code&gt; 、 &lt;code&gt;&amp;lt;&lt;/code&gt; 、 &lt;code&gt;^&lt;/code&gt; 、 &lt;code&gt;~&lt;/code&gt; は&lt;strong&gt;演算子で&lt;/strong&gt;あり、&lt;strong&gt;バージョン範囲&lt;/strong&gt;を指定するために使用されます。</target>
        </trans-unit>
        <trans-unit id="9096679972676c803614dacbd0021e72814f0cd5" translate="yes" xml:space="preserve">
          <source>Your &lt;code&gt;package.json&lt;/code&gt; file is the home for the declaration of all your dependencies, from development to production to optional. You will specify both the package name and minimum version information for each dependency.</source>
          <target state="translated">あなたの &lt;code&gt;package.json&lt;/code&gt; のファイルには、開発から生産までのオプションに、すべての依存関係の宣言の家、です。各依存関係のパッケージ名と最小バージョン情報の両方を指定します。</target>
        </trans-unit>
        <trans-unit id="73771dfb089a876f733d8a2baa6440116a134d70" translate="yes" xml:space="preserve">
          <source>Your &lt;code&gt;package.json&lt;/code&gt; is used to store info about your project. This includes the name of your project, the maintainers, where the source code lives, but most importantly what dependencies are needed to be installed for the project.</source>
          <target state="translated">あなたの &lt;code&gt;package.json&lt;/code&gt; は、プロジェクトに関する情報を格納するために使用されます。これには、プロジェクトの名前、メンテナー、ソースコードの場所が含まれますが、最も重要なのは、プロジェクトにインストールする必要のある依存関係です。</target>
        </trans-unit>
        <trans-unit id="96c9d7171c8c33781890b0d7709bafede75a2492" translate="yes" xml:space="preserve">
          <source>Your &lt;code&gt;package.json&lt;/code&gt; will contain all of these dependencies:</source>
          <target state="translated">あなたの &lt;code&gt;package.json&lt;/code&gt; は、これらの依存関係のすべてが含まれます。</target>
        </trans-unit>
        <trans-unit id="67ed4e9b09e68f681623a87a11c11316fe4279d8" translate="yes" xml:space="preserve">
          <source>Your &lt;code&gt;yarn.lock&lt;/code&gt; file ensures that your package is consistent across installations by storing the versions of which dependencies are installed with your package.</source>
          <target state="translated">あなたの &lt;code&gt;yarn.lock&lt;/code&gt; のファイルは、あなたのパッケージが依存関係があなたのパッケージと一緒にインストールされているのバージョンを格納することでインストール全体で一貫していることを保証します。</target>
        </trans-unit>
        <trans-unit id="7d372e67ca4b64e595124595e8b8bcb64d72e14e" translate="yes" xml:space="preserve">
          <source>Your &lt;code&gt;yarn.lock&lt;/code&gt; file is auto-generated and should be handled entirely by Yarn. As you add/upgrade/remove dependencies with the Yarn CLI, it will automatically update your &lt;code&gt;yarn.lock&lt;/code&gt; file. Do not edit this file directly as it is easy to break something.</source>
          <target state="translated">あなたの &lt;code&gt;yarn.lock&lt;/code&gt; ファイルは自動生成され、完全にYarnによって処理されるべきです。Yarn CLIで依存関係を追加/アップグレード/削除すると、 &lt;code&gt;yarn.lock&lt;/code&gt; ファイルが自動的に更新されます。壊れやすいため、このファイルを直接編集しないでください。</target>
        </trans-unit>
        <trans-unit id="110fd167e9e610dbe325d5306b67ce8f57c914c5" translate="yes" xml:space="preserve">
          <source>Your dependencies can be linked together, which means that your workspaces can depend on one another while always using the most up-to-date code available. This is also a better mechanism than &lt;code&gt;yarn link&lt;/code&gt; since it only affects your workspace tree rather than your whole system.</source>
          <target state="translated">依存関係を相互にリンクすることができます。つまり、ワークスペースは相互に依存することができ、常に利用可能な最新のコードを常に使用できます。これは、システム全体ではなくワークスペースツリーにのみ影響するため、 &lt;code&gt;yarn link&lt;/code&gt; よりも優れたメカニズムです。</target>
        </trans-unit>
        <trans-unit id="e7c206f3d12354f775ed291e5bd70e87c9cb3b2d" translate="yes" xml:space="preserve">
          <source>Your dependency defines a broad version range and your sub-dependency just got a problematic update so you want to pin it to an earlier version.</source>
          <target state="translated">あなたの依存関係は幅広いバージョン範囲を定義しており、あなたのサブ依存関係は問題のあるアップデートを受けたばかりなので、以前のバージョンに固定したいと考えています。</target>
        </trans-unit>
        <trans-unit id="4f836e4fecabbaac9ffbe31ebf777be6d6527f0d" translate="yes" xml:space="preserve">
          <source>Your package can include runnable scripts or other configuration.</source>
          <target state="translated">パッケージには、実行可能なスクリプトやその他の設定を含めることができます。</target>
        </trans-unit>
        <trans-unit id="ad0f3ae200af9253507add6412a1d0718aac616e" translate="yes" xml:space="preserve">
          <source>Your package should now be available at https://www.npmjs.com/package/my-new-project and you should be able to install it:</source>
          <target state="translated">これでパッケージは https://www.npmjs.com/package/my-new-project で利用できるようになり、インストールできるようになるはずです。</target>
        </trans-unit>
        <trans-unit id="965a8ad000db307fdf044612ff877d33fbc9be92" translate="yes" xml:space="preserve">
          <source>Your package will very likely depend on other packages. You can specify those dependencies in your &lt;code&gt;package.json&lt;/code&gt; file.</source>
          <target state="translated">パッケージは他のパッケージに依存している可能性が非常に高いです。これらの依存関係は、 &lt;code&gt;package.json&lt;/code&gt; ファイルで指定できます。</target>
        </trans-unit>
        <trans-unit id="4900d36cbe114f87c47e967afab1405f80dba664" translate="yes" xml:space="preserve">
          <source>`` (empty string)</source>
          <target state="translated">``（空の文字列）</target>
        </trans-unit>
        <trans-unit id="163dd0c1daf623afdc2822110f51b9b5ba541340" translate="yes" xml:space="preserve">
          <source>a file within a package folder; eg: &lt;code&gt;yarn why node_modules/once/once.js&lt;/code&gt;</source>
          <target state="translated">パッケージフォルダ内のファイル。例： &lt;code&gt;yarn why node_modules/once/once.js&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dc719e2460bb0daa76f21c5ffefe9cc05f1af0c4" translate="yes" xml:space="preserve">
          <source>a package folder; eg: &lt;code&gt;yarn why node_modules/once&lt;/code&gt;</source>
          <target state="translated">パッケージフォルダ。例： &lt;code&gt;yarn why node_modules/once&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0dc64776c6fe6090b694b97ee755883c685b1d0e" translate="yes" xml:space="preserve">
          <source>a package name (as in the above example)</source>
          <target state="translated">パッケージ名</target>
        </trans-unit>
        <trans-unit id="c57cd805c168deefec582fca8a4014b56e169478" translate="yes" xml:space="preserve">
          <source>and the following in your &lt;code&gt;package.json&lt;/code&gt;:</source>
          <target state="translated">そして、あなたの &lt;code&gt;package.json&lt;/code&gt; の以下：</target>
        </trans-unit>
        <trans-unit id="b3a8eb92e17a4d143e18d277a88fc70d244aad34" translate="yes" xml:space="preserve">
          <source>automatically add &lt;code&gt;private: true&lt;/code&gt; to the &lt;code&gt;package.json&lt;/code&gt;</source>
          <target state="translated">自動的に追加 &lt;code&gt;private: true&lt;/code&gt; に &lt;code&gt;package.json&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cd6fdcbf5a860d174ac10af745972501941dc684" translate="yes" xml:space="preserve">
          <source>macOS</source>
          <target state="translated">macOS</target>
        </trans-unit>
        <trans-unit id="be11a87fb9c3130f8d1ba7f427ba40c46d9b618f" translate="yes" xml:space="preserve">
          <source>npm (v5)</source>
          <target state="translated">エヌピーエム</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="c40cd3082d3fb5f915213e712f5db589f33fde3d" translate="yes" xml:space="preserve">
          <source>then running &lt;code&gt;yarn test&lt;/code&gt; would yield:</source>
          <target state="translated">次に、 &lt;code&gt;yarn test&lt;/code&gt; を実行すると、次の結果が得られます。</target>
        </trans-unit>
        <trans-unit id="6a186941eb70b6a0659ee583d164e9e310163abe" translate="yes" xml:space="preserve">
          <source>yarn add</source>
          <target state="translated">いとあわせ</target>
        </trans-unit>
        <trans-unit id="60bd9e11c9f31e763faf1c5bd2d65bf73319edf3" translate="yes" xml:space="preserve">
          <source>yarn audit</source>
          <target state="translated">糸監査</target>
        </trans-unit>
        <trans-unit id="e1ef76c1cba4f29c93a83e4472e8a2ee0db28342" translate="yes" xml:space="preserve">
          <source>yarn autoclean</source>
          <target state="translated">ヤーンオートクリーニング</target>
        </trans-unit>
        <trans-unit id="405b35ccae5e4eb21bb69bd2c633005139ae9c69" translate="yes" xml:space="preserve">
          <source>yarn bin</source>
          <target state="translated">糸入れ</target>
        </trans-unit>
        <trans-unit id="a3e740acddbf5f51ffdb6e66bff39980d7bf6210" translate="yes" xml:space="preserve">
          <source>yarn cache</source>
          <target state="translated">ヤーンキャッシュ</target>
        </trans-unit>
        <trans-unit id="e7583d8d86473d684bffff6ac478473feeda9bad" translate="yes" xml:space="preserve">
          <source>yarn check</source>
          <target state="translated">ヤーンチェック</target>
        </trans-unit>
        <trans-unit id="b740e91a836ebe37da8623ed67c63ba2b7192bb6" translate="yes" xml:space="preserve">
          <source>yarn config</source>
          <target state="translated">ヤーンコンフィグ</target>
        </trans-unit>
        <trans-unit id="2563397e4a273ca406d88bf8bedcc2d0fd87e68b" translate="yes" xml:space="preserve">
          <source>yarn create</source>
          <target state="translated">ヤーンクリエイト</target>
        </trans-unit>
        <trans-unit id="2a447ac58c4ebef8e5255088528a8d070677f2df" translate="yes" xml:space="preserve">
          <source>yarn dedupe</source>
          <target state="translated">ヤーンデデュープ</target>
        </trans-unit>
        <trans-unit id="b72e3afdf114f963fb70e6c7e9c934f959dc74ac" translate="yes" xml:space="preserve">
          <source>yarn generate-lock-entry</source>
          <target state="translated">糸生成</target>
        </trans-unit>
        <trans-unit id="e561b216a9a26cf812beae3a3f9e8d674d02592c" translate="yes" xml:space="preserve">
          <source>yarn global</source>
          <target state="translated">ヤーングローバル</target>
        </trans-unit>
        <trans-unit id="dc80972113b056fc3f215b1c3c1478e73931423a" translate="yes" xml:space="preserve">
          <source>yarn help</source>
          <target state="translated">ヤーンヘルプ</target>
        </trans-unit>
        <trans-unit id="03cbaa7fee228e3aa6d78e2c649f0018f7652828" translate="yes" xml:space="preserve">
          <source>yarn import</source>
          <target state="translated">ヤーンインポート</target>
        </trans-unit>
        <trans-unit id="942b6d254df8b195ad36bd1f8ba603127b7b010b" translate="yes" xml:space="preserve">
          <source>yarn info</source>
          <target state="translated">糸情報</target>
        </trans-unit>
        <trans-unit id="de3b2e52fc0c23c5b4c351dc73490a77258c3a52" translate="yes" xml:space="preserve">
          <source>yarn init</source>
          <target state="translated">ヤーンinit</target>
        </trans-unit>
        <trans-unit id="b8d744ed21be73ce22496a918c6bfd5548e56388" translate="yes" xml:space="preserve">
          <source>yarn install</source>
          <target state="translated">ヤーンインストール</target>
        </trans-unit>
        <trans-unit id="e9383300073ff885a460fbda98d37cab749613fe" translate="yes" xml:space="preserve">
          <source>yarn licenses</source>
          <target state="translated">ヤーンライセンス</target>
        </trans-unit>
        <trans-unit id="b5bc72d9a94ad9285a0e9176bcf2b9a31e5b55c0" translate="yes" xml:space="preserve">
          <source>yarn link</source>
          <target state="translated">ヤーンリンク</target>
        </trans-unit>
        <trans-unit id="af1885b14a4d3d86ad0b25874fbb1d873ab7be33" translate="yes" xml:space="preserve">
          <source>yarn list</source>
          <target state="translated">ヤーンリスト</target>
        </trans-unit>
        <trans-unit id="d6e2bb86ef099ae0ad67250d8bf8d55d84b9b91e" translate="yes" xml:space="preserve">
          <source>yarn lockfile</source>
          <target state="translated">ヤーンロックファイル</target>
        </trans-unit>
        <trans-unit id="f741ae315e2ac94788ba375c37b42f7e78d79e70" translate="yes" xml:space="preserve">
          <source>yarn login</source>
          <target state="translated">糸ログイン</target>
        </trans-unit>
        <trans-unit id="1de4c867d794888c520578a638d9794255f5ff09" translate="yes" xml:space="preserve">
          <source>yarn logout</source>
          <target state="translated">ヤーンログアウト</target>
        </trans-unit>
        <trans-unit id="7c5509786c20890011888697675ac5089e13b140" translate="yes" xml:space="preserve">
          <source>yarn outdated</source>
          <target state="translated">古糸</target>
        </trans-unit>
        <trans-unit id="8a0d0389670b3ebc8f35ee5fa56ffb624bb5f5dc" translate="yes" xml:space="preserve">
          <source>yarn owner</source>
          <target state="translated">糸屋</target>
        </trans-unit>
        <trans-unit id="32d7c6255b7be98bf9dc4ae5ab239f506e364467" translate="yes" xml:space="preserve">
          <source>yarn pack</source>
          <target state="translated">ヤーンパック</target>
        </trans-unit>
        <trans-unit id="014d3b42104923cc6206f1c93e4c000f75bdbdb9" translate="yes" xml:space="preserve">
          <source>yarn policies</source>
          <target state="translated">糸政策</target>
        </trans-unit>
        <trans-unit id="e246d47c8845956e5a12805ab738ea4c83dc8ee1" translate="yes" xml:space="preserve">
          <source>yarn prune</source>
          <target state="translated">刈り込む</target>
        </trans-unit>
        <trans-unit id="f01c9677fd80022d6bc5afe4615030b6b121ab21" translate="yes" xml:space="preserve">
          <source>yarn publish</source>
          <target state="translated">ヤーンパブリッシュ</target>
        </trans-unit>
        <trans-unit id="cabd91a368a2170a8f2356b8e4617f858747c98f" translate="yes" xml:space="preserve">
          <source>yarn remove</source>
          <target state="translated">糸を抜く</target>
        </trans-unit>
        <trans-unit id="4db84978bb2ea2aac98581bfa81d1255c8e1a507" translate="yes" xml:space="preserve">
          <source>yarn run</source>
          <target state="translated">ヤーンラン</target>
        </trans-unit>
        <trans-unit id="f61561fd0356d8b16188bce84008eaf081e4763d" translate="yes" xml:space="preserve">
          <source>yarn self-update</source>
          <target state="translated">糸の自己更新</target>
        </trans-unit>
        <trans-unit id="b2a38e2c008ad037ec52989ba6f77d8a2bf224c2" translate="yes" xml:space="preserve">
          <source>yarn tag</source>
          <target state="translated">糸札</target>
        </trans-unit>
        <trans-unit id="23433075205006a9c830d3aba8c3f7bfbfffb6c0" translate="yes" xml:space="preserve">
          <source>yarn team</source>
          <target state="translated">糸組</target>
        </trans-unit>
        <trans-unit id="b505d958f86621eb874436b68235e5f9496cd1b2" translate="yes" xml:space="preserve">
          <source>yarn team always operates directly on the current registry, configurable from the command line using &lt;code&gt;--registry=&amp;lt;registry url&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">ヤーンチームは常に現在のレジストリを直接操作します。コマンドラインから &lt;code&gt;--registry=&amp;lt;registry url&amp;gt;&lt;/code&gt; を使用して設定できます。</target>
        </trans-unit>
        <trans-unit id="4aa1d26449d6dfb264f101d0eb92c81321c025b7" translate="yes" xml:space="preserve">
          <source>yarn test</source>
          <target state="translated">ヤーンテスト</target>
        </trans-unit>
        <trans-unit id="723a445e3211a16400d74b02f6a82022e8acf99d" translate="yes" xml:space="preserve">
          <source>yarn unlink</source>
          <target state="translated">紐を解く</target>
        </trans-unit>
        <trans-unit id="86b73e3281e88dba99f4e3e1bf3bdbcf2f45ccce" translate="yes" xml:space="preserve">
          <source>yarn upgrade</source>
          <target state="translated">ヤーンアップグレード</target>
        </trans-unit>
        <trans-unit id="95afa1439abaaf035fd06b2cb880ab75154e72ad" translate="yes" xml:space="preserve">
          <source>yarn upgrade-interactive</source>
          <target state="translated">ヤーンアップグレードインターアクティブ</target>
        </trans-unit>
        <trans-unit id="e30c314b97104ef7f23e5bb1389b675a030d7c3e" translate="yes" xml:space="preserve">
          <source>yarn version</source>
          <target state="translated">ヤーンバージョン</target>
        </trans-unit>
        <trans-unit id="8a67a896284ea140b5e14b7fc642ac0e0f43f8ea" translate="yes" xml:space="preserve">
          <source>yarn versions</source>
          <target state="translated">ヤーンバージョン</target>
        </trans-unit>
        <trans-unit id="c23adf54d3089c4500b49c6b9d6b8e19ee891c31" translate="yes" xml:space="preserve">
          <source>yarn why</source>
          <target state="translated">いと</target>
        </trans-unit>
        <trans-unit id="33c271bf9e0333e6c5b14bdf7f998eaaae55a9c8" translate="yes" xml:space="preserve">
          <source>yarn workspace</source>
          <target state="translated">ヤーンワークスペース</target>
        </trans-unit>
        <trans-unit id="d75d6f0ab2643f1d0573da1e91e8fbb6d25f0210" translate="yes" xml:space="preserve">
          <source>yarn workspaces</source>
          <target state="translated">糸場</target>
        </trans-unit>
        <trans-unit id="53b4c011547d05e2a762ed789de66e8763d609c3" translate="yes" xml:space="preserve">
          <source>📝 PnP is a feature of Yarn, don&amp;rsquo;t confuse it with &lt;a href=&quot;https://pnpm.js.org&quot;&gt;pnpm&lt;/a&gt;, which is a different, standalone JavaScript package manager.</source>
          <target state="translated">📝PnPはYarnの機能です。異なるスタンドアロンJavaScriptパッケージマネージャーである&lt;a href=&quot;https://pnpm.js.org&quot;&gt;pnpm&lt;/a&gt;と混同しないでください。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
