<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="gcc">
    <body>
      <group id="gcc">
        <trans-unit id="51cc0e21afc891a9369186579dea6dd551209416" translate="yes" xml:space="preserve">
          <source>this considers e.g. even constant initialized arrays or initialized constant variables with integral or floating-point types. Languages like C or C++ require each variable, including multiple instances of the same variable in recursive calls, to have distinct locations, so using this option results in non-conforming behavior.</source>
          <target state="translated">これは、例えば、初期化された定数配列や、積分型や浮動小数点型の初期化された定数変数を考慮します。C や C++のような言語では、再帰的な呼び出しで同じ変数の複数のインスタンスを含む各変数が異なる位置にあることが要求されます。</target>
        </trans-unit>
        <trans-unit id="969f11c7000af28297bc0a9dd0ea0539e20a6a8e" translate="yes" xml:space="preserve">
          <source>this example using maxint will not:</source>
          <target state="translated">この例ではmaxintを使用してもそうはなりません。</target>
        </trans-unit>
        <trans-unit id="b992ec60f7787e4bf897a3e44bdfa43a335a4bf7" translate="yes" xml:space="preserve">
          <source>this is completely equivalent to:</source>
          <target state="translated">と完全に等価です。</target>
        </trans-unit>
        <trans-unit id="2c801b821bb0c13f7809301aee7d03591df1f48c" translate="yes" xml:space="preserve">
          <source>this merging can be suppressed, for debugging state-handling issues.</source>
          <target state="translated">状態処理の問題をデバッグするために、このマージを抑制することができます。</target>
        </trans-unit>
        <trans-unit id="db518582ea0bb3733161339a6d980536530feecc" translate="yes" xml:space="preserve">
          <source>this purging of state can be suppressed, for debugging state-handling issues.</source>
          <target state="translated">状態処理の問題をデバッグするために、この状態のパージを抑制することができます。</target>
        </trans-unit>
        <trans-unit id="7b5bd05243515dc007064d1c5ae985f10132a1dd" translate="yes" xml:space="preserve">
          <source>this setting of the option may result in warnings for benign code.</source>
          <target state="translated">このオプションを設定すると、良性のコードに対して警告が出ることがあります。</target>
        </trans-unit>
        <trans-unit id="d28d2b77fa489ab5252d57c24a900533eb9bab17" translate="yes" xml:space="preserve">
          <source>thumb</source>
          <target state="translated">thumb</target>
        </trans-unit>
        <trans-unit id="bdbf09ec296b8934eeef878d2291a86b53a1df09" translate="yes" xml:space="preserve">
          <source>thunderx</source>
          <target state="translated">thunderx</target>
        </trans-unit>
        <trans-unit id="778ec78a1031df3dd767fc0bd18489d375cf450e" translate="yes" xml:space="preserve">
          <source>thunderx2t99</source>
          <target state="translated">thunderx2t99</target>
        </trans-unit>
        <trans-unit id="74bad1c76a204ed9e8282a4dc77815fbd5037b0c" translate="yes" xml:space="preserve">
          <source>thunderx3t110</source>
          <target state="translated">thunderx3t110</target>
        </trans-unit>
        <trans-unit id="7b55768eb832575357bd8b4245a3bd047c96850e" translate="yes" xml:space="preserve">
          <source>thunderxt81</source>
          <target state="translated">thunderxt81</target>
        </trans-unit>
        <trans-unit id="394ea9c4bd08ee3fae1b69eb7e2c7c5752a8752a" translate="yes" xml:space="preserve">
          <source>thunderxt83</source>
          <target state="translated">thunderxt83</target>
        </trans-unit>
        <trans-unit id="0cd860e80f14e802fc616a932ad7f3cf131106d6" translate="yes" xml:space="preserve">
          <source>thunderxt88</source>
          <target state="translated">thunderxt88</target>
        </trans-unit>
        <trans-unit id="e2dba87655b525042a449c0005fa6f444eb0b21f" translate="yes" xml:space="preserve">
          <source>thunderxt88p1</source>
          <target state="translated">thunderxt88p1</target>
        </trans-unit>
        <trans-unit id="1d6cac57f8c0dbec98aa7810b36b3e7ae7929472" translate="yes" xml:space="preserve">
          <source>thunk</source>
          <target state="translated">thunk</target>
        </trans-unit>
        <trans-unit id="c74b9e80ce88383dd17226a4dbba5d52605e3572" translate="yes" xml:space="preserve">
          <source>thunk-extern</source>
          <target state="translated">thunk-extern</target>
        </trans-unit>
        <trans-unit id="8e0860f7803c96ba37c0e2dfdb8391f2326b1284" translate="yes" xml:space="preserve">
          <source>thunk-inline</source>
          <target state="translated">thunk-inline</target>
        </trans-unit>
        <trans-unit id="de3599095913f2a4ce327d5ec79a4ef6eb2337c1" translate="yes" xml:space="preserve">
          <source>tigerlake</source>
          <target state="translated">tigerlake</target>
        </trans-unit>
        <trans-unit id="e50596833fb06679dc4db3ffd03eb29c2d2ec906" translate="yes" xml:space="preserve">
          <source>tilegx</source>
          <target state="translated">tilegx</target>
        </trans-unit>
        <trans-unit id="9e6d22ed0c40f1c704a6b00fd923b78eb03b7f34" translate="yes" xml:space="preserve">
          <source>tilepro</source>
          <target state="translated">tilepro</target>
        </trans-unit>
        <trans-unit id="ccf33a6969b3beb751af68522935f3b388b9e753" translate="yes" xml:space="preserve">
          <source>times the number of branches in the switch.</source>
          <target state="translated">にスイッチの分岐数を掛けたものです。</target>
        </trans-unit>
        <trans-unit id="35d37e761f1cec251fe5a0e83b70ce4a5d116766" translate="yes" xml:space="preserve">
          <source>times the size of the original pointer parameter.</source>
          <target state="translated">は、元のポインタパラメータのサイズの倍になります。</target>
        </trans-unit>
        <trans-unit id="d4927dda05af693bff7dfd4c7b40eafb0ef92a78" translate="yes" xml:space="preserve">
          <source>tiny</source>
          <target state="translated">tiny</target>
        </trans-unit>
        <trans-unit id="5b88ae9be6fb4236e3471519abb479a3670b49cd" translate="yes" xml:space="preserve">
          <source>titan</source>
          <target state="translated">titan</target>
        </trans-unit>
        <trans-unit id="4929fca9d47db1f6c2520ce3d6bdd6a9304c9812" translate="yes" xml:space="preserve">
          <source>tls</source>
          <target state="translated">tls</target>
        </trans-unit>
        <trans-unit id="a85d92b7ecd7b678ed3d949f344bdf82bb11bfac" translate="yes" xml:space="preserve">
          <source>tme</source>
          <target state="translated">tme</target>
        </trans-unit>
        <trans-unit id="51c8667010d2fa7e6b36f9ca8ba368f4f573a41f" translate="yes" xml:space="preserve">
          <source>tmp.cpp</source>
          <target state="translated">tmp.cpp</target>
        </trans-unit>
        <trans-unit id="8d7326ca5f865d931651df77924995af99eaf04b" translate="yes" xml:space="preserve">
          <source>tmp.cpp.gcov</source>
          <target state="translated">tmp.cpp.gcov</target>
        </trans-unit>
        <trans-unit id="c4cfd4acf4fdd79e8c01a78fb3edc3a8e5375e23" translate="yes" xml:space="preserve">
          <source>to &amp;lsquo;</source>
          <target state="translated">〜へ</target>
        </trans-unit>
        <trans-unit id="ad77733882b0f557ba634a652ae297751f0bb786" translate="yes" xml:space="preserve">
          <source>to &lt;code&gt;ld&lt;/code&gt; on all links. It is the default when GCC is configured, explicitly or implicitly, with the HP linker. This option does not affect which &lt;code&gt;ld&lt;/code&gt; is called; it only changes what parameters are passed to that &lt;code&gt;ld&lt;/code&gt;. The &lt;code&gt;ld&lt;/code&gt; that is called is determined by the</source>
          <target state="translated">&lt;code&gt;ld&lt;/code&gt; すべてのリンクで。これは、GCCがHPリンカーで明示的または暗黙的に構成されている場合のデフォルトです。このオプションは、どの &lt;code&gt;ld&lt;/code&gt; が呼び出されるかには影響しません。その &lt;code&gt;ld&lt;/code&gt; に渡されるパラメーターを変更するだけです。 &lt;code&gt;ld&lt;/code&gt; と呼ばれて決定されます</target>
        </trans-unit>
        <trans-unit id="052574ea506322e4175ab8fe7ae5997851a73c7d" translate="yes" xml:space="preserve">
          <source>to &lt;code&gt;ld&lt;/code&gt; when building a shared library and passes</source>
          <target state="translated">共有ライブラリをビルドしてパスするときに &lt;code&gt;ld&lt;/code&gt; に</target>
        </trans-unit>
        <trans-unit id="7f375ed6b7d21e29bef7ec7001ca9cb7e1f10a01" translate="yes" xml:space="preserve">
          <source>to &lt;code&gt;ld&lt;/code&gt; when building a shared library. It is the default when GCC is configured, explicitly or implicitly, with the GNU linker. This option does not affect which &lt;code&gt;ld&lt;/code&gt; is called; it only changes what parameters are passed to that &lt;code&gt;ld&lt;/code&gt;. The &lt;code&gt;ld&lt;/code&gt; that is called is determined by the</source>
          <target state="translated">共有ライブラリをビルドするときに &lt;code&gt;ld&lt;/code&gt; に。これは、GNCリンカーを使用してGCCが明示的または暗黙的に構成されている場合のデフォルトです。このオプションは、どの &lt;code&gt;ld&lt;/code&gt; が呼び出されるかには影響しません。その &lt;code&gt;ld&lt;/code&gt; に渡されるパラメーターを変更するだけです。 &lt;code&gt;ld&lt;/code&gt; と呼ばれて決定されます</target>
        </trans-unit>
        <trans-unit id="a1250d72b054639a61892f6728a722d21e18c2ce" translate="yes" xml:space="preserve">
          <source>to adjust the current ABI with AltiVec ABI enhancements.</source>
          <target state="translated">を使用して、AltiVec ABI の拡張機能で現在の ABI を調整します。</target>
        </trans-unit>
        <trans-unit id="eacda4188a74bd486d4cf133dcfe04f422db0e49" translate="yes" xml:space="preserve">
          <source>to allow conditional traps on architectures that support them and</source>
          <target state="translated">をサポートするアーキテクチャ上で条件付きトラップを可能にし</target>
        </trans-unit>
        <trans-unit id="147272a50a96cc571871ade447fc98965e18e962" translate="yes" xml:space="preserve">
          <source>to allow the interprocedural optimizers to use more aggressive assumptions which may lead to improved optimization opportunities. Use of</source>
          <target state="translated">症例間のオプティマイザがより積極的な前提条件を使用できるようにすることで、最適化の機会の改善につながる可能性があります。仮定を使用することで、最適化の機会を増やすことができます。</target>
        </trans-unit>
        <trans-unit id="9691671345bd07de9bb4c781ae964352a7002be7" translate="yes" xml:space="preserve">
          <source>to appear or disappear.</source>
          <target state="translated">が現れたり消えたりすることがあります。</target>
        </trans-unit>
        <trans-unit id="0382b54d4234588ef716753062bdbd34ae35cb36" translate="yes" xml:space="preserve">
          <source>to be enabled.</source>
          <target state="translated">を有効にする必要があります。</target>
        </trans-unit>
        <trans-unit id="6cfc1d1ae9b1990e6658c2bd29b4de5a3bf0b512" translate="yes" xml:space="preserve">
          <source>to be enabled. Enabled by default.</source>
          <target state="translated">を有効にします。デフォルトでは有効になっています。</target>
        </trans-unit>
        <trans-unit id="947d9c4220735ddf7f9b69b00b4604108a31e9b0" translate="yes" xml:space="preserve">
          <source>to bypass the compiler driver and pass &lt;var&gt;option&lt;/var&gt; directly through to the preprocessor. If &lt;var&gt;option&lt;/var&gt; contains commas, it is split into multiple options at the commas. However, many options are modified, translated or interpreted by the compiler driver before being passed to the preprocessor, and</source>
          <target state="translated">コンパイラー・ドライバーをバイパスして、 &lt;var&gt;option&lt;/var&gt; 直接プリプロセッサーに渡します。 &lt;var&gt;option&lt;/var&gt; にカンマが含まれている場合、カンマで複数のオプションに分割されます。ただし、多くのオプションは、プリプロセッサーに渡される前に、コンパイラー・ドライバーによって変更、変換、または解釈されます。</target>
        </trans-unit>
        <trans-unit id="40cdbef1c720986a00615faa73ec1ab90de0da56" translate="yes" xml:space="preserve">
          <source>to check programs for strict ISO C conformance. They soon find that it does not do quite what they want: it finds some non-ISO practices, but not all&amp;mdash;only those for which ISO C &lt;em&gt;requires&lt;/em&gt; a diagnostic, and some others for which diagnostics have been added.</source>
          <target state="translated">ISO Cに厳密に準拠しているかプログラムをチェックします。彼らはすぐにそれが彼らが望むことを全くしないことに気づきます：それはいくつかの非ISOプラクティスを見つけますが、すべてではなく、ISO C &lt;em&gt;が&lt;/em&gt;診断を&lt;em&gt;必要と&lt;/em&gt;するもの&lt;em&gt;と&lt;/em&gt;、診断が追加されたものだけを見つけます。</target>
        </trans-unit>
        <trans-unit id="94a255a686858f555c8fd88d5aeff6def8cb3789" translate="yes" xml:space="preserve">
          <source>to control ENDBR insertion at the function entry.</source>
          <target state="translated">関数エントリでのENDBR挿入を制御します。</target>
        </trans-unit>
        <trans-unit id="19b2179fa50d0dc5c03ac2bc86827309972186c2" translate="yes" xml:space="preserve">
          <source>to create absolute path names in the</source>
          <target state="translated">で絶対パス名を作成します。</target>
        </trans-unit>
        <trans-unit id="61d153980416e2776871ed7a73354bcce21b8190" translate="yes" xml:space="preserve">
          <source>to detect missing declarations in C++.</source>
          <target state="translated">を使用して、C++での宣言の欠落を検出することができます。</target>
        </trans-unit>
        <trans-unit id="0933a20f384a8d7b9d33c0af497e5215d98b2935" translate="yes" xml:space="preserve">
          <source>to detect missing prototypes. In C++, no warnings are issued for function templates, or for inline functions, or for functions in anonymous namespaces.</source>
          <target state="translated">を使用して、欠落したプロトタイプを検出します。C++では、関数テンプレート、インライン関数、匿名名前空間の関数については警告が発行されません。</target>
        </trans-unit>
        <trans-unit id="a494cba1db39103892ec4114a05e2de145d05037" translate="yes" xml:space="preserve">
          <source>to determine which diagnostics are controllable and which option controls them.</source>
          <target state="translated">を使用して、どの診断が制御可能で、どのオプションがそれらを制御するかを決定します。</target>
        </trans-unit>
        <trans-unit id="8c695a6dd538d5dbb5a57dc4290630308c91e43d" translate="yes" xml:space="preserve">
          <source>to disable it.</source>
          <target state="translated">をクリックして無効にします。</target>
        </trans-unit>
        <trans-unit id="e8e041429b9c0952fdf9f213889fda578a011674" translate="yes" xml:space="preserve">
          <source>to disable the implicit generation of template instances, and explicitly instantiate all the ones you use. This approach requires more knowledge of exactly which instances you need than do the others, but it&amp;rsquo;s less mysterious and allows greater control if you want to ensure that only the intended instances are used.</source>
          <target state="translated">テンプレートインスタンスの暗黙的な生成を無効にし、使用するすべてのインスタンスを明示的にインスタンス化します。このアプローチでは、必要なインスタンスを他のインスタンスより正確に把握する必要がありますが、意図したインスタンスのみが使用されるようにする場合は、不思議ではなく、制御を強化できます。</target>
        </trans-unit>
        <trans-unit id="5c4ff82cecad67b167eba0065ea2bf4d09eb3446" translate="yes" xml:space="preserve">
          <source>to disable them.</source>
          <target state="translated">をクリックして無効にします。</target>
        </trans-unit>
        <trans-unit id="fbd73b9246bec2bc2e55283764a502c551078ee1" translate="yes" xml:space="preserve">
          <source>to disable this optimization for programs that depend on that behavior.</source>
          <target state="translated">を使用して、その動作に依存するプログラムに対してこの最適化を無効にします。</target>
        </trans-unit>
        <trans-unit id="039e1612b10e94f6f2659062c88dfdf875e27be6" translate="yes" xml:space="preserve">
          <source>to disable this warning.</source>
          <target state="translated">をクリックして、この警告を無効にします。</target>
        </trans-unit>
        <trans-unit id="d55d75fe437132ac1720cd629fab6a05c42e7af5" translate="yes" xml:space="preserve">
          <source>to enable it.</source>
          <target state="translated">を有効にしてください。</target>
        </trans-unit>
        <trans-unit id="05966880b1ac6606488fa8d8db4545ca6018ef84" translate="yes" xml:space="preserve">
          <source>to enable it; use</source>
          <target state="translated">を使用して有効にします。</target>
        </trans-unit>
        <trans-unit id="4bcccf63e106112dbb4698af1310d60e11c3d159" translate="yes" xml:space="preserve">
          <source>to enable the Graphite loop transformation infrastructure.</source>
          <target state="translated">を使用して、Graphiteループ変換インフラストラクチャを有効にします。</target>
        </trans-unit>
        <trans-unit id="6c212994ff609c34988244931def67f8d2af0420" translate="yes" xml:space="preserve">
          <source>to enforce a stack limit of 128KB. Note that this may only work with the GNU linker.</source>
          <target state="translated">を使って128KBのスタック制限を強制することができます。これはGNUリンカでのみ動作することに注意してください。</target>
        </trans-unit>
        <trans-unit id="734400b7fea19d9bbb9a0e9ecbe544eadcf35f57" translate="yes" xml:space="preserve">
          <source>to ensure that directory is searched before (or instead of) the directory containing the original header. Then, if you want to check that the precompiled header file is always used, you can put a file of the same name as the original header in this directory containing an &lt;code&gt;#error&lt;/code&gt; command.</source>
          <target state="translated">元のヘッダーを含むディレクトリの前（または代わり）にディレクトリが検索されるようにします。次に、プリコンパイル済みヘッダーファイルが常に使用されることを確認する場合は、 &lt;code&gt;#error&lt;/code&gt; コマンドを含むこのディレクトリに、元のヘッダーと同じ名前のファイルを置くことができます。</target>
        </trans-unit>
        <trans-unit id="56612887fdcd087119426d8be9265bde6fc63d89" translate="yes" xml:space="preserve">
          <source>to ensure that the library participates in the LTO optimization process:</source>
          <target state="translated">を使用して、ライブラリがLTO最適化プロセスに参加するようにします。</target>
        </trans-unit>
        <trans-unit id="c05bd5385bf80f9a9a04934cc031957bdf366cef" translate="yes" xml:space="preserve">
          <source>to find out the exact set of optimizations that are enabled at each level. See &lt;a href=&quot;overall-options#Overall-Options&quot;&gt;Overall Options&lt;/a&gt;, for examples.</source>
          <target state="translated">各レベルで有効になっている最適化の正確なセットを見つける。例については、&lt;a href=&quot;overall-options#Overall-Options&quot;&gt;全体的なオプションを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="629b35a9e103e85590bf77ad4ca23d31085af6a9" translate="yes" xml:space="preserve">
          <source>to force the use of breaks.</source>
          <target state="translated">休憩時間を強制的に使用するために</target>
        </trans-unit>
        <trans-unit id="4d1097919176c00815b8ac50d1decf852e1bee39" translate="yes" xml:space="preserve">
          <source>to generate compare-and-branch (&lt;code&gt;br&lt;var&gt;cc&lt;/var&gt;&lt;/code&gt;) instructions. It has no effect on generation of these instructions driven by the combiner pass.</source>
          <target state="translated">比較と分岐（ &lt;code&gt;br&lt;var&gt;cc&lt;/var&gt;&lt;/code&gt; ）命令を生成します。コンバイナパスによって駆動されるこれらの命令の生成には影響しません。</target>
        </trans-unit>
        <trans-unit id="603b5b4262418040b0998e125944b949f7e6a74c" translate="yes" xml:space="preserve">
          <source>to generate output using the global registers 2 through 4, which the SPARC SVR4 ABI reserves for applications. Like the global register 1, each global register 2 through 4 is then treated as an allocable register that is clobbered by function calls. This is the default.</source>
          <target state="translated">を使用して出力を生成するために、SPARC SVR4 ABI がアプリケーション用に確保しているグローバルレジスタ 2 から 4 を使用します。グローバルレジスタ1と同様に、各グローバルレジスタ2から4は、関数呼び出しによって衝突するアロカブルレジスタとして扱われます。これがデフォルトです。</target>
        </trans-unit>
        <trans-unit id="050dbf2043737f5734fcc472cca8363f2a6e0402" translate="yes" xml:space="preserve">
          <source>to generate the precompiled header but not when using it, you may or may not get debugging information for routines in the precompiled header.</source>
          <target state="translated">を使用してプリコンパイルされたヘッダを生成しますが、使用時には生成されませんので、プリコンパイルされたヘッダ内のルーチンのデバッグ情報が得られる場合と得られない場合があります。</target>
        </trans-unit>
        <trans-unit id="9d64a41aeb3d720fbe4500f1925859d9eb0a9221" translate="yes" xml:space="preserve">
          <source>to get 32-bit code instead.</source>
          <target state="translated">を使用して32ビットコードを取得します。</target>
        </trans-unit>
        <trans-unit id="f64fe5688710dc3468d5b3dfc4519d0326d987aa" translate="yes" xml:space="preserve">
          <source>to identify which features are GNU extensions given that version of the standard. For example</source>
          <target state="translated">を使って、どの機能が標準のそのバージョンのGNU拡張であるかを識別することができます。例えば</target>
        </trans-unit>
        <trans-unit id="27759b6de471330fcc87c15f07af7d6823ab99f5" translate="yes" xml:space="preserve">
          <source>to inhibit this behavior.</source>
          <target state="translated">この行動を抑制するために</target>
        </trans-unit>
        <trans-unit id="4698276f01dd7d4d5a2857a8b316c4ea78bb2d42" translate="yes" xml:space="preserve">
          <source>to match.</source>
          <target state="translated">に合わせてください。</target>
        </trans-unit>
        <trans-unit id="2f5d88ed04e4ec760db92ef12bc77910590db02f" translate="yes" xml:space="preserve">
          <source>to not conflict with the non-garbage-collected library.</source>
          <target state="translated">を使用して、ゴミを収集していないライブラリと競合しないようにします。</target>
        </trans-unit>
        <trans-unit id="88a51302506899d3e37776fb85e7b09b71b57057" translate="yes" xml:space="preserve">
          <source>to omit the &lt;code&gt;MEMW&lt;/code&gt; instructions.</source>
          <target state="translated">&lt;code&gt;MEMW&lt;/code&gt; 命令を省略します。</target>
        </trans-unit>
        <trans-unit id="0a4b0d8525f5f8e70a145372815d6b689452061b" translate="yes" xml:space="preserve">
          <source>to override a system header file, substituting your own version, since these directories are searched before the standard system header file directories. However, you should not use this option to add directories that contain vendor-supplied system header files; use</source>
          <target state="translated">を使用してシステムヘッダファイルを上書きし、独自のバージョンを代用することができます。しかし、ベンダが提供するシステムヘッダファイルを含むディレクトリを追加するには、 このオプションを使用すべきではありません。</target>
        </trans-unit>
        <trans-unit id="0e0d819cf586e769427bd9c3905cb645eff2cbd0" translate="yes" xml:space="preserve">
          <source>to point to a directory which contains a folder named &lt;code&gt;device-specs&lt;/code&gt; which contains a specs file named &lt;code&gt;specs-&lt;var&gt;mcu&lt;/var&gt;&lt;/code&gt;, where &lt;var&gt;mcu&lt;/var&gt; was specified by</source>
          <target state="translated">名前のフォルダが含まれるディレクトリを指すように &lt;code&gt;device-specs&lt;/code&gt; specsファイルの名前が含まれ &lt;code&gt;specs-&lt;var&gt;mcu&lt;/var&gt;&lt;/code&gt; 、 &lt;var&gt;mcu&lt;/var&gt; で指定されました</target>
        </trans-unit>
        <trans-unit id="51475c850a9d73ee144639b820092098a6d159f6" translate="yes" xml:space="preserve">
          <source>to point to specialized trace routines providing the ability of selectively skipping function trace entries for the TPF OS. This option is off by default, even when compiling for the TPF OS and specifying</source>
          <target state="translated">を指定すると、TPF OS 用の関数トレースエントリを選択的にスキップする機能を提供する特殊なトレースルーチンを指します。このオプションは、TPF OS 用にコンパイルしていて</target>
        </trans-unit>
        <trans-unit id="f278c4572032c86b605671f5ebffd4ef00d07c75" translate="yes" xml:space="preserve">
          <source>to receive all required diagnostics).</source>
          <target state="translated">を使用して、必要なすべての診断を受けることができます)。</target>
        </trans-unit>
        <trans-unit id="460f07ff1dbfe17d44182eeae667fe92163a595e" translate="yes" xml:space="preserve">
          <source>to request warnings on implicit declarations. Each of these specific warning options also has a negative form beginning &amp;lsquo;</source>
          <target state="translated">暗黙の宣言に関する警告を要求します。これらの特定の警告オプションのそれぞれには、「</target>
        </trans-unit>
        <trans-unit id="983435caf1f50183a8104ce42b32d9c29ccb09d9" translate="yes" xml:space="preserve">
          <source>to say where &lt;code&gt;gcc&lt;/code&gt; is to stop. Note that some combinations (for example, &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;gcc&lt;/code&gt; がどこで停止するかを言います。一部の組み合わせ（たとえば、 '</target>
        </trans-unit>
        <trans-unit id="bc2527b26f4ee6f9de55fb763b4725eaf6b8831b" translate="yes" xml:space="preserve">
          <source>to select this variant of C++.</source>
          <target state="translated">をクリックして、C++のこのバリアントを選択します。</target>
        </trans-unit>
        <trans-unit id="c00c1c1c90d09a4ce7f4fd4441ddc063ccee6f30" translate="yes" xml:space="preserve">
          <source>to specify the location of the alternate startup code provided by the HAL BSP.</source>
          <target state="translated">を使用して、HAL BSP が提供する代替起動コードの場所を指定します。</target>
        </trans-unit>
        <trans-unit id="03580f5c66d67f97ea875aacde75a574f8b30638" translate="yes" xml:space="preserve">
          <source>to stop the library from making assumptions about externally-defined data.</source>
          <target state="translated">を使用して、ライブラリが外部定義されたデータについての仮定を行わないようにします。</target>
        </trans-unit>
        <trans-unit id="9c7b484d0d84261b71a1545c8d270843b3becfe1" translate="yes" xml:space="preserve">
          <source>to suppress them.</source>
          <target state="translated">抑圧するために。</target>
        </trans-unit>
        <trans-unit id="c811a1b4242d771b19a525a1d208d80b642a9c43" translate="yes" xml:space="preserve">
          <source>to tell the compiler to treat the DMA instructions as potentially affecting all memory.</source>
          <target state="translated">DMA命令をすべてのメモリに影響を与える可能性があるものとして扱うようにコンパイラに指示します。</target>
        </trans-unit>
        <trans-unit id="80dfa1b7e6d84586fbe04ae2e5b3ecc9425fc25b" translate="yes" xml:space="preserve">
          <source>to the &lt;var&gt;auxname&lt;/var&gt;. &lt;var&gt;auxname&lt;/var&gt; is generated from the name of the output file, if explicitly specified and it is not an executable, otherwise it is the basename of the source file. An entry is made up of three fields:</source>
          <target state="translated">&lt;var&gt;auxname&lt;/var&gt; 。 &lt;var&gt;auxname&lt;/var&gt; は、明示的に指定され、実行可能ファイルでない場合、出力ファイルの名前から生成されます。それ以外の場合は、ソースファイルのベース名になります。エントリは3つのフィールドで構成されています。</target>
        </trans-unit>
        <trans-unit id="cf9e8fa4ffeb576a3d8466c71f19f2e8236b9408" translate="yes" xml:space="preserve">
          <source>to the ELF linker, on targets that support it. This instructs the linker to add all symbols, not only used ones, to the dynamic symbol table. This option is needed for some uses of &lt;code&gt;dlopen&lt;/code&gt; or to allow obtaining backtraces from within a program.</source>
          <target state="translated">ELFリンカーをサポートするターゲット上で。これは、使用中のシンボルだけでなく、すべてのシンボルを動的シンボルテーブルに追加するようにリンカーに指示します。このオプションは、 &lt;code&gt;dlopen&lt;/code&gt; の一部の使用や、プログラム内からバックトレースを取得できるようにするために必要です。</target>
        </trans-unit>
        <trans-unit id="4d9732ef0ab50a0fe284eee03a96d968a332478f" translate="yes" xml:space="preserve">
          <source>to the arguments passed to the second compilation. Dump the final internal representation in both compilations, and print an error if they differ.</source>
          <target state="translated">を2回目のコンパイルに渡された引数に変換します。両方のコンパイルで最終的な内部表現をダンプし、異なる場合はエラーを表示します。</target>
        </trans-unit>
        <trans-unit id="de7357ba56740482049f7f118ccf7fdf60e6c511" translate="yes" xml:space="preserve">
          <source>to the assembler.</source>
          <target state="translated">をアセンブラに追加しました。</target>
        </trans-unit>
        <trans-unit id="78a429e6e7080a5e45e973cd47d6f62345704600" translate="yes" xml:space="preserve">
          <source>to the assembler. GCC doesn&amp;rsquo;t generate any DSP instructions at the moment.</source>
          <target state="translated">アセンブラーに。現時点では、GCCはDSP命令を生成しません。</target>
        </trans-unit>
        <trans-unit id="b698023086fba4aa3d3217a8fe662a8e82d46376" translate="yes" xml:space="preserve">
          <source>to the command line.</source>
          <target state="translated">をコマンドラインに追加してください。</target>
        </trans-unit>
        <trans-unit id="48493e621e94e93653fa4936451bd8b569e4242e" translate="yes" xml:space="preserve">
          <source>to the compiler driver&amp;rsquo;s command line. The user takes responsibility for supplying the sub-processes like compiler proper, assembler and linker with appropriate command line options. This means that the user has to supply her private device specs file by means of</source>
          <target state="translated">コンパイラドライバのコマンドラインに移動します。ユーザーは、コンパイラー本体、アセンブラー、リンカーなどのサブプロセスに適切なコマンドラインオプションを提供する責任があります。これは、ユーザーが次の方法でプライベートデバイスの仕様ファイルを提供する必要があることを意味します。</target>
        </trans-unit>
        <trans-unit id="9ae556297d14df5c890b3b7d02a39e780883c02a" translate="yes" xml:space="preserve">
          <source>to the compiler driver. See the documentation of this option for more details.</source>
          <target state="translated">をコンパイラー・ドライバに追加することができます。詳細はこのオプションのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="1a5e2bef65f1422dc494684575c79fffa7a01bcc" translate="yes" xml:space="preserve">
          <source>to the compiler without problems. In this mode the integrated preprocessor is little more than a tokenizer for the front ends.</source>
          <target state="translated">をコンパイラーに送ることは問題ありません。このモードでは、統合されたプリプロセッサはフロントエンドのトークナイザーに過ぎません。</target>
        </trans-unit>
        <trans-unit id="c4f7d50ee83a18b2761d2a93448780c946fbf262" translate="yes" xml:space="preserve">
          <source>to the driver implies</source>
          <target state="translated">をドライバーに与えることを意味します。</target>
        </trans-unit>
        <trans-unit id="ef57e6bc8f62cc2f040dce93c08243f51f372494" translate="yes" xml:space="preserve">
          <source>to the link command.</source>
          <target state="translated">をリンクコマンドに追加してください。</target>
        </trans-unit>
        <trans-unit id="c8b83c33ceb7b4db9576f93cb9bbcdda02ff46c2" translate="yes" xml:space="preserve">
          <source>to the linker when linking a shared object. Using this option, you can link position-dependent code into a shared object.</source>
          <target state="translated">をリンカに指定して共有オブジェクトをリンクします。このオプションを使用すると、位置依存のコードを共有オブジェクトにリンクすることができます。</target>
        </trans-unit>
        <trans-unit id="59df5222f9894c3b944a44fe0c985ada0e5e863e" translate="yes" xml:space="preserve">
          <source>to the linker. When using the GNU linker, you can also get the same effect with</source>
          <target state="translated">をリンカに送ることができます。GNUリンカを使う場合、同じ効果を得るには</target>
        </trans-unit>
        <trans-unit id="ff71001fb1b962107d41fe2e3c8ba6fef28f324f" translate="yes" xml:space="preserve">
          <source>to the profitability score of the candidate.</source>
          <target state="translated">を候補者の採算性スコアに変換します。</target>
        </trans-unit>
        <trans-unit id="6e3a4fd5dcd8a06d8488683e14b2c5e3c2978ff2" translate="yes" xml:space="preserve">
          <source>to use GNU make&amp;rsquo;s job server mode to determine the number of parallel jobs. This is useful when the Makefile calling GCC is already executing in parallel. You must prepend a &amp;lsquo;</source>
          <target state="translated">GNU makeのジョブサーバーモードを使用して、並列ジョブの数を決定します。これは、GCCを呼び出すMakefileがすでに並行して実行されている場合に役立ちます。'を前に付ける必要があります</target>
        </trans-unit>
        <trans-unit id="ce9726d2bdb30c8e07367ad518d80f9ba7699230" translate="yes" xml:space="preserve">
          <source>to use GNU make&amp;rsquo;s job server, if available, or otherwise fall back to autodetection of the number of CPU threads present in your system.</source>
          <target state="translated">利用可能な場合はGNUmakeのジョブサーバーを使用するか、システムに存在するCPUスレッドの数の自動検出にフォールバックします。</target>
        </trans-unit>
        <trans-unit id="2d334abf3afbc59414f963735bb8a9bef5c69125" translate="yes" xml:space="preserve">
          <source>to use any of the functions, such as &lt;code&gt;class_getName()&lt;/code&gt;, declared in</source>
          <target state="translated">で宣言されている &lt;code&gt;class_getName()&lt;/code&gt; などの関数を使用するには</target>
        </trans-unit>
        <trans-unit id="fdbc91f4d1da18c4a9eacc86aa69e8b5bbe2d818" translate="yes" xml:space="preserve">
          <source>to use this extension.</source>
          <target state="translated">を使用して、この拡張子を使用します。</target>
        </trans-unit>
        <trans-unit id="837548d358882f5d60c4f2f156607225b2b00e3b" translate="yes" xml:space="preserve">
          <source>to warn about changes relative to</source>
          <target state="translated">との相対的な変更を警告するために</target>
        </trans-unit>
        <trans-unit id="f30e94b5c3164ab76a747bf52c67540d2f17389d" translate="yes" xml:space="preserve">
          <source>to work around invalid code, and it will also only catch cases where functions in base classes are called, not where variables in base classes are used (as in the example above).</source>
          <target state="translated">を使用することで、無効なコードを回避することができます。また、(上の例のように)基底クラスの変数が使用されている場合ではなく、基底クラスの関数が呼び出されている場合にのみ捕捉されます。</target>
        </trans-unit>
        <trans-unit id="6d940d3a308e2226f6239f2b9cefd6d0b6a55f53" translate="yes" xml:space="preserve">
          <source>to your other options.</source>
          <target state="translated">を他のオプションに変更してください。</target>
        </trans-unit>
        <trans-unit id="2981264b4e86f51b3136e2679743c7bdd13a2bb9" translate="yes" xml:space="preserve">
          <source>to zero causes a full collection to occur at every opportunity.</source>
          <target state="translated">をゼロにすると、あらゆる機会にフルコレクションが発生します。</target>
        </trans-unit>
        <trans-unit id="5381a1aea30f9b9086a2ba40993581e9e64e84f7" translate="yes" xml:space="preserve">
          <source>to zero causes a full collection to occur at every opportunity. This is extremely slow, but can be useful for debugging.</source>
          <target state="translated">をゼロにすると、あらゆる機会にフルコレクションが発生します。これは非常に遅いですが、デバッグに役立ちます。</target>
        </trans-unit>
        <trans-unit id="da755fb8086355c63b04c7fc08e56e6cbf25bb3e" translate="yes" xml:space="preserve">
          <source>together with</source>
          <target state="translated">共に</target>
        </trans-unit>
        <trans-unit id="416fee2b88f7586a5c4d06a5cd0afdd92932e941" translate="yes" xml:space="preserve">
          <source>together, it is possible to generate code that runs on a family of processors, but optimize the code for one particular member of that family.</source>
          <target state="translated">を併用することで、プロセッサのファミリー上で動作するコードを生成することができますが、そのファミリーの特定のメンバーのためにコードを最適化することができます。</target>
        </trans-unit>
        <trans-unit id="7d21e7efea8f1d1cbc83bfe499c70e0d0b9006a4" translate="yes" xml:space="preserve">
          <source>toggles</source>
          <target state="translated">toggles</target>
        </trans-unit>
        <trans-unit id="536c0b339345616c1b33caf454454d8b8a190d6c" translate="yes" xml:space="preserve">
          <source>tomcat</source>
          <target state="translated">tomcat</target>
        </trans-unit>
        <trans-unit id="45c5535e1296d87e2d8d7799ab89807825da7076" translate="yes" xml:space="preserve">
          <source>tracer-dynamic-coverage</source>
          <target state="translated">tracer-dynamic-coverage</target>
        </trans-unit>
        <trans-unit id="81784a60fb1acab3e1d4b1ff2b76ee4a9c633e76" translate="yes" xml:space="preserve">
          <source>tracer-dynamic-coverage-feedback</source>
          <target state="translated">tracer-dynamic-coverage-feedback</target>
        </trans-unit>
        <trans-unit id="cb680ac36c4bc2e3ee82f3bd4d7122a62aa2f6f2" translate="yes" xml:space="preserve">
          <source>tracer-min-branch-probability</source>
          <target state="translated">tracer-min-branch-probability</target>
        </trans-unit>
        <trans-unit id="ca3e8e730a4fc98f2f0311cfdb93e1379f732aea" translate="yes" xml:space="preserve">
          <source>tracer-min-branch-probability-feedback</source>
          <target state="translated">tracer-min-branch-probability-feedback</target>
        </trans-unit>
        <trans-unit id="84270d0c8d1a7f3a0c220e40a25a825bb3ed669c" translate="yes" xml:space="preserve">
          <source>tremont</source>
          <target state="translated">tremont</target>
        </trans-unit>
        <trans-unit id="e441e270376256c7af48f740cf9d53562dadf722" translate="yes" xml:space="preserve">
          <source>true_le</source>
          <target state="translated">true_le</target>
        </trans-unit>
        <trans-unit id="86d0e1c4cf9761735e920b557562afba29f1c983" translate="yes" xml:space="preserve">
          <source>true_store_to_load</source>
          <target state="translated">true_store_to_load</target>
        </trans-unit>
        <trans-unit id="f283ea9bea0e80213ac091021420ffc9b3415914" translate="yes" xml:space="preserve">
          <source>truncate</source>
          <target state="translated">truncate</target>
        </trans-unit>
        <trans-unit id="3ff580ca35b033e4b0f83d9e8fe28eee7eda4918" translate="yes" xml:space="preserve">
          <source>tsc701</source>
          <target state="translated">tsc701</target>
        </trans-unit>
        <trans-unit id="229e3402179c6180c660faf90643acb18211e1e8" translate="yes" xml:space="preserve">
          <source>tso</source>
          <target state="translated">tso</target>
        </trans-unit>
        <trans-unit id="b7ad604f4f6482313a008463f4fcc00076b4b057" translate="yes" xml:space="preserve">
          <source>tsv110</source>
          <target state="translated">tsv110</target>
        </trans-unit>
        <trans-unit id="39a7a3eec6e2c22bc62ab3f184c59faec3eb4285" translate="yes" xml:space="preserve">
          <source>tune=</source>
          <target state="translated">tune=</target>
        </trans-unit>
        <trans-unit id="9cbf2472cf2c548549b31c58eb3dc796d42cac30" translate="yes" xml:space="preserve">
          <source>tune=&lt;var&gt;TUNE&lt;/var&gt;</source>
          <target state="translated">tune=&lt;var&gt;TUNE&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="16e599cc03c5ad8855689660a51463b7addb8730" translate="yes" xml:space="preserve">
          <source>turns off certain features of GCC that are incompatible with ISO C90, such as the &lt;code&gt;asm&lt;/code&gt; and &lt;code&gt;typeof&lt;/code&gt; keywords, but not other GNU extensions that do not have a meaning in ISO C90, such as omitting the middle term of a &lt;code&gt;?:&lt;/code&gt; expression. On the other hand, when a GNU dialect of a standard is specified, all features supported by the compiler are enabled, even when those features change the meaning of the base standard. As a result, some strict-conforming programs may be rejected. The particular standard is used by</source>
          <target state="translated">&lt;code&gt;asm&lt;/code&gt; や &lt;code&gt;typeof&lt;/code&gt; キーワードなど、ISO C90と互換性のないGCCの特定の機能をオフにしますが、 &lt;code&gt;?:&lt;/code&gt; 式の中間用語の省略など、ISO C90で意味のない他のGNU拡張機能はオフにしません。一方、標準のGNU方言が指定されている場合、それらの機能が基本標準の意味を変更する場合でも、コンパイラーによってサポートされるすべての機能が有効になります。その結果、一部の厳格な適合プログラムは拒否される場合があります。特定の規格は、</target>
        </trans-unit>
        <trans-unit id="4b7c45835340256489beaf1f33d0482f325aa167" translate="yes" xml:space="preserve">
          <source>turns on all optimization flags specified by</source>
          <target state="translated">で指定されたすべての最適化フラグをオンにします。</target>
        </trans-unit>
        <trans-unit id="673f9ec68e29a513136ec213b926eac92e38a1c4" translate="yes" xml:space="preserve">
          <source>turns on all optimizations specified by</source>
          <target state="translated">で指定されたすべての最適化をオンにします。</target>
        </trans-unit>
        <trans-unit id="e35019a0858530979588439510eecc5908e16347" translate="yes" xml:space="preserve">
          <source>turns on the following optimization flags:</source>
          <target state="translated">は以下の最適化フラグをオンにします。</target>
        </trans-unit>
        <trans-unit id="6622ae51eb9825794bdfc50c805d1e4e00507603" translate="yes" xml:space="preserve">
          <source>turns on the following warning flags:</source>
          <target state="translated">は以下の警告フラグをオンにします。</target>
        </trans-unit>
        <trans-unit id="679379aaad8b89b2891e7c78b8bc927a0bf02326" translate="yes" xml:space="preserve">
          <source>turns the warnings controlled by</source>
          <target state="translated">によって制御される警告を</target>
        </trans-unit>
        <trans-unit id="2a7bfaae75b281b1ebae741c8e5d94f222804964" translate="yes" xml:space="preserve">
          <source>turns this on by default.</source>
          <target state="translated">をデフォルトでオンにします。</target>
        </trans-unit>
        <trans-unit id="7c941051db64c3be492ca9df45d7349ddce20ffc" translate="yes" xml:space="preserve">
          <source>twice, once for the option and once for the argument.</source>
          <target state="translated">を2回、1回はオプションに、1回は引数に使用します。</target>
        </trans-unit>
        <trans-unit id="5fd56cb8ef558ea2df1bfac863d2f550e72445da" translate="yes" xml:space="preserve">
          <source>twice, once for the option and once for the argument. For example, to pass</source>
          <target state="translated">を2回、1回はオプションに、1回は引数に渡します。例えば</target>
        </trans-unit>
        <trans-unit id="54deb17b571f640eb555cc2a30565f68da936eef" translate="yes" xml:space="preserve">
          <source>two parameters are provided.</source>
          <target state="translated">の2つのパラメータが用意されています。</target>
        </trans-unit>
        <trans-unit id="1ce20d0b7e29581da2ce0ab6dced2d74f29ffebc" translate="yes" xml:space="preserve">
          <source>type_info</source>
          <target state="translated">type_info</target>
        </trans-unit>
        <trans-unit id="5a8d37351ca8a6a7739b030036a7e7089e1f8853" translate="yes" xml:space="preserve">
          <source>typeid</source>
          <target state="translated">typeid</target>
        </trans-unit>
        <trans-unit id="51e69892ab49df85c6230ccc57f8e1d1606caccc" translate="yes" xml:space="preserve">
          <source>u</source>
          <target state="translated">u</target>
        </trans-unit>
        <trans-unit id="4be01fe4a515750d5ab46675777a7bc0e62d229a" translate="yes" xml:space="preserve">
          <source>ucache</source>
          <target state="translated">ucache</target>
        </trans-unit>
        <trans-unit id="7c960b11e006c84a44916f80fc4a1ef9f39dfbe3" translate="yes" xml:space="preserve">
          <source>uhk</source>
          <target state="translated">uhk</target>
        </trans-unit>
        <trans-unit id="9914224f0ff2f09e1a0211c22526941f8798afe1" translate="yes" xml:space="preserve">
          <source>uhr</source>
          <target state="translated">uhr</target>
        </trans-unit>
        <trans-unit id="e2577dd78b54fe28c65ee56ffbc8bb73058e08c0" translate="yes" xml:space="preserve">
          <source>uid</source>
          <target state="translated">uid</target>
        </trans-unit>
        <trans-unit id="68c42a321969a6abf1cf14a8d0ab4b1a07329ceb" translate="yes" xml:space="preserve">
          <source>uk</source>
          <target state="translated">uk</target>
        </trans-unit>
        <trans-unit id="7e3b66f9c4f175dd93b125d08b9fe1b4cd25111e" translate="yes" xml:space="preserve">
          <source>ulk</source>
          <target state="translated">ulk</target>
        </trans-unit>
        <trans-unit id="93fe479a2749f3437d91373b4275f7fb5dfc783b" translate="yes" xml:space="preserve">
          <source>ullk</source>
          <target state="translated">ullk</target>
        </trans-unit>
        <trans-unit id="ed6ee62e5108dfdb234e2fa8be9c48ae0fe9e920" translate="yes" xml:space="preserve">
          <source>ullr</source>
          <target state="translated">ullr</target>
        </trans-unit>
        <trans-unit id="21ede418147ec5dd09699ae90901c0fa918f952b" translate="yes" xml:space="preserve">
          <source>ulr</source>
          <target state="translated">ulr</target>
        </trans-unit>
        <trans-unit id="74854ce102a32a75d2eda4da188ffd2cd03ac211" translate="yes" xml:space="preserve">
          <source>ultrasparc</source>
          <target state="translated">ultrasparc</target>
        </trans-unit>
        <trans-unit id="f5b409d36df5cd71c1d68ce5071abc4cdf58b012" translate="yes" xml:space="preserve">
          <source>ultrasparc, ultrasparc3, niagara, niagara2, niagara3, niagara4, niagara7, m8</source>
          <target state="translated">ウルトラスパルク、ウルトラスパルク3、ナイアガラ、ナイアガラ2、ナイアガラ3、ナイアガラ4、ナイアガラ7、M8</target>
        </trans-unit>
        <trans-unit id="020fe295df946742b8e0bf1a9548ae1b566e62ce" translate="yes" xml:space="preserve">
          <source>ultrasparc3</source>
          <target state="translated">ultrasparc3</target>
        </trans-unit>
        <trans-unit id="d7b02c1c5d38014dad3e7f8287fa31126faa2925" translate="yes" xml:space="preserve">
          <source>unary arithmetic operators (&lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;!&lt;/code&gt;)</source>
          <target state="translated">単項算術演算子（ &lt;code&gt;+&lt;/code&gt; 、 &lt;code&gt;-&lt;/code&gt; 、！） &lt;code&gt;!&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="862298a39b9dce3bef134f29ec746bd4eb12d532" translate="yes" xml:space="preserve">
          <source>undocumented</source>
          <target state="translated">undocumented</target>
        </trans-unit>
        <trans-unit id="b0c77b22b4ae5f68687b2320f8889b16f8ab80f6" translate="yes" xml:space="preserve">
          <source>unions</source>
          <target state="translated">unions</target>
        </trans-unit>
        <trans-unit id="7aa3f0c8ceaf14ce8a84c4545bfb99b6fad55bb4" translate="yes" xml:space="preserve">
          <source>unix95.o</source>
          <target state="translated">unix95.o</target>
        </trans-unit>
        <trans-unit id="38dc8538a7b6eca07316a4c2976715f91325c1fc" translate="yes" xml:space="preserve">
          <source>unix98.o</source>
          <target state="translated">unix98.o</target>
        </trans-unit>
        <trans-unit id="47072ca1e0797506998ae898c6bc6400623fceab" translate="yes" xml:space="preserve">
          <source>unknown type</source>
          <target state="translated">未知型</target>
        </trans-unit>
        <trans-unit id="9980f6bf3b3cd6ef6d37126ba749b9b9292a23dc" translate="yes" xml:space="preserve">
          <source>unless GCC has been configured with</source>
          <target state="translated">が設定されていない限り</target>
        </trans-unit>
        <trans-unit id="e702e81847d2cb1fef5b99f495076b9aaff4d684" translate="yes" xml:space="preserve">
          <source>unless options preventing their inclusion are used as well. This typically removes</source>
          <target state="translated">を含めることを防ぐオプションが使用されていない限り、このオプションを使用することはできません。これは通常</target>
        </trans-unit>
        <trans-unit id="d671de48b3171ccaa129911d88f092a66751bcb2" translate="yes" xml:space="preserve">
          <source>unless other diagnostics are being produced. This allows the use of new</source>
          <target state="translated">他の診断が作成されている場合を除きます。これにより、新しい</target>
        </trans-unit>
        <trans-unit id="e1a6f0b6f73a57a8b3ee30419e28f6cb95143908" translate="yes" xml:space="preserve">
          <source>unlimited</source>
          <target state="translated">unlimited</target>
        </trans-unit>
        <trans-unit id="9d38e760530a4ee7f3935cc545264bf30f767834" translate="yes" xml:space="preserve">
          <source>unrolled_loop</source>
          <target state="translated">unrolled_loop</target>
        </trans-unit>
        <trans-unit id="9c5801f9a359c082f32477ded758379bfcebd289" translate="yes" xml:space="preserve">
          <source>unsigned greater than</source>
          <target state="translated">符号なし</target>
        </trans-unit>
        <trans-unit id="53b078a4ee760a314a4fde626f8e6fe0576d9715" translate="yes" xml:space="preserve">
          <source>unsigned less than equal</source>
          <target state="translated">符号なし</target>
        </trans-unit>
        <trans-unit id="0a25ba5991316bdda4a9b3abcee2106016df28a0" translate="yes" xml:space="preserve">
          <source>update</source>
          <target state="translated">update</target>
        </trans-unit>
        <trans-unit id="7b21fdd90a6056168b4b04da4c8c387c4fbce2f5" translate="yes" xml:space="preserve">
          <source>ur</source>
          <target state="translated">ur</target>
        </trans-unit>
        <trans-unit id="04489a12bbaa6aebffb61ed2f524424ba8e1147e" translate="yes" xml:space="preserve">
          <source>use</source>
          <target state="translated">use</target>
        </trans-unit>
        <trans-unit id="2facbb1cbd656cd8e3d6d4a81237838006d744d6" translate="yes" xml:space="preserve">
          <source>used by the program without going all the way to a fully static link. The</source>
          <target state="translated">は、完全に静的なリンクまで行かずにプログラムで使用されています。のように、プログラムが使用することができます。</target>
        </trans-unit>
        <trans-unit id="ce0e313983d96e6051bc4441c741e6c886ba4a60" translate="yes" xml:space="preserve">
          <source>usually calculates the addresses of all three variables, but if you compile it with</source>
          <target state="translated">は通常、3つの変数のアドレスを計算しますが、これを</target>
        </trans-unit>
        <trans-unit id="ea1dd75eed90fa89afc19a3c6b039f1a0e4b8891" translate="yes" xml:space="preserve">
          <source>v0</source>
          <target state="translated">v0</target>
        </trans-unit>
        <trans-unit id="85a03bae2ecfd070d7b7503cee7c26e30e6efa2a" translate="yes" xml:space="preserve">
          <source>v10</source>
          <target state="translated">v10</target>
        </trans-unit>
        <trans-unit id="c5e31d5915661de4393e3f1489b00ebc4497dd48" translate="yes" xml:space="preserve">
          <source>v3</source>
          <target state="translated">v3</target>
        </trans-unit>
        <trans-unit id="27c8354c47776fb340222a415127286e3cf1fef7" translate="yes" xml:space="preserve">
          <source>v3.00.a</source>
          <target state="translated">v3.00.a</target>
        </trans-unit>
        <trans-unit id="e1535ef03c493cb53a68569bcfbc3d27c8d57008" translate="yes" xml:space="preserve">
          <source>v4.00.b</source>
          <target state="translated">v4.00.b</target>
        </trans-unit>
        <trans-unit id="a49417317361dfc11070a84c5ad9b1655e1ebcbf" translate="yes" xml:space="preserve">
          <source>v5.00.a</source>
          <target state="translated">v5.00.a</target>
        </trans-unit>
        <trans-unit id="47a4fe76c59044b17abc60e1a32a07faee8c704a" translate="yes" xml:space="preserve">
          <source>v5.00.b</source>
          <target state="translated">v5.00.b</target>
        </trans-unit>
        <trans-unit id="803c5ce39075bf90fff623686ffd9e37635e0dd3" translate="yes" xml:space="preserve">
          <source>v6.00.a</source>
          <target state="translated">v6.00.a</target>
        </trans-unit>
        <trans-unit id="c9cf2ef3ad15705851d02c005b381171af921bd7" translate="yes" xml:space="preserve">
          <source>v7</source>
          <target state="translated">v7</target>
        </trans-unit>
        <trans-unit id="f2cbea7e89a45f46819777bb78a1f5bd0241f64c" translate="yes" xml:space="preserve">
          <source>v8</source>
          <target state="translated">v8</target>
        </trans-unit>
        <trans-unit id="a8c661e992ccbe35af1b9e500734de7eb1b7e633" translate="yes" xml:space="preserve">
          <source>v9</source>
          <target state="translated">v9</target>
        </trans-unit>
        <trans-unit id="60abb867de47426a8e6c2141273b784760b29067" translate="yes" xml:space="preserve">
          <source>v&lt;var&gt;X&lt;/var&gt;.&lt;var&gt;YY&lt;/var&gt;.&lt;var&gt;Z&lt;/var&gt;</source>
          <target state="translated">v&lt;var&gt;X&lt;/var&gt;.&lt;var&gt;YY&lt;/var&gt;.&lt;var&gt;Z&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="23a85aa16b1383e63516555f79898cf92c6cb6cb" translate="yes" xml:space="preserve">
          <source>va_arg (ap, void *)</source>
          <target state="translated">va_arg (ap,void *)</target>
        </trans-unit>
        <trans-unit id="e9bd149c7f77d0ce75eddaee481bc96b1a7e2795" translate="yes" xml:space="preserve">
          <source>vaes</source>
          <target state="translated">vaes</target>
        </trans-unit>
        <trans-unit id="39f69c278f46165447f30d10acf54277aaa3d5fc" translate="yes" xml:space="preserve">
          <source>val</source>
          <target state="translated">val</target>
        </trans-unit>
        <trans-unit id="3dffbaee37b0e0dc1203fac99a0be6cbfd5d09af" translate="yes" xml:space="preserve">
          <source>value of environment variable &lt;var&gt;VAR&lt;/var&gt;</source>
          <target state="translated">環境変数 &lt;var&gt;VAR&lt;/var&gt; の値</target>
        </trans-unit>
        <trans-unit id="3c058c680f97b51f5e2d1b17e162947607991fb0" translate="yes" xml:space="preserve">
          <source>value of the other parts (F&amp;mdash;all bits set)</source>
          <target state="translated">他の部分の値（F-すべてのビットセット）</target>
        </trans-unit>
        <trans-unit id="46712f04e3a594d3f7fb9d3d743f6cb27f758abc" translate="yes" xml:space="preserve">
          <source>value profile counter values difference: Some counter values for value profile are runtime dependent, like heap addresses. It&amp;rsquo;s normal to see some difference in these kind of counters.</source>
          <target state="translated">値プロファイルのカウンター値の違い：値プロファイルの一部のカウンター値は、ヒープアドレスのようにランタイムに依存します。これらの種類のカウンターに違いが見られるのは正常です。</target>
        </trans-unit>
        <trans-unit id="345c822266c73d960e7e049d7d44d3fac7c7ec19" translate="yes" xml:space="preserve">
          <source>value.</source>
          <target state="translated">value.</target>
        </trans-unit>
        <trans-unit id="7b80e9918a632d235fc6676b883823a647bb7b4a" translate="yes" xml:space="preserve">
          <source>value. Compiling with different values of &lt;var&gt;num&lt;/var&gt; may or may not work; if it doesn&amp;rsquo;t the linker gives an error message&amp;mdash;incorrect code is not generated.</source>
          <target state="translated">値。 &lt;var&gt;num&lt;/var&gt; の異なる値でコンパイルすると、機能する場合と機能しない場合があります。そうでない場合、リンカはエラーメッセージを表示します。不正なコードは生成されません。</target>
        </trans-unit>
        <trans-unit id="49bd83ae977ea8f493b8933e1ce0b0842c806310" translate="yes" xml:space="preserve">
          <source>vcrypto</source>
          <target state="translated">vcrypto</target>
        </trans-unit>
        <trans-unit id="b803e7ca5c714dbd85bf00d511fbc99a77690ad2" translate="yes" xml:space="preserve">
          <source>vec</source>
          <target state="translated">vec</target>
        </trans-unit>
        <trans-unit id="71a3656efb248ee678b7294feda650ae9b41003b" translate="yes" xml:space="preserve">
          <source>vec-div</source>
          <target state="translated">vec-div</target>
        </trans-unit>
        <trans-unit id="d93d0a7ebc8b48ccc78139d9016bc52c6cf1aa76" translate="yes" xml:space="preserve">
          <source>vec-sqrt</source>
          <target state="translated">vec-sqrt</target>
        </trans-unit>
        <trans-unit id="4dea40099c64d39d76006d4cee60063ce9ae2add" translate="yes" xml:space="preserve">
          <source>vec.miss</source>
          <target state="translated">vec.miss</target>
        </trans-unit>
        <trans-unit id="8db313297acc16ccd19cca7f97655d97a6fa69c1" translate="yes" xml:space="preserve">
          <source>vec_ld</source>
          <target state="translated">vec_ld</target>
        </trans-unit>
        <trans-unit id="9edbfd96506a2d39748cb2be9d1e8fb891d72255" translate="yes" xml:space="preserve">
          <source>vec_st</source>
          <target state="translated">vec_st</target>
        </trans-unit>
        <trans-unit id="1ffec2e3f3ddd6e27424842d25369db3741afc16" translate="yes" xml:space="preserve">
          <source>vec_vsx_ld</source>
          <target state="translated">vec_vsx_ld</target>
        </trans-unit>
        <trans-unit id="1ebcb466dd7e567e2a0f3063bdcb215f0b4ad02a" translate="yes" xml:space="preserve">
          <source>vec_vsx_st</source>
          <target state="translated">vec_vsx_st</target>
        </trans-unit>
        <trans-unit id="17b4c87d5d71da2a16de98ba1ec408541e0c8c90" translate="yes" xml:space="preserve">
          <source>vecintrin.h</source>
          <target state="translated">vecintrin.h</target>
        </trans-unit>
        <trans-unit id="027c1146b1b8f9274e5a4cfd7a959e328a326cd6" translate="yes" xml:space="preserve">
          <source>vector</source>
          <target state="translated">vector</target>
        </trans-unit>
        <trans-unit id="7291eb9f68564dac97af15a22b95d630dbe88f40" translate="yes" xml:space="preserve">
          <source>vectors</source>
          <target state="translated">vectors</target>
        </trans-unit>
        <trans-unit id="3f73a838273f8b6a5792b9b4f27d36e76a0078b9" translate="yes" xml:space="preserve">
          <source>verbose</source>
          <target state="translated">verbose</target>
        </trans-unit>
        <trans-unit id="dde688fc05bdc40ed8ef866f5c76ed405b6733f5" translate="yes" xml:space="preserve">
          <source>vfp</source>
          <target state="translated">vfp</target>
        </trans-unit>
        <trans-unit id="7d0124077057f5e72207ef47d7438ee3cd00cf49" translate="yes" xml:space="preserve">
          <source>vfpv2</source>
          <target state="translated">vfpv2</target>
        </trans-unit>
        <trans-unit id="dc883f5f65f79cba11fe610ffae3a86ebf62e3cc" translate="yes" xml:space="preserve">
          <source>vfpv3</source>
          <target state="translated">vfpv3</target>
        </trans-unit>
        <trans-unit id="89df9c2f1d8fbc5b6e56f192e621072797bef590" translate="yes" xml:space="preserve">
          <source>vfpv3-d16</source>
          <target state="translated">vfpv3-d16</target>
        </trans-unit>
        <trans-unit id="c38edb06def2f92e8c644e28198937c16e97dd3a" translate="yes" xml:space="preserve">
          <source>vfpv3-d16-fp16</source>
          <target state="translated">vfpv3-d16-fp16</target>
        </trans-unit>
        <trans-unit id="95b9c4da415d8b4ef57023b532e85591d384c9b3" translate="yes" xml:space="preserve">
          <source>vfpv3-fp16</source>
          <target state="translated">vfpv3-fp16</target>
        </trans-unit>
        <trans-unit id="4a8bccb696112b1acc60db60494c81c11f0826b0" translate="yes" xml:space="preserve">
          <source>vfpv3xd</source>
          <target state="translated">vfpv3xd</target>
        </trans-unit>
        <trans-unit id="a178630e9edefbf9b13b01350141c8354ddffd04" translate="yes" xml:space="preserve">
          <source>vfpv3xd-fp16</source>
          <target state="translated">vfpv3xd-fp16</target>
        </trans-unit>
        <trans-unit id="cb807de55cbf2253583831c7a9952511e1d1c1e9" translate="yes" xml:space="preserve">
          <source>vfpv4</source>
          <target state="translated">vfpv4</target>
        </trans-unit>
        <trans-unit id="4fcb4172253138f39c4d6ef73963e7b7b34b968e" translate="yes" xml:space="preserve">
          <source>vfpv4-d16</source>
          <target state="translated">vfpv4-d16</target>
        </trans-unit>
        <trans-unit id="a6c67a59fdf97980d1c2f48f9c131617b9db163b" translate="yes" xml:space="preserve">
          <source>void *</source>
          <target state="translated">空虚*</target>
        </trans-unit>
        <trans-unit id="91a39cc50fc761bc2c955d7546e91c3954863b37" translate="yes" xml:space="preserve">
          <source>vops</source>
          <target state="translated">vops</target>
        </trans-unit>
        <trans-unit id="8150b91109812eb9e0ab7335efe092fa34d688cf" translate="yes" xml:space="preserve">
          <source>vpclmulqdq</source>
          <target state="translated">vpclmulqdq</target>
        </trans-unit>
        <trans-unit id="54e88dfdee11a18f791b7188a9ffbcd1fdba30bd" translate="yes" xml:space="preserve">
          <source>vr</source>
          <target state="translated">vr</target>
        </trans-unit>
        <trans-unit id="d4e3e5cdfae67c1875fd23501db55fe4bcc6844c" translate="yes" xml:space="preserve">
          <source>vr4100</source>
          <target state="translated">vr4100</target>
        </trans-unit>
        <trans-unit id="84448206c2e0a69c5b9aaac3b79425cbf7b91aa1" translate="yes" xml:space="preserve">
          <source>vr4111</source>
          <target state="translated">vr4111</target>
        </trans-unit>
        <trans-unit id="0635226edf9851209ada6b4274e75e9717a2a206" translate="yes" xml:space="preserve">
          <source>vr4120</source>
          <target state="translated">vr4120</target>
        </trans-unit>
        <trans-unit id="026a66d6a97b24e99a0a20381249a68118d79615" translate="yes" xml:space="preserve">
          <source>vr4130</source>
          <target state="translated">vr4130</target>
        </trans-unit>
        <trans-unit id="7b88cf78bf386f70758dca1cb9ad8df1d37066e5" translate="yes" xml:space="preserve">
          <source>vr4300</source>
          <target state="translated">vr4300</target>
        </trans-unit>
        <trans-unit id="ad8783db6e9b9bb0a251f0675d07c4fe7a7e52fe" translate="yes" xml:space="preserve">
          <source>vr5000</source>
          <target state="translated">vr5000</target>
        </trans-unit>
        <trans-unit id="540c1e0fa838c055a396167b8c7c61fe39f1d53a" translate="yes" xml:space="preserve">
          <source>vr5400</source>
          <target state="translated">vr5400</target>
        </trans-unit>
        <trans-unit id="789efffdf3066d91d11db22ed0875478ac77675b" translate="yes" xml:space="preserve">
          <source>vr5500</source>
          <target state="translated">vr5500</target>
        </trans-unit>
        <trans-unit id="e304510a234a413f67c87b3d5b3cf80b0eae288d" translate="yes" xml:space="preserve">
          <source>vsx</source>
          <target state="translated">vsx</target>
        </trans-unit>
        <trans-unit id="8c5dcda77f668f752af6c29ba9c2dbcc3da9fb0a" translate="yes" xml:space="preserve">
          <source>vtv_class_set_sizes.log</source>
          <target state="translated">vtv_class_set_sizes.log</target>
        </trans-unit>
        <trans-unit id="af6e586385ab9f7a955d85df9b2c4fe02b14e73d" translate="yes" xml:space="preserve">
          <source>vtv_count_data.log</source>
          <target state="translated">vtv_count_data.log</target>
        </trans-unit>
        <trans-unit id="b16655c9042551cf6c94774e6c4ff9468b9e81f4" translate="yes" xml:space="preserve">
          <source>vtv_set_ptr_data.log</source>
          <target state="translated">vtv_set_ptr_data.log</target>
        </trans-unit>
        <trans-unit id="966032eab6276624119a49080934e3936d2976f7" translate="yes" xml:space="preserve">
          <source>vulcan</source>
          <target state="translated">vulcan</target>
        </trans-unit>
        <trans-unit id="7b2b701b95aa8a17285091170c8468169fde0790" translate="yes" xml:space="preserve">
          <source>vx</source>
          <target state="translated">vx</target>
        </trans-unit>
        <trans-unit id="aff024fe4ab0fece4091de044c58c9ae4233383a" translate="yes" xml:space="preserve">
          <source>w</source>
          <target state="translated">w</target>
        </trans-unit>
        <trans-unit id="29f0734fba51b9bc6910bfc4906a613ed88e1795" translate="yes" xml:space="preserve">
          <source>waitpkg</source>
          <target state="translated">waitpkg</target>
        </trans-unit>
        <trans-unit id="6bff24d12dff091f69bf6227c8f80a7f43414182" translate="yes" xml:space="preserve">
          <source>warn about all class types that are caught by value. With</source>
          <target state="translated">は、値に引っかかるすべてのクラス型について警告します。を使用しています。</target>
        </trans-unit>
        <trans-unit id="693ecb6a9bf1bc0c7200f9c980324b96b1709910" translate="yes" xml:space="preserve">
          <source>warn about all types that are not caught by reference.</source>
          <target state="translated">は、参照によって捕捉されないすべての型について警告します。</target>
        </trans-unit>
        <trans-unit id="12bca20efb4ff8c0a30b8489f4724bf2ba5a00e2" translate="yes" xml:space="preserve">
          <source>warn if the compiler makes such assumptions.</source>
          <target state="translated">コンパイラがそのような仮定をした場合に警告します。</target>
        </trans-unit>
        <trans-unit id="3bdc9d05ec8dc055f926a73da8ab446accb696e3" translate="yes" xml:space="preserve">
          <source>warn-dynamicstack</source>
          <target state="translated">warn-dynamicstack</target>
        </trans-unit>
        <trans-unit id="584745f9e3919adb577655dd998aa66a344b046d" translate="yes" xml:space="preserve">
          <source>warn-framesize=</source>
          <target state="translated">warn-framesize=</target>
        </trans-unit>
        <trans-unit id="383fd7bf84aa027bdc40159c5d7c5805664a8eb2" translate="yes" xml:space="preserve">
          <source>warning</source>
          <target state="translated">warning</target>
        </trans-unit>
        <trans-unit id="dbb53762fe11407d981e2fbd44eedff880e02473" translate="yes" xml:space="preserve">
          <source>warning for mismatches. To suppress a warning for the necessary cast from a pointer to the implementation member function to the type of the corresponding non-member function use the</source>
          <target state="translated">不一致に対する警告を抑制するためには、実装メンバ関数のポインタから対応する非メンバ関数の型への必要なキャストの警告を抑制するために 実装メンバ関数へのポインタから対応する非メンバ関数の型への必要なキャストに対する警告を抑制するには</target>
        </trans-unit>
        <trans-unit id="bf4065d5c360701885a0131cfeeb87efae1308f0" translate="yes" xml:space="preserve">
          <source>warning is enabled by</source>
          <target state="translated">警告は</target>
        </trans-unit>
        <trans-unit id="aaa8b14684e1a17d03eb422ffead96af9156353f" translate="yes" xml:space="preserve">
          <source>warning is enabled by default. To avoid the warning include the appropriate header to bring the prototypes of built-in functions into scope.</source>
          <target state="translated">警告はデフォルトで有効になっています。警告を回避するには、組み込み関数のプロトタイプをスコープに入れるための適切なヘッダを含めます。</target>
        </trans-unit>
        <trans-unit id="a9d07a9254eb30f9ababa0336f6640d159b849ab" translate="yes" xml:space="preserve">
          <source>warning must not trigger. The fallthrough attribute may appear at most once in each attribute list, and may not be mixed with other attributes. It can only be used in a switch statement (the compiler will issue an error otherwise), after a preceding statement and before a logically succeeding case label, or user-defined label.</source>
          <target state="translated">警告が発動してはならない。fallthrough 属性は、各属性リストの中で最大一度だけ出現することができ、他の属性と混合してはいけません。これは、switch文(そうでない場合、コンパイラはエラーを発行します)、先行する文の後、論理的に継承されるケース・ラベル、またはユーザ定義ラベルの前でのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="27428f8ab0fcd9cef55c146f1e6b10750dc2130b" translate="yes" xml:space="preserve">
          <source>warning of the variable-length array.</source>
          <target state="translated">可変長配列の警告</target>
        </trans-unit>
        <trans-unit id="9c8bfaaa339382d8195d3094c6bde13124c39a7a" translate="yes" xml:space="preserve">
          <source>warning should not be emitted:</source>
          <target state="translated">警告を発してはいけません。</target>
        </trans-unit>
        <trans-unit id="8cc36dc915dd9ed8f4f699c8029efe309df4fbda" translate="yes" xml:space="preserve">
          <source>warning using &lt;code&gt;[[fallthrough]];&lt;/code&gt; instead of the GNU attribute. In C++11 or C++14 users can use &lt;code&gt;[[gnu::fallthrough]];&lt;/code&gt;, which is a GNU extension. Instead of these attributes, it is also possible to add a fallthrough comment to silence the warning. The whole body of the C or C++ style comment should match the given regular expressions listed below. The option argument &lt;var&gt;n&lt;/var&gt; specifies what kind of comments are accepted:</source>
          <target state="translated">&lt;code&gt;[[fallthrough]];&lt;/code&gt; を使用した警告 GNU属性の代わりに。C ++ 11またはC ++ 14では、ユーザーは &lt;code&gt;[[gnu::fallthrough]];&lt;/code&gt; 使用できます。、これはGNU拡張です。これらの属性の代わりに、警告を止めるフォールスルーコメントを追加することもできます。CまたはC ++スタイルのコメント全体は、次に示す正規表現と一致する必要があります。オプション引数 &lt;var&gt;n&lt;/var&gt; は、受け付けられるコメントの種類を指定します。</target>
        </trans-unit>
        <trans-unit id="9f6be01127af67b499b57da0fae72ba37a45a9a4" translate="yes" xml:space="preserve">
          <source>warning.</source>
          <target state="translated">warning.</target>
        </trans-unit>
        <trans-unit id="4e3abe7d52b829dc6219de6cfa731a72895cce9c" translate="yes" xml:space="preserve">
          <source>warning:</source>
          <target state="translated">warning:</target>
        </trans-unit>
        <trans-unit id="5ad999ab8aef2776e77329475d94f4896683ce3e" translate="yes" xml:space="preserve">
          <source>warning: 'x' offset 12 in 'struct foo' isn't aligned to 8</source>
          <target state="translated">警告:'struct foo' の 'x' オフセット 12 が 8 に整列していません。</target>
        </trans-unit>
        <trans-unit id="6d93414fb6cfbe02c21db42e7b35acf56bb3b283" translate="yes" xml:space="preserve">
          <source>warning: 'x' offset 8 in 'struct foo' isn't aligned to 16</source>
          <target state="translated">警告:'struct foo' の 'x' オフセット 8 が 16 に整列していません。</target>
        </trans-unit>
        <trans-unit id="f1280772c266ce894b42a3a1e327828ba37c5aad" translate="yes" xml:space="preserve">
          <source>warning: alignment 4 of 'struct foo' is less than 8</source>
          <target state="translated">警告:'struct foo' のアラインメント 4 が 8 より小さい。</target>
        </trans-unit>
        <trans-unit id="ec3123a12b31d7cc81d919c714b250bf3bad05ac" translate="yes" xml:space="preserve">
          <source>warning: alignment 8 of 'struct foo' is less than 16</source>
          <target state="translated">警告:'struct foo' のアラインメント 8 が 16 より小さい。</target>
        </trans-unit>
        <trans-unit id="bd207fab08951eb6cee30e4969e79ca50d1f7c65" translate="yes" xml:space="preserve">
          <source>warnings</source>
          <target state="translated">warnings</target>
        </trans-unit>
        <trans-unit id="a62dac89b15d1538f641de43b89da17f7c0b2e0e" translate="yes" xml:space="preserve">
          <source>warnings and automatic tagging of functions and variables. Tagging inline namespaces is generally preferable to tagging individual declarations, but the latter is sometimes necessary, such as when only certain members of a class need to be tagged.</source>
          <target state="translated">警告や関数や変数の自動タグ付けも可能です。インラインの名前空間にタグを付けることは、一般的に個々の宣言にタグを付けるよりも望ましいですが、クラスの特定のメンバだけにタグを付ける必要がある場合など、後者が必要になることもあります。</target>
        </trans-unit>
        <trans-unit id="88fa5114978525e9b645ca3f5c9302d884a7ac25" translate="yes" xml:space="preserve">
          <source>warnings not be errors, even when</source>
          <target state="translated">警告はエラーではありません。</target>
        </trans-unit>
        <trans-unit id="db49c56cb5d2bfb133872d4bfc3588ee675331dd" translate="yes" xml:space="preserve">
          <source>warnings without this one, use</source>
          <target state="translated">これを使わずに警告を表示するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="8b53f1352f91f2442af91a6a1a5e976af595f67f" translate="yes" xml:space="preserve">
          <source>warnings, use &amp;lsquo;</source>
          <target state="translated">警告、「</target>
        </trans-unit>
        <trans-unit id="a2d0f44e764975442af162ae5f191c56e40fff82" translate="yes" xml:space="preserve">
          <source>warnings. The option is equivalent to</source>
          <target state="translated">警告を表示します。このオプションは</target>
        </trans-unit>
        <trans-unit id="fb1f4b32502228171ac659df8781be3651294f92" translate="yes" xml:space="preserve">
          <source>warns about C++ style &amp;lsquo;</source>
          <target state="translated">C ++スタイルについて警告する '</target>
        </trans-unit>
        <trans-unit id="da23f7e2ab350ffba198cf218e7e271a14335e21" translate="yes" xml:space="preserve">
          <source>warns about directives that traditional C understands but ignores because the &amp;lsquo;</source>
          <target state="translated">従来のCが理解するが無視するディレクティブについて警告する</target>
        </trans-unit>
        <trans-unit id="bada08ea60224035325c89285c43398414528823" translate="yes" xml:space="preserve">
          <source>warns about more things if an older ABI version is selected (with</source>
          <target state="translated">古い ABI バージョンが選択されている場合は、より多くのことを警告します (</target>
        </trans-unit>
        <trans-unit id="ccc1a565864bff761cdf60c2e48cdeb1dc7d2f0a" translate="yes" xml:space="preserve">
          <source>warns about places that might want to add a definition.</source>
          <target state="translated">定義を追加したくなるような場所について警告しています。</target>
        </trans-unit>
        <trans-unit id="6cf568dbc15536f2d496c596dab5a0bc628c51a6" translate="yes" xml:space="preserve">
          <source>warns about, but in future warnings may be added to</source>
          <target state="translated">について警告していますが、将来的には警告は</target>
        </trans-unit>
        <trans-unit id="36e6654e07e442de7df13dc89133dd33b7ed324a" translate="yes" xml:space="preserve">
          <source>warns only about C++ ABI compatibility problems if there is a check added later in a release series for an ABI issue discovered since the initial release.</source>
          <target state="translated">最初のリリース以降に発見された ABI 問題について、リリース シリーズの後に追加されたチェックがある場合にのみ、C++ABI 互換性の問題について警告が表示されます。</target>
        </trans-unit>
        <trans-unit id="bb0be8538afea2939eeb01fb3cd4ef7fabc4a9f4" translate="yes" xml:space="preserve">
          <source>warns when a function marked &lt;code&gt;inline&lt;/code&gt; could not be substituted, and gives the reason for the failure.</source>
          <target state="translated">&lt;code&gt;inline&lt;/code&gt; マークされた関数を置き換えることができなかった場合に警告し、失敗の理由を示します。</target>
        </trans-unit>
        <trans-unit id="2b5bad84b7ee4d84e9357d6ba4b6f8f3868ded3d" translate="yes" xml:space="preserve">
          <source>was built when the compiler was configured, these options have no effect.</source>
          <target state="translated">がコンパイラーの設定時にビルドされていた場合、これらのオプションは何の影響も受けません。</target>
        </trans-unit>
        <trans-unit id="acb7f296a719f44d619fadae2c95b2f36c207ccd" translate="yes" xml:space="preserve">
          <source>was built with</source>
          <target state="translated">をもって建てられた</target>
        </trans-unit>
        <trans-unit id="828b2c20772c47edc15b0da80e3cfa7def40d3d3" translate="yes" xml:space="preserve">
          <source>was used, a floating point register or NO_REGS.</source>
          <target state="translated">が使用されていた場合は、浮動小数点レジスタまたはNO_REGSが使用されていました。</target>
        </trans-unit>
        <trans-unit id="784b8074d8c86c9fabcf21528e4c9e47bcbc43f1" translate="yes" xml:space="preserve">
          <source>wbnoinvd</source>
          <target state="translated">wbnoinvd</target>
        </trans-unit>
        <trans-unit id="16d02e8ff56395107c97d1369ad02c5e2d8c6cd9" translate="yes" xml:space="preserve">
          <source>wchar.h</source>
          <target state="translated">wchar.h</target>
        </trans-unit>
        <trans-unit id="fcec733657f3fe2f2ce30eb4ed2f9d050ca3455d" translate="yes" xml:space="preserve">
          <source>we can check the costs or benefits of the GIMPLE -&amp;gt; GRAPHITE -&amp;gt; GIMPLE transformation. Some minimal optimizations are also performed by the code generator isl, like index splitting and dead code elimination in loops.</source>
          <target state="translated">GIMPLE-&amp;gt; GRAPHITE-&amp;gt; GIMPLE変換のコストまたは利点を確認できます。インデックス分割やループでのデッドコードの除去など、いくつかの最小限の最適化もコードジェネレーターislによって実行されます。</target>
        </trans-unit>
        <trans-unit id="e35fc317d7038a7c76856f2e6b376a805b3c3f15" translate="yes" xml:space="preserve">
          <source>westmere</source>
          <target state="translated">westmere</target>
        </trans-unit>
        <trans-unit id="752c518bfe91d35c090b1bfa01f1dbf45c9c5023" translate="yes" xml:space="preserve">
          <source>what lines of code are actually executed</source>
          <target state="translated">何行のコードが実際に実行されるか</target>
        </trans-unit>
        <trans-unit id="6bbc42cce24a785ca691b398116235fedf945b40" translate="yes" xml:space="preserve">
          <source>when a single object file accesses more than 64k&amp;rsquo;s worth of GOT entries. Very few do.</source>
          <target state="translated">単一のオブジェクトファイルが64k以上のGOTエントリにアクセスする場合。ごくわずかです。</target>
        </trans-unit>
        <trans-unit id="d3905554642a6aa600757f758cd6a4d22de0d685" translate="yes" xml:space="preserve">
          <source>when compiling a single object file that accesses more than 8192 GOT entries. Very few do.</source>
          <target state="translated">8192以上のGOTエントリにアクセスする単一のオブジェクトファイルをコンパイルするときに ほとんどありません。</target>
        </trans-unit>
        <trans-unit id="0514c2cdda62bbdf465cc25fd0411ece5521891a" translate="yes" xml:space="preserve">
          <source>when compiling files that don&amp;rsquo;t &amp;lsquo;</source>
          <target state="translated">しないファイルをコンパイルするとき</target>
        </trans-unit>
        <trans-unit id="89ac94171259920826326d388840acace52d003e" translate="yes" xml:space="preserve">
          <source>when inline heuristics hints that inlining is very profitable (will enable later optimizations).</source>
          <target state="translated">インライン・ヒューリスティックが、インライン化が非常に有益であることを示唆している場合(後の最適化が可能になる)。</target>
        </trans-unit>
        <trans-unit id="9fea24e7785433b650f36ab22b19b9480538dc03" translate="yes" xml:space="preserve">
          <source>when matching an option like</source>
          <target state="translated">のようなオプションにマッチした場合</target>
        </trans-unit>
        <trans-unit id="24074e8d69141f91cc32ea415bdba5149ac6039a" translate="yes" xml:space="preserve">
          <source>when running on the target system. This will fail if the corresponding directory does not exist and it is unable to create it. This can be overcome by, for example, setting the environment as &amp;lsquo;</source>
          <target state="translated">ターゲットシステムで実行しているとき。対応するディレクトリが存在せず、作成できない場合、これは失敗します。これは、たとえば、環境を「</target>
        </trans-unit>
        <trans-unit id="63cb443e16cc113469637f0db83395333bde56d4" translate="yes" xml:space="preserve">
          <source>when targeting a CPU supporting the architecture versions V8 or V9 with FPU except</source>
          <target state="translated">を除くFPUでアーキテクチャバージョンV8またはV9をサポートするCPUをターゲットにする場合</target>
        </trans-unit>
        <trans-unit id="02850b0f1c5f6694e7ec9881c34c5424aee4e4a3" translate="yes" xml:space="preserve">
          <source>when targeting a CPU that supports such an instruction, such as Niagara-2 and later.</source>
          <target state="translated">Niagara-2以降のような、そのような命令をサポートしているCPUをターゲットにしている場合は、そのような命令をサポートしていないCPUをターゲットにしています。</target>
        </trans-unit>
        <trans-unit id="ea057a56be62746ad34612238bf3f86b30a12f46" translate="yes" xml:space="preserve">
          <source>when targeting a CPU that supports such an instruction, such as Niagara-7 and later.</source>
          <target state="translated">Niagara-7以降のような、そのような命令をサポートしているCPUをターゲットにしている場合には</target>
        </trans-unit>
        <trans-unit id="ffbe2afb2561f071a8614860b3e8a5456dd324d7" translate="yes" xml:space="preserve">
          <source>when targeting a CPU that supports such instructions, such as Niagara-3 and later.</source>
          <target state="translated">Niagara-3以降のような、そのような命令をサポートしているCPUをターゲットにする場合には</target>
        </trans-unit>
        <trans-unit id="56c2867d207c7fc32220edbd16cf4ad7f30dbdbb" translate="yes" xml:space="preserve">
          <source>when targeting a CPU that supports such instructions, such as Niagara-4 and later.</source>
          <target state="translated">Niagara-4以降のような、そのような命令をサポートしているCPUをターゲットにしている場合には</target>
        </trans-unit>
        <trans-unit id="6bdf4ae9d43e3fbbce963adcaece62a32f742491" translate="yes" xml:space="preserve">
          <source>when targeting a cpu that supports such instructions, such as UltraSPARC-III and later. Setting</source>
          <target state="translated">UltraSPARC-III以降など、そのような命令をサポートしているCPUを対象とした場合。設定</target>
        </trans-unit>
        <trans-unit id="0809c7864e1b89748cbbced3e27471f0198d57e6" translate="yes" xml:space="preserve">
          <source>when targeting a cpu that supports such instructions, such as m8 and later. Setting</source>
          <target state="translated">m8以降など、そのような命令をサポートしているCPUを対象とした場合。設定</target>
        </trans-unit>
        <trans-unit id="294d672f8b0219c6a9a49817b6de51730746df25" translate="yes" xml:space="preserve">
          <source>when targeting a cpu that supports such instructions, such as niagara-3 and later. Setting</source>
          <target state="translated">niagara-3以降など、そのような命令をサポートしているCPUを対象とした場合。設定</target>
        </trans-unit>
        <trans-unit id="b13ea81cca1a1522bd93057afeea8b91e8adc72a" translate="yes" xml:space="preserve">
          <source>when targeting a cpu that supports such instructions, such as niagara-7 and later. Setting</source>
          <target state="translated">niagara-7以降など、そのような命令をサポートしているCPUを対象とする場合。設定</target>
        </trans-unit>
        <trans-unit id="07066641f72f4d9ee8cd2a5dea35a4871b310b8f" translate="yes" xml:space="preserve">
          <source>when testing pointer or floating-point values.</source>
          <target state="translated">ポインタや浮動小数点の値をテストする場合</target>
        </trans-unit>
        <trans-unit id="9fff53961d6e775c69232b0fbc9ae48f5c8704f7" translate="yes" xml:space="preserve">
          <source>when the iteration ends because there are no more objects to iterate over, &lt;code&gt;&lt;var&gt;object expression&lt;/var&gt;&lt;/code&gt; is set to &lt;code&gt;nil&lt;/code&gt;. This allows you to determine whether the iteration finished because a &lt;code&gt;break&lt;/code&gt; command was used (in which case &lt;code&gt;&lt;var&gt;object expression&lt;/var&gt;&lt;/code&gt; will remain set to the last object that was iterated over) or because it iterated over all the objects (in which case &lt;code&gt;&lt;var&gt;object expression&lt;/var&gt;&lt;/code&gt; will be set to &lt;code&gt;nil&lt;/code&gt;).</source>
          <target state="translated">反復するオブジェクトがなくなったために反復が終了すると、 &lt;code&gt;&lt;var&gt;object expression&lt;/var&gt;&lt;/code&gt; は &lt;code&gt;nil&lt;/code&gt; に設定されます。これにより、 &lt;code&gt;break&lt;/code&gt; コマンドが使用されたため（ &lt;code&gt;&lt;var&gt;object expression&lt;/var&gt;&lt;/code&gt; が反復された最後のオブジェクトに設定されたままになる）、またはすべてのオブジェクトに対して反復されたため（ &lt;code&gt;&lt;var&gt;object expression&lt;/var&gt;&lt;/code&gt; が設定される場合）、反復が終了したかどうかを判断できます。 &lt;code&gt;nil&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="18321fdc2e36afe706e0a07c547b97ca492b9d39" translate="yes" xml:space="preserve">
          <source>when the selected cpu supports the &amp;lsquo;</source>
          <target state="translated">選択したCPUが 'をサポートする場合</target>
        </trans-unit>
        <trans-unit id="ccdc2a9d509ebc7afae190c0f1c79168f2db280b" translate="yes" xml:space="preserve">
          <source>whenever you build a shared library or a main executable, because C++ programs typically use exceptions, so this is the right thing to do.</source>
          <target state="translated">共有ライブラリやメインの実行ファイルを構築するときはいつでも、C++プログラムは通常例外を使用するので、これは正しいことです。</target>
        </trans-unit>
        <trans-unit id="b907f2b3fd5ef77f0ce05428eca1f61a37dc4df3" translate="yes" xml:space="preserve">
          <source>where &amp;lsquo;</source>
          <target state="translated">どこ '</target>
        </trans-unit>
        <trans-unit id="ef8fffb5b1004bec80ffb58c6379910e377134da" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;&lt;var&gt;attr-string&lt;/var&gt;&lt;/code&gt; is one of the attribute strings specified above.</source>
          <target state="translated">どこ &lt;code&gt;&lt;var&gt;attr-string&lt;/var&gt;&lt;/code&gt; 文字列が上記の指定された属性の一つです。</target>
        </trans-unit>
        <trans-unit id="6fb6dcb904087947251d23383748fb884b54d96f" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;&lt;var&gt;string&lt;/var&gt;&lt;/code&gt; can be any string accepted as an AArch64 target attribute. See &lt;a href=&quot;aarch64-function-attributes#AArch64-Function-Attributes&quot;&gt;AArch64 Function Attributes&lt;/a&gt;, for more details on the permissible values of &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">どこ &lt;code&gt;&lt;var&gt;string&lt;/var&gt;&lt;/code&gt; AArch64対象の属性として受け入れられる任意の文字列を指定できます。 &lt;code&gt;string&lt;/code&gt; の許容値の詳細については、&lt;a href=&quot;aarch64-function-attributes#AArch64-Function-Attributes&quot;&gt;AArch64関数の属性を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3c9a631c6f260ee2794eb89e716bb201a11a1f18" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;NSFastEnumerationState&lt;/code&gt; must be defined in your code as follows:</source>
          <target state="translated">どこ &lt;code&gt;NSFastEnumerationState&lt;/code&gt; は、次のようにあなたのコードで定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="da79c8ec6a5eda3bdf516906605c4b52a53059ad" translate="yes" xml:space="preserve">
          <source>where &lt;var&gt;cpu&lt;/var&gt; is &lt;code&gt;ev67&lt;/code&gt; or later. They all generate the machine instruction that is part of the name.</source>
          <target state="translated">ここで、 &lt;var&gt;cpu&lt;/var&gt; は &lt;code&gt;ev67&lt;/code&gt; 以降です。それらはすべて、名前の一部である機械命令を生成します。</target>
        </trans-unit>
        <trans-unit id="934d3ed3df69be5aca01f4ade6b816a68a68d530" translate="yes" xml:space="preserve">
          <source>where &lt;var&gt;cpu&lt;/var&gt; is &lt;code&gt;pca56&lt;/code&gt; or later. They all generate the machine instruction that is part of the name.</source>
          <target state="translated">ここで、 &lt;var&gt;cpu&lt;/var&gt; は &lt;code&gt;pca56&lt;/code&gt; 以降です。それらはすべて、名前の一部である機械命令を生成します。</target>
        </trans-unit>
        <trans-unit id="aa6a4ef2c70b1142dd749133182c02d2017e1f3a" translate="yes" xml:space="preserve">
          <source>where &lt;var&gt;op&lt;/var&gt; is the name of the instruction. Refer to the ISA manual for the complete list of instructions.</source>
          <target state="translated">ここで、 &lt;var&gt;op&lt;/var&gt; は命令の名前です。手順の完全なリストについては、ISAのマニュアルを参照してください。</target>
        </trans-unit>
        <trans-unit id="185d7db6b76d8d4589a7db2b1c14e07ea90cf75f" translate="yes" xml:space="preserve">
          <source>where &lt;var&gt;prefix&lt;/var&gt; is the prefix to the installed compiler. In many cases &lt;var&gt;prefix&lt;/var&gt; is the value of &lt;code&gt;prefix&lt;/code&gt; when you ran the</source>
          <target state="translated">ここで、 &lt;var&gt;prefix&lt;/var&gt; はインストールされたコンパイラのプレフィックスです。多くの場合、 &lt;var&gt;prefix&lt;/var&gt; は実行したときの &lt;code&gt;prefix&lt;/code&gt; の値です</target>
        </trans-unit>
        <trans-unit id="0a59d4fc3bd963e5a889655930070f10cb8e1aa8" translate="yes" xml:space="preserve">
          <source>where CPU is &amp;lsquo;power8&amp;rsquo; or later. They all generate the machine instruction that is part of the name.</source>
          <target state="translated">ここで、CPUは 'power8'以降です。それらはすべて、名前の一部である機械命令を生成します。</target>
        </trans-unit>
        <trans-unit id="62a9b25faec871180fb0c25a498ec984ef375532" translate="yes" xml:space="preserve">
          <source>where CPU is &amp;lsquo;power8&amp;rsquo; or later. This interface is common between PowerPC and S/390, allowing users to write one HTM source implementation that can be compiled and executed on either system.</source>
          <target state="translated">ここで、CPUは 'power8'以降です。このインターフェイスはPowerPCとS / 390の間で共通であり、ユーザーはどちらのシステムでもコンパイルおよび実行できる1つのHTMソース実装を作成できます。</target>
        </trans-unit>
        <trans-unit id="989859d3b6cc7f4402e6321c4c469231127497b5" translate="yes" xml:space="preserve">
          <source>where applicable. This mode also sets</source>
          <target state="translated">を設定します。このモードでは</target>
        </trans-unit>
        <trans-unit id="2b2809549c32b0c553e765277da172b8d08d8efb" translate="yes" xml:space="preserve">
          <source>where in the last form, &lt;var&gt;asm-qualifiers&lt;/var&gt; contains &lt;code&gt;goto&lt;/code&gt; (and in the first form, not).</source>
          <target state="translated">最後の形式では、 &lt;var&gt;asm-qualifiers&lt;/var&gt; に &lt;code&gt;goto&lt;/code&gt; が含まれます（最初の形式では含まれません）。</target>
        </trans-unit>
        <trans-unit id="1739132defb1405029331b32f782f974adfa6945" translate="yes" xml:space="preserve">
          <source>where it is declared.</source>
          <target state="translated">が宣言されているところで</target>
        </trans-unit>
        <trans-unit id="875c30baac2072dde7bb1c8014ca1796ae5f099d" translate="yes" xml:space="preserve">
          <source>where the &lt;code&gt;note&lt;/code&gt; is a child of the &lt;code&gt;warning&lt;/code&gt;.</source>
          <target state="translated">ここで、 &lt;code&gt;note&lt;/code&gt; は &lt;code&gt;warning&lt;/code&gt; 子です。</target>
        </trans-unit>
        <trans-unit id="dd7d709f911a6dc91815d27e00faca76680e9d43" translate="yes" xml:space="preserve">
          <source>where the fix-it hint suggests replacing the text from &lt;code&gt;start&lt;/code&gt; up to but not including &lt;code&gt;next&lt;/code&gt; with &lt;code&gt;string&lt;/code&gt;&amp;rsquo;s value. Deletions are expressed via an empty value for &lt;code&gt;string&lt;/code&gt;, insertions by having &lt;code&gt;start&lt;/code&gt; equal &lt;code&gt;next&lt;/code&gt;.</source>
          <target state="translated">ここで、修正ヒントは、テキストを &lt;code&gt;start&lt;/code&gt; から最後まで置き換えることを提案しますが、 &lt;code&gt;next&lt;/code&gt; を含まずに &lt;code&gt;string&lt;/code&gt; の値で置き換えます。削除は、 &lt;code&gt;string&lt;/code&gt; の空の値、 &lt;code&gt;start&lt;/code&gt; が &lt;code&gt;next&lt;/code&gt; と等しいことによる挿入によって表現されます。</target>
        </trans-unit>
        <trans-unit id="07b2d65f2e0a46e317e109aa392f3d62aa66549c" translate="yes" xml:space="preserve">
          <source>where the value in &lt;var&gt;dest&lt;/var&gt; will be the result returned from the built-in.</source>
          <target state="translated">ここで、 &lt;var&gt;dest&lt;/var&gt; の値は組み込みから返された結果になります。</target>
        </trans-unit>
        <trans-unit id="85c2f66fab3d51484c9d1fe235a171be8f77437b" translate="yes" xml:space="preserve">
          <source>which `gcc -print-prog-name=ld`</source>
          <target state="translated">gcc -print-prog-name=ld` である。</target>
        </trans-unit>
        <trans-unit id="fd75e699ad0c3badfb9e4d8744252f962e9876a5" translate="yes" xml:space="preserve">
          <source>which cleans up per-thread exception-handling data.</source>
          <target state="translated">スレッドごとの例外処理データをクリーンアップします。</target>
        </trans-unit>
        <trans-unit id="b7a65e3e69a10cb3b229fed413be5750edd3db6c" translate="yes" xml:space="preserve">
          <source>which does not contain a processor reset vector handler. This is suitable for transferring control on a processor reset to the bootloader rather than the application.</source>
          <target state="translated">これは、プロセッサリセットベクタハンドラを含まないものです。これは、プロセッサリセットの制御をアプリケーションではなくブートローダに転送するのに適しています。</target>
        </trans-unit>
        <trans-unit id="d8e1a85e7b6651f532717e3d3bb99e3e6eb81147" translate="yes" xml:space="preserve">
          <source>which indicates how many times each line of a source file</source>
          <target state="translated">これは、ソースファイルの各行が何回目かを示します。</target>
        </trans-unit>
        <trans-unit id="df4e07514985cec84d046812f721f3df94eee5ef" translate="yes" xml:space="preserve">
          <source>which will cause a &lt;code&gt;NULL&lt;/code&gt; pointer to be used for the unsafe case.</source>
          <target state="translated">これにより、危険な場合に &lt;code&gt;NULL&lt;/code&gt; ポインタが使用されます。</target>
        </trans-unit>
        <trans-unit id="b2e72557ade65af451c7d7f6f0f18d03a88d82c2" translate="yes" xml:space="preserve">
          <source>whitespace</source>
          <target state="translated">whitespace</target>
        </trans-unit>
        <trans-unit id="aab2563a4afe176c80b016201bdd5365b8fe6d25" translate="yes" xml:space="preserve">
          <source>will always be false.</source>
          <target state="translated">は常に偽物になります。</target>
        </trans-unit>
        <trans-unit id="fac3e46886bb0c94c863c1f836d5cc22755b4c21" translate="yes" xml:space="preserve">
          <source>will cause a read of the volatile object pointed to by &lt;var&gt;src&lt;/var&gt; and store the value into the volatile object pointed to by &lt;var&gt;dst&lt;/var&gt;. There is no guarantee that these reads and writes are atomic, especially for objects larger than &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;src&lt;/var&gt; が指す揮発性オブジェクトを読み取り、 &lt;var&gt;dst&lt;/var&gt; が指す揮発性オブジェクトに値を格納します。特に &lt;code&gt;int&lt;/code&gt; よりも大きいオブジェクトの場合、これらの読み取りと書き込みがアトミックであるという保証はありません。</target>
        </trans-unit>
        <trans-unit id="aab4df65f2ed601275816d0e9536c397a1112ed9" translate="yes" xml:space="preserve">
          <source>will emit information on callsites that were inlined, along with callsites that were not inlined.</source>
          <target state="translated">は、インライン化されたコールサイトとインライン化されなかったコールサイトの情報を表示します。</target>
        </trans-unit>
        <trans-unit id="d2100e7e8507aac0629dc2711742ab58de771fb5" translate="yes" xml:space="preserve">
          <source>will increment &lt;code&gt;y&lt;/code&gt; unconditionally, not just when &lt;code&gt;c&lt;/code&gt; holds. The can usually be fixed by wrapping the macro in a do-while loop:</source>
          <target state="translated">&lt;code&gt;c&lt;/code&gt; が成立するときだけでなく、無条件に &lt;code&gt;y&lt;/code&gt; を増分します。通常、マクロをdo-whileループでラップすることで修正できます。</target>
        </trans-unit>
        <trans-unit id="69a2ad3933e9c77782d772b6e44eea15e78645ff" translate="yes" xml:space="preserve">
          <source>will instrument only</source>
          <target state="translated">ウィルインストゥルメントのみ</target>
        </trans-unit>
        <trans-unit id="967cfa97c2736dbc76374c630ea4b664a97f2d4e" translate="yes" xml:space="preserve">
          <source>will not emit a warning. Because their types are incompatible, if a programmer accidentally uses one in place of the other, type checking will catch that and emit an error or warning. So not warning (about shadowing) in this case will not lead to undetected bugs. Use of this flag instead of</source>
          <target state="translated">は警告を発しません。両者の型は互換性がないので、プログラマが誤って片方をもう片方の代わりに使ってしまった場合、型チェックはそれをキャッチしてエラーや警告を出します。そのため、この場合に (シャドウイングについての)警告を出さないことでバグが検出されないということはありません。このフラグを</target>
        </trans-unit>
        <trans-unit id="6a2d899c0e2855d00c682be640fe7c0ab0948f3c" translate="yes" xml:space="preserve">
          <source>will prevent instrumentation of all files that are located in</source>
          <target state="translated">にあるすべてのファイルのインストルメンテーションを防ぐことができます。</target>
        </trans-unit>
        <trans-unit id="823fe1b2f7d4ebcd4c5262c40d3e13ac8a99173f" translate="yes" xml:space="preserve">
          <source>will produce an output file called</source>
          <target state="translated">という出力ファイルを生成します。</target>
        </trans-unit>
        <trans-unit id="fd3c6b3bb03ea1810002e7f2e9e89c16e6bfab9e" translate="yes" xml:space="preserve">
          <source>will produce output &lt;code&gt;&quot;a&quot;&lt;/code&gt; regardless of what the argument &lt;var&gt;a&lt;/var&gt; is.</source>
          <target state="translated">引数 &lt;var&gt;a&lt;/var&gt; に関係なく、出力 &lt;code&gt;&quot;a&quot;&lt;/code&gt; を生成します。</target>
        </trans-unit>
        <trans-unit id="fd781ba095ea9625f154bbcf6df295db6a70cc39" translate="yes" xml:space="preserve">
          <source>will protect dynamic stack allocations.</source>
          <target state="translated">は動的なスタック割り当てを保護します。</target>
        </trans-unit>
        <trans-unit id="609ede2c7668f1d41b950db5c60a3855b5749217" translate="yes" xml:space="preserve">
          <source>will warn about more things if an older ABI version is selected (with</source>
          <target state="translated">は、古い ABI バージョンが選択されている場合には、より多くのことを警告します (</target>
        </trans-unit>
        <trans-unit id="e8fe8f2b0f3f5297c69dc78e235ff1ec08ad9e93" translate="yes" xml:space="preserve">
          <source>will warn only if there is a check added later in a release series for an ABI issue discovered since the initial release.</source>
          <target state="translated">は、最初のリリース以降に発見されたABIの問題に対して、リリースシリーズで後から追加されたチェックがある場合にのみ警告します。</target>
        </trans-unit>
        <trans-unit id="060138cd79436c2f5960cca89ee1066b0b239b07" translate="yes" xml:space="preserve">
          <source>winchip-c6</source>
          <target state="translated">winchip-c6</target>
        </trans-unit>
        <trans-unit id="b2423e1c42ea73b138534f49e35557ea211f42f8" translate="yes" xml:space="preserve">
          <source>winchip2</source>
          <target state="translated">winchip2</target>
        </trans-unit>
        <trans-unit id="8fcd25a39d2037183044a8897e9a5333d727fded" translate="yes" xml:space="preserve">
          <source>with</source>
          <target state="translated">with</target>
        </trans-unit>
        <trans-unit id="6551a5d074e9f2b6de875b47bf86000c9a340abe" translate="yes" xml:space="preserve">
          <source>with &amp;ldquo;runtime-linking&amp;rdquo; enabled on AIX. To accomplish this the application must be linked with &amp;ldquo;runtime-linking&amp;rdquo; option and the functions explicitly must be exported by the application (</source>
          <target state="translated">AIXで「ランタイムリンク」が有効になっている。これを実現するには、アプリケーションを「ランタイムリンク」オプションでリンクする必要があり、関数をアプリケーションで明示的にエクスポートする必要があります（</target>
        </trans-unit>
        <trans-unit id="93d9f2279cd7fe66976d7c274d4aa2ec3a6cf6f7" translate="yes" xml:space="preserve">
          <source>with GCC</source>
          <target state="translated">ジーシーシー</target>
        </trans-unit>
        <trans-unit id="31055ad4e0d473fd782c78a366be8a0fb7b94985" translate="yes" xml:space="preserve">
          <source>with no modifications. However, this means that calls to &lt;code&gt;extern&lt;/code&gt; functions with no explicit visibility use the PLT, so it is more effective to use &lt;code&gt;__attribute ((visibility))&lt;/code&gt; and/or &lt;code&gt;#pragma GCC visibility&lt;/code&gt; to tell the compiler which &lt;code&gt;extern&lt;/code&gt; declarations should be treated as hidden.</source>
          <target state="translated">変更なし。ただし、これは、明示的な可視性を持たない &lt;code&gt;extern&lt;/code&gt; 関数の呼び出しがPLTを使用することを意味するため、 &lt;code&gt;__attribute ((visibility))&lt;/code&gt; または &lt;code&gt;#pragma GCC visibility&lt;/code&gt; を使用して、どの &lt;code&gt;extern&lt;/code&gt; 宣言を非表示として扱うかをコンパイラーに指示する方が効果的です。</target>
        </trans-unit>
        <trans-unit id="5db39c1cf0be124606287081098976c6f211f749" translate="yes" xml:space="preserve">
          <source>with that compiled with</source>
          <target state="translated">でコンパイルされたものと</target>
        </trans-unit>
        <trans-unit id="a1d10d07240bf646aaaee33f9d07cd663e7534c1" translate="yes" xml:space="preserve">
          <source>with this option causes the stack frames not to be generated for leaf functions. The default is</source>
          <target state="translated">このオプションを指定すると、リーフ関数のスタックフレームが生成されなくなります。デフォルトは</target>
        </trans-unit>
        <trans-unit id="0d4e654c613ea68bffeeab1587b7dbac44826c2b" translate="yes" xml:space="preserve">
          <source>without</source>
          <target state="translated">without</target>
        </trans-unit>
        <trans-unit id="b004720bc74b0e877d5b63e14fbae0eb6e27a8a6" translate="yes" xml:space="preserve">
          <source>without GNU extensions, this option disables the warnings about non-ISO &lt;code&gt;printf&lt;/code&gt; / &lt;code&gt;scanf&lt;/code&gt; format width specifiers &lt;code&gt;I32&lt;/code&gt;, &lt;code&gt;I64&lt;/code&gt;, and &lt;code&gt;I&lt;/code&gt; used on Windows targets, which depend on the MS runtime.</source>
          <target state="translated">GNU拡張せずに、このオプションは非ISOに関する警告無効 &lt;code&gt;printf&lt;/code&gt; / &lt;code&gt;scanf&lt;/code&gt; 関数の書式幅指定子 &lt;code&gt;I32&lt;/code&gt; 、 &lt;code&gt;I64&lt;/code&gt; を、と &lt;code&gt;I&lt;/code&gt; MSのランタイムに依存Windowsターゲット上で使用しました。</target>
        </trans-unit>
        <trans-unit id="4acc1ef725b8bf7ee0b0027091401dfd374ab5e6" translate="yes" xml:space="preserve">
          <source>without a definition of the corresponding sized deallocation function</source>
          <target state="translated">対応するサイズ解放関数の定義なしで</target>
        </trans-unit>
        <trans-unit id="7bccc0c70333b1fe814bc1edf7d7e782e61540f9" translate="yes" xml:space="preserve">
          <source>without a value is equivalent to</source>
          <target state="translated">値のないものは</target>
        </trans-unit>
        <trans-unit id="74dc654508f2be6d8a17cfaf23b537e2ed769a54" translate="yes" xml:space="preserve">
          <source>without the</source>
          <target state="translated">なしで</target>
        </trans-unit>
        <trans-unit id="0caa61fc679a081b699e5cd92215ea3b0f7e7cc7" translate="yes" xml:space="preserve">
          <source>wlh1</source>
          <target state="translated">wlh1</target>
        </trans-unit>
        <trans-unit id="890ef7c8ed82c3215c9303c0d403743c8c05d138" translate="yes" xml:space="preserve">
          <source>wlh2</source>
          <target state="translated">wlh2</target>
        </trans-unit>
        <trans-unit id="acf1d40a0eda46e01422be875a4de39774a89cc7" translate="yes" xml:space="preserve">
          <source>wlh3</source>
          <target state="translated">wlh3</target>
        </trans-unit>
        <trans-unit id="5c510cfe14bdb19c4efa584442605681c7e54b88" translate="yes" xml:space="preserve">
          <source>wlh4</source>
          <target state="translated">wlh4</target>
        </trans-unit>
        <trans-unit id="1f79be8859a3bfe9a5f2a27211bb7a6b4cd49507" translate="yes" xml:space="preserve">
          <source>wlh5</source>
          <target state="translated">wlh5</target>
        </trans-unit>
        <trans-unit id="bd58e6e5347e0a628bb23814c68b550a7f5f5967" translate="yes" xml:space="preserve">
          <source>works.</source>
          <target state="translated">works.</target>
        </trans-unit>
        <trans-unit id="930dfdf50a38cffe1aaafd50b329d4679ad60cb8" translate="yes" xml:space="preserve">
          <source>would.</source>
          <target state="translated">would.</target>
        </trans-unit>
        <trans-unit id="91bc73521dab9ad48d9aed0a4097fcbb2622a6df" translate="yes" xml:space="preserve">
          <source>would;</source>
          <target state="translated">would;</target>
        </trans-unit>
        <trans-unit id="11f6ad8ec52a2984abaafd7c3b516503785c2072" translate="yes" xml:space="preserve">
          <source>x</source>
          <target state="translated">x</target>
        </trans-unit>
        <trans-unit id="2dec0dbbcd1cefc3691c074a2476fe22c7dd8377" translate="yes" xml:space="preserve">
          <source>x.h</source>
          <target state="translated">x.h</target>
        </trans-unit>
        <trans-unit id="8ca163357a3d0c02eff5411e88822a14b08360f4" translate="yes" xml:space="preserve">
          <source>x.h.gcov</source>
          <target state="translated">x.h.gcov</target>
        </trans-unit>
        <trans-unit id="aa537e4edb98dba7159007da6f7236df94bb66d1" translate="yes" xml:space="preserve">
          <source>x86 family</source>
          <target state="translated">エックスオーエルファミリー</target>
        </trans-unit>
        <trans-unit id="8f00c32794f892f009a315b2fcb8dd9c57049273" translate="yes" xml:space="preserve">
          <source>x86 family&amp;mdash;</source>
          <target state="translated">x86ファミリー&amp;mdash;</target>
        </trans-unit>
        <trans-unit id="e46e7b9d8a19e6223647ce2f12f22a12cd89e32a" translate="yes" xml:space="preserve">
          <source>x86 memory models.</source>
          <target state="translated">x86メモリモデル。</target>
        </trans-unit>
        <trans-unit id="a32491d370d9040539f102558a8fd28759213f1a" translate="yes" xml:space="preserve">
          <source>x86-64</source>
          <target state="translated">x86-64</target>
        </trans-unit>
        <trans-unit id="1ed70c2c3ec28a9db1af7ec4f36b2b2d4262c3aa" translate="yes" xml:space="preserve">
          <source>xgene1</source>
          <target state="translated">xgene1</target>
        </trans-unit>
        <trans-unit id="f32b97ff9b948e52cfb974eb02c93a5793ab8cf5" translate="yes" xml:space="preserve">
          <source>xlen</source>
          <target state="translated">xlen</target>
        </trans-unit>
        <trans-unit id="5e0717c1d041821f6e3518a19013f19a879eceb6" translate="yes" xml:space="preserve">
          <source>xlp</source>
          <target state="translated">xlp</target>
        </trans-unit>
        <trans-unit id="db0cc3e07e8aba09a5ebcddbf9330e1b59294833" translate="yes" xml:space="preserve">
          <source>xlr</source>
          <target state="translated">xlr</target>
        </trans-unit>
        <trans-unit id="2ecbb4a3899bfbbb11310ee04e4d367c66b6d5bf" translate="yes" xml:space="preserve">
          <source>xmdstub</source>
          <target state="translated">xmdstub</target>
        </trans-unit>
        <trans-unit id="62bd1bf1a5a78069634cfe24a69e32060a82909c" translate="yes" xml:space="preserve">
          <source>xop</source>
          <target state="translated">xop</target>
        </trans-unit>
        <trans-unit id="1ecc1f9c663392dabaf34d7ce975b69359d27777" translate="yes" xml:space="preserve">
          <source>xsave</source>
          <target state="translated">xsave</target>
        </trans-unit>
        <trans-unit id="66ddb955748bd23e30b48282085b2ec28eb3e062" translate="yes" xml:space="preserve">
          <source>xsavec</source>
          <target state="translated">xsavec</target>
        </trans-unit>
        <trans-unit id="03137c2287e4d60fc847bc1d8d2f4408f084b5b2" translate="yes" xml:space="preserve">
          <source>xsaveopt</source>
          <target state="translated">xsaveopt</target>
        </trans-unit>
        <trans-unit id="4a9dae36cc01821f529703396a8f7f7cdfff6ff8" translate="yes" xml:space="preserve">
          <source>xsaves</source>
          <target state="translated">xsaves</target>
        </trans-unit>
        <trans-unit id="de6261aaec991553f4743887b0cf47bdbc765e92" translate="yes" xml:space="preserve">
          <source>xscale</source>
          <target state="translated">xscale</target>
        </trans-unit>
        <trans-unit id="03d91bcde0be574d8ad7932ccfc7bed4523b5201" translate="yes" xml:space="preserve">
          <source>xxx.ld</source>
          <target state="translated">xxx.ld</target>
        </trans-unit>
        <trans-unit id="493de3004107b3be319c53c12bf7feeb78e3e7c3" translate="yes" xml:space="preserve">
          <source>you can allocate and send messages to objects whose class is implemented in the same file;</source>
          <target state="translated">を使用すると、同じファイルに実装されているクラスのオブジェクトにメッセージを割り当てて送信することができます。</target>
        </trans-unit>
        <trans-unit id="c424b63b1af4b4a8b07be26da713a0bd443e311e" translate="yes" xml:space="preserve">
          <source>you can write whatever C code you like;</source>
          <target state="translated">は、好きなC言語のコードを書くことができます。</target>
        </trans-unit>
        <trans-unit id="f526a24758e7c523c040024e8dc30f9d0917fc84" translate="yes" xml:space="preserve">
          <source>you must use the &lt;code&gt;volatile&lt;/code&gt; keyword to protect memory accesses, but that can lead to inefficient code in places where the memory is known to not change. Rather than mark the memory as volatile, you can use</source>
          <target state="translated">&lt;code&gt;volatile&lt;/code&gt; キーワードを使用してメモリアクセスを保護する必要がありますが、メモリが変更されないことがわかっている場所ではコードが非効率になる可能性があります。メモリを揮発性としてマークするのではなく、</target>
        </trans-unit>
        <trans-unit id="5289cd0f4e3bb253d37e80abcea8fa0446280a0d" translate="yes" xml:space="preserve">
          <source>you should usually specify</source>
          <target state="translated">を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="395df8f7c51f007019cb30201c49e884b46b92fa" translate="yes" xml:space="preserve">
          <source>z</source>
          <target state="translated">z</target>
        </trans-unit>
        <trans-unit id="c63e153fcf77300b25d6f37429567f6aef4be84c" translate="yes" xml:space="preserve">
          <source>z-compile</source>
          <target state="translated">z-compile</target>
        </trans-unit>
        <trans-unit id="23becd3485cdfbc174e240585214d594810ab41f" translate="yes" xml:space="preserve">
          <source>z10</source>
          <target state="translated">z10</target>
        </trans-unit>
        <trans-unit id="84d066d3535d7eae7a3e568c9f02785a883c8121" translate="yes" xml:space="preserve">
          <source>z13</source>
          <target state="translated">z13</target>
        </trans-unit>
        <trans-unit id="e9f897ed6b12f55607705a9de41c735382fc8cc5" translate="yes" xml:space="preserve">
          <source>z14</source>
          <target state="translated">z14</target>
        </trans-unit>
        <trans-unit id="0de00214616bb5619bcae0c5c2ba4e7b53ad598f" translate="yes" xml:space="preserve">
          <source>z196</source>
          <target state="translated">z196</target>
        </trans-unit>
        <trans-unit id="3ffd64966cfdd092779cb0c9219e932f20436938" translate="yes" xml:space="preserve">
          <source>z9-109</source>
          <target state="translated">z9-109</target>
        </trans-unit>
        <trans-unit id="c3c2d7210e6ef64a2392cad75d9f052ed4a0a822" translate="yes" xml:space="preserve">
          <source>z9-ec</source>
          <target state="translated">z9-ec</target>
        </trans-unit>
        <trans-unit id="9cd0c3c7b39f86588b1f9b64ce8625ad01155fb1" translate="yes" xml:space="preserve">
          <source>z900</source>
          <target state="translated">z900</target>
        </trans-unit>
        <trans-unit id="0bcece1cb7bc5d066ae58781f4c619d9c7575c8c" translate="yes" xml:space="preserve">
          <source>z990</source>
          <target state="translated">z990</target>
        </trans-unit>
        <trans-unit id="25d8dbd2b240f5e523a20e8e7bd869d85f3305e8" translate="yes" xml:space="preserve">
          <source>zEC12</source>
          <target state="translated">zEC12</target>
        </trans-unit>
        <trans-unit id="fc58d173ddb3c6636e00ec1f54b83e9467c2ffbe" translate="yes" xml:space="preserve">
          <source>zeus</source>
          <target state="translated">zeus</target>
        </trans-unit>
        <trans-unit id="57968f12798767ae5da8b15a0c383ad79d0f338b" translate="yes" xml:space="preserve">
          <source>zlib</source>
          <target state="translated">zlib</target>
        </trans-unit>
        <trans-unit id="0ba688f3453ae35da97fe5769b775e519015bd2f" translate="yes" xml:space="preserve">
          <source>zlib-gnu</source>
          <target state="translated">zlib-gnu</target>
        </trans-unit>
        <trans-unit id="ecc8d6981885740a4a0f47b205c380898e5305e3" translate="yes" xml:space="preserve">
          <source>znver1</source>
          <target state="translated">znver1</target>
        </trans-unit>
        <trans-unit id="c79c855752f30d421158a18047e5fdd2d77a8d91" translate="yes" xml:space="preserve">
          <source>znver2</source>
          <target state="translated">znver2</target>
        </trans-unit>
        <trans-unit id="4ad80eb83ac1d2452acbd0fe0fec839ec48d8254" translate="yes" xml:space="preserve">
          <source>zvector</source>
          <target state="translated">zvector</target>
        </trans-unit>
        <trans-unit id="33c233e6855bc005c19c8ccce05ec5bd9d7c7005" translate="yes" xml:space="preserve">
          <source>{ 0 }</source>
          <target state="translated">{0}</target>
        </trans-unit>
        <trans-unit id="4448e1dbcb7f6e8f55f2f5b257a1169d8c4db209" translate="yes" xml:space="preserve">
          <source>{ }</source>
          <target state="translated">{}</target>
        </trans-unit>
        <trans-unit id="c6dc94a8a279e248f98da82818c5985dad757cf1" translate="yes" xml:space="preserve">
          <source>{&lt;code&gt;upper,either,none&lt;/code&gt;} has been passed, or the &lt;code&gt;section&lt;/code&gt; attribute is applied to a variable, the compiler will generate 430X instructions to handle it. This is because the compiler has to assume that the variable could get placed in the upper memory region (above address 0xFFFF). Marking the variable with the &lt;code&gt;lower&lt;/code&gt; attribute informs the compiler that the variable will be placed in lower memory so it is safe to use 430 instructions to handle it.</source>
          <target state="translated">{ &lt;code&gt;upper,either,none&lt;/code&gt; ether 、none }が渡されたか、 &lt;code&gt;section&lt;/code&gt; 属性が変数に適用された場合、コンパイラーはそれを処理するために430X命令を生成します。これは、コンパイラが変数が上位メモリ領域（アドレス0xFFFFより上）に配置される可能性があると想定する必要があるためです。変数に &lt;code&gt;lower&lt;/code&gt; 属性をマークすると、変数が下位メモリに配置されることがコンパイラに通知されるため、430命令を使用して安全に処理できます。</target>
        </trans-unit>
        <trans-unit id="3eb416223e9e69e6bb8ee19793911ad1ad2027d8" translate="yes" xml:space="preserve">
          <source>|</source>
          <target state="translated">|</target>
        </trans-unit>
        <trans-unit id="fb3c6e4de85bd9eae26fdc63e75f10a7f39e850e" translate="yes" xml:space="preserve">
          <source>~</source>
          <target state="translated">~</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
