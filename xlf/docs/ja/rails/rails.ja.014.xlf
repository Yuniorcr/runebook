<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="rails">
    <body>
      <group id="rails">
        <trans-unit id="82a3df5495a0e4593c653bd591c7c511a7b817c7" translate="yes" xml:space="preserve">
          <source>Formats a number with grouped thousands using a delimiter.</source>
          <target state="translated">区切り文字を使用して千単位のグループ化された数値をフォーマットします。</target>
        </trans-unit>
        <trans-unit id="ab1dc7b44eb9c0739c906e2f69738f3f9c8c1831" translate="yes" xml:space="preserve">
          <source>Formats a number with the specified level of &lt;code&gt;precision&lt;/code&gt;, which defaults to 3.</source>
          <target state="translated">指定した &lt;code&gt;precision&lt;/code&gt; レベルで数値をフォーマットします。デフォルトは3です。</target>
        </trans-unit>
        <trans-unit id="4a0043ae4298b3d06a5fd43ce48d3a38c30d51a9" translate="yes" xml:space="preserve">
          <source>Formats can have different variants.</source>
          <target state="translated">フォーマットは異なるバリエーションを持つことができます。</target>
        </trans-unit>
        <trans-unit id="2024cef70fb0a98806925e274f8d83974875ed4d" translate="yes" xml:space="preserve">
          <source>Formats the bytes in &lt;code&gt;number&lt;/code&gt; into a more understandable representation (e.g., giving it 1500 yields 1.46 KB). This method is useful for reporting file sizes to users. You can customize the format in the &lt;code&gt;options&lt;/code&gt; hash.</source>
          <target state="translated">&lt;code&gt;number&lt;/code&gt; のバイトをより理解しやすい表現にフォーマットします（たとえば、1500を与えると1.46 KBになります）。この方法は、ファイルサイズをユーザーに報告する場合に役立ちます。 &lt;code&gt;options&lt;/code&gt; ハッシュでフォーマットをカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="0b71df31a450decc3e21d4d1a881a5419c397de3" translate="yes" xml:space="preserve">
          <source>Formats the bytes in &lt;code&gt;number&lt;/code&gt; into a more understandable representation (e.g., giving it 1500 yields 1.5 KB). This method is useful for reporting file sizes to users. You can customize the format in the &lt;code&gt;options&lt;/code&gt; hash.</source>
          <target state="translated">&lt;code&gt;number&lt;/code&gt; のバイトをより理解しやすい表現にフォーマットします（たとえば、1500を指定すると1.5 KBになります）。この方法は、ファイルサイズをユーザーに報告する場合に役立ちます。 &lt;code&gt;options&lt;/code&gt; ハッシュでフォーマットをカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="47e31cad204330e5149984c1f02df1ca22623437" translate="yes" xml:space="preserve">
          <source>Formats the bytes in size into a more understandable representation; useful for reporting file sizes to users.</source>
          <target state="translated">サイズのバイト数をよりわかりやすい表現にフォーマットします。</target>
        </trans-unit>
        <trans-unit id="84e4b7202eead25ba9651b37a636710a33bceccd" translate="yes" xml:space="preserve">
          <source>FormattedTimeHelper can now be included in a controller, using the &lt;code&gt;helper&lt;/code&gt; class method:</source>
          <target state="translated">&lt;code&gt;helper&lt;/code&gt; クラスメソッドを使用して、FormattedTimeHelperをコントローラーに含めることができるようになりました。</target>
        </trans-unit>
        <trans-unit id="841f832857c780b47f478b4f21d34d8995af64b8" translate="yes" xml:space="preserve">
          <source>Formatting</source>
          <target state="translated">Formatting</target>
        </trans-unit>
        <trans-unit id="d2d0b53605534cb79c7080321525715bc8776216" translate="yes" xml:space="preserve">
          <source>Formatting dates, strings and numbers</source>
          <target state="translated">日付、文字列、数字の書式設定</target>
        </trans-unit>
        <trans-unit id="b6064d8c0fdc370c16d0cb1decb7c2f4d2f48bd3" translate="yes" xml:space="preserve">
          <source>Forms in web applications are an essential interface for user input. However, form markup can quickly become tedious to write and maintain because of the need to handle form control naming and its numerous attributes. Rails does away with this complexity by providing view helpers for generating form markup. However, since these helpers have different use cases, developers need to know the differences between the helper methods before putting them to use.</source>
          <target state="translated">ウェブアプリケーションのフォームは、ユーザー入力のための不可欠なインターフェイスです。しかし、フォームのマークアップは、フォームコントロールの命名とその多数の属性を処理する必要があるため、すぐに書いて維持するのが面倒になることがあります。Railsは、フォームマークアップを生成するためのビューヘルパーを提供することで、この複雑さを解消しています。しかし、これらのヘルパーにはそれぞれ異なるユースケースがあるため、開発者はヘルパーを使用する前にヘルパーメソッドの違いを知っておく必要があります。</target>
        </trans-unit>
        <trans-unit id="18f90dadb540b75dfd7fe49aa813e22e9fe5c574" translate="yes" xml:space="preserve">
          <source>Forms to External Resources</source>
          <target state="translated">フォームから外部リソースへ</target>
        </trans-unit>
        <trans-unit id="51872412424b5b001a8994daa52aa0433211c5d1" translate="yes" xml:space="preserve">
          <source>Forward all undefined methods to the wrapped string.</source>
          <target state="translated">未定義のメソッドをすべてラップされた文字列に転送します。</target>
        </trans-unit>
        <trans-unit id="d87f1def6b27d559cd70ef16104a21f1b6656c0f" translate="yes" xml:space="preserve">
          <source>Fragment Caching</source>
          <target state="translated">フラグメントキャッシング</target>
        </trans-unit>
        <trans-unit id="77f60731ecb1db88f599e05d5ae64dbc1c05c6e1" translate="yes" xml:space="preserve">
          <source>Fragment Caching allows a fragment of view logic to be wrapped in a cache block and served out of the cache store when the next request comes in.</source>
          <target state="translated">フラグメントキャッシュでは、ビューロジックのフラグメントをキャッシュブロックにラップして、次のリクエストが来たときにキャッシュストアから提供することができます。</target>
        </trans-unit>
        <trans-unit id="4e1a67c93949462da2d64d588540c2e8bf396eca" translate="yes" xml:space="preserve">
          <source>Fragment and Russian doll caching.</source>
          <target state="translated">フラグメントとロシア人形のキャッシング</target>
        </trans-unit>
        <trans-unit id="65687f1a127f7a349e21ea3b95524aae25478c49" translate="yes" xml:space="preserve">
          <source>Fragment caching is also supported in multipart emails. Read more about caching in the &lt;a href=&quot;caching_with_rails&quot;&gt;Rails caching guide&lt;/a&gt;.</source>
          <target state="translated">フラグメントキャッシングは、マルチパート電子メールでもサポートされています。&lt;a href=&quot;caching_with_rails&quot;&gt;Railsキャッシングガイドで&lt;/a&gt;キャッシングの詳細を読んでください。</target>
        </trans-unit>
        <trans-unit id="70b9e0cf1a09276d004b17f348c6419ca692a23b" translate="yes" xml:space="preserve">
          <source>Fragment caching is used for caching various blocks within views without caching the entire action as a whole. This is useful when certain elements of an action change frequently or depend on complicated state while other parts rarely change or can be shared amongst multiple parties. The caching is done using the &lt;code&gt;cache&lt;/code&gt; helper available in the Action View. See &lt;a href=&quot;../../actionview/helpers/cachehelper&quot;&gt;&lt;code&gt;ActionView::Helpers::CacheHelper&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">フラグメントキャッシュは、アクション全体をキャッシュせずに、ビュー内のさまざまなブロックをキャッシュするために使用されます。これは、アクションの特定の要素が頻繁に変更されるか、複雑な状態に依存し、他の部分がめったに変更されないか、複数の関係者間で共有できる場合に役立ちます。キャッシュは、アクションビューで使用可能な &lt;code&gt;cache&lt;/code&gt; ヘルパーを使用して実行されます。詳細については、&lt;a href=&quot;../../actionview/helpers/cachehelper&quot;&gt; &lt;code&gt;ActionView::Helpers::CacheHelper&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="2a87156e114f876662714fbdca15c43e39c59af1" translate="yes" xml:space="preserve">
          <source>Fragment caching is used for caching various blocks within views without caching the entire action as a whole. This is useful when certain elements of an action change frequently or depend on complicated state while other parts rarely change or can be shared amongst multiple parties. The caching is done using the &lt;code&gt;cache&lt;/code&gt; helper available in the Action View. See &lt;a href=&quot;../../actionview/helpers/cachehelper&quot;&gt;ActionView::Helpers::CacheHelper&lt;/a&gt; for more information.</source>
          <target state="translated">フラグメントキャッシングは、アクション全体をキャッシュするのではなく、ビュー内のさまざまなブロックをキャッシュするために使用されます。これは、アクションの特定の要素が頻繁に変更されるか、複雑な状態に依存する一方で、他の部分がほとんど変更されないか、複数のパーティ間で共有できる場合に役立ちます。キャッシュは、アクションビューで使用可能な &lt;code&gt;cache&lt;/code&gt; ヘルパーを使用して行われます。詳細については、&lt;a href=&quot;../../actionview/helpers/cachehelper&quot;&gt;ActionView :: Helpers :: CacheHelper&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="58b54f8482b53e78899c9d0d675ac1b6e08786a1" translate="yes" xml:space="preserve">
          <source>Framework Behavior</source>
          <target state="translated">フレームワーク動作</target>
        </trans-unit>
        <trans-unit id="ae3c6299b8dae81ec79c1a95a20bbc4e1193b226" translate="yes" xml:space="preserve">
          <source>Frequently, though, you don't actually want to transform the variant right away. But rather simply refer to a specific variant that can be created by a controller on-demand. Like so:</source>
          <target state="translated">しかし、実際にはすぐにバリアントを変換したいわけではありません。むしろ、単にコントローラがオンデマンドで作成できる特定のバリアントを参照しているだけです。このようにします。</target>
        </trans-unit>
        <trans-unit id="ce752397ff409fa4e1ebbf68cd6fd398265a939b" translate="yes" xml:space="preserve">
          <source>From Ruby on Rails 5.0 onwards, Ruby 2.2.2+ is the only supported Ruby version. Make sure you are on Ruby 2.2.2 version or greater, before you proceed.</source>
          <target state="translated">Ruby on Rails 5.0以降では、Ruby 2.2.2+のみがサポートされています。先に進む前に、Ruby 2.2.2以上のバージョンであることを確認してください。</target>
        </trans-unit>
        <trans-unit id="456e67dcfffd46875b07dcdd2979d27d3c444b6e" translate="yes" xml:space="preserve">
          <source>From address of the mail</source>
          <target state="translated">郵便物の住所から</target>
        </trans-unit>
        <trans-unit id="139e2dd0b8efa41c55955c25ca8ca1b8a8a86604" translate="yes" xml:space="preserve">
          <source>From now on, the victim and the attacker will co-use the web application with the same session: The session became valid and the victim didn't notice the attack.</source>
          <target state="translated">今後、被害者と攻撃者は同じセッションでウェブアプリケーションを共同利用することになります。セッションが有効になり、被害者は攻撃に気づかなかった。</target>
        </trans-unit>
        <trans-unit id="f047f539e66f425c63629e920e4cd735314523a8" translate="yes" xml:space="preserve">
          <source>From the application root, run the model generator. Tell it to generate a &lt;code&gt;Comment&lt;/code&gt; model, with the related table having two columns: an &lt;code&gt;article_id&lt;/code&gt; integer and &lt;code&gt;text&lt;/code&gt; text column.</source>
          <target state="translated">アプリケーションのルートから、モデルジェネレーターを実行します。関連するテーブルに2つの列（ &lt;code&gt;article_id&lt;/code&gt; 整数と &lt;code&gt;text&lt;/code&gt; テキスト列）がある &lt;code&gt;Comment&lt;/code&gt; モデルを生成するように指示します。</target>
        </trans-unit>
        <trans-unit id="54b609484e9868e469cf6b8bf187983551d89dbf" translate="yes" xml:space="preserve">
          <source>From the controller's point of view, there are three ways to create an HTTP response:</source>
          <target state="translated">コントローラの観点から、HTTPレスポンスを作成するには3つの方法があります。</target>
        </trans-unit>
        <trans-unit id="1febd1ce885a694d1adbcc18fcf76f975f3b872b" translate="yes" xml:space="preserve">
          <source>From the engine root, run the model generator. Tell it to generate a &lt;code&gt;Comment&lt;/code&gt; model, with the related table having two columns: an &lt;code&gt;article_id&lt;/code&gt; integer and &lt;code&gt;text&lt;/code&gt; text column.</source>
          <target state="translated">エンジンルートから、モデルジェネレーターを実行します。 &lt;code&gt;Comment&lt;/code&gt; モデルを生成するように &lt;code&gt;article_id&lt;/code&gt; ます。関連するテーブルには、article_id整数列と &lt;code&gt;text&lt;/code&gt; テキスト列の2つの列があります。</target>
        </trans-unit>
        <trans-unit id="7a020e70c864c57b45c0daa7a9b3ad09b6ff5f4f" translate="yes" xml:space="preserve">
          <source>From the security standpoint, if you don't expect to have any markup in your response body, you should be using &lt;code&gt;render :plain&lt;/code&gt; as most browsers will escape unsafe content in the response for you.</source>
          <target state="translated">セキュリティの観点から、応答本文にマークアップが含まれないと予想される場合は、 &lt;code&gt;render :plain&lt;/code&gt; を使用する必要があります。ほとんどのブラウザーは、応答の安全でないコンテンツをエスケープするためです。</target>
        </trans-unit>
        <trans-unit id="b62ff8c72a56f8b7ea4baf56058aeff306c16c7b" translate="yes" xml:space="preserve">
          <source>From then on, what happens to the constant and the instance does not matter. For example, the constant could be deleted, the class object could be assigned to a different constant, be stored in no constant anymore, etc. Once the name is set, it doesn't change.</source>
          <target state="translated">それ以降、定数とインスタンスに何が起こるかは問題ではありません。例えば、定数が削除されたり、クラスオブジェクトが別の定数に割り当てられたり、定数に格納されなくなったり、などです。一度名前が設定されると、それは変更されません。</target>
        </trans-unit>
        <trans-unit id="c4d63e4c56f1d2b74aaf3de1c3943ce348748d84" translate="yes" xml:space="preserve">
          <source>From:</source>
          <target state="translated">From:</target>
        </trans-unit>
        <trans-unit id="6b2e86b36efeac1ca193b435611b528921adc671" translate="yes" xml:space="preserve">
          <source>Full Text Search</source>
          <target state="translated">全文検索</target>
        </trans-unit>
        <trans-unit id="1f829e1407b8a50a5f762fee781f49d0362db081" translate="yes" xml:space="preserve">
          <source>Full details of HTTP Permissions Policy specification and guidelines can be found at MDN:</source>
          <target state="translated">HTTP Permissions Policy の仕様とガイドラインの詳細は MDN を参照してください。</target>
        </trans-unit>
        <trans-unit id="d5c223653224520563d1f3d4c332bb2b65792222" translate="yes" xml:space="preserve">
          <source>Full documentation about enums can be found &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Enum.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">列挙型に関する完全なドキュメントは&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Enum.html&quot;&gt;ここにあります&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6f60e44f69f0342108671d1d4b76b126fc79dec6" translate="yes" xml:space="preserve">
          <source>Full path to template</source>
          <target state="translated">テンプレートへのフルパス</target>
        </trans-unit>
        <trans-unit id="6a708ed7181f3ee5df5f438b8078ce3255c607c0" translate="yes" xml:space="preserve">
          <source>Full usage example:</source>
          <target state="translated">完全な使用例。</target>
        </trans-unit>
        <trans-unit id="c184078617fe80ea5c3db256e50c1973b7cd84e5" translate="yes" xml:space="preserve">
          <source>Full-Stack Examples</source>
          <target state="translated">フルスタックの例</target>
        </trans-unit>
        <trans-unit id="dc8cc17fb9092b97f58b24c8584410fc2ce9317e" translate="yes" xml:space="preserve">
          <source>Functional Tests</source>
          <target state="translated">機能テスト</target>
        </trans-unit>
        <trans-unit id="81067236545c01740a7616a0c156bd3ad2fb44d4" translate="yes" xml:space="preserve">
          <source>Functional Tests for Your Controllers</source>
          <target state="translated">コントローラの機能テスト</target>
        </trans-unit>
        <trans-unit id="e3c6c55ccb738dd0789051385ca2b4191e1e1619" translate="yes" xml:space="preserve">
          <source>Functional and System Testing</source>
          <target state="translated">機能テストとシステムテスト</target>
        </trans-unit>
        <trans-unit id="726801e888550d5681ed8cb7509e8b159e096ee9" translate="yes" xml:space="preserve">
          <source>Functional tests are written as follows:</source>
          <target state="translated">機能テストは以下のように書かれています。</target>
        </trans-unit>
        <trans-unit id="a538a70b2f89e22b93f533e9e38e79404076b406" translate="yes" xml:space="preserve">
          <source>Functional tests do not verify whether the specified request type is accepted by the action, we're more concerned with the result. Request tests exist for this use case to make your tests more purposeful.</source>
          <target state="translated">機能テストは、指定されたリクエストタイプがアクションによって受け入れられるかどうかを検証しません。リクエストテストはこのユースケースのために存在し、テストをより目的的なものにします。</target>
        </trans-unit>
        <trans-unit id="79fde2ac8490ff2b99ac9c9890e046fdff6e3659" translate="yes" xml:space="preserve">
          <source>Functionality</source>
          <target state="translated">Functionality</target>
        </trans-unit>
        <trans-unit id="2f47c4648e8524b4014506fdca1cac11cb6d83cd" translate="yes" xml:space="preserve">
          <source>Fundamentally HTML forms don't know about any sort of structured data, all they generate is name-value pairs, where pairs are just plain strings. The arrays and hashes you see in your application are the result of some parameter naming conventions that Rails uses.</source>
          <target state="translated">基本的にHTMLフォームは構造化されたデータの種類を知らず、生成するのは名前と値のペアだけで、ペアは単なる文字列です。アプリケーションで見られる配列やハッシュは、Railsが使用しているいくつかのパラメータの命名規則の結果です。</target>
        </trans-unit>
        <trans-unit id="b50b96fc68f8cb4fd8702462b37286234245f788" translate="yes" xml:space="preserve">
          <source>Furthermore, all the above styles can be mixed together:</source>
          <target state="translated">さらに、上記のすべてのスタイルを混在させることができます。</target>
        </trans-unit>
        <trans-unit id="f7aa71a09d6d67d4695dc0add7eb21a682057363" translate="yes" xml:space="preserve">
          <source>Furthermore, if you use the Rails form helpers to generate your forms, when a validation error occurs on a field, it will generate an extra &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; around the entry.</source>
          <target state="translated">さらに、Railsフォームヘルパーを使用してフォームを生成する場合、フィールドで検証エラーが発生すると、エントリの周りに追加の &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; が生成されます。</target>
        </trans-unit>
        <trans-unit id="f5924f715bbe18b4d7d8397af8ba720ee74d36d7" translate="yes" xml:space="preserve">
          <source>Furthermore, unlike &lt;code&gt;select&lt;/code&gt; and other &lt;code&gt;Relation&lt;/code&gt; scopes, &lt;code&gt;pluck&lt;/code&gt; triggers an immediate query, and thus cannot be chained with any further scopes, although it can work with scopes already constructed earlier:</source>
          <target state="translated">さらに、 &lt;code&gt;select&lt;/code&gt; や他の &lt;code&gt;Relation&lt;/code&gt; スコープとは異なり、 &lt;code&gt;pluck&lt;/code&gt; は即時クエリをトリガーするため、以前に構築されたスコープで動作することはできますが、それ以上のスコープとチェーンすることはできません。</target>
        </trans-unit>
        <trans-unit id="1e317e6b8e3a8bc6060b771e81e12256161ab847" translate="yes" xml:space="preserve">
          <source>GENERATOR_KEY</source>
          <target state="translated">GENERATOR_KEY</target>
        </trans-unit>
        <trans-unit id="f030bbbd32966cde41037b98a8849c46b76e4bc1" translate="yes" xml:space="preserve">
          <source>GET</source>
          <target state="translated">GET</target>
        </trans-unit>
        <trans-unit id="b600e280d8aedeb38543314e8324d445dbab011d" translate="yes" xml:space="preserve">
          <source>GET index</source>
          <target state="translated">GETインデックス</target>
        </trans-unit>
        <trans-unit id="0f8451a53ed163c2d67ec7a8e8b4b4e7f123cc0f" translate="yes" xml:space="preserve">
          <source>GET new POST create</source>
          <target state="translated">GET new POST create</target>
        </trans-unit>
        <trans-unit id="1a71d4473704c417a909b2d997465ff002873410" translate="yes" xml:space="preserve">
          <source>GET requests are checked for cross-origin JavaScript after rendering.</source>
          <target state="translated">GETリクエストは、レンダリング後にクロスオリジンのJavaScriptをチェックします。</target>
        </trans-unit>
        <trans-unit id="2e91f2476d8d4e3ea4f15377afd7aad7ad52eab0" translate="yes" xml:space="preserve">
          <source>GET requests are not protected since they don't have side effects like writing to the database and don't leak sensitive information. JavaScript requests are an exception: a third-party site can use a &amp;lt;script&amp;gt; tag to reference a JavaScript URL on your site. When your JavaScript response loads on their site, it executes. With carefully crafted JavaScript on their end, sensitive data in your JavaScript response may be extracted. To prevent this, only XmlHttpRequest (known as XHR or Ajax) requests are allowed to make requests for JavaScript responses.</source>
          <target state="translated">GETリクエストは、データベースへの書き込みなどの副作用がなく、機密情報が漏洩しないため、保護されません。JavaScriptリクエストは例外です。サードパーティのサイトは&amp;lt;script&amp;gt;タグを使用して、サイトのJavaScript URLを参照できます。JavaScript応答がサイトにロードされると、実行されます。慎重に作成されたJavaScriptを最後に使用すると、JavaScript応答の機密データが抽出される可能性があります。これを防ぐために、XmlHttpRequest（XHRまたはAjaxとして知られている）リクエストのみがJavaScript応答のリクエストを行うことができます。</target>
        </trans-unit>
        <trans-unit id="9cdbdc8dde9670885c36821f5c5352313c50d12b" translate="yes" xml:space="preserve">
          <source>GET show GET edit PATCH/PUT update DELETE destroy</source>
          <target state="translated">GET show GET edit PATCH/PUT update DELETE destroy</target>
        </trans-unit>
        <trans-unit id="7ab7f09cf6b3df5d7a649934c8905a8d66d856b1" translate="yes" xml:space="preserve">
          <source>GET()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">GET（）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="862460a4eaa4ab2cc4be9660a6e5e588d081c956" translate="yes" xml:space="preserve">
          <source>GIGABYTE</source>
          <target state="translated">GIGABYTE</target>
        </trans-unit>
        <trans-unit id="becd12810bf9a6ffec3b00da78a601586b644de5" translate="yes" xml:space="preserve">
          <source>GITKEEP_FILES</source>
          <target state="translated">GITKEEP_FILES</target>
        </trans-unit>
        <trans-unit id="5becf070a51b514072cd4c270ed3e295210d6ccc" translate="yes" xml:space="preserve">
          <source>GREEN</source>
          <target state="translated">GREEN</target>
        </trans-unit>
        <trans-unit id="4abd4fc7472c11a75bb252fdead83c4ed392ae03" translate="yes" xml:space="preserve">
          <source>GZipping your assets</source>
          <target state="translated">資産のGZipping</target>
        </trans-unit>
        <trans-unit id="34c2ea5be3e508c050b55b5cc8070ff3c3692448" translate="yes" xml:space="preserve">
          <source>Gateway to &lt;a href=&quot;../remoteconnections&quot;&gt;&lt;code&gt;RemoteConnections&lt;/code&gt;&lt;/a&gt;. See that class for details.</source>
          <target state="translated">&lt;a href=&quot;../remoteconnections&quot;&gt; &lt;code&gt;RemoteConnections&lt;/code&gt; &lt;/a&gt;へのゲートウェイ。詳細については、そのクラスを参照してください。</target>
        </trans-unit>
        <trans-unit id="e22aa3638a5310368d40775abc4daacdfcb74993" translate="yes" xml:space="preserve">
          <source>Gateway to &lt;a href=&quot;../remoteconnections&quot;&gt;RemoteConnections&lt;/a&gt;. See that class for details.</source>
          <target state="translated">&lt;a href=&quot;../remoteconnections&quot;&gt;RemoteConnections&lt;/a&gt;へのゲートウェイ。詳細については、そのクラスを参照してください。</target>
        </trans-unit>
        <trans-unit id="7604cd4cbe70f37daa2d95ec55c5c25c6fd3ecb0" translate="yes" xml:space="preserve">
          <source>Gem dependencies inside an engine should be specified inside the &lt;code&gt;.gemspec&lt;/code&gt; file at the root of the engine. The reason is that the engine may be installed as a gem. If dependencies were to be specified inside the &lt;code&gt;Gemfile&lt;/code&gt;, these would not be recognized by a traditional gem install and so they would not be installed, causing the engine to malfunction.</source>
          <target state="translated">エンジン内のGem依存関係は、エンジンのルートにある &lt;code&gt;.gemspec&lt;/code&gt; ファイル内で指定する必要があります。その理由は、エンジンが宝石としてインストールされる可能性があるためです。依存関係が &lt;code&gt;Gemfile&lt;/code&gt; 内で指定された場合、これらは従来のgemインストールでは認識されないため、インストールされず、エンジンが誤動作します。</target>
        </trans-unit>
        <trans-unit id="3821474b9ae8241d3aa80e0e6c2a32731b410e66" translate="yes" xml:space="preserve">
          <source>Gem plugins currently in development can easily be shared from any Git repository. To share the Yaffle gem with others, simply commit the code to a Git repository (like GitHub) and add a line to the &lt;code&gt;Gemfile&lt;/code&gt; of the application in question:</source>
          <target state="translated">現在開発中のGemプラグインは、任意のGitリポジトリから簡単に共有できます。Yaffle gemを他の人と共有するには、コードをGitリポジトリ（GitHubなど）にコミットし、問題のアプリケーションの &lt;code&gt;Gemfile&lt;/code&gt; に行を追加します。</target>
        </trans-unit>
        <trans-unit id="de3150c01c3a946a6168173c4116741379fe3579" translate="yes" xml:space="preserve">
          <source>Gemfile</source>
          <target state="translated">Gemfile</target>
        </trans-unit>
        <trans-unit id="21fb5836b499a2be648386aac055d2e069160d6c" translate="yes" xml:space="preserve">
          <source>Gemfile.lock</source>
          <target state="translated">Gemfile.lock</target>
        </trans-unit>
        <trans-unit id="fba4bdc304745193ca9f3d084cafed803881961b" translate="yes" xml:space="preserve">
          <source>Gemspec Reference</source>
          <target state="translated">ジェムスペックリファレンス</target>
        </trans-unit>
        <trans-unit id="75fabb5a96311113ca298de2d0ecaaa2aae1996e" translate="yes" xml:space="preserve">
          <source>General Advice</source>
          <target state="translated">一般的なアドバイス</target>
        </trans-unit>
        <trans-unit id="d08759c29ceb7376299e9e482a84c806359add55" translate="yes" xml:space="preserve">
          <source>Generally a deadlock will be caused by the interlock conflicting with some other external lock or blocking I/O call. Once you find it, you can wrap it with &lt;code&gt;permit_concurrent_loads&lt;/code&gt;.</source>
          <target state="translated">通常、デッドロックは、インターロックが他の外部ロックと競合したり、I / O呼び出しをブロックしたりすることによって発生します。見つかったら、 &lt;code&gt;permit_concurrent_loads&lt;/code&gt; でラップできます。</target>
        </trans-unit>
        <trans-unit id="b960129dbcd1de440cb2c51d5e5c47e631742859" translate="yes" xml:space="preserve">
          <source>Generally a deadlock will be caused by the interlock conflicting with some other external lock or blocking I/O call. These cannot be automatically identified, but should be visible in the displayed backtraces.</source>
          <target state="translated">デッドロックは通常、インターロックが他の外部ロックと競合したり、I/O コールをブロッキングしたりすることで発生します。これらは自動的に識別することはできませんが、表示されているバックトレースで確認することができます。</target>
        </trans-unit>
        <trans-unit id="ec74792f75fd8e0ccb725434fee0e165f9e9289a" translate="yes" xml:space="preserve">
          <source>Generally we recommend using YAML as a format for storing translations. There are cases, though, where you want to store Ruby lambdas as part of your locale data, e.g. for special date formats.</source>
          <target state="translated">一般的には、翻訳を格納するフォーマットとしてYAMLを使うことを推奨します。しかし、Ruby のラムダをロケールデータの一部として保存したい場合もあるでしょう。</target>
        </trans-unit>
        <trans-unit id="2f3919d68be750779a6fa6f20e65c2fb44204825" translate="yes" xml:space="preserve">
          <source>Generally, these helpers have the same name as their form builder counterparts plus a &lt;code&gt;_tag&lt;/code&gt; suffix. For a complete list, see the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/FormTagHelper.html&quot;&gt;&lt;code&gt;FormTagHelper&lt;/code&gt; API documentation&lt;/a&gt;.</source>
          <target state="translated">通常、これらのヘルパーは、対応するフォームビルダーと同じ名前に &lt;code&gt;_tag&lt;/code&gt; サフィックスを付けたものです。完全なリストについては、&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/FormTagHelper.html&quot;&gt; &lt;code&gt;FormTagHelper&lt;/code&gt; APIのドキュメントを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="839f30f786d0442fe07bf54f1fc77f991d7c3d19" translate="yes" xml:space="preserve">
          <source>Generate a URL based on the options provided, default_url_options and the routes defined in routes.rb. The following options are supported:</source>
          <target state="translated">提供されたオプション、default_url_options、および routes.rb で定義されたルートに基づいて URL を生成します。以下のオプションがサポートされています。</target>
        </trans-unit>
        <trans-unit id="e46f9ed284fb384e80320c8562a667f30c23a168" translate="yes" xml:space="preserve">
          <source>Generate a gemified plugin.</source>
          <target state="translated">gem化されたプラグインを生成します。</target>
        </trans-unit>
        <trans-unit id="26cf20c8d613c642dbc7fbd21b33a35d005395ec" translate="yes" xml:space="preserve">
          <source>Generate a permanent URL for the blob that points to the application. Upon access, a redirect to the actual service endpoint is returned. This indirection decouples the public URL from the actual one, and allows, for example, mirroring attachments in different services for high-availability. The redirection has an HTTP expiration of 5 min.</source>
          <target state="translated">アプリケーションを指す blob の永久 URL を生成します。アクセスすると、実際のサービスのエンドポイントへのリダイレクトが返されます。このインダイレクトにより、公開URLと実際のURLが分離され、例えば、高可用性のために異なるサービスで添付ファイルをミラーリングすることが可能になります。リダイレクトの有効期限は 5 分です。</target>
        </trans-unit>
        <trans-unit id="78a7067a1a50f1ab95c8daae1dfa27d9a00af6e2" translate="yes" xml:space="preserve">
          <source>Generate a permanent URL for the blob that points to the application. Upon access, a redirect to the actual service endpoint is returned. This indirection decouples the service URL from the actual one, and allows, for example, mirroring attachments in different services for high-availability. The redirection has an HTTP expiration of 5 minutes.</source>
          <target state="translated">アプリケーションを指す blob の永久 URL を生成します。アクセスすると、実際のサービスエンドポイントへのリダイレクトが返されます。このインダイレクトにより、サービスの URL が実際のものから切り離され、例えば、高可用性のために異なるサービスで添付ファイルをミラーリングすることが可能になります。リダイレクトの有効期限は 5 分です。</target>
        </trans-unit>
        <trans-unit id="695059ace2b43786511ad7163cc7c72c11dedab0" translate="yes" xml:space="preserve">
          <source>Generate a strong password that Action Mailbox can use to authenticate requests to the Postmark ingress.</source>
          <target state="translated">Action MailboxがPostmark ingressへのリクエストを認証するために使用できる強力なパスワードを生成します。</target>
        </trans-unit>
        <trans-unit id="c27a250ef7bd024c9d8d497d37c0b7dfe7adb180" translate="yes" xml:space="preserve">
          <source>Generate a strong password that Action Mailbox can use to authenticate requests to the SendGrid ingress.</source>
          <target state="translated">Action MailboxがSendGrid ingressへのリクエストを認証するために使用できる強力なパスワードを生成します。</target>
        </trans-unit>
        <trans-unit id="348eeb91ded83b062aa9da51fa42b62c8570d77e" translate="yes" xml:space="preserve">
          <source>Generate a strong password that Action Mailbox can use to authenticate requests to the ingress.</source>
          <target state="translated">Action Mailbox が入口へのリクエストを認証するために使用できる強力なパスワードを生成します。</target>
        </trans-unit>
        <trans-unit id="35a28be05941e180d1202a80f8656c739b3d866d" translate="yes" xml:space="preserve">
          <source>Generate a strong password that Action Mailbox can use to authenticate requests to the relay ingress.</source>
          <target state="translated">Action Mailbox がリレーイングレスへのリクエストを認証するために使用できる強力なパスワードを生成します。</target>
        </trans-unit>
        <trans-unit id="299250825b86930d880cbe1300f8edc7a9740777" translate="yes" xml:space="preserve">
          <source>Generate all routes except for the given actions.</source>
          <target state="translated">与えられたアクションを除くすべてのルートを生成します。</target>
        </trans-unit>
        <trans-unit id="9c0bd9e0b4208ba3754b7a155161beab95ee2014" translate="yes" xml:space="preserve">
          <source>Generate something using a generator from &lt;code&gt;Rails&lt;/code&gt; or a plugin. The second parameter is the argument string that is passed to the generator or an &lt;a href=&quot;../../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; that is joined.</source>
          <target state="translated">&lt;code&gt;Rails&lt;/code&gt; のジェネレーターまたはプラグインを使用して何かを生成します。2番目のパラメーターは、ジェネレーターに渡される引数文字列または結合される&lt;a href=&quot;../../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="eb0cba5cdeb376143e9aceea92cc9d1b0e165b5d" translate="yes" xml:space="preserve">
          <source>Generate something using a generator from Rails or a plugin. The second parameter is the argument string that is passed to the generator or an &lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt; that is joined.</source>
          <target state="translated">Railsのプラグインまたはプラグインを使用して生成します。2番目のパラメーターは、ジェネレーターまたは結合される&lt;a href=&quot;../../array&quot;&gt;配列に&lt;/a&gt;渡される引数文字列です。</target>
        </trans-unit>
        <trans-unit id="474c15d166662b0d9542ad4dd123ec913dbaf348" translate="yes" xml:space="preserve">
          <source>Generate the Spring binstub with &lt;code&gt;bundle exec spring binstub&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bundle exec spring binstub&lt;/code&gt; springbinstubを使用してSpringbinstubを生成します。</target>
        </trans-unit>
        <trans-unit id="344e9677b33e0c916670991d1e522c35ba27b196" translate="yes" xml:space="preserve">
          <source>Generated URL</source>
          <target state="translated">生成されたURL</target>
        </trans-unit>
        <trans-unit id="5ee2c26e4cf20f2e8bc0593709499eedd6443c91" translate="yes" xml:space="preserve">
          <source>Generates a form containing a single button that submits to the URL created by the set of &lt;code&gt;options&lt;/code&gt;. This is the safest method to ensure links that cause changes to your data are not triggered by search bots or accelerators. If the HTML button does not work with your layout, you can also consider using the &lt;code&gt;link_to&lt;/code&gt; method with the &lt;code&gt;:method&lt;/code&gt; modifier as described in the &lt;code&gt;link_to&lt;/code&gt; documentation.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; のセットによって作成されたURLに送信する単一のボタンを含むフォームを生成します。これは、データを変更するリンクが検索ボットやアクセラレータによってトリガーされないようにするための最も安全な方法です。HTMLボタンがレイアウトで機能しない場合は、 &lt;code&gt;link_to&lt;/code&gt; のドキュメントで説明されているように、 &lt;code&gt;:method&lt;/code&gt; 修飾子を指定して &lt;code&gt;link_to&lt;/code&gt; メソッドを使用することも検討できます。</target>
        </trans-unit>
        <trans-unit id="7b3580737abe42134b2ab117b21065aabe879b50" translate="yes" xml:space="preserve">
          <source>Generates a form that submits to the passed URL. The form has a submit button with the value of the &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">渡されたURLに送信するフォームを生成します。フォームには、 &lt;code&gt;name&lt;/code&gt; 値を持つ送信ボタンがあります。</target>
        </trans-unit>
        <trans-unit id="9e7e53e9639ca86746004046f8a8f925c5ac3f67" translate="yes" xml:space="preserve">
          <source>Generates a signed message for the provided value.</source>
          <target state="translated">指定された値の署名付きメッセージを生成します。</target>
        </trans-unit>
        <trans-unit id="3094e03f8f472b1437bc3c4cd06c2c0c119d2738" translate="yes" xml:space="preserve">
          <source>Generates a v5 non-random &lt;a href=&quot;uuid&quot;&gt;&lt;code&gt;UUID&lt;/code&gt;&lt;/a&gt; (Universally Unique IDentifier).</source>
          <target state="translated">v5の非ランダム&lt;a href=&quot;uuid&quot;&gt; &lt;code&gt;UUID&lt;/code&gt; &lt;/a&gt;（Universally Unique IDentifier）を生成します。</target>
        </trans-unit>
        <trans-unit id="75f412c48613923b2db41663cec892e4357043ac" translate="yes" xml:space="preserve">
          <source>Generates a v5 non-random &lt;a href=&quot;uuid&quot;&gt;UUID&lt;/a&gt; (Universally Unique IDentifier).</source>
          <target state="translated">v5のランダムでない&lt;a href=&quot;uuid&quot;&gt;UUID&lt;/a&gt;（Universally Unique IDentifier）を生成します。</target>
        </trans-unit>
        <trans-unit id="d6dab65da458de737bfd0aad37e5640ccdbd8f01" translate="yes" xml:space="preserve">
          <source>Generates information on the mailing run if available. Can be set to &lt;code&gt;nil&lt;/code&gt; for no logging. Compatible with both Ruby's own &lt;code&gt;Logger&lt;/code&gt; and &lt;code&gt;Log4r&lt;/code&gt; loggers.</source>
          <target state="translated">可能な場合、メーリング実行に関する情報を生成します。ログを記録しない場合は &lt;code&gt;nil&lt;/code&gt; に設定できます。Rubyの &lt;code&gt;Logger&lt;/code&gt; と &lt;code&gt;Log4r&lt;/code&gt; ロガーの両方と互換性があります。</target>
        </trans-unit>
        <trans-unit id="b08aeb9ca25c889b8737cae0eea7ca63a2df9ae7" translate="yes" xml:space="preserve">
          <source>Generates shallow routes for nested resource(s). When placed on a parent resource, generates shallow routes for all nested resources.</source>
          <target state="translated">入れ子になったリソースの浅いルートを生成します。親リソース上に配置された場合、入れ子になったすべてのリソースの浅いルートを生成します。</target>
        </trans-unit>
        <trans-unit id="14e149a59d2f6dbae2a2a38afd408c97a4b556b8" translate="yes" xml:space="preserve">
          <source>Generating Paths and URLs from Code</source>
          <target state="translated">コードからパスとURLを生成する</target>
        </trans-unit>
        <trans-unit id="4ea0c5d22674996a1158c35529b76d000bb0e336" translate="yes" xml:space="preserve">
          <source>Generating URLs</source>
          <target state="translated">URL の生成</target>
        </trans-unit>
        <trans-unit id="aa4196a02fe20957107625eb4a338cae326613dc" translate="yes" xml:space="preserve">
          <source>Generating URLs in Action Mailer Views</source>
          <target state="translated">アクションメーラービューでのURLの生成</target>
        </trans-unit>
        <trans-unit id="eed33b7478e2efc453671dca69c5627c85bac6e7" translate="yes" xml:space="preserve">
          <source>Generating a Comments Resource</source>
          <target state="translated">コメントリソースの生成</target>
        </trans-unit>
        <trans-unit id="a9522296dfe947b04ecc2b6017c7d82f7e04ea27" translate="yes" xml:space="preserve">
          <source>Generating a Controller</source>
          <target state="translated">コントローラの生成</target>
        </trans-unit>
        <trans-unit id="455a0debed117bf249b61aa22986e88693d5b5ca" translate="yes" xml:space="preserve">
          <source>Generating a Model</source>
          <target state="translated">モデルの生成</target>
        </trans-unit>
        <trans-unit id="8ebed51466c57ef61b1cf9a02de1b01e10abb3bf" translate="yes" xml:space="preserve">
          <source>Generating an Article Resource</source>
          <target state="translated">記事リソースの生成</target>
        </trans-unit>
        <trans-unit id="40b2307bd2388abfd21af5b57eba5724adea350b" translate="yes" xml:space="preserve">
          <source>Generating an Engine</source>
          <target state="translated">エンジンの生成</target>
        </trans-unit>
        <trans-unit id="ec455254037451adb2916ab33012ec32ad44e8e2" translate="yes" xml:space="preserve">
          <source>Generating an engine</source>
          <target state="translated">エンジンの生成</target>
        </trans-unit>
        <trans-unit id="1a012ed71a95646a207a28b93d4322635e1a8cd6" translate="yes" xml:space="preserve">
          <source>Generating options tags with &lt;code&gt;options_for_select&lt;/code&gt; requires that you create an array containing the text and value for each option. But what if you had a &lt;code&gt;City&lt;/code&gt; model (perhaps an Active Record one) and you wanted to generate option tags from a collection of those objects? One solution would be to make a nested array by iterating over them:</source>
          <target state="translated">&lt;code&gt;options_for_select&lt;/code&gt; でオプションタグを生成するには、各オプションのテキストと値を含む配列を作成する必要があります。しかし、 &lt;code&gt;City&lt;/code&gt; モデル（おそらくActive Recordモデル）があり、それらのオブジェクトのコレクションからオプションタグを生成したい場合はどうでしょうか。1つの解決策は、それらを反復することでネストされた配列を作成することです。</target>
        </trans-unit>
        <trans-unit id="e794b11cba8f11ca654cb29060aa1e3ce3e6b0fd" translate="yes" xml:space="preserve">
          <source>Generator methods</source>
          <target state="translated">ジェネレータの方法</target>
        </trans-unit>
        <trans-unit id="a3e705cc61a19f33d7c9c030f107a70569966485" translate="yes" xml:space="preserve">
          <source>Generators</source>
          <target state="translated">Generators</target>
        </trans-unit>
        <trans-unit id="ebc9bbd7c5a8784fd28058c31276419d99846dc8" translate="yes" xml:space="preserve">
          <source>Generators Lookup</source>
          <target state="translated">ジェネレータ検索</target>
        </trans-unit>
        <trans-unit id="99470eb3f38a13d354822864e5af20ed37e6e3a8" translate="yes" xml:space="preserve">
          <source>Generators and Migrations</source>
          <target state="translated">ジェネレータと移行</target>
        </trans-unit>
        <trans-unit id="e07b20fd441cbf0d83b37ac549141ac22cad17e9" translate="yes" xml:space="preserve">
          <source>Generators can be included in your gem simply by creating them in a &lt;code&gt;lib/generators&lt;/code&gt; directory of your plugin. More information about the creation of generators can be found in the &lt;a href=&quot;generators&quot;&gt;Generators Guide&lt;/a&gt;.</source>
          <target state="translated">ジェネレーターは、プラグインの &lt;code&gt;lib/generators&lt;/code&gt; ディレクトリに作成するだけで、gemに含めることができます。ジェネレーターの作成の詳細については、&lt;a href=&quot;generators&quot;&gt;ジェネレーターガイドを参照してください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cc00dbcd828e3d4e6f6045f56385b34f42958458" translate="yes" xml:space="preserve">
          <source>Generators themselves have a generator:</source>
          <target state="translated">発電機自体には発電機があります。</target>
        </trans-unit>
        <trans-unit id="35bd18ce575e4d14f28fbbbc2db6d6c620225a4d" translate="yes" xml:space="preserve">
          <source>Generators: It is often handy to generate a resource and get your model, controller, test stubs, and routes created for you in a single command for further tweaking. Same for migrations and others.</source>
          <target state="translated">ジェネレータ。リソースを生成して、モデル、コントローラ、テストスタブ、ルートを1つのコマンドで作成し、さらに微調整できるようにすると便利です。マイグレーションなども同様です。</target>
        </trans-unit>
        <trans-unit id="5f877487c25b3a93f31a90c54e33057075912cac" translate="yes" xml:space="preserve">
          <source>Generic Active Record exception class.</source>
          <target state="translated">汎用アクティブレコード例外クラス。</target>
        </trans-unit>
        <trans-unit id="c7cf342e70e063d6362ac6ee69c6f86474de7bbd" translate="yes" xml:space="preserve">
          <source>Generic Procedure</source>
          <target state="translated">一般的な手続き</target>
        </trans-unit>
        <trans-unit id="cb0e0aa849efd0358a8930f86c062a26623b32ad" translate="yes" xml:space="preserve">
          <source>Generic base class for all Active Storage exceptions.</source>
          <target state="translated">すべてのActive Storage例外のための汎用基底クラス。</target>
        </trans-unit>
        <trans-unit id="0eb0bda0b417725599186cb04f861eea63e1d153" translate="yes" xml:space="preserve">
          <source>Generic data download:</source>
          <target state="translated">一般的なデータのダウンロード。</target>
        </trans-unit>
        <trans-unit id="59a79a1ee234d61d42db147aa7f797d2e6ec2302" translate="yes" xml:space="preserve">
          <source>Geometric Types</source>
          <target state="translated">幾何学的なタイプ</target>
        </trans-unit>
        <trans-unit id="df0de8fdd90e29b22a27eb9a982a2c6955cebd22" translate="yes" xml:space="preserve">
          <source>Get a session from the cache.</source>
          <target state="translated">キャッシュからセッションを取得します。</target>
        </trans-unit>
        <trans-unit id="b5d5f1519031ebd723f04df3e921a9b2d9fa90a9" translate="yes" xml:space="preserve">
          <source>Get headers for this response.</source>
          <target state="translated">このレスポンスのヘッダを取得します。</target>
        </trans-unit>
        <trans-unit id="12c33f631ec0435712aa572121a37056a0cdfbae" translate="yes" xml:space="preserve">
          <source>Get the columns for a table</source>
          <target state="translated">テーブルのカラムを取得する</target>
        </trans-unit>
        <trans-unit id="3a92cb99f6144db7ddd4c7ff83c74575d5f11bb7" translate="yes" xml:space="preserve">
          <source>Get the columns for a table as a hash, key is the column name value is the column object.</source>
          <target state="translated">テーブルのカラムをハッシュとして取得します。</target>
        </trans-unit>
        <trans-unit id="12ef96a6312bb1e78ed4c4a8315d3fbe414e65fb" translate="yes" xml:space="preserve">
          <source>Get the statistics from the memcached servers.</source>
          <target state="translated">memcached サーバから統計情報を取得します。</target>
        </trans-unit>
        <trans-unit id="dc23de4c2a1996be3e5a1d57362527f75f78e9f2" translate="yes" xml:space="preserve">
          <source>Gets a new instance of a controller object.</source>
          <target state="translated">コントローラオブジェクトの新しいインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="5ec196e76fdfda187c4d36d83ba955faa4aade30" translate="yes" xml:space="preserve">
          <source>Gets the helper methods available to the controller.</source>
          <target state="translated">コントローラで利用可能なヘルパーメソッドを取得します。</target>
        </trans-unit>
        <trans-unit id="3b9c4ae8c59f67bd28dcd62d1bd16e026ea3592e" translate="yes" xml:space="preserve">
          <source>Getting Started with Engines</source>
          <target state="translated">エンジンの入門編</target>
        </trans-unit>
        <trans-unit id="6cc9e0a0d14300c7b9c27b20dde833485ad3cf0b" translate="yes" xml:space="preserve">
          <source>Getting Started with Rails</source>
          <target state="translated">Railsの入門編</target>
        </trans-unit>
        <trans-unit id="d24eeeb77a7dd40f1940a7ee58720cf94e4fbe01" translate="yes" xml:space="preserve">
          <source>Getting Up and Running</source>
          <target state="translated">立ち上がって走る</target>
        </trans-unit>
        <trans-unit id="a867cc4bc05ccdf7122d86bfea913a20e4883ecf" translate="yes" xml:space="preserve">
          <source>Getting closer... Now we will implement the code of the &lt;code&gt;acts_as_yaffle&lt;/code&gt; method to make the tests pass.</source>
          <target state="translated">近づいていきます...次に、 &lt;code&gt;acts_as_yaffle&lt;/code&gt; メソッドのコードを実装して、テストに合格します。</target>
        </trans-unit>
        <trans-unit id="35b9856ef8949a47a3d9ea9218e7bbc3ffd292cf" translate="yes" xml:space="preserve">
          <source>Getting the locale from &lt;code&gt;params&lt;/code&gt; and setting it accordingly is not hard; including it in every URL and thus &lt;strong&gt;passing it through the requests&lt;/strong&gt; is. To include an explicit option in every URL, e.g. &lt;code&gt;link_to(books_url(locale: I18n.locale))&lt;/code&gt;, would be tedious and probably impossible, of course.</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; からロケールを取得し、それに応じて設定することは難しくありません。すべてのURLに含めることで&lt;strong&gt;、リクエストに渡すこと&lt;/strong&gt;ができます。 &lt;code&gt;link_to(books_url(locale: I18n.locale))&lt;/code&gt; 、link_to（books_url（locale：I18n.locale））のように、すべてのURLに明示的なオプションを含めるのは面倒で、おそらく不可能です。</target>
        </trans-unit>
        <trans-unit id="4c59b427eb75f0e3fe2350a549a5cb3c5ce6a689" translate="yes" xml:space="preserve">
          <source>Give Action Mailbox your &lt;a href=&quot;https://help.mailgun.com/hc/en-us/articles/203380100-Where-can-I-find-my-API-key-and-SMTP-credentials&quot;&gt;Mailgun API key&lt;/a&gt; so it can authenticate requests to the Mailgun ingress.</source>
          <target state="translated">アクションメールボックスに&lt;a href=&quot;https://help.mailgun.com/hc/en-us/articles/203380100-Where-can-I-find-my-API-key-and-SMTP-credentials&quot;&gt;Mailgun APIキーを&lt;/a&gt;付与して、Mailgunイングレスへのリクエストを認証できるようにします。</target>
        </trans-unit>
        <trans-unit id="c3ce7e0656ddc48bd4ba83308aee2386b422063e" translate="yes" xml:space="preserve">
          <source>Give Action Mailbox your &lt;a href=&quot;https://help.mailgun.com/hc/en-us/articles/203380100-Where-can-I-find-my-API-key-and-SMTP-credentials-&quot;&gt;Mailgun API key&lt;/a&gt; so it can authenticate requests to the Mailgun ingress.</source>
          <target state="translated">アクションメールボックスに&lt;a href=&quot;https://help.mailgun.com/hc/en-us/articles/203380100-Where-can-I-find-my-API-key-and-SMTP-credentials-&quot;&gt;Mailgun APIキーを&lt;/a&gt;付与して、Mailgunイングレスへのリクエストを認証できるようにします。</target>
        </trans-unit>
        <trans-unit id="6989a2c257501466acac9132ba65ef4f8c17648f" translate="yes" xml:space="preserve">
          <source>Give Action Mailbox your Mailgun Signing key (which you can find under Settings -&amp;gt; Security &amp;amp; Users -&amp;gt; API security in Mailgun) so it can authenticate requests to the Mailgun ingress.</source>
          <target state="translated">Action MailboxにMailgun署名キー（Mailgunの[設定]-&amp;gt; [セキュリティとユーザー]-&amp;gt; [APIセキュリティ]にあります）を指定して、Mailgun入力への要求を認証できるようにします。</target>
        </trans-unit>
        <trans-unit id="ad92faebb185019c3f91eadd82dddddea6f792b8" translate="yes" xml:space="preserve">
          <source>Give Action Mailbox your Mandrill API key so it can authenticate requests to the Mandrill ingress.</source>
          <target state="translated">Action MailboxにMandrillのAPIキーを与えて、Mandrillの入口へのリクエストを認証できるようにします。</target>
        </trans-unit>
        <trans-unit id="19ac445b117d6b0040b65f20692a02e3723d3b69" translate="yes" xml:space="preserve">
          <source>Give you information about where to put generators in your plugin.</source>
          <target state="translated">プラグインにジェネレーターを入れる場所についての情報を提供します。</target>
        </trans-unit>
        <trans-unit id="6839d82e03f5268d9a7cc97802db76c48c8cce6e" translate="yes" xml:space="preserve">
          <source>Given</source>
          <target state="translated">Given</target>
        </trans-unit>
        <trans-unit id="57ddc73e4346f634a1d4285a29e0696c1232c307" translate="yes" xml:space="preserve">
          <source>Given a block, instrument it by measuring the time taken to execute and publish it. Without a block, simply send a message via the notifier. Notice that events get sent even if an error occurs in the passed-in block.</source>
          <target state="translated">ブロックが与えられた場合、それを実行して公開するまでにかかった時間を測定することで、ブロックを計測します。ブロックがなければ、単にノーティファイアを介してメッセージを送信します。渡されたブロックでエラーが発生してもイベントが送信されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="39299b13eeb3cd20b3663ca959a1a9134a8bb236" translate="yes" xml:space="preserve">
          <source>Given a cipher, returns the key length of the cipher to help generate the key of desired size</source>
          <target state="translated">暗号が与えられた場合,希望するサイズの鍵を生成するのに役立つ暗号の鍵長を返します.</target>
        </trans-unit>
        <trans-unit id="638b6e732d32c1c15ab46868b226f0a97356edda" translate="yes" xml:space="preserve">
          <source>Given a configuration file like this:</source>
          <target state="translated">このような設定ファイルがあると</target>
        </trans-unit>
        <trans-unit id="0aa3a454a51172b7beade4cacac8dfd0c451f3d9" translate="yes" xml:space="preserve">
          <source>Given a default options hash, &lt;code&gt;with_options&lt;/code&gt; yields a proxy object to a block. Within the block, methods called on the proxy are forwarded to the receiver with their options merged. For example, you get rid of the duplication in:</source>
          <target state="translated">デフォルトのオプションハッシュを &lt;code&gt;with_options&lt;/code&gt; すると、with_optionsはプロキシオブジェクトをブロックに生成します。ブロック内で、プロキシで呼び出されたメソッドは、オプションがマージされてレシーバに転送されます。たとえば、次のようにして重複を取り除きます。</target>
        </trans-unit>
        <trans-unit id="12c3a3bddea76956647a30fc482427b4580dfc42" translate="yes" xml:space="preserve">
          <source>Given a key (as described in &lt;code&gt;expire_fragment&lt;/code&gt;), returns a key array suitable for use in reading, writing, or expiring a cached fragment. All keys begin with &lt;code&gt;:views&lt;/code&gt;, followed by &lt;code&gt;ENV[&quot;RAILS_CACHE_ID&quot;]&lt;/code&gt; or &lt;code&gt;ENV[&quot;RAILS_APP_VERSION&quot;]&lt;/code&gt; if set, followed by any controller-wide key prefix values, ending with the specified &lt;code&gt;key&lt;/code&gt; value.</source>
          <target state="translated">キー（ &lt;code&gt;expire_fragment&lt;/code&gt; で説明）を指定すると、キャッシュされたフラグメントの読み取り、書き込み、または期限切れでの使用に適したキー配列を返します。すべてのキーは &lt;code&gt;:views&lt;/code&gt; で始まり、その後に &lt;code&gt;ENV[&quot;RAILS_CACHE_ID&quot;]&lt;/code&gt; または &lt;code&gt;ENV[&quot;RAILS_APP_VERSION&quot;]&lt;/code&gt; が設定されている場合はその後に続き、コントローラー全体のキープレフィックス値が続き、指定された &lt;code&gt;key&lt;/code&gt; 値で終わります。</target>
        </trans-unit>
        <trans-unit id="c238aa790e32b2de8789a3f124d86784a73a741f" translate="yes" xml:space="preserve">
          <source>Given a path name &lt;code&gt;is_missing?&lt;/code&gt; tests whether the exception was raised due to that particular file (except perhaps for the &quot;.rb&quot; extension).</source>
          <target state="translated">パス名 &lt;code&gt;is_missing?&lt;/code&gt; 特定のファイルが原因で例外が発生したかどうかをテストします（おそらく「.rb」拡張子を除く）。</target>
        </trans-unit>
        <trans-unit id="074fe5460a44d3b24d47205157ddf0f11d9c1aaa" translate="yes" xml:space="preserve">
          <source>Given a string with a constant path we define its &lt;em&gt;parent namespace&lt;/em&gt; to be the string that results from removing its rightmost segment.</source>
          <target state="translated">定数パスを持つ文字列が与えられると、その右端のセグメントを削除した結果の文字列になるようにその&lt;em&gt;親名前空間&lt;/em&gt;を定義します。</target>
        </trans-unit>
        <trans-unit id="b619b6957923397f769644ae1d25337b9617709c" translate="yes" xml:space="preserve">
          <source>Given a string with a qualified constant name, &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-demodulize&quot;&gt;&lt;code&gt;demodulize&lt;/code&gt;&lt;/a&gt; returns the very constant name, that is, the rightmost part of it:</source>
          <target state="translated">修飾された定数名を持つ文字列を指定すると、&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-demodulize&quot;&gt; &lt;code&gt;demodulize&lt;/code&gt; &lt;/a&gt;は非常に定数の名前、つまりその右端の部分を返します。</target>
        </trans-unit>
        <trans-unit id="d058267ed210926444ce58805c0017b24f51be59" translate="yes" xml:space="preserve">
          <source>Given a string with a qualified constant name, &lt;code&gt;demodulize&lt;/code&gt; returns the very constant name, that is, the rightmost part of it:</source>
          <target state="translated">修飾された定数名を持つ文字列を指定すると、 &lt;code&gt;demodulize&lt;/code&gt; は非常に定数名、つまりその右端の部分を返します。</target>
        </trans-unit>
        <trans-unit id="28b84de44b9acd09b8cc5b8b2a703f829a0b3dab" translate="yes" xml:space="preserve">
          <source>Given a string with a qualified constant reference expression, &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-deconstantize&quot;&gt;&lt;code&gt;deconstantize&lt;/code&gt;&lt;/a&gt; removes the rightmost segment, generally leaving the name of the constant's container:</source>
          <target state="translated">修飾された定数参照式を持つ文字列を指定すると、&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-deconstantize&quot;&gt; &lt;code&gt;deconstantize&lt;/code&gt; &lt;/a&gt;は右端のセグメントを削除し、通常は定数のコンテナの名前を残します。</target>
        </trans-unit>
        <trans-unit id="6e464aeb37bd6c8134234db113bf6034e3042cea" translate="yes" xml:space="preserve">
          <source>Given a string with a qualified constant reference expression, &lt;code&gt;deconstantize&lt;/code&gt; removes the rightmost segment, generally leaving the name of the constant's container:</source>
          <target state="translated">修飾された定数参照式を &lt;code&gt;deconstantize&lt;/code&gt; 文字列を指定すると、deconstantizeは右端のセグメントを削除し、通常は定数のコンテナーの名前を残します。</target>
        </trans-unit>
        <trans-unit id="838a45291482542a12409662c258cdae0c5893dd" translate="yes" xml:space="preserve">
          <source>Given an array of values like the ones accepted by &lt;code&gt;helper&lt;/code&gt;, this method returns an array with the corresponding modules, in the same order.</source>
          <target state="translated">&lt;code&gt;helper&lt;/code&gt; によって受け入れられるような値の配列が与えられると、このメソッドは、対応するモジュールを含む配列を同じ順序で返します。</target>
        </trans-unit>
        <trans-unit id="15a3a7dfbc81f2b793996f3455628adf8dc2d38a" translate="yes" xml:space="preserve">
          <source>Given an attributes hash, &lt;code&gt;instantiate&lt;/code&gt; returns a new instance of the appropriate class. Accepts only keys as strings.</source>
          <target state="translated">属性ハッシュが指定されると、 &lt;code&gt;instantiate&lt;/code&gt; は適切なクラスの新しいインスタンスを返します。キーのみを文字列として受け入れます。</target>
        </trans-unit>
        <trans-unit id="32aec8726d9c367982be756144168fc87f492e95" translate="yes" xml:space="preserve">
          <source>Given that, let's add the &lt;code&gt;show&lt;/code&gt; action, as follows:</source>
          <target state="translated">それでは、次のように &lt;code&gt;show&lt;/code&gt; アクションを追加しましょう。</target>
        </trans-unit>
        <trans-unit id="b7ac8764e49e76cfcb0fc291652f2bc5bdf4a0eb" translate="yes" xml:space="preserve">
          <source>Given the following example:</source>
          <target state="translated">以下の例を挙げてみます。</target>
        </trans-unit>
        <trans-unit id="389552619a6781692c29099a203a6e468e20a51d" translate="yes" xml:space="preserve">
          <source>Given the following spec-style test:</source>
          <target state="translated">次のようなスペックスタイルのテストがあるとします。</target>
        </trans-unit>
        <trans-unit id="88c397a72181cdf1b9001d06d761c2afb99bf224" translate="yes" xml:space="preserve">
          <source>Given this sub template rendering:</source>
          <target state="translated">このサブテンプレートのレンダリングを考えると</target>
        </trans-unit>
        <trans-unit id="abd13f2424b5dbd98afaf9ad7d1dc9cc1d4343e8" translate="yes" xml:space="preserve">
          <source>Given two users whose names are Alice and Bob, these snippets return:</source>
          <target state="translated">AliceとBobという名前の2人のユーザーがいると、これらのスニペットが返されます。</target>
        </trans-unit>
        <trans-unit id="4d3b54dbb1f86a7d7f15edbfcc2e7fc5c1ca123e" translate="yes" xml:space="preserve">
          <source>Given we have the following helper:</source>
          <target state="translated">以下のようなヘルパーがあることを考えると</target>
        </trans-unit>
        <trans-unit id="3e4771a70f8073ea8dcf61c54708cf344ffd2ef5" translate="yes" xml:space="preserve">
          <source>Gives a record (or N records if a parameter is supplied) from the collection using the same rules as &lt;code&gt;ActiveRecord::Base.take&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ActiveRecord::Base.take&lt;/code&gt; と同じルールを使用して、コレクションからレコード（またはパラメーターが指定されている場合はNレコード）を提供します。</target>
        </trans-unit>
        <trans-unit id="8ef2a670e16cab7529d5da079ce55c08cdbc8998" translate="yes" xml:space="preserve">
          <source>Gives a record (or N records if a parameter is supplied) without any implied order. The order will depend on the database implementation. If an order is supplied it will be respected.</source>
          <target state="translated">順番を指定せずにレコード(パラメータが与えられた場合はN個のレコード)を与えます。順序はデータベースの実装に依存します。順序が与えられた場合は、それが尊重されます。</target>
        </trans-unit>
        <trans-unit id="8fa26bab292e1a993d74ac3692566bba34040927" translate="yes" xml:space="preserve">
          <source>Giving:</source>
          <target state="translated">Giving:</target>
        </trans-unit>
        <trans-unit id="5620a923e866b40d2001fb3240dba8aff924e878" translate="yes" xml:space="preserve">
          <source>Global: The adapter has a global number of retries.</source>
          <target state="translated">Global:アダプタの再試行回数がグローバルになります。</target>
        </trans-unit>
        <trans-unit id="90dac42073c89880f87367ad522ce7647332062b" translate="yes" xml:space="preserve">
          <source>Global: The adapter is configured that all jobs have a maximum run time.</source>
          <target state="translated">グローバル:アダプタは、すべてのジョブの実行時間が最大になるように構成されています。</target>
        </trans-unit>
        <trans-unit id="050a77a4626ca8e62779f307f3c63c92c683ac27" translate="yes" xml:space="preserve">
          <source>GlobalID</source>
          <target state="translated">GlobalID</target>
        </trans-unit>
        <trans-unit id="32a0998460412d67f70be49117fc35cdc6386780" translate="yes" xml:space="preserve">
          <source>GlobalID allows serializing full Active Record objects passed to &lt;code&gt;#perform&lt;/code&gt;.</source>
          <target state="translated">GlobalIDを使用すると、 &lt;code&gt;#perform&lt;/code&gt; に渡された完全なActive Recordオブジェクトをシリアル化できます。</target>
        </trans-unit>
        <trans-unit id="a89ab28392fde147c222736c883c3f5fc29c7c6a" translate="yes" xml:space="preserve">
          <source>Go ahead and try to create a new article. You will see that it works exactly in the same way as before, except this time the engine is using the configuration setting in &lt;code&gt;config/initializers/blorgh.rb&lt;/code&gt; to learn what the class is.</source>
          <target state="translated">先に進んで、新しい記事を作成してみてください。エンジンが &lt;code&gt;config/initializers/blorgh.rb&lt;/code&gt; の構成設定を使用してクラスが何であるかを学習することを除いて、以前とまったく同じように機能することがわかります。</target>
        </trans-unit>
        <trans-unit id="88f7c7d1c5f5d1b08e319450a3b3337e37374d26" translate="yes" xml:space="preserve">
          <source>Go ahead now and create a new file at &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt; and write this content in it:</source>
          <target state="translated">&lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt; でapp / views / articles / new.html.erbに新しいファイルを作成し、その中にこのコンテンツを書き込みます。</target>
        </trans-unit>
        <trans-unit id="e388f8b17c1341f3309c6eac0061af6f1d47fe74" translate="yes" xml:space="preserve">
          <source>Go to your browser and open http://localhost:3000/high_scores, now we can create new high scores (55,160 on Space Invaders!)</source>
          <target state="translated">ブラウザにアクセスして http://localhost:3000/high_scores を開くと、新たなハイスコア(スペースインベーダーで55,160点!)を作成できるようになりました。</target>
        </trans-unit>
        <trans-unit id="53f49db1665a5321f40af3d739ac7227e46d3052" translate="yes" xml:space="preserve">
          <source>Good practice is to let the first declared status be the default.</source>
          <target state="translated">最初に宣言されたステータスをデフォルトにするのが良い方法です。</target>
        </trans-unit>
        <trans-unit id="eb9df2d051d9d6b5204be355d5c29f2013840fe3" translate="yes" xml:space="preserve">
          <source>Google Cloud Storage</source>
          <target state="translated">グーグルクラウドストレージ</target>
        </trans-unit>
        <trans-unit id="a8372a7747881325255f94033f532ed9743e473a" translate="yes" xml:space="preserve">
          <source>Google Cloud Storage Service</source>
          <target state="translated">グーグルクラウドストレージサービス</target>
        </trans-unit>
        <trans-unit id="d74e7c2308df27e696f521d8f773aeb727dc262e" translate="yes" xml:space="preserve">
          <source>Gotcha</source>
          <target state="translated">Gotcha</target>
        </trans-unit>
        <trans-unit id="6e4671d61eb476bb40713b341ebdaccac6e4351d" translate="yes" xml:space="preserve">
          <source>Granular Database Connection Switching</source>
          <target state="translated">粒度の高いデータベース接続切り替え</target>
        </trans-unit>
        <trans-unit id="8a9ffcc7f61bc62fd21688937de9fb20f512c95d" translate="yes" xml:space="preserve">
          <source>Great - now you are ready to start development.</source>
          <target state="translated">これで開発を開始する準備が整いました。</target>
        </trans-unit>
        <trans-unit id="edcda1569afef13d50bec2619d75f383573c843a" translate="yes" xml:space="preserve">
          <source>Great caution should be taken to avoid SQL injection vulnerabilities. This method should not be used with unsafe values such as request parameters or model attributes.</source>
          <target state="translated">SQLインジェクションの脆弱性を避けるために、細心の注意を払う必要があります。このメソッドは、リクエストパラメータやモデル属性のような安全でない値で使用すべきではありません。</target>
        </trans-unit>
        <trans-unit id="171a0606f7c74580fd3982cf57c49d604104120a" translate="yes" xml:space="preserve">
          <source>Group</source>
          <target state="translated">Group</target>
        </trans-unit>
        <trans-unit id="178f976ae6e8131ff978de4fef0a7bd137174a1a" translate="yes" xml:space="preserve">
          <source>Grouped values: This returns an ordered hash of the values and groups them. It takes either a column name, or the name of a belongs_to association.</source>
          <target state="translated">グループ化された値。これは、値の順序付きハッシュを返し、それらをグループ化します。カラム名、または belongs_to アソシエーションの名前のいずれかを受け取ります。</target>
        </trans-unit>
        <trans-unit id="2ae6967b07a45b63c8543a6c5e34052414ba32af" translate="yes" xml:space="preserve">
          <source>Grouping</source>
          <target state="translated">Grouping</target>
        </trans-unit>
        <trans-unit id="c0a01ca1d73c8e13f344f00fc479e53ecffc3670" translate="yes" xml:space="preserve">
          <source>Grouping Conditional validations</source>
          <target state="translated">グループ化 条件付き検証</target>
        </trans-unit>
        <trans-unit id="97f2b2d450684998345e2de61f9d535f4a3bd8da" translate="yes" xml:space="preserve">
          <source>Guesses the table name (in forced lower-case) based on the name of the class in the inheritance hierarchy descending directly from &lt;a href=&quot;../base&quot;&gt;&lt;code&gt;ActiveRecord::Base&lt;/code&gt;&lt;/a&gt;. So if the hierarchy looks like: Reply &amp;lt; Message &amp;lt; &lt;a href=&quot;../base&quot;&gt;&lt;code&gt;ActiveRecord::Base&lt;/code&gt;&lt;/a&gt;, then Message is used to guess the table name even when called on Reply. The rules used to do the guess are handled by the Inflector class in Active Support, which knows almost all common English inflections. You can add new inflections in config/initializers/inflections.rb.</source>
          <target state="translated">&lt;a href=&quot;../base&quot;&gt; &lt;code&gt;ActiveRecord::Base&lt;/code&gt; &lt;/a&gt;から直接派生する継承階層内のクラスの名前に基づいて、テーブル名を（強制的に小文字で）推測します。したがって、階層が次のようになっている場合：Reply &amp;lt;Message &amp;lt; &lt;a href=&quot;../base&quot;&gt; &lt;code&gt;ActiveRecord::Base&lt;/code&gt; &lt;/a&gt;場合、Replyで呼び出された場合でも、Messageを使用してテーブル名を推測します。推測に使用されるルールは、アクティブサポートのInflectorクラスによって処理されます。このクラスは、ほとんどすべての一般的な英語の語尾変化を認識しています。config / initializers /inflections.rbに新しい語尾変化を追加できます。</target>
        </trans-unit>
        <trans-unit id="0b012e8fe0312f55aa9ce7a03fd8e93b76427f27" translate="yes" xml:space="preserve">
          <source>Guesses the table name (in forced lower-case) based on the name of the class in the inheritance hierarchy descending directly from &lt;a href=&quot;../base&quot;&gt;ActiveRecord::Base&lt;/a&gt;. So if the hierarchy looks like: Reply &amp;lt; Message &amp;lt; &lt;a href=&quot;../base&quot;&gt;ActiveRecord::Base&lt;/a&gt;, then Message is used to guess the table name even when called on Reply. The rules used to do the guess are handled by the Inflector class in Active Support, which knows almost all common English inflections. You can add new inflections in config/initializers/inflections.rb.</source>
          <target state="translated">&lt;a href=&quot;../base&quot;&gt;ActiveRecord :: Base&lt;/a&gt;から直接派生する継承階層内のクラスの名前に基づいて、テーブル名（強制的に小文字）を推測します。したがって、階層がReply &amp;lt;Message &amp;lt; &lt;a href=&quot;../base&quot;&gt;ActiveRecord :: Baseのよう&lt;/a&gt;になっている場合、Replyで呼び出された場合でも、Messageを使用してテーブル名を推測します。推測を行うために使用されるルールは、ほとんどすべての一般的な英語の屈折を知っているアクティブサポートのInflectorクラスによって処理されます。config / initializers / inflections.rbで新しい活用形を追加できます。</target>
        </trans-unit>
        <trans-unit id="8cdb4dc902561946abe60d70595a5f96b8a4d5ac" translate="yes" xml:space="preserve">
          <source>Guide Assumptions</source>
          <target state="translated">ガイドの前提条件</target>
        </trans-unit>
        <trans-unit id="1f0bb8f5c7ab9c9d3769fc8a175739533090209d" translate="yes" xml:space="preserve">
          <source>Guide to using built-in Form helpers.</source>
          <target state="translated">組み込みのフォームヘルパーを使うためのガイド</target>
        </trans-unit>
        <trans-unit id="929a28d261428029e61c0f81c6161fd71ba0b2fe" translate="yes" xml:space="preserve">
          <source>Guides</source>
          <target state="translated">Guides</target>
        </trans-unit>
        <trans-unit id="a0352c52826a4d14df0e9e687a82cfab78be7042" translate="yes" xml:space="preserve">
          <source>Guides Guidelines</source>
          <target state="translated">ガイドガイドライン</target>
        </trans-unit>
        <trans-unit id="8373e1b0289be10ca8ff8b88270919a713491ef0" translate="yes" xml:space="preserve">
          <source>Guides marked with this icon are currently being worked on and will not be available in the Guides Index menu. While still useful, they may contain incomplete information and even errors. You can help by reviewing them and posting your comments and corrections.</source>
          <target state="translated">このアイコンでマークされたガイドは現在作業中であり、ガイドインデックスメニューでは利用できません。まだ有用ではありますが、不完全な情報や誤りが含まれている可能性があります。これらのガイドを確認し、コメントや修正を投稿することで支援することができます。</target>
        </trans-unit>
        <trans-unit id="955d157a7f2cd5316cdedbb365e1e22f300bf5dd" translate="yes" xml:space="preserve">
          <source>Gzip::compress</source>
          <target state="translated">Gzip::compress</target>
        </trans-unit>
        <trans-unit id="5d5a9feb84c1e7fa4e847d577835b38ebc389a05" translate="yes" xml:space="preserve">
          <source>Gzip::decompress</source>
          <target state="translated">Gzip::decompress</target>
        </trans-unit>
        <trans-unit id="82d5e015f4cfc7b7064351032f1c4371f19617b4" translate="yes" xml:space="preserve">
          <source>HABTM associations as inline lists</source>
          <target state="translated">インラインリストとしてのHABTM協会</target>
        </trans-unit>
        <trans-unit id="ce39116c719aafa3203ac9d5c9f428ef873585c9" translate="yes" xml:space="preserve">
          <source>HEAD requests: Rails will transparently convert &lt;code&gt;HEAD&lt;/code&gt; requests into &lt;code&gt;GET&lt;/code&gt; ones, and return just the headers on the way out. This makes &lt;code&gt;HEAD&lt;/code&gt; work reliably in all Rails APIs.</source>
          <target state="translated">HEADリクエスト：Railsは &lt;code&gt;HEAD&lt;/code&gt; リクエストを &lt;code&gt;GET&lt;/code&gt; リクエストに透過的に変換し、途中でヘッダーのみを返します。これにより、 &lt;code&gt;HEAD&lt;/code&gt; はすべてのRails APIで確実に機能します。</target>
        </trans-unit>
        <trans-unit id="15912dd8f47c22d99af0e6e9880e2be107cb13a2" translate="yes" xml:space="preserve">
          <source>HELP_MAPPINGS</source>
          <target state="translated">HELP_MAPPINGS</target>
        </trans-unit>
        <trans-unit id="87db6cd4da75a7a501827119f82964a6525c0ad9" translate="yes" xml:space="preserve">
          <source>HOST_REGEXP</source>
          <target state="translated">HOST_REGEXP</target>
        </trans-unit>
        <trans-unit id="e9ac0a50e82d2696b943d26cd993996262122463" translate="yes" xml:space="preserve">
          <source>HTML5 &lt;code&gt;data-*&lt;/code&gt; and &lt;code&gt;aria-*&lt;/code&gt; attributes can be set with a single &lt;code&gt;data&lt;/code&gt; or &lt;code&gt;aria&lt;/code&gt; key pointing to a hash of sub-attributes.</source>
          <target state="translated">HTML5 &lt;code&gt;aria-*&lt;/code&gt; &lt;code&gt;data-*&lt;/code&gt; およびaria- *属性は、サブ属性のハッシュを指す単一の &lt;code&gt;data&lt;/code&gt; または &lt;code&gt;aria&lt;/code&gt; キーで設定できます。</target>
        </trans-unit>
        <trans-unit id="14b15fe878db44741964a44cc701702acfe6018d" translate="yes" xml:space="preserve">
          <source>HTML5 &lt;code&gt;data-*&lt;/code&gt; attributes can be set with a single &lt;code&gt;data&lt;/code&gt; key pointing to a hash of sub-attributes.</source>
          <target state="translated">HTML5 &lt;code&gt;data-*&lt;/code&gt; 属性は、サブ属性のハッシュを指す単一の &lt;code&gt;data&lt;/code&gt; キーで設定できます。</target>
        </trans-unit>
        <trans-unit id="ad9ac846dd3d856a9250cc997bfc08184c2b6c7f" translate="yes" xml:space="preserve">
          <source>HTML_ESCAPE</source>
          <target state="translated">HTML_ESCAPE</target>
        </trans-unit>
        <trans-unit id="36a3616ea2c0c9a4588c3ff6486b261f393b451d" translate="yes" xml:space="preserve">
          <source>HTML_ESCAPE_ONCE_REGEXP</source>
          <target state="translated">HTML_ESCAPE_ONCE_REGEXP</target>
        </trans-unit>
        <trans-unit id="f8adf36ed0a0245994ceb732d9e6ba7ff121ad7f" translate="yes" xml:space="preserve">
          <source>HTTP Authentications</source>
          <target state="translated">HTTP 認証</target>
        </trans-unit>
        <trans-unit id="c9767763630d56f1c44e05a46f8c3471e80931df" translate="yes" xml:space="preserve">
          <source>HTTP Basic Authentication</source>
          <target state="translated">HTTP基本認証</target>
        </trans-unit>
        <trans-unit id="ede10debab277f68952d03434da199050db79940" translate="yes" xml:space="preserve">
          <source>HTTP Cache-Control Extensions for Stale Content. See &lt;a href=&quot;https://tools.ietf.org/html/rfc5861&quot;&gt;tools.ietf.org/html/rfc5861&lt;/a&gt; It helps to cache an asset and serve it while is being revalidated and/or returning with an error.</source>
          <target state="translated">古いコンテンツのHTTPキャッシュ制御拡張機能。&lt;a href=&quot;https://tools.ietf.org/html/rfc5861&quot;&gt;tools.ietf.org/html/rfc5861を&lt;/a&gt;参照してください。アセットがキャッシュされ、再検証中またはエラーで返されている間にアセットを提供するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="27c1a068bfb1fe446d77d76d24abc2bd0015defa" translate="yes" xml:space="preserve">
          <source>HTTP Cache-Control Extensions other values: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control&quot;&gt;developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control&lt;/a&gt; Any additional key-value pairs are concatenated onto the `Cache-Control` header in the response:</source>
          <target state="translated">HTTP Cache-Control Extensionsその他の値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control&quot;&gt;developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control&lt;/a&gt;追加のキーと値のペアは、応答の `Cache-Control`ヘッダーに連結されます。</target>
        </trans-unit>
        <trans-unit id="eb83352ed4084c1cd106c8e133556fa371d5994e" translate="yes" xml:space="preserve">
          <source>HTTP Content-Disposition field</source>
          <target state="translated">HTTPコンテンツディスポジションフィールド</target>
        </trans-unit>
        <trans-unit id="011efe93f0ebe0676b5950a39a21ff0e2e9465df" translate="yes" xml:space="preserve">
          <source>HTTP Content-Type field</source>
          <target state="translated">HTTPコンテンツタイプフィールド</target>
        </trans-unit>
        <trans-unit id="d8fd69cb5e8f5aea463b93958db64a99a9c2775b" translate="yes" xml:space="preserve">
          <source>HTTP Digest Authentication</source>
          <target state="translated">HTTTPダイジェスト認証</target>
        </trans-unit>
        <trans-unit id="c69a7a324f36557f45339d99a65fb6ffd4d42545" translate="yes" xml:space="preserve">
          <source>HTTP PATCH</source>
          <target state="translated">HTTP PATCH</target>
        </trans-unit>
        <trans-unit id="36992d0e69829522d18b4eac9598cb28eb58e746" translate="yes" xml:space="preserve">
          <source>HTTP Permissions Policy is a web standard for defining a mechanism to allow and deny the use of browser permissions in its own context, and in content within any &amp;lt;iframe&amp;gt; elements in the document.</source>
          <target state="translated">HTTP権限ポリシーは、独自のコンテキストで、およびドキュメント内の任意の&amp;lt;iframe&amp;gt;要素内のコンテンツでのブラウザ権限の使用を許可および拒否するメカニズムを定義するためのWeb標準です。</target>
        </trans-unit>
        <trans-unit id="f31b86dfebd506e755fd0821e0114d6cf7b14383" translate="yes" xml:space="preserve">
          <source>HTTP Status Code</source>
          <target state="translated">HTTPステータスコード</target>
        </trans-unit>
        <trans-unit id="fac9eccf4dad43580d7258a51a04d7903e303320" translate="yes" xml:space="preserve">
          <source>HTTP Token Authentication</source>
          <target state="translated">HTTTPトークン認証</target>
        </trans-unit>
        <trans-unit id="9e7e8330c132a4390643d48e5b3602a028852f31" translate="yes" xml:space="preserve">
          <source>HTTP Verb</source>
          <target state="translated">HTTP接続</target>
        </trans-unit>
        <trans-unit id="b9e4fbd7324dc264b88888204cf4cc1f86f14171" translate="yes" xml:space="preserve">
          <source>HTTP Verb Constraints</source>
          <target state="translated">HTTP動詞制約</target>
        </trans-unit>
        <trans-unit id="ef6dc325305d473c1de1fd708486583fc774e07f" translate="yes" xml:space="preserve">
          <source>HTTP basic authentication is an authentication scheme that is supported by the majority of browsers and other HTTP clients. As an example, consider an administration section which will only be available by entering a username and a password into the browser's HTTP basic dialog window. Using the built-in authentication is quite easy and only requires you to use one method, &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionController/HttpAuthentication/Basic/ControllerMethods/ClassMethods.html#method-i-http_basic_authenticate_with&quot;&gt;&lt;code&gt;http_basic_authenticate_with&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">HTTP基本認証は、大多数のブラウザやその他のHTTPクライアントでサポートされている認証スキームです。例として、ブラウザのHTTP基本ダイアログウィンドウにユーザー名とパスワードを入力することによってのみ利用できる管理セクションについて考えてみます。組み込みの認証の使用は非常に簡単で、&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionController/HttpAuthentication/Basic/ControllerMethods/ClassMethods.html#method-i-http_basic_authenticate_with&quot;&gt; &lt;code&gt;http_basic_authenticate_with&lt;/code&gt; という&lt;/a&gt;1つのメソッドを使用するだけで済みます。</target>
        </trans-unit>
        <trans-unit id="93accbd5be212aff8e88dab13a7b896238df4f83" translate="yes" xml:space="preserve">
          <source>HTTP basic authentication is an authentication scheme that is supported by the majority of browsers and other HTTP clients. As an example, consider an administration section which will only be available by entering a username and a password into the browser's HTTP basic dialog window. Using the built-in authentication is quite easy and only requires you to use one method, &lt;code&gt;http_basic_authenticate_with&lt;/code&gt;.</source>
          <target state="translated">HTTP基本認証は、大部分のブラウザーおよびその他のHTTPクライアントでサポートされている認証方式です。例として、ブラウザのHTTP基本ダイアログウィンドウにユーザー名とパスワードを入力することによってのみ利用できる管理セクションを考えます。組み込み認証の使用は非常に簡単で、1つのメソッド &lt;code&gt;http_basic_authenticate_with&lt;/code&gt; を使用するだけで済みます。</target>
        </trans-unit>
        <trans-unit id="f6469b03279a14aed9bd2b9c59596898ea7b324b" translate="yes" xml:space="preserve">
          <source>HTTP digest authentication is superior to the basic authentication as it does not require the client to send an unencrypted password over the network (though HTTP basic authentication is safe over HTTPS). Using digest authentication with Rails is quite easy and only requires using one method, &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionController/HttpAuthentication/Digest/ControllerMethods.html#method-i-authenticate_or_request_with_http_digest&quot;&gt;&lt;code&gt;authenticate_or_request_with_http_digest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">HTTPダイジェスト認証は、クライアントが暗号化されていないパスワードをネットワーク経由で送信する必要がないため、基本認証よりも優れています（ただし、HTTP基本認証はHTTPS経由で安全です）。Railsでのダイジェスト認証の使用は非常に簡単で、&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionController/HttpAuthentication/Digest/ControllerMethods.html#method-i-authenticate_or_request_with_http_digest&quot;&gt; &lt;code&gt;authenticate_or_request_with_http_digest&lt;/code&gt; という&lt;/a&gt;1つのメソッドを使用するだけで済みます。</target>
        </trans-unit>
        <trans-unit id="ab623ae55f29374a07b76a3428f0c3225f2f799a" translate="yes" xml:space="preserve">
          <source>HTTP digest authentication is superior to the basic authentication as it does not require the client to send an unencrypted password over the network (though HTTP basic authentication is safe over HTTPS). Using digest authentication with Rails is quite easy and only requires using one method, &lt;code&gt;authenticate_or_request_with_http_digest&lt;/code&gt;.</source>
          <target state="translated">HTTPダイジェスト認証は、クライアントが暗号化されていないパスワードをネットワーク経由で送信する必要がないため、基本認証よりも優れています（HTTP基本認証はHTTPS経由で安全です）。Railsでのダイジェスト認証の使用は非常に簡単で、1つのメソッド &lt;code&gt;authenticate_or_request_with_http_digest&lt;/code&gt; を使用するだけで済みます。</target>
        </trans-unit>
        <trans-unit id="91b3ccb3b9996cf9b462a1c7c4e6635d2a002dd7" translate="yes" xml:space="preserve">
          <source>HTTP request headers have a Referer, User-Agent (client software), and Cookie field, among others. Response headers for example have a status code, Cookie, and Location (redirection target URL) field. All of them are user-supplied and may be manipulated with more or less effort. &lt;em&gt;Remember to escape these header fields, too.&lt;/em&gt; For example when you display the user agent in an administration area.</source>
          <target state="translated">HTTPリクエストヘッダーには、特に、Referer、User-Agent（クライアントソフトウェア）、Cookieフィールドがあります。たとえば、応答ヘッダーには、ステータスコード、Cookie、および場所（リダイレクト先のURL）フィールドがあります。それらはすべてユーザー指定であり、多少の労力で操作できます。&lt;em&gt;これらのヘッダーフィールドもエスケープすることを忘れないでください。&lt;/em&gt;たとえば、ユーザーエージェントを管理領域に表示する場合です。</target>
        </trans-unit>
        <trans-unit id="19cc9c72e4b88a0525ade58484574776a186aded" translate="yes" xml:space="preserve">
          <source>HTTP request verb</source>
          <target state="translated">HTTP要求動詞</target>
        </trans-unit>
        <trans-unit id="cb08d01adf56fc4d8767569448c7a8d5ca881958" translate="yes" xml:space="preserve">
          <source>HTTP response code</source>
          <target state="translated">HTTP応答コード</target>
        </trans-unit>
        <trans-unit id="2f229ba9fad0819dad34757f276e176e1f9815df" translate="yes" xml:space="preserve">
          <source>HTTP status code</source>
          <target state="translated">HTTTPステータスコード</target>
        </trans-unit>
        <trans-unit id="3a75830da54cd8b938a1679e5d5892bb1805eb3c" translate="yes" xml:space="preserve">
          <source>HTTP token authentication is a scheme to enable the usage of Bearer tokens in the HTTP &lt;code&gt;Authorization&lt;/code&gt; header. There are many token formats available and describing them is outside the scope of this document.</source>
          <target state="translated">HTTPトークン認証は、 &lt;code&gt;Authorization&lt;/code&gt; ヘッダーでベアラートークンを使用できるようにするスキームです。利用可能なトークン形式は多数あり、それらの説明はこのドキュメントの範囲外です。</target>
        </trans-unit>
        <trans-unit id="a33a7041e144db3e9f136557018a94dafcd6e8b3" translate="yes" xml:space="preserve">
          <source>HTTP_HEADER</source>
          <target state="translated">HTTP_HEADER</target>
        </trans-unit>
        <trans-unit id="aaaaa9967509f992c9e76aaf3aa8641ebaca5a47" translate="yes" xml:space="preserve">
          <source>HTTP_IF_MODIFIED_SINCE</source>
          <target state="translated">HTTP_IF_MODIFIED_SINCE</target>
        </trans-unit>
        <trans-unit id="f5620d14a557b7e4e4951cf5f230f911421963f5" translate="yes" xml:space="preserve">
          <source>HTTP_IF_NONE_MATCH</source>
          <target state="translated">HTTP_IF_NONE_MATCH</target>
        </trans-unit>
        <trans-unit id="ddc6434c5363405a75a3b120922320cfa9174ca4" translate="yes" xml:space="preserve">
          <source>HTTP_METHODS</source>
          <target state="translated">HTTP_METHODS</target>
        </trans-unit>
        <trans-unit id="7ba7991c7e9b0c06056d248a990d17cf65c4e3f5" translate="yes" xml:space="preserve">
          <source>HTTP_METHOD_LOOKUP</source>
          <target state="translated">HTTP_METHOD_LOOKUP</target>
        </trans-unit>
        <trans-unit id="6a67696abadf4494234e52ba41755233e32c6e5c" translate="yes" xml:space="preserve">
          <source>Halting Callback Chains via &lt;code&gt;throw(:abort)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;throw(:abort)&lt;/code&gt; によるコールバックチェーンの停止</target>
        </trans-unit>
        <trans-unit id="45bdea3f6d6efdf596509d7649094d5edcc5bd35" translate="yes" xml:space="preserve">
          <source>Halting Execution</source>
          <target state="translated">実行停止</target>
        </trans-unit>
        <trans-unit id="f974e592e89067f6833c88b45402afd1f27eb9ab" translate="yes" xml:space="preserve">
          <source>Handled at the Action Pack layer:</source>
          <target state="translated">Action Pack レイヤで処理されます。</target>
        </trans-unit>
        <trans-unit id="c1f7ef16ff5f063412d9ad07b765e34ee745272c" translate="yes" xml:space="preserve">
          <source>Handled at the middleware layer:</source>
          <target state="translated">ミドルウェア層で処理されます。</target>
        </trans-unit>
        <trans-unit id="faa6e979983b7500b84dc1462eda1bdf1ef92aa2" translate="yes" xml:space="preserve">
          <source>Handlers are inherited. They are searched from right to left, from bottom to top, and up the hierarchy. The handler of the first class for which &lt;code&gt;exception.is_a?(klass)&lt;/code&gt; holds true is the one invoked, if any.</source>
          <target state="translated">ハンドラーは継承されます。それらは、右から左、下から上、そして階層の上に向かって検索されます。 &lt;code&gt;exception.is_a?(klass)&lt;/code&gt; がtrueを保持する最初のクラスのハンドラーは、呼び出されたものがあれば、それです。</target>
        </trans-unit>
        <trans-unit id="c6e4ab25a06595bbb69571a34dd1bf1bd4f4487c" translate="yes" xml:space="preserve">
          <source>Handlers that take one argument will be called with the exception, so that the exception can be inspected when dealing with it.</source>
          <target state="translated">1つの引数を取るハンドラは、例外を扱う際に例外を検査できるように、例外と一緒に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="981ada5c9cddef2256898f941de63ecc1ea8b17a" translate="yes" xml:space="preserve">
          <source>Handles default conversions: &lt;a href=&quot;conversion#method-i-to_model&quot;&gt;#to_model&lt;/a&gt;, &lt;a href=&quot;conversion#method-i-to_key&quot;&gt;#to_key&lt;/a&gt;, &lt;a href=&quot;conversion#method-i-to_param&quot;&gt;#to_param&lt;/a&gt;, and to_partial_path.</source>
          <target state="translated">デフォルトの変換を処理します：&lt;a href=&quot;conversion#method-i-to_model&quot;&gt;#to_model&lt;/a&gt;、&lt;a href=&quot;conversion#method-i-to_key&quot;&gt;#to_key&lt;/a&gt;、&lt;a href=&quot;conversion#method-i-to_param&quot;&gt;#to_param&lt;/a&gt;、およびto_partial_path。</target>
        </trans-unit>
        <trans-unit id="dd51f2d74d79693d0a0c4477c53e09350f20f50b" translate="yes" xml:space="preserve">
          <source>Handles default conversions: &lt;a href=&quot;conversion#method-i-to_model&quot;&gt;&lt;code&gt;to_model&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;conversion#method-i-to_key&quot;&gt;&lt;code&gt;to_key&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;conversion#method-i-to_param&quot;&gt;&lt;code&gt;to_param&lt;/code&gt;&lt;/a&gt;, and to_partial_path.</source>
          <target state="translated">デフォルトの変換を処理します：&lt;a href=&quot;conversion#method-i-to_model&quot;&gt; &lt;code&gt;to_model&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;conversion#method-i-to_key&quot;&gt; &lt;code&gt;to_key&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;conversion#method-i-to_param&quot;&gt; &lt;code&gt;to_param&lt;/code&gt; &lt;/a&gt;、およびto_partial_path。</target>
        </trans-unit>
        <trans-unit id="6c088c01de8e92d3e6a5a1ff4c8bd34e4f4c5c61" translate="yes" xml:space="preserve">
          <source>Handles four options: :redis block, :redis instance, single :url string, and multiple :url strings.</source>
          <target state="translated">redis ブロック、:redis インスタンス、単一の :url 文字列、複数の :url 文字列の 4 つのオプションを処理します。</target>
        </trans-unit>
        <trans-unit id="15e493a667af0a12a2088ff73d7f1abc345ac59d" translate="yes" xml:space="preserve">
          <source>Handles implicit rendering for a controller action that does not explicitly respond with &lt;code&gt;render&lt;/code&gt;, &lt;code&gt;respond_to&lt;/code&gt;, &lt;code&gt;redirect&lt;/code&gt;, or &lt;code&gt;head&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;render&lt;/code&gt; 、 &lt;code&gt;respond_to&lt;/code&gt; 、 &lt;code&gt;redirect&lt;/code&gt; 、または &lt;code&gt;head&lt;/code&gt; で明示的に応答しないコントローラーアクションの暗黙的なレンダリングを処理します。</target>
        </trans-unit>
        <trans-unit id="8cf53207644e0f94c219ce09d2810312780fcb0e" translate="yes" xml:space="preserve">
          <source>Has Many associations can be configured with the &lt;code&gt;:through&lt;/code&gt; option to use an explicit join model to retrieve the data. This operates similarly to a &lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;&lt;code&gt;has_and_belongs_to_many&lt;/code&gt;&lt;/a&gt; association. The advantage is that you're able to add validations, callbacks, and extra attributes on the join model. Consider the following schema:</source>
          <target state="translated">明示的結合モデルを使用してデータを取得するために、 &lt;code&gt;:through&lt;/code&gt; オプションを使用して多くの関連付けを構成できます。これは、&lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt; &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; &lt;/a&gt;アソシエーションと同様に機能します。利点は、結合モデルに検証、コールバック、および追加の属性を追加できることです。次のスキーマについて考えてみます。</target>
        </trans-unit>
        <trans-unit id="4d00068958b049897af8863507aef8fffa11b039" translate="yes" xml:space="preserve">
          <source>Has Many associations can be configured with the &lt;code&gt;:through&lt;/code&gt; option to use an explicit join model to retrieve the data. This operates similarly to a &lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;has_and_belongs_to_many&lt;/a&gt; association. The advantage is that you're able to add validations, callbacks, and extra attributes on the join model. Consider the following schema:</source>
          <target state="translated">多くの関連付けを &lt;code&gt;:through&lt;/code&gt; オプションで構成して、明示的な結合モデルを使用してデータを取得できます。これは、&lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;has_and_belongs_to_many&lt;/a&gt;アソシエーションと同様に機能します。利点は、結合モデルに検証、コールバック、および追加の属性を追加できることです。次のスキーマを検討してください。</target>
        </trans-unit>
        <trans-unit id="9b7d0ceea196c3867d88ad7e17445d26d315c6b7" translate="yes" xml:space="preserve">
          <source>Has and Belongs to Many join tables use the same idea, but add a &lt;code&gt;_join&lt;/code&gt; suffix:</source>
          <target state="translated">HasとBelongs to多くの結合テーブルは同じアイデアを使用しますが、 &lt;code&gt;_join&lt;/code&gt; サフィックスを追加します。</target>
        </trans-unit>
        <trans-unit id="873507a022b58de26a88deae87268cbd8d6af5b1" translate="yes" xml:space="preserve">
          <source>Hash</source>
          <target state="translated">Hash</target>
        </trans-unit>
        <trans-unit id="de500c888845b9525f70ae76cb2e474f7dd72bb7" translate="yes" xml:space="preserve">
          <source>Hash Conditions</source>
          <target state="translated">ハッシュ条件</target>
        </trans-unit>
        <trans-unit id="16fbe0617aca377fd0974c933b350b36c6eb99cf" translate="yes" xml:space="preserve">
          <source>Hash and Array Parameters</source>
          <target state="translated">ハッシュおよび配列パラメータ</target>
        </trans-unit>
        <trans-unit id="90b6d0759e161f6432798e090607dfe7507586f6" translate="yes" xml:space="preserve">
          <source>Hash of request parameters without any filtered parameter</source>
          <target state="translated">フィルタリングされたパラメータを含まないリクエストパラメータのハッシュ</target>
        </trans-unit>
        <trans-unit id="d72d75c1f21b1b1dab02be408b37ba2c173c7cf0" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess</source>
          <target state="translated">HashWithIndifferentAccess</target>
        </trans-unit>
        <trans-unit id="b2ce5bad9017e895965620a2409ed2bf71028b30" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#[]</source>
          <target state="translated">HashWithIndifferentAccess#[]</target>
        </trans-unit>
        <trans-unit id="eff6e5ee1587fa895efa7fb9d7e8bb3ee4c31fd9" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#[]=</source>
          <target state="translated">HashWithIndifferentAccess#[]=</target>
        </trans-unit>
        <trans-unit id="5eef16857de235c1d1ffe0f2766fa915cb4a64fe" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#assoc</source>
          <target state="translated">HashWithIndifferentAccess#assoc</target>
        </trans-unit>
        <trans-unit id="20e961d97a4793a2b43d5c131f013d7622aa0dc4" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#compact</source>
          <target state="translated">HashWithIndifferentAccess#compact</target>
        </trans-unit>
        <trans-unit id="5c24f1c516a8996973f18136e68644b4112343ee" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#convert_key</source>
          <target state="translated">HashWithIndifferentAccess#convert_key</target>
        </trans-unit>
        <trans-unit id="9a637647d7db5dfa08f32292bda301fe3b7f3401" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#convert_value</source>
          <target state="translated">HashWithIndifferentAccess#convert_value</target>
        </trans-unit>
        <trans-unit id="c63619bfe779ed7a22118fa134ac5623b45b6182" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#deep_stringify_keys</source>
          <target state="translated">HashWithIndifferentAccess#deep_stringify_keys</target>
        </trans-unit>
        <trans-unit id="0e25f52b400cd7358606af0226b79eb928ec0912" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#deep_stringify_keys!</source>
          <target state="translated">HashWithIndifferentAccess#deep_stringify_keys!</target>
        </trans-unit>
        <trans-unit id="daa889d711136cc9b2d69e5c6f956b1637ae0a15" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#deep_symbolize_keys</source>
          <target state="translated">HashWithIndifferentAccess#deep_symbolize_keys</target>
        </trans-unit>
        <trans-unit id="64e1be4c35bfc97a8a7e6e04930bc8bd4bbf8f61" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#default</source>
          <target state="translated">HashWithIndifferentAccess#default</target>
        </trans-unit>
        <trans-unit id="cecaff522051a75441f23fe40d57d3a6b389ffd9" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#delete</source>
          <target state="translated">HashWithIndifferentAccess#delete</target>
        </trans-unit>
        <trans-unit id="1b1f2aa3027e0c8c52c471aa6b8cd4d83459145b" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#dig</source>
          <target state="translated">HashWithIndifferentAccess#dig</target>
        </trans-unit>
        <trans-unit id="7e8d6aeaa4c62956a788736b56c0b15778ddbc46" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#dup</source>
          <target state="translated">HashWithIndifferentAccess#dup</target>
        </trans-unit>
        <trans-unit id="7bf62e408343f9176656b16c63f284aaaf2bec14" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#except</source>
          <target state="translated">HashWithIndifferentAccess#except</target>
        </trans-unit>
        <trans-unit id="2c6f5cf4baa3d797475b26890f0b6d7861208058" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#extractable_options?</source>
          <target state="translated">HashWithIndifferentAccess#extractable_options?</target>
        </trans-unit>
        <trans-unit id="f5df0b5482f96580d944326d7b2f83adc9c8f58c" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#fetch</source>
          <target state="translated">HashWithIndifferentAccess#fetch</target>
        </trans-unit>
        <trans-unit id="d8f71819faf10fef27c9d3eca66cf6675ef4f97d" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#fetch_values</source>
          <target state="translated">HashWithIndifferentAccess#fetch_values</target>
        </trans-unit>
        <trans-unit id="c18c5be04e19d60c7098955238c489acd5ea6b0d" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#has_key?</source>
          <target state="translated">HashWithIndifferentAccess#has_key?</target>
        </trans-unit>
        <trans-unit id="304df731dc3bc38aca517827407775bef179738b" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#include?</source>
          <target state="translated">HashWithIndifferentAccess#include?</target>
        </trans-unit>
        <trans-unit id="72f14b566d9688173d13d73b984a05e10caa964e" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#key?</source>
          <target state="translated">HashWithIndifferentAccess#key?</target>
        </trans-unit>
        <trans-unit id="b5b5b6c876b0c754fcbad9cf62aa13d9758952d3" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#member?</source>
          <target state="translated">HashWithIndifferentAccess#member?</target>
        </trans-unit>
        <trans-unit id="1422f40ea93594e69c323ad03fa3ff9b5315464f" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#merge</source>
          <target state="translated">HashWithIndifferentAccess#merge</target>
        </trans-unit>
        <trans-unit id="e1479727c5734dd686bca4b5b24c3a72fc70df88" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#merge!</source>
          <target state="translated">HashWithIndifferentAccess#merge!</target>
        </trans-unit>
        <trans-unit id="b1d1083b9dce51fe92ee5b7fa79ba35385d48076" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#nested_under_indifferent_access</source>
          <target state="translated">HashWithIndifferentAccess#nested_under_indifferent_access</target>
        </trans-unit>
        <trans-unit id="bc35bad7dbabdc878fbbe1792352254d39f37d66" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#regular_update</source>
          <target state="translated">HashWithIndifferentAccess#regular_update</target>
        </trans-unit>
        <trans-unit id="634a42514fbdb3622bdc3c90aa62c6dab80651c2" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#regular_writer</source>
          <target state="translated">HashWithIndifferentAccess#regular_writer</target>
        </trans-unit>
        <trans-unit id="37c7ad2acac666cf642bb1d3a30b2f8f9b89ae8c" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#reject</source>
          <target state="translated">HashWithIndifferentAccess#reject</target>
        </trans-unit>
        <trans-unit id="d75689c40f5de22aab9646b03256ec77f45b2953" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#replace</source>
          <target state="translated">HashWithIndifferentAccess#replace</target>
        </trans-unit>
        <trans-unit id="6ebbb730d371b7212865535d462d14ba81ea0a41" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#reverse_merge</source>
          <target state="translated">HashWithIndifferentAccess#reverse_merge</target>
        </trans-unit>
        <trans-unit id="dc3a79455e9e5c2ef204cfc943ed4eac332e09df" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#reverse_merge!</source>
          <target state="translated">HashWithIndifferentAccess#reverse_merge!</target>
        </trans-unit>
        <trans-unit id="d46f18dd3ee2ab829ac9950c4cbcfb70e14f77b2" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#select</source>
          <target state="translated">HashWithIndifferentAccess#select</target>
        </trans-unit>
        <trans-unit id="773d7a1f890a6474d0d3e9f26ac9bbfd411de5ce" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#set_defaults</source>
          <target state="translated">HashWithIndifferentAccess#set_defaults</target>
        </trans-unit>
        <trans-unit id="65e57d26a20f0dd1b7e22e601fb4635311095aff" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#slice</source>
          <target state="translated">HashWithIndifferentAccess#slice</target>
        </trans-unit>
        <trans-unit id="4b72f88cfe45f0be70cf1416f242769930f3c3f2" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#slice!</source>
          <target state="translated">HashWithIndifferentAccess#slice!</target>
        </trans-unit>
        <trans-unit id="8d414c273edb6505b3d89a347dc055fe67a16247" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#store</source>
          <target state="translated">HashWithIndifferentAccess#store</target>
        </trans-unit>
        <trans-unit id="76547d151b2cef05b8ee5411f0e46898b5a71608" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#stringify_keys</source>
          <target state="translated">HashWithIndifferentAccess#stringify_keys</target>
        </trans-unit>
        <trans-unit id="da1b2b24f9bbf06ae3732e481fd9d43a047d93a3" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#stringify_keys!</source>
          <target state="translated">HashWithIndifferentAccess#stringify_keys!</target>
        </trans-unit>
        <trans-unit id="0ca81eb400a9a5daf6057cca325c34e3560c0dce" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#symbolize_keys</source>
          <target state="translated">HashWithIndifferentAccess#symbolize_keys</target>
        </trans-unit>
        <trans-unit id="0cf53c77cf0a224aa373c87f5c6652457e6d281d" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#to_hash</source>
          <target state="translated">HashWithIndifferentAccess#to_hash</target>
        </trans-unit>
        <trans-unit id="a77399bcd3002e7bd4afc40978f8c952f86611f4" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#to_options</source>
          <target state="translated">HashWithIndifferentAccess#to_options</target>
        </trans-unit>
        <trans-unit id="59251d46df0f21d43bf9a9ed82bd90b71000ea19" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#to_options!</source>
          <target state="translated">HashWithIndifferentAccess#to_options!</target>
        </trans-unit>
        <trans-unit id="b5c625a61a4dd3d220aabf3940768a9dc20862fa" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#transform_keys</source>
          <target state="translated">HashWithIndifferentAccess#transform_keys</target>
        </trans-unit>
        <trans-unit id="2f30f88fedbf8ad8e0d2ca7f571e7b59a5be0eed" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#transform_keys!</source>
          <target state="translated">HashWithIndifferentAccess#transform_keys!</target>
        </trans-unit>
        <trans-unit id="2885146f9ddba99ae75b35dc9420cca9f7d904e5" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#transform_values</source>
          <target state="translated">HashWithIndifferentAccess#transform_values</target>
        </trans-unit>
        <trans-unit id="58ee5ebccd6222367815f75d70c21333a46200d4" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#update</source>
          <target state="translated">HashWithIndifferentAccess#update</target>
        </trans-unit>
        <trans-unit id="a10afb047361609ac3ebe3f17ff2ebffe8fe877f" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#values_at</source>
          <target state="translated">HashWithIndifferentAccess#values_at</target>
        </trans-unit>
        <trans-unit id="71916e4f49448be040a519ef2010578c9c92b202" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#with_defaults</source>
          <target state="translated">HashWithIndifferentAccess#with_defaults</target>
        </trans-unit>
        <trans-unit id="846f5481433672f625144b8fbd61fff8bfa58dae" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#with_defaults!</source>
          <target state="translated">HashWithIndifferentAccess#with_defaults!</target>
        </trans-unit>
        <trans-unit id="f5852ab03e9b5bdc1833b7178166ebbb8bdab523" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#with_indifferent_access</source>
          <target state="translated">HashWithIndifferentAccess#with_indifferent_access</target>
        </trans-unit>
        <trans-unit id="141dadfad2679bf9fff5525224773643980e7ee0" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#without</source>
          <target state="translated">HashWithIndifferentAccess#without</target>
        </trans-unit>
        <trans-unit id="23048037e00544a6b7468ad170290ee5af2e9a62" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess::[]</source>
          <target state="translated">HashWithIndifferentAccess::[]</target>
        </trans-unit>
        <trans-unit id="d9ee48ddb9fc7bb0ec6e7411c0b25188018c89f3" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess::new</source>
          <target state="translated">HashWithIndifferentAccess::new</target>
        </trans-unit>
        <trans-unit id="3164781605535298ed2be2a29f3cd66c7040b296" translate="yes" xml:space="preserve">
          <source>Hashes also respond to &lt;code&gt;to_query&lt;/code&gt; but with a different signature. If no argument is passed a call generates a sorted series of key/value assignments calling &lt;code&gt;to_query(key)&lt;/code&gt; on its values. Then it joins the result with &quot;&amp;amp;&quot;:</source>
          <target state="translated">ハッシュも &lt;code&gt;to_query&lt;/code&gt; に応答しますが、署名は異なります。引数が渡されない場合、呼び出しは、その値に対して &lt;code&gt;to_query(key)&lt;/code&gt; を呼び出す並べ替えられた一連のキー/値割り当てを生成します。次に、結果を「＆」で結合します。</target>
        </trans-unit>
        <trans-unit id="51f2135cd5661b7f8f797ba140c1d8f696fafd04" translate="yes" xml:space="preserve">
          <source>Hashes can be nested as many levels as required, for example:</source>
          <target state="translated">ハッシュは、例えば、必要な数だけ入れ子にすることができます。</target>
        </trans-unit>
        <trans-unit id="265eb70fb4d686c6a45cfd4ca00df9ce9e63c133" translate="yes" xml:space="preserve">
          <source>Hashes with integer keys are treated differently, and you can declare the attributes as if they were direct children. You get these kinds of parameters when you use &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt; in combination with a &lt;code&gt;has_many&lt;/code&gt; association:</source>
          <target state="translated">整数キーのハッシュは異なる方法で処理され、属性を直接の子であるかのように宣言できます。あなたが使用するときには、パラメータのこれらの種類を取得 &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt; との組み合わせで &lt;code&gt;has_many&lt;/code&gt; のの会：</target>
        </trans-unit>
        <trans-unit id="381e704542d9d74c4b012c421315c1cd85eb9d98" translate="yes" xml:space="preserve">
          <source>Have a &lt;code&gt;translation-missing&lt;/code&gt; class applied</source>
          <target state="translated">持っている &lt;code&gt;translation-missing&lt;/code&gt; クラスが適用されます</target>
        </trans-unit>
        <trans-unit id="f70f562d1ffb3860fbdc0282427656277df60389" translate="yes" xml:space="preserve">
          <source>Have a look at the generators help output for further details.</source>
          <target state="translated">詳細については、発電機のヘルプ出力をご覧ください。</target>
        </trans-unit>
        <trans-unit id="f578c55b6f03f0a711cc5295d86a1c3ebda9d9a4" translate="yes" xml:space="preserve">
          <source>Have a look at various gems which simplify working with routes: &lt;a href=&quot;https://github.com/svenfuchs/routing-filter/tree/master&quot;&gt;routing_filter&lt;/a&gt;, &lt;a href=&quot;https://github.com/francesc/rails-translate-routes&quot;&gt;rails-translate-routes&lt;/a&gt;, &lt;a href=&quot;https://github.com/enriclluelles/route_translator&quot;&gt;route_translator&lt;/a&gt;.</source>
          <target state="translated">ルートの操作を簡素化するさまざまなgemを見てください：&lt;a href=&quot;https://github.com/svenfuchs/routing-filter/tree/master&quot;&gt;routing_filter&lt;/a&gt;、&lt;a href=&quot;https://github.com/francesc/rails-translate-routes&quot;&gt;rails-translate-routes&lt;/a&gt;、&lt;a href=&quot;https://github.com/enriclluelles/route_translator&quot;&gt;route_translator&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="efee3f622d7f432ec6b884a1beab008da63e1629" translate="yes" xml:space="preserve">
          <source>Have a titleized version of the last key segment as text</source>
          <target state="translated">最後のキーセグメントのタイトル化されたバージョンをテキストとして持つ</target>
        </trans-unit>
        <trans-unit id="9a3aa20fbb9238e4176e03594d12d5c6b257d499" translate="yes" xml:space="preserve">
          <source>Having</source>
          <target state="translated">Having</target>
        </trans-unit>
        <trans-unit id="907db8b36bf28fccdc7e59f42a0a9cc5f14e2788" translate="yes" xml:space="preserve">
          <source>Having one single place in the admin interface or Intranet, where the input has not been sanitized, makes the entire application vulnerable. Possible exploits include stealing the privileged administrator's cookie, injecting an iframe to steal the administrator's password or installing malicious software through browser security holes to take over the administrator's computer.</source>
          <target state="translated">管理者インターフェイスやイントラネットで、入力がサニタイズされていない場所を一箇所だけ持つことで、アプリケーション全体が脆弱になります。考えられる悪用には、特権を持つ管理者のクッキーを盗んだり、iframe を注入して管理者のパスワードを盗んだり、ブラウザのセキュリティホールから悪意のあるソフトウェアをインストールして管理者のコンピュータを乗っ取ったりすることが含まれます。</target>
        </trans-unit>
        <trans-unit id="8fe010f51069ff2fa24a1ce1349e7621e928fc07" translate="yes" xml:space="preserve">
          <source>Head#head</source>
          <target state="translated">Head#head</target>
        </trans-unit>
        <trans-unit id="58792c9cd9ad18f62c1d9f9c5ed6d5383229402f" translate="yes" xml:space="preserve">
          <source>Header Injection</source>
          <target state="translated">ヘッダーインジェクション</target>
        </trans-unit>
        <trans-unit id="2741031dcc963de361fe2b4a580cf216eabae8c0" translate="yes" xml:space="preserve">
          <source>Header and Redirection Responses: &lt;code&gt;head :no_content&lt;/code&gt; and &lt;code&gt;redirect_to user_url(current_user)&lt;/code&gt; come in handy. Sure, you could manually add the response headers, but why?</source>
          <target state="translated">ヘッダーとリダイレクトの応答： &lt;code&gt;head :no_content&lt;/code&gt; と &lt;code&gt;redirect_to user_url(current_user)&lt;/code&gt; が便利です。もちろん、手動で応答ヘッダーを追加することもできますが、それはなぜですか？</target>
        </trans-unit>
        <trans-unit id="d6cc36014478aa161802167e872d45a5e90ea507" translate="yes" xml:space="preserve">
          <source>Headers used for the response.</source>
          <target state="translated">レスポンスに使用されるヘッダ。</target>
        </trans-unit>
        <trans-unit id="1545de843c9a0e8ab0a4fdfbce6b9e5ebb93f99c" translate="yes" xml:space="preserve">
          <source>Headers, cookies, session and flash</source>
          <target state="translated">ヘッダー、クッキー、セッション、フラッシュ</target>
        </trans-unit>
        <trans-unit id="ad5ded5f87be4c57f718448abe2a23e9e044035a" translate="yes" xml:space="preserve">
          <source>Headless browsers such as headless Chrome and headless Firefox are also supported. You can use these browsers by setting the &lt;code&gt;:using&lt;/code&gt; argument to &lt;code&gt;:headless_chrome&lt;/code&gt; or &lt;code&gt;:headless_firefox&lt;/code&gt;.</source>
          <target state="translated">ヘッドレスChromeやヘッドレスFirefoxなどのヘッドレスブラウザーもサポートされています。これらのブラウザを使用するには、 &lt;code&gt;:using&lt;/code&gt; 引数を &lt;code&gt;:headless_chrome&lt;/code&gt; または &lt;code&gt;:headless_firefox&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="f81c3e5ae1c64bf416fdcbeec05e32433c3ba356" translate="yes" xml:space="preserve">
          <source>Height (pixels)</source>
          <target state="translated">高さ(ピクセル</target>
        </trans-unit>
        <trans-unit id="3c9bf814630d8f16602f8937c25f9740dc4fb12a" translate="yes" xml:space="preserve">
          <source>Hello, Rails!</source>
          <target state="translated">こんにちは、Railsです。</target>
        </trans-unit>
        <trans-unit id="584bc47f311fd255840fde0c603be582895837c0" translate="yes" xml:space="preserve">
          <source>Helper methods defined in a fixture will not be available in other fixtures, to prevent against unwanted inter-test dependencies. Methods used by multiple fixtures should be defined in a module that is included in &lt;a href=&quot;fixtureset#method-c-context_class&quot;&gt;::context_class&lt;/a&gt;.</source>
          <target state="translated">フィクスチャで定義されたヘルパーメソッドは、他のフィクスチャでは使用できなくなり、不要なテスト間の依存関係を防ぎます。複数のフィクスチャが使用するメソッドは、&lt;a href=&quot;fixtureset#method-c-context_class&quot;&gt;:: context_classに&lt;/a&gt;含まれるモジュールで定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="944adb13441b2a384d1a30bf14038093e278736b" translate="yes" xml:space="preserve">
          <source>Helper methods defined in a fixture will not be available in other fixtures, to prevent against unwanted inter-test dependencies. Methods used by multiple fixtures should be defined in a module that is included in &lt;a href=&quot;fixtureset#method-c-context_class&quot;&gt;&lt;code&gt;ActiveRecord::FixtureSet.context_class&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">フィクスチャで定義されたヘルパーメソッドは、不要なテスト間の依存関係を防ぐために、他のフィクスチャでは使用できません。複数のフィクスチャで使用されるメソッドは、&lt;a href=&quot;fixtureset#method-c-context_class&quot;&gt; &lt;code&gt;ActiveRecord::FixtureSet.context_class&lt;/code&gt; &lt;/a&gt;含まれているモジュールで定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="d856b215c5b98c2e768952e8308189eb7983790e" translate="yes" xml:space="preserve">
          <source>Helper methods that are used in multiple fixtures should be defined on modules included in the newly introduced &lt;code&gt;ActiveRecord::FixtureSet.context_class&lt;/code&gt;, in &lt;code&gt;test_helper.rb&lt;/code&gt;.</source>
          <target state="translated">複数の器具で使用されるヘルパーメソッドは、新たに導入されたに含まれるモジュールで定義されなければならない &lt;code&gt;ActiveRecord::FixtureSet.context_class&lt;/code&gt; に、 &lt;code&gt;test_helper.rb&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="95e27e90c9ddda9298df7ee176ce808480c0035e" translate="yes" xml:space="preserve">
          <source>Helper to define a test method using a &lt;a href=&quot;../../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;. Under the hood, it replaces spaces with underscores and defines the test method.</source>
          <target state="translated">&lt;a href=&quot;../../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;を使用してテストメソッドを定義するヘルパー。内部では、スペースをアンダースコアに置き換え、テスト方法を定義します。</target>
        </trans-unit>
        <trans-unit id="1694c6bd2c7e62fb66cc5082c18a33a04ccaf4aa" translate="yes" xml:space="preserve">
          <source>Helper to define a test method using a &lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;. Under the hood, it replaces spaces with underscores and defines the test method.</source>
          <target state="translated">&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;を使用してテストメソッドを定義するヘルパー。内部的には、スペースをアンダースコアに置き換え、テストメソッドを定義します。</target>
        </trans-unit>
        <trans-unit id="3c9b3433e6f225e4ae00ef2041d44d91bfbf7113" translate="yes" xml:space="preserve">
          <source>Helpers</source>
          <target state="translated">Helpers</target>
        </trans-unit>
        <trans-unit id="68bd3ed8c8c90fe0599039a2240a4f80e1103359" translate="yes" xml:space="preserve">
          <source>Helpers Available for Integration Tests</source>
          <target state="translated">統合テストで利用できるヘルパー</target>
        </trans-unit>
        <trans-unit id="f91ba5b56d1cd987054ac0144f79857a91d9f134" translate="yes" xml:space="preserve">
          <source>Helpers Loading Order</source>
          <target state="translated">ヘルパーの読み込み順序</target>
        </trans-unit>
        <trans-unit id="f63132c1b12a21e5430733a20d6a1ea0981d3987" translate="yes" xml:space="preserve">
          <source>Helpers for Generating Form Elements</source>
          <target state="translated">フォーム要素を生成するためのヘルパー</target>
        </trans-unit>
        <trans-unit id="138342faf6285637dafaa36973b46b9cce8c7441" translate="yes" xml:space="preserve">
          <source>Helpers for creating and wrapping delivery behavior, used by &lt;a href=&quot;../deliverymethods&quot;&gt;&lt;code&gt;DeliveryMethods&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../deliverymethods&quot;&gt; &lt;code&gt;DeliveryMethods&lt;/code&gt; &lt;/a&gt;で使用される、配信動作を作成およびラップするためのヘルパー。</target>
        </trans-unit>
        <trans-unit id="ebf767f6f26b147b1953cc19995728bce91f2bb2" translate="yes" xml:space="preserve">
          <source>Helpers for creating and wrapping delivery behavior, used by &lt;a href=&quot;../deliverymethods&quot;&gt;DeliveryMethods&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../deliverymethods&quot;&gt;DeliveryMethods&lt;/a&gt;によって使用される、配信動作を作成およびラップするためのヘルパー。</target>
        </trans-unit>
        <trans-unit id="3f00b1daf2776db2287e400580db83e08fcd1249" translate="yes" xml:space="preserve">
          <source>Helpers take that into account:</source>
          <target state="translated">ヘルパーはそれを考慮しています。</target>
        </trans-unit>
        <trans-unit id="a9dee7e2937366b368124619d842a4d982d51c1c" translate="yes" xml:space="preserve">
          <source>Helpers#helpers</source>
          <target state="translated">Helpers#helpers</target>
        </trans-unit>
        <trans-unit id="e85eb95a10d59ab23a3eee9eff7fb360830896c4" translate="yes" xml:space="preserve">
          <source>Helpers::ActionCableHelper</source>
          <target state="translated">Helpers::ActionCableHelper</target>
        </trans-unit>
        <trans-unit id="d6e512b0f5036fcc01a8f3b100b7f135c68f72d7" translate="yes" xml:space="preserve">
          <source>Helpers::ActionCableHelper#action_cable_meta_tag</source>
          <target state="translated">Helpers::ActionCableHelper#action_cable_meta_tag</target>
        </trans-unit>
        <trans-unit id="8899ee8677568f42c9568e455fc9d15a5a623cb8" translate="yes" xml:space="preserve">
          <source>Helpers::ClassMethods</source>
          <target state="translated">Helpers::ClassMethods</target>
        </trans-unit>
        <trans-unit id="8bcd4a1c3ba2cbb0f21b7830eb74e08e6fe8e274" translate="yes" xml:space="preserve">
          <source>Helpers::ClassMethods#all_helpers_from_path</source>
          <target state="translated">Helpers::ClassMethods#all_helpers_from_path</target>
        </trans-unit>
        <trans-unit id="f48d03c8b6f757221ee385ef0a0e05af3e65fe29" translate="yes" xml:space="preserve">
          <source>Helpers::ClassMethods#clear_helpers</source>
          <target state="translated">Helpers::ClassMethods#clear_helpers</target>
        </trans-unit>
        <trans-unit id="a2100b8e8e46892bc01a8398949859790f914b67" translate="yes" xml:space="preserve">
          <source>Helpers::ClassMethods#helper</source>
          <target state="translated">Helpers::ClassMethods#helper</target>
        </trans-unit>
        <trans-unit id="c326de252cc32514e7232dcf94c6fd3ee10a4a4a" translate="yes" xml:space="preserve">
          <source>Helpers::ClassMethods#helper_attr</source>
          <target state="translated">Helpers::ClassMethods#helper_attr</target>
        </trans-unit>
        <trans-unit id="19d90c7af1e162e42e543fec068621f397457ccc" translate="yes" xml:space="preserve">
          <source>Helpers::ClassMethods#helper_method</source>
          <target state="translated">Helpers::ClassMethods#helper_method</target>
        </trans-unit>
        <trans-unit id="3e1c793a557410da00e8d2a96fa99b3343aa143c" translate="yes" xml:space="preserve">
          <source>Helpers::ClassMethods#helpers</source>
          <target state="translated">Helpers::ClassMethods#helpers</target>
        </trans-unit>
        <trans-unit id="0e0d92bc0785226fc77c402d2306d326fdb326e8" translate="yes" xml:space="preserve">
          <source>Helpers::ClassMethods#inherited</source>
          <target state="translated">Helpers::ClassMethods#inherited</target>
        </trans-unit>
        <trans-unit id="c7a5efcc3137e8bd21a56fd16f8fd834b5682b5f" translate="yes" xml:space="preserve">
          <source>Helpers::ClassMethods#modules_for_helpers</source>
          <target state="translated">Helpers::ClassMethods#modules_for_helpers</target>
        </trans-unit>
        <trans-unit id="6132537b957a1b9c2be9793ed7d23dc54a8786cb" translate="yes" xml:space="preserve">
          <source>Helpers::FormOptions can be used to create common select boxes such as countries, time zones, or associated records. &lt;code&gt;option_tags&lt;/code&gt; is a string containing the option tags for the select box.</source>
          <target state="translated">Helpers :: FormOptionsを使用して、国、タイムゾーン、または関連するレコードなどの一般的な選択ボックスを作成できます。 &lt;code&gt;option_tags&lt;/code&gt; は、選択ボックスのオプションタグを含む文字列です。</target>
        </trans-unit>
        <trans-unit id="bbb7bd69aece47e03619a31a95172b691b2ac552" translate="yes" xml:space="preserve">
          <source>Helpers::helpers_path</source>
          <target state="translated">Helpers::helpers_path</target>
        </trans-unit>
        <trans-unit id="7504cfeb596c4a08f7a28e342e61f35a70821fc6" translate="yes" xml:space="preserve">
          <source>Hence the inherited default for &lt;code&gt;if&lt;/code&gt; key is ignored.</source>
          <target state="translated">したがって、 &lt;code&gt;if&lt;/code&gt; キーの継承されたデフォルトは無視されます。</target>
        </trans-unit>
        <trans-unit id="4ea11b1c8330a9a3742ae05f6273b6dc889e3772" translate="yes" xml:space="preserve">
          <source>Hence, the cookie serves as temporary authentication for the web application. Anyone who seizes a cookie from someone else, may use the web application as this user - with possibly severe consequences. Here are some ways to hijack a session, and their countermeasures:</source>
          <target state="translated">したがって、クッキーはウェブアプリケーションの一時的な認証として機能します。誰か他の人からクッキーを奪った人は、このユーザとしてウェブアプリケーションを使うことができます-厳しい結果になる可能性があります。ここではセッションをハイジャックするいくつかの方法とその対策を紹介します。</target>
        </trans-unit>
        <trans-unit id="7c641acbeda6658db97785a6cff74357b42244df" translate="yes" xml:space="preserve">
          <source>Here &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionCable/Connection/Identification/ClassMethods.html#method-i-identified_by&quot;&gt;&lt;code&gt;identified_by&lt;/code&gt;&lt;/a&gt; designates a connection identifier that can be used to find the specific connection later. Note that anything marked as an identifier will automatically create a delegate by the same name on any channel instances created off the connection.</source>
          <target state="translated">ここで&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionCable/Connection/Identification/ClassMethods.html#method-i-identified_by&quot;&gt; &lt;code&gt;identified_by&lt;/code&gt; &lt;/a&gt;は、後で特定の接続を見つけるために使用できる接続識別子を指定します。識別子としてマークされたものはすべて、接続から作成されたチャネルインスタンスに同じ名前のデリゲートを自動的に作成することに注意してください。</target>
        </trans-unit>
        <trans-unit id="07aa6da987d280ae7b82018fa39c5f1855b30642" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;identified_by&lt;/code&gt; is a connection identifier that can be used to find the specific connection later. Note that anything marked as an identifier will automatically create a delegate by the same name on any channel instances created off the connection.</source>
          <target state="translated">ここで、 &lt;code&gt;identified_by&lt;/code&gt; は、後で特定の接続を見つけるために使用できる接続識別子です。識別子としてマークされたものはすべて、接続から作成されたチャネルインスタンス上に同じ名前のデリゲートを自動的に作成することに注意してください。</target>
        </trans-unit>
        <trans-unit id="74e0c48806a48728057b61d6f2796338900252d7" translate="yes" xml:space="preserve">
          <source>Here are a few things you should know to make efficient use of Active Record associations in your Rails applications:</source>
          <target state="translated">RailsアプリケーションでActive Recordの関連付けを効率的に利用するために知っておくべきことをいくつかご紹介します。</target>
        </trans-unit>
        <trans-unit id="c12152a97b9a617a0af5aea0f358b292c093cd0f" translate="yes" xml:space="preserve">
          <source>Here are some basic examples:</source>
          <target state="translated">基本的な例をご紹介します。</target>
        </trans-unit>
        <trans-unit id="fc85570b4d4afba73d85a2f439ce8b52170cfb2d" translate="yes" xml:space="preserve">
          <source>Here are some helpful links to help you learn even more:</source>
          <target state="translated">ここでは、あなたがさらに学ぶのに役立つリンクをいくつかご紹介します。</target>
        </trans-unit>
        <trans-unit id="cd76e26ace39a530f41554d038ef93343d8a5238" translate="yes" xml:space="preserve">
          <source>Here are some ideas how to hide honeypot fields by JavaScript and/or CSS:</source>
          <target state="translated">JavaScriptやCSSでハニーポットフィールドを非表示にする方法をご紹介します。</target>
        </trans-unit>
        <trans-unit id="e67521c415bb2432dbb38db65f67dba3f7aae0d6" translate="yes" xml:space="preserve">
          <source>Here are some values for this header for some popular servers, once these servers are configured to support accelerated file sending:</source>
          <target state="translated">これらのサーバが高速ファイル送信をサポートするように設定されている場合の、いくつかの一般的なサーバのためのこのヘッダの値を以下に示します。</target>
        </trans-unit>
        <trans-unit id="b91cb933bf987d931241a38fe9eb88af50ab973d" translate="yes" xml:space="preserve">
          <source>Here is a &quot;real&quot; example from the Active Support &lt;code&gt;en.yml&lt;/code&gt; translations YAML file:</source>
          <target state="translated">アクティブサポート &lt;code&gt;en.yml&lt;/code&gt; の翻訳YAMLファイルからの「実際の」例を次に示します。</target>
        </trans-unit>
        <trans-unit id="87b503ee6f76be5b3f344961161f897b4c2e8a33" translate="yes" xml:space="preserve">
          <source>Here is a basic example:</source>
          <target state="translated">基本的な例を紹介します。</target>
        </trans-unit>
        <trans-unit id="da69e51df37a243bb1979e2bf5a469da335b1108" translate="yes" xml:space="preserve">
          <source>Here is a full-length RSS example actually used on Basecamp:</source>
          <target state="translated">実際にBasecampで使用しているRSSの例を全文紹介します。</target>
        </trans-unit>
        <trans-unit id="31dd4d8d027f2c0094d297ba485faaf587bf3057" translate="yes" xml:space="preserve">
          <source>Here is a list of common headers:</source>
          <target state="translated">一般的なヘッダの一覧です。</target>
        </trans-unit>
        <trans-unit id="2b83699e6510ef2f4568f7cfb45c217f820f6299" translate="yes" xml:space="preserve">
          <source>Here is a list with all the available Active Record callbacks, listed in the same order in which they will get called during the respective operations:</source>
          <target state="translated">利用可能なすべてのアクティブレコードのコールバックのリストです。</target>
        </trans-unit>
        <trans-unit id="72c9e285f0fa18600f07239c70b0ce7b42b524d9" translate="yes" xml:space="preserve">
          <source>Here is a more advanced &lt;a href=&quot;token&quot;&gt;&lt;code&gt;Token&lt;/code&gt;&lt;/a&gt; example where only Atom feeds and the XML &lt;a href=&quot;../api&quot;&gt;&lt;code&gt;API&lt;/code&gt;&lt;/a&gt; is protected by HTTP token authentication, the regular HTML interface is protected by a session approach:</source>
          <target state="translated">これは、AtomフィードとXML &lt;a href=&quot;../api&quot;&gt; &lt;code&gt;API&lt;/code&gt; &lt;/a&gt;のみがHTTPトークン認証によって保護され、通常のHTMLインターフェイスがセッションアプローチによって保護される、より高度な&lt;a href=&quot;token&quot;&gt; &lt;code&gt;Token&lt;/code&gt; &lt;/a&gt;例です。</target>
        </trans-unit>
        <trans-unit id="5c15547085174da8afdc8d786816c9538a67b526" translate="yes" xml:space="preserve">
          <source>Here is a more advanced &lt;a href=&quot;token&quot;&gt;Token&lt;/a&gt; example where only Atom feeds and the XML &lt;a href=&quot;../api&quot;&gt;API&lt;/a&gt; is protected by HTTP token authentication, the regular HTML interface is protected by a session approach:</source>
          <target state="translated">以下は、AtomフィードとXML &lt;a href=&quot;../api&quot;&gt;API&lt;/a&gt;のみがHTTPトークン認証によって保護され、通常のHTMLインターフェースがセッションアプローチによって保護される、より高度な&lt;a href=&quot;token&quot;&gt;トークンの&lt;/a&gt;例です。</target>
        </trans-unit>
        <trans-unit id="c11342e0feccd0663dfd2064689cf2356947a462" translate="yes" xml:space="preserve">
          <source>Here is a more advanced Basic example where only Atom feeds and the XML &lt;a href=&quot;../api&quot;&gt;&lt;code&gt;API&lt;/code&gt;&lt;/a&gt; is protected by HTTP authentication, the regular HTML interface is protected by a session approach:</source>
          <target state="translated">これは、AtomフィードとXML &lt;a href=&quot;../api&quot;&gt; &lt;code&gt;API&lt;/code&gt; &lt;/a&gt;のみがHTTP認証によって保護され、通常のHTMLインターフェイスがセッションアプローチによって保護される、より高度な基本例です。</target>
        </trans-unit>
        <trans-unit id="903471955887d160f30351bfbf3cf3c4c4dd1257" translate="yes" xml:space="preserve">
          <source>Here is a more advanced Basic example where only Atom feeds and the XML &lt;a href=&quot;../api&quot;&gt;API&lt;/a&gt; is protected by HTTP authentication, the regular HTML interface is protected by a session approach:</source>
          <target state="translated">以下は、AtomフィードとXML &lt;a href=&quot;../api&quot;&gt;API&lt;/a&gt;のみがHTTP認証によって保護され、通常のHTMLインターフェースがセッションアプローチによって保護される、より高度な基本的な例です。</target>
        </trans-unit>
        <trans-unit id="13b999087d05c2402f0c388acf9572983c2576d6" translate="yes" xml:space="preserve">
          <source>Here is a noncomprehensive list of documentation:</source>
          <target state="translated">ここでは、包括的ではないドキュメントのリストをご紹介します。</target>
        </trans-unit>
        <trans-unit id="2f261b042a52248ca392e7c379ba3b80ffaaf23d" translate="yes" xml:space="preserve">
          <source>Here is a quick explanation of the items presented in the preceding method. For a full list of all available options, please have a look further down at the Complete List of Action Mailer user-settable attributes section.</source>
          <target state="translated">ここでは、前の方法で提示された項目について簡単に説明します。利用可能なすべてのオプションの完全なリストについては、アクションメーラーのユーザー設定可能な属性の完全なリストをご覧ください。</target>
        </trans-unit>
        <trans-unit id="ac5c5cf7d1e76b6a93c6fbfb7642d5bd20bc2a9c" translate="yes" xml:space="preserve">
          <source>Here is an example system test:</source>
          <target state="translated">システムテストの例です。</target>
        </trans-unit>
        <trans-unit id="24dcdf1d65e0147f04d1c9d9333a8ee506ec9675" translate="yes" xml:space="preserve">
          <source>Here is an example using the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveSupport/Testing/TimeHelpers.html#method-i-travel_to&quot;&gt;&lt;code&gt;travel_to&lt;/code&gt;&lt;/a&gt; helper:</source>
          <target state="translated">以下は、&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveSupport/Testing/TimeHelpers.html#method-i-travel_to&quot;&gt; &lt;code&gt;travel_to&lt;/code&gt; &lt;/a&gt;ヘルパーの使用例です。</target>
        </trans-unit>
        <trans-unit id="966592488a254fd20fa980a07d627491c0e9dcbe" translate="yes" xml:space="preserve">
          <source>Here is an example where &lt;code&gt;on_load&lt;/code&gt; method is called to register a hook.</source>
          <target state="translated">次に、フックを登録するために &lt;code&gt;on_load&lt;/code&gt; メソッドが呼び出される例を示します。</target>
        </trans-unit>
        <trans-unit id="540ee2aaf7182c6dfc449b18e5accb694e3b0894" translate="yes" xml:space="preserve">
          <source>Here is an example:</source>
          <target state="translated">ここでは一例を紹介します。</target>
        </trans-unit>
        <trans-unit id="2dee0b41075bc78f3c21e8de947824297cbc36c1" translate="yes" xml:space="preserve">
          <source>Here is some sample code to do this:</source>
          <target state="translated">これを行うためのサンプルコードをいくつか紹介します。</target>
        </trans-unit>
        <trans-unit id="9a23e1dbae88c3b9dd5a42fd4b2f3a281e9f09a4" translate="yes" xml:space="preserve">
          <source>Here is the most straightforward test to check for XSS:</source>
          <target state="translated">ここでは、XSSをチェックするための最も簡単なテストを紹介します。</target>
        </trans-unit>
        <trans-unit id="fa48026d5b94207f193b14ed8f3c20cddd97fa85" translate="yes" xml:space="preserve">
          <source>Here is what the markup might look like:</source>
          <target state="translated">マークアップは次のようになります。</target>
        </trans-unit>
        <trans-unit id="e7c50ae25835d81ae0d3880f9bff4f411b4d5d46" translate="yes" xml:space="preserve">
          <source>Here the adapter, host, and database match the information in &lt;code&gt;ENV['DATABASE_URL']&lt;/code&gt;.</source>
          <target state="translated">ここでは、アダプター、ホスト、およびデータベースが &lt;code&gt;ENV['DATABASE_URL']&lt;/code&gt; 情報と一致しています。</target>
        </trans-unit>
        <trans-unit id="bfaddf874ee4fad170ce4659351021af0f1653c4" translate="yes" xml:space="preserve">
          <source>Here the connection information in &lt;code&gt;ENV['DATABASE_URL']&lt;/code&gt; is ignored, note the different adapter and database name.</source>
          <target state="translated">ここでは、 &lt;code&gt;ENV['DATABASE_URL']&lt;/code&gt; の接続情報は無視されます。異なるアダプターとデータベース名に注意してください。</target>
        </trans-unit>
        <trans-unit id="dfd0a9ee8970e4e5e7858560a08581a6c82893f1" translate="yes" xml:space="preserve">
          <source>Here the test is inheriting from &lt;code&gt;ActionDispatch::IntegrationTest&lt;/code&gt;. This makes some additional helpers available for us to use in our integration tests.</source>
          <target state="translated">ここで、テストは &lt;code&gt;ActionDispatch::IntegrationTest&lt;/code&gt; 継承しています。これにより、統合テストで使用できるいくつかの追加のヘルパーが作成されます。</target>
        </trans-unit>
        <trans-unit id="949f555d8f1cb3b5e819d8b5c11ae38856fbd9e2" translate="yes" xml:space="preserve">
          <source>Here we're using &lt;code&gt;link_to&lt;/code&gt; in a different way. We pass the named route as the second argument, and then the options as another argument. The &lt;code&gt;method: :delete&lt;/code&gt; and &lt;code&gt;data: { confirm: 'Are you sure?' }&lt;/code&gt; options are used as HTML5 attributes so that when the link is clicked, Rails will first show a confirm dialog to the user, and then submit the link with method &lt;code&gt;delete&lt;/code&gt;. This is done via the JavaScript file &lt;code&gt;rails-ujs&lt;/code&gt; which is automatically included in your application's layout (&lt;code&gt;app/views/layouts/application.html.erb&lt;/code&gt;) when you generated the application. Without this file, the confirmation dialog box won't appear.</source>
          <target state="translated">ここでは、 &lt;code&gt;link_to&lt;/code&gt; を別の方法で使用しています。名前付きルートを2番目の引数として渡し、次にオプションを別の引数として渡します。 &lt;code&gt;method: :delete&lt;/code&gt; および &lt;code&gt;data: { confirm: 'Are you sure?' }&lt;/code&gt; HTML5のリンクがクリックされたときに、Railsはまず、ユーザーに確認ダイアログを表示し、その後方法でリンクを提出するようにという属性としてのオプションが使用され &lt;code&gt;delete&lt;/code&gt; 。これは、アプリケーションの生成時にアプリケーションのレイアウト（ &lt;code&gt;app/views/layouts/application.html.erb&lt;/code&gt; ）に自動的に含まれるJavaScriptファイル &lt;code&gt;rails-ujs&lt;/code&gt; を介して行われます。このファイルがないと、確認ダイアログボックスは表示されません。</target>
        </trans-unit>
        <trans-unit id="3cb25b8466e97b38c6bfbb5e1fa95c7cc4e9fda4" translate="yes" xml:space="preserve">
          <source>Here you have a list of cities whose names are presented to the user. Internally the application only wants to handle their IDs so they are used as the options' value attribute. Let's see how Rails can help out here.</source>
          <target state="translated">ここでは、ユーザに提示される都市名のリストがあります。内部的にはアプリケーションはこれらのIDだけを扱いたいので、それらをoptionsのvalue属性として使用しています。ここでRailsがどのように役立つか見てみましょう。</target>
        </trans-unit>
        <trans-unit id="35a32d431cd9fbed3a6db6d835cebef4a6417c6d" translate="yes" xml:space="preserve">
          <source>Here's a basic example:</source>
          <target state="translated">基本的な例を挙げてみます。</target>
        </trans-unit>
        <trans-unit id="2a1adba1fc65e4a8781a83524bbb6fc9ef110527" translate="yes" xml:space="preserve">
          <source>Here's a sample YAML fixture file:</source>
          <target state="translated">ここにYAMLフィクスチャファイルのサンプルがあります。</target>
        </trans-unit>
        <trans-unit id="84598c805069996a6e4c31a50f74278008a9c710" translate="yes" xml:space="preserve">
          <source>Here's a simple example of a channel that tracks whether a user is online or not and what page they're on. (This is useful for creating presence features like showing a green dot next to a user name if they're online).</source>
          <target state="translated">ここでは、ユーザーがオンラインかどうか、どのページにいるかを追跡するチャンネルの簡単な例を紹介します。(これは、ユーザーがオンラインである場合にユーザー名の横に緑色のドットを表示するなどのプレゼンス機能を作成するのに便利です)。</target>
        </trans-unit>
        <trans-unit id="146e97b7c60a86f5ed87a1a757fb629ef56852e8" translate="yes" xml:space="preserve">
          <source>Here's a unit test to test a mailer named &lt;code&gt;UserMailer&lt;/code&gt; whose action &lt;code&gt;invite&lt;/code&gt; is used to send an invitation to a friend. It is an adapted version of the base test created by the generator for an &lt;code&gt;invite&lt;/code&gt; action.</source>
          <target state="translated">これは、 &lt;code&gt;UserMailer&lt;/code&gt; という名前のメーラーをテストするための単体テストです。このアクションの &lt;code&gt;invite&lt;/code&gt; は、友達に招待状を送信するために使用されます。これは、 &lt;code&gt;invite&lt;/code&gt; アクション用にジェネレーターによって作成された基本テストの適応バージョンです。</target>
        </trans-unit>
        <trans-unit id="7fac616ee6202f9a2c229aa7ca87477e0a2c8486" translate="yes" xml:space="preserve">
          <source>Here's an example in jQuery:</source>
          <target state="translated">jQueryでの例です。</target>
        </trans-unit>
        <trans-unit id="5e0b9d396588ed91f62d6fc31a2795234f758ab6" translate="yes" xml:space="preserve">
          <source>Here's an example of a method instrumented with extra logging:</source>
          <target state="translated">ここでは、余分なロギングを使用してインストルメントされたメソッドの例を示します。</target>
        </trans-unit>
        <trans-unit id="d99bce7647735e321fd17e646a992b467feeceb0" translate="yes" xml:space="preserve">
          <source>Here's an example of a migration:</source>
          <target state="translated">移住の一例をご紹介します。</target>
        </trans-unit>
        <trans-unit id="86fd89d5341d5e9d3707f643586e0880f1d78388" translate="yes" xml:space="preserve">
          <source>Here's an example of a very simple validation:</source>
          <target state="translated">非常に簡単な検証例をご紹介します。</target>
        </trans-unit>
        <trans-unit id="4f5373afe5c8fe82c5c6d6bd15842739fd845fec" translate="yes" xml:space="preserve">
          <source>Here's an example of how you might set &lt;code&gt;Time.zone&lt;/code&gt; on a per request basis and reset it when the request is done. &lt;code&gt;current_user.time_zone&lt;/code&gt; just needs to return a string identifying the user's preferred time zone:</source>
          <target state="translated">リクエストごとに &lt;code&gt;Time.zone&lt;/code&gt; を設定し、リクエストが完了したらリセットする方法の例を次に示します。 &lt;code&gt;current_user.time_zone&lt;/code&gt; は、ユーザーの優先タイムゾーンを識別する文字列を返すだけです。</target>
        </trans-unit>
        <trans-unit id="bf57f0edd716fcaf0b54193b754d828a1b134604" translate="yes" xml:space="preserve">
          <source>Here's an example of multiple sessions and custom DSL in an integration test</source>
          <target state="translated">以下は、統合テストにおける複数のセッションとカスタム DSL の例です。</target>
        </trans-unit>
        <trans-unit id="b74f74db0adb40322b5c36e01d45efc8728d7bcc" translate="yes" xml:space="preserve">
          <source>Here's an example of the log generated when this controller action is executed:</source>
          <target state="translated">以下に、このコントローラアクションが実行されたときに生成されるログの例を示します。</target>
        </trans-unit>
        <trans-unit id="d0ddd682783dcdf3bc13ff77041f430c1ebd9344" translate="yes" xml:space="preserve">
          <source>Here's an example of using &lt;code&gt;assert_select_email&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;assert_select_email&lt;/code&gt; の使用例は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="e5d702f2d9e4774ca34fe38cb54c564100d7982a" translate="yes" xml:space="preserve">
          <source>Here's an example where we create a class with an &lt;code&gt;after_destroy&lt;/code&gt; callback for a &lt;code&gt;PictureFile&lt;/code&gt; model:</source>
          <target state="translated">次に、 &lt;code&gt;PictureFile&lt;/code&gt; モデルの &lt;code&gt;after_destroy&lt;/code&gt; コールバックを使用してクラスを作成する例を示します。</target>
        </trans-unit>
        <trans-unit id="51e85e4e8113fb3e1f07e1727e78d73f5f0043e6" translate="yes" xml:space="preserve">
          <source>Here's an example:</source>
          <target state="translated">一例を挙げてみます。</target>
        </trans-unit>
        <trans-unit id="6fba1def85d00f52b32d0a0e33296c850b25d69e" translate="yes" xml:space="preserve">
          <source>Here's an extract of the assertions you can use with &lt;a href=&quot;https://github.com/seattlerb/minitest&quot;&gt;&lt;code&gt;Minitest&lt;/code&gt;&lt;/a&gt;, the default testing library used by Rails. The &lt;code&gt;[msg]&lt;/code&gt; parameter is an optional string message you can specify to make your test failure messages clearer.</source>
          <target state="translated">以下は、Railsで使用されるデフォルトのテストライブラリである&lt;a href=&quot;https://github.com/seattlerb/minitest&quot;&gt; &lt;code&gt;Minitest&lt;/code&gt; &lt;/a&gt;で使用できるアサーションの抜粋です。 &lt;code&gt;[msg]&lt;/code&gt; パラメータでは、あなたのテストの失敗メッセージを明確にするために指定することができ、オプションの文字列メッセージです。</target>
        </trans-unit>
        <trans-unit id="ac657d1698deb6975157356558b0ed6d8d4a2be2" translate="yes" xml:space="preserve">
          <source>Here's how &lt;code&gt;bin/rails server&lt;/code&gt; creates an instance of &lt;code&gt;Rack::Server&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;bin/rails server&lt;/code&gt; が &lt;code&gt;Rack::Server&lt;/code&gt; インスタンスを作成する方法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="4ee6eadcc849a2cd918861473277a9f08be785dd" translate="yes" xml:space="preserve">
          <source>Here's how &lt;code&gt;rails server&lt;/code&gt; creates an instance of &lt;code&gt;Rack::Server&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;rails server&lt;/code&gt; が &lt;code&gt;Rack::Server&lt;/code&gt; インスタンスを作成する方法を次に示します。</target>
        </trans-unit>
        <trans-unit id="b5334ea0519430e6cbe9bb37bdff4fe394a82457" translate="yes" xml:space="preserve">
          <source>Here's how you can use &lt;code&gt;rescue_from&lt;/code&gt; to intercept all &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; errors and do something with them.</source>
          <target state="translated">以下に、 &lt;code&gt;rescue_from&lt;/code&gt; を使用してすべての &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; エラーをインターセプトし、それらを処理する方法を示します。</target>
        </trans-unit>
        <trans-unit id="5e2cbdc1bce52b716ef3a937ab133dce74e80f78" translate="yes" xml:space="preserve">
          <source>Here's the content of the &lt;code&gt;invite&lt;/code&gt; fixture:</source>
          <target state="translated">&lt;code&gt;invite&lt;/code&gt; フィクスチャの内容は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="bfddaba8308923367149096a9a8be2deb245712a" translate="yes" xml:space="preserve">
          <source>Here's the same action, with web-service support baked in:</source>
          <target state="translated">ここでは、ウェブサービスのサポートが組み込まれた、同じ動作をしています。</target>
        </trans-unit>
        <trans-unit id="6de0bcb500e6a3e99f678ee088d7357c5ae98315" translate="yes" xml:space="preserve">
          <source>Here's the section of the default configuration file (&lt;code&gt;config/database.yml&lt;/code&gt;) with connection information for the development environment:</source>
          <target state="translated">開発環境の接続情報を含むデフォルトの構成ファイル（ &lt;code&gt;config/database.yml&lt;/code&gt; ）のセクションは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="0248e2aa90815581b1381b564eb037109cbc0cc0" translate="yes" xml:space="preserve">
          <source>Here's the simplest way to write JavaScript. You may see it referred to as 'inline JavaScript':</source>
          <target state="translated">これが最も簡単なJavaScriptの書き方です。これは「インライン JavaScript」と呼ばれているのを見るかもしれません。</target>
        </trans-unit>
        <trans-unit id="a45c93398ce118b8a35f73d0541d63c53fa4726b" translate="yes" xml:space="preserve">
          <source>Here's what a freshly generated integration test looks like:</source>
          <target state="translated">生成されたばかりの統合テストはこんな感じです。</target>
        </trans-unit>
        <trans-unit id="72bc98f7b2194652a43a85864e9d3401c7fd55bf" translate="yes" xml:space="preserve">
          <source>Here's what a freshly generated system test looks like:</source>
          <target state="translated">生成されたばかりのシステムテストはこんな感じです。</target>
        </trans-unit>
        <trans-unit id="d9ab6a126fa0b0191bd11e1e28c9eb02c416a2aa" translate="yes" xml:space="preserve">
          <source>Here's what a job looks like:</source>
          <target state="translated">仕事の内容はこんな感じです。</target>
        </trans-unit>
        <trans-unit id="4c3554f310b80837aa7de13a9fc83a67db841189" translate="yes" xml:space="preserve">
          <source>Here's what's going on: every Rails model can be initialized with its respective attributes, which are automatically mapped to the respective database columns. In the first line we do just that (remember that &lt;code&gt;params[:article]&lt;/code&gt; contains the attributes we're interested in). Then, &lt;code&gt;@article.save&lt;/code&gt; is responsible for saving the model in the database. Finally, we redirect the user to the &lt;code&gt;show&lt;/code&gt; action, which we'll define later.</source>
          <target state="translated">これが起こっていることです：すべてのRailsモデルは、それぞれのデータベースの列に自動的にマップされるそれぞれの属性で初期化できます。最初の行ではそれを行います（ &lt;code&gt;params[:article]&lt;/code&gt; は対象の属性が含まれていることに注意してください）。次に、 &lt;code&gt;@article.save&lt;/code&gt; がモデルをデータベースに保存します。最後に、後で定義する &lt;code&gt;show&lt;/code&gt; アクションにユーザーをリダイレクトします。</target>
        </trans-unit>
        <trans-unit id="69dfb61df70be82cc0e91fdffe3a874d942c0c82" translate="yes" xml:space="preserve">
          <source>Here, have a monkey fixture:</source>
          <target state="translated">ここに、猿の固定具があります。</target>
        </trans-unit>
        <trans-unit id="9deb07e3ce989762e87163aedf6d7622acc5b0e8" translate="yes" xml:space="preserve">
          <source>Here, the &lt;code&gt;_ad_banner.html.erb&lt;/code&gt; and &lt;code&gt;_footer.html.erb&lt;/code&gt; partials could contain content that is shared among many pages in your application. You don't need to see the details of these sections when you're concentrating on a particular page.</source>
          <target state="translated">ここで、 &lt;code&gt;_ad_banner.html.erb&lt;/code&gt; および &lt;code&gt;_footer.html.erb&lt;/code&gt; パーシャルには、アプリケーションの多くのページで共有されるコンテンツを含めることができます。特定のページに集中している場合、これらのセクションの詳細を表示する必要はありません。</target>
        </trans-unit>
        <trans-unit id="c6be36ec0dd4255fb91d10832166e75884b75733" translate="yes" xml:space="preserve">
          <source>Here, the &lt;code&gt;_ad_banner.html.erb&lt;/code&gt; and &lt;code&gt;_footer.html.erb&lt;/code&gt; partials could contain content that is shared by many pages in your application. You don't need to see the details of these sections when you're concentrating on a particular page.</source>
          <target state="translated">ここで、 &lt;code&gt;_ad_banner.html.erb&lt;/code&gt; および &lt;code&gt;_footer.html.erb&lt;/code&gt; パーシャルには、アプリケーションの多くのページで共有されるコンテンツを含めることができます。特定のページに集中している場合、これらのセクションの詳細を表示する必要はありません。</target>
        </trans-unit>
        <trans-unit id="e5d0c5945aa68bcc348fcda33615df501ec45e30" translate="yes" xml:space="preserve">
          <source>Here, the &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;finish&lt;/code&gt; values represent wall-clock time. If you are concerned about accuracy, you can register a monotonic subscriber.</source>
          <target state="translated">ここで、 &lt;code&gt;start&lt;/code&gt; 値と &lt;code&gt;finish&lt;/code&gt; 値は実時間を表します。精度が気になる場合は、単調なサブスクライバーを登録できます。</target>
        </trans-unit>
        <trans-unit id="1eedd803e2fb3348371a12340d971dabadc54dc8" translate="yes" xml:space="preserve">
          <source>Hidden inputs are not shown to the user but instead hold data like any textual input. Values inside them can be changed with JavaScript.</source>
          <target state="translated">隠し入力はユーザーには表示されませんが、代わりに他のテキスト入力のようにデータを保持します。その中の値は JavaScript で変更することができます。</target>
        </trans-unit>
        <trans-unit id="a5a2d8e6ce46024a3ffa0d643fb582b4898a45d3" translate="yes" xml:space="preserve">
          <source>Highlights one or more &lt;code&gt;phrases&lt;/code&gt; everywhere in &lt;code&gt;text&lt;/code&gt; by inserting it into a &lt;code&gt;:highlighter&lt;/code&gt; string. The highlighter can be specialized by passing &lt;code&gt;:highlighter&lt;/code&gt; as a single-quoted string with &lt;code&gt;\1&lt;/code&gt; where the phrase is to be inserted (defaults to '&amp;lt;mark&amp;gt;1&amp;lt;/mark&amp;gt;') or passing a block that receives each matched term. By default &lt;code&gt;text&lt;/code&gt; is sanitized to prevent possible XSS attacks. If the input is trustworthy, passing false for &lt;code&gt;:sanitize&lt;/code&gt; will turn sanitizing off.</source>
          <target state="translated">&lt;code&gt;:highlighter&lt;/code&gt; 文字列に挿入することにより、 &lt;code&gt;text&lt;/code&gt; 内のあらゆる場所で1つ以上の &lt;code&gt;phrases&lt;/code&gt; 強調表示します。蛍光ペンは、フレーズが挿入される &lt;code&gt;\1&lt;/code&gt; を単一引用符で囲んだ文字列（デフォルトは '&amp;lt;mark&amp;gt; 1 &amp;lt;/ mark&amp;gt;'）として &lt;code&gt;:highlighter&lt;/code&gt; を渡すか、一致した各用語を受け取るブロックを渡すことによって特殊化できます。デフォルトでは、 &lt;code&gt;text&lt;/code&gt; はサニタイズされ、XSS攻撃の可能性を防ぎます。入力が信頼できる場合、 &lt;code&gt;:sanitize&lt;/code&gt; に falseを渡すとサニタイズがオフになります。</target>
        </trans-unit>
        <trans-unit id="3dd5af1fdd46dc8bb2b5b75644bab1545f3bc37f" translate="yes" xml:space="preserve">
          <source>Hint: to show all the values of the all enums you have, you should call this query in &lt;code&gt;bin/rails db&lt;/code&gt; or &lt;code&gt;psql&lt;/code&gt; console:</source>
          <target state="translated">ヒント：所有しているすべての列挙型のすべての値を表示するには、 &lt;code&gt;bin/rails db&lt;/code&gt; または &lt;code&gt;psql&lt;/code&gt; コンソールでこのクエリを呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="d8318c79da881e56e277529bb9f90b6139fbf9b3" translate="yes" xml:space="preserve">
          <source>Hint: to show all the values of the all enums you have, you should call this query in &lt;code&gt;rails db&lt;/code&gt; or &lt;code&gt;psql&lt;/code&gt; console:</source>
          <target state="translated">ヒント：すべての列挙型のすべての値を表示するには、 &lt;code&gt;rails db&lt;/code&gt; または &lt;code&gt;psql&lt;/code&gt; コンソールでこのクエリを呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="2a6d69595e2159f2a0c44a9d74d2a911a845987f" translate="yes" xml:space="preserve">
          <source>Historically, Rails had some compatibility issues with the JSON gem. Using &lt;code&gt;JSON.generate&lt;/code&gt; and &lt;code&gt;JSON.dump&lt;/code&gt; inside a Rails application could produce unexpected errors.</source>
          <target state="translated">歴史的に、RailsにはJSON gemとの互換性の問題がいくつかありました。Railsアプリケーション内で &lt;code&gt;JSON.generate&lt;/code&gt; および &lt;code&gt;JSON.dump&lt;/code&gt; を使用すると、予期しないエラーが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="aa596d3e5f9add9375cea58b134c2309aec84ef8" translate="yes" xml:space="preserve">
          <source>Hold configured generators fallbacks. If a plugin developer wants a generator group to fallback to another group in case of missing generators, they can add a fallback.</source>
          <target state="translated">設定されたジェネレータのフォールバックを保持します。プラグイン開発者がジェネレーターが見つからない場合にジェネレーターグループを別のグループにフォールバックさせたい場合、フォールバックを追加することができます。</target>
        </trans-unit>
        <trans-unit id="f316939e79094259cdf41e53671dffcabcf40c04" translate="yes" xml:space="preserve">
          <source>Holds common methods for migrations. It assumes that migrations have the [0-9]*_name format and can be used by other frameworks (like Sequel) just by implementing the next migration version method.</source>
          <target state="translated">マイグレーションの共通メソッドを保持します。これは、マイグレーションが[0-9]*_name形式であることを前提としており、次のマイグレーションバージョンのメソッドを実装するだけで、他のフレームワーク(Sequelなど)でも利用できるようになっています。</target>
        </trans-unit>
        <trans-unit id="310d1bafcc30c57e3d20e051cb69f9c63f2f3b6f" translate="yes" xml:space="preserve">
          <source>Holds generators configuration:</source>
          <target state="translated">発電機の設定を保持します。</target>
        </trans-unit>
        <trans-unit id="b3e0a103daa9ae3f375b2654f0a482c7c0d36297" translate="yes" xml:space="preserve">
          <source>Hook</source>
          <target state="translated">Hook</target>
        </trans-unit>
        <trans-unit id="972519e8d46ee40e8febf9b9d5a4473d125e44ce" translate="yes" xml:space="preserve">
          <source>Hook overridden in controller to add request information with &lt;code&gt;default_url_options&lt;/code&gt;. Application logic should not go into url_options.</source>
          <target state="translated">コントローラでオーバーライドされたフックで、 &lt;code&gt;default_url_options&lt;/code&gt; を使用してリクエスト情報を追加します。アプリケーションロジックはurl_optionsに入らないでください。</target>
        </trans-unit>
        <trans-unit id="8a6cc2117c9a296d133e57ce52ce82b4dbb17e71" translate="yes" xml:space="preserve">
          <source>Hooking Into an Application</source>
          <target state="translated">アプリケーションへのフック</target>
        </trans-unit>
        <trans-unit id="f478a38d9151b587cd346815898df09dcc8946c6" translate="yes" xml:space="preserve">
          <source>Horizontal sharding</source>
          <target state="translated">水平方向のシャーディング</target>
        </trans-unit>
        <trans-unit id="fb8e0c66042a2ee9f65a91342dcbe294f7bf092a" translate="yes" xml:space="preserve">
          <source>Horizontal sharding is when you split up your database to reduce the number of rows on each database server, but maintain the same schema across &quot;shards&quot;. This is commonly called &quot;multi-tenant&quot; sharding.</source>
          <target state="translated">水平シャーディングとは、データベースを分割して各データベースサーバーの行数を減らし、「シャード」全体で同じスキーマを維持することです。これは一般的に「マルチテナント」シャーディングと呼ばれています。</target>
        </trans-unit>
        <trans-unit id="4fca81640a993fd510bed679641fe76c4539af35" translate="yes" xml:space="preserve">
          <source>HostAuthorization</source>
          <target state="translated">HostAuthorization</target>
        </trans-unit>
        <trans-unit id="76dd7c4917f60f38f66a43fd9eccd658bcb40619" translate="yes" xml:space="preserve">
          <source>HostAuthorization#call</source>
          <target state="translated">HostAuthorization#call</target>
        </trans-unit>
        <trans-unit id="261f5d629dbf1e520610d65147fc83a80e1aad2e" translate="yes" xml:space="preserve">
          <source>HostAuthorization::new</source>
          <target state="translated">HostAuthorization::new</target>
        </trans-unit>
        <trans-unit id="549775771b76908b3842f4e87c278f35633b056c" translate="yes" xml:space="preserve">
          <source>How Active Model integrates with the Rails internationalization (i18n) framework.</source>
          <target state="translated">Active ModelがRailsの国際化(i18n)フレームワークとどのように統合されているか。</target>
        </trans-unit>
        <trans-unit id="ff1f9e537379217104d857ac00a3494161487a87" translate="yes" xml:space="preserve">
          <source>How Active Record fits into the Model-View-Controller paradigm.</source>
          <target state="translated">アクティブレコードがモデル-ビュー-コントローラのパラダイムにどのように適合するか。</target>
        </trans-unit>
        <trans-unit id="31f3d15e477843037815c858f82dcdb164691caa" translate="yes" xml:space="preserve">
          <source>How Callbacks and validations work.</source>
          <target state="translated">コールバックとバリデーションの仕組み</target>
        </trans-unit>
        <trans-unit id="885603fee78b2cca60458011dcf7016046ffd47e" translate="yes" xml:space="preserve">
          <source>How I18n in Ruby on Rails Works</source>
          <target state="translated">Ruby on RailsのI18nの仕組み</target>
        </trans-unit>
        <trans-unit id="6fff3bda5e0a296fb98faf84650d4a2c7a366a04" translate="yes" xml:space="preserve">
          <source>How I18n works in Ruby on Rails</source>
          <target state="translated">Ruby on RailsでのI18nの仕組み</target>
        </trans-unit>
        <trans-unit id="fcb2abc501343cbce8db98097a33394d1bd434e4" translate="yes" xml:space="preserve">
          <source>How Rails internally generates Rails code from the templates.</source>
          <target state="translated">Railsが内部的にテンプレートからRailsのコードを生成する方法</target>
        </trans-unit>
        <trans-unit id="391b241dcc39d3fc1a49420d7d72b29f34ad9f38" translate="yes" xml:space="preserve">
          <source>How Rails searches for generators before invoking them.</source>
          <target state="translated">Railsがジェネレーターを呼び出す前に検索する方法</target>
        </trans-unit>
        <trans-unit id="b710866f276184795c15f6b7c8b9d2022456bfb6" translate="yes" xml:space="preserve">
          <source>How Rails' built-in helpers assist you.</source>
          <target state="translated">Railsの組み込みヘルパーがどのように役立つか</target>
        </trans-unit>
        <trans-unit id="7a64026c8624f830dd78e1c86e11704707a5fe41" translate="yes" xml:space="preserve">
          <source>How Turbolinks Works</source>
          <target state="translated">ターボリンクスの仕組み</target>
        </trans-unit>
        <trans-unit id="00fb43de6862bf9104a10b224bbccf8ed76b6b58" translate="yes" xml:space="preserve">
          <source>How about deleting an existing Article?</source>
          <target state="translated">既存の記事を削除するのはどうでしょうか?</target>
        </trans-unit>
        <trans-unit id="b2c006c93992d4a29d24ef2eae6a45993fe1e590" translate="yes" xml:space="preserve">
          <source>How about testing our ability to create a new article in our blog and see the resulting article.</source>
          <target state="translated">当ブログで新しい記事を作成して、出来上がった記事を見ることができるかどうかテストしてみてはいかがでしょうか。</target>
        </trans-unit>
        <trans-unit id="bea631078be09ef0df73214753c271bcf3b9347b" translate="yes" xml:space="preserve">
          <source>How an Active Record model behaves.</source>
          <target state="translated">アクティブレコードモデルの動作</target>
        </trans-unit>
        <trans-unit id="cf0a4cb2a0695e4cdce7ae95a55b86de4d6d9aa9" translate="yes" xml:space="preserve">
          <source>How and why to store data in the session or cookies.</source>
          <target state="translated">セッションやクッキーにデータを保存する方法と理由</target>
        </trans-unit>
        <trans-unit id="91b555445547d9bd6de1115f17e5ca3e262abf43" translate="yes" xml:space="preserve">
          <source>How automatic connection switching works.</source>
          <target state="translated">接続の自動切り替えの仕組み</target>
        </trans-unit>
        <trans-unit id="247a86a7c6b9f5e6753578a95dbfa118b2c13cba" translate="yes" xml:space="preserve">
          <source>How best to use templates, partials, and layouts.</source>
          <target state="translated">テンプレート、パーシャル、レイアウトの最適な使い方。</target>
        </trans-unit>
        <trans-unit id="7219bd1bb0c7257bbfa117480687e2498d534c64" translate="yes" xml:space="preserve">
          <source>How constant autoloading works</source>
          <target state="translated">コンスタントなオートローディングの仕組み</target>
        </trans-unit>
        <trans-unit id="87a4423902806e5933d301e39eac70902bf52f44" translate="yes" xml:space="preserve">
          <source>How constant reloading works</source>
          <target state="translated">コンスタントにリロードする方法</target>
        </trans-unit>
        <trans-unit id="004fa051da3f346370164577b2fb2a004b9324fe" translate="yes" xml:space="preserve">
          <source>How do forms with PATCH, PUT, or DELETE methods work?</source>
          <target state="translated">PATCH、PUT、DELETE メソッドを持つフォームはどのように動作しますか?</target>
        </trans-unit>
        <trans-unit id="68c487f194bf021182a1ad06d2af83633d09acab" translate="yes" xml:space="preserve">
          <source>How do you show a feed that has both &lt;code&gt;Message&lt;/code&gt; and &lt;code&gt;Comment&lt;/code&gt; records, which can be easily paginated? Well, you can't! Messages are backed by a messages table and comments by a comments table. You can't pull from both tables at once and use a consistent OFFSET/LIMIT scheme.</source>
          <target state="translated">&lt;code&gt;Message&lt;/code&gt; レコードと &lt;code&gt;Comment&lt;/code&gt; レコードの両方があり、簡単にページ付けできるフィードをどのように表示しますか？まあ、できません！メッセージはメッセージテーブルによって裏付けられ、コメントはコメントテーブルによって裏付けられます。両方のテーブルから一度にプルして、一貫したOFFSET / LIMITスキームを使用することはできません。</target>
        </trans-unit>
        <trans-unit id="e21860bf37328b97ebb0ddd904694c78e4a7b382" translate="yes" xml:space="preserve">
          <source>How does it work?</source>
          <target state="translated">どうやって使うのか?</target>
        </trans-unit>
        <trans-unit id="20a6ec786394f08b24fbf888b64df3c6ad08cd5c" translate="yes" xml:space="preserve">
          <source>How files are autoloaded depends on &lt;code&gt;eager_load&lt;/code&gt; and &lt;code&gt;cache_classes&lt;/code&gt; config settings which typically vary in development, production, and test modes:</source>
          <target state="translated">ファイルが自動ロードされる方法は、 &lt;code&gt;eager_load&lt;/code&gt; および &lt;code&gt;cache_classes&lt;/code&gt; 構成設定に依存します。これらの設定は、通常、開発モード、本番モード、およびテストモードで異なります。</target>
        </trans-unit>
        <trans-unit id="3f5e6d21433666be0c247dbf4c7ec5e458debfa5" translate="yes" xml:space="preserve">
          <source>How just visiting a site can be a security problem (with CSRF).</source>
          <target state="translated">サイトを訪問しただけでセキュリティ上の問題が発生する方法(CSRF付き</target>
        </trans-unit>
        <trans-unit id="76e2fa72f76f6a753e6d3e71b7cdd41e00bacbfa" translate="yes" xml:space="preserve">
          <source>How migrations relate to &lt;code&gt;schema.rb&lt;/code&gt;.</source>
          <target state="translated">マイグレーションと &lt;code&gt;schema.rb&lt;/code&gt; の関係。</target>
        </trans-unit>
        <trans-unit id="d7fbe404ec40911d9907be25316a2741a02568e3" translate="yes" xml:space="preserve">
          <source>How serializers work.</source>
          <target state="translated">シリアライザの仕組み</target>
        </trans-unit>
        <trans-unit id="e42434adac1251c8e37e2501009bba7675687b0e" translate="yes" xml:space="preserve">
          <source>How the Rails::Server interface is defined and used.</source>
          <target state="translated">Rails::Serverインタフェースがどのように定義され、使用されているか。</target>
        </trans-unit>
        <trans-unit id="8822e5413ddf0023503ebc0ab7f98d09c8b4ae04" translate="yes" xml:space="preserve">
          <source>How to Load Core Extensions</source>
          <target state="translated">コア拡張機能をロードする方法</target>
        </trans-unit>
        <trans-unit id="0e0734f509b40256ea594b365ee20839d4299b3a" translate="yes" xml:space="preserve">
          <source>How to Store your Custom Translations</source>
          <target state="translated">カスタム翻訳を保存する方法</target>
        </trans-unit>
        <trans-unit id="deace7cc065f5c91c8c84a53fd49106720b34f3f" translate="yes" xml:space="preserve">
          <source>How to Use the Asset Pipeline</source>
          <target state="translated">アセットパイプラインの使い方</target>
        </trans-unit>
        <trans-unit id="c8d9e702a50346cb6ea5e80ea37b213683532215" translate="yes" xml:space="preserve">
          <source>How to add a pre-processor to the pipeline.</source>
          <target state="translated">パイプラインにプリプロセッサを追加する方法</target>
        </trans-unit>
        <trans-unit id="80d8d9c7f071ae67239807cb889f18f9dbaaf1c3" translate="yes" xml:space="preserve">
          <source>How to add a subscriber to a hook.</source>
          <target state="translated">フックに購読者を追加する方法。</target>
        </trans-unit>
        <trans-unit id="af9befcb42671b299de5f4237e7f06b522f10076" translate="yes" xml:space="preserve">
          <source>How to add additional code to be run at application start time.</source>
          <target state="translated">アプリケーションの起動時に実行されるコードを追加する方法</target>
        </trans-unit>
        <trans-unit id="965083e44bd75bc7b32e1fe12ef503cf9232c7a2" translate="yes" xml:space="preserve">
          <source>How to add the functionality to the app (several examples of common use cases)</source>
          <target state="translated">アプリに機能を追加する方法(よくある使用例数例</target>
        </trans-unit>
        <trans-unit id="359c5d07be3e8bc1dbf9da8ee652b0f571ab324a" translate="yes" xml:space="preserve">
          <source>How to adjust the behavior of your Rails applications.</source>
          <target state="translated">Railsアプリケーションの動作を調整する方法。</target>
        </trans-unit>
        <trans-unit id="12a5bfd594aa7d5035e9a0a092d70a6cb0b38f0c" translate="yes" xml:space="preserve">
          <source>How to affect application reloading</source>
          <target state="translated">アプリケーションのリロードに影響を与える方法</target>
        </trans-unit>
        <trans-unit id="0368b111633c559b33763163b18c10a7d811caa2" translate="yes" xml:space="preserve">
          <source>How to analyze the stack trace.</source>
          <target state="translated">スタックトレースを解析する方法</target>
        </trans-unit>
        <trans-unit id="d6c3719c18f89de7ac3af1d8f6c947d7a0c872cf" translate="yes" xml:space="preserve">
          <source>How to attach one or many files to a record.</source>
          <target state="translated">レコードに1つまたは多数のファイルを添付する方法。</target>
        </trans-unit>
        <trans-unit id="e92320d18dd80f761ffbac22dc30bad0ba3d1157" translate="yes" xml:space="preserve">
          <source>How to automatically create paths and URLs using route helpers.</source>
          <target state="translated">ルートヘルパーを使ってパスやURLを自動的に作成する方法</target>
        </trans-unit>
        <trans-unit id="e8ef20439996e07e5f01347c0bacf5e9d2d4850c" translate="yes" xml:space="preserve">
          <source>How to avoid loading Rails frameworks with Load and Configuration Hooks.</source>
          <target state="translated">RailsフレームワークをLoad and Configuration Hooksでロードしない方法。</target>
        </trans-unit>
        <trans-unit id="da0b89933ade437c4c36af6f66019a57a0e83bae" translate="yes" xml:space="preserve">
          <source>How to back your Active Record models with database views.</source>
          <target state="translated">アクティブレコードモデルをデータベースビューでバックアップする方法</target>
        </trans-unit>
        <trans-unit id="ba870c05e249f7d68d03103490df75b4bc6fa48e" translate="yes" xml:space="preserve">
          <source>How to build a custom instrumentation implementation.</source>
          <target state="translated">カスタムインスツルメンテーションの実装を構築する方法</target>
        </trans-unit>
        <trans-unit id="d978c047c3899de47326026f20f352f81967cec6" translate="yes" xml:space="preserve">
          <source>How to build complex forms.</source>
          <target state="translated">複雑なフォームの作り方。</target>
        </trans-unit>
        <trans-unit id="2a48960b759d6326fffcc48931ed0a42daf4eb70" translate="yes" xml:space="preserve">
          <source>How to build features for the engine.</source>
          <target state="translated">エンジンの機能を構築する方法</target>
        </trans-unit>
        <trans-unit id="5497a64242b7e691348b85381458b33c8b987883" translate="yes" xml:space="preserve">
          <source>How to check for the existence of particular records.</source>
          <target state="translated">特定のレコードの存在を確認する方法</target>
        </trans-unit>
        <trans-unit id="d232be5f63cc7f6f946c6234958fcc74997f2ae7" translate="yes" xml:space="preserve">
          <source>How to cherry-pick just the extensions you want.</source>
          <target state="translated">欲しいエクステだけをチェリーピックする方法</target>
        </trans-unit>
        <trans-unit id="8710435e4d22d116a1cfe611a657ee0b0aaa3d17" translate="yes" xml:space="preserve">
          <source>How to clean up files stored during testing.</source>
          <target state="translated">テスト中に保存されたファイルをきれいにする方法</target>
        </trans-unit>
        <trans-unit id="dad5310c440e94fc9456a755b251348efc460bca" translate="yes" xml:space="preserve">
          <source>How to configure Action Mailbox.</source>
          <target state="translated">アクションメールボックスの設定方法</target>
        </trans-unit>
        <trans-unit id="1fff34be66b64a0286dc4904bd0bf9213da7d048" translate="yes" xml:space="preserve">
          <source>How to configure Action Mailer for your environment.</source>
          <target state="translated">自分の環境に合わせたAction Mailerの設定方法</target>
        </trans-unit>
        <trans-unit id="e305929e0d7f86fe23cacdbde3073482d28695fd" translate="yes" xml:space="preserve">
          <source>How to configure Action Text.</source>
          <target state="translated">アクションテキストの設定方法</target>
        </trans-unit>
        <trans-unit id="35bc4856645c93c09809929059137dec0c26e126" translate="yes" xml:space="preserve">
          <source>How to configure Rails to start without any browser features</source>
          <target state="translated">ブラウザ機能がなくてもRailsが起動するように設定する方法</target>
        </trans-unit>
        <trans-unit id="dd11eb90c49bf1f644eec12f0e589de8bef95d13" translate="yes" xml:space="preserve">
          <source>How to construct your own routes, using either the preferred resourceful style or the &lt;code&gt;match&lt;/code&gt; method.</source>
          <target state="translated">優先リソースフルスタイルまたは &lt;code&gt;match&lt;/code&gt; メソッドを使用して、独自のルートを構築する方法。</target>
        </trans-unit>
        <trans-unit id="abc5b6cc9ddd13b2956b4435ab4df1ba5a9c5d44" translate="yes" xml:space="preserve">
          <source>How to correctly use I18n into a RESTful application in various ways</source>
          <target state="translated">様々な方法でI18nをRESTfulアプリケーションに正しく使用する方法</target>
        </trans-unit>
        <trans-unit id="662cae5d60f7e6f39e90c9dc524d7817b7f9173c" translate="yes" xml:space="preserve">
          <source>How to create a Rails application.</source>
          <target state="translated">Railsアプリの作り方。</target>
        </trans-unit>
        <trans-unit id="5e93033597f1128e8906e52d82b4efc1d4ae1f3f" translate="yes" xml:space="preserve">
          <source>How to create a generator using templates.</source>
          <target state="translated">テンプレートを使ったジェネレーターの作り方</target>
        </trans-unit>
        <trans-unit id="3126eafbde42eb5a64ecdc02d8014a680f78732a" translate="yes" xml:space="preserve">
          <source>How to create a plugin from scratch.</source>
          <target state="translated">プラグインを一から作る方法</target>
        </trans-unit>
        <trans-unit id="3129a97ec5daf8c6da030d8406b7a8a9e6634ab1" translate="yes" xml:space="preserve">
          <source>How to create an application template.</source>
          <target state="translated">アプリケーションテンプレートの作成方法。</target>
        </trans-unit>
        <trans-unit id="040037763e5a4910b0d14bdbe86ce8a755c464f6" translate="yes" xml:space="preserve">
          <source>How to create callback methods that respond to events in the object life cycle.</source>
          <target state="translated">オブジェクトのライフサイクルでイベントに反応するコールバックメソッドの作り方</target>
        </trans-unit>
        <trans-unit id="b0d8ca9b6546471adea625590ffe17d284f8ee9a" translate="yes" xml:space="preserve">
          <source>How to create jobs.</source>
          <target state="translated">どうやって仕事を作るのか。</target>
        </trans-unit>
        <trans-unit id="91ec2f3a82401b5ec2f40f295f935eeee181da64" translate="yes" xml:space="preserve">
          <source>How to create layouts with multiple content sections.</source>
          <target state="translated">複数のコンテンツセクションを持つレイアウトを作成する方法。</target>
        </trans-unit>
        <trans-unit id="8f78dc5134e91e1b60053a56f04fb06ecd4222de" translate="yes" xml:space="preserve">
          <source>How to create search forms and similar kind of generic forms not representing any specific model in your application.</source>
          <target state="translated">検索フォームを作成する方法と、アプリケーション内の特定のモデルを表すものではない汎用フォームの似たような種類のフォームを作成する方法。</target>
        </trans-unit>
        <trans-unit id="ec4cb261cc6fd6da90bdf0ffcb65e791a4f5c218" translate="yes" xml:space="preserve">
          <source>How to create special classes that encapsulate common behavior for your callbacks.</source>
          <target state="translated">コールバックのための共通の動作をカプセル化した特別なクラスを作成する方法。</target>
        </trans-unit>
        <trans-unit id="4e1f2b2b56922a147e3f019790b6aa45de44be96" translate="yes" xml:space="preserve">
          <source>How to create your own custom validation methods.</source>
          <target state="translated">独自のカスタムバリデーションメソッドを作成する方法</target>
        </trans-unit>
        <trans-unit id="699e775edb89d304524acbf68f76fc398e0e86fe" translate="yes" xml:space="preserve">
          <source>How to customize your scaffold by changing generator templates.</source>
          <target state="translated">ジェネレーターのテンプレートを変えて足場をカスタマイズする方法</target>
        </trans-unit>
        <trans-unit id="7c65bcd9892c76e9c4e302cfe3ce1ae3f80fe964" translate="yes" xml:space="preserve">
          <source>How to customize your scaffold by creating new generators.</source>
          <target state="translated">ジェネレーターを新規作成して足場をカスタマイズする方法</target>
        </trans-unit>
        <trans-unit id="27c788ecde02c2ec7bc781a793bee848b09bf2ad" translate="yes" xml:space="preserve">
          <source>How to deal with exceptions that may be raised during request processing.</source>
          <target state="translated">リクエスト処理中に発生する可能性のある例外の対処法</target>
        </trans-unit>
        <trans-unit id="8793d36d7991eb65e4edf830e605759ea193a83c" translate="yes" xml:space="preserve">
          <source>How to decide which middleware you will want to include</source>
          <target state="translated">入れるミドルウェアの決め方</target>
        </trans-unit>
        <trans-unit id="1b46246700b1e26bbe09938762b4e2382db1c4bf" translate="yes" xml:space="preserve">
          <source>How to decide which modules to use in your controller</source>
          <target state="translated">コントローラで使用するモジュールを決める方法</target>
        </trans-unit>
        <trans-unit id="fd185b9b5a30c19b073f0cfe6f15d1dec92510b5" translate="yes" xml:space="preserve">
          <source>How to declare associations between Active Record models.</source>
          <target state="translated">アクティブレコードモデル間の関連付けを宣言する方法</target>
        </trans-unit>
        <trans-unit id="b796fcf0368180c3946631827aa634758fd6a608" translate="yes" xml:space="preserve">
          <source>How to declare route parameters, which are passed onto controller actions.</source>
          <target state="translated">コントローラのアクションに渡されるルートパラメータを宣言する方法。</target>
        </trans-unit>
        <trans-unit id="179c5266819757506744e2714dfaefe18b8ae8ba" translate="yes" xml:space="preserve">
          <source>How to define a custom Middleware stack.</source>
          <target state="translated">カスタムミドルウェアスタックの定義方法</target>
        </trans-unit>
        <trans-unit id="3770fc22ba2a74b5f88d69c72da953025007277d" translate="yes" xml:space="preserve">
          <source>How to delete an attached file.</source>
          <target state="translated">添付ファイルを削除する方法</target>
        </trans-unit>
        <trans-unit id="6f4f5a4173f837f3daab6b9f8bf20b95ef917f4e" translate="yes" xml:space="preserve">
          <source>How to enqueue jobs.</source>
          <target state="translated">ジョブをエンキューする方法</target>
        </trans-unit>
        <trans-unit id="e7f06f9b0ffea69aa26d511001ec532d9d5bbf5f" translate="yes" xml:space="preserve">
          <source>How to experiment with objects through an interactive shell.</source>
          <target state="translated">インタラクティブなシェルを使ってオブジェクトを実験する方法。</target>
        </trans-unit>
        <trans-unit id="d2754814a5d9b112e246547925f5d2d1ccf52d2d" translate="yes" xml:space="preserve">
          <source>How to filter sensitive parameters so they do not appear in the application's log.</source>
          <target state="translated">敏感なパラメータをフィルタリングしてアプリケーションのログに表示されないようにする方法。</target>
        </trans-unit>
        <trans-unit id="9b34a5708c805919170f6eeb36ad632e9aa3b37b" translate="yes" xml:space="preserve">
          <source>How to find records using a variety of methods and conditions.</source>
          <target state="translated">様々な方法や条件を使った記録の見つけ方</target>
        </trans-unit>
        <trans-unit id="4007fac20ee4ecc421ec901b7536a98bee9b35b3" translate="yes" xml:space="preserve">
          <source>How to follow the flow of a request through a controller.</source>
          <target state="translated">コントローラーを介したリクエストの流れをどうやって追うか。</target>
        </trans-unit>
        <trans-unit id="b7132e2a2bd69503dd65a68479558f4f3076baaa" translate="yes" xml:space="preserve">
          <source>How to format dates, strings and numbers</source>
          <target state="translated">日付、文字列、数字の書式設定方法</target>
        </trans-unit>
        <trans-unit id="a71745ee4fb12b25a6094424101bef071193d086" translate="yes" xml:space="preserve">
          <source>How to generate an engine.</source>
          <target state="translated">エンジンの発生方法。</target>
        </trans-unit>
        <trans-unit id="48ceb044ae32fa9d391b02fae616d1851d7fea2d" translate="yes" xml:space="preserve">
          <source>How to generate an image representation of a non-image file, such as a PDF or a video.</source>
          <target state="translated">PDFや動画などの非画像ファイルの画像表現を生成する方法。</target>
        </trans-unit>
        <trans-unit id="deccfb77084396e1921b8638b995c6100b06c6eb" translate="yes" xml:space="preserve">
          <source>How to generate and edit an Action Mailer class and mailer view.</source>
          <target state="translated">Action Mailerクラスの生成方法とメーラービューの編集方法。</target>
        </trans-unit>
        <trans-unit id="2d7728515a738e771ee5d2831276c1faf8dcbf39" translate="yes" xml:space="preserve">
          <source>How to generate and route emails to a mailbox.</source>
          <target state="translated">メールボックスにメールを生成してルーティングする方法</target>
        </trans-unit>
        <trans-unit id="38015bf111b30212b883455400d1d241bf42e017" translate="yes" xml:space="preserve">
          <source>How to generate models, controllers, database migrations, and unit tests.</source>
          <target state="translated">モデル、コントローラ、データベースの移行、ユニットテストの生成方法。</target>
        </trans-unit>
        <trans-unit id="436256918e39aa08742c3eff6a2e6c8df196a6c0" translate="yes" xml:space="preserve">
          <source>How to generate select boxes from multiple types of data.</source>
          <target state="translated">複数種類のデータからセレクトボックスを生成する方法</target>
        </trans-unit>
        <trans-unit id="abbd97375a9c44b1e0b36663bc5ac5483228e1f6" translate="yes" xml:space="preserve">
          <source>How to handle Ajax on the server side.</source>
          <target state="translated">サーバー側でのAjaxの扱い方</target>
        </trans-unit>
        <trans-unit id="b6075479424d7cca20a16abe19eb9e85a9af9cde" translate="yes" xml:space="preserve">
          <source>How to handle rich text content.</source>
          <target state="translated">リッチテキストコンテンツの扱い方</target>
        </trans-unit>
        <trans-unit id="663814ee588973fb4ea608ae717283a2e65f9e09" translate="yes" xml:space="preserve">
          <source>How to hook the engine into an application.</source>
          <target state="translated">エンジンをアプリケーションにフックする方法</target>
        </trans-unit>
        <trans-unit id="7fd3558129bf645ab1102137776964e9df29ce58" translate="yes" xml:space="preserve">
          <source>How to implement full text search with PostgreSQL.</source>
          <target state="translated">PostgreSQLで全文検索を実装する方法</target>
        </trans-unit>
        <trans-unit id="47c5430d1e27734d9131dcd5e952518d691f1e23" translate="yes" xml:space="preserve">
          <source>How to implement support for additional storage services.</source>
          <target state="translated">追加ストレージサービスのサポートを実装する方法</target>
        </trans-unit>
        <trans-unit id="b192c8c2f074d0c37ec1dd5269631ceaede7a209" translate="yes" xml:space="preserve">
          <source>How to include your Cross-Site Request Forgery token in request headers</source>
          <target state="translated">クロスサイトリクエストフォージェリテクノロジートークンをリクエストヘッダに含める方法</target>
        </trans-unit>
        <trans-unit id="940eef8972465d47a5e71b4a36224fc7b5ac1ed1" translate="yes" xml:space="preserve">
          <source>How to install</source>
          <target state="translated">インストール方法</target>
        </trans-unit>
        <trans-unit id="b873a909efe36b0a95991b73d701f2d6f3e81a2f" translate="yes" xml:space="preserve">
          <source>How to install Rails, create a new Rails application, and connect your application to a database.</source>
          <target state="translated">Railsのインストール方法、新規Railsアプリケーションの作成方法、アプリケーションをデータベースに接続する方法。</target>
        </trans-unit>
        <trans-unit id="4bc4c166058b1583bd9f7a2715f1f16427875c30" translate="yes" xml:space="preserve">
          <source>How to integrate manual concurrency with Rails internals</source>
          <target state="translated">手動同時実行をRailsの内部に統合する方法</target>
        </trans-unit>
        <trans-unit id="a37443f6fe1aff82733ac289cadbc313fb4cc1c5" translate="yes" xml:space="preserve">
          <source>How to interpret the code in &lt;code&gt;config/routes.rb&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config/routes.rb&lt;/code&gt; のコードを解釈する方法。</target>
        </trans-unit>
        <trans-unit id="482163bc4783f20334ee9fb53c9bc6af42facb7b" translate="yes" xml:space="preserve">
          <source>How to link to an attached file.</source>
          <target state="translated">添付ファイルにリンクする方法</target>
        </trans-unit>
        <trans-unit id="8cfa0dbd00ae4081d47586271fb9dfd9935d912d" translate="yes" xml:space="preserve">
          <source>How to link to images, videos, stylesheets, etc...</source>
          <target state="translated">画像や動画、スタイルシートなどへのリンク方法。</target>
        </trans-unit>
        <trans-unit id="ab75c7b1538764b5d778ae047a7987197e4f1967" translate="yes" xml:space="preserve">
          <source>How to load all extensions.</source>
          <target state="translated">すべての拡張機能をロードする方法</target>
        </trans-unit>
        <trans-unit id="9e991ba0c1b080a8756699a7cabfd43baddc81bf" translate="yes" xml:space="preserve">
          <source>How to localize content</source>
          <target state="translated">コンテンツのローカライズ方法</target>
        </trans-unit>
        <trans-unit id="050c458e2dbf3b58a6cdb083378477e79e83da20" translate="yes" xml:space="preserve">
          <source>How to make model-centric forms for creating and editing specific database records.</source>
          <target state="translated">特定のデータベースレコードを作成・編集するためのモデル中心のフォームの作り方</target>
        </trans-unit>
        <trans-unit id="51526d01ef0fb68b681df244932518daeb79420e" translate="yes" xml:space="preserve">
          <source>How to manage the caching dependencies.</source>
          <target state="translated">キャッシングの依存関係を管理する方法</target>
        </trans-unit>
        <trans-unit id="23588189e3c2f5218d5c4d42d226b329c7f05681" translate="yes" xml:space="preserve">
          <source>How to manage users: Logging in and out and attack methods on all layers.</source>
          <target state="translated">ユーザーの管理方法。全層でのログイン・アウトと攻撃方法</target>
        </trans-unit>
        <trans-unit id="4b03eb756c495ead2f7c20ca92187c0259162ef2" translate="yes" xml:space="preserve">
          <source>How to override engine functionality in the application.</source>
          <target state="translated">アプリケーションでエンジンの機能をオーバーライドする方法</target>
        </trans-unit>
        <trans-unit id="c5947c00a87d3fa7806bf61681a31dbd676d0b64" translate="yes" xml:space="preserve">
          <source>How to package assets with a gem.</source>
          <target state="translated">gemでアセットをパッケージ化する方法</target>
        </trans-unit>
        <trans-unit id="83452885409be36ccdc213978138fc9cc24db36d" translate="yes" xml:space="preserve">
          <source>How to perform various calculations on Active Record models.</source>
          <target state="translated">アクティブレコードモデルで各種計算を行う方法</target>
        </trans-unit>
        <trans-unit id="d51bdf5ef32054258469c53e9fc6157dd1188c77" translate="yes" xml:space="preserve">
          <source>How to post forms to external resources and specify setting an &lt;code&gt;authenticity_token&lt;/code&gt;.</source>
          <target state="translated">フォームを外部リソースに投稿し、 &lt;code&gt;authenticity_token&lt;/code&gt; の設定を指定する方法。</target>
        </trans-unit>
        <trans-unit id="15a77948d603e01b52bad86d2a90baa40ca03e54" translate="yes" xml:space="preserve">
          <source>How to properly organize your application assets.</source>
          <target state="translated">アプリケーション資産を正しく整理する方法</target>
        </trans-unit>
        <trans-unit id="4fb32d1c45262169314b6d4fd9493b8965905cf0" translate="yes" xml:space="preserve">
          <source>How to quickly generate the starting pieces of a Rails application.</source>
          <target state="translated">Railsアプリケーションのスタートピースを素早く生成する方法。</target>
        </trans-unit>
        <trans-unit id="882d2f16b855bd2f5d79a7646afb34e5e6b6ddb9" translate="yes" xml:space="preserve">
          <source>How to receive email within a Rails application.</source>
          <target state="translated">Railsアプリ内でメールを受信する方法</target>
        </trans-unit>
        <trans-unit id="d3806e92785fa88c2fab3c2705c9fc7ef0adcf32" translate="yes" xml:space="preserve">
          <source>How to restrict parameters passed to your controller.</source>
          <target state="translated">コントローラに渡されるパラメータを制限する方法</target>
        </trans-unit>
        <trans-unit id="b15208ee7758a109207e3b473af862e5585dec35" translate="yes" xml:space="preserve">
          <source>How to run EXPLAIN on relations.</source>
          <target state="translated">関係性の上でEXPLAINを実行する方法。</target>
        </trans-unit>
        <trans-unit id="6d925f1a925f37821fc81f1b6af49cc9761a5aa0" translate="yes" xml:space="preserve">
          <source>How to run jobs in the background.</source>
          <target state="translated">バックグラウンドでジョブを実行する方法</target>
        </trans-unit>
        <trans-unit id="e2be847cd3e2fbcc815858e9c36d7d67bed5723f" translate="yes" xml:space="preserve">
          <source>How to sanitize content</source>
          <target state="translated">コンテンツのサニタイズ方法</target>
        </trans-unit>
        <trans-unit id="8e15c886fc295eeb5eb9f1af649c77d85f740d6b" translate="yes" xml:space="preserve">
          <source>How to see which generators are available in your application.</source>
          <target state="translated">アプリケーションで利用可能な発電機を確認する方法</target>
        </trans-unit>
        <trans-unit id="4c7954067c3c91d7ad21c9367e7d56593279fe29" translate="yes" xml:space="preserve">
          <source>How to send email within a Rails application.</source>
          <target state="translated">Railsアプリ内でメールを送信する方法</target>
        </trans-unit>
        <trans-unit id="3deb2103f2688d1f811b373fecd183e3304bfb7e" translate="yes" xml:space="preserve">
          <source>How to send emails from your application asynchronously.</source>
          <target state="translated">アプリからメールを非同期で送信する方法</target>
        </trans-unit>
        <trans-unit id="c5aa6c8cdb5372b0e9384713de138731ab1255d6" translate="yes" xml:space="preserve">
          <source>How to send file uploads directly from browsers to a storage service, bypassing your application servers.</source>
          <target state="translated">アプリケーションサーバーをバイパスして、ブラウザからストレージサービスに直接ファイルのアップロードを送信する方法。</target>
        </trans-unit>
        <trans-unit id="f6e7cba753f4a8672c1ef2bb9f1233de6eb26998" translate="yes" xml:space="preserve">
          <source>How to set up Action Cable</source>
          <target state="translated">アクションケーブルの設定方法</target>
        </trans-unit>
        <trans-unit id="417d0cd7854c19f97ec89ea5402fd0c065d68b0d" translate="yes" xml:space="preserve">
          <source>How to set up channels</source>
          <target state="translated">チャンネルの設定方法</target>
        </trans-unit>
        <trans-unit id="7118c55dcc7369b79cef306b99ed52564b10763c" translate="yes" xml:space="preserve">
          <source>How to set up your application for multiple databases.</source>
          <target state="translated">複数のデータベースに対応したアプリケーションの設定方法</target>
        </trans-unit>
        <trans-unit id="aea4636573b073da43ce6bcd06c82a388fed95bb" translate="yes" xml:space="preserve">
          <source>How to setup Action Cable</source>
          <target state="translated">アクションケーブルの設定方法</target>
        </trans-unit>
        <trans-unit id="144357af34e4718568277df93f6a81fc067f4332" translate="yes" xml:space="preserve">
          <source>How to setup channels</source>
          <target state="translated">チャンネルの設定方法</target>
        </trans-unit>
        <trans-unit id="a39a3a144b1b48ce94f140df36b3b3eb471a8683" translate="yes" xml:space="preserve">
          <source>How to setup your application for multiple databases.</source>
          <target state="translated">複数のデータベースに対応したアプリケーションを設定する方法</target>
        </trans-unit>
        <trans-unit id="b23cac56cbf2895e136c9ab4b75f8146c465b621" translate="yes" xml:space="preserve">
          <source>How to specify the order, retrieved attributes, grouping, and other properties of the found records.</source>
          <target state="translated">見つかったレコードの順序、検索された属性、グループ化などのプロパティを指定する方法。</target>
        </trans-unit>
        <trans-unit id="5ef0f34b304c60aacd6d86bf43e0b5512537347b" translate="yes" xml:space="preserve">
          <source>How to start a development server.</source>
          <target state="translated">開発サーバーの立ち上げ方。</target>
        </trans-unit>
        <trans-unit id="31a74d9e16af3a864583ae23deab06a4f889c781" translate="yes" xml:space="preserve">
          <source>How to stream data directly to the user's browser.</source>
          <target state="translated">ユーザーのブラウザに直接データをストリーム配信する方法。</target>
        </trans-unit>
        <trans-unit id="ce060a6f3100aebdd62fdc9b96ae830cde78c75a" translate="yes" xml:space="preserve">
          <source>How to style rich text content.</source>
          <target state="translated">リッチなテキストコンテンツのスタイリング方法。</target>
        </trans-unit>
        <trans-unit id="fafadad9b1e93808a52d19e5d418579a21fbebc8" translate="yes" xml:space="preserve">
          <source>How to test incoming emails.</source>
          <target state="translated">受信メールをテストする方法</target>
        </trans-unit>
        <trans-unit id="7a90199c0afe8c94cff7a40faae685dbd20f975d" translate="yes" xml:space="preserve">
          <source>How to test your Action Mailer classes.</source>
          <target state="translated">アクションメーラーのクラスをテストする方法</target>
        </trans-unit>
        <trans-unit id="1b4a1bcf146cdf6be4cd39b08a0d8c45d4429602" translate="yes" xml:space="preserve">
          <source>How to track down problems and issues in your application that your tests aren't identifying.</source>
          <target state="translated">テストで特定できていないアプリケーションの問題や問題を追跡する方法。</target>
        </trans-unit>
        <trans-unit id="2759f3a60ed06e2071611d91ef86ba6a13ee582f" translate="yes" xml:space="preserve">
          <source>How to understand the various types of Active Record associations.</source>
          <target state="translated">アクティブレコードの様々な種類の関連付けを理解する方法。</target>
        </trans-unit>
        <trans-unit id="508b15eb31f391814964eb5888e89e290ac81a51" translate="yes" xml:space="preserve">
          <source>How to use &lt;code&gt;bin/rails server&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bin/rails server&lt;/code&gt; 使用方法。</target>
        </trans-unit>
        <trans-unit id="468657a74c7e82a9914821a06295c27c90193a0a" translate="yes" xml:space="preserve">
          <source>How to use &lt;code&gt;rails server&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rails server&lt;/code&gt; 使用方法。</target>
        </trans-unit>
        <trans-unit id="a75b0bf8bd1e8fa357cce9e1918890c3ab21cac3" translate="yes" xml:space="preserve">
          <source>How to use Action Controller's built-in HTTP authentication.</source>
          <target state="translated">Action Controllerに内蔵されているHTTP認証を利用する方法。</target>
        </trans-unit>
        <trans-unit id="1f32c6232f5fd212eac4d70f35e9894189417038" translate="yes" xml:space="preserve">
          <source>How to use Active Record models to manipulate data stored in a relational database.</source>
          <target state="translated">リレーショナルデータベースに保存されているデータを操作するためのActive Recordモデルの使い方</target>
        </trans-unit>
        <trans-unit id="16b9eca6cd506995237331225ea3f83aa2e76fa4" translate="yes" xml:space="preserve">
          <source>How to use I18n to translate Active Record errors or Action Mailer E-mail subjects</source>
          <target state="translated">I18nを使用してアクティブレコードのエラーやアクションメーラーのメール件名を翻訳する方法</target>
        </trans-unit>
        <trans-unit id="c8fff63ae288500b07e2bcf91e6fd3628ec42bc9" translate="yes" xml:space="preserve">
          <source>How to use PostgreSQL's datatypes.</source>
          <target state="translated">PostgreSQLのデータ型の使い方。</target>
        </trans-unit>
        <trans-unit id="aeca37d17e7290893b177c12655d45291a01f4a7" translate="yes" xml:space="preserve">
          <source>How to use Rack Middlewares in your Rails applications.</source>
          <target state="translated">RailsアプリケーションでRack Middlewaresを使う方法。</target>
        </trans-unit>
        <trans-unit id="afb073e7190785278f16b15a1d0f3267487aedb5" translate="yes" xml:space="preserve">
          <source>How to use UUID primary keys.</source>
          <target state="translated">UUID主キーの使い方。</target>
        </trans-unit>
        <trans-unit id="434bcb88556b5ea93ef177f7358e70f63b9be82b" translate="yes" xml:space="preserve">
          <source>How to use dynamic finder methods.</source>
          <target state="translated">ダイナミックファインダーメソッドの使い方</target>
        </trans-unit>
        <trans-unit id="d0d1588df457a8198b4ad3ef0513e1e8ddc35d9b" translate="yes" xml:space="preserve">
          <source>How to use eager loading to reduce the number of database queries needed for data retrieval.</source>
          <target state="translated">データ検索に必要なデータベースクエリの数を減らすためのイーガーローディングの使い方</target>
        </trans-unit>
        <trans-unit id="ecfe33d91406b06e9902a746aa499cb80d7bda4c" translate="yes" xml:space="preserve">
          <source>How to use fallbacks to avoid overwriting a huge set of generators.</source>
          <target state="translated">膨大なジェネレータのセットを上書きしないためのフォールバックの使い方。</target>
        </trans-unit>
        <trans-unit id="fcb2b6fb4d39bc4a7eb4cd909c6a4d88b22134d3" translate="yes" xml:space="preserve">
          <source>How to use horizontal sharding for multiple databases.</source>
          <target state="translated">複数のデータベースで水平方向のシャーディングを使用する方法</target>
        </trans-unit>
        <trans-unit id="768884e86ba2494e196f259abba4cae45d6e497f" translate="yes" xml:space="preserve">
          <source>How to use localized views.</source>
          <target state="translated">ローカライズされたビューの使い方。</target>
        </trans-unit>
        <trans-unit id="d3b1a0e67f0b8cbe0e0edfaee2014a688138de3b" translate="yes" xml:space="preserve">
          <source>How to use method chaining to use multiple Active Record methods together.</source>
          <target state="translated">複数のActive Recordメソッドを一緒に使うためのメソッドチェーンの使い方</target>
        </trans-unit>
        <trans-unit id="3c5e9d8305eeb1d17f067a6bea92a156c3b7b469" translate="yes" xml:space="preserve">
          <source>How to use nested layouts (sub-templates).</source>
          <target state="translated">入れ子になったレイアウト(サブテンプレート)の使い方。</target>
        </trans-unit>
        <trans-unit id="3acc2ce3064e615aa662f91da208e0a2c4b49888" translate="yes" xml:space="preserve">
          <source>How to use partials to DRY up your views.</source>
          <target state="translated">ビューをDRY UPするためのパーシャルの使い方。</target>
        </trans-unit>
        <trans-unit id="e5579a506ad30e5a4685e5046235723ba9d39ad7" translate="yes" xml:space="preserve">
          <source>How to use templates to generate/customize Rails applications.</source>
          <target state="translated">テンプレートを使ってRailsアプリケーションを生成/カスタマイズする方法。</target>
        </trans-unit>
        <trans-unit id="ed5f6c71ff2b0457b7dada9ca27d6159bb795abc" translate="yes" xml:space="preserve">
          <source>How to use the built-in Active Record validation helpers.</source>
          <target state="translated">ビルトインのActiveレコード検証ヘルパーの使い方。</target>
        </trans-unit>
        <trans-unit id="2397f6ac0561f98d2afab319cb2e2b2eeb71750d" translate="yes" xml:space="preserve">
          <source>How to use the methods added to your models by creating associations.</source>
          <target state="translated">アソシエーションを作ってモデルに追加したメソッドの使い方</target>
        </trans-unit>
        <trans-unit id="6338dbc882d466a39c113edb0d9ea748160b046f" translate="yes" xml:space="preserve">
          <source>How to use the various rendering methods built into Rails.</source>
          <target state="translated">Railsに組み込まれている様々なレンダリング方法の使い方。</target>
        </trans-unit>
        <trans-unit id="2055634437cca5ae985c43d618ea27ec78da048c" translate="yes" xml:space="preserve">
          <source>How to use variants to transform images.</source>
          <target state="translated">バリアントを使って画像を変換する方法。</target>
        </trans-unit>
        <trans-unit id="c5c525f36a105fcf7dfa611ff38b5567536535f6" translate="yes" xml:space="preserve">
          <source>How to work with filters to execute code during request processing.</source>
          <target state="translated">リクエスト処理中にコードを実行するためのフィルタを使った作業方法</target>
        </trans-unit>
        <trans-unit id="8ce86640d129fd64b2ea0322c4f6556280d733ff" translate="yes" xml:space="preserve">
          <source>How to work with the error messages generated by the validation process.</source>
          <target state="translated">バリデーション処理で発生するエラーメッセージの処理方法</target>
        </trans-unit>
        <trans-unit id="eeaa8a6cd1ba0666ad62edeb83772a7e0c95da45" translate="yes" xml:space="preserve">
          <source>How to wrap all application code</source>
          <target state="translated">すべてのアプリケーションコードをラップする方法</target>
        </trans-unit>
        <trans-unit id="63220aad86b2cc91fb91c6d8ebf517d1a0d86bb2" translate="yes" xml:space="preserve">
          <source>How to write and run tests for the plugin.</source>
          <target state="translated">プラグインのテストの書き方と実行方法。</target>
        </trans-unit>
        <trans-unit id="22344ac929f1de16ccdbaf10df6fd8c35c84b334" translate="yes" xml:space="preserve">
          <source>How to write unit, functional, integration, and system tests for your application.</source>
          <target state="translated">アプリケーションのためのユニットテスト、機能テスト、統合テスト、システムテストの書き方。</target>
        </trans-unit>
        <trans-unit id="a02bc8abf5cd8c002a59dfe5b1b3da5a472c1756" translate="yes" xml:space="preserve">
          <source>How to write your own reusable application templates using the Rails template API.</source>
          <target state="translated">RailsのテンプレートAPIを使って再利用可能なアプリケーションテンプレートを自作する方法</target>
        </trans-unit>
        <trans-unit id="65374d1862860e7a39add3e1ae80ae0a2c1f41a2" translate="yes" xml:space="preserve">
          <source>However a coming soon screen is only minimally useful, so you will soon create your &lt;code&gt;Book&lt;/code&gt; model and add the index action to &lt;code&gt;BooksController&lt;/code&gt;:</source>
          <target state="translated">ただし、近日中に登場する画面は &lt;code&gt;BooksController&lt;/code&gt; ません。そのため、すぐに &lt;code&gt;Book&lt;/code&gt; モデルを作成し、インデックスアクションをBooksControllerに追加します。</target>
        </trans-unit>
        <trans-unit id="bfd0c066180110992fde4b8a9c21ef4c8513936a" translate="yes" xml:space="preserve">
          <source>However if you must do this, you may use &lt;code&gt;where&lt;/code&gt; as you would normally.</source>
          <target state="translated">ただし、これを行う必要がある場合は、通常どおりに &lt;code&gt;where&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="ccc5b9da854f3207f88566cb133d7c2a2140cfc5" translate="yes" xml:space="preserve">
          <source>However you can still overwrite individual conventions, such as:</source>
          <target state="translated">ただし、以下のような個別の規約を上書きすることは可能です。</target>
        </trans-unit>
        <trans-unit id="365e46db593bde2dd2859725f67ea645b52e77ae" translate="yes" xml:space="preserve">
          <source>However, &lt;code&gt;classic&lt;/code&gt; mode infers file names from missing constant names (&lt;code&gt;underscore&lt;/code&gt;), whereas &lt;code&gt;zeitwerk&lt;/code&gt; mode infers constant names from file names (&lt;code&gt;camelize&lt;/code&gt;). These helpers are not always inverse of each other, in particular if acronyms are involved. For instance, &lt;code&gt;&quot;FOO&quot;.underscore&lt;/code&gt; is &lt;code&gt;&quot;foo&quot;&lt;/code&gt;, but &lt;code&gt;&quot;foo&quot;.camelize&lt;/code&gt; is &lt;code&gt;&quot;Foo&quot;&lt;/code&gt;, not &lt;code&gt;&quot;FOO&quot;&lt;/code&gt;.</source>
          <target state="translated">ただし、 &lt;code&gt;classic&lt;/code&gt; モードは欠落している定数名（ &lt;code&gt;underscore&lt;/code&gt; ）からファイル名を推測しますが、 &lt;code&gt;zeitwerk&lt;/code&gt; モードはファイル名（ &lt;code&gt;camelize&lt;/code&gt; ）から定数名を推測します。特に頭字語が含まれている場合、これらのヘルパーは常に互いに逆であるとは限りません。例えば、 &lt;code&gt;&quot;FOO&quot;.underscore&lt;/code&gt; ある &lt;code&gt;&quot;foo&quot;&lt;/code&gt; という、しかし &lt;code&gt;&quot;foo&quot;.camelize&lt;/code&gt; ある &lt;code&gt;&quot;Foo&quot;&lt;/code&gt; 、ではない &lt;code&gt;&quot;FOO&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="511da19c31b2c0386c93a99809c5103a9dff0940" translate="yes" xml:space="preserve">
          <source>However, a coming soon screen is only minimally useful, so you will soon create your &lt;code&gt;Book&lt;/code&gt; model and add the index action to &lt;code&gt;BooksController&lt;/code&gt;:</source>
          <target state="translated">ただし、近日公開の画面は &lt;code&gt;BooksController&lt;/code&gt; 役に立たないため、すぐに &lt;code&gt;Book&lt;/code&gt; モデルを作成し、BooksControllerにインデックスアクションを追加します。</target>
        </trans-unit>
        <trans-unit id="9dc202a3abcfd4df2a0c928ed94f58c95583fddb" translate="yes" xml:space="preserve">
          <source>However, attributes are serialized with the same rules as &lt;a href=&quot;relation#method-i-update_all&quot;&gt;&lt;code&gt;ActiveRecord::Relation#update_all&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">ただし、属性は&lt;a href=&quot;relation#method-i-update_all&quot;&gt; &lt;code&gt;ActiveRecord::Relation#update_all&lt;/code&gt; &lt;/a&gt;と同じルールでシリアル化されます</target>
        </trans-unit>
        <trans-unit id="43268ee6d3fbe8c1d13c9efed4934f9f7dd68211" translate="yes" xml:space="preserve">
          <source>However, attributes are serialized with the same rules as &lt;a href=&quot;relation#method-i-update_all&quot;&gt;ActiveRecord::Relation#update_all&lt;/a&gt;</source>
          <target state="translated">ただし、属性は&lt;a href=&quot;relation#method-i-update_all&quot;&gt;ActiveRecord :: Relation＃update_all&lt;/a&gt;と同じルールでシリアル化されます</target>
        </trans-unit>
        <trans-unit id="00a9753b1e0243d4bd7efbfdfa7ab60cbe541cac" translate="yes" xml:space="preserve">
          <source>However, autoloading happens on demand. If by chance the top-level &lt;code&gt;User&lt;/code&gt; was not yet loaded, then Rails assumes a relative reference by contract.</source>
          <target state="translated">ただし、自動読み込みはオンデマンドで行われます。偶然にもトップレベルの &lt;code&gt;User&lt;/code&gt; がまだロードされていない場合、Railsはコントラクトによる相対参照を想定しています。</target>
        </trans-unit>
        <trans-unit id="99bb47bb13587231651fad045780f00d9781b15e" translate="yes" xml:space="preserve">
          <source>However, because Turbolinks overrides the normal page loading process, the event that this relies upon will not be fired. If you have code that looks like this, you must change your code to do this instead:</source>
          <target state="translated">ただし、Turbolinks は通常のページ読み込み処理をオーバーライドしているため、これに依存したイベントは発生しません。このようなコードがある場合は、代わりにこのような処理を行うようにコードを変更する必要があります。</target>
        </trans-unit>
        <trans-unit id="69917e8bfaa1b145bda20567351d1b03a1f296bf" translate="yes" xml:space="preserve">
          <source>However, because you are developing the &lt;code&gt;blorgh&lt;/code&gt; engine on your local machine, you will need to specify the &lt;code&gt;:path&lt;/code&gt; option in your &lt;code&gt;Gemfile&lt;/code&gt;:</source>
          <target state="translated">あなたが開発しているのでしかし、 &lt;code&gt;blorgh&lt;/code&gt; ローカルマシンにエンジンを、あなたは指定する必要があります &lt;code&gt;:path&lt;/code&gt; あなたの中にオプション &lt;code&gt;Gemfile&lt;/code&gt; を：</target>
        </trans-unit>
        <trans-unit id="fe0d1ed1fd3c1db12422c5580a14479b11be0642" translate="yes" xml:space="preserve">
          <source>However, if &lt;code&gt;:requires_new&lt;/code&gt; is set, the block will be wrapped in a database savepoint acting as a sub-transaction.</source>
          <target state="translated">ただし、 &lt;code&gt;:requires_new&lt;/code&gt; が設定されている場合、ブロックはサブトランザクションとして機能するデータベースセーブポイントにラップされます。</target>
        </trans-unit>
        <trans-unit id="a1c6db80f2a3146d7a36800f432541acdd7e4df2" translate="yes" xml:space="preserve">
          <source>However, if &lt;code&gt;content_for&lt;/code&gt; is called several times, the final result would have all calls concatenated. For instance, if we have the following template:</source>
          <target state="translated">ただし、 &lt;code&gt;content_for&lt;/code&gt; が複数回呼び出された場合、最終結果ではすべての呼び出しが連結されます。たとえば、次のテンプレートがあるとします。</target>
        </trans-unit>
        <trans-unit id="6243c56fabbf7f098e04c5d0e8ba918767e8a8e3" translate="yes" xml:space="preserve">
          <source>However, if the date component is not provided, but any other upper components are supplied, then the day of the month defaults to 1:</source>
          <target state="translated">ただし、日付成分が指定されておらず、他の上位成分が指定されている場合は、月の日がデフォルトで1になります。</target>
        </trans-unit>
        <trans-unit id="39daf45119fcf864d7004fc8b5eaa1ee26936ee4" translate="yes" xml:space="preserve">
          <source>However, if you are using &lt;code&gt;I18n::Backend::Pluralization&lt;/code&gt; this handler will also raise &lt;code&gt;I18n::MissingTranslationData: translation missing: en.i18n.plural.rule&lt;/code&gt; exception that should normally be ignored to fall back to the default pluralization rule for English locale. To avoid this you may use additional check for translation key:</source>
          <target state="translated">ただし、 &lt;code&gt;I18n::Backend::Pluralization&lt;/code&gt; を使用している場合、このハンドラーは &lt;code&gt;I18n::MissingTranslationData: translation missing: en.i18n.plural.rule&lt;/code&gt; 例外も発生させます。例外は通常無視され、英語ロケールのデフォルトの複数形化ルールにフォールバックします。 。これを回避するには、翻訳キーの追加チェックを使用できます。</target>
        </trans-unit>
        <trans-unit id="51fc5c323f212aff66679fd797dfabb4d3eaacb2" translate="yes" xml:space="preserve">
          <source>However, if you are using &lt;code&gt;I18n::Backend::Pluralization&lt;/code&gt; this handler will also raise &lt;code&gt;I18n::MissingTranslationData: translation missing: en.i18n.plural.rule&lt;/code&gt; exception that should normally be ignored to fall back to the default pluralization rule for English locale. To avoid this you may use an additional check for the translation key:</source>
          <target state="translated">ただし、 &lt;code&gt;I18n::Backend::Pluralization&lt;/code&gt; を使用している場合、このハンドラーは &lt;code&gt;I18n::MissingTranslationData: translation missing: en.i18n.plural.rule&lt;/code&gt; 例外も発生させます。これは、英語ロケールのデフォルトの複数形ルールにフォールバックするために通常無視する必要があります。 。これを回避するには、翻訳キーの追加チェックを使用できます。</target>
        </trans-unit>
        <trans-unit id="e0aaa3ee7d1d2e7c4d26552aa76cf3cf14601c2e" translate="yes" xml:space="preserve">
          <source>However, if you do not need to reload the class, it is easier to define it in a directory which does not belong to the autoload paths. For instance, &lt;code&gt;lib&lt;/code&gt; is an idiomatic choice, it does not belong to the autoload paths by default but it belongs to &lt;code&gt;$LOAD_PATH&lt;/code&gt;. Then, in the place the class is needed at boot time, just perform a regular &lt;code&gt;require&lt;/code&gt; to load it.</source>
          <target state="translated">ただし、クラスをリロードする必要がない場合は、自動ロードパスに属していないディレクトリでクラスを定義する方が簡単です。たとえば、 &lt;code&gt;lib&lt;/code&gt; は慣用的な選択であり、デフォルトでは自動ロードパスに属していませんが、 &lt;code&gt;$LOAD_PATH&lt;/code&gt; に属しています。次に、起動時にクラスが必要な場所で、通常の &lt;code&gt;require&lt;/code&gt; を実行してクラスをロードします。</target>
        </trans-unit>
        <trans-unit id="b021041f50ca501bf34817d7f37f05aa9d1ce0e8" translate="yes" xml:space="preserve">
          <source>However, if you look again at our models now, you can see that the logic is duplicated. If in the future we increase the functionality of our blog - to include private messages, for instance - we might find ourselves duplicating the logic yet again. This is where concerns come in handy.</source>
          <target state="translated">しかし、現在のモデルをもう一度見てみると、ロジックが重複していることがわかります。将来的にブログの機能を増やして、例えばプライベートメッセージを追加した場合、またロジックが重複していることに気づくかもしれません。このような懸念がある場合に便利です。</target>
        </trans-unit>
        <trans-unit id="6351e27a9678f0b2ed66b1758d2cb1ccd86d861b" translate="yes" xml:space="preserve">
          <source>However, inside the actual extension code, you will not have access to the &lt;code&gt;record&lt;/code&gt; as above. In this case, you can access &lt;code&gt;proxy_association&lt;/code&gt;. For example, &lt;code&gt;record.association(:items)&lt;/code&gt; and &lt;code&gt;record.items.proxy_association&lt;/code&gt; will return the same object, allowing you to make calls like &lt;code&gt;proxy_association.owner&lt;/code&gt; inside association extensions.</source>
          <target state="translated">ただし、実際の拡張コード内では、上記のように &lt;code&gt;record&lt;/code&gt; アクセスできません。この場合、 &lt;code&gt;proxy_association&lt;/code&gt; にアクセスできます。たとえば、 &lt;code&gt;record.association(:items)&lt;/code&gt; と &lt;code&gt;record.items.proxy_association&lt;/code&gt; は同じオブジェクトを返すため、関連付け拡張機能内で &lt;code&gt;proxy_association.owner&lt;/code&gt; のような呼び出しを行うことができます。</target>
        </trans-unit>
        <trans-unit id="5ca969604625aa390eeeba69f9356ebcd5d01290" translate="yes" xml:space="preserve">
          <source>However, it's important to note that query caches are created at the start of an action and destroyed at the end of that action and thus persist only for the duration of the action. If you'd like to store query results in a more persistent fashion, you can with low level caching.</source>
          <target state="translated">しかし、クエリキャッシュはアクションの開始時に作成され、アクションの終了時に破棄されるので、アクションの間だけ持続することに注意することが重要です。クエリの結果をより永続的に保存したい場合は、低レベルのキャッシュを使用することができます。</target>
        </trans-unit>
        <trans-unit id="ca95ec4371792001005b02ba34f5d1e0294247cf" translate="yes" xml:space="preserve">
          <source>However, note that you don't need to use anchors because all routes are anchored at the start and the end.</source>
          <target state="translated">ただし、開始時と終了時にはすべてのルートがアンカーで固定されているので、アンカーを使用する必要はないので注意が必要です。</target>
        </trans-unit>
        <trans-unit id="a49cb88839dddbb07e1fae153f296c7f30ac6b64" translate="yes" xml:space="preserve">
          <source>However, note that you don't need to use anchors because all routes are anchored at the start.</source>
          <target state="translated">ただし、スタート時にすべてのルートがアンカーで固定されているため、アンカーを使用する必要はないので注意が必要です。</target>
        </trans-unit>
        <trans-unit id="ff48fd12ffc1edefc792f9be266c395eb2b59da2" translate="yes" xml:space="preserve">
          <source>However, sometimes you want to isolate your engine from the application, especially if your engine has its own router. To do that, you simply need to call &lt;code&gt;isolate_namespace&lt;/code&gt;. This method requires you to pass a module where all your controllers, helpers and models should be nested to:</source>
          <target state="translated">ただし、特にエンジンに独自のルーターがある場合は、エンジンをアプリケーションから分離したい場合があります。そのためには、単に &lt;code&gt;isolate_namespace&lt;/code&gt; を呼び出す必要があります。この方法では、すべてのコントローラー、ヘルパー、モデルをネストするモジュールを渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="e648a99442e681720d26774b335c6297cfa3f5d8" translate="yes" xml:space="preserve">
          <source>However, the above applies if the parent model is being updated as well. For example, If you wanted to create a &lt;code&gt;member&lt;/code&gt; named &lt;em&gt;joe&lt;/em&gt; and wanted to update the &lt;code&gt;posts&lt;/code&gt; at the same time, that would give an &lt;a href=&quot;../recordnotfound&quot;&gt;&lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt;&lt;/a&gt; error.</source>
          <target state="translated">ただし、親モデルも更新される場合は、上記が適用されます。たとえば、&lt;em&gt;joe&lt;/em&gt;という名前の &lt;code&gt;member&lt;/code&gt; を作成し、同時に &lt;code&gt;posts&lt;/code&gt; を更新したい場合は、&lt;a href=&quot;../recordnotfound&quot;&gt; &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; &lt;/a&gt;エラーが発生します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0c5318dc56bc50cdf63dfe0f19e0934e1645045d" translate="yes" xml:space="preserve">
          <source>However, the above applies if the parent model is being updated as well. For example, If you wanted to create a &lt;code&gt;member&lt;/code&gt; named &lt;em&gt;joe&lt;/em&gt; and wanted to update the &lt;code&gt;posts&lt;/code&gt; at the same time, that would give an &lt;a href=&quot;../recordnotfound&quot;&gt;ActiveRecord::RecordNotFound&lt;/a&gt; error.</source>
          <target state="translated">ただし、上記は親モデルも更新されている場合に適用されます。たとえば、&lt;em&gt;joe&lt;/em&gt;という名前の &lt;code&gt;member&lt;/code&gt; を作成し、同時に &lt;code&gt;posts&lt;/code&gt; を更新したい場合、&lt;a href=&quot;../recordnotfound&quot;&gt;ActiveRecord :: RecordNotFound&lt;/a&gt;エラーが発生します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="de3ad4fb1b68576665e4e865eb76a12a63974488" translate="yes" xml:space="preserve">
          <source>However, the attacker may also take over the account by changing the e-mail address. After they change it, they will go to the forgotten-password page and the (possibly new) password will be mailed to the attacker's e-mail address. As a countermeasure &lt;em&gt;require the user to enter the password when changing the e-mail address, too&lt;/em&gt;.</source>
          <target state="translated">ただし、攻撃者は電子メールアドレスを変更することでアカウントを乗っ取る可能性もあります。パスワードを変更した後、パスワードを忘れたページに移動し、（おそらく新しい）パスワードが攻撃者の電子メールアドレスに送信されます。対策として、&lt;em&gt;メールアドレスを変更する際にもパスワードの入力を求めます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="250a1d4f0e5c870ddf69e80d870a7e522b4d218c" translate="yes" xml:space="preserve">
          <source>However, there are examples where this strategy doesn't make sense. For example, suppose a person has many projects, and each project has many tasks. If we deleted one of a person's tasks, we would probably not want the project to be deleted. In this scenario, the delete method won't actually work: it can only be used if the association on the join model is a &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;&lt;code&gt;belongs_to&lt;/code&gt;&lt;/a&gt;. In other situations you are expected to perform operations directly on either the associated records or the &lt;code&gt;:through&lt;/code&gt; association.</source>
          <target state="translated">ただし、この戦略が意味をなさない例があります。たとえば、ある人に多くのプロジェクトがあり、各プロジェクトに多くのタスクがあるとします。ある人のタスクの1つを削除した場合、プロジェクトを削除したくないでしょう。このシナリオでは、deleteメソッドは実際には機能しません。結合モデルの関連付けが&lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt; &lt;code&gt;belongs_to&lt;/code&gt; である&lt;/a&gt;場合にのみ使用できます。他の状況では、関連付けられたレコードまたは &lt;code&gt;:through&lt;/code&gt; 関連付けのいずれかに対して直接操作を実行することが期待されます。</target>
        </trans-unit>
        <trans-unit id="f83d01fd4381565af0fa582e69907039d00845c8" translate="yes" xml:space="preserve">
          <source>However, there are examples where this strategy doesn't make sense. For example, suppose a person has many projects, and each project has many tasks. If we deleted one of a person's tasks, we would probably not want the project to be deleted. In this scenario, the delete method won't actually work: it can only be used if the association on the join model is a &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt;. In other situations you are expected to perform operations directly on either the associated records or the &lt;code&gt;:through&lt;/code&gt; association.</source>
          <target state="translated">ただし、この戦略が意味をなさない例もあります。たとえば、ある人に多くのプロジェクトがあり、各プロジェクトに多くのタスクがあるとします。人のタスクの1つを削除した場合、おそらくプロジェクトを削除したくないでしょう。このシナリオでは、deleteメソッドは実際には機能しません。これは、結合モデルの関連付けが&lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_toである&lt;/a&gt;場合にのみ使用できます。他の状況では、関連付けられたレコードまたは &lt;code&gt;:through&lt;/code&gt; 関連付けのいずれかで直接操作を実行することが期待されます。</target>
        </trans-unit>
        <trans-unit id="4841685bf54e6f0aaf81098b32ab4e05b6c89f53" translate="yes" xml:space="preserve">
          <source>However, there is one important caveat: A scope will always return an &lt;code&gt;ActiveRecord::Relation&lt;/code&gt; object, even if the conditional evaluates to &lt;code&gt;false&lt;/code&gt;, whereas a class method, will return &lt;code&gt;nil&lt;/code&gt;. This can cause &lt;code&gt;NoMethodError&lt;/code&gt; when chaining class methods with conditionals, if any of the conditionals return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">ただし、重要な注意点が1つあります。条件が &lt;code&gt;false&lt;/code&gt; と評価されても、スコープは常に &lt;code&gt;ActiveRecord::Relation&lt;/code&gt; オブジェクトを返しますが、クラスメソッドは &lt;code&gt;nil&lt;/code&gt; を返します。条件のいずれかが &lt;code&gt;false&lt;/code&gt; を返す場合、これは条件付きのクラスメソッドをチェーンするときに &lt;code&gt;NoMethodError&lt;/code&gt; を引き起こす可能性があります。</target>
        </trans-unit>
        <trans-unit id="7d547afe4c91eab8e58bf0d52357360314987116" translate="yes" xml:space="preserve">
          <source>However, this does not filter all HTML, a few tags will be left (by design), for example &amp;lt;a&amp;gt;:</source>
          <target state="translated">ただし、これはすべてのHTMLをフィルターするわけではなく、&amp;lt;a&amp;gt;のように、いくつかのタグが（設計上）残ります。</target>
        </trans-unit>
        <trans-unit id="840c396a6eadc8ac2444a8bcac3624059ad242a8" translate="yes" xml:space="preserve">
          <source>However, this does not filter all HTML, a few tags will be left (by design), for example &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">ただし、これはすべてのHTMLをフィルタリングするわけではなく、いくつかのタグが（設計上）残されます。たとえば、 &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="7e3314658f0aab6ede84a858771ef9171fa23fd7" translate="yes" xml:space="preserve">
          <source>However, this is just duplicating the functionality that would be provided to you by a class method.</source>
          <target state="translated">しかし、これはクラスメソッドで提供されるであろう機能を複製しているだけです。</target>
        </trans-unit>
        <trans-unit id="cff10d872b25e4f8383a232cecf1e7a44317dc14" translate="yes" xml:space="preserve">
          <source>However, those can be customized:</source>
          <target state="translated">しかし、それらはカスタマイズすることができます。</target>
        </trans-unit>
        <trans-unit id="e6339dd4d712666866a2aa08da448e8fa3816461" translate="yes" xml:space="preserve">
          <source>However, we will take this one step further by using the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/UrlHelper.html#method-i-link_to&quot;&gt;&lt;code&gt;link_to&lt;/code&gt;&lt;/a&gt; helper. The &lt;code&gt;link_to&lt;/code&gt; helper renders a link with its first argument as the link's text and its second argument as the link's destination. If we pass a model object as the second argument, &lt;code&gt;link_to&lt;/code&gt; will call the appropriate path helper to convert the object to a path. For example, if we pass an article, &lt;code&gt;link_to&lt;/code&gt; will call &lt;code&gt;article_path&lt;/code&gt;. So &lt;code&gt;app/views/articles/index.html.erb&lt;/code&gt; becomes:</source>
          <target state="translated">ただし、&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/UrlHelper.html#method-i-link_to&quot;&gt; &lt;code&gt;link_to&lt;/code&gt; &lt;/a&gt;ヘルパーを使用して、これをさらに一歩進めます。 &lt;code&gt;link_to&lt;/code&gt; のヘルパーはリンクのテキストやリンクの宛先として2番目の引数として最初の引数とのリンクをレンダリングします。2番目の引数としてモデルオブジェクトを渡すと、 &lt;code&gt;link_to&lt;/code&gt; は適切なパスヘルパーを呼び出して、オブジェクトをパスに変換します。たとえば、記事を渡すと、 &lt;code&gt;link_to&lt;/code&gt; は &lt;code&gt;article_path&lt;/code&gt; を呼び出します。したがって、 &lt;code&gt;app/views/articles/index.html.erb&lt;/code&gt; は次のようになります。</target>
        </trans-unit>
        <trans-unit id="e585ba3ecfe6843b61d99819fec1db09a896d181" translate="yes" xml:space="preserve">
          <source>However, what most web application designers neglect, are the forgot-password pages. These pages often admit that the entered user name or e-mail address has (not) been found. This allows an attacker to compile a list of user names and brute-force the accounts.</source>
          <target state="translated">しかし、ほとんどのウェブアプリケーションのデザイナーが無視しているのは、パスワードを忘れたページです。これらのページはしばしば、入力されたユーザー名や電子メールアドレスが見つからなかったことを認めています。これにより、攻撃者はユーザー名のリストを作成し、アカウントをブルートフォースすることができます。</target>
        </trans-unit>
        <trans-unit id="b0256094b7cb2c4d8af05a62265d7ae3f095d02b" translate="yes" xml:space="preserve">
          <source>However, when a layout is explicitly set, the explicitly set layout wins:</source>
          <target state="translated">ただし、レイアウトが明示的に設定されている場合は、明示的に設定されているレイアウトが勝ちます。</target>
        </trans-unit>
        <trans-unit id="2b2376fe47d910a09b5a679285e797b8a3b4645f" translate="yes" xml:space="preserve">
          <source>However, when using &lt;code&gt;abstract_class&lt;/code&gt;, &lt;code&gt;Shape&lt;/code&gt; is omitted from the hierarchy:</source>
          <target state="translated">ただし、 &lt;code&gt;abstract_class&lt;/code&gt; を使用する場合、 &lt;code&gt;Shape&lt;/code&gt; は階層から省略されます。</target>
        </trans-unit>
        <trans-unit id="25a1feb8ff2f675b6e91c7f7ffbfbf92c041051c" translate="yes" xml:space="preserve">
          <source>However, you can also have multiple session instances open per test, and even extend those instances with assertions and methods to create a very powerful testing DSL that is specific for your application. You can even reference any named routes you happen to have defined.</source>
          <target state="translated">しかし、テストごとに複数のセッションインスタンスを開いたり、アサーションやメソッドでインスタンスを拡張したりして、アプリケーションに特化した非常に強力なテスト DSL を作成することもできます。たまたま定義した名前付きルートを参照することもできます。</target>
        </trans-unit>
        <trans-unit id="ecff899ac9bf57083ef5efc788ce41a3ed5838e7" translate="yes" xml:space="preserve">
          <source>However, you can force a reload in the console by executing &lt;code&gt;reload!&lt;/code&gt;:</source>
          <target state="translated">ただし、reloadを実行すると、コンソールで強制的にリロードできます &lt;code&gt;reload!&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="fe517e9e76323725cad43ef7035c56932e6a6261" translate="yes" xml:space="preserve">
          <source>However, you can force a reload in the console executing &lt;code&gt;reload!&lt;/code&gt;:</source>
          <target state="translated">ただし、リロードを実行するコンソールで強制的にリロードできます &lt;code&gt;reload!&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="7de9d2d523ce537606b87e971cce549cc7e30139" translate="yes" xml:space="preserve">
          <source>However, you shouldn't abuse this feature as having too many route files make discoverability and understandability more difficult. Depending on the application, it might be easier for developers to have a single routing file even if you have few hundreds routes. You shouldn't try to create a new routing file for each category (e.g. admin, api, ...) at all cost; the Rails routing DSL already offers a way to break routes in a organised manner with &lt;code&gt;namespaces&lt;/code&gt; and &lt;code&gt;scopes&lt;/code&gt;.</source>
          <target state="translated">ただし、ルートファイルが多すぎると検出可能性と理解性が難しくなるため、この機能を悪用しないでください。アプリケーションによっては、数百のルートがある場合でも、開発者が単一のルーティングファイルを使用する方が簡単な場合があります。カテゴリ（管理者、APIなど）ごとに新しいルーティングファイルを作成しようとしないでください。 RailsルーティングDSLは、 &lt;code&gt;namespaces&lt;/code&gt; と &lt;code&gt;scopes&lt;/code&gt; を使用して組織化された方法でルートを分割する方法をすでに提供しています。</target>
        </trans-unit>
        <trans-unit id="a0ec28a1772bb1973851eb871bdb66bcdab8c385" translate="yes" xml:space="preserve">
          <source>However, you will need to make a change if you are using &lt;code&gt;form_for&lt;/code&gt; to update a resource in conjunction with a custom route using the &lt;code&gt;PUT&lt;/code&gt; HTTP method:</source>
          <target state="translated">ただし、 &lt;code&gt;form_for&lt;/code&gt; を使用して、 &lt;code&gt;PUT&lt;/code&gt; HTTPメソッドを使用するカスタムルートと組み合わせてリソースを更新する場合は、変更を加える必要があります。</target>
        </trans-unit>
        <trans-unit id="a33847d27426f663ced8353aef2ad3486ba72872" translate="yes" xml:space="preserve">
          <source>However; this method bypasses the ConnectionPool's thread-safe connection access pattern. A returned connection may be owned by another thread, unowned, or by happen-stance owned by the calling thread.</source>
          <target state="translated">ただし、このメソッドは ConnectionPool のスレッドセーフ接続アクセスパターンをバイパスします。返される接続は、他のスレッドが所有しているか、所有されていないか、または呼び出し元のスレッドが所有しているハプンスタンスによって所有されている可能性があります。</target>
        </trans-unit>
        <trans-unit id="4be0f096d3f7a7994dc455fa3d2d2e65b7a3b5db" translate="yes" xml:space="preserve">
          <source>Hstore</source>
          <target state="translated">Hstore</target>
        </trans-unit>
        <trans-unit id="a7c5a0fbaff59ecbccbd640dc062595406f34c6a" translate="yes" xml:space="preserve">
          <source>Http::Cache::Request</source>
          <target state="translated">Http::Cache::Request</target>
        </trans-unit>
        <trans-unit id="e32caa6b7f8230340d2b383fe5e648e219d9dbcd" translate="yes" xml:space="preserve">
          <source>Http::Cache::Request#etag_matches?</source>
          <target state="translated">Http::Cache::Request#etag_matches?</target>
        </trans-unit>
        <trans-unit id="bc649a781f3d55d49d971535e736b4728e8c63d0" translate="yes" xml:space="preserve">
          <source>Http::Cache::Request#fresh?</source>
          <target state="translated">Http::Cache::Request#fresh?</target>
        </trans-unit>
        <trans-unit id="0ebfca9938b683f810c1513a22690fd15b598988" translate="yes" xml:space="preserve">
          <source>Http::Cache::Request#if_modified_since</source>
          <target state="translated">Http::Cache::Request#if_modified_since</target>
        </trans-unit>
        <trans-unit id="7eb19b29822d083c9afb07708bc200f491ee50c0" translate="yes" xml:space="preserve">
          <source>Http::Cache::Request#if_none_match</source>
          <target state="translated">Http::Cache::Request#if_none_match</target>
        </trans-unit>
        <trans-unit id="3950e71c60ce7de69c8c4a15b91866ba4a721a31" translate="yes" xml:space="preserve">
          <source>Http::Cache::Request#if_none_match_etags</source>
          <target state="translated">Http::Cache::Request#if_none_match_etags</target>
        </trans-unit>
        <trans-unit id="24e0aea68f89f397560918084b5e4b54dfa2a3c2" translate="yes" xml:space="preserve">
          <source>Http::Cache::Request#not_modified?</source>
          <target state="translated">Http::Cache::Request#not_modified?</target>
        </trans-unit>
        <trans-unit id="0e75d6a392709b34dabd3097cc752073a13ddbb9" translate="yes" xml:space="preserve">
          <source>Http::Cache::Response</source>
          <target state="translated">Http::Cache::Response</target>
        </trans-unit>
        <trans-unit id="beabb6afda50c3fe78f338489d4b094869a6ef1b" translate="yes" xml:space="preserve">
          <source>Http::Cache::Response#cache_control</source>
          <target state="translated">Http::Cache::Response#cache_control</target>
        </trans-unit>
        <trans-unit id="016e359152fdab141a73db50aef3feceb2c5e237" translate="yes" xml:space="preserve">
          <source>Http::Cache::Response#date</source>
          <target state="translated">Http::Cache::Response#date</target>
        </trans-unit>
        <trans-unit id="867a4af6e51be9b5c02b27a3597853dcbfafef8a" translate="yes" xml:space="preserve">
          <source>Http::Cache::Response#date=</source>
          <target state="translated">Http::Cache::Response#date=</target>
        </trans-unit>
        <trans-unit id="108caec47f2e9b58a40f97ad3c892062bf0dc063" translate="yes" xml:space="preserve">
          <source>Http::Cache::Response#date?</source>
          <target state="translated">Http::Cache::Response#date?</target>
        </trans-unit>
        <trans-unit id="c1ab51ce7baf562291dce1d4ee024c04975f94c9" translate="yes" xml:space="preserve">
          <source>Http::Cache::Response#etag=</source>
          <target state="translated">Http::Cache::Response#etag=</target>
        </trans-unit>
        <trans-unit id="cf0b4e869762bf765a808a52f9439029206fb072" translate="yes" xml:space="preserve">
          <source>Http::Cache::Response#etag?</source>
          <target state="translated">Http::Cache::Response#etag?</target>
        </trans-unit>
        <trans-unit id="5e240bd8799d2018c6e1231d56d781aa896c71c9" translate="yes" xml:space="preserve">
          <source>Http::Cache::Response#last_modified</source>
          <target state="translated">Http::Cache::Response#last_modified</target>
        </trans-unit>
        <trans-unit id="427343abecf76cfc9d343d68a91d2ee24f5072b7" translate="yes" xml:space="preserve">
          <source>Http::Cache::Response#last_modified=</source>
          <target state="translated">Http::Cache::Response#last_modified=</target>
        </trans-unit>
        <trans-unit id="d80139a4215b89d650c0344c358e518b9d24074f" translate="yes" xml:space="preserve">
          <source>Http::Cache::Response#last_modified?</source>
          <target state="translated">Http::Cache::Response#last_modified?</target>
        </trans-unit>
        <trans-unit id="ce2ca0470c4f4ca0ac4304e678b82072d7a304d0" translate="yes" xml:space="preserve">
          <source>Http::Cache::Response#strong_etag=</source>
          <target state="translated">Http::Cache::Response#strong_etag=</target>
        </trans-unit>
        <trans-unit id="bb1727b8d1f0092230c88cf989f9b595a7fde7fc" translate="yes" xml:space="preserve">
          <source>Http::Cache::Response#strong_etag?</source>
          <target state="translated">Http::Cache::Response#strong_etag?</target>
        </trans-unit>
        <trans-unit id="033d97f518a47a08fa8e71d5114ca7c4af768ec5" translate="yes" xml:space="preserve">
          <source>Http::Cache::Response#weak_etag=</source>
          <target state="translated">Http::Cache::Response#weak_etag=</target>
        </trans-unit>
        <trans-unit id="bd84b6d36ff75bbec7a49594e9f395838093c563" translate="yes" xml:space="preserve">
          <source>Http::Cache::Response#weak_etag?</source>
          <target state="translated">Http::Cache::Response#weak_etag?</target>
        </trans-unit>
        <trans-unit id="1e3398cad7a48c35f0179c7ab9cb325b6f1e90b4" translate="yes" xml:space="preserve">
          <source>Http::FilterParameters</source>
          <target state="translated">Http::FilterParameters</target>
        </trans-unit>
        <trans-unit id="69271225aeeb8e29812fd6076c31b696f6d9f61e" translate="yes" xml:space="preserve">
          <source>Http::FilterParameters#env_filter</source>
          <target state="translated">Http::FilterParameters#env_filter</target>
        </trans-unit>
        <trans-unit id="ff0675a4548479445427665b3653f69637a48455" translate="yes" xml:space="preserve">
          <source>Http::FilterParameters#filtered_env</source>
          <target state="translated">Http::FilterParameters#filtered_env</target>
        </trans-unit>
        <trans-unit id="a105629409171b1f02dfbf16ffa9e92df877ae07" translate="yes" xml:space="preserve">
          <source>Http::FilterParameters#filtered_parameters</source>
          <target state="translated">Http::FilterParameters#filtered_parameters</target>
        </trans-unit>
        <trans-unit id="5a7c134c6c5128b8653503f801a966a954da9a61" translate="yes" xml:space="preserve">
          <source>Http::FilterParameters#filtered_path</source>
          <target state="translated">Http::FilterParameters#filtered_path</target>
        </trans-unit>
        <trans-unit id="f88d207a9e055490db48ef2133bb0f3016e74a8c" translate="yes" xml:space="preserve">
          <source>Http::FilterParameters#filtered_query_string</source>
          <target state="translated">Http::FilterParameters#filtered_query_string</target>
        </trans-unit>
        <trans-unit id="09471b55ce10de26e8a756c710b47375a8d3e696" translate="yes" xml:space="preserve">
          <source>Http::FilterParameters#parameter_filter</source>
          <target state="translated">Http::FilterParameters#parameter_filter</target>
        </trans-unit>
        <trans-unit id="595e3ea371cb1014cb4a9ad1fbe4bc378a963119" translate="yes" xml:space="preserve">
          <source>Http::FilterParameters#parameter_filter_for</source>
          <target state="translated">Http::FilterParameters#parameter_filter_for</target>
        </trans-unit>
        <trans-unit id="4305443dde10b961f48300cc42e0cee3b5be59bb" translate="yes" xml:space="preserve">
          <source>Http::FilterParameters::new</source>
          <target state="translated">Http::FilterParameters::new</target>
        </trans-unit>
        <trans-unit id="2711820f1d5148d3a4262838c54ea260dc09ded2" translate="yes" xml:space="preserve">
          <source>Http::Headers</source>
          <target state="translated">Http::Headers</target>
        </trans-unit>
        <trans-unit id="38ed85a32c770ec064cb0bc29f5040eed329bd60" translate="yes" xml:space="preserve">
          <source>Http::Headers#[]</source>
          <target state="translated">Http::Headers#[]</target>
        </trans-unit>
        <trans-unit id="88ea108368b9cf88410130035ba76ae4857baa5f" translate="yes" xml:space="preserve">
          <source>Http::Headers#[]=</source>
          <target state="translated">Http::Headers#[]=</target>
        </trans-unit>
        <trans-unit id="603cb0fc6f2e1239663f6e042cb478d5b72f277d" translate="yes" xml:space="preserve">
          <source>Http::Headers#add</source>
          <target state="translated">Http::Headers#add</target>
        </trans-unit>
        <trans-unit id="46510ef50610432a2c331833c66d006eae78c78c" translate="yes" xml:space="preserve">
          <source>Http::Headers#each</source>
          <target state="translated">Http::Headers#each</target>
        </trans-unit>
        <trans-unit id="1422c59f997f08faf80f7a113284b3b9a38cef40" translate="yes" xml:space="preserve">
          <source>Http::Headers#env</source>
          <target state="translated">Http::Headers#env</target>
        </trans-unit>
        <trans-unit id="b1417046c7d9fc3b59e2f0e32e0002d777ea2e33" translate="yes" xml:space="preserve">
          <source>Http::Headers#fetch</source>
          <target state="translated">Http::Headers#fetch</target>
        </trans-unit>
        <trans-unit id="2b6abd6116859a9d136f093ec1889e0c84478f06" translate="yes" xml:space="preserve">
          <source>Http::Headers#include?</source>
          <target state="translated">Http::Headers#include?</target>
        </trans-unit>
        <trans-unit id="bd3c01ed5c1520bb43c63eb2115e65b1f9a73718" translate="yes" xml:space="preserve">
          <source>Http::Headers#key?</source>
          <target state="translated">Http::Headers#key?</target>
        </trans-unit>
        <trans-unit id="ff7c090fb277049357eef7399a12ada38357a897" translate="yes" xml:space="preserve">
          <source>Http::Headers#merge</source>
          <target state="translated">Http::Headers#merge</target>
        </trans-unit>
        <trans-unit id="6c1c23ddb38862255def29d224b71d0620d0a9cf" translate="yes" xml:space="preserve">
          <source>Http::Headers#merge!</source>
          <target state="translated">Http::Headers#merge!</target>
        </trans-unit>
        <trans-unit id="7b984bab14d989ac1e0b678ecab656a937202fff" translate="yes" xml:space="preserve">
          <source>Http::Headers::from_hash</source>
          <target state="translated">Http::Headers::from_hash</target>
        </trans-unit>
        <trans-unit id="2257c1b102c0ccbf013b6631b48ab59158a9ecc9" translate="yes" xml:space="preserve">
          <source>Http::MimeNegotiation</source>
          <target state="translated">Http::MimeNegotiation</target>
        </trans-unit>
        <trans-unit id="28e4979084a199d15e7a61d229d47a358ffa8058" translate="yes" xml:space="preserve">
          <source>Http::MimeNegotiation#accepts</source>
          <target state="translated">Http::MimeNegotiation#accepts</target>
        </trans-unit>
        <trans-unit id="0f26436f3efa51cd4ac5f6be9f904c70ef0a8d1d" translate="yes" xml:space="preserve">
          <source>Http::MimeNegotiation#content_mime_type</source>
          <target state="translated">Http::MimeNegotiation#content_mime_type</target>
        </trans-unit>
        <trans-unit id="824f4ea243818e11caa3b7e0ba35ccf177bcc040" translate="yes" xml:space="preserve">
          <source>Http::MimeNegotiation#content_type</source>
          <target state="translated">Http::MimeNegotiation#content_type</target>
        </trans-unit>
        <trans-unit id="b0932b5e12265f1e65831401d3eb35040175a5b1" translate="yes" xml:space="preserve">
          <source>Http::MimeNegotiation#format</source>
          <target state="translated">Http::MimeNegotiation#format</target>
        </trans-unit>
        <trans-unit id="c46e89f36b99ad2801b071dd6c3956e349e529fc" translate="yes" xml:space="preserve">
          <source>Http::MimeNegotiation#format=</source>
          <target state="translated">Http::MimeNegotiation#format=</target>
        </trans-unit>
        <trans-unit id="9e269cb2ba0e561611ecce279ad79dca7d0e856f" translate="yes" xml:space="preserve">
          <source>Http::MimeNegotiation#format_from_path_extension</source>
          <target state="translated">Http::MimeNegotiation#format_from_path_extension</target>
        </trans-unit>
        <trans-unit id="a5d7158782f41e529cb86fc93e86d11da2fa3f6e" translate="yes" xml:space="preserve">
          <source>Http::MimeNegotiation#formats</source>
          <target state="translated">Http::MimeNegotiation#formats</target>
        </trans-unit>
        <trans-unit id="67230598da3a04ff73365d0d7ea94e666382cc85" translate="yes" xml:space="preserve">
          <source>Http::MimeNegotiation#formats=</source>
          <target state="translated">Http::MimeNegotiation#formats=</target>
        </trans-unit>
        <trans-unit id="3e5a6acd289019afbac550249dc0078a8af49df0" translate="yes" xml:space="preserve">
          <source>Http::MimeNegotiation#negotiate_mime</source>
          <target state="translated">Http::MimeNegotiation#negotiate_mime</target>
        </trans-unit>
        <trans-unit id="81d9dd14a05075bda9987f0fe5a7770ddaea16e1" translate="yes" xml:space="preserve">
          <source>Http::MimeNegotiation#use_accept_header</source>
          <target state="translated">Http::MimeNegotiation#use_accept_header</target>
        </trans-unit>
        <trans-unit id="3d51f56fbbe8f7d2a37c760ae47e3b39ad7f7cf7" translate="yes" xml:space="preserve">
          <source>Http::MimeNegotiation#valid_accept_header</source>
          <target state="translated">Http::MimeNegotiation#valid_accept_header</target>
        </trans-unit>
        <trans-unit id="d2d19ccd510264d8d777f09e6e6046486123dc57" translate="yes" xml:space="preserve">
          <source>Http::MimeNegotiation#variant</source>
          <target state="translated">Http::MimeNegotiation#variant</target>
        </trans-unit>
        <trans-unit id="854c16ebac08e7d4c0b4880f33da98e9da80a025" translate="yes" xml:space="preserve">
          <source>Http::MimeNegotiation#variant=</source>
          <target state="translated">Http::MimeNegotiation#variant=</target>
        </trans-unit>
        <trans-unit id="0c2df5da6168debedc49608713c4620269111efe" translate="yes" xml:space="preserve">
          <source>Http::Parameters</source>
          <target state="translated">Http::Parameters</target>
        </trans-unit>
        <trans-unit id="597235dadc3f35152bd0b0bda516cf446942249f" translate="yes" xml:space="preserve">
          <source>Http::Parameters#parameters</source>
          <target state="translated">Http::Parameters#parameters</target>
        </trans-unit>
        <trans-unit id="01382f4a936e56de549865818f6cd1085205e148" translate="yes" xml:space="preserve">
          <source>Http::Parameters#params</source>
          <target state="translated">Http::Parameters#params</target>
        </trans-unit>
        <trans-unit id="51d9b4b5bb262e216028ae52b7ace3d7d52e6929" translate="yes" xml:space="preserve">
          <source>Http::Parameters#path_parameters</source>
          <target state="translated">Http::Parameters#path_parameters</target>
        </trans-unit>
        <trans-unit id="2ba1c44af8b7d02e322ba0cb52c75b33d42f51ef" translate="yes" xml:space="preserve">
          <source>Http::Parameters::ClassMethods</source>
          <target state="translated">Http::Parameters::ClassMethods</target>
        </trans-unit>
        <trans-unit id="d2335ec179c3145fcc748e602acffe7ead5ade7c" translate="yes" xml:space="preserve">
          <source>Http::Parameters::ClassMethods#parameter_parsers=</source>
          <target state="translated">Http::Parameters::ClassMethods#parameter_parsers=</target>
        </trans-unit>
        <trans-unit id="95b32371490b2b43f1c7c36389e09db78949950d" translate="yes" xml:space="preserve">
          <source>Http::Parameters::parameter_parsers</source>
          <target state="translated">Http::Parameters::parameter_parsers</target>
        </trans-unit>
        <trans-unit id="e57621e323395a4ec7cad6ea2f972adaea75b969" translate="yes" xml:space="preserve">
          <source>Http::URL</source>
          <target state="translated">Http::URL</target>
        </trans-unit>
        <trans-unit id="54acaa134c5b72f1c479f9fcdb35f3f586831d77" translate="yes" xml:space="preserve">
          <source>Http::URL#domain</source>
          <target state="translated">Http::URL#domain</target>
        </trans-unit>
        <trans-unit id="a32497053b411b94e6f9df5c5cdb5d6f57d10b2b" translate="yes" xml:space="preserve">
          <source>Http::URL#host</source>
          <target state="translated">Http::URL#host</target>
        </trans-unit>
        <trans-unit id="454a81f24c14abb44b549d4d1fceeb10f0915cde" translate="yes" xml:space="preserve">
          <source>Http::URL#host_with_port</source>
          <target state="translated">Http::URL#host_with_port</target>
        </trans-unit>
        <trans-unit id="2d6debaea75e2b5c64315bceaa61ecfeb3c1dd2c" translate="yes" xml:space="preserve">
          <source>Http::URL#optional_port</source>
          <target state="translated">Http::URL#optional_port</target>
        </trans-unit>
        <trans-unit id="178bd0322bb57accc5d9029dc65e8a70eaae6656" translate="yes" xml:space="preserve">
          <source>Http::URL#port</source>
          <target state="translated">Http::URL#port</target>
        </trans-unit>
        <trans-unit id="c29c70280184067ba2cf8d15ef9b08bffb414b09" translate="yes" xml:space="preserve">
          <source>Http::URL#port_string</source>
          <target state="translated">Http::URL#port_string</target>
        </trans-unit>
        <trans-unit id="29b1287032c0f3ca95ffb0070c2650461103fb56" translate="yes" xml:space="preserve">
          <source>Http::URL#protocol</source>
          <target state="translated">Http::URL#protocol</target>
        </trans-unit>
        <trans-unit id="8c7e815c5ad15aff53d6412553519e2b980150dd" translate="yes" xml:space="preserve">
          <source>Http::URL#raw_host_with_port</source>
          <target state="translated">Http::URL#raw_host_with_port</target>
        </trans-unit>
        <trans-unit id="2366214a11b1f4da505f7e9540899825a70b3917" translate="yes" xml:space="preserve">
          <source>Http::URL#server_port</source>
          <target state="translated">Http::URL#server_port</target>
        </trans-unit>
        <trans-unit id="28e476623dcb030fef6f48e4996b746fa5032c27" translate="yes" xml:space="preserve">
          <source>Http::URL#standard_port</source>
          <target state="translated">Http::URL#standard_port</target>
        </trans-unit>
        <trans-unit id="b9b594cb9f60bebdf8daf47b934416bda5e8ee63" translate="yes" xml:space="preserve">
          <source>Http::URL#standard_port?</source>
          <target state="translated">Http::URL#standard_port?</target>
        </trans-unit>
        <trans-unit id="a04de7e8b38c764a421e210b0564c2b9e83529c3" translate="yes" xml:space="preserve">
          <source>Http::URL#subdomain</source>
          <target state="translated">Http::URL#subdomain</target>
        </trans-unit>
        <trans-unit id="fbcbda8bb2a0af38d1ef85fbc221c041b6a15b80" translate="yes" xml:space="preserve">
          <source>Http::URL#subdomains</source>
          <target state="translated">Http::URL#subdomains</target>
        </trans-unit>
        <trans-unit id="a65b17d0e86376be642f307059b9b2542d69f13b" translate="yes" xml:space="preserve">
          <source>Http::URL#url</source>
          <target state="translated">Http::URL#url</target>
        </trans-unit>
        <trans-unit id="922932752dc94f49e2b5ae6cfbda98d15a01ed3a" translate="yes" xml:space="preserve">
          <source>Http::URL::extract_domain</source>
          <target state="translated">Http::URL::extract_domain</target>
        </trans-unit>
        <trans-unit id="c58bc194d097821bc4ffb7119785c69d2bb20168" translate="yes" xml:space="preserve">
          <source>Http::URL::extract_subdomain</source>
          <target state="translated">Http::URL::extract_subdomain</target>
        </trans-unit>
        <trans-unit id="b0ec6bc594c98417fd83ca3e027a9389f347f27b" translate="yes" xml:space="preserve">
          <source>Http::URL::extract_subdomains</source>
          <target state="translated">Http::URL::extract_subdomains</target>
        </trans-unit>
        <trans-unit id="cbf7ff12d15abb741d6c39e914df4f3181039ca0" translate="yes" xml:space="preserve">
          <source>Http::URL::full_url_for</source>
          <target state="translated">Http::URL::full_url_for</target>
        </trans-unit>
        <trans-unit id="f818473e777871dde59e74866b89b4137d6f5a65" translate="yes" xml:space="preserve">
          <source>Http::URL::new</source>
          <target state="translated">Http::URL::new</target>
        </trans-unit>
        <trans-unit id="2cafa40e18b57a2f257ffa197fe766e9e2c4c2c3" translate="yes" xml:space="preserve">
          <source>Http::URL::path_for</source>
          <target state="translated">Http::URL::path_for</target>
        </trans-unit>
        <trans-unit id="8e1e9784663dbca58bbb46e4eb57d887f24632a8" translate="yes" xml:space="preserve">
          <source>Http::URL::url_for</source>
          <target state="translated">Http::URL::url_for</target>
        </trans-unit>
        <trans-unit id="b7f78d2071031c609e7f6eccaba8f48d5ff0a3b1" translate="yes" xml:space="preserve">
          <source>Http::UploadedFile</source>
          <target state="translated">Http::UploadedFile</target>
        </trans-unit>
        <trans-unit id="a85f780827bb344446d82c32c339af2616fde1c1" translate="yes" xml:space="preserve">
          <source>Http::UploadedFile#close</source>
          <target state="translated">Http::UploadedFile#close</target>
        </trans-unit>
        <trans-unit id="8924591219ef1695aaa1600918fcf4974ad76355" translate="yes" xml:space="preserve">
          <source>Http::UploadedFile#content_type</source>
          <target state="translated">Http::UploadedFile#content_type</target>
        </trans-unit>
        <trans-unit id="19c8b2abb93a26b84a7661bae11a79d45c4027ab" translate="yes" xml:space="preserve">
          <source>Http::UploadedFile#eof?</source>
          <target state="translated">Http::UploadedFile#eof?</target>
        </trans-unit>
        <trans-unit id="e3c522e1a29ce281ba369fd5db260ea0971fb3ae" translate="yes" xml:space="preserve">
          <source>Http::UploadedFile#headers</source>
          <target state="translated">Http::UploadedFile#headers</target>
        </trans-unit>
        <trans-unit id="fcdb988e3bd875daa1b8d42f0ff2de66e147eba4" translate="yes" xml:space="preserve">
          <source>Http::UploadedFile#open</source>
          <target state="translated">Http::UploadedFile#open</target>
        </trans-unit>
        <trans-unit id="389df126bc2f8fa522a455ec3c82127a922ad73e" translate="yes" xml:space="preserve">
          <source>Http::UploadedFile#original_filename</source>
          <target state="translated">Http::UploadedFile#original_filename</target>
        </trans-unit>
        <trans-unit id="710b34c14a2b8441f8b03a84f384394679069757" translate="yes" xml:space="preserve">
          <source>Http::UploadedFile#path</source>
          <target state="translated">Http::UploadedFile#path</target>
        </trans-unit>
        <trans-unit id="1330f65cb3bd050816219c42401bcbc16ccd5b5f" translate="yes" xml:space="preserve">
          <source>Http::UploadedFile#read</source>
          <target state="translated">Http::UploadedFile#read</target>
        </trans-unit>
        <trans-unit id="3c379ef2b416006bcfe3fe17ef7ab538692401e9" translate="yes" xml:space="preserve">
          <source>Http::UploadedFile#rewind</source>
          <target state="translated">Http::UploadedFile#rewind</target>
        </trans-unit>
        <trans-unit id="30ccf509f5eefd38417a66d9fd381e401281d340" translate="yes" xml:space="preserve">
          <source>Http::UploadedFile#size</source>
          <target state="translated">Http::UploadedFile#size</target>
        </trans-unit>
        <trans-unit id="142a1f97dbd0e84838a647fec8b79c9d9b614b2d" translate="yes" xml:space="preserve">
          <source>Http::UploadedFile#tempfile</source>
          <target state="translated">Http::UploadedFile#tempfile</target>
        </trans-unit>
        <trans-unit id="aa9ac735553e7ddbeebaa8fe6bb46b4b993410e7" translate="yes" xml:space="preserve">
          <source>Http::UploadedFile#to_io</source>
          <target state="translated">Http::UploadedFile#to_io</target>
        </trans-unit>
        <trans-unit id="258d80d96864c89180cfe583f1282e19b26fcab8" translate="yes" xml:space="preserve">
          <source>Http::UploadedFile#to_path</source>
          <target state="translated">Http::UploadedFile#to_path</target>
        </trans-unit>
        <trans-unit id="0f998ffabcb24b6bc6b6c05a2878f4a6c386f099" translate="yes" xml:space="preserve">
          <source>HttpAuthentication</source>
          <target state="translated">HttpAuthentication</target>
        </trans-unit>
        <trans-unit id="a594e70bef47393f5fcce2ac4c1bef06d7538244" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Basic</source>
          <target state="translated">HttpAuthentication::Basic</target>
        </trans-unit>
        <trans-unit id="87afc9686da0d655da2c5c923407304812a5c2e0" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Basic#auth_param</source>
          <target state="translated">HttpAuthentication::Basic#auth_param</target>
        </trans-unit>
        <trans-unit id="d6ce8f7c7685338104b8727389cd46ab3905e3cf" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Basic#auth_scheme</source>
          <target state="translated">HttpAuthentication::Basic#auth_scheme</target>
        </trans-unit>
        <trans-unit id="77cb29c029cb8e75809c0b4622e4b69d048493dd" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Basic#authenticate</source>
          <target state="translated">HttpAuthentication::Basic#authenticate</target>
        </trans-unit>
        <trans-unit id="9327b0c416df23142b6fba4e1cbc59868e377560" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Basic#authentication_request</source>
          <target state="translated">HttpAuthentication::Basic#authentication_request</target>
        </trans-unit>
        <trans-unit id="077ba8970757b827885ba2193d42ee4172f73aca" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Basic#decode_credentials</source>
          <target state="translated">HttpAuthentication::Basic#decode_credentials</target>
        </trans-unit>
        <trans-unit id="43445d035b05edfc4ba6996927eb9942b753ac31" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Basic#encode_credentials</source>
          <target state="translated">HttpAuthentication::Basic#encode_credentials</target>
        </trans-unit>
        <trans-unit id="8a95864814a4e08306d55c38d1549fe63a91a203" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Basic#has_basic_credentials?</source>
          <target state="translated">HttpAuthentication::Basic#has_basic_credentials?</target>
        </trans-unit>
        <trans-unit id="e71b3392593f3496044ef2b6896217e723a4a3fd" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Basic#user_name_and_password</source>
          <target state="translated">HttpAuthentication::Basic#user_name_and_password</target>
        </trans-unit>
        <trans-unit id="69af1ce56b15bc5b6d198ce79231026df5133793" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Digest</source>
          <target state="translated">HttpAuthentication::Digest</target>
        </trans-unit>
        <trans-unit id="0dca354043fea28d695ee2c14da7796357ba0d77" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Digest#authenticate</source>
          <target state="translated">HttpAuthentication::Digest#authenticate</target>
        </trans-unit>
        <trans-unit id="3d1a924bebf26937d3af6522466f0864e151b108" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Digest#authentication_header</source>
          <target state="translated">HttpAuthentication::Digest#authentication_header</target>
        </trans-unit>
        <trans-unit id="05870da4796484e47836020fd72ba098321495b8" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Digest#authentication_request</source>
          <target state="translated">HttpAuthentication::Digest#authentication_request</target>
        </trans-unit>
        <trans-unit id="1a905396f52521ccf3a04a17dcbe467aad1d6c70" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Digest#decode_credentials</source>
          <target state="translated">HttpAuthentication::Digest#decode_credentials</target>
        </trans-unit>
        <trans-unit id="ce93cf6ca13057687584cc92d418e28c4b4c9848" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Digest#decode_credentials_header</source>
          <target state="translated">HttpAuthentication::Digest#decode_credentials_header</target>
        </trans-unit>
        <trans-unit id="93e6803b24421a129db1f606ae1112316290a480" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Digest#encode_credentials</source>
          <target state="translated">HttpAuthentication::Digest#encode_credentials</target>
        </trans-unit>
        <trans-unit id="bb4a18bd2f03d911f6fb8755cfc1e61553dde30c" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Digest#expected_response</source>
          <target state="translated">HttpAuthentication::Digest#expected_response</target>
        </trans-unit>
        <trans-unit id="5a53b29c1d78e99fdec59df6b34814a87ef3e03d" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Digest#ha1</source>
          <target state="translated">HttpAuthentication::Digest#ha1</target>
        </trans-unit>
        <trans-unit id="48297ccd62d1c207029764ac45c05f411fc06fe3" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Digest#nonce</source>
          <target state="translated">HttpAuthentication::Digest#nonce</target>
        </trans-unit>
        <trans-unit id="770eaa0218de07230a27a8b2124ee308e00b17b2" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Digest#opaque</source>
          <target state="translated">HttpAuthentication::Digest#opaque</target>
        </trans-unit>
        <trans-unit id="ee9356ffb6eed22dcf6ce2e1f42ab3823f93ccff" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Digest#secret_token</source>
          <target state="translated">HttpAuthentication::Digest#secret_token</target>
        </trans-unit>
        <trans-unit id="8427c2f11f6071a814b4a6c415f14bd1dcb720a2" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Digest#validate_digest_response</source>
          <target state="translated">HttpAuthentication::Digest#validate_digest_response</target>
        </trans-unit>
        <trans-unit id="a6e5619bb23819866a97a68d762d6f7e8626b41e" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Digest#validate_nonce</source>
          <target state="translated">HttpAuthentication::Digest#validate_nonce</target>
        </trans-unit>
        <trans-unit id="165be4fdb2e13c352a955be9ca09197487333dfc" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Digest::ControllerMethods</source>
          <target state="translated">HttpAuthentication::Digest::ControllerMethods</target>
        </trans-unit>
        <trans-unit id="25016576509b935c6cad62cb2968efb60d299eb7" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Digest::ControllerMethods#authenticate_or_request_with_http_digest</source>
          <target state="translated">HttpAuthentication::Digest::ControllerMethods#authenticate_or_request_with_http_digest</target>
        </trans-unit>
        <trans-unit id="6aa29a37e0ce58e5d7287cffbac4c2675803dff1" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Digest::ControllerMethods#authenticate_with_http_digest</source>
          <target state="translated">HttpAuthentication::Digest::ControllerMethods#authenticate_with_http_digest</target>
        </trans-unit>
        <trans-unit id="8bd17ffd591c69beff10cbaf09eeec3dfddef5c8" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Digest::ControllerMethods#request_http_digest_authentication</source>
          <target state="translated">HttpAuthentication::Digest::ControllerMethods#request_http_digest_authentication</target>
        </trans-unit>
        <trans-unit id="5c181e070a33207a3bd7e39d00e35c6613716287" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Token</source>
          <target state="translated">HttpAuthentication::Token</target>
        </trans-unit>
        <trans-unit id="8968e1f558c0632bcb464098aed284d68d44bc28" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Token#authenticate</source>
          <target state="translated">HttpAuthentication::Token#authenticate</target>
        </trans-unit>
        <trans-unit id="c6954e3d5f371838a45c0ef968002f2c92067160" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Token#authentication_request</source>
          <target state="translated">HttpAuthentication::Token#authentication_request</target>
        </trans-unit>
        <trans-unit id="6f8eb15d003bfda797515ca5a37b436a600c151c" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Token#encode_credentials</source>
          <target state="translated">HttpAuthentication::Token#encode_credentials</target>
        </trans-unit>
        <trans-unit id="e3ec1c4321202efd8693d21cca280da91ea3af99" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Token#params_array_from</source>
          <target state="translated">HttpAuthentication::Token#params_array_from</target>
        </trans-unit>
        <trans-unit id="ccd15415abaf05f2cd98f1e71c5e8949670d5448" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Token#raw_params</source>
          <target state="translated">HttpAuthentication::Token#raw_params</target>
        </trans-unit>
        <trans-unit id="ca67b6bdc2166bebe12ebcc5c10d569259363c9b" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Token#rewrite_param_values</source>
          <target state="translated">HttpAuthentication::Token#rewrite_param_values</target>
        </trans-unit>
        <trans-unit id="0ae3699c6084ca253e0bec18ba312121300c7684" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Token#token_and_options</source>
          <target state="translated">HttpAuthentication::Token#token_and_options</target>
        </trans-unit>
        <trans-unit id="64bf0418867d4b2e657cd8899dd48314e1ca09e5" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Token#token_params_from</source>
          <target state="translated">HttpAuthentication::Token#token_params_from</target>
        </trans-unit>
        <trans-unit id="f2ee71ab535df45f88b3294b11d6a558e546d092" translate="yes" xml:space="preserve">
          <source>I18n enforcing available locales</source>
          <target state="translated">I18n 利用可能なロケールを強制する</target>
        </trans-unit>
        <trans-unit id="84ade51a9fd9d1edd2ae86a5d27ebe72c37abd15" translate="yes" xml:space="preserve">
          <source>I18n key</source>
          <target state="translated">I18nキー</target>
        </trans-unit>
        <trans-unit id="c99ee2f8498538310347edcd60795b6c51710795" translate="yes" xml:space="preserve">
          <source>I18n support in Ruby on Rails was introduced in the release 2.2 and is still evolving. The project follows the good Ruby on Rails development tradition of evolving solutions in gems and real applications first, and only then cherry-picking the best-of-breed of most widely useful features for inclusion in the core.</source>
          <target state="translated">Ruby on RailsのI18nサポートはリリース2.2で導入され、現在も進化を続けています。このプロジェクトは、最初にジェムと実際のアプリケーションでソリューションを進化させ、その後、コアに含めるために最も広く有用な機能の中からベストオブブリードのものをチェリーピックするという、Ruby on Rails開発の良い伝統に従っています。</target>
        </trans-unit>
        <trans-unit id="1626b0d1e3b1edb77373075a9a73ec85340a6586" translate="yes" xml:space="preserve">
          <source>I18n.locale to be used during the job.</source>
          <target state="translated">ジョブ中に使用する I18n.locale。</target>
        </trans-unit>
        <trans-unit id="6c6b979af9cfa80f076d4ba7e659b6581cc83565" translate="yes" xml:space="preserve">
          <source>ID of the message, generated by the Mail gem</source>
          <target state="translated">Mail gemで生成されたメッセージのID</target>
        </trans-unit>
        <trans-unit id="3eb3f1b8d397b8ad7b2ee8f4b87c5c3bffa96885" translate="yes" xml:space="preserve">
          <source>ID optionally provided by adapter</source>
          <target state="translated">アダプタで提供される任意のID</target>
        </trans-unit>
        <trans-unit id="47ff230ebb520f4e049718dc7eafe51decc77f2f" translate="yes" xml:space="preserve">
          <source>IDENTIFIER_ERROR_MESSAGE</source>
          <target state="translated">IDENTIFIER_ERROR_MESSAGE</target>
        </trans-unit>
        <trans-unit id="5003bde348f8a9c2eacfb6372c566b83b691d24c" translate="yes" xml:space="preserve">
          <source>IDENTITY</source>
          <target state="translated">IDENTITY</target>
        </trans-unit>
        <trans-unit id="fb482c25bbf70e31ed0474016b3a98d8af4e5f02" translate="yes" xml:space="preserve">
          <source>ID_ATTRIBUTE_METHODS</source>
          <target state="translated">ID_ATTRIBUTE_METHODS</target>
        </trans-unit>
        <trans-unit id="3a31a3914ece5f5e94e32217db5372e0caf5811c" translate="yes" xml:space="preserve">
          <source>IF YOU DON'T USE A PROXY, THIS MAKES YOU VULNERABLE TO IP SPOOFING. This middleware assumes that there is at least one proxy sitting around and setting headers with the client's remote IP address. If you don't use a proxy, because you are hosted on e.g. Heroku without &lt;a href=&quot;ssl&quot;&gt;&lt;code&gt;SSL&lt;/code&gt;&lt;/a&gt;, any client can claim to have any IP address by setting the X-Forwarded-For header. If you care about that, then you need to explicitly drop or ignore those headers sometime before this middleware runs.</source>
          <target state="translated">プロキシを使用しない場合、これによりIPスプーフィングが脆弱になります。このミドルウェアは、少なくとも1つのプロキシが存在し、クライアントのリモートIPアドレスでヘッダーを設定していることを前提としています。プロキシを使用しない場合、たとえば&lt;a href=&quot;ssl&quot;&gt; &lt;code&gt;SSL&lt;/code&gt; &lt;/a&gt;なしのHerokuでホストされているため、X-Forwarded-Forヘッダーを設定することで、どのクライアントも任意のIPアドレスを要求できます。それが気になる場合は、このミドルウェアを実行する前に、これらのヘッダーを明示的に削除するか無視する必要があります。</target>
        </trans-unit>
        <trans-unit id="493a48b9d5190bb3eb5dec01a3b5d0bd614609c1" translate="yes" xml:space="preserve">
          <source>IF YOU DON'T USE A PROXY, THIS MAKES YOU VULNERABLE TO IP SPOOFING. This middleware assumes that there is at least one proxy sitting around and setting headers with the client's remote IP address. If you don't use a proxy, because you are hosted on e.g. Heroku without &lt;a href=&quot;ssl&quot;&gt;SSL&lt;/a&gt;, any client can claim to have any IP address by setting the X-Forwarded-For header. If you care about that, then you need to explicitly drop or ignore those headers sometime before this middleware runs.</source>
          <target state="translated">プロキシを使用しない場合、これによりIPスプーフィングに対して脆弱になります。このミドルウェアは、少なくとも1つのプロキシが存在し、クライアントのリモートIPアドレスでヘッダーを設定していることを前提としています。プロキシを使用しない場合、&lt;a href=&quot;ssl&quot;&gt;SSL&lt;/a&gt;なしのHerokuなどでホストされているため、どのクライアントもX-Forwarded-Forヘッダーを設定することで任意のIPアドレスを要求できます。これを気にする場合は、このミドルウェアを実行する前に、これらのヘッダーを明示的に削除または無視する必要があります。</target>
        </trans-unit>
        <trans-unit id="a14339a4ece5dcf693ab4fe80eee7eefb68c26bd" translate="yes" xml:space="preserve">
          <source>INVALID_METHODS_FOR_DELETE_ALL</source>
          <target state="translated">INVALID_METHODS_FOR_DELETE_ALL</target>
        </trans-unit>
        <trans-unit id="d473dbfadb69452b40146834d6d9ef4b0212077f" translate="yes" xml:space="preserve">
          <source>IP_HOST_REGEXP</source>
          <target state="translated">IP_HOST_REGEXP</target>
        </trans-unit>
        <trans-unit id="724ff69b8cdce50cfe88fc39f95ac591250b7af3" translate="yes" xml:space="preserve">
          <source>Identical to Ruby's clone method. This is a &amp;ldquo;shallow&amp;rdquo; copy. Be warned that your attributes are not copied. That means that modifying attributes of the clone will modify the original, since they will both point to the same attributes hash. If you need a copy of your attributes hash, please use the &lt;a href=&quot;core#method-i-dup&quot;&gt;&lt;code&gt;dup&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Rubyのcloneメソッドと同じです。これは「浅い」コピーです。属性はコピーされないことに注意してください。つまり、クローンの属性を変更すると、両方が同じ属性ハッシュを指すため、元の属性が変更されます。属性ハッシュのコピーが必要な場合は、&lt;a href=&quot;core#method-i-dup&quot;&gt; &lt;code&gt;dup&lt;/code&gt; &lt;/a&gt;メソッドを使用してください。</target>
        </trans-unit>
        <trans-unit id="7cde613c4448fe95e5d7736745a2accf9e2b278b" translate="yes" xml:space="preserve">
          <source>Identical to Ruby's clone method. This is a &amp;ldquo;shallow&amp;rdquo; copy. Be warned that your attributes are not copied. That means that modifying attributes of the clone will modify the original, since they will both point to the same attributes hash. If you need a copy of your attributes hash, please use the &lt;a href=&quot;core#method-i-dup&quot;&gt;dup&lt;/a&gt; method.</source>
          <target state="translated">Rubyのcloneメソッドと同じです。これは「浅い」コピーです。属性はコピーされないことに注意してください。つまり、クローンの属性を変更すると、元の属性も変更されます。どちらも同じ属性のハッシュを指すからです。属性ハッシュのコピーが必要な場合は、&lt;a href=&quot;core#method-i-dup&quot;&gt;dup&lt;/a&gt;メソッドを使用してください。</target>
        </trans-unit>
        <trans-unit id="3455d7efc11d2c340639ea75543b069cfd68c2c6" translate="yes" xml:space="preserve">
          <source>Identifies whether the class name of a record or class is uncountable.</source>
          <target state="translated">レコードやクラスのクラス名がカウントされていないかどうかを識別します。</target>
        </trans-unit>
        <trans-unit id="76eeba57bddb27b82fc170e9515c6fd520b56ddf" translate="yes" xml:space="preserve">
          <source>Idiomatic Rails applications only issue &lt;code&gt;require&lt;/code&gt; calls to load stuff from their &lt;code&gt;lib&lt;/code&gt; directory, the Ruby standard library, Ruby gems, etc. That is, anything that does not belong to their autoload paths, explained below.</source>
          <target state="translated">慣用的なRailsアプリケーションでのみ問題が発生 &lt;code&gt;require&lt;/code&gt; は、 &lt;code&gt;lib&lt;/code&gt; ディレクトリ、Ruby標準ライブラリ、Ruby gemなどからのものをロードするための呼び出しです。つまり、以下で説明する、オートロードパスに属さないものすべてです。</target>
        </trans-unit>
        <trans-unit id="4646451298bcadf6000d3d745fe21ab29fb12c0f" translate="yes" xml:space="preserve">
          <source>If &quot;SSL&quot; was defined to be an acronym:</source>
          <target state="translated">SSL」が頭文字をとって定義されていた場合。</target>
        </trans-unit>
        <trans-unit id="5f4855219f538879f8a468a0e67012a5ab08c503" translate="yes" xml:space="preserve">
          <source>If &quot;asset fallback&quot; is enabled then when an asset cannot be found the path will be output instead and no error raised. The asset fallback behavior is disabled by default.</source>
          <target state="translated">アセットフォールバック &quot;が有効になっている場合、アセットが見つからなかった場合、代わりにパスが出力され、エラーは発生しません。アセットフォールバックの動作はデフォルトでは無効になっています。</target>
        </trans-unit>
        <trans-unit id="1f06d656433e3ed30e3d56d44e76f410e44d6475" translate="yes" xml:space="preserve">
          <source>If &quot;asset fallback&quot; is enabled then when an asset cannot be found the path will be output instead and no error raised. The asset fallback behavior is enabled by default.</source>
          <target state="translated">アセットフォールバック」が有効になっている場合、アセットが見つからなかった場合は、代わりにパスが出力され、エラーは発生しません。アセットフォールバック動作はデフォルトで有効になっています。</target>
        </trans-unit>
        <trans-unit id="a0cbe1e1199852356b06dce1868473af64a463b5" translate="yes" xml:space="preserve">
          <source>If &amp;ldquo;SSL&amp;rdquo; was defined to be an acronym:</source>
          <target state="translated">「SSL」が頭字語として定義されている場合：</target>
        </trans-unit>
        <trans-unit id="bc824ecff8814b52fd4aea4fa3e145b55dc0ef02" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;calculations#method-i-count&quot;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt; is used with &lt;a href=&quot;querymethods#method-i-group&quot;&gt;Relation#group&lt;/a&gt; for multiple columns, it returns a &lt;a href=&quot;../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; whose keys are an array containing the individual values of each column and the value of each key would be the &lt;a href=&quot;calculations#method-i-count&quot;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;calculations#method-i-count&quot;&gt; &lt;code&gt;count&lt;/code&gt; &lt;/a&gt;が複数の列の&lt;a href=&quot;querymethods#method-i-group&quot;&gt;Relation＃group&lt;/a&gt;で使用される場合、キーが各列の個々の値を含む配列であり、各キーの値が&lt;a href=&quot;calculations#method-i-count&quot;&gt; &lt;code&gt;count&lt;/code&gt; に&lt;/a&gt;なる&lt;a href=&quot;../hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="4fa020b4ef15a73e4f22fe6828be0d6f6b1d579b" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;calculations#method-i-count&quot;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt; is used with &lt;a href=&quot;querymethods#method-i-group&quot;&gt;Relation#group&lt;/a&gt;, it returns a &lt;a href=&quot;../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; whose keys represent the aggregated column, and the values are the respective amounts:</source>
          <target state="translated">&lt;a href=&quot;calculations#method-i-count&quot;&gt; &lt;code&gt;count&lt;/code&gt; &lt;/a&gt;が&lt;a href=&quot;querymethods#method-i-group&quot;&gt;Relation＃group&lt;/a&gt;で使用される場合、キーが集約された列を表す&lt;a href=&quot;../hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt;を返し、値はそれぞれの量です。</target>
        </trans-unit>
        <trans-unit id="c77cc799497a3849534bf6b84e37b32600da2cae" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;calculations#method-i-count&quot;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt; is used with &lt;a href=&quot;querymethods#method-i-select&quot;&gt;Relation#select&lt;/a&gt;, it will count the selected columns:</source>
          <target state="translated">場合は&lt;a href=&quot;calculations#method-i-count&quot;&gt; &lt;code&gt;count&lt;/code&gt; &lt;/a&gt;で使用されている&lt;a href=&quot;querymethods#method-i-select&quot;&gt;関係＃が選択し&lt;/a&gt;、選択した列をカウントします。</target>
        </trans-unit>
        <trans-unit id="249b3e35df228a8fdec1a9be084d211eb125be1f" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;calculations#method-i-count&quot;&gt;count&lt;/a&gt; is used with &lt;a href=&quot;querymethods#method-i-group&quot;&gt;Relation#group&lt;/a&gt; for multiple columns, it returns a &lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt; whose keys are an array containing the individual values of each column and the value of each key would be the &lt;a href=&quot;calculations#method-i-count&quot;&gt;count&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;calculations#method-i-count&quot;&gt;count&lt;/a&gt;が&lt;a href=&quot;querymethods#method-i-group&quot;&gt;Relation＃group&lt;/a&gt;で複数の列に対して使用される場合、キーが各列の個々の値を含む配列である&lt;a href=&quot;../hash&quot;&gt;ハッシュ&lt;/a&gt;を返し、各キーの値が&lt;a href=&quot;calculations#method-i-count&quot;&gt;count&lt;/a&gt;になります。</target>
        </trans-unit>
        <trans-unit id="a07baa0e2bd6aa60b679019b1c8364c568de818b" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;calculations#method-i-count&quot;&gt;count&lt;/a&gt; is used with &lt;a href=&quot;querymethods#method-i-group&quot;&gt;Relation#group&lt;/a&gt;, it returns a &lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt; whose keys represent the aggregated column, and the values are the respective amounts:</source>
          <target state="translated">&lt;a href=&quot;calculations#method-i-count&quot;&gt;count&lt;/a&gt;が&lt;a href=&quot;querymethods#method-i-group&quot;&gt;Relation＃group&lt;/a&gt;で使用される場合、集計された列を表すキーを持つ&lt;a href=&quot;../hash&quot;&gt;ハッシュ&lt;/a&gt;が返され、値はそれぞれの量になります。</target>
        </trans-unit>
        <trans-unit id="ef60e172a14266d56f1d7dd9c45d1fe062a253f8" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;calculations#method-i-count&quot;&gt;count&lt;/a&gt; is used with &lt;a href=&quot;querymethods#method-i-select&quot;&gt;Relation#select&lt;/a&gt;, it will count the selected columns:</source>
          <target state="translated">場合は&lt;a href=&quot;calculations#method-i-count&quot;&gt;、カウント&lt;/a&gt;で使用されている&lt;a href=&quot;querymethods#method-i-select&quot;&gt;関係＃が選択し&lt;/a&gt;、選択した列をカウントします。</target>
        </trans-unit>
        <trans-unit id="05aa0da2925a884925e661b5d1f9d30df78199a7" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Time.html#method-i-since&quot;&gt;&lt;code&gt;since&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Time.html#method-i-ago&quot;&gt;&lt;code&gt;ago&lt;/code&gt;&lt;/a&gt; jump to a time that can't be expressed with &lt;code&gt;Time&lt;/code&gt; a &lt;code&gt;DateTime&lt;/code&gt; object is returned instead.</source>
          <target state="translated">もし&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Time.html#method-i-since&quot;&gt; &lt;code&gt;since&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Time.html#method-i-ago&quot;&gt; &lt;code&gt;ago&lt;/code&gt; &lt;/a&gt;で表現することができない時にジャンプ &lt;code&gt;Time&lt;/code&gt; &lt;code&gt;DateTime&lt;/code&gt; オブジェクトが代わりに返されます。</target>
        </trans-unit>
        <trans-unit id="8c4b51e7f5be08afbe9de139e9d279b9ea1552a5" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;querymethods#method-i-where&quot;&gt;&lt;code&gt;where&lt;/code&gt;&lt;/a&gt; is called with multiple arguments, these are treated as if they were passed as the elements of a single array.</source>
          <target state="translated">場合&lt;a href=&quot;querymethods#method-i-where&quot;&gt; &lt;code&gt;where&lt;/code&gt; &lt;/a&gt;複数の引数で呼び出された彼らは、単一の配列の要素として渡されたかのように、これらが処理されます。</target>
        </trans-unit>
        <trans-unit id="dd023fbcb560e02ef92270bf1806e204f3796b9f" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;querymethods#method-i-where&quot;&gt;where&lt;/a&gt; is called with multiple arguments, these are treated as if they were passed as the elements of a single array.</source>
          <target state="translated">場合&lt;a href=&quot;querymethods#method-i-where&quot;&gt;どこ&lt;/a&gt;複数の引数で呼び出された彼らは、単一の配列の要素として渡されたかのように、これらが処理されます。</target>
        </trans-unit>
        <trans-unit id="cfd8ee24d3d10bbc1292b53b1287a57e34ee3df3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;:only&lt;/code&gt; or &lt;code&gt;:except&lt;/code&gt; are used, convert the options into the &lt;code&gt;:if&lt;/code&gt; and &lt;code&gt;:unless&lt;/code&gt; options of &lt;a href=&quot;../../activesupport/callbacks&quot;&gt;&lt;code&gt;ActiveSupport::Callbacks&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合 &lt;code&gt;:only&lt;/code&gt; か &lt;code&gt;:except&lt;/code&gt; 使用されている、にオプションを変換する &lt;code&gt;:if&lt;/code&gt; と &lt;code&gt;:unless&lt;/code&gt; のオプション&lt;a href=&quot;../../activesupport/callbacks&quot;&gt; &lt;code&gt;ActiveSupport::Callbacks&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="daa2040624870ca0b9137f4341255832a593e222" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;:only&lt;/code&gt; or &lt;code&gt;:except&lt;/code&gt; are used, convert the options into the &lt;code&gt;:if&lt;/code&gt; and &lt;code&gt;:unless&lt;/code&gt; options of &lt;a href=&quot;../../activesupport/callbacks&quot;&gt;ActiveSupport::Callbacks&lt;/a&gt;.</source>
          <target state="translated">場合 &lt;code&gt;:only&lt;/code&gt; か &lt;code&gt;:except&lt;/code&gt; 使用されている、にオプションを変換する &lt;code&gt;:if&lt;/code&gt; と &lt;code&gt;:unless&lt;/code&gt; のオプション&lt;a href=&quot;../../activesupport/callbacks&quot;&gt;activesupportの::コールバック&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0c4e66f72e11ef612efcf887d5000111a11e20d6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;:ruby&lt;/code&gt; is selected, then the schema is stored in &lt;code&gt;db/schema.rb&lt;/code&gt;. If you look at this file you'll find that it looks an awful lot like one very big migration:</source>
          <target state="translated">&lt;code&gt;:ruby&lt;/code&gt; が選択されている場合、スキーマは &lt;code&gt;db/schema.rb&lt;/code&gt; に保存されます。このファイルを見ると、1つの非常に大きな移行に非常によく似ていることがわかります。</target>
        </trans-unit>
        <trans-unit id="fbd72998a89b40471a5578b48ab829ac8cb35184" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;:type&lt;/code&gt; is not specified, it will be guessed from the file extension specified in &lt;code&gt;:filename&lt;/code&gt;. If the content type is not registered for the extension, &lt;code&gt;application/octet-stream&lt;/code&gt; will be used.</source>
          <target state="translated">&lt;code&gt;:type&lt;/code&gt; が指定されていない場合は、 &lt;code&gt;:filename&lt;/code&gt; で指定されたファイル拡張子から推測されます。コンテンツタイプが拡張機能に登録されていない場合、 &lt;code&gt;application/octet-stream&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="29a7b4d8f2dca3b77ab187b69d0c87404270490b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;@article.author_id&lt;/code&gt; is 1, this would return:</source>
          <target state="translated">&lt;code&gt;@article.author_id&lt;/code&gt; が1の場合、これは次を返します：</target>
        </trans-unit>
        <trans-unit id="298cbc77daf58cd20527cf966283ed3e453ff6b0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;@article.author_ids&lt;/code&gt; is [1], this would return:</source>
          <target state="translated">場合 &lt;code&gt;@article.author_ids&lt;/code&gt; [1]で、これは返します：</target>
        </trans-unit>
        <trans-unit id="12b843b3ebff53a2588abcdc74a47c3d4fbb0e84" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;@article.person_id&lt;/code&gt; is 1, this would become:</source>
          <target state="translated">&lt;code&gt;@article.person_id&lt;/code&gt; が1の場合、次のようになります。</target>
        </trans-unit>
        <trans-unit id="0f7b33054c90e711de2c21c8a6cc101b5af83c53" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;@book.special?&lt;/code&gt; evaluates to &lt;code&gt;true&lt;/code&gt;, Rails will start the rendering process to dump the &lt;code&gt;@book&lt;/code&gt; variable into the &lt;code&gt;special_show&lt;/code&gt; view. But this will &lt;em&gt;not&lt;/em&gt; stop the rest of the code in the &lt;code&gt;show&lt;/code&gt; action from running, and when Rails hits the end of the action, it will start to render the &lt;code&gt;regular_show&lt;/code&gt; view - and throw an error. The solution is simple: make sure that you have only one call to &lt;code&gt;render&lt;/code&gt; or &lt;code&gt;redirect&lt;/code&gt; in a single code path. One thing that can help is &lt;code&gt;and return&lt;/code&gt;. Here's a patched version of the method:</source>
          <target state="translated">もし &lt;code&gt;@book.special?&lt;/code&gt; 評価された &lt;code&gt;true&lt;/code&gt; 、Railsはダンプするレンダリング処理を開始します &lt;code&gt;@book&lt;/code&gt; のに変数を &lt;code&gt;special_show&lt;/code&gt; の眺め。しかし、これによって &lt;code&gt;show&lt;/code&gt; アクションの残りのコードの実行が停止することはあり&lt;em&gt;ません&lt;/em&gt; &lt;code&gt;regular_show&lt;/code&gt; がアクションの最後に到達すると、regular_showビューのレンダリングが開始され、エラーがスローされます。解決策は簡単です。単一のコードパスで &lt;code&gt;render&lt;/code&gt; または &lt;code&gt;redirect&lt;/code&gt; する呼び出しが1つだけであることを確認してください。助けることができる1つのことは &lt;code&gt;and return&lt;/code&gt; です。メソッドのパッチバージョンです。</target>
        </trans-unit>
        <trans-unit id="9cad4e7c6710f7890209b7d44ad4a778b2455d8b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;@post.author_id&lt;/code&gt; is already &lt;code&gt;1&lt;/code&gt;, this would return:</source>
          <target state="translated">場合 &lt;code&gt;@post.author_id&lt;/code&gt; すでにある &lt;code&gt;1&lt;/code&gt; 、これは返します：</target>
        </trans-unit>
        <trans-unit id="e0342309d859c1eea96599c87971ca23ed403bad" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;@post.author_ids&lt;/code&gt; is already &lt;code&gt;[1]&lt;/code&gt;, this would return:</source>
          <target state="translated">場合 &lt;code&gt;@post.author_ids&lt;/code&gt; すでにある &lt;code&gt;[1]&lt;/code&gt; 、これは返します：</target>
        </trans-unit>
        <trans-unit id="226e37b2e315ad8c6dab5b3249f89d50fc13061d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;A&lt;/code&gt; exists, the class or module that was originally in &lt;code&gt;A&lt;/code&gt; may not be there anymore. For example, if after a constant removal there was another constant assignment there would generally be a different object in there.</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; が存在する場合、元々 &lt;code&gt;A&lt;/code&gt; にあったクラスまたはモジュールはもう存在しない可能性があります。たとえば、定数の削除後に別の定数の割り当てがあった場合、通常はそこに別のオブジェクトが存在します。</target>
        </trans-unit>
        <trans-unit id="9a0f0efdd9b6a7a2586a665cf5913b9fbbe6dc49" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;ENV[&quot;PARALLEL_WORKERS&quot;]&lt;/code&gt; is set the workers argument will be ignored and the environment variable will be used instead. This is useful for CI environments, or other environments where you may need more workers than you do for local testing.</source>
          <target state="translated">場合 &lt;code&gt;ENV[&quot;PARALLEL_WORKERS&quot;]&lt;/code&gt; 設定されている労働者の引数は無視され、環境変数が代わりに使用されます。これは、CI環境、またはローカルテストよりも多くのワーカーが必要になる可能性があるその他の環境で役立ちます。</target>
        </trans-unit>
        <trans-unit id="c0ceafa6266777d864b65001f61a9fcc0d668064" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Hotel::Services&lt;/code&gt; is known by the time &lt;code&gt;app/models/hotel/geo_location.rb&lt;/code&gt; is being loaded, &lt;code&gt;Services&lt;/code&gt; is resolved by Ruby because &lt;code&gt;Hotel&lt;/code&gt; belongs to the nesting when the singleton class of &lt;code&gt;Hotel::GeoLocation&lt;/code&gt; is opened.</source>
          <target state="translated">場合は &lt;code&gt;Hotel::Services&lt;/code&gt; 時間によって知られている &lt;code&gt;app/models/hotel/geo_location.rb&lt;/code&gt; ロードされている、 &lt;code&gt;Services&lt;/code&gt; ためのRubyによって解決された &lt;code&gt;Hotel&lt;/code&gt; ときのシングルトンクラスのネストに属し &lt;code&gt;Hotel::GeoLocation&lt;/code&gt; 開かれます。</target>
        </trans-unit>
        <trans-unit id="84a65d97a16f8d123d0a69fb4861498654755fe9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;MyEngine&lt;/code&gt; is isolated, The routes above will point to &lt;code&gt;MyEngine::ArticlesController&lt;/code&gt;. You also don't need to use longer URL helpers like &lt;code&gt;my_engine_articles_path&lt;/code&gt;. Instead, you should simply use &lt;code&gt;articles_path&lt;/code&gt;, like you would do with your main application.</source>
          <target state="translated">&lt;code&gt;MyEngine&lt;/code&gt; が分離されている場合、上記のルートは &lt;code&gt;MyEngine::ArticlesController&lt;/code&gt; を指します。また、 &lt;code&gt;my_engine_articles_path&lt;/code&gt; のような長いURLヘルパーを使用する必要もありません。代わりに、あなたは単に使用する必要があります &lt;code&gt;articles_path&lt;/code&gt; を、あなたのメインアプリケーションで行うだろうと同じように、。</target>
        </trans-unit>
        <trans-unit id="2000581fa2cc42e2aa13e19af0dfc1214c80ba52" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;MyEngine&lt;/code&gt; is isolated, the routes above will point to &lt;code&gt;MyEngine::ArticlesController&lt;/code&gt;. You also don't need to use longer URL helpers like &lt;code&gt;my_engine_articles_path&lt;/code&gt;. Instead, you should simply use &lt;code&gt;articles_path&lt;/code&gt;, like you would do with your main application.</source>
          <target state="translated">場合 &lt;code&gt;MyEngine&lt;/code&gt; が分離され、上記のルートが指します &lt;code&gt;MyEngine::ArticlesController&lt;/code&gt; 。また、 &lt;code&gt;my_engine_articles_path&lt;/code&gt; のような長いURLヘルパーを使用する必要もありません。代わりに、メインアプリケーションで行うように、単に &lt;code&gt;articles_path&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="34e78b765dbd66dcd90e261a56ade1a30012af92" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;User&lt;/code&gt; is autoloaded before reaching the &lt;code&gt;require&lt;/code&gt;, &lt;code&gt;app/models/user.rb&lt;/code&gt; runs again because &lt;code&gt;load&lt;/code&gt; does not update &lt;code&gt;$LOADED_FEATURES&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;User&lt;/code&gt; 到達する前に自動的にロードされる &lt;code&gt;require&lt;/code&gt; 、 &lt;code&gt;app/models/user.rb&lt;/code&gt; あるため再び実行され &lt;code&gt;load&lt;/code&gt; 更新されません &lt;code&gt;$LOADED_FEATURES&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="19805bdc45e0bee704460c9d5695cb4756287f7d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;User&lt;/code&gt; is missing, in either case all Rails knows is that a constant called &quot;User&quot; was missing in a module called &quot;Admin&quot;.</source>
          <target state="translated">場合は &lt;code&gt;User&lt;/code&gt; 不足している、すべてのRailsが知っているいずれかの場合には、「ユーザー」と呼ばれる定数は、「管理者」と呼ばれるモジュールに欠けていたということです。</target>
        </trans-unit>
        <trans-unit id="4f973cd83c77dc7558b022bb651d0e6b5b61a496" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;args&lt;/code&gt; is provided as a &lt;a href=&quot;../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt;, a parameterized email is matched.</source>
          <target state="translated">&lt;code&gt;args&lt;/code&gt; が&lt;a href=&quot;../hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt;として提供されている場合、パラメーター化された電子メールが照合されます。</target>
        </trans-unit>
        <trans-unit id="da8d34efd182b85212188c18e79e20e426968145" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;args&lt;/code&gt; is provided as a &lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;, a parameterized email is matched.</source>
          <target state="translated">&lt;code&gt;args&lt;/code&gt; が&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;として提供されている場合、パラメーター化された電子メールが照合されます。</target>
        </trans-unit>
        <trans-unit id="78623f9074205614d01697597d2a9d855501abcf" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;autoload_paths&lt;/code&gt; has a file called &lt;code&gt;admin.rb&lt;/code&gt; Rails is going to load that one, but if there's no such file and a directory called &lt;code&gt;admin&lt;/code&gt; is found, Rails creates an empty module and assigns it to the &lt;code&gt;Admin&lt;/code&gt; constant on the fly.</source>
          <target state="translated">&lt;code&gt;autoload_paths&lt;/code&gt; に &lt;code&gt;admin.rb&lt;/code&gt; と呼ばれるファイルがある場合、Railsはそのファイルをロードしますが、そのようなファイルがなく、 &lt;code&gt;admin&lt;/code&gt; と呼ばれるディレクトリが見つかった場合、Railsは空のモジュールを作成し、オンザフライで &lt;code&gt;Admin&lt;/code&gt; 定数に割り当てます。</target>
        </trans-unit>
        <trans-unit id="93463d0272669ef08d1482e73eeb7aa19e8b9070" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;candidates&lt;/code&gt; collection is not given, method returns true.</source>
          <target state="translated">&lt;code&gt;candidates&lt;/code&gt; コレクションが指定されていない場合、メソッドはtrueを返します。</target>
        </trans-unit>
        <trans-unit id="9195a4ca8b0f1d0cd62245fb7d4e19d195d79a51" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;config.action_dispatch.encrypted_cookie_salt&lt;/code&gt; and &lt;code&gt;config.action_dispatch.encrypted_signed_cookie_salt&lt;/code&gt; are both set, legacy cookies encrypted with HMAC AES-256-CBC will be transparently upgraded.</source>
          <target state="translated">&lt;code&gt;config.action_dispatch.encrypted_cookie_salt&lt;/code&gt; と &lt;code&gt;config.action_dispatch.encrypted_signed_cookie_salt&lt;/code&gt; の両方が設定されている場合、HMAC AES-256-CBCで暗号化されたレガシーCookieは透過的にアップグレードされます。</target>
        </trans-unit>
        <trans-unit id="fb12073af8db3b5db6213ae469dda96b85fec31f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;config.relative_url_root&lt;/code&gt; is specified, all assets will have that root prepended.</source>
          <target state="translated">&lt;code&gt;config.relative_url_root&lt;/code&gt; が指定されている場合、すべてのアセットにそのルートが付加されます。</target>
        </trans-unit>
        <trans-unit id="ab1b246d6726f990ba7be0f6c40116fe4c86d7c5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;element&lt;/code&gt; is in the queue, remove and return it, or &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;element&lt;/code&gt; がキューにある場合は、削除して返すか、 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c0c14dd688c0389818e9279278fa958e43400c50" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;f&lt;/code&gt; is an instance of &lt;code&gt;ActionView::Helpers::FormBuilder&lt;/code&gt; then this will render the &lt;code&gt;form&lt;/code&gt; partial, setting the partial's object to the form builder. If the form builder is of class &lt;code&gt;LabellingFormBuilder&lt;/code&gt; then the &lt;code&gt;labelling_form&lt;/code&gt; partial would be rendered instead.</source>
          <target state="translated">場合 &lt;code&gt;f&lt;/code&gt; はのインスタンスである &lt;code&gt;ActionView::Helpers::FormBuilder&lt;/code&gt; これはレンダリングされます &lt;code&gt;form&lt;/code&gt; フォームビルダにパーシャルのオブジェクトを設定し、部分的に。フォームビルダーが &lt;code&gt;LabellingFormBuilder&lt;/code&gt; クラスのものである場合、代わりに &lt;code&gt;labelling_form&lt;/code&gt; パーシャルがレンダリングされます。</target>
        </trans-unit>
        <trans-unit id="ae70cffa5be18da20687e006184f1f12e30f21b8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;f&lt;/code&gt; is an instance of &lt;code&gt;ActionView::Helpers::FormBuilder&lt;/code&gt;, then this will render the &lt;code&gt;form&lt;/code&gt; partial, setting the partial's object to the form builder. If the form builder is of class &lt;code&gt;LabellingFormBuilder&lt;/code&gt;, then the &lt;code&gt;labelling_form&lt;/code&gt; partial would be rendered instead.</source>
          <target state="translated">場合 &lt;code&gt;f&lt;/code&gt; はのインスタンスである &lt;code&gt;ActionView::Helpers::FormBuilder&lt;/code&gt; 、これはレンダリングされます &lt;code&gt;form&lt;/code&gt; フォームビルダにパーシャルのオブジェクトを設定し、部分的に。フォームビルダがクラスである場合 &lt;code&gt;LabellingFormBuilder&lt;/code&gt; 、そして &lt;code&gt;labelling_form&lt;/code&gt; 部分が代わりにレンダリングされます。</target>
        </trans-unit>
        <trans-unit id="32fcf53617ef55e41583d021702b9df7f5d3796c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;file&lt;/code&gt; is the filename of a file that contains annotations this method returns a hash with a single entry that maps &lt;code&gt;file&lt;/code&gt; to an array of its annotations. Otherwise it returns an empty hash.</source>
          <target state="translated">&lt;code&gt;file&lt;/code&gt; が注釈を含むファイルのファイル名である場合、このメソッドは、 &lt;code&gt;file&lt;/code&gt; を注釈の配列にマップする単一のエントリを持つハッシュを返します。それ以外の場合は、空のハッシュを返します。</target>
        </trans-unit>
        <trans-unit id="b0ce96199c7393f49ec301879d808aff4198c3d6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;message&lt;/code&gt; is a proc, it will be called, allowing for things like &lt;code&gt;Time.now&lt;/code&gt; to be used within an error.</source>
          <target state="translated">&lt;code&gt;message&lt;/code&gt; が &lt;code&gt;Time.now&lt;/code&gt; 場合、それが呼び出され、Time.nowなどをエラー内で使用できるようになります。</target>
        </trans-unit>
        <trans-unit id="3e49bc04ea652ea875a91f484ace594336b546b2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;message&lt;/code&gt; is a symbol, it will be translated using the appropriate scope (see &lt;code&gt;generate_message&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;message&lt;/code&gt; がシンボルの場合、適切なスコープを使用して変換されます（ &lt;code&gt;generate_message&lt;/code&gt; を参照）。</target>
        </trans-unit>
        <trans-unit id="d7d9fab19d663dd8f5a12a1d81f59fda598af8c3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;options&lt;/code&gt; has a &lt;code&gt;:tag&lt;/code&gt; flag, it will be passed to each annotation's &lt;code&gt;to_s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; に &lt;code&gt;:tag&lt;/code&gt; フラグがある場合、それは各注釈の &lt;code&gt;to_s&lt;/code&gt; に渡されます。</target>
        </trans-unit>
        <trans-unit id="dce7f84067bd9c82f5d5af04a0ed9896342e8b25" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;options&lt;/code&gt; has a flag &lt;code&gt;:tag&lt;/code&gt; the tag is shown as in the example above. Otherwise the string contains just line and text.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; にフラグ &lt;code&gt;:tag&lt;/code&gt; がある場合、タグは上記の例のように表示されます。それ以外の場合、文字列には行とテキストのみが含まれます。</target>
        </trans-unit>
        <trans-unit id="b0c6ddb25f8fe256bbc4c8d872ef3bd5579e4541" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;options[:env]&lt;/code&gt; is specified, the line is appended to the corresponding file in &lt;code&gt;config/environments&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;options[:env]&lt;/code&gt; 指定され、行はに対応するファイルに付加されている &lt;code&gt;config/environments&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="51e3baaba3564a3e2b19d2adc323cf078673864e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;selected&lt;/code&gt; is specified as a Proc, those members of the collection that return true for the anonymous function are the selected values.</source>
          <target state="translated">&lt;code&gt;selected&lt;/code&gt; がProcとして指定されている場合、無名関数に対してtrueを返すコレクションのメンバーが選択された値です。</target>
        </trans-unit>
        <trans-unit id="429212d2ae87c33281f9218d75cf57cb18e5162f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;selected&lt;/code&gt; is specified as a value or array of values, the element(s) returning a match on &lt;code&gt;value_method&lt;/code&gt; will be selected option tag(s).</source>
          <target state="translated">場合に &lt;code&gt;selected&lt;/code&gt; 値または値の配列として指定され、上の試合復帰要素（複数可） &lt;code&gt;value_method&lt;/code&gt; が選択されるオプションタグ（複数可）。</target>
        </trans-unit>
        <trans-unit id="8798a282fe9c0be0c12148f06a23dcd00bc21344" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;since&lt;/code&gt; or &lt;code&gt;ago&lt;/code&gt; jump to a time that can't be expressed with &lt;code&gt;Time&lt;/code&gt; a &lt;code&gt;DateTime&lt;/code&gt; object is returned instead.</source>
          <target state="translated">もし &lt;code&gt;since&lt;/code&gt; または &lt;code&gt;ago&lt;/code&gt; で表現することができない時にジャンプ &lt;code&gt;Time&lt;/code&gt; &lt;code&gt;DateTime&lt;/code&gt; オブジェクトが代わりに返されます。</target>
        </trans-unit>
        <trans-unit id="f85e2c4711d78c3dfd30312c2a9d63292ee10ac3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;tag&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;, annotations with either default or registered tags are printed.</source>
          <target state="translated">&lt;code&gt;tag&lt;/code&gt; が &lt;code&gt;nil&lt;/code&gt; の場合、デフォルトまたは登録済みのタグの付いた注釈が出力されます。</target>
        </trans-unit>
        <trans-unit id="0ed5affe2417a0ddd8f8237c055390abbbc5db0c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;timeout&lt;/code&gt; is given, block if there is no element available, waiting up to &lt;code&gt;timeout&lt;/code&gt; seconds for an element to become available.</source>
          <target state="translated">&lt;code&gt;timeout&lt;/code&gt; が指定されている場合、使用可能な要素がない場合はブロックし、要素が使用可能になるまで最大 &lt;code&gt;timeout&lt;/code&gt; 秒待機します。</target>
        </trans-unit>
        <trans-unit id="4803eb20c46e640d8c6215f336543ea6e87b072d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;timeout&lt;/code&gt; is not given, remove and return the head of the queue if the number of available elements is strictly greater than the number of threads currently waiting (that is, don't jump ahead in line). Otherwise, return &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;timeout&lt;/code&gt; 与えられていない、削除して、利用可能な要素の数は、現在（つまり、行に先にジャンプしない）待機中のスレッドの数よりも厳密に大きい場合、キューの先頭を返します。それ以外の場合は、 &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="de9ecfcf49f3eb63f2f05dc7553e1b77e8630dfb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;timeout&lt;/code&gt; is not given, remove and return the head the queue if the number of available elements is strictly greater than the number of threads currently waiting (that is, don't jump ahead in line). Otherwise, return &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;timeout&lt;/code&gt; 与えられていない、削除して、利用可能な要素の数は、現在（つまり、行に先にジャンプしない）待機中のスレッドの数よりも厳密に大きい場合は頭にキューを返します。それ以外の場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="c09c858a0b7df7d86f44afde536bc0f0e160e002" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;try&lt;/code&gt; is called without arguments it yields the receiver to a given block unless it is &lt;code&gt;nil&lt;/code&gt;:</source>
          <target state="translated">場合は &lt;code&gt;try&lt;/code&gt; 、引数なしで呼び出されたことがある場合を除き、それは与えられたブロックに受信機を生み出す &lt;code&gt;nil&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="0e91b44b756f5c8d8a0c60062617c83f29f33a07" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;type&lt;/code&gt; is a proc, it will be called, allowing for things like &lt;code&gt;Time.now&lt;/code&gt; to be used within an error.</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; がprocの場合は呼び出され、 &lt;code&gt;Time.now&lt;/code&gt; などをエラー内で使用できるようになります。</target>
        </trans-unit>
        <trans-unit id="681b2ba6774e3c47cc892e0d19435636f5ad416f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;type&lt;/code&gt; is a string, it will be used as error message.</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; が文字列の場合、エラーメッセージとして使用されます。</target>
        </trans-unit>
        <trans-unit id="a5aa485bd2f12c9b7f4f349bcaab4c1ea480d6b5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;type&lt;/code&gt; is a symbol, it will be translated using the appropriate scope (see &lt;code&gt;generate_message&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; がシンボルの場合、適切なスコープを使用して変換されます（ &lt;code&gt;generate_message&lt;/code&gt; を参照）。</target>
        </trans-unit>
        <trans-unit id="eac9abbe8b17d53bb02997c95e3a1b891fa1cf30" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is a callable object it must expect one or two arguments. Depending on the arity, the callable is invoked with the &lt;code&gt;options&lt;/code&gt; hash as first argument with &lt;code&gt;key&lt;/code&gt; as &lt;code&gt;:root&lt;/code&gt;, and &lt;code&gt;key&lt;/code&gt; singularized as second argument. Its return value becomes a new node.</source>
          <target state="translated">場合 &lt;code&gt;value&lt;/code&gt; 呼び出し可能オブジェクトであることは、1つのまたは2つの引数を期待していなければなりません。アリティに応じて、callableは、 &lt;code&gt;options&lt;/code&gt; ハッシュを最初の引数として、 &lt;code&gt;key&lt;/code&gt; を &lt;code&gt;:root&lt;/code&gt; として、 &lt;code&gt;key&lt;/code&gt; を2番目の引数として特異化して呼び出されます。その戻り値は新しいノードになります。</target>
        </trans-unit>
        <trans-unit id="fcb825486e5083747c0bf112641a9faec0802bb3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is a callable object it must expect one or two arguments. Depending on the arity, the callable is invoked with the &lt;code&gt;options&lt;/code&gt; hash as first argument with &lt;code&gt;key&lt;/code&gt; as &lt;code&gt;:root&lt;/code&gt;, and &lt;code&gt;key&lt;/code&gt; singularized as second argument. The callable can add nodes by using &lt;code&gt;options[:builder]&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;value&lt;/code&gt; 呼び出し可能オブジェクトであることは、1つのまたは2つの引数を期待していなければなりません。アリティに応じて、callableは、 &lt;code&gt;options&lt;/code&gt; ハッシュを最初の引数として、 &lt;code&gt;key&lt;/code&gt; を &lt;code&gt;:root&lt;/code&gt; として、 &lt;code&gt;key&lt;/code&gt; を2番目の引数として特異化して呼び出されます。呼び出し可能オブジェクトは、 &lt;code&gt;options[:builder]&lt;/code&gt; を使用してノードを追加できます。</target>
        </trans-unit>
        <trans-unit id="f94997d12b6cb4d1abcbf281c0e3f6ad1d78afdc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is a hash there's a recursive call with &lt;code&gt;key&lt;/code&gt; as &lt;code&gt;:root&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; がハッシュの場合、 &lt;code&gt;key&lt;/code&gt; が &lt;code&gt;:root&lt;/code&gt; の再帰呼び出しがあります。</target>
        </trans-unit>
        <trans-unit id="1af9fcc5c2caef4948fa4ea03bbd7b9af0de9090" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is an array there's a recursive call with &lt;code&gt;key&lt;/code&gt; as &lt;code&gt;:root&lt;/code&gt;, and &lt;code&gt;key&lt;/code&gt; singularized as &lt;code&gt;:children&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; が配列の場合、 &lt;code&gt;key&lt;/code&gt; が &lt;code&gt;:root&lt;/code&gt; で、 &lt;code&gt;key&lt;/code&gt; が &lt;code&gt;:children&lt;/code&gt; で単数化された再帰呼び出しがあります。</target>
        </trans-unit>
        <trans-unit id="1668bd038bb5f42b2c326294204e8d7be48a1d0e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; responds to &lt;code&gt;to_xml&lt;/code&gt; the method is invoked with &lt;code&gt;key&lt;/code&gt; as &lt;code&gt;:root&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; が &lt;code&gt;to_xml&lt;/code&gt; に応答する場合、メソッドは &lt;code&gt;:root&lt;/code&gt; として &lt;code&gt;key&lt;/code&gt; で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="466fa4c8854026719a6c3ab5c825097424d354f3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;verify_authenticity_token&lt;/code&gt; was run (indicating that we have forgery protection enabled for this request) then also verify that we aren't serving an unauthorized cross-origin response.</source>
          <target state="translated">&lt;code&gt;verify_authenticity_token&lt;/code&gt; が実行された場合（この要求に対して偽造防止が有効になっていることを示します）、次に、不正なクロスオリジン応答を提供していないことも確認します。</target>
        </trans-unit>
        <trans-unit id="5ca49cf41c138f35252ab184c122a9a70c4b194b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;workers&lt;/code&gt; is set to &lt;code&gt;:number_of_processors&lt;/code&gt;, the number of workers will be set to the actual core count on the machine you are on.</source>
          <target state="translated">&lt;code&gt;workers&lt;/code&gt; が &lt;code&gt;:number_of_processors&lt;/code&gt; に設定されている場合、ワーカーの数は、使用しているマシンの実際のコア数に設定されます。</target>
        </trans-unit>
        <trans-unit id="648401d5f62a3bbd6b3fe0b63f880025ab1d48c1" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;n&lt;/em&gt; is not specified or is &lt;code&gt;nil&lt;/code&gt;, 16 is assumed. It may be larger in the future.</source>
          <target state="translated">場合&lt;em&gt;nは&lt;/em&gt;指定された又はされていない &lt;code&gt;nil&lt;/code&gt; 、16が想定されます。今後大きくなる可能性があります。</target>
        </trans-unit>
        <trans-unit id="6725c4d388be7942f97e67b02a3bbc9fdd74b934" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;n&lt;/em&gt; is not specified or is &lt;code&gt;nil&lt;/code&gt;, 16 is assumed. It may be larger in the future. This method can be used over &lt;code&gt;base58&lt;/code&gt; if a deterministic case key is necessary.</source>
          <target state="translated">場合&lt;em&gt;nは&lt;/em&gt;指定された又はされていない &lt;code&gt;nil&lt;/code&gt; 、16が想定されます。今後大きくなる可能性があります。このメソッドは、確定的なケースキーが必要な場合に &lt;code&gt;base58&lt;/code&gt; で使用できます。</target>
        </trans-unit>
        <trans-unit id="75982be4dbcfe52b02ad4583c68baf31e344ca67" translate="yes" xml:space="preserve">
          <source>If A extends &lt;a href=&quot;../base&quot;&gt;&lt;code&gt;ActiveRecord::Base&lt;/code&gt;&lt;/a&gt;, A.base_class will return A. If B descends from A through some arbitrarily deep hierarchy, B.base_class will return A.</source>
          <target state="translated">Aが&lt;a href=&quot;../base&quot;&gt; &lt;code&gt;ActiveRecord::Base&lt;/code&gt; &lt;/a&gt;を拡張する場合、A.base_classはAを返します。BがAから任意の深い階層を下る場合、B.base_classはAを返します。</target>
        </trans-unit>
        <trans-unit id="41fb52ab7bd605d408a6643c012c5952b89b2734" translate="yes" xml:space="preserve">
          <source>If A extends &lt;a href=&quot;../base&quot;&gt;ActiveRecord::Base&lt;/a&gt;, A.base_class will return A. If B descends from A through some arbitrarily deep hierarchy, B.base_class will return A.</source>
          <target state="translated">Aが&lt;a href=&quot;../base&quot;&gt;ActiveRecord :: Base&lt;/a&gt;を拡張する場合、A.base_classはAを返します。BがAから任意の深い階層を介して派生する場合、B.base_classはAを返します。</target>
        </trans-unit>
        <trans-unit id="e9ff819ba19a3b7429f74a0356060c799e1d19c3" translate="yes" xml:space="preserve">
          <source>If ActiveRecord::Base.cache_versioning is turned off, as it was in Rails 5.1 and earlier, the cache key will also include a version.</source>
          <target state="translated">Rails 5.1以前のようにActiveRecord::Base.cache_versioningをオフにすると、キャッシュキーにもバージョンが含まれるようになります。</target>
        </trans-unit>
        <trans-unit id="e97f874c091376770afec22edded7a7092993dac" translate="yes" xml:space="preserve">
          <source>If ActiveRecord::Base.collection_cache_versioning is turned off, as it was in Rails 6.0 and earlier, the cache key will also include a version.</source>
          <target state="translated">Rails 6.0以前のようにActiveRecord::Base.collection_cache_versioningをオフにすると、キャッシュキーにもバージョンが含まれます。</target>
        </trans-unit>
        <trans-unit id="01da03c1b29dd8a6a933e9e17ba219956be10d9e" translate="yes" xml:space="preserve">
          <source>If B &amp;lt; A and C &amp;lt; B and if A is an &lt;a href=&quot;classmethods#attribute-i-abstract_class&quot;&gt;#abstract_class&lt;/a&gt; then both B.base_class and C.base_class would return B as the answer since A is an abstract_class.</source>
          <target state="translated">B &amp;lt;AかつC &amp;lt;Bで、Aが&lt;a href=&quot;classmethods#attribute-i-abstract_class&quot;&gt;#abstract_classである&lt;/a&gt;場合、Aはabstract_classであるため、B.base_classとC.base_classの両方が回答としてBを返します。</target>
        </trans-unit>
        <trans-unit id="5cbb9e902f4c50d2454d13f117e30ae9f77d3378" translate="yes" xml:space="preserve">
          <source>If B &amp;lt; A and C &amp;lt; B and if A is an &lt;a href=&quot;classmethods#attribute-i-abstract_class&quot;&gt;&lt;code&gt;abstract_class&lt;/code&gt;&lt;/a&gt; then both B.base_class and C.base_class would return B as the answer since A is an abstract_class.</source>
          <target state="translated">B &amp;lt;AおよびC &amp;lt;Bであり、Aが&lt;a href=&quot;classmethods#attribute-i-abstract_class&quot;&gt; &lt;code&gt;abstract_class&lt;/code&gt; の&lt;/a&gt;場合、Aはabstract_classであるため、B.base_classとC.base_classの両方が回答としてBを返します。</target>
        </trans-unit>
        <trans-unit id="910ee9ce5e0a03da2ac18fc9989b45d545292504" translate="yes" xml:space="preserve">
          <source>If Header Injection was possible, Response Splitting might be, too. In HTTP, the header block is followed by two CRLFs and the actual data (usually HTML). The idea of Response Splitting is to inject two CRLFs into a header field, followed by another response with malicious HTML. The response will be:</source>
          <target state="translated">ヘッダーインジェクションが可能であれば、レスポンススプリットも可能かもしれません。HTTPでは、ヘッダブロックの後に2つのCRLFと実際のデータ(通常はHTML)が続きます。レスポンス・スプリッティングのアイデアは、2つのCRLFをヘッダフィールドに注入し、その後に悪意のあるHTMLを含む別のレスポンスが続くというものです。レスポンスは次のようになります。</target>
        </trans-unit>
        <trans-unit id="a2df3ea66c368f6c6e1ca834c45729e2d2bf753a" translate="yes" xml:space="preserve">
          <source>If Rails doesn't recognize the command, it hands the reins over to Rake to run a task of the same name.</source>
          <target state="translated">Railsがコマンドを認識しない場合、Rakeに手綱を渡して同名のタスクを実行します。</target>
        </trans-unit>
        <trans-unit id="40e926c7eb45918e12968128842849ff93b55380" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;regexp&quot;&gt;&lt;code&gt;Regexp&lt;/code&gt;&lt;/a&gt; is given, the matching portion of the string is returned. If a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; is given, that given string is returned if it occurs in the string. In both cases, &lt;code&gt;nil&lt;/code&gt; is returned if there is no match.</source>
          <target state="translated">&lt;a href=&quot;regexp&quot;&gt; &lt;code&gt;Regexp&lt;/code&gt; &lt;/a&gt;が指定されている場合、文字列の一致する部分が返されます。&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;が指定されている場合、その文字列が文字列内にあると、その指定された文字列が返されます。どちらの場合も、一致するものがない場合は &lt;code&gt;nil&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="9307c21fe4be5de446b9dd6bcfd78bb0977d6a1f" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;before_*&lt;/code&gt; callback cancels the action a &lt;code&gt;ROLLBACK&lt;/code&gt; is issued. You can also trigger a &lt;code&gt;ROLLBACK&lt;/code&gt; raising an exception in any of the callbacks, including &lt;code&gt;after_*&lt;/code&gt; hooks. Note, however, that in that case the client needs to be aware of it because an ordinary &lt;a href=&quot;persistence#method-i-save&quot;&gt;#save&lt;/a&gt; will raise such exception instead of quietly returning &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;before_*&lt;/code&gt; コールバックがアクションをキャンセル &lt;code&gt;ROLLBACK&lt;/code&gt; が発行されます。 &lt;code&gt;after_*&lt;/code&gt; フックを含む、任意のコールバックで例外を発生させる &lt;code&gt;ROLLBACK&lt;/code&gt; をトリガーすることもできます。ただし、その場合、通常の&lt;a href=&quot;persistence#method-i-save&quot;&gt;#save&lt;/a&gt;は静かに &lt;code&gt;false&lt;/code&gt; を返すのではなく、そのような例外を発生させるため、クライアントはそれを認識する必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="5dbff13a3f2506529967aad30cd2c84642ced467" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;before_*&lt;/code&gt; callback cancels the action a ROLLBACK is issued. You can also trigger a ROLLBACK raising an exception in any of the callbacks, including &lt;code&gt;after_*&lt;/code&gt; hooks. Note, however, that in that case the client needs to be aware of it because an ordinary &lt;a href=&quot;persistence#method-i-save&quot;&gt;#save&lt;/a&gt; will raise such exception instead of quietly returning &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;before_*&lt;/code&gt; コールバックは、ROLLBACKが発行されたアクションをキャンセルします。 &lt;code&gt;after_*&lt;/code&gt; フックを含む、任意のコールバックで例外を発生させるROLLBACKをトリガーすることもできます。ただし、その場合、通常の&lt;a href=&quot;persistence#method-i-save&quot;&gt;#save&lt;/a&gt;は静かに &lt;code&gt;false&lt;/code&gt; を返すのではなく、そのような例外を発生させるため、クライアントはそれを認識する必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="5c9693b2e0a1e6dab70b8065bdf9ad0d56d921f6" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;before_*&lt;/code&gt; callback throws &lt;code&gt;:abort&lt;/code&gt;, all the later callbacks and the associated action are cancelled. &lt;a href=&quot;callbacks&quot;&gt;&lt;code&gt;Callbacks&lt;/code&gt;&lt;/a&gt; are generally run in the order they are defined, with the exception of callbacks defined as methods on the model, which are called last.</source>
          <target state="translated">&lt;code&gt;before_*&lt;/code&gt; コールバックが &lt;code&gt;:abort&lt;/code&gt; をスローした場合、それ以降のすべてのコールバックと関連するアクションはキャンセルされます。&lt;a href=&quot;callbacks&quot;&gt; &lt;code&gt;Callbacks&lt;/code&gt; &lt;/a&gt;は、最後に呼び出されるモデルのメソッドとして定義されたコールバックを除いて、通常、定義された順序で実行されます。</target>
        </trans-unit>
        <trans-unit id="b72170a2465df8886030f3ed6a3555bfded0f14f" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;before_*&lt;/code&gt; callback throws &lt;code&gt;:abort&lt;/code&gt;, all the later callbacks and the associated action are cancelled. &lt;a href=&quot;callbacks&quot;&gt;Callbacks&lt;/a&gt; are generally run in the order they are defined, with the exception of callbacks defined as methods on the model, which are called last.</source>
          <target state="translated">&lt;code&gt;before_*&lt;/code&gt; コールバックが &lt;code&gt;:abort&lt;/code&gt; をスローした場合、それ以降のすべてのコールバックと関連するアクションはキャンセルされます。&lt;a href=&quot;callbacks&quot;&gt;コールバック&lt;/a&gt;は通常、最後に呼び出されるモデルのメソッドとして定義されたコールバックを除き、定義された順序で実行されます。</target>
        </trans-unit>
        <trans-unit id="6c367cc7e0662c88de087cb1b8fc3b7aa4b7e461" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;before_add&lt;/code&gt; callback throws &lt;code&gt;:abort&lt;/code&gt;, the object does not get added to the collection. Similarly, if a &lt;code&gt;before_remove&lt;/code&gt; callback throws &lt;code&gt;:abort&lt;/code&gt;, the object does not get removed from the collection:</source>
          <target state="translated">&lt;code&gt;before_add&lt;/code&gt; コールバックが &lt;code&gt;:abort&lt;/code&gt; をスローした場合、オブジェクトはコレクションに追加されません。同様に、 &lt;code&gt;before_remove&lt;/code&gt; コールバックが &lt;code&gt;:abort&lt;/code&gt; をスローした場合、オブジェクトはコレクションから削除されません。</target>
        </trans-unit>
        <trans-unit id="c36cd39c58e24be22c531a46289da938c959f1ba" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;before_add&lt;/code&gt; callback throws an exception, the object does not get added to the collection. Similarly, if a &lt;code&gt;before_remove&lt;/code&gt; callback throws an exception, the object does not get removed from the collection.</source>
          <target state="translated">&lt;code&gt;before_add&lt;/code&gt; コールバックが例外をスローした場合、オブジェクトはコレクションに追加されません。同様に、 &lt;code&gt;before_remove&lt;/code&gt; コールバックが例外をスローした場合、オブジェクトはコレクションから削除されません。</target>
        </trans-unit>
        <trans-unit id="e8ded195bb7b18408b4063d43676b296ddd327e5" translate="yes" xml:space="preserve">
          <source>If a Regexp is given, the matching portion of the string is returned. If a &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt; is given, that given string is returned if it occurs in the string. In both cases, &lt;code&gt;nil&lt;/code&gt; is returned if there is no match.</source>
          <target state="translated">Regexpが指定されている場合、文字列の一致する部分が返されます。&lt;a href=&quot;string&quot;&gt;文字列&lt;/a&gt;が指定されている場合、指定された文字列がその文字列に出現すると返されます。どちらの場合も、一致しない場合は &lt;code&gt;nil&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="c41af17b53ebf34ff9ae24ecf1b4f2716745d195" translate="yes" xml:space="preserve">
          <source>If a block is given, &lt;code&gt;sum&lt;/code&gt; becomes an iterator that yields the elements of the collection and sums the returned values:</source>
          <target state="translated">ブロックが指定されている場合、 &lt;code&gt;sum&lt;/code&gt; は、コレクションの要素を生成して戻り値を合計する反復子になります。</target>
        </trans-unit>
        <trans-unit id="513ce7b88f94c212d334d77b6e3c4d3dee211f1e" translate="yes" xml:space="preserve">
          <source>If a block is passed the separators are those elements of the array for which the block returns true:</source>
          <target state="translated">ブロックが渡された場合、そのブロックが真を返す配列の要素がセパレータとなります。</target>
        </trans-unit>
        <trans-unit id="6a52c7735670fff2f9255494888c261b298cffb5" translate="yes" xml:space="preserve">
          <source>If a block is passed, asserts that the block will cause the job to be enqueued with the given arguments.</source>
          <target state="translated">ブロックが渡された場合、そのブロックが与えられた引数でジョブを待ち行列に入れることを保証します。</target>
        </trans-unit>
        <trans-unit id="92e5240b8dd8056e9df0197059366c02c3635e8f" translate="yes" xml:space="preserve">
          <source>If a block is passed, asserts that the block will cause the specified number of jobs to be enqueued.</source>
          <target state="translated">ブロックが渡された場合、そのブロックが指定された数のジョブを待ち行列に入れることを保証します。</target>
        </trans-unit>
        <trans-unit id="08e4193b1bb25259b506327b2a3258959264449e" translate="yes" xml:space="preserve">
          <source>If a block is passed, asserts that the block will cause the specified number of jobs to be performed.</source>
          <target state="translated">ブロックが渡された場合、そのブロックが指定された数のジョブを実行させることを主張します。</target>
        </trans-unit>
        <trans-unit id="d7ad821784deb765ff67f30a7d7b671a0fcb5c67" translate="yes" xml:space="preserve">
          <source>If a block is passed, asserts that the block will not cause any job to be enqueued.</source>
          <target state="translated">ブロックが渡された場合、そのブロックはどのジョブも待ち行列に入れないことを保証します。</target>
        </trans-unit>
        <trans-unit id="cbb8f07462037e0e15ac59bfcdd78b88800ec582" translate="yes" xml:space="preserve">
          <source>If a block is passed, asserts that the block will not cause any job to be performed.</source>
          <target state="translated">ブロックが渡された場合、そのブロックがどのジョブも実行されないことを保証します。</target>
        </trans-unit>
        <trans-unit id="aaedcc24df40b6166f7e9237fe26a3993ef1cdd2" translate="yes" xml:space="preserve">
          <source>If a block is passed, that block performs all of the jobs that were enqueued throughout the duration of the block and asserts that the job has been performed with the given arguments in the block.</source>
          <target state="translated">ブロックが渡された場合、そのブロックは、ブロックの期間中に待ち行列に入れられていたすべてのジョブを実行し、ブロック内の与えられた引数でジョブが実行されたことを主張します。</target>
        </trans-unit>
        <trans-unit id="b8fec891263d9daae7929276a0676a2e89e94060" translate="yes" xml:space="preserve">
          <source>If a block is passed, that block should cause a message with the specified data to be sent.</source>
          <target state="translated">ブロックが渡された場合、そのブロックは指定されたデータを含むメッセージを送信しなければなりません。</target>
        </trans-unit>
        <trans-unit id="b337599bab8490a4258c80c012069a7855334889" translate="yes" xml:space="preserve">
          <source>If a block is passed, that block should cause the specified email to be enqueued.</source>
          <target state="translated">ブロックが渡された場合、そのブロックは指定された電子メールを待ち受けにするようにしなければなりません。</target>
        </trans-unit>
        <trans-unit id="7b7b1f0aac0d94028895fdd4e19a04f9b30f94d0" translate="yes" xml:space="preserve">
          <source>If a block is passed, that block should cause the specified number of emails to be enqueued.</source>
          <target state="translated">ブロックが渡された場合、そのブロックは指定された数の電子メールを待ち受けにしなければなりません。</target>
        </trans-unit>
        <trans-unit id="0577888880e63313e0905107c0ea3b08b2a18f97" translate="yes" xml:space="preserve">
          <source>If a block is passed, that block should cause the specified number of emails to be sent.</source>
          <target state="translated">ブロックが渡された場合、そのブロックは指定された数の電子メールを送信するようにしなければなりません。</target>
        </trans-unit>
        <trans-unit id="537da8463233ac3337fc49bed5232e6cfcd1286f" translate="yes" xml:space="preserve">
          <source>If a block is passed, that block should cause the specified number of messages to be broadcasted.</source>
          <target state="translated">ブロックが渡された場合、そのブロックは指定された数のメッセージをブロードキャストする必要があります。</target>
        </trans-unit>
        <trans-unit id="db392e9872a85a84d3fa4a1ae1644742a0842ccd" translate="yes" xml:space="preserve">
          <source>If a block is passed, that block should not cause any emails to be sent.</source>
          <target state="translated">ブロックが渡された場合、そのブロックでは電子メールが送信されることはありません。</target>
        </trans-unit>
        <trans-unit id="98b8678167700b42512cdd7acb9c1db4c07e3bfe" translate="yes" xml:space="preserve">
          <source>If a block is passed, that block should not cause any message to be sent.</source>
          <target state="translated">ブロックが渡された場合、そのブロックはいかなるメッセージも送信されないようにすべきではありません。</target>
        </trans-unit>
        <trans-unit id="a9cddb082ed08cd83e8660be8348a11df7100494" translate="yes" xml:space="preserve">
          <source>If a block is provided, it should not cause any emails to be enqueued.</source>
          <target state="translated">ブロックが提供されている場合は、そのブロックを使用することでメールが待ち受けになることはないはずです。</target>
        </trans-unit>
        <trans-unit id="067cc69b3b04fbc1d4e67f830d884ffb7f6a2735" translate="yes" xml:space="preserve">
          <source>If a character set has been defined for this response (see charset=) then the character set information will also be included in the content type information.</source>
          <target state="translated">この応答に対して文字セットが定義されている場合(charset=を参照)、文字セット情報はコンテンツタイプ情報にも含まれます。</target>
        </trans-unit>
        <trans-unit id="023729606b8ce7b2cba38b5a075d34921624f61c" translate="yes" xml:space="preserve">
          <source>If a class defines &lt;code&gt;persisted?&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt; methods, then you can include the &lt;code&gt;ActiveModel::Conversion&lt;/code&gt; module in that class, and call the Rails conversion methods on objects of that class.</source>
          <target state="translated">クラスが &lt;code&gt;persisted?&lt;/code&gt; 定義している場合？および &lt;code&gt;id&lt;/code&gt; メソッドの場合、そのクラスに &lt;code&gt;ActiveModel::Conversion&lt;/code&gt; モジュールを含め、そのクラスのオブジェクトでRails変換メソッドを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="4e73b5f46513067df51fc52c6d174d950e565807" translate="yes" xml:space="preserve">
          <source>If a collection is given, the layout will be rendered once for each item in the collection. For example, these two snippets have the same output:</source>
          <target state="translated">コレクションが与えられた場合、レイアウトはコレクション内の各アイテムに対して一度だけレンダリングされます。例えば、以下の2つのスニペットは同じ出力を持っています。</target>
        </trans-unit>
        <trans-unit id="a3643c1d804be9b193c89b7e31b7f3394bd92c53" translate="yes" xml:space="preserve">
          <source>If a command cannot be reversed, an &lt;code&gt;ActiveRecord::IrreversibleMigration&lt;/code&gt; exception will be raised when the migration is moving down.</source>
          <target state="translated">コマンドを元に &lt;code&gt;ActiveRecord::IrreversibleMigration&lt;/code&gt; ない場合、移行が下に移動するときにActiveRecord :: IrreversibleMigration例外が発生します。</target>
        </trans-unit>
        <trans-unit id="5525dda418a463d881db9a502d03811ea4d20af1" translate="yes" xml:space="preserve">
          <source>If a component extends the semantics of &lt;code&gt;response_body&lt;/code&gt; (as &lt;a href=&quot;../actioncontroller&quot;&gt;&lt;code&gt;ActionController&lt;/code&gt;&lt;/a&gt; extends it to be anything that responds to the method each), this method needs to be overridden in order to still return a string.</source>
          <target state="translated">コンポーネントが &lt;code&gt;response_body&lt;/code&gt; のセマンティクスを拡張する場合（&lt;a href=&quot;../actioncontroller&quot;&gt; &lt;code&gt;ActionController&lt;/code&gt; &lt;/a&gt;がそれぞれのメソッドに応答するものに拡張するため）、文字列を返すには、このメソッドをオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="b944453b70315a8c505fb99d751123c507c9388e" translate="yes" xml:space="preserve">
          <source>If a component extends the semantics of &lt;code&gt;response_body&lt;/code&gt; (as &lt;a href=&quot;../actioncontroller&quot;&gt;ActionController&lt;/a&gt; extends it to be anything that responds to the method each), this method needs to be overridden in order to still return a string.</source>
          <target state="translated">コンポーネントが &lt;code&gt;response_body&lt;/code&gt; のセマンティクスを拡張する場合（&lt;a href=&quot;../actioncontroller&quot;&gt;ActionController&lt;/a&gt;がそれを拡張して、それぞれメソッドに応答するものになるようにする）、文字列を返すためには、このメソッドをオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="8837598887e3206b5c464e5ef99496113f388598" translate="yes" xml:space="preserve">
          <source>If a connection obtained through &lt;a href=&quot;connectionpool#method-i-connection&quot;&gt;&lt;code&gt;connection&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;connectionpool#method-i-with_connection&quot;&gt;&lt;code&gt;with_connection&lt;/code&gt;&lt;/a&gt; methods already exists yield it to the block. If no such connection exists checkout a connection, yield it to the block, and checkin the connection when finished.</source>
          <target state="translated">&lt;a href=&quot;connectionpool#method-i-connection&quot;&gt; &lt;code&gt;connection&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;connectionpool#method-i-with_connection&quot;&gt; &lt;code&gt;with_connection&lt;/code&gt; &lt;/a&gt;メソッドを介して取得された接続がすでに存在する場合は、それをブロックに渡します。そのような接続が存在しない場合は、接続をチェックアウトし、それをブロックに譲り、終了したら接続をチェックインします。</target>
        </trans-unit>
        <trans-unit id="a7f1cf835e5459f9051847f483bcc6efaff6b28e" translate="yes" xml:space="preserve">
          <source>If a connection obtained through &lt;a href=&quot;connectionpool#method-i-connection&quot;&gt;connection&lt;/a&gt; or &lt;a href=&quot;connectionpool#method-i-with_connection&quot;&gt;with_connection&lt;/a&gt; methods already exists yield it to the block. If no such connection exists checkout a connection, yield it to the block, and checkin the connection when finished.</source>
          <target state="translated">&lt;a href=&quot;connectionpool#method-i-connection&quot;&gt;connection&lt;/a&gt;または&lt;a href=&quot;connectionpool#method-i-with_connection&quot;&gt;with_connection&lt;/a&gt;メソッドを介して取得された接続がすでに存在する場合は、それをブロックに渡します。そのような接続が存在しない場合は、接続をチェックアウトし、それをブロックに渡して、完了したら接続をチェックインします。</target>
        </trans-unit>
        <trans-unit id="81cffde09e1f82366e441be3c5bc37c8b20bee84" translate="yes" xml:space="preserve">
          <source>If a method expects a variable number of arguments and uses &lt;code&gt;*&lt;/code&gt; in its declaration, however, such an options hash ends up being an item of the array of arguments, where it loses its role.</source>
          <target state="translated">ただし、メソッドが可変数の引数を予期し、その宣言で &lt;code&gt;*&lt;/code&gt; を使用する場合、そのようなオプションハッシュは最終的に引数の配列のアイテムとなり、役割を失います。</target>
        </trans-unit>
        <trans-unit id="03ac5f8b105b6818c812baf281cfa468facb887c" translate="yes" xml:space="preserve">
          <source>If a name is provided a single DatabaseConfig object will be returned, otherwise an array of DatabaseConfig objects will be returned that corresponds with the environment and type requested.</source>
          <target state="translated">名前が指定された場合は単一の DatabaseConfig オブジェクトが返され、そうでない場合は要求された環境と型に対応する DatabaseConfig オブジェクトの配列が返されます。</target>
        </trans-unit>
        <trans-unit id="e3671294d7b85d64dd219b2b1a918acc4d6af40c" translate="yes" xml:space="preserve">
          <source>If a namespace is defined in a file, as &lt;code&gt;Hotel&lt;/code&gt; is here:</source>
          <target state="translated">名前空間がファイルで定義されている場合、 &lt;code&gt;Hotel&lt;/code&gt; はここにあります：</target>
        </trans-unit>
        <trans-unit id="d68462e62987e812a18f4377cd6d9f0b2c7169cd" translate="yes" xml:space="preserve">
          <source>If a page has no link like the one generated by this helper, browsers ask for &lt;code&gt;/favicon.ico&lt;/code&gt; automatically, and cache the file if the request succeeds. If the favicon changes it is hard to get it updated.</source>
          <target state="translated">このヘルパーによって生成されるようなリンクがページにない場合、ブラウザーは &lt;code&gt;/favicon.ico&lt;/code&gt; を自動的に要求し、要求が成功した場合にファイルをキャッシュします。ファビコンが変更された場合、更新するのは困難です。</target>
        </trans-unit>
        <trans-unit id="3a8211c2ca31c599bf3cfa16c9c875308f10b887" translate="yes" xml:space="preserve">
          <source>If a passed record is deleted after the job is enqueued but before the &lt;code&gt;#perform&lt;/code&gt; method is called Active Job will raise an &lt;code&gt;ActiveJob::DeserializationError&lt;/code&gt; exception.</source>
          <target state="translated">渡されたレコードが、ジョブがキューに登録された後、 &lt;code&gt;#perform&lt;/code&gt; メソッドが呼び出される前に削除された場合、Active Jobは &lt;code&gt;ActiveJob::DeserializationError&lt;/code&gt; 例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="85fe36146529d258e4844ec7529684fce93b6866" translate="yes" xml:space="preserve">
          <source>If a precondition fails to be met, you can halt the processing using the &lt;code&gt;#bounced!&lt;/code&gt; method, which will silently prevent any further processing, but not actually send out any bounce notice. You can also pair this behavior with the invocation of an Action Mailer class responsible for sending out an actual bounce email. This is done using the &lt;code&gt;#bounce_with&lt;/code&gt; method, which takes the mail object returned by an Action Mailer method, like so:</source>
          <target state="translated">前提条件が満たされない場合は、 &lt;code&gt;#bounced!&lt;/code&gt; を使用して処理を停止できます。メソッドは、それ以上の処理をサイレントに防止しますが、実際にはバウンス通知を送信しません。この動作を、実際のバウンスメールの送信を担当するAction Mailerクラスの呼び出しとペアにすることもできます。これは、 &lt;code&gt;#bounce_with&lt;/code&gt; メソッドを使用して行われます。このメソッドは、アクションメーラーメソッドによって返されたメールオブジェクトを次のように取得します。</target>
        </trans-unit>
        <trans-unit id="81c556b7372cc29e26a78ba622de05690123e1cb" translate="yes" xml:space="preserve">
          <source>If a primary configuration is provided this will be used as the &quot;default&quot; configuration. If there is no configuration named &quot;primary&quot; Rails will use the first configuration for an environment. The default configurations will use the default Rails filenames. For example primary configurations will use &lt;code&gt;schema.rb&lt;/code&gt; for the schema file whereas all other entries will use &lt;code&gt;[CONFIGURATION_NAMESPACE]_schema.rb&lt;/code&gt; for the filename.</source>
          <target state="translated">プライマリ構成が提供されている場合、これは「デフォルト」構成として使用されます。「primary」という名前の構成がない場合、Railsは環境の最初の構成を使用します。デフォルトの構成では、デフォルトのRailsファイル名が使用されます。たとえば、プライマリ構成ではスキーマファイルに &lt;code&gt;schema.rb&lt;/code&gt; を使用しますが、他のすべてのエントリではファイル名に &lt;code&gt;[CONFIGURATION_NAMESPACE]_schema.rb&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="1b3f816c815ad65826777a8ff6f403171f824998" translate="yes" xml:space="preserve">
          <source>If a proc is given, its body is evaluated in the context of the current object. It can also optionally accept the current object as an argument.</source>
          <target state="translated">procが与えられた場合、その本体は現在のオブジェクトのコンテキストで評価されます。また、オプションで現在のオブジェクトを引数として受け取ることもできます。</target>
        </trans-unit>
        <trans-unit id="149aacb06e7e3f6605d92f39725e302820877402" translate="yes" xml:space="preserve">
          <source>If a proc, lambda, or block is given, its body is evaluated in the context of the current object. It can also optionally accept the current object as an argument.</source>
          <target state="translated">proc、ラムダ、ブロックが与えられた場合、その本体は現在のオブジェクトのコンテキストで評価されます。また、オプションで現在のオブジェクトを引数として受け取ることもできます。</target>
        </trans-unit>
        <trans-unit id="654956beac4b01771357ce14afd46acd98c5d148" translate="yes" xml:space="preserve">
          <source>If a role is passed, Active Record will look up the connection based on the requested role:</source>
          <target state="translated">ロールが渡された場合、Active Recordは要求されたロールに基づいて接続を検索します。</target>
        </trans-unit>
        <trans-unit id="13d2747a000fac043b24014a4f0ac35ad8710172" translate="yes" xml:space="preserve">
          <source>If a sequence name is not explicitly set when using Oracle, it will default to the commonly used pattern of: #{table_name}_seq</source>
          <target state="translated">Oracle を使用する際にシーケンス名が明示的に設定されていない場合は、一般的に使用されているパターンの #{table_name}_seq がデフォルトとなります。#テーブル名}_seq</target>
        </trans-unit>
        <trans-unit id="f254fa76dcfc9e00b93093a59438edbf311f2ca3" translate="yes" xml:space="preserve">
          <source>If a sequence name is not explicitly set when using PostgreSQL, it will discover the sequence corresponding to your primary key for you.</source>
          <target state="translated">PostgreSQLを使用する際にシーケンス名が明示的に設定されていない場合、主キーに対応するシーケンスを発見してくれます。</target>
        </trans-unit>
        <trans-unit id="9cfe0a8dc0a380f18b2d22242e4d74f5f33e2b65" translate="yes" xml:space="preserve">
          <source>If a spec name is provided a single DatabaseConfig object will be returned, otherwise an array of DatabaseConfig objects will be returned that corresponds with the environment and type requested.</source>
          <target state="translated">仕様名が指定された場合は単一のDatabaseConfigオブジェクトが返され、そうでない場合は要求された環境と型に対応するDatabaseConfigオブジェクトの配列が返されます。</target>
        </trans-unit>
        <trans-unit id="07aec17663231127557f8759c6e0694cdde16ea6" translate="yes" xml:space="preserve">
          <source>If a subclass changes the value then that would also change the value for parent class. Similarly if parent class changes the value then that would change the value of subclasses too.</source>
          <target state="translated">サブクラスが値を変更すると、親クラスの値も変更されます。同様に、親クラスが値を変更すると、サブクラスの値も変更されます。</target>
        </trans-unit>
        <trans-unit id="a86e080dd22af17fd0f14408201a5aedbf2452e3" translate="yes" xml:space="preserve">
          <source>If a subclass changes the value, the parent class' value is not changed. Similarly, if the parent class changes the value, the value of subclasses is not changed.</source>
          <target state="translated">サブクラスが値を変更しても、親クラスの値は変更されません。同様に、親クラスが値を変更しても、サブクラスの値は変更されません。</target>
        </trans-unit>
        <trans-unit id="0354678a0f3bfe7f95fe7b61e347beaa72a03efb" translate="yes" xml:space="preserve">
          <source>If a template rendered from within an engine attempts to use one of the application's routing helper methods, it may result in an undefined method call. If you encounter such an issue, ensure that you're not attempting to call the application's routing methods without the &lt;code&gt;main_app&lt;/code&gt; prefix from within the engine.</source>
          <target state="translated">エンジン内からレンダリングされたテンプレートがアプリケーションのルーティングヘルパーメソッドの1つを使用しようとすると、未定義のメソッド呼び出しが発生する可能性があります。このような問題が発生した場合は、エンジン内から &lt;code&gt;main_app&lt;/code&gt; 接頭辞なしでアプリケーションのルーティングメソッドを呼び出そうとしていないことを確認してください。</target>
        </trans-unit>
        <trans-unit id="ed422da304b9cc23a44d57af40a4741a9b601e37" translate="yes" xml:space="preserve">
          <source>If a template with the specified format does not exist an &lt;code&gt;ActionView::MissingTemplate&lt;/code&gt; error is raised.</source>
          <target state="translated">指定された形式のテンプレートが存在しない場合、 &lt;code&gt;ActionView::MissingTemplate&lt;/code&gt; エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="3791b28def09689311b47ac5bdb68c5430a4cd93" translate="yes" xml:space="preserve">
          <source>If advancing by a value of variable length (i.e., years, weeks, months, days), move forward from &lt;a href=&quot;timewithzone#method-i-time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt;, otherwise move forward from &lt;a href=&quot;timewithzone#method-i-utc&quot;&gt;&lt;code&gt;utc&lt;/code&gt;&lt;/a&gt;, for accuracy when moving across DST boundaries.</source>
          <target state="translated">可変長の値（つまり、年、週、月、日）で進む場合は、&lt;a href=&quot;timewithzone#method-i-time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;から前に&lt;a href=&quot;timewithzone#method-i-utc&quot;&gt; &lt;code&gt;utc&lt;/code&gt; &lt;/a&gt;ます。それ以外の場合は、DST境界を越えて移動するときの精度のために、utcから前に進みます。</target>
        </trans-unit>
        <trans-unit id="be5f17d61490f6e530253b6d59639ac5dd0820c0" translate="yes" xml:space="preserve">
          <source>If advancing by a value of variable length (i.e., years, weeks, months, days), move forward from &lt;a href=&quot;timewithzone#method-i-time&quot;&gt;time&lt;/a&gt;, otherwise move forward from &lt;a href=&quot;timewithzone#method-i-utc&quot;&gt;utc&lt;/a&gt;, for accuracy when moving across DST boundaries.</source>
          <target state="translated">可変長（つまり、年、週、月、日）の値だけ進む場合は、DSTの境界を越えて移動するときの精度を高めるために、&lt;a href=&quot;timewithzone#method-i-time&quot;&gt;時間&lt;/a&gt;から&lt;a href=&quot;timewithzone#method-i-utc&quot;&gt;先に進み&lt;/a&gt;、そうでない場合はutcから先に進みます。</target>
        </trans-unit>
        <trans-unit id="cd17d509cb012bb53345e8493f9f4b2eb8545fd9" translate="yes" xml:space="preserve">
          <source>If all connections are leased and the pool is at capacity (meaning the number of currently leased connections is greater than or equal to the size limit set), an &lt;a href=&quot;../connectiontimeouterror&quot;&gt;&lt;code&gt;ActiveRecord::ConnectionTimeoutError&lt;/code&gt;&lt;/a&gt; exception will be raised.</source>
          <target state="translated">すべての接続がリースされ、プールが容量に達した場合（つまり、現在リースされている接続の数が設定されたサイズ制限以上である場合）、&lt;a href=&quot;../connectiontimeouterror&quot;&gt; &lt;code&gt;ActiveRecord::ConnectionTimeoutError&lt;/code&gt; &lt;/a&gt;例外が発生します。</target>
        </trans-unit>
        <trans-unit id="1ee0c36c0b76b635629016de075e6de3ab3a9117" translate="yes" xml:space="preserve">
          <source>If all connections are leased and the pool is at capacity (meaning the number of currently leased connections is greater than or equal to the size limit set), an &lt;a href=&quot;../connectiontimeouterror&quot;&gt;ActiveRecord::ConnectionTimeoutError&lt;/a&gt; exception will be raised.</source>
          <target state="translated">すべての接続がリースされており、プールが容量に達している場合（つまり、現在リースされている接続の数が設定されたサイズ制限以上である場合）、&lt;a href=&quot;../connectiontimeouterror&quot;&gt;ActiveRecord :: ConnectionTimeoutError&lt;/a&gt;例外が発生します。</target>
        </trans-unit>
        <trans-unit id="af5cd7a8d89b9dd7db0db9fb398324f86891743f" translate="yes" xml:space="preserve">
          <source>If all those attempts fail, then Rails starts the lookup again in the parent namespace. In this case only the top-level remains:</source>
          <target state="translated">これらの試みがすべて失敗した場合、Railsは親名前空間で再度検索を開始します。この場合、トップレベルのみが残ります。</target>
        </trans-unit>
        <trans-unit id="268bf8cd68a64a02b847c477486c43bf8c1aa07d" translate="yes" xml:space="preserve">
          <source>If an alias was specified, it will be accessible from the resulting objects:</source>
          <target state="translated">エイリアスが指定されていた場合は、結果として得られるオブジェクトからアクセスできるようになります。</target>
        </trans-unit>
        <trans-unit id="a84bff5caeb7db04bff6e2b3dcfc77e145bd6dc4" translate="yes" xml:space="preserve">
          <source>If an argument is passed instead of a block, it will be used as the value for all elements:</source>
          <target state="translated">ブロックの代わりに引数が渡された場合、それはすべての要素の値として使用されます。</target>
        </trans-unit>
        <trans-unit id="5300a97b7550b28a046b416848374588f8f50106" translate="yes" xml:space="preserve">
          <source>If an argument isn't given to the proc, it's evaluated in the context of the current controller anyway.</source>
          <target state="translated">引数が与えられていない場合は、現在のコントローラのコンテキストで評価されます。</target>
        </trans-unit>
        <trans-unit id="2fb5ca231b71faaae958fa94cf85c72da7160d74" translate="yes" xml:space="preserve">
          <source>If an array is passed, a composite primary key will be created.</source>
          <target state="translated">配列が渡されると、合成主キーが作成されます。</target>
        </trans-unit>
        <trans-unit id="20ad99ab88925c65951d4cca093428238f1bcff8" translate="yes" xml:space="preserve">
          <source>If an array is passed, then the first element of the array is treated as a template, and the remaining elements are inserted into the template to generate the condition. Active Record takes care of building the query to avoid injection attacks, and will convert from the ruby type to the database type where needed. Elements are inserted into the string in the order in which they appear.</source>
          <target state="translated">配列が渡された場合、配列の最初の要素はテンプレートとして扱われ、残りの要素はテンプレートに挿入されて条件を生成します。Active Recordは、インジェクション攻撃を避けるためにクエリの構築を行い、必要に応じてruby型からデータベース型への変換を行います。要素は出現した順に文字列に挿入されます。</target>
        </trans-unit>
        <trans-unit id="001356d657ca11ea956fa321e73370e38d6aad02" translate="yes" xml:space="preserve">
          <source>If an association is eager loaded as part of a join, any fields from a custom select clause will not be present on the loaded models. This is because it is ambiguous whether they should appear on the parent record, or the child.</source>
          <target state="translated">結合の一部としてアソシエーションが熱心にロードされている場合、カスタム選択句からのフィールドは、ロードされたモデルには存在しません。これは、親レコードに表示されるべきか、子レコードに表示されるべきかが曖昧だからです。</target>
        </trans-unit>
        <trans-unit id="43250929ebbf1db1b21b73176b53c6034c133ec4" translate="yes" xml:space="preserve">
          <source>If an attacker enters ' OR '1'='1 as the name, and ' OR '2'&amp;gt;'1 as the password, the resulting SQL query will be:</source>
          <target state="translated">攻撃者が名前として 'OR' 1 '=' 1を入力し、パスワードとして 'OR' 2 '&amp;gt;' 1を入力した場合、結果のSQLクエリは次のようになります。</target>
        </trans-unit>
        <trans-unit id="a71f7a10cd9f58699c05f6f63c7c040aea8f690e" translate="yes" xml:space="preserve">
          <source>If an attacker enters &lt;code&gt;' OR '1'='1&lt;/code&gt; as the name, and &lt;code&gt;' OR '2'&amp;gt;'1&lt;/code&gt; as the password, the resulting SQL query will be:</source>
          <target state="translated">攻撃者が名前として &lt;code&gt;' OR '1'='1&lt;/code&gt; を入力し、パスワードとして &lt;code&gt;' OR '2'&amp;gt;'1&lt;/code&gt; を入力すると、結果のSQLクエリは次のようになります。</target>
        </trans-unit>
        <trans-unit id="661ce617bd2d9193e907313a3a549b7773599a76" translate="yes" xml:space="preserve">
          <source>If an attribute is modified in-place then make use of &lt;code&gt;[attribute_name]_will_change!&lt;/code&gt; to mark that the attribute is changing. Otherwise Active Model can't track changes to in-place attributes. Note that Active Record can detect in-place modifications automatically. You do not need to call &lt;code&gt;[attribute_name]_will_change!&lt;/code&gt; on Active Record models.</source>
          <target state="translated">属性がインプレースで変更される場合は、 &lt;code&gt;[attribute_name]_will_change!&lt;/code&gt; を利用してください！属性が変更されていることをマークします。そうでない場合、アクティブモデルはインプレース属性の変更を追跡できません。Active Recordはインプレース変更を自動的に検出できることに注意してください。 &lt;code&gt;[attribute_name]_will_change!&lt;/code&gt; を呼び出す必要はありません！Active Recordモデル。</target>
        </trans-unit>
        <trans-unit id="15733cdbee737ec00f67fc7a146337148088c4db" translate="yes" xml:space="preserve">
          <source>If an exception from a job is not rescued, then the job is referred to as &quot;failed&quot;.</source>
          <target state="translated">ジョブの例外が救出されなかった場合、そのジョブは「失敗した」と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="b5329dea6a6f7bf20494511c0de11574edb5b98a" translate="yes" xml:space="preserve">
          <source>If an exception happens during any instrumentation the payload will include information about it.</source>
          <target state="translated">計装中に例外が発生した場合、ペイロードにはそれに関する情報が含まれます。</target>
        </trans-unit>
        <trans-unit id="45bc0e91492a43233c5b1fe646dce446198504bf" translate="yes" xml:space="preserve">
          <source>If an exception happens during that particular instrumentation the payload will have a key &lt;code&gt;:exception&lt;/code&gt; with an array of two elements as value: a string with the name of the exception class, and the exception message. The &lt;code&gt;:exception_object&lt;/code&gt; key of the payload will have the exception itself as the value:</source>
          <target state="translated">その特定のインスツルメンテーション中に例外が発生した場合、ペイロードには、2つの要素の配列を値として持つキー &lt;code&gt;:exception&lt;/code&gt; があります。例外クラスの名前を含む文字列と例外メッセージです。ペイロードの &lt;code&gt;:exception_object&lt;/code&gt; キーには、値自体として例外自体があります。</target>
        </trans-unit>
        <trans-unit id="d3571ad06223071644a2e21e942e9e18bebae11c" translate="yes" xml:space="preserve">
          <source>If an inbound email does not, against the rfc822 mandate, specify a Message-ID, one will be generated using the approach from &lt;code&gt;Mail::MessageIdField&lt;/code&gt;.</source>
          <target state="translated">インバウンド電子メールがrfc822命令に反してメッセージ-IDを指定しない場合、 &lt;code&gt;Mail::MessageIdField&lt;/code&gt; からのアプローチを使用して生成されます。</target>
        </trans-unit>
        <trans-unit id="112ab9ce8e8818edb8f5052b2fe4b75371cc64b1" translate="yes" xml:space="preserve">
          <source>If an incoming request of &lt;code&gt;/photos/1&lt;/code&gt; is processed by this route (because it hasn't matched any previous route in the file), then the result will be to invoke the &lt;code&gt;display&lt;/code&gt; action of the &lt;code&gt;PhotosController&lt;/code&gt;, and to make the final parameter &lt;code&gt;&quot;1&quot;&lt;/code&gt; available as &lt;code&gt;params[:id]&lt;/code&gt;. This route will also route the incoming request of &lt;code&gt;/photos&lt;/code&gt; to &lt;code&gt;PhotosController#display&lt;/code&gt;, since &lt;code&gt;:id&lt;/code&gt; is an optional parameter, denoted by parentheses.</source>
          <target state="translated">&lt;code&gt;/photos/1&lt;/code&gt; の受信リクエストがこのルートによって処理される場合（ファイル内の以前のルートと一致していないため）、結果は &lt;code&gt;PhotosController&lt;/code&gt; の &lt;code&gt;display&lt;/code&gt; アクションを呼び出し、最後のパラメーターを作成します &lt;code&gt;&quot;1&quot;&lt;/code&gt; は &lt;code&gt;params[:id]&lt;/code&gt; として使用できます。このルート意志もルートの着信要求 &lt;code&gt;/photos&lt;/code&gt; の &lt;code&gt;PhotosController#display&lt;/code&gt; 、以来 &lt;code&gt;:id&lt;/code&gt; は括弧で示される任意のパラメータは、です。</target>
        </trans-unit>
        <trans-unit id="dd101849469c58e0a7b58eccb5d9e68061f629f1" translate="yes" xml:space="preserve">
          <source>If an initializer has code that relies on code in another initializer, you can combine them into a single initializer instead. This makes the dependencies more explicit, and can help surface new concepts within your application. Rails also supports numbering of initializer file names, but this can lead to file name churn. Explicitly loading initializers with &lt;code&gt;require&lt;/code&gt; is not recommended, since it will cause the initializer to get loaded twice.</source>
          <target state="translated">初期化子に別の初期化子のコードに依存するコードがある場合は、代わりにそれらを1つの初期化子に結合できます。これにより、依存関係がより明確になり、アプリケーション内で新しい概念を明らかにするのに役立ちます。Railsは初期化ファイル名の番号付けもサポートしていますが、これによりファイル名がチャーンする可能性があります。初期化子が2回ロードされるため、 &lt;code&gt;require&lt;/code&gt; を使用して初期化子を明示的にロードすることはお勧めしません。</target>
        </trans-unit>
        <trans-unit id="e33ccc0a3fd92b427926bc70fba0bf8892eec538" translate="yes" xml:space="preserve">
          <source>If an invalid method is supplied, &lt;a href=&quot;relation#method-i-delete_all&quot;&gt;&lt;code&gt;delete_all&lt;/code&gt;&lt;/a&gt; raises an ActiveRecordError:</source>
          <target state="translated">無効なメソッドが指定された場合、&lt;a href=&quot;relation#method-i-delete_all&quot;&gt; &lt;code&gt;delete_all&lt;/code&gt; &lt;/a&gt;はActiveRecordErrorを発生させます。</target>
        </trans-unit>
        <trans-unit id="085c150af9e66c0ed9d401adb658dd4d299e5931" translate="yes" xml:space="preserve">
          <source>If an invalid method is supplied, &lt;a href=&quot;relation#method-i-delete_all&quot;&gt;delete_all&lt;/a&gt; raises an ActiveRecordError:</source>
          <target state="translated">無効なメソッドが指定された場合、&lt;a href=&quot;relation#method-i-delete_all&quot;&gt;delete_all&lt;/a&gt;はActiveRecordErrorを発生させます。</target>
        </trans-unit>
        <trans-unit id="9b8f4893f2c480b69f89f2dca1e3b3e6720caa61" translate="yes" xml:space="preserve">
          <source>If an object responding to `render_in` is passed, `render_in` is called on the object, passing in the current view context.</source>
          <target state="translated">render_in` に応答するオブジェクトが渡された場合、現在のビューコンテキストを渡して `render_in` が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="bb911f98fdd5aa0c1cee040218de28b1fc63d3f4" translate="yes" xml:space="preserve">
          <source>If an optional block is given, &lt;code&gt;many?&lt;/code&gt; only takes into account those elements that return true:</source>
          <target state="translated">オプションのブロックが指定されている場合、 &lt;code&gt;many?&lt;/code&gt; trueを返す要素のみを考慮します。</target>
        </trans-unit>
        <trans-unit id="f7837bd72289c37ae25bc250312ae520139551e2" translate="yes" xml:space="preserve">
          <source>If an order is present in the receiver the behaviour depends on the flag &lt;code&gt;config.active_record.error_on_ignored_order&lt;/code&gt;. If true, &lt;code&gt;ArgumentError&lt;/code&gt; is raised, otherwise the order is ignored and a warning issued, which is the default. This can be overridden with the option &lt;code&gt;:error_on_ignore&lt;/code&gt;, explained below.</source>
          <target state="translated">オーダーがレシーバーに存在する場合、動作はフラグ &lt;code&gt;config.active_record.error_on_ignored_order&lt;/code&gt; に依存します。trueの場合、 &lt;code&gt;ArgumentError&lt;/code&gt; が発生します。それ以外の場合、順序は無視され、警告が発行されます。これがデフォルトです。これは、以下で説明するオプション &lt;code&gt;:error_on_ignore&lt;/code&gt; でオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="241fef9bf4229bc18072ac9ab239ac656184a0d3" translate="yes" xml:space="preserve">
          <source>If any attribute of game is changed, the &lt;code&gt;updated_at&lt;/code&gt; value will be set to the current time, thereby expiring the cache. However, because &lt;code&gt;updated_at&lt;/code&gt; will not be changed for the product object, that cache will not be expired and your app will serve stale data. To fix this, we tie the models together with the &lt;code&gt;touch&lt;/code&gt; method:</source>
          <target state="translated">ゲームの属性が変更されると、 &lt;code&gt;updated_at&lt;/code&gt; の値は現在の時刻に設定され、キャッシュが期限切れになります。ただし、 &lt;code&gt;updated_at&lt;/code&gt; は製品オブジェクトに対して変更されないため、そのキャッシュは期限切れにならず、アプリは古いデータを提供します。これを修正するには、モデルを &lt;code&gt;touch&lt;/code&gt; メソッドで結合します。</target>
        </trans-unit>
        <trans-unit id="1b4981ac516bd75b9215f74cec5cdce8035e6f95" translate="yes" xml:space="preserve">
          <source>If any of the &lt;code&gt;before_add&lt;/code&gt; callbacks throw an exception, the object will not be added to the collection.</source>
          <target state="translated">&lt;code&gt;before_add&lt;/code&gt; コールバックのいずれかが例外をスローした場合、オブジェクトはコレクションに追加されません。</target>
        </trans-unit>
        <trans-unit id="e3ba968ef6aff9e459beaaf63ce0a8232f41b693" translate="yes" xml:space="preserve">
          <source>If any of the files in the manifest have changed between requests, the server responds with a new compiled file.</source>
          <target state="translated">マニフェスト内のファイルがリクエスト間で変更された場合、サーバーは新しいコンパイル済みファイルで応答します。</target>
        </trans-unit>
        <trans-unit id="9fed09d52a4dc1637c25fcba9c675b9c6d62db94" translate="yes" xml:space="preserve">
          <source>If any of the migrations throw an &lt;code&gt;ActiveRecord::IrreversibleMigration&lt;/code&gt; exception, that step will fail and you'll have some manual work to do.</source>
          <target state="translated">いずれかの移行で &lt;code&gt;ActiveRecord::IrreversibleMigration&lt;/code&gt; 例外がスローされると、そのステップは失敗し、手動で行う必要があります。</target>
        </trans-unit>
        <trans-unit id="2e39c5c440e524b4103465cb331efe839ab7fcf7" translate="yes" xml:space="preserve">
          <source>If any of these saves fails due to validation errors, then the assignment statement returns &lt;code&gt;false&lt;/code&gt; and the assignment itself is cancelled.</source>
          <target state="translated">検証エラーが原因でこれらの保存のいずれかが失敗した場合、割り当てステートメントは &lt;code&gt;false&lt;/code&gt; を返し、割り当て自体がキャンセルされます。</target>
        </trans-unit>
        <trans-unit id="e2a5521b79aeb5c7873fa96d6e1ea675c3430361" translate="yes" xml:space="preserve">
          <source>If anything in there changes, there is a middleware that detects it and reloads the code.</source>
          <target state="translated">そこに何か変化があれば、それを検知してコードをリロードするミドルウェアがあります。</target>
        </trans-unit>
        <trans-unit id="e11cbb3536a5d8b1b7f8796f48e7e75d57fee85a" translate="yes" xml:space="preserve">
          <source>If anything is passed in the &lt;code&gt;html_options&lt;/code&gt; hash it will be applied to every select tag in the set.</source>
          <target state="translated">&lt;code&gt;html_options&lt;/code&gt; ハッシュに何かが渡されると、セット内のすべての選択タグに適用されます。</target>
        </trans-unit>
        <trans-unit id="69199814ed8dd1b62c7f031f99744428072f0e2e" translate="yes" xml:space="preserve">
          <source>If anything is passed in the html_options hash it will be applied to every select tag in the set.</source>
          <target state="translated">html_options ハッシュに何かが渡された場合、それはセット内のすべての select タグに適用されます。</target>
        </trans-unit>
        <trans-unit id="f36764bc9d19db4cffeaa7f2732ba0fca3d2eaf8" translate="yes" xml:space="preserve">
          <source>If attributes names are passed, they are updated along with update_at/on attributes.</source>
          <target state="translated">属性名が渡された場合は、update_at/on属性と一緒に更新されます。</target>
        </trans-unit>
        <trans-unit id="003be065dea12eeb5a12387810f467d39f938bab" translate="yes" xml:space="preserve">
          <source>If block is given, gem entries in block are wrapped into the source group.</source>
          <target state="translated">blockが与えられた場合、block内のgemエントリはソースグループにラップされます。</target>
        </trans-unit>
        <trans-unit id="06c6f60a3b306276370bb70246deb18a729e3bd0" translate="yes" xml:space="preserve">
          <source>If both the &lt;a href=&quot;timewithzone&quot;&gt;&lt;code&gt;TimeWithZone&lt;/code&gt;&lt;/a&gt; object and the other value act like &lt;a href=&quot;../time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt;, a &lt;code&gt;Float&lt;/code&gt; will be returned.</source>
          <target state="translated">&lt;a href=&quot;timewithzone&quot;&gt; &lt;code&gt;TimeWithZone&lt;/code&gt; &lt;/a&gt;オブジェクトと他の値の両方が&lt;a href=&quot;../time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; の&lt;/a&gt;ように機能する場合、 &lt;code&gt;Float&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="f401f66f477b132ab53cc0ab340d1861a2b597ac" translate="yes" xml:space="preserve">
          <source>If both the &lt;a href=&quot;timewithzone&quot;&gt;TimeWithZone&lt;/a&gt; object and the other value act like &lt;a href=&quot;../time&quot;&gt;Time&lt;/a&gt;, a Float will be returned.</source>
          <target state="translated">&lt;a href=&quot;timewithzone&quot;&gt;TimeWithZone&lt;/a&gt;オブジェクトと他の値の両方が&lt;a href=&quot;../time&quot;&gt;Timeの&lt;/a&gt;ように機能する場合、Floatが返されます。</target>
        </trans-unit>
        <trans-unit id="04ebe60918124d8bfc47534a90ec835849e53b24" translate="yes" xml:space="preserve">
          <source>If called without a block, a new logger will be returned with applied tags:</source>
          <target state="translated">ブロックなしで呼び出された場合、適用されたタグで新しいロガーが返されます。</target>
        </trans-unit>
        <trans-unit id="18748de841b9d52af2366e462d6d80cdbde6f5eb" translate="yes" xml:space="preserve">
          <source>If confirmation validation is not needed, simply leave out the value for &lt;code&gt;XXX_confirmation&lt;/code&gt; (i.e. don't provide a form field for it). When this attribute has a &lt;code&gt;nil&lt;/code&gt; value, the validation will not be triggered.</source>
          <target state="translated">確認の検証が必要ない場合は、単に &lt;code&gt;XXX_confirmation&lt;/code&gt; の値を省略します（つまり、フォームフィールドを指定しないでください）。この属性の値が &lt;code&gt;nil&lt;/code&gt; の場合、検証はトリガーされません。</target>
        </trans-unit>
        <trans-unit id="a368e0ad1dc44a21e815115c67397cc658f8664b" translate="yes" xml:space="preserve">
          <source>If constant &lt;code&gt;Foo&lt;/code&gt; is being autoloaded, and you'd like to know where is that autoload coming from, just throw</source>
          <target state="translated">定数 &lt;code&gt;Foo&lt;/code&gt; がオートロードされていて、そのオートロードがどこから来るのか知りたい場合は、</target>
        </trans-unit>
        <trans-unit id="0fd5592c09640a222490235f79cabbd0fea08416" translate="yes" xml:space="preserve">
          <source>If date is the 29th of February of a leap year, you obtain the 28th:</source>
          <target state="translated">日付がうるう年の2月29日の場合、28日を取得します。</target>
        </trans-unit>
        <trans-unit id="b01dd59b68f16ac9911596aec1589c6340ec36be" translate="yes" xml:space="preserve">
          <source>If either of these saves fail (due to one of the objects being invalid), an &lt;a href=&quot;../recordnotsaved&quot;&gt;&lt;code&gt;ActiveRecord::RecordNotSaved&lt;/code&gt;&lt;/a&gt; exception is raised and the assignment is cancelled.</source>
          <target state="translated">これらの保存のいずれかが失敗した場合（オブジェクトの1つが無効であるため）、&lt;a href=&quot;../recordnotsaved&quot;&gt; &lt;code&gt;ActiveRecord::RecordNotSaved&lt;/code&gt; &lt;/a&gt;例外が発生し、割り当てがキャンセルされます。</target>
        </trans-unit>
        <trans-unit id="396bd586ed2374c7f41ef4d2d945812417763ef2" translate="yes" xml:space="preserve">
          <source>If either of these saves fail (due to one of the objects being invalid), an &lt;a href=&quot;../recordnotsaved&quot;&gt;ActiveRecord::RecordNotSaved&lt;/a&gt; exception is raised and the assignment is cancelled.</source>
          <target state="translated">これらの保存のいずれかが失敗した場合（オブジェクトの1つが無効であるため）、&lt;a href=&quot;../recordnotsaved&quot;&gt;ActiveRecord :: RecordNotSaved&lt;/a&gt;例外が発生し、割り当てはキャンセルされます。</target>
        </trans-unit>
        <trans-unit id="4562532a4b6596229c7e722c102bb37f2f7e70b7" translate="yes" xml:space="preserve">
          <source>If either of these saves fails due to validation errors, then the assignment statement returns &lt;code&gt;false&lt;/code&gt; and the assignment itself is cancelled.</source>
          <target state="translated">検証エラーが原因でこれらの保存のいずれかが失敗した場合、割り当てステートメントは &lt;code&gt;false&lt;/code&gt; を返し、割り当て自体がキャンセルされます。</target>
        </trans-unit>
        <trans-unit id="ffefe0b001caed9f4808387bcf0cfeab852fad78" translate="yes" xml:space="preserve">
          <source>If either the &lt;code&gt;:attributes&lt;/code&gt; or &lt;code&gt;:tags&lt;/code&gt; options are passed, only the mentioned attributes and tags are allowed and nothing else.</source>
          <target state="translated">&lt;code&gt;:attributes&lt;/code&gt; または &lt;code&gt;:tags&lt;/code&gt; オプションのいずれかが渡された場合、上記の属性とタグのみが許可され、それ以外は許可されません。</target>
        </trans-unit>
        <trans-unit id="e45592762d5e6328b0806175cdcf06d5010b9fad" translate="yes" xml:space="preserve">
          <source>If enabled, Active Record will create up to &lt;code&gt;1000&lt;/code&gt; prepared statements per database connection by default. To modify this behavior you can set &lt;code&gt;statement_limit&lt;/code&gt; to a different value:</source>
          <target state="translated">有効にすると、Active Recordはデフォルトでデータベース接続ごとに最大 &lt;code&gt;1000&lt;/code&gt; の準備済みステートメントを作成します。この動作を変更するには、 &lt;code&gt;statement_limit&lt;/code&gt; を別の値に設定します。</target>
        </trans-unit>
        <trans-unit id="eb682e5cfba83f23ccf58ddfd601468967a8969a" translate="yes" xml:space="preserve">
          <source>If for whatever reason you spot something to fix but cannot patch it yourself, please &lt;a href=&quot;https://github.com/rails/rails/issues&quot;&gt;open an issue&lt;/a&gt;.</source>
          <target state="translated">なんらかの理由で何か修正すべき点を見つけたが、自分で修正できない場合は&lt;a href=&quot;https://github.com/rails/rails/issues&quot;&gt;、問題&lt;/a&gt;を開いてください。</target>
        </trans-unit>
        <trans-unit id="68ad5c7407493c127005661a8d02f1dcebb13fee" translate="yes" xml:space="preserve">
          <source>If hours are zeroed, then minutes and seconds are too (unless they have given values):</source>
          <target state="translated">時間をゼロにすると、分と秒もゼロになります(値が与えられていない限り)。</target>
        </trans-unit>
        <trans-unit id="4e6a783b28400ee5436e4bc8f7fe34e5eaed4c28" translate="yes" xml:space="preserve">
          <source>If in the &amp;ldquo;about&amp;rdquo; action, it will render&amp;hellip;</source>
          <target state="translated">「about」アクションの場合、レンダリングされます&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="1d02f163b9617a48902526d824edebf161935485" translate="yes" xml:space="preserve">
          <source>If in your I18n locale you have:</source>
          <target state="translated">あなたのI18nロケールでは、あなたが持っている場合。</target>
        </trans-unit>
        <trans-unit id="55502ee899b75c5ffc2b7d5e4af0d2dcfbe55f42" translate="yes" xml:space="preserve">
          <source>If instead you want to route &lt;code&gt;/admin/articles&lt;/code&gt; to &lt;code&gt;ArticlesController&lt;/code&gt; (without the &lt;code&gt;Admin::&lt;/code&gt; module prefix), you can specify the path with a &lt;code&gt;scope&lt;/code&gt; block:</source>
          <target state="translated">代わりに、 &lt;code&gt;/admin/articles&lt;/code&gt; を &lt;code&gt;ArticlesController&lt;/code&gt; （ &lt;code&gt;Admin::&lt;/code&gt; モジュールプレフィックスなし）にルーティングする場合は、 &lt;code&gt;scope&lt;/code&gt; ブロックを使用してパスを指定できます。</target>
        </trans-unit>
        <trans-unit id="d8e5ee24bde3a5cc10fdb22180c6fc226cb842ae" translate="yes" xml:space="preserve">
          <source>If instead you want to route &lt;code&gt;/articles&lt;/code&gt; (without the prefix &lt;code&gt;/admin&lt;/code&gt;) to &lt;code&gt;Admin::ArticlesController&lt;/code&gt;, you can specify the module with a &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Routing/Mapper/Scoping.html#method-i-scope&quot;&gt;&lt;code&gt;scope&lt;/code&gt;&lt;/a&gt; block:</source>
          <target state="translated">代わりに、 &lt;code&gt;/articles&lt;/code&gt; （プレフィックス &lt;code&gt;/admin&lt;/code&gt; なし）を &lt;code&gt;Admin::ArticlesController&lt;/code&gt; にルーティングする場合は、&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Routing/Mapper/Scoping.html#method-i-scope&quot;&gt; &lt;code&gt;scope&lt;/code&gt; &lt;/a&gt;ブロックを使用してモジュールを指定できます。</target>
        </trans-unit>
        <trans-unit id="242ec41add193e2187a1f2ae99f318c612d11cb4" translate="yes" xml:space="preserve">
          <source>If it is at the end of the URL it will hardly be noticed and redirects the user to the attacker.com host. A simple countermeasure would be to &lt;em&gt;include only the expected parameters in a legacy action&lt;/em&gt; (again a permitted list approach, as opposed to removing unexpected parameters). &lt;em&gt;And if you redirect to a URL, check it with a permitted list or a regular expression&lt;/em&gt;.</source>
          <target state="translated">URLの最後にある場合、ほとんど気付かれず、ユーザーをattacker.comホストにリダイレクトします。単純な対策は&lt;em&gt;、予想されるパラメーターのみをレガシーアクション&lt;/em&gt;に&lt;em&gt;含める&lt;/em&gt;ことです（これも、予期しないパラメーターを削除するのではなく、許可リストのアプローチです）。&lt;em&gt;また、URLにリダイレクトする場合は、許可リストまたは正規表現で確認してください&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="b11434e78ebeae2290f08b9a6b5ad9e910293f43" translate="yes" xml:space="preserve">
          <source>If it is set to &lt;code&gt;:delete_all&lt;/code&gt;, all the &lt;code&gt;records&lt;/code&gt; are deleted &lt;strong&gt;without&lt;/strong&gt; calling their &lt;code&gt;destroy&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;:delete_all&lt;/code&gt; に設定されている場合、すべての &lt;code&gt;records&lt;/code&gt; は &lt;code&gt;destroy&lt;/code&gt; メソッド&lt;strong&gt;を&lt;/strong&gt;呼び出さ&lt;strong&gt;ずに&lt;/strong&gt;削除されます。</target>
        </trans-unit>
        <trans-unit id="10305fad089b413f246b831f675cd6e0eea3de82" translate="yes" xml:space="preserve">
          <source>If it is set to &lt;code&gt;:delete_all&lt;/code&gt;, all the objects are deleted &lt;strong&gt;without&lt;/strong&gt; calling their &lt;code&gt;destroy&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;:delete_all&lt;/code&gt; に設定されている場合、すべてのオブジェクトは &lt;code&gt;destroy&lt;/code&gt; メソッド&lt;strong&gt;を&lt;/strong&gt;呼び出さ&lt;strong&gt;ずに&lt;/strong&gt;削除されます。</target>
        </trans-unit>
        <trans-unit id="1447858cac7c09d3a95afc73ab524e488ab189c7" translate="yes" xml:space="preserve">
          <source>If it is set to &lt;code&gt;:destroy&lt;/code&gt; all the &lt;code&gt;records&lt;/code&gt; are removed by calling their &lt;code&gt;destroy&lt;/code&gt; method. See &lt;code&gt;destroy&lt;/code&gt; for more information.</source>
          <target state="translated">&lt;code&gt;:destroy&lt;/code&gt; に設定されている場合、すべての &lt;code&gt;records&lt;/code&gt; は &lt;code&gt;destroy&lt;/code&gt; メソッドを呼び出すことによって削除されます。詳細は &lt;code&gt;destroy&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="d33ef00ea4edba061811479cbe4cc5b7f530c1c6" translate="yes" xml:space="preserve">
          <source>If it says something like &quot;1.22.0&quot;, Yarn has been installed correctly.</source>
          <target state="translated">1.22.0」などと表示されていれば、Yarnが正しくインストールされていることになります。</target>
        </trans-unit>
        <trans-unit id="086becbc15cad92bda5e598be2a12d82e9d24bb8" translate="yes" xml:space="preserve">
          <source>If it says something like &quot;Rails 6.0.0&quot;, you are ready to continue.</source>
          <target state="translated">Rails 6.0.0」のようなことが書いてあれば準備完了です。</target>
        </trans-unit>
        <trans-unit id="72e1d1d6e7015dae83d375dfd2e890f55125f809" translate="yes" xml:space="preserve">
          <source>If it's impractical to wrap the application code in a block (for example, the Rack API makes this problematic), you can also use the &lt;code&gt;run!&lt;/code&gt; / &lt;code&gt;complete!&lt;/code&gt; pair:</source>
          <target state="translated">アプリケーションコードをブロックでラップすることが実用的でない場合（たとえば、Rack APIがこれを問題にしている場合）、 &lt;code&gt;run!&lt;/code&gt; 使用することもできます。/ &lt;code&gt;complete!&lt;/code&gt; ペア：</target>
        </trans-unit>
        <trans-unit id="137da6094c7ad736f17927571c9a89ffde2154d9" translate="yes" xml:space="preserve">
          <source>If most of your actions use the same layout, it makes perfect sense to define a controller-wide layout as described above. Sometimes you'll have exceptions where one action wants to use a different layout than the rest of the controller. You can do this by passing a &lt;code&gt;:layout&lt;/code&gt; option to the &lt;code&gt;render&lt;/code&gt; call. For example:</source>
          <target state="translated">ほとんどのアクションが同じレイアウトを使用する場合、上記のようにコントローラー全体のレイアウトを定義することは完全に理にかなっています。場合によっては、1つのアクションが他のコントローラーとは異なるレイアウトを使用したいという例外があります。これを行うには、 &lt;code&gt;render&lt;/code&gt; コールに &lt;code&gt;:layout&lt;/code&gt; オプションを渡します。例えば：</target>
        </trans-unit>
        <trans-unit id="41d7c36581cd37252cecbab32775ecbca8330201" translate="yes" xml:space="preserve">
          <source>If neither are specified, it will assume memcached is running on localhost on the default port (&lt;code&gt;127.0.0.1:11211&lt;/code&gt;), but this is not an ideal setup for larger sites.</source>
          <target state="translated">どちらも指定されていない場合、memcachedがローカルホストのデフォルトポート（ &lt;code&gt;127.0.0.1:11211&lt;/code&gt; ）で実行されていると見なされますが、これは大規模なサイトには理想的な設定ではありません。</target>
        </trans-unit>
        <trans-unit id="fc1cf445e38c3c16aa6499318cabdab62f7b2afe" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;category_ids&lt;/code&gt; are selected then we can safely assume this field will not be updated.</source>
          <target state="translated">&lt;code&gt;category_ids&lt;/code&gt; が選択されていない場合、このフィールドは更新されないと想定できます。</target>
        </trans-unit>
        <trans-unit id="743edba63ef833a85c95922413ba1b7b56011277" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;options&lt;/code&gt; hash is passed or if &lt;code&gt;:update&lt;/code&gt; is specified, the default is to render a partial and use the second parameter as the locals hash.</source>
          <target state="translated">何の場合は &lt;code&gt;options&lt;/code&gt; ハッシュが渡されない場合、または &lt;code&gt;:update&lt;/code&gt; 指定され、デフォルトでは部分的にレンダリングし、地元の人々のハッシュとして二番目のパラメータを使用することです。</target>
        </trans-unit>
        <trans-unit id="17c3d99653adb55eaf909d155710ac6cb2ce3c59" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;options&lt;/code&gt; hash is passed or if &lt;code&gt;:update&lt;/code&gt; is specified, then:</source>
          <target state="translated">何の場合は &lt;code&gt;options&lt;/code&gt; ハッシュが渡されない場合や &lt;code&gt;:update&lt;/code&gt; 指定され、次のようになります。</target>
        </trans-unit>
        <trans-unit id="e5ba870738414feb74af936177ae546de03ec380" translate="yes" xml:space="preserve">
          <source>If no addresses are provided, but ENV is defined, it will be used instead. Otherwise, &lt;a href=&quot;memcachestore&quot;&gt;&lt;code&gt;MemCacheStore&lt;/code&gt;&lt;/a&gt; will connect to localhost:11211 (the default memcached port).</source>
          <target state="translated">アドレスが指定されていないが、ENVが定義されている場合は、代わりにENVが使用されます。それ以外の場合、&lt;a href=&quot;memcachestore&quot;&gt; &lt;code&gt;MemCacheStore&lt;/code&gt; &lt;/a&gt;はlocalhost：11211（デフォルトのmemcachedポート）に接続します。</target>
        </trans-unit>
        <trans-unit id="8f132d527ab37b50338d93f03276978253d5be87" translate="yes" xml:space="preserve">
          <source>If no addresses are specified, then &lt;a href=&quot;memcachestore&quot;&gt;MemCacheStore&lt;/a&gt; will connect to localhost port 11211 (the default memcached port).</source>
          <target state="translated">アドレスが指定されていない場合、&lt;a href=&quot;memcachestore&quot;&gt;MemCacheStore&lt;/a&gt;はlocalhostポート11211（デフォルトのmemcachedポート）に接続します。</target>
        </trans-unit>
        <trans-unit id="298391036b545bcd8a134ed75bb61c2a553dada0" translate="yes" xml:space="preserve">
          <source>If no argument is passed, &lt;a href=&quot;querymethods#method-i-where&quot;&gt;&lt;code&gt;where&lt;/code&gt;&lt;/a&gt; returns a new instance of &lt;a href=&quot;querymethods/wherechain&quot;&gt;&lt;code&gt;WhereChain&lt;/code&gt;&lt;/a&gt;, that can be chained with not to return a new relation that negates the where clause.</source>
          <target state="translated">&lt;a href=&quot;querymethods#method-i-where&quot;&gt; &lt;code&gt;where&lt;/code&gt; &lt;/a&gt;が&lt;a href=&quot;querymethods/wherechain&quot;&gt; &lt;code&gt;WhereChain&lt;/code&gt; の&lt;/a&gt;新しいインスタンスを返す引数が渡されない場合、where句を否定する新しい関係を返さないようにチェーンすることができます。</target>
        </trans-unit>
        <trans-unit id="95f1a45e00b166ba721bbf9a352ee29cd0c7fecb" translate="yes" xml:space="preserve">
          <source>If no argument is passed, &lt;a href=&quot;querymethods#method-i-where&quot;&gt;where&lt;/a&gt; returns a new instance of &lt;a href=&quot;querymethods/wherechain&quot;&gt;WhereChain&lt;/a&gt;, that can be chained with not to return a new relation that negates the where clause.</source>
          <target state="translated">引数が渡されない場合、&lt;a href=&quot;querymethods#method-i-where&quot;&gt;where&lt;/a&gt;は&lt;a href=&quot;querymethods/wherechain&quot;&gt;WhereChainの&lt;/a&gt;新しいインスタンスを返しますが、where句を否定する新しいリレーションを返さないように連鎖させることができます。</target>
        </trans-unit>
        <trans-unit id="19d11f31eb2e8dc5452968d42aeca6d240d27f30" translate="yes" xml:space="preserve">
          <source>If no arguments are passed to this method, then a new &lt;a href=&quot;cache/memorystore&quot;&gt;&lt;code&gt;ActiveSupport::Cache::MemoryStore&lt;/code&gt;&lt;/a&gt; object will be returned.</source>
          <target state="translated">このメソッドに引数が渡されない場合、新しい&lt;a href=&quot;cache/memorystore&quot;&gt; &lt;code&gt;ActiveSupport::Cache::MemoryStore&lt;/code&gt; &lt;/a&gt;オブジェクトが返されます。</target>
        </trans-unit>
        <trans-unit id="342a5d95b2c10232f1c095232bfce2cfd05a279a" translate="yes" xml:space="preserve">
          <source>If no arguments are passed to this method, then a new &lt;a href=&quot;cache/memorystore&quot;&gt;ActiveSupport::Cache::MemoryStore&lt;/a&gt; object will be returned.</source>
          <target state="translated">このメソッドに引数が渡されない場合、新しい&lt;a href=&quot;cache/memorystore&quot;&gt;ActiveSupport :: Cache :: MemoryStore&lt;/a&gt;オブジェクトが返されます。</target>
        </trans-unit>
        <trans-unit id="2156867991e6c9b182577e82a87e084974db064d" translate="yes" xml:space="preserve">
          <source>If no handler matches the exception, check for a handler matching the (optional) exception.cause. If no handler matches the exception or its cause, this returns &lt;code&gt;nil&lt;/code&gt;, so you can deal with unhandled exceptions. Be sure to re-raise unhandled exceptions if this is what you expect.</source>
          <target state="translated">例外に一致するハンドラーがない場合は、（オプションの）exception.causeに一致するハンドラーを確認します。例外またはその原因に一致するハンドラがない場合、これは &lt;code&gt;nil&lt;/code&gt; を返すため、未処理の例外を処理できます。これが予想どおりの場合は、ハンドルされていない例外を再度発生させてください。</target>
        </trans-unit>
        <trans-unit id="daa8057284e5b5fd6fbd7376bd59baf52f42a23d" translate="yes" xml:space="preserve">
          <source>If no locale is passed, &lt;code&gt;I18n.locale&lt;/code&gt; is used:</source>
          <target state="translated">ロケールが渡されない場合、 &lt;code&gt;I18n.locale&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="658896cb7da95061da04b3cc4b42a44fe5207b6e" translate="yes" xml:space="preserve">
          <source>If no matching file is found, this endpoint responds 404 Not Found.</source>
          <target state="translated">一致するファイルが見つからない場合、このエンドポイントは 404 Not Found を応答します。</target>
        </trans-unit>
        <trans-unit id="4e98c7de0d11d5aa929b7a57e00ac9635e38c013" translate="yes" xml:space="preserve">
          <source>If no options hash is passed or :update specified, the default is to render a partial and use the second parameter as the locals hash.</source>
          <target state="translated">オプションハッシュが渡されなかったり :update が指定されていない場合は、デフォルトではパーシャルをレンダリングし、2 番目のパラメータをローカルハッシュとして使用します。</target>
        </trans-unit>
        <trans-unit id="5a1b753afc2b4c1896d4386c59e052f66106c61b" translate="yes" xml:space="preserve">
          <source>If no ordering clause is specified in the query, the &lt;code&gt;reverse_order&lt;/code&gt; orders by the primary key in reverse order.</source>
          <target state="translated">クエリで順序付け句が指定されていない場合、 &lt;code&gt;reverse_order&lt;/code&gt; は主キーによって逆の順序で並べ替えます。</target>
        </trans-unit>
        <trans-unit id="14d2067446324fa04bb7e8358cba1361bcd9419c" translate="yes" xml:space="preserve">
          <source>If no record is found, returns &lt;code&gt;0&lt;/code&gt; as zero rows were affected.</source>
          <target state="translated">レコードが見つからない場合は、影響を受けた行がゼロだったため、 &lt;code&gt;0&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="44733aa8e0e37c4eb9ce66f797ca56e063ca518a" translate="yes" xml:space="preserve">
          <source>If no record is found, returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">レコードが見つからない場合は、 &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="07143c8930e116c3a687a94aa2719b68f2cbab19" translate="yes" xml:space="preserve">
          <source>If no record is found, returns empty array.</source>
          <target state="translated">レコードが見つからなかった場合は、空の配列を返します。</target>
        </trans-unit>
        <trans-unit id="4a33078bb02707d0121aad7b49c574e2ba2e5c81" translate="yes" xml:space="preserve">
          <source>If no renderer is found, &lt;code&gt;super&lt;/code&gt; returns control to &lt;code&gt;ActionView::Rendering.render_to_body&lt;/code&gt;, if present.</source>
          <target state="translated">レンダラーが見つからない場合、 &lt;code&gt;super&lt;/code&gt; は制御を &lt;code&gt;ActionView::Rendering.render_to_body&lt;/code&gt; 返します（存在する場合）。</target>
        </trans-unit>
        <trans-unit id="a5d59a8a37522ac83cb23862b6bdc105f06c4554" translate="yes" xml:space="preserve">
          <source>If non-duplicate information is provided you will get all unique values, environment variable still takes precedence in cases of any conflicts.</source>
          <target state="translated">重複しない情報が提供された場合は、すべてのユニークな値を取得しますが、競合があった場合は環境変数が優先されます。</target>
        </trans-unit>
        <trans-unit id="94bc7694e928bdadfff614e2581177e82063f977" translate="yes" xml:space="preserve">
          <source>If none is found you get an error message.</source>
          <target state="translated">見つからない場合は、エラーメッセージが表示されます。</target>
        </trans-unit>
        <trans-unit id="3697bd379b9ba6936db1b54f382943d3979f37e6" translate="yes" xml:space="preserve">
          <source>If none of the parent namespaces of the class or module has the missing constant then Rails assumes the reference is relative. Otherwise qualified.</source>
          <target state="translated">クラスまたはモジュールの親名前空間のどれにも欠けている定数がない場合、Railsは参照が相対的なものであると仮定します。それ以外の場合は修飾されます。</target>
        </trans-unit>
        <trans-unit id="f3f8c2d8905d1427e1515f404fff058fcd612d16" translate="yes" xml:space="preserve">
          <source>If not found and the cref is a module, the constant is looked up in &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">見つからず、crefがモジュールの場合、定数は &lt;code&gt;Object&lt;/code&gt; で検索されます。</target>
        </trans-unit>
        <trans-unit id="ca0b1786bffd10e97baeaf01664775c3e6906b93" translate="yes" xml:space="preserve">
          <source>If not found, &lt;code&gt;const_missing&lt;/code&gt; is invoked on the cref. The default implementation of &lt;code&gt;const_missing&lt;/code&gt; raises &lt;code&gt;NameError&lt;/code&gt;, but it can be overridden.</source>
          <target state="translated">見つからない場合、 &lt;code&gt;const_missing&lt;/code&gt; が呼び出されます。 &lt;code&gt;const_missing&lt;/code&gt; のデフォルトの実装ではNameErrorが &lt;code&gt;NameError&lt;/code&gt; しますが、オーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="34dac85f072bd78bb07fdfc3f3b72199740d8255" translate="yes" xml:space="preserve">
          <source>If not found, then the algorithm walks up the ancestor chain of the cref.</source>
          <target state="translated">見つからなかった場合、アルゴリズムは cref の祖先の連鎖を辿っていきます。</target>
        </trans-unit>
        <trans-unit id="b61240a1aa00469a115a8c4a9347bda690b01ee0" translate="yes" xml:space="preserve">
          <source>If one runs &lt;code&gt;Person.clear_validators!&lt;/code&gt; and then checks to see what validators this class has, you would obtain:</source>
          <target state="translated">&lt;code&gt;Person.clear_validators!&lt;/code&gt; 実行した場合！次に、このクラスのバリデーターを確認して、以下を取得します。</target>
        </trans-unit>
        <trans-unit id="b6dba063db94af4afe5756f73a9a85b108e06fc2" translate="yes" xml:space="preserve">
          <source>If only a role is passed, Active Record will look up the connection based on the requested role. If a non-established role is requested an `ActiveRecord::ConnectionNotEstablished` error will be raised:</source>
          <target state="translated">ロールのみが渡された場合、ActiveRecordは要求されたロールに基づいて接続を検索します。確立されていないロールが要求された場合は `ActiveRecord::ConnectionNotEstablished` エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="04ea8590225723ee26121244d6750a6c1729cde0" translate="yes" xml:space="preserve">
          <source>If options &lt;code&gt;:env&lt;/code&gt; is specified, the line is appended to the corresponding file in &lt;code&gt;config/environments&lt;/code&gt;.</source>
          <target state="translated">options &lt;code&gt;:env&lt;/code&gt; が指定されている場合、その行は &lt;code&gt;config/environments&lt;/code&gt; 内の対応するファイルに追加されます。</target>
        </trans-unit>
        <trans-unit id="f2d83aff51387314b827f32b254d31deaec722a7" translate="yes" xml:space="preserve">
          <source>If passed an optional &lt;code&gt;locale&lt;/code&gt; parameter, the word will be pluralized using rules defined for that language. By default, this parameter is set to &lt;code&gt;:en&lt;/code&gt;.</source>
          <target state="translated">オプションの &lt;code&gt;locale&lt;/code&gt; パラメータを渡すと、その言語に定義されているルールを使用して単語が複数形になります。デフォルトでは、このパラメーターは &lt;code&gt;:en&lt;/code&gt; に設定されています。</target>
        </trans-unit>
        <trans-unit id="b0226e618a661f6763cffd1910e68a4c1d0d7826" translate="yes" xml:space="preserve">
          <source>If passed an optional &lt;code&gt;locale&lt;/code&gt; parameter, the word will be singularized using rules defined for that language. By default, this parameter is set to &lt;code&gt;:en&lt;/code&gt;.</source>
          <target state="translated">オプションの &lt;code&gt;locale&lt;/code&gt; パラメータを渡すと、その言語に定義されたルールを使用して単語が単数化されます。デフォルトでは、このパラメーターは &lt;code&gt;:en&lt;/code&gt; に設定されています。</target>
        </trans-unit>
        <trans-unit id="757da6e6b30a320a7aba00e5f6a51584a4ab7cf0" translate="yes" xml:space="preserve">
          <source>If precompiled assets are available, they will be served &amp;mdash; even if they no longer match the original (uncompiled) assets, &lt;em&gt;even on the development server.&lt;/em&gt;</source>
          <target state="translated">プリコンパイルされたアセットが利用可能な場合は&lt;em&gt;、開発サーバー上&lt;/em&gt;で&lt;em&gt;あっても&lt;/em&gt;、元の（コンパイルされていない）アセットと一致しなくなった場合&lt;em&gt;でも提供されます。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fb1d33f9c8b1afca2322a03687d0f1d7baa3e4fe" translate="yes" xml:space="preserve">
          <source>If saving any of the objects being added to a collection (via &lt;code&gt;push&lt;/code&gt; or similar) fails, then &lt;code&gt;push&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">コレクションに追加されているオブジェクトの保存（ &lt;code&gt;push&lt;/code&gt; など）が失敗した場合、 &lt;code&gt;push&lt;/code&gt; は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="5309303b99234af133a271be5e4224aecdf173e2" translate="yes" xml:space="preserve">
          <source>If saving fails while replacing the collection (via &lt;code&gt;association=&lt;/code&gt;), an &lt;a href=&quot;../recordnotsaved&quot;&gt;&lt;code&gt;ActiveRecord::RecordNotSaved&lt;/code&gt;&lt;/a&gt; exception is raised and the assignment is cancelled.</source>
          <target state="translated">（ &lt;code&gt;association=&lt;/code&gt; を介して）コレクションの置き換え中に保存が失敗した場合、&lt;a href=&quot;../recordnotsaved&quot;&gt; &lt;code&gt;ActiveRecord::RecordNotSaved&lt;/code&gt; &lt;/a&gt;例外が発生し、割り当てがキャンセルされます。</target>
        </trans-unit>
        <trans-unit id="d6fb5a299f3b8869f0f8d292366c0a44a220f0ca" translate="yes" xml:space="preserve">
          <source>If saving fails while replacing the collection (via &lt;code&gt;association=&lt;/code&gt;), an &lt;a href=&quot;../recordnotsaved&quot;&gt;ActiveRecord::RecordNotSaved&lt;/a&gt; exception is raised and the assignment is cancelled.</source>
          <target state="translated">コレクションの置き換え中に（ &lt;code&gt;association=&lt;/code&gt; を介して）保存が失敗した場合、&lt;a href=&quot;../recordnotsaved&quot;&gt;ActiveRecord :: RecordNotSaved&lt;/a&gt;例外が発生し、割り当てはキャンセルされます。</target>
        </trans-unit>
        <trans-unit id="50ae44f74530e3410791db3ee098feb002de8039" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;:destroy&lt;/code&gt;, the associated object is destroyed when this object is. If set to &lt;code&gt;:delete&lt;/code&gt;, the associated object is deleted &lt;strong&gt;without&lt;/strong&gt; calling its destroy method. If set to &lt;code&gt;:destroy_async&lt;/code&gt;, the associated object is scheduled to be destroyed in a background job. This option should not be specified when &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;&lt;code&gt;belongs_to&lt;/code&gt;&lt;/a&gt; is used in conjunction with a &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;&lt;code&gt;has_many&lt;/code&gt;&lt;/a&gt; relationship on another class because of the potential to leave orphaned records behind.</source>
          <target state="translated">&lt;code&gt;:destroy&lt;/code&gt; に設定すると、関連するオブジェクトは、このオブジェクトが破棄されるときに破棄されます。 &lt;code&gt;:delete&lt;/code&gt; に設定すると、関連するオブジェクトは、destroyメソッド&lt;strong&gt;を&lt;/strong&gt;呼び出さ&lt;strong&gt;ずに&lt;/strong&gt;削除されます。 &lt;code&gt;:destroy_async&lt;/code&gt; に設定すると、関連するオブジェクトはバックグラウンドジョブで破棄されるようにスケジュールされます。場合は、このオプションを指定しないでください&lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt; &lt;code&gt;belongs_to&lt;/code&gt; のは&lt;/a&gt;と組み合わせて使用される&lt;a href=&quot;classmethods#method-i-has_many&quot;&gt; &lt;code&gt;has_many&lt;/code&gt; &lt;/a&gt;ための背後にある孤立したレコードを残す可能性の別のクラスに関係。</target>
        </trans-unit>
        <trans-unit id="4b39062b80cdb5265cb02724120c40e669e32534" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;:destroy&lt;/code&gt;, the associated object is destroyed when this object is. If set to &lt;code&gt;:delete&lt;/code&gt;, the associated object is deleted &lt;strong&gt;without&lt;/strong&gt; calling its destroy method. This option should not be specified when &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt; is used in conjunction with a &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt; relationship on another class because of the potential to leave orphaned records behind.</source>
          <target state="translated">&lt;code&gt;:destroy&lt;/code&gt; に設定されている場合、関連するオブジェクトは、このオブジェクトが破棄されるときに破棄されます。 &lt;code&gt;:delete&lt;/code&gt; に設定すると、関連付けられたオブジェクトは、destroyメソッド&lt;strong&gt;を&lt;/strong&gt;呼び出さ&lt;strong&gt;ずに&lt;/strong&gt;削除されます。孤立したレコードが残る可能性があるため、他のクラスで&lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt;関係と&lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt;を使用する場合は、このオプションを指定しないでください。</target>
        </trans-unit>
        <trans-unit id="2aca5cdbf21bc5d78c1c3f84f674a42dfafb5949" translate="yes" xml:space="preserve">
          <source>If specified, the block can also receive the application object, in case you need to access some application-specific configuration, like middleware:</source>
          <target state="translated">ミドルウェアのようなアプリケーション固有の設定にアクセスする必要がある場合に備えて、指定された場合、ブロックはアプリケーションオブジェクトを受け取ることもできます。</target>
        </trans-unit>
        <trans-unit id="b7106776aa525e3f7ae8bb3fa5dbb5bedef8ad34" translate="yes" xml:space="preserve">
          <source>If subtracting a &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt; of variable length (i.e., years, months, days), move backward from &lt;a href=&quot;timewithzone#method-i-time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt;, otherwise move backward from &lt;a href=&quot;timewithzone#method-i-utc&quot;&gt;&lt;code&gt;utc&lt;/code&gt;&lt;/a&gt;, for accuracy when moving across DST boundaries.</source>
          <target state="translated">引いた場合は&lt;a href=&quot;duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; &lt;/a&gt;可変長の（すなわち、年、月、日）を、から後方に移動する&lt;a href=&quot;timewithzone#method-i-time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;そうでないから後方に移動し、&lt;a href=&quot;timewithzone#method-i-utc&quot;&gt; &lt;code&gt;utc&lt;/code&gt; &lt;/a&gt; DSTの境界を越えて移動する際の精度のために、。</target>
        </trans-unit>
        <trans-unit id="317bee91b538884c4bbcbbad3315054c7aa10cea" translate="yes" xml:space="preserve">
          <source>If subtracting a &lt;a href=&quot;duration&quot;&gt;Duration&lt;/a&gt; of variable length (i.e., years, months, days), move backward from &lt;a href=&quot;timewithzone#method-i-time&quot;&gt;time&lt;/a&gt;, otherwise move backward from &lt;a href=&quot;timewithzone#method-i-utc&quot;&gt;utc&lt;/a&gt;, for accuracy when moving across DST boundaries.</source>
          <target state="translated">可変長（つまり、年、月、日）の&lt;a href=&quot;duration&quot;&gt;期間&lt;/a&gt;を減算する場合は、DSTの境界を越えて移動するときの精度を高めるために、&lt;a href=&quot;timewithzone#method-i-time&quot;&gt;時間&lt;/a&gt;から逆方向に移動し、そうでない場合は&lt;a href=&quot;timewithzone#method-i-utc&quot;&gt;utc&lt;/a&gt;から逆方向に移動します。</target>
        </trans-unit>
        <trans-unit id="5cdb3ceb73d9a68c4eca2ab7b1d9bd7a55279c0f" translate="yes" xml:space="preserve">
          <source>If such a day does not exist, the last day of the corresponding month is returned:</source>
          <target state="translated">そのような日が存在しない場合は、対応する月の最終日が返されます。</target>
        </trans-unit>
        <trans-unit id="b8b95d597fc730d854618c1a1453f4d0c365d421" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://github.com/guard/listen&quot;&gt;listen gem&lt;/a&gt; is loaded Rails uses an evented file system monitor to detect changes when &lt;code&gt;config.cache_classes&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://github.com/guard/listen&quot;&gt;listen gem&lt;/a&gt;がロードされている場合、Railsは &lt;code&gt;config.cache_classes&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; の場合にイベントファイルシステムモニターを使用して変更を検出します。</target>
        </trans-unit>
        <trans-unit id="d64ea6e4700035c91d491fed0b484b562fa11696" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;:at&lt;/code&gt; option is specified, then only run jobs enqueued to run immediately or before the given time</source>
          <target state="translated">場合 &lt;code&gt;:at&lt;/code&gt; オプションが指定され、その後のみ実行するジョブは、直ちにまたは指定された時刻の前に実行するためにキューに入れ</target>
        </trans-unit>
        <trans-unit id="c085c2a7603ade372b37ef04a71a5f8dbf004984" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;:default&lt;/code&gt; value is a Symbol, it will be used as a key and translated. One can provide multiple values as default. The first one that results in a value will be returned.</source>
          <target state="translated">場合 &lt;code&gt;:default&lt;/code&gt; 値はシンボルである、それはキーとして使用して変換されます。デフォルトとして複数の値を指定できます。結果として最初の値が返されます。</target>
        </trans-unit>
        <trans-unit id="e2a3d210e20b42656def0ed6a6689ccc9d2610f8" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;:dependent&lt;/code&gt; option isn't set, all the attachments will be purged (i.e. destroyed) whenever the record is destroyed.</source>
          <target state="translated">&lt;code&gt;:dependent&lt;/code&gt; オプションが設定されていない場合、レコードが破棄されるたびに、すべての添付ファイルがパージ（つまり破棄）されます。</target>
        </trans-unit>
        <trans-unit id="96d96a06ff86038801fa2b1b6874b17833a2579a" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;:dependent&lt;/code&gt; option isn't set, the attachment will be purged (i.e. destroyed) whenever the record is destroyed.</source>
          <target state="translated">&lt;code&gt;:dependent&lt;/code&gt; オプションが設定されていない場合、レコードが破棄されるたびに添付ファイルがパージ（つまり破棄）されます。</target>
        </trans-unit>
        <trans-unit id="25cfba871b9b3e597717f7a8ee825d05c900b111" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;:prefix&lt;/code&gt; option is &lt;code&gt;true&lt;/code&gt; this is less generic, see below.</source>
          <target state="translated">&lt;code&gt;:prefix&lt;/code&gt; オプションが &lt;code&gt;true&lt;/code&gt; の場合、これは一般的ではありません。以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="35a297a8c471622ac2265dd30e94c5f6d76e25a3" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;:queue&lt;/code&gt; option is specified, then only the job(s) enqueued to a specific queue will be performed.</source>
          <target state="translated">場合 &lt;code&gt;:queue&lt;/code&gt; オプションが指定され、その後、特定のキューに入れ唯一の仕事（複数可）に行われます。</target>
        </trans-unit>
        <trans-unit id="82459f6d1ba97e425c2fc16126026c967fd33866" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;:queue&lt;/code&gt; option is specified, then only the job(s) enqueued to a specific queue will not be performed.</source>
          <target state="translated">&lt;code&gt;:queue&lt;/code&gt; オプションが指定されている場合、特定のキューにエンキューされたジョブのみが実行されません。</target>
        </trans-unit>
        <trans-unit id="40c8e2fd2652b82703ac16fa7f0281f4bc45f8c4" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;:strict&lt;/code&gt; option is set to &lt;code&gt;true&lt;/code&gt;, it will raise &lt;a href=&quot;strictvalidationfailed&quot;&gt;&lt;code&gt;ActiveModel::StrictValidationFailed&lt;/code&gt;&lt;/a&gt; instead of adding the error. &lt;code&gt;:strict&lt;/code&gt; option can also be set to any other exception.</source>
          <target state="translated">場合 &lt;code&gt;:strict&lt;/code&gt; オプションがに設定されている &lt;code&gt;true&lt;/code&gt; 、それが発生します&lt;a href=&quot;strictvalidationfailed&quot;&gt; &lt;code&gt;ActiveModel::StrictValidationFailed&lt;/code&gt; &lt;/a&gt;エラーを追加するのではなく。 &lt;code&gt;:strict&lt;/code&gt; オプションは、他の例外に設定することもできます。</target>
        </trans-unit>
        <trans-unit id="592a9a2f52840592d7749882c3d1d74bf1811602" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;:strict&lt;/code&gt; option is set to &lt;code&gt;true&lt;/code&gt;, it will raise &lt;a href=&quot;strictvalidationfailed&quot;&gt;ActiveModel::StrictValidationFailed&lt;/a&gt; instead of adding the error. &lt;code&gt;:strict&lt;/code&gt; option can also be set to any other exception.</source>
          <target state="translated">場合 &lt;code&gt;:strict&lt;/code&gt; オプションがに設定されている &lt;code&gt;true&lt;/code&gt; 、それが発生します&lt;a href=&quot;strictvalidationfailed&quot;&gt;ActiveModelを:: StrictValidationFailed&lt;/a&gt;エラーを追加するのではなく。 &lt;code&gt;:strict&lt;/code&gt; オプションは、他の例外にも設定できます。</target>
        </trans-unit>
        <trans-unit id="0e4b04a410a2faf621ddbede342ca91463d6005b" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;:through&lt;/code&gt; option is used, then the join records are deleted (rather than nullified) by default, but you can specify &lt;code&gt;dependent: :destroy&lt;/code&gt; or &lt;code&gt;dependent: :nullify&lt;/code&gt; to override this.</source>
          <target state="translated">場合 &lt;code&gt;:through&lt;/code&gt; オプションが使用され、その後、レコードは、デフォルトでは（というよりも、無効化）削除され参加していますが、指定することができます &lt;code&gt;dependent: :destroy&lt;/code&gt; か &lt;code&gt;dependent: :nullify&lt;/code&gt; これを上書きします。</target>
        </trans-unit>
        <trans-unit id="4e4260a2cd60e4a2ccaf16f6060174b6ca2fcd37" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;:through&lt;/code&gt; option is used, then the join records are destroyed instead, not the objects themselves.</source>
          <target state="translated">場合 &lt;code&gt;:through&lt;/code&gt; オプションが使用され、その後、レコードがないオブジェクト自体、代わりに破壊され参加。</target>
        </trans-unit>
        <trans-unit id="2794a2670c58ca7959d466149416ad75cd76526e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;MyEngine&lt;/code&gt; engine is marked as isolated, &lt;code&gt;FooController&lt;/code&gt; only has access to helpers from &lt;code&gt;MyEngine&lt;/code&gt;, and &lt;code&gt;url_helpers&lt;/code&gt; from &lt;code&gt;MyEngine::Engine.routes&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;MyEngine&lt;/code&gt; の単離されたエンジンがマークされ、 &lt;code&gt;FooController&lt;/code&gt; はのみからヘルパーへのアクセスがある &lt;code&gt;MyEngine&lt;/code&gt; 、および &lt;code&gt;url_helpers&lt;/code&gt; から &lt;code&gt;MyEngine::Engine.routes&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="db036d216de97a405e2fc62a821b1c503a82fe85" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;before_validation&lt;/code&gt; callback throws &lt;code&gt;:abort&lt;/code&gt;, the process will be aborted and &lt;a href=&quot;persistence#method-i-save&quot;&gt;ActiveRecord::Base#save&lt;/a&gt; will return &lt;code&gt;false&lt;/code&gt;. If &lt;a href=&quot;persistence#method-i-save-21&quot;&gt;ActiveRecord::Base#save!&lt;/a&gt; is called it will raise an &lt;a href=&quot;recordinvalid&quot;&gt;&lt;code&gt;ActiveRecord::RecordInvalid&lt;/code&gt;&lt;/a&gt; exception. Nothing will be appended to the errors object.</source>
          <target state="translated">&lt;code&gt;before_validation&lt;/code&gt; コールバックが &lt;code&gt;:abort&lt;/code&gt; をスローした場合、プロセスは中止され、&lt;a href=&quot;persistence#method-i-save&quot;&gt;ActiveRecord :: Base＃save&lt;/a&gt;は &lt;code&gt;false&lt;/code&gt; を返します。場合&lt;a href=&quot;persistence#method-i-save-21&quot;&gt;はActiveRecord ::ベース＃が節約しました！&lt;/a&gt;と呼ばれると、&lt;a href=&quot;recordinvalid&quot;&gt; &lt;code&gt;ActiveRecord::RecordInvalid&lt;/code&gt; &lt;/a&gt;例外が発生します。エラーオブジェクトには何も追加されません。</target>
        </trans-unit>
        <trans-unit id="6459cd346b8f8e7742466139ab15a8af52f1422c" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;before_validation&lt;/code&gt; callback throws &lt;code&gt;:abort&lt;/code&gt;, the process will be aborted and &lt;a href=&quot;persistence#method-i-save&quot;&gt;ActiveRecord::Base#save&lt;/a&gt; will return &lt;code&gt;false&lt;/code&gt;. If &lt;a href=&quot;persistence#method-i-save-21&quot;&gt;ActiveRecord::Base#save!&lt;/a&gt; is called it will raise an &lt;a href=&quot;recordinvalid&quot;&gt;ActiveRecord::RecordInvalid&lt;/a&gt; exception. Nothing will be appended to the errors object.</source>
          <target state="translated">場合 &lt;code&gt;before_validation&lt;/code&gt; のコールバックがスロー &lt;code&gt;:abort&lt;/code&gt; 、プロセスは中止され、&lt;a href=&quot;persistence#method-i-save&quot;&gt;保存はActiveRecord ::ベース＃が&lt;/a&gt;返されます &lt;code&gt;false&lt;/code&gt; 。場合&lt;a href=&quot;persistence#method-i-save-21&quot;&gt;はActiveRecord ::ベース＃が節約しました！&lt;/a&gt;呼び出されると、&lt;a href=&quot;recordinvalid&quot;&gt;ActiveRecord :: RecordInvalid&lt;/a&gt;例外が発生します。エラーオブジェクトには何も追加されません。</target>
        </trans-unit>
        <trans-unit id="476ce818f060ca23dda67ed78313e1271283f69e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;key&lt;/code&gt; argument provided is an array, or responds to &lt;code&gt;to_a&lt;/code&gt;, then each of elements in the array will be turned into parameters/keys and concatenated into a single key. For example:</source>
          <target state="translated">指定された &lt;code&gt;key&lt;/code&gt; 引数が配列の場合、または &lt;code&gt;to_a&lt;/code&gt; に応答する場合、配列の各要素はパラメーター/キーに変換され、単一のキーに連結されます。例えば：</target>
        </trans-unit>
        <trans-unit id="7715f972a5fd224d6e324dc4eec8a773e5ee423c" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;require&lt;/code&gt; runs first Rails does not mark &lt;code&gt;User&lt;/code&gt; as an autoloaded constant and changes to &lt;code&gt;app/models/user.rb&lt;/code&gt; aren't reloaded.</source>
          <target state="translated">&lt;code&gt;require&lt;/code&gt; が最初に実行された場合、Railsは &lt;code&gt;User&lt;/code&gt; をオートロードされた定数としてマークせず、 &lt;code&gt;app/models/user.rb&lt;/code&gt; への変更は再ロードされません。</target>
        </trans-unit>
        <trans-unit id="28b0a2b5a6e87d255ccb5286f000597e469cc91f" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;rewhere&lt;/code&gt; clause is not used, the where clauses are ANDed together:</source>
          <target state="translated">&lt;code&gt;rewhere&lt;/code&gt; 句が使用されていない場合、where句はANDで結合されます。</target>
        </trans-unit>
        <trans-unit id="ba36b0c87cc52bcc3e0dad2e5e272c7672dd2a73" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;verify_authenticity_token&lt;/code&gt; before_action ran, verify that JavaScript responses are only served to same-origin GET requests.</source>
          <target state="translated">&lt;code&gt;verify_authenticity_token&lt;/code&gt; before_actionが実行された場合は、JavaScript応答が同じ生成元のGETリクエストにのみ提供されることを確認してください。</target>
        </trans-unit>
        <trans-unit id="980f68aa6933b9cf5a4e83389c02284683526205" translate="yes" xml:space="preserve">
          <source>If the CDN has a copy of &lt;code&gt;smile.png&lt;/code&gt; it will serve it to the browser and your server doesn't even know it was requested. If the CDN does not have a copy it will try to find it at the &quot;origin&quot; &lt;code&gt;example.com/assets/smile.png&lt;/code&gt; and then store it for future use.</source>
          <target state="translated">CDNが &lt;code&gt;smile.png&lt;/code&gt; のコピーを持っている場合、それはブラウザにそれを提供し、サーバーはそれが要求されたことさえ知りません。CDNにコピーがない場合、CDNは「origin」 &lt;code&gt;example.com/assets/smile.png&lt;/code&gt; でそれを見つけようとし、将来使用するために保存します。</target>
        </trans-unit>
        <trans-unit id="d5ec5ecfccf27758c95e8159a6dc7fcfa0be3e51" translate="yes" xml:space="preserve">
          <source>If the action is being used in a public API and you can't change to HTTP method being used, you can update your form to use the &lt;code&gt;PUT&lt;/code&gt; method instead:</source>
          <target state="translated">アクションがパブリックAPIで使用されていて、使用されているHTTPメソッドに変更できない場合は、代わりに &lt;code&gt;PUT&lt;/code&gt; メソッドを使用するようにフォームを更新できます。</target>
        </trans-unit>
        <trans-unit id="a9358a87a3846748380b3a11a1f529eb7861d305" translate="yes" xml:space="preserve">
          <source>If the action is not being used in a public API and you are free to change the HTTP method, you can update your route to use &lt;code&gt;patch&lt;/code&gt; instead of &lt;code&gt;put&lt;/code&gt;:</source>
          <target state="translated">アクションがパブリックAPIで使用されておらず、HTTPメソッドを自由に変更できる場合は、 &lt;code&gt;put&lt;/code&gt; の代わりに &lt;code&gt;patch&lt;/code&gt; を使用するようにルートを更新できます。</target>
        </trans-unit>
        <trans-unit id="6c37a3109c6c9350fe06965267aed616e347b8af" translate="yes" xml:space="preserve">
          <source>If the application being upgraded autoloads correctly, the project structure should be already mostly compatible.</source>
          <target state="translated">アップグレードされるアプリケーションが正しくオートロードされていれば、プロジェクト構造はすでにほとんど互換性があるはずです。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
