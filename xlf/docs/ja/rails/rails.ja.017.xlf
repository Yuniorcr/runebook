<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="rails">
    <body>
      <group id="rails">
        <trans-unit id="ba917a0f4aba99c86e775d91895afeb4b93ff99a" translate="yes" xml:space="preserve">
          <source>More advanced use of the command line is focused around finding useful (even surprising at times) options in the utilities, and fitting those to your needs and specific work flow. Listed here are some tricks up Rails' sleeve.</source>
          <target state="translated">コマンドラインのより高度な使い方は、ユーティリティの中から便利な(時には驚くような)オプションを見つけて、それをあなたのニーズや特定のワークフローに適合させることに重点を置いています。ここでは、Railsのトリックをいくつか挙げています。</target>
        </trans-unit>
        <trans-unit id="383f0e0e882a4dc2683b66372e6aa52e3a75f04b" translate="yes" xml:space="preserve">
          <source>More examples</source>
          <target state="translated">その他の例</target>
        </trans-unit>
        <trans-unit id="80a6b992b86c1ba7e1983d83fe134aaae1109b0e" translate="yes" xml:space="preserve">
          <source>More information about migrations can be found in the &lt;a href=&quot;active_record_migrations&quot;&gt;Migrations&lt;/a&gt; guide.</source>
          <target state="translated">移行の詳細については、&lt;a href=&quot;active_record_migrations&quot;&gt;移行&lt;/a&gt;ガイドをご覧ください。</target>
        </trans-unit>
        <trans-unit id="3ed35b03edc8d1bfacf529e6c1db32d37eb5e37f" translate="yes" xml:space="preserve">
          <source>More information can be found in &lt;a href=&quot;core/classmethods#method-i-set&quot;&gt;&lt;code&gt;ActiveJob::Core::ClassMethods#set&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">詳細については、&lt;a href=&quot;core/classmethods#method-i-set&quot;&gt; &lt;code&gt;ActiveJob::Core::ClassMethods#set&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b6053fd77164aa71fabc62e1525d3a4af41ecd65" translate="yes" xml:space="preserve">
          <source>More information can be found in &lt;a href=&quot;core/classmethods#method-i-set&quot;&gt;ActiveJob::Core::ClassMethods#set&lt;/a&gt;</source>
          <target state="translated">詳細については、&lt;a href=&quot;core/classmethods#method-i-set&quot;&gt;ActiveJob :: Core :: ClassMethods＃setを参照してください&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1a85b705b6839888932e068d061c266aa144e7aa" translate="yes" xml:space="preserve">
          <source>More precisely, if the web server is running and application files have been modified, Rails unloads all autoloaded constants just before the next request is processed. That way, application classes or modules used during that request are going to be autoloaded, thus picking up their current implementation in the file system.</source>
          <target state="translated">より正確には、Webサーバが動作していてアプリケーションファイルが変更されている場合、Railsは次のリクエストが処理される直前に、オートロードされたすべての定数をアンロードします。このようにして、そのリクエスト中に使用されたアプリケーションクラスやモジュールはオートロードされ、ファイルシステムに現在の実装が反映されるようになります。</target>
        </trans-unit>
        <trans-unit id="3a7a86c3c7bb6f061ed4b7dd4612a07ea2e55494" translate="yes" xml:space="preserve">
          <source>More reading:</source>
          <target state="translated">続きを読む</target>
        </trans-unit>
        <trans-unit id="1bc0107abee30f824ef23a770858703e03f38a74" translate="yes" xml:space="preserve">
          <source>Moreover, &lt;code&gt;Kernel#require&lt;/code&gt; loads files once, but development is much more smooth if code gets refreshed when it changes without restarting the server. It would be nice to be able to use &lt;code&gt;Kernel#load&lt;/code&gt; in development, and &lt;code&gt;Kernel#require&lt;/code&gt; in production.</source>
          <target state="translated">さらに、 &lt;code&gt;Kernel#require&lt;/code&gt; はファイルを一度ロードしますが、サーバーを再起動せずにコードが変更されたときにコードが更新されると、開発はよりスムーズになります。開発では &lt;code&gt;Kernel#load&lt;/code&gt; を、実稼働では &lt;code&gt;Kernel#require&lt;/code&gt; を使用できると便利です。</target>
        </trans-unit>
        <trans-unit id="d327e6ec6a6af69476c66c4050cf30edbe14a000" translate="yes" xml:space="preserve">
          <source>Moreover, it gracefully handles module dependencies. Given a &lt;code&gt;Foo&lt;/code&gt; module and a &lt;code&gt;Bar&lt;/code&gt; module which depends on the former, we would typically write the following:</source>
          <target state="translated">さらに、モジュールの依存関係を適切に処理します。 &lt;code&gt;Foo&lt;/code&gt; モジュールと前者に依存する &lt;code&gt;Bar&lt;/code&gt; モジュールを考えると、通常は次のように記述します。</target>
        </trans-unit>
        <trans-unit id="1336dbab8404ab8354f8b7e595d9f9da94e52e6a" translate="yes" xml:space="preserve">
          <source>Moreover, since the test class extends from &lt;code&gt;ActionView::TestCase&lt;/code&gt;, you have access to Rails' helper methods such as &lt;code&gt;link_to&lt;/code&gt; or &lt;code&gt;pluralize&lt;/code&gt;.</source>
          <target state="translated">さらに、テストクラスは &lt;code&gt;ActionView::TestCase&lt;/code&gt; から拡張されているため、 &lt;code&gt;link_to&lt;/code&gt; や &lt;code&gt;pluralize&lt;/code&gt; などのRailsのヘルパーメソッドにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="88b40b9cf93fa0667fdbc7fa5d068e722af43930" translate="yes" xml:space="preserve">
          <source>Most CDNs will cache contents of an asset based on the complete URL. This means that a request to</source>
          <target state="translated">ほとんどの CDN は、完全な URL に基づいてアセットのコンテンツをキャッシュします。これは</target>
        </trans-unit>
        <trans-unit id="f008a7d63f26d69778b0b37e05dd3fcfe81eed47" translate="yes" xml:space="preserve">
          <source>Most WYSIWYG editors are wrappers around HTML&amp;rsquo;s &lt;code&gt;contenteditable&lt;/code&gt; and &lt;code&gt;execCommand&lt;/code&gt; APIs, designed by Microsoft to support live editing of web pages in Internet Explorer 5.5, and &lt;a href=&quot;https://blog.whatwg.org/the-road-to-html-5-contenteditable#history&quot;&gt;eventually reverse-engineered&lt;/a&gt; and copied by other browsers.</source>
          <target state="translated">ほとんどのWYSIWYGエディターは、HTMLの &lt;code&gt;contenteditable&lt;/code&gt; および &lt;code&gt;execCommand&lt;/code&gt; API のラッパーであり、MicrosoftがInternet Explorer 5.5でのWebページのライブ編集をサポートするように設計し、&lt;a href=&quot;https://blog.whatwg.org/the-road-to-html-5-contenteditable#history&quot;&gt;最終的にリバースエンジニアリング&lt;/a&gt;して他のブラウザーでコピーします。</target>
        </trans-unit>
        <trans-unit id="ab978ad55eb3ed14757f1864bfc815a255aea29c" translate="yes" xml:space="preserve">
          <source>Most applications need to keep track of state for users that interact with the application. This could be the contents of a shopping basket, or the user id of the currently logged in user. This kind of user-specific state can be stored in the session.</source>
          <target state="translated">ほとんどのアプリケーションは、アプリケーションとインタラクトするユーザーの状態を追跡する必要があります。これは、ショッピングバスケットの内容や、現在ログインしているユーザーのユーザーIDなどです。このようなユーザー固有の状態は、セッションに保存することができます。</target>
        </trans-unit>
        <trans-unit id="133d632a5c7bc56c3f2c19e3db9d200e367fc939" translate="yes" xml:space="preserve">
          <source>Most bots are really dumb. They crawl the web and put their spam into every form's field they can find. Negative CAPTCHAs take advantage of that and include a &quot;honeypot&quot; field in the form which will be hidden from the human user by CSS or JavaScript.</source>
          <target state="translated">ほとんどのボットは本当に頭が悪い。彼らはウェブをクロールして、見つけることができるすべてのフォームのフィールドにスパムを入れます。ネガティブなCAPTCHAはそれを利用して、フォームに「ハニーポット」フィールドを含み、CSSやJavaScriptによって人間のユーザーからは隠されます。</target>
        </trans-unit>
        <trans-unit id="bf0776721a91b86a474e68e52f939aa617b046e9" translate="yes" xml:space="preserve">
          <source>Most commonly, the streamed broadcast is sent straight to the subscriber on the client-side. The channel just acts as a connector between the two parties (the broadcaster and the channel subscriber). Here's an example of a channel that allows subscribers to get all new comments on a given page:</source>
          <target state="translated">最も一般的には、ストリーミングされた放送は、クライアント側の加入者に直接送られます。チャンネルは、2 つの当事者 (放送事業者とチャンネル購読者)の間のコネクタとして機能します。ここでは、購読者が指定したページの新しいコメントをすべて取得できるようにするチャンネルの例を示します。</target>
        </trans-unit>
        <trans-unit id="6bc330b7ded91a1d90bd743f5169cca15ece50bb" translate="yes" xml:space="preserve">
          <source>Most databases don't support true nested transactions. At the time of writing, the only database that supports true nested transactions that we're aware of, is MS-SQL.</source>
          <target state="translated">ほとんどのデータベースは、真の入れ子になったトランザクションをサポートしていません。この記事を書いている時点で、真の入れ子になったトランザクションをサポートしているデータベースは MS-SQL だけです。</target>
        </trans-unit>
        <trans-unit id="58ceee0a51c6eda13292b80b4053139906be4f6b" translate="yes" xml:space="preserve">
          <source>Most databases don't support true nested transactions. At the time of writing, the only database that we're aware of that supports true nested transactions, is MS-SQL. Because of this, Active Record emulates nested transactions by using savepoints on MySQL and PostgreSQL. See &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/savepoint.html&quot;&gt;dev.mysql.com/doc/refman/5.7/en/savepoint.html&lt;/a&gt; for more information about savepoints.</source>
          <target state="translated">ほとんどのデータベースは、真にネストされたトランザクションをサポートしていません。これを書いている時点では、真にネストされたトランザクションをサポートしていることがわかっているデータベースはMS-SQLだけです。このため、Active RecordはMySQLとPostgreSQLのセーブポイントを使用して、ネストされたトランザクションをエミュレートします。セーブポイントの詳細については、&lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/savepoint.html&quot;&gt;dev.mysql.com / doc / refman / 5.7 / en / savepoint.html&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="559241ef317795a676c6fda0598b936471fba822" translate="yes" xml:space="preserve">
          <source>Most databases don't support true nested transactions. At the time of writing, the only database that we're aware of that supports true nested transactions, is MS-SQL. Because of this, Active Record emulates nested transactions by using savepoints. See &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/savepoint.html&quot;&gt;dev.mysql.com/doc/refman/en/savepoint.html&lt;/a&gt; for more information about savepoints.</source>
          <target state="translated">ほとんどのデータベースは、真のネストされたトランザクションをサポートしていません。これを書いている時点で、真のネストされたトランザクションをサポートしていると私たちが認識しているデータベースはMS-SQLだけです。このため、Active Recordは、セーブポイントを使用してネストされたトランザクションをエミュレートします。セーブポイントの詳細については、&lt;a href=&quot;https://dev.mysql.com/doc/refman/en/savepoint.html&quot;&gt;dev.mysql.com / doc / refman / en /savepoint.html&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="523cf2e23b0af5d149ca0c1cf81d6fcdfeb6bb03" translate="yes" xml:space="preserve">
          <source>Most important of these are of course the controller, located at &lt;code&gt;app/controllers/welcome_controller.rb&lt;/code&gt; and the view, located at &lt;code&gt;app/views/welcome/index.html.erb&lt;/code&gt;.</source>
          <target state="translated">これらの中で最も重要なのは、もちろん &lt;code&gt;app/controllers/welcome_controller.rb&lt;/code&gt; にあるコントローラーと &lt;code&gt;app/views/welcome/index.html.erb&lt;/code&gt; にあるビューです。</target>
        </trans-unit>
        <trans-unit id="206cc7806b5824567f552027393f40e4e3d5b31f" translate="yes" xml:space="preserve">
          <source>Most likely your application is going to contain bugs or otherwise throw an exception that needs to be handled. For example, if the user follows a link to a resource that no longer exists in the database, Active Record will throw the &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; exception.</source>
          <target state="translated">ほとんどの場合、アプリケーションにはバグが含まれるか、処理する必要のある例外がスローされます。たとえば、ユーザーがデータベースに存在しなくなったリソースへのリンクをたどると、Active Recordは &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; 例外をスローします。</target>
        </trans-unit>
        <trans-unit id="1d53cfefc19e9e67195ba8f79217ade0838cd9b3" translate="yes" xml:space="preserve">
          <source>Most methods expect a &lt;code&gt;number&lt;/code&gt; argument, and will return it unchanged if can't be converted into a valid number.</source>
          <target state="translated">ほとんどのメソッドは &lt;code&gt;number&lt;/code&gt; 引数を期待し、有効な数値に変換できない場合は変更せずに返します。</target>
        </trans-unit>
        <trans-unit id="eccfd56b24b3d8bc52ff7d0ed06cbf4578f063b0" translate="yes" xml:space="preserve">
          <source>Most of the adapters support multiple queues. With Active Job you can schedule the job to run on a specific queue:</source>
          <target state="translated">ほとんどのアダプタは複数のキューをサポートしています。アクティブジョブを使用すると、特定のキューで実行するジョブをスケジュールすることができます。</target>
        </trans-unit>
        <trans-unit id="1e655e97128927bac82c4977add5f48a088fef9a" translate="yes" xml:space="preserve">
          <source>Most of the methods in the adapter are useful during migrations. Most notably, the instance methods provided by &lt;a href=&quot;schemastatements&quot;&gt;&lt;code&gt;SchemaStatements&lt;/code&gt;&lt;/a&gt; are very useful.</source>
          <target state="translated">アダプタのほとんどのメソッドは、移行中に役立ちます。特に、&lt;a href=&quot;schemastatements&quot;&gt; &lt;code&gt;SchemaStatements&lt;/code&gt; &lt;/a&gt;によって提供されるインスタンスメソッドは非常に便利です。</target>
        </trans-unit>
        <trans-unit id="fee7e8c5aedcd813f43d22b5dfb2bc83dced0847" translate="yes" xml:space="preserve">
          <source>Most of the methods in the adapter are useful during migrations. Most notably, the instance methods provided by &lt;a href=&quot;schemastatements&quot;&gt;SchemaStatements&lt;/a&gt; are very useful.</source>
          <target state="translated">アダプターのほとんどのメソッドは、マイグレーション中に役立ちます。特に、&lt;a href=&quot;schemastatements&quot;&gt;SchemaStatements&lt;/a&gt;によって提供されるインスタンスメソッドは非常に便利です。</target>
        </trans-unit>
        <trans-unit id="48b34b3aab7d85bd74d4b838155569578ab804d8" translate="yes" xml:space="preserve">
          <source>Most of the queries here are happening in the controller. In order to benefit from streaming you would want to rewrite it as:</source>
          <target state="translated">ここでのクエリのほとんどはコントローラで行われています。ストリーミングの恩恵を受けるためには、以下のように書き換えたいでしょう。</target>
        </trans-unit>
        <trans-unit id="497bca5cc5e9c844d37444e5315fa4c8d45fc350" translate="yes" xml:space="preserve">
          <source>Most people don't clear out the cookies after working at a public terminal. So if the last user didn't log out of a web application, you would be able to use it as this user. Provide the user with a &lt;em&gt;log-out button&lt;/em&gt; in the web application, and &lt;em&gt;make it prominent&lt;/em&gt;.</source>
          <target state="translated">ほとんどの人は、パブリックターミナルで作業した後、Cookieを消去しません。したがって、最後のユーザーがWebアプリケーションからログアウトしなかった場合、それをこのユーザーとして使用できます。ユーザーにウェブアプリケーションの&lt;em&gt;ログアウトボタン&lt;/em&gt;を提供し、&lt;em&gt;目立つようにし&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="571b335d230721224ba2cc7dd94150881d920e90" translate="yes" xml:space="preserve">
          <source>Most template dependencies can be derived from calls to &lt;code&gt;render&lt;/code&gt; in the template itself. Here are some examples of render calls that &lt;code&gt;ActionView::Digestor&lt;/code&gt; knows how to decode:</source>
          <target state="translated">ほとんどのテンプレート依存関係は、テンプレート自体で &lt;code&gt;render&lt;/code&gt; 呼び出しから派生できます。 &lt;code&gt;ActionView::Digestor&lt;/code&gt; がデコード方法を知っているレンダーコールの例をいくつか示します。</target>
        </trans-unit>
        <trans-unit id="5e4bf900addd8f529d8a91a4897d35ae99eedb25" translate="yes" xml:space="preserve">
          <source>Most template dependencies can be derived from calls to render in the template itself. Here are some examples of render calls that Cache Digests knows how to decode:</source>
          <target state="translated">ほとんどのテンプレート依存関係は、テンプレート自体の render への呼び出しから派生します。ここでは、Cache Digests がデコード方法を知っているレンダー呼び出しの例をいくつか示します。</target>
        </trans-unit>
        <trans-unit id="b723d7488a6748257fd951690affee4ed1b12a30" translate="yes" xml:space="preserve">
          <source>Most text helpers that generate HTML output sanitize the given input by default, but do not escape it. This means HTML tags will appear in the page but all malicious code will be removed. Let's look at some examples using the &lt;code&gt;simple_format&lt;/code&gt; method:</source>
          <target state="translated">HTML出力を生成するほとんどのテキストヘルパーは、デフォルトで指定された入力をサニタイズしますが、エスケープしません。つまり、HTMLタグはページに表示されますが、悪意のあるコードはすべて削除されます。 &lt;code&gt;simple_format&lt;/code&gt; メソッドを使用したいくつかの例を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="6c4acaae05139d290e7eb7c3702ecdfb4740715e" translate="yes" xml:space="preserve">
          <source>Most times you only care about the data itself. Here is a shortcut to just get the data.</source>
          <target state="translated">ほとんどの場合、データそのものにしか興味がありません。ここでは、データを手に入れるだけの近道を紹介します。</target>
        </trans-unit>
        <trans-unit id="5be95de95c3a694cdfaa9b01f941d8b4d82957f5" translate="yes" xml:space="preserve">
          <source>Mount a Rack-based application to be used within the application.</source>
          <target state="translated">アプリケーション内で使用するラックベースのアプリケーションをマウントします。</target>
        </trans-unit>
        <trans-unit id="e66103f0e1c609f714c07a70bc4e128e09dc1a34" translate="yes" xml:space="preserve">
          <source>Mount priority</source>
          <target state="translated">マウント優先度</target>
        </trans-unit>
        <trans-unit id="65e4ece6255d32204ed3ced596b87d73f3245e49" translate="yes" xml:space="preserve">
          <source>Mounting the Engine</source>
          <target state="translated">エンジンの取り付け</target>
        </trans-unit>
        <trans-unit id="68e27a2147826a19a93ca554aefc33b75b0f0e77" translate="yes" xml:space="preserve">
          <source>Move to the latest patch version after your current version.</source>
          <target state="translated">現在のバージョンの後、最新のパッチバージョンに移動します。</target>
        </trans-unit>
        <trans-unit id="69755f4dfaa3969fcb5b25c274c95fbd2193790b" translate="yes" xml:space="preserve">
          <source>Move to the latest patch version of the next minor version.</source>
          <target state="translated">次期マイナー版の最新パッチ版に移行します。</target>
        </trans-unit>
        <trans-unit id="567bb626e54c5a63b6fa8bf66c31f36df6d87141" translate="yes" xml:space="preserve">
          <source>Much like &lt;code&gt;form_with&lt;/code&gt; a &lt;a href=&quot;formbuilder&quot;&gt;&lt;code&gt;FormBuilder&lt;/code&gt;&lt;/a&gt; instance associated with the scope or model is yielded, so any generated field names are prefixed with either the passed scope or the scope inferred from the &lt;code&gt;:model&lt;/code&gt;.</source>
          <target state="translated">同じよう &lt;code&gt;form_with&lt;/code&gt; &lt;a href=&quot;formbuilder&quot;&gt; &lt;code&gt;FormBuilder&lt;/code&gt; の&lt;/a&gt;任意発生フィールド名が合格範囲またはから推測範囲のいずれかで始まりますので、範囲またはモデルに関連付けられたインスタンスは、得られている &lt;code&gt;:model&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4f2a29dbde4926cfbfe6b23506f21556494d10f9" translate="yes" xml:space="preserve">
          <source>Much like &lt;code&gt;form_with&lt;/code&gt; a &lt;a href=&quot;formbuilder&quot;&gt;FormBuilder&lt;/a&gt; instance associated with the scope or model is yielded, so any generated field names are prefixed with either the passed scope or the scope inferred from the &lt;code&gt;:model&lt;/code&gt;.</source>
          <target state="translated">同じよう &lt;code&gt;form_with&lt;/code&gt; &lt;a href=&quot;formbuilder&quot;&gt;FormBuilderの&lt;/a&gt;任意発生フィールド名が合格範囲またはから推測範囲のいずれかで始まりますので、範囲またはモデルに関連付けられたインスタンスは、得られている &lt;code&gt;:model&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4c669cfe6f565d5e96b459b6a859e113771af92a" translate="yes" xml:space="preserve">
          <source>Much of Action Controller's functionality is implemented as Middlewares. The following list explains the purpose of each of them:</source>
          <target state="translated">アクションコントローラの機能の多くは、ミドルウェアとして実装されています。以下のリストでは、それぞれの目的を説明しています。</target>
        </trans-unit>
        <trans-unit id="fdad3ac6d447afe1cd48c10de24f4c825fd91666" translate="yes" xml:space="preserve">
          <source>MultiJSON has reached its &lt;a href=&quot;https://github.com/rails/rails/pull/10576&quot;&gt;end-of-life&lt;/a&gt; and has been removed from Rails.</source>
          <target state="translated">MultiJSONはサポート&lt;a href=&quot;https://github.com/rails/rails/pull/10576&quot;&gt;終了に&lt;/a&gt;なり、Railsから削除されました。</target>
        </trans-unit>
        <trans-unit id="577e584a04dfea954500058f69395d5b90b186e3" translate="yes" xml:space="preserve">
          <source>Multibyte</source>
          <target state="translated">Multibyte</target>
        </trans-unit>
        <trans-unit id="44b3146bc43b4204d4d02b6c17400bdc44be353f" translate="yes" xml:space="preserve">
          <source>Multibyte proxy</source>
          <target state="translated">マルチバイトプロキシ</target>
        </trans-unit>
        <trans-unit id="dbfe775843033ba1d1d04a0b95553ec396faea3b" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars</source>
          <target state="translated">Multibyte::Chars</target>
        </trans-unit>
        <trans-unit id="a77c779095fcad786d63d02ed4f10da364a918f8" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#compose</source>
          <target state="translated">Multibyte::Chars#compose</target>
        </trans-unit>
        <trans-unit id="3a71236f57c99aa27508902711cb5b914367a5af" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#decompose</source>
          <target state="translated">Multibyte::Chars#decompose</target>
        </trans-unit>
        <trans-unit id="c3aed8a0bd7f2e27cc61c4584bdef95c2754574b" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#grapheme_length</source>
          <target state="translated">Multibyte::Chars#grapheme_length</target>
        </trans-unit>
        <trans-unit id="2cb346ad51d1b8e1ab5d6fdd3b0e315e78fe54d3" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#limit</source>
          <target state="translated">Multibyte::Chars#limit</target>
        </trans-unit>
        <trans-unit id="edb500693690502b4ce906e2d6de066647b583de" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#method_missing</source>
          <target state="translated">Multibyte::Chars#method_missing</target>
        </trans-unit>
        <trans-unit id="c9aff960c5a6365bbe220c67d92ca35bf231b25f" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#normalize</source>
          <target state="translated">Multibyte::Chars#normalize</target>
        </trans-unit>
        <trans-unit id="61fd0c3d0704b5be2b2ddc64f01f05d3cdfae11e" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#respond_to_missing?</source>
          <target state="translated">Multibyte::Chars#respond_to_missing?</target>
        </trans-unit>
        <trans-unit id="fcac9f6b46e0d66cd3b2e48b54cb4838d98b1d70" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#reverse</source>
          <target state="translated">Multibyte::Chars#reverse</target>
        </trans-unit>
        <trans-unit id="29c57575d0fe497cfc6df410d77261ee859bff5c" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#slice!</source>
          <target state="translated">Multibyte::Chars#slice!</target>
        </trans-unit>
        <trans-unit id="60924aa309b322723072e8b5d1d25f3bfc84f185" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#split</source>
          <target state="translated">Multibyte::Chars#split</target>
        </trans-unit>
        <trans-unit id="c54415b49d5dd255e971711f05c0921ca91f9567" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#tidy_bytes</source>
          <target state="translated">Multibyte::Chars#tidy_bytes</target>
        </trans-unit>
        <trans-unit id="5696a1b68036edfea1149f28955c5171aaa066dd" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#titlecase</source>
          <target state="translated">Multibyte::Chars#titlecase</target>
        </trans-unit>
        <trans-unit id="29562d818637c005447d41a14c53e35ca819d736" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#titleize</source>
          <target state="translated">Multibyte::Chars#titleize</target>
        </trans-unit>
        <trans-unit id="3c0ba0b40fbfb06c8ff8eb5ac6b1a814a13abe65" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#to_s</source>
          <target state="translated">Multibyte::Chars#to_s</target>
        </trans-unit>
        <trans-unit id="4e507c3e7ade2459ad387acbc199ef65753f44e1" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#to_str</source>
          <target state="translated">Multibyte::Chars#to_str</target>
        </trans-unit>
        <trans-unit id="e0852a435607775956151f2d12a44d374e367131" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#wrapped_string</source>
          <target state="translated">Multibyte::Chars#wrapped_string</target>
        </trans-unit>
        <trans-unit id="f1b49e7f7cacefac11c721baed55601e72598ac0" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars::consumes?</source>
          <target state="translated">Multibyte::Chars::consumes?</target>
        </trans-unit>
        <trans-unit id="25b5a149fcfab95d5e9ac1f6c3bc6b238d1a76b6" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars::new</source>
          <target state="translated">Multibyte::Chars::new</target>
        </trans-unit>
        <trans-unit id="dd207e116a1881d14e8755e2dd8afad68ca66404" translate="yes" xml:space="preserve">
          <source>Multibyte::Unicode</source>
          <target state="translated">Multibyte::Unicode</target>
        </trans-unit>
        <trans-unit id="99e5ba7441254093fd472ba8b48bd5cf04210a9c" translate="yes" xml:space="preserve">
          <source>Multibyte::Unicode#compose</source>
          <target state="translated">Multibyte::Unicode#compose</target>
        </trans-unit>
        <trans-unit id="6a9bf80aa3e8755c3b8785c2e82d94106dafbbea" translate="yes" xml:space="preserve">
          <source>Multibyte::Unicode#decompose</source>
          <target state="translated">Multibyte::Unicode#decompose</target>
        </trans-unit>
        <trans-unit id="3ab6d7fd74955bfcdd88d1183d496821920971c7" translate="yes" xml:space="preserve">
          <source>Multibyte::Unicode#default_normalization_form</source>
          <target state="translated">Multibyte::Unicode#default_normalization_form</target>
        </trans-unit>
        <trans-unit id="2f590db3a14c669921995363de50c9aa7b62f029" translate="yes" xml:space="preserve">
          <source>Multibyte::Unicode#normalize</source>
          <target state="translated">Multibyte::Unicode#normalize</target>
        </trans-unit>
        <trans-unit id="497c9088f01c7ac11114f3ce775aac42f7b50b8c" translate="yes" xml:space="preserve">
          <source>Multibyte::Unicode#pack_graphemes</source>
          <target state="translated">Multibyte::Unicode#pack_graphemes</target>
        </trans-unit>
        <trans-unit id="93ea9b938b0c09536d97df26cee8e9d7797e904e" translate="yes" xml:space="preserve">
          <source>Multibyte::Unicode#tidy_bytes</source>
          <target state="translated">Multibyte::Unicode#tidy_bytes</target>
        </trans-unit>
        <trans-unit id="f24dbeb8438b74efbec9b1765decb2e0a554ecd2" translate="yes" xml:space="preserve">
          <source>Multibyte::Unicode#unpack_graphemes</source>
          <target state="translated">Multibyte::Unicode#unpack_graphemes</target>
        </trans-unit>
        <trans-unit id="8478db7c1329df5939eeb843202273bc3ca6f4fd" translate="yes" xml:space="preserve">
          <source>Multibyte::proxy_class</source>
          <target state="translated">Multibyte::proxy_class</target>
        </trans-unit>
        <trans-unit id="5b6a01d724fec572618c3d6bbaca05853b8359ee" translate="yes" xml:space="preserve">
          <source>Multibyte::proxy_class=</source>
          <target state="translated">Multibyte::proxy_class=</target>
        </trans-unit>
        <trans-unit id="1c0b905d64b0517973b54b47221309dc3ae10f49" translate="yes" xml:space="preserve">
          <source>Multipart Emails</source>
          <target state="translated">マルチパートメール</target>
        </trans-unit>
        <trans-unit id="bb49c6706b5ec72ba15cb3e74cd18b230c613911" translate="yes" xml:space="preserve">
          <source>Multipart messages can also be used implicitly because Action Mailer will automatically detect and use multipart templates, where each template is named after the name of the action, followed by the content type. Each such detected template will be added to the message, as a separate part.</source>
          <target state="translated">Action Mailer は自動的にマルチパートテンプレートを検出して使用するため、マルチパートメッセージを暗黙のうちに使用することもできます。このように検出されたテンプレートは、それぞれ別の部分としてメッセージに追加されます。</target>
        </trans-unit>
        <trans-unit id="5afb1cbb87b4c678f1749be244babe3f86a208c0" translate="yes" xml:space="preserve">
          <source>Multiple Applications</source>
          <target state="translated">複数のアプリケーション</target>
        </trans-unit>
        <trans-unit id="be88eb95f46dc97a706ddd49f5cd1af0da18459d" translate="yes" xml:space="preserve">
          <source>Multiple Conditions for Callbacks</source>
          <target state="translated">コールバックの複数の条件</target>
        </trans-unit>
        <trans-unit id="08c54482647fa51932f62b990e2f89b4da939bdd" translate="yes" xml:space="preserve">
          <source>Multiple Databases with Active Record</source>
          <target state="translated">アクティブレコードを持つ複数のデータベース</target>
        </trans-unit>
        <trans-unit id="2f1749c5f39d08135c935affc6ac69182f5bb4c0" translate="yes" xml:space="preserve">
          <source>Multiple delegates to the same target are allowed:</source>
          <target state="translated">同一ターゲットへの複数のデリゲートが許可されています。</target>
        </trans-unit>
        <trans-unit id="38f3de59be21ca6540293770d2cd9c3d3037f833" translate="yes" xml:space="preserve">
          <source>Multiple joins:</source>
          <target state="translated">複数の添付ファイル。</target>
        </trans-unit>
        <trans-unit id="20aff80eb14d75fd5040fa242c1b2eceb165bbca" translate="yes" xml:space="preserve">
          <source>Multiple primary databases and a replica for each</source>
          <target state="translated">複数のプライマリデータベースと各プライマリデータベースのレプリカ</target>
        </trans-unit>
        <trans-unit id="1226f9211654c62fbd0f20c3a9246d880bbd4293" translate="yes" xml:space="preserve">
          <source>Multiple writer databases and a replica for each</source>
          <target state="translated">複数のライタデータベースと各ライタのレプリカ</target>
        </trans-unit>
        <trans-unit id="eee06ae209cee3e1793aab88b680177467f7df6f" translate="yes" xml:space="preserve">
          <source>Multiplies this &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt; by a &lt;a href=&quot;../numeric&quot;&gt;&lt;code&gt;Numeric&lt;/code&gt;&lt;/a&gt; and returns a new &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">乗算この&lt;a href=&quot;duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; &lt;/a&gt;によって&lt;a href=&quot;../numeric&quot;&gt; &lt;code&gt;Numeric&lt;/code&gt; &lt;/a&gt;を返す新しい&lt;a href=&quot;duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="951e59425d6c39d5b290427731b5200017ee438a" translate="yes" xml:space="preserve">
          <source>Multiplies this &lt;a href=&quot;duration&quot;&gt;Duration&lt;/a&gt; by a &lt;a href=&quot;../numeric&quot;&gt;Numeric&lt;/a&gt; and returns a new &lt;a href=&quot;duration&quot;&gt;Duration&lt;/a&gt;.</source>
          <target state="translated">乗算この&lt;a href=&quot;duration&quot;&gt;期間&lt;/a&gt;によって&lt;a href=&quot;../numeric&quot;&gt;数値&lt;/a&gt;を返す新しい&lt;a href=&quot;duration&quot;&gt;所要時間&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="05ad5edf0857ae96f7e8e591fea83fc0be2cbb1d" translate="yes" xml:space="preserve">
          <source>Mutator methods called on Relation</source>
          <target state="translated">リレーションで呼び出されるミューテータメソッド</target>
        </trans-unit>
        <trans-unit id="deaa0c393a6613972aaccbf1fecfdad67aa21e88" translate="yes" xml:space="preserve">
          <source>MySQL</source>
          <target state="translated">MySQL</target>
        </trans-unit>
        <trans-unit id="04f6be056c62007ce171d677af3018f64ae6643c" translate="yes" xml:space="preserve">
          <source>MySQL doesn't support DDL transactions. If you perform a DDL operation, then any created savepoints will be automatically released. For example, if you've created a savepoint, then you execute a CREATE TABLE statement, then the savepoint that was created will be automatically released.</source>
          <target state="translated">MySQLはDDLトランザクションをサポートしていません。DDL オペレーションを実行すると、作成されたセーブポイントは自動的に解放されます。例えば、セーブポイントを作成した後にCREATE TABLE文を実行すると、作成されたセーブポイントは自動的に解放されます。</target>
        </trans-unit>
        <trans-unit id="27c321d50bbcd9b5772400c058a31390e2decc62" translate="yes" xml:space="preserve">
          <source>MySQL: &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/explain-output.html&quot;&gt;EXPLAIN Output Format&lt;/a&gt;</source>
          <target state="translated">MySQL：&lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/explain-output.html&quot;&gt;EXPLAIN出力フォーマット&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bdfb725f6f0e69817041da42add99b5bdb995776" translate="yes" xml:space="preserve">
          <source>MySQL: &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/explain-output.html&quot;&gt;EXPLAIN Output Format&lt;/a&gt;</source>
          <target state="translated">MySQL：&lt;a href=&quot;https://dev.mysql.com/doc/refman/en/explain-output.html&quot;&gt;EXPLAIN出力フォーマット&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="09679f1a4e7693179ccf0966910ba55b4da55040" translate="yes" xml:space="preserve">
          <source>MySQL: &lt;code&gt;:precision&lt;/code&gt; [1..63], &lt;code&gt;:scale&lt;/code&gt; [0..30]. Default is (10,0).</source>
          <target state="translated">MySQL：： &lt;code&gt;:precision&lt;/code&gt; [1..63] 、 &lt;code&gt;:scale&lt;/code&gt; [0..30]。デフォルトは（10,0）です。</target>
        </trans-unit>
        <trans-unit id="9f6ce4a25a9c51664b4dcdfc725f8eefd86a4c19" translate="yes" xml:space="preserve">
          <source>MySpace blocked many tags, but allowed CSS. So the worm's author put JavaScript into CSS like this:</source>
          <target state="translated">MySpaceは多くのタグをブロックしていたが、CSSは許可していた。そこでワームの作者は、このようにCSSにJavaScriptを入れた。</target>
        </trans-unit>
        <trans-unit id="06ec39473e78b6ba391da473c04b8788442c949f" translate="yes" xml:space="preserve">
          <source>N/A: The adapter does not run in a separate process, and therefore doesn't support retries.</source>
          <target state="translated">N/A:アダプタは別のプロセスで実行されないため、再試行はサポートされません。</target>
        </trans-unit>
        <trans-unit id="9089a789f0069c4bce0cc6730a22c574fd4aa9e0" translate="yes" xml:space="preserve">
          <source>N/A: The adapter does not support queuing, and therefore sorting them.</source>
          <target state="translated">N/A:アダプタはキューイングをサポートしていません。</target>
        </trans-unit>
        <trans-unit id="a0fcee9ccee4f7f243b5a494a4b2459fafb9c16a" translate="yes" xml:space="preserve">
          <source>N/A: The adapter does not support queuing.</source>
          <target state="translated">N/A:アダプタはキューイングをサポートしていません。</target>
        </trans-unit>
        <trans-unit id="90355c194c9abb6ca5245c0286a948195ec867f6" translate="yes" xml:space="preserve">
          <source>N/A: This adapter does not run in a separate process, and therefore timeout is unsupported.</source>
          <target state="translated">N/A:このアダプタは別のプロセスで実行されないため、タイムアウトはサポートされていません。</target>
        </trans-unit>
        <trans-unit id="e0aabc7fc6e90c4c16eb42d4f9847ec6f8b51711" translate="yes" xml:space="preserve">
          <source>NAME_COMPILABLE_REGEXP</source>
          <target state="translated">NAME_COMPILABLE_REGEXP</target>
        </trans-unit>
        <trans-unit id="364b0ae6cebce8b9b4faf58d96a008e3e0acd1b0" translate="yes" xml:space="preserve">
          <source>NATIVE_DATABASE_TYPES</source>
          <target state="translated">NATIVE_DATABASE_TYPES</target>
        </trans-unit>
        <trans-unit id="34b8b86577c6bd56c6ad5b564be28cd2f908903d" translate="yes" xml:space="preserve">
          <source>NB: The output may still contain unescaped '&amp;lt;', '&amp;gt;', '&amp;amp;' characters and confuse browsers.</source>
          <target state="translated">注意：出力には、エスケープされていない「&amp;lt;」、「&amp;gt;」、「＆」の文字が含まれている場合があり、ブラウザを混乱させる可能性があります。</target>
        </trans-unit>
        <trans-unit id="66aabd91fc41cc4635aad94dc77d93a0e2eac67b" translate="yes" xml:space="preserve">
          <source>NEW</source>
          <target state="translated">NEW</target>
        </trans-unit>
        <trans-unit id="dadac5bcf4c6b4db403b0dcea4d07dd23acca6ba" translate="yes" xml:space="preserve">
          <source>NORMALIZATION_FORMS</source>
          <target state="translated">NORMALIZATION_FORMS</target>
        </trans-unit>
        <trans-unit id="5050fdd648c2c3c100230e8520feff151e76b22f" translate="yes" xml:space="preserve">
          <source>NOT Conditions</source>
          <target state="translated">NOT条件</target>
        </trans-unit>
        <trans-unit id="6f4c044303492a84dc9ba161a054727b65adabe0" translate="yes" xml:space="preserve">
          <source>NOTE! Unless told otherwise, Rails expects an action to render a template with the same name, contained in a folder named after its controller. If this controller is an API responding with 204 (No Content), which does not require a template, then this error will occur when trying to access it via browser, since we expect an HTML template to be rendered for such requests. If that's the case, carry on.</source>
          <target state="translated">注意!別段の指示がない限り、Railsはアクションがコントローラの名前にちなんだフォルダに含まれる同じ名前のテンプレートをレンダリングすることを期待しています。このコントローラがテンプレートを必要としない204 (No Content)で応答するAPIである場合、このようなリクエストに対してHTMLテンプレートがレンダリングされることを期待しているため、ブラウザ経由でアクセスしようとするとこのエラーが発生します。もしそうであれば、続けてください。</target>
        </trans-unit>
        <trans-unit id="b1514b2ceda44e8e38aab4c4cd4e588f35b833e1" translate="yes" xml:space="preserve">
          <source>NOTE: &lt;a href=&quot;test&quot;&gt;&lt;code&gt;Test&lt;/code&gt;&lt;/a&gt; adapter extends the &lt;code&gt;ActionCable::SubscriptionsAdapter::Async&lt;/code&gt; adapter, so it could be used in system tests too.</source>
          <target state="translated">注：&lt;a href=&quot;test&quot;&gt; &lt;code&gt;Test&lt;/code&gt; &lt;/a&gt;アダプターは &lt;code&gt;ActionCable::SubscriptionsAdapter::Async&lt;/code&gt; アダプターを拡張するため、システムテストでも使用できます。</target>
        </trans-unit>
        <trans-unit id="53c9b907d5e9772f96c352467530121723a24dcc" translate="yes" xml:space="preserve">
          <source>NOTE: &lt;a href=&quot;test&quot;&gt;Test&lt;/a&gt; adapter extends the &lt;code&gt;ActionCable::SubscriptionsAdapter::Async&lt;/code&gt; adapter, so it could be used in system tests too.</source>
          <target state="translated">注：&lt;a href=&quot;test&quot;&gt;テスト&lt;/a&gt;アダプターは &lt;code&gt;ActionCable::SubscriptionsAdapter::Async&lt;/code&gt; アダプターを拡張するため、システムテストでも使用できます。</target>
        </trans-unit>
        <trans-unit id="82b300c91ff4f01a70796137110481c8c73e629a" translate="yes" xml:space="preserve">
          <source>NOTE: &lt;code&gt;method_name&lt;/code&gt; passed to &lt;a href=&quot;callbacks#method-i-define_model_callbacks&quot;&gt;#define_model_callbacks&lt;/a&gt; must not end with &lt;code&gt;!&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt; or &lt;code&gt;=&lt;/code&gt;.</source>
          <target state="translated">注： &lt;code&gt;method_name&lt;/code&gt; 渡される&lt;a href=&quot;callbacks#method-i-define_model_callbacks&quot;&gt;method_name&lt;/a&gt;は &lt;code&gt;!&lt;/code&gt; で終わってはなりません。、 &lt;code&gt;?&lt;/code&gt; または &lt;code&gt;=&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b1f01e821d2105736464d9a1834f5f53a57aca84" translate="yes" xml:space="preserve">
          <source>NOTE: &lt;code&gt;method_name&lt;/code&gt; passed to &lt;a href=&quot;callbacks#method-i-define_model_callbacks&quot;&gt;&lt;code&gt;define_model_callbacks&lt;/code&gt;&lt;/a&gt; must not end with &lt;code&gt;!&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt; or &lt;code&gt;=&lt;/code&gt;.</source>
          <target state="translated">注： &lt;code&gt;method_name&lt;/code&gt; に渡さ&lt;a href=&quot;callbacks#method-i-define_model_callbacks&quot;&gt; &lt;code&gt;define_model_callbacks&lt;/code&gt; &lt;/a&gt;で終わっていなければなりません &lt;code&gt;!&lt;/code&gt; 、 &lt;code&gt;?&lt;/code&gt; または &lt;code&gt;=&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="db0ce667a0ad77170e45745c759f9a92c263c9f7" translate="yes" xml:space="preserve">
          <source>NOTE: By its nature, batch processing is subject to race conditions if other processes are modifying the database.</source>
          <target state="translated">注:バッチ処理は、その性質上、他のプロセスがデータベースを変更している場合、競合条件の対象となります。</target>
        </trans-unit>
        <trans-unit id="77b33c7bf4dc36bae9675fcf16d7f5676777c7ff" translate="yes" xml:space="preserve">
          <source>NOTE: Calling &lt;code&gt;validate&lt;/code&gt; multiple times on the same method will overwrite previous definitions.</source>
          <target state="translated">注：同じメソッドで &lt;code&gt;validate&lt;/code&gt; を複数回呼び出すと、以前の定義が上書きされます。</target>
        </trans-unit>
        <trans-unit id="c1244e2875a89e59d59e46c3fbb7b9c9041b6c73" translate="yes" xml:space="preserve">
          <source>NOTE: Calling the same callback multiple times will overwrite previous callback definitions.</source>
          <target state="translated">注意:同じコールバックを複数回呼び出すと、以前のコールバック定義が上書きされます。</target>
        </trans-unit>
        <trans-unit id="459a5611b4fb3651cbcf5fb40048074d44f62f2e" translate="yes" xml:space="preserve">
          <source>NOTE: Discarded selects will default to 1. So if no month select is available, January will be assumed.</source>
          <target state="translated">注:破棄されたセレクトはデフォルトで1になりますので、月のセレクトがない場合は1月を想定しています。</target>
        </trans-unit>
        <trans-unit id="35bb5d930d5344ab9c4661a4a291c03f392618bf" translate="yes" xml:space="preserve">
          <source>NOTE: Each nesting level will merge inherited defaults in addition to their own.</source>
          <target state="translated">注:各入れ子レベルでは、独自のデフォルトに加えて、継承されたデフォルトもマージされます。</target>
        </trans-unit>
        <trans-unit id="e780dd9cbb0eaceca23a69ca7ca982d3efb3e44a" translate="yes" xml:space="preserve">
          <source>NOTE: If you are going to iterate through each record, you should call each_record on the yielded BatchEnumerator:</source>
          <target state="translated">注意:各レコードを繰り返し処理する場合は、生成された BatchEnumerator で each_record を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="c165b1ec162ea38175fc46f3bdc9c823fddf560e" translate="yes" xml:space="preserve">
          <source>NOTE: If you are using structured database data types (e.g. PostgreSQL &lt;code&gt;hstore&lt;/code&gt;/&lt;code&gt;json&lt;/code&gt;, or MySQL 5.7+ &lt;code&gt;json&lt;/code&gt;) there is no need for the serialization provided by .store. Simply use .store_accessor instead to generate the accessor methods. Be aware that these columns use a string keyed hash and do not allow access using a symbol.</source>
          <target state="translated">注：構造化データベースのデータ型（PostgreSQL &lt;code&gt;hstore&lt;/code&gt; / &lt;code&gt;json&lt;/code&gt; 、MySQL 5.7+ &lt;code&gt;json&lt;/code&gt; など）を使用している場合は、.storeによって提供されるシリアル化は必要ありません。代わりに.store_accessorを使用して、アクセサメソッドを生成します。これらの列は文字列キーのハッシュを使用し、記号を使用したアクセスを許可しないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="9110f77a80c94aa7c9d01ac9563f7305028fc714" translate="yes" xml:space="preserve">
          <source>NOTE: If you are using structured database data types (eg. PostgreSQL &lt;code&gt;hstore&lt;/code&gt;/&lt;code&gt;json&lt;/code&gt;, or MySQL 5.7+ &lt;code&gt;json&lt;/code&gt;) there is no need for the serialization provided by .store. Simply use .store_accessor instead to generate the accessor methods. Be aware that these columns use a string keyed hash and do not allow access using a symbol.</source>
          <target state="translated">注：構造化データベースデータタイプ（PostgreSQL &lt;code&gt;hstore&lt;/code&gt; / &lt;code&gt;json&lt;/code&gt; 、またはMySQL 5.7+ &lt;code&gt;json&lt;/code&gt; など）を使用している場合、.storeによるシリアル化は必要ありません。代わりに.store_accessorを使用して、アクセサーメソッドを生成します。これらの列は文字列キー付きハッシュを使用し、記号を使用したアクセスを許可しないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="d5aa3f2e463dee8d6a93b822667caffdd28ed89f" translate="yes" xml:space="preserve">
          <source>NOTE: It's not possible to set the order. That is automatically set to ascending on the primary key (&amp;ldquo;id ASC&amp;rdquo;) to make the batch ordering consistent. Therefore the primary key must be orderable, e.g. an integer or a string.</source>
          <target state="translated">注：順序を設定することはできません。これは、バッチの順序に一貫性を持たせるために、主キー（「id ASC」）で昇順に自動的に設定されます。したがって、主キーは順序付け可能である必要があります（整数または文字列など）。</target>
        </trans-unit>
        <trans-unit id="dde7531f52bc0c757ff3d34c5fe675032ed0dc59" translate="yes" xml:space="preserve">
          <source>NOTE: It's not possible to set the order. That is automatically set to ascending on the primary key (&amp;ldquo;id ASC&amp;rdquo;) to make the batch ordering work. This also means that this method only works when the primary key is orderable (e.g. an integer or string).</source>
          <target state="translated">注：順序を設定することはできません。これは、バッチ注文を機能させるために、主キー（「id ASC」）で昇順に自動的に設定されます。これは、このメソッドが機能するのは、主キーが順序付け可能な場合（整数または文字列など）だけであることも意味します。</target>
        </trans-unit>
        <trans-unit id="29f14cc49202f0a1b0bb8a6f8ce37815657aef23" translate="yes" xml:space="preserve">
          <source>NOTE: Must be subscribed.</source>
          <target state="translated">注:購読している必要があります。</target>
        </trans-unit>
        <trans-unit id="6dc6141be1468034c8070346d640d8a829f5f57d" translate="yes" xml:space="preserve">
          <source>NOTE: Only the option tags are returned, you have to wrap this call in a regular HTML select tag.</source>
          <target state="translated">注意:オプションタグのみが返されるので、この呼び出しを通常のHTML selectタグでラップする必要があります。</target>
        </trans-unit>
        <trans-unit id="23e989d5cf34d6bf2d00ade49c344f06feede155" translate="yes" xml:space="preserve">
          <source>NOTE: Order can be ascending (:asc) or descending (:desc). It is automatically set to ascending on the primary key (&amp;ldquo;id ASC&amp;rdquo;). This also means that this method only works when the primary key is orderable (e.g. an integer or string).</source>
          <target state="translated">注：順序は昇順（：asc）または降順（：desc）にすることができます。主キー（「idASC」）で自動的に昇順に設定されます。これは、このメソッドが主キーが注文可能（整数や文字列など）の場合にのみ機能することも意味します。</target>
        </trans-unit>
        <trans-unit id="6943a719f65fb990d18007df480f8c42cd9b18c1" translate="yes" xml:space="preserve">
          <source>NOTE: Other URL helpers can be called in the block but be careful not to invoke your custom URL helper again otherwise it will result in a stack overflow error.</source>
          <target state="translated">注意:他の URL ヘルパーはブロック内で呼び出すことができますが、カスタム URL ヘルパーを再度呼び出さないように注意してください。</target>
        </trans-unit>
        <trans-unit id="b156bf73ae0bbaecb78b98c9bfa46bc9edd1b4e2" translate="yes" xml:space="preserve">
          <source>NOTE: Ruby 2.4 and later support native Unicode case mappings:</source>
          <target state="translated">注:Ruby 2.4 以降では、ネイティブの Unicode 大文字小文字のマッピングをサポートしています。</target>
        </trans-unit>
        <trans-unit id="d739e914d4cbb746ba24e8856710882ef4ceb321" translate="yes" xml:space="preserve">
          <source>NOTE: The :local timezone is Ruby's &lt;strong&gt;process&lt;/strong&gt; timezone, i.e. ENV.</source>
          <target state="translated">注：：localタイムゾーンは、Rubyの&lt;strong&gt;プロセス&lt;/strong&gt;タイムゾーン、つまりENVです。</target>
        </trans-unit>
        <trans-unit id="70a7e32800af02b9f8831a9f78781ff3e3c0fa4e" translate="yes" xml:space="preserve">
          <source>NOTE: The &lt;code&gt;direct&lt;/code&gt; method can't be used inside of a scope block such as &lt;code&gt;namespace&lt;/code&gt; or &lt;code&gt;scope&lt;/code&gt; and will raise an error if it detects that it is.</source>
          <target state="translated">注： &lt;code&gt;direct&lt;/code&gt; メソッドは、 &lt;code&gt;namespace&lt;/code&gt; や &lt;code&gt;scope&lt;/code&gt; などのスコープブロック内では使用できません。そうであることが検出されると、エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="84504c0e05d0a3bcbefa67ca6b2d127e74bce741" translate="yes" xml:space="preserve">
          <source>NOTE: The &lt;code&gt;resolve&lt;/code&gt; method can't be used inside of a scope block such as &lt;code&gt;namespace&lt;/code&gt; or &lt;code&gt;scope&lt;/code&gt; and will raise an error if it detects that it is.</source>
          <target state="translated">注： &lt;code&gt;resolve&lt;/code&gt; メソッドは、 &lt;code&gt;namespace&lt;/code&gt; や &lt;code&gt;scope&lt;/code&gt; などのスコープブロック内では使用できません。そうであることが検出されると、エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="2e424a8b8f539c8c51767bfb36b1996ecd86b6d7" translate="yes" xml:space="preserve">
          <source>NOTE: The HTML options &lt;code&gt;disabled&lt;/code&gt;, &lt;code&gt;readonly&lt;/code&gt;, and &lt;code&gt;multiple&lt;/code&gt; can all be treated as booleans. So specifying &lt;code&gt;disabled: true&lt;/code&gt; will give &lt;code&gt;disabled=&quot;disabled&quot;&lt;/code&gt;.</source>
          <target state="translated">注：HTMLオプションの &lt;code&gt;disabled&lt;/code&gt; 、 &lt;code&gt;readonly&lt;/code&gt; 、および &lt;code&gt;multiple&lt;/code&gt; はすべてブール値として扱うことができます。したがって、 &lt;code&gt;disabled: true&lt;/code&gt; を指定すると、 &lt;code&gt;disabled=&quot;disabled&quot;&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="4273e9c86cc14cbdf878c0d79b4f8635103aeab2" translate="yes" xml:space="preserve">
          <source>NOTE: The default validations with the exception of &lt;code&gt;uniqueness&lt;/code&gt; will work. For example, if you want to check for &lt;code&gt;uniqueness&lt;/code&gt; with &lt;code&gt;hstore&lt;/code&gt; you will need to use a custom validation to handle it.</source>
          <target state="translated">注： &lt;code&gt;uniqueness&lt;/code&gt; を除くデフォルトの検証が機能します。たとえば、あなたがチェックしたい場合は &lt;code&gt;uniqueness&lt;/code&gt; で &lt;code&gt;hstore&lt;/code&gt; のあなたがそれを処理するためにカスタム検証を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="ec2abfcf21d7eecb069b20fd390f5d0cd5e855b1" translate="yes" xml:space="preserve">
          <source>NOTE: The formatting and content of this middleware's output is intended for human consumption, and should be expected to change between releases.</source>
          <target state="translated">注:このミドルウェアの出力のフォーマットと内容は、人間が消費することを目的としており、リリースの間に変更されることが予想されます。</target>
        </trans-unit>
        <trans-unit id="df6a3d05f48d5164f01397df599343fc4f7b977f" translate="yes" xml:space="preserve">
          <source>NOTE: The returned records are in the same order as the ids you provide. If you want the results to be sorted by database, you can use &lt;a href=&quot;querymethods#method-i-where&quot;&gt;&lt;code&gt;ActiveRecord::QueryMethods#where&lt;/code&gt;&lt;/a&gt; method and provide an explicit &lt;a href=&quot;querymethods#method-i-order&quot;&gt;&lt;code&gt;ActiveRecord::QueryMethods#order&lt;/code&gt;&lt;/a&gt; option. But &lt;a href=&quot;querymethods#method-i-where&quot;&gt;&lt;code&gt;ActiveRecord::QueryMethods#where&lt;/code&gt;&lt;/a&gt; method doesn't raise &lt;a href=&quot;recordnotfound&quot;&gt;&lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">注：返されるレコードは、指定したIDと同じ順序です。結果をデータベースで並べ替える場合は、&lt;a href=&quot;querymethods#method-i-where&quot;&gt; &lt;code&gt;ActiveRecord::QueryMethods#where&lt;/code&gt; &lt;/a&gt;メソッドを使用して、明示的な&lt;a href=&quot;querymethods#method-i-order&quot;&gt; &lt;code&gt;ActiveRecord::QueryMethods#order&lt;/code&gt; &lt;/a&gt;オプションを指定できます。しかし、&lt;a href=&quot;querymethods#method-i-where&quot;&gt; &lt;code&gt;ActiveRecord::QueryMethods#where&lt;/code&gt; &lt;/a&gt;メソッドは&lt;a href=&quot;recordnotfound&quot;&gt; &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; &lt;/a&gt;せません。</target>
        </trans-unit>
        <trans-unit id="ba561ebdca75e4e27ed2d7158136f74d0787b8fb" translate="yes" xml:space="preserve">
          <source>NOTE: The returned records are in the same order as the ids you provide. If you want the results to be sorted by database, you can use &lt;a href=&quot;querymethods#method-i-where&quot;&gt;ActiveRecord::QueryMethods#where&lt;/a&gt; method and provide an explicit &lt;a href=&quot;querymethods#method-i-order&quot;&gt;ActiveRecord::QueryMethods#order&lt;/a&gt; option. But &lt;a href=&quot;querymethods#method-i-where&quot;&gt;ActiveRecord::QueryMethods#where&lt;/a&gt; method doesn't raise &lt;a href=&quot;recordnotfound&quot;&gt;ActiveRecord::RecordNotFound&lt;/a&gt;.</source>
          <target state="translated">注：返されるレコードは、指定したIDと同じ順序です。結果をデータベースでソートする場合は、&lt;a href=&quot;querymethods#method-i-where&quot;&gt;ActiveRecord :: QueryMethods＃where&lt;/a&gt;メソッドを使用して、明示的な&lt;a href=&quot;querymethods#method-i-order&quot;&gt;ActiveRecord :: QueryMethods＃order&lt;/a&gt;オプションを指定できます。しかし、&lt;a href=&quot;querymethods#method-i-where&quot;&gt;ActiveRecord :: QueryMethods＃where&lt;/a&gt;メソッドは&lt;a href=&quot;recordnotfound&quot;&gt;ActiveRecord :: RecordNotFoundを発生さ&lt;/a&gt;せません。</target>
        </trans-unit>
        <trans-unit id="d051f3032ec6e426d27e0a95cae128b377cb5dff" translate="yes" xml:space="preserve">
          <source>NOTE: There is no &lt;code&gt;key_will_change!&lt;/code&gt; method for accessors, use &lt;code&gt;store_will_change!&lt;/code&gt; instead.</source>
          <target state="translated">注： &lt;code&gt;key_will_change!&lt;/code&gt; はありません！アクセサーのメソッドは、 &lt;code&gt;store_will_change!&lt;/code&gt; 代わりに。</target>
        </trans-unit>
        <trans-unit id="762c4a804d75ee92e1459fdc1f1254495115d31d" translate="yes" xml:space="preserve">
          <source>NOTE: This approach has been deprecated for end-user code in favor of &lt;a href=&quot;../module#method-i-thread_mattr_accessor&quot;&gt;thread_mattr_accessor&lt;/a&gt; and friends. Please use that approach instead.</source>
          <target state="translated">注：このアプローチは、&lt;a href=&quot;../module#method-i-thread_mattr_accessor&quot;&gt;thread_mattr_accessor&lt;/a&gt;などを優先して、エンドユーザーコードでは推奨されていません。代わりにそのアプローチを使用してください。</target>
        </trans-unit>
        <trans-unit id="d0de1ac13c80a92b6f77a642c82b1dcfb7e1d9e9" translate="yes" xml:space="preserve">
          <source>NOTE: This check is performed only if &lt;code&gt;password_confirmation&lt;/code&gt; is not &lt;code&gt;nil&lt;/code&gt;. To require confirmation, make sure to add a presence check for the confirmation attribute:</source>
          <target state="translated">注：このチェックは、 &lt;code&gt;password_confirmation&lt;/code&gt; が &lt;code&gt;nil&lt;/code&gt; でない場合にのみ実行されます。確認を要求するには、確認属性の存在確認を必ず追加してください。</target>
        </trans-unit>
        <trans-unit id="84dd77619c472769d8bdcac15ddd778d56672d39" translate="yes" xml:space="preserve">
          <source>NOTE: This custom behavior only applies to simple polymorphic URLs where a single model instance is passed and not more complicated forms, e.g:</source>
          <target state="translated">NOTE:このカスタム動作は、単一のモデルインスタンスが渡される単純なポリモーフィックURLにのみ適用され、より複雑な形式(例えば、以下のような形式)には適用されません。</target>
        </trans-unit>
        <trans-unit id="951ec43c360ce92554228518ef500aed9eae55c6" translate="yes" xml:space="preserve">
          <source>NOTE: This validation will not fail if the association hasn't been assigned. If you want to ensure that the association is both present and guaranteed to be valid, you also need to use &lt;a href=&quot;classmethods#method-i-validates_presence_of&quot;&gt;validates_presence_of&lt;/a&gt;.</source>
          <target state="translated">注：この検証は、関連付けが割り当てられていない場合でも失敗しません。関連付けが存在し、有効であることを保証したい場合は、&lt;a href=&quot;classmethods#method-i-validates_presence_of&quot;&gt;validates_presence_of&lt;/a&gt;も使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="e4e81557c5494f5f1a9d85acc000f2a8822047be" translate="yes" xml:space="preserve">
          <source>NOTE: This validation will not fail while using it with an association if the latter was assigned but not valid. If you want to ensure that it is both present and valid, you also need to use &lt;a href=&quot;classmethods#method-i-validates_associated&quot;&gt;validates_associated&lt;/a&gt;.</source>
          <target state="translated">注：アソシエーションが割り当てられているが有効ではない場合、アソシエーションで使用してもこの検証は失敗しません。これが存在していて有効であることを確認したい場合は、&lt;a href=&quot;classmethods#method-i-validates_associated&quot;&gt;validates_associated&lt;/a&gt;も使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="d5f9e20a8fba6546eac5061bae525520123d4e92" translate="yes" xml:space="preserve">
          <source>NOTE: This won't affect any &lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt; objects that have already been created, e.g. any model timestamp attributes that have been read before the block will remain in the application's default timezone.</source>
          <target state="translated">注：これは、すでに作成されている &lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt; オブジェクトには影響しません。たとえば、ブロックがアプリケーションのデフォルトのタイムゾーンにとどまる前に読み取られたモデルのタイムスタンプ属性は影響を受けません。</target>
        </trans-unit>
        <trans-unit id="01485856ed54cb882a5920d009b94f662f247905" translate="yes" xml:space="preserve">
          <source>NOTE: You cannot call class methods implicitly inside of with_options. You can access these methods using the class name instead:</source>
          <target state="translated">注意:with_options の内部では、クラスのメソッドを暗黙的に呼び出すことはできません。これらのメソッドにアクセスするには、代わりにクラス名を使用します。</target>
        </trans-unit>
        <trans-unit id="001af184a34c3b7f841644c2049b13fde9247dcf" translate="yes" xml:space="preserve">
          <source>NOTE: queue_classic supports job scheduling since version 3.1. For older versions you can use the queue_classic-later gem.</source>
          <target state="translated">NOTE:queue_classic はバージョン 3.1 以降のジョブスケジューリングをサポートしています。それ以前のバージョンでは、 queue_classic-later gem を使うことができます。</target>
        </trans-unit>
        <trans-unit id="fa2e3aa9db1f23e790f7456ee1a1e5d29681ed24" translate="yes" xml:space="preserve">
          <source>NOT_NULL_VIOLATION</source>
          <target state="translated">NOT_NULL_VIOLATION</target>
        </trans-unit>
        <trans-unit id="d2a96aa7908b40b3466fee80b9d1ee30c01975eb" translate="yes" xml:space="preserve">
          <source>NO_CACHE</source>
          <target state="translated">NO_CACHE</target>
        </trans-unit>
        <trans-unit id="00b1f4e9b252474c44034ab40ad8a0aa89bcea94" translate="yes" xml:space="preserve">
          <source>NO_CONTENT_CODES</source>
          <target state="translated">NO_CONTENT_CODES</target>
        </trans-unit>
        <trans-unit id="150876396a763bfc0cea64c9d8c23622329252d0" translate="yes" xml:space="preserve">
          <source>NO_STORE</source>
          <target state="translated">NO_STORE</target>
        </trans-unit>
        <trans-unit id="d21e27fa2aab628c195a197ed9f03845aeb79542" translate="yes" xml:space="preserve">
          <source>NULL_ORIGIN_MESSAGE</source>
          <target state="translated">NULL_ORIGIN_MESSAGE</target>
        </trans-unit>
        <trans-unit id="99a01813d236bc88b0d2843edbc671a623558b8d" translate="yes" xml:space="preserve">
          <source>NUMERIC_VALUE_OUT_OF_RANGE</source>
          <target state="translated">NUMERIC_VALUE_OUT_OF_RANGE</target>
        </trans-unit>
        <trans-unit id="70baa5f2e3ea149d3efba73d8ae1136c8b2465d4" translate="yes" xml:space="preserve">
          <source>Name of gem where method is deprecated</source>
          <target state="translated">メソッドが非推奨とされているgemの名前</target>
        </trans-unit>
        <trans-unit id="32e659ad4b09e8447ec3181bf0a4d92b88b4c1c6" translate="yes" xml:space="preserve">
          <source>Name of the channel class</source>
          <target state="translated">チャンネルクラスの名前</target>
        </trans-unit>
        <trans-unit id="71a2fbae76fe99fa8a275b3c0d7d46236e5b55a9" translate="yes" xml:space="preserve">
          <source>Name of the mailer class</source>
          <target state="translated">メーラークラスの名前</target>
        </trans-unit>
        <trans-unit id="031346423a1b0ce1d227b1b30affcb044013a924" translate="yes" xml:space="preserve">
          <source>Name of the middleware</source>
          <target state="translated">ミドルウェア名</target>
        </trans-unit>
        <trans-unit id="78457f7d39785050562a7dff3d2e99a2e0e79866" translate="yes" xml:space="preserve">
          <source>Name of the operation</source>
          <target state="translated">操作名</target>
        </trans-unit>
        <trans-unit id="03122e3a5b21f57d2d883c6a0a49357e202d911c" translate="yes" xml:space="preserve">
          <source>Name of the service</source>
          <target state="translated">サービス名</target>
        </trans-unit>
        <trans-unit id="485336a1ad820f743cd287405e70730b21d6ded3" translate="yes" xml:space="preserve">
          <source>Name of the store class</source>
          <target state="translated">ストアクラスの名前</target>
        </trans-unit>
        <trans-unit id="1c4922e237a35b808877d9a82e3b4f1d76a9d175" translate="yes" xml:space="preserve">
          <source>Name#!~</source>
          <target state="translated">Name#!~</target>
        </trans-unit>
        <trans-unit id="e792f5520042a09fdd9b5e1e673cfeee3c77200f" translate="yes" xml:space="preserve">
          <source>Name#&amp;lt;=&amp;gt;</source>
          <target state="translated">Name#&amp;lt;=&amp;gt;</target>
        </trans-unit>
        <trans-unit id="1179728f0d5f43d5293a76a78366464d8a60734c" translate="yes" xml:space="preserve">
          <source>Name#==</source>
          <target state="translated">Name#==</target>
        </trans-unit>
        <trans-unit id="72068bf4dc62054d1aa334d91a8f73f1a4df79d4" translate="yes" xml:space="preserve">
          <source>Name#===</source>
          <target state="translated">Name#===</target>
        </trans-unit>
        <trans-unit id="7e2c499ce65cfd2fc2c0d8d2ec1ae1cf9580ba97" translate="yes" xml:space="preserve">
          <source>Name#=~</source>
          <target state="translated">Name#=~</target>
        </trans-unit>
        <trans-unit id="e3a602bd022b88eb5fde04d80ef58513bf53d879" translate="yes" xml:space="preserve">
          <source>Name#cache_key</source>
          <target state="translated">Name#cache_key</target>
        </trans-unit>
        <trans-unit id="4681debcf82ac876bdf9bce21fce76c198d4aa93" translate="yes" xml:space="preserve">
          <source>Name#collection</source>
          <target state="translated">Name#collection</target>
        </trans-unit>
        <trans-unit id="ddf13fdc6f4b9d40165f558c9f93bad094528b73" translate="yes" xml:space="preserve">
          <source>Name#element</source>
          <target state="translated">Name#element</target>
        </trans-unit>
        <trans-unit id="463ae0c60d41feba7ad71200788dc4337d894175" translate="yes" xml:space="preserve">
          <source>Name#eql?</source>
          <target state="translated">Name#eql?</target>
        </trans-unit>
        <trans-unit id="98daf91647588f6bd7efd46dce99631c206bb5c1" translate="yes" xml:space="preserve">
          <source>Name#human</source>
          <target state="translated">Name#human</target>
        </trans-unit>
        <trans-unit id="c97e546358582b5a5ba1ea7bdf50be71b53e922b" translate="yes" xml:space="preserve">
          <source>Name#i18n_key</source>
          <target state="translated">Name#i18n_key</target>
        </trans-unit>
        <trans-unit id="c22528385d14458160cc452921eaab5c5a7bdce5" translate="yes" xml:space="preserve">
          <source>Name#match?</source>
          <target state="translated">Name#match?</target>
        </trans-unit>
        <trans-unit id="eee58f9d0bbf2eb7debc13e44da843d09fd29e93" translate="yes" xml:space="preserve">
          <source>Name#name</source>
          <target state="translated">Name#name</target>
        </trans-unit>
        <trans-unit id="18b2ab85207f22841861f5f4e4e3c8548355b26c" translate="yes" xml:space="preserve">
          <source>Name#param_key</source>
          <target state="translated">Name#param_key</target>
        </trans-unit>
        <trans-unit id="d7cc97c1964b5845cb4a881ef26f71711ce1bde7" translate="yes" xml:space="preserve">
          <source>Name#plural</source>
          <target state="translated">Name#plural</target>
        </trans-unit>
        <trans-unit id="c5f2701a378862cb6c909900693c993cdb5a070a" translate="yes" xml:space="preserve">
          <source>Name#route_key</source>
          <target state="translated">Name#route_key</target>
        </trans-unit>
        <trans-unit id="ea2815d1e3255ea3fe84eecd0b1534fda2f22333" translate="yes" xml:space="preserve">
          <source>Name#singular</source>
          <target state="translated">Name#singular</target>
        </trans-unit>
        <trans-unit id="3f1cb4167052af9701bd98eaab092beb46b304fb" translate="yes" xml:space="preserve">
          <source>Name#singular_route_key</source>
          <target state="translated">Name#singular_route_key</target>
        </trans-unit>
        <trans-unit id="5a69bdd1ef58b83bac730aaf7e46814d70697147" translate="yes" xml:space="preserve">
          <source>Name#to_s</source>
          <target state="translated">Name#to_s</target>
        </trans-unit>
        <trans-unit id="7ce74ccf007c0a9889745b2a5abd494e855bfcfa" translate="yes" xml:space="preserve">
          <source>Name#to_str</source>
          <target state="translated">Name#to_str</target>
        </trans-unit>
        <trans-unit id="055abe0c93806fd5fddede2eb9dd54fec55fd4c4" translate="yes" xml:space="preserve">
          <source>Name::new</source>
          <target state="translated">Name::new</target>
        </trans-unit>
        <trans-unit id="552b247919a3a4142c7193f3218e6c006dc56731" translate="yes" xml:space="preserve">
          <source>NameError</source>
          <target state="translated">NameError</target>
        </trans-unit>
        <trans-unit id="cd2bcf0c29669d641e5e068f2807dc580ed514d4" translate="yes" xml:space="preserve">
          <source>NameError#missing_name</source>
          <target state="translated">NameError#missing_name</target>
        </trans-unit>
        <trans-unit id="6519308d40a377cea33b21720a5e1eee430463f7" translate="yes" xml:space="preserve">
          <source>NameError#missing_name?</source>
          <target state="translated">NameError#missing_name?</target>
        </trans-unit>
        <trans-unit id="83cd88833f32f706e162e5b2c5207612273bba68" translate="yes" xml:space="preserve">
          <source>Named Route Helper</source>
          <target state="translated">ネームドルートヘルパー</target>
        </trans-unit>
        <trans-unit id="6243d7a9ebe509fa90d17fc1dec58ea6b19bcd3f" translate="yes" xml:space="preserve">
          <source>Named routes</source>
          <target state="translated">ネームドルート</target>
        </trans-unit>
        <trans-unit id="fb73760ca2f5e5b7055b35a7dfc2d2a936f9ee3d" translate="yes" xml:space="preserve">
          <source>Named scopes can also have extensions, just as with &lt;a href=&quot;../../associations/classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt; declarations:</source>
          <target state="translated">名前付きスコープは、&lt;a href=&quot;../../associations/classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt;宣言と同様に、拡張機能を持つこともできます。</target>
        </trans-unit>
        <trans-unit id="c53b64fd17c082e6beb4e1aca64ab7d44f35aa7e" translate="yes" xml:space="preserve">
          <source>Namespace isolation to &lt;code&gt;config/routes.rb&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;config/routes.rb&lt;/code&gt; への名前空間の分離：</target>
        </trans-unit>
        <trans-unit id="79e8ca566bc6852923638a4ac14a1f95414dd757" translate="yes" xml:space="preserve">
          <source>Namespace isolation to &lt;code&gt;lib/blorgh/engine.rb&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;lib/blorgh/engine.rb&lt;/code&gt; への名前空間の分離：</target>
        </trans-unit>
        <trans-unit id="2d56b45380481a0442803331c3b08a5174717f0e" translate="yes" xml:space="preserve">
          <source>Namespaces are supported. The following calls include &lt;code&gt;Foo::BarHelper&lt;/code&gt;:</source>
          <target state="translated">名前空間がサポートされています。次の呼び出しには、 &lt;code&gt;Foo::BarHelper&lt;/code&gt; ：が含まれます。</target>
        </trans-unit>
        <trans-unit id="8b4617b659a51d0b5756991a46730570511eef04" translate="yes" xml:space="preserve">
          <source>Naming</source>
          <target state="translated">Naming</target>
        </trans-unit>
        <trans-unit id="8af56df8a9cb35f56b67edd6d269d4e86defc0d0" translate="yes" xml:space="preserve">
          <source>Naming Conventions</source>
          <target state="translated">命名規約</target>
        </trans-unit>
        <trans-unit id="3c2aa7c616223e41c395f07cffdda74786d5855d" translate="yes" xml:space="preserve">
          <source>Naming Routes</source>
          <target state="translated">ネーミングルート</target>
        </trans-unit>
        <trans-unit id="727e70bd9d31b16f99e09131ffa84f73d9c0cdab" translate="yes" xml:space="preserve">
          <source>Naming conflicts of this kind are rare in practice, but if one occurs, &lt;code&gt;require_dependency&lt;/code&gt; provides a solution by ensuring that the constant needed to trigger the heuristic is defined in the conflicting place.</source>
          <target state="translated">この種の名前の競合は実際にはまれですが、 &lt;code&gt;require_dependency&lt;/code&gt; した場合、require_dependencyは、ヒューリスティックをトリガーするために必要な定数が競合する場所で定義されるようにすることで解決策を提供します。</target>
        </trans-unit>
        <trans-unit id="003199f690943e090431ea9315afa6128057cf84" translate="yes" xml:space="preserve">
          <source>Naming#model_name</source>
          <target state="translated">Naming#model_name</target>
        </trans-unit>
        <trans-unit id="37b2dfaa964981c5857c8884cc0c8a3ba035ecb2" translate="yes" xml:space="preserve">
          <source>Naming::param_key</source>
          <target state="translated">Naming::param_key</target>
        </trans-unit>
        <trans-unit id="15a5e01708eab09298595ec3df33c78823c5effa" translate="yes" xml:space="preserve">
          <source>Naming::plural</source>
          <target state="translated">Naming::plural</target>
        </trans-unit>
        <trans-unit id="e94910e8a8fee93c260867ec51d1f9417720d305" translate="yes" xml:space="preserve">
          <source>Naming::route_key</source>
          <target state="translated">Naming::route_key</target>
        </trans-unit>
        <trans-unit id="b08cbd482856c7e71807d58479b402a5eb900c01" translate="yes" xml:space="preserve">
          <source>Naming::singular</source>
          <target state="translated">Naming::singular</target>
        </trans-unit>
        <trans-unit id="e81567d4f4bc1b7dbbb3dc05722255fd642072fd" translate="yes" xml:space="preserve">
          <source>Naming::singular_route_key</source>
          <target state="translated">Naming::singular_route_key</target>
        </trans-unit>
        <trans-unit id="607b36733fc1c205aa141382646fa32e1828d2be" translate="yes" xml:space="preserve">
          <source>Naming::uncountable?</source>
          <target state="translated">Naming::uncountable?</target>
        </trans-unit>
        <trans-unit id="c7fccf3309993cfc8b035745c98b4d3c7546b8da" translate="yes" xml:space="preserve">
          <source>Neither of these rails commands do anything you could not do with &lt;code&gt;db:migrate&lt;/code&gt;. They are simply more convenient, since you do not need to explicitly specify the version to migrate to.</source>
          <target state="translated">これらのrailsコマンドはどちらも、 &lt;code&gt;db:migrate&lt;/code&gt; を使用して実行できなかった処理は行いません。移行先のバージョンを明示的に指定する必要がないため、これらの方がより便利です。</target>
        </trans-unit>
        <trans-unit id="adf5561db875bd103af28bb2ff6b642ea0049140" translate="yes" xml:space="preserve">
          <source>Neither of these rails commands do anything you could not do with &lt;code&gt;db:migrate&lt;/code&gt;. They are there for convenience, since you do not need to explicitly specify the version to migrate to.</source>
          <target state="translated">これらのrailsコマンドはどちらも、 &lt;code&gt;db:migrate&lt;/code&gt; では実行できなかったことを実行しません。移行先のバージョンを明示的に指定する必要がないため、これらは便宜上あります。</target>
        </trans-unit>
        <trans-unit id="e509697d698a7906a469d4a7b75c6a68f919eb56" translate="yes" xml:space="preserve">
          <source>Nested Associations</source>
          <target state="translated">入れ子になった協会</target>
        </trans-unit>
        <trans-unit id="7fba4d7bfc8f67d21d0ab22eb56f0af865916a65" translate="yes" xml:space="preserve">
          <source>Nested Attributes Examples</source>
          <target state="translated">入れ子になった属性の例</target>
        </trans-unit>
        <trans-unit id="4c468c4b63e979418047fd8eb368f74fa116c4f0" translate="yes" xml:space="preserve">
          <source>Nested Forms</source>
          <target state="translated">入れ子になったフォーム</target>
        </trans-unit>
        <trans-unit id="248022a870eb27897fa53e16452caafdbdabcf57" translate="yes" xml:space="preserve">
          <source>Nested Resources</source>
          <target state="translated">ネストされたリソース</target>
        </trans-unit>
        <trans-unit id="a886336ca42a0ed213b8b9ef83363bbd6b3472ac" translate="yes" xml:space="preserve">
          <source>Nested attribute writers are normal setter methods named after an association. The most common way of defining these writers is either with &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt; in a model definition or by defining a method with the proper name. For example: the attribute writer for the association &lt;code&gt;:address&lt;/code&gt; is called &lt;code&gt;address_attributes=&lt;/code&gt;.</source>
          <target state="translated">ネストされた属性ライターは、関連付けにちなんで名付けられた通常のセッターメソッドです。これらのライターを定義する最も一般的な方法は、モデル定義で &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt; を使用するか、適切な名前でメソッドを定義することです。例：関連付け &lt;code&gt;:address&lt;/code&gt; の属性ライターは、 &lt;code&gt;address_attributes=&lt;/code&gt; と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="8dba121940b3381c7ce96a44cb7145f206ea973c" translate="yes" xml:space="preserve">
          <source>Nested attributes allow you to save attributes on associated records through the parent. By default nested attribute updating is turned off and you can enable it using the &lt;a href=&quot;classmethods#method-i-accepts_nested_attributes_for&quot;&gt;#accepts_nested_attributes_for&lt;/a&gt; class method. When you enable nested attributes an attribute writer is defined on the model.</source>
          <target state="translated">ネストされた属性を使用すると、親を介して関連レコードの属性を保存できます。デフォルトでは、ネストされた属性の更新はオフになっており、&lt;a href=&quot;classmethods#method-i-accepts_nested_attributes_for&quot;&gt;＃accepts_nested_attributes_for&lt;/a&gt;クラスメソッドを使用して有効にすることができます。ネストされた属性を有効にすると、属性ライターがモデルで定義されます。</target>
        </trans-unit>
        <trans-unit id="06dc580c13292fd55390e8a982f7a12ab899090b" translate="yes" xml:space="preserve">
          <source>Nested attributes allow you to save attributes on associated records through the parent. By default nested attribute updating is turned off and you can enable it using the &lt;a href=&quot;classmethods#method-i-accepts_nested_attributes_for&quot;&gt;&lt;code&gt;accepts_nested_attributes_for&lt;/code&gt;&lt;/a&gt; class method. When you enable nested attributes an attribute writer is defined on the model.</source>
          <target state="translated">ネストされた属性を使用すると、親を介して関連レコードに属性を保存できます。デフォルトでは、ネストされた属性の更新はオフになっており、&lt;a href=&quot;classmethods#method-i-accepts_nested_attributes_for&quot;&gt; &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt; &lt;/a&gt;クラスメソッドを使用して有効にできます。ネストされた属性を有効にすると、モデルに属性ライターが定義されます。</target>
        </trans-unit>
        <trans-unit id="76f1637e9c296faeb50bd64d9b1abd9662cb9a3a" translate="yes" xml:space="preserve">
          <source>Nested attributes for an associated collection can also be passed in the form of a hash of hashes instead of an array of hashes:</source>
          <target state="translated">関連するコレクションのネストされた属性は、ハッシュの配列ではなく、ハッシュのハッシュの形で渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="4a35878c09308aa9049fa9b9a6d7c7e15c3dfe08" translate="yes" xml:space="preserve">
          <source>Nested classes are given table names prefixed by the singular form of the parent's table name. Enclosing modules are not considered.</source>
          <target state="translated">入れ子になったクラスには、親のテーブル名の単数形の前にテーブル名が付けられます。囲まれたモジュールは考慮されません。</target>
        </trans-unit>
        <trans-unit id="63f019e717e0ab6a9f532990a577c18fa3ae04dc" translate="yes" xml:space="preserve">
          <source>Nested joins:</source>
          <target state="translated">入れ子になった結合。</target>
        </trans-unit>
        <trans-unit id="c66f56f1f5c5f4b1c4c4c05d227838c7dc604645" translate="yes" xml:space="preserve">
          <source>Nested resources and/or namespaces are also supported, as illustrated in the example:</source>
          <target state="translated">例に示すように、入れ子になったリソースや名前空間もサポートされています。</target>
        </trans-unit>
        <trans-unit id="ca2f14466890989a0ffb68ac10638261362707cc" translate="yes" xml:space="preserve">
          <source>Nested routes allow you to capture this relationship in your routing. In this case, you could include this route declaration:</source>
          <target state="translated">ネストされたルートを使用すると、この関係をルーティングに取り込むことができます。この場合、次のようなルート宣言を含めることができます。</target>
        </trans-unit>
        <trans-unit id="127f49081f658cece5f3811cf0dc1334ffa1512f" translate="yes" xml:space="preserve">
          <source>Nested transactions</source>
          <target state="translated">入れ子になったトランザクション</target>
        </trans-unit>
        <trans-unit id="c835d6d0c484ded0471029d4ba8a6d1f070134ea" translate="yes" xml:space="preserve">
          <source>Nested transactions support</source>
          <target state="translated">入れ子になったトランザクションのサポート</target>
        </trans-unit>
        <trans-unit id="f06563daf6842a8e082fd4615e320fc869bb69d9" translate="yes" xml:space="preserve">
          <source>Nesting</source>
          <target state="translated">Nesting</target>
        </trans-unit>
        <trans-unit id="091718b4816f1f70d7c2f882eaebf502f50ff1e1" translate="yes" xml:space="preserve">
          <source>Nesting and Qualified Constants</source>
          <target state="translated">ネスティングと修飾定数</target>
        </trans-unit>
        <trans-unit id="4970c28f364d041c28f5d5ff2bc88daf1a13ad01" translate="yes" xml:space="preserve">
          <source>Network Address Types</source>
          <target state="translated">ネットワークアドレスの種類</target>
        </trans-unit>
        <trans-unit id="4e76369081894cf103d91859c60296711dc576f5" translate="yes" xml:space="preserve">
          <source>Network traffic is mostly based on the limited Western alphabet, so new character encodings, such as Unicode, emerged, to transmit characters in other languages. But, this is also a threat to web applications, as malicious code can be hidden in different encodings that the web browser might be able to process, but the web application might not. Here is an attack vector in UTF-8 encoding:</source>
          <target state="translated">ネットワークトラフィックは、ほとんどが限られた西洋のアルファベットに基づいているため、他の言語の文字を送信するために、ユニコードのような新しい文字エンコーディングが登場しました。しかし、これはWebアプリケーションにとっても脅威であり、悪意のあるコードは、Webブラウザが処理できるかもしれないが、Webアプリケーションが処理できないかもしれない異なるエンコーディングに隠されている可能性があるからです。ここでは、UTF-8エンコーディングでの攻撃ベクトルを紹介します。</target>
        </trans-unit>
        <trans-unit id="9e4bdcfda250e0eb886b5666e1dc9ecfd1c81c93" translate="yes" xml:space="preserve">
          <source>Nevertheless, integration tests may want to inspect controller responses in more detail, and that's when Response can be useful for application developers. &lt;code&gt;Integration&lt;/code&gt; test methods such as ActionDispatch::Integration::Session#get and ActionDispatch::Integration::Session#post return objects of type &lt;a href=&quot;testresponse&quot;&gt;&lt;code&gt;TestResponse&lt;/code&gt;&lt;/a&gt; (which are of course also of type Response).</source>
          <target state="translated">それでも、統合テストではコントローラーの応答をより詳細に検査する必要がある場合があります。その場合、Responseはアプリケーション開発者にとって役立ちます。 &lt;code&gt;Integration&lt;/code&gt; などActionDispatchなどの試験方法::統合::セッション＃getおよびActionDispatch ::統合型の::セッション＃ポストリターンオブジェクト&lt;a href=&quot;testresponse&quot;&gt; &lt;code&gt;TestResponse&lt;/code&gt; &lt;/a&gt;（コースもタイプレスポンスのです）。</target>
        </trans-unit>
        <trans-unit id="869ed4b7fdab7fee2a402b5ed8ba08fa65a80dda" translate="yes" xml:space="preserve">
          <source>Nevertheless, integration tests may want to inspect controller responses in more detail, and that's when Response can be useful for application developers. Integration test methods such as &lt;a href=&quot;integration/requesthelpers#method-i-get&quot;&gt;ActionDispatch::Integration::RequestHelpers#get&lt;/a&gt; and &lt;a href=&quot;integration/requesthelpers#method-i-post&quot;&gt;ActionDispatch::Integration::RequestHelpers#post&lt;/a&gt; return objects of type &lt;a href=&quot;testresponse&quot;&gt;TestResponse&lt;/a&gt; (which are of course also of type Response).</source>
          <target state="translated">それでも、統合テストでは、コントローラーの応答をより詳細に検査する必要がある場合があります。その場合、Responseがアプリケーション開発者に役立ちます。以下のような統合試験方法&lt;a href=&quot;integration/requesthelpers#method-i-get&quot;&gt;ActionDispatch ::統合:: RequestHelpers＃GET&lt;/a&gt;と&lt;a href=&quot;integration/requesthelpers#method-i-post&quot;&gt;ActionDispatch ::統合:: RequestHelpers＃ポスト&lt;/a&gt;型の戻りオブジェクト&lt;a href=&quot;testresponse&quot;&gt;TestResponse&lt;/a&gt;（コースもタイプレスポンスのです）。</target>
        </trans-unit>
        <trans-unit id="025519ea3f483eb11a3c8608b8a731eee0947b1b" translate="yes" xml:space="preserve">
          <source>New Features</source>
          <target state="translated">新機能</target>
        </trans-unit>
        <trans-unit id="59f7814b9783bf405ce9a2b8a2eb91a07086d026" translate="yes" xml:space="preserve">
          <source>New Framework Defaults</source>
          <target state="translated">新しいフレームワークのデフォルト</target>
        </trans-unit>
        <trans-unit id="b5ef8f1886747fec7c06f3960b7cf02d2cd47dae" translate="yes" xml:space="preserve">
          <source>New Rails applications no longer generate functional style controller tests and they should only be used for backward compatibility. Integration style controller tests perform actual requests, whereas functional style controller tests merely simulate a request. Besides, integration tests are as fast as functional tests and provide lot of helpers such as &lt;code&gt;as&lt;/code&gt;, &lt;code&gt;parsed_body&lt;/code&gt; for effective testing of controller actions including even &lt;a href=&quot;api&quot;&gt;&lt;code&gt;API&lt;/code&gt;&lt;/a&gt; endpoints.</source>
          <target state="translated">新しいRailsアプリケーションは、機能スタイルのコントローラーテストを生成しなくなり、下位互換性のためにのみ使用する必要があります。統合スタイルのコントローラーテストは実際の要求を実行しますが、機能スタイルのコントローラーテストは単に要求をシミュレートするだけです。また、統合テストは、機能テストと同じ速さであり、そのようにたくさんのヘルパーの提供 &lt;code&gt;as&lt;/code&gt; 、 &lt;code&gt;parsed_body&lt;/code&gt; さえも含めて、コントローラのアクションの効果的なテストのため&lt;a href=&quot;api&quot;&gt; &lt;code&gt;API&lt;/code&gt; &lt;/a&gt;エンドポイントを。</target>
        </trans-unit>
        <trans-unit id="82c45ae6d5b92c7fc2da8f10d18dfa0aa37127c7" translate="yes" xml:space="preserve">
          <source>New Rails applications no longer generate functional style controller tests and they should only be used for backward compatibility. Integration style controller tests perform actual requests, whereas functional style controller tests merely simulate a request. Besides, integration tests are as fast as functional tests and provide lot of helpers such as &lt;code&gt;as&lt;/code&gt;, &lt;code&gt;parsed_body&lt;/code&gt; for effective testing of controller actions including even &lt;a href=&quot;api&quot;&gt;API&lt;/a&gt; endpoints.</source>
          <target state="translated">新しいRailsアプリケーションは機能的なスタイルのコントローラーテストを生成しなくなったため、下位互換性のためにのみ使用する必要があります。統合スタイルコントローラーテストは実際のリクエストを実行しますが、機能スタイルコントローラーテストはリクエストをシミュレートするだけです。また、統合テストは、機能テストと同じ速さであり、そのようにたくさんのヘルパーの提供 &lt;code&gt;as&lt;/code&gt; 、 &lt;code&gt;parsed_body&lt;/code&gt; さえも含めて、コントローラのアクションの効果的なテストのため&lt;a href=&quot;api&quot;&gt;のAPI&lt;/a&gt;エンドポイントを。</target>
        </trans-unit>
        <trans-unit id="7cf53ae5b6704e72f88c820669c6bc32c67a8631" translate="yes" xml:space="preserve">
          <source>New Rails projects are configured to use this implementation in development environment by default.</source>
          <target state="translated">新しいRailsプロジェクトは、デフォルトで開発環境でこの実装を使用するように設定されています。</target>
        </trans-unit>
        <trans-unit id="c95d63982a47c2016210ea389140872807a5f6e4" translate="yes" xml:space="preserve">
          <source>New applications should use &lt;code&gt;zeitwerk&lt;/code&gt; mode (which is the default), and applications being upgrade are strongly encouraged to migrate to &lt;code&gt;zeitwerk&lt;/code&gt; mode. Please check the &lt;a href=&quot;upgrading_ruby_on_rails#autoloading&quot;&gt;&lt;em&gt;Upgrading Ruby on Rails&lt;/em&gt;&lt;/a&gt; guide for details.</source>
          <target state="translated">新しいアプリケーションは &lt;code&gt;zeitwerk&lt;/code&gt; モード（デフォルト）を使用する必要があり、アップグレードするアプリケーションは &lt;code&gt;zeitwerk&lt;/code&gt; モードに移行することを強くお勧めします。詳細については、&lt;a href=&quot;upgrading_ruby_on_rails#autoloading&quot;&gt;&lt;em&gt;Ruby onRails&lt;/em&gt;&lt;/a&gt;の&lt;em&gt;アップグレード&lt;/em&gt;ガイドを確認してください。</target>
        </trans-unit>
        <trans-unit id="0c893b28bccafb88f76f9633609b9c93a062f23a" translate="yes" xml:space="preserve">
          <source>New applications will include these lines commented out in the production.rb.</source>
          <target state="translated">新しいアプリケーションでは、production.rbでコメントアウトされたこれらの行が含まれます。</target>
        </trans-unit>
        <trans-unit id="4943683ac5afab318415394f93a1c063933cd2e1" translate="yes" xml:space="preserve">
          <source>New features are only added to the master branch and will not be made available in point releases.</source>
          <target state="translated">新しい機能は master ブランチにのみ追加され、ポイントリリースでは利用できません。</target>
        </trans-unit>
        <trans-unit id="ccaf4b4268072c64d096dcb7ec72db000a572a03" translate="yes" xml:space="preserve">
          <source>New features, may contain API changes (Serve as major versions of Semver). Breaking changes are paired with deprecation notices in the previous minor or major release.</source>
          <target state="translated">新しい機能は、APIの変更を含む可能性があります(Semverのメジャーバージョンとして提供されます)。ブレーキングの変更は、前のマイナーリリースやメジャーリリースでの廃止予定の通知と対になっています。</target>
        </trans-unit>
        <trans-unit id="6c84fb1c0af34488ee6f00a9554a1204b67cf86b" translate="yes" xml:space="preserve">
          <source>New features, will likely contain API changes. The difference between Rails' minor and major releases is the magnitude of breaking changes, and usually reserved for special occasions.</source>
          <target state="translated">新機能では、APIの変更が含まれる可能性が高い Railsのマイナーリリースとメジャーリリースの違いは、変更点の大きさであり、通常は特別な時のために予約されています。</target>
        </trans-unit>
        <trans-unit id="850c22852ead9d4a27eec9acc5dd2785ed98f6a9" translate="yes" xml:space="preserve">
          <source>New objects can be instantiated as either empty (pass no construction parameter) or pre-set with attributes but not yet saved (pass a hash with key names matching the associated table column names). In both instances, valid attribute keys are determined by the column names of the associated table &amp;ndash; hence you can't have attributes that aren't part of the table columns.</source>
          <target state="translated">新しいオブジェクトは、空（構築パラメーターを渡さない）または事前設定された属性でインスタンス化できますが、まだ保存されていません（関連するテーブル列名と一致するキー名のハッシュを渡します）。どちらの場合も、有効な属性キーは関連付けられたテーブルの列名によって決定されるため、テーブルの列の一部ではない属性を持つことはできません。</target>
        </trans-unit>
        <trans-unit id="58e4f9e6427a21080bbdeb14fdcf91252bfb5031" translate="yes" xml:space="preserve">
          <source>New rules are added at the top. So in the example above, the irregular rule for octopus will now be the first of the pluralization and singularization rules that is runs. This guarantees that your rules run before any of the rules that may already have been loaded.</source>
          <target state="translated">新しいルールが一番上に追加されます。上の例では、タコのための不規則なルールが、複数化と単数化のルールの最初に実行されることになります。これにより、すでに読み込まれている可能性のあるルールよりも先に、あなたのルールが実行されることが保証されます。</target>
        </trans-unit>
        <trans-unit id="e5b6589f6e1b2065a2343b20e9cdbdd4af676bc1" translate="yes" xml:space="preserve">
          <source>Next the message contains &lt;code&gt;request.formats&lt;/code&gt; which specifies the format of template to be served in response. It is set to &lt;code&gt;text/html&lt;/code&gt; as we requested this page via browser, so Rails is looking for an HTML template.</source>
          <target state="translated">次に、メッセージには &lt;code&gt;request.formats&lt;/code&gt; が含まれ、応答で提供されるテンプレートの形式を指定します。ブラウザでこのページをリクエストしたため、 &lt;code&gt;text/html&lt;/code&gt; に設定されているため、RailsはHTMLテンプレートを探しています。</target>
        </trans-unit>
        <trans-unit id="6767b8acbd10fc0b00f829278ae1fa51ceecbf6f" translate="yes" xml:space="preserve">
          <source>Next we need to &lt;em&gt;internationalize&lt;/em&gt; our application by abstracting every locale-specific element. Finally, we need to &lt;em&gt;localize&lt;/em&gt; it by providing necessary translations for these abstracts.</source>
          <target state="translated">次に、ロケール固有のすべての要素を抽象化して、アプリケーションを&lt;em&gt;国際&lt;/em&gt;化する必要があります。最後に、これらの抄録に必要な翻訳を提供することにより、&lt;em&gt;ローカライズ&lt;/em&gt;する必要があります。</target>
        </trans-unit>
        <trans-unit id="109a21d6ff6f2d60ba3c1008a17050d0acac596e" translate="yes" xml:space="preserve">
          <source>Next, let's look at our first assertion:</source>
          <target state="translated">次に、最初の主張を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="7ca4fd27013d4638016458828bb8bcf5542d52ea" translate="yes" xml:space="preserve">
          <source>Next, pass the &lt;code&gt;:pool_size&lt;/code&gt; and/or &lt;code&gt;:pool_timeout&lt;/code&gt; options when configuring the cache store:</source>
          <target state="translated">次に、パス &lt;code&gt;:pool_size&lt;/code&gt; および/または &lt;code&gt;:pool_timeout&lt;/code&gt; のオプションは、キャッシュストアを設定します：</target>
        </trans-unit>
        <trans-unit id="313433b09f8307e7e5ca150e5483eea4b6548eb6" translate="yes" xml:space="preserve">
          <source>Next, the &lt;code&gt;scaffold_controller&lt;/code&gt; generator is invoked, generating a controller called &lt;code&gt;Blorgh::ArticlesController&lt;/code&gt; (at &lt;code&gt;app/controllers/blorgh/articles_controller.rb&lt;/code&gt;) and its related views at &lt;code&gt;app/views/blorgh/articles&lt;/code&gt;. This generator also generates tests for the controller (&lt;code&gt;test/controllers/blorgh/articles_controller_test.rb&lt;/code&gt; and &lt;code&gt;test/system/blorgh/articles_test.rb&lt;/code&gt;) and a helper (&lt;code&gt;app/helpers/blorgh/articles_helper.rb&lt;/code&gt;).</source>
          <target state="translated">次に &lt;code&gt;scaffold_controller&lt;/code&gt; ジェネレーターが呼び出され、 &lt;code&gt;Blorgh::ArticlesController&lt;/code&gt; （ &lt;code&gt;app/controllers/blorgh/articles_controller.rb&lt;/code&gt; ）と呼ばれるコントローラーと、 &lt;code&gt;app/views/blorgh/articles&lt;/code&gt; にある関連するビューが生成されます。このジェネレーターは、コントローラー（ &lt;code&gt;test/controllers/blorgh/articles_controller_test.rb&lt;/code&gt; および &lt;code&gt;test/system/blorgh/articles_test.rb&lt;/code&gt; ）とヘルパー（ &lt;code&gt;app/helpers/blorgh/articles_helper.rb&lt;/code&gt; ）のテストも生成します。</target>
        </trans-unit>
        <trans-unit id="40bc064bdc43c09c7cef9fb43ea119e01e614001" translate="yes" xml:space="preserve">
          <source>Next, the &lt;code&gt;test_unit&lt;/code&gt; generator is invoked for this model, generating a model test at &lt;code&gt;test/models/blorgh/article_test.rb&lt;/code&gt; (rather than &lt;code&gt;test/models/article_test.rb&lt;/code&gt;) and a fixture at &lt;code&gt;test/fixtures/blorgh/articles.yml&lt;/code&gt; (rather than &lt;code&gt;test/fixtures/articles.yml&lt;/code&gt;).</source>
          <target state="translated">次に、このモデルに対して &lt;code&gt;test_unit&lt;/code&gt; ジェネレーターが呼び出され、 &lt;code&gt;test/models/blorgh/article_test.rb&lt;/code&gt; （ &lt;code&gt;test/models/article_test.rb&lt;/code&gt; ではなく）にモデルテストが生成され、 &lt;code&gt;test/fixtures/blorgh/articles.yml&lt;/code&gt; （ &lt;code&gt;test/fixtures/articles.yml&lt;/code&gt; ではなく）。</target>
        </trans-unit>
        <trans-unit id="652c33338cb22e43de7f0560517c2ebd49ae8f39" translate="yes" xml:space="preserve">
          <source>Next, the partial that this line will render needs to exist. Create a new directory at &lt;code&gt;app/views/blorgh/comments&lt;/code&gt; and in it a new file called &lt;code&gt;_form.html.erb&lt;/code&gt; which has this content to create the required partial:</source>
          <target state="translated">次に、このラインがレンダリングするパーシャルが存在する必要があります。 &lt;code&gt;app/views/blorgh/comments&lt;/code&gt; に新しいディレクトリを作成し、その中に &lt;code&gt;_form.html.erb&lt;/code&gt; と呼ばれる新しいファイルを作成します。このファイルには、必要なパーシャルを作成するためのコンテンツが含まれています。</target>
        </trans-unit>
        <trans-unit id="acf9d80ade823a9926ce223f831b819c233b8f93" translate="yes" xml:space="preserve">
          <source>Next, there needs to be a form so that comments can be created on an article. To add this, put this line underneath the call to &lt;code&gt;render @article.comments&lt;/code&gt; in &lt;code&gt;app/views/blorgh/articles/show.html.erb&lt;/code&gt;:</source>
          <target state="translated">次に、記事にコメントを作成できるようにフォームが必要です。これを追加するには、 &lt;code&gt;app/views/blorgh/articles/show.html.erb&lt;/code&gt; で &lt;code&gt;render @article.comments&lt;/code&gt; article.commentsをレンダリングする呼び出しの下に次の行を追加します。</target>
        </trans-unit>
        <trans-unit id="5ff2d584c2e41a9b0f9b33f4ba937921760355d0" translate="yes" xml:space="preserve">
          <source>Next, we need to create the &lt;code&gt;update&lt;/code&gt; action in &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt;. Add it between the &lt;code&gt;create&lt;/code&gt; action and the &lt;code&gt;private&lt;/code&gt; method:</source>
          <target state="translated">次に、 &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt; に &lt;code&gt;update&lt;/code&gt; アクションを作成する必要があります。 &lt;code&gt;create&lt;/code&gt; アクションと &lt;code&gt;private&lt;/code&gt; メソッドの間に追加します。</target>
        </trans-unit>
        <trans-unit id="f4802c4e596e6d343d4a0852de355df71a877078" translate="yes" xml:space="preserve">
          <source>Next, we need to update our &lt;code&gt;Blorgh::ArticleController#article_params&lt;/code&gt; method to permit the new form parameter:</source>
          <target state="translated">次に、新しいフォームパラメータを許可するように &lt;code&gt;Blorgh::ArticleController#article_params&lt;/code&gt; メソッドを更新する必要があります。</target>
        </trans-unit>
        <trans-unit id="06fff06f79987e2925e5b74dcec7e5507faadd75" translate="yes" xml:space="preserve">
          <source>Next, we need to update our &lt;code&gt;Blorgh::ArticlesController#article_params&lt;/code&gt; method to permit the new form parameter:</source>
          <target state="translated">次に、 &lt;code&gt;Blorgh::ArticlesController#article_params&lt;/code&gt; メソッドを更新して、新しいフォームパラメーターを許可する必要があります。</target>
        </trans-unit>
        <trans-unit id="15a60c317f25c93fd22981b24bd2d350ba9acf0c" translate="yes" xml:space="preserve">
          <source>Next, we will generate the Car model that inherits from Vehicle. For this, we can use the &lt;code&gt;--parent=PARENT&lt;/code&gt; option, which will generate a model that inherits from the specified parent and without equivalent migration (since the table already exists).</source>
          <target state="translated">次に、Vehicleから継承するCarモデルを生成します。このために、 &lt;code&gt;--parent=PARENT&lt;/code&gt; オプションを使用できます。これにより、指定された親から継承し、同等の移行なしでモデルが生成されます（テーブルが既に存在するため）。</target>
        </trans-unit>
        <trans-unit id="e35efe3520fc6014820c61a3334ada013d78945e" translate="yes" xml:space="preserve">
          <source>Next, we will generate the three models that inherit from Vehicle. For this, we can use the &lt;code&gt;--parent=PARENT&lt;/code&gt; option, which will generate a model that inherits from the specified parent and without equivalent migration (since the table already exists).</source>
          <target state="translated">次に、Vehicleを継承する3つのモデルを生成します。これには、 &lt;code&gt;--parent=PARENT&lt;/code&gt; オプションを使用できます。これにより、指定された親から継承するモデルが生成され、同等の移行は行われません（テーブルが既に存在するため）。</target>
        </trans-unit>
        <trans-unit id="599b45c8b1a4abe02f50f7999c00f774c6c961f6" translate="yes" xml:space="preserve">
          <source>Next, you have to tell Rails where your actual home page is located.</source>
          <target state="translated">次に、実際のホームページがどこにあるかをRailsに伝える必要があります。</target>
        </trans-unit>
        <trans-unit id="21536ceec565955083fa95fe3b89d4e6ea3c5479" translate="yes" xml:space="preserve">
          <source>Nice!</source>
          <target state="translated">Nice!</target>
        </trans-unit>
        <trans-unit id="4b8add796b363b6597a08923490d74903e475356" translate="yes" xml:space="preserve">
          <source>Nil values can be cached.</source>
          <target state="translated">NIL 値をキャッシュすることができます。</target>
        </trans-unit>
        <trans-unit id="15e1d872b31958c396eaac1d61b9e46aa2f5531f" translate="yes" xml:space="preserve">
          <source>NilClass</source>
          <target state="translated">NilClass</target>
        </trans-unit>
        <trans-unit id="7714fef354b8c1d34f1ea5bdaf4f7461127e5c71" translate="yes" xml:space="preserve">
          <source>NilClass#try</source>
          <target state="translated">NilClass#try</target>
        </trans-unit>
        <trans-unit id="44d04e33768b6d74220565215cdeaf0ed068ca29" translate="yes" xml:space="preserve">
          <source>NilClass#try!</source>
          <target state="translated">NilClass#try!</target>
        </trans-unit>
        <trans-unit id="740f91509e986665a00d7ba80ec5edfc9035eb72" translate="yes" xml:space="preserve">
          <source>No CORS configuration is required for the Disk service since it shares your app&amp;rsquo;s origin.</source>
          <target state="translated">ディスクサービスはアプリのオリジンを共有するため、CORS構成は必要ありません。</target>
        </trans-unit>
        <trans-unit id="158227f6a11ceb02d0183bb376e17da5f25f7553" translate="yes" xml:space="preserve">
          <source>No args - Returns &lt;code&gt;false&lt;/code&gt; if the relation is empty, &lt;code&gt;true&lt;/code&gt; otherwise.</source>
          <target state="translated">引数なし- リレーションが空の場合は &lt;code&gt;false&lt;/code&gt; 、それ以外の場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="8a3f27db7e37442a5e3cfabfca8ff608e7a3a15c" translate="yes" xml:space="preserve">
          <source>No expiry is set on cache entries by default. Redis is expected to be configured with an eviction policy that automatically deletes least-recently or -frequently used keys when it reaches max memory. See &lt;a href=&quot;https://redis.io/topics/lru-cache&quot;&gt;redis.io/topics/lru-cache&lt;/a&gt; for cache server setup.</source>
          <target state="translated">デフォルトでは、キャッシュエントリに有効期限は設定されていません。Redisは、最大メモリに達したときに、最近使用されたキーまたは使用頻度の高いキーを自動的に削除する排除ポリシーで構成されていることが期待されます。キャッシュサーバーの設定については、&lt;a href=&quot;https://redis.io/topics/lru-cache&quot;&gt;redis.io / topics / lru-&lt;/a&gt; cacheを参照してください。</target>
        </trans-unit>
        <trans-unit id="ecec418cda521616578d32392c1ebbdd160c1be8" translate="yes" xml:space="preserve">
          <source>No further processing</source>
          <target state="translated">それ以上の処理はありません。</target>
        </trans-unit>
        <trans-unit id="db97ed13f2ed7f611f5ba31f10f0d82c2012ecc9" translate="yes" xml:space="preserve">
          <source>No namespace is set by default. Provide one if the Redis cache server is shared with other apps: &lt;code&gt;namespace: 'myapp-cache'&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは名前空間は設定されていません。Redisキャッシュサーバーが他のアプリと共有されている場合は、 &lt;code&gt;namespace: 'myapp-cache'&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="2870967411d1177319bcb2013fe0d0d70d0c373c" translate="yes" xml:space="preserve">
          <source>No query is performed if the relation is loaded; the given record is compared to the records in memory. If the relation is unloaded, an efficient existence query is performed, as in &lt;a href=&quot;findermethods#method-i-exists-3F&quot;&gt;&lt;code&gt;exists?&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">リレーションがロードされている場合、クエリは実行されません。指定されたレコードは、メモリ内のレコードと比較されます。リレーションがアンロードされると、&lt;a href=&quot;findermethods#method-i-exists-3F&quot;&gt; &lt;code&gt;exists?&lt;/code&gt; の&lt;/a&gt;ように、効率的な存在クエリが実行されます。。</target>
        </trans-unit>
        <trans-unit id="221a5c8be43af1725cb6eacac4221d7dd3fe4e70" translate="yes" xml:space="preserve">
          <source>No: Does not allow the priority of jobs to be configured.</source>
          <target state="translated">いいえ:ジョブの優先度を設定できません。</target>
        </trans-unit>
        <trans-unit id="a2a5882be7f25ccecdb39e6626a88b6d1f4e5100" translate="yes" xml:space="preserve">
          <source>No: The adapter does not allow the number of retries to be configured.</source>
          <target state="translated">いいえ:アダプタでは、リトライ回数の構成が許可されていません。</target>
        </trans-unit>
        <trans-unit id="c462fcdbca133972f704e7fdc3ae4c7b6599f666" translate="yes" xml:space="preserve">
          <source>No: The adapter does not allow the priority of jobs to be configured.</source>
          <target state="translated">いいえ:アダプタでは、ジョブの優先度を構成することはできません。</target>
        </trans-unit>
        <trans-unit id="f1ad6734478cb826e9104f29f3625932ace44a8f" translate="yes" xml:space="preserve">
          <source>No: The adapter does not allow the timeout of jobs to be configured.</source>
          <target state="translated">いいえ:アダプタでは、ジョブのタイムアウトを構成することはできません。</target>
        </trans-unit>
        <trans-unit id="16763f29fae6d620d661620376b81b8978bfbd1d" translate="yes" xml:space="preserve">
          <source>No: The adapter will run jobs at the next opportunity and cannot use perform_later.</source>
          <target state="translated">いいえ:アダプタは次の機会にジョブを実行するので、 perform_later は使用できません。</target>
        </trans-unit>
        <trans-unit id="255548651b6f315ea8148ee71a1dcca3c1b3706e" translate="yes" xml:space="preserve">
          <source>No: The job is run in the same process.</source>
          <target state="translated">いいえ:ジョブは同じプロセスで実行されます。</target>
        </trans-unit>
        <trans-unit id="444ea91c7df550f94f3d747738c1f1a3466e0cc6" translate="yes" xml:space="preserve">
          <source>NoMethodError</source>
          <target state="translated">NoMethodError</target>
        </trans-unit>
        <trans-unit id="7bdb712b7ee9cb1572c977c6c62388b01305f84f" translate="yes" xml:space="preserve">
          <source>NoTouching</source>
          <target state="translated">NoTouching</target>
        </trans-unit>
        <trans-unit id="4409378f8e0b176c22d8f84d1d9f6e7b19f6bf2f" translate="yes" xml:space="preserve">
          <source>NoTouching#no_touching?</source>
          <target state="translated">NoTouching#no_touching?</target>
        </trans-unit>
        <trans-unit id="c47a7fa1d4ed36caf76d6aae9c8337d194a32586" translate="yes" xml:space="preserve">
          <source>NoTouching::ClassMethods</source>
          <target state="translated">NoTouching::ClassMethods</target>
        </trans-unit>
        <trans-unit id="ba98193055fdb0c7813315b4239b68f38d2b05af" translate="yes" xml:space="preserve">
          <source>NoTouching::ClassMethods#no_touching</source>
          <target state="translated">NoTouching::ClassMethods#no_touching</target>
        </trans-unit>
        <trans-unit id="10b3493287f831e81a438811a1ffba01f8cec4b7" translate="yes" xml:space="preserve">
          <source>Node.js</source>
          <target state="translated">Node.js</target>
        </trans-unit>
        <trans-unit id="ef59dd33658fd629a399aabbada1e44d1143840c" translate="yes" xml:space="preserve">
          <source>Noisy syntax.</source>
          <target state="translated">騒がしい構文。</target>
        </trans-unit>
        <trans-unit id="a0542163c0ba3f59fb289f1dc9e8dba5d3af2730" translate="yes" xml:space="preserve">
          <source>Non-Resourceful Routes</source>
          <target state="translated">リソースのないルート</target>
        </trans-unit>
        <trans-unit id="c55db06fa97f077282c5464f82b0f22e2389c4ca" translate="yes" xml:space="preserve">
          <source>Non-resourceful routes</source>
          <target state="translated">資源に頼らないルート</target>
        </trans-unit>
        <trans-unit id="fd0b7793c252e73868462c36c6ba36d9dd714b74" translate="yes" xml:space="preserve">
          <source>Non-significant zeros after the decimal separator are stripped out by default (set &lt;code&gt;:strip_insignificant_zeros&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; to change that):</source>
          <target state="translated">小数点記号の後の重要でないゼロは、デフォルトで取り除かれます（これを変更するには、 &lt;code&gt;:strip_insignificant_zeros&lt;/code&gt; を &lt;code&gt;false&lt;/code&gt; に設定します）。</target>
        </trans-unit>
        <trans-unit id="6eef6648406c333a4035cd5e60d0bf2ecf2606d7" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">None</target>
        </trans-unit>
        <trans-unit id="356a42c934b09cbbe5bf46e0b7b4b0ced1bcb0a1" translate="yes" xml:space="preserve">
          <source>Normal callbacks hook into the life cycle of Active Record objects, allowing you to work with those objects at various points. For example, you can use a &lt;code&gt;:before_save&lt;/code&gt; callback to cause something to happen just before an object is saved.</source>
          <target state="translated">通常のコールバックはActive Recordオブジェクトのライフサイクルにフックし、さまざまなポイントでそれらのオブジェクトを操作できるようにします。たとえば、 &lt;code&gt;:before_save&lt;/code&gt; コールバックを使用して、オブジェクトが保存される直前に何かを発生させることができます。</target>
        </trans-unit>
        <trans-unit id="0a13e9d32efa4b424c6392e61c6acc0eb80b45b5" translate="yes" xml:space="preserve">
          <source>Normal use:</source>
          <target state="translated">通常使用です。</target>
        </trans-unit>
        <trans-unit id="1ab70b8dd2f6d458c3ed264ce52d8181dab57e68" translate="yes" xml:space="preserve">
          <source>Normalize args by converting &lt;code&gt;render &quot;foo&quot;&lt;/code&gt; to &lt;code&gt;render :action =&amp;gt; &quot;foo&quot;&lt;/code&gt; and &lt;code&gt;render
&quot;foo/bar&quot;&lt;/code&gt; to &lt;code&gt;render :file =&amp;gt;
&quot;foo/bar&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;render &quot;foo&quot;&lt;/code&gt; を &lt;code&gt;render :action =&amp;gt; &quot;foo&quot;&lt;/code&gt; 変換し &lt;code&gt;render &quot;foo/bar&quot;&lt;/code&gt; を &lt;code&gt;render :file =&amp;gt; &quot;foo/bar&quot;&lt;/code&gt; 変換して、 argsを正規化します。</target>
        </trans-unit>
        <trans-unit id="76ebf82afd9f2e7f802d7312d3d247b17cb36365" translate="yes" xml:space="preserve">
          <source>Normalize options.</source>
          <target state="translated">オプションを正規化します。</target>
        </trans-unit>
        <trans-unit id="cfe63d1d809fb134b05b3d5638fd48aa6ce84994" translate="yes" xml:space="preserve">
          <source>Normalizes arguments, options and then delegates &lt;a href=&quot;rendering#method-i-render_to_body&quot;&gt;#render_to_body&lt;/a&gt; and sticks the result in &lt;code&gt;self.response_body&lt;/code&gt;.</source>
          <target state="translated">引数、オプションを正規化してから&lt;a href=&quot;rendering#method-i-render_to_body&quot;&gt;#render_to_body&lt;/a&gt;を委任し、結果を &lt;code&gt;self.response_body&lt;/code&gt; に貼り付けます。</target>
        </trans-unit>
        <trans-unit id="4c34340e1f59b977fa03f74950eb939084626d08" translate="yes" xml:space="preserve">
          <source>Normalizes arguments, options and then delegates &lt;a href=&quot;rendering#method-i-render_to_body&quot;&gt;&lt;code&gt;render_to_body&lt;/code&gt;&lt;/a&gt; and sticks the result in &lt;code&gt;self.response_body&lt;/code&gt;.</source>
          <target state="translated">引数、オプションを正規化してから、&lt;a href=&quot;rendering#method-i-render_to_body&quot;&gt; &lt;code&gt;render_to_body&lt;/code&gt; &lt;/a&gt;を委任し、結果を &lt;code&gt;self.response_body&lt;/code&gt; に固定します。</target>
        </trans-unit>
        <trans-unit id="6b8d8521ec1f363e13523415591e2d1d5a9b1bbc" translate="yes" xml:space="preserve">
          <source>Normally Rails ignores duplicate parameter names. If the parameter name contains an empty set of square brackets &lt;code&gt;[]&lt;/code&gt; then they will be accumulated in an array. If you wanted users to be able to input multiple phone numbers, you could place this in the form:</source>
          <target state="translated">通常、Railsは重複するパラメーター名を無視します。パラメータ名に角括弧 &lt;code&gt;[]&lt;/code&gt; の空のセットが含まれている場合、それらは配列に蓄積されます。ユーザーが複数の電話番号を入力できるようにしたい場合は、次の形式で配置できます。</target>
        </trans-unit>
        <trans-unit id="247f896aa006f08e05bcedcbde424ceee9131fe0" translate="yes" xml:space="preserve">
          <source>Normally Rails ignores duplicate parameter names. If the parameter name ends with an empty set of square brackets &lt;code&gt;[]&lt;/code&gt; then they will be accumulated in an array. If you wanted users to be able to input multiple phone numbers, you could place this in the form:</source>
          <target state="translated">通常、Railsは重複するパラメータ名を無視します。パラメータ名が空の角括弧 &lt;code&gt;[]&lt;/code&gt; のセットで終わる場合、それらは配列に累積されます。ユーザーが複数の電話番号を入力できるようにする場合は、次の形式で入力できます。</target>
        </trans-unit>
        <trans-unit id="f08e0da51423cc8cb2840120eee1ece651d5987b" translate="yes" xml:space="preserve">
          <source>Normally when you create controllers, helpers and models inside an engine, they are treated as if they were created inside the application itself. This means that all helpers and named routes from the application will be available to your engine's controllers as well.</source>
          <target state="translated">通常、エンジン内部でコントローラ、ヘルパー、モデルを作成する場合、それらはアプリケーション内部で作成されたかのように扱われます。これは、アプリケーションからのすべてのヘルパーと名前付きルートが、エンジンのコントローラでも利用できることを意味します。</target>
        </trans-unit>
        <trans-unit id="5ef9f817caabf9bb9efcc4d6d589e7a64ec3f630" translate="yes" xml:space="preserve">
          <source>Normally, &lt;code&gt;ApplicationController&lt;/code&gt; is the only controller that inherits from &lt;code&gt;ActionController::API&lt;/code&gt;. All other controllers in turn inherit from &lt;code&gt;ApplicationController&lt;/code&gt;.</source>
          <target state="translated">通常、 &lt;code&gt;ApplicationController&lt;/code&gt; は、 &lt;code&gt;ActionController::API&lt;/code&gt; から継承する唯一のコントローラーです。他のすべてのコントローラーは &lt;code&gt;ApplicationController&lt;/code&gt; を継承します。</target>
        </trans-unit>
        <trans-unit id="b1813582ee34406c4e4de37d56648ffafa91b226" translate="yes" xml:space="preserve">
          <source>Normally, this mechanism is used on a per-client basis. The cache middleware allows us to share this caching mechanism across clients. We can enable cross-client caching in the call to &lt;code&gt;stale?&lt;/code&gt;:</source>
          <target state="translated">通常、このメカニズムはクライアントごとに使用されます。キャッシュミドルウェアを使用すると、このキャッシュメカニズムをクライアント間で共有できます。 &lt;code&gt;stale?&lt;/code&gt; の呼び出しでクライアント間キャッシュを有効にできますか？：</target>
        </trans-unit>
        <trans-unit id="8f8bb15dfb81f5ed071f554d571757b2eb818782" translate="yes" xml:space="preserve">
          <source>Normally, you do not have to call this method directly at all. Use the &lt;code&gt;create_and_upload!&lt;/code&gt; class method instead. If you do use this method directly, make sure you are using it on a persisted &lt;a href=&quot;blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; as otherwise another blob's data might get overwritten on the service.</source>
          <target state="translated">通常、このメソッドを直接呼び出す必要はまったくありません。 &lt;code&gt;create_and_upload!&lt;/code&gt; 使用してください！代わりにクラスメソッド。このメソッドを直接使用する場合は、永続化された&lt;a href=&quot;blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt;使用していることを確認してください。そうしないと、別のBLOBのデータがサービスで上書きされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="997531dd7ea0389626b86133c48895591fcda728" translate="yes" xml:space="preserve">
          <source>Normally, you do not have to call this method directly at all. Use the factory class methods of &lt;code&gt;build_after_upload&lt;/code&gt; and &lt;code&gt;create_after_upload!&lt;/code&gt;.</source>
          <target state="translated">通常、このメソッドを直接呼び出す必要はありません。 &lt;code&gt;build_after_upload&lt;/code&gt; および &lt;code&gt;create_after_upload!&lt;/code&gt; のファクトリクラスメソッドを使用してください！。</target>
        </trans-unit>
        <trans-unit id="cf5007b07c89f0ace0d40e4bbc19ce4ffe7536c3" translate="yes" xml:space="preserve">
          <source>Not all migrations change the schema. Some just fix the data:</source>
          <target state="translated">すべての移行がスキーマを変更するわけではありません。データを修正するだけのものもあります。</target>
        </trans-unit>
        <trans-unit id="2fca96ad94b6af17e7dbcc07cff7f6d533f7b221" translate="yes" xml:space="preserve">
          <source>Not all web servers support streaming out-of-the-box. You need to check the instructions for each of them.</source>
          <target state="translated">すべてのウェブサーバーがすぐにストリーミングに対応しているわけではありません。それぞれの説明書を確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="06657b8133ea9b4e185fb080234e3a0364fad6ca" translate="yes" xml:space="preserve">
          <source>Not very DRY, eh? We can fix this by using events instead. We'll add a &lt;code&gt;data-*&lt;/code&gt; attribute to our link, and then bind a handler to the click event of every link that has that attribute:</source>
          <target state="translated">あまりドライではないですよね？代わりにイベントを使用してこれを修正できます。リンクに &lt;code&gt;data-*&lt;/code&gt; 属性を追加し、その属性を持つすべてのリンクのクリックイベントにハンドラーをバインドします。</target>
        </trans-unit>
        <trans-unit id="8a01dd84a7593bdb2c8fb765b3146a0f514f25b7" translate="yes" xml:space="preserve">
          <source>NotNullViolation</source>
          <target state="translated">NotNullViolation</target>
        </trans-unit>
        <trans-unit id="9e126b084c1db58a37584261f9012e35f671ac72" translate="yes" xml:space="preserve">
          <source>Notably, the Rails routing system calls &lt;code&gt;to_param&lt;/code&gt; on models to get a value for the &lt;code&gt;:id&lt;/code&gt; placeholder. &lt;code&gt;ActiveRecord::Base#to_param&lt;/code&gt; returns the &lt;code&gt;id&lt;/code&gt; of a model, but you can redefine that method in your models. For example, given</source>
          <target state="translated">特に、Railsルーティングシステムは、モデルの &lt;code&gt;to_param&lt;/code&gt; を呼び出して、 &lt;code&gt;:id&lt;/code&gt; プレースホルダーの値を取得します。 &lt;code&gt;ActiveRecord::Base#to_param&lt;/code&gt; はモデルの &lt;code&gt;id&lt;/code&gt; を返しますが、モデルでそのメソッドを再定義できます。たとえば、</target>
        </trans-unit>
        <trans-unit id="3ae806db7c0984a3428e2d88329b2a10cf8332e7" translate="yes" xml:space="preserve">
          <source>Note about replacing already defined headers:</source>
          <target state="translated">すでに定義されているヘッダの置き換えについての注意点</target>
        </trans-unit>
        <trans-unit id="c095fd5765c7e05c2ff1778309b8fa41345203ed" translate="yes" xml:space="preserve">
          <source>Note also that destroying a record preserves its ID in the model instance, so deleted models are still comparable.</source>
          <target state="translated">また、レコードを破棄するとモデルインスタンスのIDが保持されるため、削除されたモデルも同等のものになることに注意してください。</target>
        </trans-unit>
        <trans-unit id="7694cc2f1f0145560dfa9380500275db32ac89c8" translate="yes" xml:space="preserve">
          <source>Note an object is not required to implement all APIs in order to work with Action Pack. This module only intends to provide guidance in case you want all features out of the box.</source>
          <target state="translated">Action Pack を使用するために、すべての API を実装する必要はありません。このモジュールは、すべての機能をすぐに使いたい場合のガイダンスを提供することを目的としています。</target>
        </trans-unit>
        <trans-unit id="d151fd14b51016b3cc7c384691610fb0bb532780" translate="yes" xml:space="preserve">
          <source>Note here that the routes are drawn upon the &lt;code&gt;Blorgh::Engine&lt;/code&gt; object rather than the &lt;code&gt;YourApp::Application&lt;/code&gt; class. This is so that the engine routes are confined to the engine itself and can be mounted at a specific point as shown in the &lt;a href=&quot;#test-directory&quot;&gt;test directory&lt;/a&gt; section. It also causes the engine's routes to be isolated from those routes that are within the application. The &lt;a href=&quot;#routes&quot;&gt;Routes&lt;/a&gt; section of this guide describes it in detail.</source>
          <target state="translated">ここで、ルートは &lt;code&gt;YourApp::Application&lt;/code&gt; クラスではなく &lt;code&gt;Blorgh::Engine&lt;/code&gt; オブジェクトに描画されていることに注意してください。これは、エンジンルートがエンジン自体に限定され、&lt;a href=&quot;#test-directory&quot;&gt;テストディレクトリ&lt;/a&gt;セクションに示すように特定のポイントにマウントできるようにするためです。また、エンジンのルートがアプリケーション内のルートから分離されます。このガイドの「&lt;a href=&quot;#routes&quot;&gt;ルート」&lt;/a&gt;セクションでは、これについて詳しく説明しています。</target>
        </trans-unit>
        <trans-unit id="24c5cab7750f2ca8837b173b4a826ddf4d2d4cca" translate="yes" xml:space="preserve">
          <source>Note in particular that truncation takes into account the length of the omission string.</source>
          <target state="translated">特に、切り捨ては省略文字列の長さを考慮することに注意してください。</target>
        </trans-unit>
        <trans-unit id="78b28b6681145d5417ac3c0780f932b9f655ecb1" translate="yes" xml:space="preserve">
          <source>Note in the previous example only one key was symbolized.</source>
          <target state="translated">前の例では、1 つのキーのみが記号化されていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="2cf0874701acc0cffe506f4241beac6925cd1806" translate="yes" xml:space="preserve">
          <source>Note in the previous example that increments may be negative.</source>
          <target state="translated">前の例では、インクリメントが負の値になる場合があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="e9212787e26354a3c8b4c889cac5d5888c2c0c12" translate="yes" xml:space="preserve">
          <source>Note that &quot;%0d%0a&quot; is URL-encoded for &quot;\r\n&quot; which is a carriage-return and line-feed (CRLF) in Ruby. So the resulting HTTP header for the second example will be the following because the second Location header field overwrites the first.</source>
          <target state="translated">&quot;%0d%0a&quot; は &quot;\r\r\n&quot; 用に URL エンコードされていることに注意してください。したがって、2番目の例の結果のHTTPヘッダは、2番目のLocationヘッダフィールドが1番目を上書きするので、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="c66d170fe2e3fe3157ac0fda9773660aea982fef" translate="yes" xml:space="preserve">
          <source>Note that &amp;ldquo;TRUNCATE&amp;rdquo; is also a MySQL DDL statement!</source>
          <target state="translated">「TRUNCATE」もMySQL DDLステートメントであることに注意してください！</target>
        </trans-unit>
        <trans-unit id="8c4c2b62825cd7958528fd2b7d9a56ab165a975a" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;../nestedattributes/classmethods#method-i-accepts_nested_attributes_for&quot;&gt;&lt;code&gt;NestedAttributes::ClassMethods#accepts_nested_attributes_for&lt;/code&gt;&lt;/a&gt; sets &lt;code&gt;:autosave&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../nestedattributes/classmethods#method-i-accepts_nested_attributes_for&quot;&gt; &lt;code&gt;NestedAttributes::ClassMethods#accepts_nested_attributes_for&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;:autosave&lt;/code&gt; autosaveを &lt;code&gt;true&lt;/code&gt; に設定することに注意してください。</target>
        </trans-unit>
        <trans-unit id="a44c012e2aa14d3cf71de66005ce218c80932da4" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;../nestedattributes/classmethods#method-i-accepts_nested_attributes_for&quot;&gt;ActiveRecord::NestedAttributes::ClassMethods#accepts_nested_attributes_for&lt;/a&gt; sets &lt;code&gt;:autosave&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../nestedattributes/classmethods#method-i-accepts_nested_attributes_for&quot;&gt;ActiveRecord :: NestedAttributes :: ClassMethods＃accepts_nested_attributes_for&lt;/a&gt;は &lt;code&gt;:autosave&lt;/code&gt; autosaveを &lt;code&gt;true&lt;/code&gt; に設定することに注意してください。</target>
        </trans-unit>
        <trans-unit id="665fc2c9ac295036d5b41cca93f31cb2679d5b58" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;api&quot;&gt;&lt;code&gt;API&lt;/code&gt;&lt;/a&gt; only applications don't include this module or a session middleware by default, and so don't require CSRF protection to be configured.</source>
          <target state="translated">ことを注意&lt;a href=&quot;api&quot;&gt; &lt;code&gt;API&lt;/code&gt; &lt;/a&gt;のみのアプリケーションは、デフォルトでは、このモジュールまたはセッションミドルウェアが含まれていませんし、そのように構成されるようにCSRFの保護を必要としません。</target>
        </trans-unit>
        <trans-unit id="38923273a1ac5388fdafcc0d052b80b100edca09" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt; will automatically generate a hidden field to store the ID of the record. There are circumstances where this hidden field is not needed and you can pass &lt;code&gt;include_id: false&lt;/code&gt; to prevent &lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt; from rendering it automatically.</source>
          <target state="translated">&lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt;は、非表示フィールドを自動的に生成して、レコードのIDを格納することに注意してください。この非表示フィールドが必要ない状況があり、 &lt;code&gt;include_id: false&lt;/code&gt; を&lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt;渡して#fields_for&lt;/a&gt;が自動的にレンダリングしないようにすることができます。</target>
        </trans-unit>
        <trans-unit id="369d34c452a0924a66d60a14807dc6912723427b" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt;&lt;code&gt;fields_for&lt;/code&gt;&lt;/a&gt; will automatically generate a hidden field to store the ID of the record. There are circumstances where this hidden field is not needed and you can pass &lt;code&gt;include_id: false&lt;/code&gt; to prevent &lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt;&lt;code&gt;fields_for&lt;/code&gt;&lt;/a&gt; from rendering it automatically.</source>
          <target state="translated">&lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt; &lt;code&gt;fields_for&lt;/code&gt; &lt;/a&gt;は、レコードのIDを格納するための非表示フィールドを自動的に生成することに注意してください。この非表示フィールドが不要で、 &lt;code&gt;include_id: false&lt;/code&gt; を渡して、&lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt; &lt;code&gt;fields_for&lt;/code&gt; &lt;/a&gt;が自動的にレンダリングしないようにすることができる状況があります。</target>
        </trans-unit>
        <trans-unit id="58fa56f7cb58d6bceba0d8992232bc1ce70dad69" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt; will automatically generate a hidden field to store the ID of the record. There are circumstances where this hidden field is not needed and you can pass &lt;code&gt;include_id: false&lt;/code&gt; to prevent &lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt; from rendering it automatically.</source>
          <target state="translated">&lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt;は、非表示フィールドを自動的に生成して、レコードのIDを格納することに注意してください。この非表示フィールドが必要ない状況があり、 &lt;code&gt;include_id: false&lt;/code&gt; を&lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;渡して#fields_for&lt;/a&gt;が自動的にレンダリングしないようにすることができます。</target>
        </trans-unit>
        <trans-unit id="db52c8295caa155c6a4c02476acb794c6f44402f" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;&lt;code&gt;fields_for&lt;/code&gt;&lt;/a&gt; will automatically generate a hidden field to store the ID of the record. There are circumstances where this hidden field is not needed and you can pass &lt;code&gt;include_id: false&lt;/code&gt; to prevent &lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;&lt;code&gt;fields_for&lt;/code&gt;&lt;/a&gt; from rendering it automatically.</source>
          <target state="translated">&lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt; &lt;code&gt;fields_for&lt;/code&gt; &lt;/a&gt;は、レコードのIDを格納するための非表示フィールドを自動的に生成することに注意してください。この非表示フィールドが不要で、 &lt;code&gt;include_id: false&lt;/code&gt; を渡して、&lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt; &lt;code&gt;fields_for&lt;/code&gt; &lt;/a&gt;が自動的にレンダリングしないようにすることができる状況があります。</target>
        </trans-unit>
        <trans-unit id="8d6baf90f202a6f42a23fe78dcfdfc40689608ba" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;https://github.com/guard/listen#issues--limitations&quot;&gt;some setups are unsupported&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/guard/listen#issues--limitations&quot;&gt;一部のセットアップはサポートされていない&lt;/a&gt;ことに注意してください。</target>
        </trans-unit>
        <trans-unit id="a8b8ef8e6c7fa666e58bf31c01e9fc50f8306bd1" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;querymethods#method-i-includes&quot;&gt;&lt;code&gt;includes&lt;/code&gt;&lt;/a&gt; works with association names while &lt;a href=&quot;querymethods#method-i-references&quot;&gt;&lt;code&gt;references&lt;/code&gt;&lt;/a&gt; needs the actual table name.</source>
          <target state="translated">&lt;a href=&quot;querymethods#method-i-references&quot;&gt; &lt;code&gt;references&lt;/code&gt; &lt;/a&gt;には実際のテーブル名が必要ですが、includeは関連付け名で機能すること&lt;a href=&quot;querymethods#method-i-includes&quot;&gt; &lt;code&gt;includes&lt;/code&gt; &lt;/a&gt;注意してください。</target>
        </trans-unit>
        <trans-unit id="73d319a82de5469887e65f4e1b3e5b326d201bb0" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;querymethods#method-i-includes&quot;&gt;includes&lt;/a&gt; works with association names while &lt;a href=&quot;querymethods#method-i-references&quot;&gt;references&lt;/a&gt; needs the actual table name.</source>
          <target state="translated">には実際のテーブル名が必要な&lt;a href=&quot;querymethods#method-i-references&quot;&gt;リファレンス&lt;/a&gt;名が&lt;a href=&quot;querymethods#method-i-includes&quot;&gt;含まれて&lt;/a&gt;いることに注意してください。</target>
        </trans-unit>
        <trans-unit id="2fc790da857a2db72a54644ec80ca81a48894c76" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;schemastatements#method-i-create_join_table&quot;&gt;&lt;code&gt;create_join_table&lt;/code&gt;&lt;/a&gt; does not create any indices by default; you can use its block form to do so yourself:</source>
          <target state="translated">&lt;a href=&quot;schemastatements#method-i-create_join_table&quot;&gt; &lt;code&gt;create_join_table&lt;/code&gt; &lt;/a&gt;は、デフォルトではインデックスを作成しないことに注意してください。そのブロックフォームを使用して、自分でこれを行うことができます。</target>
        </trans-unit>
        <trans-unit id="d8e687fc1dc77b6bcff094a5807d77a44d345aed" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;schemastatements#method-i-create_join_table&quot;&gt;create_join_table&lt;/a&gt; does not create any indices by default; you can use its block form to do so yourself:</source>
          <target state="translated">&lt;a href=&quot;schemastatements#method-i-create_join_table&quot;&gt;create_join_table&lt;/a&gt;はデフォルトではインデックスを作成しないことに注意してください。そのブロック形式を使用して自分で行うことができます。</target>
        </trans-unit>
        <trans-unit id="23bdc84508523e0b51533fa029acb1aad34f1ad8" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;%0d%0a&lt;/code&gt; is URL-encoded for &lt;code&gt;\r\n&lt;/code&gt; which is a carriage-return and line-feed (CRLF) in Ruby. So the resulting HTTP header for the second example will be the following because the second Location header field overwrites the first.</source>
          <target state="translated">&lt;code&gt;%0d%0a&lt;/code&gt; は、Rubyのキャリッジリターンとラインフィード（CRLF）である &lt;code&gt;\r\n&lt;/code&gt; に対してURLエンコードされていることに注意してください。したがって、2番目のLocationヘッダーフィールドが最初のフィールドを上書きするため、2番目の例の結果のHTTPヘッダーは次のようになります。</target>
        </trans-unit>
        <trans-unit id="7c811d3f55dffacb3921985a1c74934b15a7fe8d" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;:controller&lt;/code&gt;, &lt;code&gt;:action&lt;/code&gt; and &lt;code&gt;:id&lt;/code&gt; are interpreted as URL query parameters and thus available through &lt;code&gt;params&lt;/code&gt; in an action.</source>
          <target state="translated">&lt;code&gt;:controller&lt;/code&gt; 、 &lt;code&gt;:action&lt;/code&gt; 、および &lt;code&gt;:id&lt;/code&gt; はURLクエリパラメータとして解釈されるため、アクションの &lt;code&gt;params&lt;/code&gt; を通じて使用できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="dc3176ed2b3dd187522e4366e6d013975d35837d" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;:dependent&lt;/code&gt; is implemented using Rails' callback system, which works by processing callbacks in order. Therefore, other callbacks declared either before or after the &lt;code&gt;:dependent&lt;/code&gt; option can affect what it does.</source>
          <target state="translated">&lt;code&gt;:dependent&lt;/code&gt; はRailsのコールバックシステムを使用して実装されていることに注意してください。これはコールバックを順番に処理することで機能します。したがって、 &lt;code&gt;:dependent&lt;/code&gt; オプションの前または後に宣言された他のコールバックは、その動作に影響を与える可能性があります。</target>
        </trans-unit>
        <trans-unit id="61ee456413f64827d2ca2c628715ca0ad954c218" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;:dependent&lt;/code&gt; option is ignored for &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;&lt;code&gt;has_one&lt;/code&gt;&lt;/a&gt;&lt;code&gt;:through&lt;/code&gt; associations.</source>
          <target state="translated">&lt;a href=&quot;classmethods#method-i-has_one&quot;&gt; &lt;code&gt;has_one&lt;/code&gt; &lt;/a&gt; &lt;code&gt;:through&lt;/code&gt; アソシエーションでは、 &lt;code&gt;:dependent&lt;/code&gt; オプションは無視されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="27ce03a2af56f6db4c7888f2270689c9d52b7eb4" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;:dependent&lt;/code&gt; option is ignored for &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one&lt;/a&gt;&lt;code&gt;:through&lt;/code&gt; associations.</source>
          <target state="translated">&lt;code&gt;:dependent&lt;/code&gt; オプションは、&lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one &lt;/a&gt; &lt;code&gt;:through&lt;/code&gt; 関連付けでは無視されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="325dbc5769cb675d6be42dbd169dff67360c0183" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;:dependent&lt;/code&gt; option is ignored when using &lt;code&gt;:through&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;:through&lt;/code&gt; オプションを使用 &lt;code&gt;:dependent&lt;/code&gt; 場合、：dependentオプションは無視されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="dc0da45d44e4ef2c4f7a2df800102b6112ec456b" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;:if&lt;/code&gt; has priority over &lt;code&gt;:except&lt;/code&gt; in case they are used together.</source>
          <target state="translated">&lt;code&gt;:if&lt;/code&gt; は、一緒に使用される場合を &lt;code&gt;:except&lt;/code&gt; 、：exceptよりも優先されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="7a64c122b47cf95270a43e85eeebf6bb50d00438" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;:only&lt;/code&gt; has priority over &lt;code&gt;:if&lt;/code&gt; in case they are used together.</source>
          <target state="translated">ことを注意 &lt;code&gt;:only&lt;/code&gt; 優先します &lt;code&gt;:if&lt;/code&gt; 場合には、それらを一緒に使用されています。</target>
        </trans-unit>
        <trans-unit id="565db700fe7dd945135cedb2356482108c2bba25" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;ActiveModel::Validations&lt;/code&gt; automatically adds an &lt;code&gt;errors&lt;/code&gt; method to your instances initialized with a new &lt;code&gt;ActiveModel::Errors&lt;/code&gt; object, so there is no need for you to do this manually.</source>
          <target state="translated">注こと &lt;code&gt;ActiveModel::Validations&lt;/code&gt; 自動的に追加されます &lt;code&gt;errors&lt;/code&gt; あなたのインスタンスにメソッドは、新しい使用して初期化 &lt;code&gt;ActiveModel::Errors&lt;/code&gt; オブジェクトなので、手動でこれを行うために必要はありません。</target>
        </trans-unit>
        <trans-unit id="82ddc1fd214cfcde0937046ec7f0683ab8c3bf5c" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;autosave: false&lt;/code&gt; is not same as not declaring &lt;code&gt;:autosave&lt;/code&gt;. When the &lt;code&gt;:autosave&lt;/code&gt; option is not present then new association records are saved but the updated association records are not saved.</source>
          <target state="translated">&lt;code&gt;autosave: false&lt;/code&gt; は &lt;code&gt;:autosave&lt;/code&gt; を宣言しないことと同じではないことに注意してください。とき &lt;code&gt;:autosave&lt;/code&gt; オプションが存在していない、新しい関連レコードが保存されていますが、更新の関連レコードは保存されません。</target>
        </trans-unit>
        <trans-unit id="76f8d19661e649fb882e69053f8d42ed894a3438" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;classify&lt;/code&gt; returns a class name as a string. You can get the actual class object by invoking &lt;code&gt;constantize&lt;/code&gt; on it, explained next.</source>
          <target state="translated">&lt;code&gt;classify&lt;/code&gt; はクラス名を文字列として返すことに注意してください。次に説明するように、 &lt;code&gt;constantize&lt;/code&gt; を呼び出すことで、実際のクラスオブジェクトを取得できます。</target>
        </trans-unit>
        <trans-unit id="c8d80f72f917064aa72f4120b7e0525fbac8be68" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;classify&lt;/code&gt; returns a class name as a string. You can get the actual class object invoking &lt;code&gt;constantize&lt;/code&gt; on it, explained next.</source>
          <target state="translated">&lt;code&gt;classify&lt;/code&gt; はクラス名を文字列として返すことに注意してください。次に説明する、 &lt;code&gt;constantize&lt;/code&gt; を呼び出す実際のクラスオブジェクトを取得できます。</target>
        </trans-unit>
        <trans-unit id="e8826cfe8cd304f02e5cc7fd9cd0269556f124f1" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;connected_to&lt;/code&gt; with a role will look up an existing connection and switch using the connection specification name. This means that if you pass an unknown role like &lt;code&gt;connected_to(role: :nonexistent)&lt;/code&gt; you will get an error that says &lt;code&gt;ActiveRecord::ConnectionNotEstablished (No connection pool for 'ActiveRecord::Base' found for the 'nonexistent' role.)&lt;/code&gt;</source>
          <target state="translated">ロールを持つ &lt;code&gt;connected_to&lt;/code&gt; は、既存の接続を検索し、接続仕様名を使用して切り替えることに注意してください。これは、 &lt;code&gt;connected_to(role: :nonexistent)&lt;/code&gt; &lt;code&gt;ActiveRecord::ConnectionNotEstablished (No connection pool for 'ActiveRecord::Base' found for the 'nonexistent' role.)&lt;/code&gt; ）のような不明なロールを渡すと、ActiveRecord :: ConnectionNotEstablished（「nonexistent」ロールの「ActiveRecord :: Base」の接続プールが見つかりません）というエラーが発生することを意味します。</target>
        </trans-unit>
        <trans-unit id="c6c01f02771dd2025c81366f7b4ab305fdcf9eff" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;connected_to&lt;/code&gt; with a role will look up an existing connection and switch using the connection specification name. This means that if you pass an unknown role like &lt;code&gt;connected_to(role: :nonexistent)&lt;/code&gt; you will get an error that says &lt;code&gt;ActiveRecord::ConnectionNotEstablished (No connection pool with 'AnimalsBase' found
for the 'nonexistent' role.)&lt;/code&gt;</source>
          <target state="translated">ことを注意 &lt;code&gt;connected_to&lt;/code&gt; 役割を持つが、接続仕様の名前を使用して既存の接続とスイッチを検索します。これは、 &lt;code&gt;connected_to(role: :nonexistent)&lt;/code&gt; &lt;code&gt;ActiveRecord::ConnectionNotEstablished (No connection pool with 'AnimalsBase' found for the 'nonexistent' role.)&lt;/code&gt; ）のような不明なロールを渡すと、ActiveRecord :: ConnectionNotEstablished（「nonexistent」ロールに「AnimalsBase」の接続プールが見つからない）を示すエラーが発生することを意味します。</target>
        </trans-unit>
        <trans-unit id="d25a94880736f451c356dfd25b8f9700646689b1" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;content_for&lt;/code&gt; concatenates (default) the blocks it is given for a particular identifier in order. For example:</source>
          <target state="translated">&lt;code&gt;content_for&lt;/code&gt; は、特定の識別子に対して指定されたブロックを順番に連結（デフォルト）することに注意してください。例えば：</target>
        </trans-unit>
        <trans-unit id="f709bc03cc9989b690018bd7796015bd85e42d21" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;deliver_later&lt;/code&gt; will execute your method from the background job.</source>
          <target state="translated">&lt;code&gt;deliver_later&lt;/code&gt; はバックグラウンドジョブからメソッドを実行することに注意してください。</target>
        </trans-unit>
        <trans-unit id="ace384731e2681d12d2903467f1e2b7abe234a6d" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;reverse_update&lt;/code&gt; has no bang.</source>
          <target state="translated">&lt;code&gt;reverse_update&lt;/code&gt; には強打がないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="6d41aeffaefbf99cbff2faf9bf36f1aca03dbce1" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;save&lt;/code&gt; also has the ability to skip validations if passed &lt;code&gt;validate:
false&lt;/code&gt; as an argument. This technique should be used with caution.</source>
          <target state="translated">注 &lt;code&gt;save&lt;/code&gt; もが渡された場合の検証をスキップする機能がある &lt;code&gt;validate: false&lt;/code&gt; 引数として。この手法は注意して使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="9b7d5cbfbac8088c113bb0b0c3ed27a94993f432" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;touch&lt;/code&gt; must be used on a persisted object, or else an &lt;a href=&quot;activerecorderror&quot;&gt;&lt;code&gt;ActiveRecordError&lt;/code&gt;&lt;/a&gt; will be thrown. For example:</source>
          <target state="translated">永続化されたオブジェクトでは &lt;code&gt;touch&lt;/code&gt; 使用する必要があることに注意してください。そうしないと、&lt;a href=&quot;activerecorderror&quot;&gt; &lt;code&gt;ActiveRecordError&lt;/code&gt; &lt;/a&gt;がスローされます。例えば：</target>
        </trans-unit>
        <trans-unit id="5f9f6fa6da45470fd512ddf42d74032a3e93aecc" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;touch&lt;/code&gt; must be used on a persisted object, or else an &lt;a href=&quot;activerecorderror&quot;&gt;ActiveRecordError&lt;/a&gt; will be thrown. For example:</source>
          <target state="translated">永続化オブジェクトで &lt;code&gt;touch&lt;/code&gt; を使用する必要があります。そうしないと、&lt;a href=&quot;activerecorderror&quot;&gt;ActiveRecordError&lt;/a&gt;がスローされます。例えば：</target>
        </trans-unit>
        <trans-unit id="75b7777607c65a529660c21ee27ce9672d7f3d16" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;try&lt;/code&gt; will swallow no-method errors, returning nil instead. If you want to protect against typos, use &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Object.html#method-i-try-21&quot;&gt;&lt;code&gt;try!&lt;/code&gt;&lt;/a&gt; instead:</source>
          <target state="translated">&lt;code&gt;try&lt;/code&gt; はメソッドなしのエラーを飲み込み、代わりにnilを返すことに注意してください。タイプミスから保護したい場合は、&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Object.html#method-i-try-21&quot;&gt; &lt;code&gt;try!&lt;/code&gt; を&lt;/a&gt;使用してください。代わりに：</target>
        </trans-unit>
        <trans-unit id="b9543a285676c6581ed0cdcd17dc85dccd1e4f6a" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;try&lt;/code&gt; will swallow no-method errors, returning nil instead. If you want to protect against typos, use &lt;code&gt;try!&lt;/code&gt; instead:</source>
          <target state="translated">&lt;code&gt;try&lt;/code&gt; はメソッドのないエラーを飲み込み、代わりにnilを返すことに注意してください。タイプミスから保護したい場合は、 &lt;code&gt;try!&lt;/code&gt; 使用してください！代わりに：</target>
        </trans-unit>
        <trans-unit id="723edf597c0f2c3bfba4a36a28e7ff66ad9453dc" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;where(...)&lt;/code&gt; returns a relation, not an array like the old finders. If you require an &lt;code&gt;Array&lt;/code&gt;, use &lt;code&gt;where(...).to_a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;where(...)&lt;/code&gt; がリレーションを返すことに注意してください。古いファインダーのような配列ではありません。 &lt;code&gt;Array&lt;/code&gt; が必要な場合は、 &lt;code&gt;where(...).to_a&lt;/code&gt; 使用してください。</target>
        </trans-unit>
        <trans-unit id="89aeb743b6e9b920399d003494bf2bc2791d70d4" translate="yes" xml:space="preserve">
          <source>Note that &lt;em&gt;cross-site scripting (XSS) vulnerabilities bypass all CSRF protections&lt;/em&gt;. XSS gives the attacker access to all elements on a page, so they can read the CSRF security token from a form or directly submit the form. Read &lt;a href=&quot;#cross-site-scripting-xss&quot;&gt;more about XSS&lt;/a&gt; later.</source>
          <target state="translated">&lt;em&gt;クロスサイトスクリプティング（XSS）の脆弱性はすべてのCSRF保護を回避する&lt;/em&gt;ことに注意してください。XSSにより、攻撃者はページ上のすべての要素にアクセスできるため、フォームからCSRFセキュリティトークンを読み取るか、フォームを直接送信できます。&lt;a href=&quot;#cross-site-scripting-xss&quot;&gt;XSSの詳細については&lt;/a&gt;後でお読みください。</target>
        </trans-unit>
        <trans-unit id="7947c734a16dab7b02f65f3261e5ec81aacc1fd7" translate="yes" xml:space="preserve">
          <source>Note that Active Record models will automatically detect their primary key. This can be avoided by using &lt;a href=&quot;../attributemethods/primarykey/classmethods#method-i-primary_key-3D&quot;&gt;self.primary_key=&lt;/a&gt; on the model to define the key explicitly.</source>
          <target state="translated">Active Recordモデルは自動的に主キーを検出することに注意してください。これは、モデルで&lt;a href=&quot;../attributemethods/primarykey/classmethods#method-i-primary_key-3D&quot;&gt;self.primary_key =&lt;/a&gt;を使用してキーを明示的に定義することで回避できます。</target>
        </trans-unit>
        <trans-unit id="22356cd337b0c6c9dab8adae88cbd559bed7ad97" translate="yes" xml:space="preserve">
          <source>Note that an &quot;around&quot; filter also wraps rendering. In particular, if in the example above, the view itself reads from the database (e.g. via a scope), it will do so within the transaction and thus present the data to preview.</source>
          <target state="translated">around」フィルタはレンダリングもラップすることに注意してください。特に、上の例では、ビュー自身がデータベースから読み込んでいる場合 (スコープを介してなど)、トランザクション内で読み込んでいるため、プレビューにデータを表示することになります。</target>
        </trans-unit>
        <trans-unit id="d9752283d4766c4457e128a0a519b849a1dfc3e0" translate="yes" xml:space="preserve">
          <source>Note that an &quot;around&quot; filter also wraps rendering. In particular, in the example above, if the view itself reads from the database (e.g. via a scope), it will do so within the transaction and thus present the data to preview.</source>
          <target state="translated">around」フィルタはレンダリングもラップすることに注意してください。特に、上の例では、ビュー自身がデータベースから読み込んだ場合(スコープを介してなど)、トランザクション内でそれを行い、プレビューにデータを表示します。</target>
        </trans-unit>
        <trans-unit id="33c38c998a3ea7a672e44bb1c497e9aae87c43e8" translate="yes" xml:space="preserve">
          <source>Note that an object instantiated with &lt;code&gt;new&lt;/code&gt; will not report errors even if it's technically invalid, because validations are automatically run only when the object is saved, such as with the &lt;code&gt;create&lt;/code&gt; or &lt;code&gt;save&lt;/code&gt; methods.</source>
          <target state="translated">&lt;code&gt;new&lt;/code&gt; でインスタンス化されたオブジェクトは、たとえそれが技術的に無効であってもエラーを報告しないことに注意してください。検証は &lt;code&gt;create&lt;/code&gt; または &lt;code&gt;save&lt;/code&gt; メソッドなどでオブジェクトが保存されたときにのみ自動的に実行されるためです。</target>
        </trans-unit>
        <trans-unit id="6f1c15a9adf9cf7aefea6b6a4f52f3bdd59c79b7" translate="yes" xml:space="preserve">
          <source>Note that anything marked as an identifier will automatically create a delegate by the same name on any channel instances created off the connection.</source>
          <target state="translated">識別子としてマークされているものは、接続から離れて作成されたチャンネルインスタンスに同名のデリゲートが自動的に作成されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="f40e349444c4026fd16949229b30604f440850f5" translate="yes" xml:space="preserve">
          <source>Note that appending directly to &lt;code&gt;I18n.load_path&lt;/code&gt; instead of to the application's configured i18n will &lt;em&gt;not&lt;/em&gt; override translations from external gems.</source>
          <target state="translated">アプリケーションの構成済みi18nではなく &lt;code&gt;I18n.load_path&lt;/code&gt; に直接追加しても、外部gemからの変換&lt;em&gt;は&lt;/em&gt;オーバーライドされ&lt;em&gt;ない&lt;/em&gt;ことに注意してください。</target>
        </trans-unit>
        <trans-unit id="5cf442486084fb72e4ad77056cb08bfbaed774fb" translate="yes" xml:space="preserve">
          <source>Note that appending directly to &lt;code&gt;I18n.load_paths&lt;/code&gt; instead of to the application's configured i18n will &lt;em&gt;not&lt;/em&gt; override translations from external gems.</source>
          <target state="translated">アプリケーションの構成済みのi18nではなく &lt;code&gt;I18n.load_paths&lt;/code&gt; に直接追加しても、外部gemからの変換&lt;em&gt;は&lt;/em&gt;オーバーライドされ&lt;em&gt;ない&lt;/em&gt;ことに注意してください。</target>
        </trans-unit>
        <trans-unit id="e8e8087a6dd1f253f818fe2957d00759d30903a1" translate="yes" xml:space="preserve">
          <source>Note that autosave will only trigger for already-persisted association records if the records themselves have been changed. This is to protect against &lt;code&gt;SystemStackError&lt;/code&gt; caused by circular association validations. The one exception is if a custom validation context is used, in which case the validations will always fire on the associated records.</source>
          <target state="translated">自動保存は、レコード自体が変更されている場合にのみ、すでに永続化されている関連付けレコードに対してトリガーされることに注意してください。これは、循環アソシエーション検証によって引き起こされる &lt;code&gt;SystemStackError&lt;/code&gt; から保護するためです。1つの例外は、カスタム検証コンテキストが使用されている場合です。この場合、検証は常に関連するレコードに対して実行されます。</target>
        </trans-unit>
        <trans-unit id="46a4821ec5868bd38360ccd2974f3d24f5c11f98" translate="yes" xml:space="preserve">
          <source>Note that basic authentication is insecure over unencrypted HTTP. An attacker that intercepts cleartext requests to the Postmark ingress can learn its password. You should only use the Postmark ingress over HTTPS.</source>
          <target state="translated">基本的な認証は暗号化されていないHTTPでは安全ではないことに注意してください。Postmark ingressへのクリアテキスト要求を傍受した攻撃者は、そのパスワードを知ることができます。Postmark ingress は HTTPS 上でのみ使用してください。</target>
        </trans-unit>
        <trans-unit id="5374749430d739cb1e5e2cfb76a02f30988ae462" translate="yes" xml:space="preserve">
          <source>Note that basic authentication is insecure over unencrypted HTTP. An attacker that intercepts cleartext requests to the SendGrid ingress can learn its password. You should only use the SendGrid ingress over HTTPS.</source>
          <target state="translated">基本的な認証は暗号化されていない HTTP 上では安全ではないことに注意してください。SendGrid ingress へのクリアテキスト要求を傍受した攻撃者は、そのパスワードを知ることができます。SendGrid ingress は HTTPS 上でのみ使用してください。</target>
        </trans-unit>
        <trans-unit id="57ec50d8410464d568b5c05fc066b0c1779894de" translate="yes" xml:space="preserve">
          <source>Note that basic authentication is insecure over unencrypted HTTP. An attacker that intercepts cleartext requests to the ingress can learn its password. You should only use this ingress over HTTPS.</source>
          <target state="translated">基本的な認証は、暗号化されていない HTTP 上では安全ではないことに注意してください。ingress へのクリアテキスト要求を傍受した攻撃者は、そのパスワードを知ることができます。このイングレスは HTTPS 上でのみ使用してください。</target>
        </trans-unit>
        <trans-unit id="78dbd1cc164b82b4dcb8b006687d565c7961a7a4" translate="yes" xml:space="preserve">
          <source>Note that being unreachable does not imply being anonymous:</source>
          <target state="translated">連絡が取れないということは、匿名であることを意味しないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="e8d3ecb667ba792a097afde3710779d973b5d3cf" translate="yes" xml:space="preserve">
          <source>Note that building your own string from user input may expose your application to injection attacks if not done properly. As an alternative, it is recommended to use one of the following methods.</source>
          <target state="translated">ユーザー入力から独自の文字列を構築することは、適切に行われていない場合、アプリケーションがインジェクション攻撃にさらされる可能性があることに注意してください。代替手段として、以下のいずれかの方法を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="88c3e83adab9320795c50aab4d553ec7f849c321" translate="yes" xml:space="preserve">
          <source>Note that changing your secret_key_base will invalidate all existing session. Additionally, you should take care to make sure you are not relying on the ability to decode signed cookies generated by your app in external applications or JavaScript before changing it.</source>
          <target state="translated">secret_key_baseを変更すると、既存のすべてのセッションが無効になることに注意してください。さらに、変更する前に、外部アプリケーションやJavaScriptでアプリが生成した署名付きCookieをデコードする機能に依存していないことを確認するように注意する必要があります。</target>
        </trans-unit>
        <trans-unit id="6df0738b3ba5e7544dc16135160c562824d55adc" translate="yes" xml:space="preserve">
          <source>Note that checking for uniqueness using something like &lt;code&gt;include?&lt;/code&gt; is subject to race conditions. Do not attempt to use &lt;code&gt;include?&lt;/code&gt; to enforce distinctness in an association. For instance, using the article example from above, the following code would be racy because multiple users could be attempting this at the same time:</source>
          <target state="translated">&lt;code&gt;include?&lt;/code&gt; ようなものを使用して一意性をチェックすることに注意してください？競合状態の影響を受けます。 &lt;code&gt;include?&lt;/code&gt; を使用しないでください。関連付けを明確にするため。たとえば、上記の記事の例を使用すると、複数のユーザーが同時にこれを試みる可能性があるため、次のコードは際どいものになります。</target>
        </trans-unit>
        <trans-unit id="ae15203738a3a52937b4eae19c6cd23f7d2a5d67" translate="yes" xml:space="preserve">
          <source>Note that core extensions define &lt;code&gt;Hash#with_indifferent_access&lt;/code&gt;:</source>
          <target state="translated">コア拡張が &lt;code&gt;Hash#with_indifferent_access&lt;/code&gt; を定義していることに注意してください：</target>
        </trans-unit>
        <trans-unit id="aab3b21d54b61763e1564b0cc5ab99fbc9bfb2e4" translate="yes" xml:space="preserve">
          <source>Note that if a query matches multiple records, &lt;code&gt;find_by&lt;/code&gt; will fetch only the first one and ignore the others (see the &lt;code&gt;LIMIT 1&lt;/code&gt; statement above).</source>
          <target state="translated">クエリが複数のレコードに一致する場合、 &lt;code&gt;find_by&lt;/code&gt; は最初のレコードのみをフェッチし、他のレコードは無視します（上記の &lt;code&gt;LIMIT 1&lt;/code&gt; ステートメントを参照）。</target>
        </trans-unit>
        <trans-unit id="4f44b8fe38600ce94c3eb35df237f1de437ac4de" translate="yes" xml:space="preserve">
          <source>Note that if the target is not &lt;code&gt;nil&lt;/code&gt; then the call is attempted regardless of the &lt;code&gt;:allow_nil&lt;/code&gt; option, and thus an exception is still raised if said object does not respond to the method:</source>
          <target state="translated">ターゲットが &lt;code&gt;nil&lt;/code&gt; でない場合は、 &lt;code&gt;:allow_nil&lt;/code&gt; オプションに関係なく呼び出しが試行されるため、上記のオブジェクトがメソッドに応答しない場合でも例外が発生します。</target>
        </trans-unit>
        <trans-unit id="b72ef2b72c287b15edb8d7e8e3522050aa85ca8a" translate="yes" xml:space="preserve">
          <source>Note that if you do not specify the &lt;code&gt;:inverse_of&lt;/code&gt; option, then Active Record will try to automatically guess the inverse association based on heuristics.</source>
          <target state="translated">&lt;code&gt;:inverse_of&lt;/code&gt; オプションを指定しない場合、アクティブレコードはヒューリスティックに基づいて逆関連付けを自動的に推測しようとします。</target>
        </trans-unit>
        <trans-unit id="5dbde3470700eeb4eeaddf252a725a2d26c26cf8" translate="yes" xml:space="preserve">
          <source>Note that if you return a path without a leading slash then the URL is prefixed with the current SCRIPT_NAME environment variable. This is typically '/' but may be different in a mounted engine or where the application is deployed to a subdirectory of a website.</source>
          <target state="translated">先頭にスラッシュのないパスを返した場合、URLの先頭には現在の環境変数SCRIPT_NAMEが付くことに注意してください。これは通常'/'ですが、マウントされたエンジンやアプリケーションがウェブサイトのサブディレクトリにデプロイされている場合は異なるかもしれません。</target>
        </trans-unit>
        <trans-unit id="c61f8e19cb72840c59ad034d835c6608ba8ae691" translate="yes" xml:space="preserve">
          <source>Note that if you use &lt;code&gt;permit&lt;/code&gt; in a key that points to a hash, it won't allow all the hash. You also need to specify which attributes inside the hash should be permitted.</source>
          <target state="translated">ハッシュを指すキーで &lt;code&gt;permit&lt;/code&gt; を使用すると、すべてのハッシュが許可されないことに注意してください。また、ハッシュ内のどの属性を許可するかを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="1fc227d776d965752397dbfd3f1acdf5bc6a2ed1" translate="yes" xml:space="preserve">
          <source>Note that if you want to immediately require dependencies when the engine is required, you should require them before the engine's initialization. For example:</source>
          <target state="translated">エンジンが必要になったときにすぐに依存関係を要求したい場合は、エンジンの初期化前に依存関係を要求する必要があることに注意してください。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="aa297c0fe95f42b1a1cac85dbe866912a193d048" translate="yes" xml:space="preserve">
          <source>Note that in that case &lt;code&gt;module_parent&lt;/code&gt; returns &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">その場合、 &lt;code&gt;module_parent&lt;/code&gt; は &lt;code&gt;Object&lt;/code&gt; を返すことに注意してください。</target>
        </trans-unit>
        <trans-unit id="01b4e173af86d46b015dbb7131d2e90d6a871b4b" translate="yes" xml:space="preserve">
          <source>Note that in that case &lt;code&gt;module_parent_name&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">その場合、 &lt;code&gt;module_parent_name&lt;/code&gt; は &lt;code&gt;nil&lt;/code&gt; を返すことに注意してください。</target>
        </trans-unit>
        <trans-unit id="29d18aa10fe13a77b68f28afe44d33a98a83b983" translate="yes" xml:space="preserve">
          <source>Note that in the above example, to disallow the creation of a plain &lt;code&gt;Polygon&lt;/code&gt;, you should use &lt;code&gt;validates :type, presence:
true&lt;/code&gt;, instead of setting it as an abstract class. This way, &lt;code&gt;Polygon&lt;/code&gt; will stay in the hierarchy, and Active Record will continue to correctly derive the table name.</source>
          <target state="translated">上記の例では、プレーンな &lt;code&gt;Polygon&lt;/code&gt; の作成を禁止するには、抽象クラスとして設定する代わりに &lt;code&gt;validates :type, presence: true&lt;/code&gt; を使用する必要があります。このようにして、 &lt;code&gt;Polygon&lt;/code&gt; は階層内にとどまり、Active Recordは引き続きテーブル名を正しく導き出します。</target>
        </trans-unit>
        <trans-unit id="37ee3be5d2ed36a645c1e37b3a6a3854e08fb2cc" translate="yes" xml:space="preserve">
          <source>Note that interceptors need to be registered both with &lt;code&gt;register_interceptor&lt;/code&gt; and &lt;code&gt;register_preview_interceptor&lt;/code&gt; if they should operate on both sending and previewing emails.</source>
          <target state="translated">インターセプタは、との両方を登録する必要があることに注意 &lt;code&gt;register_interceptor&lt;/code&gt; と &lt;code&gt;register_preview_interceptor&lt;/code&gt; 彼らは両方の送信とプレビュー電子メールを操作する必要がある場合。</target>
        </trans-unit>
        <trans-unit id="e002c10e961f1c824fc07296b73d779cf5dde89f" translate="yes" xml:space="preserve">
          <source>Note that it also means that associations marked for destruction won't be destroyed directly. They will however still be marked for destruction.</source>
          <target state="translated">これは、破壊のためにマークされた関連付けが直接破壊されないことも意味していることに注意してください。しかし、それらはまだ破壊のためにマークされています。</target>
        </trans-unit>
        <trans-unit id="f3a0409f0e1222b726a5d13c3e9b75b2f1cb2598" translate="yes" xml:space="preserve">
          <source>Note that it handles both ASCII and Unicode whitespace.</source>
          <target state="translated">ASCII と Unicode の両方のホワイトスペースを扱うことに注意してください。</target>
        </trans-unit>
        <trans-unit id="072cbc6561b444de9cb58baa2b73bc9a7f982077" translate="yes" xml:space="preserve">
          <source>Note that it is also possible to assign a flash message as part of the redirection. You can assign &lt;code&gt;:notice&lt;/code&gt;, &lt;code&gt;:alert&lt;/code&gt; or the general purpose &lt;code&gt;:flash&lt;/code&gt;:</source>
          <target state="translated">リダイレクトの一部としてフラッシュメッセージを割り当てることもできます。 &lt;code&gt;:notice&lt;/code&gt; 、 &lt;code&gt;:alert&lt;/code&gt; 、または汎用の &lt;code&gt;:flash&lt;/code&gt; を割り当てることができます。</target>
        </trans-unit>
        <trans-unit id="dcc3e916a86372cb28ffccd804eefdd6ebdbdcff" translate="yes" xml:space="preserve">
          <source>Note that it's still possible to generate a race condition in the database in the same way that &lt;a href=&quot;../validations/classmethods#method-i-validates_uniqueness_of&quot;&gt;validates_uniqueness_of&lt;/a&gt; can. You're encouraged to add a unique index in the database to deal with this even more unlikely scenario.</source>
          <target state="translated">&lt;a href=&quot;../validations/classmethods#method-i-validates_uniqueness_of&quot;&gt;validates_uniqueness_of&lt;/a&gt;ができるのと同じ方法でデータベースに競合状態を生成することがまだ可能であることに注意してください。このようなシナリオに対処するために、データベースに一意のインデックスを追加することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="4109a799327f6050b01b125eed5872d092866ad4" translate="yes" xml:space="preserve">
          <source>Note that keys are treated differently than &lt;a href=&quot;activesupport/hashwithindifferentaccess&quot;&gt;&lt;code&gt;HashWithIndifferentAccess&lt;/code&gt;&lt;/a&gt;, meaning that string and symbol keys will not match.</source>
          <target state="translated">キーは&lt;a href=&quot;activesupport/hashwithindifferentaccess&quot;&gt; &lt;code&gt;HashWithIndifferentAccess&lt;/code&gt; と&lt;/a&gt;は異なる方法で処理されることに注意してください。つまり、文字列キーと記号キーは一致しません。</target>
        </trans-unit>
        <trans-unit id="1cce95eb30e93b5a6838836fe15a98374b38e1be" translate="yes" xml:space="preserve">
          <source>Note that keys are treated differently than &lt;a href=&quot;activesupport/hashwithindifferentaccess&quot;&gt;HashWithIndifferentAccess&lt;/a&gt;, meaning that string and symbol keys will not match.</source>
          <target state="translated">キーは&lt;a href=&quot;activesupport/hashwithindifferentaccess&quot;&gt;HashWithIndifferentAccessと&lt;/a&gt;は異なる方法で処理されることに注意してください。つまり、文字列キーとシンボルキーは一致しません。</target>
        </trans-unit>
        <trans-unit id="ad94e60a7f2b7c1f49651af5196003959035f01b" translate="yes" xml:space="preserve">
          <source>Note that negative CAPTCHAs are only effective against dumb bots and won't suffice to protect critical applications from targeted bots. Still, the negative and positive CAPTCHAs can be combined to increase the performance, e.g., if the &quot;honeypot&quot; field is not empty (bot detected), you won't need to verify the positive CAPTCHA, which would require an HTTPS request to Google ReCaptcha before computing the response.</source>
          <target state="translated">否定的な CAPTCHA は間抜けなボットに対してのみ有効であり、標的とされたボットから重要なアプリケーションを保護するには不十分であることに注意してください。例えば、&quot;honeypot &quot;フィールドが空でない場合(ボットが検出された場合)は、正のCAPTCHAを検証する必要はありませんが、レスポンスを計算する前にGoogle ReCaptchaへのHTTPSリクエストが必要になります。</target>
        </trans-unit>
        <trans-unit id="b604cb6faa93098b0d6c2b2506cc1683cb7ae6ca" translate="yes" xml:space="preserve">
          <source>Note that new records are different from any other record by definition, unless the other record is the receiver itself. Besides, if you fetch existing records with &lt;code&gt;select&lt;/code&gt; and leave the ID out, you're on your own, this predicate will return false.</source>
          <target state="translated">他のレコードがレシーバー自体でない限り、新しいレコードは他のレコードと定義上異なることに注意してください。さらに、 &lt;code&gt;select&lt;/code&gt; を使用して既存のレコードをフェッチし、IDを省略した場合は、自分自身でこの述語はfalseを返します。</target>
        </trans-unit>
        <trans-unit id="22c983e77149090556408a4b167a572de601b14a" translate="yes" xml:space="preserve">
          <source>Note that now there can be more than one router in your application, and it's better to avoid passing requests through many routers. Consider this situation:</source>
          <target state="translated">現在、アプリケーションには複数のルータが存在する可能性があり、多くのルータにリクエストを渡すのは避けた方が良いということに注意してください。このような状況を考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="bb19839e635e04134fc7b559e09ccea24da6e26b" translate="yes" xml:space="preserve">
          <source>Note that numbers are not mentioned. In particular, 0 and 0.0 are &lt;strong&gt;not&lt;/strong&gt; blank.</source>
          <target state="translated">数字は記載されていないことに注意してください。特に、0と0.0は空白ではあり&lt;strong&gt;ません&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="a7419129c6af853c63a695a7e5692fb54165cfa7" translate="yes" xml:space="preserve">
          <source>Note that partials are not supported to be rendered with streaming, so in such cases, we just wrap them in an array.</source>
          <target state="translated">部分要素はストリーミングでのレンダリングには対応していないので、そのような場合は配列でラップすることに注意してください。</target>
        </trans-unit>
        <trans-unit id="1d8ce99c954ddc9604f86aea355eee9cdf6e8de2" translate="yes" xml:space="preserve">
          <source>Note that passing custom disallowed types will override the default types, which are &lt;code&gt;Symbol&lt;/code&gt; and YAML.</source>
          <target state="translated">カスタムの許可されていないタイプを渡すと、デフォルトのタイプである &lt;code&gt;Symbol&lt;/code&gt; とYAMLがオーバーライドされることに注意してください。</target>
        </trans-unit>
        <trans-unit id="ae24f5949134ca75ea07bd1f7b2e67eacecdb162" translate="yes" xml:space="preserve">
          <source>Note that passing custom disallowed types will override the default types, which are Symbol and YAML.</source>
          <target state="translated">カスタムの許可されない型を渡すと、デフォルトの型であるSymbolとYAMLをオーバーライドすることに注意してください。</target>
        </trans-unit>
        <trans-unit id="b84d9529ac53faf44afee2779503602281d1a9c0" translate="yes" xml:space="preserve">
          <source>Note that running the &lt;code&gt;db:migrate&lt;/code&gt; command also invokes the &lt;code&gt;db:schema:dump&lt;/code&gt; command, which will update your &lt;code&gt;db/schema.rb&lt;/code&gt; file to match the structure of your database.</source>
          <target state="translated">&lt;code&gt;db:migrate&lt;/code&gt; コマンドを実行すると、 &lt;code&gt;db:schema:dump&lt;/code&gt; コマンドも呼び出され、 &lt;code&gt;db/schema.rb&lt;/code&gt; ファイルがデータベースの構造と一致するように更新されます。</target>
        </trans-unit>
        <trans-unit id="41ece01fe72a7508a1b0c964b1a65ee164b23bb9" translate="yes" xml:space="preserve">
          <source>Note that setting the UUID primary key default value to &lt;code&gt;nil&lt;/code&gt; will require you to assure that you always provide a UUID value before saving a record (as primary keys cannot be &lt;code&gt;nil&lt;/code&gt;). This might be done via the &lt;code&gt;SecureRandom.uuid&lt;/code&gt; method and a &lt;code&gt;before_save&lt;/code&gt; callback, for instance.</source>
          <target state="translated">UUID主キーのデフォルト値を &lt;code&gt;nil&lt;/code&gt; に設定すると、レコードを保存する前に必ずUUID値を提供する必要があることに注意してください（主キーは &lt;code&gt;nil&lt;/code&gt; にできないため）。これは、 &lt;code&gt;before_save&lt;/code&gt; 、 &lt;code&gt;SecureRandom.uuid&lt;/code&gt; メソッドとbefore_saveコールバックを介して行うことができます。</target>
        </trans-unit>
        <trans-unit id="289fcb6dd0c2e250498b73e7a017f254410a24ff" translate="yes" xml:space="preserve">
          <source>Note that some databases are configured to perform case-insensitive searches anyway.</source>
          <target state="translated">いくつかのデータベースは、いずれにせよ大文字小文字を区別しない検索を実行するように設定されていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="350f976200592f01983e5260d34b1c6c064ed87c" translate="yes" xml:space="preserve">
          <source>Note that some of the migrations may be skipped if a migration with the same name already exists in application. In such a situation you must decide whether to leave that migration or rename the migration in the application and rerun copying migrations.</source>
          <target state="translated">同じ名前のマイグレーションがアプリケーションに既に存在する場合、一部のマイグレーションはスキップされる可能性があることに注意してください。このような状況では、そのマイグレーションを残すか、アプリケーション内のマイグレーションの名前を変更して、マイグレーションのコピーを再実行するかを決定する必要があります。</target>
        </trans-unit>
        <trans-unit id="56eed9c041b6163206a5e9b6cdce438725ed6596" translate="yes" xml:space="preserve">
          <source>Note that the +do end+ syntax for the redirect block wouldn't work, as Ruby would pass the block to &lt;code&gt;get&lt;/code&gt; instead of &lt;code&gt;redirect&lt;/code&gt;. Use &lt;code&gt;{ ... }&lt;/code&gt; instead.</source>
          <target state="translated">Rubyが &lt;code&gt;redirect&lt;/code&gt; の代わりに &lt;code&gt;get&lt;/code&gt; するブロックを渡すため、リダイレクトブロックの+ do end +構文は機能しないことに注意してください。代わりに &lt;code&gt;{ ... }&lt;/code&gt; 使用してください。</target>
        </trans-unit>
        <trans-unit id="0b42c6a4a4341fd9958532c716f1eb5ee92beecb" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;:as&lt;/code&gt; option given to mount takes the &lt;code&gt;engine_name&lt;/code&gt; as default, so most of the time you can simply omit it.</source>
          <target state="translated">mountに指定さ &lt;code&gt;:as&lt;/code&gt; た：asオプションは &lt;code&gt;engine_name&lt;/code&gt; をデフォルトとして使用するため、ほとんどの場合、省略できます。</target>
        </trans-unit>
        <trans-unit id="7a468e9d4e4a4f9bded222303b80c21107fd3a82" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;:autosave&lt;/code&gt; option is automatically enabled on every association that &lt;a href=&quot;classmethods#method-i-accepts_nested_attributes_for&quot;&gt;#accepts_nested_attributes_for&lt;/a&gt; is used for.</source>
          <target state="translated">&lt;code&gt;:autosave&lt;/code&gt; &lt;a href=&quot;classmethods#method-i-accepts_nested_attributes_for&quot;&gt;autosave&lt;/a&gt;オプションは、＃accepts_nested_attributes_forが使用されるすべての関連付けで自動的に有効になることに注意してください。</target>
        </trans-unit>
        <trans-unit id="79d9df15e5b15a29b5f9331ea392518b5e21c328" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;:autosave&lt;/code&gt; option is automatically enabled on every association that &lt;a href=&quot;classmethods#method-i-accepts_nested_attributes_for&quot;&gt;&lt;code&gt;accepts_nested_attributes_for&lt;/code&gt;&lt;/a&gt; is used for.</source>
          <target state="translated">&lt;code&gt;:autosave&lt;/code&gt; &lt;a href=&quot;classmethods#method-i-accepts_nested_attributes_for&quot;&gt; &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt; &lt;/a&gt;オプションは、accepts_nested_attributes_forが使用されるすべての関連付けで自動的に有効になることに注意してください。</target>
        </trans-unit>
        <trans-unit id="a9f9248fbb6cde034e039397fee13f9a82a3513e" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;projects_attributes=&lt;/code&gt; writer method is in fact required for &lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt; to correctly identify &lt;code&gt;:projects&lt;/code&gt; as a collection, and the correct indices to be set in the form markup.</source>
          <target state="translated">ことを注意 &lt;code&gt;projects_attributes=&lt;/code&gt; ライターの方法は、実際に要求される&lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt;正しく識別するために &lt;code&gt;:projects&lt;/code&gt; のコレクションとして、フォームのマークアップに設定する正しい指標。</target>
        </trans-unit>
        <trans-unit id="114bb58c314f2b8afeaf68327a1ff48a67af8edf" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;projects_attributes=&lt;/code&gt; writer method is in fact required for &lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt;&lt;code&gt;fields_for&lt;/code&gt;&lt;/a&gt; to correctly identify &lt;code&gt;:projects&lt;/code&gt; as a collection, and the correct indices to be set in the form markup.</source>
          <target state="translated">実際、&lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt; &lt;code&gt;fields_for&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;:projects&lt;/code&gt; をコレクションとして正しく識別し、フォームマークアップに正しいインデックスを設定するには、 &lt;code&gt;projects_attributes=&lt;/code&gt; writerメソッドが必要であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="bba717142b3857ce76f41cd84a25f35a3e8fb25a" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;projects_attributes=&lt;/code&gt; writer method is in fact required for &lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt; to correctly identify &lt;code&gt;:projects&lt;/code&gt; as a collection, and the correct indices to be set in the form markup.</source>
          <target state="translated">ことを注意 &lt;code&gt;projects_attributes=&lt;/code&gt; ライターの方法は、実際に要求される&lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt;正しく識別するために &lt;code&gt;:projects&lt;/code&gt; のコレクションとして、フォームのマークアップに設定する正しい指標。</target>
        </trans-unit>
        <trans-unit id="7d8668f5eb710bd6a65908c913b5ec27fb10b34e" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;projects_attributes=&lt;/code&gt; writer method is in fact required for &lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;&lt;code&gt;fields_for&lt;/code&gt;&lt;/a&gt; to correctly identify &lt;code&gt;:projects&lt;/code&gt; as a collection, and the correct indices to be set in the form markup.</source>
          <target state="translated">実際、&lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt; &lt;code&gt;fields_for&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;:projects&lt;/code&gt; をコレクションとして正しく識別し、フォームマークアップに正しいインデックスを設定するには、 &lt;code&gt;projects_attributes=&lt;/code&gt; writerメソッドが必要であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="68fe7c790c83e9c2b8372df6432ade06d4a90302" translate="yes" xml:space="preserve">
          <source>Note that the MD5 is taken of the entire template file, not just what's within the cache do/end call. So it's possible that changing something outside of that call will still expire the cache.</source>
          <target state="translated">MD5 はキャッシュの do/end 呼び出しの中だけではなく、テンプレートファイル全体から取得されることに注意してください。そのため、その呼び出しの外で何かを変更してもキャッシュは有効期限切れになる可能性があります。</target>
        </trans-unit>
        <trans-unit id="a9d218f2ca0876e04a64af92cc587d9b53ea48ef" translate="yes" xml:space="preserve">
          <source>Note that the above code is database-agnostic: it will run in MySQL, PostgreSQL, Oracle, and others. You can learn more about migrations in the &lt;a href=&quot;active_record_migrations&quot;&gt;Active Record Migrations guide&lt;/a&gt;.</source>
          <target state="translated">上記のコードはデータベースに依存しないことに注意してください。MySQL、PostgreSQL、Oracleなどで実行されます。移行の詳細については、&lt;a href=&quot;active_record_migrations&quot;&gt;アクティブレコードの移行ガイド&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="71620954de70d1be268160bad4cd86ec4e084773" translate="yes" xml:space="preserve">
          <source>Note that the closing tag cannot be of the style &lt;code&gt;-%&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">終了タグのスタイルを &lt;code&gt;-%&amp;gt;&lt;/code&gt; にすることはできません。</target>
        </trans-unit>
        <trans-unit id="6e7d6c161996279e55e9a7f8cd6bc7d438276479" translate="yes" xml:space="preserve">
          <source>Note that the default error messages are plural (e.g., &quot;is too short (minimum is %{count} characters)&quot;). For this reason, when &lt;code&gt;:minimum&lt;/code&gt; is 1 you should provide a custom message or use &lt;code&gt;presence: true&lt;/code&gt; instead. When &lt;code&gt;:in&lt;/code&gt; or &lt;code&gt;:within&lt;/code&gt; have a lower limit of 1, you should either provide a custom message or call &lt;code&gt;presence&lt;/code&gt; prior to &lt;code&gt;length&lt;/code&gt;.</source>
          <target state="translated">デフォルトのエラーメッセージは複数形であることに注意してください（たとえば、「短すぎます（最小は％{count}文字）」）。このため、 &lt;code&gt;:minimum&lt;/code&gt; が1の場合は、カスタムメッセージを提供するか、代わりに &lt;code&gt;presence: true&lt;/code&gt; 使用する必要があります。とき &lt;code&gt;:in&lt;/code&gt; か &lt;code&gt;:within&lt;/code&gt; 1の下限を持っている、あなたはどちらかのカスタムメッセージやコール・提供しなければならない &lt;code&gt;presence&lt;/code&gt; に先立って &lt;code&gt;length&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="686dd5a3681eb94aa1b29e89f703ca327c41ee3d" translate="yes" xml:space="preserve">
          <source>Note that the default error messages are plural (e.g., &quot;is too short (minimum is %{count} characters)&quot;). For this reason, when &lt;code&gt;:minimum&lt;/code&gt; is 1 you should provide a personalized message or use &lt;code&gt;presence: true&lt;/code&gt; instead. When &lt;code&gt;:in&lt;/code&gt; or &lt;code&gt;:within&lt;/code&gt; have a lower limit of 1, you should either provide a personalized message or call &lt;code&gt;presence&lt;/code&gt; prior to &lt;code&gt;length&lt;/code&gt;.</source>
          <target state="translated">デフォルトのエラーメッセージは複数形であることに注意してください（たとえば、「短すぎる（最小は％{count}文字）」）。このため、 &lt;code&gt;:minimum&lt;/code&gt; が1の場合は、パーソナライズされたメッセージを提供するか、代わりに &lt;code&gt;presence: true&lt;/code&gt; 使用する必要があります。とき &lt;code&gt;:in&lt;/code&gt; か &lt;code&gt;:within&lt;/code&gt; 1の下限を持っている、あなたはどちらかのパーソナライズされたメッセージや通話提供しなければならない &lt;code&gt;presence&lt;/code&gt; に先立って &lt;code&gt;length&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f1f0fde9874f69ccb2896442786f865a18ee23ff" translate="yes" xml:space="preserve">
          <source>Note that the endpoint, default values, and submit button label are tailored for &lt;code&gt;@person&lt;/code&gt;. That works that way because the involved helpers know whether the resource is a new record or not, and generate HTML accordingly.</source>
          <target state="translated">エンドポイント、デフォルト値、送信ボタンのラベルは &lt;code&gt;@person&lt;/code&gt; に合わせて調整されていることに注意してください。関係するヘルパーがリソースが新しいレコードであるかどうかを認識し、それに応じてHTMLを生成するため、これはそのように機能します。</target>
        </trans-unit>
        <trans-unit id="88b5d730eba76cc27fd97c8d6e638a4e37441c7b" translate="yes" xml:space="preserve">
          <source>Note that the filter in this case uses &lt;code&gt;send&lt;/code&gt; because the &lt;code&gt;logged_in?&lt;/code&gt; method is private and the filter does not run in the scope of the controller. This is not the recommended way to implement this particular filter, but in more simple cases it might be useful.</source>
          <target state="translated">この場合の用途でのフィルタがいることを注意 &lt;code&gt;send&lt;/code&gt; ため &lt;code&gt;logged_in?&lt;/code&gt; メソッドはプライベートであり、フィルターはコントローラーのスコープでは実行されません。これは、この特定のフィルターを実装するための推奨される方法ではありませんが、より単純なケースでは役立つ場合があります。</target>
        </trans-unit>
        <trans-unit id="74eb99d06a69d4b54123aca3dbb5b9ad46d3f318" translate="yes" xml:space="preserve">
          <source>Note that the filter in this case uses &lt;code&gt;send&lt;/code&gt; because the &lt;code&gt;logged_in?&lt;/code&gt; method is private and the filter does not run in the scope of the controller. This is not the recommended way to implement this particular filter, but in simpler cases it might be useful.</source>
          <target state="translated">この場合のフィルターは、 &lt;code&gt;logged_in?&lt;/code&gt; のためにsendを使用 &lt;code&gt;send&lt;/code&gt; ことに注意してください。メソッドはプライベートであり、フィルターはコントローラーのスコープ内で実行されません。これは、この特定のフィルターを実装するための推奨される方法ではありませんが、より単純なケースでは役立つ場合があります。</target>
        </trans-unit>
        <trans-unit id="ec7678e438c40cc3477299adc32378f068a1ddef" translate="yes" xml:space="preserve">
          <source>Note that the implicit render done by ActionController detects if &lt;code&gt;render&lt;/code&gt; has been called, so the following will work without errors:</source>
          <target state="translated">ActionControllerによって行われる暗黙的なレンダリングは、 &lt;code&gt;render&lt;/code&gt; が呼び出されたかどうかを検出するため、次のコードはエラーなしで機能します。</target>
        </trans-unit>
        <trans-unit id="be5be3e7764ae5644163769bf7cfc5d6fd2d1a1e" translate="yes" xml:space="preserve">
          <source>Note that the model is &lt;em&gt;not&lt;/em&gt; yet removed from the database:</source>
          <target state="translated">モデルはまだデータベースから削除されて&lt;em&gt;いない&lt;/em&gt;ことに注意してください。</target>
        </trans-unit>
        <trans-unit id="954907bb7af2f55cb897a52cdad3e0923f08a201" translate="yes" xml:space="preserve">
          <source>Note that the model will &lt;em&gt;not&lt;/em&gt; be destroyed until the parent is saved.</source>
          <target state="translated">親が保存されるまで、モデルは破棄され&lt;em&gt;ない&lt;/em&gt;ことに注意してください。</target>
        </trans-unit>
        <trans-unit id="02a01b211c29bd75de844342e9c04d4a40fbfccc" translate="yes" xml:space="preserve">
          <source>Note that the partial layout has access to the local &lt;code&gt;article&lt;/code&gt; variable that was passed into the &lt;code&gt;render&lt;/code&gt; call. However, unlike application-wide layouts, partial layouts still have the underscore prefix.</source>
          <target state="translated">部分レイアウトは、 &lt;code&gt;render&lt;/code&gt; コールに渡されたローカル &lt;code&gt;article&lt;/code&gt; 変数にアクセスできることに注意してください。ただし、アプリケーション全体のレイアウトとは異なり、部分レイアウトにはアンダースコアのプレフィックスが付いています。</target>
        </trans-unit>
        <trans-unit id="4c3e84c4e2bb503561ce5906bf724d8b22651774" translate="yes" xml:space="preserve">
          <source>Note that the prefix takes scopes into account as well, so relations between &lt;code&gt;Catalog::Category&lt;/code&gt; and &lt;code&gt;Catalog::Product&lt;/code&gt; or &lt;code&gt;Catalog::Category&lt;/code&gt; and &lt;code&gt;CatalogProduct&lt;/code&gt; need to be updated similarly.</source>
          <target state="translated">プレフィックスではスコープも考慮されるため、 &lt;code&gt;Catalog::Category&lt;/code&gt; と &lt;code&gt;Catalog::Product&lt;/code&gt; または &lt;code&gt;Catalog::Category&lt;/code&gt; と &lt;code&gt;CatalogProduct&lt;/code&gt; の関係も同様に更新する必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="3f0b56e9abd80e969b8d26b5222d80ad053541d7" translate="yes" xml:space="preserve">
          <source>Note that the proc/lambda is evaluated right at the start of the mail message generation, so if you set something in the default hash using a proc, and then set the same thing inside of your mailer method, it will get overwritten by the mailer method.</source>
          <target state="translated">proc/lambdaはメールメッセージ生成の開始直後に評価されるので、procを使ってデフォルトのハッシュに何かを設定し、メーラーメソッド内で同じものを設定すると、メーラーメソッドで上書きされてしまうことに注意してください。</target>
        </trans-unit>
        <trans-unit id="4e5c95326e028fed2d2db8bde9be22b9c550d75e" translate="yes" xml:space="preserve">
          <source>Note that the proxy is rendered under a different view context. This may cause incorrect behaviour with capture methods. Consider using &lt;a href=&quot;../../abstractcontroller/helpers/classmethods#method-i-helper&quot;&gt;helper&lt;/a&gt; instead when using &lt;code&gt;capture&lt;/code&gt;.</source>
          <target state="translated">プロキシは別のビューコンテキストでレンダリングされることに注意してください。これにより、キャプチャメソッドで誤った動作が発生する可能性があります。 &lt;code&gt;capture&lt;/code&gt; を使用する場合は、代わりに&lt;a href=&quot;../../abstractcontroller/helpers/classmethods#method-i-helper&quot;&gt;ヘルパーの&lt;/a&gt;使用を検討してください。</target>
        </trans-unit>
        <trans-unit id="35d1d39da63c97db09a691dee40a2f72872404f2" translate="yes" xml:space="preserve">
          <source>Note that the request method is not verified.</source>
          <target state="translated">リクエストメソッドは検証されていないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="fcc36a612f1887cd847fa353befaf752f6184ff5" translate="yes" xml:space="preserve">
          <source>Note that the request method is not verified. The different methods are available to make the tests more expressive.</source>
          <target state="translated">リクエストメソッドは検証されていないことに注意してください。テストをより表現力のあるものにするために、さまざまなメソッドが用意されています。</target>
        </trans-unit>
        <trans-unit id="a17d9050880b0000053a7919d1eaaab1da7ea52f" translate="yes" xml:space="preserve">
          <source>Note that the return value of validation methods is not relevant. It's not possible to halt the validate callback chain.</source>
          <target state="translated">バリデーションメソッドの戻り値は関係ないことに注意してください。validateコールバックチェーンを停止することはできません。</target>
        </trans-unit>
        <trans-unit id="6264af4b7ec518a4c0d4264b64656418078b121d" translate="yes" xml:space="preserve">
          <source>Note that the usec for the time passed will be set to 0 to prevent rounding errors with external services, like MySQL (which will round instead of floor, leading to off-by-one-second errors).</source>
          <target state="translated">MySQL のような外部サービスでの丸めエラーを防ぐために、渡された時間の usec は 0 に設定されることに注意してください (これは floor の代わりに丸められ、1 秒単位ではないエラーを引き起こします)。</target>
        </trans-unit>
        <trans-unit id="09aeb0d119ddd40cd5438bcd1ca87c38a2dc4212" translate="yes" xml:space="preserve">
          <source>Note that the validator is initialized only once for the whole application life cycle, and not on each validation run.</source>
          <target state="translated">バリデータが初期化されるのはアプリケーションのライフサイクル全体で一度だけであり、毎回の検証実行時ではないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="46848172b64a0977b58ec6feefd30b9073bc4ca6" translate="yes" xml:space="preserve">
          <source>Note that the validator will be initialized &lt;em&gt;only once&lt;/em&gt; for the whole application life cycle, and not on each validation run, so be careful about using instance variables inside it.</source>
          <target state="translated">バリデーターは、アプリケーションのライフサイクル全体で&lt;em&gt;1回だけ&lt;/em&gt;初期化され、検証の実行ごとに初期化され&lt;em&gt;ない&lt;/em&gt;ことに注意してください。そのため、内部でインスタンス変数を使用する場合は注意してください。</target>
        </trans-unit>
        <trans-unit id="9dafb7ab1f43dd01f8c7c62c8b916b3286eee444" translate="yes" xml:space="preserve">
          <source>Note that these methods do not strictly require &lt;code&gt;Post&lt;/code&gt; to be a subclass of &lt;a href=&quot;../activerecord/base&quot;&gt;&lt;code&gt;ActiveRecord::Base&lt;/code&gt;&lt;/a&gt;. Any &lt;code&gt;Post&lt;/code&gt; class will work as long as its instances respond to &lt;code&gt;to_key&lt;/code&gt; and &lt;code&gt;model_name&lt;/code&gt;, given that &lt;code&gt;model_name&lt;/code&gt; responds to &lt;code&gt;param_key&lt;/code&gt;. For instance:</source>
          <target state="translated">これらのメソッドは、 &lt;code&gt;Post&lt;/code&gt; が&lt;a href=&quot;../activerecord/base&quot;&gt; &lt;code&gt;ActiveRecord::Base&lt;/code&gt; &lt;/a&gt;サブクラスである必要はないことに注意してください。任意の &lt;code&gt;Post&lt;/code&gt; そのインスタンスが応答するように、クラスは限り動作します &lt;code&gt;to_key&lt;/code&gt; と &lt;code&gt;model_name&lt;/code&gt; ことを考えると、 &lt;code&gt;model_name&lt;/code&gt; に応答 &lt;code&gt;param_key&lt;/code&gt; 。例えば：</target>
        </trans-unit>
        <trans-unit id="ae0dd2d063090bea5af276a745916be1df9fd6a9" translate="yes" xml:space="preserve">
          <source>Note that these methods do not strictly require &lt;code&gt;Post&lt;/code&gt; to be a subclass of &lt;a href=&quot;../activerecord/base&quot;&gt;ActiveRecord::Base&lt;/a&gt;. Any &lt;code&gt;Post&lt;/code&gt; class will work as long as its instances respond to &lt;code&gt;to_key&lt;/code&gt; and &lt;code&gt;model_name&lt;/code&gt;, given that &lt;code&gt;model_name&lt;/code&gt; responds to &lt;code&gt;param_key&lt;/code&gt;. For instance:</source>
          <target state="translated">これらのメソッドでは、 &lt;code&gt;Post&lt;/code&gt; が&lt;a href=&quot;../activerecord/base&quot;&gt;ActiveRecord :: Baseの&lt;/a&gt;サブクラスである必要はありません。任意の &lt;code&gt;Post&lt;/code&gt; そのインスタンスが応答するように、クラスは限り動作します &lt;code&gt;to_key&lt;/code&gt; と &lt;code&gt;model_name&lt;/code&gt; ことを考えると、 &lt;code&gt;model_name&lt;/code&gt; に応答 &lt;code&gt;param_key&lt;/code&gt; 。例えば：</target>
        </trans-unit>
        <trans-unit id="bc9001a2a86f3ffa7a896a66019a9acaefea21e1" translate="yes" xml:space="preserve">
          <source>Note that this conversion makes some assumptions about the duration of some periods, e.g. months are always 1/12 of year and years are 365.2425 days:</source>
          <target state="translated">この変換は、いくつかの期間の期間についていくつかの仮定をすることに注意してください、例えば、月は常に1年の1/12であり、年は365.2425日です。</target>
        </trans-unit>
        <trans-unit id="77cc080b11bb02e1e002cb526197387a11eb18f5" translate="yes" xml:space="preserve">
          <source>Note that this is simply 'syntactic sugar' for defining an actual class method:</source>
          <target state="translated">これは、実際のクラスメソッドを定義するための「構文上の糖質」に過ぎないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="b0ebd4a9a6512094d1e187bcc14bccbc19a4f2eb" translate="yes" xml:space="preserve">
          <source>Note that this method actually runs the queries, since the results of some are needed by the next ones when eager loading is going on.</source>
          <target state="translated">このメソッドは実際にクエリを実行することに注意してください。</target>
        </trans-unit>
        <trans-unit id="400d486fc3da7592d3e9fa738dc428190cc7b83a" translate="yes" xml:space="preserve">
          <source>Note that this module is completely decoupled from HTTP - the only requirement is a valid &lt;code&gt;_routes&lt;/code&gt; implementation.</source>
          <target state="translated">このモジュールはHTTPから完全に切り離されていることに注意してください。唯一の要件は、有効な &lt;code&gt;_routes&lt;/code&gt; 実装です。</target>
        </trans-unit>
        <trans-unit id="6a867944d9d1c972ce2678c23acf249fcb7f57d6" translate="yes" xml:space="preserve">
          <source>Note that this only protects you against the most common mistake when using the format validator - you always need to keep in mind that ^ and $ match the &lt;strong&gt;line&lt;/strong&gt; beginning and line end in Ruby, and not the beginning and end of a string.</source>
          <target state="translated">あなたは常に^と$一致していることを心に留めておく必要がある-フォーマットのバリデータを使用している場合、これが唯一の最も一般的な間違いに対してあなたを保護することを注記&lt;strong&gt;行を&lt;/strong&gt;、文字列のRubyで始まり、行の終わりではなく始まりと終わり。</target>
        </trans-unit>
        <trans-unit id="40e976053cd24cf89ca5afb4e56aca4c1a475bf8" translate="yes" xml:space="preserve">
          <source>Note that this option was added as a security measure, to ensure user input cannot be used as locale information unless it is previously known. Therefore, it's recommended not to disable this option unless you have a strong reason for doing so.</source>
          <target state="translated">このオプションはセキュリティ対策として追加されたもので、 事前にロケールがわかっていないとユーザの入力をロケール情報として使用できないことに注意しましょう。したがって、よほどの理由がない限り、このオプションを無効にしないことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="dcd7cad2f920a22df3327dba7bec9bcba84d5107" translate="yes" xml:space="preserve">
          <source>Note that this option will not affect Active Support callbacks since they never halted the chain when any value was returned.</source>
          <target state="translated">このオプションはActive Supportコールバックには影響しないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="fbd22df73644dceb2d81a8d497944e60fc8cb29d" translate="yes" xml:space="preserve">
          <source>Note that this protects you only from automatic bots, targeted tailor-made bots cannot be stopped by this. So &lt;em&gt;negative CAPTCHAs might not be good to protect login forms&lt;/em&gt;.</source>
          <target state="translated">これは自動ボットからのみ保護することに注意してください。ターゲットを絞ったオーダーメイドボットはこれによって停止できません。したがって、&lt;em&gt;負のCAPTCHAはログインフォームを保護するのに適していない場合があります&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="1c8f134d1a5ae3dfb5037cd0d0c9a0e0c1fbc96d" translate="yes" xml:space="preserve">
          <source>Note that this will also delete records marked as &lt;a href=&quot;core#method-i-readonly-3F&quot;&gt;#readonly?&lt;/a&gt;.</source>
          <target state="translated">これにより、&lt;a href=&quot;core#method-i-readonly-3F&quot;&gt;＃readonly&lt;/a&gt;としてマークされたレコードも削除されます。。</target>
        </trans-unit>
        <trans-unit id="620da313e90e0691449cfa180d7b0fbfd2313d4c" translate="yes" xml:space="preserve">
          <source>Note that this will clear anything that is being used to validate the model for both the &lt;code&gt;validates_with&lt;/code&gt; and &lt;code&gt;validate&lt;/code&gt; methods. It clears the validators that are created with an invocation of &lt;code&gt;validates_with&lt;/code&gt; and the callbacks that are set by an invocation of &lt;code&gt;validate&lt;/code&gt;.</source>
          <target state="translated">これは、両方のモデルを検証するために使用されている何でもクリアすることに注意してください &lt;code&gt;validates_with&lt;/code&gt; と &lt;code&gt;validate&lt;/code&gt; 方法を。 &lt;code&gt;validates_with&lt;/code&gt; の呼び出しで作成されたバリデーターと、 &lt;code&gt;validate&lt;/code&gt; の呼び出しによって設定されたコールバックをクリアします。</target>
        </trans-unit>
        <trans-unit id="59556d783955e645825d2046dcb1ae4013692a97" translate="yes" xml:space="preserve">
          <source>Note that to create a variant it's necessary to download the entire blob file from the service. Because of this process, you also want to be considerate about when the variant is actually processed. You shouldn't be processing variants inline in a template, for example. Delay the processing to an on-demand controller, like the one provided in &lt;a href=&quot;representationscontroller&quot;&gt;ActiveStorage::RepresentationsController&lt;/a&gt;.</source>
          <target state="translated">バリアントを作成するには、サービスからblobファイル全体をダウンロードする必要があることに注意してください。このプロセスのため、バリアントが実際に処理されるタイミングについても考慮する必要があります。たとえば、テンプレート内でインラインでバリアントを処理するべきではありません。&lt;a href=&quot;representationscontroller&quot;&gt;ActiveStorage :: RepresentationsControllerで&lt;/a&gt;提供されるようなオンデマンドコントローラーへの処理を遅らせます。</target>
        </trans-unit>
        <trans-unit id="4d39e8f3493c6dc9309106568079112d38562f43" translate="yes" xml:space="preserve">
          <source>Note that to create a variant it's necessary to download the entire blob file from the service. Because of this process, you also want to be considerate about when the variant is actually processed. You shouldn't be processing variants inline in a template, for example. Delay the processing to an on-demand controller, like the one provided in ActiveStorage::RepresentationsController.</source>
          <target state="translated">バリアントを作成するには、サービスから blob ファイル全体をダウンロードする必要があることに注意してください。このプロセスのため、バリアントが実際に処理されるタイミングにも注意を払う必要があります。例えば、テンプレートのインラインでバリアントを処理するべきではありません。ActiveStorage::RepresentationsController で提供されているようなオンデマンドコントローラに処理を遅延させてください。</target>
        </trans-unit>
        <trans-unit id="5bd0b997f03075f0fd5f7d6476535e63dc8ab0e2" translate="yes" xml:space="preserve">
          <source>Note that unless you have a specific reason to do so, you should prefer using &lt;code&gt;before_action&lt;/code&gt; rather than &lt;code&gt;after_action&lt;/code&gt; in your Action Mailer classes so that headers are parsed properly.</source>
          <target state="translated">特別な理由がない限り、ヘッダーが適切に解析されるように、アクションメーラークラスで &lt;code&gt;before_action&lt;/code&gt; ではなく &lt;code&gt;after_action&lt;/code&gt; を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="c297a0082106a309bccb2c304dff13f9d16faac5" translate="yes" xml:space="preserve">
          <source>Note that we define the change that we want to happen moving forward in time. Before this migration is run, there will be no table. After, the table will exist. Active Record knows how to reverse this migration as well: if we roll this migration back, it will remove the table.</source>
          <target state="translated">時間的に前倒しで発生させたい変更を定義していることに注意してください。この移行が実行される前は、テーブルは存在しません。移行後はテーブルが存在します。Active Record はこの移行を逆にする方法も知っています:移行をロールバックするとテーブルが削除されます。</target>
        </trans-unit>
        <trans-unit id="2e926ed7e503e22b4111ceb30ccb88dce58134ae" translate="yes" xml:space="preserve">
          <source>Note that we don't have explicit render at the end of the index action in accordance with &quot;convention over configuration&quot; principle. The rule is that if you do not explicitly render something at the end of a controller action, Rails will automatically look for the &lt;code&gt;action_name.html.erb&lt;/code&gt; template in the controller's view path and render it. So in this case, Rails will render the &lt;code&gt;app/views/books/index.html.erb&lt;/code&gt; file.</source>
          <target state="translated">「設定よりも規約」の原則に従って、インデックスアクションの最後に明示的なレンダリングがないことに注意してください。ルールは、コントローラーアクションの最後に何かを明示的にレンダリングしない場合、Railsはコントローラーの &lt;code&gt;action_name.html.erb&lt;/code&gt; テンプレートを自動的に検索してレンダリングするということです。したがって、この場合、Railsは &lt;code&gt;app/views/books/index.html.erb&lt;/code&gt; ファイルをレンダリングします。</target>
        </trans-unit>
        <trans-unit id="fc309473d6129fce9427ca4ffd7a719d23d30f2b" translate="yes" xml:space="preserve">
          <source>Note that we needed to instantiate a new &lt;code&gt;PictureFileCallbacks&lt;/code&gt; object, since we declared our callback as an instance method. This is particularly useful if the callbacks make use of the state of the instantiated object. Often, however, it will make more sense to declare the callbacks as class methods:</source>
          <target state="translated">コールバックをインスタンスメソッドとして宣言したため、新しい &lt;code&gt;PictureFileCallbacks&lt;/code&gt; オブジェクトをインスタンス化する必要があることに注意してください。これは、コールバックがインスタンス化されたオブジェクトの状態を利用する場合に特に役立ちます。ただし、多くの場合、コールバックをクラスメソッドとして宣言する方が理にかなっています。</target>
        </trans-unit>
        <trans-unit id="2f078fa0d6abee21360b3c264683efe5cc570183" translate="yes" xml:space="preserve">
          <source>Note that we used Mime for the csv mime type as it comes with Rails. For a custom renderer, you'll need to register a mime type with &lt;code&gt;Mime::Type.register&lt;/code&gt;.</source>
          <target state="translated">Railsに付属しているcsv mimeタイプにはMimeを使用したことに注意してください。カスタムレンダラの場合、MIMEタイプを &lt;code&gt;Mime::Type.register&lt;/code&gt; に登録する必要があります。</target>
        </trans-unit>
        <trans-unit id="493e11f2139307e1b857ae2583c8a70294f296ed" translate="yes" xml:space="preserve">
          <source>Note that when an array is used, the implicit mapping from the values to database integers is derived from the order the values appear in the array. In the example, &lt;code&gt;:active&lt;/code&gt; is mapped to &lt;code&gt;0&lt;/code&gt; as it's the first element, and &lt;code&gt;:archived&lt;/code&gt; is mapped to &lt;code&gt;1&lt;/code&gt;. In general, the &lt;code&gt;i&lt;/code&gt;-th element is mapped to &lt;code&gt;i-1&lt;/code&gt; in the database.</source>
          <target state="translated">配列が使用される場合、値からデータベース整数への暗黙のマッピングは、値が配列に現れる順序から導出されることに注意してください。この例では、 &lt;code&gt;:active&lt;/code&gt; は最初の要素であるため &lt;code&gt;0&lt;/code&gt; にマップされ、 &lt;code&gt;:archived&lt;/code&gt; は &lt;code&gt;1&lt;/code&gt; にマップされます。一般に、 &lt;code&gt;i&lt;/code&gt; 番目の要素はデータベースの &lt;code&gt;i-1&lt;/code&gt; にマップされます。</target>
        </trans-unit>
        <trans-unit id="a00c8ea81b965636b156aa7e6e263970a293bd34" translate="yes" xml:space="preserve">
          <source>Note that while for session values you can set the key to &lt;code&gt;nil&lt;/code&gt;, to delete a cookie value you should use &lt;code&gt;cookies.delete(:key)&lt;/code&gt;.</source>
          <target state="translated">セッション値の場合はキーを &lt;code&gt;nil&lt;/code&gt; に設定できますが、Cookie値を削除するには、 &lt;code&gt;cookies.delete(:key)&lt;/code&gt; を使用する必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="c316595d7f1cc476b48b9d06316e2c4531c197bc" translate="yes" xml:space="preserve">
          <source>Note that while for session values you set the key to &lt;code&gt;nil&lt;/code&gt;, to delete a cookie value you should use &lt;code&gt;cookies.delete(:key)&lt;/code&gt;.</source>
          <target state="translated">セッション値の場合はキーを &lt;code&gt;nil&lt;/code&gt; に設定しますが、Cookie値を削除するには &lt;code&gt;cookies.delete(:key)&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="375abaf21583ac20acd9292c3b8eefbb701bc9fb" translate="yes" xml:space="preserve">
          <source>Note that you can define &lt;code&gt;perform&lt;/code&gt; with as many arguments as you want.</source>
          <target state="translated">必要な数の引数を &lt;code&gt;perform&lt;/code&gt; して、performを定義できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="88cfa3abeb2458e86a60f8ec1b460db8fb10e9dc" translate="yes" xml:space="preserve">
          <source>Note that you can define your own XML parameter parser which would allow you to describe multiple entities in a single request (i.e., by wrapping them all in a single root node), but if you just go with the flow and accept Rails' defaults, life will be much easier.</source>
          <target state="translated">独自のXMLパラメータパーサを定義すれば、1つのリクエストで複数のエンティティを記述することができますが(つまり、それらをすべて1つのルートノードでラップすることで)、流れに乗ってRailsのデフォルトを受け入れれば、生活ははるかに楽になります。</target>
        </trans-unit>
        <trans-unit id="94fcc4bd31806b338f29c759262bfc0f506b7150" translate="yes" xml:space="preserve">
          <source>Note that you cannot pass a &lt;code&gt;Numeric&lt;/code&gt; value to &lt;code&gt;time_ago_in_words&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Numeric&lt;/code&gt; を &lt;code&gt;time_ago_in_words&lt;/code&gt; に渡すことはできません。</target>
        </trans-unit>
        <trans-unit id="15c7bb86a644e7c14c0fe1129c9177d3ba3b4c4c" translate="yes" xml:space="preserve">
          <source>Note that you don't need to add a &lt;code&gt;content&lt;/code&gt; field to your &lt;code&gt;messages&lt;/code&gt; table.</source>
          <target state="translated">&lt;code&gt;messages&lt;/code&gt; テーブルに &lt;code&gt;content&lt;/code&gt; フィールドを追加する必要はないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="1f1061c05c09718d57e4b98d385870b473c4dab2" translate="yes" xml:space="preserve">
          <source>Note that you must specify the extension of the image.</source>
          <target state="translated">画像の拡張子を指定する必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="dae165417f9c9af178cba47577008af33ab94075" translate="yes" xml:space="preserve">
          <source>Note that your database must support the raw SQL, that you pass in to the &lt;code&gt;lock&lt;/code&gt; method.</source>
          <target state="translated">データベースは、 &lt;code&gt;lock&lt;/code&gt; メソッドに渡す生のSQLをサポートする必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="fbe12ac2a13ce2a7fd2002400594427d3dac75d7" translate="yes" xml:space="preserve">
          <source>Note that, by default, &lt;code&gt;ActiveModel::Model&lt;/code&gt; implements &lt;code&gt;persisted?&lt;/code&gt; to return &lt;code&gt;false&lt;/code&gt;, which is the most common case. You may want to override it in your class to simulate a different scenario:</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;ActiveModel::Model&lt;/code&gt; は &lt;code&gt;persisted?&lt;/code&gt; 実装されますか？最も一般的なケースである &lt;code&gt;false&lt;/code&gt; を返します。別のシナリオをシミュレートするために、クラスでオーバーライドすることができます。</target>
        </trans-unit>
        <trans-unit id="c4cd0cb42d00d8cf72a3e4771ba48575883bef6c" translate="yes" xml:space="preserve">
          <source>Note that, in accordance with &lt;code&gt;form_with&lt;/code&gt; conventions, the field names in the two forms above will also differ. That is, the field name in the first form will be &lt;code&gt;person[picture]&lt;/code&gt; (accessible via &lt;code&gt;params[:person][:picture]&lt;/code&gt;), and the field name in the second form will be just &lt;code&gt;picture&lt;/code&gt; (accessible via &lt;code&gt;params[:picture]&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;form_with&lt;/code&gt; の規則に従って、上記の2つのフォームのフィールド名も異なることに注意してください。つまり、最初の形式のフィールド名は &lt;code&gt;person[picture]&lt;/code&gt; （ &lt;code&gt;params[:person][:picture]&lt;/code&gt; からアクセス可能）になり、2番目の形式のフィールド名は単なる &lt;code&gt;picture&lt;/code&gt; （ &lt;code&gt;params[:picture]&lt;/code&gt; からアクセス可能）になります。）。</target>
        </trans-unit>
        <trans-unit id="6c0eb83f0bd048cfc7a18f5b34d2c2a7f0774a58" translate="yes" xml:space="preserve">
          <source>Note the &lt;code&gt;data-remote=&quot;true&quot;&lt;/code&gt;. Now, the form will be submitted by Ajax rather than by the browser's normal submit mechanism.</source>
          <target state="translated">&lt;code&gt;data-remote=&quot;true&quot;&lt;/code&gt; に注意してください。これで、フォームはブラウザーの通常の送信メカニズムではなくAjaxによって送信されます。</target>
        </trans-unit>
        <trans-unit id="9c1859ac871cf8a9f915bb5ab32044e4e003fbbe" translate="yes" xml:space="preserve">
          <source>Note the following caveats:</source>
          <target state="translated">以下の注意点に注意してください。</target>
        </trans-unit>
        <trans-unit id="0b50c32f894b15a18965fc17ad0b160bd64ca480" translate="yes" xml:space="preserve">
          <source>Note the subtle difference between the two: &lt;code&gt;assert_routing&lt;/code&gt; tests that a URL fits options while &lt;code&gt;assert_recognizes&lt;/code&gt; tests that a URL breaks into parameters properly.</source>
          <target state="translated">2つの間の微妙な違いに注意してください &lt;code&gt;assert_routing&lt;/code&gt; はURLがオプションに適合することをテストし、 &lt;code&gt;assert_recognizes&lt;/code&gt; はURLがパラメータに適切に分割されることをテストします。</target>
        </trans-unit>
        <trans-unit id="64a72b7714830d8e8def9655dd5179990d52e442" translate="yes" xml:space="preserve">
          <source>Note you can't append with &lt;code&gt;atomic_write&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;atomic_write&lt;/code&gt; で追加できないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="e012da3c873f5e7f25a227356956d77d8cbb45da" translate="yes" xml:space="preserve">
          <source>Note, all the attributes for all the cases are kept in the same table. Read more: &lt;a href=&quot;https://www.martinfowler.com/eaaCatalog/singleTableInheritance.html&quot;&gt;www.martinfowler.com/eaaCatalog/singleTableInheritance.html&lt;/a&gt;</source>
          <target state="translated">すべてのケースのすべての属性が同じテーブルに保持されていることに注意してください。続きを読む：&lt;a href=&quot;https://www.martinfowler.com/eaaCatalog/singleTableInheritance.html&quot;&gt;www.martinfowler.com/eaaCatalog/singleTableInheritance.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0e23d909c309df5b8483a6d80a959b1e4ab0714c" translate="yes" xml:space="preserve">
          <source>Note, however, the extra bit at the top of that action:</source>
          <target state="translated">しかし、そのアクションの上部にある余分なビットに注意してください。</target>
        </trans-unit>
        <trans-unit id="a11bc31bbee6149856fb4cc76f9292762b870e2b" translate="yes" xml:space="preserve">
          <source>Note, if data was written with the &lt;code&gt;:expires_in&lt;/code&gt; or &lt;code&gt;:version&lt;/code&gt; options, both of these conditions are applied before the data is returned.</source>
          <target state="translated">&lt;code&gt;:expires_in&lt;/code&gt; または &lt;code&gt;:version&lt;/code&gt; オプションを使用してデータが書き込まれた場合、これらの条件は両方ともデータが返される前に適用されます。</target>
        </trans-unit>
        <trans-unit id="173438e96ca17bd100e0efb41be6765ffc5dc263" translate="yes" xml:space="preserve">
          <source>Note, the &lt;code&gt;only: &amp;lt;type&amp;gt;&lt;/code&gt; hash will apply to all callbacks defined on that method call. To get around this you can call the &lt;a href=&quot;callbacks#method-i-define_model_callbacks&quot;&gt;#define_model_callbacks&lt;/a&gt; method as many times as you need.</source>
          <target state="translated">注 &lt;code&gt;only: &amp;lt;type&amp;gt;&lt;/code&gt; ハッシュは、そのメソッド呼び出しで定義されたすべてのコールバックに適用されます。これを回避するには、&lt;a href=&quot;callbacks#method-i-define_model_callbacks&quot;&gt;＃define_model_callbacks&lt;/a&gt;メソッドを必要な回数だけ呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="1d812865558d117bdf49f2b3d5ad28d74e27b13f" translate="yes" xml:space="preserve">
          <source>Note, the &lt;code&gt;only: &amp;lt;type&amp;gt;&lt;/code&gt; hash will apply to all callbacks defined on that method call. To get around this you can call the &lt;a href=&quot;callbacks#method-i-define_model_callbacks&quot;&gt;&lt;code&gt;define_model_callbacks&lt;/code&gt;&lt;/a&gt; method as many times as you need.</source>
          <target state="translated">&lt;code&gt;only: &amp;lt;type&amp;gt;&lt;/code&gt; 注意：&amp;lt;type&amp;gt;ハッシュは、そのメソッド呼び出しで定義されたすべてのコールバックに適用されます。これを回避するには、&lt;a href=&quot;callbacks#method-i-define_model_callbacks&quot;&gt; &lt;code&gt;define_model_callbacks&lt;/code&gt; &lt;/a&gt;メソッドを必要な回数だけ呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="e730840f4cf0c423b310013d1509281bf488401d" translate="yes" xml:space="preserve">
          <source>Note, this method will return nil if ActiveRecord::Base.cache_versioning is set to &lt;code&gt;false&lt;/code&gt; (which it is by default until Rails 6.0).</source>
          <target state="translated">ActiveRecord :: Base.cache_versioningが &lt;code&gt;false&lt;/code&gt; （デフォルトではRails 6.0まで）に設定されている場合、このメソッドはnilを返すことに注意してください。</target>
        </trans-unit>
        <trans-unit id="b45a3f550d439e7107e510c56807fa2b019b9caf" translate="yes" xml:space="preserve">
          <source>Note, this method will return nil if ActiveRecord::Base.cache_versioning is set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">ActiveRecord :: Base.cache_versioningが &lt;code&gt;false&lt;/code&gt; に設定されている場合、このメソッドはnilを返すことに注意してください。</target>
        </trans-unit>
        <trans-unit id="ed3444d2211e13b8f88da9fc93d4c1ee9b636bb8" translate="yes" xml:space="preserve">
          <source>Note, you should use &lt;code&gt;return false&lt;/code&gt; to prevent an event for &lt;code&gt;jquery-ujs&lt;/code&gt; and &lt;code&gt;event.preventDefault()&lt;/code&gt; for &lt;code&gt;rails-ujs&lt;/code&gt;.</source>
          <target state="translated">注、あなたが使用する必要があり &lt;code&gt;return false&lt;/code&gt; ためのイベントを防止するために &lt;code&gt;jquery-ujs&lt;/code&gt; と &lt;code&gt;event.preventDefault()&lt;/code&gt; を用 &lt;code&gt;rails-ujs&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c86af99f3964446c447ca9ff5afc05885736a4b0" translate="yes" xml:space="preserve">
          <source>Note, you should use &lt;code&gt;return false&lt;/code&gt; to prevent event for &lt;code&gt;jquery-ujs&lt;/code&gt; and &lt;code&gt;e.preventDefault()&lt;/code&gt; for &lt;code&gt;rails-ujs&lt;/code&gt;</source>
          <target state="translated">注、あなたが使用する必要があり &lt;code&gt;return false&lt;/code&gt; ためのイベントを防ぐために &lt;code&gt;jquery-ujs&lt;/code&gt; と &lt;code&gt;e.preventDefault()&lt;/code&gt; のための &lt;code&gt;rails-ujs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="91573f6985f0c4b16cbd786a58cd14db5f991daf" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;:id&lt;/code&gt; is always present.</source>
          <target state="translated">注：： &lt;code&gt;:id&lt;/code&gt; は常に存在します。</target>
        </trans-unit>
        <trans-unit id="62cada94601411d3b4156a354a18714f3cfb615f" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;MySQL&lt;/code&gt; only supports index order from 8.0.1 onwards (earlier versions accepted the syntax but ignored it).</source>
          <target state="translated">注： &lt;code&gt;MySQL&lt;/code&gt; は8.0.1以降のインデックス順のみをサポートします（以前のバージョンは構文を受け入れましたが、無視しました）。</target>
        </trans-unit>
        <trans-unit id="8634df8460327a401d547cd66d1daa13389930f3" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;yield&lt;/code&gt; can still be used to retrieve the stored content, but calling &lt;code&gt;yield&lt;/code&gt; doesn't work in helper modules, while &lt;code&gt;content_for&lt;/code&gt; does.</source>
          <target state="translated">注： &lt;code&gt;yield&lt;/code&gt; は保存されたコンテンツを取得するために引き続き使用できますが、 &lt;code&gt;content_for&lt;/code&gt; が機能する一方で、 &lt;code&gt;yield&lt;/code&gt; を呼び出すことはヘルパーモジュールでは機能しません。</target>
        </trans-unit>
        <trans-unit id="8da99924f8d120d0211cdf5e26cda8c8a164764e" translate="yes" xml:space="preserve">
          <source>Note: Acronyms that are passed to &lt;code&gt;pluralize&lt;/code&gt; will no longer be recognized, since the acronym will not occur as a delimited unit in the pluralized result. To work around this, you must specify the pluralized form as an acronym as well:</source>
          <target state="translated">注：複数形の結果で区切られた単位として頭字語が発生しないため、 &lt;code&gt;pluralize&lt;/code&gt; 渡される頭字語は認識されなくなります。これを回避するには、複数形も頭字語として指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="cc77ba91f6d6dff22900edccd870686c14ce0dec" translate="yes" xml:space="preserve">
          <source>Note: Although it is often much faster than the alternative, &lt;a href=&quot;classmethods#method-i-destroy&quot;&gt;&lt;code&gt;destroy&lt;/code&gt;&lt;/a&gt;, skipping callbacks might bypass business logic in your application that ensures referential integrity or performs other essential jobs.</source>
          <target state="translated">注：多くの場合、代替の&lt;a href=&quot;classmethods#method-i-destroy&quot;&gt; &lt;code&gt;destroy&lt;/code&gt; &lt;/a&gt;よりもはるかに高速ですが、コールバックをスキップすると、参照整合性を保証したり、その他の重要なジョブを実行したりするアプリケーションのビジネスロジックがバイパスされる場合があります。</target>
        </trans-unit>
        <trans-unit id="8a8c7e5a63f17d1875bad1c59c527c97a6dd626d" translate="yes" xml:space="preserve">
          <source>Note: Although it is often much faster than the alternative, &lt;a href=&quot;classmethods#method-i-destroy&quot;&gt;destroy&lt;/a&gt;, skipping callbacks might bypass business logic in your application that ensures referential integrity or performs other essential jobs.</source>
          <target state="translated">注：多くの場合、代替の&lt;a href=&quot;classmethods#method-i-destroy&quot;&gt;destroy&lt;/a&gt;よりはるかに高速ですが、コールバックをスキップすると、参照整合性を保証したり、他の重要なジョブを実行したりするアプリケーションのビジネスロジックがバイパスされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="4e9ece58e771c7dc934cee4b84518319fbbf0ee9" translate="yes" xml:space="preserve">
          <source>Note: As Active Record callbacks are not triggered, this method will not automatically update &lt;code&gt;updated_at&lt;/code&gt;/&lt;code&gt;updated_on&lt;/code&gt; columns.</source>
          <target state="translated">注：Active Recordコールバックはトリガーされないため、このメソッドは &lt;code&gt;updated_at&lt;/code&gt; / &lt;code&gt;updated_on&lt;/code&gt; 列を自動的に更新しません。</target>
        </trans-unit>
        <trans-unit id="b382d38463c4b9772db0f0e4f20597ea1d44539b" translate="yes" xml:space="preserve">
          <source>Note: Fixtures are unordered. If you want ordered fixtures, use the omap YAML type. See &lt;a href=&quot;http://yaml.org/type/omap.html&quot;&gt;yaml.org/type/omap.html&lt;/a&gt; for the specification. You will need ordered fixtures when you have foreign key constraints on keys in the same table. This is commonly needed for tree structures. Example:</source>
          <target state="translated">注：器具は順序付けされていません。注文した器具が必要な場合は、omap YAMLタイプを使用します。仕様については、&lt;a href=&quot;http://yaml.org/type/omap.html&quot;&gt;yaml.org / type / omap.html&lt;/a&gt;をご覧ください。同じテーブルのキーに外部キー制約がある場合は、注文したフィクスチャが必要になります。これは通常、ツリー構造に必要です。例：</target>
        </trans-unit>
        <trans-unit id="6bdee0660c95430cdd80faf743049e2449f20e2c" translate="yes" xml:space="preserve">
          <source>Note: Fixtures are unordered. If you want ordered fixtures, use the omap YAML type. See &lt;a href=&quot;https://yaml.org/type/omap.html&quot;&gt;yaml.org/type/omap.html&lt;/a&gt; for the specification. You will need ordered fixtures when you have foreign key constraints on keys in the same table. This is commonly needed for tree structures. Example:</source>
          <target state="translated">注：備品は注文されていません。順序付けられたフィクスチャが必要な場合は、omapYAMLタイプを使用します。仕様については、&lt;a href=&quot;https://yaml.org/type/omap.html&quot;&gt;yaml.org / type /omap.html&lt;/a&gt;を参照してください。同じテーブル内のキーに外部キー制約がある場合は、順序付けられたフィクスチャが必要になります。これは通常、ツリー構造に必要です。例：</target>
        </trans-unit>
        <trans-unit id="e3f911ece33a8889898f780391535eeae25b4645" translate="yes" xml:space="preserve">
          <source>Note: If the day is not included as an option but the month is, the day will be set to the 1st to ensure that all month choices are valid.</source>
          <target state="translated">注意:オプションに日が含まれていないが月が含まれている場合は、すべての月の選択肢が有効になるように日が1日に設定されます。</target>
        </trans-unit>
        <trans-unit id="5c365c37375888e18bc3f7fffc3e3409ead7ea82" translate="yes" xml:space="preserve">
          <source>Note: Instantiation, callback execution, and deletion of each record can be time consuming when you're removing many records at once. It generates at least one SQL &lt;code&gt;DELETE&lt;/code&gt; query per record (or possibly more, to enforce your callbacks). If you want to delete many rows quickly, without concern for their associations or callbacks, use &lt;a href=&quot;relation#method-i-delete_all&quot;&gt;&lt;code&gt;delete_all&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">注：一度に多数のレコードを削除する場合、各レコードのインスタンス化、コールバックの実行、および削除に時間がかかる可能性があります。レコードごとに少なくとも1つの &lt;code&gt;DELETE&lt;/code&gt; クエリを生成します（コールバックを強制するために、場合によってはそれ以上）。関連付けやコールバックを気にせずに多くの行をすばやく削除する場合は、代わりに&lt;a href=&quot;relation#method-i-delete_all&quot;&gt; &lt;code&gt;delete_all&lt;/code&gt; を&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="455ad7b304457d0818b156a5d5a258e87af23432" translate="yes" xml:space="preserve">
          <source>Note: Instantiation, callback execution, and deletion of each record can be time consuming when you're removing many records at once. It generates at least one SQL &lt;code&gt;DELETE&lt;/code&gt; query per record (or possibly more, to enforce your callbacks). If you want to delete many rows quickly, without concern for their associations or callbacks, use &lt;a href=&quot;relation#method-i-delete_all&quot;&gt;delete_all&lt;/a&gt; instead.</source>
          <target state="translated">注：一度に多くのレコードを削除する場合、各レコードのインスタンス化、コールバックの実行、および削除には時間がかかる場合があります。レコードごとに少なくとも1つのSQL &lt;code&gt;DELETE&lt;/code&gt; クエリを生成します（コールバックを強制するために、場合によってはそれ以上）。関連付けやコールバックを&lt;a href=&quot;relation#method-i-delete_all&quot;&gt;考慮&lt;/a&gt;せずに多数の行をすばやく削除する場合は、代わりにdelete_allを使用します。</target>
        </trans-unit>
        <trans-unit id="acacd3efece89a8db79dda6270478358ee24035b" translate="yes" xml:space="preserve">
          <source>Note: Joining, eager loading and preloading of these associations is not possible. These operations happen before instance creation and the scope will be called with a &lt;code&gt;nil&lt;/code&gt; argument.</source>
          <target state="translated">注：これらの関連付けの結合、積極的なロード、およびプリロードはできません。これらの操作はインスタンスの作成前に行われ、スコープは &lt;code&gt;nil&lt;/code&gt; 引数で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="308e33031d5f89bc20b7a0f4592db047a4d56233" translate="yes" xml:space="preserve">
          <source>Note: MySQL only supports index order from 8.0.1 onwards (earlier versions accepted the syntax but ignored it).</source>
          <target state="translated">注意:MySQLは8.0.1以降のインデックス順のみをサポートしています(以前のバージョンでは構文を受け入れていましたが、無視していました)。</target>
        </trans-unit>
        <trans-unit id="2c2f8f1f61d9a03d6edf900890dd17a404d9fe19" translate="yes" xml:space="preserve">
          <source>Note: Not supported by &lt;code&gt;MySQL&lt;/code&gt;.</source>
          <target state="translated">注： &lt;code&gt;MySQL&lt;/code&gt; ではサポートされていません。</target>
        </trans-unit>
        <trans-unit id="124f350c136512944ed0f6dcf73a12862c334ad1" translate="yes" xml:space="preserve">
          <source>Note: Partial indexes are only supported for PostgreSQL and SQLite 3.8.0+.</source>
          <target state="translated">注意:部分インデックスはPostgreSQLとSQLite 3.8.0+でのみサポートされています。</target>
        </trans-unit>
        <trans-unit id="42fb334b409ac2f28567a18c3f74b4bcf9726af2" translate="yes" xml:space="preserve">
          <source>Note: Partial indexes are only supported for PostgreSQL and SQLite.</source>
          <target state="translated">注意:部分インデックスはPostgreSQLとSQLiteでのみサポートされています。</target>
        </trans-unit>
        <trans-unit id="c0d6873d18327e72cbed60ce10d25503c5b6ff17" translate="yes" xml:space="preserve">
          <source>Note: SQLite doesn't support index length.</source>
          <target state="translated">注:SQLite はインデックスの長さをサポートしていません。</target>
        </trans-unit>
        <trans-unit id="2dfc9a11d5d1fa70f8585fb64a2db0c1f6ce0546" translate="yes" xml:space="preserve">
          <source>Note: SSEs are not currently supported by IE. However, they are supported by Chrome, Firefox, Opera, and Safari.</source>
          <target state="translated">注:SSEは現在、IEではサポートされていません。ただし、Chrome、Firefox、Opera、Safariではサポートされています。</target>
        </trans-unit>
        <trans-unit id="edebfe049fe010222ebf5af3b99dfdb7bfb59cc1" translate="yes" xml:space="preserve">
          <source>Note: Since Rails doesn't know which database is the replica for your writer you will need to add this to the abstract class after you're done.</source>
          <target state="translated">注意:Railsはライターのレプリカがどのデータベースであるかを知らないので、作業が終わったらこれを抽象クラスに追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="1d7c763a29b125ebac02b340adfd08afb47105eb" translate="yes" xml:space="preserve">
          <source>Note: The &lt;code&gt;attachable_type=&lt;/code&gt; method is being called when assigning an &lt;code&gt;attachable&lt;/code&gt;. The &lt;code&gt;class_name&lt;/code&gt; of the &lt;code&gt;attachable&lt;/code&gt; is passed as a &lt;a href=&quot;../../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">注： &lt;code&gt;attachable_type=&lt;/code&gt; メソッドは、 &lt;code&gt;attachable&lt;/code&gt; を割り当てるときに呼び出されます。 &lt;code&gt;class_name&lt;/code&gt; の &lt;code&gt;attachable&lt;/code&gt; として渡される&lt;a href=&quot;../../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c86cc9acd3cc4679a14049283572db943a13a4c8" translate="yes" xml:space="preserve">
          <source>Note: The &lt;code&gt;attachable_type=&lt;/code&gt; method is being called when assigning an &lt;code&gt;attachable&lt;/code&gt;. The &lt;code&gt;class_name&lt;/code&gt; of the &lt;code&gt;attachable&lt;/code&gt; is passed as a &lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;.</source>
          <target state="translated">注： &lt;code&gt;attachable_type=&lt;/code&gt; メソッドは、 &lt;code&gt;attachable&lt;/code&gt; を割り当てるときに呼び出されます。 &lt;code&gt;attachable&lt;/code&gt; の &lt;code&gt;class_name&lt;/code&gt; は&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;として渡されます。</target>
        </trans-unit>
        <trans-unit id="b32677b2c1945dcf62d2c8edf09310b4dc2135f1" translate="yes" xml:space="preserve">
          <source>Note: The adapter provided by this method must provide some additional methods from those expected of a standard &lt;code&gt;ActiveJob::QueueAdapter&lt;/code&gt; in order to be used with the active job test helpers. Refer to &lt;code&gt;ActiveJob::QueueAdapters::TestAdapter&lt;/code&gt;.</source>
          <target state="translated">注：このメソッドによって提供されるアダプターは、アクティブなジョブテストヘルパーで使用するために、標準の &lt;code&gt;ActiveJob::QueueAdapter&lt;/code&gt; で予期されるメソッドからいくつかの追加メソッドを提供する必要があります。 &lt;code&gt;ActiveJob::QueueAdapters::TestAdapter&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="db49b8fb43e5b880d2e4b216b1307840d408a679" translate="yes" xml:space="preserve">
          <source>Note: The new instance will share a link to the same attributes as the original class. Therefore the sti column value will still be the same. Any change to the attributes on either instance will affect both instances. If you want to change the sti column as well, use &lt;a href=&quot;persistence#method-i-becomes-21&quot;&gt;&lt;code&gt;becomes!&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">注：新しいインスタンスは、元のクラスと同じ属性へのリンクを共有します。したがって、sti列の値は同じままです。いずれかのインスタンスの属性を変更すると、両方のインスタンスに影響します。sti列も変更したい場合&lt;a href=&quot;persistence#method-i-becomes-21&quot;&gt; &lt;code&gt;becomes!&lt;/code&gt; &lt;/a&gt;代わりに。</target>
        </trans-unit>
        <trans-unit id="856990d094574273e23f235fcf21d1ef8d7d3679" translate="yes" xml:space="preserve">
          <source>Note: The new instance will share a link to the same attributes as the original class. Therefore the sti column value will still be the same. Any change to the attributes on either instance will affect both instances. If you want to change the sti column as well, use &lt;a href=&quot;persistence#method-i-becomes-21&quot;&gt;becomes!&lt;/a&gt; instead.</source>
          <target state="translated">注：新しいインスタンスは、元のクラスと同じ属性へのリンクを共有します。したがって、stiカラムの値は同じままです。いずれかのインスタンスの属性を変更すると、両方のインスタンスに影響します。stiカラムも変更したい場合は、使い方に&lt;a href=&quot;persistence#method-i-becomes-21&quot;&gt;なります！&lt;/a&gt;代わりに。</target>
        </trans-unit>
        <trans-unit id="e495b3a8620060a6500fb583012fa4372f4b9ce5" translate="yes" xml:space="preserve">
          <source>Note: The old instance's sti column value will be changed too, as both objects share the same set of attributes.</source>
          <target state="translated">注意:両方のオブジェクトが同じ属性を共有しているため、古いインスタンスのtiカラムの値も変更されます。</target>
        </trans-unit>
        <trans-unit id="da5de37a9fe710621b520911dc22e6273fdacef4" translate="yes" xml:space="preserve">
          <source>Note: The precision is the total number of significant digits, and the scale is the number of digits that can be stored following the decimal point. For example, the number 123.45 has a precision of 5 and a scale of 2. A decimal with a precision of 5 and a scale of 2 can range from -999.99 to 999.99.</source>
          <target state="translated">注:精度は有効桁数の合計であり、目盛りは小数点以下に格納できる桁数です。例えば、123.45という数字は、精度が5、目盛が2の10進数で、精度が5、目盛が2の10進数では、-999.99から999.99までの範囲になります。</target>
        </trans-unit>
        <trans-unit id="7e51e35c9bfbf1212b52250689598e0b6edbcfee" translate="yes" xml:space="preserve">
          <source>Note: This also works for the methods in &lt;a href=&quot;formoptionshelper&quot;&gt;&lt;code&gt;FormOptionsHelper&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;datehelper&quot;&gt;&lt;code&gt;DateHelper&lt;/code&gt;&lt;/a&gt; that are designed to work with an object as base, like &lt;a href=&quot;formoptionshelper#method-i-collection_select&quot;&gt;&lt;code&gt;FormOptionsHelper#collection_select&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;datehelper#method-i-datetime_select&quot;&gt;&lt;code&gt;DateHelper#datetime_select&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">注：これは、&lt;a href=&quot;formoptionshelper#method-i-collection_select&quot;&gt; &lt;code&gt;FormOptionsHelper#collection_select&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;datehelper#method-i-datetime_select&quot;&gt; &lt;code&gt;DateHelper#datetime_select&lt;/code&gt; &lt;/a&gt;など、オブジェクトをベースとして機能するように設計された&lt;a href=&quot;formoptionshelper&quot;&gt; &lt;code&gt;FormOptionsHelper&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;datehelper&quot;&gt; &lt;code&gt;DateHelper&lt;/code&gt; の&lt;/a&gt;メソッドでも機能します。</target>
        </trans-unit>
        <trans-unit id="f9065955578098ed0bb8bd025f933ad59c21c6e6" translate="yes" xml:space="preserve">
          <source>Note: This also works for the methods in &lt;a href=&quot;formoptionshelper&quot;&gt;FormOptionsHelper&lt;/a&gt; and &lt;a href=&quot;datehelper&quot;&gt;DateHelper&lt;/a&gt; that are designed to work with an object as base, like &lt;a href=&quot;formoptionshelper#method-i-collection_select&quot;&gt;ActionView::Helpers::FormOptionsHelper#collection_select&lt;/a&gt; and &lt;a href=&quot;datehelper#method-i-datetime_select&quot;&gt;ActionView::Helpers::DateHelper#datetime_select&lt;/a&gt;.</source>
          <target state="translated">注：これは、&lt;a href=&quot;formoptionshelper#method-i-collection_select&quot;&gt;ActionView :: Helpers :: FormOptionsHelper＃collection_select&lt;/a&gt;や&lt;a href=&quot;datehelper#method-i-datetime_select&quot;&gt;ActionView :: Helpers :: DateHelper＃datetime_select&lt;/a&gt;など、オブジェクトをベースとして機能するように設計された&lt;a href=&quot;formoptionshelper&quot;&gt;FormOptionsHelper&lt;/a&gt;および&lt;a href=&quot;datehelper&quot;&gt;DateHelperの&lt;/a&gt;メソッドでも機能します。</target>
        </trans-unit>
        <trans-unit id="c2352219e415aacb6ef215e56a9cd402e35a6e9a" translate="yes" xml:space="preserve">
          <source>Note: This assertion is simply a shortcut for:</source>
          <target state="translated">注意:このアサーションは、単なるショートカットです。</target>
        </trans-unit>
        <trans-unit id="ef0e993df538909451f4951854e2341a7ebc0570" translate="yes" xml:space="preserve">
          <source>Note: This is an optimization of &lt;code&gt;Enumerable#excluding&lt;/code&gt; that uses &lt;code&gt;Array#-&lt;/code&gt; instead of &lt;code&gt;Array#reject&lt;/code&gt; for performance reasons.</source>
          <target state="translated">注：これは、パフォーマンス上の理由から、 &lt;code&gt;Array#reject&lt;/code&gt; の代わりにArray＃ &lt;code&gt;Array#-&lt;/code&gt; を使用する &lt;code&gt;Enumerable#excluding&lt;/code&gt; 最適化です。</target>
        </trans-unit>
        <trans-unit id="863ca249317e9c0dbb645dce430c3cd0b6faa965" translate="yes" xml:space="preserve">
          <source>Note: This is purely a browser performance optimization and is not meant for server load balancing. See &lt;a href=&quot;https://www.die.net/musings/page_load_time&quot;&gt;www.die.net/musings/page_load_time&lt;/a&gt;/ for background and &lt;a href=&quot;https://www.browserscope.org/?category=network&quot;&gt;www.browserscope.org/?category=network&lt;/a&gt; for connection limit data.</source>
          <target state="translated">注：これは純粋にブラウザのパフォーマンス最適化であり、サーバーの負荷分散を目的としたものではありません。参照してください&lt;a href=&quot;https://www.die.net/musings/page_load_time&quot;&gt;www.die.net/musings/page_load_time&lt;/a&gt; /の背景と&lt;a href=&quot;https://www.browserscope.org/?category=network&quot;&gt;www.browserscope.org/?category=network&lt;/a&gt;接続制限データ用を。</target>
        </trans-unit>
        <trans-unit id="4a3287c1634d93a72d137f0d950e3c604c3df357" translate="yes" xml:space="preserve">
          <source>Note: To turn off all caching provided by Action Controller, set</source>
          <target state="translated">メモ:Action Controllerが提供するすべてのキャッシングをオフにするには、次のように設定します。</target>
        </trans-unit>
        <trans-unit id="5b440437b3604be9608bede173ea6d8501bdfdc8" translate="yes" xml:space="preserve">
          <source>Note: Updating a large number of records will run an UPDATE query for each record, which may cause a performance issue. When running callbacks is not needed for each record update, it is preferred to use &lt;a href=&quot;../relation#method-i-update_all&quot;&gt;update_all&lt;/a&gt; for updating all records in a single query.</source>
          <target state="translated">注：多数のレコードを更新すると、各レコードに対してUPDATEクエリが実行され、パフォーマンスの問題が発生する可能性があります。レコードの更新ごとにコールバックを実行する必要がない場合は、単一のクエリですべてのレコードを更新するために&lt;a href=&quot;../relation#method-i-update_all&quot;&gt;update_all&lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="62b50481c99d023afaf5455de8ac79fe5a963dac" translate="yes" xml:space="preserve">
          <source>Note: You can't pass in a condition as a string (like &lt;code&gt;name =
'Jamie'&lt;/code&gt;), since it would be sanitized and then queried against the primary key column, like &lt;code&gt;id = 'name =
\'Jamie\''&lt;/code&gt;.</source>
          <target state="translated">注：条件を文字列として渡すことはできません（ &lt;code&gt;name = 'Jamie'&lt;/code&gt; ）。これはサニタイズされ、次に &lt;code&gt;id = 'name = \'Jamie\''&lt;/code&gt; ように主キー列に対してクエリが実行されるためです。</target>
        </trans-unit>
        <trans-unit id="0d75342d001759e22c93da271a1e94d775d9beba" translate="yes" xml:space="preserve">
          <source>Note: not all valid &lt;a href=&quot;querymethods#method-i-select&quot;&gt;Relation#select&lt;/a&gt; expressions are valid &lt;a href=&quot;calculations#method-i-count&quot;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt; expressions. The specifics differ between databases. In invalid cases, an error from the database is thrown.</source>
          <target state="translated">注：すべての有効な&lt;a href=&quot;querymethods#method-i-select&quot;&gt;Relation＃select&lt;/a&gt;式が有効な&lt;a href=&quot;calculations#method-i-count&quot;&gt; &lt;code&gt;count&lt;/code&gt; &lt;/a&gt;式であるとは限りません。詳細はデータベースによって異なります。無効な場合、データベースからのエラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="9e95bdc13adc134c9b83e94f1ac9f03cf6cfc487" translate="yes" xml:space="preserve">
          <source>Note: not all valid &lt;a href=&quot;querymethods#method-i-select&quot;&gt;Relation#select&lt;/a&gt; expressions are valid &lt;a href=&quot;calculations#method-i-count&quot;&gt;count&lt;/a&gt; expressions. The specifics differ between databases. In invalid cases, an error from the database is thrown.</source>
          <target state="translated">注：すべての有効な&lt;a href=&quot;querymethods#method-i-select&quot;&gt;Relation＃select&lt;/a&gt;式が有効な&lt;a href=&quot;calculations#method-i-count&quot;&gt;count&lt;/a&gt;式であるとは限りません。詳細はデータベースによって異なります。無効な場合、データベースからのエラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="711fa045d5bab865319e265bf87d0a98a6d2ee1b" translate="yes" xml:space="preserve">
          <source>Note: only supported by &lt;code&gt;MySQL&lt;/code&gt;.</source>
          <target state="translated">注： &lt;code&gt;MySQL&lt;/code&gt; でのみサポートされています。</target>
        </trans-unit>
        <trans-unit id="cb90894dfb9810668140dd5abc132702407b2049" translate="yes" xml:space="preserve">
          <source>Note: only supported by MySQL.</source>
          <target state="translated">注:MySQLでのみサポートされています。</target>
        </trans-unit>
        <trans-unit id="11012fa2ff042b2ccc5930b6e83ce185707b0ecd" translate="yes" xml:space="preserve">
          <source>Note: only supported by PostgreSQL</source>
          <target state="translated">注:PostgreSQLでのみサポートされています。</target>
        </trans-unit>
        <trans-unit id="e98240c921e487203c2cf455698f4a0b6816698a" translate="yes" xml:space="preserve">
          <source>Note: only supported by PostgreSQL and &lt;code&gt;MySQL&lt;/code&gt;</source>
          <target state="translated">注：PostgreSQLと &lt;code&gt;MySQL&lt;/code&gt; でのみサポートされています</target>
        </trans-unit>
        <trans-unit id="b979edd03dc476656559cc41b1e4a6d868f05723" translate="yes" xml:space="preserve">
          <source>Note: only supported by PostgreSQL and MySQL</source>
          <target state="translated">注:PostgreSQL と MySQL でのみサポートされています。</target>
        </trans-unit>
        <trans-unit id="d4570c3579af0b879f140c7b30b54ae99eeeb839" translate="yes" xml:space="preserve">
          <source>Note: only supported by PostgreSQL.</source>
          <target state="translated">注:PostgreSQLでのみサポートされています。</target>
        </trans-unit>
        <trans-unit id="9a83e4f90833243e0c6406c5f754ff630641257d" translate="yes" xml:space="preserve">
          <source>Note: this feature is not available with the threaded parallelization.</source>
          <target state="translated">注意:この機能はスレッド並列化では利用できません。</target>
        </trans-unit>
        <trans-unit id="205d08dcd8d151326e23421d0d1ac6edc18b3313" translate="yes" xml:space="preserve">
          <source>Note: use &lt;code&gt;\A&lt;/code&gt; and &lt;code&gt;\z&lt;/code&gt; to match the start and end of the string, &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; match the start/end of a line.</source>
          <target state="translated">注： &lt;code&gt;\A&lt;/code&gt; および &lt;code&gt;\z&lt;/code&gt; を使用して文字列の開始と終了を一致させ、 &lt;code&gt;^&lt;/code&gt; および &lt;code&gt;$&lt;/code&gt; を行の開始/終了と一致させます。</target>
        </trans-unit>
        <trans-unit id="773ff38978dbfe8d2f1950aaff40b3a6289527ac" translate="yes" xml:space="preserve">
          <source>Note: when using &lt;code&gt;controller&lt;/code&gt;, the route is simply named after the method you call on the block parameter rather than map.</source>
          <target state="translated">注： &lt;code&gt;controller&lt;/code&gt; を使用する場合、ルートは、マップするのではなく、ブロックパラメーターで呼び出すメソッドに基づいて名前が付けられます。</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="186ee9e469f8ca1542732840e3e0f13195377443" translate="yes" xml:space="preserve">
          <source>Notice how the &lt;code&gt;edit&lt;/code&gt; and &lt;code&gt;update&lt;/code&gt; actions resemble the &lt;code&gt;new&lt;/code&gt; and &lt;code&gt;create&lt;/code&gt; actions.</source>
          <target state="translated">&lt;code&gt;edit&lt;/code&gt; アクションと &lt;code&gt;update&lt;/code&gt; アクションが &lt;code&gt;new&lt;/code&gt; アクションと &lt;code&gt;create&lt;/code&gt; アクションにどのように似ているかに注目してください。</target>
        </trans-unit>
        <trans-unit id="39429a684161fc0c5605d56b46f44c1c03d8efe8" translate="yes" xml:space="preserve">
          <source>Notice how the short-style &lt;code&gt;form_with&lt;/code&gt; invocation is conveniently the same, regardless of the record being new or existing. Record identification is smart enough to figure out if the record is new by asking &lt;code&gt;record.new_record?&lt;/code&gt;. It also selects the correct path to submit to, and the name based on the class of the object.</source>
          <target state="translated">新規または既存のレコードに関係なく、shortスタイルの &lt;code&gt;form_with&lt;/code&gt; 呼び出しが便利に同じであることに注意してください。レコードの識別は、 &lt;code&gt;record.new_record?&lt;/code&gt; 。また、送信先の正しいパスと、オブジェクトのクラスに基づいた名前も選択します。</target>
        </trans-unit>
        <trans-unit id="75bd1184347256b109b4e2f947e344ffd54e712e" translate="yes" xml:space="preserve">
          <source>Notice how the short-style &lt;code&gt;form_with&lt;/code&gt; invocation is conveniently the same, regardless of the record being new or existing. Record identification is smart enough to figure out if the record is new by asking &lt;code&gt;record.persisted?&lt;/code&gt;. It also selects the correct path to submit to, and the name based on the class of the object.</source>
          <target state="translated">レコードが新規または既存であるかどうかに関係なく、短いスタイルの &lt;code&gt;form_with&lt;/code&gt; 呼び出しが便利に同じであることに注意してください。レコードの識別は、 &lt;code&gt;record.persisted?&lt;/code&gt; 尋ねることで、レコードが新しいかどうかを判断するのに十分スマートです。。また、送信する正しいパスと、オブジェクトのクラスに基づいた名前を選択します。</target>
        </trans-unit>
        <trans-unit id="5b4ecc2e4f41f048a095e5f69279b44bdb2f223b" translate="yes" xml:space="preserve">
          <source>Notice that &amp;ldquo;rails:generators:test_unit&amp;rdquo; could be loaded as well, what &lt;code&gt;Rails&lt;/code&gt; looks for is the first and last parts of the namespace. This is what allows any test framework to hook into &lt;code&gt;Rails&lt;/code&gt; as long as it provides any of the hooks above.</source>
          <target state="translated">同様にロードすることができ、どのような「：：発電機test_unitがレール」ということに注意してください &lt;code&gt;Rails&lt;/code&gt; のためにルックスは、名前空間の最初と最後の部分です。これは、上記のフックのいずれかを提供する限り、任意のテストフレームワークが &lt;code&gt;Rails&lt;/code&gt; にフックできるようにするものです。</target>
        </trans-unit>
        <trans-unit id="db0f7457358771ccbf92d92a4d763b28aca85961" translate="yes" xml:space="preserve">
          <source>Notice that &amp;ldquo;rails:generators:test_unit&amp;rdquo; could be loaded as well, what Rails looks for is the first and last parts of the namespace. This is what allows any test framework to hook into Rails as long as it provides any of the hooks above.</source>
          <target state="translated">「rails：generators：test_unit」もロードできることに注意してください。Railsが探すのは名前空間の最初と最後の部分です。これにより、上記のフックのいずれかが提供されている限り、任意のテストフレームワークがRailsにフックできます。</target>
        </trans-unit>
        <trans-unit id="8ea40f338b226864feab0df23f1c0706c1e21c74" translate="yes" xml:space="preserve">
          <source>Notice that :stream only works with templates. &lt;code&gt;Rendering&lt;/code&gt; :json or :xml with :stream won't work.</source>
          <target state="translated">：streamはテンプレートでのみ機能することに注意してください。：jsonまたは：xmlを：streamで &lt;code&gt;Rendering&lt;/code&gt; も機能しません。</target>
        </trans-unit>
        <trans-unit id="c5549615aaa370893e3ea8fcbb7c259a1259ddcf" translate="yes" xml:space="preserve">
          <source>Notice that :stream only works with templates. Rendering :json or :xml with :stream won't work.</source>
          <target state="translated">stream はテンプレートでのみ動作することに注意してください。json や :xml を :stream でレンダリングすると動作しません。</target>
        </trans-unit>
        <trans-unit id="320e974e71e96a6cbd1aead6a719dcffd232a3a4" translate="yes" xml:space="preserve">
          <source>Notice that &lt;code&gt;action_methods.include?(&quot;foo&quot;)&lt;/code&gt; may return false and &lt;code&gt;available_action?(&quot;foo&quot;)&lt;/code&gt; returns true because this method considers actions that are also available through other means, for example, implicit render ones.</source>
          <target state="translated">&lt;code&gt;action_methods.include?(&quot;foo&quot;)&lt;/code&gt; はfalseを返し、 &lt;code&gt;available_action?(&quot;foo&quot;)&lt;/code&gt; はtrueを返すことに注意してください。</target>
        </trans-unit>
        <trans-unit id="fe43ee640ff6bcab6590900f5e5cb91b851fec67" translate="yes" xml:space="preserve">
          <source>Notice that in this example we used the &lt;code&gt;cache_key_with_version&lt;/code&gt; method, so the resulting cache key will be something like &lt;code&gt;products/233-20140225082222765838000/competing_price&lt;/code&gt;. &lt;code&gt;cache_key_with_version&lt;/code&gt; generates a string based on the model's class name, &lt;code&gt;id&lt;/code&gt;, and &lt;code&gt;updated_at&lt;/code&gt; attributes. This is a common convention and has the benefit of invalidating the cache whenever the product is updated. In general, when you use low-level caching for instance level information, you need to generate a cache key.</source>
          <target state="translated">この例では &lt;code&gt;cache_key_with_version&lt;/code&gt; メソッドを使用しているため、結果のキャッシュキーは &lt;code&gt;products/233-20140225082222765838000/competing_price&lt;/code&gt; のようになることに注意してください。 &lt;code&gt;cache_key_with_version&lt;/code&gt; は、モデルのクラス名、 &lt;code&gt;id&lt;/code&gt; 、および &lt;code&gt;updated_at&lt;/code&gt; 属性に基づいて文字列を生成します。これは一般的な規則であり、製品が更新されるたびにキャッシュを無効にするという利点があります。一般に、インスタンスレベルの情報に低レベルのキャッシュを使用する場合は、キャッシュキーを生成する必要があります。</target>
        </trans-unit>
        <trans-unit id="335c6423429f476890129005da902f572747e332" translate="yes" xml:space="preserve">
          <source>Notice that inside the &lt;code&gt;create&lt;/code&gt; action we use &lt;code&gt;render&lt;/code&gt; instead of &lt;code&gt;redirect_to&lt;/code&gt; when &lt;code&gt;save&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;. The &lt;code&gt;render&lt;/code&gt; method is used so that the &lt;code&gt;@article&lt;/code&gt; object is passed back to the &lt;code&gt;new&lt;/code&gt; template when it is rendered. This rendering is done within the same request as the form submission, whereas the &lt;code&gt;redirect_to&lt;/code&gt; will tell the browser to issue another request.</source>
          <target state="translated">&lt;code&gt;create&lt;/code&gt; アクション内では、 &lt;code&gt;save&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; を返したときに、 &lt;code&gt;redirect_to&lt;/code&gt; ではなく &lt;code&gt;render&lt;/code&gt; を使用していることに注意してください。 &lt;code&gt;render&lt;/code&gt; 方法はように使用されている &lt;code&gt;@article&lt;/code&gt; のオブジェクトはに戻され &lt;code&gt;new&lt;/code&gt; 、それがレンダリングされるときのテンプレート。このレンダリングはフォーム送信と同じリクエスト内で行われますが、 &lt;code&gt;redirect_to&lt;/code&gt; はブラウザに別のリクエストを発行するよう指示します。</target>
        </trans-unit>
        <trans-unit id="200ef77ed6574c244c4ae9bf1d5933c2dfdd03d7" translate="yes" xml:space="preserve">
          <source>Notice that no &lt;code&gt;:id&lt;/code&gt; parameter was provided to the first &lt;code&gt;url_for&lt;/code&gt; call and the helper used the one from the route's path. Any path parameter implicitly used by &lt;code&gt;url_for&lt;/code&gt; can always be overwritten like shown on the last &lt;code&gt;url_for&lt;/code&gt; calls.</source>
          <target state="translated">最初の &lt;code&gt;url_for&lt;/code&gt; 呼び出しに &lt;code&gt;:id&lt;/code&gt; パラメータが指定されておらず、ヘルパーがルートのパスからのものを使用していることに注意してください。 &lt;code&gt;url_for&lt;/code&gt; によって暗黙的に使用されるパスパラメータは、最後の &lt;code&gt;url_for&lt;/code&gt; 呼び出しで表示されるように常に上書きできます。</target>
        </trans-unit>
        <trans-unit id="519aa6a6e5d6afab6a7e2eb41a4439a4f9329106" translate="yes" xml:space="preserve">
          <source>Notice that only &lt;em&gt;one&lt;/em&gt; migration was copied over here. This is because the first two migrations were copied over the first time this command was run.</source>
          <target state="translated">ここには&lt;em&gt;1つの&lt;/em&gt;マイグレーションのみがコピーされていることに注意してください。これは、最初の2つのマイグレーションが、このコマンドが初めて実行されたときにコピーされたためです。</target>
        </trans-unit>
        <trans-unit id="419d31f54a68e03dee82c2e50065319e6a66420a" translate="yes" xml:space="preserve">
          <source>Notice that the appropriate option was automatically marked &lt;code&gt;selected=&quot;selected&quot;&lt;/code&gt;. Since this select box was bound to a model, we didn't need to specify a &lt;code&gt;:selected&lt;/code&gt; argument!</source>
          <target state="translated">適切なオプションが自動的に &lt;code&gt;selected=&quot;selected&quot;&lt;/code&gt; とマークされていることに注意してください。この選択ボックスはモデルにバインドされているため、 &lt;code&gt;:selected&lt;/code&gt; 引数を指定する必要はありませんでした。</target>
        </trans-unit>
        <trans-unit id="df50d170a97756a976395374fdf8c24cc9971e57" translate="yes" xml:space="preserve">
          <source>Notice that the third parameter, the options array, is the same kind of argument you pass to &lt;code&gt;options_for_select&lt;/code&gt;. One advantage here is that you don't have to worry about pre-selecting the correct city if the user already has one - Rails will do this for you by reading from the &lt;code&gt;@person.city_id&lt;/code&gt; attribute.</source>
          <target state="translated">3番目のパラメータであるoptions配列は、 &lt;code&gt;options_for_select&lt;/code&gt; に渡すのと同じ種類の引数であることに注意してください。ここでの利点の1つは、ユーザーが既に都市を持っている場合でも、正しい都市を事前に選択する必要がないことです &lt;code&gt;@person.city_id&lt;/code&gt; は@ person.city_id属性から読み取ることでこれを行います。</target>
        </trans-unit>
        <trans-unit id="1908ba1c531a2b8259e8a292905b0338f0a4c049" translate="yes" xml:space="preserve">
          <source>Notice that when you add a path using &lt;code&gt;add&lt;/code&gt;, the path object created already contains the path with the same path value given to &lt;code&gt;add&lt;/code&gt;. In some situations, you may not want this behavior, so you can give &lt;code&gt;:with&lt;/code&gt; as option.</source>
          <target state="translated">addを使用してパスを &lt;code&gt;add&lt;/code&gt; と、作成されたパスオブジェクトには、 &lt;code&gt;add&lt;/code&gt; に指定されたのと同じパス値を持つパスがすでに含まれていることに注意してください。状況によっては、この動作を望まない場合があるため、 &lt;code&gt;:with&lt;/code&gt; asオプションを指定できます。</target>
        </trans-unit>
        <trans-unit id="0e96537918e8234317029fed3fe4ff72457100b0" translate="yes" xml:space="preserve">
          <source>Notice that, when the form is submitted, there will be no single value in the &lt;code&gt;params&lt;/code&gt; hash that contains the full date. Instead, there will be several values with special names like &lt;code&gt;&quot;birth_date(1i)&quot;&lt;/code&gt;. Active Record knows how to assemble these specially-named values into a full date or time, based on the declared type of the model attribute. So we can pass &lt;code&gt;params[:person]&lt;/code&gt; to e.g. &lt;code&gt;Person.new&lt;/code&gt; or &lt;code&gt;Person#update&lt;/code&gt; just like we would if the form used a single field to represent the full date.</source>
          <target state="translated">フォームが送信されると、完全な日付を含む単一の値が &lt;code&gt;params&lt;/code&gt; ハッシュにないことに注意してください。代わりに、 &lt;code&gt;&quot;birth_date(1i)&quot;&lt;/code&gt; ような特別な名前の値がいくつかあります。Active Recordは、モデル属性の宣言されたタイプに基づいて、これらの特別な名前の値を完全な日付または時刻にアセンブルする方法を知っています。したがって、フォームが完全な日付を表すために単一のフィールドを使用した場合と同じように、 &lt;code&gt;params[:person]&lt;/code&gt; を &lt;code&gt;Person.new&lt;/code&gt; や &lt;code&gt;Person#update&lt;/code&gt; などに渡すことができます。</target>
        </trans-unit>
        <trans-unit id="44c8b7d455b3180c88c20d2969451f82d99fc72d" translate="yes" xml:space="preserve">
          <source>Notice the 'E' in the output. It denotes a test with error.</source>
          <target state="translated">出力の「E」に注目してください。これはエラーのあるテストを示しています。</target>
        </trans-unit>
        <trans-unit id="87b70343665b3497b68b2af72f1fe352646fe9bf" translate="yes" xml:space="preserve">
          <source>Notice the &lt;code&gt;category&lt;/code&gt; key of the &lt;code&gt;first&lt;/code&gt; article found in &lt;code&gt;fixtures/articles.yml&lt;/code&gt; has a value of &lt;code&gt;about&lt;/code&gt;. This tells Rails to load the category &lt;code&gt;about&lt;/code&gt; found in &lt;code&gt;fixtures/categories.yml&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fixtures/articles.yml&lt;/code&gt; にある &lt;code&gt;first&lt;/code&gt; 記事の &lt;code&gt;category&lt;/code&gt; キーの値が &lt;code&gt;about&lt;/code&gt; あることに注意してください。これは、カテゴリをロードするためのRailsに指示 &lt;code&gt;about&lt;/code&gt; で見つかった &lt;code&gt;fixtures/categories.yml&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f050ea2079c865a020ea6021b3e47525fb921cf9" translate="yes" xml:space="preserve">
          <source>Notice the &lt;code&gt;format.js&lt;/code&gt; in the &lt;code&gt;respond_to&lt;/code&gt; block: that allows the controller to respond to your Ajax request. You then have a corresponding &lt;code&gt;app/views/users/create.js.erb&lt;/code&gt; view file that generates the actual JavaScript code that will be sent and executed on the client side.</source>
          <target state="translated">&lt;code&gt;respond_to&lt;/code&gt; ブロック内のformat.jsに注意して &lt;code&gt;format.js&lt;/code&gt; 。これにより、コントローラーがAjaxリクエストに応答できるようになります。次に、クライアント側で送信および実行される実際のJavaScriptコードを生成する、対応する &lt;code&gt;app/views/users/create.js.erb&lt;/code&gt; ビューファイルがあります。</target>
        </trans-unit>
        <trans-unit id="da94c85a23270499590d74673ddcfe2ffd4b3938" translate="yes" xml:space="preserve">
          <source>Notice the &lt;code&gt;only_path: true&lt;/code&gt; part. This is because &lt;a href=&quot;urlfor&quot;&gt;&lt;code&gt;UrlFor&lt;/code&gt;&lt;/a&gt; has no information about the website hostname that your Rails app is serving. So if you want to include the hostname as well, then you must also pass the &lt;code&gt;:host&lt;/code&gt; argument:</source>
          <target state="translated">&lt;code&gt;only_path: true&lt;/code&gt; 部分に注意してください。これは、&lt;a href=&quot;urlfor&quot;&gt; &lt;code&gt;UrlFor&lt;/code&gt; &lt;/a&gt;がRailsアプリが提供しているWebサイトのホスト名に関する情報を持っていないためです。したがって、ホスト名も含める場合は、 &lt;code&gt;:host&lt;/code&gt; 引数も渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="679dcd5834f1e3b85618c3828ff5a6c00ccaf1be" translate="yes" xml:space="preserve">
          <source>Notice the &lt;code&gt;only_path: true&lt;/code&gt; part. This is because &lt;a href=&quot;urlfor&quot;&gt;UrlFor&lt;/a&gt; has no information about the website hostname that your Rails app is serving. So if you want to include the hostname as well, then you must also pass the &lt;code&gt;:host&lt;/code&gt; argument:</source>
          <target state="translated">&lt;code&gt;only_path: true&lt;/code&gt; 部分に注目してください。これは、&lt;a href=&quot;urlfor&quot;&gt;UrlFor&lt;/a&gt;がRailsアプリが提供しているWebサイトのホスト名に関する情報を持っていないためです。したがって、ホスト名も含める場合は、 &lt;code&gt;:host&lt;/code&gt; 引数も渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="e55f230dbbf5a74dbcd7017f3fcdd6a43cc06c8b" translate="yes" xml:space="preserve">
          <source>Notice we're starting to see some duplication in these three tests, they both access the same Article fixture data. We can D.R.Y. this up by using the &lt;code&gt;setup&lt;/code&gt; and &lt;code&gt;teardown&lt;/code&gt; methods provided by &lt;code&gt;ActiveSupport::Callbacks&lt;/code&gt;.</source>
          <target state="translated">これら3つのテストで重複が確認され始めていることに注意してください。どちらも同じArticleフィクスチャデータにアクセスします。 &lt;code&gt;ActiveSupport::Callbacks&lt;/code&gt; によって提供される &lt;code&gt;setup&lt;/code&gt; および &lt;code&gt;teardown&lt;/code&gt; メソッドを使用して、これを乾燥させることができます。</target>
        </trans-unit>
        <trans-unit id="753a22b2eb617204efee4644795034b8ace1ee14" translate="yes" xml:space="preserve">
          <source>Notifications</source>
          <target state="translated">Notifications</target>
        </trans-unit>
        <trans-unit id="8c8eaaf882c955457360616271c1ee8f60912482" translate="yes" xml:space="preserve">
          <source>Notifies the logs that the request has begun. After the request is complete, flushes all the logs.</source>
          <target state="translated">リクエストが開始されたことをログに通知します。リクエストが完了した後、すべてのログをフラッシュします。</target>
        </trans-unit>
        <trans-unit id="b083a26e6e8d5c85e90f954d51b377ab9d6cb915" translate="yes" xml:space="preserve">
          <source>Now &lt;code&gt;@articles&lt;/code&gt; is included in the instance variables, because the line defining it was executed.</source>
          <target state="translated">今 &lt;code&gt;@articles&lt;/code&gt; はラインは、それが実行された定義ので、インスタンス変数に含まれています。</target>
        </trans-unit>
        <trans-unit id="1b042097ab2d91df48ebb6afa5f5c762fbec1027" translate="yes" xml:space="preserve">
          <source>Now add a rotation for the old SHA1 digest so existing cookies are seamlessly upgraded to the new SHA256 digest.</source>
          <target state="translated">既存のクッキーが新しいSHA256ダイジェストにシームレスにアップグレードされるように、古いSHA1ダイジェストのローテーションを追加しました。</target>
        </trans-unit>
        <trans-unit id="c41bff3fa5ccfd1232f6ff1584724f94b31f90aa" translate="yes" xml:space="preserve">
          <source>Now all of the following will produce the expected join queries using &lt;code&gt;INNER JOIN&lt;/code&gt;:</source>
          <target state="translated">これで、次のすべてが &lt;code&gt;INNER JOIN&lt;/code&gt; を使用して予期される結合クエリを生成します。</target>
        </trans-unit>
        <trans-unit id="20b7f51321bce2db86858d9563944349508848d5" translate="yes" xml:space="preserve">
          <source>Now all you have to do is change that timestamp when the helper method changes.</source>
          <target state="translated">あとはヘルパーメソッドが変更されたときにタイムスタンプを変更するだけです。</target>
        </trans-unit>
        <trans-unit id="7fa3370358927296e6f19b98512db3f680400c6c" translate="yes" xml:space="preserve">
          <source>Now if we execute &lt;code&gt;@todo = @user.todos.create&lt;/code&gt; then the &lt;code&gt;@todo&lt;/code&gt; record's &lt;code&gt;user_id&lt;/code&gt; value will be the &lt;code&gt;guid&lt;/code&gt; value of &lt;code&gt;@user&lt;/code&gt;.</source>
          <target state="translated">私たちが実行した場合、今 &lt;code&gt;@todo = @user.todos.create&lt;/code&gt; 次に &lt;code&gt;@todo&lt;/code&gt; のレコードの &lt;code&gt;user_id&lt;/code&gt; 値になります &lt;code&gt;guid&lt;/code&gt; の値 &lt;code&gt;@user&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="be04c0ceb80dcbf0f5dc7603a36d5f8eb4fa4974" translate="yes" xml:space="preserve">
          <source>Now if we run our tests, we should see it pass:</source>
          <target state="translated">これでテストを実行すれば、合格するはずです。</target>
        </trans-unit>
        <trans-unit id="786773a8b554b8bb590eedf207af886d2f83e1b8" translate="yes" xml:space="preserve">
          <source>Now if you go to http://localhost:3000/articles you will see a list of all the articles that you have created.</source>
          <target state="translated">さて、http://localhost:3000/articles に行くと、あなたが作成したすべての記事のリストが表示されます。</target>
        </trans-unit>
        <trans-unit id="1ab2226544af01e8b9dc9c006fa565e96f7bfd6d" translate="yes" xml:space="preserve">
          <source>Now if you try to create a new article, you will be greeted with a basic HTTP Authentication challenge:</source>
          <target state="translated">さて、新しい記事を作成しようとすると、基本的なHTTP認証の課題が出てきます。</target>
        </trans-unit>
        <trans-unit id="02e279c3aab36157f4c5efb237f845b1ef1d7aec" translate="yes" xml:space="preserve">
          <source>Now it &lt;em&gt;is&lt;/em&gt; removed from the database:</source>
          <target state="translated">今、それが&lt;em&gt;され&lt;/em&gt;、データベースから削除します：</target>
        </trans-unit>
        <trans-unit id="5a02a8ec468f1bdf1e925cf94532d06e0367288b" translate="yes" xml:space="preserve">
          <source>Now it does this instead:</source>
          <target state="translated">今では代わりにこれをしています。</target>
        </trans-unit>
        <trans-unit id="f7d061bef62245b1ff344a1120ecc9711baf3295" translate="yes" xml:space="preserve">
          <source>Now it is possible to create an instance of &lt;code&gt;Person&lt;/code&gt; and set attributes using &lt;code&gt;from_json&lt;/code&gt;.</source>
          <target state="translated">これで、 &lt;code&gt;Person&lt;/code&gt; のインスタンスを作成し、 &lt;code&gt;from_json&lt;/code&gt; を使用して属性を設定することができます。</target>
        </trans-unit>
        <trans-unit id="fe05d7f983e2d38c65ce6aec823f42b31eef96f0" translate="yes" xml:space="preserve">
          <source>Now it's possible to access attributes from the database through the value objects instead. If you choose to name the composition the same as the attribute's name, it will be the only way to access that attribute. That's the case with our &lt;code&gt;balance&lt;/code&gt; attribute. You interact with the value objects just like you would with any other attribute:</source>
          <target state="translated">これで、代わりに値オブジェクトを介してデータベースから属性にアクセスできるようになりました。コンポジションに属性の名前と同じ名前を付けることを選択した場合、それがその属性にアクセスする唯一の方法になります。これは、 &lt;code&gt;balance&lt;/code&gt; 属性の場合です。他の属性と同じように、値オブジェクトを操作します。</target>
        </trans-unit>
        <trans-unit id="a0e723b1bc4f979da3f44583460af0278ed8ce41" translate="yes" xml:space="preserve">
          <source>Now it's time to explore your application. A good place to start is by asking the debugger for help. Type: &lt;code&gt;help&lt;/code&gt;</source>
          <target state="translated">次に、アプリケーションを探索します。開始する良い場所は、デバッガーに助けを求めることです。タイプ： &lt;code&gt;help&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5c36aeda334567b9baa41e06b510c8356bcd1cd8" translate="yes" xml:space="preserve">
          <source>Now let's add a link at the bottom of &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; so that we can delete an article from its own page:</source>
          <target state="translated">次に、 &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; の下部にリンクを追加して、独自のページから記事を削除できるようにします。</target>
        </trans-unit>
        <trans-unit id="d346dc9770f3e643ac5bd68ca3943f083eeb299b" translate="yes" xml:space="preserve">
          <source>Now let's open that file and write our first assertion:</source>
          <target state="translated">では、そのファイルを開いて、最初のアサーションを書いてみましょう。</target>
        </trans-unit>
        <trans-unit id="1cae19a080fb992409b81b543049cc89e8ba18c3" translate="yes" xml:space="preserve">
          <source>Now let's set &lt;code&gt;distinct&lt;/code&gt;:</source>
          <target state="translated">次に、 &lt;code&gt;distinct&lt;/code&gt; 設定しましょう：</target>
        </trans-unit>
        <trans-unit id="5b9c7c93bfb7eceac813cc301b7376f2f1f280a2" translate="yes" xml:space="preserve">
          <source>Now let's test the flow for creating a new article in our blog.</source>
          <target state="translated">それでは、当ブログで新規記事を作成するための流れをテストしてみましょう。</target>
        </trans-unit>
        <trans-unit id="33fd0b45cc2d594e81d58237663c5baec9a5d5f1" translate="yes" xml:space="preserve">
          <source>Now our generator can be invoked as follows:</source>
          <target state="translated">これで、次のようにジェネレータを呼び出すことができるようになりました。</target>
        </trans-unit>
        <trans-unit id="ce6dc94f4dbd0d8d43c18c69be65ff332773fa5b" translate="yes" xml:space="preserve">
          <source>Now people will only need to go to the root of the engine to see all the articles, rather than visiting &lt;code&gt;/articles&lt;/code&gt;. This means that instead of &lt;code&gt;http://localhost:3000/blorgh/articles&lt;/code&gt;, you only need to go to &lt;code&gt;http://localhost:3000/blorgh&lt;/code&gt; now.</source>
          <target state="translated">これで、人々は &lt;code&gt;/articles&lt;/code&gt; にアクセスするのではなく、エンジンのルートに移動してすべての記事を表示するだけで済みます。つまり、 &lt;code&gt;http://localhost:3000/blorgh/articles&lt;/code&gt; ではなく、http：// localhost：3000 / blorghにアクセスするだけで &lt;code&gt;http://localhost:3000/blorgh&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="5c83a55a45b2f01ea698594c8b3e1ad5455f11bf" translate="yes" xml:space="preserve">
          <source>Now routes such as &lt;code&gt;/posts/1&lt;/code&gt; will no longer be valid, but &lt;code&gt;/posts/1.1&lt;/code&gt; will be. The &lt;code&gt;id&lt;/code&gt; parameter must match the constraint passed in for this example.</source>
          <target state="translated">&lt;code&gt;/posts/1&lt;/code&gt; などのルートは無効になりますが、/ posts / &lt;code&gt;/posts/1.1&lt;/code&gt; は有効になります。 &lt;code&gt;id&lt;/code&gt; パラメータは、この例のために渡された制約に一致している必要があります。</target>
        </trans-unit>
        <trans-unit id="6a4dcaaa6423147b18b2f6af18138b7623923251" translate="yes" xml:space="preserve">
          <source>Now that the engine can create new articles, it only makes sense to add commenting functionality as well. To do this, you'll need to generate a comment model, a comment controller, and then modify the articles scaffold to display comments and allow people to create new ones.</source>
          <target state="translated">エンジンが新しい記事を作成できるようになったので、コメント機能を追加することは理にかなっています。これを行うには、コメントモデルとコメントコントローラを生成し、コメントを表示して新しいコメントを作成できるように記事の足場を修正する必要があります。</target>
        </trans-unit>
        <trans-unit id="0c44fc71b44ba9309c0138d0b212288263a8e6f9" translate="yes" xml:space="preserve">
          <source>Now that we have a new database, let's set up the connection model. In order to use the new database we need to create a new abstract class and connect to the animals databases.</source>
          <target state="translated">新しいデータベースができたので、接続モデルを設定してみましょう。新しいデータベースを使用するためには、新しい抽象クラスを作成し、動物データベースに接続する必要があります。</target>
        </trans-unit>
        <trans-unit id="11605a07ad419c26e10776711e573a3cc8abc17e" translate="yes" xml:space="preserve">
          <source>Now that we have a new database, let's set up the model. In order to use the new database we need to create a new abstract class and connect to the animals databases.</source>
          <target state="translated">新しいデータベースができたので、モデルをセットアップしてみましょう。新しいデータベースを使用するためには、新しい抽象クラスを作成し、動物データベースに接続する必要があります。</target>
        </trans-unit>
        <trans-unit id="2f8046c8539acb5480a428fc7d6605e3ecb484cf" translate="yes" xml:space="preserve">
          <source>Now that we have a user model to play with, we will edit the &lt;code&gt;app/controllers/users_controller.rb&lt;/code&gt; file, make it instruct the &lt;code&gt;UserMailer&lt;/code&gt; to deliver an email to the newly created user by editing the create action and inserting a call to &lt;code&gt;UserMailer.with(user: @user).welcome_email&lt;/code&gt; right after the user is successfully saved.</source>
          <target state="translated">使用するユーザーモデルができたので、 &lt;code&gt;app/controllers/users_controller.rb&lt;/code&gt; ファイルを編集し、作成アクションを編集して &lt;code&gt;UserMailer.with(user: @user).welcome_email&lt;/code&gt; への呼び出しを挿入することにより、新しく作成されたユーザーに電子メールを配信するように &lt;code&gt;UserMailer&lt;/code&gt; に指示します。ユーザーが正常に保存された直後のwith（user：@user）.welcome_email。</target>
        </trans-unit>
        <trans-unit id="732e32122270aef4b9252cc8512ef28b55fe61ee" translate="yes" xml:space="preserve">
          <source>Now that we have a user model to play with, we will just edit the &lt;code&gt;app/controllers/users_controller.rb&lt;/code&gt; make it instruct the &lt;code&gt;UserMailer&lt;/code&gt; to deliver an email to the newly created user by editing the create action and inserting a call to &lt;code&gt;UserMailer.with(user: @user).welcome_email&lt;/code&gt; right after the user is successfully saved.</source>
          <target state="translated">これで遊ぶユーザーモデルができたので、 &lt;code&gt;app/controllers/users_controller.rb&lt;/code&gt; を編集して、作成アクションを編集し、 &lt;code&gt;UserMailer.with(user: @user).welcome_email&lt;/code&gt; への呼び出しを挿入することで、新しく作成されたユーザーにメールを配信するように &lt;code&gt;UserMailer&lt;/code&gt; に指示します。 （ユーザー：@user）.welcome_emailユーザーが正常に保存された直後。</target>
        </trans-unit>
        <trans-unit id="08df1c22724db06d31f5eb1a44dd158696e53cf7" translate="yes" xml:space="preserve">
          <source>Now that we have articles and comments working, take a look at the &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; template. It is getting long and awkward. We can use partials to clean it up.</source>
          <target state="translated">記事とコメントが機能するようになったので、 &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; テンプレートを見てください。長くなり、扱いにくくなっています。パーシャルを使用してクリーンアップできます。</target>
        </trans-unit>
        <trans-unit id="f7a57569c29b3772ca2726e0da0891ffdcc0c35a" translate="yes" xml:space="preserve">
          <source>Now that we have made the controller and view, we need to tell Rails when we want &quot;Hello, Rails!&quot; to show up. In our case, we want it to show up when we navigate to the root URL of our site, http://localhost:3000. At the moment, &quot;Welcome aboard&quot; is occupying that spot.</source>
          <target state="translated">コントローラとビューを作ったので、&quot;Hello,Rails!&quot;を表示させたいときにRailsに伝える必要があります。この例では、サイトのルートURLである http://localhost:3000 に移動したときに表示させるようにしています。現時点では、「Welcome aboard」がその場所を占めています。</target>
        </trans-unit>
        <trans-unit id="c78bf8c3d9d311c23bfefc91cd38fcc387615966" translate="yes" xml:space="preserve">
          <source>Now that we have the &lt;code&gt;database.yml&lt;/code&gt; and the new model set up it's time to create the databases. Rails 6.0 ships with all the rails tasks you need to use multiple databases in Rails.</source>
          <target state="translated">今、私たちが持っている &lt;code&gt;database.yml&lt;/code&gt; をしてデータベースを作成するには、それの時間までの新モデルセットを。Rails 6.0には、Railsで複数のデータベースを使用するために必要なすべてのRailsタスクが付属しています。</target>
        </trans-unit>
        <trans-unit id="3658b4e2bb9053598deec9119146b32737b682f1" translate="yes" xml:space="preserve">
          <source>Now that you have a module that modifies the input data, it's time to register it as a preprocessor for your mime type.</source>
          <target state="translated">入力データを修正するモジュールができたので、それをマイムタイプのプリプロセッサとして登録しましょう。</target>
        </trans-unit>
        <trans-unit id="1e3f00f9dc7d411f9b208e29217940a44d10cc9f" translate="yes" xml:space="preserve">
          <source>Now that you've seen how generators can be used &lt;em&gt;inside&lt;/em&gt; an application, did you know they can also be used to &lt;em&gt;generate&lt;/em&gt; applications too? This kind of generator is referred to as a &quot;template&quot;. This is a brief overview of the Templates API. For detailed documentation see the &lt;a href=&quot;rails_application_templates&quot;&gt;Rails Application Templates guide&lt;/a&gt;.</source>
          <target state="translated">アプリケーション&lt;em&gt;内で&lt;/em&gt;ジェネレータを使用する方法を見てきたので、ジェネレータを使用&lt;em&gt;し&lt;/em&gt;てアプリケーションを&lt;em&gt;生成する&lt;/em&gt;こともできることをご存知ですか？この種類のジェネレータは「テンプレート」と呼ばれます。これは、テンプレートAPIの概要です。詳細なドキュメントについては、&lt;a href=&quot;rails_application_templates&quot;&gt;Railsアプリケーションテンプレートガイドを&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="9b78e5d03ac7a3268586ac2691c80bb6bf5d06b9" translate="yes" xml:space="preserve">
          <source>Now that you've seen how to create a controller, an action, and a view, let's create something with a bit more substance.</source>
          <target state="translated">コントローラ、アクション、ビューの作成方法を見てきましたが、もう少し実体のあるものを作成してみましょう。</target>
        </trans-unit>
        <trans-unit id="c42baaa9718f13d5c8222d8c8a7cd9c934c39cef" translate="yes" xml:space="preserve">
          <source>Now that you've seen your first Rails application, you should feel free to update it and experiment on your own.</source>
          <target state="translated">初めてのRailsアプリが見えてきたので、気軽にアップデートして自分で実験してみてはいかがでしょうか。</target>
        </trans-unit>
        <trans-unit id="4ebf0a06c02ac9ca1316bd4928cbe3c564c0f180" translate="yes" xml:space="preserve">
          <source>Now the behavior is clear, that we are only using the connection information in &lt;code&gt;ENV['DATABASE_URL']&lt;/code&gt;.</source>
          <target state="translated">これで動作が明確になり、 &lt;code&gt;ENV['DATABASE_URL']&lt;/code&gt; 接続情報のみが使用されます。</target>
        </trans-unit>
        <trans-unit id="b49ba3604f078f72baacf288b548a11038388574" translate="yes" xml:space="preserve">
          <source>Now the header can pick up on the &lt;code&gt;@page_title&lt;/code&gt; variable and use it for outputting a title tag:</source>
          <target state="translated">これで、ヘッダーは &lt;code&gt;@page_title&lt;/code&gt; 変数を取得し、それを使用してタイトルタグを出力できます。</target>
        </trans-unit>
        <trans-unit id="2e18d36f17b1d90839ac5dcdbcb33a0e9b504751" translate="yes" xml:space="preserve">
          <source>Now the test should pass. Let us verify by running the test again:</source>
          <target state="translated">これでテストはパスするはずです。もう一度テストを実行して確認してみましょう。</target>
        </trans-unit>
        <trans-unit id="778539dc21c575db8a2ca83a7cff62a7c06e5c4c" translate="yes" xml:space="preserve">
          <source>Now the user can request to get a PDF version of a client just by adding &quot;.pdf&quot; to the URL:</source>
          <target state="translated">今、ユーザーはURLに「.pdf」を追加するだけで、クライアントのPDF版を取得するように要求することができます。</target>
        </trans-unit>
        <trans-unit id="a84530ec9df04e7cc3d58660fb582a3729c51d42" translate="yes" xml:space="preserve">
          <source>Now to get this test to pass we can add a model level validation for the &lt;em&gt;title&lt;/em&gt; field.</source>
          <target state="translated">このテストに合格するには、&lt;em&gt;タイトル&lt;/em&gt;フィールドにモデルレベルの検証を追加します。</target>
        </trans-unit>
        <trans-unit id="bdb3107b7872fa0e6980316eb5e2a631d7af22a4" translate="yes" xml:space="preserve">
          <source>Now we can interact with the table using our model.</source>
          <target state="translated">これで、モデルを使ってテーブルと対話できるようになりました。</target>
        </trans-unit>
        <trans-unit id="d3a958ea46193df5a82d613575f59b32d9769fb6" translate="yes" xml:space="preserve">
          <source>Now we can see our &quot;Hello, Rails!&quot; text when we visit http://localhost:3000, confirming that the &lt;code&gt;root&lt;/code&gt; route is also mapped to the &lt;code&gt;index&lt;/code&gt; action of &lt;code&gt;ArticlesController&lt;/code&gt;.</source>
          <target state="translated">これで、「Hello、Rails！」が表示されます。http：// localhost：3000にアクセスすると、 &lt;code&gt;root&lt;/code&gt; ルートも &lt;code&gt;ArticlesController&lt;/code&gt; の &lt;code&gt;index&lt;/code&gt; アクションにマップされていることを確認するテキストが表示されます。</target>
        </trans-unit>
        <trans-unit id="6b6c5e52a2403642e17d46449214a4ddd4e65765" translate="yes" xml:space="preserve">
          <source>Now we can see the article when we visit http://localhost:3000/articles/1!</source>
          <target state="translated">今では http://localhost:3000/articles/1 に行った時に記事が見れるようになりました!(笑)。</target>
        </trans-unit>
        <trans-unit id="188b483bccd4381f8ec9c5e1a3d636878fd9e47c" translate="yes" xml:space="preserve">
          <source>Now we can see the new description by invoking &lt;code&gt;--help&lt;/code&gt; on the new generator. The second way to add a description is by creating a file named &lt;code&gt;USAGE&lt;/code&gt; in the same directory as our generator. We are going to do that in the next step.</source>
          <target state="translated">これで、新しいジェネレータで &lt;code&gt;--help&lt;/code&gt; を呼び出すことにより、新しい説明を確認できます。説明を追加する2番目の方法は、ジェネレーターと同じディレクトリに &lt;code&gt;USAGE&lt;/code&gt; という名前のファイルを作成することです。次のステップでそれを行います。</target>
        </trans-unit>
        <trans-unit id="417969e5c8e508f01b009c421da4c0a0d5501235" translate="yes" xml:space="preserve">
          <source>Now we can use &lt;code&gt;Relation#merge&lt;/code&gt; to merge in the &lt;code&gt;created_in_time_range&lt;/code&gt; scope:</source>
          <target state="translated">これで、 &lt;code&gt;Relation#merge&lt;/code&gt; を使用して &lt;code&gt;created_in_time_range&lt;/code&gt; スコープにマージできます。</target>
        </trans-unit>
        <trans-unit id="2e8c1cf15d98c430fe3bb86da45effb16f18c7e1" translate="yes" xml:space="preserve">
          <source>Now we move on to the &quot;C&quot; (Create) of CRUD. Typically, in web applications, creating a new resource is a multi-step process. First, the user requests a form to fill out. Then, the user submits the form. If there are no errors, then the resource is created and some kind of confirmation is displayed. Else, the form is redisplayed with error messages, and the process is repeated.</source>
          <target state="translated">ここで、CRUDの「C」(Create)に移ります。通常、ウェブアプリケーションでは、新しいリソースの作成は複数のステップを経て行われます。まず、ユーザーが記入するフォームを要求します。次に、ユーザーがフォームを送信します。エラーがなければ、リソースが作成され、何らかの確認が表示されます。そうでなければ、フォームはエラーメッセージとともに再表示され、プロセスが繰り返されます。</target>
        </trans-unit>
        <trans-unit id="dddc1e5eddf99199ed2f4f24b64350725bf5572a" translate="yes" xml:space="preserve">
          <source>Now we're going to add a system test to our blog application. We'll demonstrate writing a system test by visiting the index page and creating a new blog article.</source>
          <target state="translated">それでは、ブログアプリにシステムテストを追加していきます。インデックスページにアクセスして、ブログ記事を新規作成してシステムテストを書くデモを行います。</target>
        </trans-unit>
        <trans-unit id="6b1be2e7a39917788e5f531bf999ce9e2f7f2121" translate="yes" xml:space="preserve">
          <source>Now what if that number could vary, say as an argument from somewhere? The find would then take the form:</source>
          <target state="translated">さて、その数が変化する可能性があるとしたら、例えばどこかからの引数としてどうでしょうか?その場合は次のような形になります。</target>
        </trans-unit>
        <trans-unit id="bd19300ee7bde487c7b46e35b59d4d10c498b143" translate="yes" xml:space="preserve">
          <source>Now what if that title could vary, say as an argument from somewhere? The find would then take the form:</source>
          <target state="translated">さて、そのタイトルが、どこかからの引数として変化するとしたらどうでしょうか?その場合の検索結果は次のような形になります。</target>
        </trans-unit>
        <trans-unit id="be9be071256fdc4d57319b64f14682dd8cf34cb5" translate="yes" xml:space="preserve">
          <source>Now when a new request for the index action is processed, the layout will vary depending on whether the person accessing is logged in or not.</source>
          <target state="translated">これでインデックスアクションの新規リクエストが処理されると、アクセスしている人がログインしているかどうかでレイアウトが変わるようになりました。</target>
        </trans-unit>
        <trans-unit id="0c0ba2bf78d8878cf9ee6fce1e060d440d88a4de" translate="yes" xml:space="preserve">
          <source>Now when your application serves an asset in production, the CDN will store the asset for up to a year. Since most CDNs also cache headers of the request, this &lt;code&gt;Cache-Control&lt;/code&gt; will be passed along to all future browsers seeking this asset, the browser then knows that it can store this asset for a very long time before needing to re-request it.</source>
          <target state="translated">アプリケーションが本番環境でアセットを提供する場合、CDNはそのアセットを最大1年間保存します。ほとんどのCDNはリクエストのヘッダーもキャッシュするため、この &lt;code&gt;Cache-Control&lt;/code&gt; は、このアセットを探す将来のすべてのブラウザーに渡されます。ブラウザーは、このアセットを非常に長期間保存してから再リクエストする必要があることを認識します。</target>
        </trans-unit>
        <trans-unit id="7397dca47478e57252a6d04e34f47f3cce91cb32" translate="yes" xml:space="preserve">
          <source>Now with all the pieces in place, an action will take place that will associate an author - represented by a record in the &lt;code&gt;users&lt;/code&gt; table - with an article, represented by the &lt;code&gt;blorgh_articles&lt;/code&gt; table from the engine.</source>
          <target state="translated">これですべての要素が揃ったので、 &lt;code&gt;users&lt;/code&gt; テーブルのレコードで表される作成者を、エンジンの &lt;code&gt;blorgh_articles&lt;/code&gt; テーブルで表される記事に関連付けるアクションが実行されます。</target>
        </trans-unit>
        <trans-unit id="f4861027a7a7732f007bb28f69aa885ad4bd3bb6" translate="yes" xml:space="preserve">
          <source>Now you can access a serialized Hash of your object using the &lt;code&gt;serializable_hash&lt;/code&gt; method.</source>
          <target state="translated">これで、 &lt;code&gt;serializable_hash&lt;/code&gt; メソッドを使用して、オブジェクトのシリアル化されたハッシュにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="bbd491ea2cb97bc75ae16420f9d81e845ecc38d4" translate="yes" xml:space="preserve">
          <source>Now you can add articles and comments to your blog and have them show up in the right places.</source>
          <target state="translated">これでブログに記事やコメントを追加して、適切な場所に表示させることができるようになりました。</target>
        </trans-unit>
        <trans-unit id="a63f6b7032dcb040af6139789b42742fda3dbb90" translate="yes" xml:space="preserve">
          <source>Now you can create the necessary database tables in your testing database by navigating to your dummy app and migrating the database. First, run:</source>
          <target state="translated">これで、ダミーアプリに移動してデータベースを移行することで、テスト用データベースに必要なデータベーステーブルを作成することができます。まず、実行します。</target>
        </trans-unit>
        <trans-unit id="1b509fba0e74de20ecdb10b71addfc8cad75a3af" translate="yes" xml:space="preserve">
          <source>Now you can display an image inside your email.</source>
          <target state="translated">メール内に画像を表示できるようになりました。</target>
        </trans-unit>
        <trans-unit id="1e04b515bb030c9b6a664234a0b6eaa9a8d60e0d" translate="yes" xml:space="preserve">
          <source>Now you can have different transliterations for each locale:</source>
          <target state="translated">これで、ロケールごとに異なる音訳ができるようになりました。</target>
        </trans-unit>
        <trans-unit id="eab971757273773013b3ebe215faa414d52873bf" translate="yes" xml:space="preserve">
          <source>Now you can list a bunch of entries, call +Entry#title+, and polymorphism will provide you with the answer.</source>
          <target state="translated">これで、エントリの束をリストアップし、+Entry#title+を呼び出すことができ、ポリモーフィズムが答えを提供してくれるようになりました。</target>
        </trans-unit>
        <trans-unit id="a57d5608f4f021228ff74f81e7c98fcad5341756" translate="yes" xml:space="preserve">
          <source>Now you can listen to this event with:</source>
          <target state="translated">これでこのイベントが聴けるようになりました。</target>
        </trans-unit>
        <trans-unit id="fc952f88284ef46aa74b35dfcd65bb65ac57e4b3" translate="yes" xml:space="preserve">
          <source>Now you can mount your engine in application's routes just like that:</source>
          <target state="translated">これで、アプリケーションのルートにエンジンをマウントすることができるようになりました。</target>
        </trans-unit>
        <trans-unit id="7ccd6733a35b358bf2c7b29305f2ea242bc88d8b" translate="yes" xml:space="preserve">
          <source>Now you can mount your engine in application's routes:</source>
          <target state="translated">これで、アプリケーションのルートにエンジンをマウントできるようになりました。</target>
        </trans-unit>
        <trans-unit id="0cca2a620bb0efd6c8b31ea33601ec518093b64d" translate="yes" xml:space="preserve">
          <source>Now you can see even more output in the console from running the tests:</source>
          <target state="translated">これで、テストを実行すると、コンソールにさらに多くの出力が表示されるようになりました。</target>
        </trans-unit>
        <trans-unit id="ef124558e731720d7cd6ee04cfa0fa14595c87e3" translate="yes" xml:space="preserve">
          <source>Now you can simply do:</source>
          <target state="translated">これでシンプルにできるようになりました。</target>
        </trans-unit>
        <trans-unit id="97015d7f10515896d46f145fc9b204e09622e272" translate="yes" xml:space="preserve">
          <source>Now you can try running all the tests and they should pass.</source>
          <target state="translated">これで、すべてのテストを実行してみてください。</target>
        </trans-unit>
        <trans-unit id="a1f2c06b04c1d3ffade749660a4a8d51b3ca9356" translate="yes" xml:space="preserve">
          <source>Now you should know where you are in the running trace and be able to print the available variables. But let's continue and move on with the application execution.</source>
          <target state="translated">これで、実行中のトレースのどこにいるのかがわかり、利用可能な変数を表示できるようになったはずです。しかし、アプリケーションの実行を継続して進めていきましょう。</target>
        </trans-unit>
        <trans-unit id="87bb8627d78df2d32264c8cfee94fb35d59902db" translate="yes" xml:space="preserve">
          <source>Now you'll get a nice error message when saving an article without a title when you attempt to do just that on the new article form http://localhost:3000/articles/new:</source>
          <target state="translated">新しい記事フォーム http://localhost:3000/articles/new でタイトルなしの記事を保存しようとすると、素敵なエラーメッセージが表示されるようになりました。</target>
        </trans-unit>
        <trans-unit id="6c963ec9ca58ea98b17b6c7555bcaae882d53c98" translate="yes" xml:space="preserve">
          <source>Now, &lt;code&gt;Engine&lt;/code&gt; will get only requests that were not handled by &lt;code&gt;Application&lt;/code&gt;.</source>
          <target state="translated">これで、 &lt;code&gt;Engine&lt;/code&gt; は &lt;code&gt;Application&lt;/code&gt; で処理されなかったリクエストのみを取得します。</target>
        </trans-unit>
        <trans-unit id="203cf7090ffd765e9f27dc2ab3d7d30952df1c61" translate="yes" xml:space="preserve">
          <source>Now, a &lt;code&gt;GET&lt;/code&gt; request to &lt;code&gt;/photos&lt;/code&gt; would succeed, but a &lt;code&gt;POST&lt;/code&gt; request to &lt;code&gt;/photos&lt;/code&gt; (which would ordinarily be routed to the &lt;code&gt;create&lt;/code&gt; action) will fail.</source>
          <target state="translated">これで、 &lt;code&gt;/photos&lt;/code&gt; への &lt;code&gt;GET&lt;/code&gt; リクエストは成功しますが、 &lt;code&gt;/photos&lt;/code&gt; （通常は &lt;code&gt;create&lt;/code&gt; アクションにルーティングされます）への &lt;code&gt;POST&lt;/code&gt; リクエストは失敗します。</target>
        </trans-unit>
        <trans-unit id="af62ed7bdece7af2a862042c75463d54724457e7" translate="yes" xml:space="preserve">
          <source>Now, add another link in &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt;, underneath the form, to go back to the &lt;code&gt;index&lt;/code&gt; action:</source>
          <target state="translated">次に、別のリンクを &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt; のフォームの下に追加して、 &lt;code&gt;index&lt;/code&gt; アクションに戻ります。</target>
        </trans-unit>
        <trans-unit id="8e12adc83e98da965b0202dae25d3e358044f67f" translate="yes" xml:space="preserve">
          <source>Now, create a new file &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; with the following content:</source>
          <target state="translated">次に、次のコンテンツを含む新しいファイル &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="ab84c9773432db7232bd695fe13dcece6e69f43e" translate="yes" xml:space="preserve">
          <source>Now, if the current user is a special user, they'll get a special layout when viewing a product.</source>
          <target state="translated">これで、現在のユーザーが特別なユーザーであれば、商品を見るときに特別なレイアウトになります。</target>
        </trans-unit>
        <trans-unit id="d155cc0c54a8c1103fe54c9484e37a19028bfcab" translate="yes" xml:space="preserve">
          <source>Now, if you POST to &lt;code&gt;/posts/:id&lt;/code&gt;, it will route to the &lt;code&gt;create_comment&lt;/code&gt; action. A GET on the same URL will route to the &lt;code&gt;show&lt;/code&gt; action.</source>
          <target state="translated">これで、 &lt;code&gt;/posts/:id&lt;/code&gt; にPOST &lt;code&gt;create_comment&lt;/code&gt; 、create_commentアクションにルーティングされます。同じURLのGETは、 &lt;code&gt;show&lt;/code&gt; アクションにルーティングされます。</target>
        </trans-unit>
        <trans-unit id="fd01ddc663c761677d7838ff6ebae0d36785cd0e" translate="yes" xml:space="preserve">
          <source>Now, if you create a Comment scaffold, you will see that the shoulda generators are being invoked, and at the end, they are just falling back to TestUnit generators:</source>
          <target state="translated">さて、Comment の足場を作ってみると、shoulda ジェネレータが起動されているのがわかりますが、最後は TestUnit ジェネレータに戻っているだけです。</target>
        </trans-unit>
        <trans-unit id="48e2d05fe59b341a812b4b192d936fbdab98a334" translate="yes" xml:space="preserve">
          <source>Now, if you noticed, we first wrote a test which fails for a desired functionality, then we wrote some code which adds the functionality and finally we ensured that our test passes. This approach to software development is referred to as &lt;a href=&quot;http://c2.com/cgi/wiki?TestDrivenDevelopment&quot;&gt;&lt;em&gt;Test-Driven Development&lt;/em&gt; (TDD)&lt;/a&gt;.</source>
          <target state="translated">ここで、気づいた場合は、最初に目的の機能で失敗するテストを記述し、次に機能を追加するコードを記述し、最後にテストがパスすることを確認しました。このソフトウェア開発へのアプローチは、&lt;a href=&quot;http://c2.com/cgi/wiki?TestDrivenDevelopment&quot;&gt;&lt;em&gt;テスト駆動開発&lt;/em&gt;（TDD）&lt;/a&gt;と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="27b8380c7a32dfa3423cdfea7f660ff2643ddae5" translate="yes" xml:space="preserve">
          <source>Now, let's update the &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt; view to use this new partial, rewriting it completely:</source>
          <target state="translated">次に、 &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt; ビューを更新して、この新しいパーシャルを使用し、完全に書き換えます。</target>
        </trans-unit>
        <trans-unit id="217df5a8b404551ff72f541302f83740782a2f6c" translate="yes" xml:space="preserve">
          <source>Now, suppose we wanted to add a new book for an existing author. We'd need to do something like this:</source>
          <target state="translated">さて、既存の著者のために新しい本を追加したいとします。このようなことをする必要があります</target>
        </trans-unit>
        <trans-unit id="11c9105ae03fd512b3df4b1b95b94556311d85ad" translate="yes" xml:space="preserve">
          <source>Now, the &lt;code&gt;LoginsController&lt;/code&gt;'s &lt;code&gt;new&lt;/code&gt; and &lt;code&gt;create&lt;/code&gt; actions will work as before without requiring the user to be logged in. The &lt;code&gt;:only&lt;/code&gt; option is used to skip this filter only for these actions, and there is also an &lt;code&gt;:except&lt;/code&gt; option which works the other way. These options can be used when adding filters too, so you can add a filter which only runs for selected actions in the first place.</source>
          <target state="translated">これで、 &lt;code&gt;LoginsController&lt;/code&gt; の &lt;code&gt;new&lt;/code&gt; アクションと &lt;code&gt;create&lt;/code&gt; アクションは、ユーザーがログインしなくても以前と同じように機能します。 &lt;code&gt;:only&lt;/code&gt; オプションは、これらのアクションに対してのみこのフィルターをスキップするために使用されます。また、他の機能 &lt;code&gt;:except&lt;/code&gt; する：exceptオプションもあります。仕方。これらのオプションは、フィルターを追加するときにも使用できるため、最初は選択したアクションに対してのみ実行されるフィルターを追加できます。</target>
        </trans-unit>
        <trans-unit id="622fed2ef3f7a6ad2876c081d2afd526d0fbaa2b" translate="yes" xml:space="preserve">
          <source>Now, we can remove the duplicated logic from each model and instead include our new &lt;code&gt;Visible&lt;/code&gt; module:</source>
          <target state="translated">これで、各モデルから重複したロジックを削除し、代わりに新しい &lt;code&gt;Visible&lt;/code&gt; モジュールを含めることができます。</target>
        </trans-unit>
        <trans-unit id="6dbcfc0b858782509a12208646a29cda7e06af98" translate="yes" xml:space="preserve">
          <source>Now, when &lt;code&gt;Topic#destroy&lt;/code&gt; is run only &lt;code&gt;destroy_author&lt;/code&gt; is called. When &lt;code&gt;Reply#destroy&lt;/code&gt; is run, both &lt;code&gt;destroy_author&lt;/code&gt; and &lt;code&gt;destroy_readers&lt;/code&gt; are called.</source>
          <target state="translated">現在、 &lt;code&gt;Topic#destroy&lt;/code&gt; が実行されると &lt;code&gt;destroy_author&lt;/code&gt; のみが呼び出されます。ときに &lt;code&gt;Reply#destroy&lt;/code&gt; 実行され、両方 &lt;code&gt;destroy_author&lt;/code&gt; と &lt;code&gt;destroy_readers&lt;/code&gt; が呼ばれます。</target>
        </trans-unit>
        <trans-unit id="c9f281387742abe67e917f18111764c49c4a38a8" translate="yes" xml:space="preserve">
          <source>Now, when the helper generator is invoked and TestUnit is configured as the test framework, it will try to invoke both &lt;code&gt;Rails::TestUnitGenerator&lt;/code&gt; and &lt;code&gt;TestUnit::MyHelperGenerator&lt;/code&gt;. Since none of those are defined, we can tell our generator to invoke &lt;code&gt;TestUnit::Generators::HelperGenerator&lt;/code&gt; instead, which is defined since it's a Rails generator. To do that, we just need to add:</source>
          <target state="translated">ここで、ヘルパージェネレーターが呼び出され、TestUnitがテストフレームワークとして構成されている場合、 &lt;code&gt;Rails::TestUnitGenerator&lt;/code&gt; と &lt;code&gt;TestUnit::MyHelperGenerator&lt;/code&gt; 両方を呼び出そうとします。これらはどれも定義されていないため、代わりに &lt;code&gt;TestUnit::Generators::HelperGenerator&lt;/code&gt; を呼び出すようジェネレーターに指示できます。これはRailsジェネレーターであるために定義されています。これを行うには、以下を追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="738f4ee5f2fdec6e2acb7a14ba46229776b15fe5" translate="yes" xml:space="preserve">
          <source>Now, when this view is rendered, it will show an error message which tells you that the translations for the keys &lt;code&gt;:hello_world&lt;/code&gt; and &lt;code&gt;:hello_flash&lt;/code&gt; are missing.</source>
          <target state="translated">これで、このビューがレンダリングされるときに、キー &lt;code&gt;:hello_world&lt;/code&gt; および &lt;code&gt;:hello_flash&lt;/code&gt; の変換が欠落していることを通知するエラーメッセージが表示されます。</target>
        </trans-unit>
        <trans-unit id="d961b6eae818de7e713f0e8ff2517e62b85cc0f1" translate="yes" xml:space="preserve">
          <source>Now, when you add the &lt;code&gt;_destroy&lt;/code&gt; key to the attributes hash, with a value that evaluates to &lt;code&gt;true&lt;/code&gt;, you will destroy the associated model:</source>
          <target state="translated">ここで、 &lt;code&gt;_destroy&lt;/code&gt; キーを &lt;code&gt;true&lt;/code&gt; に評価される値で属性ハッシュに追加すると、関連するモデルが破棄されます。</target>
        </trans-unit>
        <trans-unit id="0e48bab7662e8b7cbf063bf165fef96ea50592a7" translate="yes" xml:space="preserve">
          <source>Now, when you call the &lt;code&gt;books_path&lt;/code&gt; method you should get &lt;code&gt;&quot;/en/books&quot;&lt;/code&gt; (for the default locale). A URL like &lt;code&gt;http://localhost:3001/nl/books&lt;/code&gt; should load the Dutch locale, then, and following calls to &lt;code&gt;books_path&lt;/code&gt; should return &lt;code&gt;&quot;/nl/books&quot;&lt;/code&gt; (because the locale changed).</source>
          <target state="translated">これで、 &lt;code&gt;books_path&lt;/code&gt; メソッドを呼び出すと、 &lt;code&gt;&quot;/en/books&quot;&lt;/code&gt; を取得する必要があります（デフォルトのロケールの場合）。 &lt;code&gt;http://localhost:3001/nl/books&lt;/code&gt; のようなURL はオランダ語のロケールをロードし、 &lt;code&gt;books_path&lt;/code&gt; を呼び出すと &lt;code&gt;&quot;/nl/books&quot;&lt;/code&gt; が返されます（ロケールが変更されたため）。</target>
        </trans-unit>
        <trans-unit id="19855c7053a8ed3b95df3cc097e2804353c5dd70" translate="yes" xml:space="preserve">
          <source>Now, when you use a form element with the &lt;code&gt;_destroy&lt;/code&gt; parameter, with a value that evaluates to &lt;code&gt;true&lt;/code&gt;, you will destroy the associated model (e.g. 1, '1', true, or 'true'):</source>
          <target state="translated">ここで、 &lt;code&gt;_destroy&lt;/code&gt; パラメーターと &lt;code&gt;true&lt;/code&gt; と評価される値を持つフォーム要素を使用すると、関連するモデル（1、 '1'、true、または 'true'など）が破棄されます。</target>
        </trans-unit>
        <trans-unit id="dce4fc5d00e68ba3c104ef525a4771ac4977bf97" translate="yes" xml:space="preserve">
          <source>Now, when you use a form element with the &lt;code&gt;_destroy&lt;/code&gt; parameter, with a value that evaluates to &lt;code&gt;true&lt;/code&gt;, you will destroy the associated model (eg. 1, '1', true, or 'true'):</source>
          <target state="translated">ここで、 &lt;code&gt;_destroy&lt;/code&gt; パラメーターでフォーム要素を使用し、値が &lt;code&gt;true&lt;/code&gt; と評価されると、関連するモデル（例：1、 '1'、true、または 'true'）が破棄されます。</target>
        </trans-unit>
        <trans-unit id="c809e2c5ebb44a808f82d543f4edd794de0e3536" translate="yes" xml:space="preserve">
          <source>Now, you can use the &lt;code&gt;my_engine&lt;/code&gt; helper inside your application:</source>
          <target state="translated">これで、アプリケーション内で &lt;code&gt;my_engine&lt;/code&gt; ヘルパーを使用できます。</target>
        </trans-unit>
        <trans-unit id="4766e0bf16611e8438a6d53eae97d9cadc5e5fec" translate="yes" xml:space="preserve">
          <source>Null Relation</source>
          <target state="translated">ヌル関係</target>
        </trans-unit>
        <trans-unit id="6bfcf0cddffdd3930b31edb810e7c1a87b793877" translate="yes" xml:space="preserve">
          <source>NullContentTypeHeader</source>
          <target state="translated">NullContentTypeHeader</target>
        </trans-unit>
        <trans-unit id="350e7d8f18b3ca80dc7b075c15a357bcc83872b7" translate="yes" xml:space="preserve">
          <source>Number of partials fetched from cache</source>
          <target state="translated">キャッシュから取得した部分集合の数</target>
        </trans-unit>
        <trans-unit id="cba15084808a7129a67b592d7bb6d70a61b0c406" translate="yes" xml:space="preserve">
          <source>Number of records that instantiated</source>
          <target state="translated">インスタンス化したレコードの数</target>
        </trans-unit>
        <trans-unit id="098c6454bdf4bbfd58663e390aac0c78846ac19f" translate="yes" xml:space="preserve">
          <source>Number of times this job has been executed (which increments on every retry, like after an exception).</source>
          <target state="translated">このジョブが実行された回数 (例外が発生した後など、リトライするたびにインクリメントされます)。</target>
        </trans-unit>
        <trans-unit id="5a4142ed71d8bb3054e10546418ff4a5622d023e" translate="yes" xml:space="preserve">
          <source>NumberHelper</source>
          <target state="translated">NumberHelper</target>
        </trans-unit>
        <trans-unit id="e8a3239000961222e1a51d13b52ce2170d11bf3c" translate="yes" xml:space="preserve">
          <source>NumberHelper#number_to_currency</source>
          <target state="translated">NumberHelper#number_to_currency</target>
        </trans-unit>
        <trans-unit id="555aef064435c32aa56c039a2f381ca70e713e6f" translate="yes" xml:space="preserve">
          <source>NumberHelper#number_to_delimited</source>
          <target state="translated">NumberHelper#number_to_delimited</target>
        </trans-unit>
        <trans-unit id="2dd770bd60283e3854630a4d0d8df6af7bd610ac" translate="yes" xml:space="preserve">
          <source>NumberHelper#number_to_human</source>
          <target state="translated">NumberHelper#number_to_human</target>
        </trans-unit>
        <trans-unit id="1fea276bc8c34fa1c7fdb9af9f635fa51c1df32c" translate="yes" xml:space="preserve">
          <source>NumberHelper#number_to_human_size</source>
          <target state="translated">NumberHelper#number_to_human_size</target>
        </trans-unit>
        <trans-unit id="163d0b5ad6620cb0466941a558c9a8e6395ad76a" translate="yes" xml:space="preserve">
          <source>NumberHelper#number_to_percentage</source>
          <target state="translated">NumberHelper#number_to_percentage</target>
        </trans-unit>
        <trans-unit id="3032cb4f231eabf9b822856e17819cc9c788b1b4" translate="yes" xml:space="preserve">
          <source>NumberHelper#number_to_phone</source>
          <target state="translated">NumberHelper#number_to_phone</target>
        </trans-unit>
        <trans-unit id="0f6e1785b3fe36f01f15a022f1a3f306675fc079" translate="yes" xml:space="preserve">
          <source>NumberHelper#number_to_rounded</source>
          <target state="translated">NumberHelper#number_to_rounded</target>
        </trans-unit>
        <trans-unit id="30a62380404b3b267a5c4e21b5e111455d09031e" translate="yes" xml:space="preserve">
          <source>Numeric</source>
          <target state="translated">Numeric</target>
        </trans-unit>
        <trans-unit id="12952380314ef25dafac5a0d3d04de5fd7fb9c09" translate="yes" xml:space="preserve">
          <source>Numeric#byte</source>
          <target state="translated">Numeric#byte</target>
        </trans-unit>
        <trans-unit id="0ddc3e9e09e8db25e967665e786a23d0a466a10b" translate="yes" xml:space="preserve">
          <source>Numeric#day</source>
          <target state="translated">Numeric#day</target>
        </trans-unit>
        <trans-unit id="dd3c906dfbdea7498b422ab9b53b0b7717f9aafb" translate="yes" xml:space="preserve">
          <source>Numeric#days</source>
          <target state="translated">Numeric#days</target>
        </trans-unit>
        <trans-unit id="5cd1ac9a871955b8caf1eb6d97ffd59c4cb670fc" translate="yes" xml:space="preserve">
          <source>Numeric#hour</source>
          <target state="translated">Numeric#hour</target>
        </trans-unit>
        <trans-unit id="3b25fa4cb288ad452bbae28d5073d2083b0bf7d1" translate="yes" xml:space="preserve">
          <source>Numeric#week</source>
          <target state="translated">Numeric#week</target>
        </trans-unit>
        <trans-unit id="65454a128af7fcaafe8438725972801b014cf09f" translate="yes" xml:space="preserve">
          <source>NumericWithFormat</source>
          <target state="translated">NumericWithFormat</target>
        </trans-unit>
        <trans-unit id="ee86027f7732f7a471be8d5533de0f308291513a" translate="yes" xml:space="preserve">
          <source>NumericWithFormat#to_s</source>
          <target state="translated">NumericWithFormat#to_s</target>
        </trans-unit>
        <trans-unit id="af80f83e91cb2acf5105c5c35c83d3f1e00891aa" translate="yes" xml:space="preserve">
          <source>OK! Now let's add a timestamp to the view, so we can demo the &lt;strong&gt;date/time localization&lt;/strong&gt; feature as well. To localize the time format you pass the Time object to &lt;code&gt;I18n.l&lt;/code&gt; or (preferably) use Rails' &lt;code&gt;#l&lt;/code&gt; helper. You can pick a format by passing the &lt;code&gt;:format&lt;/code&gt; option - by default the &lt;code&gt;:default&lt;/code&gt; format is used.</source>
          <target state="translated">OK！次に、タイムスタンプをビューに追加して、&lt;strong&gt;日付/時刻のローカリゼーション&lt;/strong&gt;機能もデモできるようにします。時間形式をローカライズするには、Timeオブジェクトを &lt;code&gt;I18n.l&lt;/code&gt; に渡すか、（できれば）Railsの &lt;code&gt;#l&lt;/code&gt; ヘルパーを使用します。 &lt;code&gt;:format&lt;/code&gt; オプションを渡すことでフォーマットを選択できます-デフォルトでは &lt;code&gt;:default&lt;/code&gt; フォーマットが使用されます。</target>
        </trans-unit>
        <trans-unit id="34925fb12c571f21781ddda3d56ad6f2dbfb5eef" translate="yes" xml:space="preserve">
          <source>OK! Now you've initialized I18n support for your Ruby on Rails application and told it which locale to use and how to preserve it between requests.</source>
          <target state="translated">OK! これで、Ruby on RailsアプリケーションのI18nサポートを初期化し、どのロケールを使用するか、リクエスト間でどのようにロケールを保持するかを伝えました。</target>
        </trans-unit>
        <trans-unit id="d3f5ef0a7a41f4b5fa47c99b3d228787fec02b73" translate="yes" xml:space="preserve">
          <source>ONE_AS_ONE</source>
          <target state="translated">ONE_AS_ONE</target>
        </trans-unit>
        <trans-unit id="5b8e5d05306b818cd2c3ac786d2bf461455a0998" translate="yes" xml:space="preserve">
          <source>OPTION_AS_ERROR_MESSAGE</source>
          <target state="translated">OPTION_AS_ERROR_MESSAGE</target>
        </trans-unit>
        <trans-unit id="a4f0a12e44c14fb9d2ef8fa325826433a689af64" translate="yes" xml:space="preserve">
          <source>OR Conditions</source>
          <target state="translated">OR条件</target>
        </trans-unit>
        <trans-unit id="6673abff0e25535a62fa142e46784d8906594513" translate="yes" xml:space="preserve">
          <source>ORDER_IGNORE_MESSAGE</source>
          <target state="translated">ORDER_IGNORE_MESSAGE</target>
        </trans-unit>
        <trans-unit id="c8210fd944bd4d72ef2903592cc6cc8d86ecac8c" translate="yes" xml:space="preserve">
          <source>ORIG_ARGV</source>
          <target state="translated">ORIG_ARGV</target>
        </trans-unit>
        <trans-unit id="ce95b74a7293928d321b45eeb0f7c306f65f50ed" translate="yes" xml:space="preserve">
          <source>Obfuscation</source>
          <target state="translated">Obfuscation</target>
        </trans-unit>
        <trans-unit id="2883f191bc5ebfdc16c0813eff659b35363ea69b" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="translated">Object</target>
        </trans-unit>
        <trans-unit id="4ad73191edfacc818048e43fbc454750d4108003" translate="yes" xml:space="preserve">
          <source>Object ID of the connection object</source>
          <target state="translated">接続オブジェクトのオブジェクトID</target>
        </trans-unit>
        <trans-unit id="c42e56fb93a2d54b07af5e3e41ea98848a0a41a5" translate="yes" xml:space="preserve">
          <source>Object Relational Mapping</source>
          <target state="translated">オブジェクトリレーショナルマッピング</target>
        </trans-unit>
        <trans-unit id="782f438afdfb9026987c9473bad03c906cfd0f60" translate="yes" xml:space="preserve">
          <source>Object#in?</source>
          <target state="translated">Object#in?</target>
        </trans-unit>
        <trans-unit id="4577f031b57b33b7448915bf92f1c64db21a412a" translate="yes" xml:space="preserve">
          <source>Object#try</source>
          <target state="translated">Object#try</target>
        </trans-unit>
        <trans-unit id="c7179c7e846b1bd1edbe3601ad7107bcadbe4c20" translate="yes" xml:space="preserve">
          <source>Object#try!</source>
          <target state="translated">Object#try!</target>
        </trans-unit>
        <trans-unit id="8dde3eba34db3a98fea0cf0d796447bbd2b08546" translate="yes" xml:space="preserve">
          <source>Objects will &lt;em&gt;always&lt;/em&gt; be removed from the database, ignoring the &lt;code&gt;:dependent&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;:dependent&lt;/code&gt; オプションを無視して、オブジェクトは&lt;em&gt;常に&lt;/em&gt;データベースから削除されます。</target>
        </trans-unit>
        <trans-unit id="77ca99176e0a69f92635c323c9ee512f8f14ada0" translate="yes" xml:space="preserve">
          <source>Objects will be deleted if they're associated with &lt;code&gt;dependent: :destroy&lt;/code&gt;, just like &lt;code&gt;dependent: :delete_all&lt;/code&gt;.</source>
          <target state="translated">オブジェクトが &lt;code&gt;dependent: :delete_all&lt;/code&gt; 同様に、dependent：： &lt;code&gt;dependent: :destroy&lt;/code&gt; 関連付けられている場合は削除されます。</target>
        </trans-unit>
        <trans-unit id="01833b16e8925d797ee8b329aeb71e620190951f" translate="yes" xml:space="preserve">
          <source>Objects you pass in are expected to return a compliant object from a call to &lt;code&gt;to_model&lt;/code&gt;. It is perfectly fine for &lt;code&gt;to_model&lt;/code&gt; to return &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">渡したオブジェクトは、 &lt;code&gt;to_model&lt;/code&gt; の呼び出しから準拠オブジェクトを返すことが期待されています。それは完全に罰金です &lt;code&gt;to_model&lt;/code&gt; リターンに &lt;code&gt;self&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="46252b9dc1831ea83a33362e66afebb86d2829cc" translate="yes" xml:space="preserve">
          <source>Observe in the previous example that consecutive separators result in empty arrays.</source>
          <target state="translated">前の例で、連続したセパレータが空の配列になることを確認してください。</target>
        </trans-unit>
        <trans-unit id="693db33a45a855769a9f6c58107b187af35b357a" translate="yes" xml:space="preserve">
          <source>Observers give you access to the email message after it has been sent. An observer class must implement the &lt;code&gt;:delivered_email(message)&lt;/code&gt; method, which will be called after the email is sent.</source>
          <target state="translated">オブザーバーは、送信後の電子メールメッセージへのアクセスを提供します。オブザーバークラスは、メールの送信後に呼び出される &lt;code&gt;:delivered_email(message)&lt;/code&gt; メソッドを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="b7d87645b295e2af8697514a4ed7e203d9756fec" translate="yes" xml:space="preserve">
          <source>Observing Emails</source>
          <target state="translated">メールの観察</target>
        </trans-unit>
        <trans-unit id="6a768711003c1ef2dc5501f4971819a6899578df" translate="yes" xml:space="preserve">
          <source>Observing and Intercepting Mails</source>
          <target state="translated">郵便物の観察と傍受</target>
        </trans-unit>
        <trans-unit id="0aca28a7f797bbddbbd6a37fd849e0be2ba581ec" translate="yes" xml:space="preserve">
          <source>Obtain a row lock on this record. Reloads the record to obtain the requested lock. Pass an SQL locking clause to append the end of the SELECT statement or pass true for &amp;ldquo;FOR UPDATE&amp;rdquo; (the default, an exclusive row lock). Returns the locked record.</source>
          <target state="translated">このレコードの行ロックを取得します。レコードを再ロードして、要求されたロックを取得します。 SQLロッキング句を渡してSELECTステートメントの末尾を追加するか、「FOR UPDATE」（デフォルトでは排他的な行ロック）にtrueを渡します。ロックされたレコードを返します。</target>
        </trans-unit>
        <trans-unit id="6b4ae6d585a88c7d20f2576d348e9bfc2db75cee" translate="yes" xml:space="preserve">
          <source>Obtaining (checking out) a connection</source>
          <target state="translated">コネクションの取得(チェックアウト</target>
        </trans-unit>
        <trans-unit id="e58dee129363861edbe872680dfc6fe4570a8245" translate="yes" xml:space="preserve">
          <source>Obviously, you'll want to be a bit more sophisticated than that, but it's a start.</source>
          <target state="translated">明らかに、あなたはもう少し洗練されたものになりたいと思うでしょうが、それがスタートです。</target>
        </trans-unit>
        <trans-unit id="0d21c185b8ddd71aeb92646342d282b983be3fe4" translate="yes" xml:space="preserve">
          <source>Occasionally you may need to explicitly eager_load by using &lt;code&gt;Rails
.application.eager_load!&lt;/code&gt; in the setup of your tests -- this might occur if your &lt;a href=&quot;https://stackoverflow.com/questions/25796409/in-rails-how-can-i-eager-load-all-code-before-a-specific-rspec-test&quot;&gt;tests involve multithreading&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Rails .application.eager_load!&lt;/code&gt; .application.eager_loadを使用して、明示的にeager_loadが必要になる場合があります。テストの設定で-これは、&lt;a href=&quot;https://stackoverflow.com/questions/25796409/in-rails-how-can-i-eager-load-all-code-before-a-specific-rspec-test&quot;&gt;テストにマルチスレッドが含まれる&lt;/a&gt;場合に発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="175826294ba674ea84cf26b6bb6839a682114a0a" translate="yes" xml:space="preserve">
          <source>Occasionally you need to display just a single date component such as a year or a month. Rails provides a series of helpers for this, one for each component &lt;code&gt;select_year&lt;/code&gt;, &lt;code&gt;select_month&lt;/code&gt;, &lt;code&gt;select_day&lt;/code&gt;, &lt;code&gt;select_hour&lt;/code&gt;, &lt;code&gt;select_minute&lt;/code&gt;, &lt;code&gt;select_second&lt;/code&gt;. These helpers are fairly straightforward. By default they will generate an input field named after the time component (for example, &quot;year&quot; for &lt;code&gt;select_year&lt;/code&gt;, &quot;month&quot; for &lt;code&gt;select_month&lt;/code&gt; etc.) although this can be overridden with the &lt;code&gt;:field_name&lt;/code&gt; option. The &lt;code&gt;:prefix&lt;/code&gt; option works in the same way that it does for &lt;code&gt;select_date&lt;/code&gt; and &lt;code&gt;select_time&lt;/code&gt; and has the same default value.</source>
          <target state="translated">年や月などの単一の日付コンポーネントのみを表示する必要がある場合があります。 Railsはこのための一連のヘルパーを提供します。それぞれのコンポーネントごとに1つ、 &lt;code&gt;select_year&lt;/code&gt; 、 &lt;code&gt;select_month&lt;/code&gt; 、 &lt;code&gt;select_day&lt;/code&gt; 、 &lt;code&gt;select_hour&lt;/code&gt; 、 &lt;code&gt;select_minute&lt;/code&gt; 、 &lt;code&gt;select_second&lt;/code&gt; です。これらのヘルパーはかなり単純です。デフォルトでは、彼らは（のために例えば、「年」の時間コンポーネントにちなんで名付けられた入力フィールドが生成されます &lt;code&gt;select_year&lt;/code&gt; ため、「月」 &lt;code&gt;select_month&lt;/code&gt; これがで無効にすることができますが、など）を &lt;code&gt;:field_name&lt;/code&gt; オプション。 &lt;code&gt;:prefix&lt;/code&gt; オプションは、同じように機能し、それがためないこと &lt;code&gt;select_date&lt;/code&gt; と &lt;code&gt;select_time&lt;/code&gt; と同じデフォルト値を持ちます。</target>
        </trans-unit>
        <trans-unit id="3cbff9964263e47edad93b998a04c0380c6b4f06" translate="yes" xml:space="preserve">
          <source>Occasionally you will make a mistake when writing a migration. If you have already run the migration, then you cannot just edit the migration and run the migration again: Rails thinks it has already run the migration and so will do nothing when you run &lt;code&gt;bin/rails db:migrate&lt;/code&gt;. You must rollback the migration (for example with &lt;code&gt;bin/rails db:rollback&lt;/code&gt;), edit your migration, and then run &lt;code&gt;bin/rails db:migrate&lt;/code&gt; to run the corrected version.</source>
          <target state="translated">時折、移行を書くときに間違いを犯すでしょう。すでに移行を実行している場合は、移行を編集して再度移行を実行することはできません。Railsは、移行がすでに実行されていると見なすため、 &lt;code&gt;bin/rails db:migrate&lt;/code&gt; を実行しても何も実行されません。移行をロールバックし（たとえば、 &lt;code&gt;bin/rails db:rollback&lt;/code&gt; を使用）、移行を編集してから、 &lt;code&gt;bin/rails db:migrate&lt;/code&gt; を実行して修正されたバージョンを実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="ba3bbd9b2013f62289bec19ff77a0ab1e6d379ac" translate="yes" xml:space="preserve">
          <source>Occasionally you will make a mistake when writing a migration. If you have already run the migration, then you cannot just edit the migration and run the migration again: Rails thinks it has already run the migration and so will do nothing when you run &lt;code&gt;rails db:migrate&lt;/code&gt;. You must rollback the migration (for example with &lt;code&gt;rails db:rollback&lt;/code&gt;), edit your migration, and then run &lt;code&gt;rails db:migrate&lt;/code&gt; to run the corrected version.</source>
          <target state="translated">マイグレーションを書くときに、時々あなたは間違いをするでしょう。すでに移行を実行している場合、移行を編集して再度移行を実行することはできません。Railsはすでに移行を実行していると見なしているため、 &lt;code&gt;rails db:migrate&lt;/code&gt; を実行しても何も起こりません。移行をロールバックし（たとえば、 &lt;code&gt;rails db:rollback&lt;/code&gt; を使用して）、移行を編集してから、 &lt;code&gt;rails db:migrate&lt;/code&gt; を実行して修正バージョンを実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="10e792bd00a99b3e1f974aa939eaac10eb676be3" translate="yes" xml:space="preserve">
          <source>Of course, calculating timestamps is no fun, so Active Record provides a generator to handle making it for you:</source>
          <target state="translated">もちろん、タイムスタンプを計算しても面白くないので、Active Recordがジェネレータを用意してくれています。</target>
        </trans-unit>
        <trans-unit id="cc4010c4ad109e781e24b28c96b213ace81b2b52" translate="yes" xml:space="preserve">
          <source>Of course, if the application eager loads on boot, that is already accomplished. When it does not, it is in practice enough to instantiate the existing types in the database, which in development or test modes is usually fine. One way to do that is to throw this module into the &lt;code&gt;lib&lt;/code&gt; directory:</source>
          <target state="translated">もちろん、アプリケーションが起動時に熱心にロードされる場合、それはすでに達成されています。そうでない場合は、実際にはデータベースの既存の型をインスタンス化するだけで十分です。これは通常、開発モードまたはテストモードで問題ありません。これを行う1つの方法は、このモジュールを &lt;code&gt;lib&lt;/code&gt; ディレクトリにスローすることです。</target>
        </trans-unit>
        <trans-unit id="8e4b613f1200debf00104a7d9324fd9bb7922e4b" translate="yes" xml:space="preserve">
          <source>Of course, the Rails boot process also glues together all registered components. For example, the Rails boot process is what uses your &lt;code&gt;config/database.yml&lt;/code&gt; file when configuring Active Record.</source>
          <target state="translated">もちろん、Railsの起動プロセスでは、登録されているすべてのコンポーネントも接着されます。たとえば、Railsブートプロセスは、Active Recordを構成するときに &lt;code&gt;config/database.yml&lt;/code&gt; ファイルを使用するものです。</target>
        </trans-unit>
        <trans-unit id="78f92e1f3e6228f262ba831d9d821b07d9bd0ab6" translate="yes" xml:space="preserve">
          <source>Of course, the most common way of specifying a layout is still just as a plain template name:</source>
          <target state="translated">もちろん、レイアウトを指定する方法としては、やはりプレーンなテンプレート名だけで指定するのが一般的です。</target>
        </trans-unit>
        <trans-unit id="518c11a35f81fb097eea3275505af4254f7da8d6" translate="yes" xml:space="preserve">
          <source>Of course, this example is anything but elaborate and doesn't improve on the default exception handling at all, but once you can catch all those exceptions you're free to do whatever you want with them. For example, you could create custom exception classes that will be thrown when a user doesn't have access to a certain section of your application:</source>
          <target state="translated">もちろん、この例は精巧なものではありませんし、デフォルトの例外処理を全く改善するものではありませんが、いったんすべての例外をキャッチできるようになれば、それを使って何でもできるようになります。例えば、ユーザがアプリケーションの特定のセクションにアクセスできない場合にスローされるカスタム例外クラスを作成することができます。</target>
        </trans-unit>
        <trans-unit id="a33df8426a8a4b2ff3fed3a9cec145eb8ee044bb" translate="yes" xml:space="preserve">
          <source>Of course, using &lt;code&gt;require&lt;/code&gt; in autoloaded files to load ordinary 3rd party libraries is fine, and Rails is able to distinguish their constants, they are not marked as autoloaded.</source>
          <target state="translated">もちろん、オートロードされたファイルで &lt;code&gt;require&lt;/code&gt; を使用して通常のサードパーティライブラリをロードすることは問題なく、Railsはそれらの定数を区別でき、オートロードとしてマークされていません。</target>
        </trans-unit>
        <trans-unit id="ccee0e956089abbe7c4e00b4b79e0eefe175e9a6" translate="yes" xml:space="preserve">
          <source>Of course, you can also query them directly if the scopes don't fit your needs:</source>
          <target state="translated">もちろん、スコープが自分のニーズに合わない場合は、それらを直接問い合わせることもできます。</target>
        </trans-unit>
        <trans-unit id="23e9f48eed74793bb1697af713aaddf96ce9e867" translate="yes" xml:space="preserve">
          <source>Of course, you can use the more advanced constraints available in non-resourceful routes in this context.</source>
          <target state="translated">もちろん、リソースを持たないルートで利用できるより高度な制約を、この文脈で利用することもできます。</target>
        </trans-unit>
        <trans-unit id="38b952fd703726662a492bf2933dece70330fa1e" translate="yes" xml:space="preserve">
          <source>Of course, you need to take special care of the root URL (usually &quot;homepage&quot; or &quot;dashboard&quot;) of your application. A URL like &lt;code&gt;http://localhost:3001/nl&lt;/code&gt; will not work automatically, because the &lt;code&gt;root to: &quot;books#index&quot;&lt;/code&gt; declaration in your &lt;code&gt;routes.rb&lt;/code&gt; doesn't take locale into account. (And rightly so: there's only one &quot;root&quot; URL.)</source>
          <target state="translated">もちろん、アプリケーションのルートURL（通常は「ホームページ」または「ダッシュボード」）には特別な注意を払う必要があります。 &lt;code&gt;root to: &quot;books#index&quot;&lt;/code&gt; &lt;code&gt;http://localhost:3001/nl&lt;/code&gt; などのURL は、 &lt;code&gt;routes.rb&lt;/code&gt; のroot to： &quot;books＃index&quot;宣言でロケールが考慮されないため、自動的には機能しません。（そして当然のことですが、「ルート」URLは1つだけです。）</target>
        </trans-unit>
        <trans-unit id="522e1ee3f7c0d77499dec3f1d397d0900efa532e" translate="yes" xml:space="preserve">
          <source>Of course, you need to take special care of the root URL (usually &quot;homepage&quot; or &quot;dashboard&quot;) of your application. A URL like &lt;code&gt;http://localhost:3001/nl&lt;/code&gt; will not work automatically, because the &lt;code&gt;root to: &quot;dashboard#index&quot;&lt;/code&gt; declaration in your &lt;code&gt;routes.rb&lt;/code&gt; doesn't take locale into account. (And rightly so: there's only one &quot;root&quot; URL.)</source>
          <target state="translated">もちろん、アプリケーションのルートURL（通常は「ホームページ」または「ダッシュボード」）に特別な注意を払う必要があります。 &lt;code&gt;routes.rb&lt;/code&gt; のrootto &lt;code&gt;root to: &quot;dashboard#index&quot;&lt;/code&gt; 宣言はロケールを考慮していないため、 &lt;code&gt;http://localhost:3001/nl&lt;/code&gt; のようなURLは自動的に機能しません。（そして当然のことながら、「ルート」URLは1つだけです。）</target>
        </trans-unit>
        <trans-unit id="1a2dba64e87728235370f20557710affb44af9dc" translate="yes" xml:space="preserve">
          <source>Official Rack Website</source>
          <target state="translated">公式ラックサイト</target>
        </trans-unit>
        <trans-unit id="dd1d49fae73e799baf2444a358616e40cdcf62fa" translate="yes" xml:space="preserve">
          <source>Official Ruby Programming Language website</source>
          <target state="translated">Rubyプログラミング言語公式サイト</target>
        </trans-unit>
        <trans-unit id="95620979d30f60c5618328e75a5e42f4e93f415d" translate="yes" xml:space="preserve">
          <source>Often this can be simplified by passing just the name of the model object to &lt;code&gt;fields_for&lt;/code&gt; -</source>
          <target state="translated">多くの場合、モデルオブジェクトの名前だけを &lt;code&gt;fields_for&lt;/code&gt; に渡すことでこれを簡略化できます-</target>
        </trans-unit>
        <trans-unit id="dfc8dea3503f3da65ac428e919d1bcc1e3dbca07" translate="yes" xml:space="preserve">
          <source>Often, additional reloading actions need to be performed either just before or just after the Class Unload, so the Reloader also provides &lt;code&gt;before_class_unload&lt;/code&gt; and &lt;code&gt;after_class_unload&lt;/code&gt; callbacks.</source>
          <target state="translated">多くの場合、クラスのアンロードの直前または直後に追加の再読み込みアクションを実行する必要があるため、リローダーは &lt;code&gt;before_class_unload&lt;/code&gt; および &lt;code&gt;after_class_unload&lt;/code&gt; コールバックも提供します。</target>
        </trans-unit>
        <trans-unit id="ce7d9d2ca9708d829304177ad2e9e5cc2ad978ed" translate="yes" xml:space="preserve">
          <source>Often, we want to generate a set of choices in a form from a collection of objects. For example, when we want the user to choose from cities in our database, and we have a &lt;code&gt;City&lt;/code&gt; model like:</source>
          <target state="translated">多くの場合、オブジェクトのコレクションからフォームに一連の選択肢を生成する必要があります。たとえば、ユーザーにデータベース内の都市から選択してもらいたい場合、次のような &lt;code&gt;City&lt;/code&gt; モデルがあります。</target>
        </trans-unit>
        <trans-unit id="c84fafe478eddda3091745c0f9518cebab98a91f" translate="yes" xml:space="preserve">
          <source>Old Migrations</source>
          <target state="translated">オールドマイグレーション</target>
        </trans-unit>
        <trans-unit id="24bb13ed52b652c3b72cf88a37fbba09f3ebf2a2" translate="yes" xml:space="preserve">
          <source>Omitted params are not checked for a match.</source>
          <target state="translated">省略されたパラメータは、一致するかどうかチェックされません。</target>
        </trans-unit>
        <trans-unit id="241c63c8293a4785c5d54a58bad0cc5b1e258e85" translate="yes" xml:space="preserve">
          <source>On Active Record models with no &lt;code&gt;:include&lt;/code&gt; or &lt;code&gt;:exclude&lt;/code&gt; option set, it will only wrap the parameters returned by the class method &lt;code&gt;attribute_names&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:include&lt;/code&gt; または &lt;code&gt;:exclude&lt;/code&gt; オプションが設定されていないアクティブレコードモデルでは、クラスメソッド &lt;code&gt;attribute_names&lt;/code&gt; によって返されるパラメーターのみがラップされます。</target>
        </trans-unit>
        <trans-unit id="598560785c247f274acc5c4070fa99bda2929e8b" translate="yes" xml:space="preserve">
          <source>On Linux and macOS no additional gems are needed, but some are required &lt;a href=&quot;https://github.com/guard/listen#on-bsd&quot;&gt;for *BSD&lt;/a&gt; and &lt;a href=&quot;https://github.com/guard/listen#on-windows&quot;&gt;for Windows&lt;/a&gt;.</source>
          <target state="translated">LinuxおよびmacOSでは、追加のgemは必要ありませんが&lt;a href=&quot;https://github.com/guard/listen#on-bsd&quot;&gt;、* BSD&lt;/a&gt;および&lt;a href=&quot;https://github.com/guard/listen#on-windows&quot;&gt;Windowsでは&lt;/a&gt;いくつかのgemが必要です。</target>
        </trans-unit>
        <trans-unit id="cb7e9843bd82c1dece41d7312bfec068efcb57d0" translate="yes" xml:space="preserve">
          <source>On Load hooks are the API that allow you to hook into this initialization process without violating the load contract with Rails. This will also mitigate boot performance degradation and avoid conflicts.</source>
          <target state="translated">On Loadフックは、Railsとの負荷契約に違反することなく、この初期化処理にフックをかけることができるAPIです。これにより、ブートパフォーマンスの低下を緩和し、コンフリクトを回避することもできます。</target>
        </trans-unit>
        <trans-unit id="872c870642d0d9df40e9bfdbae27a194c26c0aa3" translate="yes" xml:space="preserve">
          <source>On a collection that is ordered using &lt;code&gt;order&lt;/code&gt;, &lt;code&gt;first&lt;/code&gt; will return the first record ordered by the specified attribute for &lt;code&gt;order&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;order&lt;/code&gt; を使用して順序付けられたコレクションでは、 &lt;code&gt;first&lt;/code&gt; は、 &lt;code&gt;order&lt;/code&gt; に指定された属性で順序付けされた最初のレコードを返します。</target>
        </trans-unit>
        <trans-unit id="0750b86b4eede7e1e2ca1d1769894bc80255bcf4" translate="yes" xml:space="preserve">
          <source>On a collection that is ordered using &lt;code&gt;order&lt;/code&gt;, &lt;code&gt;last&lt;/code&gt; will return the last record ordered by the specified attribute for &lt;code&gt;order&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;order&lt;/code&gt; を使用して順序付けられたコレクションでは、 &lt;code&gt;last&lt;/code&gt; は、 &lt;code&gt;order&lt;/code&gt; に指定された属性で順序付けられた最後のレコードを返します。</target>
        </trans-unit>
        <trans-unit id="5a2467f7374b9793dc3ba2d4e7642f2c8e5375ca" translate="yes" xml:space="preserve">
          <source>On a development machine you can then have your tests running with whatever is fastest (ideally &lt;code&gt;config.eager_load = false&lt;/code&gt;).</source>
          <target state="translated">開発マシンでは、テストを最速で実行することができます（理想的には &lt;code&gt;config.eager_load = false&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="a44ed84ddb9890ee1584a9f13e6252cda115659d" translate="yes" xml:space="preserve">
          <source>On databases that support transactions with statements that change the schema, migrations are wrapped in a transaction. If the database does not support this then when a migration fails the parts of it that succeeded will not be rolled back. You will have to rollback the changes that were made by hand.</source>
          <target state="translated">スキーマを変更するステートメントを持つトランザクションをサポートするデータベースでは、移行はトランザクションでラップされます。データベースがこれをサポートしていない場合、移行が失敗した場合、成功した部分はロールバックされません。手動で行われた変更をロールバックしなければなりません。</target>
        </trans-unit>
        <trans-unit id="c47764139884e82b7760d1abdd50920217d5e2f8" translate="yes" xml:space="preserve">
          <source>On initialization, the &lt;a href=&quot;activemodel&quot;&gt;&lt;code&gt;ActiveModel&lt;/code&gt;&lt;/a&gt; accepts the instance name that will receive the calls:</source>
          <target state="translated">初期化時に、&lt;a href=&quot;activemodel&quot;&gt; &lt;code&gt;ActiveModel&lt;/code&gt; &lt;/a&gt;は呼び出しを受け取るインスタンス名を受け入れます。</target>
        </trans-unit>
        <trans-unit id="4699ab936180f05f03c55b16dc89707b9176ceab" translate="yes" xml:space="preserve">
          <source>On initialization, the &lt;a href=&quot;activemodel&quot;&gt;ActiveModel&lt;/a&gt; accepts the instance name that will receive the calls:</source>
          <target state="translated">初期化時に、&lt;a href=&quot;activemodel&quot;&gt;ActiveModel&lt;/a&gt;は呼び出しを受け取るインスタンス名を受け入れます。</target>
        </trans-unit>
        <trans-unit id="3677477a5da402fcf2a3027549647c384b11c412" translate="yes" xml:space="preserve">
          <source>On pages generated by &lt;code&gt;NewsController&lt;/code&gt;, you want to hide the top menu and add a right menu:</source>
          <target state="translated">&lt;code&gt;NewsController&lt;/code&gt; によって生成されたページで、トップメニューを非表示にし、右メニューを追加します。</target>
        </trans-unit>
        <trans-unit id="e3978129c990bfbab0ce7685859285114469c81e" translate="yes" xml:space="preserve">
          <source>On reload, &lt;code&gt;MockedGateway&lt;/code&gt; is reloaded, but &lt;code&gt;$PAYMENT_GATEWAY&lt;/code&gt; is not updated because initializers only run on boot. Therefore, it won't reflect the changes.</source>
          <target state="translated">リロード時に、 &lt;code&gt;MockedGateway&lt;/code&gt; がリロードされますが、初期化子は起動時にのみ実行されるため、 &lt;code&gt;$PAYMENT_GATEWAY&lt;/code&gt; は更新されません。したがって、変更は反映されません。</target>
        </trans-unit>
        <trans-unit id="de926fabb5507cf2933e374222b53742ae1be3df" translate="yes" xml:space="preserve">
          <source>On shared hosts, Apache sometimes doesn't pass authentication headers to FCGI instances. If your environment matches this description and you cannot authenticate, try this rule in your Apache setup:</source>
          <target state="translated">共有ホストでは、Apache は認証ヘッダを FCGI インスタンスに渡さないことがあります。もしあなたの環境がこの記述にマッチしていて認証ができない場合は、 Apache の設定でこのルールを試してみてください。</target>
        </trans-unit>
        <trans-unit id="140918e50b4e7ad423def44526255934da360a32" translate="yes" xml:space="preserve">
          <source>On the contrary, if &lt;code&gt;ApplicationController&lt;/code&gt; is unknown, the constant is considered missing and an autoload is going to be attempted by Rails.</source>
          <target state="translated">逆に、 &lt;code&gt;ApplicationController&lt;/code&gt; が不明の場合、定数が欠落していると見なされ、Railsによってオートロードが試行されます。</target>
        </trans-unit>
        <trans-unit id="c30fcff3ad290c7e2077c5cfff2182462066e036" translate="yes" xml:space="preserve">
          <source>On the first request the assets are compiled and cached as outlined in &lt;a href=&quot;#assets-cache-store&quot;&gt;Assets Cache Store&lt;/a&gt;, and the manifest names used in the helpers are altered to include the SHA256 hash.</source>
          <target state="translated">最初のリクエストで、アセットは&lt;a href=&quot;#assets-cache-store&quot;&gt;アセットキャッシュストア&lt;/a&gt;で概説されているようにコンパイルおよびキャッシュされ、ヘルパーで使用されるマニフェスト名はSHA256ハッシュを含むように変更されます。</target>
        </trans-unit>
        <trans-unit id="fe29c24a5a157c6c342e90762e65fd621a7bd0ef" translate="yes" xml:space="preserve">
          <source>On the first request the assets are compiled and cached as outlined in development above, and the manifest names used in the helpers are altered to include the SHA256 hash.</source>
          <target state="translated">最初のリクエストでは、上記の開発で概説されたようにアセットがコンパイルされてキャッシュされ、ヘルパーで使用されるマニフェスト名がSHA256ハッシュを含むように変更されます。</target>
        </trans-unit>
        <trans-unit id="2678d1eb020d93b21282ea2cf8ee0358c77e86bb" translate="yes" xml:space="preserve">
          <source>On the last line of the block is a call to &lt;code&gt;t.timestamps&lt;/code&gt;. This method defines two additional columns named &lt;code&gt;created_at&lt;/code&gt; and &lt;code&gt;updated_at&lt;/code&gt;. As we will see, Rails will manage these for us, setting the values when we create or update a model object.</source>
          <target state="translated">ブロックの最後の行には、 &lt;code&gt;t.timestamps&lt;/code&gt; への呼び出しがあります。このメソッドは、 &lt;code&gt;created_at&lt;/code&gt; および &lt;code&gt;updated_at&lt;/code&gt; という名前の2つの追加の列を定義します。後で説明するように、Railsがこれらを管理し、モデルオブジェクトを作成または更新するときに値を設定します。</target>
        </trans-unit>
        <trans-unit id="1dc09fb3938a1c14c6c6718858f7b5cf8ec6c494" translate="yes" xml:space="preserve">
          <source>On the other hand, &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateTime.html#method-i-advance&quot;&gt;&lt;code&gt;advance&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateTime.html#method-i-change&quot;&gt;&lt;code&gt;change&lt;/code&gt;&lt;/a&gt; are also defined and support more options, they are documented below.</source>
          <target state="translated">一方、&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateTime.html#method-i-advance&quot;&gt; &lt;code&gt;advance&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateTime.html#method-i-change&quot;&gt; &lt;code&gt;change&lt;/code&gt; &lt;/a&gt;も定義されており、より多くのオプションをサポートしています。これらについては、以下で説明します。</target>
        </trans-unit>
        <trans-unit id="cf7885ae34fbf360b8d8a78a1dba62e8f9926afe" translate="yes" xml:space="preserve">
          <source>On the other hand, &lt;code&gt;advance&lt;/code&gt; and &lt;code&gt;change&lt;/code&gt; are also defined and support more options, they are documented below.</source>
          <target state="translated">一方、 &lt;code&gt;advance&lt;/code&gt; と &lt;code&gt;change&lt;/code&gt; も定義されており、より多くのオプションがサポートされています。これらについては、以下で説明します。</target>
        </trans-unit>
        <trans-unit id="fbb58821191368609ffb6e4a4ecef873588437b9" translate="yes" xml:space="preserve">
          <source>On the other hand, some calls need to be changed to make caching work properly. For instance, if you're passing a custom collection, you'll need to change:</source>
          <target state="translated">一方で、キャッシングを適切に動作させるためには、いくつかの呼び出しを変更する必要があります。例えば、カスタムコレクションを渡している場合は、変更する必要があります。</target>
        </trans-unit>
        <trans-unit id="93f46accb2f7cefa982f2385fd4474294bc9c94e" translate="yes" xml:space="preserve">
          <source>On the other hand, when multiple conditions define whether or not a validation should happen, an &lt;code&gt;Array&lt;/code&gt; can be used. Moreover, you can apply both &lt;code&gt;:if&lt;/code&gt; and &lt;code&gt;:unless&lt;/code&gt; to the same validation.</source>
          <target state="translated">一方、検証を行うかどうかを複数の条件で定義する場合は、 &lt;code&gt;Array&lt;/code&gt; を使用できます。さらに、同じ検証に &lt;code&gt;:if&lt;/code&gt; と &lt;code&gt;:unless&lt;/code&gt; の両方を適用できます。</target>
        </trans-unit>
        <trans-unit id="2c276557e9fbc03eb8cd74022dd70a23fd6917d1" translate="yes" xml:space="preserve">
          <source>On top of the collections, you have the complete URL that a given action redirected to available in &lt;code&gt;redirect_to_url&lt;/code&gt;.</source>
          <target state="translated">コレクションの上には、指定されたアクションがリダイレクトされる完全なURLがあり、 &lt;code&gt;redirect_to_url&lt;/code&gt; で利用できます。</target>
        </trans-unit>
        <trans-unit id="fd06efef0d17c2ad10c85691f22c4e0b376101b5" translate="yes" xml:space="preserve">
          <source>Once &lt;code&gt;config/boot.rb&lt;/code&gt; has finished, the next file that is required is &lt;code&gt;rails/commands&lt;/code&gt;, which helps in expanding aliases. In the current case, the &lt;code&gt;ARGV&lt;/code&gt; array simply contains &lt;code&gt;server&lt;/code&gt; which will be passed over:</source>
          <target state="translated">一度 &lt;code&gt;config/boot.rb&lt;/code&gt; 終了している、必要とされる次のファイルがあり &lt;code&gt;rails/commands&lt;/code&gt; エイリアスを拡大するのに役立ちます。現在のケースでは、 &lt;code&gt;ARGV&lt;/code&gt; 配列には単に渡される &lt;code&gt;server&lt;/code&gt; が含まれています。</target>
        </trans-unit>
        <trans-unit id="b7c485a6e3178c1fb597f4c90ba8fa66c72ba125" translate="yes" xml:space="preserve">
          <source>Once a &lt;a href=&quot;classmethods#method-i-composed_of&quot;&gt;&lt;code&gt;composed_of&lt;/code&gt;&lt;/a&gt; relationship is specified for a model, records can be loaded from the database by specifying an instance of the value object in the conditions hash. The following example finds all customers with &lt;code&gt;address_street&lt;/code&gt; equal to &amp;ldquo;May Street&amp;rdquo; and &lt;code&gt;address_city&lt;/code&gt; equal to &amp;ldquo;Chicago&amp;rdquo;:</source>
          <target state="translated">一旦&lt;a href=&quot;classmethods#method-i-composed_of&quot;&gt; &lt;code&gt;composed_of&lt;/code&gt; &lt;/a&gt;関係がモデルに指定され、レコードが条件ハッシュ値でオブジェクトのインスタンスを指定してデータベースからロードすることができます。次の例では、とのすべての顧客見つけ &lt;code&gt;address_street&lt;/code&gt; は「月・ストリート」に等しいと &lt;code&gt;address_city&lt;/code&gt; は「シカゴ」に等しいです：</target>
        </trans-unit>
        <trans-unit id="32abcc0a8a37ed0baf8f7b2bb77797ece6faa56f" translate="yes" xml:space="preserve">
          <source>Once a &lt;a href=&quot;classmethods#method-i-composed_of&quot;&gt;composed_of&lt;/a&gt; relationship is specified for a model, records can be loaded from the database by specifying an instance of the value object in the conditions hash. The following example finds all customers with &lt;code&gt;address_street&lt;/code&gt; equal to &amp;ldquo;May Street&amp;rdquo; and &lt;code&gt;address_city&lt;/code&gt; equal to &amp;ldquo;Chicago&amp;rdquo;:</source>
          <target state="translated">一旦&lt;a href=&quot;classmethods#method-i-composed_of&quot;&gt;composed_of&lt;/a&gt;関係がモデルに指定され、レコードが条件ハッシュ値でオブジェクトのインスタンスを指定してデータベースからロードすることができます。次の例では、 &lt;code&gt;address_street&lt;/code&gt; が「May Street」、 &lt;code&gt;address_city&lt;/code&gt; が「Chicago」のすべての顧客を検索します。</target>
        </trans-unit>
        <trans-unit id="eb700a2f08bb886db26d24fcc7aeb84fcb61bf3e" translate="yes" xml:space="preserve">
          <source>Once a file has been uploaded, there are a multitude of potential tasks, ranging from where to store the files (on Disk, Amazon S3, etc), associating them with models, resizing image files, and generating thumbnails, etc. &lt;a href=&quot;active_storage_overview&quot;&gt;Active Storage&lt;/a&gt; is designed to assist with these tasks.</source>
          <target state="translated">ファイルがアップロードされると、ファイルの保存場所（ディスク、Amazon S3など）、モデルとの関連付け、画像ファイルのサイズ変更、サムネイルの生成など、さまざまな潜在的なタスクが発生します。&lt;a href=&quot;active_storage_overview&quot;&gt;アクティブストレージ&lt;/a&gt;はこれらのタスクを支援するように設計されています。</target>
        </trans-unit>
        <trans-unit id="9ae845b5ac74396339357b98d0fbe2f8795db5fa" translate="yes" xml:space="preserve">
          <source>Once a mailer action and template are defined, you can deliver your message or defer its creation and delivery for later:</source>
          <target state="translated">メーラーアクションとテンプレートを定義したら、メッセージを配信したり、その作成と配信を後回しにしたりすることができます。</target>
        </trans-unit>
        <trans-unit id="b684bfa426d4701425f18ff80e07c01638bd0c35" translate="yes" xml:space="preserve">
          <source>Once an Active Record object has been retrieved, its attributes can be modified and it can be saved to the database.</source>
          <target state="translated">アクティブレコードオブジェクトを取得すると、その属性を変更したり、データベースに保存したりすることができます。</target>
        </trans-unit>
        <trans-unit id="9f0fb844d06a05cbbf389493b98ebd0a77466fc8" translate="yes" xml:space="preserve">
          <source>Once our chunk of behavior starts pushing the scroll-to-understand-it boundary, we give in and move it to a separate file. At this size, the increased overhead can be a reasonable tradeoff even if it reduces our at-a-glance perception of how things work.</source>
          <target state="translated">ビヘイビアの塊がスクロールして理解する境界線を超え始めたら、私たちはそれに屈して別のファイルに移動します。このサイズでは、オーバーヘッドの増加は、物事がどのように動作するのかを一目で理解することができなくなったとしても、合理的なトレードオフになります。</target>
        </trans-unit>
        <trans-unit id="9d6f741183f1515d1f5d59eb9b0930fde6a4d1c6" translate="yes" xml:space="preserve">
          <source>Once the &lt;code&gt;InboundEmail&lt;/code&gt; has reached the status of being either &lt;code&gt;delivered&lt;/code&gt;, &lt;code&gt;failed&lt;/code&gt;, or &lt;code&gt;bounced&lt;/code&gt;, it'll count as having been &lt;code&gt;#processed?&lt;/code&gt;. Once processed, the &lt;code&gt;InboundEmail&lt;/code&gt; will be scheduled for automatic incineration at a later point.</source>
          <target state="translated">&lt;code&gt;InboundEmail&lt;/code&gt; が &lt;code&gt;delivered&lt;/code&gt; 、 &lt;code&gt;failed&lt;/code&gt; 、または &lt;code&gt;bounced&lt;/code&gt; いずれかのステータスに達すると、＃processedとしてカウントされ &lt;code&gt;#processed?&lt;/code&gt; 。処理されると、 &lt;code&gt;InboundEmail&lt;/code&gt; は後で自動焼却するようにスケジュールされます。</target>
        </trans-unit>
        <trans-unit id="3aaa0edd16747144273d0ecd37353ec152bf6c37" translate="yes" xml:space="preserve">
          <source>Once users with SHA1 digested signed cookies should no longer have a chance to have their cookies rewritten, remove the rotation.</source>
          <target state="translated">SHA1を消化した署名付きクッキーを持つユーザーは、もはやクッキーを書き換えてもらう機会がないはずなので、ローテーションを削除します。</target>
        </trans-unit>
        <trans-unit id="281c76c1b19423718ff2464b5623c5a6fb716258" translate="yes" xml:space="preserve">
          <source>Once we have made the new comment, we send the user back to the original article using the &lt;code&gt;article_path(@article)&lt;/code&gt; helper. As we have already seen, this calls the &lt;code&gt;show&lt;/code&gt; action of the &lt;code&gt;ArticlesController&lt;/code&gt; which in turn renders the &lt;code&gt;show.html.erb&lt;/code&gt; template. This is where we want the comment to show, so let's add that to the &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt;.</source>
          <target state="translated">新しいコメントを作成したら、 &lt;code&gt;article_path(@article)&lt;/code&gt; ヘルパーを使用してユーザーを元の記事に戻します。すでに見てきたように、これは &lt;code&gt;ArticlesController&lt;/code&gt; の &lt;code&gt;show&lt;/code&gt; アクションを呼び出し、次に &lt;code&gt;show.html.erb&lt;/code&gt; テンプレートをレンダリングします。ここにコメントを表示したいので、 &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; に追加しましょう。</target>
        </trans-unit>
        <trans-unit id="bb223775171386c6c0a22f5de44dc3f9db8c2839" translate="yes" xml:space="preserve">
          <source>Once you have configured your server and your CDN when you serve a webpage that has an asset:</source>
          <target state="translated">一度、あなたが資産を持っているウェブページを提供するときにあなたのサーバーとあなたのCDNを設定しています。</target>
        </trans-unit>
        <trans-unit id="e3b19612cb485d184e45f8395a5657419dbf087f" translate="yes" xml:space="preserve">
          <source>Once you have created your migration using one of the generators it's time to get to work!</source>
          <target state="translated">ジェネレーターのいずれかを使用して移行を作成したら、いよいよ作業に取り掛かりましょう。</target>
        </trans-unit>
        <trans-unit id="fe8af5f46a77f239597c4362061aa7aecb214d4a" translate="yes" xml:space="preserve">
          <source>Once you have this unique index, attempting to add the article to a person twice will raise an &lt;code&gt;ActiveRecord::RecordNotUnique&lt;/code&gt; error:</source>
          <target state="translated">この一意のインデックスを取得したら、記事を人物に2回追加しようとすると、 &lt;code&gt;ActiveRecord::RecordNotUnique&lt;/code&gt; エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="05e500386e8888e50bcaafff45919de6c32f66f2" translate="yes" xml:space="preserve">
          <source>Once you've configured the application server, you must proxy requests to it by configuring your web server appropriately. For example your NGINX config may include:</source>
          <target state="translated">アプリケーションサーバを設定したら、Webサーバを適切に設定してアプリケーションサーバにリクエストをプロキシする必要があります。例えば、NGINX の設定には次のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="76d9ad0fe6675cc2a1a974cc2bfe7c1f295677c2" translate="yes" xml:space="preserve">
          <source>Once you've created a model and added validations, if that model is created via a web form, you probably want to display an error message when one of the validations fail.</source>
          <target state="translated">モデルを作成してバリデーションを追加した後、そのモデルがWebフォームから作成された場合、バリデーションが失敗したときにエラーメッセージを表示したいと思うでしょう。</target>
        </trans-unit>
        <trans-unit id="664bf9ff587f9b7229629113c738857030c6de27" translate="yes" xml:space="preserve">
          <source>Once your README is solid, go through and add rdoc comments to all of the methods that developers will use. It's also customary to add &lt;code&gt;#:nodoc:&lt;/code&gt; comments to those parts of the code that are not included in the public API.</source>
          <target state="translated">READMEが完成したら、開発者が使用するすべてのメソッドにrdocコメントを追加します。パブリックAPIに含まれていないコードの部分に &lt;code&gt;#:nodoc:&lt;/code&gt; コメントを追加することも慣例です。</target>
        </trans-unit>
        <trans-unit id="7cdd6eb4ac963f5c83d7049e92388c653554b164" translate="yes" xml:space="preserve">
          <source>Once your comments are good to go, navigate to your plugin directory and run:</source>
          <target state="translated">コメントを作成したら、プラグインのディレクトリに移動して実行してください。</target>
        </trans-unit>
        <trans-unit id="06b89364f39a831c161354043334591a09417103" translate="yes" xml:space="preserve">
          <source>Once your plugin is stable and you are ready to deploy, do everyone else a favor and document it! Luckily, writing documentation for your plugin is easy.</source>
          <target state="translated">プラグインが安定してデプロイの準備ができたら、他の人のためにドキュメントを作成しましょう! 幸いにも、プラグインのドキュメントを書くのは簡単です。</target>
        </trans-unit>
        <trans-unit id="60cd3e1b38563fd269488b075cfb5c9ad562a629" translate="yes" xml:space="preserve">
          <source>One article can have many comments.</source>
          <target state="translated">1つの記事にたくさんのコメントをつけることができます。</target>
        </trans-unit>
        <trans-unit id="5c46ab4cd5b6744ee339c80d8a6f96dc75c460ad" translate="yes" xml:space="preserve">
          <source>One can additionally pass a hash as an argument to unscope specific &lt;code&gt;:where&lt;/code&gt; values. This is done by passing a hash with a single key-value pair. The key should be &lt;code&gt;:where&lt;/code&gt; and the value should be the where value to unscope. For example:</source>
          <target state="translated">さらに、特定の &lt;code&gt;:where&lt;/code&gt; 値をunscopeする引数としてハッシュを渡すことができます。これは、単一のキーと値のペアを持つハッシュを渡すことによって行われます。キーは &lt;code&gt;:where&lt;/code&gt; で、値はスコープを解除するwhere値である必要があります。例えば：</target>
        </trans-unit>
        <trans-unit id="4930c9beef86b19c8b6f488e0dbc23b3e8f631e4" translate="yes" xml:space="preserve">
          <source>One common task is to inspect the contents of a variable. Rails provides three different ways to do this:</source>
          <target state="translated">一般的なタスクの1つに、変数の内容を検査するというものがあります。Railsはこれを行うための3つの方法を提供しています。</target>
        </trans-unit>
        <trans-unit id="e459071ea49b553ce1ea05c61b3cf666f45e7e9e" translate="yes" xml:space="preserve">
          <source>One could think about doing some &lt;a href=&quot;#require-dependency&quot;&gt;&lt;code&gt;require_dependency&lt;/code&gt;&lt;/a&gt; calls in an initializer to make sure certain constants are loaded upfront, for example as an attempt to address the &lt;a href=&quot;#autoloading-and-sti&quot;&gt;gotcha with STIs&lt;/a&gt;.</source>
          <target state="translated">一つは、いくつかのことについて考えることができ&lt;a href=&quot;#require-dependency&quot;&gt; &lt;code&gt;require_dependency&lt;/code&gt; の&lt;/a&gt;一定の定数が対処しようとする試みとして、例えば先行し、ロードされていることを確認するために初期化中のコールを&lt;a href=&quot;#autoloading-and-sti&quot;&gt;性感染症とガッチャを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ed948b58a36bf16e3900d341f4b7a15b389baad5" translate="yes" xml:space="preserve">
          <source>One exception is the &lt;a href=&quot;../rollback&quot;&gt;&lt;code&gt;ActiveRecord::Rollback&lt;/code&gt;&lt;/a&gt; exception, which will trigger a ROLLBACK when raised, but not be re-raised by the transaction block.</source>
          <target state="translated">1つの例外は、&lt;a href=&quot;../rollback&quot;&gt; &lt;code&gt;ActiveRecord::Rollback&lt;/code&gt; &lt;/a&gt;例外です。これは、発生するとROLLBACKをトリガーしますが、トランザクションブロックによって再発生することはありません。</target>
        </trans-unit>
        <trans-unit id="cc22f527fe95efb8d4c108c9990bb666b0e1b55d" translate="yes" xml:space="preserve">
          <source>One exception is the &lt;a href=&quot;../rollback&quot;&gt;ActiveRecord::Rollback&lt;/a&gt; exception, which will trigger a ROLLBACK when raised, but not be re-raised by the transaction block.</source>
          <target state="translated">1つの例外は&lt;a href=&quot;../rollback&quot;&gt;ActiveRecord :: Rollback&lt;/a&gt;例外です。これは、発生したときにROLLBACKをトリガーしますが、トランザクションブロックによって再発生することはありません。</target>
        </trans-unit>
        <trans-unit id="470be94c0a730bbafb8f17dd2546bbba150b60bf" translate="yes" xml:space="preserve">
          <source>One final thing is that the &lt;code&gt;articles&lt;/code&gt; resource for this engine should be the root of the engine. Whenever someone goes to the root path where the engine is mounted, they should be shown a list of articles. This can be made to happen if this line is inserted into the &lt;code&gt;config/routes.rb&lt;/code&gt; file inside the engine:</source>
          <target state="translated">最後に、このエンジンの &lt;code&gt;articles&lt;/code&gt; リソースはエンジンのルートである必要があります。エンジンがマウントされているルートパスに誰かが行くたびに、記事のリストが表示されます。これは、この行がエンジン内の &lt;code&gt;config/routes.rb&lt;/code&gt; ファイルに挿入されている場合に発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="a0402b4436a00e695f872e750277a2c085d1e020" translate="yes" xml:space="preserve">
          <source>One important caveat is that &lt;code&gt;default_scope&lt;/code&gt; will be prepended in &lt;code&gt;scope&lt;/code&gt; and &lt;code&gt;where&lt;/code&gt; conditions.</source>
          <target state="translated">重要な注意点の1つは、 &lt;code&gt;default_scope&lt;/code&gt; が &lt;code&gt;scope&lt;/code&gt; と &lt;code&gt;where&lt;/code&gt; 条件の先頭に追加されることです。</target>
        </trans-unit>
        <trans-unit id="246e3b48455f1d814518444a63e1c43b2a9f76d1" translate="yes" xml:space="preserve">
          <source>One key consideration for successfully internationalizing an application is to avoid making incorrect assumptions about grammar rules when abstracting localized code. Grammar rules that seem fundamental in one locale may not hold true in another one.</source>
          <target state="translated">アプリケーションの国際化を成功させるための重要な考慮点の一つは、ローカライズされたコードを抽象化する際に、文法ルールについて間違った仮定をしないようにすることです。あるロケールでは基本的と思われる文法ルールが、別のロケールでは通用しないことがあります。</target>
        </trans-unit>
        <trans-unit id="f46bc5971c53449743e1084790d667e812021e1a" translate="yes" xml:space="preserve">
          <source>One last feature about generators which is quite useful for plugin generators is fallbacks. For example, imagine that you want to add a feature on top of TestUnit like &lt;a href=&quot;https://github.com/thoughtbot/shoulda&quot;&gt;shoulda&lt;/a&gt; does. Since TestUnit already implements all generators required by Rails and shoulda just wants to overwrite part of it, there is no need for shoulda to reimplement some generators again, it can simply tell Rails to use a &lt;code&gt;TestUnit&lt;/code&gt; generator if none was found under the &lt;code&gt;Shoulda&lt;/code&gt; namespace.</source>
          <target state="translated">プラグインジェネレーターに非常に役立つジェネレーターに関する最後の機能の1つは、フォールバックです。たとえば、あなたのようTestUnitの上に機能を追加することを想像し&lt;a href=&quot;https://github.com/thoughtbot/shoulda&quot;&gt;shouldaは&lt;/a&gt;ありません。TestUnitはすでにRailsが必要とするすべてのジェネレーターを実装しており、shouldaはその一部を上書きしたいだけなので、shouldaが一部のジェネレーターを再実装する必要はありません &lt;code&gt;Shoulda&lt;/code&gt; ネームスペースに何も見つからなかった場合に、Railsに &lt;code&gt;TestUnit&lt;/code&gt; ジェネレーターを使用するように指示するだけです。</target>
        </trans-unit>
        <trans-unit id="5e7d88f87768ec37728cb502a78042ec7cf07282" translate="yes" xml:space="preserve">
          <source>One more example: Calling the &lt;code&gt;:create&lt;/code&gt; action to create a new article, passing in text for the &lt;code&gt;title&lt;/code&gt; in &lt;code&gt;params&lt;/code&gt;, as JSON request:</source>
          <target state="translated">もう一つの例：コール &lt;code&gt;:create&lt;/code&gt; するためのテキストを渡し、新しい記事を作成するためのアクションを &lt;code&gt;title&lt;/code&gt; 内 &lt;code&gt;params&lt;/code&gt; JSON要求として、：</target>
        </trans-unit>
        <trans-unit id="f76431a8dde340b2752187d0362cbab4d1a2a066" translate="yes" xml:space="preserve">
          <source>One of the most basic forms you see on the web is a search form. This form contains:</source>
          <target state="translated">ウェブ上で見る最も基本的なフォームの一つが検索フォームです。このフォームには以下のものが含まれています。</target>
        </trans-unit>
        <trans-unit id="5c95f415ebc17087356f0093b18162c4379df3d6" translate="yes" xml:space="preserve">
          <source>One of the most common jobs in a modern web application is sending emails outside of the request-response cycle, so the user doesn't have to wait on it. Active Job is integrated with Action Mailer so you can easily send emails asynchronously:</source>
          <target state="translated">最近のWebアプリケーションで最も一般的な仕事の1つは、ユーザーがそれを待つ必要がないように、リクエスト-レスポンスサイクルの外側に電子メールを送信することです。Active JobはAction Mailerと統合されているので、簡単に非同期でメールを送信することができます。</target>
        </trans-unit>
        <trans-unit id="3a82e02c89534b4ce708fde1e165b76a228bb4c9" translate="yes" xml:space="preserve">
          <source>One of the options for compressing CSS is YUI. The &lt;a href=&quot;https://yui.github.io/yuicompressor/css.html&quot;&gt;YUI CSS compressor&lt;/a&gt; provides minification.</source>
          <target state="translated">CSSを圧縮するためのオプションの1つはYUIです。&lt;a href=&quot;https://yui.github.io/yuicompressor/css.html&quot;&gt;YUI CSS圧縮機は&lt;/a&gt;縮小を提供します。</target>
        </trans-unit>
        <trans-unit id="a4251f3c32016070331a0f392559cfb61e10e484" translate="yes" xml:space="preserve">
          <source>One option you have is to set the locale from the domain name where your application runs. For example, we want &lt;code&gt;www.example.com&lt;/code&gt; to load the English (or default) locale, and &lt;code&gt;www.example.es&lt;/code&gt; to load the Spanish locale. Thus the &lt;em&gt;top-level domain name&lt;/em&gt; is used for locale setting. This has several advantages:</source>
          <target state="translated">選択肢の1つは、アプリケーションを実行するドメイン名からロケールを設定することです。たとえば、 &lt;code&gt;www.example.com&lt;/code&gt; は英語（またはデフォルト）のロケールをロードし、 &lt;code&gt;www.example.es&lt;/code&gt; はスペイン語のロケールをロードします。したがって、&lt;em&gt;トップレベルドメイン名&lt;/em&gt;がロケール設定に使用されます。これにはいくつかの利点があります。</target>
        </trans-unit>
        <trans-unit id="64fc2fa5bac989aa066db43eaa04574b09961fcd" translate="yes" xml:space="preserve">
          <source>One possibility is to set the expiry time-stamp of the cookie with the session ID. However the client can edit cookies that are stored in the web browser so expiring sessions on the server is safer. Here is an example of how to &lt;em&gt;expire sessions in a database table&lt;/em&gt;. Call &lt;code&gt;Session.sweep(&quot;20 minutes&quot;)&lt;/code&gt; to expire sessions that were used longer than 20 minutes ago.</source>
          <target state="translated">1つの可能性は、セッションIDを使用してCookieの有効期限タイムスタンプを設定することです。ただし、クライアントはWebブラウザに保存されているCookieを編集できるため、サーバーでのセッションの期限切れがより安全です。以下は、&lt;em&gt;データベーステーブルのセッション&lt;/em&gt;を&lt;em&gt;期限切れ&lt;/em&gt;にする方法の例です。 &lt;code&gt;Session.sweep(&quot;20 minutes&quot;)&lt;/code&gt; を呼び出して、20分以上前に使用されたセッションを期限切れにします。</target>
        </trans-unit>
        <trans-unit id="68b0cd63505ae7d2b6a8ce1dba053ca4c7b65211" translate="yes" xml:space="preserve">
          <source>One real use case example would be to rotate a basic auth credentials:</source>
          <target state="translated">実際の使用例としては、基本的な認証情報を回転させることが考えられます。</target>
        </trans-unit>
        <trans-unit id="fca890416fb094b3ddfd3cf8fb7b195c7d30af1f" translate="yes" xml:space="preserve">
          <source>One reason you may wish to call this method explicitly is between queries that ask the database to randomize results. Otherwise the cache would see the same SQL query and repeatedly return the same result each time, silently undermining the randomness you were expecting.</source>
          <target state="translated">このメソッドを明示的に呼び出したい理由の一つは、データベースに結果のランダム化を要求するクエリの間にあるかもしれません。そうでなければ、キャッシュは同じ SQL クエリを見て、毎回同じ結果を繰り返し返し、あなたが期待していたランダム性を黙って損なうことになります。</target>
        </trans-unit>
        <trans-unit id="1061b56869ce9ecfe7b946f0d5d4545fb2d2e66c" translate="yes" xml:space="preserve">
          <source>One should restart the entire transaction if an &lt;a href=&quot;../statementinvalid&quot;&gt;&lt;code&gt;ActiveRecord::StatementInvalid&lt;/code&gt;&lt;/a&gt; occurred.</source>
          <target state="translated">&lt;a href=&quot;../statementinvalid&quot;&gt; &lt;code&gt;ActiveRecord::StatementInvalid&lt;/code&gt; &lt;/a&gt;が発生した場合は、トランザクション全体を再開する必要があります。</target>
        </trans-unit>
        <trans-unit id="f09ce296cc38437a13514732993c15e3e11a75f8" translate="yes" xml:space="preserve">
          <source>One should restart the entire transaction if an &lt;a href=&quot;../statementinvalid&quot;&gt;ActiveRecord::StatementInvalid&lt;/a&gt; occurred.</source>
          <target state="translated">&lt;a href=&quot;../statementinvalid&quot;&gt;ActiveRecord :: StatementInvalid&lt;/a&gt;が発生した場合は、トランザクション全体を再開する必要があります。</target>
        </trans-unit>
        <trans-unit id="88484856dcbc8c0609510a8e6e9274137c98f286" translate="yes" xml:space="preserve">
          <source>One such application server you can use is &lt;a href=&quot;https://bogomips.org/unicorn/&quot;&gt;Unicorn&lt;/a&gt; to run behind a reverse proxy.</source>
          <target state="translated">使用できるそのようなアプリケーションサーバーの1つは、リバースプロキシの背後で実行する&lt;a href=&quot;https://bogomips.org/unicorn/&quot;&gt;Unicorn&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="e37bddf42c0d0970c5b853c0883f240cfcd7e97c" translate="yes" xml:space="preserve">
          <source>One way to avoid deep nesting (as recommended above) is to generate the collection actions scoped under the parent, so as to get a sense of the hierarchy, but to not nest the member actions. In other words, to only build routes with the minimal amount of information to uniquely identify the resource, like this:</source>
          <target state="translated">(上記で推奨されているように)ディープネストを避ける方法の1つは、階層の感覚を得るために親の下にスコープされたコレクションアクションを生成することですが、メンバーアクションをネストしないようにすることです。言い換えれば、このようにリソースを一意に識別するための最小限の情報量でのみルートを構築するということです。</target>
        </trans-unit>
        <trans-unit id="430a9e43756de70083d399ed83ba156a19e29b44" translate="yes" xml:space="preserve">
          <source>One way to avoid this is to &lt;code&gt;unscope&lt;/code&gt; the includes:</source>
          <target state="translated">これを回避する1つの方法は、 &lt;code&gt;unscope&lt;/code&gt; を解除することです。</target>
        </trans-unit>
        <trans-unit id="a4925d61b004a9041a23947e53a1641d645c142e" translate="yes" xml:space="preserve">
          <source>One way to check the headers are cached properly in your CDN is by using &lt;a href=&quot;https://explainshell.com/explain?cmd=curl+-I+http%3A%2F%2Fwww.example.com&quot;&gt;curl&lt;/a&gt;. You can request the headers from both your server and your CDN to verify they are the same:</source>
          <target state="translated">ヘッダーがCDNに正しくキャッシュされていることを確認する1つの方法は、&lt;a href=&quot;https://explainshell.com/explain?cmd=curl+-I+http%3A%2F%2Fwww.example.com&quot;&gt;curl&lt;/a&gt;を使用することです。サーバーとCDNの両方にヘッダーをリクエストして、ヘッダーが同じであることを確認できます。</target>
        </trans-unit>
        <trans-unit id="86d261fa582670a8e042e910d33f5f376cfb98bf" translate="yes" xml:space="preserve">
          <source>One way to use partials is to treat them as the equivalent of subroutines: as a way to move details out of a view so that you can grasp what's going on more easily. For example, you might have a view that looked like this:</source>
          <target state="translated">部分式を使う方法の一つとして、部分式をサブルーチンに相当するものとして扱うことがあります。例えば、次のようなビューがあるとします。</target>
        </trans-unit>
        <trans-unit id="10c415290a3667c6831ad121a2104951591264e2" translate="yes" xml:space="preserve">
          <source>One way to use partials is to treat them as the equivalent of subroutines; a way to move details out of a view so that you can grasp what's going on more easily. For example, you might have a view that looks like this:</source>
          <target state="translated">部分式を使う方法の一つとして、部分式をサブルーチンに相当するものとして扱うことがあります。例えば、次のようなビューがあるとします。</target>
        </trans-unit>
        <trans-unit id="964ce9a18a0f2d237ce83f269c1ef2f591a32a27" translate="yes" xml:space="preserve">
          <source>One-to-many</source>
          <target state="translated">One-to-many</target>
        </trans-unit>
        <trans-unit id="dfba1b36f2cfd7ce46bc5a8cfbc0d7290fb9c82e" translate="yes" xml:space="preserve">
          <source>One-to-many Example</source>
          <target state="translated">一対多の例</target>
        </trans-unit>
        <trans-unit id="261f46f06dea79f5ef7997cf1cc6cb23aeabfbd2" translate="yes" xml:space="preserve">
          <source>One-to-one</source>
          <target state="translated">One-to-one</target>
        </trans-unit>
        <trans-unit id="19832bb6d166dd4f18d0ac476a6edbfe61d74927" translate="yes" xml:space="preserve">
          <source>One-to-one Example</source>
          <target state="translated">一対一の例</target>
        </trans-unit>
        <trans-unit id="bd135e9223295b1a34af00dc168625632ddce4ef" translate="yes" xml:space="preserve">
          <source>One-to-one associations</source>
          <target state="translated">一対一の関係</target>
        </trans-unit>
        <trans-unit id="d88f2fb493481e9ef2424236dfa3c3110a1024a0" translate="yes" xml:space="preserve">
          <source>Only GET and HEAD requests are served. POST and other HTTP methods are handed off to the main app.</source>
          <target state="translated">GETとHEADリクエストのみが処理されます。POSTやその他のHTTPメソッドは、メインアプリに渡されます。</target>
        </trans-unit>
        <trans-unit id="33cf6a3be534018b9353cc94282a82862a2fa988" translate="yes" xml:space="preserve">
          <source>Only bug fixes, no API changes, no new features. Except as necessary for security fixes.</source>
          <target state="translated">バグ修正のみで、APIの変更や新機能はありません。セキュリティ修正のために必要な場合を除きます。</target>
        </trans-unit>
        <trans-unit id="d34302dff8ebb28f6311974ae0500fbaf9ce0fa8" translate="yes" xml:space="preserve">
          <source>Only displays the screenshot path. This is the default value.</source>
          <target state="translated">スクリーンショットのパスのみを表示します。これはデフォルト値です。</target>
        </trans-unit>
        <trans-unit id="742072d9be1eda7528ca794b5657d960ee0b2371" translate="yes" xml:space="preserve">
          <source>Only equality, range, and subset checking are possible with Hash conditions.</source>
          <target state="translated">ハッシュ条件で可能なのは、等号、範囲、部分集合のチェックのみです。</target>
        </trans-unit>
        <trans-unit id="35ff5e0d2029e0e75fc3fc44ee87d6b8c8264d5a" translate="yes" xml:space="preserve">
          <source>Only files in the root directory are served; path traversal is denied.</source>
          <target state="translated">ルートディレクトリ内のファイルのみが提供されます。</target>
        </trans-unit>
        <trans-unit id="8ea92c339437a1c8e9e5808873fb7ac4143f27fa" translate="yes" xml:space="preserve">
          <source>Only generate routes for the given actions.</source>
          <target state="translated">指定されたアクションのルートのみを生成します。</target>
        </trans-unit>
        <trans-unit id="ca99a5d2669d6851ee378f86d51ad62b685bfa3c" translate="yes" xml:space="preserve">
          <source>Only long-running &quot;top level&quot; processes should invoke the Reloader, because if it determines a reload is needed, it will block until all other threads have completed any Executor invocations.</source>
          <target state="translated">リロードが必要だと判断した場合、他のすべてのスレッドが Executor の呼び出しを完了するまでブロックされてしまうからです。</target>
        </trans-unit>
        <trans-unit id="307f86dd0241c519ac2a2916c2c14365af45ecd6" translate="yes" xml:space="preserve">
          <source>Only one console can be rendered per request. Otherwise &lt;code&gt;web-console&lt;/code&gt; will raise an error on the second &lt;code&gt;console&lt;/code&gt; invocation.</source>
          <target state="translated">リクエストごとにレンダリングできるコンソールは1つだけです。そうでない場合、 &lt;code&gt;web-console&lt;/code&gt; は2番目の &lt;code&gt;console&lt;/code&gt; 呼び出しでエラーを発生させます。</target>
        </trans-unit>
        <trans-unit id="2e46e99ce898fa5c16055d4175c91c423d5eb141" translate="yes" xml:space="preserve">
          <source>Only one thread may load or unload at a time, and to do either, it must wait until no other threads are running application code. If a thread is waiting to perform a load, it doesn't prevent other threads from loading (in fact, they'll cooperate, and each perform their queued load in turn, before all resuming running together).</source>
          <target state="translated">一度に一つのスレッドだけがロードまたはアンロードを行うことができ、どちらかを行うためには、他のスレッドがアプリケーションコードを実行していなくなるまで待たなければなりません。あるスレッドがロードを実行するのを待っている場合、他のスレッドがロードするのを妨げることはありません (実際には、それらのスレッドは協力して、それぞれが順番にキューに入れられたロードを実行してから、すべてのスレッドが一緒に実行を再開します)。</target>
        </trans-unit>
        <trans-unit id="c0ef82ab895b3dc529ae273b0f6382d3b4a29356" translate="yes" xml:space="preserve">
          <source>Only permitted scalars pass the filter. For example, given</source>
          <target state="translated">許可されたスカラのみがフィルタを通過します。例えば</target>
        </trans-unit>
        <trans-unit id="b9344c8916cbe73a1ce3670d6a11a8abeb404e3a" translate="yes" xml:space="preserve">
          <source>Only public methods are callable as actions. It is a best practice to lower the visibility of methods (with &lt;code&gt;private&lt;/code&gt; or &lt;code&gt;protected&lt;/code&gt;) which are not intended to be actions, like auxiliary methods or filters.</source>
          <target state="translated">アクションとして呼び出すことができるのはpublicメソッドのみです。補助メソッドやフィルターなど、アクションを目的としていないメソッド（ &lt;code&gt;private&lt;/code&gt; または &lt;code&gt;protected&lt;/code&gt; を使用）の可視性を低くすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="d8ab6c3748240960e305c2097c949a0547062fd6" translate="yes" xml:space="preserve">
          <source>Only supplied params will be matched.</source>
          <target state="translated">指定されたパラメータのみがマッチします。</target>
        </trans-unit>
        <trans-unit id="380e223700816b88abe0b7deb99ebafb3ebebb51" translate="yes" xml:space="preserve">
          <source>Only supported on the &lt;code&gt;MySQL&lt;/code&gt; and PostgreSQL adapter, ignored elsewhere.</source>
          <target state="translated">&lt;code&gt;MySQL&lt;/code&gt; およびPostgreSQLアダプターでのみサポートされ、他の場所では無視されます。</target>
        </trans-unit>
        <trans-unit id="41e93b5d895bc12656b7b6de1a04216e25563fc5" translate="yes" xml:space="preserve">
          <source>Only supported on the MySQL and PostgreSQL adapter, ignored elsewhere.</source>
          <target state="translated">MySQL および PostgreSQL アダプタでのみサポートされており、他の場所では無視されます。</target>
        </trans-unit>
        <trans-unit id="7108ad7c547043fec67334a0fc4cd6553fa6d275" translate="yes" xml:space="preserve">
          <source>Only the &lt;code&gt;optgroup&lt;/code&gt; and &lt;code&gt;option&lt;/code&gt; tags are returned, so you still have to wrap the output in an appropriate &lt;code&gt;select&lt;/code&gt; tag.</source>
          <target state="translated">&lt;code&gt;optgroup&lt;/code&gt; および &lt;code&gt;option&lt;/code&gt; タグのみが返されるため、出力を適切な &lt;code&gt;select&lt;/code&gt; タグでラップする必要があります。</target>
        </trans-unit>
        <trans-unit id="22c30b7d7ef2840e2f43312cf613f3a108641d2a" translate="yes" xml:space="preserve">
          <source>Only the &lt;code&gt;option&lt;/code&gt; tags are returned, you have to wrap this call in a regular HTML &lt;code&gt;select&lt;/code&gt; tag.</source>
          <target state="translated">&lt;code&gt;option&lt;/code&gt; タグのみが返され &lt;code&gt;select&lt;/code&gt; 。この呼び出しを通常のHTML 選択タグでラップする必要があります。</target>
        </trans-unit>
        <trans-unit id="36c97789a02eb54c6346a54b044513164e1d31d2" translate="yes" xml:space="preserve">
          <source>Only the directory notation is supported. Specifying the controller with Ruby constant notation (e.g. &lt;code&gt;controller: 'Admin::UserPermissions'&lt;/code&gt;) can lead to routing problems and results in a warning.</source>
          <target state="translated">ディレクトリ表記のみがサポートされています。Ruby定数表記でコントローラーを指定すると（例： &lt;code&gt;controller: 'Admin::UserPermissions'&lt;/code&gt; ）、ルーティングの問題が発生し、警告が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="f293a9b728eca5c422b1c90cc270c6c7c359207c" translate="yes" xml:space="preserve">
          <source>Only the directory notation is supported. Specifying the controller with Ruby constant notation (eg. &lt;code&gt;controller: 'Admin::UserPermissions'&lt;/code&gt;) can lead to routing problems and results in a warning.</source>
          <target state="translated">ディレクトリ表記のみがサポートされています。Ruby定数表記でコントローラーを指定すると（例 &lt;code&gt;controller: 'Admin::UserPermissions'&lt;/code&gt; ）、ルーティングの問題が発生し、警告が表示される可能性があります。</target>
        </trans-unit>
        <trans-unit id="b5e66c7fa1859400ed2d95ed4cac3113bddf009f" translate="yes" xml:space="preserve">
          <source>Only the latest release series will receive bug fixes. When enough bugs are fixed and its deemed worthy to release a new gem, this is the branch it happens from.</source>
          <target state="translated">最新のリリースシリーズのみバグフィックスが行われます。十分なバグが修正され、新しいジェムをリリースする価値があると判断された場合は、このブランチで行われます。</target>
        </trans-unit>
        <trans-unit id="7d4ced645bf45d22038b24432f2481e5ff66d1f6" translate="yes" xml:space="preserve">
          <source>Only useful if the &lt;code&gt;:autosave&lt;/code&gt; option on the parent is enabled for this associated model.</source>
          <target state="translated">この関連モデルで親の &lt;code&gt;:autosave&lt;/code&gt; オプションが有効になっている場合にのみ役立ちます。</target>
        </trans-unit>
        <trans-unit id="d3a44af13cbb71470ce7f94311d2355d7c2907d1" translate="yes" xml:space="preserve">
          <source>Opaque based on digest of secret key</source>
          <target state="translated">秘密鍵のダイジェストに基づく不透明</target>
        </trans-unit>
        <trans-unit id="9dcd96383cc8de5fbb7b0490f160fcf0708a8d1e" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;app/views/welcome/index.html.erb&lt;/code&gt; and modify it as follows:</source>
          <target state="translated">&lt;code&gt;app/views/welcome/index.html.erb&lt;/code&gt; を開き、次のように変更します。</target>
        </trans-unit>
        <trans-unit id="5e5febdcd8c7fe18a9d53035d58afbd18e5a23de" translate="yes" xml:space="preserve">
          <source>Open a new session instance. If a block is given, the new session is yielded to the block before being returned.</source>
          <target state="translated">新しいセッションインスタンスを開きます。ブロックが与えられた場合、新しいセッションは返される前にブロックに降伏します。</target>
        </trans-unit>
        <trans-unit id="3de22d522f2006b25c0bcecd1a2ef1748833ee69" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;app/views/welcome/index.html.erb&lt;/code&gt; file in your text editor. Delete all of the existing code in the file, and replace it with the following single line of code:</source>
          <target state="translated">テキストエディターで &lt;code&gt;app/views/welcome/index.html.erb&lt;/code&gt; ファイルを開きます。ファイル内の既存のコードをすべて削除し、次の1行のコードに置き換えます。</target>
        </trans-unit>
        <trans-unit id="02e3daa19d6d3cf34179e2e9bbb764f5410786c3" translate="yes" xml:space="preserve">
          <source>Open the file &lt;code&gt;config/routes.rb&lt;/code&gt; in your editor.</source>
          <target state="translated">エディターで &lt;code&gt;config/routes.rb&lt;/code&gt; ファイルを開きます。</target>
        </trans-unit>
        <trans-unit id="7dca4768f25a21ed4853295312eaa6669f3aa6c5" translate="yes" xml:space="preserve">
          <source>Open up a command line prompt. On macOS open Terminal.app, on Windows choose &quot;Run&quot; from your Start menu and type 'cmd.exe'. Any commands prefaced with a dollar sign &lt;code&gt;$&lt;/code&gt; should be run in the command line. Verify that you have a current version of Ruby installed:</source>
          <target state="translated">コマンドラインプロンプトを開きます。macOSではTerminal.appを開き、Windowsでは[スタート]メニューから[ファイル名を指定して実行]を選択し、「cmd.exe」と入力します。ドル記号 &lt;code&gt;$&lt;/code&gt; で始まるすべてのコマンドは、コマンドラインで実行する必要があります。Rubyの最新バージョンがインストールされていることを確認します。</target>
        </trans-unit>
        <trans-unit id="86bdc2a13b041c56a678da3c47890ae868206eb0" translate="yes" xml:space="preserve">
          <source>Open up a command line prompt. On macOS open Terminal.app; on Windows choose &quot;Run&quot; from your Start menu and type &lt;code&gt;cmd.exe&lt;/code&gt;. Any commands prefaced with a dollar sign &lt;code&gt;$&lt;/code&gt; should be run in the command line. Verify that you have a current version of Ruby installed:</source>
          <target state="translated">コマンドラインプロンプトを開きます。macOSでTerminal.appを開きます。Windowsでは、[スタート]メニューから[ &lt;code&gt;cmd.exe&lt;/code&gt; して実行]を選択し、cmd.exeと入力します。ドル記号 &lt;code&gt;$&lt;/code&gt; で始まるコマンドは、コマンドラインで実行する必要があります。Rubyの現在のバージョンがインストールされていることを確認します。</target>
        </trans-unit>
        <trans-unit id="14e9f7d79c40866ef09256da578e53ce9fdfbd93" translate="yes" xml:space="preserve">
          <source>OpenSSLCipherError</source>
          <target state="translated">OpenSSLCipherError</target>
        </trans-unit>
        <trans-unit id="1764bd75f367f984cde9cc7a149bc71b74585fdf" translate="yes" xml:space="preserve">
          <source>Opens a new tempfile in &lt;a href=&quot;downloading#method-i-tempdir&quot;&gt;tempdir&lt;/a&gt; and copies blob data into it. Yields the tempfile.</source>
          <target state="translated">&lt;a href=&quot;downloading#method-i-tempdir&quot;&gt;tempdirに&lt;/a&gt;新しい一時ファイルを開き、それにblobデータをコピーします。一時ファイルを生成します。</target>
        </trans-unit>
        <trans-unit id="3865e51eb9f5969b8c0e66213c28ed627ca736e5" translate="yes" xml:space="preserve">
          <source>Opt in to the new default behavior by setting &lt;code&gt;config.active_storage.replace_on_assign_to_many&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;. The old behavior will be deprecated in Rails 6.1 and removed in a subsequent release.</source>
          <target state="translated">&lt;code&gt;config.active_storage.replace_on_assign_to_many&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定して、新しいデフォルトの動作にオプトインします。古い動作はRails 6.1で非推奨になり、後続のリリースで削除されます。</target>
        </trans-unit>
        <trans-unit id="778c618117429ef2dedad8c828b71d5371cf6e0f" translate="yes" xml:space="preserve">
          <source>Optimistic Locking</source>
          <target state="translated">楽観的なロッキング</target>
        </trans-unit>
        <trans-unit id="02b4d21eac77f9a198165f97088f163752a3a876" translate="yes" xml:space="preserve">
          <source>Optimistic locking allows multiple users to access the same record for edits, and assumes a minimum of conflicts with the data. It does this by checking whether another process has made changes to a record since it was opened. An &lt;code&gt;ActiveRecord::StaleObjectError&lt;/code&gt; exception is thrown if that has occurred and the update is ignored.</source>
          <target state="translated">楽観的ロックでは、複数のユーザーが編集のために同じレコードにアクセスでき、データとの競合が最小限であると見なされます。これは、レコードが開かれてから別のプロセスがレコードに変更を加えたかどうかを確認することによって行われます。アン &lt;code&gt;ActiveRecord::StaleObjectError&lt;/code&gt; ことが発生した場合は、例外がスローされ、更新は無視されます。</target>
        </trans-unit>
        <trans-unit id="440efb9593998e73e042de8d5c13a39973de6702" translate="yes" xml:space="preserve">
          <source>Optimize caching</source>
          <target state="translated">キャッシングの最適化</target>
        </trans-unit>
        <trans-unit id="5d109ee234bd237eb8e8affab4902dda9120464f" translate="yes" xml:space="preserve">
          <source>Opting Out</source>
          <target state="translated">オプトアウト</target>
        </trans-unit>
        <trans-unit id="e31d972229de381b461860014dd710856361917a" translate="yes" xml:space="preserve">
          <source>Option</source>
          <target state="translated">Option</target>
        </trans-unit>
        <trans-unit id="7bd1d4d5e812e0b7f35050f21e80c418d4c57944" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;:dependent =&amp;gt; :restrict&lt;/code&gt; has been removed from &lt;code&gt;belongs_to&lt;/code&gt;. If you want to prevent deleting the object if there are any associated objects, you can set &lt;code&gt;:dependent =&amp;gt; :destroy&lt;/code&gt; and return &lt;code&gt;false&lt;/code&gt; after checking for existence of association from any of the associated object's destroy callbacks.</source>
          <target state="translated">オプション &lt;code&gt;:dependent =&amp;gt; :restrict&lt;/code&gt; が &lt;code&gt;belongs_to&lt;/code&gt; から削除されました。関連するオブジェクトがある場合にオブジェクトを削除しないようにする場合は、 &lt;code&gt;:dependent =&amp;gt; :destroy&lt;/code&gt; を設定し、関連するオブジェクトのdestroyコールバックから関連付けの存在を確認した後に &lt;code&gt;false&lt;/code&gt; を返すことができます。</target>
        </trans-unit>
        <trans-unit id="50371dc72490b25b93552e7d1508d1aaab544e6d" translate="yes" xml:space="preserve">
          <source>Option Groups</source>
          <target state="translated">オプショングループ</target>
        </trans-unit>
        <trans-unit id="e90caa34c648ca28307163b49f20388699c1c8bb" translate="yes" xml:space="preserve">
          <source>Option Tags from a Collection of Arbitrary Objects</source>
          <target state="translated">任意のオブジェクトのコレクションからのオプションタグ</target>
        </trans-unit>
        <trans-unit id="e460ab9059f609299a4f0391c888d23b7f0608d5" translate="yes" xml:space="preserve">
          <source>Option examples:</source>
          <target state="translated">オプションの例。</target>
        </trans-unit>
        <trans-unit id="46865efd2e3d2d4f8219e6a941cb11286e86fada" translate="yes" xml:space="preserve">
          <source>Option to encode &lt;code&gt;BigDecimal&lt;/code&gt; objects as numbers instead of strings</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; オブジェクトを文字列ではなく数値としてエンコードするオプション</target>
        </trans-unit>
        <trans-unit id="69c339ec350a719390694866ea431c63a56be5b7" translate="yes" xml:space="preserve">
          <source>Optionally provide a Hash of credentials instead of a keyfile path:</source>
          <target state="translated">必要に応じて、キーファイルのパスの代わりにクレデンシャルのハッシュを指定します。</target>
        </trans-unit>
        <trans-unit id="f7350253ff699685bca9e1cd76f42967abc3f13e" translate="yes" xml:space="preserve">
          <source>Optionally provide client and upload options:</source>
          <target state="translated">オプションでクライアントとアップロードのオプションを提供します。</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="e4d76dd552da264fbd8e54798493528d066d02e5" translate="yes" xml:space="preserve">
          <source>Options (conditions)</source>
          <target state="translated">オプション(条件</target>
        </trans-unit>
        <trans-unit id="48c5131188beb296ea713be70b28310e57cba19e" translate="yes" xml:space="preserve">
          <source>Options Extraction</source>
          <target state="translated">オプション抽出</target>
        </trans-unit>
        <trans-unit id="74f705646e3b59d91301d39cc8bd9297b7ea126a" translate="yes" xml:space="preserve">
          <source>Options applying to all assets</source>
          <target state="translated">全資産に適用されるオプション</target>
        </trans-unit>
        <trans-unit id="cad7db2ddf2757e883ec8b8dac1c23428f0a5f28" translate="yes" xml:space="preserve">
          <source>Options are passed to the underlying cache implementation.</source>
          <target state="translated">オプションは、基礎となるキャッシュの実装に渡されます。</target>
        </trans-unit>
        <trans-unit id="3d5cd85068734c29bbb9be8ed9b5362af5558f84" translate="yes" xml:space="preserve">
          <source>Options are passed to the underlying cache implementation. For example:</source>
          <target state="translated">オプションは、基礎となるキャッシュの実装に渡されます。例えば</target>
        </trans-unit>
        <trans-unit id="8886b381a94f23a6e9af413e4bc25e8fb76941b3" translate="yes" xml:space="preserve">
          <source>Options are:</source>
          <target state="translated">オプションは</target>
        </trans-unit>
        <trans-unit id="bc30f96776b234df9f8ca32270e650d3093fcef1" translate="yes" xml:space="preserve">
          <source>Options may also be used by concerns defined in a block by accepting a block parameter. So, using a block, you might do something as simple as limit the actions available on certain resources, passing standard resource options through the concern:</source>
          <target state="translated">オプションは、ブロック内で定義されたコンサーンがブロックパラメータを受け取ることで使用することもできます。つまり、ブロックを使用して、特定のリソースで利用可能なアクションを制限したり、標準のリソースオプションをコンサーションに渡したりといった単純なことを行うことができます。</target>
        </trans-unit>
        <trans-unit id="208dc3d066da1d162c0b160a18e93bcc147bb701" translate="yes" xml:space="preserve">
          <source>Options passed to fetch will be merged with the payload when writing to the store</source>
          <target state="translated">fetchに渡されたオプションは、ストアへの書き込み時にペイロードとマージされます。</target>
        </trans-unit>
        <trans-unit id="13471d65e3d4b8c4006e33f8b92e1a0c32cbcc49" translate="yes" xml:space="preserve">
          <source>Options passed to fetch will be merged with the payload.</source>
          <target state="translated">フェッチに渡されたオプションは、ペイロードにマージされます。</target>
        </trans-unit>
        <trans-unit id="bdd0b506837a990803d8edf137f2934329835748" translate="yes" xml:space="preserve">
          <source>Options:</source>
          <target state="translated">Options:</target>
        </trans-unit>
        <trans-unit id="ad3fd1b2e2af3b184336a3df7528447495096cac" translate="yes" xml:space="preserve">
          <source>Or a URL:</source>
          <target state="translated">もしくはURL。</target>
        </trans-unit>
        <trans-unit id="a3bc0242c5a25d6a0347f3cd2adf504a9a8659e2" translate="yes" xml:space="preserve">
          <source>Or a collection to be used:</source>
          <target state="translated">または使用するコレクション。</target>
        </trans-unit>
        <trans-unit id="c3e798b02ecc9f5ce86d6a37704149b2bd459266" translate="yes" xml:space="preserve">
          <source>Or consider deleting an author, and ensuring that all of its books get deleted as well:</source>
          <target state="translated">または、著者を削除することを検討し、そのすべての本が同様に削除されることを保証します。</target>
        </trans-unit>
        <trans-unit id="bb3a2413eccaa37c9edca7d7508e154b05c37f49" translate="yes" xml:space="preserve">
          <source>Or equivalently, if &lt;code&gt;TenderloveMigration&lt;/code&gt; is defined as in the documentation for Migration:</source>
          <target state="translated">または同等に、 &lt;code&gt;TenderloveMigration&lt;/code&gt; が移行のドキュメントのように定義されている場合：</target>
        </trans-unit>
        <trans-unit id="83d46f7649085a0fc5bd6642728d7255f64346fb" translate="yes" xml:space="preserve">
          <source>Or even multiple scope parameters. For example, making sure that a teacher can only be on the schedule once per semester for a particular class.</source>
          <target state="translated">あるいは、複数のスコープパラメータを指定することもできます。例えば、教師が特定のクラスのために1学期に1回しかスケジュールに参加できないことを確認すること。</target>
        </trans-unit>
        <trans-unit id="4775e203194ef68c0ffff0b45e0260781cbe7d36" translate="yes" xml:space="preserve">
          <source>Or even to render a special view:</source>
          <target state="translated">あるいは、特別なビューをレンダリングすることもできます。</target>
        </trans-unit>
        <trans-unit id="fcf071d5d4043c8f993b4afe346faf72c15a6d61" translate="yes" xml:space="preserve">
          <source>Or if the format is json:</source>
          <target state="translated">またはフォーマットがjsonの場合。</target>
        </trans-unit>
        <trans-unit id="28ad3309395a57ea267e47d84de8180ed1521394" translate="yes" xml:space="preserve">
          <source>Or in a view:</source>
          <target state="translated">あるいは景色の中で。</target>
        </trans-unit>
        <trans-unit id="1f13b33e63742fa01f4b9868b2094bcb1f7b7f66" translate="yes" xml:space="preserve">
          <source>Or in the &lt;code&gt;Initializer&lt;/code&gt; section, add &lt;em&gt;any&lt;/em&gt; of the following</source>
          <target state="translated">または、 &lt;code&gt;Initializer&lt;/code&gt; セクションで、次の&lt;em&gt;いずれか&lt;/em&gt;を追加します</target>
        </trans-unit>
        <trans-unit id="b05b4787f0b112e93549bd08dd3c395127fe3054" translate="yes" xml:space="preserve">
          <source>Or on a relation:</source>
          <target state="translated">あるいは関係性の上で。</target>
        </trans-unit>
        <trans-unit id="dd960357e2da48b048bf1b0f86562d2ec982a889" translate="yes" xml:space="preserve">
          <source>Or on an association consisting of &lt;code&gt;Article&lt;/code&gt; objects:</source>
          <target state="translated">または &lt;code&gt;Article&lt;/code&gt; オブジェクトで構成される関連付けについて：</target>
        </trans-unit>
        <trans-unit id="0ab5c4590547794ec7e0f2f7c1e5ea69636d74fa" translate="yes" xml:space="preserve">
          <source>Or on an association consisting of &lt;code&gt;Book&lt;/code&gt; objects:</source>
          <target state="translated">または、 &lt;code&gt;Book&lt;/code&gt; オブジェクトで構成される関連付けの場合：</target>
        </trans-unit>
        <trans-unit id="9c76bf3671450a6e5c1752c98d78e3e9357ea980" translate="yes" xml:space="preserve">
          <source>Or ordering by multiple fields:</source>
          <target state="translated">または複数のフィールドでの注文。</target>
        </trans-unit>
        <trans-unit id="353ed84771564a4d91061f6b253d2d768af09ea7" translate="yes" xml:space="preserve">
          <source>Or pass &lt;code&gt;instance_accessor: false&lt;/code&gt;, to omit both instance methods.</source>
          <target state="translated">または、 &lt;code&gt;instance_accessor: false&lt;/code&gt; 渡して、両方のインスタンスメソッドを省略します。</target>
        </trans-unit>
        <trans-unit id="38d614a80bf893429ce0e36be6a4449bc948530a" translate="yes" xml:space="preserve">
          <source>Or similarly:</source>
          <target state="translated">あるいは似たようなもの。</target>
        </trans-unit>
        <trans-unit id="feb96942494fc6e6e25d0e604bc699226c9dcdc9" translate="yes" xml:space="preserve">
          <source>Or the attacker places the code into the onmouseover event handler of an image:</source>
          <target state="translated">あるいは、攻撃者は画像の onmouseover イベントハンドラにコードを配置します。</target>
        </trans-unit>
        <trans-unit id="262059292b81bef2d8cda70b0d63b5f36908f7fe" translate="yes" xml:space="preserve">
          <source>Or to decrypt with a file, that should be version control ignored, relative to &lt;code&gt;Rails.root&lt;/code&gt;:</source>
          <target state="translated">または、ファイルで解読するには、 &lt;code&gt;Rails.root&lt;/code&gt; と比較して、バージョン管理を無視する必要があります。</target>
        </trans-unit>
        <trans-unit id="99e051f74960fbfe6c295f8f87ebe121ad9175f6" translate="yes" xml:space="preserve">
          <source>Or we can run a single test file by passing the &lt;code&gt;bin/rails test&lt;/code&gt; command the filename containing the test cases.</source>
          <target state="translated">または、 &lt;code&gt;bin/rails test&lt;/code&gt; コマンドにテストケースを含むファイル名を渡すことで、単一のテストファイルを実行できます。</target>
        </trans-unit>
        <trans-unit id="9dbccef96008262323edcfb1744318c09d39a853" translate="yes" xml:space="preserve">
          <source>Or we can run a single test file by passing the &lt;code&gt;rails test&lt;/code&gt; command the filename containing the test cases.</source>
          <target state="translated">または、 &lt;code&gt;rails test&lt;/code&gt; コマンドにテストケースを含むファイル名を渡すことで、単一のテストファイルを実行できます。</target>
        </trans-unit>
        <trans-unit id="f4e4c5e6da356d13d896e512ce82a61a1cb72041" translate="yes" xml:space="preserve">
          <source>Or with a block where self points to the current record to be validated:</source>
          <target state="translated">あるいは、自己が現在のレコードを指し示すブロックで検証します。</target>
        </trans-unit>
        <trans-unit id="e55fad0f3a803ecc0ba8d73b4df09ad1bcaf83a4" translate="yes" xml:space="preserve">
          <source>Or you can insert a middleware to exact position by using indexes. For example, if you want to insert &lt;code&gt;Magical::Unicorns&lt;/code&gt; middleware on top of the stack, you can do it, like so:</source>
          <target state="translated">または、インデックスを使用してミドルウェアを正確な位置に挿入できます。たとえば、 &lt;code&gt;Magical::Unicorns&lt;/code&gt; ミドルウェアをスタックの一番上に挿入する場合は、次のように実行できます。</target>
        </trans-unit>
        <trans-unit id="86788b76f62cc7d80ba88d052aa89714577b6e5b" translate="yes" xml:space="preserve">
          <source>Or you can remove them.</source>
          <target state="translated">もしくは削除することもできます。</target>
        </trans-unit>
        <trans-unit id="0f4aa987b22d11cbdd89561b2a3cf032b29fb407" translate="yes" xml:space="preserve">
          <source>Or you can set an array of locales as fallback, like so:</source>
          <target state="translated">あるいは、以下のようにロケールの配列をフォールバックとして設定することもできます。</target>
        </trans-unit>
        <trans-unit id="a790a45649781a5473f7e61e6f5b7a3f6f9a4f75" translate="yes" xml:space="preserve">
          <source>Or you can set different fallbacks for locales individually. For example, if you want to use &lt;code&gt;:tr&lt;/code&gt; for &lt;code&gt;:az&lt;/code&gt; and &lt;code&gt;:de&lt;/code&gt;, &lt;code&gt;:en&lt;/code&gt; for &lt;code&gt;:da&lt;/code&gt; as fallbacks, you can do it, like so:</source>
          <target state="translated">または、ロケールごとに異なるフォールバックを設定できます。たとえば、 &lt;code&gt;:az&lt;/code&gt; および &lt;code&gt;:de&lt;/code&gt; に &lt;code&gt;:tr&lt;/code&gt; を使用し、 &lt;code&gt;:da&lt;/code&gt; に &lt;code&gt;:en&lt;/code&gt; をフォールバックとして使用する場合は、次のように実行できます。</target>
        </trans-unit>
        <trans-unit id="ee000edaf91e9f280fa400956381a99a973a4786" translate="yes" xml:space="preserve">
          <source>Or you can use other HTTP headers to convey other information:</source>
          <target state="translated">あるいは、他の情報を伝えるために他のHTTPヘッダを使用することもできます。</target>
        </trans-unit>
        <trans-unit id="82f92b3302dc3f5a54ed01bf773c005412f4d003" translate="yes" xml:space="preserve">
          <source>Or, &quot;whaaat my tests are failing!!!?&quot; or &quot;my &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; widget is busted!!&quot;</source>
          <target state="translated">または、「テストが失敗しました!!!」または「私の &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; ウィジェットが破壊されました!!」</target>
        </trans-unit>
        <trans-unit id="c171a1fe27ebc7177e93b906ec6c9ad27b66b172" translate="yes" xml:space="preserve">
          <source>Or, if you aren't using a &lt;code&gt;FormBuilder&lt;/code&gt;, add the data attribute directly:</source>
          <target state="translated">または、 &lt;code&gt;FormBuilder&lt;/code&gt; を使用していない場合は、データ属性を直接追加します。</target>
        </trans-unit>
        <trans-unit id="2aaf9fe84593f20cc47e6587390b0fadf8b7846e" translate="yes" xml:space="preserve">
          <source>Or, in English: &quot;return a Book object for all books with reviews&quot;. Note that you will see duplicate books if a book has more than one review. If you want unique books, you can use &lt;code&gt;Book.joins(:reviews).distinct&lt;/code&gt;.</source>
          <target state="translated">または、英語で：「レビューのあるすべての本のBookオブジェクトを返す」。書籍に複数のレビューがある場合は、重複する書籍が表示されることに注意してください。ユニークな本が必要な場合は、 &lt;code&gt;Book.joins(:reviews).distinct&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="476fef55382549404628dd1d71367f3e6a2b7ced" translate="yes" xml:space="preserve">
          <source>Or, in English: &quot;return a Category object for all categories with articles&quot;. Note that you will see duplicate categories if more than one article has the same category. If you want unique categories, you can use &lt;code&gt;Category.joins(:articles).distinct&lt;/code&gt;.</source>
          <target state="translated">または、英語：「記事のあるすべてのカテゴリのカテゴリオブジェクトを返す」。複数の記事に同じカテゴリがある場合、重複したカテゴリが表示されることに注意してください。一意のカテゴリが必要な場合は、 &lt;code&gt;Category.joins(:articles).distinct&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="c9608eda96f81a2096cfa4b308ac3d2afb82fef9" translate="yes" xml:space="preserve">
          <source>Or, in English: &quot;return all articles that have a category and at least one comment&quot;. Note again that articles with multiple comments will show up multiple times.</source>
          <target state="translated">あるいは、英語で言うと &quot;カテゴリーと最低1つのコメントを持つ全ての記事を返す&quot;。複数のコメントを持つ記事は複数回表示されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="6846db36a33012faef67bdc5fc41c96e2233a4b3" translate="yes" xml:space="preserve">
          <source>Or, in English: &quot;return all articles that have a comment made by a guest.&quot;</source>
          <target state="translated">あるいは、英語で言うと &quot;ゲストがコメントした記事をすべて返す&quot;</target>
        </trans-unit>
        <trans-unit id="9be092c6e092fa1f27e558ecd28eb6c1f6a549ac" translate="yes" xml:space="preserve">
          <source>Or, in English: &quot;return all authors that have books with reviews &lt;em&gt;and&lt;/em&gt; have been ordered by a customer, and the suppliers for those books.&quot;</source>
          <target state="translated">または、英語で「レビューで本を持っているすべての著者を返す&lt;em&gt;と&lt;/em&gt;、顧客が発注されており、それらの書籍のサプライヤーを。」</target>
        </trans-unit>
        <trans-unit id="a62eedb27d5a1899f69128a8be44388186d68970" translate="yes" xml:space="preserve">
          <source>Or, in English: &quot;return all books that have a review by a customer.&quot;</source>
          <target state="translated">英語で言うと &quot;顧客によるレビューのある本は全て返却する&quot;</target>
        </trans-unit>
        <trans-unit id="4b560452812f904f8fe11986dffdc9f0661574f5" translate="yes" xml:space="preserve">
          <source>Or, in English: &quot;return all books with their author that have at least one review&quot;. Note again that books with multiple reviews will show up multiple times.</source>
          <target state="translated">または、英語では &quot;少なくとも1つのレビューがある著者の本をすべて返却します。複数のレビューがある本は複数回表示されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="ea5f7ab50058274eb7f14d4b850aaad262badbd2" translate="yes" xml:space="preserve">
          <source>Or, in English: &quot;return all categories that have articles, where those articles have a comment made by a guest, and where those articles also have a tag.&quot;</source>
          <target state="translated">あるいは、英語では &quot;記事を持つすべてのカテゴリを返し、それらの記事にはゲストによるコメントがあり、それらの記事にはタグがあります。&quot;</target>
        </trans-unit>
        <trans-unit id="9c9be6657aea6e25a56e81a0b77ef30c9fd852c7" translate="yes" xml:space="preserve">
          <source>Or, using a callable object, you might implement something more specific to your application, which would be out of place in your routes file.</source>
          <target state="translated">あるいは、呼び出し可能なオブジェクトを使用して、よりアプリケーションに特化した何かを実装することもできますが、それはルートファイルの中にはありません。</target>
        </trans-unit>
        <trans-unit id="9b2b0e8fe92771485e96ea339005a73e1f1d256f" translate="yes" xml:space="preserve">
          <source>Oracle: &lt;code&gt;:precision&lt;/code&gt; [1..38], &lt;code&gt;:scale&lt;/code&gt; [-84..127]. Default is (38,0).</source>
          <target state="translated">Oracle：： &lt;code&gt;:precision&lt;/code&gt; [1..38] 、 &lt;code&gt;:scale&lt;/code&gt; [-84..127]。デフォルトは（38,0）です。</target>
        </trans-unit>
        <trans-unit id="3651320b8674613f1874c7fdd0151b4d0caedaba" translate="yes" xml:space="preserve">
          <source>OrderedHash</source>
          <target state="translated">OrderedHash</target>
        </trans-unit>
        <trans-unit id="8011702c2353e126a49a6909828570d332ce0c1b" translate="yes" xml:space="preserve">
          <source>OrderedHash#encode_with</source>
          <target state="translated">OrderedHash#encode_with</target>
        </trans-unit>
        <trans-unit id="00187da59bc0549040ca22c6603641dd7b7c952c" translate="yes" xml:space="preserve">
          <source>OrderedHash#extractable_options?</source>
          <target state="translated">OrderedHash#extractable_options?</target>
        </trans-unit>
        <trans-unit id="6459274eb159c4da482aed019c1a1b2df265595f" translate="yes" xml:space="preserve">
          <source>OrderedHash#nested_under_indifferent_access</source>
          <target state="translated">OrderedHash#nested_under_indifferent_access</target>
        </trans-unit>
        <trans-unit id="454162ee6ad7c6804ac28d9ea0b805e972c8f02b" translate="yes" xml:space="preserve">
          <source>OrderedHash#reject</source>
          <target state="translated">OrderedHash#reject</target>
        </trans-unit>
        <trans-unit id="239ff10b89ec8d7a91930001365d2af62f0e790d" translate="yes" xml:space="preserve">
          <source>OrderedHash#select</source>
          <target state="translated">OrderedHash#select</target>
        </trans-unit>
        <trans-unit id="f842169a6bbeb6d81c0c2659957a8ebd9b2f8d29" translate="yes" xml:space="preserve">
          <source>OrderedHash#to_yaml_type</source>
          <target state="translated">OrderedHash#to_yaml_type</target>
        </trans-unit>
        <trans-unit id="7ac247c4a7d84979677baf43b00743777812d609" translate="yes" xml:space="preserve">
          <source>OrderedOptions</source>
          <target state="translated">OrderedOptions</target>
        </trans-unit>
        <trans-unit id="6a56f6d0f3acca66eed843d6d3ec368da741c8ba" translate="yes" xml:space="preserve">
          <source>OrderedOptions#[]</source>
          <target state="translated">OrderedOptions#[]</target>
        </trans-unit>
        <trans-unit id="8295c4a54919052ef905cb9a1e90615db5da4f1d" translate="yes" xml:space="preserve">
          <source>OrderedOptions#[]=</source>
          <target state="translated">OrderedOptions#[]=</target>
        </trans-unit>
        <trans-unit id="4dfb747ca0c1f786f335009acb94d658467406ef" translate="yes" xml:space="preserve">
          <source>OrderedOptions#method_missing</source>
          <target state="translated">OrderedOptions#method_missing</target>
        </trans-unit>
        <trans-unit id="9e0731663e518cae644526e87a0f07ce6e06da60" translate="yes" xml:space="preserve">
          <source>OrderedOptions#respond_to_missing?</source>
          <target state="translated">OrderedOptions#respond_to_missing?</target>
        </trans-unit>
        <trans-unit id="d3ed86c1334d74f0ae883f47feef902d83b9d8c6" translate="yes" xml:space="preserve">
          <source>Ordering</source>
          <target state="translated">Ordering</target>
        </trans-unit>
        <trans-unit id="fab2cdcb0be97dcee2dba5e417fb9055f1882f2e" translate="yes" xml:space="preserve">
          <source>Ordering callbacks</source>
          <target state="translated">コールバックの注文</target>
        </trans-unit>
        <trans-unit id="c3e0fa2a51ddf9d54aad39d4773739860c37c59c" translate="yes" xml:space="preserve">
          <source>Ordering of test cases</source>
          <target state="translated">テストケースの順序</target>
        </trans-unit>
        <trans-unit id="b1c96a0c3f44b5348309abe5683ccb9be1ee4720" translate="yes" xml:space="preserve">
          <source>Ordinal returns the suffix used to denote the position in an ordered sequence such as 1st, 2nd, 3rd, 4th.</source>
          <target state="translated">Ordinal は、1st,2nd,3rd,4th のような順序順の位置を表すために使用される接尾辞を返します。</target>
        </trans-unit>
        <trans-unit id="234ebf34ca83ec1a7ef1b9c727705d802ebcb2ad" translate="yes" xml:space="preserve">
          <source>Ordinalize turns a number into an ordinal string used to denote the position in an ordered sequence such as 1st, 2nd, 3rd, 4th.</source>
          <target state="translated">Ordinalize は、数値を順序文字列に変換し、1st、2nd、3rd、4th のような順序列の位置を表すために使用されます。</target>
        </trans-unit>
        <trans-unit id="8236fc5a62a8a4a8a0f05fa3a4f168d16b4015ef" translate="yes" xml:space="preserve">
          <source>Organization of Locale Files</source>
          <target state="translated">ロケールファイルの構成</target>
        </trans-unit>
        <trans-unit id="d18e01afbf0e5b1eeb3efa3d549e66dfa5015f34" translate="yes" xml:space="preserve">
          <source>Other &lt;a href=&quot;helpers&quot;&gt;&lt;code&gt;Helpers&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">その他の&lt;a href=&quot;helpers&quot;&gt; &lt;code&gt;Helpers&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e4e880b1de182f244bb77847d912e987df78ccc8" translate="yes" xml:space="preserve">
          <source>Other &lt;a href=&quot;helpers&quot;&gt;Helpers&lt;/a&gt;</source>
          <target state="translated">その他の&lt;a href=&quot;helpers&quot;&gt;ヘルパー&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eebb2f9cdc2951c739e98100dec8f3363c3a726b" translate="yes" xml:space="preserve">
          <source>Other Components</source>
          <target state="translated">その他の部品</target>
        </trans-unit>
        <trans-unit id="fae03cc5ec3db05ad91a565c0f5d8f4fd2384cdc" translate="yes" xml:space="preserve">
          <source>Other Configurations</source>
          <target state="translated">その他の設定</target>
        </trans-unit>
        <trans-unit id="625a1d396eaa80f4cad2a3b6a932959b98568e22" translate="yes" xml:space="preserve">
          <source>Other Gem Dependencies</source>
          <target state="translated">その他のジェムの依存関係</target>
        </trans-unit>
        <trans-unit id="f54c0ef7fb66478fc86f1826784d079a09bd05d7" translate="yes" xml:space="preserve">
          <source>Other Helpers of Interest</source>
          <target state="translated">興味のある他のヘルパー</target>
        </trans-unit>
        <trans-unit id="7ae765936f631daf3aee7c8cda3fdea24003782b" translate="yes" xml:space="preserve">
          <source>Other Middleware</source>
          <target state="translated">その他のミドルウェア</target>
        </trans-unit>
        <trans-unit id="e9a64990a17e005b82e9a7862ca72e618bda5a31" translate="yes" xml:space="preserve">
          <source>Other Resources</source>
          <target state="translated">その他のリソース</target>
        </trans-unit>
        <trans-unit id="9886dff852162d7b391293133a1dfac4eb182bc5" translate="yes" xml:space="preserve">
          <source>Other Security Considerations</source>
          <target state="translated">その他のセキュリティに関する考慮事項</target>
        </trans-unit>
        <trans-unit id="97b234d8e57efd5e0d141a802475bd8db710c26d" translate="yes" xml:space="preserve">
          <source>Other Ways to Use Filters</source>
          <target state="translated">その他のフィルターの使い方</target>
        </trans-unit>
        <trans-unit id="0d5f4f72132946c433741e5405bc096c29b477e1" translate="yes" xml:space="preserve">
          <source>Other authentication methods are available for Rails applications. Two popular authentication add-ons for Rails are the &lt;a href=&quot;https://github.com/plataformatec/devise&quot;&gt;Devise&lt;/a&gt; rails engine and the &lt;a href=&quot;https://github.com/binarylogic/authlogic&quot;&gt;Authlogic&lt;/a&gt; gem, along with a number of others.</source>
          <target state="translated">Railsアプリケーションでは、他の認証方法を使用できます。Railsでよく使用される2つの認証アドオンは、&lt;a href=&quot;https://github.com/plataformatec/devise&quot;&gt;Devise&lt;/a&gt; rails engineと&lt;a href=&quot;https://github.com/binarylogic/authlogic&quot;&gt;Authlogic&lt;/a&gt; gemです。</target>
        </trans-unit>
        <trans-unit id="4f7a2a9b3af338ac1accecdfa4a69534e1ad2e17" translate="yes" xml:space="preserve">
          <source>Other blocking operations performed inside the Executor block (which includes all application code), however, can needlessly retain the &lt;code&gt;running&lt;/code&gt; lock. If another thread encounters a constant it must autoload, this can cause a deadlock.</source>
          <target state="translated">ただし、Executorブロック（すべてのアプリケーションコードを含む）内で実行される他のブロッキング操作は、 &lt;code&gt;running&lt;/code&gt; ロックを不必要に保持する可能性があります。別のスレッドがオートロードする必要のある定数を検出すると、デッドロックが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="830c52bd0dcd294842be90215c1c713085511837" translate="yes" xml:space="preserve">
          <source>Other engines, such as Devise, handle this a little differently by making you specify custom helpers (such as &lt;code&gt;devise_for&lt;/code&gt;) in the routes. These helpers do exactly the same thing, mounting pieces of the engines's functionality at a pre-defined path which may be customizable.</source>
          <target state="translated">Deviseなどの他のエンジンは、ルートでカスタムヘルパー（ &lt;code&gt;devise_for&lt;/code&gt; など）を指定することにより、これを少し異なって処理します。これらのヘルパーはまったく同じことを行い、エンジンの機能の一部を、カスタマイズ可能な事前定義されたパスにマウントします。</target>
        </trans-unit>
        <trans-unit id="1e7d830fa844d239fe825fcb4fdd3552dbd8bbb9" translate="yes" xml:space="preserve">
          <source>Other form controls worth mentioning are text areas, hidden fields, password fields, number fields, date and time fields, and many more:</source>
          <target state="translated">その他のフォームコントロールとしては、テキストエリア、隠しフィールド、パスワードフィールド、数字フィールド、日付と時刻のフィールドなどがあります。</target>
        </trans-unit>
        <trans-unit id="8acffdfa21f8bb476a3cdcd269b91fe48dbb8dfd" translate="yes" xml:space="preserve">
          <source>Other form controls worth mentioning are textareas, password fields, hidden fields, search fields, telephone fields, date fields, time fields, color fields, datetime-local fields, month fields, week fields, URL fields, email fields, number fields, and range fields:</source>
          <target state="translated">その他のフォームコントロールとしては、テキストエリア、パスワードフィールド、隠しフィールド、検索フィールド、電話フィールド、日付フィールド、時間フィールド、カラーフィールド、日付-ローカルフィールド、月フィールド、週フィールド、URLフィールド、電子メールフィールド、数値フィールド、および範囲フィールドなどがあります。</target>
        </trans-unit>
        <trans-unit id="d6b50fdb143f86261971aa63def42c427f9c9d35" translate="yes" xml:space="preserve">
          <source>Other helpers use the &lt;code&gt;_tag&lt;/code&gt; suffix to indicate whether a helper is a barebones helper or one that operates on model objects. With dates and times, &lt;code&gt;select_date&lt;/code&gt;, &lt;code&gt;select_time&lt;/code&gt; and &lt;code&gt;select_datetime&lt;/code&gt; are the barebones helpers, &lt;code&gt;date_select&lt;/code&gt;, &lt;code&gt;time_select&lt;/code&gt; and &lt;code&gt;datetime_select&lt;/code&gt; are the equivalent model object helpers.</source>
          <target state="translated">他のヘルパーは、 &lt;code&gt;_tag&lt;/code&gt; サフィックスを使用して、ヘルパーがベアボーンヘルパーであるか、モデルオブジェクトで動作するヘルパーであるかを示します。日付と時刻では、 &lt;code&gt;select_date&lt;/code&gt; 、 &lt;code&gt;select_time&lt;/code&gt; 、および &lt;code&gt;select_datetime&lt;/code&gt; はベアボーンヘルパーであり、 &lt;code&gt;date_select&lt;/code&gt; 、 &lt;code&gt;time_select&lt;/code&gt; および &lt;code&gt;datetime_select&lt;/code&gt; は同等のモデルオブジェクトヘルパーです。</target>
        </trans-unit>
        <trans-unit id="f2cab26bf4d959d62d893f5250b7f6098ab6bd08" translate="yes" xml:space="preserve">
          <source>Other names simply map to a parameter as in the case of &lt;code&gt;:id&lt;/code&gt;.</source>
          <target state="translated">他の名前は、 &lt;code&gt;:id&lt;/code&gt; の場合のように、単にパラメータにマッピングされます。</target>
        </trans-unit>
        <trans-unit id="f15c76b7bfea78e807b8afdf64ed8d6b9ef0d4c1" translate="yes" xml:space="preserve">
          <source>Other namespaces can be added to the root element:</source>
          <target state="translated">他の名前空間は、ルート要素に追加することができます。</target>
        </trans-unit>
        <trans-unit id="9561c9165412cff7550a46ff709053bba06eb3b4" translate="yes" xml:space="preserve">
          <source>Other options will be handled by the specific cache store implementation. Internally, &lt;a href=&quot;store#method-i-fetch&quot;&gt;&lt;code&gt;fetch&lt;/code&gt;&lt;/a&gt; calls read_entry, and calls write_entry on a cache miss. &lt;code&gt;options&lt;/code&gt; will be passed to the &lt;a href=&quot;store#method-i-read&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;store#method-i-write&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; calls.</source>
          <target state="translated">その他のオプションは、特定のキャッシュストアの実装によって処理されます。内部的には、&lt;a href=&quot;store#method-i-fetch&quot;&gt; &lt;code&gt;fetch&lt;/code&gt; &lt;/a&gt;はread_entryを呼び出し、キャッシュミスでwrite_entryを呼び出します。 &lt;code&gt;options&lt;/code&gt; は、&lt;a href=&quot;store#method-i-read&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;呼び出しと&lt;a href=&quot;store#method-i-write&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;呼び出しに渡されます。</target>
        </trans-unit>
        <trans-unit id="9bac31dd685f18ba9e6e1193d5c12c6e7fadab12" translate="yes" xml:space="preserve">
          <source>Other options will be handled by the specific cache store implementation. Internally, &lt;a href=&quot;store#method-i-fetch&quot;&gt;fetch&lt;/a&gt; calls read_entry, and calls write_entry on a cache miss. &lt;code&gt;options&lt;/code&gt; will be passed to the &lt;a href=&quot;store#method-i-read&quot;&gt;read&lt;/a&gt; and &lt;a href=&quot;store#method-i-write&quot;&gt;write&lt;/a&gt; calls.</source>
          <target state="translated">その他のオプションは、特定のキャッシュストアの実装によって処理されます。内部的には、&lt;a href=&quot;store#method-i-fetch&quot;&gt;fetch&lt;/a&gt;はread_entryを呼び出し、キャッシュミス時にwrite_entryを呼び出します。 &lt;code&gt;options&lt;/code&gt; は、&lt;a href=&quot;store#method-i-read&quot;&gt;読み取り&lt;/a&gt;および&lt;a href=&quot;store#method-i-write&quot;&gt;書き込み&lt;/a&gt;呼び出しに渡されます。</target>
        </trans-unit>
        <trans-unit id="599ffbd6e95e9102a19874cfc765e0666e6a5f25" translate="yes" xml:space="preserve">
          <source>Other options:</source>
          <target state="translated">その他のオプション</target>
        </trans-unit>
        <trans-unit id="5b3332c9f3937213720f845d4ac9ee1edb90cf9d" translate="yes" xml:space="preserve">
          <source>Other plugins may add additional modules. You can get a list of all modules included into &lt;code&gt;ActionController::API&lt;/code&gt; in the rails console:</source>
          <target state="translated">他のプラグインは、追加のモジュールを追加する場合があります。Railsコンソールの &lt;code&gt;ActionController::API&lt;/code&gt; に含まれるすべてのモジュールのリストを取得できます。</target>
        </trans-unit>
        <trans-unit id="a36e24362db8d00a039fa3e864e49bf3c4a454d4" translate="yes" xml:space="preserve">
          <source>Other plugins, including Active Record, may add additional middleware. In general, these middleware are agnostic to the type of application you are building, and make sense in an API-only Rails application.</source>
          <target state="translated">Active Recordを含む他のプラグインでは、追加のミドルウェアが追加されることがあります。一般的に、これらのミドルウェアは構築しているアプリケーションの種類に依存せず、APIのみのRailsアプリケーションでは意味があります。</target>
        </trans-unit>
        <trans-unit id="aedf6a5786c078a2cfdc5f48960cfa1333f86471" translate="yes" xml:space="preserve">
          <source>Other popular testing approaches and plugins.</source>
          <target state="translated">他にも人気のあるテスト手法やプラグイン</target>
        </trans-unit>
        <trans-unit id="a47f5a683ca5a39d9b1514343c124845320bb602" translate="yes" xml:space="preserve">
          <source>Others remove columns when they migrate up instead of down:</source>
          <target state="translated">他の人は、下ではなく上に移動するときにカラムを削除します。</target>
        </trans-unit>
        <trans-unit id="37ac804a990007dc6304805bea8e1b38b1a18234" translate="yes" xml:space="preserve">
          <source>Otherwise accepts the same options as text_field_tag.</source>
          <target state="translated">それ以外の場合はtext_field_tagと同じオプションを受け取ります。</target>
        </trans-unit>
        <trans-unit id="85f9f1958a60e4e904e41cbb2365f4dbd85d71ac" translate="yes" xml:space="preserve">
          <source>Otherwise raises &lt;code&gt;ActionController::ParameterMissing&lt;/code&gt;:</source>
          <target state="translated">それ以外の場合は、 &lt;code&gt;ActionController::ParameterMissing&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="ffdd72cc23a2041167e980413c8165ef15604bd4" translate="yes" xml:space="preserve">
          <source>Otherwise the root element is &amp;ldquo;objects&amp;rdquo;:</source>
          <target state="translated">それ以外の場合、ルート要素は「オブジェクト」です。</target>
        </trans-unit>
        <trans-unit id="d5cd5b915cbdb8da5ee2ba3178987d2c61bb672d" translate="yes" xml:space="preserve">
          <source>Otherwise you'll get this error:</source>
          <target state="translated">そうしないとこのエラーが出ます。</target>
        </trans-unit>
        <trans-unit id="54580cb3434b8b0cdd18cab31cb152aae8e86621" translate="yes" xml:space="preserve">
          <source>Otherwise, a node with &lt;code&gt;key&lt;/code&gt; as tag is created with a string representation of &lt;code&gt;value&lt;/code&gt; as text node. If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt; an attribute &quot;nil&quot; set to &quot;true&quot; is added. Unless the option &lt;code&gt;:skip_types&lt;/code&gt; exists and is true, an attribute &quot;type&quot; is added as well according to the following mapping:</source>
          <target state="translated">それ以外の場合は、 &lt;code&gt;key&lt;/code&gt; がタグであるノードが、 &lt;code&gt;value&lt;/code&gt; 文字列表現をテキストノードとして作成されます。 &lt;code&gt;value&lt;/code&gt; が &lt;code&gt;nil&lt;/code&gt; の場合、「true」に設定された属性「nil」が追加されます。オプション &lt;code&gt;:skip_types&lt;/code&gt; が存在し、それがtrueでない限り、属性「type」も次のマッピングに従って追加されます。</target>
        </trans-unit>
        <trans-unit id="b654bd32ac21eaac826fe8d3e81294668380e3d9" translate="yes" xml:space="preserve">
          <source>Otherwise, a node with &lt;code&gt;key&lt;/code&gt; as tag is created with a string representation of &lt;code&gt;value&lt;/code&gt; as text node. If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt; an attribute &amp;ldquo;nil&amp;rdquo; set to &amp;ldquo;true&amp;rdquo; is added. Unless the option &lt;code&gt;:skip_types&lt;/code&gt; exists and is true, an attribute &amp;ldquo;type&amp;rdquo; is added as well according to the following mapping:</source>
          <target state="translated">それ以外の場合は、 &lt;code&gt;key&lt;/code&gt; がタグであるノードが、 &lt;code&gt;value&lt;/code&gt; 文字列表現をテキストノードとして作成されます。 &lt;code&gt;value&lt;/code&gt; が &lt;code&gt;nil&lt;/code&gt; の場合、「true」に設定された属性「nil」が追加されます。オプション &lt;code&gt;:skip_types&lt;/code&gt; が存在し、それがtrueでない限り、次のマッピングに従って属性「type」も追加されます。</target>
        </trans-unit>
        <trans-unit id="6083cf987607089d6d26e0ce040a8e773f89b71c" translate="yes" xml:space="preserve">
          <source>Otherwise, a partial is rendered using the second parameter as the locals hash.</source>
          <target state="translated">そうでない場合は、2 番目のパラメータをローカルハッシュとして使用してパーシャルをレンダリングします。</target>
        </trans-unit>
        <trans-unit id="4ff985b48294c27e9963776306b1e5656a018dd5" translate="yes" xml:space="preserve">
          <source>Otherwise, an array with the argument as its single element is returned.</source>
          <target state="translated">そうでない場合は、引数を単一要素とする配列が返されます。</target>
        </trans-unit>
        <trans-unit id="0a46a92c0871a1f545a82e3e2650b051d10a817f" translate="yes" xml:space="preserve">
          <source>Otherwise, if the argument responds to &lt;code&gt;to_ary&lt;/code&gt; it is invoked, and if the value of &lt;code&gt;to_ary&lt;/code&gt; is not &lt;code&gt;nil&lt;/code&gt;, it is returned.</source>
          <target state="translated">それ以外の場合、引数が &lt;code&gt;to_ary&lt;/code&gt; に応答すると呼び出され、 &lt;code&gt;to_ary&lt;/code&gt; の値が &lt;code&gt;nil&lt;/code&gt; でない場合はそれが返されます。</target>
        </trans-unit>
        <trans-unit id="72b84b854ca5bed9f78d1e328de5b12c40f1d7d3" translate="yes" xml:space="preserve">
          <source>Otherwise, if the argument responds to &lt;code&gt;to_ary&lt;/code&gt; it is invoked, and its result returned.</source>
          <target state="translated">それ以外の場合、引数が &lt;code&gt;to_ary&lt;/code&gt; に応答すると、それが呼び出され、その結果が返されます。</target>
        </trans-unit>
        <trans-unit id="414d32a57c350caae7ff14388456d7ee72359586" translate="yes" xml:space="preserve">
          <source>Otherwise, in every request Rails walks the application tree to check if anything has changed.</source>
          <target state="translated">そうでなければ、すべてのリクエストでRailsはアプリケーションツリーを歩き、何かが変更されていないかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="8f36700a4ed306bdca5493ebd8253ef6986e00cf" translate="yes" xml:space="preserve">
          <source>Otherwise, returns an array with the argument as its single element.</source>
          <target state="translated">それ以外の場合は、引数を単一の要素とする配列を返します。</target>
        </trans-unit>
        <trans-unit id="3485420d5e1b49bbbeba6112829799e07b174463" translate="yes" xml:space="preserve">
          <source>Otherwise, the method re-raises the first exception found:</source>
          <target state="translated">そうでなければ、このメソッドは最初に見つかった例外を再発生させます。</target>
        </trans-unit>
        <trans-unit id="79c9b95f925ab45cf4a279e41a46a5994bcadf92" translate="yes" xml:space="preserve">
          <source>Otherwise, the value received as argument, which defaults to &lt;code&gt;nil&lt;/code&gt;, is the separator:</source>
          <target state="translated">それ以外の場合、引数として受け取った値（デフォルトは &lt;code&gt;nil&lt;/code&gt; ）はセパレーターです。</target>
        </trans-unit>
        <trans-unit id="16fc7af248b36a9a8b5a66debb1f5e507999577d" translate="yes" xml:space="preserve">
          <source>Our &lt;code&gt;edit&lt;/code&gt; form will look the same as our &lt;code&gt;new&lt;/code&gt; form. Even the code will be the same, thanks to the Rails form builder and resourceful routing. The form builder automatically configures the form to make the appropriate kind of request, based on whether the model object has been previously saved.</source>
          <target state="translated">当社の &lt;code&gt;edit&lt;/code&gt; フォームは、私たちと同じように見えるだろう &lt;code&gt;new&lt;/code&gt; 形。Railsフォームビルダーとリソースの豊富なルーティングのおかげで、コードも同じになります。フォームビルダーは、モデルオブジェクトが以前に保存されているかどうかに基づいて、適切な種類の要求を行うようにフォームを自動的に構成します。</target>
        </trans-unit>
        <trans-unit id="64d5bd4dc7bbb64daeee7999f816b10fc1419a87" translate="yes" xml:space="preserve">
          <source>Our &lt;code&gt;edit&lt;/code&gt; page looks very similar to the &lt;code&gt;new&lt;/code&gt; page; in fact, they both share the same code for displaying the form. Let's remove this duplication by using a view partial. By convention, partial files are prefixed with an underscore.</source>
          <target state="translated">当社の &lt;code&gt;edit&lt;/code&gt; ページでは、と非常によく似ています &lt;code&gt;new&lt;/code&gt; ページ。実際、どちらもフォームを表示するための同じコードを共有しています。ビューのパーシャルを使用して、この重複を削除しましょう。慣例により、部分ファイルには下線が前に付けられます。</target>
        </trans-unit>
        <trans-unit id="2e2ce9b9e13fd8245af3e94ec150aa030c6a70af" translate="yes" xml:space="preserve">
          <source>Our Rails application receives this request.</source>
          <target state="translated">当社のRailsアプリケーションはこのリクエストを受信します。</target>
        </trans-unit>
        <trans-unit id="82eeec9fd8f73f99fcc6143ff8b19533c75db304" translate="yes" xml:space="preserve">
          <source>Our Rubyist instinct quickly sees some redundancy in there: If classes were defined in files matching their name, couldn't their loading be automated somehow? We could save scanning the file for dependencies, which is brittle.</source>
          <target state="translated">私たちのRubyistの本能は、そこに冗長性があることにすぐに気がつきます。もしクラスが名前にマッチしたファイルで定義されているなら、その読み込みはどうにかして自動化できないものでしょうか?依存関係を探すためにファイルをスキャンする手間を省くことができますが、これは脆いです。</target>
        </trans-unit>
        <trans-unit id="c6e45b9cc1b4d086cee8e2c7013c2bc9acac8f0d" translate="yes" xml:space="preserve">
          <source>Our new generator is quite simple: it inherits from &lt;code&gt;Rails::Generators::Base&lt;/code&gt; and has one method definition. When a generator is invoked, each public method in the generator is executed sequentially in the order that it is defined. Finally, we invoke the &lt;code&gt;create_file&lt;/code&gt; method that will create a file at the given destination with the given content. If you are familiar with the Rails Application Templates API, you'll feel right at home with the new generators API.</source>
          <target state="translated">新しいジェネレーターは非常にシンプルです &lt;code&gt;Rails::Generators::Base&lt;/code&gt; を継承し、1つのメソッド定義を持っています。ジェネレーターが呼び出されると、ジェネレーター内の各パブリックメソッドは、定義された順序で順番に実行されます。最後に、 &lt;code&gt;create_file&lt;/code&gt; メソッドを呼び出して、指定された宛先に、指定されたコンテンツでファイルを作成します。RailsアプリケーションテンプレートAPIに精通している場合は、新しいジェネレーターAPIに慣れているはずです。</target>
        </trans-unit>
        <trans-unit id="b1bd646f38a3eef656ac0e0c5c2bb44de5157d99" translate="yes" xml:space="preserve">
          <source>Our test should now look something as what follows. Disregard the other tests for now, we're leaving them out for brevity.</source>
          <target state="translated">テストは次のようになるはずです 今のところ他のテストは無視してください。</target>
        </trans-unit>
        <trans-unit id="95461b950981122aa65ad0a7032ed4e287b96375" translate="yes" xml:space="preserve">
          <source>Out of the box, only &lt;code&gt;:json&lt;/code&gt; is supported. But for any custom MIME types you've registered, you can add your own encoders with:</source>
          <target state="translated">&lt;code&gt;:json&lt;/code&gt; は、：jsonのみがサポートされています。ただし、登録したカスタムMIMEタイプの場合、独自のエンコーダーを追加できます。</target>
        </trans-unit>
        <trans-unit id="d9cc29509d84069896dfef67f7c4cab5f0313961" translate="yes" xml:space="preserve">
          <source>Output Safety</source>
          <target state="translated">出力の安全性</target>
        </trans-unit>
        <trans-unit id="e6e28eb9764c2a5229fdbe174f04f0ae264c0938" translate="yes" xml:space="preserve">
          <source>Output the contents of a file in the template's &lt;code&gt;source_path&lt;/code&gt;, usually a README.</source>
          <target state="translated">テンプレートの &lt;code&gt;source_path&lt;/code&gt; （通常はREADME）にあるファイルの内容を出力します。</target>
        </trans-unit>
        <trans-unit id="f3c8c95c5e534bcd2ea0034a0d83177efa6923f4" translate="yes" xml:space="preserve">
          <source>Output:</source>
          <target state="translated">Output:</target>
        </trans-unit>
        <trans-unit id="db12a660e44a55964f23231b7a5be02a5431ac7b" translate="yes" xml:space="preserve">
          <source>Outputs a deprecation warning to the output configured by &lt;code&gt;ActiveSupport::Deprecation.behavior&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ActiveSupport::Deprecation.behavior&lt;/code&gt; によって構成された出力に廃止警告を出力します。</target>
        </trans-unit>
        <trans-unit id="5073681bae3f53719b2d119a4e559576cfc4e4cc" translate="yes" xml:space="preserve">
          <source>Outputs a select box like:</source>
          <target state="translated">のようなセレクトボックスを出力します。</target>
        </trans-unit>
        <trans-unit id="a799df6908de749cf99e44f989a579ffc9e4173f" translate="yes" xml:space="preserve">
          <source>Outputs select boxes like:</source>
          <target state="translated">のようなセレクトボックスを出力します。</target>
        </trans-unit>
        <trans-unit id="bd45310d7cdd6bf8d77dab304bf862ac96670313" translate="yes" xml:space="preserve">
          <source>Outputs text along with how long it took to run its block. If the block returns an integer it assumes it is the number of rows affected.</source>
          <target state="translated">ブロックの実行にかかった時間と一緒にテキストを出力します。ブロックが整数を返す場合は、影響を受けた行の数を想定しています。</target>
        </trans-unit>
        <trans-unit id="6ee76fa98a639a0ac269010b7032639b0a171647" translate="yes" xml:space="preserve">
          <source>Outputs:</source>
          <target state="translated">Outputs:</target>
        </trans-unit>
        <trans-unit id="2cad32653578534c0fce4b84f3d17dfe365988ae" translate="yes" xml:space="preserve">
          <source>Outside of a Rails application, manipulate &lt;code&gt;ActiveStorage.analyzers&lt;/code&gt; instead.</source>
          <target state="translated">Railsアプリケーションの外で、代わりに &lt;code&gt;ActiveStorage.analyzers&lt;/code&gt; を操作します。</target>
        </trans-unit>
        <trans-unit id="cf990db8f5aef3dcee23798a692bb46525a2324f" translate="yes" xml:space="preserve">
          <source>Outside of a Rails application, modify &lt;code&gt;ActiveStorage.previewers&lt;/code&gt; instead.</source>
          <target state="translated">Railsアプリケーションの外で、代わりに &lt;code&gt;ActiveStorage.previewers&lt;/code&gt; を変更します。</target>
        </trans-unit>
        <trans-unit id="9eb06d2788e90ddfe556348a6c5937f5f35cd508" translate="yes" xml:space="preserve">
          <source>Override &lt;code&gt;AbstractController::Base#process_action&lt;/code&gt; to run the &lt;code&gt;process_action&lt;/code&gt; callbacks around the normal behavior.</source>
          <target state="translated">&lt;code&gt;AbstractController::Base#process_action&lt;/code&gt; をオーバーライドして、通常の動作に &lt;code&gt;process_action&lt;/code&gt; コールバックを実行します。</target>
        </trans-unit>
        <trans-unit id="53e94313642caff82ab1212d6d182d25d760d8ec" translate="yes" xml:space="preserve">
          <source>Override Rack's &lt;a href=&quot;request#method-i-GET&quot;&gt;#GET&lt;/a&gt; method to support indifferent access.</source>
          <target state="translated">無関心なアクセスをサポートするには、Rackの&lt;a href=&quot;request#method-i-GET&quot;&gt;#GET&lt;/a&gt;メソッドをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="f2a531a0ffbd70dccc6aed08cbd3243abf2efc00" translate="yes" xml:space="preserve">
          <source>Override Rack's &lt;a href=&quot;request#method-i-GET&quot;&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/a&gt; method to support indifferent access.</source>
          <target state="translated">ラックの&lt;a href=&quot;request#method-i-GET&quot;&gt; &lt;code&gt;GET&lt;/code&gt; &lt;/a&gt;メソッドをオーバーライドして、無関心なアクセスをサポートします。</target>
        </trans-unit>
        <trans-unit id="f7919d6c7900a9ba2c6cb14bf7e61b2f06e55d0e" translate="yes" xml:space="preserve">
          <source>Override Rack's &lt;a href=&quot;request#method-i-POST&quot;&gt;#POST&lt;/a&gt; method to support indifferent access.</source>
          <target state="translated">無関心なアクセスをサポートするために、Rackの&lt;a href=&quot;request#method-i-POST&quot;&gt;#POST&lt;/a&gt;メソッドをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="59c44bd820667c81a8ab50744c4e43e903e079ce" translate="yes" xml:space="preserve">
          <source>Override Rack's &lt;a href=&quot;request#method-i-POST&quot;&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/a&gt; method to support indifferent access.</source>
          <target state="translated">ラックの&lt;a href=&quot;request#method-i-POST&quot;&gt; &lt;code&gt;POST&lt;/code&gt; &lt;/a&gt;メソッドをオーバーライドして、無関心なアクセスをサポートします。</target>
        </trans-unit>
        <trans-unit id="6ed186c4c96af29b90fa2e8ff78f11527c0c5d78" translate="yes" xml:space="preserve">
          <source>Override the default form builder for all views rendered by this controller and any of its descendants. Accepts a subclass of &lt;code&gt;ActionView::Helpers::FormBuilder&lt;/code&gt;.</source>
          <target state="translated">このコントローラーとその子孫によってレンダリングされるすべてのビューのデフォルトのフォームビルダーをオーバーライドします。 &lt;code&gt;ActionView::Helpers::FormBuilder&lt;/code&gt; サブクラスを受け入れます。</target>
        </trans-unit>
        <trans-unit id="571d157055fbe9494924014185113ca02f5063d6" translate="yes" xml:space="preserve">
          <source>Override the template to digest by passing &lt;code&gt;:template&lt;/code&gt; to &lt;code&gt;fresh_when&lt;/code&gt; and &lt;code&gt;stale?&lt;/code&gt; calls. For example:</source>
          <target state="translated">&lt;code&gt;:template&lt;/code&gt; を &lt;code&gt;fresh_when&lt;/code&gt; と &lt;code&gt;stale?&lt;/code&gt; 渡して、ダイジェストするテンプレートをオーバーライドしますか？呼び出します。例えば：</target>
        </trans-unit>
        <trans-unit id="659843aa814204b022a832480caa1f4343072659" translate="yes" xml:space="preserve">
          <source>Override this method if you want to customize when detailed exceptions must be shown. This method is only called when &lt;code&gt;consider_all_requests_local&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;. By default, it returns &lt;code&gt;false&lt;/code&gt;, but someone may set it to &lt;code&gt;request.local?&lt;/code&gt; so local requests in production still show the detailed exception pages.</source>
          <target state="translated">詳細な例外を表示する必要がある場合にカスタマイズする場合は、このメソッドをオーバーライドします。このメソッドは、 &lt;code&gt;consider_all_requests_local&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; の場合にのみ呼び出されます。デフォルトでは &lt;code&gt;false&lt;/code&gt; を返しますが、誰かが &lt;code&gt;request.local?&lt;/code&gt; そのため、本番環境のローカルリクエストには、詳細な例外ページが引き続き表示されます。</target>
        </trans-unit>
        <trans-unit id="c42a76cfef9d5dca0685def9c9a30426da14b5d6" translate="yes" xml:space="preserve">
          <source>Override this method in a concrete subclass. Have it return a &lt;a href=&quot;../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; of metadata.</source>
          <target state="translated">具体的なサブクラスでこのメソッドをオーバーライドします。メタデータの&lt;a href=&quot;../hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt;を返すようにします。</target>
        </trans-unit>
        <trans-unit id="c5cbba4c825939538cd3c4052d8c629401395619" translate="yes" xml:space="preserve">
          <source>Override this method in a concrete subclass. Have it return a &lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt; of metadata.</source>
          <target state="translated">このメソッドを具象サブクラスでオーバーライドします。メタデータの&lt;a href=&quot;../hash&quot;&gt;ハッシュ&lt;/a&gt;を返すようにします。</target>
        </trans-unit>
        <trans-unit id="ccda585cbf2158ac6aae0522f1b4ebe6798fdc6e" translate="yes" xml:space="preserve">
          <source>Override this method in a concrete subclass. Have it yield an attachable preview image (i.e. anything accepted by &lt;a href=&quot;attached/one#method-i-attach&quot;&gt;&lt;code&gt;ActiveStorage::Attached::One#attach&lt;/code&gt;&lt;/a&gt;). Pass the additional options to the underlying blob that is created.</source>
          <target state="translated">具体的なサブクラスでこのメソッドをオーバーライドします。添付可能なプレビュー画像（つまり、&lt;a href=&quot;attached/one#method-i-attach&quot;&gt; &lt;code&gt;ActiveStorage::Attached::One#attach&lt;/code&gt; &lt;/a&gt;によって受け入れられるもの）を生成するようにします。作成された基になるblobに追加のオプションを渡します。</target>
        </trans-unit>
        <trans-unit id="7012fde9def053cf38f8839597f7a9e51474af2c" translate="yes" xml:space="preserve">
          <source>Override this method in a concrete subclass. Have it yield an attachable preview image (i.e. anything accepted by &lt;a href=&quot;attached/one#method-i-attach&quot;&gt;ActiveStorage::Attached::One#attach&lt;/a&gt;).</source>
          <target state="translated">このメソッドを具象サブクラスでオーバーライドします。&lt;a href=&quot;attached/one#method-i-attach&quot;&gt;アタッチ&lt;/a&gt;可能なプレビュー画像（つまり、ActiveStorage :: Attached :: One＃attachで受け入れられるもの）を生成します。</target>
        </trans-unit>
        <trans-unit id="ea62c6865b9d12d1a6525780dd25898deabdfa91" translate="yes" xml:space="preserve">
          <source>Override this method in a module to change the default behavior.</source>
          <target state="translated">モジュール内のこのメソッドをオーバーライドして、デフォルトの動作を変更します。</target>
        </trans-unit>
        <trans-unit id="1e4dfdfb3026247d292bbe54b879d99d5ae0cba6" translate="yes" xml:space="preserve">
          <source>Override this method in subclasses with validation logic, adding errors to the records &lt;code&gt;errors&lt;/code&gt; array where necessary.</source>
          <target state="translated">検証ロジックを使用してサブクラスでこのメソッドをオーバーライドし、必要に応じてrecords &lt;code&gt;errors&lt;/code&gt; 配列にエラーを追加します。</target>
        </trans-unit>
        <trans-unit id="2dd08da67482a0c2c313df115f9a10cc17fc9d73" translate="yes" xml:space="preserve">
          <source>Override to return the quoted table name for assignment. Defaults to table quoting.</source>
          <target state="translated">代入のために引用符で囲まれたテーブル名を返すためにオーバーライドします。デフォルトはテーブルクォートです。</target>
        </trans-unit>
        <trans-unit id="a6e61b07bdd533dfaaa49e91b7ff70db783ff858" translate="yes" xml:space="preserve">
          <source>Override to turn off referential integrity while executing &lt;code&gt;&amp;amp;block&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;amp;block&lt;/code&gt; の実行中に参照整合性をオフにするようにオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="c9a21b54296187abac059d1a77a2e0b1268dbb78" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../../abstractcontroller/base#method-i-controller_path&quot;&gt;&lt;code&gt;AbstractController::Base#controller_path&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../abstractcontroller/base#method-i-controller_path&quot;&gt; &lt;code&gt;AbstractController::Base#controller_path&lt;/code&gt; &lt;/a&gt;オーバーライドします</target>
        </trans-unit>
        <trans-unit id="88fb530427339453796067daade2efe913742636" translate="yes" xml:space="preserve">
          <source>Overrides may be organized in a dedicated directory &lt;code&gt;app/overrides&lt;/code&gt; that is preloaded in a &lt;code&gt;to_prepare&lt;/code&gt; callback.</source>
          <target state="translated">オーバーライドは、 &lt;code&gt;to_prepare&lt;/code&gt; コールバックでプリロードされる専用のディレクトリ &lt;code&gt;app/overrides&lt;/code&gt; で編成できます。</target>
        </trans-unit>
        <trans-unit id="10c12a7eb4d3f6a7bc6548f5bd29111edbbe19f4" translate="yes" xml:space="preserve">
          <source>Overrides the application config to specify if an error should be raised when an order is present in the relation.</source>
          <target state="translated">リレーション内にオーダーが存在する場合にエラーが発生するかどうかを指定するために、アプリケーションの設定をオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="dee469c249d0b808f02f56c8e00d57f1ac89da78" translate="yes" xml:space="preserve">
          <source>Overrides the default inspect method with a human readable one, e.g., &amp;ldquo;Mon, 21 Feb 2005 14:30:00 +0000&amp;rdquo;.</source>
          <target state="translated">「Mon、21 Feb 2005 14:30:00 +0000」のように、人間が読める形式でデフォルトのinspectメソッドをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="f7e80c9f4d92d1acebc7a3aa867dcf62d6b13f32" translate="yes" xml:space="preserve">
          <source>Overrides the default inspect method with a human readable one, e.g., &amp;ldquo;Mon, 21 Feb 2005&amp;rdquo;</source>
          <target state="translated">デフォルトのinspectメソッドを人間が読める形式でオーバーライドします。たとえば、「Mon、21 Feb 2005」</target>
        </trans-unit>
        <trans-unit id="bdcc150066449639a774339b07b0656ab30c52b4" translate="yes" xml:space="preserve">
          <source>Overrides the default resource identifier &lt;code&gt;:id&lt;/code&gt; (name of the dynamic segment used to generate the routes). You can access that segment from your controller using &lt;code&gt;params[&amp;lt;:param&amp;gt;]&lt;/code&gt;. In your router:</source>
          <target state="translated">デフォルトのリソース識別子 &lt;code&gt;:id&lt;/code&gt; （ルートの生成に使用される動的セグメントの名前）を上書きします。 &lt;code&gt;params[&amp;lt;:param&amp;gt;]&lt;/code&gt; を使用して、コントローラからそのセグメントにアクセスできます。ルーターで：</target>
        </trans-unit>
        <trans-unit id="ca9f6506fa932787a54e9bdb193b09d95399befe" translate="yes" xml:space="preserve">
          <source>Overriding Conditions</source>
          <target state="translated">上書き条件</target>
        </trans-unit>
        <trans-unit id="3270cba4a12bbee17dc198df863938fcecb8dccb" translate="yes" xml:space="preserve">
          <source>Overriding Models and Controllers</source>
          <target state="translated">モデルとコントローラのオーバーライド</target>
        </trans-unit>
        <trans-unit id="9d6c57d88b0469224ce074af29a7bb1cc5f9520c" translate="yes" xml:space="preserve">
          <source>Overriding Named Route Parameters</source>
          <target state="translated">指定されたルートパラメータのオーバーライド</target>
        </trans-unit>
        <trans-unit id="89b862244aeff64fb478f03c9520e3820b7d2020" translate="yes" xml:space="preserve">
          <source>Overriding Views</source>
          <target state="translated">ビューを上書きする</target>
        </trans-unit>
        <trans-unit id="b01ade22900da9d817f3e960e0000a5a3809c736" translate="yes" xml:space="preserve">
          <source>Overriding case equality method so that it returns true for &lt;a href=&quot;activesupport/timewithzone&quot;&gt;&lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt;&lt;/a&gt; instances</source>
          <target state="translated">&lt;a href=&quot;activesupport/timewithzone&quot;&gt; &lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt; &lt;/a&gt;インスタンスに対してtrueを返すように、大文字と小文字を区別するメソッドをオーバーライドします</target>
        </trans-unit>
        <trans-unit id="92c315e5288623e3b3ed038cc018c03e7cfb2a7b" translate="yes" xml:space="preserve">
          <source>Overriding case equality method so that it returns true for &lt;a href=&quot;activesupport/timewithzone&quot;&gt;ActiveSupport::TimeWithZone&lt;/a&gt; instances</source>
          <target state="translated">大文字と小文字の等価メソッドをオーバーライドして、&lt;a href=&quot;activesupport/timewithzone&quot;&gt;ActiveSupport :: TimeWithZone&lt;/a&gt;インスタンスに対してtrueを返すようにする</target>
        </trans-unit>
        <trans-unit id="f70e9816d1335e9ecac8ce4349ea6c1acacddced" translate="yes" xml:space="preserve">
          <source>Overriding generated methods</source>
          <target state="translated">生成されたメソッドのオーバーライド</target>
        </trans-unit>
        <trans-unit id="6d3b8c946ae9aa45abae96fe1f8735ec71a9507a" translate="yes" xml:space="preserve">
          <source>Overriding the &lt;code&gt;new&lt;/code&gt; and &lt;code&gt;edit&lt;/code&gt; Segments</source>
          <target state="translated">&lt;code&gt;new&lt;/code&gt; および &lt;code&gt;edit&lt;/code&gt; セグメントのオーバーライド</target>
        </trans-unit>
        <trans-unit id="90e0d2c47827d98e652a159081209b6e9461aaa1" translate="yes" xml:space="preserve">
          <source>Overriding the Named Route Helpers</source>
          <target state="translated">指定されたルートヘルパーをオーバーライドする</target>
        </trans-unit>
        <trans-unit id="669e0882b1c84525a463608f90e7d793dfd9fb15" translate="yes" xml:space="preserve">
          <source>Overriding the Naming Conventions</source>
          <target state="translated">命名規則を上書きする</target>
        </trans-unit>
        <trans-unit id="022551d0b5cfff55add0a874e764a3914ba97024" translate="yes" xml:space="preserve">
          <source>Overriding the Singular Form</source>
          <target state="translated">単数形を上書きする</target>
        </trans-unit>
        <trans-unit id="2366865074e7efbeee7afe7de989a0887b46048f" translate="yes" xml:space="preserve">
          <source>Overriding the default service is done the same way as &lt;code&gt;has_one_attached&lt;/code&gt;, by using the &lt;code&gt;service&lt;/code&gt; option:</source>
          <target state="translated">デフォルトのサービスのオーバーライドは、 &lt;code&gt;has_one_attached&lt;/code&gt; と同じ方法で、 &lt;code&gt;service&lt;/code&gt; オプションを使用して行われます。</target>
        </trans-unit>
        <trans-unit id="c57a79f08c0cfc90c7aa58ae5662e09a1242045c" translate="yes" xml:space="preserve">
          <source>Overview of Other Built-In Methods that Provide I18n Support</source>
          <target state="translated">I18n サポートを提供する他の組み込みメソッドの概要</target>
        </trans-unit>
        <trans-unit id="250f8698775adafaacdd138110b24ac4b3a25c5d" translate="yes" xml:space="preserve">
          <source>Overview of helpers provided by Action View</source>
          <target state="translated">Action Viewが提供するヘルパーの概要</target>
        </trans-unit>
        <trans-unit id="79d8fe12b72857cd0d717cc558336c7470d3bf78" translate="yes" xml:space="preserve">
          <source>Overview of the I18n API Features</source>
          <target state="translated">I18n APIの機能概要</target>
        </trans-unit>
        <trans-unit id="f0b72a670aa3d37fcd434591b7a0698af5c095d1" translate="yes" xml:space="preserve">
          <source>Overview: How the Pieces Fit Together</source>
          <target state="translated">概要 どのようにしてパーツが組み合わされるのか</target>
        </trans-unit>
        <trans-unit id="e58468af38728c26a2326850cb6e380597f34497" translate="yes" xml:space="preserve">
          <source>Overwrite &lt;a href=&quot;classmethods#method-i-modules_for_helpers&quot;&gt;#modules_for_helpers&lt;/a&gt; to accept :all as argument, which loads all helpers in helpers_path.</source>
          <target state="translated">&lt;a href=&quot;classmethods#method-i-modules_for_helpers&quot;&gt;#modules_for_helpers&lt;/a&gt;を上書きして、：allを引数として受け入れます。これにより、helpers_path内のすべてのヘルパーがロードされます。</target>
        </trans-unit>
        <trans-unit id="dd4a30fb6d3f3241d8540ee8efd968d3c88d68d8" translate="yes" xml:space="preserve">
          <source>Overwrite &lt;a href=&quot;classmethods#method-i-modules_for_helpers&quot;&gt;&lt;code&gt;modules_for_helpers&lt;/code&gt;&lt;/a&gt; to accept :all as argument, which loads all helpers in helpers_path.</source>
          <target state="translated">&lt;a href=&quot;classmethods#method-i-modules_for_helpers&quot;&gt; &lt;code&gt;modules_for_helpers&lt;/code&gt; &lt;/a&gt;を上書きして、引数として：allを受け入れます。これにより、helpers_pathにすべてのヘルパーがロードされます。</target>
        </trans-unit>
        <trans-unit id="377113a11fffe769ccb21030e23f3ed12c9cdb39" translate="yes" xml:space="preserve">
          <source>Overwrite if you use another logger in your log subscriber.</source>
          <target state="translated">ログ購読者で別のロガーを使用している場合は上書きします。</target>
        </trans-unit>
        <trans-unit id="fd91ce0a15e301cc12092b4fb7d5d20f779176cd" translate="yes" xml:space="preserve">
          <source>Overwrites &lt;a href=&quot;renderinghelper#method-i-_layout_for&quot;&gt;#_layout_for&lt;/a&gt; in the context object so it supports the case a block is passed to a partial. Returns the contents that are yielded to a layout, given a name or a block.</source>
          <target state="translated">コンテキストオブジェクトの&lt;a href=&quot;renderinghelper#method-i-_layout_for&quot;&gt;#_layout_for&lt;/a&gt;を上書きして、ブロックがパーシャルに渡されるケースをサポートします。名前またはブロックを指定して、レイアウトに生成されるコンテンツを返します。</target>
        </trans-unit>
        <trans-unit id="972e63970b01609ddcc511be0abbc2c963f93908" translate="yes" xml:space="preserve">
          <source>Overwrites &lt;a href=&quot;renderinghelper#method-i-_layout_for&quot;&gt;&lt;code&gt;_layout_for&lt;/code&gt;&lt;/a&gt; in the context object so it supports the case a block is passed to a partial. Returns the contents that are yielded to a layout, given a name or a block.</source>
          <target state="translated">コンテキストオブジェクトの&lt;a href=&quot;renderinghelper#method-i-_layout_for&quot;&gt; &lt;code&gt;_layout_for&lt;/code&gt; &lt;/a&gt;を上書きして、ブロックがパーシャルに渡される場合をサポートするようにします。名前またはブロックを指定して、レイアウトに生成されるコンテンツを返します。</target>
        </trans-unit>
        <trans-unit id="67b0fe5a4f794163b7967149d7e9e868c0d3c372" translate="yes" xml:space="preserve">
          <source>Overwriting default accessors</source>
          <target state="translated">デフォルトのアクセサを上書きする</target>
        </trans-unit>
        <trans-unit id="632cbb4fc12f547a9fb541687f690a1c40922419" translate="yes" xml:space="preserve">
          <source>PAIR_RE</source>
          <target state="translated">PAIR_RE</target>
        </trans-unit>
        <trans-unit id="aee8bc7166d89a34266bdcdf618cc34eff0a73e4" translate="yes" xml:space="preserve">
          <source>PARAMETERS_KEY</source>
          <target state="translated">PARAMETERS_KEY</target>
        </trans-unit>
        <trans-unit id="03894bbce303c9f9c81bfff9b4f44824921f46bc" translate="yes" xml:space="preserve">
          <source>PARAMETER_SEPARATOR_REGEXP</source>
          <target state="translated">PARAMETER_SEPARATOR_REGEXP</target>
        </trans-unit>
        <trans-unit id="f121cf6b1467678cdd4035a2748dc437b3974eab" translate="yes" xml:space="preserve">
          <source>PARTS</source>
          <target state="translated">PARTS</target>
        </trans-unit>
        <trans-unit id="783c9e559f81aabe784bd2a18a361eb09fab2dd9" translate="yes" xml:space="preserve">
          <source>PARTS_IN_SECONDS</source>
          <target state="translated">PARTS_IN_SECONDS</target>
        </trans-unit>
        <trans-unit id="49563801c516b55fcf9b36b38aa49d7fa71d1757" translate="yes" xml:space="preserve">
          <source>PATCH/PUT</source>
          <target state="translated">PATCH/PUT</target>
        </trans-unit>
        <trans-unit id="bcb7b622110501134d7fc62face8b2201ad5830b" translate="yes" xml:space="preserve">
          <source>PATCH/PUT update</source>
          <target state="translated">PATCH/PUT更新</target>
        </trans-unit>
        <trans-unit id="84c16d6a502dba6bf2d3fee213424d5d6bfb7b62" translate="yes" xml:space="preserve">
          <source>PATTERN</source>
          <target state="translated">PATTERN</target>
        </trans-unit>
        <trans-unit id="74d229d608de046fae2425ce1bf3de88fe485b7c" translate="yes" xml:space="preserve">
          <source>PERMITTED_OPTIONS</source>
          <target state="translated">PERMITTED_OPTIONS</target>
        </trans-unit>
        <trans-unit id="fd6908029161a849d74ee36b9f60d2b8ba2c087c" translate="yes" xml:space="preserve">
          <source>PERMITTED_SCALAR_TYPES</source>
          <target state="translated">PERMITTED_SCALAR_TYPES</target>
        </trans-unit>
        <trans-unit id="7e72115c5e8184f1664db535ffd560b5c9313d19" translate="yes" xml:space="preserve">
          <source>PER_ENTRY_OVERHEAD</source>
          <target state="translated">PER_ENTRY_OVERHEAD</target>
        </trans-unit>
        <trans-unit id="3f6cfaca9cb2539631de34afb5b2889fb12e4df1" translate="yes" xml:space="preserve">
          <source>PETABYTE</source>
          <target state="translated">PETABYTE</target>
        </trans-unit>
        <trans-unit id="31be469709fb845b0652caa330c99da8dd3e968e" translate="yes" xml:space="preserve">
          <source>POLICY</source>
          <target state="translated">POLICY</target>
        </trans-unit>
        <trans-unit id="61ff81c30aa3c76e78afea62b2e3bd1dfa49e854" translate="yes" xml:space="preserve">
          <source>POST</source>
          <target state="translated">POST</target>
        </trans-unit>
        <trans-unit id="6558fd6a36a1d6db28cadd3ec21faf8102d63e2f" translate="yes" xml:space="preserve">
          <source>POST create</source>
          <target state="translated">POST作成</target>
        </trans-unit>
        <trans-unit id="4dcb288a15db232057a84beb4f11f41994519e90" translate="yes" xml:space="preserve">
          <source>POST create PATCH/PUT update</source>
          <target state="translated">POST create PATCH/PUT update</target>
        </trans-unit>
        <trans-unit id="7d3be5984ced74e5dc11668f62d29dfe705b3a55" translate="yes" xml:space="preserve">
          <source>POST()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">POST（）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="64b8158d7ad4f6f15e1f37ea3bf9e1c7336f2b59" translate="yes" xml:space="preserve">
          <source>PRECISIONS</source>
          <target state="translated">PRECISIONS</target>
        </trans-unit>
        <trans-unit id="4d6909ebad0e685a6888b06fc446e18b7c06dc51" translate="yes" xml:space="preserve">
          <source>PRECOMPRESSED</source>
          <target state="translated">PRECOMPRESSED</target>
        </trans-unit>
        <trans-unit id="f812723c15ec2dcd8ff1e0f5c3451028487d137f" translate="yes" xml:space="preserve">
          <source>PREFIXED_PARTIAL_NAMES</source>
          <target state="translated">PREFIXED_PARTIAL_NAMES</target>
        </trans-unit>
        <trans-unit id="12ad8dab5ed4cd63c77c46353e2a61ae6d4c644c" translate="yes" xml:space="preserve">
          <source>PRE_CONTENT_STRINGS</source>
          <target state="translated">PRE_CONTENT_STRINGS</target>
        </trans-unit>
        <trans-unit id="b0b7ba4666a92774e0d1afe02f2e20982b307a35" translate="yes" xml:space="preserve">
          <source>PRIVATE</source>
          <target state="translated">PRIVATE</target>
        </trans-unit>
        <trans-unit id="3503939d8cdf2bedfbf2dc57507b92d04a3bc5f7" translate="yes" xml:space="preserve">
          <source>PROTECTED_IVARS</source>
          <target state="translated">PROTECTED_IVARS</target>
        </trans-unit>
        <trans-unit id="6fcc917173ee9015a6560e3977ce67bc97156a09" translate="yes" xml:space="preserve">
          <source>PROTOCOL_REGEXP</source>
          <target state="translated">PROTOCOL_REGEXP</target>
        </trans-unit>
        <trans-unit id="d1785ca28c3a4d29a6edef1520c544b838a93db3" translate="yes" xml:space="preserve">
          <source>PUBLIC</source>
          <target state="translated">PUBLIC</target>
        </trans-unit>
        <trans-unit id="0595753673b07a799cea5ec4da8674a00ed89291" translate="yes" xml:space="preserve">
          <source>Page Caching</source>
          <target state="translated">ページキャッシング</target>
        </trans-unit>
        <trans-unit id="f0aee076e25e3e98bd0dba60b5e41a072af0fb2b" translate="yes" xml:space="preserve">
          <source>Page Caching cannot be used for actions that have before filters - for example, pages that require authentication. This is where Action Caching comes in. Action Caching works like Page Caching except the incoming web request hits the Rails stack so that before filters can be run on it before the cache is served. This allows authentication and other restrictions to be run while still serving the result of the output from a cached copy.</source>
          <target state="translated">ページキャッシングはフィルタ以前のアクション、例えば認証が必要なページには使用できません。そこで登場するのがAction Cachingです。Action Cachingはページキャッシングと同じように動作しますが、入ってきたWebリクエストがRailsスタックにヒットすることで、キャッシュが提供される前にフィルタを実行できるようにしています。これにより、認証やその他の制限を実行しながら、キャッシュされたコピーからの出力結果を提供することができます。</target>
        </trans-unit>
        <trans-unit id="29df9fff8fa01468100d5eb51c3265997a1d99f1" translate="yes" xml:space="preserve">
          <source>Page Caching has been removed from Rails 4. See the &lt;a href=&quot;https://github.com/rails/actionpack-page_caching&quot;&gt;actionpack-page_caching gem&lt;/a&gt;.</source>
          <target state="translated">Rails 4からページキャッシングが削除されました&lt;a href=&quot;https://github.com/rails/actionpack-page_caching&quot;&gt;。actionpack-page_caching gemを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9299d5eeb4a18817fc53da773b387a9845a190f9" translate="yes" xml:space="preserve">
          <source>Page Change Events</source>
          <target state="translated">ページ変更イベント</target>
        </trans-unit>
        <trans-unit id="01c14f44cdf9f738128c66f96575d2dd9d6b7f5a" translate="yes" xml:space="preserve">
          <source>Page caching is a Rails mechanism which allows the request for a generated page to be fulfilled by the web server (i.e. Apache or NGINX) without having to go through the entire Rails stack. While this is super fast it can't be applied to every situation (such as pages that need authentication). Also, because the web server is serving a file directly from the filesystem you will need to implement cache expiration.</source>
          <target state="translated">ページキャッシュはRailsの仕組みで、Railsスタック全体を経由せずに生成されたページへのリクエストをWebサーバ(ApacheやNGINXなど)で満たすことができます。これは超高速ですが、すべての状況(認証が必要なページなど)に適用できるわけではありません。また、Webサーバはファイルシステムから直接ファイルを提供しているため、キャッシュの期限切れを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="b1355b7be3ad2f138ebc1eaaef9d3a2877e2d5df" translate="yes" xml:space="preserve">
          <source>Pairs passed to &lt;code&gt;options_for_select&lt;/code&gt; should have the text first and the value second, however with &lt;code&gt;options_from_collection_for_select&lt;/code&gt; should have the value method first and the text method second.</source>
          <target state="translated">&lt;code&gt;options_for_select&lt;/code&gt; に渡されるペアは、最初にテキストと2番目の値を &lt;code&gt;options_from_collection_for_select&lt;/code&gt; 必要がありますが、options_from_collection_for_selectでは、最初に値メソッドとテキストメソッドを持つ必要があります。</target>
        </trans-unit>
        <trans-unit id="25f56d90fcfd17280003892c8ccacdb0fa403726" translate="yes" xml:space="preserve">
          <source>Parallel Testing</source>
          <target state="translated">パラレルテスト</target>
        </trans-unit>
        <trans-unit id="1d3e4a56ef085e1f6d530ebe735f2ea7925d261c" translate="yes" xml:space="preserve">
          <source>Parallel Testing with Processes</source>
          <target state="translated">プロセスを使った並列テスト</target>
        </trans-unit>
        <trans-unit id="c2e7444f10c0b930c425af0461c5337c0b53c120" translate="yes" xml:space="preserve">
          <source>Parallel Testing with Threads</source>
          <target state="translated">スレッドによる並列テスト</target>
        </trans-unit>
        <trans-unit id="b18e876b783f6455ea0fddc8eaea682e4a6fbe1a" translate="yes" xml:space="preserve">
          <source>Parallel testing allows you to parallelize your test suite. While forking processes is the default method, threading is supported as well. Running tests in parallel reduces the time it takes your entire test suite to run.</source>
          <target state="translated">並列テストでは、テストスイートを並列化することができます。プロセスをフォークするのがデフォルトの方法ですが、スレッディングもサポートされています。並行してテストを実行することで、テストスイート全体の実行にかかる時間を短縮することができます。</target>
        </trans-unit>
        <trans-unit id="221ea1b12f42a6a55d52bf6d5cfb5d76a78f81ff" translate="yes" xml:space="preserve">
          <source>Parallel testing with processes</source>
          <target state="translated">プロセスとの並列テスト</target>
        </trans-unit>
        <trans-unit id="412eec413ecf3c1ff121f0f86e087c63e0b7be10" translate="yes" xml:space="preserve">
          <source>Parallel testing with threads</source>
          <target state="translated">スレッドを使った並列テスト</target>
        </trans-unit>
        <trans-unit id="e0f805c34e06e0feba3fb69efbb9cb3d55153146" translate="yes" xml:space="preserve">
          <source>Parallelizes the test suite.</source>
          <target state="translated">テストスイートを並列化します。</target>
        </trans-unit>
        <trans-unit id="fefc67d1ca265fb5dd938addc782a0f34fb195c8" translate="yes" xml:space="preserve">
          <source>Parameter Parsing: Want to specify your parameters as JSON instead of as a URL-encoded String? No problem. Rails will decode the JSON for you and make it available in &lt;code&gt;params&lt;/code&gt;. Want to use nested URL-encoded parameters? That works too.</source>
          <target state="translated">パラメータの解析：パラメータをURLエンコードされた文字列ではなくJSONとして指定したいですか？問題ない。RailsはJSONをデコードして &lt;code&gt;params&lt;/code&gt; で利用できるようにします。ネストされたURLエンコードパラメータを使用したいですか？それも機能します。</target>
        </trans-unit>
        <trans-unit id="a4a66d075c1503c51aadb896d837605da65392cc" translate="yes" xml:space="preserve">
          <source>Parameter Restriction</source>
          <target state="translated">パラメータ制限</target>
        </trans-unit>
        <trans-unit id="645e054aea0b8233084b6a4f61680bab34d2428f" translate="yes" xml:space="preserve">
          <source>ParameterEncoding</source>
          <target state="translated">ParameterEncoding</target>
        </trans-unit>
        <trans-unit id="a84f9e17c4c0631589680174cc3e50ef9744ee53" translate="yes" xml:space="preserve">
          <source>ParameterEncoding::ClassMethods</source>
          <target state="translated">ParameterEncoding::ClassMethods</target>
        </trans-unit>
        <trans-unit id="c4546575f6e6e13dd391577e8055ad2c8233977e" translate="yes" xml:space="preserve">
          <source>ParameterEncoding::ClassMethods#skip_parameter_encoding</source>
          <target state="translated">ParameterEncoding::ClassMethods#skip_parameter_encoding</target>
        </trans-unit>
        <trans-unit id="657e4a6a1c074a4e23682d693297aea2064d2dbf" translate="yes" xml:space="preserve">
          <source>ParameterFilter</source>
          <target state="translated">ParameterFilter</target>
        </trans-unit>
        <trans-unit id="62a290ca1e0d0831e035465b2ba78943075494d5" translate="yes" xml:space="preserve">
          <source>ParameterFilter#filter</source>
          <target state="translated">ParameterFilter#filter</target>
        </trans-unit>
        <trans-unit id="c28ae4e19bb8f01350e8f3a9d3681587e383e7bb" translate="yes" xml:space="preserve">
          <source>ParameterFilter#filter_param</source>
          <target state="translated">ParameterFilter#filter_param</target>
        </trans-unit>
        <trans-unit id="174a1e1695c688a92704938e6aa11599667c0087" translate="yes" xml:space="preserve">
          <source>ParameterFilter::new</source>
          <target state="translated">ParameterFilter::new</target>
        </trans-unit>
        <trans-unit id="ef431435b7dcd18d8b61cdea7d42c6f296555c0e" translate="yes" xml:space="preserve">
          <source>Parameterized</source>
          <target state="translated">Parameterized</target>
        </trans-unit>
        <trans-unit id="39bf4bba6d2b87fb7a1fe0b7be92684d011ea736" translate="yes" xml:space="preserve">
          <source>Parameterized::ClassMethods</source>
          <target state="translated">Parameterized::ClassMethods</target>
        </trans-unit>
        <trans-unit id="d4a34bc12e1078cadb12179769f431b961f03fa7" translate="yes" xml:space="preserve">
          <source>Parameterized::ClassMethods#with</source>
          <target state="translated">Parameterized::ClassMethods#with</target>
        </trans-unit>
        <trans-unit id="a975eea30db9fa05003e3b5097688bd49ec7e01b" translate="yes" xml:space="preserve">
          <source>Parameters</source>
          <target state="translated">Parameters</target>
        </trans-unit>
        <trans-unit id="61a639e77013711aef323a1dc00bfc9a22c768a9" translate="yes" xml:space="preserve">
          <source>Parameters Filtering</source>
          <target state="translated">パラメタフィルタリング</target>
        </trans-unit>
        <trans-unit id="381c775599d6e4185d4410725809e360928357cd" translate="yes" xml:space="preserve">
          <source>Parameters:</source>
          <target state="translated">Parameters:</target>
        </trans-unit>
        <trans-unit id="2a96b0e3284e6cb9c0de64adf5c031b8d904a8d2" translate="yes" xml:space="preserve">
          <source>ParamsWrapper</source>
          <target state="translated">ParamsWrapper</target>
        </trans-unit>
        <trans-unit id="07979ab9cd724370034eba3a2315e1ecd2327fa9" translate="yes" xml:space="preserve">
          <source>ParamsWrapper#process_action</source>
          <target state="translated">ParamsWrapper#process_action</target>
        </trans-unit>
        <trans-unit id="44cde84177e024385d8e799bbce04ac7b46e62ca" translate="yes" xml:space="preserve">
          <source>ParamsWrapper::ClassMethods</source>
          <target state="translated">ParamsWrapper::ClassMethods</target>
        </trans-unit>
        <trans-unit id="8d5da75cd03009da8eb9ca026d6f4445fa5284e4" translate="yes" xml:space="preserve">
          <source>ParamsWrapper::ClassMethods#inherited</source>
          <target state="translated">ParamsWrapper::ClassMethods#inherited</target>
        </trans-unit>
        <trans-unit id="a00153c096deae306756d549f3308a9ca2da2351" translate="yes" xml:space="preserve">
          <source>ParamsWrapper::ClassMethods#wrap_parameters</source>
          <target state="translated">ParamsWrapper::ClassMethods#wrap_parameters</target>
        </trans-unit>
        <trans-unit id="f836b597f967979e84ffeafb1c4d10e39c5e5fee" translate="yes" xml:space="preserve">
          <source>Parent Namespaces</source>
          <target state="translated">親の名前空間</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
