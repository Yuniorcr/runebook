<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="rails">
    <body>
      <group id="rails">
        <trans-unit id="ff0fbc44503d8cb2db7d66abca56d62be677cace" translate="yes" xml:space="preserve">
          <source>InboundEmail::Routable#route_later</source>
          <target state="translated">InboundEmail::Routable#route_later</target>
        </trans-unit>
        <trans-unit id="acbf3a393e68b6f6f34e91d2c28dcbb1f27f41ad" translate="yes" xml:space="preserve">
          <source>Incineration of InboundEmails</source>
          <target state="translated">インバウンドメールの焼却</target>
        </trans-unit>
        <trans-unit id="46f00fe566c2a85a7ae293976c1f5cc228d97a9f" translate="yes" xml:space="preserve">
          <source>IncinerationJob</source>
          <target state="translated">IncinerationJob</target>
        </trans-unit>
        <trans-unit id="9a3b927462c4fc3601133e7ebb25fa8381442e2e" translate="yes" xml:space="preserve">
          <source>IncinerationJob#perform</source>
          <target state="translated">IncinerationJob#perform</target>
        </trans-unit>
        <trans-unit id="cac65a7ffa3df433e8908fd590e410aeec250ed8" translate="yes" xml:space="preserve">
          <source>IncinerationJob::schedule</source>
          <target state="translated">IncinerationJob::schedule</target>
        </trans-unit>
        <trans-unit id="5c9882c571c76e2d7257004676310a0cdec5e265" translate="yes" xml:space="preserve">
          <source>Include &lt;code&gt;activestorage.js&lt;/code&gt; in your application's JavaScript bundle.</source>
          <target state="translated">アプリケーションのJavaScriptバンドルに &lt;code&gt;activestorage.js&lt;/code&gt; を含めます。</target>
        </trans-unit>
        <trans-unit id="1bec07c62228d9d427b17ec331ffe481e3050aea" translate="yes" xml:space="preserve">
          <source>Include a field with the current UTC time-stamp in it and check it on the server. If it is too far in the past, or if it is in the future, the form is invalid.</source>
          <target state="translated">フィールドに現在のUTCタイムスタンプを入れて、サーバー上で確認します。それがあまりにも過去のものであったり、未来のものであったりすると、フォームは無効になります。</target>
        </trans-unit>
        <trans-unit id="f121e28368bea6b8e2ce8d128829d6efaa5b3b4a" translate="yes" xml:space="preserve">
          <source>Include in a cookie jar to allow chaining, e.g. cookies.permanent.signed.</source>
          <target state="translated">クッキージャーの中に入れてチェーン化を可能にします。</target>
        </trans-unit>
        <trans-unit id="c100b7d867e6c16b5bd5b980d88e6a2a50d8f041" translate="yes" xml:space="preserve">
          <source>Include more than one honeypot field of all types, including submission buttons</source>
          <target state="translated">送信ボタンを含むすべてのタイプのハニーポットフィールドを1つ以上含む</target>
        </trans-unit>
        <trans-unit id="4c5f87743501282fa63fbaffa15c1a3acc9cc8cd" translate="yes" xml:space="preserve">
          <source>Included modules:</source>
          <target state="translated">含まれているモジュール。</target>
        </trans-unit>
        <trans-unit id="bdf9b5829b7161238ada537108b7fe4a6e34fa4e" translate="yes" xml:space="preserve">
          <source>Includes &lt;code&gt;url_for&lt;/code&gt; into the host class (e.g. an abstract controller or mailer). The class has to provide a &lt;code&gt;RouteSet&lt;/code&gt; by implementing the &lt;code&gt;_routes&lt;/code&gt; methods. Otherwise, an exception will be raised.</source>
          <target state="translated">含まれてい &lt;code&gt;url_for&lt;/code&gt; ホストクラス（例えば、抽象コントローラまたはメーラー）へ。クラスは、 &lt;code&gt;_routes&lt;/code&gt; メソッドを実装してRouteSetを提供する &lt;code&gt;RouteSet&lt;/code&gt; があります。それ以外の場合は、例外が発生します。</target>
        </trans-unit>
        <trans-unit id="2b4374eea981f26c15f5994eec0f3f1ab7ef8047" translate="yes" xml:space="preserve">
          <source>Includes &lt;code&gt;url_for&lt;/code&gt; into the host class. The class has to provide a &lt;code&gt;RouteSet&lt;/code&gt; by implementing the &lt;code&gt;_routes&lt;/code&gt; method. Otherwise, an exception will be raised.</source>
          <target state="translated">含まれてい &lt;code&gt;url_for&lt;/code&gt; ホストクラスに。クラスは、 &lt;code&gt;_routes&lt;/code&gt; メソッドを実装してRouteSetを提供する &lt;code&gt;RouteSet&lt;/code&gt; があります。それ以外の場合は、例外が発生します。</target>
        </trans-unit>
        <trans-unit id="f5579a2df75038fb652d0231bd1004d082f10429" translate="yes" xml:space="preserve">
          <source>Includes methods for executing and performing jobs instantly.</source>
          <target state="translated">瞬時にジョブを実行し、実行するためのメソッドを含む。</target>
        </trans-unit>
        <trans-unit id="631b012f0c3aa49dec56ba3a62ff5bff3b8b3f91" translate="yes" xml:space="preserve">
          <source>Includes the &lt;code&gt;perform_later&lt;/code&gt; method for job initialization.</source>
          <target state="translated">ジョブの初期化用の &lt;code&gt;perform_later&lt;/code&gt; メソッドが含まれています。</target>
        </trans-unit>
        <trans-unit id="53c7595c01b9dbfe8612fe4bc1db96f60de2a369" translate="yes" xml:space="preserve">
          <source>Includes the ability to override the default queue name and prefix.</source>
          <target state="translated">デフォルトのキュー名とプレフィックスを上書きする機能を含みます。</target>
        </trans-unit>
        <trans-unit id="e7990a0676a74bda5cc28e40baf19fd593e762c7" translate="yes" xml:space="preserve">
          <source>Includes the ability to override the default queue priority.</source>
          <target state="translated">デフォルトのキューの優先度を上書きする機能を含みます。</target>
        </trans-unit>
        <trans-unit id="62c9858129e9d1c16d3eef60145006748e5bba1e" translate="yes" xml:space="preserve">
          <source>Includes the given modules in the template class.</source>
          <target state="translated">与えられたモジュールをテンプレートクラスにインクルードします。</target>
        </trans-unit>
        <trans-unit id="cbb61314f8aef07993e347f911ec747581366e10" translate="yes" xml:space="preserve">
          <source>Includes the required interface for an object to interact with Action Pack and Action View, using different Active &lt;a href=&quot;model&quot;&gt;&lt;code&gt;Model&lt;/code&gt;&lt;/a&gt; modules. It includes model name introspections, conversions, translations and validations. Besides that, it allows you to initialize the object with a hash of attributes, pretty much like Active Record does.</source>
          <target state="translated">さまざまなアクティブ&lt;a href=&quot;model&quot;&gt; &lt;code&gt;Model&lt;/code&gt; &lt;/a&gt;モジュールを使用して、オブジェクトがアクションパックおよびアクションビューと対話するために必要なインターフェイスが含まれています。これには、モデル名のイントロスペクション、変換、翻訳、および検証が含まれます。さらに、Active Recordとほぼ同じように、属性のハッシュを使用してオブジェクトを初期化できます。</target>
        </trans-unit>
        <trans-unit id="e15c12fa809cf4ddf2cfdca94bdae62aa1fa326a" translate="yes" xml:space="preserve">
          <source>Includes the required interface for an object to interact with Action Pack and Action View, using different Active &lt;a href=&quot;model&quot;&gt;Model&lt;/a&gt; modules. It includes model name introspections, conversions, translations and validations. Besides that, it allows you to initialize the object with a hash of attributes, pretty much like Active Record does.</source>
          <target state="translated">さまざまなアクティブ&lt;a href=&quot;model&quot;&gt;モデル&lt;/a&gt;モジュールを使用して、オブジェクトがアクションパックやアクションビューとやり取りするために必要なインターフェイスが含まれています。モデル名のイントロスペクション、変換、翻訳、検証が含まれます。その上、Active Recordとほぼ同じように、属性のハッシュでオブジェクトを初期化できます。</target>
        </trans-unit>
        <trans-unit id="c7fea2d3a0b9e01a0a5f139f1591c47d3c91bbc9" translate="yes" xml:space="preserve">
          <source>Includes the setter method for changing the active queue adapter.</source>
          <target state="translated">アクティブキューアダプタを変更するためのセッターメソッドを含みます。</target>
        </trans-unit>
        <trans-unit id="aa5f93716a712ea4619d480ed3cde7ae07449569" translate="yes" xml:space="preserve">
          <source>Including &lt;code&gt;ActionController::Live&lt;/code&gt; inside of your controller class will provide all actions inside of the controller the ability to stream data. You can mix in the module like so:</source>
          <target state="translated">コントローラークラス内に &lt;code&gt;ActionController::Live&lt;/code&gt; を含めると、コントローラー内のすべてのアクションにデータをストリーミングする機能が提供されます。次のようにモジュールで混ぜることができます：</target>
        </trans-unit>
        <trans-unit id="bab20420de5d9ccbf10b3dcff8cc1b95ab75628b" translate="yes" xml:space="preserve">
          <source>Including a nonce (a random value) in the session solves replay attacks. A nonce is valid only once, and the server has to keep track of all the valid nonces. It gets even more complicated if you have several application servers. Storing nonces in a database table would defeat the entire purpose of CookieStore (avoiding accessing the database).</source>
          <target state="translated">セッションに nonce (ランダムな値)を含めることでリプレイ攻撃を解決します。nonce は一度しか有効ではなく、サーバは有効な nonce をすべて追跡しなければなりません。複数のアプリケーションサーバがある場合は、さらに複雑になります。データベーステーブルに nonce を保存すると、CookieStore の目的(データベースへのアクセスを避けること)を完全に打ち破ることになります。</target>
        </trans-unit>
        <trans-unit id="3ba3a191a2f605b7f6e1de97049978194d3e3d3a" translate="yes" xml:space="preserve">
          <source>Increment a cached value. This method uses the Redis incr atomic operator and can only be used on values written with the :raw option. Calling it on a value not stored with :raw will initialize that value to zero.</source>
          <target state="translated">キャッシュされた値をインクリメントします。このメソッドは、Redisのincrアトミック演算子を使用し、 :rawオプションで書き込まれた値に対してのみ使用できます。raw で保存されていない値に対してこのメソッドを呼び出すと、その値がゼロに初期化されます。</target>
        </trans-unit>
        <trans-unit id="84d6064c26c32bbd7bab16ef8fd8429566031c22" translate="yes" xml:space="preserve">
          <source>Increment a cached value. This method uses the memcached incr atomic operator and can only be used on values written with the :raw option. Calling it on a value not stored with :raw will initialize that value to zero.</source>
          <target state="translated">キャッシュされた値をインクリメントします。このメソッドは memcached incr アトミック演算子を使用し、 :raw オプションで書き込まれた値に対してのみ使用できます。raw で保存されていない値に対してこのメソッドを呼び出すと、その値がゼロに初期化されます。</target>
        </trans-unit>
        <trans-unit id="dd0c837987bda03b85ceb94f7c3cfea331fe8115" translate="yes" xml:space="preserve">
          <source>Increment a numeric field by one, via a direct SQL update.</source>
          <target state="translated">SQLを直接更新することで、数値フィールドを1つインクリメントします。</target>
        </trans-unit>
        <trans-unit id="975a549b7ff243eb9938d718f3659245c93a9383" translate="yes" xml:space="preserve">
          <source>Increment an integer value in the cache.</source>
          <target state="translated">キャッシュ内の整数値をインクリメントします。</target>
        </trans-unit>
        <trans-unit id="78f8148e4691770bb4ee98b5331ee87d3d67f053" translate="yes" xml:space="preserve">
          <source>Increments an already existing integer value that is stored in the cache. If the key is not found nothing is done.</source>
          <target state="translated">キャッシュに保存されている既存の整数値をインクリメントします。キーが見つからない場合は何もしません。</target>
        </trans-unit>
        <trans-unit id="5c60a79bc55fbbd08f59d91ffb860f8c89bb4d61" translate="yes" xml:space="preserve">
          <source>Increments an integer value in the cache.</source>
          <target state="translated">キャッシュ内の整数値をインクリメントします。</target>
        </trans-unit>
        <trans-unit id="ac8f586235cd9c9a54e04e1582486b97984ef9e5" translate="yes" xml:space="preserve">
          <source>Indeed, those features are provided by Ruby on Rails, where we just write</source>
          <target state="translated">実際、これらの機能はRuby on Railsで提供されています。</target>
        </trans-unit>
        <trans-unit id="15cfadc26717bad880a9fde19a51e2f1ba2fa5ba" translate="yes" xml:space="preserve">
          <source>Indent the &lt;code&gt;Gemfile&lt;/code&gt; to the depth of @indentation</source>
          <target state="translated">&lt;code&gt;Gemfile&lt;/code&gt; を@indentationの深さまでインデントします</target>
        </trans-unit>
        <trans-unit id="55a69bd5ad72c95be80535a77a034016a752d59f" translate="yes" xml:space="preserve">
          <source>Indents the lines in the receiver:</source>
          <target state="translated">受信機のラインをインデントします。</target>
        </trans-unit>
        <trans-unit id="383b324a3291b51f1e54ef9c0d763010fbc5e171" translate="yes" xml:space="preserve">
          <source>IndexError</source>
          <target state="translated">IndexError</target>
        </trans-unit>
        <trans-unit id="6af6ebf2652770fb07b7edc8a706df252af3c13a" translate="yes" xml:space="preserve">
          <source>Indicates if the model is persisted. Default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">モデルが永続化されているかどうかを示します。デフォルトは &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="2fd1b698c13f9950dbc0a396b271f3999ea4de3b" translate="yes" xml:space="preserve">
          <source>Indicates whether table names should be the pluralized versions of the corresponding class names. If true, the default table name for a Product class will be &amp;ldquo;products&amp;rdquo;. If false, it would just be &amp;ldquo;product&amp;rdquo;. See table_name for the full rules on table/class naming. This is true, by default.</source>
          <target state="translated">テーブル名を対応するクラス名の複数形バージョンにするかどうかを示します。trueの場合、Productクラスのデフォルトのテーブル名は「products」になります。falseの場合、それは単に「製品」になります。テーブル/クラスの命名に関する完全な規則については、table_nameを参照してください。これはデフォルトで当てはまります。</target>
        </trans-unit>
        <trans-unit id="dc64305a14542034550a32ad76b58e39ab963e2d" translate="yes" xml:space="preserve">
          <source>Indicates whether the table associated with this class exists</source>
          <target state="translated">このクラスに関連付けられたテーブルが存在するかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="b833fb286a71c34f5e91a0725ed89419e3cd6797" translate="yes" xml:space="preserve">
          <source>Indifferent Access</source>
          <target state="translated">無関心アクセス</target>
        </trans-unit>
        <trans-unit id="e377a7420d75303382002218677f891fbd8e5368" translate="yes" xml:space="preserve">
          <source>Individual Components</source>
          <target state="translated">個別部品</target>
        </trans-unit>
        <trans-unit id="af78b717bb9e05184fbb67ea0224879b5cf257ac" translate="yes" xml:space="preserve">
          <source>Inflection Rules For Other Locales</source>
          <target state="translated">他のロケールのインフレクションルール</target>
        </trans-unit>
        <trans-unit id="cf181dc19faa86f0697f3303810611ccfcc004f0" translate="yes" xml:space="preserve">
          <source>Inflection Rules for Other Locales</source>
          <target state="translated">他のロケールのインフレクションルール</target>
        </trans-unit>
        <trans-unit id="7919b931473684f976aff4e0e966d02ccdc1b05a" translate="yes" xml:space="preserve">
          <source>Inflections</source>
          <target state="translated">Inflections</target>
        </trans-unit>
        <trans-unit id="0f1c9abd7505d9208da9c8c7136012880fde3431" translate="yes" xml:space="preserve">
          <source>Inflections go the other way around.</source>
          <target state="translated">抑揚は逆もまた然り。</target>
        </trans-unit>
        <trans-unit id="5ade1199eca264ac0dfc557731d76a0f599ba79e" translate="yes" xml:space="preserve">
          <source>Info::inspect</source>
          <target state="translated">Info::inspect</target>
        </trans-unit>
        <trans-unit id="5e57975599660667fcec0e77696ab5bd3ccb669a" translate="yes" xml:space="preserve">
          <source>Info::property</source>
          <target state="translated">Info::property</target>
        </trans-unit>
        <trans-unit id="e8c940c56b021e4e98e5c24a447c9f7fb6f97ec7" translate="yes" xml:space="preserve">
          <source>Info::to_html</source>
          <target state="translated">Info::to_html</target>
        </trans-unit>
        <trans-unit id="6d3ae8926026fa77c4627cf590895d6f17c9ff4e" translate="yes" xml:space="preserve">
          <source>Info::to_s</source>
          <target state="translated">Info::to_s</target>
        </trans-unit>
        <trans-unit id="238da28b1ea22430b20905f64adaf447cc97c56b" translate="yes" xml:space="preserve">
          <source>Ingests inbound emails from Mailgun. Requires the following parameters:</source>
          <target state="translated">Mailgunからのインバウンドメールをインジェストする。以下のパラメータが必要です。</target>
        </trans-unit>
        <trans-unit id="c243d42c40b1b079fac4e495d20a5f383add383e" translate="yes" xml:space="preserve">
          <source>Ingests inbound emails from Mandrill.</source>
          <target state="translated">Mandrillからのインバウンドメールをインジェストします。</target>
        </trans-unit>
        <trans-unit id="2e89987697155a3aab4cf8005968c5692402a010" translate="yes" xml:space="preserve">
          <source>Ingests inbound emails from Postmark. Requires a &lt;code&gt;RawEmail&lt;/code&gt; parameter containing a full RFC 822 message.</source>
          <target state="translated">消印から受信メールを取り込みます。完全なRFC 822メッセージを含む &lt;code&gt;RawEmail&lt;/code&gt; パラメータが必要です。</target>
        </trans-unit>
        <trans-unit id="04e8776b1781cf6ec53bef1b8cc34a7ff1a0e9d4" translate="yes" xml:space="preserve">
          <source>Ingests inbound emails from SendGrid. Requires an &lt;code&gt;email&lt;/code&gt; parameter containing a full RFC 822 message.</source>
          <target state="translated">SendGridから受信メールを取り込みます。完全なRFC 822メッセージを含む &lt;code&gt;email&lt;/code&gt; パラメータが必要です。</target>
        </trans-unit>
        <trans-unit id="844c9e9ffaf6b19ebb0cb6befdac150c47968826" translate="yes" xml:space="preserve">
          <source>Ingests inbound emails relayed from an SMTP server.</source>
          <target state="translated">SMTPサーバから中継されたインバウンドメールをインジェストします。</target>
        </trans-unit>
        <trans-unit id="7da25d8a59155f55aeac4ed34d5ae1b9e20f37f3" translate="yes" xml:space="preserve">
          <source>Ingresses::Mailgun::InboundEmailsController</source>
          <target state="translated">Ingresses::Mailgun::InboundEmailsController</target>
        </trans-unit>
        <trans-unit id="b6d7efeec877849944e373cc37ee9788cbc2bde9" translate="yes" xml:space="preserve">
          <source>Ingresses::Mailgun::InboundEmailsController#create</source>
          <target state="translated">Ingresses::Mailgun::InboundEmailsController#create</target>
        </trans-unit>
        <trans-unit id="d471c518a4e0625f34b076410d3be699c0bfa111" translate="yes" xml:space="preserve">
          <source>Ingresses::Mandrill::InboundEmailsController</source>
          <target state="translated">Ingresses::Mandrill::InboundEmailsController</target>
        </trans-unit>
        <trans-unit id="6497cdc2b1c087141d75471048d8be9f2619e409" translate="yes" xml:space="preserve">
          <source>Ingresses::Mandrill::InboundEmailsController#create</source>
          <target state="translated">Ingresses::Mandrill::InboundEmailsController#create</target>
        </trans-unit>
        <trans-unit id="32482320e6f8c5325ea6fc34ae05791cb30bc211" translate="yes" xml:space="preserve">
          <source>Ingresses::Postmark::InboundEmailsController</source>
          <target state="translated">Ingresses::Postmark::InboundEmailsController</target>
        </trans-unit>
        <trans-unit id="def7ccd5bae34830a8dcd032d9c179d5f085af18" translate="yes" xml:space="preserve">
          <source>Ingresses::Postmark::InboundEmailsController#create</source>
          <target state="translated">Ingresses::Postmark::InboundEmailsController#create</target>
        </trans-unit>
        <trans-unit id="7055870ae3e931a2224267afbbb92ab8f653c953" translate="yes" xml:space="preserve">
          <source>Ingresses::Relay::InboundEmailsController</source>
          <target state="translated">Ingresses::Relay::InboundEmailsController</target>
        </trans-unit>
        <trans-unit id="d68de4f5b7ef94464fcb633024f3afa8e9d82b81" translate="yes" xml:space="preserve">
          <source>Ingresses::Relay::InboundEmailsController#create</source>
          <target state="translated">Ingresses::Relay::InboundEmailsController#create</target>
        </trans-unit>
        <trans-unit id="3315bf43c874cae6ee36c7d291e89ba04abb6915" translate="yes" xml:space="preserve">
          <source>Ingresses::Sendgrid::InboundEmailsController</source>
          <target state="translated">Ingresses::Sendgrid::InboundEmailsController</target>
        </trans-unit>
        <trans-unit id="79fc86436700d42b832b3c4ea9ae5af07d6ac826" translate="yes" xml:space="preserve">
          <source>Ingresses::Sendgrid::InboundEmailsController#create</source>
          <target state="translated">Ingresses::Sendgrid::InboundEmailsController#create</target>
        </trans-unit>
        <trans-unit id="9addf5a08ee6560a6444bfa5da226f9dda5097e8" translate="yes" xml:space="preserve">
          <source>Inheritable callback queues</source>
          <target state="translated">継承可能なコールバックキュー</target>
        </trans-unit>
        <trans-unit id="878ffd80536d567c1ec4814aab5eb7633c481c93" translate="yes" xml:space="preserve">
          <source>InheritableOptions</source>
          <target state="translated">InheritableOptions</target>
        </trans-unit>
        <trans-unit id="3d6a119a959e8cbe5490945458d11f87f26d87c5" translate="yes" xml:space="preserve">
          <source>InheritableOptions#inheritable_copy</source>
          <target state="translated">InheritableOptions#inheritable_copy</target>
        </trans-unit>
        <trans-unit id="108a36b1b8200fb5a72710521a7d03c26b191aca" translate="yes" xml:space="preserve">
          <source>InheritableOptions::new</source>
          <target state="translated">InheritableOptions::new</target>
        </trans-unit>
        <trans-unit id="fdaddb9ce367c2ca746a97cc24d2e8817a51f27d" translate="yes" xml:space="preserve">
          <source>Inheritance</source>
          <target state="translated">Inheritance</target>
        </trans-unit>
        <trans-unit id="6990f737f07155678850da157ebfcf4ec6a6199e" translate="yes" xml:space="preserve">
          <source>Inheritance Examples</source>
          <target state="translated">相続の例</target>
        </trans-unit>
        <trans-unit id="bde126929181e729972ad7d9ddf772e47cda5bd8" translate="yes" xml:space="preserve">
          <source>Inheritance#initialize_dup</source>
          <target state="translated">Inheritance#initialize_dup</target>
        </trans-unit>
        <trans-unit id="a326a867145d9f00f1712c47c8eb34e3439ab41c" translate="yes" xml:space="preserve">
          <source>Inheritance::ClassMethods</source>
          <target state="translated">Inheritance::ClassMethods</target>
        </trans-unit>
        <trans-unit id="a01613b2b9238ef321f4b05a78a4568055d71e6e" translate="yes" xml:space="preserve">
          <source>Inheritance::ClassMethods#abstract_class</source>
          <target state="translated">Inheritance::ClassMethods#abstract_class</target>
        </trans-unit>
        <trans-unit id="4934c3b146a1d79f2577e3e67ff820d302381e18" translate="yes" xml:space="preserve">
          <source>Inheritance::ClassMethods#abstract_class?</source>
          <target state="translated">Inheritance::ClassMethods#abstract_class?</target>
        </trans-unit>
        <trans-unit id="00e7918294e24f28c311b4076f415b7d8b83740e" translate="yes" xml:space="preserve">
          <source>Inheritance::ClassMethods#base_class</source>
          <target state="translated">Inheritance::ClassMethods#base_class</target>
        </trans-unit>
        <trans-unit id="04a62c79aa4cb9e487fae1d12175cd1d777f6770" translate="yes" xml:space="preserve">
          <source>Inheritance::ClassMethods#base_class?</source>
          <target state="translated">Inheritance::ClassMethods#base_class?</target>
        </trans-unit>
        <trans-unit id="0fb13c325e9fe3b08f15be74bd775aff377f5c5b" translate="yes" xml:space="preserve">
          <source>Inheritance::ClassMethods#compute_type</source>
          <target state="translated">Inheritance::ClassMethods#compute_type</target>
        </trans-unit>
        <trans-unit id="15186ad27ca45e760e125a07d16fa8e79261d707" translate="yes" xml:space="preserve">
          <source>Inheritance::ClassMethods#descends_from_active_record?</source>
          <target state="translated">Inheritance::ClassMethods#descends_from_active_record?</target>
        </trans-unit>
        <trans-unit id="0635fb33f336fafb4ba4e40502aff8a83777dcc6" translate="yes" xml:space="preserve">
          <source>Inheritance::ClassMethods#inherited</source>
          <target state="translated">Inheritance::ClassMethods#inherited</target>
        </trans-unit>
        <trans-unit id="977d92bc899515934b4b966eb7654018c87db3bf" translate="yes" xml:space="preserve">
          <source>Inheritance::ClassMethods#new</source>
          <target state="translated">Inheritance::ClassMethods#new</target>
        </trans-unit>
        <trans-unit id="372df04a248e04ff8449a2c54ffff50187ce7f28" translate="yes" xml:space="preserve">
          <source>Inheritance::ClassMethods#polymorphic_name</source>
          <target state="translated">Inheritance::ClassMethods#polymorphic_name</target>
        </trans-unit>
        <trans-unit id="2a2dfa372be9c94c50976c8495df7eae0586c8a4" translate="yes" xml:space="preserve">
          <source>Inheritance::ClassMethods#sti_name</source>
          <target state="translated">Inheritance::ClassMethods#sti_name</target>
        </trans-unit>
        <trans-unit id="68fa16ffd48f366e4fa8d57fea78ff03fcab0191" translate="yes" xml:space="preserve">
          <source>Initialization</source>
          <target state="translated">Initialization</target>
        </trans-unit>
        <trans-unit id="6514323c8fb77a04ce286a1549e2bf030a862781" translate="yes" xml:space="preserve">
          <source>Initialization events</source>
          <target state="translated">初期化イベント</target>
        </trans-unit>
        <trans-unit id="b9b3df890d7a8d84203daafab9b04d207b07add4" translate="yes" xml:space="preserve">
          <source>Initialize a new &lt;a href=&quot;messageencryptor&quot;&gt;&lt;code&gt;MessageEncryptor&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;secret&lt;/code&gt; must be at least as long as the cipher key size. For the default 'aes-256-gcm' cipher, this is 256 bits. If you are using a user-entered secret, you can generate a suitable key by using &lt;code&gt;ActiveSupport::KeyGenerator&lt;/code&gt; or a similar key derivation function.</source>
          <target state="translated">新しい&lt;a href=&quot;messageencryptor&quot;&gt; &lt;code&gt;MessageEncryptor&lt;/code&gt; を&lt;/a&gt;初期化します。 &lt;code&gt;secret&lt;/code&gt; は、少なくとも暗号鍵のサイズと同じ長さである必要があります。デフォルトの「aes-256-gcm」暗号の場合、これは256ビットです。ユーザーが入力したシークレットを使用している場合は、 &lt;code&gt;ActiveSupport::KeyGenerator&lt;/code&gt; または同様の鍵導出関数を使用して適切な鍵を生成できます。</target>
        </trans-unit>
        <trans-unit id="12ddca1d545d5a1128488691ed488f4cd1e459af" translate="yes" xml:space="preserve">
          <source>Initialize a new &lt;a href=&quot;messageencryptor&quot;&gt;MessageEncryptor&lt;/a&gt;. &lt;code&gt;secret&lt;/code&gt; must be at least as long as the cipher key size. For the default 'aes-256-gcm' cipher, this is 256 bits. If you are using a user-entered secret, you can generate a suitable key by using &lt;code&gt;ActiveSupport::KeyGenerator&lt;/code&gt; or a similar key derivation function.</source>
          <target state="translated">新しい&lt;a href=&quot;messageencryptor&quot;&gt;MessageEncryptorを&lt;/a&gt;初期化します。 &lt;code&gt;secret&lt;/code&gt; は、少なくとも暗号鍵のサイズと同じ長さでなければなりません。デフォルトの「aes-256-gcm」暗号の場合、これは256ビットです。ユーザーが入力したシークレットを使用している場合は、 &lt;code&gt;ActiveSupport::KeyGenerator&lt;/code&gt; または同様のキー派生関数を使用して適切なキーを生成できます。</target>
        </trans-unit>
        <trans-unit id="c6f5bbca96cb40eb122694edc60ed84cb7ae383d" translate="yes" xml:space="preserve">
          <source>Initialize an empty model object from &lt;code&gt;coder&lt;/code&gt;. &lt;code&gt;coder&lt;/code&gt; should be the result of previously encoding an Active Record model, using &lt;a href=&quot;core#method-i-encode_with&quot;&gt;&lt;code&gt;encode_with&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;coder&lt;/code&gt; から空のモデルオブジェクトを初期化します。 &lt;code&gt;coder&lt;/code&gt; は、&lt;a href=&quot;core#method-i-encode_with&quot;&gt; &lt;code&gt;encode_with&lt;/code&gt; &lt;/a&gt;を使用して、以前にActiveRecordモデルをエンコードした結果である必要があります。</target>
        </trans-unit>
        <trans-unit id="96d7e26d527682af0767568cd6eff6730b2648d3" translate="yes" xml:space="preserve">
          <source>Initialize an empty model object from &lt;code&gt;coder&lt;/code&gt;. &lt;code&gt;coder&lt;/code&gt; should be the result of previously encoding an Active Record model, using &lt;a href=&quot;core#method-i-encode_with&quot;&gt;encode_with&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;coder&lt;/code&gt; から空のモデルオブジェクトを初期化します。 &lt;code&gt;coder&lt;/code&gt; は、&lt;a href=&quot;core#method-i-encode_with&quot;&gt;encode_with&lt;/a&gt;を使用してアクティブレコードモデルを以前にエンコードした結果である必要があります。</target>
        </trans-unit>
        <trans-unit id="db5e65d8fc7dddd98f6860c2416bcbcc90ec0fba" translate="yes" xml:space="preserve">
          <source>Initializers</source>
          <target state="translated">Initializers</target>
        </trans-unit>
        <trans-unit id="3cc643394e015280b5fb20c2d82a6a247d93fb7d" translate="yes" xml:space="preserve">
          <source>Initializers defined using the &lt;code&gt;initializer&lt;/code&gt; method will be run in the order they are defined in, with the exception of ones that use the &lt;code&gt;:before&lt;/code&gt; or &lt;code&gt;:after&lt;/code&gt; methods.</source>
          <target state="translated">初期 &lt;code&gt;initializer&lt;/code&gt; メソッドを使用して定義された初期化子は、 &lt;code&gt;:before&lt;/code&gt; または &lt;code&gt;:after&lt;/code&gt; メソッドを使用するものを除いて、定義された順序で実行されます。</target>
        </trans-unit>
        <trans-unit id="a86d77af0c3722c3e4da4c178fb648acf43fc367" translate="yes" xml:space="preserve">
          <source>Initializes &lt;code&gt;attribute&lt;/code&gt; to zero if &lt;code&gt;nil&lt;/code&gt; and adds the value passed as &lt;code&gt;by&lt;/code&gt; (default is 1). The increment is performed directly on the underlying attribute, no setter is invoked. Only makes sense for number-based attributes. Returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">初期化 &lt;code&gt;attribute&lt;/code&gt; であればゼロに &lt;code&gt;nil&lt;/code&gt; として渡された値追加 &lt;code&gt;by&lt;/code&gt; （デフォルトは1です）。増分は、基礎となる属性に対して直接実行され、セッターは呼び出されません。数値ベースの属性に対してのみ意味があります。 &lt;code&gt;self&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="fcd42385993fdf0221b329817d9382977b72308d" translate="yes" xml:space="preserve">
          <source>Initializes &lt;code&gt;attribute&lt;/code&gt; to zero if &lt;code&gt;nil&lt;/code&gt; and subtracts the value passed as &lt;code&gt;by&lt;/code&gt; (default is 1). The decrement is performed directly on the underlying attribute, no setter is invoked. Only makes sense for number-based attributes. Returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">初期化 &lt;code&gt;attribute&lt;/code&gt; 場合は、ゼロに &lt;code&gt;nil&lt;/code&gt; と減算として渡された値 &lt;code&gt;by&lt;/code&gt; （デフォルトは1です）。デクリメントは、基礎となる属性で直接実行され、セッターは呼び出されません。数値ベースの属性に対してのみ意味があります。 &lt;code&gt;self&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="9d1efbf2932073f2aaa30fb69d34ca59d561f6dc" translate="yes" xml:space="preserve">
          <source>Initializes a new model with the given &lt;code&gt;params&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;params&lt;/code&gt; で新しいモデルを初期化します。</target>
        </trans-unit>
        <trans-unit id="25919e950f14f28342516aa26edc8ef27fb8cfe7" translate="yes" xml:space="preserve">
          <source>Initializes and connects a PostgreSQL adapter.</source>
          <target state="translated">PostgreSQLアダプタを初期化して接続します。</target>
        </trans-unit>
        <trans-unit id="5f44168de8e6de1f11fd906b709a9ac6d9152d00" translate="yes" xml:space="preserve">
          <source>Initializes new record from relation while maintaining the current scope.</source>
          <target state="translated">現在のスコープを維持したまま、リレーションから新しいレコードを初期化します。</target>
        </trans-unit>
        <trans-unit id="56915b94b06061a272ee042aac64cce078107917" translate="yes" xml:space="preserve">
          <source>Initiate a manual reload</source>
          <target state="translated">手動リロードを開始する</target>
        </trans-unit>
        <trans-unit id="2d851649cb0b809ff3f794243faf8b50aac49273" translate="yes" xml:space="preserve">
          <source>Injection</source>
          <target state="translated">Injection</target>
        </trans-unit>
        <trans-unit id="829ffb5e8ba86505d0ede43d4f74c3b605d82ec6" translate="yes" xml:space="preserve">
          <source>Injection is very tricky, because the same code or parameter can be malicious in one context, but totally harmless in another. A context can be a scripting, query, or programming language, the shell, or a Ruby/Rails method. The following sections will cover all important contexts where injection attacks may happen. The first section, however, covers an architectural decision in connection with Injection.</source>
          <target state="translated">インジェクションは非常に厄介です。同じコードやパラメータがあるコンテキストでは悪意のあるものでも、別のコンテキストでは全く無害になることがあるからです。コンテキストには、スクリプト、クエリ、プログラミング言語、シェル、Ruby/Rails のメソッドなどがあります。以下のセクションでは、インジェクション攻撃が行われる可能性のある重要なコンテキストをすべて取り上げます。しかし、最初のセクションでは、インジェクションに関連したアーキテクチャ上の決定を扱います。</target>
        </trans-unit>
        <trans-unit id="6485cd5f8e0fb60a6b40665efa4be6e80ab8c693" translate="yes" xml:space="preserve">
          <source>Injects a block of code into a defined position in your file.</source>
          <target state="translated">ファイル内の定義された位置にコードブロックを挿入します。</target>
        </trans-unit>
        <trans-unit id="d2860d2edae8411abdfa46d50321f29af97f5353" translate="yes" xml:space="preserve">
          <source>Inline Attachments</source>
          <target state="translated">インラインアタッチメント</target>
        </trans-unit>
        <trans-unit id="b46ea27191430cc66d892811d5c5909433511f69" translate="yes" xml:space="preserve">
          <source>Inline callback blocks using &lt;code&gt;return&lt;/code&gt; can be refactored to evaluate to the returned value:</source>
          <target state="translated">&lt;code&gt;return&lt;/code&gt; を使用したインラインコールバックブロックをリファクタリングして、戻り値を評価できます。</target>
        </trans-unit>
        <trans-unit id="29a8dda03d8fa26cf788bd2ddffa18aa80d59c11" translate="yes" xml:space="preserve">
          <source>InlinePreviewInterceptor</source>
          <target state="translated">InlinePreviewInterceptor</target>
        </trans-unit>
        <trans-unit id="a845996754ffc7a0716a05091edc051fd302fc2e" translate="yes" xml:space="preserve">
          <source>Inserting data into HTML templates needs extra care. For example, you can't just interpolate &lt;code&gt;@review.title&lt;/code&gt; verbatim into an HTML page. For one thing, if the review title is &quot;Flanagan &amp;amp; Matz rules!&quot; the output won't be well-formed because an ampersand has to be escaped as &quot;&amp;amp;amp;&quot;. What's more, depending on the application, that may be a big security hole because users can inject malicious HTML setting a hand-crafted review title. Check out the section about cross-site scripting in the &lt;a href=&quot;security#cross-site-scripting-xss&quot;&gt;Security guide&lt;/a&gt; for further information about the risks.</source>
          <target state="translated">HTMLテンプレートへのデータの挿入には、さらに注意が必要です。たとえば、 &lt;code&gt;@review.title&lt;/code&gt; そのままHTMLページに補間することはできません。1つには、レビューのタイトルが「Flanagan＆Matz rules！」の場合です。アンパサンドは「＆amp;」としてエスケープする必要があるため、出力は整形式ではありません。さらに、アプリケーションによっては、ユーザーが悪意のあるHTMLを挿入して手作りのレビュータイトルを設定できるため、これは大きなセキュリティホールになる可能性があります。リスクの詳細については、&lt;a href=&quot;security#cross-site-scripting-xss&quot;&gt;セキュリティガイドの&lt;/a&gt;クロスサイトスクリプティングに関するセクションをご覧ください。</target>
        </trans-unit>
        <trans-unit id="01be4a345faed307605daf983eeed9bc1912f61d" translate="yes" xml:space="preserve">
          <source>Inserts a single record into the database in a single SQL INSERT statement. It does not instantiate any models nor does it trigger Active Record callbacks or validations. Though passed values go through Active Record's type casting and serialization.</source>
          <target state="translated">単一のSQL INSERT文で単一のレコードをデータベースに挿入します。これは、モデルをインスタンス化したり、Active Record のコールバックやバリデーションをトリガーしたりしません。しかし、渡された値はActive Recordの型キャストとシリアライズを通過します。</target>
        </trans-unit>
        <trans-unit id="f2098ea62054241a3c2030b9e7b979d66024097c" translate="yes" xml:space="preserve">
          <source>Inserts multiple records into the database in a single SQL INSERT statement. It does not instantiate any models nor does it trigger Active Record callbacks or validations. Though passed values go through Active Record's type casting and serialization.</source>
          <target state="translated">単一のSQL INSERT文で複数のレコードをデータベースに挿入します。これは、モデルをインスタンス化したり、Active Record のコールバックやバリデーションをトリガーしたりしません。しかし、渡された値はActive Recordの型キャストとシリアライズを通過します。</target>
        </trans-unit>
        <trans-unit id="03c94201b563e22988175ed07701bbc92b432230" translate="yes" xml:space="preserve">
          <source>Inserts the given fixture into the table. Overridden in adapters that require something beyond a simple insert (e.g. Oracle). Most of adapters should implement `insert_fixtures_set` that leverages bulk SQL insert. We keep this method to provide fallback for databases like sqlite that do not support bulk inserts.</source>
          <target state="translated">指定したフィクスチャをテーブルに挿入します。単純な挿入以上のものを必要とするアダプタではオーバーライドされます (例:Oracle)。ほとんどのアダプタは、SQLの一括挿入を利用した `insert_fixtures_set` を実装しなければなりません。このメソッドは、バルク挿入をサポートしていない sqlite のようなデータベースのフォールバックを提供するために残しています。</target>
        </trans-unit>
        <trans-unit id="3e75d211e60bc43f28ee2a4034ae9797a2cd4e71" translate="yes" xml:space="preserve">
          <source>Inserts the given fixture into the table. Overridden in adapters that require something beyond a simple insert (eg. Oracle). Most of adapters should implement `insert_fixtures_set` that leverages bulk SQL insert. We keep this method to provide fallback for databases like sqlite that do not support bulk inserts.</source>
          <target state="translated">指定したフィクスチャをテーブルに挿入します。単純な挿入以上のものを必要とするアダプタではオーバーライドされます (例:Oracle)。ほとんどのアダプタは、SQLの一括挿入を利用した `insert_fixtures_set` を実装しなければなりません。このメソッドは、バルク挿入をサポートしていない sqlite のようなデータベースのフォールバックを提供するために残しています。</target>
        </trans-unit>
        <trans-unit id="dcdce6d287df6df156ef34c4bebe0e7598a298eb" translate="yes" xml:space="preserve">
          <source>Inside a Rails application, you can set-up your services through the generated &lt;code&gt;config/storage.yml&lt;/code&gt; file and reference one of the aforementioned constant under the &lt;code&gt;service&lt;/code&gt; key. For example:</source>
          <target state="translated">Railsアプリケーション内では、生成された &lt;code&gt;config/storage.yml&lt;/code&gt; ファイルを使用してサービスをセットアップし、 &lt;code&gt;service&lt;/code&gt; キーの下で前述の定数の1つを参照できます。例えば：</target>
        </trans-unit>
        <trans-unit id="81fc66f02c626e819fce091962b69cd908ed799a" translate="yes" xml:space="preserve">
          <source>Inside an Engine</source>
          <target state="translated">エンジン内部</target>
        </trans-unit>
        <trans-unit id="ca089a5502c726d8026d3a6ef582d1f9c7041b18" translate="yes" xml:space="preserve">
          <source>Inside any Rails application you can then invoke the debugger by calling the &lt;code&gt;byebug&lt;/code&gt; method.</source>
          <target state="translated">Railsアプリケーション内では、 &lt;code&gt;byebug&lt;/code&gt; メソッドを呼び出すことでデバッガーを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="7bafd3cd51f90726af9a9d1acaf7aa7cadd199a4" translate="yes" xml:space="preserve">
          <source>Inside any controller action or view, you can invoke the console by calling the &lt;code&gt;console&lt;/code&gt; method.</source>
          <target state="translated">任意のコントローラーアクションまたはビュー内で、 &lt;code&gt;console&lt;/code&gt; メソッドを呼び出すことによってコンソールを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="21481b8c559c4c02b87406f78ebeb054fe506b43" translate="yes" xml:space="preserve">
          <source>Inside migration files, the &lt;code&gt;t&lt;/code&gt; object in &lt;a href=&quot;schemastatements#method-i-create_table&quot;&gt;create_table&lt;/a&gt; is actually of this type:</source>
          <target state="translated">移行ファイル内では、&lt;a href=&quot;schemastatements#method-i-create_table&quot;&gt;create_table&lt;/a&gt;の &lt;code&gt;t&lt;/code&gt; オブジェクトは実際には次のタイプです。</target>
        </trans-unit>
        <trans-unit id="744d4fb8e59b54f4790af3c09cd7d3d4f2da5ac7" translate="yes" xml:space="preserve">
          <source>Inside the &lt;code&gt;-&amp;gt; { ... }&lt;/code&gt; block you can use all of the usual &lt;a href=&quot;../relation&quot;&gt;&lt;code&gt;Relation&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">&lt;code&gt;-&amp;gt; { ... }&lt;/code&gt; ブロック内では、通常の&lt;a href=&quot;../relation&quot;&gt; &lt;code&gt;Relation&lt;/code&gt; &lt;/a&gt;メソッドをすべて使用できます。</target>
        </trans-unit>
        <trans-unit id="acfb2b1ac48dee8a30cfcdf3f4dfe998556d2d5a" translate="yes" xml:space="preserve">
          <source>Inside the &lt;code&gt;-&amp;gt; { ... }&lt;/code&gt; block you can use all of the usual &lt;a href=&quot;../relation&quot;&gt;Relation&lt;/a&gt; methods.</source>
          <target state="translated">&lt;code&gt;-&amp;gt; { ... }&lt;/code&gt; ブロック内では、通常の&lt;a href=&quot;../relation&quot;&gt;Relation&lt;/a&gt;メソッドをすべて使用できます。</target>
        </trans-unit>
        <trans-unit id="edfc5dfee3505b9f9d6bda671872ebd4a4ee350e" translate="yes" xml:space="preserve">
          <source>Inside the &lt;code&gt;app&lt;/code&gt; directory are the standard &lt;code&gt;assets&lt;/code&gt;, &lt;code&gt;controllers&lt;/code&gt;, &lt;code&gt;helpers&lt;/code&gt;, &lt;code&gt;jobs&lt;/code&gt;, &lt;code&gt;mailers&lt;/code&gt;, &lt;code&gt;models&lt;/code&gt;, and &lt;code&gt;views&lt;/code&gt; directories that you should be familiar with from an application. We'll look more into models in a future section, when we're writing the engine.</source>
          <target state="translated">&lt;code&gt;app&lt;/code&gt; ディレクトリー内には、アプリケーションから精通している必要がある標準の &lt;code&gt;assets&lt;/code&gt; 、 &lt;code&gt;controllers&lt;/code&gt; 、 &lt;code&gt;helpers&lt;/code&gt; 、 &lt;code&gt;jobs&lt;/code&gt; 、 &lt;code&gt;mailers&lt;/code&gt; 、 &lt;code&gt;models&lt;/code&gt; 、および &lt;code&gt;views&lt;/code&gt; ディレクトリーがあります。エンジンを作成するときは、モデルの詳細については、今後のセクションで説明します。</target>
        </trans-unit>
        <trans-unit id="91967b542aed5f5ef2e46c25860a52b13656d35d" translate="yes" xml:space="preserve">
          <source>Inside the &lt;code&gt;bin/rails console&lt;/code&gt; you have access to the &lt;code&gt;app&lt;/code&gt; and &lt;code&gt;helper&lt;/code&gt; instances.</source>
          <target state="translated">&lt;code&gt;bin/rails console&lt;/code&gt; 内で、 &lt;code&gt;app&lt;/code&gt; と &lt;code&gt;helper&lt;/code&gt; インスタンスにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="3b5bb7d78f59ef0d2405b8e986fb4763ebd602dd" translate="yes" xml:space="preserve">
          <source>Inside the &lt;code&gt;rails console&lt;/code&gt; you have access to the &lt;code&gt;app&lt;/code&gt; and &lt;code&gt;helper&lt;/code&gt; instances.</source>
          <target state="translated">&lt;code&gt;rails console&lt;/code&gt; 内では、 &lt;code&gt;app&lt;/code&gt; と &lt;code&gt;helper&lt;/code&gt; インスタンスにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="641ef3a3a6478764778e579b5b58210ea5d42729" translate="yes" xml:space="preserve">
          <source>Inside the block for &lt;code&gt;create_table&lt;/code&gt;, two columns are defined: &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;body&lt;/code&gt;. These were added by the generator because we included them in our generate command (&lt;code&gt;bin/rails generate model Article title:string body:text&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;create_table&lt;/code&gt; のブロック内には、 &lt;code&gt;title&lt;/code&gt; と &lt;code&gt;body&lt;/code&gt; の2つの列が定義されています。これらは、generateコマンド（ &lt;code&gt;bin/rails generate model Article title:string body:text&lt;/code&gt; ）に含まれているため、ジェネレーターによって追加されました。</target>
        </trans-unit>
        <trans-unit id="6469372268010b680566e892d837c1be10063e1d" translate="yes" xml:space="preserve">
          <source>Inside the test directory there is the &lt;code&gt;test/integration&lt;/code&gt; directory, where integration tests for the engine should be placed. Other directories can be created in the &lt;code&gt;test&lt;/code&gt; directory as well. For example, you may wish to create a &lt;code&gt;test/models&lt;/code&gt; directory for your model tests.</source>
          <target state="translated">テストディレクトリ内には &lt;code&gt;test/integration&lt;/code&gt; ディレクトリがあり、エンジンの統合テストを配置する必要があります。その他のディレクトリも &lt;code&gt;test&lt;/code&gt; ディレクトリに作成できます。たとえば、モデルテスト用に &lt;code&gt;test/models&lt;/code&gt; ディレクトリを作成するとします。</target>
        </trans-unit>
        <trans-unit id="8408bbf7dfd69738c24b99c0074fd7a247613a94" translate="yes" xml:space="preserve">
          <source>Inspecting Middleware Stack</source>
          <target state="translated">ミドルウェアスタックの検査</target>
        </trans-unit>
        <trans-unit id="a6ae35f450b26d859c2118e63fa573b3bd8d5308" translate="yes" xml:space="preserve">
          <source>Inspecting Variables</source>
          <target state="translated">変数の検査</target>
        </trans-unit>
        <trans-unit id="c92130bec27348f9c16772e495150fc6bd805def" translate="yes" xml:space="preserve">
          <source>Inspecting and Testing Routes</source>
          <target state="translated">ルートの検査とテスト</target>
        </trans-unit>
        <trans-unit id="cfb0a450eea8507a41095ebe947ca2ed8994961a" translate="yes" xml:space="preserve">
          <source>Inspired by the Quiet Backtrace gem by thoughtbot.</source>
          <target state="translated">thoughtbotの「Quiet Backtrace」という宝石にインスパイアされました。</target>
        </trans-unit>
        <trans-unit id="8dacdfdb2b7181d7db1e289a5292e9965b1d7fd8" translate="yes" xml:space="preserve">
          <source>Install a callback for the given event.</source>
          <target state="translated">与えられたイベントのコールバックをインストールします。</target>
        </trans-unit>
        <trans-unit id="17ec383645ad0dd91277a304080964bf80f4f253" translate="yes" xml:space="preserve">
          <source>Install migrations needed for &lt;code&gt;InboundEmail&lt;/code&gt; and ensure Active Storage is set up:</source>
          <target state="translated">&lt;code&gt;InboundEmail&lt;/code&gt; に必要な移行をインストールし、アクティブストレージがセットアップされていることを確認します。</target>
        </trans-unit>
        <trans-unit id="d00f491d8c40c03d4b59f712550d0e446ff54fbd" translate="yes" xml:space="preserve">
          <source>Install spring using &lt;code&gt;bundle install&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bundle install&lt;/code&gt; を使用してSpringをインストールします。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="6e0f3906b5c7f6a4b6cb048055a7f93079d5264f" translate="yes" xml:space="preserve">
          <source>Installing Rails</source>
          <target state="translated">Railsのインストール</target>
        </trans-unit>
        <trans-unit id="aa6dfe54274ed1710b82f903b6abd73713a2f05a" translate="yes" xml:space="preserve">
          <source>Instance Variables</source>
          <target state="translated">インスタンス変数</target>
        </trans-unit>
        <trans-unit id="e6bc144a6aa17edc35608d98fc5380cd3df13339" translate="yes" xml:space="preserve">
          <source>Instance Variables Available</source>
          <target state="translated">利用可能なインスタンス変数</target>
        </trans-unit>
        <trans-unit id="f4afcaf921a6de61c708f5f2c356b8ce5c3328e9" translate="yes" xml:space="preserve">
          <source>Instance methods are created as well for convenience, they are just proxies to the class attribute. So, instances can change the class attribute, but cannot override it as it happens with &lt;code&gt;class_attribute&lt;/code&gt; (see above). For example given</source>
          <target state="translated">インスタンスメソッドも便利なように作成されます。これらはクラス属性の単なるプロキシです。そのため、インスタンスはクラス属性を変更できますが、 &lt;code&gt;class_attribute&lt;/code&gt; で発生するようにオーバーライドすることはできません（上記を参照）。例えば与えられた</target>
        </trans-unit>
        <trans-unit id="0c9fd054155855fd08e13e216d559f7895b79636" translate="yes" xml:space="preserve">
          <source>Instance variables that are accessible in views.</source>
          <target state="translated">ビューでアクセス可能なインスタンス変数。</target>
        </trans-unit>
        <trans-unit id="a7436cd076605f4f6b404cf011f15d6a92df9c3d" translate="yes" xml:space="preserve">
          <source>Instance-level &lt;code&gt;respond_to&lt;/code&gt; is unaffected and does not require the additional gem:</source>
          <target state="translated">インスタンスレベルの &lt;code&gt;respond_to&lt;/code&gt; は影響を受けず、追加のgemは必要ありません。</target>
        </trans-unit>
        <trans-unit id="7762633929a1e0b61a50135d708b869a90a1a564" translate="yes" xml:space="preserve">
          <source>Instances may overwrite the class value in the same way:</source>
          <target state="translated">インスタンスは、同じようにクラスの値を上書きすることができます。</target>
        </trans-unit>
        <trans-unit id="9f2c6de42dd18302648ff7dd63c129bbd2f177e6" translate="yes" xml:space="preserve">
          <source>Instantiate the equivalent Ruby object of the appropriate model for every resulting row.</source>
          <target state="translated">結果として得られるすべての行に対して、適切なモデルの等価なRubyオブジェクトをインスタンス化します。</target>
        </trans-unit>
        <trans-unit id="d4cfe1684b9bdb4a97ddba033a2969091cea4d78" translate="yes" xml:space="preserve">
          <source>Instantiates a new column for the table. See &lt;a href=&quot;schemastatements#method-i-add_column&quot;&gt;connection.add_column&lt;/a&gt; for available options.</source>
          <target state="translated">テーブルの新しい列をインスタンス化します。使用可能なオプションについては、&lt;a href=&quot;schemastatements#method-i-add_column&quot;&gt;connection.add_column&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="e745302923474832bd961065a8fb1dadefee0f6b" translate="yes" xml:space="preserve">
          <source>Instantiating a new &lt;a href=&quot;stringinquirer&quot;&gt;&lt;code&gt;StringInquirer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">新しい&lt;a href=&quot;stringinquirer&quot;&gt; &lt;code&gt;StringInquirer&lt;/code&gt; の&lt;/a&gt;インスタンス化</target>
        </trans-unit>
        <trans-unit id="ec491111cabccfee0fc99b9e3416ee8ef93d5fab" translate="yes" xml:space="preserve">
          <source>Instantiating a new &lt;a href=&quot;stringinquirer&quot;&gt;StringInquirer&lt;/a&gt;</source>
          <target state="translated">新しい&lt;a href=&quot;stringinquirer&quot;&gt;StringInquirerを&lt;/a&gt;インスタンス化する</target>
        </trans-unit>
        <trans-unit id="4db2c485a1c4b852a7d1afe7da3a46ea4ba7e31d" translate="yes" xml:space="preserve">
          <source>Instead of a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, like &lt;code&gt;posts#index&lt;/code&gt;, which corresponds to the index action in the PostsController, you can specify any Rack application as the endpoint for a matcher:</source>
          <target state="translated">PostsControllerのインデックスアクションに対応する &lt;code&gt;posts#index&lt;/code&gt; のような&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;代わりに、マッチャーのエンドポイントとして任意のRackアプリケーションを指定できます。</target>
        </trans-unit>
        <trans-unit id="de2daca2c5d3ff11781567a508a71041f4b7c73f" translate="yes" xml:space="preserve">
          <source>Instead of a &lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;, like &lt;code&gt;posts#index&lt;/code&gt;, which corresponds to the index action in the PostsController, you can specify any Rack application as the endpoint for a matcher:</source>
          <target state="translated">PostsControllerのインデックスアクションに対応する &lt;code&gt;posts#index&lt;/code&gt; のような&lt;a href=&quot;../string&quot;&gt;Stringの&lt;/a&gt;代わりに、任意のRackアプリケーションをマッチャーのエンドポイントとして指定できます。</target>
        </trans-unit>
        <trans-unit id="b82c51d0b22ee7205e62cd6f126b3721bdf68de6" translate="yes" xml:space="preserve">
          <source>Instead of a String like &lt;code&gt;'articles#index'&lt;/code&gt;, which corresponds to the &lt;code&gt;index&lt;/code&gt; action in the &lt;code&gt;ArticlesController&lt;/code&gt;, you can specify any &lt;a href=&quot;rails_on_rack&quot;&gt;Rack application&lt;/a&gt; as the endpoint for a matcher:</source>
          <target state="translated">&lt;code&gt;ArticlesController&lt;/code&gt; の &lt;code&gt;index&lt;/code&gt; アクションに対応する &lt;code&gt;'articles#index'&lt;/code&gt; のような文字列の代わりに、任意の&lt;a href=&quot;rails_on_rack&quot;&gt;Rackアプリケーション&lt;/a&gt;をマッチャーのエンドポイントとして指定できます。</target>
        </trans-unit>
        <trans-unit id="cda95c68819053b9941c2e8712b8b82003b7c61b" translate="yes" xml:space="preserve">
          <source>Instead of an options hash, you can also simply pass in a model. Rails will use the &lt;code&gt;updated_at&lt;/code&gt; and &lt;code&gt;cache_key_with_version&lt;/code&gt; methods for setting &lt;code&gt;last_modified&lt;/code&gt; and &lt;code&gt;etag&lt;/code&gt;:</source>
          <target state="translated">オプションのハッシュの代わりに、単にモデルを渡すこともできます。Railsは、 &lt;code&gt;last_modified&lt;/code&gt; および &lt;code&gt;etag&lt;/code&gt; を設定するために &lt;code&gt;updated_at&lt;/code&gt; および &lt;code&gt;cache_key_with_version&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="abde7a605409afb52df3b59e00ef377416ed7481" translate="yes" xml:space="preserve">
          <source>Instead of calling &lt;a href=&quot;tabledefinition#method-i-column&quot;&gt;&lt;code&gt;column&lt;/code&gt;&lt;/a&gt; directly, you can also work with the short-hand definitions for the default types. They use the type as the method name instead of as a parameter and allow for multiple columns to be defined in a single statement.</source>
          <target state="translated">&lt;a href=&quot;tabledefinition#method-i-column&quot;&gt; &lt;code&gt;column&lt;/code&gt; &lt;/a&gt;直接呼び出す代わりに、デフォルトタイプの簡略定義を使用することもできます。タイプをパラメーターではなくメソッド名として使用し、単一のステートメントで複数の列を定義できるようにします。</target>
        </trans-unit>
        <trans-unit id="b08b659f08cd25084c638c422a66099cf07388cf" translate="yes" xml:space="preserve">
          <source>Instead of calling &lt;a href=&quot;tabledefinition#method-i-column&quot;&gt;column&lt;/a&gt; directly, you can also work with the short-hand definitions for the default types. They use the type as the method name instead of as a parameter and allow for multiple columns to be defined in a single statement.</source>
          <target state="translated">&lt;a href=&quot;tabledefinition#method-i-column&quot;&gt;列を&lt;/a&gt;直接呼び出す代わりに、デフォルトの型の省略形の定義を使用することもできます。それらはパラメーターとしてではなくメソッド名としてタイプを使用し、単一のステートメントで複数の列を定義できるようにします。</target>
        </trans-unit>
        <trans-unit id="54c983c02d3a5b541a7a56ed3d4f0d08dea5c885" translate="yes" xml:space="preserve">
          <source>Instead of explicitly naming the location of a partial, you can also let &lt;a href=&quot;partialrenderer&quot;&gt;&lt;code&gt;PartialRenderer&lt;/code&gt;&lt;/a&gt; do the work and pick the proper path by checking &lt;code&gt;to_partial_path&lt;/code&gt; method.</source>
          <target state="translated">パーシャルの場所に明示的に名前を付ける代わりに、 &lt;code&gt;to_partial_path&lt;/code&gt; メソッドをチェックして、&lt;a href=&quot;partialrenderer&quot;&gt; &lt;code&gt;PartialRenderer&lt;/code&gt; &lt;/a&gt;に作業を任せ、適切なパスを選択することもできます。</target>
        </trans-unit>
        <trans-unit id="d6fac76b830aa8fdf650571fd8e47e809b5f97b6" translate="yes" xml:space="preserve">
          <source>Instead of explicitly naming the location of a partial, you can also let &lt;a href=&quot;partialrenderer&quot;&gt;PartialRenderer&lt;/a&gt; do the work and pick the proper path by checking &lt;code&gt;to_partial_path&lt;/code&gt; method.</source>
          <target state="translated">パーシャルの場所に明示的に名前を付ける代わりに、&lt;a href=&quot;partialrenderer&quot;&gt;PartialRenderer&lt;/a&gt;に作業を行わせ、 &lt;code&gt;to_partial_path&lt;/code&gt; メソッドをチェックして適切なパスを選択することもできます。</target>
        </trans-unit>
        <trans-unit id="282a280a0cab90c59c897d96018296189d742c1c" translate="yes" xml:space="preserve">
          <source>Instead of passing a string to the conditions option, you can pass an array to sanitize tainted strings like this:</source>
          <target state="translated">conditions オプションに文字列を渡す代わりに配列を渡すと、次のように汚染された文字列をサニタイズすることができます。</target>
        </trans-unit>
        <trans-unit id="ec02bda762202680a9ca746c8177602658813c28" translate="yes" xml:space="preserve">
          <source>Instead of passing the content as an argument, you can also use a block in which case, you pass your &lt;code&gt;html_options&lt;/code&gt; as the first parameter.</source>
          <target state="translated">引数としてコンテンツを渡す代わりに、ブロックを使用することもできます。その場合、最初のパラメーターとして &lt;code&gt;html_options&lt;/code&gt; を渡します。</target>
        </trans-unit>
        <trans-unit id="edd65bb52286b846fe1b028432f87a2da5ac601a" translate="yes" xml:space="preserve">
          <source>Instead of polluting the thread locals namespace:</source>
          <target state="translated">スレッドローカルの名前空間を汚染する代わりに</target>
        </trans-unit>
        <trans-unit id="38b0e5a9769fb9574f82e5157ef0cddca8289de5" translate="yes" xml:space="preserve">
          <source>Instead of returning a path such as &lt;code&gt;/assets/smile.png&lt;/code&gt; (digests are left out for readability). The URL generated will have the full path to your CDN.</source>
          <target state="translated">&lt;code&gt;/assets/smile.png&lt;/code&gt; などのパスを返す代わりに（読みやすさのためにダイジェストは省略されています）。生成されたURLには、CDNへの絶対パスが含まれます。</target>
        </trans-unit>
        <trans-unit id="8b24539f81dce8069573b818cfa967fe057251e4" translate="yes" xml:space="preserve">
          <source>Instead of setting the variant on the render call you may also set it on the request object in your controller action.</source>
          <target state="translated">レンダリングコールにバリアントを設定する代わりに、コントローラアクションのリクエストオブジェクトに設定することもできます。</target>
        </trans-unit>
        <trans-unit id="d7d9c8fa98536e91c26d449b779521f157c1a6de" translate="yes" xml:space="preserve">
          <source>Instead of stealing a cookie unknown to the attacker, they fix a user's session identifier (in the cookie) known to them. Read more about this so-called session fixation later.</source>
          <target state="translated">攻撃者が知らないクッキーを盗む代わりに、攻撃者が知っているユーザーのセッション識別子(クッキーの中の)を固定します。このいわゆるセッション固定については後述します。</target>
        </trans-unit>
        <trans-unit id="368161168ef35935386619c50d010f0e7708fec1" translate="yes" xml:space="preserve">
          <source>Instead of the initializer, you'll have to set the relevant options somewhere before your middleware is built (like &lt;code&gt;config/application.rb&lt;/code&gt;) and pass them to your preferred middleware, like this:</source>
          <target state="translated">イニシャライザの代わりに、ミドルウェアをビルドする前に（ &lt;code&gt;config/application.rb&lt;/code&gt; など）関連するオプションを設定し、次のように好みのミドルウェアに渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="a9ae3405744e20c189c424dbe4a3d20461b01ff6" translate="yes" xml:space="preserve">
          <source>Instead of using Rails to generate HTML that communicates with the server through forms and links, many developers are treating their web application as just an API client delivered as HTML with JavaScript that consumes a JSON API.</source>
          <target state="translated">Railsを使ってフォームやリンクを通じてサーバと通信するHTMLを生成するのではなく、多くの開発者はWebアプリケーションを、JSON APIを消費するJavaScriptを使ってHTMLとして配信される単なるAPIクライアントとして扱っています。</target>
        </trans-unit>
        <trans-unit id="c042f3d9b71b32db250543be269d410c99d13527" translate="yes" xml:space="preserve">
          <source>Instead of:</source>
          <target state="translated">代わりに</target>
        </trans-unit>
        <trans-unit id="48dfdea2f5cbbb425bae6510eac74e4622640ae0" translate="yes" xml:space="preserve">
          <source>Instead, we will pass a single Hash that contains the values. However, we must still specify what values are allowed in that Hash. Otherwise, a malicious user could potentially submit extra form fields and overwrite private data. In fact, if we pass the unfiltered &lt;code&gt;params[:article]&lt;/code&gt; Hash directly to &lt;code&gt;Article.new&lt;/code&gt;, Rails will raise a &lt;code&gt;ForbiddenAttributesError&lt;/code&gt; to alert us about the problem. So we will use a feature of Rails called &lt;em&gt;Strong Parameters&lt;/em&gt; to filter &lt;code&gt;params&lt;/code&gt;. Think of it as &lt;a href=&quot;https://en.wikipedia.org/wiki/Strong_and_weak_typing&quot;&gt;strong typing&lt;/a&gt; for &lt;code&gt;params&lt;/code&gt;.</source>
          <target state="translated">代わりに、値を含む単一のハッシュを渡します。ただし、そのハッシュで許可される値を指定する必要があります。そうしないと、悪意のあるユーザーが追加のフォームフィールドを送信し、プライベートデータを上書きする可能性があります。実際、フィルタリングされていない &lt;code&gt;params[:article]&lt;/code&gt; ハッシュを &lt;code&gt;Article.new&lt;/code&gt; に直接渡すと、Railsは &lt;code&gt;ForbiddenAttributesError&lt;/code&gt; を発生させて、問題について警告します。私たちはRailsのの機能を使用する、いわゆる&lt;em&gt;強力なパラメータ&lt;/em&gt;のフィルタへ &lt;code&gt;params&lt;/code&gt; 。考えて&lt;a href=&quot;https://en.wikipedia.org/wiki/Strong_and_weak_typing&quot;&gt;強い型付け&lt;/a&gt;のため &lt;code&gt;params&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="507770191eeb7ec98eb1ba54a5ba1a74a894e508" translate="yes" xml:space="preserve">
          <source>Instrumentation: Rails has an instrumentation API that triggers registered handlers for a variety of events, such as action processing, sending a file or data, redirection, and database queries. The payload of each event comes with relevant information (for the action processing event, the payload includes the controller, action, parameters, request format, request method, and the request's full path).</source>
          <target state="translated">インストルメンテーション。RailsにはインストルメンテーションAPIがあり、アクション処理、ファイルやデータの送信、リダイレクト、データベースクエリなど、さまざまなイベントのために登録されたハンドラをトリガーします。各イベントのペイロードには関連情報が含まれています(アクション処理イベントの場合、ペイロードにはコントローラ、アクション、パラメータ、リクエストフォーマット、リクエストメソッド、リクエストのフルパスが含まれます)。</target>
        </trans-unit>
        <trans-unit id="ce36819d4451c02e4b229841cfbf52796a818ec4" translate="yes" xml:space="preserve">
          <source>Instrumenters</source>
          <target state="translated">Instrumenters</target>
        </trans-unit>
        <trans-unit id="b300e5ce045a08b89313fafa5e73ed0492a458f3" translate="yes" xml:space="preserve">
          <source>Instrumenters are stored in a thread local.</source>
          <target state="translated">インストゥルメントはローカルのスレッドに格納されます。</target>
        </trans-unit>
        <trans-unit id="9edcffff4461c9083fbff857f8dcee0f0769cbd4" translate="yes" xml:space="preserve">
          <source>Integer</source>
          <target state="translated">Integer</target>
        </trans-unit>
        <trans-unit id="3caba6d00ba203d77ce889c6e7b15dc02732832e" translate="yes" xml:space="preserve">
          <source>Integer#year</source>
          <target state="translated">Integer#year</target>
        </trans-unit>
        <trans-unit id="6c44dbddc3fd22ad67d4d705b958417bd4bc9d93" translate="yes" xml:space="preserve">
          <source>Integers in the example above are supposed to come from the respective calls to &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">上記の例の整数は、 &lt;code&gt;id&lt;/code&gt; へのそれぞれの呼び出しから来ると想定されています。</target>
        </trans-unit>
        <trans-unit id="c87f52def7d613c90253e811aa67f30c00e37459" translate="yes" xml:space="preserve">
          <source>Integrating with Libraries or Frameworks</source>
          <target state="translated">ライブラリやフレームワークとの統合</target>
        </trans-unit>
        <trans-unit id="899e5920ef1372292f1f4f69d3125e5a5f5a1dfb" translate="yes" xml:space="preserve">
          <source>Integration</source>
          <target state="translated">Integration</target>
        </trans-unit>
        <trans-unit id="ed8e7536d5000854a478dee90bcbee2c9954ce4e" translate="yes" xml:space="preserve">
          <source>Integration Testing</source>
          <target state="translated">統合テスト</target>
        </trans-unit>
        <trans-unit id="67982c4f135ee413508775af875318e3445716ec" translate="yes" xml:space="preserve">
          <source>Integration test methods such as &lt;a href=&quot;integration/requesthelpers#method-i-get&quot;&gt;ActionDispatch::Integration::RequestHelpers#get&lt;/a&gt; and &lt;a href=&quot;integration/requesthelpers#method-i-post&quot;&gt;ActionDispatch::Integration::RequestHelpers#post&lt;/a&gt; return objects of class &lt;a href=&quot;testresponse&quot;&gt;TestResponse&lt;/a&gt;, which represent the HTTP response results of the requested controller actions.</source>
          <target state="translated">&lt;a href=&quot;integration/requesthelpers#method-i-get&quot;&gt;ActionDispatch :: Integration :: RequestHelpers＃get&lt;/a&gt;や&lt;a href=&quot;integration/requesthelpers#method-i-post&quot;&gt;ActionDispatch :: Integration :: RequestHelpers＃post&lt;/a&gt;などの統合テストメソッドは、要求されたコントローラーアクションのHTTP応答結果を表すクラス&lt;a href=&quot;testresponse&quot;&gt;TestResponseの&lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="a0463d29899b2730367d1e976545807c7a0e21c9" translate="yes" xml:space="preserve">
          <source>Integration tests are used to test how various parts of our application interact. They are generally used to test important workflows within our application.</source>
          <target state="translated">統合テストは、アプリケーションの様々な部分がどのように相互作用するかをテストするために使用されます。一般的には、アプリケーション内の重要なワークフローをテストするために使用されます。</target>
        </trans-unit>
        <trans-unit id="2e1cd626fe8c4b66dfdf6e0d004c6db44ed7558b" translate="yes" xml:space="preserve">
          <source>Integration tests are used to test how various parts of your application interact. They are generally used to test important workflows within our application.</source>
          <target state="translated">統合テストは、アプリケーションの様々な部分がどのように相互作用するかをテストするために使用されます。一般的には、アプリケーション内の重要なワークフローをテストするために使用されます。</target>
        </trans-unit>
        <trans-unit id="b2819304f744a3d244c44613d57e819fac608045" translate="yes" xml:space="preserve">
          <source>Integration#cache_key</source>
          <target state="translated">Integration#cache_key</target>
        </trans-unit>
        <trans-unit id="6c53dea3f7d20bb55236f30495fad68cb70689bb" translate="yes" xml:space="preserve">
          <source>Integration#cache_key_with_version</source>
          <target state="translated">Integration#cache_key_with_version</target>
        </trans-unit>
        <trans-unit id="f02c91c56da5fefe68235806aa6ec3d1994ea656" translate="yes" xml:space="preserve">
          <source>Integration#cache_version</source>
          <target state="translated">Integration#cache_version</target>
        </trans-unit>
        <trans-unit id="21095e92f582034508d7653b41289d55753aeab1" translate="yes" xml:space="preserve">
          <source>Integration#to_param</source>
          <target state="translated">Integration#to_param</target>
        </trans-unit>
        <trans-unit id="ce1fd21e1204581f63416449f6c7edfb967c6d78" translate="yes" xml:space="preserve">
          <source>Integration::ClassMethods</source>
          <target state="translated">Integration::ClassMethods</target>
        </trans-unit>
        <trans-unit id="139e252d29f786121f30f0460e336269c02a8bac" translate="yes" xml:space="preserve">
          <source>Integration::ClassMethods#to_param</source>
          <target state="translated">Integration::ClassMethods#to_param</target>
        </trans-unit>
        <trans-unit id="98b57e9fddf70f7d3e9da54385232a98cebca479" translate="yes" xml:space="preserve">
          <source>IntegrationTest</source>
          <target state="translated">IntegrationTest</target>
        </trans-unit>
        <trans-unit id="ab94e6a337bd2b08d6d1d29161b02030b26df85e" translate="yes" xml:space="preserve">
          <source>Intercepting Emails</source>
          <target state="translated">電子メールの傍受</target>
        </trans-unit>
        <trans-unit id="173c52fe8d7e7d33649dde7c6d75cc38405db524" translate="yes" xml:space="preserve">
          <source>Intercepting and Observing Emails</source>
          <target state="translated">電子メールの傍受と監視</target>
        </trans-unit>
        <trans-unit id="ae9bbcda879bd31a484a0af47874a6bab22e1ed5" translate="yes" xml:space="preserve">
          <source>Interceptors allow you to make modifications to emails before they are handed off to the delivery agents. An interceptor class must implement the &lt;code&gt;::delivering_email(message)&lt;/code&gt; method which will be called before the email is sent.</source>
          <target state="translated">インターセプターを使用すると、配信エージェントに渡される前に電子メールを変更できます。インターセプタークラスは、電子メールが送信される前に呼び出される &lt;code&gt;::delivering_email(message)&lt;/code&gt; メソッドを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="342e3231db1c88366814ccab28f7d0434684057a" translate="yes" xml:space="preserve">
          <source>Interceptors allow you to make modifications to emails before they are handed off to the delivery agents. An interceptor class must implement the &lt;code&gt;:delivering_email(message)&lt;/code&gt; method which will be called before the email is sent.</source>
          <target state="translated">インターセプターを使用すると、配信エージェントに引き渡される前にメールを変更できます。インターセプタークラスは、メールが送信される前に呼び出される &lt;code&gt;:delivering_email(message)&lt;/code&gt; メソッドを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="2dfcc4c89dfb267aa18e62e74d6d54f6561f0fc2" translate="yes" xml:space="preserve">
          <source>Interestingly, the exact same view code in the previous example can be used to edit a person. If &lt;code&gt;@person&lt;/code&gt; is an existing record with name &amp;ldquo;John Smith&amp;rdquo; and ID 256, the code above as is would yield instead:</source>
          <target state="translated">興味深いことに、前の例とまったく同じビューコードを使用して人物を編集できます。 &lt;code&gt;@person&lt;/code&gt; が名前が「John Smith」でIDが256の既存のレコードである場合、上記のコードはそのまま生成されます。</target>
        </trans-unit>
        <trans-unit id="dcc5733b7561d603a93c21562214e0c1d33fb1c8" translate="yes" xml:space="preserve">
          <source>Internal Middleware Stack</source>
          <target state="translated">内部ミドルウェアスタック</target>
        </trans-unit>
        <trans-unit id="505d9d0c421453bd1f4ff40309dee285d37725cf" translate="yes" xml:space="preserve">
          <source>Internally symbols are mapped to strings when used as keys in the entire writing interface (calling &lt;code&gt;[]=&lt;/code&gt;, &lt;code&gt;merge&lt;/code&gt;, etc). This mapping belongs to the public interface. For example, given:</source>
          <target state="translated">書き込みインターフェース全体でキーとして使用される場合、内部的にシンボルは文字列にマップされます（ &lt;code&gt;[]=&lt;/code&gt; 、 &lt;code&gt;merge&lt;/code&gt; の呼び出しなど）。このマッピングはパブリックインターフェイスに属しています。たとえば、次の場合：</target>
        </trans-unit>
        <trans-unit id="3b755f7b857b999860755840e5f0964f6b120c4d" translate="yes" xml:space="preserve">
          <source>Internationalization</source>
          <target state="translated">Internationalization</target>
        </trans-unit>
        <trans-unit id="ec41529ec988c31d48e2791253f7675f0f07663a" translate="yes" xml:space="preserve">
          <source>Internationalization and Localization</source>
          <target state="translated">国際化とローカライゼーション</target>
        </trans-unit>
        <trans-unit id="c09a9a12334a713ae333766d80dbc7726ba5ddbd" translate="yes" xml:space="preserve">
          <source>Internationalization is a complex problem. Natural languages differ in so many ways (e.g. in pluralization rules) that it is hard to provide tools for solving all problems at once. For that reason the Rails I18n API focuses on:</source>
          <target state="translated">国際化は複雑な問題です。自然言語は非常に多くの点で異なっており(複数形化のルールなど)、すべての問題を一度に解決するためのツールを提供することは困難です。そのため、Rails I18n APIはこの問題に焦点を当てています。</target>
        </trans-unit>
        <trans-unit id="5ec77c95171316f9af44f1afebf62f3ac2ca5ee5" translate="yes" xml:space="preserve">
          <source>Interoperability and configuration</source>
          <target state="translated">相互運用性と構成</target>
        </trans-unit>
        <trans-unit id="80feef0d1957adca54e3f9d24dc512572009e68c" translate="yes" xml:space="preserve">
          <source>Interpolation escapes as needed though. For example, given:</source>
          <target state="translated">しかし、必要に応じて補間をエスケープします。例えば、与えられた</target>
        </trans-unit>
        <trans-unit id="b70d894eda2fa1027b4f2cc23a1615a878a3cb5f" translate="yes" xml:space="preserve">
          <source>Interpretation of the output of EXPLAIN is beyond the scope of this guide. The following pointers may be helpful:</source>
          <target state="translated">EXPLAINの出力の解釈は、このガイドの範囲を超えています。以下のポインタが参考になるかもしれません。</target>
        </trans-unit>
        <trans-unit id="1331fd357cb4c48e65a61cb90dbec7b0da4d430b" translate="yes" xml:space="preserve">
          <source>Interpreting EXPLAIN</source>
          <target state="translated">EXPLAINの解釈</target>
        </trans-unit>
        <trans-unit id="438faf6320554999d6e3436c3267791fd96090b3" translate="yes" xml:space="preserve">
          <source>Interprets a file using &lt;code&gt;mechanism&lt;/code&gt; and marks its defined constants as autoloaded. &lt;code&gt;file_name&lt;/code&gt; can be either a string or respond to &lt;code&gt;to_path&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;mechanism&lt;/code&gt; を使用してファイルを解釈し、その定義済み定数をオートロード済みとしてマークします。 &lt;code&gt;file_name&lt;/code&gt; は文字列か、 &lt;code&gt;to_path&lt;/code&gt; に応答することができます。</target>
        </trans-unit>
        <trans-unit id="011efcd591019b5969a332a24dff728a8107dbe2" translate="yes" xml:space="preserve">
          <source>Interval</source>
          <target state="translated">Interval</target>
        </trans-unit>
        <trans-unit id="bab1ab6e63418fb60a28315088fc32113592c35b" translate="yes" xml:space="preserve">
          <source>Intranet and Admin Security</source>
          <target state="translated">イントラネットと管理者のセキュリティ</target>
        </trans-unit>
        <trans-unit id="0a6767b03885ddc439ef17983c2f692c5a07e41e" translate="yes" xml:space="preserve">
          <source>Intranet and administration interfaces are popular attack targets, because they allow privileged access. Although this would require several extra-security measures, the opposite is the case in the real world.</source>
          <target state="translated">イントラネットや管理インターフェイスは、特権的なアクセスを許可するため、攻撃対象としてよく知られています。これにはいくつかの余分なセキュリティ対策が必要ですが、現実の世界では逆のケースもあります。</target>
        </trans-unit>
        <trans-unit id="1e02c113caf7083037190e94f7f4d29321ba00e9" translate="yes" xml:space="preserve">
          <source>Introducing &lt;a href=&quot;concerning#method-i-concerning&quot;&gt;#concerning&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;concerning#method-i-concerning&quot;&gt;#concerningの&lt;/a&gt;紹介</target>
        </trans-unit>
        <trans-unit id="c7d192b525b28dbf34bd94bcd875ed9cc28c7054" translate="yes" xml:space="preserve">
          <source>Introducing &lt;a href=&quot;concerning#method-i-concerning&quot;&gt;&lt;code&gt;Module#concerning&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;concerning#method-i-concerning&quot;&gt; &lt;code&gt;Module#concerning&lt;/code&gt; の&lt;/a&gt;紹介</target>
        </trans-unit>
        <trans-unit id="f8ab457bd47803331ebc080bd833f3ee0b9e2d8f" translate="yes" xml:space="preserve">
          <source>Introducing Rack</source>
          <target state="translated">ラックの紹介</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="b10b45ec08f0b166df0731e9de830720dfa05269" translate="yes" xml:space="preserve">
          <source>Introduction to Rack</source>
          <target state="translated">ラックの紹介</target>
        </trans-unit>
        <trans-unit id="2dc38a9b87ba3ab2b84c75bf7b0f1b314cde1a6d" translate="yes" xml:space="preserve">
          <source>Introduction to Testing</source>
          <target state="translated">テストの紹介</target>
        </trans-unit>
        <trans-unit id="87d217e986a7a6fcb0d9d6294bb7ea099ed34b8e" translate="yes" xml:space="preserve">
          <source>Introduction to instrumentation</source>
          <target state="translated">インストルメンテーションの紹介</target>
        </trans-unit>
        <trans-unit id="cd56babc4fde7c7f6acd80a958c42b65e7e5679b" translate="yes" xml:space="preserve">
          <source>InvalidMatch</source>
          <target state="translated">InvalidMatch</target>
        </trans-unit>
        <trans-unit id="f6d7303488dffe7e3ac8ead1d3fcbd32a701138b" translate="yes" xml:space="preserve">
          <source>Invocation of the tasks will look like:</source>
          <target state="translated">タスクの呼び出しは次のようになります。</target>
        </trans-unit>
        <trans-unit id="58dd409d6a03b715d8a4a7142eeb16c3ce59eda9" translate="yes" xml:space="preserve">
          <source>Invoke a generator based on the value supplied by the user to the given option named &amp;ldquo;name&amp;rdquo;. A class option is created when this method is invoked and you can set a hash to customize it.</source>
          <target state="translated">ユーザーが「name」という名前のオプションに指定した値に基づいてジェネレーターを呼び出します。このメソッドが呼び出されるとクラスオプションが作成され、ハッシュを設定してカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="5b3a05f5c432f715f0fac2ee75b57be97620fa7a" translate="yes" xml:space="preserve">
          <source>Invoke a method on the connection asynchronously through the pool of thread workers.</source>
          <target state="translated">スレッドワーカーのプールを介して、非同期的に接続上のメソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="3ad5366ba531078ac6d163ac3c753ee1d3907e95" translate="yes" xml:space="preserve">
          <source>Invoke the server registered hooks. Check &lt;code&gt;Rails::Railtie.server&lt;/code&gt; for more info.</source>
          <target state="translated">サーバーに登録されたフックを呼び出します。詳細については、 &lt;code&gt;Rails::Railtie.server&lt;/code&gt; を確認してください。</target>
        </trans-unit>
        <trans-unit id="0256c5a56ef3a0bc7ccc3f9ed6d01aea84ad06a9" translate="yes" xml:space="preserve">
          <source>Invokes Journey::Router::Utils.normalize_path and ensure that (:locale) becomes (/:locale) instead of /(:locale). Except for root cases, where the latter is the correct one.</source>
          <target state="translated">Journey::Router::Utils.normalize_path を呼び出し、(:locale)が /(:locale)の代わりに (/:locale)になるようにします。後者が正しい場合のルートケースを除きます。</target>
        </trans-unit>
        <trans-unit id="dd0dd55a6d95ecc47868b96b36290bdfad0559b1" translate="yes" xml:space="preserve">
          <source>Invokes Journey::Router::Utils.normalize_path, then ensures that /(:locale) becomes (/:locale). Except for root cases, where the former is the correct one.</source>
          <target state="translated">Journey::Router::Utils.normalize_pathを呼び出し、/(:locale)が(/:locale)になるようにします。前者が正しい場合のルートケースを除きます。</target>
        </trans-unit>
        <trans-unit id="385202a85d41f1ba93fb6a0880e136ee611817eb" translate="yes" xml:space="preserve">
          <source>Invokes the public method whose name goes as first argument just like &lt;code&gt;public_send&lt;/code&gt; does, except that if the receiver does not respond to it the call returns &lt;code&gt;nil&lt;/code&gt; rather than raising an exception.</source>
          <target state="translated">&lt;code&gt;public_send&lt;/code&gt; と同じように、最初の引数として名前が指定されるpublicメソッドを呼び出します。ただし、レシーバーがそれに応答しない場合、呼び出しは例外を発生させるのではなく &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="59e5020714711541b39a9551f5b84853e831134e" translate="yes" xml:space="preserve">
          <source>Irreversible transformations</source>
          <target state="translated">不可逆的な変換</target>
        </trans-unit>
        <trans-unit id="2f766b312d7e667b7f0d8b9c17bb303b08b1acae" translate="yes" xml:space="preserve">
          <source>Is &lt;code&gt;new_name&lt;/code&gt; an alias?</source>
          <target state="translated">ある &lt;code&gt;new_name&lt;/code&gt; 別名？</target>
        </trans-unit>
        <trans-unit id="b0eda3fd7457c0fb4308b75d0bf6df3d4719aced" translate="yes" xml:space="preserve">
          <source>Is equivalent to:</source>
          <target state="translated">と同等です。</target>
        </trans-unit>
        <trans-unit id="4bccdd2795f3378d91b39fbc9d59c69a50b7194f" translate="yes" xml:space="preserve">
          <source>Is it a &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;&lt;code&gt;belongs_to&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;&lt;code&gt;has_one&lt;/code&gt;&lt;/a&gt; association?</source>
          <target state="translated">それは&lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt; &lt;code&gt;belongs_to&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;classmethods#method-i-has_one&quot;&gt; &lt;code&gt;has_one&lt;/code&gt; &lt;/a&gt;アソシエーションですか？</target>
        </trans-unit>
        <trans-unit id="46fb94424bf8f10921609b59625d794e12d26b07" translate="yes" xml:space="preserve">
          <source>Is it a &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt; or &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one&lt;/a&gt; association?</source>
          <target state="translated">それは&lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt;または&lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one&lt;/a&gt;アソシエーションですか？</target>
        </trans-unit>
        <trans-unit id="7aee814e5e7b7c81d49f7ba52ab62790c23d34e6" translate="yes" xml:space="preserve">
          <source>Is it a GET or HEAD request? GETs should be safe and idempotent</source>
          <target state="translated">それは GET リクエストなのか HEAD リクエストなのか?GET は安全であるべきです。</target>
        </trans-unit>
        <trans-unit id="a559a239bb82de0629bcb6a428aeb5fd89db0826" translate="yes" xml:space="preserve">
          <source>Is the same as:</source>
          <target state="translated">と同じです。</target>
        </trans-unit>
        <trans-unit id="0e468c5ec10bbeae8ac268222bf3b1cefef440a5" translate="yes" xml:space="preserve">
          <source>Is this connection alive and ready for queries?</source>
          <target state="translated">この接続は生きていて、クエリの準備ができていますか?</target>
        </trans-unit>
        <trans-unit id="eac6c893607e2948d6e48939779ac243770bf603" translate="yes" xml:space="preserve">
          <source>Isolated &lt;a href=&quot;engine&quot;&gt;&lt;code&gt;Engine&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">分離された&lt;a href=&quot;engine&quot;&gt; &lt;code&gt;Engine&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="76655109a5cf36c486e596d85b9959d33081cbb3" translate="yes" xml:space="preserve">
          <source>Isolated &lt;a href=&quot;engine&quot;&gt;Engine&lt;/a&gt;</source>
          <target state="translated">隔離された&lt;a href=&quot;engine&quot;&gt;エンジン&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f451fdf2858ac5e97eb02d93dd74df99d36099e" translate="yes" xml:space="preserve">
          <source>Isolated engine's helpers</source>
          <target state="translated">分離されたエンジンのヘルパー</target>
        </trans-unit>
        <trans-unit id="7ac5f519b4cd0a9c673a2b984a399a3a92c58140" translate="yes" xml:space="preserve">
          <source>It accepts a hash where the key is the symbol of the MIME type and the value is a proc.</source>
          <target state="translated">これは、キーが MIME タイプのシンボルで、値が proc であるハッシュを受け取ります。</target>
        </trans-unit>
        <trans-unit id="4a6fae6667f1ec35b8e1214e1089d2257fc09809" translate="yes" xml:space="preserve">
          <source>It accepts a headers hash. This hash allows you to specify the most used headers in an email message, these are:</source>
          <target state="translated">これは、ヘッダハッシュを受け入れます。このハッシュを使用して、メールメッセージで最も使用されるヘッダを指定することができます。</target>
        </trans-unit>
        <trans-unit id="d5f0f4cf85fc4819613826afbcfe7f04f25a0738" translate="yes" xml:space="preserve">
          <source>It accepts two parameters on initialization. The first is a version of library and the second is a library name.</source>
          <target state="translated">初期化時に2つのパラメータを受け取ります。1つ目はライブラリのバージョン、2つ目はライブラリ名です。</target>
        </trans-unit>
        <trans-unit id="9435a5a3fea1387cba916e7fc9c284d2e6dfd894" translate="yes" xml:space="preserve">
          <source>It accepts two parameters on initialization. The first is an array of files and the second is an optional hash of directories. The hash must have directories as keys and the value is an array of extensions to be watched under that directory.</source>
          <target state="translated">これは初期化時に2つのパラメータを受け取ります。1つ目はファイルの配列で、2つ目はオプションのディレクトリのハッシュです。ハッシュはディレクトリをキーとし、値はそのディレクトリの下で監視する拡張機能の配列です。</target>
        </trans-unit>
        <trans-unit id="45d44b1df6715c7a7af6333949ec087808a70c28" translate="yes" xml:space="preserve">
          <source>It allows you to call method &lt;a href=&quot;renderer#method-i-render&quot;&gt;&lt;code&gt;render&lt;/code&gt;&lt;/a&gt; directly.</source>
          <target state="translated">これにより、メソッド&lt;a href=&quot;renderer#method-i-render&quot;&gt; &lt;code&gt;render&lt;/code&gt; を&lt;/a&gt;直接呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="38ca25bcf2c0905e02178cd352066c0836a6a9a0" translate="yes" xml:space="preserve">
          <source>It allows you to call method &lt;a href=&quot;renderer#method-i-render&quot;&gt;render&lt;/a&gt; directly.</source>
          <target state="translated">メソッド&lt;a href=&quot;renderer#method-i-render&quot;&gt;renderを&lt;/a&gt;直接呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="d49d2a57a5a1ca8b7ea86511d458060ee225f77d" translate="yes" xml:space="preserve">
          <source>It also allows you to update the avatar through the member:</source>
          <target state="translated">また、会員経由でアバターを更新することができます。</target>
        </trans-unit>
        <trans-unit id="ebc0f9ba57056697e4de8afcfef4be20a0ad3303" translate="yes" xml:space="preserve">
          <source>It also generated some lines in our &lt;code&gt;database.yml&lt;/code&gt; configuration corresponding to our choice of PostgreSQL for database.</source>
          <target state="translated">また、 &lt;code&gt;database.yml&lt;/code&gt; 用のPostgreSQLの選択に対応するdatabase.yml設定にいくつかの行を生成しました。</target>
        </trans-unit>
        <trans-unit id="39146458b45b3abeec98952f595c4cf5f503332e" translate="yes" xml:space="preserve">
          <source>It also gives you the ability to initialize an object with a hash of attributes, much like any Active Record object.</source>
          <target state="translated">また、Active Record オブジェクトのように、属性のハッシュでオブジェクトを初期化する機能も提供します。</target>
        </trans-unit>
        <trans-unit id="bd0ee1da8322e4399bcac48a328b9839193f1124" translate="yes" xml:space="preserve">
          <source>It also searches for a key specific to the given object:</source>
          <target state="translated">また、与えられたオブジェクトに固有のキーを検索します。</target>
        </trans-unit>
        <trans-unit id="cfedffa8e710bb3bffa6f731ec1bf9d845f19fbc" translate="yes" xml:space="preserve">
          <source>It also strips href/src attributes with unsafe protocols like &lt;code&gt;javascript:&lt;/code&gt;, while also protecting against attempts to use Unicode, ASCII, and hex character references to work around these protocol filters. All special characters will be escaped.</source>
          <target state="translated">また、 &lt;code&gt;javascript:&lt;/code&gt; などの安全でないプロトコルを使用してhref / src属性を取り除き、これらのプロトコルフィルターを回避するためにUnicode、ASCII、および16進文字参照を使用する試みから保護します。すべての特殊文字はエスケープされます。</target>
        </trans-unit>
        <trans-unit id="426c108419ecab367f3cf08cecf90bf1479d10f5" translate="yes" xml:space="preserve">
          <source>It can also be used to return exceptional conditions:</source>
          <target state="translated">また、例外的な条件を返すために使用することもできます。</target>
        </trans-unit>
        <trans-unit id="9316df6dbeb2297de41526f9b627ebdbe698b986" translate="yes" xml:space="preserve">
          <source>It can also be used with an explicit receiver:</source>
          <target state="translated">また、明示的な受信機との併用も可能です。</target>
        </trans-unit>
        <trans-unit id="6dba1fa6506ff89cb1689631b83474c09424753e" translate="yes" xml:space="preserve">
          <source>It can also be useful to save information to log files at runtime. Rails maintains a separate log file for each runtime environment.</source>
          <target state="translated">また、実行時にログファイルに情報を保存しておくと便利です。Railsでは、実行時の環境ごとに個別のログファイルを保持しています。</target>
        </trans-unit>
        <trans-unit id="2831d4f1ce96a57796267468ca626023eda9252e" translate="yes" xml:space="preserve">
          <source>It can also calculate the sum without the use of a block.</source>
          <target state="translated">また、ブロックを使わずに和を計算することもできます。</target>
        </trans-unit>
        <trans-unit id="7687f2339942576b33eabc229b67923feb868d9f" translate="yes" xml:space="preserve">
          <source>It can also receive an &lt;code&gt;:accept&lt;/code&gt; option, which determines the allowed values that will be considered as accepted. It defaults to &lt;code&gt;['1', true]&lt;/code&gt; and can be easily changed.</source>
          <target state="translated">&lt;code&gt;:accept&lt;/code&gt; オプションを受け取ることもできます。これは、受け入れられたと見なされる許容値を決定します。デフォルトは &lt;code&gt;['1', true]&lt;/code&gt; 、簡単に変更できます。</target>
        </trans-unit>
        <trans-unit id="a234c9c580ec73225fe07a2b2cb15c5278679324" translate="yes" xml:space="preserve">
          <source>It can also validate whether the value of the specified attributes are unique based on a &lt;code&gt;:scope&lt;/code&gt; parameter:</source>
          <target state="translated">また、指定した属性の値が &lt;code&gt;:scope&lt;/code&gt; パラメータに基づいて一意であるかどうかを検証できます。</target>
        </trans-unit>
        <trans-unit id="40a7b1d9d8a7cd76b12428401930bc5065694c8d" translate="yes" xml:space="preserve">
          <source>It can be used along with &lt;code&gt;belongs_to&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;belongs_to&lt;/code&gt; と一緒に使用できます：</target>
        </trans-unit>
        <trans-unit id="22e1c7f72b5a3c73c0cb68a4bbb7d3c44ef4b893" translate="yes" xml:space="preserve">
          <source>It can be used as follow:</source>
          <target state="translated">以下のように使用することができます。</target>
        </trans-unit>
        <trans-unit id="bd8e399f3585248f5db85e7a07a982ef55fb80c9" translate="yes" xml:space="preserve">
          <source>It can be useful to access the class that is using that validator when there are prerequisites such as an &lt;code&gt;attr_accessor&lt;/code&gt; being present. This class is accessible via &lt;code&gt;options[:class]&lt;/code&gt; in the constructor. To set up your validator override the constructor.</source>
          <target state="translated">&lt;code&gt;attr_accessor&lt;/code&gt; などの前提条件が存在する場合は、そのバリデーターを使用しているクラスにアクセスすると便利です。このクラスには、コンストラクターの &lt;code&gt;options[:class]&lt;/code&gt; からアクセスできます。バリデーターを設定するには、コンストラクターをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="1ac0a20ef283df4adc7e264352fcf154710271f2" translate="yes" xml:space="preserve">
          <source>It can be useful to access the class that is using that validator when there are prerequisites such as an &lt;code&gt;attr_accessor&lt;/code&gt; being present. This class is accessible via &lt;code&gt;options[:class]&lt;/code&gt; in the constructor. To setup your validator override the constructor.</source>
          <target state="translated">&lt;code&gt;attr_accessor&lt;/code&gt; が存在するなどの前提条件がある場合、そのバリデーターを使用しているクラスにアクセスすると便利です。このクラスには、コンストラクターの &lt;code&gt;options[:class]&lt;/code&gt; を介してアクセスできます。バリデーターを設定するには、コンストラクターをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="96a8cf569167573398933897b23ace80840cc711" translate="yes" xml:space="preserve">
          <source>It could be the case that some particular file or directory name does not get inflected as you want. For instance, &lt;code&gt;html_parser.rb&lt;/code&gt; is expected to define &lt;code&gt;HtmlParser&lt;/code&gt; by default. What if you prefer the class to be &lt;code&gt;HTMLParser&lt;/code&gt;? There are a few ways to customize this.</source>
          <target state="translated">特定のファイルまたはディレクトリ名が希望どおりに活用されない場合があります。たとえば、 &lt;code&gt;html_parser.rb&lt;/code&gt; はデフォルトで &lt;code&gt;HtmlParser&lt;/code&gt; を定義することが期待されています。クラスを &lt;code&gt;HTMLParser&lt;/code&gt; にしたい場合はどうなりますか？これをカスタマイズする方法はいくつかあります。</target>
        </trans-unit>
        <trans-unit id="71ab59b1e35929a8594e36b0ef1ec13b4b68d49a" translate="yes" xml:space="preserve">
          <source>It creates and returns an instance of the &lt;a href=&quot;activesupport/multibyte/chars&quot;&gt;&lt;code&gt;ActiveSupport::Multibyte::Chars&lt;/code&gt;&lt;/a&gt; class which encapsulates the original string. A Unicode safe version of all the &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; methods are defined on this proxy class. If the proxy class doesn't respond to a certain method, it's forwarded to the encapsulated string.</source>
          <target state="translated">元の文字列をカプセル化する&lt;a href=&quot;activesupport/multibyte/chars&quot;&gt; &lt;code&gt;ActiveSupport::Multibyte::Chars&lt;/code&gt; &lt;/a&gt;クラスのインスタンスを作成して返します。すべての&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;メソッドのUnicodeセーフバージョンは、このプロキシクラスで定義されています。プロキシクラスが特定のメソッドに応答しない場合、カプセル化された文字列に転送されます。</target>
        </trans-unit>
        <trans-unit id="49b4aa175d14125482748aa613908101aa82e8b5" translate="yes" xml:space="preserve">
          <source>It creates and returns an instance of the &lt;a href=&quot;activesupport/multibyte/chars&quot;&gt;ActiveSupport::Multibyte::Chars&lt;/a&gt; class which encapsulates the original string. A Unicode safe version of all the &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt; methods are defined on this proxy class. If the proxy class doesn't respond to a certain method, it's forwarded to the encapsulated string.</source>
          <target state="translated">元の文字列をカプセル化する&lt;a href=&quot;activesupport/multibyte/chars&quot;&gt;ActiveSupport :: Multibyte :: Chars&lt;/a&gt;クラスのインスタンスを作成して返します。すべての&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;メソッドのUnicodeセーフバージョンがこのプロキシクラスで定義されています。プロキシクラスが特定のメソッドに応答しない場合は、カプセル化された文字列に転送されます。</target>
        </trans-unit>
        <trans-unit id="499cc07feea969499a3dc48ed2492713c8c86211" translate="yes" xml:space="preserve">
          <source>It does not call &lt;code&gt;to_a&lt;/code&gt; on the argument, if the argument does not respond to &lt;code&gt;to_ary&lt;/code&gt; it returns an array with the argument as its single element.</source>
          <target state="translated">それは呼ばない &lt;code&gt;to_a&lt;/code&gt; 引数が応答しない場合は、引数にし &lt;code&gt;to_ary&lt;/code&gt; それはその単一の要素として引数を配列で返します。</target>
        </trans-unit>
        <trans-unit id="56b4d8dc1bf62dfda767cc7b994335d9456a43bf" translate="yes" xml:space="preserve">
          <source>It intends to prevent odd bugs and confusion in code that call mutator methods directly on the &lt;code&gt;Relation&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Relation&lt;/code&gt; で直接ミューテーターメソッドを呼び出すコードの奇妙なバグや混乱を防ぐことを目的としています。</target>
        </trans-unit>
        <trans-unit id="5d5c5b84f1606def2d58f9fb00f6b5f36fadaeab" translate="yes" xml:space="preserve">
          <source>It is &lt;strong&gt;highly&lt;/strong&gt; recommended that the &lt;code&gt;isolate_namespace&lt;/code&gt; line be left within the &lt;code&gt;Engine&lt;/code&gt; class definition. Without it, classes generated in an engine &lt;strong&gt;may&lt;/strong&gt; conflict with an application.</source>
          <target state="translated">&lt;code&gt;isolate_namespace&lt;/code&gt; 行を &lt;code&gt;Engine&lt;/code&gt; クラス定義内に残すことを&lt;strong&gt;強く&lt;/strong&gt;お勧めします。これがないと、エンジンで生成されたクラスがアプリケーションと競合する&lt;strong&gt;可能性&lt;/strong&gt;があります。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="10cfb379bf3244a1c48de6cb1cda23ec4480ebb5" translate="yes" xml:space="preserve">
          <source>It is accessed in much the same way as the session, as a hash (it's a &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Flash/FlashHash.html&quot;&gt;FlashHash&lt;/a&gt; instance).</source>
          <target state="translated">セッションとほとんど同じ方法で、ハッシュとしてアクセスされます（&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Flash/FlashHash.html&quot;&gt;FlashHash&lt;/a&gt;インスタンスです）。</target>
        </trans-unit>
        <trans-unit id="83efac2576f2e3cca18100e7aee4b5a47479b098" translate="yes" xml:space="preserve">
          <source>It is also important to use different salt values for encrypted and signed cookies. Using the same value for different salt configuration values may lead to the same derived key being used for different security features which in turn may weaken the strength of the key.</source>
          <target state="translated">暗号化されたクッキーと署名されたクッキーでは、異なるソルト値を使用することも重要です。異なるソルト設定値に同じ値を使用すると、同じ派生鍵が異なるセキュリティ機能に使用され、鍵の強度が弱くなる可能性があります。</target>
        </trans-unit>
        <trans-unit id="fd5336404614ecb4acce82c4ff85169b0e93d510" translate="yes" xml:space="preserve">
          <source>It is also possible to assign a flash message as part of the redirection. There are two special accessors for the commonly used flash names &lt;code&gt;alert&lt;/code&gt; and &lt;code&gt;notice&lt;/code&gt; as well as a general purpose &lt;code&gt;flash&lt;/code&gt; bucket.</source>
          <target state="translated">リダイレクトの一部としてフラッシュメッセージを割り当てることもできます。一般的に使用されるフラッシュ名の &lt;code&gt;alert&lt;/code&gt; と &lt;code&gt;notice&lt;/code&gt; 、および汎用 &lt;code&gt;flash&lt;/code&gt; バケットには、2つの特別なアクセサーがあります。</target>
        </trans-unit>
        <trans-unit id="179fe87c22bf5b6c89ee355df0482f9dc84a0da7" translate="yes" xml:space="preserve">
          <source>It is also possible to automatically disable an input while the form is submitting by using the &lt;code&gt;data-disable-with&lt;/code&gt; attribute. This is to prevent accidental double-clicks from the user, which could result in duplicate HTTP requests that the backend may not detect as such. The value of the attribute is the text that will become the new value of the button in its disabled state.</source>
          <target state="translated">&lt;code&gt;data-disable-with&lt;/code&gt; 属性を使用して、フォームの送信中に入力を自動的に無効にすることもできます。これは、ユーザーが誤ってダブルクリックして、バックエンドがそのように検出できないHTTPリクエストが重複する可能性があるのを防ぐためです。属性の値は、無効な状態のボタンの新しい値になるテキストです。</target>
        </trans-unit>
        <trans-unit id="348a45df3c04b6d5fe9c86d061104b62e5b62d75" translate="yes" xml:space="preserve">
          <source>It is also possible to customize the way the elements will be shown by giving a block to the method:</source>
          <target state="translated">メソッドにブロックを与えることで、要素の表示方法をカスタマイズすることも可能です。</target>
        </trans-unit>
        <trans-unit id="5e55d2ed2495603dfd9e5fa2fc9d52ef7987d08b" translate="yes" xml:space="preserve">
          <source>It is also possible to define the Ajax &lt;code&gt;dataType&lt;/code&gt; explicitly while performing requests for &lt;code&gt;data-remote&lt;/code&gt; elements, by way of the &lt;code&gt;data-type&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;code&gt;data-type&lt;/code&gt; 属性を使用して、 &lt;code&gt;data-remote&lt;/code&gt; 要素のリクエストを実行しながら、Ajax &lt;code&gt;dataType&lt;/code&gt; を明示的に定義することもできます。</target>
        </trans-unit>
        <trans-unit id="819fc44ec9ef18718e13d598795b20fdc7e69280" translate="yes" xml:space="preserve">
          <source>It is also possible to limit the uniqueness constraint to a set of records matching certain conditions. In this example archived articles are not being taken into consideration when validating uniqueness of the title attribute:</source>
          <target state="translated">一意性制約を特定の条件にマッチするレコードのセットに限定することも可能です。この例では、アーカイブされた記事はtitle属性の一意性を検証する際に考慮されていません。</target>
        </trans-unit>
        <trans-unit id="a985124ab3a30ac2f740ba2e729b65433dd15f7c" translate="yes" xml:space="preserve">
          <source>It is also possible to pass a custom serializer that responds to &lt;code&gt;load&lt;/code&gt; and &lt;code&gt;dump&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;load&lt;/code&gt; と &lt;code&gt;dump&lt;/code&gt; 応答するカスタムシリアライザーを渡すことも可能です。</target>
        </trans-unit>
        <trans-unit id="d7a775c2c33dca7d2800bfafa6f196f92f27191d" translate="yes" xml:space="preserve">
          <source>It is also possible to pass an object which responds to &lt;code&gt;call&lt;/code&gt; method as the second parameter to the &lt;code&gt;subscribe&lt;/code&gt; method instead of a block:</source>
          <target state="translated">2番目のパラメーターとして、 &lt;code&gt;call&lt;/code&gt; メソッドに応答するオブジェクトをブロックの代わりに &lt;code&gt;subscribe&lt;/code&gt; メソッドに渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="18abb3beeb3bf6cdf55d0d1bc4bfefab51a336a9" translate="yes" xml:space="preserve">
          <source>It is also possible to set a default host that will be used in all mailers by setting the &lt;code&gt;:host&lt;/code&gt; option as a configuration option in &lt;code&gt;config/application.rb&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;config/application.rb&lt;/code&gt; の構成オプションとして &lt;code&gt;:host&lt;/code&gt; オプションを設定することで、すべてのメーラーで使用されるデフォルトのホストを設定することもできます。</target>
        </trans-unit>
        <trans-unit id="ab7cb2d57cb049b703f4721d525abf15854caa6a" translate="yes" xml:space="preserve">
          <source>It is also possible to set these default options that will be used in all mailers through the &lt;code&gt;default_options=&lt;/code&gt; configuration in &lt;code&gt;config/application.rb&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;config/application.rb&lt;/code&gt; の &lt;code&gt;default_options=&lt;/code&gt; 設定を介して、すべてのメーラーで使用されるこれらのデフォルトオプションを設定することもできます。</target>
        </trans-unit>
        <trans-unit id="7b781e4a3aafdb190e8c24f4f3c6f103c1f5c3b3" translate="yes" xml:space="preserve">
          <source>It is also possible to supply a custom prefix.</source>
          <target state="translated">カスタムのプレフィックスを指定することも可能です。</target>
        </trans-unit>
        <trans-unit id="217db1c91aa9f1200c2f9bc48daada017d477db5" translate="yes" xml:space="preserve">
          <source>It is beyond the scope of this guide to document Ruby constants, but we are nevertheless going to highlight a few key topics. Truly grasping the following sections is instrumental to understanding constant autoloading and reloading.</source>
          <target state="translated">このガイドでは、Ruby の定数について説明することはできませんが、いくつかの重要なトピックを紹介します。以下のセクションを本当に理解することは、定数のオートロードとリロードを理解する上で非常に重要です。</target>
        </trans-unit>
        <trans-unit id="3258883b4eb20fb13831be19bf566b5526debab3" translate="yes" xml:space="preserve">
          <source>It is beyond the scope of this guide to inform you on how to secure your application code and environments. However, please secure your database configuration, e.g. &lt;code&gt;config/database.yml&lt;/code&gt;, master key for &lt;code&gt;credentials.yml&lt;/code&gt;, and other unencrypted secrets. You may want to further restrict access, using environment-specific versions of these files and any others that may contain sensitive information.</source>
          <target state="translated">アプリケーションコードと環境を保護する方法については、このガイドの範囲を超えています。ただし、データベース構成（ &lt;code&gt;config/database.yml&lt;/code&gt; 、 &lt;code&gt;credentials.yml&lt;/code&gt; のマスターキー、その他の暗号化されていないシークレットなど）を保護してください。これらのファイルの環境固有のバージョンや、機密情報を含む可能性のあるその他のファイルを使用して、アクセスをさらに制限することができます。</target>
        </trans-unit>
        <trans-unit id="6fe4130ab4ee095a6deeb9892cd4088476f03a76" translate="yes" xml:space="preserve">
          <source>It is common to use persistent cookies to store user information, with &lt;code&gt;cookies.permanent&lt;/code&gt; for example. In this case, the cookies will not be cleared and the out of the box CSRF protection will not be effective. If you are using a different cookie store than the session for this information, you must handle what to do with it yourself:</source>
          <target state="translated">たとえば、 &lt;code&gt;cookies.permanent&lt;/code&gt; のように、永続的なCookieを使用してユーザー情報を保存するのが一般的です。この場合、Cookieはクリアされず、すぐに使用できるCSRF保護は有効になりません。この情報のセッションとは異なるCookieストアを使用している場合は、それを自分で処理する必要があります。</target>
        </trans-unit>
        <trans-unit id="f9341cff4e30114860c81d61ae45c3c73d6ae1c7" translate="yes" xml:space="preserve">
          <source>It is considered good practice to declare callback methods as private. If left public, they can be called from outside of the model and violate the principle of object encapsulation.</source>
          <target state="translated">コールバックメソッドをプライベートとして宣言することは良い習慣と考えられています。public のままにしておくと、モデルの外部から呼び出される可能性があり、オブジェクトカプセル化の原則に違反します。</target>
        </trans-unit>
        <trans-unit id="43a011e67c6ead698c933aa355ff5673de5432b5" translate="yes" xml:space="preserve">
          <source>It is equivalent to writing:</source>
          <target state="translated">書くことに相当します。</target>
        </trans-unit>
        <trans-unit id="01ba04d8b437042468e0c2c09742be51208f176a" translate="yes" xml:space="preserve">
          <source>It is generally safe to exclude XHR requests from CSRF protection (like the code snippet above does), because XHR requests can only be made from the same origin. Note however that any cross-origin third party domain allowed via &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-origin_resource_sharing&quot;&gt;CORS&lt;/a&gt; will also be able to create XHR requests. Be sure to check your CORS configuration before disabling forgery protection for XHR.</source>
          <target state="translated">XHRリクエストは同じオリジンからのみ作成できるため、XHRリクエストをCSRF保護から除外することは一般的に安全です（上記のコードスニペットのように）。ただし、&lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-origin_resource_sharing&quot;&gt;CORS&lt;/a&gt;を介して許可されたクロスオリジンサードパーティドメインもXHRリクエストを作成できることに注意してください。XHRの偽造防止を無効にする前に、必ずCORS設定を確認してください。</target>
        </trans-unit>
        <trans-unit id="a207a505579df11ef014f66a20f5d9cf4698ae30" translate="yes" xml:space="preserve">
          <source>It is important that this folder is shared between deployments so that remotely cached pages referencing the old compiled assets still work for the life of the cached page.</source>
          <target state="translated">このフォルダをデプロイメント間で共有することが重要で、古いコンパイルされたアセットを参照してリモートでキャッシュされたページがキャッシュされたページの有効期間中も動作するようにします。</target>
        </trans-unit>
        <trans-unit id="dda9f7c4cb278191f2fd04c7db508eb24b9287cd" translate="yes" xml:space="preserve">
          <source>It is important to note that files you want to reference outside a manifest must be added to the precompile array or they will not be available in the production environment.</source>
          <target state="translated">マニフェストの外で参照するファイルはプリコンパイル配列に追加する必要があり、そうしないと本番環境では利用できないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="525c4700d9b0c161a634194efc57c56e14f975ce" translate="yes" xml:space="preserve">
          <source>It is important to notice that the actual crafted image or link doesn't necessarily have to be situated in the web application's domain, it can be anywhere - in a forum, blog post, or email.</source>
          <target state="translated">それは、実際に細工された画像やリンクが必ずしもウェブアプリケーションのドメインに位置している必要はないことに気づくことが重要であり、それはどこにでもあることができます-フォーラム、ブログ記事、または電子メールで。</target>
        </trans-unit>
        <trans-unit id="a753c2dcf80c811ac30d16c0dda03089e7018f95" translate="yes" xml:space="preserve">
          <source>It is important to understand that &lt;code&gt;html_safe&lt;/code&gt; performs no escaping whatsoever, it is just an assertion:</source>
          <target state="translated">&lt;code&gt;html_safe&lt;/code&gt; はエスケープを実行せず、単なるアサーションであることを理解することが重要です。</target>
        </trans-unit>
        <trans-unit id="d55e0a0d2aac8db229502f8ef70a2140d1f09635" translate="yes" xml:space="preserve">
          <source>It is important to understand that the nesting is composed of class and module &lt;em&gt;objects&lt;/em&gt;, it has nothing to do with the constants used to access them, and is also unrelated to their names.</source>
          <target state="translated">ネストはクラス&lt;em&gt;オブジェクト&lt;/em&gt;とモジュール&lt;em&gt;オブジェクト&lt;/em&gt;で構成され、それらにアクセスするために使用される定数とは何の関係もなく、名前にも関係がないことを理解することが重要です。</target>
        </trans-unit>
        <trans-unit id="41efcacaf212ba9a4488f51d99b234f2f8337edd" translate="yes" xml:space="preserve">
          <source>It is interesting to observe that blocks do not modify the stack. In particular the blocks that may be passed to &lt;code&gt;Class.new&lt;/code&gt; and &lt;code&gt;Module.new&lt;/code&gt; do not get the class or module being defined pushed to their nesting. That's one of the differences between defining classes and modules in one way or another.</source>
          <target state="translated">ブロックがスタックを変更しないことを観察することは興味深いです。特に、 &lt;code&gt;Class.new&lt;/code&gt; および &lt;code&gt;Module.new&lt;/code&gt; に渡される可能性のあるブロックは、定義されているクラスまたはモジュールを入れ子にプッシュしません。これは、クラスとモジュールの定義の違いの1つです。</target>
        </trans-unit>
        <trans-unit id="941e591857cdf0d45804c6c106a3821ade8d5bf6" translate="yes" xml:space="preserve">
          <source>It is necessary to &lt;code&gt;raw&lt;/code&gt; the result of &lt;code&gt;json_escape&lt;/code&gt;, so that quotation marks don't get converted to &lt;code&gt;&amp;amp;quot;&lt;/code&gt; entities. &lt;code&gt;json_escape&lt;/code&gt; doesn't automatically flag the result as HTML safe, since the raw value is unsafe to use inside HTML attributes.</source>
          <target state="translated">引用符が &lt;code&gt;&amp;amp;quot;&lt;/code&gt; に変換されないように、 &lt;code&gt;json_escape&lt;/code&gt; の結果を &lt;code&gt;raw&lt;/code&gt; にする必要があります。エンティティ。 &lt;code&gt;json_escape&lt;/code&gt; は、生の値をHTML属性内で使用するのは安全でないため、結果をHTMLセーフとして自動的にフラグ付けしません。</target>
        </trans-unit>
        <trans-unit id="59035bb25168789f781c7f9fcd3e7e21efa80ace" translate="yes" xml:space="preserve">
          <source>It is not necessary to pass all the attributes to &lt;code&gt;update&lt;/code&gt;. For example, if &lt;code&gt;@article.update(title: 'A new title')&lt;/code&gt; was called, Rails would only update the &lt;code&gt;title&lt;/code&gt; attribute, leaving all other attributes untouched.</source>
          <target state="translated">&lt;code&gt;update&lt;/code&gt; するためにすべての属性を渡す必要はありません。たとえば、 &lt;code&gt;@article.update(title: 'A new title')&lt;/code&gt; が呼び出された場合、Railsは &lt;code&gt;title&lt;/code&gt; 属性のみを更新し、他のすべての属性はそのままにします。</target>
        </trans-unit>
        <trans-unit id="93598eff3d787ca530523d68e5e3b68468b4d0d0" translate="yes" xml:space="preserve">
          <source>It is not recommended that you stream static files through Rails if you can instead keep them in a public folder on your web server. It is much more efficient to let the user download the file directly using Apache or another web server, keeping the request from unnecessarily going through the whole Rails stack.</source>
          <target state="translated">静的ファイルをWebサーバのパブリックフォルダに保存できるのであれば、静的ファイルをRails経由でストリーム配信することはお勧めできません。Apacheや別のWebサーバを使って直接ファイルをダウンロードさせた方がはるかに効率的で、リクエストが不必要にRailsスタック全体を通過することを防ぎます。</target>
        </trans-unit>
        <trans-unit id="d015ad73b3672fc5748a09b49d6df746aa38bf26" translate="yes" xml:space="preserve">
          <source>It is not recommended to use this method in a request since it does not yield to a block like `connected_to`.</source>
          <target state="translated">このメソッドは `connected_to` のようなブロックを生成しないので、このメソッドをリクエストで使用することは推奨されません。</target>
        </trans-unit>
        <trans-unit id="e88432ee04e64b5f3195b709467ab625a7694aa3" translate="yes" xml:space="preserve">
          <source>It is often useful to ignore sets of fields that the user has not filled in. You can control this by passing a &lt;code&gt;:reject_if&lt;/code&gt; proc to &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt;. This proc will be called with each hash of attributes submitted by the form. If the proc returns &lt;code&gt;false&lt;/code&gt; then Active Record will not build an associated object for that hash. The example below only tries to build an address if the &lt;code&gt;kind&lt;/code&gt; attribute is set.</source>
          <target state="translated">ユーザーが記入されていないことをフィールドのセットを無視することが有用であることが多いあなたが渡すことで、これを制御することができます。 &lt;code&gt;:reject_if&lt;/code&gt; にPROCを &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt; 。このプロシージャは、フォームから送信された属性のハッシュごとに呼び出されます。プロシージャが &lt;code&gt;false&lt;/code&gt; を返す場合、アクティブレコードはそのハッシュの関連オブジェクトを構築しません。以下の例では、 &lt;code&gt;kind&lt;/code&gt; 属性が設定されている場合にのみアドレスの作成を試みます。</target>
        </trans-unit>
        <trans-unit id="359dd26ed4325027fc03a54808e8ea6356971976" translate="yes" xml:space="preserve">
          <source>It is only soft-deprecated, which means that your code will not break at the moment and no deprecation warning will be displayed, but this constant will be removed in the future.</source>
          <target state="translated">これはソフトディスクリプタートされているだけなので、今のところコードが壊れることはなく、非推奨の警告は表示されませんが、この定数は将来的には削除されるでしょう。</target>
        </trans-unit>
        <trans-unit id="4562ca89794a86c1f1a7abdb14c2b0bf7874f843" translate="yes" xml:space="preserve">
          <source>It is possible to associate &lt;code&gt;:if&lt;/code&gt; and &lt;code&gt;:unless&lt;/code&gt; with a &lt;code&gt;Proc&lt;/code&gt; object which will be called. Using a &lt;code&gt;Proc&lt;/code&gt; object gives you the ability to write an inline condition instead of a separate method. This option is best suited for one-liners.</source>
          <target state="translated">&lt;code&gt;:if&lt;/code&gt; および &lt;code&gt;:unless&lt;/code&gt; を、呼び出される &lt;code&gt;Proc&lt;/code&gt; オブジェクトに関連付けることができます。 &lt;code&gt;Proc&lt;/code&gt; オブジェクトを使用すると、個別のメソッドの代わりにインライン条件を書き込むことができます。このオプションは、ワンライナーに最適です。</target>
        </trans-unit>
        <trans-unit id="cf776ffebf1af8bc2d942f750e9a51092414860e" translate="yes" xml:space="preserve">
          <source>It is possible to associate &lt;code&gt;:if&lt;/code&gt; and &lt;code&gt;:unless&lt;/code&gt; with a &lt;code&gt;Proc&lt;/code&gt; object. This option is best suited when writing short validation methods, usually one-liners:</source>
          <target state="translated">&lt;code&gt;:if&lt;/code&gt; および &lt;code&gt;:unless&lt;/code&gt; を &lt;code&gt;Proc&lt;/code&gt; オブジェクトに関連付けることができます。このオプションは、短い検証メソッド（通常は1行）を記述する場合に最適です。</target>
        </trans-unit>
        <trans-unit id="94c0520a8d6f229af5d1702cf7d9bb86be3a506e" translate="yes" xml:space="preserve">
          <source>It is possible to customize the behavior of elements with a &lt;code&gt;data-remote&lt;/code&gt; attribute without writing a line of JavaScript. You can specify extra &lt;code&gt;data-&lt;/code&gt; attributes to accomplish this.</source>
          <target state="translated">JavaScriptの行を記述しなくても、 &lt;code&gt;data-remote&lt;/code&gt; 属性を持つ要素の動作をカスタマイズできます。これを行うために、追加の &lt;code&gt;data-&lt;/code&gt; 属性を指定できます。</target>
        </trans-unit>
        <trans-unit id="5fdb819e34d79e2af13d3f5739becece3367eef9" translate="yes" xml:space="preserve">
          <source>It is possible to return to old behavior and disable &lt;code&gt;deep_munge&lt;/code&gt; configuring your application if you are aware of the risk and know how to handle it:</source>
          <target state="translated">リスクを認識し、それを処理する方法を知っている場合は、以前の動作に戻り、アプリケーションを構成する &lt;code&gt;deep_munge&lt;/code&gt; を無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="c699de2f3bdf654ecdd4536b61685dc7cafc0885" translate="yes" xml:space="preserve">
          <source>It is possible to send email to one or more recipients in one email (e.g., informing all admins of a new signup) by setting the list of emails to the &lt;code&gt;:to&lt;/code&gt; key. The list of emails can be an array of email addresses or a single string with the addresses separated by commas.</source>
          <target state="translated">メールのリストを &lt;code&gt;:to&lt;/code&gt; キーに設定することにより、1人のメールで1人以上の受信者にメールを送信することができます（たとえば、すべての管理者に新しいサインアップを通知する）。電子メールのリストは、電子メールアドレスの配列、またはアドレスをコンマで区切った単一の文字列にすることができます。</target>
        </trans-unit>
        <trans-unit id="dd2fba07d1449421861070682cf3bc42607770a5" translate="yes" xml:space="preserve">
          <source>It is possible to share partials and associated caching between files with different mime types. For example shared partial caching allows template writers to share a partial between HTML and JavaScript files. When templates are collected in the template resolver file paths they only include the template language extension and not the mime type. Because of this templates can be used for multiple mime types. Both HTML and JavaScript requests will respond to the following code:</source>
          <target state="translated">異なる MIME タイプのファイル間でパーシャルと関連するキャッシングを共有することができます。例えば、共有されたパーシャルのキャッシングにより、テンプレートライターは HTML ファイルと JavaScript ファイルの間でパーシャルを共有することができます。テンプレートがテンプレートリゾルバのファイルパスに収集されるとき、テンプレートにはテンプレート言語拡張子のみが含まれ、マイムタイプは含まれません。このため、テンプレートは複数の MIME タイプに使用することができます。HTML と JavaScript の両方のリクエストは、以下のコードに応答します。</target>
        </trans-unit>
        <trans-unit id="b8fd1eae44ed2d596522e191f73299d597768b59" translate="yes" xml:space="preserve">
          <source>It is possible to swap the shipped Simple backend with a more powerful one, which would store translation data in a relational database, GetText dictionary, or similar. See section &lt;a href=&quot;#using-different-backends&quot;&gt;Using different backends&lt;/a&gt; below.</source>
          <target state="translated">付属のSimpleバックエンドを、リレーショナルデータベースやGetText辞書などに保存するより強力なものと交換することができます。以下のセクション「&lt;a href=&quot;#using-different-backends&quot;&gt;さまざまなバックエンドの使用&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="648e7ff34b53bee2903e398ed4116f0d74bf63d7" translate="yes" xml:space="preserve">
          <source>It is recommended not to use the same verifier for different things, so you can get different verifiers passing the &lt;code&gt;verifier_name&lt;/code&gt; argument.</source>
          <target state="translated">異なるものに同じベリファイアを使用しないことをお勧めします。これにより、 &lt;code&gt;verifier_name&lt;/code&gt; 引数を渡して異なるベリファイアを取得できます。</target>
        </trans-unit>
        <trans-unit id="ab44ad0eac99bfa97d75c89f0ad0ef7a845ed57e" translate="yes" xml:space="preserve">
          <source>It is recommended to &lt;em&gt;use RedCloth in combination with a permitted input filter&lt;/em&gt;, as described in the countermeasures against XSS section.</source>
          <target state="translated">XSS対策のセクションで説明されているように、&lt;em&gt;許可された入力フィルターと組み合わせてRedCloth&lt;/em&gt;を&lt;em&gt;使用する&lt;/em&gt;ことをお勧めし&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="31461f64487532620d38eadf42db9852c1279cb0" translate="yes" xml:space="preserve">
          <source>It is safe to call this method if a database transaction is already open, i.e. if &lt;a href=&quot;databasestatements#method-i-transaction&quot;&gt;&lt;code&gt;transaction&lt;/code&gt;&lt;/a&gt; is called within another &lt;a href=&quot;databasestatements#method-i-transaction&quot;&gt;&lt;code&gt;transaction&lt;/code&gt;&lt;/a&gt; block. In case of a nested call, &lt;a href=&quot;databasestatements#method-i-transaction&quot;&gt;&lt;code&gt;transaction&lt;/code&gt;&lt;/a&gt; will behave as follows:</source>
          <target state="translated">データベーストランザクションがすでに開いている場合、つまり&lt;a href=&quot;databasestatements#method-i-transaction&quot;&gt; &lt;code&gt;transaction&lt;/code&gt; &lt;/a&gt;が別の&lt;a href=&quot;databasestatements#method-i-transaction&quot;&gt; &lt;code&gt;transaction&lt;/code&gt; &lt;/a&gt;ブロック内で呼び出されている場合は、このメソッドを呼び出しても安全です。ネストされた呼び出しの場合、&lt;a href=&quot;databasestatements#method-i-transaction&quot;&gt; &lt;code&gt;transaction&lt;/code&gt; &lt;/a&gt;は次のように動作します。</target>
        </trans-unit>
        <trans-unit id="298255e081934b106aba3a7bad6a52c856a4bc8f" translate="yes" xml:space="preserve">
          <source>It is safe to call this method if a database transaction is already open, i.e. if &lt;a href=&quot;databasestatements#method-i-transaction&quot;&gt;transaction&lt;/a&gt; is called within another &lt;a href=&quot;databasestatements#method-i-transaction&quot;&gt;transaction&lt;/a&gt; block. In case of a nested call, &lt;a href=&quot;databasestatements#method-i-transaction&quot;&gt;transaction&lt;/a&gt; will behave as follows:</source>
          <target state="translated">データベーストランザクションがすでに開いている場合、つまり&lt;a href=&quot;databasestatements#method-i-transaction&quot;&gt;トランザクション&lt;/a&gt;が別の&lt;a href=&quot;databasestatements#method-i-transaction&quot;&gt;トランザクション&lt;/a&gt;ブロック内で呼び出される場合は、このメソッドを呼び出しても安全です。ネストされた呼び出しの場合、&lt;a href=&quot;databasestatements#method-i-transaction&quot;&gt;トランザクション&lt;/a&gt;は次のように動作します。</target>
        </trans-unit>
        <trans-unit id="7a45593b8b2126e4764abc506e87f644124f7d10" translate="yes" xml:space="preserve">
          <source>It is shorter, and the intention more obvious.</source>
          <target state="translated">より短く、より明らかな意図を持っています。</target>
        </trans-unit>
        <trans-unit id="89bdff5bc31e9e0bf49c6a3a0b41b9c39713a357" translate="yes" xml:space="preserve">
          <source>It is similar to render, except that it does not set the &lt;code&gt;response_body&lt;/code&gt; and it should be guaranteed to always return a string.</source>
          <target state="translated">これは、 &lt;code&gt;response_body&lt;/code&gt; を設定せず、常に文字列を返すことが保証されていることを除いて、レンダリングに似ています。</target>
        </trans-unit>
        <trans-unit id="feba03ed2eb137a18e226422934ced8f11f7d231" translate="yes" xml:space="preserve">
          <source>It is the server's (i.e. our) responsibility to look for a last modified timestamp and the if-none-match header and determine whether or not to send back the full response. With conditional-get support in Rails this is a pretty easy task:</source>
          <target state="translated">最終的に修正されたタイムスタンプとif-none-matchヘッダを探して、完全なレスポンスを送り返すかどうかを判断するのは、サーバ(つまり私たち)の責任です。Railsの条件付きgetのサポートにより、これは非常に簡単な作業です。</target>
        </trans-unit>
        <trans-unit id="733a427a481d95bc20d446154005106d5e2b15ab" translate="yes" xml:space="preserve">
          <source>It is used to find the class correspondent to the value stored in the inheritance column.</source>
          <target state="translated">継承欄に格納されている値に対応するクラスを探すために使用します。</target>
        </trans-unit>
        <trans-unit id="3b8f8badc2d008327c7b2654ec92911e4b75e011" translate="yes" xml:space="preserve">
          <source>It is used to find the class correspondent to the value stored in the polymorphic type column.</source>
          <target state="translated">多相型欄に格納されている値に対応するクラスを見つけるために使用します。</target>
        </trans-unit>
        <trans-unit id="1f24fb666ec8101a20d8e74aef753ea515b4ed85" translate="yes" xml:space="preserve">
          <source>It is useful when rendering from an &lt;code&gt;ActionController::Metal&lt;/code&gt; controller or otherwise to add an available renderer proc to a specific controller.</source>
          <target state="translated">&lt;code&gt;ActionController::Metal&lt;/code&gt; コントローラーからレンダリングする場合、または特定のコントローラーに使用可能なレンダラープロシージャを追加する場合に便利です。</target>
        </trans-unit>
        <trans-unit id="8381b5798039f8bdc6ba9892429183aa3882944c" translate="yes" xml:space="preserve">
          <source>It is very common that a template will need to iterate over a collection and render a sub-template for each of the elements. This pattern has been implemented as a single method that accepts an array and renders a partial for each one of the elements in the array.</source>
          <target state="translated">テンプレートがコレクションを反復処理し、要素ごとにサブテンプレートをレンダリングする必要があることは非常に一般的です。このパターンは、配列を受け取り、配列内の各要素のパーシャルをレンダリングする単一のメソッドとして実装されています。</target>
        </trans-unit>
        <trans-unit id="112ab076fea03f9d75fe593aa250d73126e6c082" translate="yes" xml:space="preserve">
          <source>It is very easy to create Active Record models. All you have to do is to subclass the &lt;code&gt;ApplicationRecord&lt;/code&gt; class and you're good to go:</source>
          <target state="translated">Active Recordモデルの作成は非常に簡単です。 &lt;code&gt;ApplicationRecord&lt;/code&gt; クラスをサブクラス化するだけで、準備は完了です。</target>
        </trans-unit>
        <trans-unit id="0f65232288f706aa8c4dc006258a969438263eeb" translate="yes" xml:space="preserve">
          <source>It is very important that the override &lt;em&gt;reopens&lt;/em&gt; the class or module. Using the &lt;code&gt;class&lt;/code&gt; or &lt;code&gt;module&lt;/code&gt; keywords would define them if they were not already in memory, which would be incorrect because the definition lives in the engine. Using &lt;code&gt;class_eval&lt;/code&gt; as shown above ensures you are reopening.</source>
          <target state="translated">オーバーライドによってクラスまたはモジュールが&lt;em&gt;再度開か&lt;/em&gt;れることが非常に重要です。使用する &lt;code&gt;class&lt;/code&gt; または &lt;code&gt;module&lt;/code&gt; 、彼らは定義がエンジンに住んでいるので、誤っていると思われる、メモリ内にすでにいなかった場合は、キーワードと、それらを定義します。上記のように &lt;code&gt;class_eval&lt;/code&gt; を使用すると、確実に再度開くことができます。</target>
        </trans-unit>
        <trans-unit id="3f2567301b91ff3e1a8e3b6ab299f1ab0e52af5b" translate="yes" xml:space="preserve">
          <source>It is very important to &lt;em&gt;think about the worst case&lt;/em&gt;: What if someone really got hold of your cookies or user credentials. You could &lt;em&gt;introduce roles&lt;/em&gt; for the admin interface to limit the possibilities of the attacker. Or how about &lt;em&gt;special login credentials&lt;/em&gt; for the admin interface, other than the ones used for the public part of the application. Or a &lt;em&gt;special password for very serious actions&lt;/em&gt;?</source>
          <target state="translated">&lt;em&gt;最悪のケースについて考える&lt;/em&gt;ことは非常に重要です：誰かが本当にあなたのクッキーまたはユーザー資格情報を手に入れたらどうなるでしょうか 攻撃者の可能性を制限するために、管理インターフェースの&lt;em&gt;役割&lt;/em&gt;を&lt;em&gt;導入&lt;/em&gt;できます。または、アプリケーションのパブリック部分に使用されるもの以外の、管理インターフェースの&lt;em&gt;特別なログイン認証情報&lt;/em&gt;はどうですか。または&lt;em&gt;非常に深刻なアクションのための特別なパスワード&lt;/em&gt;？</target>
        </trans-unit>
        <trans-unit id="b0493caf1193ee906843c7daabc5ed6988e9f46b" translate="yes" xml:space="preserve">
          <source>It is very important to understand that Ruby does not have a way to truly reload classes and modules in memory, and have that reflected everywhere they are already used. Technically, &quot;unloading&quot; the &lt;code&gt;User&lt;/code&gt; class means removing the &lt;code&gt;User&lt;/code&gt; constant via &lt;code&gt;Object.send(:remove_const, &quot;User&quot;)&lt;/code&gt;.</source>
          <target state="translated">Rubyにはメモリ内のクラスやモジュールを本当にリロードする方法がなく、すでに使用されているすべての場所に反映されていることを理解することは非常に重要です。技術的には、 &lt;code&gt;User&lt;/code&gt; クラスの「アンロード」とは、 &lt;code&gt;Object.send(:remove_const, &quot;User&quot;)&lt;/code&gt; 介して &lt;code&gt;User&lt;/code&gt; 定数を削除することを意味します。</target>
        </trans-unit>
        <trans-unit id="2ae463c41c994975a8c9d1ed7d20b19f6f82fa4e" translate="yes" xml:space="preserve">
          <source>It is very trivial to implement in Rails.</source>
          <target state="translated">Railsで実装するのは非常につまらない。</target>
        </trans-unit>
        <trans-unit id="35ee732864066c0d0eadb6125761394ebaf22e35" translate="yes" xml:space="preserve">
          <source>It is your responsibility to ensure calling &lt;code&gt;html_safe&lt;/code&gt; on a particular string is fine.</source>
          <target state="translated">特定の文字列で &lt;code&gt;html_safe&lt;/code&gt; を正常に呼び出すことは、ユーザーの責任です。</target>
        </trans-unit>
        <trans-unit id="31c0edfcaa4fc403ac3adceae75236d17c99abf7" translate="yes" xml:space="preserve">
          <source>It iterates through the collection and passes each element to a block. The element will be keyed by the value returned by the block:</source>
          <target state="translated">コレクションを反復処理し、各要素をブロックに渡します。要素は、ブロックから返された値がキーになります。</target>
        </trans-unit>
        <trans-unit id="721fe765d7d4e10b75516d49bfbcce75be736438" translate="yes" xml:space="preserve">
          <source>It may not function correctly. This is because the application doesn't know how to route these requests to the engine unless you explicitly tell it &lt;strong&gt;how&lt;/strong&gt;. To do this, you must set the &lt;code&gt;@routes&lt;/code&gt; instance variable to the engine's route set in your setup code:</source>
          <target state="translated">正しく機能しない場合があります。あなたが明示的に指示しない限り、アプリケーションがエンジンへのルーティング方法にこれらの要求を知らないので、これはあります&lt;strong&gt;か&lt;/strong&gt;。これを行うには、 &lt;code&gt;@routes&lt;/code&gt; インスタンス変数を、セットアップコードで設定されたエンジンのルートに設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="6ce713b879eb723ee2b86cf67e06dfef733959e9" translate="yes" xml:space="preserve">
          <source>It offers a richer bottom-line at the language level, targeted both at the development of Rails applications, and at the development of Ruby on Rails itself.</source>
          <target state="translated">Railsアプリケーションの開発とRuby on Rails自体の開発の両方を対象とした、言語レベルでのより豊かなボトムラインを提供します。</target>
        </trans-unit>
        <trans-unit id="8096c3aca7a392a3a34226c703cd085adca651c9" translate="yes" xml:space="preserve">
          <source>It preserves dashes and underscores unless they are used as separators:</source>
          <target state="translated">ダッシュやアンダースコアがセパレータとして使用されていない限り、それは保持されます。</target>
        </trans-unit>
        <trans-unit id="124daf2dae3dc1290bb02e4af593b4afcd962cb7" translate="yes" xml:space="preserve">
          <source>It provides a method to capture blocks into variables through capture and a way to capture a block of markup for use in a layout through &lt;a href=&quot;capturehelper#method-i-content_for&quot;&gt;content_for&lt;/a&gt;.</source>
          <target state="translated">キャプチャを通じてブロックを変数にキャプチャする方法と、&lt;a href=&quot;capturehelper#method-i-content_for&quot;&gt;content_for&lt;/a&gt;を通じてレイアウトで使用するマークアップのブロックをキャプチャする方法を提供します。</target>
        </trans-unit>
        <trans-unit id="d559b2073af90812c6c78ec7af2c339cdd913618" translate="yes" xml:space="preserve">
          <source>It provides an interface for protecting attributes from end-user assignment. This makes Action Controller parameters forbidden to be used in Active Model mass assignment until they have been explicitly enumerated.</source>
          <target state="translated">エンドユーザーの割り当てから属性を保護するためのインターフェイスを提供します。これにより、アクションコントローラのパラメータが明示的に列挙されるまで、アクティブモデルの大量割り当てで使用されることが禁止されます。</target>
        </trans-unit>
        <trans-unit id="d53d2b0f66ddb0510df5988207a06488b1a81009" translate="yes" xml:space="preserve">
          <source>It provides two options that controls the top-level behavior of new instances:</source>
          <target state="translated">これは、新しいインスタンスのトップレベルの動作を制御する2つのオプションを提供します。</target>
        </trans-unit>
        <trans-unit id="b59d7e861125ed6d581d3a0cc77e6a38802989db" translate="yes" xml:space="preserve">
          <source>It relies on exception handling to handle control flow, which may be marginally slower.</source>
          <target state="translated">制御フローを処理するために例外処理に依存しているため、多少遅くなる可能性があります。</target>
        </trans-unit>
        <trans-unit id="8e985f63cf9499f5816c3c8d3acd3c680200932a" translate="yes" xml:space="preserve">
          <source>It returns an empty HTML tag of type &lt;code&gt;name&lt;/code&gt; which by default is XHTML compliant. Set &lt;code&gt;open&lt;/code&gt; to true to create an open tag compatible with HTML 4.0 and below. Add HTML attributes by passing an attributes hash to &lt;code&gt;options&lt;/code&gt;. Set &lt;code&gt;escape&lt;/code&gt; to false to disable attribute value escaping.</source>
          <target state="translated">デフォルトではXHTMLに準拠しているタイプ &lt;code&gt;name&lt;/code&gt; 空のHTMLタグを返します。HTML 4.0以前と互換性のあるオープンタグを作成するには、 &lt;code&gt;open&lt;/code&gt; をtrueに設定します。 &lt;code&gt;options&lt;/code&gt; 属性ハッシュを渡して、HTML属性を追加します。属性値のエスケープを無効にするには、 &lt;code&gt;escape&lt;/code&gt; をfalseに設定します。</target>
        </trans-unit>
        <trans-unit id="103c6ce50b681a6ef444b5d698f26fbec76c9171" translate="yes" xml:space="preserve">
          <source>It should have created a test file placeholder for us. With the output of the previous command we should see:</source>
          <target state="translated">テストファイルのプレースホルダが作成されているはずです。先ほどのコマンドの出力を見ると、以下のようになっています。</target>
        </trans-unit>
        <trans-unit id="4966f7811cb27a198a6cba34da214ff55b23cc1f" translate="yes" xml:space="preserve">
          <source>It should have created a test file placeholder for us. With the output of the previous command you should see:</source>
          <target state="translated">テストファイルのプレースホルダが作成されているはずです。先ほどのコマンドの出力では、以下のようになっているはずです。</target>
        </trans-unit>
        <trans-unit id="157ac47cfa200341598ff079a15434917fd957db" translate="yes" xml:space="preserve">
          <source>It takes the names of an old (deprecated) constant and of a new constant (both in string form) and optionally a deprecator. The deprecator defaults to &lt;code&gt;ActiveSupport::Deprecator&lt;/code&gt; if none is specified.</source>
          <target state="translated">これは、古い（非推奨）定数と新しい定数（両方とも文字列形式）の名前を取り、オプションで非推奨文字を受け取ります。何も指定されていない場合、非推奨はデフォルトで &lt;code&gt;ActiveSupport::Deprecator&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="5f9a57db6f3be424c799cd8d94ff60597b0aa735" translate="yes" xml:space="preserve">
          <source>It tends to be faster and less error prone to create a new instance of your application's database by loading the schema file via &lt;code&gt;bin/rails db:schema:load&lt;/code&gt; than it is to replay the entire migration history. &lt;a href=&quot;#old-migrations&quot;&gt;Old migrations&lt;/a&gt; may fail to apply correctly if those migrations use changing external dependencies or rely on application code which evolves separately from your migrations.</source>
          <target state="translated">移行履歴全体を再生するよりも、 &lt;code&gt;bin/rails db:schema:load&lt;/code&gt; を介してスキーマファイルをロードすることにより、アプリケーションのデータベースの新しいインスタンスを作成する方が速く、エラーが発生しにくい傾向があります。&lt;a href=&quot;#old-migrations&quot;&gt;古い移行で&lt;/a&gt;は、外部の依存関係の変更を使用したり、移行とは別に進化するアプリケーションコードに依存したりすると、正しく適用できない場合があります。</target>
        </trans-unit>
        <trans-unit id="83087d1a900bea48f8391e7474e1e5c67d0ff05a" translate="yes" xml:space="preserve">
          <source>It tends to be faster and less error prone to create a new instance of your application's database by loading the schema file via &lt;code&gt;rails db:schema:load&lt;/code&gt; than it is to replay the entire migration history. &lt;a href=&quot;#old-migrations&quot;&gt;Old migrations&lt;/a&gt; may fail to apply correctly if those migrations use changing external dependencies or rely on application code which evolves separately from your migrations.</source>
          <target state="translated">移行履歴全体を再生するよりも、 &lt;code&gt;rails db:schema:load&lt;/code&gt; を介してスキーマファイルをロードすることで、アプリケーションのデータベースの新しいインスタンスを作成する方が、高速でエラーが発生しにくい傾向があります。&lt;a href=&quot;#old-migrations&quot;&gt;古い移行&lt;/a&gt;は、外部依存関係の変更を使用する場合や、移行とは別に進化するアプリケーションコードに依存している場合、正しく適用できない場合があります。</target>
        </trans-unit>
        <trans-unit id="ccc2a2f98b56eb3a54fae986fc622f497465a043" translate="yes" xml:space="preserve">
          <source>It will include all of the helpers from engine's directory. Take into account that this does not include helpers defined in controllers with helper_method or other similar solutions, only helpers defined in the helpers directory will be included.</source>
          <target state="translated">これは、エンジンのディレクトリにあるすべてのヘルパーを含みます。これには helper_method やその他の類似のソリューションを持つコントローラで定義されたヘルパーは含まれないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="ff50f07b75ecd8565d4477a52681e559177c02d3" translate="yes" xml:space="preserve">
          <source>It will include all of the helpers from engine's directory. Take into account this does not include helpers defined in controllers with helper_method or other similar solutions, only helpers defined in the helpers directory will be included.</source>
          <target state="translated">これは、エンジンのディレクトリにあるすべてのヘルパーを含みます。これには helper_method やその他の類似のソリューションを持つコントローラで定義されたヘルパーは含まれません。</target>
        </trans-unit>
        <trans-unit id="98c13cf8d00ca42ad01461edeb1c7ca6801faefd" translate="yes" xml:space="preserve">
          <source>It will look a little basic for now, but that's ok. We'll look at improving the styling for it afterwards.</source>
          <target state="translated">今のところは少しベーシックな感じになりますが、それはそれでいいです。その後のスタイリングの改善を検討します。</target>
        </trans-unit>
        <trans-unit id="8637603c373814dd050a1532100af0da4f2090a9" translate="yes" xml:space="preserve">
          <source>It will use the given &lt;code&gt;user_content_type&lt;/code&gt;, or multipart if the mail message has any attachments. If the attachments are inline, the content type will be &amp;ldquo;multipart/related&amp;rdquo;, otherwise &amp;ldquo;multipart/mixed&amp;rdquo;.</source>
          <target state="translated">メールメッセージに添付ファイルがある場合は、指定された &lt;code&gt;user_content_type&lt;/code&gt; またはマルチパートを使用します。添付ファイルがインラインの場合、コンテンツタイプは「multipart / related」、それ以外の場合は「multipart / mixed」になります。</target>
        </trans-unit>
        <trans-unit id="42cbfd3191bc8d384376a66a5cca989147dbf649" translate="yes" xml:space="preserve">
          <source>It works for both inline:</source>
          <target state="translated">インライン両方に対応しています。</target>
        </trans-unit>
        <trans-unit id="618aee3ec871071cafa5f2c415e6c3ad428f6c63" translate="yes" xml:space="preserve">
          <source>It works like this:</source>
          <target state="translated">このように動作します。</target>
        </trans-unit>
        <trans-unit id="4e9581765ec600cf23cfdcdef0a724ea6ec31300" translate="yes" xml:space="preserve">
          <source>It's a good practice to ensure that the correct message has been broadcasted inside other components (e.g. inside your controllers). This is precisely where the custom assertions provided by Action Cable are pretty useful. For instance, within a model:</source>
          <target state="translated">正しいメッセージが他のコンポーネントの内部(例えば、コントローラの内部)でブロードキャストされていることを確認するのは良い習慣です。Action Cable が提供するカスタムアサーションは、まさにこのような場合に便利です。例えば、モデル内で</target>
        </trans-unit>
        <trans-unit id="f422ae9e8159f660700963246d16c8816e8e4e5b" translate="yes" xml:space="preserve">
          <source>It's a good practice to ensure that your jobs correctly get enqueued or performed wherever you invoke them (e.g. inside your controllers). This is precisely where the custom assertions provided by Active Job are pretty useful. For instance, within a model:</source>
          <target state="translated">ジョブを呼び出した場所 (コントローラの中など)で正しく待ち行列に入れられたり実行されたりするようにするのは良い習慣です。これこそが、Active Job が提供するカスタムアサーションが非常に便利なところです。例えば、モデル内で</target>
        </trans-unit>
        <trans-unit id="a80a15c6dc9f952abf9d054b00b9bc97a4a2ae13" translate="yes" xml:space="preserve">
          <source>It's advisable that you only store simple data (strings and numbers) in cookies. If you have to store complex objects, you would need to handle the conversion manually when reading the values on subsequent requests.</source>
          <target state="translated">クッキーには単純なデータ(文字列や数字)だけを保存することをお勧めします。複雑なオブジェクトを保存する必要がある場合は、後続のリクエストで値を読み込む際に手動で変換を処理する必要があります。</target>
        </trans-unit>
        <trans-unit id="1b5341eced867c0f8d3ab2b44d8744a44e0359bb" translate="yes" xml:space="preserve">
          <source>It's also a good idea to add indexes to each of those columns to speed up the joins process. However, in MySQL it is advised to add a compound index for both of the columns as MySQL only uses one index per table during the lookup.</source>
          <target state="translated">また、結合処理を高速化するために、それぞれのカラムにインデックスを追加するのも良いアイデアです。しかし、MySQLでは、検索中にテーブルごとに1つのインデックスしか使用しないため、両方のカラムに複合インデックスを追加することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="23d63436f77065acc450057bff4d18024da3b766" translate="yes" xml:space="preserve">
          <source>It's also important to treat the value objects as immutable. Don't allow the Money object to have its amount changed after creation. Create a new Money object with the new value instead. The &lt;code&gt;Money#exchange_to&lt;/code&gt; method is an example of this. It returns a new value object instead of changing its own values. Active Record won't persist value objects that have been changed through means other than the writer method.</source>
          <target state="translated">値オブジェクトを不変として扱うことも重要です。Moneyオブジェクトの作成後に金額を変更しないでください。代わりに、新しい値で新しいMoneyオブジェクトを作成します。 &lt;code&gt;Money#exchange_to&lt;/code&gt; 方法は、その一例です。独自の値を変更するのではなく、新しい値オブジェクトを返します。Active Recordは、writerメソッド以外の方法で変更された値オブジェクトを永続化しません。</target>
        </trans-unit>
        <trans-unit id="ce772d533b0ed334ad2b7969d9190d3bfed1e182" translate="yes" xml:space="preserve">
          <source>It's also possible to construct multi-dimensional parameter hashes by specifying keys using brackets, such as:</source>
          <target state="translated">のようにカッコを使ってキーを指定することで多次元のパラメータハッシュを構築することも可能です。</target>
        </trans-unit>
        <trans-unit id="1c5080c9d97459219fcb315f929272aaf0d44726" translate="yes" xml:space="preserve">
          <source>It's also possible to delegate a method to the class by using &lt;code&gt;:class&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;:class&lt;/code&gt; を使用して、クラスにメソッドを委任することもできます。</target>
        </trans-unit>
        <trans-unit id="ee9bba4c576ef4381989429f386a4c0d76c77e88" translate="yes" xml:space="preserve">
          <source>It's also possible to instantiate related objects, so a &lt;code&gt;Client&lt;/code&gt; class belonging to the &lt;code&gt;clients&lt;/code&gt; table with a &lt;code&gt;master_id&lt;/code&gt; foreign key can instantiate master through &lt;code&gt;Client#master&lt;/code&gt;.</source>
          <target state="translated">関連するオブジェクトをインスタンス化することも可能であるため、 &lt;code&gt;master_id&lt;/code&gt; 外部キーを持つ &lt;code&gt;clients&lt;/code&gt; テーブルに属する &lt;code&gt;Client&lt;/code&gt; クラスは、 &lt;code&gt;Client#master&lt;/code&gt; を介してマスターをインスタンス化できます。</target>
        </trans-unit>
        <trans-unit id="d018ba7160b482abab2b6e00cfd3ecbbb4865e28" translate="yes" xml:space="preserve">
          <source>It's also possible to interpret encrypted YAML files with &lt;code&gt;config&lt;/code&gt;.</source>
          <target state="translated">暗号化されたYAMLファイルを &lt;code&gt;config&lt;/code&gt; で解釈することも可能です。</target>
        </trans-unit>
        <trans-unit id="6c8736847d7c7ad6de203a9a1a70d34f62f81a4d" translate="yes" xml:space="preserve">
          <source>It's also possible to override the column that should be used as the table's primary key using the &lt;code&gt;ActiveRecord::Base.primary_key=&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;ActiveRecord::Base.primary_key=&lt;/code&gt; メソッドを使用して、テーブルの主キーとして使用する必要がある列をオーバーライドすることもできます。</target>
        </trans-unit>
        <trans-unit id="20c583d4833cfc55c98348bf9834c35bbaee87ec" translate="yes" xml:space="preserve">
          <source>It's also possible to retry or discard a job if an exception is raised during execution. For example:</source>
          <target state="translated">また、実行中に例外が発生した場合にジョブを再試行したり、破棄したりすることも可能です。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="7d0f83e7bb64d92b6a7b5c41f4d4d0caa14b8cea" translate="yes" xml:space="preserve">
          <source>It's also possible to specify the instance to be used:</source>
          <target state="translated">使用するインスタンスを指定することも可能です。</target>
        </trans-unit>
        <trans-unit id="d2cec49ece4ed432ed06fe492f0dc3f0dbca2d38" translate="yes" xml:space="preserve">
          <source>It's also possible to swap connections granularly for shards.</source>
          <target state="translated">破片のために粒状に接続を入れ替えることも可能です。</target>
        </trans-unit>
        <trans-unit id="06bf6d5af71eff30bf65d8d44e4b90be5583daab" translate="yes" xml:space="preserve">
          <source>It's also possible to use multiple attributes in the same &lt;code&gt;find_by_&lt;/code&gt; by separating them with &amp;ldquo;&lt;em&gt;and&lt;/em&gt;&amp;rdquo;.</source>
          <target state="translated">また、「&lt;em&gt;and&lt;/em&gt;」で区切ることにより、同じ &lt;code&gt;find_by_&lt;/code&gt; で複数の属性を使用することもできます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b3598f3734b84a9d144e42f8399310dc626f865a" translate="yes" xml:space="preserve">
          <source>It's common that you need to find a record or create it if it doesn't exist. You can do that with the &lt;code&gt;find_or_create_by&lt;/code&gt; and &lt;code&gt;find_or_create_by!&lt;/code&gt; methods.</source>
          <target state="translated">通常、レコードを見つけるか、存在しない場合は作成する必要があります。あなたがそれを行うことができ &lt;code&gt;find_or_create_by&lt;/code&gt; と &lt;code&gt;find_or_create_by!&lt;/code&gt; メソッド。</target>
        </trans-unit>
        <trans-unit id="0f49250b8cffccdc364b03b3385e42a6d9aa7de5" translate="yes" xml:space="preserve">
          <source>It's common to have resources that are logically children of other resources. For example, suppose your application includes these models:</source>
          <target state="translated">論理的に他のリソースの子であるリソースを持つことはよくあることです。例えば、アプリケーションにこれらのモデルが含まれているとします。</target>
        </trans-unit>
        <trans-unit id="b210ae2be028d7173f42ca71c61c6b0b4412e0aa" translate="yes" xml:space="preserve">
          <source>It's common to have resources that are logically children of other resources:</source>
          <target state="translated">論理的に他の資源の子になる資源を持つことはよくあることです。</target>
        </trans-unit>
        <trans-unit id="70811258be9b0fd9bd6ee0a2ce8b0baa003841be" translate="yes" xml:space="preserve">
          <source>It's common to want to test the caching strategy of your application in development mode. Rails provides the rails command &lt;code&gt;dev:cache&lt;/code&gt; to easily toggle caching on/off.</source>
          <target state="translated">開発モードでアプリケーションのキャッシング戦略をテストすることはよくあります。Railsはrailsコマンド &lt;code&gt;dev:cache&lt;/code&gt; を提供して、キャッシングのオン/オフを簡単に切り替えることができます。</target>
        </trans-unit>
        <trans-unit id="496d6b6240d7125cf093cec706a29512a5683f4c" translate="yes" xml:space="preserve">
          <source>It's even possible to call these dynamic finder methods on relations and named scopes.</source>
          <target state="translated">これらのダイナミックファインダメソッドをリレーションや名前付きスコープで呼び出すことも可能です。</target>
        </trans-unit>
        <trans-unit id="d40bb18153b626c0253f7b7d4189338603c47ddb" translate="yes" xml:space="preserve">
          <source>It's even possible to use &lt;code&gt;exists?&lt;/code&gt; without any arguments on a model or a relation.</source>
          <target state="translated">使用 &lt;code&gt;exists?&lt;/code&gt; ことも可能ですか？モデルまたは関係に引数なし。</target>
        </trans-unit>
        <trans-unit id="d966070d0b05c39fbcc1da00391f8af210d6e75b" translate="yes" xml:space="preserve">
          <source>It's helpful to be able to test incoming emails in development without actually sending and receiving real emails. To accomplish this, there's a conductor controller mounted at &lt;code&gt;/rails/conductor/action_mailbox/inbound_emails&lt;/code&gt;, which gives you an index of all the InboundEmails in the system, their state of processing, and a form to create a new InboundEmail as well.</source>
          <target state="translated">実際のメールを実際に送受信することなく、開発中の受信メールをテストできると便利です。これを実現するために、 &lt;code&gt;/rails/conductor/action_mailbox/inbound_emails&lt;/code&gt; にマウントされたコンダクターコントローラーがあり、システム内のすべてのInboundEmailのインデックス、それらの処理の状態、および新しいInboundEmailを作成するためのフォームも提供します。</target>
        </trans-unit>
        <trans-unit id="74318357210d0ce970a5c87b95a2c46f5bec161f" translate="yes" xml:space="preserve">
          <source>It's important to connect to your database in a single model and then inherit from that model for the tables rather than connect multiple individual models to the same database. Database clients have a limit to the number of open connections there can be and if you do this it will multiply the number of connections you have since Rails uses the model class name for the connection specification name.</source>
          <target state="translated">複数の個別モデルを同じデータベースに接続するのではなく、1つのモデルでデータベースに接続し、そのモデルからテーブルを継承することが重要です。データベースクライアントにはオープンな接続数に制限があり、Railsは接続指定名にモデルクラス名を使用しているため、これを行うと接続数が倍になってしまいます。</target>
        </trans-unit>
        <trans-unit id="c731ba937d8d715e7c40709120f481beab47aa00" translate="yes" xml:space="preserve">
          <source>It's important to keep in mind at all times that the application should &lt;strong&gt;always&lt;/strong&gt; take precedence over its engines. An application is the object that has final say in what goes on in its environment. The engine should only be enhancing it, rather than changing it drastically.</source>
          <target state="translated">アプリケーションは&lt;strong&gt;常に&lt;/strong&gt;エンジンよりも優先される必要&lt;strong&gt;がある&lt;/strong&gt;ことを&lt;strong&gt;常に&lt;/strong&gt;心に留めておくことは重要です。アプリケーションとは、その環境で何が行われているのかを最終的に決定するオブジェクトです。エンジンはそれを大幅に変更するのではなく、それを強化するだけです。</target>
        </trans-unit>
        <trans-unit id="61fcd28ba5c492e3c29858044d3265888cdd9725" translate="yes" xml:space="preserve">
          <source>It's important to know that the file is not yet available in the &lt;code&gt;after_create&lt;/code&gt; callback but in the &lt;code&gt;after_create_commit&lt;/code&gt; only.</source>
          <target state="translated">ファイルは &lt;code&gt;after_create&lt;/code&gt; コールバックではまだ使用できず、 &lt;code&gt;after_create_commit&lt;/code&gt; でのみ使用できることを知っておくことが重要です。</target>
        </trans-unit>
        <trans-unit id="e878d51979cf5c0a6c91cb7c590dd5e82fc40565" translate="yes" xml:space="preserve">
          <source>It's important to note that we have only &lt;em&gt;initialized&lt;/em&gt; this object. This object is not saved to the database at all. It's only available in the console at the moment. To save the object to the database, we must call &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Persistence.html#method-i-save&quot;&gt;&lt;code&gt;save&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">このオブジェクトのみを&lt;em&gt;初期化&lt;/em&gt;したことに注意することが重要です。このオブジェクトはデータベースにまったく保存されません。現時点では、コンソールでのみ使用できます。オブジェクトをデータベースに保存するには、&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Persistence.html#method-i-save&quot;&gt; &lt;code&gt;save&lt;/code&gt; &lt;/a&gt;を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="a0c359079f380a8190da5470e95085b4e0266c5b" translate="yes" xml:space="preserve">
          <source>It's important to remember that XML or JSON requests are also checked by default. If you're building an &lt;a href=&quot;api&quot;&gt;API&lt;/a&gt; or an SPA you could change forgery protection method in &lt;code&gt;ApplicationController&lt;/code&gt; (by default: &lt;code&gt;:exception&lt;/code&gt;):</source>
          <target state="translated">XMLまたはJSONリクエストもデフォルトでチェックされることに注意してください。&lt;a href=&quot;api&quot;&gt;API&lt;/a&gt;またはSPAを構築している場合は、 &lt;code&gt;ApplicationController&lt;/code&gt; の偽造防止方法を変更できます（デフォルトでは &lt;code&gt;:exception&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="d4ea5fd1f11864cb83fb9ed3228955626a4be617" translate="yes" xml:space="preserve">
          <source>It's necessary not to set or leave &lt;code&gt;:nullify&lt;/code&gt; option for those associations that have &lt;code&gt;NOT NULL&lt;/code&gt; database constraints. If you don't set &lt;code&gt;dependent&lt;/code&gt; to destroy such associations you won't be able to change the associated object because the initial associated object's foreign key will be set to the unallowed &lt;code&gt;NULL&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;NOT NULL&lt;/code&gt; データベース制約を持つ関連付けには、 &lt;code&gt;:nullify&lt;/code&gt; オプションを設定したり、そのままにしたりしないでください。このような関連付けを破棄するように &lt;code&gt;dependent&lt;/code&gt; を設定しないと、関連付けられたオブジェクトを変更できません。これは、最初の関連付けられたオブジェクトの外部キーが許可されていない &lt;code&gt;NULL&lt;/code&gt; 値に設定されるためです。</target>
        </trans-unit>
        <trans-unit id="2de386d061ae8779fc61c2f09a77ad60535807ab" translate="yes" xml:space="preserve">
          <source>It's normal for associations to work in two directions, requiring declaration on two different models:</source>
          <target state="translated">アソシエーションが2つの方向で動作するのは普通のことで、2つの異なるモデルでの宣言を必要とします。</target>
        </trans-unit>
        <trans-unit id="27f390c981876d7b7b77c2786f714460a8271639" translate="yes" xml:space="preserve">
          <source>It's not possible to derive all render calls like that, though. Here are a few examples of things that can't be derived:</source>
          <target state="translated">そんな感じですべてのレンダーコールを派生させることはできませんが。派生できないものの例をいくつか挙げてみます。</target>
        </trans-unit>
        <trans-unit id="868f5785a4560369896872c12a3c257722a8d878" translate="yes" xml:space="preserve">
          <source>It's possible to add an exclamation point (!) on the end of the dynamic finders to get them to raise an &lt;a href=&quot;recordnotfound&quot;&gt;&lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt;&lt;/a&gt; error if they do not return any records, like &lt;code&gt;Person.find_by_last_name!&lt;/code&gt;.</source>
          <target state="translated">動的ファインダーの最後に感嘆符（！）を追加して、 &lt;code&gt;Person.find_by_last_name!&lt;/code&gt; のようにレコードが返されない場合に、&lt;a href=&quot;recordnotfound&quot;&gt; &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; &lt;/a&gt;エラーを発生させることができます。。</target>
        </trans-unit>
        <trans-unit id="25f14b97d2c364a8b7b21e0c4a093d07e8cb1fd6" translate="yes" xml:space="preserve">
          <source>It's possible to add an exclamation point (!) on the end of the dynamic finders to get them to raise an &lt;a href=&quot;recordnotfound&quot;&gt;ActiveRecord::RecordNotFound&lt;/a&gt; error if they do not return any records, like &lt;code&gt;Person.find_by_last_name!&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Person.find_by_last_name!&lt;/code&gt; などのレコードを返さない場合、動的ファインダーの最後に感嘆符（！）を追加して&lt;a href=&quot;recordnotfound&quot;&gt;ActiveRecord :: RecordNotFound&lt;/a&gt;エラーを発生させることができます。。</target>
        </trans-unit>
        <trans-unit id="10a0322b52e0bf6b284ef6e7bb95d7213022d5c8" translate="yes" xml:space="preserve">
          <source>It's possible to further restrict the use of a signed id with a purpose. This helps when you have a general base model, like a User, which might have signed ids for several things, like password reset or email verification. The purpose that was set during generation must match the purpose set when finding. If there's a mismatch, nil is again returned.</source>
          <target state="translated">目的を持った署名付きIDの使用をさらに制限することができます。これは、Userのような一般的なベースモデルを持っていて、パスワードリセットやEメール認証のように、いくつかの目的のために署名付きIDを持っているかもしれない場合に役立ちます。生成時に設定された目的は、検索時に設定された目的と一致しなければなりません。一致しない場合は、再び nil が返されます。</target>
        </trans-unit>
        <trans-unit id="07d745fa3c1940442a48d11e1c81707259e4e2fc" translate="yes" xml:space="preserve">
          <source>It's possible to rotate the ciphers and digests used for encrypted and signed cookies.</source>
          <target state="translated">暗号化されたクッキーや署名されたクッキーに使用される暗号やダイジェストを回転させることができます。</target>
        </trans-unit>
        <trans-unit id="6c0c97dfda8d4b7a9cb09eedf3b374f351a7d03c" translate="yes" xml:space="preserve">
          <source>It's possible to set the fixture's model class directly in the YAML file. This is helpful when fixtures are loaded outside tests and &lt;code&gt;set_fixture_class&lt;/code&gt; is not available (e.g. when running &lt;code&gt;bin/rails db:fixtures:load&lt;/code&gt;).</source>
          <target state="translated">フィクスチャのモデルクラスをYAMLファイルで直接設定することができます。これは、フィクスチャがテストの外部にロードされ、 &lt;code&gt;set_fixture_class&lt;/code&gt; が使用できない場合（たとえば、 &lt;code&gt;bin/rails db:fixtures:load&lt;/code&gt; を実行している場合）に役立ちます。</target>
        </trans-unit>
        <trans-unit id="c32e8dd88e75c55390e501c7bd381f8aca605240" translate="yes" xml:space="preserve">
          <source>It's possible to set the fixture's model class directly in the YAML file. This is helpful when fixtures are loaded outside tests and &lt;code&gt;set_fixture_class&lt;/code&gt; is not available (e.g. when running &lt;code&gt;rails db:fixtures:load&lt;/code&gt;).</source>
          <target state="translated">YAMLファイルでフィクスチャのモデルクラスを直接設定することが可能です。これは、フィクスチャがテスト外でロードされ、 &lt;code&gt;set_fixture_class&lt;/code&gt; が利用できない場合に便利です（たとえば、 &lt;code&gt;rails db:fixtures:load&lt;/code&gt; を実行する場合）。</target>
        </trans-unit>
        <trans-unit id="98cb3aa74f36c4b8f6c7c65b58c0012c527c5d89" translate="yes" xml:space="preserve">
          <source>It's possible to stack callbacks by passing them as an array. Example:</source>
          <target state="translated">コールバックを配列として渡すことでスタック化することができます。例を示します。</target>
        </trans-unit>
        <trans-unit id="411969aa31079ad6714c1419f7c08edef6d92a15" translate="yes" xml:space="preserve">
          <source>It's possible to use any of the above middlewares in your custom Rack stack.</source>
          <target state="translated">上記のいずれかのミドルウェアをカスタムラックスタックで使用することが可能です。</target>
        </trans-unit>
        <trans-unit id="a3d4cccbe811b7396f09d0f801e04618ab0dac79" translate="yes" xml:space="preserve">
          <source>It's time to add a second model to the application. The second model will handle comments on articles.</source>
          <target state="translated">2つ目のモデルをアプリケーションに追加する時が来ました。2つ目のモデルは、記事へのコメントを処理します。</target>
        </trans-unit>
        <trans-unit id="0ad56c35d6c96eef75a6ee75178cc603e11a32f0" translate="yes" xml:space="preserve">
          <source>It's very important here to use the &lt;code&gt;String&lt;/code&gt; version of the class, rather than the class itself. If you were to use the class, Rails would attempt to load that class and then reference the related table. This could lead to problems if the table didn't already exist. Therefore, a &lt;code&gt;String&lt;/code&gt; should be used and then converted to a class using &lt;code&gt;constantize&lt;/code&gt; in the engine later on.</source>
          <target state="translated">ここでは、クラス自体ではなく、 &lt;code&gt;String&lt;/code&gt; バージョンのクラスを使用することが非常に重要です。クラスを使用する場合、Railsはそのクラスをロードしてから、関連するテーブルを参照しようとします。テーブルがまだ存在していない場合、これにより問題が発生する可能性があります。したがって、 &lt;code&gt;String&lt;/code&gt; を使用してから、後でエンジンで &lt;code&gt;constantize&lt;/code&gt; を使用してクラスに変換する必要があります。</target>
        </trans-unit>
        <trans-unit id="82c4355aa174ea1134e7c02d2a116f276e1eee7a" translate="yes" xml:space="preserve">
          <source>Iterates through each error key, value pair in the error messages hash. Yields the attribute and the error for that attribute. If the attribute has more than one error message, yields once for each error message.</source>
          <target state="translated">エラーメッセージのハッシュ内の各エラーキーと値のペアを繰り返し処理します。属性とその属性のエラーを返します。属性に複数のエラーメッセージがある場合、各エラーメッセージに対して一度だけ返されます。</target>
        </trans-unit>
        <trans-unit id="39312c7e1376cb1ad7cca45b9cf9c109cd96ff73" translate="yes" xml:space="preserve">
          <source>Iterates through each error object.</source>
          <target state="translated">各エラーオブジェクトを繰り返し処理します。</target>
        </trans-unit>
        <trans-unit id="9a3f6528f2606d1ed81f1e9f85b624a26b98cbbe" translate="yes" xml:space="preserve">
          <source>JOIN</source>
          <target state="translated">JOIN</target>
        </trans-unit>
        <trans-unit id="031a4e76f0b39d0df073d934da5fc48da8d737e5" translate="yes" xml:space="preserve">
          <source>JSON</source>
          <target state="translated">JSON</target>
        </trans-unit>
        <trans-unit id="fe0b7e20b2738d8025a2377f855de38e73f547f9" translate="yes" xml:space="preserve">
          <source>JSON and JSONB</source>
          <target state="translated">JSONおよびJSONB</target>
        </trans-unit>
        <trans-unit id="cf43040f699629e838a8715912bcf428aa5440fb" translate="yes" xml:space="preserve">
          <source>JSON is a JavaScript data format used by many Ajax libraries. Rails has built-in support for converting objects to JSON and rendering that JSON back to the browser:</source>
          <target state="translated">JSONは多くのAjaxライブラリで使用されているJavaScriptのデータ形式です。Railsには、オブジェクトをJSONに変換し、そのJSONをブラウザにレンダリングするためのサポートが組み込まれています。</target>
        </trans-unit>
        <trans-unit id="31c1bce502137da7db199329615126120773d1f0" translate="yes" xml:space="preserve">
          <source>JSON parameters</source>
          <target state="translated">JSONパラメータ</target>
        </trans-unit>
        <trans-unit id="935b885e280c10afb46d2bf45f85bbea09bc94ce" translate="yes" xml:space="preserve">
          <source>JSON support</source>
          <target state="translated">JSON サポート</target>
        </trans-unit>
        <trans-unit id="91b8bae1d5741163238caeb859f60f9aad22ca54" translate="yes" xml:space="preserve">
          <source>JSON::decode</source>
          <target state="translated">JSON::decode</target>
        </trans-unit>
        <trans-unit id="cd65102564a8ba6c57d96671fc65196b16e48b3c" translate="yes" xml:space="preserve">
          <source>JSON::encode</source>
          <target state="translated">JSON::encode</target>
        </trans-unit>
        <trans-unit id="92b18c9405f766007bd6109914f3813baf41ad56" translate="yes" xml:space="preserve">
          <source>JSON::parse_error</source>
          <target state="translated">JSON::parse_error</target>
        </trans-unit>
        <trans-unit id="19acdb4160eb288df993337f159e349c600848ff" translate="yes" xml:space="preserve">
          <source>JSON_ESCAPE</source>
          <target state="translated">JSON_ESCAPE</target>
        </trans-unit>
        <trans-unit id="c4f4583027599ec31d99dce1fd474812e595bec5" translate="yes" xml:space="preserve">
          <source>JSON_ESCAPE_REGEXP</source>
          <target state="translated">JSON_ESCAPE_REGEXP</target>
        </trans-unit>
        <trans-unit id="6b078a8fb6a84f103228ea09a5d693750075dfee" translate="yes" xml:space="preserve">
          <source>JS_ESCAPE_MAP</source>
          <target state="translated">JS_ESCAPE_MAP</target>
        </trans-unit>
        <trans-unit id="3a2bc94aa5df89cb534947cbbba66bbfa8f5d420" translate="yes" xml:space="preserve">
          <source>JavaScript Compression</source>
          <target state="translated">JavaScriptの圧縮</target>
        </trans-unit>
        <trans-unit id="329f655713f7ed95d8ad672ec206ea61c89847f8" translate="yes" xml:space="preserve">
          <source>JavaScript asset compression requires you have a JavaScript runtime available on your system, in the absence of a runtime you will see an &lt;code&gt;execjs&lt;/code&gt; error during asset compilation. Usually macOS and Windows come with a JavaScript runtime installed. &lt;code&gt;therubyrhino&lt;/code&gt; is the recommended runtime for JRuby users and is added by default to the &lt;code&gt;Gemfile&lt;/code&gt; in apps generated under JRuby. You can investigate all the supported runtimes at &lt;a href=&quot;https://github.com/rails/execjs#readme&quot;&gt;ExecJS&lt;/a&gt;.</source>
          <target state="translated">JavaScriptアセットの圧縮では、システムでJavaScriptランタイムを使用できる必要があります。ランタイムがない場合、アセットのコンパイル中に &lt;code&gt;execjs&lt;/code&gt; エラーが表示されます。通常、macOSとWindowsにはJavaScriptランタイムがインストールされています。 &lt;code&gt;therubyrhino&lt;/code&gt; は、JRubyユーザーに推奨されるランタイムであり、JRubyで生成されたアプリの &lt;code&gt;Gemfile&lt;/code&gt; にデフォルトで追加されます。&lt;a href=&quot;https://github.com/rails/execjs#readme&quot;&gt;ExecJSで&lt;/a&gt;サポートされているすべてのランタイムを調査できます。</target>
        </trans-unit>
        <trans-unit id="0950a27c9b54b1fadb8e152d01d78d9a8de8b0af" translate="yes" xml:space="preserve">
          <source>JavaScript asset compression requires you have a JavaScript runtime available on your system, in the absence of a runtime you will see an &lt;code&gt;execjs&lt;/code&gt; error during asset compression. Usually macOS and Windows come with a JavaScript runtime installed. &lt;code&gt;therubyrhino&lt;/code&gt; is the recommended runtime for JRuby users and is added by default to the &lt;code&gt;Gemfile&lt;/code&gt; in apps generated under JRuby. You can investigate all the supported runtimes at &lt;a href=&quot;https://github.com/rails/execjs#readme&quot;&gt;ExecJS&lt;/a&gt;.</source>
          <target state="translated">JavaScriptアセット圧縮では、システムでJavaScriptランタイムを使用できる必要があります。ランタイムがない場合、アセット圧縮中に &lt;code&gt;execjs&lt;/code&gt; エラーが表示されます。通常、macOSとWindowsにはJavaScriptランタイムがインストールされています。 &lt;code&gt;therubyrhino&lt;/code&gt; はJRubyユーザーに推奨されるランタイムであり、JRubyで生成されたアプリの &lt;code&gt;Gemfile&lt;/code&gt; にデフォルトで追加されます。&lt;a href=&quot;https://github.com/rails/execjs#readme&quot;&gt;ExecJSで&lt;/a&gt;、サポートされているすべてのランタイムを調査できます。</target>
        </trans-unit>
        <trans-unit id="c469bfe9f94b3c15c0a2967572561504964de859" translate="yes" xml:space="preserve">
          <source>JavaScript can also make requests to the server, and parse the response. It also has the ability to update information on the page. Combining these two powers, a JavaScript writer can make a web page that can update just parts of itself, without needing to get the full page data from the server. This is a powerful technique that we call Ajax.</source>
          <target state="translated">また、JavaScriptはサーバーへのリクエストを行い、レスポンスを解析することができます。また、ページ上の情報を更新する機能も持っています。これら2つの力を組み合わせることで、JavaScriptライターは、サーバーからページ全体のデータを取得することなく、それ自体の一部だけを更新できるWebページを作ることができます。これがAjaxと呼ばれる強力な技術です。</target>
        </trans-unit>
        <trans-unit id="7bd16b36cdda0f2697deaaca766efe478f0bb26f" translate="yes" xml:space="preserve">
          <source>JavaScript view rendering doesn't do any preprocessing, so you shouldn't use ES6 syntax here.</source>
          <target state="translated">JavaScriptのビューレンダリングは前処理をしないので、ここではES6の構文を使うべきではありません。</target>
        </trans-unit>
        <trans-unit id="e79342aa85fd4f1c22498783cd42d8faf5c0f966" translate="yes" xml:space="preserve">
          <source>JavaScriptHelper</source>
          <target state="translated">JavaScriptHelper</target>
        </trans-unit>
        <trans-unit id="4d1ff2f58b0a4a6adf2107fa93ff7226f28327a3" translate="yes" xml:space="preserve">
          <source>Job Execution</source>
          <target state="translated">ジョブの実行</target>
        </trans-unit>
        <trans-unit id="ba8d06fda34fb43af828c544923775e18fb1a0b2" translate="yes" xml:space="preserve">
          <source>Job Identifier</source>
          <target state="translated">ジョブ識別子</target>
        </trans-unit>
        <trans-unit id="3f331e97598d78f4160b82438f27bf259a5df56f" translate="yes" xml:space="preserve">
          <source>Job Testing</source>
          <target state="translated">ジョブテスト</target>
        </trans-unit>
        <trans-unit id="e5baad04a61a328c9f20c8c710417477b5871973" translate="yes" xml:space="preserve">
          <source>Job arguments</source>
          <target state="translated">ジョブ引数</target>
        </trans-unit>
        <trans-unit id="243efbade47e05637dd57919b72473a334187b42" translate="yes" xml:space="preserve">
          <source>Job object</source>
          <target state="translated">ジョブオブジェクト</target>
        </trans-unit>
        <trans-unit id="08d8ff960f1c7483a34d89f43b7bb3ac9cafa206" translate="yes" xml:space="preserve">
          <source>Job to destroy the records associated with a destroyed record in background.</source>
          <target state="translated">背景にある破壊されたレコードに関連付けられたレコードを破壊するためのジョブ。</target>
        </trans-unit>
        <trans-unit id="e91b70d63ed47030600cb3d8ce6bdfdabe2a990d" translate="yes" xml:space="preserve">
          <source>Job: Any class inheriting from the adapter may set the priority on the job object relative to other jobs.</source>
          <target state="translated">ジョブです。アダプタを継承するクラスは、他のジョブとの相対的な優先度をジョブオブジェクトに設定することができます。</target>
        </trans-unit>
        <trans-unit id="3a6116842526736873ed5f69baef76f0d3c2c51b" translate="yes" xml:space="preserve">
          <source>Job: The number of retries can be set per instance of the job class.</source>
          <target state="translated">ジョブです。ジョブクラスのインスタンスごとにリトライ回数を設定できます。</target>
        </trans-unit>
        <trans-unit id="bfef8c94380b329ced3bcf083ac61b7f2a6ce2ec" translate="yes" xml:space="preserve">
          <source>Job: The timeout can be set for each instance of the job class.</source>
          <target state="translated">ジョブです。ジョブクラスのインスタンスごとにタイムアウトを設定できます。</target>
        </trans-unit>
        <trans-unit id="f8a539a40723c2241a7fba7916651de221c51cc8" translate="yes" xml:space="preserve">
          <source>Joining Across Databases</source>
          <target state="translated">データベース間の結合</target>
        </trans-unit>
        <trans-unit id="5e207af13c7f10c990fa0278c9a6d430dd7d1927" translate="yes" xml:space="preserve">
          <source>Joining Tables</source>
          <target state="translated">テーブルの結合</target>
        </trans-unit>
        <trans-unit id="9cd1a12e9f4770062aa1cf8bf14ef4b159146a9b" translate="yes" xml:space="preserve">
          <source>Joining across clusters</source>
          <target state="translated">クラスター間の結合</target>
        </trans-unit>
        <trans-unit id="36cb6826dbbbacc9f0915d9e44ccb82925b04c72" translate="yes" xml:space="preserve">
          <source>Joins</source>
          <target state="translated">Joins</target>
        </trans-unit>
        <trans-unit id="b8202b1a0f9ac4ece76b1b53a1b999e3fec322b8" translate="yes" xml:space="preserve">
          <source>Joins that are also marked for preloading. In which case we should just eager load them. Note that this is a naive implementation because we could have strings and symbols which represent the same association, but that aren't matched by this. Also, we could have nested hashes which partially match, e.g. { a: :b } &amp;amp; { a: [:b, :c] }</source>
          <target state="translated">プレロード用にマークされている結合。その場合、私たちはそれらを熱心にロードする必要があります。同じ関連付けを表す文字列とシンボルが存在する可能性があるため、これは単純な実装であることに注意してください。ただし、これには一致しません。また、部分的に一致するネストされたハッシュを使用することもできます。たとえば、{a：：b}＆{a：[：b、：c]}</target>
        </trans-unit>
        <trans-unit id="6e55f603d9ec6b7739d6e41f2a606f221971eb79" translate="yes" xml:space="preserve">
          <source>Just about every Rails application interacts heavily with a database and, as a result, your tests will need a database to interact with as well. To write efficient tests, you'll need to understand how to set up this database and populate it with sample data.</source>
          <target state="translated">ほぼすべてのRailsアプリケーションはデータベースと大きく相互作用し、結果として、テストにも相互作用するデータベースが必要になります。効率的なテストを書くためには、このデータベースを設定し、サンプルデータを入力する方法を理解する必要があります。</target>
        </trans-unit>
        <trans-unit id="9a2e31fe0f7501188d972dc8b3009118ae147cce" translate="yes" xml:space="preserve">
          <source>Just about every Rails application will interact with a database. You can connect to the database by setting an environment variable &lt;code&gt;ENV['DATABASE_URL']&lt;/code&gt; or by using a configuration file called &lt;code&gt;config/database.yml&lt;/code&gt;.</source>
          <target state="translated">ほぼすべてのRailsアプリケーションがデータベースと対話します。環境変数 &lt;code&gt;ENV['DATABASE_URL']&lt;/code&gt; 設定するか、 &lt;code&gt;config/database.yml&lt;/code&gt; という構成ファイルを使用して、データベースに接続できます。</target>
        </trans-unit>
        <trans-unit id="a6e9bc826bb062c09dd75404c4f004cf69a6b37f" translate="yes" xml:space="preserve">
          <source>Just as with member routes, you can pass &lt;code&gt;:on&lt;/code&gt; to a route:</source>
          <target state="translated">メンバールートと同様に、ルートに： &lt;code&gt;:on&lt;/code&gt; を渡すことができます。</target>
        </trans-unit>
        <trans-unit id="2f3d430d08030c44ea5008d7059f7767a85248fa" translate="yes" xml:space="preserve">
          <source>Just as with validations, it is also possible to skip callbacks by using the following methods:</source>
          <target state="translated">バリデーションと同様に、以下のメソッドを使用することでコールバックをスキップすることも可能です。</target>
        </trans-unit>
        <trans-unit id="65c24c89c19cd55b93be4dd2d2729c2fca34d806" translate="yes" xml:space="preserve">
          <source>Just as you have to filter file names for uploads, you have to do so for downloads. The &lt;code&gt;send_file()&lt;/code&gt; method sends files from the server to the client. If you use a file name, that the user entered, without filtering, any file can be downloaded:</source>
          <target state="translated">アップロード用にファイル名をフィルタリングする必要があるのと同じように、ダウンロード用にもフィルタリングする必要があります。 &lt;code&gt;send_file()&lt;/code&gt; メソッドは、サーバからクライアントにファイルを送信します。ユーザーが入力したファイル名を使用すると、フィルタリングせずに、任意のファイルをダウンロードできます。</target>
        </trans-unit>
        <trans-unit id="f7176b43f8be7e97b7f6abc748a4d1ba73e1f076" translate="yes" xml:space="preserve">
          <source>Just as you have to filter file names for uploads, you have to do so for downloads. The send_file() method sends files from the server to the client. If you use a file name, that the user entered, without filtering, any file can be downloaded:</source>
          <target state="translated">アップロードの際にファイル名をフィルタリングしなければならないのと同じように、ダウンロードの際にもフィルタリングしなければなりません。send_file()メソッドは、サーバからクライアントにファイルを送信します。ユーザが入力したファイル名をフィルタリングなしで使用すると、どのようなファイルでもダウンロードできます。</target>
        </trans-unit>
        <trans-unit id="6eba7e48f48826c026364d3ef9033ea0a2ba0cec" translate="yes" xml:space="preserve">
          <source>Just follow the flow and use constant autoloading always, never mix autoloading and &lt;code&gt;require&lt;/code&gt;. As a last resort, if some file absolutely needs to load a certain file use &lt;code&gt;require_dependency&lt;/code&gt; to play nice with constant autoloading. This option is rarely needed in practice, though.</source>
          <target state="translated">ただ、自動ロードを混ぜ、決して、常に自動ロードの流れと使用定数をたどる &lt;code&gt;require&lt;/code&gt; 。最後の手段として、特定のファイルを絶対にロードする必要があるファイルがある場合は、 &lt;code&gt;require_dependency&lt;/code&gt; を使用して、一定のオートロードで適切に動作します。ただし、このオプションが実際に必要になることはめったにありません。</target>
        </trans-unit>
        <trans-unit id="a80f691b02f3be73882bc31c3ea73a96722da7ff" translate="yes" xml:space="preserve">
          <source>Just like &lt;a href=&quot;calculations#method-i-pluck&quot;&gt;&lt;code&gt;pluck&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;calculations#method-i-pick&quot;&gt;&lt;code&gt;pick&lt;/code&gt;&lt;/a&gt; will only load the actual value, not the entire record object, so it's also more efficient. The value is, again like with pluck, typecast by the column type.</source>
          <target state="translated">&lt;a href=&quot;calculations#method-i-pluck&quot;&gt; &lt;code&gt;pluck&lt;/code&gt; &lt;/a&gt;と同様に、&lt;a href=&quot;calculations#method-i-pick&quot;&gt; &lt;code&gt;pick&lt;/code&gt; &lt;/a&gt;はレコードオブジェクト全体ではなく実際の値のみをロードするため、より効率的です。値は、pluckの場合と同様に、列タイプごとにタイプキャストされます。</target>
        </trans-unit>
        <trans-unit id="c7399cb44559f41a1a38147646227e775691d7d9" translate="yes" xml:space="preserve">
          <source>Just like &lt;a href=&quot;calculations#method-i-pluck&quot;&gt;pluck&lt;/a&gt;, &lt;a href=&quot;calculations#method-i-pick&quot;&gt;pick&lt;/a&gt; will only load the actual value, not the entire record object, so it's also more efficient. The value is, again like with pluck, typecast by the column type.</source>
          <target state="translated">&lt;a href=&quot;calculations#method-i-pluck&quot;&gt;pluck&lt;/a&gt;と同様に、&lt;a href=&quot;calculations#method-i-pick&quot;&gt;pick&lt;/a&gt;はレコードオブジェクト全体ではなく、実際の値のみをロードするため、より効率的です。この値も、pluckと同様に、列の型で型キャストされます。</target>
        </trans-unit>
        <trans-unit id="b5142a3258360fa837bbaa68beca75ce9f59b7c8" translate="yes" xml:space="preserve">
          <source>Just like &lt;code&gt;include&lt;/code&gt;, concerns also support &lt;code&gt;prepend&lt;/code&gt; with a corresponding &lt;code&gt;prepended do&lt;/code&gt; callback. &lt;code&gt;module ClassMethods&lt;/code&gt; or &lt;code&gt;class_methods do&lt;/code&gt; are prepended as well.</source>
          <target state="translated">同じように &lt;code&gt;include&lt;/code&gt; 、懸念もサポートして &lt;code&gt;prepend&lt;/code&gt; 、対応すると &lt;code&gt;prepended do&lt;/code&gt; コールバックを。 &lt;code&gt;module ClassMethods&lt;/code&gt; または &lt;code&gt;class_methods do&lt;/code&gt; も同様に付加されます。</target>
        </trans-unit>
        <trans-unit id="671b2bc997bf58b09f7c839fa2e9de6a259349c8" translate="yes" xml:space="preserve">
          <source>Just like &lt;code&gt;where&lt;/code&gt; clauses scopes are merged using &lt;code&gt;AND&lt;/code&gt; conditions.</source>
          <target state="translated">&lt;code&gt;where&lt;/code&gt; 句のスコープが &lt;code&gt;AND&lt;/code&gt; 条件を使用してマージされるのと同じように。</target>
        </trans-unit>
        <trans-unit id="84d58a3285241049fdc7d2c0d02a7b2fde9d3be1" translate="yes" xml:space="preserve">
          <source>Just like &lt;code&gt;where&lt;/code&gt; clauses, scopes are merged using &lt;code&gt;AND&lt;/code&gt; conditions.</source>
          <target state="translated">&lt;code&gt;where&lt;/code&gt; 句と同様に、スコープは &lt;code&gt;AND&lt;/code&gt; 条件を使用してマージされます。</target>
        </trans-unit>
        <trans-unit id="f64914076cb847b94287ce323657522270559d5e" translate="yes" xml:space="preserve">
          <source>Just like controller views, you can also have mailer layouts. The layout name needs to be the same as your mailer, such as &lt;code&gt;user_mailer.html.erb&lt;/code&gt; and &lt;code&gt;user_mailer.text.erb&lt;/code&gt; to be automatically recognized by your mailer as a layout.</source>
          <target state="translated">コントローラービューと同様に、メーラーレイアウトも使用できます。メーラーがレイアウトとして自動的に認識されるようにするには、レイアウト名をメーラーと同じにする必要があります（ &lt;code&gt;user_mailer.html.erb&lt;/code&gt; や &lt;code&gt;user_mailer.text.erb&lt;/code&gt; など）。</target>
        </trans-unit>
        <trans-unit id="46bee7f81b2f9fe875003c5e26130b06678f387a" translate="yes" xml:space="preserve">
          <source>Just like for &lt;code&gt;app/controllers&lt;/code&gt;, you will find a &lt;code&gt;blorgh&lt;/code&gt; subdirectory under the &lt;code&gt;app/helpers&lt;/code&gt;, &lt;code&gt;app/jobs&lt;/code&gt;, &lt;code&gt;app/mailers&lt;/code&gt; and &lt;code&gt;app/models&lt;/code&gt; directories containing the associated &lt;code&gt;application_*.rb&lt;/code&gt; file for gathering common functionalities. By placing your files under this subdirectory and namespacing your objects, you prevent them from possibly clashing with identically-named elements within other engines or even within the application.</source>
          <target state="translated">&lt;code&gt;app/controllers&lt;/code&gt; の場合と同様に、 &lt;code&gt;app/helpers&lt;/code&gt; 、 &lt;code&gt;app/jobs&lt;/code&gt; 、 &lt;code&gt;app/mailers&lt;/code&gt; 、および &lt;code&gt;app/models&lt;/code&gt; ディレクトリの下に、共通の機能を収集するための関連する &lt;code&gt;application_*.rb&lt;/code&gt; ファイルを含む &lt;code&gt;blorgh&lt;/code&gt; サブディレクトリがあります。このサブディレクトリの下にファイルを配置し、オブジェクトに名前を付けることで、他のエンジン内またはアプリケーション内でさえ、同じ名前の要素とファイルが衝突するのを防ぐことができます。</target>
        </trans-unit>
        <trans-unit id="b0ff75e5509e5833aad29a601299fcb536fb4a17" translate="yes" xml:space="preserve">
          <source>Just like for &lt;code&gt;find_each&lt;/code&gt;, &lt;code&gt;batch_size&lt;/code&gt; establishes how many records will be retrieved in each group. For example, retrieving batches of 2500 records can be specified as:</source>
          <target state="translated">&lt;code&gt;find_each&lt;/code&gt; の場合と同様に、 &lt;code&gt;batch_size&lt;/code&gt; は、各グループで取得されるレコードの数を確立します。たとえば、2500レコードのバッチを取得するには、次のように指定できます。</target>
        </trans-unit>
        <trans-unit id="753554100abd5092cfad1bab450b186806b19dcb" translate="yes" xml:space="preserve">
          <source>Just like the &lt;code&gt;:status&lt;/code&gt; option for &lt;code&gt;render&lt;/code&gt;, &lt;code&gt;:status&lt;/code&gt; for &lt;code&gt;redirect_to&lt;/code&gt; accepts both numeric and symbolic header designations.</source>
          <target state="translated">同じように &lt;code&gt;:status&lt;/code&gt; のオプション &lt;code&gt;render&lt;/code&gt; 、 &lt;code&gt;:status&lt;/code&gt; のための &lt;code&gt;redirect_to&lt;/code&gt; は数値とシンボリックヘッダの指定の両方を受け入れます。</target>
        </trans-unit>
        <trans-unit id="48a1e320e2900c92a403a1b54619041dc6c7dbb0" translate="yes" xml:space="preserve">
          <source>Just like with controller views, use &lt;code&gt;yield&lt;/code&gt; to render the view inside the layout.</source>
          <target state="translated">コントローラービューの場合と同様に、 &lt;code&gt;yield&lt;/code&gt; を使用してビューをレイアウト内にレンダリングします。</target>
        </trans-unit>
        <trans-unit id="cfe563ecbc5c2d0727d8e68cb28dba126901d7cb" translate="yes" xml:space="preserve">
          <source>Just provide the polymorphic target type and Active Record will take care of the rest.</source>
          <target state="translated">多相性のあるターゲットタイプを指定するだけで、Active Recordが残りの部分を処理してくれます。</target>
        </trans-unit>
        <trans-unit id="860d8665c7153f5ed86a5af21fcfc9bdf178a9c7" translate="yes" xml:space="preserve">
          <source>Just remember: They'll be gone by the time the next action has been performed.</source>
          <target state="translated">覚えておいてください。彼らは次のアクションが実行されるまでに消えてしまいます。</target>
        </trans-unit>
        <trans-unit id="dd65c1b4b3e66e765523873bd29cf5d6d6838189" translate="yes" xml:space="preserve">
          <source>KEY</source>
          <target state="translated">KEY</target>
        </trans-unit>
        <trans-unit id="d4539f21502f9a79f091307f97c17b2f1499a26d" translate="yes" xml:space="preserve">
          <source>KILOBYTE</source>
          <target state="translated">KILOBYTE</target>
        </trans-unit>
        <trans-unit id="74f46f9fed362d70b79016c97d7a171bb9094666" translate="yes" xml:space="preserve">
          <source>KV_RE</source>
          <target state="translated">KV_RE</target>
        </trans-unit>
        <trans-unit id="6dc3af60e01355817ee8300ffeb6bf0b63b5301c" translate="yes" xml:space="preserve">
          <source>Karel Minař&amp;iacute;k</source>
          <target state="translated">カレル・ミナジーク</target>
        </trans-unit>
        <trans-unit id="e64ba95d856c5ca45c7426d6f65bec414c07937e" translate="yes" xml:space="preserve">
          <source>Keep in mind that database adapters handle certain serialization tasks for you. For instance: &lt;code&gt;json&lt;/code&gt; and &lt;code&gt;jsonb&lt;/code&gt; types in PostgreSQL will be converted between JSON object/array syntax and Ruby &lt;code&gt;Hash&lt;/code&gt; or &lt;code&gt;Array&lt;/code&gt; objects transparently. There is no need to use &lt;a href=&quot;classmethods#method-i-serialize&quot;&gt;&lt;code&gt;serialize&lt;/code&gt;&lt;/a&gt; in this case.</source>
          <target state="translated">データベースアダプタが特定のシリアル化タスクを処理することに注意してください。例：PostgreSQLの &lt;code&gt;json&lt;/code&gt; および &lt;code&gt;jsonb&lt;/code&gt; タイプは、JSONオブジェクト/配列構文とRuby &lt;code&gt;Hash&lt;/code&gt; または &lt;code&gt;Array&lt;/code&gt; オブジェクトの間で透過的に変換されます。この場合、&lt;a href=&quot;classmethods#method-i-serialize&quot;&gt; &lt;code&gt;serialize&lt;/code&gt; &lt;/a&gt;を使用する必要はありません。</target>
        </trans-unit>
        <trans-unit id="ca6310cd242689398be52a0e491b3ffc0905a27a" translate="yes" xml:space="preserve">
          <source>Keep in mind that database adapters handle certain serialization tasks for you. For instance: &lt;code&gt;json&lt;/code&gt; and &lt;code&gt;jsonb&lt;/code&gt; types in PostgreSQL will be converted between JSON object/array syntax and Ruby &lt;code&gt;Hash&lt;/code&gt; or &lt;code&gt;Array&lt;/code&gt; objects transparently. There is no need to use &lt;a href=&quot;classmethods#method-i-serialize&quot;&gt;serialize&lt;/a&gt; in this case.</source>
          <target state="translated">データベースアダプターは特定のシリアル化タスクを処理することに注意してください。たとえば、PostgreSQLの &lt;code&gt;json&lt;/code&gt; および &lt;code&gt;jsonb&lt;/code&gt; タイプは、JSONオブジェクト/配列構文とRuby &lt;code&gt;Hash&lt;/code&gt; または &lt;code&gt;Array&lt;/code&gt; オブジェクトの間で透過的に変換されます。この場合、&lt;a href=&quot;classmethods#method-i-serialize&quot;&gt;シリアライズ&lt;/a&gt;を使用する必要はありません。</target>
        </trans-unit>
        <trans-unit id="b37b81146f80a1a4919ec9c9b0e5d0cd85718f8c" translate="yes" xml:space="preserve">
          <source>Keep in mind that removing these middlewares will remove support for certain features in Action Controller.</source>
          <target state="translated">これらのミドルウェアを削除すると、Action Controllerの特定の機能がサポートされなくなることに注意してください。</target>
        </trans-unit>
        <trans-unit id="f3cd42ebc58551029cf6d64890f34636b5f605b0" translate="yes" xml:space="preserve">
          <source>Keep in mind the order of these preprocessors is important. For example, if you called your JavaScript file &lt;code&gt;app/assets/javascripts/projects.erb.coffee&lt;/code&gt; then it would be processed with the CoffeeScript interpreter first, which wouldn't understand ERB and therefore you would run into problems.</source>
          <target state="translated">これらのプリプロセッサの順序が重要であることを覚えておいてください。たとえば、JavaScriptファイル &lt;code&gt;app/assets/javascripts/projects.erb.coffee&lt;/code&gt; を呼び出した場合、最初にCoffeeScriptインタープリターで処理されるため、ERBを理解できず、問題が発生します。</target>
        </trans-unit>
        <trans-unit id="38b50dd97691ece4d75030debc9d7c69689f4370" translate="yes" xml:space="preserve">
          <source>Keep in mind, of course, that anything generated with these commands inside of an engine that has &lt;code&gt;isolate_namespace&lt;/code&gt; in the &lt;code&gt;Engine&lt;/code&gt; class will be namespaced.</source>
          <target state="translated">もちろん、 &lt;code&gt;Engine&lt;/code&gt; クラス内に &lt;code&gt;isolate_namespace&lt;/code&gt; を持つエンジンの内部でこれらのコマンドを使用して生成されたものはすべて名前空間が付けられることに注意してください。</target>
        </trans-unit>
        <trans-unit id="811c5671e6f72a16320e58794cbdd505a4a8bfdd" translate="yes" xml:space="preserve">
          <source>Keep your master key safe. Do not commit your master key.</source>
          <target state="translated">マスターキーを安全に保管してください。マスターキーをコミットしないようにしてください。</target>
        </trans-unit>
        <trans-unit id="5c3ffafd6d0bd987a08e86445a216acb025e6c9e" translate="yes" xml:space="preserve">
          <source>Keeping the Postman in Check</source>
          <target state="translated">郵便配達員の管理</target>
        </trans-unit>
        <trans-unit id="56d925c36d2e941d2af29d231d5dbe9ae819ce7d" translate="yes" xml:space="preserve">
          <source>Keeps an array of all the emails sent out through the Action Mailer with delivery_method :test. Most useful for unit and functional testing.</source>
          <target state="translated">delivery_method :testを指定してAction Mailerで送信されたすべてのメールの配列を保持します。ユニットテストや機能テストに最も便利です。</target>
        </trans-unit>
        <trans-unit id="37bcbef0779247a6b500aae75580d306dd7aad75" translate="yes" xml:space="preserve">
          <source>Keeps either the entire current flash or a specific flash entry available for the next action:</source>
          <target state="translated">現在のフラッシュ全体または特定のフラッシュ エントリのいずれかを、次のアクションで使用可能な状態に保ちます。</target>
        </trans-unit>
        <trans-unit id="74808d3df030e992e7b9444241625147986487c1" translate="yes" xml:space="preserve">
          <source>Kernel</source>
          <target state="translated">Kernel</target>
        </trans-unit>
        <trans-unit id="c67dd20ee842986086a0a915ddc2a279490130ed" translate="yes" xml:space="preserve">
          <source>Key</source>
          <target state="translated">Key</target>
        </trans-unit>
        <trans-unit id="dccff3da927cfa30d8263467f25f4099d890d528" translate="yes" xml:space="preserve">
          <source>Key aspects of Ruby constants</source>
          <target state="translated">Ruby定数の主要な側面</target>
        </trans-unit>
        <trans-unit id="bd612611d70de311a74efc2fb60fd72bd02e7463" translate="yes" xml:space="preserve">
          <source>Key prefix</source>
          <target state="translated">キープレフィックス</target>
        </trans-unit>
        <trans-unit id="1fd3bb93252c4e7c505b9a33e3f33adbbb95274d" translate="yes" xml:space="preserve">
          <source>Key used in the store</source>
          <target state="translated">店内で使用したキー</target>
        </trans-unit>
        <trans-unit id="74018238351de8a4b5f41ef51f98e3f2c94d5837" translate="yes" xml:space="preserve">
          <source>KeyError</source>
          <target state="translated">KeyError</target>
        </trans-unit>
        <trans-unit id="74b7794756029ab4d216c6b5291e0a3c6b00afdc" translate="yes" xml:space="preserve">
          <source>KeyGenerator</source>
          <target state="translated">KeyGenerator</target>
        </trans-unit>
        <trans-unit id="38565bb17684d112a156b97c9fd4c097d914dfef" translate="yes" xml:space="preserve">
          <source>KeyGenerator#generate_key</source>
          <target state="translated">KeyGenerator#generate_key</target>
        </trans-unit>
        <trans-unit id="5e8529f8277cb52ad5e090f3e1129a3e4596b4ad" translate="yes" xml:space="preserve">
          <source>KeyGenerator::new</source>
          <target state="translated">KeyGenerator::new</target>
        </trans-unit>
        <trans-unit id="719e044fe2073788bf09e1d48dfff585870d5f03" translate="yes" xml:space="preserve">
          <source>Keys are Rails &lt;a href=&quot;timezone&quot;&gt;&lt;code&gt;TimeZone&lt;/code&gt;&lt;/a&gt; names, values are TZInfo identifiers.</source>
          <target state="translated">キーはRailsのある&lt;a href=&quot;timezone&quot;&gt; &lt;code&gt;TimeZone&lt;/code&gt; &lt;/a&gt;名前、値はtzinfoの識別子です。</target>
        </trans-unit>
        <trans-unit id="759dc506a4c9361dcdcf96ba09aab32ce67fc6aa" translate="yes" xml:space="preserve">
          <source>Keys are Rails &lt;a href=&quot;timezone&quot;&gt;TimeZone&lt;/a&gt; names, values are TZInfo identifiers.</source>
          <target state="translated">キーはRailsの&lt;a href=&quot;timezone&quot;&gt;TimeZone&lt;/a&gt;名、値はTZInfo識別子です。</target>
        </trans-unit>
        <trans-unit id="a20d2ee49597daf4669b80fbd8282f66a254453f" translate="yes" xml:space="preserve">
          <source>Keys are always translated into Strings and are case sensitive. When an object is specified as a key and has a &lt;code&gt;cache_key&lt;/code&gt; method defined, this method will be called to define the key. Otherwise, the &lt;code&gt;to_param&lt;/code&gt; method will be called. Hashes and Arrays can also be used as keys. The elements will be delimited by slashes, and the elements within a &lt;a href=&quot;../../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; will be sorted by key so they are consistent.</source>
          <target state="translated">キーは常に文字列に変換され、大文字と小文字が区別されます。オブジェクトがキーとして指定され、 &lt;code&gt;cache_key&lt;/code&gt; メソッドが定義されている場合、このメソッドが呼び出されてキーが定義されます。それ以外の場合は、 &lt;code&gt;to_param&lt;/code&gt; メソッドが呼び出されます。ハッシュと配列もキーとして使用できます。要素はスラッシュで区切られ、&lt;a href=&quot;../../hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt;内の要素は一貫性があるようにキーで並べ替えられます。</target>
        </trans-unit>
        <trans-unit id="7c91d792d7d8ea478b77ee4fc93f40db3edb4c80" translate="yes" xml:space="preserve">
          <source>Keys are always translated into Strings and are case sensitive. When an object is specified as a key and has a &lt;code&gt;cache_key&lt;/code&gt; method defined, this method will be called to define the key. Otherwise, the &lt;code&gt;to_param&lt;/code&gt; method will be called. Hashes and Arrays can also be used as keys. The elements will be delimited by slashes, and the elements within a &lt;a href=&quot;../../hash&quot;&gt;Hash&lt;/a&gt; will be sorted by key so they are consistent.</source>
          <target state="translated">キーは常に文字列に変換され、大文字と小文字が区別されます。オブジェクトがキーとして指定され、 &lt;code&gt;cache_key&lt;/code&gt; メソッドが定義されている場合、このメソッドが呼び出されてキーが定義されます。それ以外の場合は、 &lt;code&gt;to_param&lt;/code&gt; メソッドが呼び出されます。ハッシュと配列もキーとして使用できます。要素はスラッシュで区切られ、&lt;a href=&quot;../../hash&quot;&gt;ハッシュ&lt;/a&gt;内の要素はキーでソートされるため、一貫性があります。</target>
        </trans-unit>
        <trans-unit id="ed45856e9e6ecb02a978d31d54e643eb027da025" translate="yes" xml:space="preserve">
          <source>Keys are truncated with their own SHA2 digest if they exceed 1kB</source>
          <target state="translated">キーが1kBを超える場合は、独自のSHA2ダイジェストで切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="6dade8eae87c393093fe35456b0c0546385b2018" translate="yes" xml:space="preserve">
          <source>Keys should normally be unique. If the block returns the same value for different elements no collection is built for that key. The last item will win.</source>
          <target state="translated">キーは通常、一意でなければなりません。ブロックが異なる要素に対して同じ値を返す場合は、そのキーのためのコレクションは構築されません。最後の項目が勝者となります。</target>
        </trans-unit>
        <trans-unit id="3c4171878f85224ae8e8085027502b35e802765f" translate="yes" xml:space="preserve">
          <source>Keys with a '_html' suffix and keys named 'html' are marked as HTML safe. When you use them in views the HTML will not be escaped.</source>
          <target state="translated">接尾辞が '_html' のキーと 'html' という名前のキーは HTML セーフとしてマークされています。これらをビューで使用した場合、HTMLはエスケープされません。</target>
        </trans-unit>
        <trans-unit id="603962661dd677bfb30ebbf245488be607df467b" translate="yes" xml:space="preserve">
          <source>Knowing this, you can combine &lt;code&gt;select_tag&lt;/code&gt; and &lt;code&gt;options_for_select&lt;/code&gt; to achieve the desired, complete markup:</source>
          <target state="translated">これを知っていれば、 &lt;code&gt;select_tag&lt;/code&gt; と &lt;code&gt;options_for_select&lt;/code&gt; を組み合わせて、目的の完全なマークアップを実現できます。</target>
        </trans-unit>
        <trans-unit id="b9c048acd3b4935270bc39bf7303395a77e3c631" translate="yes" xml:space="preserve">
          <source>LAST_MODIFIED</source>
          <target state="translated">LAST_MODIFIED</target>
        </trans-unit>
        <trans-unit id="096c41c788487a970ec074e54230e758c0f4c4b5" translate="yes" xml:space="preserve">
          <source>LOCALHOST</source>
          <target state="translated">LOCALHOST</target>
        </trans-unit>
        <trans-unit id="40c3322b3b3d0d946724fe784d34663629e1932a" translate="yes" xml:space="preserve">
          <source>LOCATION</source>
          <target state="translated">LOCATION</target>
        </trans-unit>
        <trans-unit id="f7b234a238285a1f43faf56fe04f8eca0e8187cd" translate="yes" xml:space="preserve">
          <source>LOCK_NOT_AVAILABLE</source>
          <target state="translated">LOCK_NOT_AVAILABLE</target>
        </trans-unit>
        <trans-unit id="098eeaebc4158474bc2be818c08af354bd7af4d9" translate="yes" xml:space="preserve">
          <source>LOOKUP</source>
          <target state="translated">LOOKUP</target>
        </trans-unit>
        <trans-unit id="eea76aa993177151ffe54751f3710090c41018a2" translate="yes" xml:space="preserve">
          <source>Label references for associations (belongs_to, has_one, has_many)</source>
          <target state="translated">アソシエーションのラベル参照(belongs_to,has_one,has_many)</target>
        </trans-unit>
        <trans-unit id="ef1b43b180145d1655abe2acaac47486dfdc28a0" translate="yes" xml:space="preserve">
          <source>Last configurable block to run. Called after frameworks initialize.</source>
          <target state="translated">最後に実行する設定可能なブロック。フレームワークの初期化後に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="091fde44725196b0d7b6b7ede88ee30e526d8fe4" translate="yes" xml:space="preserve">
          <source>Last time we left when the &lt;code&gt;app&lt;/code&gt; method was being defined:</source>
          <target state="translated">&lt;code&gt;app&lt;/code&gt; メソッドが定義されていたときに去ったとき：</target>
        </trans-unit>
        <trans-unit id="510f1240320c0b4245e6973ae63e21990f3c7f94" translate="yes" xml:space="preserve">
          <source>Lastly an &lt;code&gt;after_find&lt;/code&gt; and &lt;code&gt;after_initialize&lt;/code&gt; callback is triggered for each object that is found and instantiated by a finder, with &lt;code&gt;after_initialize&lt;/code&gt; being triggered after new objects are instantiated as well.</source>
          <target state="translated">最後に、 &lt;code&gt;after_find&lt;/code&gt; によって検出およびインスタンス化された各オブジェクトに対してafter_findおよび &lt;code&gt;after_initialize&lt;/code&gt; コールバックがトリガーされ、新しいオブジェクトがインスタンス化された後にも &lt;code&gt;after_initialize&lt;/code&gt; がトリガーされます。</target>
        </trans-unit>
        <trans-unit id="a8edffefe23a3b0069154ba211dceaa5589a707c" translate="yes" xml:space="preserve">
          <source>Lastly, for new primary databases you need to set the &lt;code&gt;migrations_paths&lt;/code&gt; to the directory where you will store migrations for that database. We'll look more at &lt;code&gt;migrations_paths&lt;/code&gt; later on in this guide.</source>
          <target state="translated">最後に、新しいプライマリデータベースの場合、 &lt;code&gt;migrations_paths&lt;/code&gt; を、そのデータベースのマイグレーションを格納するディレクトリに設定する必要があります。このガイドの後半で、 &lt;code&gt;migrations_paths&lt;/code&gt; について詳しく説明します。</target>
        </trans-unit>
        <trans-unit id="5519aac47c42ea625f3e384185f96f912ddc1ee0" translate="yes" xml:space="preserve">
          <source>Lastly, for new writer databases you need to set the &lt;code&gt;migrations_paths&lt;/code&gt; to the directory where you will store migrations for that database. We'll look more at &lt;code&gt;migrations_paths&lt;/code&gt; later on in this guide.</source>
          <target state="translated">最後に、新しいライターデータベースの場合、 &lt;code&gt;migrations_paths&lt;/code&gt; をそのデータベースの移行を保存するディレクトリに設定する必要があります。このガイドの後半で、 &lt;code&gt;migrations_paths&lt;/code&gt; について詳しく説明します。</target>
        </trans-unit>
        <trans-unit id="e11ef8043bdfd5d2effaa0c4ccffaea4aff10bd1" translate="yes" xml:space="preserve">
          <source>Lastly, simple content can be passed as a parameter:</source>
          <target state="translated">最後に、シンプルな内容をパラメータとして渡すことができます。</target>
        </trans-unit>
        <trans-unit id="b1a487af9f0197f34ab23417574667b914a550ec" translate="yes" xml:space="preserve">
          <source>Lastly, the &lt;code&gt;app/views&lt;/code&gt; directory contains a &lt;code&gt;layouts&lt;/code&gt; folder, which contains a file at &lt;code&gt;blorgh/application.html.erb&lt;/code&gt;. This file allows you to specify a layout for the engine. If this engine is to be used as a stand-alone engine, then you would add any customization to its layout in this file, rather than the application's &lt;code&gt;app/views/layouts/application.html.erb&lt;/code&gt; file.</source>
          <target state="translated">最後に、 &lt;code&gt;app/views&lt;/code&gt; ディレクトリには、 &lt;code&gt;blorgh/application.html.erb&lt;/code&gt; にあるファイルを含む &lt;code&gt;layouts&lt;/code&gt; フォルダーが含まれています。このファイルでは、エンジンのレイアウトを指定できます。このエンジンをスタンドアロンエンジンとして使用する場合は、アプリケーションの &lt;code&gt;app/views/layouts/application.html.erb&lt;/code&gt; ファイルではなく、このファイルのレイアウトにカスタマイズを追加します。</target>
        </trans-unit>
        <trans-unit id="4923e7c21c37b1490f6b455965aed466eb385e5e" translate="yes" xml:space="preserve">
          <source>Lastly, we can specify a default choice for the select box with the &lt;code&gt;:selected&lt;/code&gt; argument:</source>
          <target state="translated">最後に、 &lt;code&gt;:selected&lt;/code&gt; 引数を使用して、選択ボックスのデフォルトの選択肢を指定できます。</target>
        </trans-unit>
        <trans-unit id="cf0e45525464dbd04e79c657faf5c6b2fb11c005" translate="yes" xml:space="preserve">
          <source>Lastly, you can use sprintf-style % escapes in the template. This works slightly differently than the previous methods; you are responsible for ensuring that the values in the template are properly quoted. The values are passed to the connector for quoting, but the caller is responsible for ensuring they are enclosed in quotes in the resulting SQL. After quoting, the values are inserted using the same escapes as the Ruby core method &lt;code&gt;Kernel::sprintf&lt;/code&gt;.</source>
          <target state="translated">最後に、テンプレートでsprintfスタイルの％エスケープを使用できます。これは、以前の方法とは少し異なります。テンプレートの値が適切に引用されていることを確認する責任があります。値は引用のためにコネクターに渡されますが、呼び出し元は、結果のSQLでそれらが引用符で囲まれていることを確認する責任があります。引用した後、Rubyコアメソッド &lt;code&gt;Kernel::sprintf&lt;/code&gt; と同じエスケープを使用して値が挿入されます。</target>
        </trans-unit>
        <trans-unit id="392c8854d0981f89d43dab619acc0d260db6fa94" translate="yes" xml:space="preserve">
          <source>Later, when the body of the module definition is interpreted, a new entry is created in the constant table of the module object stored in the &lt;code&gt;Colors&lt;/code&gt; constant. That entry maps the name &quot;RED&quot; to the string &quot;0xff0000&quot;.</source>
          <target state="translated">その後、モジュール定義の本文が解釈されると、 &lt;code&gt;Colors&lt;/code&gt; 定数に格納されているモジュールオブジェクトの定数テーブルに新しいエントリが作成されます。そのエントリは、名前「RED」を文字列「0xff0000」にマップします。</target>
        </trans-unit>
        <trans-unit id="bec266232611c1ccc105a2b7fb87e8c1a59a2eca" translate="yes" xml:space="preserve">
          <source>Launch the web server again if you stopped it to generate the controller (&lt;code&gt;rails
server&lt;/code&gt;) and navigate to http://localhost:3000 in your browser. You'll see the &quot;Hello, Rails!&quot; message you put into &lt;code&gt;app/views/welcome/index.html.erb&lt;/code&gt;, indicating that this new route is indeed going to &lt;code&gt;WelcomeController&lt;/code&gt;'s &lt;code&gt;index&lt;/code&gt; action and is rendering the view correctly.</source>
          <target state="translated">コントローラー（ &lt;code&gt;rails server&lt;/code&gt; ）を生成するために停止した場合は、Webサーバーを再度起動し、ブラウザーでhttp：// localhost：3000に移動します。「Hello、Rails！」が表示されます。 &lt;code&gt;app/views/welcome/index.html.erb&lt;/code&gt; に入力したメッセージ。この新しいルートが実際に &lt;code&gt;WelcomeController&lt;/code&gt; の &lt;code&gt;index&lt;/code&gt; アクションに移動し、ビューを正しくレンダリングしていることを示しています。</target>
        </trans-unit>
        <trans-unit id="af9e4ca75455ed36ae5cba0ec03de1506f297609" translate="yes" xml:space="preserve">
          <source>Launch!</source>
          <target state="translated">Launch!</target>
        </trans-unit>
        <trans-unit id="3b232ddd1deabfdc739b7f19ed66f965ea3e4797" translate="yes" xml:space="preserve">
          <source>Layers additional behavior on &lt;a href=&quot;time#method-c-at&quot;&gt;::at&lt;/a&gt; so that &lt;a href=&quot;activesupport/timewithzone&quot;&gt;ActiveSupport::TimeWithZone&lt;/a&gt; and &lt;a href=&quot;datetime&quot;&gt;DateTime&lt;/a&gt; instances can be used when called with a single argument</source>
          <target state="translated">単一の引数で呼び出されたときに&lt;a href=&quot;activesupport/timewithzone&quot;&gt;ActiveSupport :: TimeWithZone&lt;/a&gt;および&lt;a href=&quot;datetime&quot;&gt;DateTime&lt;/a&gt;インスタンスを使用できるように、&lt;a href=&quot;time#method-c-at&quot;&gt;:: atで&lt;/a&gt;追加の動作をレイヤー化します。</target>
        </trans-unit>
        <trans-unit id="de73d00b2c752e040525128277ab5e9682434f68" translate="yes" xml:space="preserve">
          <source>Layers additional behavior on &lt;a href=&quot;time#method-c-at&quot;&gt;&lt;code&gt;Time.at&lt;/code&gt;&lt;/a&gt; so that &lt;a href=&quot;activesupport/timewithzone&quot;&gt;&lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;datetime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; instances can be used when called with a single argument</source>
          <target state="translated">上のレイヤーの追加行動&lt;a href=&quot;time#method-c-at&quot;&gt; &lt;code&gt;Time.at&lt;/code&gt; &lt;/a&gt;よう&lt;a href=&quot;activesupport/timewithzone&quot;&gt; &lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;datetime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; の&lt;/a&gt;インスタンスが単一の引数で呼び出されたときに使用することができます</target>
        </trans-unit>
        <trans-unit id="450c7c23c31cb0b2f54d83184ce79687a2b74fa0" translate="yes" xml:space="preserve">
          <source>Layers additional behavior on &lt;a href=&quot;time#method-i-eql-3F&quot;&gt;#eql?&lt;/a&gt; so that &lt;a href=&quot;activesupport/timewithzone&quot;&gt;ActiveSupport::TimeWithZone&lt;/a&gt; instances can be eql? to an equivalent &lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;time#method-i-eql-3F&quot;&gt;#eqlの&lt;/a&gt;レイヤーの追加動作？そのため&lt;a href=&quot;activesupport/timewithzone&quot;&gt;activesupportの:: TimeWithZoneの&lt;/a&gt;インスタンスはEQLすることができますか？同等の&lt;a href=&quot;time&quot;&gt;時間&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a12d9cbeb593495ba2e988c7c8941a3ecb5512c" translate="yes" xml:space="preserve">
          <source>Layers additional behavior on &lt;a href=&quot;time#method-i-eql-3F&quot;&gt;&lt;code&gt;Time#eql?&lt;/code&gt;&lt;/a&gt; so that &lt;a href=&quot;activesupport/timewithzone&quot;&gt;&lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt;&lt;/a&gt; instances can be eql? to an equivalent &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;time#method-i-eql-3F&quot;&gt; &lt;code&gt;Time#eql?&lt;/code&gt; &lt;/a&gt;追加の動作をレイヤー化しますか？そのため&lt;a href=&quot;activesupport/timewithzone&quot;&gt; &lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt; &lt;/a&gt;インスタンスはEQLすることができますか？同等の&lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4b38f51a09e969dada758addbb48c5faf21f8a94" translate="yes" xml:space="preserve">
          <source>Layers additional behavior on DateTime#&amp;lt;=&amp;gt; so that &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;activesupport/timewithzone&quot;&gt;&lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt;&lt;/a&gt; instances can be compared with a &lt;a href=&quot;datetime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;activesupport/timewithzone&quot;&gt; &lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt; &lt;/a&gt;インスタンスを&lt;a href=&quot;datetime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt;と比較できるように、DateTime＃&amp;lt;=&amp;gt;で追加の動作をレイヤー化します。</target>
        </trans-unit>
        <trans-unit id="7d321d86ff6cc58af6defb3f60342a2302fa2218" translate="yes" xml:space="preserve">
          <source>Layers additional behavior on DateTime#&amp;lt;=&amp;gt; so that &lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt; and &lt;a href=&quot;activesupport/timewithzone&quot;&gt;ActiveSupport::TimeWithZone&lt;/a&gt; instances can be compared with a &lt;a href=&quot;datetime&quot;&gt;DateTime&lt;/a&gt;.</source>
          <target state="translated">DateTime＃&amp;lt;=&amp;gt;に追加の動作を重ねて、&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;および&lt;a href=&quot;activesupport/timewithzone&quot;&gt;ActiveSupport :: TimeWithZone&lt;/a&gt;インスタンスを&lt;a href=&quot;datetime&quot;&gt;DateTime&lt;/a&gt;と比較できるようにします。</target>
        </trans-unit>
        <trans-unit id="64305a85ea672eb6ee37a080535d6592fb2e7db8" translate="yes" xml:space="preserve">
          <source>Layers additional behavior on Time#&amp;lt;=&amp;gt; so that &lt;a href=&quot;datetime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;activesupport/timewithzone&quot;&gt;&lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt;&lt;/a&gt; instances can be chronologically compared with a &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Time＃&amp;lt;=&amp;gt;で追加の動作をレイヤー化して、&lt;a href=&quot;datetime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt;インスタンスと&lt;a href=&quot;activesupport/timewithzone&quot;&gt; &lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt; &lt;/a&gt;インスタンスを時系列で&lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt;と比較できるようにします</target>
        </trans-unit>
        <trans-unit id="29c255a938da046a574f295ca103dddf42d32232" translate="yes" xml:space="preserve">
          <source>Layers additional behavior on Time#&amp;lt;=&amp;gt; so that &lt;a href=&quot;datetime&quot;&gt;DateTime&lt;/a&gt; and &lt;a href=&quot;activesupport/timewithzone&quot;&gt;ActiveSupport::TimeWithZone&lt;/a&gt; instances can be chronologically compared with a &lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;</source>
          <target state="translated">Time＃&amp;lt;=&amp;gt;で追加の動作をレイヤー化し、&lt;a href=&quot;datetime&quot;&gt;DateTime&lt;/a&gt;および&lt;a href=&quot;activesupport/timewithzone&quot;&gt;ActiveSupport :: TimeWithZone&lt;/a&gt;インスタンスを時系列で&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;と比較できるようにします。</target>
        </trans-unit>
        <trans-unit id="8daa234f4e9273cda7590ab2e63f033cc2e446cd" translate="yes" xml:space="preserve">
          <source>Laying down the groundwork</source>
          <target state="translated">基礎を築く</target>
        </trans-unit>
        <trans-unit id="ddc2e0175464c8ae5a4d0b334ec3310ddf23aae7" translate="yes" xml:space="preserve">
          <source>Layout assignment</source>
          <target state="translated">レイアウトの割り当て</target>
        </trans-unit>
        <trans-unit id="01655ad5977ee9d7376ffb682322087942af96db" translate="yes" xml:space="preserve">
          <source>Layout declarations cascade downward in the hierarchy, and more specific layout declarations always override more general ones. For example:</source>
          <target state="translated">レイアウト宣言は階層内で下に向かってカスケードし、より具体的なレイアウト宣言は常により一般的なものを上書きします。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="28e6f54e33a1151bfd4c7cc4affd14df3525f2db" translate="yes" xml:space="preserve">
          <source>Layouts</source>
          <target state="translated">Layouts</target>
        </trans-unit>
        <trans-unit id="9c2227b01890429dea82f0435c986a7de2991348" translate="yes" xml:space="preserve">
          <source>Layouts and Rendering in Rails</source>
          <target state="translated">Railsでのレイアウトとレンダリング</target>
        </trans-unit>
        <trans-unit id="5e792861fadd8548975876f8194dfffbf0cb481c" translate="yes" xml:space="preserve">
          <source>Layouts can be used to render a common view template around the results of Rails controller actions. Typically, a Rails application will have a couple of layouts that pages will be rendered within. For example, a site might have one layout for a logged in user and another for the marketing or sales side of the site. The logged in user layout might include top-level navigation that should be present across many controller actions. The sales layout for a SaaS app might include top-level navigation for things like &quot;Pricing&quot; and &quot;Contact Us&quot; pages. You would expect each layout to have a different look and feel. You can read about layouts in more detail in the &lt;a href=&quot;layouts_and_rendering&quot;&gt;Layouts and Rendering in Rails&lt;/a&gt; guide.</source>
          <target state="translated">レイアウトを使用して、Railsコントローラーアクションの結果の周囲に共通のビューテンプレートをレンダリングできます。通常、Railsアプリケーションには、ページがレンダリングされるレイアウトがいくつかあります。たとえば、サイトには、ログインしたユーザー用のレイアウトと、サイトのマーケティングまたは販売用のレイアウトがある場合があります。ログインしたユーザーのレイアウトには、多くのコントローラーアクションにわたって存在する必要があるトップレベルのナビゲーションが含まれる場合があります。 SaaSアプリの販売レイアウトには、「価格」ページや「お問い合わせ」ページなどのトップレベルのナビゲーションが含まれる場合があります。レイアウトごとに異なるルックアンドフィールを期待します。レイアウトについて詳しくは、「&lt;a href=&quot;layouts_and_rendering&quot;&gt;Rails&lt;/a&gt;でのレイアウトとレンダリング」ガイドをご覧ください。</target>
        </trans-unit>
        <trans-unit id="48470ed7993d797dbe5e8d27e23dd9a217c53643" translate="yes" xml:space="preserve">
          <source>Layouts specified at the controller level support the &lt;code&gt;:only&lt;/code&gt; and &lt;code&gt;:except&lt;/code&gt; options. These options take either a method name, or an array of method names, corresponding to method names within the controller:</source>
          <target state="translated">コントローラレベルで指定されたレイアウトは、 &lt;code&gt;:only&lt;/code&gt; および &lt;code&gt;:except&lt;/code&gt; オプションをサポートします。これらのオプションは、コントローラ内のメソッド名に対応するメソッド名またはメソッド名の配列のいずれかを取ります。</target>
        </trans-unit>
        <trans-unit id="e27583837c86c78aaebaf82c394f36c53e1ccbcf" translate="yes" xml:space="preserve">
          <source>Layouts#action_has_layout?</source>
          <target state="translated">Layouts#action_has_layout?</target>
        </trans-unit>
        <trans-unit id="f7cade8c906e9d8975259c8d26198e469b8c71e4" translate="yes" xml:space="preserve">
          <source>Layouts::ClassMethods</source>
          <target state="translated">Layouts::ClassMethods</target>
        </trans-unit>
        <trans-unit id="5617eb863672173bd45cabc2c17a35b9e442eed4" translate="yes" xml:space="preserve">
          <source>Layouts::ClassMethods#layout</source>
          <target state="translated">Layouts::ClassMethods#layout</target>
        </trans-unit>
        <trans-unit id="dab591e309e317fa64fcc8cc09c071b74932d444" translate="yes" xml:space="preserve">
          <source>Lazily load TZInfo::Timezone instances only when they're needed.</source>
          <target state="translated">TZInfo::Timezone インスタンスを必要なときにのみ、遅延的にロードします。</target>
        </trans-unit>
        <trans-unit id="4acd3d668558126efd2cfb5861479b741fa7210e" translate="yes" xml:space="preserve">
          <source>LazyLoadHooks</source>
          <target state="translated">LazyLoadHooks</target>
        </trans-unit>
        <trans-unit id="05f23ec34b8f5c1c142321cf9fb3a41254f5ed9b" translate="yes" xml:space="preserve">
          <source>LazyLoadHooks#on_load</source>
          <target state="translated">LazyLoadHooks#on_load</target>
        </trans-unit>
        <trans-unit id="43d15a08d31d62de7b68ddb2009b76398fc6fafd" translate="yes" xml:space="preserve">
          <source>LazyLoadHooks#run_load_hooks</source>
          <target state="translated">LazyLoadHooks#run_load_hooks</target>
        </trans-unit>
        <trans-unit id="f56145331f8573663f749e0585fba9bafdedf906" translate="yes" xml:space="preserve">
          <source>Leading colons would make the first segment absolute rather than relative: &lt;code&gt;::Billing::Invoice&lt;/code&gt;. That would force &lt;code&gt;Billing&lt;/code&gt; to be looked up only as a top-level constant.</source>
          <target state="translated">先頭のコロンは、最初のセグメントを相対ではなく絶対にします &lt;code&gt;::Billing::Invoice&lt;/code&gt; 。これにより、 &lt;code&gt;Billing&lt;/code&gt; はトップレベルの定数としてのみ検索されます。</target>
        </trans-unit>
        <trans-unit id="0205f20e6f02e7e5bf0f090188c3352d3378c901" translate="yes" xml:space="preserve">
          <source>Lean on the protect_from_forgery declaration to mark which actions are due for same-origin request verification. If protect_from_forgery is enabled on an action, this before_action flags its after_action to verify that JavaScript responses are for XHR requests, ensuring they follow the browser's same-origin policy.</source>
          <target state="translated">protect_from_forgery 宣言に依存して、同一リクエストの検証が必要なアクションをマークします。protect_from_forgery がアクションで有効になっている場合、この before_action はその after_action にフラグを立てて JavaScript レスポンスが XHR リクエストに対するものであることを検証し、ブラウザの同一オリジンポリシーに確実に従っていることを確認します。</target>
        </trans-unit>
        <trans-unit id="d80449c77af0b47c205fab1563e049bc44130805" translate="yes" xml:space="preserve">
          <source>Learn more about &lt;a href=&quot;security#custom-credentials&quot;&gt;managing credentials later in this guide&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;security#custom-credentials&quot;&gt;資格情報の管理の&lt;/a&gt;詳細については、このガイドで後ほど説明します</target>
        </trans-unit>
        <trans-unit id="1ad1bc4649e118e58e58b46a15a459da27fdfed7" translate="yes" xml:space="preserve">
          <source>Learn more about &lt;code&gt;redirect_to&lt;/code&gt; and what options you have in &lt;a href=&quot;redirecting&quot;&gt;&lt;code&gt;ActionController::Redirecting&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;redirect_to&lt;/code&gt; と、&lt;a href=&quot;redirecting&quot;&gt; &lt;code&gt;ActionController::Redirecting&lt;/code&gt; &lt;/a&gt;オプションの詳細をご覧ください。</target>
        </trans-unit>
        <trans-unit id="5120024867e2bd45c0226da8ee5ccca4d252aa19" translate="yes" xml:space="preserve">
          <source>Learn more about &lt;code&gt;redirect_to&lt;/code&gt; and what options you have in &lt;a href=&quot;redirecting&quot;&gt;ActionController::Redirecting&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;redirect_to&lt;/code&gt; の詳細と、&lt;a href=&quot;redirecting&quot;&gt;ActionController :: Redirectingにある&lt;/a&gt;オプションを確認してください。</target>
        </trans-unit>
        <trans-unit id="2680ad714bae01fb2a75924986c28aa6fbc21993" translate="yes" xml:space="preserve">
          <source>Learn more about CSRF attacks and securing your application in the &lt;a href=&quot;https://guides.rubyonrails.org/security.html&quot;&gt;Ruby on Rails Security Guide&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://guides.rubyonrails.org/security.html&quot;&gt;Ruby on Rails Security Guide&lt;/a&gt;で、CSRF攻撃とアプリケーションの保護について詳しく学んでください。</target>
        </trans-unit>
        <trans-unit id="d03a367fb887c4a017cd9d70d02779563c3dfabe" translate="yes" xml:space="preserve">
          <source>Learn more about Unobtrusive JavaScript on &lt;a href=&quot;working_with_javascript_in_rails&quot;&gt;Working With JavaScript in Rails&lt;/a&gt; guide.</source>
          <target state="translated">&lt;a href=&quot;working_with_javascript_in_rails&quot;&gt;RailsでのJavaScriptの&lt;/a&gt;使用に関する控えめなJavaScriptの詳細については、ガイドをご覧ください。</target>
        </trans-unit>
        <trans-unit id="3a20c5f3f21fbfde638b451c2ec404f619773284" translate="yes" xml:space="preserve">
          <source>Learn more about credentials with &lt;code&gt;bin/rails credentials:help&lt;/code&gt;.</source>
          <target state="translated">資格情報の詳細情報 &lt;code&gt;bin/rails credentials:help&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="49a7c9654d7d32bf1a7434e36ba31c8a9d52bd04" translate="yes" xml:space="preserve">
          <source>Learn more about credentials with &lt;code&gt;rails credentials:help&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rails credentials:help&lt;/code&gt; を使用して、資格情報の詳細を学んでください。</target>
        </trans-unit>
        <trans-unit id="6087ad887326b13b7e705f0f5b49332398028b13" translate="yes" xml:space="preserve">
          <source>Learn more about other session storages in &lt;a href=&quot;action_controller_overview#session&quot;&gt;Action Controller Overview Guide&lt;/a&gt;.</source>
          <target state="translated">その他のセッションストレージの詳細については、&lt;a href=&quot;action_controller_overview#session&quot;&gt;Action Controller概要ガイドを&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="a361189388c27c3316f9ffe0894462c23768bd0d" translate="yes" xml:space="preserve">
          <source>Learning Rack</source>
          <target state="translated">学習ラック</target>
        </trans-unit>
        <trans-unit id="4004c46012ce2e74f00d47a6df53669577458d0c" translate="yes" xml:space="preserve">
          <source>Leaving the hash off gives the wrong link:</source>
          <target state="translated">ハッシュを外したままにしておくと、間違ったリンクになってしまいます。</target>
        </trans-unit>
        <trans-unit id="57cabcc429f05e3d4a452b279c39df253df905c9" translate="yes" xml:space="preserve">
          <source>Legacy syntax</source>
          <target state="translated">レガシー構文</target>
        </trans-unit>
        <trans-unit id="fce9208985a0113f6dd633ee81af6e35d8918cff" translate="yes" xml:space="preserve">
          <source>Less File Lookups</source>
          <target state="translated">ファイルの参照回数を減らす</target>
        </trans-unit>
        <trans-unit id="21025e2c77d6b2c7631c77a921456691873eefc3" translate="yes" xml:space="preserve">
          <source>Let &lt;a href=&quot;proxyobject&quot;&gt;&lt;code&gt;ActiveSupport::ProxyObject&lt;/code&gt;&lt;/a&gt; at least raise exceptions.</source>
          <target state="translated">してみましょう&lt;a href=&quot;proxyobject&quot;&gt; &lt;code&gt;ActiveSupport::ProxyObject&lt;/code&gt; &lt;/a&gt;少なくとも昇給の例外で。</target>
        </trans-unit>
        <trans-unit id="78d8e5ae3e5b6af734ef6545182637310d10213b" translate="yes" xml:space="preserve">
          <source>Let &lt;a href=&quot;proxyobject&quot;&gt;ActiveSupport::ProxyObject&lt;/a&gt; at least raise exceptions.</source>
          <target state="translated">してみましょう&lt;a href=&quot;proxyobject&quot;&gt;activesupportの:: ProxyObjectは&lt;/a&gt;少なくとも昇給の例外で。</target>
        </trans-unit>
        <trans-unit id="a72602d5db80600fb59df54bed6dd5174594a0dd" translate="yes" xml:space="preserve">
          <source>Let us also move that new comment section out to its own partial. Again, you create a file &lt;code&gt;app/views/comments/_form.html.erb&lt;/code&gt; containing:</source>
          <target state="translated">また、新しいコメントセクションを独自の部分に移動します。ここでも、 &lt;code&gt;app/views/comments/_form.html.erb&lt;/code&gt; を含むファイルを作成します。</target>
        </trans-unit>
        <trans-unit id="96a0635a516af1771ae2eb32708ac151fe4aaaf8" translate="yes" xml:space="preserve">
          <source>Let us modify &lt;code&gt;test_should_create_article&lt;/code&gt; test in &lt;code&gt;articles_controller_test.rb&lt;/code&gt; so that all our test pass:</source>
          <target state="translated">すべてのテストがパスするように、 &lt;code&gt;articles_controller_test.rb&lt;/code&gt; の &lt;code&gt;test_should_create_article&lt;/code&gt; テストを変更してみましょう。</target>
        </trans-unit>
        <trans-unit id="dab4c465b3545675931666804e362f8235200f4c" translate="yes" xml:space="preserve">
          <source>Let us run this newly added test (where &lt;code&gt;6&lt;/code&gt; is the number of line where the test is defined).</source>
          <target state="translated">この新しく追加されたテストを実行してみましょう（ &lt;code&gt;6&lt;/code&gt; はテストが定義されている行の数です）。</target>
        </trans-unit>
        <trans-unit id="b9fcf90507f73f5eb8f58f17d19d3ae4f2f9910f" translate="yes" xml:space="preserve">
          <source>Let's add a method called &lt;code&gt;welcome_email&lt;/code&gt;, that will send an email to the user's registered email address:</source>
          <target state="translated">&lt;code&gt;welcome_email&lt;/code&gt; というメソッドを追加して、ユーザーの登録済みメールアドレスにメールを送信します。</target>
        </trans-unit>
        <trans-unit id="4ce5b9dbf4d8187abe529ddcf55601c38cf4ebe3" translate="yes" xml:space="preserve">
          <source>Let's add a private method to the bottom of &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt; named &lt;code&gt;article_params&lt;/code&gt; that filters &lt;code&gt;params&lt;/code&gt;. And let's change &lt;code&gt;create&lt;/code&gt; to use it:</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; をフィルタリングする &lt;code&gt;article_params&lt;/code&gt; という名前の &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt; /articles_controller.rbの下部にプライベートメソッドを追加しましょう。そして、それを使用するように &lt;code&gt;create&lt;/code&gt; を変更しましょう。</target>
        </trans-unit>
        <trans-unit id="5269d07ce7dd2783f1dedc68e2d3fa0b3123b91c" translate="yes" xml:space="preserve">
          <source>Let's add a replica for the first configuration, and a second database called animals and a replica for that as well. To do this we need to change our &lt;code&gt;database.yml&lt;/code&gt; from a 2-tier to a 3-tier config.</source>
          <target state="translated">最初の構成のレプリカと、animalsという2番目のデータベースとそのレプリカを追加しましょう。これを行うには、 &lt;code&gt;database.yml&lt;/code&gt; を2層から3層の構成に変更する必要があります。</target>
        </trans-unit>
        <trans-unit id="79e1f74aa6ec7b5a5077c8b42b57bd04f8515dc5" translate="yes" xml:space="preserve">
          <source>Let's add a replica for the primary, a new writer called animals and a replica for that as well. To do this we need to change our &lt;code&gt;database.yml&lt;/code&gt; from a 2-tier to a 3-tier config.</source>
          <target state="translated">プライマリのレプリカ、animalsという新しいライター、およびそのレプリカも追加しましょう。これを行うには、 &lt;code&gt;database.yml&lt;/code&gt; を2層構成から3層構成に変更する必要があります。</target>
        </trans-unit>
        <trans-unit id="b48e65eb47d949d7844ff9e16bf80abf6b052f5f" translate="yes" xml:space="preserve">
          <source>Let's add an integration test to our blog application. We'll start with a basic workflow of creating a new blog article, to verify that everything is working properly.</source>
          <target state="translated">ブログアプリに統合テストを追加してみましょう。新しいブログ記事を作成する基本的なワークフローから始めて、すべてが正しく動作しているかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="6e3f79475457cf9a5f2a016839cf6a8e669854a2" translate="yes" xml:space="preserve">
          <source>Let's add links to the other views as well, starting with adding this &quot;New Article&quot; link to &lt;code&gt;app/views/articles/index.html.erb&lt;/code&gt;, placing it above the &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; tag:</source>
          <target state="translated">他のビューへのリンクも追加してみましょう。まず、この「新しい記事」リンクを &lt;code&gt;app/views/articles/index.html.erb&lt;/code&gt; に追加し、 &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; タグの上に配置します。</target>
        </trans-unit>
        <trans-unit id="f3740501fd9d5dc2e11e1031b17a964d35358f21" translate="yes" xml:space="preserve">
          <source>Let's add some validations to our model in &lt;code&gt;app/models/article.rb&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;app/models/article.rb&lt;/code&gt; モデルにいくつかの検証を追加しましょう：</target>
        </trans-unit>
        <trans-unit id="49d80491e9eb79684958a135d6d1dcac3770b0de" translate="yes" xml:space="preserve">
          <source>Let's add that &lt;code&gt;show&lt;/code&gt; action now, below the &lt;code&gt;index&lt;/code&gt; action in &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt; の &lt;code&gt;index&lt;/code&gt; アクションの下に、その &lt;code&gt;show&lt;/code&gt; アクションを追加しましょう。</target>
        </trans-unit>
        <trans-unit id="dc3ecee55d65665c35f62547c455cc419b0dc82d" translate="yes" xml:space="preserve">
          <source>Let's also make a text part for this email. Not all clients prefer HTML emails, and so sending both is best practice. To do this, create a file called &lt;code&gt;welcome_email.text.erb&lt;/code&gt; in &lt;code&gt;app/views/user_mailer/&lt;/code&gt;:</source>
          <target state="translated">このメールのテキスト部分も作成しましょう。すべてのクライアントがHTMLメールを好むわけではないため、両方を送信することがベストプラクティスです。これを行うには、と呼ばれるファイルを作成 &lt;code&gt;welcome_email.text.erb&lt;/code&gt; をに &lt;code&gt;app/views/user_mailer/&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="6dfb10465abe14397694d1ef3fbb975786f3e93d" translate="yes" xml:space="preserve">
          <source>Let's analyze an example to really understand what that means. While common abuses of language like &quot;the &lt;code&gt;String&lt;/code&gt; class&quot; are convenient, the exposition is going to be precise here for didactic purposes.</source>
          <target state="translated">例を分析して、それが何を意味するかを本当に理解しましょう。「 &lt;code&gt;String&lt;/code&gt; クラス」のような一般的な言語の乱用は便利ですが、ここでは説明のために説明を正確に説明します。</target>
        </trans-unit>
        <trans-unit id="f4ce79534391e97d4f4aa9c82cc741ad12c8def6" translate="yes" xml:space="preserve">
          <source>Let's assume we want to deploy our application to &quot;/app1&quot;. Rails needs to know this directory to generate the appropriate routes:</source>
          <target state="translated">アプリケーションを「/app1」にデプロイしたいとしましょう。Railsは適切なルートを生成するためにこのディレクトリを知る必要があります。</target>
        </trans-unit>
        <trans-unit id="64e9c368d11a718bfea479dfb073f5601b509e2c" translate="yes" xml:space="preserve">
          <source>Let's begin exploring these features by adding more functionality to our application.</source>
          <target state="translated">私たちのアプリケーションにさらに機能を追加して、これらの機能の探索を始めましょう。</target>
        </trans-unit>
        <trans-unit id="71b6809eee4e5ad984a6e18c3317f2e1911b1c3f" translate="yes" xml:space="preserve">
          <source>Let's break out some more monkeys and pirates.</source>
          <target state="translated">猿と海賊をもっと出してみよう。</target>
        </trans-unit>
        <trans-unit id="0175bd3560f981f045ac3204ff11ccf5cd1e0c8f" translate="yes" xml:space="preserve">
          <source>Let's break this test down so we can understand it.</source>
          <target state="translated">このテストを理解できるように分解してみましょう。</target>
        </trans-unit>
        <trans-unit id="d411cec433d62e9e5131196fc3d8ca677b9020c5" translate="yes" xml:space="preserve">
          <source>Let's consider</source>
          <target state="translated">考えてみましょう</target>
        </trans-unit>
        <trans-unit id="6a2b72ee8dfb84cee80a7035dfdbf117386402d2" translate="yes" xml:space="preserve">
          <source>Let's consider a flight simulator. The application has a default flight model</source>
          <target state="translated">フライトシミュレータを考えてみましょう。このアプリケーションにはデフォルトのフライトモデルがあります。</target>
        </trans-unit>
        <trans-unit id="c00ee8b2221f13d18a00305aa785cc9bb52f8574" translate="yes" xml:space="preserve">
          <source>Let's consider the following module definition:</source>
          <target state="translated">以下のモジュール定義を考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="b1a2e958859b8c7457503e9efcd9e0b3492d8f4e" translate="yes" xml:space="preserve">
          <source>Let's consider this initializer:</source>
          <target state="translated">このイニシャライザを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="83f57047aad3e797bd0c389f4e130b37320697a9" translate="yes" xml:space="preserve">
          <source>Let's consider:</source>
          <target state="translated">検討してみましょう。</target>
        </trans-unit>
        <trans-unit id="275f8e627215fb48538855450669e0f7b295d120" translate="yes" xml:space="preserve">
          <source>Let's create &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt; with the following contents:</source>
          <target state="translated">次の内容で &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt; を作成しましょう。</target>
        </trans-unit>
        <trans-unit id="c5c35b56547b5b8a93aff7507c46bb9eacc09cc2" translate="yes" xml:space="preserve">
          <source>Let's create &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt;, with the following contents:</source>
          <target state="translated">次の内容で &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; 作成しましょう。</target>
        </trans-unit>
        <trans-unit id="c26c7d6fe559c363e03a6bd3159ae8ce188a0ff1" translate="yes" xml:space="preserve">
          <source>Let's create a simple Rails application to step through each of these commands in context.</source>
          <target state="translated">シンプルなRailsアプリケーションを作成して、それぞれのコマンドをコンテキストで順を追って説明してみましょう。</target>
        </trans-unit>
        <trans-unit id="f6988e18c816b90155d8f9087dd4ede9ba5d8e76" translate="yes" xml:space="preserve">
          <source>Let's go back to our controller in &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt;, and change the &lt;code&gt;index&lt;/code&gt; action to fetch all articles from the database:</source>
          <target state="translated">&lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt; のコントローラーに戻り、データベースからすべての記事をフェッチするように &lt;code&gt;index&lt;/code&gt; アクションを変更しましょう。</target>
        </trans-unit>
        <trans-unit id="b1fa58a55971fd9e23ddeee23e8c1d0c89153587" translate="yes" xml:space="preserve">
          <source>Let's imagine that users in some application have login information in the &lt;code&gt;User&lt;/code&gt; model but name and other data in a separate &lt;code&gt;Profile&lt;/code&gt; model:</source>
          <target state="translated">一部のアプリケーションのユーザーが、ログイン情報は &lt;code&gt;User&lt;/code&gt; モデルにあり、名前とその他のデータは別の &lt;code&gt;Profile&lt;/code&gt; モデルにあると想像してください。</target>
        </trans-unit>
        <trans-unit id="21a5e444a84811bf545d3f94d479c8b239f38e28" translate="yes" xml:space="preserve">
          <source>Let's implement the flash message now in our controller. Our &lt;code&gt;:create&lt;/code&gt; action should now look like this:</source>
          <target state="translated">コントローラーにflashメッセージを実装しましょう。当社 &lt;code&gt;:create&lt;/code&gt; アクションは次のようになります。</target>
        </trans-unit>
        <trans-unit id="b51c46ffa72a597d58c3017405a3b8080b7928f4" translate="yes" xml:space="preserve">
          <source>Let's introduce now a subclass of &lt;code&gt;Rectangle&lt;/code&gt;:</source>
          <target state="translated">ここで、 &lt;code&gt;Rectangle&lt;/code&gt; のサブクラスを紹介しましょう。</target>
        </trans-unit>
        <trans-unit id="a5f04bf3b6464abe4ee0ae36590dbb17b2f0d292" translate="yes" xml:space="preserve">
          <source>Let's launch the console with this command:</source>
          <target state="translated">このコマンドでコンソールを起動してみましょう。</target>
        </trans-unit>
        <trans-unit id="559ba613fcdfc3a29ca8db3b5ac8cb93ef9c41f8" translate="yes" xml:space="preserve">
          <source>Let's look at that entry/message/comment example using delegated types:</source>
          <target state="translated">委任型を使ったエントリ/メッセージ/コメントの例を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="cd40f9d2fe4074d731d624f45d324731e74d0541" translate="yes" xml:space="preserve">
          <source>Let's look at the code below:</source>
          <target state="translated">下のコードを見てみましょう。</target>
        </trans-unit>
        <trans-unit id="7588d79a31b685899386a77630023f4aad3bc947" translate="yes" xml:space="preserve">
          <source>Let's look at the full error message again:</source>
          <target state="translated">もう一度、エラーメッセージの全文を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="db255fe389309039f7483e2c79350e7b43e7b7d4" translate="yes" xml:space="preserve">
          <source>Let's make our own controller with the controller generator. But what command should we use? Let's ask the generator:</source>
          <target state="translated">コントローラジェネレータを使って自作コントローラを作ってみましょう。しかし、どのようなコマンドを使えばいいのでしょうか?ジェネレーターに聞いてみましょう。</target>
        </trans-unit>
        <trans-unit id="f10ea4f39f4b33b53a25bba08b9359f1fcad5b86" translate="yes" xml:space="preserve">
          <source>Let's make the HABTM fixture go away.</source>
          <target state="translated">HABTMのフィクスチャーを消してしまおう。</target>
        </trans-unit>
        <trans-unit id="f6c736865f2b69edc0a585f4712fc27790bfde32" translate="yes" xml:space="preserve">
          <source>Let's open &lt;code&gt;app/views/articles/index.html.erb&lt;/code&gt;, and replace its contents with:</source>
          <target state="translated">&lt;code&gt;app/views/articles/index.html.erb&lt;/code&gt; を開いて、その内容を次のように置き換えましょう。</target>
        </trans-unit>
        <trans-unit id="03c41edf8d63eb5f66d09a27b4b72a81e8237307" translate="yes" xml:space="preserve">
          <source>Let's open &lt;code&gt;config/routes.rb&lt;/code&gt;, and add the following &lt;code&gt;root&lt;/code&gt; route to the top of the &lt;code&gt;Rails.application.routes.draw&lt;/code&gt; block:</source>
          <target state="translated">&lt;code&gt;config/routes.rb&lt;/code&gt; 開き、次の &lt;code&gt;root&lt;/code&gt; ルートを &lt;code&gt;Rails.application.routes.draw&lt;/code&gt; ブロックの先頭に追加しましょう。</target>
        </trans-unit>
        <trans-unit id="12cc34bba418576d5afbcf4876a26da69dfbbc5d" translate="yes" xml:space="preserve">
          <source>Let's run our migration with the following command:</source>
          <target state="translated">以下のコマンドでマイグレーションを実行してみましょう。</target>
        </trans-unit>
        <trans-unit id="af3c0983643d82f65dfb7da47772af56e8bae72d" translate="yes" xml:space="preserve">
          <source>Let's say the &lt;code&gt;users&lt;/code&gt; table has &lt;code&gt;id&lt;/code&gt; as the primary_key but it also has a &lt;code&gt;guid&lt;/code&gt; column. The requirement is that the &lt;code&gt;todos&lt;/code&gt; table should hold the &lt;code&gt;guid&lt;/code&gt; column value as the foreign key and not &lt;code&gt;id&lt;/code&gt; value. This can be achieved like this:</source>
          <target state="translated">さんが言ってみましょう &lt;code&gt;users&lt;/code&gt; テーブルが持つ &lt;code&gt;id&lt;/code&gt; PRIMARY_KEYとしてではなく、それはまた持っている &lt;code&gt;guid&lt;/code&gt; 列を。要件は、 &lt;code&gt;todos&lt;/code&gt; テーブルが &lt;code&gt;id&lt;/code&gt; 値ではなく、 &lt;code&gt;guid&lt;/code&gt; 列の値を外部キーとして保持することです。これは次のようにして実現できます。</target>
        </trans-unit>
        <trans-unit id="8aaa8fd90fd44344aa5ea74de6918d0b560e4441" translate="yes" xml:space="preserve">
          <source>Let's say we have an application with a single primary database and we need to add a new database for some new tables we're adding. The name of the new database will be &quot;animals&quot;.</source>
          <target state="translated">1つのプライマリデータベースを持つアプリケーションを持っていて、新しいテーブルを追加するために新しいデータベースを追加する必要があるとしましょう。新しいデータベースの名前は「動物」とします。</target>
        </trans-unit>
        <trans-unit id="bd81cf4522c612f7be3acc9b2e606c7cff8434c1" translate="yes" xml:space="preserve">
          <source>Let's say we have an application with a single writer database and we need to add a new database for some new tables we're adding. The name of the new database will be &quot;animals&quot;.</source>
          <target state="translated">1つのライターデータベースを持つアプリケーションを持っていて、新しいテーブルを追加するために新しいデータベースを追加する必要があるとしましょう。新しいデータベースの名前は「動物」とします。</target>
        </trans-unit>
        <trans-unit id="c507f5be5e78ef25fd1568f5682ddaeb10c8c2e4" translate="yes" xml:space="preserve">
          <source>Let's say we want to render a form with a set of fields for each of a person's addresses. The &lt;code&gt;fields_for&lt;/code&gt; helper and its &lt;code&gt;:index&lt;/code&gt; argument can assist with this:</source>
          <target state="translated">個人の住所ごとに一連のフィールドを含むフォームをレンダリングするとします。 &lt;code&gt;fields_for&lt;/code&gt; ヘルパーとその &lt;code&gt;:index&lt;/code&gt; 引数は、これを支援することができます。</target>
        </trans-unit>
        <trans-unit id="e62d2d4961a0889a900d5b7d7deb016aa106cbd4" translate="yes" xml:space="preserve">
          <source>Let's say we're displaying an article on a page which should be wrapped in a &lt;code&gt;div&lt;/code&gt; for display purposes. Firstly, we'll create a new &lt;code&gt;Article&lt;/code&gt;:</source>
          <target state="translated">表示のために &lt;code&gt;div&lt;/code&gt; でラップする必要があるページに記事を表示しているとしましょう。まず、新しい &lt;code&gt;Article&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="8579674d7daf7815627e340f71121460d49e4cb2" translate="yes" xml:space="preserve">
          <source>Let's say we're in the &lt;code&gt;http://www.example.com/products&lt;/code&gt; action with method POST in case of invalid product.</source>
          <target state="translated">製品が無効な場合に、メソッドPOSTを使用して &lt;code&gt;http://www.example.com/products&lt;/code&gt; アクションにいるとします。</target>
        </trans-unit>
        <trans-unit id="8aec0ccffe5b428a6cb21a91e46b9704b1b5f7fb" translate="yes" xml:space="preserve">
          <source>Let's say we're in the &lt;code&gt;http://www.example.com/shop/checkout?order=desc&amp;amp;page=1&lt;/code&gt; action.</source>
          <target state="translated">&lt;code&gt;http://www.example.com/shop/checkout?order=desc&amp;amp;page=1&lt;/code&gt; アクションにいるとします。</target>
        </trans-unit>
        <trans-unit id="f3e0d2a71301db441896e1ffdd4d512f4c884fe7" translate="yes" xml:space="preserve">
          <source>Let's say you have a &lt;em&gt;BooksController&lt;/em&gt; in your application. Your &lt;em&gt;index&lt;/em&gt; action renders content in &lt;code&gt;app/views/books/index.html.erb&lt;/code&gt; template. When you put a &lt;em&gt;localized variant&lt;/em&gt; of this template: &lt;code&gt;index.es.html.erb&lt;/code&gt; in the same directory, Rails will render content in this template, when the locale is set to &lt;code&gt;:es&lt;/code&gt;. When the locale is set to the default locale, the generic &lt;code&gt;index.html.erb&lt;/code&gt; view will be used. (Future Rails versions may well bring this &lt;em&gt;automagic&lt;/em&gt; localization to assets in &lt;code&gt;public&lt;/code&gt;, etc.)</source>
          <target state="translated">あなたが持っていると言う&lt;em&gt;BooksControllerを&lt;/em&gt;アプリケーションに。あなたの&lt;em&gt;インデックス&lt;/em&gt;アクションは、コンテンツレンダリング &lt;code&gt;app/views/books/index.html.erb&lt;/code&gt; テンプレートを。あなたが置くとき&lt;em&gt;ローカライズバリアント&lt;/em&gt;このテンプレートの： &lt;code&gt;index.es.html.erb&lt;/code&gt; を同じディレクトリに、Railsは、ロケールに設定されている場合、このテンプレートでコンテンツをレンダリングする &lt;code&gt;:es&lt;/code&gt; 。ロケールがデフォルトのロケールに設定されている場合、汎用の &lt;code&gt;index.html.erb&lt;/code&gt; ビューが使用されます。（将来のRailsバージョンでは、この&lt;em&gt;automagicの&lt;/em&gt;ローカリゼーションを &lt;code&gt;public&lt;/code&gt; アセットなどにもたらす可能性があります。）</target>
        </trans-unit>
        <trans-unit id="46e0bd3737a3ceb5c11cdc9352d2399ab7de05d4" translate="yes" xml:space="preserve">
          <source>Let's say you have a navigation menu&amp;hellip;</source>
          <target state="translated">ナビゲーションメニューがあるとしましょう&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="177e78ab7407be2c090f5ae68f3c072dc96edece" translate="yes" xml:space="preserve">
          <source>Let's say you like using &lt;code&gt;Object#not_nil?&lt;/code&gt; and &lt;code&gt;Object#not_blank?&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Object#not_nil?&lt;/code&gt; 使用が好きだとしましょう。および &lt;code&gt;Object#not_blank?&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c9cd3934a0abc016ddefcdb09c99e8dd9ccffe99" translate="yes" xml:space="preserve">
          <source>Let's see for example the definition of the &lt;code&gt;caches_action&lt;/code&gt; controller macro:</source>
          <target state="translated">たとえば、 &lt;code&gt;caches_action&lt;/code&gt; コントローラマクロの定義を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="dda5f06059ddbf981e8fa7bfde1dfc2d0115a597" translate="yes" xml:space="preserve">
          <source>Let's see how Rails autoloads the &lt;code&gt;Post&lt;/code&gt; constant in the &lt;code&gt;PostsController&lt;/code&gt; above assuming the application has a &lt;code&gt;Post&lt;/code&gt; model defined in &lt;code&gt;app/models/post.rb&lt;/code&gt;.</source>
          <target state="translated">アプリケーションに &lt;code&gt;app/models/post.rb&lt;/code&gt; で定義された &lt;code&gt;Post&lt;/code&gt; モデルがあると仮定して、上記の &lt;code&gt;PostsController&lt;/code&gt; でRailsが &lt;code&gt;Post&lt;/code&gt; 定数を自動ロードする方法を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="9ba493509a4d442db810ba55cc1cd484277e3bf9" translate="yes" xml:space="preserve">
          <source>Let's see other situations that involve stale class or module objects.</source>
          <target state="translated">スタールクラスやモジュールオブジェクトを含む他の状況を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="1212c891c1276d0d0922365aee5189e87122dcb9" translate="yes" xml:space="preserve">
          <source>Let's see the interface Rails created for us.</source>
          <target state="translated">Railsが作ってくれたインターフェースを見てみましょう。</target>
        </trans-unit>
        <trans-unit id="7c9f75a14a6a8fa84a573b0eb3a6e227e9516c06" translate="yes" xml:space="preserve">
          <source>Let's see what a &lt;code&gt;--git&lt;/code&gt; option and a &lt;code&gt;--database=postgresql&lt;/code&gt; option will do for us:</source>
          <target state="translated">&lt;code&gt;--git&lt;/code&gt; オプションと &lt;code&gt;--database=postgresql&lt;/code&gt; オプションが何をするのか見てみましょう：</target>
        </trans-unit>
        <trans-unit id="fc7d11799d172423de5d1b9f3034efdcb44fe82b" translate="yes" xml:space="preserve">
          <source>Let's start by adding a route to our routes file, &lt;code&gt;config/routes.rb&lt;/code&gt;, at the top of the &lt;code&gt;Rails.application.routes.draw&lt;/code&gt; block:</source>
          <target state="translated">&lt;code&gt;Rails.application.routes.draw&lt;/code&gt; ブロックの上部にあるroutesファイル &lt;code&gt;config/routes.rb&lt;/code&gt; にルートを追加することから始めましょう。</target>
        </trans-unit>
        <trans-unit id="2463f5acabbb86e1902e7e40a13ca91e4485de9b" translate="yes" xml:space="preserve">
          <source>Let's start by adding this assertion to our &lt;code&gt;test_should_create_article&lt;/code&gt; test:</source>
          <target state="translated">まず、このアサーションを &lt;code&gt;test_should_create_article&lt;/code&gt; テストに追加します。</target>
        </trans-unit>
        <trans-unit id="7dd25355c3943d701e459ca69a67dd4b4635c625" translate="yes" xml:space="preserve">
          <source>Let's start to boot and initialize the app. A Rails application is usually started by running &lt;code&gt;bin/rails console&lt;/code&gt; or &lt;code&gt;bin/rails server&lt;/code&gt;.</source>
          <target state="translated">アプリの起動と初期化を始めましょう。Railsアプリケーションは通常、 &lt;code&gt;bin/rails console&lt;/code&gt; または &lt;code&gt;bin/rails server&lt;/code&gt; 実行することによって開始されます。</target>
        </trans-unit>
        <trans-unit id="679242afe97967bee95cf933ac25ed6b6adeee4c" translate="yes" xml:space="preserve">
          <source>Let's start to boot and initialize the app. A Rails application is usually started by running &lt;code&gt;rails console&lt;/code&gt; or &lt;code&gt;rails server&lt;/code&gt;.</source>
          <target state="translated">アプリの起動と初期化を始めましょう。Railsアプリケーションは通常、 &lt;code&gt;rails console&lt;/code&gt; または &lt;code&gt;rails server&lt;/code&gt; を実行することによって開始されます。</target>
        </trans-unit>
        <trans-unit id="26bbb36043b4b51caaf53b4eb429bbb3cd71c66a" translate="yes" xml:space="preserve">
          <source>Let's suppose that you were making a Karaoke machine and a user wants to get the lyrics for a particular song. Each &lt;code&gt;Song&lt;/code&gt; has a particular number of lines and each line takes time &lt;code&gt;num_beats&lt;/code&gt; to finish singing.</source>
          <target state="translated">あなたがカラオケマシンを作成していて、ユーザーが特定の曲の歌詞を取得したいとします。各 &lt;code&gt;Song&lt;/code&gt; には特定の行数があり、各行が歌うのを終了するまでに &lt;code&gt;num_beats&lt;/code&gt; 時間かかります。</target>
        </trans-unit>
        <trans-unit id="b39773d51d4340138e114edc90a5ea57419ae99d" translate="yes" xml:space="preserve">
          <source>Let's suppose the following snippet creates a class (rather than reopening it):</source>
          <target state="translated">以下のスニペットがクラスを作成したとしましょう(開き直るのではなく)。</target>
        </trans-unit>
        <trans-unit id="57e26fc7533f565888b3ecfca314d023ce8533a2" translate="yes" xml:space="preserve">
          <source>Let's suppose we have these class definitions:</source>
          <target state="translated">このようなクラス定義があったとしましょう。</target>
        </trans-unit>
        <trans-unit id="a4090c16fa4ca8c22ac98f2731e3303c82f681b4" translate="yes" xml:space="preserve">
          <source>Let's suppose you are creating a generator that needs to invoke the controller generator from test unit. Your first attempt is:</source>
          <target state="translated">テストユニットからコントローラジェネレータを呼び出す必要があるジェネレータを作成しているとしましょう。最初の試みは</target>
        </trans-unit>
        <trans-unit id="b8d8dd280572f4245c2f9798e4cf4307d53e5d5a" translate="yes" xml:space="preserve">
          <source>Let's take a look at one such test, &lt;code&gt;test_should_get_index&lt;/code&gt; from the file &lt;code&gt;articles_controller_test.rb&lt;/code&gt;.</source>
          <target state="translated">のは、1つのそのようなテスト、を見てみましょう &lt;code&gt;test_should_get_index&lt;/code&gt; ファイルから &lt;code&gt;articles_controller_test.rb&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="fb7b003a2624199393e36191ea09f4b342435f64" translate="yes" xml:space="preserve">
          <source>Let's take a look at some of the things that Rails provides out of the box that are still applicable to API applications.</source>
          <target state="translated">Railsが提供しているもののうち、今でもAPIアプリケーションに適用可能なものをいくつか見てみましょう。</target>
        </trans-unit>
        <trans-unit id="54cb16d6149c7c86f795cf72402bada64d93b4dc" translate="yes" xml:space="preserve">
          <source>Let's take a look at the contents of our new migration file:</source>
          <target state="translated">新しいマイグレーションファイルの内容を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="563872689b7d13f35f84ce3e7c9d9cb69f5f4742" translate="yes" xml:space="preserve">
          <source>Let's take a look at what Rails does by default when creating a new resource using the scaffold generator:</source>
          <target state="translated">ここでは、scaffoldジェネレータを使って新しいリソースを作成する際に、Railsがデフォルトで何をしているかを見てみましょう。</target>
        </trans-unit>
        <trans-unit id="2b61280695474ba2f4d47ae92ae0ee897d8bc51b" translate="yes" xml:space="preserve">
          <source>Let's take for example this non-persisted object.</source>
          <target state="translated">例えば、この非パーステッドオブジェクトを例に挙げてみましょう。</target>
        </trans-unit>
        <trans-unit id="97b75242b93becb500d73edfceaaad470ab7fc77" translate="yes" xml:space="preserve">
          <source>Let's talk about unit tests. Unit tests are code that tests and makes assertions about code. In unit testing, we take a little part of code, say a method of a model, and test its inputs and outputs. Unit tests are your friend. The sooner you make peace with the fact that your quality of life will drastically increase when you unit test your code, the better. Seriously. Please visit &lt;a href=&quot;https://guides.rubyonrails.org/testing.html&quot;&gt;the testing guide&lt;/a&gt; for an in-depth look at unit testing.</source>
          <target state="translated">単体テストについて話しましょう。単体テストは、コードをテストしてアサーションを行うコードです。ユニットテストでは、コードの一部（モデルのメソッドなど）を使用して、その入力と出力をテストします。ユニットテストはあなたの友達です。コードの単体テストを行うと、生活の質が劇的に向上するという事実を理解して早ければ早いほど、良い結果が得られます。真剣に。ユニットテストの詳細については&lt;a href=&quot;https://guides.rubyonrails.org/testing.html&quot;&gt;、テストガイド&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="92e8aa44e8687f3418392049e0642466f90f0ccb" translate="yes" xml:space="preserve">
          <source>Let's update &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt; to use the partial via &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/RenderingHelper.html#method-i-render&quot;&gt;&lt;code&gt;render&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">レッツ・アップデート・ &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt; を経由して、部分的に使用するための&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/RenderingHelper.html#method-i-render&quot;&gt; &lt;code&gt;render&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="fd189d590d8b1b050d1f34adacad7d94c39e61b0" translate="yes" xml:space="preserve">
          <source>Let's use the act of logging out as an example. The controller can send a message which will be displayed to the user on the next request:</source>
          <target state="translated">ログアウトという行為を例にしてみましょう。コントローラは、次のリクエスト時にユーザーに表示されるメッセージを送信することができます。</target>
        </trans-unit>
        <trans-unit id="1a7302ab1c8547352066ed26da2374047cdadc44" translate="yes" xml:space="preserve">
          <source>Let's wire up the &lt;code&gt;create&lt;/code&gt; in &lt;code&gt;app/controllers/comments_controller.rb&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;app/controllers/comments_controller.rb&lt;/code&gt; の &lt;code&gt;create&lt;/code&gt; を接続しましょう：</target>
        </trans-unit>
        <trans-unit id="992a5765c7ceef439caa841de820744520c02dab" translate="yes" xml:space="preserve">
          <source>Let's write a test for the &lt;code&gt;:show&lt;/code&gt; action:</source>
          <target state="translated">&lt;code&gt;:show&lt;/code&gt; アクションのテストを書いてみましょう：</target>
        </trans-unit>
        <trans-unit id="87f073daffb250fdd9420bb580aebdaf208071cd" translate="yes" xml:space="preserve">
          <source>Lets you find a record based on a signed id that's safe to put into the world without risk of tampering. This is particularly useful for things like password reset or email verification, where you want the bearer of the signed id to be able to interact with the underlying record, but usually only within a certain time period.</source>
          <target state="translated">署名されたIDに基づいて、改ざんのリスクなしに安全なレコードを見つけることができます。これは、パスワードリセットやメール認証のように、署名されたIDのベアラが基礎となるレコードと対話できるようにしたい場合に特に便利ですが、通常は特定の期間内にのみ有効です。</target>
        </trans-unit>
        <trans-unit id="6388e2763a8787438175ea44759b7a341170f551" translate="yes" xml:space="preserve">
          <source>Lets you selectively disable calls to &lt;code&gt;touch&lt;/code&gt; for the duration of a block.</source>
          <target state="translated">ブロックの期間中、 &lt;code&gt;touch&lt;/code&gt; する呼び出しを選択的に無効にできます。</target>
        </trans-unit>
        <trans-unit id="8acbdbc31bdc854cb88cd725315b1b68aca7a0e7" translate="yes" xml:space="preserve">
          <source>Licensed under the Creative Commons Attribution-ShareAlike 4.0 International License.</source>
          <target state="translated">クリエイティブ・コモンズ 表示-継承 4.0 国際ライセンスの下でライセンスされています。</target>
        </trans-unit>
        <trans-unit id="58fd3b1b83cc7fc933d72fe934bdb6e534441281" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT License.</source>
          <target state="translated">MITライセンスに基づいてライセンスされています。</target>
        </trans-unit>
        <trans-unit id="32e831ee28a53c1c45723507c4a82ba362ea3fda" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;collectionproxy#method-i-create&quot;&gt;&lt;code&gt;create&lt;/code&gt;&lt;/a&gt;, except that if the record is invalid, raises an exception.</source>
          <target state="translated">&lt;a href=&quot;collectionproxy#method-i-create&quot;&gt; &lt;code&gt;create&lt;/code&gt; &lt;/a&gt;と同様ですが、レコードが無効な場合は例外が発生します。</target>
        </trans-unit>
        <trans-unit id="90c56b68f39e7603a156bfa82a13c020a53c399d" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;collectionproxy#method-i-create&quot;&gt;create&lt;/a&gt;, except that if the record is invalid, raises an exception.</source>
          <target state="translated">&lt;a href=&quot;collectionproxy#method-i-create&quot;&gt;create&lt;/a&gt;と同様ですが、レコードが無効な場合は例外が発生します。</target>
        </trans-unit>
        <trans-unit id="e5e27ba900b5fb80f69ace324b1132ba4d11debd" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;findermethods#method-i-find_by&quot;&gt;&lt;code&gt;find_by&lt;/code&gt;&lt;/a&gt;, except that if no record is found, raises an &lt;a href=&quot;recordnotfound&quot;&gt;&lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt;&lt;/a&gt; error.</source>
          <target state="translated">&lt;a href=&quot;findermethods#method-i-find_by&quot;&gt; &lt;code&gt;find_by&lt;/code&gt; &lt;/a&gt;と同様ですが、レコードが見つからない場合、&lt;a href=&quot;recordnotfound&quot;&gt; &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; &lt;/a&gt;エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="f82455ed657d40dfabb8a5dd6261584322dd09d7" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;findermethods#method-i-find_by&quot;&gt;find_by&lt;/a&gt;, except that if no record is found, raises an &lt;a href=&quot;recordnotfound&quot;&gt;ActiveRecord::RecordNotFound&lt;/a&gt; error.</source>
          <target state="translated">&lt;a href=&quot;findermethods#method-i-find_by&quot;&gt;find_by&lt;/a&gt;と同様ですが、レコードが見つからない場合は、&lt;a href=&quot;recordnotfound&quot;&gt;ActiveRecord :: RecordNotFound&lt;/a&gt;エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="d9b86ca0bc1a7db98401d8b8dff3fcec3da819a7" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;relation#method-i-create_or_find_by&quot;&gt;&lt;code&gt;create_or_find_by&lt;/code&gt;&lt;/a&gt;, but calls &lt;a href=&quot;persistence/classmethods#method-i-create-21&quot;&gt;create!&lt;/a&gt; so an exception is raised if the created record is invalid.</source>
          <target state="translated">&lt;a href=&quot;relation#method-i-create_or_find_by&quot;&gt; &lt;code&gt;create_or_find_by&lt;/code&gt; &lt;/a&gt;と同様ですが、&lt;a href=&quot;persistence/classmethods#method-i-create-21&quot;&gt;createを&lt;/a&gt;呼び出します。したがって、作成されたレコードが無効な場合は例外が発生します。</target>
        </trans-unit>
        <trans-unit id="1a36c87f81f627d65cc615f8ae7a9afdbe70794c" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;relation#method-i-create_or_find_by&quot;&gt;create_or_find_by&lt;/a&gt;, but calls &lt;a href=&quot;persistence/classmethods#method-i-create-21&quot;&gt;create!&lt;/a&gt; so an exception is raised if the created record is invalid.</source>
          <target state="translated">同様&lt;a href=&quot;relation#method-i-create_or_find_by&quot;&gt;create_or_find_by&lt;/a&gt;が、呼び出しが&lt;a href=&quot;persistence/classmethods#method-i-create-21&quot;&gt;作成します！&lt;/a&gt;そのため、作成されたレコードが無効な場合、例外が発生します。</target>
        </trans-unit>
        <trans-unit id="5ce3efea0686417adc5b92aeb46eb41818eec203" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;relation#method-i-find_or_create_by&quot;&gt;&lt;code&gt;find_or_create_by&lt;/code&gt;&lt;/a&gt;, but calls &lt;a href=&quot;persistence/classmethods#method-i-create-21&quot;&gt;create!&lt;/a&gt; so an exception is raised if the created record is invalid.</source>
          <target state="translated">&lt;a href=&quot;relation#method-i-find_or_create_by&quot;&gt; &lt;code&gt;find_or_create_by&lt;/code&gt; &lt;/a&gt;と同様ですが、&lt;a href=&quot;persistence/classmethods#method-i-create-21&quot;&gt;createを&lt;/a&gt;呼び出します。したがって、作成されたレコードが無効な場合は例外が発生します。</target>
        </trans-unit>
        <trans-unit id="813158c643b69edd68c1fa60c2e540a0b6a2d978" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;relation#method-i-find_or_create_by&quot;&gt;&lt;code&gt;find_or_create_by&lt;/code&gt;&lt;/a&gt;, but calls new instead of &lt;a href=&quot;persistence/classmethods#method-i-create&quot;&gt;create&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;relation#method-i-find_or_create_by&quot;&gt; &lt;code&gt;find_or_create_by&lt;/code&gt; &lt;/a&gt;と同様ですが、&lt;a href=&quot;persistence/classmethods#method-i-create&quot;&gt;create&lt;/a&gt;ではなくnewを呼び出します。</target>
        </trans-unit>
        <trans-unit id="838678c204cb7edc7ae37ac099a5e73f3f667073" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;relation#method-i-find_or_create_by&quot;&gt;find_or_create_by&lt;/a&gt;, but calls &lt;a href=&quot;persistence/classmethods#method-i-create-21&quot;&gt;create!&lt;/a&gt; so an exception is raised if the created record is invalid.</source>
          <target state="translated">同様&lt;a href=&quot;relation#method-i-find_or_create_by&quot;&gt;find_or_create_by&lt;/a&gt;が、呼び出しが&lt;a href=&quot;persistence/classmethods#method-i-create-21&quot;&gt;作成します！&lt;/a&gt;そのため、作成されたレコードが無効な場合、例外が発生します。</target>
        </trans-unit>
        <trans-unit id="f8856f0a8b7199b002c8122ad2fcd4604b1d6719" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;relation#method-i-find_or_create_by&quot;&gt;find_or_create_by&lt;/a&gt;, but calls new instead of &lt;a href=&quot;persistence/classmethods#method-i-create&quot;&gt;create&lt;/a&gt;.</source>
          <target state="translated">同様&lt;a href=&quot;relation#method-i-find_or_create_by&quot;&gt;find_or_create_by&lt;/a&gt;が、新しいの代わりに呼び出す&lt;a href=&quot;persistence/classmethods#method-i-create&quot;&gt;作成します&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="981e81b63a865974c1cebae7d45b847c46d0c320" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;distance_of_time_in_words&lt;/code&gt;, but where &lt;code&gt;to_time&lt;/code&gt; is fixed to &lt;code&gt;Time.now&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;distance_of_time_in_words&lt;/code&gt; に似ていますが、 &lt;code&gt;to_time&lt;/code&gt; はTime.nowに固定されてい &lt;code&gt;Time.now&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dd2abf706df47832d72f8c321855ea5fb7e3691b" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;merge&lt;/code&gt; but the other way around: Merges the receiver into the argument and returns a new hash with indifferent access as result:</source>
          <target state="translated">&lt;code&gt;merge&lt;/code&gt; と同様ですが、その逆：レシーバを引数にマージし、結果として無関心なアクセス権を持つ新しいハッシュを返します。</target>
        </trans-unit>
        <trans-unit id="1945f3936ef206114971a0591dc706d5e224d076" translate="yes" xml:space="preserve">
          <source>Like Action Controller, each mailer class has a corresponding view directory in which each method of the class looks for a template with its name.</source>
          <target state="translated">Action Controllerと同様に、各メーラークラスは対応するビューディレクトリを持ち、クラスの各メソッドはその名前のテンプレートを探します。</target>
        </trans-unit>
        <trans-unit id="8ffafe203ca6452b9469b0ee8ef3f5bd66cb64c9" translate="yes" xml:space="preserve">
          <source>Like all of the other components of an engine, the assets should be namespaced. This means that if you have an asset called &lt;code&gt;style.css&lt;/code&gt;, it should be placed at &lt;code&gt;app/assets/stylesheets/[engine name]/style.css&lt;/code&gt;, rather than &lt;code&gt;app/assets/stylesheets/style.css&lt;/code&gt;. If this asset isn't namespaced, there is a possibility that the host application could have an asset named identically, in which case the application's asset would take precedence and the engine's one would be ignored.</source>
          <target state="translated">エンジンの他のすべてのコンポーネントと同様に、アセットには名前空間を付ける必要があります。あなたが呼ばれる資産がある場合、この手段 &lt;code&gt;style.css&lt;/code&gt; 、それはに置かれるべき &lt;code&gt;app/assets/stylesheets/[engine name]/style.css&lt;/code&gt; ではなく、 &lt;code&gt;app/assets/stylesheets/style.css&lt;/code&gt; 。このアセットに名前空間がない場合、ホストアプリケーションに同じ名前のアセットが含まれる可能性があります。その場合、アプリケーションのアセットが優先され、エンジンのアセットは無視されます。</target>
        </trans-unit>
        <trans-unit id="9d575f43f40942a50e4f39a888b719fa5e7f6f38" translate="yes" xml:space="preserve">
          <source>Like all other validations, &lt;code&gt;validates_with&lt;/code&gt; takes the &lt;code&gt;:if&lt;/code&gt;, &lt;code&gt;:unless&lt;/code&gt; and &lt;code&gt;:on&lt;/code&gt; options. If you pass any other options, it will send those options to the validator class as &lt;code&gt;options&lt;/code&gt;:</source>
          <target state="translated">他のすべての検証と同様に、 &lt;code&gt;validates_with&lt;/code&gt; は &lt;code&gt;:if&lt;/code&gt; 、 &lt;code&gt;:unless&lt;/code&gt; 、および &lt;code&gt;:on&lt;/code&gt; オプションを取ります。他のオプションを渡すと、それらのオプションがオプションとしてバリデータークラスに送信され &lt;code&gt;options&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="01fcd4d2ae4700b5f2465b1ff92871077189f820" translate="yes" xml:space="preserve">
          <source>Like an &lt;code&gt;image_tag&lt;/code&gt; you can supply a path, either absolute, or relative to the &lt;code&gt;public/videos&lt;/code&gt; directory. Additionally you can specify the &lt;code&gt;size: &quot;#{width}x#{height}&quot;&lt;/code&gt; option just like an &lt;code&gt;image_tag&lt;/code&gt;. Video tags can also have any of the HTML options specified at the end (&lt;code&gt;id&lt;/code&gt;, &lt;code&gt;class&lt;/code&gt; et al).</source>
          <target state="translated">&lt;code&gt;image_tag&lt;/code&gt; と同様に、絶対パスまたは &lt;code&gt;public/videos&lt;/code&gt; ディレクトリへの相対パスを指定できます。さらに、 &lt;code&gt;image_tag&lt;/code&gt; と同じように、 &lt;code&gt;size: &quot;#{width}x#{height}&quot;&lt;/code&gt; オプションを指定できます。ビデオタグには、最後に指定されたHTMLオプション（ &lt;code&gt;id&lt;/code&gt; 、 &lt;code&gt;class&lt;/code&gt; など）も含めることができます。</target>
        </trans-unit>
        <trans-unit id="2ebbef68061adecb878f7d42134a495f64524522" translate="yes" xml:space="preserve">
          <source>Like everything else in your Rails application, you can test your routes. Route tests reside in &lt;code&gt;test/controllers/&lt;/code&gt; or are part of controller tests.</source>
          <target state="translated">Railsアプリケーションの他のすべてと同様に、ルートをテストできます。ルートテストは &lt;code&gt;test/controllers/&lt;/code&gt; 存在するか、コントローラテストの一部です。</target>
        </trans-unit>
        <trans-unit id="aee8e6aaa6eb1e9d33d334a7bfe242f7cc49970c" translate="yes" xml:space="preserve">
          <source>Like interceptors, you need to register observers with the Action Mailer framework. You can do this in an initializer file &lt;code&gt;config/initializers/email_delivery_observer.rb&lt;/code&gt;</source>
          <target state="translated">インターセプターと同様に、アクションメーラーフレームワークにオブザーバーを登録する必要があります。これは、初期化ファイル &lt;code&gt;config/initializers/email_delivery_observer.rb&lt;/code&gt; で行うことができます</target>
        </trans-unit>
        <trans-unit id="91c20106ed1d5b3e7ee5eb18cac235356a844f06" translate="yes" xml:space="preserve">
          <source>Like other &lt;code&gt;before_*&lt;/code&gt; callbacks if &lt;code&gt;before_validation&lt;/code&gt; throws &lt;code&gt;:abort&lt;/code&gt; then &lt;code&gt;valid?&lt;/code&gt; will not be called.</source>
          <target state="translated">他の同様 &lt;code&gt;before_*&lt;/code&gt; 場合のコールバック &lt;code&gt;before_validation&lt;/code&gt; がスロー &lt;code&gt;:abort&lt;/code&gt; その後、 &lt;code&gt;valid?&lt;/code&gt; 呼び出されません。</target>
        </trans-unit>
        <trans-unit id="fd5a27f27952b83949f0ba6492d83bafa2550fe3" translate="yes" xml:space="preserve">
          <source>Like other form controls, a select box can be bound to a model attribute. For example, if we have a &lt;code&gt;@person&lt;/code&gt; model object like:</source>
          <target state="translated">他のフォームコントロールと同様に、選択ボックスをモデル属性にバインドできます。たとえば、次のような &lt;code&gt;@person&lt;/code&gt; モデルオブジェクトがある場合：</target>
        </trans-unit>
        <trans-unit id="d6d8aed9f13962f34865c0047d057350e384d9e8" translate="yes" xml:space="preserve">
          <source>Like railties, engines can access a config object which contains configuration shared by all railties and the application. Additionally, each engine can access &lt;code&gt;autoload_paths&lt;/code&gt;, &lt;code&gt;eager_load_paths&lt;/code&gt; and &lt;code&gt;autoload_once_paths&lt;/code&gt; settings which are scoped to that engine.</source>
          <target state="translated">Railtiesと同様に、エンジンは、すべてのRailtiesとアプリケーションで共有される構成を含む構成オブジェクトにアクセスできます。さらに、各エンジンは、そのエンジンにスコープされている &lt;code&gt;autoload_paths&lt;/code&gt; 、 &lt;code&gt;eager_load_paths&lt;/code&gt; 、および &lt;code&gt;autoload_once_paths&lt;/code&gt; 設定にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="75c1dc4daa7154d93dae21a1c761babdf8b41bde" translate="yes" xml:space="preserve">
          <source>Like the &lt;code&gt;remove_column&lt;/code&gt; and &lt;code&gt;add_column&lt;/code&gt; Rails provides the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-change_column&quot;&gt;&lt;code&gt;change_column&lt;/code&gt;&lt;/a&gt; migration method.</source>
          <target state="translated">同様 &lt;code&gt;remove_column&lt;/code&gt; と &lt;code&gt;add_column&lt;/code&gt; Railsの提供&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-change_column&quot;&gt; &lt;code&gt;change_column&lt;/code&gt; の&lt;/a&gt;移行方法を。</target>
        </trans-unit>
        <trans-unit id="5dd204ef14d7b85ee67171cb097475f1e6871271" translate="yes" xml:space="preserve">
          <source>Like the &lt;code&gt;remove_column&lt;/code&gt; and &lt;code&gt;add_column&lt;/code&gt; Rails provides the &lt;code&gt;change_column&lt;/code&gt; migration method.</source>
          <target state="translated">同様 &lt;code&gt;remove_column&lt;/code&gt; と &lt;code&gt;add_column&lt;/code&gt; Railsの提供 &lt;code&gt;change_column&lt;/code&gt; の移行方法を。</target>
        </trans-unit>
        <trans-unit id="36d6a2738d70d70feb17c5c4ce6fb8a243819c54" translate="yes" xml:space="preserve">
          <source>Like the &lt;code&gt;video_tag&lt;/code&gt;, the &lt;code&gt;audio_tag&lt;/code&gt; has special options:</source>
          <target state="translated">同様 &lt;code&gt;video_tag&lt;/code&gt; 、 &lt;code&gt;audio_tag&lt;/code&gt; は特別なオプションがあります。</target>
        </trans-unit>
        <trans-unit id="e66a5dc476fc73af9f8055914d8ed515c1102014" translate="yes" xml:space="preserve">
          <source>Like the Active Record methods, the callback chain is aborted as soon as one of the methods throws &lt;code&gt;:abort&lt;/code&gt;.</source>
          <target state="translated">Active Recordメソッドと同様に、メソッドの1つが &lt;code&gt;:abort&lt;/code&gt; をスローするとすぐに、コールバックチェーンが中止されます。</target>
        </trans-unit>
        <trans-unit id="06becc0802c58a331912f0807cf74457815d184a" translate="yes" xml:space="preserve">
          <source>Like the Executor, the Reloader also wraps application code. If the Executor is not already active on the current thread, the Reloader will invoke it for you, so you only need to call one. This also guarantees that everything the Reloader does, including all its callback invocations, occurs wrapped inside the Executor.</source>
          <target state="translated">Executor と同様に、Reloader もアプリケーションコードをラップします。現在のスレッドで Executor がまだアクティブになっていない場合は、Reloader が代わりに Executor を呼び出してくれるので、必要なのは 1 つだけです。これにより、Reloader が行うすべてのコールバック呼び出しを含めたすべての動作が Executor の中でラップされていることが保証されます。</target>
        </trans-unit>
        <trans-unit id="366f425cd5b9e6652a38ac7f7aa971788b88b9e8" translate="yes" xml:space="preserve">
          <source>Like the other examples, this will behave similarly to a class method.</source>
          <target state="translated">他の例と同様に、これはクラスメソッドと同じように動作します。</target>
        </trans-unit>
        <trans-unit id="ebba6a2344880667e5d34781e11c86287eaa9d87" translate="yes" xml:space="preserve">
          <source>Like with Hash#merge in the standard library, a block can be provided to merge values:</source>
          <target state="translated">標準ライブラリのHash#mergeと同様に、値をマージするためのブロックを提供することができます。</target>
        </trans-unit>
        <trans-unit id="fb4789449468fc495b47f2645508781ca736af5a" translate="yes" xml:space="preserve">
          <source>Like with any blog, our readers will create their comments directly after reading the article, and once they have added their comment, will be sent back to the article show page to see their comment now listed. Due to this, our &lt;code&gt;CommentsController&lt;/code&gt; is there to provide a method to create comments and delete spam comments when they arrive.</source>
          <target state="translated">他のブログと同様に、読者は記事を読んだ直後にコメントを作成し、コメントを追加すると、記事の表示ページに送り返されてコメントが一覧表示されます。このため、 &lt;code&gt;CommentsController&lt;/code&gt; には、コメントを作成したり、スパムコメントが到着したときに削除したりするメソッドが用意されています。</target>
        </trans-unit>
        <trans-unit id="ff5496f02f2e70dd87939f4f922ad6359b435663" translate="yes" xml:space="preserve">
          <source>Likewise, if a message has no purpose it won't be returned when verifying with a specific purpose.</source>
          <target state="translated">同様に、メッセージに目的がない場合は、特定の目的で検証しても返されません。</target>
        </trans-unit>
        <trans-unit id="7f9f56dc5d9dac067cad8e9787f85e70aa8451e2" translate="yes" xml:space="preserve">
          <source>Likewise, in the controller</source>
          <target state="translated">同様に、コントローラでは</target>
        </trans-unit>
        <trans-unit id="9043e4d4d1671a725ba2238469203640ef3b4115" translate="yes" xml:space="preserve">
          <source>Likewise, once retrieved an Active Record object can be destroyed which removes it from the database.</source>
          <target state="translated">同様に、一度取得したアクティブレコードオブジェクトは破棄してデータベースから削除することができます。</target>
        </trans-unit>
        <trans-unit id="1e39e2da3e09996465c4f4ce0479cc61d8bd528e" translate="yes" xml:space="preserve">
          <source>Limit and Offset</source>
          <target state="translated">リミットとオフセット</target>
        </trans-unit>
        <trans-unit id="4f68bad7da836e631fb2248fb1abb438211c676f" translate="yes" xml:space="preserve">
          <source>Limit the set of zones provided by TZInfo to a meaningful subset of 134 zones.</source>
          <target state="translated">TZInfoによって提供されるゾーンのセットを134のゾーンの意味のあるサブセットに制限する。</target>
        </trans-unit>
        <trans-unit id="1605fb4368464e150eb13ea430ef0ff67931d853" translate="yes" xml:space="preserve">
          <source>Limits are honored, and if present there is no requirement for the batch size, it can be less than, equal, or greater than the limit.</source>
          <target state="translated">制限は尊重され、バッチサイズのための要件が存在しない場合、それは制限よりも小さいか、等しいか、または制限よりも大きいことができます。</target>
        </trans-unit>
        <trans-unit id="7d2bb2ad6044f129fa674c47902d971b813e5412" translate="yes" xml:space="preserve">
          <source>Limits are honored, and if present there is no requirement for the batch size: it can be less than, equal to, or greater than the limit.</source>
          <target state="translated">制限は尊重され、存在する場合は、バッチサイズの要件はありません:それは制限よりも小さいか、等しいか、または制限よりも大きくすることができます。</target>
        </trans-unit>
        <trans-unit id="a0453458ad839bba5dbe50a404dd500b022d2db6" translate="yes" xml:space="preserve">
          <source>Limits the byte size of the string to a number of bytes without breaking characters. Usable when the storage for a string is limited for some reason.</source>
          <target state="translated">文字列のバイト数を、文字を壊さずにバイト数に制限します。何らかの理由で文字列のストレージが制限されている場合に使用できます。</target>
        </trans-unit>
        <trans-unit id="8717faa36eea1d1c7661ae98c71e5bedde325942" translate="yes" xml:space="preserve">
          <source>Linking to Files</source>
          <target state="translated">ファイルへのリンク</target>
        </trans-unit>
        <trans-unit id="68f0799319cb24a16611680c2a93d9b76e26d5b1" translate="yes" xml:space="preserve">
          <source>Links to a URL derived from &lt;code&gt;url_for&lt;/code&gt; under the hood. Primarily used to create RESTful resource links, which for this example, boils down to when passing models to &lt;code&gt;link_to&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;url_for&lt;/code&gt; でurl_forから派生したURLへのリンク。主にRESTfulリソースリンクを作成するために使用されます。この例では、モデルを &lt;code&gt;link_to&lt;/code&gt; に渡すときに要約されます。</target>
        </trans-unit>
        <trans-unit id="e2ae7cc433871751f8c4fe89e1a46b8934cd7aac" translate="yes" xml:space="preserve">
          <source>Lint Tests</source>
          <target state="translated">リントテスト</target>
        </trans-unit>
        <trans-unit id="a1464f7beeb518a1b885870631c7f3a94b56fd43" translate="yes" xml:space="preserve">
          <source>List all validators that are being used to validate a specific attribute.</source>
          <target state="translated">特定の属性を検証するために使用されているバリデータをすべてリストアップします。</target>
        </trans-unit>
        <trans-unit id="9756c11c70cc0c3e6447ead1a20c3b8bfd39a733" translate="yes" xml:space="preserve">
          <source>List all validators that are being used to validate the model using &lt;code&gt;validates_with&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;validates_with&lt;/code&gt; メソッドを使用してモデルを検証するために使用されているすべてのバリデーターをリストします。</target>
        </trans-unit>
        <trans-unit id="0f3720ccefa495f1f67d13bfaf93c2c1ac631f1f" translate="yes" xml:space="preserve">
          <source>List of Free Programming Books</source>
          <target state="translated">無料で読めるプログラミングの本一覧</target>
        </trans-unit>
        <trans-unit id="90531be0f34f12cdf82a5dd4b4d23699f1a88923" translate="yes" xml:space="preserve">
          <source>List of HTTP request methods from the following RFCs: Hypertext Transfer Protocol &amp;ndash; HTTP/1.1 (&lt;a href=&quot;https://www.ietf.org/rfc/rfc2616.txt&quot;&gt;www.ietf.org/rfc/rfc2616.txt&lt;/a&gt;) HTTP Extensions for Distributed Authoring &amp;ndash; WEBDAV (&lt;a href=&quot;https://www.ietf.org/rfc/rfc2518.txt&quot;&gt;www.ietf.org/rfc/rfc2518.txt&lt;/a&gt;) Versioning Extensions to WebDAV (&lt;a href=&quot;https://www.ietf.org/rfc/rfc3253.txt&quot;&gt;www.ietf.org/rfc/rfc3253.txt&lt;/a&gt;) Ordered Collections Protocol (WebDAV) (&lt;a href=&quot;https://www.ietf.org/rfc/rfc3648.txt&quot;&gt;www.ietf.org/rfc/rfc3648.txt&lt;/a&gt;) Web Distributed Authoring and Versioning (WebDAV) Access Control Protocol (&lt;a href=&quot;https://www.ietf.org/rfc/rfc3744.txt&quot;&gt;www.ietf.org/rfc/rfc3744.txt&lt;/a&gt;) Web Distributed Authoring and Versioning (WebDAV) SEARCH (&lt;a href=&quot;https://www.ietf.org/rfc/rfc5323.txt&quot;&gt;www.ietf.org/rfc/rfc5323.txt&lt;/a&gt;) Calendar Extensions to WebDAV (&lt;a href=&quot;https://www.ietf.org/rfc/rfc4791.txt&quot;&gt;www.ietf.org/rfc/rfc4791.txt&lt;/a&gt;) PATCH &lt;a href=&quot;../method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt; for HTTP (&lt;a href=&quot;https://www.ietf.org/rfc/rfc5789.txt&quot;&gt;www.ietf.org/rfc/rfc5789.txt&lt;/a&gt;)</source>
          <target state="translated">次のRFCからのHTTP要求メソッドのリスト：Hypertext Transfer Protocol &amp;ndash; HTTP / 1.1（&lt;a href=&quot;https://www.ietf.org/rfc/rfc2616.txt&quot;&gt;www.ietf.org/rfc/rfc2616.txt&lt;/a&gt;）分散オーサリング用のHTTP拡張機能&amp;ndash; WEBDAV（&lt;a href=&quot;https://www.ietf.org/rfc/rfc2518.txt&quot;&gt;www.ietf.org/rfc/rfc2518.txt&lt;/a&gt;） WebDAVのバージョン管理拡張機能（&lt;a href=&quot;https://www.ietf.org/rfc/rfc3253.txt&quot;&gt;www.ietf.org/rfc/rfc3253.txt）Ordered&lt;/a&gt; Collections Protocol（WebDAV）（&lt;a href=&quot;https://www.ietf.org/rfc/rfc3648.txt&quot;&gt;www.ietf.org/rfc/rfc3648.txt&lt;/a&gt;）Web分散オーサリングおよびバージョン管理（WebDAV）アクセス制御プロトコル（&lt;a href=&quot;https://www.ietf.org/rfc/rfc3744.txt&quot;&gt;www。 ietf.org/rfc/rfc3744.txt&lt;/a&gt;）のWebオーサリングとバージョン管理（WebDAV）SEARCH（分散&lt;a href=&quot;https://www.ietf.org/rfc/rfc5323.txt&quot;&gt;www.ietf.org/rfc/rfc5323.txt&lt;/a&gt;のWebDAVに）カレンダー拡張機能を（&lt;a href=&quot;https://www.ietf.org/rfc/rfc4791.txt&quot;&gt;www.ietf.org/rfc/rfc4791.txt&lt;/a&gt;）PATCH HTTPの&lt;a href=&quot;../method&quot;&gt; &lt;code&gt;Method&lt;/code&gt; &lt;/a&gt;（&lt;a href=&quot;https://www.ietf.org/rfc/rfc5789.txt&quot;&gt;www.ietf.org/rfc/rfc5789.txt&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="407b7ccb6a8ea464943a7436167fbbcc36291043" translate="yes" xml:space="preserve">
          <source>List of HTTP request methods from the following RFCs: Hypertext Transfer Protocol &amp;ndash; HTTP/1.1 (&lt;a href=&quot;https://www.ietf.org/rfc/rfc2616.txt&quot;&gt;www.ietf.org/rfc/rfc2616.txt&lt;/a&gt;) HTTP Extensions for Distributed Authoring &amp;ndash; WEBDAV (&lt;a href=&quot;https://www.ietf.org/rfc/rfc2518.txt&quot;&gt;www.ietf.org/rfc/rfc2518.txt&lt;/a&gt;) Versioning Extensions to WebDAV (&lt;a href=&quot;https://www.ietf.org/rfc/rfc3253.txt&quot;&gt;www.ietf.org/rfc/rfc3253.txt&lt;/a&gt;) Ordered Collections Protocol (WebDAV) (&lt;a href=&quot;https://www.ietf.org/rfc/rfc3648.txt&quot;&gt;www.ietf.org/rfc/rfc3648.txt&lt;/a&gt;) Web Distributed Authoring and Versioning (WebDAV) Access Control Protocol (&lt;a href=&quot;https://www.ietf.org/rfc/rfc3744.txt&quot;&gt;www.ietf.org/rfc/rfc3744.txt&lt;/a&gt;) Web Distributed Authoring and Versioning (WebDAV) SEARCH (&lt;a href=&quot;https://www.ietf.org/rfc/rfc5323.txt&quot;&gt;www.ietf.org/rfc/rfc5323.txt&lt;/a&gt;) Calendar Extensions to WebDAV (&lt;a href=&quot;https://www.ietf.org/rfc/rfc4791.txt&quot;&gt;www.ietf.org/rfc/rfc4791.txt&lt;/a&gt;) PATCH &lt;a href=&quot;../method&quot;&gt;Method&lt;/a&gt; for HTTP (&lt;a href=&quot;https://www.ietf.org/rfc/rfc5789.txt&quot;&gt;www.ietf.org/rfc/rfc5789.txt&lt;/a&gt;)</source>
          <target state="translated">次のRFCのHTTPリクエストメソッドのリスト：ハイパーテキスト転送プロトコル&amp;ndash; HTTP / 1.1（&lt;a href=&quot;https://www.ietf.org/rfc/rfc2616.txt&quot;&gt;www.ietf.org/rfc/rfc2616.txt&lt;/a&gt;）分散オーサリング用のHTTP拡張&amp;ndash; WEBDAV（&lt;a href=&quot;https://www.ietf.org/rfc/rfc2518.txt&quot;&gt;www.ietf.org/rfc/rfc2518.txt&lt;/a&gt;） WebDAVのバージョン管理拡張機能（&lt;a href=&quot;https://www.ietf.org/rfc/rfc3253.txt&quot;&gt;www.ietf.org/rfc/rfc3253.txt）Ordered&lt;/a&gt; Collections Protocol（WebDAV）（&lt;a href=&quot;https://www.ietf.org/rfc/rfc3648.txt&quot;&gt;www.ietf.org/rfc/rfc3648.txt&lt;/a&gt;）Web Distributed Authoring and Versioning（WebDAV）Access Control Protocol（&lt;a href=&quot;https://www.ietf.org/rfc/rfc3744.txt&quot;&gt;www。 ietf.org/rfc/rfc3744.txt&lt;/a&gt;）のWebオーサリングとバージョン管理（WebDAV）SEARCH（分散&lt;a href=&quot;https://www.ietf.org/rfc/rfc5323.txt&quot;&gt;www.ietf.org/rfc/rfc5323.txt&lt;/a&gt;のWebDAVに）カレンダー拡張機能を（&lt;a href=&quot;https://www.ietf.org/rfc/rfc4791.txt&quot;&gt;www.ietf.org/rfc/rfc4791.txt&lt;/a&gt;）PATCH HTTPの&lt;a href=&quot;../method&quot;&gt;メソッド&lt;/a&gt;（&lt;a href=&quot;https://www.ietf.org/rfc/rfc5789.txt&quot;&gt;www.ietf.org/rfc/rfc5789.txt&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="e99b9b6b4d6ae76f036d8dca5b804e70b84aaf44" translate="yes" xml:space="preserve">
          <source>Listing Existing Routes</source>
          <target state="translated">既存のルートをリストアップ</target>
        </trans-unit>
        <trans-unit id="a3bd4dc53839cb5b27fe373d0c90296d3ac3ae04" translate="yes" xml:space="preserve">
          <source>Listing all articles</source>
          <target state="translated">すべての記事をリストアップ</target>
        </trans-unit>
        <trans-unit id="f0de68777e9549b34e900beb10c9ee85fb7009c4" translate="yes" xml:space="preserve">
          <source>Live Compilation</source>
          <target state="translated">ライブコンピレーション</target>
        </trans-unit>
        <trans-unit id="e87779f8c44830dda0afa1d38923843e3867f226" translate="yes" xml:space="preserve">
          <source>Live Streaming of Arbitrary Data</source>
          <target state="translated">任意データのライブストリーミング</target>
        </trans-unit>
        <trans-unit id="1de45b5aa2fca7905d7dc09902ec0937f54991cc" translate="yes" xml:space="preserve">
          <source>Live#process</source>
          <target state="translated">Live#process</target>
        </trans-unit>
        <trans-unit id="6b673d9f50ed21fc6d9ccf9a74fec9716a0a7c34" translate="yes" xml:space="preserve">
          <source>Live#response_body=</source>
          <target state="translated">Live#response_body=</target>
        </trans-unit>
        <trans-unit id="1f8628696f61ead3bad365dcf9e48ec45e356b1a" translate="yes" xml:space="preserve">
          <source>Live::SSE</source>
          <target state="translated">Live::SSE</target>
        </trans-unit>
        <trans-unit id="e80cbd3ad532e9de26e75dec756d632ae670e179" translate="yes" xml:space="preserve">
          <source>Live::SSE#close</source>
          <target state="translated">Live::SSE#close</target>
        </trans-unit>
        <trans-unit id="6ca07fe7ffa55271abd157aad738f9c911eccd09" translate="yes" xml:space="preserve">
          <source>Live::SSE#write</source>
          <target state="translated">Live::SSE#write</target>
        </trans-unit>
        <trans-unit id="2002f9ba4a5ddf3e6317fd5214f79f817a7c0f7b" translate="yes" xml:space="preserve">
          <source>Live::SSE::new</source>
          <target state="translated">Live::SSE::new</target>
        </trans-unit>
        <trans-unit id="516a45906ee7a73f138ed7aee6724d5995797437" translate="yes" xml:space="preserve">
          <source>Load &lt;code&gt;Rails&lt;/code&gt; generators and invoke the registered hooks. Check &lt;code&gt;Rails::Railtie.generators&lt;/code&gt; for more info.</source>
          <target state="translated">&lt;code&gt;Rails&lt;/code&gt; ジェネレーターをロードし、登録されたフックを呼び出します。詳細については、 &lt;code&gt;Rails::Railtie.generators&lt;/code&gt; を確認してください。</target>
        </trans-unit>
        <trans-unit id="87c8a03a8a5fa7b03a6feed7b52827941ada6924" translate="yes" xml:space="preserve">
          <source>Load &lt;code&gt;Rails&lt;/code&gt; runner and invoke the registered hooks. Check &lt;code&gt;Rails::Railtie.runner&lt;/code&gt; for more info.</source>
          <target state="translated">&lt;code&gt;Rails&lt;/code&gt; ランナーをロードし、登録されたフックを呼び出します。詳細については、 &lt;code&gt;Rails::Railtie.runner&lt;/code&gt; を確認してください。</target>
        </trans-unit>
        <trans-unit id="0856eaf6a58aba3e18f24940f49d7a541bb5fbf7" translate="yes" xml:space="preserve">
          <source>Load Balancing Replicas</source>
          <target state="translated">ロードバランシングレプリカ</target>
        </trans-unit>
        <trans-unit id="3f211060ae86ba78f9cf3ddbf2e12e4cdd937256" translate="yes" xml:space="preserve">
          <source>Load Interlock</source>
          <target state="translated">ロードインターロック</target>
        </trans-unit>
        <trans-unit id="3b57c97e1176888fbdd46c4bd908ef2a819c9b3e" translate="yes" xml:space="preserve">
          <source>Load Rails generators and invoke the registered hooks. Check &lt;code&gt;Rails::Railtie.generators&lt;/code&gt; for more info.</source>
          <target state="translated">Railsジェネレーターをロードし、登録されたフックを呼び出します。詳細については、 &lt;code&gt;Rails::Railtie.generators&lt;/code&gt; を確認してください。</target>
        </trans-unit>
        <trans-unit id="90e7e9635304b55840a29eb4e6fe7f20cc9f5fa9" translate="yes" xml:space="preserve">
          <source>Load Rails runner and invoke the registered hooks. Check &lt;code&gt;Rails::Railtie.runner&lt;/code&gt; for more info.</source>
          <target state="translated">Railsランナーをロードし、登録されたフックを呼び出します。詳細については、 &lt;code&gt;Rails::Railtie.runner&lt;/code&gt; を確認してください。</target>
        </trans-unit>
        <trans-unit id="7f519035b4f9c4608d417cc7916003ffcfb5efb6" translate="yes" xml:space="preserve">
          <source>Load Rake, railties tasks and invoke the registered hooks. Check &lt;code&gt;Rails::Railtie.rake_tasks&lt;/code&gt; for more info.</source>
          <target state="translated">Rake、railtiesタスクをロードし、登録されたフックを呼び出します。詳細については、 &lt;code&gt;Rails::Railtie.rake_tasks&lt;/code&gt; を確認してください。</target>
        </trans-unit>
        <trans-unit id="b89c0598fef41aa501e1b546bb1a781c1aff38c0" translate="yes" xml:space="preserve">
          <source>Load and Configuration Hooks</source>
          <target state="translated">ロードおよび構成フック</target>
        </trans-unit>
        <trans-unit id="a2c2986fb53b84bdd72507871802910ba4f82c3d" translate="yes" xml:space="preserve">
          <source>Load and configuration hooks are the API that allow you to hook into this initialization process without violating the load contract with Rails. This will also mitigate boot performance degradation and avoid conflicts.</source>
          <target state="translated">ロードフックとコンフィギュレーションフックは、Railsとのロード契約に違反することなく、この初期化処理にフックするためのAPIです。これにより、ブートパフォーマンスの低下を緩和し、コンフリクトを回避することもできます。</target>
        </trans-unit>
        <trans-unit id="248737ce5d09b3292262076a9f3ec47f2b88e069" translate="yes" xml:space="preserve">
          <source>Load balancing replicas</source>
          <target state="translated">ロードバランシングレプリカ</target>
        </trans-unit>
        <trans-unit id="5b040245677803bf954f78cdd2af2a4400d98afd" translate="yes" xml:space="preserve">
          <source>Load console and invoke the registered hooks. Check &lt;code&gt;Rails::Railtie.console&lt;/code&gt; for more info.</source>
          <target state="translated">コンソールをロードし、登録されたフックを呼び出します。詳細については、 &lt;code&gt;Rails::Railtie.console&lt;/code&gt; を確認してください。</target>
        </trans-unit>
        <trans-unit id="1cc55c2158b1ec32df371ef3e42b70f4ecfbd7e5" translate="yes" xml:space="preserve">
          <source>Load data from db/seeds.rb file. It can be used in to load engines' seeds, e.g.:</source>
          <target state="translated">db/seeds.rbファイルからデータをロードします。これはエンジンのシードをロードする際に使用できます。</target>
        </trans-unit>
        <trans-unit id="c9ec4dd9e6e9589e6eb04e8827dc323ba0606dc6" translate="yes" xml:space="preserve">
          <source>Load the fixture data into the table</source>
          <target state="translated">フィクスチャデータをテーブルにロード</target>
        </trans-unit>
        <trans-unit id="46559e0eb7289033adcb2334be83299e56fb790b" translate="yes" xml:space="preserve">
          <source>LoadError</source>
          <target state="translated">LoadError</target>
        </trans-unit>
        <trans-unit id="c6a9492b638a409f67b0d9e982b3e7d774ce79be" translate="yes" xml:space="preserve">
          <source>LoadError#is_missing?</source>
          <target state="translated">LoadError#is_missing?</target>
        </trans-unit>
        <trans-unit id="680b0dbdca06c127414899a3ee820eac94b1b989" translate="yes" xml:space="preserve">
          <source>Loading Mechanism</source>
          <target state="translated">ローディング機構</target>
        </trans-unit>
        <trans-unit id="2ee3534a3ee9902cefe30be9a319bf71af143f92" translate="yes" xml:space="preserve">
          <source>Loading Rails</source>
          <target state="translated">レールの読み込み</target>
        </trans-unit>
        <trans-unit id="3e645f2adaf9f5637fe18120419047275c2c7afb" translate="yes" xml:space="preserve">
          <source>Loading Rake Tasks and &lt;a href=&quot;generators&quot;&gt;&lt;code&gt;Generators&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">レーキタスクと&lt;a href=&quot;generators&quot;&gt; &lt;code&gt;Generators&lt;/code&gt; &lt;/a&gt;読み込み</target>
        </trans-unit>
        <trans-unit id="b6d4e36c8ec129c107705cec5ce7a52230bcbdac" translate="yes" xml:space="preserve">
          <source>Loading Rake Tasks and &lt;a href=&quot;generators&quot;&gt;Generators&lt;/a&gt;</source>
          <target state="translated">Rakeタスクと&lt;a href=&quot;generators&quot;&gt;ジェネレーターの&lt;/a&gt;読み込み</target>
        </trans-unit>
        <trans-unit id="dc26c6048f64ac1b38aa517f836e37fbf66e2c1d" translate="yes" xml:space="preserve">
          <source>Loading nested relationships is possible using a Hash:</source>
          <target state="translated">入れ子になった関係の読み込みはHashを使って行うことができます。</target>
        </trans-unit>
        <trans-unit id="6a2179426c96029e473583f4db63f8591c481484" translate="yes" xml:space="preserve">
          <source>Loading priority</source>
          <target state="translated">読み込み優先度</target>
        </trans-unit>
        <trans-unit id="f97bb749d00e9d8d7b4d3cd28987c05e88b7ce8e" translate="yes" xml:space="preserve">
          <source>Loads and returns the entire raw configuration of database from values stored in &lt;code&gt;config/database.yml&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config/database.yml&lt;/code&gt; に保存されている値からデータベースの生の設定全体をロードして返します。</target>
        </trans-unit>
        <trans-unit id="7dac81fe05d6da25576051805b6a4ec6f157c584" translate="yes" xml:space="preserve">
          <source>Loads default configurations. See &lt;a href=&quot;https://guides.rubyonrails.org/configuring.html#results-of-config-load-defaults&quot;&gt;the result of the method for each version&lt;/a&gt;.</source>
          <target state="translated">デフォルト構成をロードします。&lt;a href=&quot;https://guides.rubyonrails.org/configuring.html#results-of-config-load-defaults&quot;&gt;各バージョンのメソッドの結果を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="96e2841f795c120ab7abbb2a3ce3f19e15e77e86" translate="yes" xml:space="preserve">
          <source>Local Precompilation</source>
          <target state="translated">ローカルプリコンパイル</target>
        </trans-unit>
        <trans-unit id="1c19411016a1397c6d7b57cf20afdd1da2dd9035" translate="yes" xml:space="preserve">
          <source>Local cache. Hot in-memory primary cache within block/middleware scope.</source>
          <target state="translated">ローカルキャッシュ。ブロック/ミドルウェアスコープ内のホットインメモリプライマリキャッシュ。</target>
        </trans-unit>
        <trans-unit id="ba7f74c4406ac9a4770f83a94dfa9c053e17cdd8" translate="yes" xml:space="preserve">
          <source>Local compilation allows you to commit the compiled files into source control, and deploy as normal.</source>
          <target state="translated">ローカルでのコンパイルでは、コンパイルしたファイルをソースコントロールにコミットし、通常通りにデプロイすることができます。</target>
        </trans-unit>
        <trans-unit id="f55dab02536ee16f582d5325dacc099456f85791" translate="yes" xml:space="preserve">
          <source>Locales.</source>
          <target state="translated">Locales.</target>
        </trans-unit>
        <trans-unit id="73b34ea0c0a622e20701c981eb89fe3ec0a90df7" translate="yes" xml:space="preserve">
          <source>Localization can also be based purely on the translation of the attribute-name (if you are using &lt;a href=&quot;../../activerecord&quot;&gt;&lt;code&gt;ActiveRecord&lt;/code&gt;&lt;/a&gt;):</source>
          <target state="translated">ローカリゼーションは、属性名の翻訳のみに基づくこともできます（&lt;a href=&quot;../../activerecord&quot;&gt; &lt;code&gt;ActiveRecord&lt;/code&gt; &lt;/a&gt;を使用している場合）。</target>
        </trans-unit>
        <trans-unit id="90074f8117f03461acc7b696a5b8d3dccb4b250b" translate="yes" xml:space="preserve">
          <source>Localization can also be based purely on the translation of the attribute-name (if you are using &lt;a href=&quot;../../activerecord&quot;&gt;ActiveRecord&lt;/a&gt;):</source>
          <target state="translated">ローカリゼーションは、純粋に属性名の変換に基づくこともできます（&lt;a href=&quot;../../activerecord&quot;&gt;ActiveRecord&lt;/a&gt;を使用している場合）。</target>
        </trans-unit>
        <trans-unit id="a3a34118a7f1edcd0e1c47f55d3079c60385b677" translate="yes" xml:space="preserve">
          <source>Localized Views</source>
          <target state="translated">ローカライズされたビュー</target>
        </trans-unit>
        <trans-unit id="3c40afeba79944e854dac84a2ffd51e7d381cc30" translate="yes" xml:space="preserve">
          <source>Localizing content</source>
          <target state="translated">コンテンツのローカライズ</target>
        </trans-unit>
        <trans-unit id="4c03678b420b8bf20d3d6c624f864ad7ee683883" translate="yes" xml:space="preserve">
          <source>Locate a specific time zone object. If the argument is a string, it is interpreted to mean the name of the timezone to locate. If it is a numeric value it is either the hour offset, or the second offset, of the timezone to find. (The first one with that offset will be returned.) Returns &lt;code&gt;nil&lt;/code&gt; if no such time zone is known to the system.</source>
          <target state="translated">特定のタイムゾーンオブジェクトを見つけます。引数が文字列の場合、検索するタイムゾーンの名前を意味すると解釈されます。数値の場合は、検索するタイムゾーンの時間オフセットまたは2番目のオフセットのいずれかです。（そのオフセットを持つ最初のものが返されます。）そのようなタイムゾーンがシステムに認識されていない場合は、 &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="2933d6ed899ca9db16a4351ba422ce7bc83c406b" translate="yes" xml:space="preserve">
          <source>Locates a Trix editor and fills it in with the given HTML.</source>
          <target state="translated">Trix エディタを検索し、指定された HTML で埋めます。</target>
        </trans-unit>
        <trans-unit id="9e95ef1a476c826249b6254155f1da146086ac43" translate="yes" xml:space="preserve">
          <source>Location response header</source>
          <target state="translated">位置情報応答ヘッダ</target>
        </trans-unit>
        <trans-unit id="eb05c96a9e2a4707170d9c3b8a23447c38f4cffd" translate="yes" xml:space="preserve">
          <source>Locations for Initialization Code</source>
          <target state="translated">初期化コードの位置</target>
        </trans-unit>
        <trans-unit id="710ae4ff639eebf3d4df032ac4c7f3a3743c7b07" translate="yes" xml:space="preserve">
          <source>LockWaitTimeout</source>
          <target state="translated">LockWaitTimeout</target>
        </trans-unit>
        <trans-unit id="70835a0129c110391e7f829d841581f090cc206d" translate="yes" xml:space="preserve">
          <source>Locking Records for Update</source>
          <target state="translated">更新のための記録のロック</target>
        </trans-unit>
        <trans-unit id="df60e973a265b7d703153225e3ca5b47b7d40460" translate="yes" xml:space="preserve">
          <source>Locking is helpful for preventing race conditions when updating records in the database and ensuring atomic updates.</source>
          <target state="translated">ロックは、データベース内のレコードを更新する際の競合状態を防止し、アトミックな更新を確実に行うために役立ちます。</target>
        </trans-unit>
        <trans-unit id="8f4169d04da897048c43e4c9684fc2f239bde026" translate="yes" xml:space="preserve">
          <source>Locking::Optimistic</source>
          <target state="translated">Locking::Optimistic</target>
        </trans-unit>
        <trans-unit id="2f864ade87e4b991694ad9e9afa97f92ae24daed" translate="yes" xml:space="preserve">
          <source>Locking::Optimistic::ClassMethods</source>
          <target state="translated">Locking::Optimistic::ClassMethods</target>
        </trans-unit>
        <trans-unit id="efc6084f6c49058a0f0ef20343618f9318154bab" translate="yes" xml:space="preserve">
          <source>Locking::Optimistic::ClassMethods#locking_column</source>
          <target state="translated">Locking::Optimistic::ClassMethods#locking_column</target>
        </trans-unit>
        <trans-unit id="08b053fe703a6fda9c517d44062753cd85d1e48b" translate="yes" xml:space="preserve">
          <source>Locking::Optimistic::ClassMethods#locking_column=</source>
          <target state="translated">Locking::Optimistic::ClassMethods#locking_column=</target>
        </trans-unit>
        <trans-unit id="8b926b531b9aed70e598004702c9afc9ff288d3b" translate="yes" xml:space="preserve">
          <source>Locking::Optimistic::ClassMethods#locking_enabled?</source>
          <target state="translated">Locking::Optimistic::ClassMethods#locking_enabled?</target>
        </trans-unit>
        <trans-unit id="a93398134569361708a52f98f356d046e6d55882" translate="yes" xml:space="preserve">
          <source>Locking::Optimistic::ClassMethods#reset_locking_column</source>
          <target state="translated">Locking::Optimistic::ClassMethods#reset_locking_column</target>
        </trans-unit>
        <trans-unit id="c589b468cf024c9825b7795a069b9d21a6f97377" translate="yes" xml:space="preserve">
          <source>Locking::Optimistic::ClassMethods#update_counters</source>
          <target state="translated">Locking::Optimistic::ClassMethods#update_counters</target>
        </trans-unit>
        <trans-unit id="be460ffa012cbe0430d2f9788757f594528a1561" translate="yes" xml:space="preserve">
          <source>Locking::Pessimistic</source>
          <target state="translated">Locking::Pessimistic</target>
        </trans-unit>
        <trans-unit id="d06e7be0414bb22dece5eb8c8424c6ced1994179" translate="yes" xml:space="preserve">
          <source>Locking::Pessimistic#lock!</source>
          <target state="translated">Locking::Pessimistic#lock!</target>
        </trans-unit>
        <trans-unit id="0feea6ff63eb300cd3671f76b7c22268524140de" translate="yes" xml:space="preserve">
          <source>Locking::Pessimistic#with_lock</source>
          <target state="translated">Locking::Pessimistic#with_lock</target>
        </trans-unit>
        <trans-unit id="1666df53d33ece6d245d229a5b15f3cd95f66b69" translate="yes" xml:space="preserve">
          <source>Log Filtering</source>
          <target state="translated">ログフィルタリング</target>
        </trans-unit>
        <trans-unit id="0797e5297ca5c23288b5154f0d790da08cf46509" translate="yes" xml:space="preserve">
          <source>Log Levels</source>
          <target state="translated">ログレベル</target>
        </trans-unit>
        <trans-unit id="7f1c49dd337173f24af84a17222b9b4d40ebbf67" translate="yes" xml:space="preserve">
          <source>Log all deprecation warnings to +$stderr+.</source>
          <target state="translated">すべての Deprecation 警告を +$stderr+に記録します。</target>
        </trans-unit>
        <trans-unit id="8c388deed51ddb528977af4fdbf643cb2fe84d76" translate="yes" xml:space="preserve">
          <source>Log all deprecation warnings to &lt;code&gt;$stderr&lt;/code&gt;.</source>
          <target state="translated">すべての非推奨警告を &lt;code&gt;$stderr&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="8341546ec1ee881b75ca43bb8090792a0d48ce20" translate="yes" xml:space="preserve">
          <source>Log all deprecation warnings to &lt;code&gt;Rails.logger&lt;/code&gt;.</source>
          <target state="translated">すべての非推奨警告を &lt;code&gt;Rails.logger&lt;/code&gt; に記録します。</target>
        </trans-unit>
        <trans-unit id="c2d2e22437d49b9714bdc19ff30351f11a7a7a74" translate="yes" xml:space="preserve">
          <source>Log subscriber also has some helpers to deal with logging and automatically flushes all logs when the request finishes (via &lt;code&gt;action_dispatch.callback&lt;/code&gt; notification) in a Rails environment.</source>
          <target state="translated">ログサブスクライバーには、ロギングを処理するヘルパーがいくつかあり、Rails環境でリクエストが &lt;code&gt;action_dispatch.callback&lt;/code&gt; （action_dispatch.callback通知を介して）すべてのログが自動的にフラッシュされます。</target>
        </trans-unit>
        <trans-unit id="171e213cec25bdc69e47b2e95d1df5626b979f38" translate="yes" xml:space="preserve">
          <source>Log tags (&lt;code&gt;taggers&lt;/code&gt;) can be an &lt;a href=&quot;../../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; containing: methods that the &lt;code&gt;request&lt;/code&gt; object responds to, objects that respond to &lt;code&gt;to_s&lt;/code&gt; or Proc objects that accept an instance of the &lt;code&gt;request&lt;/code&gt; object.</source>
          <target state="translated">ログタグ（ &lt;code&gt;taggers&lt;/code&gt; ）であることができる&lt;a href=&quot;../../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;を含む：メソッドことを &lt;code&gt;request&lt;/code&gt; するオブジェクト応答にその応答オブジェクト &lt;code&gt;to_s&lt;/code&gt; またはPROCは、それがインスタンス受け入れるオブジェクト &lt;code&gt;request&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="c5250cfa995360aa285147b0f1c57abc6ca7f730" translate="yes" xml:space="preserve">
          <source>Log tags (&lt;code&gt;taggers&lt;/code&gt;) can be an &lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt; containing: methods that the &lt;code&gt;request&lt;/code&gt; object responds to, objects that respond to &lt;code&gt;to_s&lt;/code&gt; or Proc objects that accept an instance of the &lt;code&gt;request&lt;/code&gt; object.</source>
          <target state="translated">ログタグ（ &lt;code&gt;taggers&lt;/code&gt; ）であることができる&lt;a href=&quot;../../array&quot;&gt;配列&lt;/a&gt;を含む：メソッドことを &lt;code&gt;request&lt;/code&gt; するオブジェクト応答にその応答オブジェクト &lt;code&gt;to_s&lt;/code&gt; またはPROCは、それがインスタンス受け入れるオブジェクト &lt;code&gt;request&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="5a90aa65e0a6658543600ca7e1e91262921df2de" translate="yes" xml:space="preserve">
          <source>LogSubscriber</source>
          <target state="translated">LogSubscriber</target>
        </trans-unit>
        <trans-unit id="218d5e774207d1d66e3f9b66f20bd4af3471f172" translate="yes" xml:space="preserve">
          <source>LogSubscriber#deliver</source>
          <target state="translated">LogSubscriber#deliver</target>
        </trans-unit>
        <trans-unit id="55af923ea33dff98ca7c168da85d23e80fa5317c" translate="yes" xml:space="preserve">
          <source>LogSubscriber#logger</source>
          <target state="translated">LogSubscriber#logger</target>
        </trans-unit>
        <trans-unit id="7a2411179d17d59f93aad508af303050b741fa32" translate="yes" xml:space="preserve">
          <source>LogSubscriber#process</source>
          <target state="translated">LogSubscriber#process</target>
        </trans-unit>
        <trans-unit id="6bf53002539406558cd714c6ef5bf62042b5b8a6" translate="yes" xml:space="preserve">
          <source>LogSubscriber#receive</source>
          <target state="translated">LogSubscriber#receive</target>
        </trans-unit>
        <trans-unit id="8432c24573f3f89fad60802fe8eddf1da6315768" translate="yes" xml:space="preserve">
          <source>Logger</source>
          <target state="translated">Logger</target>
        </trans-unit>
        <trans-unit id="676b4fcb697f154bd5a7bc122e393a6385de5014" translate="yes" xml:space="preserve">
          <source>Logger::Formatter</source>
          <target state="translated">Logger::Formatter</target>
        </trans-unit>
        <trans-unit id="3d9e60c602c970a2f5c3509958b4089cbf8c68d1" translate="yes" xml:space="preserve">
          <source>Logger::SimpleFormatter</source>
          <target state="translated">Logger::SimpleFormatter</target>
        </trans-unit>
        <trans-unit id="4d7ad5706deb8532d7eec04b8aa18ef1f42c1a43" translate="yes" xml:space="preserve">
          <source>Logger::SimpleFormatter#call</source>
          <target state="translated">Logger::SimpleFormatter#call</target>
        </trans-unit>
        <trans-unit id="a9707eb17132476d73754f320250ed9502fdf44d" translate="yes" xml:space="preserve">
          <source>Logger::logger_outputs_to?</source>
          <target state="translated">Logger::logger_outputs_to?</target>
        </trans-unit>
        <trans-unit id="d0005f516a11a16bb48bbeb76e0cb73c796b70a7" translate="yes" xml:space="preserve">
          <source>Logger::new</source>
          <target state="translated">Logger::new</target>
        </trans-unit>
        <trans-unit id="f18d79bc26224d883a29b68180c11a40752a2aac" translate="yes" xml:space="preserve">
          <source>LoggerSilence</source>
          <target state="translated">LoggerSilence</target>
        </trans-unit>
        <trans-unit id="8b290acfc10cb27d57e006dd5e54594619754a64" translate="yes" xml:space="preserve">
          <source>LoggerSilence#silence</source>
          <target state="translated">LoggerSilence#silence</target>
        </trans-unit>
        <trans-unit id="57003616863fe634c645e342ee9080681e419c5f" translate="yes" xml:space="preserve">
          <source>Logging</source>
          <target state="translated">Logging</target>
        </trans-unit>
        <trans-unit id="da23089c20adecce3364e2fd63f0e5cb8ece4167" translate="yes" xml:space="preserve">
          <source>Logging will always have a small impact on the performance of your Rails app, particularly when logging to disk. Additionally, there are a few subtleties:</source>
          <target state="translated">特にディスクへのロギングの場合、ロギングは常にRailsアプリのパフォーマンスにわずかな影響を与えます。さらに、いくつかの微妙な点があります。</target>
        </trans-unit>
        <trans-unit id="6d8dba556a702c4b2b02fff1697dced0aa887dad" translate="yes" xml:space="preserve">
          <source>Logging: Rails applications log every request, with a level of verbosity appropriate for the current mode. Rails logs in development include information about the request environment, database queries, and basic performance information.</source>
          <target state="translated">ロギング。Railsアプリケーションは、現在のモードに適した冗長性のレベルで、すべてのリクエストをログに記録します。開発中のRailsのログには、リクエスト環境、データベースクエリ、基本的なパフォーマンス情報などの情報が含まれています。</target>
        </trans-unit>
        <trans-unit id="f431dc40465ac4a9323987ccc7c60a2626bcb38a" translate="yes" xml:space="preserve">
          <source>Long-lived channels (and connections) also mean you're responsible for ensuring that the data is fresh. If you hold a reference to a user record, but the name is changed while that reference is held, you may be sending stale data if you don't take precautions to avoid it.</source>
          <target state="translated">長く続いているチャネル(および接続)は、データが新鮮なものであることを保証する責任があるということでもあります。ユーザーレコードへの参照を保持していても、その参照を保持している間に名前が変更されている場合、それを避けるための対策をしておかないと、古いデータを送信している可能性があります。</target>
        </trans-unit>
        <trans-unit id="3fa5015243d6b37528285498fd3134e805a65d33" translate="yes" xml:space="preserve">
          <source>Looking at this output, it's easy to understand how generators work in Rails 3.0 and above. The scaffold generator doesn't actually generate anything, it just invokes others to do the work. This allows us to add/replace/remove any of those invocations. For instance, the scaffold generator invokes the scaffold_controller generator, which invokes erb, test_unit and helper generators. Since each generator has a single responsibility, they are easy to reuse, avoiding code duplication.</source>
          <target state="translated">この出力を見ると、Rails 3.0以上でジェネレータがどのように動作するかが簡単に理解できます。scaffoldジェネレーターは実際には何も生成せず、他の人を呼び出して作業を行うだけです。これにより、それらの呼び出しを追加/置換/削除することができます。例えば、scaffold ジェネレータは scaffold_controller ジェネレータを起動し、erb,test_unit,ヘルパージェネレータを起動します。それぞれのジェネレータは単一の責任を持っているので、コードの重複を避けて再利用することができます。</target>
        </trans-unit>
        <trans-unit id="b887769549ff1debdc02faa3b40f3f606879358e" translate="yes" xml:space="preserve">
          <source>Looking up Translations</source>
          <target state="translated">翻訳を探す</target>
        </trans-unit>
        <trans-unit id="7bde0be8517d00fa09c4fc2ce5dfe9429a37dc46" translate="yes" xml:space="preserve">
          <source>Looping through a collection of records from the database (using the &lt;a href=&quot;scoping/named/classmethods#method-i-all&quot;&gt;&lt;code&gt;Scoping::Named::ClassMethods.all&lt;/code&gt;&lt;/a&gt; method, for example) is very inefficient since it will try to instantiate all the objects at once.</source>
          <target state="translated">データベースからレコードのコレクションをループする（たとえば、&lt;a href=&quot;scoping/named/classmethods#method-i-all&quot;&gt; &lt;code&gt;Scoping::Named::ClassMethods.all&lt;/code&gt; &lt;/a&gt;メソッドを使用する）と、すべてのオブジェクトを一度にインスタンス化しようとするため、非常に非効率的です。</target>
        </trans-unit>
        <trans-unit id="d34434162cf0ffe0f5e7c53841247432498ca42c" translate="yes" xml:space="preserve">
          <source>Looping through a collection of records from the database (using the &lt;a href=&quot;scoping/named/classmethods#method-i-all&quot;&gt;ActiveRecord::Scoping::Named::ClassMethods#all&lt;/a&gt; method, for example) is very inefficient since it will try to instantiate all the objects at once.</source>
          <target state="translated">データベースからレコードのコレクションをループする（たとえば、&lt;a href=&quot;scoping/named/classmethods#method-i-all&quot;&gt;ActiveRecord :: Scoping :: Named :: ClassMethods＃all&lt;/a&gt;メソッドを使用する）と、すべてのオブジェクトを一度にインスタンス化しようとするため、非常に非効率的です。</target>
        </trans-unit>
        <trans-unit id="89de374ab7a4be82c038987469668c6f701d3cc7" translate="yes" xml:space="preserve">
          <source>Looping through a collection of records from the database (using the &lt;code&gt;all&lt;/code&gt; method, for example) is very inefficient since it will try to instantiate all the objects at once.</source>
          <target state="translated">データベースからレコードのコレクションをループ処理する（たとえば &lt;code&gt;all&lt;/code&gt; メソッドを使用する）と、すべてのオブジェクトを一度にインスタンス化しようとするため、非常に非効率的です。</target>
        </trans-unit>
        <trans-unit id="d216bdf358444e1a0d5e9711e1c686d79571b539" translate="yes" xml:space="preserve">
          <source>Low-Level Caching</source>
          <target state="translated">低レベルキャッシング</target>
        </trans-unit>
        <trans-unit id="81eda5632cd54c811f36d9ec9e372ab5faaf038f" translate="yes" xml:space="preserve">
          <source>MAGENTA</source>
          <target state="translated">MAGENTA</target>
        </trans-unit>
        <trans-unit id="b315cd523ae2ef826dbad53529ba6c9c2ad21ff1" translate="yes" xml:space="preserve">
          <source>MAPPING</source>
          <target state="translated">MAPPING</target>
        </trans-unit>
        <trans-unit id="2848f474d72e47595a51218285d39dc86a6ee429" translate="yes" xml:space="preserve">
          <source>MAXIMUM_UPLOAD_PARTS_COUNT</source>
          <target state="translated">MAXIMUM_UPLOAD_PARTS_COUNT</target>
        </trans-unit>
        <trans-unit id="65124a8cda19a4bdcf3161683856e5c9f03eeb50" translate="yes" xml:space="preserve">
          <source>MAX_COOKIE_SIZE</source>
          <target state="translated">MAX_COOKIE_SIZE</target>
        </trans-unit>
        <trans-unit id="9df6c8ec33fd4d7a7eea5fc38ce44524546bce63" translate="yes" xml:space="preserve">
          <source>MAX_ID</source>
          <target state="translated">MAX_ID</target>
        </trans-unit>
        <trans-unit id="ba4091290416138086fb56a894f148cffa494206" translate="yes" xml:space="preserve">
          <source>MAX_KEY_BYTESIZE</source>
          <target state="translated">MAX_KEY_BYTESIZE</target>
        </trans-unit>
        <trans-unit id="284fa63eb59eba7c9e2cd98118f61b0726b934ae" translate="yes" xml:space="preserve">
          <source>MAX_PASSWORD_LENGTH_ALLOWED</source>
          <target state="translated">MAX_PASSWORD_LENGTH_ALLOWED</target>
        </trans-unit>
        <trans-unit id="a98cf28ee66a521605286ef7bf41c421cac7c060" translate="yes" xml:space="preserve">
          <source>MEGABYTE</source>
          <target state="translated">MEGABYTE</target>
        </trans-unit>
        <trans-unit id="8d4dcd2d8fbee8ff07ff7bc53114f0c434eeec56" translate="yes" xml:space="preserve">
          <source>MESSAGE_OPTIONS</source>
          <target state="translated">MESSAGE_OPTIONS</target>
        </trans-unit>
        <trans-unit id="495e45b5da0f07a933bcae72c50ae91eeb20d3f5" translate="yes" xml:space="preserve">
          <source>MIME_NAME</source>
          <target state="translated">MIME_NAME</target>
        </trans-unit>
        <trans-unit id="4a5aa456e74d55cddbb3f26a2e5b910c10b728c1" translate="yes" xml:space="preserve">
          <source>MIME_PARAMETER</source>
          <target state="translated">MIME_PARAMETER</target>
        </trans-unit>
        <trans-unit id="aa9e2c39cad2ac07dfa73810c9f0172f4c586568" translate="yes" xml:space="preserve">
          <source>MIME_PARAMETER_KEY</source>
          <target state="translated">MIME_PARAMETER_KEY</target>
        </trans-unit>
        <trans-unit id="dcefa2aeec7b7e6e08532fde0a1d873266cb4c02" translate="yes" xml:space="preserve">
          <source>MIME_PARAMETER_VALUE</source>
          <target state="translated">MIME_PARAMETER_VALUE</target>
        </trans-unit>
        <trans-unit id="0c7239873afa3db6794c6cf12a208d9718befee7" translate="yes" xml:space="preserve">
          <source>MIME_REGEXP</source>
          <target state="translated">MIME_REGEXP</target>
        </trans-unit>
        <trans-unit id="a8fa17735864cae1c62698a2f866732de4fcf2a5" translate="yes" xml:space="preserve">
          <source>MINIMUM_TOKEN_LENGTH</source>
          <target state="translated">MINIMUM_TOKEN_LENGTH</target>
        </trans-unit>
        <trans-unit id="2bd9323b7b8f4d32687cb655e64b2f2a8c08f1b2" translate="yes" xml:space="preserve">
          <source>MINIMUM_UPLOAD_PART_SIZE</source>
          <target state="translated">MINIMUM_UPLOAD_PART_SIZE</target>
        </trans-unit>
        <trans-unit id="468bfc8881876f60b1992fde5e9b6af946206e43" translate="yes" xml:space="preserve">
          <source>MINUTES_IN_QUARTER_YEAR</source>
          <target state="translated">MINUTES_IN_QUARTER_YEAR</target>
        </trans-unit>
        <trans-unit id="1a14e5831f85aa97e54c26370015ca312d486468" translate="yes" xml:space="preserve">
          <source>MINUTES_IN_THREE_QUARTERS_YEAR</source>
          <target state="translated">MINUTES_IN_THREE_QUARTERS_YEAR</target>
        </trans-unit>
        <trans-unit id="ac3a71bb010a31611bf5406bed00ef6e011aa34b" translate="yes" xml:space="preserve">
          <source>MINUTES_IN_YEAR</source>
          <target state="translated">MINUTES_IN_YEAR</target>
        </trans-unit>
        <trans-unit id="479396de59be987e42108d35e44f4b59dc1b4a9e" translate="yes" xml:space="preserve">
          <source>MODULES</source>
          <target state="translated">MODULES</target>
        </trans-unit>
        <trans-unit id="3bc34b9230133df1f9971deec3f33546dc36b624" translate="yes" xml:space="preserve">
          <source>MULTI_VALUE_METHODS</source>
          <target state="translated">MULTI_VALUE_METHODS</target>
        </trans-unit>
        <trans-unit id="d82bb796085b36f19aa29833ac03dc6a50644efe" translate="yes" xml:space="preserve">
          <source>MUST_REVALIDATE</source>
          <target state="translated">MUST_REVALIDATE</target>
        </trans-unit>
        <trans-unit id="8477fe9398216210024e61ba40f5df523ddf3df2" translate="yes" xml:space="preserve">
          <source>MVC and You</source>
          <target state="translated">MVCとあなた</target>
        </trans-unit>
        <trans-unit id="a8c694c348d74ec772f1e8f64d687c8999e1e811" translate="yes" xml:space="preserve">
          <source>Mail will automatically Base64 encode an attachment. If you want something different, encode your content and pass in the encoded content and encoding in a &lt;code&gt;Hash&lt;/code&gt; to the &lt;code&gt;attachments&lt;/code&gt; method.</source>
          <target state="translated">メールは自動的に添付ファイルをBase64エンコードします。別のものが必要な場合は、コンテンツをエンコードし、エンコードされたコンテンツと &lt;code&gt;Hash&lt;/code&gt; エンコードして &lt;code&gt;attachments&lt;/code&gt; メソッドに渡します。</target>
        </trans-unit>
        <trans-unit id="c55ad5c93794819374aa38d68902e3c966dcc117" translate="yes" xml:space="preserve">
          <source>MailHelper</source>
          <target state="translated">MailHelper</target>
        </trans-unit>
        <trans-unit id="3d95a627cdb107ff69b030371d1e7e8b4c10935f" translate="yes" xml:space="preserve">
          <source>MailHelper#attachments</source>
          <target state="translated">MailHelper#attachments</target>
        </trans-unit>
        <trans-unit id="b2f5e480ba0bee4286f1cc3a4ca5a963f43cfe63" translate="yes" xml:space="preserve">
          <source>MailHelper#block_format</source>
          <target state="translated">MailHelper#block_format</target>
        </trans-unit>
        <trans-unit id="7ae23fe551aca162ae1c5589d602a1df8e671748" translate="yes" xml:space="preserve">
          <source>MailHelper#format_paragraph</source>
          <target state="translated">MailHelper#format_paragraph</target>
        </trans-unit>
        <trans-unit id="fb236b1746e1802c3a0b73e9683c6ab41ac24d0b" translate="yes" xml:space="preserve">
          <source>MailHelper#mailer</source>
          <target state="translated">MailHelper#mailer</target>
        </trans-unit>
        <trans-unit id="3e8ee2a92d3b7f52814ab5089a1ff9eee1297fd1" translate="yes" xml:space="preserve">
          <source>MailHelper#message</source>
          <target state="translated">MailHelper#message</target>
        </trans-unit>
        <trans-unit id="f70ea59698ce3b86d3b1359815b6b8b662a4785d" translate="yes" xml:space="preserve">
          <source>Mailer Filters abort further processing if body is set to a non-nil value.</source>
          <target state="translated">メーラーフィルタは、ボディが非nil値に設定されている場合、処理を中断します。</target>
        </trans-unit>
        <trans-unit id="13980201fa07cfc07994ed387ca6379609fdff0c" translate="yes" xml:space="preserve">
          <source>Mailer Models</source>
          <target state="translated">メーラーモデル</target>
        </trans-unit>
        <trans-unit id="680a61c5f502dd97082db34df71463ef11e26d1f" translate="yes" xml:space="preserve">
          <source>Mailer Testing</source>
          <target state="translated">メーラーテスト</target>
        </trans-unit>
        <trans-unit id="a21c64ba416f2ab2281167ae92a45b9bf82d97e2" translate="yes" xml:space="preserve">
          <source>Mailer Views</source>
          <target state="translated">メーラービュー</target>
        </trans-unit>
        <trans-unit id="68e337f3658a60fb99f830ff9b6e79e91a43f276" translate="yes" xml:space="preserve">
          <source>Mailer test cases obtain the mailer being tested from the name of the test class using &lt;code&gt;constantize&lt;/code&gt;:</source>
          <target state="translated">メーラーテストケースは、テスト対象のメーラーを、テストクラスの名前から &lt;code&gt;constantize&lt;/code&gt; を使用して取得します。</target>
        </trans-unit>
        <trans-unit id="44df4fb76daaa7b1a6be96a25c78d05f88becb98" translate="yes" xml:space="preserve">
          <source>Mailer views</source>
          <target state="translated">メーラービュー</target>
        </trans-unit>
        <trans-unit id="587b49cee9e902b2a9c917c758289cbced65c031" translate="yes" xml:space="preserve">
          <source>Mailer views are located in the &lt;code&gt;app/views/name_of_mailer_class&lt;/code&gt; directory. The specific mailer view is known to the class because its name is the same as the mailer method. In our example from above, our mailer view for the &lt;code&gt;welcome_email&lt;/code&gt; method will be in &lt;code&gt;app/views/user_mailer/welcome_email.html.erb&lt;/code&gt; for the HTML version and &lt;code&gt;welcome_email.text.erb&lt;/code&gt; for the plain text version.</source>
          <target state="translated">メーラービューは &lt;code&gt;app/views/name_of_mailer_class&lt;/code&gt; ディレクトリにあります。特定のメーラービューは、名前がメーラーメソッドと同じであるため、クラスに認識されます。上記の例では、 &lt;code&gt;welcome_email&lt;/code&gt; メソッドのメーラービューは、HTMLバージョンの場合は &lt;code&gt;app/views/user_mailer/welcome_email.html.erb&lt;/code&gt; に、プレーンテキストバージョンの場合はwelcome_email.text.erbにあり &lt;code&gt;welcome_email.text.erb&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="36be81ab1542c937801f33caaded349a9bc4127c" translate="yes" xml:space="preserve">
          <source>Mailers are really just another way to render a view. Instead of rendering a view and sending it over the HTTP protocol, they are just sending it out through the email protocols instead. Due to this, it makes sense to just have your controller tell the Mailer to send an email when a user is successfully created.</source>
          <target state="translated">メーラーは、ビューをレンダリングするための別の方法にすぎません。ビューをレンダリングして HTTP プロトコルで送信するのではなく、メールプロトコルを使って送信します。このため、ユーザーの作成に成功したときにメーラーにメールを送信するようにコントローラに指示するのが理にかなっています。</target>
        </trans-unit>
        <trans-unit id="8f33bfdf3c88fe05bfdc4e267e0cc92da201b449" translate="yes" xml:space="preserve">
          <source>Mailers are really just another way to render a view. Instead of rendering a view and sending it over the HTTP protocol, they are sending it out through the email protocols instead. Due to this, it makes sense to have your controller tell the Mailer to send an email when a user is successfully created.</source>
          <target state="translated">メーラーは、ビューをレンダリングするための別の方法にすぎません。ビューをレンダリングして HTTP プロトコルで送信するのではなく、メールプロトコルを使って送信します。このため、ユーザーの作成に成功したときにメーラーにメールを送信するようにコントローラに指示するのが理にかなっています。</target>
        </trans-unit>
        <trans-unit id="64de1eb796e4922fd13819de6eaab4dcdb1d7c9b" translate="yes" xml:space="preserve">
          <source>Mailers have methods called &quot;actions&quot; and they use views to structure their content. Where a controller generates content like HTML to send back to the client, a Mailer creates a message to be delivered via email.</source>
          <target state="translated">メーラーには「アクション」と呼ばれるメソッドがあり、コンテンツを構造化するためにビューを使用します。コントローラが HTML のようなコンテンツを生成してクライアントに送り返すのに対し、メーラーはメールで配信されるメッセージを作成します。</target>
        </trans-unit>
        <trans-unit id="16066075c5a83dca0ba2cea04fba9274abb07b0e" translate="yes" xml:space="preserve">
          <source>Mailgun</source>
          <target state="translated">Mailgun</target>
        </trans-unit>
        <trans-unit id="8b66a1c9fbdcaa52fb90bc5d0058e4dd90be7b68" translate="yes" xml:space="preserve">
          <source>Main Features</source>
          <target state="translated">主な特徴</target>
        </trans-unit>
        <trans-unit id="ae266dfc442b5ec385b4338560900eb345c499d9" translate="yes" xml:space="preserve">
          <source>Main render entry point shared by Action View and Action Controller.</source>
          <target state="translated">アクション ビューとアクション コントローラで共有されるメインのレンダー エントリー ポイント。</target>
        </trans-unit>
        <trans-unit id="089471884fb865229f0f9111a9377f8fb353d285" translate="yes" xml:space="preserve">
          <source>Maintaining the test database schema</source>
          <target state="translated">テストデータベースのスキーマを維持する</target>
        </trans-unit>
        <trans-unit id="f8fa33a721957f371e84c8dd9e6fb8b01c0321b1" translate="yes" xml:space="preserve">
          <source>Maintenance Policy</source>
          <target state="translated">メンテナンスポリシー</target>
        </trans-unit>
        <trans-unit id="58d6b980b33f53ac06a743ee46e99cae645364df" translate="yes" xml:space="preserve">
          <source>Maintenance Policy for Ruby on Rails</source>
          <target state="translated">Ruby on Railsのメンテナンスポリシー</target>
        </trans-unit>
        <trans-unit id="252157b41e8c33085114f9d5bae78ff87bf6ade9" translate="yes" xml:space="preserve">
          <source>Make &lt;code&gt;ApplicationController&lt;/code&gt; inherit from &lt;code&gt;ActionController::API&lt;/code&gt; instead of &lt;code&gt;ActionController::Base&lt;/code&gt;. As with middleware, this will leave out any Action Controller modules that provide functionalities primarily used by browser applications.</source>
          <target state="translated">作る &lt;code&gt;ApplicationController&lt;/code&gt; にするから継承 &lt;code&gt;ActionController::API&lt;/code&gt; の代わりに、 &lt;code&gt;ActionController::Base&lt;/code&gt; 。ミドルウェアと同様に、これにより、主にブラウザーアプリケーションで使用される機能を提供するAction Controllerモジュールが除外されます。</target>
        </trans-unit>
        <trans-unit id="3ad5d449d0548ace3647803d555c0dbbae48a281" translate="yes" xml:space="preserve">
          <source>Make a temporary table.</source>
          <target state="translated">仮のテーブルを作ります。</target>
        </trans-unit>
        <trans-unit id="ec88d6037ccc44218de1dd451330f65338a749ea" translate="yes" xml:space="preserve">
          <source>Make an entry in &lt;code&gt;Rails&lt;/code&gt; routing file &lt;code&gt;config/routes.rb&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Rails&lt;/code&gt; ルーティングファイル &lt;code&gt;config/routes.rb&lt;/code&gt; にエントリを作成します</target>
        </trans-unit>
        <trans-unit id="306b5c693bdfd1595e76e9e9d059f004a98367a8" translate="yes" xml:space="preserve">
          <source>Make an entry in Rails routing file &lt;code&gt;config/routes.rb&lt;/code&gt;</source>
          <target state="translated">Railsルーティングファイル &lt;code&gt;config/routes.rb&lt;/code&gt; にエントリを作成します。</target>
        </trans-unit>
        <trans-unit id="8b69db2b39800a827d6f6168d3c1a20938083839" translate="yes" xml:space="preserve">
          <source>Make periodic timers no-op</source>
          <target state="translated">周期タイマーをノーストップにする</target>
        </trans-unit>
        <trans-unit id="8399eb539601add9de2d3f82842b56234c0d1f9c" translate="yes" xml:space="preserve">
          <source>Make sure that you declare the database column used for the serialized store as a text, so there's plenty of room.</source>
          <target state="translated">連載ストアに使用しているデータベースのカラムをテキストとして宣言するようにして、余裕を持たせましょう。</target>
        </trans-unit>
        <trans-unit id="c4ac7a454c98bda90c921a3bff6938498dfb3fc2" translate="yes" xml:space="preserve">
          <source>Make sure the lock version column gets updated when counters are updated.</source>
          <target state="translated">カウンタが更新されたときにロックバージョンの列が更新されることを確認してください。</target>
        </trans-unit>
        <trans-unit id="57fdc5e6a8181b505e4377c235dcdba10ccefd2b" translate="yes" xml:space="preserve">
          <source>Make sure to check the modules included in &lt;code&gt;ActionController::Base&lt;/code&gt; if you want to use any other functionality that is not provided by &lt;code&gt;ActionController::API&lt;/code&gt; out of the box.</source>
          <target state="translated">そのままの状態で &lt;code&gt;ActionController::API&lt;/code&gt; 提供されていない他の機能を使用する場合は、 &lt;code&gt;ActionController::Base&lt;/code&gt; 含まれているモジュールを確認してください。</target>
        </trans-unit>
        <trans-unit id="1b94a75acb3e2883ef72226f00cf1c8e7c27ad3d" translate="yes" xml:space="preserve">
          <source>Make sure to configure your server to support these options following the instructions in the &lt;code&gt;Rack::Sendfile&lt;/code&gt; documentation.</source>
          <target state="translated">&lt;code&gt;Rack::Sendfile&lt;/code&gt; ドキュメントの指示に従って、これらのオプションをサポートするようにサーバーを構成してください。</target>
        </trans-unit>
        <trans-unit id="5efdeaf7a8b12f96eb5dc7d68b2ffffb447d6f56" translate="yes" xml:space="preserve">
          <source>Make sure to specify the correct server location in each of your environment config files:</source>
          <target state="translated">それぞれの環境設定ファイルで正しいサーバーの場所を指定してください。</target>
        </trans-unit>
        <trans-unit id="8899c331bcf7e348bccc244aac252dc6bbce4cdd" translate="yes" xml:space="preserve">
          <source>Make sure to use &lt;code&gt;and return&lt;/code&gt; instead of &lt;code&gt;&amp;amp;&amp;amp; return&lt;/code&gt; because &lt;code&gt;&amp;amp;&amp;amp; return&lt;/code&gt; will not work due to the operator precedence in the Ruby Language.</source>
          <target state="translated">&lt;code&gt;&amp;amp;&amp;amp; return&lt;/code&gt; &lt;code&gt;and return&lt;/code&gt; 代わりに使用して戻ることを確認してください &lt;code&gt;&amp;amp;&amp;amp; return&lt;/code&gt; 言語では演算子の優先順位のため、&amp;amp;&amp;amp; returnは機能しません。</target>
        </trans-unit>
        <trans-unit id="fc7e11f912ac4bdebcc08be41ef772e521bd6ac6" translate="yes" xml:space="preserve">
          <source>Make sure you are comparing Flash message keys against strings.</source>
          <target state="translated">フラッシュメッセージのキーと文字列を比較していることを確認してください。</target>
        </trans-unit>
        <trans-unit id="e680f6c6382557f180208e3d709cb9136d70ccb5" translate="yes" xml:space="preserve">
          <source>Make sure your buckets are properly configured for public access. See docs on how to enable public read permissions for &lt;a href=&quot;https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access-bucket.html&quot;&gt;Amazon S3&lt;/a&gt;, &lt;a href=&quot;https://cloud.google.com/storage/docs/access-control/making-data-public#buckets&quot;&gt;Google Cloud Storage&lt;/a&gt;, and &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/storage/blobs/storage-manage-access-to-resources#set-container-public-access-level-in-the-azure-portal&quot;&gt;Microsoft Azure&lt;/a&gt; storage services.</source>
          <target state="translated">バケットがパブリックアクセス用に適切に構成されていることを確認してください。&lt;a href=&quot;https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access-bucket.html&quot;&gt;Amazon S3&lt;/a&gt;、&lt;a href=&quot;https://cloud.google.com/storage/docs/access-control/making-data-public#buckets&quot;&gt;Google Cloud Storage&lt;/a&gt;、および&lt;a href=&quot;https://docs.microsoft.com/en-us/azure/storage/blobs/storage-manage-access-to-resources#set-container-public-access-level-in-the-azure-portal&quot;&gt;MicrosoftAzure&lt;/a&gt;ストレージサービスのパブリック読み取り権限を有効にする方法に関するドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="16e768995acffc826fe3508921661c1719fc07d8" translate="yes" xml:space="preserve">
          <source>Make sure your queuing backend &quot;listens&quot; on your queue name. For some backends you need to specify the queues to listen to.</source>
          <target state="translated">キューイングバックエンドがキュー名を &quot;listens&quot; していることを確認してください。バックエンドによっては、 listen するキューを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="5682e0cf408b02c5d4877c6049064b81b83869ac" translate="yes" xml:space="preserve">
          <source>Make the following changes to your &lt;code&gt;Gemfile&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Gemfile&lt;/code&gt; に次の変更を加えます。</target>
        </trans-unit>
        <trans-unit id="f964d093f2f5ad4e04fb5d1cac5dfe5b45964069" translate="yes" xml:space="preserve">
          <source>Makes a unique &lt;code&gt;X-Request-Id&lt;/code&gt; header available to the response and enables the &lt;code&gt;ActionDispatch::Request#request_id&lt;/code&gt; method.</source>
          <target state="translated">一意の &lt;code&gt;X-Request-Id&lt;/code&gt; ヘッダーを応答で使用できるようにし、 &lt;code&gt;ActionDispatch::Request#request_id&lt;/code&gt; メソッドを有効にします。</target>
        </trans-unit>
        <trans-unit id="5036c3834983c0c5d0a51b922a33316cf1efabc5" translate="yes" xml:space="preserve">
          <source>Makes a unique request id available to the &lt;code&gt;action_dispatch.request_id&lt;/code&gt; env variable (which is then accessible through &lt;code&gt;ActionDispatch::Request#request_id&lt;/code&gt; or the alias &lt;code&gt;ActionDispatch::Request#uuid&lt;/code&gt;) and sends the same id to the client via the X-Request-Id header.</source>
          <target state="translated">一意のリクエストIDを &lt;code&gt;action_dispatch.request_id&lt;/code&gt; env変数で利用できるようにし（これは &lt;code&gt;ActionDispatch::Request#request_id&lt;/code&gt; またはエイリアス &lt;code&gt;ActionDispatch::Request#uuid&lt;/code&gt; を介してアクセス可能）、X-Request-Idを介して同じIDをクライアントに送信しますヘッダ。</target>
        </trans-unit>
        <trans-unit id="77c87d6f8d7b1bbc1e4b64d6ed3fcf1eeab45281" translate="yes" xml:space="preserve">
          <source>Makes an underscored, lowercase form from the expression in the string.</source>
          <target state="translated">文字列内の式からアンダースコア付きの小文字の形式を作成します。</target>
        </trans-unit>
        <trans-unit id="9669dfc0cbb139a1a81d28a2be5b2f78c6eec70e" translate="yes" xml:space="preserve">
          <source>Makes it dead easy to do HTTP &lt;a href=&quot;httpauthentication/basic&quot;&gt;&lt;code&gt;Basic&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;httpauthentication/digest&quot;&gt;&lt;code&gt;Digest&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;httpauthentication/token&quot;&gt;&lt;code&gt;Token&lt;/code&gt;&lt;/a&gt; authentication.</source>
          <target state="translated">HTTP&lt;a href=&quot;httpauthentication/basic&quot;&gt; &lt;code&gt;Basic&lt;/code&gt; &lt;/a&gt;認証、&lt;a href=&quot;httpauthentication/digest&quot;&gt; &lt;code&gt;Digest&lt;/code&gt; &lt;/a&gt;認証、および&lt;a href=&quot;httpauthentication/token&quot;&gt; &lt;code&gt;Token&lt;/code&gt; &lt;/a&gt;認証を非常に簡単に実行できます。</target>
        </trans-unit>
        <trans-unit id="3cd3cc6959800f15a2205416f9bd7058de795420" translate="yes" xml:space="preserve">
          <source>Makes it dead easy to do HTTP &lt;a href=&quot;httpauthentication/basic&quot;&gt;Basic&lt;/a&gt;, &lt;a href=&quot;httpauthentication/digest&quot;&gt;Digest&lt;/a&gt; and &lt;a href=&quot;httpauthentication/token&quot;&gt;Token&lt;/a&gt; authentication.</source>
          <target state="translated">HTTP &lt;a href=&quot;httpauthentication/basic&quot;&gt;基本&lt;/a&gt;認証、&lt;a href=&quot;httpauthentication/digest&quot;&gt;ダイジェスト&lt;/a&gt;認証、&lt;a href=&quot;httpauthentication/token&quot;&gt;トークン&lt;/a&gt;認証を簡単に行うことができます。</target>
        </trans-unit>
        <trans-unit id="0cf03647a61b240bb87a605abba11b5e117ea46b" translate="yes" xml:space="preserve">
          <source>Makes it dead easy to do HTTP &lt;a href=&quot;token&quot;&gt;&lt;code&gt;Token&lt;/code&gt;&lt;/a&gt; authentication.</source>
          <target state="translated">HTTP&lt;a href=&quot;token&quot;&gt; &lt;code&gt;Token&lt;/code&gt; &lt;/a&gt;認証を非常に簡単に実行できます。</target>
        </trans-unit>
        <trans-unit id="bab5116953faf0be205b9fc2c28dd2778e91ac89" translate="yes" xml:space="preserve">
          <source>Makes it dead easy to do HTTP &lt;a href=&quot;token&quot;&gt;Token&lt;/a&gt; authentication.</source>
          <target state="translated">HTTP &lt;a href=&quot;token&quot;&gt;トークン&lt;/a&gt;認証を簡単に行うことができます。</target>
        </trans-unit>
        <trans-unit id="82d90853a9285a97be64f6ddfab56da7048dd4ea" translate="yes" xml:space="preserve">
          <source>Makes it dead easy to do HTTP Basic authentication.</source>
          <target state="translated">HTTP基本認証を簡単に行うことができるようになります。</target>
        </trans-unit>
        <trans-unit id="248ffebb944238814419305b57452011f6e8a054" translate="yes" xml:space="preserve">
          <source>Makes it dead easy to do HTTP Digest authentication.</source>
          <target state="translated">HTTP ダイジェスト認証を簡単に行うことができます。</target>
        </trans-unit>
        <trans-unit id="9b65162648b93cf813417157560cc2b1670a2db9" translate="yes" xml:space="preserve">
          <source>Makes it possible for the RemoteConnection to disconnect a specific connection.</source>
          <target state="translated">RemoteConnectionが特定の接続を切断できるようにします。</target>
        </trans-unit>
        <trans-unit id="dba69823998a36ac20a883dc8e6f67040b179324" translate="yes" xml:space="preserve">
          <source>Making Select Boxes with Ease</source>
          <target state="translated">セレクトボックスを簡単に作成</target>
        </trans-unit>
        <trans-unit id="cb01187942b0742e6351609b7735a6adcf73fc33" translate="yes" xml:space="preserve">
          <source>Making Your Library or Gem a Pre-Processor</source>
          <target state="translated">ライブラリやジェムをプリプロセッサにする</target>
        </trans-unit>
        <trans-unit id="8205e9d586c3493e6f60cebf5165f64f9b3c019e" translate="yes" xml:space="preserve">
          <source>Making messages expire</source>
          <target state="translated">メッセージを有効期限切れにする</target>
        </trans-unit>
        <trans-unit id="a5ba6a079e12e18c361a6a47933e07e1a7228504" translate="yes" xml:space="preserve">
          <source>Manage &lt;code&gt;Gemfile&lt;/code&gt; indentation for a DSL action block</source>
          <target state="translated">DSLアクションブロックの &lt;code&gt;Gemfile&lt;/code&gt; インデントを管理する</target>
        </trans-unit>
        <trans-unit id="b2aee73bd2e79677bed872d3980e254bec42f2c5" translate="yes" xml:space="preserve">
          <source>Managing dependencies</source>
          <target state="translated">依存関係の管理</target>
        </trans-unit>
        <trans-unit id="4c4e0450a210ba7947ca44f072542be4cd2bbf6e" translate="yes" xml:space="preserve">
          <source>Managing the Locale across Requests</source>
          <target state="translated">リクエスト間でロケールを管理する</target>
        </trans-unit>
        <trans-unit id="5e0b984f07b1075591ab1d0a27cd0c92e4a47a76" translate="yes" xml:space="preserve">
          <source>Mandrill</source>
          <target state="translated">Mandrill</target>
        </trans-unit>
        <trans-unit id="2d88b61ea857089a4c533daa1a9cf98822177551" translate="yes" xml:space="preserve">
          <source>Manifest Files and Directives</source>
          <target state="translated">マニフェストファイルとディレクティブ</target>
        </trans-unit>
        <trans-unit id="38d94fc9b2424981345aad47073ff6221d182b79" translate="yes" xml:space="preserve">
          <source>Manipulating session and cookie variables</source>
          <target state="translated">セッションとクッキー変数の操作</target>
        </trans-unit>
        <trans-unit id="6f5bab837311ddf9a2bc63d03a1cd96d18a19ce8" translate="yes" xml:space="preserve">
          <source>Manual Unsubscription</source>
          <target state="translated">手動購読解除</target>
        </trans-unit>
        <trans-unit id="e7686ebdb95a27789f53732e864b2cf3e21d13ff" translate="yes" xml:space="preserve">
          <source>Manually check out a connection from the pool with &lt;a href=&quot;connectionpool#method-i-checkout&quot;&gt;ActiveRecord::Base.connection_pool.checkout&lt;/a&gt;. You are responsible for returning this connection to the pool when finished by calling &lt;a href=&quot;connectionpool#method-i-checkin&quot;&gt;ActiveRecord::Base.connection_pool.checkin(connection)&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;connectionpool#method-i-checkout&quot;&gt;ActiveRecord :: Base.connection_pool.checkout&lt;/a&gt;を使用して、プールから接続を手動でチェックアウトします。&lt;a href=&quot;connectionpool#method-i-checkin&quot;&gt;ActiveRecord :: Base.connection_pool.checkin（connection）を&lt;/a&gt;呼び出して終了したら、この接続をプールに返す必要があります。</target>
        </trans-unit>
        <trans-unit id="047b759d8afa6da4ea87a2a2059a77060daca4cd" translate="yes" xml:space="preserve">
          <source>Many apps grow beyond simple forms editing a single object. For example, when creating a &lt;code&gt;Person&lt;/code&gt; you might want to allow the user to (on the same form) create multiple address records (home, work, etc.). When later editing that person the user should be able to add, remove, or amend addresses as necessary.</source>
          <target state="translated">多くのアプリは、単一のオブジェクトを編集する単純なフォームを超えて成長します。たとえば、 &lt;code&gt;Person&lt;/code&gt; を作成するときに、ユーザーが（同じフォームで）複数の住所レコード（自宅、職場など）を作成できるようにすることができます。その人を後で編集するとき、ユーザーは必要に応じてアドレスを追加、削除、または修正できる必要があります。</target>
        </trans-unit>
        <trans-unit id="c51aa84e06e0d4cb20eb010b07acb0a782ae7e1b" translate="yes" xml:space="preserve">
          <source>Many cross-site scripting (XSS) exploits aim at obtaining the user's cookie. You'll read &lt;a href=&quot;#cross-site-scripting-xss&quot;&gt;more about XSS&lt;/a&gt; later.</source>
          <target state="translated">多くのクロスサイトスクリプティング（XSS）エクスプロイトは、ユーザーのCookieを取得することを目的としています。&lt;a href=&quot;#cross-site-scripting-xss&quot;&gt;XSSについては&lt;/a&gt;後で詳しく説明します。</target>
        </trans-unit>
        <trans-unit id="94760ac5345671c21adf55c326e4bc74930f068c" translate="yes" xml:space="preserve">
          <source>Many modern web servers can be used as a proxy server to balance third-party elements such as caching servers or application servers.</source>
          <target state="translated">最近の多くのウェブサーバーは、キャッシングサーバーやアプリケーションサーバーなどのサードパーティ要素のバランスをとるために、プロキシサーバーとして使用することができます。</target>
        </trans-unit>
        <trans-unit id="68dea1c5c75caa39cba7ba14014f2517fbc6048c" translate="yes" xml:space="preserve">
          <source>Many of Action Dispatcher's internal components are implemented as Rack middlewares. &lt;code&gt;Rails::Application&lt;/code&gt; uses &lt;code&gt;ActionDispatch::MiddlewareStack&lt;/code&gt; to combine various internal and external middlewares to form a complete Rails Rack application.</source>
          <target state="translated">Action Dispatcherの内部コンポーネントの多くは、Rackミドルウェアとして実装されています。 &lt;code&gt;Rails::Application&lt;/code&gt; は &lt;code&gt;ActionDispatch::MiddlewareStack&lt;/code&gt; を使用して、さまざまな内部ミドルウェアと外部ミドルウェアを組み合わせ、完全なRails Rackアプリケーションを形成します。</target>
        </trans-unit>
        <trans-unit id="5023dcf79d2fffe404c655626656b9c927384425" translate="yes" xml:space="preserve">
          <source>Many web applications allow users to upload files. &lt;em&gt;File names, which the user may choose (partly), should always be filtered&lt;/em&gt; as an attacker could use a malicious file name to overwrite any file on the server. If you store file uploads at /var/www/uploads, and the user enters a file name like &quot;../../../etc/passwd&quot;, it may overwrite an important file. Of course, the Ruby interpreter would need the appropriate permissions to do so - one more reason to run web servers, database servers, and other programs as a less privileged Unix user.</source>
          <target state="translated">多くのWebアプリケーションでは、ユーザーがファイルをアップロードできます。攻撃者が悪意のあるファイル名を使用してサーバー上のファイルを上書きする&lt;em&gt;可能性があるため、ユーザーが（部分的に）選択する可能性のあるファイル名は常にフィルタリングする必要があり&lt;/em&gt;ます。ファイルのアップロードを/ var / www / uploadsに保存し、ユーザーが「../../../etc/passwd」のようなファイル名を入力すると、重要なファイルが上書きされる可能性があります。もちろん、Rubyインタープリターにはそのための適切な権限が必要です。Webサーバー、データベースサーバー、およびその他のプログラムを特権の少ないUnixユーザーとして実行するもう1つの理由です。</target>
        </trans-unit>
        <trans-unit id="c23c36ee0702008b369b29fb802016cb8c1b8277" translate="yes" xml:space="preserve">
          <source>Many web applications have an authentication system: a user provides a user name and password, the web application checks them and stores the corresponding user id in the session hash. From now on, the session is valid. On every request the application will load the user, identified by the user id in the session, without the need for new authentication. The session ID in the cookie identifies the session.</source>
          <target state="translated">多くのウェブアプリケーションは認証システムを持っています:ユーザがユーザ名とパスワードを提供すると、ウェブアプリケーションはそれらをチェックし、対応するユーザIDをセッションハッシュに格納します。それ以降、セッションは有効になります。リクエストがあるたびに、アプリケーションはセッション内のユーザーIDによって識別されたユーザーをロードしますが、新しい認証は必要ありません。クッキーのセッションIDはセッションを識別します。</target>
        </trans-unit>
        <trans-unit id="19390742e5806874fd7fb49160ecbeb01caa65a9" translate="yes" xml:space="preserve">
          <source>Many web applications make it easy to hijack user accounts. Why not be different and make it more difficult?.</source>
          <target state="translated">多くのWebアプリケーションでは、ユーザーアカウントを簡単に乗っ取ることができます。なぜ違うものにして、もっと難しくしないのでしょうか?</target>
        </trans-unit>
        <trans-unit id="24891e5f043d78206edf6518d0d3d35f7785b4f3" translate="yes" xml:space="preserve">
          <source>Many-to-many</source>
          <target state="translated">Many-to-many</target>
        </trans-unit>
        <trans-unit id="c9a42937cf22ca82b4cf9b49a17e155274e834d4" translate="yes" xml:space="preserve">
          <source>Maps asset types to public directory.</source>
          <target state="translated">アセットタイプを公開ディレクトリにマップします。</target>
        </trans-unit>
        <trans-unit id="2186a94f3e5893663ec64cffa3a2c9ffa5b5e277" translate="yes" xml:space="preserve">
          <source>MariaDB: &lt;a href=&quot;https://mariadb.com/kb/en/mariadb/explain/&quot;&gt;EXPLAIN&lt;/a&gt;</source>
          <target state="translated">MariaDB：&lt;a href=&quot;https://mariadb.com/kb/en/mariadb/explain/&quot;&gt;EXPLAIN&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ab2e377998906eb21e2af5cfe084f2169f9ad123" translate="yes" xml:space="preserve">
          <source>Mark a key as being a connection identifier index that can then be used to find the specific connection again later. Common identifiers are current_user and current_account, but could be anything, really.</source>
          <target state="translated">キーを接続識別子のインデックスとしてマークしておくと、後から特定の接続を見つけるために使用することができます。一般的な識別子は current_user と current_account ですが、実際には何でも構いません。</target>
        </trans-unit>
        <trans-unit id="77e548ab7cc8720a986d43ffb76f2e1373d171ea" translate="yes" xml:space="preserve">
          <source>Marks a string as trusted safe. It will be inserted into HTML with no additional escaping performed. It is your responsibility to ensure that the string contains no malicious content. This method is equivalent to the &lt;code&gt;raw&lt;/code&gt; helper in views. It is recommended that you use &lt;code&gt;sanitize&lt;/code&gt; instead of this method. It should never be called on user input.</source>
          <target state="translated">文字列を信頼できる安全なものとしてマークします。HTMLに挿入され、追加のエスケープは実行されません。文字列に悪意のあるコンテンツが含まれていないことを確認するのはユーザーの責任です。このメソッドは、ビューの &lt;code&gt;raw&lt;/code&gt; ヘルパーに相当します。この方法の代わりに &lt;code&gt;sanitize&lt;/code&gt; を使用することをお勧めします。ユーザー入力時に呼び出されることはありません。</target>
        </trans-unit>
        <trans-unit id="4cf7916b5b85729b16a8ae8093bdc4715dd95f4d" translate="yes" xml:space="preserve">
          <source>Marks the entire flash or a single flash entry to be discarded by the end of the current action:</source>
          <target state="translated">フラッシュ全体または1つのフラッシュエントリをマークして、現在のアクションの終了時までに破棄します。</target>
        </trans-unit>
        <trans-unit id="17e2394d0589431098b1c37bfbdbd191785f528b" translate="yes" xml:space="preserve">
          <source>Marks the named method as intended to be redefined, if it exists. Suppresses the Ruby method redefinition warning. Prefer &lt;a href=&quot;module#method-i-redefine_method&quot;&gt;&lt;code&gt;redefine_method&lt;/code&gt;&lt;/a&gt; where possible.</source>
          <target state="translated">名前付きメソッドが存在する場合は、再定義する予定としてマークします。Rubyメソッドの再定義の警告を抑制します。可能な場合はredefine_methodを&lt;a href=&quot;module#method-i-redefine_method&quot;&gt; &lt;code&gt;redefine_method&lt;/code&gt; &lt;/a&gt;します。</target>
        </trans-unit>
        <trans-unit id="762795e51673105df0f06e3d6f3f9189f42b1615" translate="yes" xml:space="preserve">
          <source>Marks the named method as intended to be redefined, if it exists. Suppresses the Ruby method redefinition warning. Prefer &lt;a href=&quot;module#method-i-redefine_method&quot;&gt;redefine_method&lt;/a&gt; where possible.</source>
          <target state="translated">名前付きメソッドが存在する場合、再定義するように意図されたものとしてマークします。Rubyメソッドの再定義の警告を抑制します。可能な場合&lt;a href=&quot;module#method-i-redefine_method&quot;&gt;は&lt;/a&gt;、redefine_methodを使用してください。</target>
        </trans-unit>
        <trans-unit id="0475c3dda41d22daed4981fee4af23c1b9ef4ff1" translate="yes" xml:space="preserve">
          <source>Marks this record as read only.</source>
          <target state="translated">このレコードを読み取り専用としてマークします。</target>
        </trans-unit>
        <trans-unit id="b36e9ee63716f8133557ba3c2a06919d8f961b9c" translate="yes" xml:space="preserve">
          <source>Marks this record to be destroyed as part of the parent's save transaction. This does &lt;em&gt;not&lt;/em&gt; actually destroy the record instantly, rather child record will be destroyed when &lt;code&gt;parent.save&lt;/code&gt; is called.</source>
          <target state="translated">このレコードを親の保存トランザクションの一部として破棄するようにマークします。これがない&lt;em&gt;ではない&lt;/em&gt;、実際にすぐにレコードを破壊する際に、むしろ子レコードが破棄されます &lt;code&gt;parent.save&lt;/code&gt; が呼ばれています。</target>
        </trans-unit>
        <trans-unit id="567a561a163f9443feee81023bbb6e3d3d856e7d" translate="yes" xml:space="preserve">
          <source>Mask value of &lt;code&gt;params&lt;/code&gt; if key matches one of filters.</source>
          <target state="translated">値はマスク &lt;code&gt;params&lt;/code&gt; キーは、フィルタのいずれかと一致する場合。</target>
        </trans-unit>
        <trans-unit id="cb3cb3e44a313e8943d59b0c6c633a46ac1ce5d8" translate="yes" xml:space="preserve">
          <source>Masked Authenticity Tokens</source>
          <target state="translated">マスクドオーセンティシティトークン</target>
        </trans-unit>
        <trans-unit id="5c1e45d56c039093f8a35ab45a70a26ca3d2a641" translate="yes" xml:space="preserve">
          <source>Matches a URL pattern to one or more routes.</source>
          <target state="translated">URL パターンを 1 つ以上のルートにマッチさせます。</target>
        </trans-unit>
        <trans-unit id="dcd37a0f5706371522de514ef180c0fb66ebe5cb" translate="yes" xml:space="preserve">
          <source>Matches a URL pattern to one or more routes. For more information, see &lt;a href=&quot;base#method-i-match&quot;&gt;match&lt;/a&gt;.</source>
          <target state="translated">URLパターンを1つ以上のルートと照合します。詳細については、&lt;a href=&quot;base#method-i-match&quot;&gt;matchを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="cc8477b206cc55c328a42daa3a110d5a902da25e" translate="yes" xml:space="preserve">
          <source>Matches an exception to a handler based on the exception class.</source>
          <target state="translated">例外クラスに基づいて例外をハンドラにマッチさせます。</target>
        </trans-unit>
        <trans-unit id="392aa4613bb333a2cb618b83882099e4b8d3329d" translate="yes" xml:space="preserve">
          <source>Matching URLs will be marked as '[FILTERED]'.</source>
          <target state="translated">一致するURLは'[FILTERED]'と表示されます。</target>
        </trans-unit>
        <trans-unit id="a8df2fec28d8948a0326722029c7492b88ee4fbe" translate="yes" xml:space="preserve">
          <source>Maximum</source>
          <target state="translated">Maximum</target>
        </trans-unit>
        <trans-unit id="12cc5e83df7b3b7cee5836d99947c68d0239b409" translate="yes" xml:space="preserve">
          <source>May be called with a block:</source>
          <target state="translated">ブロックで呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="ea0fd428175d5a7f6c71193bfd0cb7d518663243" translate="yes" xml:space="preserve">
          <source>Media type of response.</source>
          <target state="translated">メディアの反応の種類。</target>
        </trans-unit>
        <trans-unit id="8d4f7c7b848d7a6ae17b193da35c83de55460b18" translate="yes" xml:space="preserve">
          <source>Memoizes the value returned by &lt;a href=&quot;getip#method-i-calculate_ip&quot;&gt;&lt;code&gt;calculate_ip&lt;/code&gt;&lt;/a&gt; and returns it for &lt;a href=&quot;../request&quot;&gt;&lt;code&gt;ActionDispatch::Request&lt;/code&gt;&lt;/a&gt; to use.</source>
          <target state="translated">返された値Memoizes &lt;a href=&quot;getip#method-i-calculate_ip&quot;&gt; &lt;code&gt;calculate_ip&lt;/code&gt; &lt;/a&gt;とのために戻ってそれを&lt;a href=&quot;../request&quot;&gt; &lt;code&gt;ActionDispatch::Request&lt;/code&gt; &lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="4d5f48e858447d5b8bf7bc81648942a5d44922e8" translate="yes" xml:space="preserve">
          <source>Memoizes the value returned by &lt;a href=&quot;getip#method-i-calculate_ip&quot;&gt;calculate_ip&lt;/a&gt; and returns it for &lt;a href=&quot;../request&quot;&gt;ActionDispatch::Request&lt;/a&gt; to use.</source>
          <target state="translated">返された値Memoizes &lt;a href=&quot;getip#method-i-calculate_ip&quot;&gt;calculate_ip&lt;/a&gt;とのために戻ってそれを&lt;a href=&quot;../request&quot;&gt;ActionDispatchを::要求&lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="c582a39d302aff9549c336383b6fc21c37d4ebe1" translate="yes" xml:space="preserve">
          <source>Merge conflicts can occur in your schema file when two branches modify schema. To resolve these conflicts run &lt;code&gt;bin/rails db:migrate&lt;/code&gt; to regenerate the schema file.</source>
          <target state="translated">2つのブランチがスキーマを変更すると、スキーマファイルでマージの競合が発生する可能性があります。これらの競合を解決するには、 &lt;code&gt;bin/rails db:migrate&lt;/code&gt; を実行してスキーマファイルを再生成します。</target>
        </trans-unit>
        <trans-unit id="5f53a17ddcd691ca1e78252051c126d13cd160ee" translate="yes" xml:space="preserve">
          <source>Merge conflicts can occur in your schema file when two branches modify schema. To resolve these conflicts run &lt;code&gt;rails db:migrate&lt;/code&gt; to regenerate the schema file.</source>
          <target state="translated">2つのブランチがスキーマを変更すると、スキーマファイルでマージの競合が発生する可能性があります。これらの競合を解決するには、 &lt;code&gt;rails db:migrate&lt;/code&gt; を実行してスキーマファイルを再生成します。</target>
        </trans-unit>
        <trans-unit id="900dd84f0b222da89ac364b102139535e8a32737" translate="yes" xml:space="preserve">
          <source>Merges in the conditions from &lt;code&gt;other&lt;/code&gt;, if &lt;code&gt;other&lt;/code&gt; is an &lt;a href=&quot;relation&quot;&gt;&lt;code&gt;ActiveRecord::Relation&lt;/code&gt;&lt;/a&gt;. Returns an array representing the intersection of the resulting records with &lt;code&gt;other&lt;/code&gt;, if &lt;code&gt;other&lt;/code&gt; is an array.</source>
          <target state="translated">&lt;code&gt;other&lt;/code&gt; が&lt;a href=&quot;relation&quot;&gt; &lt;code&gt;ActiveRecord::Relation&lt;/code&gt; &lt;/a&gt;場合、otherから &lt;code&gt;other&lt;/code&gt; 条件にマージします。 &lt;code&gt;other&lt;/code&gt; が配列の場合、結果のレコードと &lt;code&gt;other&lt;/code&gt; の交差を表す配列を返します。</target>
        </trans-unit>
        <trans-unit id="226be574fbe2fe077103b611adc4a492e6b6acbc" translate="yes" xml:space="preserve">
          <source>Merges in the conditions from &lt;code&gt;other&lt;/code&gt;, if &lt;code&gt;other&lt;/code&gt; is an &lt;a href=&quot;relation&quot;&gt;ActiveRecord::Relation&lt;/a&gt;. Returns an array representing the intersection of the resulting records with &lt;code&gt;other&lt;/code&gt;, if &lt;code&gt;other&lt;/code&gt; is an array.</source>
          <target state="translated">&lt;code&gt;other&lt;/code&gt; が&lt;a href=&quot;relation&quot;&gt;ActiveRecord :: Relationの&lt;/a&gt;場合、otherから &lt;code&gt;other&lt;/code&gt; 条件をマージします。 &lt;code&gt;other&lt;/code&gt; が配列の場合、結果のレコードと &lt;code&gt;other&lt;/code&gt; の共通部分を表す配列を返します。</target>
        </trans-unit>
        <trans-unit id="9d078dcba4eea635c17ac1cc07c092528c89cf22" translate="yes" xml:space="preserve">
          <source>Merges the caller into &lt;code&gt;other_hash&lt;/code&gt;. For example,</source>
          <target state="translated">呼び出し元を &lt;code&gt;other_hash&lt;/code&gt; にマージします。例えば、</target>
        </trans-unit>
        <trans-unit id="3eb6109cebb02b893019bf2fb6ad12061a744e3e" translate="yes" xml:space="preserve">
          <source>Merges the errors from &lt;code&gt;other&lt;/code&gt;, each &lt;code&gt;Error&lt;/code&gt; wrapped as &lt;code&gt;NestedError&lt;/code&gt;.</source>
          <target state="translated">エラーをマージし &lt;code&gt;other&lt;/code&gt; 、各 &lt;code&gt;Error&lt;/code&gt; としてラップ &lt;code&gt;NestedError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d9d98f104e303f9cf5ba6cad0f2e8b90cc2ed8ec" translate="yes" xml:space="preserve">
          <source>Merges the errors from &lt;code&gt;other&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;other&lt;/code&gt; のエラーをマージします。</target>
        </trans-unit>
        <trans-unit id="40de0d4de887a374168bf79e72c7aa0fa4594d6e" translate="yes" xml:space="preserve">
          <source>Merging</source>
          <target state="translated">Merging</target>
        </trans-unit>
        <trans-unit id="30998fc7b14825bfe3e591f38ea1804d33fd195e" translate="yes" xml:space="preserve">
          <source>Merging of scopes</source>
          <target state="translated">スコープのマージ</target>
        </trans-unit>
        <trans-unit id="39479ff33f15bab6f4bff70fe02746b486a928cb" translate="yes" xml:space="preserve">
          <source>MessageDelivery</source>
          <target state="translated">MessageDelivery</target>
        </trans-unit>
        <trans-unit id="2ca3a9f4c5c006a148b7a9932578ec19923bc9f1" translate="yes" xml:space="preserve">
          <source>MessageDelivery#deliver_later</source>
          <target state="translated">MessageDelivery#deliver_later</target>
        </trans-unit>
        <trans-unit id="d58a2072f2c00bcf994136544ed0881f4277955c" translate="yes" xml:space="preserve">
          <source>MessageDelivery#deliver_later!</source>
          <target state="translated">MessageDelivery#deliver_later!</target>
        </trans-unit>
        <trans-unit id="7dc2404b1df899d54d5d918418a7a861a6fd98d7" translate="yes" xml:space="preserve">
          <source>MessageDelivery#deliver_now</source>
          <target state="translated">MessageDelivery#deliver_now</target>
        </trans-unit>
        <trans-unit id="f694e10fbd9555697b01757d6c268f0aba5cf7e5" translate="yes" xml:space="preserve">
          <source>MessageDelivery#deliver_now!</source>
          <target state="translated">MessageDelivery#deliver_now!</target>
        </trans-unit>
        <trans-unit id="d815799b8048b0698d61637622c9b59c5a136e80" translate="yes" xml:space="preserve">
          <source>MessageDelivery#message</source>
          <target state="translated">MessageDelivery#message</target>
        </trans-unit>
        <trans-unit id="ebbce05309872298d3a6ebb2dc89bd5f0a10e93b" translate="yes" xml:space="preserve">
          <source>MessageDelivery#processed?</source>
          <target state="translated">MessageDelivery#processed?</target>
        </trans-unit>
        <trans-unit id="00bd198ba5bc0785f66eced2f7b32668155ba43b" translate="yes" xml:space="preserve">
          <source>MessageEncryptor</source>
          <target state="translated">MessageEncryptor</target>
        </trans-unit>
        <trans-unit id="75851ac20320d046daeb57638d6439c136973683" translate="yes" xml:space="preserve">
          <source>MessageEncryptor#decrypt_and_verify</source>
          <target state="translated">MessageEncryptor#decrypt_and_verify</target>
        </trans-unit>
        <trans-unit id="ec3605655c1dd7df73e97bee16ca0dc06fa4ba72" translate="yes" xml:space="preserve">
          <source>MessageEncryptor#encrypt_and_sign</source>
          <target state="translated">MessageEncryptor#encrypt_and_sign</target>
        </trans-unit>
        <trans-unit id="f92a218377d645f9092dd4c876aaced4944bc4c6" translate="yes" xml:space="preserve">
          <source>MessageEncryptor::key_len</source>
          <target state="translated">MessageEncryptor::key_len</target>
        </trans-unit>
        <trans-unit id="8f1e28e8dce828703d5d80714ec5189d685ade59" translate="yes" xml:space="preserve">
          <source>MessageEncryptor::new</source>
          <target state="translated">MessageEncryptor::new</target>
        </trans-unit>
        <trans-unit id="2fd13a09c7dae2fdbec9311749e402b4ff60c103" translate="yes" xml:space="preserve">
          <source>MessageVerifier</source>
          <target state="translated">MessageVerifier</target>
        </trans-unit>
        <trans-unit id="0a4d6d879f6d4797c6c59a17b65975130fee0209" translate="yes" xml:space="preserve">
          <source>MessageVerifier#generate</source>
          <target state="translated">MessageVerifier#generate</target>
        </trans-unit>
        <trans-unit id="42f90315126a3917fcfb263375bb71bc0a0a0dc4" translate="yes" xml:space="preserve">
          <source>MessageVerifier#valid_message?</source>
          <target state="translated">MessageVerifier#valid_message?</target>
        </trans-unit>
        <trans-unit id="81f77bbedd728547b52ddc40c7f614824f70a36b" translate="yes" xml:space="preserve">
          <source>MessageVerifier#verified</source>
          <target state="translated">MessageVerifier#verified</target>
        </trans-unit>
        <trans-unit id="cb9c675c988d965998ae45b5d73c7f5308bc24f7" translate="yes" xml:space="preserve">
          <source>MessageVerifier#verify</source>
          <target state="translated">MessageVerifier#verify</target>
        </trans-unit>
        <trans-unit id="faade315455c305d9bb171bc107ea83f06e6fa63" translate="yes" xml:space="preserve">
          <source>MessageVerifier::new</source>
          <target state="translated">MessageVerifier::new</target>
        </trans-unit>
        <trans-unit id="90acb406947db8913ac9b53b7532764ff4fcc59e" translate="yes" xml:space="preserve">
          <source>Metal</source>
          <target state="translated">Metal</target>
        </trans-unit>
        <trans-unit id="38196d8520f1d9e342a790c7baee91ba05b7857a" translate="yes" xml:space="preserve">
          <source>Metal#controller_name</source>
          <target state="translated">Metal#controller_name</target>
        </trans-unit>
        <trans-unit id="edb271c6ba74584a5e95fc8a592017e04d034cfe" translate="yes" xml:space="preserve">
          <source>Metal#params</source>
          <target state="translated">Metal#params</target>
        </trans-unit>
        <trans-unit id="e25845eba96b1c6cec462f426fe2054f763d5f7e" translate="yes" xml:space="preserve">
          <source>Metal#params=</source>
          <target state="translated">Metal#params=</target>
        </trans-unit>
        <trans-unit id="ae198879fd9a7f794c7ff37117ecdd787966071f" translate="yes" xml:space="preserve">
          <source>Metal#performed?</source>
          <target state="translated">Metal#performed?</target>
        </trans-unit>
        <trans-unit id="645752c91da4af331d632112e2ff95adf8ceb3d4" translate="yes" xml:space="preserve">
          <source>Metal#reset_session</source>
          <target state="translated">Metal#reset_session</target>
        </trans-unit>
        <trans-unit id="0c1d3d5f890bdd4021fc1683c03282ae40e4b4db" translate="yes" xml:space="preserve">
          <source>Metal#response_body=</source>
          <target state="translated">Metal#response_body=</target>
        </trans-unit>
        <trans-unit id="2592810200ac0ea7cdb516839b5733b45cd7157a" translate="yes" xml:space="preserve">
          <source>Metal#url_for</source>
          <target state="translated">Metal#url_for</target>
        </trans-unit>
        <trans-unit id="5d5a5e7489ce45c5bc7bbfce6515f09fc97fbd9c" translate="yes" xml:space="preserve">
          <source>Metal::action</source>
          <target state="translated">Metal::action</target>
        </trans-unit>
        <trans-unit id="e2a4b21df305be1783c72a1f50c97c1f1d4985a7" translate="yes" xml:space="preserve">
          <source>Metal::controller_name</source>
          <target state="translated">Metal::controller_name</target>
        </trans-unit>
        <trans-unit id="ce79f003cf7ea40ba89e57e2a796360ffd946624" translate="yes" xml:space="preserve">
          <source>Metal::dispatch</source>
          <target state="translated">Metal::dispatch</target>
        </trans-unit>
        <trans-unit id="182ff2b0bc20e306864bb84402eee07193eb45a1" translate="yes" xml:space="preserve">
          <source>Metal::make_response!</source>
          <target state="translated">Metal::make_response!</target>
        </trans-unit>
        <trans-unit id="d382f96858a788760f261e666e4f85ff97426a6b" translate="yes" xml:space="preserve">
          <source>Metal::middleware</source>
          <target state="translated">Metal::middleware</target>
        </trans-unit>
        <trans-unit id="3ed079e8835c2f9c9c9047fad46dd8ccfe5f55f6" translate="yes" xml:space="preserve">
          <source>Metal::new</source>
          <target state="translated">Metal::new</target>
        </trans-unit>
        <trans-unit id="2f72e572e61260367af8b52a4e688488474b8e83" translate="yes" xml:space="preserve">
          <source>Metal::use</source>
          <target state="translated">Metal::use</target>
        </trans-unit>
        <trans-unit id="88306943fea7e76f9cd57cae0ea6d8b32d2e8434" translate="yes" xml:space="preserve">
          <source>Method</source>
          <target state="translated">Method</target>
        </trans-unit>
        <trans-unit id="f2a980d54dbcb57ac4454a805bc48519eb1f3e32" translate="yes" xml:space="preserve">
          <source>Method Delegation</source>
          <target state="translated">メソッドデレゲーション</target>
        </trans-unit>
        <trans-unit id="dcddcbb57206eaf4559c31c460763d2d6db31a20" translate="yes" xml:space="preserve">
          <source>Methods and Actions</source>
          <target state="translated">方法と行動</target>
        </trans-unit>
        <trans-unit id="666268e79826afdec3fff0264016e94ef5b766ab" translate="yes" xml:space="preserve">
          <source>Methods are not duplicable:</source>
          <target state="translated">メソッドは複製できません。</target>
        </trans-unit>
        <trans-unit id="481f07082abcea98f240ee7383772b4988e84273" translate="yes" xml:space="preserve">
          <source>Methods can be delegated to instance variables, class variables, or constants by providing them as a symbols:</source>
          <target state="translated">メソッドは、シンボルとして提供することで、インスタンス変数、クラス変数、または定数に委任することができます。</target>
        </trans-unit>
        <trans-unit id="3419a2570908db81b298d7c6d51f10df0e243219" translate="yes" xml:space="preserve">
          <source>Methods defined in Active Record fixtures</source>
          <target state="translated">アクティブレコードのフィクスチャで定義されたメソッド</target>
        </trans-unit>
        <trans-unit id="8e227abc813f4dbe34a05c0e54629b2a9e2fc5be" translate="yes" xml:space="preserve">
          <source>Methods for sending arbitrary data and for streaming files to the browser, instead of rendering.</source>
          <target state="translated">レンダリングではなく、任意のデータを送信したり、ファイルをブラウザにストリーミングしたりするためのメソッド。</target>
        </trans-unit>
        <trans-unit id="d3ae077b906176fdf43ee4e5fa066f1c0a49b9ee" translate="yes" xml:space="preserve">
          <source>Methods must return a &lt;code&gt;Mail::Message&lt;/code&gt; object which can be generated by calling the mailer method without the additional &lt;code&gt;deliver_now&lt;/code&gt; / &lt;code&gt;deliver_later&lt;/code&gt;. The location of the mailer previews directory can be configured using the &lt;code&gt;preview_path&lt;/code&gt; option which has a default of &lt;code&gt;test/mailers/previews&lt;/code&gt;:</source>
          <target state="translated">メソッドは &lt;code&gt;Mail::Message&lt;/code&gt; オブジェクトを返す必要があります。このオブジェクトは、追加の &lt;code&gt;deliver_now&lt;/code&gt; / &lt;code&gt;deliver_later&lt;/code&gt; なしでメイラーメソッドを呼び出すことによって生成できます。メーラープレビューディレクトリの場所は、デフォルトの &lt;code&gt;test/mailers/previews&lt;/code&gt; &lt;code&gt;preview_path&lt;/code&gt; / previewsを持つpreview_pathオプションを使用して設定できます。</target>
        </trans-unit>
        <trans-unit id="a445a0c958f699e2d42015e88db5478fad019eca" translate="yes" xml:space="preserve">
          <source>Methods provided by Thor are not covered this guide and can be found in &lt;a href=&quot;http://rdoc.info/github/erikhuda/thor/master/Thor/Actions.html&quot;&gt;Thor's documentation&lt;/a&gt;</source>
          <target state="translated">トールが提供するメソッドは、このガイドでは説明されておらず、&lt;a href=&quot;http://rdoc.info/github/erikhuda/thor/master/Thor/Actions.html&quot;&gt;トールのドキュメントに記載&lt;/a&gt;されています。</target>
        </trans-unit>
        <trans-unit id="f15421ed37c95e18016fedbb48a699c3f1868102" translate="yes" xml:space="preserve">
          <source>Methods provided by Thor are not covered this guide and can be found in &lt;a href=&quot;https://rdoc.info/github/erikhuda/thor/master/Thor/Actions.html&quot;&gt;Thor's documentation&lt;/a&gt;</source>
          <target state="translated">Thorが提供するメソッドは、このガイドではカバーされておらず、&lt;a href=&quot;https://rdoc.info/github/erikhuda/thor/master/Thor/Actions.html&quot;&gt;Thorのドキュメントに記載&lt;/a&gt;されています。</target>
        </trans-unit>
        <trans-unit id="337d33d863058e0d37f9eac0f10f65d2f777c208" translate="yes" xml:space="preserve">
          <source>Methods that operate on collections are also aware of the hierarchy. For example, &lt;code&gt;Polygon.all&lt;/code&gt; returns all the records of the table, because all rectangles and triangles are polygons. Active Record takes care of returning instances of their corresponding class in the result set.</source>
          <target state="translated">コレクションを操作するメソッドも階層を認識しています。たとえば、すべての長方形と三角形はポリゴンであるため、 &lt;code&gt;Polygon.all&lt;/code&gt; はテーブルのすべてのレコードを返します。Active Recordは、結果セット内の対応するクラスのインスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="67cf221c8b87e3529b8c224fef7556811903e14a" translate="yes" xml:space="preserve">
          <source>Methods to create form controls are called &lt;strong&gt;on&lt;/strong&gt; the form builder object &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">フォームコントロールを作成するメソッド&lt;strong&gt;は&lt;/strong&gt;、フォームビルダーオブジェクト &lt;code&gt;f&lt;/code&gt; で呼び出さ&lt;strong&gt;れ&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="5de9d6fe8584b29709979d39884dc53d6c96e3a5" translate="yes" xml:space="preserve">
          <source>Methods will be added for retrieval and query for a single associated object, for which this object holds an id:</source>
          <target state="translated">このオブジェクトが id を保持している単一の関連付けられたオブジェクトの検索とクエリのためのメソッドが追加されます。</target>
        </trans-unit>
        <trans-unit id="5eb00c057aeacb4083ac81ba9b645b27dc753532" translate="yes" xml:space="preserve">
          <source>Microsoft Azure Storage Service</source>
          <target state="translated">マイクロソフトAzureストレージサービス</target>
        </trans-unit>
        <trans-unit id="b7507320067b372700f147199bfa6970bc4f77db" translate="yes" xml:space="preserve">
          <source>Middleware class can be inserted as a Rack handler to be local cache for the duration of request.</source>
          <target state="translated">ミドルウェアクラスをラックハンドラとして挿入して、リクエストの間はローカルキャッシュにすることができます。</target>
        </trans-unit>
        <trans-unit id="bf3312ce9eeb6125a88289fa4cc849222be8b06d" translate="yes" xml:space="preserve">
          <source>Middleware stack</source>
          <target state="translated">ミドルウェアスタック</target>
        </trans-unit>
        <trans-unit id="9d38520e4d12785ebcf01316593660ab8608f5f2" translate="yes" xml:space="preserve">
          <source>Middleware that determines which database connection to use in a multiple database application.</source>
          <target state="translated">複数のデータベースアプリケーションで使用するデータベース接続を決定するミドルウェア。</target>
        </trans-unit>
        <trans-unit id="563b6e9338739fba0218b72d657c3e48b84a5b78" translate="yes" xml:space="preserve">
          <source>Middleware::DatabaseSelector</source>
          <target state="translated">Middleware::DatabaseSelector</target>
        </trans-unit>
        <trans-unit id="8f269630c3fc0cbd7d46cc52b6ce2aee1bcbefa6" translate="yes" xml:space="preserve">
          <source>Middleware::DatabaseSelector#call</source>
          <target state="translated">Middleware::DatabaseSelector#call</target>
        </trans-unit>
        <trans-unit id="1ba8c8c9800962e37f6e1230fd89f8279c0728a5" translate="yes" xml:space="preserve">
          <source>Middleware::DatabaseSelector#context_klass</source>
          <target state="translated">Middleware::DatabaseSelector#context_klass</target>
        </trans-unit>
        <trans-unit id="01598e7d668159cced3b5d431bd75f29396ede41" translate="yes" xml:space="preserve">
          <source>Middleware::DatabaseSelector#options</source>
          <target state="translated">Middleware::DatabaseSelector#options</target>
        </trans-unit>
        <trans-unit id="155690df2c425380b1967de734857d9dbea0bb2b" translate="yes" xml:space="preserve">
          <source>Middleware::DatabaseSelector#resolver_klass</source>
          <target state="translated">Middleware::DatabaseSelector#resolver_klass</target>
        </trans-unit>
        <trans-unit id="0336e69fa320a456f7b839c7f9ef95e94d2ba03a" translate="yes" xml:space="preserve">
          <source>Middleware::DatabaseSelector::new</source>
          <target state="translated">Middleware::DatabaseSelector::new</target>
        </trans-unit>
        <trans-unit id="33b6b00c01da2bce5880337e4154f952b0cf5e1a" translate="yes" xml:space="preserve">
          <source>MiddlewareStack::InstrumentationProxy</source>
          <target state="translated">MiddlewareStack::InstrumentationProxy</target>
        </trans-unit>
        <trans-unit id="ce6014a5f10c8a7e1157c5ffac9afecce96ff840" translate="yes" xml:space="preserve">
          <source>MiddlewareStack::InstrumentationProxy#call</source>
          <target state="translated">MiddlewareStack::InstrumentationProxy#call</target>
        </trans-unit>
        <trans-unit id="5f8a75a366d8e0cf285b8df25b529ff4733f3dcd" translate="yes" xml:space="preserve">
          <source>MiddlewareStack::InstrumentationProxy::new</source>
          <target state="translated">MiddlewareStack::InstrumentationProxy::new</target>
        </trans-unit>
        <trans-unit id="27e0622c20c96144720c72ae273895e1f0116ee8" translate="yes" xml:space="preserve">
          <source>Middlewares</source>
          <target state="translated">Middlewares</target>
        </trans-unit>
        <trans-unit id="c36c34173f49fa742f965209eed50d88aaff346c" translate="yes" xml:space="preserve">
          <source>Middlewares are loaded once and are not monitored for changes. You will have to restart the server for changes to be reflected in the running application.</source>
          <target state="translated">ミドルウェアは一度読み込まれたもので、変更を監視することはありません。実行中のアプリケーションに変更が反映されるためには、サーバーを再起動する必要があります。</target>
        </trans-unit>
        <trans-unit id="282f075c796a3d6b9e95474b434c7581a2396fb7" translate="yes" xml:space="preserve">
          <source>Middlewares can also be completely swapped out and replaced with others:</source>
          <target state="translated">ミドルウェアも完全にスワップアウトして他のものと交換することができます。</target>
        </trans-unit>
        <trans-unit id="d1b3f91ec2dcd0a57731ecd63b35db51810a232c" translate="yes" xml:space="preserve">
          <source>Middlewares can be moved from one place to another:</source>
          <target state="translated">ミドルウェアの移動も可能です。</target>
        </trans-unit>
        <trans-unit id="77bcdd2131896dea63742df165ba47d28766a503" translate="yes" xml:space="preserve">
          <source>Middlewares that need to manipulate the body won't work with streaming. You should disable those middlewares whenever streaming in development or production. For instance, &lt;code&gt;Rack::Bug&lt;/code&gt; won't work when streaming as it needs to inject contents in the HTML body.</source>
          <target state="translated">ボディを操作する必要があるミドルウェアは、ストリーミングでは機能しません。開発または本番環境でストリーミングする場合は、これらのミドルウェアを無効にする必要があります。たとえば、HTML本文にコンテンツを挿入する必要があるため、 &lt;code&gt;Rack::Bug&lt;/code&gt; はストリーミング時に機能しません。</target>
        </trans-unit>
        <trans-unit id="d0628fa131fd3749ca6f8ae87cbb36a3fdf7a395" translate="yes" xml:space="preserve">
          <source>Might want a shorter timeout depending on whether the request is a PATCH, PUT, or POST, and if the client is a browser or web service. Can be much shorter if the Stale directive is implemented. This would allow a user to use new nonce without prompting the user again for their username and password.</source>
          <target state="translated">リクエストが PATCH,PUT,POST のいずれかであるか、 クライアントがブラウザやウェブサービスであるかによっては、より短いタイムアウトが必要になるかもしれません。Stale ディレクティブが実装されていれば、もっと短くなるかもしれません。これにより、ユーザはユーザ名とパスワードの再入力を要求されることなく、 新しい nonce を使うことができます。</target>
        </trans-unit>
        <trans-unit id="de063e32dc06a43a0af8ea312ac86d212f940f81" translate="yes" xml:space="preserve">
          <source>Migrate away from MultiJSON by using &lt;code&gt;obj.to_json&lt;/code&gt;, and &lt;code&gt;JSON.parse(str)&lt;/code&gt; instead.</source>
          <target state="translated">使用してMultiJSONから離れ移行 &lt;code&gt;obj.to_json&lt;/code&gt; 、および &lt;code&gt;JSON.parse(str)&lt;/code&gt; の代わりに。</target>
        </trans-unit>
        <trans-unit id="849cf5dbd007a2e8d456dd72aa453236b2c87bd3" translate="yes" xml:space="preserve">
          <source>Migration Overview</source>
          <target state="translated">移行の概要</target>
        </trans-unit>
        <trans-unit id="c10689ae3fc90ca5bd5d3afa879fe03daf018267" translate="yes" xml:space="preserve">
          <source>Migration to create the comments table in your database (your name will include a different timestamp)</source>
          <target state="translated">マイグレーションは、データベースにコメントテーブルを作成するために(あなたの名前は、異なるタイムスタンプが含まれます)。</target>
        </trans-unit>
        <trans-unit id="df5bd8ca322d93957c7101e41c22684019c85ff5" translate="yes" xml:space="preserve">
          <source>MigrationProxy</source>
          <target state="translated">MigrationProxy</target>
        </trans-unit>
        <trans-unit id="dca984afd74a0089c1d5a5816e4de2e8d46a60b5" translate="yes" xml:space="preserve">
          <source>Migrations</source>
          <target state="translated">Migrations</target>
        </trans-unit>
        <trans-unit id="92fa499d9dbdc22d3d47a8967f65d9b91f5e16f5" translate="yes" xml:space="preserve">
          <source>Migrations &amp;amp; seed data</source>
          <target state="translated">移行とシードデータ</target>
        </trans-unit>
        <trans-unit id="add41b9c7d182bf31f14e478e595fffc9cc6dbbf" translate="yes" xml:space="preserve">
          <source>Migrations and Seed Data</source>
          <target state="translated">移行とシードデータ</target>
        </trans-unit>
        <trans-unit id="57a43495bb4f9921561af4c2e6643f541818d776" translate="yes" xml:space="preserve">
          <source>Migrations are a convenient way to &lt;a href=&quot;https://en.wikipedia.org/wiki/Schema_migration&quot;&gt;alter your database schema over time&lt;/a&gt; in a consistent and easy way. They use a Ruby DSL so that you don't have to write SQL by hand, allowing your schema and changes to be database independent.</source>
          <target state="translated">移行は、一貫して簡単な方法で&lt;a href=&quot;https://en.wikipedia.org/wiki/Schema_migration&quot;&gt;データベーススキーマを時間の経過&lt;/a&gt;とともに変更する便利な方法です。彼らはRuby DSLを使用しているため、SQLを手動で作成する必要がなく、スキーマや変更をデータベースに依存しないようにすることができます。</target>
        </trans-unit>
        <trans-unit id="e2b2ceaa5197ee347285fe8f3ebfd8a7b2e99d02" translate="yes" xml:space="preserve">
          <source>Migrations are a convenient way to &lt;a href=&quot;https://en.wikipedia.org/wiki/Schema_migration&quot;&gt;alter your database schema over time&lt;/a&gt; in a consistent way. They use a Ruby DSL so that you don't have to write SQL by hand, allowing your schema and changes to be database independent.</source>
          <target state="translated">移行は、一貫した方法で&lt;a href=&quot;https://en.wikipedia.org/wiki/Schema_migration&quot;&gt;データベーススキーマを時間の経過&lt;/a&gt;とともに変更するための便利な方法です。これらはRubyDSLを使用しているため、SQLを手動で作成する必要がなく、スキーマと変更をデータベースに依存しないようにすることができます。</target>
        </trans-unit>
        <trans-unit id="a39b244ebfff3bd0603a4c48828ce03aab566d33" translate="yes" xml:space="preserve">
          <source>Migrations are a feature of Active Record that allows you to evolve your database schema over time. Rather than write schema modifications in pure SQL, migrations allow you to use a Ruby DSL to describe changes to your tables.</source>
          <target state="translated">マイグレーションはActive Recordの機能で、データベースのスキーマを時間の経過とともに進化させることができます。純粋な SQL でスキーマの変更を記述するのではなく、移行により Ruby DSL を使用してテーブルへの変更を記述することができます。</target>
        </trans-unit>
        <trans-unit id="35eb283061f63c9f2d9c8759c68d4c4790d997dd" translate="yes" xml:space="preserve">
          <source>Migrations are a feature of Active Record that allows you to evolve your database schema over time. Rather than write schema modifications in pure SQL, migrations allow you to use an easy Ruby DSL to describe changes to your tables.</source>
          <target state="translated">マイグレーションはActive Recordの機能で、データベースのスキーマを時間の経過とともに進化させることができます。純粋なSQLでスキーマの変更を記述するのではなく、移行により、簡単なRuby DSLを使用してテーブルへの変更を記述することができます。</target>
        </trans-unit>
        <trans-unit id="ae5636cafa88975771a82a06eb973872d54fc377" translate="yes" xml:space="preserve">
          <source>Migrations are currently supported in MySQL, PostgreSQL, SQLite, SQL Server, and Oracle (all supported databases except DB2).</source>
          <target state="translated">移行は現在、MySQL、PostgreSQL、SQLite、SQL Server、Oracle(DB2を除くすべてのサポートされているデータベース)でサポートされています。</target>
        </trans-unit>
        <trans-unit id="dd0a5b8c9fe431987a19d0d866524897437e203c" translate="yes" xml:space="preserve">
          <source>Migrations are stored as files in the &lt;code&gt;db/migrate&lt;/code&gt; directory, one for each migration class. The name of the file is of the form &lt;code&gt;YYYYMMDDHHMMSS_create_products.rb&lt;/code&gt;, that is to say a UTC timestamp identifying the migration followed by an underscore followed by the name of the migration. The name of the migration class (CamelCased version) should match the latter part of the file name. For example &lt;code&gt;20080906120000_create_products.rb&lt;/code&gt; should define class &lt;code&gt;CreateProducts&lt;/code&gt; and &lt;code&gt;20080906120001_add_details_to_products.rb&lt;/code&gt; should define &lt;code&gt;AddDetailsToProducts&lt;/code&gt;. Rails uses this timestamp to determine which migration should be run and in what order, so if you're copying a migration from another application or generate a file yourself, be aware of its position in the order.</source>
          <target state="translated">マイグレーションは、マイグレーションクラスごとに1つずつ、ファイルとして &lt;code&gt;db/migrate&lt;/code&gt; ディレクトリに保存されます。ファイルの名前は &lt;code&gt;YYYYMMDDHHMMSS_create_products.rb&lt;/code&gt; という形式です。つまり、移行を識別するUTCタイムスタンプの後にアンダースコアが続き、その後に移行の名前が続きます。移行クラスの名前（CamelCasedバージョン）は、ファイル名の後半部分と一致する必要があります。例えば &lt;code&gt;20080906120000_create_products.rb&lt;/code&gt; は、クラス定義する必要があり &lt;code&gt;CreateProducts&lt;/code&gt; をして &lt;code&gt;20080906120001_add_details_to_products.rb&lt;/code&gt; は定義する必要があり &lt;code&gt;AddDetailsToProducts&lt;/code&gt; を。Railsはこのタイムスタンプを使用して、どの移行をどの順序で実行するかを決定します。そのため、別のアプリケーションから移行をコピーするか、自分でファイルを生成する場合は、その順序での位置に注意してください。</target>
        </trans-unit>
        <trans-unit id="d26d12943d7d80825abca46a5dc3235ea3ec50a2" translate="yes" xml:space="preserve">
          <source>Migrations can manage the evolution of a schema used by several physical databases. It's a solution to the common problem of adding a field to make a new feature work in your local database, but being unsure of how to push that change to other developers and to the production server. With migrations, you can describe the transformations in self-contained classes that can be checked into version control systems and executed against another database that might be one, two, or five versions behind.</source>
          <target state="translated">移行は、複数の物理データベースで使用されているスキーマの進化を管理することができます。これは、ローカルデータベースで新機能を動作させるためにフィールドを追加したいが、その変更を他の開発者や本番サーバにどのようにプッシュすればよいかわからないというよくある問題を解決するものです。移行では、自己完結型のクラスで変換を記述することができ、バージョン管理システムにチェックを入れて、1つ、2つ、5つのバージョンが遅れているかもしれない別のデータベースに対して実行することができます。</target>
        </trans-unit>
        <trans-unit id="f94ebd9500c999984b8945609bc2df7a540d229d" translate="yes" xml:space="preserve">
          <source>Migrations for multiple databases should live in their own folders prefixed with the name of the database key in the configuration.</source>
          <target state="translated">複数のデータベースへの移行は、設定のデータベースキーの名前を先頭にして、それぞれのフォルダに格納する必要があります。</target>
        </trans-unit>
        <trans-unit id="86a3425e7c377c2db63091c03252f49164c0a2bc" translate="yes" xml:space="preserve">
          <source>Migrations, mighty as they may be, are not the authoritative source for your database schema. Your database remains the authoritative source. By default, Rails generates &lt;code&gt;db/schema.rb&lt;/code&gt; which attempts to capture the current state of your database schema.</source>
          <target state="translated">移行は、場合によっては強力であっても、データベーススキーマの信頼できるソースではありません。データベースは信頼できるソースのままです。デフォルトでは、Railsはデータベーススキーマの現在の状態をキャプチャしようとする &lt;code&gt;db/schema.rb&lt;/code&gt; を生成します。</target>
        </trans-unit>
        <trans-unit id="1e3979049ac0db93535e487d19b907375014fe97" translate="yes" xml:space="preserve">
          <source>Mime</source>
          <target state="translated">Mime</target>
        </trans-unit>
        <trans-unit id="837a9cd6761dcbf9f4cc0d2283bc69ff6d49162f" translate="yes" xml:space="preserve">
          <source>Mime::Type</source>
          <target state="translated">Mime::Type</target>
        </trans-unit>
        <trans-unit id="3d541a2228a89762108026001dee109145d47890" translate="yes" xml:space="preserve">
          <source>Mime::[]</source>
          <target state="translated">Mime::[]</target>
        </trans-unit>
        <trans-unit id="0926e3a2597b119bebc1a1fce3d223f29ed8f149" translate="yes" xml:space="preserve">
          <source>Mime::fetch</source>
          <target state="translated">Mime::fetch</target>
        </trans-unit>
        <trans-unit id="050981c2f1d2b6a48d219c1eccf7c86033e0e849" translate="yes" xml:space="preserve">
          <source>MimeResponds</source>
          <target state="translated">MimeResponds</target>
        </trans-unit>
        <trans-unit id="8b545c051d507c480dba95bf413fce8705988b77" translate="yes" xml:space="preserve">
          <source>MimeResponds#respond_to</source>
          <target state="translated">MimeResponds#respond_to</target>
        </trans-unit>
        <trans-unit id="6f5a075fbf5fd5c483250378da86ae9b313d0b5e" translate="yes" xml:space="preserve">
          <source>MimeResponds::Collector</source>
          <target state="translated">MimeResponds::Collector</target>
        </trans-unit>
        <trans-unit id="dd15e78a286dc1fcb96a6d760a8accbea04d2f46" translate="yes" xml:space="preserve">
          <source>MimeResponds::Collector#all</source>
          <target state="translated">MimeResponds::Collector#all</target>
        </trans-unit>
        <trans-unit id="3186ed947655e8e13c11d197e22b057a3b826b5a" translate="yes" xml:space="preserve">
          <source>MimeResponds::Collector#any</source>
          <target state="translated">MimeResponds::Collector#any</target>
        </trans-unit>
        <trans-unit id="077fae0e3039a4b3ba6f06a7b2493faf6bc94149" translate="yes" xml:space="preserve">
          <source>MimeResponds::Collector#custom</source>
          <target state="translated">MimeResponds::Collector#custom</target>
        </trans-unit>
        <trans-unit id="0a408c565a901345e13710dce8b46ddc83596604" translate="yes" xml:space="preserve">
          <source>MimeResponds::Collector#format</source>
          <target state="translated">MimeResponds::Collector#format</target>
        </trans-unit>
        <trans-unit id="d7d7238b3edbaa05ba30c1b8de1d6eae8196c62e" translate="yes" xml:space="preserve">
          <source>MimeResponds::Collector#negotiate_format</source>
          <target state="translated">MimeResponds::Collector#negotiate_format</target>
        </trans-unit>
        <trans-unit id="a43f44c574ab0f660ef86ec6284e21f6a15123a3" translate="yes" xml:space="preserve">
          <source>MimeResponds::Collector#response</source>
          <target state="translated">MimeResponds::Collector#response</target>
        </trans-unit>
        <trans-unit id="c94b172f9c46140e4befb5a3b40843c333dc1bd0" translate="yes" xml:space="preserve">
          <source>MimeResponds::Collector::new</source>
          <target state="translated">MimeResponds::Collector::new</target>
        </trans-unit>
        <trans-unit id="5d398eef3ecc3ea6a161734581d0bd3d920b64d8" translate="yes" xml:space="preserve">
          <source>Minimum</source>
          <target state="translated">Minimum</target>
        </trans-unit>
        <trans-unit id="16596f8408b40402e03fb1fa1fea448e6247038b" translate="yes" xml:space="preserve">
          <source>Minitest::Test</source>
          <target state="translated">Minitest::Test</target>
        </trans-unit>
        <trans-unit id="74043cd8393b54dc6043472a59ad52bfb062b30d" translate="yes" xml:space="preserve">
          <source>Mirror Service</source>
          <target state="translated">ミラーサービス</target>
        </trans-unit>
        <trans-unit id="39a204e4c038fabc71fb5297195e22adca4656b2" translate="yes" xml:space="preserve">
          <source>Mirror services are compatible with direct uploads. New files are directly uploaded to the primary service. When a directly-uploaded file is attached to a record, a background job is enqueued to copy it to the secondary services.</source>
          <target state="translated">ミラーサービスは直接アップロードに対応しています。新しいファイルはプライマリサービスに直接アップロードされます。直接アップロードされたファイルがレコードに添付されている場合、バックグラウンドジョブがエンキューされてセカンダリサービスにコピーされます。</target>
        </trans-unit>
        <trans-unit id="2ebe5e5d265df06404092bd36060d02d7d449026" translate="yes" xml:space="preserve">
          <source>Mirroring is not atomic. It is possible for an upload to succeed on the primary service and fail on any of the subordinate services. Before going all-in on a new service, verify that all files have been copied.</source>
          <target state="translated">ミラーリングはアトミックではありません。プライマリサービスではアップロードが成功し、下位サービスでは失敗する可能性があります。新しいサービスにすべてのファイルがコピーされたことを確認する前に、新しいサービスにすべてのファイルがコピーされたことを確認してください。</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="432aa1daa28e69ab50b92351f6f2af0a95b10677" translate="yes" xml:space="preserve">
          <source>MismatchedForeignKey</source>
          <target state="translated">MismatchedForeignKey</target>
        </trans-unit>
        <trans-unit id="df53296b1d6061c27762beb02feb56a79d980fe5" translate="yes" xml:space="preserve">
          <source>MismatchedForeignKey::new</source>
          <target state="translated">MismatchedForeignKey::new</target>
        </trans-unit>
        <trans-unit id="c9027d21a516adb82b35423ae731d466f68685dd" translate="yes" xml:space="preserve">
          <source>Missing routes keys may be filled in from the current request's parameters (e.g. &lt;code&gt;:controller&lt;/code&gt;, &lt;code&gt;:action&lt;/code&gt;, &lt;code&gt;:id&lt;/code&gt; and any other parameters that are placed in the path). Given that the current action has been reached through &lt;code&gt;GET
/users/1&lt;/code&gt;:</source>
          <target state="translated">欠落しているルートキーは、現在のリクエストのパラメーター（たとえば、 &lt;code&gt;:controller&lt;/code&gt; 、 &lt;code&gt;:action&lt;/code&gt; 、 &lt;code&gt;:id&lt;/code&gt; 、およびパスに配置されているその他のパラメーター）から入力される場合があります。現在のアクションを介して到達されたことを考えると &lt;code&gt;GET /users/1&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="41937a7bc85765db9aca03191382c7b168e9b5f0" translate="yes" xml:space="preserve">
          <source>Mix this module into your controller, and all actions in that controller will be able to stream data to the client as it's written.</source>
          <target state="translated">このモジュールをコントローラに組み込むと、コントローラ内のすべてのアクションが、書かれた通りにデータをクライアントにストリームすることができるようになります。</target>
        </trans-unit>
        <trans-unit id="605c579c268184680eec501755fbbe56698c9acc" translate="yes" xml:space="preserve">
          <source>Mix-in noise exiled to its own file:</source>
          <target state="translated">独自のファイルに追放されたミックスインノイズ。</target>
        </trans-unit>
        <trans-unit id="8d259b78f39d0db65eeb3909e9dfd3052b08bc7c" translate="yes" xml:space="preserve">
          <source>Mixing in this module allows you to define the events in the object's life cycle that will support callbacks (via &lt;code&gt;ClassMethods.define_callbacks&lt;/code&gt;), set the instance methods, procs, or callback objects to be called (via &lt;code&gt;ClassMethods.set_callback&lt;/code&gt;), and run the installed callbacks at the appropriate times (via &lt;code&gt;run_callbacks&lt;/code&gt;).</source>
          <target state="translated">このモジュールを &lt;code&gt;ClassMethods.define_callbacks&lt;/code&gt; 、コールバックをサポートする（ClassMethods.define_callbacksを介して）オブジェクトのライフサイクル内のイベントを定義し、呼び出されるインスタンスメソッド、プロシージャ、またはコールバックオブジェクトを（ &lt;code&gt;ClassMethods.set_callback&lt;/code&gt; を介して）設定し、インストールされている適切なタイミングでのコールバック（ &lt;code&gt;run_callbacks&lt;/code&gt; を使用）。</target>
        </trans-unit>
        <trans-unit id="6bf1644fb9edca063e6ffc86e4f90c94f369309b" translate="yes" xml:space="preserve">
          <source>Mixing with other form helpers</source>
          <target state="translated">他のフォームヘルパーとの混合</target>
        </trans-unit>
        <trans-unit id="3d28be03faf876ad49209848ad7be7b220d78b7e" translate="yes" xml:space="preserve">
          <source>Mobile Safari looks for a different link tag, pointing to an image that will be used if you add the page to the home screen of an iOS device. The following call would generate such a tag:</source>
          <target state="translated">Mobile Safariは、iOSデバイスのホーム画面にページを追加した場合に使用される画像を指す別のリンクタグを探します。以下の呼び出しは、このようなタグを生成します。</target>
        </trans-unit>
        <trans-unit id="68c2cc7f0ceaa3e499ecb4db331feb4debbbcc23" translate="yes" xml:space="preserve">
          <source>Model</source>
          <target state="translated">Model</target>
        </trans-unit>
        <trans-unit id="995901a6d05be888b514f03ce152df52987cf9d7" translate="yes" xml:space="preserve">
          <source>Model / Class</source>
          <target state="translated">モデル/クラス</target>
        </trans-unit>
        <trans-unit id="506e58da3784558b9ced4bdec6bcfcf767fb21fa" translate="yes" xml:space="preserve">
          <source>Model Class - Singular with the first letter of each word capitalized (e.g., &lt;code&gt;BookClub&lt;/code&gt;).</source>
          <target state="translated">モデルクラス-各単語の最初の文字を大文字にした単数形（例： &lt;code&gt;BookClub&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="12bcd30f814db80cb1f7e7a2796b829953df4af8" translate="yes" xml:space="preserve">
          <source>Model Generators</source>
          <target state="translated">モデルジェネレーター</target>
        </trans-unit>
        <trans-unit id="33ac27d1e8badd8f928fc67c97f045d911339e91" translate="yes" xml:space="preserve">
          <source>Model Object Helpers</source>
          <target state="translated">モデルオブジェクトヘルパー</target>
        </trans-unit>
        <trans-unit id="d52c41ee4ca421219a75e5a69582d944082143e0" translate="yes" xml:space="preserve">
          <source>Model Testing</source>
          <target state="translated">モデルテスト</target>
        </trans-unit>
        <trans-unit id="e4bef5d3c94fa7c5c5847e00ba0a25e7f37a2e73" translate="yes" xml:space="preserve">
          <source>Model attributes have a reader, a writer, and a predicate. You can alias a model attribute having the corresponding three methods all defined for you by using &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Module.html#method-i-alias_attribute&quot;&gt;&lt;code&gt;alias_attribute&lt;/code&gt;&lt;/a&gt;. As in other aliasing methods, the new name is the first argument, and the old name is the second (one mnemonic is that they go in the same order as if you did an assignment):</source>
          <target state="translated">モデル属性には、リーダー、ライター、および述語があります。&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Module.html#method-i-alias_attribute&quot;&gt; &lt;code&gt;alias_attribute&lt;/code&gt; &lt;/a&gt;を使用して、対応する3つのメソッドがすべて定義されているモデル属性にエイリアスを設定できます。他のエイリアシング方法と同様に、新しい名前が最初の引数で、古い名前が2番目の引数です（1つのニーモニックは、割り当てを行った場合と同じ順序で実行されることです）。</target>
        </trans-unit>
        <trans-unit id="4ec9ebd42f054a98c3da4bc4a0a86ee8eda11c19" translate="yes" xml:space="preserve">
          <source>Model attributes have a reader, a writer, and a predicate. You can alias a model attribute having the corresponding three methods defined for you in one shot. As in other aliasing methods, the new name is the first argument, and the old name is the second (one mnemonic is that they go in the same order as if you did an assignment):</source>
          <target state="translated">モデル属性には、リーダ、ライタ、述語があります。対応する3つのメソッドを定義したモデル属性を一発でエイリアスすることができます。他のエイリアス方法と同様に、新しい名前が第一引数で、古い名前が第二引数となります(一つのニーモニックな方法は、課題を行う場合と同じ順番で実行することです)。</target>
        </trans-unit>
        <trans-unit id="fcd2e36ad78fb7f71108bd32655d54cc7792e2c6" translate="yes" xml:space="preserve">
          <source>Model names are &lt;strong&gt;singular&lt;/strong&gt;, because an instantiated model represents a single data record. To help remember this convention, think of how you would call the model's constructor: we want to write &lt;code&gt;Article.new(...)&lt;/code&gt;, &lt;strong&gt;not&lt;/strong&gt;&lt;code&gt;Articles.new(...)&lt;/code&gt;.</source>
          <target state="translated">インスタンス化されたモデルは単一のデータレコードを表すため、モデル名は&lt;strong&gt;単数&lt;/strong&gt;です。この規則を覚えやすくするために、モデルのコンストラクターをどのように呼び出すかを考えてください &lt;code&gt;Article.new(...)&lt;/code&gt; では&lt;strong&gt;なく&lt;/strong&gt;Article.new（...）を記述し &lt;code&gt;Articles.new(...)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="55122a12c64767a82f2b9a00f00e2eb10873a428" translate="yes" xml:space="preserve">
          <source>Model tests are used to test the various models of your application.</source>
          <target state="translated">モデルテストは、アプリケーションの様々なモデルをテストするために使用されます。</target>
        </trans-unit>
        <trans-unit id="2b6825ada8068d617c4713f563e77b48935cfc12" translate="yes" xml:space="preserve">
          <source>Model tests don't have their own superclass like &lt;code&gt;ActionMailer::TestCase&lt;/code&gt; instead they inherit from &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveSupport/TestCase.html&quot;&gt;&lt;code&gt;ActiveSupport::TestCase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">モデルテストには、 &lt;code&gt;ActionMailer::TestCase&lt;/code&gt; ような独自のスーパークラスがありません。代わりに、&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveSupport/TestCase.html&quot;&gt; &lt;code&gt;ActiveSupport::TestCase&lt;/code&gt; &lt;/a&gt;から継承します。</target>
        </trans-unit>
        <trans-unit id="dbe801f24d91b32cbbccf08eb1a5ecb957775630" translate="yes" xml:space="preserve">
          <source>Model tests don't have their own superclass like &lt;code&gt;ActionMailer::TestCase&lt;/code&gt;. Instead, they inherit from &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveSupport/TestCase.html&quot;&gt;&lt;code&gt;ActiveSupport::TestCase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">モデルテストには、 &lt;code&gt;ActionMailer::TestCase&lt;/code&gt; ような独自のスーパークラスはありません。代わりに、&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveSupport/TestCase.html&quot;&gt; &lt;code&gt;ActiveSupport::TestCase&lt;/code&gt; &lt;/a&gt;から継承します。</target>
        </trans-unit>
        <trans-unit id="2f48817ab34d92bde58ab86f2f428072514122ae" translate="yes" xml:space="preserve">
          <source>Model#persisted?</source>
          <target state="translated">Model#persisted?</target>
        </trans-unit>
        <trans-unit id="4e64f33abdbac5e5ff3f2e0c7fa34b64c6f354dd" translate="yes" xml:space="preserve">
          <source>Model::new</source>
          <target state="translated">Model::new</target>
        </trans-unit>
        <trans-unit id="a5db1f719d035d2f86dd53bc73b31dd5d8068fa4" translate="yes" xml:space="preserve">
          <source>ModelSchema</source>
          <target state="translated">ModelSchema</target>
        </trans-unit>
        <trans-unit id="d441ba5c7e24f4a6db2f90c5e92148cb34f38781" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods</source>
          <target state="translated">ModelSchema::ClassMethods</target>
        </trans-unit>
        <trans-unit id="f0c7506bc80fe2b9aa98f1bff85e0301e077fb1c" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#column_defaults</source>
          <target state="translated">ModelSchema::ClassMethods#column_defaults</target>
        </trans-unit>
        <trans-unit id="e4b875e3ee3c2296967f7855c30256163a85c06b" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#column_names</source>
          <target state="translated">ModelSchema::ClassMethods#column_names</target>
        </trans-unit>
        <trans-unit id="00b3898ec2cd08cbe44ab0fc9d248fb3e907a774" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#columns</source>
          <target state="translated">ModelSchema::ClassMethods#columns</target>
        </trans-unit>
        <trans-unit id="8a528d813dbaef3873723d8e3064d1398a98f18b" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#content_columns</source>
          <target state="translated">ModelSchema::ClassMethods#content_columns</target>
        </trans-unit>
        <trans-unit id="30ca4105a6f05ea7297f11d83896095972184c21" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#ignored_columns</source>
          <target state="translated">ModelSchema::ClassMethods#ignored_columns</target>
        </trans-unit>
        <trans-unit id="1226cd6aa58cebf7a5e070fb6137578c208b0802" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#ignored_columns=</source>
          <target state="translated">ModelSchema::ClassMethods#ignored_columns=</target>
        </trans-unit>
        <trans-unit id="ebe513fb11fd20dba0ba645e2edd6ed770f802f4" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#inheritance_column</source>
          <target state="translated">ModelSchema::ClassMethods#inheritance_column</target>
        </trans-unit>
        <trans-unit id="39d4c5f29d57690fb20af6be5053214a278517c1" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#inheritance_column=</source>
          <target state="translated">ModelSchema::ClassMethods#inheritance_column=</target>
        </trans-unit>
        <trans-unit id="638056b926ae5b5e9d04d40a36348eeff37ec51b" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#initialize_load_schema_monitor</source>
          <target state="translated">ModelSchema::ClassMethods#initialize_load_schema_monitor</target>
        </trans-unit>
        <trans-unit id="cfdf8706cebcfc8f7edbfa7e020989f53119191c" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#next_sequence_value</source>
          <target state="translated">ModelSchema::ClassMethods#next_sequence_value</target>
        </trans-unit>
        <trans-unit id="b3de9d78e61cce1bfb45aebe65dee739fec0c3b6" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#prefetch_primary_key?</source>
          <target state="translated">ModelSchema::ClassMethods#prefetch_primary_key?</target>
        </trans-unit>
        <trans-unit id="5c638cca0496e75fa8bdd3ef760687b62143bd87" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#protected_environments</source>
          <target state="translated">ModelSchema::ClassMethods#protected_environments</target>
        </trans-unit>
        <trans-unit id="b49a9d0078e1a6b59d5626d3edb9b0be56f14a2e" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#protected_environments=</source>
          <target state="translated">ModelSchema::ClassMethods#protected_environments=</target>
        </trans-unit>
        <trans-unit id="df0f9208df053b27a067b113784578798515de75" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#quoted_table_name</source>
          <target state="translated">ModelSchema::ClassMethods#quoted_table_name</target>
        </trans-unit>
        <trans-unit id="34aa90a1129948e9f4a0488047f67ef89969c5fc" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#reset_column_information</source>
          <target state="translated">ModelSchema::ClassMethods#reset_column_information</target>
        </trans-unit>
        <trans-unit id="4ec0770a96fdf697248442b1010e45ec5cc2648a" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#sequence_name</source>
          <target state="translated">ModelSchema::ClassMethods#sequence_name</target>
        </trans-unit>
        <trans-unit id="8aac7e2479a471101f94603dc47c6282e17718d1" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#sequence_name=</source>
          <target state="translated">ModelSchema::ClassMethods#sequence_name=</target>
        </trans-unit>
        <trans-unit id="32b16c33fdddfbf58ef1861aeb3e5fa24adc6132" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#table_exists?</source>
          <target state="translated">ModelSchema::ClassMethods#table_exists?</target>
        </trans-unit>
        <trans-unit id="2daf3196846b82ba6ce8254246befb81255884e0" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#table_name</source>
          <target state="translated">ModelSchema::ClassMethods#table_name</target>
        </trans-unit>
        <trans-unit id="17d64cbc84f6a89f2fb5594f6be6487222648148" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#table_name=</source>
          <target state="translated">ModelSchema::ClassMethods#table_name=</target>
        </trans-unit>
        <trans-unit id="b7be56821c21245487af1e9e89268a7fa3a26889" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#type_for_attribute</source>
          <target state="translated">ModelSchema::ClassMethods#type_for_attribute</target>
        </trans-unit>
        <trans-unit id="1bece6f5eaebefa7dd968a26fca03b1c68c0cca3" translate="yes" xml:space="preserve">
          <source>ModelSchema::implicit_order_column</source>
          <target state="translated">ModelSchema::implicit_order_column</target>
        </trans-unit>
        <trans-unit id="fb87d535030cc77f6eea99000bb3cea45e1edc55" translate="yes" xml:space="preserve">
          <source>ModelSchema::implicit_order_column=</source>
          <target state="translated">ModelSchema::implicit_order_column=</target>
        </trans-unit>
        <trans-unit id="431e95ad2f8f90f99412581d3cd5dfe16abee564" translate="yes" xml:space="preserve">
          <source>ModelSchema::internal_metadata_table_name</source>
          <target state="translated">ModelSchema::internal_metadata_table_name</target>
        </trans-unit>
        <trans-unit id="98b6b1f31f822ce45ba0cb29e89ac6123c8d48f4" translate="yes" xml:space="preserve">
          <source>ModelSchema::internal_metadata_table_name=</source>
          <target state="translated">ModelSchema::internal_metadata_table_name=</target>
        </trans-unit>
        <trans-unit id="8590c49fd4bb679ea3badb5e84d0a0953bbbd833" translate="yes" xml:space="preserve">
          <source>ModelSchema::pluralize_table_names</source>
          <target state="translated">ModelSchema::pluralize_table_names</target>
        </trans-unit>
        <trans-unit id="ebcf9310ab2b6b0318d091ceb7b1c703c0ac45b7" translate="yes" xml:space="preserve">
          <source>ModelSchema::pluralize_table_names=</source>
          <target state="translated">ModelSchema::pluralize_table_names=</target>
        </trans-unit>
        <trans-unit id="b43262e7c70a6f23fc2c45ec6b8a726355f76039" translate="yes" xml:space="preserve">
          <source>ModelSchema::primary_key_prefix_type</source>
          <target state="translated">ModelSchema::primary_key_prefix_type</target>
        </trans-unit>
        <trans-unit id="6c1cb907a3190d2cb95d00e64613bae792025c7c" translate="yes" xml:space="preserve">
          <source>ModelSchema::primary_key_prefix_type=</source>
          <target state="translated">ModelSchema::primary_key_prefix_type=</target>
        </trans-unit>
        <trans-unit id="de67ebceb5546c59b706f434213517811df93916" translate="yes" xml:space="preserve">
          <source>ModelSchema::schema_migrations_table_name</source>
          <target state="translated">ModelSchema::schema_migrations_table_name</target>
        </trans-unit>
        <trans-unit id="39ef611dd8b38aff324d220142a154c1bc699e95" translate="yes" xml:space="preserve">
          <source>ModelSchema::schema_migrations_table_name=</source>
          <target state="translated">ModelSchema::schema_migrations_table_name=</target>
        </trans-unit>
        <trans-unit id="a9efeee47a5a06ca364ef4cb85ffe51ec9687c6d" translate="yes" xml:space="preserve">
          <source>ModelSchema::table_name_prefix</source>
          <target state="translated">ModelSchema::table_name_prefix</target>
        </trans-unit>
        <trans-unit id="8f5e531aa919cbc02fa58144c8b391e2dc8af1fa" translate="yes" xml:space="preserve">
          <source>ModelSchema::table_name_prefix=</source>
          <target state="translated">ModelSchema::table_name_prefix=</target>
        </trans-unit>
        <trans-unit id="6c66134e0c6448bba29b0fc5c80c6bc88daf08db" translate="yes" xml:space="preserve">
          <source>ModelSchema::table_name_suffix</source>
          <target state="translated">ModelSchema::table_name_suffix</target>
        </trans-unit>
        <trans-unit id="33b6803388ddcb50e4870abc9e5cad2d62b56c1d" translate="yes" xml:space="preserve">
          <source>ModelSchema::table_name_suffix=</source>
          <target state="translated">ModelSchema::table_name_suffix=</target>
        </trans-unit>
        <trans-unit id="f3798f81c7b6fecad2cbfec741314f8a66c0eca3" translate="yes" xml:space="preserve">
          <source>Models</source>
          <target state="translated">Models</target>
        </trans-unit>
        <trans-unit id="3d9a5a4b2cc3bb27c0ddd861e63b64508ff0d4ba" translate="yes" xml:space="preserve">
          <source>Models are the final piece of the MVC puzzle. Next, we will connect all of the pieces together.</source>
          <target state="translated">モデルはMVCパズルの最後のピースです。次に、すべてのピースをつなげていきます。</target>
        </trans-unit>
        <trans-unit id="f61c2e48a73d059cd433cefde5962a9fe351d83a" translate="yes" xml:space="preserve">
          <source>Models are then connected with the &lt;code&gt;connects_to&lt;/code&gt; API via the &lt;code&gt;shards&lt;/code&gt; key:</source>
          <target state="translated">次に、モデルは &lt;code&gt;shards&lt;/code&gt; キーを介して &lt;code&gt;connects_to&lt;/code&gt; APIに接続されます。</target>
        </trans-unit>
        <trans-unit id="30f7aa9f7fd11d6341a4cf482eb7088bbc806644" translate="yes" xml:space="preserve">
          <source>Models in Rails use a singular name, and their corresponding database tables use a plural name. Rails provides a generator for creating models, which most Rails developers tend to use when creating new models. To create the new model, run this command in your terminal:</source>
          <target state="translated">Railsのモデルは単数形の名前を使用し、対応するデータベーステーブルは複数形の名前を使用します。Railsにはモデルを作成するためのジェネレーターが用意されており、ほとんどのRails開発者は新しいモデルを作成するときにこれを使う傾向があります。新しいモデルを作成するには、ターミナルで次のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="212e02f4daf070220d134976d698fbfd6435b031" translate="yes" xml:space="preserve">
          <source>Models uploaded files.</source>
          <target state="translated">モデルがファイルをアップロードしました。</target>
        </trans-unit>
        <trans-unit id="e3ea079ded57effba0d3c11311c33855f14ee35e" translate="yes" xml:space="preserve">
          <source>Modification</source>
          <target state="translated">Modification</target>
        </trans-unit>
        <trans-unit id="ad7314f5a2628d0dc9988e07053d3b3451d45d9b" translate="yes" xml:space="preserve">
          <source>Modifying Code to use Load Hooks</source>
          <target state="translated">ロードフックを使用するためのコードの修正</target>
        </trans-unit>
        <trans-unit id="4bb4fb2222bcd3fca349ae9ce5dfd4c33ad42390" translate="yes" xml:space="preserve">
          <source>Modifying code is generally straightforward. If you have a line of code that refers to a Rails framework such as &lt;code&gt;ActiveRecord::Base&lt;/code&gt; you can wrap that code in a load hook.</source>
          <target state="translated">コードの変更は一般的に簡単です。 &lt;code&gt;ActiveRecord::Base&lt;/code&gt; などのRailsフレームワークを参照するコード行がある場合は、そのコードをロードフックでラップできます。</target>
        </trans-unit>
        <trans-unit id="2625f3c6940984f6f3e4268c2479f099c0bbd324" translate="yes" xml:space="preserve">
          <source>Modifying code is generally straightforward. If you have a line of code that refers to a Rails framework such as &lt;code&gt;ActiveRecord::Base&lt;/code&gt; you can wrap that code in an &lt;code&gt;on_load&lt;/code&gt; hook.</source>
          <target state="translated">コードの変更は、通常は簡単です。 &lt;code&gt;ActiveRecord::Base&lt;/code&gt; などのRailsフレームワークを参照するコード行がある場合、そのコードを &lt;code&gt;on_load&lt;/code&gt; フックでラップできます。</target>
        </trans-unit>
        <trans-unit id="0b313c3c2650f892a30a82cbbbbfb0962b6ae7b5" translate="yes" xml:space="preserve">
          <source>Modifying code to use &lt;code&gt;on_load&lt;/code&gt; hooks</source>
          <target state="translated">&lt;code&gt;on_load&lt;/code&gt; フックを使用するようにコードを変更する</target>
        </trans-unit>
        <trans-unit id="b8ff02892916ff59f7fbd4e617fccd01f6bca576" translate="yes" xml:space="preserve">
          <source>Module</source>
          <target state="translated">Module</target>
        </trans-unit>
        <trans-unit id="35f34b19ff60e68c68b8e81cf54c250dd275712f" translate="yes" xml:space="preserve">
          <source>Module::Concerning</source>
          <target state="translated">Module::Concerning</target>
        </trans-unit>
        <trans-unit id="9d4eba0f3d95edee88947f6d524fd5959c3a0997" translate="yes" xml:space="preserve">
          <source>Module::DelegationError</source>
          <target state="translated">Module::DelegationError</target>
        </trans-unit>
        <trans-unit id="04e9462c0ff02bb9032b92abd45881a3c7e15fb7" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="translated">Modules</target>
        </trans-unit>
        <trans-unit id="8bfd6b5026a42edb8ae149f647de15fe2e57d087" translate="yes" xml:space="preserve">
          <source>Modules can be specified in different ways. All of the following calls include &lt;code&gt;FooHelper&lt;/code&gt;:</source>
          <target state="translated">モジュールはさまざまな方法で指定できます。次のすべての呼び出しには &lt;code&gt;FooHelper&lt;/code&gt; が含まれています。</target>
        </trans-unit>
        <trans-unit id="ec0f10698082c93db66cc3bacc7c4262043d5c37" translate="yes" xml:space="preserve">
          <source>Monitor</source>
          <target state="translated">Monitor</target>
        </trans-unit>
        <trans-unit id="541d63743d11a8fb491dae7ec4b904d23e530d3d" translate="yes" xml:space="preserve">
          <source>More Complete Examples</source>
          <target state="translated">より完全な例</target>
        </trans-unit>
        <trans-unit id="ba11e265967ffc1fc5eb1bfd1733a7bc95484fe4" translate="yes" xml:space="preserve">
          <source>More Differences</source>
          <target state="translated">より多くの違い</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
