<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="crystal">
    <body>
      <group id="crystal">
        <trans-unit id="5f59918ff367bc32efced5deba138d5dc0263842" translate="yes" xml:space="preserve">
          <source>If you want to invoke the program's method, even though the current type defines a method with the same name, prefix the call with &lt;code&gt;::&lt;/code&gt;:</source>
          <target state="translated">プログラムのメソッドを呼び出したい場合、現在のタイプが同じ名前のメソッドを定義している場合でも、呼び出しの前に &lt;code&gt;::&lt;/code&gt; を付けます。</target>
        </trans-unit>
        <trans-unit id="9020343752a86deb77b79cd68b3d8b90dd55555d" translate="yes" xml:space="preserve">
          <source>If you want to log an exception, you can indicate it in the &lt;code&gt;exception:&lt;/code&gt; named argument.</source>
          <target state="translated">例外をログに記録する場合は、 &lt;code&gt;exception:&lt;/code&gt; named引数で指定できます。</target>
        </trans-unit>
        <trans-unit id="35c586a9a5f5e8f10a1de56e853440af82e8a1e4" translate="yes" xml:space="preserve">
          <source>If you want to pass &lt;code&gt;NULL&lt;/code&gt; instead of a callback, just pass &lt;code&gt;nil&lt;/code&gt;:</source>
          <target state="translated">コールバックの代わりに &lt;code&gt;NULL&lt;/code&gt; を渡したい場合は、単に &lt;code&gt;nil&lt;/code&gt; を渡してください：</target>
        </trans-unit>
        <trans-unit id="95ba118065f124836ada1dae1c7d7a1c2f20798b" translate="yes" xml:space="preserve">
          <source>If you want to verify that all your code has been formatted with &lt;code&gt;crystal tool format&lt;/code&gt;, add a script for &lt;code&gt;crystal tool format --check&lt;/code&gt;. If the code is not formatted correctly, this will &lt;a href=&quot;https://docs.travis-ci.com/user/for-beginners/#breaking-the-build&quot;&gt;break the build&lt;/a&gt; just as failing tests would.</source>
          <target state="translated">すべてのコードが &lt;code&gt;crystal tool format&lt;/code&gt; でフォーマットされていることを確認する場合は、Crystalツール形式のスクリプト &lt;code&gt;crystal tool format --check&lt;/code&gt; を追加します。コードが正しくフォーマットされていない場合、失敗したテストと同様に&lt;a href=&quot;https://docs.travis-ci.com/user/for-beginners/#breaking-the-build&quot;&gt;ビルド&lt;/a&gt;が中断されます。</target>
        </trans-unit>
        <trans-unit id="cf4aef3252cad6456eca00eb1161df1deafc2382" translate="yes" xml:space="preserve">
          <source>If you would like more information about &lt;code&gt;bin/crystal&lt;/code&gt;, check out the &lt;a href=&quot;../using_the_compiler/index&quot;&gt;using the compiler&lt;/a&gt; documentation.</source>
          <target state="translated">あなたはについての詳細希望の場合は &lt;code&gt;bin/crystal&lt;/code&gt; 、チェックアウト&lt;a href=&quot;../using_the_compiler/index&quot;&gt;使用して、コンパイラの&lt;/a&gt;マニュアルを参照して。</target>
        </trans-unit>
        <trans-unit id="fb82b7bc70519f4f2db16a6ca379e6c49c78895f" translate="yes" xml:space="preserve">
          <source>If you'd like you can also add a &lt;code&gt;shields.io&lt;/code&gt; badge for the release. GitLab doesn't have full support for this kind of thing, and until someone adds a &lt;a href=&quot;https://github.com/badges/shields/blob/master/doc/TUTORIAL.md&quot;&gt;version badge for gitlab&lt;/a&gt; to shields.io, we'll have to just code in the version number in the URLs directly.</source>
          <target state="translated">必要に &lt;code&gt;shields.io&lt;/code&gt; て、リリース用のshields.ioバッジを追加することもできます。GitLabはこの種のことを完全にはサポートしていません。誰かが、&lt;a href=&quot;https://github.com/badges/shields/blob/master/doc/TUTORIAL.md&quot;&gt;gitlabのバージョンバッジをshields.io&lt;/a&gt;に追加するまでは、URLにバージョン番号を直接コーディングする必要があります。</target>
        </trans-unit>
        <trans-unit id="cc2b9dfcd7352fe0bb387189e0d5ab88b584c912" translate="yes" xml:space="preserve">
          <source>If you're on a &lt;code&gt;-RELEASE&lt;/code&gt; version of FreeBSD, by default &lt;code&gt;pkg&lt;/code&gt; is configured for the &lt;code&gt;quarterly&lt;/code&gt; package set, which is updated every quarter (except for security patches, which are included ASAP).</source>
          <target state="translated">あなたがにしている場合は &lt;code&gt;-RELEASE&lt;/code&gt; のFreeBSDのバージョンで、デフォルトでは &lt;code&gt;pkg&lt;/code&gt; 用に設定されている &lt;code&gt;quarterly&lt;/code&gt; （至急含まれているセキュリティパッチを除く）四半期ごとに更新されたパッケージセット。</target>
        </trans-unit>
        <trans-unit id="5e759f241669f8bab60848fe61cabfe006f9ba86" translate="yes" xml:space="preserve">
          <source>If you're planning to contribute to the language itself you might find useful to install LLVM as well. So replace the last line with:</source>
          <target state="translated">言語自体に貢献しようと思っているのであれば、LLVMもインストールしておくと便利かもしれません。ということで、最後の行を次のように置き換えてください。</target>
        </trans-unit>
        <trans-unit id="6618bc7455279890292923d513388ccc28194ee3" translate="yes" xml:space="preserve">
          <source>If you've been following along, your &lt;code&gt;.travis.yml&lt;/code&gt; file should look something like this:</source>
          <target state="translated">&lt;code&gt;.travis.yml&lt;/code&gt; ている場合、.travis.ymlファイルは次のようになります。</target>
        </trans-unit>
        <trans-unit id="081a86d8835d5147ede55f7c5f68848f67509bf5" translate="yes" xml:space="preserve">
          <source>If your shard builds an application, both &lt;code&gt;shard.yml&lt;/code&gt; and &lt;code&gt;shard.lock&lt;/code&gt; should be checked into version control to provide reproducible dependency installs. If it is only a library for other shards to depend on, &lt;code&gt;shard.lock&lt;/code&gt; should &lt;em&gt;not&lt;/em&gt; be checked in, only &lt;code&gt;shard.yml&lt;/code&gt;. It's good advice to add it to &lt;code&gt;.gitignore&lt;/code&gt; (the &lt;a href=&quot;../using_the_compiler/index#crystal-init&quot;&gt;&lt;code&gt;crystal init&lt;/code&gt;&lt;/a&gt; does this automatically when initializing a &lt;code&gt;lib&lt;/code&gt; repository).</source>
          <target state="translated">シャードがアプリケーションをビルドする場合、再現可能な依存関係のインストールを提供するために、 &lt;code&gt;shard.yml&lt;/code&gt; と &lt;code&gt;shard.lock&lt;/code&gt; の両方をバージョン管理にチェックインする必要があります。他の破片が依存することが唯一のライブラリである場合、 &lt;code&gt;shard.lock&lt;/code&gt; はすべき&lt;em&gt;ではない&lt;/em&gt;、だけで確認すること &lt;code&gt;shard.yml&lt;/code&gt; 。 &lt;code&gt;.gitignore&lt;/code&gt; に追加することをお勧めします（ &lt;code&gt;lib&lt;/code&gt; リポジトリを初期化するときに、&lt;a href=&quot;../using_the_compiler/index#crystal-init&quot;&gt; &lt;code&gt;crystal init&lt;/code&gt; &lt;/a&gt;はこれを自動的に行います）。</target>
        </trans-unit>
        <trans-unit id="f704f1f4341c2e007c25bf130f73a86589aaf7f3" translate="yes" xml:space="preserve">
          <source>Ignore internal document encoding hint</source>
          <target state="translated">内部文書エンコーディングのヒントを無視する</target>
        </trans-unit>
        <trans-unit id="9f18df8db617aed015b3aee7008f1bc14e64ec36" translate="yes" xml:space="preserve">
          <source>Ignore white space and &lt;code&gt;#&lt;/code&gt; comments.</source>
          <target state="translated">空白と &lt;code&gt;#&lt;/code&gt; コメントは無視してください。</target>
        </trans-unit>
        <trans-unit id="e769494ea641bd01735c8978b12dae80bc631fc2" translate="yes" xml:space="preserve">
          <source>Illegal byte sequence</source>
          <target state="translated">不正なバイト列</target>
        </trans-unit>
        <trans-unit id="3176fdb344f7026fb9cd9da003d83547cd35fc12" translate="yes" xml:space="preserve">
          <source>Illegal seek</source>
          <target state="translated">違法シーク</target>
        </trans-unit>
        <trans-unit id="baba298a8e3227dae43870b3d2918fa910e82d50" translate="yes" xml:space="preserve">
          <source>Image: &lt;code&gt;https://img.shields.io/badge/docs-available-brightgreen.svg&lt;/code&gt;</source>
          <target state="translated">画像： &lt;code&gt;https://img.shields.io/badge/docs-available-brightgreen.svg&lt;/code&gt; ：//img.shields.io/badge/docs-available-brightgreen.svg</target>
        </trans-unit>
        <trans-unit id="88424dd93bbaf80447a4c645f9560b90b2285a0f" translate="yes" xml:space="preserve">
          <source>Image: &lt;code&gt;https://img.shields.io/badge/release-&amp;lt;VERSION&amp;gt;-brightgreen.svg&lt;/code&gt;</source>
          <target state="translated">画像： &lt;code&gt;https://img.shields.io/badge/release-&amp;lt;VERSION&amp;gt;-brightgreen.svg&lt;/code&gt; ：//img.shields.io/badge/release- &amp;lt;VERSION&amp;gt; -brightgreen.svg</target>
        </trans-unit>
        <trans-unit id="12ec9ca858442888f051cfcf01d2d10b2f0cf875" translate="yes" xml:space="preserve">
          <source>Immediately resumes execution of this fiber.</source>
          <target state="translated">直ちにこのファイバーの実行を再開します。</target>
        </trans-unit>
        <trans-unit id="9bb823f2686162658d58ba28d762df95e581159c" translate="yes" xml:space="preserve">
          <source>Immutable structured metadata information for logging.</source>
          <target state="translated">ロギングのための不変の構造化メタデータ情報。</target>
        </trans-unit>
        <trans-unit id="b78785e84488212efeb2df817e6c0811fde489e5" translate="yes" xml:space="preserve">
          <source>Implement XInclude substitution</source>
          <target state="translated">XInclude 置換の実装</target>
        </trans-unit>
        <trans-unit id="aa3d0e1b2fa62620ef593c210a94d8c687db07c1" translate="yes" xml:space="preserve">
          <source>Implementation based on Mathias Bynens' &lt;a href=&quot;https://github.com/bestiejs/punycode.js&quot;&gt;punnycode.js&lt;/a&gt; project.</source>
          <target state="translated">MathiasBynensの&lt;a href=&quot;https://github.com/bestiejs/punycode.js&quot;&gt;punnycode.js&lt;/a&gt;プロジェクトに基づく実装。</target>
        </trans-unit>
        <trans-unit id="b7193857d3b73c5303f625327d016375cad6c9bd" translate="yes" xml:space="preserve">
          <source>Implementation is based on an open hash table. Two objects refer to the same hash key when their hash value (&lt;code&gt;&lt;a href=&quot;object#hash-instance-method&quot;&gt;Object#hash&lt;/a&gt;&lt;/code&gt;) is identical and both objects are equal to each other (&lt;code&gt;&lt;a href=&quot;object#==(other)-instance-method&quot;&gt;Object#==&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">実装は、オープンハッシュテーブルに基づいています。2つのオブジェクトは、ハッシュ値（ &lt;code&gt;&lt;a href=&quot;object#hash-instance-method&quot;&gt;Object#hash&lt;/a&gt;&lt;/code&gt; ）が同一で、両方のオブジェクトが互いに等しい場合（ &lt;code&gt;&lt;a href=&quot;object#==(other)-instance-method&quot;&gt;Object#==&lt;/a&gt;&lt;/code&gt; ）、同じハッシュキーを参照します。</target>
        </trans-unit>
        <trans-unit id="7ca53fef26c6216135423574d73f480c1c3ce1dc" translate="yes" xml:space="preserve">
          <source>Implementation of string interpolation of a char and a string.</source>
          <target state="translated">charと文字列の文字列補間の実装。</target>
        </trans-unit>
        <trans-unit id="804771dc966ccb9578ced5c9bbbaa9d8c9b44561" translate="yes" xml:space="preserve">
          <source>Implementation of string interpolation of a single non-string value.</source>
          <target state="translated">単一の非文字列値の文字列補間の実装。</target>
        </trans-unit>
        <trans-unit id="7bcf16ecba3652e5eb6eaec31b49c78673d34506" translate="yes" xml:space="preserve">
          <source>Implementation of string interpolation of a single string.</source>
          <target state="translated">単一文字列の文字列補間の実装。</target>
        </trans-unit>
        <trans-unit id="3f7545dceab2eb0fe1c696018b9d94838a025a5b" translate="yes" xml:space="preserve">
          <source>Implementation of string interpolation of a string and a char.</source>
          <target state="translated">文字列とcharの文字列補間の実装。</target>
        </trans-unit>
        <trans-unit id="3aa5c022db189a15e98bb1512edd10acfe6df38f" translate="yes" xml:space="preserve">
          <source>Implementation of string interpolation of multiple string values.</source>
          <target state="translated">複数の文字列値の文字列補間の実装。</target>
        </trans-unit>
        <trans-unit id="9bcc47eeb4dca96f58981e24b921fd1c2924b349" translate="yes" xml:space="preserve">
          <source>Implementation of string interpolation of multiple, possibly non-string values.</source>
          <target state="translated">複数の、おそらく文字列ではない値の文字列補間の実装。</target>
        </trans-unit>
        <trans-unit id="f88a8bea59b1255ab1ee0d9099c85cd391463728" translate="yes" xml:space="preserve">
          <source>Implementor that returns &lt;code&gt;&lt;a href=&quot;usedefault&quot;&gt;Channel::UseDefault&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;&lt;a href=&quot;selectaction#execute:DeliveryState-instance-method&quot;&gt;#execute&lt;/a&gt;&lt;/code&gt; must redefine &lt;code&gt;&lt;a href=&quot;selectaction#default_result-instance-method&quot;&gt;#default_result&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;usedefault&quot;&gt;Channel::UseDefault&lt;/a&gt;&lt;/code&gt; でChannel :: UseDefaultを返す実装者は、 &lt;code&gt;&lt;a href=&quot;selectaction#execute:DeliveryState-instance-method&quot;&gt;#execute&lt;/a&gt;&lt;/code&gt; を再定義する必要があり &lt;code&gt;&lt;a href=&quot;selectaction#default_result-instance-method&quot;&gt;#default_result&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1a13cf35486afca7a9a49f42ce8dd25245bef7d4" translate="yes" xml:space="preserve">
          <source>Implements &lt;code&gt;&lt;a href=&quot;../../socket/server&quot;&gt;::Socket::Server&lt;/a&gt;&lt;a href=&quot;server#accept:OpenSSL::SSL::Socket::Server-instance-method&quot;&gt;#accept&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../socket/server&quot;&gt;::Socket::Server&lt;/a&gt;&lt;a href=&quot;server#accept:OpenSSL::SSL::Socket::Server-instance-method&quot;&gt;#accept&lt;/a&gt;&lt;/code&gt; 実装します。</target>
        </trans-unit>
        <trans-unit id="6febf3423b5a2fd5d708d0cafafae45278263e8d" translate="yes" xml:space="preserve">
          <source>Implements &lt;code&gt;&lt;a href=&quot;../../socket/server&quot;&gt;::Socket::Server&lt;/a&gt;&lt;a href=&quot;server#accept?:OpenSSL::SSL::Socket::Server?-instance-method&quot;&gt;#accept?&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../socket/server&quot;&gt;::Socket::Server&lt;/a&gt;&lt;a href=&quot;server#accept?:OpenSSL::SSL::Socket::Server?-instance-method&quot;&gt;#accept?&lt;/a&gt;&lt;/code&gt; 実装します#accept？。</target>
        </trans-unit>
        <trans-unit id="48ecd16311ac50b33f9d47da09f4b77c6cc353d5" translate="yes" xml:space="preserve">
          <source>Implements &lt;code&gt;&lt;a href=&quot;../../socket/server#accept:IO-instance-method&quot;&gt;::Socket::Server#accept&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../socket/server#accept:IO-instance-method&quot;&gt;::Socket::Server#accept&lt;/a&gt;&lt;/code&gt; 実装します。</target>
        </trans-unit>
        <trans-unit id="22608e8092985c6549a29f91270383e8e65f44a0" translate="yes" xml:space="preserve">
          <source>Implements &lt;code&gt;&lt;a href=&quot;../../socket/server#accept?:IO?-instance-method&quot;&gt;::Socket::Server#accept?&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../socket/server#accept?:IO?-instance-method&quot;&gt;::Socket::Server#accept?&lt;/a&gt;&lt;/code&gt; 実装します 。</target>
        </trans-unit>
        <trans-unit id="771d136be14b58d53e398f9de37fd2c088f2aed5" translate="yes" xml:space="preserve">
          <source>Implements the Adler32 checksum algorithm.</source>
          <target state="translated">Adler32チェックサムアルゴリズムを実装しています。</target>
        </trans-unit>
        <trans-unit id="28275372538968891a6e160064b912d23ba38d2c" translate="yes" xml:space="preserve">
          <source>Implements the CRC32 checksum algorithm.</source>
          <target state="translated">CRC32チェックサムアルゴリズムを実装しています。</target>
        </trans-unit>
        <trans-unit id="522d7f2bf78da2c71f62f15e7ea93767f964798c" translate="yes" xml:space="preserve">
          <source>Implements the MD5 digest algorithm.</source>
          <target state="translated">MD5 ダイジェストアルゴリズムを実装します。</target>
        </trans-unit>
        <trans-unit id="6e6517a6b07ad2994f4db48b1a5fca25d96b5794" translate="yes" xml:space="preserve">
          <source>Implements the SHA1 digest algorithm.</source>
          <target state="translated">SHA1 ダイジェストアルゴリズムを実装します。</target>
        </trans-unit>
        <trans-unit id="331ea055bb5028802932bef7914697137c7c319d" translate="yes" xml:space="preserve">
          <source>Implements the SHA256 digest algorithm.</source>
          <target state="translated">SHA256ダイジェストアルゴリズムを実装しています。</target>
        </trans-unit>
        <trans-unit id="7f2a402452510e86b45d4cadb8a3b15de0147275" translate="yes" xml:space="preserve">
          <source>Implements the SHA512 digest algorithm.</source>
          <target state="translated">SHA512ダイジェストアルゴリズムを実装しています。</target>
        </trans-unit>
        <trans-unit id="20c33c1d5f4fa18cbeb1939fec24c2dc189e85fc" translate="yes" xml:space="preserve">
          <source>Implicit constants, &lt;code&gt;None&lt;/code&gt; and &lt;code&gt;All&lt;/code&gt;, are automatically added to these enums, where &lt;code&gt;None&lt;/code&gt; has the value &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;All&lt;/code&gt; has the &quot;or&quot;ed value of all constants.</source>
          <target state="translated">暗黙の定数、 &lt;code&gt;None&lt;/code&gt; と &lt;code&gt;All&lt;/code&gt; 、自動的にこれらの列挙型に追加されている &lt;code&gt;None&lt;/code&gt; 値がない &lt;code&gt;0&lt;/code&gt; をし、 &lt;code&gt;All&lt;/code&gt; すべての定数の「または」ED値を持っています。</target>
        </trans-unit>
        <trans-unit id="6e67fca40f0865559decb7988447ee1a5d8afa90" translate="yes" xml:space="preserve">
          <source>Implicit-object allowed</source>
          <target state="translated">暗黙オブジェクト許可</target>
        </trans-unit>
        <trans-unit id="9097990aa250d8f26c2cfe005b8d4cc9d881781d" translate="yes" xml:space="preserve">
          <source>In Crystal everything is an object. The definition of an object boils down to these points:</source>
          <target state="translated">クリスタルでは、すべてのものがオブジェクトです。オブジェクトの定義は以下の点に集約されます</target>
        </trans-unit>
        <trans-unit id="bbbbe6b64b087c3c38ecd283503cbc87993ea670" translate="yes" xml:space="preserve">
          <source>In Crystal we have two ways of building this connection. And so, coming up next, we are going to present examples with some advice on when to use each one.</source>
          <target state="translated">クリスタルには、この接続を構築するための2つの方法があります。そこで、次は例を挙げて、それぞれを使うときのアドバイスを紹介します。</target>
        </trans-unit>
        <trans-unit id="5adb3016af8e6fb7aa092ef4f2cbea0f28a08306" translate="yes" xml:space="preserve">
          <source>In Crystal, &lt;code&gt;puts&lt;/code&gt; will invoke &lt;code&gt;to_s(io)&lt;/code&gt; on the object, passing it the IO to which the string representation should be written.</source>
          <target state="translated">Crystalでは、 &lt;code&gt;puts&lt;/code&gt; はオブジェクトに対して &lt;code&gt;to_s(io)&lt;/code&gt; を呼び出し、文字列表現が書き込まれるIOを渡します。</target>
        </trans-unit>
        <trans-unit id="ba9466fcc2a8dc340d36e807c6fd6035b41d1e3d" translate="yes" xml:space="preserve">
          <source>In Debian derived distributions, you can use the official Crystal repository.</source>
          <target state="translated">Debian 派生ディストリビューションでは、公式の Crystal リポジトリを使うことができます。</target>
        </trans-unit>
        <trans-unit id="3420906df7a8098222f85752d96256b7fae157a9" translate="yes" xml:space="preserve">
          <source>In RedHat derived distributions, you can use the official Crystal repository.</source>
          <target state="translated">RedHat 派生ディストリビューションでは、公式の Crystal リポジトリを使用することができます。</target>
        </trans-unit>
        <trans-unit id="bc0b7757f3880ee62287025aecd965f943f82021" translate="yes" xml:space="preserve">
          <source>In a Docker-based &lt;em&gt;runner&lt;/em&gt; we need to run &lt;code&gt;shards install&lt;/code&gt; explicitly, like this:</source>
          <target state="translated">Dockerベースの&lt;em&gt;ランナーで&lt;/em&gt;は、次のように &lt;code&gt;shards install&lt;/code&gt; 明示的に実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="b20d35e011fcff7c9bfba4fa9e8f1fd220651dd6" translate="yes" xml:space="preserve">
          <source>In all of these cases you can use the special &lt;code&gt;*&lt;/code&gt; and &lt;code&gt;**&lt;/code&gt; suffixes:</source>
          <target state="translated">これらすべてのケースで、特別な &lt;code&gt;*&lt;/code&gt; および &lt;code&gt;**&lt;/code&gt; サフィックスを使用できます。</target>
        </trans-unit>
        <trans-unit id="3933f8aefcde5fa10556fdc0355de356ee6b2888" translate="yes" xml:space="preserve">
          <source>In all the previous examples, the rolling back is &lt;strong&gt;implicit&lt;/strong&gt;, but we can also tell the transaction to rollback:</source>
          <target state="translated">前のすべての例では、ロールバックは&lt;strong&gt;暗黙的&lt;/strong&gt;ですが、トランザクションにロールバックを指示することもできます。</target>
        </trans-unit>
        <trans-unit id="4dd338898fb2109e29819cb3d608e19399d6e3c9" translate="yes" xml:space="preserve">
          <source>In binary file mode, line endings are not converted to CRLF on Windows.</source>
          <target state="translated">バイナリファイルモードでは、Windowsでは行末がCRLFに変換されません。</target>
        </trans-unit>
        <trans-unit id="1f057cf08f3968ab6ed1ba375b21b72ec05df09e" translate="yes" xml:space="preserve">
          <source>In both cases you can use nested names and they will be looked up in nested directories:</source>
          <target state="translated">どちらの場合もネストされた名前を使うことができ、ネストされたディレクトリで検索されます。</target>
        </trans-unit>
        <trans-unit id="0531d97dcdf79342365f9992f005c8e70a5ff968" translate="yes" xml:space="preserve">
          <source>In case an example needs to be pending on some condition that requires executing it, this allows to mark it as such rather than letting it fail or never run.</source>
          <target state="translated">例題を実行しなければならないような条件で保留にする必要がある場合、失敗したり実行されなかったりするのではなく、そのようにマークすることができます。</target>
        </trans-unit>
        <trans-unit id="63c06fabb66d59476ecdf33963fba52384551264" translate="yes" xml:space="preserve">
          <source>In case we are wondering what the job &lt;a href=&quot;https://circleci.com/orbs/registry/orb/manastech/crystal#jobs-test&quot;&gt;crystal/test&lt;/a&gt; does, we always may see the source code.</source>
          <target state="translated">&lt;a href=&quot;https://circleci.com/orbs/registry/orb/manastech/crystal#jobs-test&quot;&gt;クリスタル/テスト&lt;/a&gt;の仕事が何をするのか疑問に思っている場合は、常にソースコードが表示されることがあります。</target>
        </trans-unit>
        <trans-unit id="caaf8b4d9afa41bb58f840ef379bc2c3ad6329f7" translate="yes" xml:space="preserve">
          <source>In case we want to build richer CLI applications, there are libraries that can help us. Here we will name two well-known libraries: &lt;code&gt;Readline&lt;/code&gt; and &lt;code&gt;NCurses&lt;/code&gt;.</source>
          <target state="translated">よりリッチなCLIアプリケーションを構築したい場合は、役立つライブラリがあります。ここでは、 &lt;code&gt;Readline&lt;/code&gt; と &lt;code&gt;NCurses&lt;/code&gt; という2つの有名なライブラリに名前を付けます。</target>
        </trans-unit>
        <trans-unit id="af5f6851b0dc51557521b3f2a040fcad95429166" translate="yes" xml:space="preserve">
          <source>In class names, acronyms are &lt;em&gt;all-uppercase&lt;/em&gt;. For example, &lt;code&gt;HTTP&lt;/code&gt;, and &lt;code&gt;LibXML&lt;/code&gt;.</source>
          <target state="translated">クラス名では、頭字語は&lt;em&gt;すべて大文字&lt;/em&gt;です。たとえば、 &lt;code&gt;HTTP&lt;/code&gt; や &lt;code&gt;LibXML&lt;/code&gt; などです。</target>
        </trans-unit>
        <trans-unit id="92b90c702b82602a8ad11637852efc2a0a14c17d" translate="yes" xml:space="preserve">
          <source>In code examples, the comment &lt;code&gt;#=&amp;gt;&lt;/code&gt; is used to show the value of an expression. For example:</source>
          <target state="translated">コード例では、コメント &lt;code&gt;#=&amp;gt;&lt;/code&gt; を使用して式の値を示しています。例えば：</target>
        </trans-unit>
        <trans-unit id="dd8e35bbf336b39b920f37a26849fc466895e2d6" translate="yes" xml:space="preserve">
          <source>In contrast, &lt;code&gt;&lt;a href=&quot;time#to_local_in(location:Location)-instance-method&quot;&gt;#to_local_in&lt;/a&gt;&lt;/code&gt; changes to a different location while preserving the same wall time, which results in different instants on the time line.</source>
          <target state="translated">対照的に、 &lt;code&gt;&lt;a href=&quot;time#to_local_in(location:Location)-instance-method&quot;&gt;#to_local_in&lt;/a&gt;&lt;/code&gt; は、同じ実時間を維持しながら別の場所に変更します。これにより、タイムライン上の異なる瞬間が生じます。</target>
        </trans-unit>
        <trans-unit id="91252187c9622577b97522e09b6689e3975ee758" translate="yes" xml:space="preserve">
          <source>In either case, &lt;code&gt;&amp;amp;.some_method&lt;/code&gt; is an argument passed to &lt;code&gt;method&lt;/code&gt;. This argument is syntactically equivalent to the block variants. It is only syntactic sugar and does not have any performance penalty.</source>
          <target state="translated">どちらの場合も、 &lt;code&gt;&amp;amp;.some_method&lt;/code&gt; は &lt;code&gt;method&lt;/code&gt; に渡される引数です。この引数は、構文的にはブロックバリアントと同等です。これは単なる構文上の砂糖であり、パフォーマンスの低下はありません。</target>
        </trans-unit>
        <trans-unit id="baabc5553f8c1404a113ef41725f49489e618aa7" translate="yes" xml:space="preserve">
          <source>In fact, the above code doesn't need the return type restriction in &lt;code&gt;self.unknown&lt;/code&gt;. The reason is that the compiler will also look at a class method's body and if it can apply one of the previous rules (it's a &lt;code&gt;new&lt;/code&gt; method, or it's a literal, etc.) it will infer the type from that expression. So, the above can be simply written like this:</source>
          <target state="translated">実際、上記のコードは &lt;code&gt;self.unknown&lt;/code&gt; の戻り値の型制限を必要としません。その理由は、コンパイラーがクラスメソッドの本体も参照し、以前のルールのいずれかを適用できる場合（ &lt;code&gt;new&lt;/code&gt; メソッドやリテラルなど）、その式から型を推測するためです。したがって、上記は次のように簡単に書くことができます：</target>
        </trans-unit>
        <trans-unit id="f5e98a764080798c366f229c0388793139f23457" translate="yes" xml:space="preserve">
          <source>In floored division, given two integers x and y:</source>
          <target state="translated">フロアー除算では、2つの整数xとyが与えられます。</target>
        </trans-unit>
        <trans-unit id="6c7bdc1551e860e2537e62a30de5df863b4efb84" translate="yes" xml:space="preserve">
          <source>In generated documentation the dummy &lt;code&gt;&amp;amp;block&lt;/code&gt; method will always appear, regardless of you writing it or not.</source>
          <target state="translated">生成されたドキュメントでは、作成したかどうかに関係なく、ダミーの &lt;code&gt;&amp;amp;block&lt;/code&gt; メソッドが常に表示されます。</target>
        </trans-unit>
        <trans-unit id="5c0d97ace8f4764818f14af7c2827d661b52d173" translate="yes" xml:space="preserve">
          <source>In its basic form, it allows matching a value against other values:</source>
          <target state="translated">基本的な形式では、他の値とのマッチングを可能にします。</target>
        </trans-unit>
        <trans-unit id="ba3d240203a8b6c79f2e44535d1881beb0aa8f5e" translate="yes" xml:space="preserve">
          <source>In macro definitions, arguments are passed as their AST nodes, giving you access to them in macro expansions (&lt;code&gt;{{some_macro_argument}}&lt;/code&gt;). However that is not true for macro defs. Here the argument list is that of the method generated by the macro def. You cannot access their compile-time value.</source>
          <target state="translated">マクロ定義では、引数はASTノードとして渡され、マクロ展開でそれらにアクセスできます（ &lt;code&gt;{{some_macro_argument}}&lt;/code&gt; ）。ただし、これはマクロ定義には当てはまりません。ここでの引数リストは、マクロdefによって生成されたメソッドのリストです。それらのコンパイル時の値にはアクセスできません。</target>
        </trans-unit>
        <trans-unit id="94787ae1d7dc4b98ad101c6e6e42c45d18f1d1de" translate="yes" xml:space="preserve">
          <source>In macro definitions, arguments are passed as their AST nodes, giving you access to them in macro expansions (&lt;code&gt;{{some_macro_argument}}&lt;/code&gt;). However that is not true for macro defs. Here the parameter list is that of the method generated by the macro def. You cannot access the call arguments during compile-time.</source>
          <target state="translated">マクロ定義では、引数はASTノードとして渡され、マクロ展開（ &lt;code&gt;{{some_macro_argument}}&lt;/code&gt; ）で引数にアクセスできるようにします。ただし、これはマクロ定義には当てはまりません。ここでのパラメータリストは、マクロdefによって生成されたメソッドのリストです。コンパイル時に呼び出し引数にアクセスすることはできません。</target>
        </trans-unit>
        <trans-unit id="efdf26967d789974e8d26a48672ad46762c3b391" translate="yes" xml:space="preserve">
          <source>In many programming languages what will happen is that &lt;code&gt;to_s&lt;/code&gt;, or a similar method for converting the object to its string representation, will be invoked, and then that string will be written to the standard output. This works, but it has a flaw: it creates an intermediate string, in heap memory, only to write it and then discard it. This, involves a heap memory allocation and gives a bit of work to the GC.</source>
          <target state="translated">多くのプログラミング言語では、 &lt;code&gt;to_s&lt;/code&gt; またはオブジェクトを文字列表現に変換する同様のメソッドが呼び出され、その文字列が標準出力に書き込まれます。これは機能しますが、欠点があります。それは、ヒープ・メモリーに中間ストリングを作成し、それを書き込んでから破棄するだけです。これには、ヒープメモリの割り当てが含まれ、GCに少し作業を与えます。</target>
        </trans-unit>
        <trans-unit id="d6fcf1095841b67382c241734de7c6c3270ef129" translate="yes" xml:space="preserve">
          <source>In method names, acronyms are &lt;em&gt;all-lowercase&lt;/em&gt;. For example &lt;code&gt;#from_json&lt;/code&gt;, &lt;code&gt;#to_io&lt;/code&gt;.</source>
          <target state="translated">メソッド名では、頭字語は&lt;em&gt;すべて小文字&lt;/em&gt;です。たとえば、 &lt;code&gt;#from_json&lt;/code&gt; 、 &lt;code&gt;#to_io&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3a360bf63eddcf8c579e6470067ffcccdad8911d" translate="yes" xml:space="preserve">
          <source>In native &lt;em&gt;runners&lt;/em&gt; (&lt;code&gt;language: crystal&lt;/code&gt;), Travis CI already automatically installs shards dependencies using &lt;code&gt;shards install&lt;/code&gt;. To improve build performance we may add &lt;a href=&quot;#caching&quot;&gt;caching&lt;/a&gt; on top of that.</source>
          <target state="translated">ネイティブでは&lt;em&gt;ランナー&lt;/em&gt;（ &lt;code&gt;language: crystal&lt;/code&gt; ）、トラヴィスCIは、すでに自動的に使用して破片の依存関係をインストール &lt;code&gt;shards install&lt;/code&gt; 。ビルドのパフォーマンスを向上させるために、その上に&lt;a href=&quot;#caching&quot;&gt;キャッシュ&lt;/a&gt;を追加する場合があります。</target>
        </trans-unit>
        <trans-unit id="abef0c25fad769d15456af4cd758bf852ce49066" translate="yes" xml:space="preserve">
          <source>In one moment a transfer is made from one account to the other. For example, &lt;em&gt;John transfers $50 to Sarah&lt;/em&gt;</source>
          <target state="translated">ある瞬間に、ある口座から別の口座への送金が行われます。たとえば、&lt;em&gt;ジョンはサラに$ 50を送金します&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b9b20353fa4a607cc54a9a084e3781b0d325118f" translate="yes" xml:space="preserve">
          <source>In order to achieve this, the compiler executable provides two flags:</source>
          <target state="translated">これを実現するために、コンパイラ実行ファイルは2つのフラグを提供します。</target>
        </trans-unit>
        <trans-unit id="232cb10cff65d24e1741174be11a5f0db58c43bc" translate="yes" xml:space="preserve">
          <source>In order to create a new object with the same value as an existing one, there are two possible routes:</source>
          <target state="translated">既存のオブジェクトと同じ値を持つ新しいオブジェクトを作成するためには、2つのルートが考えられます。</target>
        </trans-unit>
        <trans-unit id="5fca536d6d8a121e64fa8a24226d59515e156fc8" translate="yes" xml:space="preserve">
          <source>In order to release a Crystal Shard, and follow along with this tutorial, you will need the following:</source>
          <target state="translated">クリスタルシャードを解放して、このチュートリアルに沿って進めていくためには、以下のものが必要です。</target>
        </trans-unit>
        <trans-unit id="c4ec4613d00ad33e166ff9c24337bc30ce5d64f2" translate="yes" xml:space="preserve">
          <source>In our case, we are going to use &lt;a href=&quot;https://circleci.com/orbs/registry/orb/manastech/crystal&quot;&gt;Crystal&amp;rsquo;s Orb&lt;/a&gt;</source>
          <target state="translated">私たちのケースでは、使用しようとしている&lt;a href=&quot;https://circleci.com/orbs/registry/orb/manastech/crystal&quot;&gt;クリスタルオーブを&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="45845528a893d7f07d0dcb0adb6bf6678c74e3ff" translate="yes" xml:space="preserve">
          <source>In regular code &lt;code&gt;Int32 -&amp;gt; String&lt;/code&gt; is a syntax error.</source>
          <target state="translated">通常のコードでは、 &lt;code&gt;Int32 -&amp;gt; String&lt;/code&gt; は構文エラーです。</target>
        </trans-unit>
        <trans-unit id="43c7a4d4741aa6515f174c290b51cd5a14d9ddd0" translate="yes" xml:space="preserve">
          <source>In regular code, &lt;code&gt;Int32*&lt;/code&gt; means invoking the &lt;code&gt;*&lt;/code&gt; method on &lt;code&gt;Int32&lt;/code&gt;.</source>
          <target state="translated">通常のコードでは、 &lt;code&gt;Int32*&lt;/code&gt; 手段が起動 &lt;code&gt;*&lt;/code&gt; 上のメソッド &lt;code&gt;Int32&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e3f6356268a6e30bf06632cfbb11e2a11cbb4d50" translate="yes" xml:space="preserve">
          <source>In regular code, &lt;code&gt;Int32?&lt;/code&gt; is a syntax error.</source>
          <target state="translated">通常のコードでは、 &lt;code&gt;Int32?&lt;/code&gt; 構文エラーです。</target>
        </trans-unit>
        <trans-unit id="9b8f7507152673e1002b12bbe28c9c0d23bcc529" translate="yes" xml:space="preserve">
          <source>In regular code, &lt;code&gt;Int32?&lt;/code&gt; is an &lt;code&gt;Int32 | ::Nil&lt;/code&gt; union type itself.</source>
          <target state="translated">通常のコードでは、 &lt;code&gt;Int32?&lt;/code&gt; ある &lt;code&gt;Int32 | ::Nil&lt;/code&gt; 共用体型自体。</target>
        </trans-unit>
        <trans-unit id="492f078cffe16fb68d2167d03739db05308b94af" translate="yes" xml:space="preserve">
          <source>In regular code, &lt;code&gt;Int32[8]&lt;/code&gt; means invoking the &lt;code&gt;[]&lt;/code&gt; method on &lt;code&gt;Int32&lt;/code&gt; with &lt;code&gt;8&lt;/code&gt; as an argument.</source>
          <target state="translated">通常のコードでは、 &lt;code&gt;Int32[8]&lt;/code&gt; は、 &lt;code&gt;8&lt;/code&gt; を引数として &lt;code&gt;Int32&lt;/code&gt; で &lt;code&gt;[]&lt;/code&gt; メソッドを呼び出すことを意味します。</target>
        </trans-unit>
        <trans-unit id="526586a834f1acd181071ee8a67839e86c895c7f" translate="yes" xml:space="preserve">
          <source>In regular code, &lt;code&gt;{Int32, String}&lt;/code&gt; is a tuple instance containing &lt;code&gt;Int32&lt;/code&gt; and &lt;code&gt;String&lt;/code&gt; as its elements. This is different than the above tuple &lt;strong&gt;type&lt;/strong&gt;.</source>
          <target state="translated">通常のコードでは、 &lt;code&gt;{Int32, String}&lt;/code&gt; は、要素として &lt;code&gt;Int32&lt;/code&gt; と &lt;code&gt;String&lt;/code&gt; を含むタプルインスタンスです。これは、上記のタプル&lt;strong&gt;タイプ&lt;/strong&gt;とは異なります。</target>
        </trans-unit>
        <trans-unit id="95a61b2f88a6519db2174b4c0fd81ab4104e656f" translate="yes" xml:space="preserve">
          <source>In regular code, &lt;code&gt;{x: Int32, y: String}&lt;/code&gt; is a named tuple instance containing &lt;code&gt;Int32&lt;/code&gt; and &lt;code&gt;String&lt;/code&gt; for &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;. This is different than the above named tuple &lt;strong&gt;type&lt;/strong&gt;.</source>
          <target state="translated">通常のコードでは、 &lt;code&gt;{x: Int32, y: String}&lt;/code&gt; は、 &lt;code&gt;x&lt;/code&gt; および &lt;code&gt;y&lt;/code&gt; の &lt;code&gt;Int32&lt;/code&gt; および &lt;code&gt;String&lt;/code&gt; を含む名前付きタプルインスタンスです。これは、上記のタプル&lt;strong&gt;タイプ&lt;/strong&gt;とは異なります。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9197929b078049f3d920b613864a5137ba83476e" translate="yes" xml:space="preserve">
          <source>In short, avoid &lt;code&gt;&amp;amp;block&lt;/code&gt; forwarding when &lt;code&gt;yield&lt;/code&gt; is involved.</source>
          <target state="translated">つまり、 &lt;code&gt;yield&lt;/code&gt; が関係する場合は、転送を &lt;code&gt;&amp;amp;block&lt;/code&gt; ないでください。</target>
        </trans-unit>
        <trans-unit id="20ff5b78c5e6b747a3030301d6331afba01439db" translate="yes" xml:space="preserve">
          <source>In such cases, the choice of time zone, and therefore the time, is not well-defined. This method returns a time that is correct in one of the two zones involved in the transition, but it does not guarantee which.</source>
          <target state="translated">このような場合、タイムゾーンの選択、したがって時刻は十分に定義されていません。このメソッドは、遷移に関与する2つのゾーンのうちの1つで正しい時刻を返しますが、どちらのゾーンであるかは保証しません。</target>
        </trans-unit>
        <trans-unit id="3a0c05f42e0f0e35e6860c2aa34f779c5ad03453" translate="yes" xml:space="preserve">
          <source>In test files, specs are structured by example groups which are defined by &lt;code&gt;describe&lt;/code&gt; and &lt;code&gt;context&lt;/code&gt; sections. Typically a top level &lt;code&gt;describe&lt;/code&gt; defines the outer unit (such as a class) to be tested by the spec. Further &lt;code&gt;describe&lt;/code&gt; sections can be nested within the outer unit to specify smaller units under test (such as individual methods).</source>
          <target state="translated">テストファイルでは、specは、 &lt;code&gt;describe&lt;/code&gt; セクションと &lt;code&gt;context&lt;/code&gt; セクションで定義されたサンプルグループで構成されています。通常、最上位の &lt;code&gt;describe&lt;/code&gt; は、仕様によってテストされる外部ユニット（クラスなど）を定義します。さらに &lt;code&gt;describe&lt;/code&gt; セクションを外部ユニット内にネストして、テスト中のより小さなユニット（個々のメソッドなど）を指定できます。</target>
        </trans-unit>
        <trans-unit id="70bbec41f3009635d972183771280ceb207e601f" translate="yes" xml:space="preserve">
          <source>In the &lt;em&gt;Badges&lt;/em&gt; section of the &lt;em&gt;General&lt;/em&gt; settings, we'll first add a release badge. The link is: &lt;code&gt;https://gitlab.com/&amp;lt;YOUR-GITLAB-USERNAME&amp;gt;/&amp;lt;YOUR-REPOSITORY-NAME&amp;gt;/pipelines&lt;/code&gt; and the &lt;em&gt;Badge Image URL&lt;/em&gt; is: &lt;code&gt;https://gitlab.com/&amp;lt;YOUR-GITLAB-USERNAME&amp;gt;/&amp;lt;YOUR-REPOSITORY-NAME&amp;gt;/badges/master/pipeline.svg&lt;/code&gt;.</source>
          <target state="translated">[&lt;em&gt;一般&lt;/em&gt;設定]の[&lt;em&gt;バッジ]&lt;/em&gt;セクションで、最初にリリースバッジを追加します。リンクは &lt;code&gt;https://gitlab.com/&amp;lt;YOUR-GITLAB-USERNAME&amp;gt;/&amp;lt;YOUR-REPOSITORY-NAME&amp;gt;/pipelines&lt;/code&gt; &amp;lt; &lt;em&gt;YOUR-REPOSITORY-NAME&amp;gt;&lt;/em&gt; / pipelinesで、&lt;em&gt;バッジイメージのURL&lt;/em&gt;は &lt;code&gt;https://gitlab.com/&amp;lt;YOUR-GITLAB-USERNAME&amp;gt;/&amp;lt;YOUR-REPOSITORY-NAME&amp;gt;/badges/master/pipeline.svg&lt;/code&gt; です。 &amp;gt; / &amp;lt;YOUR-REPOSITORY-NAME&amp;gt; /badges/master/pipeline.svg。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="df7797ad4b749b9838697b2454d45f1289a82261" translate="yes" xml:space="preserve">
          <source>In the IPv4 family, loopback addresses are all addresses in the subnet &lt;code&gt;127.0.0.0/24&lt;/code&gt;. In IPv6 &lt;code&gt;::1&lt;/code&gt; is the loopback address.</source>
          <target state="translated">IPv4ファミリでは、ループバックアドレスはすべてサブネット &lt;code&gt;127.0.0.0/24&lt;/code&gt; 内のアドレスです。IPv6では、 &lt;code&gt;::1&lt;/code&gt; はループバックアドレスです。</target>
        </trans-unit>
        <trans-unit id="5571ff15655a22733fe5015d3a6e2b504b7002f6" translate="yes" xml:space="preserve">
          <source>In the above case, &lt;code&gt;@lucky_number&lt;/code&gt; will be inferred to be &lt;code&gt;Int32 | Nil&lt;/code&gt;: &lt;code&gt;Int32&lt;/code&gt; because 42 was assigned to it, and &lt;code&gt;Nil&lt;/code&gt; because it wasn't assigned in all of the class' initialize methods.</source>
          <target state="translated">上記の場合、 &lt;code&gt;@lucky_number&lt;/code&gt; は &lt;code&gt;Int32 | Nil&lt;/code&gt; と推測されます。Nil：42が割り当てられたため &lt;code&gt;Int32&lt;/code&gt; 、クラスのすべての初期化メソッドで割り当てられなかったため &lt;code&gt;Nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8efa502e913abbc79dcda531f8a0990c2a080c79" translate="yes" xml:space="preserve">
          <source>In the above case, the compiler will still infer &lt;code&gt;@name&lt;/code&gt; to be &lt;code&gt;String&lt;/code&gt;, and later will give a compile time error, when fully typing that method, saying that &lt;code&gt;Int32&lt;/code&gt; can't be assigned to a variable of type &lt;code&gt;String&lt;/code&gt;. Use an explicit type restriction if &lt;code&gt;@name&lt;/code&gt; isn't supposed to be a &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">上記の場合、コンパイラーは &lt;code&gt;@name&lt;/code&gt; を &lt;code&gt;String&lt;/code&gt; であると推測し、そのメソッドを完全に入力すると、コンパイル時にエラーが発生し、 &lt;code&gt;Int32&lt;/code&gt; は &lt;code&gt;String&lt;/code&gt; 型の変数に割り当てることができないと言います。 &lt;code&gt;@name&lt;/code&gt; が &lt;code&gt;String&lt;/code&gt; であると想定されていない場合は、明示的な型制限を使用してください。</target>
        </trans-unit>
        <trans-unit id="48ed7572b4d153af5a9de9d9ab6e906482e280b1" translate="yes" xml:space="preserve">
          <source>In the above code we didn't have to specify the type arguments of &lt;code&gt;MyBox&lt;/code&gt;, the compiler inferred them following this process:</source>
          <target state="translated">上記のコードでは、 &lt;code&gt;MyBox&lt;/code&gt; の型引数を指定する必要はありませんでした。コンパイラは、次のプロセスに従ってそれらを推測しました。</target>
        </trans-unit>
        <trans-unit id="a818a2bc286641ec8480d71d3ba85299f97abeb4" translate="yes" xml:space="preserve">
          <source>In the above code, &lt;code&gt;a&lt;/code&gt; is a union of &lt;code&gt;Int32 | String&lt;/code&gt;. If for some reason we are sure &lt;code&gt;a&lt;/code&gt; is an &lt;code&gt;Int32&lt;/code&gt; after the &lt;code&gt;if&lt;/code&gt;, we can force the compiler to treat it like one:</source>
          <target state="translated">上記のコードでは、 &lt;code&gt;a&lt;/code&gt; は &lt;code&gt;Int32 | String&lt;/code&gt; 和集合です。文字列。何らかの理由で &lt;code&gt;a&lt;/code&gt; が &lt;code&gt;if&lt;/code&gt; の後の &lt;code&gt;Int32&lt;/code&gt; であると確信している場合は、コンパイラに強制的に1のように処理させることができます。</target>
        </trans-unit>
        <trans-unit id="3b85f665ae6c92e2a3db22fa56a75e055c972b04" translate="yes" xml:space="preserve">
          <source>In the above example &lt;code&gt;@lucky_number&lt;/code&gt; will be inferred to be &lt;code&gt;Int32 | Nil&lt;/code&gt;. This is very useful for lazily initialized variables.</source>
          <target state="translated">上記の例では、 &lt;code&gt;@lucky_number&lt;/code&gt; は &lt;code&gt;Int32 | Nil&lt;/code&gt; あると推測されます。なし。これは、遅延初期化された変数に非常に役立ちます。</target>
        </trans-unit>
        <trans-unit id="124ada8309146e0f4c168bc700ffa0393754b23e" translate="yes" xml:space="preserve">
          <source>In the above example the type of &lt;code&gt;&amp;amp;block&lt;/code&gt; wasn't specified: this just means that the captured block doesn't have arguments and doesn't return anything.</source>
          <target state="translated">上記の例では、 &lt;code&gt;&amp;amp;block&lt;/code&gt; のタイプが指定されていませんでした。これは、キャプチャされたブロックに引数がなく、何も返されないことを意味します。</target>
        </trans-unit>
        <trans-unit id="52d0821b1b1a52f013f18d4998ae7cbb3ad8aa4b" translate="yes" xml:space="preserve">
          <source>In the above example the type of &lt;code&gt;&amp;amp;block&lt;/code&gt; wasn't specified: this just means that the captured block doesn't take any arguments and doesn't return anything.</source>
          <target state="translated">上記の例では、 &lt;code&gt;&amp;amp;block&lt;/code&gt; のタイプが指定されていません。これは、キャプチャされたブロックが引数を受け取らず、何も返さないことを意味します。</target>
        </trans-unit>
        <trans-unit id="31a7642382c651738fddc7f605477138fd4fcf59" translate="yes" xml:space="preserve">
          <source>In the above example we used &lt;code&gt;nil&lt;/code&gt; just to communicate that the fiber ended. We can also use channels to communicate values between fibers:</source>
          <target state="translated">上記の例では、ファイバーが終了したことを伝えるために &lt;code&gt;nil&lt;/code&gt; を使用しました。チャネルを使用して、ファイバー間の値を通信することもできます。</target>
        </trans-unit>
        <trans-unit id="3d75092753e0f0d0e7a607d9814119db70549412" translate="yes" xml:space="preserve">
          <source>In the above example, &lt;code&gt;invoke&lt;/code&gt; receives a block. We can't pass &lt;code&gt;proc&lt;/code&gt; directly to it because &lt;code&gt;invoke&lt;/code&gt; doesn't receive regular arguments, just a block argument. We use &lt;code&gt;&amp;amp;&lt;/code&gt; to specify that we really want to pass &lt;code&gt;proc&lt;/code&gt; as the block argument. Otherwise:</source>
          <target state="translated">上記の例では、 &lt;code&gt;invoke&lt;/code&gt; はブロックを受け取ります。 &lt;code&gt;invoke&lt;/code&gt; は通常の引数を受け取るのではなく、ブロック引数を受け取るだけなので、直接 &lt;code&gt;proc&lt;/code&gt; を渡すことはできません。 &lt;code&gt;&amp;amp;&lt;/code&gt; を使用して、ブロック引数として本当に &lt;code&gt;proc&lt;/code&gt; を渡したいことを指定します。さもないと：</target>
        </trans-unit>
        <trans-unit id="d3dbe0c0ea2d5e5cc5ba04c9b70d7366c234db59" translate="yes" xml:space="preserve">
          <source>In the above example, even though &lt;code&gt;x&lt;/code&gt; is a local variable, it was captured by the proc literal. In this case the compiler allocates &lt;code&gt;x&lt;/code&gt; on the heap and uses it as the context data of the proc to make it work, because normally local variables live in the stack and are gone after a method returns.</source>
          <target state="translated">上記の例では、 &lt;code&gt;x&lt;/code&gt; はローカル変数ですが、procリテラルによってキャプチャされました。この場合、コンパイラーは &lt;code&gt;x&lt;/code&gt; をヒープに割り当て、それをprocのコンテキストデータとして使用して機能させます。通常、ローカル変数はスタック内に存在し、メソッドが戻った後に失われるためです。</target>
        </trans-unit>
        <trans-unit id="a91f1497e93bf47302926f3080552ab1b7bead36" translate="yes" xml:space="preserve">
          <source>In the above example, it is as if we pasted the &lt;code&gt;size&lt;/code&gt; method from the module into the &lt;code&gt;Items&lt;/code&gt; class. The way this really works is by making each type have a list of ancestors, or parents. By default this list starts with the superclass. As modules are included they are &lt;strong&gt;prepended&lt;/strong&gt; to this list. When a method is not found in a type it is looked up in this list. When you invoke &lt;code&gt;super&lt;/code&gt;, the first type in this ancestors list is used.</source>
          <target state="translated">上記の例では、 &lt;code&gt;size&lt;/code&gt; メソッドをモジュールから &lt;code&gt;Items&lt;/code&gt; クラスに貼り付けたかのようになります。これが実際に機能する方法は、各タイプに祖先または親のリストを持たせることです。デフォルトでは、このリストはスーパークラスから始まります。モジュールが含まれているので、これらはこのリストの&lt;strong&gt;先頭に追加さ&lt;/strong&gt;れます。タイプにメソッドが見つからない場合は、このリストで検索されます。 &lt;code&gt;super&lt;/code&gt; を呼び出すと、この祖先リストの最初のタイプが使用されます。</target>
        </trans-unit>
        <trans-unit id="87c6bc18e6c0d45245b059a944b3bf024ed56dae" translate="yes" xml:space="preserve">
          <source>In the above example, three indexed variables are declared, assigned values, and then printed, displaying their corresponding indices.</source>
          <target state="translated">上記の例では、3つのインデックス付き変数が宣言され、値が代入され、印刷され、対応するインデックスが表示されています。</target>
        </trans-unit>
        <trans-unit id="d122c215033c5da6e1628b04dc3f3c56c303fd64" translate="yes" xml:space="preserve">
          <source>In the above example, trying to invoke a method on the returned value will give a compile time error unless both &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt; define that method:</source>
          <target state="translated">上記の例では、戻り値に対してメソッドを呼び出そうとすると、 &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt; の両方でそのメソッドが定義されていない限り、コンパイル時にエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="51415e1d10034628d167c7a1b19bbc3f9d76ff9c" translate="yes" xml:space="preserve">
          <source>In the above example, we start a transaction simply by calling the method &lt;code&gt;Database#transaction&lt;/code&gt; (how we get the &lt;code&gt;database&lt;/code&gt; object is encapsulated in the method &lt;code&gt;get_bank_db&lt;/code&gt; and is out of the scope of this document). The &lt;code&gt;block&lt;/code&gt; is the body of the transaction. When the &lt;code&gt;block&lt;/code&gt; gets executed (without any error) then an &lt;strong&gt;implicit commit&lt;/strong&gt; is finally executed to persist the changes in the database. If an exception is raised by one of the operations, then an &lt;strong&gt;implicit rollback&lt;/strong&gt; is executed, bringing the database to the state before the transaction started.</source>
          <target state="translated">上記の例では、メソッド &lt;code&gt;Database#transaction&lt;/code&gt; を呼び出すだけでトランザクションを開始してい &lt;code&gt;database&lt;/code&gt; （データベースオブジェクトの取得方法はメソッド &lt;code&gt;get_bank_db&lt;/code&gt; にカプセル化されており、このドキュメントの範囲外です）。 &lt;code&gt;block&lt;/code&gt; トランザクションの本体です。ときに &lt;code&gt;block&lt;/code&gt; （エラーなし）で実行されますその後、&lt;strong&gt;暗黙コミット&lt;/strong&gt;最終的に、データベースの変更を永続化するために実行されます。いずれかの操作で例外が発生すると、&lt;strong&gt;暗黙的なロールバック&lt;/strong&gt;が実行され、データベースはトランザクションが開始される前の状態になります。</target>
        </trans-unit>
        <trans-unit id="fcef7a51e128206daec27d6a7e4f9aa89371cab0" translate="yes" xml:space="preserve">
          <source>In the case of flags enums, this invokes &lt;code&gt;&lt;a href=&quot;enum#includes?(other:self)-instance-method&quot;&gt;#includes?&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">フラグ列挙型の場合、これは &lt;code&gt;&lt;a href=&quot;enum#includes?(other:self)-instance-method&quot;&gt;#includes?&lt;/a&gt;&lt;/code&gt; を呼び出します。。</target>
        </trans-unit>
        <trans-unit id="2a7dd16b5b05f743bcfad7a9a5465ff9f7a7ddad" translate="yes" xml:space="preserve">
          <source>In the case of regular enums, this compares by equality (&lt;code&gt;&lt;a href=&quot;enum#==(other:self)-instance-method&quot;&gt;#==&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">通常の列挙型の場合、これは等価（ &lt;code&gt;&lt;a href=&quot;enum#==(other:self)-instance-method&quot;&gt;#==&lt;/a&gt;&lt;/code&gt; ）で比較されます。</target>
        </trans-unit>
        <trans-unit id="2bcd9f4e856948e8a3be2a8f5fb09b0eb29b464e" translate="yes" xml:space="preserve">
          <source>In the following example &lt;code&gt;@age&lt;/code&gt; is inferred to be &lt;code&gt;Int32&lt;/code&gt;.</source>
          <target state="translated">次の例では、 &lt;code&gt;@age&lt;/code&gt; は &lt;code&gt;Int32&lt;/code&gt; と推定されます。</target>
        </trans-unit>
        <trans-unit id="4a5b0626fee0a18d632f9443ed431c26862140e0" translate="yes" xml:space="preserve">
          <source>In the following example &lt;code&gt;@name&lt;/code&gt; is inferred to be &lt;code&gt;String&lt;/code&gt; because the method argument &lt;code&gt;name&lt;/code&gt; has a type restriction of type &lt;code&gt;String&lt;/code&gt;, and that argument is assigned to &lt;code&gt;@name&lt;/code&gt;.</source>
          <target state="translated">次の例では &lt;code&gt;@name&lt;/code&gt; であると推測される &lt;code&gt;String&lt;/code&gt; メソッド引数ため &lt;code&gt;name&lt;/code&gt; 型の型制限持つ &lt;code&gt;String&lt;/code&gt; 、その引数が割り当てられる &lt;code&gt;@name&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ce63603b8610d09aae6c81774d40acf755771ebf" translate="yes" xml:space="preserve">
          <source>In the following example &lt;code&gt;@name&lt;/code&gt; is inferred to be &lt;code&gt;String&lt;/code&gt; because the method parameter &lt;code&gt;name&lt;/code&gt; has a type restriction of type &lt;code&gt;String&lt;/code&gt;, and that parameter is assigned to &lt;code&gt;@name&lt;/code&gt;.</source>
          <target state="translated">次の例では &lt;code&gt;@name&lt;/code&gt; であると推測される &lt;code&gt;String&lt;/code&gt; メソッドパラメータので &lt;code&gt;name&lt;/code&gt; 型の型制限持つ &lt;code&gt;String&lt;/code&gt; 、そのパラメータが割り当てられる &lt;code&gt;@name&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e7313dce0ee84b164076b56b4581f51dde5ec706" translate="yes" xml:space="preserve">
          <source>In the following example, &lt;code&gt;@address&lt;/code&gt; is inferred to be &lt;code&gt;Address&lt;/code&gt;, because the class method &lt;code&gt;Address.unknown&lt;/code&gt; has a return type restriction of &lt;code&gt;Address&lt;/code&gt;.</source>
          <target state="translated">次の例では、 &lt;code&gt;@address&lt;/code&gt; があると推測される &lt;code&gt;Address&lt;/code&gt; クラスメソッドので、 &lt;code&gt;Address.unknown&lt;/code&gt; はの戻り型制限有する &lt;code&gt;Address&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a49029b9c2bcaa1c2e4dd77cea777c2e41fb65b4" translate="yes" xml:space="preserve">
          <source>In the following example, &lt;code&gt;@address&lt;/code&gt; is inferred to be &lt;code&gt;Address&lt;/code&gt;.</source>
          <target state="translated">次の例では、 &lt;code&gt;@address&lt;/code&gt; は &lt;code&gt;Address&lt;/code&gt; であると推定されます。</target>
        </trans-unit>
        <trans-unit id="d3ca8f892e668e16502b6aaabe088f879f063a50" translate="yes" xml:space="preserve">
          <source>In the following example, &lt;code&gt;@name&lt;/code&gt; is inferred to be &lt;code&gt;String&lt;/code&gt; and &lt;code&gt;@age&lt;/code&gt; to be &lt;code&gt;Int32&lt;/code&gt;.</source>
          <target state="translated">次の例では、 &lt;code&gt;@name&lt;/code&gt; があると推測される &lt;code&gt;String&lt;/code&gt; と &lt;code&gt;@age&lt;/code&gt; すべき &lt;code&gt;Int32&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9df5a618b3865cffd7845a48b17f694f112e9529" translate="yes" xml:space="preserve">
          <source>In the following example, because the default value of &lt;code&gt;name&lt;/code&gt; is a string literal, and it's later assigned to &lt;code&gt;@name&lt;/code&gt;, &lt;code&gt;String&lt;/code&gt; will be added to the set of inferred types.</source>
          <target state="translated">次の例では、ための既定値 &lt;code&gt;name&lt;/code&gt; 、文字列リテラルであり、それが後に割り当てられて &lt;code&gt;@name&lt;/code&gt; 、 &lt;code&gt;String&lt;/code&gt; 推論型のセットに追加されます。</target>
        </trans-unit>
        <trans-unit id="a0b5af7a3b99d804b6630e30b044d9107e3bfa8b" translate="yes" xml:space="preserve">
          <source>In the general case, when two types &lt;code&gt;T1&lt;/code&gt; and &lt;code&gt;T2&lt;/code&gt; are combined, the result is a union &lt;code&gt;T1 | T2&lt;/code&gt;. However, there are a few cases where the resulting type is a different type.</source>
          <target state="translated">一般的なケースでは、2つのタイプ &lt;code&gt;T1&lt;/code&gt; と &lt;code&gt;T2&lt;/code&gt; を組み合わせると、結果はユニオン &lt;code&gt;T1 | T2&lt;/code&gt; 。ただし、結果の型が異なる型である場合がいくつかあります。</target>
        </trans-unit>
        <trans-unit id="41bd7d3571e98f2aabd047cdca17487d0bc0458d" translate="yes" xml:space="preserve">
          <source>In the next example we will let the &lt;code&gt;database&lt;/code&gt; object &lt;em&gt;to manage the connections by itself&lt;/em&gt;, like this:</source>
          <target state="translated">次の例では、次のように、 &lt;code&gt;database&lt;/code&gt; オブジェクト&lt;em&gt;が接続を単独&lt;/em&gt;で&lt;em&gt;管理できる&lt;/em&gt;ようにします。</target>
        </trans-unit>
        <trans-unit id="ce0574c23dbe80e313faea3ea12ecec94b14f2eb" translate="yes" xml:space="preserve">
          <source>In the next subsections, we are going to present 2 continuous integration tools: &lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis CI&lt;/a&gt; and &lt;a href=&quot;https://circleci.com/&quot;&gt;Circle CI&lt;/a&gt; and use them with a Crystal example application.</source>
          <target state="translated">：次のサブセクションでは、我々は2つの継続的インテグレーションツール提示しようとしている&lt;a href=&quot;https://travis-ci.org/&quot;&gt;トラヴィスCI&lt;/a&gt;や&lt;a href=&quot;https://circleci.com/&quot;&gt;サークルCIを&lt;/a&gt;、クリスタルのサンプルアプリケーションでそれらを使用しています。</target>
        </trans-unit>
        <trans-unit id="68060a64d5ca9a24e2d3d6068708a62ef681950d" translate="yes" xml:space="preserve">
          <source>In the previous example &lt;code&gt;self&lt;/code&gt; is the same as writing &lt;code&gt;Person&lt;/code&gt;. But, in general, &lt;code&gt;self&lt;/code&gt; is the same as writing the type that will finally own that method, which, when modules are involved, becomes more useful.</source>
          <target state="translated">前の例では、 &lt;code&gt;self&lt;/code&gt; は &lt;code&gt;Person&lt;/code&gt; を書くことと同じです。ただし、一般的に、 &lt;code&gt;self&lt;/code&gt; は、最終的にそのメソッドを所有する型を記述することと同じであり、モジュールが関係する場合により便利になります。</target>
        </trans-unit>
        <trans-unit id="9aa883f457852d8bf98bb91416c402f814326240" translate="yes" xml:space="preserve">
          <source>In this case the implementation can pre-compute the needed string bytesize and so it's a bit more performant than interpolating non-string values.</source>
          <target state="translated">この場合、実装は必要な文字列のバイトサイズを事前に計算することができるので、非文字列の値を補間するよりも少しパフォーマンスが高くなります。</target>
        </trans-unit>
        <trans-unit id="2f54375bbc65672792f9802cbb3ea684975e5eb3" translate="yes" xml:space="preserve">
          <source>In this case the implementation just does &lt;code&gt;char + value&lt;/code&gt;.</source>
          <target state="translated">この場合、実装は &lt;code&gt;char + value&lt;/code&gt; 実行します。</target>
        </trans-unit>
        <trans-unit id="307c91e8acff393270feb3e4d95f94d3af69419a" translate="yes" xml:space="preserve">
          <source>In this case the implementation just does &lt;code&gt;value + char&lt;/code&gt;.</source>
          <target state="translated">この場合、実装は &lt;code&gt;value + char&lt;/code&gt; 実行します。</target>
        </trans-unit>
        <trans-unit id="4a931b3128febf1a6b6aa5a78431119a9eae0ebb" translate="yes" xml:space="preserve">
          <source>In this case the implementation just returns the result of calling &lt;code&gt;value.to_s&lt;/code&gt;.</source>
          <target state="translated">この場合、実装は &lt;code&gt;value.to_s&lt;/code&gt; を呼び出した結果を返すだけです。</target>
        </trans-unit>
        <trans-unit id="81ef2a6c682e1903f787b9168f40e0c66a6a5535" translate="yes" xml:space="preserve">
          <source>In this case the implementation just returns the result of calling &lt;code&gt;value&lt;a href=&quot;string#to_s:String-instance-method&quot;&gt;.to_s&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">この場合、実装は &lt;code&gt;value&lt;a href=&quot;string#to_s:String-instance-method&quot;&gt;.to_s&lt;/a&gt;&lt;/code&gt; を呼び出した結果を返すだけです。</target>
        </trans-unit>
        <trans-unit id="df8b0ef75fdb17df030881f8958c1f3bf6d87fa8" translate="yes" xml:space="preserve">
          <source>In this case the implementation just returns the same string.</source>
          <target state="translated">この場合、実装は同じ文字列を返すだけです。</target>
        </trans-unit>
        <trans-unit id="4386753354e6ccd734cdcefc2e3c9a530b2d1415" translate="yes" xml:space="preserve">
          <source>In this case the implementation will call &lt;code&gt;&lt;a href=&quot;string#build(capacity=64,&amp;amp;):self-class-method&quot;&gt;String.build&lt;/a&gt;&lt;/code&gt; with the given values.</source>
          <target state="translated">この場合、実装は指定された値で &lt;code&gt;&lt;a href=&quot;string#build(capacity=64,&amp;amp;):self-class-method&quot;&gt;String.build&lt;/a&gt;&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="514e6fa2040cfbd7a473f42da2776658c65cb65d" translate="yes" xml:space="preserve">
          <source>In this case, leading whitespace is not included in the resulting string.</source>
          <target state="translated">この場合、先頭の空白は結果の文字列には含まれません。</target>
        </trans-unit>
        <trans-unit id="7fd23cc1df5b309a251dda223a31fb375d169840" translate="yes" xml:space="preserve">
          <source>In this case, no runtime checks are done: pointers are unsafe and this type of casting is usually only needed in C bindings and low-level code.</source>
          <target state="translated">この場合、実行時のチェックは行われません:ポインタは安全ではないので、このタイプのキャスティングは通常 C のバインディングと低レベルのコードでのみ必要です。</target>
        </trans-unit>
        <trans-unit id="ecc6b01e1f0b852bb60481077333828a0cfca72f" translate="yes" xml:space="preserve">
          <source>In this case, the block receives a parameter that represents the parameter passed to the option.</source>
          <target state="translated">この場合、 ブ ロ ッ ク は、 オプシ ョ ンに渡されたパ ラ メ ー タ ーを表すパ ラ メ ー タ ーを受け取ります。</target>
        </trans-unit>
        <trans-unit id="58cd2acc0f451b15658845bd31b1dcd0ff9563dc" translate="yes" xml:space="preserve">
          <source>In this section we are going to present some configuration examples to see how CircleCI implements some &lt;a href=&quot;https://circleci.com/docs/2.0/concepts/&quot;&gt;continuous integration concepts&lt;/a&gt;.</source>
          <target state="translated">このセクションでは、CircleCIが&lt;a href=&quot;https://circleci.com/docs/2.0/concepts/&quot;&gt;継続的インテグレーションの概念&lt;/a&gt;をどのように実装するかを確認するために、いくつかの構成例を示します。</target>
        </trans-unit>
        <trans-unit id="ea2499982ba0ec5f98ffa6abd04f63800ca33fcb" translate="yes" xml:space="preserve">
          <source>In this section we are going to use &lt;a href=&quot;https://circleci.com/&quot;&gt;CircleCI&lt;/a&gt; as our continuous-integration service. In a &lt;a href=&quot;https://circleci.com/docs/2.0/about-circleci/#section=welcome&quot;&gt;few words&lt;/a&gt; CircleCI automates your software builds, tests, and deployments. It supports &lt;a href=&quot;https://circleci.com/docs/2.0/demo-apps/#section=welcome&quot;&gt;different programming languages&lt;/a&gt; and for our particular case, it supports the &lt;a href=&quot;https://circleci.com/docs/2.0/language-crystal/&quot;&gt;Crystal language&lt;/a&gt;.</source>
          <target state="translated">このセクションでは、継続的インテグレーションサービスとして&lt;a href=&quot;https://circleci.com/&quot;&gt;CircleCI&lt;/a&gt;を使用します。では&lt;a href=&quot;https://circleci.com/docs/2.0/about-circleci/#section=welcome&quot;&gt;いくつかの単語&lt;/a&gt;CircleCIは、お使いのソフトウェアのビルドのテスト、および展開を自動化します。それはサポートして&lt;a href=&quot;https://circleci.com/docs/2.0/demo-apps/#section=welcome&quot;&gt;異なるプログラミング言語を&lt;/a&gt;、私たちの特別な場合のために、それがサポートしている&lt;a href=&quot;https://circleci.com/docs/2.0/language-crystal/&quot;&gt;クリスタル言語を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1b268c510de8c14bbd5befa833dc45236404d1b0" translate="yes" xml:space="preserve">
          <source>In this section we are going to use &lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis CI&lt;/a&gt; as our continuous-integration service. Travis CI is &lt;a href=&quot;https://docs.travis-ci.com/user/tutorial/#more-than-running-tests&quot;&gt;mostly used&lt;/a&gt; for building and running tests for projects hosted at GitHub. It supports &lt;a href=&quot;https://docs.travis-ci.com/user/tutorial/#selecting-a-different-programming-language&quot;&gt;different programming languages&lt;/a&gt; and for our particular case, it supports the &lt;a href=&quot;https://docs.travis-ci.com/user/languages/crystal/&quot;&gt;Crystal language&lt;/a&gt;.</source>
          <target state="translated">このセクションでは、継続的インテグレーションサービスとして&lt;a href=&quot;https://travis-ci.org/&quot;&gt;TravisCI&lt;/a&gt;を使用します。Travis CIは&lt;a href=&quot;https://docs.travis-ci.com/user/tutorial/#more-than-running-tests&quot;&gt;主に&lt;/a&gt;、GitHubでホストされているプロジェクトのテストを構築および実行するために使用されます。それはサポートして&lt;a href=&quot;https://docs.travis-ci.com/user/tutorial/#selecting-a-different-programming-language&quot;&gt;異なるプログラミング言語を&lt;/a&gt;、私たちの特別な場合のために、それがサポートしている&lt;a href=&quot;https://docs.travis-ci.com/user/languages/crystal/&quot;&gt;クリスタル言語を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c25af0a6ae35089113e88ba9d5bc7c35374c0be7" translate="yes" xml:space="preserve">
          <source>In this tutorial, we'll be making a Crystal library called &lt;em&gt;palindrome-example&lt;/em&gt;.</source>
          <target state="translated">このチュートリアルでは、&lt;em&gt;palindrome-example&lt;/em&gt;という名前のCrystalライブラリを作成します。</target>
        </trans-unit>
        <trans-unit id="111a36bf8332a4163ec695bc63042943efe48fc1" translate="yes" xml:space="preserve">
          <source>In this way a block can be saved as a callback:</source>
          <target state="translated">このようにして、ブロックをコールバックとして保存することができます。</target>
        </trans-unit>
        <trans-unit id="5b7dad6455dba565c9aa636279b2b42b57e655e4" translate="yes" xml:space="preserve">
          <source>In this way a module can be used as a namespace:</source>
          <target state="translated">このようにして、モジュールを名前空間として使用することができます。</target>
        </trans-unit>
        <trans-unit id="40f3ad3b83ad9ee22a604db1b623b84c7bb74df7" translate="yes" xml:space="preserve">
          <source>In this way generic types are less tedious to work with.</source>
          <target state="translated">このように、一般的なタイプの方が作業が面倒ではありません。</target>
        </trans-unit>
        <trans-unit id="c7104d6ead642bbdcc16e9c61e87c72cd9a230e5" translate="yes" xml:space="preserve">
          <source>In this way we pass a pointer of &lt;code&gt;status_ptr&lt;/code&gt; to the function for it to fill its value.</source>
          <target state="translated">このようにして、 &lt;code&gt;status_ptr&lt;/code&gt; のポインタを関数に渡し、関数がその値を埋めるようにします。</target>
        </trans-unit>
        <trans-unit id="87a24f3eecbef741fef7cad513c261c725035de8" translate="yes" xml:space="preserve">
          <source>In those cases the iteration is empty.</source>
          <target state="translated">そのような場合、イテレーションは空になります。</target>
        </trans-unit>
        <trans-unit id="93de36436727da023b0275426c9ce5fcb0b002ae" translate="yes" xml:space="preserve">
          <source>In truncated division, given two integers x and y:</source>
          <target state="translated">切り捨て除算では、2つの整数xとyが与えられます。</target>
        </trans-unit>
        <trans-unit id="eb4753ffe674feb5c9e2bb5af076e1e8c15a4c5a" translate="yes" xml:space="preserve">
          <source>In type restrictions, generic type arguments and other places where a type is expected, you can use a shorter syntax, as explained in the &lt;a href=&quot;../type_grammar&quot;&gt;type grammar&lt;/a&gt;:</source>
          <target state="translated">型制限、ジェネリック型引数、および型が期待されるその他の場所では、&lt;a href=&quot;../type_grammar&quot;&gt;型文法で&lt;/a&gt;説明されているように、より短い構文を使用できます。</target>
        </trans-unit>
        <trans-unit id="af93d6778e838a9db8bbbb9727cb630672bebd9b" translate="yes" xml:space="preserve">
          <source>In type restrictions, generic type arguments and other places where a type is expected, you can use a shorter syntax, as explained in the &lt;a href=&quot;../type_grammar&quot;&gt;type&lt;/a&gt;:</source>
          <target state="translated">で説明したように型の制限、ジェネリック型引数と型が期待されている他の場所では、あなたは、短い構文を使用することができます&lt;a href=&quot;../type_grammar&quot;&gt;タイプ&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="81d1db0ef06261c321c2ce9f91cd5a1a34aca9de" translate="yes" xml:space="preserve">
          <source>In verbose mode prints the exception with its backtrace to the response, else a generic error message is returned to the client. Use the &lt;code&gt;&lt;a href=&quot;loghandler&quot;&gt;HTTP::LogHandler&lt;/a&gt;&lt;/code&gt; before this to log the exception on the server side.</source>
          <target state="translated">冗長モードでは、例外がそのバックトレースとともに応答に出力されます。それ以外の場合、一般的なエラーメッセージがクライアントに返されます。この前に &lt;code&gt;&lt;a href=&quot;loghandler&quot;&gt;HTTP::LogHandler&lt;/a&gt;&lt;/code&gt; 使用して、サーバー側で例外を記録します。</target>
        </trans-unit>
        <trans-unit id="ef5582041da47fc0ca7c272b426adebeda6b6760" translate="yes" xml:space="preserve">
          <source>In verbose mode prints the exception with its backtrace to the response. Otherwise a generic error message is returned to the client.</source>
          <target state="translated">冗長モードでは、例外とレスポンスのバックトレースを表示します。それ以外の場合は、一般的なエラーメッセージがクライアントに返されます。</target>
        </trans-unit>
        <trans-unit id="462205bf0a89cdc74a3011f60c8b25f7f515c495" translate="yes" xml:space="preserve">
          <source>In your terminal: &lt;code&gt;crystal init lib &amp;lt;YOUR-SHARD-NAME&amp;gt;&lt;/code&gt;</source>
          <target state="translated">端末で： &lt;code&gt;crystal init lib &amp;lt;YOUR-SHARD-NAME&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cb4f7828c46ac4c3d9f95d485eb13b699f135c25" translate="yes" xml:space="preserve">
          <source>Inappropriate ioctl for device</source>
          <target state="translated">デバイスに不適切な ioctl</target>
        </trans-unit>
        <trans-unit id="f9ea7c6310c5a06fef902644d25893b4d79e0078" translate="yes" xml:space="preserve">
          <source>Include the following line to allow configuration from environment variables.</source>
          <target state="translated">環境変数からの設定を可能にするために、以下の行を含めてください。</target>
        </trans-unit>
        <trans-unit id="da1d01d8cbbdaafc58904654ab11eedc627a6259" translate="yes" xml:space="preserve">
          <source>Included Modules</source>
          <target state="translated">含まれるモジュール</target>
        </trans-unit>
        <trans-unit id="21cab9a496932542bfe0aaa92041e8f1bf57af88" translate="yes" xml:space="preserve">
          <source>Includes the current position of the offset, the total size of the string, and five characters near the current position.</source>
          <target state="translated">オフセットの現在位置、文字列の合計サイズ、現在位置付近の5文字を含みます。</target>
        </trans-unit>
        <trans-unit id="26fe5bd7005257d25d665a6cd555f50ace814b67" translate="yes" xml:space="preserve">
          <source>Including &lt;code&gt;&lt;a href=&quot;serializable&quot;&gt;JSON::Serializable&lt;/a&gt;&lt;/code&gt; will create &lt;code&gt;&lt;a href=&quot;serializable#to_json(json:JSON::Builder)-instance-method&quot;&gt;#to_json&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;self.from_json&lt;/code&gt; methods on the current class, and a constructor which takes a &lt;code&gt;&lt;a href=&quot;pullparser&quot;&gt;JSON::PullParser&lt;/a&gt;&lt;/code&gt;. By default, these methods serialize into a json object containing the value of every instance variable, the keys being the instance variable name. Most primitives and collections supported as instance variable values (string, integer, array, hash, etc.), along with objects which define to_json and a constructor taking a &lt;code&gt;&lt;a href=&quot;pullparser&quot;&gt;JSON::PullParser&lt;/a&gt;&lt;/code&gt;. Union types are also supported, including unions with nil. If multiple types in a union parse correctly, it is undefined which one will be chosen.</source>
          <target state="translated">含む &lt;code&gt;&lt;a href=&quot;serializable&quot;&gt;JSON::Serializable&lt;/a&gt;&lt;/code&gt; 作成されます &lt;code&gt;&lt;a href=&quot;serializable#to_json(json:JSON::Builder)-instance-method&quot;&gt;#to_json&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;self.from_json&lt;/code&gt; 現在のクラスのメソッドを、そして取るコンストラクタ &lt;code&gt;&lt;a href=&quot;pullparser&quot;&gt;JSON::PullParser&lt;/a&gt;&lt;/code&gt; 。デフォルトでは、これらのメソッドはすべてのインスタンス変数の値を含むjsonオブジェクトにシリアル化します。キーはインスタンス変数名です。ほとんどのプリミティブとコレクションは、to_jsonを定義するオブジェクトと &lt;code&gt;&lt;a href=&quot;pullparser&quot;&gt;JSON::PullParser&lt;/a&gt;&lt;/code&gt; を取るコンストラクターとともに、インスタンス変数値（文字列、整数、配列、ハッシュなど）としてサポートされています。 nilの共用体を含む共用体タイプもサポートされています。共用体の複数の型が正しく解析される場合、どの型が選択されるかは定義されていません。</target>
        </trans-unit>
        <trans-unit id="dddcc5b735eadc1af1b2a356449896a4f8df55ef" translate="yes" xml:space="preserve">
          <source>Including &lt;code&gt;&lt;a href=&quot;serializable&quot;&gt;YAML::Serializable&lt;/a&gt;&lt;/code&gt; will create &lt;code&gt;&lt;a href=&quot;serializable#to_yaml(yaml:YAML::Nodes::Builder)-instance-method&quot;&gt;#to_yaml&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;self.from_yaml&lt;/code&gt; methods on the current class, and a constructor which takes a &lt;code&gt;&lt;a href=&quot;pullparser&quot;&gt;YAML::PullParser&lt;/a&gt;&lt;/code&gt;. By default, these methods serialize into a yaml object containing the value of every instance variable, the keys being the instance variable name. Most primitives and collections supported as instance variable values (string, integer, array, hash, etc.), along with objects which define to_yaml and a constructor taking a &lt;code&gt;&lt;a href=&quot;pullparser&quot;&gt;YAML::PullParser&lt;/a&gt;&lt;/code&gt;. Union types are also supported, including unions with nil. If multiple types in a union parse correctly, it is undefined which one will be chosen.</source>
          <target state="translated">含む &lt;code&gt;&lt;a href=&quot;serializable&quot;&gt;YAML::Serializable&lt;/a&gt;&lt;/code&gt; 作成されます &lt;code&gt;&lt;a href=&quot;serializable#to_yaml(yaml:YAML::Nodes::Builder)-instance-method&quot;&gt;#to_yaml&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;self.from_yaml&lt;/code&gt; 現在のクラスのメソッドを、そして取るコンストラクタ &lt;code&gt;&lt;a href=&quot;pullparser&quot;&gt;YAML::PullParser&lt;/a&gt;&lt;/code&gt; 。デフォルトでは、これらのメソッドはすべてのインスタンス変数の値を含むyamlオブジェクトにシリアル化します。キーはインスタンス変数名です。ほとんどのプリミティブとコレクションは、to_yamlを定義するオブジェクトと &lt;code&gt;&lt;a href=&quot;pullparser&quot;&gt;YAML::PullParser&lt;/a&gt;&lt;/code&gt; を取るコンストラクターとともに、インスタンス変数値（文字列、整数、配列、ハッシュなど）としてサポートされています。 nilの共用体を含む共用体タイプもサポートされています。共用体の複数の型が正しく解析される場合、どの型が選択されるかは定義されていません。</target>
        </trans-unit>
        <trans-unit id="ab464ce8f134afcd16e7505da7fc547187588711" translate="yes" xml:space="preserve">
          <source>Including types must provide an &lt;code&gt;&lt;a href=&quot;comparable#(other:T)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; method, which compares the receiver against another object, returning:</source>
          <target state="translated">型を含めるには、 &lt;code&gt;&lt;a href=&quot;comparable#(other:T)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; メソッドを提供する必要があります。これは、レシーバーを別のオブジェクトと比較して、次を返します。</target>
        </trans-unit>
        <trans-unit id="43fae64fc81923761b8ca1bdb4a3828cf6c92bf1" translate="yes" xml:space="preserve">
          <source>Including types must provide an &lt;code&gt;&lt;a href=&quot;enumerable#each(&amp;amp;block:T-%3EUNDERSCORE)-instance-method&quot;&gt;#each&lt;/a&gt;&lt;/code&gt; method, which yields successive members of the collection.</source>
          <target state="translated">型を含めるには、コレクションの連続するメンバーを生成する &lt;code&gt;&lt;a href=&quot;enumerable#each(&amp;amp;block:T-%3EUNDERSCORE)-instance-method&quot;&gt;#each&lt;/a&gt;&lt;/code&gt; メソッドを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="29224445152eac3f72a08a9a33b8cba43f3d267a" translate="yes" xml:space="preserve">
          <source>Including types must provide an &lt;code&gt;&lt;a href=&quot;enumerable#each(&amp;amp;block:T-%3E_)-instance-method&quot;&gt;#each&lt;/a&gt;&lt;/code&gt; method, which yields successive members of the collection.</source>
          <target state="translated">タイプを含めるには、コレクションの連続するメンバーを生成する &lt;code&gt;&lt;a href=&quot;enumerable#each(&amp;amp;block:T-%3E_)-instance-method&quot;&gt;#each&lt;/a&gt;&lt;/code&gt; メソッドを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="1aa2788cdc8e7cfe875775088a98530e243656f1" translate="yes" xml:space="preserve">
          <source>Including types must provide an &lt;code&gt;&lt;a href=&quot;partialcomparable#(other:T)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; method, which compares the receiver against another object, returning a negative number, &lt;code&gt;0&lt;/code&gt;, a positive number or &lt;code&gt;nil&lt;/code&gt; depending on whether the receiver is less than, equal to, greater than the other object, or no order can be established.</source>
          <target state="translated">型を含めるには、 &lt;code&gt;&lt;a href=&quot;partialcomparable#(other:T)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; メソッドを提供する必要があります。これは、レシーバーを別のオブジェクトと比較し、レシーバーが他のオブジェクトよりも小さいか、等しいか、大きいかによって、負の数 &lt;code&gt;0&lt;/code&gt; 、正の数、または &lt;code&gt;nil&lt;/code&gt; を返します。順序を確立できません。</target>
        </trans-unit>
        <trans-unit id="6a14219f8778db41eddc5fe7f7e4da01bbbd1253" translate="yes" xml:space="preserve">
          <source>Increases the indentation for breakables inside the current group.</source>
          <target state="translated">現在のグループ内のブレークアブルのインデントを増やします。</target>
        </trans-unit>
        <trans-unit id="7f3ff4432c3a065ae2f44aff2a4430dfb6e9133b" translate="yes" xml:space="preserve">
          <source>Index Accessors</source>
          <target state="translated">インデックスアクセサ</target>
        </trans-unit>
        <trans-unit id="b5f75282b6cff2071f4955c844b900068b106883" translate="yes" xml:space="preserve">
          <source>Index accessors</source>
          <target state="translated">インデックスアクセサ</target>
        </trans-unit>
        <trans-unit id="d7bcf5defb30f792a057878148025a6c7e500c0d" translate="yes" xml:space="preserve">
          <source>Index accessors are used to query a value by index or key, for example an array item or map entry. The nilable variant &lt;code&gt;[]?&lt;/code&gt; is supposed to return &lt;code&gt;nil&lt;/code&gt; when the index is not found, while the non-nilable variant raises in that case. Implementations in the standard-library usually raise &lt;a href=&quot;https://crystal-lang.org/api/latest/KeyError.html&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://crystal-lang.org/api/latest/IndexError.html&quot;&gt;&lt;code&gt;IndexError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">インデックスアクセサーは、配列アイテムやマップエントリなど、インデックスまたはキーで値をクエリするために使用されます。ゼロ化可能なバリアント &lt;code&gt;[]?&lt;/code&gt; インデックスが見つからない場合は &lt;code&gt;nil&lt;/code&gt; を返すことになっていますが、その場合はnilableでないバリアントが発生します。標準ライブラリの実装では、通常、&lt;a href=&quot;https://crystal-lang.org/api/latest/KeyError.html&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;https://crystal-lang.org/api/latest/IndexError.html&quot;&gt; &lt;code&gt;IndexError&lt;/code&gt; が発生し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="d6dc6f3198e1ab65580dfebac35a07a14e7e38f6" translate="yes" xml:space="preserve">
          <source>Index: Crystal Programming Language</source>
          <target state="translated">インデックス クリスタルプログラミング言語</target>
        </trans-unit>
        <trans-unit id="383b324a3291b51f1e54ef9c0d763010fbc5e171" translate="yes" xml:space="preserve">
          <source>IndexError</source>
          <target state="translated">IndexError</target>
        </trans-unit>
        <trans-unit id="19de3299a3897fa0771a50182b11e1e8be821894" translate="yes" xml:space="preserve">
          <source>IndexError.new</source>
          <target state="translated">IndexError.new</target>
        </trans-unit>
        <trans-unit id="d8b6addd60debc77c2c9b03c90e8b626de36d170" translate="yes" xml:space="preserve">
          <source>Indexable</source>
          <target state="translated">Indexable</target>
        </trans-unit>
        <trans-unit id="c79cefe685814aa2f049a41f6ffc4e30d84b145c" translate="yes" xml:space="preserve">
          <source>Indexable#[]</source>
          <target state="translated">Indexable#[]</target>
        </trans-unit>
        <trans-unit id="df7babee602f0988fd98bb2f1d95a43bfac7caa9" translate="yes" xml:space="preserve">
          <source>Indexable#[]?</source>
          <target state="translated">Indexable#[]?</target>
        </trans-unit>
        <trans-unit id="05db1f01edfbc59515f166e88d4fd5b24f07c8e7" translate="yes" xml:space="preserve">
          <source>Indexable#dig</source>
          <target state="translated">Indexable#dig</target>
        </trans-unit>
        <trans-unit id="7af3718bc62736c3dfedac8bdc3d7da673715ce9" translate="yes" xml:space="preserve">
          <source>Indexable#dig?</source>
          <target state="translated">Indexable#dig?</target>
        </trans-unit>
        <trans-unit id="32b96fcd989302177599a91423fda4968c15acb5" translate="yes" xml:space="preserve">
          <source>Indexable#each</source>
          <target state="translated">Indexable#each</target>
        </trans-unit>
        <trans-unit id="7630382d1564302d2e2a8a2c487c20cb9b1b28b2" translate="yes" xml:space="preserve">
          <source>Indexable#hash</source>
          <target state="translated">Indexable#hash</target>
        </trans-unit>
        <trans-unit id="5723cc35dcf1bfe6bbb83dbe157b2d8b7b86b9a4" translate="yes" xml:space="preserve">
          <source>Indexable#join</source>
          <target state="translated">Indexable#join</target>
        </trans-unit>
        <trans-unit id="f1c21620b0bd8bdc033ef481e54e15c2d9fde8b0" translate="yes" xml:space="preserve">
          <source>Indexable#last</source>
          <target state="translated">Indexable#last</target>
        </trans-unit>
        <trans-unit id="4df56a7f87f1d712659a55c82d479f1c99939c9d" translate="yes" xml:space="preserve">
          <source>Indexable#size</source>
          <target state="translated">Indexable#size</target>
        </trans-unit>
        <trans-unit id="238e9f22f6c210dabfb3a95cc042e94e4ad66efe" translate="yes" xml:space="preserve">
          <source>Indexable#to_a</source>
          <target state="translated">Indexable#to_a</target>
        </trans-unit>
        <trans-unit id="ee0e2d3a57fd1cf7ddedb21fd52f835db33214e5" translate="yes" xml:space="preserve">
          <source>Indexable(T)</source>
          <target state="translated">Indexable(T)</target>
        </trans-unit>
        <trans-unit id="9d93b049bf4950dbec2b7d9c03737e03e1882b07" translate="yes" xml:space="preserve">
          <source>Indexable(Union(*T))</source>
          <target state="translated">Indexable(Union(*T))</target>
        </trans-unit>
        <trans-unit id="9951861c21df18489a5872209655d6f9039b5e2a" translate="yes" xml:space="preserve">
          <source>Indexing</source>
          <target state="translated">Indexing</target>
        </trans-unit>
        <trans-unit id="0416c4a1d681a8fdc755037de993bdd49fa79545" translate="yes" xml:space="preserve">
          <source>Indexing starts at &lt;code&gt;0&lt;/code&gt;. A negative index is assumed to be relative to the end of the container: &lt;code&gt;-1&lt;/code&gt; indicates the last element, &lt;code&gt;-2&lt;/code&gt; is the next to last element, and so on.</source>
          <target state="translated">インデックス作成は &lt;code&gt;0&lt;/code&gt; から始まります。負のインデックスは、コンテナの最後を基準とするものと見なされます。 &lt;code&gt;-1&lt;/code&gt; は最後の要素を示し、 &lt;code&gt;-2&lt;/code&gt; は最後から2番目の要素というように続きます。</target>
        </trans-unit>
        <trans-unit id="ff4eafbd37e7902b944d838c2cde789f85ab1f7f" translate="yes" xml:space="preserve">
          <source>Indexing with a symbol that is only known at runtime will return a value whose type is the union of all the types in the named tuple, and might raise &lt;code&gt;&lt;a href=&quot;keyerror&quot;&gt;KeyError&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">実行時にのみ認識されるシンボルを使用してインデックスを作成すると、名前付きタプルのすべての型の和集合である値が返され、 &lt;code&gt;&lt;a href=&quot;keyerror&quot;&gt;KeyError&lt;/a&gt;&lt;/code&gt; が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="2caf89b3f9c705f50f90dbbb42966840fe3ba4c9" translate="yes" xml:space="preserve">
          <source>Indexing with an integer value that is only known at runtime will return a value whose type is the union of all the types in the tuple, and might raise &lt;code&gt;&lt;a href=&quot;indexerror&quot;&gt;IndexError&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">実行時にのみ認識される整数値を使用してインデックスを作成すると、タプル内のすべてのタイプの和集合であるタイプの値が返され、 &lt;code&gt;&lt;a href=&quot;indexerror&quot;&gt;IndexError&lt;/a&gt;&lt;/code&gt; が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="22ff70971870dbb59096c430e7b50b74e869044a" translate="yes" xml:space="preserve">
          <source>Indicates the call convention of a &lt;a href=&quot;../c_bindings/fun&quot;&gt;lib fun&lt;/a&gt;. For example:</source>
          <target state="translated">&lt;a href=&quot;../c_bindings/fun&quot;&gt;lib funの&lt;/a&gt;呼び出し規約を示します。例えば：</target>
        </trans-unit>
        <trans-unit id="fe205a81f47d8626e156d49fd481c57d8bb84c94" translate="yes" xml:space="preserve">
          <source>Indicates the possible hash algorithms for &lt;code&gt;&lt;a href=&quot;../openssl&quot;&gt;OpenSSL&lt;/a&gt;&lt;/code&gt; digest operations.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../openssl&quot;&gt;OpenSSL&lt;/a&gt;&lt;/code&gt; ダイジェスト操作の可能なハッシュアルゴリズムを示します。</target>
        </trans-unit>
        <trans-unit id="c9b3891cb26f0afc8f7ff60705c05c1d74b7dcb4" translate="yes" xml:space="preserve">
          <source>Info that &lt;code&gt;describe&lt;/code&gt;, &lt;code&gt;context&lt;/code&gt; and &lt;code&gt;it&lt;/code&gt; all have in common.</source>
          <target state="translated">インフォその &lt;code&gt;describe&lt;/code&gt; 、 &lt;code&gt;context&lt;/code&gt; と &lt;code&gt;it&lt;/code&gt; すべて共通しています。</target>
        </trans-unit>
        <trans-unit id="211f828d6f28bcc064ab08a81d3eea6343094a2a" translate="yes" xml:space="preserve">
          <source>Info#directory?</source>
          <target state="translated">Info#directory?</target>
        </trans-unit>
        <trans-unit id="555f919b4df3de254a8116361968e47b73856f7e" translate="yes" xml:space="preserve">
          <source>Info#file?</source>
          <target state="translated">Info#file?</target>
        </trans-unit>
        <trans-unit id="c19de402a865facf8738f953f5b3cea929ac9070" translate="yes" xml:space="preserve">
          <source>Info#flags</source>
          <target state="translated">Info#flags</target>
        </trans-unit>
        <trans-unit id="f74f97b45c200e1a01e4223bf1a54bf53d7e3800" translate="yes" xml:space="preserve">
          <source>Info#group</source>
          <target state="translated">Info#group</target>
        </trans-unit>
        <trans-unit id="d95b51d0127ae694191c0cee6c3d001768e04ca8" translate="yes" xml:space="preserve">
          <source>Info#group_id</source>
          <target state="translated">Info#group_id</target>
        </trans-unit>
        <trans-unit id="c557ef53f8bf8c3d8b352f500bfa9c605ff912d1" translate="yes" xml:space="preserve">
          <source>Info#modification_time</source>
          <target state="translated">Info#modification_time</target>
        </trans-unit>
        <trans-unit id="abbb4b0e1f640dfdfc8cb04ffa078cec69437063" translate="yes" xml:space="preserve">
          <source>Info#owner</source>
          <target state="translated">Info#owner</target>
        </trans-unit>
        <trans-unit id="7686462e432ff523e94a65c84705cc753f67de17" translate="yes" xml:space="preserve">
          <source>Info#owner_id</source>
          <target state="translated">Info#owner_id</target>
        </trans-unit>
        <trans-unit id="2cbcbed738d550b11fc7f09535150b157ff0bd78" translate="yes" xml:space="preserve">
          <source>Info#permissions</source>
          <target state="translated">Info#permissions</target>
        </trans-unit>
        <trans-unit id="bbfbc280aca1bd08275922fcf5683a9bff351752" translate="yes" xml:space="preserve">
          <source>Info#same_file?</source>
          <target state="translated">Info#same_file?</target>
        </trans-unit>
        <trans-unit id="8f76514c8d7427a911d17937ee22793264048637" translate="yes" xml:space="preserve">
          <source>Info#size</source>
          <target state="translated">Info#size</target>
        </trans-unit>
        <trans-unit id="1069ce11cd747c58056412e13320fc85bdd1c62b" translate="yes" xml:space="preserve">
          <source>Info#symlink?</source>
          <target state="translated">Info#symlink?</target>
        </trans-unit>
        <trans-unit id="131f0f2ef479d04720650444b3026d8bff5acb48" translate="yes" xml:space="preserve">
          <source>Info#type</source>
          <target state="translated">Info#type</target>
        </trans-unit>
        <trans-unit id="fd9e1e8fb8993dc0d9e9eeef8c93cc0189fa0b6d" translate="yes" xml:space="preserve">
          <source>Info.new</source>
          <target state="translated">Info.new</target>
        </trans-unit>
        <trans-unit id="3919f37f92b72d7d934c42faeef036bec6d07752" translate="yes" xml:space="preserve">
          <source>Informative</source>
          <target state="translated">Informative</target>
        </trans-unit>
        <trans-unit id="fdaddb9ce367c2ca746a97cc24d2e8817a51f27d" translate="yes" xml:space="preserve">
          <source>Inheritance</source>
          <target state="translated">Inheritance</target>
        </trans-unit>
        <trans-unit id="5a9a718dd3cec7e2db3f95ddec3dcd166bff098e" translate="yes" xml:space="preserve">
          <source>Inheriting Documentation</source>
          <target state="translated">ドキュメントの継承</target>
        </trans-unit>
        <trans-unit id="ee4ac1c94b979fbbefb5d6504272ba72bca8e107" translate="yes" xml:space="preserve">
          <source>Inheriting documentation only works on &lt;em&gt;instance&lt;/em&gt;, non-constructor methods.</source>
          <target state="translated">ドキュメントの継承は、&lt;em&gt;インスタンスの&lt;/em&gt;非コンストラクターメソッドでのみ機能し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="73aa49eaa4b825dc0db4ce8945a56681d937f402" translate="yes" xml:space="preserve">
          <source>Initializes a shard folder and creates a &lt;code&gt;shard.yml&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;shard.yml&lt;/code&gt; フォルダーを初期化し、shard.ymlを作成します。</target>
        </trans-unit>
        <trans-unit id="079cd7451c2f33776e2d43a15299490325b9d402" translate="yes" xml:space="preserve">
          <source>Initializes an instance seeded from a system source.</source>
          <target state="translated">システムソースからシードされたインスタンスを初期化します。</target>
        </trans-unit>
        <trans-unit id="e3feee74bdbd58050136cbaaf33ab5797560f65d" translate="yes" xml:space="preserve">
          <source>Initializes an instance with the given &lt;em&gt;seed&lt;/em&gt; and &lt;em&gt;sequence&lt;/em&gt;.</source>
          <target state="translated">指定された&lt;em&gt;シード&lt;/em&gt;と&lt;em&gt;シーケンスで&lt;/em&gt;インスタンスを初期化します。</target>
        </trans-unit>
        <trans-unit id="a02f1240730d62d775f24cef4c75c62f97f3d2a2" translate="yes" xml:space="preserve">
          <source>Initializes the GC</source>
          <target state="translated">GC の初期化</target>
        </trans-unit>
        <trans-unit id="cc218c2e160f72aaf4bd66baecf606176dbdfee8" translate="yes" xml:space="preserve">
          <source>Initializes the MIME database loading contents from a file.</source>
          <target state="translated">ファイルからコンテンツを読み込むMIMEデータベースを初期化します。</target>
        </trans-unit>
        <trans-unit id="6c2631e1bd6441c38f62d38f6c5e2eda71db2b45" translate="yes" xml:space="preserve">
          <source>Initializes the MIME database.</source>
          <target state="translated">MIME データベースを初期化します。</target>
        </trans-unit>
        <trans-unit id="67704b2a377775925196685fd1c04cfb5a7c685c" translate="yes" xml:space="preserve">
          <source>Initializes this handler to log to the given &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">このハンドラを初期化して、指定された &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; にログを記録します。</target>
        </trans-unit>
        <trans-unit id="b568d47f2e244743b1fd7472db836ef9769c21f8" translate="yes" xml:space="preserve">
          <source>Input</source>
          <target state="translated">Input</target>
        </trans-unit>
        <trans-unit id="a6f41200b6d51a2b0a4e22a2949eb0f878c8d407" translate="yes" xml:space="preserve">
          <source>Input/output error</source>
          <target state="translated">入出力エラー</target>
        </trans-unit>
        <trans-unit id="48a10ed30072d4eb54080a4b477ad2480832a17b" translate="yes" xml:space="preserve">
          <source>InputMode</source>
          <target state="translated">InputMode</target>
        </trans-unit>
        <trans-unit id="ea9cbaf61598ef8489f9448debe9d96258545178" translate="yes" xml:space="preserve">
          <source>InputMode#brkint?</source>
          <target state="translated">InputMode#brkint?</target>
        </trans-unit>
        <trans-unit id="f5b1e9eb8d41546c9c0bc12ee611b836d18b045d" translate="yes" xml:space="preserve">
          <source>InputMode#icrnl?</source>
          <target state="translated">InputMode#icrnl?</target>
        </trans-unit>
        <trans-unit id="7fe14c0807d2e2119a097ab2c65d048ff6c3d2e8" translate="yes" xml:space="preserve">
          <source>InputMode#ignbrk?</source>
          <target state="translated">InputMode#ignbrk?</target>
        </trans-unit>
        <trans-unit id="07bc9f299a0b4597d4e7d9fd3f01eb09387ed1ea" translate="yes" xml:space="preserve">
          <source>InputMode#igncr?</source>
          <target state="translated">InputMode#igncr?</target>
        </trans-unit>
        <trans-unit id="8e6342c1809c583298f0e791e4aa19c85c9665eb" translate="yes" xml:space="preserve">
          <source>InputMode#ignpar?</source>
          <target state="translated">InputMode#ignpar?</target>
        </trans-unit>
        <trans-unit id="c70c126727f7464b259080460db08e721d2acc50" translate="yes" xml:space="preserve">
          <source>InputMode#inlcr?</source>
          <target state="translated">InputMode#inlcr?</target>
        </trans-unit>
        <trans-unit id="63b9e5c743fc33b9576b58396eb4a7ce77b3a4e1" translate="yes" xml:space="preserve">
          <source>InputMode#inpck?</source>
          <target state="translated">InputMode#inpck?</target>
        </trans-unit>
        <trans-unit id="0b208d03058a4ba2584d967881a3dd1fc49fa09b" translate="yes" xml:space="preserve">
          <source>InputMode#istrip?</source>
          <target state="translated">InputMode#istrip?</target>
        </trans-unit>
        <trans-unit id="52f8cf6cc1e5d5fab19e1de801849f67a48bf5c0" translate="yes" xml:space="preserve">
          <source>InputMode#ixany?</source>
          <target state="translated">InputMode#ixany?</target>
        </trans-unit>
        <trans-unit id="4393acb3d3e23d05e8ab73b5e6e0d9d9df6bde5a" translate="yes" xml:space="preserve">
          <source>InputMode#ixoff?</source>
          <target state="translated">InputMode#ixoff?</target>
        </trans-unit>
        <trans-unit id="6047be95a8a78ddb1ec7a95ed048207f63dcdfef" translate="yes" xml:space="preserve">
          <source>InputMode#ixon?</source>
          <target state="translated">InputMode#ixon?</target>
        </trans-unit>
        <trans-unit id="53cd219e3fcfca10ea5a789e3faf2a8a0729e539" translate="yes" xml:space="preserve">
          <source>InputMode#none?</source>
          <target state="translated">InputMode#none?</target>
        </trans-unit>
        <trans-unit id="ea136f1aa1cdcfd24aae5df9fa61e76957e3edbd" translate="yes" xml:space="preserve">
          <source>InputMode#parmrk?</source>
          <target state="translated">InputMode#parmrk?</target>
        </trans-unit>
        <trans-unit id="1424ec1956956356c2428404a376c4ef7da02718" translate="yes" xml:space="preserve">
          <source>Insert &lt;em&gt;object&lt;/em&gt; before the element at &lt;em&gt;index&lt;/em&gt; and shifting successive elements, if any.</source>
          <target state="translated">&lt;em&gt;インデックス&lt;/em&gt;の要素の前に&lt;em&gt;オブジェクトを&lt;/em&gt;挿入し、連続する要素があればそれをシフトします。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="641353f1acbc86a3146b793a84b36357f2a9c579" translate="yes" xml:space="preserve">
          <source>Insert &lt;em&gt;object&lt;/em&gt; before the element at &lt;em&gt;index&lt;/em&gt; and shifting successive elements, if any. Returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;インデックス&lt;/em&gt;の要素の前に&lt;em&gt;オブジェクトを&lt;/em&gt;挿入し、連続する要素があればそれをシフトします。 &lt;code&gt;self&lt;/code&gt; 返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="669b482fd3443d0e4b555121d0836c3c77953668" translate="yes" xml:space="preserve">
          <source>Insert a new item before the item at &lt;em&gt;index&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;indexの&lt;/em&gt;アイテムの前に新しいアイテムを挿入し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="6c30453bac2b40ed5569d54efb87eaafda2c1766" translate="yes" xml:space="preserve">
          <source>Insert a new item before the item at &lt;em&gt;index&lt;/em&gt;. Items to the right of this one will have their indices incremented.</source>
          <target state="translated">&lt;em&gt;indexの&lt;/em&gt;アイテムの前に新しいアイテムを挿入し&lt;em&gt;ます&lt;/em&gt;。このアイテムの右側にあるアイテムは、インデックスが増加します。</target>
        </trans-unit>
        <trans-unit id="5dfcdce8e330cf70f09d335158de3344bf482eca" translate="yes" xml:space="preserve">
          <source>Insert the following markdown build badge below the description in your README.md: (be sure to replace &lt;code&gt;&amp;lt;YOUR-GITHUB-USERNAME&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;YOUR-REPOSITORY-NAME&amp;gt;&lt;/code&gt; accordingly)</source>
          <target state="translated">README.mdの説明の下に次のマークダウンビルドバッジを挿入します（それに応じて &lt;code&gt;&amp;lt;YOUR-GITHUB-USERNAME&amp;gt;&lt;/code&gt; と &lt;code&gt;&amp;lt;YOUR-REPOSITORY-NAME&amp;gt;&lt;/code&gt; を必ず置き換えてください）。</target>
        </trans-unit>
        <trans-unit id="79bfe8293c52165db712b7851720a089934100fb" translate="yes" xml:space="preserve">
          <source>Inside an &lt;code&gt;if&lt;/code&gt;'s branch the type of a variable is the one it got assigned in that branch, or the one that it had before the branch if it was not reassigned:</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; ブランチ内では、変数のタイプは、そのブランチで割り当てられたものか、再割り当てされなかった場合にブランチの前にあったものです。</target>
        </trans-unit>
        <trans-unit id="48347e1765f4c25d196f4770862b167229fc6698" translate="yes" xml:space="preserve">
          <source>Inspection:</source>
          <target state="translated">Inspection:</target>
        </trans-unit>
        <trans-unit id="8794287335edc08cb0e7d9595e1c2caef264d686" translate="yes" xml:space="preserve">
          <source>Inspects &lt;em&gt;object&lt;/em&gt; to &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; followed by a newline.</source>
          <target state="translated">&lt;em&gt;オブジェクト&lt;/em&gt;を &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; の後に改行して検査します。</target>
        </trans-unit>
        <trans-unit id="8dd0e034a31cabd0dd6dfefaa78c95b41d73e8be" translate="yes" xml:space="preserve">
          <source>Inspects &lt;em&gt;object&lt;/em&gt; to &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; followed by a newline. Returns &lt;em&gt;object&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;オブジェクト&lt;/em&gt;を &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; の後に改行して検査します。&lt;em&gt;オブジェクトを&lt;/em&gt;返し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="82b9fbcf2cd1acbe12c532ec73e34d1049da7f3e" translate="yes" xml:space="preserve">
          <source>Inspects &lt;em&gt;objects&lt;/em&gt; to &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt;, followed by a newline.</source>
          <target state="translated">&lt;em&gt;オブジェクト&lt;/em&gt;を &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; で検査し、改行します。</target>
        </trans-unit>
        <trans-unit id="a9cccf2ce48c034cb15c334694329c222e943f12" translate="yes" xml:space="preserve">
          <source>Inspects &lt;em&gt;objects&lt;/em&gt; to &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt;, followed by a newline. Returns &lt;em&gt;objects&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;オブジェクト&lt;/em&gt;を &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; で検査し、改行します。&lt;em&gt;オブジェクトを&lt;/em&gt;返し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="b00edb8f50cfaab32f5ce41ac4dcdfa3ba22100a" translate="yes" xml:space="preserve">
          <source>Inspects each object in &lt;em&gt;objects&lt;/em&gt; to &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt;, followed by a newline.</source>
          <target state="translated">各オブジェクト検査&lt;em&gt;オブジェクト&lt;/em&gt;に &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; 、改行が続きます。</target>
        </trans-unit>
        <trans-unit id="15165d65c21e0a5e31e84fa1d4957edb3cae8c6d" translate="yes" xml:space="preserve">
          <source>Inspects each object in &lt;em&gt;objects&lt;/em&gt; to &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt;, followed by a newline. Returns &lt;em&gt;objects&lt;/em&gt;.</source>
          <target state="translated">各オブジェクト検査&lt;em&gt;オブジェクト&lt;/em&gt;に &lt;code&gt;&lt;a href=&quot;toplevel#STDOUT&quot;&gt;STDOUT&lt;/a&gt;&lt;/code&gt; 、改行が続きます。&lt;em&gt;オブジェクトを&lt;/em&gt;返し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="2466e6c5910e6bf74df9f4f82d2332639c23c538" translate="yes" xml:space="preserve">
          <source>Inspects this path to &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">この&lt;em&gt;io&lt;/em&gt;へのパスを検査します。</target>
        </trans-unit>
        <trans-unit id="e0e303864f9f232d82cce74c2cbb80e5eb573e15" translate="yes" xml:space="preserve">
          <source>Inspired by &lt;a href=&quot;http://rspec.info/&quot;&gt;Rspec&lt;/a&gt;, it includes a domain specific language (DSL) that allows you to write examples in a way similar to plain english.</source>
          <target state="translated">&lt;a href=&quot;http://rspec.info/&quot;&gt;Rspec&lt;/a&gt;に触発され、ドメイン固有言語（DSL）が含まれているため、プレーンな英語と同様の方法で例を書くことができます。</target>
        </trans-unit>
        <trans-unit id="fd6c3ebf7befca9f8208f86c76e4d4180303745c" translate="yes" xml:space="preserve">
          <source>Install</source>
          <target state="translated">Install</target>
        </trans-unit>
        <trans-unit id="026a10d33b98158b23aa84e14be00d4a7535b2fb" translate="yes" xml:space="preserve">
          <source>Install Package</source>
          <target state="translated">インストールパッケージ</target>
        </trans-unit>
        <trans-unit id="a5c63974011e21c8a3854d4404ae4c847f419401" translate="yes" xml:space="preserve">
          <source>Install Port</source>
          <target state="translated">ポートのインストール</target>
        </trans-unit>
        <trans-unit id="ecb676bc1d527af4bf1d1e60b4dbcf29dff3682b" translate="yes" xml:space="preserve">
          <source>Install binary dependencies</source>
          <target state="translated">バイナリ依存関係のインストール</target>
        </trans-unit>
        <trans-unit id="64a770b567d94e5af17d2b38d7fc2930e48e28d6" translate="yes" xml:space="preserve">
          <source>Install shards packages</source>
          <target state="translated">シャードパッケージのインストール</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="93299bfceb205192aa4908d74e536163a4f60bd1" translate="yes" xml:space="preserve">
          <source>Installation: From a tar.gz</source>
          <target state="translated">インストールします。tar.gzから</target>
        </trans-unit>
        <trans-unit id="31ea18871fd5bb7a83a164ee47bbaabaf473e8fb" translate="yes" xml:space="preserve">
          <source>Installation: From sources</source>
          <target state="translated">インストールしています。ソースから</target>
        </trans-unit>
        <trans-unit id="ae3b811b3acefcd0e3787d7d0a5b02df7721ec9c" translate="yes" xml:space="preserve">
          <source>Installation: On Alpine Linux</source>
          <target state="translated">インストール。Alpine Linux上で</target>
        </trans-unit>
        <trans-unit id="84621496885b87cf395a2b7fc3f5c707aed94b60" translate="yes" xml:space="preserve">
          <source>Installation: On Arch Linux</source>
          <target state="translated">インストール。Arch Linux上</target>
        </trans-unit>
        <trans-unit id="14b146755e997311386480108139d6e7d3e3ceff" translate="yes" xml:space="preserve">
          <source>Installation: On Debian and Ubuntu</source>
          <target state="translated">インストールします。DebianとUbuntuで</target>
        </trans-unit>
        <trans-unit id="02843fcfc91d316cb947685c4aad3101d85c0fe5" translate="yes" xml:space="preserve">
          <source>Installation: On FreeBSD</source>
          <target state="translated">インストール。FreeBSDで</target>
        </trans-unit>
        <trans-unit id="2b6827c56ecea00ab98538167517bde8641b4f53" translate="yes" xml:space="preserve">
          <source>Installation: On Gentoo Linux</source>
          <target state="translated">インストールします。Gentoo Linux上</target>
        </trans-unit>
        <trans-unit id="ca83100367cd95451e2cdb129b748615d4e17ea5" translate="yes" xml:space="preserve">
          <source>Installation: On Linux using Linuxbrew</source>
          <target state="translated">インストールします。Linux上でLinuxbrewを使用</target>
        </trans-unit>
        <trans-unit id="aac7c0cdba93b9e7f203765ffffb49b1b2eb9b3c" translate="yes" xml:space="preserve">
          <source>Installation: On Linux using Snap</source>
          <target state="translated">インストールします。LinuxでSnapを使用して</target>
        </trans-unit>
        <trans-unit id="5b8307a549d8a17ee93295fb77c3ef8198ede888" translate="yes" xml:space="preserve">
          <source>Installation: On OpenSUSE</source>
          <target state="translated">インストールします。OpenSUSEで</target>
        </trans-unit>
        <trans-unit id="977a24e5a96063c232ee2bf38a77622f04ae8831" translate="yes" xml:space="preserve">
          <source>Installation: On RedHat and CentOS</source>
          <target state="translated">インストールします。RedHatとCentOS上で</target>
        </trans-unit>
        <trans-unit id="b9c9b45d7f36185f544fe4b2106ed0ca8a1af51d" translate="yes" xml:space="preserve">
          <source>Installation: On macOS using Homebrew</source>
          <target state="translated">インストールします。macOS上でHomebrewを使用</target>
        </trans-unit>
        <trans-unit id="2a989538e88bba588f01f4b9d2d7226c2e1adeb5" translate="yes" xml:space="preserve">
          <source>Installation: Windows Subsystem for Linux</source>
          <target state="translated">インストール。Linux用Windowsサブシステム</target>
        </trans-unit>
        <trans-unit id="e38432618ce4d39079fc324e614d4d92a2815160" translate="yes" xml:space="preserve">
          <source>Installing</source>
          <target state="translated">Installing</target>
        </trans-unit>
        <trans-unit id="2b75e0ebdeabdcdf1e0dd0005d36c6d27323a6c3" translate="yes" xml:space="preserve">
          <source>Installing binary dependencies</source>
          <target state="translated">バイナリ依存関係のインストール</target>
        </trans-unit>
        <trans-unit id="560516499f15e40cd28d0ae743e0a74d14626dde" translate="yes" xml:space="preserve">
          <source>Installing shards packages</source>
          <target state="translated">シャードパッケージのインストール</target>
        </trans-unit>
        <trans-unit id="c0d0c0b27a5607a7a13affdba23a3f796628e001" translate="yes" xml:space="preserve">
          <source>Installing the shard</source>
          <target state="translated">シャードの設置</target>
        </trans-unit>
        <trans-unit id="29920c295454d02c33c602160a9238a8af27099a" translate="yes" xml:space="preserve">
          <source>Instance Method Detail</source>
          <target state="translated">インスタンスメソッド詳細</target>
        </trans-unit>
        <trans-unit id="95ec3ffd8dc53a1d99d736ad3933ef452d4ad2e9" translate="yes" xml:space="preserve">
          <source>Instance Method Summary</source>
          <target state="translated">インスタンスメソッドの概要</target>
        </trans-unit>
        <trans-unit id="7e668b525c2f1215b004e6856abf44b1d38d3384" translate="yes" xml:space="preserve">
          <source>Instance and class methods</source>
          <target state="translated">インスタンスとクラスメソッド</target>
        </trans-unit>
        <trans-unit id="625ad1613b53ad4be00259e6cb712cf9bd80fe98" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">クラス &lt;code&gt;&lt;a href=&quot;../../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="779c3bbdafc342613b070ca3ebd350a5ca45a805" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../../../object&quot;&gt;Object&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">クラス &lt;code&gt;&lt;a href=&quot;../../../object&quot;&gt;Object&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="495386fae8728da628e10ba3a1f4ca8927dad678" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../../../reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">クラス &lt;code&gt;&lt;a href=&quot;../../../reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="e271f85116eb91729a7311f905499fc67d59a9b0" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../../exception&quot;&gt;Exception&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">クラス &lt;code&gt;&lt;a href=&quot;../../exception&quot;&gt;Exception&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="dc54bcc13746373ebce84768c3360d5b952bacf5" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">クラス &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="7de513b46c2d258a82234d55cf0fed4f87b22a46" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../../object&quot;&gt;Object&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">クラス &lt;code&gt;&lt;a href=&quot;../../object&quot;&gt;Object&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="8b5ad0022bca9c10a82bd2fffc0f4a588e8ee18f" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../../reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">クラス &lt;code&gt;&lt;a href=&quot;../../reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="b955ebe67b3313bb658feacd5e9b8966d8a36a03" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../abi&quot;&gt;LLVM::ABI&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">クラス &lt;code&gt;&lt;a href=&quot;../abi&quot;&gt;LLVM::ABI&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="76df7a846356daf25378fd3f2a31782fbbc75775" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../accesstoken&quot;&gt;OAuth2::AccessToken&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">クラス &lt;code&gt;&lt;a href=&quot;../accesstoken&quot;&gt;OAuth2::AccessToken&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="d472670d7e231672d035a16e5399209ac632bd01" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../context&quot;&gt;OpenSSL::SSL::Context&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../context&quot;&gt;OpenSSL::SSL::Context&lt;/a&gt;&lt;/code&gt; クラスから継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="b8076e3298ef1a45b1cceaff1d226f354208a938" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../digest&quot;&gt;Digest&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">クラス &lt;code&gt;&lt;a href=&quot;../digest&quot;&gt;Digest&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="cd2090310805dfad76c53e0c4e51617b1fea7eef" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../digest/base&quot;&gt;Digest::Base&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">クラス &lt;code&gt;&lt;a href=&quot;../digest/base&quot;&gt;Digest::Base&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="a72b5063f6bf807b810b9d813c086cce18ab649a" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../error&quot;&gt;OpenSSL::Error&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../error&quot;&gt;OpenSSL::Error&lt;/a&gt;&lt;/code&gt; クラスから継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="d3193f43864977bd8a126845f1b32d028e2da268" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../exception&quot;&gt;Exception&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">クラス &lt;code&gt;&lt;a href=&quot;../exception&quot;&gt;Exception&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="d9a21025e00e8a6bfa6fd188fdf7e00e88d25999" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">クラス &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="af43034df2a7db3fa5db0296cf9604db98eff03e" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../object&quot;&gt;Object&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">クラス &lt;code&gt;&lt;a href=&quot;../object&quot;&gt;Object&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="992396af83e54e6d38524bc981e78a173758a3d3" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../openssl/digest&quot;&gt;OpenSSL::Digest&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">クラス &lt;code&gt;&lt;a href=&quot;../openssl/digest&quot;&gt;OpenSSL::Digest&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="f78d09fd15ef4505c7df21c705ff186d5d5896f4" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">クラス &lt;code&gt;&lt;a href=&quot;../reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="595723d4cdf205de378899f2c04433910d60b241" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;../socket&quot;&gt;OpenSSL::SSL::Socket&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../socket&quot;&gt;OpenSSL::SSL::Socket&lt;/a&gt;&lt;/code&gt; クラスから継承したインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="902a04107a176049bcdb5a6a6821bdbd93838591" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;astnode&quot;&gt;Crystal::Macros::ASTNode&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">クラス &lt;code&gt;&lt;a href=&quot;astnode&quot;&gt;Crystal::Macros::ASTNode&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="fb7a5d13bab606ab9a668bf9fadeceb8f6be741d" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;backend&quot;&gt;Log::Backend&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;backend&quot;&gt;Log::Backend&lt;/a&gt;&lt;/code&gt; クラスから継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="c6b53340d25780935441e456b7fefb921af56c15" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;base&quot;&gt;Digest::Base&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">クラス &lt;code&gt;&lt;a href=&quot;base&quot;&gt;Digest::Base&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="f12f325e35239d1d4ac651641d8eba69d54b03ba" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;binaryop&quot;&gt;Crystal::Macros::BinaryOp&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">クラス &lt;code&gt;&lt;a href=&quot;binaryop&quot;&gt;Crystal::Macros::BinaryOp&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="37b484e4bd032119ce29dff68cfc389ba2eefd83" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;context&quot;&gt;Spec::Context&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">クラス &lt;code&gt;&lt;a href=&quot;context&quot;&gt;Spec::Context&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="c0ef9c86432b4eaf19770de2e4b10f425cf806e4" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;error&quot;&gt;File::Error&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">クラス &lt;code&gt;&lt;a href=&quot;error&quot;&gt;File::Error&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="8adcab79aad39ccd4ad1fa22b8031281765f9876" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;exception&quot;&gt;Exception&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">クラス &lt;code&gt;&lt;a href=&quot;exception&quot;&gt;Exception&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="58889bc238f3f9243128c75d384acd6d96355aa7" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">クラス &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="bd639e78d199d451a642528d5f1b499810aab90c" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;io/filedescriptor&quot;&gt;IO::FileDescriptor&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">クラス &lt;code&gt;&lt;a href=&quot;io/filedescriptor&quot;&gt;IO::FileDescriptor&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="549f4aa52a2f99158653e49dcd2be2a4ceb74955" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;ipsocket&quot;&gt;IPSocket&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">クラス &lt;code&gt;&lt;a href=&quot;ipsocket&quot;&gt;IPSocket&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="922b7ec525116ba2b6f9744547ce8137d96b6e17" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;node&quot;&gt;YAML::Nodes::Node&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">クラス &lt;code&gt;&lt;a href=&quot;node&quot;&gt;YAML::Nodes::Node&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="504f9b81ae5086cf927f532a9913f5682856629d" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;object&quot;&gt;Object&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">クラス &lt;code&gt;&lt;a href=&quot;object&quot;&gt;Object&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="e9e34b3b2e38bd897a768504f5edb3a3a25bdef9" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;parseexception&quot;&gt;JSON::ParseException&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">クラス &lt;code&gt;&lt;a href=&quot;parseexception&quot;&gt;JSON::ParseException&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="03d5dfbac341191fc15752140322f90293951972" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">クラス &lt;code&gt;&lt;a href=&quot;reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="f91efe764607d03b3ef4de866bc882e5c4508b04" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;socket&quot;&gt;Socket&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">クラス &lt;code&gt;&lt;a href=&quot;socket&quot;&gt;Socket&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="f6654b3bf70076fb6ae098c1603c233a43588c29" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;tcpsocket&quot;&gt;TCPSocket&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">クラス &lt;code&gt;&lt;a href=&quot;tcpsocket&quot;&gt;TCPSocket&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="13d063324b14232dbcf382db359e6a5647c6eb12" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;unaryexpression&quot;&gt;Crystal::Macros::UnaryExpression&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">クラス &lt;code&gt;&lt;a href=&quot;unaryexpression&quot;&gt;Crystal::Macros::UnaryExpression&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="a1b614fe3d8b250a81a9c6fc997ac78b5b335d27" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;unixsocket&quot;&gt;UNIXSocket&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">クラス &lt;code&gt;&lt;a href=&quot;unixsocket&quot;&gt;UNIXSocket&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="2b07d582b15cc6bc994385bc8a839f48b8cc2163" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from class &lt;code&gt;&lt;a href=&quot;x86&quot;&gt;LLVM::ABI::X86&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">クラス &lt;code&gt;&lt;a href=&quot;x86&quot;&gt;LLVM::ABI::X86&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="07a8acace28ea36366dfd45a2a0aba0756fc0332" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../../../comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;../../../enum&quot;&gt;Enum&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;../../../comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;../../../enum&quot;&gt;Enum&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;../../../enum&quot;&gt;Enum&lt;/a&gt;）から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="a2ed540ea434b65c8276d053321d121427881bb0" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../../../io/buffered&quot;&gt;IO::Buffered&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;../../../io/buffered&quot;&gt;IO::Buffered&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="8e234cd72db496d0e0b23779af06cbe1e7606679" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../../comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;../../enum&quot;&gt;Enum&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;../../comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;../../enum&quot;&gt;Enum&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;../../enum&quot;&gt;Enum&lt;/a&gt;）から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="2edd9ce4b71b7fa0fb68833358f0d39aa4d9124c" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;node&quot;&gt;YAML::Nodes::Node&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;node&quot;&gt;YAML::Nodes::Node&lt;/a&gt;)&lt;/code&gt; モジュールから継承されたインスタンスメソッド（&lt;a href=&quot;node&quot;&gt;YAML :: Nodes :: Node&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="19f077ce0ba9a600a23cdef15a484fd65e7aded1" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../../io/buffered&quot;&gt;IO::Buffered&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;../../io/buffered&quot;&gt;IO::Buffered&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="1ce20134551a90d41c9dd992163ea84e49f82e5a" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../../socket/server&quot;&gt;Socket::Server&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;../../socket/server&quot;&gt;Socket::Server&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="176de805f58e1ddeda315cfce34628cbd1025577" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../../systemerror&quot;&gt;SystemError&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;../../systemerror&quot;&gt;SystemError&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="d11548c1616a9cad4dd53b0f119d6c7682dfe51a" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;../enum&quot;&gt;Enum&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;../comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;../enum&quot;&gt;Enum&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;../enum&quot;&gt;Enum&lt;/a&gt;）から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="8b2d4d04ef9f939712716d72d20f5a4a02b9514f" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;prerelease&quot;&gt;SemanticVersion::Prerelease&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;../comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;prerelease&quot;&gt;SemanticVersion::Prerelease&lt;/a&gt;)&lt;/code&gt; から継承されたインスタンスメソッド（&lt;a href=&quot;prerelease&quot;&gt;SemanticVersion :: Prerelease&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="ce89da18135892a4e78b6a6501866f08e2bed7b3" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;span&quot;&gt;Time::Span&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;span&quot;&gt;Time::Span&lt;/a&gt;)&lt;/code&gt; モジュールから継承されたインスタンスメソッド（&lt;a href=&quot;span&quot;&gt;Time :: Span&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="cd716cbe21c05123809dc0613db630653673d7ab" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable(T)&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable(T)&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="b3f482136cdbc0a4a7962b03e6b2d57246dfa835" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;../char&quot;&gt;Char&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;../char&quot;&gt;Char&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;../char&quot;&gt;Char&lt;/a&gt;）から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="5dcea3a3bac179e9b675b41bdbc8f91ce9a48620" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;basicblock&quot;&gt;LLVM::BasicBlock&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;basicblock&quot;&gt;LLVM::BasicBlock&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;basicblock&quot;&gt;LLVM :: BasicBlock&lt;/a&gt;）から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="34b0ddb90a6b4232644256bc68eb8ab60f31da70" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;cookie&quot;&gt;HTTP::Cookie&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;cookie&quot;&gt;HTTP::Cookie&lt;/a&gt;)&lt;/code&gt; モジュールから継承されたインスタンスメソッド（&lt;a href=&quot;cookie&quot;&gt;HTTP :: Cookie&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="54b0adde0c8a9ecc78cc9749536aa4abdde688d8" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;node&quot;&gt;XML::Node&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;node&quot;&gt;XML::Node&lt;/a&gt;)&lt;/code&gt; モジュールから継承されたインスタンスメソッド（&lt;a href=&quot;node&quot;&gt;XML :: Node&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="843f8b20707d49e0489d41c7af1b8a524329a67c" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;value&quot;&gt;LLVM::Value&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;value&quot;&gt;LLVM::Value&lt;/a&gt;)&lt;/code&gt; モジュールから継承されたインスタンスメソッド（&lt;a href=&quot;value&quot;&gt;LLVM :: Value&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="bea7f333ade27e3b4fe49b6f15b7131f0f3863f8" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;({&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;(&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;)})&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;({&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;(&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;)})&lt;/code&gt; （{ &lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;、&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;（&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;）}）から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="64138db181683ef3f4efc8d0ff8f8b75a0f09105" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;({&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;})&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;({&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;})&lt;/code&gt; （{ &lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;、&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt; }）から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="caf4af3a1c2edb69d9acb5d9768a8fd824ae5a6b" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;({&lt;a href=&quot;../symbol&quot;&gt;Symbol&lt;/a&gt;, &lt;a href=&quot;metadata/value&quot;&gt;Log::Metadata::Value&lt;/a&gt;})&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;../enumerable&quot;&gt;Enumerable&lt;/a&gt;({&lt;a href=&quot;../symbol&quot;&gt;Symbol&lt;/a&gt;, &lt;a href=&quot;metadata/value&quot;&gt;Log::Metadata::Value&lt;/a&gt;})&lt;/code&gt; から継承されたインスタンスメソッド（{&lt;a href=&quot;../symbol&quot;&gt;シンボル&lt;/a&gt;、&lt;a href=&quot;metadata/value&quot;&gt;ログ::メタデータ::値&lt;/a&gt;}）</target>
        </trans-unit>
        <trans-unit id="5fed9eeaedfce68f0bc3a21a257e72335f0d02f3" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../fileinfo&quot;&gt;Compress::Zip::FileInfo&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;../fileinfo&quot;&gt;Compress::Zip::FileInfo&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="ec9ee768bf2e0e991886622325536634609e0fea" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../fileinfo&quot;&gt;Zip::FileInfo&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;../fileinfo&quot;&gt;Zip::FileInfo&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="7f43d471a0ee157f5c9e550cd5f6ae083e9db6f8" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../indexable&quot;&gt;Indexable&lt;/a&gt;(&lt;a href=&quot;value&quot;&gt;LLVM::Value&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;../indexable&quot;&gt;Indexable&lt;/a&gt;(&lt;a href=&quot;value&quot;&gt;LLVM::Value&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;value&quot;&gt;LLVM :: Value&lt;/a&gt;）から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="2508026a5b4ad63a2b63d43b5b58182478a99593" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../io/buffered&quot;&gt;IO::Buffered&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;../io/buffered&quot;&gt;IO::Buffered&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="382d6b3d67cbde7a87dcfe9b892d553b1e0179cf" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../iterable&quot;&gt;Iterable&lt;/a&gt;(&lt;a href=&quot;value&quot;&gt;LLVM::Value&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../iterable&quot;&gt;Iterable&lt;/a&gt;(&lt;a href=&quot;value&quot;&gt;LLVM::Value&lt;/a&gt;)&lt;/code&gt; モジュールから継承されたインスタンスメソッド（&lt;a href=&quot;value&quot;&gt;LLVM :: Value&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="3bb884ca1e3deb301ab9699fe0b1d8ed45f79d85" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../iterator&quot;&gt;Iterator(T)&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;../iterator&quot;&gt;Iterator(T)&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="1697a7f62c96941f72b1ae1a1e51efed46b5ad11" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../random&quot;&gt;Random&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../random&quot;&gt;Random&lt;/a&gt;&lt;/code&gt; モジュールから継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="ada2e6d483a5a9aa8bd26bdd22069162436fbf73" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;../systemerror&quot;&gt;SystemError&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;../systemerror&quot;&gt;SystemError&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="6104b557931f550106bfaef0ba7b87b0618d1950" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;buffered&quot;&gt;IO::Buffered&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;buffered&quot;&gt;IO::Buffered&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="763447b55c2378aa9bb7188392e64701e6c87db7" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;colorize/objectextensions&quot;&gt;Colorize::ObjectExtensions&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;colorize/objectextensions&quot;&gt;Colorize::ObjectExtensions&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="a3c09eab66b8fcbc1296c2a743be2313ed71fe6a" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;array&quot;&gt;Array(T)&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;array&quot;&gt;Array(T)&lt;/a&gt;)&lt;/code&gt; モジュールから継承されたインスタンスメソッド（&lt;a href=&quot;array&quot;&gt;Array（T）&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="60696d81504a878b276cd154e86985cf39592652" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;bigdecimal&quot;&gt;BigDecimal&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;bigdecimal&quot;&gt;BigDecimal&lt;/a&gt;)&lt;/code&gt; モジュール（&lt;a href=&quot;bigdecimal&quot;&gt;BigDecimal&lt;/a&gt;）から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="f693e93b23fb60614fae8915331e9a46c9767a9b" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;bigfloat&quot;&gt;BigFloat&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;bigfloat&quot;&gt;BigFloat&lt;/a&gt;)&lt;/code&gt; モジュール（&lt;a href=&quot;bigfloat&quot;&gt;BigFloat&lt;/a&gt;）から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="f59d7437e715d1fd88063417f5ff8a57e5b5a5e6" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;bigint&quot;&gt;BigInt&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;bigint&quot;&gt;BigInt&lt;/a&gt;)&lt;/code&gt; モジュール（&lt;a href=&quot;bigint&quot;&gt;BigInt&lt;/a&gt;）から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="966e8f4216ed7f57ddc41a054effb5be8b30b319" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;bigrational&quot;&gt;BigRational&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;bigrational&quot;&gt;BigRational&lt;/a&gt;)&lt;/code&gt; モジュールから継承されたインスタンスメソッド（&lt;a href=&quot;bigrational&quot;&gt;BigRational&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="172ab3d22a92c4c6cb60a69518c1cd873998bb45" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;char&quot;&gt;Char&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;char&quot;&gt;Char&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;char&quot;&gt;Char&lt;/a&gt;）モジュールから継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="16670e88ef001e42b5e4866e2e9cc7884cdfc82d" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;enum&quot;&gt;Enum&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;enum&quot;&gt;Enum&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;enum&quot;&gt;Enum&lt;/a&gt;）から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="69b4ab7d9c3aa6666b642abef9abb0fcb4397dcb" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;）から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="d0093445e65ceb4ed874ac618ce508121d00a863" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;）モジュールから継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="f0c34bc6bdc658dc7efe4410dd9b8631c04047a8" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;int128&quot;&gt;Int128&lt;/a&gt; | &lt;a href=&quot;int16&quot;&gt;Int16&lt;/a&gt; | &lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt; | &lt;a href=&quot;int64&quot;&gt;Int64&lt;/a&gt; | &lt;a href=&quot;int8&quot;&gt;Int8&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;int128&quot;&gt;Int128&lt;/a&gt; | &lt;a href=&quot;int16&quot;&gt;Int16&lt;/a&gt; | &lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt; | &lt;a href=&quot;int64&quot;&gt;Int64&lt;/a&gt; | &lt;a href=&quot;int8&quot;&gt;Int8&lt;/a&gt;)&lt;/code&gt; モジュールから継承されたインスタンスメソッド（&lt;a href=&quot;int128&quot;&gt;Int128&lt;/a&gt; | &lt;a href=&quot;int16&quot;&gt;Int16&lt;/a&gt; | &lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt; | &lt;a href=&quot;int64&quot;&gt;Int64&lt;/a&gt; | &lt;a href=&quot;int8&quot;&gt;Int8&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="918a356c1cd630c5ccfeeee027da8b326301528f" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;number&quot;&gt;Number&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;number&quot;&gt;Number&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;number&quot;&gt;Number&lt;/a&gt;）から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="6904031db5a94884fd6ce9cc3d8a48bdec9b103a" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;path&quot;&gt;Path&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;path&quot;&gt;Path&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;path&quot;&gt;Path&lt;/a&gt;）から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="df2d69a3f1c794c9e047c3ea546e2bf6a053de32" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;pointer&quot;&gt;Pointer(T)&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;pointer&quot;&gt;Pointer(T)&lt;/a&gt;)&lt;/code&gt; モジュールから継承されたインスタンスメソッド（&lt;a href=&quot;pointer&quot;&gt;Pointer（T）&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="b87287803c89561dddaea6106b0f4e44ea3e06ce" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;semanticversion&quot;&gt;SemanticVersion&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;semanticversion&quot;&gt;SemanticVersion&lt;/a&gt;)&lt;/code&gt; モジュールから継承されたインスタンスメソッド（&lt;a href=&quot;semanticversion&quot;&gt;SemanticVersion&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="f19feadd87570b6ce794943af3a82cf30bc03a83" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;slice&quot;&gt;Slice(T)&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;slice&quot;&gt;Slice(T)&lt;/a&gt;)&lt;/code&gt; モジュールから継承されたインスタンスメソッド（&lt;a href=&quot;slice&quot;&gt;Slice（T）&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="58896b1fca39ca27d30559b2e1b530b6a07a245e" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;）モジュールから継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="7edb5b38a0e022b285be0ba79123f36dc1285703" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;symbol&quot;&gt;Symbol&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;symbol&quot;&gt;Symbol&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;symbol&quot;&gt;Symbol&lt;/a&gt;）から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="4c7204115b26fd9dcabbccaefd9ebb2981b576f4" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;）モジュールから継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="ab44b2220d4fac863ac3c629acdfaf6ab9c422a8" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;tuple&quot;&gt;Tuple(*T)&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;tuple&quot;&gt;Tuple(*T)&lt;/a&gt;)&lt;/code&gt; モジュールから継承されたインスタンスメソッド（&lt;a href=&quot;tuple&quot;&gt;Tuple（* T）&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="adcb6edfc39d721d5978a401737c4f2823827ec8" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;uint128&quot;&gt;UInt128&lt;/a&gt; | &lt;a href=&quot;uint16&quot;&gt;UInt16&lt;/a&gt; | &lt;a href=&quot;uint32&quot;&gt;UInt32&lt;/a&gt; | &lt;a href=&quot;uint64&quot;&gt;UInt64&lt;/a&gt; | &lt;a href=&quot;uint8&quot;&gt;UInt8&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;comparable&quot;&gt;Comparable&lt;/a&gt;(&lt;a href=&quot;uint128&quot;&gt;UInt128&lt;/a&gt; | &lt;a href=&quot;uint16&quot;&gt;UInt16&lt;/a&gt; | &lt;a href=&quot;uint32&quot;&gt;UInt32&lt;/a&gt; | &lt;a href=&quot;uint64&quot;&gt;UInt64&lt;/a&gt; | &lt;a href=&quot;uint8&quot;&gt;UInt8&lt;/a&gt;)&lt;/code&gt; モジュールから継承されたインスタンスメソッド（&lt;a href=&quot;uint128&quot;&gt;UInt128&lt;/a&gt; | &lt;a href=&quot;uint16&quot;&gt;UInt16&lt;/a&gt; | &lt;a href=&quot;uint32&quot;&gt;UInt32&lt;/a&gt; | &lt;a href=&quot;uint64&quot;&gt;UInt64&lt;/a&gt; | &lt;a href=&quot;uint8&quot;&gt;UInt8&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="52592ff5c9270879c50529d8f34ded1452fbbf46" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;configuration&quot;&gt;Log::Configuration&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;configuration&quot;&gt;Log::Configuration&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="a2a15a713d0246dc5a56f0fb318bee674782aeeb" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;digestbase&quot;&gt;OpenSSL::DigestBase&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;digestbase&quot;&gt;OpenSSL::DigestBase&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="1c21d4887f60046357206343c0e7562fb7d9f130" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;dispatcher&quot;&gt;Log::Dispatcher&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;dispatcher&quot;&gt;Log::Dispatcher&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="01b5447df39ccb2a1331ad2caa39b6e2e8040fa3" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable(B)&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable(B)&lt;/a&gt;&lt;/code&gt; モジュールから継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="26801ea74bcce4fa50803d16f05a123f68ef282c" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable(T)&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable(T)&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="8e190b9658c707564fdb7568e97ee93403bddb1e" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable(Union(*T))&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable(Union(*T))&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="6f1deafbd488c9638b0ef185b18965877f2e8e0f" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable({K, V})&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable({K, V})&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="a036f831ce2c4ef2871580edf77ea91edc24ea8d" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;）から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="bf6acbca2831b860e8a2d113f3b3863142cbe2c4" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;enumerable&quot;&gt;Enumerable&lt;/a&gt;(&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;）から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="11126c8993ceb2fedad5b98f3569e326ed320495" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;evented&quot;&gt;IO::Evented&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;evented&quot;&gt;IO::Evented&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="d81707053aef30e815cdfcd70b77c517639ef03b" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;handler&quot;&gt;HTTP::Handler&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;handler&quot;&gt;HTTP::Handler&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="19c334872a4b8191880c20c5e11d5c466de3e189" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable(T)&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable(T)&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="ed56f4609ce42aec0bd5f0f4388236f30d7f049f" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable(Union(*T))&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable(Union(*T))&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="e180e274d409a47b9c4de49b979ecdb6b772ddab" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;(&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;indexable&quot;&gt;Indexable&lt;/a&gt;(&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;）から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="5e3629b4f97532cfc945381c519877a4e39ee4fb" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;io/buffered&quot;&gt;IO::Buffered&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;io/buffered&quot;&gt;IO::Buffered&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="2f785ecc4d0cbda96e34ea756b8cd693e9a78b56" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;io/evented&quot;&gt;IO::Evented&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;io/evented&quot;&gt;IO::Evented&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="6939fd73835944e54e120b7ef84da10198cfb61e" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;item&quot;&gt;Spec::Item&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;item&quot;&gt;Spec::Item&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="08c5b58c69f36ce6a880552e8a8f5a2399bee7bc" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable(B)&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable(B)&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="387a0827abec2164a5c8e409494666a8f4d9f65b" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable(T)&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable(T)&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="284ea93b21422c1844ad76bc2f946067818d25f3" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable(Union(*T))&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable(Union(*T))&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="9db72ef176f33f82127711118bf20ba5e5f71ec3" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable({K, V})&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable({K, V})&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="50eb67acdc7e8315fa8537f937c808b4cb593275" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable&lt;/a&gt;(&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable&lt;/a&gt;(&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;)&lt;/code&gt; から継承されたインスタンスメソッド（&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="8bd94e9cceea37cd2a1f0c6372adff5d60e254d4" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable&lt;/a&gt;(&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;)&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable&lt;/a&gt;(&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;)&lt;/code&gt; （&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;）から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="e0ad2ae8c740fcbf03ded02e3980a0b3d18da51b" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;socket/server&quot;&gt;Socket::Server&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;socket/server&quot;&gt;Socket::Server&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="f0255d48df50033a5c08288854202c8d1e281ff1" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;spec/expectations&quot;&gt;Spec::Expectations&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;spec/expectations&quot;&gt;Spec::Expectations&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="42798e60708f25559436f78375082afd9ce75e5e" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;spec/methods&quot;&gt;Spec::Methods&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;spec/methods&quot;&gt;Spec::Methods&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="94116eac0714ebe5c05ac72d9bcf9316127dd5f7" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;spec/objectextensions&quot;&gt;Spec::ObjectExtensions&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;spec/objectextensions&quot;&gt;Spec::ObjectExtensions&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="c6b2fc96c213aeacdaf3a28e0d584c60ab716699" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;systemerror&quot;&gt;SystemError&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;systemerror&quot;&gt;SystemError&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="2bd902ebd90c947a05ed362303944a9b69cbb8f1" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;&lt;a href=&quot;valuemethods&quot;&gt;LLVM::ValueMethods&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;&lt;a href=&quot;valuemethods&quot;&gt;LLVM::ValueMethods&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="e5012ba8f5fe9dfe226fa3cd955fe32147cdcfa6" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;Crystal::System::FileDescriptor&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;Crystal::System::FileDescriptor&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="8ccf7f6da732198e30eab3e0580f002c36ac0d1a" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from module &lt;code&gt;Spec::Item&lt;/code&gt;</source>
          <target state="translated">モジュール &lt;code&gt;Spec::Item&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="b88cce42690ad0f5f76343c477168535a131fbe6" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;../../../enum&quot;&gt;Enum&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../../enum&quot;&gt;Enum&lt;/a&gt;&lt;/code&gt; 構造体から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="4ff438d3401a260d7ce9eb30def0d7baff2cd0a9" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;../../../value&quot;&gt;Value&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">構造体の &lt;code&gt;&lt;a href=&quot;../../../value&quot;&gt;Value&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="9d05c77e3d09c739427b5f89392f4952f24d7709" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;../../enum&quot;&gt;Enum&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../enum&quot;&gt;Enum&lt;/a&gt;&lt;/code&gt; 構造体から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="ef63b4a729b6e6df8cd557cd417e5409a3541cce" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;../../struct&quot;&gt;Struct&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../struct&quot;&gt;Struct&lt;/a&gt;&lt;/code&gt; 構造体から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="d36d1647ad771953e663750241ff94128dfa757e" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;../../value&quot;&gt;Value&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">構造体の &lt;code&gt;&lt;a href=&quot;../../value&quot;&gt;Value&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="638b5d4647bb4fbe2c338746fff2fb9dc2ad83bb" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;../enum&quot;&gt;Enum&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../enum&quot;&gt;Enum&lt;/a&gt;&lt;/code&gt; 構造体から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="1fca12ff7f28f5b966a2ba2a61c10a2439c0cf6c" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;../struct&quot;&gt;Struct&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../struct&quot;&gt;Struct&lt;/a&gt;&lt;/code&gt; 構造体から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="c711cc6273df85f8080896391e6ce93972754dd7" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;../value&quot;&gt;Value&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">構造体の &lt;code&gt;&lt;a href=&quot;../value&quot;&gt;Value&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="aa6282d77aaeda0f7354735036dffa1dddeba68c" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;address&quot;&gt;Socket::Address&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;address&quot;&gt;Socket::Address&lt;/a&gt;&lt;/code&gt; 構造体から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="f419c143cfa7f7b9440dba7a9007059e7a8ff490" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;enum&quot;&gt;Enum&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;enum&quot;&gt;Enum&lt;/a&gt;&lt;/code&gt; 構造体から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="414cfcce8f945f8be68a800e2b7bee693375d55e" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">struct &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="3c91c5467521d8d79f59e290aef53a2d47a1cdd8" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">構造体 &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="776889a99f5efbde8af0b0831e059b4b4aa9279f" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;number&quot;&gt;Number&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">構造体 &lt;code&gt;&lt;a href=&quot;number&quot;&gt;Number&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="668b9755f9042fe08fc8b737c9c9d824a05936bd" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;staticformatter&quot;&gt;Log::StaticFormatter&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">struct &lt;code&gt;&lt;a href=&quot;staticformatter&quot;&gt;Log::StaticFormatter&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="99520548a5b6fa1368fc225b4b330725766f4adb" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;struct&quot;&gt;Struct&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;struct&quot;&gt;Struct&lt;/a&gt;&lt;/code&gt; 構造体から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="7fd122fc7b8952ccaa5aa25eefe74cb5db77fa2a" translate="yes" xml:space="preserve">
          <source>Instance methods inherited from struct &lt;code&gt;&lt;a href=&quot;value&quot;&gt;Value&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">構造体の &lt;code&gt;&lt;a href=&quot;value&quot;&gt;Value&lt;/a&gt;&lt;/code&gt; から継承されたインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="22f04c4ba964874db6809362b1a8926b072c78c2" translate="yes" xml:space="preserve">
          <source>Instance variables</source>
          <target state="translated">インスタンス変数</target>
        </trans-unit>
        <trans-unit id="6ea55c865bf1db46d6a04d21a747577b7c0d892a" translate="yes" xml:space="preserve">
          <source>Instance variables can also be initialized outside &lt;code&gt;initialize&lt;/code&gt; methods:</source>
          <target state="translated">インスタンス変数は、 &lt;code&gt;initialize&lt;/code&gt; メソッドの外でも初期化できます。</target>
        </trans-unit>
        <trans-unit id="787f100278103ea55c1573c04de928c8d31f8940" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; are focused on telling time &amp;ndash; using a &quot;wall clock&quot;. When &lt;code&gt;&lt;a href=&quot;time#local(year:Int32,month:Int32,day:Int32,hour:Int32=0,minute:Int32=0,second:Int32=0,*,nanosecond:Int32=0,location:Location=Location.local):Time-class-method&quot;&gt;Time.local&lt;/a&gt;&lt;/code&gt; is called multiple times, the difference between the returned instances is not guaranteed to equal to the time elapsed between making the calls; even the order of the returned &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; instances might not reflect invocation order.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; インスタンスは、「壁時計」を使用して、時間を伝えることに焦点を当てています。 &lt;code&gt;&lt;a href=&quot;time#local(year:Int32,month:Int32,day:Int32,hour:Int32=0,minute:Int32=0,second:Int32=0,*,nanosecond:Int32=0,location:Location=Location.local):Time-class-method&quot;&gt;Time.local&lt;/a&gt;&lt;/code&gt; が複数回呼び出された場合、返されたインスタンス間の差は、呼び出しを行う間に経過した時間と等しいことが保証されていません。返される &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; インスタンスの順序でさえ、呼び出し順序を反映していない場合があります。</target>
        </trans-unit>
        <trans-unit id="5e1e9e6b7c9ad5f0cd5bd359d068c9fe5d7ea585" translate="yes" xml:space="preserve">
          <source>Instances of this class are passed to an &lt;code&gt;&lt;a href=&quot;../server&quot;&gt;HTTP::Server&lt;/a&gt;&lt;/code&gt; handler.</source>
          <target state="translated">このクラスのインスタンスは、 &lt;code&gt;&lt;a href=&quot;../server&quot;&gt;HTTP::Server&lt;/a&gt;&lt;/code&gt; ハンドラーに渡されます。</target>
        </trans-unit>
        <trans-unit id="730c339a7cd2a34beae6a3ce5d3f2837c7778306" translate="yes" xml:space="preserve">
          <source>Instances of this class wrap another &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; object. When you write to this instance, it compresses the data and writes it to the underlying &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">このクラスのインスタンスは、別の &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; オブジェクトをラップします。このインスタンスに書き込むと、データが圧縮され、基になる &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に書き込まれます。</target>
        </trans-unit>
        <trans-unit id="6218b9f36ba046e184c7444708b6484cebc0c566" translate="yes" xml:space="preserve">
          <source>Instances of this class wrap another &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; object. When you write to this instance, it compresses the data and writes it to the underlying &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">このクラスのインスタンスは、別の &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; オブジェクトをラップします。このインスタンスに書き込むと、データが圧縮され、基になる &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に書き込まれます。</target>
        </trans-unit>
        <trans-unit id="b34aab868c8ca2315f30dfd86b2b8df252f0586c" translate="yes" xml:space="preserve">
          <source>Instances of this class wrap another IO object. When you read from this instance instance, it reads data from the underlying IO, decompresses it, and returns it to the caller.</source>
          <target state="translated">このクラスのインスタンスは、別の IO オブジェクトをラップします。このインスタンスから読み込むと、基礎となる IO からデータを読み込み、解凍して呼び出し元に返します。</target>
        </trans-unit>
        <trans-unit id="13c9cd759c1f241349f73a04fdb9c2476486f765" translate="yes" xml:space="preserve">
          <source>Instances of this class wrap another IO object. When you write to this instance, it compresses the data and writes it to the underlying IO.</source>
          <target state="translated">このクラスのインスタンスは、別の IO オブジェクトをラップします。このインスタンスに書き込むと、データを圧縮して基になる IO に書き込みます。</target>
        </trans-unit>
        <trans-unit id="ca033777d8c3f289a99184f1752669c350d26b63" translate="yes" xml:space="preserve">
          <source>Instantiations of this static array type:</source>
          <target state="translated">この静的配列型のインスタンス。</target>
        </trans-unit>
        <trans-unit id="c76f8cee37fc229387acc13bf2f685b115ed1ea8" translate="yes" xml:space="preserve">
          <source>Instead of defining a type with &lt;code&gt;class&lt;/code&gt; you can do so with &lt;code&gt;struct&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;class&lt;/code&gt; タイプを定義する代わりに、 &lt;code&gt;struct&lt;/code&gt; でそれを行うことができます：</target>
        </trans-unit>
        <trans-unit id="2ffda3100c78567eeeb1e2dc7fef014e52e11c6e" translate="yes" xml:space="preserve">
          <source>Instead of overriding you can define specialized methods by using type restrictions:</source>
          <target state="translated">オーバーライドの代わりに、型の制限を利用して特殊なメソッドを定義することができます。</target>
        </trans-unit>
        <trans-unit id="b11719da4548e1706888bad4b177eb045d8911db" translate="yes" xml:space="preserve">
          <source>Instruction per second interface of the &lt;code&gt;&lt;a href=&quot;benchmark&quot;&gt;Benchmark&lt;/a&gt;&lt;/code&gt; module.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;benchmark&quot;&gt;Benchmark&lt;/a&gt;&lt;/code&gt; モジュールの1秒あたりの命令数。</target>
        </trans-unit>
        <trans-unit id="0144aee16de362b8548a5809ab084131370d5d14" translate="yes" xml:space="preserve">
          <source>Instruction per second interface of the &lt;code&gt;&lt;a href=&quot;benchmark&quot;&gt;Benchmark&lt;/a&gt;&lt;/code&gt; module. Yields a &lt;code&gt;Job&lt;/code&gt; to which one can report the benchmarks. See the module's description.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;benchmark&quot;&gt;Benchmark&lt;/a&gt;&lt;/code&gt; モジュールの1秒あたりの命令数。収量 &lt;code&gt;Job&lt;/code&gt; 1がベンチマークを報告することができました。モジュールの説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="9641d1ce9a478b6f9da69bf971baae267dbf6f60" translate="yes" xml:space="preserve">
          <source>InstructionCollection</source>
          <target state="translated">InstructionCollection</target>
        </trans-unit>
        <trans-unit id="325d1a8404f78d8f05362a503ff4609ff4d5505a" translate="yes" xml:space="preserve">
          <source>InstructionCollection#each</source>
          <target state="translated">InstructionCollection#each</target>
        </trans-unit>
        <trans-unit id="8092c85b13a9e74beafe3a848690f6673f837906" translate="yes" xml:space="preserve">
          <source>InstructionCollection#empty?</source>
          <target state="translated">InstructionCollection#empty?</target>
        </trans-unit>
        <trans-unit id="3b011d60b7a501a710d14dd573a9a3f63a12909c" translate="yes" xml:space="preserve">
          <source>InstructionCollection#first</source>
          <target state="translated">InstructionCollection#first</target>
        </trans-unit>
        <trans-unit id="3af946580a8862571557ab4997a650a90ba5fbe4" translate="yes" xml:space="preserve">
          <source>InstructionCollection#first?</source>
          <target state="translated">InstructionCollection#first?</target>
        </trans-unit>
        <trans-unit id="921e48132d33f22227fb915723ea5df6dc38f0ca" translate="yes" xml:space="preserve">
          <source>InstructionCollection.new</source>
          <target state="translated">InstructionCollection.new</target>
        </trans-unit>
        <trans-unit id="9e15ffe9f019f86fb538eafeda4b4d81fe289d37" translate="yes" xml:space="preserve">
          <source>Instructs the spec runner to execute the given block after each spec spec in the spec suite.</source>
          <target state="translated">スペックランナに、スペックスイート内の各スペックの後に指定されたブロックを実行するよう指示します。</target>
        </trans-unit>
        <trans-unit id="2cc75473bf4efca67b9902a5e4b992bb68e8c345" translate="yes" xml:space="preserve">
          <source>Instructs the spec runner to execute the given block after each spec, regardless of where this method is invoked.</source>
          <target state="translated">このメソッドが呼び出された場所に関係なく、各スペックの後に指定されたブロックを実行するようにスペックランナーに指示します。</target>
        </trans-unit>
        <trans-unit id="4db3e37585fe9a67dde7dfd3fc884bded980ccaa" translate="yes" xml:space="preserve">
          <source>Instructs the spec runner to execute the given block after the entire spec suite.</source>
          <target state="translated">スペックランナーに、スペックスイート全体の後に指定されたブロックを実行するよう指示します。</target>
        </trans-unit>
        <trans-unit id="d07b257a57c2eb91f93758c12ff49b64a9f419a1" translate="yes" xml:space="preserve">
          <source>Instructs the spec runner to execute the given block before each spec in the spec suite.</source>
          <target state="translated">スペックランナに、スペックスイート内の各スペックの前に指定されたブロックを実行するよう指示します。</target>
        </trans-unit>
        <trans-unit id="cd6ad32d2a805084d6088d0982fd833061948213" translate="yes" xml:space="preserve">
          <source>Instructs the spec runner to execute the given block before each spec, regardless of where this method is invoked.</source>
          <target state="translated">このメソッドが呼び出された場所に関係なく、各スペックの前に指定されたブロックを実行するようにスペックランナーに指示します。</target>
        </trans-unit>
        <trans-unit id="85d8afa840bdd7bdc4d583b2aabe1d99e4de6439" translate="yes" xml:space="preserve">
          <source>Instructs the spec runner to execute the given block before the entire spec suite.</source>
          <target state="translated">スペックランナーに、スペックスイート全体の前に指定されたブロックを実行するよう指示します。</target>
        </trans-unit>
        <trans-unit id="84f6f555d0b79687c61b705b4f99f50fce51012f" translate="yes" xml:space="preserve">
          <source>Instructs the spec runner to execute the given block when each spec in the spec suite runs.</source>
          <target state="translated">仕様スイート内の各仕様が実行される際に、指定されたブロックを実行するように仕様ランナーに指示します。</target>
        </trans-unit>
        <trans-unit id="5c89edcac2811a6a9e8072517cae7f3cbfd5049d" translate="yes" xml:space="preserve">
          <source>Int</source>
          <target state="translated">Int</target>
        </trans-unit>
        <trans-unit id="ff9f1f4210ebddbaf6813b6ad77c222fe4a2a1ae" translate="yes" xml:space="preserve">
          <source>Int is the base type of all integer types.</source>
          <target state="translated">Intはすべての整数型の基底型です。</target>
        </trans-unit>
        <trans-unit id="d8a5fb226a10b6ab88f7d8bc1dd047605ceef5dc" translate="yes" xml:space="preserve">
          <source>Int#%</source>
          <target state="translated">Int#%</target>
        </trans-unit>
        <trans-unit id="030862b9ab0152efff5681b2a892117029e77594" translate="yes" xml:space="preserve">
          <source>Int#*</source>
          <target state="translated">Int#*</target>
        </trans-unit>
        <trans-unit id="ce9bb39ae6c471aac3a456621e3e5bc0408430a2" translate="yes" xml:space="preserve">
          <source>Int#**</source>
          <target state="translated">Int#**</target>
        </trans-unit>
        <trans-unit id="53752164d6689a371fd3d1255693b2b1355445e8" translate="yes" xml:space="preserve">
          <source>Int#+</source>
          <target state="translated">Int#+</target>
        </trans-unit>
        <trans-unit id="cc697fa100544136830a160ba9658473d1053f87" translate="yes" xml:space="preserve">
          <source>Int#-</source>
          <target state="translated">Int#-</target>
        </trans-unit>
        <trans-unit id="9485f1697e12c0b60fdeb597a7fe963f9ddbf62f" translate="yes" xml:space="preserve">
          <source>Int#/</source>
          <target state="translated">Int#/</target>
        </trans-unit>
        <trans-unit id="fd242c10d71f110b986bfbeef6b93c15a01f415d" translate="yes" xml:space="preserve">
          <source>Int#//</source>
          <target state="translated">Int#//</target>
        </trans-unit>
        <trans-unit id="cbb892a132e098c7b5e734082146c4b95686224d" translate="yes" xml:space="preserve">
          <source>Int#===</source>
          <target state="translated">Int#===</target>
        </trans-unit>
        <trans-unit id="a0c5ed31c675d0ef11dc689b7c4930883e00af85" translate="yes" xml:space="preserve">
          <source>Int#abs</source>
          <target state="translated">Int#abs</target>
        </trans-unit>
        <trans-unit id="b75df43afa268bc06119d7183ea5268dff7d58db" translate="yes" xml:space="preserve">
          <source>Int#bit</source>
          <target state="translated">Int#bit</target>
        </trans-unit>
        <trans-unit id="ea27b1e20b29ea10caffa83614ed792169e3cd1b" translate="yes" xml:space="preserve">
          <source>Int#bits</source>
          <target state="translated">Int#bits</target>
        </trans-unit>
        <trans-unit id="6c14ccf5584ba617995ce53c082d7280a8f01f1b" translate="yes" xml:space="preserve">
          <source>Int#ceil</source>
          <target state="translated">Int#ceil</target>
        </trans-unit>
        <trans-unit id="922c8d382d2d804ab2140efe9b3b792025929e7e" translate="yes" xml:space="preserve">
          <source>Int#chr</source>
          <target state="translated">Int#chr</target>
        </trans-unit>
        <trans-unit id="3d4aa190c2012d69cc4b9b7012d406eac5e79e2b" translate="yes" xml:space="preserve">
          <source>Int#day</source>
          <target state="translated">Int#day</target>
        </trans-unit>
        <trans-unit id="edfade1d972ea942990e3162fc8191ec1a6b7527" translate="yes" xml:space="preserve">
          <source>Int#days</source>
          <target state="translated">Int#days</target>
        </trans-unit>
        <trans-unit id="09fb2858cc149035de46bf4c65a0242a2d4fe273" translate="yes" xml:space="preserve">
          <source>Int#fdiv</source>
          <target state="translated">Int#fdiv</target>
        </trans-unit>
        <trans-unit id="40e130c1b1298c9ee0dfeec15ec725ec8c734338" translate="yes" xml:space="preserve">
          <source>Int#gcd</source>
          <target state="translated">Int#gcd</target>
        </trans-unit>
        <trans-unit id="9922096f3bb77c14935c8af38769d5b755d6c394" translate="yes" xml:space="preserve">
          <source>Int#gcm</source>
          <target state="translated">Int#gcm</target>
        </trans-unit>
        <trans-unit id="766410356bd81ee7b7388104fad9c2a289431782" translate="yes" xml:space="preserve">
          <source>Int#hash</source>
          <target state="translated">Int#hash</target>
        </trans-unit>
        <trans-unit id="614a071fece4caa7fc27664e760c1e1281d91d50" translate="yes" xml:space="preserve">
          <source>Int#hour</source>
          <target state="translated">Int#hour</target>
        </trans-unit>
        <trans-unit id="a38ef96d87696d7445a98fa08f72a823f861ecb5" translate="yes" xml:space="preserve">
          <source>Int#lcm</source>
          <target state="translated">Int#lcm</target>
        </trans-unit>
        <trans-unit id="449d5b1614b9c1e455dd45da75e9aee37cb8fe43" translate="yes" xml:space="preserve">
          <source>Int#odd?</source>
          <target state="translated">Int#odd?</target>
        </trans-unit>
        <trans-unit id="8d603910a50b5f6e47e6566f66f87884aab64272" translate="yes" xml:space="preserve">
          <source>Int#pred</source>
          <target state="translated">Int#pred</target>
        </trans-unit>
        <trans-unit id="8820592ff885e1cd4c61f4f10403d36e4d56c049" translate="yes" xml:space="preserve">
          <source>Int#succ</source>
          <target state="translated">Int#succ</target>
        </trans-unit>
        <trans-unit id="116d767faee502f87f93b6068fb1db6a1a7d35e0" translate="yes" xml:space="preserve">
          <source>Int#tdiv</source>
          <target state="translated">Int#tdiv</target>
        </trans-unit>
        <trans-unit id="57f4523513a63275b1ae650f5a8f018a138579c2" translate="yes" xml:space="preserve">
          <source>Int#to</source>
          <target state="translated">Int#to</target>
        </trans-unit>
        <trans-unit id="040a925af57573c3896a745a984fe8031cce7ab0" translate="yes" xml:space="preserve">
          <source>Int#to_s</source>
          <target state="translated">Int#to_s</target>
        </trans-unit>
        <trans-unit id="b480ebfd49e625f00cd377222e7ec6c727fd5b9b" translate="yes" xml:space="preserve">
          <source>Int#upto</source>
          <target state="translated">Int#upto</target>
        </trans-unit>
        <trans-unit id="800ef8abdcdf618d3043dc01bbda27c9e8346b1b" translate="yes" xml:space="preserve">
          <source>Int#week</source>
          <target state="translated">Int#week</target>
        </trans-unit>
        <trans-unit id="ae143499c2fb4ce7f956070c135c7c063b1fa6a7" translate="yes" xml:space="preserve">
          <source>Int#year</source>
          <target state="translated">Int#year</target>
        </trans-unit>
        <trans-unit id="11ff3e382b1e55c47deedc59ec85fa9e5152f578" translate="yes" xml:space="preserve">
          <source>Int#~</source>
          <target state="translated">Int#~</target>
        </trans-unit>
        <trans-unit id="de86a870104fb0a5a2a80ba8c78d8f536c9c7510" translate="yes" xml:space="preserve">
          <source>Int128</source>
          <target state="translated">Int128</target>
        </trans-unit>
        <trans-unit id="16e6160662f3625a557b8630a33bd5a5ede2d481" translate="yes" xml:space="preserve">
          <source>Int128#*</source>
          <target state="translated">Int128#*</target>
        </trans-unit>
        <trans-unit id="c0ed7ccbece559f519bf04bf9c53fdba2f96b707" translate="yes" xml:space="preserve">
          <source>Int128#+</source>
          <target state="translated">Int128#+</target>
        </trans-unit>
        <trans-unit id="7f8b82278b1ec306e8b8443702fdca81f2e0f27b" translate="yes" xml:space="preserve">
          <source>Int128#-</source>
          <target state="translated">Int128#-</target>
        </trans-unit>
        <trans-unit id="9a480060666d575974093cba6371099473558123" translate="yes" xml:space="preserve">
          <source>Int128#/</source>
          <target state="translated">Int128#/</target>
        </trans-unit>
        <trans-unit id="e68470d4e9ddc057231b69763257f485fa5eec41" translate="yes" xml:space="preserve">
          <source>Int128#^</source>
          <target state="translated">Int128#^</target>
        </trans-unit>
        <trans-unit id="70fdbfdadef595acb25ded1cd7ebcd61b5beb7c8" translate="yes" xml:space="preserve">
          <source>Int128#|</source>
          <target state="translated">Int128#|</target>
        </trans-unit>
        <trans-unit id="7982e8c08d84551a97dde8c3cc98e03fc2d6082c" translate="yes" xml:space="preserve">
          <source>Int16</source>
          <target state="translated">Int16</target>
        </trans-unit>
        <trans-unit id="7c42afdeb337ac1a816b9ed6c735e4b98846051c" translate="yes" xml:space="preserve">
          <source>Int16#!=</source>
          <target state="translated">Int16#!=</target>
        </trans-unit>
        <trans-unit id="8942b9c26ebc108847ae383238e48ed5ac0fbbf0" translate="yes" xml:space="preserve">
          <source>Int16#*</source>
          <target state="translated">Int16#*</target>
        </trans-unit>
        <trans-unit id="b41a557cd79ebd8a73f46143ae944c6c36dcb177" translate="yes" xml:space="preserve">
          <source>Int16#+</source>
          <target state="translated">Int16#+</target>
        </trans-unit>
        <trans-unit id="5a204510b2f347ae701f9b47cd6a270455ea13b0" translate="yes" xml:space="preserve">
          <source>Int16#-</source>
          <target state="translated">Int16#-</target>
        </trans-unit>
        <trans-unit id="239eaf4148edf3d42b490a8d52793ee6e0910ece" translate="yes" xml:space="preserve">
          <source>Int16#/</source>
          <target state="translated">Int16#/</target>
        </trans-unit>
        <trans-unit id="b59142ef94839a8df88b043de57cd2e4231509cb" translate="yes" xml:space="preserve">
          <source>Int16#==</source>
          <target state="translated">Int16#==</target>
        </trans-unit>
        <trans-unit id="210c7377b582fa4c57278392d983745c92757801" translate="yes" xml:space="preserve">
          <source>Int16#^</source>
          <target state="translated">Int16#^</target>
        </trans-unit>
        <trans-unit id="6aee87e56fc310b8f710f28870cc99908bcd3a08" translate="yes" xml:space="preserve">
          <source>Int16#|</source>
          <target state="translated">Int16#|</target>
        </trans-unit>
        <trans-unit id="f4753a4dee54ee10a75b28c6d04eb9ea0d19acce" translate="yes" xml:space="preserve">
          <source>Int32</source>
          <target state="translated">Int32</target>
        </trans-unit>
        <trans-unit id="617053928b45f497d709580b805e0be1b6e42569" translate="yes" xml:space="preserve">
          <source>Int32#!=</source>
          <target state="translated">Int32#!=</target>
        </trans-unit>
        <trans-unit id="4075c7476cd1608c8c7f384fae9b08651d18a4c9" translate="yes" xml:space="preserve">
          <source>Int32#*</source>
          <target state="translated">Int32#*</target>
        </trans-unit>
        <trans-unit id="40d72d7dfd3185c69ea1b4adb363a7d043adf1fe" translate="yes" xml:space="preserve">
          <source>Int32#+</source>
          <target state="translated">Int32#+</target>
        </trans-unit>
        <trans-unit id="63db2e9e5eb63c386b3e9886304db6ae0185df01" translate="yes" xml:space="preserve">
          <source>Int32#-</source>
          <target state="translated">Int32#-</target>
        </trans-unit>
        <trans-unit id="a790f68105b37d6bec879910a2724484fb2873f8" translate="yes" xml:space="preserve">
          <source>Int32#/</source>
          <target state="translated">Int32#/</target>
        </trans-unit>
        <trans-unit id="edd4164714d97c02fa9a5b30f9dc7f436507a173" translate="yes" xml:space="preserve">
          <source>Int32#==</source>
          <target state="translated">Int32#==</target>
        </trans-unit>
        <trans-unit id="80c9b3dbb330728f8fb842c5187b6b44f255afe9" translate="yes" xml:space="preserve">
          <source>Int32#^</source>
          <target state="translated">Int32#^</target>
        </trans-unit>
        <trans-unit id="8d9f882f40be19cbfa275d6465c7a2cd1d4143d3" translate="yes" xml:space="preserve">
          <source>Int32#|</source>
          <target state="translated">Int32#|</target>
        </trans-unit>
        <trans-unit id="180fcbe698d0f2c44101a06215c472930bbd0a01" translate="yes" xml:space="preserve">
          <source>Int64</source>
          <target state="translated">Int64</target>
        </trans-unit>
        <trans-unit id="f22f5c57f3f28f66388d1a1bb671743594d00962" translate="yes" xml:space="preserve">
          <source>Int64#!=</source>
          <target state="translated">Int64#!=</target>
        </trans-unit>
        <trans-unit id="aeb615a96ff19fc2e417afeb7d8f1e5389c0ed58" translate="yes" xml:space="preserve">
          <source>Int64#*</source>
          <target state="translated">Int64#*</target>
        </trans-unit>
        <trans-unit id="c0f4200d7139d47ee4267ba8a1f111611fd68a06" translate="yes" xml:space="preserve">
          <source>Int64#+</source>
          <target state="translated">Int64#+</target>
        </trans-unit>
        <trans-unit id="a048bf109a15b2fef5e3a443b44ce6df44443713" translate="yes" xml:space="preserve">
          <source>Int64#-</source>
          <target state="translated">Int64#-</target>
        </trans-unit>
        <trans-unit id="d286f33385d9c7c16d334e089349476618bfaa1e" translate="yes" xml:space="preserve">
          <source>Int64#/</source>
          <target state="translated">Int64#/</target>
        </trans-unit>
        <trans-unit id="f459af14f4da2a906631902aef19498e8631f1b3" translate="yes" xml:space="preserve">
          <source>Int64#==</source>
          <target state="translated">Int64#==</target>
        </trans-unit>
        <trans-unit id="83d37ed4a289e28472fa2950b09c01844d3f6a48" translate="yes" xml:space="preserve">
          <source>Int64#^</source>
          <target state="translated">Int64#^</target>
        </trans-unit>
        <trans-unit id="ff68b73826f573b3bc2380fa09a6d04ad3788de0" translate="yes" xml:space="preserve">
          <source>Int64#|</source>
          <target state="translated">Int64#|</target>
        </trans-unit>
        <trans-unit id="a96d87d7c8b3dcfbd0b1d669a1f16d6b32c2a364" translate="yes" xml:space="preserve">
          <source>Int8</source>
          <target state="translated">Int8</target>
        </trans-unit>
        <trans-unit id="aa9139bedef204c2cb0b32f8500378365a93f127" translate="yes" xml:space="preserve">
          <source>Int8#!=</source>
          <target state="translated">Int8#!=</target>
        </trans-unit>
        <trans-unit id="4f5649e931ffb56d92314ee734400dd3f6ad2a0b" translate="yes" xml:space="preserve">
          <source>Int8#*</source>
          <target state="translated">Int8#*</target>
        </trans-unit>
        <trans-unit id="9e23c5bf945549ee7b8d7f358f305d157268fde0" translate="yes" xml:space="preserve">
          <source>Int8#+</source>
          <target state="translated">Int8#+</target>
        </trans-unit>
        <trans-unit id="05c5e2d7be02b316e49148b15f0f9604bf958315" translate="yes" xml:space="preserve">
          <source>Int8#-</source>
          <target state="translated">Int8#-</target>
        </trans-unit>
        <trans-unit id="cb8e144c20f228163b38065ffa493736438150c7" translate="yes" xml:space="preserve">
          <source>Int8#/</source>
          <target state="translated">Int8#/</target>
        </trans-unit>
        <trans-unit id="9c3aedd9076452217fe05ce1a6994f8fe3cb7ec8" translate="yes" xml:space="preserve">
          <source>Int8#==</source>
          <target state="translated">Int8#==</target>
        </trans-unit>
        <trans-unit id="724186007727dbbafaf2f2bbf2031c5314901dc2" translate="yes" xml:space="preserve">
          <source>Int8#^</source>
          <target state="translated">Int8#^</target>
        </trans-unit>
        <trans-unit id="f538c6ff3ecfa6b3c72985c1de34c282a09febfd" translate="yes" xml:space="preserve">
          <source>Int8#|</source>
          <target state="translated">Int8#|</target>
        </trans-unit>
        <trans-unit id="cf1fa4361fb43ea84994dcb7c9f13a2bea0ba2f4" translate="yes" xml:space="preserve">
          <source>Int8.new</source>
          <target state="translated">Int8.new</target>
        </trans-unit>
        <trans-unit id="309fee8187082f78425e5e7c6a0b5c8fec85b726" translate="yes" xml:space="preserve">
          <source>IntPredicate</source>
          <target state="translated">IntPredicate</target>
        </trans-unit>
        <trans-unit id="42d2d97eb493277f59670eb0ecba56dade5b89b8" translate="yes" xml:space="preserve">
          <source>IntPredicate#eq?</source>
          <target state="translated">IntPredicate#eq?</target>
        </trans-unit>
        <trans-unit id="b6dc2f39b130e14e868864c14f37e6399cfca7b7" translate="yes" xml:space="preserve">
          <source>IntPredicate#ne?</source>
          <target state="translated">IntPredicate#ne?</target>
        </trans-unit>
        <trans-unit id="23327858be73ee78376de9e29ca4daaaeb774a8b" translate="yes" xml:space="preserve">
          <source>IntPredicate#sge?</source>
          <target state="translated">IntPredicate#sge?</target>
        </trans-unit>
        <trans-unit id="75e0109e6356c7488fab20a1a007c31c2dcaca76" translate="yes" xml:space="preserve">
          <source>IntPredicate#sgt?</source>
          <target state="translated">IntPredicate#sgt?</target>
        </trans-unit>
        <trans-unit id="a9f94f8cc70c0e6ea7a42aed58a8a12f4f443564" translate="yes" xml:space="preserve">
          <source>IntPredicate#sle?</source>
          <target state="translated">IntPredicate#sle?</target>
        </trans-unit>
        <trans-unit id="98e15d591b9866f7e368b7941f433e6a5783d6ba" translate="yes" xml:space="preserve">
          <source>IntPredicate#slt?</source>
          <target state="translated">IntPredicate#slt?</target>
        </trans-unit>
        <trans-unit id="da463d8c03f71cfd9e05a7094f78f524e2453547" translate="yes" xml:space="preserve">
          <source>IntPredicate#uge?</source>
          <target state="translated">IntPredicate#uge?</target>
        </trans-unit>
        <trans-unit id="616ea781e97a084fac07e94a955bef3588b14d3b" translate="yes" xml:space="preserve">
          <source>IntPredicate#ugt?</source>
          <target state="translated">IntPredicate#ugt?</target>
        </trans-unit>
        <trans-unit id="ea766709ea2602f633912764e7eb7398b7a0ab37" translate="yes" xml:space="preserve">
          <source>IntPredicate#ule?</source>
          <target state="translated">IntPredicate#ule?</target>
        </trans-unit>
        <trans-unit id="b5d5233ab5121da530682e630dea47d20552dce7" translate="yes" xml:space="preserve">
          <source>IntPredicate#ult?</source>
          <target state="translated">IntPredicate#ult?</target>
        </trans-unit>
        <trans-unit id="724b5422dc05c791b8cf0befd732972c0409722e" translate="yes" xml:space="preserve">
          <source>Integers</source>
          <target state="translated">Integers</target>
        </trans-unit>
        <trans-unit id="78ff6add61075bc88dbed579e8ec292cb807f7db" translate="yes" xml:space="preserve">
          <source>Intermediate multiplication will wrap around silently in case of overflow.</source>
          <target state="translated">中間の掛け算は、オーバーフローしても黙って包み込んでくれます。</target>
        </trans-unit>
        <trans-unit id="a182524348a8e585a50beb28f32c5dbeff8717be" translate="yes" xml:space="preserve">
          <source>Internally a symbol is represented as an &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt;, so it's very efficient.</source>
          <target state="translated">内部的にはシンボルは &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; として表されるため、非常に効率的です。</target>
        </trans-unit>
        <trans-unit id="07a6455c4971bd24c8ce79f996a088d36ba7cb1a" translate="yes" xml:space="preserve">
          <source>Internally, symbols are implemented as constants with a numeric value of type &lt;code&gt;Int32&lt;/code&gt;.</source>
          <target state="translated">内部的には、シンボルは &lt;code&gt;Int32&lt;/code&gt; 型の数値を持つ定数として実装されます。</target>
        </trans-unit>
        <trans-unit id="8561b0950c770bea073ea4bb33239c8d5abfd1d1" translate="yes" xml:space="preserve">
          <source>Internally, the compiler rewrites command literals to calls to the top-level method &lt;a href=&quot;https://crystal-lang.org/api/latest/toplevel.html#%60(command&quot;&gt;&lt;code&gt;`()&lt;/code&gt;&lt;/a&gt;:String-class-method) with a string literal containing the command as argument: &lt;code&gt;`echo #{argument}` &lt;/code&gt; and &lt;code&gt;%x(echo #{argument})&lt;/code&gt; are rewritten to &lt;code&gt;`(&quot;echo #{argument}&quot;)&lt;/code&gt;.</source>
          <target state="translated">内部的には、コンパイラはコマンドリテラルを最上位メソッド&lt;a href=&quot;https://crystal-lang.org/api/latest/toplevel.html#%60(command&quot;&gt; &lt;code&gt;`()&lt;/code&gt; &lt;/a&gt;：String-class-method）への呼び出しに書き換え、コマンドを引数として含む文字列リテラルを返します： &lt;code&gt;`echo #{argument}` &lt;/code&gt; および &lt;code&gt;%x(echo #{argument})&lt;/code&gt; は &lt;code&gt;`(&quot;echo #{argument}&quot;)&lt;/code&gt; 書き換えられます。</target>
        </trans-unit>
        <trans-unit id="590ff985c5a73514b022b125e5ecd4b9e7c63c2c" translate="yes" xml:space="preserve">
          <source>Internally, the compiler rewrites command literals to calls to the top-level method &lt;a href=&quot;https://crystal-lang.org/api/latest/toplevel.html#%60(command):String-class-method&quot;&gt;&lt;code&gt;`()&lt;/code&gt;&lt;/a&gt; with a string literal containing the command as argument: &lt;code&gt;`echo #{argument}`&lt;/code&gt; and &lt;code&gt;%x(echo #{argument})&lt;/code&gt; are rewritten to &lt;code&gt;`(&quot;echo #{argument}&quot;)&lt;/code&gt;.</source>
          <target state="translated">内部的に、コンパイラはコマンドリテラルをトップレベルメソッド&lt;a href=&quot;https://crystal-lang.org/api/latest/toplevel.html#%60(command):String-class-method&quot;&gt; &lt;code&gt;`()&lt;/code&gt; の&lt;/a&gt;呼び出しに書き換え、引数としてコマンドを含む文字列リテラルを使用します &lt;code&gt;`echo #{argument}`&lt;/code&gt; および &lt;code&gt;%x(echo #{argument})&lt;/code&gt; は &lt;code&gt;`(&quot;echo #{argument}&quot;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="14e2d293daa9d8c84ee4d742cc245a7c4de2b1a7" translate="yes" xml:space="preserve">
          <source>Internally, the time is stored as an &lt;code&gt;&lt;a href=&quot;int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; representing seconds from epoch (&lt;code&gt;0001-01-01 00:00:00.0 UTC&lt;/code&gt;) and an &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; representing nanosecond-of-second with value range &lt;code&gt;0..999_999_999&lt;/code&gt;.</source>
          <target state="translated">内部的には、時刻はエポックからの秒数（ &lt;code&gt;0001-01-01 00:00:00.0 UTC&lt;/code&gt; ）を表す &lt;code&gt;&lt;a href=&quot;int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; と、値の範囲が &lt;code&gt;0..999_999_999&lt;/code&gt; のナノ秒を表す &lt;code&gt;&lt;a href=&quot;int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; として格納されます。</target>
        </trans-unit>
        <trans-unit id="d774038263eef90e66a521a0124a4a6a5d6fe4ae" translate="yes" xml:space="preserve">
          <source>Interpolated strings are transformed by the compiler to append to a string IO so that it automatically avoids intermediate strings. The example above translates to:</source>
          <target state="translated">補間された文字列は、コンパイラが自動的に中間文字列を避けるように、文字列IOに追加するために変換されます。上の例では、次のように変換されます。</target>
        </trans-unit>
        <trans-unit id="2ac1841fd698dde8b6be69a3e373fd857dc87713" translate="yes" xml:space="preserve">
          <source>Interpolates &lt;em&gt;other&lt;/em&gt; into the string using &lt;code&gt;Kernel#sprintf&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Kernel#sprintf&lt;/code&gt; を使用して、&lt;em&gt;その他&lt;/em&gt;を文字列に補間します。</target>
        </trans-unit>
        <trans-unit id="2695086fe014c5ee3f78e837bdbb65489dd1b3fd" translate="yes" xml:space="preserve">
          <source>Interpolates &lt;em&gt;other&lt;/em&gt; into the string using top-level &lt;code&gt;::sprintf&lt;/code&gt;.</source>
          <target state="translated">トップレベルの &lt;code&gt;::sprintf&lt;/code&gt; を使用して、&lt;em&gt;other&lt;/em&gt;を文字列に補間します。</target>
        </trans-unit>
        <trans-unit id="6a9858c9bf3149456595f98943cf88e41039822e" translate="yes" xml:space="preserve">
          <source>Interpolation</source>
          <target state="translated">Interpolation</target>
        </trans-unit>
        <trans-unit id="8279ca448a0ab5697985d6ac3096ea1121f6590a" translate="yes" xml:space="preserve">
          <source>Interpolation can be disabled by escaping the &lt;code&gt;#&lt;/code&gt; character with a backslash or by using a non-interpolating string literal like &lt;code&gt;%q()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;#&lt;/code&gt; 文字をバックスラッシュでエスケープするか、 &lt;code&gt;%q()&lt;/code&gt; のような非補間文字列リテラルを使用することで、補間を無効にできます。</target>
        </trans-unit>
        <trans-unit id="203dd8f222ef6ee7a0085ccde00e27f9606acbeb" translate="yes" xml:space="preserve">
          <source>Interpolation is implemented using a &lt;a href=&quot;http://crystal-lang.org/api/String/Builder.html&quot;&gt;String::Builder&lt;/a&gt; and invoking &lt;code&gt;Object#to_s(IO)&lt;/code&gt; on each expression enclosed by &lt;code&gt;#{...}&lt;/code&gt;. The expression &lt;code&gt;&quot;sum: #{a} + #{b} = #{a + b}&quot;&lt;/code&gt; is equivalent to:</source>
          <target state="translated">補間は、&lt;a href=&quot;http://crystal-lang.org/api/String/Builder.html&quot;&gt;String :: Builder&lt;/a&gt;を使用して実装され、 &lt;code&gt;#{...}&lt;/code&gt; で囲まれた各式で &lt;code&gt;Object#to_s(IO)&lt;/code&gt; を呼び出します。式 &lt;code&gt;&quot;sum: #{a} + #{b} = #{a + b}&quot;&lt;/code&gt; は次と同等です。</target>
        </trans-unit>
        <trans-unit id="14e99587a630151c74d807401b256a84d8024138" translate="yes" xml:space="preserve">
          <source>Interpolation works in regular expression literals just as it does in &lt;a href=&quot;string&quot;&gt;string literals&lt;/a&gt;. Be aware that using this feature will cause an exception to be raised at runtime, if the resulting string results in an invalid regular expression.</source>
          <target state="translated">補間は、&lt;a href=&quot;string&quot;&gt;文字列リテラル&lt;/a&gt;と同様に、正規表現リテラルでも機能します。結果の文字列が無効な正規表現になる場合、この機能を使用すると、実行時に例外が発生することに注意してください。</target>
        </trans-unit>
        <trans-unit id="e946dbbe87720ea29ef7eba132fed7777c7ec02e" translate="yes" xml:space="preserve">
          <source>Interpolation works in regular expression literals just as it does in string literals. Be aware that using this feature will cause an exception to be raised at runtime, if the resulting string would not be a valid regular expression.</source>
          <target state="translated">補間は文字列リテラルと同様に正規表現リテラルでも動作します。この機能を使用すると、結果の文字列が有効な正規表現ではない場合、実行時に例外が発生することに注意してください。</target>
        </trans-unit>
        <trans-unit id="35aec9dea1d5266672223745d817ff394e4b0339" translate="yes" xml:space="preserve">
          <source>Interprets this string as containing a sequence of hexadecimal values and decodes it as a slice of bytes.</source>
          <target state="translated">この文字列を16進数値のシーケンスを含むものとして解釈し、バイトのスライスとしてデコードします。</target>
        </trans-unit>
        <trans-unit id="e7b79b2978dc2b067cf00a9d08bb433b78da020b" translate="yes" xml:space="preserve">
          <source>Interprets this string as containing a sequence of hexadecimal values and decodes it as a slice of bytes. Two consecutive bytes in the string represent a byte in the returned slice.</source>
          <target state="translated">この文字列を16進数値のシーケンスを含むものとして解釈し、バイトのスライスとしてデコードします。文字列中の連続した 2 バイトは、返されたスライスのバイトを表します。</target>
        </trans-unit>
        <trans-unit id="c4425f38834670c21aafe50ba6134b8282e16b90" translate="yes" xml:space="preserve">
          <source>Interrupted system call</source>
          <target state="translated">システムコールの中断</target>
        </trans-unit>
        <trans-unit id="dd40ef5a82184e855e7d20253e995f84f3e72386" translate="yes" xml:space="preserve">
          <source>Intersection: returns a new set containing elements common to both sets.</source>
          <target state="translated">交差:両方の集合に共通する要素を含む新しい集合を返します。</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="45ff4427a9f1fb0c18cbcdf6b26d6a2d22f2df2f" translate="yes" xml:space="preserve">
          <source>Invalid argument</source>
          <target state="translated">無効な引数</target>
        </trans-unit>
        <trans-unit id="75e51d1b0bad3a5c76a90346800ed0b9632bdf99" translate="yes" xml:space="preserve">
          <source>Invalid chars (in the range U+D800..U+DFFF) are encoded with the unicode replacement char value &lt;code&gt;0xfffd&lt;/code&gt;.</source>
          <target state="translated">無効な文字（U + D800..U + DFFFの範囲）は、Unicode置換文字値 &lt;code&gt;0xfffd&lt;/code&gt; でエンコードされます。</target>
        </trans-unit>
        <trans-unit id="4d62df85231310e8d5fe78ea4e88593efd0006a9" translate="yes" xml:space="preserve">
          <source>Invalid values are encoded using the unicode replacement char with codepoint &lt;code&gt;0xfffd&lt;/code&gt;.</source>
          <target state="translated">無効な値は、コードポイント &lt;code&gt;0xfffd&lt;/code&gt; の Unicode置換文字を使用してエンコードされます。</target>
        </trans-unit>
        <trans-unit id="d879133f90013d89c52a565c9cffb0c0ab147a5e" translate="yes" xml:space="preserve">
          <source>InvalidBigDecimalException</source>
          <target state="translated">InvalidBigDecimalException</target>
        </trans-unit>
        <trans-unit id="07a11ef64e873369f79deae1dd1f6e621b52b9f5" translate="yes" xml:space="preserve">
          <source>InvalidBigDecimalException.new</source>
          <target state="translated">InvalidBigDecimalException.new</target>
        </trans-unit>
        <trans-unit id="83c98896354dcb37a5b41f0710d5ba593dc57415" translate="yes" xml:space="preserve">
          <source>InvalidByteSequenceError</source>
          <target state="translated">InvalidByteSequenceError</target>
        </trans-unit>
        <trans-unit id="46b8312a80435648dbb3cfa519b4d587d62f61b8" translate="yes" xml:space="preserve">
          <source>InvalidByteSequenceError.new</source>
          <target state="translated">InvalidByteSequenceError.new</target>
        </trans-unit>
        <trans-unit id="915701f62a525253f72f96eb63151564af9562c1" translate="yes" xml:space="preserve">
          <source>Inverts all bits in the array.</source>
          <target state="translated">配列の全ビットを反転させます。</target>
        </trans-unit>
        <trans-unit id="8aef6c40ab904b771c1629b9328deec25e336505" translate="yes" xml:space="preserve">
          <source>Inverts all bits in the array. Falses become &lt;code&gt;true&lt;/code&gt; and vice versa.</source>
          <target state="translated">配列のすべてのビットを反転します。偽は &lt;code&gt;true&lt;/code&gt; となり、その逆も同様です。</target>
        </trans-unit>
        <trans-unit id="1d441ed4c58e304b58418ecca1ff23c31e41e9f0" translate="yes" xml:space="preserve">
          <source>Inverts keys and values.</source>
          <target state="translated">キーと値を反転させます。</target>
        </trans-unit>
        <trans-unit id="28808e7e4a6b05374bcd974c6780e1cdb52e6947" translate="yes" xml:space="preserve">
          <source>Inverts keys and values. If there are duplicated values, the last key becomes the new value.</source>
          <target state="translated">キーと値を反転させます。値が重複している場合、最後のキーが新しい値になります。</target>
        </trans-unit>
        <trans-unit id="b29109c6685cc329fa3b9d890158fe5ec8b0ad6e" translate="yes" xml:space="preserve">
          <source>Invocations can be nested in order to capture each source in their own &lt;code&gt;&lt;a href=&quot;log/entrieschecker&quot;&gt;EntriesChecker&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">呼び出しは、各ソースを独自の &lt;code&gt;&lt;a href=&quot;log/entrieschecker&quot;&gt;EntriesChecker&lt;/a&gt;&lt;/code&gt; でキャプチャするためにネストできます。</target>
        </trans-unit>
        <trans-unit id="29a86efefc08f766779a7d5ac4fb5269e193aa28" translate="yes" xml:space="preserve">
          <source>Invoke this method on an &lt;code&gt;&lt;a href=&quot;../http/client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt; before executing an HTTP request.</source>
          <target state="translated">このメソッドを &lt;code&gt;&lt;a href=&quot;../http/client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt; 呼び出すHTTPリクエストを実行する前ます。</target>
        </trans-unit>
        <trans-unit id="7aa3a51e95d32582d4da3b08fedb735c5b5aa9ca" translate="yes" xml:space="preserve">
          <source>Invokes &lt;code&gt;at_exit&lt;/code&gt; handlers</source>
          <target state="translated">呼び出します &lt;code&gt;at_exit&lt;/code&gt; ハンドラ</target>
        </trans-unit>
        <trans-unit id="e84d499067fbb3e0a3de544ae02e145c98325eda" translate="yes" xml:space="preserve">
          <source>Invokes &lt;code&gt;next&lt;/code&gt; on the wrapped iterator and returns &lt;code&gt;stop&lt;/code&gt; if the given value was a &lt;code&gt;&lt;a href=&quot;stop&quot;&gt;Iterator::Stop&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ラップされたイテレーターで &lt;code&gt;next&lt;/code&gt; を呼び出し、指定された値が &lt;code&gt;&lt;a href=&quot;stop&quot;&gt;Iterator::Stop&lt;/a&gt;&lt;/code&gt; 場合は &lt;code&gt;stop&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="de8ea797249046496cbd124627b2a1e6b67795c2" translate="yes" xml:space="preserve">
          <source>Invokes &lt;code&gt;next&lt;/code&gt; on the wrapped iterator and returns &lt;code&gt;stop&lt;/code&gt; if the given value was a &lt;code&gt;&lt;a href=&quot;stop&quot;&gt;Iterator::Stop&lt;/a&gt;&lt;/code&gt;. Otherwise, returns the value.</source>
          <target state="translated">ラップされたイテレーターで &lt;code&gt;next&lt;/code&gt; を呼び出し、指定された値が &lt;code&gt;&lt;a href=&quot;stop&quot;&gt;Iterator::Stop&lt;/a&gt;&lt;/code&gt; 場合は &lt;code&gt;stop&lt;/code&gt; を返します。それ以外の場合は、値を返します。</target>
        </trans-unit>
        <trans-unit id="02438a065f28c4d5e07aa723e37693050f303a09" translate="yes" xml:space="preserve">
          <source>Invokes the block for each of the given &lt;em&gt;node&lt;/em&gt;s keys and values, resolving merge keys (&amp;lt;&amp;lt;) when found (keys and values of the resolved merge mappings are yielded, recursively).</source>
          <target state="translated">指定された各&lt;em&gt;ノードの&lt;/em&gt;ブロックを呼び出し&lt;em&gt;ます&lt;/em&gt;のキーと値の見つかった場合にマージキー（&amp;lt;&amp;lt;）を解決します（解決されたマージマッピングのキーと値が再帰的に生成されます）。</target>
        </trans-unit>
        <trans-unit id="8385e16485f1cca3a2d76c65bc11828324e0163b" translate="yes" xml:space="preserve">
          <source>Invokes the block once for each row in this CSV, yielding &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">このCSVの行ごとに1回ブロックを呼び出し、 &lt;code&gt;self&lt;/code&gt; を生成しますます。</target>
        </trans-unit>
        <trans-unit id="0d89efefe422c82462c7cb4c2e0b825e59a12272" translate="yes" xml:space="preserve">
          <source>Invokes the given &lt;em&gt;block&lt;/em&gt;</source>
          <target state="translated">指定された&lt;em&gt;ブロックを&lt;/em&gt;呼び出し&lt;em&gt;ます&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0e62acc6438fad58c6927a4c011279656eb56d2c" translate="yes" xml:space="preserve">
          <source>Invokes the given block for each element of &lt;code&gt;self&lt;/code&gt;, replacing the element with the value returned by the block.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; の各要素に対して指定されたブロックを呼び出し、要素をブロックによって返された値で置き換えます。</target>
        </trans-unit>
        <trans-unit id="8b8f503a8307bfbec2c26d9e33e8e1e0241b2889" translate="yes" xml:space="preserve">
          <source>Invokes the given block for each element of &lt;code&gt;self&lt;/code&gt;, replacing the element with the value returned by the block. Returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; の各要素に対して指定されたブロックを呼び出し、要素をブロックによって返された値で置き換えます。 &lt;code&gt;self&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="3c98cc1f99c2fd578cced906f6c13d1c71b294e1" translate="yes" xml:space="preserve">
          <source>Invokes the given block with each &lt;code&gt;&lt;a href=&quot;char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; in this &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; の各 &lt;code&gt;&lt;a href=&quot;char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; で指定されたブロックを呼び出します。</target>
        </trans-unit>
        <trans-unit id="558f5f6ed4eaee763fc7be5b1cc4b683e83599a9" translate="yes" xml:space="preserve">
          <source>Invokes the given block with each &lt;em&gt;line&lt;/em&gt; in this &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;, where a line is defined by the arguments passed to this method, which can be the same ones as in the &lt;code&gt;&lt;a href=&quot;io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt;#gets&lt;/a&gt;&lt;/code&gt; methods.</source>
          <target state="translated">それぞれに与えられたブロック呼び出す&lt;em&gt;ライン&lt;/em&gt;このにおける &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 線が中と同様のものとすることができる、このメソッドに渡された引数によって定義され、 &lt;code&gt;&lt;a href=&quot;io#gets(delimiter:Char,limit:Int,chomp=false):String?-instance-method&quot;&gt;#gets&lt;/a&gt;&lt;/code&gt; の方法。</target>
        </trans-unit>
        <trans-unit id="7b26383f6bb1af450d3fba7998fff022f698dc9a" translate="yes" xml:space="preserve">
          <source>Invokes the given block with each byte (&lt;code&gt;&lt;a href=&quot;uint8&quot;&gt;UInt8&lt;/a&gt;&lt;/code&gt;) in this &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; の各バイト（ &lt;code&gt;&lt;a href=&quot;uint8&quot;&gt;UInt8&lt;/a&gt;&lt;/code&gt; ）で指定されたブロックを呼び出します。</target>
        </trans-unit>
        <trans-unit id="156490680a11be4dc17e176296871669bc11d53b" translate="yes" xml:space="preserve">
          <source>Invokes the given block with the sequence of numbers starting at &lt;code&gt;self&lt;/code&gt;, incremented by &lt;em&gt;by&lt;/em&gt; on each call, and with an optional &lt;em&gt;to&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; から始まり、呼び出しごとにby &lt;em&gt;によって&lt;/em&gt;増分さ&lt;em&gt;れ&lt;/em&gt;、オプションの&lt;em&gt;toを&lt;/em&gt;指定して、指定されたブロックを呼び出します。</target>
        </trans-unit>
        <trans-unit id="c45edf559d3bc6bb2c31eb962d2eee2e1b0ea107" translate="yes" xml:space="preserve">
          <source>Invokes this &lt;code&gt;&lt;a href=&quot;proc&quot;&gt;Proc&lt;/a&gt;&lt;/code&gt; and returns the result.</source>
          <target state="translated">この &lt;code&gt;&lt;a href=&quot;proc&quot;&gt;Proc&lt;/a&gt;&lt;/code&gt; を呼び出し、結果を返します。</target>
        </trans-unit>
        <trans-unit id="b673c6a72896107ce4c1c1720830db2d7090b84b" translate="yes" xml:space="preserve">
          <source>Invoking</source>
          <target state="translated">Invoking</target>
        </trans-unit>
        <trans-unit id="2b58236c28262a0145db427d2dce68ca8624e043" translate="yes" xml:space="preserve">
          <source>Invoking &lt;code&gt;&lt;a href=&quot;pullparser#read_next:EventKind-instance-method&quot;&gt;#read_next&lt;/a&gt;&lt;/code&gt; reads the next event.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;pullparser#read_next:EventKind-instance-method&quot;&gt;#read_next&lt;/a&gt;&lt;/code&gt; を呼び出すと、次のイベントが読み込まれます。</target>
        </trans-unit>
        <trans-unit id="a193eaed15e06b5adaf4d36c21d57d8bb6045b84" translate="yes" xml:space="preserve">
          <source>Invoking &lt;code&gt;&lt;a href=&quot;reference#new-class-method&quot;&gt;.new&lt;/a&gt;&lt;/code&gt; on a &lt;code&gt;&lt;a href=&quot;reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt; allocates a new instance on the heap. The instance's memory is automatically freed (garbage-collected) when the instance is no longer referred by any other entity in the program.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;reference#new-class-method&quot;&gt;.new&lt;/a&gt;&lt;/code&gt; を呼び出すと、ヒープに新しいインスタンスが割り当てられます。インスタンスがプログラム内の他のエンティティによって参照されなくなると、インスタンスのメモリは自動的に解放（ガベージコレクション）されます。</target>
        </trans-unit>
        <trans-unit id="d82b06adf1a876d702b6a3905d8d56b51827e40e" translate="yes" xml:space="preserve">
          <source>Is a directory</source>
          <target state="translated">ディレクトリは</target>
        </trans-unit>
        <trans-unit id="53455c7c74fd74db45e82be0cf4bea5c8e068f2a" translate="yes" xml:space="preserve">
          <source>Is equivalent to this code:</source>
          <target state="translated">このコードと同等です。</target>
        </trans-unit>
        <trans-unit id="b0eda3fd7457c0fb4308b75d0bf6df3d4719aced" translate="yes" xml:space="preserve">
          <source>Is equivalent to:</source>
          <target state="translated">と同等です。</target>
        </trans-unit>
        <trans-unit id="1ebd5482f2fe3d68fca757b459cad0585790de2b" translate="yes" xml:space="preserve">
          <source>Is the same as writing:</source>
          <target state="translated">書くことと同じです。</target>
        </trans-unit>
        <trans-unit id="bc143ae2a93c710a2cfc98cc0ba68108d9eda5a6" translate="yes" xml:space="preserve">
          <source>It accepts multiple arguments, and the result is the union of the expression types:</source>
          <target state="translated">複数の引数を受け付け、結果は式の型の和となります。</target>
        </trans-unit>
        <trans-unit id="25a4e799d99c7294806f559139d9db9702d615a9" translate="yes" xml:space="preserve">
          <source>It adds the number of months with overflow decreasing the year. If the resulting day-of-month would be invalid, it is adjusted to the last valid day of the moneth.</source>
          <target state="translated">これは、オーバーフローした月の数を年を減じて加算します。結果として得られた月の日が無効になる場合は、その月の最後の有効な日に合わせて調整されます。</target>
        </trans-unit>
        <trans-unit id="a24602cb349e58f12a47a7a3c747b521c2ecd7a4" translate="yes" xml:space="preserve">
          <source>It adds the number of months with overflow decreasing the year. If the resulting day-of-month would be invalid, it is adjusted to the last valid day of the month.</source>
          <target state="translated">オーバーフローした月数を加算し、年を減少させます。結果として得られる月の日が無効な場合は、その月の最後の有効な日に調整されます。</target>
        </trans-unit>
        <trans-unit id="2d19cc2623700c513b188e3430e6fbfa3c1e3e4a" translate="yes" xml:space="preserve">
          <source>It adds the number of months with overflow increasing the year. If the resulting day-of-month would be invalid, it is adjusted to the last valid day of the moneth.</source>
          <target state="translated">これは、オーバーフローで年を増やした月の数を追加します。結果として得られた月の日が無効になる場合は、monethの最後の有効な日に合わせて調整されます。</target>
        </trans-unit>
        <trans-unit id="fc716745c3a6b8df172fa66e08d09e6461d4a1d4" translate="yes" xml:space="preserve">
          <source>It adds the number of months with overflow increasing the year. If the resulting day-of-month would be invalid, it is adjusted to the last valid day of the month.</source>
          <target state="translated">オーバーフローした月数を加算し、年を増加させます。結果として得られる月の日が無効な場合は、その月の最後の有効な日に調整されます。</target>
        </trans-unit>
        <trans-unit id="43e7ebd4c12aa41dd3dd3a73040cb0023d98db91" translate="yes" xml:space="preserve">
          <source>It can be useful to read ints and floats without losing precision, or to read an object and deserialize it later based on some condition.</source>
          <target state="translated">精度を落とさずにintやfloatを読み込んだり、オブジェクトを読み込んで後で何らかの条件に基づいてデシリアライズしたりするのに便利です。</target>
        </trans-unit>
        <trans-unit id="3913f47304263c694a73a849afcd806e1fe1919a" translate="yes" xml:space="preserve">
          <source>It can respond to some methods</source>
          <target state="translated">いくつかの方法に対応することができます。</target>
        </trans-unit>
        <trans-unit id="d0abefad6ac5edb54665e9b0bc20ad2c3b0cae5e" translate="yes" xml:space="preserve">
          <source>It compares the elements of both arrays in the same position using the &lt;code&gt;&lt;a href=&quot;array#(other:Array)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; operator. As soon as one of such comparisons returns a non-zero value, that result is the return value of the comparison.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;array#(other:Array)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; 演算子を使用して、同じ位置にある両方の配列の要素を比較します。そのような比較の1つがゼロ以外の値を返すとすぐに、その結​​果が比較の戻り値になります。</target>
        </trans-unit>
        <trans-unit id="8b2df94acaebb3f052ec0332272a9bd5125dcb80" translate="yes" xml:space="preserve">
          <source>It compares the elements of both slices in the same position using the &lt;code&gt;&lt;a href=&quot;slice#(other:Slice(U))forallU-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; operator. As soon as one of such comparisons returns a non-zero value, that result is the return value of the comparison.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;slice#(other:Slice(U))forallU-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; を使用して、同じ位置にある両方のスライスの要素を比較します演算子。そのような比較の1つがゼロ以外の値を返すとすぐに、その結​​果が比較の戻り値になります。</target>
        </trans-unit>
        <trans-unit id="64aa730d9d744511cd0b0a8fb3b5954f779dc0ef" translate="yes" xml:space="preserve">
          <source>It compares using &lt;code&gt;&amp;gt;&lt;/code&gt; so it will work for any type that supports that method.</source>
          <target state="translated">&lt;code&gt;&amp;gt;&lt;/code&gt; を使用して比較するため、そのメソッドをサポートするすべての型で機能します。</target>
        </trans-unit>
        <trans-unit id="5a22f978ac64e7d513badd1fb3a7071a5bcaf62c" translate="yes" xml:space="preserve">
          <source>It compares using &lt;code&gt;&amp;gt;&lt;/code&gt; so the block must return a type that supports that method</source>
          <target state="translated">&lt;code&gt;&amp;gt;&lt;/code&gt; を使用して比較するため、ブロックはそのメソッドをサポートする型を返す必要があります</target>
        </trans-unit>
        <trans-unit id="98c9d20a5502153269c963c849b822b83e292e5a" translate="yes" xml:space="preserve">
          <source>It compares using &lt;code&gt;&amp;lt;&lt;/code&gt; so it will work for any type that supports that method.</source>
          <target state="translated">&lt;code&gt;&amp;lt;&lt;/code&gt; を使用して比較するため、そのメソッドをサポートするすべての型で機能します。</target>
        </trans-unit>
        <trans-unit id="885c6a11fa3aeee34c5898eb00aa7d7eca897dfb" translate="yes" xml:space="preserve">
          <source>It compares using &lt;code&gt;&amp;lt;&lt;/code&gt; so the block must return a type that supports that method</source>
          <target state="translated">&lt;code&gt;&amp;lt;&lt;/code&gt; を使用して比較するため、ブロックはそのメソッドをサポートする型を返す必要があります</target>
        </trans-unit>
        <trans-unit id="ff2f7e261c940c0d24f850f16e8b930367d6c442" translate="yes" xml:space="preserve">
          <source>It contains a list of zone offsets and rules for transitioning between them.</source>
          <target state="translated">ゾーンオフセットのリストと、それらの間の遷移のルールが含まれています。</target>
        </trans-unit>
        <trans-unit id="ccf4db640a5dabfdd27410bba064eed5f42177bc" translate="yes" xml:space="preserve">
          <source>It contains the &lt;code&gt;&lt;a href=&quot;zone#name:String-instance-method&quot;&gt;#name&lt;/a&gt;&lt;/code&gt;, hour-minute-second format (see &lt;code&gt;&lt;a href=&quot;zone#format(io:IO,with_colon=true,with_seconds=:auto)-instance-method&quot;&gt;#format&lt;/a&gt;&lt;/code&gt;), &lt;code&gt;&lt;a href=&quot;zone#offset:Int32-instance-method&quot;&gt;#offset&lt;/a&gt;&lt;/code&gt; in seconds and &lt;code&gt;&quot;DST&quot;&lt;/code&gt; if &lt;code&gt;&lt;a href=&quot;zone#dst?:Bool-instance-method&quot;&gt;#dst?&lt;/a&gt;&lt;/code&gt;, otherwise &lt;code&gt;&quot;STD&quot;&lt;/code&gt;.</source>
          <target state="translated">それは含まれてい &lt;code&gt;&lt;a href=&quot;zone#name:String-instance-method&quot;&gt;#name&lt;/a&gt;&lt;/code&gt; 、時-分-秒の形式（参照 &lt;code&gt;&lt;a href=&quot;zone#format(io:IO,with_colon=true,with_seconds=:auto)-instance-method&quot;&gt;#format&lt;/a&gt;&lt;/code&gt; を）、 &lt;code&gt;&lt;a href=&quot;zone#offset:Int32-instance-method&quot;&gt;#offset&lt;/a&gt;&lt;/code&gt; 秒と &lt;code&gt;&quot;DST&quot;&lt;/code&gt; あれば &lt;code&gt;&lt;a href=&quot;zone#dst?:Bool-instance-method&quot;&gt;#dst?&lt;/a&gt;&lt;/code&gt; 、それ以外の場合は &lt;code&gt;&quot;STD&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="16c8e0b6e0e196a6711e536d90f0fa17cdbf743e" translate="yes" xml:space="preserve">
          <source>It doesn't write any output for entries generated from the root logger. Parameters &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; can be provided to be written around the value.</source>
          <target state="translated">ルートロガーから生成されたエントリの出力は書き込まれません。パラメータ &lt;code&gt;before&lt;/code&gt; と &lt;code&gt;after&lt;/code&gt; 値の周りに書き込まれるように提供することができます。</target>
        </trans-unit>
        <trans-unit id="5d31e057adf26df22c9683811e18e7b269ca6cbe" translate="yes" xml:space="preserve">
          <source>It doesn't write any output if the context is empty. Parameters &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; can be provided to be written around the value.</source>
          <target state="translated">コンテキストが空の場合、出力は書き込まれません。パラメータ &lt;code&gt;before&lt;/code&gt; と &lt;code&gt;after&lt;/code&gt; 値の周りに書き込まれるように提供することができます。</target>
        </trans-unit>
        <trans-unit id="8af5ee78944b7ddbda039e242f6334610d6bcecc" translate="yes" xml:space="preserve">
          <source>It doesn't write any output if the entry data is empty. Parameters &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; can be provided to be written around the value.</source>
          <target state="translated">エントリデータが空の場合、出力は書き込まれません。パラメータ &lt;code&gt;before&lt;/code&gt; と &lt;code&gt;after&lt;/code&gt; 値の周りに書き込まれるように提供することができます。</target>
        </trans-unit>
        <trans-unit id="302288508730f79c7cbcae4e723cca4e5250ecf0" translate="yes" xml:space="preserve">
          <source>It doesn't write any output unless there is an exception in the entry. Parameters &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; can be provided to be written around the value. &lt;code&gt;before&lt;/code&gt; defaults to &lt;code&gt;'\n'&lt;/code&gt; so the exception is written on a separate line</source>
          <target state="translated">エントリに例外がない限り、出力は書き込まれません。パラメータ &lt;code&gt;before&lt;/code&gt; と &lt;code&gt;after&lt;/code&gt; 値の周りに書き込まれるように提供することができます。 &lt;code&gt;before&lt;/code&gt; のデフォルトは &lt;code&gt;'\n'&lt;/code&gt; ため、例外は別の行に書き込まれます</target>
        </trans-unit>
        <trans-unit id="bee3adb7e538057430c079ddf7809891f1e53ade" translate="yes" xml:space="preserve">
          <source>It expects the URI to include &lt;code&gt;&lt;scheme&gt;://&lt;/scheme&gt;&lt;/code&gt; where &lt;code&gt;scheme&lt;/code&gt; as well as any additional URI components (such as &lt;code&gt;fragment&lt;/code&gt; or &lt;code&gt;query&lt;/code&gt;) are ignored.</source>
          <target state="translated">URIには &lt;code&gt;&lt;scheme&gt;://&lt;/scheme&gt;&lt;/code&gt; ここで、 &lt;code&gt;scheme&lt;/code&gt; および追加のURIコンポーネント（ &lt;code&gt;fragment&lt;/code&gt; や &lt;code&gt;query&lt;/code&gt; ）は無視されます。</target>
        </trans-unit>
        <trans-unit id="f14bd2ffe2da93fef16cda1c33f9bcd51e0645d5" translate="yes" xml:space="preserve">
          <source>It expects the URI to include &lt;code&gt;&lt;scheme&gt;://&lt;host&gt;:&lt;/host&gt;&lt;/scheme&gt;&lt;/code&gt; where &lt;code&gt;scheme&lt;/code&gt; as well as any additional URI components (such as &lt;code&gt;path&lt;/code&gt; or &lt;code&gt;query&lt;/code&gt;) are ignored.</source>
          <target state="translated">URIには &lt;code&gt;&lt;scheme&gt;://&lt;host&gt;:&lt;/host&gt;&lt;/scheme&gt;&lt;/code&gt; ここで、 &lt;code&gt;scheme&lt;/code&gt; および追加のURIコンポーネント（ &lt;code&gt;path&lt;/code&gt; や &lt;code&gt;query&lt;/code&gt; など）は無視されます。</target>
        </trans-unit>
        <trans-unit id="a595fe54697df1012f2586e134b6f1fae4d5f6cf" translate="yes" xml:space="preserve">
          <source>It has a type</source>
          <target state="translated">型を持っています。</target>
        </trans-unit>
        <trans-unit id="8c24e36af14871b3d53eeac8703e7e91d7593f16" translate="yes" xml:space="preserve">
          <source>It has the same effect as writing &lt;code&gt;is_a?(Nil)&lt;/code&gt; but it's shorter and easier to read and write.</source>
          <target state="translated">&lt;code&gt;is_a?(Nil)&lt;/code&gt; を書くのと同じ効果がありますが、短くて読みやすくなっています。</target>
        </trans-unit>
        <trans-unit id="2a36866f0aaba4310877a1d4b4772c5da1f4b07d" translate="yes" xml:space="preserve">
          <source>It is a difference from &lt;code&gt;&lt;a href=&quot;matchdata#to_a-instance-method&quot;&gt;#to_a&lt;/a&gt;&lt;/code&gt; that the result array does not contain the match for the entire &lt;code&gt;&lt;a href=&quot;../regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt; (&lt;code&gt;self[0]&lt;/code&gt;).</source>
          <target state="translated">これは、相違点である &lt;code&gt;&lt;a href=&quot;matchdata#to_a-instance-method&quot;&gt;#to_a&lt;/a&gt;&lt;/code&gt; 結果アレイ全体の一致が含まれていないことが &lt;code&gt;&lt;a href=&quot;../regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt; （ &lt;code&gt;self[0]&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="95c8d8e5bdb5904742399caf4e5bea65975e9705" translate="yes" xml:space="preserve">
          <source>It is a pseudo-method because it only accepts a symbol literal as its argument, and is also treated specially by the compiler, as explained in &lt;a href=&quot;if_varresponds_to&quot;&gt;if var.responds_to?(...)&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;if_varresponds_to&quot;&gt;if var.responds_to？（...）で&lt;/a&gt;説明されているように、引数としてシンボルリテラルのみを受け取り、コンパイラによって特別に扱われるため、これは疑似メソッドです。</target>
        </trans-unit>
        <trans-unit id="7b57860ae8c66522eccf8931742069c8809da815" translate="yes" xml:space="preserve">
          <source>It is a pseudo-method because the compiler knows about it and it can affect type information, as explained in &lt;a href=&quot;if_var_nil&quot;&gt;if var.nil?(...)&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;if_var_nil&quot;&gt;if var.nil？（...）で&lt;/a&gt;説明されているように、コンパイラはそれを認識しており、型情報に影響を与える可能性があるため、これは疑似メソッドです。</target>
        </trans-unit>
        <trans-unit id="937a99e3a9fdce4c06e8a92d2e57f0d815b54bec" translate="yes" xml:space="preserve">
          <source>It is a pseudo-method because the compiler knows about it and it can affect type information, as explained in &lt;a href=&quot;if_varis_a&quot;&gt;if var.is_a?(...)&lt;/a&gt;. Also, it accepts a &lt;a href=&quot;type_grammar&quot;&gt;type&lt;/a&gt; that must be known at compile-time as its argument.</source>
          <target state="translated">&lt;a href=&quot;if_varis_a&quot;&gt;if var.is_a？（...）で&lt;/a&gt;説明されているように、コンパイラはそれを認識しており、型情報に影響を与える可能性があるため、これは疑似メソッドです。また、コンパイル時に既知である必要がある&lt;a href=&quot;type_grammar&quot;&gt;型&lt;/a&gt;を引数として受け入れます。</target>
        </trans-unit>
        <trans-unit id="159f956badd281a8e32b6eaf96b75f8db1ca0b21" translate="yes" xml:space="preserve">
          <source>It is a type of message authentication code (MAC) involving a hash function in combination with a key.</source>
          <target state="translated">ハッシュ関数と鍵を組み合わせたメッセージ認証コード(MAC)の一種です。</target>
        </trans-unit>
        <trans-unit id="237913c6bcadae39fa3d26be926828ed008b1be9" translate="yes" xml:space="preserve">
          <source>It is a very common practice to pass options to the application. For example, we may run &lt;code&gt;crystal -v&lt;/code&gt; and Crystal will display:</source>
          <target state="translated">オプションをアプリケーションに渡すことは非常に一般的な方法です。たとえば、 &lt;code&gt;crystal -v&lt;/code&gt; を実行すると、Crystalは次のように表示します。</target>
        </trans-unit>
        <trans-unit id="bdb59b00a40f24088f1d8f23ca89cab9c5119f0c" translate="yes" xml:space="preserve">
          <source>It is also possible to bind a generic &lt;code&gt;&lt;a href=&quot;../socket/server&quot;&gt;Socket::Server&lt;/a&gt;&lt;/code&gt; using &lt;code&gt;&lt;a href=&quot;server#bind(socket:Socket::Server):Nil-instance-method&quot;&gt;#bind(socket : Socket::Server)&lt;/a&gt;&lt;/code&gt; which can be used for custom network protocol configurations.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;server#bind(socket:Socket::Server):Nil-instance-method&quot;&gt;#bind(socket : Socket::Server)&lt;/a&gt;&lt;/code&gt; を使用して汎用 &lt;code&gt;&lt;a href=&quot;../socket/server&quot;&gt;Socket::Server&lt;/a&gt;&lt;/code&gt; をバインドすることもできます。カスタムネットワークプロトコル構成に使用できるをます。</target>
        </trans-unit>
        <trans-unit id="8645b7b5be4322400c7f055820e804fac796140b" translate="yes" xml:space="preserve">
          <source>It is conceptually similar to an operating system thread but with less overhead and completely internal to the Crystal process. The runtime includes a scheduler which schedules execution of fibers.</source>
          <target state="translated">概念的にはオペレーティング・システム・スレッドに似ていますが、オーバーヘッドが少なく、完全にクリスタル・プロセスの内部にあります。ランタイムには、ファイバーの実行をスケジュールするスケジューラが含まれています。</target>
        </trans-unit>
        <trans-unit id="d119e59fb133e03d944b34c8efdd3041b1d8d3a6" translate="yes" xml:space="preserve">
          <source>It is created by enclosing an UTF-8 character in single quotes.</source>
          <target state="translated">UTF-8文字を一重引用符で囲むことで作成されます。</target>
        </trans-unit>
        <trans-unit id="34a504fe621647db7eba2c16f92b9f776be6d075" translate="yes" xml:space="preserve">
          <source>It is encouraged to delete a tempfile after using it, which ensures they are not left behind in your filesystem until garbage collected.</source>
          <target state="translated">tempfileを使用した後は削除することが推奨されており、ゴミが回収されるまでファイルシステムに残されることはありません。</target>
        </trans-unit>
        <trans-unit id="a858ee4ba3877abdf058491e979bc86b9f765b9a" translate="yes" xml:space="preserve">
          <source>It is for convenience with using on &lt;code&gt;case&lt;/code&gt; statement.</source>
          <target state="translated">これは、on &lt;code&gt;case&lt;/code&gt; ステートメントを使用する場合に便利です。</target>
        </trans-unit>
        <trans-unit id="77f9cfd4ae4c989f3382c47847d1940ec9eb787e" translate="yes" xml:space="preserve">
          <source>It is functionally equivalent to &lt;code&gt;&lt;a href=&quot;methods#describe(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,&amp;amp;block)-instance-method&quot;&gt;#describe&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">機能的には &lt;code&gt;&lt;a href=&quot;methods#describe(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,&amp;amp;block)-instance-method&quot;&gt;#describe&lt;/a&gt;&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="1cd134619d2958d7e14f48e16071c31b92c57181" translate="yes" xml:space="preserve">
          <source>It is functionally equivalent to &lt;code&gt;&lt;a href=&quot;methods#describe(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,tags:String%7CEnumerable(String)%7CNil=nil,&amp;amp;block)-instance-method&quot;&gt;#describe&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">機能的には &lt;code&gt;&lt;a href=&quot;methods#describe(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,tags:String%7CEnumerable(String)%7CNil=nil,&amp;amp;block)-instance-method&quot;&gt;#describe&lt;/a&gt;&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="564df31c38824b71c71434a836be7a7e7b8c792b" translate="yes" xml:space="preserve">
          <source>It is generally recommended to keep instances in UTC and only apply a local time zone when formatting for user display, unless the domain logic requires having a specific time zone (for example for calendaric operations).</source>
          <target state="translated">一般的には、ドメインロジックが特定のタイムゾーンを持つことを要求しない限り(例えば、カレンダー操作など)、インスタンスをUTCで保持し、ユーザー表示のためのフォーマットを行う際にはローカルタイムゾーンのみを適用することを推奨します。</target>
        </trans-unit>
        <trans-unit id="c775346f2939dec769906b9bc1a5335723d76575" translate="yes" xml:space="preserve">
          <source>It is implemented under the hood with &lt;a href=&quot;https://gmplib.org/&quot;&gt;GMP&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://gmplib.org/&quot;&gt;GMPの内部で&lt;/a&gt;実装されています。</target>
        </trans-unit>
        <trans-unit id="8c4b139867eccd18018e961b39e1273a93d49775" translate="yes" xml:space="preserve">
          <source>It is important to have in mind that if one of the operations fails then the final state would be inconsistent. So we need to execute the &lt;strong&gt;two operations&lt;/strong&gt; (deposit and withdraw) as &lt;strong&gt;one operation&lt;/strong&gt;. And if an error occurs then we would like to go back in time as if that one operation was never executed.</source>
          <target state="translated">いずれかの操作が失敗すると、最終的な状態に一貫性がなくなることを覚えておくことが重要です。したがって、&lt;strong&gt;2つの操作&lt;/strong&gt;（入金と引き出し）を&lt;strong&gt;1つの操作&lt;/strong&gt;として実行する必要があり&lt;strong&gt;ます&lt;/strong&gt;。エラーが発生した場合は、その1つの操作が実行されなかったかのように、時間をさかのぼって戻します。</target>
        </trans-unit>
        <trans-unit id="d427db589a10935ea6290aaa43929a1648b20aad" translate="yes" xml:space="preserve">
          <source>It is initially configured according to system environment settings, but its value can be changed:</source>
          <target state="translated">初期設定ではシステム環境設定に応じて設定されていますが、値を変更することができます。</target>
        </trans-unit>
        <trans-unit id="a4627c7657bca304a1b42c4cb171e3f0bd0ff79c" translate="yes" xml:space="preserve">
          <source>It is internally represented by a pair of &lt;code&gt;&lt;a href=&quot;bigint&quot;&gt;BigInt&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;uint64&quot;&gt;UInt64&lt;/a&gt;&lt;/code&gt;: value and scale. Value contains the actual value, and scale tells the decimal point place. E.g. when value is &lt;code&gt;1234&lt;/code&gt; and scale &lt;code&gt;2&lt;/code&gt;, the result is &lt;code&gt;12.34&lt;/code&gt;.</source>
          <target state="translated">これは、 &lt;code&gt;&lt;a href=&quot;bigint&quot;&gt;BigInt&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;uint64&quot;&gt;UInt64&lt;/a&gt;&lt;/code&gt; のペア（値とスケール）で内部的に表されます。値には実際の値が含まれ、スケールは小数点の位置を示します。たとえば、値が &lt;code&gt;1234&lt;/code&gt; でスケールが &lt;code&gt;2&lt;/code&gt; の場合、結果は &lt;code&gt;12.34&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="07b43129ae7c929430bf865127c986d6b053f16b" translate="yes" xml:space="preserve">
          <source>It is often used in generic code, to make use of the compiler's type inference capabilities:</source>
          <target state="translated">一般的なコードでは、コンパイラの型推論機能を利用するためによく使われます。</target>
        </trans-unit>
        <trans-unit id="76bd642c8a468e701cf996857ecd9cf03463815b" translate="yes" xml:space="preserve">
          <source>It is possible to define a macro which generates one or more macro definitions. You must escape macro expressions of the inner macro by preceding them with a backslash character &quot;\&quot; to prevent them from being evaluated by the outer macro.</source>
          <target state="translated">1 つ以上のマクロ定義を生成するマクロを定義することができます。内側のマクロのマクロ式は、外側のマクロで評価されないように、バックスラッシュ文字 &quot;\&quot; を前にしてエスケープする必要があります。</target>
        </trans-unit>
        <trans-unit id="a17205b781b0b2cdfb7451d646dd1abd9036df89" translate="yes" xml:space="preserve">
          <source>It is possible to directly call methods on heredoc string literals, or use them inside parentheses:</source>
          <target state="translated">ヘレドク文字列リテラルのメソッドを直接呼び出すことも、括弧内でメソッドを使用することも可能です。</target>
        </trans-unit>
        <trans-unit id="a13802aebfb819e9918605d1e0f2fddf9dd00b19" translate="yes" xml:space="preserve">
          <source>It is possible to make a custom RNG by including &lt;code&gt;&lt;a href=&quot;random&quot;&gt;Random&lt;/a&gt;&lt;/code&gt; and implementing &lt;code&gt;&lt;a href=&quot;random#next_u-instance-method&quot;&gt;#next_u&lt;/a&gt;&lt;/code&gt; to return an unsigned number of a pre-determined type (usually &lt;code&gt;&lt;a href=&quot;uint32&quot;&gt;UInt32&lt;/a&gt;&lt;/code&gt;). The numbers generated by your RNG must be uniformly distributed in the whole range of possible values for that type (e.g. &lt;code&gt;0u32..UInt32::MAX&lt;/code&gt;). This allows all other methods of &lt;code&gt;&lt;a href=&quot;random&quot;&gt;Random&lt;/a&gt;&lt;/code&gt; to be based on this and still produce uniformly distributed results. Your &lt;code&gt;&lt;a href=&quot;random&quot;&gt;Random&lt;/a&gt;&lt;/code&gt; class should also have a way to initialize it. For pseudo-random number generators that will usually be an integer seed, but there are no rigid requirements for the initialization.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;random&quot;&gt;Random&lt;/a&gt;&lt;/code&gt; を &lt;code&gt;&lt;a href=&quot;random#next_u-instance-method&quot;&gt;#next_u&lt;/a&gt;&lt;/code&gt; し、＃next_uを実装して、事前に定義された型（通常は &lt;code&gt;&lt;a href=&quot;uint32&quot;&gt;UInt32&lt;/a&gt;&lt;/code&gt; ）の符号なし数を返すことにより、カスタムRNGを作成することができます。RNGによって生成された数値は、そのタイプの可能な値の範囲全体に均一に分布している必要があります（例： &lt;code&gt;0u32..UInt32::MAX&lt;/code&gt; ）。これにより、 &lt;code&gt;&lt;a href=&quot;random&quot;&gt;Random&lt;/a&gt;&lt;/code&gt; の他のすべてのメソッドがこれに基づいており、均一に分散した結果を生成できます。あなたの &lt;code&gt;&lt;a href=&quot;random&quot;&gt;Random&lt;/a&gt;&lt;/code&gt; クラスも、それを初期化する方法を持っている必要があります。通常は整数シードとなる疑似乱数ジェネレータの場合、初期化に厳密な要件はありません。</target>
        </trans-unit>
        <trans-unit id="0a32de1d0907515530fd1d90acb3378a4eb2462b" translate="yes" xml:space="preserve">
          <source>It is recommended to use a secure source, such as &lt;code&gt;&lt;a href=&quot;random/secure&quot;&gt;Random::Secure&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;random/isaac&quot;&gt;Random::ISAAC&lt;/a&gt;&lt;/code&gt; or ChaCha20 for anything that needs security, such as online games, identification tokens, salts, initializing a PRNG, ... These PRNG are slower but cryptographically secure, so a third party can't deduce incoming numbers.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;random/secure&quot;&gt;Random::Secure&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;random/isaac&quot;&gt;Random::ISAAC&lt;/a&gt;&lt;/code&gt; などの安全なソースを使用することをお勧めしますオンラインゲーム、識別トークン、ソルト、PRNGの初期化など、セキュリティが必要またはChaCha20。これらのPRNGは低速ですが暗号で保護されているため、第三者が着信番号を推測することはできません。</target>
        </trans-unit>
        <trans-unit id="3ae83b2915e1a4466f14ff7ff6bb1f15cebfb925" translate="yes" xml:space="preserve">
          <source>It is recommended to use the secure &lt;code&gt;&lt;a href=&quot;random/secure&quot;&gt;Random::Secure&lt;/a&gt;&lt;/code&gt; as a source or another cryptographically quality PRNG such as &lt;code&gt;&lt;a href=&quot;random/isaac&quot;&gt;Random::ISAAC&lt;/a&gt;&lt;/code&gt; or ChaCha20.</source>
          <target state="translated">安全な &lt;code&gt;&lt;a href=&quot;random/secure&quot;&gt;Random::Secure&lt;/a&gt;&lt;/code&gt; をソースとして使用するか、 &lt;code&gt;&lt;a href=&quot;random/isaac&quot;&gt;Random::ISAAC&lt;/a&gt;&lt;/code&gt; やChaCha20 などの暗号品質のPRNG を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="93f040c1cfc8994c9d56e7ac0117cadc647caeec" translate="yes" xml:space="preserve">
          <source>It is strongly recommended to use a cryptographically random source for &lt;em&gt;random&lt;/em&gt;, such as &lt;code&gt;&lt;a href=&quot;random/secure&quot;&gt;Random::Secure&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;random/secure&quot;&gt;Random::Secure&lt;/a&gt;&lt;/code&gt; ように、&lt;em&gt;randomに&lt;/em&gt;は暗号的にランダムなソースを使用することを強くお勧めします。</target>
        </trans-unit>
        <trans-unit id="0f6ac9f1048cf822d468cd15e661673e36ae88d2" translate="yes" xml:space="preserve">
          <source>It is the caller's responsibility to remove the file when no longer needed.</source>
          <target state="translated">不要になったら削除するのは呼び出し元の責任です。</target>
        </trans-unit>
        <trans-unit id="2b8edaca6788c7c913ff2a8beb35d142e0febf69" translate="yes" xml:space="preserve">
          <source>It is the only zone offset used in &lt;code&gt;&lt;a href=&quot;../location#UTC&quot;&gt;Time::Location::UTC&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../location#UTC&quot;&gt;Time::Location::UTC&lt;/a&gt;&lt;/code&gt; 使用される唯一のゾーンオフセットです。</target>
        </trans-unit>
        <trans-unit id="8bc04793196384156ba81caa2f1399203a06d06b" translate="yes" xml:space="preserve">
          <source>It is typically created with a char literal by enclosing an UTF-8 character in single quotes.</source>
          <target state="translated">これは通常、UTF-8文字を一重引用符で囲むことでcharリテラルで作成されます。</target>
        </trans-unit>
        <trans-unit id="167d5320042ed31381da530503f6ac23afa57bb8" translate="yes" xml:space="preserve">
          <source>It is usually used inside a &lt;code&gt;&lt;a href=&quot;methods#describe(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,&amp;amp;block)-instance-method&quot;&gt;#describe&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;methods#context(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,&amp;amp;block)-instance-method&quot;&gt;#context&lt;/a&gt;&lt;/code&gt; section.</source>
          <target state="translated">通常は &lt;code&gt;&lt;a href=&quot;methods#describe(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,&amp;amp;block)-instance-method&quot;&gt;#describe&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;methods#context(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,&amp;amp;block)-instance-method&quot;&gt;#context&lt;/a&gt;&lt;/code&gt; 内で使用されますセクションます。</target>
        </trans-unit>
        <trans-unit id="4925fe775480210a04ad8c30ae3c7ba3153377ae" translate="yes" xml:space="preserve">
          <source>It is usually used inside a &lt;code&gt;&lt;a href=&quot;methods#describe(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,tags:String%7CEnumerable(String)%7CNil=nil,&amp;amp;block)-instance-method&quot;&gt;#describe&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;methods#context(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,tags:String%7CEnumerable(String)%7CNil=nil,&amp;amp;block)-instance-method&quot;&gt;#context&lt;/a&gt;&lt;/code&gt; section.</source>
          <target state="translated">これは通常、 &lt;code&gt;&lt;a href=&quot;methods#describe(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,tags:String%7CEnumerable(String)%7CNil=nil,&amp;amp;block)-instance-method&quot;&gt;#describe&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;methods#context(description,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,tags:String%7CEnumerable(String)%7CNil=nil,&amp;amp;block)-instance-method&quot;&gt;#context&lt;/a&gt;&lt;/code&gt; セクション内で使用されます。</target>
        </trans-unit>
        <trans-unit id="5073dd9e365b46368647b27c355fe6170f4f9ff7" translate="yes" xml:space="preserve">
          <source>It is valid to pass &lt;code&gt;&lt;a href=&quot;string#bytesize:Int32-instance-method&quot;&gt;#bytesize&lt;/a&gt;&lt;/code&gt; to &lt;em&gt;index&lt;/em&gt;, and in this case the answer will be the size of this string.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;string#bytesize:Int32-instance-method&quot;&gt;#bytesize&lt;/a&gt;&lt;/code&gt; を&lt;em&gt;index&lt;/em&gt;に渡すことは有効です。この場合、答えはこの文字列のサイズになります。</target>
        </trans-unit>
        <trans-unit id="493a4de947e7d1d3de0e26cd7b606a362a97a832" translate="yes" xml:space="preserve">
          <source>It is valid to pass &lt;code&gt;&lt;a href=&quot;string#size-instance-method&quot;&gt;#size&lt;/a&gt;&lt;/code&gt; to &lt;em&gt;index&lt;/em&gt;, and in this case the answer will be the bytesize of this string.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;string#size-instance-method&quot;&gt;#size&lt;/a&gt;&lt;/code&gt; を&lt;em&gt;index&lt;/em&gt;に渡すことは有効であり、この場合の答えはこの文字列のバイトサイズになります。</target>
        </trans-unit>
        <trans-unit id="23adbd354ecbde6eb0ab83184916b8c2916f8ab2" translate="yes" xml:space="preserve">
          <source>It manages dependencies for Crystal projects and libraries with reproducible installs across computers and systems.</source>
          <target state="translated">Crystalプロジェクトやライブラリの依存関係を管理し、コンピュータやシステム間でのインストールを再現可能にします。</target>
        </trans-unit>
        <trans-unit id="449ff91ee23573155e7d4a0e39db55c0b1700016" translate="yes" xml:space="preserve">
          <source>It may contain non-ASCII bytes, including NUL bytes.</source>
          <target state="translated">NULバイトを含む非ASCIIバイトを含む場合があります。</target>
        </trans-unit>
        <trans-unit id="58fdb45f3edc2b0d0cf9249c0e92699e387f4432" translate="yes" xml:space="preserve">
          <source>It provides constants for the defined HTTP status codes as well as helper methods to easily identify the type of response.</source>
          <target state="translated">定義された HTTP ステータスコードの定数と、レスポンスのタイプを簡単に識別するためのヘルパーメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="4acfe4168ffd08c7f5fdc1065860bec12d8925a7" translate="yes" xml:space="preserve">
          <source>It reads the beginning of the array, yield each value of the array, and reads the end of the array. You have to consumes the values, if any, so the pull parser does not fail when reading the end of the array.</source>
          <target state="translated">配列の先頭を読み、配列の各値を降ろして、配列の最後を読みます。配列の最後を読むときにプルパーサーが失敗しないように、値があればそれを消費しなければなりません。</target>
        </trans-unit>
        <trans-unit id="c499df0a8ff0d2fb4a7b4036713e8f3fa611a3ae" translate="yes" xml:space="preserve">
          <source>It reads the beginning of the object, yield each key and key location, and reads the end of the object. You have to consumes the values, if any, so the pull parser does not fail when reading the end of the object.</source>
          <target state="translated">オブジェクトの先頭を読み、各キーとキーの位置を取得し、オブジェクトの最後を読みます。オブジェクトの最後を読むときにプルパーサーが失敗しないように、値があればそれを消費しなければなりません。</target>
        </trans-unit>
        <trans-unit id="78714368442c6514c207f75da6d297b10e34ace6" translate="yes" xml:space="preserve">
          <source>It receives an optional &lt;code&gt;StringLiteral&lt;/code&gt; as single argument containing a deprecation notice.</source>
          <target state="translated">廃止の通知を含む単一の引数としてオプションの &lt;code&gt;StringLiteral&lt;/code&gt; を受け取ります。</target>
        </trans-unit>
        <trans-unit id="c9fa8ed0ae1208a201958346fe7993b890913758" translate="yes" xml:space="preserve">
          <source>It returns &lt;code&gt;true&lt;/code&gt; when the channel was successfully closed, or &lt;code&gt;false&lt;/code&gt; if it was already closed.</source>
          <target state="translated">チャネルが正常に閉じられた場合は &lt;code&gt;true&lt;/code&gt; を返し、すでに閉じられている場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="bf197db26f12c9c2de1086aeebd1ad7308d08664" translate="yes" xml:space="preserve">
          <source>It returns a copy of this instance if it already has POSIX kind. Otherwise a new instance is created with &lt;code&gt;&lt;a href=&quot;path/kind#POSIX&quot;&gt;Kind::POSIX&lt;/a&gt;&lt;/code&gt; and all occurences of backslash file separators (&lt;code&gt;\\&lt;/code&gt;) replaced by forward slash (&lt;code&gt;&lt;a href=&quot;path#/(part:Path%7CString):Path-instance-method&quot;&gt;#/&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">POSIXの種類がすでにある場合は、このインスタンスのコピーを返します。それ以外の場合、新しいインスタンスは &lt;code&gt;&lt;a href=&quot;path/kind#POSIX&quot;&gt;Kind::POSIX&lt;/a&gt;&lt;/code&gt; 作成され、すべてのバックスラッシュファイル区切り文字（ &lt;code&gt;\\&lt;/code&gt; ）はスラッシュ（ &lt;code&gt;&lt;a href=&quot;path#/(part:Path%7CString):Path-instance-method&quot;&gt;#/&lt;/a&gt;&lt;/code&gt; ）に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="6a4dda6286339e4fadd712638892ec51890d1660" translate="yes" xml:space="preserve">
          <source>It returns a copy of this instance if it already has POSIX kind. Otherwise a new instance is created with &lt;code&gt;&lt;a href=&quot;path/kind#POSIX&quot;&gt;Kind::POSIX&lt;/a&gt;&lt;/code&gt; and all occurrences of backslash file separators (&lt;code&gt;\\&lt;/code&gt;) replaced by forward slash (&lt;code&gt;&lt;a href=&quot;path#/(part:Path%7CString):Path-instance-method&quot;&gt;#/&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">すでにPOSIXの種類がある場合は、このインスタンスのコピーを返します。それ以外の場合は、 &lt;code&gt;&lt;a href=&quot;path/kind#POSIX&quot;&gt;Kind::POSIX&lt;/a&gt;&lt;/code&gt; を使用して新しいインスタンスが作成され、バックスラッシュファイルの区切り文字（ &lt;code&gt;\\&lt;/code&gt; ）がすべてフォワードスラッシュ（ &lt;code&gt;&lt;a href=&quot;path#/(part:Path%7CString):Path-instance-method&quot;&gt;#/&lt;/a&gt;&lt;/code&gt; ）に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="be9495c2413e841c571d654c5194a0eb85e3b84f" translate="yes" xml:space="preserve">
          <source>It returns the rescued exception.</source>
          <target state="translated">救出された例外を返します。</target>
        </trans-unit>
        <trans-unit id="c027793c4fcbf7f7be6aed911c23cf2d476fffe0" translate="yes" xml:space="preserve">
          <source>It returns:</source>
          <target state="translated">返ってきます。</target>
        </trans-unit>
        <trans-unit id="5497a697168334130e08eb2adbeb0c076753e7ac" translate="yes" xml:space="preserve">
          <source>It rounds the number to the nearest thousands magnitude with &lt;em&gt;precision&lt;/em&gt; number of significant digits. The order of magnitude is expressed with an appended quantifier. By default, SI prefixes are used (see &lt;code&gt;&lt;a href=&quot;number#SI_PREFIXES&quot;&gt;SI_PREFIXES&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">有効桁数の&lt;em&gt;精度で&lt;/em&gt;数値を最も近い数千桁に丸めます。大きさの順序は、付加された数量詞で表されます。デフォルトでは、SIプレフィックスが使用されます（ &lt;code&gt;&lt;a href=&quot;number#SI_PREFIXES&quot;&gt;SI_PREFIXES&lt;/a&gt;&lt;/code&gt; を参照））。</target>
        </trans-unit>
        <trans-unit id="c18d9b5d8b79b72fafcd7ca5abdfcee3fc0cc37c" translate="yes" xml:space="preserve">
          <source>It serves both to perform requests by an &lt;code&gt;&lt;a href=&quot;client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt; and to represent requests received by an &lt;code&gt;&lt;a href=&quot;server&quot;&gt;HTTP::Server&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">これは、 &lt;code&gt;&lt;a href=&quot;client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt; によるリクエストの実行と、 &lt;code&gt;&lt;a href=&quot;server&quot;&gt;HTTP::Server&lt;/a&gt;&lt;/code&gt; が受信したリクエストの表現の両方に役立ちます。</target>
        </trans-unit>
        <trans-unit id="794ae442eba44e431cf5d24f153591464bbc6c52" translate="yes" xml:space="preserve">
          <source>It skips the whole value, not only the next lexer's token. For example if the next value is an array, the whole array will be skipped.</source>
          <target state="translated">次のレキサーのトークンだけでなく、値全体をスキップします。例えば、次の値が配列の場合は、配列全体をスキップします。</target>
        </trans-unit>
        <trans-unit id="2fbb4e023c23a413deb4479f471e2f3f01f2e1c6" translate="yes" xml:space="preserve">
          <source>It takes named arguments, a named tuple literal or a hash literal as argument, in which attributes and types are defined. Once defined, &lt;code&gt;&lt;a href=&quot;object#from_yaml(string_or_io:String%7CIO)-class-method&quot;&gt;Object#from_yaml&lt;/a&gt;&lt;/code&gt; populates properties of the class from the YAML document.</source>
          <target state="translated">名前付き引数、名前付きタプルリテラル、またはハッシュリテラルを引数として取り、属性とタイプが定義されます。定義されると、 &lt;code&gt;&lt;a href=&quot;object#from_yaml(string_or_io:String%7CIO)-class-method&quot;&gt;Object#from_yaml&lt;/a&gt;&lt;/code&gt; はYAMLドキュメントからクラスのプロパティを設定します。</target>
        </trans-unit>
        <trans-unit id="f7049c154fa6f27376835c94cf2fd87ee45c09e2" translate="yes" xml:space="preserve">
          <source>It takes named arguments, a named tuple literal or a hash literal as argument, in which attributes and types are defined. Once defined, &lt;code&gt;&lt;a href=&quot;object#from_yaml(string_or_io:String%7CIO):self-class-method&quot;&gt;Object#from_yaml&lt;/a&gt;&lt;/code&gt; populates properties of the class from the YAML document.</source>
          <target state="translated">名前付き引数、名前付きタプルリテラル、またはハッシュリテラルを引数として受け取り、属性と型が定義されています。 &lt;code&gt;&lt;a href=&quot;object#from_yaml(string_or_io:String%7CIO):self-class-method&quot;&gt;Object#from_yaml&lt;/a&gt;&lt;/code&gt; が定義されると、YAMLドキュメントからクラスのプロパティが入力されます。</target>
        </trans-unit>
        <trans-unit id="d5c0d431a80075a7942c1f346e95742aa9e44d78" translate="yes" xml:space="preserve">
          <source>It uses &lt;code&gt;&lt;a href=&quot;../context#CIPHERS_INTERMEDIATE&quot;&gt;CIPHERS_INTERMEDIATE&lt;/a&gt;&lt;/code&gt; compatibility level by default.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;&lt;a href=&quot;../context#CIPHERS_INTERMEDIATE&quot;&gt;CIPHERS_INTERMEDIATE&lt;/a&gt;&lt;/code&gt; 互換性レベルを使用します。</target>
        </trans-unit>
        <trans-unit id="83eaec2ee83fea897efaeb75438fee5d109e0390" translate="yes" xml:space="preserve">
          <source>It uses &lt;code&gt;&lt;a href=&quot;../context#CIPHERS_OLD&quot;&gt;CIPHERS_OLD&lt;/a&gt;&lt;/code&gt; compatibility level by default.</source>
          <target state="translated">デフォルトでは &lt;code&gt;&lt;a href=&quot;../context#CIPHERS_OLD&quot;&gt;CIPHERS_OLD&lt;/a&gt;&lt;/code&gt; 互換性レベルを使用します。</target>
        </trans-unit>
        <trans-unit id="60fb0f0c52217e2ab553c0d16178da5b46c43198" translate="yes" xml:space="preserve">
          <source>It uses a &lt;a href=&quot;https://en.wikipedia.org/wiki/Cryptographically_secure_pseudorandom_number_generator&quot;&gt;cryptographically secure pseudorandom number generator (CSPRNG)&lt;/a&gt; for cryptography and secure usages such as generating secret keys, or to seed another pseudorandom number generator (PRNG).</source>
          <target state="translated">暗号化および秘密鍵の生成などの安全な使用のために、または別の疑似乱数生成器（PRNG）をシード&lt;a href=&quot;https://en.wikipedia.org/wiki/Cryptographically_secure_pseudorandom_number_generator&quot;&gt;するために&lt;/a&gt;、暗号的に安全な疑似乱数生成器（CSPRNG）を使用します。</target>
        </trans-unit>
        <trans-unit id="0ac5ab36bbcd609f08d13ddb13ccc42fbb6ba0cb" translate="yes" xml:space="preserve">
          <source>It usually consists of a continent and city name separated by a slash, for example &lt;code&gt;Europe/Berlin&lt;/code&gt;.</source>
          <target state="translated">通常、大陸と都市名をスラッシュで区切って構成されます（たとえば、 &lt;code&gt;Europe/Berlin&lt;/code&gt; )。</target>
        </trans-unit>
        <trans-unit id="e688c3ec268b37e21ee8bbf51b03c4f3fc6affd8" translate="yes" xml:space="preserve">
          <source>It's also possible to change the text decoration:</source>
          <target state="translated">文字装飾を変更することも可能です。</target>
        </trans-unit>
        <trans-unit id="9a0455648ab1162c692f5930d431e16bf57083cb" translate="yes" xml:space="preserve">
          <source>It's an error specifying more block arguments than those yielded:</source>
          <target state="translated">これは、生成されたものよりも多くのブロック引数を指定したエラーです。</target>
        </trans-unit>
        <trans-unit id="03ca19dfa7ebdec55130b5f764f3b716c7a62b6e" translate="yes" xml:space="preserve">
          <source>It's an error specifying more block parameters than the arguments yielded:</source>
          <target state="translated">与えられた引数よりも多くのブロックパラメータを指定した場合のエラーです。</target>
        </trans-unit>
        <trans-unit id="6883cf46102cc538a015336c0491ab0512234fae" translate="yes" xml:space="preserve">
          <source>It's fine to have your own style, but sticking to &lt;a href=&quot;../conventions/coding_style&quot;&gt;some core rubrics defined by the Crystal team&lt;/a&gt; can help keep your code consistent, readable and usable for other developers.</source>
          <target state="translated">独自のスタイルを設定することは問題ありませんが&lt;a href=&quot;../conventions/coding_style&quot;&gt;、Crystalチームによって定義されたいくつかのコアルーブリックに&lt;/a&gt;固執しますを使用することは問題ありませんがことで、コードの一貫性を保ち、他の開発者が読みやすく使用できるようにすることができます。</target>
        </trans-unit>
        <trans-unit id="60587587f639b7c4e503898074105495d5fe3e4c" translate="yes" xml:space="preserve">
          <source>It's good practice to do GitHub Releases.</source>
          <target state="translated">GitHub Releasesをするのは良い習慣です。</target>
        </trans-unit>
        <trans-unit id="5876e4db9f1889238b8f42d10ed6f9752e75963c" translate="yes" xml:space="preserve">
          <source>It's hard for anyone to use your project if they can't find it. &lt;a href=&quot;https://crystalshards.xyz/&quot;&gt;crystalshards.xyz&lt;/a&gt; is currently the go-to place for Crystal libraries, so that's what we'll optimize for.</source>
          <target state="translated">誰もあなたのプロジェクトを見つけられない場合、そのプロジェクトを使用することは困難です。&lt;a href=&quot;https://crystalshards.xyz/&quot;&gt;Crystalshards.xyz&lt;/a&gt;は現在Crystalライブラリの主な場所なので、これを最適化します。</target>
        </trans-unit>
        <trans-unit id="56afe37629c80637e20b023cc788f813c83b45cc" translate="yes" xml:space="preserve">
          <source>It's macro methods are the same as &lt;code&gt;&lt;a href=&quot;arrayliteral&quot;&gt;ArrayLiteral&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">マクロメソッドは &lt;code&gt;&lt;a href=&quot;arrayliteral&quot;&gt;ArrayLiteral&lt;/a&gt;&lt;/code&gt; と同じです</target>
        </trans-unit>
        <trans-unit id="06f28846369c72b7284ecf0cba91626ba4bfab2c" translate="yes" xml:space="preserve">
          <source>It's possible to send a PING frame, which the client must respond to with a PONG, or the server can send an unsolicited PONG frame which the client should not respond to.</source>
          <target state="translated">クライアントが応答しなければならないPINGフレームを送信したり、クライアントが応答すべきではないPONGフレームをサーバが送信したりすることが可能です。</target>
        </trans-unit>
        <trans-unit id="5b4ec62eb2939f6ee38dd49b764e111e9e5558ac" translate="yes" xml:space="preserve">
          <source>It's the opposite of &lt;code&gt;&lt;a href=&quot;enumerable#all?(&amp;amp;)-instance-method&quot;&gt;#all?&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;enumerable#all?(&amp;amp;)-instance-method&quot;&gt;#all?&lt;/a&gt;&lt;/code&gt; の反対ですか？。</target>
        </trans-unit>
        <trans-unit id="231347e530baf0c7c4425dc74499994820ba5f6c" translate="yes" xml:space="preserve">
          <source>It's the opposite of &lt;code&gt;&lt;a href=&quot;enumerable#all?(&amp;amp;block)-instance-method&quot;&gt;#all?&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;enumerable#all?(&amp;amp;block)-instance-method&quot;&gt;#all?&lt;/a&gt;&lt;/code&gt; の反対ですか？。</target>
        </trans-unit>
        <trans-unit id="a8cf25d78c9b2b652ed85fd67057b2a4a00e8b4c" translate="yes" xml:space="preserve">
          <source>It's worth mentioning that the method returns a &lt;code&gt;DB::Connection&lt;/code&gt; object. Although more specifically, it returns a &lt;code&gt;MySql::Connection&lt;/code&gt; object, it doesn't matter because all types of connections should be polymorphic. So hereinafter we will work with a &lt;code&gt;DB::Connection&lt;/code&gt; instance, helping us to abstract from specific issues of each database engine.</source>
          <target state="translated">このメソッドが &lt;code&gt;DB::Connection&lt;/code&gt; オブジェクトを返すことは言及する価値があります。より具体的には、 &lt;code&gt;MySql::Connection&lt;/code&gt; オブジェクトを返しますが、すべてのタイプの接続はポリモーフィックである必要があるため、問題ではありません。したがって、以下では &lt;code&gt;DB::Connection&lt;/code&gt; インスタンスを使用して、各データベースエンジンの特定の問題から抽象化するのに役立てます。</target>
        </trans-unit>
        <trans-unit id="514ccb313006539ff17b5104b2b97ca6141c435d" translate="yes" xml:space="preserve">
          <source>Item#description</source>
          <target state="translated">Item#description</target>
        </trans-unit>
        <trans-unit id="5d2dc0a46f1ea60de533cd998be8071d91ebb80e" translate="yes" xml:space="preserve">
          <source>Item#end_line</source>
          <target state="translated">Item#end_line</target>
        </trans-unit>
        <trans-unit id="8c60c518c9b6c8acc678fe5ccfe046bebc13fdf9" translate="yes" xml:space="preserve">
          <source>Item#file</source>
          <target state="translated">Item#file</target>
        </trans-unit>
        <trans-unit id="717df2e4f3e33d328a1262969b0e6497d7e6b37d" translate="yes" xml:space="preserve">
          <source>Item#focus?</source>
          <target state="translated">Item#focus?</target>
        </trans-unit>
        <trans-unit id="31295b20aa98e9d225b05b6fc1136a43c3952900" translate="yes" xml:space="preserve">
          <source>Item#line</source>
          <target state="translated">Item#line</target>
        </trans-unit>
        <trans-unit id="0dd14bdcb1103820516adeb11f498bb3006e302b" translate="yes" xml:space="preserve">
          <source>Item#parent</source>
          <target state="translated">Item#parent</target>
        </trans-unit>
        <trans-unit id="216d640b17873cbd7290ec70afa86dd8944cedcc" translate="yes" xml:space="preserve">
          <source>Item#tags</source>
          <target state="translated">Item#tags</target>
        </trans-unit>
        <trans-unit id="08ca6a3da933ca6826a2f4d3fcc919af71d7e380" translate="yes" xml:space="preserve">
          <source>Iterable</source>
          <target state="translated">Iterable</target>
        </trans-unit>
        <trans-unit id="21855f7001acdc97654d5a2c2abb5f3919a52a83" translate="yes" xml:space="preserve">
          <source>Iterable#each</source>
          <target state="translated">Iterable#each</target>
        </trans-unit>
        <trans-unit id="9cee6129111866e425b821724e81eac09e86ecd8" translate="yes" xml:space="preserve">
          <source>Iterable(B)</source>
          <target state="translated">Iterable(B)</target>
        </trans-unit>
        <trans-unit id="4e6de4230c85208856db75cca457616e4f81ae48" translate="yes" xml:space="preserve">
          <source>Iterable(T)</source>
          <target state="translated">Iterable(T)</target>
        </trans-unit>
        <trans-unit id="da99d66ecc6e9b83d3c1331105b9a4ead856a295" translate="yes" xml:space="preserve">
          <source>Iterable({K, V})</source>
          <target state="translated">反復可能({K,V})</target>
        </trans-unit>
        <trans-unit id="801351cc068c434ed200af6fbfd20b18162b4e4a" translate="yes" xml:space="preserve">
          <source>Iterates each member of the enum.</source>
          <target state="translated">列挙型の各メンバを繰り返し処理します。</target>
        </trans-unit>
        <trans-unit id="16fba05dd79033eb190f672f6d386739c8d872be" translate="yes" xml:space="preserve">
          <source>Iterates each member of the enum. It won't iterate the &lt;code&gt;None&lt;/code&gt; and &lt;code&gt;All&lt;/code&gt; members of flags enums.</source>
          <target state="translated">列挙型の各メンバーを反復します。フラグ列挙の &lt;code&gt;None&lt;/code&gt; および &lt;code&gt;All&lt;/code&gt; メンバーを反復しません。</target>
        </trans-unit>
        <trans-unit id="d4c6894cc6e51e490a6ebf1212dbe54f16948393" translate="yes" xml:space="preserve">
          <source>Iterates each values in a Flags Enum.</source>
          <target state="translated">Flags Enum の各値を繰り返し処理します。</target>
        </trans-unit>
        <trans-unit id="c403105725e2c5a9ae8a9e84a9c683aafcf7ae19" translate="yes" xml:space="preserve">
          <source>Iterates from &lt;code&gt;&lt;a href=&quot;range#begin:B-instance-method&quot;&gt;#begin&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;range#end:E-instance-method&quot;&gt;#end&lt;/a&gt;&lt;/code&gt; incrementing by the amount of &lt;em&gt;step&lt;/em&gt; on each iteration.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;range#begin:B-instance-method&quot;&gt;#begin&lt;/a&gt;&lt;/code&gt; から &lt;code&gt;&lt;a href=&quot;range#end:E-instance-method&quot;&gt;#end&lt;/a&gt;&lt;/code&gt; まで反復し、各反復の&lt;em&gt;ステップ&lt;/em&gt;数だけ増分します。</target>
        </trans-unit>
        <trans-unit id="edd910d63ae8656ba71a2f689d17b32ea9d6c2c1" translate="yes" xml:space="preserve">
          <source>Iterates from &lt;code&gt;self&lt;/code&gt; to &lt;em&gt;limit&lt;/em&gt; incrementing by the amount of &lt;em&gt;step&lt;/em&gt; on each iteration.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; から反復して、各反復の&lt;em&gt;ステップ&lt;/em&gt;数だけ増分を&lt;em&gt;制限し&lt;/em&gt;ます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9844ae35720e688efec34e8da61dcfa88727b71c" translate="yes" xml:space="preserve">
          <source>Iterates from &lt;code&gt;self&lt;/code&gt; to &lt;em&gt;limit&lt;/em&gt; incrementing by the amount of &lt;em&gt;step&lt;/em&gt; on each iteration. If &lt;em&gt;exclusive&lt;/em&gt; is &lt;code&gt;true&lt;/code&gt;, &lt;em&gt;limit&lt;/em&gt; is excluded from the iteration.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; から反復して、各反復の&lt;em&gt;ステップ&lt;/em&gt;数だけ増分を&lt;em&gt;制限し&lt;/em&gt;ます。場合は&lt;em&gt;、排他的で&lt;/em&gt;ある &lt;code&gt;true&lt;/code&gt; 、&lt;em&gt;制限が&lt;/em&gt;反復から除外されます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d9d5090413ecc016fc08697af8c43ee36ed32aa5" translate="yes" xml:space="preserve">
          <source>Iterates over all &lt;code&gt;KEY=VALUE&lt;/code&gt; pairs of environment variables, yielding both the &lt;em&gt;key&lt;/em&gt; and &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="translated">環境変数のすべての &lt;code&gt;KEY=VALUE&lt;/code&gt; ペアを反復処理し、&lt;em&gt;キー&lt;/em&gt;と&lt;em&gt;値の&lt;/em&gt;両方を生成し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="07b1d9ca8566c25f29a89572a5ef9c83d35b6070" translate="yes" xml:space="preserve">
          <source>Iterates over the collection in slices of size &lt;em&gt;count&lt;/em&gt;, and runs the block for each of those.</source>
          <target state="translated">サイズ&lt;em&gt;countの&lt;/em&gt;スライスでコレクションを反復処理し、それぞれのブロックを実行します。</target>
        </trans-unit>
        <trans-unit id="9434f35e1f5f4333a4fdfd22e95dadb99cea4150" translate="yes" xml:space="preserve">
          <source>Iterates over the collection yielding chunks of size &lt;em&gt;count&lt;/em&gt;, but advancing one by one.</source>
          <target state="translated">コレクションを反復処理して、サイズ&lt;em&gt;countの&lt;/em&gt;チャンクを生成しますが、1つずつ進めます。</target>
        </trans-unit>
        <trans-unit id="437525573ad0750b9b85ef1c24fe9e477f2a0fa7" translate="yes" xml:space="preserve">
          <source>Iterates over the collection yielding pairs of adjacent items, but advancing one by one.</source>
          <target state="translated">コレクションを反復処理して、隣接するアイテムのペアを生成しますが、1つずつ進めていきます。</target>
        </trans-unit>
        <trans-unit id="ad3203cc17231cf37624d0f5aea4a82be1f2b777" translate="yes" xml:space="preserve">
          <source>Iterates over the collection, passing each element and the initial object &lt;em&gt;obj&lt;/em&gt;.</source>
          <target state="translated">コレクションを反復処理し、各要素と初期オブジェクト&lt;em&gt;obj&lt;/em&gt;を渡します。</target>
        </trans-unit>
        <trans-unit id="50c07aa61b9e3bbd1a7513ac7002fafeef65f3e3" translate="yes" xml:space="preserve">
          <source>Iterates over the collection, passing each element and the initial object &lt;em&gt;obj&lt;/em&gt;. Returns that object.</source>
          <target state="translated">コレクションを反復処理し、各要素と初期オブジェクト&lt;em&gt;obj&lt;/em&gt;を渡します。そのオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="4be626cd2843ed4e65e3be982133d99c50840328" translate="yes" xml:space="preserve">
          <source>Iterates over the collection, yielding both the elements and their index.</source>
          <target state="translated">コレクションを繰り返し処理し、要素とそのインデックスの両方を生成します。</target>
        </trans-unit>
        <trans-unit id="da696b666cf9e80879bb77507bdec0e9053bbe98" translate="yes" xml:space="preserve">
          <source>Iterates over the elements of this range in reverse order, passing each in turn to the block.</source>
          <target state="translated">この範囲の要素を逆順に繰り返し処理し、それぞれを順番にブロックに渡します。</target>
        </trans-unit>
        <trans-unit id="458662c0cf3d4f48e3590d5e232c0feb69bc6bfd" translate="yes" xml:space="preserve">
          <source>Iterates over the elements of this range, passing each in turn to the block.</source>
          <target state="translated">この範囲の要素を繰り返し処理し、それぞれを順番にブロックに渡します。</target>
        </trans-unit>
        <trans-unit id="15a1c576cff75174b984f38bd74d03ebdffdc135" translate="yes" xml:space="preserve">
          <source>Iterates over this range, passing each nth element to the block.</source>
          <target state="translated">この範囲を反復処理し、各n番目の要素をブロックに渡します。</target>
        </trans-unit>
        <trans-unit id="2cac53ebd6210e9b26809ca3d2e05daf9a3acf9f" translate="yes" xml:space="preserve">
          <source>Iterating strings</source>
          <target state="translated">文字列の反復処理</target>
        </trans-unit>
        <trans-unit id="18905aab409cadb5b72681a650ec99001cb221e0" translate="yes" xml:space="preserve">
          <source>Iteration</source>
          <target state="translated">Iteration</target>
        </trans-unit>
        <trans-unit id="79d2d7a05aff325222fd6b8233dededcec0b8178" translate="yes" xml:space="preserve">
          <source>Iteration stops when any of the iterators runs out of elements.</source>
          <target state="translated">いずれかのイテレータの要素がなくなると、反復は停止します。</target>
        </trans-unit>
        <trans-unit id="bae8809b2429231a50c28ba87cecc038aac88855" translate="yes" xml:space="preserve">
          <source>Iterator</source>
          <target state="translated">Iterator</target>
        </trans-unit>
        <trans-unit id="81008a1d5603847c92ae6ec8f5c8beee1b025f88" translate="yes" xml:space="preserve">
          <source>Iterator#cons</source>
          <target state="translated">Iterator#cons</target>
        </trans-unit>
        <trans-unit id="76fc7977dd2976eff1cac89908bf603d719d2328" translate="yes" xml:space="preserve">
          <source>Iterator#each</source>
          <target state="translated">Iterator#each</target>
        </trans-unit>
        <trans-unit id="7d09fd8578cf22aed8e798bc7e4b7e569bb2dd01" translate="yes" xml:space="preserve">
          <source>Iterator#map</source>
          <target state="translated">Iterator#map</target>
        </trans-unit>
        <trans-unit id="1eacb03f472cc021031d0c7d999df0406a28e2b6" translate="yes" xml:space="preserve">
          <source>Iterator#next</source>
          <target state="translated">Iterator#next</target>
        </trans-unit>
        <trans-unit id="9b0d92d49d483fa2962c2e91898e4fc7eb7e6a0d" translate="yes" xml:space="preserve">
          <source>Iterator#skip</source>
          <target state="translated">Iterator#skip</target>
        </trans-unit>
        <trans-unit id="aa4528dbc0009d2105dbd09970dc1a51ff877f04" translate="yes" xml:space="preserve">
          <source>Iterator#step</source>
          <target state="translated">Iterator#step</target>
        </trans-unit>
        <trans-unit id="10880ed735aa8f0eb23bf19eb29ba54180e18a87" translate="yes" xml:space="preserve">
          <source>Iterator#stop</source>
          <target state="translated">Iterator#stop</target>
        </trans-unit>
        <trans-unit id="22099b9f07c141f8c7dbaf911190abad9e6641d7" translate="yes" xml:space="preserve">
          <source>Iterator#tap</source>
          <target state="translated">Iterator#tap</target>
        </trans-unit>
        <trans-unit id="472fb70214809a7170e15a9eb4969ff6ad0aa3be" translate="yes" xml:space="preserve">
          <source>Iterator#uniq</source>
          <target state="translated">Iterator#uniq</target>
        </trans-unit>
        <trans-unit id="a1df69ea7687d308728ef15cb7f4d54d76052c75" translate="yes" xml:space="preserve">
          <source>Iterator#zip</source>
          <target state="translated">Iterator#zip</target>
        </trans-unit>
        <trans-unit id="92a6f7690d3f67a5c2a34fb79ce33a081d403ded" translate="yes" xml:space="preserve">
          <source>Iterator(T)</source>
          <target state="translated">Iterator(T)</target>
        </trans-unit>
        <trans-unit id="bb09d01284857f13b83a78fb893791b953d86861" translate="yes" xml:space="preserve">
          <source>Iterator.of</source>
          <target state="translated">Iterator.of</target>
        </trans-unit>
        <trans-unit id="4897718268df751c4f61583a5f4fae0a77d463f7" translate="yes" xml:space="preserve">
          <source>Iterator.stop</source>
          <target state="translated">Iterator.stop</target>
        </trans-unit>
        <trans-unit id="5674e76e082100f7018e4be02db322d282a31e82" translate="yes" xml:space="preserve">
          <source>Iterator::Stop</source>
          <target state="translated">Iterator::Stop</target>
        </trans-unit>
        <trans-unit id="2dbea495944c028a03d60c813a69f24633c27700" translate="yes" xml:space="preserve">
          <source>IteratorWrapper</source>
          <target state="translated">IteratorWrapper</target>
        </trans-unit>
        <trans-unit id="dfe3f404cb6e226371e69d371c8303dc1253de6e" translate="yes" xml:space="preserve">
          <source>IteratorWrapper wrapped_next</source>
          <target state="translated">IteratorWrapper wrapped_next</target>
        </trans-unit>
        <trans-unit id="c84785865f5c1faf41f21bb5b59c8153b605867e" translate="yes" xml:space="preserve">
          <source>Its first argument changes the foreground color:</source>
          <target state="translated">第1引数で前景色を変更します。</target>
        </trans-unit>
        <trans-unit id="3f41999f8965951932b6ceb36fccb21c6ee6e4f6" translate="yes" xml:space="preserve">
          <source>Its macro methods are nearly the same as &lt;code&gt;&lt;a href=&quot;arrayliteral&quot;&gt;ArrayLiteral&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">そのマクロメソッドは、 &lt;code&gt;&lt;a href=&quot;arrayliteral&quot;&gt;ArrayLiteral&lt;/a&gt;&lt;/code&gt; とほぼ同じです。</target>
        </trans-unit>
        <trans-unit id="d552b9b23b8db34ab12baac8aba7d28f7e24e77c" translate="yes" xml:space="preserve">
          <source>JITCompiler</source>
          <target state="translated">JITCompiler</target>
        </trans-unit>
        <trans-unit id="3e0b16b267f4986b5cc2b0091ccc5e13a11f2a3a" translate="yes" xml:space="preserve">
          <source>JITCompiler#dispose</source>
          <target state="translated">JITCompiler#dispose</target>
        </trans-unit>
        <trans-unit id="72492aa85a3aa9a50bf31b81058a39e271717d3a" translate="yes" xml:space="preserve">
          <source>JITCompiler#finalize</source>
          <target state="translated">JITCompiler#finalize</target>
        </trans-unit>
        <trans-unit id="79734fbfe144e716e2047fbdcec07f81863cda76" translate="yes" xml:space="preserve">
          <source>JITCompiler#get_pointer_to_global</source>
          <target state="translated">JITCompiler#get_pointer_to_global</target>
        </trans-unit>
        <trans-unit id="6d57741ee7b281945d9ff1b2b50a218d841c3e82" translate="yes" xml:space="preserve">
          <source>JITCompiler#run_function</source>
          <target state="translated">JITCompiler#run_function</target>
        </trans-unit>
        <trans-unit id="cb79308d799296c6df78ec46f77ca99f13a10b8a" translate="yes" xml:space="preserve">
          <source>JITCompiler#to_unsafe</source>
          <target state="translated">JITCompiler#to_unsafe</target>
        </trans-unit>
        <trans-unit id="311eb8d84ee8573f9143997f47e5d0bfd987ab46" translate="yes" xml:space="preserve">
          <source>JITCompiler.new</source>
          <target state="translated">JITCompiler.new</target>
        </trans-unit>
        <trans-unit id="031a4e76f0b39d0df073d934da5fc48da8d737e5" translate="yes" xml:space="preserve">
          <source>JSON</source>
          <target state="translated">JSON</target>
        </trans-unit>
        <trans-unit id="6d57aff05d797dfa147cf5d55dc71690f4221e62" translate="yes" xml:space="preserve">
          <source>JSON key-value pairs that are outside of the OAuth2 spec are stored in this property in case they are needed.</source>
          <target state="translated">OAuth2仕様外のJSONキーと値のペアは、必要に応じてこのプロパティに格納されます。</target>
        </trans-unit>
        <trans-unit id="86bddeceaa4a22fc72d98fda9a69be516973be25" translate="yes" xml:space="preserve">
          <source>JSON key-value pairs that are outside of the OAuth2 spec are stored in this property in case they are needed. Their value is the raw JSON string found in the JSON value (with possible changes in the string format, but preserving JSON semantic). For example if the value was &lt;code&gt;[1, 2, 3]&lt;/code&gt; then the value in this hash will be the string &quot;[1,2,3]&quot;.</source>
          <target state="translated">OAuth2仕様の範囲外のJSONキーと値のペアは、必要な場合に備えてこのプロパティに格納されます。それらの値は、JSON値に含まれる未加工のJSON文字列です（文字列形式が変更される可能性がありますが、JSONセマンティックは保持されます）。値であった場合、例えば &lt;code&gt;[1, 2, 3]&lt;/code&gt; 次に、このハッシュの値は、文字列「[1,2,3]」であろう。</target>
        </trans-unit>
        <trans-unit id="b03b0b78981bc28291880680db9f0f18c219bd56" translate="yes" xml:space="preserve">
          <source>JSON::Any</source>
          <target state="translated">JSON::Any</target>
        </trans-unit>
        <trans-unit id="c1adf47961de54bd3ef64648aab56e21d5a5a448" translate="yes" xml:space="preserve">
          <source>JSON::Builder</source>
          <target state="translated">JSON::Builder</target>
        </trans-unit>
        <trans-unit id="8cdb133c62b94222b3c6a6c8ade57450226f2207" translate="yes" xml:space="preserve">
          <source>JSON::Builder::ArrayState</source>
          <target state="translated">JSON::Builder::ArrayState</target>
        </trans-unit>
        <trans-unit id="fadaf0adfab09753ab4e070c66630e979e4d00d4" translate="yes" xml:space="preserve">
          <source>JSON::Builder::DocumentEndState</source>
          <target state="translated">JSON::Builder::DocumentEndState</target>
        </trans-unit>
        <trans-unit id="73a0ffddeeb72ee2b3b9d7656e14ba6de3c07751" translate="yes" xml:space="preserve">
          <source>JSON::Builder::DocumentStartState</source>
          <target state="translated">JSON::Builder::DocumentStartState</target>
        </trans-unit>
        <trans-unit id="5cac541a839de8f5e97339e955aa3b9ad4ef0bea" translate="yes" xml:space="preserve">
          <source>JSON::Builder::ObjectState</source>
          <target state="translated">JSON::Builder::ObjectState</target>
        </trans-unit>
        <trans-unit id="d9863ca26568c54b73d4b0ad14b34a946d34392b" translate="yes" xml:space="preserve">
          <source>JSON::Builder::StartState</source>
          <target state="translated">JSON::Builder::StartState</target>
        </trans-unit>
        <trans-unit id="0b3cf54a7bf262de75716747fb1438e03ab612ba" translate="yes" xml:space="preserve">
          <source>JSON::Error</source>
          <target state="translated">JSON::Error</target>
        </trans-unit>
        <trans-unit id="e652e0d3c0b8150e0896d321b55ba31e274be02b" translate="yes" xml:space="preserve">
          <source>JSON::Field</source>
          <target state="translated">JSON::Field</target>
        </trans-unit>
        <trans-unit id="01136816887cd3b845c84deb7784651dd3b84657" translate="yes" xml:space="preserve">
          <source>JSON::Lexer</source>
          <target state="translated">JSON::Lexer</target>
        </trans-unit>
        <trans-unit id="797a5912c907c727c595cef1d9575f6d23188e9b" translate="yes" xml:space="preserve">
          <source>JSON::MappingError</source>
          <target state="translated">JSON::MappingError</target>
        </trans-unit>
        <trans-unit id="721586a408a2497bff3cd650e2605d74da972249" translate="yes" xml:space="preserve">
          <source>JSON::MappingError#attribute</source>
          <target state="translated">JSON::MappingError#attribute</target>
        </trans-unit>
        <trans-unit id="827858537c6bb3e59add58f5024b4145e2a57531" translate="yes" xml:space="preserve">
          <source>JSON::MappingError#klass</source>
          <target state="translated">JSON::MappingError#klass</target>
        </trans-unit>
        <trans-unit id="de52742aca88c5feaa2c4685fa1a0d45b5d68cd8" translate="yes" xml:space="preserve">
          <source>JSON::MappingError.new</source>
          <target state="translated">JSON::MappingError.new</target>
        </trans-unit>
        <trans-unit id="1bdf5bca0c244ac7e53965d2d0d78ecda0bfed5a" translate="yes" xml:space="preserve">
          <source>JSON::ParseException</source>
          <target state="translated">JSON::ParseException</target>
        </trans-unit>
        <trans-unit id="14ce61553a6ba7e71a3b50c4fb7b2cf6948078fb" translate="yes" xml:space="preserve">
          <source>JSON::ParseException#column_number</source>
          <target state="translated">JSON::ParseException#column_number</target>
        </trans-unit>
        <trans-unit id="fd6401ae902008000da859ed79005abc01081a3c" translate="yes" xml:space="preserve">
          <source>JSON::ParseException#line_number</source>
          <target state="translated">JSON::ParseException#line_number</target>
        </trans-unit>
        <trans-unit id="8ebbb48f13498878568266f0ef1b277f28f1ccfe" translate="yes" xml:space="preserve">
          <source>JSON::ParseException#location</source>
          <target state="translated">JSON::ParseException#location</target>
        </trans-unit>
        <trans-unit id="5a2208ef37acaa079038ca9ea777f2ede2c2066b" translate="yes" xml:space="preserve">
          <source>JSON::ParseException.new</source>
          <target state="translated">JSON::ParseException.new</target>
        </trans-unit>
        <trans-unit id="210f49994dc8b74d5f6f6caa864a330c6dce7240" translate="yes" xml:space="preserve">
          <source>JSON::Parser</source>
          <target state="translated">JSON::Parser</target>
        </trans-unit>
        <trans-unit id="dad1aa2e616c4804e9d57f2514a1a45c64dbe51c" translate="yes" xml:space="preserve">
          <source>JSON::PullParser</source>
          <target state="translated">JSON::PullParser</target>
        </trans-unit>
        <trans-unit id="d8d159c81431f75709387ecfc11a68aff2e4b8c0" translate="yes" xml:space="preserve">
          <source>JSON::SerializableError</source>
          <target state="translated">JSON::SerializableError</target>
        </trans-unit>
        <trans-unit id="49957832dc2d365f32502d561e3e415cd7a1ec72" translate="yes" xml:space="preserve">
          <source>JSON::Token</source>
          <target state="translated">JSON::Token</target>
        </trans-unit>
        <trans-unit id="8c74f28d8bf8330962e596574f900ae47e150930" translate="yes" xml:space="preserve">
          <source>Java 11</source>
          <target state="translated">ジャバ11</target>
        </trans-unit>
        <trans-unit id="6965b22569ccbc2d8dd3cf367d9c6b8f37411617" translate="yes" xml:space="preserve">
          <source>Java 6</source>
          <target state="translated">ジャバ6</target>
        </trans-unit>
        <trans-unit id="fbeb77483b6d1b3098e616abf683425d9a32b989" translate="yes" xml:space="preserve">
          <source>Java 8u31</source>
          <target state="translated">Java 8u31</target>
        </trans-unit>
        <trans-unit id="bd72869a330087cfe42486d0e37438efc054165a" translate="yes" xml:space="preserve">
          <source>Just like a class or a struct, you can define methods for enums:</source>
          <target state="translated">クラスや構造体と同じように、列挙型のメソッドを定義することができます。</target>
        </trans-unit>
        <trans-unit id="c76f97582b9cefc13e0faeb17d594f0bfca9056d" translate="yes" xml:space="preserve">
          <source>Just like the other variant, but you can set the initial value of the accumulator.</source>
          <target state="translated">他のバリアントと同じように、アキュムレータの初期値を設定することができます。</target>
        </trans-unit>
        <trans-unit id="f2e13012469b35cc715afa2d86b2f20f71654f16" translate="yes" xml:space="preserve">
          <source>Keeps &lt;em&gt;digits&lt;/em&gt; significant digits of this number in the given &lt;em&gt;base&lt;/em&gt;.</source>
          <target state="translated">続けて&lt;em&gt;数字&lt;/em&gt;与えられた中で、この番号の桁を&lt;em&gt;ベース&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="1f6526cb0b460c5757c8a3173eb88b61dc53862a" translate="yes" xml:space="preserve">
          <source>Keeps &lt;em&gt;digits&lt;/em&gt; significants digits of this number in the given &lt;em&gt;base&lt;/em&gt;.</source>
          <target state="translated">保持&lt;em&gt;桁&lt;/em&gt;所与におけるこの数のsignificants桁&lt;em&gt;ベース&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="dcdc7b1b69ed74ff1eefeeee6ac727cbf6c876e4" translate="yes" xml:space="preserve">
          <source>Key/value</source>
          <target state="translated">Key/value</target>
        </trans-unit>
        <trans-unit id="374e8590be500826c7d343cb59fec0f206c2c523" translate="yes" xml:space="preserve">
          <source>KeyBindingProc</source>
          <target state="translated">KeyBindingProc</target>
        </trans-unit>
        <trans-unit id="74018238351de8a4b5f41ef51f98e3f2c94d5837" translate="yes" xml:space="preserve">
          <source>KeyError</source>
          <target state="translated">KeyError</target>
        </trans-unit>
        <trans-unit id="180d421b2ea3d7832bb9833d631e9be48e49f6c7" translate="yes" xml:space="preserve">
          <source>Keys are matched case-insensitive. String values are treated equal to an array values with the same string as single element.</source>
          <target state="translated">キーは大文字と小文字を区別せずに照合されます。文字列の値は、同じ文字列を単一の要素とする配列の値と同じように扱われます。</target>
        </trans-unit>
        <trans-unit id="ec9534d70e7d02c74e1866ae136e1dcf1d8544f1" translate="yes" xml:space="preserve">
          <source>Keys are read by invoking &lt;code&gt;from_json_object_key?&lt;/code&gt; on this hash's key type (&lt;code&gt;K&lt;/code&gt;), which must return a value of type &lt;code&gt;K&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt;. If &lt;code&gt;nil&lt;/code&gt; is returned a &lt;code&gt;&lt;a href=&quot;json/parseexception&quot;&gt;JSON::ParseException&lt;/a&gt;&lt;/code&gt; is raised.</source>
          <target state="translated">キーは &lt;code&gt;from_json_object_key?&lt;/code&gt; このハッシュのキータイプ（ &lt;code&gt;K&lt;/code&gt; ）。これは、タイプ &lt;code&gt;K&lt;/code&gt; または &lt;code&gt;nil&lt;/code&gt; の値を返す必要があります。 &lt;code&gt;nil&lt;/code&gt; が返された場合、 &lt;code&gt;&lt;a href=&quot;json/parseexception&quot;&gt;JSON::ParseException&lt;/a&gt;&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="9273383ae64df8f1b372db98ea4ba08b59acfdfd" translate="yes" xml:space="preserve">
          <source>Keys are serialized by invoking &lt;code&gt;to_json_object_key&lt;/code&gt; on them. Values are serialized with the usual &lt;code&gt;&lt;a href=&quot;hash#to_json(json:JSON::Builder)-instance-method&quot;&gt;#to_json(json : JSON::Builder)&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="translated">キーは、それら &lt;code&gt;to_json_object_key&lt;/code&gt; を呼び出すことによってシリアル化されます。値は通常の &lt;code&gt;&lt;a href=&quot;hash#to_json(json:JSON::Builder)-instance-method&quot;&gt;#to_json(json : JSON::Builder)&lt;/a&gt;&lt;/code&gt; メソッドでシリアル化されます。</target>
        </trans-unit>
        <trans-unit id="9aa19a4d11de40b1f70b3c8ba4d213213a811bcf" translate="yes" xml:space="preserve">
          <source>Kind#posix?</source>
          <target state="translated">Kind#posix?</target>
        </trans-unit>
        <trans-unit id="c69613af46fdb432e68c2d836af22b13ef5d076b" translate="yes" xml:space="preserve">
          <source>Kind#windows?</source>
          <target state="translated">Kind#windows?</target>
        </trans-unit>
        <trans-unit id="8e81f8da9bf20ac68903b79eb88468c315f82796" translate="yes" xml:space="preserve">
          <source>Kind.native</source>
          <target state="translated">Kind.native</target>
        </trans-unit>
        <trans-unit id="a230d4a66845b14c7d2a6ab825e82549a7f4cacc" translate="yes" xml:space="preserve">
          <source>LLVM</source>
          <target state="translated">LLVM</target>
        </trans-unit>
        <trans-unit id="3af7dc24d98dd6ad5792635bf314908d01227cf0" translate="yes" xml:space="preserve">
          <source>LLVM &amp;gt;= 3.9</source>
          <target state="translated">LLVM&amp;gt; = 3.9</target>
        </trans-unit>
        <trans-unit id="f2abeff0b40a905438fb436921d6fdbd12f6683b" translate="yes" xml:space="preserve">
          <source>LLVM::ABI</source>
          <target state="translated">LLVM::ABI</target>
        </trans-unit>
        <trans-unit id="b766dab78d8a3849c9852bff63fcb4cf9cc0088e" translate="yes" xml:space="preserve">
          <source>LLVM::ABI::AArch64</source>
          <target state="translated">LLVM::ABI::AArch64</target>
        </trans-unit>
        <trans-unit id="2c51725babc80b06ecf0b438efafec38e415c927" translate="yes" xml:space="preserve">
          <source>LLVM::ABI::ARM</source>
          <target state="translated">LLVM::ABI::ARM</target>
        </trans-unit>
        <trans-unit id="efdc65111d34329f104b994fc1fb855f89682195" translate="yes" xml:space="preserve">
          <source>LLVM::ABI::ArgType</source>
          <target state="translated">LLVM::ABI::ArgType</target>
        </trans-unit>
        <trans-unit id="09356d92c80cefad0a6321582019e14f8e01ee55" translate="yes" xml:space="preserve">
          <source>LLVM::ABI::FunctionType</source>
          <target state="translated">LLVM::ABI::FunctionType</target>
        </trans-unit>
        <trans-unit id="4829151c4b849aedaa7a10548809b0ad7b75ce94" translate="yes" xml:space="preserve">
          <source>LLVM::ABI::X86</source>
          <target state="translated">LLVM::ABI::X86</target>
        </trans-unit>
        <trans-unit id="46f25225754920d4a1ea64cf822ea0ef993172c0" translate="yes" xml:space="preserve">
          <source>LLVM::ABI::X86_64</source>
          <target state="translated">LLVM::ABI::X86_64</target>
        </trans-unit>
        <trans-unit id="c8b8c332604094292fcfda0141e288bb75297bb9" translate="yes" xml:space="preserve">
          <source>LLVM::ABI::X86_Win64</source>
          <target state="translated">LLVM::ABI::X86_Win64</target>
        </trans-unit>
        <trans-unit id="ae02234332e344344478a943eab21acf56e4737d" translate="yes" xml:space="preserve">
          <source>LLVM::BasicBlock</source>
          <target state="translated">LLVM::BasicBlock</target>
        </trans-unit>
        <trans-unit id="a29188390719576a8d4f11a342f95e8dbd581966" translate="yes" xml:space="preserve">
          <source>LLVM::BasicBlockCollection</source>
          <target state="translated">LLVM::BasicBlockCollection</target>
        </trans-unit>
        <trans-unit id="bd541bb453e01e94ab2b4ff07cdfa0a07562bb09" translate="yes" xml:space="preserve">
          <source>LLVM::Builder</source>
          <target state="translated">LLVM::Builder</target>
        </trans-unit>
        <trans-unit id="2e8fe2ec04763a3ab9a798d7d4efc79aacdb58d0" translate="yes" xml:space="preserve">
          <source>LLVM::Context</source>
          <target state="translated">LLVM::Context</target>
        </trans-unit>
        <trans-unit id="7fffe33531b85b6f48117e62feddbdf800353410" translate="yes" xml:space="preserve">
          <source>LLVM::DIBuilder</source>
          <target state="translated">LLVM::DIBuilder</target>
        </trans-unit>
        <trans-unit id="2bf548c237a6d5ea0bb18ad43b9b65f9fa894dba" translate="yes" xml:space="preserve">
          <source>LLVM::Function</source>
          <target state="translated">LLVM::Function</target>
        </trans-unit>
        <trans-unit id="6621c84105b48844ec9324cf1fb84fdb37b31190" translate="yes" xml:space="preserve">
          <source>LLVM::FunctionCollection</source>
          <target state="translated">LLVM::FunctionCollection</target>
        </trans-unit>
        <trans-unit id="ed14b6eb0f4552291cb0ab0ebe117da7efb45038" translate="yes" xml:space="preserve">
          <source>LLVM::FunctionPassManager</source>
          <target state="translated">LLVM::FunctionPassManager</target>
        </trans-unit>
        <trans-unit id="28a0fb0a2199587b41a2e1e6f17100d11fd95979" translate="yes" xml:space="preserve">
          <source>LLVM::FunctionPassManager::Runner</source>
          <target state="translated">LLVM::FunctionPassManager::Runner</target>
        </trans-unit>
        <trans-unit id="ac89a453d6b08a7577122c56c9f9f1592e821f44" translate="yes" xml:space="preserve">
          <source>LLVM::GenericValue</source>
          <target state="translated">LLVM::GenericValue</target>
        </trans-unit>
        <trans-unit id="ac3e75248eead55c4202f56ec54495147805cc29" translate="yes" xml:space="preserve">
          <source>LLVM::GlobalCollection</source>
          <target state="translated">LLVM::GlobalCollection</target>
        </trans-unit>
        <trans-unit id="393c3f73ef484e17fde9d3c73cb7b6f6f08266e5" translate="yes" xml:space="preserve">
          <source>LLVM::InstructionCollection</source>
          <target state="translated">LLVM::InstructionCollection</target>
        </trans-unit>
        <trans-unit id="a066b2ca2f3ff68781c61079da5421404dff0a48" translate="yes" xml:space="preserve">
          <source>LLVM::JITCompiler</source>
          <target state="translated">LLVM::JITCompiler</target>
        </trans-unit>
        <trans-unit id="1de3159c833534a9499829fdf0ad3280667eea95" translate="yes" xml:space="preserve">
          <source>LLVM::MemoryBuffer</source>
          <target state="translated">LLVM::MemoryBuffer</target>
        </trans-unit>
        <trans-unit id="86d6674c482f3e330b5ccaaacbd9cf62983fb3ec" translate="yes" xml:space="preserve">
          <source>LLVM::Metadata</source>
          <target state="translated">LLVM::Metadata</target>
        </trans-unit>
        <trans-unit id="aa9270784a5808612d3ec037faabe2038e05ead4" translate="yes" xml:space="preserve">
          <source>LLVM::Module</source>
          <target state="translated">LLVM::Module</target>
        </trans-unit>
        <trans-unit id="ebc82c0d85aba9dbaaa08d405a37edc3162bc171" translate="yes" xml:space="preserve">
          <source>LLVM::ModulePassManager</source>
          <target state="translated">LLVM::ModulePassManager</target>
        </trans-unit>
        <trans-unit id="8b1448363d392bf598bbf97378d8a386bcd04ef4" translate="yes" xml:space="preserve">
          <source>LLVM::OperandBundleDef</source>
          <target state="translated">LLVM::OperandBundleDef</target>
        </trans-unit>
        <trans-unit id="956235bca106eedaf580949906ac9c6f57731208" translate="yes" xml:space="preserve">
          <source>LLVM::ParameterCollection</source>
          <target state="translated">LLVM::ParameterCollection</target>
        </trans-unit>
        <trans-unit id="a1d0bebbe164b8bdd16ced8f7488b3d8c649721a" translate="yes" xml:space="preserve">
          <source>LLVM::PassManagerBuilder</source>
          <target state="translated">LLVM::PassManagerBuilder</target>
        </trans-unit>
        <trans-unit id="20c61b5f2a89714eb0659fe1992bf622f2452967" translate="yes" xml:space="preserve">
          <source>LLVM::PassRegistry</source>
          <target state="translated">LLVM::PassRegistry</target>
        </trans-unit>
        <trans-unit id="4b13ec41e86348fbe7909e8577f197220cf10401" translate="yes" xml:space="preserve">
          <source>LLVM::PhiTable</source>
          <target state="translated">LLVM::PhiTable</target>
        </trans-unit>
        <trans-unit id="e18075df1669f42f9f5effd0a10595cc84567b0c" translate="yes" xml:space="preserve">
          <source>LLVM::Target</source>
          <target state="translated">LLVM::Target</target>
        </trans-unit>
        <trans-unit id="03315d96615d63549abab276ebf6e19e4b7fafa9" translate="yes" xml:space="preserve">
          <source>LLVM::TargetData</source>
          <target state="translated">LLVM::TargetData</target>
        </trans-unit>
        <trans-unit id="43adbe9208215fa82eb0c49d2516c520521f730d" translate="yes" xml:space="preserve">
          <source>LLVM::TargetMachine</source>
          <target state="translated">LLVM::TargetMachine</target>
        </trans-unit>
        <trans-unit id="4435490dc71b864b5f1be05d0c067fa0fa8cc247" translate="yes" xml:space="preserve">
          <source>LLVM::Type</source>
          <target state="translated">LLVM::Type</target>
        </trans-unit>
        <trans-unit id="f0a1fc9564534676203ce56efde2241940a9de04" translate="yes" xml:space="preserve">
          <source>LLVM::Value</source>
          <target state="translated">LLVM::Value</target>
        </trans-unit>
        <trans-unit id="3ac35358baf271447fca4ff816a9dd24f1374708" translate="yes" xml:space="preserve">
          <source>LLVM::ValueMethods</source>
          <target state="translated">LLVM::ValueMethods</target>
        </trans-unit>
        <trans-unit id="1ef711f499820bd0a8a57e7a5c521593ec8ed715" translate="yes" xml:space="preserve">
          <source>Label of the benchmark</source>
          <target state="translated">ベンチマークのラベル</target>
        </trans-unit>
        <trans-unit id="b52e6ec9fa3d5c13a402c0dc8beb63c9192cad04" translate="yes" xml:space="preserve">
          <source>Language Reference</source>
          <target state="translated">言語リファレンス</target>
        </trans-unit>
        <trans-unit id="fd623c775a7a5517ed0d06b451021da5bb73103f" translate="yes" xml:space="preserve">
          <source>Largest finite value</source>
          <target state="translated">最大の有限値</target>
        </trans-unit>
        <trans-unit id="3d4fc789599fd69c0acb9650f814c9bbb7b2b398" translate="yes" xml:space="preserve">
          <source>Last but not least: beware of denial of services! Always protect your application using an external strategy (eg: rate limiting), otherwise endpoints that verifies bcrypt hashes will be an easy target.</source>
          <target state="translated">最後になりましたが、最後になりました:サービス拒否に注意してください! そうでなければ、bcrypt ハッシュを検証するエンドポイントは簡単に標的にされてしまいます。</target>
        </trans-unit>
        <trans-unit id="c51ec4cbdbdfc04b448fdf9ea52e70612175fa0c" translate="yes" xml:space="preserve">
          <source>Lazily parses and returns the request's query component.</source>
          <target state="translated">リクエストのクエリコンポーネントを簡単に解析して返します。</target>
        </trans-unit>
        <trans-unit id="6fd3aa1501cd5cbcf47947cfc545f8ba6fd82061" translate="yes" xml:space="preserve">
          <source>Leading whitespace is removed from the heredoc contents according to the number of whitespace in the last line before the heredoc identifier.</source>
          <target state="translated">先頭の空白は、heredocの識別子の前の最後の行の空白の数に応じてheredocの内容から削除されます。</target>
        </trans-unit>
        <trans-unit id="3bade34ecbc5d996b2f301ebd4ba689e81c7c9ea" translate="yes" xml:space="preserve">
          <source>Length</source>
          <target state="translated">Length</target>
        </trans-unit>
        <trans-unit id="604be9e658978151a811c06511186137964e02f2" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s build a really simple application that shows a string with colors! We will use yellow font on a black background:</source>
          <target state="translated">文字列を色で表示する非常にシンプルなアプリケーションを作成しましょう！黒の背景に黄色のフォントを使用します。</target>
        </trans-unit>
        <trans-unit id="b1d058fa249e338caf30c664e966eee2c2c92504" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s create another application: &lt;em&gt;when passing the option &lt;code&gt;-g&lt;/code&gt; / &lt;code&gt;--goodbye_hello&lt;/code&gt;, the application will say hello to a given name &lt;strong&gt;passed as a parameter to the option&lt;/strong&gt;&lt;/em&gt;.</source>
          <target state="translated">別のアプリケーションを作成しましょう。&lt;em&gt;オプション &lt;code&gt;-g&lt;/code&gt; / &lt;code&gt;--goodbye_hello&lt;/code&gt; を渡すと、アプリケーションは&lt;strong&gt;、オプションにパラメーターとして渡された&lt;/strong&gt;&lt;/em&gt;&lt;em&gt;特定の名前にhelloと言い&lt;/em&gt;&lt;em&gt;&lt;strong&gt;ます&lt;/strong&gt;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="1622dd410d5532fe1eeae972ec43aec4695e36bf" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s start with a simple example. We are going to run the tests &lt;strong&gt;using latest&lt;/strong&gt; Crystal release:</source>
          <target state="translated">簡単な例から始めましょう。&lt;strong&gt;最新の&lt;/strong&gt;Crystalリリース&lt;strong&gt;を使用し&lt;/strong&gt;てテスト&lt;strong&gt;を&lt;/strong&gt;実行します。</target>
        </trans-unit>
        <trans-unit id="4f625305942546e2ad1976517f013c364ab61a77" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s try it!</source>
          <target state="translated">試してみよう！</target>
        </trans-unit>
        <trans-unit id="a7fa6398f3d91bafe115dd0e5e591b33dc24c6a3" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s try the renewed application &amp;hellip; and &lt;em&gt;hear&lt;/em&gt; the difference!! &lt;strong&gt;Now&lt;/strong&gt; we have two fabulous apps!!</source>
          <target state="translated">更新されたアプリケーションを試してみましょう&amp;hellip;そして違いを&lt;em&gt;聞い&lt;/em&gt;てください！&lt;strong&gt;今、&lt;/strong&gt;私たちは2つの素晴らしいアプリを持っています!!</target>
        </trans-unit>
        <trans-unit id="408e839e9d2712d81cc08b2f53b273669290191d" translate="yes" xml:space="preserve">
          <source>Let's build another &lt;em&gt;fabulous&lt;/em&gt; application with the following feature:</source>
          <target state="translated">次の機能を備えた別の&lt;em&gt;すばらしい&lt;/em&gt;アプリケーションを作成しましょう。</target>
        </trans-unit>
        <trans-unit id="123cb4c4e46ae282f59fafcfeae7c6e5cfc15c01" translate="yes" xml:space="preserve">
          <source>Let's compare the times:</source>
          <target state="translated">時代を比較してみましょう。</target>
        </trans-unit>
        <trans-unit id="b35b214690c6e278417152087e344ef62c5df760" translate="yes" xml:space="preserve">
          <source>Let's push these changes. Travis CI will run, and it will install dependencies, but then it will cache the shards cache folder which, usually, is &lt;code&gt;~/.cache/shards&lt;/code&gt;. The following runs will use the cached dependencies.</source>
          <target state="translated">これらの変更をプッシュしましょう。Travis CIが実行され、依存関係がインストールされますが、その後、シャードキャッシュフォルダー（通常は &lt;code&gt;~/.cache/shards&lt;/code&gt; ）がキャッシュされます。次の実行では、キャッシュされた依存関係が使用されます。</target>
        </trans-unit>
        <trans-unit id="518052e02a7f199567a9f23165f7acb990cf3cc4" translate="yes" xml:space="preserve">
          <source>Let's see another example:</source>
          <target state="translated">別の例を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="886d581a78cba947c2d8f7c84814775c5fe3c38f" translate="yes" xml:space="preserve">
          <source>Let's start with two examples to familiarize ourselves with the language.</source>
          <target state="translated">まずは言葉に慣れるために、2つの例を挙げてみましょう。</target>
        </trans-unit>
        <trans-unit id="dfca6ba0d6aef88f69bacf0c4ee92bf19be9af12" translate="yes" xml:space="preserve">
          <source>Let's suppose we want to pin a specific Crystal release (maybe we want to make sure the shard compiles and works with that version) for example &lt;a href=&quot;https://github.com/crystal-lang/crystal/releases/tag/0.31.1&quot;&gt;Crystal 0.31.1&lt;/a&gt;.</source>
          <target state="translated">たとえば、&lt;a href=&quot;https://github.com/crystal-lang/crystal/releases/tag/0.31.1&quot;&gt;Crystal 0.31.1&lt;/a&gt;などの特定のCrystalリリースを固定したいとします（シャードがコンパイルされ、そのバージョンで動作することを確認したい場合があります）。</target>
        </trans-unit>
        <trans-unit id="062f547985ed430e63c9f22185ee751e601f8c9b" translate="yes" xml:space="preserve">
          <source>Let's try it!</source>
          <target state="translated">やってみよう!</target>
        </trans-unit>
        <trans-unit id="87aa8b80dc98b7bb76b6b2e0e83be6b8c0fce3a4" translate="yes" xml:space="preserve">
          <source>Lets make John's pet talk:</source>
          <target state="translated">ジョンのペットの話をしよう</target>
        </trans-unit>
        <trans-unit id="0be58065827c0c55029971feac76d75af08b2cc3" translate="yes" xml:space="preserve">
          <source>Levenshtein</source>
          <target state="translated">Levenshtein</target>
        </trans-unit>
        <trans-unit id="38669da6a5b94f1c84a7088439a90f3944baba7f" translate="yes" xml:space="preserve">
          <source>Levenshtein distance methods.</source>
          <target state="translated">Levenshtein距離法。</target>
        </trans-unit>
        <trans-unit id="46bdb0a040e6326fe99352351cb5a72ae82951e2" translate="yes" xml:space="preserve">
          <source>Levenshtein.find</source>
          <target state="translated">Levenshtein.find</target>
        </trans-unit>
        <trans-unit id="59d3fb39c961676e87e1ad81ac552a3e8624c5d7" translate="yes" xml:space="preserve">
          <source>Levenshtein::Finder</source>
          <target state="translated">Levenshtein::Finder</target>
        </trans-unit>
        <trans-unit id="d71415841f8065930f7d2a88f2d0b4434a4d73d7" translate="yes" xml:space="preserve">
          <source>Levensthein distance methods.</source>
          <target state="translated">Levensthein distance methods.</target>
        </trans-unit>
        <trans-unit id="14f7e7b6ae00ba207bdd95defa89166fdde8de12" translate="yes" xml:space="preserve">
          <source>Lexer#next_token</source>
          <target state="translated">Lexer#next_token</target>
        </trans-unit>
        <trans-unit id="c835f60dfef3e0dc43c16046597c09c589c5df1e" translate="yes" xml:space="preserve">
          <source>Lexer#next_token_expect_object_key</source>
          <target state="translated">Lexer#next_token_expect_object_key</target>
        </trans-unit>
        <trans-unit id="6cdb0913c50d36a5d6113a67ec143018a18fc175" translate="yes" xml:space="preserve">
          <source>Lexer#quote_char</source>
          <target state="translated">Lexer#quote_char</target>
        </trans-unit>
        <trans-unit id="cf569f6d9170e2bfb05155a4c23c46f74a56a886" translate="yes" xml:space="preserve">
          <source>Lexer#rewind</source>
          <target state="translated">Lexer#rewind</target>
        </trans-unit>
        <trans-unit id="33ef6e55f3ac361c61aa7871911d6741a3086852" translate="yes" xml:space="preserve">
          <source>Lexer#separator</source>
          <target state="translated">Lexer#separator</target>
        </trans-unit>
        <trans-unit id="fc5277f79ab983c4a072554a025ec478aaaddbaf" translate="yes" xml:space="preserve">
          <source>Lexer#skip</source>
          <target state="translated">Lexer#skip</target>
        </trans-unit>
        <trans-unit id="e105c6842c2063736af156635ff50582ece60fa0" translate="yes" xml:space="preserve">
          <source>Lexer#skip=</source>
          <target state="translated">Lexer#skip=</target>
        </trans-unit>
        <trans-unit id="a7aaa7b80cfc45d8c6329b93360488b1613ba36b" translate="yes" xml:space="preserve">
          <source>Lexer#token</source>
          <target state="translated">Lexer#token</target>
        </trans-unit>
        <trans-unit id="52df2c0d6f1b1d56be28fd240ab8aa8a54fd27f9" translate="yes" xml:space="preserve">
          <source>Lexer.new</source>
          <target state="translated">Lexer.new</target>
        </trans-unit>
        <trans-unit id="1736d56ad06476934c60a388b3520d14f71bc9ba" translate="yes" xml:space="preserve">
          <source>Library authors are advised to put their definitions inside a module to avoid name clashes. The standard library usually doesn't have a namespace as its types and methods are very common, to avoid writing long names.</source>
          <target state="translated">ライブラリの作者は、名前の衝突を避けるために、定義をモジュールの中に置くことをお勧めします。標準ライブラリは、長い名前を書かないように、型やメソッドが非常に一般的なので、通常は名前空間を持ちません。</target>
        </trans-unit>
        <trans-unit id="7cec90d9a893d7a57df44cadf9f6412918df9f79" translate="yes" xml:space="preserve">
          <source>Libs</source>
          <target state="translated">Libs</target>
        </trans-unit>
        <trans-unit id="ec793eb7fd1d6c9106d97e622f4fcbf89e666960" translate="yes" xml:space="preserve">
          <source>Licensed under the Apache License, Version 2.0.</source>
          <target state="translated">Apache License,Version 2.0の下でライセンスされています。</target>
        </trans-unit>
        <trans-unit id="54fa72fff8a0abd23965a5dcc45d9464bf030997" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;#[Int, &lt;a href=&quot;../int&quot;&gt;Int&lt;/a&gt;]&lt;/code&gt; but returns &lt;code&gt;nil&lt;/code&gt; if the &lt;em&gt;start&lt;/em&gt; index is out of range.</source>
          <target state="translated">&lt;code&gt;#[Int, &lt;a href=&quot;../int&quot;&gt;Int&lt;/a&gt;]&lt;/code&gt; と同様ですが、&lt;em&gt;開始&lt;/em&gt;インデックスが範囲外の場合は &lt;code&gt;nil&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="44afe7367ed61f1a552a96a1289be04e9c6479aa" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;#[Int, &lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;]&lt;/code&gt; but returns &lt;code&gt;nil&lt;/code&gt; if the &lt;em&gt;start&lt;/em&gt; index is out of bounds.</source>
          <target state="translated">&lt;code&gt;#[Int, &lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;]&lt;/code&gt; と同様ですが、&lt;em&gt;開始&lt;/em&gt;インデックスが範囲外の場合は &lt;code&gt;nil&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f8117333c848ceead3cf2ebcb9fc60d67cffa76d" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;#[Int, &lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;]&lt;/code&gt; but returns &lt;code&gt;nil&lt;/code&gt; if the &lt;em&gt;start&lt;/em&gt; index is out of range.</source>
          <target state="translated">&lt;code&gt;#[Int, &lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;]&lt;/code&gt; と似ていますが、&lt;em&gt;開始&lt;/em&gt;インデックスが範囲外の場合は &lt;code&gt;nil&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f2faa49a404924168ec0283364b105bd8c0330c8" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;#[Range(Int, Int)]&lt;/code&gt;, but returns &lt;code&gt;nil&lt;/code&gt; if the range's start is out of range.</source>
          <target state="translated">&lt;code&gt;#[Range(Int, Int)]&lt;/code&gt; と似ていますが、範囲の開始が範囲外の場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="bda170ef2ed29c2b7f3d400075babe7db06bf57d" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;#[Range]&lt;/code&gt;, but returns &lt;code&gt;nil&lt;/code&gt; if the range's start is out of bounds.</source>
          <target state="translated">&lt;code&gt;#[Range]&lt;/code&gt; と同様ですが、範囲の開始が範囲外の場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="b6d1a92ef917cc4e4f7322372edc1cfd3235d919" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;#[Range]&lt;/code&gt;, but returns &lt;code&gt;nil&lt;/code&gt; if the range's start is out of range.</source>
          <target state="translated">&lt;code&gt;#[Range]&lt;/code&gt; と同様ですが、範囲の開始が範囲外の場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="b7b0a77e7fe1e4d57e1280f673c49ca884a7d8aa" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;array#map_with_index(&amp;amp;block:T,Int32-%3EU)forallU-instance-method&quot;&gt;#map_with_index&lt;/a&gt;&lt;/code&gt;, but mutates &lt;code&gt;self&lt;/code&gt; instead of allocating a new object.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;array#map_with_index(&amp;amp;block:T,Int32-%3EU)forallU-instance-method&quot;&gt;#map_with_index&lt;/a&gt;&lt;/code&gt; と似ていますが、新しいオブジェクトを割り当てる代わりに &lt;code&gt;self&lt;/code&gt; を変更します。</target>
        </trans-unit>
        <trans-unit id="e841729e14c4fc4ff91cdb61f9991b82bd98d7c0" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;array#map_with_index(offset=0,&amp;amp;block:T,Int32-%3EU)forallU-instance-method&quot;&gt;#map_with_index&lt;/a&gt;&lt;/code&gt;, but mutates &lt;code&gt;self&lt;/code&gt; instead of allocating a new object.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;array#map_with_index(offset=0,&amp;amp;block:T,Int32-%3EU)forallU-instance-method&quot;&gt;#map_with_index&lt;/a&gt;&lt;/code&gt; と同様ですが、新しいオブジェクトを割り当てる代わりに &lt;code&gt;self&lt;/code&gt; を変更します。</target>
        </trans-unit>
        <trans-unit id="c927c223388c6cc98ad9c6b71f2f162af54bcc3d" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;array#pop(&amp;amp;)-instance-method&quot;&gt;#pop&lt;/a&gt;&lt;/code&gt;, but returns &lt;code&gt;nil&lt;/code&gt; if &lt;code&gt;self&lt;/code&gt; is empty.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;array#pop(&amp;amp;)-instance-method&quot;&gt;#pop&lt;/a&gt;&lt;/code&gt; と同様ですが、 &lt;code&gt;self&lt;/code&gt; が空の場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="346a17ea65928aff9e81a09c1d95b67671239e11" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;array#pop-instance-method&quot;&gt;#pop&lt;/a&gt;&lt;/code&gt;, but returns &lt;code&gt;nil&lt;/code&gt; if &lt;code&gt;self&lt;/code&gt; is empty.</source>
          <target state="translated">同様 &lt;code&gt;&lt;a href=&quot;array#pop-instance-method&quot;&gt;#pop&lt;/a&gt;&lt;/code&gt; が、戻り &lt;code&gt;nil&lt;/code&gt; ならば &lt;code&gt;self&lt;/code&gt; 空です。</target>
        </trans-unit>
        <trans-unit id="7c8cc9372a289d46319628a9617c0da3c012db0a" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;enumerable#map(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#map&lt;/a&gt;&lt;/code&gt;, but the block gets passed both the element and its index.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;enumerable#map(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#map&lt;/a&gt;&lt;/code&gt; と似ていますが、ブロックは要素とそのインデックスの両方を渡されます。</target>
        </trans-unit>
        <trans-unit id="22d4df9a262f8b1fae59a90027c24b2dc6d1d8bc" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;enumerable#max-instance-method&quot;&gt;#max&lt;/a&gt;&lt;/code&gt; but returns &lt;code&gt;nil&lt;/code&gt; if the collection is empty.</source>
          <target state="translated">同様 &lt;code&gt;&lt;a href=&quot;enumerable#max-instance-method&quot;&gt;#max&lt;/a&gt;&lt;/code&gt; しかし戻っ &lt;code&gt;nil&lt;/code&gt; をコレクションが空の場合。</target>
        </trans-unit>
        <trans-unit id="b75abf028c2e38794417e1070ec656a09c94d5eb" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;enumerable#max_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#max_by&lt;/a&gt;&lt;/code&gt; but instead of the element, returns the value returned by the block.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;enumerable#max_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#max_by&lt;/a&gt;&lt;/code&gt; と似ていますが、要素の代わりに、ブロックによって返された値を返します。</target>
        </trans-unit>
        <trans-unit id="c63714128e187f2e2322343d88891641f3f00f23" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;enumerable#max_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#max_by&lt;/a&gt;&lt;/code&gt; but returns &lt;code&gt;nil&lt;/code&gt; if the collection is empty.</source>
          <target state="translated">同様 &lt;code&gt;&lt;a href=&quot;enumerable#max_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#max_by&lt;/a&gt;&lt;/code&gt; しかし戻っ &lt;code&gt;nil&lt;/code&gt; をコレクションが空の場合。</target>
        </trans-unit>
        <trans-unit id="3c86e3406468d6c564bf76ebd45854e71bc7fd0c" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;enumerable#max_of(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#max_of&lt;/a&gt;&lt;/code&gt; but returns &lt;code&gt;nil&lt;/code&gt; if the collection is empty.</source>
          <target state="translated">同様 &lt;code&gt;&lt;a href=&quot;enumerable#max_of(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#max_of&lt;/a&gt;&lt;/code&gt; が、戻り &lt;code&gt;nil&lt;/code&gt; コレクションが空の場合。</target>
        </trans-unit>
        <trans-unit id="e7da451a3d9cabf9666f07d7cb73d6efc4df6953" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;enumerable#min-instance-method&quot;&gt;#min&lt;/a&gt;&lt;/code&gt; but returns &lt;code&gt;nil&lt;/code&gt; if the collection is empty.</source>
          <target state="translated">同様 &lt;code&gt;&lt;a href=&quot;enumerable#min-instance-method&quot;&gt;#min&lt;/a&gt;&lt;/code&gt; しかし戻っ &lt;code&gt;nil&lt;/code&gt; をコレクションが空の場合。</target>
        </trans-unit>
        <trans-unit id="265fb96f4b74ee827b45d8fa453731f3cce961d6" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;enumerable#min_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#min_by&lt;/a&gt;&lt;/code&gt; but instead of the element, returns the value returned by the block.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;enumerable#min_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#min_by&lt;/a&gt;&lt;/code&gt; と似ていますが、要素の代わりに、ブロックによって返された値を返します。</target>
        </trans-unit>
        <trans-unit id="84267a8bca46b3f94996ecb9cd973e3b697ab036" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;enumerable#min_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#min_by&lt;/a&gt;&lt;/code&gt; but returns &lt;code&gt;nil&lt;/code&gt; if the collection is empty.</source>
          <target state="translated">同様 &lt;code&gt;&lt;a href=&quot;enumerable#min_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#min_by&lt;/a&gt;&lt;/code&gt; しかし戻っ &lt;code&gt;nil&lt;/code&gt; をコレクションが空の場合。</target>
        </trans-unit>
        <trans-unit id="5963f7939b92a2a486153c5e028d3675187397f3" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;enumerable#min_of(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#min_of&lt;/a&gt;&lt;/code&gt; but returns &lt;code&gt;nil&lt;/code&gt; if the collection is empty.</source>
          <target state="translated">同様 &lt;code&gt;&lt;a href=&quot;enumerable#min_of(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#min_of&lt;/a&gt;&lt;/code&gt; が、戻り &lt;code&gt;nil&lt;/code&gt; コレクションが空の場合。</target>
        </trans-unit>
        <trans-unit id="e39fb794a9708a0d7d9e6770c8d432ff720df4d2" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;enumerable#minmax-instance-method&quot;&gt;#minmax&lt;/a&gt;&lt;/code&gt; but returns &lt;code&gt;{nil, nil}&lt;/code&gt; if the collection is empty.</source>
          <target state="translated">等 &lt;code&gt;&lt;a href=&quot;enumerable#minmax-instance-method&quot;&gt;#minmax&lt;/a&gt;&lt;/code&gt; しかし戻り &lt;code&gt;{nil, nil}&lt;/code&gt; コレクションが空の場合。</target>
        </trans-unit>
        <trans-unit id="d982ce4ddb66cf7a172a0239c0aaee464fe55339" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;enumerable#minmax_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#minmax_by&lt;/a&gt;&lt;/code&gt; but returns &lt;code&gt;{nil, nil}&lt;/code&gt; if the collection is empty.</source>
          <target state="translated">等 &lt;code&gt;&lt;a href=&quot;enumerable#minmax_by(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#minmax_by&lt;/a&gt;&lt;/code&gt; しかし戻り &lt;code&gt;{nil, nil}&lt;/code&gt; コレクションが空の場合。</target>
        </trans-unit>
        <trans-unit id="0d93b083798cdbaaf8779491b12058b21032e155" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;enumerable#minmax_of(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#minmax_of&lt;/a&gt;&lt;/code&gt; but returns &lt;code&gt;{nil, nil}&lt;/code&gt; if the collection is empty.</source>
          <target state="translated">等 &lt;code&gt;&lt;a href=&quot;enumerable#minmax_of(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#minmax_of&lt;/a&gt;&lt;/code&gt; しかし戻り &lt;code&gt;{nil, nil}&lt;/code&gt; コレクションが空の場合。</target>
        </trans-unit>
        <trans-unit id="f8e9b9dc0bd6353a13f759605d875a2c0f075775" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;fileutils#ln_s(src_path:String,dest_path:String)-instance-method&quot;&gt;#ln_s(String, String)&lt;/a&gt;&lt;/code&gt;, but overwrites &lt;code&gt;dest_path&lt;/code&gt; if it exists and is not a directory or if &lt;code&gt;dest_path/src_path&lt;/code&gt; exists.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;fileutils#ln_s(src_path:String,dest_path:String)-instance-method&quot;&gt;#ln_s(String, String)&lt;/a&gt;&lt;/code&gt; と似ていますが、 &lt;code&gt;dest_path&lt;/code&gt; が存在し、それがディレクトリではない場合、または &lt;code&gt;dest_path/src_path&lt;/code&gt; が存在する場合は上書きします。</target>
        </trans-unit>
        <trans-unit id="ee46604acab34d6c8faea39a27728a4d5518f231" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;pointer#map!(count:Int,&amp;amp;)-instance-method&quot;&gt;#map!&lt;/a&gt;&lt;/code&gt;, but yields 2 arguments, the element and its index</source>
          <target state="translated">同様 &lt;code&gt;&lt;a href=&quot;pointer#map!(count:Int,&amp;amp;)-instance-method&quot;&gt;#map!&lt;/a&gt;&lt;/code&gt; 、ただし、要素とそのインデックスの2つの引数が生成されます</target>
        </trans-unit>
        <trans-unit id="8e94c88068363130679488e131c5abe836a992f2" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;pointer#map!(count:Int,&amp;amp;block)-instance-method&quot;&gt;#map!&lt;/a&gt;&lt;/code&gt;, but yields 2 arguments, the element and its index</source>
          <target state="translated">同様 &lt;code&gt;&lt;a href=&quot;pointer#map!(count:Int,&amp;amp;block)-instance-method&quot;&gt;#map!&lt;/a&gt;&lt;/code&gt; 、ただし要素とそのインデックスの2つの引数が生成されます</target>
        </trans-unit>
        <trans-unit id="76742a7dc4d268e93751bd23e106b23d62ad8377" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;slice#map!(&amp;amp;)-instance-method&quot;&gt;#map!&lt;/a&gt;&lt;/code&gt;, but the block gets passed both the element and its index.</source>
          <target state="translated">同様 &lt;code&gt;&lt;a href=&quot;slice#map!(&amp;amp;)-instance-method&quot;&gt;#map!&lt;/a&gt;&lt;/code&gt; 、ただし、ブロックには要素とそのインデックスの両方が渡されます。</target>
        </trans-unit>
        <trans-unit id="679ed74cfac9efaa8d9335840342ca632499af3a" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;slice#map!(&amp;amp;block)-instance-method&quot;&gt;#map!&lt;/a&gt;&lt;/code&gt;, but the block gets passed both the element and its index.</source>
          <target state="translated">同様 &lt;code&gt;&lt;a href=&quot;slice#map!(&amp;amp;block)-instance-method&quot;&gt;#map!&lt;/a&gt;&lt;/code&gt; 、しかしブロックは要素とそのインデックスの両方を渡されます。</target>
        </trans-unit>
        <trans-unit id="d5e0a16329eda10d56c1a55d48bb407facab7dec" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;slice#map(*,read_only=false,&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#map&lt;/a&gt;&lt;/code&gt;, but the block gets passed both the element and its index.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;slice#map(*,read_only=false,&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#map&lt;/a&gt;&lt;/code&gt; と似ていますが、ブロックは要素とそのインデックスの両方を渡されます。</target>
        </trans-unit>
        <trans-unit id="477a1d1ca9dd0d0d03e48bc78002254a2e8b0e69" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;staticarray#map!(&amp;amp;)-instance-method&quot;&gt;#map!&lt;/a&gt;&lt;/code&gt;, but the block gets passed both the element and its index.</source>
          <target state="translated">同様 &lt;code&gt;&lt;a href=&quot;staticarray#map!(&amp;amp;)-instance-method&quot;&gt;#map!&lt;/a&gt;&lt;/code&gt; 、ただし、ブロックには要素とそのインデックスの両方が渡されます。</target>
        </trans-unit>
        <trans-unit id="8f413abfd5dd5cf833951eb503f2372b65800280" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;staticarray#map!(&amp;amp;block)-instance-method&quot;&gt;#map!&lt;/a&gt;&lt;/code&gt;, but the block gets passed both the element and its index.</source>
          <target state="translated">同様 &lt;code&gt;&lt;a href=&quot;staticarray#map!(&amp;amp;block)-instance-method&quot;&gt;#map!&lt;/a&gt;&lt;/code&gt; 、しかしブロックは要素とそのインデックスの両方を渡されます。</target>
        </trans-unit>
        <trans-unit id="f22bc19984fc88a105b365c1c07008c58bef2c8a" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;staticarray#map(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#map&lt;/a&gt;&lt;/code&gt;, but the block gets passed both the element and its index.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;staticarray#map(&amp;amp;block:T-%3EU)forallU-instance-method&quot;&gt;#map&lt;/a&gt;&lt;/code&gt; と似ていますが、ブロックは要素とそのインデックスの両方を渡されます。</target>
        </trans-unit>
        <trans-unit id="05e8acf23ecc57d88e74777a2ed271fa2028b3ff" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;string#byte_slice(start:Int,count:Int):String-instance-method&quot;&gt;#byte_slice(Int, Int)&lt;/a&gt;&lt;/code&gt; but returns &lt;code&gt;&lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt; if the &lt;em&gt;start&lt;/em&gt; index is out of bounds.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;string#byte_slice(start:Int,count:Int):String-instance-method&quot;&gt;#byte_slice(Int, Int)&lt;/a&gt;&lt;/code&gt; と同様ですが、&lt;em&gt;開始&lt;/em&gt;インデックスが範囲外の場合は &lt;code&gt;&lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="49774c331353bc1b08cf8c2dfd396654754bb8d5" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;tuple#map(&amp;amp;)-instance-method&quot;&gt;#map&lt;/a&gt;&lt;/code&gt;, but the block gets passed both the element and its index.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;tuple#map(&amp;amp;)-instance-method&quot;&gt;#map&lt;/a&gt;&lt;/code&gt; と同様ですが、ブロックには要素とそのインデックスの両方が渡されます。</target>
        </trans-unit>
        <trans-unit id="588e904faa4cc7b928e6a18a5d6ad596701b81a9" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;tuple#map(&amp;amp;block)-instance-method&quot;&gt;#map&lt;/a&gt;&lt;/code&gt;, but the block gets passed both the element and its index.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;tuple#map(&amp;amp;block)-instance-method&quot;&gt;#map&lt;/a&gt;&lt;/code&gt; と似ていますが、ブロックは要素とそのインデックスの両方を渡されます。</target>
        </trans-unit>
        <trans-unit id="1d9505c9bdb28e2e2699dea50b24886a1e28f38c" translate="yes" xml:space="preserve">
          <source>Likewise, other Crystal logic can be implemented in ECR text.</source>
          <target state="translated">同様に、他のCrystalロジックもECRテキストに実装することができます。</target>
        </trans-unit>
        <trans-unit id="cabb5c2ae8384dc97babe35a4e5646126d742bc2" translate="yes" xml:space="preserve">
          <source>Likewise, we can wait for multiple fibers to complete execution, and gather their values:</source>
          <target state="translated">同様に、複数のファイバーが実行を完了するのを待ち、それらの値を収集することができます。</target>
        </trans-unit>
        <trans-unit id="a7c04c64ed3f2a9374590c76c50d3b7f1b18e3da" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="translated">Limitations</target>
        </trans-unit>
        <trans-unit id="61a403a0d61ce05c392e1457e343cdab1eef188e" translate="yes" xml:space="preserve">
          <source>LineControl</source>
          <target state="translated">LineControl</target>
        </trans-unit>
        <trans-unit id="01671b023b88357a5cd9035d0aa06f99fafa1ace" translate="yes" xml:space="preserve">
          <source>LineControl#tciflush?</source>
          <target state="translated">LineControl#tciflush?</target>
        </trans-unit>
        <trans-unit id="d15d0abf77777df5d6cb2ef17032f72dd8111f11" translate="yes" xml:space="preserve">
          <source>LineControl#tcioff?</source>
          <target state="translated">LineControl#tcioff?</target>
        </trans-unit>
        <trans-unit id="1ec01bb1e4054e9ad0891b990d5cacf20547ec72" translate="yes" xml:space="preserve">
          <source>LineControl#tcioflush?</source>
          <target state="translated">LineControl#tcioflush?</target>
        </trans-unit>
        <trans-unit id="e669b8adc37550d524377cb8fdde782b97c2a0a0" translate="yes" xml:space="preserve">
          <source>LineControl#tcion?</source>
          <target state="translated">LineControl#tcion?</target>
        </trans-unit>
        <trans-unit id="7dd3fb3aa57acbb2a1482fd711352899b024b7e7" translate="yes" xml:space="preserve">
          <source>LineControl#tcoflush?</source>
          <target state="translated">LineControl#tcoflush?</target>
        </trans-unit>
        <trans-unit id="83a451847eee38fb54367e03fed6eb4d9d8e81cb" translate="yes" xml:space="preserve">
          <source>LineControl#tcooff?</source>
          <target state="translated">LineControl#tcooff?</target>
        </trans-unit>
        <trans-unit id="6a600cc1290f10606f153ba1cba35e422ca6b594" translate="yes" xml:space="preserve">
          <source>LineControl#tcoon?</source>
          <target state="translated">LineControl#tcoon?</target>
        </trans-unit>
        <trans-unit id="a89adfcc25f87fb64c9b7ba426374d63db16c52b" translate="yes" xml:space="preserve">
          <source>LineControl#tcsadrain?</source>
          <target state="translated">LineControl#tcsadrain?</target>
        </trans-unit>
        <trans-unit id="4967b2cd89fa48573e7579e09a75008261e89dfa" translate="yes" xml:space="preserve">
          <source>LineControl#tcsaflush?</source>
          <target state="translated">LineControl#tcsaflush?</target>
        </trans-unit>
        <trans-unit id="12a0707215ed6cfa7f2eb1f999f13d612a4c1d6e" translate="yes" xml:space="preserve">
          <source>LineControl#tcsanow?</source>
          <target state="translated">LineControl#tcsanow?</target>
        </trans-unit>
        <trans-unit id="d0517071aa376e797705058bbad4b658954b9930" translate="yes" xml:space="preserve">
          <source>Link</source>
          <target state="translated">Link</target>
        </trans-unit>
        <trans-unit id="8a4b04e6aac7c92c0ae4026c56d0dddb791c6efe" translate="yes" xml:space="preserve">
          <source>Link: &lt;a href=&quot;https://gitlab.com/&quot;&gt;https://gitlab.com/&lt;/a&gt;</source>
          <target state="translated">リンク：&lt;a href=&quot;https://gitlab.com/&quot;&gt;https&lt;/a&gt;：//gitlab.com/</target>
        </trans-unit>
        <trans-unit id="0f4ae835289a42cb74ea59363cd9e6f09a1a512f" translate="yes" xml:space="preserve">
          <source>Link: &lt;code&gt;https://&amp;lt;YOUR-GITLAB-USERNAME&amp;gt;.gitlab.io/&amp;lt;YOUR-REPOSITORY-NAME&amp;gt;&lt;/code&gt;</source>
          <target state="translated">リンク： &lt;code&gt;https://&amp;lt;YOUR-GITLAB-USERNAME&amp;gt;.gitlab.io/&amp;lt;YOUR-REPOSITORY-NAME&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ca8902dd2ec3e25499d0b9590167283f45e9f04c" translate="yes" xml:space="preserve">
          <source>Link: &lt;code&gt;https://img.shields.io/badge/release-&amp;lt;VERSION&amp;gt;-brightgreen.svg&lt;/code&gt;</source>
          <target state="translated">リンク： &lt;code&gt;https://img.shields.io/badge/release-&amp;lt;VERSION&amp;gt;-brightgreen.svg&lt;/code&gt; ：//img.shields.io/badge/release- &amp;lt;VERSION&amp;gt; -brightgreen.svg</target>
        </trans-unit>
        <trans-unit id="b27dc31140950c016978fcb4c144b7b2d3cbc47c" translate="yes" xml:space="preserve">
          <source>Linkage</source>
          <target state="translated">Linkage</target>
        </trans-unit>
        <trans-unit id="9f6978db6a02c3bd9083a27790beae1915fd6ef3" translate="yes" xml:space="preserve">
          <source>Linkage#appending?</source>
          <target state="translated">Linkage#appending?</target>
        </trans-unit>
        <trans-unit id="4ba64672a5e076017201728566597ac17fd54451" translate="yes" xml:space="preserve">
          <source>Linkage#available_externally?</source>
          <target state="translated">Linkage#available_externally?</target>
        </trans-unit>
        <trans-unit id="90a2fa7ee198a997071b2392890a723a97e305a6" translate="yes" xml:space="preserve">
          <source>Linkage#common?</source>
          <target state="translated">Linkage#common?</target>
        </trans-unit>
        <trans-unit id="3006cbc963feff09e7b5a650bf224f30b3091103" translate="yes" xml:space="preserve">
          <source>Linkage#dll_export?</source>
          <target state="translated">Linkage#dll_export?</target>
        </trans-unit>
        <trans-unit id="62b54cb737eedabfea9aa113fd287e2b77c5dcae" translate="yes" xml:space="preserve">
          <source>Linkage#dll_import?</source>
          <target state="translated">Linkage#dll_import?</target>
        </trans-unit>
        <trans-unit id="334728d7eeec8101f433b57495f797af225435af" translate="yes" xml:space="preserve">
          <source>Linkage#external?</source>
          <target state="translated">Linkage#external?</target>
        </trans-unit>
        <trans-unit id="abde9e901fc86a258aaae1f41b3cb57fa38c37a7" translate="yes" xml:space="preserve">
          <source>Linkage#external_weak?</source>
          <target state="translated">Linkage#external_weak?</target>
        </trans-unit>
        <trans-unit id="32aa75cd6c18bac2be64ba02bbb9c30640c346a4" translate="yes" xml:space="preserve">
          <source>Linkage#ghost?</source>
          <target state="translated">Linkage#ghost?</target>
        </trans-unit>
        <trans-unit id="04f2bfe4c5533888a6dce31270dcf3f57b594ce4" translate="yes" xml:space="preserve">
          <source>Linkage#internal?</source>
          <target state="translated">Linkage#internal?</target>
        </trans-unit>
        <trans-unit id="536bda20b9e3410ec2fffc2f643b9ad719549206" translate="yes" xml:space="preserve">
          <source>Linkage#link_once_any?</source>
          <target state="translated">Linkage#link_once_any?</target>
        </trans-unit>
        <trans-unit id="fcbf4f2d6f6ef6bc759c73dabcd2dd4deead5fe9" translate="yes" xml:space="preserve">
          <source>Linkage#link_once_odr?</source>
          <target state="translated">Linkage#link_once_odr?</target>
        </trans-unit>
        <trans-unit id="6e0d896a256b365c6c82fbcb72cf1bab6925d7b9" translate="yes" xml:space="preserve">
          <source>Linkage#link_once_odr_auto_hide?</source>
          <target state="translated">Linkage#link_once_odr_auto_hide?</target>
        </trans-unit>
        <trans-unit id="5c598a2d782b8d6d40c9c0bd46e887ddf1daaca6" translate="yes" xml:space="preserve">
          <source>Linkage#linker_private?</source>
          <target state="translated">Linkage#linker_private?</target>
        </trans-unit>
        <trans-unit id="b03d963b8bca52dd6df13e96979bc1aeda3a0eb8" translate="yes" xml:space="preserve">
          <source>Linkage#linker_private_weak?</source>
          <target state="translated">Linkage#linker_private_weak?</target>
        </trans-unit>
        <trans-unit id="b83cc293843c374ecd2af09ed4e1d412d4b03ae2" translate="yes" xml:space="preserve">
          <source>Linkage#private?</source>
          <target state="translated">Linkage#private?</target>
        </trans-unit>
        <trans-unit id="23c9b053b1449798e0bc6f797b957a022718b403" translate="yes" xml:space="preserve">
          <source>Linkage#weak_any?</source>
          <target state="translated">Linkage#weak_any?</target>
        </trans-unit>
        <trans-unit id="afafa064b74e6c5de9630841ba137d0c1a8dd512" translate="yes" xml:space="preserve">
          <source>Linkage#weak_odr?</source>
          <target state="translated">Linkage#weak_odr?</target>
        </trans-unit>
        <trans-unit id="f27f3ca9ba440e3da3e466b92f6aaf945fa47231" translate="yes" xml:space="preserve">
          <source>Linked version of OpenSSL need to be checked for supporting specific protocols and ciphers.</source>
          <target state="translated">リンクされたバージョンのOpenSSLは、特定のプロトコルや暗号をサポートしているかどうかをチェックする必要があります。</target>
        </trans-unit>
        <trans-unit id="c2cf97442cf3a9ce9b907593c9596985a5eb8e1a" translate="yes" xml:space="preserve">
          <source>List of all entries in the benchmark.</source>
          <target state="translated">ベンチマークの全エントリのリスト。</target>
        </trans-unit>
        <trans-unit id="34895b4491fa04f5cbd7fa52cba85581715b73cb" translate="yes" xml:space="preserve">
          <source>List of all entries in the benchmark. After #execute, these are populated with the resulting statistics.</source>
          <target state="translated">ベンチマークの全エントリのリスト。実行後、結果の統計情報が表示されます。</target>
        </trans-unit>
        <trans-unit id="8d9bc0e8b5bf216fbc6c157bd8f8c7a8d35fccc8" translate="yes" xml:space="preserve">
          <source>List of metacharacters that need to be escaped.</source>
          <target state="translated">エスケープが必要なメタキャラクタのリスト。</target>
        </trans-unit>
        <trans-unit id="57eddd9fd848a945b626f0253c30c5d46091a0d7" translate="yes" xml:space="preserve">
          <source>List of operators</source>
          <target state="translated">演算子一覧</target>
        </trans-unit>
        <trans-unit id="a0574842123374ee77707d75a17ad4ec6cf02c75" translate="yes" xml:space="preserve">
          <source>Lists the installed dependencies and their versions.</source>
          <target state="translated">インストールされている依存関係とそのバージョンを一覧表示します。</target>
        </trans-unit>
        <trans-unit id="92e97e035f44f8980e413b0d3167603ea36902ee" translate="yes" xml:space="preserve">
          <source>Literal</source>
          <target state="translated">Literal</target>
        </trans-unit>
        <trans-unit id="c7ba7dcf662374aafe652b03d75cb8f6024519d9" translate="yes" xml:space="preserve">
          <source>Literals</source>
          <target state="translated">Literals</target>
        </trans-unit>
        <trans-unit id="4b75844b8c02eaa032013b906d46bc59d53b7cde" translate="yes" xml:space="preserve">
          <source>Literals: Array</source>
          <target state="translated">リテラル。配列</target>
        </trans-unit>
        <trans-unit id="ea6f077a10141306566bf85447228b2facc2745e" translate="yes" xml:space="preserve">
          <source>Literals: Bool</source>
          <target state="translated">リテラル。ブール</target>
        </trans-unit>
        <trans-unit id="233aba591a8054f6aed4a76a17f96014e9363925" translate="yes" xml:space="preserve">
          <source>Literals: Char</source>
          <target state="translated">リテラルだ シャル</target>
        </trans-unit>
        <trans-unit id="ec246d5ceda6b53e5bbd7a01e09c49b6d56394b4" translate="yes" xml:space="preserve">
          <source>Literals: Command literal</source>
          <target state="translated">リテラル。コマンドリテラル</target>
        </trans-unit>
        <trans-unit id="f5462d6a86a215d6228a11ebd5c02094207825d7" translate="yes" xml:space="preserve">
          <source>Literals: Floats</source>
          <target state="translated">リテラル フロート</target>
        </trans-unit>
        <trans-unit id="3e407d86a37652d1bec6c17459fadce4c84f9d90" translate="yes" xml:space="preserve">
          <source>Literals: Hash</source>
          <target state="translated">リテラル。ハッシュ</target>
        </trans-unit>
        <trans-unit id="3468b69beb08ae542f912c8e20be35188afe56df" translate="yes" xml:space="preserve">
          <source>Literals: Integers</source>
          <target state="translated">リテラル。整数</target>
        </trans-unit>
        <trans-unit id="e4378fab7ac228b7c046d54950d01c015113c04f" translate="yes" xml:space="preserve">
          <source>Literals: NamedTuple</source>
          <target state="translated">リテラル。名前付きタプル</target>
        </trans-unit>
        <trans-unit id="06f90410ceb093a53bee28a654ba7328e871bd52" translate="yes" xml:space="preserve">
          <source>Literals: Nil</source>
          <target state="translated">リテラル。ニル</target>
        </trans-unit>
        <trans-unit id="acf3597238ad593de4a81f196d0bb5458a176c9b" translate="yes" xml:space="preserve">
          <source>Literals: Proc</source>
          <target state="translated">リテラル。プロセッサー</target>
        </trans-unit>
        <trans-unit id="83b59b88264c64eede13fda01936058c9a191487" translate="yes" xml:space="preserve">
          <source>Literals: Range</source>
          <target state="translated">リテラル 範囲</target>
        </trans-unit>
        <trans-unit id="eb4042329aa69a13fe56b13ae92ad96de6c73199" translate="yes" xml:space="preserve">
          <source>Literals: Regular Expressions</source>
          <target state="translated">リテラル。正規表現</target>
        </trans-unit>
        <trans-unit id="f7447e2b76a629aa19420cf7cf46cdff3a5aa8d6" translate="yes" xml:space="preserve">
          <source>Literals: String</source>
          <target state="translated">リテラル。文字列</target>
        </trans-unit>
        <trans-unit id="a706d990e28bb7938655236ac99d224f8d25125b" translate="yes" xml:space="preserve">
          <source>Literals: Symbol</source>
          <target state="translated">文字数:記号</target>
        </trans-unit>
        <trans-unit id="35dc2a3ff5ffac01474f9988568bf390051a8b72" translate="yes" xml:space="preserve">
          <source>Literals: Tuple</source>
          <target state="translated">リテラル。タプル</target>
        </trans-unit>
        <trans-unit id="c8fb56725cdbd2ddef060b1599393c2090a498b1" translate="yes" xml:space="preserve">
          <source>Load the external subset</source>
          <target state="translated">外部サブセットの読み込み</target>
        </trans-unit>
        <trans-unit id="fb340c9d1672c9fe76a09c37a919a87b4c63eb1f" translate="yes" xml:space="preserve">
          <source>Loaded values override previously defined mappings.</source>
          <target state="translated">ロードされた値は、以前に定義されたマッピングを上書きします。</target>
        </trans-unit>
        <trans-unit id="29b2b8dcb12a8ad042e22dd494bf8fbb11691d6a" translate="yes" xml:space="preserve">
          <source>Loading a custom MIME database</source>
          <target state="translated">カスタム MIME データベースのロード</target>
        </trans-unit>
        <trans-unit id="8d4ff695efe04f2448917b199032253d0cad92c0" translate="yes" xml:space="preserve">
          <source>Loads a bcrypt hash.</source>
          <target state="translated">bcryptハッシュを読み込みます。</target>
        </trans-unit>
        <trans-unit id="a1f254c812c1ef585d8615b817ff6acf088bee48" translate="yes" xml:space="preserve">
          <source>Loads the &lt;code&gt;&lt;a href=&quot;location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; with the given &lt;em&gt;name&lt;/em&gt;.</source>
          <target state="translated">指定された&lt;em&gt;名前で&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; をロードします。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="510a1cd62879c3a55e9820ad64d56a80b891eabd" translate="yes" xml:space="preserve">
          <source>Loads the local time zone according to the current application environment.</source>
          <target state="translated">現在のアプリケーション環境に合わせてローカルタイムゾーンを読み込みます。</target>
        </trans-unit>
        <trans-unit id="fabf0703109710fed22f74f958c204133fc85234" translate="yes" xml:space="preserve">
          <source>Local Time Zone</source>
          <target state="translated">現地時間帯</target>
        </trans-unit>
        <trans-unit id="ff5148d6cff2251fbb44fa24ac71e87831f6949a" translate="yes" xml:space="preserve">
          <source>Local Variables</source>
          <target state="translated">局所変数</target>
        </trans-unit>
        <trans-unit id="573faf18825a085ecfb3336ef224bcc2ae1d82cf" translate="yes" xml:space="preserve">
          <source>Local variables</source>
          <target state="translated">ローカル変数</target>
        </trans-unit>
        <trans-unit id="b403f50cd9a5f8f922d2b8e7d70bbb8e764b4257" translate="yes" xml:space="preserve">
          <source>Local variables start with lowercase letters. They are declared when you first assign them a value.</source>
          <target state="translated">ローカル変数は小文字で始まります。これらは、最初に値を代入するときに宣言されます。</target>
        </trans-unit>
        <trans-unit id="478df254596a4a4a51b18fe7c43423e110e9c8b9" translate="yes" xml:space="preserve">
          <source>LocalMode</source>
          <target state="translated">LocalMode</target>
        </trans-unit>
        <trans-unit id="7e3fa59744396db63746e3108cbd3a6f4dd2fede" translate="yes" xml:space="preserve">
          <source>LocalMode#echo?</source>
          <target state="translated">LocalMode#echo?</target>
        </trans-unit>
        <trans-unit id="350765e637400a21652eb657a65366cc093f01ff" translate="yes" xml:space="preserve">
          <source>LocalMode#echoe?</source>
          <target state="translated">LocalMode#echoe?</target>
        </trans-unit>
        <trans-unit id="f0a715cfc66237e24741207791d746b83e921c9d" translate="yes" xml:space="preserve">
          <source>LocalMode#echok?</source>
          <target state="translated">LocalMode#echok?</target>
        </trans-unit>
        <trans-unit id="1d0c47336df662e3f4241bac8054dfb378ec6854" translate="yes" xml:space="preserve">
          <source>LocalMode#echonl?</source>
          <target state="translated">LocalMode#echonl?</target>
        </trans-unit>
        <trans-unit id="c1b0b6ade4df27ae1fbc5c2b98047723b0c248d4" translate="yes" xml:space="preserve">
          <source>LocalMode#icanon?</source>
          <target state="translated">LocalMode#icanon?</target>
        </trans-unit>
        <trans-unit id="fee3ae83eac2380204f752ebb2d573dde232957d" translate="yes" xml:space="preserve">
          <source>LocalMode#iexten?</source>
          <target state="translated">LocalMode#iexten?</target>
        </trans-unit>
        <trans-unit id="64a3ce0eff2d6c1aa71261c83b2172b243fb15ce" translate="yes" xml:space="preserve">
          <source>LocalMode#isig?</source>
          <target state="translated">LocalMode#isig?</target>
        </trans-unit>
        <trans-unit id="7e7df72a29ed9d70ba67db067aae37822c68c5c0" translate="yes" xml:space="preserve">
          <source>LocalMode#noflsh?</source>
          <target state="translated">LocalMode#noflsh?</target>
        </trans-unit>
        <trans-unit id="2d4a72ad2742661bfdb1c9bd1255760aebd4195f" translate="yes" xml:space="preserve">
          <source>LocalMode#none?</source>
          <target state="translated">LocalMode#none?</target>
        </trans-unit>
        <trans-unit id="b61be914f1706cdef098cb8e3a88e6d9f7d425f1" translate="yes" xml:space="preserve">
          <source>LocalMode#tostop?</source>
          <target state="translated">LocalMode#tostop?</target>
        </trans-unit>
        <trans-unit id="d219c68101f532de10add2cf42fb9dbeca73d3be" translate="yes" xml:space="preserve">
          <source>Location</source>
          <target state="translated">Location</target>
        </trans-unit>
        <trans-unit id="2fb7398ae107f4c1237c61593dbbad5d2d6575e3" translate="yes" xml:space="preserve">
          <source>Location#==</source>
          <target state="translated">Location#==</target>
        </trans-unit>
        <trans-unit id="af03bfd94384c2ce585a69894ca66e3aaf7a80b8" translate="yes" xml:space="preserve">
          <source>Location#fixed?</source>
          <target state="translated">Location#fixed?</target>
        </trans-unit>
        <trans-unit id="7a8a0f93b1784fe121d98a416a3ac9dc75d68c0c" translate="yes" xml:space="preserve">
          <source>Location#hash</source>
          <target state="translated">Location#hash</target>
        </trans-unit>
        <trans-unit id="b453917b4c38a93fab61e9a6e661fa90f63afb4f" translate="yes" xml:space="preserve">
          <source>Location#inspect</source>
          <target state="translated">Location#inspect</target>
        </trans-unit>
        <trans-unit id="f53f4bcc39754498a7c355dfae5bf8cc3e0fc12a" translate="yes" xml:space="preserve">
          <source>Location#local?</source>
          <target state="translated">Location#local?</target>
        </trans-unit>
        <trans-unit id="89cf70bf72158e593221d69a19980c610ec0d988" translate="yes" xml:space="preserve">
          <source>Location#lookup</source>
          <target state="translated">Location#lookup</target>
        </trans-unit>
        <trans-unit id="6398908f01346408a5e29b478192c1ce88de93bb" translate="yes" xml:space="preserve">
          <source>Location#name</source>
          <target state="translated">Location#name</target>
        </trans-unit>
        <trans-unit id="c5f7360acf5ee08d1492cfecb479342690cfae48" translate="yes" xml:space="preserve">
          <source>Location#to_s</source>
          <target state="translated">Location#to_s</target>
        </trans-unit>
        <trans-unit id="3c9864f52bbbb76fb010f551a2e301c766c5d4a7" translate="yes" xml:space="preserve">
          <source>Location#utc?</source>
          <target state="translated">Location#utc?</target>
        </trans-unit>
        <trans-unit id="4695794b3d87ca6ab4957046dcb6e84bd1c62fc5" translate="yes" xml:space="preserve">
          <source>Location#zones</source>
          <target state="translated">Location#zones</target>
        </trans-unit>
        <trans-unit id="d035c6e8a9bad42537e3f95ee84ebae90471ecc3" translate="yes" xml:space="preserve">
          <source>Location.fixed</source>
          <target state="translated">Location.fixed</target>
        </trans-unit>
        <trans-unit id="a3c6af7857396d1699705ea585bdd9ebe333150f" translate="yes" xml:space="preserve">
          <source>Location.load</source>
          <target state="translated">Location.load</target>
        </trans-unit>
        <trans-unit id="52a9586a75921e1368162e89a743fb00ed9bb0db" translate="yes" xml:space="preserve">
          <source>Location.load_local</source>
          <target state="translated">Location.load_local</target>
        </trans-unit>
        <trans-unit id="36d48920a4e4797a77aa16e8380cee04944c71d7" translate="yes" xml:space="preserve">
          <source>Location.local</source>
          <target state="translated">Location.local</target>
        </trans-unit>
        <trans-unit id="696bf036ba7ec49a4526cdf748d8afc2f6d8769e" translate="yes" xml:space="preserve">
          <source>Location.local=</source>
          <target state="translated">Location.local=</target>
        </trans-unit>
        <trans-unit id="fe83c8e415ad5c7825489bd4034ae05714cd1357" translate="yes" xml:space="preserve">
          <source>Location::Zone</source>
          <target state="translated">Location::Zone</target>
        </trans-unit>
        <trans-unit id="651c0ed739b8a5d39c9984433cc4a15e3a9655f5" translate="yes" xml:space="preserve">
          <source>Location::Zone#dst?</source>
          <target state="translated">Location::Zone#dst?</target>
        </trans-unit>
        <trans-unit id="debdde49529dc51554ee29f61389e8fabbd63a0c" translate="yes" xml:space="preserve">
          <source>Location::Zone#format</source>
          <target state="translated">Location::Zone#format</target>
        </trans-unit>
        <trans-unit id="2d3daff9c83ff776355db391005591ad921760a4" translate="yes" xml:space="preserve">
          <source>Location::Zone#inspect</source>
          <target state="translated">Location::Zone#inspect</target>
        </trans-unit>
        <trans-unit id="527af66989ccf151067b00252637870147564420" translate="yes" xml:space="preserve">
          <source>Location::Zone#name</source>
          <target state="translated">Location::Zone#name</target>
        </trans-unit>
        <trans-unit id="558c26816bee03e97cdca14ee36cabff465ae74f" translate="yes" xml:space="preserve">
          <source>Location::Zone#offset</source>
          <target state="translated">Location::Zone#offset</target>
        </trans-unit>
        <trans-unit id="91807c20d7f2cde1d96f46ebb3fc1e478ddc003c" translate="yes" xml:space="preserve">
          <source>Location::Zone.new</source>
          <target state="translated">Location::Zone.new</target>
        </trans-unit>
        <trans-unit id="8bf95ea372568c7a254ba9fada5f6f1701ebc5b5" translate="yes" xml:space="preserve">
          <source>Log</source>
          <target state="translated">Log</target>
        </trans-unit>
        <trans-unit id="770c6848b5c828b51fb36e0a5849a8a083473fae" translate="yes" xml:space="preserve">
          <source>Log#for</source>
          <target state="translated">Log#for</target>
        </trans-unit>
        <trans-unit id="db760bd3b495cb8b894dac57cf0cb419e8b98dc7" translate="yes" xml:space="preserve">
          <source>Log#info</source>
          <target state="translated">Log#info</target>
        </trans-unit>
        <trans-unit id="5999ba6b5bbfc933b735cd47192bf28362f3a52d" translate="yes" xml:space="preserve">
          <source>Log#warn</source>
          <target state="translated">Log#warn</target>
        </trans-unit>
        <trans-unit id="6fb3007f69cd63f5895f656dcda8f6948b599765" translate="yes" xml:space="preserve">
          <source>Log.for</source>
          <target state="translated">Log.for</target>
        </trans-unit>
        <trans-unit id="f64cad34b8fc5061b2d804a43fdaa076e8dd8793" translate="yes" xml:space="preserve">
          <source>Log.info</source>
          <target state="translated">Log.info</target>
        </trans-unit>
        <trans-unit id="43c688c2386b1181fc193b76a96a1b48afd167dc" translate="yes" xml:space="preserve">
          <source>Log.warn</source>
          <target state="translated">Log.warn</target>
        </trans-unit>
        <trans-unit id="a154877284cd49920f591bf158e2ee1330e855e5" translate="yes" xml:space="preserve">
          <source>Log::AsyncDispatcher</source>
          <target state="translated">Log::AsyncDispatcher</target>
        </trans-unit>
        <trans-unit id="931d6e554d3edcbd73cd8cf099c441bb0649b144" translate="yes" xml:space="preserve">
          <source>Log::Backend</source>
          <target state="translated">Log::Backend</target>
        </trans-unit>
        <trans-unit id="61b9a6ef613b0b913855e097a04b09b600accbc1" translate="yes" xml:space="preserve">
          <source>Log::BroadcastBackend</source>
          <target state="translated">Log::BroadcastBackend</target>
        </trans-unit>
        <trans-unit id="7fe141f16bf60d05d78691cb1188d634cbe7dbb3" translate="yes" xml:space="preserve">
          <source>Log::Builder</source>
          <target state="translated">Log::Builder</target>
        </trans-unit>
        <trans-unit id="905ab2b3de457d996919a11ea06cb606006bbe21" translate="yes" xml:space="preserve">
          <source>Log::Configuration</source>
          <target state="translated">Log::Configuration</target>
        </trans-unit>
        <trans-unit id="2f574b7e4e8aa23d51fa397aa2d2f40006971f5f" translate="yes" xml:space="preserve">
          <source>Log::Context</source>
          <target state="translated">Log::Context</target>
        </trans-unit>
        <trans-unit id="9e41c970345c081c7acea7f3b2b70dd337f9bf59" translate="yes" xml:space="preserve">
          <source>Log::Dispatcher</source>
          <target state="translated">Log::Dispatcher</target>
        </trans-unit>
        <trans-unit id="7a73e4ab8b2e89e47b1eba748ea86466ca8f303d" translate="yes" xml:space="preserve">
          <source>Log::Emitter</source>
          <target state="translated">Log::Emitter</target>
        </trans-unit>
        <trans-unit id="56b4fa94523b6aa1beed530ac2f6c6d55cb11af3" translate="yes" xml:space="preserve">
          <source>Log::EntriesChecker</source>
          <target state="translated">Log::EntriesChecker</target>
        </trans-unit>
        <trans-unit id="b5844087653d8ba6fabcf6c58cf1ee5cd090fe10" translate="yes" xml:space="preserve">
          <source>Log::Entry</source>
          <target state="translated">Log::Entry</target>
        </trans-unit>
        <trans-unit id="fb7b1bd6e018f49d2f5779fdb54373ddfe3bd7a2" translate="yes" xml:space="preserve">
          <source>Log::Formatter</source>
          <target state="translated">Log::Formatter</target>
        </trans-unit>
        <trans-unit id="78a09ea453867fcfb9123d070aab858a27b2f119" translate="yes" xml:space="preserve">
          <source>Log::IOBackend</source>
          <target state="translated">Log::IOBackend</target>
        </trans-unit>
        <trans-unit id="96cc72dcc8cecf3a9600146a877b5788aef1a223" translate="yes" xml:space="preserve">
          <source>Log::MemoryBackend</source>
          <target state="translated">Log::MemoryBackend</target>
        </trans-unit>
        <trans-unit id="d503d9d7c13790a9bf05989f3e90445e04fe8a19" translate="yes" xml:space="preserve">
          <source>Log::Metadata</source>
          <target state="translated">Log::Metadata</target>
        </trans-unit>
        <trans-unit id="3a6f6770226a49978cf0f33b9e8c2f9146b7cd5a" translate="yes" xml:space="preserve">
          <source>Log::Metadata::Value</source>
          <target state="translated">Log::Metadata::Value</target>
        </trans-unit>
        <trans-unit id="3ed24cf838297d559e4dd48b38494367aa53e6ec" translate="yes" xml:space="preserve">
          <source>Log::ShortFormat</source>
          <target state="translated">Log::ShortFormat</target>
        </trans-unit>
        <trans-unit id="8c74857f69e5cd4952bc7ed2b6c6938c48672f07" translate="yes" xml:space="preserve">
          <source>Log::StaticFormatter</source>
          <target state="translated">Log::StaticFormatter</target>
        </trans-unit>
        <trans-unit id="44e700533439b05a7e6ff9f0b1378da2aecc7778" translate="yes" xml:space="preserve">
          <source>Log::SyncDispatcher</source>
          <target state="translated">Log::SyncDispatcher</target>
        </trans-unit>
        <trans-unit id="bbf273cae05e9e833c2e7b95b5157d9071509d83" translate="yes" xml:space="preserve">
          <source>LogHandler</source>
          <target state="translated">LogHandler</target>
        </trans-unit>
        <trans-unit id="6c7692ed3d6aad1243ba6b87d2e38f55519b7d75" translate="yes" xml:space="preserve">
          <source>LogHandler#call</source>
          <target state="translated">LogHandler#call</target>
        </trans-unit>
        <trans-unit id="d4558647898148b5d8695b9ae975743ce82fbfa8" translate="yes" xml:space="preserve">
          <source>LogHandler.new</source>
          <target state="translated">LogHandler.new</target>
        </trans-unit>
        <trans-unit id="8432c24573f3f89fad60802fe8eddf1da6315768" translate="yes" xml:space="preserve">
          <source>Logger</source>
          <target state="translated">Logger</target>
        </trans-unit>
        <trans-unit id="61cf6db1074ecb354e93079eb8555cbcbda21ff0" translate="yes" xml:space="preserve">
          <source>Logger#info</source>
          <target state="translated">Logger#info</target>
        </trans-unit>
        <trans-unit id="131f8614861c4e80a41a4248ee1b995e91b5289c" translate="yes" xml:space="preserve">
          <source>Logger#log</source>
          <target state="translated">Logger#log</target>
        </trans-unit>
        <trans-unit id="55ff6c4b3565da4f95cda96a0525937d7147965f" translate="yes" xml:space="preserve">
          <source>Logger#warn</source>
          <target state="translated">Logger#warn</target>
        </trans-unit>
        <trans-unit id="4d635d1a5e3cc9b7e5b82d9c42d1fd23f6ba51c4" translate="yes" xml:space="preserve">
          <source>Logger.new</source>
          <target state="translated">Logger.new</target>
        </trans-unit>
        <trans-unit id="122f1700f952290f57d9cb80437f579187bf8842" translate="yes" xml:space="preserve">
          <source>Logical</source>
          <target state="translated">Logical</target>
        </trans-unit>
        <trans-unit id="c5d5c5fb2a8798e4f962780fba63386de96b07b6" translate="yes" xml:space="preserve">
          <source>Logical AND</source>
          <target state="translated">論理 AND</target>
        </trans-unit>
        <trans-unit id="e9b0aefdf7ed2c67abbfc572bbc5743979450674" translate="yes" xml:space="preserve">
          <source>Logical OR</source>
          <target state="translated">論理和</target>
        </trans-unit>
        <trans-unit id="7145d1148d0d2119dde9926f90f3f9643e2ef960" translate="yes" xml:space="preserve">
          <source>Logs &lt;em&gt;message&lt;/em&gt; if &lt;em&gt;severity&lt;/em&gt; is higher or equal with the logger's current severity.</source>
          <target state="translated">&lt;em&gt;重大度&lt;/em&gt;がロガーの現在の重大度以上の場合、&lt;em&gt;メッセージを&lt;/em&gt;ログに記録し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4d8a958ec2385360b17bed9cd1e1aad3c074ee14" translate="yes" xml:space="preserve">
          <source>Logs &lt;em&gt;message&lt;/em&gt; if &lt;em&gt;severity&lt;/em&gt; is higher or equal with the logger's current severity. &lt;em&gt;progname&lt;/em&gt; overrides a default progname set in this logger.</source>
          <target state="translated">&lt;em&gt;重大度&lt;/em&gt;がロガーの現在の重大度以上の場合、&lt;em&gt;メッセージを&lt;/em&gt;ログに記録し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;progname&lt;/em&gt;は、このロガーに設定されているデフォルトの&lt;em&gt;prognameを&lt;/em&gt;オーバーライドします。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="82c52840a5729059cf58e6f23b3bb4aefa42039d" translate="yes" xml:space="preserve">
          <source>Logs &lt;em&gt;message&lt;/em&gt; if the logger's current severity is lower or equal to &lt;code&gt;&lt;a href=&quot;logger#DEBUG&quot;&gt;DEBUG&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ロガーの現在の重大度が &lt;code&gt;&lt;a href=&quot;logger#DEBUG&quot;&gt;DEBUG&lt;/a&gt;&lt;/code&gt; 以下の場合に&lt;em&gt;メッセージを&lt;/em&gt;ログに記録し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="d3082815c63bfb81d2842a53eb068e1af0b0a043" translate="yes" xml:space="preserve">
          <source>Logs &lt;em&gt;message&lt;/em&gt; if the logger's current severity is lower or equal to &lt;code&gt;&lt;a href=&quot;logger#DEBUG&quot;&gt;DEBUG&lt;/a&gt;&lt;/code&gt;. &lt;em&gt;progname&lt;/em&gt; overrides a default progname set in this logger.</source>
          <target state="translated">ロガーの現在の重大度が &lt;code&gt;&lt;a href=&quot;logger#DEBUG&quot;&gt;DEBUG&lt;/a&gt;&lt;/code&gt; 以下の場合に&lt;em&gt;メッセージを&lt;/em&gt;ログに記録し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;progname&lt;/em&gt;は、このロガーに設定されているデフォルトの&lt;em&gt;prognameを&lt;/em&gt;オーバーライドします。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2670ad860e5abf79163b213268e2b044a9ff32f8" translate="yes" xml:space="preserve">
          <source>Logs &lt;em&gt;message&lt;/em&gt; if the logger's current severity is lower or equal to &lt;code&gt;&lt;a href=&quot;logger#ERROR&quot;&gt;ERROR&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ロガーの現在の重大度が &lt;code&gt;&lt;a href=&quot;logger#ERROR&quot;&gt;ERROR&lt;/a&gt;&lt;/code&gt; 以下の場合、&lt;em&gt;メッセージを&lt;/em&gt;ログに記録し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="09481344b874ea7039706729c117c89555437978" translate="yes" xml:space="preserve">
          <source>Logs &lt;em&gt;message&lt;/em&gt; if the logger's current severity is lower or equal to &lt;code&gt;&lt;a href=&quot;logger#ERROR&quot;&gt;ERROR&lt;/a&gt;&lt;/code&gt;. &lt;em&gt;progname&lt;/em&gt; overrides a default progname set in this logger.</source>
          <target state="translated">ロガーの現在の重大度が &lt;code&gt;&lt;a href=&quot;logger#ERROR&quot;&gt;ERROR&lt;/a&gt;&lt;/code&gt; 以下の場合、&lt;em&gt;メッセージを&lt;/em&gt;ログに記録し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;progname&lt;/em&gt;は、このロガーに設定されているデフォルトの&lt;em&gt;prognameを&lt;/em&gt;オーバーライドします。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3a14d54ebd2327d28934e8d478a915b705dee23d" translate="yes" xml:space="preserve">
          <source>Logs &lt;em&gt;message&lt;/em&gt; if the logger's current severity is lower or equal to &lt;code&gt;&lt;a href=&quot;logger#FATAL&quot;&gt;FATAL&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ロガーの現在の重大度が &lt;code&gt;&lt;a href=&quot;logger#FATAL&quot;&gt;FATAL&lt;/a&gt;&lt;/code&gt; 以下の場合に&lt;em&gt;メッセージを&lt;/em&gt;ログに記録し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="47102b3b8a6489920d9440cc3a97fe3a02656791" translate="yes" xml:space="preserve">
          <source>Logs &lt;em&gt;message&lt;/em&gt; if the logger's current severity is lower or equal to &lt;code&gt;&lt;a href=&quot;logger#FATAL&quot;&gt;FATAL&lt;/a&gt;&lt;/code&gt;. &lt;em&gt;progname&lt;/em&gt; overrides a default progname set in this logger.</source>
          <target state="translated">ロガーの現在の重大度が &lt;code&gt;&lt;a href=&quot;logger#FATAL&quot;&gt;FATAL&lt;/a&gt;&lt;/code&gt; 以下の場合に&lt;em&gt;メッセージを&lt;/em&gt;ログに記録し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;progname&lt;/em&gt;は、このロガーに設定されているデフォルトの&lt;em&gt;prognameを&lt;/em&gt;オーバーライドします。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="79513661b3e0427f406a66547fec7d278ad05f61" translate="yes" xml:space="preserve">
          <source>Logs &lt;em&gt;message&lt;/em&gt; if the logger's current severity is lower or equal to &lt;code&gt;&lt;a href=&quot;logger#INFO&quot;&gt;INFO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ロガーの現在の重大度が &lt;code&gt;&lt;a href=&quot;logger#INFO&quot;&gt;INFO&lt;/a&gt;&lt;/code&gt; 以下の場合、&lt;em&gt;メッセージを&lt;/em&gt;ログに記録し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="718abbe660dbcaccb38a2965aa59c950da6ba6f8" translate="yes" xml:space="preserve">
          <source>Logs &lt;em&gt;message&lt;/em&gt; if the logger's current severity is lower or equal to &lt;code&gt;&lt;a href=&quot;logger#INFO&quot;&gt;INFO&lt;/a&gt;&lt;/code&gt;. &lt;em&gt;progname&lt;/em&gt; overrides a default progname set in this logger.</source>
          <target state="translated">ロガーの現在の重大度が &lt;code&gt;&lt;a href=&quot;logger#INFO&quot;&gt;INFO&lt;/a&gt;&lt;/code&gt; 以下の場合、&lt;em&gt;メッセージを&lt;/em&gt;ログに記録し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;progname&lt;/em&gt;は、このロガーに設定されているデフォルトの&lt;em&gt;prognameを&lt;/em&gt;オーバーライドします。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ee33190677ea47dd1b957f95191ab19d9ce38fd7" translate="yes" xml:space="preserve">
          <source>Logs &lt;em&gt;message&lt;/em&gt; if the logger's current severity is lower or equal to &lt;code&gt;&lt;a href=&quot;logger#UNKNOWN&quot;&gt;UNKNOWN&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ロガーの現在の重大度が &lt;code&gt;&lt;a href=&quot;logger#UNKNOWN&quot;&gt;UNKNOWN&lt;/a&gt;&lt;/code&gt; 以下の場合、&lt;em&gt;メッセージを&lt;/em&gt;ログに記録し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="47a1fe61a633a614dac01c439156be1ad4f55f42" translate="yes" xml:space="preserve">
          <source>Logs &lt;em&gt;message&lt;/em&gt; if the logger's current severity is lower or equal to &lt;code&gt;&lt;a href=&quot;logger#UNKNOWN&quot;&gt;UNKNOWN&lt;/a&gt;&lt;/code&gt;. &lt;em&gt;progname&lt;/em&gt; overrides a default progname set in this logger.</source>
          <target state="translated">ロガーの現在の重大度が &lt;code&gt;&lt;a href=&quot;logger#UNKNOWN&quot;&gt;UNKNOWN&lt;/a&gt;&lt;/code&gt; 以下の場合、&lt;em&gt;メッセージを&lt;/em&gt;ログに記録し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;progname&lt;/em&gt;は、このロガーに設定されているデフォルトの&lt;em&gt;prognameを&lt;/em&gt;オーバーライドします。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
