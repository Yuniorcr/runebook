<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="crystal">
    <body>
      <group id="crystal">
        <trans-unit id="e967866007e83dd722d7f399bb22b3d73b115b29" translate="yes" xml:space="preserve">
          <source>Token#type</source>
          <target state="translated">Token#type</target>
        </trans-unit>
        <trans-unit id="0cca11231e4aae6fdb9208f5155bfe548d1d4c49" translate="yes" xml:space="preserve">
          <source>Token#value</source>
          <target state="translated">Token#value</target>
        </trans-unit>
        <trans-unit id="3e213d1ad9eaf396e0063d04d53364a45e1a7e59" translate="yes" xml:space="preserve">
          <source>Token#value=</source>
          <target state="translated">Token#value=</target>
        </trans-unit>
        <trans-unit id="79aa63524071d6f0f823efe02ddada725d91d487" translate="yes" xml:space="preserve">
          <source>Token.new</source>
          <target state="translated">Token.new</target>
        </trans-unit>
        <trans-unit id="1293bf23ef24e04fa5c2c767e67f480ffa2970c4" translate="yes" xml:space="preserve">
          <source>Token::Kind</source>
          <target state="translated">Token::Kind</target>
        </trans-unit>
        <trans-unit id="8a9df1737e14bed611821c5c6a7bb49e08881c86" translate="yes" xml:space="preserve">
          <source>Token::Kind#begin_array?</source>
          <target state="translated">Token::Kind#begin_array?</target>
        </trans-unit>
        <trans-unit id="8ce0a3ad70273e4cbae5d86b667ce7ddc8e3f912" translate="yes" xml:space="preserve">
          <source>Token::Kind#begin_object?</source>
          <target state="translated">Token::Kind#begin_object?</target>
        </trans-unit>
        <trans-unit id="36ff623509700df57fba8e5f79a74ebad6766755" translate="yes" xml:space="preserve">
          <source>Token::Kind#cell?</source>
          <target state="translated">Token::Kind#cell?</target>
        </trans-unit>
        <trans-unit id="78f78e6b5d965aaeb9a40d049f48a0707a191421" translate="yes" xml:space="preserve">
          <source>Token::Kind#colon?</source>
          <target state="translated">Token::Kind#colon?</target>
        </trans-unit>
        <trans-unit id="d4d08b1ea2df2d60ed242748d9df8edcb9e99501" translate="yes" xml:space="preserve">
          <source>Token::Kind#comma?</source>
          <target state="translated">Token::Kind#comma?</target>
        </trans-unit>
        <trans-unit id="7e1bb779501a45a67fa9a1460f45f7e90cd2b77b" translate="yes" xml:space="preserve">
          <source>Token::Kind#end_array?</source>
          <target state="translated">Token::Kind#end_array?</target>
        </trans-unit>
        <trans-unit id="611fc5ca01384d55e5a020093af3ca146da76c08" translate="yes" xml:space="preserve">
          <source>Token::Kind#end_object?</source>
          <target state="translated">Token::Kind#end_object?</target>
        </trans-unit>
        <trans-unit id="48fb6d2269dabee0fe90e8775be6845c4a6b7355" translate="yes" xml:space="preserve">
          <source>Token::Kind#eof?</source>
          <target state="translated">Token::Kind#eof?</target>
        </trans-unit>
        <trans-unit id="944db045166ec019417239fd43bd95e283c65f21" translate="yes" xml:space="preserve">
          <source>Token::Kind#false?</source>
          <target state="translated">Token::Kind#false?</target>
        </trans-unit>
        <trans-unit id="9f4155fa8527f8bec9397f598cd6f3602ab3051b" translate="yes" xml:space="preserve">
          <source>Token::Kind#float?</source>
          <target state="translated">Token::Kind#float?</target>
        </trans-unit>
        <trans-unit id="a0aa0b867edf8dca2daf05da4e43e50effc68dcc" translate="yes" xml:space="preserve">
          <source>Token::Kind#int?</source>
          <target state="translated">Token::Kind#int?</target>
        </trans-unit>
        <trans-unit id="a3e39dcfc2c8a5ef00385dc40b681e4c0df8ffb7" translate="yes" xml:space="preserve">
          <source>Token::Kind#newline?</source>
          <target state="translated">Token::Kind#newline?</target>
        </trans-unit>
        <trans-unit id="87efb5ddec5fd77d8624c7853b00a2c6f45d8a15" translate="yes" xml:space="preserve">
          <source>Token::Kind#null?</source>
          <target state="translated">Token::Kind#null?</target>
        </trans-unit>
        <trans-unit id="6b8ce8d201ded9e6586fdf708d3db90aceeb0a73" translate="yes" xml:space="preserve">
          <source>Token::Kind#string?</source>
          <target state="translated">Token::Kind#string?</target>
        </trans-unit>
        <trans-unit id="84814a93b8737ad0c89eb3a7316f096f83cdc6f9" translate="yes" xml:space="preserve">
          <source>Token::Kind#true?</source>
          <target state="translated">Token::Kind#true?</target>
        </trans-unit>
        <trans-unit id="ac1a3f17be132231992609f745b8e71046a0d818" translate="yes" xml:space="preserve">
          <source>Too many levels of remote in path</source>
          <target state="translated">パスのリモートのレベルが高すぎる</target>
        </trans-unit>
        <trans-unit id="2e0d2eef3cc8719301cd02a8aeecb9e956e88cf1" translate="yes" xml:space="preserve">
          <source>Too many levels of symbolic links</source>
          <target state="translated">シンボリックリンクのレベルが高すぎる</target>
        </trans-unit>
        <trans-unit id="4113b4c9ebd053469430304ab17dc16ea1d01df9" translate="yes" xml:space="preserve">
          <source>Too many links</source>
          <target state="translated">リンクが多すぎる</target>
        </trans-unit>
        <trans-unit id="c8452b0c049e050b8a8d8e298315154b410bb14f" translate="yes" xml:space="preserve">
          <source>Too many open files</source>
          <target state="translated">開いているファイルが多すぎる</target>
        </trans-unit>
        <trans-unit id="417e34e2aa5093ac47926281cd6f8fd908eaf673" translate="yes" xml:space="preserve">
          <source>Too many open files in system</source>
          <target state="translated">システムで開いているファイルが多すぎる</target>
        </trans-unit>
        <trans-unit id="282e2b703da2ac14021b09f04b30fd7f814e033a" translate="yes" xml:space="preserve">
          <source>Too many references: can't splice</source>
          <target state="translated">参照先が多すぎる:スプライスできない</target>
        </trans-unit>
        <trans-unit id="21b53b1f02559d44a4e57d2971766159ebf6282f" translate="yes" xml:space="preserve">
          <source>Too many users</source>
          <target state="translated">ユーザーが多すぎる</target>
        </trans-unit>
        <trans-unit id="7385935aabe6125e8b99fb2e65fcc07ed1c1c515" translate="yes" xml:space="preserve">
          <source>Top Level Namespace</source>
          <target state="translated">トップレベルの名前空間</target>
        </trans-unit>
        <trans-unit id="ccdd98e2a34ced0a55822961d427463b5d0f93a8" translate="yes" xml:space="preserve">
          <source>Total time, that is utime + stime + cutime + cstime</source>
          <target state="translated">トータルタイム、つまり utime+stime+cutime+cstime です。</target>
        </trans-unit>
        <trans-unit id="0218a80c98589360ba5ac7757f0c2883080fe242" translate="yes" xml:space="preserve">
          <source>Trailing zeros are omitted if &lt;em&gt;only_significant&lt;/em&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;only_significant&lt;/em&gt;が &lt;code&gt;true&lt;/code&gt; の場合、&lt;em&gt;末尾の&lt;/em&gt;ゼロは省略されます。</target>
        </trans-unit>
        <trans-unit id="1e3281a962e6db2e54e787f796eb7d2b1582389a" translate="yes" xml:space="preserve">
          <source>Transactions</source>
          <target state="translated">Transactions</target>
        </trans-unit>
        <trans-unit id="abc6595069886ccbf51180b5b603a92ea6e60ef9" translate="yes" xml:space="preserve">
          <source>Traverses the depth of a structure and returns the value, otherwise raises &lt;code&gt;&lt;a href=&quot;indexerror&quot;&gt;IndexError&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">構造の深さを &lt;code&gt;&lt;a href=&quot;indexerror&quot;&gt;IndexError&lt;/a&gt;&lt;/code&gt; て値を返します。それ以外の場合はIndexErrorを発生させます。</target>
        </trans-unit>
        <trans-unit id="ac1f2a14f5e91615fd0eb5a0fdbb66aebab6f9e2" translate="yes" xml:space="preserve">
          <source>Traverses the depth of a structure and returns the value, otherwise raises &lt;code&gt;&lt;a href=&quot;keyerror&quot;&gt;KeyError&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">構造の深さを &lt;code&gt;&lt;a href=&quot;keyerror&quot;&gt;KeyError&lt;/a&gt;&lt;/code&gt; て値を返します。それ以外の場合はKeyErrorを発生させます。</target>
        </trans-unit>
        <trans-unit id="1bde3d3267a22901990828c6eb889c56e903a986" translate="yes" xml:space="preserve">
          <source>Traverses the depth of a structure and returns the value, otherwise raises.</source>
          <target state="translated">構造体の深さをトラバースして値を返します。</target>
        </trans-unit>
        <trans-unit id="b29414c314b430b56df8b5984d8c9c5cdd23e9d5" translate="yes" xml:space="preserve">
          <source>Traverses the depth of a structure and returns the value.</source>
          <target state="translated">構造体の深さをトラバースして値を返します。</target>
        </trans-unit>
        <trans-unit id="919d796f73d780d626472e9c1f88248da0e0fb1a" translate="yes" xml:space="preserve">
          <source>Traverses the depth of a structure and returns the value. Returns &lt;code&gt;nil&lt;/code&gt; if not found.</source>
          <target state="translated">構造の深さをトラバースし、値を返します。見つからない場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="89e581f1b56f0e9ddaa6c57b46dc7d03c4f48a4d" translate="yes" xml:space="preserve">
          <source>Travis CI</source>
          <target state="translated">トラビスCI</target>
        </trans-unit>
        <trans-unit id="c63ef586b71d83f279de2f1c57d74edd71ef40c0" translate="yes" xml:space="preserve">
          <source>Travis CI &lt;a href=&quot;https://docs.travis-ci.com/user/caching/&quot;&gt;uses caching&lt;/a&gt; to improve some parts of the building path. Here is the new configuration file &lt;strong&gt;with cache enabled&lt;/strong&gt;:</source>
          <target state="translated">Travis CI&lt;a href=&quot;https://docs.travis-ci.com/user/caching/&quot;&gt;は、キャッシュ&lt;/a&gt;を使用して、構築パスの一部を改善します。&lt;strong&gt;キャッシュが有効になって&lt;/strong&gt;いる新しい構成ファイル&lt;strong&gt;は&lt;/strong&gt;次のとおりです。</target>
        </trans-unit>
        <trans-unit id="b99042b44e7391a6b0defadada50f0b6201bdf41" translate="yes" xml:space="preserve">
          <source>Travis CI and &lt;code&gt;.travis.yml&lt;/code&gt;</source>
          <target state="translated">Travis CIおよび &lt;code&gt;.travis.yml&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c6521b462891693cb26d8d712c2445850c077b35" translate="yes" xml:space="preserve">
          <source>Travis CI may start &lt;a href=&quot;https://docs.travis-ci.com/user/database-setup/&quot;&gt;services&lt;/a&gt; as requested.</source>
          <target state="translated">Travis CIは、要求に応じて&lt;a href=&quot;https://docs.travis-ci.com/user/database-setup/&quot;&gt;サービス&lt;/a&gt;を開始できます。</target>
        </trans-unit>
        <trans-unit id="d6397e566e68a62678ac6c5aecc84ba23b97f9dd" translate="yes" xml:space="preserve">
          <source>Travis CI only provides &lt;em&gt;runners&lt;/em&gt; to &lt;code&gt;latest&lt;/code&gt; and &lt;code&gt;nightly&lt;/code&gt; releases directly and so, we need to install the requested Crystal release manually. For this we are going to use &lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt;.</source>
          <target state="translated">トラヴィスCIは、提供するだけで&lt;em&gt;ランナー&lt;/em&gt;に &lt;code&gt;latest&lt;/code&gt; と &lt;code&gt;nightly&lt;/code&gt; 直接リリースをので、私たちは手動で要求されたクリスタルのリリースをインストールする必要があります。このために、&lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="dd87295302bd319fadfea95972e799cb48e9c4f4" translate="yes" xml:space="preserve">
          <source>Tries to bind the socket to a local address.</source>
          <target state="translated">ソケットをローカルアドレスにバインドしようとします。</target>
        </trans-unit>
        <trans-unit id="0981beef07505f2072a89247290b8739810c1570" translate="yes" xml:space="preserve">
          <source>Tries to bind the socket to a local address. Yields an &lt;code&gt;&lt;a href=&quot;errno&quot;&gt;Errno&lt;/a&gt;&lt;/code&gt; if the binding failed.</source>
          <target state="translated">ソケットをローカルアドレスにバインドしようとします。バインドが失敗した場合、 &lt;code&gt;&lt;a href=&quot;errno&quot;&gt;Errno&lt;/a&gt;&lt;/code&gt; を生成します。</target>
        </trans-unit>
        <trans-unit id="72b484638c124da821744ff789b992b29ca5f03a" translate="yes" xml:space="preserve">
          <source>Tries to change the size of the allocation pointed to by this pointer to &lt;em&gt;size&lt;/em&gt;, and returns that pointer.</source>
          <target state="translated">割り当てのサイズを変更しようとは、このポインタによって指さ&lt;em&gt;サイズ&lt;/em&gt;、および戻りそのポインタ。</target>
        </trans-unit>
        <trans-unit id="955e90eb1946abc8ec8e6910b54428fab53277a7" translate="yes" xml:space="preserve">
          <source>Tries to connect to a remote address.</source>
          <target state="translated">リモートアドレスへの接続を試みます。</target>
        </trans-unit>
        <trans-unit id="bef0ffffe0b0091e0b43d0413ff4ec3a598b1437" translate="yes" xml:space="preserve">
          <source>Tries to connect to a remote address. Yields an &lt;code&gt;&lt;a href=&quot;io/timeout&quot;&gt;IO::Timeout&lt;/a&gt;&lt;/code&gt; or an &lt;code&gt;&lt;a href=&quot;errno&quot;&gt;Errno&lt;/a&gt;&lt;/code&gt; error if the connection failed.</source>
          <target state="translated">リモートアドレスへの接続を試みます。接続が失敗した場合、 &lt;code&gt;&lt;a href=&quot;io/timeout&quot;&gt;IO::Timeout&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;errno&quot;&gt;Errno&lt;/a&gt;&lt;/code&gt; エラーを生成します。</target>
        </trans-unit>
        <trans-unit id="8c901c0a219682abc1cf005485caa013730152db" translate="yes" xml:space="preserve">
          <source>Tries to connect to a remote address. Yields an &lt;code&gt;&lt;a href=&quot;io/timeouterror&quot;&gt;IO::TimeoutError&lt;/a&gt;&lt;/code&gt; or an &lt;code&gt;&lt;a href=&quot;socket/connecterror&quot;&gt;Socket::ConnectError&lt;/a&gt;&lt;/code&gt; error if the connection failed.</source>
          <target state="translated">リモートアドレスへの接続を試みます。接続が失敗した場合、 &lt;code&gt;&lt;a href=&quot;io/timeouterror&quot;&gt;IO::TimeoutError&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;socket/connecterror&quot;&gt;Socket::ConnectError&lt;/a&gt;&lt;/code&gt; エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="0946d1944e1c285d81afe9e6edee621bdffab9f7" translate="yes" xml:space="preserve">
          <source>Tries to listen for connections on the previously bound socket.</source>
          <target state="translated">以前にバインドされたソケットでの接続をリッスンしようとします。</target>
        </trans-unit>
        <trans-unit id="31766155333d92de24fe197f8192ac22523d0b9d" translate="yes" xml:space="preserve">
          <source>Tries to listen for connections on the previously bound socket. Yields an &lt;code&gt;&lt;a href=&quot;errno&quot;&gt;Errno&lt;/a&gt;&lt;/code&gt; on failure.</source>
          <target state="translated">以前にバインドされたソケットで接続の待機を試みます。失敗すると &lt;code&gt;&lt;a href=&quot;errno&quot;&gt;Errno&lt;/a&gt;&lt;/code&gt; を生成します。</target>
        </trans-unit>
        <trans-unit id="f4227e42c0280ab248feedf8d7f4cfd443630832" translate="yes" xml:space="preserve">
          <source>Tries to listen for connections on the previously bound socket. Yields an &lt;code&gt;&lt;a href=&quot;socket/error&quot;&gt;Socket::Error&lt;/a&gt;&lt;/code&gt; on failure.</source>
          <target state="translated">以前にバインドされたソケットで接続をリッスンしようとします。失敗すると &lt;code&gt;&lt;a href=&quot;socket/error&quot;&gt;Socket::Error&lt;/a&gt;&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="e2e37e1047d1d8a1b1b55bcb1fcf3ec93787cdb7" translate="yes" xml:space="preserve">
          <source>Tries to match with &lt;em&gt;pattern&lt;/em&gt; at the current position.</source>
          <target state="translated">現在の位置で&lt;em&gt;パターン&lt;/em&gt;との一致を試みます。</target>
        </trans-unit>
        <trans-unit id="54b8fe310750b609ca9e3c5b4e6346314f885b3a" translate="yes" xml:space="preserve">
          <source>Tries to match with &lt;em&gt;pattern&lt;/em&gt; at the current position. If there's a match, the scanner advances the scan offset, the last match is saved, and it returns the matched string. Otherwise, the scanner returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">現在の位置で&lt;em&gt;パターン&lt;/em&gt;との一致を試みます。一致がある場合、スキャナーはスキャンオフセットを進め、最後の一致を保存して、一致した文字列を返します。それ以外の場合、スキャナーは &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="cc6b47ae6c8fba7e495458bb9a710f09bf601b13" translate="yes" xml:space="preserve">
          <source>Tries to read an alias from &lt;code&gt;node&lt;/code&gt; of type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">タイプ &lt;code&gt;T&lt;/code&gt; の &lt;code&gt;node&lt;/code&gt; からエイリアスを読み取ろうとします。</target>
        </trans-unit>
        <trans-unit id="8104be14d56f1684daf010c1e14f98828123c3e8" translate="yes" xml:space="preserve">
          <source>Tries to read an alias from &lt;code&gt;node&lt;/code&gt; of type &lt;code&gt;T&lt;/code&gt;. Invokes the block if successful, and invokers must return this object instead of deserializing their members.</source>
          <target state="translated">タイプ &lt;code&gt;T&lt;/code&gt; の &lt;code&gt;node&lt;/code&gt; からエイリアスを読み取ろうとします。成功した場合はブロックを呼び出します。呼び出し側は、メンバーを逆シリアル化する代わりにこのオブジェクトを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="2af896f5cde03437fc5713b172787926b02c255a" translate="yes" xml:space="preserve">
          <source>Tries to read exactly &lt;code&gt;slice.size&lt;/code&gt; bytes from this &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; into &lt;em&gt;slice&lt;/em&gt;.</source>
          <target state="translated">この &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; から &lt;code&gt;slice.size&lt;/code&gt; バイトを&lt;em&gt;スライスに&lt;/em&gt;正確に読み取ろうとし&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d5695559484bdf04eeceac7f24deb4afc4dfae30" translate="yes" xml:space="preserve">
          <source>Tries to read exactly &lt;code&gt;slice.size&lt;/code&gt; bytes from this &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; into &lt;em&gt;slice&lt;/em&gt;. Raises &lt;code&gt;&lt;a href=&quot;io/eoferror&quot;&gt;EOFError&lt;/a&gt;&lt;/code&gt; if there aren't &lt;code&gt;slice.size&lt;/code&gt; bytes of data.</source>
          <target state="translated">この &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; から &lt;code&gt;slice.size&lt;/code&gt; バイトを&lt;em&gt;スライスに&lt;/em&gt;正確に読み取ろうとし&lt;em&gt;ます&lt;/em&gt;。発生させ &lt;code&gt;&lt;a href=&quot;io/eoferror&quot;&gt;EOFError&lt;/a&gt;&lt;/code&gt; 存在しない場合 &lt;code&gt;slice.size&lt;/code&gt; データのバイトが。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6af2e3fab3d8a40c85b9f4b178ed9ac4f04fcef9" translate="yes" xml:space="preserve">
          <source>Tries to read exactly &lt;code&gt;slice.size&lt;/code&gt; bytes from this &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; into &lt;em&gt;slice&lt;/em&gt;. Returns &lt;code&gt;nil&lt;/code&gt; if there aren't &lt;code&gt;slice.size&lt;/code&gt; bytes of data, otherwise returns the number of bytes read.</source>
          <target state="translated">この &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; から &lt;code&gt;slice.size&lt;/code&gt; バイトを&lt;em&gt;スライスに&lt;/em&gt;正確に読み取ろうとし&lt;em&gt;ます&lt;/em&gt;。データの &lt;code&gt;slice.size&lt;/code&gt; バイトがない場合は &lt;code&gt;nil&lt;/code&gt; を返し、それ以外の場合は読み取られたバイト数を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5f219c8374282246576fd543ea2493462bf75487" translate="yes" xml:space="preserve">
          <source>Troubleshooting on OSX 10.11 (El Capitan)</source>
          <target state="translated">OSX 10.11(El Capitan)でのトラブルシューティング</target>
        </trans-unit>
        <trans-unit id="5ce60aa4eff6f7e98c3b9dd356b516b45ccf87b3" translate="yes" xml:space="preserve">
          <source>Troubleshooting on macOS MacOS 10.14.2 (Mojave)</source>
          <target state="translated">macOS MacOS 10.14.2 (Mojave)でのトラブルシューティング</target>
        </trans-unit>
        <trans-unit id="7b7c12103ea3ac5509d3984bcd2ae609cf9c947d" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;&lt;a href=&quot;parser#next(&amp;amp;)-instance-method&quot;&gt;#next&lt;/a&gt;&lt;/code&gt; can be called legally.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;parser#next(&amp;amp;)-instance-method&quot;&gt;#next&lt;/a&gt;&lt;/code&gt; を合法的に呼び出すことができる場合はTrue 。</target>
        </trans-unit>
        <trans-unit id="062c0166b43a14d41e7d7ea05d1bb211a724ea70" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;&lt;a href=&quot;parser#next(&amp;amp;block)-instance-method&quot;&gt;#next&lt;/a&gt;&lt;/code&gt; can be called legally.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;parser#next(&amp;amp;block)-instance-method&quot;&gt;#next&lt;/a&gt;&lt;/code&gt; を合法的に呼び出すことができる場合はtrue。</target>
        </trans-unit>
        <trans-unit id="eb0801f86a19c09e96d299a0a32aec772dca2a57" translate="yes" xml:space="preserve">
          <source>Truncates the file to the specified &lt;em&gt;size&lt;/em&gt;.</source>
          <target state="translated">ファイルを指定&lt;em&gt;さ&lt;/em&gt;れた&lt;em&gt;サイズに&lt;/em&gt;切り捨てます。</target>
        </trans-unit>
        <trans-unit id="d21319b8bd458e65141b69abff82047b9dc40ed9" translate="yes" xml:space="preserve">
          <source>Truncates the file to the specified &lt;em&gt;size&lt;/em&gt;. Requires that the current file is opened for writing.</source>
          <target state="translated">ファイルを指定&lt;em&gt;さ&lt;/em&gt;れた&lt;em&gt;サイズに&lt;/em&gt;切り捨てます。現在のファイルが書き込み用に開かれている必要があります。</target>
        </trans-unit>
        <trans-unit id="9a02428b2ce5edfe4a952ba3e66ede7b538c678d" translate="yes" xml:space="preserve">
          <source>Truthiness</source>
          <target state="translated">Truthiness</target>
        </trans-unit>
        <trans-unit id="9480a08d6217458ab374f2324a5b3788014da2b6" translate="yes" xml:space="preserve">
          <source>Truthy and falsey values</source>
          <target state="translated">真実の価値観と偽りの価値観</target>
        </trans-unit>
        <trans-unit id="c4296d5cacea78b4c8d0f3b89f49546d745186f0" translate="yes" xml:space="preserve">
          <source>Try it online</source>
          <target state="translated">オンラインでお試しください</target>
        </trans-unit>
        <trans-unit id="493fdce7827dfed273a7f0d0d7fb441956465d2f" translate="yes" xml:space="preserve">
          <source>Try to avoid forwarding blocks like this if doing &lt;code&gt;yield&lt;/code&gt; is enough. There's also the issue that &lt;code&gt;break&lt;/code&gt; and &lt;code&gt;next&lt;/code&gt; are not allowed inside captured blocks, so the following won't work when using &lt;code&gt;&amp;amp;block&lt;/code&gt; forwarding:</source>
          <target state="translated">&lt;code&gt;yield&lt;/code&gt; を行うだけで十分な場合は、このようなブロックの転送を避けてください。キャプチャされたブロック内では &lt;code&gt;break&lt;/code&gt; と &lt;code&gt;next&lt;/code&gt; が許可されないという問題もあるので、 &lt;code&gt;&amp;amp;block&lt;/code&gt; 転送を使用している場合、以下は機能しません。</target>
        </trans-unit>
        <trans-unit id="c41a2be51027c17da2914785c19c9af65da7231f" translate="yes" xml:space="preserve">
          <source>Tuple</source>
          <target state="translated">Tuple</target>
        </trans-unit>
        <trans-unit id="3dd77eb7db4e2b6c2fbbe4e0e8a616d7b0a5ae20" translate="yes" xml:space="preserve">
          <source>Tuple literal</source>
          <target state="translated">タプルリテラル</target>
        </trans-unit>
        <trans-unit id="db9abbfa9874c87894f52363a3e038037ad7adbd" translate="yes" xml:space="preserve">
          <source>Tuple size must match</source>
          <target state="translated">タプルのサイズが一致している必要があります。</target>
        </trans-unit>
        <trans-unit id="7e121f1048042d1a96fccaa4fe2d50ee9a8665eb" translate="yes" xml:space="preserve">
          <source>Tuple#+</source>
          <target state="translated">Tuple#+</target>
        </trans-unit>
        <trans-unit id="4dbbb7699bad75b09c2fadadbe5570c137946469" translate="yes" xml:space="preserve">
          <source>Tuple#==</source>
          <target state="translated">Tuple#==</target>
        </trans-unit>
        <trans-unit id="11b9ffdb90e63ff6f2e9744eef22e66bba768efd" translate="yes" xml:space="preserve">
          <source>Tuple#===</source>
          <target state="translated">Tuple#===</target>
        </trans-unit>
        <trans-unit id="ea768c8efdd3f71495f04a1c761b8b56486a90d1" translate="yes" xml:space="preserve">
          <source>Tuple#[]</source>
          <target state="translated">Tuple#[]</target>
        </trans-unit>
        <trans-unit id="a4522ece5a6415a9975adbc298e4a74be1b677a7" translate="yes" xml:space="preserve">
          <source>Tuple#[]?</source>
          <target state="translated">Tuple#[]?</target>
        </trans-unit>
        <trans-unit id="242aa7b9ad4c8ff55374671ae9984c024260bc86" translate="yes" xml:space="preserve">
          <source>Tuple#at</source>
          <target state="translated">Tuple#at</target>
        </trans-unit>
        <trans-unit id="11dfb4dab4cfe91139e8c54a0f9d0ebb57cadadb" translate="yes" xml:space="preserve">
          <source>Tuple#each</source>
          <target state="translated">Tuple#each</target>
        </trans-unit>
        <trans-unit id="c7b0589ac4e743c12fff663133183ae3f2b33363" translate="yes" xml:space="preserve">
          <source>Tuple#from</source>
          <target state="translated">Tuple#from</target>
        </trans-unit>
        <trans-unit id="04d72b5792e6acf797636fc4c4c0fb48071de52c" translate="yes" xml:space="preserve">
          <source>Tuple#hash</source>
          <target state="translated">Tuple#hash</target>
        </trans-unit>
        <trans-unit id="6bdcdb980b4f1ec68299341a00f82d17d4543250" translate="yes" xml:space="preserve">
          <source>Tuple#last</source>
          <target state="translated">Tuple#last</target>
        </trans-unit>
        <trans-unit id="3c6c591502c8fc3b6e0b18c287fc10e0fbf87d80" translate="yes" xml:space="preserve">
          <source>Tuple#map</source>
          <target state="translated">Tuple#map</target>
        </trans-unit>
        <trans-unit id="043f4a2ff148b3d5d81c2873726a2cb03605e2f0" translate="yes" xml:space="preserve">
          <source>Tuple#size</source>
          <target state="translated">Tuple#size</target>
        </trans-unit>
        <trans-unit id="354707835eba18e1ade14c5fff2eaed1f572db6f" translate="yes" xml:space="preserve">
          <source>Tuple#to_a</source>
          <target state="translated">Tuple#to_a</target>
        </trans-unit>
        <trans-unit id="1df72674265b898aa356dd01f3fe6c8f8eecb24e" translate="yes" xml:space="preserve">
          <source>Tuple#to_s</source>
          <target state="translated">Tuple#to_s</target>
        </trans-unit>
        <trans-unit id="952642d60d65e618402230ff206e167721f597b6" translate="yes" xml:space="preserve">
          <source>Tuple(*T)</source>
          <target state="translated">Tuple(*T)</target>
        </trans-unit>
        <trans-unit id="0bf27f3a7ca88db55038cac28704db2b3d46ff68" translate="yes" xml:space="preserve">
          <source>Tuple.from</source>
          <target state="translated">Tuple.from</target>
        </trans-unit>
        <trans-unit id="871e8e63a55124c0309905c36f2f7e94eb4e5556" translate="yes" xml:space="preserve">
          <source>Tuple.new</source>
          <target state="translated">Tuple.new</target>
        </trans-unit>
        <trans-unit id="9575fdc0215d60cb07b09ea99d99076ed5b7306c" translate="yes" xml:space="preserve">
          <source>Tuples are compared in an &quot;element-wise&quot; manner; the first element of this tuple is compared with the first one of &lt;em&gt;other&lt;/em&gt; using the &lt;code&gt;&lt;a href=&quot;tuple#(other:self)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; operator, then each of the second elements, etc. As soon as the result of any such comparison is non-zero (i.e. the two corresponding elements are not equal), that result is returned for the whole tuple comparison.</source>
          <target state="translated">タプルは「要素ごと」に比較されます。このタプルの最初の要素は、 &lt;code&gt;&lt;a href=&quot;tuple#(other:self)-instance-method&quot;&gt;#&amp;lt;=&amp;gt;&lt;/a&gt;&lt;/code&gt; 演算子を使用して&lt;em&gt;他&lt;/em&gt;の最初の要素と比較され、次に2番目の要素のそれぞれが比較されます。このような比較の結果がゼロ以外になるとすぐに等しくない）、その結果はタプル全体の比較に対して返されます。</target>
        </trans-unit>
        <trans-unit id="cf672de1711f2dfd015bbd3877cf41ea33bbd2ea" translate="yes" xml:space="preserve">
          <source>Tuples are the preferred way to return fixed-size multiple return values because no memory is needed to be allocated for them:</source>
          <target state="translated">タプルは、それらのためにメモリを割り当てる必要がないため、固定サイズの複数の戻り値を返すのに好ましい方法です。</target>
        </trans-unit>
        <trans-unit id="933c70e539f645b538d4356ea7b605cfee182be9" translate="yes" xml:space="preserve">
          <source>Tuples can be splat with the &lt;code&gt;*&lt;/code&gt; operator and passed to methods:</source>
          <target state="translated">タプルを &lt;code&gt;*&lt;/code&gt; 演算子でスプラットして、メソッドに渡すことができます。</target>
        </trans-unit>
        <trans-unit id="c1f595179e349661fb79cbb4cf94ec823bdbfaa3" translate="yes" xml:space="preserve">
          <source>Turns a &lt;code&gt;&lt;a href=&quot;../time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; into a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">オン &lt;code&gt;&lt;a href=&quot;../time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; に &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4c6e0a7be2cb0ef1bd0a963510462d526ef35501" translate="yes" xml:space="preserve">
          <source>Turns off character echoing for the duration of the given block.</source>
          <target state="translated">指定したブロックの間、文字のエコーをオフにします。</target>
        </trans-unit>
        <trans-unit id="216ea237154843e21e52841fd4bc23bb771f70c9" translate="yes" xml:space="preserve">
          <source>Turns off character echoing for the duration of the given block. This will prevent displaying back to the user what they enter on the terminal. Only call this when this IO is a TTY, such as a not redirected stdin.</source>
          <target state="translated">指定したブロックの間、文字のエコーをオフにします。これにより、ユーザが端末で入力した内容をユーザに表示しないようにします。このIOがリダイレクトされていないstdinのように、このIOがTTYである場合にのみ、これを呼び出します。</target>
        </trans-unit>
        <trans-unit id="393b49c50cc37cc6a39bd3964ceb6fd97c1c42cc" translate="yes" xml:space="preserve">
          <source>Turns off character echoing for this IO.</source>
          <target state="translated">このIOの文字エコーをオフにします。</target>
        </trans-unit>
        <trans-unit id="0f8c597f259581297aca0072d96839a06378417c" translate="yes" xml:space="preserve">
          <source>Turns off character echoing for this IO. This will prevent displaying back to the user what they enter on the terminal. Only call this when this IO is a TTY, such as a not redirected stdin.</source>
          <target state="translated">このIOの文字エコーをオフにします。これにより、ユーザが端末で入力した内容をユーザに表示しないようにします。このIOがリダイレクトされていないstdinのように、このIOがTTYである場合にのみ、これを呼び出します。</target>
        </trans-unit>
        <trans-unit id="a333876aff8c45250c080ef5d29f574b6989e0b4" translate="yes" xml:space="preserve">
          <source>Turns on/off &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;&lt;strong&gt;read&lt;/strong&gt; buffering.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; &lt;strong&gt;読み取り&lt;/strong&gt;バッファリングをオン/オフにし&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="be9064b724b5047e939d11455e515b0a0ca78909" translate="yes" xml:space="preserve">
          <source>Turns on/off &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;&lt;strong&gt;write&lt;/strong&gt; buffering.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; &lt;strong&gt;書き込み&lt;/strong&gt;バッファリングをオン/オフにします。</target>
        </trans-unit>
        <trans-unit id="37a912c3c738189757687174aacd1bd8f9d166d6" translate="yes" xml:space="preserve">
          <source>Turns on/off &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;&lt;strong&gt;write&lt;/strong&gt; buffering. When &lt;em&gt;sync&lt;/em&gt; is set to &lt;code&gt;true&lt;/code&gt;, no buffering will be done (that is, writing to this &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; is immediately synced to the underlying &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; &lt;strong&gt;書き込み&lt;/strong&gt;バッファリングをオン/オフにします。ときに&lt;em&gt;同期が&lt;/em&gt;に設定されている &lt;code&gt;true&lt;/code&gt; 、バッファリングは（あること、これへの書き込み行われません &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; が直下に同期される &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="02f3fd384c13d715386becdb72ba1c58a6d97d3e" translate="yes" xml:space="preserve">
          <source>Turns on/off flushing the underlying &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; when a newline is written.</source>
          <target state="translated">改行が書き込まれるときに、基になる &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; のフラッシュをオン/オフにします。</target>
        </trans-unit>
        <trans-unit id="b0145e3ffa8f32db3dec403701d0b34ca42731aa" translate="yes" xml:space="preserve">
          <source>Two &lt;code&gt;&lt;a href=&quot;location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; instances are considered equal if they have the same name, offset zones and transition rules.</source>
          <target state="translated">2つの &lt;code&gt;&lt;a href=&quot;location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; インスタンスが同じ名前、オフセットゾーン、および遷移ルール​​を持っている場合、それらは等しいと見なされます。</target>
        </trans-unit>
        <trans-unit id="02a38d28e568d7f9b05820f44ead1b6bd270d5c9" translate="yes" xml:space="preserve">
          <source>Two headers are considered the same if their downcase representation is the same (in which &lt;code&gt;_&lt;/code&gt; is the downcase version of &lt;code&gt;-&lt;/code&gt;).</source>
          <target state="translated">2つのヘッダーは、それらの小文字表現が同じである場合、同じと見なされます（ &lt;code&gt;_&lt;/code&gt; は &lt;code&gt;-&lt;/code&gt; の小文字バージョンです）。</target>
        </trans-unit>
        <trans-unit id="b0ab4d96d611346f0089f77a1daac7ace3bf7f25" translate="yes" xml:space="preserve">
          <source>Two instances are considered equal if they represent the same date-time in the instant time-line, even if they show a different local date-time.</source>
          <target state="translated">2つのインスタンスは、それらが異なるローカルの日付時間を示していても、それらが瞬間的な時間軸上で同じ日付時間を表している場合には、等しいとみなされます。</target>
        </trans-unit>
        <trans-unit id="d43d937c7710777e97a5a53154be9fcccb8a1e90" translate="yes" xml:space="preserve">
          <source>Two methods with different required named arguments overload between each other:</source>
          <target state="translated">必要とされる名前付き引数が異なる2つのメソッドは、お互いにオーバーロードします。</target>
        </trans-unit>
        <trans-unit id="6ae191baa42a93c903e6c345c921dddfd326f8c7" translate="yes" xml:space="preserve">
          <source>Two methods, one that yields and another that doesn't, are considered different overloads, as explained in the &lt;a href=&quot;overloading&quot;&gt;overloading&lt;/a&gt; section.</source>
          <target state="translated">&lt;a href=&quot;overloading&quot;&gt;オーバーロードの&lt;/a&gt;セクションで説明されているように、生成するメソッドと生成しないメソッドの2つのメソッドは、異なるオーバーロードと見なされます。</target>
        </trans-unit>
        <trans-unit id="53eb8996b68f6ada92981bfe8955de0b65edfbd4" translate="yes" xml:space="preserve">
          <source>Two types are provided to read from zip files:</source>
          <target state="translated">ZIPファイルからの読み込みには2種類用意されています。</target>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="3d007038ca42c28b38d85162af3678fda3d64700" translate="yes" xml:space="preserve">
          <source>Type Grammar</source>
          <target state="translated">タイプ文法</target>
        </trans-unit>
        <trans-unit id="25fb34e0226e23d09fbc35edffc871595228758d" translate="yes" xml:space="preserve">
          <source>Type Reflection</source>
          <target state="translated">タイプリフレクション</target>
        </trans-unit>
        <trans-unit id="f4fd140aa1ac5809b6e0e0e2158e77d4f7bbf5e8" translate="yes" xml:space="preserve">
          <source>Type grammar</source>
          <target state="translated">型文法</target>
        </trans-unit>
        <trans-unit id="4635ff32ceb845d41fbb05ef04eddaf92ee315d6" translate="yes" xml:space="preserve">
          <source>Type inference</source>
          <target state="translated">型推論</target>
        </trans-unit>
        <trans-unit id="6dce0107ce06419ab2948b0df54410a6ad499cd9" translate="yes" xml:space="preserve">
          <source>Type information</source>
          <target state="translated">タイプ情報</target>
        </trans-unit>
        <trans-unit id="ea5ff39fc9723d3ce261f7386588e613b8a1f158" translate="yes" xml:space="preserve">
          <source>Type of closured variables</source>
          <target state="translated">クローズド変数の種類</target>
        </trans-unit>
        <trans-unit id="5d4a8336b9549dcb9cabf0fa086cb349797de79b" translate="yes" xml:space="preserve">
          <source>Type reflection</source>
          <target state="translated">タイプリフレクション</target>
        </trans-unit>
        <trans-unit id="d6a3d1365f965efa1ad264795b271bcb2fd8682a" translate="yes" xml:space="preserve">
          <source>Type restrictions</source>
          <target state="translated">タイプの制限</target>
        </trans-unit>
        <trans-unit id="d2027c772c97a36b7177f0e8feae3afa1be467b7" translate="yes" xml:space="preserve">
          <source>Type restrictions are applied to method arguments to restrict the types accepted by that method.</source>
          <target state="translated">型の制限は、メソッドの引数に適用され、そのメソッドで受け入れられる型を制限します。</target>
        </trans-unit>
        <trans-unit id="fefe434d86fff3c36b26ec6e0643570f06e96ee8" translate="yes" xml:space="preserve">
          <source>Type restrictions in a generic type's constructor are free variables when type arguments were not specified, and then are used to infer them. For example:</source>
          <target state="translated">汎用型のコンストラクタでの型制限は、型の引数が指定されていなかったときの自由変数であり、その後、それを推論するために使用されます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="1edd4e3e5132b8f114b3a94c66baa6eb135b060d" translate="yes" xml:space="preserve">
          <source>Type restrictions in splats</source>
          <target state="translated">スプラッツのタイプ制限</target>
        </trans-unit>
        <trans-unit id="839562c72eef764245b7aaa688de9fb42e81d7aa" translate="yes" xml:space="preserve">
          <source>Type variables inference</source>
          <target state="translated">型変数の推論</target>
        </trans-unit>
        <trans-unit id="90ca08511d69bcb8b33c55b9371f837b0597fb34" translate="yes" xml:space="preserve">
          <source>Type#array</source>
          <target state="translated">Type#array</target>
        </trans-unit>
        <trans-unit id="f6687aa75438cee7790b91d71f73cd03f5102244" translate="yes" xml:space="preserve">
          <source>Type#array_size</source>
          <target state="translated">Type#array_size</target>
        </trans-unit>
        <trans-unit id="20ed7771514810cca5c909077339d40910df6831" translate="yes" xml:space="preserve">
          <source>Type#block_device?</source>
          <target state="translated">Type#block_device?</target>
        </trans-unit>
        <trans-unit id="ff22c66e5764a8599274261fcecfaca04db2d0fb" translate="yes" xml:space="preserve">
          <source>Type#character_device?</source>
          <target state="translated">Type#character_device?</target>
        </trans-unit>
        <trans-unit id="589662eda2d664a797fe159f855b34c76b7d1084" translate="yes" xml:space="preserve">
          <source>Type#const_array</source>
          <target state="translated">Type#const_array</target>
        </trans-unit>
        <trans-unit id="1385ff3fad5b3030802df193bc16378b87143cb0" translate="yes" xml:space="preserve">
          <source>Type#const_double</source>
          <target state="translated">Type#const_double</target>
        </trans-unit>
        <trans-unit id="e6169b8f4ea178ea983cf1459e6ac9eb52320344" translate="yes" xml:space="preserve">
          <source>Type#const_float</source>
          <target state="translated">Type#const_float</target>
        </trans-unit>
        <trans-unit id="24e92f5c3dc1ea04ea5bf8219162781b23bfff78" translate="yes" xml:space="preserve">
          <source>Type#const_inline_asm</source>
          <target state="translated">Type#const_inline_asm</target>
        </trans-unit>
        <trans-unit id="fcb573168de52a95f28bd41dda6b42a03aaee889" translate="yes" xml:space="preserve">
          <source>Type#const_int</source>
          <target state="translated">Type#const_int</target>
        </trans-unit>
        <trans-unit id="67af81bd3b83cc62f662b1a355b8332c598555f9" translate="yes" xml:space="preserve">
          <source>Type#context</source>
          <target state="translated">Type#context</target>
        </trans-unit>
        <trans-unit id="dc24dd0e52ce2087b86d79f4067e9eedcfe1b656" translate="yes" xml:space="preserve">
          <source>Type#device?</source>
          <target state="translated">Type#device?</target>
        </trans-unit>
        <trans-unit id="08e2f47a8aecc31225e36c4d58ccc7891e0023ff" translate="yes" xml:space="preserve">
          <source>Type#dgram?</source>
          <target state="translated">Type#dgram?</target>
        </trans-unit>
        <trans-unit id="2f77f7889ce72c7412fc50b0602177cdd37d1550" translate="yes" xml:space="preserve">
          <source>Type#directory?</source>
          <target state="translated">Type#directory?</target>
        </trans-unit>
        <trans-unit id="043ac38e185d5b451b74fadaaeff2ca022798150" translate="yes" xml:space="preserve">
          <source>Type#element_type</source>
          <target state="translated">Type#element_type</target>
        </trans-unit>
        <trans-unit id="76a75e763598ca7ffd5d90dc2576f2b53e160dcf" translate="yes" xml:space="preserve">
          <source>Type#file?</source>
          <target state="translated">Type#file?</target>
        </trans-unit>
        <trans-unit id="9a54e644578d9729e9314ea881de3efb7f3f10dc" translate="yes" xml:space="preserve">
          <source>Type#inspect</source>
          <target state="translated">Type#inspect</target>
        </trans-unit>
        <trans-unit id="72ab5b34fe9186e76bfc2b0c1f5c28ae707081ff" translate="yes" xml:space="preserve">
          <source>Type#int_width</source>
          <target state="translated">Type#int_width</target>
        </trans-unit>
        <trans-unit id="4b4e815c4a8a74296e90b739e439c12f992e5702" translate="yes" xml:space="preserve">
          <source>Type#kind</source>
          <target state="translated">Type#kind</target>
        </trans-unit>
        <trans-unit id="76c65a00484c6d9f6e9db34248dd2ea3c2800e04" translate="yes" xml:space="preserve">
          <source>Type#null</source>
          <target state="translated">Type#null</target>
        </trans-unit>
        <trans-unit id="b4467c94dd8a193507f32bff52b656d9c3cc3c55" translate="yes" xml:space="preserve">
          <source>Type#null_pointer</source>
          <target state="translated">Type#null_pointer</target>
        </trans-unit>
        <trans-unit id="52ded6e945f9c857d3c699bcfbdaa99f18c261e4" translate="yes" xml:space="preserve">
          <source>Type#packed_struct?</source>
          <target state="translated">Type#packed_struct?</target>
        </trans-unit>
        <trans-unit id="456ca7f53e60241e3e4b9e86ac95d6dfce217f01" translate="yes" xml:space="preserve">
          <source>Type#params_size</source>
          <target state="translated">Type#params_size</target>
        </trans-unit>
        <trans-unit id="ab1c2c2375fc22b0703e2add5fff022124523283" translate="yes" xml:space="preserve">
          <source>Type#params_types</source>
          <target state="translated">Type#params_types</target>
        </trans-unit>
        <trans-unit id="4bd8f1b34e4ec5881994fe34d465ce2ad803a44e" translate="yes" xml:space="preserve">
          <source>Type#pipe?</source>
          <target state="translated">Type#pipe?</target>
        </trans-unit>
        <trans-unit id="3cdcca18731083e412186c43d0393182fa02ed62" translate="yes" xml:space="preserve">
          <source>Type#pointer</source>
          <target state="translated">Type#pointer</target>
        </trans-unit>
        <trans-unit id="2ca98ceef33a4d0f1d3bbdb3936321f10f0a172c" translate="yes" xml:space="preserve">
          <source>Type#raw?</source>
          <target state="translated">Type#raw?</target>
        </trans-unit>
        <trans-unit id="ad1a5c0fceb21654ffa56bedcc902346c3cee9f2" translate="yes" xml:space="preserve">
          <source>Type#return_type</source>
          <target state="translated">Type#return_type</target>
        </trans-unit>
        <trans-unit id="74bab7bea827bba94f4a722c7401ccad69a3f4f3" translate="yes" xml:space="preserve">
          <source>Type#seqpacket?</source>
          <target state="translated">Type#seqpacket?</target>
        </trans-unit>
        <trans-unit id="b566f1df73cca8bbfd27cae0b853d1dfbcc12449" translate="yes" xml:space="preserve">
          <source>Type#size</source>
          <target state="translated">Type#size</target>
        </trans-unit>
        <trans-unit id="0782e8f0ce9d9126c150d89af1280517e87541d5" translate="yes" xml:space="preserve">
          <source>Type#socket?</source>
          <target state="translated">Type#socket?</target>
        </trans-unit>
        <trans-unit id="4b1e8c638a825ee3b1d660d8fafdcd5c03276d58" translate="yes" xml:space="preserve">
          <source>Type#stream?</source>
          <target state="translated">Type#stream?</target>
        </trans-unit>
        <trans-unit id="a04f4efc7cccd2ee1ba0fad341973e1650a6733b" translate="yes" xml:space="preserve">
          <source>Type#struct_element_types</source>
          <target state="translated">Type#struct_element_types</target>
        </trans-unit>
        <trans-unit id="36d219f2e6af1a7d422889f2b4c5f8f8b9f88cb8" translate="yes" xml:space="preserve">
          <source>Type#struct_name</source>
          <target state="translated">Type#struct_name</target>
        </trans-unit>
        <trans-unit id="719741cbec61fcf867239cab7515af40f14299c8" translate="yes" xml:space="preserve">
          <source>Type#symlink?</source>
          <target state="translated">Type#symlink?</target>
        </trans-unit>
        <trans-unit id="fd6c85d6b7b31f94b012faad52835d2c3a0cd543" translate="yes" xml:space="preserve">
          <source>Type#to_unsafe</source>
          <target state="translated">Type#to_unsafe</target>
        </trans-unit>
        <trans-unit id="ea25e74f63ce1a683117a323e380f2a16f671c25" translate="yes" xml:space="preserve">
          <source>Type#undef</source>
          <target state="translated">Type#undef</target>
        </trans-unit>
        <trans-unit id="55d26d2807258be0919cf4ad835ebebf8d275717" translate="yes" xml:space="preserve">
          <source>Type#unknown?</source>
          <target state="translated">Type#unknown?</target>
        </trans-unit>
        <trans-unit id="14b732d91aa025572ed4b16942fca5b10c79d2fc" translate="yes" xml:space="preserve">
          <source>Type#unwrap</source>
          <target state="translated">Type#unwrap</target>
        </trans-unit>
        <trans-unit id="19741911cebe04d35e3d168402de5ce15d4352f7" translate="yes" xml:space="preserve">
          <source>Type#varargs?</source>
          <target state="translated">Type#varargs?</target>
        </trans-unit>
        <trans-unit id="280dd6a1cc7fdff8c604180a304659bdc58cb9ae" translate="yes" xml:space="preserve">
          <source>Type#vector</source>
          <target state="translated">Type#vector</target>
        </trans-unit>
        <trans-unit id="ccc9b679e615cfcc61ef85ea06627f6300afe0d8" translate="yes" xml:space="preserve">
          <source>Type#vector_size</source>
          <target state="translated">Type#vector_size</target>
        </trans-unit>
        <trans-unit id="8de7e0f5a0893a5da3c71605da55953ca53d7ff8" translate="yes" xml:space="preserve">
          <source>Type#void?</source>
          <target state="translated">Type#void?</target>
        </trans-unit>
        <trans-unit id="ae6e0bbb82199bf2f9bbaa1eab68f7c5669345f2" translate="yes" xml:space="preserve">
          <source>Type.function</source>
          <target state="translated">Type.function</target>
        </trans-unit>
        <trans-unit id="1cb3ba201ea3a0b53221a1a9129b1126826ecfab" translate="yes" xml:space="preserve">
          <source>Type.new</source>
          <target state="translated">Type.new</target>
        </trans-unit>
        <trans-unit id="c3fed42f5c02b7b6956096d3455794923bfcdae0" translate="yes" xml:space="preserve">
          <source>Type::Kind</source>
          <target state="translated">Type::Kind</target>
        </trans-unit>
        <trans-unit id="3dbcf392dd7974496e3d4b40dc2bf2dc5fb3bc7e" translate="yes" xml:space="preserve">
          <source>Type::Kind#array?</source>
          <target state="translated">Type::Kind#array?</target>
        </trans-unit>
        <trans-unit id="7d7a6948a15ce0b21d1264e8c36043f3ba6c5488" translate="yes" xml:space="preserve">
          <source>Type::Kind#double?</source>
          <target state="translated">Type::Kind#double?</target>
        </trans-unit>
        <trans-unit id="0cea354bd141f026df63904c12032dcc615488a8" translate="yes" xml:space="preserve">
          <source>Type::Kind#float?</source>
          <target state="translated">Type::Kind#float?</target>
        </trans-unit>
        <trans-unit id="6458d81606455dcdb0a6a4a87570fd6419e6e425" translate="yes" xml:space="preserve">
          <source>Type::Kind#fp128?</source>
          <target state="translated">Type::Kind#fp128?</target>
        </trans-unit>
        <trans-unit id="d73452e09e88069aa5cde73211831f210dafe984" translate="yes" xml:space="preserve">
          <source>Type::Kind#function?</source>
          <target state="translated">Type::Kind#function?</target>
        </trans-unit>
        <trans-unit id="2f3197d03bede1e3bcad23faf451ccc14b8211be" translate="yes" xml:space="preserve">
          <source>Type::Kind#half?</source>
          <target state="translated">Type::Kind#half?</target>
        </trans-unit>
        <trans-unit id="2716d4fc1dc8e4a996afe55a87f5fad2d06ea5ad" translate="yes" xml:space="preserve">
          <source>Type::Kind#integer?</source>
          <target state="translated">Type::Kind#integer?</target>
        </trans-unit>
        <trans-unit id="9c99934a0cfee026440026059ebf0f885196193e" translate="yes" xml:space="preserve">
          <source>Type::Kind#label?</source>
          <target state="translated">Type::Kind#label?</target>
        </trans-unit>
        <trans-unit id="49815f001b18013e2b5f4a4d29fa71bfae83a407" translate="yes" xml:space="preserve">
          <source>Type::Kind#metadata?</source>
          <target state="translated">Type::Kind#metadata?</target>
        </trans-unit>
        <trans-unit id="ef3fe1a582869e1ad36889a830054bf99900bea1" translate="yes" xml:space="preserve">
          <source>Type::Kind#pointer?</source>
          <target state="translated">Type::Kind#pointer?</target>
        </trans-unit>
        <trans-unit id="37f0ea8347abfa31b42fbd73afe60d39af27c7df" translate="yes" xml:space="preserve">
          <source>Type::Kind#ppc_fp128?</source>
          <target state="translated">Type::Kind#ppc_fp128?</target>
        </trans-unit>
        <trans-unit id="3772fabd242871fcbdad1dd99eec9cbee4b14887" translate="yes" xml:space="preserve">
          <source>Type::Kind#struct?</source>
          <target state="translated">Type::Kind#struct?</target>
        </trans-unit>
        <trans-unit id="407762eba8474a42a0456fe49456b45e7c62c6a9" translate="yes" xml:space="preserve">
          <source>Type::Kind#vector?</source>
          <target state="translated">Type::Kind#vector?</target>
        </trans-unit>
        <trans-unit id="2fd256675eb81144d0ccc1e4f315b868dcb3f08a" translate="yes" xml:space="preserve">
          <source>Type::Kind#void?</source>
          <target state="translated">Type::Kind#void?</target>
        </trans-unit>
        <trans-unit id="d3e28755e72167e30772368ba4804fd6fcefa687" translate="yes" xml:space="preserve">
          <source>Type::Kind#x86_fp80?</source>
          <target state="translated">Type::Kind#x86_fp80?</target>
        </trans-unit>
        <trans-unit id="d39be1171c5217cddb2f802e110755035b06b813" translate="yes" xml:space="preserve">
          <source>Type::Kind#x86_mmx?</source>
          <target state="translated">Type::Kind#x86_mmx?</target>
        </trans-unit>
        <trans-unit id="19cc5b2c242881b1ef5b12bc33728a92b83c1d5d" translate="yes" xml:space="preserve">
          <source>TypeCastError</source>
          <target state="translated">TypeCastError</target>
        </trans-unit>
        <trans-unit id="83ce81e7118d69ceed4a0baf8102c8b7f8dd5655" translate="yes" xml:space="preserve">
          <source>TypeCastError.new</source>
          <target state="translated">TypeCastError.new</target>
        </trans-unit>
        <trans-unit id="b0d53b6120593aeedf51891aa9f7735c6f25d1e1" translate="yes" xml:space="preserve">
          <source>Types and methods</source>
          <target state="translated">種類と方法</target>
        </trans-unit>
        <trans-unit id="9c1e6a91e1057d81afc46a89e790e79fb8701f9f" translate="yes" xml:space="preserve">
          <source>Types in C Bindings</source>
          <target state="translated">C バインディングのタイプ</target>
        </trans-unit>
        <trans-unit id="5c2e4209669d8e4c094bdcff164da40fa9f436f5" translate="yes" xml:space="preserve">
          <source>Types including this module are typically &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt;-like types.</source>
          <target state="translated">このモジュールを含む型は、通常、 &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; ような型です。</target>
        </trans-unit>
        <trans-unit id="8fdda74f52dcdd95a3bf8b356cb0dda3841039b7" translate="yes" xml:space="preserve">
          <source>Types, methods and generally any part of your code can be conditionally defined based on some flags available at compile time. These flags are by default read from the hosts &lt;a href=&quot;http://llvm.org/docs/LangRef.html#target-triple&quot;&gt;LLVM Target Triple&lt;/a&gt;, split on &lt;code&gt;-&lt;/code&gt;. To get the target you can execute &lt;code&gt;llvm-config --host-target&lt;/code&gt;.</source>
          <target state="translated">タイプ、メソッド、および一般にコードの任意の部分は、コンパイル時に使用可能ないくつかのフラグに基づいて条件付きで定義できます。これらのフラグは、デフォルトでホスト&lt;a href=&quot;http://llvm.org/docs/LangRef.html#target-triple&quot;&gt;LLVMターゲットトリプル&lt;/a&gt;から読み取られ、 &lt;code&gt;-&lt;/code&gt; で分割されます。ターゲットを取得するには、 &lt;code&gt;llvm-config --host-target&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="f00a15c8c28b40d4502cc2c6c389da7fe6d44b14" translate="yes" xml:space="preserve">
          <source>Typical examples for non-returning methods and keywords are &lt;code&gt;return&lt;/code&gt;, &lt;code&gt;exit&lt;/code&gt;, &lt;code&gt;raise&lt;/code&gt;, &lt;code&gt;next&lt;/code&gt;, and &lt;code&gt;break&lt;/code&gt;.</source>
          <target state="translated">返されないメソッドとキーワードの典型的な例は、 &lt;code&gt;return&lt;/code&gt; 、 &lt;code&gt;exit&lt;/code&gt; 、 &lt;code&gt;raise&lt;/code&gt; 、 &lt;code&gt;next&lt;/code&gt; 、 &lt;code&gt;break&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9f433de3a09f2cf5cd13a827c57725457d725e39" translate="yes" xml:space="preserve">
          <source>Typical usage:</source>
          <target state="translated">典型的な使い方。</target>
        </trans-unit>
        <trans-unit id="36852b319b2b549c1097f9bfa0e971e58e0b09fa" translate="yes" xml:space="preserve">
          <source>Typically used to output data and information.</source>
          <target state="translated">一般的には、データや情報を出力するために使用されます。</target>
        </trans-unit>
        <trans-unit id="d89287599c0e49847a7257a2a6f06fca2281d22b" translate="yes" xml:space="preserve">
          <source>Typically used to output error messages and diagnostics.</source>
          <target state="translated">通常、エラーメッセージや診断結果の出力に使用されます。</target>
        </trans-unit>
        <trans-unit id="63bf0b0d2ea109d8e4a9bb3fc2e371edb13ab9f3" translate="yes" xml:space="preserve">
          <source>UDP is a very simple protocol. Messages, so called datagrams, are sent to other hosts on an IP network without the need to set up special transmission channels or data paths beforehand. The UDP socket only needs to be opened for communication. It listens for incoming messages and sends outgoing messages on request.</source>
          <target state="translated">UDPは非常にシンプルなプロトコルです。データグラムと呼ばれるメッセージは、特別な伝送路やデータパスを事前に設定することなく、IPネットワーク上の他のホストに送信されます。UDPソケットは通信のために開くだけです。それは受信メッセージを待ち受け、要求に応じて送信メッセージを送信します。</target>
        </trans-unit>
        <trans-unit id="933ab75614121ba9f074a0b082a253c60752b5ae" translate="yes" xml:space="preserve">
          <source>UDP runs on top of the Internet Protocol (IP) and was developed for applications that do not require reliability, acknowledgement, or flow control features at the transport layer. This simple protocol provides transport layer addressing in the form of UDP ports and an optional checksum capability.</source>
          <target state="translated">UDPはインターネットプロトコル(IP)の上で動作し、トランスポート層で信頼性、確認応答、フロー制御機能を必要としないアプリケーション向けに開発されました。このシンプルなプロトコルは、UDP ポートの形でトランスポート層のアドレス指定を行い、オプションのチェックサム機能を提供します。</target>
        </trans-unit>
        <trans-unit id="5091bc2101291836700b05e5a46a52b6a0f263d9" translate="yes" xml:space="preserve">
          <source>UDPSocket</source>
          <target state="translated">UDPSocket</target>
        </trans-unit>
        <trans-unit id="e67152fd7d80d9c8bd94e0ab69e4f4db48b0f5f2" translate="yes" xml:space="preserve">
          <source>UDPSocket.new</source>
          <target state="translated">UDPSocket.new</target>
        </trans-unit>
        <trans-unit id="9b81a5f58a08d125439c4fe920735e6f93f6c26f" translate="yes" xml:space="preserve">
          <source>UInt</source>
          <target state="translated">UInt</target>
        </trans-unit>
        <trans-unit id="a314e0179bfc11f078094a1453edfe519ba82dfa" translate="yes" xml:space="preserve">
          <source>UInt128</source>
          <target state="translated">UInt128</target>
        </trans-unit>
        <trans-unit id="5085621745bbcf90f0a3b05448eaf550e68cbb27" translate="yes" xml:space="preserve">
          <source>UInt128#*</source>
          <target state="translated">UInt128#*</target>
        </trans-unit>
        <trans-unit id="aab1247a4deecbe516d1021889ee2ca2c6e7d2e1" translate="yes" xml:space="preserve">
          <source>UInt128#+</source>
          <target state="translated">UInt128#+</target>
        </trans-unit>
        <trans-unit id="5d2541018d9901fd7215762f4f12b89e2207733a" translate="yes" xml:space="preserve">
          <source>UInt128#-</source>
          <target state="translated">UInt128#-</target>
        </trans-unit>
        <trans-unit id="4707447d152b923c9c7f8f64494035d047d2599f" translate="yes" xml:space="preserve">
          <source>UInt128#/</source>
          <target state="translated">UInt128#/</target>
        </trans-unit>
        <trans-unit id="e7f49a6cb148315e3040f86b704826c409828f5b" translate="yes" xml:space="preserve">
          <source>UInt128#^</source>
          <target state="translated">UInt128#^</target>
        </trans-unit>
        <trans-unit id="1f1fc201d67828ee118804a7a2df0b1190afecfc" translate="yes" xml:space="preserve">
          <source>UInt128#|</source>
          <target state="translated">UInt128#|</target>
        </trans-unit>
        <trans-unit id="70b4bb2684c3f8969e2fe9e14b470906fd4cf3c6" translate="yes" xml:space="preserve">
          <source>UInt16</source>
          <target state="translated">UInt16</target>
        </trans-unit>
        <trans-unit id="7464f9a3cf3367a2ca467618ead3df7f41f78b8c" translate="yes" xml:space="preserve">
          <source>UInt16#!=</source>
          <target state="translated">UInt16#!=</target>
        </trans-unit>
        <trans-unit id="88b7a696e677ae150be51c578bf85a311da9d698" translate="yes" xml:space="preserve">
          <source>UInt16#*</source>
          <target state="translated">UInt16#*</target>
        </trans-unit>
        <trans-unit id="eaee4409ccc86e61d7faae114d9fc6afe5190c41" translate="yes" xml:space="preserve">
          <source>UInt16#+</source>
          <target state="translated">UInt16#+</target>
        </trans-unit>
        <trans-unit id="3266ed174ea98f271b517744c2e3e00e10dcfb01" translate="yes" xml:space="preserve">
          <source>UInt16#-</source>
          <target state="translated">UInt16#-</target>
        </trans-unit>
        <trans-unit id="02e9057db1c859cea096e0f2cf4c791392ab61b8" translate="yes" xml:space="preserve">
          <source>UInt16#/</source>
          <target state="translated">UInt16#/</target>
        </trans-unit>
        <trans-unit id="dc270cfddbd80e3f7872be46aa919dfb27485cb8" translate="yes" xml:space="preserve">
          <source>UInt16#==</source>
          <target state="translated">UInt16#==</target>
        </trans-unit>
        <trans-unit id="01b3293eae532a0d76f3de44ad24a95da00d7347" translate="yes" xml:space="preserve">
          <source>UInt16#^</source>
          <target state="translated">UInt16#^</target>
        </trans-unit>
        <trans-unit id="3030e740d02dc41894ea06bd45f4b30c69b4c9fd" translate="yes" xml:space="preserve">
          <source>UInt16#|</source>
          <target state="translated">UInt16#|</target>
        </trans-unit>
        <trans-unit id="e71e7bc3fe9e9f3c39e46b53ffff0c83d9cc9a36" translate="yes" xml:space="preserve">
          <source>UInt32</source>
          <target state="translated">UInt32</target>
        </trans-unit>
        <trans-unit id="c5deecfd8684d9650f6f9e7bc785bd85cef67b84" translate="yes" xml:space="preserve">
          <source>UInt32#!=</source>
          <target state="translated">UInt32#!=</target>
        </trans-unit>
        <trans-unit id="a2ebaf5bca0e294891e02e5b87c60193db5e5a29" translate="yes" xml:space="preserve">
          <source>UInt32#*</source>
          <target state="translated">UInt32#*</target>
        </trans-unit>
        <trans-unit id="9d6cc1bbff58aab692c936696658e08f43fc908d" translate="yes" xml:space="preserve">
          <source>UInt32#+</source>
          <target state="translated">UInt32#+</target>
        </trans-unit>
        <trans-unit id="c7e119fc51c678e2e7ee7a027fab2ace1338be4a" translate="yes" xml:space="preserve">
          <source>UInt32#-</source>
          <target state="translated">UInt32#-</target>
        </trans-unit>
        <trans-unit id="b1d4f40221ec1aae06d944929c6245f4d16fcc3a" translate="yes" xml:space="preserve">
          <source>UInt32#/</source>
          <target state="translated">UInt32#/</target>
        </trans-unit>
        <trans-unit id="6300a6b03125623c9fc3d13fc920563df1dd2ec9" translate="yes" xml:space="preserve">
          <source>UInt32#==</source>
          <target state="translated">UInt32#==</target>
        </trans-unit>
        <trans-unit id="c4dbb56c05ce54d820854b6c568aafad2f4af0f4" translate="yes" xml:space="preserve">
          <source>UInt32#^</source>
          <target state="translated">UInt32#^</target>
        </trans-unit>
        <trans-unit id="0bc0d910444f9253b052ecd13c1890eac3a26bc3" translate="yes" xml:space="preserve">
          <source>UInt32#|</source>
          <target state="translated">UInt32#|</target>
        </trans-unit>
        <trans-unit id="69a99906f5a06ea1bdbfc02e6132d35de781d3f1" translate="yes" xml:space="preserve">
          <source>UInt64</source>
          <target state="translated">UInt64</target>
        </trans-unit>
        <trans-unit id="72d424c14132469349afeaf1e85686fa71233674" translate="yes" xml:space="preserve">
          <source>UInt64 is a special case due to exceeding bounds of @int_value</source>
          <target state="translated">UInt64 は @int_value の範囲を超えているため、特殊なケースです。</target>
        </trans-unit>
        <trans-unit id="76385bbfbac2776677510a78b1648089bc742e74" translate="yes" xml:space="preserve">
          <source>UInt64#!=</source>
          <target state="translated">UInt64#!=</target>
        </trans-unit>
        <trans-unit id="6d31100e7b885275f05788519fb1921e41f0463e" translate="yes" xml:space="preserve">
          <source>UInt64#*</source>
          <target state="translated">UInt64#*</target>
        </trans-unit>
        <trans-unit id="8e5186367715df15576b679b3a47dacd0f2791e8" translate="yes" xml:space="preserve">
          <source>UInt64#+</source>
          <target state="translated">UInt64#+</target>
        </trans-unit>
        <trans-unit id="28593062edde44050aa8bf32efac3029788014b8" translate="yes" xml:space="preserve">
          <source>UInt64#-</source>
          <target state="translated">UInt64#-</target>
        </trans-unit>
        <trans-unit id="505bfee6f654b9e9587b2bc72b43cbd9f841f899" translate="yes" xml:space="preserve">
          <source>UInt64#/</source>
          <target state="translated">UInt64#/</target>
        </trans-unit>
        <trans-unit id="f9b934b87dd4cb073ac7e3e490b25d688398ac38" translate="yes" xml:space="preserve">
          <source>UInt64#==</source>
          <target state="translated">UInt64#==</target>
        </trans-unit>
        <trans-unit id="e2c411052ac24075d088e198fd7d5d2e5c4fc978" translate="yes" xml:space="preserve">
          <source>UInt64#^</source>
          <target state="translated">UInt64#^</target>
        </trans-unit>
        <trans-unit id="aa57215a4e79b090bc8127c4b8465ade5d2f3ac2" translate="yes" xml:space="preserve">
          <source>UInt64#|</source>
          <target state="translated">UInt64#|</target>
        </trans-unit>
        <trans-unit id="cf31903898d0642673b124c8602786b0ea8bf234" translate="yes" xml:space="preserve">
          <source>UInt8</source>
          <target state="translated">UInt8</target>
        </trans-unit>
        <trans-unit id="1fe52b7a7589c779faa390ea20ec628df4212011" translate="yes" xml:space="preserve">
          <source>UInt8#!=</source>
          <target state="translated">UInt8#!=</target>
        </trans-unit>
        <trans-unit id="b4d37ee5c19aec2e2f873454d362396cb8a8cd78" translate="yes" xml:space="preserve">
          <source>UInt8#*</source>
          <target state="translated">UInt8#*</target>
        </trans-unit>
        <trans-unit id="a8745dac8a71b0c18aa968e9837a0b7e4b217de0" translate="yes" xml:space="preserve">
          <source>UInt8#+</source>
          <target state="translated">UInt8#+</target>
        </trans-unit>
        <trans-unit id="5858392a6768c215a9beed3053f5887fa9977c4b" translate="yes" xml:space="preserve">
          <source>UInt8#-</source>
          <target state="translated">UInt8#-</target>
        </trans-unit>
        <trans-unit id="1543e3c2aa6de0cc39f308a5b504bee37cf403ef" translate="yes" xml:space="preserve">
          <source>UInt8#/</source>
          <target state="translated">UInt8#/</target>
        </trans-unit>
        <trans-unit id="90afb55cb08b5acb9e62f83be17db5d56d16909a" translate="yes" xml:space="preserve">
          <source>UInt8#==</source>
          <target state="translated">UInt8#==</target>
        </trans-unit>
        <trans-unit id="f6cb3d33890f96f32960d17d53dd0a7558ab2325" translate="yes" xml:space="preserve">
          <source>UInt8#^</source>
          <target state="translated">UInt8#^</target>
        </trans-unit>
        <trans-unit id="d29104e24b464874dfa312cd07a660a9ebe3be30" translate="yes" xml:space="preserve">
          <source>UInt8#abs</source>
          <target state="translated">UInt8#abs</target>
        </trans-unit>
        <trans-unit id="33fd8a7ca720a4d7401de6c9a97e28815867a1ac" translate="yes" xml:space="preserve">
          <source>UInt8#|</source>
          <target state="translated">UInt8#|</target>
        </trans-unit>
        <trans-unit id="bf01c58bde50794e84b61532daa82b49c3c1aa06" translate="yes" xml:space="preserve">
          <source>UInt8.new</source>
          <target state="translated">UInt8.new</target>
        </trans-unit>
        <trans-unit id="9f20bbbb2b7deaeb82a57d7bcc498ea20c3e1a5a" translate="yes" xml:space="preserve">
          <source>UNIX address representation.</source>
          <target state="translated">UNIX アドレス表現。</target>
        </trans-unit>
        <trans-unit id="3553b3d3b3a2386f6b4e54c8b3a864b5cf23309d" translate="yes" xml:space="preserve">
          <source>UNIXAddress</source>
          <target state="translated">UNIXAddress</target>
        </trans-unit>
        <trans-unit id="c14ab757ec1c9f0cfb0f6b9a84c21eabd1a3d4b3" translate="yes" xml:space="preserve">
          <source>UNIXAddress#==</source>
          <target state="translated">UNIXAddress#==</target>
        </trans-unit>
        <trans-unit id="b8a081a6c0b920b02d2fe745f09e84a6d825bce5" translate="yes" xml:space="preserve">
          <source>UNIXAddress#path</source>
          <target state="translated">UNIXAddress#path</target>
        </trans-unit>
        <trans-unit id="3ff7cc184efd6a14bc584c030d28cc14c8f76e19" translate="yes" xml:space="preserve">
          <source>UNIXAddress#to_s</source>
          <target state="translated">UNIXAddress#to_s</target>
        </trans-unit>
        <trans-unit id="9434370b42f9f176bf4d0dcb0c3a7efa40f73f21" translate="yes" xml:space="preserve">
          <source>UNIXAddress#to_unsafe</source>
          <target state="translated">UNIXAddress#to_unsafe</target>
        </trans-unit>
        <trans-unit id="bfc034672f1b6b98fd5a5e7e73cb90bc73269046" translate="yes" xml:space="preserve">
          <source>UNIXAddress.from</source>
          <target state="translated">UNIXAddress.from</target>
        </trans-unit>
        <trans-unit id="4ea9e51ce8439ab643a123f84d4fd025eb5c86a7" translate="yes" xml:space="preserve">
          <source>UNIXAddress.new</source>
          <target state="translated">UNIXAddress.new</target>
        </trans-unit>
        <trans-unit id="51e808725ca49dc956368bdf060f5b61ed21f1ab" translate="yes" xml:space="preserve">
          <source>UNIXAddress.parse</source>
          <target state="translated">UNIXAddress.parse</target>
        </trans-unit>
        <trans-unit id="da2c7b6da0de3b107c73279b08ff0b4db8127a0b" translate="yes" xml:space="preserve">
          <source>UNIXServer</source>
          <target state="translated">UNIXServer</target>
        </trans-unit>
        <trans-unit id="4ca01d88a801cac5ad6ea93f221de9778a8ab12b" translate="yes" xml:space="preserve">
          <source>UNIXServer.new</source>
          <target state="translated">UNIXServer.new</target>
        </trans-unit>
        <trans-unit id="0ecbaf7638370fbba84f6f1a26202df7ce7670b8" translate="yes" xml:space="preserve">
          <source>UNIXServer.open</source>
          <target state="translated">UNIXServer.open</target>
        </trans-unit>
        <trans-unit id="1f67d7929f1e87e01f133849eb5c863f94e89c6e" translate="yes" xml:space="preserve">
          <source>UNIXSocket</source>
          <target state="translated">UNIXSocket</target>
        </trans-unit>
        <trans-unit id="d81a07717e0ae0b359a505e47d3ab59e6ee8531e" translate="yes" xml:space="preserve">
          <source>UNIXSocket#path</source>
          <target state="translated">UNIXSocket#path</target>
        </trans-unit>
        <trans-unit id="a282e411344bc5b1b4b49530025ce36b0acdc19e" translate="yes" xml:space="preserve">
          <source>UNIXSocket.new</source>
          <target state="translated">UNIXSocket.new</target>
        </trans-unit>
        <trans-unit id="6ab3fc02b6d95bd42a4ae4afb90b02b3587640bc" translate="yes" xml:space="preserve">
          <source>UNIXSocket.open</source>
          <target state="translated">UNIXSocket.open</target>
        </trans-unit>
        <trans-unit id="0760861552d4c03e3284acfefa6b37c9b9716cb1" translate="yes" xml:space="preserve">
          <source>UNIXSocket.pair</source>
          <target state="translated">UNIXSocket.pair</target>
        </trans-unit>
        <trans-unit id="cb371c93c5aa0e62198efd303ae2c17474416d1a" translate="yes" xml:space="preserve">
          <source>URI</source>
          <target state="translated">URI</target>
        </trans-unit>
        <trans-unit id="7f3559b21e51b2e5303f7ac571c6a6aca2dc8095" translate="yes" xml:space="preserve">
          <source>URI#==</source>
          <target state="translated">URI#==</target>
        </trans-unit>
        <trans-unit id="f10eaabca3d6588bfadca06615625295c1e4c9e1" translate="yes" xml:space="preserve">
          <source>URI#hash</source>
          <target state="translated">URI#hash</target>
        </trans-unit>
        <trans-unit id="41f5a7e3ffddbaecb17169cd91d1b27c2557b53c" translate="yes" xml:space="preserve">
          <source>URI#host</source>
          <target state="translated">URI#host</target>
        </trans-unit>
        <trans-unit id="df3746bda92af99ae6142d5826661527cd3e4c4c" translate="yes" xml:space="preserve">
          <source>URI#path</source>
          <target state="translated">URI#path</target>
        </trans-unit>
        <trans-unit id="9472d1ae26f283b8ae7f81ae04fedc393871a121" translate="yes" xml:space="preserve">
          <source>URI#port</source>
          <target state="translated">URI#port</target>
        </trans-unit>
        <trans-unit id="3e16517599367a8aa1912e8ee0e524c91da71427" translate="yes" xml:space="preserve">
          <source>URI#to_s</source>
          <target state="translated">URI#to_s</target>
        </trans-unit>
        <trans-unit id="e3a947e0e83b74ce0731bf52e261a299248e6852" translate="yes" xml:space="preserve">
          <source>URI#user</source>
          <target state="translated">URI#user</target>
        </trans-unit>
        <trans-unit id="8e63c0a93c353417ce8f2c29e3d776c3080fecf9" translate="yes" xml:space="preserve">
          <source>URI.new</source>
          <target state="translated">URI.new</target>
        </trans-unit>
        <trans-unit id="b3d917e0846c14449766ccf009d492898a625484" translate="yes" xml:space="preserve">
          <source>URI::Error</source>
          <target state="translated">URI::Error</target>
        </trans-unit>
        <trans-unit id="9ced0ec8d1a9aef2147053b598f6d364a5db8f41" translate="yes" xml:space="preserve">
          <source>URI::Punycode</source>
          <target state="translated">URI::Punycode</target>
        </trans-unit>
        <trans-unit id="45be10951674a3123971f36b8b830d97fe857c8f" translate="yes" xml:space="preserve">
          <source>URL Encoding</source>
          <target state="translated">URLエンコーディング</target>
        </trans-unit>
        <trans-unit id="85bbdf5186e7ac90f98a65f56c6e5d72ba3e59e7" translate="yes" xml:space="preserve">
          <source>URL-decodes &lt;em&gt;string&lt;/em&gt; and writes the result to &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;文字列&lt;/em&gt;をURLデコードし、結果を&lt;em&gt;ioに&lt;/em&gt;書き込みます。</target>
        </trans-unit>
        <trans-unit id="2aae4b0a8666571530d8b64fed0596d933c272b6" translate="yes" xml:space="preserve">
          <source>URL-decodes &lt;em&gt;string&lt;/em&gt; as &lt;a href=&quot;https://url.spec.whatwg.org/#urlencoded-serializing&quot;&gt;&lt;code&gt;x-www-form-urlencoded&lt;/code&gt;&lt;/a&gt; and writes the result to &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;文字列&lt;/em&gt;を&lt;a href=&quot;https://url.spec.whatwg.org/#urlencoded-serializing&quot;&gt; &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; &lt;/a&gt;としてURLデコードし、結果を&lt;em&gt;ioに&lt;/em&gt;書き込みます。</target>
        </trans-unit>
        <trans-unit id="cbac0c254f530d1536e5d9c7badc0d228eb0e77f" translate="yes" xml:space="preserve">
          <source>URL-decodes &lt;em&gt;string&lt;/em&gt; as &lt;a href=&quot;https://url.spec.whatwg.org/#urlencoded-serializing&quot;&gt;&lt;code&gt;x-www-form-urlencoded&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;文字列&lt;/em&gt;を&lt;a href=&quot;https://url.spec.whatwg.org/#urlencoded-serializing&quot;&gt; &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; &lt;/a&gt;としてURLデコードし&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c8dc3d6db6d002b06031b7b463893cb146305abb" translate="yes" xml:space="preserve">
          <source>URL-decodes &lt;em&gt;string&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;文字列を&lt;/em&gt; URLデコードし&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="22a1945f3dc89a195cda7803ab4830822c268a48" translate="yes" xml:space="preserve">
          <source>URL-decodes a string and writes the result to &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">文字列をURLデコードし、結果を&lt;em&gt;ioに&lt;/em&gt;書き込みます。</target>
        </trans-unit>
        <trans-unit id="b0fa88deb79e899bb4e00fcb3e2d919136b3db16" translate="yes" xml:space="preserve">
          <source>URL-encodes &lt;em&gt;string&lt;/em&gt; and writes the result to &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;文字列&lt;/em&gt;をURLエンコードし、結果を&lt;em&gt;ioに&lt;/em&gt;書き込みます。</target>
        </trans-unit>
        <trans-unit id="2fa97e49c23f3bf2d14ace84a095b1d39f758574" translate="yes" xml:space="preserve">
          <source>URL-encodes &lt;em&gt;string&lt;/em&gt; and writes the result to an &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;文字列&lt;/em&gt;をURLエンコードし、結果を &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に書き込みます。</target>
        </trans-unit>
        <trans-unit id="d43c32d350e78968140f62decd9a8406e6078ca9" translate="yes" xml:space="preserve">
          <source>URL-encodes &lt;em&gt;string&lt;/em&gt; as &lt;a href=&quot;https://url.spec.whatwg.org/#urlencoded-serializing&quot;&gt;&lt;code&gt;x-www-form-urlencoded&lt;/code&gt;&lt;/a&gt; and writes the result to &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;文字列&lt;/em&gt;を&lt;a href=&quot;https://url.spec.whatwg.org/#urlencoded-serializing&quot;&gt; &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; &lt;/a&gt;としてURLエンコードし、結果を&lt;em&gt;ioに&lt;/em&gt;書き込みます。</target>
        </trans-unit>
        <trans-unit id="1f96b98641d4bd820e6d4022430fa28bbba3e35b" translate="yes" xml:space="preserve">
          <source>URL-encodes &lt;em&gt;string&lt;/em&gt; as &lt;a href=&quot;https://url.spec.whatwg.org/#urlencoded-serializing&quot;&gt;&lt;code&gt;x-www-form-urlencoded&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;文字列&lt;/em&gt;を&lt;a href=&quot;https://url.spec.whatwg.org/#urlencoded-serializing&quot;&gt; &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; &lt;/a&gt;としてURLエンコードし&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="1b9054c84476a16156b8ca337626254e108980bf" translate="yes" xml:space="preserve">
          <source>URL-encodes &lt;em&gt;string&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;文字列を&lt;/em&gt; URLエンコードし&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="22a03a207c191fca4dc8c4297fac22c137514db6" translate="yes" xml:space="preserve">
          <source>URL-safe variant of &lt;code&gt;&lt;a href=&quot;random#base64(n:Int=16):String-instance-method&quot;&gt;#base64&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;random#base64(n:Int=16):String-instance-method&quot;&gt;#base64&lt;/a&gt;&lt;/code&gt; の URLセーフバリアント。</target>
        </trans-unit>
        <trans-unit id="21bf75a5255af008f6315cb6aca4bb3bdccee521" translate="yes" xml:space="preserve">
          <source>UUID</source>
          <target state="translated">UUID</target>
        </trans-unit>
        <trans-unit id="23df7970466bd0437a7b1fa9effbcf17ffbd516f" translate="yes" xml:space="preserve">
          <source>UUID#==</source>
          <target state="translated">UUID#==</target>
        </trans-unit>
        <trans-unit id="a20a00f0127785f8e03da11fecccf07d06c4dec5" translate="yes" xml:space="preserve">
          <source>UUID#to_s</source>
          <target state="translated">UUID#to_s</target>
        </trans-unit>
        <trans-unit id="cb771de13ed76df201900d689a7b5d53f0e31a31" translate="yes" xml:space="preserve">
          <source>UUID#urn</source>
          <target state="translated">UUID#urn</target>
        </trans-unit>
        <trans-unit id="e766352a8efa206af345c82b9a9bc54449b06fe0" translate="yes" xml:space="preserve">
          <source>UUID#v1!</source>
          <target state="translated">UUID#v1!</target>
        </trans-unit>
        <trans-unit id="007158b7b7ca6732cafe5e74e0ea2cc4ec35163d" translate="yes" xml:space="preserve">
          <source>UUID#v1?</source>
          <target state="translated">UUID#v1?</target>
        </trans-unit>
        <trans-unit id="eeb3a5d9c7452deb1e644e185b31ea0900bdaf6c" translate="yes" xml:space="preserve">
          <source>UUID#v2!</source>
          <target state="translated">UUID#v2!</target>
        </trans-unit>
        <trans-unit id="fc74a066d2e25db85ca95d390751e08f36bf6df4" translate="yes" xml:space="preserve">
          <source>UUID#v2?</source>
          <target state="translated">UUID#v2?</target>
        </trans-unit>
        <trans-unit id="dc262c3c01fda6a80918be19723d8b929b2d17df" translate="yes" xml:space="preserve">
          <source>UUID#v3!</source>
          <target state="translated">UUID#v3!</target>
        </trans-unit>
        <trans-unit id="5ce2fe59d844a6344e53d7817ee99b070c9b964d" translate="yes" xml:space="preserve">
          <source>UUID#v3?</source>
          <target state="translated">UUID#v3?</target>
        </trans-unit>
        <trans-unit id="bb831ea4603c83bf3f793784702cba595162f664" translate="yes" xml:space="preserve">
          <source>UUID#v4!</source>
          <target state="translated">UUID#v4!</target>
        </trans-unit>
        <trans-unit id="0ec31e2651864560071a47844393e0b80cbf7d8c" translate="yes" xml:space="preserve">
          <source>UUID#v4?</source>
          <target state="translated">UUID#v4?</target>
        </trans-unit>
        <trans-unit id="994068e9ec2ac8ab36e3a191d3d5356d416e0f43" translate="yes" xml:space="preserve">
          <source>UUID#v5!</source>
          <target state="translated">UUID#v5!</target>
        </trans-unit>
        <trans-unit id="a42801f7cceddc82ea62f748739236d06ea20f08" translate="yes" xml:space="preserve">
          <source>UUID#v5?</source>
          <target state="translated">UUID#v5?</target>
        </trans-unit>
        <trans-unit id="b269ce44f83e4a60eef032d09e7befe068fede56" translate="yes" xml:space="preserve">
          <source>UUID.new</source>
          <target state="translated">UUID.new</target>
        </trans-unit>
        <trans-unit id="53f2ec77ef3a77806001d83d8f3fff939fb87803" translate="yes" xml:space="preserve">
          <source>UUID::Error</source>
          <target state="translated">UUID::Error</target>
        </trans-unit>
        <trans-unit id="7d6b777bb78f858357184c0cf5af750b3f2ffa24" translate="yes" xml:space="preserve">
          <source>Unary</source>
          <target state="translated">Unary</target>
        </trans-unit>
        <trans-unit id="ca09f5dbf89ea3eafb5ab27f217efe0b06a097c4" translate="yes" xml:space="preserve">
          <source>Unary operators</source>
          <target state="translated">単項演算子</target>
        </trans-unit>
        <trans-unit id="7cf468b0163521e554345cc7c3bab88cdd4d3e25" translate="yes" xml:space="preserve">
          <source>Unary operators are written in prefix notation and have only a single operand. Thus, a method implementation receives no arguments and only operates on &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">単項演算子は接頭表記で記述され、オペランドは1つだけです。したがって、メソッドの実装は引数を受け取らず、 &lt;code&gt;self&lt;/code&gt; に対してのみ動作します。</target>
        </trans-unit>
        <trans-unit id="1de5f2b7ae5117888cf5beac0df6ad92e6ec655e" translate="yes" xml:space="preserve">
          <source>Unboxes a &lt;code&gt;Void*&lt;/code&gt; into an object of type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Void*&lt;/code&gt; ボックス化を解除して &lt;code&gt;T&lt;/code&gt; 型のオブジェクトにします。</target>
        </trans-unit>
        <trans-unit id="d173d1547b61a8e6acc7af983318b98eebbd6d57" translate="yes" xml:space="preserve">
          <source>Unboxes a &lt;code&gt;Void*&lt;/code&gt; into an object of type &lt;code&gt;T&lt;/code&gt;. Note that for this you must specify T: &lt;code&gt;&lt;a href=&quot;box&quot;&gt;Box&lt;/a&gt;(T)&lt;a href=&quot;box#unbox(pointer:Pointer(Void)):T-class-method&quot;&gt;.unbox(data)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Void*&lt;/code&gt; ボックス化を解除して &lt;code&gt;T&lt;/code&gt; 型のオブジェクトにします。このためには、T： &lt;code&gt;&lt;a href=&quot;box&quot;&gt;Box&lt;/a&gt;(T)&lt;a href=&quot;box#unbox(pointer:Pointer(Void)):T-class-method&quot;&gt;.unbox(data)&lt;/a&gt;&lt;/code&gt; を指定する必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="e5b80ab03a9adb0b785fa65bc37a745a2b903f9e" translate="yes" xml:space="preserve">
          <source>Underlying &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;s might have a different status.</source>
          <target state="translated">基礎となる &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; のステータスは異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="ca035a5ce4c3df59c37ddda21e0189a6380e3b1f" translate="yes" xml:space="preserve">
          <source>Underscore</source>
          <target state="translated">Underscore</target>
        </trans-unit>
        <trans-unit id="83919d7d04e16d2bb31f76cd70fd65ec3b7eec9b" translate="yes" xml:space="preserve">
          <source>Underscore allowed</source>
          <target state="translated">アンダースコアが許可されている</target>
        </trans-unit>
        <trans-unit id="bae6ebc3e4f7c306642bd3750721ff2db0319313" translate="yes" xml:space="preserve">
          <source>Underscores are allowed at the beginning of a variable name, but these names are reserved for the compiler, so their use is not recommended (and it also makes the code uglier to read).</source>
          <target state="translated">アンダースコアは変数名の先頭に使用できますが、これらの名前はコンパイラのために予約されているため、使用は推奨されません(また、コードが読みにくくなります)。</target>
        </trans-unit>
        <trans-unit id="e995413cdff7b2090165321fb9b962169614e6a4" translate="yes" xml:space="preserve">
          <source>Underscores can be used to make some numbers more readable:</source>
          <target state="translated">アンダースコアは、いくつかの数字を読みやすくするために使用することができます。</target>
        </trans-unit>
        <trans-unit id="9ab0bd9a6126ee4b9d7538d5c6cba7aa587f31ed" translate="yes" xml:space="preserve">
          <source>Unicode</source>
          <target state="translated">Unicode</target>
        </trans-unit>
        <trans-unit id="281339b28244a6d0c549fb74e445824dfdbf95bd" translate="yes" xml:space="preserve">
          <source>Unicode case folding, which is more far-reaching than Unicode case mapping.</source>
          <target state="translated">Unicodeの大文字小文字の折り返し、これはUnicodeの大文字小文字のマッピングよりも広範囲にわたっています。</target>
        </trans-unit>
        <trans-unit id="ab8dd58536ca90398d101cf76abe3cf1e251e514" translate="yes" xml:space="preserve">
          <source>Uninitialized variable declaration</source>
          <target state="translated">初期化されていない変数宣言</target>
        </trans-unit>
        <trans-unit id="72d1bc1786787b9f5cf6f8701a1fb442f4f59285" translate="yes" xml:space="preserve">
          <source>Union</source>
          <target state="translated">Union</target>
        </trans-unit>
        <trans-unit id="ad2c6ec9387b88fa473c66c469cbe4de08ffd0e6" translate="yes" xml:space="preserve">
          <source>Union is special in that it is a generic type but instantiating it might not return a union type:</source>
          <target state="translated">ユニオンは汎用型であるという点で特殊ですが、インスタンス化してもユニオン型を返さない場合があります。</target>
        </trans-unit>
        <trans-unit id="e96e24dd00d7582c0ef230636057fa8235546ff9" translate="yes" xml:space="preserve">
          <source>Union of classes and structs under the same hierarchy</source>
          <target state="translated">同一階層下のクラスと構造体の結合</target>
        </trans-unit>
        <trans-unit id="88a7c1ba78c10939e036e65772bf7989733a2553" translate="yes" xml:space="preserve">
          <source>Union of named tuples with the same keys</source>
          <target state="translated">同じキーを持つ名前付きタプルの結合</target>
        </trans-unit>
        <trans-unit id="68ed82c77e42d2275f353f68a974cc29356f1daa" translate="yes" xml:space="preserve">
          <source>Union of tuples of the same size</source>
          <target state="translated">同一サイズのタプルの結合</target>
        </trans-unit>
        <trans-unit id="2697f04d1c34bc0fd003a5d4f2f248be3c9842cb" translate="yes" xml:space="preserve">
          <source>Union types</source>
          <target state="translated">ユニオンタイプ</target>
        </trans-unit>
        <trans-unit id="ebff087632b16b8ff77cadf6107842b88e58cdf4" translate="yes" xml:space="preserve">
          <source>Union types rules</source>
          <target state="translated">ユニオンタイプのルール</target>
        </trans-unit>
        <trans-unit id="15d2c7da9b5addef7c793564ef91a99402f8bdac" translate="yes" xml:space="preserve">
          <source>Union(*T)</source>
          <target state="translated">Union(*T)</target>
        </trans-unit>
        <trans-unit id="8ac81596ab6fc68af3a4dcd3d930f23b6c8bf464" translate="yes" xml:space="preserve">
          <source>Union.</source>
          <target state="translated">Union.</target>
        </trans-unit>
        <trans-unit id="48bb3cc4cfa2bbd6c10b5224a15215e9bc43d151" translate="yes" xml:space="preserve">
          <source>Union. Returns a &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt; that matches any of &lt;em&gt;patterns&lt;/em&gt;.</source>
          <target state="translated">連合。いずれかの&lt;em&gt;パターンに&lt;/em&gt;一致する &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fd93fcbad3884b9ed616d68c85261d532cfccd2e" translate="yes" xml:space="preserve">
          <source>Union. Returns a &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt; that matches either of the operands.</source>
          <target state="translated">連合。いずれかのオペランドに一致する &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0d9a78f6c868ff07a420bf6eb1f4e5d142760bee" translate="yes" xml:space="preserve">
          <source>Union.new</source>
          <target state="translated">Union.new</target>
        </trans-unit>
        <trans-unit id="b514e15c5e81517a2222da09d70ec8061916a429" translate="yes" xml:space="preserve">
          <source>Union: returns a new set containing all unique elements from both sets.</source>
          <target state="translated">Union:両方のセットからすべての一意の要素を含む新しいセットを返します。</target>
        </trans-unit>
        <trans-unit id="a37a7b8f6cef680785b13588a8ab8234991c28f2" translate="yes" xml:space="preserve">
          <source>Unix socket &lt;code&gt;&lt;a href=&quot;server#bind_unix(path:String):Socket::UNIXAddress-instance-method&quot;&gt;#bind_unix&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Unixソケット &lt;code&gt;&lt;a href=&quot;server#bind_unix(path:String):Socket::UNIXAddress-instance-method&quot;&gt;#bind_unix&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="afd6634a3d36e753b03e5469af0d052e14e165d5" translate="yes" xml:space="preserve">
          <source>Unknown (i.e. custom, your own).</source>
          <target state="translated">不明(つまりカスタム、自分のもの)。</target>
        </trans-unit>
        <trans-unit id="67e6e03c7dc0872d1b172a2f6397b9688cbbc755" translate="yes" xml:space="preserve">
          <source>Unknown version.</source>
          <target state="translated">不明なバージョン。</target>
        </trans-unit>
        <trans-unit id="146aca99c91362499d18f472e19350623e3ec249" translate="yes" xml:space="preserve">
          <source>Unless &lt;em&gt;follow_symlinks&lt;/em&gt; is set to &lt;code&gt;true&lt;/code&gt;, then the owner symlink itself will be changed, otherwise the owner of the symlink destination file will be changed. For example, assuming symlinks as &lt;code&gt;foo -&amp;gt; bar -&amp;gt; baz&lt;/code&gt;:</source>
          <target state="translated">&lt;em&gt;follow_symlinks&lt;/em&gt;が &lt;code&gt;true&lt;/code&gt; に設定されていない限り、所有者のシンボリックリンク自体が変更されます。それ以外の場合、シンボリックリンク先ファイルの所有者が変更されます。たとえば、シンボリックリンクを &lt;code&gt;foo -&amp;gt; bar -&amp;gt; baz&lt;/code&gt; と想定します。</target>
        </trans-unit>
        <trans-unit id="30e133577a0b680dedb286394551a52748a0a22b" translate="yes" xml:space="preserve">
          <source>Unless specified, the resuling binary will have the same name as the source file minus the extension &lt;code&gt;.cr&lt;/code&gt;.</source>
          <target state="translated">特に指定がない限り、再バイナリーは、ソースファイルと同じ名前から拡張子 &lt;code&gt;.cr&lt;/code&gt; を除いたものになります。</target>
        </trans-unit>
        <trans-unit id="8ec44175affa4e3c59e319d0db3984b1715f8e12" translate="yes" xml:space="preserve">
          <source>Unless specified, the resulting binary will have the same name as the source file minus the extension &lt;code&gt;.cr&lt;/code&gt;.</source>
          <target state="translated">特に指定がない限り、結果のバイナリは、ソースファイルから拡張子 &lt;code&gt;.cr&lt;/code&gt; を除いたものと同じ名前になります。</target>
        </trans-unit>
        <trans-unit id="61781da554926f44d767b9f2041feee5e05d9e78" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;&lt;a href=&quot;time#in(location:Location):Time-instance-method&quot;&gt;#in&lt;/a&gt;&lt;/code&gt;, which always preserves the same instant in time, &lt;code&gt;&lt;a href=&quot;time#to_local_in(location:Location)-instance-method&quot;&gt;#to_local_in&lt;/a&gt;&lt;/code&gt; adjusts the instant such that it results in the same local date-time representation. Both instants are apart from each other by the difference in zone offsets.</source>
          <target state="translated">常に同じ瞬間を保持する &lt;code&gt;&lt;a href=&quot;time#in(location:Location):Time-instance-method&quot;&gt;#in&lt;/a&gt;&lt;/code&gt; とは異なり、 &lt;code&gt;&lt;a href=&quot;time#to_local_in(location:Location)-instance-method&quot;&gt;#to_local_in&lt;/a&gt;&lt;/code&gt; はインスタントを調整して、同じローカル日付時刻表現になるようにします。両方のインスタントは、ゾーンオフセットの違いによって互いに離れています。</target>
        </trans-unit>
        <trans-unit id="df0588773525370fba8665cd28e3cede67b892d6" translate="yes" xml:space="preserve">
          <source>Unlike C, &lt;code&gt;Int32&lt;/code&gt; and &lt;code&gt;MyInt&lt;/code&gt; are not interchangeable:</source>
          <target state="translated">Cとは異なり、 &lt;code&gt;Int32&lt;/code&gt; と &lt;code&gt;MyInt&lt;/code&gt; は互換性がありません。</target>
        </trans-unit>
        <trans-unit id="0a5507cce93f0081ee0d19bafa3aba2e0e1cbe60" translate="yes" xml:space="preserve">
          <source>Unpacking block arguments</source>
          <target state="translated">ブロック引数の展開</target>
        </trans-unit>
        <trans-unit id="0d0d4fd9f47ed4c60cd8063002bf739a89b1ece9" translate="yes" xml:space="preserve">
          <source>Unreserved characters are ASCII letters, ASCII digits, &lt;code&gt;_&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt; and &lt;code&gt;~&lt;/code&gt;.</source>
          <target state="translated">予約されていない文字は、ASCII文字、ASCII数字、 &lt;code&gt;_&lt;/code&gt; 、 &lt;code&gt;.&lt;/code&gt; 、 &lt;code&gt;-&lt;/code&gt; および &lt;code&gt;~&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6448aef3b898478feae6070ba042dd3153108155" translate="yes" xml:space="preserve">
          <source>Unsafe code</source>
          <target state="translated">安全でないコード</target>
        </trans-unit>
        <trans-unit id="4790aa4aa8e73a702fe1f85cd34db97e90a21de8" translate="yes" xml:space="preserve">
          <source>Unsafe wrapper around a &lt;code&gt;&lt;a href=&quot;../pointer&quot;&gt;Pointer&lt;/a&gt;&lt;/code&gt; that allows to write values to it while advancing the location and keeping track of how many elements were written.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../pointer&quot;&gt;Pointer&lt;/a&gt;&lt;/code&gt; 安全でないラッパー。値を書き込むと同時に、位置を進め、書き込まれた要素の数を追跡できます。</target>
        </trans-unit>
        <trans-unit id="ef70d4a0b45c14713113af9e3743e4d49b4e9a21" translate="yes" xml:space="preserve">
          <source>Unsafely reinterprets the bytes of an object as being of another &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">安全にオブジェクトのバイトを別の &lt;code&gt;type&lt;/code&gt; として再解釈します。</target>
        </trans-unit>
        <trans-unit id="e91344ea16120944c87d0e0635826ca2b1e1956c" translate="yes" xml:space="preserve">
          <source>Unsigned</source>
          <target state="translated">Unsigned</target>
        </trans-unit>
        <trans-unit id="a6f47e00e036c5589eb12e237894b37fb015d365" translate="yes" xml:space="preserve">
          <source>Upgrade</source>
          <target state="translated">Upgrade</target>
        </trans-unit>
        <trans-unit id="e33eb471470fc844ac1b7296556865e5cfb26674" translate="yes" xml:space="preserve">
          <source>Upgrades this response, writing headers and yieling the connection &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; (a socket) to the given block.</source>
          <target state="translated">この応答をアップグレードして、ヘッダーを書き込み、指定されたブロックへの接続 &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; （ソケット）を渡します。</target>
        </trans-unit>
        <trans-unit id="ac9bb235f444f766f563324c50fb6a822d795e7f" translate="yes" xml:space="preserve">
          <source>Upgrades this response, writing headers and yieling the connection &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; (a socket) to the given block. The block must invoke &lt;code&gt;&lt;a href=&quot;response#close-instance-method&quot;&gt;#close&lt;/a&gt;&lt;/code&gt; afterwards, the server won't do it in this case. This is useful to implement protocol upgrades, such as websockets.</source>
          <target state="translated">この応答をアップグレードして、ヘッダーを書き込み、指定されたブロックへの接続 &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; （ソケット）を渡します。ブロックは &lt;code&gt;&lt;a href=&quot;response#close-instance-method&quot;&gt;#close&lt;/a&gt;&lt;/code&gt; 呼び出す必要があります。この場合、サーバーはそれを行いません。これは、WebSocketなどのプロトコルのアップグレードを実装するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="6eaf5c9a8e0166e47947113082dda88a826b0876" translate="yes" xml:space="preserve">
          <source>Upgrades this response, writing headers and yieling the connection &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; (a socket) to the given block. This is useful to implement protocol upgrades, such as websockets.</source>
          <target state="translated">この応答をアップグレードし、ヘッダーを書き込んで、指定されたブロックへの接続 &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; （ソケット）を生成します。これは、WebSocketなどのプロトコルアップグレードを実装するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="342c659777997bec12f413246e5e24d6a8317e2a" translate="yes" xml:space="preserve">
          <source>Usage Example</source>
          <target state="translated">使用例</target>
        </trans-unit>
        <trans-unit id="fec43ce445f974147bd0eb223a50147e7fb7202d" translate="yes" xml:space="preserve">
          <source>Usage example:</source>
          <target state="translated">使用例。</target>
        </trans-unit>
        <trans-unit id="d6b31ffefa15017554abaae7ae48f75d07bddc79" translate="yes" xml:space="preserve">
          <source>Usage for casting to a bigger type</source>
          <target state="translated">大型タイプへのキャスティングの用途</target>
        </trans-unit>
        <trans-unit id="a594436c1b6f14dd1853e99e1dda75abfd108065" translate="yes" xml:space="preserve">
          <source>Usage for when the compiler can't infer the type of a block</source>
          <target state="translated">コンパイラがブロックの型を推測できない場合の使用法</target>
        </trans-unit>
        <trans-unit id="fa6aab9b79e7f6a3cad2ad6e1c5c045d2df7e961" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;coding_style&quot;&gt;standard coding style&lt;/a&gt; so your project will be navigable and readable to others.</source>
          <target state="translated">&lt;a href=&quot;coding_style&quot;&gt;標準のコーディングスタイルを&lt;/a&gt;使用して、プロジェクトを他の人が読みやすく、読みやすくします。</target>
        </trans-unit>
        <trans-unit id="aadd0ddd671dfe802e6402ebdab02545172a23be" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;:ditto:&lt;/code&gt; to use the same comment as in the previous declaration.</source>
          <target state="translated">使用 &lt;code&gt;:ditto:&lt;/code&gt; 前の宣言のように同じコメントを使用します。</target>
        </trans-unit>
        <trans-unit id="aee33e9155544e28e2f91c721691ca70718bcc0e" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;:nodoc:&lt;/code&gt; to hide public declarations from the generated documentation. Private and protected methods are always hidden.</source>
          <target state="translated">&lt;code&gt;:nodoc:&lt;/code&gt; を使用して、生成されたドキュメントからパブリック宣言を非表示にします。プライベートメソッドと保護メソッドは常に非表示になっています。</target>
        </trans-unit>
        <trans-unit id="cfc797cb2e95c1786e994415f78fe8fe12dba4e3" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;accesstoken#authenticate(request:HTTP::Request,tls)-instance-method&quot;&gt;#authenticate&lt;/a&gt;&lt;/code&gt; to authenticate an &lt;code&gt;&lt;a href=&quot;../http/client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;accesstoken#authenticate(request:HTTP::Request,tls)-instance-method&quot;&gt;#authenticate&lt;/a&gt;&lt;/code&gt; を使用して &lt;code&gt;&lt;a href=&quot;../http/client&quot;&gt;HTTP::Client&lt;/a&gt;&lt;/code&gt; を認証します。</target>
        </trans-unit>
        <trans-unit id="a9344b67cd18d1ec433b806c69c5fb5307f69a56" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;array#clone-instance-method&quot;&gt;#clone&lt;/a&gt;&lt;/code&gt; if you want a deep copy.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;array#clone-instance-method&quot;&gt;#clone&lt;/a&gt;&lt;/code&gt; なコピーが必要な場合は#cloneを使用します。</target>
        </trans-unit>
        <trans-unit id="5c1550826895624df5269db62f12804e5067342f" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;array#dup-instance-method&quot;&gt;#dup&lt;/a&gt;&lt;/code&gt; if you want a shallow copy.</source>
          <target state="translated">浅いコピーが必要な場合は、 &lt;code&gt;&lt;a href=&quot;array#dup-instance-method&quot;&gt;#dup&lt;/a&gt;&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="cd368a3c65645c2af92baab1ee2cf2df6be2b1fe" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;deque#dup-instance-method&quot;&gt;#dup&lt;/a&gt;&lt;/code&gt; if you want a shallow copy.</source>
          <target state="translated">浅いコピーが必要な場合は、 &lt;code&gt;&lt;a href=&quot;deque#dup-instance-method&quot;&gt;#dup&lt;/a&gt;&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="7349652caa3a8913ffaadf20c461087e07fc18e9" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;json#build(io:IO,indent=nil,&amp;amp;):Nil-class-method&quot;&gt;JSON.build&lt;/a&gt;&lt;/code&gt;, which uses &lt;code&gt;&lt;a href=&quot;json/builder&quot;&gt;JSON::Builder&lt;/a&gt;&lt;/code&gt;, to generate JSON by emitting scalars, arrays and objects:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;json/builder&quot;&gt;JSON::Builder&lt;/a&gt;&lt;/code&gt; を使用する &lt;code&gt;&lt;a href=&quot;json#build(io:IO,indent=nil,&amp;amp;):Nil-class-method&quot;&gt;JSON.build&lt;/a&gt;&lt;/code&gt; を使用して、スカラー、配列、オブジェクトを発行してJSONを生成します。</target>
        </trans-unit>
        <trans-unit id="a68b8ca8058cf46c189c5cab6da254e0b285134d" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;json#build(io:IO,indent=nil,&amp;amp;block)-class-method&quot;&gt;JSON.build&lt;/a&gt;&lt;/code&gt;, which uses &lt;code&gt;&lt;a href=&quot;json/builder&quot;&gt;JSON::Builder&lt;/a&gt;&lt;/code&gt;, to generate JSON by emitting scalars, arrays and objects:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;json/builder&quot;&gt;JSON::Builder&lt;/a&gt;&lt;/code&gt; を使用する &lt;code&gt;&lt;a href=&quot;json#build(io:IO,indent=nil,&amp;amp;block)-class-method&quot;&gt;JSON.build&lt;/a&gt;&lt;/code&gt; を使用して、スカラー、配列、オブジェクトを発行してJSONを生成します。</target>
        </trans-unit>
        <trans-unit id="062b57e8c151131bf8fc9dd9ba658b52203b5038" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;json#mapping(**_properties_)-macro&quot;&gt;JSON.mapping&lt;/a&gt;&lt;/code&gt; to define how an object is mapped to JSON, making it the recommended easy, type-safe and efficient option for parsing and generating JSON. Refer to that module's documentation to learn about it.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;json#mapping(**_properties_)-macro&quot;&gt;JSON.mapping&lt;/a&gt;&lt;/code&gt; オブジェクトは、それJSONを解析し、生成するための簡単な推奨、タイプセーフで効率的なオプション作り、JSONにマッピングされる方法を定義します。これについては、そのモジュールのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="22f96add657155609ea90f32780880b476c66b37" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;log#setup(*,builder:Log::Builder=Log.builder,&amp;amp;)-class-method&quot;&gt;Log.setup&lt;/a&gt;&lt;/code&gt; methods to indicate which sources should go to which backends.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;log#setup(*,builder:Log::Builder=Log.builder,&amp;amp;)-class-method&quot;&gt;Log.setup&lt;/a&gt;&lt;/code&gt; メソッドを使用して、どのソースをどのバックエンドに送信するかを指定します。</target>
        </trans-unit>
        <trans-unit id="4f84a337db76dcbe209a8c0a88ca152523c8fbcf" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;time#to_rfc3339(*,fraction_digits:Int=0)-instance-method&quot;&gt;#to_rfc3339&lt;/a&gt;&lt;/code&gt; to format a &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; according to .</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time#to_rfc3339(*,fraction_digits:Int=0)-instance-method&quot;&gt;#to_rfc3339&lt;/a&gt;&lt;/code&gt; を使用して、に従って &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; をフォーマットします。</target>
        </trans-unit>
        <trans-unit id="2ba7b110fd82b770658a226c3930aaf08466e691" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;time#to_rfc3339-instance-method&quot;&gt;#to_rfc3339&lt;/a&gt;&lt;/code&gt; to format a &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; according to .</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time#to_rfc3339-instance-method&quot;&gt;#to_rfc3339&lt;/a&gt;&lt;/code&gt; を使用して、に従って &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; をフォーマットします。</target>
        </trans-unit>
        <trans-unit id="523787bfb8088b792f28f6c49c0d7279d0f91c4a" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;xml#build(version:String?=nil,encoding:String?=nil,indent=nil,quote_char=nil,&amp;amp;)-class-method&quot;&gt;XML.build&lt;/a&gt;&lt;/code&gt;, which uses an &lt;code&gt;&lt;a href=&quot;xml/builder&quot;&gt;XML::Builder&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xml/builder&quot;&gt;XML::Builder&lt;/a&gt;&lt;/code&gt; を使用する &lt;code&gt;&lt;a href=&quot;xml#build(version:String?=nil,encoding:String?=nil,indent=nil,quote_char=nil,&amp;amp;)-class-method&quot;&gt;XML.build&lt;/a&gt;&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="c1201f6c47f4a48dbbba02fddc0c0264cf045cb9" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;xml#build(version:String?=nil,encoding:String?=nil,indent=nil,quote_char=nil,&amp;amp;block)-class-method&quot;&gt;XML.build&lt;/a&gt;&lt;/code&gt;, which uses an &lt;code&gt;&lt;a href=&quot;xml/builder&quot;&gt;XML::Builder&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xml/builder&quot;&gt;XML::Builder&lt;/a&gt;&lt;/code&gt; を使用する &lt;code&gt;&lt;a href=&quot;xml#build(version:String?=nil,encoding:String?=nil,indent=nil,quote_char=nil,&amp;amp;block)-class-method&quot;&gt;XML.build&lt;/a&gt;&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="7f1497abae9e45f198d701a6f6e08aa2b4c608dc" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;zip/writer&quot;&gt;Compress::Zip::Writer&lt;/a&gt;&lt;/code&gt;, which writes zip entries sequentially to any &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;zip/writer&quot;&gt;Compress::Zip::Writer&lt;/a&gt;&lt;/code&gt; 使用します。これにより、zipエントリが任意の &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に順番に書き込まれます。</target>
        </trans-unit>
        <trans-unit id="a2a28a5dc0dc7d426eb071cb75d7472c74bb6aed" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;zip/writer&quot;&gt;Zip::Writer&lt;/a&gt;&lt;/code&gt;, which writes zip entries sequentially to any &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;zip/writer&quot;&gt;Zip::Writer&lt;/a&gt;&lt;/code&gt; 使用して、任意の &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に zipエントリを順番に書き込みます。</target>
        </trans-unit>
        <trans-unit id="736b7d21e1a6cc849f4b2e56911386ce90ac4b68" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;bin/crystal&lt;/code&gt; to run your crystal files.</source>
          <target state="translated">&lt;code&gt;bin/crystal&lt;/code&gt; を使用してCrystalファイルを実行します。</target>
        </trans-unit>
        <trans-unit id="901fe3779a48d18af45a26eb800cb6504cd26b6a" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;ditto&lt;/code&gt; to use the same comment as in the previous declaration.</source>
          <target state="translated">使用 &lt;code&gt;ditto&lt;/code&gt; 前の宣言と同じコメントを使用します。</target>
        </trans-unit>
        <trans-unit id="21a4398479b99685491e8f06834206c05af24d3f" translate="yes" xml:space="preserve">
          <source>Use &lt;em&gt;level&lt;/em&gt; to only capture of the given severity or above.</source>
          <target state="translated">&lt;em&gt;レベル&lt;/em&gt;を使用して、指定された重大度以上のキャプチャのみを取得します。</target>
        </trans-unit>
        <trans-unit id="72389c5c7763097e52525af53447435db4aea02b" translate="yes" xml:space="preserve">
          <source>Use &lt;em&gt;source&lt;/em&gt; to narrow which source are captured. Values that represent single pattern like &lt;code&gt;http.*&lt;/code&gt; are allowed.</source>
          <target state="translated">&lt;em&gt;ソース&lt;/em&gt;を使用して、キャプチャする&lt;em&gt;ソース&lt;/em&gt;を絞り込みます。 &lt;code&gt;http.*&lt;/code&gt; ような単一パターンを表す値が許可されます。</target>
        </trans-unit>
        <trans-unit id="bcda62d6362fbb4b5098ce4a9dc3fc5ae25c4152" translate="yes" xml:space="preserve">
          <source>Use &lt;strong&gt;two spaces&lt;/strong&gt; to indent code inside namespaces, methods, blocks or other nested contexts. For example:</source>
          <target state="translated">&lt;strong&gt;2つのスペース&lt;/strong&gt;を使用して、名前空間、メソッド、ブロック、またはその他のネストされたコンテキスト内のコードをインデントします。例えば：</target>
        </trans-unit>
        <trans-unit id="b13bf11b2f6364ced7900c2133a1f378d91f03a6" translate="yes" xml:space="preserve">
          <source>Use Crystal's code formatter</source>
          <target state="translated">Crystal のコードフォーマッタを使用します。</target>
        </trans-unit>
        <trans-unit id="94f590ce6e14a2752544158bda68bf23f9bcf9f5" translate="yes" xml:space="preserve">
          <source>Use Turkic case rules:</source>
          <target state="translated">トルコ語の大文字小文字のルールを使用します。</target>
        </trans-unit>
        <trans-unit id="82d10adc28ec7b19c6c915e630e69f153acd62af" translate="yes" xml:space="preserve">
          <source>Use a database (for example MySQL)</source>
          <target state="translated">データベース(MySQLなど)を使用する</target>
        </trans-unit>
        <trans-unit id="7a2e3d9d33e39aae9360e8d5512b726786d7e69c" translate="yes" xml:space="preserve">
          <source>Use a tuple. If you use &lt;code&gt;{&quot;crystal&quot;, &quot;ruby&quot;, &quot;java&quot;}&lt;/code&gt; in the above program it will work the same way, but since a tuple doesn't involve heap memory it will be faster, consume less memory, and give more chances for the compiler to optimize the program.</source>
          <target state="translated">タプルを使用します。あなたが使用している場合は &lt;code&gt;{&quot;crystal&quot;, &quot;ruby&quot;, &quot;java&quot;}&lt;/code&gt; 上記のプログラムでは、同じように動作しますが、タプルは、ヒープメモリを必要としないので、それが速くなり、より少ないメモリを消費し、より多くのチャンスを与えますコンパイラがプログラムを最適化するために。</target>
        </trans-unit>
        <trans-unit id="95ab9bc070a0d32b7fd1e84e35e5092ec538fdc4" translate="yes" xml:space="preserve">
          <source>Use string interpolation instead of concatenation</source>
          <target state="translated">連結の代わりに文字列補間を使用する</target>
        </trans-unit>
        <trans-unit id="90d42857ab86572dcf0d421a8998222796a57cf0" translate="yes" xml:space="preserve">
          <source>Use structs when possible</source>
          <target state="translated">可能な場合は構造体を使用します。</target>
        </trans-unit>
        <trans-unit id="9e1f4810d95364f7048e6b0db111fab82576878d" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;-a&lt;/code&gt; option to create an annotated tag for releases.</source>
          <target state="translated">&lt;code&gt;-a&lt;/code&gt; オプションを使用して、リリース用の注釈付きタグを作成します。</target>
        </trans-unit>
        <trans-unit id="ec9047636a4052fa7b6ceaf74d56cb4108d46227" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;&lt;a href=&quot;entry#io:IO-instance-method&quot;&gt;#io&lt;/a&gt;&lt;/code&gt; method to read from it.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;entry#io:IO-instance-method&quot;&gt;#io&lt;/a&gt;&lt;/code&gt; メソッドを使用して読み取ります。</target>
        </trans-unit>
        <trans-unit id="7656de05ad56130a176e7ebbd83e7f708cc6ede3" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;&lt;a href=&quot;entry#open(&amp;amp;)-instance-method&quot;&gt;#open&lt;/a&gt;&lt;/code&gt; method to read from it.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;entry#open(&amp;amp;)-instance-method&quot;&gt;#open&lt;/a&gt;&lt;/code&gt; メソッドを使用して読み取ります。</target>
        </trans-unit>
        <trans-unit id="dbe7e6b1201ab9ec04c12735a845304b6d7559b2" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;&lt;a href=&quot;entry#open(&amp;amp;block)-instance-method&quot;&gt;#open&lt;/a&gt;&lt;/code&gt; method to read from it.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;entry#open(&amp;amp;block)-instance-method&quot;&gt;#open&lt;/a&gt;&lt;/code&gt; メソッドを使用して読み取ります。</target>
        </trans-unit>
        <trans-unit id="2cdc38daa2c39b1cca4cfd186cbc493675f51de3" translate="yes" xml:space="preserve">
          <source>Use the IO of the parent process.</source>
          <target state="translated">親プロセスのIOを使用します。</target>
        </trans-unit>
        <trans-unit id="c532df89dff23be55f6291da160d64d4fb8404d0" translate="yes" xml:space="preserve">
          <source>Use the SAX1 interface internally</source>
          <target state="translated">内部でSAX1インターフェースを使用する</target>
        </trans-unit>
        <trans-unit id="b6fc8b1666e97f066b076a5f9260e6a08fe11451" translate="yes" xml:space="preserve">
          <source>Use the third person: &lt;code&gt;Returns the number of horns this unicorn has&lt;/code&gt; instead of &lt;code&gt;Return the number of horns this unicorn has&lt;/code&gt;.</source>
          <target state="translated">第三者を使用する： &lt;code&gt;Returns the number of horns this unicorn has&lt;/code&gt; の代わりに、 &lt;code&gt;Return the number of horns this unicorn has&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="042db7bf50c7773d7d471f8bdda05b087a6a8311" translate="yes" xml:space="preserve">
          <source>Use this method to release resources allocated by external libraries that are not directly managed by Crystal garbage collector.</source>
          <target state="translated">このメソッドを使用して、Crystal ガベージコレクタで直接管理されていない外部ライブラリによって割り当てられたリソースを解放します。</target>
        </trans-unit>
        <trans-unit id="59649ad0677a0da9688ee80c2b56bb46f164597c" translate="yes" xml:space="preserve">
          <source>Use this setter to provide a custom formatter. The &lt;code&gt;&lt;a href=&quot;logger&quot;&gt;Logger&lt;/a&gt;&lt;/code&gt; will invoke it with the following arguments:</source>
          <target state="translated">このセッターを使用して、カスタムフォーマッターを提供します。 &lt;code&gt;&lt;a href=&quot;logger&quot;&gt;Logger&lt;/a&gt;&lt;/code&gt; 次の引数でそれを呼び出します。</target>
        </trans-unit>
        <trans-unit id="4650bdbf37b4eff5f86f55ccd3c3ef42c67642f0" translate="yes" xml:space="preserve">
          <source>Use this tool to unify code styles and to submit documentation improvements to Crystal itself.</source>
          <target state="translated">このツールを使用してコードスタイルを統一し、ドキュメントの改善を Crystal 自体に提出します。</target>
        </trans-unit>
        <trans-unit id="3b1895481a57df14896ac3b049b1c960ff6d8d99" translate="yes" xml:space="preserve">
          <source>UseDefault</source>
          <target state="translated">UseDefault</target>
        </trans-unit>
        <trans-unit id="170f7a5ab48bb042a515e767f43c8943b57ec900" translate="yes" xml:space="preserve">
          <source>UseDefault#clone</source>
          <target state="translated">UseDefault#clone</target>
        </trans-unit>
        <trans-unit id="1a1a034a6d55580dc8c0444abffaff3911376abb" translate="yes" xml:space="preserve">
          <source>UseDefault#copy_with</source>
          <target state="translated">UseDefault#copy_with</target>
        </trans-unit>
        <trans-unit id="09f181b240e32fe51224ffd7e4d49a1307e15aaa" translate="yes" xml:space="preserve">
          <source>UseDefault.new</source>
          <target state="translated">UseDefault.new</target>
        </trans-unit>
        <trans-unit id="aa3d2a4260f23ece68d53bb878b6888cd1fe414c" translate="yes" xml:space="preserve">
          <source>Used for any error that is fatal to the operation, but not to the service or application.</source>
          <target state="translated">サービスやアプリケーションではなく、操作に致命的なエラーが発生した場合に使用されます。</target>
        </trans-unit>
        <trans-unit id="b9cbd34f2f82900e30f0a9b8a1e9ead5e2aafed0" translate="yes" xml:space="preserve">
          <source>Used for any error that is forcing a shutdown of the service or application</source>
          <target state="translated">サービスやアプリケーションを強制的にシャットダウンするようなエラーに使用されます。</target>
        </trans-unit>
        <trans-unit id="a93eabf10122b5b62edbdaa0c5b4aeaa0e4fbe6e" translate="yes" xml:space="preserve">
          <source>Used for conditions that can potentially cause application oddities, but that can be automatically recovered.</source>
          <target state="translated">アプリケーションの異常を引き起こす可能性があるが、自動的に回復することができる状態に使用されます。</target>
        </trans-unit>
        <trans-unit id="28ae57ceedf037eeada46c674b5a755455d9e1ca" translate="yes" xml:space="preserve">
          <source>Used for generally useful information to log.</source>
          <target state="translated">一般的に有用な情報をログに記録するために使用します。</target>
        </trans-unit>
        <trans-unit id="e37188c34b932c125c8304c7275031529aca5983" translate="yes" xml:space="preserve">
          <source>Used for information that is diagnostically helpful to people more than just developers (IT, sysadmins, etc.).</source>
          <target state="translated">開発者以外の人(IT、シスアドなど)にも診断的に役立つ情報として利用。</target>
        </trans-unit>
        <trans-unit id="4924ae199994a0d261f79ce710b711a41bf0d925" translate="yes" xml:space="preserve">
          <source>Used for normal but significant conditions.</source>
          <target state="translated">通常の状態ではあるが、著しい状態のときに使用します。</target>
        </trans-unit>
        <trans-unit id="14606fef63f19929f628f0a810276a22051bb642" translate="yes" xml:space="preserve">
          <source>Used for tracing the code and trying to find one part of a function specifically.</source>
          <target state="translated">コードをトレースしたり、関数のある部分を具体的に見つけようとするときに使用します。</target>
        </trans-unit>
        <trans-unit id="429e08c47989cffc1544d0939e5ebd8e11f2d650" translate="yes" xml:space="preserve">
          <source>Used in &lt;code&gt;&lt;a href=&quot;../log#setup(*,builder:Log::Builder=Log.builder,&amp;amp;)-class-method&quot;&gt;Log.setup&lt;/a&gt;&lt;/code&gt; methods to configure the binding to be used.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../log#setup(*,builder:Log::Builder=Log.builder,&amp;amp;)-class-method&quot;&gt;Log.setup&lt;/a&gt;&lt;/code&gt; メソッドで使用され、使用されるバインディングを構成します。</target>
        </trans-unit>
        <trans-unit id="8d618eb3f948d1aebff6643b21efcfa0e2383440" translate="yes" xml:space="preserve">
          <source>Used only for severity level filter.</source>
          <target state="translated">重大度レベルフィルタにのみ使用します。</target>
        </trans-unit>
        <trans-unit id="dd5d304d23232f892e43f148ee02f64c01733d36" translate="yes" xml:space="preserve">
          <source>User CPU time</source>
          <target state="translated">ユーザーCPU時間</target>
        </trans-unit>
        <trans-unit id="ef50ee923f3e65cbc931270d94f8f0d5672f9897" translate="yes" xml:space="preserve">
          <source>User CPU time of children</source>
          <target state="translated">子のユーザーCPU時間</target>
        </trans-unit>
        <trans-unit id="04fd67b62dd92fbe1383d36dd5ac2eb73dad8b79" translate="yes" xml:space="preserve">
          <source>User#==</source>
          <target state="translated">User#==</target>
        </trans-unit>
        <trans-unit id="4d47675622ad24100dbe30618f0c8a00a1856976" translate="yes" xml:space="preserve">
          <source>User#group_id</source>
          <target state="translated">User#group_id</target>
        </trans-unit>
        <trans-unit id="25ee08ef5e1c87c87500230053e8dd681aefe8bf" translate="yes" xml:space="preserve">
          <source>User#hash</source>
          <target state="translated">User#hash</target>
        </trans-unit>
        <trans-unit id="5f616482728b8672951f29fb0710f808175bbec0" translate="yes" xml:space="preserve">
          <source>User#home_directory</source>
          <target state="translated">User#home_directory</target>
        </trans-unit>
        <trans-unit id="5fb647e92030d15c1341ee6f3c021ea8ff1cd415" translate="yes" xml:space="preserve">
          <source>User#id</source>
          <target state="translated">User#id</target>
        </trans-unit>
        <trans-unit id="f189fddc43401cc333bf1791b69b9ee4e1c4eb95" translate="yes" xml:space="preserve">
          <source>User#name</source>
          <target state="translated">User#name</target>
        </trans-unit>
        <trans-unit id="681f9274e907a8fc12e61e58f6c5d500ee78696d" translate="yes" xml:space="preserve">
          <source>User#shell</source>
          <target state="translated">User#shell</target>
        </trans-unit>
        <trans-unit id="d623d5934f47373890c4e3f41907907180dca06f" translate="yes" xml:space="preserve">
          <source>User#to_s</source>
          <target state="translated">User#to_s</target>
        </trans-unit>
        <trans-unit id="962c4f358985518a89362f5e98e7a7c257237a8d" translate="yes" xml:space="preserve">
          <source>User#username</source>
          <target state="translated">User#username</target>
        </trans-unit>
        <trans-unit id="387dc3601c20ac2c21772c6a50fb5126a16d6893" translate="yes" xml:space="preserve">
          <source>User.find_by</source>
          <target state="translated">User.find_by</target>
        </trans-unit>
        <trans-unit id="eaaa805614eba9fdabd4883ab6c9340ec0902589" translate="yes" xml:space="preserve">
          <source>User.find_by?</source>
          <target state="translated">User.find_by?</target>
        </trans-unit>
        <trans-unit id="a5680a266e5f966389b0a9376dcc619b53a9c6de" translate="yes" xml:space="preserve">
          <source>Users can be retrieved by either username or their user ID:</source>
          <target state="translated">ユーザーは、ユーザー名またはユーザーIDのいずれかで検索することができます。</target>
        </trans-unit>
        <trans-unit id="461d3a4bdbf00a29756f9df770b98aed5839d756" translate="yes" xml:space="preserve">
          <source>Users can define their own annotations using the &lt;code&gt;annotation&lt;/code&gt; keyword, which works similarly to defining a &lt;code&gt;class&lt;/code&gt; or &lt;code&gt;struct&lt;/code&gt;.</source>
          <target state="translated">ユーザーは、 &lt;code&gt;class&lt;/code&gt; または &lt;code&gt;struct&lt;/code&gt; を定義するのと同様に機能する &lt;code&gt;annotation&lt;/code&gt; キーワードを使用して、独自の注釈を定義できます。</target>
        </trans-unit>
        <trans-unit id="7f7eff0769ab459964f4c6eedcf1fde41224839a" translate="yes" xml:space="preserve">
          <source>Uses &lt;code&gt;&lt;a href=&quot;time/format/http_date&quot;&gt;Time::Format::HTTP_DATE&lt;/a&gt;&lt;/code&gt; as formatter.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time/format/http_date&quot;&gt;Time::Format::HTTP_DATE&lt;/a&gt;&lt;/code&gt; としてTime :: Format :: HTTP_DATEを使用します。</target>
        </trans-unit>
        <trans-unit id="4e34432db2330f9c19723c854fdd1be30f0e28c5" translate="yes" xml:space="preserve">
          <source>Uses &lt;code&gt;&lt;a href=&quot;time/format/http_date&quot;&gt;Time::Format::HTTP_DATE&lt;/a&gt;&lt;/code&gt; as parser.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time/format/http_date&quot;&gt;Time::Format::HTTP_DATE&lt;/a&gt;&lt;/code&gt; をパーサーとして使用します。</target>
        </trans-unit>
        <trans-unit id="1bdfb47219332ece87f955440e73abb1a0dee9ec" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;%x&lt;/code&gt; in the above example, we declare a variable whose name is guaranteed not to conflict with local variables in the current scope.</source>
          <target state="translated">上記の例で &lt;code&gt;%x&lt;/code&gt; を使用して、現在のスコープのローカル変数と競合しないことが保証されている名前の変数を宣言します。</target>
        </trans-unit>
        <trans-unit id="eb0e52fd637eb7172c5d7e51090534b6ccb7bf6b" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;&lt;a href=&quot;time#utc:Time-class-method&quot;&gt;.utc&lt;/a&gt;&lt;/code&gt;, the location is &lt;code&gt;&lt;a href=&quot;time/location#UTC&quot;&gt;Time::Location::UTC&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time#utc:Time-class-method&quot;&gt;.utc&lt;/a&gt;&lt;/code&gt; を使用すると、場所は &lt;code&gt;&lt;a href=&quot;time/location#UTC&quot;&gt;Time::Location::UTC&lt;/a&gt;&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="b2d7f2e93220665c0d529b7407d8487df9903c50" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;Readline&lt;/code&gt; and &lt;code&gt;NCurses&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Readline&lt;/code&gt; と &lt;code&gt;NCurses&lt;/code&gt; の使用</target>
        </trans-unit>
        <trans-unit id="b24b9f242342b5146cbccbf153f287f18f948fff" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;Void&lt;/code&gt; is the same, but &lt;code&gt;Nil&lt;/code&gt; is more idiomatic: &lt;code&gt;Void&lt;/code&gt; is preferred in C bindings.</source>
          <target state="translated">&lt;code&gt;Void&lt;/code&gt; の使用方法は同じですが、 &lt;code&gt;Nil&lt;/code&gt; の方が慣用的です。Cバインディングでは &lt;code&gt;Void&lt;/code&gt; が推奨されます。</target>
        </trans-unit>
        <trans-unit id="4b46803e45388831a1fcaf69c4526596d1d65b6e" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;latest&lt;/code&gt; and &lt;code&gt;nightly&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;latest&lt;/code&gt; および &lt;code&gt;nightly&lt;/code&gt; 使用</target>
        </trans-unit>
        <trans-unit id="cf50fefdd6ce80e71931100e124af67269c44a18" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;latest&lt;/code&gt;, &lt;code&gt;nightly&lt;/code&gt; and a specific Crystal release all together!</source>
          <target state="translated">使用して &lt;code&gt;latest&lt;/code&gt; 、 &lt;code&gt;nightly&lt;/code&gt; 、特定のクリスタルは、すべて一緒にリリース！</target>
        </trans-unit>
        <trans-unit id="e1df8053bd9c3330dbf101fb5f4d86752c3721ed" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;nightly&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;nightly&lt;/code&gt; 使用する</target>
        </trans-unit>
        <trans-unit id="f1e887ad301db2838308801456e01403dfd27811" translate="yes" xml:space="preserve">
          <source>Using Docker</source>
          <target state="translated">Dockerを使用して</target>
        </trans-unit>
        <trans-unit id="8c0c5b189ef34d754d5048bfcfa9d4862f4491a5" translate="yes" xml:space="preserve">
          <source>Using a dash inside &lt;code&gt;&amp;lt;...&amp;gt;&lt;/code&gt; either eliminates previous indentation or removes the next newline:</source>
          <target state="translated">&lt;code&gt;&amp;lt;...&amp;gt;&lt;/code&gt; 内でダッシュを使用すると、前のインデントが削除されるか、次の改行が削除されます。</target>
        </trans-unit>
        <trans-unit id="5181a1f471b05b093b0d63e7d20fdcd86d7338d7" translate="yes" xml:space="preserve">
          <source>Using a specific Crystal release</source>
          <target state="translated">特定のクリスタルリリースを使用する</target>
        </trans-unit>
        <trans-unit id="7e4bec1ce59f54bd2d1ec52aa68d3105dedcd5f8" translate="yes" xml:space="preserve">
          <source>Using logical statements:</source>
          <target state="translated">論理的な文を使うこと。</target>
        </trans-unit>
        <trans-unit id="67917562fb8e736888fd962b0a6163999f52a330" translate="yes" xml:space="preserve">
          <source>Using loops:</source>
          <target state="translated">ループを使って</target>
        </trans-unit>
        <trans-unit id="73a3e88cbbfc6ea60348e6e8c9152418cf58c5ac" translate="yes" xml:space="preserve">
          <source>Using nightly Crystal release is as easy as:</source>
          <target state="translated">毎晩のクリスタルリリースの使用は簡単です。</target>
        </trans-unit>
        <trans-unit id="443a5721697fa53bfd5b1085ca4981dcb87cd66d" translate="yes" xml:space="preserve">
          <source>Using services</source>
          <target state="translated">サービスの利用</target>
        </trans-unit>
        <trans-unit id="4d26eb83133a393dfd81986722bff8e459b7ee16" translate="yes" xml:space="preserve">
          <source>Using the compiler</source>
          <target state="translated">コンパイラの使用</target>
        </trans-unit>
        <trans-unit id="65442bd37030b175d31500634304e30cfdceb109" translate="yes" xml:space="preserve">
          <source>Using the shorter syntax to assign an instance variable from a method argument has the same effect:</source>
          <target state="translated">メソッドの引数からインスタンス変数を代入するために短い構文を使用しても同じ効果があります。</target>
        </trans-unit>
        <trans-unit id="444e57e647ba7fbe60f27cb198c693ae59d122e0" translate="yes" xml:space="preserve">
          <source>Using the yielded &lt;code&gt;&lt;a href=&quot;log/entrieschecker&quot;&gt;EntriesChecker&lt;/a&gt;&lt;/code&gt; allows clearing the entries between statements.</source>
          <target state="translated">生成された &lt;code&gt;&lt;a href=&quot;log/entrieschecker&quot;&gt;EntriesChecker&lt;/a&gt;&lt;/code&gt; を使用すると、ステートメント間のエントリをクリアできます。</target>
        </trans-unit>
        <trans-unit id="25b2b7223c23dc52736440949be196dde2e7e99f" translate="yes" xml:space="preserve">
          <source>Using these two, we can compile a program in a Mac that will run on that Linux like this:</source>
          <target state="translated">この2つを使えば、このようにそのLinux上で動作するプログラムをMacでコンパイルすることができます。</target>
        </trans-unit>
        <trans-unit id="2d707c11c0ca83853ad15d39f6c1e1072d83679b" translate="yes" xml:space="preserve">
          <source>Using tuples is the preferred way.</source>
          <target state="translated">タプルを使用するのが好ましい方法です。</target>
        </trans-unit>
        <trans-unit id="16834c07cbdfb70cd532f7a1974fba74895d3ff4" translate="yes" xml:space="preserve">
          <source>Using, for example, &lt;code&gt;Int32&lt;/code&gt; as a type restriction makes the method only accept instances of &lt;code&gt;Int32&lt;/code&gt;:</source>
          <target state="translated">たとえば、型制限として &lt;code&gt;Int32&lt;/code&gt; を使用すると、メソッドは &lt;code&gt;Int32&lt;/code&gt; のインスタンスのみを受け入れます。</target>
        </trans-unit>
        <trans-unit id="1432fd526ae46a4b43fa7de2d09e879ce6f7179e" translate="yes" xml:space="preserve">
          <source>Usually the macro &lt;code&gt;&lt;a href=&quot;object#def_hash(*fields)-macro&quot;&gt;def_hash&lt;/a&gt;&lt;/code&gt; can be used to generate this method. Otherwise, invoke &lt;code&gt;&lt;a href=&quot;object#hash(hasher)-instance-method&quot;&gt;#hash(hasher)&lt;/a&gt;&lt;/code&gt; on each object's instance variables to accumulate the result:</source>
          <target state="translated">通常、マクロ &lt;code&gt;&lt;a href=&quot;object#def_hash(*fields)-macro&quot;&gt;def_hash&lt;/a&gt;&lt;/code&gt; を使用して、このメソッドを生成できます。それ以外の場合は、各オブジェクトのインスタンス変数で &lt;code&gt;&lt;a href=&quot;object#hash(hasher)-instance-method&quot;&gt;#hash(hasher)&lt;/a&gt;&lt;/code&gt; を呼び出して結果を蓄積します。</target>
        </trans-unit>
        <trans-unit id="7fe083fed839e632edf8b8f84c7b5b4d75427522" translate="yes" xml:space="preserve">
          <source>Usually the macro &lt;code&gt;def_hash&lt;/code&gt; can be used to generate this method. Otherwise, invoke &lt;code&gt;&lt;a href=&quot;bigdecimal#hash(hasher)-instance-method&quot;&gt;#hash(hasher)&lt;/a&gt;&lt;/code&gt; on each object's instance variables to accumulate the result:</source>
          <target state="translated">通常、マクロ &lt;code&gt;def_hash&lt;/code&gt; を使用して、このメソッドを生成できます。それ以外の場合は、各オブジェクトのインスタンス変数で &lt;code&gt;&lt;a href=&quot;bigdecimal#hash(hasher)-instance-method&quot;&gt;#hash(hasher)&lt;/a&gt;&lt;/code&gt; を呼び出して結果を蓄積します。</target>
        </trans-unit>
        <trans-unit id="9816e661a3c38913f6c4bd57a715fad6894999c7" translate="yes" xml:space="preserve">
          <source>Utilize Crystal's &lt;a href=&quot;../conventions/documenting_code&quot;&gt;built-in code formatter&lt;/a&gt; to automatically format all &lt;code&gt;.cr&lt;/code&gt; files in a directory.</source>
          <target state="translated">Crystalの&lt;a href=&quot;../conventions/documenting_code&quot;&gt;組み込みコードフォーマッタ&lt;/a&gt;を利用して、ディレクトリ内のすべての &lt;code&gt;.cr&lt;/code&gt; ファイルを自動的にフォーマットします。</target>
        </trans-unit>
        <trans-unit id="2a62ae9e6e10d5b4d844ad431e3d12dd6181892a" translate="yes" xml:space="preserve">
          <source>VaList</source>
          <target state="translated">VaList</target>
        </trans-unit>
        <trans-unit id="d1a547e17292ff4ca8d93d61b7ea683785a25645" translate="yes" xml:space="preserve">
          <source>VaList#next</source>
          <target state="translated">VaList#next</target>
        </trans-unit>
        <trans-unit id="56f5da3e7dca217bd1f012edfa5e787d678e30b1" translate="yes" xml:space="preserve">
          <source>VaList.open</source>
          <target state="translated">VaList.open</target>
        </trans-unit>
        <trans-unit id="5ab09e7092d476c63953866007807a7b3d21c4e2" translate="yes" xml:space="preserve">
          <source>Valid range for &lt;em&gt;seconds&lt;/em&gt; is &lt;code&gt;0..315_537_897_599&lt;/code&gt;. For &lt;em&gt;nanoseconds&lt;/em&gt; it is &lt;code&gt;0..999_999_999&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;秒の&lt;/em&gt;有効範囲は &lt;code&gt;0..315_537_897_599&lt;/code&gt; です。以下のために&lt;em&gt;ナノ秒&lt;/em&gt;それがある &lt;code&gt;0..999_999_999&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f0ae7b81ca8c60d136b7d54cbca761d942b6ad47" translate="yes" xml:space="preserve">
          <source>Valid value ranges for the individual fields:</source>
          <target state="translated">個々のフィールドで有効な値の範囲。</target>
        </trans-unit>
        <trans-unit id="2543dd3846f7d98ae455475c434d47dba0a277e8" translate="yes" xml:space="preserve">
          <source>Validate with the DTD</source>
          <target state="translated">DTDで検証する</target>
        </trans-unit>
        <trans-unit id="eb75fed9d0b8507635356bf213941d5bedf7751c" translate="yes" xml:space="preserve">
          <source>Validates an expectation and fails the example if it does not match.</source>
          <target state="translated">期待値を検証し、一致しない場合は例を失敗させます。</target>
        </trans-unit>
        <trans-unit id="49e0803c9d46f472b92e16b3db0440f2742958cc" translate="yes" xml:space="preserve">
          <source>Validates an expectation and fails the example if it matches.</source>
          <target state="translated">期待値を検証し、一致した場合は例を失敗させます。</target>
        </trans-unit>
        <trans-unit id="66398dda2d4b656b4f2523b9003b701e67808ad4" translate="yes" xml:space="preserve">
          <source>Validates that at some point the indicated entry was emitted</source>
          <target state="translated">ある時点で指定されたエントリが放出されたことを検証します。</target>
        </trans-unit>
        <trans-unit id="fdbe44e2c1a8ca98db40bf58467fafaf4fb74b61" translate="yes" xml:space="preserve">
          <source>Validates that the indicated entry was the next one to be emitted</source>
          <target state="translated">指定されたエントリが次に放出されるエントリであることを検証します。</target>
        </trans-unit>
        <trans-unit id="0fe6bf12cf0cf1fdfa7f331941360b716bfaf19f" translate="yes" xml:space="preserve">
          <source>Validates that there are no outstanding entries</source>
          <target state="translated">未処理のエントリがないことを検証します。</target>
        </trans-unit>
        <trans-unit id="8dce170de238b1feda2ecd9674ea3ca0d068fbcb" translate="yes" xml:space="preserve">
          <source>Value</source>
          <target state="translated">Value</target>
        </trans-unit>
        <trans-unit id="51127d011c590cc06c1287343706272a08f0dc2d" translate="yes" xml:space="preserve">
          <source>Value too large to be stored in data type</source>
          <target state="translated">値が大きすぎてデータ型に格納できません。</target>
        </trans-unit>
        <trans-unit id="3b503226549f3c35a9bfd3914ffd46e29cd5c45d" translate="yes" xml:space="preserve">
          <source>Value#==</source>
          <target state="translated">Value#==</target>
        </trans-unit>
        <trans-unit id="67de86c918c08183d07a42faa39ecd62090a4896" translate="yes" xml:space="preserve">
          <source>Value#dup</source>
          <target state="translated">Value#dup</target>
        </trans-unit>
        <trans-unit id="b31085c44e67d411598800723b960d52db36a9e3" translate="yes" xml:space="preserve">
          <source>Value#to_value</source>
          <target state="translated">Value#to_value</target>
        </trans-unit>
        <trans-unit id="fab5f9ff4f9615d94351b560809a6a573c20b2a1" translate="yes" xml:space="preserve">
          <source>Value.null</source>
          <target state="translated">Value.null</target>
        </trans-unit>
        <trans-unit id="6bd27c866147957d82d418c9ca5a3b4e1e98ab8f" translate="yes" xml:space="preserve">
          <source>Value::Kind</source>
          <target state="translated">Value::Kind</target>
        </trans-unit>
        <trans-unit id="07c23e85a4fbcd625c3cbae813c00759c98ee40d" translate="yes" xml:space="preserve">
          <source>Value::Kind#argument?</source>
          <target state="translated">Value::Kind#argument?</target>
        </trans-unit>
        <trans-unit id="18584d61e5eb9e44495cf23a5814481775d5922f" translate="yes" xml:space="preserve">
          <source>Value::Kind#basic_block?</source>
          <target state="translated">Value::Kind#basic_block?</target>
        </trans-unit>
        <trans-unit id="a4175ed479870aba2d600b66eb85f574b1547eb5" translate="yes" xml:space="preserve">
          <source>Value::Kind#block_address?</source>
          <target state="translated">Value::Kind#block_address?</target>
        </trans-unit>
        <trans-unit id="78ada0e26b95fe03f428bf48c0e4182bfa0ab90f" translate="yes" xml:space="preserve">
          <source>Value::Kind#constant_aggregate_zero?</source>
          <target state="translated">Value::Kind#constant_aggregate_zero?</target>
        </trans-unit>
        <trans-unit id="7dc6d1b21c7160f6527e42fd102b1d2f8d71d79b" translate="yes" xml:space="preserve">
          <source>Value::Kind#constant_array?</source>
          <target state="translated">Value::Kind#constant_array?</target>
        </trans-unit>
        <trans-unit id="2d9a71fed9f99ce13b8089458b2fdaa25381000f" translate="yes" xml:space="preserve">
          <source>Value::Kind#constant_data_array?</source>
          <target state="translated">Value::Kind#constant_data_array?</target>
        </trans-unit>
        <trans-unit id="384628768b88c2dc5a4b65e8a74484f1d414c646" translate="yes" xml:space="preserve">
          <source>Value::Kind#constant_data_vector?</source>
          <target state="translated">Value::Kind#constant_data_vector?</target>
        </trans-unit>
        <trans-unit id="4225e8fa1512c2dc7a948c0eae3105ee56dbeaef" translate="yes" xml:space="preserve">
          <source>Value::Kind#constant_expr?</source>
          <target state="translated">Value::Kind#constant_expr?</target>
        </trans-unit>
        <trans-unit id="6a926b1e4681900b2e55318e51094f1a4dcda62f" translate="yes" xml:space="preserve">
          <source>Value::Kind#constant_fp?</source>
          <target state="translated">Value::Kind#constant_fp?</target>
        </trans-unit>
        <trans-unit id="01bceecac0e67c9d353117f0576d53f7d714475f" translate="yes" xml:space="preserve">
          <source>Value::Kind#constant_int?</source>
          <target state="translated">Value::Kind#constant_int?</target>
        </trans-unit>
        <trans-unit id="424a5cf9c7131f28ebed7589d1f14be7c8dd39d6" translate="yes" xml:space="preserve">
          <source>Value::Kind#constant_pointer_null?</source>
          <target state="translated">Value::Kind#constant_pointer_null?</target>
        </trans-unit>
        <trans-unit id="3080dfd7d475ff65fd25883abbaf1386b161853b" translate="yes" xml:space="preserve">
          <source>Value::Kind#constant_struct?</source>
          <target state="translated">Value::Kind#constant_struct?</target>
        </trans-unit>
        <trans-unit id="59d87c6eb9849108c553b03ed95ca662963b5e2b" translate="yes" xml:space="preserve">
          <source>Value::Kind#constant_token_none?</source>
          <target state="translated">Value::Kind#constant_token_none?</target>
        </trans-unit>
        <trans-unit id="5815ec29ba6a1f207fcb0d5652b7e610b5ce6622" translate="yes" xml:space="preserve">
          <source>Value::Kind#constant_vector?</source>
          <target state="translated">Value::Kind#constant_vector?</target>
        </trans-unit>
        <trans-unit id="d64529a48280c31ccaca6fddb11465bb63716730" translate="yes" xml:space="preserve">
          <source>Value::Kind#function?</source>
          <target state="translated">Value::Kind#function?</target>
        </trans-unit>
        <trans-unit id="b4f21e64ad1560bb0cd63b7c5e341e7d7339e12b" translate="yes" xml:space="preserve">
          <source>Value::Kind#global_alias?</source>
          <target state="translated">Value::Kind#global_alias?</target>
        </trans-unit>
        <trans-unit id="cdf7bca506d77832e5cf26c1f997a66142c5d33d" translate="yes" xml:space="preserve">
          <source>Value::Kind#global_i_func?</source>
          <target state="translated">Value::Kind#global_i_func?</target>
        </trans-unit>
        <trans-unit id="4d38b76c96c8aa7f0477410286fec1e26bc5f128" translate="yes" xml:space="preserve">
          <source>Value::Kind#global_variable?</source>
          <target state="translated">Value::Kind#global_variable?</target>
        </trans-unit>
        <trans-unit id="4fe349b9bfacb8a6dd5187c0ee9e7092c90b48cd" translate="yes" xml:space="preserve">
          <source>Value::Kind#inline_asm?</source>
          <target state="translated">Value::Kind#inline_asm?</target>
        </trans-unit>
        <trans-unit id="68fbce5cdf1fa3519d948e09f4818c58878dcc08" translate="yes" xml:space="preserve">
          <source>Value::Kind#instruction?</source>
          <target state="translated">Value::Kind#instruction?</target>
        </trans-unit>
        <trans-unit id="fedf6fdcf0389479fa348094c60b53fa98b38eb7" translate="yes" xml:space="preserve">
          <source>Value::Kind#memory_def?</source>
          <target state="translated">Value::Kind#memory_def?</target>
        </trans-unit>
        <trans-unit id="a8ba08f8119f8375c9d37dfe9d2d5d62dd18dea5" translate="yes" xml:space="preserve">
          <source>Value::Kind#memory_phi?</source>
          <target state="translated">Value::Kind#memory_phi?</target>
        </trans-unit>
        <trans-unit id="881dc3ac30f3bbe761352de2b91e7a92c132279c" translate="yes" xml:space="preserve">
          <source>Value::Kind#memory_use?</source>
          <target state="translated">Value::Kind#memory_use?</target>
        </trans-unit>
        <trans-unit id="873371eef5b7620a9f441f0dab15cf7666c75046" translate="yes" xml:space="preserve">
          <source>Value::Kind#metadata_as_value?</source>
          <target state="translated">Value::Kind#metadata_as_value?</target>
        </trans-unit>
        <trans-unit id="8664adc2a7840f84f3f28fa8a6f77f0c186db5d6" translate="yes" xml:space="preserve">
          <source>Value::Kind#undef_value?</source>
          <target state="translated">Value::Kind#undef_value?</target>
        </trans-unit>
        <trans-unit id="08a39035af77fbb1c71a69223a6a1b5145763f20" translate="yes" xml:space="preserve">
          <source>ValueMethods</source>
          <target state="translated">ValueMethods</target>
        </trans-unit>
        <trans-unit id="fe64082042d3014ffe46be16251d79b8301885ba" translate="yes" xml:space="preserve">
          <source>ValueMethods#add_instruction_attribute</source>
          <target state="translated">ValueMethods#add_instruction_attribute</target>
        </trans-unit>
        <trans-unit id="c10bba2cfcdfacac69bb0774403ba69b8a797a5b" translate="yes" xml:space="preserve">
          <source>ValueMethods#alignment=</source>
          <target state="translated">ValueMethods#alignment=</target>
        </trans-unit>
        <trans-unit id="cf12caa521b309452e29f8097ff750c6a19ff736" translate="yes" xml:space="preserve">
          <source>ValueMethods#call_convention</source>
          <target state="translated">ValueMethods#call_convention</target>
        </trans-unit>
        <trans-unit id="479ebf3f3ca52bc79d0094dd4aae3567e4794f2e" translate="yes" xml:space="preserve">
          <source>ValueMethods#call_convention=</source>
          <target state="translated">ValueMethods#call_convention=</target>
        </trans-unit>
        <trans-unit id="c0ea014e49de83e1e7f9802d6706a35f7677a645" translate="yes" xml:space="preserve">
          <source>ValueMethods#const_int_get_sext_value</source>
          <target state="translated">ValueMethods#const_int_get_sext_value</target>
        </trans-unit>
        <trans-unit id="fd6566e97db80b0a61960c15f0ee2fbddfbf5b8f" translate="yes" xml:space="preserve">
          <source>ValueMethods#const_int_get_zext_value</source>
          <target state="translated">ValueMethods#const_int_get_zext_value</target>
        </trans-unit>
        <trans-unit id="3457c902e068b6e05c3cc3765873162989c714cc" translate="yes" xml:space="preserve">
          <source>ValueMethods#constant?</source>
          <target state="translated">ValueMethods#constant?</target>
        </trans-unit>
        <trans-unit id="837ebf499f0441baeca2ebf5bfc358908214e4db" translate="yes" xml:space="preserve">
          <source>ValueMethods#dump</source>
          <target state="translated">ValueMethods#dump</target>
        </trans-unit>
        <trans-unit id="16cab2781885ecc56320ae14e3a4ea7ab342842a" translate="yes" xml:space="preserve">
          <source>ValueMethods#global_constant=</source>
          <target state="translated">ValueMethods#global_constant=</target>
        </trans-unit>
        <trans-unit id="cd1d6dc211033af07c6adccf89e37b43fbc384f7" translate="yes" xml:space="preserve">
          <source>ValueMethods#global_constant?</source>
          <target state="translated">ValueMethods#global_constant?</target>
        </trans-unit>
        <trans-unit id="4231e5c7438f226ae1fb00015337e3ae41833eee" translate="yes" xml:space="preserve">
          <source>ValueMethods#initializer</source>
          <target state="translated">ValueMethods#initializer</target>
        </trans-unit>
        <trans-unit id="1adf170285831c3ec6815fe113c240c5f5bc3e9f" translate="yes" xml:space="preserve">
          <source>ValueMethods#initializer=</source>
          <target state="translated">ValueMethods#initializer=</target>
        </trans-unit>
        <trans-unit id="8804953509bdccb2204997e01e3cbb27a27f9795" translate="yes" xml:space="preserve">
          <source>ValueMethods#inspect</source>
          <target state="translated">ValueMethods#inspect</target>
        </trans-unit>
        <trans-unit id="32fbee02004e0c79d5d5f3f4fddf86d7bc071a8e" translate="yes" xml:space="preserve">
          <source>ValueMethods#kind</source>
          <target state="translated">ValueMethods#kind</target>
        </trans-unit>
        <trans-unit id="e79311356eaee9b01e3d6c6b2d970d7c2a9457ea" translate="yes" xml:space="preserve">
          <source>ValueMethods#linkage</source>
          <target state="translated">ValueMethods#linkage</target>
        </trans-unit>
        <trans-unit id="fc440c2813ecc125d6037c9e8c12bf96d423f16e" translate="yes" xml:space="preserve">
          <source>ValueMethods#linkage=</source>
          <target state="translated">ValueMethods#linkage=</target>
        </trans-unit>
        <trans-unit id="32b965013e30ae6980ed4881e7a345055637da7e" translate="yes" xml:space="preserve">
          <source>ValueMethods#name</source>
          <target state="translated">ValueMethods#name</target>
        </trans-unit>
        <trans-unit id="9b7d3739018f53660fcea8bcc4da4dfa27988c3d" translate="yes" xml:space="preserve">
          <source>ValueMethods#name=</source>
          <target state="translated">ValueMethods#name=</target>
        </trans-unit>
        <trans-unit id="2fae34b5562c167c8f8f33827b343f3397d2226c" translate="yes" xml:space="preserve">
          <source>ValueMethods#ordering=</source>
          <target state="translated">ValueMethods#ordering=</target>
        </trans-unit>
        <trans-unit id="3d3510fe5eeda2c4988f0e558d2c2a49110dac27" translate="yes" xml:space="preserve">
          <source>ValueMethods#thread_local=</source>
          <target state="translated">ValueMethods#thread_local=</target>
        </trans-unit>
        <trans-unit id="09f61fe2812dfd14fa61d2a08205db065cd80622" translate="yes" xml:space="preserve">
          <source>ValueMethods#thread_local?</source>
          <target state="translated">ValueMethods#thread_local?</target>
        </trans-unit>
        <trans-unit id="d866a00fbe722779aeca0e9ba956121763aa8d9a" translate="yes" xml:space="preserve">
          <source>ValueMethods#to_unsafe</source>
          <target state="translated">ValueMethods#to_unsafe</target>
        </trans-unit>
        <trans-unit id="340eed6ee8cd9f8ae327cbf331687ace0f853892" translate="yes" xml:space="preserve">
          <source>ValueMethods#to_value</source>
          <target state="translated">ValueMethods#to_value</target>
        </trans-unit>
        <trans-unit id="66a1cdc9f42ef0e7fd116939af414d79706a220f" translate="yes" xml:space="preserve">
          <source>ValueMethods#type</source>
          <target state="translated">ValueMethods#type</target>
        </trans-unit>
        <trans-unit id="1c074c11e0c70ee1cfb9fc09ae1de2007f2849e3" translate="yes" xml:space="preserve">
          <source>ValueMethods#volatile=</source>
          <target state="translated">ValueMethods#volatile=</target>
        </trans-unit>
        <trans-unit id="e2b1c23f3008dc58f7eaeb970e7fe4324a520e55" translate="yes" xml:space="preserve">
          <source>ValueMethods.new</source>
          <target state="translated">ValueMethods.new</target>
        </trans-unit>
        <trans-unit id="f90ae5e183665038fec03cea4663cbb68c6c3a61" translate="yes" xml:space="preserve">
          <source>Values are parsed using the regular &lt;code&gt;&lt;a href=&quot;hash#new(pull:JSON::PullParser)-class-method&quot;&gt;.new(pull : JSON::PullParser)&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="translated">値は、通常の &lt;code&gt;&lt;a href=&quot;hash#new(pull:JSON::PullParser)-class-method&quot;&gt;.new(pull : JSON::PullParser)&lt;/a&gt;&lt;/code&gt; メソッドを使用して解析されます。</target>
        </trans-unit>
        <trans-unit id="7da165e3130a2a1237e52c285f8d456ebaa03912" translate="yes" xml:space="preserve">
          <source>Values from the monotonic clock and wall clock are not comparable. This method does not return a &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; instance but a &lt;code&gt;&lt;a href=&quot;time/span&quot;&gt;Time::Span&lt;/a&gt;&lt;/code&gt; amounting to the number of nanoseconds elapsed since the unspecified starting point of the monotonic clock. The returned values are strictly linearly increasing.</source>
          <target state="translated">単調時計と壁時計の値は比較できません。このメソッドは &lt;code&gt;&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;&lt;/code&gt; インスタンスを返さず、単調クロックの指定されていない開始点から経過したナノ秒数に相当する &lt;code&gt;&lt;a href=&quot;time/span&quot;&gt;Time::Span&lt;/a&gt;&lt;/code&gt; を返します。戻り値は厳密に直線的に増加します。</target>
        </trans-unit>
        <trans-unit id="184e69bf8177d364bef3a759076b72121c954ccd" translate="yes" xml:space="preserve">
          <source>Values start with the value &lt;code&gt;0&lt;/code&gt; and are incremented by one, but can be overwritten.</source>
          <target state="translated">値は値 &lt;code&gt;0&lt;/code&gt; から始まり、1ずつ増加しますが、上書きすることができます。</target>
        </trans-unit>
        <trans-unit id="78c01642353c1e217da8eaac74ede745c44a5763" translate="yes" xml:space="preserve">
          <source>Values that don't correspond to an enum's constants are allowed: the value will still be of type &lt;code&gt;Color&lt;/code&gt;, but when printed you will get the underlying value:</source>
          <target state="translated">列挙型の定数に対応しない値も許可されます。値は引き続き &lt;code&gt;Color&lt;/code&gt; 型ですが、印刷すると基になる値が取得されます。</target>
        </trans-unit>
        <trans-unit id="2cba2d2992ed7e1106b338c042545587712cb2c7" translate="yes" xml:space="preserve">
          <source>Values that don't correspond to an enum's constants are allowed: the value will still be of type Color, but when printed you will get the underlying value:</source>
          <target state="translated">列挙型の定数に対応しない値も許されています。</target>
        </trans-unit>
        <trans-unit id="3de327872336ae3a23452c859578eec86f13f2cd" translate="yes" xml:space="preserve">
          <source>Values with binary measurements such as computer storage (e.g. RAM size) are typically expressed using unit prefixes based on 1024 (instead of multiples of 1000 as per SI standard). This method by default uses the IEC standard prefixes (&lt;code&gt;Ki&lt;/code&gt;, &lt;code&gt;Mi&lt;/code&gt;, &lt;code&gt;Gi&lt;/code&gt;, &lt;code&gt;Ti&lt;/code&gt;, &lt;code&gt;Pi&lt;/code&gt;, &lt;code&gt;Ei&lt;/code&gt;, &lt;code&gt;Zi&lt;/code&gt;, &lt;code&gt;Yi&lt;/code&gt;) based on powers of 1000 (see &lt;code&gt;&lt;a href=&quot;int/binaryprefixformat#IEC&quot;&gt;BinaryPrefixFormat::IEC&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">コンピューターストレージ（RAMサイズなど）などのバイナリ測定の値は、通常、1024に基づく単位プレフィックスを使用して表現されます（SI標準のように1000の倍数ではありません）。このメソッドはデフォルトで、1000の累乗に基づくIEC標準プレフィックス（ &lt;code&gt;Ki&lt;/code&gt; 、 &lt;code&gt;Mi&lt;/code&gt; 、 &lt;code&gt;Gi&lt;/code&gt; 、 &lt;code&gt;Ti&lt;/code&gt; 、 &lt;code&gt;Pi&lt;/code&gt; 、 &lt;code&gt;Ei&lt;/code&gt; 、 &lt;code&gt;Zi&lt;/code&gt; 、 &lt;code&gt;Yi&lt;/code&gt; ）を使用します（ &lt;code&gt;&lt;a href=&quot;int/binaryprefixformat#IEC&quot;&gt;BinaryPrefixFormat::IEC&lt;/a&gt;&lt;/code&gt; 参照）。</target>
        </trans-unit>
        <trans-unit id="ac018db1f7b00972061adff843d37497d8ee153c" translate="yes" xml:space="preserve">
          <source>Variables</source>
          <target state="translated">Variables</target>
        </trans-unit>
        <trans-unit id="f876ad5f6a6ae1786f2660e6a99bc7a0edfd59c5" translate="yes" xml:space="preserve">
          <source>Variables declared in a program are not visible inside methods:</source>
          <target state="translated">プログラム内で宣言された変数は、メソッド内では見えません。</target>
        </trans-unit>
        <trans-unit id="553163ac0ba45472fecca7931c4bb63d2b8131c2" translate="yes" xml:space="preserve">
          <source>Variables declared inside the &lt;code&gt;begin&lt;/code&gt; part of an exception handler also get the &lt;code&gt;Nil&lt;/code&gt; type when considered inside a &lt;code&gt;rescue&lt;/code&gt; or &lt;code&gt;ensure&lt;/code&gt; body. For example:</source>
          <target state="translated">例外ハンドラーの &lt;code&gt;begin&lt;/code&gt; 部分の内部で宣言された変数も、 &lt;code&gt;rescue&lt;/code&gt; または &lt;code&gt;ensure&lt;/code&gt; 本体内で考慮されると、 &lt;code&gt;Nil&lt;/code&gt; 型を取得します。例えば：</target>
        </trans-unit>
        <trans-unit id="30d28aeb998290ab9302053c0b8d851faecfc008" translate="yes" xml:space="preserve">
          <source>Variables exposed by a C library can be declared inside a &lt;code&gt;lib&lt;/code&gt; declaration using a global-variable-like declaration:</source>
          <target state="translated">Cライブラリによって公開される変数は、グローバル変数のような宣言を使用して &lt;code&gt;lib&lt;/code&gt; 宣言内で宣言できます。</target>
        </trans-unit>
        <trans-unit id="7c89f0f59784e8694fbf57199ac3a1d33643e489" translate="yes" xml:space="preserve">
          <source>Variadic arguments and splatting</source>
          <target state="translated">異種引数とスプラッタリング</target>
        </trans-unit>
        <trans-unit id="cc91b1ea2c16519ab22614ae2929960a271dbb5c" translate="yes" xml:space="preserve">
          <source>Variant</source>
          <target state="translated">Variant</target>
        </trans-unit>
        <trans-unit id="38ebd05272845c69a660caf78147397c23bfcb06" translate="yes" xml:space="preserve">
          <source>Variant#future?</source>
          <target state="translated">Variant#future?</target>
        </trans-unit>
        <trans-unit id="aeefdc2d65504d2950d1a46ae046b87554bd9f0b" translate="yes" xml:space="preserve">
          <source>Variant#microsoft?</source>
          <target state="translated">Variant#microsoft?</target>
        </trans-unit>
        <trans-unit id="3a44d2f0855d79a6bf41445d28cb77e563b605d9" translate="yes" xml:space="preserve">
          <source>Variant#ncs?</source>
          <target state="translated">Variant#ncs?</target>
        </trans-unit>
        <trans-unit id="021a9313cfc653fe31605a5e62193678c15d26e5" translate="yes" xml:space="preserve">
          <source>Variant#rfc4122?</source>
          <target state="translated">Variant#rfc4122?</target>
        </trans-unit>
        <trans-unit id="f1052040f177f2e535e806e3a27f11514a832ccb" translate="yes" xml:space="preserve">
          <source>Variant#unknown?</source>
          <target state="translated">Variant#unknown?</target>
        </trans-unit>
        <trans-unit id="d42918ce428b4c143009c414fe3bf9eed340de49" translate="yes" xml:space="preserve">
          <source>Variants with 16 bytes.</source>
          <target state="translated">16バイトのバリアント。</target>
        </trans-unit>
        <trans-unit id="2b6b10af9f64d3ac018b92b33452f2b1165dfc5b" translate="yes" xml:space="preserve">
          <source>Various bug workarounds that should be rather harmless. This used to be &lt;code&gt;0x000FFFFF&lt;/code&gt; before 0.9.7</source>
          <target state="translated">害のないはずのさまざまなバグの回避策。これは0.9.7より前は &lt;code&gt;0x000FFFFF&lt;/code&gt; でした</target>
        </trans-unit>
        <trans-unit id="34032bb7f0474baf76f4d5849a722375afc4ae7b" translate="yes" xml:space="preserve">
          <source>VerifierFailureAction</source>
          <target state="translated">VerifierFailureAction</target>
        </trans-unit>
        <trans-unit id="cd8b4a6de6b2727677b2de13084eb835b765bbc1" translate="yes" xml:space="preserve">
          <source>VerifierFailureAction#abort_process_action?</source>
          <target state="translated">VerifierFailureAction#abort_process_action?</target>
        </trans-unit>
        <trans-unit id="860e6ce13867b39ce2b9898ff70ae4ec772f8394" translate="yes" xml:space="preserve">
          <source>VerifierFailureAction#print_message_action?</source>
          <target state="translated">VerifierFailureAction#print_message_action?</target>
        </trans-unit>
        <trans-unit id="b436d1c2778b2470053b5ee79e5874e82ec33bd8" translate="yes" xml:space="preserve">
          <source>VerifierFailureAction#return_status_action?</source>
          <target state="translated">VerifierFailureAction#return_status_action?</target>
        </trans-unit>
        <trans-unit id="3cb4e61dcfa6ae617107e8a634dbda1f136af052" translate="yes" xml:space="preserve">
          <source>Verifies a password against the hash.</source>
          <target state="translated">ハッシュとパスワードを照合します。</target>
        </trans-unit>
        <trans-unit id="d507471de08421db83c09e4b55aff0dedb5b8c12" translate="yes" xml:space="preserve">
          <source>Verifies that all dependencies are installed and requirements are satisfied.</source>
          <target state="translated">すべての依存関係がインストールされており、要件が満たされていることを確認します。</target>
        </trans-unit>
        <trans-unit id="2da600bf9404843107a9531694f654e5662959e0" translate="yes" xml:space="preserve">
          <source>Version</source>
          <target state="translated">Version</target>
        </trans-unit>
        <trans-unit id="7a322470960913707094891c1cdd0834380429df" translate="yes" xml:space="preserve">
          <source>Version#unknown?</source>
          <target state="translated">Version#unknown?</target>
        </trans-unit>
        <trans-unit id="b9d4f5fce52f22ab07c6c9c2618beeff87e2aa4c" translate="yes" xml:space="preserve">
          <source>Version#v1?</source>
          <target state="translated">Version#v1?</target>
        </trans-unit>
        <trans-unit id="8011fcc94cf6f1dad048c2f91e96a83eb7d48f24" translate="yes" xml:space="preserve">
          <source>Version#v2?</source>
          <target state="translated">Version#v2?</target>
        </trans-unit>
        <trans-unit id="5bb7a452eaf17106d7b3759e2af614a180636414" translate="yes" xml:space="preserve">
          <source>Version#v3?</source>
          <target state="translated">Version#v3?</target>
        </trans-unit>
        <trans-unit id="ac46e0036ea3335977995521eb3017a46620b474" translate="yes" xml:space="preserve">
          <source>Version#v4?</source>
          <target state="translated">Version#v4?</target>
        </trans-unit>
        <trans-unit id="dfe471f5e891fe75f60a901c84b606f65a1957af" translate="yes" xml:space="preserve">
          <source>Version#v5?</source>
          <target state="translated">Version#v5?</target>
        </trans-unit>
        <trans-unit id="9219f93e105fdc218fe765e0074ab87f4926c6bf" translate="yes" xml:space="preserve">
          <source>Virtual and abstract types</source>
          <target state="translated">仮想型と抽象型</target>
        </trans-unit>
        <trans-unit id="7d9ff4f0de398581c4640bcbb6e536c355a391be" translate="yes" xml:space="preserve">
          <source>Visibility</source>
          <target state="translated">Visibility</target>
        </trans-unit>
        <trans-unit id="32c10a900ebb07d5216531c43d3ba2e9306a531e" translate="yes" xml:space="preserve">
          <source>WARNING: The behavior of &lt;code&gt;SO_LINGER&lt;/code&gt; is platform specific.</source>
          <target state="translated">警告： &lt;code&gt;SO_LINGER&lt;/code&gt; の動作はプラットフォーム固有です。</target>
        </trans-unit>
        <trans-unit id="53fe01c1c7087e9f9dc20b8e9c80c7b70b6ed83a" translate="yes" xml:space="preserve">
          <source>WARNING: The behavior of &lt;code&gt;SO_LINGER&lt;/code&gt; is platform specific. Bad things may happen especially with nonblocking sockets. See &lt;a href=&quot;https://www.nybek.com/blog/2015/04/29/so_linger-on-non-blocking-sockets/&quot;&gt;Cross-Platform Testing of SO_LINGER by Nybek&lt;/a&gt; for more information.</source>
          <target state="translated">警告： &lt;code&gt;SO_LINGER&lt;/code&gt; の動作はプラットフォーム固有です。特にノンブロッキングソケットでは、悪いことが発生する可能性があります。詳細について&lt;a href=&quot;https://www.nybek.com/blog/2015/04/29/so_linger-on-non-blocking-sockets/&quot;&gt;は、NybekによるSO_LINGERのクロスプラットフォームテストを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="5602943a63eb4c1f8d9b90b7891d2e7ef218b9fe" translate="yes" xml:space="preserve">
          <source>Waits for this process to complete and closes any pipes.</source>
          <target state="translated">このプロセスが完了するのを待って、任意のパイプを閉じます。</target>
        </trans-unit>
        <trans-unit id="08b6e5ef3f5d77c31ddfe59c39cdba7340dc1119" translate="yes" xml:space="preserve">
          <source>Warning: MD5 is no longer a cryptographically secure hash, and should not be used in security-related components, like password hashing. For passwords, see &lt;code&gt;&lt;a href=&quot;../crypto/bcrypt/password&quot;&gt;Crypto::Bcrypt::Password&lt;/a&gt;&lt;/code&gt;. For a generic cryptographic hash, use SHA-256 via &lt;code&gt;&lt;a href=&quot;../openssl/digest#new(name)-class-method&quot;&gt;OpenSSL::Digest.new(&quot;SHA256&quot;)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">警告：MD5は暗号的に安全なハッシュではなくなったので、パスワードハッシュなどのセキュリティ関連コンポーネントでは使用しないでください。パスワードについては、 &lt;code&gt;&lt;a href=&quot;../crypto/bcrypt/password&quot;&gt;Crypto::Bcrypt::Password&lt;/a&gt;&lt;/code&gt; 参照してください。一般的な暗号ハッシュの場合は、 &lt;code&gt;&lt;a href=&quot;../openssl/digest#new(name)-class-method&quot;&gt;OpenSSL::Digest.new(&quot;SHA256&quot;)&lt;/a&gt;&lt;/code&gt; 介してSHA-256を使用します。</target>
        </trans-unit>
        <trans-unit id="b2cfa86e4b580c7d84934c8bc5a645c4c5634773" translate="yes" xml:space="preserve">
          <source>Warning: MD5 is no longer a cryptographically secure hash, and should not be used in security-related components, like password hashing. For passwords, see &lt;code&gt;&lt;a href=&quot;../crypto/bcrypt/password&quot;&gt;Crypto::Bcrypt::Password&lt;/a&gt;&lt;/code&gt;. For a generic cryptographic hash, use SHA-256 via &lt;code&gt;&lt;a href=&quot;digest#new(name)-class-method&quot;&gt;OpenSSL::Digest.new(&quot;SHA256&quot;)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">警告：MD5は暗号的に安全なハッシュではなくなったので、パスワードハッシュなどのセキュリティ関連コンポーネントでは使用しないでください。パスワードについては、 &lt;code&gt;&lt;a href=&quot;../crypto/bcrypt/password&quot;&gt;Crypto::Bcrypt::Password&lt;/a&gt;&lt;/code&gt; 参照してください。一般的な暗号ハッシュの場合は、 &lt;code&gt;&lt;a href=&quot;digest#new(name)-class-method&quot;&gt;OpenSSL::Digest.new(&quot;SHA256&quot;)&lt;/a&gt;&lt;/code&gt; 介してSHA-256を使用します。</target>
        </trans-unit>
        <trans-unit id="0170c0a5583746bc4e5fc590eefd1b3f682c07d9" translate="yes" xml:space="preserve">
          <source>Warning: SHA1 is no longer a cryptographically secure hash, and should not be used in security-related components, like password hashing. For passwords, see &lt;code&gt;&lt;a href=&quot;../crypto/bcrypt/password&quot;&gt;Crypto::Bcrypt::Password&lt;/a&gt;&lt;/code&gt;. For a generic cryptographic hash, use SHA-256 via &lt;code&gt;&lt;a href=&quot;../openssl/digest#new(name)-class-method&quot;&gt;OpenSSL::Digest.new(&quot;SHA256&quot;)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">警告：SHA1は暗号的に安全なハッシュではなくなったため、パスワードハッシュなどのセキュリティ関連コンポーネントでは使用しないでください。パスワードについては、 &lt;code&gt;&lt;a href=&quot;../crypto/bcrypt/password&quot;&gt;Crypto::Bcrypt::Password&lt;/a&gt;&lt;/code&gt; 参照してください。一般的な暗号ハッシュの場合は、 &lt;code&gt;&lt;a href=&quot;../openssl/digest#new(name)-class-method&quot;&gt;OpenSSL::Digest.new(&quot;SHA256&quot;)&lt;/a&gt;&lt;/code&gt; 介してSHA-256を使用します。</target>
        </trans-unit>
        <trans-unit id="edd9e35a09d886245acb79c05d69196c36b6866e" translate="yes" xml:space="preserve">
          <source>Warning: SHA1 is no longer a cryptographically secure hash, and should not be used in security-related components, like password hashing. For passwords, see &lt;code&gt;&lt;a href=&quot;../crypto/bcrypt/password&quot;&gt;Crypto::Bcrypt::Password&lt;/a&gt;&lt;/code&gt;. For a generic cryptographic hash, use SHA-256 via &lt;code&gt;&lt;a href=&quot;digest#new(name)-class-method&quot;&gt;OpenSSL::Digest.new(&quot;SHA256&quot;)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">警告：SHA1は暗号的に安全なハッシュではなくなったため、パスワードハッシュなどのセキュリティ関連コンポーネントでは使用しないでください。パスワードについては、 &lt;code&gt;&lt;a href=&quot;../crypto/bcrypt/password&quot;&gt;Crypto::Bcrypt::Password&lt;/a&gt;&lt;/code&gt; 参照してください。一般的な暗号ハッシュの場合は、 &lt;code&gt;&lt;a href=&quot;digest#new(name)-class-method&quot;&gt;OpenSSL::Digest.new(&quot;SHA256&quot;)&lt;/a&gt;&lt;/code&gt; 介してSHA-256を使用します。</target>
        </trans-unit>
        <trans-unit id="102b479c708c3b596850e350fdd6997dcfba9297" translate="yes" xml:space="preserve">
          <source>We are &lt;a href=&quot;https://andidittrich.de/2017/06/travisci-setup-mysql-tablesdata-before-running-tests.html&quot;&gt;using a &lt;code&gt;schema.sql&lt;/code&gt; script&lt;/a&gt; to create a more readable &lt;code&gt;.travis.yml&lt;/code&gt;. The file &lt;code&gt;./db/schema.sql&lt;/code&gt; looks like this:</source>
          <target state="translated">私たちはしている&lt;a href=&quot;https://andidittrich.de/2017/06/travisci-setup-mysql-tablesdata-before-running-tests.html&quot;&gt;使用して &lt;code&gt;schema.sql&lt;/code&gt; スクリプトを&lt;/a&gt;読みやすく作成する &lt;code&gt;.travis.yml&lt;/code&gt; を。ファイル &lt;code&gt;./db/schema.sql&lt;/code&gt; は次のようになります。</target>
        </trans-unit>
        <trans-unit id="2fc428478a832a1cd2abbe107ca2c1b3b9a6d1d5" translate="yes" xml:space="preserve">
          <source>We are going to build a new docker image based on &lt;a href=&quot;https://hub.docker.com/r/crystallang/crystal/&quot;&gt;crystallang/crystal&lt;/a&gt;, and in this new image we will be installing the binary dependencies.</source>
          <target state="translated">&lt;a href=&quot;https://hub.docker.com/r/crystallang/crystal/&quot;&gt;crystallang / crystalに&lt;/a&gt;基づいて新しいDockerイメージを作成し、この新しいイメージにバイナリ依存関係をインストールします。</target>
        </trans-unit>
        <trans-unit id="33bf41091580f7e2a5d8a13b09d56a058d8f907c" translate="yes" xml:space="preserve">
          <source>We are going to use Conway's Game of Life as the example application. More precisely, we are going to use only the first iterations in &lt;a href=&quot;http://codingdojo.org/kata/GameOfLife/&quot;&gt;Conway's Game of Life Kata&lt;/a&gt; solution using &lt;a href=&quot;https://martinfowler.com/bliki/TestDrivenDevelopment.html&quot;&gt;TDD&lt;/a&gt;.</source>
          <target state="translated">サンプルアプリケーションとして、コンウェイのライフゲームを使用します。より正確には、&lt;a href=&quot;https://martinfowler.com/bliki/TestDrivenDevelopment.html&quot;&gt;TDD&lt;/a&gt;を使用した&lt;a href=&quot;http://codingdojo.org/kata/GameOfLife/&quot;&gt;ConwayのGame of LifeKata&lt;/a&gt;ソリューションの最初の反復のみを使用します。</target>
        </trans-unit>
        <trans-unit id="9f90dcbb1671e50dcb4ac2a9b9b7d43e84edb645" translate="yes" xml:space="preserve">
          <source>We are going to use the second way:</source>
          <target state="translated">2つ目の方法を使うことになりました。</target>
        </trans-unit>
        <trans-unit id="b134c725209eb25378ec1421fdf7e07008e33490" translate="yes" xml:space="preserve">
          <source>We can define a &lt;code&gt;become_older&lt;/code&gt; method that accepts a number indicating the years to grow:</source>
          <target state="translated">成長する年を示す数値を受け入れる &lt;code&gt;become_older&lt;/code&gt; メソッドを定義できます。</target>
        </trans-unit>
        <trans-unit id="45c840de59a674362c4ba12d4ec444b4bcdb1101" translate="yes" xml:space="preserve">
          <source>We can quickly see that &lt;code&gt;@age&lt;/code&gt; is an integer, but we don't know the type of &lt;code&gt;@name&lt;/code&gt;. The compiler could infer its type from all uses of the &lt;code&gt;Person&lt;/code&gt; class. However, doing so has a few issues:</source>
          <target state="translated">私たちはすぐにあることがわかります &lt;code&gt;@age&lt;/code&gt; は整数ですが、私たちはの種類がわからない &lt;code&gt;@name&lt;/code&gt; を。コンパイラーは、 &lt;code&gt;Person&lt;/code&gt; クラスのすべての使用からその型を推測できます。ただし、これにはいくつかの問題があります。</target>
        </trans-unit>
        <trans-unit id="280c5d49cbc1c0cea65e647b60d9bcf5a6579864" translate="yes" xml:space="preserve">
          <source>We can read all about &lt;code&gt;OptionParser&lt;/code&gt; in &lt;a href=&quot;https://crystal-lang.org/api/latest/OptionParser.html&quot;&gt;the official API documentation&lt;/a&gt;. And from there we are one click away from the source code ... the actual proof that it is not magic!</source>
          <target state="translated">&lt;code&gt;OptionParser&lt;/code&gt; については&lt;a href=&quot;https://crystal-lang.org/api/latest/OptionParser.html&quot;&gt;、公式APIドキュメント&lt;/a&gt;ですべて読むことができます。そしてそこから、ソースコードからワンクリックで離れます...それが魔法ではないという実際の証拠です！</target>
        </trans-unit>
        <trans-unit id="5aa65ab657dcf168082628d88b24320680a7b4f1" translate="yes" xml:space="preserve">
          <source>We can simplify our constructor by using a shorter syntax for assigning a method argument to an instance variable:</source>
          <target state="translated">メソッドの引数をインスタンス変数に代入するための短い構文を使用することで、コンストラクタを単純化することができます。</target>
        </trans-unit>
        <trans-unit id="7c6949dcf58bcd44b63b4efa8a90af0747781771" translate="yes" xml:space="preserve">
          <source>We can then type check against instances of these classes with not only their class, but the included modules as well:</source>
          <target state="translated">そして、これらのクラスのインスタンスに対して、そのクラスだけでなく、含まれているモジュールに対してもタイプチェックを行うことができます。</target>
        </trans-unit>
        <trans-unit id="61fde9ec4a6e09078ca88d22360ac2d29b72e227" translate="yes" xml:space="preserve">
          <source>We can use a channel for this:</source>
          <target state="translated">チャンネルを使えばいいんだよ</target>
        </trans-unit>
        <trans-unit id="b48e9bd24090cc4fb3d3a559423d768813c2cee0" translate="yes" xml:space="preserve">
          <source>We can use this function like this:</source>
          <target state="translated">このような関数を使うことができます。</target>
        </trans-unit>
        <trans-unit id="8cb58a1cbcdc151dd9f70f9a144b3e08119ecd84" translate="yes" xml:space="preserve">
          <source>We can't do much with &lt;code&gt;person&lt;/code&gt;, so let's add some concepts to it. A &lt;code&gt;Person&lt;/code&gt; has a name and an age. In the &quot;Everything is an object&quot; section we said that an object has a type and responds to some methods, which is the only way to interact with objects, so we'll need both &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;age&lt;/code&gt; methods. We will store this information in instance variables, which are always prefixed with an &lt;em&gt;at&lt;/em&gt; (&lt;code&gt;@&lt;/code&gt;) character. We also want a Person to come into existence with a name of our choice and an age of zero. We code the &quot;come into existence&quot; part with a special &lt;code&gt;initialize&lt;/code&gt; method, which is normally called a &lt;em&gt;constructor&lt;/em&gt;:</source>
          <target state="translated">&lt;code&gt;person&lt;/code&gt; ではあまりできないので、コンセプトをいくつか追加しましょう。 A &lt;code&gt;Person&lt;/code&gt; の名前と年齢を持っています。 「Everything is a object」セクションでは、オブジェクトにはタイプがあり、オブジェクトとやり取りする唯一の方法であるいくつかのメソッドに応答するので、 &lt;code&gt;name&lt;/code&gt; メソッドと &lt;code&gt;age&lt;/code&gt; メソッドの両方が必要です。この情報はインスタンス変数に格納します。インスタンス変数には常に&lt;em&gt;アット&lt;/em&gt;マーク（ &lt;code&gt;@&lt;/code&gt; ）が前に付けられます。私たちはまた、私たちが選択した名前と年齢0の人が存在することを望んでいます。 「come into存在」の部分は、通常&lt;em&gt;コンストラクタ&lt;/em&gt;と呼ばれる特別な &lt;code&gt;initialize&lt;/code&gt; メソッドを使用してコーディングします。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f5d8d253fd22bd9ac264f10a34bea5f4d66aaea3" translate="yes" xml:space="preserve">
          <source>We checkout the latest version of the compiler written in Ruby, and from that compiler we compile the next versions until the current one.</source>
          <target state="translated">Rubyで書かれたコンパイラの最新版をチェックアウトし、そのコンパイラから現在のコンパイラまで次のバージョンをコンパイルします。</target>
        </trans-unit>
        <trans-unit id="3dc139749eb1483831557987e05f6698de496c8a" translate="yes" xml:space="preserve">
          <source>We create a &lt;code&gt;.o&lt;/code&gt; file in the target system and from that file we create a compiler.</source>
          <target state="translated">ターゲットシステムに &lt;code&gt;.o&lt;/code&gt; ファイルを作成し、そのファイルからコンパイラを作成します。</target>
        </trans-unit>
        <trans-unit id="86f7f62caf9bcf0b33a4acac9812c2f578c15d45" translate="yes" xml:space="preserve">
          <source>We get an error because the compiler now treats &lt;code&gt;@pet&lt;/code&gt; as an &lt;code&gt;Animal+&lt;/code&gt;, which includes &lt;code&gt;Animal&lt;/code&gt;. And since it can't find a &lt;code&gt;talk&lt;/code&gt; method on it, it errors.</source>
          <target state="translated">コンパイラは今扱いはので、私たちはエラーが出る &lt;code&gt;@pet&lt;/code&gt; として &lt;code&gt;Animal+&lt;/code&gt; 含み、 &lt;code&gt;Animal&lt;/code&gt; 。そして、それに &lt;code&gt;talk&lt;/code&gt; メソッドが見つからないため、エラーになります。</target>
        </trans-unit>
        <trans-unit id="e4032ce7ea86befe6e19583c3b01c4565dd06b39" translate="yes" xml:space="preserve">
          <source>We have two accounts (each represented by a name and an amount of money).</source>
          <target state="translated">2つの口座(それぞれ名前と金額で表される)を持っています。</target>
        </trans-unit>
        <trans-unit id="e5997a39351e58289366ade4f88c3d9574ee55f7" translate="yes" xml:space="preserve">
          <source>We love C's efficiency for running code.</source>
          <target state="translated">私たちはコードを実行するためのCの効率性を愛しています。</target>
        </trans-unit>
        <trans-unit id="5593bc3352ca86f03c8ef474f2b3a1576b9d39b8" translate="yes" xml:space="preserve">
          <source>We love Ruby's efficiency for writing code.</source>
          <target state="translated">コードを書くためのRubyの効率性が大好きです。</target>
        </trans-unit>
        <trans-unit id="4fcb9856b3c411af9811d7992e8a6f5e590b5999" translate="yes" xml:space="preserve">
          <source>We may also raise an exception in the body of the transaction:</source>
          <target state="translated">また、取引の本文に例外を設けることもあります。</target>
        </trans-unit>
        <trans-unit id="303a0a63cd6b52ba0f3bc4b17cab4bd8ee6148de" translate="yes" xml:space="preserve">
          <source>We may check the Crystal compiler version. If Crystal is installed correctly then we should see something like this:</source>
          <target state="translated">Crystal コンパイラのバージョンを確認してみましょう。もし、Crystal が正しくインストールされていれば、以下のようなものが表示されるはずです。</target>
        </trans-unit>
        <trans-unit id="1a3014a76f4fdc363e5e16bd682e0ccd41c46651" translate="yes" xml:space="preserve">
          <source>We may run our example like this:</source>
          <target state="translated">私たちの例を以下のように実行することができます。</target>
        </trans-unit>
        <trans-unit id="ee18972e04e40afb01735282184846f0359b3010" translate="yes" xml:space="preserve">
          <source>We should forget about small efficiencies, say about 97% of the time: premature optimization is the root of all evil. Yet we should not pass up our opportunities in that critical 3%.</source>
          <target state="translated">私たちは、小さな効率性を忘れるべきである、約97%の時間と言う。しかし、その重要な3%のチャンスを見逃すべきではありません。</target>
        </trans-unit>
        <trans-unit id="5c5f268ddd2d752ba2cec5b907b60823ba090761" translate="yes" xml:space="preserve">
          <source>We want full OOP.</source>
          <target state="translated">フルOOPが欲しい。</target>
        </trans-unit>
        <trans-unit id="1b65a8befeb48668c450e0f17f1b8eb02c201996" translate="yes" xml:space="preserve">
          <source>We want the best of both worlds.</source>
          <target state="translated">私たちは、両方の世界の最高のものを求めています。</target>
        </trans-unit>
        <trans-unit id="a9c5328d89237a2c3c457ad8e4e977a176571ada" translate="yes" xml:space="preserve">
          <source>We want the compiler to understand what we mean without having to specify types everywhere.</source>
          <target state="translated">どこにでも型を指定しなくても、コンパイラが意味を理解してくれるようにしたいのです。</target>
        </trans-unit>
        <trans-unit id="307357fe6fc4f9470827602f901c41c3dce308b7" translate="yes" xml:space="preserve">
          <source>Weak Reference class that allows a referenced object to be garbage-collected.</source>
          <target state="translated">参照されたオブジェクトがガベージコレクトされるようにする弱い参照クラス。</target>
        </trans-unit>
        <trans-unit id="a1335ba4027315f62ada8c5f58c30da36f666133" translate="yes" xml:space="preserve">
          <source>WeakRef</source>
          <target state="translated">WeakRef</target>
        </trans-unit>
        <trans-unit id="67b1c360c07381b1defd46f130e2b4729da206ed" translate="yes" xml:space="preserve">
          <source>WeakRef(T)</source>
          <target state="translated">WeakRef(T)</target>
        </trans-unit>
        <trans-unit id="d207595dcb5ae40d3a8c8d1db4b44717a7bc8977" translate="yes" xml:space="preserve">
          <source>WeakRef.new</source>
          <target state="translated">WeakRef.new</target>
        </trans-unit>
        <trans-unit id="9dcdedd5d9500a97f73300c80c5f0c0eb60db1da" translate="yes" xml:space="preserve">
          <source>WebKit_JS</source>
          <target state="translated">WebKit_JS</target>
        </trans-unit>
        <trans-unit id="fd2fe2179b44fad347e37ec201d26ab520f15318" translate="yes" xml:space="preserve">
          <source>WebSocket</source>
          <target state="translated">WebSocket</target>
        </trans-unit>
        <trans-unit id="fb44d32e5a22132eea174610234100046bfbfb76" translate="yes" xml:space="preserve">
          <source>WebSocket#close</source>
          <target state="translated">WebSocket#close</target>
        </trans-unit>
        <trans-unit id="46d06505ebbcdd2d2454963da2d45c4398e886de" translate="yes" xml:space="preserve">
          <source>WebSocket#closed?</source>
          <target state="translated">WebSocket#closed?</target>
        </trans-unit>
        <trans-unit id="bb86574522d97d43a43fab4092c3cc10c75f4243" translate="yes" xml:space="preserve">
          <source>WebSocket#on_binary</source>
          <target state="translated">WebSocket#on_binary</target>
        </trans-unit>
        <trans-unit id="3c8237612bc71c981ce6d392f28b3907cbda76f7" translate="yes" xml:space="preserve">
          <source>WebSocket#on_close</source>
          <target state="translated">WebSocket#on_close</target>
        </trans-unit>
        <trans-unit id="4dd5e59e59d689298f119a4eb058875703f5f345" translate="yes" xml:space="preserve">
          <source>WebSocket#on_message</source>
          <target state="translated">WebSocket#on_message</target>
        </trans-unit>
        <trans-unit id="cd0ef28a099853052f323b6d52b02bfebd96e937" translate="yes" xml:space="preserve">
          <source>WebSocket#on_ping</source>
          <target state="translated">WebSocket#on_ping</target>
        </trans-unit>
        <trans-unit id="aa291aa6f629d32c0aaacf2f58acfb1d490d5e5d" translate="yes" xml:space="preserve">
          <source>WebSocket#on_pong</source>
          <target state="translated">WebSocket#on_pong</target>
        </trans-unit>
        <trans-unit id="835dc61987500f71f31994da37afa856d17f502c" translate="yes" xml:space="preserve">
          <source>WebSocket#ping</source>
          <target state="translated">WebSocket#ping</target>
        </trans-unit>
        <trans-unit id="2f6ce1d2b22ca25d640eda1c2e9a9561e2b34f96" translate="yes" xml:space="preserve">
          <source>WebSocket#pong</source>
          <target state="translated">WebSocket#pong</target>
        </trans-unit>
        <trans-unit id="d7485c41e11ba05100698e08d97bfc815148835b" translate="yes" xml:space="preserve">
          <source>WebSocket#run</source>
          <target state="translated">WebSocket#run</target>
        </trans-unit>
        <trans-unit id="693dfb5a684081434932bbb89de66478e5d4f967" translate="yes" xml:space="preserve">
          <source>WebSocket#send</source>
          <target state="translated">WebSocket#send</target>
        </trans-unit>
        <trans-unit id="a44f1a86f0c7c9db8c77c27267c03bf1b953f054" translate="yes" xml:space="preserve">
          <source>WebSocket#stream</source>
          <target state="translated">WebSocket#stream</target>
        </trans-unit>
        <trans-unit id="e87a2a0ebd3d61ec5f9fa3b8235f18ed861db74a" translate="yes" xml:space="preserve">
          <source>WebSocket.new</source>
          <target state="translated">WebSocket.new</target>
        </trans-unit>
        <trans-unit id="bff78da4a3513fceb5b27355ec5fb2d84f2a7ce7" translate="yes" xml:space="preserve">
          <source>WebSocket::CloseCode</source>
          <target state="translated">WebSocket::CloseCode</target>
        </trans-unit>
        <trans-unit id="ca49fe887cff63c004cf6b9176771274009992f4" translate="yes" xml:space="preserve">
          <source>WebSocket::CloseCode#abnormal_closure?</source>
          <target state="translated">WebSocket::CloseCode#abnormal_closure?</target>
        </trans-unit>
        <trans-unit id="dbcee3f6b8749ae889d7530eacdbbc5c4448a7ad" translate="yes" xml:space="preserve">
          <source>WebSocket::CloseCode#bad_gateway?</source>
          <target state="translated">WebSocket::CloseCode#bad_gateway?</target>
        </trans-unit>
        <trans-unit id="3266561dcc9e729095a022882c974911a4dcd45e" translate="yes" xml:space="preserve">
          <source>WebSocket::CloseCode#going_away?</source>
          <target state="translated">WebSocket::CloseCode#going_away?</target>
        </trans-unit>
        <trans-unit id="c7f4aaf7ff91f22cc7ca1a64f0c8f5e287cac272" translate="yes" xml:space="preserve">
          <source>WebSocket::CloseCode#internal_server_error?</source>
          <target state="translated">WebSocket::CloseCode#internal_server_error?</target>
        </trans-unit>
        <trans-unit id="33a491e1d00cc2c838c9e2f468492705002f99b4" translate="yes" xml:space="preserve">
          <source>WebSocket::CloseCode#invalid_frame_payload_data?</source>
          <target state="translated">WebSocket::CloseCode#invalid_frame_payload_data?</target>
        </trans-unit>
        <trans-unit id="11919dc7fe49bded366a48f575af77cbb0e4634d" translate="yes" xml:space="preserve">
          <source>WebSocket::CloseCode#mandatory_extension?</source>
          <target state="translated">WebSocket::CloseCode#mandatory_extension?</target>
        </trans-unit>
        <trans-unit id="c6061bbed48a31766f3e9284347de0d4c6d2cb00" translate="yes" xml:space="preserve">
          <source>WebSocket::CloseCode#message_too_big?</source>
          <target state="translated">WebSocket::CloseCode#message_too_big?</target>
        </trans-unit>
        <trans-unit id="8d8fafa8cb2ebb6f420f9de5d68e16a8c89f80e5" translate="yes" xml:space="preserve">
          <source>WebSocket::CloseCode#no_status_received?</source>
          <target state="translated">WebSocket::CloseCode#no_status_received?</target>
        </trans-unit>
        <trans-unit id="9cb9f6abcdde0b9b778e7c8acb709484c861afb8" translate="yes" xml:space="preserve">
          <source>WebSocket::CloseCode#normal_closure?</source>
          <target state="translated">WebSocket::CloseCode#normal_closure?</target>
        </trans-unit>
        <trans-unit id="1f86d9a48bf1c527b513e095fdcb4fc1b484e014" translate="yes" xml:space="preserve">
          <source>WebSocket::CloseCode#policy_violation?</source>
          <target state="translated">WebSocket::CloseCode#policy_violation?</target>
        </trans-unit>
        <trans-unit id="90edac2ae19cfec1cbdb36700b38756dd6d86c9e" translate="yes" xml:space="preserve">
          <source>WebSocket::CloseCode#protocol_error?</source>
          <target state="translated">WebSocket::CloseCode#protocol_error?</target>
        </trans-unit>
        <trans-unit id="13a82a8b982042edb3153e4e162f0d2dcb7597cf" translate="yes" xml:space="preserve">
          <source>WebSocket::CloseCode#service_restart?</source>
          <target state="translated">WebSocket::CloseCode#service_restart?</target>
        </trans-unit>
        <trans-unit id="e28eef03caa4297ad181434f4c1324d6524310b9" translate="yes" xml:space="preserve">
          <source>WebSocket::CloseCode#tls_handshake?</source>
          <target state="translated">WebSocket::CloseCode#tls_handshake?</target>
        </trans-unit>
        <trans-unit id="cfca3b9d768825e0da958c4e1a469e30c39c3819" translate="yes" xml:space="preserve">
          <source>WebSocket::CloseCode#try_again_later?</source>
          <target state="translated">WebSocket::CloseCode#try_again_later?</target>
        </trans-unit>
        <trans-unit id="eeeb252637334a40903aac733549b13c694c0118" translate="yes" xml:space="preserve">
          <source>WebSocket::CloseCode#unsupported_data?</source>
          <target state="translated">WebSocket::CloseCode#unsupported_data?</target>
        </trans-unit>
        <trans-unit id="e04ea2b8f8e4621b0529596d83060c0a3a020db9" translate="yes" xml:space="preserve">
          <source>WebSocket::CloseCode.new</source>
          <target state="translated">WebSocket::CloseCode.new</target>
        </trans-unit>
        <trans-unit id="cc7e8debb7b4a47973df44f7700f4dd22d89edde" translate="yes" xml:space="preserve">
          <source>WebSocketHandler</source>
          <target state="translated">WebSocketHandler</target>
        </trans-unit>
        <trans-unit id="025b0268c0240d33aca5bc07a81a682b8194fe2c" translate="yes" xml:space="preserve">
          <source>WebSocketHandler#call</source>
          <target state="translated">WebSocketHandler#call</target>
        </trans-unit>
        <trans-unit id="fa7f4dc9b2523edb774e7fb2cd3561b8e8b4c70b" translate="yes" xml:space="preserve">
          <source>WebSocketHandler.new</source>
          <target state="translated">WebSocketHandler.new</target>
        </trans-unit>
        <trans-unit id="fb09b9240d0db0be4af8e00eb400903d5df908cf" translate="yes" xml:space="preserve">
          <source>What happens with the &lt;code&gt;strukt&lt;/code&gt; here:</source>
          <target state="translated">ここで &lt;code&gt;strukt&lt;/code&gt; で何が起こるか：</target>
        </trans-unit>
        <trans-unit id="ca032b5844df22ede2117e0697547ac14af77ed3" translate="yes" xml:space="preserve">
          <source>What it does</source>
          <target state="translated">何をするのか</target>
        </trans-unit>
        <trans-unit id="ba605194eda0d47e7928365f4c48c32923ef0b1d" translate="yes" xml:space="preserve">
          <source>What the compiler doesn't know is that for us, &lt;code&gt;Animal&lt;/code&gt; will never be instantiated as it doesn't make sense to instantiate one. We have a way to tell the compiler so by marking the class as &lt;code&gt;abstract&lt;/code&gt;:</source>
          <target state="translated">コンパイラが知らないのは、私たちにとって、 &lt;code&gt;Animal&lt;/code&gt; はインスタンス化する意味がないので、インスタンス化されないということです。クラスを &lt;code&gt;abstract&lt;/code&gt; としてマークすることで、コンパイラーにそれを伝える方法があります。</target>
        </trans-unit>
        <trans-unit id="92b7005dedd914727695a3f264e6df2f41b90cef" translate="yes" xml:space="preserve">
          <source>What your library is</source>
          <target state="translated">あなたの図書館は</target>
        </trans-unit>
        <trans-unit id="1e93158776e9f89c0654ba898a7273a72783272d" translate="yes" xml:space="preserve">
          <source>What's the right way to do this? Change the expression so that it &lt;em&gt;is&lt;/em&gt; of the right type: &lt;code&gt;Array(Foo)&lt;/code&gt; (see example above).</source>
          <target state="translated">これを行う正しい方法は何ですか？変化式がそのよう&lt;em&gt;である&lt;/em&gt;右のタイプ： &lt;code&gt;Array(Foo)&lt;/code&gt; （上記の例を参照）。</target>
        </trans-unit>
        <trans-unit id="f887438e8ba27c57fa5cf50d0566b18508e3184d" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;DB::Database&lt;/code&gt; is opened an initial number of &lt;code&gt;initial_pool_size&lt;/code&gt; connections will be created. The pool will never hold more than &lt;code&gt;max_pool_size&lt;/code&gt; connections. When returning/releasing a connection to the pool it will be closed if there are already &lt;code&gt;max_idle_pool_size&lt;/code&gt; idle connections.</source>
          <target state="translated">ときに &lt;code&gt;DB::Database&lt;/code&gt; 開かれたの最初の数 &lt;code&gt;initial_pool_size&lt;/code&gt; 接続が作成されます。プールは &lt;code&gt;max_pool_size&lt;/code&gt; を超える接続を保持することはありません。プールへの接続を返す/解放するときに、すでに &lt;code&gt;max_idle_pool_size&lt;/code&gt; アイドル接続がある場合は閉じられます。</target>
        </trans-unit>
        <trans-unit id="40dcecb5e974fc046a2478a840e7206675791927" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;spec&lt;/code&gt; is included, every object has the instance methods &lt;code&gt;#should&lt;/code&gt; and &lt;code&gt;#should_not&lt;/code&gt;. These methods are invoked on the value being tested with an expectation as argument. If the expectation is met, code execution continues. Otherwise the example has &lt;em&gt;failed&lt;/em&gt; and other code in this block will not be executed.</source>
          <target state="translated">とき &lt;code&gt;spec&lt;/code&gt; 含まれている、すべてのオブジェクトは、インスタンスメソッドがある &lt;code&gt;#should&lt;/code&gt; と &lt;code&gt;#should_not&lt;/code&gt; を。これらのメソッドは、期待値を引数としてテストされる値で呼び出されます。期待が満たされると、コードの実行が続行されます。そうでない場合、例は&lt;em&gt;失敗し&lt;/em&gt;、このブロックの他のコードは実行されません。</target>
        </trans-unit>
        <trans-unit id="699019a67d433ba594c08519ac2160362806c084" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;true&lt;/code&gt; a call to &lt;code&gt;&lt;a href=&quot;server#accept:OpenSSL::SSL::Socket::Server-instance-method&quot;&gt;#accept&lt;/a&gt;&lt;/code&gt; will also initiate the SSL handshake.</source>
          <target state="translated">場合は &lt;code&gt;true&lt;/code&gt; のA・コール &lt;code&gt;&lt;a href=&quot;server#accept:OpenSSL::SSL::Socket::Server-instance-method&quot;&gt;#accept&lt;/a&gt;&lt;/code&gt; はまた、SSLハンドシェイクを開始します。</target>
        </trans-unit>
        <trans-unit id="c193eb90deca27e2df6bd7cd71a13eadedf1d042" translate="yes" xml:space="preserve">
          <source>When &lt;em&gt;n&lt;/em&gt; is &lt;code&gt;0&lt;/code&gt; or not given, uses the match of the entire &lt;code&gt;&lt;a href=&quot;../regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt;. Otherwise, uses the match of the &lt;em&gt;n&lt;/em&gt;th capture group.</source>
          <target state="translated">&lt;em&gt;n&lt;/em&gt;が &lt;code&gt;0&lt;/code&gt; または指定されていない場合、 &lt;code&gt;&lt;a href=&quot;../regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt; 全体の一致を使用します。それ以外の場合は、&lt;em&gt;n&lt;/em&gt;番目のキャプチャグループの一致を使用します。</target>
        </trans-unit>
        <trans-unit id="6c54f3e1c07d2a04544cef58cb4c0fc4ce50df77" translate="yes" xml:space="preserve">
          <source>When &lt;em&gt;n&lt;/em&gt; is &lt;code&gt;0&lt;/code&gt;, returns the match for the entire &lt;code&gt;&lt;a href=&quot;../regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;n&lt;/em&gt;が &lt;code&gt;0&lt;/code&gt; の場合、 &lt;code&gt;&lt;a href=&quot;../regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt; 全体の一致を返します。</target>
        </trans-unit>
        <trans-unit id="bb1485d38cd224aacd86238f495c0e293aa1a132" translate="yes" xml:space="preserve">
          <source>When &lt;em&gt;with_seconds&lt;/em&gt; is &lt;code&gt;false&lt;/code&gt;, seconds are omitted; when &lt;code&gt;:auto&lt;/code&gt;, seconds are omitted if &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;with_seconds&lt;/em&gt;が &lt;code&gt;false&lt;/code&gt; の場合、秒は省略されます。とき &lt;code&gt;:auto&lt;/code&gt; 、秒があれば、省略されている &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f18e23a88ee912ffc90cabe354e32ff549312878" translate="yes" xml:space="preserve">
          <source>When a case expression is a tuple literal there are a few semantic differences if a &lt;code&gt;when&lt;/code&gt; condition is also a tuple literal.</source>
          <target state="translated">ケース式がタプルリテラルである場合、 &lt;code&gt;when&lt;/code&gt; 条件もタプルリテラルであると、セマンティックの違いがいくつかあります。</target>
        </trans-unit>
        <trans-unit id="ebea2505add00bc5ae488f74eacca432efaa73a3" translate="yes" xml:space="preserve">
          <source>When a case expression is a tuple literal there are a few semantic differences if a when condition is also a tuple literal.</source>
          <target state="translated">case式がタプルリテラルである場合、when条件がタプルリテラルである場合には、いくつかの意味的な違いがあります。</target>
        </trans-unit>
        <trans-unit id="798ed52d11b998084a00f4c28363cbe6e1a53bdc" translate="yes" xml:space="preserve">
          <source>When a computation-intensive task has none or only rare IO operations, a fiber should explicitly offer to yield execution from time to time using &lt;code&gt;&lt;a href=&quot;fiber#yield-class-method&quot;&gt;Fiber.yield&lt;/a&gt;&lt;/code&gt; to break up tight loops. The frequency of this call depends on the application and concurrency model.</source>
          <target state="translated">計算集約型のタスクにIO操作がないか、まれな場合のみ、ファイバーは、 &lt;code&gt;&lt;a href=&quot;fiber#yield-class-method&quot;&gt;Fiber.yield&lt;/a&gt;&lt;/code&gt; を使用してタイトなループを分割することにより、時々実行を生成することを明示的に提供する必要があります。この呼び出しの頻度は、アプリケーションと同時実行モデルによって異なります。</target>
        </trans-unit>
        <trans-unit id="b6d0b072bdca6505ae76af9c0cf62402b1c73278" translate="yes" xml:space="preserve">
          <source>When a connection is established it usually means opening a TCP connection or Socket. The socket will handle one statement at a time. If a program needs to perform many queries simultaneously, or if it handles concurrent requests that aim to use a database, it will need more than one active connection.</source>
          <target state="translated">接続が確立されるとき、それは通常、TCP接続またはソケットを開くことを意味します。ソケットは一度に1つのステートメントを処理します。プログラムが同時に多くのクエリを実行する必要がある場合や、データベースを使用することを目的とした同時リクエストを処理する場合、複数のアクティブな接続が必要になります。</target>
        </trans-unit>
        <trans-unit id="a9be2a49f2ad0d758e00d464347b5f26d16fec34" translate="yes" xml:space="preserve">
          <source>When a database is opened with &lt;code&gt;crystal-db&lt;/code&gt; there is already a connection pool working. &lt;code&gt;DB.open&lt;/code&gt; returns a &lt;code&gt;DB::Database&lt;/code&gt; object which manages the whole connection pool and not just a single connection.</source>
          <target state="translated">&lt;code&gt;crystal-db&lt;/code&gt; でデータベースを開くと、すでに接続プールが機能しています。 &lt;code&gt;DB.open&lt;/code&gt; は、単一の接続だけでなく、接続プール全体を管理する &lt;code&gt;DB::Database&lt;/code&gt; オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="33208839931cc76b48214f51b6675a633f40f7e4" translate="yes" xml:space="preserve">
          <source>When a literal is assigned to an instance variable, the literal's type is added to the set. All &lt;a href=&quot;literals&quot;&gt;literals&lt;/a&gt; have an associated type.</source>
          <target state="translated">リテラルがインスタンス変数に割り当てられると、リテラルのタイプがセットに追加されます。すべての&lt;a href=&quot;literals&quot;&gt;リテラルに&lt;/a&gt;は、関連するタイプがあります。</target>
        </trans-unit>
        <trans-unit id="58120a60789e863ee418e387ab28f96759e556c2" translate="yes" xml:space="preserve">
          <source>When a macro is invoked you can access the current scope, or type, with a special instance variable: &lt;code&gt;@type&lt;/code&gt;. The type of this variable is &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/TypeNode.html&quot;&gt;&lt;code&gt;TypeNode&lt;/code&gt;&lt;/a&gt;, which gives you access to type information at compile time.</source>
          <target state="translated">マクロが呼び出されると、特別なインスタンス変数 &lt;code&gt;@type&lt;/code&gt; を使用して、現在のスコープまたはタイプにアクセスできます。この変数のタイプは&lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/TypeNode.html&quot;&gt; &lt;code&gt;TypeNode&lt;/code&gt; で&lt;/a&gt;、コンパイル時にタイプ情報にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="7b5db0049e2058fe2ce71a9ffb795d3a82e55024" translate="yes" xml:space="preserve">
          <source>When a macro is invoked you can access the method, the macro is in with a special instance variable: &lt;code&gt;@def&lt;/code&gt;. The type of this variable is &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/Def.html&quot;&gt;&lt;code&gt;Def&lt;/code&gt;&lt;/a&gt; unless the macro is outside of a method, in this case it's &lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/NilLiteral.html&quot;&gt;&lt;code&gt;NilLiteral&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">マクロが呼び出されると、メソッドにアクセスでき、マクロは特別なインスタンス変数 &lt;code&gt;@def&lt;/code&gt; を使用して入ります。この変数の型は、マクロがメソッドの外にない限り、&lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/Def.html&quot;&gt; &lt;code&gt;Def&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;https://crystal-lang.org/api/Crystal/Macros/NilLiteral.html&quot;&gt; &lt;code&gt;NilLiteral&lt;/code&gt; &lt;/a&gt;。この場合は、NilLiteralです。</target>
        </trans-unit>
        <trans-unit id="4ca6188983cf386529a4120b737d93d31b74befd" translate="yes" xml:space="preserve">
          <source>When a method specifies a splat (explained in the next section), named arguments can't be used. The reason is that understanding how arguments are matched becomes very difficult; positional arguments are easier to reason about in this case.</source>
          <target state="translated">メソッドがスプラットを指定する場合(次のセクションで説明します)、名前付き引数は使えません。理由は、引数がどのようにマッチするかを理解することが非常に難しくなるからです。</target>
        </trans-unit>
        <trans-unit id="d4dcb169064ada9807c82159304a6534417318dc" translate="yes" xml:space="preserve">
          <source>When a new Crystal version is released you can upgrade Crystal using:</source>
          <target state="translated">新しいバージョンのCrystalがリリースされたら、Crystalをアップグレードすることができます。</target>
        </trans-unit>
        <trans-unit id="703410034382b89aab940ae19f3dfa82f17f1438" translate="yes" xml:space="preserve">
          <source>When a new Crystal version is released you can upgrade your system using:</source>
          <target state="translated">新しいバージョンのCrystalがリリースされたら、システムをアップグレードすることができます。</target>
        </trans-unit>
        <trans-unit id="11e735ef005de08009428fe15c6d46163b187cf4" translate="yes" xml:space="preserve">
          <source>When a program starts, it fires up a main fiber that will execute your top-level code. There, one can spawn many other fibers. The components of a program are:</source>
          <target state="translated">プログラムが起動すると、トップレベルのコードを実行するメイン・ファイバーが起動します。そこでは、他の多くのファイバーを起動することができます。プログラムの構成要素は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="6dcc9d709019ac5506ff037f7b378c0cef754fd7" translate="yes" xml:space="preserve">
          <source>When a request can be upgraded, the associated &lt;code&gt;HTTP::Websocket&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;server/context&quot;&gt;HTTP::Server::Context&lt;/a&gt;&lt;/code&gt; will be yielded to the block. For example:</source>
          <target state="translated">リクエストをアップグレードできる場合、関連する &lt;code&gt;HTTP::Websocket&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;server/context&quot;&gt;HTTP::Server::Context&lt;/a&gt;&lt;/code&gt; がブロックに渡されます。例えば：</target>
        </trans-unit>
        <trans-unit id="3a3d6249ba8bb5aaa537616f437f7c2a8df14487" translate="yes" xml:space="preserve">
          <source>When a splat method argument has no name, it means no more positional arguments can be passed, and next arguments must be passed as named arguments. For example:</source>
          <target state="translated">splat メソッドの引数に名前がない場合、それ以上の位置引数を渡すことができないことを意味し、次の引数は名前付き引数として渡されなければなりません。例えば</target>
        </trans-unit>
        <trans-unit id="527819fee338ce682807f32d6920183ee347f8e4" translate="yes" xml:space="preserve">
          <source>When a variable's type combines different types under the same class hierarchy, its type becomes a &lt;strong&gt;virtual type&lt;/strong&gt;. This applies to every class and struct except for &lt;code&gt;Reference&lt;/code&gt;, &lt;code&gt;Value&lt;/code&gt;, &lt;code&gt;Int&lt;/code&gt; and &lt;code&gt;Float&lt;/code&gt;. An example:</source>
          <target state="translated">変数の型が同じクラス階層で異なる型を組み合わせると、その型は&lt;strong&gt;仮想型になり&lt;/strong&gt;ます。これは、 &lt;code&gt;Reference&lt;/code&gt; 、 &lt;code&gt;Value&lt;/code&gt; 、 &lt;code&gt;Int&lt;/code&gt; および &lt;code&gt;Float&lt;/code&gt; を除くすべてのクラスと構造体に適用されます。例：</target>
        </trans-unit>
        <trans-unit id="e2ffe07db14f1ef5fc26e312057d75c7d334c945" translate="yes" xml:space="preserve">
          <source>When an &lt;code&gt;-l&lt;/code&gt; option is passed to the linker, it will lookup the libraries in paths passed with the &lt;code&gt;-L&lt;/code&gt; option. &lt;code&gt;CRYSTAL_LIBRARY_PATH&lt;/code&gt;, &lt;code&gt;/usr/lib&lt;/code&gt;, and &lt;code&gt;/usr/local/lib&lt;/code&gt; are added by default. Custom paths can be passed using &lt;code&gt;ldflags&lt;/code&gt;: &lt;code&gt;@[&lt;a href=&quot;link&quot;&gt;Link&lt;/a&gt;(ldflags: &quot;-Lvendor/bin&quot;)]&lt;/code&gt;.</source>
          <target state="translated">ときに &lt;code&gt;-l&lt;/code&gt; オプションはリンカーに渡され、それがで渡されたパスにライブラリを検索します &lt;code&gt;-L&lt;/code&gt; オプション。 &lt;code&gt;CRYSTAL_LIBRARY_PATH&lt;/code&gt; 、 &lt;code&gt;/usr/lib&lt;/code&gt; 、および &lt;code&gt;/usr/local/lib&lt;/code&gt; がデフォルトで追加されます。カスタムパスは &lt;code&gt;ldflags&lt;/code&gt; ： &lt;code&gt;@[&lt;a href=&quot;link&quot;&gt;Link&lt;/a&gt;(ldflags: &quot;-Lvendor/bin&quot;)]&lt;/code&gt; を使用して渡すことができます。</target>
        </trans-unit>
        <trans-unit id="1565c164cd51246e3cbaa98b214c9f01d0259af5" translate="yes" xml:space="preserve">
          <source>When an &lt;code&gt;-l&lt;/code&gt; option is passed to the linker, it will lookup the libraries in paths passed with the &lt;code&gt;-L&lt;/code&gt; option. Any paths in &lt;code&gt;CRYSTAL_LIBRARY_PATH&lt;/code&gt; are added by default. Custom paths can be passed using &lt;code&gt;ldflags&lt;/code&gt;: &lt;code&gt;@[&lt;a href=&quot;link&quot;&gt;Link&lt;/a&gt;(ldflags: &quot;-Lvendor/bin&quot;)]&lt;/code&gt;.</source>
          <target state="translated">ときに &lt;code&gt;-l&lt;/code&gt; オプションはリンカーに渡され、それがで渡されたパスにライブラリを検索します &lt;code&gt;-L&lt;/code&gt; オプション。 &lt;code&gt;CRYSTAL_LIBRARY_PATH&lt;/code&gt; のパスは、デフォルトで追加されます。カスタムパスは、 &lt;code&gt;ldflags&lt;/code&gt; ： &lt;code&gt;@[&lt;a href=&quot;link&quot;&gt;Link&lt;/a&gt;(ldflags: &quot;-Lvendor/bin&quot;)]&lt;/code&gt; を使用して渡すことができます。</target>
        </trans-unit>
        <trans-unit id="0ed60c1fe277ee8379691cd665ad16d336602b34" translate="yes" xml:space="preserve">
          <source>When an expression like &lt;code&gt;Type.new(...)&lt;/code&gt; is assigned to an instance variable, the type &lt;code&gt;Type&lt;/code&gt; is added to the set.</source>
          <target state="translated">&lt;code&gt;Type.new(...)&lt;/code&gt; のような式がインスタンス変数に割り当てられると、タイプ &lt;code&gt;Type&lt;/code&gt; がセットに追加されます。</target>
        </trans-unit>
        <trans-unit id="fb51c35d77e3b5e825e43b797d3795eed287d9f2" translate="yes" xml:space="preserve">
          <source>When an instance method has no doc comment, but a method with the same signature exists in a parent type, the documentation is inherited from the parent method.</source>
          <target state="translated">インスタンスメソッドにdocコメントがなくても、同じシグネチャを持つメソッドが親型に存在する場合、ドキュメントは親メソッドから継承されます。</target>
        </trans-unit>
        <trans-unit id="fe0bc15ba7f318d5f2047677737c9ceea0125a8f" translate="yes" xml:space="preserve">
          <source>When building Crystal code with the &lt;code&gt;--release&lt;/code&gt; flag on FreeBSD, the &lt;code&gt;--no-debug&lt;/code&gt; flag should be added too in order to avoid LLVM assertion errors.</source>
          <target state="translated">FreeBSDで &lt;code&gt;--release&lt;/code&gt; フラグを使用してCrystalコードをビルドする場合、LLVMアサーションエラーを回避するために &lt;code&gt;--no-debug&lt;/code&gt; フラグも追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="36010cb3483e8a44deef2a0dce51a10502c6510f" translate="yes" xml:space="preserve">
          <source>When calling a C function that expects a pointer you can also pass &lt;code&gt;nil&lt;/code&gt; instead of using &lt;code&gt;&lt;a href=&quot;pointer#null-class-method&quot;&gt;Pointer.null&lt;/a&gt;&lt;/code&gt; to construct a null pointer.</source>
          <target state="translated">ポインタを必要とするC関数を呼び出すときに、 &lt;code&gt;&lt;a href=&quot;pointer#null-class-method&quot;&gt;Pointer.null&lt;/a&gt;&lt;/code&gt; を使用してnullポインタを作成する代わりに &lt;code&gt;nil&lt;/code&gt; を渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="217c67e10b0faa41f914aa07764807c52c136533" translate="yes" xml:space="preserve">
          <source>When calling a C function you can also pass &lt;code&gt;nil&lt;/code&gt; instead of constructing a null pointer with this method.</source>
          <target state="translated">C関数を呼び出すときに、このメソッドでnullポインターを作成する代わりに &lt;code&gt;nil&lt;/code&gt; を渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="13cae290e34fb2e03ac20513002a75bdaedf3d41" translate="yes" xml:space="preserve">
          <source>When capturing blocks, the type of the arguments and return type must be specified in the capturing method block signature.</source>
          <target state="translated">ブロックをキャプチャする際には、キャプチャメソッドのブロックシグネチャで引数の型と戻り値の型を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="149f8eb26d3e2cfbf9852971386d9f0579618b39" translate="yes" xml:space="preserve">
          <source>When compiling for a windows target, this is equal to &lt;code&gt;Path.windows()&lt;/code&gt;, otherwise &lt;code&gt;&lt;a href=&quot;path#posix(path:Path):Path-class-method&quot;&gt;Path.posix&lt;/a&gt;&lt;/code&gt; is used.</source>
          <target state="translated">Windowsターゲット用にコンパイルする場合、これは &lt;code&gt;Path.windows()&lt;/code&gt; と同じです。それ以外の場合は、 &lt;code&gt;&lt;a href=&quot;path#posix(path:Path):Path-class-method&quot;&gt;Path.posix&lt;/a&gt;&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="41502e000448d76bbf7f8b89bb622dbb173ce16a" translate="yes" xml:space="preserve">
          <source>When compiling for a windows target, this is equal to &lt;code&gt;Path.windows()&lt;/code&gt;, otherwise &lt;code&gt;Path.posix&lt;/code&gt; is used.</source>
          <target state="translated">Windowsターゲット用にコンパイルする場合、これは &lt;code&gt;Path.windows()&lt;/code&gt; と同じです。それ以外の場合は、 &lt;code&gt;Path.posix&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="bf3b4279f1fed1957fdf5c590719ee02b9c22e09" translate="yes" xml:space="preserve">
          <source>When creating a connection &lt;em&gt;manually&lt;/em&gt; (as we are doing here) we are responsible for managing this resource, and so we must close the connection when we are done using it. Regarding the latter, this little details can be the cause of huge bugs! Crystal, being &lt;em&gt;a language for humans&lt;/em&gt;, give us a more safe way of &lt;em&gt;manually&lt;/em&gt; creating a connection using blocks, like this:</source>
          <target state="translated">&lt;em&gt;手動で&lt;/em&gt;接続&lt;em&gt;を&lt;/em&gt;作成する場合（ここで行っているように）、このリソースを管理する責任があるため、使用が終了したら接続を閉じる必要があります。後者に関しては、この小さな詳細が巨大なバグの原因になる可能性があります！&lt;em&gt;人間のための言語である&lt;/em&gt;Crystalは、次のように、ブロックを使用して&lt;em&gt;手動で&lt;/em&gt;接続を作成するより安全な方法を提供します。</target>
        </trans-unit>
        <trans-unit id="3478cc7c16bd5a184c4053a59b6aa5d0c576dcec" translate="yes" xml:space="preserve">
          <source>When creating an empty array you must always specify T:</source>
          <target state="translated">空の配列を作成する際には、必ず T を指定しなければなりません。</target>
        </trans-unit>
        <trans-unit id="85459da6d2529d9de8cf529e3732a46c90b4b80b" translate="yes" xml:space="preserve">
          <source>When creating an instance, the parser is positioned in the first event. To get the event kind invoke &lt;code&gt;&lt;a href=&quot;pullparser#kind:EventKind-instance-method&quot;&gt;#kind&lt;/a&gt;&lt;/code&gt;. If the event is a scalar you can invoke &lt;code&gt;&lt;a href=&quot;pullparser#value:String-instance-method&quot;&gt;#value&lt;/a&gt;&lt;/code&gt; to get its &lt;strong&gt;string&lt;/strong&gt; value. Other methods like &lt;code&gt;&lt;a href=&quot;pullparser#tag:String?-instance-method&quot;&gt;#tag&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;pullparser#anchor-instance-method&quot;&gt;#anchor&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;pullparser#scalar_style:ScalarStyle-instance-method&quot;&gt;#scalar_style&lt;/a&gt;&lt;/code&gt; let you inspect other information from events.</source>
          <target state="translated">インスタンスを作成するとき、パーサーは最初のイベントに配置されます。イベントの種類を取得するには、 &lt;code&gt;&lt;a href=&quot;pullparser#kind:EventKind-instance-method&quot;&gt;#kind&lt;/a&gt;&lt;/code&gt; kindを呼び出します。イベントがスカラーの場合は、 &lt;code&gt;&lt;a href=&quot;pullparser#value:String-instance-method&quot;&gt;#value&lt;/a&gt;&lt;/code&gt; を呼び出してその&lt;strong&gt;文字列&lt;/strong&gt;値を取得できます。以下のような他の方法 &lt;code&gt;&lt;a href=&quot;pullparser#tag:String?-instance-method&quot;&gt;#tag&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;pullparser#anchor-instance-method&quot;&gt;#anchor&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;pullparser#scalar_style:ScalarStyle-instance-method&quot;&gt;#scalar_style&lt;/a&gt;&lt;/code&gt; あなたがイベントから、他の情報を調べてみましょう。</target>
        </trans-unit>
        <trans-unit id="9886b17cd817e634ad2e7309e1cbc0a725cebdf8" translate="yes" xml:space="preserve">
          <source>When creating log messages they belong to a &lt;em&gt;source&lt;/em&gt;. If the top-level &lt;code&gt;&lt;a href=&quot;log&quot;&gt;Log&lt;/a&gt;&lt;/code&gt; is used as in the above examples its source is the empty string.</source>
          <target state="translated">ログメッセージを作成するとき、それらは&lt;em&gt;ソース&lt;/em&gt;に属します。上記の例のように最上位の &lt;code&gt;&lt;a href=&quot;log&quot;&gt;Log&lt;/a&gt;&lt;/code&gt; が使用されている場合、そのソースは空の文字列です。</target>
        </trans-unit>
        <trans-unit id="32d24ba1f5352b3650b62220ecff7caa54a169b7" translate="yes" xml:space="preserve">
          <source>When data is read from &lt;em&gt;io&lt;/em&gt; it will print something akin to the following on STDERR:</source>
          <target state="translated">データが&lt;em&gt;io&lt;/em&gt;から読み取られると、次のようなものがSTDERRに出力されます。</target>
        </trans-unit>
        <trans-unit id="5da2a041eda9cfc188f4b42080f6d45ac478909a" translate="yes" xml:space="preserve">
          <source>When executing statements using &lt;code&gt;db.query&lt;/code&gt;, &lt;code&gt;db.exec&lt;/code&gt;, &lt;code&gt;db.scalar&lt;/code&gt;, etc. the algorithm goes:</source>
          <target state="translated">&lt;code&gt;db.query&lt;/code&gt; 、 &lt;code&gt;db.exec&lt;/code&gt; 、 &lt;code&gt;db.scalar&lt;/code&gt; などを使用してステートメントを実行すると、アルゴリズムは次のようになります。</target>
        </trans-unit>
        <trans-unit id="aa7b60c577e91db0b18dab5dd49e6a386506e6ed" translate="yes" xml:space="preserve">
          <source>When implementing &lt;code&gt;new(ctx : &lt;a href=&quot;parsecontext&quot;&gt;YAML::ParseContext&lt;/a&gt;, node : &lt;a href=&quot;nodes/node&quot;&gt;YAML::Nodes::Node&lt;/a&gt;)&lt;/code&gt; to deserialize an object from a node, &lt;code&gt;&lt;a href=&quot;../reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt; types must invoke both &lt;code&gt;&lt;a href=&quot;parsecontext#read_alias(node,type:T.class,&amp;amp;)forallT-instance-method&quot;&gt;#read_alias&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;parsecontext#record_anchor(node,object:T):NilforallT-instance-method&quot;&gt;#record_anchor&lt;/a&gt;&lt;/code&gt; in order to support parsing recursive data structures.</source>
          <target state="translated">&lt;code&gt;new(ctx : &lt;a href=&quot;parsecontext&quot;&gt;YAML::ParseContext&lt;/a&gt;, node : &lt;a href=&quot;nodes/node&quot;&gt;YAML::Nodes::Node&lt;/a&gt;)&lt;/code&gt; を実装してオブジェクトをノードから逆シリアル化する場合、再帰的なデータ構造の解析をサポートするために、 &lt;code&gt;&lt;a href=&quot;../reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt; 型は &lt;code&gt;&lt;a href=&quot;parsecontext#read_alias(node,type:T.class,&amp;amp;)forallT-instance-method&quot;&gt;#read_alias&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;parsecontext#record_anchor(node,object:T):NilforallT-instance-method&quot;&gt;#record_anchor&lt;/a&gt;&lt;/code&gt; の両方を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="68d75bbf3cfb6ffd114021e1361f91966736c381" translate="yes" xml:space="preserve">
          <source>When implementing &lt;code&gt;new(ctx : &lt;a href=&quot;parsecontext&quot;&gt;YAML::ParseContext&lt;/a&gt;, node : &lt;a href=&quot;nodes/node&quot;&gt;YAML::Nodes::Node&lt;/a&gt;)&lt;/code&gt; to deserialize an object from a node, &lt;code&gt;&lt;a href=&quot;../reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt; types must invoke both &lt;code&gt;&lt;a href=&quot;parsecontext#read_alias(node,type:T.class,&amp;amp;block)forallT-instance-method&quot;&gt;#read_alias&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;parsecontext#record_anchor(node,object:T):NilforallT-instance-method&quot;&gt;#record_anchor&lt;/a&gt;&lt;/code&gt; in order to support parsing recursive data structures.</source>
          <target state="translated">&lt;code&gt;new(ctx : &lt;a href=&quot;parsecontext&quot;&gt;YAML::ParseContext&lt;/a&gt;, node : &lt;a href=&quot;nodes/node&quot;&gt;YAML::Nodes::Node&lt;/a&gt;)&lt;/code&gt; を実装してノードからオブジェクトをデシリアライズする場合、再帰的なデータ構造の解析をサポートするために、 &lt;code&gt;&lt;a href=&quot;../reference&quot;&gt;Reference&lt;/a&gt;&lt;/code&gt; 型は &lt;code&gt;&lt;a href=&quot;parsecontext#read_alias(node,type:T.class,&amp;amp;block)forallT-instance-method&quot;&gt;#read_alias&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;parsecontext#record_anchor(node,object:T):NilforallT-instance-method&quot;&gt;#record_anchor&lt;/a&gt;&lt;/code&gt; の両方を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="0bb9cdbbfbb7ebe17ed7f1ddd44ded0e0bc7430d" translate="yes" xml:space="preserve">
          <source>When included it provides a &lt;code&gt;from_errno&lt;/code&gt; method (and &lt;code&gt;from_winerror&lt;/code&gt; on Windows) to create exception instances with a description of the original error. It also adds an &lt;code&gt;&lt;a href=&quot;systemerror#os_error:Errno?-instance-method&quot;&gt;#os_error&lt;/a&gt;&lt;/code&gt; property that contains the original system error.</source>
          <target state="translated">含まれている場合、元のエラーの説明を含む例外インスタンスを作成するための &lt;code&gt;from_errno&lt;/code&gt; メソッド（およびWindowsでは &lt;code&gt;from_winerror&lt;/code&gt; ）を提供します。また、元のシステムエラーを含む &lt;code&gt;&lt;a href=&quot;systemerror#os_error:Errno?-instance-method&quot;&gt;#os_error&lt;/a&gt;&lt;/code&gt; プロパティを追加します。</target>
        </trans-unit>
        <trans-unit id="2c7cad6a77f75eb2b87d1a862a75c214a2d6c251" translate="yes" xml:space="preserve">
          <source>When invoking a method on a union type, the language checks that the method exists and can be resolved (typed) for each type in the union. For this reason, adding instance methods to &lt;code&gt;&lt;a href=&quot;union&quot;&gt;Union&lt;/a&gt;&lt;/code&gt; makes no sense and has no effect. However, adding class method to &lt;code&gt;&lt;a href=&quot;union&quot;&gt;Union&lt;/a&gt;&lt;/code&gt; is possible and can be useful. One example is parsing &lt;code&gt;&lt;a href=&quot;json&quot;&gt;JSON&lt;/a&gt;&lt;/code&gt; into one of many possible types.</source>
          <target state="translated">ユニオンタイプのメソッドを呼び出すとき、言語は、メソッドが存在し、ユニオンの各タイプに対して解決（型指定）できることを確認します。このため、 &lt;code&gt;&lt;a href=&quot;union&quot;&gt;Union&lt;/a&gt;&lt;/code&gt; にインスタンスメソッドを追加しても意味がなく、効果がありません。ただし、 &lt;code&gt;&lt;a href=&quot;union&quot;&gt;Union&lt;/a&gt;&lt;/code&gt; にクラスメソッドを追加することは可能であり、役立ちます。1つの例は、 &lt;code&gt;&lt;a href=&quot;json&quot;&gt;JSON&lt;/a&gt;&lt;/code&gt; をさまざまなタイプの1つに解析することです。</target>
        </trans-unit>
        <trans-unit id="cb68d79bb3b9be46f43a1d5372ef2ef2e6a92833" translate="yes" xml:space="preserve">
          <source>When invoking a method without a receiver, like &lt;code&gt;add(1, 2)&lt;/code&gt;, it will be searched for in the program if not found in the current type or any of its ancestors.</source>
          <target state="translated">&lt;code&gt;add(1, 2)&lt;/code&gt; ようにレシーバーなしでメソッドを呼び出す場合、現在のタイプまたはその祖先のいずれにも見つからない場合は、プログラム内で検索されます。</target>
        </trans-unit>
        <trans-unit id="e0b0d8828c8b8efd522bcf4f0738e2b6c626db99" translate="yes" xml:space="preserve">
          <source>When invoking a method, the algorithm to match call arguments to method arguments is:</source>
          <target state="translated">メソッドを呼び出す際に、呼び出し引数とメソッド引数を一致させるアルゴリズムは</target>
        </trans-unit>
        <trans-unit id="6fb93956316ec61219fec86bdb2bbcdf11ccd45d" translate="yes" xml:space="preserve">
          <source>When libraries are installed from Git repositories, the repository is expected to have version tags following a semver-like format, prefixed with a &lt;code&gt;v&lt;/code&gt;. Examples: v1.2.3, v2.0.0-rc1 or v2017.04.1</source>
          <target state="translated">ライブラリがGitリポジトリからインストールされる場合、リポジトリには、接頭辞が &lt;code&gt;v&lt;/code&gt; の semverに似た形式のバージョンタグが含まれていることが期待されます。例：v1.2.3、v2.0.0-rc1またはv2017.04.1</target>
        </trans-unit>
        <trans-unit id="2f9b9d49ae12cf61538f693146c5e845aff7683f" translate="yes" xml:space="preserve">
          <source>When matching a regular expression using &lt;code&gt;&lt;a href=&quot;regex#=~(other)-instance-method&quot;&gt;#=~&lt;/a&gt;&lt;/code&gt; (either &lt;code&gt;&lt;a href=&quot;string#=~(regex:Regex)-instance-method&quot;&gt;String#=~&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;regex#=~(other)-instance-method&quot;&gt;Regex#=~&lt;/a&gt;&lt;/code&gt;), the returned value will be the index of the first match in the string if the expression matched, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;regex#=~(other)-instance-method&quot;&gt;#=~&lt;/a&gt;&lt;/code&gt; （ &lt;code&gt;&lt;a href=&quot;string#=~(regex:Regex)-instance-method&quot;&gt;String#=~&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;regex#=~(other)-instance-method&quot;&gt;Regex#=~&lt;/a&gt;&lt;/code&gt; いずれか）を使用して正規表現を照合する場合、戻り値は、式が一致した場合は文字列内の最初の一致のインデックスになり、そうでない場合は &lt;code&gt;nil&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="338dcf33d4029261e864e9e5fc05d23706ddcf0e" translate="yes" xml:space="preserve">
          <source>When matching a regular expression using &lt;code&gt;&lt;a href=&quot;regex#=~(other:String)-instance-method&quot;&gt;#=~&lt;/a&gt;&lt;/code&gt; (either &lt;code&gt;&lt;a href=&quot;string#=~(other)-instance-method&quot;&gt;String#=~&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;regex#=~(other:String)-instance-method&quot;&gt;Regex#=~&lt;/a&gt;&lt;/code&gt;), the returned value will be the index of the first match in the string if the expression matched, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;regex#=~(other:String)-instance-method&quot;&gt;#=~&lt;/a&gt;&lt;/code&gt; （ &lt;code&gt;&lt;a href=&quot;string#=~(other)-instance-method&quot;&gt;String#=~&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;regex#=~(other:String)-instance-method&quot;&gt;Regex#=~&lt;/a&gt;&lt;/code&gt; いずれか）を使用して正規表現を照合する場合、式が一致した場合、戻り値は文字列内の最初の一致のインデックスになり、それ以外の場合は &lt;code&gt;nil&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="999551b29abc9653910bfa9bba8b5af881e3d867" translate="yes" xml:space="preserve">
          <source>When matching a regular expression using &lt;code&gt;&lt;a href=&quot;regex#match(str,pos=0,options=Regex::Options::None):MatchData?-instance-method&quot;&gt;#match&lt;/a&gt;&lt;/code&gt; (either &lt;code&gt;&lt;a href=&quot;string#match(regex:Regex,pos=0):Regex::MatchData?-instance-method&quot;&gt;String#match&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;regex#match(str,pos=0,options=Regex::Options::None):MatchData?-instance-method&quot;&gt;Regex#match&lt;/a&gt;&lt;/code&gt;), the returned value will be a &lt;code&gt;&lt;a href=&quot;regex/matchdata&quot;&gt;Regex::MatchData&lt;/a&gt;&lt;/code&gt; if the expression matched, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;regex#match(str,pos=0,options=Regex::Options::None):MatchData?-instance-method&quot;&gt;#match&lt;/a&gt;&lt;/code&gt; （ &lt;code&gt;&lt;a href=&quot;string#match(regex:Regex,pos=0):Regex::MatchData?-instance-method&quot;&gt;String#match&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;regex#match(str,pos=0,options=Regex::Options::None):MatchData?-instance-method&quot;&gt;Regex#match&lt;/a&gt;&lt;/code&gt; のいずれか）を使用して正規表現を照合する場合、式が一致した場合、戻り値は &lt;code&gt;&lt;a href=&quot;regex/matchdata&quot;&gt;Regex::MatchData&lt;/a&gt;&lt;/code&gt; なり、それ以外の場合は &lt;code&gt;nil&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="617859181ed838f09a5630f80b06c69f1a7381cb" translate="yes" xml:space="preserve">
          <source>When parsing a request, the server keeps track of the amount of total bytes consumed for all headers (including line breaks). If combined byte size of all headers is larger than the permitted size, the server responds with the status code &lt;code&gt;432 &lt;a href=&quot;request&quot;&gt;Request&lt;/a&gt; Header Fields Too Large&lt;/code&gt; (see &lt;code&gt;&lt;a href=&quot;status#REQUEST_HEADER_FIELDS_TOO_LARGE&quot;&gt;HTTP::Status::REQUEST_HEADER_FIELDS_TOO_LARGE&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">リクエストを解析するとき、サーバーはすべてのヘッダー（改行を含む）で消費された合計バイト数を追跡​​します。すべてのヘッダーの合計バイトサイズが許可されたサイズより大きい場合、サーバーはステータスコード &lt;code&gt;432 &lt;a href=&quot;request&quot;&gt;Request&lt;/a&gt; Header Fields Too Large&lt;/code&gt; （ &lt;code&gt;&lt;a href=&quot;status#REQUEST_HEADER_FIELDS_TOO_LARGE&quot;&gt;HTTP::Status::REQUEST_HEADER_FIELDS_TOO_LARGE&lt;/a&gt;&lt;/code&gt; 参照）で応答します。</target>
        </trans-unit>
        <trans-unit id="a8c25c04560acf88d43d5d05dd9be9870f1968c0" translate="yes" xml:space="preserve">
          <source>When pushing this changes Travis CI will report the following error: &lt;code&gt;Unknown database 'test' (Exception)&lt;/code&gt;, showing that we need to configure the MySQL service &lt;strong&gt;and also setup the database&lt;/strong&gt;:</source>
          <target state="translated">この変更をプッシュすると、TravisCIは次のエラーを報告します &lt;code&gt;Unknown database 'test' (Exception)&lt;/code&gt; 、MySQLサービス&lt;strong&gt;を構成し、データベースをセットアップする&lt;/strong&gt;必要があることを示し&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="33e8f3f1aba28c1e996141945e9a89f49e39aeb6" translate="yes" xml:space="preserve">
          <source>When reading values from the database there is no type information during compile time that crystal can use. You will need to call &lt;code&gt;rs.read(T)&lt;/code&gt; with the type &lt;code&gt;T&lt;/code&gt; you expect to get from the database.</source>
          <target state="translated">データベースから値を読み取る場合、コンパイル時にCrystalが使用できる型情報はありません。データベースから取得する予定のタイプ &lt;code&gt;T&lt;/code&gt; で &lt;code&gt;rs.read(T)&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="df17f9b2b7e3baabc7168e6827cc14ec53787629" translate="yes" xml:space="preserve">
          <source>When reading zip files, CRC32 checksum values are automatically verified when finishing reading an entry, and &lt;code&gt;&lt;a href=&quot;zip/error&quot;&gt;Compress::Zip::Error&lt;/a&gt;&lt;/code&gt; will be raised if the computed CRC32 checksum does not match.</source>
          <target state="translated">zipファイルを読み取る場合、エントリの読み取りが終了するとCRC32チェックサム値が自動的に検証され、計算されたCRC32チェックサムが一致しない場合は &lt;code&gt;&lt;a href=&quot;zip/error&quot;&gt;Compress::Zip::Error&lt;/a&gt;&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="e06d724d46b4cfa945e728f651d80f4c622137ee" translate="yes" xml:space="preserve">
          <source>When reading zip files, CRC32 checksum values are automatically verified when finishing reading an entry, and &lt;code&gt;&lt;a href=&quot;zip/error&quot;&gt;Zip::Error&lt;/a&gt;&lt;/code&gt; will be raised if the computed CRC32 checksum does not match.</source>
          <target state="translated">zipファイルを読み取る場合、CRC32チェックサム値はエントリの読み取りが完了すると自動的に検証され、計算されたCRC32チェックサムが一致しない場合は &lt;code&gt;&lt;a href=&quot;zip/error&quot;&gt;Zip::Error&lt;/a&gt;&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="19f8d51f9e4fcc512f39403df66187157c62634a" translate="yes" xml:space="preserve">
          <source>When running the example, Crystal will reply:</source>
          <target state="translated">例を実行すると、Crystalが返信してくれます。</target>
        </trans-unit>
        <trans-unit id="7de5ccadaf816f318fd75b70c13191137e7d171e" translate="yes" xml:space="preserve">
          <source>When specifying a type, all elements in a tuple must match that type. Additionally, the empty-tuple doesn't match any of the above cases. If you want to support the empty-tuple case, add another overload:</source>
          <target state="translated">型を指定する場合、タプル内のすべての要素がその型にマッチしなければなりません。さらに、空タプルは上記のいずれの場合にもマッチしません。空タプルの場合をサポートしたい場合は、別のオーバーロードを追加してください。</target>
        </trans-unit>
        <trans-unit id="1f8ad720854ad3c6ad1ac8641ed9579ddfb212cd" translate="yes" xml:space="preserve">
          <source>When substitution is performed, any backreferences found in &lt;em&gt;replacement&lt;/em&gt; will be replaced with the contents of the corresponding capture group in &lt;em&gt;pattern&lt;/em&gt;. Backreferences to capture groups that were not present in &lt;em&gt;pattern&lt;/em&gt; or that did not match will be skipped. See &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt; for information about capture groups.</source>
          <target state="translated">置換が実行されると、&lt;em&gt;replacementで&lt;/em&gt;見つかった後方参照は、&lt;em&gt;patternの&lt;/em&gt;対応するキャプチャグループの内容で置き換えられ&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;パターンに&lt;/em&gt;存在しない、または一致しないキャプチャグループへの後方参照はスキップされます。キャプチャグループの詳細については、 &lt;code&gt;&lt;a href=&quot;regex&quot;&gt;Regex&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="101e0427a4564912c6b6de6461205f769743b863" translate="yes" xml:space="preserve">
          <source>When the fiber is executed, it runs &lt;em&gt;proc&lt;/em&gt; in its context.</source>
          <target state="translated">ファイバーが実行されると、そのコンテキストで&lt;em&gt;proc&lt;/em&gt;が実行されます。</target>
        </trans-unit>
        <trans-unit id="3021d5d4ec6152b0b310d0086218e942797ce3d9" translate="yes" xml:space="preserve">
          <source>When there are capture groups having same name, it returns the last matched capture group.</source>
          <target state="translated">同じ名前を持つキャプチャグループがある場合、最後にマッチしたキャプチャグループを返します。</target>
        </trans-unit>
        <trans-unit id="0ae90f5899566ff8ad6cb3e5b61ed2d03f801ea2" translate="yes" xml:space="preserve">
          <source>When there are many arguments, the order of the names in the invocation doesn't matter, as long as all required arguments are covered:</source>
          <target state="translated">多くの引数がある場合、必要な引数がすべてカバーされている限り、呼び出しの名前の順番は問題ではありません。</target>
        </trans-unit>
        <trans-unit id="5adf61457b779c1252aad7263b244bd333ab7d8f" translate="yes" xml:space="preserve">
          <source>When they're defined inside a class or module scope it is easier to use &lt;code&gt;self&lt;/code&gt; instead of the class name.</source>
          <target state="translated">クラスまたはモジュールのスコープ内で定義されている場合、クラス名の代わりに &lt;code&gt;self&lt;/code&gt; を使用する方が簡単です。</target>
        </trans-unit>
        <trans-unit id="7680aecdae19d3b3f9d39379fa201bd36e012964" translate="yes" xml:space="preserve">
          <source>When this backend level is set that level setting takes precedence over the severity filter of each referenced backend.</source>
          <target state="translated">このバックエンドレベルが設定されている場合、そのレベルの設定は、参照されている各バックエンドの深刻度フィルタよりも優先されます。</target>
        </trans-unit>
        <trans-unit id="001e140cdacafc1f36be1b408f56a036b7e679f9" translate="yes" xml:space="preserve">
          <source>When this device is opened using &lt;code&gt;File.open&lt;/code&gt;, read operations will always return EOF, and any data written will be immediately discarded.</source>
          <target state="translated">このデバイスが &lt;code&gt;File.open&lt;/code&gt; を使用して開かれると、読み取り操作は常にEOFを返し、書き込まれたデータはすぐに破棄されます。</target>
        </trans-unit>
        <trans-unit id="73daf9e200faa8215cd8558e8ab7817540123704" translate="yes" xml:space="preserve">
          <source>When this is a TTY device, &lt;code&gt;sync&lt;/code&gt; will be true for it at the start of the program.</source>
          <target state="translated">これがTTYデバイスの場合、プログラムの開始時に &lt;code&gt;sync&lt;/code&gt; が真になります。</target>
        </trans-unit>
        <trans-unit id="88cd5f28b459569e68b3750615b8ecdbb16ac5a0" translate="yes" xml:space="preserve">
          <source>When to use one or the other?</source>
          <target state="translated">どちらか一方を使うタイミングは?</target>
        </trans-unit>
        <trans-unit id="b7b7089d2d9bb760d564e78d1a543f979ffa356b" translate="yes" xml:space="preserve">
          <source>When used in an &lt;code&gt;if&lt;/code&gt; in conjunction with a variable, &lt;code&gt;is_a?&lt;/code&gt;, &lt;code&gt;responds_to?&lt;/code&gt; or &lt;code&gt;nil?&lt;/code&gt; the compiler will restrict the types accordingly:</source>
          <target state="translated">変数と組み合わせて &lt;code&gt;if&lt;/code&gt; で使用すると、 &lt;code&gt;is_a?&lt;/code&gt; 、 &lt;code&gt;responds_to?&lt;/code&gt; または &lt;code&gt;nil?&lt;/code&gt; コンパイラーはそれに応じてタイプを制限します。</target>
        </trans-unit>
        <trans-unit id="f8c36a513d14f353a0a23c16999bda3ece2e24eb" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;DB#connect&lt;/code&gt; we are indeed opening a connection to the database. The &lt;code&gt;uri&lt;/code&gt; passed as the parameter is used by the module to determine which driver to use (for example: &lt;code&gt;mysql://&lt;/code&gt;, &lt;code&gt;postgres://&lt;/code&gt;, &lt;code&gt;sqlite://&lt;/code&gt;, etc.) i.e. we do not need to specify which database we are using.</source>
          <target state="translated">&lt;code&gt;DB#connect&lt;/code&gt; を使用する場合、実際にデータベースへの接続を開いています。 &lt;code&gt;uri&lt;/code&gt; パラメータとして渡されたが、使用するドライバを決定するためのモジュールで使用されている（例： &lt;code&gt;mysql://&lt;/code&gt; 、 &lt;code&gt;postgres://&lt;/code&gt; 、 &lt;code&gt;sqlite://&lt;/code&gt; など）我々は我々がであるデータベースを指定する必要はありません。つまり、を使用します。</target>
        </trans-unit>
        <trans-unit id="7c4cc4371210a836e0f413c784a85f323d5a33db" translate="yes" xml:space="preserve">
          <source>When using blocks with &lt;code&gt;yield&lt;/code&gt;, the blocks are &lt;strong&gt;always&lt;/strong&gt; inlined: no closures, calls or function pointers are involved. This means that this:</source>
          <target state="translated">&lt;code&gt;yield&lt;/code&gt; でブロックを使用する場合、ブロックは&lt;strong&gt;常に&lt;/strong&gt;インライン化されます。クロージャー、呼び出し、関数ポインターは関与しません。これは次のことを意味します：</target>
        </trans-unit>
        <trans-unit id="26656e1a4a0a6c6113ce3763c3c7a26f6b411f63" translate="yes" xml:space="preserve">
          <source>When using mutable data types as keys, changing the value of a key after it was inserted into the &lt;code&gt;&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; may lead to undefined behaviour. This method re-indexes the hash using the current key values.</source>
          <target state="translated">可変データ型をキーとして使用する場合、 &lt;code&gt;&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;&lt;/code&gt; に挿入された後でキーの値を変更すると、動作が未定義になる可能性があります。このメソッドは、現在のキー値を使用してハッシュのインデックスを再作成します。</target>
        </trans-unit>
        <trans-unit id="d5e4ab926d78e833a0a698c1ef89fa9d0696f1c5" translate="yes" xml:space="preserve">
          <source>When we check to see if a particular regular expression describes a string, we can say that we are performing a match or matching one against the other. If we find that a regular expression does describe a string, we say that it matches, and we can refer to a part of the string that was described as a match.</source>
          <target state="translated">特定の正規表現が文字列を記述しているかどうかをチェックするとき、マッチを実行しているか、あるいは他の正規表現とのマッチングを行っていると言えます。正規表現が文字列を記述していることがわかった場合、それはマッチしていると言い、マッチとして記述された文字列の一部を参照することができます。</target>
        </trans-unit>
        <trans-unit id="39a7b0c65bad919834280a470ae341609b4cd66c" translate="yes" xml:space="preserve">
          <source>When working with databases, it is common to need to group operations in such a way that if one fails, then we can go back to the latest safe state. This solution is described in the &lt;strong&gt;transaction paradigm&lt;/strong&gt;, and is implemented by most database engines as it is necessary to meet ACID properties (Atomicity, Consistency, Isolation, Durability) &lt;sup&gt;&lt;a href=&quot;#fn_ACID&quot; id=&quot;reffn_ACID&quot;&gt;ACID&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">データベースを操作する場合、1つが失敗した場合に最新の安全な状態に戻ることができるように操作をグループ化する必要があるのが一般的です。このソリューションは&lt;strong&gt;トランザクションパラダイム&lt;/strong&gt;で説明されており、ACIDプロパティ（原子性、一貫性、分離、耐久性）&lt;sup&gt;&lt;a href=&quot;#fn_ACID&quot; id=&quot;reffn_ACID&quot;&gt;ACID&lt;/a&gt;&lt;/sup&gt;を満たす必要があるため、ほとんどのデータベースエンジンで実装されています。&lt;sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="ce264c4cbf58c67357b4bd48c84ba8ce75aa7f04" translate="yes" xml:space="preserve">
          <source>When writing custom types, always be sure to override &lt;code&gt;to_s(io)&lt;/code&gt;, not &lt;code&gt;to_s&lt;/code&gt;, and avoid creating intermediate strings in that method. For example:</source>
          <target state="translated">カスタム型を作成するときは、必ず &lt;code&gt;to_s(io)&lt;/code&gt; ではなく &lt;code&gt;to_s&lt;/code&gt; （io）をオーバーライドし、そのメソッドで中間文字列を作成しないようにしてください。例えば：</target>
        </trans-unit>
        <trans-unit id="634b9ff31c6e75d9e4e53f9b0e416dc6ba0cc0f9" translate="yes" xml:space="preserve">
          <source>When writing macros (especially outside of a macro definition) it is important to remember that the generated code from the macro must be valid Crystal code by itself even before it is merged into the main program's code. This means, for example, a macro cannot generate a one or more &lt;code&gt;when&lt;/code&gt; expressions of a &lt;code&gt;case&lt;/code&gt; statement unless &lt;code&gt;case&lt;/code&gt; was a part of the generated code.</source>
          <target state="translated">マクロを（特にマクロ定義の外で）作成する場合、マクロから生成されたコードは、メインプログラムのコードにマージされる前であっても、それ自体が有効なCrystalコードである必要があることに注意してください。この手段は、例えば、マクロは、一つ以上生成できない &lt;code&gt;when&lt;/code&gt; の式 &lt;code&gt;case&lt;/code&gt; ステートメントがない限り &lt;code&gt;case&lt;/code&gt; 、生成されたコードの一部であったが。</target>
        </trans-unit>
        <trans-unit id="4a2ff1337f892c7263b4813735bcd04bc80f2255" translate="yes" xml:space="preserve">
          <source>When:</source>
          <target state="translated">When:</target>
        </trans-unit>
        <trans-unit id="b25158335aa115664cbb55e163735aa8751fd904" translate="yes" xml:space="preserve">
          <source>Whether automatic compression/decompression is enabled.</source>
          <target state="translated">自動圧縮/解凍を有効にしているかどうか。</target>
        </trans-unit>
        <trans-unit id="263c2f35370bd9753b96e40211b6be44dd7c7d23" translate="yes" xml:space="preserve">
          <source>Whether the collection contains any cookies.</source>
          <target state="translated">コレクションにクッキーが含まれているかどうか。</target>
        </trans-unit>
        <trans-unit id="8a9c53a171c75cc2f14fdcd43389db27d6c4009c" translate="yes" xml:space="preserve">
          <source>Whether the method accepts a &lt;a href=&quot;blocks_and_procs&quot;&gt;block&lt;/a&gt; or not</source>
          <target state="translated">この方法は、受け入れるかどうか&lt;a href=&quot;blocks_and_procs&quot;&gt;のブロックを&lt;/a&gt;か</target>
        </trans-unit>
        <trans-unit id="fd17691cf13d1588973f92c5297c06f6ac7994a9" translate="yes" xml:space="preserve">
          <source>Whether the process is still registered in the system.</source>
          <target state="translated">プロセスがシステムに登録されているかどうか。</target>
        </trans-unit>
        <trans-unit id="b8b10987810de4336f0dfccf6fda68a9995c9d85" translate="yes" xml:space="preserve">
          <source>Whether the process is still registered in the system. Note that this returns &lt;code&gt;true&lt;/code&gt; for processes in the zombie or similar state.</source>
          <target state="translated">プロセスがまだシステムに登録されているかどうか。これは、ゾンビまたは同様の状態のプロセスに対して &lt;code&gt;true&lt;/code&gt; を返すことに注意してください。</target>
        </trans-unit>
        <trans-unit id="56d5e876e5af496c53fed2ae3d6073cabf0a18ba" translate="yes" xml:space="preserve">
          <source>Whether this process is already terminated.</source>
          <target state="translated">このプロセスが既に終了しているかどうか。</target>
        </trans-unit>
        <trans-unit id="a4b46bfc0f46f50c0200821041af87fff041b9d1" translate="yes" xml:space="preserve">
          <source>Whether to close the enclosed &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; when closing this reader.</source>
          <target state="translated">このリーダーを閉じるときに、囲まれた &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; を閉じるかどうか。</target>
        </trans-unit>
        <trans-unit id="d198b7760000b29b5eb8e7b16a9b6c788892eda0" translate="yes" xml:space="preserve">
          <source>Whether to close the enclosed &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; when closing this writer.</source>
          <target state="translated">このライターを閉じるときに、囲まれた &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; を閉じるかどうか。</target>
        </trans-unit>
        <trans-unit id="efbdb31e09cb5a959bccdcfd1274113db2fdc306" translate="yes" xml:space="preserve">
          <source>Whether to close the enclosed &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; when closing this reader.</source>
          <target state="translated">このリーダーを閉じるときに、囲まれた &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; を閉じるかどうか。</target>
        </trans-unit>
        <trans-unit id="be40a64b37f0a2356d5d95cff70d2b729d1f3eac" translate="yes" xml:space="preserve">
          <source>Whether to close the enclosed &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; when closing this writer.</source>
          <target state="translated">このライターを閉じるときに、囲まれた &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; を閉じるかどうか。</target>
        </trans-unit>
        <trans-unit id="bd0212975e2426e443c25e9d729a9ee28488d4f2" translate="yes" xml:space="preserve">
          <source>Which would print:</source>
          <target state="translated">どっちが印刷するんだ?</target>
        </trans-unit>
        <trans-unit id="81de44b5227f9f0f324415c473553d0f44b2cbb3" translate="yes" xml:space="preserve">
          <source>While a pointer is unsafe because no bound checks are performed when reading from and writing to it, reading from and writing to a slice involve bound checks. In this way, a slice is a safe alternative to &lt;code&gt;&lt;a href=&quot;pointer&quot;&gt;Pointer&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ポインターの読み取りと書き込み時にバインドチェックが実行されないためポインターは安全ではありませんが、スライスの読み取りと書き込みにはバインドチェックが含まれます。このように、スライスは &lt;code&gt;&lt;a href=&quot;pointer&quot;&gt;Pointer&lt;/a&gt;&lt;/code&gt; の安全な代替手段です。</target>
        </trans-unit>
        <trans-unit id="e0dfc9e110b3e75ac57c141d946404aa67a34e4c" translate="yes" xml:space="preserve">
          <source>While command literals may prove useful for simple script-like tools, special caution is advised when interpolating user input because it may easily lead to command injection.</source>
          <target state="translated">コマンドリテラルは単純なスクリプトのようなツールには便利ですが、ユーザー入力を補間する際には、コマンドインジェクションにつながりやすいので、特に注意が必要です。</target>
        </trans-unit>
        <trans-unit id="5b55ff59b78372ce2b4cba9191cb68a22d5abd03" translate="yes" xml:space="preserve">
          <source>While that pipeline is running, let's attach some badges to the project to show off our docs and the (hopefully) successful state of our pipeline. (You might want to read the &lt;a href=&quot;https://gitlab.com/help/user/project/badges&quot;&gt;badges docs&lt;/a&gt;.)</source>
          <target state="translated">そのパイプラインの実行中に、いくつかのバッジをプロジェクトに添付して、ドキュメントとパイプラインの（うまくいけば）成功した​​状態を示しましょう。（&lt;a href=&quot;https://gitlab.com/help/user/project/badges&quot;&gt;バッジのドキュメント&lt;/a&gt;を読むことをお勧めします。）</target>
        </trans-unit>
        <trans-unit id="e68b71d8931db3b922a296e9d3d25004aaec85cd" translate="yes" xml:space="preserve">
          <source>While this fiber is waiting this time, other ready-to-execute fibers might start their execution.</source>
          <target state="translated">このファイバーがこの時間を待っている間に、他の実行可能なファイバーが実行を開始するかもしれません。</target>
        </trans-unit>
        <trans-unit id="47b13cdb0607925057b8e9d36b0386d1a11eb54c" translate="yes" xml:space="preserve">
          <source>Whitespace</source>
          <target state="translated">Whitespace</target>
        </trans-unit>
        <trans-unit id="d77989c1e3c0e0ace735631597dc367ffdfa6f32" translate="yes" xml:space="preserve">
          <source>Why?</source>
          <target state="translated">Why?</target>
        </trans-unit>
        <trans-unit id="f583a7541c164157a8654112300b059486bd5afd" translate="yes" xml:space="preserve">
          <source>Windows Subsystem for Linux</source>
          <target state="translated">Linux用Windowsサブシステム</target>
        </trans-unit>
        <trans-unit id="fb6c9d03e86d9be86fc4457ee316d6cbed8acb5f" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;alias&lt;/code&gt; you can give a type a different name:</source>
          <target state="translated">では &lt;code&gt;alias&lt;/code&gt; あなたはタイプに別の名前を付けることができます。</target>
        </trans-unit>
        <trans-unit id="9b7d5aebe67be7ddd84d833a5be6936fbaa1d16c" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;ensure&lt;/code&gt;:</source>
          <target state="translated">で &lt;code&gt;ensure&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c4ff18e82ca0e1149302f2d28afc6551c92e050a" translate="yes" xml:space="preserve">
          <source>With Colorize you can change the fore- and background colors and text decorations when rendering text on terminals supporting ANSI escape codes. It adds the &lt;code&gt;colorize&lt;/code&gt; method to &lt;code&gt;&lt;a href=&quot;colorize/object&quot;&gt;Object&lt;/a&gt;&lt;/code&gt; and thus all classes as its main interface, which calls &lt;code&gt;to_s&lt;/code&gt; and surrounds it with the necessary escape codes when it comes to obtaining a string representation of the object.</source>
          <target state="translated">Colorizeを使用すると、ANSIエスケープコードをサポートする端末でテキストをレンダリングするときに、前景色と背景色、およびテキスト装飾を変更できます。 &lt;code&gt;&lt;a href=&quot;colorize/object&quot;&gt;Object&lt;/a&gt;&lt;/code&gt; &lt;code&gt;colorize&lt;/code&gt; メソッドを追加し、すべてのクラスをメインインターフェースとして追加します。これにより、 &lt;code&gt;to_s&lt;/code&gt; が呼び出され、オブジェクトの文字列表現を取得するときに必要なエスケープコードで囲まれます。</target>
        </trans-unit>
        <trans-unit id="0fd21e2e5baf3b7c8c60d8be46e5cd501754d48a" translate="yes" xml:space="preserve">
          <source>With a block, an &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;HTTP::Client::Response&lt;/a&gt;&lt;/code&gt; body is returned and the response's body is available as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; by invoking &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ブロックを使用すると、 &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;HTTP::Client::Response&lt;/a&gt;&lt;/code&gt; 本文が返され、 &lt;code&gt;&lt;a href=&quot;client/response#body_io-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; を呼び出すことにより、応答の本文を &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; として使用できます。</target>
        </trans-unit>
        <trans-unit id="f8d70af1559661d8e28eb85b0a55e8dfac5a54be" translate="yes" xml:space="preserve">
          <source>With a block, an &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;HTTP::Client::Response&lt;/a&gt;&lt;/code&gt; body is returned and the response's body is available as an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; by invoking &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ブロックを使用すると、 &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;HTTP::Client::Response&lt;/a&gt;&lt;/code&gt; 本文が返され、 &lt;code&gt;&lt;a href=&quot;client/response#body_io:IO-instance-method&quot;&gt;HTTP::Client::Response#body_io&lt;/a&gt;&lt;/code&gt; を呼び出すことで、応答の本文を &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; として使用できます。</target>
        </trans-unit>
        <trans-unit id="2472a8a9f4056a0d2570b39f6d8fa4378a9f5a86" translate="yes" xml:space="preserve">
          <source>With a buffered channel, invoking &lt;code&gt;send&lt;/code&gt; won't switch to another fiber unless the buffer is full:</source>
          <target state="translated">バッファリングされたチャネルでは、バッファがいっぱいにならない限り、 &lt;code&gt;send&lt;/code&gt; を呼び出しても別のファイバーに切り替わりません。</target>
        </trans-unit>
        <trans-unit id="7df5ab3eae7bf52149fe7ebe59f99b561fa1f8ff" translate="yes" xml:space="preserve">
          <source>With a named tuple literal you cannot create an empty named tuple. This method doesn't have this limitation, which makes it especially useful in macros and generic code.</source>
          <target state="translated">名前付きタプルリテラルでは、空の名前付きタプルを作成することはできません。このメソッドにはこの制限がないので、マクロや汎用コードでは特に便利です。</target>
        </trans-unit>
        <trans-unit id="fc47ad57935a23706e182e1fc2680912076c554b" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;toggle&lt;/code&gt; method you can temporarily disable adding the escape codes. Settings of the instance are preserved however and can be turned back on later:</source>
          <target state="translated">&lt;code&gt;toggle&lt;/code&gt; 方法あなたはエスケープコードを一時的に無効に追加することができます。ただし、インスタンスの設定は保持され、後でオンに戻すことができます。</target>
        </trans-unit>
        <trans-unit id="ecac74683e7119a4e6e4240339152daafa7f3b60" translate="yes" xml:space="preserve">
          <source>With these methods it is possible to express expected traces in either a strict or loose way, while checking ordering.</source>
          <target state="translated">これらの方法を用いることで、順序を確認しながら、期待されるトレースを厳密な方法でも緩い方法でも表現することができます。</target>
        </trans-unit>
        <trans-unit id="6a052e02930719655053718d24189b468f9deaf5" translate="yes" xml:space="preserve">
          <source>With this configuration, Travis CI will run the tests using both Crystal &lt;code&gt;latest&lt;/code&gt; and &lt;code&gt;nightly&lt;/code&gt; releases on every push to a branch on your Github repository.</source>
          <target state="translated">この構成では、Travis CIは、Githubリポジトリのブランチにプッシュするたびに、Crystalの &lt;code&gt;latest&lt;/code&gt; リリースと &lt;code&gt;nightly&lt;/code&gt; リリースの両方を使用してテストを実行します。</target>
        </trans-unit>
        <trans-unit id="b1d438120e8e429ac1681bae07d8260388a11318" translate="yes" xml:space="preserve">
          <source>With this in mind, we present the following example:</source>
          <target state="translated">このことを念頭に置いて、次のような例を紹介します。</target>
        </trans-unit>
        <trans-unit id="3a797eb8697a5df49a6f8a648a3ce53245062c17" translate="yes" xml:space="preserve">
          <source>With type restrictions</source>
          <target state="translated">タイプ制限あり</target>
        </trans-unit>
        <trans-unit id="3de8fad554a89baa6f0efa10b103df6e113caa42" translate="yes" xml:space="preserve">
          <source>Within &lt;em&gt;replacement&lt;/em&gt;, the special match variable &lt;code&gt;$~&lt;/code&gt; will not refer to the current match.</source>
          <target state="translated">&lt;em&gt;Replacement&lt;/em&gt;内では、特別な一致変数 &lt;code&gt;$~&lt;/code&gt; は現在の一致を参照しません。</target>
        </trans-unit>
        <trans-unit id="6af64754a32146d98455ef6bbb8f403ebc27eb4e" translate="yes" xml:space="preserve">
          <source>Within a &lt;code&gt;describe&lt;/code&gt; block, concrete test cases are defined with &lt;code&gt;it&lt;/code&gt; . A descriptive string is supplied to &lt;code&gt;it&lt;/code&gt; describing what the test case tests specifically.</source>
          <target state="translated">&lt;code&gt;describe&lt;/code&gt; ブロック内では、具体的なテストケースが定義され &lt;code&gt;it&lt;/code&gt; 。記述文字列が供給され &lt;code&gt;it&lt;/code&gt; テストケースは、具体的にテストするもの記述する。</target>
        </trans-unit>
        <trans-unit id="4f462993d17edb380326f5e139a69e55a9d027a6" translate="yes" xml:space="preserve">
          <source>Within a class, separate method definitions, constants and inner class definitions with &lt;strong&gt;one newline&lt;/strong&gt;. For example:</source>
          <target state="translated">クラス内では、メソッド定義、定数、内部クラス定義を&lt;strong&gt;1つの改行&lt;/strong&gt;で分離し&lt;strong&gt;ます&lt;/strong&gt;。例えば：</target>
        </trans-unit>
        <trans-unit id="42f27f114cc575cf0b2a662c3c1856a0ca4435e1" translate="yes" xml:space="preserve">
          <source>Within a project:</source>
          <target state="translated">プロジェクトの中で。</target>
        </trans-unit>
        <trans-unit id="a53de957a76fa1e56f353ccce1baf1447eebdd09" translate="yes" xml:space="preserve">
          <source>Within the format string, any characters other than format specifiers (specifiers beginning with &lt;code&gt;%&lt;/code&gt;) are copied to the result.</source>
          <target state="translated">フォーマット文字列内で、フォーマット指定子（ &lt;code&gt;%&lt;/code&gt; で始まる指定子）以外の文字が結果にコピーされます。</target>
        </trans-unit>
        <trans-unit id="c05ab0bf2aac1c91eae67999b0515c7d18e17eae" translate="yes" xml:space="preserve">
          <source>Without a block, an &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;HTTP::Client::Response&lt;/a&gt;&lt;/code&gt; is returned and the response's body is available as a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; by invoking &lt;code&gt;&lt;a href=&quot;client/response#body-instance-method&quot;&gt;HTTP::Client::Response#body&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ブロックがない場合、 &lt;code&gt;&lt;a href=&quot;client/response&quot;&gt;HTTP::Client::Response&lt;/a&gt;&lt;/code&gt; が返され、 &lt;code&gt;&lt;a href=&quot;client/response#body-instance-method&quot;&gt;HTTP::Client::Response#body&lt;/a&gt;&lt;/code&gt; を呼び出すことにより、応答の本文が &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; として利用できます。</target>
        </trans-unit>
        <trans-unit id="17315f4fae1ec0bc32c55f510976225cf525d782" translate="yes" xml:space="preserve">
          <source>Without arguments or parentheses, &lt;code&gt;previous_def&lt;/code&gt; receives the same arguments as the method's arguments. Otherwise, it receives the arguments you pass to it.</source>
          <target state="translated">引数または括弧がない場合、 &lt;code&gt;previous_def&lt;/code&gt; はメソッドの引数と同じ引数を受け取ります。それ以外の場合は、渡した引数を受け取ります。</target>
        </trans-unit>
        <trans-unit id="c45858bb66ba36a38e72384ae52ea7e3aec4a151" translate="yes" xml:space="preserve">
          <source>Without arguments or parentheses, &lt;code&gt;super&lt;/code&gt; receives the same arguments as the method's arguments. Otherwise, it receives the arguments you pass to it.</source>
          <target state="translated">引数または括弧がない場合、 &lt;code&gt;super&lt;/code&gt; はメソッドの引数と同じ引数を受け取ります。それ以外の場合は、渡した引数を受け取ります。</target>
        </trans-unit>
        <trans-unit id="5bd9eee344a3184486d9c3fc5faf0ab423990cec" translate="yes" xml:space="preserve">
          <source>Without type restrictions</source>
          <target state="translated">型の制限なし</target>
        </trans-unit>
        <trans-unit id="ae354ee4b293760ac072aa60c54b9d36d39749dc" translate="yes" xml:space="preserve">
          <source>Wraps an &lt;code&gt;&lt;a href=&quot;../example&quot;&gt;Example&lt;/a&gt;&lt;/code&gt; and a &lt;code&gt;&lt;a href=&quot;../../proc&quot;&gt;Proc&lt;/a&gt;&lt;/code&gt; that will eventually execute the example.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../example&quot;&gt;Example&lt;/a&gt;&lt;/code&gt; と、最終的に例を実行する &lt;code&gt;&lt;a href=&quot;../../proc&quot;&gt;Proc&lt;/a&gt;&lt;/code&gt; をラップします。</target>
        </trans-unit>
        <trans-unit id="670058710c1eba058af364228acb5625fb0397b5" translate="yes" xml:space="preserve">
          <source>Wraps an &lt;code&gt;&lt;a href=&quot;../examplegroup&quot;&gt;ExampleGroup&lt;/a&gt;&lt;/code&gt; and a &lt;code&gt;&lt;a href=&quot;../../proc&quot;&gt;Proc&lt;/a&gt;&lt;/code&gt; that will eventually execute the group.</source>
          <target state="translated">最終的にグループを実行する &lt;code&gt;&lt;a href=&quot;../examplegroup&quot;&gt;ExampleGroup&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;../../proc&quot;&gt;Proc&lt;/a&gt;&lt;/code&gt; をラップします。</target>
        </trans-unit>
        <trans-unit id="85b7e36173f0d027de5570ab6ac3320244cc2ce6" translate="yes" xml:space="preserve">
          <source>Wraps an IO by calculating a specified digest on read or write operations.</source>
          <target state="translated">読み取りまたは書き込み操作で指定されたダイジェストを計算してIOをラップします。</target>
        </trans-unit>
        <trans-unit id="25f5fc9dff1ee900512076ea6485ef1156fe323b" translate="yes" xml:space="preserve">
          <source>Wraps around exceptions re-raised from concurrent calls. The original exception can be accessed via &lt;code&gt;#cause&lt;/code&gt;.</source>
          <target state="translated">同時呼び出しから再発生した例外をラップします。元の例外には &lt;code&gt;#cause&lt;/code&gt; からアクセスできます。</target>
        </trans-unit>
        <trans-unit id="66e8f769e9839f5ed8a9120a4e4b603bad4b319a" translate="yes" xml:space="preserve">
          <source>Write &lt;a href=&quot;documenting_code&quot;&gt;documentation&lt;/a&gt; to express the purpose of your code and support the &lt;code&gt;crystal docs&lt;/code&gt; generator.</source>
          <target state="translated">コードの目的を表現し、 &lt;code&gt;crystal docs&lt;/code&gt; ジェネレーターをサポートする&lt;a href=&quot;documenting_code&quot;&gt;ドキュメント&lt;/a&gt;を作成します。</target>
        </trans-unit>
        <trans-unit id="dc1575afba9884d83bcb058b9d3a994cc401f3f0" translate="yes" xml:space="preserve">
          <source>Write a fixed string</source>
          <target state="translated">固定文字列を書く</target>
        </trans-unit>
        <trans-unit id="eae355c19b2d4f4a5462c043e30922ef2ab682af" translate="yes" xml:space="preserve">
          <source>Write all the values from the context</source>
          <target state="translated">コンテキストからすべての値を書き込む</target>
        </trans-unit>
        <trans-unit id="423a4a9026307ae764cae7499a77e97e5a6cf952" translate="yes" xml:space="preserve">
          <source>Write all the values from the entry data</source>
          <target state="translated">エントリーデータから全ての値を書き込む</target>
        </trans-unit>
        <trans-unit id="ca4c04fec82f2be198b791df8debec663650f600" translate="yes" xml:space="preserve">
          <source>Write the &lt;code&gt;&lt;a href=&quot;entry&quot;&gt;Log::Entry&lt;/a&gt;&lt;/code&gt; to the &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; using this pattern</source>
          <target state="translated">このパターンを使用して、 &lt;code&gt;&lt;a href=&quot;entry&quot;&gt;Log::Entry&lt;/a&gt;&lt;/code&gt; を &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に書き込みます</target>
        </trans-unit>
        <trans-unit id="2f93a7c0d0aad0a36a9ad1284db003cedd26447e" translate="yes" xml:space="preserve">
          <source>Write the current process identifier</source>
          <target state="translated">現在のプロセス識別子を書き込む</target>
        </trans-unit>
        <trans-unit id="b494f09f51bfd3c6c906f1d510173e48712588b3" translate="yes" xml:space="preserve">
          <source>Write the entry timestamp in RFC3339 format</source>
          <target state="translated">エントリのタイムスタンプをRFC3339形式で書き込む</target>
        </trans-unit>
        <trans-unit id="78f2f0559f5f9207e800527083ac55c0f67879bb" translate="yes" xml:space="preserve">
          <source>Write the exception, including backtrace</source>
          <target state="translated">バックトレースを含む例外の書き込み</target>
        </trans-unit>
        <trans-unit id="7460cdd021c3cc327a8f1352b1eb0dfb45141624" translate="yes" xml:space="preserve">
          <source>Write the message of the entry</source>
          <target state="translated">エントリーのメッセージを書く</target>
        </trans-unit>
        <trans-unit id="2be65e97ed7b460be489c63acb0aa6b022df589d" translate="yes" xml:space="preserve">
          <source>Write the program name.</source>
          <target state="translated">プログラム名を書きます。</target>
        </trans-unit>
        <trans-unit id="7521605d35619849e8d3511ef5c93732a6ef0fc1" translate="yes" xml:space="preserve">
          <source>Write the program name. See &lt;code&gt;&lt;a href=&quot;../log#progname-class-method&quot;&gt;Log.progname&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">プログラム名を書いてください。 &lt;code&gt;&lt;a href=&quot;../log#progname-class-method&quot;&gt;Log.progname&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="6f3a8bf877dacf168bcdfb7eb89b7f65b9f9390a" translate="yes" xml:space="preserve">
          <source>Write the severity</source>
          <target state="translated">重大度を書く</target>
        </trans-unit>
        <trans-unit id="b5adf01ec9985c643dd8c87617155b2c387aa4c2" translate="yes" xml:space="preserve">
          <source>Write the source for non-root entries</source>
          <target state="translated">非ルートエントリのソースを書く</target>
        </trans-unit>
        <trans-unit id="5f435830a7c07f19c4072a88821b38028c3f69e6" translate="yes" xml:space="preserve">
          <source>Writer</source>
          <target state="translated">Writer</target>
        </trans-unit>
        <trans-unit id="3e027fba7b7e02a1cbb86a1299bb839b38953346" translate="yes" xml:space="preserve">
          <source>Writer zip files</source>
          <target state="translated">ライターのzipファイル</target>
        </trans-unit>
        <trans-unit id="f16a74322b8c295cc62484b7b2435ad5c5ac9f52" translate="yes" xml:space="preserve">
          <source>Writer#add</source>
          <target state="translated">Writer#add</target>
        </trans-unit>
        <trans-unit id="514633d6687b9e2aafc037175131638304a1d721" translate="yes" xml:space="preserve">
          <source>Writer#add_dir</source>
          <target state="translated">Writer#add_dir</target>
        </trans-unit>
        <trans-unit id="24c04f4db2fce04982046c9a63270ee3e144b0ff" translate="yes" xml:space="preserve">
          <source>Writer#close</source>
          <target state="translated">Writer#close</target>
        </trans-unit>
        <trans-unit id="7a0fc1b8c0d66d0f47f0e22bc8633ad362018aea" translate="yes" xml:space="preserve">
          <source>Writer#closed?</source>
          <target state="translated">Writer#closed?</target>
        </trans-unit>
        <trans-unit id="180e71699aeb7efc2ab07bc40eca9d3a625c62bb" translate="yes" xml:space="preserve">
          <source>Writer#comment=</source>
          <target state="translated">Writer#comment=</target>
        </trans-unit>
        <trans-unit id="a76227bb1e9f735f0ea903bbd93e4403cce3f12c" translate="yes" xml:space="preserve">
          <source>Writer#flush</source>
          <target state="translated">Writer#flush</target>
        </trans-unit>
        <trans-unit id="1783d6d7cdedf83ef03dee082e6911625034cf91" translate="yes" xml:space="preserve">
          <source>Writer#header</source>
          <target state="translated">Writer#header</target>
        </trans-unit>
        <trans-unit id="e9e1f3e11dc6e4770fd226744bc8454a682db2b2" translate="yes" xml:space="preserve">
          <source>Writer#read</source>
          <target state="translated">Writer#read</target>
        </trans-unit>
        <trans-unit id="96325ec91e5a2ff7f6829ef9f7e7491e4d0f6b76" translate="yes" xml:space="preserve">
          <source>Writer#sync_close=</source>
          <target state="translated">Writer#sync_close=</target>
        </trans-unit>
        <trans-unit id="a1afec2482550863fbdc19bb5a43c49d0fa65c1a" translate="yes" xml:space="preserve">
          <source>Writer#sync_close?</source>
          <target state="translated">Writer#sync_close?</target>
        </trans-unit>
        <trans-unit id="65c602b2061cd2ffe94354722a01c8f0e8497fd3" translate="yes" xml:space="preserve">
          <source>Writer#write</source>
          <target state="translated">Writer#write</target>
        </trans-unit>
        <trans-unit id="e6c1e352e13c0816a1cf726241b92a2243d7e2ad" translate="yes" xml:space="preserve">
          <source>Writer.new</source>
          <target state="translated">Writer.new</target>
        </trans-unit>
        <trans-unit id="5d73cd2332828de9ed803ccc91628075bd96182f" translate="yes" xml:space="preserve">
          <source>Writer.open</source>
          <target state="translated">Writer.open</target>
        </trans-unit>
        <trans-unit id="12826c57d97f938320d9c16815ed378824c497f2" translate="yes" xml:space="preserve">
          <source>Writer::Entry</source>
          <target state="translated">Writer::Entry</target>
        </trans-unit>
        <trans-unit id="1ac132387eb8fbad8cb5f99de8cc43c892063d0d" translate="yes" xml:space="preserve">
          <source>Writes (streams) zip entries to an &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">zipエントリを &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に書き込み（ストリーム）します。</target>
        </trans-unit>
        <trans-unit id="8415a033e8953bf71c48b0761ff7d7d4dad72fad" translate="yes" xml:space="preserve">
          <source>Writes (streams) zip entries to an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">zipエントリを &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に書き込み（ストリーム）します。</target>
        </trans-unit>
        <trans-unit id="cb64dcc46c7407a52e9c31a2051611ef35b5ea3c" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;&quot;nil&quot;&lt;/code&gt; to the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;nil&quot;&lt;/code&gt; を指定された &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に書き込みます。</target>
        </trans-unit>
        <trans-unit id="fdb3636a4a8e2f592ed3860e6b30a0e599d2a09c" translate="yes" xml:space="preserve">
          <source>Writes JSON into the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に JSONを書き込みます。</target>
        </trans-unit>
        <trans-unit id="cb2fa80e4b8531d76c33c27ffb05f5fbe64d072f" translate="yes" xml:space="preserve">
          <source>Writes JSON into the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;. A &lt;code&gt;&lt;a href=&quot;json/builder&quot;&gt;JSON::Builder&lt;/a&gt;&lt;/code&gt; is yielded to the block.</source>
          <target state="translated">指定された &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に JSONを書き込みます。A &lt;code&gt;&lt;a href=&quot;json/builder&quot;&gt;JSON::Builder&lt;/a&gt;&lt;/code&gt; ブロックに屈しています。</target>
        </trans-unit>
        <trans-unit id="2d5b9a8d5c7b2799b0cbfcbe38afe1ab2204ca81" translate="yes" xml:space="preserve">
          <source>Writes XML document into the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; にXMLドキュメントを書き込みます。</target>
        </trans-unit>
        <trans-unit id="ebce516a7866525cfd28275b6be07f9e3d5857c2" translate="yes" xml:space="preserve">
          <source>Writes XML document into the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;. An &lt;code&gt;&lt;a href=&quot;xml/builder&quot;&gt;XML::Builder&lt;/a&gt;&lt;/code&gt; is yielded to the block.</source>
          <target state="translated">指定された &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; にXMLドキュメントを書き込みます。 &lt;code&gt;&lt;a href=&quot;xml/builder&quot;&gt;XML::Builder&lt;/a&gt;&lt;/code&gt; ブロックに屈しています。</target>
        </trans-unit>
        <trans-unit id="aa69b01837114f0162aa72788162f8bf7eb21ed0" translate="yes" xml:space="preserve">
          <source>Writes XML fragment into the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; にXMLフラグメントを書き込みます。</target>
        </trans-unit>
        <trans-unit id="60ffddb3414c1cf5673c37dc618d8c398690175c" translate="yes" xml:space="preserve">
          <source>Writes XML fragment into the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;. An &lt;code&gt;&lt;a href=&quot;xml/builder&quot;&gt;XML::Builder&lt;/a&gt;&lt;/code&gt; is yielded to the block.</source>
          <target state="translated">指定された &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; にXMLフラグメントを書き込みます。 &lt;code&gt;&lt;a href=&quot;xml/builder&quot;&gt;XML::Builder&lt;/a&gt;&lt;/code&gt; ブロックに屈しています。</target>
        </trans-unit>
        <trans-unit id="17265cccd9dc2ba6ddbcf61ffd1f8ca20bd0068d" translate="yes" xml:space="preserve">
          <source>Writes XML into the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に XMLを書き込みます。</target>
        </trans-unit>
        <trans-unit id="b76b0f938841e8b4de072223ea1a25584d25c582" translate="yes" xml:space="preserve">
          <source>Writes XML into the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;. An &lt;code&gt;&lt;a href=&quot;xml/builder&quot;&gt;XML::Builder&lt;/a&gt;&lt;/code&gt; is yielded to the block.</source>
          <target state="translated">指定された &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に XMLを書き込みます。 &lt;code&gt;&lt;a href=&quot;xml/builder&quot;&gt;XML::Builder&lt;/a&gt;&lt;/code&gt; ブロックに屈しています。</target>
        </trans-unit>
        <trans-unit id="fa14b7621b3a70dff2d2f3a105d979def8e0c451" translate="yes" xml:space="preserve">
          <source>Writes YAML into the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">YAMLを指定された &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に書き込みます。</target>
        </trans-unit>
        <trans-unit id="089f3ade65fd7f6c0d400e808d5100e10fcc82e5" translate="yes" xml:space="preserve">
          <source>Writes YAML into the given &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;. A &lt;code&gt;&lt;a href=&quot;yaml/builder&quot;&gt;YAML::Builder&lt;/a&gt;&lt;/code&gt; is yielded to the block.</source>
          <target state="translated">YAMLを指定された &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に書き込みます。A &lt;code&gt;&lt;a href=&quot;yaml/builder&quot;&gt;YAML::Builder&lt;/a&gt;&lt;/code&gt; ブロックに屈しています。</target>
        </trans-unit>
        <trans-unit id="bbde4e46ec8d184f0d2a9fbc7c3f8c31c7cd24a8" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;&lt;a href=&quot;builder#null-instance-method&quot;&gt;#null&lt;/a&gt;&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;builder#null-instance-method&quot;&gt;#null&lt;/a&gt;&lt;/code&gt; 値を書き込みます。</target>
        </trans-unit>
        <trans-unit id="99fb36a62e1b5a23102d8c61c84e0bf672f2c9cd" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;&lt;a href=&quot;entry&quot;&gt;Log::Entry&lt;/a&gt;&lt;/code&gt; through an &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; を介して &lt;code&gt;&lt;a href=&quot;entry&quot;&gt;Log::Entry&lt;/a&gt;&lt;/code&gt; を書き込みます</target>
        </trans-unit>
        <trans-unit id="0cb44b18ab7a868d83da8614106d44d08414598b" translate="yes" xml:space="preserve">
          <source>Writes a boolean value.</source>
          <target state="translated">ブール値を書き込みます。</target>
        </trans-unit>
        <trans-unit id="ad6f303de67f6f64391dcffd1997c880e0b48ec8" translate="yes" xml:space="preserve">
          <source>Writes a byte to &lt;code&gt;writer&lt;/code&gt;.</source>
          <target state="translated">バイトを &lt;code&gt;writer&lt;/code&gt; 書き込みます。</target>
        </trans-unit>
        <trans-unit id="7e0c204efe04f50940d643cad92d87376b8e9c07" translate="yes" xml:space="preserve">
          <source>Writes a capitalized version of &lt;code&gt;self&lt;/code&gt; to the given &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">指定された&lt;em&gt;io&lt;/em&gt;に &lt;code&gt;self&lt;/code&gt; 大文字バージョンを書き込みます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="eee8361aa10f83e1cb7b602eeaedc3824db91728" translate="yes" xml:space="preserve">
          <source>Writes a downcased version of &lt;code&gt;self&lt;/code&gt; to the given &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">指定された&lt;em&gt;io&lt;/em&gt;に &lt;code&gt;self&lt;/code&gt; ダウンケースバージョンを書き込みます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="df016762d86774ad6f136183d5eadccc68d018b1" translate="yes" xml:space="preserve">
          <source>Writes a float.</source>
          <target state="translated">フロートを書き込みます。</target>
        </trans-unit>
        <trans-unit id="d08b2bd68b87a87f182815a85244973218c05865" translate="yes" xml:space="preserve">
          <source>Writes a formatted string to this IO.</source>
          <target state="translated">フォーマットされた文字列をこのIOに書き込みます。</target>
        </trans-unit>
        <trans-unit id="b52f29a1311b8994824b724c4d09d1ee4e7c939b" translate="yes" xml:space="preserve">
          <source>Writes a formatted string to this IO. For details on the format string, see &lt;code&gt;Kernel::sprintf&lt;/code&gt;.</source>
          <target state="translated">フォーマットされた文字列をこのIOに書き込みます。フォーマット文字列の詳細については、 &lt;code&gt;Kernel::sprintf&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="cb18b1353d53796c65bfab0bce5e3151631b33c0" translate="yes" xml:space="preserve">
          <source>Writes a newline character.</source>
          <target state="translated">改行文字を書きます。</target>
        </trans-unit>
        <trans-unit id="83a71725897433436fe7ae0e8b66bf5cff32246e" translate="yes" xml:space="preserve">
          <source>Writes a raw value, considered a scalar, directly into the IO without processing.</source>
          <target state="translated">スカラとみなされる生の値を、処理せずに直接IOに書き込みます。</target>
        </trans-unit>
        <trans-unit id="b446e682af61abec2fcf131c2263333f26f47eb6" translate="yes" xml:space="preserve">
          <source>Writes a raw value, considered a scalar, directly into the IO without processing. This is the only method that might lead to invalid JSON being generated, so you must be sure that &lt;em&gt;string&lt;/em&gt; contains a valid JSON string.</source>
          <target state="translated">スカラーと見なされる生の値を、処理せずに直接IOに書き込みます。これは、無効なJSONが生成される可能性がある唯一の方法であるため、&lt;em&gt;string&lt;/em&gt;に有効なJSON文字&lt;em&gt;列&lt;/em&gt;が含まれていることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="a2520f397db6fa11afd7bdee497222864a2a686b" translate="yes" xml:space="preserve">
          <source>Writes a representation of the scanner.</source>
          <target state="translated">スキャナの表現を書き込みます。</target>
        </trans-unit>
        <trans-unit id="f8c2edeb7c5515c64d8c52a72d5c5570307c3daf" translate="yes" xml:space="preserve">
          <source>Writes a scalar value.</source>
          <target state="translated">スカラ値を書き込みます。</target>
        </trans-unit>
        <trans-unit id="e2d6d491c598edca8b168483f90d3d7539121f38" translate="yes" xml:space="preserve">
          <source>Writes a single byte into this &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に 1バイトを書き込みます。</target>
        </trans-unit>
        <trans-unit id="4f4bff845fc335bacbc3b8352a46ee2a318ee6b5" translate="yes" xml:space="preserve">
          <source>Writes a single byte into this &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に 1バイトを書き込みます。</target>
        </trans-unit>
        <trans-unit id="31ef2b98c987d14bbddd2b6cbcce499fedfdec98" translate="yes" xml:space="preserve">
          <source>Writes a slice of UTF-8 encoded bytes to this &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;, using the current encoding.</source>
          <target state="translated">現在のエンコーディングを使用して、UTF-8でエンコードされたバイトのスライスをこの &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に書き込みます。</target>
        </trans-unit>
        <trans-unit id="4e07711fc44b1797fb2990548bad2b9486a7406f" translate="yes" xml:space="preserve">
          <source>Writes a slice to &lt;code&gt;writer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;writer&lt;/code&gt; スライスを書き込みます。</target>
        </trans-unit>
        <trans-unit id="74ec57c2fb535f20d2209585efa908df34898e94" translate="yes" xml:space="preserve">
          <source>Writes a string representation of the set to &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">セットの文字列表現を&lt;em&gt;ioに&lt;/em&gt;書き込みます。</target>
        </trans-unit>
        <trans-unit id="11a73af4769d2fa84714761c91018f9161b700b9" translate="yes" xml:space="preserve">
          <source>Writes a string.</source>
          <target state="translated">文字列を書き込みます。</target>
        </trans-unit>
        <trans-unit id="f5f813d46cfce4ab9ae3e7b39707ce6714f5c679" translate="yes" xml:space="preserve">
          <source>Writes a string. The given &lt;em&gt;value&lt;/em&gt; is first converted to a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; by invoking &lt;code&gt;to_s&lt;/code&gt; on it.</source>
          <target state="translated">文字列を書き込みます。指定された&lt;em&gt;値&lt;/em&gt;は、最初に &lt;code&gt;to_s&lt;/code&gt; を呼び出すことによって &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 変換されます。</target>
        </trans-unit>
        <trans-unit id="f865cb27cc333672bebe025bf3738ba110baec20" translate="yes" xml:space="preserve">
          <source>Writes a titleized version of &lt;code&gt;self&lt;/code&gt; to the given &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">指定された&lt;em&gt;io&lt;/em&gt;に &lt;code&gt;self&lt;/code&gt; タイトル付きバージョンを書き込みます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3e43e9dae41f73bbccbf5a67e6fb967bd576a3e1" translate="yes" xml:space="preserve">
          <source>Writes a upcased version of &lt;code&gt;self&lt;/code&gt; to the given &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">指定された&lt;em&gt;io&lt;/em&gt;に &lt;code&gt;self&lt;/code&gt; 大文字バージョンを書き込みます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4daa1d0d33f890466368be29f61b3bfbe259d316" translate="yes" xml:space="preserve">
          <source>Writes an camelcased version of &lt;code&gt;self&lt;/code&gt; to the given &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">指定された&lt;em&gt;io&lt;/em&gt;に &lt;code&gt;self&lt;/code&gt; キャメルケースバージョンを書き込みます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f0758ed5a71a3cb23d2919a124b14cae694726e2" translate="yes" xml:space="preserve">
          <source>Writes an integer.</source>
          <target state="translated">整数を書き込みます。</target>
        </trans-unit>
        <trans-unit id="c9bba8148d7a0b4fa812df04beca10f9ba15d19e" translate="yes" xml:space="preserve">
          <source>Writes an object's field and then invokes the block.</source>
          <target state="translated">オブジェクトのフィールドを書き込み、ブロックを呼び出します。</target>
        </trans-unit>
        <trans-unit id="f509c4a70a38e537587b9a5c949113342211a415" translate="yes" xml:space="preserve">
          <source>Writes an object's field and then invokes the block. This is equivalent of invoking &lt;code&gt;&lt;a href=&quot;builder#string(value)-instance-method&quot;&gt;#string(value)&lt;/a&gt;&lt;/code&gt; and then invoking the block.</source>
          <target state="translated">オブジェクトのフィールドを書き込んでから、ブロックを呼び出します。これは、 &lt;code&gt;&lt;a href=&quot;builder#string(value)-instance-method&quot;&gt;#string(value)&lt;/a&gt;&lt;/code&gt; を呼び出してからブロックを呼び出すのと同じです。</target>
        </trans-unit>
        <trans-unit id="3f1dde75164fa79f0d037ed2251bc1f864f01c0e" translate="yes" xml:space="preserve">
          <source>Writes an object's field and value.</source>
          <target state="translated">オブジェクトのフィールドと値を書き込みます。</target>
        </trans-unit>
        <trans-unit id="a46aeffe0621112d7786c85886e044f0893bcd1a" translate="yes" xml:space="preserve">
          <source>Writes an object's field and value. The field's name is first converted to a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; by invoking &lt;code&gt;to_s&lt;/code&gt; on it.</source>
          <target state="translated">オブジェクトのフィールドと値を書き込みます。フィールドの名前は、まず &lt;code&gt;to_s&lt;/code&gt; を呼び出すことによって &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 変換されます。</target>
        </trans-unit>
        <trans-unit id="7e16b89aadc394c4e0f12ff67c92287502470bf2" translate="yes" xml:space="preserve">
          <source>Writes an underscored version of &lt;code&gt;self&lt;/code&gt; to the given &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">強調表示されたバージョンの &lt;code&gt;self&lt;/code&gt; を指定された&lt;em&gt;ioに&lt;/em&gt;書き込みます。</target>
        </trans-unit>
        <trans-unit id="1127c3de82653485d37eebad52d573da0e48f040" translate="yes" xml:space="preserve">
          <source>Writes at most &lt;em&gt;slice.size&lt;/em&gt; bytes from &lt;em&gt;slice&lt;/em&gt; into the wrapped &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;スライス&lt;/em&gt;からラップされた &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に最大で&lt;em&gt;slice.size&lt;/em&gt;バイトを書き込みます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="807eb1c62f92974ce9b54dfae2d8417b19fb952d" translate="yes" xml:space="preserve">
          <source>Writes at most &lt;em&gt;slice.size&lt;/em&gt; bytes from &lt;em&gt;slice&lt;/em&gt; into the wrapped &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;. Returns the number of bytes written.</source>
          <target state="translated">&lt;em&gt;スライス&lt;/em&gt;からラップされた &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に最大で&lt;em&gt;slice.size&lt;/em&gt;バイトを書き込みます。書き込まれたバイト数を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ed3b964b21c88113e0abfe845eca448171eb703c" translate="yes" xml:space="preserve">
          <source>Writes at most &lt;em&gt;slice.size&lt;/em&gt; bytes from &lt;em&gt;slice&lt;/em&gt; into the wrapped &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;スライス&lt;/em&gt;からラップされた &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に最大で&lt;em&gt;slice.size&lt;/em&gt;バイトを書き込みます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e5408a020b7d4cee4d94c6c87047eb33122a788f" translate="yes" xml:space="preserve">
          <source>Writes at most &lt;em&gt;slice.size&lt;/em&gt; bytes from &lt;em&gt;slice&lt;/em&gt; into the wrapped &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;. Returns the number of bytes written.</source>
          <target state="translated">&lt;em&gt;スライス&lt;/em&gt;からラップされた &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に最大で&lt;em&gt;slice.size&lt;/em&gt;バイトを書き込みます。書き込まれたバイト数を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="11d2a06d0daae478f01c0a8fa26b63f3df362288" translate="yes" xml:space="preserve">
          <source>Writes the &lt;em&gt;entry&lt;/em&gt; to this backend.</source>
          <target state="translated">このバックエンドに&lt;em&gt;エントリ&lt;/em&gt;を書き込みます。</target>
        </trans-unit>
        <trans-unit id="9df75f432134a4e5e207622f87b6dac969886478" translate="yes" xml:space="preserve">
          <source>Writes the base64-decoded version of &lt;em&gt;data&lt;/em&gt; to &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">base64でデコードされたバージョンの&lt;em&gt;データ&lt;/em&gt;を&lt;em&gt;ioに&lt;/em&gt;書き込みます。</target>
        </trans-unit>
        <trans-unit id="66ce002d1708046ead4db0ed9f555abe7f317aa0" translate="yes" xml:space="preserve">
          <source>Writes the base64-decoded version of &lt;em&gt;data&lt;/em&gt; to &lt;em&gt;io&lt;/em&gt;. This will decode either the normal or urlsafe alphabets.</source>
          <target state="translated">base64でデコードされたバージョンの&lt;em&gt;データ&lt;/em&gt;を&lt;em&gt;ioに&lt;/em&gt;書き込みます。これにより、通常のアルファベットまたはURLセーフのアルファベットがデコードされます。</target>
        </trans-unit>
        <trans-unit id="fa727f035638530ac8c934c2cb24ca5e37766938" translate="yes" xml:space="preserve">
          <source>Writes the base64-encoded version of &lt;em&gt;data&lt;/em&gt; to &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">base64でエンコードされたバージョンの&lt;em&gt;データ&lt;/em&gt;を&lt;em&gt;ioに&lt;/em&gt;書き込みます。</target>
        </trans-unit>
        <trans-unit id="927c8456975e8f0808c1bd38648f55026e7ffd6c" translate="yes" xml:space="preserve">
          <source>Writes the base64-encoded version of &lt;em&gt;data&lt;/em&gt; to &lt;em&gt;io&lt;/em&gt;. This method complies with &lt;a href=&quot;https://tools.ietf.org/html/rfc2045&quot;&gt;RFC 2045&lt;/a&gt;. Line feeds are added to every 60 encoded characters.</source>
          <target state="translated">base64でエンコードされたバージョンの&lt;em&gt;データ&lt;/em&gt;を&lt;em&gt;ioに&lt;/em&gt;書き込みます。このメソッドは&lt;a href=&quot;https://tools.ietf.org/html/rfc2045&quot;&gt;RFC 2045に&lt;/a&gt;準拠しています。エンコードされた60文字ごとに改行が追加されます。</target>
        </trans-unit>
        <trans-unit id="b2e28847db31cb84e25fcbca4b7e0e5ec5822f44" translate="yes" xml:space="preserve">
          <source>Writes the base64-encoded version of &lt;em&gt;data&lt;/em&gt; using a urlsafe alphabet to &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">urlsafeアルファベットを使用して、base64でエンコードされたバージョンの&lt;em&gt;データ&lt;/em&gt;を&lt;em&gt;ioに&lt;/em&gt;書き込みます。</target>
        </trans-unit>
        <trans-unit id="099168c2656ee14eae53c296d9c97c5b329c30f9" translate="yes" xml:space="preserve">
          <source>Writes the base64-encoded version of &lt;em&gt;data&lt;/em&gt; using a urlsafe alphabet to &lt;em&gt;io&lt;/em&gt;. This method complies with &quot;Base 64 Encoding with URL and Filename Safe Alphabet&quot; in &lt;a href=&quot;https://tools.ietf.org/html/rfc4648&quot;&gt;RFC 4648&lt;/a&gt;.</source>
          <target state="translated">urlsafeアルファベットを使用して、base64でエンコードされたバージョンの&lt;em&gt;データ&lt;/em&gt;を&lt;em&gt;ioに&lt;/em&gt;書き込みます。このメソッドは、&lt;a href=&quot;https://tools.ietf.org/html/rfc4648&quot;&gt;RFC 4648の&lt;/a&gt;「URLおよびファイル名セーフアルファベットを使用したBase 64エンコーディング」に準拠しています。</target>
        </trans-unit>
        <trans-unit id="c8c683f4bf8ee772349aef4fa9d01df911ea9380" translate="yes" xml:space="preserve">
          <source>Writes the base64-encoded version of &lt;em&gt;data&lt;/em&gt; with no newlines to &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;io&lt;/em&gt;への改行なしで、base64でエンコードされたバージョンの&lt;em&gt;データ&lt;/em&gt;を書き込みます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2b4401eb6ae8f21b5a528af64cf9b263cce1a3dc" translate="yes" xml:space="preserve">
          <source>Writes the base64-encoded version of &lt;em&gt;data&lt;/em&gt; with no newlines to &lt;em&gt;io&lt;/em&gt;. This method complies with &lt;a href=&quot;https://tools.ietf.org/html/rfc4648&quot;&gt;RFC 4648&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;io&lt;/em&gt;への改行なしで、base64でエンコードされたバージョンの&lt;em&gt;データ&lt;/em&gt;を書き込みます。このメソッドは&lt;a href=&quot;https://tools.ietf.org/html/rfc4648&quot;&gt;RFC 4648に&lt;/a&gt;準拠しています。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d40e4c6a167f7e1eb8876c485e1d8a265777c2e5" translate="yes" xml:space="preserve">
          <source>Writes the contents of &lt;em&gt;slice&lt;/em&gt; into this &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;スライス&lt;/em&gt;の内容をこの &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に書き込み&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="a66395a529daedcde4de56635df754977012f500" translate="yes" xml:space="preserve">
          <source>Writes the contents of &lt;em&gt;slice&lt;/em&gt; into this &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;スライス&lt;/em&gt;の内容をこの &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に書き込み&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="48b26dc3c36781a1e23545de22e108d94f0f53ff" translate="yes" xml:space="preserve">
          <source>Writes the contents of the environment to &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">環境の内容を&lt;em&gt;ioに&lt;/em&gt;書き込みます。</target>
        </trans-unit>
        <trans-unit id="0b722ec17722d90b799e2943f8c2b9f6f356c648" translate="yes" xml:space="preserve">
          <source>Writes the end of an array.</source>
          <target state="translated">配列の末尾を書き込みます。</target>
        </trans-unit>
        <trans-unit id="ac61dc9847a926e7e9291e3154057a98a1190fb6" translate="yes" xml:space="preserve">
          <source>Writes the end of an object.</source>
          <target state="translated">オブジェクトの末尾を書き込みます。</target>
        </trans-unit>
        <trans-unit id="7ad6c71bac590012904fecf0d8370d34b86895d5" translate="yes" xml:space="preserve">
          <source>Writes the given &lt;em&gt;content&lt;/em&gt; to &lt;em&gt;filename&lt;/em&gt;.</source>
          <target state="translated">指定された&lt;em&gt;コンテンツ&lt;/em&gt;を&lt;em&gt;filenameに&lt;/em&gt;書き込み&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="15d94e4d453d3eac257ccd3e02b775df641a4424" translate="yes" xml:space="preserve">
          <source>Writes the given object into this &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">指定されたオブジェクトをこの &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に書き込みます。</target>
        </trans-unit>
        <trans-unit id="fb77cb83635fe114f8fb11d594d1cb4f2c0867f9" translate="yes" xml:space="preserve">
          <source>Writes the given object into this &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;. This ends up calling &lt;code&gt;to_s(io)&lt;/code&gt; on the object.</source>
          <target state="translated">指定されたオブジェクトをこの &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に書き込みます。これにより、オブジェクトで &lt;code&gt;to_s(io)&lt;/code&gt; が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="503254e0c03685be9136567b7b97a7fea06820f1" translate="yes" xml:space="preserve">
          <source>Writes the given object to this &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; followed by a newline character.</source>
          <target state="translated">指定されたオブジェクトをこの &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に書き込み、その後に改行文字を書き込みます。</target>
        </trans-unit>
        <trans-unit id="f6789b1caaa6c677e43431ba6e39cfb9bd084364" translate="yes" xml:space="preserve">
          <source>Writes the given object to this &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; using the specified &lt;em&gt;format&lt;/em&gt;.</source>
          <target state="translated">指定された&lt;em&gt;形式&lt;/em&gt;を使用して、指定されたオブジェクトをこの &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に書き込み&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="cb3b0f3c5570f58500fffaf1483440d0a843f18e" translate="yes" xml:space="preserve">
          <source>Writes the given objects into this &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; by invoking &lt;code&gt;to_s(io)&lt;/code&gt; on each of the objects.</source>
          <target state="translated">各オブジェクトで &lt;code&gt;to_s(io)&lt;/code&gt; を呼び出すことにより、指定されたオブジェクトをこの &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に書き込みます。</target>
        </trans-unit>
        <trans-unit id="dab1ae7926ff3b3c0396049cfb64ebdf2796bd0b" translate="yes" xml:space="preserve">
          <source>Writes the given objects, each followed by a newline character.</source>
          <target state="translated">与えられたオブジェクトを、それぞれ改行文字の後に続けて書き込みます。</target>
        </trans-unit>
        <trans-unit id="59cd8f0179239c61539dec3b54eb01434af7f92b" translate="yes" xml:space="preserve">
          <source>Writes the given string to this &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; followed by a newline character unless the string already ends with one.</source>
          <target state="translated">文字列がすでに1つで終わっていない限り、指定された文字列をこの &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に書き込み、その後に改行文字を書き込みます。</target>
        </trans-unit>
        <trans-unit id="a699feebf27558edf4cf2782b184939d54e72574" translate="yes" xml:space="preserve">
          <source>Writes the start of an array, invokes the block, and the writes the end of it.</source>
          <target state="translated">配列の先頭を書き込み、ブロックを呼び出し、最後に書き込みます。</target>
        </trans-unit>
        <trans-unit id="b33a94beb5d0544f3ecf2c52ab51f396578456b2" translate="yes" xml:space="preserve">
          <source>Writes the start of an array.</source>
          <target state="translated">配列の先頭を書き込みます。</target>
        </trans-unit>
        <trans-unit id="0f346edab55d6c12a11edbe5e99692209fb68940" translate="yes" xml:space="preserve">
          <source>Writes the start of an object, invokes the block, and the writes the end of it.</source>
          <target state="translated">オブジェクトの開始を書き込み、ブロックを呼び出し、終了を書き込みます。</target>
        </trans-unit>
        <trans-unit id="c58148e62f06fc83036e5e7f85cd08a47af253e8" translate="yes" xml:space="preserve">
          <source>Writes the start of an object.</source>
          <target state="translated">オブジェクトの先頭を書き込みます。</target>
        </trans-unit>
        <trans-unit id="ba2cac3727ce67d31f93e9ca991fac8d13630a6e" translate="yes" xml:space="preserve">
          <source>Writes this complex object to an &lt;em&gt;io&lt;/em&gt;, surrounded by parentheses.</source>
          <target state="translated">括弧で囲まれた&lt;em&gt;ioに&lt;/em&gt;この複雑なオブジェクトを書き込みます。</target>
        </trans-unit>
        <trans-unit id="88bd60efb2b2ed25c062f263bd59b21f3c1db8eb" translate="yes" xml:space="preserve">
          <source>Writes this complex object to an &lt;em&gt;io&lt;/em&gt;.</source>
          <target state="translated">この複雑なオブジェクトを&lt;em&gt;ioに&lt;/em&gt;書き込みます。</target>
        </trans-unit>
        <trans-unit id="7baa820c652d2e91479fe8f5a597980a69c276bf" translate="yes" xml:space="preserve">
          <source>Writes this float to the given &lt;em&gt;io&lt;/em&gt; in the given &lt;em&gt;format&lt;/em&gt;.</source>
          <target state="translated">このfloatを指定した&lt;em&gt;io&lt;/em&gt;に指定した&lt;em&gt;形式&lt;/em&gt;で書き込み&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="10a10cd04bd1c66e1382510f2a8b887204b4330f" translate="yes" xml:space="preserve">
          <source>Writes this float to the given &lt;em&gt;io&lt;/em&gt; in the given &lt;em&gt;format&lt;/em&gt;. See also: &lt;code&gt;&lt;a href=&quot;io#write_bytes(object,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt;IO#write_bytes&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">このfloatを指定した&lt;em&gt;io&lt;/em&gt;に指定した&lt;em&gt;形式&lt;/em&gt;で書き込み&lt;em&gt;ます&lt;/em&gt;。参照： &lt;code&gt;&lt;a href=&quot;io#write_bytes(object,format:IO::ByteFormat=IO::ByteFormat::SystemEndian)-instance-method&quot;&gt;IO#write_bytes&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="76dfe7017c3e70b75da0518bea7363388b514d3f" translate="yes" xml:space="preserve">
          <source>Writes this integer to the given &lt;em&gt;io&lt;/em&gt; in the given &lt;em&gt;format&lt;/em&gt;.</source>
          <target state="translated">この整数を、指定された&lt;em&gt;フォーマット&lt;/em&gt;で指定された&lt;em&gt;io&lt;/em&gt;に書き込み&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="972d7da0bba6b4454919328dc42a08143d7c4747" translate="yes" xml:space="preserve">
          <source>Writing Shards</source>
          <target state="translated">ライティング・シャード</target>
        </trans-unit>
        <trans-unit id="8cc32ed79abfe55aa35fa9e35754741801c27148" translate="yes" xml:space="preserve">
          <source>Writing a &lt;code&gt;shard.yml&lt;/code&gt;</source>
          <target state="translated">書き込み &lt;code&gt;shard.yml&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="da1fa564bef3efeff39c1e45a9ed19fc14f8855d" translate="yes" xml:space="preserve">
          <source>Writing a README</source>
          <target state="translated">READMEの書き方</target>
        </trans-unit>
        <trans-unit id="c821e42375a670a4bc781478fa473b0fc57ff583" translate="yes" xml:space="preserve">
          <source>Writing a program in a single file is OK for little snippets and small benchmark code. Big programs are better maintained and understood when split across different files.</source>
          <target state="translated">プログラムを1つのファイルに書くのは、小さなスニペットや小さなベンチマークコードであれば問題ありませんが、大きなプログラムは別のファイルに分割した方がメンテナンスがしやすく、理解しやすいです。大きなプログラムは、異なるファイルに分割された方が、よりよくメンテナンスされ、理解されます。</target>
        </trans-unit>
        <trans-unit id="f9dee0249af03911723455d5b554202517ccd7e2" translate="yes" xml:space="preserve">
          <source>Writing the Code</source>
          <target state="translated">コードを書く</target>
        </trans-unit>
        <trans-unit id="03a5ca10c325053e0fb69317de7e2f0d6eb7b1d1" translate="yes" xml:space="preserve">
          <source>Writing:</source>
          <target state="translated">Writing:</target>
        </trans-unit>
        <trans-unit id="5ea7bec8a215209fb7c56a88b99bdd969db8ab9d" translate="yes" xml:space="preserve">
          <source>X86_FastCall</source>
          <target state="translated">X86_FastCall</target>
        </trans-unit>
        <trans-unit id="436faa61dfda3d3668daa44b7f04fc86d44a7f08" translate="yes" xml:space="preserve">
          <source>X86_StdCall</source>
          <target state="translated">X86_StdCall</target>
        </trans-unit>
        <trans-unit id="c0aa9ef764d832b80428d756a731a94251b0e3a1" translate="yes" xml:space="preserve">
          <source>XML</source>
          <target state="translated">XML</target>
        </trans-unit>
        <trans-unit id="eb73598da5fb4744c782bee1964781ab5dbf13c5" translate="yes" xml:space="preserve">
          <source>XML::Attributes</source>
          <target state="translated">XML::Attributes</target>
        </trans-unit>
        <trans-unit id="4ea4147ebc01565f7e040cbcc60560ec794beb5d" translate="yes" xml:space="preserve">
          <source>XML::Builder</source>
          <target state="translated">XML::Builder</target>
        </trans-unit>
        <trans-unit id="8682d0043d6c7d97e4131e4cda241607932fd9b0" translate="yes" xml:space="preserve">
          <source>XML::Error</source>
          <target state="translated">XML::Error</target>
        </trans-unit>
        <trans-unit id="8b766ace3016a5c263e0426618cdc3bff4e3feb9" translate="yes" xml:space="preserve">
          <source>XML::Error#line_number</source>
          <target state="translated">XML::Error#line_number</target>
        </trans-unit>
        <trans-unit id="1462c36a83db30d09f6f47382cc4b269fa32561e" translate="yes" xml:space="preserve">
          <source>XML::Error.errors</source>
          <target state="translated">XML::Error.errors</target>
        </trans-unit>
        <trans-unit id="7f9c1efc7b5a264d403336b1df8485fd3c59626d" translate="yes" xml:space="preserve">
          <source>XML::Error.new</source>
          <target state="translated">XML::Error.new</target>
        </trans-unit>
        <trans-unit id="bf0f23806090b1f0f180f25441c2d6f798170d80" translate="yes" xml:space="preserve">
          <source>XML::Namespace</source>
          <target state="translated">XML::Namespace</target>
        </trans-unit>
        <trans-unit id="fff53db563294df93dde9929471dd47392daff0d" translate="yes" xml:space="preserve">
          <source>XML::Node</source>
          <target state="translated">XML::Node</target>
        </trans-unit>
        <trans-unit id="3fa335e7402194248078e9578ed34753090fe47b" translate="yes" xml:space="preserve">
          <source>XML::NodeSet</source>
          <target state="translated">XML::NodeSet</target>
        </trans-unit>
        <trans-unit id="b6b6ef7fba17f5a9d805521e64893b1a7321909b" translate="yes" xml:space="preserve">
          <source>XML::Reader</source>
          <target state="translated">XML::Reader</target>
        </trans-unit>
        <trans-unit id="045a04aea4dc548b65817325fe68fe6c76aba8f4" translate="yes" xml:space="preserve">
          <source>XML::XPathContext</source>
          <target state="translated">XML::XPathContext</target>
        </trans-unit>
        <trans-unit id="d8e495b812b9dd73d4d51307cfb9189f9f906953" translate="yes" xml:space="preserve">
          <source>XPathContext</source>
          <target state="translated">XPathContext</target>
        </trans-unit>
        <trans-unit id="10ed97b6912dcb363597d7af0d9816d4dc21b71b" translate="yes" xml:space="preserve">
          <source>XPathContext#evaluate</source>
          <target state="translated">XPathContext#evaluate</target>
        </trans-unit>
        <trans-unit id="584205d3d6ac90f487272da76ddb1e0e6a51575d" translate="yes" xml:space="preserve">
          <source>XPathContext#register_namespace</source>
          <target state="translated">XPathContext#register_namespace</target>
        </trans-unit>
        <trans-unit id="2654653f8d720daf7a56c6e6c42e4c7677faf439" translate="yes" xml:space="preserve">
          <source>XPathContext#register_namespaces</source>
          <target state="translated">XPathContext#register_namespaces</target>
        </trans-unit>
        <trans-unit id="2f1f2fc8f5660054a3543291b427d6a55232c588" translate="yes" xml:space="preserve">
          <source>XPathContext#register_variable</source>
          <target state="translated">XPathContext#register_variable</target>
        </trans-unit>
        <trans-unit id="c7fbac7279c9c532610ef5680913595db3f72106" translate="yes" xml:space="preserve">
          <source>XPathContext#register_variables</source>
          <target state="translated">XPathContext#register_variables</target>
        </trans-unit>
        <trans-unit id="8410d282be043f9ed71f0f200d40e01db7ea7234" translate="yes" xml:space="preserve">
          <source>XPathContext#to_unsafe</source>
          <target state="translated">XPathContext#to_unsafe</target>
        </trans-unit>
        <trans-unit id="72e7352811b2bd5ba0c6415fa4e7d9abb31a459e" translate="yes" xml:space="preserve">
          <source>XPathContext.new</source>
          <target state="translated">XPathContext.new</target>
        </trans-unit>
        <trans-unit id="ffbcb202b09db426bae56cf2ffb88f18594f2258" translate="yes" xml:space="preserve">
          <source>YAML</source>
          <target state="translated">YAML</target>
        </trans-unit>
        <trans-unit id="eb419c0f8f423947b2fd271a2789f27ea866358e" translate="yes" xml:space="preserve">
          <source>YAML.dump</source>
          <target state="translated">YAML.dump</target>
        </trans-unit>
        <trans-unit id="5054dcf2fd3c4e067fa105a8266c92af14d1aeed" translate="yes" xml:space="preserve">
          <source>YAML::Any</source>
          <target state="translated">YAML::Any</target>
        </trans-unit>
        <trans-unit id="b3158e18c2213e68ad6ab55b79192dacc43d6405" translate="yes" xml:space="preserve">
          <source>YAML::Builder</source>
          <target state="translated">YAML::Builder</target>
        </trans-unit>
        <trans-unit id="31fc2eede6201174fa45d2c63512975e5fcae2e0" translate="yes" xml:space="preserve">
          <source>YAML::Error</source>
          <target state="translated">YAML::Error</target>
        </trans-unit>
        <trans-unit id="fa32533d0a2aee8c1a44c2bee576095be2e48c6b" translate="yes" xml:space="preserve">
          <source>YAML::Field</source>
          <target state="translated">YAML::Field</target>
        </trans-unit>
        <trans-unit id="6e7fe10f5a3cc6801b33e3dd2b536bbf4dc7fe30" translate="yes" xml:space="preserve">
          <source>YAML::Nodes</source>
          <target state="translated">YAML::Nodes</target>
        </trans-unit>
        <trans-unit id="44874e122becca0d79005a63befbbb37e0b5ec74" translate="yes" xml:space="preserve">
          <source>YAML::Nodes::Alias</source>
          <target state="translated">YAML::Nodes::Alias</target>
        </trans-unit>
        <trans-unit id="746d8930a5dc2b1cee07b0ce566d5db219e06030" translate="yes" xml:space="preserve">
          <source>YAML::Nodes::Builder</source>
          <target state="translated">YAML::Nodes::Builder</target>
        </trans-unit>
        <trans-unit id="175ca53afc9483cdcbaa3cc1c4ff25c84e8a1799" translate="yes" xml:space="preserve">
          <source>YAML::Nodes::Document</source>
          <target state="translated">YAML::Nodes::Document</target>
        </trans-unit>
        <trans-unit id="652c0320be1ac50a3c639f53f1fe3a5020f1108e" translate="yes" xml:space="preserve">
          <source>YAML::Nodes::Mapping</source>
          <target state="translated">YAML::Nodes::Mapping</target>
        </trans-unit>
        <trans-unit id="bddca8a339670008c9a35c48322d3524d81df03c" translate="yes" xml:space="preserve">
          <source>YAML::Nodes::Node</source>
          <target state="translated">YAML::Nodes::Node</target>
        </trans-unit>
        <trans-unit id="79592a66e30fa1cad694d728df33acd973be02d2" translate="yes" xml:space="preserve">
          <source>YAML::Nodes::Scalar</source>
          <target state="translated">YAML::Nodes::Scalar</target>
        </trans-unit>
        <trans-unit id="cf265c0254fd677880a56f4cf180d021b650eb3c" translate="yes" xml:space="preserve">
          <source>YAML::Nodes::Sequence</source>
          <target state="translated">YAML::Nodes::Sequence</target>
        </trans-unit>
        <trans-unit id="d50d91a124046a36f31e713c9c42f13701ac4bc4" translate="yes" xml:space="preserve">
          <source>YAML::ParseContext</source>
          <target state="translated">YAML::ParseContext</target>
        </trans-unit>
        <trans-unit id="13b6c33bc00deddb7812ab236a2cdd25e14052ae" translate="yes" xml:space="preserve">
          <source>YAML::ParseException</source>
          <target state="translated">YAML::ParseException</target>
        </trans-unit>
        <trans-unit id="179f402395ef33a0212eb503f4cbfd2cd5061856" translate="yes" xml:space="preserve">
          <source>YAML::ParseException#column_number</source>
          <target state="translated">YAML::ParseException#column_number</target>
        </trans-unit>
        <trans-unit id="5a74a02d857bd3494b3f46f50bab723b63dbd05d" translate="yes" xml:space="preserve">
          <source>YAML::ParseException#line_number</source>
          <target state="translated">YAML::ParseException#line_number</target>
        </trans-unit>
        <trans-unit id="556f87b4a568eb7a46a5234ff387466cc3d2f0a1" translate="yes" xml:space="preserve">
          <source>YAML::ParseException#location</source>
          <target state="translated">YAML::ParseException#location</target>
        </trans-unit>
        <trans-unit id="aa82ab7e614548bfde840cd3f6a7b25fef6f1710" translate="yes" xml:space="preserve">
          <source>YAML::ParseException.new</source>
          <target state="translated">YAML::ParseException.new</target>
        </trans-unit>
        <trans-unit id="77029a3cb7d1dca5ee67d325ba7056ea7fa398a2" translate="yes" xml:space="preserve">
          <source>YAML::PullParser</source>
          <target state="translated">YAML::PullParser</target>
        </trans-unit>
        <trans-unit id="fed691206a05b1791075b9fc739c1961791f02ac" translate="yes" xml:space="preserve">
          <source>Yeah! That was simple! With Orbs an abstraction layer is built so that the configuration file is more readable and intuitive.</source>
          <target state="translated">イェーイ!簡単でしたね! Orbsでは抽象化レイヤーが構築されているので、設定ファイルがより読みやすく、直感的に操作できるようになっています。</target>
        </trans-unit>
        <trans-unit id="bc01c0ab4955c6adf693fad59fc069117f5a858b" translate="yes" xml:space="preserve">
          <source>Yield arguments</source>
          <target state="translated">降伏引数</target>
        </trans-unit>
        <trans-unit id="9e2b436eb4fcdf687615b05517281715e8271c55" translate="yes" xml:space="preserve">
          <source>Yielded by &lt;code&gt;&lt;a href=&quot;../../benchmark#bm(&amp;amp;)-instance-method&quot;&gt;Benchmark#bm&lt;/a&gt;&lt;/code&gt;, use &lt;code&gt;#report&lt;/code&gt; to report benchmarks.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../benchmark#bm(&amp;amp;)-instance-method&quot;&gt;Benchmark#bm&lt;/a&gt;&lt;/code&gt; によって生成され、＃ &lt;code&gt;#report&lt;/code&gt; を使用してベンチマークをレポートします。</target>
        </trans-unit>
        <trans-unit id="f268b514180a5018b99183c7c4b6e899a7327407" translate="yes" xml:space="preserve">
          <source>Yielded by &lt;code&gt;&lt;a href=&quot;../../benchmark#bm(&amp;amp;block)-instance-method&quot;&gt;Benchmark#bm&lt;/a&gt;&lt;/code&gt;, use &lt;code&gt;#report&lt;/code&gt; to report benchmarks.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../benchmark#bm(&amp;amp;block)-instance-method&quot;&gt;Benchmark#bm&lt;/a&gt;&lt;/code&gt; によって生成され、＃ &lt;code&gt;#report&lt;/code&gt; を使用してベンチマークを報告します。</target>
        </trans-unit>
        <trans-unit id="13944defe93d1747e7033b229ba0a2eddf5aa079" translate="yes" xml:space="preserve">
          <source>Yields &lt;code&gt;self&lt;/code&gt; to the block, and then returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; をブロックに譲り、それから &lt;code&gt;self&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f19f262cd7c50757c319da7317c8617f0fe239d4" translate="yes" xml:space="preserve">
          <source>Yields &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; もたらす。</target>
        </trans-unit>
        <trans-unit id="17c0d4cfc26ca896ddb2fc7414f41c04d733e951" translate="yes" xml:space="preserve">
          <source>Yields &lt;code&gt;self&lt;/code&gt;. &lt;code&gt;&lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt; overrides this method and doesn't yield.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; もたらす。 &lt;code&gt;&lt;a href=&quot;nil&quot;&gt;Nil&lt;/a&gt;&lt;/code&gt; はこのメソッドをオーバーライドし、譲歩しません。</target>
        </trans-unit>
        <trans-unit id="01a379c55b70f7e9e99dc8e3cef9138edab5215d" translate="yes" xml:space="preserve">
          <source>Yields a &lt;code&gt;&lt;a href=&quot;multipart/builder&quot;&gt;Multipart::Builder&lt;/a&gt;&lt;/code&gt; to the given block, returning the generated message as a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">得られる &lt;code&gt;&lt;a href=&quot;multipart/builder&quot;&gt;Multipart::Builder&lt;/a&gt;&lt;/code&gt; のように生成されたメッセージを返し、指定されたブロックに &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="499a1945365bf6f647ef83c8c71bec87120f885c" translate="yes" xml:space="preserve">
          <source>Yields a &lt;code&gt;&lt;a href=&quot;multipart/builder&quot;&gt;Multipart::Builder&lt;/a&gt;&lt;/code&gt; to the given block, writing to &lt;em&gt;io&lt;/em&gt; and using &lt;em&gt;boundary&lt;/em&gt;.</source>
          <target state="translated">収量 &lt;code&gt;&lt;a href=&quot;multipart/builder&quot;&gt;Multipart::Builder&lt;/a&gt;&lt;/code&gt; 与えられたブロックには、への書き込み&lt;em&gt;ioを&lt;/em&gt;して使用して&lt;em&gt;境界線&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="7d06f02c42e3c22a384f430b98910fa87cea76bd" translate="yes" xml:space="preserve">
          <source>Yields a &lt;code&gt;&lt;a href=&quot;multipart/builder&quot;&gt;Multipart::Builder&lt;/a&gt;&lt;/code&gt; to the given block, writing to &lt;em&gt;io&lt;/em&gt; and using &lt;em&gt;boundary&lt;/em&gt;. &lt;code&gt;#finish&lt;/code&gt; is automatically called on the builder.</source>
          <target state="translated">収量 &lt;code&gt;&lt;a href=&quot;multipart/builder&quot;&gt;Multipart::Builder&lt;/a&gt;&lt;/code&gt; 与えられたブロックには、への書き込み&lt;em&gt;ioを&lt;/em&gt;して使用して&lt;em&gt;境界線&lt;/em&gt;。 &lt;code&gt;#finish&lt;/code&gt; はビルダーで自動的に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="80db921a4bfbb705780fb82f81d741d445f3bab1" translate="yes" xml:space="preserve">
          <source>Yields a &lt;code&gt;&lt;a href=&quot;row&quot;&gt;CSV::Row&lt;/a&gt;&lt;/code&gt; to append a row.</source>
          <target state="translated">収量 &lt;code&gt;&lt;a href=&quot;row&quot;&gt;CSV::Row&lt;/a&gt;&lt;/code&gt; 行を追加します。</target>
        </trans-unit>
        <trans-unit id="2777197e945368bf4ed54bc0e482580c0d409280" translate="yes" xml:space="preserve">
          <source>Yields a &lt;code&gt;&lt;a href=&quot;row&quot;&gt;CSV::Row&lt;/a&gt;&lt;/code&gt; to append a row. A newline is appended to &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; after the block exits.</source>
          <target state="translated">収量 &lt;code&gt;&lt;a href=&quot;row&quot;&gt;CSV::Row&lt;/a&gt;&lt;/code&gt; 行を追加します。ブロックが終了すると、 &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; に改行が追加されます。</target>
        </trans-unit>
        <trans-unit id="899a8860051cf991498780d393b79590055612b6" translate="yes" xml:space="preserve">
          <source>Yields a block with the chunks in the given size.</source>
          <target state="translated">指定したサイズのチャンクを持つブロックを生成します。</target>
        </trans-unit>
        <trans-unit id="e03612458041860d0a9db4ff238f16acb17c832f" translate="yes" xml:space="preserve">
          <source>Yields a context object with an &lt;code&gt;#update(data : String | Bytes)&lt;/code&gt; method available.</source>
          <target state="translated">&lt;code&gt;#update(data : String | Bytes)&lt;/code&gt; メソッドが利用可能なコンテキストオブジェクトを生成します。</target>
        </trans-unit>
        <trans-unit id="9c265dfdb0955c7491201fca4432ab80cd8e5fd9" translate="yes" xml:space="preserve">
          <source>Yields a context object with an &lt;code&gt;#update(data : String | Bytes)&lt;/code&gt; method available. Returns the resulting digest afterwards.</source>
          <target state="translated">&lt;code&gt;#update(data : String | Bytes)&lt;/code&gt; メソッドが利用可能なコンテキストオブジェクトを生成します。その後、結果のダイジェストを返します。</target>
        </trans-unit>
        <trans-unit id="79f9bb644bb857340d241314b43ec7e57fcd197f" translate="yes" xml:space="preserve">
          <source>Yields a context object with an &lt;code&gt;#update(data : String | Bytes)&lt;/code&gt; method available. Returns the resulting digest in base64 representation afterwards.</source>
          <target state="translated">&lt;code&gt;#update(data : String | Bytes)&lt;/code&gt; メソッドを使用できるコンテキストオブジェクトを生成します。その後、結果のダイジェストをbase64表現で返します。</target>
        </trans-unit>
        <trans-unit id="00c58d031c5cec4ac64f5db8aac7762e4fd97c7a" translate="yes" xml:space="preserve">
          <source>Yields a context object with an &lt;code&gt;#update(data : String | Bytes)&lt;/code&gt; method available. Returns the resulting digest in hexadecimal representation afterwards.</source>
          <target state="translated">&lt;code&gt;#update(data : String | Bytes)&lt;/code&gt; メソッドが利用可能なコンテキストオブジェクトを生成します。その後、結果のダイジェストを16進表現で返します。</target>
        </trans-unit>
        <trans-unit id="79c8243a81cf26a1cef092af5feb1961af6bbefe" translate="yes" xml:space="preserve">
          <source>Yields all files that match against any of &lt;em&gt;patterns&lt;/em&gt;.</source>
          <target state="translated">いずれかの&lt;em&gt;パターンに&lt;/em&gt;一致するすべてのファイルを生成します。</target>
        </trans-unit>
        <trans-unit id="0153d511e06a2a4d71a8cc1d1bf1cb206f1800bd" translate="yes" xml:space="preserve">
          <source>Yields an &lt;code&gt;&lt;a href=&quot;../../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; to read this entry's contents.</source>
          <target state="translated">このエントリの内容を読み取るための &lt;code&gt;&lt;a href=&quot;../../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; を生成します。</target>
        </trans-unit>
        <trans-unit id="1001b7393318b14d591accae44232899fd5bd37e" translate="yes" xml:space="preserve">
          <source>Yields an &lt;code&gt;&lt;a href=&quot;../../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; to read this entry's contents. Multiple entries can be opened and read concurrently.</source>
          <target state="translated">このエントリの内容を読み取るための &lt;code&gt;&lt;a href=&quot;../../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; を生成します。複数のエントリを開いて同時に読み取ることができます。</target>
        </trans-unit>
        <trans-unit id="c6d9560885ee443c4dc0c0889a90dd767a7b82ef" translate="yes" xml:space="preserve">
          <source>Yields an &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; to read this entry's contents.</source>
          <target state="translated">このエントリの内容を読み取るための &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; を生成します。</target>
        </trans-unit>
        <trans-unit id="ad9013dd32816b5871c21f63c25b03ab31446d47" translate="yes" xml:space="preserve">
          <source>Yields an &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; to read this entry's contents. Multiple entries can be opened and read concurrently.</source>
          <target state="translated">このエントリの内容を読み取るための &lt;code&gt;&lt;a href=&quot;../../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; を生成します。複数のエントリを同時に開いて読み取ることができます。</target>
        </trans-unit>
        <trans-unit id="d50260fa44cdbcc73feeca4f3d84de55e88029ef" translate="yes" xml:space="preserve">
          <source>Yields an &lt;code&gt;&lt;a href=&quot;../http/params/builder&quot;&gt;HTTP::Params::Builder&lt;/a&gt;&lt;/code&gt; to add extra parameters other than those defined by the standard.</source>
          <target state="translated">収量は &lt;code&gt;&lt;a href=&quot;../http/params/builder&quot;&gt;HTTP::Params::Builder&lt;/a&gt;&lt;/code&gt; 、標準で定義されたもの以外の追加パラメータを追加します。</target>
        </trans-unit>
        <trans-unit id="6d0dce55f678cb8775dd6545d912d9fb4c17c840" translate="yes" xml:space="preserve">
          <source>Yields an &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; to read a section inside this IO.</source>
          <target state="translated">このIO内のセクションを読み取るために &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; を譲ります。</target>
        </trans-unit>
        <trans-unit id="3f5b57db10ccdf1fe6a906634ea8fbfd38569a3c" translate="yes" xml:space="preserve">
          <source>Yields an &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; to read a section inside this file.</source>
          <target state="translated">このファイル内のセクションを読み取るための &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; を生成します。</target>
        </trans-unit>
        <trans-unit id="187685610a6fd9500a8face2dd66da1b26c1b9bf" translate="yes" xml:space="preserve">
          <source>Yields an &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; to read a section inside this file. Multiple sections can be read concurrently.</source>
          <target state="translated">このファイル内のセクションを読み取るための &lt;code&gt;&lt;a href=&quot;io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; を生成します。複数のセクションを同時に読み取ることができます。</target>
        </trans-unit>
        <trans-unit id="7002c1e93308de591c68e6600e20c5a062b8f66e" translate="yes" xml:space="preserve">
          <source>Yields an &lt;code&gt;&lt;a href=&quot;memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt; to read a section of this &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;'s buffer.</source>
          <target state="translated">この &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; のバッファーのセクションを読み取るための &lt;code&gt;&lt;a href=&quot;memory&quot;&gt;IO::Memory&lt;/a&gt;&lt;/code&gt; を生成します。</target>
        </trans-unit>
        <trans-unit id="e67335ba80ac1b0e11bc9782ac651b9bbb8b58d6" translate="yes" xml:space="preserve">
          <source>Yields an IO that can be used to append to the epilogue of the multipart message.</source>
          <target state="translated">マルチパートメッセージのエピローグに追加するために使用できるIOを生成します。</target>
        </trans-unit>
        <trans-unit id="63be575825551b544e1c8cc760947819109c2c4a" translate="yes" xml:space="preserve">
          <source>Yields an IO that can be used to append to the epilogue of the multipart message. Throws if &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; is called before this method, or no body parts have been appended.</source>
          <target state="translated">マルチパートメッセージのエピローグに追加するために使用できるIOを生成します。このメソッドの前に &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; が呼び出された場合、またはボディパーツが追加されていない場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="f0b751cf91145618f23bedeeba57fb6ebac306a1" translate="yes" xml:space="preserve">
          <source>Yields an IO that can be used to append to the preamble of the multipart message.</source>
          <target state="translated">マルチパートメッセージのプリアンブルに追加するために使用できるIOを生成します。</target>
        </trans-unit>
        <trans-unit id="b9d26f52488dc656dddc46229a2184b2cc59785b" translate="yes" xml:space="preserve">
          <source>Yields an IO that can be used to append to the preamble of the multipart message. Throws if &lt;code&gt;&lt;a href=&quot;builder#body_part(headers:HTTP::Headers,string:String)-instance-method&quot;&gt;#body_part&lt;/a&gt;&lt;/code&gt; is called before this method.</source>
          <target state="translated">マルチパートメッセージのプリアンブルに追加するために使用できるIOを生成します。このメソッドの前に &lt;code&gt;&lt;a href=&quot;builder#body_part(headers:HTTP::Headers,string:String)-instance-method&quot;&gt;#body_part&lt;/a&gt;&lt;/code&gt; が呼び出された場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="64e8472e7beda1548c8644bca429a1d257e34d13" translate="yes" xml:space="preserve">
          <source>Yields an IO that can be used to write to a body part which is appended to the multipart message with the given &lt;em&gt;headers&lt;/em&gt;.</source>
          <target state="translated">与えられた&lt;em&gt;ヘッダーを&lt;/em&gt;持つマルチパートメッセージに追加されるボディパートへの書き込みに使用できるIOを生成します。</target>
        </trans-unit>
        <trans-unit id="9e63ef8fb82dc54b5f1770fa31d7fef3023f72fd" translate="yes" xml:space="preserve">
          <source>Yields an IO that can be used to write to a body part which is appended to the multipart message with the given &lt;em&gt;headers&lt;/em&gt;. Throws if &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;builder#epilogue(&amp;amp;)-instance-method&quot;&gt;#epilogue&lt;/a&gt;&lt;/code&gt; is called before this method.</source>
          <target state="translated">指定された&lt;em&gt;ヘッダーを&lt;/em&gt;持つマルチパートメッセージに追加される本文部分への書き込みに使用できるIOを生成します。このメソッドの前に &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;builder#epilogue(&amp;amp;)-instance-method&quot;&gt;#epilogue&lt;/a&gt;&lt;/code&gt; が呼び出された場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="4626950d60c6e217e050647870ecb3612e8e72d7" translate="yes" xml:space="preserve">
          <source>Yields an IO that can be used to write to a body part which is appended to the multipart message with the given &lt;em&gt;headers&lt;/em&gt;. Throws if &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;builder#epilogue(&amp;amp;block)-instance-method&quot;&gt;#epilogue&lt;/a&gt;&lt;/code&gt; is called before this method.</source>
          <target state="translated">与えられた&lt;em&gt;ヘッダーを&lt;/em&gt;持つマルチパートメッセージに追加されるボディパートへの書き込みに使用できるIOを生成します。このメソッドの前に &lt;code&gt;&lt;a href=&quot;builder#finish-instance-method&quot;&gt;#finish&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;builder#epilogue(&amp;amp;block)-instance-method&quot;&gt;#epilogue&lt;/a&gt;&lt;/code&gt; が呼び出された場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="a869c432aad57a061ccadde76554c3ea29a2f91f" translate="yes" xml:space="preserve">
          <source>Yields an instance of &lt;code&gt;self&lt;/code&gt; which can receive calls to &lt;code&gt;#update(data : String | Bytes)&lt;/code&gt; and returns the finalized digest afterwards.</source>
          <target state="translated">&lt;code&gt;#update(data : String | Bytes)&lt;/code&gt; への呼び出しを受信できる &lt;code&gt;self&lt;/code&gt; のインスタンスを生成し、後で最終的なダイジェストを返します。</target>
        </trans-unit>
        <trans-unit id="d267873e2e3cba6d0b1586730a140eb18e6e188e" translate="yes" xml:space="preserve">
          <source>Yields each &lt;code&gt;&lt;a href=&quot;cookie&quot;&gt;HTTP::Cookie&lt;/a&gt;&lt;/code&gt; in the collection.</source>
          <target state="translated">コレクション内の各 &lt;code&gt;&lt;a href=&quot;cookie&quot;&gt;HTTP::Cookie&lt;/a&gt;&lt;/code&gt; を生成します。</target>
        </trans-unit>
        <trans-unit id="4bd3987507a2e1d27b3101128be175f8dfee47c4" translate="yes" xml:space="preserve">
          <source>Yields each byte in the string to the block.</source>
          <target state="translated">文字列の各バイトをブロックに渡します。</target>
        </trans-unit>
        <trans-unit id="457f275d733551424273a7aa7803681155673baf" translate="yes" xml:space="preserve">
          <source>Yields each char for the downcase equivalent of this char.</source>
          <target state="translated">この文字のダウンケースに相当する各文字を生成します。</target>
        </trans-unit>
        <trans-unit id="b9f47c03b57b4c498a937082a354595a6d2fe422" translate="yes" xml:space="preserve">
          <source>Yields each char for the upcase equivalent of this char.</source>
          <target state="translated">この文字の大文字と小文字の等価な各文字を生成します。</target>
        </trans-unit>
        <trans-unit id="772b56fe329159859d7debc9971163b2c4aa1b97" translate="yes" xml:space="preserve">
          <source>Yields each char in this string to the block, returns the number of times the block returned a truthy value.</source>
          <target state="translated">この文字列の各文字をブロックに渡し、ブロックが真実の値を返した回数を返します。</target>
        </trans-unit>
        <trans-unit id="f98a4c6582be3beb6971cfd238fe1ee4b6cd467b" translate="yes" xml:space="preserve">
          <source>Yields each char in this string to the block.</source>
          <target state="translated">この文字列の各文字をブロックに渡します。</target>
        </trans-unit>
        <trans-unit id="d36fbfefede04220924f5d529b8dc936e79bc311" translate="yes" xml:space="preserve">
          <source>Yields each char in this string to the block. Returns a new &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; with all characters for which the block returned a truthy value removed.</source>
          <target state="translated">この文字列の各文字をブロックに渡します。ブロックが真の値を返したすべての文字を削除した新しい &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="78729f3fdbac68c418ce6db2c4ca9dac41a36da9" translate="yes" xml:space="preserve">
          <source>Yields each char in this string to the block. Returns a new &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;, that has all characters removed, that were the same as the previous one and for which the given block returned a truthy value.</source>
          <target state="translated">この文字列の各文字をブロックに渡します。すべての文字が削除され、前の文字と同じで、指定されたブロックが真の値を返した新しい &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="e2dc7d8bd5a7770d36bacb695c52728e3d561897" translate="yes" xml:space="preserve">
          <source>Yields each character and its index in the string to the block.</source>
          <target state="translated">文字列内の各文字とそのインデックスをブロックに渡します。</target>
        </trans-unit>
        <trans-unit id="525155a220e7fd518e3de2c2346f0b4e78397f1e" translate="yes" xml:space="preserve">
          <source>Yields each character in the string to the block.</source>
          <target state="translated">文字列の各文字をブロックに渡します。</target>
        </trans-unit>
        <trans-unit id="7a1c11fc65113015bd54f1ece5d5f610fb8cff4f" translate="yes" xml:space="preserve">
          <source>Yields each codepoint to the block.</source>
          <target state="translated">各コードポイントをブロックに渡します。</target>
        </trans-unit>
        <trans-unit id="1b598aa5d91928c10c5abd6b30b7c226305beee5" translate="yes" xml:space="preserve">
          <source>Yields each component of this path as a &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">このパスの各コンポーネントを &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; として生成します。</target>
        </trans-unit>
        <trans-unit id="7459345ca26cab1f86f990c34c2cf61002de24fb" translate="yes" xml:space="preserve">
          <source>Yields each element in this iterator together with its index.</source>
          <target state="translated">このイテレータの各要素とそのインデックスを返します。</target>
        </trans-unit>
        <trans-unit id="14759f3a863234dcccdabfe732860384db166807" translate="yes" xml:space="preserve">
          <source>Yields each element of the set, and returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">セットの各要素を生成し、 &lt;code&gt;self&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="16c8fd06f2831cec63b41114dba004b196eafc1d" translate="yes" xml:space="preserve">
          <source>Yields each entry in the zip to the given block.</source>
          <target state="translated">zip内の各エントリを、指定されたブロックに出力します。</target>
        </trans-unit>
        <trans-unit id="d0ceef87e966868c6aed9d79641d750f1b5e9177" translate="yes" xml:space="preserve">
          <source>Yields each index of &lt;code&gt;self&lt;/code&gt; to the given block and then assigns the block's value in that position.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 各インデックスを指定されたブロックに譲り、その位置にブロックの値を割り当てます。</target>
        </trans-unit>
        <trans-unit id="9899f01dd7d14a2033fad0f47f5aad446ca2696f" translate="yes" xml:space="preserve">
          <source>Yields each index of &lt;code&gt;self&lt;/code&gt; to the given block and then assigns the block's value in that position. Returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 各インデックスを指定されたブロックに譲り、その位置にブロックの値を割り当てます。 &lt;code&gt;self&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="d110db349b7b398bb6415cbc5c434eb820659080" translate="yes" xml:space="preserve">
          <source>Yields each index of &lt;code&gt;self&lt;/code&gt;, in the given &lt;em&gt;range&lt;/em&gt;, to the given block and then assigns the block's value in that position.</source>
          <target state="translated">指定された&lt;em&gt;range内&lt;/em&gt;の &lt;code&gt;self&lt;/code&gt; の各インデックスを指定されたブロックに生成し、その位置にブロックの値を割り当てます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bbf7b2c2d123cd7f34660a75ed95bd90bedcbffc" translate="yes" xml:space="preserve">
          <source>Yields each index of &lt;code&gt;self&lt;/code&gt;, in the given &lt;em&gt;range&lt;/em&gt;, to the given block and then assigns the block's value in that position. Returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">指定された&lt;em&gt;range内&lt;/em&gt;の &lt;code&gt;self&lt;/code&gt; の各インデックスを指定されたブロックに生成し、その位置にブロックの値を割り当てます。 &lt;code&gt;self&lt;/code&gt; 返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c74779832c5e4f5223f88f835b46cbb092555c15" translate="yes" xml:space="preserve">
          <source>Yields each index of &lt;code&gt;self&lt;/code&gt;, starting at &lt;em&gt;from&lt;/em&gt; and just &lt;em&gt;count&lt;/em&gt; times, to the given block and then assigns the block's value in that position.</source>
          <target state="translated">各指標利回り &lt;code&gt;self&lt;/code&gt; から始まる&lt;em&gt;から&lt;/em&gt;、ちょうど&lt;em&gt;数える&lt;/em&gt;与えられたブロックに、時間をして、その位置にブロックの値を割り当てます。</target>
        </trans-unit>
        <trans-unit id="cd7a22724abf373413ee102096381179d17a9a68" translate="yes" xml:space="preserve">
          <source>Yields each index of &lt;code&gt;self&lt;/code&gt;, starting at &lt;em&gt;from&lt;/em&gt; and just &lt;em&gt;count&lt;/em&gt; times, to the given block and then assigns the block's value in that position. Returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">各指標利回り &lt;code&gt;self&lt;/code&gt; から始まる&lt;em&gt;から&lt;/em&gt;、ちょうど&lt;em&gt;数える&lt;/em&gt;与えられたブロックに、時間をして、その位置にブロックの値を割り当てます。 &lt;code&gt;self&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="12bf487c11f5e31306a18a0d9beef657dc7d1bbe" translate="yes" xml:space="preserve">
          <source>Yields each index of &lt;code&gt;self&lt;/code&gt;, starting at &lt;em&gt;from&lt;/em&gt;, to the given block and then assigns the block's value in that position.</source>
          <target state="translated">&lt;em&gt;fromから&lt;/em&gt;始まる指定されたブロックに &lt;code&gt;self&lt;/code&gt; の各インデックスを生成し、その位置にブロックの値を割り当てます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dca16d7e3005e6100724c21ae861b3ca86e084dc" translate="yes" xml:space="preserve">
          <source>Yields each index of &lt;code&gt;self&lt;/code&gt;, starting at &lt;em&gt;from&lt;/em&gt;, to the given block and then assigns the block's value in that position. Returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;fromから&lt;/em&gt;始まる指定されたブロックに &lt;code&gt;self&lt;/code&gt; の各インデックスを生成し、その位置にブロックの値を割り当てます。 &lt;code&gt;self&lt;/code&gt; 返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d0874c1d65798c410c9fb3b79204316ed3edb69e" translate="yes" xml:space="preserve">
          <source>Yields each item in this deque, from first to last.</source>
          <target state="translated">最初から最後まで、このdequeの各アイテムを利回りにしています。</target>
        </trans-unit>
        <trans-unit id="41627050ac800a8c74e2678d89b562faf692fde0" translate="yes" xml:space="preserve">
          <source>Yields each key and value in this named tuple.</source>
          <target state="translated">この名前付きタプルの各キーと値を返します。</target>
        </trans-unit>
        <trans-unit id="8c52b27fdf97fe9c460989c9c5826da05c92b790" translate="yes" xml:space="preserve">
          <source>Yields each key and value, together with an index starting at &lt;em&gt;offset&lt;/em&gt;, in this named tuple.</source>
          <target state="translated">この名前付きタプルの各キーと値を、&lt;em&gt;offset&lt;/em&gt;で始まるインデックスとともに生成します。</target>
        </trans-unit>
        <trans-unit id="54e84e7b1689b66951925d9e9805cec5be27c61d" translate="yes" xml:space="preserve">
          <source>Yields each key in this named tuple.</source>
          <target state="translated">この名前付きタプルの各キーを返します。</target>
        </trans-unit>
        <trans-unit id="032b579d2f147cda0e0bacec526ee7a30a29b811" translate="yes" xml:space="preserve">
          <source>Yields each key-value pair in this mapping.</source>
          <target state="translated">このマッピングの各キーと値のペアを返します。</target>
        </trans-unit>
        <trans-unit id="1221901bbfd3e99a251123a80c688e9b63815eca" translate="yes" xml:space="preserve">
          <source>Yields each line in &lt;em&gt;filename&lt;/em&gt; to the given block.</source>
          <target state="translated">&lt;em&gt;ファイル名の&lt;/em&gt;各行を指定されたブロックに譲り&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="14028a886a4467928ea5eeb585b6ed6b424ca949" translate="yes" xml:space="preserve">
          <source>Yields each of a CSV's rows as an &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;(&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;)&lt;/code&gt;.</source>
          <target state="translated">CSVの各行を &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;(&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;)&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="1553bb4c5d7801827011638fcc6ac4318be2b9d6" translate="yes" xml:space="preserve">
          <source>Yields each of the bytes of this char as encoded by UTF-8.</source>
          <target state="translated">UTF-8でエンコードされたこの文字の各バイトを返します。</target>
        </trans-unit>
        <trans-unit id="5666986afc3eba8451bc2738ab173f719ba46af7" translate="yes" xml:space="preserve">
          <source>Yields each of the elements in this tuple in reverse order.</source>
          <target state="translated">このタプルの各要素を逆順に返します。</target>
        </trans-unit>
        <trans-unit id="b59836d9f03cb59caf7085085c1e603f5904a7c2" translate="yes" xml:space="preserve">
          <source>Yields each of the elements in this tuple.</source>
          <target state="translated">このタプルの各要素を返します。</target>
        </trans-unit>
        <trans-unit id="2b0cff11af51e8c49fccf2d6528bfdb42c299d1a" translate="yes" xml:space="preserve">
          <source>Yields each of the remaining rows as an &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;(&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;)&lt;/code&gt;.</source>
          <target state="translated">残りの各行を &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;(&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;)&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="5b07820fd27bce5fcf5a2f1c6843476fa1aea469" translate="yes" xml:space="preserve">
          <source>Yields each parent of this path beginning with the topmost parent.</source>
          <target state="translated">一番上の親から始まるパスの各親を取得します。</target>
        </trans-unit>
        <trans-unit id="3d8ad2d47d0c6ec81ae10dbc78cce1e239d24aa4" translate="yes" xml:space="preserve">
          <source>Yields each possible &lt;code&gt;&lt;a href=&quot;addrinfo&quot;&gt;Addrinfo&lt;/a&gt;&lt;/code&gt; resolution since a domain may resolve to many IP. Implementations are supposed to try all the addresses until the socket is connected (or bound) or there are no addresses to try anymore.</source>
          <target state="translated">ドメインは多くのIPに解決される可能性があるため、可能な &lt;code&gt;&lt;a href=&quot;addrinfo&quot;&gt;Addrinfo&lt;/a&gt;&lt;/code&gt; 解決をそれぞれ生成します。実装は、ソケットが接続（またはバインド）されるまで、またはこれ以上試行するアドレスがなくなるまで、すべてのアドレスを試行することになっています。</target>
        </trans-unit>
        <trans-unit id="8b027717cf9f6e64993157eebe8a2697edab5d9f" translate="yes" xml:space="preserve">
          <source>Yields each possible permutation of &lt;em&gt;size&lt;/em&gt; of &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; の&lt;em&gt;サイズ&lt;/em&gt;の可能な順列をそれぞれ生成します。</target>
        </trans-unit>
        <trans-unit id="5f4527fb60ea80dff2f48f4bab06a400313daf7f" translate="yes" xml:space="preserve">
          <source>Yields each value in this named tuple.</source>
          <target state="translated">この名前付きタプルの各値を返します。</target>
        </trans-unit>
        <trans-unit id="af1b9b6d201643742e9058db06b4a78f2b043c74" translate="yes" xml:space="preserve">
          <source>Yields elements of &lt;code&gt;self&lt;/code&gt; and &lt;em&gt;others&lt;/em&gt; in tandem to the given block.</source>
          <target state="translated">与えられたブロックにタンデムで &lt;code&gt;self&lt;/code&gt; と&lt;em&gt;他の&lt;/em&gt;要素をもたらします。</target>
        </trans-unit>
        <trans-unit id="c2714881fc2a5302f8c803e28f379595c8f17eff" translate="yes" xml:space="preserve">
          <source>Yields successive characters from &lt;code&gt;&lt;a href=&quot;reader#string:String-instance-method&quot;&gt;#string&lt;/a&gt;&lt;/code&gt; starting from &lt;code&gt;&lt;a href=&quot;reader#pos:Int32-instance-method&quot;&gt;#pos&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;reader#string:String-instance-method&quot;&gt;#string&lt;/a&gt;&lt;/code&gt; から始まる &lt;code&gt;&lt;a href=&quot;reader#pos:Int32-instance-method&quot;&gt;#pos&lt;/a&gt;&lt;/code&gt; から連続する文字を生成します。</target>
        </trans-unit>
        <trans-unit id="18ef4220aace778571682ea275278a499721c4b7" translate="yes" xml:space="preserve">
          <source>Yields the current element at the given index and updates the value at the given &lt;em&gt;index&lt;/em&gt; with the block's value.</source>
          <target state="translated">指定されたインデックスで現在の要素を生成し、ブロックの値で指定された&lt;em&gt;インデックスの&lt;/em&gt;値を更新します。</target>
        </trans-unit>
        <trans-unit id="dc429b20ecbd7ecde9831364a3d39d52611502ce" translate="yes" xml:space="preserve">
          <source>Yields the current element at the given index and updates the value at the given &lt;em&gt;index&lt;/em&gt; with the block's value. Raises &lt;code&gt;&lt;a href=&quot;indexerror&quot;&gt;IndexError&lt;/a&gt;&lt;/code&gt; if trying to set an element outside the array's range.</source>
          <target state="translated">指定されたインデックスで現在の要素を生成し、ブロックの値で指定された&lt;em&gt;インデックスの&lt;/em&gt;値を更新します。発生させ &lt;code&gt;&lt;a href=&quot;indexerror&quot;&gt;IndexError&lt;/a&gt;&lt;/code&gt; が配列の範囲外の要素を設定しようとした場合。</target>
        </trans-unit>
        <trans-unit id="1483b91239415115b6c6d8f085cbf35962f6f78f" translate="yes" xml:space="preserve">
          <source>Yields to the scheduler and allows it to swap execution to other waiting fibers.</source>
          <target state="translated">スケジューラに降伏し、他の待機中のファイバーに実行をスワップすることができます。</target>
        </trans-unit>
        <trans-unit id="338ff13e53e59fc592b04d72b456aaa16ae6bc76" translate="yes" xml:space="preserve">
          <source>You also disable all protections with &lt;code&gt;unchecked&lt;/code&gt;. Attempting to re-lock the mutex from the same fiber will deadlock. Any fiber can unlock the mutex, even if it wasn't previously locked.</source>
          <target state="translated">また、 &lt;code&gt;unchecked&lt;/code&gt; を外してすべての保護を無効にします。同じファイバーからミューテックスを再ロックしようとすると、デッドロックが発生します。以前にロックされていなくても、どのファイバーでもミューテックスのロックを解除できます。</target>
        </trans-unit>
        <trans-unit id="3abc0729b8ad5830513f678227e58ef48cf578c4" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;../syntax_and_semantics/requiring_files&quot;&gt;require&lt;/a&gt; code defined in other files:</source>
          <target state="translated">他のファイルで定義されたコードを&lt;a href=&quot;../syntax_and_semantics/requiring_files&quot;&gt;要求&lt;/a&gt;できます：</target>
        </trans-unit>
        <trans-unit id="ef9f95bea36de63b16728115d894edd8898013c1" translate="yes" xml:space="preserve">
          <source>You can &lt;code&gt;yield&lt;/code&gt; many values:</source>
          <target state="translated">多くの値を &lt;code&gt;yield&lt;/code&gt; できます：</target>
        </trans-unit>
        <trans-unit id="2d29bf63dd69de8f6121a8476b6b87ae109906c7" translate="yes" xml:space="preserve">
          <source>You can actually pass a proc to a method that yields:</source>
          <target state="translated">実際にprocをメソッドに渡すことができます。</target>
        </trans-unit>
        <trans-unit id="13974c28bf1b72e87f17875d1e72ddddb6814834" translate="yes" xml:space="preserve">
          <source>You can also declare constants inside a &lt;code&gt;lib&lt;/code&gt; declaration:</source>
          <target state="translated">&lt;code&gt;lib&lt;/code&gt; 宣言内で定数を宣言することもできます。</target>
        </trans-unit>
        <trans-unit id="4f18f57fa02df0bede750af227ea83765816d429" translate="yes" xml:space="preserve">
          <source>You can also define attributes for each property.</source>
          <target state="translated">また、各プロパティの属性を定義することもできます。</target>
        </trans-unit>
        <trans-unit id="21f4885203aa01b13676ea4e29462ea9b4bcf2be" translate="yes" xml:space="preserve">
          <source>You can also initialize some fields with a syntax similar to &lt;a href=&quot;../default_and_named_arguments&quot;&gt;named arguments&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;../default_and_named_arguments&quot;&gt;名前付き引数&lt;/a&gt;と同様の構文で一部のフィールドを初期化することもできます。</target>
        </trans-unit>
        <trans-unit id="ceb2614bde9bc685fc0d48231a9de45b8647db65" translate="yes" xml:space="preserve">
          <source>You can also install the latest nightly build by using the &lt;code&gt;edge&lt;/code&gt; channel.</source>
          <target state="translated">&lt;code&gt;edge&lt;/code&gt; チャネルを使用して、最新のナイトリービルドをインストールすることもできます。</target>
        </trans-unit>
        <trans-unit id="7dd92aa299d993181e31af14051fcf4a274bfb1b" translate="yes" xml:space="preserve">
          <source>You can also make a struct behave like a C union (this can be pretty unsafe):</source>
          <target state="translated">構造体をCユニオンのように振る舞うこともできます(これはかなり安全ではありません)。</target>
        </trans-unit>
        <trans-unit id="f8f71dc2f96dbfa5413cb7cea134ed78567bda6f" translate="yes" xml:space="preserve">
          <source>You can also pass an RGB color to &lt;code&gt;colorize&lt;/code&gt;:</source>
          <target state="translated">RGBカラーを渡して &lt;code&gt;colorize&lt;/code&gt; することもできます。</target>
        </trans-unit>
        <trans-unit id="915afeda106b488e84ddf6a78d8756509f9667b3" translate="yes" xml:space="preserve">
          <source>You can also rescue multiple exception types at once by specifying a union type:</source>
          <target state="translated">また、ユニオン型を指定することで、複数の例外型を一度に救出することもできます。</target>
        </trans-unit>
        <trans-unit id="f76cbd61a404655222778ee615f2ee29096ceb2b" translate="yes" xml:space="preserve">
          <source>You can also set the Entry's time (which is &lt;code&gt;&lt;a href=&quot;../../time#utc:Time-class-method&quot;&gt;Time.utc&lt;/a&gt;&lt;/code&gt; by default) and extra data before adding it to the zip stream.</source>
          <target state="translated">エントリの時刻（デフォルトでは &lt;code&gt;&lt;a href=&quot;../../time#utc:Time-class-method&quot;&gt;Time.utc&lt;/a&gt;&lt;/code&gt; ）と追加データを設定してから、zipストリームに追加することもできます。</target>
        </trans-unit>
        <trans-unit id="147582c34aaf43aaf8790de3cb3894622c239158" translate="yes" xml:space="preserve">
          <source>You can also set the Entry's time (which is &lt;code&gt;&lt;a href=&quot;../time#utc:Time-class-method&quot;&gt;Time.utc&lt;/a&gt;&lt;/code&gt; by default) and extra data before adding it to the zip stream.</source>
          <target state="translated">エントリの時間（デフォルトでは &lt;code&gt;&lt;a href=&quot;../time#utc:Time-class-method&quot;&gt;Time.utc&lt;/a&gt;&lt;/code&gt; ）と追加データを設定してから、zipストリームに追加することもできます。</target>
        </trans-unit>
        <trans-unit id="4e99c52a7ac0074067e2502fea22254d9a6204cc" translate="yes" xml:space="preserve">
          <source>You can also spawn by passing a method call instead of a block. To understand why this is useful, let's look at this example:</source>
          <target state="translated">また、ブロックの代わりにメソッドコールを渡すことでスポーンすることもできます。なぜこれが便利なのかを理解するために、この例を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="eb656fedd13f10be6de9c2ee62f09589e2f88977" translate="yes" xml:space="preserve">
          <source>You can also specify many fields of the same type:</source>
          <target state="translated">同じタイプのフィールドを多数指定することもできます。</target>
        </trans-unit>
        <trans-unit id="1080e7bfc21d97f76141e7de75eeaee590b4a73f" translate="yes" xml:space="preserve">
          <source>You can also use &quot;../&quot; to access parent directories relative to the current file, so &lt;code&gt;require &quot;../../foo/bar&quot;&lt;/code&gt; works as well.</source>
          <target state="translated">また、「../」を使用して、現在のファイルに相対的な親ディレクトリにアクセスすることもできるため &lt;code&gt;require &quot;../../foo/bar&quot;&lt;/code&gt; も必要です。</target>
        </trans-unit>
        <trans-unit id="a2d2447db12457488458d0e12c49bfa75582516e" translate="yes" xml:space="preserve">
          <source>You can also use an &lt;code&gt;&lt;a href=&quot;session&quot;&gt;OAuth2::Session&lt;/a&gt;&lt;/code&gt; to automatically refresh expired tokens before each request.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;session&quot;&gt;OAuth2::Session&lt;/a&gt;&lt;/code&gt; を使用して、各リクエストの前に期限切れのトークンを自動的に更新することもできます。</target>
        </trans-unit>
        <trans-unit id="b7b2691b0528d31b6464093c65b3f7774b18dc7a" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;&amp;amp;block&lt;/code&gt; syntax to forward blocks, but then you have to at least specify the input types, and the generated code will involve closures and will be slower:</source>
          <target state="translated">&lt;code&gt;&amp;amp;block&lt;/code&gt; 構文を使用してブロックを転送することもできますが、少なくとも入力タイプを指定する必要があります。生成されたコードはクロージャーを含み、遅くなります。</target>
        </trans-unit>
        <trans-unit id="98b46a0db3302810f9318cdc6797ecdf5ff80c27" translate="yes" xml:space="preserve">
          <source>You can assign the same value to multiple variables using chained assignment:</source>
          <target state="translated">連鎖代入を使用して複数の変数に同じ値を代入することができます。</target>
        </trans-unit>
        <trans-unit id="f9503478fc02ce9f093165d13f359bfa478d7813" translate="yes" xml:space="preserve">
          <source>You can bind to variadic functions:</source>
          <target state="translated">可変関数にバインドすることができます。</target>
        </trans-unit>
        <trans-unit id="564eb7e28db5225b2ca05e24f0a3a37262fa5c4b" translate="yes" xml:space="preserve">
          <source>You can check if a flag is defined with the &lt;code&gt;flag?&lt;/code&gt; macro method:</source>
          <target state="translated">フラグがフラグで定義されている &lt;code&gt;flag?&lt;/code&gt; を確認できますか？マクロ法：</target>
        </trans-unit>
        <trans-unit id="25ad3b601bfae1e97573ce88a50e819c1d889edf" translate="yes" xml:space="preserve">
          <source>You can choose the Entry's compression method before adding it.</source>
          <target state="translated">エントリーの圧縮方法を選択してから追加することができます。</target>
        </trans-unit>
        <trans-unit id="af767ca6e24a4e3d471d01bd83776fe5e0c21849" translate="yes" xml:space="preserve">
          <source>You can compile and run specs from folder trees, individual files or specific lines in a file.</source>
          <target state="translated">フォルダツリー、個々のファイル、またはファイル内の特定の行から仕様をコンパイルして実行することができます。</target>
        </trans-unit>
        <trans-unit id="5a81e74eaecbff8526476c960bd6b27b4c4717ed" translate="yes" xml:space="preserve">
          <source>You can compile and run specs from folder trees, individual files, or specific lines in a file. If the specified line is the beginning of a &lt;code&gt;describe&lt;/code&gt; or &lt;code&gt;context&lt;/code&gt; section, all specs inside that group are run.</source>
          <target state="translated">フォルダツリー、個々のファイル、またはファイル内の特定の行から仕様をコンパイルして実行できます。指定された行が &lt;code&gt;describe&lt;/code&gt; または &lt;code&gt;context&lt;/code&gt; セクションの先頭である場合、そのグループ内のすべての仕様が実行されます。</target>
        </trans-unit>
        <trans-unit id="df5bbf4ae5893394384baf160e032d19f83ac456" translate="yes" xml:space="preserve">
          <source>You can declare/assign multiple variables at the same time by separating expressions with a comma (&lt;code&gt;,&lt;/code&gt;):</source>
          <target state="translated">式をコンマ（ &lt;code&gt;,&lt;/code&gt; ）で区切ることにより、複数の変数を同時に宣言/割り当てることができます。</target>
        </trans-unit>
        <trans-unit id="c2de6ffbb050ca76eb7aa766b3c4ccbf3f88bf27" translate="yes" xml:space="preserve">
          <source>You can define &lt;a href=&quot;../syntax_and_semantics/local_variables&quot;&gt;local variables&lt;/a&gt; without the need to specify their type:</source>
          <target state="translated">タイプを指定せずに&lt;a href=&quot;../syntax_and_semantics/local_variables&quot;&gt;ローカル変数&lt;/a&gt;を定義できます。</target>
        </trans-unit>
        <trans-unit id="d5e994cf5f59c409c8890d15cc4cc863fcf49276" translate="yes" xml:space="preserve">
          <source>You can define an operator for a type like this:</source>
          <target state="translated">このような型に対して演算子を定義することができます。</target>
        </trans-unit>
        <trans-unit id="f5115543192024094ab19434e0dbd0ef643e338c" translate="yes" xml:space="preserve">
          <source>You can easily create strings with embedded content, known as string interpolation. The language comes with other &lt;a href=&quot;../syntax_and_semantics/literals&quot;&gt;syntax&lt;/a&gt; as well to create arrays, hashes, ranges, tuples and more:</source>
          <target state="translated">文字列補間と呼ばれる、埋め込みコンテンツを含む文字列を簡単に作成できます。この言語には、配列、ハッシュ、範囲、タプルなどを作成するための他の&lt;a href=&quot;../syntax_and_semantics/literals&quot;&gt;構文&lt;/a&gt;も含まれています。</target>
        </trans-unit>
        <trans-unit id="69963bd8356ebd37ae70d4dde8aea3e5e3de12ee" translate="yes" xml:space="preserve">
          <source>You can indicate actual sources or patterns.</source>
          <target state="translated">実際のソースやパターンを示すことができます。</target>
        </trans-unit>
        <trans-unit id="887c6987fc352de4ca73c4a43de5f57d506cf3c6" translate="yes" xml:space="preserve">
          <source>You can invoke a &lt;strong&gt;fixed subset&lt;/strong&gt; of methods on AST nodes at compile-time. These methods are documented in a fictitious &lt;a href=&quot;http://crystal-lang.org/api/Crystal/Macros.html&quot;&gt;Crystal::Macros&lt;/a&gt; module.</source>
          <target state="translated">コンパイル時にASTノードでメソッドの&lt;strong&gt;固定サブセット&lt;/strong&gt;を呼び出すことができます。これらのメソッドは、架空の&lt;a href=&quot;http://crystal-lang.org/api/Crystal/Macros.html&quot;&gt;Crystal :: Macros&lt;/a&gt;モジュールに記載されています。</target>
        </trans-unit>
        <trans-unit id="81a3eb965c60e9d300a76b59b61650fa7950b982" translate="yes" xml:space="preserve">
          <source>You can invoke a &lt;strong&gt;fixed subset&lt;/strong&gt; of methods on AST nodes at compile-time. These methods are documented on the classes in this module. Additionally, methods of the &lt;code&gt;&lt;a href=&quot;macros&quot;&gt;Macros&lt;/a&gt;&lt;/code&gt; module are top-level methods that you can invoke, like &lt;code&gt;&lt;a href=&quot;macros#puts(*expressions):Nop-instance-method&quot;&gt;#puts&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;macros#run(filename,*args):MacroId-instance-method&quot;&gt;#run&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">コンパイル時にASTノードでメソッドの&lt;strong&gt;固定サブセット&lt;/strong&gt;を呼び出すことができます。これらのメソッドは、このモジュールのクラスで文書化されています。さらに、 &lt;code&gt;&lt;a href=&quot;macros&quot;&gt;Macros&lt;/a&gt;&lt;/code&gt; モジュールのメソッドは、 &lt;code&gt;&lt;a href=&quot;macros#puts(*expressions):Nop-instance-method&quot;&gt;#puts&lt;/a&gt;&lt;/code&gt; や &lt;code&gt;&lt;a href=&quot;macros#run(filename,*args):MacroId-instance-method&quot;&gt;#run&lt;/a&gt;&lt;/code&gt; のように、呼び出すことができる最上位のメソッドです。</target>
        </trans-unit>
        <trans-unit id="314d9cd435c53edcce3d5b0eca9a3a2750faa5f8" translate="yes" xml:space="preserve">
          <source>You can invoke a method on the &lt;code&gt;case&lt;/code&gt;'s expression in a &lt;code&gt;when&lt;/code&gt; by using the implicit-object syntax:</source>
          <target state="translated">暗黙オブジェクト構文を使用して、 &lt;code&gt;when&lt;/code&gt; の &lt;code&gt;case&lt;/code&gt; の式でメソッドを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="571016a835bd16f63698317173fcf34949b2987d" translate="yes" xml:space="preserve">
          <source>You can invoke a superclass' method using &lt;code&gt;super&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;super&lt;/code&gt; を使用してスーパークラスのメソッドを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="a6c7968656b0284b42e0f96ff18bfe8afdef2aa7" translate="yes" xml:space="preserve">
          <source>You can invoke the previously redefined method with &lt;code&gt;previous_def&lt;/code&gt;:</source>
          <target state="translated">以前に再定義したメソッドを &lt;code&gt;previous_def&lt;/code&gt; で呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="38b14512985f99537c617be88d951fed887a97cd" translate="yes" xml:space="preserve">
          <source>You can iterate a finite amount of times:</source>
          <target state="translated">有限回数の反復処理ができます。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
